{"ver":"0.1","info":{"id":"XcyyWW","date":"1731903370","viewed":24,"name":"能力辐射图","username":"shbby","description":"simple 2D shader ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float crossvec2(vec2 v1,vec2 v2)\n{\n    return cross(vec3(v1,0.0),vec3(v2,0.0)).z;\n}\nfloat random(float x,float a,float b)//[0,.5]\n{\n    return fract(sin(x+b)*a)/2.0;\n}\nint per4s()\n{\n    return  int(iTime/4.0);\n}\nvec3 boxPoint(vec2 uv,vec3 boxcolor,vec3 backcolor,float a,float b)\n{\n    float c = 0.0;\n    float angle =  radians(72.0);\n    float offest = radians(18.0);\n    vec2 p[5];\n    for(int i=0;i<5;i++)\n    {\n       p[i] = vec2(cos(angle*float(i)+offest),sin(angle*float(i)+offest))*random(float(per4s()+i+int(b)),a,b);\n    }\n    for(int i=0;i<5;i++)\n    {\n        c = crossvec2(p[(i+1)%5]-p[i],uv-p[i]);\n        if(c<0.0) return backcolor;\n    }\n    return mix(boxcolor,backcolor,0.6);\n}\nfloat pentagon(vec2 uv,float r)\n{\n    float angle =  radians(72.0);\n    float offest = radians(18.0);\n    vec2 p[5];\n    \n    for(int i =0;i<5;i++){\n        p[i] = vec2(cos(angle*float(i)+offest),sin(angle*float(i)+offest))*r;\n     }\n    float c =0.0;\n    float d=0.0;\n    float minc = 100.0;\n    for(int i=0;i<5;i++)\n    {\n       c = crossvec2(p[(i+1)%5]-p[i],uv-p[i]);\n       if(c<0.0) return 0.0;\n       minc = min(minc,c);\n     \n    }\n    return smoothstep(0.0,0.01,minc/r);\n}\nfloat pentagonEdge(vec2 uv,float outR,float inR)\n{\n    return pentagon(uv,outR)-pentagon(uv,inR);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    // Time varying pixel color\n    // Output to screen\n    float r = 0.3;\n    float edge = pentagonEdge(uv,0.505,0.48)+pentagonEdge(uv,0.4,0.38)+pentagonEdge(uv,0.3,0.28)+pentagonEdge(uv,0.2,0.18)\n    +pentagonEdge(uv,0.10,0.08);\n    vec3 box1 = boxPoint(uv,vec3(1.0,0.0,0.0),vec3(edge),42342.0,12312.0);\n    vec3 box2 = boxPoint(uv,vec3(0.0,1.0,1.0),box1,31234.0,123212.0);\n  //  vec3 b2 = mix(b1,box2,0.1);\n    fragColor = vec4(box2,1.0);\n}","name":"Image","description":"","type":"image"}]}