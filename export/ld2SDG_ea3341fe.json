{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"const int iterations = 32;\n\nvec2 Scale(vec2 p){\n    return (p*2.-iResolution.xy)/iResolution.y*1.5;\n}\n\nfloat DistanceToLine(vec2 p1, vec2 p2, vec2 p3){\n    vec2  d = p2-p1;\n    float t =  dot(p3-p1,d)/dot(d,d);\n\tt = clamp(t,0.,1.);//0 is p1, and 1 is p2 \n    return distance(p1 + d*t,p3);   \n}\n\n\nfloat Mandelbrot(vec2 z){\n    vec2 c = z;\n    \n    float its = 0.;\n    \n    for(int i=0;i<iterations;i++){\n       if(dot(z,z)>4.) break;\n\t   z = vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y)+c;  \n       its++;\n    }   \n    return its;\n}\n    \n\nfloat distanceToMandelbrotPointSpiral(vec2 z, vec2 p){\n    vec2 c = z;\n    float dis = 1e20;\n    for(int i=0;i<iterations;i++){\n       if(dot(z,z)>4.) break;  \n       vec2 newz = vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y)+c;   \n       dis = min(dis, DistanceToLine(z,newz,p));   \n       z = newz;\n    }    \n    return dis;   \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 sp = Scale(fragCoord.xy);\n    \n    vec3 col = vec3(0);\n    \n\tcol = vec3(Mandelbrot(sp)/float(iterations)); \n    \n    float dis = distanceToMandelbrotPointSpiral(Scale(iMouse.xy),sp);\n    if(dis<0.005){\n        col = vec3(1,0,0);\n    }\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ld2SDG","date":"1415656403","viewed":524,"name":"Mandelbrot : Spirals","username":"Gijs","description":"Visualizing what happens with a point on the complex plane when it gets moved by the mandelbrot function","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","spiral","complex"],"hasliked":0,"parentid":"","parentname":""}}