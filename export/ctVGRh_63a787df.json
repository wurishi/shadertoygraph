{"ver":"0.1","info":{"id":"ctVGRh","date":"1683556642","viewed":97,"name":"vvhhss","username":"greg1998","description":"vhs, feedback, lofi","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["feedback","vhs","lofi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Set up time variable\n    float time = iTime * 0.2;\n\n    // Normalize pixel coordinates\n    vec2 p = (2.0 * fragCoord.xy - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    // Apply feedback loop\n    p *= 1.5;\n    p = fract(p * 0.5 + vec2(time * 0.3, time * 0.2));\n    p /= 1.5;\n\n    // Generate color\n    vec3 col = vec3(0.0);\n    col.r = abs(sin(p.x * 162.0 + time * 20.0));\n    col.g = abs(sin(p.y * 1.0 + time * 4.0));\n    col.b = abs(sin((p.x + p.y) * 8.0 + time * 50.0));\n\n    // Add VHS-style distortion\n    col += 0.09 * vec3(sin(fragCoord.y * 0.11 + time), cos(fragCoord.x * 0.01 + time * 1.1), sin(fragCoord.x * 0.60 + time * 0.7));\n\n    // Output final color\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}