{"ver":"0.1","info":{"id":"mtf3z4","date":"1671377083","viewed":59,"name":"distance_field","username":"enzzz","description":"learning from \"the book of shaders\"","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 col;\n    float d;\n    \n    d = length(abs(uv) - 0.3);\n    //d = length(min(abs(uv) - 0.3, 0.0));\n    //d = length(max(abs(uv) - 0.3, 0.0));\n    \n    col = vec3(fract(d * 10.0));\n    \n\n    // Visualize the distance field\n    fragColor = vec4(col,1.0);\n    \n    // Drawing with the distance field\n    fragColor = vec4(vec3(step(0.3, d)), 1.0);\n    fragColor = vec4(vec3(step(0.3, d) * step(d, 0.4)), 1.0);\n    fragColor = vec4(vec3(smoothstep(0.3, 0.4, d) * smoothstep(0.6, 0.5, d)), 1.0);\n}","name":"Image","description":"","type":"image"}]}