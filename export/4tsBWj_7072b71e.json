{"ver":"0.1","info":{"id":"4tsBWj","date":"1521448842","viewed":675,"name":"Game of life - pixel perfect","username":"bleedingtiger2","description":"A simple game of life, where 1 pixel = 1 cell. White cells are stable, and purple ones are newborn cells.\n\nInputs :\n\n- Space bar to generate random cells all over the screen\n- Left click and move to generate local cells","likes":5,"published":3,"flags":48,"usePreview":0,"tags":["gameoflife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv*1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define T(u,v) texture(iChannel0, fragCoord/iResolution.xy + vec2(u,v)/iResolution.xy).x\n#define INTERVAL 4\n\nconst float KEY_SB    = 32.5/256.0;\n\n\nbool KeyIsPressed(float key){return texture( iChannel1, vec2(key, 0.0) ).x > 0.0;}\n\nfloat rnd(vec2 xy)\n{\n    float r = fract(sin(dot(xy, vec2(12.9898 + iTime, 78.233 + iTime)))* (43758.5453 + iTime));\n    return r>0.5?1.0:0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    //vec4 colorOnPosition = texture(iChannel0, q);\n    \n    \n    if(iFrame%INTERVAL==0) {\n    \t//fragColor = vec4(vec3(1.0),1.0);\n        \n        bool bCurrentlyAlive = T(0,0)==1.0;\n        float nbrVoisins = T(-1,1)  + T(0,1)  +  T(1,1) + \t\n            \t\t       T(-1,0)  + \t\t     T(1,0) +\n           \t\t\t\t   T(-1,-1) + T(0,-1) +  T(1,-1);\n        \n        if(bCurrentlyAlive && (nbrVoisins<2.0 || nbrVoisins>3.0)) {\n            fragColor = vec4(vec3(0.0), uv);\n        }\n        else if(!bCurrentlyAlive && nbrVoisins==3.0) {\n            fragColor = vec4(1.0, 0.3, 1.0, uv);\n        }\n        else {\n            if(T(0,0) == 1.0)\n            \tfragColor = vec4(vec3(1.0), uv);\n            else\n            \tfragColor = vec4(vec3(0.0), uv);\n        }\n        \n    }\n    else {\n    \tfragColor = texture(iChannel0, uv);\n    }\n    \n    \n    //if(iFrame%1000==0) {\n    if(iMouse.z>0.0) {\n        \n    \t//fragColor = texture(iChannel1, uv);\n        if(iMouse.x > fragCoord.x - 1.5 && iMouse.x < fragCoord.x + 1.5 && \n           iMouse.y > fragCoord.y - 1.5 && iMouse.y < fragCoord.y + 1.5)\n        {\n            fragColor = vec4(1.0);\n        }\n    }\n    if(KeyIsPressed(KEY_SB) || iFrame < 10) {\n    \tfragColor = vec4(vec3(rnd(uv)), 1.0);\n    }\n    \n    \n    //fragColor = vec4(vec3(iTime/100.0), fragCoord);\n}","name":"Buf A","description":"","type":"buffer"}]}