{"ver":"0.1","info":{"id":"XdKcWz","date":"1521835488","viewed":85,"name":"Star Iluminating Planet","username":"lschmidt","description":"Star Illuminating Planet","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["light","star","planet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// parameters\nvec2 tela = vec2(1000,1000);\n\nvec3 SunPosition = vec3(500,-500,0);\n\nvec3 EarthPosition = vec3(500,500,0);\n    \nfloat radiusEarth = 100.0;\n\nfloat angle = 1.7;\n\nfloat intensity = 2.0;\nfloat intensity1 = 1.4;\n// parameters\n\n\nvec2 WordlToScreen(vec3 pos){\n\treturn pos.xy/tela;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    SunPosition.xy = vec2(500,500)+vec2(cos(iTime),sin(iTime))*400.0;\n    vec2 uv = (fragCoord/iResolution.xx)+0.2;\n    \n    vec2 sunPosScreen = WordlToScreen(SunPosition);\n    \n    vec2 earthPosScreen = WordlToScreen(EarthPosition);\n    \n    float raiusEarthScreen = radiusEarth/tela.x;\n    \n    vec3 space = vec3(0.0,0.0,0.0);\n    \n    vec3 earthColor = vec3(0.0,0.2,0.4);\n    \n    vec2 diff = earthPosScreen - vec2(raiusEarthScreen,raiusEarthScreen);\n    \n    vec2 uvp = 1.0/raiusEarthScreen*(uv-diff);\n    \n    vec3 dir = vec3(0.0,-1.0,0.0);\n    \n    float x = uvp.x*angle;\n    float y = uvp.y*angle;\n    float z = uvp.y*angle;\n    \n    vec3 pos = vec3(sin(y)*cos(x),sin(y)*sin(x),cos(y))*radiusEarth;\n    vec3 normal = normalize(pos);\n    \n    vec3 v = normalize(SunPosition - EarthPosition+pos);\n    \n    float dist = distance(uv,earthPosScreen);\n    \n    if(dist<raiusEarthScreen){\n        float d = intensity*max(0.0,1.0-dot(v,normal));\n        float d1 = intensity1*max(0.0,(dot(dir,v)));\n        fragColor = vec4(d*d1*earthColor,1.0);\n    }else{\n    \tfragColor = vec4(space,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}