{"ver":"0.1","info":{"id":"dslfR7","date":"1692722569","viewed":30,"name":"USA Flag (2)","username":"poweredbygeeko","description":"USA Flag","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["flag","usa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.141592\n\nfloat toRadians(float angle) {\n    return angle * pi / 180.;\n}\n\nfloat map(float minA, float maxA, float minB, float maxB, float value) {\n    return minB + (value - minA) * (maxB - minB) / (maxA - minB);\n}\n\nfloat star(vec2 uv) {\n    \n    uv = vec2(abs(uv.x), uv.y);\n    float w = fwidth(uv.y);\n    float size = 0.1;\n    float star = 0.;\n      \n    float angle = - pi / 2.;\n    float value = dot(vec2(cos(angle), sin(angle)), uv);\n    value = step(0., value + size);\n    star += value;\n    \n    angle = toRadians(40. + 90.);\n    value = dot(vec2(cos(angle), sin(angle)), uv);\n    value = step(0., value + size);\n    star *= value;\n\n    angle = toRadians(-70. - 90.);\n    value = dot(vec2(cos(angle), sin(angle)), uv);\n    value = step(0., value + size);\n    star = max(star, value);\n    \n    angle = toRadians(-32.5 + 90.);\n    value = dot(vec2(cos(angle), sin(angle)), uv);\n    value = step(0., value + size);\n    star *= value;\n    \n    return star;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    float borderSize = 0.15;\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    uv = vec2(map(borderSize, 1. - borderSize, 0., 1., uv.x) + borderSize / 2.,\n              map(borderSize, 1. - borderSize, 0., 1., uv.y) + borderSize / 2.\n    );\n              \n    float uvOperand = iTime * 1.5 + uv.x * 7. + uv.y * 2.;\n    uv.y += sin(uvOperand) * 0.035;\n    \n    vec2 st = vec2(map(0., 0.5, 0., 1., uv.x),\n                   map(0.5, 1., 0., 1., uv.y) / 0.5\n    );\n    \n    int stripesAmount = 10;\n    \n    float stripes = mod(uv.y, 2. / float(stripesAmount)); \n    stripes *= float(stripesAmount) / 2.;\n    stripes = stripes < 0.5 ? 1. : 0.;\n    \n    vec2 count = vec2(10, 5);\n\n    vec2 localUV = st * count;\n    float aspect = count.y / count.x;\n    localUV = fract(localUV);\n    localUV -= 0.5;\n    localUV.x *= aspect * 1.5;\n    \n    float mask = st.x < 1. && st.y > 0. && st.y < 1. ? 1. : 0.;\n    float stars = star(localUV);\n    stars *= mask;\n    \n    vec3 red = vec3(1, 0, 0);\n    vec3 blue = vec3(0, 0, 1);\n    \n    vec3 color = mix(red, vec3(1), stripes);\n    color = mix(color, blue, mask);\n    color += stars;\n    \n    color = mix(vec3(0), color, uv.x >= 0. && uv.x <= 1. && uv.y >= 0. && uv.y <= 1. ? 1. : 0.);\n    color *= 0.75 - cos(uvOperand) * 0.25;\n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}