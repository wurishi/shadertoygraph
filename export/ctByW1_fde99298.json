{"ver":"0.1","info":{"id":"ctByW1","date":"1703536814","viewed":11,"name":"glitch audio","username":"suwqymncwec","description":"soundcloud nonsense, fft","likes":0,"published":1,"flags":64,"usePreview":0,"tags":["fft","glitch"],"hasliked":0,"parentid":"ddcGz2","parentname":"random ewf23t2y23t23"},"renderpass":[{"inputs":[{"id":"4lSXWt","filepath":"https://soundcloud.com/hyperboloid/al-90-conductor","previewfilepath":"https://soundcloud.com/hyperboloid/al-90-conductor","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Input - Sound       : https://www.shadertoy.com/view/Xds3Rr\n// Input - SoundCloud  : https://www.shadertoy.com/view/MsdGzn\n// Input - Time        : https://www.shadertoy.com/view/lsXGz8\n// Input - TimeDelta   : https://www.shadertoy.com/view/lsKGWV\n// Inout - 3D Texture  : https://www.shadertoy.com/view/4llcR4\n\n#define Pi 3.14159\n#define QPi Pi/4.\n#define HPi Pi/2.\n\nfloat rand(vec2 c, float tt){\n    float t = 1.-cos(tt);\n\tfloat r = fract(t*sin(dot(c.xy,vec2(12.9898,78.233))) * 43758.5453);\n    return floor(r*255.)/255.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // create pixel coordinates\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float yy = uv.y;\n    //uv.y = floor(uv.y * 100.)/100.;\n    //uv.x = floor(uv.x * 400.)/400.;\n    uv = (uv - 0.5) * .85 + 0.5;\n    \n\n    if (uv.x < .5) {\n        uv.x = 1.-uv.x;\n    }\n    \n    \n    float mid = texture( iChannel0, vec2(.125,0.25) ).x;\n    float bass = texture( iChannel0, vec2(.025,0.25) ).x;\n    \n    if (mid > .5) {\n        \n        if (uv.y > .5) {\n            uv.y = 1.-uv.x;\n        } else {\n            uv.y = 1. - uv.y;\n        }\n    } else {\n       \n         if (uv.y < .5) {\n            uv.y = 1. - uv.x;\n        } else {\n             //uv.y = 1. - uv.y;\n         }\n    }\n    \n    uv.y *= bass;\n\t\n    // second texture row is the sound wave\n\tfloat wave = texture( iChannel0, vec2(uv.x,0.75) ).x;\n    float size = 20.*uv.x;\n    float light = 3.*mid;\n    //float d = 1.-distance(floor(uv*size)/size, vec2(.5));\n    //d = pow(d, -10.);\n\n\tfloat fft  = texture( iChannel0, vec2(uv.x,0.25) ).x; \n    float tt = fft;\n\n    \n    // else\n    if (mid > .45) {\n        uv.x = floor(uv.x*size)/size;\n        uv.y = floor(uv.y*80.*mid)/80.*mid;\n    } else {\n        uv = floor(uv*size)/size;\n    }\n\n\n    \n    vec3 color = vec3(\n        rand(uv.yx, tt), \n        rand(1.-uv.yy, tt), \n        rand(uv.xy, tt))/light;\n    \n    float c = .001+bass;\n    float t = .001+mid;\n    \n    if ((mid > .55 && yy < .5 && uv.x > .25) \n    || (yy > .5 && mid < .45 && uv.x > .25)) {\n        if (color.x > max(color.y, color.z)) {\n            color.x *= c;\n            color.y = color.z = min(color.y, color.z)*t; \n        }\n\n        if (color.y > max(color.x,color.z)) {\n            color.y *= c;\n            color.z = color.x = min(color.x, color.z)*t; \n        }\n\n        if (color.z > max(color.y, color.z)) {\n            color.z *= c;\n            color.y = color.x = min(color.y, color.x)*t; \n        }\n    }\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}