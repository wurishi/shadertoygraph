{"ver":"0.1","info":{"id":"ttlXWH","date":"1590327295","viewed":84,"name":"color tests by sid","username":"sidchou","description":"color tests","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["colortests"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\nvec3 color(float t) {\n\tvec3 a = vec3(0.5);\n    vec3 b = vec3(0.5);\n    vec3 c = vec3(1.);\n    //vec3 c = vec3(.2,.3,.7);\n    //vec3 d = vec3(1., 0.2, 0.4);//ranbow\n    vec3 d = vec3(0., .8, 0.7);//B>R\n    //vec3 d = vec3(.6, 0.3, 0.7);\n    return a + b * cos(2.0*PI*(c*t + d));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n    float time = iTime*10.;\n/*\n    uv.x-=uv.y;\n    uv.y+=cos(uv.x*10.)*.2;\n*/\n    \n/*\n    uv.x-=uv.y*.2;\n    uv.y+=cos(uv.x*.3+sin(time*.2+1.))*((sin(time*.1)+sin(time*.2+.1))*.1);\n    //uv.y*=cos(iTime*.1)*.05+1.;\n    uv.y+=uv.y*uv.x;\n*/\n\n    vec3 col = color(uv.y*3.-iTime*.8);\n\n    uv.x-=uv.y;\n    uv.y+=cos(uv.x*10.)*.2;\n    vec3 col2 = color(uv.y*3.-iTime*.8);\n    col*=col2;\n    //col*=max(col,(col2));\n    //col*=mix(col,(col2),(sin(iTime*.5)*.5+.5));\n    //col += sin(length(uv))*.1+.5;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}