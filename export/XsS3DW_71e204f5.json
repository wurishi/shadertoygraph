{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"mat4 rotationMatrix(vec3 axis, float angle)\n{\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n                0.0,                                0.0,                                0.0,                                1.0);\n\t//http://www.neilmendoza.com/glsl-rotation-about-an-arbitrary-axis/\n}\n\nfloat f(float t, vec3 o, vec3 d) {\n    float x = o.x + t * d.x;\n    float y = o.y + t * d.y;\n    float z = o.z + t * d.z;\n\t\n\tfloat start = pow((pow(x, 2.0) + (9.0/4.0) * pow(y, 2.0) + pow(z, 2.0) - 1.0), 3.0);\n\tfloat next = -pow(x, 2.0) * pow(z, 3.0) - (9.0/200.0) * pow(y, 2.0) * pow(z, 3.0);\n\treturn start + next;\n}\n\nfloat root(vec3 o, vec3 d) {\n\tfloat t0 = 0.0;\n\tfloat t1 = 10.0;\n\tfloat t2 = 0.0;\n\tfor (int i = 0; i < 40; i++) {\n\t\tfloat top = t0 * f(t1, o, d) - t1 * f(t0, o, d);\n\t\tfloat bottom = f(t1, o, d) - f(t0, o, d);\n\t\tif (bottom == 0.0) {\n\t\t\tbottom = 0.000000000001;\n\t\t}\n\t\tt2 = top / bottom;\n\t\tt0 = t1;\n\t\tt1 = t2;\n\t}\n\treturn t2;\n}\n\nvec3 intersectionPos(vec3 o, vec3 d) {\n\tfloat t = root(o, d);\n\tif (t < -5.0) {\n\t\treturn vec3(100.0, 100.0, 100.0);\n\t}\n\treturn o + t * d;\n}\n\nvec3 gradient(vec3 pos) {\n\tfloat x = pos.x;\n\tfloat y = pos.y;\n\tfloat z = pos.z;\n\t\n\tfloat dx = 6.0 * pow( (pow(x, 2.0) + (9.0 / 4.0) * pow(y, 2.0) + pow(z, 2.0) - 1.0), 2.0 )\n\t\t* x - 2.0 * x * pow(z, 3.0);\n\t\n\tfloat dy = (27.0/2.0)*pow( (pow(x,2.0)+(9.0/4.0)*pow(y,2.0)+pow(z,2.0)-1.0), 2.0 )\n\t\t*y-(9.0/100.0)*y*pow(z, 3.0);\n\t\n\tfloat dz = 6.0*pow( (pow(x,2.0)+(9.0/4.0)*pow(y,2.0)+pow(z,2.0)-1.0), 2.0 )\n\t\t*z-3.0*pow(x,2.0)*pow(z, 2.0)-(27.0/200.0)*pow(y,2.0)*pow(z,2.0);\n\t\n\treturn vec3(dx, dy, dz);\n}\n\nvec4 shade(vec3 pos, vec3 N, vec3 view) {\n\tvec3 lightDir = vec3(0, 1, 1);\n\tmat4 rot = rotationMatrix(vec3(0, 0, 1), iTime * 0.7);\n\tlightDir = (rot * vec4(lightDir, 0.0)).xyz;\n\tlightDir = normalize(lightDir);\n\n\tvec3 lightColor = vec3(1, 0, 0);\n\tvec3 specularColor = vec3(1, 1, 1);\n\t\n\tfloat NdotL = max(dot(N, lightDir), 0.0);\n\t\n\tvec3 diffuse = NdotL * lightColor;\n\t\n\tvec3 H = normalize(lightDir + view);\n    vec3 specular = specularColor * pow(dot(N, H), 79.0);\n\t\n\tvec4 color = vec4((diffuse + specular), 1.0);\n\treturn color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat size = 4.0;\n\tsize += mod(iTime / 4.0, 0.5);\n\tvec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n\tuv.y = 0.7 * uv.y;\n\tuv = size * uv;\n\tvec3 cameraPos = vec3(0, 1.0, 0);\n\tvec3 uv2 = vec3(uv.x, 0.0, uv.y);\n\t\n\tvec3 rotAxis = vec3(0, 0, 1);\n\tvec3 rotAxis2 = vec3(1, 0, 0);\n\t//float angle = 0.5 * sin(iTime);\n\t//float angle2 = 0.5 * cos(iTime);\n\tfloat angle = 0.7 * iTime;\n\tfloat angle2 = 0.0;\n\tmat4 rot = rotationMatrix(rotAxis, angle);\n\tmat4 rot2 = rotationMatrix(rotAxis2, angle2);\n\tcameraPos = (rot * rot2 * vec4(cameraPos, 1.0)).xyz;\n\t\n\tvec3 rayDirection = vec3(0, -1, 0);\n\trayDirection = normalize((rot * rot2 * vec4(rayDirection, 0.0)).xyz);\n\tuv2 = (rot * rot2 * vec4(uv2, 1.0)).xyz;\n\t\n    vec3 rayOrigin = cameraPos + uv2;\n\t//rayOrigin.z +=  1.0 * sin(iTime);\n\t//rayOrigin.x +=  1.0 * cos(iTime);\n\t\n\t//rayDirection.z += 1.0 * sin(iTime);\n\t//rayDirection = normalize(rayDirection);\n\n\tvec3 pos = intersectionPos(rayOrigin, rayDirection);\n\tvec3 normal = normalize(gradient(pos));\n\tvec4 color;\n\tif (pos.x == 100.0)\n\t\tcolor = vec4(0, 0, 0, 1);\n\telse \n\t\tcolor = shade(pos, normal, -rayDirection);\n\t\n\tfragColor = color;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsS3DW","date":"1387731893","viewed":305,"name":"HyvÃ¤Ã¤ joulua Anniina! <3","username":"atte","description":":)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raycasting","heart","implicit","surface"],"hasliked":0,"parentid":"","parentname":""}}