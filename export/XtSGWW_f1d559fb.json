{"ver":"0.1","info":{"id":"XtSGWW","date":"1428764378","viewed":548,"name":"Some kind of broken rotozoomer ","username":"frankier","description":":)","likes":6,"published":1,"flags":2,"usePreview":0,"tags":["rotozoomer","broken"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define PI 3.14159265359\n\n// fragCoord x 0..320 y 0..200\n\n// iChannel0 0..1 0..1\n\n// iChannelResolution 0..320 0..240\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.x - 0.5) * 2.0;\n    float bendAngle = sin(iTime*0.1)*0.25*PI;\n    float z = (1.0-uv.y) * tan(bendAngle);\n    uv = uv / (z+1.0);\n    // uv x -1..1 y -0.7..0.7\n    vec2 zoomUv = uv * ((sin(iTime)+1.0)*5.0+0.5);\n    float rotAngle = mod(iTime*0.2, 2.0*PI);\n    // rotAngle 0..2pi\n    vec2 rotuv = vec2(\n        zoomUv.x * cos(rotAngle) - zoomUv.y * sin(rotAngle),\n        zoomUv.x * sin(rotAngle) + zoomUv.y * cos(rotAngle)\n    );\n    vec2 aspectCorrected = rotuv * iChannelResolution[0].yx / iChannelResolution[0].x;\n    \n    vec2 repRotUv = mod(aspectCorrected, 1.0);\n    vec4 camPx = texture(iChannel0, repRotUv);\n\tfragColor = camPx;\n}","name":"","description":"","type":"image"}]}