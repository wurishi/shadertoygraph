{"ver":"0.1","info":{"id":"sljSWK","date":"1628678707","viewed":99,"name":"Interference1","username":"SteelFlame","description":"1","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = texture(iChannel0,uv);\n\n\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 point1 = vec2(0.5,0.5);\nvec2 point2 = vec2(0.1,0.1);\nvec2 point3 = vec2(.9,0.5);\n\nvec2 lineStart = vec2(0.3,0.2);\nvec2 lineEnd = vec2(0.8,0.4);\n\nfloat frequency = 100.;\n\nfloat rayLineDst(vec2 p1, vec2 p2, vec2 origin, vec2 direction, float thickness) {\n    vec2 lineNormal = normalize(vec2(p1.y-p2.y,p2.x-p1.x));\n    float t = dot(p1-origin,lineNormal)/dot(direction,lineNormal);\n    vec2 pos = origin+direction*t;\n    float alongLineT = dot(p1-pos,-normalize(p2-p1));\n    if (alongLineT < 0. || alongLineT > length(p2-p1)) return 0.;\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    point2 = iMouse.xy/iResolution.xy;\n    \n    float v1 = (sin(length(uv-point1)*frequency-iTime*5.-3.14));\n    float t1 = rayLineDst(lineStart,lineEnd,uv,-normalize(uv-point1),0.);\n    \n    float v2 = (sin(length(uv-point2)*frequency-iTime*5.));\n    float t2 = rayLineDst(lineStart,lineEnd,uv,-normalize(uv-point2),0.);\n    \n    float v3 = (sin(length(uv-point3)*frequency))*0.;\n    \n    float v = 0.;\n    if (t1 <= 0. || t1 > length(point1-uv)) {\n        v+=v1;\n    } else {\n        vec2 pos = uv-normalize(uv-point1)*t1;\n        float alongLineT = dot(lineStart-pos,-normalize(lineEnd-lineStart));\n        float inLineTUv = alongLineT/length(lineEnd-lineStart);\n        inLineTUv -= 0.5;\n        inLineTUv *= 2.;\n        inLineTUv = abs(inLineTUv);\n        inLineTUv = max(.3,inLineTUv);\n        \n        v+=v1*(inLineTUv*inLineTUv*inLineTUv);\n    }\n    if (t2 <= 0. || t2 > length(point2-uv)) {\n        v+=v2;\n    } else {\n        vec2 pos = uv-normalize(uv-point2)*t2;\n        float alongLineT = dot(lineStart-pos,-normalize(lineEnd-lineStart));\n        float inLineTUv = alongLineT/length(lineEnd-lineStart);\n        inLineTUv -= 0.5;\n        inLineTUv *= 2.;\n        inLineTUv = abs(inLineTUv);\n        inLineTUv = max(.3,inLineTUv);\n        \n        v+=v2*(inLineTUv*inLineTUv*inLineTUv);\n    }\n    fragColor = vec4(v,0.,-v,0.);\n\n\n    float inLineT = dot(uv-lineStart,normalize(lineEnd-lineStart));\n    float lineDst = pow(length(uv-lineStart),2.)-pow(inLineT,2.);\n    if (sqrt(lineDst) < 0.004 && (inLineT > 0. && inLineT < length(lineEnd-lineStart))) {\n        fragColor = vec4(.55,.5,.69,1.);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}