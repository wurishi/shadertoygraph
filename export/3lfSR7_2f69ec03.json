{"ver":"0.1","info":{"id":"3lfSR7","date":"1562356490","viewed":187,"name":"Simple Cartesian Plane","username":"badjano","description":"Simple Cartesian Plane","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","plane","function","cartesian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float aafract(float x) {\n    float v = fract(x),\n          w = fwidth(x);\n    return v < 1.-w ? v/(1.-w) : (1.-v)/w;\n}\n\nfloat grid(float a)\n{\n    return aafract(a);\n}\n\nfloat line(float a)\n{\n    return clamp(abs(a)/fwidth(a),0.,1.);\n}\n\nfloat function(float x){\n    // this is where you change the function\n    return pow(x,x); // 0 powered by 0 is 1 :)\n}\n\nfloat draw(vec2 uv){\n    return line((function(uv.x)-uv.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - (iMouse.w < .5 ? iResolution.xy*.5 : iMouse.xy))/iResolution.y;\n\tuv *= sin(iTime)*10. + 13.; // zoom\n    float b = line(min(grid(uv.x),grid(uv.y)));\n    float c = line(min(abs(uv.x),abs(uv.y)));\n    fragColor = draw(uv) * vec4(c,b*c,1.,1.);\n}","name":"Image","description":"","type":"image"}]}