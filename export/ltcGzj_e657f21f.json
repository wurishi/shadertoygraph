{"ver":"0.1","info":{"id":"ltcGzj","date":"1471528135","viewed":261,"name":"Hex Maping","username":"darksky505","description":"Hex \n\nBeen playing with hex stuff from http://www.redblobgames.com/grids/hexagons/\n\nMain issue is dealing glsl es 2.0  like having to use const array index ugh\n\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int Wrap(int index, int size);\n\nconst int width = 2;\nconst int height = 2;\nvec3 map[height * width]; \nint indexArray(int row, int col);\nvoid GetColourFromMap(int id, inout vec3 colour);\nvoid Map2D( int x , int y , inout  vec3 colour );\n    \nvoid RoundHex(vec3 h ,  out float  x, out float y ,  out float z);\nvoid CubeToOffsetR(float x , float y ,  float z , out float  row ,out float  col);\nvoid PixleToHexInCube(vec2 pixle , out float x, out float y , out float z );\n\n\nint Mod(float  x , float y);\n \nvoid Init();\nvec4 DrawMap(vec2 uv);\nvoid ChangeHex();\n\n    ////\nbool hasInit = false;\n\nfloat size = 0.05;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(!hasInit)\n    {\n       Init(); \n    }\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y *= iResolution.y/iResolution.x; // This makes the map sqaure by dealing with screen ratio\n \n \tChangeHex();\n    \n   fragColor  = DrawMap(uv);;\n        \n}\n\nvoid Init()\n{\n    map[indexArray(0 ,0 )] = vec3(0,0,0);\n    map[indexArray(0 ,1 )] = vec3(0,1,0);\n    map[indexArray(1 ,1 )] = vec3(0,0,1);\n\tmap[indexArray(1 ,0 )] = vec3(1,0,0);\n\n\thasInit = true;\n}\n\n\nint Wrap(int index, int size)\n{ \n    float x = float(size);\n    float y = float(index);\n    index = Mod (y,x) ;\n   \n   return index;\n}\n\n\n int indexArray(int row, int col)\n {\n   return  width * row + col;\n }\n\n\nvoid GetColourFromMap(int id, inout vec3 colour)\n{\n    if( id == 0 ) colour = map[0];\n    else if( id== 1 ) colour = map[1];\n    else if( id== 2 ) colour = map[2];\n    else  if( id== 3 ) colour = map[3];/*\n    else  if( id== 4 ) return map[4];\n    else  if( id== 5 ) return map[5];\n    else  if( id== 6 ) return map[6];\n    else  if( id== 7 ) return map[7];\n    else  if( id== 8 ) return map[8];\n    else  if( id== 9 ) return map[9];\n    else  if( id== 10 ) return map[10];\n    else  if( id== 11 ) return map[11];\n    else  if( id== 12 ) return map[12]; \n*/\n    \n    \n}\n\nvoid Map2D( int x , int y , inout vec3 colour )\n{\n    GetColourFromMap(indexArray(Wrap(x,width ) , Wrap(y , height ) ) , colour);\n}\n\n \n\nint Mod(float  x , float y)\n{\n    int z = int(x - y * floor(x/y) );\n\treturn z;\n}\n \nvoid RoundHex(vec3 h ,  out float  x, out float y ,  out float z)\n{\n\tfloat rx = round(h.x);\n    float ry = round(h.y);\n    float rz = round(h.z);\n\n    float x_diff = abs(rx - h.x);\n    float y_diff = abs(ry - h.y);\n    float z_diff = abs(rz - h.z);\n\n    if ((x_diff > y_diff )&&( x_diff > z_diff))\n    {\n        rx = -ry-rz;\n    }\n    else if (y_diff > z_diff)\n    {\n        ry = -rx-rz;\n\t} else\n    {\n        rz = -rx-ry;\n\t}\n\n    x = rx;\n    y = ry;\n    z = rz;\n}\n\nvoid CubeToOffsetR(float x , float y ,  float z , out float  row ,out float  col)\n{\n    //Convert Cube to right offset\n\t col = x;\n\t row = z + (x + (float (Mod(x , 2.0 ))) )/ 2.0;\n}\n\nvoid PixleToHexInCube(vec2 pixle , out float x, out float y , out float z )\n{\n    //this coverts point to cube coorqd of hex\n    x = pixle.x  * 2.0/3.0 / size;\n    y = (-pixle.x  / 3.0 + sqrt(3.0)/3.0 * pixle.y) / size;\n    z = -x - y;    \n}\n\nvec4 DrawMap(vec2 uv)\n{\n    float x;\n    float y;\n    float z;\n\n    PixleToHexInCube(uv , x ,y ,z);\n    RoundHex(vec3(x , y ,z ) , x , y ,z);    \n\n    float col;\n    float row;\n    CubeToOffsetR(x, y ,z , row , col);\n\n  \tvec3  colour ;\n    Map2D (int(col) ,int(row), colour);\n    return vec4(colour , 1) ;   \n}\n\nvoid ChangeHex()\n{\n    //this should change on click :(\n        \n        float x;\n        float y;\n        float z;\n\n        PixleToHexInCube(iMouse.xy , x , y ,z);\n        RoundHex(vec3(x , y ,z ) , x , y ,z);    \n\n        float col;\n        float row;\n        CubeToOffsetR(x, y ,z , row , col);\n        vec3 colour;\n \t\t//Map2D (int(col) ,int(row), colour ) ;\n        Map2D (1 ,0, colour ) ;\n\n     colour= vec3(0.5,0.5,0.5);\n        \nGetColourFromMap (0 , colour ); \n}","name":"Image","description":"","type":"image"}]}