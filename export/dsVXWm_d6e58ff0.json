{"ver":"0.1","info":{"id":"dsVXWm","date":"1681223207","viewed":99,"name":"pasatiempo-01","username":"jorge2017a2","description":"pasatiempo-01","likes":4,"published":1,"flags":8,"usePreview":0,"tags":["pasatiempo01"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(1.0),b,d)\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\nvec3 Monito1(vec2 p , vec3 colOut)\n{\n    \n   float d0=sdCircle(p-vec2(0.0,1.2), 0.25 );\n   float d1= sdBox( p,vec2(0.05,1.0) );\n   //brazo\n   float d2a=sdSegment( p-vec2(0.0,-0.5), vec2(0.0,1.5), vec2(-0.5,0.0) );\n   float d2b=sdSegment( p-vec2(0.5, -0.5), vec2(-0.5,1.5), vec2(0.0,0.0) );\n   //piernas\n   float d3a=sdSegment( p-vec2(0.0,-2.0), vec2(0.0,1.5), vec2(-0.4,0.0) );\n   float d3b=sdSegment( p-vec2(0.4,-2.0), vec2(-0.4,1.5), vec2(0.0,0.0) );\n   \n   vec3 col=colOut;\n   col=DrawFigBorde(vec3(0.0), col,d0);\n   col=DrawFigBorde(vec3(0.0), col,d1);\n   col=DrawFigBorde(vec3(0.0), col,d2a-0.05);\n   col=DrawFigBorde(vec3(0.0), col,d2b-0.05);\n   \n   col=DrawFigBorde(vec3(0.0), col,d3a-0.05);\n   col=DrawFigBorde(vec3(0.0), col,d3b-0.05);\n   return col;\n}\n\nvec3 Monito2(vec2 p , vec3 colOut)\n{  float d0=sdCircle(p-vec2(0.0,1.2), 0.25 );\n   float d1= sdBox( p,vec2(0.05,1.0) );\n   //brazo\n   float d2a=sdSegment( p-vec2(0.0,-0.5), vec2(0.0,1.25), vec2(-0.5-0.7,1.5) );\n   float d2b=sdSegment( p-vec2(0.5,-0.5), vec2(-0.5,1.25), vec2(0.0+0.7,1.5) );\n   //piernas\n   float d3a=sdSegment( p-vec2(0.0,-2.0), vec2(0.0,1.5), vec2(-0.4,0.0) );\n   float d3b=sdSegment( p-vec2(0.4,-2.0), vec2(-0.4,1.5), vec2(0.0,0.0) );\n      \n   vec3 col=colOut;\n   col=DrawFigBorde(vec3(0.0), col,d0);\n   col=DrawFigBorde(vec3(0.0), col,d1);\n   col=DrawFigBorde(vec3(0.0), col,d2a-0.05);\n   col=DrawFigBorde(vec3(0.0), col,d2b-0.05);\n   col=DrawFigBorde(vec3(0.0), col,d3a-0.05);\n   col=DrawFigBorde(vec3(0.0), col,d3b-0.05);  \n   return col;\n}   \n\nvec3 hacerEscalera(vec2 p , vec3 colOut)\n{   \n    vec3 col=colOut;\n    float t=mod(iTime,3.0);\n    float t2=mod(iTime*4.0,2.0);\n    float t1=floor(fract(iTime*0.5)*3.);\n    \n    if(t>0.0 && t<=1.0)\n    {\n        if(t2>0.0 && t2<=1.0 )\n        col= Monito1(p-vec2( 0.0+2.0,0.0) , col);\n        else\n        col= Monito2(p-vec2( 0.0+2.0,0.0) , col);\n    }    \n    else if(t>1.0 && t<2.0)\n    {\n        if(t2>0.0 && t2<=1.0 )\n            col= Monito1(p-vec2(-1.4+2.0,1.4) , col);\n        else\n            col= Monito2(p-vec2(-1.4+2.0,1.4) , col);\n    }\n    else if(t>2.0 && t<3.0)\n    {\n        if(t2>0.0 && t2<=1.0 )\n            col= Monito1(p-vec2(-2.8+2.0,2.8) , col);\n        else\n            col= Monito1(p-vec2(-2.8+2.0,2.8) , col);\n    }\n    float d=9999.9;\n     p.x+=7.0;\n    p.y-=7.0;\n    \n    for(float i=0.0;i<13.0;i++)\n    {\n        float d1=sdBox( p+vec2(-0.7-0.7*i*2.0,0.7+0.7*i*2.0),vec2(0.7,0.05) ); //horizontal\n        float d2=sdBox( p+vec2(-0.7*i*2.0 ,0.7*i*2.0),vec2(0.05,0.7) );//vertical\n        d=min(d,d1);\n        d=min(d,d2);\n    }\n    col=DrawFigBorde(vec3(0.0), col,d);\n    return col;\n}\n\nvec3 rostroRisa(vec2 p, vec3 colOut)\n{\n    vec2 p1=p;\n    float t=mod(iTime,1.0);\n    float d0=sdCircle(p-vec2(0.0,1.2), 3.0 );\n    p1.x=abs(p.x)+0.15;\n    float d1=sdCircle(p1-vec2(1.0,1.5-t), 0.2 );\n    //sonrisa\n    float d2a=sdBezier( p+vec2(0.0,t), vec2(-1.0,0.0), vec2(0.0,-1.0), vec2(1.0,0.0) );\n    float d2b=sdCircle(p-vec2(0.0,-t), 0.8 );\n    float d2=mix(d2a,d2b, fract(iTime*0.25));\n    \n    vec3 col=colOut;\n    col=DrawFigBorde(vec3(0.0), col,abs(d0)-0.05);\n    col=DrawFigBorde(vec3(0.0), col,d1);\n    col=DrawFigBorde(vec3(0.0), col,abs(d2)-0.05);\n    return col;\n}\n\n\nmat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c,s,-s,c);\n}\n\nconst float speed = 2.0;\nconst float wobblyness = 3.0;\nconst float shiftStrength = 0.25;\n\n//https://www.shadertoy.com/view/stdfzr\nvec2 moverImagen( vec2 uv )\n{   uv.x -= sin((iTime * speed) + (uv.y * wobblyness)) * shiftStrength;\n    uv.x = mod(uv.x, 20.);\n    return uv;\n}\n\nvec2 moverImagen02( vec2 uv )\n{   uv.x -= sin((iTime * speed) + (uv.y * wobblyness)) * shiftStrength;\n    return uv;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(0.0,-0.5);\n    float esc=8.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    uv0 = moverImagen02( uv);\n    vec3 col=vec3(1.0);\n    uv-=vec2(0.0,5.0);\n    col=hacerEscalera(uv, col);\n    col=rostroRisa(uv-vec2(-4.0,-4.0),col);\n    col=rostroRisa(uv0-vec2(9.0,0.0),col);\n    //col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//https://iquilezles.org/articles/distfunctions2d\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\nfloat sdBezier( in vec2 pos, in vec2 A, in vec2 B, in vec2 C )\n{    \n    vec2 a = B - A;\n    vec2 b = A - 2.0*B + C;\n    vec2 c = a * 2.0;\n    vec2 d = A - pos;\n    float kk = 1.0/dot(b,b);\n    float kx = kk * dot(a,b);\n    float ky = kk * (2.0*dot(a,a)+dot(d,b)) / 3.0;\n    float kz = kk * dot(d,a);      \n    float res = 0.0;\n    float p = ky - kx*kx;\n    float p3 = p*p*p;\n    float q = kx*(2.0*kx*kx-3.0*ky) + kz;\n    float h = q*q + 4.0*p3;\n    if( h >= 0.0) \n    { \n        h = sqrt(h);\n        vec2 x = (vec2(h,-h)-q)/2.0;\n        vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));\n        float t = clamp( uv.x+uv.y-kx, 0.0, 1.0 );\n        res = dot2(d + (c + b*t)*t);\n    }\n    else\n    {\n        float z = sqrt(-p);\n        float v = acos( q/(p*z*2.0) ) / 3.0;\n        float m = cos(v);\n        float n = sin(v)*1.732050808;\n        vec3  t = clamp(vec3(m+m,-n-m,n-m)*z-kx,0.0,1.0);\n        res = min( dot2(d+(c+b*t.x)*t.x),\n                   dot2(d+(c+b*t.y)*t.y) );\n        // the third root cannot be the closest\n        // res = min(res,dot2(d+(c+b*t.z)*t.z));\n    }\n    return sqrt( res );\n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"float sinwave(float t, float f) \n{ return sin(6.2831*f*t); }\n\nfloat saw(float t, float f) \n{  return fract(t*f); }\n\nvec2 mainSound( in int samp, float time )\n{\n    float f1=saw(time, 110.0)+saw(time, 210.0);\n   \n    float t=mod(time+sin(time*0.5)*10.0, floor(time)*fract(time)) ;\n    float f2=sinwave(t, 250.0);\n    return vec2(f2*0.125);\n}\n\n","name":"Sound","description":"","type":"sound"}]}