{"ver":"0.1","info":{"id":"M32cRc","date":"1727535038","viewed":168,"name":"20240928_normalizefm_0b5vr","username":"0b5vr","description":"My live coded shader @ WebGL 総本山 + normalize.fm あわせて１３周年感謝祭. Coded in 60 minutes.\n\nhttps://sn13.peatix.com/\n","likes":39,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","noise","cloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define repeat(i,n) for(int i=0;i<(n);i++)\n#define saturate(x) clamp(x,0.,1.)\n#define linearstep(a,b,t) saturate( ( (t)-(a) ) / ( (b)-(a) ) )\n\nconst float PI=acos(-1.0);\nconst float TAU=PI*2.;\n\nfloat time;\n\nuvec3 hash3u(uvec3 s){\n  s=s*1145141919u+1919810u;\n  s.x+=s.y*s.z;\n  s.y+=s.z*s.x;\n  s.z+=s.x*s.y;\n  s^=s>>16;\n  s.x+=s.y*s.z;\n  s.y+=s.z*s.x;\n  s.z+=s.x*s.y;\n  return s;\n}\n\nvec3 hash3f(vec3 f){\n  return vec3(hash3u(floatBitsToUint(f)))/float(-1u);\n}\n\nuvec3 seed;\nvec3 random3(){\n  seed=hash3u(seed);\n  return vec3(seed)/float(-1u);\n}\n\nvec3 calcgrad(float t){\n  return 3.*(.5-.5*cos(TAU*saturate(1.5*t-vec3(0,.25,.5))));\n}\n\nmat2 r2d(float t){\n  float c=cos(t);\n  float s=sin(t);\n  return mat2(c,s,-s,c);\n}\n\nfloat ease(float t,float k){\n  float k1=k+1.;\n  t=1.-t;\n  float v=k1*pow(t,k)-k*pow(t,k1);\n  return 1.-v;\n}\n\nmat3 orthbas(vec3 z){\n  z=normalize(z);\n  vec3 up=abs(z.y)<.99?vec3(0,1,0):vec3(0,0,1);\n  vec3 x=normalize(cross(up,z));\n  return mat3(x,cross(z,x),z);\n}\n\nvec3 cyclic(vec3 p,vec3 warpoff,float pers){\n  mat3 b=orthbas(vec3(-3,2,-1));\n  vec4 sum=vec4(0);\n  repeat(i,5){\n    p*=b;\n    p+=sin(p.yzx+warpoff);\n    sum+=vec4(\n      cross(sin(p.zxy),cos(p)),\n      1\n    );\n    sum/=pers;\n    p*=2.;\n  }\n  return sum.xyz/sum.w;\n}\n\nfloat calcdens(vec3 p,float t){\n  float tt=t;\n  tt=mix(\n    tt,\n    ease(fract(t),4.)+floor(t),\n    .8\n  );\n  \n  vec3 p1=p;\n  p1.y-=20.;\n  p1.yz*=r2d(-.5*tt);\n  p1.yz*=r2d(log(length(p1.yz)));\n  \n  vec3 p2=p;\n  p2.y+=15.;\n  p2.z+=5.;\n  p2.xy*=r2d(0.6);\n  p2.yz*=r2d(-.7*tt);\n  p2.yz*=r2d(2.*log(length(p2.yz)));\n  \n  p=mix(p1,p2,step(4.,mod(time,8.)));\n  \n  vec3 warpoff=vec3(2);\n  warpoff.xy*=r2d(.4*tt);\n  warpoff.yz*=r2d(.5*tt);\n  \n  float d=cyclic(p,warpoff,.5).x;\n  d=mix(d,sin(20.*d),.1);\n  d=pow(saturate(.5+.5*d),6.);\n  return .5*d;\n}\n\nfloat sdtorus(vec3 p,float R,float r){\n  vec2 pt=vec2(length(p.xy)-R,p.z);\n  return length(pt)-r;\n}\n\nfloat map(vec3 p){\n  float d=1E9;\n  vec3 pt=p;\n  \n  p=mix(p,p.yzx,step(4.,mod(time,8.)));\n  \n  pt=p;\n  pt.y-=2.;\n  pt.yz*=r2d(-.6+.1*cos(time));\n  pt.zx*=r2d(-.6+.1*sin(time)-1.9);\n  d=min(d,sdtorus(pt,1.6,.1));\n  \n  pt=p;\n  pt-=vec3(-.1,.2,0);\n  pt.yz*=r2d(-.6+.1*cos(time));\n  pt.zx*=r2d(-.6+.1*sin(time));\n  d=min(d,sdtorus(pt,1.6,.1));\n  \n  pt=p;\n  pt.y+=2.;\n  pt.yz*=r2d(-.6+.1*cos(time));\n  pt.zx*=r2d(-.6+.1*sin(time)+1.5);\n  d=min(d,sdtorus(pt,1.6,.1));\n  \n  return d;\n}\n\nvec3 nmap(vec3 p){\n  vec2 d=vec2(0,1E-4);\n  return normalize(vec3(\n    map(p+d.yxx)-map(p-d.yxx),\n    map(p+d.xyx)-map(p-d.xyx),\n    map(p+d.xxy)-map(p-d.xxy)\n  ));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = vec2(gl_FragCoord.x / iResolution.x, gl_FragCoord.y / iResolution.y);\n  vec2 p=uv*2.-1.;\n  p.x*=iResolution.x/iResolution.y;\n  float deltap=2./iResolution.y;\n  \n  time=iTime;\n  seed=floatBitsToUint(vec3(p,time));\n  p+=deltap*(random3().xy-.5);\n\n  vec2 p0=p;\n  float glt=mod(time,4.);\n  float glf=1.;\n  repeat(i,6){\n    float fi=float(i);\n    vec2 cell=floor(p/vec2(.8,.2)*glf/1.);\n    vec3 xi=hash3f(vec3(cell,fi+floor(7.*fi+time*30.)));\n    vec2 off=.5*(xi.xy-.5)/glf;\n    off*=step(glt,.5*pow(xi.z,10.));\n    p+=off;\n    glf*=1.4;\n  }\n  \n  vec3 col=vec3(0);\n  vec3 colrem=vec3(1);\n  \n  float side=1.;\n  vec3 ro=vec3(0,0,5);\n  vec3 rd=normalize(vec3(p,-3));\n  float rl=0.;\n  vec3 rp=ro+rd*rl;\n  \n  repeat(i,100){\n    float fi=float(i);\n    vec3 xi=random3();\n    float delay=xi.y;\n    \n    float tt=time-.3*delay;\n    \n    float dist=.1*exp2(xi.x);\n    dist=min(dist,side*map(rp));\n    rl+=dist;\n    rp=ro+rd*rl;\n    \n    float dens=calcdens(rp,tt);\n    col+=colrem*calcgrad(delay)*dist*dens;\n    \n    if(dist<.001){\n      vec3 n=side*nmap(rp);\n      \n      ro=rp;\n      \n      vec3 rdt=refract(rd,n,exp2(-side*log2(1.5)));\n      if(rdt==vec3(0)){\n        rdt=reflect(rd,n);\n      }else{\n        side=-side;\n      }\n      rd=rdt;\n      \n      rl=.002/abs(dot(rd,n));\n      rp=ro+rd*rl;\n      \n      colrem*=mix(\n        vec3(1),\n        .5+.5*cos(3.*abs(dot(rd,n))+vec3(0,2,4)),\n        .2\n      );\n    }\n  }\n  \n  col=pow(col,vec3(.4545));\n  \n  vec2 pt=p;\n  pt.x-=sign(pt.x)*min(abs(pt.x),.4);\n  float d=length(pt)-.2;\n  col*=mix(1.,.5,linearstep(deltap,-deltap,d));\n  pt.y+=.03;\n  d=length(pt)-.2;\n  col*=mix(1.,.5,smoothstep(.05,-.05,d));\n  \n  repeat(i,100){\n    float fi=float(i);\n    vec3 xi=random3();\n    float delay=(fi+xi.x)/100.;\n    float tt=time-.3*delay-.1;\n    \n    float r=.16;\n    float d=1E9;\n    float ani=ease(fract(tt),5.);\n    vec2 ani2=vec2(r*ani,0);\n    d=min(d, abs(length(p)-r) );\n    d=min(d, abs(length(p-.5*ani2)-r) );\n    d=min(d, abs(length(p+.5*ani2)-r) );\n    d=min(d, abs(length(p-ani2)-r) );\n    d=min(d, abs(length(p+ani2)-r) );\n    d=min(d, abs(length(p-2.*ani2)-r) );\n    d=min(d, abs(length(p+2.*ani2)-r) );\n    \n    d=min(d, abs(length(p-r*vec2(2.9,0.9))-.02*r) );\n    d=min(d, abs(length(p+r*vec2(2.9,0.9))-.02*r) );\n    \n    vec2 cell=vec2(0);\n    cell.x=clamp(round(p.x/.04)*.04,-.12,.12);\n    d=min(d, length(abs(p-cell)-r*vec2(0,1.5))-.02*r );\n    \n    vec2 pt=abs(p);\n    pt-=r*vec2(3.,1.5);\n    cell=clamp(round(pt/.02)*.02,.0,.06);\n    pt-=cell;\n    float show=step(.5,hash3f(vec3(cell,floor((ani+floor(tt))*10.))).x);\n    d=min(d, length(pt)-.02*r+1.*show );\n\n    d-=.001;\n\n    col+=calcgrad(delay)*linearstep(deltap,-deltap,d)/100.;\n  }\n  \n  col=mix(\n    col,\n    abs(sin(5.*col)),\n    saturate(length(p-p0)/.1)\n  );\n\n  col*=1.-.3*length(p);\n  col=smoothstep(\n    vec3(0,-.1,-.2),\n    vec3(1,1.1,1.2),\n    col\n  );\n  \n  fragColor=vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}