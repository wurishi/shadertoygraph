{"ver":"0.1","info":{"id":"7sdGDl","date":"1630913627","viewed":36,"name":"Shape test","username":"hieubidv","description":"Shape","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 horizontalBar2(vec2 uv,float edge1,float edge2)\n{\n\n    //float left =step(0.1,uv.x);\n    float bottom = step(edge1,uv.y);\n    float invbottom = step(edge2,uv.y);\n    \n    \n    if (bottom == invbottom)\n     {\n       bottom = 0.0;\n       invbottom = 0.0;\n     }\n     \n     float outvalue= (bottom + invbottom);\n    \n    //vec3 leftbar = vec3(left);\n    vec3 bottombar = vec3(outvalue);\n\n    return bottombar;    \n}\n\n\nvec3 verticalBar2(vec2 uv,float edge1,float edge2)\n{\n\n    //float left =step(0.1,uv.x);\n    float bottom = step(edge1,uv.x);\n    float invbottom = step(edge2,uv.x);\n    \n    \n    if (bottom == invbottom)\n     {\n       bottom = 0.0;\n       invbottom = 0.0;\n     }\n     \n     float outvalue= (bottom + invbottom);\n    \n    //vec3 leftbar = vec3(left);\n    vec3 bottombar = vec3(outvalue);\n\n    return bottombar;    \n}\n\n\nvec3 verticalBarCut(vec2 uv,float edge1,float edge2,float cut)\n{\n\n    //float left =step(0.1,uv.x);\n    float bottom = step(edge1,uv.x);\n    float invbottom = step(edge2,uv.x);\n    \n    float cutvalue = step(cut,uv.y);\n    \n    \n    if (bottom == invbottom)\n     {\n       bottom = 0.0;\n       invbottom = 0.0;\n     }\n     \n     float outvalue= (bottom + invbottom)*cutvalue;\n    \n    //vec3 leftbar = vec3(left);\n    vec3 bottombar = vec3(outvalue);\n\n    return bottombar;    \n}\n\nvec3 rectageColor(vec2 uv, vec2 min, vec2 max)\n{\n    float left =step(min.x,uv.x);\n    float bottom = step(min.y,uv.y);\n\n\n    float right = 1.0-step(max.x,uv.x);\n    float top = 1.0-step(max.y,uv.y);\n\n\n\n    float value = (left * bottom*right*top);\n    \n    \n    return vec3(value*0.5,0.0,0.0);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n         \n      vec3 col1 =  horizontalBar2(uv,0.3,0.35);\n      \n      vec3 col2 =  horizontalBar2(uv,0.7,0.75);\n      \n      vec3 col3 =  verticalBar2(uv,0.3,0.35);\n      \n      vec3 col4 =  verticalBarCut(uv,0.7,0.75,0.35);\n      \n      vec3 col6 =  verticalBarCut(uv,0.5,0.51,0.7);\n      \n      \n      vec2 min = vec2(0.5,0.5);\n      vec2 max = vec2(0.9,0.9);\n      \n      vec3 reccolor = rectageColor(uv,min,max);\n      \n      \n      vec2 min2 = vec2(0.0,0.7);\n      vec2 max2 = vec2(0.3,1.0);\n      \n      vec3 reccolor2 = rectageColor(uv,min2,max2);\n\n      vec3 color = col1 + col2 + col3 + col4 + col6 + reccolor + reccolor2;\n \n// Output to screen\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}