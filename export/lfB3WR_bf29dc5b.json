{"ver":"0.1","info":{"id":"lfB3WR","date":"1704047732","viewed":196,"name":"abstract something","username":"gena","description":"abstract structure rotated","likes":26,"published":1,"flags":0,"usePreview":0,"tags":["abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// original shader: https://twitter.com/search?q=twigl&src=typed_query \n// gena: ported to Shadertoy, added mouse-based zoom, adjusted colors a little\n\n// drag to zoom in/out\n\nmat2 rotate2D(float r) {\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec4 col = vec4(0);\n    float t = iTime;\n    \n    for(float i,e,g,v,u; i++<60.; g+=e) {\n        vec3 p = vec3((.5*iResolution.xy-fragCoord.xy)/iResolution.y*g,g-7.\n                 +0.005*(iMouse.x-100.));\n        p.xz *= rotate2D(t*.2);\n        e = v = 1.;\n        for(int j; j++<12; j>5\n            ?e=min(e,length(p.xz+length(p)/u*(.2))/v),p.xz=abs(p.xz)-.1,p\n            :p=abs(p)-.49)v/=u=dot(p,p),p/=u,p.y=1.6-p.y;\n            col+=vec4(5,3,5,0)*.005/exp(p.y/pow(v, .8));\n    }\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}