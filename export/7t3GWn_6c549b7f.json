{"ver":"0.1","info":{"id":"7t3GWn","date":"1636054983","viewed":79,"name":"Brick_shader_sidps","username":"kingcrimson1112","description":"A seamless brick shader with customizable properties","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["procedural","brick","seamless"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// TEXTURE SETTINGS\n//------------------------------\nvec3 brickColA=vec3(0.35f,0.35f,0.45f);\nvec3 brickColB=vec3(0.05f,0.05f,0.05f);\nvec3 borderCol=vec3(0.2f,0.1f,0.0f);\n\nfloat scale=1.5f;\nfloat rows=4.0f;\nvec2 widthRange=vec2(0.1f,0.4f);\nfloat borderWidth=0.005f;\n\n// Generates a random noise between 0.0 and 1.0\nfloat rand(vec2 pos)\n{   \n    return fract(sin(dot(pos, vec2(12.9898f, 78.233f))) * 43758.5453f);\n}\n\nvec3 get_texture_col(vec2 p)\n{\n    vec3 col=brickColA;\n    \n    float rowWidth=1.0f/rows;\n    float rowNum=floor(p.y/rowWidth);\n    \n    float lowerLimit=rowNum*rowWidth;\n    float upperLimit=(rowNum+1.0f)*rowWidth;\n    \n    float uDiff=abs(upperLimit-p.y);\n    float lDiff=abs(lowerLimit-p.y);\n    \n    if(uDiff<borderWidth || lDiff<borderWidth)\n    {\n        col=borderCol;\n    } \n    else\n    {\n        float fac=1.0f;\n        float rN=rowNum+1.0f;\n        \n        float rI=rand(vec2(rN*fac,rN*2.0f*fac));\n        float widthI=mix(widthRange.x,widthRange.y,rI);\n        \n        float cR=rand(vec2(widthI*6.0f,widthI*9.0f));\n        vec3 startCol=mix(brickColA,brickColB,cR);\n        \n        float diff=p.x-widthI;\n        float brickDist=0.0f;\n        if(diff>0.0f)\n        {\n            while(diff>0.0f)\n            {\n                if(diff<borderWidth)\n                {\n                    col=borderCol;\n                    break;\n                }\n                brickDist+=widthI;\n                fac*=2.0f;\n                rI=rand(vec2(rN*fac,rN*2.0f*fac));\n                widthI=mix(widthRange.x,widthRange.y,rI);\n                diff-=widthI;\n            }\n            if(diff<0.0f)\n            {\n                if(brickDist+widthI>1.0f*scale)\n                {\n                    col=startCol;\n                }\n                else\n                {\n                    float cR=rand(vec2(widthI*6.0f,widthI*9.0f));\n                    col=mix(brickColA,brickColB,cR);\n                }\n            }\n        }\n        else\n        {\n           col=startCol;\n        }\n      \n    }\n    return col;\n    return vec3(texture(iChannel0,p));\n}\n//------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=fragCoord/iResolution.xy;\n    scale*=1.0f+ sin(iTime)*sin(iTime)*0.5f;\n    uv*=scale;\n\n    vec3 col = get_texture_col(uv);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}