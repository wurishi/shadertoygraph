{"ver":"0.1","info":{"id":"l3sczN","date":"1725945371","viewed":44,"name":"Better Sine (Sine Canyon)","username":"Rugged","description":"Sine dif. Massive sine diff.  Sine canyon. Like not even close. My sine obliterates glsl stock sine.\n\nTweak the offset variable to see how the lame glsl sin can't count past 1e6, but my chad sine wave is unwavering.\nTry 1e4, 1e5, 1e6, 1e7.\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["better"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\n//my desmos to explain https://www.desmos.com/calculator/mnlfjyluor\n//         |\n//         |\n//        \\/\n//I smplified it to the version I actually implemented here: https://www.desmos.com/calculator/opbd5d3vv5\n\n\n//also this wave goes (0,0) -> (0.25,1) -> (.5,0) but thats not why I call it better\n//I call it better because its behavior doesnt change when x -> infinity, whereas glsl sin changes behavior for large x\nfloat betterSin(float x){\n\n    float F = fract(x);\n    float F2 = mod(F, .5);\n    \n    float f = 16. * F2 * (.5 - F2);\n    \n    float s = .5 - F;\n    s /= abs(s);\n    \n    return f * s;\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 2.;\n    uv -= 1.;\n    \n    uv *= 2.;\n    \n    uv.x += iTime;\n    \n    vec4 col = vec4(0.);\n    \n    \n    float offset = 1e6;\n    \n    uv.x += offset;\n    \n    \n    //green is my sine\n    if(distance(uv, vec2(uv.x, betterSin(uv.x))) < 0.05){\n        \n        col = vec4(0., 1., 0., 0.);\n    \n    }\n    \n    //red is glsl sine\n    if(distance(uv, vec2(uv.x, sin(2. * PI * uv.x))) < 0.05){\n        \n        col += vec4(1., 0., 0., 0.);\n        \n    }\n    \n    \n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}