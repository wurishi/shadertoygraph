{"ver":"0.1","info":{"id":"ldKfRd","date":"1530096597","viewed":190,"name":"Wet surface rain","username":"rbmkp4800","description":"rain","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float as(float a) { return clamp(sign(a), 0.0, 1.0); }\n\nfloat circles(vec2 uv, float a, float b, float c, float d)\n{\n    return\n        as(uv.x*uv.x + uv.y*uv.y - a) *\n        as((1.0-uv.x)*(1.0-uv.x) + uv.y*uv.y - b) *\n        as(uv.x*uv.x + (1.0 - uv.y)*(1.0 - uv.y) - c) *\n        as((1.0-uv.x)*(1.0-uv.x) + (1.0 - uv.y)*(1.0 - uv.y) - d);\n}\n\nfloat qq(vec2 cuv)\n{\n    float t = fract(iTime * 0.05);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    \n    vec2 fuv = fract(cuv);\n    vec2 wuv = floor(cuv);\n    \n    vec2 tuv = wuv / iChannelResolution[0].xy;\n    vec2 tuv1 = (wuv + vec2(1.0, 1.0)) / iChannelResolution[0].xy;\n    \n    float m = 0.65;\n    \n    float a = texture(iChannel0, tuv).x;\n    float b = texture(iChannel0, vec2(tuv1.x, tuv.y)).x;\n    float c = texture(iChannel0, vec2(tuv.x, tuv1.y)).x;\n    float d = texture(iChannel0, vec2(tuv1.x, tuv1.y)).x;\n    \n    a = a > t ? 0.0 : m;\n    b = b > t ? 0.0 : m;\n    c = c > t ? 0.0 : m;\n    d = d > t ? 0.0 : m;\n    \n    float q = circles(fuv, a,b,c,d);\n    \n    return q;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float p = qq(uv * vec2(40.0, 25.0));\n    float g = qq(uv * vec2(60.0, 40.0) + vec2(15.1, 2.654));\n    float f = qq(uv * vec2(50.0, 32.0) + vec2(54.9498, 8.12));\n    float h = qq(uv * vec2(30.0, 22.0) + vec2(5.9498, 81.12));\n    float e = qq(uv * vec2(70.0, 50.0) + vec2(9.9498, 1.12));\n    \n    float q = p * g * f * h * e;\n    \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    //vec4 col = texture(iChannel0, uv);\n\n    // Output to screen\n    //fragColor = vec4(col.xxx,1.0);\n    fragColor = vec4(q, q, q, 1.0);\n}","name":"Image","description":"","type":"image"}]}