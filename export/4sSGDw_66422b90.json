{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define CamPos   vec3(0.0, 0.0, -3.0)\n#define LightPos vec3(0.0,2.0,-3.0)\n#define ScreenRatio  vec2(iResolution.x/iResolution.y, 1.0)\n\n#define maxSteps 30.0\n#define treshold 0.001\n#define maxdist 20.0\n\n#define shadowsteps 30.0\n\n#define pi acos(-1.)\n#define oid1 1.0\n#define oid2 2.0\n\n#define runspeed iTime\n#define numstairs 18.0\n\n#define tmm mat3( 0.00,  0.80,  0.60, -0.80,  0.36, -0.48, -0.60, -0.48,  0.64 )\n\nvec2 rot(vec2 k, float t) {\n\treturn vec2(cos(t)*k.x-sin(t)*k.y,sin(t)*k.x+cos(t)*k.y);\n\t}\n\nfloat hash( float n ){\n    return fract(sin(n)*43758.5453);\n\t}\n\nfloat noise( in vec3 x ){\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n\t}\n\nvec2 opU( vec2 d1, vec2 d2 ){\n\treturn (d1.x<d2.x) ? d1 : d2;\n\t}\n\nfloat walls(vec3 p) {\n\tvec3 q=vec3(p.x+3.0,p.yz+runspeed);\n\tfloat d=noise(q*0.56)*1.1;\n\tfloat lp=dot(q,vec3(1.0,0.0,0.0)) -d;\n\tq=vec3(p.x-3.0,p.yz+runspeed);\n\td=noise(q*0.58)*1.1;\n\tfloat rp=dot(q,vec3(-1.0,0.0,0.0)) -d;\n\treturn min(lp,rp); \n\t}\n\nvec2 stairs(vec3 p, vec2 a) {\n\tfloat pos=mod(runspeed,0.5);\n\tfloat dpos=floor(runspeed/2.0);\n\tvec3 t=vec3(0.0,-4.0-pos,0.5-pos);\t//translation\n\tvec3 b=vec3(5.0,0.55,1.0);\t\t\t//size\n\tvec2 ret=a;\n\t\tfor (float i=0.0; i<numstairs; i++) {\n\t\t\tt.yz+=0.5;\n\t\t\tvec3 q=(abs(p-t)-b);\n\t\t\tfloat n=noise(q*sin(dpos+i)*0.5)*0.05;\n\t\t\tq*=mat3(1.0,n,0.0, n,1.0,0.0, 0.0,n,1.0);\n\t\t\tret=opU(ret, vec2( length(max(q,0.0))-0.1, oid2 ) );\n\t\t}\n\treturn ret;\n\t}\n\n\nvec2 map(vec3 p ) {\n\tvec2 ret=vec2 (walls(p), oid1);\t\t\n\tret=stairs(p, ret);\n\treturn ret;\n\t}\n\n\nfloat fbm( vec3 p ) {\n    float f = 0.0;\n    f += 0.5000*noise( p ); p = tmm*p*2.02;\n    f += 0.2500*noise( p ); p = tmm*p*2.03;\n//    f += 0.1250*noise( p ); p = tmm*p*2.01;    \n\t\t\t\t\t//had to comment out or shader didnt compile\n\t\t\t\t\t//guess i hit max gpu operations ????\n    f += 0.0625*noise( p );\n    return f/0.9375;\n\t}\n\nvec3 tmapstairs(vec3 p) {\n\tp.yz+=runspeed;\n    float f = smoothstep( 0.1, 1.0, fbm(p*0.8) );\n\tvec3 col = vec3(0.2,0.2,0.2);\n    col = mix( col, vec3(0.4,0.5,0.4), f );\n\treturn col*0.2;\n\t}\n\n\n\n\nvec3 cNor(vec3 p ) {\n\tvec2 e=vec2(0.001,0.0);\n\treturn normalize(vec3( map(p+e.xyy).x - map(p-e.xyy).x, map(p+e.yxy).x - map(p-e.yxy).x, map(p+e.yyx).x - map(p-e.yyx).x ));\n\t}\n\nfloat calcAO(vec3 pos, vec3 nor ){\n\tfloat totao = 0.0;\n    float sca = 1.0;\n    for( float aoi=0.0; aoi<5.0; aoi+=1.0 ) {\n        float hr = 0.01 + 0.05*aoi;\n        vec3 aopos =  nor * hr + pos;\n        float dd = map( aopos ).x;\n        totao += -(dd-hr)*sca;\n        sca *= 0.75;\n    }\n    return clamp( 1.0 - 4.0*totao, 0.0, 1.0 );\n}\n\n\nfloat cShd(vec3 ro, vec3 rd, float k ) {\n\tfloat res = 1.0;\n\tfor(float i=1.0; i<shadowsteps; i+=1.0){\n\t\tfloat f=shadowsteps/i;\n        float h = map(ro + rd*f).x;\n        if( h<0.001 ) { res=0.0; break; }\n        res = min( res, k*h/f );\n    }\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\t{\n\tvec2 ps=(fragCoord.xy/iResolution.xy);\n\tvec3 rd=normalize( vec3( (-1.0+2.0*ps)*ScreenRatio, 1.0));\n\tvec3 ro=CamPos;\n\tvec3 lig=normalize(LightPos);\n\t\n\t//march\n\tfloat f=0.0;\n\tvec2 t=vec2(treshold,f);\n\tfor(float i=0.0; i<1.0; i+=1.0/maxSteps){\n        t= map(ro + rd*t.x);\n\t\tf+=t.x;\n\t\tt.x=f;\n\t\tif( abs(t.x)<treshold || t.x>maxdist ) { t.y=0.0; break; }\n\t\t}\n\t//draw\n\tvec3 col = vec3(1.0);\n\tif (t.y>0.5) {\n\t\t\n\t\tvec3 pos = ro + rd*t.x;\n\t\tvec3 nor = cNor(pos);\n\t\tfloat ao = calcAO( pos, nor );\n\t\t\n\t\tfloat amb = clamp( 0.5+0.5*nor.y, 0.0, 1.0 );\n\t\tfloat dif = clamp( dot( nor, lig ), 0.0, 1.0 );\n\t\tfloat bac = clamp( dot( nor, vec3(-lig.x,lig.y,-lig.z)), 0.0, 1.0 );\n\n\t\tfloat sh = cShd( pos, lig, 1.0 );\t\n\n\t\tcol = 0.20*amb*vec3(0.10,0.10,0.10)*ao;\n\t\tcol += 0.20*bac*vec3(0.15,0.15,0.15)*ao;\n\t\tcol += 1.90*dif*vec3(0.80,0.80,0.80);\n\n\t\tfloat spe = sh*pow(clamp( dot( lig, reflect(rd,nor) ), 0.0, 1.0 ) ,16.0 );\n\t\tfloat rim = ao*pow(clamp( 1.0+dot(nor,rd),0.0,1.0), 2.0 );\t\t\n\n\t\tvec3 oc;\n\t\tif (t.y == oid1) oc=vec3(0.2,0.3,0.1);\n\t\tif (t.y == oid2) oc=tmapstairs(pos);\n\n\t\tcol =oc*col + 0.2*rim*(0.5+0.5*col) + vec3(1.0)*col*spe;\n\t\t\n\t} \n\t\n\t//distance antifade\n\tcol*=exp(0.10*f); col*=2.0;\t\n\tfragColor=vec4( col, 1.0);\n\t}\n\t\n\t","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sSGDw","date":"1388796990","viewed":747,"name":"Stairway to heaven","username":"avix","description":"unlimited stirways goes to...\nmissing light rays from top to bottom, wall textures, and optimization lol... on my laptop is mega slow (gpu killer lol) i get 4fps hahaha","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""}}