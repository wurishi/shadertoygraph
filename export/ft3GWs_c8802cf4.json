{"ver":"0.1","info":{"id":"ft3GWs","date":"1636904901","viewed":486,"name":"American Film Festival 2021","username":"Sir_Dudard","description":"Inspired by American Film Festival promo spot - New Horizon Cinema 2021\n\nOriginal spot: \nhttps://www.youtube.com/watch?v=TXY5ujpsGvU&ab_channel=NoweHoryzonty\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define clamp01(x) clamp(x,0.,1.)\nconst float M_PI = 3.14159265358979323846264338327950288;\n\nconst vec3 WHITE_STAR_COLOR = vec3(1.);\nconst vec3 BLUE_STAR_COLOR = vec3(0.35294117647,0.42352941176,0.67058823529);\nconst vec3 RED_STAR_COLOR = vec3(0.72549019607,0.05098039215,0.30980392156);\nconst vec3 BACKGROUND_BLACK = vec3(0.01176470588);\nconst vec3 MOUNTAIN_COLOR = vec3(0.0862745098,0.1725490196,0.30588235294);\n\nconst float STAR_MAX_SIZE = 0.2;\nconst float STAR_MIN_SIZE = 0.05;\n\nfloat remap01(float a, float b, float t)\n{\n    return clamp01((t-a)/(b-a));\n}\n\nfloat Rand(float i)\n{\n    return fract(sin(i * 23325.) * 35543.);\n}\n\nvec4 Rand4(float i)\n{\n    return fract(sin(i * vec4(23325.,53464.,76543.,12312)) * vec4(35543.,63454.,23454.,87651));\n}\n\nvec2 within(vec2 uv, vec4 rect)\n{\n    return (uv - rect.xy)/(rect.zw-rect.xy);\n}\n\nfloat Star(vec2 uv, float radius, float iradius, float rotation)\n{\n    vec2 st = vec2 (atan(uv.x,uv.y), length(uv));\n    \n    float n = 5.;\n    \n    float a  = st.x + rotation;\n    float sa = M_PI/n;\n    \n    float p = fract(a/(2.0*sa));\n          p = abs(p-0.5)*2.0;\n    \n    float cr = cos(sa)*radius;\n\n    float pa  = p*sa;\n    float cpr = cr/cos(sa-pa);\n\n    float xp = cpr*sin(pa);\n    float yp = cpr*cos(pa);\n    float xi = sin(sa*0.5)*iradius*radius;\n    float yi = cos(sa*0.5)*iradius*radius;\n  \n    float yx = (xi*yp*radius)/(xp*radius-xp*yi+xi*yp);\n\n    float border = yx/cos(pa);\n   \n    return smoothstep(0.,0.1,1. -st.y/border);\n}\n\nvec3 ThreeStar(vec2 uv, float rotation){\n    \n    float radius  = 0.5;\n    float iradius = .5;  \n\n    float redStar   = Star(uv - vec2(.055,-.09), radius, iradius, rotation);\n    float blueStar  = Star(uv - vec2(.0,.0), radius, iradius, rotation);\n  \n    vec3 whiteStarColor = blueStar * redStar * WHITE_STAR_COLOR;\n    vec3 redStarColor   = redStar * RED_STAR_COLOR;\n    vec3 blueStarColor  = blueStar * BLUE_STAR_COLOR;\n      \n    return whiteStarColor + redStarColor + blueStarColor;\n}\n\nvec3 StarSky(vec2 uv){\n    \n    float t = iTime*0.025;\n    float sr = iResolution.x/iResolution.y;\n\n    vec3 color = vec3(0.);\n    \n    float sc = 15.;\n    float s = 1./ sc;\n    float at = 0.01;\n    \n    float stt = 0.1;\n    vec2 spading = vec2(0.95,0.9);\n    \n    for(float i = 0.; i < 1.; i +=s)\n    {    \n        float ci = t + i;\n        float fci = fract(ci);\n        float sit = floor(ci);\n    \n        float btout = pow(smoothstep(0.9,1.0,fci),20.);        \n        float ibtout = 1.-btout;\n        \n        float bt = ci * 500.;\n        float h1 = Rand(floor(bt));\n        float h2 = Rand(floor(bt+1.));\n        float bumps = mix(h1, h2, fract(bt))*.1;\n        bumps = pow(bumps,3.) * 10.;\n        float shake = smoothstep(0.9,1.0,fci) * bumps;\n        \n        float btin = pow(smoothstep(0.,0.1,fci),2.);\n        \n        vec4 rm = Rand4(i + sit);\n        \n        float rs = STAR_MIN_SIZE + rm.x * (STAR_MAX_SIZE-STAR_MIN_SIZE) * ibtout;\n        vec2 rp  = vec2((rm.y*2. - 1.)*sr + shake ,rm.z + shake) * spading;\n        \n        rp  = (vec2(sr * 0.9,-0.5) - rp) * btout + rp;\n        \n        vec4 rb  = vec4(rp.x, rp.y, rp.x + rs, rp.y + rs);\n        vec2 st  = within(uv, rb);\n        \n        vec3 ts = ThreeStar(st,M_PI);\n        ts *= ibtout;\n        ts *= btin;\n        color += ts;\n        \n    }\n    \n    return color;\n}\n\nvec3 Background(vec2 uv)\n{ \n    vec3 dc = BACKGROUND_BLACK;\n    vec3 bc = BLUE_STAR_COLOR;\n    vec3 rc = RED_STAR_COLOR;\n    vec3 wc = WHITE_STAR_COLOR;\n    \n    vec3 color = mix (bc, dc, smoothstep(-0.8,-0.1,uv.y));\n    color = mix (rc, color, smoothstep(-1.0,-0.55,uv.y));\n    color = mix (wc, color, smoothstep(-1.4,-0.7,uv.y));\n    return color;\n}\n\nvec3 MountainsOverlay(vec2 uv, vec3 color, float mountainLevel)\n{\n    float pos = uv.x + iTime * 0.05;\n    float bt = pos * 5.;\n    float h1 = Rand(floor(bt));\n    float h2 = Rand(floor(bt+1.));\n    float bumps = mix(h1, h2, fract(bt))*.1;\n    bumps = pow(bumps,3.) * 300.;\n    \n    mountainLevel += bumps;\n    \n    float mask = 1.-smoothstep(mountainLevel,mountainLevel*0.99, uv.y);\n    vec3 mc =  smoothstep(-1.2, mountainLevel+0.1, uv.y) * MOUNTAIN_COLOR;\n    color = mix(color,mc, mask);\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n        \n    vec3 color = StarSky(uv) + Background(uv);\n    color = MountainsOverlay(uv,color,-0.9);\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}