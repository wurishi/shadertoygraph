{"ver":"0.1","info":{"id":"mlfyWj","date":"1691170321","viewed":41,"name":"Fast log 10 scale (grid)","username":"Envy24","description":"Optimized version from: https://www.shadertoy.com/view/4stSR8\nHold LMB to change scale direction.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fast","cells","scale","logarithmic"],"hasliked":0,"parentid":"mlsyDB","parentname":"Log 10 scale (grid)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ORIGIN                    ( vec2(0,0) )\n#define SCENE_SCALE               ( 3.2 )\n#define UNIT                      ( 4.0*SCENE_SCALE / iResolution.y )          // Affects AA and thickness\n#define SMAA(x)                   ( smoothstep(UNIT, 0., x) )\n\n/* https://www.shadertoy.com/view/DdsGDj */\n#define MOUSE_OFFSET ( iMouse.z > 0. ? iMouse.xy - iResolution.xy * 0.5 : vec2(0) )\nvec2 map_to_centered_ndc(in vec2 SC, in float scale, in vec2 origin, in bool mouse_drag)\n{\n    vec2 M = MOUSE_OFFSET * (mouse_drag == true ? 1. : 0.);\n    return ((2. * (SC - M) - iResolution.xy) / iResolution.y) * scale - origin;\n}\n\nfloat y_axisSDF(vec2 NDC) { return abs(NDC.x); }\nfloat x_axisSDF(vec2 NDC) { return abs(NDC.y); }\nfloat vertical_lineSDF(vec2 NDC, float x0) { return abs(NDC.x-x0); }\nfloat horizontal_lineSDF(vec2 NDC, float y0) { return abs(NDC.y-y0); }\nfloat cellsSDF(vec2 NDC)\n{\n    //NDC *= 2.; // Finer cells\n    NDC = fract(NDC);\n    NDC = fract(min(NDC, 1. - NDC));\n    return\n        min(vertical_lineSDF(NDC, 0.), horizontal_lineSDF(NDC, 0.));\n}\nfloat log10ScaleSDF(vec2 NDC)\n{\n  NDC = fract(NDC);\n  vec2 uv = iMouse.z > 0. ? vec2(NDC.y, NDC.x) : NDC;\n  float ln10 = 2.3025850929940,             // or log(10.),\n        e_pow = exp(uv.y * ln10),           // or e_pow = pow(10., uv.y),\n        nearest_e_pow = floor(e_pow + 0.5); // or round(e_pow);\n        \n  return abs( log(nearest_e_pow) / ln10 - uv.y );\n}\n/*\n    Suppose that 10^y = x, then                 comments:\n    y = log10(x) = ln(x) / ln(10)               by change of base formula\n                                                \n    ( y = ln(x) / ln(10) ) * ln(10)             ( a = b ) * c => a*c = b*c\n      y * ln(10) = ln(x)                        raise e in power of left and right equation parts respectively\n     e^(y * ln(10)) = e^ln(x)                   e^ln(x) = x\n     e^(y * ln(10)) = x\n     \n     now round x to nearest neighbor            also now you can check that: 10^y = x = e^(y * ln(10))\n     \n     log10(x) = log10(10^y)                     log10(10^y) = y\n     log10(x) = y\n     \n     now y of nearest neighbor is recovered.\n*/\n\nvoid mainImage( out vec4 O, in vec2 SC )\n{\n    vec2 NDC = map_to_centered_ndc(SC, SCENE_SCALE, ORIGIN, false);\n\n    float log_base = 2.;\n    vec3 color = vec3(1);\n        \n         color = mix( color, vec3(0.9), SMAA(log10ScaleSDF(NDC)));\n         color = mix( color, vec3(0.7), SMAA(cellsSDF(NDC)) );\n         color = mix( color, vec3(0), SMAA(x_axisSDF(NDC)) );\n         color = mix( color, vec3(0), SMAA(y_axisSDF(NDC)) );               \n\n    O = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}