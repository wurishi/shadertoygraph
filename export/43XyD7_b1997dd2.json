{"ver":"0.1","info":{"id":"43XyD7","date":"1726230283","viewed":50,"name":"fractal star geomery","username":"nayk","description":"originals","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define resolution iResolution.xy\n#define time iTime\n\n\nvec2 mltCpx(vec2 a, vec2 b){\n    b*=mat2(cos(iTime), sin(iTime), -sin(iTime), cos(iTime));\n    a*=mat2(cos(iTime), -sin(iTime), sin(iTime), cos(iTime));\nreturn vec2( a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\n}\n#define ITERATIONS 100.0\n#define BOUND 100.0\n\nfloat toEsc(vec2 p) {\n ;\nvec2 z = vec2(0.0);\n\nfor(float i = 1.0; i < ITERATIONS; i++){\n   \n z*=mat2(cos(i), -sin(i+iTime*0.1), sin(i+iTime*0.1), cos(i));\n  z*=mat2(cos(i+iTime*0.1), sin(i), -sin(i), cos(i+iTime*0.1));\nvec2 tmp = mltCpx(z, z);\n           \ntmp = mltCpx(tmp, z);\ntmp = mltCpx(tmp, z);\ntmp = mltCpx(tmp, z);\ntmp = mltCpx(tmp, z);\nz = tmp + p;\n        z*=mat2(cos(i+iTime*0.1), sin(i), -sin(i), cos(i+iTime*0.1));\nif(length(z) > BOUND) return i;\n}\nreturn 0.0;\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 uv = (2. * gl_FragCoord.xy - resolution) / resolution.y;\nvec2 scale = 1.15 * vec2(resolution.x / resolution.y, 1); // converts from square to rectangular\nvec2 position = ( gl_FragCoord.xy / resolution.xy ) * scale * 2.0 - scale + (vec2(0.5)*2.0-vec2(1,1)) * scale * (-1.0);\nfloat b = toEsc(position);\nif(b == 0.0){\n//check out your video card memory!\n} else {\nfragColor = vec4( sin(b)/2.0+1.0, sin(b+1.04)/2.0+1.0, sin(b+2.04)/2.0+1.0, 1.0 );\n}\n\n}\n","name":"Image","description":"","type":"image"}]}