{"ver":"0.1","info":{"id":"XlVSRR","date":"1482644368","viewed":98,"name":"New Tree Year Ivan","username":"zpix","description":"NEW YEAR","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["newyear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float nar = 100.;\n\nfloat sdTriangle( in vec2 p1, in vec2 p2, in vec2 p3, in vec2 p )\n{\n    vec2 e0 = p2 - p1;  vec2 e1 = p3 - p2;  vec2 e2 = p1 - p3;\n\tvec2 v0 = p - p1;   vec2 v1 = p - p2;   vec2 v2 = p - p3;\n\n\tvec2 pq0 = v0 - e0*clamp( dot(v0,e0) / dot(e0,e0), 0.0, 1.0 );\n\tvec2 pq1 = v1 - e1*clamp( dot(v1,e1) / dot(e1,e1), 0.0, 1.0 );\n\tvec2 pq2 = v2 - e2*clamp( dot(v2,e2) / dot(e2,e2), 0.0, 1.0 );\n    \n    vec2 d = min( min( vec2( dot(pq0, pq0), v0.x*e0.y-v0.y*e0.x ),\n                       vec2( dot(pq1, pq1), v1.x*e1.y-v1.y*e1.x )),\n                       vec2( dot(pq2, pq2), v2.x*e2.y-v2.y*e2.x ));\n\n\treturn -sqrt(d.x)*sign(d.y);\n}\n\nvec4 triangles(vec2 uv,float level,float xc){\n    float ans = 0.;\n    float x,y,width,offset;\n    if (iTime<nar){\n        x = 0.5;\n        y = 0.9;\n        width = 0.1;\n        offset = 0.05;\n    } else {\n    \tx = 0.5;\n        y = 0.9;\n        width = 0.1*cos(iTime);\n        offset = 0.05;\n    }\n    ans += sdTriangle(vec2(x, y - width*level + offset), vec2(x+width*xc, y-width-width*level), vec2(x-width*xc, y-width-width*level), uv);\t\n    return vec4(0.1,sin(uv.y + width*level + offset),0.,ans);\n}\nfloat stvol(vec2 uv){\n    float ans = 5.;\n   \tfloat x,y,width;\n    if (iTime<nar){\n        x = 0.5;\n        y = 0.3;\n    } else {\n    \tx = 0.5;\n        y = 0.3*cos(iTime);\n    }\n    width = 0.05;\n    if ((uv.x<x+width)&&(uv.x>x-width)&&(uv.y<y)&&(uv.y>0.2))ans=0.;\n    return ans;\n}\n\nfloat round(vec2 uv, vec2 toy){\n    if((uv.x-toy.x)*(uv.x-toy.x)+(uv.y-toy.y)*(uv.y-toy.y) < 0.01*0.01) return 0.;\n    return 5.;\n}\n\nvec4 toys(vec2 uv){\n    const int l = 8;\n    vec2 toys[l];\n    float r = 0.01;\n\ttoys[0] = vec2(0.45,0.6);\n\ttoys[1]  = vec2(0.52,0.7);\n    toys[3]  = vec2(0.5,0.4);\n    toys[4]  = vec2(0.55,0.5);\n    toys[5]  = vec2(0.52,0.7);\n    toys[6]  = vec2(0.45,0.35);\n    toys[7]  = vec2(0.47,0.5);\n    for (int i=0;i<l;i++)\n        if (round(uv,toys[i])==0.){\n            return vec4(2.*uv.y,1.*sin(iTime+float(i)*100.),0.1*float(i),0.);\n        }\n    return vec4(vec3(1.),5.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    if (iTime < nar){\n        for(float l = 1.;l<=5.;l+=1.){\n            if (toys(uv).a <= 0.01){\n                fragColor = toys(uv);\n            }else if(triangles(uv,l,0.3*l).a <= 0.01) {\n                fragColor = triangles(uv,l,0.3);\n                break;\n            } else if (stvol(uv) <= 0.01){\n                fragColor = vec4(0.6,0.5,0.,1.);\n            } else {\n                fragColor = vec4(vec3(1.), 0.);\n            }\n        }\n    } else {\n    \tfor(float l = 1.;l<=5.;l+=1.){\n            if (toys(uv).a <= 0.01){\n                fragColor = toys(uv);\n            }else if(triangles(uv,l,0.3*l).a <= 0.01*abs(sin(iTime))) {\n                fragColor = vec4(triangles(uv,l,0.3).r*cos(iTime),triangles(uv,l,0.3).gba);\n                break;\n            } else if (stvol(uv) <= 0.01*abs(sin(iTime))){\n                fragColor = vec4(0.6,0.5,0.,1.);\n            } else {\n                fragColor = vec4(0.3*sin(iTime)+0.5,0.,0.5*cos(iTime), 0.);\n            }\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}