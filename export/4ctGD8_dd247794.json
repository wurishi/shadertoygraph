{"ver":"0.1","info":{"id":"4ctGD8","date":"1711631559","viewed":47,"name":"oiuhsaoifhoijha","username":"Thesailor31","description":"adadadad","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["szcsfswf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdHeart(vec2 uv, float size, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n  float xx = x * x;\n  float yy = y * y;\n  float yyy = yy * y;\n  float p = xx + yy - size;\n  float d = p * p * p - xx * yyy;\n\n  return d;\n}\n\n\n\n\nfloat sdfCircle(vec2 uv, float r, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n\n  return length(vec2(x, y)) - r;\n}\n\nfloat sdfSquare(vec2 uv, float size, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n  return max(abs(x), abs(y)) - size;\n}\n\nvec3 drawScene(vec2 uv) {\n  vec3 col = vec3(1.,1.,1.);\n  float square = sdfSquare(uv, sin(iTime*1.), vec2(sin(iTime*1.)*0.3, iTime*0.001));\n  float circle = sdfCircle(uv, 0.4, vec2(cos(iTime*2.)*0.6, sin(iTime*2.)*0.2));\n  float d = sdHeart (uv, 0.03, vec2(sin(iTime)*0.16,(cos(iTime*1.)*0.16 - cos(iTime*2.)*0.05 - cos(iTime*3.)*0.02 - 0.01*cos(iTime*4.) )));\n  \n  if (d< 0.) col = vec3(1.,0.,0.);\n  else if (circle<0.) col = vec3(0.,0., 1.);\n  else if (square<0.) col= vec3(0.3,0.8,0.2);\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy; \n  uv -= 0.5; // центр координат\n  uv.x *= iResolution.x/iResolution.y; \n\n  vec3 col = drawScene(uv);\n\n  // Output to screen\n  fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}