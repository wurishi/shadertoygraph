{"ver":"0.1","info":{"id":"tllyWB","date":"1592997731","viewed":124,"name":"aims","username":"Rasha108","description":"shyder for aim","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["aims"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265\n\nfloat drawLine (vec2 p1, vec2 p2, vec2 uv, float a)\n{\n    float r = 0.;\n    float one_px = 1. / iResolution.x; //not really one px\n    \n    // get dist between points\n    float d = distance(p1, p2);\n    \n    // get dist between current pixel and p1\n    float duv = distance(p1, uv);\n\n    //if point is on line, according to dist, it should match current uv \n    r = 1.-floor(1.-(a*one_px)+distance (mix(p1, p2, clamp(duv/d, 0., 1.)),  uv));\n        \n    return r;\n}\n\nfloat drawCircle(vec2 p, float d, vec2 uv)\n{\n    return (distance(p, uv) <= d) ? 1.0 : 0.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // draw aims \n    float lines = 0.0;\n    \n    // vertical aims\n    for (float i = 0.39, j = 0.41; i <= 0.61; i += 0.04, j += 0.04) {\n        vec2 p1 = vec2(0.5, i);\n        vec2 p2 = vec2(0.5, j);\n        lines += drawLine(p1, p2, uv, 1.);\n    }\n    \n    // horizontal aims\n    for (float i = 0.428, j = 0.441; j <= 0.575; i += 0.026, j += 0.026) {\n        vec2 p1 = vec2(i, 0.5);\n        vec2 p2 = vec2(j, 0.5);\n       \tlines += drawLine(p1, p2, uv, 1.);\n    }\n    \n        // draw reactangles\n    // left\n    vec2 r1 = vec2(0.2, 0.2);\n    vec2 r2 = vec2(0.2, 0.8);\n    // right\n    vec2 r3 = vec2(0.8, 0.2);\n    vec2 r4 = vec2(0.8, 0.8);\n    // bottom\n    vec2 r5 = vec2(0.2, 0.2);\n    vec2 r6 = vec2(0.8, 0.2);\n    // top\n    vec2 r7 = vec2(0.2, 0.8);\n    vec2 r8 = vec2(0.8, 0.8);\n\t\n    lines += drawLine(r1, r2, uv, 1.)\n        + drawLine(r3, r4, uv, 1.)\n        + drawLine(r5, r6, uv, 1.)\n        + drawLine(r7, r8, uv, 1.);\n\n    \n   \n\tfragColor = vec4(lines-0.0);\n}","name":"Image","description":"","type":"image"}]}