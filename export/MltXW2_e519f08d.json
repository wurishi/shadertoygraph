{"ver":"0.1","info":{"id":"MltXW2","date":"1481717820","viewed":158,"name":"Basic : Mandelbrot Set","username":"Gijs","description":"For pedagocical uses.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","simple","basic","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float MaxIterations = 32.;\n\nvec2 Scale(vec2 p){\n\treturn (p*2.-iResolution.xy)/iResolution.y*1.5;\n}\n\nfloat mandelbrot(vec2 z){\n    vec2 c = z;\n\tfor (float i=0.;i<MaxIterations;i++){\n        if( dot(z,z)>4. ) return i;\n\t\tz = vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y)+c;  \n\t}\n\treturn MaxIterations;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\t\n\tvec2 scaledp = Scale(fragCoord.xy);\n    vec3 color = vec3(mandelbrot(scaledp)/MaxIterations);\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}