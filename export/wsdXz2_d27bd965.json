{"ver":"0.1","info":{"id":"wsdXz2","date":"1572442678","viewed":249,"name":"seafloor","username":"jt","description":"Seafloor impressions.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["parallax","caustics","seafloor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 applycam(vec2 p)\n{\n    return (p + 0.5 * vec2(cos(2.0 * iTime * 0.1), sin(3.0 * iTime * 0.1))) / 1.0;\n}\n\nfloat terrain0(vec2 p)\n{\n    return 1.0 - texture(iChannel0, 0.0625 + p).x;\n}\n\nfloat terrain1(vec2 p)\n{\n    return 1.0 - texture(iChannel1, 0.0625 + p).x;\n}\n\n#define pi 3.1415926\n#define tau (2.0 * pi)\n\nfloat terrain(vec2 p)\n{\n    //return min(terrain1(p/2.0), terrain0(p));\n    //return max(terrain1(p/2.0), 1.0 - terrain0(p));\n    //return mix(terrain1(p/2.0), terrain0(p), 0.5 + 0.5 * cos(0.1 * iTime * tau));\n    return mix(terrain1(p/3.0), terrain0(p), 0.5 + 0.5 * cos(p.x * tau));\n}\n\nvec4 textured(vec2 p)\n{\n    return mix(texture(iChannel2, p), texture(iChannel3, p), 0.5 + 0.5 * cos(p.x * tau));\n}\n\nvec3 normal(vec2 p)\n{\n    float s = 0.0025;\n    float a = terrain(p + s * vec2( 1.0, 0.0));\n    float b = terrain(p + s * vec2( 0.0, 1.0));\n    float c = terrain(p + s * vec2(-1.0, 0.0));\n    float d = terrain(p + s * vec2( 0.0,-1.0));\n    \n    vec3 dx = vec3(0.05, 0.0, a - c);\n    vec3 dy = vec3(0.0, 0.05, b - d);\n    return normalize(cross(dx, dy));\n}\n\nfloat fakecaustics(vec2 uv)\n{\n    vec2 offset = 0.1 * vec2(sin(uv.y * tau + iTime), cos(uv.x * tau + iTime));\n    float f = pow(1.0 - texture(iChannel0, uv + offset).r, 3.0);\n    f += pow(1.0 - texture(iChannel0, uv + iTime * 0.1).r, 3.0);\n    return f * 0.5;\n}\n\n\n#define M 100.0\n#define N 100.0\n#define D 0.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord/iResolution.xy - 0.5;\n\n    vec3 n = vec3(0.0, 0.0, 1.0);\n    vec4 c = vec4(0.0, 0.0, 1.0, 1.0);\n    for(float i = 0.0; i < N; i++)\n    {\n        float t = 1.0 + D * i / N;\n        vec3 P = t * vec3(p.x, p.y, 1.0);\n        float h = terrain(applycam(P.xy));\n        if(h < (P.z - 1.0) / D)\n        {\n            c = vec4(1.0 - h);\n            c *= textured(applycam(P.xy));\n            //c *= texture(iChannel2, applycam(P.xy));\n            c += fakecaustics(applycam(P.xy));\n            n = normal(applycam(P.xy));\n            break;\n        }\n    }\n    \n    vec3 l = normalize(vec3(cos(iTime), sin(iTime), 1.0));\n    \n    float b = clamp(dot(n, l), 0.0, 1.0);\n\n    //fragColor = c;\n    fragColor = c * b;\n}\n\n// iChannel0: Font1\n","name":"Image","description":"","type":"image"}]}