{"ver":"0.1","info":{"id":"MlyczD","date":"1535323579","viewed":138,"name":"nabrsurface","username":"nabr","description":"writing history yeah!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","surface"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// nabr\n// https://www.shadertoy.com/view/MlyczD\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n// note: i wrote this in less then half an hour while wathing a sci-fi movie on netflix\n// most likely not the 100% optimized version also sadly not 3D as you would expect  \n// its all about shading right ?\n\n\n#define time iTime\n#define R(p, a) p = cos(a) * p + sin(a) * vec2(p.y, -p.x)\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n    \n    // ----------------------- INIT SCENE\n\n    vec2 uv = (iResolution.xy - fragCoord.xy * 2.0)/min(iResolution.x, iResolution.y);\n    \n\tvec3 ro = vec3(0);\n\tvec3 rd = normalize( vec3(uv, 1));\n\t\n\tR(rd.xy, time * 0.2);\n\t\n    \n    // ----------------------- SURFACE ATTRIB\n    \n    // mouse\n    float m = 2.5 * acos( (2.0 * (iMouse.x/iResolution.x) -1.0 ) * (iResolution.x/iResolution.y) );\n    // uncheck users first click \n    if( iMouse.z == 0.0 ) m = 0.001;\n    \n    // sufrace scale\n    float scale = 1.6;\n    \n    // animation\n    float tm = time;\n    \n    // uncheck users first click / stop anim when clicked \n    if(iMouse.z == 0.0) m = 0.001;\n    else if (iMouse.z >= 0.0) tm =0.;\n    \n\t// ----------------------- RAYMARCH\n\t\n    vec3 color = vec3(0.0);\t\t\n    float t = 0.0, d = 0.0;\n    \n    for (float i= 0.;(i<1.0);i+=0.013) \n    {\n\t\tif(d > 3.0) break;\n\t\tvec3 p = ro;\n\t\td = abs( cos(p.y * 0.5) * cos(p.x * 0.5));\n\t\td = min(1.001 * d, 0.01 / abs(sin(p.y * 0.4) * cos(m-(tm + p.x * 0.5))));\n\t\td = min(d, t - (sqrt( p.x * p.x + p.y * p.y) * scale) );\n\t\tt += d + 0.001;\n\t\tro+= rd * d;\n\t};\n    \n\t\n    // ----------------------- SHADE\n        \n    (t>3.0)? (color = rd * 0.7 + vec3(t * 0.84) * ( d - 0.0199 ) + t * 0.0012):(color = rd * 0.52 +vec3(1.0));\n    \n    fragColor.rgb = color;\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}