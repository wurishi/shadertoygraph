{"ver":"0.1","info":{"id":"MdyBzG","date":"1529260791","viewed":4360,"name":"Kawase blur","username":"googl4","description":"5 pass kawase blur","likes":10,"published":1,"flags":32,"usePreview":1,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    float i = 5.5;\n    \n    vec3 col = texture( iChannel0, uv + vec2( i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( i, -i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, -i ) / res ).rgb;\n    col /= 4.0;\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    float i = 1.5;\n    \n    vec3 col = texture( iChannel0, uv + vec2( i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( i, -i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, -i ) / res ).rgb;\n    col /= 4.0;\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    float i = 2.5;\n    \n    vec3 col = texture( iChannel0, uv + vec2( i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( i, -i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, -i ) / res ).rgb;\n    col /= 4.0;\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    float i = 3.5;\n    \n    vec3 col = texture( iChannel0, uv + vec2( i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( i, -i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, -i ) / res ).rgb;\n    col /= 4.0;\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Buf C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    float i = 4.5;\n    \n    vec3 col = texture( iChannel0, uv + vec2( i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( i, -i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, -i ) / res ).rgb;\n    col /= 4.0;\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Buf D","description":"","type":"buffer"}]}