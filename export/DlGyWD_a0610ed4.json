{"ver":"0.1","info":{"id":"DlGyWD","date":"1700568028","viewed":35,"name":"Digital Waveform","username":"wwwww","description":"20231117","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["texture","circle","ichannel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N  120\n#define PI 3.141593\n\nfloat circle(vec2 p, float r) {\nreturn smoothstep(.1, .0, abs(length(p) - r));\n}\n\n// palette関数の定義が必要です。ここでは仮の実装を行います。\nvec3 palette(float t) {\n    // ここに色を生成するコードを追加します。\n    return vec3(sin(t), sin(t + 2.0 * PI / 3.0), sin(t + 4.0 * PI / 3.0));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // UV座標の変換\n    vec2 uv0 = fract(uv * 1.5) - 0.5;\n\n    // テクスチャから値を取得\n    float textureValue = texture(iChannel0, vec2(0.5, 0.5)).x;\n\n    // 距離に基づく強度の計算（テクスチャ値によって変化）\n    float dist = length(uv0) * textureValue; // テクスチャ値による形状の変化\n    float d = sin(dist * 8.0 + iTime) / 8.0;\n    d = abs(d);\n    d = pow(0.01 / d, 1.2);\n\n    vec3 finalColor = vec3(0.0);\n\n    for (int i = 0; i < N; ++i) {\n        // 色の適用\n        vec3 col = palette(float(i) * 0.4 + iTime * 0.4);\n        \n        // 最終色の合成\n        finalColor += col * d;\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}