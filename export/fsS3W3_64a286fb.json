{"ver":"0.1","info":{"id":"fsS3W3","date":"1618002332","viewed":61,"name":"GrayTriangles","username":"Pollari","description":"Three areas of varying shades of grey. My first shader ever.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalisoidut pikselin koordinaatit (0:sta 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //Pikselin väri (R,G,B)\n    vec3 col = vec3(0,0,0);\n    float overlaps = 0.0;\n    \n\n    \n    \n    // Rajataan alue 1 kolmella suoralla, joista yksi riippuvainen ajasta\n    if(uv.y < uv.x &&  uv.y > uv.x * 0.5 && uv.y < (1.0 * cos(iTime * 2.0)) - (2.0 * uv.x) + 1.5)col =\n    // Tummuuskerroin sinillä, tämän rivin toiminta aika suoraan 3p mallista\n    (uv.x - 0.1*sin(iTime + uv.x*2.0)+0.5) * 0.1\n    // Keinutellaan väri sin ajan mukaan musta-valkoinen välillä\n    + 0.1* vec3(sin(iTime*2.0) + 0.9,sin(iTime*2.0) + 0.9,sin(iTime*2.0) + 0.9);\n    // Kasvatetaan overlap-laskuria yhdellä\n    if(uv.y < uv.x &&  uv.y > uv.x * 0.5 && uv.y < (1.0 * cos(iTime * 2.0)) - (2.0 * uv.x) + 1.5)overlaps++;\n    \n    // Rajataan alue 2 kolmella suoralla, joista yksi riippuvainen ajasta\n    if(uv.y > -uv.x + 1.0 &&  uv.y < -uv.x * 0.5 + 1.0 && uv.y < (2.0 * cos(iTime * 3.0)) + (uv.x) + 1.5)col =\n    // Tummuuskerroin sinillä, tämän rivin toiminta aika suoraan 3p mallista\n    (uv.x - 0.1*sin(iTime + uv.x*3.0)+0.5) * 0.1\n    // Keinutellaan väri sin ajan mukaan musta-valkoinen välillä\n    + 0.1* vec3(sin(iTime*3.0) + 0.9,sin(iTime*3.0) + 0.9,sin(iTime*3.0) + 0.9);\n    // Kasvatetaan overlap-laskuria yhdellä\n    if(uv.y > -uv.x + 1.0 &&  uv.y < -uv.x * 0.5 + 1.0 && uv.y < (2.0 * cos(iTime * 3.0)) + (uv.x) + 1.5)overlaps++;\n\n\n    // Rajataan keskelle alue 3 kolmella suoralla\n    if(uv.y > 0.4 && uv.y < 2.0 - 2.0 * uv.x && uv.y < 2.0 * uv.x - 0.3)col =\n    // Asetetaan vakioväri, overlapit tummentavat aluetta\n    0.7 * vec3(1.0 - overlaps / 2.0,1.0 - overlaps / 2.0,1.0 - overlaps / 2.0);\n    \n\n    // Asetetaan väri ruudulle\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}