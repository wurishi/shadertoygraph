{"ver":"0.1","info":{"id":"flsSDM","date":"1625816050","viewed":44,"name":"IS profile portrait ","username":"Vanyaskurikhin32","description":"profile portrait ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["portrait"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float _(float a, float b, float c){\n                  return max(a,max(b,c));\n        }\n             \n        float L(vec2 p, vec2 P0, vec2 P1){\n                float a = -(P1.y-P0.y);\n                float b =  (P1.x-P0.x);\n                float d =  P0.x*P1.y- P0.y*P1.x; \n                float x = p.x;\n                float y = p.y;\n                \n                 return a*x + b*y + d;\n        }\n    \n    float T(vec2 p, vec2 P0, vec2 P1, vec2 P2){\n          return  _(\n                     L(p, P0, P1),\n                     L(p, P1, P2), \n                     L(p, P2, P0)\n                   );   \n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//  digitalized Pi profile                      \n          vec2 P[68];\n           P[ 0] = vec2(-0.27152,0.071304);\n           P[ 1] = vec2(-0.25033,0.085217);\n           P[ 2] = vec2(-0.23179,0.092174);\n           P[ 3] = vec2(-0.22914,0.097391);\n           P[ 4] = vec2(-0.21589,0.10957);\n           P[ 5] = vec2(-0.20795,0.12348);\n           P[ 6] = vec2(-0.2,0.13913);\n           P[ 7] = vec2(-0.1894,0.15130);\n           P[ 8] = vec2(-0.1894,0.16696);\n           P[ 9] = vec2(-0.18411,0.18261);\n           P[10] = vec2(-0.1894,0.19652);\n           P[11] = vec2(-0.1894,0.20522);\n           P[12] = vec2(-0.2,0.21391);\n           P[13] = vec2(-0.20265,0.22783);\n           P[14] = vec2(-0.21325,0.24522);\n           P[15] = vec2(-0.22119,0.26261);\n           P[16] = vec2(-0.22914,0.28522);\n           P[17] = vec2(-0.22914,0.30609);\n           P[18] = vec2(-0.23444,0.33217);\n           P[19] = vec2(-0.23974,0.36696);\n           P[20] = vec2(-0.23179,0.39130);\n           P[21] = vec2(-0.23179,0.41391);\n           P[22] = vec2(-0.22119,0.43478);\n           P[23] = vec2(-0.21854,0.45739);\n           P[24] = vec2(-0.20795,0.47130);\n           P[25] = vec2(-0.19735,0.49043);\n           P[26] = vec2(-0.17351,0.50783);\n           P[27] = vec2(-0.14172,0.52696);\n           P[28] = vec2(-0.099338,0.54783);\n           P[29] = vec2(-0.070199,0.55304);\n           P[30] = vec2(-0.035762,0.56348);\n           P[31] = vec2(0.0092715,0.56696);\n           P[32] = vec2(0.049007,0.57217);\n           P[33] = vec2(0.10464,0.56696);\n           P[34] = vec2(0.11523,0.56348);\n           P[35] = vec2(0.16821,0.55652);\n           P[36] = vec2(0.21854,0.54435);\n           P[37] = vec2(0.26887,0.52870);\n           P[38] = vec2(0.30066,0.51304);\n           P[39] = vec2(0.3404,0.48870);\n           P[40] = vec2(0.35629,0.47130);\n           P[41] = vec2(0.37219,0.45217);\n           P[42] = vec2(0.38543,0.42609);\n           P[43] = vec2(0.39603,0.39652);\n           P[44] = vec2(0.39603,0.37217);\n           P[45] = vec2(0.38278,0.34435);\n           P[46] = vec2(0.36424,0.32348);\n           P[47] = vec2(0.3404,0.31478);\n           P[48] = vec2(0.33245,0.30609);\n           P[49] = vec2(0.31656,0.28000);\n           P[50] = vec2(0.31391,0.26261);\n           P[51] = vec2(0.31391,0.24696);\n           P[52] = vec2(0.29801,0.22435);\n           P[53] = vec2(0.28742,0.20870);\n           P[54] = vec2(0.27417,0.19478);\n           P[55] = vec2(0.25563,0.16348);\n           P[56] = vec2(0.24768,0.15130);\n           P[57] = vec2(0.23179,0.13217);\n           P[58] = vec2(0.21854,0.11304);\n           P[59] = vec2(0.2,0.10087);\n           P[60] = vec2(0.17351,0.10087);\n           P[61] = vec2(0.14172,0.097391);\n           P[62] = vec2(0.11523,0.095652);\n           P[63] = vec2(0.11523,0.074783);\n           P[64] = vec2(0.10993,0.062609);\n           P[65] = vec2(0.10993,0.053913);\n           P[66] = vec2(0.11523,0.040000);\n           P[67] = vec2(0.11523,0.033043);\n\n   \n    // Normalized pixel coordinates (from -1 to 1)\n            vec2 p = 1.0 - 2.0* fragCoord/iResolution.xy;\n            vec2 m = 1.0 - 2.0* iMouse.xy/iResolution.xy;\n\n             float x = p.x * iResolution.x/iResolution.y;\n             float y = p.y ;\n     \n              float mx = m.x * iResolution.x/iResolution.y;\n              float my = m.y ;\n           \n               x/=mx;\n               y/=my;\n            \n                p.x=x;\n                p.y=y;\n   \n\n                 float  z = 1.0e25; \n                 for(int i=0;i<57-3;i++)\n                  z = min(z, T(p,  P[i],P[i+1], P[i+3]) );   \n                   float f = 1.25/z; \n\n    // Time varying pixel color\n                    vec3 col = vec3(1.0, 1.0, 1.0);\n                    if(f >= 0.0)col.g = f;\n                    else col.r = f; col.g = f; col.b = f;\n                \n\n    // Output to screen\n                     fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}