{"ver":"0.1","info":{"id":"NsfGzX","date":"1616336836","viewed":186,"name":"Simple Masked Fire and Smoke.","username":"Jeaper","description":"An adaption of what I made for a game.\n\nA Fire texture that is applied over a mask.\nWhere the stronger the color; the hotter the fire color.\nThe weaker the color; the smokier the fire color. \n\n\n","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["noise","fire","mask"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// iChannel0 = mask image which you can have different masks in the different color channels, to move between them via weights.\n// iChannel1 = The noise used for the fire, smoky textures prefered for fire.\n\n// How much weight does the Mask add. 2 is standard\n#define uMaskFactor 2.0\n// How much weight does the Mask add. 1 is standard\n#define uMaskCutoff 1.0\n// How much weight does the Noise add. 1 is standard\n#define uNoiseFactor 1.0\n// Multiplier for the final color. 1 is standard\n#define uColorFactor 0.6\n// Amount of distortion that will be applied to the noise sample (More == wavier)\n#define uDistortionFactor 0.12\n// A multiplier to the movement where the mask is fully white.\n#define uMovementStrengthFull 2.5\n// A multiplier to the movement where the mask is fully black.\n#define uMovementStrengthNone 1.5\n\n// the mask image which you can have different masks in the different color channels, these weights move btween them.\n#define uMaskChannelWeigths vec4(1.0,0.0,0.0,0.0)\n\n#define uNumberOfMaskChannels 1.0\n\n// https://iquilezles.org/articles/palettes\n// cosine based palette, 4 vec3 params\nvec3 cosPalette(float t, vec3 a, vec3 b, vec3 c, vec3 d){\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    \n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n\n    vec2 noiseOffset = vec2(fract(iTime / 40.0), 1.0-fract(iTime / 13.0));\n\n\n    // -- Mask\n    vec4 maskSample = ((texture(iChannel0, uv) * uMaskFactor) - uMaskCutoff);\n    maskSample *= uMaskChannelWeigths;\n    float maskStrength = (maskSample.r +maskSample.g + maskSample.b + maskSample.a) / uNumberOfMaskChannels;\n    vec4 maskColor = vec4(maskStrength, maskStrength, maskStrength, maskStrength);\n    \n    // -- Mask\n    float noiseStrength = (uMovementStrengthNone + ((uMovementStrengthFull -uMovementStrengthNone)* maskStrength));\n\n\n    // -- Animation\n    // Calculate relative distortion sample positions ( Based on the animating uniforms)\n    vec2 animatedPosition = uv;\n    animatedPosition += noiseOffset;\n    // -- Animation\n\n    // -- Distortion\n    vec4 distortion = texture(iChannel1, uv);\n\n\n    vec4 distortion1 = distortion * uDistortionFactor;\n\n    vec4 noiseSample = texture(iChannel1, animatedPosition + ((distortion1.rr * noiseStrength)));\n    float noise = noiseSample.r;\n\n    noise *= uNoiseFactor;\n    // -- Distortion\n  \n    // - Coloring\n    vec4 color = (noise + maskColor);\n    color *= uColorFactor;\n    float delta = color.r;\n\n    vec3 palette = cosPalette(delta, vec3(1.00, 0.73, 1.00), vec3(0.61, 0.84, 1.00), vec3(0.81, 0.79, 0.39), vec3(0.29, 0.18, 0.32));\n    fragColor = color * vec4(palette, color.r);\n    // - Coloring\n\n    // - Remove black through alpha\n    color *= step(0.0,color.r);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Just a simple more interesting mask\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 uv = fragCoord.xy / iResolution.xy;\n     vec4 color = texture(iChannel0, uv);\n     \n     float y = uv.y;\n     color *= smoothstep(1.4,0.6,y);\n     float yCuttoff = smoothstep(0.2,1.1,y);\n     color *= smoothstep(1.1,0.9 - yCuttoff,uv.x);\n     color *= smoothstep(-0.1,0.2 + yCuttoff,uv.x);\n     \n     fragColor = color * 1.1; \n}","name":"Buffer A","description":"","type":"buffer"}]}