{"ver":"0.1","info":{"id":"tlfcDS","date":"1592921425","viewed":70,"name":"Warp/unwarp ","username":"Yahor10","description":"Warp formula test","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n   \tvec2 distort_uv = texture(iChannel0, uv).xy;\n\n    // Output to screen\n    fragColor = texture(iChannel1, distort_uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define radius 0.13\n#define speed 1e-1\n\nfloat sqr(float x)\n{\n    return x*x;\n}\n\n#define warp true\n\nvoid mainImage( out vec4 col, in vec2 pos )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = pos/iResolution.xy;\n    \n    col.xy = texture(iChannel0, uv).xy;//prev value\n    \n    if(iMouse.z > 0.) //mouse is active\n    {\n        vec2 cmouse = iMouse.xy/iResolution.xy;\n        vec2 pmouse = iMouse.zw/iResolution.xy;\n        vec2 dmouse = cmouse-pmouse;\n        //texture uv distorsion\n        float str = exp(-sqr(distance(cmouse, uv)/radius));\n        if(warp)\n        {\n            col.xy = texture(iChannel0, uv - speed*str*dmouse).xy;\n        }\n        else\n        {\n            col.xy = mix(col.xy, uv, 0.1*str);\n        }\n    }\n    \n    \n    \n    //initialize with uniform coordinates\n    if(iFrame < 1)\n    {\n        col.xy = uv;\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}