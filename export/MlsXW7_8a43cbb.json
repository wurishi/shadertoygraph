{"ver":"0.1","info":{"id":"MlsXW7","date":"1437339740","viewed":579,"name":"2D Metaellipse Particles","username":"Pepius","description":"2D Metaellipse Particles","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"struct Particle \n{\n    vec2 pos;\n    float radius;\n    float angle;\n    float vel;\n};\n    \nconst int N = 20;\nParticle particle[N];\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float timeMult = 1.5;\n    float t = mod(iTime, 2.0) * timeMult;\n    float baseVel = 0.5;\n    for(int i = 0; i < N; i++)\n    {\n        particle[i].pos = vec2(1.0, 0.5);\n        particle[i].radius = 0.006+float(mod(float(i),4.0))*0.004;\n        particle[i].angle = float(i)*0.3;\n        particle[i].vel = baseVel + float(mod(float(i),4.0))*0.1;\n    }\n     \n    \n    for(int i = 0; i < N; i++)\n    {\n        float angle = particle[i].angle;\n        particle[i].pos += vec2(cos(angle), sin(angle))* t * particle[i].vel;\n        particle[i].radius = max(0.0, particle[i].radius - t * 0.005);\n    }\n    \n\tvec2 uv = fragCoord.xy / iResolution.yy;\n\tfragColor = vec4(0.1, 0.1, 0.1 ,1.0);\n   \n    float sum = 0.0;\n    vec4 color = vec4(0.0);\n    for(int i = 0; i < N; i++)\n    {\n        float R = particle[i].radius;\n        vec2 p = particle[i].pos;\n        vec2 o = uv;\n        float angle = particle[i].angle;\n        float c = cos(angle);\n        float s = sin(angle);\n        vec2 Pm = vec2(1.0, max(1.0, 10.5-t*12.0));\n        vec2 val = mat2(c, -s, s, c)*(p-o);\n        val = Pm*val*val;\n        float value = R / sqrt( val.x + val.y );\n\n        sum += max(0.0, value);\n\n    }\n    \n    const float threshold = 0.8;\n    if(sum >= threshold)\n    {\n        fragColor = vec4(1.0, 0.0, 0.50, 1.0);\n    }\n    \n}","name":"","description":"","type":"image"}]}