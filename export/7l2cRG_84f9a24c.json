{"ver":"0.1","info":{"id":"7l2cRG","date":"1650564810","viewed":58,"name":"metaball Lemniscate","username":"Zt2wo","description":"Realized it looks kind of like the meta logo, whoops","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float vel = 2.5;\nconst float amp = 0.5;\nconst int circlecount = 50;\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(map(fragCoord.x, 0.0, iResolution.x, -1.0, 1.0), map(fragCoord.y, 0.0, iResolution.x, -1.0, 1.0));\n    vec4 metaballs[circlecount];\n    \n    float t = iTime * vel;\n    float arc = 0.0;\n    //float size = 0.0;\n    float size = map(float(iResolution.y) / float(circlecount) , 0.0, float(iResolution.y), 0.0, 0.45) * amp ;\n    for(int j; j < metaballs.length(); j++){\n        float y = amp * sin(t + arc) * cos(t + arc);\n        float x = amp * sin(t + arc);\n        if(x > 0.0 && y > 0.0 || x < 0.0 && y < 0.0){\n            size = map(distance(vec2(x,y), vec2(0.0,0.0)), 0.0, 1.0, 0.01, 0.0001);\n        }else{\n            size = map(distance(vec2(x,y), vec2(0.0,0.0)), 0.0, 1.0, 0.001, 0.01);\n        }\n        y = amp * sin(t + arc + sin(iTime)) * cos(t + arc + cos(iTime * vel));\n        x = amp * sin(t + arc + cos(iTime));\n        \n        metaballs[int(j)].xyzw = vec4(x, y - 0.4, size, 0.02);\n        arc += 6.3 / float(circlecount); \n    }\n    \n    vec3 frag = vec3(0.0);\n    float d = 0.0;\n    for(int i = 0; i < metaballs.length(); i++) {\n    \td += metaballs[i].z / distance(metaballs[i].xy, uv);\n        if(d > 0.95){\n            frag.x = smoothstep(0.97, 1.0, d) + uv.x;\n            frag.y = smoothstep(0.97, 1.0, d) - uv.x;\n            frag.z = smoothstep(0.97, 1.0, d) + uv.y;\n        }else{\n            frag = vec3(0.0);\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(frag, 1.0);\n}","name":"Image","description":"","type":"image"}]}