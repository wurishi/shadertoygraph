{"ver":"0.1","info":{"id":"Ds3GWS","date":"1677733915","viewed":194,"name":"Expanding Rainbow","username":"roe","description":"Endless expanding colorful circles","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["circles","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0),\n                             6.0) - 3.0) - 1.0,  0.0, 1.0);\n    rgb *= rgb * (3.0 - 2.0 * rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec3 stroke(float axis, float radius, float width, vec3 color) {\n  float delta = iTime * 0.1;\n  radius = fract(radius + delta) - 0.1;\n  float outerEdge = step(radius, axis + width * 0.5);\n  float innerEdge = step(radius, axis - width * 0.5);\n  float d = outerEdge - innerEdge;\n  return color * clamp(d, 0.0, 1.0);\n}\n\nfloat circleSDF(vec2 uv, float pct) {\n  return length(uv - 0.5) * pct;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(0.5) + (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n  vec3 color = vec3(0.0);\n  vec3 curCol = vec3(0.0);\n  for (float i = 0.0; i < 1.0; i += 0.1) {\n    curCol = hsb2rgb(vec3(i, 1.0, 1.0 - i));\n    color += stroke(circleSDF(uv, 0.35), 1.0 - i, 0.1, curCol);\n  }\n  fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}