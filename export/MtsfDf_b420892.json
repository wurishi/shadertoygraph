{"ver":"0.1","info":{"id":"MtsfDf","date":"1513771950","viewed":141,"name":"Pixel splicer","username":"Ultraviolet","description":"Utility of splitting and splicing the pixels of an image.\nUsed in [url=https://www.shadertoy.com/view/ltlBWX]JPG (de)compressor II[/url].","likes":0,"published":1,"flags":48,"usePreview":0,"tags":["pixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n        \n    if(texelFetch(iChannel3, ivec2(32,2),0).r < 0.5)\n    \tfragColor = texture(iChannel1, uv);\n    else\n    \tfragColor = texture(iChannel2, uv);\n    \n    //fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n#define N\t8.\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = floor(iResolution.xy/N)*N;\n    \n    if(any(greaterThan(fragCoord, res)))\n    {\n        fragColor =vec4(0.);\n        return;\n    }\n    \n\t//vec2 uv = fragCoord / iResolution.xy;\n\tvec2 uv = fragCoord / res;\n    fragColor = texture(iChannel0, uv);\n    \n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\n#define N\t8.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = floor(iResolution.xy/N)*N;\n    \n    if(any(greaterThan(fragCoord, res)))\n    {\n        fragColor =vec4(0.);\n        return;\n    }\n    \n    // Coordinate in the res.x/8 x res.y/8 block\n    vec2 K = mod(floor(fragCoord)*N, res);\n    \n    // Coordinate of the iResolution.x/8 x iResolution.y/8 block\n    vec2 k = floor(floor(fragCoord)/res*N);\n    \n    vec2 uv = (K + k + vec2(.5))/iResolution.xy;\n    \n    \n    fragColor = texture(iChannel0, uv);\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"\n#define N\t8.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = floor(iResolution.xy/N)*N;\n    \n    if(any(greaterThan(fragCoord, res)))\n    {\n        fragColor =vec4(0.);\n        return;\n    }\n    \n    // coordinate in the 8x8 block\n    vec2 k = mod(floor(fragCoord), N);\n    //k.y = 7.-k.y;\n    \n    // coordinate of the 8x8 block\n    vec2 K = floor(fragCoord) - k;\n    \n    vec2 uv = K/res.xy / N + k/N + vec2(.5)/res.xy;    \n    uv *= res/iResolution.xy;\n    \n    fragColor = texture(iChannel0, uv);\n}","name":"Buf C","description":"","type":"buffer"}]}