{"ver":"0.1","info":{"id":"ddtXW2","date":"1681580968","viewed":50,"name":"No04_ColorCirclePop","username":"Luking","description":"shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//No04_ColorCirclePop\nvec3 sdfCircle(vec2 uv, float r) {\n    float x = uv.x;\n    float y = uv.y;\n    \n    float d = length(vec2(x, y)) - r;\n    \n    return d > 0. ? vec3(0.) : 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0,2,4));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy; // <0,1>\n  uv-=0.5;\n  uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n  vec3 col = sdfCircle(uv, abs(cos(iTime)*0.5)); // Call this function on each pixel to check if the coordinate lies inside or outside of the circle\n\n  // Output to screen\n  fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}