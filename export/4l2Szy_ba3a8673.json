{"ver":"0.1","info":{"id":"4l2Szy","date":"1444660147","viewed":181,"name":"gdp_3D","username":"plancien","description":"micro 3D engine","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["teaching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float distanceTo(float x, float y, float centerX, float centerY) {\n\tfloat deltaX = x - centerX;\n    float deltaY = y - centerY;\n    return sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\n\n\nvec4 pixelColor(float pixCoordsX, float pixCoordsY) {\n    \n    vec4 color;\n    float cameraX = iResolution.x * 0.5;\n    float cameraY = iResolution.y * 0.5;\n    float zoom = (iResolution.x / 10.0);\n    \n    \n    \n    float x = (pixCoordsX - cameraX) / zoom;\n    float y = (pixCoordsY - cameraY) / zoom;\n    \n        \n    \n    /*vec3 eye = vec3(0.0, 0.0, -10.0);\n    vec3 pixel = vec3(x, y, 0.0);\n    \n    vec3 eye2pixel = pixel - eye;*/\n    \n    float groundY = 10.0;\n    \n    float k = groundY / (groundY + y);\n    \n    float yInter = 10.0 * k / (k - 1.0);\n\n    float xInter = x * yInter / 10.0;\n    \n    float oldYInter = yInter;\n    \n    yInter += 4.0 * iTime;\n\n    vec3 groundColor = vec3(1.0, 1.0, 1.0);\n    \n    float distCercle = distanceTo(mod(xInter, 50.0), mod(yInter, 100.0), 20.0, 70.0);\n    \n    if (distCercle < 20.0) {\n        groundColor = vec3(1.0, 1.0, 0.0);\n    } else if (mod(yInter, 10.0) < 5.0) {\n        if (mod(xInter, 10.0) < 5.0) {\n            groundColor = vec3(0.0, 0.0, 1.0);\n        } else {\n        \tgroundColor = vec3(1.0, 0.0, 0.0);\n        }\n    }\n    \n    \n    \n    if (oldYInter > 1000.0 || y > 0.0) {\n        color = vec4(0.3, 0.3, 0.8, 1.0);\n        return color;\n    }\n    \n    \n    float distance = sqrt(oldYInter * oldYInter + xInter * xInter);\n    \n    float light = 0.3 + 0.7 * (30.0 / distance);\n    \n    color = vec4(groundColor * light, 1.0);\n    return color;\n}\n\n\n\n\n\nvoid mainImage( out vec4 color, in vec2 pixCoords )\n{\n\n\tvec4 color1 = pixelColor(pixCoords.x, pixCoords.y);\n    vec4 color2 = pixelColor(pixCoords.x + 0.6, pixCoords.y);\n    vec4 color3 = pixelColor(pixCoords.x + 0.4, pixCoords.y + 0.5);\n    vec4 color4 = pixelColor(pixCoords.x, pixCoords.y + 0.7);\n    \n    if (pixCoords.x < 200.0) {\n        color = color1;\n    } else {\n\t    color = (color1 + color2 + color3 + color4) / 4.0;\n    }\n    \n}","name":"","description":"","type":"image"}]}