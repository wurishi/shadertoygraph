{"ver":"0.1","info":{"id":"3sXcD8","date":"1584621486","viewed":315,"name":"Straigth = rotating paths ","username":"davidjonsson","description":"Showing similarities of rotation and straight motion of particles. Red particles are moving on straight paths with the same speed outwardly from one point. Green particles are just rotating around a common center with similar angular velocity.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["curved","paths","straigth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tShowing that {rotation around one point} and {translation from one point} can appear similar.\n\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float twoPi = 8. * atan(1.);\n\n    float radius = .005;\n    float speed = .2;\n    int numberOfParticles = 35;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    float proportions = iResolution.x / iResolution.y;\n\n    vec3 col;\n \tvec2 placeTranslation, placeRotation;\n    float translation, rotation;\n    float dist;\n    for (int particle = 0; particle < numberOfParticles; particle++) {\n        float particleQuota = float(particle) / float(numberOfParticles);\n        placeTranslation.x = 1. * mod(speed * iTime + particleQuota, 1.) * cos(twoPi * (particleQuota));\n        placeTranslation.y = proportions * 1. * (mod(speed * iTime + particleQuota, 1.)) * sin(twoPi * (particleQuota));\n        placeTranslation *= .25;\n        placeTranslation += vec2(.25, .5);\n        dist = length(uv.xy - placeTranslation);\n        translation += smoothstep(radius, radius - .005, dist);   \t\n        placeRotation.x = cos(twoPi * (-speed * iTime + particleQuota));\n        placeRotation.y = proportions * sin(twoPi * (-speed * iTime + particleQuota));\n        placeRotation *= .25 * particleQuota;\n        placeRotation += vec2(.75, .5);\n        dist = length(uv.xy - placeRotation);\n        rotation += smoothstep(radius, radius - .005, dist);   \t\n    }\n    col.r = translation;\n    col.g = rotation;\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}