{"ver":"0.1","info":{"id":"clK3DK","date":"1684802848","viewed":165,"name":"Heightmap to Normal","username":"pathtracerenthusiast","description":".","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["htn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float depthGet(vec2 i,vec2 o){\n    vec2 chRes = vec2(textureSize(iChannel0,0));\n    vec2 origTexC = chRes*i/iResolution.xy + o;\n    ivec2 texc = ivec2(mod(origTexC,chRes));\n    return texelFetch(iChannel0,texc,0).x;\n}\n\nconst vec2 offsets[9] = vec2[9](\n    vec2(-1.),\n    vec2(0.,-1.),\n    vec2(1.,-1.),\n    vec2(-1.,0.),\n    vec2(0.),\n    vec2(1.,0.),\n    vec2(-1.,1.),\n    vec2(0.,1.),\n    vec2(1.)\n);\n\nvoid mainImage( out vec4 o, in vec2 i )\n{\n    // Normalized pixel coordinates\n    if(mod(iTime,7.5)<5.){\n    float d[9];\n    for(int j = 0;j<9;j++) d[j] = depthGet(i,offsets[j]);\n    vec3 normal;\n    \n    // Power determines how steep things should be.\n    // Use the units that the heightmap covers\n    // Heightmap should be in [0,1], so 5 units of depth,\n    // divide depth by 5, set power to 5.\n    const float power = 4.;\n    \n    normal.x = -power*(d[2]-d[0]+2.*(d[5]-d[3])+d[8]-d[6]);\n    normal.y = -power*(d[6]-d[0]+2.*(d[7]-d[1])+d[8]-d[2]);\n    normal.z = 1.;\n    \n    normal /= length(normal);\n    o = vec4(normal.xy*.5+.5,normal.z,1.);\n    vec3 lDir = normalize(vec3(.25,.5,1.)-2.*vec3(i/iResolution.xy,0.)+1.);\n    if(mod(iTime,7.5)<2.5) o = vec4(.125+.75*vec3(dot(normal,lDir)),1.);\n    }else{\n    o = vec4(vec3(depthGet(i,offsets[4])),1.);\n    }\n}","name":"Image","description":"","type":"image"}]}