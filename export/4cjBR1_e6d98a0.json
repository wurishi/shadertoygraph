{"ver":"0.1","info":{"id":"4cjBR1","date":"1724649772","viewed":23,"name":"practiceee4","username":"changjin2211","description":"practice","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* 맥에서는 잘되는데 윈도우에서 실행시 제대로 안나오는 이슈\n\"The shader works well on Mac, but it doesn't function properly on Windows. \nOn Mac, the resolution is set to 1280x720, which works fine. \nHowever, on Windows, the resolution defaults to 800x450, \ncausing issues with the shader's performance.\"\n\n*/\n\nfloat random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nmat2 rotate2D(float angle) {\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nfloat sdCircle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nfloat sdBox(vec2 p, vec2 b) {\n    vec2 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\n\nfloat sdTriangle(vec2 p, float r) {\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r / k;\n    if (p.x + k * p.y > 0.0) p = vec2(p.x - k * p.y, -k * p.x - p.y) / 2.0;\n    p.x -= clamp(p.x, -2.0 * r, 0.0);\n    return -length(p) * sign(p.y);\n}\n\nfloat drawObject(vec2 uv, vec2 pos, float size, int shape) {\n    vec2 p = uv - pos;\n    p = rotate2D(iTime + pos.x * 10.0) * p;\n    float d;\n    if (shape == 0) d = sdCircle(p, size * 0.5);\n    else if (shape == 1) d = sdBox(p, vec2(size * 0.4));\n    else d = sdTriangle(p, size * 0.5);\n    return smoothstep(0.0, 0.005, d);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    vec3 col = vec3(0.1, 0.1, 0.2);  // 배경색\n    \n    // 여러 개의 떨어지는 객체 생성\n    for (int i = 0; i < 20; i++) {\n        float randX = random(vec2(float(i), 12.345));\n        float randY = random(vec2(float(i), 67.890));\n        float speed = random(vec2(float(i), 23.456)) * 0.5 + 0.5;\n        float size = random(vec2(float(i), 78.901)) * 0.05 + 0.02;\n        int shape = int(random(vec2(float(i), 34.567)) * 3.0);\n        \n        // 객체의 y 위치 계산 수정\n        float yStart = 1.0 + randY;  // 시작 위치를 랜덤하게 설정\n        float yPos = mod(yStart - iTime * speed, 2.0 + size) - 1.0 - size;\n        vec2 pos = vec2(randX * 2.0 - 1.0, yPos);\n        \n        float object = drawObject(uv, pos, size, shape);\n        \n        // 객체 색상 설정\n        vec3 objectCol = 0.5 + 0.5 * cos(iTime + float(i) + vec3(0,2,4));\n        \n        col = mix(col, objectCol, 1.0 - object);\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}