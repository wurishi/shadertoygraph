{"ver":"0.1","info":{"id":"43GXWt","date":"1720596864","viewed":42,"name":"rounded rectangle with SDF","username":"icchar","description":"using sdf to draw Rounded Rectangle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["distancefield","sdf","rectangle","distance","box","rect","primitive","octagon","chamfer","chamfered"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float roundedRect(vec2 pos, vec2 rt, vec4 cr) {\n  vec2 s = step(pos, vec2(0.0));\n  //if pos.x > 0 && pos.y > 0 , r = cr.y\n  //if pos.x < 0 && pos.y > 0 , r = cr.x\n  //if pos.x > 0 && pos.y < 0 , r = cr.z\n  //if pos.x < 0 && pos.y < 0 , r = cr.w\n  float r = mix(\n    mix(cr.y, cr.z, s.y),  \n  \tmix(cr.x, cr.w, s.y),\n    s.x);\n  return length(max(abs(pos) + vec2(r) - rt, 0.0)) - r;\n}\n\nfloat roundedRect(vec2 pos, vec2 rt, float r) {\n  vec2 s = step(pos, vec2(0.0));\n  return length(max(abs(pos) + vec2(r) - rt, 0.0)) - r;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // mapping the dimension to (-1,1)\n    vec2 position = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    // rect color\n    vec3 line_color = vec3(1.0,1.0,0.0);\n    // background color\n    vec3 color = vec3(0.6);\n    // the half size of the rect\n    vec2 halfSize = vec2(0.8,0.6);\n    // the corner radii - (lt,rt,rb,lb)\n    vec4 cornerRadii = vec4(0.5, 0.3, 0.1, 0.0);    \n\n    \n    float pct = roundedRect(position, halfSize, cornerRadii);\n    //float pct = roundedRect(position, halfSize, 0.3);\n    color = mix(color,line_color,1.0-smoothstep(0.0,0.01,pct));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}