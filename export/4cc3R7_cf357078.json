{"ver":"0.1","info":{"id":"4cc3R7","date":"1713475712","viewed":45,"name":"mot. ext","username":"Sakalius","description":"test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //picture\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec3 col = vec3(0.0);\n    vec4 image = texture(iChannel0, uv);\n    col = image.rgb;\n   \n    //blur\n    float kernelSize = 9.0; //blur radius\n   \n    vec2 texelSize = 1.0 / iResolution.xy;\n    vec3 BlurColor = vec3(0.0);\n    float boxBlurDivisor = pow(2.0 * kernelSize + 1.0, 2.0);\n    \n    for (float i = -kernelSize; i <= kernelSize; i++){\n        for (float j = -kernelSize; j <= kernelSize; j++){\n        \n        vec4 image = texture(iChannel0, uv + vec2(i, j) * texelSize);\n        BlurColor += image.rgb;\n        \n        }\n    }\n    \n    //BlurColor = BlurColor / boxBlurDivisor;\n    //col = BlurColor;\n    \n    //gaussian\n    \n    BlurColor += texture(iChannel0, uv + vec2(-1.0, 1.0) * texelSize).rgb * 1.0;\n    BlurColor += texture(iChannel0, uv + vec2(0.0, 1.0) * texelSize).rgb * 2.0;\n    BlurColor += texture(iChannel0, uv + vec2(1.0, 1.0) * texelSize).rgb * 1.0;\n    BlurColor += texture(iChannel0, uv + vec2(-1.0, 0.0) * texelSize).rgb * 2.0;\n    BlurColor += texture(iChannel0, uv + vec2(0.0, 0.0) * texelSize).rgb * 4.0;\n    BlurColor += texture(iChannel0, uv + vec2(1.0, 0.0) * texelSize).rgb * 2.0;\n    BlurColor += texture(iChannel0, uv + vec2(-1.0, -1.0) * texelSize).rgb * 1.0;\n    BlurColor += texture(iChannel0, uv + vec2(0.0, -1.0) * texelSize).rgb * 2.0;\n    BlurColor += texture(iChannel0, uv + vec2(1.0, -1.0) * texelSize).rgb * 1.0;\n    \n    BlurColor = BlurColor / boxBlurDivisor;\n    col = BlurColor;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}