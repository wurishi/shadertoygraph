{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define hash(x) fract(sin(x) * 43758.5453123)\nvec3 pal(float t){return .5+.5*cos(6.28*(1.*t+vec3(.0,.1,.1)));}\n float stepNoise(float x, float n) { // From Kamoshika shader\n   const float factor = 0.3;\n   float i = floor(x);\n   float f = x - i;\n   float u = smoothstep(0.5 - factor, 0.5 + factor, f);\n   float res = mix(floor(hash(i) * n), floor(hash(i + 1.) * n), u);\n   res /= (n - 1.) * 0.5;\n   return res - 1.;\n }\n vec3 path(vec3 p){\n   \n      vec3 o = vec3(0.);\n       o.x += stepNoise(p.z*.05,5.)*5.;\n      o.y += stepNoise(p.z*.07,3.975)*5.;\n     return o;\n   }\n   float diam2(vec2 p,float s){p=abs(p); return (p.x+p.y-s)*inversesqrt(3.);}\n   vec3 erot(vec3 p,vec3 ax,float t){return mix(dot(ax,p)*ax,p,cos(t))+cross(ax,p)*sin(t);}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n vec3 col = vec3(0.);\n  \n  vec3 ro = vec3(0.,0.,-1.),rt=vec3(0.);\n  ro.z+=iTime*5.;\n  rt.z += iTime*5.;\n  ro+=path(ro);\n    rt+=path(rt);\n  vec3 z = normalize(rt-ro);\n  vec3 x = vec3(z.z,0.,-z.x);\n  float i=0.,e=0.,g=0.;\n  vec3 rd = mat3(x,cross(z,x),z)*erot(normalize(vec3(uv,1.)),vec3(0.,0.,1.),stepNoise(iTime+hash(uv.x*uv.y*iTime)*.05,6.));\n  for(;i++<99.;){\n     vec3 p= ro+rd*g;\n\n    p-=path(p);\n    float r = 0.;;\n    vec3 pp=p;\n    float sc=1.;\n    for(float j=0.;j++<4.;){\n        r = clamp(r+abs(dot(sin(pp*3.),cos(pp.yzx*2.))*.3-.1)/sc,-.5,.5);\n        pp=erot(pp,normalize(vec3(.1,.2,.3)),.785+j);\n        pp+=pp.yzx+j*50.;\n        sc*=1.5;\n        pp*=1.5;\n      }\n      \n     float h = abs(diam2(p.xy,7.))-3.-r;\n   \n     p=erot(p,vec3(0.,0.,1.),path(p).x*.5+p.z*.2);\n    float t = length(abs(p.xy)-.5)-.1;\n     h= min(t,h);\n     g+=e=max(.001,t==h ?abs(h):(h));\n     col +=(t==h ?vec3(.3,.2,.1)*(100.*exp(-20.*fract(p.z*.25+iTime)))*mod(floor(p.z*4.)+mod(floor(p.y*4.),2.),2.) :vec3(.1))*.0325/exp(i*i*e);;\n    }\n    col = mix(col,vec3(.9,.9,1.1),1.-exp(-.01*g*g*g));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MfVfz3","date":"1734300935","viewed":19269,"name":"大龙猫 - Tunnel Cable","username":"totetmatt","description":"tunnel runner","likes":140,"published":3,"flags":0,"usePreview":0,"tags":["tunnel"],"hasliked":0,"parentid":"","parentname":""}}