{"ver":"0.1","info":{"id":"tddGDB","date":"1569348796","viewed":394,"name":"lyapunov fractal thing","username":"unnick","description":"asdf","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["2d","fractal","test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int pattern[] = int[](1,1,0,0,1,1,1,1,0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = (fragCoord - iResolution.xy * .5) / iResolution.y + .5;\n    if(any(lessThan(pos, vec2(0.))) || any(greaterThanEqual(pos, vec2(1.)))) {\n        fragColor = vec4(.2);\n        return;\n    }\n    pos *= 2.;\n    pos += 2.;\n    float x = .314;\n    float sa = 1.;\n    float sb = 0.;\n    for(int i = 0; i < 32; i++) {\n        float a = pos[pattern[i % pattern.length()]];\n        sa *= abs(a * (1. - 2. * x));\n        //     if(sa >    256.) {sa /= 256.; sb += 8.;}\n        //else if(sa < 1./256.) {sa *= 256.; sb -= 8.;}\n        x = a * x * (1. - x);\n    }\n    fragColor = vec4(sin((log2(sa) + sb) * .1) * .5 + .5);\n}\n","name":"Image","description":"","type":"image"}]}