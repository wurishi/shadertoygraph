{"ver":"0.1","info":{"id":"lsjBD1","date":"1500349929","viewed":145,"name":"Basic orbit trapping","username":"Slyth","description":"Just messing around with basic orbit trap layering. Change i to 0 to see the mandelbrot set.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float maxIter = 256.0;\n    vec2 r = (-iResolution.xy + 2.0 * fragCoord.xy) / iResolution.y;\n    vec2 z = vec2(0.0);\n    float zoom = 0.1;\n    vec2 xy = vec2(r.x, r.y);\n    vec2 c = vec2(-0.245, 0.0) + xy / (zoom * 10.0);\n    float distD = 1e20;\n    float distP = distD;\n    vec2 pointD = vec2(sin(iTime), cos(iTime));\n    vec2 pointP = vec2(pointD.x, -pointD.y);\n    float l = ((sin(iTime * 0.5) + 1.0) * 0.5) * maxIter - 1.5;\n    for(int i = 0; i >= 0; i++) // change i to 0 for mandelbrot set\n\t{\n    \tz = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n\t\tif(z.x * z.x + z.y * z.y > maxIter * maxIter || l > maxIter) break;\n        distD = min(distD, pow(cos(abs(z.x - pointD.x) + abs(z.y - pointD.y)), 2.0));\n        distP = min(distP, pow(sin(abs(z.x - pointP.x) + abs(z.y - pointP.y)), 2.0));\n        l++;\n\t}\n    \n    distD = pow(sqrt(distD), 0.6);\n    distP = pow(sqrt(distP), 0.6); \n    fragColor = vec4(vec3(distD, distP, (distD + distP) / 2.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}