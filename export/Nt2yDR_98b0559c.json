{"ver":"0.1","info":{"id":"Nt2yDR","date":"1649489874","viewed":184,"name":"Manual Nearest Neighbor Filter","username":"JuanDeager","description":"Quick demonstration of manual nearest neighbor filtering.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","filter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    ivec2 sz = textureSize(iChannel0, 0);\n    uv = (vec2(0.5) + vec2(ivec2(uv * vec2(sz)))) / vec2(sz);\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}