{"ver":"0.1","info":{"id":"4d2yWd","date":"1494454527","viewed":302,"name":"Barren Landscape of Cubes","username":"TechEpic","description":"Uses my raymarcher & IQ's Noise.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["cube","desert"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rend 3000.0\nint tex = -1;\nvec3 col = vec3(0.0);\nvec3 oldcoord = vec3(0.0);\nfloat h;\n//IQ's Noise\nfloat pn( in vec3 p )\n{\n    vec3 ip = floor(p);\n    p = fract(p);\n    p *= p*(3.0-2.0*p);\n    vec2 uv = (ip.xy+vec2(37.0,17.0)*ip.z) + p.xy;\n    uv = textureLod( iChannel3, (uv+ 0.5)/256.0, 0.0 ).yx;\n    return mix( uv.x, uv.y, p.z );\n}\nbool check(vec3 coord) {\n    coord = round(coord/10.0)*10.0;\n    if(oldcoord != coord) {\n    \toldcoord = coord;\n        h = pn(vec3(vec2(coord.xz/50.0),0.0))*80.0-90.0;\n    }\n    if(coord.y < h) {\n    \ttex = 0;\n        return true;\n    }\n    else return false;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.x;\n    uv.x -= 0.5;\n    uv.y -= iResolution.y/iResolution.x/2.0;\n    col = vec3(0.0,0.7,1.0);\n    vec3 rp = vec3(0.0,0.0,iTime*100.0);\n    vec3 rv = vec3(uv,0.5);\n    rv = normalize(rv)/5.0;\n    float dist = 0.0;\n    while(dist < rend && !check(rp)) {\n        dist++;\n        rp += rv;\n        float c = length(rv);\n        if(c < 1.0) {\n        \tc = 1.0;\n        }\n        rv *= c*1.000539;\n    }\n    float castdist = dist;\n    dist = 0.0;\n    if(tex == 0) {\n        vec3 crp = round(rp/10.0)*10.0;\n        vec3 dc = rp-crp;\n        if(abs(dc.y) <= 4.8) {\n        \tcol = texture(iChannel0,(vec2(rp.x+rp.z,rp.y))/100.0).xyz;\n        } else {\n        \tcol = texture(iChannel0,vec2(rp.x,rp.z)/100.0).xyz;\n        }\n        \n    }\n     \n    rv = vec3(1.0,0.5,0.5);\n   \trv = normalize(rv)/2.0;\n    rp += rv*2.0;\n    while(dist < rend/3.0 && !check(rp)) {\n        dist++;\n        rp += rv;\n    }\n    if(dist < rend/3.0) {\n    \tcol /= 2.0;\n    } else {\n    \tcol.x += 0.2;\n        col.y += 0.1;\n    }\n    castdist *= castdist;\n   \tcol = vec3(mix(col.x,1.0,castdist/(rend*rend)),mix(col.y,0.7,castdist/(rend*rend)),mix(col.z,0.5,castdist/(rend*rend)));\n\tfragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}