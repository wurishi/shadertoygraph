{"ver":"0.1","info":{"id":"4fKyDy","date":"1732324495","viewed":21,"name":"Spinning spotlights","username":"thatsience","description":"This was going to be the windows 95 maze, but when I pasted the code and played it, it was different, oh well!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["spotlights"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// GLSL code for ShaderToy: Windows 95-style maze screensaver with moving rats\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// Maze generation parameters\nconst float mazeWidth = 20.0;\nconst float mazeHeight = 20.0;\nconst float wallThickness = 0.1; // Wall thickness\n\n// Maze Grid Generation (checkered for simplicity)\nfloat maze(vec2 p) {\n    vec2 grid = floor(p);\n    return mod(grid.x + grid.y, 2.0);  // Simple alternating walls (checkered pattern)\n}\n\n// Function to render the maze\nvec3 renderMaze(vec2 uv) {\n    vec3 color = vec3(0.0); // Background color\n\n    // Maze pattern (checkered)\n    float mazeVal = maze(uv * mazeWidth);\n\n    // Draw maze walls (brownish bricks)\n    if (mazeVal > 0.5) {\n        color = vec3(0.6, 0.3, 0.1); // Brown brick color\n    }\n\n    // Draw ceiling (white bricks)\n    if (uv.y > 0.9) {\n        color = vec3(1.0); // White ceiling\n    }\n\n    return color;\n}\n\n// Function to render the rat (simple circle representation)\nvec3 renderRat(vec2 uv, vec2 ratPos) {\n    float dist = length(uv - ratPos);\n    if (dist < 0.05) {\n        return vec3(0.8, 0.8, 0.8); // Grey color for the rat\n    }\n    return vec3(0.0); // Transparent if not near the rat's position\n}\n\n// Main rendering function\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Convert fragment coordinates to normalized coordinates (-1.0 to 1.0)\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;  // Correct aspect ratio\n\n    // Moving rat positions (sin and cos functions for circular motion)\n    vec2 ratPosition1 = vec2(sin(iTime * 0.2) * 0.5, cos(iTime * 0.2) * 0.5);\n    vec2 ratPosition2 = vec2(sin(iTime * 0.2 + 3.14) * 0.5, cos(iTime * 0.2 + 3.14) * 0.5);\n\n    // Render maze (bricks and ceiling)\n    vec3 mazeColor = renderMaze(uv);\n\n    // Render rats\n    vec3 rat1 = renderRat(uv, ratPosition1);\n    vec3 rat2 = renderRat(uv, ratPosition2);\n\n    // Combine maze color and rat color\n    vec3 finalColor = mazeColor + rat1 + rat2;\n\n    // Output the final color\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}