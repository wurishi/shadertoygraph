{"ver":"0.1","info":{"id":"mtGfRh","date":"1701817701","viewed":34,"name":"bsb: background 4","username":"wainggan","description":"for a game","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["background"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define AMOUNT 5.0\n#define LOOPS 6.0\n\n#define PI 3.14159323\n\nfloat circle(vec2 uv) {\n    float l = length(uv);\n    float c = 1.0 - abs(l - 0.1);\n    c = smoothstep(0.97, 0.98, c);\n    return c;\n}\n\n\nmat2 rot(float ang){\n  return mat2(\n    cos(ang), -sin(ang),\n    sin(ang), cos(ang)\n  );\n}\n\n\nvec3 circle_loop(vec2 uv, float amount, float dist) {\n    vec3 col = vec3(0.0);\n    for (float i = 0.0; i < amount; i++) {\n        col = max(col, vec3(circle(uv - vec2(0.0, dist))));\n        \n        uv *= rot(PI * 2.0 / amount);\n    }\n    return col;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = gl_FragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 col = vec3(0.0);\n    \n    vec2 nuv = uv;\n    \n    for (float i = 0.0; i < LOOPS; i++) {\n        vec2 nnuv = nuv;\n        float t = float(int(floor(i)) % 2);\n        nnuv *= rot(PI * 2.0 + iTime * (1.0 - t * 2.0) * 0.2);\n        vec3 oc = circle_loop(nnuv, AMOUNT + i * 2.0, 0.21 + i * 0.14);\n        //col = max(col, oc);\n        col += oc;\n        nuv /= 1.04;\n    }\n    \n    col *= mix(abs(uv).xyx, abs(uv).xyy, sin(iTime * 0.2) / 2.0 + 0.5) / 2.0;\n    \n    col += (1.0 - length(uv * 1.8)) * 0.6;\n    \n    //col = vec3(circle(uv));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}