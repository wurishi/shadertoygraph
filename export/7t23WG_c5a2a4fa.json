{"ver":"0.1","info":{"id":"7t23WG","date":"1624648532","viewed":200,"name":"autoblue","username":"Carandiru","description":"simulation","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["noise","bluenoise","ca","auto"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 color;\n    \n    color = textureLod(iChannel0, uv, 0.0f).rgb;\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float state = 0.0f;\n    \n    if (0 != iFrame) {\n    \n        state = textureLod(iChannel1, fragCoord/iResolution.xy, 0.0f).r;\n        \n        state = compute(iChannel1, state, fragCoord, iResolution.xy, iTime);\n    }\n    else {\n        state = textureLod(iChannel0, fragCoord/1024.0f, 0.0f).r > 0.5f ? 1.0f : 0.0f;\n    }\n    \n    fragColor = vec4(vec3(state),1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float state = 0.0f;\n    \n    state = textureLod(iChannel0, fragCoord/iResolution.xy, 0.0f).r;\n        \n    state = compute(iChannel0, state, fragCoord, iResolution.xy, iTime);\n\n    fragColor = vec4(vec3(state),1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float compute( sampler2D source, in float state, in vec2 fragCoord, in vec2 resolution, in float t )\n{\n    // get neighbouring states\n    float adjacent_state_sum = 0.0f;\n    \n    vec2 offset;\n    for ( offset.y = -1.; offset.y <= 1.; ++offset.y ) {\n    \n        for ( offset.x = -1.; offset.x <= 1.; ++offset.x ) {\n                   \n            adjacent_state_sum += textureLod(source, (fragCoord + offset)/resolution, 0.0f).r;\n        }\n    }\n    // remove center from sum of adjacent states\n    adjacent_state_sum -= state;\n    \n    state *= fract(t * 0.5f) * 2.0f; // age\n    \n    if (state >= 0.5f) { // currently alive\n    \n        // if number of neighbours (8 possible) is greater than 4, this state is now dead\n        if (adjacent_state_sum > 4.0f) {\n            state = 0.0f;\n        }\n\n    }\n    else { // currently dead\n    \n        // if number of neighbours \"\"        \"\" is less than 4, this state is now alive\n        if (adjacent_state_sum < 4.0f) {\n            state = 1.0f;\n        }\n\n    }\n    \n    // otherwise the state in doesn't change\n    return state;\n}","name":"Common","description":"","type":"common"}]}