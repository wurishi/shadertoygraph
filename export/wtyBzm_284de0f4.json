{"ver":"0.1","info":{"id":"wtyBzm","date":"1614073688","viewed":106,"name":"sines experiment","username":"0xBAMA","description":"overlapping sines, inspired by https://twitter.com/GunTurtle/status/1363955617224867841","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["effects","trig","sines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float phase_offset = 1.618;\nfloat amplitude_scale = 0.3;\nfloat signal_offset = 0.6;\n\nint accum = 0;\n\nfloat f( float x )\n{\n return amplitude_scale * sin(x + iTime + phase_offset) + signal_offset;\n}\n\nfloat f2( float x )\n{\n return amplitude_scale * 0.618 * sin(x + iTime + phase_offset * 1.618) + signal_offset + 0.75;\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5);\n    uv *= 5.; // -1 to 1, then scaled from there\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col = vec3(0.2*dot(col,col)); // grayscale bg\n    \n    float result;  // just going by accumulator now\n    \n    for(float c = 0.1; c < 97.5; c += c)\n    {\n        amplitude_scale = 0.1 * sin(c + iTime) + 0.6;\n        signal_offset = cos(c + 0.08 * iTime) * 0.2;\n        phase_offset = sin(c + iTime) + 0.02 * iTime + c;\n        \n        if((result = smoothstep(0., 0.35 + 0.1 * sin(c), abs(uv.x - f(uv.y)))) < 0.01)\n        {\n            accum++;\n        }\n    }\n      \n    for(float c = 0.1; c < 156.5; c += c)\n    {\n        amplitude_scale = 0.1 * sin(c + iTime) + 0.6;\n        signal_offset = cos(c + 0.08 * iTime) * 0.2;\n        phase_offset = sin(c + 0.6 * iTime) + 0.2 * iTime + c;\n        \n        if((result = smoothstep(0., 0.5 + 0.2 * sin(c), abs(uv.x - f2(uv.y)))) < 0.01)\n        {\n            accum++;\n        }\n    }\n    \n    col.g += float(accum) / 9.;\n      \n    col += pal( float(accum) / 8., vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.10,0.20) );\n    col.r -= float(accum) / 3.;\n      \n\n    // Output to screen\n    fragColor = vec4(vec2(1.75)-col.xy, col.z,1.0) * 0.1 * (uv.x + 5.);\n    fragColor.r *= 1.75;\n}","name":"Image","description":"","type":"image"}]}