{"ver":"0.1","info":{"id":"XscXRl","date":"1460725584","viewed":1989,"name":"morpho math","username":"FabriceNeyret2","description":"morphological mathematics transform. Choose operator, radius and brush in Buf B and C.\nE.g. closing = dilatation then erosion, opening = erosion then dilation\n(for dilatation or erosion only, choose neutral as second operation).","likes":20,"published":3,"flags":32,"usePreview":0,"tags":["mathematics","image","processing","morphological"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// here, use of the morphological operator\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    O = texture(iChannel0,U/iResolution.xy);\n  //O = pow(O,vec4(1./3.));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// here, prepare your source image\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    O = texture(iChannel0, U/iResolution.xy);\n    \n// transform of the image\n    \n  //O = pow(O,vec4(1./3.));\n  //O = vec4(O.x);      // B&W\n  //O = vec4(pow(O.x,.25));\n  //O = vec4(O.x>.7);  // binarisation B&W - base morpho maths\n  //O = step(.5,O);    // binarisation col\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// here, operation 1\n\n#define OP T(1.,3.)                  // op 1:   0: neutral  1: dilatation   2 : erosion\n#define r 8.\n#define B T(9.,5.)                   // brush:  0: disk 1:  star  2: diamond  3: square \n#define p .3\n\n#define T(l,n) int(mod(iTime/l,n)) // demo mode: tuning(time)\n\nbool brush(vec2 d)                  //  brush element  = \n{ d = abs(d);\n  return  B==0 ? dot(d,d) <= r*r                    // disk\n        : B==1 ? pow(d.x,p)+pow(d.y,p) <= pow(r,p)  // star(p)\n        : B==2 ? d.x+d.y < r                        // diamond\n        : B==3 ? max(d.x,d.x*.5+d.y*.87) < r        // hexagon  \n               : true;                              // square  \n// todo: distance-weighted brush brush\n}\n\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec2 R = iResolution.xy, d;\n\n    vec4 m=vec4(1e9), M=-m;\n\tfor (float y = -r; y<=r; y++)\n\t  for (float x = -r; x<=r; x++)\n          if (brush(d=vec2(x,y))) {\n              vec4 t = texture(iChannel0,(U+d)/R);\n              m = min(m,t); M = max(M,t);\n          }\n\n    O =  OP==1 ? M                 // dilatation\n       : OP==2 ? m                 // erosion\n       : texture(iChannel0,U/R); // neutral\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// here, operation 2\n\n#define OP T(3.,3.)                  // op 2:   0: neutral  1: dilatation   2 : erosion\n#define r 8.\n#define B T(9.,5.)                   // brush:  0: disk 1:  star  2: diamond  3: square \n#define p .3\n\n#define T(l,n) int(mod(iTime/l,n)) // demo mode: tuning(time)\n\nbool brush(vec2 d)                  //  brush element  = \n{ d = abs(d);\n  return  B==0 ? dot(d,d) <= r*r                    // disk\n        : B==1 ? pow(d.x,p)+pow(d.y,p) <= pow(r,p)  // star(p)\n        : B==2 ? d.x+d.y < r                        // diamond\n        : B==3 ? max(d.x,d.x*.5+d.y*.87) < r        // hexagon  \n               : true;                              // square  \n// todo: distance-weighted brush\n}\n\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec2 R = iResolution.xy, d;\n\n    vec4 m=vec4(1e9), M=-m;\n\tfor (float y = -r; y<=r; y++)\n\t  for (float x = -r; x<=r; x++)\n          if (brush(d=vec2(x,y))) {\n              vec4 t = texture(iChannel0,(U+d)/R);\n              m = min(m,t); M = max(M,t);\n          }\n\n    O =  OP==1 ? M                 // dilatation\n       : OP==2 ? m                 // erosion\n       : texture(iChannel0,U/R); // neutral\n}","name":"Buf C","description":"","type":"buffer"}]}