{"ver":"0.1","info":{"id":"7tffDf","date":"1651650735","viewed":68,"name":"Doug learns mandelbrot","username":"bentles","description":"mandel","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void squareComplex(inout float x, inout float y) {\n    //y is complex plane    \n    //(x + yi)^2\n    //(x + yi)(x + yi) \n    // x^2 + xyi + yxi + yi^2\n    // x^2-y^2 + 2xyi\n    \n    float f = 0.0; //sin(iTime)/ 400.0;\n    float comp = f + 2.0 * x * y;\n    float real = x * x - y * y;\n    \n    x = real;\n    y = comp;\n}\n\nfloat mandel(inout float x_c, inout float y_c) {\n    float xx = 0.0;\n    float yy = 0.0;\n    int iter = 500;\n    int i = 0;\n    while (i < iter && (xx * xx + yy * yy < 4.0)) {\n        squareComplex(xx,yy);\n        xx += x_c;\n        yy += y_c;\n        i++;\n    }\n    \n    x_c = xx;\n    y_c = yy;\n    \n    return float(i) / float(iter);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = 1.0;\n    //zoom = 1000.0/exp(iTime - 3.0);\n    zoom = 1000.0/(iTime * iTime * iTime * iTime);\n    float rat = iResolution.x/iResolution.y;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord /(iResolution.y) - vec2(0.5 * rat, 0.5);\n    uv *= zoom;\n    \n    //change to move the view:\n    uv += vec2(-0.534516,0.526141);\n    \n    //uv += zoom * iMouse.xy/iResolution.xy;\n    float x = uv.x;\n    float y = uv.y;\n    \n    float col = mandel(x, y);\n    //col = vec3(abs(uv.x), abs(uv.y), 0.0);\n    vec3 mandel = vec3(col);\n    vec3 back = vec3(0.8/x, .1/x, 1.0/y);\n    \n    // Output to screen\n    fragColor = vec4(back + mandel ,1.0);\n}","name":"Image","description":"","type":"image"}]}