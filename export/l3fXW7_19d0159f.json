{"ver":"0.1","info":{"id":"l3fXW7","date":"1709664619","viewed":181,"name":"Dither Webcam Filter","username":"iuhf","description":"Dither\n\nError fixed where differing camera and screen resolutions caused the camera to overflow the screen.  The video is now scaled to the screen size. (Thank you maras)","likes":2,"published":1,"flags":34,"usePreview":0,"tags":["dither"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lum(in vec3 col) {\n    return sqrt( 0.299*(col.r*col.r) + 0.587*(col.g*col.g) + 0.114*(col.b*col.b) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    //fragColor = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    //return;\n    \n    vec2 scalar = vec2(textureSize(iChannel0, 0).xy) / iResolution.xy;\n    \n    vec3 colorinit = texelFetch(iChannel0, ivec2(fragCoord*scalar), 0).rgb;\n    vec3 color = colorinit;\n    \n    \n    color = vec3(lum(color));\n    //fragColor = vec4(color, 1.);\n    //return;\n    \n    color *= 6.;\n    color = floor(color);\n    color /= 6.;\n    \n    vec2 uvmesh = fragCoord/iResolution.xy;\n    uvmesh.x = mod(uvmesh.x, 1./6.);\n    uvmesh.x += color.r;\n    \n    color = texelFetch(iChannel1, ivec2(uvmesh*iResolution.xy), 0).rgb;\n    \n    fragColor = vec4(color, 1.);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    if (uv.x <= (1./6.)) {\n        fragColor = BLACK;\n    } else if (uv.x <= (2./6.)) {\n        if (mod(fragCoord.x+fragCoord.y, 10.) == 0. || mod(fragCoord.x-fragCoord.y, 10.) == 0.) {\n            fragColor = vec4(1.);\n        } else {\n            fragColor = BLACK;\n        }\n    } else if (uv.x <= (3./6.)) {\n        if (mod(fragCoord.x+fragCoord.y, 8.) == 0. || mod(fragCoord.x-fragCoord.y, 8.) == 0.) {\n            fragColor = vec4(1.);\n        } else {\n            fragColor = BLACK;\n        }\n    } else if (uv.x <= (4./6.)) {\n        if (mod(fragCoord.x+fragCoord.y, 6.) == 0. || mod(fragCoord.x-fragCoord.y, 6.) == 0.) {\n            fragColor = vec4(1.);\n        } else {\n            fragColor = BLACK;\n        }\n    } else if (uv.x <= (5./6.)) {\n        if (mod(fragCoord.x+fragCoord.y, 4.) == 0. || mod(fragCoord.x-fragCoord.y, 4.) == 0.) {\n            fragColor = vec4(1.);\n        } else {\n            fragColor = BLACK;\n        }\n    } else {\n        fragColor = vec4(1.);\n    } \n    \n    fragColor *= vec4(colour(floor(uv.x*6.)/6.), 1.);\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define BLACK vec4(vec3(0.),1.)\n#define TAU 6.28318530718\n\nvec3 colour(in float x) {\n    \n    vec4 r = vec4(1., (1./3.), 0.5, 0.5);\n    vec4 g = vec4(1., 0., 0.5, 0.);\n    vec4 b = vec4(1., 0., 0.5, 0.5);\n    \n    return vec3(clamp(cos(TAU*x*r.x + TAU*r.y)*r.z + r.w, 0., 1.), clamp(cos(TAU*x*g.x + TAU*g.y)*g.z + g.w, 0., 1.), clamp(cos(TAU*x*b.x + TAU*b.y)*b.z + b.w, 0., 1.));\n        \n}","name":"Common","description":"","type":"common"}]}