{"ver":"0.1","info":{"id":"msXXzH","date":"1668497396","viewed":69,"name":"Heart Exercise","username":"yli110","description":"Reference mathematical method by Inigo Quilez.\nHello everyone! this is my first fragment shader, I am still learning, please give me more advice.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["heart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st -= 0.5;\n    st.x *= iResolution.x/iResolution.y;\n    st *= 1.2;\n    //st += 0.1*vec2(cos(u_time),sin(u_time));\n    /*\n    mat3 rotate = mat3(cos(iTime),0.,sin(iTime),\n                        0.,1.,0.,\n                       -sin(iTime),0.,cos(iTime));\n    \n    */\n    \n    //https://www.youtube.com/watch?v=BFld4EBO2RE&list=RDCMUCdmAhiG8HQDlz8uyekw4ENw&in\n    float r = 1.+0.15*pow(.5+.5*sin(6.28*iTime+st.y/25.0),4.);\n    vec3 xyz = vec3(st.x,st.y,sqrt(r*r-st.x*st.x-st.y*st.y));\n    xyz.z = xyz.z*(2.-xyz.y/15.);\n    xyz.y = 1.2*xyz.y-abs(xyz.x)*sqrt((20.*abs(xyz.x)/15.));\n\n    \n    vec3 color = vec3(0.);\n    \n    //Ray light\n    vec3 ro = vec3(0.);\n    vec3 rd = normalize(vec3(xyz.x,xyz.y,xyz.z));\n\n    //Sphere\n    vec3 SpCenter = vec3(0.,0.,8.);\n    \n\n    float map = dot(SpCenter-ro,rd);\n    vec3 p = ro + map*rd;\n\n    float d = length(SpCenter-ro-p);\n    if(d < r)\n    {\n        //intersection\n        float line = sqrt(r*r-d*d);\n        //float t1 = line + map;\n        //float t2 = line - map;\n        color = vec3(line/r*0.8,0.,0.);\n    } \n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}