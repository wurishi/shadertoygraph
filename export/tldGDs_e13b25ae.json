{"ver":"0.1","info":{"id":"tldGDs","date":"1578023940","viewed":152,"name":"original-27173-2","username":"jorge2017a1","description":"original-27173-2","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["original271732"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//////my small shader demo.....  \n// todo : text or something on the blue screen ->lookat screen with cam...\n//  feel free to mod it ;-)\n\n\n//Modificado por Jorge f.p fecha- 02/ene/2020\n\n//#define size resolution\nbool bColoring=false;//i luv globals\nvec3 mcol;\n\nconst float mr=0.25, mxr=1.0;\nconst vec4 scale=vec4(-3.12,-3.12,-3.12,3.12),p0=vec4(0.0,1.59,-1.0,0.0);\nconst vec3 light_col=vec3(1.0,0.7,0.4);\nfloat mdl;\n\n\nfloat DE(in vec3 z0){\n\tvec4 z = vec4(z0,1.0);\n\tfor (int n = 0; n < 3; n++) {\n\t\tz.xyz=clamp(z.xyz, -0.94, 0.94)*2.0-z.xyz;\n\t\tz*=scale/clamp(dot(z.xyz,z.xyz),mr,mxr);\n\t\tz+=p0;\n\t}\n\tif(bColoring)mcol+=z.xyz;\n\tz.y-=3.0*sin(iTime*3.0+floor(z0.x+0.5)+floor(z0.z+0.5));\n\tfloat dS=(length(max(abs(z.xyz)-vec3(1.2,49.0,1.4),0.0))-0.06)/z.w;\n\treturn dS;\n}\n\n\nfloat DEL(in vec3 z0){\n\tvec4 z = vec4(z0,1.0),p0=vec4(0.0,1.28,-1.12,0.0);\n\tz.xyz=clamp(z.xyz, -0.94, 0.94)*2.0-z.xyz;\n\tz*=scale/clamp(dot(z.xyz,z.xyz),mr,mxr);\n\treturn (length(z.xyz+vec3(0.0,5.8,2.2))-0.6)/z.w;\n}\n\n\n\nfloat MDE(in vec3 z0){\n\tfloat dL=DEL(z0);\n\tfloat dS=DE(z0);\n\tmdl=min(mdl,dL);\n\treturn min(dS,dL);\n}\n\nfloat rndStart(vec2 co){return 0.8+0.2*fract(sin(dot(co,vec2(123.42,117.853)))*412.453);}\n\nfloat ShadAO(vec3 ro, vec3 rd, float px, float dist){\n\tfloat res=1.0,d,t=4.0*px*rndStart(gl_FragCoord.xy);\n\tfor(int i=0;i<10;i++){\n\t\td=max(0.0,DE(ro+rd*t))+0.01;\n\t\tif(t+d>dist)break;\n\t\tres=min(res,2.0*d/t);\n\t\tt+=d;\n\t}\n\treturn res;\n}\n\nmat3 lookat(vec3 fw,vec3 up){\n\tfw=normalize(fw);vec3 rt=normalize(cross(fw,up));return mat3(rt,cross(rt,fw),fw);\n}\n\n\n\nvec3 Light(vec3 so, vec3 rd, float px, float dist){\n\tvec2 v=vec2(px,0.05);\n\tmcol=vec3(0.0);\n\tso+=rd*(dist-px);\n\tbColoring=true;//take color samples\n\t\n    vec3 col,norm=normalize(vec3(-DE(so-v.xyy)+DE(so+v.xyy),\n\t\t-DE(so-v.yxy)+DE(so+v.yxy),-DE(so-v.yyx)+DE(so+v.yyx)));\n    \n\tbColoring=false;//crappy lighting below\n\tmcol=vec3(0.9)+sin(mcol)*0.251;\n    \n\tfloat dL=DEL(so);\n\t\n    if(dL>.0*px){\n\t\tv=vec2(dL,0.0);\n\t\tvec3 light_dir=-normalize(vec3(-DEL(so-v.xyy)+DEL(so+v.xyy),-DEL(so-v.yxy)+DEL(so+v.yxy),-DEL(so-v.yyx)+DEL(so+v.yyx)));\n\t\t\n        light_dir=normalize(light_dir+vec3(0.87,1.0,0.95));\n        \n        \n\t\t\n        vec3 diffuse_col=mcol+vec3(-0.125,0.5,0.25)*dot(norm,rd);\n        \n\t\tfloat shad=ShadAO(so,light_dir,px,dL);\n\t\tfloat dif=dot(norm,light_dir)*0.5+0.5;\n\t\tfloat spec=0.25*pow(max(0.0,dot(light_dir,reflect(rd,norm))),0.25);\n        \n\t\tdif=min(dif,shad);\n\t\tcol=diffuse_col*dif+light_col*spec*shad;\n\t\tcol/=(1.0+dL*dL);\n        \n\t}else\n    {\n        col=light_col*1.5;}\n\treturn col;\n}\n\nfloat hash( float n ){return fract(sin(n)*43758.5453);}\n\nfloat hash( vec2 n ){return fract(sin(dot(n*0.123,vec2(78.233,113.16)))*43758.351);}\n\nfloat noise(in float p){\n\tfloat c=floor(p),f=fract(p);\n\treturn mix(hash(c),hash(c+1.0),f);\n}\n\n\nfloat noise(in vec2 p){\n\tvec2 c=floor(p),f=fract(p),v=vec2(1.0,0.0);\n\treturn mix(mix(hash(c),hash(c+v),f.x),\n\t\tmix(hash(c+v.yx),hash(c+v.xx),f.x),f.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat zoom=1.5,px=2.0/(iResolution.y*zoom);//find the pixel size\n\tfloat tim=iTime;\n\t\n\t//position camera\n\tvec3 ro=vec3(sin(tim*0.1),0.0,cos(tim*0.05));\n    \n\tro.z=0.25+ro.z*abs(ro.z);\n\tro*=3.9;\n    \n\tif(abs(ro.x)>3.8)ro.x=3.8*sign(ro.x);\n\tif(abs(ro.z)>3.9)ro.z=3.9*sign(ro.z);\n\t\n    vec3 rd=normalize(vec3((2.0*fragCoord.xy-iResolution.xy)/iResolution.y,zoom));\n\trd=lookat(vec3(0.25+sin(tim*0.6),sin(tim*0.4),0.25)-ro,vec3(0.01,0.99,0.02))*rd;\n\t\n\t//march\n\tfloat t=rndStart(gl_FragCoord.xy)*0.5,tt=t,d,dm=100.0,tm=0.0,od=1000.0;\n\tfloat ft=(sign(rd.y)-ro.y)/rd.y,ref=1.0,dR=clamp(DE(ro+rd*ft)*10.0,0.0,1.0);\n\tfloat maxT=min((sign(rd.x)*4.0-ro.x)/rd.x,(sign(rd.z)*4.0-ro.z)/rd.z);\n    \n\tbool bGrab=false;\n    \n\tfloat stepGlow=0.0;\n    \n\tmdl=100.0;\n    \n\tfor(int i=0;i<48;i++){\n\t\td=MDE(ro+rd*t);\n\t\tt+=d;tt+=d;stepGlow+=0.006;\n\t\tif(t>ft){\n\t\t\tro+=rd*ft;\n\t\t\tt=t-ft;//the overshoot\n\t\t\tif(tt-t<maxT){//hit floor/ceiling\n\t\t\t\tvec2 p=mod(2.0*vec2(ro.x+ro.z,ro.x-ro.z),2.0)-1.0;\n\t\t\t\tfloat tile=sign(p.x*p.y);\n\t\t\t\tif(tile>0.0){\n\t\t\t\t\trd.y=-rd.y;\n\t\t\t\t\tft=(sign(rd.y)-ro.y)/rd.y;\n\t\t\t\t\tref*=0.75;\n\t\t\t\t}else{\n\t\t\t\t\ttt+=1000.0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}else{//hit wall\n\t\t\t\tt=maxT-tt+t;\n\t\t\t\tro+=rd*t;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}else if(d>od){\n\t\t\tif(bGrab && od<px*tt && tm==0.0){\n\t\t\t\tdm=od;\n\t\t\t\ttm=tt-d-od;\n\t\t\t\tbGrab=false;\n\t\t\t}\n\t\t}else bGrab=true;\n\t\tod=d;\n\t\tif(tt>maxT){\n\t\t\tt-=tt-maxT;\n\t\t\tro=ro+rd*t;\n\t\t\tbreak;\n\t\t}\n\t\t\n        if(d<0.0001)break;//hard stop\n        \n\t}\n\t\n\t//color\n\tvec3 col=vec3(0.02,0.0,0.0);\n\tif(tt<maxT){\n\t\tif(d<px*t){\n\t\t\tcol=mix(Light(ro+rd*t,rd,px*t,d),col,clamp(d/(px*t),0.0,1.0));\n\t\t}\n\t\tif(dm<px*tm){\n\t\t\tcol=mix(Light(ro+rd*tm,rd,px*tm,dm),col,clamp(dm/(px*tm),0.0,1.0));\n\t\t}\n\t}else{\n\t\tif(tt>1000.0){\n\t\t\tvec2 p=mod(2.0*vec2(ro.x+ro.z,ro.x-ro.z),2.0)-1.0;\n\t\t\tfloat g=max(0.15,pow(1.55*max(abs(abs(p.x)-0.5),abs(abs(p.y)-0.5)),6.0));\n\t\t\tcol=vec3(dR*g);\n\t\t\ttt-=1000.0;\n\t\t}else{\n\t\t\ttt=maxT;\n\t\t\tif(abs(ro.z)>abs(ro.x))ro.xz=ro.zx;\n\t\t\td=noise(ro.yz*70.0);\n\t\t\tro.y*=4.0;\n\t\t\tod=max(abs(ro.z),abs(ro.y))-1.0;\n\t\t\tdm=pow(1.0-clamp(abs(sin(iTime*10.0+ro.z*150.0*sin(iTime))+ro.y*1.2),0.0,1.0),10.0);\n\t\t\tro.y+=0.5;\n\t\t\tro.z+=floor(mod(ro.y+0.5,2.0))*0.25;\n\t\t\tcol=vec3(0.2,0.15,0.1)*(1.0-0.5*exp(-200.0*abs((fract(ro.z*2.0)-0.5)*(fract(ro.y)-0.5))));\n\t\t\tcol-=d*vec3(0.1,0.05,0.0);\n\t\t\tcol=mix(vec3(0.0,dm,1.0)*clamp(abs(od*2.0),0.0,0.5),col,clamp(od*10.0,0.0,1.0));\n\t\t}\n\t}\n\td=noise(iTime*10.0+rd.x*rd.z);\n\tcol=mix(vec3(dR),pow(col,vec3(ref)),ref);\n\tcol+=light_col*exp(-mdl*100.0*clamp(d,0.05,0.5));\n\tcol+=vec3(0.4,0.8,1.0)*pow(stepGlow*clamp(4.0-d*100.0,1.0,4.0),3.0);\n\tcol=3.0*col*exp(-tt*0.3);\n\tfragColor=vec4(col,1.0);\n} \n\n","name":"Image","description":"","type":"image"}]}