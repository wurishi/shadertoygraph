{"ver":"0.1","info":{"id":"lfycWR","date":"1731745767","viewed":94,"name":"circular glass","username":"Tiberon","description":"glass- looking shader.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["weird","bright"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ){\n     vec3 a = vec3(.5,.5,.5);\n     vec3 b = vec3(.5,.5,.5);\n     vec3 c = vec3(1.,1.,1.);\n     vec3 d = vec3(0.263,0.416,0.557);\n     return a+b*-cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy*2.0-1.0;\n    \n    uv.x*=iResolution.x/iResolution.y;\n    \n    vec3 fcol=vec3(0.);\n    \n    vec2 uv0=uv;\n    \n    float nTime = sin(iTime*0.01)*200.+sin(iTime);\n    \n    for (float i =0.0; i<3.; i++){\n        \n        uv*=2.;\n        \n        uv=fract(uv);\n        \n        uv-=0.5;\n    \n        uv.y+=sin(uv.x*8.+(nTime)*cos(length(uv0)))/8.;\n    \n        uv.x+=cos(uv.y*8.+(nTime)*sin(length(uv0)))/8.;\n    \n        float d=length(uv)*exp(-length(uv0));\n    \n        d=sin(d*8.+iTime)/8.;\n    \n        d=abs(d);\n    \n        d=pow(0.01/d,1.2);\n    \n        vec3 col = tan(palette(length(uv0) +i*0.4+ iTime*0.4));\n    \n        fcol+=col*d;\n    }\n \n    fragColor = vec4(fcol,1.0);\n}","name":"Image","description":"","type":"image"}]}