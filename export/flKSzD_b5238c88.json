{"ver":"0.1","info":{"id":"flKSzD","date":"1640274682","viewed":132,"name":"Heating psychedelic noise","username":"AnicetN","description":"Looks like you can generate an unlimited amount of crazy patterns just by tweaking how the angle of the wave gets computed","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14;\n\n// Taken from https://www.shadertoy.com/view/4tSSDh\nfloat wave(float angle, float phase, vec2 pos, float wavelength) {\n\treturn .5+.5*sin(2.0*PI/wavelength*(phase + abs(pos.x * cos(angle) - pos.y * sin(angle))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime*2.;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5);\n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv += vec2(cos(t*0.05), sin(t*0.05));\n\n    float w = 0.;\n    \n    for(float i = 0.; i < 6.; i++) {\n        w += wave(i, 0.10, uv+vec2(i*t*0.001), 0.1);\n    }\n    \n    float color = pow(1.9, w);\n\n    fragColor = vec4(\n        .5+.5*sin(color+(0.)+t),\n        .5+.5*sin(color+(1.1)+t),\n        .5+.5*sin(color+(2.2)+t),\n        1.0\n    );\n}","name":"Image","description":"","type":"image"}]}