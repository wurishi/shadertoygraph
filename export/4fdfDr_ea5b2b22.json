{"ver":"0.1","info":{"id":"4fdfDr","date":"1732969261","viewed":48,"name":"Faux feedback loop","username":"josemorval","description":"An attempt for a guided feedback loop.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tv","loop","feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITERATIONS 20\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Here we offset a bit the focal point\n    float angle = 0.2 * iTime;\n    vec2 offset = 0.5 + 0.3 * vec2( cos( 1.51 * angle ), sin( 1.49 * angle ) );\n    \n    uv+=-offset;\n    uv*=0.8;\n    \n    //Time parameter \n    float t = 3.0 * iTime;\n    \n    \n    //Scale factor\n    float beta = 0.3;\n    uv*= 1.0 - beta  * pow( fract(- t), 0.85 );\n    \n    //Faux feedback computation\n    vec2 newuv = uv;\n    for(int i=0; i<ITERATIONS; i++)\n    {\n        newuv = 1.0 / ( 1.0 - beta ) * newuv;    \n        if(newuv.x < -offset.x+1.0 && newuv.y< -offset.y+1.0 &&  newuv.x>-offset.x && newuv.y> -offset.y  ) uv = newuv;\n    }\n    \n    uv+=offset;\n\n    //UV's at left, texture at right\n    vec3 col = mix( texture(iChannel0,uv).rgb, vec3( uv, 0.0 ), step( fragCoord.x/iResolution.x, 0.5 ) );\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}