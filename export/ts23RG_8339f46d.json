{"ver":"0.1","info":{"id":"ts23RG","date":"1549228928","viewed":303,"name":"Brushed Steel Thing","username":"cbrpnk","description":"everyday","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 p) {\n    return fract(sin(dot(p, vec2(123.3345, 876.654))) * 984594.2343);\n}\n\nfloat perlin(vec2 p){\n    p *= 10.;\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    \n    float bl = random(i);\n    float br = random(i + vec2(1, 0));\n    float tl = random(i + vec2(0, 1));\n    float tr = random(i + vec2(1, 1));\n    \n    float x = mix(bl, br, smoothstep(0., 1., f.x));\n    float y = mix(tl, tr, smoothstep(0., 1., f.x));\n    return mix(x, y, smoothstep(0., 1., f.y));\n}\n\nvec2 rotate(vec2 p, float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, s, -s, c) * p;\n}\n\nfloat cube(vec3 p, vec3 d)\n{\n    p = abs(p);\n\tfloat s = length(p) - .7;\n    s = max(s, p.x-d.x);\n    s = max(s, p.y-d.y);\n    s = max(s, p.z-d.z);\n    \n    return s;\n}\n\nfloat caps(vec3 p, float l, float w)\n{\n    return length(vec3(0., p.y, 0.)-vec3(p.x, clamp(p.y, -1., 1.), p.z)) - w;\n}\n\nfloat sphere(vec3 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat map(vec3 p)\n{\n    p.xz = rotate(p.xz, iTime);\n    p.yz = rotate(p.yz, iTime);\n    \n    //p = mod(p+vec3(2.5), 5.)-vec3(2.5);\n    float c = cube(p, vec3(.5));\n    float s = sphere(p, 1.);\n    \n    float h = sphere(p-vec3(.7, 0., 0.), .55);\n    float h2 = sphere(p-vec3(-.7, 0., 0.), .55);\n    float h3 = sphere(p-vec3(0., .7, 0.), .55);\n    float h4 = sphere(p-vec3(0., -.7, 0.), .55);\n    float h5 = sphere(p-vec3(0., 0., .7), .55);\n    float h6 = sphere(p-vec3(0., 0., -.7), .55);\n    \n    vec3 p2 = mod(p+vec3(.1), .5)-vec3(.1);\n    float c1 = caps(p2, .1, .1);\n    float c2 = caps(p2.yzx, .1, .1);\n    float c3 = caps(p2.zxy, .1, .1);\n    \n    vec3 p3 = mod(p+vec3(.2), .38)-vec3(.2);\n    float s2 = sphere(p3, .1);\n    \n    vec3 p4 = mod(p+vec3(.025), .18)-vec3(.025);\n    float s3 = sphere(p4, .05);\n    \n    float d = mix(c, s, .4);\n    d = max(d, -h);\n    d = max(d, -h2);\n    d = max(d, -h3);\n    d = max(d, -h4);\n    d = max(d, -h5);\n    d = max(d, -h6);\n    \n    d = max(d, -c1);\n    d = max(d, -c2);\n    d = max(d, -c3);\n    \n    d = max(d, -s2);\n    d = mix(d, -s3, .03);\n    d = mix(d, s, .01);\n    \n    d += perlin(p.yy*20.)*.0003;\n    \n    return d;\n}\n\nvec3 getNormal(vec3 p)\n{\n    return normalize(vec3(\n    \tmap(p+vec3(0.001, 0., 0.)) - map(p-vec3(0.001, 0., 0.)),\n        map(p+vec3(0., 0.001, 0.)) - map(p-vec3(0., 0.001, 0.)),\n        map(p+vec3(0., 0., 0.001)) - map(p-vec3(0., 0., 0.001))\n    ));\n}\n\nfloat march(vec3 ro, vec3 rd)\n{\n    float t=0.;\n    for(int i=0; i<128; ++i) {\n    \tfloat d = map(ro+t*rd);\n        if(d < .001) break;\n        t += d;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - vec2(.5);\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 eye = vec3(0., 0., abs(sin(iTime*.4))*2. + .5);\n    vec3 lookat = normalize(vec3(uv.x, uv.y, -1.));\n    \n    \n    eye.xz = rotate(eye.xz, sin(iTime)*.5);\n    eye.yz = rotate(eye.yz, sin(iTime)*.5);\n    lookat.xz = rotate(lookat.xz, sin(iTime)*.5);\n    lookat.yz = rotate(lookat.yz, sin(iTime)*.5);\n\t\n    \n    float d = march(eye, lookat);\n    vec3 normal = getNormal(eye+d*lookat);\n    vec3 col = vec3(.8, .7, 1.) * clamp(dot(normal, vec3(0., 1., 0.)), 0., 1.);\n    col += vec3(1., .7, .8) * clamp(dot(normal, vec3(-1., 0., -1.)), 0., 1.);\n    col += vec3(.2*d);\n\t\n    col = vec3(.5, .5, .5) * col * d * .2;\n    col += vec3(.5) * pow(clamp(dot(normal, -lookat), 0., 1.), 5.);\n    col += vec3(1., .5, .5) * pow(clamp(dot(normal, -lookat), 0., 1.), 50.);\n    \n    if(d>20.) col = vec3(0.);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}