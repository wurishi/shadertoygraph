{"ver":"0.1","info":{"id":"7ttGWS","date":"1636655176","viewed":75,"name":"Rectangle bevel normal map","username":"tdhooper","description":"Rectangle bevel normal map","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rectanglenormalbevel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 primaryAxis(vec2 p)\n{\n    vec2 a = abs(p);\n    return step(a.yx, a.xy) * sign(p);\n}\n\nvec3 bevelNormal(vec2 uv, vec2 boxSize, float width) {\n    uv = uv * 2. - 1.;\n    uv *= boxSize;\n    vec2 sgn = sign(uv);\n    uv = abs(uv);\n    uv -= boxSize - width;\n    uv = max(uv, 0.);\n    uv *= sgn;\n    vec2 dir = primaryAxis(uv);\n    vec3 nor = normalize(vec3(dir, 1.5));\n    return nor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord - iResolution.xy * .5;\n\n    vec2 boxSize = iResolution.xy * (vec2(sin(iTime), cos(iTime)) * .3 + .5);\n    \n    vec2 boxUv = uv / boxSize + .5;\n   \n    if (boxUv.x < 0. || boxUv.y < 0. || boxUv.x > 1. || boxUv.y > 1.) {\n        fragColor = vec4(0);\n        return;\n    }\n\n    float thickness = (sin(iTime * .5) * .3 + .5) * iResolution.y * .2;\n   \n    vec3 col = bevelNormal(boxUv, boxSize, thickness) * .5 + .5;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}