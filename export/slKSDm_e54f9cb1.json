{"ver":"0.1","info":{"id":"slKSDm","date":"1640846656","viewed":154,"name":"Funny Sin Curve","username":"mmggww","description":"Draw Sin Curve","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["sincurve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433\n\nfloat _MainFreq = 10.0;\nfloat _MainAM = 0.15;\nfloat _MainSpeed = 2.0;\nfloat _MainOffY = 0.5;\n\nstruct CurveParam\n{\n    float freq;\n    float am;\n    float offX;\n    float offY;\n    float speed;\n    float width;\n    \n    float col_h;\n    float col_s;\n    float col_v;\n};\n\nstruct CicleParam\n{\n    float offX;\n    float offY;\n\n    float speed;\n    float cicle;\n    float radius;\n    \n    float col_h;\n    float col_s;\n    float col_v;\n    \n};\n\nvec3 GetColor(float hue, float saturation, float value)\n{\n    vec3 rgb = clamp(abs(mod(hue * 6. + vec3(0.,4.,2.),6.)-3.)-1., 0., 1.);\n    return value * mix(vec3(1.), rgb, saturation);\n}\n\nfloat GetCurveX(vec2 uv, CurveParam curve)\n{\n    float freq  = curve.freq ;\n    float offX  = curve.offX ;\n    float speed = curve.speed;\n\n    float x = freq * uv.x + iTime * speed + offX;\n    return x;\n}\n\nvec3 DrawSinLine(vec2 uv, CurveParam curve)\n{\n\n    float am    = curve.am   ;    \n    float offY  = curve.offY ;    \n    float width = curve.width;    \n    float col_h = curve.col_h;\n    float col_s = curve.col_s;\n    float col_v = curve.col_v;\n    \n    float x = GetCurveX(uv, curve);\n    float var = am * sin(x) + offY;\n    \n    width = width / cos(atan(cos(x)));    \n    float e = 0.01 * width / max(abs(uv.y - var), 0.001);\n    \n    vec3 color = GetColor(col_h, col_s, col_v);\n    \n    return e * color;\n}\n\nvec3 DrawCicle(vec2 uv, CicleParam cicle)\n{\n\n    float x = cicle.offX;\n    float y = cicle.offY;\n    float speed = cicle.speed;\n    float cicleTime = cicle.cicle;\n    float radius = cicle.radius;\n    float col_h = cicle.col_h;\n    float col_s = cicle.col_s;\n    float col_v = cicle.col_v;\n       \n    vec3 color = GetColor(col_h, col_s, col_v);\n    \n    y = y / iResolution.x * iResolution.y;\n    uv.y = uv.y / iResolution.x * iResolution.y;\n    \n\n    float cnt = floor((uv.x - x) / cicleTime);\n    if(uv.x > x + (cnt+0.5) * cicleTime)\n    {\n        x = x + (cnt + 1.0) * cicleTime;\n    }\n    else\n    {\n        x = x + cnt * cicleTime;\n    }\n    \n    color = color * 0.05 * radius / length(uv - vec2(x, y));\n    \n    return color;\n}\n\nCurveParam GetCurve_01(vec2 uv)\n{\n    CurveParam curve;\n    curve.freq  = _MainFreq;\n    curve.am    = _MainAM;\n    curve.offX  = 0.0;\n    curve.offY  = _MainOffY;\n    curve.speed = _MainSpeed;\n    curve.width = 0.5;    \n        \n    curve.col_h = 0.2 * sin(uv.x + iTime * 0.8) + 0.8;\n    curve.col_s = 1.0;\n    curve.col_v = 1.0;\n    \n    return curve;\n}\n\nCurveParam GetCurve_02(vec2 uv)\n{\n    CurveParam curve;\n    curve.freq  = _MainFreq;\n    curve.am    = _MainAM;\n    curve.offX  = PI;\n    curve.offY  = _MainOffY;\n    curve.speed = _MainSpeed;\n    curve.width = 0.5;\n        \n    curve.col_h = 0.2 * sin(uv.x + iTime * 0.8) + 0.8;\n    curve.col_s = 1.0;\n    curve.col_v = 1.0;\n    \n    return curve;\n}\n\nCurveParam GetCurve_03(vec2 uv)\n{\n    CurveParam curve;\n    curve.freq  = 20.0;\n    curve.am    = 0.12 * sin(uv.x * PI / 2.0);\n    curve.offX  = 0.0;\n    curve.offY  = 0.85;\n    curve.speed = 2.0;\n    curve.width = 0.8 * exp(uv.x - 1.0);\n        \n    curve.col_h = 0.8;\n    curve.col_s = 1.0;\n    curve.col_v = 1.0;\n    \n    return curve;\n}\n\nCurveParam GetCurve_04(vec2 uv)\n{\n    CurveParam curve;\n    curve.freq  = 20.0;\n    curve.am    = 0.12 * cos(uv.x * PI / 2.0);\n    curve.offX  = 0.0;\n    curve.offY  = 0.15;\n    curve.speed = -2.0;\n    curve.width = 0.8 * exp(-uv.x);;\n        \n    curve.col_h = 0.8;\n    curve.col_s = 1.0;\n    curve.col_v = 1.0;\n    \n    return curve;\n}\n\nCurveParam GetCurve_05(vec2 uv)\n{\n    CurveParam curve;\n    curve.freq  = PI / 2.0;\n    curve.am    = 0.12;\n    curve.offX  = 0.0;\n    curve.offY  = 0.85;\n    curve.speed = 0.0;\n    curve.width = 0.8 * exp(uv.x - 1.0);\n        \n    curve.col_h = 0.8;\n    curve.col_s = 1.0;\n    curve.col_v = 1.0;\n    \n    return curve;\n}\n\nCurveParam GetCurve_06(vec2 uv)\n{\n    CurveParam curve;\n    curve.freq  = PI / 2.0;\n    curve.am    = 0.12;\n    curve.offX  = PI * 3.0 / 2.0;\n    curve.offY  = 0.15;\n    curve.speed = 0.0;\n    curve.width = 0.8 * exp(-uv.x);\n        \n    curve.col_h = 0.8;\n    curve.col_s = 1.0;\n    curve.col_v = 1.0;\n    \n    return curve;\n}\n\nCicleParam GetCicle_01(vec2 uv)\n{\n\tCicleParam cicle;\n\n    cicle.offX = .000 - iTime * _MainSpeed / _MainFreq;\n    cicle.offY = _MainOffY;\n    cicle.speed = _MainSpeed;\n    cicle.cicle = PI / _MainFreq;\n    cicle.radius = 0.8;\n\n    cicle.col_h = 1.0;\n    cicle.col_s = 0.0;\n    cicle.col_v = 0.1;\n\n\n    return cicle;\n}\n\n\nCicleParam GetCicle_02(vec2 uv)\n{\n\tCicleParam cicle;\n\n    cicle.offX = PI / (2.0 * _MainFreq) - iTime * _MainSpeed / _MainFreq;\n    cicle.offY = _MainOffY;\n    cicle.speed = _MainSpeed;\n    cicle.cicle = PI / _MainFreq;\n    cicle.radius = 1.0;\n\n    cicle.col_h = 0.2 * sin(uv.x + iTime * 0.8) + 0.8;\n    cicle.col_s = 0.95;\n    cicle.col_v = 0.4;\n\n\n    return cicle;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.0);\n    CurveParam curve;\n    CicleParam cicle;\n \n    curve = GetCurve_01(uv);\n    col = col + DrawSinLine(uv, curve); \n\n    curve = GetCurve_02(uv);\n    col = col + DrawSinLine(uv, curve); \n    \n    curve = GetCurve_03(uv);\n    col = col + DrawSinLine(uv, curve); \n    \n    curve = GetCurve_04(uv);\n    col = col + DrawSinLine(uv, curve);     \n    \n    curve = GetCurve_05(uv);\n    col = col + DrawSinLine(uv, curve); \n    \n    curve = GetCurve_06(uv);\n    col = col + DrawSinLine(uv, curve);\n\n    cicle = GetCicle_01(uv);\n    col = col + DrawCicle(uv, cicle);\n    \n    cicle = GetCicle_02(uv);\n    col = col + DrawCicle(uv, cicle);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}