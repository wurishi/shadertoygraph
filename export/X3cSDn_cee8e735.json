{"ver":"0.1","info":{"id":"X3cSDn","date":"1718844078","viewed":35,"name":"chechered pattern (integer)","username":"jedikoops","description":"note: using integers makes it laggy.\nlesson: the function mod() can use floats and could potentially remove the hitchy movement\nsolution: https://www.shadertoy.com/view/M3VXRz","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["jedikoops"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 xy = fragCoord/iResolution.xy;\n\n    int scale = int(20.0*sin(iTime)+102.0);\n    \n    fragColor = vec4(1.0,1.0,1.0,1.0);\n    \n    // Time varying pixel color\n    if(int(fragCoord.x) % scale >= int(scale/2)){\n        if(int(fragCoord.y) % scale >= int(scale/2)){\n            fragColor = vec4(0,0,0,0);\n        }\n    }\n\n    if(int(fragCoord.x) % scale < int(scale/2)){\n        if(int(fragCoord.y) % scale < int(scale/2)){\n            fragColor = vec4(0,0,0,0);\n        }\n    }\n    \n\n    // Output to screen\n\n}","name":"Image","description":"","type":"image"}]}