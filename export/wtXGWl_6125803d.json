{"ver":"0.1","info":{"id":"wtXGWl","date":"1557996031","viewed":465,"name":"RaymarchTuto","username":"Daalvehn","description":"First try at raymarching","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["test","raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotation (float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nfloat sphere( vec3 pos, float radius)\n{\n    return length(pos) - radius;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return length(max(d,0.0));\n}\n\nfloat map(vec3 pos)\n{\n    pos.xy *= rotation(pos.z * .1);\n    pos.xy *= rotation(cos(iTime*10.) * 0.01);\n    pos.yz *= rotation(sin(iTime*3.) * 0.05);\n    pos.z += iTime ;\n\tpos.y += texture(iChannel0,abs(pos.xz) * .51).r;\n        \n    float size = 2.5;\n    vec3 altPos = pos;\n    altPos.yz *= rotation(iTime*.001);\n    altPos = mod(altPos, size) - size/2.;\n        \n    pos = mod(pos, size) - size/2.;\n    \n\tfloat radius = 0.5;\n    float geometry = sphere(pos, radius*0.5*sin(iTime * 5.0 + cos(pos.z)) * 0.5 +.5);\n    geometry = min(geometry, sdBox(pos, vec3(.1,.1,50) * radius));\n    geometry = min( geometry, sdBox(pos, vec3(50,.1,.1) * radius));\n    \n    geometry = min( geometry, sdBox(altPos*2., vec3(.1,50,.1) * radius*0.5));\n        \n    return geometry; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    vec2 position = fragCoord / iResolution.xy;\n    position = position * 2. - 1.;\n    position.x *= iResolution.x/iResolution.y;\n    \n    vec3 eye = vec3(0., 0., -2.);\n    vec3 ray = normalize(vec3(position, 1.));\n    float shade = 0.0;\n    \n    const float rayStep = 40.;\n    \n    for (float index = 0.; index < rayStep; ++index)\n    {\n        float dist = map(eye) ;\n        if (dist < 0.0001)\n        {\n            shade = 1. - float(index) / rayStep;\n            break;\n        }\n        \n        eye += ray * dist;\n    }\n     \n\n    fragColor = vec4(shade );\n    fragColor.rg *= rotation(eye.z) ;\n    \n    //fragColor.gb *= rotation(eye.x);\n}","name":"Image","description":"","type":"image"}]}