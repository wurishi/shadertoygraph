{"ver":"0.1","info":{"id":"WsSXWK","date":"1583122751","viewed":76,"name":"nightmares","username":"asdhyq","description":"qasadadda","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sadads"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 red = vec3(225./255., 95./255., 60./255.);\n\n\nfloat rand(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898,78.233)))*10000.*iTime);\n\t//return fract(sin(dot(uv, iMouse.xy))*10000.);\n\t//return (fract(sin(dot(uv, vec2(12., 70.)))*100000.));\n   // return (fract(sin(dot(uv, vec2(12., 70.)))*43758.5453123));\n}\nfloat noise(in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = rand(i);\n    float b = rand(i + vec2(1.0, 0.0));\n    float c = rand(i + vec2(0.0, 1.0));\n    float d = rand(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners porcentages\n    return mix(a, b, u.x) + \n            (c - a)* u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}\nfloat Circle (vec2 uv, vec2 p,float radius, float blur)\n{\n    float dia= length(uv-p);\n    float c = smoothstep(radius,radius - blur, dia);\n    \n    return c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t// Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float random = rand(uv);\n    random += noise(uv);\n    random *= .02;\n    random *= tan(iTime )* 5.;\n\tfloat value = step(.0 + random,uv.x) - step(1. - random,uv.x);\n    uv.x += random;\n    uv.y -= random;\n    \n    float e = fract(sin(uv.x * 100.) * 5647.) ;\n    e *= rand(uv);\n    vec3 col = vec3(e*value);\n    \n    \n    uv -= .5;\n  \tfloat c = Circle(uv,vec2(.0,-.05),.3,.01);\n    float c2;\n    c += Circle(uv,vec2(-.3,.2),.15,.01);\n    c += Circle(uv,vec2(.3,.2),.15,.01);\n    c2 -= Circle(uv,vec2(.1,.01),.1,.01);\n    c2 -= Circle(uv,vec2(-.1,.01),.1,.01);\n    c += Circle(uv,vec2(-.0,.1),.15,.01);\n    c2 -= Circle(uv,vec2(-.0,-.2),.1,.01);\n    c += Circle(uv,vec2(-.0,-.16),.1,.01);\n      \n    c += c2;\n    red = mix(vec3(0.),red * 7.,c / 2.);\n\n  //  vec3 sad = vec3(e);\n  \n    //col.rg *= 100000.;\n    //uv = fract(uv);\n    //uv.x *= iTime;\n   \t// Output to screen\n    fragColor = vec4(col + red ,1.0);\n}\n","name":"Image","description":"","type":"image"}]}