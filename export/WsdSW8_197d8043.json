{"ver":"0.1","info":{"id":"WsdSW8","date":"1571887811","viewed":118,"name":"Triangle_Transform_Test","username":"Fogrex","description":"Transform","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nmat2x2 rotation(float rot)\n{\n    float s = sin(-rot);\n    float c = cos(-rot);\n    return mat2x2(c,s,-s,c);\n}\n\n// start https://www.shadertoy.com/view/wdtXWn\n\nvec3 calcColorMMR(vec2 uv, float t)\n{\n    vec2 uv2 = rotation(sin(t*0.2)*6.28) * uv;\n    float d;\n    // mod\n    vec2 uv3 = mod(uv2, 0.3) / 0.3;\n    // lattice\n    if(uv3.x < 0.1 || uv3.y < 0.1)\n    {\n        return vec3(1.0,1.0,1.0);\n    }\n    return vec3(abs(uv3.x),abs(uv3.y),sin(t)*0.5+0.5);\n}\n\nvec4 motionBlur(vec2 uv, float Freq)\n{\n    float doubleFreq = Freq * Freq;\n    vec3 col = vec3(.0,.0,.0);\n    for(float i=0.0;i<Freq;i++)\n    {\n        // âˆ«x dx = (1/2)x^2 + C\n        col += calcColorMMR(uv, iTime - i / Freq * 0.1 )*((Freq - i) * 2.0 / doubleFreq);\n    }\n    \n    return vec4(col,1.0);\n    \n}\n\n// end\n\nvec4 calcColor(vec2 uv)\n{\n    mat2x2 TRI_TRANSFORM = mat2x2(1.0,-1.73205/3.0,0.0,2.0*1.73205/3.0);\n    vec2 uv2 = uv * rotation(iTime) * TRI_TRANSFORM;\n    uv2 = mod(uv2,1.0);\n    if(uv2.x + uv2.y > 1.0)uv2 = 1.0 - uv2;\n    return motionBlur(uv2,20.0);//vec4(uv2.x,uv2.y,sin(iTime*0.3)*0.5+0.5,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 uv = (2.0*fragCoord - iResolution.xy ) / iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = calcColor(uv);\n}","name":"Image","description":"","type":"image"}]}