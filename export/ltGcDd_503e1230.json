{"ver":"0.1","info":{"id":"ltGcDd","date":"1538140868","viewed":323,"name":"reaction-diffusion 2","username":"DiogoCosta","description":"Using the same reference as just about everyone else: http://www.karlsims.com/rd.html\nAlso used IQ's cosine palettes for the color: https://iquilezles.org/articles/palettes/palettes.htm\n\nWorks better in fullscreen.","likes":14,"published":1,"flags":32,"usePreview":0,"tags":["diffusion","reaction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //fragColor = vec4(1.-3.*texture(iChannel0, fragCoord/iResolution.xy).y);\n    float val = 1.-3.*texture(iChannel0, fragCoord/iResolution.xy).y;\n    \n    //vec3 a=;\n    //vec3 b=;\n    //vec3 c=;\n    //vec3 d=;\n    fragColor = vec4(palette( val, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,0.5),vec3(0.8,0.90,0.30) ),1.);\n    //fragColor = vec4(vec3(val),1.);\n    //fragColor = vec4(palette( val, (1.-val)*vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.3,0.20,0.20) ),1.);\n    \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = computeRD(fragColor, fragCoord, iChannel0, iResolution, iTime, iMouse);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"//const float FEED = .05;\n//const float KILL = .063;\nconst float DIFF_A = .9;\nconst float DIFF_B = .3;\nconst float timestep = 1.;\n\nconst float diag = 0.05;\nconst float adj = 0.2;\nconst float self = -1.;\n\nfloat radius = 1.;\n\nmat3 kernel = mat3( diag, adj, diag,\n                  adj, self, adj,\n                  diag, adj, diag);\n\n\nvec4 computeRD( vec4 fragColor, vec2 fragCoord, sampler2D sampler, vec3 iResolution, float iTime, vec4 iMouse)\n{\n    float KILL = 0.045 + (fragCoord.x/iResolution.x)*0.025;\n    float FEED = 0.01 + (fragCoord.y/iResolution.y)*0.099;\n    \n    float gradientA = 0.;\n    float gradientB = 0.;\n    \n    for(int i=-1; i<=1; i++){\n        for(int j=-1; j<=1; j++){\n            \n    \t\tgradientA += kernel[1+i][1+j]*texture(sampler, fragCoord/iResolution.xy+radius*vec2(i, j)/iResolution.xy).z;\n            gradientB += kernel[1+i][1+j]*texture(sampler, fragCoord/iResolution.xy+radius*vec2(i, j)/iResolution.xy).w;\n        }\n    }\n    \n    float concA = texture(sampler, fragCoord/iResolution.xy).z;\n    float concB = texture(sampler, fragCoord/iResolution.xy).w;\n    \n    if(iTime < 1.){\n    \tif(distance(fragCoord.xy, vec2(iResolution.x/2.,iResolution.y/2.))<5.) fragColor = vec4(0.0, 1., 0.0, 1.0);\n        else fragColor = vec4(1.0, 0.0, 1.0, 0.0);\n    }\n    else{\n        fragColor = texture(sampler, fragCoord/iResolution.xy);\n        \n        float s=1.;\n        \n        fragColor.x = fragColor.z + timestep*(DIFF_A*gradientA - concA*concB*concB + FEED*(1.-concA));\n        fragColor.y = fragColor.w + timestep*(DIFF_B*gradientB + concA*concB*concB - (KILL +FEED)*concB);\n\n        fragColor.z=fragColor.x;\n        fragColor.w=fragColor.y;\n        \n        if(iMouse.z > .5){\n        \tif(distance(fragCoord.xy, iMouse.xy)<10.) fragColor = vec4(0.0,1.0,0.0,1.0);\n        }\n    }\n    \n    return fragColor;\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = computeRD(fragColor, fragCoord, iChannel0, iResolution, iTime, iMouse);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = computeRD(fragColor, fragCoord, iChannel0, iResolution, iTime, iMouse);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = computeRD(fragColor, fragCoord, iChannel0, iResolution, iTime, iMouse);\n}","name":"Buffer D","description":"","type":"buffer"}]}