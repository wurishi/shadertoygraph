{"ver":"0.1","info":{"id":"3ljXR3","date":"1566595130","viewed":94,"name":"Fractal Wall Art 2","username":"96logda","description":"This is my first mandelbrot fractal shader. :)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","wall","painting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Copyright (c) 2019-08-23 - 2019-08-31 by Angelo Logahd\n//Portfolio: https://angelologahd.wixsite.com/portfolio\n\nconst float mandelbrotZoom = 0.95;\nconst float mandelbrotScale = 0.015;\n\nconst int maxIterations = 255;\n\nvec2 complexZ(const in vec2 z)\n{\n\treturn vec2\n    (\n \t\tz.x * z.x - z.y * z.y,\n \t\tz.x * z.y * 2.0\n\t);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy - iResolution.xy * 0.5;\n\tuv *= 2.0 / min(iResolution.x, iResolution.y );\n    \n    vec2 c = uv * mandelbrotZoom;\n    vec2 z = vec2(0.0);\n    float scale = mandelbrotScale;\n\n    vec3 fractalCol = vec3(0.0);\n    int count = 0;\n\tfor (; count < maxIterations; ++count) \n    {\n \t\tz = complexZ(z) + c;\n \t\tif (dot(z, z) > 4.0)\n        {\n            break;\n \t\t}\n    \n        fractalCol = texture(iChannel0, uv).rgb;\n        \n        float d = abs(dot(z, vec2(0.05)));\n    \tfloat f = step(d, 1.0);\n        fractalCol -= f;\n        \n        fractalCol = mix(fractalCol, vec3(0.0, 0.0, 1.0), 0.4);\n    }\n    \n    vec3 backColor1 = texture(iChannel0, uv).rgb * 0.25;\n    vec3 backColor2 = texture(iChannel1, uv).rgb * 0.25;\n    vec3 backColor = mix(backColor1, backColor2, 0.5);    \n    vec3 fractalResCol = fractalCol * vec3(float(count) * scale);   \n    vec3 resCol = mix(backColor, fractalResCol, 0.5);\n    fragColor.rgb = vec3(pow(resCol.rgb, vec3(0.4545)));\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}