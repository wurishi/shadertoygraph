{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"cubemap","id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// utter random sketch noise thing improv.\n// click to orbit camera\n// @mmalex\n\nvec3 roty(float th, vec3 p) { \n\tfloat c=cos(th),s=sin(th); \n\treturn vec3(c*p.x-s*p.z,p.y,c*p.z+s*p.x); \n}\nvec3 rotx(float th, vec3 p) { \n\tfloat c=cos(th),s=sin(th); \n\treturn vec3(p.x,c*p.y-s*p.z,c*p.z+s*p.y); \n}\n\n\nfloat hash(float n) {return fract(sin(n * 0.1346) * 43758.5453123);}//from iq\nvec2 noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\t\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec4 rg = texture( iChannel0, (uv+ 0.5)/256.0, -100.0 ).yxwz;\n\treturn mix( rg.xz, rg.yw, f.z );\n}\nvec4 trace(vec3 rs, vec3 re, vec2 px) \n{\n\tvec3 rd=re-rs;\n\t/*\t\n\tvec3 rdir = vec3(1.0)/rd;\n\tvec3 faruv =  sign(rd);\n\tvec3 nearuv = -faruv;\n\tvec3 mint = (faruv-rs)*rdir;\n\tvec3 maxt = (nearuv-rs)*rdir;\n\tfloat endt=min(min(mint.x,mint.y),mint.z);\t\t\t\n\tfloat startt=max(max(maxt.x,maxt.y),maxt.z);\t\t\t\t\t\n\t*/\n\tfloat startt=0.01;\n\tfloat endt=1.;\n\t\n\t//if (endt<startt) return vec4(0.0);\n\tvec4 col=vec4(0.0);\n\tfloat dt=1./64. * 2.5;\n\tstartt+=dt*hash(px.x+117.0*px.y);\n\tfor (int i=0;i<64;++i) {\n\t\t//if (startt>=endt) continue;\n\t\tvec3 p=rs+rd*startt;\n\t\t\n\t\tvec3 p4=p*p; p4*=p4;\n\t\tfloat quad=pow(p4.x+p4.y+p4.z,0.25);\n\t\tvec3 tp=p;\n\t\t\n\t\tfor (int j=0;j<5;++j) {\n\t\t\ttp.z+=iTime*0.01*float(j);\n\t\t\tvec2 noisev=noise(tp*5.0)*0.3; \n\t\t\ttp.xz+=noisev.xy;\n\t\t}\n\t\tvec4 t=texture(iChannel1,tp.xy*0.1);\n\t\tt*=texture(iChannel1,tp.yz*0.1);\n\t\tt*=texture(iChannel1,tp.zx*0.1);\n\t\t\n\t\tfloat a=dot(t.xyz,vec3(0.2,0.5,0.3))*10.0;\n\t\t//a=a*(1.0-a);\n\t\t//a=smoothstep(0.6,0.7,a);\n\t\t//a-=quad*0.5;\n\t\t//float a=1.0-quad;\n\t\t//a*=1.0-quad;\n\t\tfloat glow=2.1/(0.01+dot(p,p));\n\t\tt.xyz+=vec3(0.22,0.2,0.18);\n\t\tt.xyz*=glow;\n\t\t\n\t\t//a*=smoothstep(1.0,0.7,quad);\n\t\ta=clamp(a,0.0,1.0);\n\t\t\n\t\tt*=a;\n\t\tcol+=(1.0-col.w)*t;\n\t\tstartt+=dt;\n\t}\n\treturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy-iResolution.xy*0.5) / iResolution.yy * 2.0;\n\tvec2 m=iMouse.xy/iResolution.xy;\n\tfloat th=(m.x-0.5)*6.0;\n\tvec3 rs=roty(th,vec3(0,0,-2.0));\n\tvec3 re=roty(th,vec3(uv*3.0,2.0));\n\tth=(m.y-0.5)*3.0+iTime*0.03;;\n\trs=rotx(th,rs);\n\tre=rotx(th,re);\t\n\tvec4 col=trace(rs,re,fragCoord);//*vec4(0.4,0.5,0.8,1.0);\n\tvec3 rd=normalize(re-rs)*0.5+0.5;\n\tcol+=vec4(1.0-col.w) * \n\t\t\n\t\tvec4(rd.y,0.5,1.0-rd.y,0.)*0.2;//*texture(iChannel2,re-rs);\n\tfragColor = col;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Ms23Dz","date":"1386608278","viewed":2561,"name":"volnoise","username":"mmalex","description":"sketch","likes":63,"published":1,"flags":0,"usePreview":0,"tags":["noise","volume","march"],"hasliked":0,"parentid":"","parentname":""}}