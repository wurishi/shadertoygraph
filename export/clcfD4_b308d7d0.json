{"ver":"0.1","info":{"id":"clcfD4","date":"1701211959","viewed":31,"name":"a little scene","username":"Dirk","description":"WASD to Move!","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["littlescene"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n    \n    v2 map( v3 p ){\n        v3 wp = p;\n           wp.xz += T(iChannel0,i2(0,0),0).xy;\n        F m  = 0.0;\n        F d  = box( p, v3(E.z) )-0.1;\n        F d2 = p.y + E.z;\n        F d3 = lvl(wp.xz);\n          d3 = squ(v2(d3,p.y),v2(0.1,1.0));\n          d2 = W(d2,d3);\n        m = ( d<d2 ) ? 2.0 : 1.0;\n        d = W(d,d2);\n        R v2( d, m );\n    }\n    v3 nor( v3 p ){ R N( map(p).x - v3( map(p-E.xyy).x, map(p-E.yxy).x, map(p-E.yyx).x ) ); }\n    v2  ray( v3 ro, v3 rd ){\n        F t = 0.0, m = 0.0;\n        J(100){\n            v3 p = ro + rd*t;\n            v2 d = map(p);\n            if( d.x<E.y || t>E.w ) B;\n            t += d.x;\n            m = d.y;\n        }\n        R v2(t,m);\n    }\n    v3 rayDir(v2 uv, v3 p, v3 l, F z) {\n        v3 f = N(l-p),\n        r = N(X(v3(0,1,0), f)),\n        u = X(f,r),\n        c = f*z,\n        i = c + uv.x*r + uv.y*u;\n        R N(i);\n    }\n    V G{\n        v2 uv = ( 2.0*coord - iR.xy ) / iR.y,\n           an = 10.0*iM.xy/iR.xy;\n        v3 col = v3(0.0);\n        v2 m = ( iM.xy / iR.xy )*2.0;\n        v3 ro = v3(0.,0.5,1.5);\n           ro.yz *= rot(-m.y+1.5);\n           ro.xz *= rot(-m.x);\n        v3 rd = rayDir( uv, ro, v3(0,0.0,0.0), 1.1-0.1*uv.x );\n        v2 r  = ray(ro,rd);\n        if( r.x > 0.0 ){\n            v3 p = ro + rd*r.x;\n            v3 n = nor(p);\n            v3 s = N(v3(1.0,2.0,3.0));\n            F  l = D(n,s);\n            v3 wp = p;\n               wp.xz += T(iChannel0,i2(0,0),0).xy;\n            if( r.y < 1.5 ){ \n                col = Q(C1,C3,S(E.x,E.y,sin(wp.z*10.0)+sin(wp.x*10.0)+sin(wp.y*10.0)));\n                col *= M(0.5,W(1.0,0.5+0.5*lvl(wp.xz)));\n            }else\n            if( r.y < 2.5 ){ \n                v3 ref = Z(rd,n);\n                col = Q(C3,texture(iChannel1,ref).xyz,0.5);\n            }\n            col *= l;\n            if( r.x > 20.0 ) col = Q(C3,texture(iChannel1,rd).xyz,0.5);\n        }\n        color = v4(col,1.0);\n        \n        /*\n        v2 wp = uv;\n           wp += T(iChannel0,i2(0,0),0).xy;\n        color = v4(hit( wp ),0.0,1.0);\n        */\n    }\n    \n    ","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n\n    #define iR iResolution.xy\n    #define iM iMouse\n    #define iF iFrame\n    #define iT iTime\n    \n    #define v2 vec2\n    #define v3 vec3\n    #define v4 vec4\n    \n    #define i2 ivec2\n    #define i3 ivec3\n    #define i4 ivec4\n    \n    #define m2 mat2\n    #define m3 mat3\n    #define m4 mat4\n    \n    #define A abs\n    #define B break\n    #define C clamp\n    #define D dot\n    #define E v4(0.0,0.001,0.5,20.0)\n    #define F float\n    #define G mainImage( out v4 color, in v2 coord )\n    #define H step\n    #define I int\n    #define J(c) for( I i=0; i<c; i++ )\n    #define K fract\n    #define L length\n    #define M max\n    #define N normalize\n    #define O 3.1415926\n    #define P pow\n    #define Q mix\n    #define R return\n    #define S smoothstep\n    #define T texelFetch\n    #define U floor\n    #define V void\n    #define W min\n    #define X cross\n    #define Y mirror\n    #define Z reflect\n    \n    #define C0 v3(0.7,0.4,0.3)\n    #define C1 v3(0.8,0.4,0.2)\n    #define C2 v3(0.8,0.2,0.4)\n    #define C3 v3(0.9,0.4,0.4)\n    \n    //Physics\n    #define PC_RADIUS 0.5\n    #define posPC() texelFetch(iChannel0, ivec2(0, 0), 0).xy\n    #define velPC() texelFetch(iChannel0, ivec2(1, 0), 0).xy\n    #define dirPC() texelFetch(iChannel0, ivec2(2, 0), 0).xy\n    \n    m2 rot( F a ){ F s=sin(a*O*2.0), c=cos(a*O*2.0); R m2(c,-s,s,c); }\n    \n    F squ( v2 p, v2 dim ){\n        vec2 d = abs(p)-dim;\n        return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);\n    }\n\n\n    float box(vec3 p, vec3 s){\n\n        p = abs(p)-s;\n        return length(max(p, 0.))+min(max(p.x, max(p.y, p.z)), 0.);\n\n    }\n    \n    F  lvl( v2 p ){ \n    \n        p += 3.0;\n    \n        F d = squ(p,v2(1.0))-PC_RADIUS;\n    \n        R d;\n    \n    }\n    v2 hit( v2 p ){ R N( lvl(p) - v2( lvl(p-E.xy), lvl(p-E.xy) ) ); }\n    \n    \n    ","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n    #define getKey(a) texelFetch(iChannel1,ivec2(a,0),0).x\n\n    vec4 physics( I id ){\n            vec2 Pos = posPC();\n            vec2 Vel = velPC();\n            vec2 Dir = dirPC();\n            v2 m = ( iM.xy / iR.xy )*2.0;\n            F  s = 8./16.;\n            v2 wasd = v2(getKey(87)-getKey(83),getKey(68)-getKey(65));\n            Pos += Vel * rot(-m.x+O) * wasd.x * s;\n            Pos += Vel * rot(-m.x-O) * wasd.y * s;\n            float distToEnv = lvl(Pos)+PC_RADIUS;\n            if (distToEnv < PC_RADIUS ) {\n                    vec2 hitNormal = hit(Pos);\n                    Pos += hitNormal * (PC_RADIUS - distToEnv);\n                    Vel = reflect(Vel, hitNormal);\n                    Dir = reflect(Vel, hitNormal);\n            }\n            if( id == 0) R v4( Pos, 0.0, 1.0);\n            if( id == 1) R v4( Vel, 0.0, 1.0);\n            if( id == 2) R v4( Dir, 0.0, 1.0);\n    }\n\n    V G{\n        i2 uv = i2(coord);\n        v3 cp = v3(0.);\n        v4 data = v4(0.0);\n        if ( iF == 0 && uv == i2( 1, 0 ) ) {\n            data = v4( 0.03, 0.03, 0.0, 0.0 );\n        }\n        if ( iF > 0 ) {\n            if ( uv.y == 0 && uv.x < 3 ) { data = physics( uv.x ); }\n        }\n        color = data;\n    }","name":"Buffer A","description":"","type":"buffer"}]}