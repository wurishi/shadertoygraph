{"ver":"0.1","info":{"id":"llccR7","date":"1532002315","viewed":625,"name":"Smooth 1D Cellular Automata","username":"yx","description":"...","likes":9,"published":3,"flags":32,"usePreview":0,"tags":["cellularautomata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    fragColor = texture(iChannel0,fragCoord/iResolution.xy).rrrr;// * .5+.125;\n    fragColor = pow(fragColor,vec4(1.1,1.05,1,1));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat lookup(vec3 r, vec4 t0, vec4 t1)\n{\n    vec4 a = mix(t0,t1,r.z);\n    vec2 b = mix(a.xy,a.zw,r.y);\n    float c = mix(b.x,b.y,r.x);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 o = 1./iResolution.xy;\n    \n#if 0\n    // ruleset is encoded here. rule 202 as an example.\n    vec4 t0 = vec4(0,1,0,1);\n    vec4 t1 = vec4(0,0,1,1);\n#else \n\tint rule = int(rand(floor(float(iFrame)/iResolution.y))*255.);\n    if(rule==0)rule=202;\n    vec4 t0 = vec4(rule&1,rule&2,rule&4,rule&8);\n    vec4 t1 = vec4(rule&16,rule&32,rule&64,rule&128);\n    t0 = step(.5,t0);\n    t1 = step(.5,t1);\n#endif\n    \n\tif (fragCoord.y < 1.)\n    {\n        // smooth starting state\n        fragColor.r = rand(fragCoord.x);\n        \n        // binary starting state\n        //fragColor.r = step(.5,rand(fragCoord.x));\n    }\n    else\n    {\n        float a = texture(iChannel0,uv-vec2( o.x,o.y)).r;\n        float b = texture(iChannel0,uv-vec2(   0,o.y)).r;\n        float c = texture(iChannel0,uv-vec2(-o.x,o.y)).r;\n        \n        fragColor.r = lookup(vec3(a,b,c), t0, t1);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}