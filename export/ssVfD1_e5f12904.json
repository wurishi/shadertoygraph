{"ver":"0.1","info":{"id":"ssVfD1","date":"1658142525","viewed":218,"name":"circle-sqare-grid","username":"zorba20002","description":"grid","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 pos, float r, float ratio){\n    uv = abs(uv);\n    float d= (1.-ratio)*length(uv-pos)+ratio*1.39*dot(uv,normalize(vec2(1,1)));\n    float c= smoothstep(r,r-0.01,d)-smoothstep(r-d/10.,r-d/10.-0.01,d);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy)/\n        (iResolution.y < iResolution.x ? iResolution.y : iResolution.x);\n      \n    float col = 0.;  \n    float scale = 10.;\n    \n    uv*=scale;\n    float gridSize = 0.5;\n\n    vec2 gv = fract(uv)-gridSize;\n    vec2 id = floor(uv);\n    float ratio = (sin(iTime+atan(id.y/id.x)*17.)+1.)/2.;\n    if(uv.x>-scale*0.3 && uv.x<scale*0.3 && uv.y>-scale*0.3 && uv.y<scale*0.3){\n        col += circle(gv, vec2(0,0), gridSize, ratio);\n    }\n    vec3 res = vec3(\n        col*((ratio+1.)/2.), \n        col*atan(.1*sin(id.y)+sin(5.+iTime/11.)), \n        col*atan(0.1*sin(id.x)+cos(iTime/13.)));\n    \n    fragColor = vec4(res,1.0);\n}","name":"Image","description":"","type":"image"}]}