{"ver":"0.1","info":{"id":"NlKSRt","date":"1641297134","viewed":51,"name":"PlanetDamien","username":"DamienE","description":"planet qui tourne","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["univers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool drawCircle(vec2 p, float r, vec2 center) {\n    vec3 col = vec3(0,0,0);\n    if (abs(p.x-center.x)*abs(p.x-center.x) + abs(p.y-center.y)*abs(p.y-center.y) < r) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0*fragCoord/iResolution.xy - 1.0;\n    uv.y /= iResolution.x/iResolution.y; // normalisÃ©\n    \n    vec3 col = vec3(0,0,0);\n    \n    /*if (abs(uv.x) < 0.5 && abs(uv.y) < 0.5) {\n        col = vec3(1,0,0);\n    }*/\n    \n\n    \n    // UPDATE\n    vec2 positionLune = vec2(0.0,-0.0);\n    positionLune += vec2(cos(iTime) * 0.5, sin(iTime) * 0.5);\n    \n    vec2 positionP = positionLune;\n    positionP = vec2(sin(iTime) * 0.15 + positionLune.x, cos(iTime) * 0.15  + positionLune.y);\n    \n    \n    // DRAW \n    \n    if (drawCircle(vec2(0.0,0.0), 0.1, uv)) {\n        col = vec3(0,1,0);\n    }\n    \n    if (drawCircle(positionLune, 0.01, uv)) {\n        col = vec3(1,1,1);\n    }\n    \n    if (drawCircle(positionP, 0.0005, uv)) {\n        col = vec3(1,0,1);\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}