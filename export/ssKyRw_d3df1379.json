{"ver":"0.1","info":{"id":"ssKyRw","date":"1654626530","viewed":78,"name":"Triangle drawn by line","username":"nsmr","description":"Triangle drawn by line.\nChanging the value of N changes the shape.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define INF 1.0e10\n#define N 3\nfloat cross(vec2 v1, vec2 v2) {\n    return v1.x*v2.y - v1.y*v2.x;\n}\nfloat line(vec2 p, vec2 v1, vec2 v2){\n    vec2 v = v2 - v1;\n    p -= v1;\n    float t = dot(p, normalize(v));\n    float d = INF;\n    if(t < -0.0001){\n        d = length(p);\n        return d;\n    }else if(t > length(v)){\n        d = length(p-v);\n        return d;\n    }else{\n        d = abs(cross(p, normalize(v)));\n        return d;\n    }\n    return d;\n}\nfloat starShape(vec2 p, float r){\n    float d = INF;\n    for(int i=0; i<N; ++i){\n        float rad1 = 2.0*PI*float(i)/float(N);\n        float rad2 = 2.0*PI*float((i+2)%N)/float(N);\n        vec2 v1 = vec2(cos(rad1), sin(rad1)) * r;\n        vec2 v2 = vec2(cos(rad2), sin(rad2)) * r;\n        d = min(d, line(p, v1, v2));\n     }\n     return d;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord.xy-iResolution.xy) / min(iResolution.x, iResolution.y);\n    float dist = starShape(uv, 1.0);\n    vec3 col = vec3(dist, dist, dist);\n    if(dist < 0.1) fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}