{"ver":"0.1","info":{"id":"tdsBzX","date":"1588786078","viewed":292,"name":"HSV ordered dithering posterize","username":"jaszunio15","description":"My experiment with HSV ordered dithering using Bayer texture.\nUse mouse for originl image preview\n\nShader License: CC BY 3.0\nAuthor: Jan Mróz (jaszunio15)","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["hsv","dithering","posterization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Shader License: CC BY 3.0\n//Author: Jan Mróz (jaszunio15)\n\n/*\n\tUse mouse for image comparison.\n\t\n\tIt's just ordered dithering but it's applied on HSV color model instead of RGB.\n*/\n\n//number of color layers in dithering for each HSV component\n#define H_STEPS 10.0\n#define S_STEPS 3.0\n#define V_STEPS 3.0\n\n//length of dithering between color layers\n#define DITHER_WIDTH 0.5\n\n#define TIME (iTime * 0.2)\n\n//source: http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 rgbToHsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n//source: http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 hsvToRgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat orderedDither(float value, vec2 fragCoord, float steps, float width)\n{\n    float bayer = texelFetch(iChannel0, ivec2(fragCoord) % 8, 0).r;\n    \n    value *= steps;\n    float ditherMix = fract(value);\n    ditherMix = smoothstep(0.5 - width * 0.5, 0.5 + width * 0.5, ditherMix);\n    float darkerColor = floor(value) / steps;\n    float lighterColor = floor(value + 1.0) / steps;\n    \n    return mix(darkerColor, lighterColor, 1.0 - step(ditherMix, bayer));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.x;\n\n    //creating image\n    vec4 color = vec4(smoothstep(1.0, 0.0, length(uv))) * vec4(0.5, 0.3, 1.0, 0.0);\n    color += vec4(smoothstep(0.4, 0.0, distance(uv, 0.4 * vec2(sin(TIME), cos(TIME))))) * vec4(1.0, 0.5, 0.2, 0.0);\n    color += vec4(smoothstep(0.4, 0.0, distance(uv, 0.4 * -vec2(sin(TIME), cos(TIME))))) * vec4(0.4, 1.0, 0.6, 0.0);\n    color = clamp(color, 0.0, 1.0);\n    \n    if (fragCoord.y > iMouse.y) \n    {\n        uv = fragCoord / iResolution.xy;\n        color = texture(iChannel1, uv);\n    }\n    \n    \n    if (fragCoord.x > iMouse.x)\n    {\n        //applying dithering\n        vec3 colorInHsv = rgbToHsv(color.rgb);\n        \n        colorInHsv.x = orderedDither(colorInHsv.x, fragCoord, H_STEPS, DITHER_WIDTH);\n        colorInHsv.y = orderedDither(colorInHsv.y, fragCoord, S_STEPS, DITHER_WIDTH);\n        colorInHsv.z = orderedDither(colorInHsv.z, fragCoord, V_STEPS, DITHER_WIDTH);\n        \n        color.rgb = hsvToRgb(colorInHsv);\n    }\n    \n    fragColor = vec4(color);\n}","name":"Image","description":"","type":"image"}]}