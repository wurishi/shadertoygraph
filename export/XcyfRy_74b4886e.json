{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"/* \n A cool 2D heart shape! :)\n 14/Dec/2024\n*/\n\n#define PI 3.14159265359\n\n// The pattern function based on your formula\nfloat funPattern(float x, float y, float t) {\n    float sc = 20.0;\n    return cos(cos(sc * x - t) + 2.0 * cos(sc * y - abs(sin(sc * x - t))));\n}\n\n// Convert hue to RGB (HSB to RGB helper function)\nvec3 hsb2rgb(float h, float s, float b) {\n    vec3 c = vec3(h, s, b);\n    float k = mod(c.x * 6.0, 6.0);\n    float f = k - floor(k);\n    float p = c.z * (1.0 - c.y);\n    float q = c.z * (1.0 - f * c.y);\n    float t = c.z * (1.0 - (1.0 - f) * c.y);\n\n    if (k < 1.0) return vec3(c.z, t, p);\n    if (k < 2.0) return vec3(q, c.z, p);\n    if (k < 3.0) return vec3(p, c.z, t);\n    if (k < 4.0) return vec3(p, q, c.z);\n    if (k < 5.0) return vec3(t, p, c.z);\n    return vec3(c.z, p, q);\n}\n\n// https://github.com/d3/d3-color\nvec3 cubehelix(vec3 c) {\n  float a = c.y * c.z * (1.0 - c.z);\n  float cosh = cos(c.x + PI / 2.0);\n  float sinh = sin(c.x + PI / 2.0);\n  return vec3(\n    (c.z + a * (1.78277 * sinh - 0.14861 * cosh)),\n    (c.z - a * (0.29227 * cosh + 0.90649 * sinh)),\n    (c.z + a * (1.97294 * cosh))\n  );\n}\n\n// https://github.com/d3/d3-scale-chromatic\nvec3 cubehelixDefault(float t) {\n  return cubehelix(vec3(mix(300.0 / 180.0 * PI, -240.0 / 180.0 * PI, t), 0.5, t));\n}\n\n// https://github.com/d3/d3-scale-chromatic\nvec3 cubehelixRainbow(float t) {\n  if (t < 0.0 || t > 1.0) t -= floor(t);\n  float ts = abs(t - 0.5);\n  return cubehelix(vec3((360.0 * t - 100.0) / 180.0 * PI, 1.5 - 1.5 * ts, 0.8 - 0.9 * ts));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = ( fragCoord -.5 * iResolution.xy ) / iResolution.y;\n\n    // Compute pattern values\n    float patternValue = funPattern(uv.x, uv.y, iTime);\n\n    // Assign color based on patternValue\n    vec3 color;\n    if (patternValue < 0.0) {\n        float hue = mix(0.0, 1.0, (patternValue + 1.0) / 1.0); // Map [-1, 0] to [0, 1]\n        //color = hsb2rgb(hue, 1.0, 1.0); // Usual HSV color\n\t\t\t\tcolor = cubehelixRainbow(hue); // I like more these Rainbow colors compare to the usual HSV\n    } else {\n        color = vec3(0.15); // Dark gray for positive pattern value\n    }\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XcyfRy","date":"1734123341","viewed":20,"name":"All you need is love!","username":"jcponcemath","description":"All you need is love!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","animation","heart","shape"],"hasliked":0,"parentid":"","parentname":""}}