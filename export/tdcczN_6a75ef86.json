{"ver":"0.1","info":{"id":"tdcczN","date":"1600516271","viewed":379,"name":"Spiral Ripple Displacement","username":"resontone","description":"Simple spiral + ripple displacement map with minimal code","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["spiral","ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\nconst float TWO_PI = 6.28318530718;\nconst float PI_OVER_TWO = 1.57079632679;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv_screen = fragCoord/iResolution.xy; //The texture coordinates normalised to [0,1]\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y; //Gives a square aspect ratio\n\n    \n    \n    //PARAMETERS TO EDIT\n    float time_frequency = 1.; //hz\n    float spiral_frequency = 10.; //hz (# ripple peaks over vertical span)\n    float displacement_amount = 0.10;\n    \n    \n    \n    //Spiral (based on polar coordinates fed through a sinusoidal function\n    vec2 uv_spiral = sin(vec2(-TWO_PI*iTime*time_frequency + //causes change over time\n                              atan(uv.x, uv.y) + //creates the spiral\n                              length(uv)*spiral_frequency*TWO_PI, //creates the ripples\n                              0.));\n\n    //Displace a texture by the spiral value\n    fragColor = vec4(texture(iChannel0, uv_screen + uv_spiral*displacement_amount));\n}","name":"Image","description":"","type":"image"}]}