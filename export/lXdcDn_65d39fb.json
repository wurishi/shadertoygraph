{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"/*\n    How to use: Click and drag the mouse cursor over the image.\n*/\n\nconst float sliderThickness  =  0.0012;\nconst vec3  sliderColor      =  vec3(1.0, 0.5, 0.0);\nfloat       sliderPos        =  0.5; // Default halfway pos\n\nvoid mainImage( out vec4 oFragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;  // Normalized pixel coordinates (from 0 to 1)\n    vec2 pixelSize = 1.0 / iResolution.xy; // Size of one pixel\n\n    \n    // Take a sample of the current pixel and its neighboring pixels (3x3 kernel)\n    vec3 blurred = texture(iChannel0, uv + vec2(-pixelSize.x, -pixelSize.y)).rgb +\n                   texture(iChannel0, uv + vec2( 0.0,         -pixelSize.y)).rgb +\n                   texture(iChannel0, uv + vec2( pixelSize.x, -pixelSize.y)).rgb +\n                   texture(iChannel0, uv + vec2(-pixelSize.x,  0.0        )).rgb +\n                   texture(iChannel0, uv + vec2( 0.0,          0.0        )).rgb + // Center pixel with no offset. Using \"0.0\" here just to make it look pretty\n                   texture(iChannel0, uv + vec2( pixelSize.x,  0.0        )).rgb +\n                   texture(iChannel0, uv + vec2(-pixelSize.x,  pixelSize.y)).rgb +\n                   texture(iChannel0, uv + vec2( 0.0,          pixelSize.y)).rgb +\n                   texture(iChannel0, uv + vec2( pixelSize.x,  pixelSize.y)).rgb;\n          \n    /*\n    // Same as above but with a nested loop\n    vec3 blurred = vec3(0.0);\n    for (int i = -1; i <= 1; i++) // Will run 3 times: -1, 0, 1\n    {\n        for (int j = -1; j <= 1; j++) // Will also run 3 times, for a total of 9 times because this loop runs once for each of the loops above, so it's 3 * 3 = 9\n        {\n            vec2 offset = vec2(float(i), float(j)) * pixelSize;\n            blurred += texture(iChannel0, uv + offset).rgb;\n        }\n    }\n    */\n    \n    blurred /= 9.0; // Average the samples\n\n    vec3 unblurred = texture(iChannel0, uv).rgb;\n\n    if (iMouse.x != 0.0) // Update the default slider pos only if the mouse pos uniform was changed\n        sliderPos = iMouse.x / iResolution.x; // Mouse cursor position in [0, 1] range\n\n    float sliderMask = step(uv.x, sliderPos + sliderThickness) - step(uv.x, sliderPos - sliderThickness);\n\n    float alpha = step(uv.x, sliderPos); // Same result as:  sliderPos < uv.x ? vec3(0.0) : vec3(1.0)\n\n    vec3 color = mix(unblurred, blurred, alpha); // Lerp between blurred and unblurred\n    color = mix(color, sliderColor, sliderMask); // Add slider\n\n    oFragColor = vec4(color, 1.0);\n\n    // Debug\n    //oFragColor = vec4(vec3(alpha),      1.0);  // Preview the alpha\n    //oFragColor = vec4(vec3(sliderMask), 1.0);  // Preview the slider\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lXdcDn","date":"1734963894","viewed":54,"name":"Box Blur with Slider","username":"AndreiDespinoiu","description":"Sample neighboring pixels (3x3 kernel, meaning 9 pixels, including the center) and average them out by dividing by 9.\nAlso known as a box blur.\n\nHow to use: Click and drag the mouse cursor over the image.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blur","boxblur"],"hasliked":0,"parentid":"","parentname":""}}