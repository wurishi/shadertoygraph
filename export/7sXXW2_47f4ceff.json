{"ver":"0.1","info":{"id":"7sXXW2","date":"1619235001","viewed":278,"name":"branches","username":"lomateron","description":"this...\n{\nu = vec2(atan(u.y,u.x),log(length(u)));  u = u*2.;\nu = cos(u.x-vec2(0,pi*.5))*exp(u.y);     u = u+m;\n}\nis what is needed inside a loop to make the julia fractal\nthen I just repeated each line and played with the constants until finding that","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["fractal","zoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.1415926535897932384626433832795;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 u = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = vec2(-6.9477,2.3521);\n    u = u*pow(2.,34.-iTime)+vec2(.00000202,0);\n    for(float i = .5; i < 45.; ++i)\n    {\n        u = vec2(atan(u.y,u.x),log(length(u)));  u = u*.5;\n        u = vec2(atan(u.y,u.x),log(length(u)));  u = u*-3.;\n        u = cos(u.x-vec2(0,pi*.5))*exp(u.y);     u = u+m;\n        u = cos(u.x-vec2(0,pi*.5))*exp(u.y);     u = u+m;\n    }\n    fragColor = (cos(u.x*2.+vec4(1,2,3,4))*.5+.5)*(sin(u.y*2.)*.4+.6);\n}","name":"Image","description":"","type":"image"}]}