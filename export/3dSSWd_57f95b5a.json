{"ver":"0.1","info":{"id":"3dSSWd","date":"1557671302","viewed":248,"name":"Luggage Battery Charging","username":"belfry","description":"Luggage battery charging display as seen in Carole & Tuesday.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["loading"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float drop(vec2 p, float s) {\n    p *= s;\n    p.x *= 1.9;\n    p.y += p.y > 0. ? abs(p.x) - .4 : 0.;\n    return dot(p, p) - .2;\n}\n\nfloat aa(float x, float s) {\n    float a = s * fwidth(x);\n    return smoothstep(a, -a, x);\n}\n\nvec4 icon(vec2 uv) {\n    vec2 uv0 = uv - .5;\n    uv0 *= vec2(7.5, 3.5);\n    uv0 = pow(abs(uv0), vec2(14.));\n    float e = length((vec2(abs(uv.x - .5) - .04, uv.y - .57))\n                     * vec2(4., 2. + 10.*pow(.5 + .5 * cos(iTime), 100.))) - .075;\n    vec2 uv1 = (uv - vec2(.5, .44)) * mix(2.1, 2.4, .5 + .5 * sin(iTime));\n    uv1.y *= 1.3 + .3 * sin(iTime * 1.314);\n    float m = max(length(uv1) - .1, uv1.y);\n    vec3 col = mix(vec3(1.), vec3(0.4), aa(min(m, e), 1.));\n    float dBody = sqrt(uv0.x + uv0.y) - .15;\n    \n    vec2 uv2 = vec2(abs(uv.x - .5) * iResolution.x/iResolution.y, uv.y - .5) - vec2(.1665, -.215);\n    float feet = length(uv2) - .05;\n    \n    vec2 uv3 = uv - vec2(.5, 0.28);\n    uv3 = abs(uv3);\n    float crotch = max(uv3.x, uv3.y) - .015;\n    \n    vec2 uv4 = uv - vec2(.5, 0.71);\n    uv4 = abs(uv4) -  vec2(.035, 0.025);\n    float handle = max(uv4.x, uv4.y);\n    \n    float a = min(max(min(dBody, feet * 5.), -crotch * 6.), handle * 9.);\n    \n    col = mix(col, vec3(0.4), smoothstep(-.06, -.04, a));\n    col = mix(col, vec3(.8), step(handle * 100., -1.25));\n    return vec4(col, a);\n}\n\nvec3 water(vec2 uv, float progress) {\n    vec4 ico = icon(uv);\n    float i = aa(ico.a, 1.);\n    \n    vec3 bg = pow((sin(uv.y * 200.) * .5 + .5), 8.) * vec3(.05, .05, .175);\n    \n    float ao = sin(uv.x * 40. + iTime) * .01 - .02;\n\tfloat a = aa(uv.y-(progress + ao), 2.);\n    float bo = sin(uv.x * 24. + iTime + 3.14) * .0255;\n\tfloat b = aa(uv.y-(progress + bo), 2.);\n    vec3 ca = vec3(.2, .5 + uv.y * .8, .8);\n    vec3 c = ca * (a * .3 + b * .2);\n    vec2 dp = uv - vec2(.15, 1. - fract(iTime * .45) * 3.);\n    float d = aa(drop(dp * 2. - 1., 5.), 1.);\n    \n    vec3 ic = ico.rgb;\n    float l = smoothstep(.5, -.5, a + b + d);\n    \n    return mix((c + (1. - a) * d * ca * .4) * \n        (smoothstep(0., .5 + i, i)*ic + 1.), mix(bg, ic, i), l);\n}\n\nvec3 grid(vec2 uv) {\n    float a = -.23;\n    uv *= mat2(cos(a), sin(a), -sin(a), cos(a));\n    uv.xy *= vec2(.75, 1.5);\n    uv -= vec2(2.32, .75373);\n    uv.y += sin(uv.x - uv.y * -.73);\n    uv.y *= 1.;\n    uv.y = fract(uv.y) * step(uv.y, 0.) * step(-2., uv.y);\n    float y = fract(uv.y * 10.);\n    y = smoothstep(.4, .6, y) * smoothstep(.6, .4, y);\n    float x = fract(uv.x * 10.);\n    x = smoothstep(.4, .6, x) * smoothstep(.6, .4, x);\n    float g = clamp(y + x * (1.-uv.y)*uv.y*3., 0., 1.);\n\treturn vec3(g * vec3(0., .85 + uv.y * .15, 1. - uv.y * .1));\n}\n\nvec3 circles(vec2 uv) {\n    float y = .75 - uv.y;\n    uv.x += sign(uv.x)*uv.y * .25;\n    uv = fract(uv * 5.);\n    uv = 2. * uv - 1.;\n    float c = step(length(uv) - .4, 0.);\n    c = clamp(c, 0., 1.);\n    return vec3(c * mix(vec3(0., .5, .5), vec3(0., 0., 1.), y));\n}\n\nvec3 background(vec2 fragCoord) {\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n\treturn vec3(grid(uv) + circles(uv) * .05) * vec3(.1, .6, .8);\n}\n\nfloat numDist(vec2 p, float progress, float order) {\n    vec2 a = abs(vec2(p) - 1./32.);\n    p -= vec2(-floor(mod(progress * order, 10.)), 4.) / 16.;\n    return max(a.x, a.y) > 1./32. ? 10000. : (2. * texture(iChannel0, p).a - 1.);\n}\n\nfloat numPercent(vec2 p) {\n    vec2 a = abs(vec2(p) - 1./32.);\n    p -= vec2(11., 3.) / 16.;\n    return max(a.x, a.y) > 1./32. ? 10000. : (2. * texture(iChannel0, p).a - 1.);\n}\n\nfloat label(vec2 p, float progress) {\n    float d100 = progress < 1. ? 10000. : numDist(p, progress, 1.);\n    float d10 = progress < .1 ? 10000. : numDist(p - vec2(1./32., 0.), progress, 10.);\n    float d1 = numDist(p - vec2(2./32., 0.), progress, 100.);\n    float d0 = numPercent(p - vec2(3./32., 0.));\n    return smoothstep(-.05, .05, min(min(d100, min(d10, d1)), d0));\n}\n\nvec4 battery(vec2 p) {\n    vec2 a = abs(p - vec2(.498, .87));\n    float b = max(a.x, a.y) - .025;\n    vec2 a2 = abs(p - vec2(.518, .87));\n    float b2 = max(a2.x, a2.y) - .01;\n    vec3 c = mix(vec3(0., 1.5, 1.5), vec3(0., .65, .75), length(p - vec2(.521, .87)) * 40.);\n    return vec4(c, aa(min(b, b2), 1.)*.4);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float progress = smoothstep(-.98, .98, sin(cos(iTime * .5)*.5 + iTime*.2 - .4));\n    vec2 s = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float m = dot(s, s) - .8;\n    float pa = mod(atan(s.y, s.x) + iTime * 1.7, 6.28) - 3.14;\n    pa = smoothstep(0., .4, pa * pa);\n    float ic = aa(m, 3.);\n    vec3 w = ic * water(fragCoord/iResolution.xy, progress);\n    float oc = aa(-m+.11, 3.) * aa(m-.13, 3.);\n    vec3 occ = oc * vec3(.55, .7, .7) + oc * (1. - pa) * vec3(.1, 1., .4) * 2.;\n    float a = smoothstep(0., 1., ic + 3. * oc);\n    vec3 bc = background(fragCoord);\n    vec3 e = mix(bc, w + occ, a);\n    float l = 1. - label(uv - vec2(.42, .2), progress);\n    vec3 f = mix(e, vec3(1.), l);\n    vec4 b = battery(uv);\n    f = mix(f, b.rgb, b.a);\n    fragColor = vec4(f, 1.);\n    \n}","name":"Image","description":"","type":"image"}]}