{"ver":"0.1","info":{"id":"slyBz1","date":"1664035238","viewed":41,"name":"Laboratory Work #1","username":"madvishel","description":"lab 1, comp graphic, by IO-01 Shluew Vlad\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["education"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//by IO-01 Shluew Vlad\n\n//void smoothTransition(vec3 oldColor, vec3 newColor, float time, out vec4 fragColor) {\n//    vec3 transition = newColor - oldColor;\n//    vec3 steps = transition/(time*60.0);\n//    const float startTime = iTime;\n//    for (float i = startTime, i<(time+startTime),  i+=1/60){\n//        fragColor = oldColor + steps;\n//        while (true) {\n//        if (i+1/60>iTime)) {\n//            break;\n//            }\n//        }\n//    }\n//\n//}\nvec3 blackAndWhite(vec3 color){\n\n    return vec3((color.x+color.y+color.z)/3.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy/iResolution.xy;\n//    vec4 texColor = texture(iChannel0, xy);\n    \n    vec3 col1 = vec3(abs(cos(iTime)), abs(sin(iTime)), 0.0); //color\n    vec3 col2 = vec3(abs(xy.x*xy.y*cos(iTime)), abs(xy.x*xy.y*sin(iTime)), 0.0); //gradient\n    \n    fragColor = vec4(col1, 1.0);\n    if (iTime>2.0 && iTime<4.0){\n        fragColor = vec4(col2, 1.0);\n    } else if (iTime>4.0 && iTime<6.0) {\n        fragColor=vec4(blackAndWhite(col2), 1.0);\n    } else if (iTime>6.0){\n        fragColor=vec4(col2, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}