{"ver":"0.1","info":{"id":"clXyzf","date":"1690989186","viewed":77,"name":"Julia sets montage","username":"nicone1","description":"Different Julia sets from Wikipedia put in a montage","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["juliamandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITERATIONS 100.0\n#define MAX_BOUND 4.0\n#define PATTERN_AMOUNT 9.0 // Patterns 0.0 to PATTERN_AMOUNT included in transitions\n#define TRANSITION_DURATION 3.0\n#define COLOUR_INTENSITY 0.2 // Between 0.0 to 1.0\n\n// https://en.wikipedia.org/wiki/Julia_set\nconst vec2 patterns[] =\nvec2[]\n(\n    vec2(-0.4, 0.6),\n    vec2(0.285, 0.0),\n    vec2(0.285, 0.1),\n    vec2(0.45, 0.1428),\n    vec2(-0.70176, -0.3842),\n    vec2(-0.835,-0.2321),\n    vec2(-0.8, 0.156),\n    vec2(-0.7269, 0.1889),\n    vec2(0.0, 0.8)\n);\n\nvec3 palette(float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(2.0, 1.0, 0.0);\n    vec3 d = vec3(0.5, 0.20, 0.25);\n\n    return a + b * cos(6.28318*(c * t +d ));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    int pos = int(mod(iTime / TRANSITION_DURATION, PATTERN_AMOUNT));\n    float mixValue = mod(iTime, TRANSITION_DURATION) / TRANSITION_DURATION;\n    vec2 c = patterns[pos] * (1.0 - mixValue) + patterns[(pos + 1) % int(PATTERN_AMOUNT)] * mixValue;\n    vec2 z = uv;\n    \n    float it;\n    for (it = 0.0; it < MAX_ITERATIONS; ++it)\n    {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        if (dot(z, z) > MAX_BOUND)\n            break;\n    }\n    \n    float ratio = it / MAX_ITERATIONS;\n    vec3 col = vec3(ratio) * (1.0 - COLOUR_INTENSITY) + palette(ratio) * COLOUR_INTENSITY;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}