{"ver":"0.1","info":{"id":"csBGWt","date":"1668287064","viewed":170,"name":"built-in basics 'sign'","username":"jonasfrey","description":"sign, does return \ny = -1 if x < 0\ny = 1 if x > 0\n\ngreen a sin wave with freq 6 tau and amp 0.3\nred the built-in function 'sign' \nblue the self replicated function f_n_sign","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["basics"],"hasliked":0,"parentid":"ms2GDR","parentname":"builtin-basics clamp"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// this is an example of how builtin functions work\n// i will try to programm the function manually \n// to get an understanding of how it works\nfloat f_n_sign(\n    float n\n){\n    // to bad that booleans cannot be used as a multiplier :(\n    // return (n > 0. * 1.) + (n < 0. * -1.) \n    \n    if(n > 0.){ return +1.; }\n    if(n < 0.){ return -1.; }\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 o_pixel_coord_normalized = (fragCoord.xy -0.5 * iResolution.xy) / iResolution.y;\n    \n\n    float n_y = sin(o_pixel_coord_normalized.x*9.0*6.2831) * 0.3;\n    float n_dist = abs(o_pixel_coord_normalized.y - n_y);\n    if(o_pixel_coord_normalized.x<0.0){\n        fragColor = vec4(sqrt(n_dist));\n        fragColor += vec4(0.0, 0.2,0.0,0.0);\n    }\n    if(o_pixel_coord_normalized.x>0.0){\n       n_y = sign(n_y)*0.5;\n       n_dist = abs(o_pixel_coord_normalized.y - n_y);\n       \n       fragColor = vec4(sqrt((n_dist))); \n       fragColor += vec4(0.2, 0.0,0.0,0.0);\n    }\n    if(o_pixel_coord_normalized.x>0.5){\n       n_y = f_n_sign(n_y)*0.5;\n       n_dist = abs(o_pixel_coord_normalized.y - n_y);\n       \n       fragColor = vec4(sqrt((n_dist))); \n       fragColor += vec4(0.0, 0.0,0.2,0.0);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}