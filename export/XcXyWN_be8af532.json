{"ver":"0.1","info":{"id":"XcXyWN","date":"1721117495","viewed":59,"name":"Bayer Dithering Study","username":"yohawing","description":"Bayer Dithering study","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["dithering","algorythm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 thresholdMap2x2 = mat2(\n    0.0, 2.0,\n    3.0, 1.0\n);\n    \nmat4 thresholdMap4x4 = mat4(\n    0.,  8.,  2., 10.,\n    12.,  4., 14.,  6.,\n    3., 11.,  1.,  9.,\n    15.,  7., 13.,  5.\n); \n\n#define SIZE 4\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //vec2 center = uv * 2 + 0.5; \n    \n    float scale = 0.25;\n    \n    float th;\n    \n    if(SIZE == 2){\n        mat2 map  = thresholdMap2x2;\n        vec2 m = mod(fragCoord * scale , vec2(SIZE, SIZE));\n        th = map[int(m.x)][int(m.y)];\n        th *= 1.0 / pow(2.0, float(SIZE));\n        \n    }\n    \n    if(SIZE == 4){\n        mat4 map  = thresholdMap4x4;\n        vec2 m = mod(fragCoord * scale , vec2(SIZE, SIZE));\n        th = map[int(m.x)][int(m.y)];\n        th *= 1.0 / pow(2.0, float(SIZE));\n    }\n    \n    \n    float val = fragCoord.y/iResolution.y;\n    \n    val = distance(uv , vec2(0.5));\n    \n    val += sin(iTime) * 0.1;\n    \n\n    // Time varying pixel color\n    vec3 col = vec3(val < th);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}