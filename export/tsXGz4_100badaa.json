{"ver":"0.1","info":{"id":"tsXGz4","date":"1545129187","viewed":760,"name":"Cheap grass","username":"dalerank","description":"cheap grass procedural texture","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["procedural","texture","grass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BLADES 6\n#define BLADE_SEED 1.0\n\nvec4 grass(vec2 p, float x)\n{\n\tfloat s = 0.8;//mix(0.7, 2.0, 0.5 + sin(x * 12.0) * 0.5);\n\tp.x += pow(1.0 + p.y, 2.0) * 0.1 * cos(x + iTime*0.1);\n\tp.x *= s;\n\tp.y = (1.0 + p.y) * s - 1.0;\n\tfloat m = 1.0 - smoothstep(0.0, clamp(1.0 - p.y * 1.5, 0.01, 0.6) * 0.2 * s, pow(abs(p.x) * 19.0, 1.5) + p.y - 0.6);\n\treturn vec4(mix(vec3(0.05, 0.1, 0.0) * 0.8, vec3(0.0, 0.3, 0.0), (p.y + 1.0) * 0.5 + abs(p.x)), m * smoothstep(-1.0, -0.9, p.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 ct = vec3(0.0, 1.0, 5.0);\n\tvec3 cp = vec3(0.0, 0.1, 0.0);\n\tvec3 cw = normalize(cp - ct);\n\tvec3 cu = cross(cw, vec3(0.0, 1.0, 0.0));\n\tvec3 cv = cross(cu, cw);\n\t\n\tvec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - vec2(1.0);\n\tvec2 t = uv;\n\tt.x *= iResolution.x / iResolution.y;\n\n\t\n\tvec3 ro = cp, rd = vec3(t, -1.1);\n\t\n\tvec3 fcol = vec3(0.0);\n\t\n\tfor(int i = 0; i < BLADES; i++)\n\t{\n\t\tfloat z = -(float(BLADES - i) * 0.1 + 1.0);\n\t\tvec4 pln = vec4(0.0, 0.0, -1.3, z);\n\t    vec2 tc = ro.xy + rd.xy;\n\t\t\n\t\ttc.x += cos(float(i) + BLADE_SEED);\n\t\t\n\t\tfloat cell = floor(tc.x);\n\t\t\n\t\ttc.x = (tc.x - cell) - 0.9;\n\t\t\n\t\tvec4 c = grass(tc, float(i) + cell * 11.0);\n\t\t\n\t\tfcol = mix(fcol, c.rgb, c.w);\n\t}\n\t\n\tfcol = pow(fcol * 1.1, vec3(0.8));\n\n\tfragColor.rgb = fcol * 1.8;\n\tfragColor.a = 1.0;\n}\n","name":"Image","description":"","type":"image"}]}