{"ver":"0.1","info":{"id":"MdcBWl","date":"1527161919","viewed":834,"name":"Munching Squares 2018","username":"noby","description":"A quick doodle last night","likes":43,"published":1,"flags":0,"usePreview":0,"tags":["xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float xor(vec2 p, vec2 lims, float A)\n{\n    return smoothstep(lims.x, lims.y, float(int(A*p.x) ^ int(A*p.y))/A);\n}\n\nfloat pattern(vec2 fragCoord)\n{\n    const float TS = 4.0*120.0/131.0;\n    vec2 uv = -1.0+2.0*fragCoord/iResolution.xy;\n    uv.y *= iResolution.y/iResolution.x;\n    uv /= 1.0+0.5*sin(iTime*2.065*0.25);\n    uv *= 0.75;\n    \n    const float PI = 3.141593;\n    const float RC = 4.0;\n    const float a = PI/RC;\n    const float tq = 60.0;\n    const vec2 lims = vec2(0.495,0.505);\n    const mat2 R = mat2(cos(a),sin(a),-sin(a),cos(a));\n    float rf = iTime*2.065*0.25*0.25;\n    mat2 R2 = mat2(cos(rf),sin(rf),-sin(rf),cos(rf));\n    \n    uv *= R2;\n    \n    // TODO: the 2.065 constant is not exact, idk what it should actually be\n    float A = exp(15.0+mod(-iTime*0.25, 2.065));\n    float p = xor(uv, lims, A);\n\t\n    for(int i = 0; i < int(RC)-1; i++)\n    {\n        if(p > 0.0) break;\n        uv *= 1.5+0.5*sin(iTime*2.065*0.25);\n        uv *= R;\n    \tp = xor(uv, lims, A);\n    }\n    \n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float p = 0.0;\n    const float S = 1.0/3.0;\n    p += pattern(fragCoord+vec2(0));\n    p += pattern(fragCoord+vec2(S,0));\n    p += pattern(fragCoord+vec2(-S,0));\n    p += pattern(fragCoord+vec2(0,S));\n    p += pattern(fragCoord+vec2(0,-S));\n    p += pattern(fragCoord+vec2(-S,S));\n    p += pattern(fragCoord+vec2(S,-S));\n    p += pattern(fragCoord+vec2(S));\n    p += pattern(fragCoord+vec2(-S));\n    p /= 9.0;\n    fragColor = vec4(sqrt(p));\n}","name":"Image","description":"","type":"image"}]}