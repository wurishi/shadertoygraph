{"ver":"0.1","info":{"id":"Xf2fDG","date":"1725458989","viewed":49,"name":"Soviet TV with noise","username":"bogdanmikh","description":"this effect depicts a Soviet television with noise","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 st) {\n    return sin(sin(iTime + dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n\nfloat brightness = 3.f;\nint timeEffect = 1;\nint interval = 0;\n\nvoid drawLine();\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 color = texture(iChannel0, uv);\n    interval += timeEffect;\n       \n    vec4 webcam = texture(iChannel0, uv);\n    vec3 col = vec3(1);\n    if (int(iTime) % interval < timeEffect) {\n        col = vec3(0.5) * random(uv);\n    }\n   \n    fragColor = color * vec4(col, 1) * brightness;\n}\n","name":"Image","description":"","type":"image"}]}