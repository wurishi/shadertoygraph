{"ver":"0.1","info":{"id":"lclyDr","date":"1721038344","viewed":21,"name":"kaleidoscope hw","username":"happyhuxley","description":"Trying to get better at maths","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float time = iTime;\n\n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    angle = mod(angle, 3.14159265 / 3.0) * 6.0;\n    uv = vec2(cos(angle), sin(angle)) * radius;\n\n    vec3 color = vec3(0.0);\n\n    float r1 = 0.5;\n    float r2 = 0.2;\n\n    float scale = 1.;\n\n    for (int i = 0; i < 95; i++) {\n    \n        uv += vec2(sin(time), cos(time)) * 0.05; \n        \n        uv = fract(uv * scale) - 0.5;\n        float len = length(uv);\n        float angle = atan(uv.y, uv.x);\n\n        float d = abs(r1 - len) - r2;\n\n        vec3 kColor = vec3(.7, .7, .1) * (0.5 + 0.5 * cos(6.0 * angle + time));\n        color += kColor / (d * scale + 0.0);\n        \n        scale *= 1.3;\n    }\n\n    color = pow(color, vec3(0.4545));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}