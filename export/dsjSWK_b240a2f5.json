{"ver":"0.1","info":{"id":"dsjSWK","date":"1670932492","viewed":78,"name":"复合图形 圆+方","username":"lukawa","description":"复合图形 圆+方 pumpjam教学版","likes":1,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LINE_WIDTH 0.005\n#define DELTA 0.02\n\nfloat isZero (float i) {\n    return step(0., i) * step(i, DELTA);\n}\n\n// 圆形场函数\nfloat sdCircle( vec2 p, float r ){\n    return length(p) - r;\n}\n\n// 方形场函数\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n// shape function\n// return 0 or 1\n// 1 means on the border\n// 0 means not on the border\nfloat shapeFunction(vec2 st, float r, vec2 rect) {\n    float circle_sdf = sdCircle(st, r);\n    float square_sdf = sdBox(st, rect);\n    \n    float maxSdf = min(circle_sdf, square_sdf);\n    \n    float sdf_factor = isZero(maxSdf);\n    return sdf_factor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1\n    vec2 st = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    float checkOnBorder = shapeFunction(st, 0.5, vec2(0.45));\n    fragColor = vec4(vec3(checkOnBorder),1.0);\n}","name":"Image","description":"","type":"image"}]}