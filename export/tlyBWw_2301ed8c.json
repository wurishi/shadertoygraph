{"ver":"0.1","info":{"id":"tlyBWw","date":"1614425016","viewed":270,"name":"20210227_shader-cha位位enge","username":"FMS_Cat","description":"wenis","likes":11,"published":1,"flags":40,"usePreview":0,"tags":["3d","sound","pathtracer","livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Visual:\n// It was a result of an event called \"Shader Cha位位enge\".\n// Livecoded in 60 minutes.\n// Originally written in Bonzomatic.\n// There was a regulation that you have to utilize a function given by phi16.\n// (see the Common tab)\n//\n// Audio:\n// Coded after the event using the same given function.\n//\n// Shoutouts to butadiene (who gathered us) and phi16 (the \"game master\")!\n// That was so spicy.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  fragColor = vec4( texture( iChannel0, uv ).xyz, 1.0 );\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define BPM 155.0\n#define PI 3.14159265\n#define beat *(60.0/BPM)\n#define TAU (PI*2.)\n#define lofi(i,j) ( floor( (i)/(j) ) * (j) )\n\nfloat fs(float s){\n  return fract(sin(s*114.514)*1919.810);\n}\n\nvec2 mainSound(int samp,float time){\n  vec2 ret=vec2(0);\n  \n  // glitch\n  if(mod(time, 64.0 beat)>60.0 beat){\n    if(mod(time - 0.0 beat,4.0 beat)<1.0 beat){\n      float retrigger=0.5 beat;\n      time-=lofi(mod(time,1.0 beat),retrigger);\n    }\n\n    if(mod(time - 1.0 beat,4.0 beat)<1.0 beat){\n      float retrigger=(mod(time, 1.0 beat)<0.5 beat) ? (0.0625 beat) : (0.25 beat);\n      time-=lofi(mod(time,1.0 beat),retrigger);\n    }\n\n    if(mod(time - 2.0 beat,4.0 beat)<1.0 beat){\n      time=lofi(time,0.0001+0.001*mod(lofi(time, 0.01), 1.0 beat));\n    }\n\n    if(mod(time - 3.0 beat,4.0 beat)<1.0 beat){\n      time-=0.8*lofi(mod(time,1.0 beat),.04);\n    }\n  }\n  \n  float sidechain=1.;\n  \n  { // kick\n    float t=mod(time,1.0 beat);\n    sidechain=mix(.2,1.,smoothstep(.0 beat, .6 beat, t));\n    float amp=6.0*exp(-3.*t);\n    float env=exp(-3.*t);\n    float phase=220.0*t;\n    float p=1000.0*exp(-170.*t)+500.0*exp(-20.*t)-phase*TAU;\n    vec2 wave=vec2(\n      func(p,166.0*env-t,30.0*t),\n      func(p,166.0*env+t,30.0*t)\n    );\n    ret+=.5*clamp(amp*wave,-1.,1.);\n  }\n  \n  { // hat\n    float s=lofi(time, 0.25 beat);\n    float t=time-s;\n    float amp=exp(-mix(10.,40.,fs(s))*t);\n    float phase=800.0+mix(120.,200.,fs(s+1.))*t;\n    vec2 wave=vec2(\n      func(4.0*phase*TAU,28.0,0.5*sin(phase*TAU)),\n      func(4.0*phase*TAU,29.0,0.5*sin(phase*TAU))\n    );\n    ret+=sidechain*.3*clamp(amp*wave,-1.,1.);\n  }\n  \n  { // shaker\n    float s=lofi(time, 0.25 beat);\n    float t=lofi(time-s,.00015);\n    float amp=exp(-mix(10.,40.,fs(s+1.77))*t);\n    float phase=800.0+mix(200.,200.,fs(s+2.74))*t;\n    vec2 wave=vec2(\n      func(4.0*phase*TAU,28.0,0.2*sin(phase*TAU)-1.*lofi(time,.02)),\n      func(4.0*phase*TAU,29.0,0.2*sin(phase*TAU)-1.*lofi(time,.02))\n    );\n    ret+=sidechain*.3*clamp(amp*wave,-1.,1.);\n  }\n  \n  { // saw?\n    float s=lofi(time, 0.25 beat);\n    float t=time-s;\n    float amp=5.*exp(-mix(10.,100.,fs(s+4.56))*t);\n    float phase=800.0+mix(10.,30.,fs(s+1.17))*t;\n    vec2 wave=vec2(\n      func(phase*TAU,0.,10.0*sin(.07*phase*TAU)),\n      func(phase*TAU,1.,10.0*sin(.07*phase*TAU))\n    );\n    ret+=sidechain*.1*clamp(amp*wave,-1.,1.);\n  }\n  \n  { // clap\n    float t=mod(time - 1.0 beat,2.0 beat);\n    float amp=2.*exp(-10.*t);\n    float phase=700.0*t;\n    vec2 wave=vec2(\n      func(3000.0*exp(-20.*t),28.0,1.0*sin(phase*TAU*t)),\n      func(3000.0*exp(-20.*t),29.0,1.0*sin(phase*TAU*t))\n    );\n  \tret+=sidechain*.5*clamp(amp*wave,-1.,1.);\n  }\n  \n  { // ride\n    float s=lofi(time, 0.5 beat);\n    float t=time-s;\n    float amp=exp(-5.*t);\n    float phase=800.0+800.0*t;\n    vec2 wave=vec2(\n      func(4.0*phase*TAU,11.0,0.5*sin(phase*TAU)),\n      func(4.0*phase*TAU,12.0,0.5*sin(phase*TAU))\n    );\n    ret+=sidechain*.2*clamp(amp*wave,-1.,1.);\n  }\n  \n  { // beep\n    float t=mod(time - 0.25 beat,2.0 beat);\n    float amp=2.*exp(-10.*t);\n    float phase=480.0*t;\n    vec2 wave=vec2(\n      func(400.0*exp(-20.*t),28.0,1.0*sin(phase*TAU)),\n      func(400.0*exp(-20.*t),29.0,1.0*sin(phase*TAU))\n    );\n    ret+=sidechain*.3*clamp(amp*wave,-1.,1.);\n  }\n\n  return ret;\n}\n","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"float func(float x, float y, float z) {\n    z = fract(z), x /= pow(2.,z), x += z*y;\n    float v = 0.;\n    for(int i=0;i<6;i++) {\n        v += asin(sin(x)) * (1.-cos((float(i)+z)*1.0472));\n        v /= 2., x /= 2., x += y;\n    }\n    return v * pow(2.,z);\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159265\n#define lofi(i,j) ( floor( (i)/(j) )*(j) )\n#define saturate(i) clamp((i),0.,1.)\n\nfloat time;\nfloat seed;\n\nmat2 r2d(float t){\n  return mat2(cos(t),sin(t),-sin(t),cos(t));\n}\n\nfloat fs(float s){\n  return fract(sin(114.514*s)*1919.810);\n}\n\nfloat random(){\n  seed=fs(seed);\n  return seed;\n}\n\nvec3 randomsphere(){\n  float a=2.*PI*random();\n  float b=acos(random()*2.-1.);\n  return vec3(cos(a)*sin(b),cos(b),sin(a)*sin(b));\n}\n\nvec3 randomhemisphere(vec3 n){\n  vec3 d=randomsphere();\n  return dot(d,n)<0.?-d:d;\n}\n\nvec4 isectplane(vec3 p,vec3 rd,vec3 n){\n  float d=dot(n,p)/dot(n,rd);\n  d=d<0.?1E9:d;\n  return vec4(d,1,0,0);\n  // oboetenaiyo~~~~~\n  // wakaruyo\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=fragCoord.xy/iResolution.xy;\n  vec2 p = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y)*2.-1.;\n  p /= vec2(iResolution.y / iResolution.x, 1);\n  \n  time=iTime;\n  seed=texture(iChannel0,p).x+time;\n  random();\n  \n  vec3 ro=vec3(0,2,5);\n  vec3 ro0=ro;\n  vec3 rd=normalize(vec3(p,-1.));\n  rd.yz=r2d(.1*sin(time))*rd.yz;\n  rd.zx=r2d(.1*sin(1.6+.5*time))*rd.zx;\n  vec3 rd0=rd;\n  \n  float g=0.;\n  float rem=1.;\n  float samples=1.;\n\n  vec3 col=vec3(0.);\n  \n  for(int i=0;i<64;i++){\n    float rl=1E-2;\n    vec3 rp=ro+rd*rl;\n    vec4 isect=vec4(1E9);\n    vec3 isectn=vec3(0.);\n    vec4 isectb;\n    \n    {\n      vec3 n=vec3(0,0,1);\n      isectb=isectplane(vec3(0.,0.,-1.)-rp,rd,n);\n      if(isectb.x<isect.x){\n        isect=isectb;\n        isectn=n;\n      }\n    }\n    \n    {\n      vec3 n=vec3(0,1,0);\n      isectb=isectplane(vec3(0.,-1.,0.)-rp,rd,n);\n      if(isectb.x<isect.x){\n        isect=isectb;\n        isectn=n;\n        isect.y=2.;\n      }\n    }\n    \n    if(isect.x<1E8){\n      rp=ro+rd*isect.x;\n      if(isect.y==1.){\n        vec2 pt=lofi(rp.xy*.25,.0625)*vec2(1.,2.);\n        float fuck=func(200.0+100.0*sin(time),pt.x,pt.y+time);\n        fuck=clamp(.5*fuck,0.,1.);\n        g+=rem*fuck;\n        rem*=.1;\n        ro=rp;\n        rd=reflect(rd,isectn);\n      }else if(isect.y==2.){\n        vec2 pt=rp.xz*vec2(.4,2.);\n        float fuck=func(200.0,pt.y,pt.x);\n        float rough=.2+.07*clamp(fuck,-1.,1.);\n        //g+=fuck;\n        rem*=.3;\n        ro=rp;\n        rd=normalize(mix(reflect(rd,isectn),randomhemisphere(isectn),rough));\n      }\n    }else{\n      rem*=0.;\n    }\n    \n    if(rem<.01){\n      rd=rd0;\n      ro=ro0;\n      rem=1.;\n      samples++;\n    }\n  }\n  \n  for(int i=0;i<40;i++){\n    float aaa=float(i)/40.;\n    float z=1.-.04*aaa*pow(length(p),2.);\n    vec2 uvt=z*(uv-.5)+.5;\n    vec3 mul=saturate(2.-abs(aaa*6.-vec3(1,3,5)))/40.*3.;\n    float tex=texture(iChannel1,uvt).w;\n    col+=vec3(tex)*mul;\n  }\n  \n  col=pow(col,vec3(.4545));\n  col=vec3(\n    smoothstep(.1,.9,col.x),\n    smoothstep(.0,.9,col.y),\n    smoothstep(-.1,1.1,col.z)\n  );\n  \n  fragColor = vec4(col,g/samples);\n}","name":"Buffer A","description":"","type":"buffer"}]}