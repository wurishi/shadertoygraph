{"ver":"0.1","info":{"id":"3d2czy","date":"1586878659","viewed":115,"name":"modular multiplication","username":"omeometo","description":"something","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.x*1.1;\n    \n    const int p=17;\n    int k=int(floor(iTime))%(p-2)+2;\n    const float r=0.8/float(p);\n    \n    float t=fract(iTime);\n    t=t*t*(3.0-2.0*t);\n    t=t*t*(3.0-2.0*t);\n    float mindist=1e9;\n    for(int i=1;i<p;i++){\n    \tfloat x=mix(float(i),float((i*k)%p),t)/float(p);\n\t\tfloat y=float((i*k)%p-i)*(t-t*t)*0.1;\n        vec2 c=vec2(2.*x-1., y);\n        mindist=min(mindist, length(uv-c)/r);\n    }\n    fragColor = vec4(smoothstep(1.2, 0.8, mindist));\n}","name":"Image","description":"","type":"image"}]}