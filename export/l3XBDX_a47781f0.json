{"ver":"0.1","info":{"id":"l3XBDX","date":"1728987105","viewed":90,"name":"Poly balance","username":"minghir","description":"Use mouse.\nLearning.\nAnimated polygons in balance. ","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d","balance","poly"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n#define PI 3.14159\n#define HD sqrt(2.)\n#define HT sqrt(3.)\n#define ROT(a) mat2(cos(a),-sin(a),sin(a),cos(a)) \n#define M dot(iMouse,iMouse)/1e6\n#define T iTime/1.4*M/.5\n\nfloat poly(vec2 uv, float sizes , float size_len){\n    vec2 st = vec2(atan(uv.x,uv.y),length(uv));\n    float angle = st.x;\n    float r = cos(PI/sizes)/cos(angle-2.*PI/sizes*floor((sizes*angle+PI)/(2.*PI)));\n    float d = r*size_len-st.y;\n    float ds = smoothstep(0.,1./R.y, d);\n    float ss = smoothstep(0.,3./R.y, d);\n    return 2. * ds - ss * ss;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n   vec2 uv = (fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n   float size  = 1./7.;\n\n   float r_o = size / sqrt( 2. - HD);\n   float a_o = r_o * sqrt(.5 + .25 * HD);\n    \n   float r_h = size;\n   float a_h = r_h * .5 * HT;\n\n   float r_p = size / HD;\n   float a_p = r_p * HD / 2.;\n   \n   float r_t = size / HT;\n   float a_t = r_t * .5;\n   \n   \n   float srot = 360./16.*PI/180.;\n   float rp_o_h = 8./6.;\n   float rp_h_p = 6./4.;\n   float rp_p_t = 4./3.;\n   \n   uv.y += .5-(r_o-a_o);\n   vec2 puv = uv;\n   vec2 huv = uv;\n   vec2 ouv = uv; \n   vec2 tuv = uv; \n    \n   //octogon\n   ouv.y-=a_o;\n   ouv *=ROT(srot);\n   ouv *= ROT(-T);\n   float o = poly(ouv,8.,r_o);\n   \n   //hexagon\n   float d_h = (r_o-a_o)+(r_h-a_h);\n   huv.y-=(2.*a_o+a_h)+d_h;\n   huv.y-=d_h*abs(cos(T*4.))-d_h;\n   huv *=ROT(srot*rp_o_h);\n   huv *=ROT(T*rp_o_h);\n   float h = poly(huv,6.,r_h);\n   \n   //patrat\n   float d_p = (r_o-a_o)+2.*(r_h-a_h)+(r_p-a_p);\n   puv.y-=(2.*a_o+2.*a_h+a_p)+d_p;\n   puv.y-=d_p*abs(cos(T*4.))-d_p;\n   puv *=ROT(srot*rp_o_h*rp_h_p);\n   puv *=ROT(-T*rp_o_h*rp_h_p);\n   float p = poly(puv,4.,r_p);\n   \n   //triunghi \n   float d_t = (r_o-a_o)+2.*(r_h-a_h)+2.*(r_p-a_p)+(r_t-a_t);\n   tuv.y -= (2.*a_o+2.*a_h+2.*a_p+a_t)+d_t;\n   tuv.y-=d_t*abs(cos(T*4.))-d_t;\n   tuv *=ROT(T*rp_o_h*rp_h_p*rp_p_t);\n   float t = poly(tuv, 3. ,r_t);\n\n   vec3 col = vec3(vec3(252,244,228)/255.);\n   col = mix(col,vec3(38,111,108)/255.,o);\n   col = mix(col,vec3(255,175, 0)/255.,h);\n   col = mix(col,vec3(143,14,  1)/255.,p);\n   col = mix(col,vec3(75, 0, 130)/255.,t);\n    \n   fragColor = vec4( col ,0.);\n}\n","name":"Image","description":"","type":"image"}]}