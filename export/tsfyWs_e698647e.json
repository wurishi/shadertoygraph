{"ver":"0.1","info":{"id":"tsfyWs","date":"1585829457","viewed":470,"name":"Mandelbrot fluid","username":"michael0884","description":"Combining the best of both worlds. Use mouse to distort the fractal.","likes":13,"published":3,"flags":32,"usePreview":0,"tags":["fractal","fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 sqr(vec2 x)\n{\n    return vec2(x.x*x.x - x.y*x.y, 2.*x.x*x.y); \n}\n\nfloat mandelbrot(vec2 x)\n{\n    vec2 z = vec2(0), dz = vec2(0);\n    for(int i = 0; i < 128; i++)\n    {\n        dz = 2.*vec2(dot(z, dz*a.yz), dot(z, dz.yx)) + a.yx;\n        z = sqr(z) + x;\n        if(length(z)>32.) break;\n    }\n    return 0.5*sqrt(dot(z,z)/dot(dz,dz))*log(dot(z,z));\n}\n\nvoid mainImage( out vec4 U, in vec2 p )\n{\n    vec2 uv = pixel(ch0, p).zw;\n    vec2 mouse = (iMouse.z > 0.)?iMouse.xy:size*0.5;\n\t//if(all(lessThan(p, size.xx*0.25))) uv = pixel(ch0, 0.1*p+iMouse.xy).zw;\n   \n    \n    U = sin(vec4(1.,1.2,1.3,4)*log(0.0001 + 0.1*mandelbrot(uv)));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//definitions\n#define size iResolution.xy\n#define pixel(a, p) texture(a, vec2(p)/vec2(size))\n#define texel(a, p) texelFetch(a, ivec2(p), 0)\n#define ch0 iChannel0\n#define ch1 iChannel1\n#define ch2 iChannel2\n#define ch3 iChannel3\n#define PI 3.14159265\n#define dt 1.\n\nconst vec3 a = vec3(0, 1, -1);\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 U, in vec2 p )\n{\n    //advection\n\tU = pixel(ch0, p - dt*pixel(ch0, p).xy); \n    //pressure gradient\n    U.xy -= dt*0.25*vec2(pixel(ch1, p+a.yx).x - pixel(ch1, p+a.zx).x,\n                      pixel(ch1, p+a.xy).x - pixel(ch1, p+a.xz).x);\n    \n    \n    \n    //border\n    float dx = min(p.x, size.x - 1. - p.x);\n    float dy = min(p.y, size.y - 1. - p.y);\n    U.xy -= U.xy*vec2(exp(-0.5*dy*dy),exp(-0.5*dx*dx));\n    float d = min(dx,dy);\n    U.xy -= U.xy*exp(-d*d);\n    \n    if(iFrame < 1)\n    {\n        vec2 dx = p - size*0.5;\n        U.xy = exp(-0.0005*dot(dx,dx))*vec2(sin(iTime),cos(iTime));\n        U.zw = (p - size*vec2(2.,0.5))/size.x;\n    }\n    \n    if(iMouse.z>0.)\n    {\n        vec2 dx = p - iMouse.xy;\n        U.xy +=\t0.1*exp(-0.01*dot(dx,dx))*vec2(sin(iTime),cos(iTime));\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 U, in vec2 p )\n{\n    //advection\n    U = pixel(ch1, p - dt*pixel(ch0, p).xy); \n    //velocity divergence \n    U.x -= dt*0.25*(pixel(ch0, p+a.yx).x - pixel(ch0, p+a.zx).x + \n                    pixel(ch0, p+a.xy).y - pixel(ch0, p+a.xz).y);\n    if(iFrame < 1)\n    {\n        U.x = 0.;\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 U, in vec2 p )\n{\n    vec2 uv = (p - size*vec2(2.,0.5))/size.x;\n    //advection\n\tU = pixel(ch0, p - dt*pixel(ch0, p).xy); \n    //pressure gradient\n    U.xy -= dt*0.25*vec2(pixel(ch1, p+a.yx).x - pixel(ch1, p+a.zx).x,\n                      pixel(ch1, p+a.xy).x - pixel(ch1, p+a.xz).x);\n    \n    \n    \n    //border\n    float dx = min(p.x, size.x - 1. - p.x);\n    float dy = min(p.y, size.y - 1. - p.y);\n    U.xy -= U.xy*vec2(exp(-0.5*dy*dy),exp(-0.5*dx*dx));\n    float d = min(dx,dy);\n    U.xy -= U.xy*exp(-d*d);\n    \n    U.zw = mix(uv, U.zw, 0.995);\n    \n    if(iFrame < 1)\n    {\n        vec2 dx = p - size*0.5;\n        U.xy = exp(-0.0005*dot(dx,dx))*vec2(sin(iTime),cos(iTime));\n        U.zw = uv;\n    }\n    \n    if(iMouse.z>0.)\n    {\n        vec2 dx = p - iMouse.xy;\n        U.xy +=\t0.1*exp(-0.01*dot(dx,dx))*vec2(sin(iTime),cos(iTime));\n    }\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 U, in vec2 p )\n{\n    //advection\n    U = pixel(ch1, p - dt*pixel(ch0, p).xy); \n    //velocity divergence \n    U.x -= dt*0.25*(pixel(ch0, p+a.yx).x - pixel(ch0, p+a.zx).x + \n                 pixel(ch0, p+a.xy).y - pixel(ch0, p+a.xz).y);\n}","name":"Buffer D","description":"","type":"buffer"}]}