{"ver":"0.1","info":{"id":"MfGczG","date":"1732005330","viewed":43,"name":"rip for visuals2","username":"brendanluu","description":"brendan","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"rip for visuals\" by brendanluu. https://shadertoy.com/view/lfGczG\n// 2024-11-19 08:35:24\n\nconst float PI = acos(-1.);\nconst float TAU = PI * 2.;\n\nmat3 orthbas(vec3 z){\n  z = normalize(z);\n  vec3 up = abs(z.y) > .999 ? vec3(0,0,1) : vec3(0,1,0);\n  vec3 x = normalize(cross(up,z));\n  return mat3(x,cross(z,x),z);\n}\n\nvec3 cyclic(vec3 p){\n  mat3 b = orthbas(vec3(-1,5,2));\n  vec4 sum = vec4(0);\n  for(int i = 0; i < 6; i++){\n    p *= b;\n    p += sin(p.zxy);\n    sum += vec4(\n      cross(cos(p), sin(p.yzx)),\n      4//change this varible\n    );\n    sum *= 2.;\n    p *= 2.;\n  }\n  return sum.xyz/sum.w;\n}\n\nvec4 dobg(vec2 p){\n  float plasma = cyclic(vec3(4.*p,iTime)).x;\n  plasma += 2.*iTime;\n  vec3 col = .5 + .5*sin(-10.*plasma + vec3(1.000,0.349,0.000));\n  return vec4(col,1);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  vec2 p = uv*2.-1.;\n  p.x *= iResolution.x/iResolution.y;\n  \n  fragColor = dobg(p);\n}","name":"Image","description":"","type":"image"}]}