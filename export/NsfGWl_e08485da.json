{"ver":"0.1","info":{"id":"NsfGWl","date":"1616693158","viewed":108,"name":"Shader that crashes on Windows","username":"postrediori","description":"Shader that does not compile on Windows because of multiplication order\n\nUsing 'discard' in function that is the first operand messes with variable memory management\n\nJSFiddle ver: [url]https://jsfiddle.net/postrediori/74oyqs61[/url]","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n// Shader that does not compile on Windows because of multiplication order\n//\n// Using 'discard' in function that is the first operand messes with variable memory management\n//\n// JSFiddle ver: https://jsfiddle.net/postrediori/74oyqs61/\n// WebGL ver: https://postrediori.github.io/WebGlShaderCrash\n//\n\nvec4 color(vec2 uv) {\n    if (length(uv*2.-vec2(1.))>.5) {\n        discard;\n    }\n    return vec4(uv.xyy, 1.);\n}\n\nvec4 shade(float c) {\n    float a = c;\n    return vec4(vec3(a), 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // This multiplication should crash shader on Windows\n    fragColor = color(uv) * shade(iTime);\n    \n    // And this one is totally OK\n    //fragColor = shade(iTime) * color(uv);\n}","name":"Image","description":"","type":"image"}]}