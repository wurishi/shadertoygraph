{"ver":"0.1","info":{"id":"dsXfDX","date":"1689221986","viewed":36,"name":"Cool checkerboard v2","username":"dactorwatson","description":"moving checkerboard","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col_ = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 icol_ = vec3(1.0) - (0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)));\n    \n    float amp = (0.01 + (0.05 * abs(sin(iTime * 0.4))));\n    \n    float ampx = iResolution.x * amp;\n    float ampy = iResolution.y * amp;\n    \n    float colx = sign(sin((uv.x - 0.5) * ampx + iTime));\n    float coly = sign(sin((uv.y - 0.5) * ampy + iTime * 0.2));\n    \n    float acolx = sign(sin((uv.x - 0.5) * ampx + iTime));\n    float acoly = sign(sin((uv.y - 0.5) * ampy + iTime * 0.2));\n    \n    vec3 col1 = col_ * step(0.0, colx * coly);\n    vec3 col2 = icol_ * (1.0 - step(0.0, acolx * acoly));\n    \n    vec3 col = col1 + col2;\n        \n    // Output to screen\n    fragColor = vec4(col ,1.0);\n}\n","name":"Image","description":"","type":"image"}]}