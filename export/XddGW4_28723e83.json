{"ver":"0.1","info":{"id":"XddGW4","date":"1449668338","viewed":127,"name":"001[F]","username":"pawsiem","description":"My first shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["first"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"bool squircle(in vec2 center,in vec2 position,in float power,in float size){\n    return(\n        pow(abs(center.x-position.x),power) + \n        pow(abs(center.y-position.y),power)\n        < pow(size,power));\n}\n\nfloat zo(float time){\n\treturn sin(time)*0.5+0.5;\n}\nvec3 grey(float time){\n    float v = zo(time*6.);\n    return vec3(v,v,v);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 star = vec2(100,100);\n    if(squircle(iResolution.xy*0.5,fragCoord.xy,0.3,100.0)){\n        if(squircle(iResolution.xy*0.5,iMouse.xy,0.3,100.)){\n            fragColor = vec4(1.,0.,0.,1.);\n        }else{\n        \tfragColor = vec4(grey(iTime)*0.2+0.75,1);\n        }\n    }else if(squircle(iResolution.xy*0.5,fragCoord.\n                      xy\n                      +sin(fragCoord.x*50.0+iTime)*cos(fragCoord.y*50.0+iTime)*90.0\n                      +cos(fragCoord.y*50.0+iTime)*cos(fragCoord.x*50.0+iTime)*sin(iTime*1.5)*150.0\n                      ,7.0,150.0)){\n        fragColor = vec4(0.8+0.2*sin(iTime/20.),uv,1.0);\n    }else{\n        fragColor = vec4(uv,1.0,1.0);\n    }\n}\n","name":"","description":"","type":"image"}]}