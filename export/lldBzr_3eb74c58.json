{"ver":"0.1","info":{"id":"lldBzr","date":"1538509501","viewed":118,"name":"Conway's Game of life 123","username":"vchizhov","description":"It was high time I implemented this in shadertoy. LMB to create.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["automata","conway","gameoflife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// TODO - implement colour history (the longer something lives, the more it becomes a specific colour, hsv?)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0,uv).xyz;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":3,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const ivec2 END = ivec2(10);\n\n\nivec2 toroidal(in ivec2 c)\n{\n    ivec2 res = ivec2(iResolution.xy);\n    ivec2 o = c;\n    if(c.x<END.x) o.x = res.x - 2*END.x + c.x;\n    else if(c.x>res.x-END.x) o.x = c.x - res.x + 2*END.x;\n    if(c.y<END.y) o.y = res.y - 2*END.y + c.y;\n    else if(c.y>res.y-END.y) o.y = c.y - res.y + 2*END.y;\n    return o;\n}\n#define M(X,Y) int(any(greaterThan(texelFetch(iChannel3, toroidal(coord+ivec2(X,Y)),0).xyz,vec3(0.3))))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 coord = ivec2(fragCoord.xy);\n    \n    int sum = M(1,0)+M(-1,0)+M(0,1)+M(0,-1)\n        +M(1,1)+M(1,-1)+M(-1,1)+M(-1,-1);\n    vec3 res;\n\tbool wasAlive = M(0,0)==1;\n    res = wasAlive ? (sum==3 ? vec3(1.0, 1.0, 0.0) : sum==2 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 0.0, 0.2))\n        : sum==3 ? vec3(0.0, 1.0, 0.0) : vec3(0.0);\n    \n    float r = 20.0;\n    if(iMouse.z>0.0)\n    {\n        res = abs(fragCoord.x - iMouse.x)<r && abs(fragCoord.y - iMouse.y)<r ? vec3(1.0) : res;\n    }\n    \n    if(any(lessThan(coord,ivec2(10))) || any(greaterThan(coord,ivec2(iResolution.xy)-ivec2(10))))\n    {\n        res = vec3(0.0);\n    }\n    \n    fragColor = vec4(res,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}