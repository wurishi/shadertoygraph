{"ver":"0.1","info":{"id":"MllfRH","date":"1513573598","viewed":116,"name":"vortex_uv","username":"myasu0612","description":"uv animation like a vortex","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["uv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 centerUV = vec2(0.5);\n    float distanceToCenter = abs(distance(uv, centerUV));\n    float threshold = 0.3;\n    float coefficient = 5.0;\n    float speed = 2.0;\n    float time = sin(iTime * speed);\n    \n    // 閾値未満だったらそのままテクスチャをサンプリング\n    if (distanceToCenter > threshold) {\n    \tfragColor = texture(iChannel0, uv);\n    }  else {\n        // 中心点からの距離が大きくなる程角度が強くなる\n        float theta = min(max(1.0 - (distanceToCenter / threshold ), 0.0), 1.0) * (time * coefficient);\n        vec2 diffUV = uv - centerUV;\n        float x = diffUV.x * cos(theta) - diffUV.y * sin(theta);\n        float y = diffUV.x * sin(theta) + diffUV.y * cos(theta);\n        vec2 vortexUV = (vec2(x, y)  + centerUV);\n        vec4 textureColor = texture(iChannel0, vortexUV);\n    \tfragColor = textureColor;\n    }    \n}","name":"Image","description":"","type":"image"}]}