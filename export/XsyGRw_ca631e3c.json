{"ver":"0.1","info":{"id":"XsyGRw","date":"1453586876","viewed":753,"name":"Electrocardiogram green CRT","username":"Tetane","description":"Electrocardiogram on a green CRT screen.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["electrocardiogram"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat time = iTime;\n\tfloat mx = max(iResolution.x, iResolution.y);\n\tvec2 scrs = iResolution.xy/mx;\n\tvec2 uv = fragCoord/mx;\n    \n    float f = 70.0; // Frequency of the sinus function\n\n\tvec3 heartBeat = vec3( 1.0 - smoothstep( 0.0,0.01,distance(uv,\n                           vec2(uv.x,((sin((uv.x-scrs.x/2.0)*f)/((uv.x-scrs.x/2.0)*5.0*f)) + sin(uv.x*f)/7.0) * // sin(f*x)/(5*f*x) + sin(f*x)/7   \n                                clamp((1.0-abs((uv.x-scrs.x/2.0)*10.0)),0.0,1.0) + // keep only the middle of the function\n                                scrs.y/2.0) // set to the middle of the screen\n                          )));\n\n\tfloat persist = 0.7; // Persistance of the light\n\tfloat speed = 0.6; // Speed of the light\n\n\n\tvec3 light = vec3( smoothstep(0.0,1.0,distance(0.0, clamp((uv.x + persist - fract(time*speed)*(1.0+persist))/persist,0.0,1.0) )) *\n\t\t               (1.0-step(1.0,distance(0.0 ,(uv.x+persist - fract(time*speed)*(1.0+persist))/persist))) \n                      );\n\n\tvec3 scanlignes = vec3( sin(fragCoord.y*1.7+time) + sin((fragCoord.y/iResolution.y)*12.0+time)*0.3 );\n    \n    vec3 color = vec3(0.5,1.0,0.5);\n    \n\n\tfragColor = vec4((heartBeat * light + scanlignes*0.1) * color  ,1.0);\n}","name":"","description":"","type":"image"}]}