{"ver":"0.1","info":{"id":"DdVGz1","date":"1678196996","viewed":69,"name":"Squared circle overdraw gradient","username":"stepanm","description":"Same as my previous shader but square is 4:3","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mouse","circle","gradient","overdraw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    bool overdraw = iMouse.z > 0.0;\n    vec4 u_color0 = vec4(0.125,0.643,0.843,1.0);\n    vec4 u_color1 = vec4(0.247,0.545,0.918,1.0);\n    vec4 u_color2 = vec4(0.506,0.282,0.925,1.0);\n    vec4 u_color3 = vec4(0.706,0.337,0.847,1.0);\n    vec4 u_color4 = vec4(0.271,0.463,0.914,1.0);\n    vec4 u_color5 = vec4(0.353,0.694,0.278,1.0);\n    vec4 u_color6 = vec4(0.027,0.729,0.388,1.0);\n    vec4 u_color7 = vec4(0.027,0.663,0.675,1.0);\n    \n    float currentAngle = iTime * 0.5;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = fragCoord / iResolution.y;\n    float normalizedMouseX = iMouse.x / iResolution.y;\n    float normalizedMouseY = (iResolution.y - iMouse.y)/iResolution.y;\n    vec2 center = vec2(iMouse.x/iResolution.y, iMouse.y/iResolution.y);\n    float radius = 0.0; //start radius\n    float time = 0.0;\n    if (overdraw) {\n        time = mod(iTime,1.0);\n    }\n    float position = distance(p, center);\n    float dist = position-time*0.5;\n    float alpha = smoothstep(radius, radius + 0.0001, dist);\n\n    vec2 transformed = (uv - center) * mat2(cos(currentAngle), sin(currentAngle), -sin(currentAngle), cos(currentAngle)) + center;\n    //circle\n    vec4 tltr = mix(u_color4, u_color6, smoothstep(0.0, 1.0, transformed.x));\n    vec4 blbr = mix(u_color5, u_color7, smoothstep(0.0, 1.0, transformed.x));\n    vec4 color1 = mix(tltr, blbr, smoothstep(0.0, 1.0, transformed.x));\n    //bg\n    tltr = mix(u_color0, u_color1, smoothstep(0.0, 1.0, transformed.x));\n    blbr = mix(u_color2, u_color3, smoothstep(0.0, 1.0, transformed.x));\n    vec4 color2 = mix(tltr, blbr, smoothstep(0.0, 1.0, transformed.y));\n    if (overdraw) {\n        fragColor = mix(color1, color2, alpha);\n    } else {\n        fragColor = mix(tltr,blbr,uv.y);\n    }\n}","name":"Image","description":"","type":"image"}]}