{"ver":"0.1","info":{"id":"MfSfDD","date":"1724931244","viewed":31,"name":"Test shader babylon","username":"rkgnanesh","description":"Conversion into Babylon","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 m = vec2(sin(iTime * 1.5) * 0.5 + 0.5, 0.0);\n\n    vec4 scr = texture(iChannel0, uv);\n    float srcX = scr.x;\n    vec3 srcColor = scr.yzw; \n    \n    vec4 res = texture(iChannel1, uv);\n    float seedX = res.x;\n    vec3 seedColor = res.yzw;\n    vec3 col = seedColor;\n    \n    fragColor = vec4( m.x > uv.x ? srcColor : col, 1.0);\n    fragColor += step(abs(m.x - uv.x), 0.002);      \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float greenScreen(vec3 x){\n\tvec2 c = step(0.4, vec2(x.g - x.r * x.y, x.g));\n    return c.x * c.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 tex = texture(iChannel0, uv).rgb;\n    vec3 bg = texture(iChannel1, uv).rgb;\n    float mask = greenScreen(tex);\n    \n    \n    fragColor = vec4(fragCoord.x * mask, bg.xyz * mask);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define max_step 8.0\n\nvec4 jumpFlood(sampler2D channel, sampler2D source, vec2 fragCoord, vec2 res, float stepSize) {\n    float stepwidth = pow(stepSize, 2.0) * 0.5;\n    \n    float bestX = 0.0;\n    float bestDist = 99999.0;\n    vec3 bestColor = vec3(0.0);\n    int win = 8;\n    //vec4 src =  texelFetch(source, ivec2(fragCoord), 0);\n    vec4 src =  texture(source,  fragCoord / res);\n     \n    if (src.x != 0.0 && src.y != 0.0) { return src; }\n   \n    for (int x = -win; x <= win; x++) {\n        vec2 sampleCoord = fragCoord + vec2(x, 0) * stepwidth;\n        // vec4 data = texelFetch(channel, ivec2(sampleCoord), 0);\n        vec4 data = texture(channel, sampleCoord / res);\n        float seedX = data.x;\n        vec3 seedColor = data.yzw;\n        \n        float diff = seedX - fragCoord.x;\n        float dist = abs(diff);\n        if (dist < bestDist) {\n            bestDist = dist;\n            bestX = seedX;\n            bestColor = seedColor;\n        }\n\n    }\n    \n    return vec4(bestX, bestColor);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 res = iChannelResolution[0].xy;\n    vec4 c = jumpFlood(iChannel0, iChannel0, fragCoord, res, max_step);\n    fragColor = c;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 res = iChannelResolution[0].xy;\n    vec4 c = jumpFlood(iChannel0, iChannel1, fragCoord, res, max_step * 0.5);\n    fragColor = c;\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 res = iChannelResolution[0].xy;\n    vec4 c = jumpFlood(iChannel0, iChannel1, fragCoord, res, max_step * 0.25);\n    fragColor = c;\n}","name":"Buffer D","description":"","type":"buffer"}]}