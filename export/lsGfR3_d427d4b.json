{"ver":"0.1","info":{"id":"lsGfR3","date":"1529757540","viewed":237,"name":"LSD scroller (fbm, domain-warp)","username":"fanatrick","description":"lazy implementation of this article https://iquilezles.org/articles/warp/warp.htm","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm","perlin","domainwarp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    float a = rand(i);\n    float b = rand(i + vec2(1.0, 0.0));\n    float c = rand(i + vec2(0.0, 1.0));\n    float d = rand(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nfloat fbm(vec2 n){\n    float sum = 0.0;\n    float amp= 1.0;\n    for (int i = 0; i <5; i++){\n        sum += noise(n) * amp;\n        n += n*4.0;\n        amp *= 0.25;\n    }\n    return sum;\n}\n\nfloat fbm_do(vec2 uv){\n    vec2 q = vec2( fbm( uv + vec2(0.0+iTime/10.0,0.0+iTime/10.0) ),\n                   fbm( uv + vec2(5.2+iTime/5.0,1.3+iTime/5.0) ) );\n    \n    vec2 r = vec2( fbm( uv + 4.0*q + vec2(1.7+iTime/4.0,9.2+iTime/7.0) ),\n                     fbm( uv + 4.0*q + vec2(8.3-iTime/8.0,2.8+iTime/4.0) ) );\n\n    return (1.0-fbm( uv + 16.0*r ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord.xy / iResolution.xy - iTime / vec2(12.4, 8.2);\n    fragColor = vec4( fbm_do(uv + vec2(9.68, 4.35)), fbm_do(uv + vec2(3.42, 7.75)), fbm_do(uv + vec2(1.94, 3.16)), 1.0);\n}","name":"Image","description":"","type":"image"}]}