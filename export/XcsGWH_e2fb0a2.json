{"ver":"0.1","info":{"id":"XcsGWH","date":"1705267099","viewed":46,"name":"Simple Fractal Test - Shwow","username":"Shwow","description":"Simple fractal test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 computeNext(vec2 current, vec2 constant){\n    float zr = (current.x * current.x) - (current.y * current.y);\n    float zi = 2.0 * current.x * current.y;\n    \n    return vec2(zr, zi) + constant;\n}\n\nfloat mod2(vec2 z){\n    return z.x * z.x + z.y * z.y;\n}\n\nfloat computeIterations(vec2 z0, vec2 constant, float max_iterations){\n    vec2 zn = z0;\n    float iteration = 0.;\n    while(length(zn) < 2. && iteration < max_iterations){\n        zn = computeNext(zn, constant);\n        iteration++;\n    }\n    \n    float mod2 = length(zn);\n    float smoothf = float(iteration) - log2(max(1., log2(mod2)));\n    return smoothf;\n}\n\nvec3 getColor(float it, float maxIt){\n    return(vec3(it/maxIt));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy)/iResolution.y;\n    uv *= .1;\n    \n    float max_Iterations = 80.;\n    float uTime = pow(sin(iTime * 0.2),3.)*.03 - 1.313;\n    //float uTime = -1.313;\n    uv *= sin(iTime*0.2) + 2.;\n    vec2 uConstant = (vec2(-abs(-sin(uTime)), (cos(uTime))));\n    float color = computeIterations(uv, uConstant, max_Iterations);\n    \n    vec3 col = vec3(getColor(color, max_Iterations));\n    col = vec3(pow(col.x, .7));\n    col.z = 0.;\n    \n    col += vec3(0, 0,.5);\n    col*= vec3(1.3,1,1);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}