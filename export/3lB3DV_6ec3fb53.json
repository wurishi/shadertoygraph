{"ver":"0.1","info":{"id":"3lB3DV","date":"1561100892","viewed":97,"name":"FirstShaderByYuma","username":"yuma1217_ja","description":"First Commit","likes":1,"published":1,"flags":64,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Mll3zj","filepath":"https://soundcloud.com/polo-g/polo-g-feat-lil-tjay-pop-out","previewfilepath":"https://soundcloud.com/polo-g/polo-g-feat-lil-tjay-pop-out","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// カメラをレイマーチングで表現するための関数\n// 一旦覚えるだけの理解で留める、もしくは呪文化\nmat3 camera(vec3 ro, vec3 ta)\n{\n    vec3 up = normalize(vec3(0, 1, 0));\n    vec3 cw = normalize(ta - ro);\n    vec3 cu = normalize(cross(cw, up));\n    vec3 cv = normalize(cross(cu, cw));\n    return mat3(cu, cv, cw);\n}\n\n// 球の距離関数\n// 参照 https://iquilezles.org/articles/distfunctions\n/*\n\tfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n*/\n// \n\nfloat map(vec3 p)\n{\n    float i = texture(iChannel0, vec2(0.1, 0.5)).x;\n    // iでノイズを与えてあげる\n\t\t// ここのノイズの工夫で色合いに差を出すことができる\n    return length(p) - 1.0 + i;\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.001, 0);\n    float d = map(p);\n    vec3 n = d - vec3(\n        map(p - e.xyy), //  map(p - vec3(0.001, 0,                   0))\n        map(p - e.yxy), //  map(p - vec3(0,         0.001,           0))\n        map(p - e.yyx)); // map(p - vec3(0,        0,          0.001))\n    return normalize(n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n\n\tvec3 ro = vec3(0, 0, sin(iTime) * 5.);\n    vec3 ta = vec3(0, 0, 0);\n    \n    float focalLength = 1.5;\n    vec3 ray = camera(ro, ta) * normalize(vec3(uv, focalLength));\n    vec3 col = vec3(0);\n    \n    vec3 p = ro;\n    \n    float d = 0.;\n    \n    // レイマーチ\n    const int max_march = 64;\n    for (int i = 0; i < max_march; i++)\n    {\n        d = map(p);\n        if (d < 0.01) break;\n        p += ray * d;\n    }\n    \n    // ヒットしたかのチェック\n    // 本当はレイマーチをもっと続ければ、あるのかもしれないけど、無限にやらないように\n\t\t// ｄで制限を付ける\n\t\t// 違うわ、レイマーチの回数はmax_marchだ\n    if (d < 0.01)\n    {\n        // vec3 n = normal(p);\n        // 例えばnormalを使わず、vec3(1,1,1)を与えてあげると、白になる\n\t\t\t\t// ヒットチェックされているので、ピクセルaに飛ばしたレイは何かに衝突 = 白に塗りつぶす\n        col = vec3(1,1,1);\n    }\n\n    // 色の出力\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}