{"ver":"0.1","info":{"id":"DtfSDj","date":"1675437034","viewed":125,"name":"gt01","username":"ChunderFPV","description":"xyz grid transforms","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["grid","transform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define H(a) (sin(vec3(0,1.047,2.094)+vec3((a)*6.2832))*.5+.5) // color\n#define RT(a) mat2(cos(m.a*1.5708+vec4(0,-1.5708,1.5708,0)))   // rotate\n#define G(v) max( H(u.v+s), H(1./u.v+s) ) * gt(u.v, 1.-tr)\n\nfloat gt(float x, float lb) // grid transform\n{\n    if (abs(x) < 1.) x = 1./x; // reciprocals\n    float l = max(0., 1.-(abs(fract(x+.5)-.5)/fwidth(x))), // lines\n          g = 1.-abs(sin(x*3.1416)), // glow\n          d = min(1., 1./abs(x)); // darken\n    return (l*lb+g*((1.-lb)+.4))*d;\n}\n\nvoid mainImage(out vec4 RGBA, in vec2 XY)\n{\n    vec3  u, c, v, g;\n    vec2  R = iResolution.xy,\n          m = (iMouse.xy/R*4.)-2.,\n          o;\n    float p = 2., // aa pass\n          T = iTime,\n          t = T/5.,\n          tr = sin(t)*.5+.5, // transform with time\n          s = .2+sin(T)*.1,  // hue shift with time\n          S = 2.+(3.14*tr);  // scale\n    if (iMouse.z < 1.) m = vec2(sin(t/2.)*.4, sin(t)*.3); // rotate with time\n    for (int k = 0; k < int(p*p); k++) // aa loop\n    {\n        o = vec2(k%2, k/2)/p; // aa offset\n        u = normalize(vec3((XY-.5*R+o)/R.y, .5))*S; // 3d coords\n        u.yz *= RT(y), // pitch\n        u.xz *= RT(x); // yaw\n        g = sin(u*3.14);\n        if (sign(cos(t)) < 0.) g = 1./g;\n        g = vec3(g.x*g.y*g.z);\n        u /= u.yzx;\n        u = u*(1.-tr)+g*tr; // transform\n        v = G(x) + G(y) + G(z);\n        c += v;\n    }\n    c /= p*p;\n    RGBA = vec4(c*sqrt(c)*1.5, 1);\n}","name":"Image","description":"","type":"image"}]}