{"ver":"0.1","info":{"id":"l3BXWm","date":"1710683124","viewed":206,"name":"tilted isometric","username":"FabriceNeyret2","description":"SPACE to toggle between perspective and tilted isometric\n\n","likes":17,"published":3,"flags":16,"usePreview":0,"tags":["raymarching","short","mm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define keyToggle(a)  ( texelFetch(iChannel3,ivec2(a,2),0).x > 0.) // keyboard\n#define rot(a)          mat2(cos(a+vec4(0,1,-1,0)*1.5708))         // rotation \n\nvec3 a;                                                    // for texturing\nfloat map(vec3 q) {\n     q.xy = mod(q.xy+1.,2.) - 1.;                          // tiling along x,y\n  // return length(q) - 1.;                                // spheres\n     a = q = abs(q); return max(q.x, max(q.y,q.z)) - .6;   // cubes\n}\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9.;\n    vec3  R = iResolution, N, e = vec3(.01,0,0), q,r, D,p,\n          M = iMouse.z > 0. ? iMouse.xyz/R -.5\n              :  vec3(.13);  //vec3(.1,0,0) * cos(iTime + vec3(0,11,0)); \n          M = .78-6.*M;  M-=M;\n\n    if keyToggle(32)                                       // perspective :    \n          D = normalize( vec3( (2.*U- R.xy) / R.y, 5 ) ),  //    ray direction\n          p = vec3(0,0,-30);                               //    marching point along ray \n    else                                                   // tilted isometric :\n          p = vec3( 6.*( 2.*U - R.xy) / R.y, - 1),         //    ray start\n          D = normalize(vec3( -.35, -.35 ,1));             //    ray direction\n\n    p.xy += iTime;                                         // time scroll \n    for (O=vec4(1); O.x > 0. && t > .01; O-=.01)           // --- march scene\n        q = p,\n        q.yz *= rot(M.y),                                  // rotations\n        q.xz *= rot(M.x), \n        t = map(q),\n     // t = min(t, map(q)),\n        p += t*D;                                          // step forward = dist to obj          \n\n   if (t<.01) \n       a-=.6, O = texture(iChannel0, t==a.x?q.yz:t==a.y?q.xz:q.xy).rrrr, // texture\n       N = normalize( t - vec3( map(q+e), map(q+e.yxy), map(q+e.yyx) ) ),\n       O = vec4(.5-.5*N,0) * O*O*O*4.;                     // color * texture\n}\n\n","name":"Image","description":"","type":"image"}]}