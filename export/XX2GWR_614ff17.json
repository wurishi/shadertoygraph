{"ver":"0.1","info":{"id":"XX2GWR","date":"1708361147","viewed":57,"name":"blob world","username":"tubeman","description":"adapted from https://www.shadertoy.com/view/DtyXDR","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Remixed from https://www.shadertoy.com/view/DtyXDR\n\nfloat scene(vec3 p) {\n  return dot(asin(sin(p)*.5),vec3(1)) - 1.;\n}\nvec3 norm(vec3 p) {\n  mat3 k = mat3(p,p,p) - mat3(0.01);\n  return normalize(scene(p) - vec3(scene(k[0]),scene(k[1]),scene(k[2])));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n  float t = iTime;\n  vec3 cam = normalize( vec3( 1., uv ).xzy );\n  vec3 init = vec3(-t*.8,0,0);\n  vec3 p = init;\n  bool hit = false;\n  for ( int i = 0; i < 200 && !hit; i++) {\n    if (distance(p,init) > 60.) break;\n    float d = scene(p);\n    if (d*d < 0.00001) hit = true;\n    p += cam*d;\n  }\n  vec3 n = norm(p);\n  float ao = smoothstep(-1.,1.,scene(p+n*.9)) * smoothstep(-2.,2.,scene(p+n*2.));\n  float fres = 1.-abs(dot(cam,n));\n  float stripes = asin( sin(t*2.+dot(vec3(1,-1,1),p)*10.) );\n  vec3 col = vec3(0.,0.99,0.7) * smoothstep(-0.05,0.05,stripes);\n  col = (vec3(fres)+col)*ao;\n  col = mix(col, vec3(1.1), !hit ? 1. : smoothstep(0., 60., distance(p,init)));\n  col *= 1.-dot(uv,uv)*.8;\n  fragColor.xyz = smoothstep(0.,1.,sqrt(col));\n}","name":"Image","description":"","type":"image"}]}