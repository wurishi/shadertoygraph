{"ver":"0.1","info":{"id":"ms3GRs","date":"1677689083","viewed":86,"name":"TestClouds","username":"Raistlin_fuego","description":"learningshaders \nIncredible result gives perlin noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learningshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define VELOCITY .05;\n#define SIZE vec2(0.4, .5);\n#define OCTAVE 8;\n\nfloat random21(vec2 uv){\n    return fract(cos(uv.x*5423.21343 + uv.y * 5223.432)*234523.34234);\n}\n\nfloat random(float i){\n    return fract(cos(i*3923.23432)*239832.3324);\n}\n\nfloat smoothNoise(vec2 uv){\n    vec2 id = floor(uv);\n    vec2 i = fract(uv);\n    i = i*i*(3.-2.*i);\n    \n    float bl = random21(id);\n    float br = random21(id+vec2(1, 0));\n    float b = mix(bl, br, i.x);\n    \n    float tl = random21(id + vec2(0, 1));\n    float tr = random21(id+vec2(1, 1));\n    float t = mix(tl, tr, i.x);\n    \n    float r = mix(b, t, i.y);\n    return r;\n}\n\nfloat fbm(vec2 uv, int o){\n    \n    float frecuency = 1.;\n    float amplitude = 1.;\n    float n = 0.;\n    \n    for(int i = 0; i<o;i++){\n    \n        n += smoothNoise(uv * frecuency) * amplitude;\n        frecuency *= 2.;\n        amplitude /= 2.;\n    }\n    n/=2.;\n    \n    return n;\n}\n\nvec2 Moviment(){\n    float velocityX = .2 * VELOCITY;\n    float velocityY = .05 * VELOCITY;\n    return vec2(iTime*velocityX, iTime*velocityY);\n}\n\nfloat CircleCloud(vec2 uv, vec2 vel){\n    float x = (uv.x + cos(uv.y * 1.7 + iTime)*.4) - vel.x;\n    float y = (uv.y + cos(uv.x * 1.5 + iTime * 0.5)*0.2) - vel.y;\n    vec2 cUv = vec2(x, y) * SIZE;\n    float c = length(cUv);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0., .5, 1.);\n    \n    uv *= 8.;\n    \n    //float velocityX = .2 * VELOCITY;\n    //float velocityY = .05 * VELOCITY;\n    //uv.x += iTime * velocityX;\n    //uv.y += iTime * velocityY;\n    vec2 vel = Moviment();\n    uv += vel;\n    \n    //float x = (uv.x + cos(uv.y * 1.7 + iTime)*.4) - vel.x;\n    //float y = (uv.y + cos(uv.x * 1.5 + iTime * 0.5)*0.2) - vel.y;\n    \n    //vec2 cUv = vec2(x, y) * SIZE;\n    //float c = length(cUv);\n    float c = CircleCloud(uv, vel);\n    \n    int octave = OCTAVE;\n    float r = fbm(uv, octave);\n    //col = mix(col, vec3(.8), 1.-smoothstep(0., .7, r)); // All Clouds\n    \n    col = mix(col, vec3(.9), 1.-smoothstep(0., .9, r * c)); // One Cloud\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}