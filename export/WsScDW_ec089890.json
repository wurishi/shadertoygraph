{"ver":"0.1","info":{"id":"WsScDW","date":"1586696637","viewed":63,"name":"SALAMANDER","username":"os0450","description":"By Gray-Scott model.\n\nRefference: https://www.oreilly.co.jp/books/9784873118475/","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["dailycodingchallenge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord/iResolution.xy;\n    \n    vec3 col = vec3(texture(iChannel0, p.xy).r,\n                    (0.7-p.y)*1.5,\n                    (0.7-p.y)*1.5);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float dx = 0.01;\nfloat dt = 1.0;\nfloat du = 2e-5;\nfloat dv = 1e-5;\nfloat f = 0.012, k = 0.05;\n\nfloat rand(vec2 p) {\n    return fract(sin(dot(p, vec2(12., 78.)))*43758.43758);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.);\n    vec2 eps = vec2(1.)/iResolution.xy;\n    \n    if(iTime < 0.04 ) {\n        vec2 q = vec2(p.x*iResolution.x/iResolution.y, p.y);\n        if(length(q - vec2(0.88, 0.5)) < 0.3) {\n            col = vec3(0.5, 0.25, 0.);\n        } else {\n            col = vec3(1.0, 0., 0.);\n        }\n        col += rand(p) * 0.1;\n    } else {\n        vec2 uv = texture(iChannel0, p).rg;\n        \n        vec2 lap =\n             (texture(iChannel0, p + vec2(eps.x, 0.))\n            + texture(iChannel0, p + vec2(0., eps.y))\n            + texture(iChannel0, p + vec2(-eps.x, 0.))\n            + texture(iChannel0, p + vec2(0., -eps.y))).rg\n            - 4.0 * uv;\n        lap /= (dx*dx);\n        \n        vec2 duvt = vec2(du*lap.x - uv.x*uv.y*uv.y + f*(1.0-uv.x),\n                         dv*lap.y + uv.x*uv.y*uv.y - (f+k)*uv.y);\n        \n        uv += duvt*dt;\n        col = vec3(uv.x, uv.y, 0.);\n    }\n    \n    fragColor = vec4(col,1.0); \n}","name":"Buffer A","description":"","type":"buffer"}]}