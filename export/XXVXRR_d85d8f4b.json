{"ver":"0.1","info":{"id":"XXVXRR","date":"1719838337","viewed":37,"name":"大理石纹 AI","username":"macoofi","description":"2D,noise texture,AI","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","ai","noisetexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Shadertoy 代码：大理石纹理噪声\n\n// 生成噪声函数\n    float noise(vec2 p) {\n        return fract(sin(dot(p, vec2(127.1, 311.7))) * 43758.5453123);\n    }\n    \n    // 生成平滑噪声函数\n    float smoothNoise(vec2 p) {\n        vec2 i = floor(p);\n        vec2 f = fract(p);\n        f = f * f * (3.0 - 2.0 * f);\n        \n        float a = noise(i);\n        float b = noise(i + vec2(1.0, 0.0));\n        float c = noise(i + vec2(0.0, 1.0));\n        float d = noise(i + vec2(1.0, 1.0));\n        \n        return mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\n    }\n    \n    // 生成湍流函数\n    float turbulenceNoise(vec2 p) {\n        float val = 0.0;\n        float freq = 1.0;\n        float amp = 1.0;\n        \n        for(int i = 0; i < 5; i++) {\n            val += abs(smoothNoise(p * freq)) * amp;\n            freq *= 2.0;\n            amp *= 0.5;\n        }\n        \n        return val;\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 归一化坐标\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float time = iTime * 1.;\n    \n    // 大理石纹理参数调整\n    float scale = 25.0;\n    float turbulence = 0.5;\n\n    \n    \n    // 生成大理石纹理\n    vec2 pos = uv * scale;\n    float n = turbulenceNoise(pos + vec2(time, time));\n    float marble = sin(uv.x * 10.0 + n * turbulence);\n    \n    // 颜色调整\n    vec3 color = vec3(1.0);\n    color = mix(vec3(0.1, 0.1, 0.1), vec3(0.8, 0.8, 0.8), marble * 0.5 + 0.5);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}