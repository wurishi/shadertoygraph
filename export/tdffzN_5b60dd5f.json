{"ver":"0.1","info":{"id":"tdffzN","date":"1587777587","viewed":81,"name":"wallpaper_tiles","username":"blepfo","description":"https://en.wikipedia.org/wiki/Wallpaper_group#/media/File:Wallpaper_group-p4g-2.jpg","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141\n\nfloat unionSdf(float d1, float d2) {\n    return min(d1, d2);\n}\n\n\nfloat rectSdf(\n    vec2 uv, \n\tvec2 halfSize\n) {\n    vec2 componentDist = abs(uv) - halfSize;\n    float dOut = length(max(componentDist, 0.));\n    float dIn = min(max(componentDist.x, componentDist.y), 0.);\n    return dOut + dIn;\n}\n\n\nvec2 translate(\n\tvec2 uv,\n    vec2 t\n) {\n    return uv - t;\n}\n\n\nmat2 rotate2d(float theta) {\n    return mat2(cos(theta), -sin(theta),\n               sin(theta), cos(theta));\n}\n\n\nfloat baseShapeSdf(vec2 uv) {\n    // Long \n    vec2 shortBarScale = vec2(1./7., 1.);\n    // Main shapes\n    float longBar = rectSdf(uv, vec2(0.5,4.5));\n    float shortBarTop = rectSdf(\n        translate(uv, vec2(0., 4.)), \n        vec2(3.5, 0.5)\n    );\n    float shortBarBottom = rectSdf(\n    \ttranslate(uv, vec2(0., -4.)),\n        vec2(3.5, 0.5)\n    );\n    float detailBoxQ1 = rectSdf(\n        translate(uv, vec2(2., 3.)),\n        vec2(.5, .5)\n    );\n    float detailBoxQ2 = rectSdf(\n        translate(uv, vec2(-2., 3.)),\n        vec2(.5, .5)\n    );\n    float detailBoxQ3 = rectSdf(\n        translate(uv, vec2(-2., -3.)),\n        vec2(.5, .5)\n    );\n    float detailBoxQ4 = rectSdf(\n        translate(uv, vec2(2., -3.)),\n        vec2(.5, .5)\n    );\n    float shape = longBar;\n    shape = unionSdf(shape, shortBarTop);\n    shape = unionSdf(shape, shortBarBottom);\n    shape = unionSdf(shape, detailBoxQ1);\n    shape = unionSdf(shape, detailBoxQ2);\n    shape = unionSdf(shape, detailBoxQ3);\n    shape = unionSdf(shape, detailBoxQ4);\n    return shape;\n}\n\nfloat outlineShape(float shapeSdf) {\n    return smoothstep(0., 0.05, shapeSdf) - smoothstep(0.07, 0.1, shapeSdf);\n}\n\nfloat placeShape(\n\tvec2 uv, \n    vec2 t,\n    float theta\n) {\n    float shapeSdf = baseShapeSdf(rotate2d(theta)*translate(uv, t));\n    return outlineShape(shapeSdf);\n}\n\n\nfloat singleTile(vec2 uv) {\n    uv = abs(uv);\n    float mainShape = placeShape(uv, vec2(0.), 0.);\n    \n    float tlShape = placeShape(uv, vec2(5., 5.), 0.);\n    \n    float tile = mainShape + tlShape ;\n    return tile;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    float tileScale = 3.;\n    vec2 scaleUv = uv*tileScale;\n    scaleUv += iTime / 3.5;\n    vec2 fractUv = fract(scaleUv);\n    // Map each tile to [-5.5, -5.5] x [5.5, 5.5]\n    fractUv = 10.*fractUv - 5.;\n    float tile = singleTile(fractUv);\n\n    vec3 color = vec3(0.061,0.300,0.274);\n    color = mix(color, vec3(0.379,1.000,0.084), tile);\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}