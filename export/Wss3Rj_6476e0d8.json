{"ver":"0.1","info":{"id":"Wss3Rj","date":"1546883356","viewed":122,"name":"Rotation 2D","username":"Hullburg","description":"changing base vectors","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rotation","transformation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 toUv(vec2 p) {\n    return (p*2. - iResolution.xy)/iResolution.y;\n}\n\nbool actualCross(vec2 st) {\n    return\n        max(abs(st.x), abs(st.y)) < 1./2. &&\n        min(abs(st.x), abs(st.y)) < 1./6.\n    ;\n}\n\n/*float cross(vec2 a, vec2 b) {\n    return a.x*b.y + b.x*a.y;\n}*/\n\nvec2 perp(vec2 v, bool right) {\n    return vec2(v.y, -v.x) * (right ? 1. : -1.);\n}\n\nvec2 rotate(vec2 v, vec2 newXAxis) {\n    newXAxis = normalize(newXAxis);\n    vec2 newYAxis = perp(newXAxis, false);\n    \n    return vec2(dot(v, newXAxis), dot(v, newYAxis));\n}\n\nvec2 dir(float angle, bool clockwise, bool xStart) {\n    float sinus =\tsin(angle);\n    #define cosinus\tcos(angle)\n    \n    if (clockwise) sinus *= -1.;\n    if (xStart) sinus *= -1.;\n    \n    return xStart ?\n        vec2(cosinus, sinus) :\n    \tvec2(sinus, cosinus)\n    ;\n    #undef cosinus\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = toUv(fragCoord);\n    float val = 0.;\n    vec3 col = vec3(0);\n    \n    //uv += vec2(0.700,0.650);\n    vec2 newX = dir(iTime, true, true);\n    if (iMouse.z < 0.) uv = rotate(uv, newX);\n    else uv = rotate(uv, toUv(iMouse.xy));\n    uv += vec2(-0.5,0.);\n    uv = rotate(uv, newX * vec2(true?-1.:1., -1));\n    //uv = newX*0.5;\n    //uv += vec2(0.240,-0.060);\n    \n\tcol = actualCross(uv) ?\n        vec3(1) :\n    \t#if 01\n    \t\tvec3(uv,0)\n        #else\n    \t\tvec3(0.6,0,0)\n        #endif\n    ;\n    \n    //fragColor.rgb += val;\n    fragColor.rgb = col;\n    fragColor.a = 1.;\n}","name":"Image","description":"","type":"image"}]}