{"ver":"0.1","info":{"id":"dtlSDj","date":"1675381921","viewed":63,"name":"JMR - 19078965","username":"jmr117","description":"Project for university","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["jmr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 randColor(int number){ // Sets random colors \n    return fract(sin(vec3(number+1)*vec3(12.8787, 1.97, 20.73739)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0); \n    \n    int points_length = 9;  // Array list for ammounts (in this case 9)\n    vec2 points_array[9] = vec2[9](\n        vec2(0.1+0.2*sin(iTime), 0.2), \n        vec2(0.7, 0.5+0.1*cos(iTime)),\n        vec2(0.9, 0.6),\n        vec2(0.7+0.1*sin(iTime), 0.1),        \n        vec2(0.6, 0.9),\n        vec2(0.3, 0.8),\n        vec2(0.4, 0.9),\n        vec2(0.8, 0.9),\n        vec2(0.1, 0.6)\n    ); \n    \n    float dmin = 1000.0; //set  \n    int point = 0;\n    \n    for(int i = 0; i < points_length; i++){\n        vec2 uv_rounded = floor(uv*100.0)/100.0;\n        vec2 point_rounded = floor(points_array[i]*100.0)/100.0;\n        \n        if(uv_rounded == point_rounded){\n            col = vec3(1); \n        }\n        if(length(points_array[i] - uv) < dmin){\n            point = i; \n            dmin = length(points_array[i] - uv); \n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(randColor(point)-dmin+col,1.0);\n}","name":"Image","description":"","type":"image"}]}