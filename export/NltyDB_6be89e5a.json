{"ver":"0.1","info":{"id":"NltyDB","date":"1660476225","viewed":240,"name":"Sine Spectrogram","username":"MysteryPancake","description":"Sine waves making up a spectrogram","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["wave","spectrum","sdf","sine","waveform","spectrogram"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 result = vec3(0.0);\n    const int iterations = 48;\n    \n    for (int i = 0; i <= iterations; i++) {\n        float percent = float(i) / float(iterations);\n        float spectrum = texture(iChannel0, vec2(percent, 0.0)).x;\n        float amplitude = 0.02 * spectrum;\n        float sine = percent + sin(iTime * 8.0 + uv.y * float(i * 4)) * amplitude;\n        result += vec3(0.0016 / distance(vec2(sine, uv.y), uv)) * uv.xyx;\n    }\n    \n    fragColor = vec4(result, 1.0);\n}","name":"Image","description":"","type":"image"}]}