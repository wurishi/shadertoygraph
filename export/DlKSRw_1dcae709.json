{"ver":"0.1","info":{"id":"DlKSRw","date":"1685995517","viewed":70,"name":"Time and Space","username":"Naraku","description":"https://www.youtube.com/watch?v=f4s1h2YETNY&ab_channel=kishimisu\nhttps://www.shadertoy.com/view/mtyGWy","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["relaxing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t )\n{\n    vec3 a = vec3(0.980,0.625,0.923);\n    vec3 b = vec3(0.673,0.343,0.464);\n    vec3 c = vec3(1.143,1.182,1.524);\n    vec3 d = vec3(1.306,2.887,3.029);\n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float loops = 8.0;\n    float thickness = 0.5;\n    float brightness = 0.1;\n    float colorVariationSpeed = 18.4;\n    float iterations = 4.0;\n\n    vec2 uv = ( 2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for ( float i = 0.0; i < iterations; i++) {\n        uv = fract(uv * (.05 * 30.0));\n        uv -= .5;\n\n        float d = length(uv) * exp(-length(uv0));\n        vec3 color = palette(length(uv0) + i * colorVariationSpeed + iTime);\n\n        d = sin(d* loops + iTime) / thickness;\n        d = abs(d);\n\n        d = pow(brightness / d, 2.0);\n\n        finalColor += color * d;  \n    }\n    \n    fragColor = vec4(finalColor,1.0); \n}","name":"Image","description":"","type":"image"}]}