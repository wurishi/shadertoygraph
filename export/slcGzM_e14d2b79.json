{"ver":"0.1","info":{"id":"slcGzM","date":"1635876228","viewed":157,"name":"Watercolor primitives","username":"sinvec","description":"I don't know what exactly it is, but it looks interesting :)","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","painting","watercolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define s(v) smoothstep(15./iResolution.y,0.,v) // AA\n#define ro(a) (mat2(cos(a),sin(a),-sin(a),cos(a))) // 2d rotation matrix\nfloat hash21(vec2 p) {return fract(fract(dot(p,vec2(5.15123,2.1235)))*41.3151);}\n\nfloat cir (vec2 p, vec2 c, float r, float w) {\n    return abs(length(p-c)-r)- w;\n    }\n\nfloat squ(vec2 p, vec2 b, float w) {\n    vec2 d = abs(p)-b;\n    return abs(length(max(d,0.0)) + min(max(d.x,d.y),0.0)) - w;\n}\n\nfloat tri(vec2 p, float w){\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    p.y = p.y + 1.0/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 0.0 );\n    return abs(-length(p)*sign(p.y))-w;\n}\n\nfloat fbm(vec2 p){\n    return texture(iChannel0, p*.001).x*.533 +\n           texture(iChannel0, p*.01).x*.267 +\n           texture(iChannel0, p*.3).x*.133 +\n           texture(iChannel0, p*.5).x*.067; \n}\n\nfloat watercolor (vec2 p) {\n       p*=5.;\n       vec2 q = vec2(0.);\n       q.x = fbm(p);\n       q.y = fbm( p + vec2(1.0));\n       vec2 r = vec2(0.);\n       r.x = fbm( p + 1.0*q + vec2(1.7,9.2));\n       r.y = fbm( p + 1.0*q + vec2(8.3,2.8));\n       float f = fbm(p+r);\n       return clamp(f,0.,1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    \n    uv *= ro(iTime * .1);\n    uv += vec2(iTime * .1);\n    \n    uv *= 2.;\n    \n    vec2 offs = (vec2(fbm(uv*16.), fbm(uv*16. + .35)) - .5) * .07;\n    \n    vec2 grid = floor(uv);\n    vec2 fl = uv - grid; \n    float id = hash21(sin(cos(grid) * 4.));\n    float lvl = 1.;\n    \n    for (int i = 0; i < 4; i++)\n        if (id * 10. >= 1.) {\n            vec2 t = fl; \n            grid = floor(fl * 2.);\n            fl = t * 2. - grid;\n            id = hash21(grid + cos(id) * sin(grid));\n            lvl++;\n        }\n    \n    fl -= vec2(.5);\n    fl += offs;\n    \n    vec3 col = vec3(.9);\n    \n    col = mix(col, col*.7, texture(iChannel0, uv*5.).x*.5);\n    col += texture(iChannel0, (uv+vec2(.125,.382))*5.).x*.2;\n    col = mix(col, vec3(.95,.95,1.0)*col, texture(iChannel0, uv*.02).x);\n    \n    float tem = 0.;\n    \n    if (id < .05)\n        tem = s(cir(fl, vec2(.0), .25, .1));\n    else if (id < .1)\n        tem = s(squ(fl*ro(id*100.), vec2(.25), .1));\n    else\n        tem = s(tri(fl*ro(id*100.)*3., .3));\n    \n    col = mix(col, mix(col, vec3(hash21(grid*2.*id), hash21(grid*3.*id), hash21(grid*4.*id)), watercolor(uv)), tem);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}