{"ver":"0.1","info":{"id":"dlSBRK","date":"1694220622","viewed":34,"name":"Pizza SDF 2D","username":"twixuss","description":".","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","circle","slice","segment","pizza"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\n#define TAU (PI*2.0)\n#define S smoothstep\n#define S01(x) S(0.0, 1.0, x)\n#define SAT(x) clamp(x, 0.0, 1.0)\n#define LSQ(x) dot(x, x)\n\nfloat ssign(float x) { return sign(sign(x)+0.5); }\n\nvec2 perp(vec2 x) { return vec2(-x.y, x.x); }\nfloat sdLine(vec2 p, vec2 a, vec2 b) {\n\tfloat l2 = LSQ(a-b);\n\treturn l2 == 0. ? distance(p, a) : distance(p, a+SAT(dot(p-a, b-a)/l2)*(b-a))*ssign(dot(p,perp(a-b)));\n}\nfloat sdPizza(vec2 uv, float angle) {\n    angle = clamp(angle,0.0,TAU);\n    float c = length(uv)-1.0;\n    float l1 = +sdLine(uv, vec2(0,0), vec2(1,0));\n    float l2 = -sdLine(uv, vec2(0,0), vec2(cos(angle),sin(angle)));\n    if (angle<TAU*0.25) return max(c,max(l1,l2));\n    if (angle<TAU*0.50) return max(c,min(abs(l1),abs(l2))*sign(max(l1,l2)));\n    if (angle<TAU*0.75) return max(c,min(abs(l1),abs(l2))*sign(min(l1,l2)));\n    else                return max(c,min(l1,l2));\n}\nfloat smin(float a, float b, float k) {\n\tfloat h = SAT((b-a)/k+0.5);\n\treturn b+h*(a-b+k*0.5*(h-1.0));\n}\nfloat sfract(float x, float s) {\n    return smin(fract(x), 0.5+(floor(0.5+x)-x)/s, sign(fract(x)-0.5));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.y;\n    uv.x -= (iResolution.x-iResolution.y)/iResolution.y*0.5;\n    float a = sin(iTime)*PI+PI;\n    float d = sdPizza(uv*3.0-1.5, a);\n    float w = sfract(abs(d)*5.0-iTime, 12.0/iResolution.y);\n    float m = 0.7+0.4*w;\n    fragColor = mix(vec4(1.0, 0.7, 0.5, 1), vec4(0.5, 0.5, 1.0, 1), step(d,0.0))*m*S(0.01, 0.01+6.0/iResolution.y, abs(d));\n}","name":"Image","description":"","type":"image"}]}