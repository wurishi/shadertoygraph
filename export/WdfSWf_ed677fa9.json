{"ver":"0.1","info":{"id":"WdfSWf","date":"1552303399","viewed":263,"name":"Portfolio Shader 3","username":"LCVillafania23","description":"Charged particles released from the sun's atmosphere achieved through noise, smooth step, and overlapping colors and a dark background with white noise for the night sky.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["northernlights"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.141\n\nmat2 rotate2D(float angle) {\n\treturn mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nfloat randomStars(in vec2 uv) {\n    return fract(sin(dot(uv.xy, vec2(2.0, 30.0))) * 9999999999.0);\n}\n\nfloat random(in vec2 uv) {\n    return fract(sin(dot(uv.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat noise(in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) + \n            (c - a) * u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    \n    uv *= rotate2D(60.0 * PI / 180.0);\n        \n    float zoom = 2.0;\n    float offset = noise(uv * zoom - iTime);\n\n    float stars = randomStars(uv * iTime);\n    float outer = smoothstep(0.0 - offset, 0.3 - offset, uv.x) - smoothstep(0.5 - offset, 0.7 - offset, uv.x);\n    float inner = smoothstep(0.3 - offset, 0.4 - offset, uv.x) - smoothstep(0.7 - offset, 1.0 - offset, uv.x);\n    float overlap = smoothstep(0.45 - offset, 0.7 - offset, uv.x) - smoothstep(0.8 - offset, 0.9 - offset, uv.x); \n\n    vec3 blue = vec3(0.0, 0.0, 0.175);\n    vec3 purple = vec3(0.7, 0.4, 0.6);\n    vec3 green = vec3(0.4, 1.0, 0.7);\n    vec3 white = vec3(0.9, 1.0, 0.9);\n\n    vec3 starColor = mix(blue, white, stars);\n    vec3 outerColor = mix(starColor, purple, outer);\n    vec3 innerColor = mix(outerColor, green, inner);\n    vec3 overlapColor = mix(innerColor, white, overlap);\n\n    fragColor = vec4(overlapColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}