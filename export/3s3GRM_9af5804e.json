{"ver":"0.1","info":{"id":"3s3GRM","date":"1568021802","viewed":92,"name":"roundrect2","username":"zhaifuqiang","description":"roundrect","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["round"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by zfq - 2019-09-10\n\n// Rect radius\nfloat radius = 0.0;\n\n// Background color\nvec4 bgColor = vec4(0, 0.2, 0.0, 1);\nvec4 bgColor2 = vec4(0.2, 0.0, 0.0, 0.0);\n\nvec2 rotate (vec2 pos, float angle)\n{ \n  float ca = cos(angle),  sa = sin(angle);\n  return pos * mat2(ca, sa, -sa, ca);  \n}\n\n// Rounded rect distance function\nfloat udRoundRect(vec2 p, vec2 b, float r)\n{\n\treturn length(max(abs(p) - b, 0.0)) - r;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Rect center and half size\n    vec2 center = iResolution.xy / 2.0;\n    vec2 hsize = iResolution.xy / 4.0;\n    radius = hsize[1];\n\n\tvec2 uv = fragCoord / iResolution.xy;\n\tvec4 contentColor = vec4(uv, 0.5 + 0.5*sin(iTime), 1.0);\n    vec2 p = rotate(fragCoord - center, -iTime / 3.0);\n        \n\n    // Mix content with background using rounded rectangle\n    float d = udRoundRect(p, hsize - radius, radius);\n    float line = 12.0;\n    float a = clamp(d/2.0, 0.0, 1.0);\n    //float a = smoothstep(0.0,1.0,d);\n    if(d <=  -line)  {\n        a  = clamp(abs(d + line)/2.0, 0.0, 1.0);\n        fragColor = mix(contentColor, bgColor2 * 0.2, a);\n        //a = smoothstep(0.0,0.45,abs(d + line)/5.0);\n    } else {\n        fragColor = mix(contentColor, bgColor, a);\n    }\n    \n\t//a = smoothstep(0.85,0.95,abs(d / line) * 1.0);\n    //a = smoothstep(0.0, 0.02, abs(d / line)/100.0);\n \n}","name":"Image","description":"","type":"image"}]}