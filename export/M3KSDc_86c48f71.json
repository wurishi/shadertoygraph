{"ver":"0.1","info":{"id":"M3KSDc","date":"1720593277","viewed":53,"name":"worms from random ","username":"Hzzzch","description":"edited from :https://thebookofshaders.com/05/ , https://www.shadertoy.com/view/MsXSzM","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n#define TIMESCALE 0.2 \n#define TILES 8.\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,vec2(13.9898,78.233)))* 43758.5453123);\n}\n\nvec2 truchetPattern(in vec2 _st, in float _index){\n    _index = fract(((_index-0.5)*2.0));\n    if (_index > 0.75) {\n        _st = vec2(1.) - _st;\n    } else if (_index > 0.5) {\n        _st = vec2(1.-_st.x,_st.y);\n    } else if (_index > 0.25) {\n        _st = 1.0-vec2(1.0-_st.x,_st.y);\n    }\n    return _st;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2  st = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    st *= 10.0;\n    st*=2.;\n    st.x += iTime*3.0;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    vec2 ipos = floor(st);  \n    vec2 fpos = fract(st); \n\n    vec2 tile = truchetPattern(fpos, sin(random(ipos )*iTime/PI));\n    vec2 TILE = truchetPattern(ipos, random(ipos ));\n    float color = 0.0;\n\n    color = (smoothstep(length(tile),0.6,length(st-fpos)) -smoothstep(length(tile),0.4,length(st-fpos)) ) +(smoothstep(length(tile-vec2(1.)),0.6,length(st-fpos)) -smoothstep(length(tile-vec2(1.)),0.4,length(st-fpos)));\n\n    vec4 noise = texture(iChannel0, floor(uv * float(TILE)) / float(TILE));\n\tfloat p = 1. - mod(noise.r + noise.g + noise.b + iTime * float(TIMESCALE), 1.0);\n\tp = min(max(p * 3.0 - 1.8, 0.1), 2.0);\n\t\n\tvec2 r = mod(st * float(TILES),1.0);\n\tr = vec2(pow(r.x - 1., 2.0), pow(r.y - 1., 2.0));\n\tp *= 1.0 - pow(min(1.0, 10.0 * dot(r.x, r.x)), 5.0);\n   \n    fragColor = vec4(vec3(color),1.0)*p;\n}\n","name":"Image","description":"","type":"image"}]}