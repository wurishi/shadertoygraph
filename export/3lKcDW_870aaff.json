{"ver":"0.1","info":{"id":"3lKcDW","date":"1611045373","viewed":41,"name":"похоже на хуй","username":"Kapu","description":"похоже на хуй","likes":1,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int ITERATIONS = 256;\n\n//fractal\nint mandelbrot(vec2 C) { \n  vec2 Z = vec2(0.0, 0.0);\n  for (int i = 0; i < ITERATIONS; i++) {\n    Z = vec2(Z.x*Z.x*1.5 - Z.y*Z.y*13.0, 1.5*Z.x*Z.y)+C/2.0; // Z ← Z²+C\n    if(length(Z)>30.0){\n       return i;\n    }\n  }\n  return 0;\n}\n\n//abgust coordinates\nvec2 position(vec2 fragCoord) {\n  return (fragCoord-iResolution.xy/2.0) / iResolution.yy * 2.5 - vec2(.5,0) ;\n}\n\n\nvoid mainImage( out vec4 O, in vec2 U ){\n   vec2 pos         = position(U);   \n   int value        = mandelbrot(pos); \n   float color      = float(value) / float(ITERATIONS); \n   O = vec4(vec3(color*10.0), 1.0);   \n}\n\n\n\n","name":"Image","description":"","type":"image"}]}