{"ver":"0.1","info":{"id":"ldGcRV","date":"1522599580","viewed":128,"name":"256 colors","username":"draco_nite","description":"256 colors. Dunno how to make white work properly","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["retro","256"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float divisorRound( float f, float divisor )\n{\n    float d1 = 1. / divisor;\n    float d1m1 = 1. / (divisor - 1.);\n    float lower = floor ( f / d1 );\n    \n    float r = d1m1 * lower;\n    return r;\n}\n\nfloat r4x ( float f ) // repeat four times\n{\n    return mod(4. * f, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col = vec3(r4x(uv.x), 1. - uv.y, uv.x);\n\n    col.r = divisorRound( col.r, pow(2., 3.) );\n    col.g = divisorRound( col.g, pow(2., 3.) );\n    col.b = divisorRound( col.b, pow(2., 2.) );\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}