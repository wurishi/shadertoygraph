{"ver":"0.1","info":{"id":"3tdcWr","date":"1608820166","viewed":470,"name":"Clone Tool","username":"smkgames","description":"The Clone Stamp tool is used for pixel-to-pixel cloning. ... Position the cursor over the area where you want to paint the cloned pixels and then start painting.","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["paint","multipass","smudge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 clone = texture(iChannel0,fragCoord / iResolution.xy);\n\n    fragColor = clone;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\n\n\nvec2 difference( vec2 a, vec2 b, vec2 p )\n{\n\treturn b - a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord / iResolution.x;\n    vec4 m = iMouse / iResolution.x;\n    \n    vec2 uv = fragCoord / iResolution.x;\n    \n    vec4 baseImage = texture(iChannel1,p);\n\n    \n    if(iTime<= 0.1){\n    fragColor = baseImage;\n\n    }else{\n    \n\t\n    \n    float mask = max(0.,1.-length(p-    m.xy )/0.055); \n\n\n\n    vec2 diff = difference( m.xy, abs(m.zw), p );\n    uv += diff;\n\n    vec4 Image= texture(iChannel1,uv);\n\n    \n    vec4 result = texture(iChannel0, fragCoord.xy / iResolution.xy);\n\n    fragColor = mix(result,Image,vec4(mask ));\n}\n    //fragColor = texture(iChannel0, fragCoord.xy / iResolution.xy);\n\n}","name":"Buffer A","description":"","type":"buffer"}]}