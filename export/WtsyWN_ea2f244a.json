{"ver":"0.1","info":{"id":"WtsyWN","date":"1592114160","viewed":98,"name":"Pause - Bridget Riley - 1","username":"lynnh","description":"1964","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Pi, the ratio of a circle's circumference to its diameter.\nconst float M_PI = 3.14159265358979323846264338327950288;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // And keep aspect ratio by deviding by Y only.\n    vec2 pos = vec2(fragCoord.xy/iResolution.y);\n    // Set default backgroun color\n    vec3 pixel = vec3(1.0);\n\n    // Rotate canvas\n    vec2 pos2;\n    float angle = 0.25 * M_PI;\n    pos2.x =   cos(angle)*pos.x + sin(angle)*pos.y;\n\tpos2.y = - sin(angle)*pos.x + cos(angle)*pos.y;\n    \n    // Adding waves based on pre-rotated canvas\n    // This part seems off\n    pos2.x += sin(iTime - 5.5 * pos.x - 1.0 * pos.y) * 0.05;\n\n    // Setting up a grid\n    float num = 12.0;\n\tpos2 *= num;\n    pos2 = fract(pos2);\n    \n    \n    // Draw a circle\n    vec3 col = vec3(0.0);\n    float radius = 0.4;\n    if (length(pos2 - vec2(0.5)) < radius) pixel = col;\n    \n    // Set Color Variation\n    // This part is also off. Maybe transform the grid in the end?\n    vec3 add = vec3((cos(pos.x * 4.0 + pos.y * 2.0) + 1.0)*0.48);\n    pixel += add;\n\n    // Output to screen\n    fragColor = vec4(pixel,1.0);\n}","name":"Image","description":"","type":"image"}]}