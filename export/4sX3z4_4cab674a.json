{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tfloat \tcenterBuffer \t\t= 0.15,\n\t\t\tvignetteStrength \t= 0.6,\n\t\t\taberrationStrength \t= 1.25;\n\t\n\tfloat \tchrDist,\n\t\t\tvigDist;\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\t//calculate how far each pixel is from the center of the screen\n\tvec2 vecDist = uv - (0.5, 0.5);\n\tchrDist = vigDist = length(vecDist);\n\t\n\t//modify the distance from the center, so that only the edges are affected\n\tchrDist\t-= centerBuffer;\n    chrDist = max(chrDist, 0.0);\n\t\n\t//distort the UVs\n\tvec2 uvR = uv * (1.0 + chrDist * 0.02 * aberrationStrength);\n\tvec2 uvB = uv * (1.0 - chrDist * 0.02 * aberrationStrength);\n\t\n\t//get the individual channels using the modified UVs\n\tvec4 c;\n\t\n\tc.x = texture(iChannel0 , uvR).x; \n\tc.y = texture(iChannel0 , uv).y; \n\tc.z = texture(iChannel0 , uvB).z;\n\t\n\t//apply vignette\n\tc *= 1.0 - vigDist * vignetteStrength;\n\t\n\tfragColor = c;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sX3z4","date":"1366276339","viewed":1141,"name":"Chromatic Aberration Effect","username":"ChrisWebb","description":"A simple chromatic aberration effect with vignetting.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["effect"],"hasliked":0,"parentid":"","parentname":""}}