{"ver":"0.1","info":{"id":"McVGWz","date":"1712634545","viewed":141,"name":"LED light up display","username":"akr51","description":"Using 2D screen fracturing and some power and shaping functions","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["screenfracture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 c_out, in vec2 u)\n{\n    \n    vec2 rr = iResolution.xy, uv = (u + u -rr) / rr.y;\n    \n    vec2 uvc = uv;\n    uv = fract(uv * 19.0) - 0.5;\n    \n    vec3 color = vec3(0.0);\n    \n    float f = pow(0.35 / length(uv), 7.0);\n   \n    \n    float fxr = sin(uvc.x * uvc.y + iTime) * cos(uvc.y + uvc.x + iTime);\n    float fyr = cos(uvc.y * uvc.x + iTime) * tan(uvc.y * uvc.y);\n    \n    float ffr = length(vec2(sin(fxr * 3.0 + iTime * 0.15), fyr));\n    \n    float fxg = sin(uvc.x * uvc.y + iTime) * cos(uvc.y + uvc.x + iTime);\n    float fyg = cos(uvc.y * uvc.x + iTime) * tan(uvc.y * uvc.y);\n    \n    float ffg = length(vec2(cos(fxg * 3.0 + iTime * 0.25), fyg));\n    \n    float fxb = sin(uvc.x * uvc.y + iTime) * cos(uvc.y + uvc.x + iTime);\n    float fyb = cos(uvc.y * uvc.x + iTime) * tan(uvc.y * uvc.y);\n    \n    float ffb = length(vec2(tan(fxb * 3.0 + iTime * 0.5), fyb));\n    \n    float ffs = sin(length(uvc) * 2.0 + iTime) * 0.5 + 0.5;\n    \n    color.r = f * pow(ffr, 23.0);\n    color.g = f * pow(ffg, 7.0);\n    color.b = f * pow(ffb, 3.0);\n    \n    color *= (ffs * 0.5);\n \n    c_out = vec4(color, 1.0);\n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}