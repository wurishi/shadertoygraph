{"ver":"0.1","info":{"id":"wlVfWG","date":"1614991152","viewed":89,"name":"Circular plasma","username":"Chosen","description":"Hi guys! Few minutes and achieved what I wanted to. :-)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["circleplasma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 motionFunction (float i) {\n  float t = iTime;\n\n  return vec2(\n    (cos(t * .31 + i * 3.) + cos(t * .11 + i * 14.) + cos(t * .78 + i * 30.) + cos(t * .55 + i * 10.)) / 4.,\n    (cos(t * .13 + i * 33.) + cos(t * .66 + i * 38.) + cos(t * .42 + i * 83.) + cos(t * .9 + i * 29.)) / 4.\n  );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.x;\n    \n    float alias = 100. + 40. * motionFunction(7.).x;\n    uv = floor(uv * alias) / alias;\n    vec2 uv1 = uv + motionFunction(1.);\n    vec2 uv2 = uv + motionFunction(2.);\n    vec2 uv3 = uv + motionFunction(3.);\n    vec3 col1 = .5 + .5 * cos(length(uv1) * 20. + uv1.xyx + vec3(0, 2, 4));\n    vec3 col2 = .5 + .5 * cos(length(uv2) * 10. + uv2.xyx + vec3(0, 2, 4));\n    vec3 col3 = .5 + .5 * cos(length(uv3) * 10. + uv3.xyx + vec3(0, 2, 4));\n    vec3 col = col1 - col2 + col3;\n\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}