{"ver":"0.1","info":{"id":"stlXzN","date":"1625301460","viewed":238,"name":"foliage shadow with fake convolu","username":"FabriceNeyret2","description":"foliage shadowing is equivalent to DoF Boket : requires convolution with (solar) disk scaled with distance to floor.\nHere I approximate this with SDF to foliage mask. That I approximate with MIPmap of mask.\n( try uncommenting some foliage motion. WIP ).","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["sdf","convolution","penumbra","boket"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    float m = iMouse.y/R.y,\n          l = floor(2.*log2(R.y)),          // for jigsaw between min-max LOD\n          t = floor(l*fract(iTime/8.-.1));\n          t = min(t,l-t);\n          \n    m = .8;                                 // foliage threshold\n    t = 3.+log2(R.y/360.);                  // log2( distance to floor )\n    \n    float v = T(U, t )- (1.-m); \n    O = vec4( smoothstep(-4., 4., v*R.y/10. ) );  // -4..4 to reproduce soft disk\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n   \n    O.x = step( T(U,0.), .4 );                 // foliage mask \n    \n\n/**\n  { vec2 D = R/100.*cos(iTime*2.+vec2(0,11));\n    O.x = 1.-step( (1.-T(U,0.))*(1.-T(-U+D,0.)), .25 );  // motion: 2nd foliage layer\n  }\n/**/   \n\n/**\n  { vec2 D = R/40.*cos(iTime+vec2(0,11));\n    O.x = step( T(U,0.), .6 ) * step( T(-U+D,0.), .6 );  // motion: 2nd foliage layer\n  }\n/**/\n\n\n/**/\n   { vec2 D = R/5.*cos(iTime+vec2(0,11));    \n     O.x *= step( R.y/5., length(U-R/2.+D));   // occluder mask \n   }\n/**/    \n\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R         iResolution.xy\n#define T( U, l ) textureLod( iChannel0, (U)/R , l ).x","name":"Common","description":"","type":"common"}]}