{"ver":"0.1","info":{"id":"XfK3Dc","date":"1713801460","viewed":51,"name":"my first trees dont judge","username":"kraboviy_salat","description":"first project","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shader","trees"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\nfloat TaperBox( vec2 p, float wb, float wt, float yb, float yt, float blur) {\n    float m = S(-blur, blur, p.y-yb);\n    m *= S(blur, -blur, p.y-yt);\n    p.x = abs(p.x);\n    float w = mix(wb, wt, (p.y-yb) / (yt-yb));\n    m *= S(blur, -blur, p.x-w);\n    return m;\n}\n\nvec4 Tree(vec2 uv, vec3 col, float blur) {\n    \n    float m = TaperBox(uv, .03, .03, -.05, .25, blur); // trunk\n    m += TaperBox(uv, .2, .1, .25, .5, blur); // canopy 1\n    m += TaperBox(uv, .15, .05, .5, .75, blur); // canopy 2\n    m += TaperBox(uv, .1, .0, .75, 1., blur); // canopy 1\n\n    float shadow = TaperBox(uv-vec2(.2,0), .1, .5, .1, .25, blur);\n    shadow += TaperBox(uv+vec2(.25,0), .1, .5, .4, .5, blur);\n    shadow += TaperBox(uv-vec2(.2,0), .1, .5, .70, .75, blur);\n    \n    col -= shadow*.34;\n    //m = 1.;\n    return vec4(col, m);\n}\n\nfloat GetHeight(float x) {\n    return sin(x*.042)+sin(x)*.001+sin(x)*.015+sin(x)*.155+sin(x)*.05;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    uv.x += iTime*.1;\n    //uv.y += .5;\n    uv *= 5.;\n    vec4 col = vec4(.1, .5, .7, .5);\n    \n    float blur = 6./iResolution.y;//.006;6./iResolution.y;\n    \n    float id = floor(uv.x);\n    float n = fract(sin(id*231.125)*5234.51)*2.-1.;\n    float x = n*.3;\n    float y = GetHeight(uv.x);\n\n    col += S(blur, -blur, uv.y+y);  // ground\n\n    y = GetHeight(id+.5+x);\n\n    uv.x = fract(uv.x)-.5;\n    \n    vec4 tree = Tree((uv-vec2(x, -y))*vec2(1,1.+n*.2), vec3(0.5, .8, 0.5), blur);\n    \n    //col.rg = uv;\n    col = mix(col, tree, tree.a);\n\n    \n    float thickness = 1./iResolution.y;\n  //  if(abs(uv.x)<thickness) col.g = 1.;\n  //  if(abs(uv.y)<thickness) col.r = 1.;\n\n    fragColor = col;\n}\n","name":"Image","description":"","type":"image"}]}