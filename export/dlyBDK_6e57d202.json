{"ver":"0.1","info":{"id":"dlyBDK","date":"1702483878","viewed":47,"name":"Optimized Stars And Planets","username":"nr4","description":"got nerdsniped and optimized this: https://www.shadertoy.com/view/mtGfWG","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["nr4"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * Optimized Stars And Planets\n * Copyright (C) 2023 NR4 <nr4@z10.info>\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nconst float pi = 3.14159,\n    circleCount = 9.,\n    segmentAngle = 2. * pi / circleCount,\n    maxDepth = 5.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - .5 * iResolution.xy) / iResolution.y,\n        x = uv;\n    \n    float circleSize = .25,\n        d = length(x) - circleSize,\n        dotVelocity = .3;\n\n    for(float depth = 0.; depth < maxDepth; depth += 1.) {\n        // Determine coordinates\n        float p = atan(x.y, x.x),\n            dp = mod(p + (2. * mod(depth, 2.) - 1.) * dotVelocity * iTime, segmentAngle) - .5 * segmentAngle,\n            pj = p - dp;\n        \n        // Map down\n        x -= 1.5 * circleSize * vec2(cos(pj), sin(pj));\n        circleSize *= .25;\n        dotVelocity *= 2.;\n        \n        // Update distance function\n        d = min(d, length(x) - circleSize);\n    }\n    \n    fragColor = vec4(smoothstep(-1.5/iResolution.y, 1.5/iResolution.y, d));\n}","name":"Image","description":"","type":"image"}]}