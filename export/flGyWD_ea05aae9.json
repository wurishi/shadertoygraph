{"ver":"0.1","info":{"id":"flGyWD","date":"1661433890","viewed":161,"name":"Some Fun With a Ring","username":"tarnith","description":"Basic fun with some simple iteration","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circle","iteration","2dsdf"],"hasliked":0,"parentid":"-1","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle( vec2 p, vec2 offset, float r )\n{\n    return clamp((length(p-(offset)) - r)*2000.,0.,1.);\n}\nfloat sdRing( vec2 p, vec2 offset, float r )\n{\n    return sdCircle(p,offset,r)-sdCircle(p,offset,r+.005);\n}\n\nmat2 rot (float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \n    uv -= .5;\n    uv *= iResolution.xy/iResolution.yy;\n\n    float circle = 0.;\n\n    vec3 col = vec3(0.);\n    \n    for(int i = 0;i<200;i++){\n        circle += sdRing(uv*(sin(iTime)*.1-2.),vec2(cos(iTime*(float(i)*1e-2))*float(i)*5e-3,sin(iTime*(float(i)*.01))*.5),.2);\n        \n        col.r += circle*(float(i+100)*1e-4);\n        col.b += circle*(float(i+100)*1e-4);\n        col.g += circle*(float(i+100)*1e-4);\n            \n    }\n  \n    col /= 10.;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}