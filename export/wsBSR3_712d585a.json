{"ver":"0.1","info":{"id":"wsBSR3","date":"1554486488","viewed":212,"name":"Stereo","username":"daserge","description":"Stereo","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["stereo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Unity port: https://pastebin.com/SnbQdpbe\n// https://pastebin.com/Zkg6ixdH (Effect.cs)\n// Instructions:\n// 1) Create material based on this shader\n// 2) Attach Effect.cs script to main camera\n// 3) Select created material in the script reference\n// Port was made with https://github.com/smkplus/ShaderMan\n\nfloat scale=0.375;\nfloat ipdShift = 0.0;\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord )\n{\n    float dx = (0.5 - scale) / 2.0;\n    float dy = (1.0 - scale) / 2.0;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    vec3 col;\n    if (uv.x < dx + ipdShift  || uv.y < dy \n       || uv.x > 1.0 - dx - ipdShift || uv.y > 1.0 - dy\n       || (uv.x > dx + ipdShift + scale && uv.x < dx + scale + 2.0*dx - ipdShift) ) {\n        col = vec3(0.0, 0.0, 0.0);    \n        fragColor = vec4(col,1.0);\n        return;\n    }\n    \n    if (uv.x < 0.5) \n    \tuv.x = (uv.x - dx - ipdShift) * 1.0/scale;\n    else\n        uv.x = (uv.x - 0.5 - dx + ipdShift) * 1.0/scale;\n    \n    uv.y = (uv.y - dy) * 1.0/scale;\n\n    col = vec3(cos(uv.x), sin(uv.y), - cos(uv.x));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}