{"ver":"0.1","info":{"id":"7tjSzG","date":"1627977506","viewed":65,"name":"FS Inject Pressure Tool","username":"GabrieleGiuseppini","description":"Experiments for visual feedback of the Inject Pressure tool.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["floatingsandbox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 _uv = fragCoord/iResolution.xy;\n    vec2 haloSpacePosition = (_uv - vec2(.5)) * 2.;\n    haloSpacePosition.x *= (iResolution.x / iResolution.y); // obey aspect ratio\n\n    float paramTime = float(iTime) / 1.;\n        \n    vec4 cBase = texture(iChannel0, haloSpacePosition);\n    fragColor = cBase;\n    \n    ////////////////////////////////////////////////////////////////\n    \n    #define T 1.\n    #define RADIUS 1.\n    #define THICKNESS .4\n\n    // Where in a half period\n    float ht = fract(paramTime / (T / 2.));\n    \n    float radius1 = (RADIUS / 2.) * ht;\n    float radius2 = RADIUS / 2. + (RADIUS / 2.) * ht;\n    \n    float alpha1 = 1.;\n    float alpha2 = 1. - ht;\n    \n    //\n    // Render\n    //\n        \n    float d = length(haloSpacePosition);\n    \n    float w1 = \n        smoothstep(radius1 - THICKNESS / 2., radius1, d)\n        - smoothstep(radius1, radius1 + THICKNESS / 2., d);\n\n    float w2 = \n        smoothstep(radius2 - THICKNESS / 2., radius2, d)\n        - smoothstep(radius2, radius2 + THICKNESS / 2., d);\n\n    float whiteDepth = max(w1 * alpha1, w2 * alpha2) / 2.;\n    \n    vec4 c1 = vec4(whiteDepth, whiteDepth, whiteDepth, 1.); // white\n    \n    ////////////////////////////////////////////////////////////////\n    \n    fragColor = c1 * c1 + cBase; // GL_SRC_COLOR, GL_ONE, GL_FUNC_ADD\n    //fragColor = mix(cBase, vec4(1.), whiteDepth);\n}","name":"Image","description":"","type":"image"}]}