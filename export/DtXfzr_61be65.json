{"ver":"0.1","info":{"id":"DtXfzr","date":"1692499279","viewed":67,"name":"radial gradient progress bar","username":"trtam","description":"For MTA","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["radial","gradient","progressbar","rounded","mta"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\n// source: https://iquilezles.org/articles/distfunctions2d/\nfloat sdCircle(in vec2 position, in float radius) {\n    return length(position) - radius;\n}\n\nmat2 rotate(in float rot) {\n    float c = cos(rot), s = sin(rot);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = ((2.0 * fragCoord) - iResolution.xy) / iResolution.y;\n    float rot = cos(iTime / 1.5) * PI * 2.0;\n    uv *= rotate(rot);\n    vec3 color = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n    float radius = 0.5;\n    float thick = 0.025;\n    vec3 result = color;\n   \n    float angleStart = atan(uv.x, uv.y) + PI;\n    float t = 0.5 + (cos(iTime) * 0.5);\n    float progress = t;\n    float angleEnd = (PI * 2.0) * progress;\n    float fade = PI * 0.25;\n    float gradient = angleStart / (PI * fade);\n    result *= smoothstep(0.0, 1.0, gradient);\n    \n    float d = sdCircle(uv, radius - thick);\n    float a = smoothstep(fwidth(d), 0.0, abs(d) - thick) * step(angleStart, angleEnd);\n    \n    //d = sdCircle(uv + vec2(0.0, radius - thick), thick);\n    //a = max(a, smoothstep(fwidth(d), 0.0, d));\n    //d = sdCircle(uv * -rotate(angleEnd) - vec2(0.0, radius - thick), thick);\n    //a = max(a, smoothstep(fwidth(d), 0.0, d));\n    result *= a;\n    \n    fragColor = vec4(result, 1.0);\n}","name":"Image","description":"","type":"image"}]}