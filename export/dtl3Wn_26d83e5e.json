{"ver":"0.1","info":{"id":"dtl3Wn","date":"1671622638","viewed":96,"name":"simple blur test","username":"backlly","description":"Too many loops cause my app to become very slow. I have been looking for an efficient calculation method.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec4 blur_1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec2 off1 = vec2(1.3333333333333333) * direction;\n  vec4 color = texture(image, uv) * 0.29411764705882354;\n  color += texture(image, uv + (off1 / resolution)) * 0.35294117647058826;\n  color += texture(image, uv - (off1 / resolution)) * 0.35294117647058826;\n  return color; \n}\n\nvec4 blur_2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec2 off1 = vec2(1.3846153846) * direction;\n  vec2 off2 = vec2(3.2307692308) * direction;\n  vec4 color = texture(image, uv) * 0.2270270270;\n  color += texture(image, uv + (off1 / resolution)) * 0.3162162162;\n  color += texture(image, uv - (off1 / resolution)) * 0.3162162162;\n  color += texture(image, uv + (off2 / resolution)) * 0.0702702703;\n  color += texture(image, uv - (off2 / resolution)) * 0.0702702703;\n  return color;\n}\n\nvec4 blur_3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec2 off1 = vec2(1.411764705882353) * direction;\n  vec2 off2 = vec2(3.2941176470588234) * direction;\n  vec2 off3 = vec2(5.176470588235294) * direction;\n  vec4 color = texture(image, uv) * 0.1964825501511404;\n  color += texture(image, uv + (off1 / resolution)) * 0.2969069646728344;\n  color += texture(image, uv - (off1 / resolution)) * 0.2969069646728344;\n  color += texture(image, uv + (off2 / resolution)) * 0.09447039785044732;\n  color += texture(image, uv - (off2 / resolution)) * 0.09447039785044732;\n  color += texture(image, uv + (off3 / resolution)) * 0.010381362401148057;\n  color += texture(image, uv - (off3 / resolution)) * 0.010381362401148057;\n  return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  fragColor = blur_3(iChannel0, uv, iResolution.xy, vec2(2.0,1.5));\n}\n","name":"Image","description":"","type":"image"}]}