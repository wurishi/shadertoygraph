{"ver":"0.1","info":{"id":"Xcjyzz","date":"1721854072","viewed":163,"name":"Loopless Recursion [151]","username":"Xor","description":"I've seen some examples with a recursive screen loop effect (shadertoy.com/view/MfBczR) and I wanted to try without using a for-loop or multiple texture samples.","likes":20,"published":1,"flags":0,"usePreview":1,"tags":["screen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    \"Loopless Recursion\" by @XorDev\n\n    I've seen some examples with a recursive screen loop effect (shadertoy.com/view/MfBczR)\n    and I wanted to try without using a for-loop or multiple texture samples.\n\n    This method only handles scaling, so no rotation, but I imagine rotation could be possible within reasonable bounds\n    The idea here is to map the coordinates to a logarithmic scale, cut it into steps and then map it back to linear scale.\n*/\n\nvoid mainImage(out vec4 O, vec2 I)\n{\n    //Center screen uv coordinates (-0.5 to +0.5)\n    vec2 u = I/iResolution.xy-.5,\n    //Oscillate the scaling factor\n    s = exp(sin(iTime+u-u)*2.);\n\n    //Sample texture\n    O = texture(iChannel0,\n        //u*u for absolute coordinates (countered by multiplying the log by 0.5)\n        //max: Use the longest axis for the box boundaries and scale it.\n        //ceil: Break coordinates into steps\n        //exp: Remap back to linear scale and center it to the 0 to 1 range.\n        u*.5/exp(ceil(s*log(max(u*=u,u.yx))*.5)/s)+.5);\n}","name":"Image","description":"","type":"image"}]}