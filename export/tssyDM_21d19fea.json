{"ver":"0.1","info":{"id":"tssyDM","date":"1584959730","viewed":127,"name":"PicsArt Shader 2 pseudo HDR","username":"Valdex","description":"PicsArt Shader 2 pseudo HDR","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["hdredgedetectglow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 iRenderScale = vec2(1.,1.);\n\n\nvec4 BlurColor (in vec2 Coord, in sampler2D Tex, in float MipBias)\n{\n\tvec2 TexelSize = MipBias/iChannelResolution[0].xy;\n    //    o -= o - length(fwidth(texture(iChannel0,u/iResolution.xy)))*3.;\n    vec4  Color = vec4(0.0);//texture(Tex, Coord, MipBias);\n    Color += length(fwidth(texture(Tex, Coord + vec2(TexelSize.x,0.0), MipBias)))*3.;    \t\n    Color += length(fwidth(texture(Tex, Coord + vec2(-TexelSize.x,0.0), MipBias)))*3.;    \t\n    Color += length(fwidth(texture(Tex, Coord + vec2(0.0,TexelSize.y), MipBias)))*3.;    \t\n    Color += length(fwidth(texture(Tex, Coord + vec2(0.0,-TexelSize.y), MipBias)))*3.;    \t\n    Color += length(fwidth(texture(Tex, Coord + vec2(TexelSize.x,TexelSize.y), MipBias)))*3.;    \t\n    Color += length(fwidth(texture(Tex, Coord + vec2(-TexelSize.x,TexelSize.y), MipBias)))*3.;    \t\n    Color += length(fwidth(texture(Tex, Coord + vec2(TexelSize.x,-TexelSize.y), MipBias)))*3.;    \t\n    Color += length(fwidth(texture(Tex, Coord + vec2(-TexelSize.x,-TexelSize.y), MipBias)))*3.;    \n\n    return Color/8.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \nfloat Threshold = 0.;\nfloat Intensity = 2.;\nfloat BlurSize = iMouse.y/10.;\n    \n\tvec2 uv = fragCoord.xy/iResolution.xy;\n    \n    vec4 Color = texture(iChannel0, uv);\n    \n    vec4 Highlight = clamp((BlurColor(uv, iChannel0, log2(BlurSize*iRenderScale.x))*Intensity)-Threshold,0.0,1.0)*1.0/(1.0-Threshold);\n    \n    vec4 DarkBlur = vec4(Highlight.r * -0.7, Highlight.r * -0.7, Highlight.r * -0.7, 1.0);\n    \n    //fragColor = ((Color*DarkBlur) * 1.0 + Color * (1.0 - .0));; //Screen Blend Mode\n    //fragColor = 1.0-(1.0-Color)*(1.0-Highlight*Intensity); //Screen Blend Mode\n\tfragColor = Color + vec4(Highlight.r, Highlight.g/2., Highlight.b/2., Highlight.a);\n}","name":"Image","description":"","type":"image"}]}