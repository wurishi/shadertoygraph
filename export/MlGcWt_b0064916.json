{"ver":"0.1","info":{"id":"MlGcWt","date":"1538093451","viewed":165,"name":"raytrace analytical","username":"GraphicsFromScratch","description":"raytrace","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raytrace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T_MAX 10e7\n\nfloat intersect(in vec3 ro, in vec3 rd, out int matid)\n{\n    float t = T_MAX;\n    matid = -1;\n    \n\t//NOTE(chen): the plane intersection\n    {\n        vec3 plane_n = vec3(0, 1, 0);\n        float denom = dot(rd, plane_n);\n        if (denom != 0.0)\n        {\n            float plane_t = -dot(ro, plane_n) / denom;\n            \n            if (plane_t > 0.0 && plane_t < t)\n            {\n                t = plane_t;\n                matid = 0;\n            }\n        }\n    }\n    \n    //NOTE(chen): the sphere intersection\n    {\n        float r = 1.0;\n        float sqrt_term = pow(2.0 * dot(ro, rd), 2.0) - 4.0 * dot(rd, rd) * (dot(ro, ro) - r*r);\n        if (sqrt_term >= 0.0)\n        {\n            float sphere_t1 = (-2.0 * dot(ro, rd) + sqrt(sqrt_term)) / (2.0 * dot(rd, rd));\n            float sphere_t2 = (-2.0 * dot(ro, rd) - sqrt(sqrt_term)) / (2.0 * dot(rd, rd));\n            float sphere_t = min(sphere_t1, sphere_t2);\n            \n            if (sphere_t > 0.0 && sphere_t < t)\n            {\n                t = sphere_t;\n                matid = 1;\n            }\n        }\n    }\n    \n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.0 * fragCoord / iResolution.xy - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 ro = vec3(0, 1, -3);\n    vec3 at = vec3(0, 0, 0);\n    vec3 cam_z = normalize(at - ro);\n    vec3 cam_x = normalize(cross(vec3(0,1,0), cam_z));\n    vec3 cam_y = cross(cam_z, cam_x);\n    vec3 rd = normalize(uv.x * cam_x + uv.y * cam_y + 1.73 * cam_z);\n\n    vec3 col = vec3(0);\n    int matid = -1;\n    float t = intersect(ro, rd, matid);\n    if (t > 0.0 && t < T_MAX)\n    {\n        if (matid == 0)\n        {\n        \tcol = vec3(1);\n        }\n        else\n        {\n            col = vec3(1, 0, 0);\n        }\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}