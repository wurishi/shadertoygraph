{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Iain Melvin 2014\n\n//#define REFLECT \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // create pixel coordinates\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n#ifdef REFLECT\n\tuv=abs(2.0*(uv-0.5));\n#endif\n\t\n    // second texture row is the sound wave\n\t//float wave = texture( iChannel0, vec2(uv.x,0.75) ).x;\n    float wave1 = texture(iChannel0, vec2(uv.x, 0.75)).x;\n    float wave2 = texture(iChannel0, vec2(uv.y, 0.75)).x;\n    float wave= wave1 * wave2;\n\t\n    float a = abs(wave-uv.y)*1.2;\n\t// output final color\n   float s = 10.1;\n\tfragColor = vec4( sin(a*s*2.5), sin(a*s*2.0),sin(a*s*1.0),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sjSRR","date":"1408383847","viewed":222,"name":"wave multiply distance","username":"pixelbeast","description":"Matrix cross product of wave and use distance to uv.y ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["wavemusicvizsimple"],"hasliked":0,"parentid":"","parentname":""}}