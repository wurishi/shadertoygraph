{"ver":"0.1","info":{"id":"cst3RM","date":"1677083918","viewed":142,"name":"Splats Bokeh Filter","username":"Poisson","description":"A simple filter that I created.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi","blur","filter","color","dof","bokeh","worley","blending","gaussian","disk","splat","bright","dark"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SIZE (.5+.5*sin(iTime))*.04 // size of the splats\n\n// type 0 -> bright\n// type 1 -> dark\nvec4 splats(sampler2D tex, vec2 p, int type) {\n    const int N = 12; // quality\n    vec4 res = vec4(type*2-1); // final result\n    \n    for (int i=-N; i<=N; i++)\n    for (int j=-N; j<=N; j++) {\n        vec2 off = vec2(i,j)/float(N); // sampling offset\n        // texture with offset\n        vec4 tmp = texture(tex, p + off*SIZE*vec2(iResolution.y/iResolution.x,1));\n        \n        if (dot(off,off)<1.) { // inside disk (for circular bokehs)\n            if (type==0)\n                res = max(res, tmp); // bright\n            else\n                res = min(res, tmp); // dark\n        }\n    }\n    // output\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coordinates\n    vec2 p = fragCoord/iResolution.xy;\n\n    int type = int(step(p.x,.5)); // filter type\n    vec3 col = splats(iChannel0, p, type).rgb;\n        \n    col = 1.75*col/(1.+col); // tonemapping\n\n    // output\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}