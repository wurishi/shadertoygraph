{"ver":"0.1","info":{"id":"DtVSzV","date":"1686219383","viewed":92,"name":"Bouncing Ball!","username":"Starfish","description":"White ball repeatedly bouncing from left to right.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //small zoom\n    uv *= vec2(2.0, 2.0);\n    \n    \n    //calculate the ball coordinates at a given time\n    //modulo is used to reset the ball position once the screen end is reached\n    //a small offset is added to the sin result, since the ball would sink halfway into the screen otherwise\n    vec2 ballPos = vec2(mod(iTime, 3.5), abs(sin(iTime)) + 0.05);\n\n    //set a pixel to white when within a certain distance of the ball coordinates\n    vec3 col = vec3(0.0);\n    if(distance(uv, ballPos) < 0.1){\n        col = vec3(1.0);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}