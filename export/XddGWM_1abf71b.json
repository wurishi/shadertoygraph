{"ver":"0.1","info":{"id":"XddGWM","date":"1450058127","viewed":184,"name":"Julia sets?? again???","username":"RenoM","description":"blinking julia sets","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["julia2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define T iTime\n#define LIM 150.\n#define SCALE 10.\n\nvec2 hash22(vec2 p)\n{\n\tp = fract(p * vec2(443.8975,397.2973));\n    return fract(p + dot(p, p.yx + 19.19));\n}\n\nvec3 hash32(vec2 p)\n{\n\tvec3 p3 = fract(p.xyx * vec3(443.8975,397.2973, 491.1871));\n    p3 += dot(p3, p3.yxz+19.19);\n    return fract(p3*p3.zzx + p3.zyx*p3.yxy);\n}\n\n\nvec3 col(float i, vec3 c)\n{\n    i = 2. * mod(i, LIM) / LIM;\n    return c * smoothstep(.0, 1., fract(i*sign(1.-i)));\n}\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    vec2 R = iResolution.xy,\n         p = SCALE * U / R,\n         u = vec2(R.x/R.y, 1) * (2.2 * fract(p) - 1.1),\n         f = 2. * hash22((p = floor(++p))) - 1.,\n         s = f * vec2(cos(T), sin(T));\n    float j;\n    \n    for(float i = .0; i <= LIM; i++)\n    {\n        j = i;\n        if(dot(u, u) > 4.) break;\n        u = mat2(u,-u.y,u.x)*u + s;\n    }\n    \n    O.xyz = col(j, hash32(p));\n}","name":"","description":"","type":"image"}]}