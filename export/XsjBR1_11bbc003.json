{"ver":"0.1","info":{"id":"XsjBR1","date":"1499510697","viewed":741,"name":"lightning arcs visualizer","username":"public_int_i","description":"lightning soundcloud visualizer","likes":1,"published":3,"flags":96,"usePreview":0,"tags":["2d","visualizer","lightning","soundcloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Ethan Alexander Shulman 2017\n//Image - Display spectogram\n\n\n#define SIZE 20.\n#define TIME 100.\n\n\n\n#define draw(dc) c = mix(dc,c,clamp(d/pixelSize, 0., 1.))\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord/iResolution.xy;\n    uv.y = 1.-uv.y;\n    float pixelSize = length(50./iResolution.xy)/min(1.,uv.y*4.);\n    \n    vec3 c = vec3(0.);\n    \n    float sid = floor(uv.x*SIZE),\n        snd = texture(iChannel0, vec2((sid/SIZE)*(SIZE/iResolution.x),uv.y*(TIME/iResolution.y))).x,\n          rx = (uv.x*SIZE-(sid+.5))+sin(snd*8.)*.4,\n          d = abs(rx)-.04;\n    draw(min(vec3(1.+rx*50.,.3,1.-rx*50.),1.)*snd);\n    \n    \n    fragColor = vec4(c,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"lslSRX","filepath":"https://soundcloud.com/rich-rd-hanyu/acdc-thunderstruck","previewfilepath":"https://soundcloud.com/rich-rd-hanyu/acdc-thunderstruck","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Ethan Alexander Shulman 2017\n//Buf A - Spectogram\n\n#define SIZE 20.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (fragCoord.x > SIZE+1.) return;\n    if (fragCoord.y < 1.) fragColor = pow(texture(iChannel1, fragCoord/vec2(SIZE,1)),vec4(2.2));\n    else fragColor = texture(iChannel0, (fragCoord-vec2(0.,1.))/iResolution.xy);\n}","name":"Buf A","description":"","type":"buffer"}]}