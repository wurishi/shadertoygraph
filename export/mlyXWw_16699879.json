{"ver":"0.1","info":{"id":"mlyXWw","date":"1686130597","viewed":127,"name":"Spiral rainbow","username":"ivana888kitsune","description":"rainbow spiral for wealth","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["spiralcolorful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Parametry spiralnego efektu\n    float speed = 0.5;       // Prędkość obrotu spirali\n    float frequency = 5.0;   // Częstotliwość zmiany kolorów\n    float amplitude = 0.3;   // Amplituda zmiany kolorów\n\n    // Normalizacja współrzędnych pikseli do zakresu od -1 do 1\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n    // Oblicz kąt dla każdego piksela\n    float angle = atan(uv.y, uv.x);\n\n    // Oblicz promień dla każdego piksela\n    float radius = length(uv);\n\n    // Oblicz przesunięcie czasowe dla efektu animacji\n    float timeOffset = iTime * speed;\n\n    // Oblicz zmianę kolorów na podstawie kąta, promienia i czasu\n    vec3 color = vec3(\n        0.5 + 0.5 * sin(angle * frequency + timeOffset),\n        0.5 + 0.5 * sin(radius * frequency + timeOffset),\n        0.5 + 0.5 * sin((angle + radius) * frequency + timeOffset)\n    );\n\n    // Dodaj efekt zmiany kolorów do fragColor\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}