{"ver":"0.1","info":{"id":"7dffz8","date":"1644478714","viewed":260,"name":"averaging","username":"Carandiru","description":"testing out averaging frames to obtain an anti-aliased or blurred result.\nleft = ~anti-aliased\nright = blurred","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["antialiasing","average","jitter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// reference:\n// https://www.gsn-lib.org/apps/raytracing/index.php?name=example_antialiasing\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 color = textureLod(iChannel0, uv, 0.0f).rgb;\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// reference:\n// https://www.gsn-lib.org/apps/raytracing/index.php?name=example_antialiasing\n\n#define SCALAR 1.0f  // 1.0f = ~antialiasing, > 1.0f = blurring\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float frame = float(iFrame);\n    \n    vec2 offset = textureLod(iChannel1, (fragCoord + vec2(frame * 256.0f,frame * fract(iTime))) / 1024.0f, 0.0f).rg;\n    \n    //fragColor = vec4(offset,0.0,1.0);\n    //return;\n    \n    offset = offset * 2.0f - 1.0f;\n    \n    float scale = SCALAR;\n    \n    if (uv.x < 0.25f) {\n        scale *= 1.0f;\n    }\n    else if (uv.x < 0.5f) {\n        scale *= 4.0f;\n    }\n    else if (uv.x < 0.75f) {\n        scale *= 8.0f;\n    }\n    else {\n        scale *= 16.0f;\n    }\n    \n    offset = offset * scale;\n                                            // zoom\n    vec3 color = textureLod(iChannel2, (uv * 0.25f * iResolution.xy + offset)/iResolution.xy, 0.0f).rgb;\n    \n    // here is the main averaging (continous)\n    // reference:\n    // https://www.gsn-lib.org/apps/raytracing/index.php?name=example_antialiasing\n    vec3 previousAverage = textureLod(iChannel0, uv, 0.0f).rgb;\n    \n    vec3 newAverage = (previousAverage.rgb * float(iFrame) + color) / float(iFrame + 1);\n    \n    fragColor = vec4(newAverage,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}