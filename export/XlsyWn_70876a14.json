{"ver":"0.1","info":{"id":"XlsyWn","date":"1504353361","viewed":253,"name":"Ginzburg-Landau Equation","username":"FlexMonkey","description":"The complex Ginzburg-Landau equation.\n\nBased on https://github.com/GollyGang/ready/blob/gh-pages/Patterns/Ginzburg-Landau/complex_Ginzburg-Landau.vti","likes":7,"published":1,"flags":48,"usePreview":0,"tags":["reactiondiffusioncellularautomata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tThe complex Ginzburg-Landau equation describes a vast variety of phenomena from nonlinear \n    waves to second-order phase transitions, from superconductivity, superfluidity, and \n    Bose-Einstein condensation to liquid crystals and strings in field theory\n\n\tBased on https://github.com/GollyGang/ready/blob/gh-pages/Patterns/Ginzburg-Landau/complex_Ginzburg-Landau.vti\n\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | September 2017\n*/\n\nconst float pi = 3.14159265359;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 rgb = smoothstep(0.0, 1.0, texture(iChannel0, fragCoord.xy / iResolution.xy).xyz); \n    \n    fragColor = vec4(abs(sin(rgb * 4.0 * pi)), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*\n\tThe complex Ginzburg-Landau equation describes a vast variety of phenomena from nonlinear \n    waves to second-order phase transitions, from superconductivity, superfluidity, and \n    Bose-Einstein condensation to liquid crystals and strings in field theory\n\n\tBased on https://github.com/GollyGang/ready/blob/gh-pages/Patterns/Ginzburg-Landau/complex_Ginzburg-Landau.vti\n\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | September 2017\n*/\n\nfloat delta = 2.75;\nfloat gamma = 0.45;\nfloat D_a = 0.7;\nfloat D_b = 1.25;\nfloat timestep = 0.025; \n\n// Keyboard reset taken from https://www.shadertoy.com/view/XtcGD2\nbool reset() {\n    return texture(iChannel3, vec2(32.5/256.0, 0.5) ).x > 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float alpha = 0.185 + (sin(iTime * 0.7) * 0.175);\n    float beta = 0.64 + (cos(iTime * 0.5) * 0.195);;\n    \n    vec2 coord = fragCoord.xy / iResolution.xy;\n    vec3 pixelSize = vec3(1.0 / iResolution.xy, 0.0); \n\n    vec3 p = texture(iChannel0, coord).xyz;\n\n    vec3 laplacian = vec3(texture(iChannel0, coord - pixelSize.zy) +\n                          texture(iChannel0, coord - pixelSize.xz) -\n                          4.0 * texture(iChannel0, coord) +\n                          texture(iChannel0, coord + pixelSize.xz) +\n                          texture(iChannel0, coord + pixelSize.zy));\n\n    float a = p.x;\n    float b = p.y;\n\n    float delta_a = D_a * laplacian.x + alpha*a - gamma*b + (-beta*a + delta*b)*(a*a+b*b);\n    float delta_b = D_b * laplacian.y + alpha*b + gamma*a + (-beta*b - delta*a)*(a*a+b*b);\n\n   \tvec2 result = vec2(a + delta_a * timestep, b + delta_b * timestep);\n\n    if(p.xyz == vec3(0) || reset()) {\n        fragColor = texture(iChannel1, coord) * sqrt(length(coord - 0.5));\n    } else {\n        fragColor = vec4(result.xyy, 1.0);\n    }\n    \n}","name":"Buf A","description":"","type":"buffer"}]}