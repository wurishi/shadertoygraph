{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"vec3 dither1(vec2 uv){\n    vec3 T=texture(iChannel0, uv).rgb;\n    float I=floor(length(T)+0.5)*.5;\n    vec3 TT = vec3(floor(T.r+.5)/2.+I,floor(T.g+.5)/2.+I,floor(T.b+.5)/2.+I);\n    if(length(T)>0.9)\n       return TT;\n    if(length(T)>0.7 && mod(uv.y*iResolution.y+uv.x*iResolution.x,4.)<1.)\n        return TT;\n    if(length(T)>0.5 && mod(uv.y*iResolution.y+uv.x*iResolution.x,8.)<1.)\n        return TT;\n    if(length(T)>0.3 && mod(uv.y*iResolution.y+uv.x*iResolution.x,16.)<1.)\n        return TT;\n    return vec3(0.);\n}\nvec3 dither2(vec2 uv){\n    vec3 T=texture(iChannel0, uv).rgb;\n    float I=floor(length(T)+0.5)*.5;\n    vec3 TT = vec3(floor(T.r+.5)/2.+I,floor(T.g+.5)/2.+I,floor(T.b+.5)/2.+I);\n    if(length(T)>0.9 && length(texture(iChannel0, uv+vec2(1./iResolution.xy)))>0.5)\n       return TT;\n    if(length(T)>0.8 && mod(uv.y*iResolution.y+uv.x*iResolution.x,2.)<1.)\n        return TT;\n    if(length(T)>0.7 && mod(uv.y*iResolution.y+uv.x*iResolution.x,5.)<1.)\n        return TT;\n    if(length(T)>0.6 && mod(uv.y*iResolution.y,4.)<1. && mod(uv.x*iResolution.x,4.)<1.)\n        return TT;\n    return vec3(0.);\n}\nvec3 dither3(vec2 uv){\n    vec3 T=texture(iChannel0, uv).rgb;\n    vec3 TT = vec3(1.);\n    if(length(T)>0.9 && length(texture(iChannel0, uv+vec2(1./iResolution.xy)))>0.5)\n       return TT;\n    if(length(T)>0.8 && mod(uv.y*iResolution.y+uv.x*iResolution.x,2.)<1.)\n        return TT;\n    if(length(T)>0.7 && mod(uv.y*iResolution.y+uv.x*iResolution.x,5.)<1.)\n        return TT;\n    if(length(T)>0.6 && mod(uv.y*iResolution.y,4.)<1. && mod(uv.x*iResolution.x,4.)<1.)\n        return TT;\n    return vec3(0.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float BPM=90./60.;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    //uv.x-=.5*iResolution.y/iResolution.x\n    uv.x*=iResolution.x/iResolution.y;\n    if(uv.x<0. || uv.x>1.) discard;\n    vec4 C = texture(iChannel0, uv);\n    float time = mod(iTime*BPM*.25,3.);\n    if(time<3.)\n        C.rgb=dither3(uv);\n    if(time<2.)\n        C.rgb=dither2(uv);\n    if(time<1.)\n        C.rgb=dither1(uv);\n\tfragColor = C;\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nvec2 mainSound( in int samp,float time){\n    float BPM=90./60.;\n    float T=mod(time*BPM,1.);\n    float drum = (sin(6.2831*55.0*time*(floor(rand(vec2(floor(T*2.*BPM),0.))*4.)*.5+1.))*exp(-4.0*T)*.7);\n    return vec2( drum+min(time*.01,1.)*sin(6.2831*110.0*time*((1.+mod(floor(time*BPM),2.)*.5)*mod(floor(time*BPM),4.)+floor(rand(vec2(floor(T*2.*BPM),0.))*floor(2.+time/16.))*.5+1.))*exp(-2.0*T)*.61 );\n}","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MlS3zz","date":"1426624252","viewed":1408,"name":"color filtering and music","username":"Branch","description":"color filtering and music","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["colorfilteringandmusic"],"hasliked":0,"parentid":"","parentname":""}}