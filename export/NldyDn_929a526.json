{"ver":"0.1","info":{"id":"NldyDn","date":"1659588630","viewed":270,"name":"anime zoom","username":"HalbFettKaese","description":"anime\nzoom\nanime\nzoooom","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["anime"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14\n\nconst float period = 20.;\n\nfloat hash11(float a, float s)\n{\n    return fract(53.156*sin(a*45.45 + s))-.5;\n}\n\nfloat noise(float a, float p, float s) {\n    float p1 = hash11(mod(floor(a), p), s);\n    float p2 = hash11(mod(floor(a)+1., p), s);\n    return smoothstep(0., 0.1, mix(p1, p2, smoothstep(0., 1., fract(a))) - 0.3);\n}\n\nfloat layeredNoise(float a, float s) {\n    return noise(a, period, s) + noise(a * 5., period * 5., s);\n}\n\nfloat zoom(vec2 uv) {\n    float a = atan(uv.x, uv.y) / PI;\n    \n    float value = layeredNoise(a * 10., floor(iTime * 12.)/12.);\n    \n    value -= 1. /  length(uv) * 0.9;\n    \n    value = clamp(value, 0.0, 1.0);\n    \n    float vignette = max(0.0, length(uv) - 1.);\n    \n    return clamp(value + vignette, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(fragCoord - iResolution.xy*.5)/iResolution.xy;\n    \n    uv *= 1. - iMouse.x/iResolution.x;\n    \n    float v = zoom(uv);\n\n    // Time varying pixel color\n    vec3 col = vec3(v);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}