{"ver":"0.1","info":{"id":"lcfyW7","date":"1721184761","viewed":119,"name":"Chuva de cubos","username":"Elsio","description":"ainda tentando entender","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","grid","rain","city","block","traversal"],"hasliked":0,"parentid":"McB3zh","parentname":"raymarching the grid neighbors"},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a)    mat2(cos(a + vec4(0, 11, 33, 0)))\n#define h21(a)    fract(sin(dot(a, vec2(453.2734, 255.4363))) * 994.3434)\n#define normal(p) normalize(map(p)-vec3(map(p-e.xyy),map(p-e.yxy),map(p-e.yyx)))\n#define INIT      vec2 r = iResolution.xy, e = vec2(.001, 0); u = vec2(u - .5 * r) / r.y;\n#define far 60.\n\nvec3 gD, cor;\nfloat id;\n\nfloat sBoxs(vec3 p){\n    float k = 10.;\n    \n    p.xz = mod(p.xz, 1.) - .5;\n    p = pow(abs(p), vec3(k));\n    return pow(p.x + p.y + p.z, 1./k);\n}\n\nfloat Grid(vec3 p, vec3 D) {\n    vec3 m = (sign(D) * .5 + .5 - fract(p)) / D;\n    return min(m.x, min(m.y, m.z));\n}\n\nfloat map(vec3 p) {\n    float d, grid, t = iTime;\n    vec3 m, q;\n    \n    // wave\n    p += vec3(\n             (floor(p.z) + t) * 3., \n             sin(length((p.xz)) * .1 + t), 0\n         );\n    \n    t = (t + h21(floor(p.xz)) * 200.) * .015;\n\n    float scl, \n          tscl = 2000.,\n          le = p.y + fract(t);\n    \n    q = p;\n    id = floor(t);\n    \n    if(le < 0.) \n        id += floor(le),\n        q.y = fract(le) - .5;\n\n    else\n        scl = mix(tscl, 1., fract(t)),\n        q.y = mod(le, tscl) - scl/2.;\n    \n    \n    d = max(p.y + fract(t), .1);\n    \n    d = min(d, sBoxs(q) - .49);\n    \n    d = max(d, -p.z);\n    d = max(d, -p.y - 4.);\n    \n    d = min(d, Grid(p, gD) + .01);\n    return d;\n}\n\n\nvoid mainImage(out vec4 o, vec2 u) {\n    \n    INIT\n    \n    float i, d, j, s, t = iTime;\n    vec3 N, L, col,\n         p = vec3(0, 5, -1), \n         D = normalize(vec3(u, 1));\n    \n    D.zy *= rot(cos(t * .3) * .3 + .5);\n    D.zx *= rot(sin(t * .4) * .3);    \n    gD = D;\n    \n    s = 1.;\n    while(j++ < 140. && s > .001 && d < far) \n        s = map(p),\n        p += s * D,\n        d += s;\n\n    col = texture(iChannel0, D).yyy +  .2;\n    \n    if(d < far)\n        N = normal(p), \n        L = normalize(vec3(1, 3, -2) - D), \n        \n        id = mod(id, 3.),\n        cor = id == 1. ? vec3(0, .3, 1) : id== 2. ? vec3(0) : vec3(1),\n\n        col = cor * (.8 * max(0., dot(L, N)) + .2) * .8,  // diff\n        col += pow(max(0., dot(L, N)), 10.) * .4;         // spec\n    \n    o.rgb =  pow(col, vec3(.45));                         // gama  \n}\n\n\n/*\n thanks to @Hyeve\n https://www.shadertoy.com/view/NdV3Dw\n\n @tater\n https://www.shadertoy.com/view/fldXWS\n\n*/","name":"Image","description":"","type":"image"}]}