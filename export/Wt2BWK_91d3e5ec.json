{"ver":"0.1","info":{"id":"Wt2BWK","date":"1599866609","viewed":308,"name":"Particle Experiment 10","username":"aiekick","description":"Particle Experiment 10","likes":9,"published":3,"flags":32,"usePreview":0,"tags":["experiment","particle","10"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Stephane Cuillerdier - Aiekick/2021\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 pixelCoord )\n{\n    vec2 size = iResolution.xy;\n    vec2 uv = pixelCoord / size;\n\t\n    for(int x=-AA;x<AA;x++)\n\tfor(int y=-AA;y<AA;y++)\n\t{\n\t\tfloat e = 1.0 / size.y;\n\t\tvec2 uv = (pixelCoord + vec2(x,y) / float(AA)) / size;\n\t\tfloat f = texture(backBuffer, uv).x;\n\t\tfloat fx = (f-texture(backBuffer, uv + vec2(e,0.0)).x)/e;\n\t\tfloat fy = (f-texture(backBuffer, uv + vec2(0.0,e)).x)/e;\n\t\tvec3 n = normalize(vec3(0,0,1) - vec3(fx,fy,0.0));\n\t\t\n\t\tfloat diff = max(dot(vec3(0,0,1), n), 0.0);\n\t\tfloat spec = pow(max(dot(lightDirection, reflect(vec3(0,0,1),n)), 0.0), specularPower);\n\t\t\n        vec3 back = texture(backBuffer, uv).rgb;\n        vec3 front = lightDiffuse * diff + lightSpecular * spec;\n        \n\t\tfragColor.rgb += back * (1.0-lightMixing) + front * lightMixing;\n\t}\n\tfragColor /= float(AA * AA * 4);\n    fragColor *= 1.5;\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Created by Stephane Cuillerdier - Aiekick/2021\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 pixelCoord )\n{\n    float time = iTime;\n    vec2 size = iResolution.xy;\n    \n    vec2 uvc = (pixelCoord * 2.0 - size)/min(size.x, size.y);\n\t\n    float speedAngle = mix(0.0, 0.4, cos(mod(time * 0.01, 6.28318)) * 0.5 + 0.5);\n    \n    vec2 t = time * vec2(maxSpeedAngle, speedRadius);\n    \n\tfloat angleStep = 6.28318 / float(count);\n\tfloat m = 0.0;\n\tfor (int i=0;i<count;i++)\n\t{\n        float fi = float(i);\n\t\tfloat a = mod(t.x + angleStep * fi, 6.28318);\n\t\tfloat rad = radius.x + radius.y * sin(mod(t.y + delay * fi, 6.28318));\n\t\tvec2 d = vec2(cos(a), sin(a)) * rad;\n\t\tm += ballSize / (dot(uvc-d,uvc-d) + ballMin);\n\t}\n    \n    vec3 back = texture(backBuffer, gl_FragCoord.xy / size).rgb;\n    vec3 front = m * color;\n    \n    fragColor.rgb = front * blur + back * (1.0 - blur);\n    fragColor.rgb += smoothstep(back, back + 0.01, aura) * 0.01;\n   \n    fragColor.a = 1.0;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"// Created by Stephane Cuillerdier - Aiekick/2021\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nconst vec3 color = vec3(0.1,0.5,0.4); // particle color\nconst vec3 aura = vec3(0.8,0.2,0.5); // aura color\nconst vec3 lightDiffuse = vec3(0.8,0.2,0.8); // \nconst vec3 lightSpecular = vec3(0.1,0.5,0.4); // \nconst vec3 lightDirection = vec3(-0.6);\nconst float specularPower = 8.0;\nconst float lightMixing = 0.6;\n\nconst int count = 20;\nconst float delay = 0.3;\n\nconst vec2 radius = vec2(0.5,0.3);\nconst float speedRadius = 1.5;\nconst float maxSpeedAngle = 0.4;\n\nconst float blur = 0.04;\n\nconst float ballSize = 0.002;\nconst float ballMin = 0.00001;\n\nconst int AA = 1;\n\n#define backBuffer iChannel0\t","name":"Common","description":"","type":"common"}]}