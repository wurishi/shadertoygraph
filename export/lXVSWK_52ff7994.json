{"ver":"0.1","info":{"id":"lXVSWK","date":"1720526634","viewed":40,"name":"render julia set (hw6)","username":"zemi","description":"a small modification","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","render"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int iters = 150;\n\nint fractal(vec2 p, vec2 point) {\n\tvec2 so = (-1.0 + 2.0 * point) * 0.4;\n\tvec2 seed = vec2(0.098386255 + so.x, 0.6387662 + so.y);\n\t\n\tfor (int i = 0; i < iters; i++) {\n\t\t\n\t\tif (length(p) > 121.0) {\n\t\t\treturn i;\n\t\t}\n\t\tvec2 r = p;\n\t\tp = vec2(p.x * p.x - p.y * p.y, 4.0 * p.x * p.y);\n\t\tp = vec2(p.x * r.x - p.y * r.y + seed.x, r.x * p.y + p.x * r.y + seed.y);\n\t}\n\t\n\treturn 0;\t\n}\n\nvec3 color(int i) {\n\tfloat f = float(i) / float(iters) * 2.0;\n\tf = f * f * 2.0;\n\treturn vec3(sin(f * 2.0), sin(f * 3.0), abs(sin(f * 7.0)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 mouse = vec2(iMouse.x / iResolution.x, iMouse.y / iResolution.y);\n    \n    vec2 position = 3.0 * (-0.5 + fragCoord.xy / iResolution.xy);\n\tposition.x *= iResolution.x / iResolution.y;\n    \n    vec2 iFC = vec2(iResolution.x - fragCoord.x, iResolution.y - fragCoord.y);    \n    vec2 pos2 = 2.0 * (-0.5 + iFC.xy / iResolution.xy);\n    pos2.x *= iResolution.x / iResolution.y;\n    \n    float pulse = 0.5 + sin(iTime * 0.1) * 1.8;\n\n    \n    float rotateSpeed = sin(iTime * 0.05) * 0.1; \n    float angle = iTime * rotateSpeed*0.5;\n\n    \n    mat2 rotation = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    position = rotation * position;\n    pos2 = rotation * pos2;\n\n    vec3 invFract = color(fractal(pos2, vec2(0.55 + sin(iTime / 3.0 + 0.5) / 2.0, pulse * 2.0)));\n    \n    vec3 fract4 = color(fractal(position / 1.6, vec2(0.6 + cos(iTime / 2.0 + 0.5) / 2.0, pulse * 0.8)));\n\n    vec3 c = color(fractal(position, vec2(0.5 + sin(iTime / 3.0) / 2.0, pulse)));\n    \n    vec4 fract01 = vec4(c, 1.0);\n    vec4 salida;\n    salida = fract01 + vec4(invFract, 0.6) + vec4(fract4, 0.3);\n\tfragColor = salida;\n}\n","name":"Image","description":"","type":"image"}]}