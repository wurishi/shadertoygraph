{"ver":"0.1","info":{"id":"4s3SWj","date":"1461391816","viewed":124,"name":"AnyQuad_Cube","username":"yafacex","description":"learning field distance","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//You'd better use seperate member(p0,p1....) in stead of array(p[4]) for constructor convenience\nstruct quad\n{\n\tvec3 p0,p1,p2,p3;\t\n};\nstruct cube\n{\n\tquad q0,q1,q2,q3,q4,q5;\t\n};\ncube genCube(vec3 p0,float w,float h,float l){\n\tfloat w2 = w*.5,h2 = h*.5,l2 = l*.5;\n\tvec3 ftl = p0 - vec3(-w2,-h2,l2);\n\tvec3 ftr = p0 - vec3(w2,-h2,l2);\n\tvec3 fbl = p0 - vec3(-w2,h2,l2);\n\tvec3 fbr = p0 - vec3(w2,h2,l2);\n\tvec3 btl = p0 - vec3(-w2,-h2,-l2);\n\tvec3 btr = p0 - vec3(w2,-h2,-l2);\n\tvec3 bbl = p0 - vec3(-w2,h2,-l2);\n\tvec3 bbr = p0 - vec3(w2,h2,-l2);\n\treturn cube(\n\t\tquad(ftl,ftr,fbr,fbl),\n\t\tquad(ftr,btr,bbr,fbr),\n\t\tquad(btr,btl,bbl,bbr),\n\t\tquad(btl,ftl,fbl,bbl),\n\t\tquad(ftl,btl,btr,ftr),\n\t\tquad(fbl,bbl,bbr,fbr) );\n}\nquad rotateXq(quad q,float a){\n\tmat3 m = mat3(1,0,0,\n\t\t\t\t0,cos(a),sin(a),\n\t\t\t\t0,-sin(a),cos(a));\n\tq.p0*=m;\n\tq.p1*=m;\n\tq.p2*=m;\n\tq.p3*=m;\n\treturn q;\n}\nquad rotateYq(quad q,float a){\n\tmat3 m = mat3(cos(a),0,sin(a),\n\t\t\t\t0,1,0,\n\t\t\t\t-sin(a),0,cos(a));\n\tq.p0*=m;\n\tq.p1*=m;\n\tq.p2*=m;\n\tq.p3*=m;\n\treturn q;\n}\nquad rotateZq(quad q,float a){\n\tmat3 m = mat3(cos(a),sin(a),0,\n\t\t\t\t-sin(a),cos(a),0,\n\t\t\t\t0,0,1);\n\tq.p0*=m;\n\tq.p1*=m;\n\tq.p2*=m;\n\tq.p3*=m;\n\treturn q;\n}\ncube rotateXc(cube c,float a){\n\tc.q0 = rotateXq(c.q0,a);\n\tc.q1 = rotateXq(c.q1,a);\n\tc.q2 = rotateXq(c.q2,a);\n\tc.q3 = rotateXq(c.q3,a);\n\tc.q4 = rotateXq(c.q4,a);\n\tc.q5 = rotateXq(c.q5,a);\n\treturn c;\n}\ncube rotateYc(cube c,float a){\n\tc.q0 = rotateYq(c.q0,a);\n\tc.q1 = rotateYq(c.q1,a);\n\tc.q2 = rotateYq(c.q2,a);\n\tc.q3 = rotateYq(c.q3,a);\n\tc.q4 = rotateYq(c.q4,a);\n\tc.q5 = rotateYq(c.q5,a);\n\treturn c;\n}\ncube rotateZc(cube c,float a){\n\tc.q0 = rotateZq(c.q0,a);\n\tc.q1 = rotateZq(c.q1,a);\n\tc.q2 = rotateZq(c.q2,a);\n\tc.q3 = rotateZq(c.q3,a);\n\tc.q4 = rotateZq(c.q4,a);\n\tc.q5 = rotateZq(c.q5,a);\n\treturn c;\n}\nfloat dz(vec3 p0,vec3 p1){\n\treturn p0.x*p1.y - p0.y*p1.x;\n}\nfloat inTri0(vec3 p,vec3 p0,vec3 p1,vec3 p2){\n\tif(dz(p0-p,p-p1) * dz(p1-p,p-p2) > 0. && dz(p1-p,p-p2) * dz(p2-p,p-p0) > 0.)\n\t\treturn 1.;\n\telse\n\t\treturn -1.;\n}\n//why inTri1 and inTri2 are both OK??????why?why?why?\n//None of them can be smoothed!!!!!How to do it?????\nfloat inTri1(vec3 p,vec3 p0,vec3 p1,vec3 p2){\n\treturn min(cross(p0-p,p-p1).z * cross(p1-p,p-p2).z,cross(p1-p,p-p2).z * cross(p2-p,p-p0).z);\n}\n//inTri2 is wrong!!!\nfloat inTri2(vec3 p,vec3 p0,vec3 p1,vec3 p2){\n\treturn min(dot(cross(p0-p,p-p1) , cross(p1-p,p-p2)),dot(cross(p1-p,p-p2) , cross(p2-p,p-p0)));\n}\nfloat inTri3(vec3 p,vec3 p0,vec3 p1,vec3 p2){\n\treturn min(dz(p0-p,p-p1) * dz(p1-p,p-p2),dz(p1-p,p-p2) * dz(p2-p,p-p0));\n}\nfloat inTri(vec3 p,vec3 p0,vec3 p1,vec3 p2){\n\treturn inTri3(p,p0,p1,p2);\n}\nfloat inQuad(vec3 p,quad q){\n\treturn max(inTri(p,q.p0,q.p1,q.p2),inTri(p,q.p0,q.p2,q.p3));\n}\nfloat inCube(vec3 p,cube c){\n\tfloat r = inQuad(p,c.q0);\n\tr = max(r,inQuad(p,c.q1));\n\tr = max(r,inQuad(p,c.q2));\n\tr = max(r,inQuad(p,c.q3));\n\tr = max(r,inQuad(p,c.q4));\n\tr = max(r,inQuad(p,c.q5));\n\treturn r;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.yy - vec2(0.5*iResolution.x/iResolution.y,0.5);\n\t\n\tcube c = genCube(vec3(0,0,0),0.2,0.2,0.2);\n\tcube c1 = genCube(vec3(0,-0.3,0),0.2,0.2,0.2);\n\tcube c2 = genCube(vec3(0,0.3,0),0.2,0.2,0.2);\n\n\tc = rotateXc(c,iTime);\n\tc = rotateYc(c,iTime);\n\tc = rotateZc(c,iTime);\n\n\tc1 = rotateXc(c1,iTime);\n\tc1 = rotateYc(c1,iTime);\n\tc1 = rotateZc(c1,iTime);\n\n\tc2 = rotateXc(c2,iTime);\n\tc2 = rotateYc(c2,iTime);\n\tc2 = rotateZc(c2,iTime);\n\tfloat d = inCube(vec3(uv,0),c);\n\tfloat d1 = inCube(vec3(uv,0),c1);\n\tfloat d2 = inCube(vec3(uv,0),c2);\n\td = max(max(d,d1),d2);\n\t// float d = inQuad(vec3(uv,0),q);\n\tif (d > 0.)\n\t{\n\t\t// d = smoothstep(-0.01,0.01,d - 0.01);\n\t\tfragColor = vec4(0,0,1,1);\n\t}else{\n\t\tfragColor = vec4(0,0,0,0);\n\t}\n}","name":"Image","description":"","type":"image"}]}