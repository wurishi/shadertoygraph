{"ver":"0.1","info":{"id":"ftffDH","date":"1650784484","viewed":114,"name":"Fork chroma key yipin 325","username":"yipin","description":"chroma key test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["chromakey"],"hasliked":0,"parentid":"flffD8","parentname":"chroma key test2"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float smoothing = 0.15;\nconst float thresholdSensitivity = 0.14;\nconst vec3 colorToReplace = vec3(0.0, 0.60, 0.17);\n\nfloat lerp(float x, float y, float t) \n{\n  return x * (1.f - t) + y * t;\n}\n\nfloat rgb2y(vec3 c) \n{\n    return (0.299*c.r + 0.587*c.g + 0.114*c.b);\n}\n\nfloat rgb2cb(vec3 c) \n{\n    return (0.5 + -0.168736*c.r - 0.331264*c.g + 0.5*c.b);\n}\n\nfloat rgb2cr(vec3 c) \n{\n    return (0.5 + 0.5*c.r - 0.418688*c.g - 0.081312*c.b);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 bgColor = texture(iChannel0, uv);\n    vec4 fgColor = texture(iChannel1, uv);\n    \n    \n    float maskY = rgb2y(colorToReplace);\n    float maskCr = 0.7132 * (colorToReplace.r - maskY);\n    float maskCb = 0.5647 * (colorToReplace.b - maskY);\n    float Y = rgb2y(fgColor.rgb);\n    float Cr = 0.7132 * (fgColor.r - Y);\n    float Cb = 0.5647 * (fgColor.b - Y);\n    \n    float blendValue = smoothstep(thresholdSensitivity, thresholdSensitivity + smoothing, distance(vec2(Cr, Cb), vec2(maskCr, maskCb)));\n    vec4 result = fgColor * blendValue;\n    \n\n    float v = (2.0 * result.b+result.r)/3.0;\n    \n    //float v = (result.b+result.r)/2.0;\n    \n    if(result.g > v) result.g = lerp(result.g, v, 1.0);\n    vec4 dif = (fgColor - result);\n    float desaturatedDif = rgb2y(dif.xyz);\n    result += lerp(0.0, desaturatedDif, 0.2);\n    \n\n    fragColor = mix(result, bgColor, 1.0- blendValue);\n\n}","name":"Image","description":"","type":"image"}]}