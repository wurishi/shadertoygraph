{"ver":"0.1","info":{"id":"lXBGRc","date":"1708670500","viewed":55,"name":"constellation symbol dice","username":"chenxianming","description":"stop in power low mode","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["dice","roll","symbol"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I iResolution\n#define A min( I.x, I.y )\n#define rot( a ) mat2( cos(a), sin(a), -sin(a), cos(a) )\n\nfloat rep(inout vec2 u, float rep){\n\n    float r = 6.28 / rep; // each radian\n    \n    float a = round( atan(u.y, u.x) / r ) * r; // aligned uv\n    \n    u = vec2(\n        dot( u, vec2( cos(a), sin(a) ) ),\n        dot( u, vec2( -sin(a), cos(a) ) )\n    );\n    \n    return floor( mod( ( round( a / r ) + rep * .5 ), rep ) ); // index\n}\n\nfloat moon( vec2 u ){\n    return max(\n        length( u ) - .2,\n        -(length( u - vec2( .2, 0. ) ) - .2)\n    );\n}\n\nfloat sun( vec2 u ){\n    vec2 u2 = u;\n    float p;\n    u.x -= mod( rep( u, 9. ), 2. ) == 0. ? .25 : .22;\n    u *= rot( 1.57 );\n    u.x += cos( u.y * 80. ) / 80.;\n    \n    p = max(\n        abs( u.x ) - .01,\n        abs( u.y ) - .1\n    );\n    \n    return min(\n        p,\n        length( u2 ) - .1\n    );\n}\n\nfloat star( vec2 u ){\n    u /= .3;\n    u.x -= mod( rep( u, 5. ), 2. ) > 0. ? .4 : .5;\n    \n    rep( u, 7. );\n    u.x -= .2;\n    u *= rot( 1.57 );\n    \n    return max(\n        abs( u.x ) - .35 * u.y,\n        abs( u.y ) - .15\n    );\n}\n\nfloat df( vec3 p ){\n    return max(\n        max(\n            abs( p.x ),\n            abs( p.z )\n        ),\n        abs( p.y )\n    ) - .2;\n}\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    vec2 u = ( V * 2. - I.xy ) / A;\n\n    vec3 c, p, o = vec3( 0, 0, -1 ), r = vec3( u, 1 );\n    \n    float d, t, i;\n    \n    while( i++ < 24. )\n        p = o + r * t,\n        p.xz *= rot( iTime * .1 ),\n        p.yz *= rot( iTime * .3 ),\n        d = df( p ),\n        t += d;\n    \n    \n    if( d < 1e-3 ){\n        o.xz *= rot( iTime ),\n        o.yz *= rot( iTime );\n\n        c += dot( normalize( o ) , p ) + .2;\n        c += max( p.z, 0. ) * smoothstep( .1 / A, -.1 / A, star( p.xy * 1.5 ) );\n        c += max( -p.z, 0. ) * smoothstep( -.1 / A, .1 / A, star( p.xy * 1.5 ) );\n        \n        c += max( p.x, 0. ) * smoothstep( .1 / A, -.1 / A, moon( p.yz * 2. ) );\n        c += max( -p.x, 0. ) * smoothstep( -.1 / A, .1 / A, moon( p.yz * 2. ) );\n        \n        c += max( p.y, 0. ) * smoothstep( .1 / A, -.1 / A, sun( p.xz * 2. ) );\n        c += max( -p.y, 0. ) * smoothstep( -.1 / A, .1 / A, sun( p.xz * 2. ) );\n    }\n    \n    \n    U = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}