{"ver":"0.1","info":{"id":"MsjcRt","date":"1493398654","viewed":290,"name":"Organic","username":"guil","description":"Testing a new fractal formula.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvec2 rnn3(vec2 last) \n{\n\n        \n    float a = -1.4;\n    float b = -1.6;\n    float c = 1.0;\n    float d = -1.08+.2*sin(iTime);\n    float e = -0.17;\n    float f = -0.27;\n    \n\tvec2 next = vec2(0);\n\t\n    next.x = tanh(a * last.x + b * last.y) + tanh(last.x*last.x+e);\n    next.y = tanh(c * last.x + d * last.y) + tanh(last.y*last.y+f);\n    \n    return next;\n}   \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = 1.15*(-iResolution.xy+2.0*fragCoord.xy)/iResolution.y;\n\n\tvec2 z = p;\n\tfloat f = 4.;\n\tfloat g = 4.;\n    \n    \t\n\tfor( int i=0; i<128; i++ ) \n\t{\n\t\tfloat w = .1*iTime+float(i)*.12457;\n\t\tvec2 z1 = vec2(2.*cos(w),2.*sin(w));\t\t   \n        z= rnn3(z)-p;\n\t\tf = min( f, abs(dot(z-p,z-p) ));\n\t\tg = min( g, dot(z-z1,z-z1));\n\t}\n\t\n\tf = 1.0+log(f)/15.0;\n\tg = 1.0+log(g)/8.0;\n\n\n\tfragColor = 1.-abs(vec4(g,f*f,f*f*f,1.0));\n}","name":"Image","description":"","type":"image"}]}