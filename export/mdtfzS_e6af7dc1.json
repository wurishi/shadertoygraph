{"ver":"0.1","info":{"id":"mdtfzS","date":"1697329810","viewed":70,"name":"Mediano's shader 1","username":"mediano228","description":"Shader based on fract","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["abstract","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; i++)\n    {\n    \n        vec2 uv0 = uv;\n\n        uv = fract(uv * 1.2) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv - uv0) + iTime * 0.2 + i * 0.1, vec3(0.5, 0.5, 0.5), vec3(0.5, 0.5, 0.5), vec3(2.0, 1.0, 0.0), vec3(0.50, 0.20, 0.25));  \n\n        d = sin(d * 8. + iTime) / 8.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.5);\n\n        finalColor += col * d;\n     }\n        \n    fragColor = vec4(finalColor, 1.);\n}","name":"Image","description":"","type":"image"}]}