{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n//parameters\n\nconst int iterations=150;\nconst float bailout=1e5;\nconst float brightness=.85;\nconst float saturation=.6;\nconst float zoom=0.5;\n\n\n//------------------ ------------------------------------------\n// complex number operations\nvec2 cadd( vec2 a, float s ) { return vec2( a.x+s, a.y ); }\nvec2 cmul( vec2 a, vec2 b )  { return vec2( a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x ); }\nvec2 cdiv( vec2 a, vec2 b )  { float d = dot(b,b); return vec2( dot(a,b), a.y*b.x - a.x*b.y ) / d; }\nvec2 cinv( vec2 z)  { float d = dot(z,z); return vec2( z.x, -z.y ) / d; }\nvec2 csqr( vec2 a ) { return vec2(a.x*a.x-a.y*a.y, 2.0*a.x*a.y ); }\nvec2 csqrt( vec2 z ) { float m = length(z); return sqrt( 0.5*vec2(m+z.x, m-z.x) ) * vec2( 1.0, sign(z.y) ); }\nvec2 conj( vec2 z ) { return vec2(z.x,-z.y); }\nvec2 cpow( vec2 z, float n ) { float r = length( z ); float a = atan( z.y, z.x ); return pow( r, n )*vec2( cos(a*n), sin(a*n) ); }\nvec2 cexp( vec2 z) {  return exp( z.x )*vec2( cos(z.y), sin(z.y) ); }\nvec2 clog( vec2 z) {  float d = dot(z,z);return vec2( 0.5*log(d), atan(z.y,z.x)); }\nvec2 csin( vec2 z) { float r = exp(z.y); return 0.5*vec2((r+1.0/r)*sin(z.x),(r-1.0/r)*cos(z.x));}\nvec2 ccos( vec2 z) { float r = exp(z.y); return 0.5*vec2((r+1.0/r)*cos(z.x),-(r-1.0/r)*sin(z.x));}\n// determinant\nfloat det(vec2 a, vec2 b) { return a.x*b.y-a.y*b.x;}\n//------------------------------------------------------------\n\nvec2 z0;\nvec2 zn;\n\n//formulas\n\nvec2 f( vec2 z ){return csqr(z) + z0  ;}//Mandelbrot\n//vec2 f( vec2 z ){return (csqr(z+z0)- z+ z0)*0.5  ;}\n//vec2 f( vec2 z ){return cinv(z+z0)+ z-z0  ;}//Infinity\n//vec2 f( vec2 z ){return (z+cinv(z)+ z0+cinv(z0))*-.5  ;}\n//vec2 f( vec2 z ){return (csqr(z-z0)+ z+z0)  ;}\n//vec2 f( vec2 z ){return cdiv( z0-z ,csin(z0+0.5*z));}//Santa Claus\n//vec2 f( vec2 z ){return cdiv( z0-z ,csin(z0-2.1*z));}\n//vec2 f( vec2 z ){return cmul((cpow(clog(z0-(23.0)*z),-1.95)),( -z+z0 ));}//Strange attractor\n//vec2 f( vec2 z ){return csin(z)+ z0  ;}\n//vec2 f( vec2 z ){return cinv(csqr(z)-z0)+ z+z0  ;}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p= (fragCoord.xy)/ iResolution.xy - 0.5;\n    p.x*=iResolution.x/iResolution.y;\n    p/=zoom*0.5;\n\t\n    vec2 q = (iMouse.xy)/ iResolution.xy-(iMouse.xy==vec2(0.,0.)?0.:0.5);\n    q.x*=iResolution.x/iResolution.y;\n    q/=zoom*0.5;\n\n\n    float k = 0.0;\n    float dz;\n    zn=normalize(p);\t\t\t\n    vec2 z=p;\n    z0=p;\n    vec2 trap = vec2(bailout);\n\n    for (int i=0; i<iterations; i++) {\n        \n        vec2 prevz=z;\n\t\tz=f(z);\n\t\t\n        trap = min(trap,vec2(\n            abs(det(z-z0,z-q)),\n            dot(z-q,z-q)\n        ));\n\t\t\t\t\n\t\tdz=length(z-prevz);\n        if(dz==0.)break;\n        if(dz<1.0)dz=1.0/dz;\n        if(dz>bailout){\n            k = bailout/dz;\n            z=(k*prevz+(1.-k)*z);\n            float k1 =sqrt(sqrt(k))/float(i+1);\n            if(dot(z,z)>0.)zn=k1*normalize(z)+(1.-k1)*zn;\n            break;\n        }\n\t\t\t\t                          \n        k = 1./float(i+1);\n        if(dot(z,z)>0.)zn=k*normalize(z)+(1.-k)*zn;\n        \t\t\t\n    }\n\n    vec3 color=0.2+0.8*abs(vec3(zn.x*zn.x,zn.x*zn.x,zn.y))+0.2*sin(vec3(-0.5,-0.2,0.8)+log(abs(trap.x*trap.y*trap.y)));\n\ttrap =sqrt(trap);\n\t//color=0.6*vec3(0.5-0.5*abs(sin(zn.y)),0.5-0.5*abs(sin(zn.x)),abs(sin(zn.x+zn.y)))+0.4*sin(vec3(-0.5,-0.2,0.8)+2.3+log(abs(trap.x*trap.y*trap.y)));\n\ttrap=1.-smoothstep(0.05,0.07,trap);\n    //color =mix( color,vec3(0.,0.8,1.0),trap.x);\n    color =mix( color,vec3(1.),trap.y);\n    color =mix( color,vec3(1.),1.-step(0.04,length(p-q)));\n    color =mix( color,vec3(0.),1.-step(0.02,length(p-q)));       \n\n    color=mix(vec3(length(color)),color,saturation)*brightness;\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Msj3WR","date":"1386415294","viewed":325,"name":"Experiment with trap","username":"guil","description":"Click and drag on the image to move the base point of the traps.\ntrap.y is a point trap (white disks).\ntrap.x is a line trap joining the base point and one point of the orbit.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","trap"],"hasliked":0,"parentid":"","parentname":""}}