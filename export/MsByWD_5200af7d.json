{"ver":"0.1","info":{"id":"MsByWD","date":"1492149248","viewed":149,"name":"Colour Physics","username":"akohdr","description":"Experimenting with RGB intensity profile effect on visible spectrum.\nAnyone recommend a good treatise on colour models?","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spectrum","color","colour"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Andrew Wild - akohdr/2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define BANDS 1.\n#define PI 3.141\n#define iT iTime/12.\n\n#define saw(a) 2.*mod((a)/(2.*PI),1.)-1.\n#define tri(a) 2.*abs(saw(a))-1.\n#define triN2(a) .810569*(dot(vec2(1,-.1111111),sin(a*vec2(1,3))))\n#define triN3(a) .810569*(dot(vec3(1,-.1111111,.04),sin(a*vec3(1,3,5))))\n#define triN4(a) .810569*(dot(vec4(1,-.1111111,.04,-.0204082),sin(a*vec4(1,3,5,7))))\n#define triN5(a) .810569*(sin(a)+dot(vec4(-.1111111,.04,-.0204082,.0123457),sin(a*vec4(3,5,7,9))))\n\nfloat triHarm(float a) {\n    // Harmonic Fourier Series form of triangle wave\n    // https://en.wikipedia.org/wiki/Triangle_wave\n    return .810569*(sin(a)\n      - .1111111*sin(3.*a)\n      + .04     *sin(5.*a)\n      - .0204082*sin(7.*a)\n      + .0123457*sin(9.*a) );\n}\n\nfloat f(float a) { \n// uncomment ONE for fixed shape\n//\treturn sin(a);\t\t\n//\treturn tri(a);\n//\treturn triN2(a);\n//\treturn triN3(a);\n//\treturn triN4(a);\n//\treturn triN5(a);\n//\treturn  saw(a);\n    float t = mod(iT,7.);\n    return t<1. ? sin(a) : \n           t<2. ? tri(a) : \n           t<3. ? triN2(a) : \n           t<4. ? triN3(a) : \n           t<5. ? triN4(a) : \n           t<6. ? triN5(a) : \n\t\t\t\t  saw(a) ; \n}\n\nfloat g(float a) { return 2.*PI*\n\tsin(a);\n//\ttri(a);\n//\tsaw(a);\n}\n\n//#define SAT(a) sin(a*iT)\t// temporal saturation\n#define SAT(a) 1.\t\t\t// fixed saturation\n\nvoid mainImage( out vec4 k, in vec2 p )\n{\n\tvec2 uv = 2.*PI * p.xy / iResolution.xy;\n//\tuv.x += 1./uv.y;\t\t// space distortion\n    float t = iT;\n    uv.x *= BANDS;\n    \n    k = vec4(\n        f(uv.x - g(t*3.))*SAT(1.),\n        f(uv.x - g(t*2.))*SAT(2.),\n        f(uv.x - g(t   ))*SAT(3.),\n        0);\n    \n//\tk = k/2.+.5;\t\t\t// comment for half cycle (black bars)\n//\tk = abs(k);  \t\t\t// rectify\n//\tk = 1.-log(k+2.);\n    \n\tk += step(abs(uv.y-k-vec4(1,3,5,0)),vec4(.02));\n\n//\tk = normalize(k);\n}\n","name":"Image","description":"","type":"image"}]}