{"ver":"0.1","info":{"id":"mtVfz1","date":"1701944751","viewed":19,"name":"D5 - Pulsing Effect","username":"SilverFox","description":"Advent of code\nPulse Effect: A shader that makes objects pulse glowing effect.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["aoc","pulsingeffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// isInsideCircle method, return true if distance of pixel is in the radius\nbool isInsideCircle(vec2 uv, float radius) \n{\n    float dist = length(uv);\n    return dist < radius;\n}\n\n// isInGlow method, return true if distance of pixel is between end of radius and glowRadius\nbool isInGlow(vec2 uv, float radius, float glowRadius) \n{\n    float dist = length(uv);\n    return dist > radius && dist < glowRadius;\n}\n\n// calculateGlow method, calculate glow intensity based on distance \nvec3 calculateGlow(vec2 uv, float radius, float glowRadius) \n{\n    float dist = length(uv);\n    float glowIntensity = (glowRadius - dist) / (glowRadius - radius);\n    return vec3(1.0, 0.0, 1.0) * glowIntensity;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    float radius = 0.3;\n    float glowRadius = radius + 0.05;\n\n    vec3 color = vec3(0.0);\n    if (isInsideCircle(uv, radius)) \n    {\n        color = vec3(0.0, 0.0, 1.0);\n    } else if (isInGlow(uv, radius, glowRadius)) \n    {\n        vec3 glow = calculateGlow(uv, radius, glowRadius);\n        float glowAnimation = sin(iTime * 2.5) + 1.0;\n        color = glow * glowAnimation;\n    }\n\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}