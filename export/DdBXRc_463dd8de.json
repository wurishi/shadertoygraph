{"ver":"0.1","info":{"id":"DdBXRc","date":"1670597926","viewed":122,"name":"Noisy Circle","username":"srand","description":"Very simple shader which draws a sort of \"noisy\" circle.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["simple","circle","polar","comments","trigonometricfunctions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float strangeCircle(in vec2 _st, in float _baseRadius) {\n    vec2 pos = vec2(.5) - _st;\n    float r = length(pos) * 2.;\n    float a = atan(pos.x, pos.y);\n    // scale the circle \"length\" value\n    // use the cosine of the polar coordinate a\n    // add a small value to lightly tilt the figure\n    // multiply it to increase frequency\n    // divide the result to decrease signal amplitude\n    // add to move the value near 1\n    float rot = iTime / 10.0 + .325;  // rotation effect\n    float f = 6.; // cos frequency ~= n. of bumps\n    float col = r * (cos((a + rot) * f) *\n                        sin(a + iTime * 2.434 + 2.3) *\n                        cos(a + iTime) / 20. + .6);\n    col = smoothstep(_baseRadius, _baseRadius + .001, col);\n\n    return 1. - col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float strCirc = 1. - strangeCircle(uv, .5);\n    vec3 col = vec3(strCirc + uv, 1.);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}