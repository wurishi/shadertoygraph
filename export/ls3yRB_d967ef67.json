{"ver":"0.1","info":{"id":"ls3yRB","date":"1519324983","viewed":568,"name":"Glowing hexagonal tile","username":"murosyoukei","description":"References\nhttps://github.com/unity3d-jp/unitychan-crs/wiki/Visualizer","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hex( vec2 p, vec2 h )\n{\n\tvec2 q = abs(p);\n\treturn max(q.x - h.y,max(q.x + q.y * 0.57735, q.y * 1.1547) - h.x);\n}\n\nfloat gra( float v, float r )\n{\n    return clamp((0.5 * r - abs(0.5 - mod(v + 0.5, 1.0))) * 2.0 / r, 0.0, 1.0);\n}\n\nvec4 hexGrid( in vec2 uv )\n{\n\tfloat radius = 0.1;\n\tfloat padding = 0.01;\n\tfloat grid_radius = radius + padding * 2.0 + 0.0733;\n\tvec2 grid = vec2(grid_radius * 1.73, grid_radius);\n\n\tvec2 p1 = mod(uv, grid) - grid * 0.5;\n\tvec2 p2 = mod(uv + grid * 0.5, grid) - grid * 0.5;\n\tfloat d1 = hex(p1, vec2(radius));\n\tfloat d2 = hex(p2, vec2(radius));\n\tfloat d = min(d1, d2);\n\tvec4 main_color = vec4(1.0, 0.0, 0.0, 1.0);\n\tvec4 hex_color = main_color * 0.5;\n\tvec4 grid_color = main_color * gra(uv.y + iTime, 0.75);\n\tvec4 grid_light_color = vec4(1.0, 1.0, 1.0, 1.0);\n\t\t\n\tgrid_light_color = grid_light_color * gra(uv.y + iTime, 0.25);\n    grid_light_color *= grid_light_color;\n    grid_color += grid_light_color;\n     \n    grid_color.a = 0.25;\n\thex_color.a = 0.25;\n\t\n    vec4 c = (d < 0.0 ? 1.0 : 0.0) * hex_color;\n    c += grid_color * (d < 0.0 ? 0.0 : 1.0);\n    c += grid_light_color * max(0.0, d * 4.0 + 0.1) * 5.0;\n    c += grid_light_color * max(0.0, d * 4.0 + 0.5) * 1.0;\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n\tfragColor = hexGrid(uv);\n}","name":"Image","description":"","type":"image"}]}