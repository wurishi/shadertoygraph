{"ver":"0.1","info":{"id":"NsKcRt","date":"1655398807","viewed":79,"name":"Piet Mondrian painting 6.16.22","username":"aliiscript","description":"Exercise from the book of shaders\nRecreate a piet Mondrian painting using my new square function\n\nVery head on approach...obviously could be optimized :)\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat square(vec2 st, vec4 dimensions) {\n    float lW = dimensions.x;\n    float bH = dimensions.y;\n    float rW = dimensions.z;\n    float tH = dimensions.w;\n    vec2 bl = step(vec2(lW, bH),st);\n    vec2 tr = step(vec2(rW, tH),1.0-st);\n    \n    float square = bl.x * bl.y * tr.x * tr.y;\n    \n    return square;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st *= vec2(4.0);\n    vec3 color = vec3(0.0);\n    \n    // vec4(lW, bH, rW, tH)\n    \n    // left bottom sq\n    vec4 sqDimensions = vec4(.0, .0, .05, -1.6);\n    float sq = square(st, sqDimensions);\n    \n    // mid bottom sq\n    vec4 sq2Dimensions = vec4(-.9, .0, .1, .75);\n    float sq2 = square(vec2(1.92-st.x, st.y), sq2Dimensions);\n    \n    // right long sq\n    vec4 sq3Dimensions = vec4(.0, .4, .05, -1.6);\n    float sq3 = square(vec2(3.84-st.x, st.y), sq3Dimensions);\n    \n    // right bottom sq\n    vec4 sq4Dimensions = vec4(-.45, .0, .5, .75);\n    float sq4 = square(vec2(3.39-st.x, st.y), sq4Dimensions);\n    \n    // middle big sq\n    vec4 sq5Dimensions = vec4(.0, .4, -.8, -1.6);\n    float sq5 = square(vec2(2.82-st.x, st.y), sq5Dimensions);\n    \n    // middle top sq\n    vec4 sq6Dimensions = vec4(.0, .45, -.8, -.025);\n    float sq6 = square(vec2(2.82-st.x, 3.75 - st.y), sq6Dimensions);\n    \n    // middle top top sq\n    vec4 sq7Dimensions = vec4(.0, .0, -.8, -.025);\n    float sq7 = square(vec2(2.82-st.x, 4.45 - st.y), sq7Dimensions);\n    \n    // left left middle sq\n    vec4 sq8Dimensions = vec4(.0, .52, .65, -.1);\n    float sq8 = square(vec2(st.x, 3.82-st.y), sq8Dimensions);\n    \n    // left top middle sq\n    vec4 sq9Dimensions = vec4(.0, .52, .65, -.1);\n    float sq9 = square(vec2(st.x, 4.53-st.y), sq9Dimensions);\n    \n    // left middle sq\n    vec4 sq10Dimensions = vec4(-.17, .52, .65, -.1);\n    float sq10 = square(vec2(.78 - st.x, 3.82-st.y), sq10Dimensions);\n    \n    // left middle sq\n    vec4 sq11Dimensions = vec4(-.17, .52, .65, -.1);\n    float sq11 = square(vec2(.78 - st.x, 4.53-st.y), sq11Dimensions);\n    \n    // right middle sq\n    vec4 sq12Dimensions = vec4(-.58, .52, .65, -.1);\n    float sq12 = square(vec2(3.25 - st.x, 4.53-st.y), sq12Dimensions);\n    \n    // right middle middle sq\n    vec4 sq13Dimensions = vec4(-.58, .52, .65, -.1);\n    float sq13 = square(vec2(3.25 - st.x, 3.83-st.y), sq13Dimensions);\n    \n    // right top skinny sq\n    vec4 sq14Dimensions = vec4(-.58, .52, .65, -.1);\n    float sq14 = square(vec2(4.25 - st.x, 3.83-st.y), sq14Dimensions);\n    \n    // right top top skinny sq\n    vec4 sq15Dimensions = vec4(-.58, .52, .65, -.1);\n    float sq15 = square(vec2(4.25 - st.x, 4.53-st.y), sq15Dimensions);\n    \n    // right middle skinny sq\n    vec4 sq16Dimensions = vec4(-.58, .52, .65, -1.72);\n    float sq16 = square(vec2(4.25 - st.x, 3.12-st.y), sq16Dimensions);\n    \n    // right bottom skinny sq\n    vec4 sq17Dimensions = vec4(-.58, .52, .65, -.1);\n    float sq17 = square(vec2(4.25 - st.x, .774-st.y), sq17Dimensions);\n\n\n    // color = vec3(sq + sq2 + sq3 + sq4 + sq5 + sq6 + sq7 + sq8 + sq9 + sq10 + sq11 + sq12 + sq13 + sq14 + sq15 + sq16 + sq17);\n    \n    color = vec3(sq);\n    \n    color *= vec3(1.0, .97, .9);\n    \n    color += vec3(sq2) * vec3(1.0, .97, .9);\n    \n    color += vec3(sq3) * vec3(1.0, .97, .9);\n    \n    color += vec3(sq4) * vec3(.0, .25, .57);\n    \n    color += vec3(sq5) * vec3(1.0, .97, .9);\n    \n    color += vec3(sq6) * vec3(1.0, .97, .9);\n    \n    color += vec3(sq7) * vec3(1.0, .97, .9);\n    \n    color += vec3(sq8) * vec3(.57, .0, .0);\n    \n    color += vec3(sq9) * vec3(.57, .0, .0);\n    \n    color += vec3(sq10) * vec3(.57, .0, .0);\n    \n    color += vec3(sq11) * vec3(.57, .0, .0);\n    \n    color += vec3(sq12) * vec3(1.0, .97, .9);\n    \n    color += vec3(sq13) * vec3(1.0, .97, .9);\n    \n    color += vec3(sq14) * vec3(.825, .825, 0.0);\n    \n    color += vec3(sq15) * vec3(.825, .825, 0.0);\n    \n    color += vec3(sq16) * vec3(1.0, .97, .9);\n    \n    color += vec3(sq17) * vec3(.0, .25, .57);\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}