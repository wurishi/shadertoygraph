{"ver":"0.1","info":{"id":"WdsGWB","date":"1547397641","viewed":97,"name":"day 18 sample 2","username":"kiyoshidainagon","description":"ref : https://www.shadertoy.com/view/XsXXDn","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shadeaday"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\n\nconst float DEVISION_NUM =  7.0;\nconst float REDUCTION_VALUE = 0.4;\n\nconst vec3 BASE_COLOR = vec3(0.2, 0.8, 0.5);\n\nconst vec3 baseColor = vec3(0.1, 0.8, 0.6);\n\n\nvoid rotate(float time, inout vec2 p) {\n    float s = sin(time);\n    float c = cos(time);\n    p *= mat2(c, s, -s, c);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n \n\n    vec3 color;\n\n\tfloat l;\n\tfloat z = iTime;\n\n\tvec2 uv = ( fragCoord.xy * 2.0 - iResolution.xy ) / iResolution.y;\n\n    vec2 p = uv;\n    \n    rotate(iTime, p);\n    \n\tfor(int i = 0; i < 3; i++) {\n\t\tl = length(p);\n\t\tuv += p  / l * (sin(z * 1.0) + 2.0) * sin(l* 9.0 - z * 2.0);\n\t\tcolor[i] = 0.5 / length(abs(mod(uv,  1.0) - 0.5));\n\t}\n\n    // Output to screen\n    fragColor = vec4(color * baseColor,1.0);\n}","name":"Image","description":"","type":"image"}]}