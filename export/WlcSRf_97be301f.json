{"ver":"0.1","info":{"id":"WlcSRf","date":"1581390667","viewed":500,"name":"Small Image Loader - 146 chars","username":"GregRostami","description":"This is the golfed version of archee's amazing \"press play on tape\" shader:\n[url]https://www.shadertoy.com/view/XtGXzW[/url]\n\nPlease help me make this smaller.\nThank you","likes":6,"published":3,"flags":96,"usePreview":0,"tags":["2d","image"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Greg's old code\n// #define mainImage(o,u) o = texture(iChannel0, u / iResolution.xy)\n\nvoid mainImage(out vec4 o, vec2 u) {mi(o,u);}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4lj3zW","filepath":"https://soundcloud.com/user-318202294/out-9","previewfilepath":"https://soundcloud.com/user-318202294/out-9","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Greg's old code:\n/*\n#define mainImage(O,u)                    \\\n    vec2 U=u, R = iResolution.xy;         \\\n    U.y -= fract(iTime*20. * R.x/512.);   \\\n    O += U.y<1. ? texture(iChannel1, vec2((ceil( (1.- U.x/R.x) *512.)+.5)/512.,0 ) ).r * 2.  \\\n                : texture(iChannel0, U/R).r\n*/\n\nvoid mainImage(out vec4 o, vec2 u) {mi(o,u);}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"// 146 chars - iq kills another character for the shortest version:\n#define mi(O,u)                              \\\n    vec2 R = iResolution.xy, U=u;                   \\\n    O += ( U.y -= fract(iTime*R.x*.04) ) < 1.       \\\n        ? U.x=R.x-U.x,texture(iChannel1, U/R ).r*2. \\\n        :             texture(iChannel0, U/R ).r /*\n\n// Thanks to ttg, iq, and Fabrice the whole shader is now 147 chars!!\n          \n#define mainImage(O,u)                         \\\n    vec2 R = iResolution.xy, U=u,              \\\n         V = R-U; V.y = 0.;                    \\\n    O += ( U.y -= fract(iTime*R.x*.04) ) < 1.  \\\n        ? texture(iChannel1, V/R ).r * 2.      \\\n        : texture(iChannel0, U/R ).r\n*/","name":"Common","description":"","type":"common"}]}