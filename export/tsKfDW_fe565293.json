{"ver":"0.1","info":{"id":"tsKfDW","date":"1607191729","viewed":298,"name":"Dithered Planet 2","username":"AzazelN28","description":"Dithered Planet 2","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["planet","dithered"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Dither functions from: https://github.com/hughsk/glsl-dither\n// Thanks to FabriceNeyret2 for the improvements\n\nfloat dither8x8(vec2 position, float brightness) {\n  float limit = texture(iChannel0, mod(position, 8.) / 8.).x;\n  return brightness < limit ? 0.0 : 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 cpos = ( 2.* fragCoord -  iResolution.xy ) / iResolution.y;\n   \t\n    vec3 sun = vec3(cos(iTime * 0.5), 0., sin(iTime * 0.5));\n    vec3 norm = normalize(vec3(cpos, sqrt(1. - dot(cpos, cpos))));\n    \n    float d = length(cpos);\n    float a = dot(sun, norm);\n    \n    if (d < 0.99) {\n    \tfragColor = vec4(1) * dither8x8(fragCoord, a);\n    } else {\n        fragColor = vec4(d < 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}