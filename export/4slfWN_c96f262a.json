{"ver":"0.1","info":{"id":"4slfWN","date":"1496247103","viewed":115,"name":"Eksempel på farver som tal","username":"muslidyr","description":"Very simple image processing; to demonstrate that colour is but light, and that light is but numbers to a computer :-)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["example"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Tid t; antal sekunder fra start, i nanosekunds præcision\n    float t = iTime;\n    \n\t// Dette er de individuelle pixels; dette kode er for én pixel\n    vec3 pixel = texture(iChannel0, fragCoord.xy / iResolution.xy).rgb;\n    \n    // De individuelle farver i en pixel (rød, grøn, blå; grundfarver)\n    // 0: 0% lys, 1: 100% lys - lys dikterer farvens betydning \n    float red = pixel.r;\n    float green = pixel.g;\n    float blue = pixel.b;\n    \n    // Vend alt rødt omvendt; invers rød\n    red = 1.0 - red;\n    \n    // Blåt påvirkes af en sinus kurve der bevæger sig i tid t\n    blue = sin(t * PI) * blue; \n    \n    \n    // Tegn denne pixel på skærmen\n    fragColor = vec4(vec3(red, green, blue), 1.0);\n}","name":"Image","description":"","type":"image"}]}