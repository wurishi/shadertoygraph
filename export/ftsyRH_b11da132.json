{"ver":"0.1","info":{"id":"ftsyRH","date":"1647511280","viewed":67,"name":"Sound Test Mar17","username":"scry","description":"it kinda works! any ideas how to get to clicks out? (outside just recording and processing it..)","likes":4,"published":1,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float time = iTime+uv.x*0.1;\n    vec3 s = soundfunc(1,time);\n    vec3 col = vec3(0.);\n    //col += t*uv.y*20.;\n    //col \n    col.rg += 1.*step(s.z/1000.+uv.y,1.)*0.8;\n    //col.rgb += 1.*step(s.z/100.+uv.y,1.)*0.8;\n    col.bg += step(s.x+uv.y*2.,1.)*0.3;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float a = pow(2.,1./12.);\n\n\nfloat scale(float t) {\n    t = 440.*pow(a,(floor(t*2.)/2.)-5.);\n    //t = 440.*pow(a,floor(abs(fract(t)-0.5)*24.)*2.-12.);\n    return t;\n}\nfloat tone(float t,float tm) {\n    t = sin(6.2831*t*tm);\n    return t;\n}\nfloat bong(float t,float tm) {\n    t*=exp(-1.*tm);\n    return t;\n}\nfloat bong1(float t,float tm,float bps) {\n    t*=exp(-11.0*fract(tm*bps));\n    return t;\n}\n\nvec3 soundfunc( int samp, float time )\n{\n    // A 440 Hz wave that attenuates quickly overt time\n    float t = 440.;\n    float ot = t;\n    //t = 440.;\n    float gtime = fract(time*0.15)*34.-time*3.5;\n    //float gtime = time*0.15*6.;\n    float ftime = gtime;\n    //float bps = 6./((time*0.001)+1.);\n    float bps = 2.2;\n    float s = 0.;\n    //ftime += sin(time*0.1);\n    ftime = fract(ftime*bps);\n    float bpi = 4.;\n    float sm = (2.-exp(2.-fract(gtime)))*10.;\n    int steps = 3;\n    bps = 1.;\n    //bps = 0.1+time*0.1;\n    float sa = 1.-exp(1.-time);\n    //for (int i=0;i<steps;i++) {\n    //    float ii = float(i+1);\n    //    t = scale(ii);\n    //    s += bong(tone(t,gtime),gtime,bps+ii/24.);\n    //    s *= .8;\n    //}\n    float m1 = 1.-exp(-.0001*time*time);\n    float m2 = 1.-exp(-.01*time);\n    float m3 = 1.-exp(-.015*time);\n    float m4 = 1.-exp(-.02*time);\n    float m5 = 1.-exp(-.3*time);\n    float m6 = 1.-exp(-.5*time);\n    //m1 = 1.;\n    //m2 = 1.;\n    //m3 = 1.;\n    //m4 = 1.;\n    //m5 = 1.;\n    //m6 = 1.;\n    t = scale(floor(fract(time/4.)*8.)*2.-25.);\n    s += tone(t,gtime)*0.1*m3;\n    t = scale(floor(fract(-time)*4.)-20.);\n    s += tone(t,gtime)*0.1*m4;\n    t = scale(floor(fract(time*0.5)*2.)-10.);\n    s += tone(t,gtime)*0.1*m6;\n    t = scale(floor(fract(-time*2.)*4.)-5.+fract(-time/3.)*6.+12.);\n    s += tone(t,gtime)*0.05*m1;\n    t = scale(floor(fract(-time*0.5)*2.)-5.+fract(-time*0.2)*10.-3.);\n    s += bong(tone(t,gtime-time/20.),fract(time*0.2*2.)*3.)*0.3*m1;\n    t = scale(floor(fract(-time*2.)*2.)-5.+fract(+time*0.2)*10.-6.);\n    //s += bong(tone(scale(floor(fract(time/12.+0.5)*2.-12.)*4.+42.),time),abs(fract(time*0.01*time)-0.5)*10.)*0.2*m3;\n    s += bong(tone(scale(floor(fract(time/12.+0.5)*2.-12.)*4.+42.),time),fract(time*2.))*0.5*m3;\n    s += bong(tone(scale(floor(fract(time/12.+0.5)*2.-12.)*4.+42.),time/2.),fract(time*2.))*0.2*m3;\n    //s += bong(tone(t,gtime+time/20.),fract(time*0.2*8.)*4.)*0.5;\n    t = scale(floor(fract(-time*1.)*2.)-5.+fract(-time*0.2)*10.-9.);\n    s *= 1.;\n    //s += bong(tone(t,gtime-time/30.),fract(time*0.2*4.)*4.*4.)*0.5;\n    \n    //s += bong(tone(t,gtime),gtime,bps);\n    return vec3( s , s , t );\n}\nvec2 soundfreq( int samp, float time )\n{\n    return soundfunc(samp,time).xy;\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    return soundfreq(samp,time);\n}","name":"Sound","description":"","type":"sound"}]}