{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define EYES 80.\n\nfloat Eye(vec2 p, vec2 offs, float s1, float s2, float size){\n    float c1 = smoothstep(s1, s1-.01, length(size*p));\n    float c2 = smoothstep(s2, s2-.01, length(size*p-offs));\n    c1 += .003/length(p);  // for brightness \n\n    return c1-c2;\n}\n\nmat2 Rot(float a){\n    float c = cos(a), s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv *= 5.5;\n    uv *= Rot(3.1415/2.);\n    vec3 col = vec3(0);\n    float f = atan(uv.y, uv.x+2.3)/6.28318;\n   \n    \n    float a = smoothstep(.37, .36, length(uv))-smoothstep(.28, .27, length(uv-vec2(.1, -.05)));\n    float fade = sin(uv.x+.5)*.5+.5;\n    \n    for(float i=0.; i<1.; i+=1./EYES){\n        vec2 coord = uv-vec2(4.*i-2.2, i*sin(iTime*i)+i*cos(iTime*i));\n        float t = smoothstep(i, 0., abs(length(coord)));\n        col += t*.15*vec3(.1, .4, .3);\n        float eye = Eye(coord, vec2(-.3*sin(iTime),.3*cos(iTime)), .6, .45, 5./i);\n        vec3 color = sin(.2*iTime*vec3(3., 5., 2.)*i)*.5+.5;\n        color.z *= .3;\n        col += eye * color;\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MfGBWm","date":"1734096691","viewed":106,"name":"Christmas tree ::)","username":"vanshika","description":"fork of a previous shader. makes a tree about 25 secs into the animation.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["christmas","wave","tree","bright"],"hasliked":0,"parentid":"4fcfRB","parentname":"rainbow wave :)"}}