{"ver":"0.1","info":{"id":"dtXGzs","date":"1672228876","viewed":431,"name":"Nice glass wall","username":"Emil","description":"simple wall made out of glass tiles","likes":21,"published":1,"flags":0,"usePreview":1,"tags":["2d","refraction","distortion","glass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926537\n#define size 9.8\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    float centerBlob = 1.0-length(uv);\n    uv /= length(uv)*0.3+1.0;\n    float grid = 1.0-length(smoothstep(0.3, -0.06, abs(fract(uv*size*0.5*PI+0.5)-0.5)));\n    uv += 0.01 * sin(10.0 * (uv*size));\n    uv += iMouse.xy*0.00001*grid;\n    vec3 color = texture(iChannel0, uv+iTime*vec2(0.003, 0.001)).rgb;\n    color *= centerBlob*(clamp(grid, 0.0, 1.0)*0.6+0.4) * (centerBlob*2.8+1.0);\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}