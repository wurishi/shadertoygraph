{"ver":"0.1","info":{"id":"WdcfDj","date":"1605961755","viewed":396,"name":"cross intersection - 001","username":"catafest","description":"it creates a sdBox model for two 3D vectors and is used to draw a cross at the mouse position","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["3d","cross","vectors","imouse","sdbox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// use mouse and click on shader screen area\n\n// it creates a sdBox model for two 3D vectors and is used to draw at the mouse position\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\n// UV unwrapping by iResolution function\nvec2 uvmap(vec2 uv)\n{\n    return ( uv - iResolution.xy) /iResolution.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// unwrapping coords\n    vec2 uv = uvmap(fragCoord.xy);\n\t// first 3D vector (0.01, 0.01, 0.01)\n    vec3 p0 = vec3(0.01);\n    // a vector based by unwrapping coords and mouse coords\n    vec2 p1 = uv-uvmap(iMouse.xy);\n    // second vector based by p1 vector\n    vec3 p_m = vec3(p1,0.0);\n  \t// this formula will intersection in the cross \n    p_m = 1.0-p_m*100.0/(p_m*100.0+0.1);\n\t// create draw box with  sdBox using\n    // the p0 and p_m formula for cross intersection\n    vec3 col = vec3(sdBox(p0, p_m));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}