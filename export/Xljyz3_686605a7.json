{"ver":"0.1","info":{"id":"Xljyz3","date":"1509999569","viewed":290,"name":"Styx 0","username":"Nicolas2","description":"Very much inspired by this great article by inigo quilez\nhttps://iquilezles.org/articles/warp/warp.htm","likes":7,"published":1,"flags":96,"usePreview":0,"tags":["water","poison"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4s2SDW","filepath":"https://soundcloud.com/kriskoma/dont-regretprod-whtvs","previewfilepath":"https://soundcloud.com/kriskoma/dont-regretprod-whtvs","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 st) { \n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners porcentages\n    return mix(a, b, u.x) + \n            (c - a)* u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}\n\nfloat fbm(in vec2 p){\n    float result = noise(p*vec2(1.0,1.0));\n\tresult += 0.5*noise(p*vec2(3.0,2.0));\n    result += 0.25*noise(p*vec2(-8.0,8.0));\n     result += 0.25*noise(p*vec2(12.0,12.0));\n    \n    return result;\n}\n\n\n float pattern( in vec2 p )\n  {\n      vec2 q = vec2( fbm( p + vec2(iTime/10.0,0.0) ),\n                     fbm( p + vec2(iMouse.x/iResolution.x*5.2,iMouse.x/iResolution.x*5.2) ) );\n\n      vec2 r = vec2( fbm( p + 4.0*q + vec2(iMouse.x/iResolution.x*5.2,iMouse.x/iResolution.x*5.2) ),\n                     fbm( p + 4.0*q + vec2(8.3,2.8) ) );\n\n      return fbm( p + 1.0*r );\n  }\n\n\n\n    \n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    float p=pattern(fragCoord.xy/100.0);\n\tfragColor = vec4(p,0,pow(p,2.2)/3.0,0);\n \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}