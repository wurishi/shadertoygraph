{"ver":"0.1","info":{"id":"stVczV","date":"1723798399","viewed":12,"name":"TBOS_AlgorithmicDrawing4","username":"nako","description":"The Book of Shades Algorithmic drawing\nhttps://thebookofshaders.com/05/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nfloat plot(float y, float func){\n    return smoothstep(1.5/iResolution.y, 0., abs(y - func));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.y;\n    \n    float func;\n    func = sin(st.x*PI + iTime);\n    //func = sin(st.x * iTime);\n    //func = abs(sin(st.x*PI+iTime));\n    //func = fract(sin(st.x*PI+iTime));\n    float func1 = ceil(sin(st.x*PI+iTime));\n    float func2 = floor(sin(st.x*PI+iTime));\n    \n    func = func*0.5 + 0.5;\n    func1 = func1*0.5 + 0.5;\n    func2 = func2*0.5 + 0.5;\n    \n    vec3 col = vec3(func);\n    float pct1 = plot(st.y, func1);\n    float pct2 = plot(st.y, func2);\n    col = (1.0 - pct1 -pct2)*col + pct1*vec3(0.0, 1.0, 0.0) + pct2*vec3(1.0, 0.0, 0.0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}