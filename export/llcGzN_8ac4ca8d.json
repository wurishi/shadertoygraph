{"ver":"0.1","info":{"id":"llcGzN","date":"1468160079","viewed":687,"name":"Oil","username":"huwb","description":"Some experimental prepro from a few years ago that I never got around to posting. Uses noise to distort domain of a simple shape, define NO_DISTORT to see the input shape.","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["line","distortion","warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//#define NO_DISTORT\n\n//iq's\nfloat noise( in vec3 x )\n{\n    x.xyz += iTime*.05;\n    \n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\t\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = textureLod( iChannel0, (uv+0.5)/256.0, 0.0 ).yx;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\nconst mat3 m = mat3( 0.00,  0.80,  0.60,\n                    -0.80,  0.36, -0.48,\n                    -0.60, -0.48,  0.64 );\n\nfloat turb( in vec3 p )\n{\n\tp -= vec3(31.3);\n\tfloat res = 0.;\n\tvec3 q = m*p*3.6;\n\tres +=  0.5*noise(q); q = m*q*5.1;\n\tres +=  0.02*noise(q); q = m*q*2.3;\n\t//res += 0.1*noise(q/2.); q = m*q*2.2;\n\t//res += 0.125*noise(q);\n\t\n\treturn res;\n}\n\nvec3 turbN( in vec3 p )\n{\n    #ifdef NO_DISTORT\n    return vec3(0.);\n    #endif\n    \n\tvec2 eps = vec2(0.01,0.);\n\tfloat c = turb(p);\n\treturn -vec3(\n\t\tturb(p+eps.xyy) - c,\n\t\tturb(p+eps.yxy) - c,\n\t\tturb(p+eps.yyx) - c\n\t\t) / eps.x;\n}\n\n#define MOUSEX iMouse.x / iResolution.x\n#define MOUSEY iMouse.y / iResolution.y\n\n#define UV_SCALE 8.\n#define STEP_SIZE 0.1\n\nfloat image( vec2 uv )\n{\n    if( uv.y < .5 )\n\t    uv.x = fract(uv.x);\n    else\n\t    uv.x = fract(uv.x/1.3);\n    \n\tfloat ssStart = 0.015;\n\tfloat ssEnd = 0.04;//0.03;\n    \n    float wi = max(1. - abs(uv.y-.5)*2.5,0.);\n    float crack = smoothstep( ssStart*wi, ssEnd*wi, pow(abs(uv.x-.5)*5.,1.1) );\n    crack += smoothstep(.9,1.,abs(uv.y-.5)*4.);\n    crack = clamp(crack,0.,1.);\n\treturn smoothstep( ssStart, ssEnd, abs(uv.y-0.5) ) * crack;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tfloat offset = 13.3 + .07*iTime;\n\tfloat amp = 0.3;\n\tif( iMouse.z > 0. )\n\t{\n\t\toffset = 4.*MOUSEX;\n\t\tamp = MOUSEY;\n\t}\n\t\n\tvec2 advect = uv  + vec2(offset,0.);\n\t\n\tfragColor.xy += clamp(0.3-length(uv-advect),0.,1.);\n\t\n\tfloat l = 0.;\n\tfor( int i = 0; i < 10; i++ )\n\t{\n\t\tvec2 N = turbN( vec3(advect,1.0) ).xy;\n\t\tl += length( N );\n\t\tadvect += 0.025 * amp * N;\n\t}\n\t\n\tfragColor.xyz = vec3( image( advect ) );\n\t\n    fragColor.xyz *= pow(smoothstep(.25,.9,1.-length(uv-.5)),.3);\n    fragColor.xyz = mix(vec3(0.,.0,.0), vec3(1.,1.,1.)*1., fragColor.x );\n    fragColor.xyz = pow(fragColor.xyz,vec3(1./2.2));\n}\n","name":"Image","description":"","type":"image"}]}