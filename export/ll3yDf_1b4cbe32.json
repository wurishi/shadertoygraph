{"ver":"0.1","info":{"id":"ll3yDf","date":"1534365415","viewed":246,"name":"sphere noise","username":"nabr","description":" nothing special or crazy. so many stuff on the web, this is my attempt to create noise. yeah.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["noise","raymarch","sphere","complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// nabr\n// https://www.shadertoy.com/view/ll3yDf\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n// NOTE: this is for minimum distance check\n\n\n#define R(p, a) p = cos(a) * p + sin(a) * vec2(p.y, -p.x)\n#define eps 1e-3\n\n#define STEPS 128\n\nfloat map(vec3 p) \n{\n\t// note: i make this for my personal use, \n    // you have to play with thouse values in order to archive the desired effect\n    \n    float noise = \n        ( 0.1 / (cos(p.x * 0.01 - sin(p.z * cos(iTime - p.y)))))\n        / (/* 1.51 + */ 1.997 - cos((p.y * 2.001 - sin(p.x * cos(iTime - p.y)))));\n    \n    \n   /* // littel booster just in case\n   noise = min(noise * 1.5, \n                ( .1 / abs(cos(p.y * 1.001 - sin(p.z + cos(iTime + p.y * 3.14 )))))\n                / (1.001 + cos((p.x * .1 +  cos(iTime * 3.14- p.z)))));\n\t*/\n   \n    return min(noise,1.0 );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // setup scene\n    vec2 uv = 2.0 * (fragCoord.xy / iResolution.xy) - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(0.0, 0.0, -1.0 );\n    float cameraZ = 1.;\n    vec3 rd = normalize(vec3(uv,cameraZ));\n    \n    R(rd.yz, iTime * 0.43 );\n    R(rd.xz, iTime * 0.31 );\n\n    \n    // raymarch\n    \n    float t = 0.0;\n    \n    for(int i = 0; i < STEPS; i++) \n    {\n        t += map( ro + rd * t);\n\t\tif(t <  eps) break;\n    }\n    \n    \n    // ------- shade\n    vec3 ip = ro + rd * t;\n    fragColor.rgb = (t * vec3( 0.12, 0.2, 0.24)) * map(ip - 0.2) + t * 0.02;\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}