{"ver":"0.1","info":{"id":"cdyyWc","date":"1696667388","viewed":38,"name":"coordinate space glitch 2","username":"toothmang","description":"S1M, glitch, coordinates","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["glitch"],"hasliked":0,"parentid":"cdGcWK","parentname":"coordinate space glitch"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int numRows = 12;\nint numCols = 24;\n\nvec2 rotate(vec2 c, float t) {\n    //return c;\n    mat2 r = mat2(cos(t), sin(-t), -sin(t), -cos(t));\n    \n    vec2 rc = r * c;\n    \n    //rc += vec2(t);\n    \n    \n    \n    return rc;\n}\n\nvec2 ndc(in vec2 ss) {\n    vec2 zeroToOne =  ss / iResolution.xy ;\n    \n    vec2 ndc = (zeroToOne - vec2(0.5)) * 2.0;\n    return ndc;\n}\n\nvec2 screenspace(vec2 ndc) {\n    return ((ndc + vec2(1.0)) * 0.5) * iResolution.xy;\n}\n\nvec2 distort1(vec2 c) {\n    return vec2(c.x, c.x / c.y * c.x);\n}\n\nivec2 rowCol(vec2 c) {\n    ivec2 rc;\n    \n    int rowSize = int(floor(iResolution.y / float(numRows)));\n    int colSize = int(floor(iResolution.x / float(numCols)));\n    rc.x = int(c.y) / rowSize;\n    rc.y = int(c.x) / colSize;\n    \n    return rc;\n}\n\nvec4 rows (vec2 fragCoord) {\n    \n    \n    fragCoord = rotate(fragCoord, iTime);\n    \n    fragCoord = distort1(fragCoord);\n    \n    fragCoord = rotate(fragCoord, iTime);\n    vec2 uv = fragCoord;\n    ivec2 rc = rowCol(fragCoord);\n    if (rc.y % 2 == rc.x % 2) {\n        return vec4(1.0);\n        // Time varying pixel color\n        vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n        // Output to screen\n        return vec4(col,1.0);\n        \n        \n    }\n    else {\n        return vec4(0.);\n        vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n        return vec4(vec3(1.0) - col, 1.0);\n    }\n    \n}\n\n\nvec4 pass1(in vec2 fragCoord) {\n    vec2 ndc = ndc(fragCoord);\n    \n    return rows(screenspace(ndc - 1.0));\n    \n    return vec4(0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = pass1(fragCoord);\n}","name":"Image","description":"","type":"image"}]}