{"ver":"0.1","info":{"id":"lsyyzV","date":"1522607733","viewed":249,"name":"Convert to 256 Colors","username":"draco_nite","description":"Canniballized the slider from https://www.shadertoy.com/view/Xdf3zB\nDithering has been implemented thanks to a friend who wishes to remain anonymous.\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["retro","slider","256colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const mat4 dither = mat4(\n    0, 8, 2, 10,\n    12, 4, 14, 6,\n    3, 11, 1, 9,\n    15, 7, 13, 5\n) / 16.;\n\nfloat getAdd(vec2 pos)\n{\n    int x = int(mod(pos.x, 4.));\n    int y = int(mod(pos.y, 4.));\n\n    return dither[y][x];\n}\n\n// round f to the nearest multiple of 1 / divisor\nfloat myRound( float col, float mul, float add )\n{\n    return min(floor ( col * mul + add ) / mul, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat splitCoord = (iMouse.x == 0.0) ? iResolution.x/2.0 : iMouse.x;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\t// texture\n    vec4 col = texture(iChannel0, uv);\n\n    float add = getAdd(fragCoord.xy);\n    if (fragCoord.x < splitCoord)\n    {\n        col.r = myRound( col.r, 8., add );\n        col.g = myRound( col.g, 8., add );\n        col.b = myRound( col.b, 4., add );\n    }\n    \n    // show slider position\n\tif (abs(fragCoord.x - splitCoord) < 1.0) \n    {\n\t\tcol = vec4(1,0,0,0);\n\t}\n    \n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}