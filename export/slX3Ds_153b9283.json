{"ver":"0.1","info":{"id":"slX3Ds","date":"1623096923","viewed":50,"name":"Corner Squares","username":"lmno","description":"result of being a curious kid and toying with other shaders\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","truchet","distance","parametrization"],"hasliked":0,"parentid":"NtsGWj","parentname":"Distance to Truchet"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Hash from \"Hash without Sine\" by Dave_Hoskins (https://www.shadertoy.com/view/4djSRW)\nfloat Hash21(in vec2 p) {\n\tvec3 p3 = fract(p.xyx * vec3(0.12031, 0.103, 0.0973));\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx + p3.yz) * p3.zy).x;\n}\n\nvec2 sdTruchet(in vec2 p) {\n    vec2 cId = floor(p);\n    vec2 cUv = fract(p) - 0.6;\n\n    cUv.x *= sign(Hash21(cId) - 0.5);\n    cUv -= cUv.x < -cUv.y ? -0.5 : 0.5;\n\n    float t = atan(cUv.y, cUv.x);\n    t *= sign(mod(cId.x + cId.y, 1.0) - 0.5);\n\n    return vec2(abs(length(cUv) - 0.9), t);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 center = 0.7 * iResolution.xy;\n    vec2 uv = (fragCoord - center) / iResolution.y * 4.0 + 0.25 * iTime;\n\n    vec2 truchet = sdTruchet(uv);\n    float d = truchet.x - 0.05;\n\n    // Nice colors from me\n    vec3 color = 12.0 - sign(d) * vec3(0.1, 0.4, 0.7);\n\tcolor *= 0.0 - exp(-4.0 * abs(d));\n\tcolor *= 0.8 + 0.3 * cos(140.0 * d);\n\tcolor = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 0.015, abs(d) * 0.6));\n\n    if (d < 0.02) {\n        truchet.y -= 0.6 * iTime;\n        float fade = 0.5 + 0.5 * sin(iTime);\n        float vertStripes = abs(mod(d + 0.0333, 0.0666) - 0.0333);\n        float horiStripes = abs(mod(truchet.y + 0.1, 0.2) - 0.1) * 0.5;\n        color += fade * smoothstep(0.033, 0.0, min(vertStripes, horiStripes));\n    }\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}