{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// vincent francois - cyanux/2014\n// xor noise\n\n#define BITS 8.0\n\nfloat xor(vec2 p)\n{\n\tfloat ret = 0.0;\n\n\tfor(float i = BITS; i > 1.0; i--)\n\t{\n\t\tfloat j = exp2(i);\n\n\t\tif((j < p.x)  ^^ (j < p.y))\n\t\t\tret += j;\n\n\t\tif(j < p.x)\n\t\t\tp.x -= j;\n\n\t\tif(j < p.y)\n\t\t\tp.y -= j;\n\t}\n\n\treturn ret;\n}\n\nfloat noise(vec2 p, float z)\n{\n\treturn fract(xor(p) / z);\n}\n\n// hsv2rgb - iq / https://www.shadertoy.com/view/MsS3Wc\nvec3 hsv2rgb( in vec3 c ) {\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) * 512.0;\n\t\n\tfloat h = (sin(2.0 * iTime + fragCoord.y / iResolution.y) + 1.0) * 0.2 + 0.2;\n\tfloat v = noise(uv, ceil(mod(iTime * 32.0, 512.0)));\n\tfragColor.rgb = hsv2rgb(vec3(h, 1.0, v));\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4ssSzf","date":"1405176723","viewed":191,"name":"x0rn01s3","username":"cyanux","description":"Simple xor noise - saturday is cool :$","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise","xor"],"hasliked":0,"parentid":"","parentname":""}}