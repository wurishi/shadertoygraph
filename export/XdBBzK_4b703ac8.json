{"ver":"0.1","info":{"id":"XdBBzK","date":"1501047037","viewed":330,"name":"Braid","username":"liamboone","description":"Inspired by https://beesandbombs.tumblr.com/image/161777921639","likes":21,"published":1,"flags":0,"usePreview":0,"tags":["distancefunction","circle","moon","cmyk","crescent"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define saturate(x) (clamp(x, 0., 1.))\n\n\nconst float PI = 3.14159;\n\nfloat ring(vec2 pos, float radius, float width)\n{\n    float h_width = width * 0.5;\n    float d = length(pos);\n    return (smoothstep(radius - h_width - 0.01, radius - h_width, d) - \n            smoothstep(radius + h_width, radius + h_width + 0.01, d));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//Get coordinates in the range [-1.0, 1.0]\n    vec2 uv = (fragCoord.xy) / iResolution.xy;\n    uv = (uv - 0.5) * 2.0; \n\n    //Adjust for aspect ratio\n    vec2 aspect_uv = uv * (iResolution.xy / iResolution.y);\n    \n    float theta = atan(aspect_uv.y, aspect_uv.x);\n    \n    float amp = max(0., exp(-(-cos(theta) * 0.5 + 0.5) * 14.) - 0.05);\n    float width = -cos(theta) * 0.5 + 0.5;\n    \n    float r = ring(aspect_uv, 0.6 + amp * (0.5 + 0.5 * sin((theta - iTime) * 15. + 0. * (2. * PI / 3.))) / 10., 0.2 * width);\n    float g = ring(aspect_uv, 0.6 + amp * (0.5 + 0.5 * sin((theta - iTime) * 15. + 1. * (2. * PI / 3.))) / 10., 0.2 * width);\n    float b = ring(aspect_uv, 0.6 + amp * (0.5 + 0.5 * sin((theta - iTime) * 15. + 2. * (2. * PI / 3.))) / 10., 0.2 * width);\n    \n    \n\tfragColor = vec4((1. - vec3(r, g, b) - vec3(length(uv * 0.1))) * vec3(ivec3(0xF4, 0xF4, 0xDF)) / 255., 1.);\n}","name":"Image","description":"","type":"image"}]}