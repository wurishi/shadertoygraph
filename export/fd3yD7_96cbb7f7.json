{"ver":"0.1","info":{"id":"fd3yD7","date":"1653512624","viewed":194,"name":"Impossibly big canvas","username":"rory618","description":"Use WASD or arrow keys to move and Q/E to zoom in and out, draw by holding the mouse. Z/X and C/V to slide/step through extra animation dimension \n\nHow can it even exist? ;)\n","likes":10,"published":1,"flags":48,"usePreview":0,"tags":["draw","hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"getters\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 P0 = texelFetch(iChannel1, ivec2(0,0),0);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= .5;\n    uv *= P0.z;\n    uv += P0.xy;\n\n    float a = 1.;\n    fragColor = vec4(0);\n    vec4 A;\n    for(float s = 1.; s < iResolution.x/P0.z/4.; s *= 1.5){\n\n        int c = MRHI(1./ceil(s),uv)+int(P0.w);\n\n        A = sampleIndex(c%(1024*1024*6));\n        \n        a = min(a,A.w);\n        fragColor /= 3.;\n        fragColor += min(1.,a)*A;\n    }\n    fragColor /= max(1.,fragColor.w);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//Comment this out if drawing is too laggy\n#define segments\n\n#define isIcon (!(iChannelResolution[1].y > 1.) || iChannelResolution[1].y < 350.)\nint MRHI(float r, vec2 x){\n    vec2 c0 = floor(x/r);\n    vec2 c1 = c0+1.;\n    return 0x3fffffff&((int(c0.x) * 4435) ^ (int(c0.y)*2654435761) ^ (int(1./r) * 805459861));\n}\n\n\n//Cubemap utils to convert between a 1024 x 1024 x 6 buffer coordinate to a cubemap ray direction\nvec3 XYFaceToRayDir(ivec3 p){\n    vec2 x = vec2(p-512) + 0.5;\n           if (p.z==0){     return vec3( 512,-x.y,-x.x);\n    } else if (p.z==1){     return vec3( x.x, 512, x.y);\n    } else if (p.z==2){     return vec3( x.x,-x.y, 512);\n    } else if (p.z==3){     return vec3(-512,-x.y, x.x);\n    } else if (p.z==4){     return vec3( x.x,-512,-x.y);\n    } else if (p.z==5){     return vec3(-x.x,-x.y,-512);\n    } else return vec3(0);\n}\nivec3 RayDirToXYFace(vec3 dir){\n    \n    if        (dir.x>max(abs(dir.y),abs(dir.z))){\n        dir /= dir.x/512.;\n        return ivec3(-dir.z+512.0, -dir.y+512., 0);\n    } else if (dir.y>max(abs(dir.z),abs(dir.x))){\n        dir /= dir.y/512.;\n        return ivec3(dir.x+512., dir.z+512.,1);\n    } else if (dir.z>max(abs(dir.x),abs(dir.y))){\n        dir /= dir.z/512.;\n        return ivec3(dir.x+512.,-dir.y+512.,2);\n    } else if (-dir.x>max(abs(dir.y),abs(dir.z))){\n        dir /=-dir.x/512.;\n        return ivec3(dir.z+512.,-dir.y+512.,3);\n    } else if (-dir.y>max(abs(dir.z),abs(dir.x))){\n        dir /=-dir.y/512.;\n        return ivec3(dir.x+512.,-dir.z+512.,4);\n    } else if (-dir.z>max(abs(dir.x),abs(dir.y))){\n        dir /=-dir.z/512.;\n        return ivec3(-dir.x+512.,-dir.y+512.,5);\n    } else return ivec3(0,0,-1);\n}\nint RayDirToInd(vec3 dir){\n    ivec3 XYFace = RayDirToXYFace(dir);\n    return XYFace.x + XYFace.y * 1024 + XYFace.z * 1024 * 1024;\n}\n\n\n//Functions to sample a particle coordinate from the cubemap as a 1024 x 6144 buffer and a 16384 x 384 buffer\n#define getters \\\nvec4 sampleIndex(int ind){\\\n    ivec3 XYFace = ivec3(ind%1024, (ind/1024)%1024, ind/(1024*1024));\\\n\treturn texture(iChannel0, XYFaceToRayDir(XYFace));\\\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dX3Rr","channel":0}],"code":"getters\n\nvoid mainCubemap( out vec4 fragColor, in vec2 fragCoord, in vec3 rayOri, in vec3 rayDir )\n{\n    int index = RayDirToInd(rayDir);\n    fragColor = sampleIndex(index);\n    \n    vec4 P0 = texelFetch(iChannel1, ivec2(0,0),0);\n    vec4 PN = texelFetch(iChannel1, ivec2(3,0),0);\n    vec4 M0 = texelFetch(iChannel1, ivec2(2,0),0);\n    \n    vec2 uv = iMouse.xy/iChannelResolution[1].xy;\n    vec2 uvp = M0.xy/iChannelResolution[1].xy;\n    if(isIcon){\n        uv = vec2(cos(iTime*1.45),sin(iTime*1.45))*.4+.5;\n    }\n    uvp -= 0.5;\n    uv -= 0.5;\n    uv *= P0.z;\n    uvp *= PN.z;\n    uv += P0.xy;\n    uvp += PN.xy;\n    vec2 d = (uv-uvp); \n    \n    if(iMouse.z>0. && M0.z>0. || isIcon){\n    \n        for(float l = 0.; l <= 1.; l+=0.125){\n            \n            uvp = uv - l*d; \n            for(float s = 1.; s < 1e8; s *= 1.5){\n\n                vec3 col = 0.75 + 0.25*cos(iTime+uvp.xyx+vec3(0,2,4));\n\n                int c = MRHI(1./ceil(s),uvp)+int(P0.w);\n                if(c%(1024*1024*6)==index){\n                    fragColor=vec4(col,1);\n                }\n            }\n            #ifndef segments\n            break;\n            #endif\n        }\n    }\n    if(iFrame<3){\n        fragColor = vec4(0);\n    }\n    \n}","name":"Cube A","description":"","type":"cubemap"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 P0 = texelFetch(iChannel1, ivec2(0,0),0);\n    if(iFrame<3){\n        P0.xy = vec2(50.);\n        P0.z = 1.;\n        if(isIcon){\n            P0.z = 1e-3;\n        }\n    }\n    if(texture( iChannel0, vec2(81./256.0,0.25) ).x > .5){\n        P0.z *= 1.05;\n        P0.z = min(P0.z, 30.);\n    }\n    if(texture( iChannel0, vec2(69./256.0,0.25) ).x > .5){\n        P0.z /= 1.05;\n        P0.z = max(P0.z,5e-5);\n    }\n    if(texture( iChannel0, vec2(87./256.0,0.25) ).x > .5 || texture( iChannel0, vec2(38./256.0,0.25) ).x > .5){\n        P0.y += P0.z/1e2*iResolution.x/iResolution.y;\n    }\n    if(texture( iChannel0, vec2(83./256.0,0.25) ).x > .5 || texture( iChannel0, vec2(40./256.0,0.25) ).x > .5){\n        P0.y -= P0.z/1e2*iResolution.x/iResolution.y;\n    }\n    if(texture( iChannel0, vec2(68./256.0,0.25) ).x > .5 || texture( iChannel0, vec2(39./256.0,0.25) ).x > .5){\n        P0.x += P0.z/1e2;\n    }\n    if(texture( iChannel0, vec2(65./256.0,0.25) ).x > .5 || texture( iChannel0, vec2(37./256.0,0.25) ).x > .5){\n        P0.x -= P0.z/1e2;\n    }\n    if(texture( iChannel0, vec2(88./256.0,0.25) ).x > .5 || texture( iChannel0, vec2(67./256.0,0.5) ).x > .5){\n        P0.w += 1.;\n    }\n    if(texture( iChannel0, vec2(90./256.0,0.25) ).x > .5 || texture( iChannel0, vec2(86./256.0,0.5) ).x > .5){\n        P0.w -= 1.;\n    }\n    if(isIcon){\n        P0.z /= 1.0 + cos(iTime/4.)/60.;\n    }\n    fragColor = P0;\n    if(floor(fragCoord)==vec2(1,0)){\n        fragColor = iMouse;\n    }\n    if(floor(fragCoord)==vec2(2,0)){\n        fragColor = texelFetch(iChannel1, ivec2(1,0),0);\n    }\n    if(floor(fragCoord)==vec2(3,0)){\n        fragColor = texelFetch(iChannel1, ivec2(0,0),0);\n    }\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}