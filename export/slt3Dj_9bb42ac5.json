{"ver":"0.1","info":{"id":"slt3Dj","date":"1636771056","viewed":247,"name":"Fork bending sp hypnothala 005","username":"hypnothalamus","description":"bending space proof of concept\n","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["warp","transform","bend"],"hasliked":0,"parentid":"7tdGWj","parentname":"bending space"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 bend( vec2 uv, float angle )\n{\n    const float BLOCK_HEIGHT = 1.;\n    const float BLOCK_WIDTH = .25;\n\n    float bendSign = angle < 0. ? -1. : 1.;\n    float bendRadius = BLOCK_HEIGHT / abs( angle );\n    \n    vec2 p = uv * vec2( bendSign, 1. ) + vec2( bendRadius, 0. );\n    \n    return vec2( ( length( p ) - bendRadius ) / BLOCK_WIDTH * bendSign + .5, atan( p.y, p.x ) / abs( angle ) + .5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    //uv.y += .5;\n      \n    float bendAngle = sin( iTime * 3. + .0001 ) * 6.28;        \n    \n    vec2 textureUV = bend( uv, bendAngle );\n    float textureUVIsValid = textureUV.x >= 0. && textureUV.x < 1. && textureUV.y >= 0. && textureUV.y < 1. ? 1. : 0.;\n                      \n    vec3 col = vec3( sin(textureUV*3.14*10.), .5 ) * textureUVIsValid;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}