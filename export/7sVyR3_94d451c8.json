{"ver":"0.1","info":{"id":"7sVyR3","date":"1655312699","viewed":250,"name":"Icy fractal temple","username":"seven_dc","description":"Icy temple. Original https://t.co/tWVg3jAivY\nungolfed and added color and tweaks by seven_dc\n\n\n","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["fractalicy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Orginal piece by @zozuar\n// https://twitter.com/zozuar/status/1536454329338560514?s=20&t=GzasjlHDpX-9uAmBlB5PgQ\n\nfloat PI = 3.1415926538;\n\nmat2 Rotate(float a) {\n  float s = sin(a);\n  float c = cos(a);\n  return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec3 point,color;\n    \n    float e,g,v;\n    \n    for(float i;i++<50.;color+=.025/exp(e*700.)){\n        v=2.;\n        vec3 point=vec3((gl_FragCoord.xy-iResolution.xy/v)/iResolution.y*g,g);\n        \n        point.xy*=Rotate(cos(iTime)/4.);\n        point.xz*=Rotate(iTime/2.);\n        point.z+=sin(iTime)/PI + (iTime*.2);\n        \n        point=abs(fract(point)-.5)+.15;\n        \n        if (point.x>point.y) {\n            point.xy=point.yx;\n        }\n        \n        if (point.y<point.z) {\n            point.yz=point.zy; \n        }\n        \n       \n        for(int j;j++<16;point=abs(point)/e-.25) { \n            point.y-=3.5-g*.4;\n            v/=e=min(dot(point,point)+.1,.5); \n        }\n        g+=e=length(point)/v;\n    }\n    color.r -= g/5.;\n    color.b += e*6.;\n    color.g += g/45.;\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}