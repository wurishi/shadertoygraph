{"ver":"0.1","info":{"id":"7sjBWh","date":"1646184543","viewed":127,"name":"genesis w1p","username":"natnatnat","description":"genesis wip","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["water","moon"],"hasliked":0,"parentid":"NdsBW2","parentname":"m0on"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14,\n      A = .5,\n      SW = 3.,\n      F = 1.,\n      R = .8,\n      N = 10.,\n      M = 10.,\n      Z = 10.;\nconst vec2 C = vec2(-1., .6);\nconst vec2 B = vec2(0., -7.);\n\nvoid mainImage( out vec4 O, in vec2 u )\n{\n    vec2 Res = iResolution.xy, \n        U = Z * ( 2. * u - Res ) / Res.y;   \n\n    float SR = .2;\n    float S = .03;\n    float r = distance(U, Z * C);\n    float cor = 1. - smoothstep(R * .7, R, r);\n    vec3 star = vec3(cor/SR);\n\n    for(float i = 1.; i < M; i++) {\n        float Rd = R * SR * i;\n        float R = R * i;\n        for(float j = 1.; j < N; j++) {\n            float phase0 = j * (2. * PI)/N;\n            float phase1 = i * (PI)/M;\n            float a = R * phase0 + iTime/10.;\n            r = distance(U - Z * C, Rd * vec2(-sin(a) + 1.7, cos(a) - 1.7));\n            cor = 1. - step(R, r);\n            vec4 sky = vec4(cor) * S * SR;\n            O += sky;\n    \n            // water\n            float angle = F * U.x + iTime + phase0 + phase1;\n            float ysin = A * sin(angle) + SW * sin(a) + B.y;\n            float wave = smoothstep(0.2, 0., abs(U.y - ysin));\n            O += vec4(0., 0., .9, 1.) * wave * S * SR * 30. * (1. - 3./abs(U.y));\n            // TODO: Add vertical waves\n        }\n    }\n\n    O+= vec4(star, 1.);\n}\n","name":"Image","description":"","type":"image"}]}