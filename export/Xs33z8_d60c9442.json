{"ver":"0.1","info":{"id":"Xs33z8","date":"1447895315","viewed":239,"name":"just another metaball","username":"sepehr","description":"a very simple metaball shader","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["metaball","morph"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const struct ShaderSettings\n{\n    float\tminRadius;\n    float \tverticalFreedom;\n    float \thorizontalFreedom;\n    float \tviscosity;\n    float\tsmoothness;\n    vec4\tclearColor;\n}\n\nSettings = ShaderSettings( .1, .3, .6, .4, 2., vec4( 0., 0., 0., 1. ) );\n\nconst vec4 background = vec4(.14, .16, .22, 1.);\nconst vec4 foreground = vec4(.95, .71, .19, 1.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = Settings.clearColor;\n    \n    float\ttimeCos\t= cos(iTime),\n        \ttimeSin = sin(iTime);\n    \n\tvec2 \tar\t\t= vec2( iResolution.x / iResolution.y, 1.),\n\t\t\tuv\t\t= ( fragCoord / iResolution.xy ) * ar,\n        \tcenter\t= vec2( .5, .5 ) * ar,\n        \toffset \t= vec2(\n                timeSin * timeCos * Settings.horizontalFreedom,\n                timeSin * Settings.verticalFreedom ) * ar;\n\t\n    float \td1 \t\t= length(center - uv),\n         \td2 \t\t= length(center + offset - uv),\n        \tavg\t\t= mix(d1, d2, smoothstep(-Settings.viscosity, Settings.viscosity, d1-d2)),\n    \t\tcolfact\t= smoothstep(0., Settings.smoothness / iResolution.y, avg - Settings.minRadius);\n    \n    fragColor = mix( background, foreground, 1. - colfact );\n}","name":"","description":"","type":"image"}]}