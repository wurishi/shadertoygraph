{"ver":"0.1","info":{"id":"XldBWn","date":"1539203625","viewed":384,"name":"Fractal striations","username":"xentrac","description":"This was an idea about how to get a somewhat random one-dimensional \"noise\" pattern with some coherence across multiple length scales: u ^ u << 2. I added some cubic sampling jitter to break up the obtrusive aliasing patterns from the rotation.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractal","1d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float scale = 1./min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord*scale;\n    float t = iTime / 40.;\n\n    vec2 fpos = fragCoord/iResolution.xy;\n    float jitter = 20. * (fpos.x + fpos.y + fract(iTime));\n    jitter = 2. * sin(iTime/16.18) * fract(jitter*jitter*jitter);\n\n    int u = int(dot(uv, 300. * vec2(cos(t), sin(t))) + jitter);\n    float i = float((u ^ u << 2) * 15 & 255)/255.0;\n    \n    fragColor = vec4(0.5 + 0.5*i*vec3(1,5,2),1.0);\n}","name":"Image","description":"","type":"image"}]}