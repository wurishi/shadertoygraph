{"ver":"0.1","info":{"id":"MdGGWh","date":"1454185447","viewed":1180,"name":"sobel edge detection demo","username":"LukasPukenis","description":"sobel edge detection","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["sobel","edgedetection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"mat3 Gx = mat3(-1.0, 0.0, 1.0,\n               -2.0, 0.0, 2.0,\n               -1.0, 0.0, 1.0);\n\nmat3 Gy = mat3(-1.0, -2.0, -1.0,\n               0.0, 0.0, 0.0,\n               1.0, 2.0, 1.0);\n\n\nfloat applyKernel(mat3 gx, mat3 gy, sampler2D sampler, vec2 uv) {\n    float final = 0.0;\n    \n   \n    float horizontal = 0.0;\n    float vertical = 0.0;\n    \n    for (int i = 0; i < 3; i++) {\n        for (int j = 0; j < 3; j++) {\n          vec2 d = vec2(float(i), float(j)) / iChannelResolution[0].xy;\n          float averagePixel = dot(texture(sampler, uv+d).xyz, vec3(0.33333));\n            \n          horizontal += averagePixel * gx[i][j];\n          vertical += averagePixel * gy[i][j];            \n        }\n    }\n    \n    final = sqrt(horizontal * horizontal + vertical * vertical);\n    return final;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 color = texture(iChannel0, uv);\n    float edgeIntensity = applyKernel(Gx, Gy, iChannel0, uv);\n    \n    vec4 edgeColor = mix(        \n        vec4(1.0, 1.0, 0.0, 1.0),\n        color,\n        1.0-edgeIntensity);\n    \n    color = mix(\n        color,\n        edgeColor,\n        step(0.5, uv.x));\n    \n\tfragColor = color;\n}","name":"","description":"","type":"image"}]}