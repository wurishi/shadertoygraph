{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// IbukiHash by Andante (https://twitter.com/andanteyk)\n// This work is marked with CC0 1.0. To view a copy of this license, visit https://creativecommons.org/publicdomain/zero/1.0/\nprecision highp float;\n\n// returns [0, 1).\n// v is assumed to be an integer\nfloat ibuki(vec4 v)\n{\n    const uvec4 mult = \n        uvec4(0xae3cc725, 0x9fe72885, 0xae36bfb5, 0x82c1fcad);\n\n    uvec4 u = uvec4(v);\n    u *= mult;\n    u ^= u.wxyz ^ u >> 13; \n    u *= mult;\n\n    uint r = u.x + u.y + u.z + u.w;\n    r ^= r >> 11;\n    r = (r * r) ^ r;\n        \n    return float(r) * 2.3283064365386962890625e-10;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // You can enter any value in the remaining dimensions.\n    float hash = ibuki(vec4(fragCoord.x, fragCoord.y, iFrame, 314159265));\n    fragColor = vec4(hash, hash, hash, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XX3yRn","date":"1734604104","viewed":1785,"name":"IbukiHash","username":"andanteyk","description":"IbukiHash - Fast and robust shader hashing\n\nHLSL version:\nhttps://gist.github.com/andanteyk/7581e025cc7e9af796b10032c61015a8\n","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["hash","rng"],"hasliked":0,"parentid":"","parentname":""}}