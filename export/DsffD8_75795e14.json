{"ver":"0.1","info":{"id":"DsffD8","date":"1688917957","viewed":56,"name":"first_swayam","username":"swayam_shree","description":"first shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Circle\n\nfloat circle(float radius, vec2 p, float blur, vec2 uv) {\n        float c = smoothstep(radius,radius-blur,length(uv-p));\n        return c;\n}\n\n\n//Rectangle\n\nfloat rectangle( float left, float right, float top, float bottom, float blur, vec2 uv)\n{\n    float recL = smoothstep(left-blur,left,uv.x);\n    float recR = smoothstep(right+blur,right,uv.x);\n    float recT = smoothstep(top+blur,top,uv.y);\n    float recB = smoothstep(bottom-blur,bottom,uv.y);\n    return recL*recR*recT*recB;\n}\n\n//Main\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n\n\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    vec2 uv = (fragCoord * 2. - iResolution.xy)/iResolution.y;\n    \n    //vec2 uv = (2.*fragCoord/iResolution.xy -1.);\n    //uv.x*=iResolution.x/iResolution.y;\n        \n    float c = circle(0.5,vec2(0.0),0.05,uv);\n    //c-= circle(0.6,vec2(0.5,0.0),0.2,uv);\n    \n    float mouth = circle(0.3,vec2(0.0),0.05,uv);\n    mouth-= circle(0.3,vec2(0.0,0.1),0.05,uv);\n    c-=mouth;\n    \n    uv.y-=sin(uv.x*4.+iTime*2.)*0.2;\n    float r = rectangle(-1.0,1.0,0.1,-0.1,0.05,uv);\n    \n    vec3 col = r*vec3(1.,0.,1.);\n    //fragColor = vec4(vec3(c),1.);\n    fragColor = vec4(col,1.);\n    \n}\n\n\n\n","name":"Image","description":"","type":"image"}]}