{"ver":"0.1","info":{"id":"4scyz7","date":"1518140417","viewed":336,"name":"Psychobessel","username":"dpiponi","description":"Just go full screen and drag the mouse around ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["specialfunctions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Order of Bessel function used\n\nconst int n = 3;\n\n// Really crappy algorithm using Simpson rule to evaluate\n// an integral representation.\n// Can't do n=0, integral goes singular.\n// Large n and r will be inaccurate\n// Increasing N may fix some of this but slow things down\nfloat bessel(float z) {\n    //int i;\n    const int N = 60;\n    const float iN = 1.0/float(N);\n    float s = 0.0;\n    float f = 1.0;\n    float r = 1.0;\n    for (int i = 0; i < n; ++i) {\n        f *= float(2*i+1);\n        r *= z;\n    }\n    float w;\n    float ws = -1.0;\n    float czt = 1.0;\n    float szt = 0.0;\n    float cz = cos(z*iN);\n    float sz = sin(z*iN);\n    float t = 0.0;\n    for (int i = 0; i <= N; ++i) {\n        float temp;\n        float w = i==0 || i==N ? 1.0 : 3.0+ws;\n        float p = 1.0;\n        float q = 1.0-t*t;\n        for (int j = 0; j < n-1; ++j) {\n            p *= q;\n        }\n        s += w*sqrt(q)*p*czt;\n        temp = czt*cz-szt*sz;\n        szt = czt*sz+szt*cz;\n        czt = temp;\n        ws = -ws;\n        t += iN;\n    }\n    return 2.0*r*s/(3.0*float(N)*3.1415926*f);\n}\n\n// Bessel function Re(J_n(r) exp(i n theta))\nfloat b(vec2 xy) {\n    float r = length(xy);\n    float theta = atan(xy.y, xy.x);\n    return bessel(r)*cos(float(n)*theta);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 o = vec2(0.5, 0.5);\n    vec2 oo = vec2(iMouse)/iResolution.xy;\n\n    // Compute a pair of Bessel functions offset by\n    // amount controlled by cursor.\n    float a = b(40.0*(uv-o));\n    float c = b(40.0*(uv-oo));\n\n    vec3 col1 = vec3(a, 1.0-2.0*a, 0.0);\n    vec3 col2 = vec3(c, 1.0-2.0*c, 0.0);\n    vec3 col3 = clamp(col1-col2, 0.0, 1.0);\n\n    fragColor = vec4(col3,1.0);\n}","name":"Image","description":"","type":"image"}]}