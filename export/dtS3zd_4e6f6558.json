{"ver":"0.1","info":{"id":"dtS3zd","date":"1673728711","viewed":98,"name":"Random smooth colors","username":"ianertson","description":"random smooth colors","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colors","random","value","smooth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 decant(float c) {\n  float w = floor((sqrt(c * 8. + 1.) - 1.) / 2.);\n  float y = float(c - (w * (w + 1.)) / 2.);\n  return vec2(float(w - y), y);\n}\n\nfloat rand0(vec2 n, float seed) {\n    n += vec2(0.01231, 0.02381);\n    float a = fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n    vec2 uv = decant(max(1.0, seed+0.23815));\n    float b = fract(sin(dot(n, uv)) * 43758.5453);\n    \n    return fract(sin(dot(n, vec2(a, b))) * 43758.5453);\n}\n\nvec2 randv2(vec2 n, float seed) {\n    float x = rand0(n + rand0(n, seed), seed);\n    float y = rand0(vec2(n.y-x, x), seed);\n    return vec2(y, rand0(vec2(x, y), seed));\n}\n\nfloat rand(vec2 n, float seed) {\n    vec2 n2 = randv2(n, seed);\n    vec2 r = randv2(n2, seed); \n    return mix(r.x, r.y, smoothstep(0.0, 1.0, n2.y));\n}\n\n\nfloat noise2D(vec2 uv, float seed) {\n    vec2 id = floor(uv);\n    vec2 lv = smoothstep(0.0, 1.0, fract(uv));\n    float a = rand(id, seed);\n    float b = rand(id + vec2(1.0, 0.0), seed);\n    float ab = mix(a, b, lv.x);\n    float c = rand(id + vec2(0.0, 1.0), seed);\n    float d = rand(id + vec2(1.0, 1.0), seed);\n    float cd = mix(c, d, lv.x);\n    return mix(ab, cd, lv.y);\n}\n\nvec3 randomColor(vec2 uv, float seed) {\n\n    float j0 = noise2D((uv*0.0001)+vec2(0.0125, 0.127), seed);\n    float j1 = noise2D((uv*0.0001)+vec2(0.0931, 0.7713), seed);\n    float j2 = noise2D((uv*0.0001)+vec2(0.1028, 0.4431), seed);\n    float o1 = noise2D(uv, seed+j0)*0.01*j0;\n    float o2 = noise2D(uv, seed+j1)*0.01*j2;\n    float o3 = noise2D(uv, seed+j2)*0.01*j1;\n    \n    float r = noise2D(uv, seed+o3);\n    float g = noise2D(uv, seed+o1);\n    float b = noise2D(uv, seed+o2);\n    \n    return vec3(r, g, b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n  \n    // Time varying pixel color\n    vec3 col = randomColor(uv*4.0, 3231.1928);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}