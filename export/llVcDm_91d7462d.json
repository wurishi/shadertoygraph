{"ver":"0.1","info":{"id":"llVcDm","date":"1536685106","viewed":90,"name":"Circle Tutorials","username":"cake7914","description":"1) Circle\n2) Smiley face\n3) Rectangle?\n4) Domain distortion","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur) //now we can easily make more circles\n{\n    float d = length(uv-p); //remaps point p to 0\n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n}\n\nfloat Band(float t, float start, float end, float blur)\n{\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    \n    return step1*step2; //by themselves makes an edge, together make a band (intersection)\n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur)\n{\n    float band1 = Band(uv.x, left, right, blur); //vertical band\n    float band2 = Band(uv.y, bottom, top, blur); //horizontal band\n    \n    return band1*band2; //intersection of the two\n}\n\nfloat Smiley(vec2 uv, vec2 p, float size) //function to make Smiley Face\n{\n    uv -= p; //translate the coordinate system\n    uv /= size; //scale the coordinate system\n    \n    float mask = Circle(uv, vec2(0.), .4, .01);\n    \n    mask -= Circle(uv, vec2(.13, .2), .07, .01); //sharper edge, smaller, moved left, moved up\n    mask -= Circle(uv, vec2(-.13, .2), .07, .01); //mirror image of the above\n        \n    float mouth = Circle(uv, vec2(0.), .3, .02);\n    mouth -= Circle(uv, vec2(0., 0.1), .3, .02);\n    \n    mask -= mouth;\n    \n    return mask;\n}\n\nfloat remap01(float a , float b, float t)\n{\n    return (t-a) / (b-a);\n    \n}\nfloat remap(float a, float b, float c, float d, float t)\n{\n   return remap01(a, b, t) * (d-c) + c;\n    \n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy; // -.5 <> .5\n\tuv -= 0.5; // actually a vector\n    uv.x *= iResolution.x/iResolution.y;    \n    \n    //vec2 p = vec2(.2, -.1);\n    \n    vec3 col = vec3(0., 0., 0.);\n    \n\tfloat mask = 0.;\n    \n    float x = uv.x;\n    float m = sin(iTime+x*8.0)*.1; //(x-.5)*(x+.5);\n    //m = m*m*4.;\n    float y = uv.y-m;      \n\n        \n        //Smiley(uv, vec2(0., .0), 1.0);\n    float blur = remap(-.5, .5, .01, .25, x);\n    mask = Rect(vec2(x, y), -.5, .5, -.1, .1, blur);\n    \n    //col = vec3(mouth);\n    \n    //if(d<.3) c = 1.0; else c = 0.0;     \n   \n    col = vec3(1., 1., 1.)*mask; //yellow                \n    //col = vec3(c);\n    fragColor = vec4(col, 1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}