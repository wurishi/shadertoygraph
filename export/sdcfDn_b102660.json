{"ver":"0.1","info":{"id":"sdcfDn","date":"1656332991","viewed":273,"name":"Tiled Mosaic Shader","username":"Cow_Bandit","description":"Simple Mosaic effect for any Channel. Moves in a sinusoidal fashion.","likes":8,"published":1,"flags":2,"usePreview":0,"tags":["webcam","mosaic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // The grid size\n    float gridWidth = 5.;\n    float gridHeight = 10.;\n    \n    // Basically the speed of the movement\n    float timeModifier = 1.;\n    // Fixed time delta to change the phase of movement of alternate y boundaries\n    float timeDelta = radians(90.);\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 channelColor = texture(iChannel0,uv);\n       \n    // Fill each cell\n    \n    float mody1 = mod(fragCoord.y+gridHeight*sin(iTime*timeModifier),gridHeight);\n    float mody2 = mod(fragCoord.y+gridHeight/2.-gridHeight*sin(iTime*timeModifier+timeDelta),gridHeight);\n    \n    float newx = fragCoord.x-mod(fragCoord.x,gridWidth);\n    float newy1 = fragCoord.y-mody1;\n    float newy2 = fragCoord.y-mody2;\n    \n    if(mod(fragCoord.x,gridWidth*2.) <= gridWidth)\n    {\n        vec2 rounduv = vec2(newx,newy1)/iResolution.xy;\n        channelColor = texture(iChannel0,rounduv);\n    }\n    else\n    {\n        vec2 rounduv = vec2(newx,newy2)/iResolution.xy;\n        channelColor = texture(iChannel0,rounduv);\n    }\n    \n    // Fill boundary\n    \n    //X boundary (Vertical lines)\n    if(mod(fragCoord.x,gridWidth)<=1.) channelColor = vec4(0,0,0,1);\n    \n    //Every alternate Y boundary is at a different height offset by gridHeight/2\n    if(mody1<=1. && mod(fragCoord.x,gridWidth*2.) <= gridWidth) channelColor = vec4(0,0,0,1);\n    if(mody2<=1. && mod(fragCoord.x,gridWidth*2.) >= gridWidth) channelColor = vec4(0,0,0,1);\n    \n    fragColor = channelColor;\n    \n}","name":"Image","description":"","type":"image"}]}