{"ver":"0.1","info":{"id":"DdVcz1","date":"1696706132","viewed":38,"name":"newton raphson method fractal","username":"SnackEater","description":"this coloring looks very christmassy","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 CMUL(vec2 a, vec2 b){\n    float r = length(a);\n    float theta = atan(a.y,a.x);\n    \n    float r2 = length(b);\n    float theta2 = atan(b.y,b.x);\n    \n    r *= r2;\n    theta += theta2;\n    \n    return r * vec2(cos(theta),sin(theta));\n}\n\nvec2 CDIV(vec2 a, vec2 b){\n    float r = length(a);\n    float theta = atan(a.y,a.x);\n    \n    float r2 = length(b);\n    float theta2 = atan(b.y,b.x);\n    \n    r /= r2;\n    theta -= theta2;\n    \n    return r * vec2(cos(theta),sin(theta));\n}\n\nvec2 POW(vec2 z, float p){\n    float r = length(z);\n    float theta = atan(z.y,z.x);\n    \n    r = pow(r,p);\n    theta *= p;\n    \n    return r * vec2(cos(theta),sin(theta));\n}\n\nvec2 F(vec2 z){\n    z = POW(z,3.) - vec2(1,0);\n    \n    return z;\n}\n\nvec2 FPRIME(vec2 z){\n    z = CMUL(vec2(3,0),POW(z,2.));\n\n    return z;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n \n   \n    vec2 z = uv;\n    for(int i = 0;i < 100;i++){\n        z -= CDIV(F(z),FPRIME(z));\n    }\n    col.r=.1/z.y;\n    col.g=-.1/z.y;\n    col.b=.1/z.x;\n     \n    \n\n    \n    \n   \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}