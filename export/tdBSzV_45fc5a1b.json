{"ver":"0.1","info":{"id":"tdBSzV","date":"1554347246","viewed":294,"name":"newblarg","username":"brad_grantham","description":"new","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["new"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy/2.0)/iResolution.y;\n\n    // Plot a function.\n    if (false) {\n        // -1 to 1.\n        float x = uv.x*2.0;\n\n        // -1 to 1.\n        float y = mix(0.8, -0.8, (x + 1.0)/2.0);\n\n        uv = vec2(1.0, 1.0)*(uv.y < y/2.0 ? 1.0 : 0.0);\n    }\n\n    // Vector test.\n    if (false) {\n        uv = normalize(uv);\n        vec2 n = vec2(0.0, 1.0);\n        uv = reflect(uv, n);\n    }\n\n    // Matrix test.\n    if (true) {\n        float a = 10.0*3.14159/180.0;\n        float s = sin(a);\n        float c = cos(a);\n        mat2 m = mat2(c, s, -s, c);\n\n        uv = uv*m;\n\n        // Checkerboard.\n        uv = floor(mod(uv*vec2(10.0), 2.0));\n    }\n\n\n    fragColor = vec4(uv, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}