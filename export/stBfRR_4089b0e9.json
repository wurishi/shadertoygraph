{"ver":"0.1","info":{"id":"stBfRR","date":"1651698035","viewed":88,"name":"Single Flower using Smooth Min","username":"LoganOracio","description":"Really nothing more to it","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["flower","smin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smin(float a, float b, float k) {\n    float h = clamp(0.5 + 0.5*(a-b)/k, 0.0, 1.0);\n    return mix(a, b, h) - k*h*(1.0-h);\n}\nuint murmurHash11(uint src) {\n    const uint M = 0x5bd1e995u;\n    uint h = 1190494759u;\n    src *= M; src ^= src>>24u; src *= M;\n    h *= M; h ^= src;\n    h ^= h>>13u; h *= M; h ^= h>>15u;\n    return h;\n}\nfloat hash11(float src) {\n    uint h = murmurHash11(floatBitsToUint(src));\n    return uintBitsToFloat(h & 0x007fffffu | 0x3f800000u) - 1.0;\n}\nuvec3 murmurHash31(uint src) {\n    const uint M = 0x5bd1e995u;\n    uvec3 h = uvec3(1190494759u, 2147483647u, 3559788179u);\n    src *= M; src ^= src>>24u; src *= M;\n    h *= M; h ^= src;\n    h ^= h>>13u; h *= M; h ^= h>>15u;\n    return h;\n}\nvec3 hash31(float src) {\n    uvec3 h = murmurHash31(floatBitsToUint(src));\n    return uintBitsToFloat(h & 0x007fffffu | 0x3f800000u) - 1.0;\n}\nmat2 rotate(float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\treturn mat2(c, -s, s, c);\n}\nfloat flower(vec2 uv)\n{\n    float a = ( mod(6.*atan(uv.y,uv.x)+3.14,6.283)-3.14*4. )/6.;\n    uv = length(uv) * vec2(cos(a),sin(a));\n    float p = length(uv)*.5;\n    p = smin(p,length(uv+vec2(.0,.5)),.15);\n    \n    return smoothstep(.8,-.8,(p-.15)/fwidth(p));\n}\nfloat flower2(vec2 uv,float seed)\n{\n    float h = hash11(seed);\n    vec3 mon_gros_zgeg = hash31(h);\n    float p = length(uv + ((mon_gros_zgeg.xy-.5)*.03))*.5*(mon_gros_zgeg.z*.1+.9);\n    for (int i = 0; i < 6; i++)\n    {\n        h = hash11(h);\n        mon_gros_zgeg = hash31(h);\n        p = smin(p,length(rotate(float(i)*-1.0471975512)*uv+vec2(.0,-.5)+ ((mon_gros_zgeg.xy-.5)*.03))*(mon_gros_zgeg.z*.1+.95),.15);\n    }\n    \n    return smoothstep(.8,-.8,(p-.15)/fwidth(p));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    \n    fragColor = vec4(vec3(flower2(rotate(1.0471975512/2.)*uv,floor(iTime))),1.0);\n}","name":"Image","description":"","type":"image"}]}