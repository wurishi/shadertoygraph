{"ver":"0.1","info":{"id":"MtsSzB","date":"1437733394","viewed":245,"name":"trianglesTT","username":"motte","description":"triangles","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["triangles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float signf (vec2 p1, vec2 p2, vec2 p3)\n{\n    return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n}\n\nbool PointInTriangle (vec2 pt, vec2 v1, vec2 v2, vec2 v3)\n{\n    bool b1, b2, b3;\n    b1 = signf(pt, v1, v2) < 0.0;\n    b2 = signf(pt, v2, v3) < 0.0;\n    b3 = signf(pt, v3, v1) < 0.0;\n    return ((b1 == b2) && (b2 == b3));\n}\n\nvec2 getTriPoint(float shift)\n{\n    float r = 0.9;\n    float rsqr = r*r;\n    float t = mod(iTime*0.1 + shift,  3.1415*0.5);\n    float tsqr = t*t;\n    \n    float x = sin(t);\n    float y = cos(t) ;\n    \n    return vec2(x * 0.5, y);\n}\n\nfloat distanceToEdge(vec2 point)\n{\n    return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float c = 0.0;\n    \n    for (int i=0;i<7;i++)\n    {\n        vec2 p = getTriPoint(float(i)*0.9);\n        vec2 left = vec2(-p.x+0.5, p.y);\n        vec2 right = vec2(p.x+0.5, p.y);\n    \n        if (PointInTriangle(uv, right, left, vec2(0.5,0.0) ))\n        {\n            float distanceToEdge = length(uv-left);\n            \n            float d = clamp(distanceToEdge, 0.0, 1.0);\n            \n            c += 0.081;\n        }\n    }\n\n    \n    fragColor = vec4(0.98,0.7,0.5,1.0) + vec4(c,c,c,1);\n}","name":"","description":"","type":"image"}]}