{"ver":"0.1","info":{"id":"wsccWM","date":"1601001272","viewed":104,"name":"packSnorm4x8 vs packSnorm3x10","username":"iY0Yi","description":"My packSnorm3x10 test.\n\nTop: packSnorm4x8\nCenter: packSnorm3x10\nBelow: raw data\n\nIt seems OK.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["pack","data"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// My packSnorm3x10 test.\n// Top: packSnorm4x8\n// Center: packSnorm3x10\n// Below: raw data\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec4 data = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    vec3 bufA4 = abs(unpack4(data.x).xyz);\n    vec3 bufA3 = abs(unpack(data.y));\n    float raw = abs(data.z);\n    \n    const float g = .5;\n    \n    if(false)\n        fragColor = vec4(1);\n    \n    // packSnorm4x8\n    else if(uv.y>=.8 && uv.y<.9 && uv.x<bufA4.x)fragColor=vec4(1,g,g, 1);\n    else if(uv.y>=.7 && uv.y<.8 && uv.x<bufA4.y)fragColor=vec4(g,1,g, 1);\n    else if(uv.y>=.6 && uv.y<.7 && uv.x<bufA4.z)fragColor=vec4(g,g,1, 1);\n\n    // packSnorm3x10\n    else if(uv.y>=.4 && uv.y<.5 && uv.x<bufA3.x)fragColor=vec4(1,g,g, 1);\n    else if(uv.y>=.3 && uv.y<.4 && uv.x<bufA3.y)fragColor=vec4(g,1,g, 1);\n    else if(uv.y>=.2 && uv.y<.3 && uv.x<bufA3.z)fragColor=vec4(g,g,1, 1);\n        \n    // raw data\n    else if(uv.y>=.0 && uv.y<.1 && uv.x<raw)fragColor=vec4(1);\n\n\telse fragColor = vec4(vec3(.1), 1);\n        \n    // raw data as vertical line\n    //fragColor.rgb += smoothstep(.999,.9991, 1.-abs(uv.x-raw)-.0005);\n        \n    fragColor.rgb = pow(fragColor.rgb, vec3(.4545));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"uint packSnorm3x10(vec3 x) {\n    x = clamp(x,-1., 1.) * 511.;\n    uvec3 sig = uvec3(mix(vec3(0), vec3(1), greaterThanEqual(sign(x),vec3(0))));\n    uvec3 mag = uvec3(abs(x));\n    uvec3 r = sig.xyz << 9 | mag.xyz;\n    return r.x << 22 | r.y << 12 | r.z << 2;\n}\n\nvec3 unpackSnorm3x10(uint x) {\n    uvec3 r = (uvec3(x) >> uvec3(22, 12, 2)) & uvec3(0x3FF);\n    uvec3 sig = r >> 9;\n    uvec3 mag = r & uvec3(0x1FF);\n    vec3 fsig = mix(vec3(-1), vec3(1), greaterThanEqual(sig, uvec3(1)));\n    vec3 fmag = vec3(mag) / 511.;\n    return fsig * fmag;\n}\n\nuint packSnorm4x8(vec4 x) {\n    x = clamp(x,-1.0, 1.0) * 127.0;\n    uvec4 sig = uvec4(mix(vec4(0), vec4(1), greaterThanEqual(sign(x),vec4(0))));\n    uvec4 mag = uvec4(abs(x));\n    uvec4 r = sig << 7 | mag;\n    return r.x << 24 | r.y << 16 | r.z << 8 | r.w;\n}\n\nvec4 unpackSnorm4x8(uint x) {\n    uvec4 r = (uvec4(x) >> uvec4(24, 16, 8, 0)) & uvec4(0xFF);\n    uvec4 sig = r >> 7;\n    uvec4 mag = r & uvec4(0x7F);\n    vec4 fsig = mix(vec4(-1), vec4(1), greaterThanEqual(sig,uvec4(1)));\n    vec4 fmag = vec4(mag) / 127.0;\n    return fsig * fmag;\n}\n#define pack(x) uintBitsToFloat(packSnorm3x10(x))\n#define unpack(x) unpackSnorm3x10(floatBitsToUint(x))\n#define pack4(x) uintBitsToFloat(packSnorm4x8(x))\n#define unpack4(x) unpackSnorm4x8(floatBitsToUint(x))\n","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159265\nfloat swTri(float v){\n    return asin(sin(v*PI))*2./PI;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float speed = .05;\n    float val = swTri(iTime*speed);\n    if(iMouse.z>.5)\n        val = iMouse.x/iResolution.x;\n    \n    float x = val;\n    float y = val;\n    float z = val;\n    fragColor = vec4(pack4(vec4(x,y,z,1)),pack(vec3(x,y,z)),x,1);\n}","name":"Buffer A","description":"","type":"buffer"}]}