{"ver":"0.1","info":{"id":"st3XWX","date":"1639873477","viewed":761,"name":"PESA radar emitter","username":"mlaang","description":"I imagine emitter elements placed at (0.1,i) i=0:0.02:1, generating wavefronts like in a PESA radar. Because intensity is proportional the square of amplitude and the intensity follows inverse square law the amplitude is divided down by distance.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["radar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float scale = 6.0;\nconst float emitters = 30.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = uv*scale;\n    \n    float c = 0.0,\n          dist;\n    for(float i=0.0; i <= 1.0; i+=1.0/emitters) {\n        dist = length(uv - vec2(0.1, (scale-0.5)/2.0+i*0.5));\n        float phase = i*30.0*sin(iTime);\n        c += 20.0*sin(200.* dist + phase)/(dist)/emitters;\n    }\n\n    // Time varying pixel color\n    vec3 col = vec3(c, c, c);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}