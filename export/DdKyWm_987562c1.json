{"ver":"0.1","info":{"id":"DdKyWm","date":"1696359829","viewed":39,"name":"ns- 1","username":"novastruck","description":"Art from my mistakes while RayMarching.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define PI 3.141592\nmat2 Rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c , -s , s ,c);\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat getDist(vec3 p){\np.yz += iTime * 2.;\np.z -= .12;\n    float t1=length(mod(p.x ,p.z));\n    vec3 p1 = p;\n    float g = abs(dot(sin(p) , cos(p1.zxy)) -2.) - .3;\n    float t = abs(t1);\n    float b = sdBox(p , vec3(1.));\n    t *= 1.;\n    return g;\n}\n\n\nfloat rayMarch(vec3 ro , vec3 rd){\n    float dO = 0.;\n    for(int i = 0; i < 92; i++){\n        vec3 p = ro + rd * dO;\n        float ds = getDist(p);\n        dO += ds;\n        if(dO > 100. || ds < 0.01)break;\n    }\n    \n    return dO;\n}\n\nvec3 getNormal(vec3 p){\n    vec2 e = vec2(0.01 ,0);\n    vec3 n = getDist(p) - vec3(getDist(p) - getDist(p - e.xyy) , getDist(p - e.yxy) , getDist(p - e.yyx));\n    return normalize(n);\n}\n\nvec3 getRayDir(vec2 uv ,vec3 p , vec3 l , float z){\n    vec3 f = normalize(l - p);\n    vec3 r = normalize(cross(vec3(0, 1 , 0), f));\n    vec3 u = cross(f , r);\n    vec3 c = f * z;\n    vec3 i = c + uv.x * r + uv.y * u;\n    return normalize(i);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord * 2. - iResolution.xy)/iResolution.y;\n    vec2 uv1 =fragCoord/ iResolution.xy;\n    vec2 m = iMouse.xy/iResolution.xy;\n    vec3 ro = vec3(0 , 1 , -2);\n    ro.yz *= Rot(-m.y * 3.141592 + 1.);\n    ro.xz *= Rot(-m.x * 6.283185);\n    vec3 rd = getRayDir( uv , ro , vec3( 0 , 0 , 0), 1.);\n    float d = rayMarch(ro , rd);\n    vec3 col = vec3(0.);\n    if(d < 100.){\n        vec3 p = ro + rd *d;\n        vec3 n = getNormal(p);\n        float dif = n.y *.5 + .5;\n        col += dif * dif;\n        col += vec3( -cos(iTime) * .5 +.5,sin(iTime)*.5+.5 ,-cos(iTime)*.5+.5);\n    }\n   col *= uv1.xyx;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}