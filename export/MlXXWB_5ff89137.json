{"ver":"0.1","info":{"id":"MlXXWB","date":"1439336374","viewed":148,"name":"Logistic Map","username":"metabog","description":"Hmm...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["chaos","logisticmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"//Solving a lorenz attractor with different params at each pixel\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat distanceThresh = 10.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    uv.x = uv.x-0.3;\n    float r  = (uv.x)*iTime;\n\tfloat x = uv.y;\n    //iterate at this pixel for a while and solve lorenz oscillator equations\n    float mean = 0.0;\n    \n    for(int i = 0; i <22; i++)\n    {\n\t\tx = r*x*(1.0-x);\n        mean+=x;\n    }\n    mean=mean/12.0;\n    \n   float variance = 0.0;\n    x = uv.y*sin(iTime);\n     for(int i = 0; i <11; i++)\n    {\n\t\tx = r*x*(1.0-x);\n        float dif = mean -x;\n        dif = dif*dif;\n        variance+=dif;\n    }\n    variance = variance/12.0;\n    \n    \n    float dis = x;\n    \n    vec3 col;\n\n         col = hsv2rgb(vec3(dis,1.0,1.0)); \n \n        \n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}