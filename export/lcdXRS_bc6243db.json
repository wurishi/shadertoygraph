{"ver":"0.1","info":{"id":"lcdXRS","date":"1714091521","viewed":281,"name":"Bubble plasma giant","username":"ChunderFPV","description":"Hex moire grid with transformed coords.","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","interference","space","moire","hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Moire 3d template\" by ChunderFPV. https://shadertoy.com/view/lc3SWN\n\n#define A(a) mat2(cos(a*6.2832+vec4(0, -1.5708, 1.5708, 0)))  // rotate\n#define O(x,a,b) ((cos(x*6.2832)*.5+.5)*(a-b)+b)  // oscillate x between a & b\n#define H(v) O(radians(vec3(0, 60, 120))+(v), 1., 0.)  // hue\n\n// hex grid ( from FabriceNeyret2 )\nvec2 hg(vec2 u)\n{\n    vec2 o = vec2(.5, .866),\n         a = mod(u,   o+o)-o,\n         b = mod(u-o, o+o)-o;\n    return dot(a,a) < dot(b,b) ? a : b;\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float t = mod(iTime/60., 10.), // 60 sec between ints, repeat after 10\n          d = 0., i = d, s, r, n, nt;\n    \n    vec2 R = iResolution.xy,\n         m = (iMouse.xy-.5*R)/R.y; // mouse coords\n    \n    if (iMouse.z < 1.) m = vec2(t, -.35); // not clicking\n    \n    vec3 o = vec3(0, 0, -O(t/2., 80., 110.)), // camera\n         u = normalize(vec3(U-R/2., R.y*.7)), // coords\n         c = vec3(0), p, q;\n    \n    mat2 rh = A(m.x), // rotate horizontal\n         rv = A(m.y); // rotate vertical\n    \n    for (; i++<1e2;) // raymarch loop\n    {\n        p = o+u*d;\n        p.xz *= rh;\n        p.yz *= rv;\n        //p.xy *= A(.5/p.z); // twist\n        r = length(p); // radius\n        p *= sqrt(abs(1. - r*r/1e3)); // coord transform\n        q.xy = p.xy - hg(p.xy/2.)*2.; // xy to hex\n        n = length(q); // pattern\n        nt = n*t; // multiply with time\n        p.z = abs(p.z) - 1. - sin(nt*6.2832); // move z\n        s = length(p-q*vec3(1,1,0)) - min(.3, n/1e2) * (-sign(35.-r)*.5+.5); // spheres\n        \n        d += sqrt(s)*.35;\n        c += min(s, .004*sqrt(d/s)) * H(nt) * O(nt, 1., .3) * min(1., 2e2/n); // color & stuff\n        if (s < 1e-3 || d > 1e3) break;\n    }\n    \n    C = vec4(tanh(c*c*c), 1);\n}","name":"Image","description":"","type":"image"}]}