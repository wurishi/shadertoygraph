{"ver":"0.1","info":{"id":"4ctyR4","date":"1730317471","viewed":20,"name":"confuzzl cubic bezier","username":"confuzzl","description":"cubic bezier :3","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 P0 = vec2(50, 50);\nvec2 P1 = vec2(200, 400);\nvec2 P2 = vec2(600, 350);\nvec2 P3 = vec2(750, 100);\n\nbool within(const vec2 a, const vec2 b, const float d) {\n    vec2 c = a-b;\n    return c.x*c.x + c.y*c.y <= d*d;\n}\nbool inLine(const vec2 v, const vec2 a, const vec2 b, const float d) {\n    vec2 line = b - a;\n    vec2 diff = v - a;\n    float t = clamp(dot(diff, line)/dot(line, line), 0.0, 1.0);\n    return length(diff-line*t) <= d;\n}\n\nconst int steps = 100;\n\n#define POINT(p, size, c) if (within(fragCoord, p, size)) fragColor = vec4(c.r, c.g, c.b, 1.0);\n#define LINE(p0, p1, size, c) if (inLine(fragCoord, p0, p1, size)) fragColor = vec4(c.r, c.g, c.b, 1.0);\n\n#define WHITE vec3(1.0, 1.0, 1.0)\n#define BLACK vec3(0.0, 0.0, 0.0)\n#define GRAY vec3(0.5, 0.5, 0.5)\n#define RED vec3(1.0, 0.0, 0.0)\n#define GREEN vec3(0.0, 1.0, 0.0)\n#define BLUE vec3(0.0, 0.0, 1.0)\n#define CYAN vec3(0.0, 1.0, 1.0)\n#define MAGENTA vec3(1.0, 0.0, 1.0)\n#define YELLOW vec3(1.0, 1.0, 0.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) { \n    P0.x = (sin(1.788 * iTime + -1.049) + 1.0) * 400.0;\n    P0.y = (cos(1.4079 * iTime + 1.087) + 1.0) * 225.0;\n    P1.x = (sin(-1.3627 * iTime + -1.8301) + 1.0) * 400.0;\n    P1.y = (cos(1.8678 * iTime + 1.7028) + 1.0) * 225.0;\n    P2.x = (sin(-1.309 * iTime + -1.4064) + 1.0) * 400.0;\n    P2.y = (cos(1.6023 * iTime + -0.9692) + 1.0) * 225.0;\n    P3.x = (sin(1.5011 * iTime + -0.855) + 1.0) * 400.0;\n    P3.y = (cos(0.6425 * iTime + -1.8371) + 1.0) * 225.0;\n    \n    LINE(P0, P1, 2.0, GRAY)\n    LINE(P2, P3, 2.0, GRAY)\n    POINT(P0, 10.0, GREEN)\n    POINT(P1, 10.0, GREEN)\n    POINT(P2, 10.0, RED)\n    POINT(P3, 10.0, RED)\n    \n    vec2 points[steps + 1];\n    \n    for (int i = 0; i <= steps; i++) {\n        float t = float(i) / float(steps);\n        vec3 color1 = mix(RED, YELLOW, t);\n        vec3 color2 = mix(MAGENTA, CYAN, t);\n        \n        vec2 a = mix(P0, P1, t);\n        vec2 b = mix(P1, P2, t);\n        vec2 c = mix(P2, P3, t);\n        vec2 d = mix(a, b, t);\n        vec2 e = mix(b, c, t);\n        vec2 f = mix(d, e, t);\n        points[i] = f;\n        \n        /*\n        LINE(a, b, 1.0, GRAY)\n        LINE(b, c, 1.0, GRAY)\n        POINT(a, 5.0, color1)\n        POINT(b, 5.0, color1)\n        POINT(c, 5.0, color1)\n        \n        LINE(d, e, 1.0, GRAY)\n        POINT(d, 5.0, color2)\n        POINT(e, 5.0, color2)\n        \n        POINT(f, 10.0, GREEN)\n        */\n    }\n    for (int i = 0; i < steps; i++) {\n        vec2 a = points[i];\n        vec2 b = points[i + 1];\n        vec3 c = mix(GREEN, RED, float(i) / float(steps - 1));\n        LINE(a, b, 3.0, c);\n    }\n}","name":"Image","description":"","type":"image"}]}