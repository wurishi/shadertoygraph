{"ver":"0.1","info":{"id":"WdXyDr","date":"1584520604","viewed":163,"name":"Playing with hexagonal tiling","username":"MeHigh_","description":"It's not much, but eh","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["hexagons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//I learned to create the hexagonal grid from The Art of Code's video\n//https://www.youtube.com/watch?v=VmrIDyYiJBA\n\nfloat HexDist(vec2 p) {\n\tp = abs(p);\n    \n    float c = dot(p, normalize(vec2(1., 1.73)));\n    c = max(c, p .x);\n\t\n    return c;\n}\n\nvec4 HexCoords(vec2 uv) {\n\tvec2 r = vec2(1., 1.73);\n    vec2 h = r * .5;\n    \n    vec2 a = mod(uv, r) - h;\n    vec2 b = mod(uv - h, r) - h;\n    \n    vec2 gv = dot(a, a) < dot(b, b) ? a : b;\n    \n    vec2 id = uv - gv;\n    \n    float x = atan(gv.x * 1.5, gv.y * .5);\n    float y = .5 -  HexDist(gv);\n    \n    return vec4(x, y, id.x, id.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    \n    vec3 col = vec3(0.);\n    \n    uv *= 10.; //grid size\n    \n    vec4 hc = HexCoords(uv);\n    float spiralsRate = 2.; //the density of the spirals\n    col = mix(col, \n              vec3(.9 * uv.x, .4, .5 * uv.y), //some color based on the uv coords\n              smoothstep(.1, .5, sin(spiralsRate * hc.y * hc.w * hc.z + hc.x + iTime)));\n    \n    col = pow(col, vec3(1./2.2)); //gamma correction\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}