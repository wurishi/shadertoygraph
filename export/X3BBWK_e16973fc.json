{"ver":"0.1","info":{"id":"X3BBWK","date":"1729973366","viewed":52,"name":"My First Simple Truchet Tiling","username":"8InfinityTaco8","description":"based on The Art Of code on youtube tutorial.\nhere: https://www.youtube.com/watch?v=2R7h76GoIJM&ab_channel=TheArtofCode \nlearned a lot from this tutorial and have a lot of ideas of what i can do in the future now with a better understanding of this effect","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["truchet","tiling","quadtruchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//optimized implementation suggested by FabriceNeyret2\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    U = 15.*(U/iResolution.y + vec2(cos(iTime*.2 + vec2(0,11))));\n    O = vec4(abs(abs(dot(fract(U)-.5, vec2(cos(1e4*length(ceil(U))) < .0 ? -1:1, 1)))-.5) < .25);\n}\n\n\n\n\n\n\n/*void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Declare UV properly using fragCoord\n    vec2 uv = 15.* (fragCoord/iResolution.y + vec2(cos(iTime*.2), sin(iTime*.2)));\n    // Calculate the pattern\n    float pattern = abs(abs(dot(\n        fract(uv) - .5,\n        vec2(cos(1e4*length(ceil(uv))) < 0.0 ? -1.0 : 1.0, 1.0)\n    )) - .5);\n    // Output final color\n    fragColor = vec4(vec3(pattern < 0.25), 1.0);\n}\n*/\n\n\n\n\n\n\n//the original code and how i understood how to do it\n\n/*float Hash21(vec2 p){\n    p = fract(p*vec2(234.34, 435.345));\n    p += dot(p, p + 34.23);\n    return fract(p.x*p.y);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n\n    vec3 col = vec3(0.);\n    \n    uv += vec2 (cos(iTime * .2), sin(iTime * .2));\n    uv *= 15.;\n    vec2 gridUV = fract(uv) - .5;\n    vec2 id = floor(uv);\n    float width = .25;\n    \n    float n = Hash21(id);\n    gridUV.x *= 1.;\n    \n    \n    if(n <.5) gridUV.x *= -1.;\n    float dist = abs(abs(gridUV.x + gridUV.y) - .5);\n    float mask = smoothstep(.01, -.01, dist - width);\n    \n    col += mask;\n    \n    //col += n;\n    //if(gridUV.x > .48 || gridUV.y > .48) col = vec3(1,0,0);\n    fragColor = vec4(col,1.0);\n} */","name":"Image","description":"","type":"image"}]}