{"ver":"0.1","info":{"id":"3lsGWH","date":"1556388135","viewed":383,"name":"Glow Particles","username":"soi","description":"Simple particles shader.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","particles","glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(float x)\n{\n    return fract(sin(x) * 43758.5453) * 2.0 - 1.0;\n}\n\nvec2 startPos(float x, vec2 pos)\n{\n\treturn vec2(pos.x + (cos(hash(x)) * 0.05), pos.y + (sin(hash(x * 1.4)) * 0.05));\n}\n\nvec2 endPos(float x, vec2 pos)\n{\n\treturn vec2(pos.x + (cos(hash(x)) * 0.4), pos.y + (sin(hash(x * 1.7)) * 0.4));\n}\n\nfloat sphere(vec2 center, float rayon, vec2 coord)\n{\n    return length(coord.xy - center) - rayon;\n}\n\nvec3 glow(vec3 color, float ld)\n{\n    return color * exp(-(ld/25.0)*25.5);\n}\n\nvec2 getBasisFragCoord(vec2 coord)\n{   \n    vec2 frag = coord;\n    frag.x /= iResolution.x / iResolution.y;\n    frag = frag / 2.0 + 1.0;\n    return frag.xy * iResolution.xy;\n}\n\nvec4 particles(vec2 uv, float time, float mx, float my, float speed)\n{\n    float px = mod(uv.x, 0.86) - 0.43;\n    float py = mod(uv.y, 0.86) - 0.43;\n    vec3 ret = vec3(0.0);\n    vec2 center = vec2(uv.x + px * mx, uv.y + py * my);\n    vec4 ret_color = vec4(vec3(0.0), 1.0);\n    \n    float i_time = iTime + time;\n    \n    const float seq_duration = 2.0;\n\tfloat current_seq = floor(i_time / seq_duration);\n\tfloat current_seq_time = mod(i_time, seq_duration);\n    \n    vec2 start_pos = startPos(current_seq + ((uv.x - px) + (uv.y - py)), center);\n\tvec2 end_pos   = endPos(current_seq + ((uv.x - px) + (uv.y - py)), center);\n\tvec2 current_pos;\n    \n\tfloat potential_dist = speed * current_seq_time;\n\tfloat end_dist = length(end_pos - start_pos);\n\t\n\tcurrent_pos = mix(start_pos, end_pos, potential_dist / end_dist) * step(potential_dist, end_dist);\n\tcurrent_pos += end_pos * step(end_dist, potential_dist);\n    \n    float dist_length     = sqrt((end_pos.x - start_pos.x)*(end_pos.x - start_pos.x) + (end_pos.y - start_pos.y)*(end_pos.y - start_pos.y));\n    float dist_bright_off = dist_length * 0.2;\n    float dist_current    = sqrt((end_pos.x - current_pos.x)*(end_pos.x - current_pos.x) + (end_pos.y - current_pos.y)*(end_pos.y - current_pos.y));\n    \n    float ld = sphere(getBasisFragCoord(current_pos), 0.01, getBasisFragCoord(uv));\n        \n    float alpha = smoothstep(0.0, dist_bright_off, dist_length - dist_current) * smoothstep(0.0, dist_bright_off, dist_current);\n    alpha *= 1.0 - step(0.1, length(uv - current_pos));\n    ret_color = vec4(glow(vec3(1.0, 1.0, 0.0), ld), 1.0) * alpha;\n        \n    return ret_color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    fragColor = particles(uv + vec2(25.0), 0.0, 1.0, 1.0, 0.35);\n    fragColor += particles(uv - vec2(20.0), 0.25, -1.0, -1.0, 0.1);\n    fragColor += particles(uv + vec2(20.0), 0.5, -1.0, 1.0, 0.25);\n    fragColor += particles(uv - vec2(40.0), 0.75, 1.0, -1.0, 0.15);\n    \n    fragColor += particles(uv + vec2(10.0), 1.75, -1.0, 1.0, 0.3);\n    fragColor += particles(uv - vec2(40.0), 1.0, -1.0, -1.0, 0.2);\n    fragColor += particles(uv + vec2(30.0), 1.25, -1.0, 1.0, 0.15);\n    fragColor += particles(uv - vec2(30.0), 1.5, 1.0, -1.0, 0.25);\n    \n    fragColor += particles(uv - vec2(10.0), 0.35, 1.0, -1.0, 0.3);\n    fragColor += particles(uv - vec2(15.0), 0.65, 1.0, 1.0, 0.25);\n    fragColor += particles(uv + vec2(15.0), 1.35, 1.0, 1.0, 0.2);\n    fragColor += particles(uv - vec2(25.0), 1.65, 1.0, -1.0, 0.15);\n}","name":"Image","description":"","type":"image"}]}