{"ver":"0.1","info":{"id":"dd3BzS","date":"1697292815","viewed":59,"name":"Simple Shine on 2D Texture","username":"bschu","description":"Make a simple shine effect with alpha line blitted onto texture. I can't seem to find the code I want for this so I am trying to make my own. Can you help improve my code? I don't fully understand what I'm doing. But this is very close to what I want.","likes":0,"published":1,"flags":0,"usePreview":1,"tags":["2d","texture","shine"],"hasliked":0,"parentid":"MsdGD2","parentname":"One Sample Blur"},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Brendon Schumacker. \n// Use at your own risk.\n// www.bschu.net\n\n// This is an experiment. My goal is to make a simple shader for game assets.\n// Goals:\n// (1) Load a texture.\n// (2) Render a soft edge line with alpha transparency onto the texture.\n// (3) Full control over color and alpha of the line.\n// (4) Ability to move the line about freely.\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nvec4 line_color = vec4(1.0,0.5,0.5,1.0);\n\nfloat plot(vec2 st, float pct, float width) {\n  return  smoothstep( pct-width, pct, st.y) -\n          smoothstep( pct, pct+width, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = fragCoord/iResolution.xy; // Normalized pixel coordinates (from 0 to 1)\n    vec4 color = texture(iChannel0, uv);\n    fragColor = vec4(color); // Output to screen\n\n    vec2 st = fragCoord.xy/ iResolution.xy;\n    float width = 0.5;\n    st.y /= 2.;\n    float y = -sin(st.x+iTime);\n    float pct = plot(st,y,width);\n    float alpha = 0.5;\n\n    // what on earth does this mean? I try to break it down below\n    //color = (1.0-pct)*color + pct*(line_color);\n    vec4 color1 = (1.0-pct)*color;\n    vec4 color2 = pct*(line_color);\n    // cheap alpha trick because setting the actual alpha in \"line_color\"\n    // doesn't seem to work???\n    fragColor = color + (color * color2 * alpha);\n\n}\n\n","name":"Image","description":"","type":"image"}]}