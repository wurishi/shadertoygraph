{"ver":"0.1","info":{"id":"cs2cRw","date":"1687524940","viewed":42,"name":"THE EYE","username":"jking","description":"some basic math lookin ass.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["weird","idk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n   vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n//uv = abs(uv);\n\n\n\n    // Time varying pixel color\n \n\n float d = length(uv);\n\nd = sin(3.0* d);\n//d = abs(d);\n\n    uv.x =   cos(acos(uv.x/d) + (iTime * 0.1));\n    uv.y =   sin(asin(uv.y/d) + (iTime * 0.1));\n\nfloat m = atan(uv.y/uv.x);\nm = abs(m);\n\nfloat n = asin(uv.y/d);\nn = abs(n);\n\nfloat p = acos(uv.x/d);\np = abs(p);\n\n\n\n\n\n//d = step(d, 0.1);\n\n//vec3 col =  vec3 (asin(uv.y/d), acos(uv.x/d), atan(uv.y/uv.x)) ;\n\n\n\n    // Output to screen\n    //fragColor = vec4(col, 1.0);\n    fragColor = vec4(p, n, m, 1.0);\n    \n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}