{"ver":"0.1","info":{"id":"3ldGWr","date":"1577209105","viewed":119,"name":"rnyan","username":"rmccampbell7","description":"nyan nyan nyan nyan nyan nyan nyan nyan nyan nyan","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["nyan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pix = fragCoord;\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 res = iResolution.xy;\n    vec2 imSize = iChannelResolution[0].xy;\n    vec2 fSize = vec2(40, 32);\n    float nFrames = 6.;\n    float time = iTime * SPEED;\n    float scale = floor(res.y/72.); // 5.;\n    float freq = 2.;\n    vec3 col;\n\n    // Stars\n    col += 1.*pow(prod(max(abs(pix-vec2(.10,.80)*res),.2)),-1.);\n    col += 1.*pow(prod(max(abs(pix-vec2(.50,.10)*res),.2)),-1.);\n    col += 1.*pow(prod(max(abs(pix-vec2(.80,.80)*res),.2)),-1.);\n    col += 2.*pow(prod(max(abs(pix-vec2(.30,.90)*res),.2)),-2.);\n    col += 3.*pow(prod(max(abs(pix-vec2(.10,.20)*res),.2)),-3.);\n    col += 1.*pow(prod(max(abs(pix-vec2(.70,.60)*res),.2)),-1.5);\n    col += 2.*pow(prod(max(abs(pix-vec2(.90,.20)*res),.2)),-1.8);\n    col += 1.*pow(prod(max(abs(pix-vec2(.50,.70)*res),.2)),-2.);\n    col += .2*pow(prod(max(abs(pix-vec2(.73,.25)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.16,.59)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.60,.75)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.24,.71)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.38,.68)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.28,.18)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.85,.53)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.95,.85)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.85,.05)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.60,.22)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.68,.92)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.20,.05)*res),.2)),-1.2);\n    col += .2*pow(prod(max(abs(pix-vec2(.33,.35)*res),.2)),-1.2);\n\n    // Rainbow\n    //vec3 col = 0.5 + 0.5*cos(0.*time+uv.y*16.+.75*cos(tau*(uv.x-.5+time)*freq)+vec3(0,2,4));\n    vec3 v = clamp(\n        (uv.y-.5)*7.\n        - cos(tau*(2.*uv.x-.5+time)*freq)/6.\n        - 1.*vec3(1,0,-1)/3.\n    , -.5, .5);\n\n    vec3 rainbow = .5+.5*cos(tau*v);\n    //vec3 rainbow = saturate(2.-abs(6.*(fract(v+.5)-.5)));\n    rainbow *= step(-.45, -uv.x);\n    col = mix(col, rainbow, saturate(sum(rainbow)));\n\n    // Nyan cat\n    float frame = mod(floor(time*freq*nFrames), nFrames);\n    vec2 center = res/2. + vec2(0, scale*sin(tau*(freq*time)));\n    vec2 coord = clamp((pix - center) / scale + fSize/2., vec2(0), fSize);\n    vec4 nyan = texture(iChannel0, (coord + vec2(frame,0)*fSize)/imSize);\n    col = mix(col, nyan.rgb, nyan.a);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float bps = 8.0*SPEED;\nconst float dt = 1.0/bps;\nconst float vol = .1;\n\nint[] music = int[] (\n    96,97,99,0,104,0,96,97,99,104,106,108,106,103,104,0,\n    99,0,96,97,99,0,104,0,106,103,104,106,109,108,109,106,\n    //84,85,87,0,92,0,84,85,87,92,94,96,94,91,92,0,\n    //87,0,84,85,87,0,92,0,94,91,92,94,97,96,97,94,\n\n    87,0,89,0,83,84,0,80,83,82,80,0,80,0,82,0,\n    83,0,83,82,80,82,84,87,89,84,87,82,84,80,82,80,\n    84,0,87,0,89,84,87,82,84,80,82,84,83,82,80,82,\n    83,0,80,82,84,87,82,84,82,80,82,0,80,0,82,0,\n\n    87,0,89,0,83,84,0,80,83,82,80,0,80,0,82,0,\n    83,0,83,82,80,82,84,87,89,84,87,82,84,80,82,80,\n    84,0,87,0,89,84,87,82,84,80,82,84,83,82,80,82,\n    83,0,80,82,84,87,82,84,82,80,82,0,80,0,80,0,\n\n    80,0,75,77,80,0,75,77,80,82,84,80,85,84,85,87,\n    80,0,80,0,75,77,80,75,85,84,82,80,73,72,73,75,\n    80,0,75,77,80,0,75,77,80,80,82,84,80,75,77,75,\n    80,0,80,79,80,75,77,80,85,84,85,87,80,0,79,0,\n\n    80,0,75,77,80,0,75,77,80,82,84,80,85,84,85,87,\n    80,0,80,0,75,77,80,75,85,84,82,80,73,72,73,75,\n    80,0,75,77,80,0,75,77,80,80,82,84,80,75,77,75,\n    80,0,80,79,80,75,77,80,85,84,85,87,80,0,82,0\n);\n\nfloat midi2freq(int note)\n{\n    return note > 0 ? 440.0 * pow(2.0, float(note - 69) / 12.0) : 0.;\n}\n\nfloat nyan(float freq, float time)\n{\n    // TODO: moar nyan??\n    return sin(tau*freq*time)*exp(-10.*time);\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    int n = int(time / dt);\n    float t = mod(time, dt);\n\n    float s = 0.;\n\n    for (int i=0; i < 3; i++) {\n        int note = n-i >= 0 ? music[(n-i) % music.length()] : 0;\n        float f = midi2freq(note);\n        s += nyan(f, t+float(i)*dt);\n    }\n\n    return vol*vec2(s);\n}\n","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"const float SPEED = 1.0;\n\nconst float tau = 6.2831855;\n\n#define saturate(x) clamp(x, 0., 1.)\n\nfloat vmax(vec2 v) {\n    return max(v.x, v.y);\n}\nfloat vmax(vec3 v) {\n    return max(max(v.x, v.y), v.z);\n}\n\nfloat prod(vec2 v) {\n    return v.x * v.y;\n}\nfloat prod(vec3 v) {\n    return v.x * v.y * v.z;\n}\n\nfloat sum(vec2 v) {\n    return v.x + v.y;\n}\nfloat sum(vec3 v) {\n    return v.x + v.y + v.z;\n}\n","name":"Common","description":"","type":"common"}]}