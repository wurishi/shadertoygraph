{"ver":"0.1","info":{"id":"DlSSD3","date":"1676879870","viewed":46,"name":"Emboss detail enhancement","username":"siliace","description":"Configurable emboss shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["postprocessing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EMBOSS_LEVEL 0.3f\n#define EMBOSS_KERNEL_SIZE 7\n#define EMBOSS_MATRIX_SIZE EMBOSS_KERNEL_SIZE * EMBOSS_KERNEL_SIZE\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{  \n    float kernel[EMBOSS_MATRIX_SIZE] = float[](\n\t\t1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,\n\t\t0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,\n\t\t0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f,\n\t\t0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,\n\t\t0.0f, 0.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f,\n\t\t0.0f, 0.0f, 0.0f, 0.0f, 0.0f, -1.0f, 0.0f,\n\t\t0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, -1.0f\n    );\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 pixelSize = 1.f / iResolution.xy;\n\n    vec3 colorMatrix[EMBOSS_MATRIX_SIZE];\n    for (int i = 0; i < EMBOSS_KERNEL_SIZE; i++)\n\t{\n\t\tfor (int j = 0; j < EMBOSS_KERNEL_SIZE; j++)\n\t\t{\n\t\t\tvec2 offset;\n\t\t\toffset.x = pixelSize.x * float(j - EMBOSS_KERNEL_SIZE / 2);\n\t\t\toffset.y = pixelSize.y * float(i - EMBOSS_KERNEL_SIZE / 2);\n\t\t\n\t\t\tcolorMatrix[i * EMBOSS_KERNEL_SIZE + j] = texture(iChannel0, uv + offset).rgb;\n\t\t}\n\t}\n    \n    float meanMatrix[EMBOSS_MATRIX_SIZE];\n    for (int i = 0; i < EMBOSS_MATRIX_SIZE; i++)\n        meanMatrix[i] = (colorMatrix[i].r + colorMatrix[i].g + colorMatrix[i].b) / 3.f;\n\n    float convolved = 0.f;\n    for (int i = 0; i < EMBOSS_MATRIX_SIZE; i++)\n        convolved += kernel[i] * meanMatrix[i];\n   \n    vec4 sourceColor = texture(iChannel0, uv);\n\tvec4 embossColor = vec4(vec3(convolved), 1.f);\n    \n\n    fragColor.rgb = (EMBOSS_LEVEL * embossColor.rgb) + sourceColor.rgb;\n    fragColor.a = sourceColor.a;    \n}\n","name":"Image","description":"","type":"image"}]}