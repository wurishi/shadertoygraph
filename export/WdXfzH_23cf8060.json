{"ver":"0.1","info":{"id":"WdXfzH","date":"1587660046","viewed":67,"name":"tile gradient test","username":"blepfo","description":"Color gradient with tiling","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["basic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circ(\n\tvec2 uv,\n    float r1,\n    float r2,\n    float blend\n) {\n    return (smoothstep(r1-blend, r1+blend, length(uv))\n           - smoothstep(r2-blend, r2+blend, length(uv)));\n}\n\nfloat square(\n\tvec2 uv,\n    float r,\n    float blend\n) {\n    vec2 dist = abs(uv);\n    float d = max(dist.x, dist.y);\n    return 1. - smoothstep(r-blend, r+blend, d);\n}\n\nmat2 rotate2d(float theta) {\n    return mat2(cos(theta), -sin(theta),\n                sin(theta), cos(theta));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    float scale = 10.2;\n    uv *= scale;\n    vec2 tileIdx = floor(uv);\n    vec2 tileUv = fract(uv);\n    tileUv = tileUv*2. - 1.;\n    \n    // Background\n    vec3 color = vec3(0.147,0.208,0.320);\n    float cBlur = circ(tileUv, 0.2, 3.192, 2.236);\n    vec3 cBlurColor = vec3(0.228,0.770,0.825);\n    color = mix(color, cBlurColor, cBlur);\n    \n    // Gradient for shape colors using non-tile coordinates\n    vec2 gradientUv = uv - vec2(iTime*3.);\n    float colorGrad = sin(gradientUv.x + gradientUv.y) * 0.2;\n    \n    // Shapes\n    vec2 shapeCoords = rotate2d(3.14/4.)*tileUv;\n    // Square\n    float s = square(shapeCoords, .45, 0.01);\n    vec3 squareColor = vec3(0.427, 0.166 + colorGrad, .5 - colorGrad);\n    // Circle\n    float c = circ(tileUv, 0.504, 0.668, 0.01);\n    vec3 circColor = vec3(0.845,0.756 - colorGrad,.3 + colorGrad);\n\t// Alternate shapes by row/column\n    float circPercent = mod(tileIdx.x + tileIdx.y, 2.);\n    float squarePercent = 1. - mod(tileIdx.x + tileIdx.y, 2.);  \n    float shapeMask = c*circPercent + s*squarePercent;\n    vec3 shapeColor = mix(circColor, squareColor, squarePercent);\n    \n    color = mix(color, shapeColor, shapeMask);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}