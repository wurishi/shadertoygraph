{"ver":"0.1","info":{"id":"4ljGDt","date":"1433626947","viewed":157,"name":"Yet another Mandelbrot ","username":"tyleeer","description":"Well, Can some one provide an idea why z_n = z_n-1^2+z_0 generates such a shape.\n\nHow to construct such an iteration formula.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Original Author: https://www.shadertoy.com/user/FabriceNeyret2\n// inspired from https://www.shadertoy.com/view/XdfSWN\n// https://www.shadertoy.com/view/XdfXWN\n\n// Modified by Tyler \n\nvec4 shade(vec2 p) {\n   \n    const int N = 21;\n    vec4 color = vec4(0.0,0.0,0.0,1.0);\n    vec2 uv = p/iResolution.y;\n    \n\tvec2 z0 = 2.0*(uv-vec2(1.1,0.5));\n    vec2 z = z0;\n\tfor (int i=0; i<N; i++) {\n        if ( float(i) < floor(mod(iTime*15.0,float(N))) ) {  // this block is just used to simulate non-constant loop index\n            \n            //-------------------------------------\n            //          Iteration Body\n            //-------------------------------------\n            if (dot(z,z)>4.) {\n                color = vec4(vec3(1.-float(i)/float(N)),1.0); \n                break;\n            } // z diverged\n\n            z = z0 + vec2(z.x*z.x - z.y*z.y, 2.*z.x*z.y); // z = z0+z^2\n            //-------------------------------------\n        }\n\t}\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n\tfragColor = shade(fragCoord.xy/iResolution.y);\n    \n    // multi sampling\n    const int M = 3;\n    vec4 color = vec4(0.0,0.0,0.0,1.0);\n    \n    for (int i = -M; i < M; i++) {\n        for (int j = -M; j < M; j++) {\n            color += shade(fragCoord.xy+0.2*vec2(i,j));\n        }\n    }\n    \n\tfragColor = color/(float(2*M)*float(2*M));\n}","name":"","description":"","type":"image"}]}