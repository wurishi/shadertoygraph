{"ver":"0.1","info":{"id":"msKSzV","date":"1681339102","viewed":57,"name":"Sinewave Pink and Yellow ","username":"Alhut","description":"colorful and dynamic geometric series of polygons arranged in mathematical patterns. The vibrant colors of the polygons are modulated over time using a sin wave function .","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["generative","visual","geometric","mathematical","vibrantcolors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 color = vec3(0.0);\n\n    float t = iTime * 0.1;\n\n    // Generate a pattern of overlapping circles\n    float c1 = sin(length(uv * vec2(2.0, 1.0)) * 10.0 + t) * 0.5 + 0.5;\n    float c2 = sin(length(uv * vec2(1.0, 2.0)) * 10.0 + t) * 0.5 + 0.5;\n    float c3 = sin(length(uv * vec2(1.0, 1.0)) * 10.0 + t) * 0.5 + 0.5;\n    float circle = (c1 + c2 + c3) / 3.0;\n\n    // Generate a pattern of overlapping triangles\n    vec2 p = vec2(atan(uv.y, uv.x) / 3.1415, length(uv));\n    float r = length(p);\n    float a = atan(p.y, p.x) + t;\n    float h = a / (3.1415 * 2.0 / 3.0);\n    h = abs(fract(h + 1.0 / 6.0) - 0.5) * 2.0;\n    float triangle = (1.0 - smoothstep(0.1, 0.2, r)) * h;\n\n    // Combine the two patterns to create the final result\n    color = mix(vec3(1.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0), circle);\n    color = mix(color, vec3(0.0, 1.0, 1.0), triangle);\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}