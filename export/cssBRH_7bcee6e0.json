{"ver":"0.1","info":{"id":"cssBRH","date":"1688461493","viewed":58,"name":"Neon Cross Circles","username":"micz","description":"Neon Cross Circles, created as a result of watching this tutorial\nhttps://www.youtube.com/watch?v=f4s1h2YETNY","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circles","cross","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dot2(in vec2 p){\n    return dot(p,p);\n}\n\nvec3 palette(float t){\n\nvec3 a = vec3(0.498, 0.308, 0.498); \nvec3 b = vec3(0.250, 0.358, 0.358);\nvec3 c = vec3(3.138, 1.668, 3.138); \nvec3 d = vec3(0.358, 0.522, 0.588);\n\nreturn a + b*cos(6.28318*(c*t+d));\n}\n\nfloat sdHeart( in vec2 p )\n{\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0,0,0);\n    float ittr = 4.0;\n    for(float i =0.0; i < ittr; i++)\n    {\n        uv = fract(uv*(i+1.1)) -0.5;\n        float i1 = i + 1.;\n        float d = length(uv)*exp(-length(uv0));\n        float heart = i1*sdHeart(uv0+vec2(0.,0.5));\n        vec3 col = palette(d+i1*0.4 +iTime*0.2*i1);\n        vec3 col2 = palette(heart);\n        d = sin(d*8. +iTime)/(8.);\n        d = abs(d);\n        d = pow(0.01/d*(ittr - i),1.3);\n        finalColor += col*d;\n    }\n    \n    fragColor = vec4(finalColor,1.);\n\n    \n}\n\n","name":"Image","description":"","type":"image"}]}