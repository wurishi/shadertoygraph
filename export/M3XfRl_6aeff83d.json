{"ver":"0.1","info":{"id":"M3XfRl","date":"1728762429","viewed":33,"name":"learning_experiment_7","username":"austinoxyz","description":"learning experiment 7\n\ni want it to be a tunnel eventually","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["experiment","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time (iTime)\n#define res (iResolution)\n\nmat2 rot2D(in float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvec3 palette(in float t) {\n    vec3 a = vec3(0.2, 0.2, 0.2);\n    vec3 b = vec3(1., 0.3, 0.5);\n    vec3 c = vec3(4.0, 4.0, 4.0);\n    vec3 d = vec3(0.3,0.7516,0.7);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdBox(in vec2 p, in vec2 b) {\n    vec2 d = abs(p) - b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat map(vec2 p) {\n    const float s = .26;\n    const float h = sqrt(s*s);\n    \n    p *= rot2D(0.7853); // pi/4\n    p = fract(p*.5)-.5;\n    \n    float d = abs(sdBox(p, vec2(s)));\n    const float z = 4.;\n    d = min(d, sdSegment(p, vec2(h), vec2(z*h)));\n    d = min(d, sdSegment(p, vec2(-h), vec2(-z*h, -z*h)));\n    d = min(d, sdSegment(p, vec2(-h, h), vec2(-z*h, z*h)));\n    d = min(d, sdSegment(p, vec2(h, -h), vec2(z*h, -z*h)));\n    \n    d = smoothstep(.01, .03,  d);\n    return d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord * 2. - res.xy) / res.y;\n    uv *= 18.*sin(time + .3*length(uv));\n    //uv *= 14.;\n    \n    vec2 p = uv;\n    //float t = .0013*iTime;\n    //vec2 p = length(uv) * vec2(1./length(uv) + t, atan(uv.y,uv.x)/3.141592 + t);\n    \n    vec3 col = vec3(1.);\n    \n    if (length(p) >= (1.+.4*sin(time))) {\n        float k = .03*pow(length(uv),1.2);\n        float r = map(p);\n\n        col *= r;\n        col *= smoothstep(.66, .7, palette(2.*k));\n    } else \n        col *= .25;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}