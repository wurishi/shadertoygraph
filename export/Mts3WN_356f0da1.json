{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\n//#define SHADOWS\n\nstruct Triangle {\n    vec3 v1,v2,v3,normal,color;\n};\n    \n    \n    \n    \nconst float viewDist = 999999.0;\n\nvec3 cameraPosition,cameraDirection,cameraRight,cameraRayDir,cameraRayPos;\nvec3 cameraUp = vec3(0.0,1.0,0.0);\n\n\n\n\nvec3 rayPos,rayDir;\nTriangle rayHit;\nfloat rayHitDist;\n\n\n\nvec3 lightDir;\nvec4 lightColor = vec4(0.8,0.75,0.75,1.0);\n\n\n\nvec3 calcNormal(vec3 p1, vec3 p2, vec3 p3) {\n    vec3 u = p2-p1;\n    vec3 v = p3-p1;\n    \n    vec3 normal = vec3(u.y*v.z-u.z*v.y,\n                       u.z*v.x-u.x*v.z,\n                       u.x*v.y-u.y*v.x);\n    \n    return normalize(cross(u,v));\n    return normalize(normal);\n}\n\n#define TEST_CULL\n\nvec3 e1,e2,tv,pv,qv;\nfloat det,inv_det,td,tU,tV;\nvoid rayTriangle(Triangle t) {//http://www.cs.virginia.edu/~gfx/Courses/2003/ImageSynthesis/papers/Acceleration/Fast%20MinimumStorage%20RayTriangle%20Intersection.pdf\n    e1 = t.v2-t.v1;\n    e2 = t.v3-t.v1;\n\n    pv = cross(rayDir,e2);\n\n\tdet = dot(e1,pv);\n    \n    \n    #ifdef TEST_CULL\n    \n    if (det < 0.000001) {\n        return;\n    }\n    tv = rayPos-t.v1;\n    \n    tU = dot(tv,pv);\n    if (tU < 0.0 || tU > det) {\n    \treturn;\n    }\n    \n    qv = cross(tv,e1);\n    \n    tV = dot(rayDir,qv);\n    if (tV < 0.0 || tU+tV > det) {\n    \treturn;\n    }\n    \n    td = dot(e2,qv)*(1.0/det);\n    if (td < 0.0) {\n        return;\n    }\n    \n    if (td < rayHitDist) {\n    \trayHitDist = td;\n        rayHit = t;\n    }\n        \n    #else\n    \n    if (det > -0.00001 && det < 0.00001) {\n        return;\n    }\n    \n    inv_det = 1.0/det;\n\n    tv = rayPos-t.v1;\n    \n    tU = dot(tv,pv)*inv_det;\n    if (tU < 0.0 || tU > 1.0) {\n        return;\n    }\n    \n    qv = cross(tv,e1);\n    \n    tV = dot(rayDir,qv)*inv_det;\n    if (tV < 0.0 || tV+tU > 1.0) {\n        return;\n    }\n    \n    td = dot(e2,qv)*inv_det;\n    if (td < rayHitDist) {\n    \trayHitDist = td;\n        rayHit = t;\n    }\n    #endif\n}\n\nvec3 pN,pP;\nvoid yPlane(Triangle t) {\n    \n    float rY = t.v1.y-rayPos.y;//get distance from ray to plane on y axis\n        \n    if (rY < 0.0) {//check if ray going opposite direction from plane, also set the normal based on plane face while were at it\n        \n        if (rayDir.y >= 0.0) {\n            \n            return;\n            \n        } else {\n        \n\t\t\tpN = vec3(0.0,1.0,0.0);\n            \n        }\n        \n    } else {\n        \n        if (rayDir.y <= 0.0) {\n            \n            return;\n            \n        } else {\n            \n            pN = vec3(0.0,-1.0,0.0);\n        \n        }\n        \n    }\n    \n    rY = rY/rayDir.y;//calculate number of ray movements until ray\n    \n    if (rY < rayHitDist) {//check if a closer hit then the current one\n        \n        pP = rayPos+rY*rayDir;\n        \n        //check if in width/length of plane\n        if (abs(pP.x-t.v1.x) <= t.v2.x && abs(pP.z-t.v1.z) <= t.v2.z) {\n            \n            //we got a hit\n            rayHitDist = rY;\n            rayHit = t;\n            rayHit.normal = pN;\n            \n        }\n    }\n}\n    \n\nbool trace(float maxDist) {\n    rayHitDist = maxDist;\n    \n    rayTriangle( Triangle(vec3(-0.202766,-2.41208005,-0.78091699),vec3(-0.202766,-2.20588994,-1.05089605),vec3(-0.202766,-3.09572005,-1.21421599),vec3(-1.0,0.0,-0.0),vec3(0.138684,0.05031,0.007084)));\n    rayTriangle( Triangle(vec3(-0.202766,-2.20588994,-1.05089605),vec3(0.202766,-2.20588994,-1.05089605),vec3(-0.202766,-2.8895309,-1.48419499),vec3(0.0,0.53533983,-0.84463674),vec3(0.138684,0.05031,0.007084)));\n    rayTriangle( Triangle(vec3(0.202766,-2.20588994,-1.05089605),vec3(0.202766,-2.41208005,-0.78091699),vec3(0.202766,-3.09572005,-1.21421599),vec3(1.0,0.0,0.0),vec3(0.138684,0.05031,0.007084)));\n    rayTriangle( Triangle(vec3(0.202766,-2.41208005,-0.78091699),vec3(-0.202766,-2.41208005,-0.78091699),vec3(0.202766,-3.09572005,-1.21421599),vec3(0.0,-0.53534037,0.84463638),vec3(0.138684,0.05031,0.007084)));\n    rayTriangle( Triangle(vec3(0.202766,-3.09572005,-1.21421599),vec3(-0.202766,-3.09572005,-1.21421599),vec3(0.245487,-3.36647391,-1.37596595),vec3(0.0,-0.51285738,0.8584739),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.202766,-2.41208005,-0.78091699),vec3(0.202766,-2.20588994,-1.05089605),vec3(-0.202766,-2.41208005,-0.78091699),vec3(0.0,0.79473335,0.60695875),vec3(0.138684,0.05031,0.007084)));\n    rayTriangle( Triangle(vec3(-0.245487,-3.36647391,-1.37596595),vec3(-0.245487,-3.11684203,-1.70282698),vec3(0.245487,-3.36647391,-1.37596595),vec3(0.0,-0.79473388,-0.60695803),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.202766,-2.8895309,-1.48419499),vec3(0.202766,-3.09572005,-1.21421599),vec3(0.245487,-3.11684203,-1.70282698),vec3(0.99083394,0.10735731,0.08199124),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(-0.202766,-2.8895309,-1.48419499),vec3(0.202766,-2.8895309,-1.48419499),vec3(-0.245487,-3.11684203,-1.70282698),vec3(0.0,0.69321346,-0.72073233),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(-0.202766,-3.09572005,-1.21421599),vec3(-0.202766,-2.8895309,-1.48419499),vec3(-0.245487,-3.36647391,-1.37596595),vec3(-0.99083394,0.10735714,0.08199111),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(-0.202766,-2.20588994,-1.05089605),vec3(-0.202766,-2.8895309,-1.48419499),vec3(-0.202766,-3.09572005,-1.21421599),vec3(-1.0,0.0,0.0),vec3(0.138684,0.05031,0.007084)));\n    rayTriangle( Triangle(vec3(0.202766,-2.20588994,-1.05089605),vec3(0.202766,-2.8895309,-1.48419499),vec3(-0.202766,-2.8895309,-1.48419499),vec3(0.0,0.53533983,-0.84463674),vec3(0.138684,0.05031,0.007084)));\n    rayTriangle( Triangle(vec3(0.202766,-2.8895309,-1.48419499),vec3(0.202766,-2.20588994,-1.05089605),vec3(0.202766,-3.09572005,-1.21421599),vec3(1.0,0.0,-0.0),vec3(0.138684,0.05031,0.007084)));\n    rayTriangle( Triangle(vec3(-0.202766,-2.41208005,-0.78091699),vec3(-0.202766,-3.09572005,-1.21421599),vec3(0.202766,-3.09572005,-1.21421599),vec3(0.0,-0.53534037,0.84463638),vec3(0.138684,0.05031,0.007084)));\n    rayTriangle( Triangle(vec3(-0.202766,-3.09572005,-1.21421599),vec3(-0.245487,-3.36647391,-1.37596595),vec3(0.245487,-3.36647391,-1.37596595),vec3(0.0,-0.51285732,0.85847378),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.202766,-2.20588994,-1.05089605),vec3(-0.202766,-2.20588994,-1.05089605),vec3(-0.202766,-2.41208005,-0.78091699),vec3(0.0,0.79473335,0.60695875),vec3(0.138684,0.05031,0.007084)));\n    rayTriangle( Triangle(vec3(-0.245487,-3.11684203,-1.70282698),vec3(0.245487,-3.11684203,-1.70282698),vec3(0.245487,-3.36647391,-1.37596595),vec3(0.0,-0.79473388,-0.60695803),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.202766,-3.09572005,-1.21421599),vec3(0.245487,-3.36647391,-1.37596595),vec3(0.245487,-3.11684203,-1.70282698),vec3(0.990834,0.10735705,0.08199126),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.202766,-2.8895309,-1.48419499),vec3(0.245487,-3.11684203,-1.70282698),vec3(-0.245487,-3.11684203,-1.70282698),vec3(0.0,0.69321346,-0.72073239),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(-0.202766,-2.8895309,-1.48419499),vec3(-0.245487,-3.11684203,-1.70282698),vec3(-0.245487,-3.36647391,-1.37596595),vec3(-0.990834,0.10735721,0.08199137),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(-0.85584497,-2.26676393,-0.62989098),vec3(-0.85584497,-2.01110601,-0.97304797),vec3(-0.59909201,-2.60908198,-0.886675),vec3(-0.8574934,-0.41258058,-0.30737969),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(-0.85584497,-2.01110601,-0.97304797),vec3(0.85584497,-2.01110601,-0.97304797),vec3(-0.59909201,-2.35510206,-1.22757995),vec3(0.0,0.59480518,-0.80386996),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.85584497,-2.01110601,-0.97304797),vec3(0.85584497,-2.26676393,-0.62989098),vec3(0.59909201,-2.35510206,-1.22757995),vec3(0.85749358,-0.41258052,-0.3073796),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.85584497,-2.26676393,-0.62989098),vec3(-0.85584497,-2.26676393,-0.62989098),vec3(0.59909201,-2.60908198,-0.886675),vec3(0.0,-0.60006803,0.79994899),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(-0.59909201,-2.60908198,-0.886675),vec3(-0.59909201,-2.35510206,-1.22757995),vec3(0.59909201,-2.60908198,-0.886675),vec3(0.0,-0.80191404,-0.59743941),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.85584497,-2.26676393,-0.62989098),vec3(0.85584497,-2.01110601,-0.97304797),vec3(-0.85584497,-2.26676393,-0.62989098),vec3(0.0,0.80191386,0.59743971),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(-0.85584497,-2.01110601,-0.97304797),vec3(-0.59909201,-2.35510206,-1.22757995),vec3(-0.59909201,-2.60908198,-0.886675),vec3(-0.85749352,-0.41258064,-0.30737948),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.85584497,-2.01110601,-0.97304797),vec3(0.59909201,-2.35510206,-1.22757995),vec3(-0.59909201,-2.35510206,-1.22757995),vec3(0.0,0.59480512,-0.80386996),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.85584497,-2.26676393,-0.62989098),vec3(0.59909201,-2.60908198,-0.886675),vec3(0.59909201,-2.35510206,-1.22757995),vec3(0.85749352,-0.4125807,-0.30737957),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(-0.85584497,-2.26676393,-0.62989098),vec3(-0.59909201,-2.60908198,-0.886675),vec3(0.59909201,-2.60908198,-0.886675),vec3(0.0,-0.60006797,0.79994893),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(-0.59909201,-2.35510206,-1.22757995),vec3(0.59909201,-2.35510206,-1.22757995),vec3(0.59909201,-2.60908198,-0.886675),vec3(0.0,-0.80191404,-0.59743941),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.85584497,-2.01110601,-0.97304797),vec3(-0.85584497,-2.01110601,-0.97304797),vec3(-0.85584497,-2.26676393,-0.62989098),vec3(0.0,0.80191386,0.59743971),vec3(0.138684,0.138684,0.138684)));\n    rayTriangle( Triangle(vec3(0.30000001,-2.4070189,-1.02823806),vec3(0.30000001,-0.80798203,0.89341998),vec3(-0.30000001,-2.4070189,-1.02823806),vec3(0.0,-0.76868236,0.63963068),vec3(0.31999999,0.006154,0.006154)));\n    rayTriangle( Triangle(vec3(-0.30000001,-2.4070189,-1.02823806),vec3(-0.30000001,1.03767395,1.01542199),vec3(0.30000001,-2.4070189,-1.02823806),vec3(0.0,0.51023853,-0.86003292),vec3(0.31999999,0.006154,0.006154)));\n    rayTriangle( Triangle(vec3(0.30000001,-0.80798203,0.89341998),vec3(0.30000001,1.03767395,1.01542306),vec3(-0.30000001,-0.80798203,0.89341998),vec3(0.0,-0.06595888,0.9978224),vec3(0.31999999,0.006154,0.006154)));\n    rayTriangle( Triangle(vec3(-0.30000001,-2.4070189,-1.02823806),vec3(-0.30000001,-0.80798203,0.89341998),vec3(-0.30000001,1.03767395,1.01542199),vec3(-1.0,0.0,0.0),vec3(0.31999999,0.006154,0.006154)));\n    rayTriangle( Triangle(vec3(0.30000001,-0.80798203,0.89341998),vec3(0.30000001,-2.4070189,-1.02823806),vec3(0.30000001,1.03767395,1.01542306),vec3(1.0,-0.0,0.0),vec3(0.31999999,0.006154,0.006154)));\n    rayTriangle( Triangle(vec3(0.30000001,-0.80798203,0.89341998),vec3(-0.30000001,-0.80798203,0.89341998),vec3(-0.30000001,-2.4070189,-1.02823806),vec3(0.0,-0.76868236,0.63963068),vec3(0.31999999,0.006154,0.006154)));\n    rayTriangle( Triangle(vec3(-0.30000001,1.03767395,1.01542199),vec3(0.30000001,1.03767395,1.01542306),vec3(0.30000001,-2.4070189,-1.02823806),vec3(0.00000154,0.51023871,-0.86003286),vec3(0.31999999,0.006154,0.006154)));\n    rayTriangle( Triangle(vec3(0.30000001,1.03767395,1.01542306),vec3(-0.30000001,1.03767395,1.01542199),vec3(-0.30000001,-0.80798203,0.89341998),vec3(-0.00000178,-0.06595831,0.9978224),vec3(0.31999999,0.006154,0.006154)));\n\n    yPlane(Triangle(vec3(0.0,-5.0,0.0),vec3(15.0,0.0,15.0),vec3(0.0),vec3(0.0),vec3(0.3)));\n\n    if (rayHitDist >= maxDist) {\n    \treturn false;\n    }\n    return true;\n}\n\n\n\nvec4 scene() {\n    rayPos = cameraRayPos;\n    rayDir = cameraRayDir;\n\n    if (trace(viewDist)) {\n        vec3 col = 0.5*rayHit.color+max(0.0,dot(lightDir,rayHit.normal))*rayHit.color;\n        \n        rayPos += rayDir*rayHitDist+lightDir*0.01;\n        rayDir = lightDir;\n        #ifdef SHADOWS\n        if (trace(viewDist)) {\n            return col.xyzz*0.5;\n        }\n        #endif\n        \n        return col.xyzz;\n    }\n    \n    return vec4(0.0);\n}\n\n\n\nconst vec2 CENTER_UV = vec2(0.5,0.5);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tcameraPosition = vec3(sin(iTime*0.1)*10.0,2.0,cos(iTime*0.1)*5.0);\n    cameraDirection = normalize(-cameraPosition);\n\n    lightDir = normalize(vec3(sin(iTime)*10.0,8.0,cos(iTime)*10.0));\n    \n    \n\tvec2 cUv = (fragCoord.xy / iResolution.xy)-CENTER_UV;\n    cUv.x *= iResolution.x/iResolution.y;\n\t\n    //camera vectors\n    cameraRight = cross(cameraDirection,cameraUp);\n    cameraUp = cross(cameraRight,cameraDirection);\n    \n    //calculate ray from uv and camera vectors\n    vec3 rPoint = cUv.x*cameraRight +\n                  cUv.y*cameraUp +\n        \t\t  cameraPosition + cameraDirection;\n    \n  \tcameraRayDir = normalize(rPoint-cameraPosition);\n    cameraRayPos = cameraPosition;\n    \n    \n    fragColor = scene();\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mts3WN","date":"1422300682","viewed":165,"name":"dragon daggerr","username":"public_int_i","description":"3d ray trace of a dragon dagger from runescape","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","ray","dragon","trace","dagger"],"hasliked":0,"parentid":"","parentname":""}}