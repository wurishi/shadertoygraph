{"ver":"0.1","info":{"id":"Xc3fWs","date":"1733601705","viewed":101,"name":"color shine ","username":"nayk","description":"originals https://glslsandbox.com/e#65437.2 https://www.shadertoy.com/view/4tyfWy","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["color","glow","shine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265359\n#define T (time / .99)\n#define time iTime\n#define resolution iResolution.xy\n\n\nconst float aoinParam1 = 0.8;\n\nfloat snow(vec2 uv,float scale)\n{\n\tfloat w=smoothstep(9.,0.,-uv.y*(scale/10.));if(w<.1)return 0.;\n\t//uv+=(time*aoinParam1)/scale;\n\tuv.y += time*0./scale;\n\tuv.x += sin(uv.y+time*.05)/scale;\n\tuv*=scale;vec2 s=floor(uv),f=fract(uv),p;float k=3.,d;\n\tp=.5+.35*sin(11.*fract(sin((s+p+scale)*mat2(7,3,6,5))*2.))-f;d=length(p);k=min(d,k);\n\tk=smoothstep(0.,k,sin(f.x+f.y)*0.01);\n    \treturn k*w;\n}\n\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(.5, 1.0, 1.0);\n    vec3 d = vec3(0.063,0.416,0.557);\n\n   \n   return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 position = (( gl_FragCoord.xy / resolution.xy ) - 0.5);\n\tposition.x *= resolution.x / resolution.y;\n\tfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(position.xy) + 5.8)) * 5.5;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n  \n\tfloat time = time*.04 + 4.*pow(1.+length(position), -4.);\n\t\n\tvec3 color = vec3(0.);\n\n\tvec2 uv=(gl_FragCoord.xy*2.-resolution.xy)/min(resolution.x,resolution.y); \n\tvec3 finalColor=vec3(0);\n  \n\tfloat c=.5;\n\t\n\tfloat v1, v2, v3;\n\tv1 = v2 = v3 = 0.0;\n        float len = length(uv);\n\t\tv1 *= smoothstep(.7, .0, len);\n\tv2 *= smoothstep(.5, .0, len);\n\tv3 *= smoothstep(.9, .0, len);\n\tvec3 col2;\n\tvec3 col = vec3( v3 * (1.5 + sin(iTime * .2) * .4),\n\t\t\t\t\t(v1 + v3) * .3,\n\t\t\t\t\t v2) + smoothstep(0.2, .0, len) * .85 + smoothstep(.0, .6, v3) * .3;\n\tfor (float i=-10.;i<50.;i+=1.)\n    col2 = palette(length(uv) + i*.24 + iTime*.4),\n     uv*=ma,\n     \n\t\tc+=snow(uv*mat2(cos(time/10.+float(i))+ col.x, sin(time/9.+float(i))* col.x, -sin(time/8.+float(i)), cos(time/7.+float(i))), i) * (1.0 + 1.0*abs(sin(time)));\n\n\t\n\tif ((uv.x*uv.x + uv.y*uv.y) < 0.5) \n\t\tc += uv.y*sin(time);\n\telse\n\t\tc += uv.x*sin(time);\t\n\t\n\t\n\tfinalColor=(vec3(c+col*col2));\t\n\tfragColor = (vec4( color, 1.0 ) + vec4(finalColor*vec3(0.2,0.1,0.5)+col2,1)) / vec4(2, 2, 2, 1);\n\n uv *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n    fragColor+= vec4(happy_star(uv, anim) * vec3(0.35,0.2,0.15), 1.0);\n}","name":"Image","description":"","type":"image"}]}