{"ver":"0.1","info":{"id":"4X3Szn","date":"1720783085","viewed":114,"name":"frame 架子","username":"shadertoyjiang","description":"A number of problems have been encountered, for which no solution has yet been found.","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["frame"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define PI    3.14159265358979\n#define PI2   6.28318530717957\n\nfloat h;\n\nfloat smin(float a, float b, float k){float h = clamp(.5+.5*(a-b)/k, 0., 1.);return mix(a, b, h) \n\n- k * h*(1.-h);}\nfloat sdshl(vec3 p)\n{\n        float r = length(p);\n        h = .04 * ( r+2.)*r;\n        //h=r*r*.1;\n        \n        //h=1.;\n        \n        p = p * 40. / dot(p,p); // 反演\n        float g = 6.,d, md = g*g*25.;\n        p = p / g;\n        p = p  - floor(p+.5);\n        p *= g;\n        vec3 q = abs(p)-g*.5;\n        p = q;\n        for(int i=0;i<3;i++)\n        {\n                if(p.x>q.x)p=q;\n                q=q.yzx;\n        }\n        float d1= (smin(length(p.yz)- .5, length(p)-1.2, .2))*.15;\n        float d2= -(r-10.);\n        return d1;\n        return min(d1,d2);\n}\n\nfloat map(vec3 p)\n{\n        float t = iTime -5.2;\n        vec2 ms = iMouse.x/iResolution.xy*6.28\n                + vec2(124,139)/vec2(320,240)*6.28\n                + t;\n        p.xy = p.xy * rot(t +1.);\n        p.xz = p.xz * rot(ms.x);\n        p.yz = p.yz * rot(ms.y);\n        return sdshl(p);\n}\n\n\n\nfloat softshadow(vec3 ro, vec3 rd )\n{\n   float res = 1.;\n   float t = .1, k = 9.;\n   for(int i =0;i<56;i++)\n   {\n               float h = map(ro + rd * t);\n               if(h<.01 || t>20.)return 0.;\n               res = min(res, k*h/t);\n               t += h;\n   }\n   return res;\n}\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n        O = vec4(0);\n        vec2 R = iResolution.xy,\n             u = (U+U - R) / R.y;\n        vec3 eye = vec3(0, 0, -5),\n             dir = normalize(vec3(u, 1.5)),\n             sun = 5. * ( .2*cos(iTime+vec3(7,11,13)) + vec3(-1,2,-3)/3.74 ),\n             eps = vec3(0, .0001, 0),\n             nor, p;\n        float d , t=0., nt = 0., shi=1.;\n        for(int i=0; i<1128 ;i++)\n        {\n                if(t>135.)break;\n                p = eye + dir * t;\n                d = map(p);\n                if( d<.001 )\n                {       // phong 光照模型\n                        nor = normalize(vec3(map(p+eps.yxx), map(p+eps), map(p+eps.xxy))-d); \n                        vec3 f = reflect(dir, nor), lp = normalize(sun - p);\n                        float lm = dot(f, lp);\n                        float am =.05;\n                        vec4 vm = (pow(lm, 8.)*3. + lm*vec4(1,.5,0,1))/2.  +am;\n                        float yin = softshadow(p, f);\n                        vm = vm * (yin *(1. - .2)+.2)+am;\n                        O = O+vm * 2.85*vec4(1,.4,0,1)*shi  /(   2.*sin(iTime*.4)-u.x>0. ? 1. : h   );//    ( 2.*sin(iTime*.4)-u.x );     // (U.x<R.x*-.5 ?1.:h);\n                        nt++;\n                        if(nt> 4.){O+=am*shi;break;}\n                        shi *=.6;\n                        dir = f;\n                        t = 0.;\n                        eye += dir * -d*2.;\n                }\n                t += d * .2;\n        }\n        O+=152.1*exp(-2000.*abs(2.*sin(iTime*.4)-u.x));\n        /////if(U.x<R.x*.5)O+=.1;\n        \n        \n        O+=.2;\n        //O-=.05;   O = sqrt(max(O,0.));\n}\n\n\n\n\n\n\n/*\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define PI    3.14159265358979\n#define PI2   6.28318530717957\n\nfloat smin(float a, float b, float k){float h = clamp(.5+.5*(a-b)/k, 0., 1.);return mix(a, b, h) \n\n- k * h*(1.-h);}\nfloat sdshl(vec3 p)\n{\n        float r = length(p);\n        p = p * 40. / dot(p,p); // 反演\n        float g = 6.,d, md = g*g*25.;\n        p = p / g;\n        p = p  - floor(p+.5);\n        p *= g;\n        vec3 q = abs(p)-g*.5;\n        p = q;\n        for(int i=0;i<3;i++)\n        {\n                if(p.x>q.x)p=q;\n                q=q.yzx;\n        }\n        return (smin(length(p.yz)- .5, length(p)-.7, .1))*.15;\n}\n\nfloat map(vec3 p)\n{\n        float t = iTime+5.;\n        vec2 ms = iMouse.xy/iResolution.xy*6.28\n                + vec2(124,139)/vec2(320,240)*6.28\n                + t;\n        p.xy = p.xy * rot(t +1.);\n        p.xz = p.xz * rot(ms.x);\n        p.yz = p.yz * rot(ms.y);\n        return sdshl(p);\n}\n\n\nfloat softshadow(vec3 ro, vec3 rd )\n{\n   float res = 1.;\n   float t = .1, k = 2.;\n   for(int i =0;i<26;i++)\n   {\n               float h = map(ro + rd * t);\n               if(h<.01 || t>20.)return 0.;\n               res = min(res, k*h/t);\n               t += h;\n   }\n   return res;\n}\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n        O = vec4(0);\n        vec2 R = iResolution.xy,\n             u = (U+U - R) / R.y;\n        vec3 eye = vec3(0, 0, -5),\n             dir = normalize(vec3(u, 1.5)),\n             sun = 5. * ( .2*cos(iTime+vec3(7,11,13)) + vec3(-1,2,-3)/3.74 ),\n             eps = vec3(0, .0001, 0),\n             nor, p;\n        float d , t=0., nt = 0., shi=1.;\n        for(int i=0; i<128 ;i++)\n        {\n                if(t>135.)break;\n                p = eye + dir * t;\n                d = map(p);\n                if( d<.01 )\n                {       // phong 光照模型\n                        nor = normalize(vec3(map(p+eps.yxx), map(p+eps), map(p+eps.xxy))-d); \n                        vec3 f = reflect(dir, nor), lp = normalize(sun - p);\n                        float lm = dot(f, lp);\n                        float am =.05;\n                        vec4 vm = (pow(lm, 8.)*12. + lm*vec4(1,.5,0,1))  +.05;\n                        float yin = softshadow(p, f);\n                        vm = vm * (yin *(1. - .2)+.2)+am;\n                        O = O+vm * 1.8*vec4(1,.2,0,1)*shi;\n                        nt++;\n                        if(nt> 3.){O+=am*shi;break;}\n                        shi *=.95;\n                        dir = f;\n                        t = 0.;\n                        eye += dir * -d*2.;\n                }\n                t += d * .8;\n        }\n}\n\n*/\n\n\n\n","name":"Image","description":"","type":"image"}]}