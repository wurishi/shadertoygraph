{"ver":"0.1","info":{"id":"dljBRy","date":"1694197545","viewed":30,"name":"GGX Feasible Region","username":"dxtst","description":"GGX sample region, red represent the outgoing rays will go below the surface","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pbr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\nvec4 ImportanceSampleGGX( in vec2 E, float a2 )\n{\n\tfloat Phi = 2.0 * PI * E.x;\n\tfloat CosTheta = sqrt( (1.0 - E.y) / ( 1.0 + (a2 - 1.0) * E.y ) );\n\tfloat SinTheta = sqrt( 1.0 - CosTheta * CosTheta );\n\n\tvec3 H;\n\tH.x = SinTheta * cos( Phi );\n\tH.y = SinTheta * sin( Phi );\n\tH.z = CosTheta;\n\t\n\tfloat d = ( CosTheta * a2 - CosTheta ) * CosTheta + 1.0;\n\tfloat D = a2 / ( PI*d*d );\n\tfloat PDF = D * CosTheta;\n\n\treturn vec4( H, PDF );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float time = iTime;\n\n    float a2 = 0.9;\n    vec4 s = ImportanceSampleGGX(uv, a2);\n    \n    float t = mod(time, (2.0 * PI));\n    float vz = 0.3;\n    float r = sqrt(1.0 - vz * vz);\n    \n    vec3 V = vec3(r * cos(t), r * sin(t), vz);\n    vec3 H = s.xyz;\n    vec3 L = 2.0 * dot( V, H ) * H - V;\n    \n    vec3 col = vec3(0, 1, 0);\n    if(L.z < 0.0)\n    {\n        col = vec3(1, 0, 0);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}