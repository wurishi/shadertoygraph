{"ver":"0.1","info":{"id":"Dtyfzy","date":"1702194906","viewed":39,"name":"lensing in colorful","username":"nayk","description":"colorful, lens, rotate,space","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["lens","colorful","rotate","space"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*originals https://www.shadertoy.com/view/dl3XDS https://www.shadertoy.com/view/csdyW7*/\n\n#define count 24.\n\nvec2 Rot(vec2 uv, float amount)\n{\n    float rot = iTime * amount;\n    return vec2(uv.y*sin(rot)+uv.x*cos(rot), uv.y*cos(rot)-uv.x*sin(rot));\n}\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\nvec2 lens(vec2 uv) {\n     float size = 0.3+(0.21*cos(iTime));\n    float t = iTime * 0.3;\n    \n    vec2 p = vec2(sin(t*3.0)* 0.5, sin(t*5.) * 0.3);\n    vec2 d = p - uv;\n    \n    float l = length(d);    \n    float lf = smoothstep(size+0.01, size-0.01, l);\n    \n    vec2 dn = d / size;\n    \n    //vec2 res = vec2(pow(10., dn.x), pow(10., dn.y));\n    \n    return lf * (dn * dn * dn);\n    \n    //return vec2(0.);\n}\n\nfloat TriSDF(vec2 uv, float r)\n{\n    const float k = sqrt(3.);\n    uv.x = abs(uv.x) - r;\n     uv.y = fract(uv.x)*uv.x-r;\n    uv.y = uv.y + r/k;\n    if(uv.x/k*uv.y>0.) uv=vec2(uv.x-k+uv.y,-k*uv.x+uv.y)/2.;\n    uv.x -= clamp(uv.x,-20.*r, 1.);\n    return -length(uv)*sign(uv.y);\n}\n\nvoid mainImage(out vec4 O, in vec2 u)\n{\n  \n   \n    \nvec4 O2 = O;\n      vec2 C =u;\n    O2=vec4(0);\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O2.xyz+=mix(vec3(1),H(g*.1),sin(.8))*1./e/8e3\n    )\n    {\n        p=g*d;\n        p.z+=iTime*0.5;\n        a=10.;\n        p=mod(p-a,a*2.)-a;\n        s=6.;\n        for(int i=0;i++<8;){\n            p=.03-abs(p);\n            \n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n            \n            s*=e=1.4+sin(iTime*.234)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.+cos(iTime*.3+.5*sin(iTime*.3))*3.,\n                    120,\n                    8.+cos(iTime*.5)*5.\n                 );\n         }\n         g+=e=length(p.yz)/s;\n            g+=e=length(p.xz)/s;\n             g+=e=length(p.zy)/s;\n    }\n     O -= O;\n      u = (u+u-iResolution.xy)/iResolution.y;\n     u -= lens(u);\n      for(float i = 0.; i < count; i++)\n    {\n        vec2 ruv = Rot(u,i*0.02);\n      \n        float scale = 1.5*fract(iTime/3.5 + i*1./count);//0.5;\n        float tri = abs(TriSDF(ruv, 1.5*fract((i*1./count)+iTime*.02)));\n        tri = smoothstep(0.01,0.,tri)+smoothstep(0.2,0.,tri)*.15;\n        vec3 col = vec3(cos(i+iTime+vec3(1.,1.,2.))+0.2);\n        O += vec4(tri * col, 0.)*O2;\n    }\n}","name":"Image","description":"","type":"image"}]}