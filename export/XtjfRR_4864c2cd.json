{"ver":"0.1","info":{"id":"XtjfRR","date":"1514477523","viewed":162,"name":"try for shadow","username":"cailuming","description":"try a shadow,but the problems are that I can not make a soft shadow and the shadow is not smooth","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shadow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FAR 128.\n#define PI 3.1415926\nstruct Ray{\n   vec3 o;\n   vec3 d;\n};\n\nmat3 rotY(float a){\n  float s =sin(a);\n  float c=cos(a);\n  \n  return mat3(\n     c,0,-s,\n     0,1,0,\n     s,0,c\n  );\n}\n\nmat3 rotX(float a){\n  float s =sin(a);\n  float c=cos(a);\n  \n  return mat3(\n     1,0,0,\n     0,c,-s,\n     0,s,c\n  );\n}\n\n\nfloat obj1(vec3 pr,vec3 c){\n    vec3 p=pr-c;\n    p.xz=mod(p.xz,4.);\n    p.xz-=2.;\n    \n    return length(p)-0.4;\n}\n\nfloat obj2(vec3 pr,vec3 c){\n    vec3 p=pr-c;\n  \n    float arc = atan(p.y,p.x);\n    vec3 polor =vec3(cos(arc),sin(arc),5);\n    return length(p-polor)-0.5;\n}   \n\nfloat obj3(vec3 pr,vec3 c){\n    vec3 p=pr-c;\n    p=abs(p);\n    return (p.y+p.x+p.z-2.)/sqrt(3.0);\n}   \n\n\nfloat plane(vec3 p,vec3 c){\n    p-=c;\n   \n    vec3 polor =vec3(p.x,-3.,p.z);\n\n    return length(p-polor);\n}\n\nfloat fog(vec3 p,vec3 c){\n   float dis =length(p-c);\n    dis*=0.040;\n    //dis*=dis;\n   return dis; \n}\n\nvoid drawBg(vec3 p,out vec3 col){\n    p-=vec3(0,24.,0);\n    float arc=atan(p.y,p.x);\n    float v =3./length(p.xy);\n    v=pow(v,2.);\n    \n    float v1=abs(sin(4.*arc+iTime));\n    v1=pow(v1,20.);\n    \n    v+=0.1*v1;\n    col=vec3(0.8,0.8,1.);\n    col=mix(vec3(v),col,0.5);\n}\n\n\nfloat map(vec3 p){\n   float ref=1.;\n    \n   float temp =obj1(p,vec3(0,-2.1,-9));\n     \n   if(ref>temp){\n       ref=temp;\n   }\n   \n   temp =obj2(p,vec3(1,sin(iTime),-8));\n     \n   if(ref>temp){\n       ref=temp;\n   }\n    \n   temp =obj3(p,vec3(-2,sin(iTime),1-1));\n     \n   if(ref>temp){\n       ref=temp;\n   }\n    \n  \n   temp =plane(p,vec3(0,0,0));\n   \n   if(ref>temp){\n        ref=temp;    \n   }\n       \n   return ref;\n}\n\n// compute normal from gradient vector\nvec3 getNormal(vec3 p){\n   \n\tvec2 d = vec2(0.0,0.001);\n    float mc = map(p);\n    return -normalize(vec3(\n        mc-map(p+d.yxx),\n        mc-map(p+d.xyx),\n        mc-map(p+d.xxy)\n    ));\n \n}\n\nfloat getShadowFrac(vec3 lo,vec3 ld,float maxt){\n   \n    float res=1.;\n    float t =0.1;\n    float lds=0.;\n    \n    for(float i=0.;i<64.;i++){\n        // trace forward\n       lds =map(lo+t*ld);\n       \n       res=min(lds*128./t,res);\n       \n       t+=clamp(lds,0.0001,0.4);\n        \n       if(t>=maxt||t<0.0001){\n          break;\n       }\n        \n    }\n    return res;\n}\n\nvec3 rayHit(Ray ray,vec3 lightPos){\n    float t=1.;\n   \n    float nl =0.;\n       \n    vec3 p=vec3(0);\n    vec3 l2p =vec3(0);\n    \n    float lp=0.;\n    float isHit=0.;\n    float hit =0.;\n    \n    for(float i=0.;i<FAR;i++){\n       p=ray.o+t*ray.d;\n       \n       hit =map(p);\n       \n       l2p= p-lightPos;\n       if(hit<=0.006){\n           \n           nl =clamp(dot(normalize(lightPos),getNormal(p)),0.2,1.);\n           lp=getShadowFrac(lightPos,normalize(l2p),length(l2p)-0.3);\n           nl*=lp;\n      \n           nl+=pow(abs(nl),20.); \n           isHit=1.;    \n           break;\n       }\n        \n       if(t>=20.){\n         \n          break;\n       }\n       t+=hit;\n    }\n    \n   \n    return vec3(nl,t/12.,isHit);\n}\n\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy-vec2(0.5);\n    float as = iResolution.x/iResolution.y;\n     \n    vec3 eye =vec3(0,0,-15);\n    vec3 screen =vec3(uv.x*as,uv.y,-14);\n    vec3 col =vec3(0);\n    vec3 lightPos =vec3(10.*cos(iTime),14.,10.*sin(iTime));\n    \n    Ray ray; \n    ray.o= eye;\n    ray.d =normalize(screen-ray.o);\n    ray.o*=rotX(PI*0.02);\n    ray.d*=rotX(PI*0.02);\n   \n    ray.d*=rotY(PI*0.1*sin(iTime*0.2));\n    \n    \n    vec3 eyeHit= rayHit(ray,lightPos);\n    if(eyeHit.z<=0.){\n       drawBg(ray.o+ray.d*80.,col);\n    }\n    \n   \n    col  +=vec3(eyeHit.x);\n    col= mix(col,vec3(0.4,0.8,1)*eyeHit.y,0.5);\n    \n    fragColor = vec4(col,1.0);\n       \n}","name":"Image","description":"","type":"image"}]}