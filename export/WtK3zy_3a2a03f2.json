{"ver":"0.1","info":{"id":"WtK3zy","date":"1579523012","viewed":231,"name":"Cardioid animation","username":"nurof3n","description":"cardioid","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["cardioid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float r = 0.2;\nconst vec2 h = vec2(0.01, 0.0);\nconst float pi = 3.141592;\n\nfloat disttoline(vec2 a, vec2 b, vec2 p) {\n \treturn abs( (b.y-a.y)*p.x - (b.x-a.x)*p.y + b.x*a.y-a.x*b.y ) / sqrt( dot(b-a, b-a) ) \n        * (length(a-p) + length(b-p) - length(a-b) < 0.001 ? 1.0 : 3000.0);   \n}\n\nfloat sq(float x) {\n\treturn x*x;   \n}\nfloat f(vec2 uv) {\n\treturn sq(dot(uv,uv)) + 4.0*r*uv.x*dot(uv,uv) - 4.0*sq(uv.y)*sq(r);  \n}\nvec2 fparam(float theta) {\n\treturn 2.0*r*(1.0-cos(theta))*vec2(cos(theta), sin(theta));   \n}\nvec2 grad(vec2 uv) {\n\treturn vec2(4.0*uv.x*uv.x*uv.x+4.0*uv.x*sq(uv.y)+12.0*r*sq(uv.x)+4.0*r*sq(uv.y),\n                4.0*uv.y*uv.y*uv.y+4.0*uv.y*sq(uv.x)+8.0*r*uv.x*uv.y-8.0*sq(r)*uv.y);   \n}\n\n#define grad2d(uv, func) (vec2( func(uv+h.xy) - func(uv-h.xy), func(uv+h.yx) - func(uv-h.yx) ) / (2.0*h.x))\n\n#define sdf2d(uv, g, func) ((func(uv)) / length(g))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec2 g = grad2d(uv, f);\n    float de = sdf2d(uv, g, f);\n    \n    float theta = atan(uv.y, -uv.x) + pi;\n    float thetamax = mod(-iTime, 2.0*pi);\n    vec2 curvepoint = fparam(-thetamax);\n    float factor = step(theta, thetamax);\n    \n    //account for retard gradients\n    de += step(abs(uv.y), 0.017) * step(-0.03, uv.x) * step(uv.x, 0.0);// + mod(floor(theta*pi*50.),2.0);    \n    \n    vec3 color;\n    vec3 bgcolor = vec3(0.9,0.8,0.6) * pow(2.0, -length(uv));\n    color = mix( bgcolor, mix( vec3(0.3, 0.2, 0.4), bgcolor, factor ), smoothstep(0.01, 0.0, abs(de)) );\n    vec2 centre1 = vec2(-r, 0.0);\n    vec2 centre2 = 2.0*r*vec2(cos(iTime), sin(iTime)) - vec2(r, 0.0);\n    color = mix(vec3(0.0, 0.0, 0.0), color, smoothstep(0.0, 0.01, abs(length(uv - centre1) - r)));\n    vec3 color2 = vec3(0.7*sin(iTime), 0.5*cos(iTime), 0.3);\n    color = mix(color2, color, smoothstep(0.0, 0.01, abs(length(uv - centre2) - r)));\n    color = mix(vec3(0.0), color, smoothstep(0.02, 0.03, length(uv - curvepoint)));\n\n    float linedist = disttoline(centre2, curvepoint, uv);\n    color = mix(vec3(0.0), color, smoothstep(0.0, 0.01, linedist) * smoothstep(0.01, 0.02, length(uv - centre2)));\n    \n    color = mix(color, vec3(0.4, 0.07, 0.0), smoothstep(theta, theta-pi, thetamax) \n                \t\t\t* smoothstep(0.0,-0.02,de)\n                \t\t\t* smoothstep(0.0, 0.02, (length(uv - centre1) - r))\n               \t\t\t\t* smoothstep(0.0, 0.01, (length(uv - centre2) - r))); \n    \n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}