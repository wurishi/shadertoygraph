{"ver":"0.1","info":{"id":"lsyfRw","date":"1528473170","viewed":570,"name":"Art by Numbers IV","username":"mhnewman","description":"Inspired by the works of Takashi Murakami","likes":37,"published":1,"flags":0,"usePreview":0,"tags":["procedural","art","takashi","murakami"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float border = 0.02;\nfloat aa;\n\nfloat hash(float p) {\n    vec3 p3 = fract(p * vec3(5.3983, 5.4427, 6.9371));\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat hash(vec2 p) {\n\tp = fract(p * vec2(5.3983, 5.4427));\n    p += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\n    return fract(p.x * p.y);\n}\n\nvec2 hash2(vec2 p) {\n\tp = fract(p * vec2(5.3983, 5.4427));\n    p += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\n\treturn fract(vec2(p.x * p.y * 95.4337, p.x * p.y * 97.597));\n}\n\nvec3 drawEye(vec3 background, vec2 pos, vec2 center, float radius, vec3 color) {\n    float r = distance(pos, center);\n    r = (radius - r) / aa + 0.5;\n    return mix(background, color, clamp(r, 0.0, 1.0));\n}\n\nvec3 drawHead(vec3 background, vec2 pos, vec2 center, float radius, vec3 color) {\n    float r = distance(pos, center);\n    float a = clamp((radius - r) / aa + 0.5, 0.0, 1.0);\n    float c = clamp((radius - r - border) / aa + 0.5, 0.0, 1.0);\n    return mix(background, c * color, a);\n}\n\nvec3 drawMouth(vec3 background, vec2 pos, vec2 center1, float radius1, vec2 center2, float radius2, vec3 color) {\n    float r1 = distance(pos, center1);\n    float a1 = clamp((radius1 - r1) / aa + 0.5, 0.0, 1.0);\n    float c1 = clamp((radius1 - r1 - border) / aa + 0.5, 0.0, 1.0);\n    float r2 = distance(pos, center2);\n    float a2 = clamp((radius2 - r2) / aa + 0.5, 0.0, 1.0);\n    float c2 = clamp((radius2 - r2 - border) / aa + 0.5, 0.0, 1.0);\n    return mix(background, c1 * c2 * color, a1 * a2);\n}\n\nvec3 drawPetal(vec3 background, vec2 pos, vec2 center, float radius, vec3 rotation, vec3 color1, vec3 color2) {\n    pos -= center;\n    float r = length(pos);\n    float t = 1.9098593 * atan(pos.y, pos.x) + rotation.x * sin(rotation.y * iTime + 6.2831853 * rotation.z);\n    t = mod(t, 2.0);\n    vec3 color = mix(color1, color2, step(t, 1.0));\n    t = 0.52359878 * (0.5 - abs(mod(t, 1.0) - 0.5));\n    pos = r * vec2(cos(t), sin(t));\n    \n    r = distance(pos, radius * vec2(0.767327, 0.2056046));\n    float a = clamp((0.2056046 * radius - r + 0.5 * border) / aa + 0.5, 0.0, 1.0);\n    float c = clamp((0.2056046 * radius - r - 0.5 * border) / aa + 0.5, 0.0, 1.0);\n    \n    float stem = step(pos.x, 0.767327 * radius);\n    a = mix(a, 1.0, stem);\n    c = mix(c, clamp((pos.y - 0.5 * border) / aa + 0.5, 0.0, 1.0), stem);\n    \n    return mix(background, c * color, a);\n}\n\n#define range(min, max) mix(min, max, hash(id += 0.1))\n#define hsv(hue, sat, val) (val) * (vec3(1.0 - (sat)) + (sat) * (0.5 + 0.5 * cos(6.2831853 * (vec3(hue) + vec3(0.0, 0.33, 0.67)))))\n\nvec3 draw(vec3 color, vec2 pos, vec2 screen, vec2 block, vec2 offset, float level) {\n    block += mod(offset - mod(block, 5.0), 5.0) - 2.0;\n    \n    float id = hash(block);\n    vec2 center = block + vec2(0.1) + 0.8 * hash2(block) - 0.01 * level * screen;\n    vec3 rotation = vec3(range(0.0, 2.0), range(0.0, 0.8), range(0.0, 1.0));\n    float petalHue = range(0.0, 1.0);\n    float petalSat1 = pow(hash(id += 0.1), 0.4);\n    float petalSat2 = pow(hash(id += 0.1), 2.0) * petalSat1;\n    vec3 petal1 = hsv(petalHue, petalSat1, 1.0);\n    vec3 petal2 = hsv(petalHue, petalSat2, 1.0);\n    vec3 mouth = hsv(range(0.0, 1.0), 0.8, 1.0);\n    vec3 left = hsv(fract(2.0 * iTime + hash(id += 0.1)), 0.5, 0.8);\n    vec3 right = hsv(fract(2.0 * iTime + hash(id += 0.1)), 0.5, 0.8);\n    float radius = mix(0.4, 1.4, pow(hash(id += 0.1), 2.0));\n\n    color = drawPetal(color, pos, center, radius, rotation, petal1, petal2);\n    color = drawHead(color, pos, center, 0.4 * radius, vec3(1.0));\n    color = drawEye(color, pos, center + radius * vec2(-0.14, 0.18), 0.05 * radius, left);\n    color = drawEye(color, pos, center + radius * vec2(0.14, 0.18), 0.05 * radius, right);\n    color = drawMouth(color, pos, center, 0.28 * radius, center + radius * vec2(0.0, -0.64), 0.72 * radius, mouth);\n    \n    return color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 screen = 3.0 * (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    float t = 0.1 * iTime;\n    vec2 pos = screen + 3.0 * vec2(t + 0.4 * sin(2.0 * t), 2.0 * cos(t));\n    aa = 6.0 / iResolution.y;\n    \n    vec2 block = floor(pos);\n    \n    vec3 color = vec3(0.8, 0.7, 0.9);\n    \n    color = draw(color, pos, screen, block, vec2(0.0, 0.0), 24.0);\n    color = draw(color, pos, screen, block, vec2(2.0, 1.0), 23.0);\n    color = draw(color, pos, screen, block, vec2(4.0, 0.0), 22.0);\n    color = draw(color, pos, screen, block, vec2(3.0, 2.0), 21.0);\n    color = draw(color, pos, screen, block, vec2(4.0, 4.0), 20.0);\n    color = draw(color, pos, screen, block, vec2(2.0, 3.0), 19.0);\n    color = draw(color, pos, screen, block, vec2(0.0, 4.0), 18.0);\n    color = draw(color, pos, screen, block, vec2(1.0, 2.0), 17.0);\n    color = draw(color, pos, screen, block, vec2(2.0, 0.0), 16.0);\n    color = draw(color, pos, screen, block, vec2(4.0, 1.0), 15.0);\n    color = draw(color, pos, screen, block, vec2(3.0, 3.0), 14.0);\n    color = draw(color, pos, screen, block, vec2(1.0, 4.0), 13.0);\n    color = draw(color, pos, screen, block, vec2(0.0, 2.0), 12.0);\n    color = draw(color, pos, screen, block, vec2(1.0, 0.0), 11.0);\n    color = draw(color, pos, screen, block, vec2(3.0, 1.0), 10.0);\n    color = draw(color, pos, screen, block, vec2(4.0, 3.0), 9.0);\n    color = draw(color, pos, screen, block, vec2(2.0, 4.0), 8.0);\n    color = draw(color, pos, screen, block, vec2(0.0, 3.0), 7.0);\n    color = draw(color, pos, screen, block, vec2(1.0, 1.0), 6.0);\n    color = draw(color, pos, screen, block, vec2(3.0, 0.0), 5.0);\n    color = draw(color, pos, screen, block, vec2(4.0, 2.0), 4.0);\n    color = draw(color, pos, screen, block, vec2(3.0, 4.0), 3.0);\n    color = draw(color, pos, screen, block, vec2(1.0, 3.0), 2.0);\n    color = draw(color, pos, screen, block, vec2(0.0, 1.0), 1.0);\n    color = draw(color, pos, screen, block, vec2(2.0, 2.0), 0.0);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}