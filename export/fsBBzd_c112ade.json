{"ver":"0.1","info":{"id":"fsBBzd","date":"1646834227","viewed":85,"name":"Organic Blob","username":"Radical_Ed","description":"Organic Matter","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["organic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n//https://thebookofshaders.com/12/?lan=jp\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n\n    vec3 color = vec3(0.0,1.0,0.35);\n\n    // Cell positions\n    vec2 point[15];\n    point[0] = vec2(0.83,0.75);\n    point[1] = vec2(0.60,0.07);\n    point[2] = vec2(0.28,0.64);\n    point[3] =  vec2(0.31,0.26);\n    point[4] = vec2(sin(iTime)/iResolution);\n    point[5] = vec2(0.63,0.35);\n    point[6] = vec2(0.93,0.35);   \n    point[7] = vec2(1.23,0.35);\n    point[8] = vec2(1.11,0.95);\n    point[9] = vec2(0.63,0.35);\n    point[10] = vec2(0.93,0.35);   \n    point[11] = vec2(1.33,0.45);\n    point[12] = vec2(1.43,0.95);\n    point[13] = vec2(1.63,0.35);\n    point[14] = vec2(1.93,0.25);   \n   \n\n    float m_dist = 1.;  // minimum distance\n\n    // Iterate through the points positions\n    for (int i = 0; i < 15; i++) {\n        float dist = distance(st, point[i]*abs(sin(iTime/50.)));\n\n        // Keep the closer distance\n        m_dist = min(m_dist, dist*2.);\n    }\n\n    // Draw the min distance time(distance field)\n    color += m_dist/1.;\n\n    // Show isolines\n    //color -= step(.9,abs(sin(50.0*m_dist)))*.3;\n\n    fragColor = vec4(1.0-color,1.0);\n}","name":"Image","description":"","type":"image"}]}