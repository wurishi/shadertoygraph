{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"const float frequency = 1.5;\nconst float amplitude = .65;\n\nfloat rand(vec2 n) {\n  return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 pos) {\n  vec2 i = floor(pos);\n  vec2 f = fract(pos);\n\n  f = f * f * (3.0 - 2.0 * f);\n\n  float res = mix(\n    mix(rand(i), rand(i + vec2(1.0, 0.0)), f.x),\n    mix(rand(i + vec2(0.0, 1.0)), rand(i + vec2(1.0, 1.0)), f.x),\n    f.y\n  );\n  return res * res;\n}\n\nfloat fbm(in vec2 pos) {\n  float total = 0.0;\n  float currAmp = amplitude;\n  float currFreq = frequency;\n  for (int i = 0; i < 5; i++) {\n    total += currAmp * noise(pos * currFreq);\n    currFreq *= 2.0;\n    currAmp *= 0.5;\n  }\n  return total;\n}\n\nfloat pattern(in vec2 pos) {\n  vec2 q = vec2(fbm(pos + vec2(0.0, 0.0)));\n  vec2 r = vec2(fbm(pos + 4.0 * q + vec2(1.7, 9.2)));\n  r += iTime * 0.04;\n  return fbm(pos + 1.76 * r);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = fragCoord / iResolution.xy * 4.5;\n  float displacement = pattern(uv);\n  fragColor = vec4(displacement, 0.2, displacement * 2.2, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"mstGWf","date":"1677970270","viewed":218,"name":"purple fbm liquid","username":"arlomcwalter","description":"Weird liquid wavey shader.l","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["noise","liquid"],"hasliked":0,"parentid":"","parentname":""}}