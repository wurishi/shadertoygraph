{"ver":"0.1","info":{"id":"tlycW1","date":"1610915972","viewed":296,"name":"Minecraft style fire.","username":"Skippy69z","description":"pixelated fire","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["pixefire","pixelatedfire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 coord){\n\treturn fract(sin(dot(coord, vec2(12.9898, 78.233)))* 43758.5453123);\n}\n\nfloat noise(vec2 coord){\n\tvec2 i = floor(coord);\n\tvec2 f = fract(coord);\n\n\t// 4 corners of a rectangle surrounding our point\n\tfloat a = rand(i);\n\tfloat b = rand(i + vec2(1.0, 0.0));\n\tfloat c = rand(i + vec2(0.0, 1.0));\n\tfloat d = rand(i + vec2(1.0, 1.0));\n\n\tvec2 cubic = f * f * (3.0 - 2.0 * f);\n\n\treturn mix(a, b, cubic.x) + (c - a) * cubic.y * (1.0 - cubic.x) + (d - b) * cubic.x * cubic.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 texture_coords = fragCoord/iResolution.xy;\n\n\tfloat f = 2.0;\n\tfloat cellSize = 50.0;\n\n\tvec2 pos = texture_coords;\n\n\tpos.x -= mod(pos.x, 1.0 / cellSize); // pixelation\n\tpos.y -= mod(pos.y, 1.0 / cellSize);\n\n\tpos *= 5.0;\n\tfloat threshold = pos.y;\n\tpos.y -= iTime*2.0;\n\n\tfloat result = 1.0 - abs(noise( vec2((pos.x*f), (pos.y*f)) ) *2.0-1.0) + noise( vec2((pos.x*f), (pos.y*f)) * 2.5 ) * 0.8;\n\tif(result < threshold){result = 0.0;}\n\n    fragColor = vec4(result, result - 0.5, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}