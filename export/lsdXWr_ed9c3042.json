{"ver":"0.1","info":{"id":"lsdXWr","date":"1458854313","viewed":705,"name":"Space Jam","username":"qleonetti","description":"Was playing with Grapher app and wanted to turn some math into a shader","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["2d","math","1bit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RATIO_DEFORMATION 0.5\n#define SCREEN_TRANSLATE 0.5\n#define SCALE 100000000.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) - SCREEN_TRANSLATE;\n    uv.y *= RATIO_DEFORMATION;\n    float c = ceil(\n        cos(uv.x*uv.y * SCALE )-\n   \t\tcos(uv.x/uv.y + iTime)\n    );\n\tfragColor = vec4(c);\n}","name":"Image","description":"","type":"image"}]}