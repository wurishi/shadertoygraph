{"ver":"0.1","info":{"id":"MsdyzX","date":"1519905728","viewed":350,"name":"ISOContours","username":"spidersharma","description":"display isocontours of fields","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["isocontours"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    // Time varying pixel color\n    vec2 d1 = uv - vec2(0.35 + 0.15*sin(iTime), 0.35);\n    vec2 d2 = uv - vec2(0.5, 0.45 + cos(iTime) * 0.25);\n    vec2 d3 = uv - vec2(0.35 + cos(iTime) * 0.25 , 0.25);\n\n    float temp1 = inverseSquare(d1,0.2);\n    float temp2 = inverseSquare(d2,0.2);\n    float temp3 = inverseSquare(d3,0.2);\n\n    float temp = abs(temp1 - temp2 + temp3)/3.;\n    float line = abs(fract(30.*temp - 0.5) - 0.5)/ fwidth(30.* temp);\n \t\n    \n    // Output to screen\n    fragColor = vec4(vec3(line), 1.0);;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/// Fields\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(float p){\n\tfloat fl = floor(p);\n  float fc = fract(p);\n\treturn mix(rand(fl), rand(fl + 1.0), fc);\n}\n\nfloat inverseSquare( vec2 v, float epsilon ) {\n    return 1./( epsilon + dot(v, v) );// + 2.1*noise((50.*length(v)));\n}\n\nvoid pointChargeField(const in vec2 position) {\n}\n\n/// Operators\nvec2 gradient(float scalar) {\n    return vec2(dFdx(scalar), dFdy(scalar));\n}\n\nfloat divergence(const in vec2 vector) {\n    return dFdx(vector.x) + dFdy(vector.y);\n}\n\n\nfloat curl(const in vec2 vector) {\n    float a = dFdy(vector.x);\n    float b = dFdx(vector.y);\n    return b - a;\n}\n\nfloat laplace(float scalar) {\n    return divergence(gradient(scalar));\n}\n   ","name":"Common","description":"","type":"common"}]}