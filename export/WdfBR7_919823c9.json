{"ver":"0.1","info":{"id":"WdfBR7","date":"1587861352","viewed":72,"name":"waxlamp","username":"blepfo","description":"blobs","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["metaball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 translate(vec2 uv, vec2 t) {\n    return uv - t;\n}\n\nmat2 rotate2d(float theta) {\n    return mat2(cos(theta), -sin(theta),\n                sin(theta), cos(theta));\n}\n\n// Exponential smooth min using -log(exp(-a) + exp(-b))\nfloat smoothmin(float a, float b, float k) {\n    return -log2((exp2(-k*a) + exp2(-k*b)));\n}\n\n// Circle centered in [0, 0] x [1, 1]\nfloat circSdf(vec2 uv, float r) {\n    return length(uv - 0.5) - r;\n}\n\n// Rect centered in [0, 0] x [1, 1]\nfloat rectSdf(vec2 uv, vec2 halfSize) {\n    vec2 edgeDist = abs(uv - 0.5) - halfSize;\n    float insideDist = min(max(edgeDist.x, edgeDist.y), 0.);\n    float outsideDist = length(max(edgeDist, 0.));\n    return insideDist + outsideDist;\n}\n\nfloat annularSdf(float sdf, float r) {\n    return abs(sdf) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float scaleFactor = 6.440;\n    // viewLayer = coordinates of viewable rect [0, 0] x [scaleFactor, scaleFactor];\n    vec2 viewLayer = uv * scaleFactor;\n    viewLayer *= rotate2d(3.141/4.);\n    // tileLayer = tile whatever is in [0, 0] x [1, 1]\n    vec2 tileLayer = fract(viewLayer);\n\n    float shapeX = iTime / 4.;\n    \n    vec2 circCenter = fract(translate(tileLayer, vec2(-shapeX, 0.)));\n    float c1 = circSdf(circCenter, 0.216);\n    vec2 rectCenter = fract(translate(tileLayer, vec2(shapeX, 0.)));\n    float r1 = rectSdf(rectCenter, vec2(0.120,0.630));\n    \n    float shape = smoothmin(c1, r1,16.);\n    shape = step(0., annularSdf(shape, 1.828));\n \n    vec3 color = vec3(0.123,0.100,0.550);\n    color = mix(color, vec3(0.310,0.855,0.423), shape);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}