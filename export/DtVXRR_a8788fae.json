{"ver":"0.1","info":{"id":"DtVXRR","date":"1685982665","viewed":112,"name":"Just a port","username":"azeem","description":"Trying to recreate this sketch by Roni (https://twitter.com/KaufmanRoni)\nhttps://openprocessing.org/sketch/1945005","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define t iTime\n#define FRAMES 300.\n#define N 18.\n\n//Trying to recreate this sketch by Roni \n//https://twitter.com/KaufmanRoni\n//https://openprocessing.org/sketch/1945005\n\n\n// CODE IS NOT CLEAN, pardon me please.\nvec3[] pal = vec3[](\n  vec3(0.976, 0.835, 0.192),\n  vec3(0.670, 0.741, 0.368),\n  vec3(0.384, 0.713, 0.870),\n  vec3(0.960, 0.537, 0.639),\n  vec3(0.937, 0.337, 0.184),\n  vec3(0.988, 0.517, 0.019)\n);\n\nfloat easeInOutExpo(float x) {return x <0.000001  ? 0. : x >0.99999 ? 1. : x < 0.5 ? pow(2., 20. * x - 10.) / 2. : (2. - pow(2., -20. * x + 10.)) / 2.;}\nvec3 cir(vec2 uv,vec2 c, float r, in vec3 ogCol, vec3 col){\nvec2 uvLinear=vec2( uv.x*cos(uv.y),uv.x*sin(uv.y)    );\nvec2 cLinear=vec2( c.x*cos(c.y),c.x*sin(c.y)    );\nreturn mix(   col,ogCol,smoothstep( -0.001,0.001,length(uvLinear-cLinear)-r)   );\n}\n//copied from\n//https://www.shadertoy.com/view/MlcGDB\nvec3 lin2(vec2 uv, vec2 p1, vec2 p2, float r,vec3 ogCol, vec3 col) {\n    vec2 P=vec2( uv.x*cos(uv.y),uv.x*sin(uv.y) );\n    vec2 A=vec2( p1.x*cos(p1.y),p1.x*sin(p1.y) );\n    vec2 B=vec2( p2.x*cos(p2.y),p2.x*sin(p2.y) );\n    vec2 g = B - A;\n    vec2 h = P - A;\n    float d = length(h - g * clamp(dot(g, h) / dot(g,g), 0.0, 1.0));\n\treturn mix(ogCol,col,smoothstep(r, 0.25*r, (d)));\n\t//return mix(ogCol,col,smoothstep(r, 0.5*r, (d)));    \n}\n\nfloat getJ(float iR,float rS,float inc,float l){\n    for(float i=0.;i<6.5;i+=1.){\n        if(l<iR+2.*rS*i+inc*(i-1.)*i) return i;   \n    }\n    return 0.;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n    uv.x*=iResolution.x/iResolution.y;\n    //uncomment each one for different variations\n    //uv.y+=.03*sin(uv.x*100.);\n    //uv.y+=.03*sin(uv.y*100.);\n    //uv+=.1*sin(uv*15.);   //LUDO variant\n    //uv+=.05*sin(uv*30.);\n    vec2 ogUV=uv;\n\n    vec3 col=vec3(.5);\n    col=vec3(1.,.98,.9);\n    \n    float initialR=0.05;\n    float rStart=0.01;\n    float inc=1.0*rStart;    //inc is radius, not dia of the width\n    float i=getJ(initialR,rStart,inc,length(uv));\n    \n    float u=length(uv);\n    float v=atan(uv.y,uv.x)+PI;\n    //v+=.1*cos(v*10.);\n    \n    float ang=2.*PI/N;\n    float vplus=mod(i,2.)>.5?ang/2.:-ang/2.;\n    float f=easeInOutExpo(1.- abs(2.* mod(t*60.,FRAMES) /FRAMES  -1.)  )*2.-1.;\n    \n    vplus*=f;\n    vec2 luv=vec2(u,v);\n    v+=vplus;\n    float j=floor(v/ang);\n    vec2 cuv=vec2(u,v);\n    \n    float cirR=2.*(rStart+(i-1.)*inc);\n    cirR*=.25;\n    float circleCenterR= initialR + 2.* rStart*(i-1.)+inc *(i-2.)*(i-1.) +rStart+(i-1.)*inc;\n    if(i>.5&&i<6.5){\n        //col=cir(cuv,vec2(circleCenterR,j*ang+PI/N),cirR,col,pal[int(mod(j,6.))]);\ncol=cir(cuv,vec2(circleCenterR,j*ang+PI/N),cirR,col,mix(pal[int(mod(j,6.))],pal[int(mod(j+1.,6.))],f*.5+.5)  );\n\n    }\n    \n    float vt=1.*(u-circleCenterR )/(rStart+(i-1.)*inc  );\n    vt=1.-vt;\n    vt=( initialR+(i-1.)*inc )*sin(PI*vt/2.);\n    vt+=vt*( 2.*(1.- i/6.)   );\n    vt*=f;\n    vt*=(mod(i,2.)>.5?-1.:1.);\n    \n    \n    //lines/arcs\n    col =lin2(luv,vec2(  circleCenterR-(rStart+(i-1.)*inc), vt+  ang/2.+ j*ang+PI/N),vec2(circleCenterR+(rStart+(i-1.)*inc), vt+ang/2.+   j*ang+PI/N),.0035,col,vec3(0.));\n    col =lin2(luv,vec2(  circleCenterR-(rStart+(i-1.)*inc), vt -  ang/2.+ j*ang+PI/N),vec2(circleCenterR+(rStart+(i-1.)*inc), vt-ang/2.+   j*ang+PI/N),.0035,col,vec3(0.));\n    \n    //outer and inner black circles\n    col= mix( col,vec3(0.), smoothstep(0.004,0.001,abs(u-( initialR+6.*2.*rStart+inc*(6.-1.)*6.)) )  )   ;\n    col= mix( col,vec3(0.), smoothstep(0.002,0.001,abs(u-initialR) )  )   ;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}