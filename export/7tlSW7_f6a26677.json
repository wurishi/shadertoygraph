{"ver":"0.1","info":{"id":"7tlSW7","date":"1626072578","viewed":138,"name":"sdfBlur","username":"jsyishan","description":"sdf blur","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI_2 6.28319\n\n#define BLUR_DIR 16.0\n#define BLUR_QUALITY 4.0\n#define BLUR_SIZE 32.0\n\nfloat sdfCircle(vec2 uv, float d) {\n    return length(uv) - d;\n}\n\nfloat sdfRect(vec2 uv, vec2 bound) {\n    vec2 d = abs(uv) - bound;\n    return length(max(d, 0.0)) + min(max(d.x, d.y),0.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 r = BLUR_SIZE / iResolution.xy;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 oriColor = texture(iChannel0, uv);\n    vec4 blurColor = texture(iChannel0, uv);\n    \n    for(float d = 0.0; d < PI_2; d += PI_2 / BLUR_DIR) {\n\t\tfor(float i = 1.0 / BLUR_QUALITY; i <= 1.0; i += 1.0 / BLUR_QUALITY) {\n\t\t\tblurColor += texture(iChannel0, uv + vec2(cos(d), sin(d)) * r * i);\t\t\n        }\n    }\n\n    blurColor /= BLUR_QUALITY * BLUR_DIR - 15.0;\n    blurColor *= vec4(0.5);\n    \n    vec2 uv2 = (uv * 2.0 - 1.0);\n    uv2.y /= (iResolution.x / iResolution.y);\n    \n    uv2.x += sin(iTime * 0.5) * 0.4;\n    uv2.y += cos(iTime * 0.25) * 0.4;\n    \n    //float d = sdfCircle(uv2, 0.3);\n    float d = sdfRect(uv2, vec2(0.3, 0.3));\n    \n    vec4 col = blurColor;\n    if (smoothstep(0.05, 0.04, d) > 0.9) {\n    //if (step(0.0, d) == 0.0) {\n       col = oriColor;\n       col.rgb *= vec3(0.99);\n    }\n\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}