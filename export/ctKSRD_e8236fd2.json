{"ver":"0.1","info":{"id":"ctKSRD","date":"1685976106","viewed":56,"name":"Diamonds and circles","username":"Vexatious","description":"diamonds","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["diamonds"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"\" by None. https://shadertoy.com/view/-1\n// 2023-06-05 14:17:56\n\nfloat sdBlobbyCross( in vec2 pos, float he )\n{\n    pos = abs(pos);\n    pos = vec2(abs(pos.x-pos.y),1.0-pos.x-pos.y)/sqrt(2.0);\n\n    float p = (he-pos.y-0.25/he)/(6.0*he);\n    float q = pos.x/(he*he*16.0);\n    float h = q*q - p*p*p;\n    \n    float x;\n    if( h>0.0 ) { float r = sqrt(h); x = pow(q+r,1.0/3.0)-pow(abs(q-r),1.0/3.0)*sign(r-q); }\n    else        { float r = sqrt(p); x = 2.0*r*cos(acos(q/(p*r))/3.0); }\n    x = min(x,sqrt(2.0)/2.0);\n    \n    vec2 z = vec2(x,he*(1.0-2.0*x*x)) - pos;\n    return length(z) * sign(z.y);\n}\n\nvec3 palette( in float t)\n{\n vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(\t0.5, 0.5, 0.5);\n    vec3 c = vec3(2.0, 1.0, 0.0);\n    vec3 d = vec3(0.50, 0.20, 0.25);\n/*\n\n\n    vec3 a = vec3(0.933,0.486,0.678);\n    vec3 b = vec3(0.418,0.248,-0.532);\n    vec3 c = vec3(-0.832,-3.142, -0.282);\n    vec3 d = vec3(-0.922,-0.192, 1.588);\n    */\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.);\n    float iterations = 3.;//sin(iTime / 10.) * 10.;\n    \n    for(float i=0.; i < iterations; i++){\n        uv = fract(uv * 1.5) - 0.5;\n        float d = sin(sdBlobbyCross(uv,4. + i)*4. - iTime)/4. * exp(-length(uv0));\n        float f = cos(length(uv0) * 8. - iTime)/8.;\n         \n        d = abs(d);\n        d = .04/d;\n        finalColor += (palette(d+i*.4 + iTime*.4) * 1.5 + palette(f+i*.4 + iTime*.4)*.5)  / (iterations * 2.);\n    }\n    \n    fragColor = vec4(finalColor ,1.);\n}","name":"Image","description":"","type":"image"}]}