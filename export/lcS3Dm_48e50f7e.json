{"ver":"0.1","info":{"id":"lcS3Dm","date":"1704288649","viewed":80,"name":"Oemfoe ChatGPT shader","username":"oemfoe","description":"I asked ChatGPT to create this shader to see if it is capable of making a working solution.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["shader","ai","chatgpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Set the resolution of the screen\n    vec2 resolution = iResolution.xy;\n\n    // Time for animated effects\n    float time = 10.0 * sin(iTime);\n\n    // Water Ripple Effect\n    vec2 uv1 = gl_FragCoord.xy / resolution.xy;\n    uv1 += vec2(sin(uv1.y * 10.0 + time) * 0.02, cos(uv1.x * 10.0 + time) * 0.02);\n\n    // Pixelated Screen Effect\n    float pixelSize = 10.0;\n    vec2 uv2 = floor(uv1 / pixelSize) * pixelSize;\n\n    // Combine the effects\n    vec3 finalColor = texture(iChannel0, uv2).xyz;\n\n    // Heatmap Effect\n    float value = texture(iChannel1, uv1).r;\n    finalColor = mix(vec3(0.0, 0.0, 1.0), vec3(1.0, 0.0, 0.0), smoothstep(0.0, 1.0, value));\n\n    // Vignette Effect\n    float vignetteAmount = 0.8;\n    float vignette = smoothstep(0.9, 1.0, length(uv1 - 0.5));\n    finalColor *= mix(1.0, vignetteAmount, vignette);\n\n    // CRT Screen Effect\n    uv1 += vec2(sin(uv1.y * 100.0) * 0.002, cos(uv1.x * 100.0) * 0.002);\n    float scanline = mod(uv1.y * 100.0, 2.0) < 1.0 ? 0.8 : 1.0;\n    finalColor *= scanline;\n\n    // Output the final color\n    fragColor = vec4(finalColor, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}