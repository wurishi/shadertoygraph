{"ver":"0.1","info":{"id":"fl3czl","date":"1660302768","viewed":75,"name":"glue noise","username":"macoofi","description":"glue noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2D(vec2 uv){\n    vec2 random_vec2 = vec2(fract(sin(uv.x*123.+uv.y*456.)),fract(cos(uv.y*789.+uv.x*1234.)));\n    return random_vec2;\n}\nfloat random(vec2 uv){\n    return fract(sin(uv.x*1600.+uv.y*6400.)*8000.);\n}\n\nfloat voronoise(vec2 uv,float move_t){\n    vec2 grad = fract(uv) - 0.5;//值域在 - 0.5~0.5\n    vec2 id = floor(uv);//ID\n    float mindist = 100.;\n    \n    for(int i = -1;i<2;i++){\n        for(int j = -1;j<2;j++){\n            vec2 offset = vec2(i,j);\n            \n            vec2 offset_point = random2D(id+offset);//对应ID随机点的坐标\n            \n            vec2 point_location = offset+sin(offset_point*move_t)*0.5;//和时间结合动起来\n            \n            float f = length(grad-point_location);//计算uv到顶点的距离\n            \n            if(mindist>f){\n                mindist = f;//取最小值\n            }\n        }\n    }\n    return mindist;\n\n}\nfloat perlinnoise(vec2 uv){\n    vec2 decimal_fraction= fract(uv);\n    vec2 ID = floor(uv);\n   \n   \n    decimal_fraction = decimal_fraction*decimal_fraction*(3.-2.*decimal_fraction);\n   \n   \n    float bl = random(ID+vec2(0,0));\n    float br = random(ID+vec2(1.,0));\n    float b = mix(bl,br,decimal_fraction.x);\n    \n    float tl = random(ID+vec2(0,1));\n    float tr = random(ID+vec2(1,1));\n    float t = mix(tl,tr,decimal_fraction.x);\n\n    return  mix(b,t,decimal_fraction.y);\n}\n\nfloat wood(float f,float mult_weight){\n    f*=mult_weight;\n    f = fract(f);\n    return f;\n}\nfloat turbulence(float f,float velley){\n    if(f<velley){\n        f = velley-f +velley;\n    }\n    return f;\n}\nfloat marble(vec2 uv,float f, float weight_f,float weight_uv_x,float weight_uv_y,float weight_frence){\n    \n    float fren = uv.x*weight_uv_x + uv.y*weight_uv_y + f * weight_f;\n    \n    f = (sin(fren*weight_frence))/2.+0.5;\n    return f;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv*=10.;\n    \n    \n    float f;\n    float f0 = 01.*voronoise(uv,iTime);\n    float f1 = 1.2*perlinnoise(uv*2.);\n    float f2 = 0.3*voronoise(uv*10.,1000.);\n    \n    \n    f = f0+f1+f2;\n    f*= 0.25;\n    \n    //f = turbulence(f,0.4);\n    \n    //f = marble(uv/10.,f,1.,30.,10.,1.);\n    \n    \n    if(f<0.2)f = 0.;\n    if(f>0.4)f = 1.;\n    vec3 col = vec3(f);\n    \n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}