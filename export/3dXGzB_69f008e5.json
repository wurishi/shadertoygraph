{"ver":"0.1","info":{"id":"3dXGzB","date":"1546686872","viewed":66,"name":"Easy Ray Marching Shader","username":"MichalK123","description":"This is my first ray marching shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p){\n    vec3 q = fract(p) * 2.0 - 1.0;\n    \n    return length(q) - 1.0;\n}\n\nfloat trace(vec3 o, vec3 r){\n    float t = 0.0;\n    \n    for(int i = 0; i < 32; ++i){\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d + 0.5;\n    }\n    \n    return t;\n}\n// funkcja rysująca kółka\nvoid disk(vec2 r, vec2 center, float radius, vec3 color, inout vec3 pixel) {\n\tif( length(r-center) < radius) {\n\t\tpixel = color;\n\t}\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv = uv * 2.0 - 1.0;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    //normalizacja wektora\n    vec3 r = normalize(vec3(uv, 1.0));\n    //rotacja animacji\n    float the = iTime * 0.25;\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    vec3 o = vec3(0.0, 0.0, iTime);\n    \n    float t = trace(o, r);\n    \n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    \n    vec3 fc = vec3(fog);\n    \n    \n    //wyrysowanie kółek po lewej\n    vec3 colCircleLeft = vec3(0.9, 0.8, 0.1);\n    \n    float j = -1.1;\n    \n    for(int i = 0; i < 10; i++){\n        \n        j += 0.2;\n        \n        disk(uv, vec2(-1.5, j), 0.1, colCircleLeft, fc);\n    }\n    \n    vec3 colCircleRight = vec3(0.6, 0.8, 0.0);\n    \n    float j1 = -1.1;\n    \n    for(int i = 0; i < 10; i++){\n        \n        j1 += 0.2;\n        \n        disk(uv, vec2(1.5, j1), 0.1, colCircleRight, fc);\n    }\n    \n    //rysowanie prostokątów na górze i na dole\n    vec3 colorRectUp = vec3(1.00, 0.329, 0.298);\n    vec3 colorRectDown = vec3(0.267, 0.710, 0.677);\n    \n    if(abs(uv.y - 0.9)<0.1) fc = colorRectUp;\n    if(abs(uv.y + 0.9)<0.1) fc = colorRectDown;\n     \n    \n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}