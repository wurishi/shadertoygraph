{"ver":"0.1","info":{"id":"cltSW8","date":"1686327587","viewed":42,"name":"2-Kaleidoscope Tunnel Shader by","username":"yunyunzhuzhu","description":"Kaleidoscope Tunnel Shader by","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Kaleidoscope Tunnel Shader by ShaderToy.com user\n//generate high quality kaleidoscope tunnel GLSL shader code inspired by shadertoy.com which can run in ShaderToy that can automatically transit, tunnel's size, rotation, time, purple,white and blue outline and different shape color, intensity from center to outer\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Time and resolution\n    float time = iTime * 0.5;\n    vec2 resolution = iResolution.xy;\n    \n    // Center position\n    vec2 center = vec2(resolution.x * 0.5, resolution.y * 0.5);\n\n    // Distance from center\n    float dist = length(fragCoord - center);\n    \n    // Angle and rotation\n    float angle = atan(fragCoord.x - center.x, fragCoord.y - center.y) + time;\n    float rotation = angle * 2.0;\n\n    // Tunnel size\n    float size = max(resolution.x, resolution.y) * 0.5;\n    size = mix(size * 0.2, size * 0.8, smoothstep(0.0, size, dist));\n\n    // Tunnel shape and color\n    float shape = mix(0.5, 1.0, sin(angle * 10.0));\n    vec3 color = mix(vec3(0.5, 0.0, 1.0), vec3(1.0, 1.0, 1.0), shape);\n\n    // Purple, white, and blue outline\n    float purple = mix(0.4, 1.0, sin(angle + time * 3.0));\n    float white = mix(0.2, 1.0, sin(angle + time * 2.0));\n    float blue = mix(0.1, 1.0, sin(angle + time * 1.0));\n\n    // Outline intensity from center to outer\n    float intensity = smoothstep(size * 0.8, size, dist);\n\n    // Output color with outline\n    fragColor = vec4(color * shape + vec3(purple * intensity, white * intensity, blue * intensity), 1.0);\n}","name":"Image","description":"","type":"image"}]}