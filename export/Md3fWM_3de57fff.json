{"ver":"0.1","info":{"id":"Md3fWM","date":"1525347878","viewed":516,"name":"RangeLife","username":"timeiskey","description":"my 1080ti can handle this no problem but im not sure your gpu will be very happy about it","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["gpukiller","smoothlife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define HOOD_HR 20.0\n#define HOOD_VR 20.0\n\n#define MOUSE_SIZE 0.2\n\n#define DASTART 0.24\n#define DAWIDTH 0.5\n\n#define AASTART 0.8\n#define AAWIDTH 0.6\n\n\n#define DASTART1 0.55\n#define DAWIDTH1 0.2\n\n#define AASTART1 0.8\n#define AAWIDTH1 0.2\n\n#define DASTART2 0.24\n#define DAWIDTH2 0.22\n\n#define AASTART2 0.1\n#define AAWIDTH2 0.2\n\n#define DENSITY 0.8\nfloat rand(vec2 co){\n  \treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * length(iDate));\n}\n\nfloat bump( float low, float high, float t)\n{\n\treturn step(low, t) * (1.0 - step(high, t));\n}\n\nfloat smoothbump( float p, float w, float t)\n{\n\treturn smoothstep( p - w, p,t) * (1.0 - smoothstep(p,p+w, t));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 cellWidth = 1.0/iResolution.xy;\n   \tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    //float maxHoodValue = (HOOD_HR * 2.0 + 1.0) * (HOOD_VR * 2.0 + 1.0) - 1.0;\n    float maxHoodValue = (HOOD_HR * 2.0 + 1.0) * (HOOD_VR * 2.0 + 1.0);\n\n    \n\t//\tsample yourself\n    float centerCell = texture(iChannel0, uv).r;\n    \n    //\ttotal your neighbors\n    float hoodTotal = 0.0;\n    for( float yi = -HOOD_VR; yi <= HOOD_VR; yi++ )\n    {\n    \tfor( float xi = -HOOD_HR; xi <= HOOD_HR; xi++ )\n        {\n\t\t\tvec2 xy = vec2(xi,yi) * cellWidth + uv;\n            xy = vec2(mod(xy.x, 1.0), mod(xy.y, 1.0) );\n            hoodTotal += texture(iChannel0, xy).r;\n        }\n    }\n    \n    //\tdont count yourself\n    //hoodTotal -= centerCell;\n    \n    float hvf = hoodTotal / maxHoodValue;\n    \n    //\tsample the rule\n    float c = 0.0;\n    //c = centerCell * bump( DASTART, DAEND, hvf) + ((1.0 - centerCell) * bump( AASTART, AAEND, hvf));\n    c = centerCell * sign(centerCell) * smoothbump( AASTART, AAWIDTH, hvf) + ((1.0 - sign(centerCell)) * smoothbump( DASTART, DAWIDTH, hvf));\n    //c = smoothbump( DASTART, DAWIDTH, hvf) + smoothbump( AASTART, AAWIDTH, hvf);\n\n    \n    fragColor = vec4(vec3(c),1.0);\n    if (iMouse.z >=0.0)\n    {\n        float mc = step( distance(uv,(iMouse.xy/iResolution.xy)), MOUSE_SIZE ) ;\n        //fragColor = vec4(step(rand(uv),DENSITY));\n    \tfragColor = min( vec4(vec3(mc),1.0) * vec4(step(rand(uv),DENSITY)) + fragColor, 1.0);\n    }\n    //float d = smoothbump( 0.5,0.4,uv.x);\n    //fragColor = vec4(vec3( d ),1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}