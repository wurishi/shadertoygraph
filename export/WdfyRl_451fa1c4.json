{"ver":"0.1","info":{"id":"WdfyRl","date":"1585299212","viewed":312,"name":"Simple Cellular Noise","username":"zchajax","description":"A simple cellular noise, support mouse control","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2(vec2 uv)\n{\n    uv = vec2(dot(uv,vec2(127.1,311.7)),\n              dot(uv,vec2(269.5,183.3)));\n    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float cellNum = 10.;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv *= cellNum;\n    \n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n    float minDist = 1.;\n    \n    for (int y = -1; y <= 1; y++)\n    {\n        for (int x = -1; x <= 1; x++)\n        {\n            vec2 neighbor = vec2(x, y);\n            \n            vec2 point = random2(i + neighbor);\n            \n            point = 0.5 + 0.5 * sin(iTime + 6.2831 * point);\n            \n            float dist = length(neighbor + point - f);\n            \n            minDist = min(minDist, dist);\n        }\n    }\n    \n    // mouse control\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    mouse.x *= iResolution.x / iResolution.y;\n    mouse *= cellNum;\n    mouse -= i;\n    \n   \tfloat dist = length(mouse - f);\n    \n   \tminDist = min(minDist, dist);\n    \n    fragColor = vec4(vec3(minDist),1.);\n}","name":"Image","description":"","type":"image"}]}