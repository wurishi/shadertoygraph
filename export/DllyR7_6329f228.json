{"ver":"0.1","info":{"id":"DllyR7","date":"1690535359","viewed":133,"name":"Test2-MrFuzz32","username":"MrFuzz32","description":"test2","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.968, 1.118, 1.278);\n    vec3 b = vec3(0.268, 0.318, 0.448);\n    vec3 c = vec3(-0.342, -0.162, 0.158);\n    vec3 d = vec3(-0.582, -0.452, -0.452);\n\n    return a + b*cos(6.28318*(c*t+d));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Conform pixel coordinates to -1 to 1, and adjust for aspect ratio\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 finalColour = vec3(0.0);\n\n    vec3 col = palette((abs(uv.y)-0.5)*(sin(iTime/4.0)*4.0));\n    col *= 0.03/(abs(sin(uv.x*(sin(iTime/8.0)-0.0)*13.0)-uv.y*3.0));\n\n    finalColour += col;\n    // Output to screen\n    fragColor = vec4(finalColour,1.0);\n}","name":"Image","description":"","type":"image"}]}