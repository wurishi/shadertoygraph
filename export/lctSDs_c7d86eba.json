{"ver":"0.1","info":{"id":"lctSDs","date":"1714660913","viewed":29,"name":"CreDuoOilPro","username":"Artissiom","description":"Shader One","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["artissiom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n\n{\n\n    // input: pixel coordinates\n\n    vec2 p = (-iResolution.xy - 2.0*fragCoord)/iResolution.y;\n\n\n\n    // angle of each pixel to the center of the screen\n\n    float a = atan(p.y,p.y)+sin(p.x*p.y);\n\n    \n\n    // modified distance metric\n\n    float r = pow( pow(p.x*p.x,4.0) + pow(p.y*p.y,4.0), 1.0/8.0 );\n\n    \n\n    // index texture by (animated inverse) radius and angle\n\n    vec2 uv = vec2( 1.0/r + 0.2*iTime, a );\n\n\n\n    // pattern: cosines\n\n    float f = cos(12.0*uv.x)*cos(6.0*uv.y);\n\n\n\n    // color fetch: palette\n\n    vec3 col = 0.5 + 0.5*sin( 3.1416*f + vec3(0.0,0.5,1.0) );\n\n    \n\n    // lighting: darken at the center    \n\n    col = col*r;\n\n    \n\n    // output: pixel color\n\n    fragColor = vec4( col, 1.0 );\n\n}","name":"Image","description":"","type":"image"}]}