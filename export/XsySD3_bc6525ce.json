{"ver":"0.1","info":{"id":"XsySD3","date":"1466874705","viewed":1045,"name":"Infinite Video - 110 chars","username":"GregRostami","description":"This shader was inspired by [url]https://www.shadertoy.com/view/4dGXDV[/url]\nCan you make it shorter? :)","likes":17,"published":3,"flags":0,"usePreview":0,"tags":["2d","perspective","short","tweet","2tc","onetweet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 110 chars - mathmasterzach is strong with the FORCE!\n\nvoid mainImage(out vec4 o, vec2 U) {\no++;\no.xy = U/iResolution.x - .5;\no = texture(iChannel0,.2*iTime - o.xw/o.y) * -3.*o.y; }\n\n/*\n// 101 chars - removed fract by changing video settings to \"repeat\"\n\n#define mainImage(o,U)\t\t\t\t\t\t\t\t\t\t\t\t\t\\\nvec2 u = U / iResolution.x - .5;\t\t\t\t\t\t\t\t\t\t\\\no = texture( iChannel0, .2*iTime - vec2(u.x,1)/u.y  )* -u.y*3.\n\n\n// 117 chars - Code Golf Master coyote, made this shader 3 chars lighter!\n\nvoid mainImage(out vec4 o,vec2 u)\n{\n    u = u / iResolution.x - .5;\n    o = texture( iChannel0, fract( .2*iTime - vec2(u.x,1)/u.y ) )* -u.y*3.;\n}\n\n\n// 124 chars - Factored out the 1./u.y\n\nvoid mainImage(out vec4 o,vec2 u)\n{\n    u = u / iResolution.x - .5;\n    o = texture(iChannel0,fract( .2*iDate.w - 1./u.y*vec2(u.x,1) ) )*-u.y*3.;\n}\n\n\n// 127 chars - Original version\n\nvoid mainImage(out vec4 o,vec2 u)\n{\n    u = u / iResolution.x - .5;\n    o = texture(iChannel0,fract( -vec2(u.x/u.y-.3*iDate.w, 1./u.y) ))*-u.y*3.;\n}\n*/","name":"Image","description":"","type":"image"}]}