{"ver":"0.1","info":{"id":"MXt3Rj","date":"1716782151","viewed":137,"name":"One bit shader","username":"NoodlesOfWrath","description":"A simple use of modulo to convey darkness variably through only one bit","likes":7,"published":1,"flags":0,"usePreview":1,"tags":["retro","1bit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float darkness_raw = (texture(iChannel0, uv).r + texture(iChannel0, uv).g + texture(iChannel0, uv).b) / 3.0;\n    \n    float color_amount = 5.0;\n    float darkness = round(darkness_raw * color_amount) / color_amount;\n    \n    float amount = 3.0;\n    float pixel_amount = amount/darkness;\n    \n    if ((mod(round(fragCoord.x), round(pixel_amount)) == 0.0) && (mod(round(fragCoord.y), round(pixel_amount)) == 0.0))\n    {\n        fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    }\n    else {\n        fragColor = vec4(0.0,0.0,0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}