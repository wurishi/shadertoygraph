{"ver":"0.1","info":{"id":"3lSfDG","date":"1599686662","viewed":91,"name":"revolver cylinder study 1","username":"trupples","description":"for daddies gabi and livian ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cylinder(in vec3 p, in float h, in float r) {\n  vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(h,r);\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nfloat segment(in vec3 p, in vec3 a, in vec3 b) {\n\tfloat t = dot(p-a, b-a) / dot(b-a,b-a);\n    if(t > 1.) t = 1.;\n    if(t < 0.) t = 0.;\n    return length(p - a*(1.-t) - b*t);\n}\n\nfloat capsule_boi(in vec3 p, in vec3 a, float ar, in vec3 b, float br) {\n\tfloat t = dot(p-a, b-a) / dot(b-a,b-a);\n    if(t > 1.) t = 1.;\n    if(t < 0.) t = 0.;\n    return length(p - a*(1.-t) - b*t) - (ar*(1.-t) + br*t);\n}\n\n\n\nfloat map(in vec3 p) {\n   /* float a = atan(p.y, p.x);\n    float l = length(p.xy);\n    a = mod(a + 3.1415/6., 3.1415/3.) + 3.1415/3.;\n    vec3 p6 = vec3(cos(a)*l, sin(a)*l, p.z);\n    float ding = segment(p6, vec3(0,1.2,-.1), vec3(0,1.2,1)) - 0.35;\n    \n    float aa = mod(a + 3.1415/6., 3.1415/3.) + 3.1415/3.;\n    vec2 g = vec2(cos(3.1415/12.), sin(3.1415/12.));\n    vec3 p62 = vec3(cos(aa)*l, sin(aa)*l, p.z);\n    \n    float gaura = segment(p62, vec3(g.x, g.y, -.1), vec3(g.x,g.y,.1)) - 0.1;\n    \n    return min(ding, gaura);\n    \n    return max(cylinder(p.xzy, 1., 1.), -ding); */\n    float r = 9999.;\n    float plane_back = dot(p, vec3(0,0,-1));\n    float plane_front = dot(p, vec3(0,0,1)) - 1.5;\n    float frontback = max(plane_front, plane_back);\n    \n    float gaurica_mijloc = length(p.xy) - 0.1;\n    \n    \n    r = capsule_boi(p, vec3(0,0,1.5), 1., vec3(0,0,0), 1.2);\n    r = max(r, frontback);\n    r = max(r, -gaurica_mijloc);\n    \n    for(int i=0; i<6; i++) {\n    \tp.xy *= mat2(cos(3.1415/3.), sin(3.1415/3.), -sin(3.1415/3.), cos(3.1415/3.));\n        \n        r = max(r, -(segment(p, vec3(0,.62,0), vec3(0,.62,1.5)) - 0.25));\n        vec2 k = vec2(cos(3.1415/3.), sin(3.1415/3.))*1.1;\n        r = max(r, -capsule_boi(p, vec3(k.x, k.y, 0)*1.5, .4, vec3(k.x, k.y, 1.5), .2));\n    }\n    \n    \n    return r;\n}\nvec3 normal(vec3 pos, float eps) {\n  const vec3 v1 = vec3( 1.0,-1.0,-1.0);\n  const vec3 v2 = vec3(-1.0,-1.0, 1.0);\n  const vec3 v3 = vec3(-1.0, 1.0,-1.0);\n  const vec3 v4 = vec3( 1.0, 1.0, 1.0);\n\n  return normalize( v1 * map( pos + v1*eps ) +\n                    v2 * map( pos + v2*eps ) +\n                    v3 * map( pos + v3*eps ) +\n                    v4 * map( pos + v4*eps ) );\n}\n\nvec3 normal(vec3 pos) {\n  return normal(pos, 0.001);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - .5*iResolution.xy)/iResolution.y;\n\n    float T = iTime * .2;\n    \n    vec3 cam_target = vec3(0,0,.75);\n    vec3 cam_pos = vec3(cos(T) * 3., 1., -sin(T) * 3.) + cam_target;\n    vec3 cam_fwd = normalize(cam_target-cam_pos);\n    vec3 cam_right = normalize(cross(cam_fwd, vec3(0,1,0)));\n    vec3 cam_up = normalize(cross(cam_right, cam_fwd));\n    \n    float focal_len = 0.7;\n    \n    vec3 ray_dir = normalize(uv.x * cam_right + uv.y * cam_up + focal_len * cam_fwd);\n    \n    vec3 ray_pos = cam_pos;\n    \n    vec3 col = vec3(uv.xy, 0);\n    int num_steps = 0;\n    float dist;\n    do {\n        dist = map(ray_pos);\n    \tray_pos += dist * ray_dir;\n    } while(dist > 0.001 && num_steps++ < 100);\n    \n    if(dist > 0.001) col = texture(iChannel0, ray_dir).xyz;\n    else {\n     \tvec3 N = normal(ray_pos);\n        vec3 d = reflect(ray_dir, N);\n        col = texture(iChannel0, d).xyz * .75;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}