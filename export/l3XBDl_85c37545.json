{"ver":"0.1","info":{"id":"l3XBDl","date":"1729056902","viewed":49,"name":"Moir√© Effect [drag the mouse]","username":"rattlehead","description":"Drag the mouse to place the sheets","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","mouse","moire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define eps .01\n#define PI 3.141592653589793\n\nfloat sdLineSegment(vec2 p, vec2 a, vec2 b, float r)\n{\n    p -= a;\n    b -= a;\n    float l = dot(p, b) / dot(b, b);\n    l = clamp(l, 0.0, 1.0);\n    return length(p - l * b) - r;\n}\n\nfloat sdSheet(vec2 p)\n{\n    const float a = PI / 25.;\n    float angle = atan(p.y, p.x);\n    angle = mod(angle + .5 * a - .1 * iTime, a) - .5 * a;\n    p = vec2(cos(angle), sin(angle)) * length(p);\n    float d = sdLineSegment(p, vec2(.05, .0), vec2(5.2, .0), .01);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.yy;\n    vec4 mouse = (2. * abs(iMouse) - iResolution.xyxy) / iResolution.y;\n    mouse = mix(vec4(.2, .1, .0, .0), mouse, step(.5, abs(iMouse.x) + abs(iMouse.y) + abs(iMouse.z) + abs(iMouse.w)));\n\n//mouse = vec4(.2,.1,.0,.0);\n\n    const float prop = .8;\n    float d1 = smoothstep(eps, -eps, sdSheet(uv - mouse.zw)) * prop + 1. - prop;\n    float d2 = smoothstep(eps, -eps, sdSheet(uv - mouse.xy)) * prop + 1. - prop;\n    vec3 col = vec3(d1 * d2);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}