{"ver":"0.1","info":{"id":"MtycWt","date":"1538094172","viewed":499,"name":"PatternBoi","username":"lambmeow","description":"*seizure warning*\ntesting out matrices and fract(). \n\n\n","likes":3,"published":3,"flags":96,"usePreview":0,"tags":["visualization","music","pattern","musicvisualization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 buffA = texture(iChannel0,uv);\n    vec4 chan1 = texture(iChannel1,uv*fract(tan(iTime)* 6345354.) - cos(iTime* .346326));\n    chan1 = vec4(chan1.r);\n    float time = mod(iTime,163.);\n    if(time < 8. || time > 148.){\n\tfragColor = chan1;\n    }\n    else if (time < 23.){\n       float t = time*1.5 - 23. ;\n       fragColor = chan1 + (buffA * vec4(1.-clamp(t,0.,1.)+0.1));\n    }\n    else if(time > 23. && time < 30.){\n       float t = time - 23.;\n       vec4 col  = chan1 + (buffA * vec4(1.-clamp(t,0.,1.)+0.1));\n       fragColor = buffA + (col * vec4(1.-clamp(t,0.,1.)));\n    }  \n    else{\n    // Output to screen\n    fragColor = buffA;\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sjSWt","filepath":"https://soundcloud.com/deathpact/first-interference","previewfilepath":"https://soundcloud.com/deathpact/first-interference","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159265359\n\nfloat circle(vec2 uv, vec2 pos,float radius){\n\tvec2 dist = uv - pos;\n    return 1.- smoothstep(radius - radius * .01,\n                          radius + radius * .01,\n                          dot(dist,dist)*2.);\n}\nfloat docir(vec2 uv, vec2 pos, float rad, float thicc){\n    return circle(uv,pos,rad)-circle(uv,pos,rad - thicc);\n}\nfloat scene(vec2 uv)\n{\n    return docir(uv, vec2(0,0.5), 0.5, 0.1) + \n        docir(uv, vec2(0.5,0), 0.5, .1) + \n        docir(uv, vec2(1.,0.5),0.5,.1) + \n        docir(uv, vec2(0.5,1.),0.5,.1);\n}\n\nmat2 rotate(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\nmat2 scale(vec2 s){\n    return mat2(s.x,0.0,\n                0.0,s.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    \n    vec4 spec = texture(iChannel1,vec2(0.98,0.2));\n \tfloat sms = smoothstep(0.,1., spec.r);\n    vec3 col = vec3(0.0);\n    //vec4 buffa = texture(iChannel0, uv);\n    //col = buffa.rgb * vec3(0.9);\n    vec2 offset = vec2(.83,.5);\n\tuv -= offset;\n    uv = rotate(iTime/6. * PI) * uv;\n    uv = scale(vec2(sms)*1.6 + 0.5) * uv;\n    uv += offset;\n    uv = fract(uv* 10.);\n    uv -= offset;\n    uv = scale(vec2(sms)*1.6+1.) * uv;\n    uv += offset;\n    \n    // Time varying pixel color\n    col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\tfloat sc = scene(uv);\n    col *= sc;\n  \t\n    //music test\n    //fragColor = spec;\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}