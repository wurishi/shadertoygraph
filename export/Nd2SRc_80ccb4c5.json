{"ver":"0.1","info":{"id":"Nd2SRc","date":"1620706443","viewed":54,"name":"Sky One","username":"Farini","description":"My first shader. Noise + blue","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Inspired by Noise Value, from iq: https://www.shadertoy.com/view/lsf3WH\n\nfloat hash(vec2 p)\n{\n    p  = 50.0*fract( p*0.3183099 + vec2(0.71,0.113));\n    return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n\n\tvec2 uv = p*vec2(iResolution.x/iResolution.y,1.0) + iTime*0.05;\n\t\n\tfloat f = 0.0;\n\n    \n    // fractal noise (4 octaves)\n    \n\tuv *= 8.0;\n    mat2 m = mat2( 1.8,  1.2, -1.4,  1.6 );\n\tf  = 0.5000*noise( uv ); uv = m*uv;\n\tf += 0.200*noise( uv ); uv = m*uv;\n\tf += 0.150*noise( uv ); uv = m*uv;\n\tf += 0.1*noise( uv ); uv = m*uv;\n\t\n\n\tf = 0.5 + 0.5*f;\n\t\n\tfragColor = vec4( f, f, 0.8, 1.0 );\n}","name":"Image","description":"","type":"image"}]}