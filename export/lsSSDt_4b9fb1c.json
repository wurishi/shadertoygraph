{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// A \"screen-saver\" based on barycentric coordinates\n// written 26.11.2014 by Jakob Thomsen\n// (jakobthomsen@gmx.de)\n\n// mirror/bounce inside -1,+1\nvec2 mirror(vec2 pos)\n{\n    return (2.0 * abs(2.0 * fract(pos) - 1.0) - 1.0);\n}\n\nfloat light(vec2 pos, float size, vec2 uv)\n{\n    return exp(-pow(distance(uv, pos) / size, 2.0));\n}\n\nvec3 barycentric(vec2 a, vec2 b, vec2 c, vec2 p)\n{\n    float d = (b.y - c.y) * (a.x - c.x) + (c.x - b.x) * (a.y - c.y);\n    float alpha = ((b.y - c.y) * (p.x - c.x)+(c.x - b.x) * (p.y - c.y)) / d;\n    float beta = ((c.y - a.y) * (p.x - c.x) + (a.x - c.x) * (p.y - c.y)) / d;\n    float gamma = 1.0 - alpha - beta;\n    return vec3(alpha, beta, gamma);\n}\n\nvec3 inRange3(vec3 p)\n{\n    return step(p, vec3(1.0)) * step(vec3(0.0), p);\n}\n\nfloat inRangeAll(vec3 p)\n{\n    vec3 r = inRange3(p);\n    \n    return r.x * r.y * r.z;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 speed0 = vec2(0.0432, 0.0123);\n    vec2 speed1 = vec2(0.0257, 0.0332);\n    vec2 speed2 = vec2(0.0835, 0.0674);\n    float size = 0.1;\n\tvec2 uv = (fragCoord.xy - iResolution.xy / 2.0) / iResolution.xy;\n    uv *= 2.0;\n    float val = 0.0;\n    vec2 pos0 = mirror(iTime * speed0);\n    vec2 pos1 = mirror(iTime * speed1);\n    vec2 pos2 = mirror(iTime * speed2);\n    vec3 bc = barycentric(pos0, pos1, pos2, uv);\n    val = inRangeAll(bc);\n    //val = mix(val, light(vec2(0.0), 1.0, uv), max(step(1.0, abs(uv.x)),step(1.0, abs(uv.y))));\n    vec3 c = bc * val;\n    c = c + vec3(1.0, 0.0, 0.0) * light(pos0, size, uv);\n    c = c + vec3(0.0, 1.0, 0.0) * light(pos1, size, uv);\n    c = c + vec3(0.0, 0.0, 1.0) * light(pos2, size, uv);\n\n    fragColor = vec4(c, 1.0);\n}\n\n/*\n#define mirror(v) (2.0 * abs(2.0 * fract(v) - 1.0) - 1.0)\n\nvec3 barycentric(vec2 a, vec2 b, vec2 c, vec2 p)\n{\n    float d = (b.y - c.y) * (a.x - c.x) + (c.x - b.x) * (a.y - c.y);\n    float alpha = ((b.y - c.y) * (p.x - c.x)+(c.x - b.x) * (p.y - c.y)) / d;\n    float beta = ((c.y - a.y) * (p.x - c.x) + (a.x - c.x) * (p.y - c.y)) / d;\n    float gamma = 1.0 - alpha - beta;\n    return vec3(alpha, beta, gamma);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 speed0 = vec2(0.0432, 0.0123);\n    vec2 speed1 = vec2(0.0257, 0.0332);\n    vec2 speed2 = vec2(0.0835, 0.0674);\n    float size = 0.1;\n\tvec2 uv = (fragCoord.xy - iResolution.xy / 2.0) / iResolution.xy;\n    uv *= 2.0;\n    float val = 0.0;\n    vec2 pos0 = mirror(iTime * speed0);\n    vec2 pos1 = mirror(iTime * speed1);\n    vec2 pos2 = mirror(iTime * speed2);\n    vec3 bc = barycentric(pos0, pos1, pos2, uv);\n    vec3 c = bc * (all(greaterThan(bc, vec3(0))) ? 1. : 0.);\n    c *= 0.5 + 0.5 * cos(100.*min(bc.x, min(bc.y, bc.z)));\n\n    fragColor = vec4(c, 1.0);\n}\n*/\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsSSDt","date":"1417018718","viewed":364,"name":"barycentricscreensaver","username":"jt","description":"A \"screen-saver\" based on three bouncing particles connected to a triangle using barycentric coordinates.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["barycentriccoordinates","bouncingparticles"],"hasliked":0,"parentid":"","parentname":""}}