{"ver":"0.1","info":{"id":"WllGD7","date":"1556544138","viewed":325,"name":"Recursive__","username":"s_das","description":"  ","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["raytracing","recursive","red","shaders","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n \n\nvoid mainImage(out vec4 FragColor, in vec2 FragCoord){\n    vec2 uv = FragCoord.xy/iResolution.xy;\n    uv = 2.*uv - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n    \n\n    float da = iTime/(10.);\n    vec2 pts = vec2(sin(da*2.), cos(da*2.));\n\n    float d = length(cos(  abs((abs(uv)+atan(da))*pts))*sin(atan(abs(uv))));\n\n    d = atan(d) - cos(da+d*d)*sin(da - d*d);\n    d -= atan(cos(da)*abs(  fract(d*d)-da) + 0.5);\n\n    float fill = step(tan(fract(abs(d)-0.5)*da),0.2);\n \n \n    vec3 col = vec3(fill);\n\n    col += vec3(0., 0., 1.);\n    col *= vec3(1., 0., 0.2);\n    FragColor = vec4(col, 1.);\n\tda += uv.x;\n}","name":"Image","description":"","type":"image"}]}