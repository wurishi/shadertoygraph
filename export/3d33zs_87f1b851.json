{"ver":"0.1","info":{"id":"3d33zs","date":"1569080950","viewed":5693,"name":"Shader Showdown Nova-19 Final","username":"evvvvil","description":"Winning shader made at NOVA 2019 Shader Showdown. Final round against psonice / CRTC ^ UKScene Allstars ^ Church of the Spinning Cube.\nLive coded on stage in 25 minutes.\nhttps://www.youtube.com/watch?v=leD1bIsBMRg","likes":43,"published":1,"flags":0,"usePreview":1,"tags":["demoscene","glow","robot","laser","live","neon","battle","lazer","shadershowdown","nova","industrial","faces","gargoyle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Winning shader made at Nova 2019 Shader Showdown,\n// Final round against psonice / CRTC ^ UKScene Allstars ^ Church of the Spinning Cube\n// Video of the battle: https://www.youtube.com/watch?v=leD1bIsBMRg\n\n// The \"Shader Showdown\" is a demoscene live-coding shader battle competition.\n// 2 coders battle for 25 minutes making a shader on stage. No google, no cheat sheets.\n// The audience votes for the winner by making noise or by voting on their phone.\n\n// \"I'm so unlucky at the moment that if I fell in a barrel of boobs I'd come out sucking my thumb\" Ian Holloway (comical genius and football manager)\n\nvec2 s,e=vec2(.000035,-.000035);float t,tt,b,bb,bs,g,bro;vec3 np,bp,pp;\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nfloat bo(vec3 p,vec3 r){vec3 q=abs(p)-r;return max(max(q.x,q.y),q.z);}\nfloat cz(vec3 p,float r){p.z=0.;return length(p)-r;}\nvec2 fb( vec3 p,float s)\n{\n    p.xy*=r2(bs*1.4*s/5.);\n  vec2 h,t=vec2(bo(p,vec3(10,.6,.8)),5.+s);\n  h=vec2(bo(abs(p)-vec3(2,0,0),vec3(1.2,.8,1.2)),3.+s);\n  h.x=min(bo(abs(abs(p)-vec3(0,.6,.6))-vec3(0,.3,.3),vec3(3,.1,.1)),h.x);\n  t=(t.x<h.x)?t:h; return vec2(t.x*.5,t.y); \n}\nvec2 mp( vec3 p)\n{\n  b=sin(p.z-tt*10.)*0.1;\n  bp=pp=p;\n  pp.xz*=r2(.785*2.*bb);    \n  np=pp;\n  bro=(0.5-b*2.)*(1.-bs);\n  for(int i=0;i<6;i++){\n    np=abs(np)-mix(vec3(1.2+bro*.5,2.1,-.1),vec3(bro*.5,3,1.7),bb);  \n    np.yz*=r2(.785*float(i));\n    np.xz*=r2(.785*float(i)*.49-bro*.15);\n    np-=.3*sin(p.y)*1.5;\n      \n    bp=abs(bp)-vec3(2,0.7,1.1);    \n    bp.yz*=r2(.785*float(i));\n    bp.xz*=r2(.785*float(i)*.5);\n    bp-=.3*sin(p.y)*1.5;      \n  }\n  vec2 h,t=fb(np,0.);\n  bp.xz*=r2(1.4);bp=abs(bp*0.7)-4.5;\n  h=fb(bp,5.);\n  h.x*=1.5;\n  t=(t.x<h.x)?t:h;\n  h=vec2(length(abs(pp-vec3(0,4.-bb,0))-vec3(3.+bro*3.,0,3.-bb))-2.5+bb,6);\n  h.x=min(length(p-vec3(0,-3,0))-5.,h.x)*.7;\n  \n  h.x=min(cz(p+vec3(0,2.2,0),p.z>-21.?bro:0.),h.x);\n  g+=0.1/(0.1+h.x*h.x*20.);\n  t=(t.x<h.x)?t:h;\n  return t;\n}\nvec2 tr( vec3 ro, vec3 rd )\n{\n  vec2 h,t=vec2(0.1);\n  for(int i=0;i<128;i++){\n    h=mp(ro+rd*t.x);\n    if(h.x<.0001||t.x>50.) break;\n    t.x+=h.x;t.y=h.y;\n  }\n  if(t.x>50.) t.x=0.;\n  return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n    uv -= 0.5;uv/=vec2(iResolution.y/iResolution.x,1);\n    tt=mod(iTime,62.83);\n  \tbs=(0.4+clamp(sin(tt*2.),-0.4,0.4))*1.25;\n    bb=(0.25+clamp(sin(tt),-0.25,0.25))*2.;\n  \n    vec3 ro=vec3(cos(tt*0.5)*15.,sin(tt*0.5)*15.,-20.+cos(tt)*5.),\n    cw=normalize(vec3(0)-ro),cu=normalize(cross(cw,vec3(0,1,0))),cv=normalize(cross(cu,cw)),\n    rd=mat3(cu,cv,cw)*normalize(vec3(uv,.5)),\n    co,fo,ld=normalize(vec3(0,0.5,-0.5));\n    co=fo=vec3(.04)*(1.-(length(uv)-.2));\n    s=tr(ro,rd);t=s.x;\t\n    if(t>0.){\n        vec3 po=ro+rd*t,no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x),\n        al=vec3(1,0.05,0);\n        float dif=max(0.,dot(no,ld)),\n        aor=t/50.,ao=exp2(-2.*pow(max(0.,1.-mp(po+no*aor).x/aor),2.)),\n        fr=pow(1.+dot(no,rd),4.),\n        spo=exp2(7.*texture(iChannel0,vec2(np.y,dot(np.xz,vec2(.7)))/vec2(16,20)).r);\n        if(s.y<5.) al=vec3(0);\n        if(s.y>5.) al=vec3(1);\n        if(s.y>7.) {al=vec3(0.1,0.5,0.9);spo=exp2(7.*texture(iChannel0,vec2(bp.y,dot(bp.xz,vec2(.7)))/vec2(10,16)).r);}\n        if(s.y>9.) {al=vec3(0);}\n        if(s.y>10.) {al=vec3(1);}\n        \n        vec3 sss=vec3(1.5)*smoothstep(0.,1.,mp(po+ld*0.4).x/0.4),\n        sp=vec3(0.5)*pow(max(dot(reflect(-ld,no),-rd),0.),spo);\n        co=mix(sp+al*(.8*ao+0.2)*(dif+sss),fo,fr);\n        co=mix(co,fo,1.-exp(-.00004*t*t*t));\n    }\n    fragColor = vec4(pow(co+g*.3*vec3(.2,.3,.6),vec3(.45)),1);\n}","name":"Image","description":"","type":"image"}]}