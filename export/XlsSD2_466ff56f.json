{"ver":"0.1","info":{"id":"XlsSD2","date":"1439847457","viewed":324,"name":"FFT Polar","username":"freakyfrank","description":"Test Shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fft","audio","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define PI 3.1415926535897932384626433832795\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = gl_FragCoord.xy / iResolution.xy;\n    \n\tvec2 circleUv = uv;\n    circleUv -= vec2(0.5);\n\tcircleUv.x *= iResolution.x/iResolution.y;\n    \n    float bars = 24.0;\n    \n    // limiting it to the first pixel row: fft values\n    float r = min(0.0,length(circleUv.x));\n    // dont use values below 0.0\n\tfloat t = abs(atan(circleUv.x, circleUv.y) / PI);\n\n        \n    // the fft texture is made up of two rows of pixels:\n    // first row is the fft value, the second is the wave form\n    // \n    // details on that:\n    // http://forum.openframeworks.cc/t/passing-fft-audio-data-into-a-shader-as-a-texture2d-object-shadertoy/13756\n    float fft  = texture(iChannel0, vec2(floor(uv.x*bars)/bars,0.0)).r;\n\tfloat amp = (fft - uv.y)*100.0;\n    \n    \n    float polar  = texture(iChannel0, vec2(t,r)).r;\n\n    fragColor = vec4(vec3(polar),1.0);\n  \n\n    \n\t\n}","name":"","description":"","type":"image"}]}