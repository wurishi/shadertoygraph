{"ver":"0.1","info":{"id":"7tdGWB","date":"1636668348","viewed":48,"name":"function graphing","username":"sunhokim","description":"graphing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["graph"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float thickness = 0.015;\nconst vec3 bg_col = vec3(0.2);\nconst vec3 curve_col = vec3(1.0, 0.5, 0.0);\n\nfloat f(in float x)\n{\n    return (0.5*cos(x*10.0) - 0.8*sin(x*25.0) + 0.15*cos(x*65.0) + cos(x+iTime))*0.25;\n}\n\nfloat df( in float x )\n{\n    float h = 0.00001;\n    return (f(x+h) - f(x-h))/(2.0*h);\n}\n\nfloat curve(in vec2 p, in float fx, in float dx)\n{\n    float de = abs(fx - p.y) / sqrt(1.0 + dx*dx);\n    return step(de, thickness);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float factor = iResolution.x / iResolution.y; // account for distorted space ; jacobain\n    uv = uv * 2.0 - 1.0; // [-1;1]\n    uv.x += 0.5*iTime;\n\n    float fx = f(uv.x);\n    float dx = df(uv.x) / factor;\n    vec3 col = mix(bg_col, curve_col, curve(uv, fx, dx));\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}