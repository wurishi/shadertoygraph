{"ver":"0.1","info":{"id":"3s2SRh","date":"1552915155","viewed":209,"name":"bilibili","username":"mxr233","description":"a sign of bilibili.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["tv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdfDifference( const float a, const float b)\n{\n    return max(a, -b);\n}\nfloat sdfIntersection( const float a, const float b )\n{\n    return max(a, b);\n}\nfloat sdfUnion( const float a, const float b )\n{\n    return min(a, b);\n}\nfloat rectangle(vec2 uv, vec2 pos, float width, float height, float r) {\n\tvec2 size=vec2(width,height);\n    float tt=length(max(abs(uv-pos),size)-size)-r;\n    return 1.0-max(0.,abs(tt)-min(iResolution.x, iResolution.y)/50.);\n}\nfloat sdfLine(vec2 p0, vec2 p1, float width, vec2 coord)\n{\n    vec2 dir0 = p1 - p0;\n\tvec2 dir1 = coord - p0;\n\tfloat h = clamp(dot(dir0, dir1)/dot(dir0, dir0), 0.0, 1.0);\n\treturn (length(dir1 - dir0 * h) - width * 0.5);\n}\nfloat sdfEllipse(vec2 center, float a, float b, vec2 coord) { \n    float a2 = a * a; \n    float b2 = b * b; \n    return (b2 * (coord.x - center.x) * (coord.x - center.x) + a2 * (coord.y - center.y) * (coord.y - center.y) - a2 * b2)/(a2 * b2); \n}\nvec2 rotate(vec2 uv, float angle){\n    vec2 ruv;\n    ruv.x =   cos(angle)*uv.x + -sin(angle)*uv.y;\n    ruv.y =   sin(angle)*uv.x + cos(angle)*uv.y;\n    return ruv;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 uv = fragCoord.xy*4.-1.5*iResolution.xy;\n\tvec2 center = iResolution.xy * 0.5;\n\tfloat width = 0.25 * iResolution.x;\n\tfloat height = 0.25 * iResolution.x;\n    float minSize = min(iResolution.x, iResolution.y);\n\tfloat raduis=minSize/25.;\n    float linewidth=minSize/30.;\n    float halfwidth=minSize;\n\tuv.xy-=sin(iTime*50.)*2.;    \n\n\tvec4 background = vec4(1,1,1, 1.0);\n    vec4 linecolor = vec4(0,0,0,1.0);\n\tfloat t=rectangle(uv,center,0.7*width,0.5*height,raduis);\n\t// Rectangle\n\t\n    vec4 col=mix(background,linecolor,t);\n    vec2 rotateUV=uv-center;\n    t=rectangle(rotate(rotateUV,-0.02)+center,center,0.52*width,0.33*height,raduis);\n    col=mix(col,linecolor,t);\n    //sky line\n    float skyt=sdfLine(vec2(0.5,0.76)*iResolution.xy,vec2(0.61,0.97)*iResolution.xy,linewidth,uv);\n    col=mix(col,linecolor,1.0-skyt);\n    skyt=sdfLine(vec2(0.47,0.76)*iResolution.xy,vec2(0.35,0.9)*iResolution.xy,linewidth,uv);\n    col=mix(col,linecolor,1.0-skyt);\n    skyt=sdfLine(vec2(0.44,0.6)*iResolution.xy,vec2(0.4,0.5)*iResolution.xy,linewidth,uv);\n    col=mix(col,linecolor,1.0-skyt);\n    skyt=sdfLine(vec2(0.53,0.6)*iResolution.xy,vec2(0.6,0.5)*iResolution.xy,linewidth,uv);\n    col=mix(col,linecolor,1.0-skyt);\n    //half circle\n    float cirt1=sdfEllipse(vec2(0.41,0.2)*iResolution.xy,halfwidth/20.,halfwidth/20.,uv);\n    //float cirt2=sdfEllipse(vec2(0.45,0.44)*iResolution.xy,15.,18.,uv);\n    //float cirt=sdfDifference(cirt1,cirt2);\n   // cirt=sdfIntersection(cirt,uv.y-0.44*iResolution.y);\n    col=mix(col,linecolor,1.-cirt1);\n    cirt1=sdfEllipse(vec2(0.6,0.2)*iResolution.xy,halfwidth/21.,halfwidth/21.,uv);\n    col=mix(col,linecolor,1.-cirt1);\n    \n    cirt1=sdfEllipse(vec2(0.46,0.41)*iResolution.xy,halfwidth/15.,halfwidth/15.,uv);\n    float cirt2=sdfEllipse(vec2(0.46,0.41)*iResolution.xy,halfwidth/22.,halfwidth/22.,uv);\n    float cirt=sdfDifference(cirt1,cirt2);\n    float halfcirt1=sdfIntersection(cirt,uv.y-0.41*iResolution.y);\n    \n    cirt1=sdfEllipse(vec2(0.52,0.41)*iResolution.xy,halfwidth/15.,halfwidth/15.,uv);\n    cirt2=sdfEllipse(vec2(0.52,0.41)*iResolution.xy,halfwidth/22.,halfwidth/22.,uv);\n    cirt=sdfDifference(cirt1,cirt2);\n    float halfcirt2=sdfIntersection(cirt,uv.y-0.41*iResolution.y);\n    cirt=sdfUnion(halfcirt1,halfcirt2);\n    col=mix(col,linecolor,1.-cirt);\n\tfragColor =col;\n\n}","name":"Image","description":"","type":"image"}]}