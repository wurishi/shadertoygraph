{"ver":"0.1","info":{"id":"3s3czX","date":"1601351667","viewed":125,"name":"Material Maker: Blob Transition","username":"RodzLabs","description":"Based on @NaturallyCG Substance Designer Beginner Quick Tip 63 (VFX Blob Transition)\n\nGenerated with Material Maker (source: https://pastebin.com/raw/dxJ40rbd)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","generated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//---\n\nfloat rand(vec2 x) {\n    return fract(cos(dot(x, vec2(13.9898, 8.141))) * 43758.5453);\n}\n\nvec2 rand2(vec2 x) {\n    return fract(cos(vec2(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t  dot(x, vec2(3.4562, 17.398)))) * 43758.5453);\n}\n\nvec3 rand3(vec2 x) {\n    return fract(cos(vec3(dot(x, vec2(13.9898, 8.141)),\n                          dot(x, vec2(3.4562, 17.398)),\n                          dot(x, vec2(13.254, 5.867)))) * 43758.5453);\n}\n\nvec3 rgb2hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat shape_circle(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float distance = length(uv);\n    return clamp((1.0-distance/size)/edge, 0.0, 1.0);\n}\n\nfloat shape_polygon(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = atan(uv.x, uv.y)+3.14159265359;\n    float slice = 6.28318530718/sides;\n    return clamp((size-cos(floor(0.5+angle/slice)*slice-angle)*length(uv))/(edge*size), 0.0, 1.0);\n}\n\nfloat shape_star(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = atan(uv.x, uv.y);\n    float slice = 6.28318530718/sides;\n    return clamp((size-cos(floor(1.5+angle/slice-2.0*step(0.5*slice, mod(angle, slice)))*slice-angle)*length(uv))/(edge*size), 0.0, 1.0);\n}\n\nfloat shape_curved_star(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = 2.0*(atan(uv.x, uv.y)+3.14159265359);\n    float slice = 6.28318530718/sides;\n    return clamp((size-cos(floor(0.5+0.5*angle/slice)*2.0*slice-angle)*length(uv))/(edge*size), 0.0, 1.0);\n}\n\nfloat shape_rays(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = 0.5*max(edge, 1.0e-8)*size;\n\tfloat slice = 6.28318530718/sides;\n    float angle = mod(atan(uv.x, uv.y)+3.14159265359, slice)/slice;\n    return clamp(min((size-angle)/edge, angle/edge), 0.0, 1.0);\n}\n\nconst float p_o111660_contrast = 1.000000000;\nconst float p_o19340_gradient_0_pos = 0.072727273;\nconst float p_o19340_gradient_0_r = 0.000000000;\nconst float p_o19340_gradient_0_g = 0.000000000;\nconst float p_o19340_gradient_0_b = 0.000000000;\nconst float p_o19340_gradient_0_a = 1.000000000;\nconst float p_o19340_gradient_1_pos = 0.145454545;\nconst float p_o19340_gradient_1_r = 1.000000000;\nconst float p_o19340_gradient_1_g = 1.000000000;\nconst float p_o19340_gradient_1_b = 1.000000000;\nconst float p_o19340_gradient_1_a = 1.000000000;\nconst float p_o19340_gradient_2_pos = 0.290909091;\nconst float p_o19340_gradient_2_r = 1.000000000;\nconst float p_o19340_gradient_2_g = 1.000000000;\nconst float p_o19340_gradient_2_b = 1.000000000;\nconst float p_o19340_gradient_2_a = 1.000000000;\nconst float p_o19340_gradient_3_pos = 0.363636364;\nconst float p_o19340_gradient_3_r = 0.000000000;\nconst float p_o19340_gradient_3_g = 0.000000000;\nconst float p_o19340_gradient_3_b = 0.000000000;\nconst float p_o19340_gradient_3_a = 1.000000000;\nconst float p_o19340_gradient_4_pos = 0.636691007;\nconst float p_o19340_gradient_4_r = 0.000000000;\nconst float p_o19340_gradient_4_g = 0.000000000;\nconst float p_o19340_gradient_4_b = 0.000000000;\nconst float p_o19340_gradient_4_a = 1.000000000;\nconst float p_o19340_gradient_5_pos = 0.709418279;\nconst float p_o19340_gradient_5_r = 1.000000000;\nconst float p_o19340_gradient_5_g = 1.000000000;\nconst float p_o19340_gradient_5_b = 1.000000000;\nconst float p_o19340_gradient_5_a = 1.000000000;\nvec4 o19340_gradient_gradient_fct(float x) {\n  if (x < p_o19340_gradient_0_pos) {\n    return vec4(p_o19340_gradient_0_r,p_o19340_gradient_0_g,p_o19340_gradient_0_b,p_o19340_gradient_0_a);\n  } else if (x < p_o19340_gradient_1_pos) {\n    return mix(vec4(p_o19340_gradient_0_r,p_o19340_gradient_0_g,p_o19340_gradient_0_b,p_o19340_gradient_0_a), vec4(p_o19340_gradient_1_r,p_o19340_gradient_1_g,p_o19340_gradient_1_b,p_o19340_gradient_1_a), ((x-p_o19340_gradient_0_pos)/(p_o19340_gradient_1_pos-p_o19340_gradient_0_pos)));\n  } else if (x < p_o19340_gradient_2_pos) {\n    return mix(vec4(p_o19340_gradient_1_r,p_o19340_gradient_1_g,p_o19340_gradient_1_b,p_o19340_gradient_1_a), vec4(p_o19340_gradient_2_r,p_o19340_gradient_2_g,p_o19340_gradient_2_b,p_o19340_gradient_2_a), ((x-p_o19340_gradient_1_pos)/(p_o19340_gradient_2_pos-p_o19340_gradient_1_pos)));\n  } else if (x < p_o19340_gradient_3_pos) {\n    return mix(vec4(p_o19340_gradient_2_r,p_o19340_gradient_2_g,p_o19340_gradient_2_b,p_o19340_gradient_2_a), vec4(p_o19340_gradient_3_r,p_o19340_gradient_3_g,p_o19340_gradient_3_b,p_o19340_gradient_3_a), ((x-p_o19340_gradient_2_pos)/(p_o19340_gradient_3_pos-p_o19340_gradient_2_pos)));\n  } else if (x < p_o19340_gradient_4_pos) {\n    return mix(vec4(p_o19340_gradient_3_r,p_o19340_gradient_3_g,p_o19340_gradient_3_b,p_o19340_gradient_3_a), vec4(p_o19340_gradient_4_r,p_o19340_gradient_4_g,p_o19340_gradient_4_b,p_o19340_gradient_4_a), ((x-p_o19340_gradient_3_pos)/(p_o19340_gradient_4_pos-p_o19340_gradient_3_pos)));\n  } else if (x < p_o19340_gradient_5_pos) {\n    return mix(vec4(p_o19340_gradient_4_r,p_o19340_gradient_4_g,p_o19340_gradient_4_b,p_o19340_gradient_4_a), vec4(p_o19340_gradient_5_r,p_o19340_gradient_5_g,p_o19340_gradient_5_b,p_o19340_gradient_5_a), ((x-p_o19340_gradient_4_pos)/(p_o19340_gradient_5_pos-p_o19340_gradient_4_pos)));\n  }\n  return vec4(p_o19340_gradient_5_r,p_o19340_gradient_5_g,p_o19340_gradient_5_b,p_o19340_gradient_5_a);\n}\nconst int seed_o128719 = 22594;\nconst float p_o128719_rotate = 0.000000000;\nconst float p_o128719_scale = 0.500000000;\nconst float p_o128719_value = 0.000000000;\nconst float p_o75374_sides = 6.000000000;\nconst float p_o75374_radius = 0.400000006;\nconst float p_o75374_edge = 1.000000000;\nfloat o128719_input_in(vec2 uv) {\nfloat o75374_0_1_f = shape_circle((uv), p_o75374_sides, p_o75374_radius*1.0, p_o75374_edge*1.0);\n\nreturn o75374_0_1_f;\n}\nfloat o128719_input_mask(vec2 uv) {\n\nreturn 1.0;\n}\nvec4 splatter_o128719(vec2 uv, int count, vec2 seed) {\n\tfloat c = 0.0;\n\tvec3 rc = vec3(0.0);\n\tvec3 rc1;\n\tfor (int i = 0; i < count; ++i) {\n\t\tseed = rand2(seed);\n\t\trc1 = rand3(seed);\n\t\tfloat mask = o128719_input_mask(fract(seed+vec2(0.5)));\n\t\tif (mask > 0.01) {\n\t\t\tvec2 pv = fract(uv - seed)-vec2(0.5);\n\t\t\tseed = rand2(seed);\n\t\t\tfloat angle = (seed.x * 2.0 - 1.0) * p_o128719_rotate * 0.01745329251;\n\t\t\tfloat ca = cos(angle);\n\t\t\tfloat sa = sin(angle);\n\t\t\tpv = vec2(ca*pv.x+sa*pv.y, -sa*pv.x+ca*pv.y);\n\t\t\tpv *= (seed.y-0.5)*2.0*p_o128719_scale+1.0;\n\t\t\tpv /= vec2((0.3+0.2*sin(iTime)), ((0.3+0.2*sin(iTime))));\n\t\t\tpv += vec2(0.5);\n\t\t\tpv = clamp(pv, vec2(0.0), vec2(1.0));\n\t\t\t \n\t\t\tseed = rand2(seed);\n\t\t\tfloat c1 = o128719_input_in(pv)*mask*(1.0-p_o128719_value*seed.x);\n\t\t\tc = max(c, c1);\n\t\t\trc = mix(rc, rc1, step(c, c1));\n\t\t}\n\t}\n\treturn vec4(rc, c);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nfloat minSize = min(iResolution.x, iResolution.y);\nvec2 UV = vec2(0.0, 1.0) + vec2(1.0, -1.0) * (fragCoord-0.5*(iResolution.xy-vec2(minSize)))/minSize;\nvec4 o128719_0_rch = splatter_o128719((UV), int((70.0+sin(iTime)*50.0)), vec2(float(seed_o128719)));float o128719_0_1_f = o128719_0_rch.a;\nvec4 o19340_0_1_rgba = o19340_gradient_gradient_fct(o128719_0_1_f);\nvec4 o111660_0_1_rgba = vec4(clamp(o19340_0_1_rgba.rgb*p_o111660_contrast+vec3((max(sin(iTime), 0.0)))+0.5-p_o111660_contrast*0.5, vec3(0.0), vec3(1.0)), o19340_0_1_rgba.a);\nfragColor = o111660_0_1_rgba;\n}\n","name":"Image","description":"","type":"image"}]}