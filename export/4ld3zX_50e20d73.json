{"ver":"0.1","info":{"id":"4ld3zX","date":"1470601654","viewed":157,"name":"Tiled Sphere","username":"G3Kappa","description":"My second shader, still getting the hang of it.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["sphere","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// The size of the sphere's tiling\n#define FEATURE_SIZE 8.\n// The sphere's rotational speed\n#define SPHERE_SPEED 1.0\n// The outer circle radius. Small changes!\n#define SPHERE_RADIUS 0.5\n// Changing this value affects the green color in various ways.\n#define GREEN_COS_MULTIPLIER 9.\n\nfloat fcircle(vec2 p) { return 1. - dot(p-=.5,p); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragCoord = ((fragCoord - vec2(iResolution.x / 2., iResolution.y / 2.)) / iResolution.y);\n    \n    float outerCircle = 0.3 * sin(iDate.w) + SPHERE_RADIUS * fcircle((fragCoord + vec2(0.25, 0.25)) * 2.);\n    float tilePattern = 3.0 * fcircle(fract(fragCoord * 1. / outerCircle * FEATURE_SIZE + iDate.w / (1. / SPHERE_SPEED)));\n    float z = (tilePattern * outerCircle / 6.) * tilePattern * outerCircle;\n    \n    fragColor = vec4(sin(z * 3.5), pow(z * 8., 8.) * cos(z * GREEN_COS_MULTIPLIER), 1. * z, 1.0);\n}","name":"Image","description":"","type":"image"}]}