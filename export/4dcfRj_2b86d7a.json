{"ver":"0.1","info":{"id":"4dcfRj","date":"1525831308","viewed":120,"name":"The red crosseses","username":"ivanlesko","description":"Learning how to manipulate grids.  Speed of the crosses amplifies based on Y index on the grid.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["beginner","squares"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 red = vec3(202., 0., 17.)/255.;\n\nfloat getSquare(vec2 p, vec2 size, vec2 uv)\n{\n    float m = max(iResolution.x, iResolution.y);\n    p = p * iResolution.xy/m;\n    vec2 bl = 1.0-smoothstep(-8.0/m, 8.0/m, abs(2.0*(p-uv))-size );\n    return bl.x * bl.y;\n}\n\nfloat getCross(vec2 p, vec2 size, vec2 uv) {\n    float sq = getSquare(p, size, uv);\n    float sq2 = getSquare(p, size.yx, uv);\n    \n    sq = max(sq, sq2);\n    \n    return sq;\n}\n\nvec2 grid(vec2 uv, float num) {\n    uv *= num;\n\tfloat index = floor(uv.y) - num;\n    uv.x += fract(-iTime / index * .5);        \n    return fract(uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n\n    vec3 color = vec3(0.);\n\tcolor = vec3(1.);\n    \n    vec2 uvGrid = grid(st, 4.);\n\t\n    vec2 sqPos = uvGrid;\n    vec3 square = vec3(getCross(vec2(0.500,.9), vec2(0.300,0.890), sqPos));\n    \n    //color = vec3(uvGrid.x, uvGrid.y, 0.);\n\tcolor = mix(color, red, square);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}