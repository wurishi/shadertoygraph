{"ver":"0.1","info":{"id":"4ltXR4","date":"1478461256","viewed":522,"name":"Kindergarten Art Class III","username":"huwb","description":"Ok last one i promise. Keep finding interesting variations!","likes":26,"published":1,"flags":32,"usePreview":0,"tags":["fluid","curl","paint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    fragColor = texture( iChannel0, uv );\n    fragColor *= 2.;\n    fragColor = smoothstep(0.,1.,fragColor);//*/\n    \n    // bg, vign\n    fragColor.xyz = 1.-fragColor.xyz;\n    fragColor.xyz *= pow(1. - 1.9*dot(uv-.5,uv-.5),.07);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvec2 hash2( float n ) { return fract(sin(vec2(n,n+1.0))*vec2(43758.5453123,22578.1459123)); }\n\n// smoothstep interpolation of texture\nvec4 ssamp( vec2 uv, float oct )\n{\n    uv /= oct;\n    \n    //return texture( iChannel0, uv, -10.0 );\n    float texSize = 8.;\n    \n    vec2 x = uv * texSize - .5;\n    vec2 f = fract(x);\n    \n    // remove fractional part\n    x -= f;\n    \n    // apply smoothstep to fractional part\n    f = f*f*(3.0-2.0*f);\n    \n    // reapply fractional part\n    x += f;\n    \n    uv = (x+.5) / texSize;\n    \n    return texture( iChannel1, uv, -10.0 );\n}\n\n\nvec2 e = vec2(1./256., 0.);\nvec4 dx( vec2 uv, float oct ) { return (ssamp(uv+e.xy,oct) - ssamp(uv-e.xy,oct)) / (2.*e.x); }\nvec4 dy( vec2 uv, float oct ) { return (ssamp(uv+e.yx,oct) - ssamp(uv-e.yx,oct)) / (2.*e.x); }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 res = vec4(0.);\n    float scl = iResolution.x/640.;\n    \n    // random paint drops\n    float fr = float(iFrame);\n    float period = iTime < 2.9 ? 30. : iTime < 47. ? 8. : 3.;\n    if( mod(fr,period) == 0. )\n    {\n        vec2 sparkPos = hash2(iTime+1.11) * iResolution.xy;\n        if( length(sparkPos-fragCoord)<5.*scl && fragCoord.x > 1. && fragCoord.y > 1. )\n        {\n            // everyones favourite colour gradient\n            res += 2.5*vec4(uv,0.5+0.5*sin(iTime),1.0);\n        }\n    }\n    \n    // mouse paint\n    if( length(fragCoord-iMouse.xy) < 5.*scl && iMouse.z > 0. )\n    {\n        // added sin gives pulsing feel\n        res += .7*vec4(uv,0.5+0.5*sin(iTime),1.0)*(.6+.5*-sin(iTime*10.5));\n    }\n    \n    // lookup offset\n    vec2 off = 0.* (vec2(128.)/iResolution.xy) * iTimeDelta;\n    \n    float oct = .25;\n    vec2 curl1 = .001*vec2( dy(uv,oct).x, -dx(uv,oct).x )*oct;\n    oct = 5.; float sp = 0.1;\n    curl1 += .0002*vec2( dy(uv+sp*iTime,oct).x, -dx(uv+sp*iTime,oct).x )*oct;\n    \n    off += curl1;\n    off *= .4;\n    \n    res += .999*texture( iChannel0, uv - off );\n    \n    fragColor = res;\n}\n","name":"Buf A","description":"","type":"buffer"}]}