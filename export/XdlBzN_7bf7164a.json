{"ver":"0.1","info":{"id":"XdlBzN","date":"1495125109","viewed":261,"name":"Teleidoscope","username":"albertelwin","description":"A cubic Teleidoscope effect.","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["kaleidoscope","webcam","teleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {        \n    float s = 2.0;\n    vec2 uv = fragCoord.xy / iResolution.y;\n    uv.x += 0.5 - (iResolution.x / iResolution.y) * 0.5;\n    uv = uv * s - s * 0.5;\n    uv = abs(uv);\n\n    ivec2 uv_odd = ivec2(mod(vec2(uv), 2.0));    \n    if(uv_odd.x == 0) {\n   \t\tuv.x = 1.0 - uv.x;\n    }\n    if(uv_odd.y == 0) {\n        uv.y = 1.0 - uv.y;\n    }\n    \n    uv = fract(uv);\n    \n    float t = iTime * 0.2;\n    float cos_t = cos(t);\n    float sin_t = sin(t);\n    \n    vec2 p = uv - 0.5;\n    uv.x = cos_t * p.x - sin_t * p.y;\n    uv.y = sin_t * p.x + cos_t * p.y;\n    uv += t;\n    uv = fract(uv);\n    \n    uv = fract(uv + texture(iChannel0, uv).xy);\n    uv = fract(uv + texture(iChannel0, uv).xy);\n    \n    vec3 tex = texture(iChannel0, uv).rgb;\n    \n    float v = (tex.r + tex.g + tex.b) * (1.0 / 3.0);\n    v = cos(v * 6.0) * 0.5 + 0.5;\n    v = 1.0 - v;\n    \n    fragColor.rgb = vec3(v);\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}