{"ver":"0.1","info":{"id":"llSXW1","date":"1443217251","viewed":139,"name":"n00bes voladoras","username":"noidexe","description":"testing2","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["n00b"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"bool isPoint(vec2 uv, float t) {\n    vec2 deRotated;\n    vec2 center = vec2(0.5,0.5);\n    deRotated.x = (uv.x-center.x) * cos(t) - uv.y * sin(t);\n    deRotated.y = uv.x * sin(t) + (uv.y-center.y) * cos(t);\n    deRotated = deRotated *sin(t);\n    //return (mod(uv.x*10.0, 10.0) + mod(uv.y*10.0, 10.0)) == 0.0 ;\n    return mod(deRotated.x*100.0, 10.0) < 5.0 ^^ mod(deRotated.y*100.0, 10.0) < 5.0;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;  \n    vec4 point;\n    vec4 finalPoint;\n    float t = iTime;\n    if(isPoint(uv, t)) {\n        point = vec4(1.0,0.0,0.0,1.0);\n    } else {\n        point = vec4(0.0,0.0,0.0,1.0);\n        \n    }\n    \n    finalPoint = point;\n    finalPoint.y = (sin(t)/2.0)+1.0 * point.y;\n    fragColor = finalPoint;\n}","name":"","description":"","type":"image"}]}