{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// #define filled\n\nfloat sinm(float t, float vmin, float vmax)\n{\n\treturn (vmax-vmin)*0.5*sin(t)+vmin+(vmax-vmin)*0.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = iTime;\n\tfloat size = 0.15;\n\t// float size = 0.1;\n\tfloat thickness = 0.001;\n\t\n\t//#ifdef filled\n\tthickness = 0.003;\n\t//#endif filled\n\t\n\tvec2 p = fragCoord.xy / iResolution.xx;\n\tvec2 c = vec2(0.5,0.5*iResolution.y/iResolution.x);\n\t\n\tfloat d = 0.0;\n\tfloat alpha = 0.15;\n\t// float alpha = 0.2;\n\tfor(int i=0 ; i<6 ; i++)\n\t{\n\t\tvec2 dist = abs(p-c);\n\t\tfloat d1 = max(dist.x, dist.y);\n\t\tfloat d2 = abs(d1-size);\n\t\t#ifdef filled\n\t\td2 = d1-size;\n\t\tif(d2<0.0)\n\t\t{\n\t\t\td2 = 0.0;\n\t\t\td = 0.50;\n\t\t\tbreak;\n\t\t}\n\t\t#endif\n\t\td += thickness/d2;\n\t\tc += alpha*sign(p-c);\n\t\tsize *= 0.80; //sinm(t,0.45,0.45);\n\t\tthickness *= 0.775;\n\t\talpha *= 0.405;\n\t}\n\t\n\tfragColor = vec4(d*vec3(0.25,0.35,0.45),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsS3Ry","date":"1389969476","viewed":369,"name":"2D Square Fractal","username":"arthursw","description":"2D Square Fractal","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","square"],"hasliked":0,"parentid":"","parentname":""}}