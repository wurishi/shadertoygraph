{"ver":"0.1","info":{"id":"4Xt3D2","date":"1717028498","viewed":110,"name":"FNF 3.0 Rain Shader","username":"Orsonster","description":"The FNF 3.0 Rain shader. (With help from people who know what they're doing, while this was simple to move to shadertoy, it's nice to have)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fnf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Rain Shader optimized for ShaderToy\nfloat rand(vec2 a) {\n    return fract(sin(dot(mod(a, vec2(1000.0)).xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat ease(float t) {\n    return t * t * (3.0 - 2.0 * t);\n}\n\nfloat rainDist(vec2 p, float scale, float intensity, float uTime) {\n    p *= 0.1;\n    p.x += p.y * 0.1;\n    p.y -= uTime * 500.0 / scale;\n    p.y *= 0.03;\n    float ix = floor(p.x);\n    p.y += mod(ix, 2.0) * 0.5 + (rand(vec2(ix)) - 0.5) * 0.3;\n    float iy = floor(p.y);\n    vec2 index = vec2(ix, iy);\n    p -= index;\n    p.x += (rand(index.yx) * 2.0 - 1.0) * 0.35;\n    vec2 a = abs(p - 0.5);\n    float res = max(a.x * 0.8, a.y * 0.5) - 0.1;\n    bool empty = rand(index) < mix(1.0, 0.1, intensity);\n    return empty ? 1.0 : res;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 wpos = uv * iResolution.xy;\n    float intensity = 0.2;\n    float uTime = -iTime;\n\n    vec3 add = vec3(0);\n    float rainSum = 0.0;\n\n    const int numLayers = 4;\n    float scales[4];\n    scales[0] = 1.0;\n    scales[1] = 1.8;\n    scales[2] = 2.6;\n    scales[3] = 4.8;\n\n    for (int i = 0; i < numLayers; i++) {\n        float scale = scales[i];\n        float r = rainDist(wpos * scale + 500.0 * float(i), scale, intensity, uTime);\n        if (r < 0.0) {\n            float v = (1.0 - exp(r * 5.0)) / scale * 2.0;\n            wpos.x += v * 10.0;\n            wpos.y -= v * 2.0;\n            add += vec3(0.1, 0.15, 0.2) * v;\n            rainSum += (1.0 - rainSum) * 0.75;\n        }\n    }\n\n    vec3 rainColor = vec3(0.4, 0.5, 0.8);\n    vec3 color = vec3(0.0); // Base color, can be adjusted\n\n    color += add;\n    color = mix(color, rainColor, 0.1 * rainSum);\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}