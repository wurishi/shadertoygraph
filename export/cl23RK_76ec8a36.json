{"ver":"0.1","info":{"id":"cl23RK","date":"1673542075","viewed":83,"name":"Extremely simple value noise","username":"ianertson","description":"Example of extremely simple value noise","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin","random","valuenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n*  Extremely simple value noise\n*/\n\n#define C0 3815\n#define C1 9847\n#define C2 8477\n#define C3 9582\n#define C4 6186\n#define C5 9354\n#define C6 2276\n\n// converts vec2 to a 1D index\nfloat idx(vec2 v, float k) { return v.x * k + v.y; }\n\n// yields a pseudo-random value from a float\nfloat hash1(float v, float seed) {\n    float x0 = v;\n    float y0 = atan(v, float(C0) / float(C1));\n    float x1 = atan(y0, float(C1) / float(C2));\n    float y1 = atan(x1, float(C3) / float(C4));\n    return fract(cos(v*(1.2715*sin(seed*(0.5+atan(y1, x0))))+y0)\n        * dot(vec2(x0, y0), vec2(x1, y1)));   \n}\n\n// smooth value noise from vec2\nfloat hash2(vec2 uv, float seed) {\n    float k = hash1(float(C2), seed);\n    vec2 id = floor(uv);\n    vec2 lv = smoothstep(0.0, 1.0, fract(uv));\n    float a = hash1(idx(id, k), seed);\n    float b = hash1(idx(id + vec2(1.0, 0.0), k), seed);\n    float ab = mix(a, b, lv.x);\n    float c = hash1(idx(id + vec2(0.0, 1.0), k), seed);\n    float d = hash1(idx(id + vec2(1.0, 1.0), k), seed);\n    float cd = mix(c, d, lv.x);\n    return mix(ab, cd, lv.y);\n}\n\n// returns an animated uv coordinate,\n// just to make this a bit more interesting\nvec2 panuv(vec2 uv, float speed, float distortion, float seed) {\n    if (iMouse.z > 0.001) { return uv+(iMouse.xy / iResolution.xy); }\n\n    float offsetX = hash2(uv+hash1(float(C0), seed), seed);\n    float offsetY = hash2(uv-hash1(float(C1), seed), seed);\n    vec2 offset0 = vec2(cos(iTime*speed), sin(iTime*speed));\n    vec2 offset1 = offset0*(vec2(offsetX, offsetY)*hash2(vec2(offsetX, offsetY), seed));\n    \n    return uv+mix(offset0, offset1, distortion);\n}\n\n/////////////////////////////////////////////////////////////////////////////\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv += 0.5;\n    \n    float m = float(iMouse.z < 0.001);\n    \n    float seed = 1337.0;\n    float frequency = 128.0 + m*((0.5 + (0.5*sin(iTime))) * 128.0);\n    float speed = 0.1;\n    float distortion = 0.25 + (0.5 + (0.5*cos(iTime)));\n    \n    uv = panuv(uv, speed, distortion, seed);\n\n    vec3 col = vec3(hash2(uv*frequency, seed));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}