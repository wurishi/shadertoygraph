{"ver":"0.1","info":{"id":"MsdXzM","date":"1458491493","viewed":246,"name":"Boat drawing","username":"gael","description":"My first drawing with glsl. Trying to make a boat, floating on the sea....","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","drawing","boat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// My first drawing with glsl\n// Trying to make a boat, floating on the sea....\n\nvoid rotate(inout vec2 p, float a, vec2 center) {\n    p -= center;\n    p *= mat2(cos(a), -sin(a), sin(a), cos(a));\n    p += center;\n}\n\nfloat body(in vec2 p) {\n    // Scale and position body    \n    p.x -= 0.5;\n    p.y *= 1.8;\n    p.x *= 1.5;\n    \n    float f = 1.;\n    \n    // Shape\n    f *= smoothstep(0.3, 0.31, p.y);\n    f *= 1. - smoothstep(0.6, 0.61, p.y);\n    f *= 1. - smoothstep(0.3, 0.31, abs(p.x) - (p.y * 0.5 - 0.2));\n    \n    return f;\n}\n\nfloat pole(in vec2 p) {    \n \tfloat f = 1.;\n    \n    p.y -= 0.2;\n    p.x -= 0.5;\n    p.x *= 10.5;\n    \n    f *= 1. - smoothstep(0.1, 0.11, abs(p.x));\n    f *= step(0.0, p.y);\n    f *= 1. - smoothstep(0.6, 0.61, p.y);\n    \n    return f;\n}\n\nfloat sail1(in vec2 p) {    \n \tfloat f = 1.0;\n    \n    p.y -= 0.40;\n    p.x -= 0.512;\n    p.y *= 3.78;\n    p.x *= 1.5;\n    \n    f *= smoothstep(0., 0.01, p.x);\n    f *= smoothstep(0., 0.01, p.y);\n    f *= 1. - smoothstep(0.3, 0.31, p.x + p.y * 0.2);\n    \n    return f;\n}\n\nfloat sail2(in vec2 p) {    \n \tfloat f = 1.0;\n    \n    p.y -= 0.40;\n    p.x -= 0.488;\n    p.y *= 4.;\n    p.x *= -2.;\n    \n    f *= smoothstep(0., 0.01, p.x);\n    f *= smoothstep(0., 0.01, p.y);\n    f *= 1. - smoothstep(0.3, 0.31, p.x + p.y * 0.2);\n    \n    return f;\n}\n\nvec3 boat(in vec3 background, in vec2 p) {\n \tvec3 color = background;\n    \n    p.x *= 0.8;\n    p.x -= 0.2;\n    p.y += cos(iTime * 1.3) * 0.04;\n    rotate(p, sin(iTime) * 0.2, vec2(0.5, 0.1));\n    color = mix(color, vec3(0.26, 0.61, 0.26), pole(p));\n    color = mix(color, vec3(0.76, 0.13, 0.13) + vec3(0.2) * p.y, sail1(p));\n    color = mix(color, vec3(0.76, 0.13, 0.13) + vec3(0.2) * p.y, sail2(p));\n    color = mix(color, vec3(0.54, 0.40, 0.05), body(p));     \n    \n    return color;\n}\n\nvec3 water(in vec3 background, in vec2 p) {\n    vec3 color = vec3(0.1, 0.3, 0.5);\n    \n    p.y -= 0.13;\n    \n    float f = 1. - smoothstep(0.1, 0.11,\n                         p.y + sin(p.x * 20. + iTime * 2.)\n                         * 0.03 * cos(p.x * 5. + iTime * 2.));\n\n    color = mix(background, color, f);\n    \n    return color;   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    // Fix ratio\n    p.x *= iResolution.x / iResolution.y;\n    \n    vec3 color = vec3(0.);    \n    \n    // Background\n    color += mix(vec3(0.58, 0.8, 1.0), vec3(0.95, 1., 0.9), sqrt(p.y) - 0.5);\n    \n    color = boat(color, p);\n    color = water(color, p);\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}