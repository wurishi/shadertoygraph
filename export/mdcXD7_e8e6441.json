{"ver":"0.1","info":{"id":"mdcXD7","date":"1679925471","viewed":425,"name":"flex links - v3","username":"FabriceNeyret2","description":"inspiration:  [url]https://twitter.com/gsarcone/status/1636081479372398592 [/url]\nMouse controls camera.\nhttps://tglad.blogspot.com/2022/07/quaternions-and-anti-twisters.html\nWith canonical space coloring.","likes":40,"published":3,"flags":0,"usePreview":1,"tags":["raymarching","short","reproduction","spinor","antitwister","diracsbelt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// color variant of https://shadertoy.com/view/DscXR4\n// variant of https://shadertoy.com/view/md3Szr\n\n#define rot(a)        mat2(cos(a+vec4(0,11,33,0)))         // 2D rotation \n#define rot3(P,A,a)  ( mix( A*dot(P,A), P, cos(a) ) + sin(a)*cross(P,A) ) // 3D rot around an arbitrary axis\n#define B(rx,ry,rz)   max(a.x-rx, max(a.y-ry,a.z-rz))      // box\n\n#define d(q)  (                                                                \\\n        a = abs(q),                                                            \\\n        t =        B( 1., 1., 1.),                         /* cube  */         \\\n        t = min(t, B(1e5, .3, .1)),                        /* bands */         \\\n        t = min(t, B( .3, .1,1e5)),                                            \\\n            min(t, B( .1,1e5, .3))                                             \\\n     )\n            \nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9.;\n    vec3  R = iResolution,\n          D = normalize(vec3(U+U, -12.*R.y) - R),          // ray direction\n          p = vec3(0,0,60), q,a,                           // marching point along ray \n          M = iMouse.z > 0. ? 6.*iMouse.xyz/R -3.\n                            :  vec3( 1,.5,0) * cos(.3*iTime + vec3(0,11,0)); \n        p.yz *= rot(-M.y),                                 /* rotations */\n        p.xz *= rot(-M.x-1.57), \n        D.yz *= rot(-M.y),\n        D.xz *= rot(-M.x-1.57); \n\n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.005 )        // march scene  \n        q = rot3( p, vec3(sin(iTime),0,cos(iTime)), 3.14 *smoothstep(6.,1.7, length(p))  ), \n        t = d(q),\n        p += .2*t*D;                                       // step forward = dist to obj    \n      \n\n    O *= O*O*2.;                                           // color scheme\n // O.rgb *= .5+.5*normalize(q);\n    D = vec3(-1,1,0)*1e-3;                                 // efficient FD normals https://iquilezles.org/articles/normalsSDF/\n    O.rgb *= .5 -.5* normalize(  D.xxy* d( q + D.xxy ) + D.xyx* d( q + D.xyx ) + D.yxx* d( q + D.yxx ) + D.yyy * d( q + D.yyy ) );\n} \n\n","name":"Image","description":"","type":"image"}]}