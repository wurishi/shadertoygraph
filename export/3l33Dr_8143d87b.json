{"ver":"0.1","info":{"id":"3l33Dr","date":"1575996237","viewed":113,"name":"seperable radial blur","username":"weepy","description":"seperable radial blur","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["seperableradialblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n\n    \n    \n    vec2 m = iMouse.xy/iResolution.xy;\n    vec2 C = vec2(0.5);\n    \n    vec2 r = (m-C)/iter/iter;\n    \n    \n    vec3 col;\n    float count = 0.;\n    \n\tfloat amount = 1.0;\n    \n     for(float i=0.; i<iter;i++) {\n        \n\t\tcol += texture(iChannel0, uv + r*i).rgb * amount;\n     \tcount += amount;\n        amount *= decay;\n    }\n    \n    col /= count;\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\nvec2 m = iMouse.xy/iResolution.xy;\n    vec2 C = vec2(0.5);\n\n    vec2 r = (m-C)/iter;\n    \n    vec3 col;\n    float count = 0.;\n    \n\tfloat amount = 1.0;\n    \n     for(float i=0.; i<iter;i++) {\n        \n\t\tcol += texture(iChannel0, uv + r*i).rgb * amount;\n     \tcount += amount;\n        amount *= decay;\n    }\n    \n    col /= count;\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float iter = 8.0;\nvec2 dir = vec2(0.19, 0.15);\nfloat decay = 0.59;\n","name":"Common","description":"","type":"common"}]}