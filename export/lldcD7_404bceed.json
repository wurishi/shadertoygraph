{"ver":"0.1","info":{"id":"lldcD7","date":"1532941656","viewed":766,"name":"bluenoise: B&W grad thresholding","username":"FabriceNeyret2","description":"did you noticed this recently appeared \"bluenoise\" texture ? :-)\nHere: thresholding of B&W gradient. ( click for colored variant.)\n\nTop: blue noise   Bottom: white noise      Right: zoom x3\nOf course, these stats property is valid only in nearest.","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["noise","texture","shadertoy","bluenoise","short","bluenoisetexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://www.shadertoy.com/view/lttcD7\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec3 R = iResolution/2.;\n    vec2 S = sign(U-.5-R.xy);\n    if (S.x*S.y==0.) { O=vec4(1,0,0,0); return; }        // separation\n    \n    if ( S.y > 0. ) U =  U-R.zy;                         // top = blue noise\n    if ( S.x > 0. ) U = (U-R.xz) / 3., R.x/=3.;          // right = zoom\n    O = S.y > 0.\n            ? texelFetch( iChannel0, ivec2(U)%1024, 0 )  // top = blue noise\n            : texelFetch( iChannel1, ivec2(U)% 256, 0 ); // bottom = white noise\n\n    O = iMouse.z<=0. ? vec4( U.x/R.x < O.x )       // B & W gradient thresholding\n                     : step( U.x/R.x,  O );        // colored variant\n\n  //O = vec4( length(step( U.x/R.x, O )) /2.);     // luminance\n}","name":"Image","description":"","type":"image"}]}