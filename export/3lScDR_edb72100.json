{"ver":"0.1","info":{"id":"3lScDR","date":"1594087594","viewed":128,"name":"Mountainscape","username":"mccannjp","description":"Layers of colored mountain ranges with parallax effect. ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["parallax","mountains","scenery"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define S smoothstep\n#define COUNT 45\n\nfloat RAND_01(float co) \n{\n    return fract(sin(co*(98.3458)) * 47453.5453);\n}\n\nfloat RAND_Range(float id, float minimum, float maximum) \n{\n    return (RAND_01(id) * (maximum - minimum)) + minimum;\n}\n\nvec3 mountain(float id, vec2 uv, float blur, float offsetY) \n{\n    float height = RAND_Range(id, 0.2, 0.45);\n    float offsetX = RAND_Range(id + 333., -1., 1.);\n    float width = RAND_Range(id + 100., 0.65, 2.);\n    \n    float r1 = floor(RAND_Range(id, 6., 10.));\n    float r2 = floor(RAND_Range(id, 10., 18.));\n    float r3 = floor(RAND_Range(id, 17., 39.));\n    float r4 = floor(RAND_Range(id, 39., 59.));\n    \n    uv.x = uv.x + (0.5 * width) - offsetX;\n    uv.x += (iTime * (float(COUNT) - id)) / 800.;\n    \n    float y = sin(uv.x * PI / width) * height;\n    y += sin(uv.x * r1 * PI / width) * height / r2;\n    y += sin(uv.x * r3 * PI / width) * height / r4;\n    y += + offsetY;\n    \n    uv.y += 0.03;\n    \n    float res = S(y+blur, y, uv.y);\n    \n    // gradient \n    float ay = S(-0.5, y, uv.y) + 0.6;\n    \n    return vec3(res * ay);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.);\n    float ct = float(COUNT);\n\n    for (int i = 0; i < COUNT; i++) {\n        float id = float(i);\n\t\tvec3 m = mountain(id, uv, 0.03, float(i)/ct - 1.0);\n        \n        float idx = RAND_Range(id, 0., 3.);\n        vec3 c = vec3(1.);\n        if(idx > 2.5) c = vec3(0.408, 0.291, 0.817);     // magenta\n        else if(idx > 1.5) c = vec3(0.607, 0.542, 0.80); // light purple\n        else if(idx > 0.5) c = vec3(0.64, 0.682, 0.566); // gray\n        else c = vec3(0.486, 0.234, 0.725);              // purple\n        \n        if(col.r < 0.1)\n        \tcol += c * m;\n    }\n    \n    if(col.r < 0.1)\n        col += vec3(0.7, 0.8, 0.99); // sky\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}