{"ver":"0.1","info":{"id":"7dVyDh","date":"1654797568","viewed":571,"name":"Mobius Maze [331 chars]","username":"Xor","description":"Mobius maze, inspired by works from FabriceNeyret2 and Shane","likes":53,"published":1,"flags":0,"usePreview":0,"tags":["mobius","maze","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    \"Mobius Maze [331 chars]\" by @XorDev\n\n    Tweet: twitter.com/XorDev/status/1534951614271868929\n    Twigl: https://t.co/YYUPG2wlLv\n    \n    Fabrice's Mobius Arrows were helpful here:\n    shadertoy.com/view/NltXRl\n\n    -2 Thanks to iapafoto\n    -6 Thanks to FabriceNeyret2\n    \n    <512 Chars playlist: shadertoy.com/playlist/N3SyzR\n*/\n\nvoid mainImage(out vec4 O, vec2 I)\n{\n    //Clear fragcolor\n    O -= O;\n    //Loop through layers and initialize vecs\n    for(vec2 r = iResolution.xy, z, p=r-r, i=p;\n        //Loop 100 times\n        i.y++<1e2;\n        //Sink holes\n        i.y < 1e2 - length(dFdy(p))*r.y*.2 \n        //Maze walls\n        && abs( fract( p.x+p.y*sign(texture(iChannel0,ceil(p)/2e1 ).r - .5) )\n                 -.5 )  >.3\n        //Color from layer height\n        ? O = i.y*i.yyyy/1e4 : O   \n    )\n        //Get centered coordinates (scaled for perspective)\n        z = p = ( I+I-i - r ) / r.y / vec2(2,1),\n        //Offset holes\n        z.x++, p.x-=.5,\n        //Mobius transform from FabriceNeyret2\n        p =   log(length(p = p*mat2(z,-z.y,z)/dot(p,p) +.5 )) *vec2(5,-5)\n            + atan(p.y,p.x) / .314  +  iTime;\n}\n\n\n///Original in 337 chars\n/*\nvoid mainImage(out vec4 O, vec2 I)\n{\n    //Clear fragcolor\n    O -= O;\n    //Loop through layers and initialize\n    for(vec2 r=iResolution.xy,p,z,i=r-r;\n    //Loop 100 times\n    i.y++<1e2;\n    //Add procedural maze layer\n    O += vec4(abs(fract(texture(iChannel0,ceil(p)/2e1).r>.5?p+p.y:p-p.y).x-.5)>.3\n    //Compute sinkholes with derivatives\n    && 1e2-i.y>length(dFdy(p))*r.y*.2)\n    //Factor brightness from layer height\n    * (i.y*i.y/1e4-O))\n    \n        //Set starting point\n        z=p=(I+I-i-r)/r.y/vec2(2,1),\n        //Hole offsets\n        z.x++, p.x-=.5,\n        //Mobius transform from FabriceNeyret2\n        p *= mat2(z,-z.y,z)/dot(p,p),\n        //Mobius spiral + 10x scaling and scrolling\n        p = log(length(p+=.5))*vec2(5,-5)+atan(p.y,p.x)/.314+iTime;\n}\n*/","name":"Image","description":"","type":"image"}]}