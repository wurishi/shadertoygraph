{"ver":"0.1","info":{"id":"McB3DW","date":"1704218691","viewed":26,"name":"Rita's First Shader: Smiley","username":"ritaturk","description":"My first attempt at a shaded color cycle smiley","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle","smiley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur) {\n\n    float d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    return c;\n}\n\n//float Band(float t, float start, float end, float blur) {\n\n    //float step1 = smoothstep(start-blur, start+blur, t);\n    //return step1;\n\n//}\n\n\nfloat Smiley(vec2 uv, vec2 p, float size) {\n\n    uv -=p; //tranlating coordinate system\n    uv /=size; //scaling coordinate system\n    \n    \n    float mask = Circle(uv, vec2(0.0), .4, 0.01);\n    mask -= Circle(uv, vec2(-.15, .1), .06, .01);\n    mask -= Circle(uv, vec2(.15, .1), .06, .01);\n   \n    \n    float mouth = Circle(uv, vec2(0.0), .3, 0.02);\n    mouth -= Circle(uv, vec2(0,0.1), .3, 0.01);\n    mask -= mouth;\n    return mask;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = vec3(0.);\n   \n    float mask = Smiley(uv, vec2(0.,0.),1.0);\n    //Smiley(uv, vec2(0), 1.0);\n   \n    //mask = Band(uv.x, -.2, .2, .05);\n     //col = vec3(1., 1., 1.)*mask; \n    //mask = smoothstep (-.2, .2, uv.x);\n    \n    \n    //Time varying pixel color\n    if (mask > 0.) {\n        col = vec3(0.7 + 0.5*cos(iTime+uv.xyx+vec3(0,4,8)));\n    }\n        \n    // Output the color\n    fragColor = vec4(col, 1.0);\n }","name":"Image","description":"","type":"image"}]}