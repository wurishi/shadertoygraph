{"ver":"0.1","info":{"id":"DlGfzm","date":"1701913566","viewed":28,"name":"A simple ellipse - distance 2D","username":"leixinyue","description":"ref:\nhttps://www.shadertoy.com/view/4sS3zz","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2dsdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdfEllipse(vec2 p, vec2 ca) {\n    vec2 f1 = vec2(.5-ca.x, .5);\n    vec2 f2 = vec2(.5+ca.x, .5);\n    return distance(p, f1) + distance(p, f2) - 2. * ca.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    uv.x -= (iResolution.x / iResolution.y - 1.) * .5;\n  \n    float a = sin(iTime) * .1 + .4;\n\n    float sd = sdfEllipse(uv, vec2(.3, a));\n    \n    fragColor = mix(vec4(1., .5, 0.3, 1.), vec4(0., 0., 0., 1.), smoothstep(0. - 0.01, 0. + 0.01, sd));\n}","name":"Image","description":"","type":"image"}]}