{"ver":"0.1","info":{"id":"4dtcWr","date":"1518519219","viewed":597,"name":"ecstatica like shader","username":"mihart","description":"1. simple shading\n2. added 256 color simulate\n3. added antialiasing","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["sphere","ecstatica"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy  - 0.5;\n    uv.x = uv.x /iResolution.y * iResolution.x;\n\n    vec3 lightpos = vec3(1.0);\n    \n    lightpos.x = 1.0 + sin(iTime) * 2.0;\n    lightpos.y = sin(iTime / 2.0) * 1.0;\n\t\n    vec4 baseColor = vec4(0.0, 0.5, 0.5, 1.0);\n    fragColor = baseColor;\n    \n    if(pow(uv.x, 2.0) + pow(uv.y, 2.0) <0.25) {\n        float uvz = sqrt(0.25 - dot(uv, uv));\n        vec3 norm = normalize(vec3(uv, uvz));\n        vec3 lightDir = normalize(lightpos - vec3(uv, uvz));\n\n        float diff = .2 + .8* clamp(dot(norm,lightDir),0.,1.) ;\n        fragColor = diff * vec4(1.0, 0.0, 0.0, 1.0);\n\t\tfragColor = round(fragColor * 16.0)/16.0;\n        fragColor = mix(fragColor, baseColor, smoothstep(0.245, .25, dot(uv, uv)));\n    }\n}","name":"Image","description":"","type":"image"}]}