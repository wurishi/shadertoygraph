{"ver":"0.1","info":{"id":"Mfjczh","date":"1721927209","viewed":39,"name":"White ripple","username":"SSAlp","description":"A Ripple effect in black and white.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["simple","trainning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec3 white = vec3(1, 1, 1);\n    vec2 waveCenter = vec2(0.2, 0.1);\n    float waveLen = 0.2;\n    // 0 to 1 (percentage of the wave that is above the threshold and will show as white. If = 1.0 then the entire\n    // wave is white and thus the entire screen too.\n    float waveTop = 0.2;\n    float freq = 1.3; // Hz\n    \n    // Center the coordinates\n    vec2 uv = fragCoord - (iResolution.xy / 2.0);\n    // Normalized pixel coordinates (from 0 to 1) with respect to the y axis\n    uv = uv / iResolution.y;\n    \n    float distCenter = distance(waveCenter, uv);\n    float distInRad = distCenter / waveLen * PI * 2.0;\n    \n    float height = cos(distInRad - (iTime * PI * 2.0 * freq));\n    \n    float isOnTopOfWave = float(height >= 1.0 - (waveTop * 2.0));\n    \n    vec3 col = white * isOnTopOfWave;\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}