{"ver":"0.1","info":{"id":"WdlcWX","date":"1585727757","viewed":117,"name":"_2020_","username":"Kapsy","description":"Demo or die!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["kapsy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Abstractionz\" by Kapsy. https://shadertoy.com/view/3slyWX\n// 2020-04-01 04:54:09\n\n\n#define time iTime*0.3\n#define PI 3.145926\nmat2 rot(float a){return mat2(sin(a),cos(a),-cos(a),sin(a));}\nfloat k,room,front;\n\nvec3 smin(vec3 a, vec3 b, float h){\n  vec3 k = clamp((a-b)/h*0.5+0.5,0.,1.);\n  return mix(a,b,k)-k*(1.-k)*h;\n  }\n \n  \nfloat smin(float a, float b, float h){\n  float k = clamp((a-b)/h*0.5+0.5,0.,1.);\n  return mix(a,b,k)-k*(1.-k)*h;\n  }\n\n  \nvec2 moda(vec3 p, float per){\n   float a = atan(p.x,p.y);\n   a = mod(a-per,per)-per*0.5;\n   float l = length(p)-0.;\n   return vec2(cos(a),sin(a))*l;\n   }\n\n\nfloat kali(vec3 p){\n  p = mod(p,vec3(0.,8.,10.))-vec3(0.,8.,10.)*0.5;\n  for(int i=0; i<8; ++i){\n    p.zx*=rot(sin(0.9));\n    p.zy*=rot(time*float(i)+3.145926);\n    p =  smin(p,-p,-0.2);\n    p.x -= 0.4;\n    }\n  return length(p)-0.8;\n}\n\nfloat box(vec3 p, vec3 b){\n  p=abs(p)-b;\n  return max(p.x,max(p.y,p.z));\n  }\n  //rama start\n  float up,down,left,right;\n \nfloat rama_up(vec3 p){\n   p = mod(p,vec3(0.,0.,0.))-vec3(0.,0.,0.)*0.5;\n   up = box(p+vec3(0,0.,0.),vec3(2.5+(abs(p.x)*p.y),0.4,1.));\n   return up;\n   }\n   \nfloat rama_down(vec3 p){\n   p.zy*=rot(2.3);   \n   down = box(p+vec3(0,0.,0.),vec3(2.5-(abs(p.x)*p.y),0.4,1.));\n   return down;\n   }\n   \nfloat rama_left(vec3 p,vec2 uv){\n   p.zx*=rot(time*7.5);\n   p = mod(p,vec3(0.,0.,0.))-vec3(0.,0.,0.)*0.5;\n   if(uv.x>0. && uv.x<0.5 || (uv.x>-9. && uv.x<-0.5) ){\n      left = box(p+vec3(0.,0.,0.),vec3(0.4,1.7+(p.x*abs(p.y)),1.));}\n   else  left = box(p+vec3(0.,0.,0.),vec3(0.4,3.5+(p.x*abs(p.y)),1.));\n   return left;\n   }\n   \nfloat rama_right(vec3 p){\n   p.xz*=rot(time*7.5);    \n   right = box(p+vec3(0.,0.,0.),vec3(0.4,3.5-(p.x*abs(p.y)),1.));\n   return right;\n   }\n //rama end \nfloat sdBox( vec3 p, vec3 b ){\n  vec3 q = vec3(abs(p.x),min((p.y-p.x)-10.,(p.y+p.x)-10.)+18.3,p.z) - vec3(b.x,b.y,b.z);\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n  }\n\nfloat shader(vec3 p, vec2 uv){\n   vec3 pp2 = p;\n   vec3 pp =p;\n   p.z-=15.5;\n  \nfloat k2 = kali(p); \n   k=kali(mod(p-vec3(0.,0.,0.),vec3(5.6,0.,20.))-vec3(5.6,0.,20.)*0.5);;\n   float rd = rama_up(p+vec3(0.,-3.8,5));\n   float ru = rama_down(p+vec3(0.,4.8,5));\n   float rl;\n   if((uv.x>0.&& uv.x<0.5) || (uv.x>-9. && uv.x<-0.5)) rl = rama_left(p+vec3(6.9+(p.x-p.y),0,8),uv);\n   else  rl = rama_left(p+vec3(-2.9,0.,5),uv);\n   float rr = rama_right(p+vec3(2.9,0.,5));\n   \nfloat rama;\n   float room = -sdBox(pp+vec3(0.,0.,0),vec3(10,10,38));\n   if(uv.x>0. && uv.x<0.5 || (uv.x>-9. && uv.x<-0.5) )rama = min(rl,min(ru,rd));\n   else rama = min(min(rl,rr),min(ru,rd));\n    \n   float alls = min(rama,min(room,k));\n   front = length(vec3(pp2)+vec3(0.,-2.,6))-mix(0.5,0.7,sin(time));\n   float alls2 = min(alls,front);\n   float change = (front>k)? room : room;\n   float smena = min(change,front);\n   return alls2;\n   }\n\nfloat SDF(vec3 p, vec2 uv){\n   return shader(p, uv);\n   }\n\nvoid mainImage( out vec4 out_color, in vec2 fragCoord ){\n  vec2 uv = fragCoord/iResolution.xy;\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  vec2 uv3 = uv;\n  vec2  uv2=fract(uv*2.)-0.5; \n  if(uv.y>0.) uv = uv2;\n  else uv=fract(-uv*2.)-0.5;\n  \n  vec3 ro = vec3(0.001,0.001, -10.); vec3 p = ro;\n  vec3 rd = normalize(vec3(-uv,1.));\n  float dd = 0.;\n  vec3 col = vec3(0.);\n  for(int i =0; i<100; ++i){\n    float d = SDF(p, uv3);\n    if(d<0.001) {break;}\n    if(dd>100.) {dd=100.; break;}\n    p+=d*rd;\n    dd+=d;\n     }\n  vec2 eps = vec2(0.001, 0.);\n  vec3 n = normalize(SDF(p,uv3)-vec3(SDF(p-eps.xyy,uv3),SDF(p-eps.yxy,uv3),SDF(p-eps.yyx,uv3)));\n  vec3 l = normalize(-vec3(3.,5.,3.));\n  float fog = 1.-clamp(dd/100.,0.6,1.);\n  col+=max(0.,dot(n,l))*vec3(1.,0.6,0.)*fog;\n  vec3 h = normalize(vec3(l-rd));\n  if(k<1.1) col+=vec3(-1.,0.,1.)*vec3(0.5,-0.,5.)+pow(max(0.,dot(n,h)),30.)*pow(max(0.,dot(n,h)),5.)*fog;\n  if(room<=15.6) col+=vec3(1.5,10.,-1.)*vec3(10.,0.3,-1.0)*pow(max(0.,dot(n,h)),4.)*pow(max(0.,dot(n,h)),13.)*fog;\n  if(front<=15.6) col+=vec3(0.,10.,-0.)*vec3(0.,30.3,.0)*pow(max(0.,dot(n,h)),20.)+pow(max(0.,dot(n,h)),3.)*fog;\n  if(right<=0.1 || left<=0.1 || up<=0.1 || down <=0.1) col=vec3(.6,0.,0.2)*vec3(0.,0.2,-10.)+pow(max(0.,dot(n,h)),10.)+pow(max(0.,dot(n,h)),3.);\n  vec3 col2 = exp(-col*5.);\n  col*=smoothstep(0.1,0.9,length(abs(uv.x*5.)-2.4));\n  col2*=smoothstep(0.1,0.9,length(abs(uv.x*5.)-2.4));\n  if(floor(mod(time,2.))!=0.){ \n     out_color = vec4(sqrt(col),1.);}\n  else out_color = vec4(sqrt(col2),1.);\n  }","name":"Image","description":"","type":"image"}]}