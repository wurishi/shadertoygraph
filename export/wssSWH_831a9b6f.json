{"ver":"0.1","info":{"id":"wssSWH","date":"1551212454","viewed":246,"name":"Hue colour wheel","username":"Chosen","description":"Mouse x position: Spin rate/position\n1 Key: Gamma correction on/off\n2 Key: Gamma correction method\n3 Key: Spin manually\n4 Key: Hue→RGB method\n5 key: Hide state text\n\nTake it for a spin! huehuehue","likes":2,"published":1,"flags":16,"usePreview":0,"tags":["colours"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nMouse x position: Spin/position\n1 key: Gamma correction on/off\n2 key: Gamma correction method\n3 key: Spin manually\n4 key: Hue→RGB method\n5 key: Hide state text\n*/\n#define KEY(k) (48 + k)\n\nbool keyToggle(int keycode)\n{\n    return texture(iChannel0,vec2((.5+float(keycode))/256.,0.75)).x > 0.;\n}\n\nvec3 hueToRGB(float hue)\n{\n    // https://www.shadertoy.com/view/ll2cDc\n    // Neither seems very close, could it be tweaked to be better?\n\tvec3 altRGB = //vec3(.5 * cos(6.3 * hue + vec4(0,23,21,0)));\n\t\tvec3(.6 + .6 * cos(6.3 * hue + vec4(0,23,21,0)));\n\n    return mix(clamp(abs(fract(hue + vec3(1., 2./3., 1./3.)) * 6. - 3.) - 1., 0., 1.),\n               altRGB, float(keyToggle(KEY(4))));\n}\n\n#define TEXT_GAMMA 0, 6\n#define TEXT_HUE 6, 10\n#define TEXT_APPROXIMATE 10, 21\n#define TEXT_ACCURATE 21, 29\n#define TEXT_OFF 29, 32\n#define KERN .46\n\nconst int[32] text = int[32](\n        71, 97, 109, 109, 97, 58, // Gamma:\n        72, 117, 101, 58, // Hue:\n        65, 112, 112, 114, 111, 120, 105, 109, 97, 116, // Approximate\n        101, 65, 99, 99, 117, 114, 97, 116, 101, // Accurate\n        79, 102, 102 // Off\n    );\nfloat writeText(out vec2 uv, int start, int end, float cond)\n{\n\n    float o = 0.;\n    vec2 p = uv;\n    \n    for(int i = start; i != end; ++i, p.x -= KERN){\n        o += float(fract(p) == p) * cond *\n            // https://www.shadertoy.com/view/ltcXzs\n            textureGrad(iChannel1, p/16. + fract(vec2(text[i], 15-text[i]/16) / 16.),\n                        dFdx(p/16.), dFdy(p/16.)).x;\n    }\n    uv = mix(uv, p, cond);\n    return o;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 polarCoord = fragCoord - .5*iResolution.xy;\n    float theta = atan(polarCoord.y, polarCoord.x) / 6.283185;\n    \n\t// Spin it\n    theta += (float(!keyToggle(KEY(3))) * 10. * iTime + 10.)\n        * (.5 - iMouse.x / iResolution.x);\n    \n    vec3 col = hueToRGB(fract(theta));\n    col = mix(col, mix(sqrt(col),\n                       //pow(col, vec3(1./2.2)),\n                       // https://chilliant.blogspot.com/2012/08/srgb-approximations-for-hlsl.html\n                       1.055 * pow(col, vec3(0.416667)) - 0.055,\n                       float(keyToggle(KEY(2)))),\n              float(!keyToggle(KEY(1))));\n\n    float text = 0.;\n    vec2 uv = 20. * fragCoord / iResolution.y;\n\n    text += writeText(uv, TEXT_GAMMA, 1.)\n        + writeText(uv, TEXT_OFF, float(keyToggle(KEY(1))))\n        + writeText(uv, TEXT_APPROXIMATE, float(!keyToggle(KEY(1)) && !keyToggle(KEY(2))))\n        + writeText(uv, TEXT_ACCURATE, float(!keyToggle(KEY(1)) && keyToggle(KEY(2))));\n    uv.x -= 1.;\n    text += writeText(uv, TEXT_HUE, 1.)\n        + writeText(uv, TEXT_APPROXIMATE, float(keyToggle(KEY(4))))\n        + writeText(uv, TEXT_ACCURATE, float(!keyToggle(KEY(4))));\n    col = mix(col, vec3(0), smoothstep(0., 1., text * clamp(.2*iTime, 0., float(!keyToggle(KEY(5))))));\n//    col = mix(col, vec3(0), smoothstep(0., text, clamp(1. - iTime * .2, .25, text)));\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}