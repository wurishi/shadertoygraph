{"ver":"0.1","info":{"id":"csjGW3","date":"1668228899","viewed":218,"name":"Fractal arcade","username":"jarble","description":"A fractal structure with many glowing neon lights.","likes":2,"published":3,"flags":8,"usePreview":0,"tags":["3d","fractal"],"hasliked":0,"parentid":"msj3R3","parentname":"Glowing fractal tunnel"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime*4.\n#define r iResolution\n#define iterations 250 //number of raymarching steps\n#define EPSILON .001\n#define MAX_DIST 40.0\n#define rot(spin) mat2(cos(spin),sin(spin),-sin(spin),cos(spin))\n\n\n//Based on https://www.shadertoy.com/view/3tXyRN\n\nvec3 stars(vec3 uv)\n{\n    //uv = uv.yzx;\n    vec3 col = vec3(0.);\n    \n    for(int k = 0; k < 6; k++){ \n        uv =\n            //min(uv*vec3(uv.y+uv.x+.5,uv.z+uv.y+.5,uv.x+uv.z)*3.,abs(fract(vec3(uv.y+uv.x+.5,uv.z+uv.y+.5,uv.x+uv.z))-.5))\n            min(uv*vec3(uv.y+uv.x,uv.z+uv.y,uv.x+uv.z)*2.,abs(fract(vec3(uv.y+uv.x+1.,uv.z+uv.y,uv.x+uv.z)+uv)-.5))\n            //min(uv/2.*vec3(sqrt(uv.x*uv.y),sqrt(uv.z*uv.y),uv.x+uv.z)*4.,abs(fract(vec3(uv.y+uv.x,uv.z+uv.y,uv.x+uv.z)+uv)-.5))\n            //min(uv*vec3(uv.y+uv.x+.125,uv.z+uv.y+.75,uv.x+uv.z)*4.,abs(fract(vec3(uv.y+uv.x+1.,uv.z+uv.y,uv.x+uv.z)+uv)-.5))\n            //min(uv*vec3(uv.y*4.,uv.z,uv.x+uv.z)*4.,abs(fract(vec3(uv.y+uv.x+1.,uv.z+uv.y,uv.x+uv.z)+uv)-.5))\n        ;\n        col =\n            vec3(col.yz,uv.x-uv.y).yzx\n            //vec3(col.yz,uv.x).yzx\n            //vec3(col.yz,sqrt(uv.x*uv.y)).yzx\n        ;\n        if(uv.y>uv.x || uv.z>uv.y) uv = uv.yzx;\n    }\n    \n    return\n        col.yzx\n        //col - uv;\n    ;\n}\n\nvoid mainImage( out vec4 o, in vec2 U )\n{\n    o = vec4(0.0);\n    vec3 d=vec3(U/r.xy-.5,.5),p0=vec3(-2.,0.,t),p=p0;\n    if (length(iMouse.xy) > 40.0) {\n        d.yz *= rot(-3.14*0.5+iMouse.y/iResolution.y*3.14);\n        d.xz *= rot(-3.14+iMouse.x/iResolution.x*3.14*2.0);\n    }\n    float l1;\n    vec3 col = vec3(0.);\n    for(int i=0;i<iterations;i++)\n    {\n        col = stars(p/16.);\n        float sd1 = col.z-.1;\n        if(-sd1 < EPSILON*(length(l1)+1.0) || l1 > MAX_DIST){ break; }\n        p+=d*(-sd1);\n        l1 = distance(p,p0);\n    }\n    o+=(vec4(col/2.,0)+l1/100.0)*3.0;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define fmod(x,y) mod(floor(x),y)\nvec2 mainSound(int samp, float t){\n  float s1 =\n      8.,\n  m1 =\n      //fmod(t*s1,s1),\n      fmod(floor(t*s1)+floor(t*s1/2.)+floor(t*s1/4.),s1),\n      //fmod(t*s1-floor(t),s1),\n  z1 =\n      (1.+fmod(t,2.))\n  ;\n  t /=\n      1.+fmod(floor(t*s1)*floor(t/s1+z1),2.)\n  ;\n  float m3 =\n      fmod((t)/(m1+.5),s1)\n  ;\n  t *=\n      1.+fmod(floor(t*s1)*floor(t/s1+z1),2.)\n  ;\n\n  float a=sqrt((1.-sqrt(fract(t*s1))))*.2,\n\n  nb = pow(2.,(m3+z1)/5.+7.);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n\n}","name":"Sound","description":"","type":"sound"}]}