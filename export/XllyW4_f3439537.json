{"ver":"0.1","info":{"id":"XllyW4","date":"1528079116","viewed":139,"name":"raymarching tutorial 2","username":"flimshaw","description":"based on https://www.youtube.com/watch?v=yxNnRSefK94","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define STEPS 48\n\nfloat map(vec3 p, float r, float dist) {\n    vec3 pos = p + vec3(0., 0.,0.);\n    p = fract(pos) * 2.0 - 1.0;\n    return length(p) - r;\n}\n\nfloat trace(vec3 o, vec3 r) {\n    float t = 0.0;\n    int i = 1;\n    float rd = .6*(sin(iTime+(r.z*3.14))+1.);\n    for(i = 1; i < STEPS; ++i) {\n       vec3 p = o + r * t;\n       float dist = length(p);\n       float d = map(p, rd, dist);\n       t += d * .5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    \n    uv = uv * 2.0 - 1.0;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.0));\n    \n    vec3 o = vec3(0., 0., iTime*.5);\n    \n    float d = trace(o, r);\n    \n    vec3 c = 1.0 / vec3(1.0 + d * d * .3);\n    \n    fragColor = vec4(1.0 - c, 1.0);\n}","name":"Image","description":"","type":"image"}]}