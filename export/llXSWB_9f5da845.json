{"ver":"0.1","info":{"id":"llXSWB","date":"1439336428","viewed":144,"name":"Lorenzfield 2","username":"metabog","description":"Solving a lorenz oscillator at each pixel. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["chaos","chaoticoscillator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    \t float pr = uv.y * cos(uv.x) * cos(iTime)*1000.0;\n\t float r = 0.1*iTime * cos(uv.x);\n\t float b = 1.4/iTime * uv.y;\n\t float\txn = 1.1;\n\t float\tyn = 12.0;\n\t float\tzn = iTime;\n    \n    xn =(uv.x - 0.5) *40.0;\n    yn =(uv.y -1.0)*40.0;\n    \n    //iterate at this pixel for a while and solve lorenz oscillator equations\n    for(int i = 0; i <13; i++)\n    {\n        float xnn = xn + (pr * (yn - xn)) * 0.00002*iTime;\n\t\tfloat ynn = xn*yn + (-xn * zn + r * xn - yn) * 0.00002*iTime;\n\t\tfloat znn = zn + (xn * yn - b * zn) * 0.00002*iTime;\n\n\t\txn = xnn;\n\t\tyn = ynn;\n\t\tzn = znn;\n    }\n    \n\tfragColor = vec4(abs(xn),abs(yn),abs(zn),1.0);\n}","name":"","description":"","type":"image"}]}