{"ver":"0.1","info":{"id":"ftlXzM","date":"1625351654","viewed":67,"name":"Polar Colo(u)rs","username":"EzaExponential","description":"Some pretty colours - First shader experiment","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simple","colors","spinning","colours"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float CartToPolar(vec2 uv){ \n    float polarAngle = atan(uv.y/uv.x); \n    if(uv.x < 0.0 && uv.y >= 0.0) { \n        polarAngle += radians(180.0);\n    } \n    else if(uv.x < 0.0 && uv.y < 0.0) { \n        polarAngle += radians(180.0);\n    }\n     else if(uv.x >= 0.0 && uv.y < 0.0) { \n        polarAngle += 2.0*radians(180.0);\n    } \n    return polarAngle;\n} \n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord*2.0/iResolution.xy - 1.0;\n\n    uv = rotate(uv, iTime);\n    \n    float polarAngle = CartToPolar(uv);    \n    \n    \n    float brightness = smoothstep(polarAngle, polarAngle+1.0, mod(iTime, 2.0*radians(180.0)+1.0)); \n    \n    if(mod(iTime, 4.0*radians(180.0)+2.0)>2.0*radians(180.0)+1.0){ \n        brightness = 1.0 - brightness;  \n      \n    } \n\n    brightness+= 1.0-smoothstep(0.0, 1.0, polarAngle); \n    brightness+= smoothstep(2.0*radians(180.0)-1.0, 2.0*radians(180.0), polarAngle);\n\n\n    fragColor = vec4(brightness * exp2(sin(iTime + uv.x)) ,brightness * exp(cos(iTime+2.1 + uv.y)), brightness * pow(tan(iTime +3.14+ uv.x + uv.y),2.0), 1.0);\n\n} \n\n","name":"Image","description":"","type":"image"}]}