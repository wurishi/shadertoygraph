{"ver":"0.1","info":{"id":"tt3XR4","date":"1580477176","viewed":84,"name":"Just Perlin Noise","username":"42yeah","description":"Really, there's nothing else to see here","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash(vec2 i) {\n    return vec2(\n        fract(sin(dot(i, vec2(13.156, 98.123))) * 1000000.0),\n        fract(sin(dot(i, vec2(3.1251, 123.124))) * 1000000.0)\n    ) * 2.0 - 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy + 0.0;\n\n    uv *= 3.0;\n    vec2 u = floor(uv);\n    vec2 f = fract(uv);\n    vec2 s = smoothstep(0.0, 1.0, f);\n    \n    vec2 a = hash(u);\n    vec2 b = hash(u + vec2(1.0, 0.0));\n    vec2 c = hash(u + vec2(0.0, 1.0));\n    vec2 d = hash(u + vec2(1.0, 1.0));\n    \n    // Perlin noise\n    float r = mix(mix(dot(a, f), dot(b, f - vec2(1.0, 0.0)), s.x),\n                  mix(dot(c, f - vec2(0.0, 1.0)), dot(d, f - vec2(1.0, 1.0)), s.x), s.y);\n    r = r * 0.5 + 0.5;\n    // Output to screen\n    fragColor = vec4(r, r, r, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}