{"ver":"0.1","info":{"id":"lsyBWD","date":"1529116081","viewed":153,"name":"Coeur","username":"saidwho12","description":"inspired from iq's :)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define inf 1.e32\n#define pi 3.14159\n#define tau 6.28318\n#define time (.25*iTime)\n#define sqr(x) x*x\n\nmat3 rotY( in float theta ) {\n\tfloat c = cos(theta), s = sin(theta);\n    return mat3(c, 0, -s, 0, 1, 0, s, 0, c);\n}\n\n\nmat2 rot(in float theta) {\n\tfloat c = cos(theta), s = sin(theta);\n    return mat2(c, s, -s, c);\n}\n\nfloat f( in vec3 p ) {\n    \n#if 1\n    p = rotY(tau*time)*p;\n    p.z *= 1. + .5*(1.-p.y*.5+.5);\n    p.x *= 0.95;\n    p.y -= -.125*pow(length(abs(p.x*1.76)-1.7), 2.0);\n    float d = length(p)-1. - 0.25 * sin(radians(360.0) * iTime) \n        * sin(radians(360.0) * 0.32 * (p.y * exp(-1.0 * fract(iTime))));\n    \n\treturn d*.5;\n#else\n    float d = length(rot(p.y*radians(360.0))*p.xz-vec2(0.5,0))-0.25;\n    return d*.6; // lipschitz artifacts\n#endif\n}\n\nvec3 n( in vec3 p ) {\n    const float e = .0001;\n\treturn normalize(vec3(\n    \tf(vec3(p.x+e, p.yz)) - f(vec3(p.x-e, p.yz)),\n        f(vec3(p.x, p.y+e, p.z)) - f(vec3(p.x, p.y-e, p.z)),\n        f(vec3(p.xy, p.z+e)) - f(vec3(p.xy, p.z-e))\n    ));\n}\n\nconst int iter_max = 256;\nconst float t_min = .01, t_max = 1000., eps = .0001;\nfloat trace( in vec3 o, in vec3 d ) {\n    float t = t_min;\n    int idx = 0;\n    for(int i = 0; i<iter_max; i++) {\n    \tfloat r = f(o+d*t);\n        if(r<eps || !(t<t_max)) {\n            idx = i;\n            break;\n        }\n        t+=r;\n    }\n    if(t>t_max || idx==iter_max)\n    \treturn inf;\n    return t;\n}\n\nvec3 shade( in vec3 o, in vec3 p ) {\n    vec3 lp = vec3(0,.9,2);\n\tvec3 N = n(p);\n    vec3 V = normalize(p-o);\n    vec3 L = normalize(lp-p);\n    vec3 R = reflect(L, N);\n    //return N*.5+.5;\n    return vec3(1,.25,.25)* (0.2 + .6*max(dot(N,L),0.0) + .7*pow(max(dot(R,V),0.0),20.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (2.*fragCoord - iResolution.xy)/iResolution.y;\n    vec3 o = vec3(0,0,3),\n        f = vec3(0,0,-1),\n        u = vec3(0,1,0),\n        r = cross(f,u),\n        d = vec3(f+p.x*r+p.y*u);\n    float t = trace(o, d);\n    vec3 col = vec3(1);\n    if(t != inf)\n     col = shade(o, o+d*t);\n    \n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}