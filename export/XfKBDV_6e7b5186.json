{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define PI         3.14159265359\n#define PI2        6.28318530718\n\nmat2 rot(float a) {return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat hash21(vec2 p) {\n    p = fract(p*vec2(234.34, 435.345));\n    p += dot(p, p+34.23);\n    return fract(p.x*p.y);\n}\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\nfloat sdCircle( vec2 p, float r ) {\n    return length(p) - r;\n}\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.283185*(c*t+d) );\n}\n\nvec2 hash2d(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy) - 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/max(iResolution.x,iResolution.y);\n    \n    //uv *= 10.0;\n    uv *= rot(iTime*1.1 + sin(iTime)); uv = vec2(log(length(uv)) + iTime * 0.3, atan(uv.y, uv.x)*6./PI2);\n\n \n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    float n = hash21(id) * 1.4;\n   \n \n    vec3 col = vec3(0.0);\n    \n    float mask = 0.0;\n    \n    float size = 0.1;\n    \n    if (n < 0.1) {\n        mask += smoothstep(0.01, -0.01, length(gv - vec2(0.0, 0.5)) - size);\n        mask += smoothstep(0.01, -0.01, length(gv - vec2(0.5, 0.0)) - size);\n        mask += smoothstep(0.01, -0.01, length(gv + vec2(0.0, 0.5)) - size);\n        mask += smoothstep(0.01, -0.01, length(gv + vec2(0.5, 0.0)) - size);\n    } else if (n < 0.2) {\n        mask += smoothstep(0.01, -0.01, length(gv - vec2(0.0, 0.5)) - size);\n        mask += smoothstep(0.01, -0.01, length(gv - vec2(0.5, 0.0)) - size);\n        \n        mask += smoothstep(0.01, -0.01, abs(length(gv + vec2(0.5)) - 0.5) - 0.1);\n        \n    } else if (n < 0.3) {\n        mask += smoothstep(0.01, -0.01, length(gv + vec2(0.0, 0.5)) - size);\n        mask += smoothstep(0.01, -0.01, length(gv + vec2(0.5, 0.0)) - size);\n        \n        mask += smoothstep(0.01, -0.01, abs(length(gv - vec2(0.5)) - 0.5) - 0.1);\n    } else if (n < 0.4) {\n        mask += smoothstep(0.01, -0.01, length(gv - vec2(0.5, 0.0)) - size);\n        mask += smoothstep(0.01, -0.01, length(gv + vec2(0.0, 0.5)) - size);\n        \n        mask += smoothstep(0.01, -0.01, abs(length(gv * vec2(-1.0, 1.0) - vec2(0.5)) - 0.5) - 0.1);\n    } else if (n < 0.5) {\n        mask += smoothstep(0.01, -0.01, length(gv + vec2(0.5, 0.0)) - size);\n        mask += smoothstep(0.01, -0.01, length(gv - vec2(0.0, 0.5)) - size);\n        \n        mask += smoothstep(0.01, -0.01, abs(length(gv * vec2(1.0, -1.0) - vec2(0.5)) - 0.5) - 0.1);\n    } else if (n < 0.6) {\n        mask += smoothstep(0.01, -0.01, length(gv - vec2(0.0, 0.5)) - size);\n        mask += smoothstep(0.01, -0.01, length(gv + vec2(0.0, 0.5)) - size);\n        \n        mask += smoothstep(0.01, -0.01, sdBox(gv, vec2(1.0, 0.1)));\n    } else if (n < 0.6) {\n        mask += smoothstep(0.01, -0.01, length(gv - vec2(0.5, 0.0)) - size);\n        mask += smoothstep(0.01, -0.01, length(gv + vec2(0.5, 0.0)) - size);\n        \n        mask += smoothstep(0.01, -0.01, sdBox(gv, vec2(0.1, 1.0)));\n    } else if (n < 0.7) {\n        mask += smoothstep(0.01, -0.01, abs(length(gv + vec2(0.5)) - 0.5) - 0.1);\n        mask += smoothstep(0.01, -0.01, abs(length(-gv + vec2(0.5)) - 0.5) - 0.1);\n    } else if (n < 0.8) {\n        mask += smoothstep(0.01, -0.01, abs(length(gv * vec2(-1.0, 1.0) - vec2(0.5)) - 0.5) - 0.1);\n        mask += smoothstep(0.01, -0.01, abs(length(-gv * vec2(-1.0, 1.0) - vec2(0.5)) - 0.5) - 0.1);\n    } else if (n < 0.9) {\n        mask += smoothstep(0.01, -0.01, length(gv - vec2(0.5, 0.0)) - size);\n        \n        mask += smoothstep(0.01, -0.01, sdBox(gv + 0.25, vec2(0.35, 1.0)));\n        mask -= smoothstep(0.01, -0.01, length(gv + vec2(0.55, 0.55)) - 0.45);\n        mask -= smoothstep(0.01, -0.01, length(gv + vec2(0.55, -0.55)) - 0.45);\n    } else if (n < 1.0) {\n        mask += smoothstep(0.01, -0.01, length(gv + vec2(0.5, 0.0)) - size);\n        \n        mask += smoothstep(0.01, -0.01, sdBox(gv - 0.25, vec2(0.35, 1.0)));\n        mask -= smoothstep(0.01, -0.01, length(gv + vec2(-0.55, 0.55)) - 0.45);\n        mask -= smoothstep(0.01, -0.01, length(gv + vec2(-0.55, -0.55)) - 0.45);\n    } else if (n < 1.1) {\n        mask += smoothstep(0.01, -0.01, length(gv + vec2(0.0, 0.5)) - size);\n        \n        mask += smoothstep(0.01, -0.01, sdBox(gv.yx - 0.25, vec2(0.35, 1.0)));\n        mask -= smoothstep(0.01, -0.01, length(gv + vec2(0.55, -0.55)) - 0.45);\n        mask -= smoothstep(0.01, -0.01, length(gv + vec2(-0.55, -0.55)) - 0.45);\n    } else if (n < 1.2) {\n        mask += smoothstep(0.01, -0.01, length(gv - vec2(0.0, 0.5)) - size);\n        \n        mask += smoothstep(0.01, -0.01, sdBox(gv.yx + 0.25, vec2(0.35, 1.0)));\n        mask -= smoothstep(0.01, -0.01, length(gv - vec2(0.55, -0.55)) - 0.45);\n        mask -= smoothstep(0.01, -0.01, length(gv - vec2(-0.55, -0.55)) - 0.45);\n    } else if (n < 1.3) {\n        mask += smoothstep(0.01, -0.01, sdBox(gv, vec2(0.1, 1.0)));\n        mask += smoothstep(0.01, -0.01, sdBox(gv + vec2(0.35, 0.0), vec2(0.25, 0.1)));\n        mask += smoothstep(0.01, -0.01, sdBox(gv - vec2(0.35, 0.0), vec2(0.25, 0.1)));\n        mask += smoothstep(0.01, -0.01, length(gv) - size * 0.5);\n    } else if (n < 1.4) {\n        mask += 1.0;\n        \n        mask -= smoothstep(0.01, -0.01, length(gv + vec2(0.55, 0.55)) - 0.45);\n        mask -= smoothstep(0.01, -0.01, length(gv - vec2(0.55, 0.55)) - 0.45);\n        mask -= smoothstep(0.01, -0.01, length(gv + vec2(-0.55, 0.55)) - 0.45);\n        mask -= smoothstep(0.01, -0.01, length(gv + vec2(0.55, -0.55)) - 0.45);\n        \n        mask += smoothstep(0.01, -0.01, length(gv) - size);\n    } else {\n        mask += 1.0;\n    }\n    \n    //stars\n    float scale = 20.;\n    col += (sin(iTime + length(id)) * 0.5 + 0.5) * smoothstep(scale/iResolution.y, -scale/iResolution.y,sdCircle(gv + hash2d(id) * 0.8, 0.05 + hash21(id) * 0.03)) * smoothstep(-scale/iResolution.y, scale/iResolution.y, sdCircle(uv, 0.1)); \n    \n    \n    col += mask;\n    \n    float dist = length((fragCoord-0.5*iResolution.xy)/iResolution.y);\n   \n    col *= palette(dist + iTime * 0.5, vec3(0.5, 0.5, 0.5),vec3(0.5, 0.5, 0.5),vec3(1.0, 0.7, 0.4),vec3(0.00, 0.15, 0.20));\n    \n    if (length(col) <= 0.01) {\n        col = vec3(hash21(floor(uv * 20.0)) * 0.1) * vec3(0.9, 0.9, 1.2);\n    }\n    \n    if (gv.x > 0.45 || gv.y > 0.45) col += 0.5;\n    //if (mod(gv.x, 0.5) > 0.45 || mod(gv.y, 0.5) > 0.45) col += 0.5;\n    //if (gv.x > 0.48 || gv.y > 0.48) col = vec3(1.0, 0.0, 0.0);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XfKBDV","date":"1734475085","viewed":50,"name":"arcade floor to infinity 2","username":"noxfy","description":"credit to https://www.shadertoy.com/user/byt3_m3chanic for inspiration and uv warping","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["stars","tiling"],"hasliked":0,"parentid":"lfKBRd","parentname":"arcade floor to infinity"}}