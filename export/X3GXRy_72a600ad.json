{"ver":"0.1","info":{"id":"X3GXRy","date":"1720079818","viewed":37,"name":"基本游戲移動","username":"vicyu","description":"基本游戲移動。使用方向鍵","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["game","basic","move"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 loadValue(in ivec2 re )\n{\n    return texelFetch(iChannel0, re, 0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.y *= iResolution.y / iResolution.x;\n    \n    vec4 pos = loadValue(txPos);\n    float man = length(uv - pos.xy);\n    man = smoothstep(.1, .1, man);\n    fragColor = vec4(man);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\nvec4 loadValue(in ivec2 re )\n{\n    return texelFetch(iChannel0, re, 0);\n}\n\nvoid storeValue( in ivec2 re, in vec4 va, inout vec4 fragColor, in ivec2 fragCoord )\n{\n    fragColor = (re.x == fragCoord.x && re.y == fragCoord.y ) ? va : fragColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 pos = loadValue(txPos);\n    \n    vec2 move = vec2(0.0);\n    \n    if( texelFetch( iChannel1, ivec2(KEY_RIGHT,0), 0 ).x>0.5 ) move.x = 1.0;\n    if( texelFetch( iChannel1, ivec2(KEY_LEFT, 0), 0 ).x>0.5 ) move.x = -1.0;\n    if( texelFetch( iChannel1, ivec2(KEY_UP,   0), 0 ).x>0.5 ) move.y = 1.0;\n    if( texelFetch( iChannel1, ivec2(KEY_DOWN, 0), 0 ).x>0.5 ) move.y = -1.0;\n    \n    pos.xy += move * .01;\n    storeValue(txPos, pos, fragColor, ivec2( fragCoord ));\n    fragColor = pos;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const ivec2 txPos = ivec2(0,0);","name":"Common","description":"","type":"common"}]}