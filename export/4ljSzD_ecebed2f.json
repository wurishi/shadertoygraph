{"ver":"0.1","info":{"id":"4ljSzD","date":"1442096501","viewed":271,"name":"Mandelbrot scratch","username":"spluko","description":"My first foray into fractals","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec2 multComplex(vec2 a, vec2 b) {\n    return mat2(a, vec2(-a.y, a.x)) * b;\n}\n\nvoid mainImage(out vec4 color, in vec2 p) {\n    const float pi = 3.1415926;\n    const float limit = 150.0;\n    const float threshold = 16.0;\n\n    float zoom = pow(1.5, iTime);\n    vec2 centre = vec2(-0.21501, 0.695 / zoom - 0.695);\n    float height = 2.5 / zoom;\n    \n    vec2 uv = (p.xy - iResolution.xy * 0.5) / iResolution.y;\n    vec2 c = uv * height + centre;\n    \n    vec2 z = vec2(0.0);\n    float v = 1.0;\n    for(float i = 0.0; i < 1.0; i += 1.0 / limit) {\n        z = multComplex(z, z) + c;\n        if (dot(z, z) < threshold) v = i;\n    }\n    \n    //v = uv.y + 0.5;\n    color = vec4(sin(pi * v * vec3(-1.4, 1.7, 1.3) + vec3(-1.4, -1.2, 0.4)), 1.0);\n}\n\n","name":"","description":"","type":"image"}]}