{"ver":"0.1","info":{"id":"XsyczR","date":"1520728110","viewed":138,"name":"Cartoon Building","username":"WQS33","description":"Cartoon wall, lighting and night WIP","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","cartoon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid Rect(in vec2 uv, in vec2 center, in vec2 wh, out float intensity){\n    vec2 disRec = abs(uv - center) - wh * 0.5;\n    float dis = max(disRec.x, disRec.y);\n    intensity = float(dis < 0.0);\n}\n\n\n//draw a window\n/*\n +--------+\n |        |\n +---+----+\n |   |    |\n |   |    |\n +---+----+\n\n*/\nvoid WindowSingle(in vec2 uv, vec2 center, vec2 size, float split, float border, out float intensity){\n    //split\n   \tvec2 centertop = center + vec2(0, size.y * (1.0 - split) * 0.5);\n    vec2 bottomleft = center - vec2(size.x / 4.0, size.y * split * 0.5);\n    vec2 bottomright = center - vec2(-1.0 * size.x / 4.0, size.y * split * 0.5);\n    \n  \tfloat intensity1, intensity2, intensity3;\n    Rect(uv, centertop, size * vec2(1, split) - vec2(border), intensity1);\n    Rect(uv, bottomleft, size * vec2(0.5, (1.0 - split)) -vec2(border), intensity2);\n    Rect(uv, bottomright, size * vec2(0.5, (1.0 - split))-vec2(border), intensity3);\n    intensity = intensity1 + intensity2 + intensity3;\n    \n}\n\nvoid Split(inout vec2 uv, vec2 div){\n    uv = fract(uv * div);\n}\n\n//draw bricks \nvoid Bricks(in vec2 uv, in vec2 div, in float edgeWidth, out float intensity){\n    vec2 orinal_uv = uv;\n    uv = mod(uv * div, vec2(1.0));\n    float shift = mod(floor(orinal_uv.y * div.y), 2.0);\n    //uv *= shift;\n    uv = mod(uv + vec2(0.5 * shift, 0.0), vec2(1.0)) + vec2(0.5);\n    vec2 value = abs(uv - vec2(0.5)) - vec2(edgeWidth * 0.5);\n    intensity = float(min(value.x, value.y) > 0.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 center = vec2(0.5);\n    vec2 size = vec2(0.26, 0.42);\n    float intensity = 0.0;\n    float intensity1 = 0.0;\n    \n    float intensitywall1 = 0.0;\n    \n    vec2 ori_uv = uv;\n    \n    Split(uv, vec2(6, 4));\n    \n    //window\n    WindowSingle(uv, center, size, 0.3, 0.027, intensity);\n    Rect(uv, center, size, intensity1);\n    \n    //brick wall\n    Bricks(ori_uv, vec2(20,33), 0.18, intensitywall1);\n    float intensitywall2 = 1.0 - intensitywall1;\n    \n    //color\n    vec3 red = vec3(0.8, 0.2, 0.2);\n    vec3 yellow = vec3(0.4, 0.8, 0.8);\n    \n    vec3 col = vec3( intensity + 0.2 * intensity1 + ( 1.0 - intensity1) * (red * intensitywall1 + yellow * intensitywall2) );\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}