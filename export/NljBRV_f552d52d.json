{"ver":"0.1","info":{"id":"NljBRV","date":"1652446155","viewed":158,"name":"Voronoi sampling","username":"googl4","description":"Exploring ideas to create a painting effect","likes":1,"published":1,"flags":32,"usePreview":1,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 base_gridSize = vec2( 32.0, 18.0 );\n\nconst ivec2 quadOffsets[4] = ivec2[](\n    ivec2( 0, 0 ),\n    ivec2( 1, 0 ),\n    ivec2( 0, 1 ),\n    ivec2( 1, 1 )\n);\n\nfloat line_dist( vec2 origin, vec2 dir, vec2 p ) {\n    return length( ( p - origin ) - dot( p - origin, dir ) * dir );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //float local_detail = textureLod( iChannel2, uv, 0.0 ).r;\n    //vec2 gridSize = base_gridSize * ( 1.0 + local_detail * 0.1 );\n    vec2 gridSize = base_gridSize;\n    \n    vec2 guv = floor( uv * gridSize );\n    //vec4 noffsx = textureGather( iChannel0, ivec2( guv ), 0 );\n    //vec4 noffsy = textureGather( iChannel0, ivec2( guv ), 1 );\n    \n    vec2 vuv;\n    vec2 bdir;\n    float vdist = 9999.0;\n    for( int i = 0; i < 4; i++ ) {\n        vec4 noise = texelFetch( iChannel0, ivec2( guv ) + quadOffsets[i], 0 );\n        vec2 noff = noise.rg - 0.5;\n        \n        vec2 brush_dir = normalize( noise.ba * 2.0 - 1.0 );\n        \n        //vec2 ouv = ( guv + noff ) / gridSize;\n        vec2 ouv = ( guv + vec2( quadOffsets[i] ) + noff ) / gridSize;\n        float nd = length( uv - ouv );\n        if( nd < vdist ) {\n            vdist = nd;\n            vuv = ouv;\n            bdir = brush_dir;\n        }\n    }\n    \n    float stripe = cos( line_dist( vuv, bdir, uv ) * 512.0 ) * 0.5 + 0.5;\n    \n    vec3 col = textureLod( iChannel1, vuv, 0.0 ).rgb; // * ( stripe * 0.5 + 0.5 );\n    //vec3 col = vec3( stripe );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    //fragColor = vec4( local_detail, 0, 0, 0 );\n    //fragColor.r = local_detail;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 centre_col = texture( iChannel0, uv ).rgb;\n    \n    float total_diff = 0.0;\n\n    const int dir_samples = 17;\n    for( int i = 0; i < dir_samples; i++ ) {\n        for( int j = 0; j < dir_samples; j++ ) {\n            vec2 pixel_offset = vec2(\n                i - ( dir_samples - 1 ) / 2,\n                j - ( dir_samples - 1 ) / 2\n            );\n            \n            vec2 offset = ( 1.0 / iResolution.xy ) * pixel_offset * 1.0;    \n            vec3 sample_col = texture( iChannel0, uv + offset ).rgb;\n            float diff = length( centre_col - sample_col );\n\n            total_diff += diff;\n        }\n     }\n     \n     total_diff /= float( dir_samples * dir_samples );\n     \n     fragColor = vec4( total_diff, 0, 0, 0 );\n}","name":"Buffer A","description":"","type":"buffer"}]}