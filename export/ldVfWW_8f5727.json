{"ver":"0.1","info":{"id":"ldVfWW","date":"1528931545","viewed":140,"name":"Cartoon sea","username":"rkibria","description":"A not-really-pathtracing shader.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["cartoon","water","animated","stylized"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord / iResolution.xy - 0.5 ) * 2.;\n    vec3 col = vec3( 0 );\n    \n    vec3 ray = normalize( vec3( uv, 1. ) );\n    \n    bool flag = false;\n    for( float j = 15.0; j >= 1.0; j -= 0.25 )\n    {\n        vec3 d = j * ray;\n        float t = 1.2 * iTime;\n        float h = ( sin( t + d.x * 0.9 + 0.3 ) * 0.6\n                   + cos( t + d.z * 0.9 ) * 0.7\n                  ) - 1.7;\n\n        if( d.y <= h )\n        {\n            col = vec3( 0.2, 0.8 / length( d ), 1. / j + 0.1 );\n            flag = true;\n            j += 0.125; // smoother waves\n        }\n    }\n    \n    if( !flag )\n    {\n        col = ( vec3( 0.5 - uv.y ) + vec3( 0.2, 0.2, 0.8 * uv.y ) ) * 0.8;\n    }\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}