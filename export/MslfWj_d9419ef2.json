{"ver":"0.1","info":{"id":"MslfWj","date":"1498520147","viewed":1389,"name":"Simple Cartoon via YUV2RGB","username":"starea","description":"A very simple test to map an RGB image to YUV space, threshold the luminance into 3 categories, then map back to RGB.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["2d","cartoon","rgb","yuv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// demo: https://www.shadertoy.com/view/MslfWj\n// Ruofei Du\nconst mat3 rgb2yuv_mat = mat3(\n  0.2126,    0.7152,   0.0722,\n -0.09991,  -0.33609,  0.436,\n  0.615,    -0.55861, -0.05639\n);\n\nconst mat3 yuv2rgb_mat = mat3(\n  1.0,  0.0,      1.28033,\n  1.0, -0.21482, -0.38059,\n  1.0,  2.12798,  0.0\n);\n\nvec3 rgb2yuv(vec3 rgb) {\n  return rgb * rgb2yuv_mat;\n}\n\nvec3 yuv2rgb(vec3 rgb) {\n  return rgb * yuv2rgb_mat;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 color = texture(iChannel0, uv); \n    vec3 yuv = rgb2yuv(color.rgb);\n    vec3 rgb = yuv2rgb(vec3(floor(yuv.x * 2.0) / 2.0, yuv.yz));\n    color = vec4(rgb, 1.0);\n\tfragColor = color;\n}","name":"Image","description":"","type":"image"}]}