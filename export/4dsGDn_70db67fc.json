{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// by Nikos Papadopoulos, 4rknova / 2014\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat hash(in float n) { return fract(sin(n)*43758.5453123); }\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec4 c0 = texture(iChannel0,fragCoord.xy/iResolution.xy);\n\t\n\t\n\tfloat t = pow((((1. + sin(iTime * 10.) * .5)\n\t\t *  .8 + sin(iTime * cos(fragCoord.y) * 41415.92653) * .0125)\n\t\t * 1.5 + sin(iTime * 7.) * .5), 5.);\n\t\n\tvec4 c1 = texture(iChannel0, fragCoord.xy/(iResolution.xy+vec2(t * .2,.0)));\n\tvec4 c2 = texture(iChannel0, fragCoord.xy/(iResolution.xy+vec2(t * .5,.0)));\n\tvec4 c3 = texture(iChannel0, fragCoord.xy/(iResolution.xy+vec2(t * .9,.0)));\n\t\n    float noise = hash((hash(fragCoord.x) + fragCoord.y) * iTime) * .055;\n    \n\tfragColor = vec4(vec3(c3.r, c2.g, c1.b) + noise, 1.);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dsGDn","date":"1367507790","viewed":2365,"name":"Chromatic Aberration Filter","username":"4rknova","description":"A simple chromatic aberration effect.","likes":37,"published":3,"flags":0,"usePreview":0,"tags":["interlaced","chromatic","aberration"],"hasliked":0,"parentid":"","parentname":""}}