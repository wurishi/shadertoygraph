{"ver":"0.1","info":{"id":"MsVXRV","date":"1465523983","viewed":227,"name":"Binary Tree - Inverted Julia set","username":"roywig","description":"An interesting way to color the exterior of a Julia set. I'm inverting the set so it appears to color the inside, because it's visually interesting!","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","binary","tree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 cis(float a){\n    return vec2(cos(a),sin(a));\n}\nvec2 cMul(vec2 a, vec2 b) {\n    return vec2( a.x*b.x -  a.y*b.y,a.x*b.y + a.y * b.x);\n}\nvec2 cInverse(vec2 a) {\n    return  vec2(a.x,-a.y)/dot(a,a);\n}\nvec2 M(vec2 z){\n    vec2 c = 0.3250*cis(sin(iTime*3.)/2.+0.300);\n    for (int i=0; i<17;i++){\n        if( dot(z,z)>22.0 ) continue;\n        z = cMul(z,z) + c;\n    }\n\treturn z;\n}\nvec3 domain(vec2 z){\n    z = vec2(length(z)+.19,atan(z.y,z.x)/3.14);\n    float p=exp2(ceil(-log2(1.-z.x)));\n    return vec3(mod(z.y,2./p)*p<1.);\n}\nvoid mainImage( out vec4 color, in vec2 coord )\n{\n\tvec2 uv = (coord.xy / iResolution.xy-0.5)*2.2;; \n    uv.x *= iResolution.x/iResolution.y;\n\tuv = cInverse(M(cInverse(uv)));\n\tcolor = vec4(domain(uv),1.0);\n}","name":"Image","description":"","type":"image"}]}