{"ver":"0.1","info":{"id":"tlsyzr","date":"1591319965","viewed":143,"name":"diaShape tiling","username":"darkfox","description":"moving tiles.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["polygon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159;\n// palette.\nconst vec3 red = vec3(0.95, 0.3, 0.35);\nconst vec3 green = vec3(0.3, 0.9, 0.4);\nconst vec3 blue = vec3(0.2, 0.25, 0.98);\nconst vec3 gold = vec3(0.85, 0.67, 0.14);\nconst vec3 white = vec3(1.0);\n// diaShape tiling.\nvec3 diaTiling(in vec2 p, float scale, vec3 tileColor){\n  p.x += iTime * 0.1;\n  p *= scale;\n  vec2 q = (mat2(1.0, 1.0, -sqrt(3.0), sqrt(3.0)) / 3.0) * p;\n  vec2 i = floor(q);\n  vec2 f = fract(q);\n  vec2 e1 = vec2(sqrt(3.0) * 0.5, -0.5);\n  vec2 e2 = vec2(sqrt(3.0) * 0.5, 0.5);\n  vec3 col = tileColor;\n  if(mod(i.x * i.y, 2.0) == 0.0){ col = white; }\n  return col;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n  vec2 p = (fragCoord.xy * 0.5 - iResolution.xy) / min(iResolution.x, iResolution.y);\n  float scale = 32.0;\n  vec3 col_1 = diaTiling(p, scale, red);\n  float t = pi * 2.0 / 3.0;\n  vec3 col_2 = diaTiling((p - vec2(0.0, sqrt(3.0) / scale)) * mat2(cos(t), sin(t), -sin(t), cos(t)), scale, blue);\n  vec3 col_3 = diaTiling((p - vec2(-1.5, 0.5 * sqrt(3.0)) / scale) * mat2(cos(t), -sin(t), sin(t), cos(t)), scale, green);\n  vec3 col = min(col_1, min(col_2, col_3));\n    if(col == white){ col = mix(gold, white, (p.y + 1.0) * 0.5); }\n  fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}