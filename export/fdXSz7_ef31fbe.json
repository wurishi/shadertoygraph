{"ver":"0.1","info":{"id":"fdXSz7","date":"1618383342","viewed":223,"name":"rocket swimers form","username":"lomateron","description":"based on https://www.shadertoy.com/view/sdsXzN","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["convolution"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.xy;\n    vec4 a = texture(iChannel0,u);\n    fragColor = a.x+.5                                   //color amount   of fluid\n                +vec4(1,1,0,0)*dot(a,vec4(1,-1,0,0))*11.;//color velocity of fluid\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4 a = A(u+vec2(0,0));\n    float b = 0.;\n    \n    //b = +1.0*A(u+vec2(0,0)).x;\n    //kernel convolution that reads from current 2D frame values\n    {\n        float z = 1.;//kernel convolution size\n        float t = z*2.+1.;\n              t = 1./(t*t-1.);\n        float b0 = abs(a.x);\n        for(float i = -z; i<z+.5;++i){\n        for(float j = -z; j<z+.5;++j){\n          float s = 0.;\n          for(float i2 = -z; i2<z+.5;++i2){\n          for(float j2 = -z; j2<z+.5;++j2){\n          s += abs(A(u+vec2(i,j)+vec2(i2,j2)).x);\n          }}\n          float    d = 2./s;\n          if(s==0.)d = 0.;\n          s = b0*d;\n          float e = A(u+vec2(i,j)).x;\n          s = mix(s,(2.-s)*t,.36);\n          b += s*e;\n        }}\n    }\n    //kernel convolution that reads from previous 2D frame values\n    {\n        float z = 1.;//kernel convolution size\n        float t = z*2.+1.;\n              t = 1./(t*t-1.);\n        float b0 = abs(A(u+vec2(0,0)).y);\n        for(float i = -z; i<z+.5;++i){\n        for(float j = -z; j<z+.5;++j){\n          float s = 0.;\n          for(float i2 = -z; i2<z+.5;++i2){\n          for(float j2 = -z; j2<z+.5;++j2){\n          s += abs(A(u+vec2(i,j)+vec2(i2,j2)).y);\n          }}\n          float    d = 1./s;\n          if(s==0.)d = 0.;\n          s = b0*d;\n          float e = A(u+vec2(i,j)).y;\n          s = mix(s,(1.-s)*t,.33);\n          b -= s*e;\n        }}\n    }\n    a = vec4(b,a.xyz);\n\n    if(iFrame==0)\n    {\n        vec2  m1 = 2.*(u-iResolution.xy*.5)/iResolution.y;\n        a += 1./exp(dot(m1,m1)*22.);\n    }\n    fragColor = a;\n}","name":"Buffer A","description":"","type":"buffer"}]}