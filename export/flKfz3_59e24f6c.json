{"ver":"0.1","info":{"id":"flKfz3","date":"1665546877","viewed":118,"name":"color syncbox","username":"beetom","description":"research of color syncbox","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["colorart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(vec3 c){\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat sdpoint(vec2 p0, vec2 p1, float r)\n{\n    float d0 = smoothstep(0.0, .01, r / 2.0 -length(p0 - p1));\n    float d1 = pow(0.001 / pow(length(p0 - p1),1.5), 0.7) / 6.5;\n    return mix(d0, d1, sin(iTime) * 0.3 + 0.7);\n}\n\nfloat sdpoint_music(vec2 p0, vec2 p1, float r)\n{\n    float vol = texture(iChannel1, vec2(p1.x * p1.y, 0.0)).x;\n    float flad = (1.0 - vol) * 5.0 + 1.0;\n    return pow(0.05 * flad * 0.3 / pow(length(p0 - p1),1.5), max(1.0 - vol, 0.5)) / flad;\n}\n\nvec4 space(vec2 s_uv, float rat, float samples, float count, float energy)\n{\n    vec4 col = vec4(0.0);\n    \n    s_uv = vec2(float(int(s_uv.x / rat + 0.5)) / samples, float(int(s_uv.y / rat + 0.5)) / samples);\n    \n    if(s_uv.x < 0.25 && s_uv.y > 0.25 && s_uv.y < 0.75)\n    {\n        for(float i = 0.0; i < count; i+=1.0)\n        {\n            vec2 ouv = vec2(float(i) * (1.0 / count), s_uv.y);\n            col += texture(iChannel0, ouv) / (pow((i + 1.0), 0.5) * energy);\n        }\n    }\n    \n    if(s_uv.x > 0.25 && s_uv.x < 0.75 && s_uv.y < 0.25)\n    {\n        for(float i = 0.0; i < count; i+=1.0)\n        {\n            vec2 ouv = vec2(s_uv.x,float(i) * (1.0 / count));\n            col += texture(iChannel0, ouv) / (pow(i + 1.0, 0.5) * energy);\n        }\n    }\n    \n    if(s_uv.x > 0.75 && s_uv.y > 0.25 && s_uv.y < 0.75)\n    {\n        for(float i = 0.0; i < count; i+=1.0)\n        {\n            vec2 ouv = vec2(float(i) * (1.0 / count), s_uv.y);\n            col += texture(iChannel0, ouv) / (pow(count - i + 1.0, 0.5) * energy);\n        }\n    }\n    \n    if(s_uv.y > 0.75 && s_uv.x > 0.25 && s_uv.x < 0.75)\n    {\n        for(float i = 0.0; i < count; i+= 1.0)\n        {\n            vec2 ouv = vec2(s_uv.x,float(i) * (1.0 / count));\n            col += texture(iChannel0, ouv) / (pow(count - i + 1.0, 0.5) * energy);\n        }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float samples = 500.0;\n    float rat = 1.0 / samples;\n    float count = 10.0;\n    float energy = count / 3.0;\n    \n    vec2 s_uv = fragCoord / iResolution.xy;\n    vec2 tuv = s_uv;\n    \n    vec2 uv = s_uv * 2.0 - 0.5;\n    vec4 col = vec4(.0);\n    \n    \n    float vol =  texture(iChannel1, vec2(s_uv.x, 0.0)).x * 20.0;\n\t//energy = vol * energy;\n    \n    //col += space(s_uv, rat, samples, count,energy);\n    \n    \n    \n    vec2 muv = iMouse.xy / iResolution.xy;\n    float d = sdpoint(tuv, muv, 0.05);\n    if(d > 0.0)\n    {\n        col += space(s_uv, rat, samples, count, energy) * d;\n    }\n    float row = 20.0;\n    \n    /*\n    float dp = 1.0 / row;\n    float xid = float(int(tuv.x / dp));\n    vec2 c0 = vec2(xid * dp + dp / 2.0, 0.125);\n    d = sdpoint(tuv, c0, 0.03);\n    col += space(c0, rat, samples, count, energy) * d;\n    */\n    \n    float t=0.0;\n\n    for(float i = 0.0; i < row; i+=1.0)\n    {\n        float ix = (i / (row - 1.0) * 0.5) + 0.25 + 1.0 / row / 8.0 + t;\n        float iy = 0.125 + t;\n        vec2 p = vec2(ix, iy);\n        vec2 p1 = vec2(ix, iy + 0.75);\n        vec2 c0 = vec2(p.y, p.x);\n        vec2 c1 = vec2(p1.y, p1.x);\n\n        float d = sdpoint(tuv, p, 0.03);\n\n        if(d > 0.0)\n        {\n            col += space(p, rat, samples, count, energy) * d;\n        }\n\n        d = sdpoint(tuv, p1, 0.03);\n        if(d > 0.0)\n        {\n            col += space(p1, rat, samples, count, energy) * d;\n        }\n\n        d = sdpoint(tuv, c0, 0.03);\n        if(d > 0.0)\n        {\n            col += space(c0, rat, samples, count, energy) * d;\n        }\n\n        d = sdpoint(tuv, c1, 0.03);\n        if(d > 0.0)\n        {\n            col += space(c1, rat, samples, count, energy) * d;\n        }\n    }\n    \n    float ed = 0.35;\n    \n    d = sdpoint_music(tuv, vec2(.0, .0), 0.03) * ed;\n    col += vec4(hsv2rgb(vec3(iTime, 0.5, 1.0))* d, 1.);\n    \n    d = sdpoint_music(tuv, vec2(.0, 1.0), 0.03) * ed;\n    col += vec4(hsv2rgb(vec3(iTime * 1.1, 0.5, 1.0))* d, 1.);\n    \n    d = sdpoint_music(tuv, vec2(1.0, .0), 0.03) * ed;\n    col += vec4(hsv2rgb(vec3(iTime * 1.2, 0.5, 1.0))* d, 1.);\n    \n    d = sdpoint_music(tuv, vec2(1.0, 1.0), 0.03) * ed;\n    col += vec4(hsv2rgb(vec3(iTime * 1.3, 0.5, 1.0))* d, 1.);\n\n    \n    if(uv.x >= 0.0 && uv.y >= 0.0 && uv.x <= 1.0 && uv.y <= 1.0)\n    {\n        col = texture(iChannel0, uv);\n    }\n    \n\t\n    //black circle overlay\t   \n\t//float dist = distance(p , vec2(0));  \n\t//c = c * smoothstep(0.26, 0.28, dist);\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}