{"ver":"0.1","info":{"id":"csGGRm","date":"1678294995","viewed":58,"name":"mergence","username":"UsamagorQ","description":"mergence\n\n\nI swear i have no idea how shadertoy works","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 meth(vec2 uv, vec2 iResolution, float x, float y)\n{\n    float z,w,s = iResolution.x/uv.x,p;\n    w = uv.y*iResolution.y-iResolution.x/abs(y*x/iTime);\n    z = s*x-w;\n    p = z*w*s/iResolution.x+iResolution.y-(x*y);\n    vec2 r = vec2(iTime/uv.x*y/x*iResolution.x-z+iTime*(iTime-(w+p)), w*s+p*x/iResolution.x-uv.y);\n    return r;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 h = meth(uv,iResolution.xy,fragCoord.x*cos(iTime/2.-uv.x),fragCoord.y*sin(iTime*2.+uv.y));\n    // Time varying pixel color\n    vec3 col = vec3(h, iResolution.x-iResolution.y*iTime/fragCoord.x/fragCoord.y);\n\n    // Output to screen\n    fragColor = vec4(col/uv.y-h.y*cos(sin(h.x/uv.x)),0.15234);\n}","name":"Image","description":"","type":"image"}]}