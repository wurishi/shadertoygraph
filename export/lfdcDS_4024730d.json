{"ver":"0.1","info":{"id":"lfdcDS","date":"1731103651","viewed":42,"name":"ray marching bug","username":"pyroxenite","description":"ray marching bug","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 cam_pos = vec3(-3,0,-3);\nvec3 cam_dir = vec3(.7,0,.7);\nvec3 up = vec3(0,-1,0);\nvec3 light = vec3(5,1.0,0.0);\nint ITERATIONS = 100;\nfloat epsilon = 5.0;\nvec3 faces[6] = vec3[6](\n    vec3(1.0,0.0,0.0),\n    vec3(-1.0,0.0,0.0),\n    vec3(0.0,1.0,0.0),\n    vec3(0.0,-1.0,0.0),\n    vec3(0.0,0.0,-1.0),\n    vec3(0.0,0.0,1.0)\n);\n\nvec3 dir(vec2 screen){\n    vec3 on_screen = cam_pos + cam_dir;\n    \n    vec3 x = cross(cam_dir, up);\n    on_screen += x * screen.x + up * screen.y;\n    return on_screen - cam_pos;\n}\n\n\nfloat sphere_sdf(vec3 pos, vec3 center, float r){\n    vec3 to_center = (center - pos);\n    return pow(dot(to_center,to_center), .5) - r;\n}\n\nfloat box_sdf(vec3 pos, vec3 center){\n    vec3 to_center = (center - pos);\n    int argmin_i = 0;\n    float min_dot = 200000.0;\n    for (int i = 0; i < 6; i += 1){\n        float d = dot(faces[i], to_center);\n        argmin_i = d < min_dot ? i : argmin_i;\n        min_dot = d < min_dot ? d : min_dot;\n    }\n    return dot(to_center/(min_dot - sign(min_dot)*epsilon) - to_center, faces[argmin_i]);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    cam_pos = vec3(sin(iTime), 0.0, cos(iTime)) * 7.0;\n    cam_dir = -cam_pos/pow(dot(cam_pos, cam_pos),.5);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 screen_pos = 2.0 * (uv - vec2(0.5 * iResolution.x/iResolution.y,0.5));\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 r_dir = dir(screen_pos);\n    r_dir /= pow(dot(r_dir,r_dir), .5);\n    vec3 r_pos = cam_pos;\n    for (int i = 0; i < ITERATIONS; i += 1){\n        r_pos += r_dir * min(\n            box_sdf(r_pos, vec3(0,0.0,0.0)),\n            sphere_sdf(r_pos, vec3(5,0.0,0.0), 1.0)\n        );\n    }\n    \n    // Output to screen\n    fragColor = vec4(dot(r_pos - cam_pos,r_pos - cam_pos) / 100.0);\n}","name":"Image","description":"","type":"image"}]}