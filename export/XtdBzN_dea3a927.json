{"ver":"0.1","info":{"id":"XtdBzN","date":"1538845849","viewed":535,"name":"Simple Borders","username":"blausand","description":"Just starting from simple math functions.\nUsing abs, trunc, max and simple linear algebra to construct a soft grid.\nKept the original Time varying pixel color on top for fun as comment.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 fields = vec2(9,6);\n    \n    vec2 fieldUV = (uv*fields)-trunc(uv*fields);\n    vec2 borderdist = abs(fieldUV-.5)*2.0;\n    \n    float color = (max(borderdist.x,borderdist.y)*3.0)-1.8;\n    \n    // Time varying pixel color\n    vec3 col = color*vec3(1,1,1); // * abs(cos(iTime+uv.xyx+vec3(0,2,4)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}