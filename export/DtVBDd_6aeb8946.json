{"ver":"0.1","info":{"id":"DtVBDd","date":"1702653969","viewed":49,"name":"Happy new year with stars","username":"nayk","description":"cosmos,stars, new year,glow\ncopy past and combination","likes":5,"published":1,"flags":1,"usePreview":0,"tags":["glow","stars","cosmos","newyear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*https://www.shadertoy.com/view/DtGfWt  // copied from https://www.shadertoy.com/view/XlfGRj\n\n// +  original https://www.shadertoy.com/view/lslyRn*/\n\n#define iterations 17\n#define formuparam 0.53\n\n#define volsteps 20\n#define stepsize 0.1\n\n#define zoom   0.800\n#define tile   0.850\n#define speed  0.000\n\n#define brightness 0.0015\n#define darkmatter 0.300\n#define distfading 0.730\n#define saturation 0.850\n#define M_PI 3.1415926535897932384626433832795\n\nvec2 rotate(vec2 uv, float th) {\n    return mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n}\n\nvec3 background(vec2 uv) {\n    return mix(vec3(0.2), vec3(0.1), uv.y + 0.5);\n}\n\nbool circle(vec2 uv, float r, vec2 offset) {\n    return distance(uv,offset) < r;\n}\n\nbool square(vec2 uv, float size, vec2 offset, float angle) {\n    vec2 t=abs(rotate(uv-offset,angle));\n    return t.x< size && t.y<size;\n}\n\nbool triangle(vec2 uv, float size, vec2 offset, float angle) {\n    vec2 t=rotate(uv-offset,angle);\n    vec2 ta=abs(t);\n    return ta.x< size && ta.y<size && t.x<t.y;\n}\n\nfloat rand(float x) {\n    return fract(sin(x*(91.3458)) * 47453.5453);\n}\n\nvoid mainVR( out vec4 fragColor, in vec2 fragCoord, in vec3 ro, in vec3 rd )\n{\n//get coords and direction\nvec3 dir=rd;\nvec3 from=ro;\n\n//volumetric rendering\nfloat s=0.1,fade=1.;\nvec3 v=vec3(0.);\nfor (int r=0; r<volsteps; r++) {\nvec3 p=from+s*dir*.5;\np = abs(vec3(tile)-mod(p,vec3(tile*2.))); // tiling fold\nfloat pa,a=pa=0.;\nfor (int i=0; i<iterations; i++) {\np=abs(p)/dot(p,p)-formuparam;\n           \na+=abs(length(p)-pa); // absolute sum of average change\npa=length(p);\n}\nfloat dm=max(0.,darkmatter-a*a*.001); //dark matter\na*=a*a; // add contrast\nif (r>6) fade*=1.2-dm; // dark matter, don't render near\n//v+=vec3(dm,dm*.5,0.);\nv+=fade;\nv+=vec3(s,s*s,s*s*s*s)*a*brightness*fade; // coloring based on distance\nfade*=distfading; // distance fading\ns+=stepsize;\n}\nv=mix(vec3(length(v)),v,saturation); //color adjust\nfragColor = vec4(v*.03,1.);\n}\nfloat nice_lucky_lovely_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n\nvec3 drawScene(vec2 uv) {\n    vec3 col = background(uv);\n   \n   \n    // anim between 0.9 - 1.1\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;    \n\n \n    if(square(uv, 10.0, vec2(0.0, -10.45), 0.0)) col=vec3(1);\n    if(square(uv, 0.07, vec2(0.0, 0.2-0.75), 0.0)) col=vec3(0.48, 0.25, 0.1);\n\n    if(triangle(uv, 0.35, vec2(0, 0.2-0.7), M_PI/4.)) col=vec3(0.09, 0.53, 0.1);\n    if(triangle(uv, 0.3, vec2(0, 0.2-0.475), M_PI/4.)) col=vec3(0.1, 0.57, 0.11);\n    if(triangle(uv, 0.2, vec2(0, 0.2-0.2), M_PI/4.)) col=vec3(0.09, 0.59, 0.1);\n    if(triangle(uv, 0.125, vec2(0, 0.2), M_PI/4.)) col=vec3(0.09, 0.64, 0.1);\n   \n    if(triangle(uv, 0.05, vec2(0.02, 0.405), 0.3-M_PI/4.)) col=vec3(1, 0.99, 0.07);\n    if(triangle(uv, 0.05, vec2(-0.025, 0.43), 0.45+3.*M_PI/4.)) col=vec3(1, 0.99, 0.07);\n    if(triangle(uv, 0.05, vec2(0.0, 0.385), M_PI/4.)) col=nice_lucky_lovely_star(uv,anim) * vec3(0.35,0.2,0.15);\n    if(triangle(uv, 0.05, vec2(0.0, 0.44), 5.*M_PI/4.)) col=nice_lucky_lovely_star(uv,anim) * vec3(0.35,0.2,0.15);\n    if(triangle(uv, 0.05, vec2(0.01, 0.425), 0.15-2.*M_PI/4.)) col=vec3(1, 0.99, 0.07);\n   \n    if(circle(uv, 0.05, vec2(0.1,0.2))) col=nice_lucky_lovely_star(uv,anim) * vec3(0.35,0.2,0.15);\n    if(circle(uv, 0.05, vec2(-0.15,0.025))) col=vec3(0.25, 0.25, 1)*nice_lucky_lovely_star(uv,anim);\n    if(circle(uv, 0.05, vec2(0.2,-0.1))) col=vec3(1, 0.55, 0.07)*nice_lucky_lovely_star(uv,anim);\n    if(circle(uv, 0.05, vec2(-0.3,-0.25))) col=vec3(1, 0.29, 0.93)*nice_lucky_lovely_star(uv,anim);\n    if(circle(uv, 0.05, vec2(-0.015,-0.3))) col=vec3(0.25, 1, 1)*nice_lucky_lovely_star(uv,anim);\n    if(circle(uv, 0.05, vec2(0.3,-0.4))) col=vec3(1, 0.98, 0.27)*nice_lucky_lovely_star(uv,anim);\n   \n    for(int i=0; i<100; i++){\n        float ii = float(i);\n        if(circle(uv, 0.01,\n        vec2(rand(ii)*3.-1.5+cos(iTime*(2.+0.05*(rand(rand(-ii))*0.3+1.))+rand((0.21*ii)))*0.15*(rand(rand(-ii))*0.3+1.\n        ),\n        1.-2.*fract(rand(rand(ii*ii))+rand(rand(-ii))*iTime/10.))))\n        col=vec3(1);\n    }\n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//get coords and direction\nvec2 uv=fragCoord.xy/iResolution.xy-.5;\n    vec2 uv2=fragCoord.xy/iResolution.xy-.5;\n       \n        vec2 uv3=fragCoord.xy/iResolution.xy-.5;\n        vec2 uv4=fragCoord.xy/iResolution.xy-.5;\n        vec2 uv5=fragCoord.xy/iResolution.xy-.5;\n        vec2 uv6=fragCoord.xy/iResolution.xy-.5;\n        vec2 uv7=fragCoord.xy/iResolution.xy-.5;\n        vec2 uv8=fragCoord.xy/iResolution.xy-.5;\nuv*=2.;\nvec3 dir=vec3(uv*zoom,iTime*0.05);\nfloat time=iTime*speed+.25;\n \nvec3 col = drawScene(uv);\n\nvec3 from=vec3(1.,.5,0.5);\nfrom+=vec3(time*2.,time,-2.);\n   \n    // anim between 0.9 - 1.1\n    float anim = sin(iTime * 10.0) * 0.1 + 1.0;    \n\n   uv2+=vec2(0.01,-0.21);\n uv3+=vec2(0.07,-0.01);\n uv4+=vec2(-0.05,-0.11);\n     uv5+=vec2(-0.00,0.15);\n      uv6+=vec2(-0.15,0.20);\n       uv7+=vec2(0.15,0.10);\n        uv8+=vec2(-0.10,0.05);\nmainVR(fragColor, fragCoord, from, dir);\n    fragColor*=vec4(col,1.);\n     fragColor+= vec4(nice_lucky_lovely_star(uv2,anim) * vec3(0.25,0.2,0.55)*0.07, 1.0);\n      fragColor+= vec4(nice_lucky_lovely_star(uv3,anim) * vec3(0.25,0.2,0.55)*0.05, 1.0);\n      fragColor+= vec4(nice_lucky_lovely_star(uv4,anim) * vec3(0.25,0.5,0.55)*0.02, 1.0);\n      fragColor+= vec4(nice_lucky_lovely_star(uv5,anim) * vec3(0.35,0.2,0.25)*0.03, 1.0);\n       fragColor+= vec4(nice_lucky_lovely_star(uv6,anim) * vec3(0.35,0.2,0.25)*0.03, 1.0);\n        fragColor+= vec4(nice_lucky_lovely_star(uv7,anim) * vec3(0.35,0.2,0.25)*0.04, 1.0);\n         fragColor+= vec4(nice_lucky_lovely_star(uv8,anim) * vec3(0.35,0.3,0.25)*0.04, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}