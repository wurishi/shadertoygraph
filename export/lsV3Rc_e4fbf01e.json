{"ver":"0.1","info":{"id":"lsV3Rc","date":"1455714179","viewed":1033,"name":"Notch's unmandelboxing","username":"Edward","description":"Playing with Notch's neat little shader to see what I can learn. See the much more compact original here: http://doodle.notch.net/unmandelboxing/","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\nuniform vec4 I;\n\nvec3 Z(vec3 p,float a) {\n    return vec3(cos(a)*p.y+sin(a)*p.x,cos(a)*p.x-sin(a)*p.y,p.z);\n}\n\nfloat F(vec3 P) {\n    float R=sin((iTime+P.z)*.03176)*.45+.5,S=3.4312-sin(iTime*.001);\n    vec4 p=vec4(P,1),o=p,s=vec4(S,S,S,abs(S))/R;\n    for(int i=0;i<24;i++) {\n        if(i==3||i==7||i==11||i==15||i==19||i==23)R=sin(((iTime+P.z)*.01+float(i)*0.25*sin(iTime*.00012211154)*3.8)*3.176)*0.45+0.5;\n        p.xyz=clamp(p.xyz,-1.,1.)*2.-p.xyz;\n        float r2=dot(p.xyz,p.xyz);\n        if(r2>1000.)break;\n        p=p*clamp(max(R/r2,R),0.,1.)*s+o;\n    }\n    return((length(p.xyz)-abs(S-1.))/p.w-pow(abs(S),float(1-24)));\n}\n\nfloat D(vec3 p) {\n    vec3 c=vec3(10.,10.,8.);\n    p=mod(p,c)-.5*c;\n    vec3 q=abs(Z(p,p.z*3.1415/10.*4.));\n    float d2=max(q.z-10.,max((q.x*0.866025+q.y*0.5),q.y)-.08);\n    p=Z(p,p.z*3.1415/10.*(length(p.xy)-3.)*sin(iTime*.0001)*.8);\n    return max(F(p),-d2);\n}\n\nvec3 R(vec3 p,vec3 d) {\n    float td=0.,rd=0.;\n    for(int i=0;i<80;i++) {\n        if((rd=D(p))<pow(td,1.5)*.004)break;\n        td+=rd;\n        p+=d*rd;\n    }\n    float md=D(p),e=.0025;\n    vec3 n=normalize(vec3(D(p+vec3(e,0,0))-D(p-vec3(e,0,0)),D(p+vec3(0,e,0))-D(p-vec3(0,e,0)),D(p+vec3(0,0,e))-D(p-vec3(0,0,e))));\n    e*=.5;\n    float occ=1.+(D(p+n*.02+vec3(-e,0,0))+D(p+n*.02+vec3(+e,0,0))+D(p+n*.02+vec3(0,-e,0))+D(p+n*.02+vec3(0,e,0))+D(p+n*.02+vec3(0,0,-e))+D(p+n*.02+vec3(0,0,e))-.03)*20.;\n    occ=clamp(occ,0.,1.);\n    float br=(pow(clamp(dot(n,-normalize(d+vec3(.3,-.9,.4)))*.6+.4, 0.,1.),2.7)*.8+.2)*occ/(td*.5+1.);\n    float fog=clamp(1./(td*td*1.8+.4),0.,1.);\n    return mix(vec3(br,br/(td*td*.2+1.),br/(td+1.)),vec3(0.,0.,0.),1.-fog);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 f=fragCoord.xy;\n    vec3 d=vec3((f-vec2(iResolution/2.))/iResolution.y*2.,1.);\n    vec3 c=pow(R(vec3(5.,5.,iTime*.1),normalize(d*vec3(1.,1.,1.-(length(d.xy)*.9)))),vec3(.6,.6,.6));\n    //fragColor=vec4(c,1.);\n    //fragColor=vec4(pow(floor(c*vec3(8.,8.,4.)+fract(f.x/4.+f.y/2.)/2.)/(vec3(7.,7.,3.)),vec3(1.5,1.5,1.5)),1.);\n    vec3 scaledColour = c * vec3(8.,8.,4.);\n    //float ditherOffset = 0.;\n    float ditherOffset = fract(f.x/4.+f.y/2.)/1.5-.25;\n    ditherOffset *= 1.5;\n    //float ditherOffset = fract(f.x/2.)/4.+fract(f.y/2.)/2.;\n    fragColor=vec4(pow(floor(max(scaledColour+ditherOffset,0.))/vec3(7.,7.,3.),vec3(1.5,1.5,1.5)),1.);\n}","name":"Image","description":"","type":"image"}]}