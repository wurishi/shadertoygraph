{"ver":"0.1","info":{"id":"Wd23RD","date":"1548334698","viewed":459,"name":"Jungle","username":"gaz","description":"3d","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate(float a)\n{\n    return mat2(cos(a), sin(a), -sin(a), cos(a));\n}\n\nfloat pattern(vec2 p)\n{\n    p *= 15.0;\n    return abs(sin(p.x) + sin(p.y));\n}\n\nfloat boxmap(vec3 p)\n{\n    p *= 0.3;\n    vec3 m = pow(abs(normalize(p)), vec3(20));\n    vec3 a = vec3(pattern(p.yz),pattern(p.zx),pattern(p.xy));\n\treturn dot(a,m)/(m.x+m.y+m.z);\n}\n\nvec3 smin(vec3 a, vec3 b)\n{\n    float k = 0.08;\n\tvec3 h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\nvec3 sabs(vec3 p)\n{\n \treturn  p - 2.0 * smin(vec3(0), p); \n}\n\nfloat map(in vec3 p)\n{  \n    float s = 3.7;\n    float amp = 1.0/s;\n    float c = 0.5;\n    p = sabs(mod(p, c * 2.0) - c); \n    float de = 100.;\n    for(int i=0; i<3; i++){\n        p.xy *= rotate(0.4+sin(iTime*0.2+ 0.3*sin(iTime*0.4))*0.2);\n        p.yz *= rotate(0.4+sin(iTime*0.3+ 0.5*sin(iTime*0.5))*0.2);\n        p = sabs(p); \n        p *= s;\n        p -= vec3(0.2*p.z, 0.6*p.x, 0.4) * (s - 1.0);\n\t    de = abs(length(p*amp) - 0.2) ;\n        amp /= s;\n    }   \n    return de + boxmap(p) * 0.02 - 0.01;\n}\n\nvec3 calcNormal(vec3 p){\n  vec2 e = vec2(1, -1) * 0.001;\n  return normalize(\n    e.xyy*map(p+e.xyy)+e.yyx*map(p+e.yyx)+ \n    e.yxy*map(p+e.yxy)+e.xxx*map(p+e.xxx)\n  );\n}\n\nvec3 doColor(vec3 p){\n\treturn vec3(0.2,0.9,0.2) * boxmap(p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(0.2, 0.1, 0.5)+iTime*0.1;\n    vec3 rd = normalize(vec3(p, 2));\n    rd.xz *= rotate(sin(iTime*0.3)*0.6);\n    rd.yz *= rotate(sin(iTime*0.2)*0.6);\n    rd.xy *= rotate(sin(iTime*0.05));   \n    vec3 col = mix(\n        vec3(0.3, 0.7, 0.8),\n        vec3(0.1, 0.1, 0.2),\n        smoothstep(0.3, 2.5, length(p)));    \n    float t = 0.1, d;\n \tfor(int i = 0; i < 300; i++)\n  \t{\n        d = map(ro + rd * t);\n    \tt += 0.1 * d;\n    \tif(d < 0.001 || t > 5.0) break;\n  \t}\n  \tif(d < 0.001)\n  \t{\n\t  \tvec3 p = ro + rd * t;\n\t \tvec3 nor = calcNormal(p);\n    \tvec3 li = normalize(vec3(1));\n        vec3 c = doColor(p);\n        c *= clamp(dot(nor, li), 0.3, 1.0);\n        c *= max(0.5 + 0.5 * nor.y, 0.0);\n        c += pow(clamp(dot(reflect(normalize(p - ro), nor), li), 0.0, 1.0), 20.0);\n        c.x +=1.0- exp(-t*t*0.15);\n        c = clamp(c,0.0,1.0);\n        col = mix(col,c,exp(-t*t*0.6));\n    }\n  \tcol = pow(col, vec3(0.8));\n    col= mix(col, vec3(col.x), clamp(sin(iTime*0.5 + sin(iTime*0.2)*0.5)*2.0-1.0, 0.0, 1.0));\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}