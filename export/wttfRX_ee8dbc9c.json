{"ver":"0.1","info":{"id":"wttfRX","date":"1680206422","viewed":240,"name":"Atkinson Dithering","username":"outofpaper","description":"Working towards Atkinson dithering","likes":1,"published":3,"flags":2,"usePreview":1,"tags":["80s","effect","dithering","mac"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int lookupSize = 256;\nconst float errorCarry = 0.8;\n\nfloat getGrayscale(vec2 coords){\n\tvec2 uv = coords / iResolution.xy;\n\tvec3 sourcePixel = texture(iChannel0, uv).rgb;\n\treturn length(sourcePixel*vec3(0.7,0.7,0.0722));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n\tint topGapY = int(iResolution.y - fragCoord.y);\n\t\n\tint cornerGapX = int((fragCoord.x < 10.0) ? fragCoord.x : iResolution.x - fragCoord.x);\n\tint cornerGapY = int((fragCoord.y < 10.0) ? fragCoord.y : iResolution.y - fragCoord.y);\n\tint cornerThreshhold = ((cornerGapX == 0) || (topGapY == 0)) ? 5 : 4;\n\t\n\t\n\t//Declare a float for our x Error\t\n\tfloat xError = 0.0;\n\tfor(int xLook=0; xLook<lookupSize; xLook++){\n\t\tfloat grayscale = getGrayscale(fragCoord.xy + vec2(-lookupSize+xLook,0));\n\t\tgrayscale += xError;\n\t\tfloat bit = grayscale >= 0.5 ? 1.0 : 0.0;\n\t\txError = (grayscale - bit)*errorCarry;\n\t\t}\n        \n\t//Declare a float for our y Error\n\tfloat yError = 0.0;\n\tfor(int yLook=0; yLook<lookupSize; yLook++){\n\t\tfloat grayscale = getGrayscale(fragCoord.xy + vec2(0,-lookupSize+yLook));\n\t\tgrayscale += yError;\n\t\tfloat bit = grayscale >= 0.5 ? 1.0 : 0.0;\n\t\tyError = (grayscale - bit)*errorCarry;\n\t\t}\n\t\t\n\tfloat finalGrayscale = getGrayscale(fragCoord.xy);\n\tfinalGrayscale += xError*0.2 + yError*0.2;\n\tfloat finalBit = finalGrayscale >= 0.5 ? 0.95 : 0.05;\n\t\t\n\tfragColor = vec4(finalBit,finalBit,finalBit,1);\n\t\t\t\n\n\t\n}","name":"Image","description":"","type":"image"}]}