{"ver":"0.1","info":{"id":"NdGyWG","date":"1655435208","viewed":113,"name":"Pride Flag (classic)","username":"patrickod","description":"A classic pride flag for the \"color\" chapter step function exercise in Book of Shaders","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["flag","pride"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\n== CLASSIC PRIDE FLAG RAINBOW HEX ==\n\nref: https://www.kapwing.com/resources/official-pride-colors-2021-exact-color-codes-for-15-pride-flags/\nref: https://airtightinteractive.com/util/hex-to-glsl/\n\n*/\nconst vec3 red=vec3(.898,0.,0.);\nconst vec3 orange=vec3(1.,.553,0.);\nconst vec3 yellow=vec3(1.,.933,0.);\nconst vec3 green=vec3(.008,.506,.129);\nconst vec3 blue=vec3(0.,.298,1.);\nconst vec3 purple=vec3(.467,0.,.533);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n      \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n\n    float bar_width=1./6.0;\n    \n    // @patrickod initial attempt w/ step & mix\n    // use increasing bar widths to map into range 0-1 (using 1-st.y to achieve this index)\n    // add each color in successive \"layers\", lower ones overriding earlier ones\n    // \n    // vec3 color =vec3(1.0);\n    // color = mix(color, red, step(0.0, (1.0-st.y)));\n    // color = mix(color, orange, step(bar_width, (1.0-st.y)));\n    // color = mix(color, yellow, step(bar_width*2.0, (1.0-st.y)));\n    // color = mix(color, green, step(bar_width*3.0, (1.0-st.y)));\n    // color = mix(color, blue, step(bar_width*4.0, (1.0-st.y)));\n    // color = mix(color, purple, step(bar_width*5.0, (1.0-st.y)));\n\n\n\n    // no more mix, just simple conditionals h/t @FabriceNeyret2 @iq\n    float i = 6.0*fragCoord.y/iResolution.y;\n    vec3 color = i < 1. ? purple\n               : i < 2. ? blue\n               : i < 3. ? green\n               : i < 4. ? yellow\n               : i < 5. ? orange\n               :          red;\n\n\n    fragColor = vec4(vec3(color),1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}