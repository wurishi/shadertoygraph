{"ver":"0.1","info":{"id":"DtsBW2","date":"1695352733","viewed":34,"name":"2d line for UV","username":"bythesword","description":"2d line for water ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//作废，不使用\nfloat get_x(vec2 dir,float y,float b){\n    float x;\n    float fa=dir.x/dir.y;\n    y=fa*x+b;\n    return x;\n}\nfloat get_y(vec2 dir,float x,float b){\n    float y;\n    float fa=dir.y/dir.x;\n    y=fa*x+b;\n    return y;\n}\n\n//b在0-2之间，在屏幕范围内，公式对应于笛卡尔坐标（UV也是笛卡尔）\nvec3 line(vec2 a_uv,float thickness,float b,vec2 uv){\n    if (b>2.0){\n           // b-=4.25;//y=f*x+b,忘记了为什么是-4.25了,反正就是平面空间\n    }            \n    vec2 dir =normalize(vec2(-a_uv.y,a_uv.x));            \n\n    float y1;\n    float x1=1.0;\n    vec2 v0=vec2(0.0,0.0); //线上的某个点(x=1,y=fa*x+b)\n    if(dir.x==0.0){\n        y1=get_x(dir,x1 ,b);\n        v0=vec2(y1,x1);\n    }\n    else{\n        y1=get_y(dir,x1 ,b);\n        v0=vec2(x1 ,y1);\n    }\n              \n    \n    //当前求的线的向量\n    //直线的单位长度法线，垂直的a_uv的线\n    vec2 nor_a_uv=normalize(a_uv);\n    \n    // signed distance from p to the line\n    //p到直线的有符号距离\n    float dist = dot(uv-v0,nor_a_uv);//每个uv点到line的距离，核心\n    \n    float sphereMask = dist;\n    //float hardness = 0.21;\n    //float sphereMask = 1.0 - (distance(uv, a_uv1*-20.) / (1.0 - hardness));    \n    float wavesSpeed = 4.0;\n    float wavesFrequency = 6.0;\n    \n    float sine = sin(iTime * wavesSpeed + sphereMask * wavesFrequency);  \n    \n    vec3 col = vec3(abs(sine)<thickness);//无过度\n    //vec3 col = vec3(abs(dist)<thickness);//无过度\n    //vec3 col = vec3(1.0-smoothstep(abs(dist),0.0, thickness));\n    \n    return col;\n\n}\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nvec2 a_uv1=vec2(-.5,-0.5);\nfloat step=0.5; \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float thickness = 0.3;   \n   \n    \n  \n    \n    vec3 col1=line(a_uv1,thickness,0.,uv);  \n    fragColor = vec4(col1,1.0);\n}","name":"Image","description":"","type":"image"}]}