{"ver":"0.1","info":{"id":"Md2fD1","date":"1500353666","viewed":190,"name":"[SH17A] Constant spectrum melody","username":"rory618","description":"A sound made up of constant frequencies, but you can hear the long term changes in the sound.\nSee Fabrice's implementation for more info: [url]https://www.shadertoy.com/view/XdsXDf[/url]","likes":4,"published":1,"flags":8,"usePreview":0,"tags":["sh17a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 o, in vec2 i )\n{\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/*vec2 mainSound( in int samp,float t)\n{\n\tvec2 v = vec2(0); \n    float i=0.;\n    for (; i < 82.; i++) { v += sin(floor(5e2+i/9.)*mod(i,9.)*t); }\n    \n    return v / i;  \n}*/\n//137\n\n//137\n#define S(x) x+x+x+x\n//#define mainSound( in int samp,t) vec2(S(S(S(     sin(floor(5e2+t/63.)*mod(floor(t/7.),9.)*mod(t+=7.,7.))    ))))/81.\n//you can use the tiniest shader trick here, but you can only have a single expression\n\n\nvec2 mainSound( in int samp,float t)\n{ \n    float j=0.;\n    return vec2(S(S(S(sin(floor(5e2+j/8.)*mod(++j,8.)*t)))))/j;\n}","name":"Sound","description":"","type":"sound"}]}