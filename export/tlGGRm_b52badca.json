{"ver":"0.1","info":{"id":"tlGGRm","date":"1578508327","viewed":66,"name":"Learning Code [08]","username":"ozu","description":"Everything you're not supposed to do.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["lazyrandomness"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = (u -.5 *R) / R.y;\n\n    float d = length( U / sin( iTime*(U.y +U.x) ) );\n\n    O = vec4( smoothstep(150./R.y, 0., abs( sin(iTime) *.5 + .5 - d ) ) );\n}\n\n\n/*void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord -.5 *iResolution.xy) / iResolution.y;\n\n    float col = 0.;\n    //float d = length( uv*sin(uv.y*1. * iTime)  + sin(uv.x*1. * iTime)  );\n    float d = length( uv *  1./(sin( uv.y * iTime +uv.x * iTime ) ) );\n\n    float blur = 1.5/iResolution.y;\n\n   \n    col = smoothstep(blur *100., 0., abs(d - 1.* (sin(iTime) *.5 + .5) ) );\n\t//col = d;\n    fragColor = vec4(vec3(col),1.0);\n}*/","name":"Image","description":"","type":"image"}]}