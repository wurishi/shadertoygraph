{"ver":"0.1","info":{"id":"WdXcDX","date":"1585672025","viewed":176,"name":"SimpleCity","username":"Hei149","description":"raymarching","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate(float ang)\n{\n    float ca = cos(ang),sa = sin(ang);\n    return mat2(ca, sa, -sa, ca);\n}\n\nfloat sdBox(vec3 p, vec3 b)\n{\n    vec3 h = abs(p) - b;\n    return max(h.x, max(h.y, h.z)) * 0.8;\n    return length(max(h, 0.0));\n}\n\nfloat rand(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.493, 94.329))) * 2994.382);\n}\n\nfloat rand(vec3 p)\n{\n    return fract(sin(dot(p, vec3(12.943,94.493, 158.03))) * 4948.8);\n}\n\nfloat building(vec3 p, float s)\n{\n    p /= s;\n    float d = sdBox(p, vec3(2.0, 5.0, 2.0));\n    return d * s;\n}\n\nfloat buildings(vec3 p, float rep)\n{\n    vec2 id = floor(p.xz / rep);\n    p.xz = mod(p.xz, rep) - 0.5 * rep;\n    float d = building(p, 1.0 + rand(id) * 2.0);\n    return d;\n}\n\nfloat getColor(vec3 p)\n{\n    return rand(floor(p));\n}\n\nfloat map(vec3 p)\n{\n    float d = buildings(p, 20.0);\n    d = min(d, buildings(p + vec3(25.0, 0.0, -10.), 20.0));\n    d = min(d, buildings(p + vec3(-10.0, 0.0, 25.0), 20.0));\n    return min(d, p.y + 5.0);\n}\n\nvec3 norm(vec3 p)\n{\n    vec2 e = vec2(0.001, 0.0);\n    return normalize(vec3(\n        map(p + e.xyy) - map(p - e.xyy),\n        map(p + e.yxy) - map(p - e.yxy),\n        map(p + e.yyx) - map(p - e.yyx)\n    ));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{   \n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 r0 = vec3(0.0, 40.0, -200.0);\n    float time = mod(iTime, 25.0);\n    r0.xz *= rotate(0.75);\n    r0.z -= time * 10.;\n    vec3 tgt = vec3(0.0);\n    tgt.z -= time * 10.;\n    vec3 ww = normalize(tgt - r0);\n    vec3 uu = normalize(cross(vec3(0,1,0), ww));\n    vec3 vv = normalize(cross(ww, uu));\n    vec3 rd = normalize(uv.x * uu + uv.y * vv + ww);\n\n    float d = 0.0;\n    vec3 ld = normalize(vec3(0.5, 1.0, -0.5));    \n    vec3 col = vec3(0.0);\n    for(int i = 0; i < 100; ++i)\n    {\n        vec3 p = r0 + d * rd;\n        float t = map(p);\n        d += t;\n        if(t < 0.001)\n        {\n            break;\n        }\n        if(d > 400.0) break;\n    }\n    \n    vec3 at = vec3(0.0);\n    if(d < 400.0)\n    {\n        vec3 p = r0 + d * rd;\n        float albedo = 0.0;\n        float rnd = getColor(floor(p * 1.5));\n        albedo = step(rnd, 0.90) * rnd;\n        vec3 n = norm(p);\n        if(n.y > 0.9) albedo += 0.2;\n        at += 0.001 / (0.001 + albedo);\n    }\n    col += at * vec3(1.28, 1.20, 0.9);\n    float fog = 1.0 - clamp(d / 400.0, 0.0, 1.0);\n    col *= fog;\n    col = smoothstep(0.0, 1.0, col);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}