{"ver":"0.1","info":{"id":"Mcf3DS","date":"1703441158","viewed":16,"name":"The watch","username":"Sims","description":"Watch","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["watch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265\nvec3 baseimage(vec2 uv){\n   float d=length(uv)-0.8;\n   float d1=0.75-length(uv);\n   d=step(0.1,d);\n   d1=step(-0.1,d1);\n   return vec3 (d,d,d) +vec3(d1,d1,d1);\n   \n}\nvec3 drawLine (vec2 p1, vec2 p2, vec2 uv, float a,vec3 color)\n\n{\n    float r = 0.;\n    float one_px = 1. / iResolution.x;\n    float d = distance(p1, p2);\n    float duv = distance(p1, uv);\n    r = 1.-floor(1.-(a*one_px)+distance (mix(p1, p2, clamp(duv/d, 0., 1.)),  uv));\n    if(r==1.){\n       return color;\n    }\n    else{\n       return baseimage(uv);\n    }\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy*2.-1.;\n    vec2 o=vec2 (0.,0.);\n    vec2 sec=vec2 (0.85*sin(iTime/(2.*pi)),0.85*cos(iTime/(2.*pi)));\n    vec2 minu=vec2 (0.7*sin(iTime/60./(2.*pi)),0.7*cos(iTime/60./(2.*pi)));\n    vec2 hour=vec2 (0.5*sin(iTime/3600./(2.*pi)),0.5*cos(iTime/3600./(2.*pi)));\n    vec3 line=vec3(0.,0.,0.);\n    vec3 col=drawLine(o,sec,uv,3.,line)*drawLine(o,minu,uv,7.,line)*drawLine(o,hour,uv,12.,line);\n    fragColor =vec4 (col,1.);\n}","name":"Image","description":"","type":"image"}]}