{"ver":"0.1","info":{"id":"ssXcR7","date":"1641860139","viewed":75,"name":"color patch quilt","username":"spacehaze","description":"Colorful patches. Just goofing around.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["colors","rainbow","geometric","patch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash21(vec2 p){\n    p = fract(p*vec2(234.34, 435.345));\n    p += dot(p, p+34.23);\n    return fract(p.x*p.y);\n}\n\nfloat[14] Hash21List(vec2 p){\n    float[14] res;\n    \n    float x = 0.;\n    for(int i = 0; i<12; i++){\n        x = Hash21(p+x);\n        res[i] = x;\n    }\n    \n    return(res);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    uv.x += sin(iTime*.3);\n    uv.y += iTime*.3;\n    uv *= 5.5;\n    \n    vec2 gv = fract(uv);\n    \n    vec2 id = floor(uv);\n    \n    vec4 col = vec4(0);\n    \n    //\n    \n    float[] rl = Hash21List(id);\n   \n    float x0 = 0.;\n    float x1 = 0.33*rl[0];\n    float x2 = 0.33+0.33*rl[1];\n    float x3 = 1.;\n    \n    if( gv.x >=x0 && gv.x <= x1 ) col = vec4(rl[2],rl[3],rl[4],rl[5]);\n    if( gv.x >=x1 && gv.x <= x2 ) col = vec4(rl[6],rl[7],rl[8],rl[9]);\n    if( gv.x >=x2 && gv.x <= x3 ) col = vec4(rl[10],rl[11],rl[12],rl[13]);\n    \n    \n    \n    // if( gv.x>=0.99 || gv.y>=0.9) col = vec3(1,1,1);\n    //col.rg = gv;\n    \n    //if(uv.x>=.99 || uv.y>=.99) col = vec3(1,0,0);\n    \n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}