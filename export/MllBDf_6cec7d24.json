{"ver":"0.1","info":{"id":"MllBDf","date":"1513747273","viewed":91,"name":"refraction test","username":"mds2","description":"just testing how refraction works","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test","refraction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float eta = 0.5;\nconst vec2 dir = vec2(0.6, 0.8);\nconst vec2 barriers = vec2(0.4, 0.6);\n\nvec2 trace_to(in vec2 start, in vec2 dir, float level) {\n\n    float amount = (level - start.y) / dir.y;\n    return start + dir * amount;\n}\n\nfloat trace(in vec2 start) {\n    vec2 t = start;\n    vec2 n = vec2(0.0, -1.0);\n    vec2 d = normalize(start - vec2(0.0, -0.5));\n    if (t.y < barriers.x) {\n    \tt = trace_to(t, d, barriers.x);\n        \n    }\n    if (t.y < barriers.y) {\n        d = normalize(refract(d, n, eta));\n        t = trace_to(t, d, barriers.y);\n        d = normalize(refract(d, n, 1.0/eta));\n        // d = dir;\n    }\n    t = trace_to(t, d, 1.0);\n    return t.x;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float hits_at = trace(uv);\n    float i = 0.5 + 0.5 * sin(50.0 * hits_at);\n\tfragColor = vec4(vec3(i),1.0);\n}","name":"Image","description":"","type":"image"}]}