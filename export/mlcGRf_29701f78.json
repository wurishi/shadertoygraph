{"ver":"0.1","info":{"id":"mlcGRf","date":"1682883843","viewed":47,"name":"cairo tiling","username":"jakecariello","description":"following tutorial: https://www.youtube.com/watch?v=51LwM2R_e_o&ab_channel=TheArtofCode\n\nclick and drag to see \"rotating\" effect","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["tiling","cairo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ZOOM 4.\n#define PI 3.141592653585793\n\nvec2 rotate2D(vec2 v, float theta) {\n    return v * mat2(\n        cos(theta), -sin(theta),\n        sin(theta),  cos(theta)\n    );\n}\n\nfloat hash21(vec2 p) {\n    p = fract(p*vec2(123.234,234.34));\n    p += dot(p, p + 213.42);\n    return fract(p.x * p.y);\n}\n\nvec3 bezier(vec3 A, vec3 B, vec3 C, vec3 D, float t) {\n  vec3 E = mix(A, B, t);\n  vec3 F = mix(B, C, t);\n  vec3 G = mix(C, D, t);\n\n  vec3 H = mix(E, F, t);\n  vec3 I = mix(F, G, t);\n\n  vec3 P = mix(H, I, t);\n\n  return P;\n}\n\n\nvec3 cairo(vec2 uv, float k) {\n    vec2 id = floor(uv);\n    float check = mod(id.x + id.y, 2.);\n    uv = fract(uv) - .5; // ADD FRACT BACK\n    \n    vec2 p = abs(uv);\n    //vec2 p = uv;\n    \n    if (check >= 1.) p.xy = p.yx;\n    \n    float a = (k - 1.) * .5 * PI;\n    vec2 n = vec2(cos(a), sin(a));\n    float d = dot(p-.5, n);// * p.x;\n    \n    if (d * (check - .5) < 0.)\n        id.x += sign(uv.x) * .5;\n    else\n        id.y += sign(uv.y) * .5;\n    \n    d = min(d, p.x);\n    d = max(d, -p.y);\n    d = abs(d);\n    d = min(d, dot(p-.5, vec2(n.y, -n.x)));\n    \n    return vec3(id, d);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ZOOM *(fragCoord - .5*iResolution.xy) / iResolution.y;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    \n    //uv *= iTime / 100.;\n    //uv = rotate2D(uv, 2. * PI * iTime / 100.);\n    \n    float cairoK = mouse.y;//1.;//(sin(2. * PI * iTime / 10.) + 1.) / 2.;\n\n    vec3 col = vec3(0.);\n    vec3 c = cairo(uv, cairoK);\n    col += c.z;\n \n    col *= 1. + sin(hash21(c.xy) * 2. * PI + iTime);\n    col += smoothstep(.01, .0, c.z-.005);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}