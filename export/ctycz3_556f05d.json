{"ver":"0.1","info":{"id":"ctycz3","date":"1700469375","viewed":376,"name":"styled fire via SHARD NOISE","username":"ENDESGA","description":"using SHARD NOISE to create a fire","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["3d","noise","gradient","shard"],"hasliked":0,"parentid":"dlKyWw","parentname":"SHARD NOISE"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// @ENDESGA\n// splat-field forked from https://www.shadertoy.com/view/clGyWm\n\n#define R iResolution\n#define T (iTime)\n\nvec3 hash(vec3 p)\n{\n    p = vec3(dot(p, vec3(127.1, 311.7, 74.7)), dot(p, vec3(269.5,183.3,246.1)), dot(p, vec3(113.5, 271.9, 124.6)));\n    p = fract(sin(p) * 43758.5453123);\n    return p;\n}\n\n#define tau 6.283185307179586\n\nfloat shard_noise(in vec3 p, in float sharpness) {\n    vec3 ip = floor(p);\n    vec3 fp = fract(p);\n\n    float v = 0., t = 0.;\n    for (int z = -1; z <= 1; z++) {\n        for (int y = -1; y <= 1; y++) {\n            for (int x = -1; x <= 1; x++) {\n                vec3 o = vec3(x, y, z);\n                vec3 io = ip + o;\n                vec3 h = hash(io);\n                vec3 r = fp - (o + h);\n\n                float w = exp2(-2.*tau*dot(r, r)); // * 2.\n                // tanh deconstruction and optimization by @Xor\n                float s = sharpness * dot(r, hash(io + vec3(11, 31, 47)) - 0.5);\n                v += w * s*inversesqrt(1.0+s*s);\n                t += w;\n            }\n        }\n    }\n    return ((v / t) * .5) + .5;\n}\n\nvec3 fire(float value) {\n    vec3 y = vec3(1.0, 1., 0.333);\n    vec3 o = vec3(1.0, 0.5, 0.0);\n    vec3 r = vec3(1.0, 0.5, 0.0);\n    vec3 m = vec3(.5, .125, 0.0);\n    vec3 b = vec3(0.0, 0.0, 0.0);\n\n    vec3 color;\n    if (value > 0.75) {\n        color = mix(o,y,  (value - 0.75) * 4.0);\n    } else if (value > 0.5) {\n        color = mix(r,o,  (value - 0.5) * 4.0);\n    } else if (value > 0.25) {\n        color = mix(m,r,  (value - 0.25) * 4.0);\n    } else {\n        color = mix(b,m,  value * 4.0);\n    }\n\n    return color;\n}\n\n\n\nvoid mainImage( out vec4 C, in vec2 F )\n{\n    vec2 p = F/R.y;\n    vec3 uv = vec3( p.x - (T*.125) + (sin((p.y * tau) + (T * .5)) * .03125), p.y - (((sin(T)*.25)) * p.y) - (T * .5), T * .125 );\n    bool click = iMouse.z>0.;\n\n    float fade = (p.y * 20.) + 1.;\n    \n    float c =\n            (shard_noise(16.0*uv,fade) * .25) +\n            (shard_noise(8.0*uv,fade) * .25) +\n            (shard_noise(4.0*uv,fade) * .5);\n    c = c * (1.-p.y) * pow(1.-abs(((F.x/R.x)*2.)-1.),4.) * 2.;\n    c *= c;\n    C = vec4(fire(c),1.);\n    C *= C * pow(1.-abs(((F.x/R.x)*2.)-1.),2.) * 3.;\n    C.gb *= pow(1.-p.y,10.);\n}","name":"Image","description":"","type":"image"}]}