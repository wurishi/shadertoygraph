{"ver":"0.1","info":{"id":"4tsSW7","date":"1437164523","viewed":537,"name":"Smooth+noise filter","username":"olano","description":"Test of some noise and filter smoothing. Could use a cheaper hash/noise.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["textureblending"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"const vec2 texSize = vec2(64,64);\n\n// gradient noise from iq\nfloat hash( in vec2 p ) \n{\n    return fract(sin(p.x*15.32758341+p.y*39.786792357-7.5312) * 43758.236237153);\n}\nvec2 hash2(vec2 p)\n{\n\treturn 2.*vec2(hash(p*.754),hash(1.5743*p.yx+4.5891))-1.;\n}\n\nfloat noise(vec2 p)\n{\n    vec2 f = fract( p ), i = p-f, u = (3.-2.*f)*f*f;\n\n    return mix( mix( dot( hash2( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash2( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash2( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash2( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 UV = .1 * fragCoord.xy / iResolution.xy; \n    \n    UV = UV*texSize + 0.5;\t\t\t\t\t// convert to texels\n    UV += .2*noise(4.*UV);\t\t\t\t\t// add noise\n    vec2 fUV = fract(UV), iUV = UV - fUV;\t// break into fraction/integer \n    UV = iUV + (3.-2.*fUV)*fUV*fUV;\t\t// smooth between texels\n    UV = (UV - 0.5) / texSize;\t\t\t\t// convert back to texcoords\n    \n\tfragColor = texture(iChannel0, UV);\n}","name":"","description":"","type":"image"}]}