{"ver":"0.1","info":{"id":"7dtyzn","date":"1652979042","viewed":104,"name":"white hole simulation mobile","username":"Gulliver","description":"a code sim","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["simulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STEP 1.\n#define strength .1\n#define fow 1.2\n#define sensitivity .0\n#define speed 0.1\n#define Distance 10.\n\nvec3 newdir(vec3 p, vec3 rd, vec3 ho){\n\n    vec3 fdir = p + ho;\n    vec3 f = normalize(fdir)/(length(fdir)*length(fdir))*strength;\n    \n    rd = rd + f;\n    rd = normalize(rd);\n    \n    return(rd);\n\n}\n\nvec3 Trace(vec3 ro, vec3 rd, vec3 ho) {\n\n    vec3 p = ro;\n    for(int i=0; i<50; i++){\n    \n        p += normalize(rd)*STEP;\n        rd = newdir(p, rd, ho);\n    }\n    \n    \n    vec3 col = texture(iChannel0, normalize(p)).xyz;\n    if (distance(p, ho)<5.) col = vec3(0.);\n    \n    vec2 a = normalize(p.xz);\n    vec3 A = normalize(p);\n    //col = vec3(acos(a.x)*(asin(a.y)/abs(asin(a.y)))/3.14159265359+.5, 0., A.y/2.+.5);\n    //col = texture(iChannel1, col.xz).xyz;\n    return(col);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    float w = fow;\n    vec3 ro = vec3(0.);\n    vec3 rd = normalize(vec3(uv.x, uv.y, w));\n    vec3 ho = vec3(-sin(iTime*speed)*Distance, 0., -cos(iTime*speed)*Distance);\n    \n    \n    float s = sensitivity;\n    vec2 r = (vec2(-iTime,0. ))*speed - (iMouse.xy/iResolution.xy-0.5)*s;\n    \n    \n    rd.yz = vec2(cos(r.y)*rd.y-sin(r.y)*rd.z, sin(r.y)*rd.y+cos(r.y)*rd.z);\n    rd.xz = vec2(cos(r.x)*rd.x-sin(r.x)*rd.z, sin(r.x)*rd.x+cos(r.x)*rd.z);\n    \n    \n    vec3 p = Trace(ro, rd, ho);\n    \n    vec3 col = p;\n    \n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}