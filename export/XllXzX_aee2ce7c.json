{"ver":"0.1","info":{"id":"XllXzX","date":"1438568813","viewed":284,"name":"Circular Inversion","username":"lejeunerenard","description":"Inverse coordinates equation from http://mathworld.wolfram.com/Inversion.html","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["math","inversion","symmetry","circular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"const float radius = .5;\n \nvec2 circInversion ( vec2 center, vec2 x) {\n    x -= center;\n    return center + radius * x / dot(x,x); // via @FabriceNeyret2\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord / R.x;\n    \n    float t = iTime;\n    \n    fragColor = texture( iChannel0,\n      circInversion(.5 * R / R.x, uv)\n        + vec2( sin(t / 10.), cos(.12 * t) )\n    );\n}","name":"","description":"","type":"image"}]}