{"ver":"0.1","info":{"id":"cs2yzw","date":"1687528257","viewed":118,"name":"Blue Dot Grid","username":"pixelbeat","description":"This interactive GLSL shader creates a mesmerizing visual effect of a grid filled with blue dots on a white background. The shader's main feature is the seamless tiling of blue dots that are precisely placed in a grid pattern.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid","sdf","dotted"],"hasliked":0,"parentid":"XlSSWG","parentname":"White-dotted green"},"renderpass":[{"inputs":[],"outputs":[],"code":"const vec4 White = vec4(1.0, 1.0, 1.0, 1.0);\nconst vec4 Blue = vec4(48.0/255.0, 1.0/255.0, 255.0/255.0, 1.0);\n\nconst vec4 Black = vec4(0.0, 0.0, 0.0, 1.0);\nconst float RadiusPx = 2.0;\nconst float SpacePx = 48.0;\n\n// Distance in pixels\nfloat circleDist(vec2 p, vec2 center) {\n    return distance(center, p) - RadiusPx;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // UV\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n   \n    // Find the nearest center\n    vec2 center = SpacePx*floor(fragCoord.xy/SpacePx)+SpacePx/2.0;\n\tvec4 dotColor = mix(Blue, White, clamp(circleDist(fragCoord.xy, center), 0.0, 1.0));\n    \n    // Vignetting\n    fragColor = mix(dotColor, Black, 0.1*distance(uv, vec2(0.5)));\n}\n","name":"Image","description":"","type":"image"}]}