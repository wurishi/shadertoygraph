{"ver":"0.1","info":{"id":"Wdt3D4","date":"1568578883","viewed":181,"name":"Radiant lines","username":"Radiant","description":"My first shader","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float func(float x)\n{\n\treturn sin(x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pi = 3.14159265;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float val = 0.0;\n    vec3 col3 = vec3(0.0);\n    \n    for (float i = 0.0; i < 1.0; i += 0.10)\n    {\n        vec2 p = vec2(uv.x * 5.0 + iTime * (mod(pow(i * 5.0 + 2.0, 3.0), 2.77) - 1.4), uv.y * 5.0 - i * 5.0);\n        vec2 psin = vec2(p.x, func(p.x));\n\n        val += max(0.0, 1.0 - pow(distance(psin, p) * 0.8, 0.12));\n    }\n    \n    vec3 col = vec3(sin(iTime * 1.3 + uv.x), cos(iTime * -0.57 + uv.y), cos(iTime)) / 2.0 + 0.5;\n    col3 = col * pow(val, 3.0);\n    // Output to screen\n    fragColor = vec4(col3, 1.0);\n}","name":"Image","description":"","type":"image"}]}