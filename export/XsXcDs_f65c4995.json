{"ver":"0.1","info":{"id":"XsXcDs","date":"1490378586","viewed":135,"name":"Mouse","username":"TsinglW","description":"Lovely face.\nGithub:https://github.com/ROOOO/Shadertoy","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["face","lovely"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EARSSIZE 0.25\n#define NOSESIZE 0.05\n#define MOUSTACHELENGTH 0.3\n#define ANTIALIAS 0.01\n#define PI 3.141592654\n\nvec2 scale(vec2 v, vec2 s) {\n\treturn mat2(s.x, 0, 0, s.y) * v;\n}\n\nvec2 rot(vec2 v, float angle) {\n\treturn mat2(cos(angle), -sin(angle), sin(angle), cos(angle)) * v;\n}\n\nvec2 animate(vec2 uv) {\n    float tt = mod(iTime, 1.5) / 1.5;  \n    float ss = pow(tt, 0.2) * 0.5 + 0.5;  \n    ss = 1.0 + ss*0.5*sin(tt * PI * 2.0 * 3.0 + uv.y*0.5)*exp(-tt*4.0); \n    uv *= vec2(0.5,1.2) + ss * vec2(0.5,-0.2); \n\treturn uv;\n}\n\nvec4 heart(vec2 uv, vec2 center) {\n    vec2 p = uv - center;\n    float a = atan(p.x, p.y) / PI;\n    float r = length(p) / EARSSIZE;\n    float h = abs(a);\n    float d = (13.0 * h - 22.0 * h * h + 10.0 * h * h * h) / (6.0 - 5.0 * h);\n\tfloat t = smoothstep(-ANTIALIAS, ANTIALIAS, r - d);\n    return vec4(0.8, 0.3, 0.4, 1.0 - t);\n}\n\nvec4 ear(vec2 uv, vec2 center) {\n    float d1 = length(uv - center) - EARSSIZE;\n    float t1 = smoothstep(0.0, ANTIALIAS, d1);\n    float r = 4.5 * EARSSIZE;\n    float d2 = length(uv - vec2(center.x, center.y - r)) - 4.0 * EARSSIZE;\n    float t2 = smoothstep(0.0, ANTIALIAS, d2);\n\treturn vec4(0.3, 0.3, 0.3, d2 > 0.0 ? (1.0 - t1) : t2);\n}\n\nvec4 nose(vec2 uv, vec2 center) {\n    float d = length(uv - center);\n    float t = smoothstep(NOSESIZE, NOSESIZE + ANTIALIAS, d);\n\treturn vec4(0.0, .0, .0, 1.0 - t);\n}\n\nvec4 moustache(vec2 uv, vec2 p) {\n    uv.x = abs(uv.x);\n    float r = length(uv - p);\n    vec2 m = vec2(uv.x, sin(uv.x / MOUSTACHELENGTH * 2.0 * PI - iTime * 5.) * r);\n    m.y /= 5.0;\n    float d = length(uv - m);\n    float t = smoothstep(0.01, 0.01 + ANTIALIAS, d);\n    t = uv.x < p.x || uv.x > p.x + MOUSTACHELENGTH ? 1.0 : t;\n\treturn vec4(1.0, 1.0, 1.0, 1.0 - t);\n}\n\nvec4 mulNoise(vec4 col, float f) {\n    vec3 c = col.rgb * f;\n\treturn vec4(c, col.a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / min(iResolution.x, iResolution.y);\n    uv.y += 0.25;\n      \n    vec4 bgCol = vec4(0.7, 0.6, 0.5, 1.0);\n    \n    vec4 nCol = nose(uv, vec2(0.0, 0.0));\n    \n    vec2 m1UV = rot(uv, 30.0 / 180.0);\n    vec4 m1Col = moustache(m1UV, vec2(MOUSTACHELENGTH, 0.0));\n    vec2 m2UV = rot(uv, -30.0 / 180.0);\n    vec4 m2Col = moustache(m2UV, vec2(MOUSTACHELENGTH, 0.0));\n    \n    vec2 e1UV = rot(uv, -PI / 5.0);\n    e1UV = scale(e1UV, vec2(1.0, 1.1));\n    vec2 e2UV = rot(uv, PI / 5.0);\n    e2UV = scale(e2UV, vec2(1.0, 1.1));\n\n    e1UV = animate(e1UV);\n    e2UV = animate(e2UV);\n    \n    vec4 e1Col = ear(e1UV, vec2(0.0, 0.8));\n    vec4 e1hCol = heart(e1UV, vec2(0.0, 0.93));\n    vec4 e2Col = ear(e2UV, vec2(0.0, 0.8));\n    vec4 e2hCol = heart(e2UV, vec2(0.0, 0.93));\n    \n    vec4 col = bgCol;\n    col = mix(col, nCol, nCol.a);\n    col = mix(col, m1Col, m1Col.a);\n\tcol = mix(col, m2Col, m2Col.a);\n\tcol = mix(col, e1Col, e1Col.a);\n    col = mix(col, e1hCol, e1hCol.a);\n\tcol = mix(col, e2Col, e2Col.a);\n    col = mix(col, e2hCol, e2hCol.a);\n\n\tfragColor = col;\n}","name":"Image","description":"","type":"image"}]}