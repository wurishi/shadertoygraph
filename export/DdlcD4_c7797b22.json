{"ver":"0.1","info":{"id":"DdlcD4","date":"1686822717","viewed":62,"name":"MagicSphere","username":"samsim","description":"Variation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette1(float t)\n{\n     vec3 a = vec3(0.5,0.5,0.5);\n     vec3 b = vec3(0.5,0.5,0.5);\n     vec3 c = vec3(-3.142, 1.000, 1.000);\n     vec3 d = vec3(-2.022, 0.618, 0.667);\n     return a + b * cos(6.28318 * (c * t + d));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    //in one step\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy )/iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    //Zoom\n    float zoom = 1.;\n    //iteration for creating multiple pattern\n    \n        //add space fration and obv center it like before\n   \n    for(float i=0.0; i < 4.0; i++){\n         uv = fract(uv * 1.5) - 0.5;\n         float d = length(uv) * atanh(length(uv0)) * zoom;\n         vec3 col = palette1(length(uv0)  + i * 0.5 + iTime * 0.3);\n\n        d= sin(d * 4. + iTime)/4.;\n        //d = abs(d);\n        //adding pow increase the contrast\n        d = pow(0.01/d, 1.2);\n\n        finalColor +=  col * d;\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(finalColor,1);\n}","name":"Image","description":"","type":"image"}]}