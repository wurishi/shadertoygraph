{"ver":"0.1","info":{"id":"flBXDh","date":"1627496691","viewed":196,"name":"Ordered Dithering 3x3","username":"vctrgbrl","description":"More dithering","likes":3,"published":1,"flags":2,"usePreview":0,"tags":["dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 col = texture(iChannel0, uv);\n    // col = vec4(0.5);\n    col = vec4( vec3( (col.r+col.g+col.b)/3.0), 1.0);\n    \n    float size = 2.0;\n    \n    float x = floor(mod(fragCoord.x,size));\n    float y = floor(mod(fragCoord.y,size));\n    \n    vec3 outt = vec3(0.);\n    \n    for(float i = 0.0; i<size; i++) {   \n        for(float j = 0.0; j<size; j++) {\n            if(x==j && y==i) {\n                outt += step(1.0 - (i*size+j)/(size*size), col.rgb);\n            }    \n        }\n    }\n    // Output to screen\n    fragColor = vec4(outt,1.0);\n}","name":"Image","description":"","type":"image"}]}