{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"webcam","id":"4sf3zn","filepath":"/presets/webcam.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"float random(float x) {\n    return fract(sin(x) * 10000.);\n}\n\nfloat noise(vec2 p) {\n    return random(p.x + p.y * 10000.);\n}\n\nvec2 sw(vec2 p) { return vec2(floor(p.x), floor(p.y)); }\nvec2 se(vec2 p) { return vec2(ceil(p.x), floor(p.y)); }\nvec2 nw(vec2 p) { return vec2(floor(p.x), ceil(p.y)); }\nvec2 ne(vec2 p) { return vec2(ceil(p.x), ceil(p.y)); }\n\nfloat smoothNoise(vec2 p) {\n\n    vec2 interp = smoothstep(0., 1., fract(p));\n    float s = mix(noise(sw(p)), noise(se(p)), interp.x);\n    float n = mix(noise(nw(p)), noise(ne(p)), interp.x);\n    return mix(s, n, interp.y);\n        \n}\n\nfloat speed = 2.5;\nfloat power = 0.1;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 noise = vec2(\n        smoothNoise(5. * uv + vec2(0., speed * time + 5.)),\n        smoothNoise(3. * uv + vec2(0., speed * time + 1.))\n    ) - 0.5;\n    uv += noise * power;\n    \n    \n    uv = abs(uv);\n    uv = step(1., uv) * 2. + sign(1.-uv) * uv;\n\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    \n    fragColor = vec4(col, 1.);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":true,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"fdBXzW","date":"1734012403","viewed":28,"name":"Base.No.16","username":"avartation","description":"sdfg","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["sdfg"],"hasliked":0,"parentid":"","parentname":""}}