{"ver":"0.1","info":{"id":"tdlczs","date":"1585406282","viewed":68,"name":"Mandelbrot - aquova","username":"aquova","description":"My first shader, just testing things out.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float power(float base, int exponent) {\n    float val = 1.0;\n    for (int i = 0; i < exponent; i++) {\n        val *= base;\n    }\n    return val;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 c;\n    // Values arbitrarily chosen to center plot\n    c.x = fragCoord.x / 800.0 * 4.0 - 2.2;\n    c.y = fragCoord.y / 800.0 * 4.0 - 1.1;\n    \n    vec2 z = c;\n    float max_iterations = 100.0;\n    float i;\n    // Compute Mandelbrot calculation\n    for (i = 0.0; i < max_iterations; i++) {\n        z = vec2(power(z.x, 2) - power(z.y, 2), 2.0 * z.x * z.y) + c;\n        if (length(z) > 2.0) {\n            break;\n        }\n    }\n    \n    // Depending on iteration count, color\n    if (i < max_iterations / 2.0) {\n        float red = i / (max_iterations / 2.0);\n        fragColor = vec4(red, 0.0, 0.0, 1.0);\n    } else if (i < max_iterations) {\n        float other = i / max_iterations;\n        fragColor = vec4(1.0, other, other, 1.0);\n    } else {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}\n\n","name":"Image","description":"","type":"image"}]}