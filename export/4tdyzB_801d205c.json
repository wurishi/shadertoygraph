{"ver":"0.1","info":{"id":"4tdyzB","date":"1533047488","viewed":191,"name":"electro visualizer X","username":"archibate","description":"visualize the eletric field produced by two quantity of electric charge. like three lamp! doesn't it?\nmouse can be used to move the third lamp.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","field","physics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cross2d(vec2 a, vec2 b)\n{\n    return a.x * b.y - a.y * b.x;\n}\n\nvec2 rot90(vec2 a)\n{\n    return vec2(a.y, -a.x);\n}\n\n#define CELL_SIZE 12. // try other values\n\nvec2 trans(vec2 p)\n{\n    p -= .5 * iResolution.xy;\n    p /= CELL_SIZE;\n    return p;\n}\n\nvec2 polar(float a)\n{\n    return vec2(cos(a), sin(a));\n}\n\nvec2 field(vec2 d)\n{\n    return d / pow(dot(d,d),1.5);\n}\n\nvoid mainImage( out vec4 O, in vec2 UU )\n{\n    vec2 U = trans(UU);\n    \n    vec2 u = -.5+mod(U+.5, 1.);\n    \n    float rad = (6. + 2.*sin(iTime*.6));\n    vec2 off = rad * polar(7.*iTime/rad);\n    vec2 f = field(U - off) + field(U + off);\n    f += (1. + .5 * sin(iTime * .6)) * field(U - trans(iMouse.xy));\n    \n#define bord(w,x) smoothstep(w+.06,w-.06,x);\n    \n    float w = max(.0,.3*sqrt(log(1.+length(f))));\n    float o = bord(w,abs(dot(u, normalize(f))));\n    float p = bord(w,abs(cross2d(u, normalize(f))));\n    // try these!\n    vec3 oc=vec3(1), pc=vec3(0);\n    //vec3 oc=vec3(0), pc=vec3(1);\n    //vec3 oc=vec3(1.,0.,.5), pc=vec3(0.,1.,.5); // try some other fantastic colors!!!\n    O.rgb = o*oc + p*pc;\n    #if 0\n    vec4 old = texture(iChannel0, UU/iResolution.xy);\n    O.g = mix(O.g, old.b, .2);\n    #endif\n}","name":"Image","description":"","type":"image"}]}