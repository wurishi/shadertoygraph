{"ver":"0.1","info":{"id":"wdVczd","date":"1603560332","viewed":313,"name":"first shader, hello circle","username":"aylictal","description":"i guess if theres a hello world for this, this is the type.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["circle","colorchange","blurchange"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 pos, float radius, float blur){\n    \n    float d = length(uv-pos);\n    float c = smoothstep(radius, radius-blur, d);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat t = iTime;\n    \n    uv -= .5; // converts range from 0=>1 to -.5=>.5\n    uv.x *= iResolution.x/iResolution.y; //convert aspect ratio to viewing display\n\tfloat blur = abs(sin(t));\n    //normalized cartesian coordinates where 0 is center of screen, range -1.0 => 1.0\n    vec2 pos = vec2(0.0, 0.0);\n    float mask = circle(uv, pos, .5, blur);\n    vec3 color = vec3(sin(t), cos(t), atan(t)) * mask;\n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}