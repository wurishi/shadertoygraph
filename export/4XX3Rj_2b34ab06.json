{"ver":"0.1","info":{"id":"4XX3Rj","date":"1707654643","viewed":214,"name":"Kinetic Pupils","username":"altunenes","description":"Based on the formula: :)\nhttps://twitter.com/Pixelated_Donut/status/1756587677984461254\n","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["golf","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//ref:https://twitter.com/Pixelated_Donut/status/1756587677984461254\n//ronwnor, @Pixelated_Donut (twitter)\n\n//158 by FabriceNeyret (with antialiasing)\nvoid mainImage(out vec4 c, vec2 f){\n    vec2 R = iResolution.xy,\n         v = sin( 7.*(f+f-R) / R.y + iTime );\n    c = vec4( sin( 4.*atan(v.y,v.x) + 2.*iTime - 16.*length(v) ) - .1 );\n    c = .5 + c/fwidth(c);\n}\n\n/*\n145 by FabriceNeyret (without aa)\nvoid mainImage(out vec4 c, vec2 f){\n    vec2 R = iResolution.xy,\n         v = sin( 7.*(f+f-R) / R.y + iTime );\n    c = vec4( sin( 4.*atan(v.y,v.x) + 2.*iTime - 16.*length(v) ) > .1 );\n}\n*/\n\n/*\n185 by me:\n\nvoid mainImage(out vec4 c,in vec2 f){\n    vec2 u=14.*(f-iResolution.xy*.5)/iResolution.y,v=sin(u+iTime);\n    float p=sin(4.*atan(v.y,v.x)+iTime-16.*length(v)+iTime);\n    c=vec4(vec3(p<=.1?0.:1.),1.);\n}\n\n//\n\n\n//before the golf:\n/*\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 14.0*(fragCoord - iResolution.xy * 0.5) / iResolution.y;\n    float sinX = sin(uv.x + iTime);\n    float sinY = sin(uv.y + iTime);\n    float angle = atan(sinY, sinX) + iTime;\n    float magnitude = length(vec2(sinX, sinY));\n    /formula, remove all itimes for the static output \n    float pattern = sin(4.0 * angle - 16.0 * magnitude + iTime);\n    vec3 color = pattern <= .1 ? vec3(0.0) : vec3(1.0);\n    fragColor = vec4(color, 1.0);\n}\n*/","name":"Image","description":"","type":"image"}]}