{"ver":"0.1","info":{"id":"NlfXRr","date":"1625050316","viewed":43,"name":"eugene_konstantinov","username":"EugeneKonstantinov","description":"namw","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["name"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nmat2 rotate(float angle) {\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nfloat discr(float x) {\n    return x < 0.0 ? 1.0 : 0.0;\n}\n\nvec3 paintColor = vec3(0.0, 0.0, 0.0);\nfloat letterW = 0.05;\nfloat letterH = 0.05;\n\nvec3 Rect(vec2 pos, float widthScale, float base, float offsetX, float offsetY, float angle) {\n    pos.x *= (iResolution.x / iResolution.y);\n    pos.x += offsetX;\n    pos.y += offsetY;\n    pos = rotate(radians(angle)) * pos;\n    pos.x -= offsetX;\n    pos.y -= offsetY;\n    return paintColor * discr((max(abs((pos.x / widthScale) + offsetX), abs(pos.y + offsetY)) - base)); \n}\n\nvec3 normalizeColor(vec3 color) {\n    return vec3(color.x / 250.0, color.y / 250.0, color.z / 250.0);\n}\n\nvec3 LetterE(vec2 pos, float offsetX, float offsetY) {\n    offsetX = (offsetX * letterW);\n    offsetY = (offsetY * letterH);\n    float col = 0.0;\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX, offsetY, .0).x; //top h\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX, offsetY - letterH, .0).x; //mid h\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX, offsetY - letterH * 2.0, .0).x; // bot h\n    \n    col += Rect(pos, 0.1, letterW, offsetX * 100.0 - letterW * 10.0 , offsetY - letterH, 0.0).x; //left v\n    return col > 0.0 ? paintColor : vec3(.0, .0, .0);\n}\n\nvec3 LetterU(vec2 pos, float offsetX, float offsetY) {\n    offsetX = (offsetX * letterW);\n    offsetY = (offsetY * letterH);\n    float col = 0.0;\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX, offsetY - letterH * 2.0, 0.0).x;\n    \n    col += Rect(pos, 0.1, letterW, offsetX * 100.0 - 10.0 * letterW, offsetY - letterH, 0.0).x;\n    col += Rect(pos, 0.1, letterW, offsetX * 100.0 + 10.0 * letterW, offsetY - letterH, 0.0).x; // right v\n    return col > 0.0 ? paintColor : vec3(.0, .0, .0);\n}\n\nvec3 LetterG(vec2 pos, float offsetX, float offsetY) {\n    offsetX = (offsetX * letterW);\n    offsetY = (offsetY * letterH);\n    float col = 0.0;\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX, offsetY, 0.0).x; //top h\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX, offsetY - letterH * 2.0, 0.0).x; // bot h\n    col += Rect(pos, 5.0, letterW / 10.0, offsetX + letterW * .7, offsetY - letterH, 0.0).x; //mid h, right half\n    \n    col += Rect(pos, 0.1, letterW, offsetX * 100.0 - letterW * 10.0 , offsetY - letterH, 0.0).x; //left v\n    col += Rect(pos, 0.1, letterW / 2.0, offsetX + 70.0 * letterW, offsetY - letterH * 1.5, 0.0).x; // right v, bot half\n    return col > 0.0 ? paintColor : vec3(.0, .0, .0);\n}\n\nvec3 LetterN(vec2 pos, float offsetX, float offsetY) {\n    offsetX = (offsetX * letterW);\n    offsetY = (offsetY * letterH);\n    float col = 0.0;\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX * 10.0, offsetY, 0.0).x; //top h\n    col += Rect(pos, 0.1, letterW, offsetX * 1000.0 - letterW * 10.0 , offsetY - letterH, 0.0).x; //left v\n    col += Rect(pos, 0.1, letterW, offsetX * 1000.0 + 10.0 * letterW, offsetY - letterH, 0.0).x; // right v\n    return col > 0.0 ? paintColor : vec3(.0, .0, .0);\n}\n\nvec3 LetterK(vec2 pos, float offsetX, float offsetY) {\n    offsetX = (offsetX * letterW);\n    offsetY = (offsetY * letterH);\n    float col = 0.0;\n    col += Rect(pos, 0.1, letterW, offsetX * 1000.0 - letterW * 10.0 , offsetY - letterH, 0.0).x; //left v\n    col += Rect(pos, 0.1, letterW / 1.6, offsetX - letterW * 2.0, offsetY - letterH * 2.7, 45.0).x; //left v\n    col += Rect(pos, 0.1, letterW / 1.6, offsetX - letterW * 2.0, offsetY + letterH * 0.7, -45.0).x; //left v\n    return col > 0.0 ? paintColor : vec3(.0, .0, .0);\n}\n\nvec3 LetterO(vec2 pos, float offsetX, float offsetY) {\n    offsetX = (offsetX * letterW);\n    offsetY = (offsetY * letterH);\n    float col = 0.0;\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX, offsetY - letterH * 2.0, 0.0).x;\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX, offsetY, .0).x; //top h\n    \n    col += Rect(pos, 0.1, letterW, offsetX * 100.0 - 10.0 * letterW, offsetY - letterH, 0.0).x;\n    col += Rect(pos, 0.1, letterW, offsetX * 100.0 + 10.0 * letterW, offsetY - letterH, 0.0).x; // right v\n    return col > 0.0 ? paintColor : vec3(.0, .0, .0);\n}\n\nvec3 LetterS(vec2 pos, float offsetX, float offsetY) {\n    offsetX = (offsetX * letterW);\n    offsetY = (offsetY * letterH);\n    float col = 0.0;\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX, offsetY - letterH * 2.0, 0.0).x;\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX, offsetY, .0).x; //top h\n    \n    col += Rect(pos, 0.1, letterW / 2.0, offsetX * 100.0 - 10.0 * letterW, offsetY - 0.5 * letterH, 0.0).x;\n    col += Rect(pos, 0.1, letterW / 2.0, offsetX * 100.0 + 10.0 * letterW, offsetY - 1.5 * letterH, 0.0).x; // right v\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX, offsetY - letterH, .0).x; //mid h\n    return col > 0.0 ? paintColor : vec3(.0, .0, .0);\n}\n\nvec3 LetterT(vec2 pos, float offsetX, float offsetY) {\n    offsetX = (offsetX * letterW);\n    offsetY = (offsetY * letterH);\n    float col = 0.0;\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX * 10.0, offsetY, .0).x; //top h\n    col += Rect(pos, 0.1, letterW, offsetX * 1000.0, offsetY - letterH, 0.0).x; //left v\n    return col > 0.0 ? paintColor : vec3(.0, .0, .0);\n}\n\nvec3 LetterA(vec2 pos, float offsetX, float offsetY) {\n    offsetX = (offsetX * letterW);\n    offsetY = (offsetY * letterH);\n    float col = 0.0;\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX * 12.0 + letterW * .8, offsetY - letterH * 21.0, 60.0).x; //top h\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX * 12.0 + letterW * 1.0, offsetY + letterH * 21.0, -60.0).x; //top h\n    col += Rect(pos, 5.0, letterW / 10.0, offsetX + letterW * 2.8, offsetY - letterH, 0.0).x;\n    return col > 0.0 ? paintColor : vec3(.0, .0, .0);\n}\n\nvec3 LetterI(vec2 pos, float offsetX, float offsetY) {\n    offsetX = (offsetX * letterW);\n    offsetY = (offsetY * letterH);\n    float col = 0.0;\n    col += Rect(pos, 0.1, letterW, offsetX * 1000.0 - letterW * 10.0 , offsetY - letterH, 0.0).x; //left v\n    return col > 0.0 ? paintColor : vec3(.0, .0, .0);\n}\n\nvec3 LetterV(vec2 pos, float offsetX, float offsetY) {\n    offsetX = (offsetX * letterW);\n    offsetY = (offsetY * letterH);\n    float col = 0.0;\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX * 12.0 + letterW * 6.0, offsetY + letterH * 46.0, -60.0).x; //top h\n    col += Rect(pos, 10.0, letterW / 10.0, offsetX * 12.0 + letterW * 6.2, offsetY - letterH * 49.0, 60.0).x; //top h\n    return col > 0.0 ? paintColor : vec3(.0, .0, .0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 pixel = 1.0 - 2.0 * fragCoord/iResolution.xy;\n    vec2 mouse = 1.0 - 2.0 * iMouse.xy/iResolution.xy;  \n\n    paintColor = normalizeColor(vec3(17.0, 171.0, 9.0));\n        \n    vec3 col; \n    \n    //name\n    col += LetterE(pixel, .0, .0);\n    col += LetterU(pixel, .3, .0);\n    col += LetterG(pixel, .6, .0);\n    col += LetterE(pixel, .9, .0);\n    col += LetterN(pixel, .12, 0.0);\n    col += LetterE(pixel, 1.45, .0);\n    //surname\n    col += LetterK(pixel, .0, -3.0);\n    col += LetterO(pixel, 0.3, -3.0);\n    col += LetterN(pixel, .06, -3.0);\n    col += LetterS(pixel, .9, -3.0);\n    col += LetterT(pixel, .12, -3.0);\n    col += LetterA(pixel, .15, -3.0);\n    col += LetterN(pixel, .18, -3.0);\n    col += LetterT(pixel, .21, -3.0);\n    col += LetterI(pixel, .24, -3.0);\n    col += LetterN(pixel, .27, -3.0);\n    col += LetterO(pixel, 3.0, -3.0);\n    col += LetterV(pixel, 0.0, -3.0);\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}