{"ver":"0.1","info":{"id":"4XsSDB","date":"1709924243","viewed":68,"name":"Voronoi with Minkowski Metric","username":"dharper","description":"A Voronoi diagram but instead of using euclidean distance I used the Minkowski metric\n( |x1 - x2|^p + |y1 - y2|^p )^(1/p)\n\nCLICK to move one of them :)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","geometry","taxicab"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    \n    float x[20] = float[20](0.5397884032634327,\n0.2561836282534201,\n0.16570726436366046,\n0.6520202989762911,\n0.7908820607223849,\n0.44683720260266024,\n0.9345755307698183,\n0.5153860915079286,\n0.6484218191116142,\n0.8019179188202942,\n0.9509014528510717,\n0.4719723054038384,\n0.6750314503021486,\n0.02330882850176974,\n0.7411206488078179,\nmouse.x,\n0.09754869536197219,\n0.0758715570103834,\n0.2387086585838062,\n0.6545656022050824);\n    float y[20] = float[20](0.012662629300997597,\n0.8881803707590822,\n0.18443026799995688,\n0.5440264783874238,\n0.17349184997755196,\n0.6243644430321129,\n0.11255484553740303,\n0.05597001788231737,\n0.046718900448319056,\n0.9925323489460123,\n0.19943368709136955,\n0.11073049237218913,\n0.278923909458181,\n0.07685007900491103,\n0.3140542983358552,\nmouse.y,\n0.872449748972793,\n0.03765312526132347,\n0.9842817035312641,\n0.07226969246129589);\n    \n    float cR[20] = float[20](0.6989618577709962,\n0.8041903463731523,\n0.7632134935355355,\n0.44526875682653255,\n0.26749407878850506,\n0.7348010467068099,\n0.008947304815450141,\n0.9988980604649853,\n0.5058537480864981,\n0.39799712647041807,\n0.43160469489637276,\n0.8076048517528107,\n0.9636405474035614,\n0.3823547798981537,\n0.7785459451887475,\n0.03612429894493707,\n0.06540003455661203,\n0.5312685716784918,\n0.7256176834516348,\n0.9026245374679726);\n    float cG[20] = float[20](0.7063563568028027,\n0.5347379920835893,\n0.4453806105389544,\n0.8546869904803676,\n0.48111199072115074,\n0.9175578373801807,\n0.6420260733100049,\n0.4671430216637307,\n0.33305373204314226,\n0.16520519107183462,\n0.1802823613431036,\n0.31221332608919317,\n0.7347216373277059,\n0.004056833820719641,\n0.9164266993844239,\n0.3449355492482574,\n0.3086780807310321,\n0.8404623145260323,\n0.9478527576925992,\n0.9282914388390887);\n    float cB[20] = float[20](0.6347374173825757,\n0.09773250306287806,\n0.7320521665142565,\n0.06765923725969747,\n0.9458386713374516,\n0.7960698208493853,\n0.7316091366806599,\n0.6877241104762244,\n0.2895209712544823,\n0.7487027857557769,\n0.15795141486242936,\n0.4941334875854746,\n0.37164560697546445,\n0.7809274475218517,\n0.26709346349608554,\n0.6681163313879198,\n0.16977656135562724,\n0.8730893973692568,\n0.7790096536830063,\n0.55130296473219);\n    \n    int smallest = 0;\n    float smallestdist = 1000000.0;\n    float dx = 0.0;\n    float dy = 0.0;\n    float dist = 0.0;\n    \n    float p = 1.0 + (iTime/5.0);\n    float invp = 1.0/p;\n    \n    float chebdist = 0.0;\n    \n    for(int i=0;i<20;i++)\n    {\n      dx = abs(x[i]*(iResolution.x/iResolution.y) - uv.x);\n      dy = abs(y[i] - uv.y);\n      dist = pow(pow(dx,p) + pow(dy,p),invp);\n      \n      if(dist < smallestdist)\n      {\n          chebdist = max(dx,dy);\n          smallestdist = dist;\n          smallest = i;\n      }\n    }\n    \n    vec3 col = vec3(cR[smallest],cG[smallest],cB[smallest]);\n    fragColor = vec4(col,1.0);\n    if (chebdist < 0.005)\n    {\n        fragColor = vec4(0.0,0.0,0.0,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}