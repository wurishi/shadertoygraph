{"ver":"0.1","info":{"id":"fsBfDW","date":"1646288080","viewed":109,"name":"Spherical harmonics shader","username":"lauraann","description":"Spherical harmonic relighting.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["relighting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float z = iTime;\n\n    float polar = PI/8.;\n    float azimuth = PI/2. * 3.*z;\n    float azimuth2 = PI/2. * z;\n    float polar2 = PI/2. * 3.*z;\n    \n    vec3 coord = vec3(sin(polar)*cos(azimuth),sin(polar)*sin(azimuth),cos(polar));\n    float basis[9];\n    basis[0] = Y00;\n    basis[1] = -Y1*coord.y;\n    basis[2] = Y1*coord.z;\n    basis[3] = -Y1*coord.x;\n    basis[4] = Y2*coord.x*coord.y;\n    basis[5] = -Y2*coord.y*coord.z;\n    basis[6] = Y20*(3.*pow(coord.z,2.)-1.);\n    basis[7] = -Y2*coord.x*coord.z;\n    basis[8] = Y22*(pow(coord.x,2.)-pow(coord.y,2.));\n    \n    coord = vec3(sin(polar)*cos(azimuth2),sin(polar)*sin(azimuth2),cos(polar));\n    float basis2[9];\n    basis2[0] = Y00;\n    basis2[1] = -Y1*coord.y;\n    basis2[2] = Y1*coord.z;\n    basis2[3] = -Y1*coord.x;\n    basis2[4] = Y2*coord.x*coord.y;\n    basis2[5] = -Y2*coord.y*coord.z;\n    basis2[6] = Y20*(3.*pow(coord.z,2.)-1.);\n    basis2[7] = -Y2*coord.x*coord.z;\n    basis2[8] = Y22*(pow(coord.x,2.)-pow(coord.y,2.));\n    \n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n    uv.y /= 1.13* 512./450.;\n    uv.y += .06;\n    vec2 uv_new;\n    vec2 m; \n    vec2 a;\n    vec3 result = vec3(0.);\n    vec3 result2 = vec3(0.);\n    \n    m = vec2(1., 1./9.);\n    a = vec2(0.);\n    \n    vec3 mask = texture(iChannel1, vec2(uv.x,uv.y/9.)).xyz;\n    \n    for(int i=0;i<9;i++)\n    {\n      vec3 coeff = texture(iChannel0, uv_new).xyz;\n      \n      result += (atanh(2. * coeff - 1.))*basis[8-i];\n      result2 += (atanh(2. * coeff - 1.)*basis2[8-i]);\n      a+=vec2(0.,1./9.);\n      uv_new = uv*m+a;\n    }\n    \n    result = tanh(.49 + result) / 2. + .5;\n    if (true){//(int(z / 3.) % 2 == 0) {\n        result2 = tanh(.49 + result2) / 2. + .5;\n    } else result2 = vec3(0.);\n    \n    vec3 final = result + .5 * result2;\n    if (mask == vec3(0.)) final = vec3(.9);\n    \n\tfragColor = vec4(final,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define PI 3.1415926538\n\nfloat Y00 = 0.282095;\nfloat Y1 = 0.488603; // (x; z; y)\nfloat Y2 = 1.092548; // (xz; yz; xy)\nfloat Y20 = 0.315392; //3z^2 − 1\nfloat Y22 = 0.546274; // x^2 − y^2","name":"Common","description":"","type":"common"}]}