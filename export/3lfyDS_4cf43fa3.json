{"ver":"0.1","info":{"id":"3lfyDS","date":"1592967070","viewed":248,"name":"animate emoji","username":"hahnzhu","description":"inspired by [url=https://www.shadertoy.com/view/lsXcWn]Smiley Tutorial by BigWIngs[/url]. ","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["emoji"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(x,y,z) smoothstep(x,y,z)\n#define sat(x) clamp(0., 1., x);\n#define PI 3.1415926\n\n// emoji reference:\n// https://user-images.githubusercontent.com/2987435/164580786-6a807293-b9fb-48ab-9984-94651a9c138b.png\n\n// reference: https://www.shadertoy.com/view/lsXcWn\nfloat remap01(float a, float b, float t) {\n\treturn sat((t-a)/(b-a));\n}\nfloat remap(float a, float b, float c, float d, float t) {\n\treturn sat(((t-a)/(b-a))*(d-c)+c);\n}\nvec2 within(vec2 uv, vec4 rect) {\n    return (uv-rect.xy) / (rect.zw - rect.xy);\n}\n\n\n// reference: https://iquilezles.org/articles/distfunctions2d\nfloat sdArc( in vec2 p, in vec2 sca, in vec2 scb, in float ra, float rb ) {\n    p *= mat2(sca.x,sca.y,-sca.y,sca.x);\n    p.x = abs(p.x);\n    float k = (scb.y*p.x>scb.x*p.y) ? dot(p.xy,scb) : length(p.xy);\n    return sqrt( dot(p,p) + ra*ra - 2.0*ra*k ) - rb;\n}\n\nfloat udSegment( in vec2 p, in vec2 a, in vec2 b ){\n    vec2 ba = b-a;\n    vec2 pa = p-a;\n    float h =clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length(pa-h*ba);\n}\n\nfloat sdStar(in vec2 p, in float r, in int n, in float m)  {\n    // these 4 lines can be precomputed for a given shape\n    float an = 3.141593/float(n);\n    float en = 3.141593/m;\n    vec2  acs = vec2(cos(an),sin(an));\n    vec2  ecs = vec2(cos(en),sin(en)); // ecs=vec2(0,1) and simplify, for regular polygon,\n\n    // reduce to first sector\n    float bn = mod(atan(p.x,p.y),2.0*an) - an;\n    p = length(p)*vec2(cos(bn),abs(sin(bn)));\n\n    // line sdf\n    p -= r*acs;\n    p += ecs*clamp( -dot(p,ecs), 0.0, r*acs.y/ecs.y);\n    return length(p)*sign(p.x);\n}\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat cross2( in vec2 a, in vec2 b ) { return a.x*b.y - a.y*b.x; }\nfloat sdBezier( in vec2 pos, in vec2 A, in vec2 B, in vec2 C )\n{    \n    vec2 a = B - A;\n    vec2 b = A - 2.0*B + C;\n    vec2 c = a * 2.0;\n    vec2 d = A - pos;\n\n    float kk = 1.0/dot(b,b);\n    float kx = kk * dot(a,b);\n    float ky = kk * (2.0*dot(a,a)+dot(d,b))/3.0;\n    float kz = kk * dot(d,a);      \n\n    float res = 0.0;\n    float sgn = 0.0;\n\n    float p = ky - kx*kx;\n    float p3 = p*p*p;\n    float q = kx*(2.0*kx*kx - 3.0*ky) + kz;\n    float h = q*q + 4.0*p3;\n\n    if( h>=0.0 ) \n    {   // 1 root\n        h = sqrt(h);\n        vec2 x = (vec2(h,-h)-q)/2.0;\n        vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));\n        float t = clamp( uv.x+uv.y-kx, 0.0, 1.0 );\n        vec2  q = d+(c+b*t)*t;\n        res = dot2(q);\n    \tsgn = cross2(c+2.0*b*t,q);\n    }\n    else \n    {   // 3 roots\n        float z = sqrt(-p);\n        float v = acos(q/(p*z*2.0))/3.0;\n        float m = cos(v);\n        float n = sin(v)*1.732050808;\n        vec3  t = clamp( vec3(m+m,-n-m,n-m)*z-kx, 0.0, 1.0 );\n        vec2  qx=d+(c+b*t.x)*t.x; float dx=dot2(qx), sx = cross2(c+2.0*b*t.x,qx);\n        vec2  qy=d+(c+b*t.y)*t.y; float dy=dot2(qy), sy = cross2(c+2.0*b*t.y,qy);\n        if( dx<dy ) { res=dx; sgn=sx; } else {res=dy; sgn=sy; }\n    }\n    \n    return sqrt( res )*sign(sgn);\n}\n\n\n\nmat2 Rot(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvec4 Smiley_Emoji(vec2 uv) {\n    vec4 col = vec4(0.);\n\tuv -= .5;\n    float d = length(uv);\n    \n    col.a = S(.5, .48, length(d));\n    \n    // palette\n    vec3 faceCol = vec3(1., .9, .02);\n    vec3 faceShadowCol = vec3(.8, .4, .05);\n    vec3 cheekCol = vec3(1., .53, 0.);\n    vec3 mouthCol = vec3(.42, .2, 0.);\n    vec3 eyeCol = vec3(.5, .5, .5);\n    vec3 irisCol = vec3(0., 0., 0.);\n    \n    col.rgb = mix(col.rgb, faceCol, S(.5, .48, d)); // face\n    col.rgb = mix(col.rgb, faceShadowCol, S(0., .6, d)*remap(.4,0.,1.,.7,-uv.y));// face shadow\n    col.rgb = mix(col.rgb, vec3(1.), S(.45, .43, d)*remap(.4,-.4,.5,0.,uv.y)); // face highlight\n\tcol.rgb = mix(col.rgb, cheekCol, S(.2, .0, length(vec2(abs(uv.x),uv.y)-vec2(.3,-.05)))); // cheek\n    \n    // mouth\n    float ta = -1.57;\n    float tb = 1.38;\n    float rb = 0.005;\n    float len = sdArc(uv*vec2(.85,1.1)+vec2(.0,.15),vec2(sin(ta),cos(ta)),vec2(sin(tb),cos(tb)), 0.25, rb);\n\tcol.rgb = mix(col.rgb, mouthCol, 1.0-S(0.0,0.015,abs(len)));\n    \n    // eyebrow\n    ta = 1.57;\n    tb = .6;\n    rb = 0.005;\n    len = sdArc(uv-vec2(-.2,.15),vec2(sin(ta),cos(ta)),vec2(sin(tb),cos(tb)), 0.15, rb);\n\tcol.rgb = mix(col.rgb, mouthCol, S(0.03, 0.01,abs(len)));\n    len = sdArc(uv-vec2(.2,.15),vec2(sin(ta),cos(ta)),vec2(sin(tb),cos(tb)), 0.15, rb);\n\tcol.rgb = mix(col.rgb, mouthCol, S(0.03,0.01,abs(len)));\n    \n    // left eye\n    vec2 eUv = within(uv, vec4(-.42, -.3, -0.02, .18));\n    eUv -= .5;\n    \n    ta = 1.57;\n    tb = .8;\n    rb = 0.06;\n    float rb2 = 0.12;\n    len = sdArc(eUv,vec2(sin(ta),cos(ta)),vec2(sin(tb),cos(tb)), 0.4, rb);\n\tcol.rgb = mix(col.rgb, vec3(1.), S(0.1, 0.05,abs(len)));\n    len = sdArc(eUv,vec2(sin(ta),cos(ta)),vec2(sin(tb),cos(tb)), 0.4, rb2);\n    col.rgb = mix(col.rgb, eyeCol, S(0.035, 0.01,abs(len)));\n   \tvec2 anim = vec2(sin(iTime)*.5+.5, mix(0.,.12,cos(iTime*2.)*.5+.5));\n    col.rgb = mix(col.rgb, irisCol, S(.13, .11, length(eUv-vec2(-.28+anim.x*.55,.28+anim.y))));\n    \n    // right eye\n    eUv = within(uv, vec4(.42, -.3, 0.02, .18));\n    eUv -= .5;\n    \n    ta = 1.57;\n    tb = .8;\n    rb = 0.06;\n    rb2 = 0.12;\n    len = sdArc(eUv,vec2(sin(ta),cos(ta)),vec2(sin(tb),cos(tb)), 0.4, rb);\n\tcol.rgb = mix(col.rgb, vec3(1.), S(0.1, 0.05,abs(len)));\n    len = sdArc(eUv,vec2(sin(ta),cos(ta)),vec2(sin(tb),cos(tb)), 0.4, rb2);\n    col.rgb = mix(col.rgb, eyeCol, S(0.035, 0.01,abs(len)));\n    col.rgb = mix(col.rgb, irisCol, S(.13, .11, length(eUv-vec2(.28-anim.x*.55,.28+anim.y))));\n    \n    return col;\n}\n\nvec4 Sigh_Emoji(vec2 uv) {\n    vec4 col = vec4(1., 1., 0., 1.);\n    uv -= .5;\n    float d = length(uv);\n    col.a = S(.5, .48, length(uv));\n    \n    float anim = fract(sin(mod(iTime,3.)-PI/2.)*.5+.5);\n    \n    vec2 m = vec2(0.,-.1)*mix(1.,-1., anim);\n    uv += m * (.25 - dot(d,d));\n    \n    // palette\n    vec3 faceCol = vec3(1., .9, .02);\n    vec3 faceShadowCol = vec3(.8, .4, .05);\n\tvec3 eyeCol = vec3(.42, .2, 0.);\n    vec3 noseCol = vec3(.42, .2, 0.);\n    vec3 mouthCol = vec3(.42, .2, 0.);\n    vec3 eyelidCol = vec3(.64, .56, .4);\n    vec3 beardCol = vec3(.64, .55, .39);\n    \n    col.rgb = mix(col.rgb, faceCol, S(.5, .48, d)); // face\n    col.rgb = mix(col.rgb, faceShadowCol, S(0., .6, d)*remap(.4,-.4,1.,.7,-uv.y));// face shadow\n    col.rgb = mix(col.rgb, vec3(1.), S(.45, .43, d)*remap(.4,-.4,.5,0.,uv.y)); // face highlight\n    \n    vec2 eUv = uv;\n    eUv.y += eUv.x*eUv.x*mix(0.,.5,anim);\n    vec2 v1 = vec2(-.3, 0.2);\t// eye 1eft\n\tvec2 v2 = vec2(-.1, 0.2);\n    vec2 v3 = v1+vec2(.4,0.);\t// eye right\n    vec2 v4 = v2+vec2(.4,0.);\n\tfloat d2 = udSegment(eUv,v1,v2);\n    float d3 = udSegment(eUv,v3,v4);\n\tcol.rgb = mix(col.rgb, eyeCol, smoothstep(0.03,0.02,abs(d2)));\n    col.rgb = mix(col.rgb, eyeCol, smoothstep(0.03,0.02,abs(d3)));\n    \n    vec2 v5 = vec2(-.08, 0.2);\t// nose part1\n    vec2 v6 = vec2(-.08, 0.);\n    float d4 = udSegment(uv,v5,v6);\n    col.rgb = mix(col.rgb, noseCol, smoothstep(0.03,0.02,abs(d4)));\n    \n    vec2 v7 = vec2(-.08, 0.);\t// nose part2\n    vec2 v8 = vec2(-.0, 0.);\n    float d5 = udSegment(uv,v7,v8);\n    col.rgb = mix(col.rgb, noseCol, smoothstep(0.03,0.02,abs(d5)));\n    \n    float d6 = length(eUv*vec2(.8,1.)-vec2(-.165,.21));\t// eyelid left \n   \tcol.rgb = mix(col.rgb, eyelidCol, S(.1, .08, d6)*S(.19,.17,eUv.y));\n    float d7 = length(eUv*vec2(.8,1.)-vec2(.165,.21)); \t// eyelid right\n   \tcol.rgb = mix(col.rgb, eyelidCol, S(.1, .08, d7)*S(.19,.17,eUv.y));\n    \n    float d8 = length(uv*vec2(1.,1.1)+vec2(0.,.25)); \n   \tcol.rgb = mix(col.rgb, beardCol, S(.24, .22, d8));\n    \n    vec2 v9 = vec2(-.04-mix(0.,.03,anim), -0.18-mix(0.,.02,anim));\t// mouth\n    vec2 v10 = vec2(.04-mix(0.,.05,anim), -0.18-mix(0.,.02,anim));\n    float d9 = udSegment(uv,v9,v10);\n    col.rgb = mix(col.rgb, mouthCol, smoothstep(0.03+mix(0.02,.0,anim),0.02+mix(0.02,.0,anim),abs(d9)));\n    \n    uv *= (4.+mix(.8,0.,anim));\n    uv += vec2(1.1,1.5);\n    \n    // transfer to Polar Coordinate\n    float angle = atan(uv.y, uv.x);\n    float len = length(uv);\n   \n    angle = (angle/2.*PI)+.5; // -PI~PI : 0~1\n\tlen = len*2.0;\t\t\t  // 0~1\n    \n    float sigh = smoothstep(sin(angle*PI)*.15+.74, sin(angle*PI)*.15+.7, len);\n    col = mix(col, vec4(1.), sigh*mix(0.,1.,anim));\t// sigh1\n\n    vec2 v11 = vec2(.33, .24);\t// sigh2\n    vec2 v12 = vec2(.4, .3);\n    float d10 = udSegment(uv,v11,v12);\n    col = mix(col, vec4(1.), smoothstep(0.14,0.12,abs(d10))*mix(0.,1.,anim));\n    \n    return col;\n}\n\nvec4 Greedy_Emoji(vec2 uv) {\n    vec4 col = vec4(1., 1., 0., 1.);\n\tuv -= .5;\n    float d = length(uv);\n    col.a = S(.5, .48, length(d));\n    \n    // palette\n    vec3 faceCol = vec3(1., .9, .02);\n    vec3 faceShadowCol = vec3(.8, .4, .05);\n    vec3 cheekCol = vec3(1., .53, 0.);\n    vec3 mouthCol = vec3(.56, .25, 0.06);\n    vec3 mouthShadowCol = vec3(.4, .17, 0.06);\n    vec3 eyeCol = vec3(.42, .2, 0.);\n    vec3 eyeStarCol = vec3(.95, .75, .42);\n    vec3 tongueCol = vec3(1., .4, .4);\n    vec3 tongueShadowCol = vec3(.78, .1, .2);\n    \n    col.rgb = mix(col.rgb, faceCol, S(.5, .48, d)); // face\n    col.rgb = mix(col.rgb, faceShadowCol, S(0., .6, d)*remap(.4,0.,1.,.7,-uv.y));// face shadow\n    col.rgb = mix(col.rgb, vec3(1.), S(.45, .43, d)*remap(.4,-.4,.5,0.,uv.y)); // face highlight\n\tcol.rgb = mix(col.rgb, cheekCol, S(.2, .0, length(vec2(abs(uv.x),uv.y)-vec2(.3,-.05)))); // cheek\n    \n    vec2 eUv = within(uv,vec4(-.3,0.,0.,.3));\n    eUv -= .5;\n    float d2 = S(.5, .45, length(eUv));\t// eye left\n    col.rgb = mix(col.rgb, eyeCol, d2);\n    \n    \n    float anim = fract(sin(iTime*PI*3.)*.5+.5);\n    float anim2 = fract(sin(iTime*PI)*.5+.5);\n    \n    eUv.xy *= Rot(iTime*PI);\n    eUv *= mix(1., 1.5, anim);\n    \n    float n = 4.0;\n    float m = 2.7;\n    \n    float d3 = sdStar(eUv*1.5, 0.7, int(n), m);\t// iris blink\t\n    vec3 eyeStar = mix(vec3(1.), vec3(0.), sign(d3)); \n\teyeStar = mix(eyeStar, eyeStarCol, smoothstep(0.1,0.0,abs(d3)) );\n    col.rgb = mix(col.rgb, eyeStar, eyeStar.r);\n    \n    \n    vec2 eUv2 = within(uv,vec4(.35,0.,0.05,.3));\n    eUv2 -= .5;\n    float d4 = S(.5, .45, length(eUv2));\t// eye left\n    col.rgb = mix(col.rgb, eyeCol, d4);\n    \n    eUv2.xy *= Rot(-iTime*PI);\n    eUv2 *= mix(1., 1.5, anim);\n    \n    float d5 = sdStar(eUv2*1.5, 0.7, int(n), m);\t// iris blink\t\n    eyeStar = mix(vec3(1.), vec3(0.), sign(d5)); \n\teyeStar = mix(eyeStar, eyeStarCol, smoothstep(0.1,0.0,abs(d5)) );\n    col.rgb = mix(col.rgb, eyeStar, eyeStar.r);\n\n    // mouth\n    uv.y += .1;\n    vec2 v0 = vec2(-.23,.0);\n    vec2 v1 = vec2(-.1,.0);\n    vec2 v2 = vec2(.0,.1);\n    \n    float d6 = sdBezier( uv,v0,v1,v2 ); \n    \n    vec3 mouth1 = vec3(1.) * sign(d6);\n\tmouth1 = mix(mouth1, vec3(1.0), smoothstep(0.02,0.0,abs(d6)));\n    \n    vec2 v3 = vec2(0.,.1);\n    vec2 v4 = vec2(.1,.0);\n    vec2 v5 = vec2(.2,.0);\n    \n    float d7 = sdBezier( uv,v3,v4,v5 ); \n    \n    vec3 mouth2 = vec3(1.) * sign(d7);\n\tmouth2 = mix( mouth2, vec3(1.0), smoothstep(0.02,0.0,abs(d7)) );\n    \n    vec2 v6 = vec2(-.2,.0);\n    vec2 v7 = vec2(-.15,-.4*mix(.8, 1., anim2));\n    vec2 v8 = vec2(.15,-.35*mix(.8, 1., anim2));\n    \n    float d8 = sdBezier( uv,v6,v7,v8 ); \n    vec3 mouth3 = vec3(1.) * sign(d8);\n\tmouth3 = mix( mouth3, vec3(1.0), smoothstep(0.03,0.0,abs(d8)) );\n    \n    vec2 v9 = vec2(.17,.0);\n    vec2 v10 = vec2(.13,-.2*mix(.8, 1., anim2));\n    vec2 v11 = vec2(.15,-.35*mix(.8, 1., anim2));\n    \n    float d9 = sdBezier( uv,v9,v10,v11 ); \n    vec3 mouth4 = vec3(1.) * sign(d9);\n\tmouth4 = mix( mouth4, vec3(1.0), smoothstep(0.03,0.0,abs(d9)) );\n\n\tvec3 mouthD = (mouth1+mouth2) * (mouth4-mouth3);\n    col.rgb = mix(col.rgb, mouthCol, clamp(mouthD,0.,1.));\n    \n    // mouth shadow\n    col.rgb = mix(col.rgb, mouthShadowCol, clamp(mouthD,0.,1.)*S(.3,0.,length(uv+vec2(.0,.2*mix(1., 1.2, anim2)))));\n    \n    // tongue\n    col.rgb = mix(col.rgb, tongueCol, clamp(mouthD,0.,1.)*S(.2,.18,length(uv*vec2(1.,1.)+vec2(.0,.26*mix(1., 1.2, anim2)))));\n    col.rgb = mix(col.rgb, tongueShadowCol, clamp(mouthD,0.,1.)*S(.3,.0, length(uv+vec2(-.05,.4))));\n    \n    // mouth stroke\n    vec3 mouthStroke1 = vec3(0.) * sign(d6);\n\tmouthStroke1 = mix(mouthStroke1, vec3(1.), smoothstep(0.02,0.01,abs(d6)));\n    col.rgb = mix(col.rgb, mouthCol, mouthStroke1);\n    \n    vec3 mouthStroke2 = vec3(0.) * sign(d7);\n\tmouthStroke2 = mix(mouthStroke2, vec3(1.), smoothstep(0.02,0.01,abs(d7)));\n    col.rgb = mix(col.rgb, mouthCol, mouthStroke2);\n    \n    vec3 mouthStroke3 = vec3(0.) * sign(d8);\n\tmouthStroke3 = mix(mouthStroke3, vec3(1.), smoothstep(0.02,0.01,abs(d8)));\n    col.rgb = mix(col.rgb, mouthCol, mouthStroke3);\n    \n    d9 = sdBezier( uv,v9+vec2(.01,0.),v10+.01,v11+.01 ); \n    vec3 mouthStroke4 = vec3(0.) * sign(d9);\n\tmouthStroke4 = mix(mouthStroke4, vec3(1.), smoothstep(0.02,0.01,abs(d9)));\n    col.rgb = mix(col.rgb, mouthCol, mouthStroke4);\n    \n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\tvec4 col = vec4(0.);\n    \n    vec4 emoji_01 = Smiley_Emoji(within(uv,vec4(-.85,-.25,-.35,.25)));\n    vec4 emoji_02 = Sigh_Emoji(within(uv,vec4(-.25,-.25,.25,.25)));\n    vec4 emoji_03 = Greedy_Emoji(within(uv,vec4(.35,-.25,.85,.25)));\n    \n    col = mix(col, emoji_01, emoji_01.a);\n    col = mix(col, emoji_02, emoji_02.a);\n    col = mix(col, emoji_03, emoji_03.a);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}