{"ver":"0.1","info":{"id":"Dty3RW","date":"1683602956","viewed":66,"name":"how to use bufferA/render to tex","username":"alenwesker","description":"Click + button on the upper left, select buffer A, then write the shader\nIn the main shader, click and assign the iChannel0 to be Buffer A, then use can use\nvec4 bufferAColor = texture(iChannel0, uv); to access bufferA","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["rendertotexture","buffera"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 bufferAColor = texture(iChannel0, uv);\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col * bufferAColor.rgb, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float checker = mod(floor(uv.x * 10.0) + floor(uv.y * 10.0), 2.0);\n    fragColor = vec4(vec3(checker), 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}