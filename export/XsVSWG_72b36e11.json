{"ver":"0.1","info":{"id":"XsVSWG","date":"1466321356","viewed":1782,"name":"Slowstars 2  ( 197 chars )","username":"FabriceNeyret2","description":"from compaction of danb's slowstar shader [url]https://www.shadertoy.com/view/MsGXWy[/url]","likes":45,"published":3,"flags":0,"usePreview":0,"tags":["starfield","2tweets","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// inspired from https://www.shadertoy.com/view/MsGXWy\n\n\n/**/     // 197 chars\n\n#define R(r)  fract( 4e4 * sin(2e3 * r) )  // random uniform [0,1[\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O -= O;\n    \n    for (float i = 0.; i < 2e2; i ++)\n        O += R(i)/ 1e3         // pos = pos(0)  +  velocity   *  t   ( modulo, to fit screen )\n               / length( fract( R(i+vec2(.1,.2)) + (R(i+vec2(.3,.5))-.5) * iTime/20. ) \n                         - U/iResolution.x );\n    // --- colors\n  //O *= vec4(1,.6,.4,1);\n  //O *= vec4(1,O.x,O.x*O.x,1);\n  //O = sin(40./O); // just for fun\n}\n/**/\n\n\n\n\n/**      // 208 chars\n\n#define R(r)  fract( 4e4 * sin(2e3 * r) )\n\nvoid mainImage(out vec4 O, vec2 U )\n{\n    O -= O;\n    \n    for (float i = 0.; i < 2e2; i ++)\n        O += max( 0., \n                  1.- length( fract( R(i+vec2(.1,.2)) + (R(i+vec2(.3,.5))-.5) * iTime/20. ) \n                              - U/iResolution.x\n                            ) / R(i) * 2e2\n                );\n}\n/**/","name":"Image","description":"","type":"image"}]}