{"ver":"0.1","info":{"id":"Mltyzn","date":"1532203576","viewed":382,"name":"cellular clocks","username":"wyatt","description":"ive been looking a lot at how plants grow. I want to make some super leafy looking leaves by using more organic reaction diffusiony mechanisms for the cellular clocks, but this looks pretty cool for now","likes":14,"published":1,"flags":32,"usePreview":0,"tags":["automata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 R;\nvec4 A (vec2 U) {return texture(iChannel0,U/R);}\nvec4 B (vec2 U) {return texture(iChannel1,U/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{ R = iResolution.xy;\n \tC = A(U);\n    C = vec4(sin(vec3(1,2,3)*C.www*0.3)*0.5+0.5,1);\n \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 R;\nvec4 A (vec2 U) {return texture(iChannel0,U/R);}\n#define pi 3.14159265359\n#define sqrt2 1.41421356237\nvec2 va (float a) {a = a*2.-1.;return sqrt2*vec2(cos(pi*a),sin(pi*a));}\nfloat va (vec2 v) {return atan(v.y,v.x)*0.5/pi+0.5;}\nbool box (vec2 v) {v = abs(v);return max(v.x,v.y)<1.;} // is same pixel?\nvoid mainImage( out vec4 C, in vec2 U )\n{ R = iResolution.xy;\n \t\n \tif (iFrame < 10) {//init\n        if (box(vec2(1)*(U-vec2(0.4,0.2)*R-0.5))) \n            C = vec4(U,1.75,1.);\n        else C = vec4(0,0,0,0);\n\t} else { //automatate\n        C = A(U); // whoAmI?\n        if (C.w < 1.)\n        for (int x = -2; x<=2; x++) {\n        for (int y = -2; y<=2; y++) {\n            vec2 o = vec2(x,y);\n            vec4 parent = A(U+o);\n            // .xy = where [0,R]\n            // fract(.z) = angle from parent ([0,1]*2-1)*2pi\n            // floor(.z) count since last bifurcation\n            // fract(.w) death clock\n            // floor(.w) evolution number\n\n            if (floor(parent.w)>0.&&parent.w < 9.) {\n\t\t\t\tbool bi = mod(floor(parent.z),R.y/1000.*pow(2.,8.-floor(parent.w)))<1.;\n                vec2 xy = parent.xy+va(fract(parent.z+(bi?-0.1:0.00)));\n                bool b = box(U-xy);\n                     \n                if (bi) {\n                \tif (!b) {\n                        xy = parent.xy+va(fract(parent.z+0.15));\n                        if ((b=box(U-xy)))\n                            parent.w = floor(parent.w+1.);\n                    }\n                }\n                if (b) {if (bi) parent.w+=.3;\n                    C.xy = xy;\n                    C.z = floor(parent.z+1.)+fract(va(xy-parent.xy));\n                    C.w = floor(parent.w)+fract(parent.w);\n                }\n            }\n\n        }\n        }\n    } \n \n}","name":"Buf A","description":"","type":"buffer"}]}