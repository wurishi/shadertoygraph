{"ver":"0.1","info":{"id":"csVBWz","date":"1698176360","viewed":41,"name":"24. Shallow","username":"Ladus","description":"Inktober 2023 Day 24.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["shallow","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define aa 2./iResolution.y\n#define PI 3.14159265359\n\nmat2 rotate(vec2 direction) { \n    float a = atan(direction.x,direction.y);\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat visualizeCircle(vec2 p, vec2 point, float radius) {\n    return smoothstep(radius+aa, radius-aa, length(point+p));\n}\n\nvec4 getKoi(vec2 p, vec2 direction) {\n    vec3 baseColor = vec3(1.,1.,1.);\n    vec3 spotColor = vec3(1.,0.,0.);\n    float alpha = 0.;\n    \n    vec2 pos = vec2(0.,0.);\n    // fish shape\n    alpha += visualizeCircle(p, pos, 0.2);\n    alpha += visualizeCircle(p, pos+vec2(0.,-0.15), 0.15);\n    alpha += visualizeCircle(p, pos+vec2(0.,-0.08), 0.18);\n    alpha += visualizeCircle(p, pos+vec2(0.,0.15), 0.18); \n    alpha += visualizeCircle(p, pos+vec2(0.,0.275), 0.155);\n    alpha += visualizeCircle(p, pos+vec2(0.,0.375), 0.115);\n    alpha += visualizeCircle(p, pos+vec2(0.,0.44), 0.08);\n    alpha += visualizeCircle(p, pos+vec2(0.,0.51), 0.06);\n    alpha += visualizeCircle(p, pos+vec2(0.,0.57), 0.04);\n    alpha += visualizeCircle(p, pos+vec2(0.,0.60), 0.08);\n    alpha += visualizeCircle(p, pos+vec2(0.2,0.04), 0.08);\n    alpha += visualizeCircle(p, pos+vec2(-0.2,0.04), 0.08);\n    alpha += visualizeCircle(p, pos+vec2(0.24,0.07), 0.06);\n    alpha += visualizeCircle(p, pos+vec2(-0.24,0.07), 0.06);\n    alpha += visualizeCircle(p, pos+vec2(-0.24,0.07), 0.06);\n    // fish spots\n    float spots = visualizeCircle(p, pos+vec2(-0.2,0.04), 0.24);\n    spots += visualizeCircle(p, pos+vec2(0.2,0.28), 0.14);\n    spots += visualizeCircle(p, pos+vec2(-0.1,0.48), 0.07);\n    //mix colors\n    vec3 color = mix(baseColor, spotColor, spots);\n\n    return vec4(color, clamp(alpha,0.,1.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = ( 2.*fragCoord - iResolution.xy )  / iResolution.y;\n    float wavex = (sin(p.x*3.+(iTime*10.))+1.)/2.;\n    float wavey = sin(iTime+(sin(p.y/1.5*(p.x+sin(iTime)*4.)*3.+(iTime*1.))+1.)/2.);\n    p.x += wavex*0.02;\n    p.y += wavey*0.02;\n    \n    float v = (wavex + wavey)/2.;\n    fragColor = vec4(v, v, v, 1.);\n    \n    // Get shapes\n    vec2 koiSpace = p;\n    koiSpace.x += sin(iTime*3.+p.y*2.)*0.05;\n    vec4 koi = getKoi(koiSpace, vec2(0.,2.));\n    vec4 koiShadow = getKoi(koiSpace+vec2(-0.15,0.1), vec2(0.2,1.));\n    // Colorize\n    vec3 backgroundColor = vec3(0.,.7,1.)+vec3(v*0.2);\n    vec3 shadowColor = vec3(0.,.2,0.3);\n    backgroundColor = mix(backgroundColor, shadowColor, koiShadow.a);\n    vec3 color = mix(backgroundColor, koi.rgb, koi.a);\n    \n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}