{"ver":"0.1","info":{"id":"MtdyRn","date":"1531336031","viewed":325,"name":"Dancing stickman fractal","username":"Firzen_","description":"I spend my time sensibly, alright?","likes":9,"published":1,"flags":64,"usePreview":0,"tags":["fractal","visualization","dance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xs2SRt","filepath":"https://soundcloud.com/mr50music/mr-50-reeses-pieces-bristol","previewfilepath":"https://soundcloud.com/mr50music/mr-50-reeses-pieces-bristol","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi (acos(-1.))\n\nfloat leftLeg(vec2 uv)\n{\n    float lift = -texture(iChannel0, vec2(0.1,0.)).r+0.7;\n    uv.y += lift*abs(uv.x-0.5);\n    return smoothstep(0.01,0.0, abs(length(uv-vec2(0.5,0.17))-0.12)) * smoothstep(0.02, 0., -0.5+uv.x) * smoothstep(0.02,0.,0.17-uv.y);\n}\n\nfloat rightLeg(vec2 uv)\n{\n    float lift = -texture(iChannel0, vec2(0.2,0.)).r+0.7;\n    uv.y += lift*abs(uv.x-0.5);\n    return smoothstep(0.01,0.0, abs(length(uv-vec2(0.5,0.17))-0.12)) * smoothstep(0.02, 0., 0.5-uv.x) * smoothstep(0.02,0.,0.17-uv.y);\n}\n\nfloat leftArm(vec2 uv)\n{\n    float str = texture(iChannel0, vec2(0.3,0.)).r;\n    float lift = (texture(iChannel0,vec2(uv.x,1.)).r-0.5)*str;\n    uv.y += lift*pow(2.*(0.5-uv.x),1.5);\n    uv.y += texture(iChannel0, vec2(0.005,0.)).r/10.-0.05;\n    return smoothstep(0.01,0.0, abs(uv.y-0.55)) * smoothstep(0.12, 0.1, abs(uv.x-0.4));\n}\n\nfloat rightArm(vec2 uv)\n{\n    float str = texture(iChannel0, vec2(0.4,0.)).r;\n    float lift = (texture(iChannel0,vec2(uv.x,1.)).r-0.5)*str;\n    uv.y += lift*pow(2.*(uv.x-0.5),1.5);\n    uv.y += texture(iChannel0, vec2(0.005,0.)).r/10.-0.05;\n    return smoothstep(0.01,0.0, abs(uv.y-0.55)) * smoothstep(0.12, 0.1, abs(uv.x-0.6));\n}\n\nfloat torso(vec2 uv)\n{\n    float str = texture(iChannel0, vec2(0.0005,0.)).r;\n    uv.x += str*(texture(iChannel0, vec2(uv.y, 1.)).r-0.5)*max(0.,0.2-abs(uv.y-0.5));\n    return smoothstep(0.01,0.0,abs(uv.x-0.5))*smoothstep(0.22,0.2,abs(uv.y-0.5));\n}\n\nfloat head(vec2 uv)\n{\n    float bop = -texture(iChannel0, vec2(0.0005, 0.)).r/20.;\n    vec2 circ = uv-vec2(0.5, 0.7+bop);\n    float angl = (atan(circ.y,circ.x)+pi)/(2.*pi);\n    float offs = (texture(iChannel0, vec2(angl, 0.)).r-0.1)*2.*-bop;\n    return smoothstep(0.055+offs,0.05+offs,length(circ));\n}\n    \nfloat stickman(vec2 uv)\n{\n    uv = fract(3.*uv);\n    uv.y += texture(iChannel0, vec2(0.005,0.)).r/3.-0.25;\n    uv.x += texture(iChannel0, vec2(0.505,0.)).r/3.-0.1;\n    return max(leftLeg(uv), max( rightLeg(uv), max( leftArm(uv), max(rightArm(uv), max(torso(uv), head(uv))))));\n}\n\nvec3 insideColor(vec2 uv)\n{\n    return vec3(0.);\n}\n\nvec4 inside(vec2 uv)\n{\n    float counter = 0.;\n    vec2 fr = fract(uv);\n    while(counter++ < 6.)\n    {\n        if (fr.x>1./3. && fr.x < 2./3.)\n            return vec4(0., fr, counter);\n        if (fr.y>1./3. && fr.y < 2./3.)\n            return vec4(0., fr, counter);\n        fr *= 3.;\n        fr = fract(fr);\n    }\n    return vec4(1., fr, 7);\n}\n\nvec3 cellColor(float depth)\n{\n    float f = depth/10.+0.1;\n    return clamp(3.*vec3(\n        texture(iChannel0, vec2(f+0.0005, 0)).r/2.,\n        texture(iChannel0, vec2(f-0.15, 0)).r/2.,\n        texture(iChannel0, vec2(f+0.15, 0)).r/2.\n    ), 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5);\n    uv.y *= iResolution.y/iResolution.x;\n    \n    float f = texture(iChannel0, vec2(0.0005, 0.)).r;\n    const float timeScale = 0.3;\n    \n    float t2 = timeScale*(iTime+f);\n    float t = mod(t2,2.)+1.;\n\n    // Time varying pixel color\n    vec4 stickMix = inside(uv/t);\n    float dp = pow(3., stickMix.w);\n    vec2 cel = floor((uv/t)*dp)/dp;\n    vec3 col = 0.5 + 0.5*cos(t2+23.*(cel.xyx+vec3(0,2,4)));\n    //vec3 col = 0.5*cos(t2+cel.xyx+vec3(4,2,-7)) + 0.5*cos(-t2+cel.yyx+vec3(0,1,4));\n    \n    vec2 dir = vec2(cos(t2), -1);\n    dir = normalize(dir);\n    float stick = 0.;\n    const float blurSteps = 20.;\n    const float blurScale = 0.001;\n    for(float i=0.; i<blurSteps; i++)\n    {\n        stick += stickman(stickMix.yz + (stickMix.w*f*dir*i*blurScale))*(blurSteps-i);\n    }\n    stick /= (blurSteps*(blurSteps+1.))/2.;\n\n    // Output to screen\n    fragColor = mix(vec4(col,1.),vec4(0.*(vec3(1.)-col),1.),stick);\n}","name":"Image","description":"","type":"image"}]}