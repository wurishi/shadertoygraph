{"ver":"0.1","info":{"id":"cdKSDh","date":"1681039119","viewed":297,"name":"Rev2023 - Shader Showdown #2","username":"Flopine","description":"My shader showdown final shader!","likes":12,"published":1,"flags":32,"usePreview":0,"tags":["3d","raymarching","modeling","truchet","revision","competition","demoparty"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord.xy - iResolution.xy)/iResolution.y;\n    vec2 uu = fragCoord.xy / iResolution.xy;\n\n    fragColor = vec4(texture(iChannel0, uu*.96+length(uv)*0.005).r,\n                      texture(iChannel0, uu*.96+length(uv)*0.01).g,\n                      texture(iChannel0, uu*.96+length(uv)*0.015).b,\n                      1.\n                  );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define circ(u,s) (length(u)-s)\n#define PI acos(-1.)\n\n#define noise(x) fract(sin(dot(x,vec2(231.4, 368.1)))*1675.0)\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define pal(t,c) (vec3(0.7)+vec3(.2)*cos(2.*PI*(c*t+vec3(0.4,.5,.8))))\n\nfloat tru (vec2 uv)\n{\n    vec2 id = floor(uv);\n    uv = fract(uv)-.5;\n    if (noise(id*.1)>.5)uv.x*= -1.;\n    if (noise(id*.2)>.5)\n    {\n        vec2 uu = uv;\n        float s = (uv.x>-uv.y)?-1.:1.;\n        uv +=  .5*s;\n        float d = abs(circ(uv,.5));\n        uv = uu;\n        uv = abs(uv)-.5;\n        d = min(d,circ(uv,.0));\n\n        return d;\n    }\n    else\n    {\n        uv = mod(uv, .5)-.25;\n        float s = (uv.x>-uv.y)?-1.:1.;\n        uv +=  .25*s;\n        return .25-abs(circ(uv,.25));\n    }\n}\n\nvoid mo(inout vec2 p, vec2 d)\n{\n    p = abs(p)-d;\n    if(p.y>p.x)p=p.yx;\n}\n\nfloat extrude (vec3 p, float d, float h)\n{\n    vec2 q = vec2(d,abs(p.z)-h);\n    return min(0., max(q.x,q.y))+length(max(q,0.));\n}\n\nfloat SDF (vec3 p)\n{\n    p.xy *= rot(p.z*.1);\n    p.yz *= rot(PI/4.);\n    p.z += (iTime+1.)*3.+texture(iChannel0, vec2(0.02, .25)).x;\n    \n    mo(p.xy, vec2(2.)); \n    mo(p.xz,vec2(1.5));\n    \n    float d =extrude(p, abs(abs(tru(p.xy)-.25)-.1), 0.01)-0.05;\n    d = min(extrude(p, tru(p.xy), 0.01+texture(iChannel0,vec2(0.005,.25)).x*.25)-.05,d);\n    \n    return d;\n}\n\nvec3 gn (vec3 p)\n{\n    vec2 eps = vec2(0.01, 0.);\n    return normalize(SDF(p)-vec3(SDF(p-eps.xyy),SDF(p-eps.yxy),SDF(p-eps.yyx)));\n}\n\nfloat AO (vec3 p, vec3 n, float e)\n{return clamp(SDF(p+e*n)/e,0.,1.);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord.xy - iResolution.xy)/iResolution.y;\n    vec2 uu = fragCoord.xy / iResolution.xy;\n    vec3 ro = vec3(0.001,-1., -2.), rd=normalize(vec3(uv,1.)),p=ro,\n    col = vec3(0.);\n\n    bool hit=false;\n    float t = 0., shad;\n    for (float i=0.; i<64.; i++)\n    {\n        p = ro+t*rd;\n        float d = SDF(p);\n        if (d<0.01)\n        {\n            hit=true;\n            shad = i/64.;\n            break;\n        }\n        t += d;\n    }  \n    if (hit)\n    {\n        vec3 n =gn(p);\n        float ao = AO(p,n,0.05)+AO(p,n,0.15)+AO(p,n,0.25);\n        col = vec3(1.-ao/3.)*pal(p.y, vec3(.1))*texture(iChannel0,vec2(0.001, .25)).x*1.5;\n    }\n\n    col = mix(col, vec3(0.), 1.-exp(-0.005*t*t));\n    \n    fragColor = vec4(col, 1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}