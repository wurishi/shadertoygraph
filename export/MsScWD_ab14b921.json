{"ver":"0.1","info":{"id":"MsScWD","date":"1492109553","viewed":856,"name":"Multiscale RK4 Texture Advection","username":"trirop","description":"Fractal-like texture advection with Runge-Kutta 4 integration.","likes":21,"published":1,"flags":0,"usePreview":0,"tags":["advection","rk4"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Robert Schuetze - trirop/2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvec2 v(vec2 p,float s){\n\treturn vec2(sin(s*p.y),cos(s*p.x));\t//advection vector field\n}\n\nvec2 RK4(vec2 p,float s, float h){\n    vec2 k1 = v(p,s);\n    vec2 k2 = v(p+0.5*h*k1,s);\n    vec2 k3 = v(p+0.5*h*k2,s);\n    vec2 k4 = v(p+h*k3,s);\n    return h/3.*(0.5*k1+k2+k3+0.5*k4);\n}\n\nvec3 rainbow(float hue){\n    return abs(mod(hue * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 C)\n{\n\tvec2 uv = 2.*C/iResolution.y-vec2(iResolution.x/iResolution.y,1);\n    float s = 2.;\n    float h = log(1./(exp(8.*cos(iDate.w*0.5))+exp(-2.))+exp(-2.))/8.;//=smooth_clamp(sin*4,-1,1)/4\n    for(int i = 0; i<5*8; i++){\n        float scale = pow(2.,floor(float(i+4)/5.));\n \t\tuv+=RK4(uv,s*scale,h/scale);\n    }\n\tfragColor = mix(vec4(rainbow(floor(length(uv)*10.)/10.),1),texture(iChannel0,uv*.5),.5-2.*h);\n}","name":"Image","description":"","type":"image"}]}