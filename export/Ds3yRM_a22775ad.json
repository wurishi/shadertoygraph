{"ver":"0.1","info":{"id":"Ds3yRM","date":"1696458016","viewed":9,"name":"Matrix Interleaver","username":"danbreu","description":"interleaver","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["diagram"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 rainbow(float f) {\n    f *= 5.498;\n    return vec4(0.5-0.5*sin(f), 0.5-0.5*cos(f), 0.5+0.5*sin(f), 1.0);\n}\n\nfloat matrixTarget(float i, float m, float n) {\n    return floor(i/n) + m * mod(i, n);\n}\n\nfloat plot(vec2 pos, float y, float width){\n  return  (smoothstep(y - width, y, pos.y)\n          - smoothstep(y, y + width, pos.y));\n}\n\nfloat connection(vec2 pos, vec2 start, vec2 end, float width) {\n    if (start.x > pos.x || end.x < pos.x) {\n        return 0.;\n    }\n\n    float xWidth = abs(end.x - start.x);\n    float xOffset = (start.x + end.x) * 0.5;\n    float yWidth = end.y - start.y;\n    float yOffset = (start.y + end.y) * 0.5;\n    \n    float x = pos.x - xOffset;\n    float y = sin(x*3.141/xWidth) * 0.5 * yWidth + yOffset;\n\n    return plot(pos, y, width);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float targetSize = iResolution.y/4.0;\n    float M = floor(sqrt(targetSize));\n    float N = floor(targetSize/M);\n    float size = M * N;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 color = vec4(0.92);\n    \n    float stride = 1.0/size;\n    float strandWidth = stride*0.7;\n    float xOffset = 0.0;\n    float yOffset = stride*0.5;\n    float width = 1.0;\n \n    for(float i = 0.0; i < size; i+=1.0) {\n        float target = matrixTarget(i, M, N);\n\n        float sourceF = i * stride;\n        float targetF = target * stride;\n        \n        float p = connection(uv, vec2(xOffset, yOffset+sourceF), vec2(xOffset+width, yOffset+targetF), strandWidth);\n        if(p > 0.0) {\n            color = rainbow(i / size);\n        }\n    }\n    \n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}