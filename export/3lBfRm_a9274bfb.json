{"ver":"0.1","info":{"id":"3lBfRm","date":"1641061049","viewed":36,"name":"basics 02 - simplest 3d 2","username":"rockes","description":"https://www.youtube.com/watch?v=dKA5ZVALOhs","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 p) {\n    return length(cross(p - ro, rd)) / length(rd);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 ro = vec3(0., 0., -2.); //ray origin\n    vec3 rd = vec3(uv.x, uv.y, 0.) - ro; //ray direction\n    \n    float t = iTime;\n    vec3 p = vec3(sin(t), 0., 1. + cos(t));\n    float d = DistLine(ro, rd, p);\n    d = smoothstep(.1, .09, d);\n    \n    fragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}