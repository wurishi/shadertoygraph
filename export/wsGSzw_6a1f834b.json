{"ver":"0.1","info":{"id":"wsGSzw","date":"1573611870","viewed":95,"name":"smooth","username":"dma","description":"Simplex noise repeatedly averaged from frame to frame","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["noise","diffusion","buffers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 c = normalize(texture(iChannel0, uv).rgb);\n    fragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159265358979323846\n// Simplex 2D noise\n//\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n        \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uvfrac = 1. / iResolution.xy;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    if (iFrame == 0) {\n\t    fragColor = vec4(snoise((vec2(1.) - uv) * 7.5), snoise(uv * 8.), snoise(uv*6.8), 1.);\n    } else {\n        vec3 u = texture(iChannel0, vec2(uv.x, uv.y-uvfrac.y)).rgb;\n        vec3 d = texture(iChannel0, vec2(uv.x, uv.y+uvfrac.y)).rgb;\n        vec3 l = texture(iChannel0, vec2(uv.x-uvfrac.x, uv.y)).rgb;\n        vec3 r = texture(iChannel0, vec2(uv.x+uvfrac.x, uv.y)).rgb;\n    \tfragColor = vec4((u+d+l+r)/4., 0.);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}