{"ver":"0.1","info":{"id":"XfKGWd","date":"1713441907","viewed":85,"name":"Mandelbrot zoom with dithering","username":"DingoDoggins","description":"move with arrow keys, zoom with space key. unzoom with A","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst mat4 bayer4x4=mat4(0.0,8.0,2.0,10.0,12.0,4,14,6,3.0,11.0,1,9,15.0,7.0,13.0,5.0);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 scaled=-vec2(1.5,1)+fragCoord/iResolution.xy/vec2(0.3,0.6);\n\n    vec2 uv = gl_FragCoord.xy / iResolution.xy;\nvec3 offset=texture(iChannel1, uv).xyz;\nscaled.x=scaled.x;\nscaled.y=scaled.y;\nscaled=(scaled)/pow(2.0,offset.z*10000.0);\n \n\n \nscaled=scaled+(offset.xy*max(0.0000001,1.0-max((100.0-100000.0*offset.z)*pow(offset.z,50.0),0.001)));\n    float x0 = scaled.x;\n    float y0 = scaled.y; \n    float x = 0.0;\n    float y = 0.0;\n    int iteration = 0;\n    int max_iteration = 10000;\n\n\n    \nwhile (1.0*x*x + y*y < 2.0*2.0 && iteration < max_iteration){\nfloat xtemp = x*x - y*y + x0;\n        y = 2.0*x*y + y0;\n        x = xtemp;\n        iteration = iteration + 1;\n\n}\n    vec3 col=vec3(0,1,0);\n   \n    if(iteration<max_iteration){fragColor = vec4(col*(float(iteration*(int(400.0-offset.z*120000.0)))/float(max_iteration)),1.0);\nfragColor.g+=float(int((fragColor+0.20*bayer4x4[int(uv.x*iResolution.x/5.0)%4][int(uv.y*iResolution.y/5.0)%4]/16.0-0.5)*50.0))/50.0;\n    }else{fragColor = vec4(0,0,0,1);\n    \n    }\n       \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nconst int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\nconst int A  = 65;\nconst int SPACE=32;\n    // keypress\t\n    const float speed=10.0;\n    vec2 uv = gl_FragCoord.xy / iResolution.xy;\n    vec3 offset=texture(iChannel1, uv).xyz;\n    offset.x -= (1.0-offset.z)*speed*0.0001*texelFetch( iChannel0, ivec2(KEY_LEFT,0),0 ).x;\n    offset.x +=  (1.0-offset.z)*speed*0.0001*texelFetch( iChannel0, ivec2(KEY_RIGHT,0),0 ).x;\n\toffset.y +=  (1.0-offset.z)*speed*0.0001*texelFetch( iChannel0, ivec2(KEY_UP,0),0 ).x;\n    offset.y -=  (1.0-offset.z)*speed*0.0001*texelFetch( iChannel0, ivec2(KEY_DOWN,0),0 ).x;\n    offset.z +=  0.0000001*texelFetch( iChannel0, ivec2(SPACE,0),0 ).x;\n    offset.z -=  0.0000001*texelFetch( iChannel0, ivec2(A,0),0 ).x;\n    fragColor=vec4(offset, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}