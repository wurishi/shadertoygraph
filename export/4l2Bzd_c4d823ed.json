{"ver":"0.1","info":{"id":"4l2Bzd","date":"1516896445","viewed":460,"name":"bad fake rgb refraction","username":"public_int_i","description":"fake per-channel refraction, click to rotate","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["refraction","fake","rgb","bad","interactable"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Ethan Alexander Shulman 2018\n\n#define CHANNEL_REFRACTION vec3(3,4,4)\n#define CHANNEL_WEIGHT vec3(.4,.5,.6)\n\n//2d rotation\nmat2 rot2d(float a) {\n    float s = sin(a),c = cos(a);\n    return mat2(c,s,-s,c);\n}  \n\n#define MAX_DISTANCE 1e5\n\n//returns distance to sphere or -1 if no hit\nfloat raySphere(in vec3 rp, in vec3 rd, in vec3 spherePos, in float radius) {\n    \n    vec3 rc = rp-spherePos;\n    float c = dot(rc, rc) - radius*radius;\n    float b = dot(rd, rc);\n\n    float d = b*b - c;\n    float t = -b - sqrt(abs(d));\n\n    if (d < 0.0 || t < 0.0) return MAX_DISTANCE;\n    return t;\n}\n\nvoid mainImage(out vec4 o, in vec2 u)\n{\n    vec3 rp = vec3(0,0,-1),\n        rd = normalize(vec3((u-iResolution.xy*.5)/iResolution.x,1));\n    mat2 yaw = rot2d(iMouse.x/iResolution.x*6.28),\n         pitch = rot2d(iMouse.y/iResolution.y*6.28-1.6);\n    rp.yz *= pitch;rd.yz *= pitch;\n    rp.xz *= yaw;rd.xz *= yaw;\n\n    float sr = raySphere(rp,rd,vec3(0.),.1);\n    vec4 c = vec4(1);\n    if (sr < MAX_DISTANCE) {\n        vec3 hp = rp+rd*sr,\n            n = normalize(hp-texture(iChannel0,vec2(atan(hp.x,hp.z)/3.14+0.5,hp.y*10.)).x*(1.-abs(hp))*.02);\n        rd = refract(rd,n,.88);\n        c.xyz = 1.+max(sin(dot(rd,vec3(1))*CHANNEL_REFRACTION*6.28+CHANNEL_REFRACTION*vec3(0,1,10)),0.)*CHANNEL_WEIGHT;\n    }\n\t\t\n    c *= texture(iChannel1,rd);\n    o = c;\n}","name":"Image","description":"","type":"image"}]}