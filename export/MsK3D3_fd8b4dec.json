{"ver":"0.1","info":{"id":"MsK3D3","date":"1456846844","viewed":164,"name":"First try distance field","username":"marcell","description":"distance field","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat plane(vec3 pos)\n{\n    return pos.y;\n}\n\nfloat sphere(vec3 p, float radius)\n{\n     return length(p) - radius;\n}\n\nfloat box(vec3 p, vec3 b)\n{\n\treturn length(max(abs(p)-b,0.0));\n}\n\nfloat map(vec3 p)\n{\n    float ground = plane(p + vec3(0, 1.5, 0));\n    \n    float dom = 6.0;\n    p.x = mod(p.x, dom) - 0.5 * dom;\n    p.z = mod(p.z, dom) - 0.5 * dom;\n    \n    float _box = box(p + vec3(0.5 * sin(iTime), -0.3, 0.0), vec3(2.0, 1.0, 0.55));\n    float _sphere = sphere(p - vec3(0.5 * sin(iTime), 1.0, 0.0), 1.0);\n    _sphere = max(_box, -_sphere);\n    \n    return min(_sphere, ground);\n}\n\nconst float E = 0.001;\nvec3 get_normal(vec3 p)\n{\n    vec2 eps = vec2(0.0, E);\n    vec3 normal = normalize(vec3(\n        map(p + eps.yxx) - map(p - eps.yxx),\n        map(p + eps.xyx) - map(p - eps.xyx),\n        map(p + eps.xxy) - map(p - eps.xxy)));\n    \n    return normal;\n}\n\nfloat shadow(vec3 lp, vec3 ld)\n{\n    float t = 0.5;\n    for(int i = 0; i < 8; i++)\n    {\n        float h = map(lp + ld * t);\n        if(h < 0.1)\n        {\n            return 0.0;\n        }\n        t += h;\n    }\n    return 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 v = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n\tv.x *= iResolution.x/iResolution.y;\n\t\n\tvec3 pos = vec3(0.0, 6.0, 6.0);\n    vec3 dir = normalize(vec3(v.x, v.y, -1.0));\n    \n    vec3 light_dir = normalize(vec3(10.0 * sin(iTime), 15.0, 10.0));\n    \n    vec3 color = vec3(0.0);\n    float d;\n    \n    for(int i = 0; i < 128; i++)\n    {\n        d = map(pos);\n        if(d < E)\n        {\n            color = dot(get_normal(pos), light_dir) * vec3(0.4, 0.7, 0.4)/* * shadow(pos, light_dir)*/;\n            break;\n        }\n        pos += d * dir;\n    }\n    \n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}