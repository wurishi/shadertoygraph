{"ver":"0.1","info":{"id":"sdS3RV","date":"1617643445","viewed":47,"name":"Test palettes","username":"Rerecursing","description":"Testing continuous palettes to quickly select a color in time sensitive pictionary","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/lsS3Wc\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float y = fract((1.0 - uv.y) * 2.0);\n    float x = uv.x;\n\n    if (uv.y > 0.5) {\n        fragColor = vec4(hsl2rgb(vec3(x, 1.0, y)),1.0);\n    } else{\n        fragColor = vec4(hsv2rgb(vec3(x, 1.0-y*y*y*y*y, sqrt(sqrt(y)))),1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}