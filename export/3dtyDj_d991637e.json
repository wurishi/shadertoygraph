{"ver":"0.1","info":{"id":"3dtyDj","date":"1602441370","viewed":102,"name":"NoGunsLifeSeven","username":"Tomasz","description":"Draw NGLS","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ngls"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n#define grayGreen vec3(0.09, 0.15, 0.15)\n\nconst int N = 6;\n\nfloat N21(vec2 p) {\n\treturn fract(sin(p.x*100.0 + p.y * 6574.0) * 5647.0);\n    \n}\nfloat drawObject(vec2 p, float wb, float wt, float yb, float yt, float blur) {\n\tfloat m = S(- blur, blur, p.y - yb);\n    m *= S(blur, - blur, p.y - yt);\n    \n    p.x = abs(p.x);\n    float w = mix(wb, wt,(p.y-yb) / (yt - yb));\n    m *= S(blur, - blur, p.x-w);\n    \n    return m;\n}\nfloat drawCircle(vec2 p, float size, float blur) {\n  \n    float d = length(p);\n    float circle = S(-size + blur , size, d);\n        \n    return circle;\n} \nfloat sdPoly( in vec2[N] v, in vec2 p )\n{\n    const int num = v.length();\n    float d = dot(p-v[0],p-v[0]);\n    float s = 1.0;\n    for( int i=0, j=num-1; i<num; j=i, i++ )\n    {\n        \n        vec2 e = v[j] - v[i];\n        vec2 w =    p - v[i];\n        vec2 b = w - e*clamp( dot(w,e)/dot(e,e), 0.0, 1.0 );\n        d = min( d, dot(b,b) );\n\n        \n        bvec3 cond = bvec3( p.y>=v[i].y, p.y<v[j].y, e.x*w.y>e.y*w.x );\n        if( all(cond) || all(not(cond)) ) s*=-1.0;  \n    }\n    \n    return s*sqrt(d);\n}\nfloat polyTeeth(vec2 p, vec2 v00, vec2 v01, vec2 v02, vec2 v03, vec2 v04, vec2 v05) {\n\tvec2 v0 = vec2(0.0, 0.0) + v00;\t//prawa góra\n\tvec2 v1 = vec2(0.0, 0.0) + v01; //lewa góra\n\tvec2 v2 = vec2(0.0, 0.0) + v02; //lewy środek\n\tvec2 v3 = vec2(0.0, 0.0) + v03;  //lewy dół\n    vec2 v4 = vec2(0.0, 0.0) + v04; //prawy dół\n    vec2 v5 = vec2(0.0, 0.0) + v05; //prawy środek\n    \n    vec2[] TeethArray = vec2[](v0,v1,v2,v3,v4, v5);\n    \n    float d = sdPoly(TeethArray, p);\n    \n    float Teeth = smoothstep(0.01, 0.0, d);\n    \n    return Teeth;\n}\nfloat sdRoundBox( in vec2 p, in vec2 b, in vec4 r ) \n{\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    \n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\nfloat Smile(vec2 p, vec2 size, vec4 ra, float blur) {\n\t\n    float smile = sdRoundBox(p, size, ra); \n    float lightSmile = S(0.0 - blur, 0.1, smile);\n    \n    return lightSmile;\n}\nvec4 drawFaceOfSeven(vec2 p, vec3 col) {\n    \n    float headAndShoulder = drawObject(p, 0.6, 0.14, - 0.5, 0.35, 0.02);\n    headAndShoulder += drawObject(p, 0.06, 0.05,  0.35, 0.4, 0.02);\n    headAndShoulder += drawObject(p, 0.03, 0.03,  0.4, 0.45, 0.02);\n    headAndShoulder += drawObject(p - vec2(0.4, 0.0), 0.08, 0.05, -0.21, -0.15, 0.018);\n    headAndShoulder += drawObject(p - vec2(-0.4, 0.0), 0.08, 0.05, -0.21, -0.15, 0.018);\n    headAndShoulder += drawObject(p - vec2(0.45, 0.0), 0.15, 0.02, -0.3, -0.2, 0.018);\n    headAndShoulder += drawObject(p - vec2(- 0.45, 0.0), 0.15, 0.02, -0.3, -0.2, 0.018);\n    headAndShoulder += drawObject(p - vec2(0.6, 0.0), 0.3, 0.095, -0.5, -0.3, 0.018);\n    headAndShoulder += drawObject(p - vec2(- 0.6, 0.0), 0.3, 0.095, -0.5, -0.3, 0.018);\n    \n    \n    float eye = 1.0 -drawCircle(p - vec2(0.0, 0.15), 0.06, 0.08);\n    eye += 1.0 - drawCircle(p - vec2(0.0, 0.125), 0.11, 0.09);\n    \n    \n    float smile = 1.0 - Smile(p - vec2(0.0, -0.19), \n                              \t  vec2(0.3, 0.08), \n                              \t  vec4(0.3, 0.3, 0.3, 0.3),\n                             \t   S(0.0, 0.1, 0.01));\n    smile +=1.0 - drawCircle(p - vec2(0.0, -0.16), 0.1, 0.004);\n    \n    float c = N21(p);\n    \n    float grainSmile = S(0.1, 0.5 + c , smile);\n    \n    col += eye + smile * grainSmile;\n    \n    \n    float teeth = drawObject(p - vec2(0.0, 0.05), 0.09, 0.04, -0.4, -0.22, 0.0078);\n    teeth += drawObject(p - vec2(- 0.0, 0.25), 0.0, 0.3, -0.4, -0.27, 0.0078);\n   \n    float TeethLeftDown = polyTeeth(p,  vec2(-0.13,-0.235),\n                                    \tvec2(-0.13,-0.16),\n                                \t\tvec2(-0.17,-0.14),\n                                \t\tvec2(-0.3,-0.34),\n                                \t\tvec2(-0.05,-0.34),\n                                \t\tvec2(- 0.09, -0.25));\n    \n    float TeethRightDown = polyTeeth(p, vec2(0.15,-0.23),\n                                    \tvec2(0.14,-0.17),\n                                \t\tvec2(0.19,-0.13),\n                                \t\tvec2(0.27,-0.33),\n                                \t\tvec2(0.09,-0.33),\n                                \t\tvec2(0.09, -0.26));\n                                \n    float TeethLeftUp = polyTeeth(p, \tvec2(-0.08,-0.21),\n                                    \tvec2(-0.05,-0.09),\n                                \t\tvec2(-0.16,0.0),\n                                \t\tvec2(-0.2,-0.05),\n                                \t\tvec2(-0.13,-0.07),\n                                \t\tvec2(-0.13, -0.19));\n    \n    float TeethRightUp = polyTeeth(p, \tvec2(0.08,-0.21), //lewy dół\n                                    \tvec2(0.05,-0.09), //lewy środek\n                                \t\tvec2(0.18,0.0), //prawy góra\n                                \t\tvec2(0.22,-0.05), //prawy środek \n                                \t\tvec2(0.14,-0.07), //prawy środek dół\n                                \t\tvec2(0.14, -0.18)); //prawy dół\n    \n    float cheekLeft = \t  polyTeeth(p,  vec2(-0.4,-0.235),\n                                    \tvec2(-0.3,-0.05),\n                                \t\tvec2(-0.16,-0.05),\n                                \t\tvec2(-0.3,-0.34),\n                                \t\tvec2(-0.3,-0.34),\n                                \t\tvec2(- 0.5, -0.35));\n    float cheekRight = \t  polyTeeth(p,  vec2(0.45,-0.25),\n                                    \tvec2(0.33,-0.05),\n                                \t\tvec2(0.18,-0.06), //prawa góra\n                                \t\tvec2(0.21,-0.13),\n                                \t\tvec2(0.25,-0.12),\n                                \t\tvec2(0.3, -0.43));\n    \n                                \n    float mouth =TeethLeftDown + teeth + TeethRightDown + TeethLeftUp + TeethRightUp + cheekLeft + cheekRight;\n   \n    \n    col -= mouth;\n\n    return vec4(col, headAndShoulder);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n \t\n    vec4 col = vec4(grayGreen, 1.0);\n    \n    \n    vec4 DrawFaceOfSeven = drawFaceOfSeven(uv, vec3(0.0));\n    \n    col = mix(col, DrawFaceOfSeven, DrawFaceOfSeven.a);\n    \n \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}