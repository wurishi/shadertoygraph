{"ver":"0.1","info":{"id":"XscXW7","date":"1459577973","viewed":336,"name":"Simple Diffusion","username":"dmbfm","description":"Simplest diffusion-only shader","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["diffusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 pixelSize = vec2(1.0, 1.0)/ iResolution.xy;\n    \n    float value =   1.0 - min(1.0, max(0.0, texture(iChannel0, uv).x));        \n    \n    //vec3 color = vec3(0.2, 0.1, 0.4);\n    \n\t//fragColor = vec4(color * vec3(value), 1.0);\n    \n    fragColor = vec4(value, value, value, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nconst float dt = 0.1222;\n\nvec4 circle(vec2 center, float radius, vec4 color, vec2 coord) {\n    \n    if (distance(coord, center) <= radius)\n        return color;\n    else \n        return vec4(0,0,0,1);\n    \n}\n\n\nfloat laplacian(vec2 uv) {\n \n    vec2 pixelSize = .01 / iResolution.xy;        \n    \n    \n    float fix2 = texture(iChannel0, uv + vec2(2.0*pixelSize.x, 0)).x;\n\tfloat fix2n = texture(iChannel0, uv - vec2(2.0*pixelSize.x, 0)).x;                           \n                            \n\tfloat fiy2 = texture(iChannel0, uv + vec2(0, 2.0*pixelSize.y)).x;\n\tfloat fiy2n = texture(iChannel0, uv - vec2(0, 2.0*pixelSize.y)).x;                            \n\t\n\tfloat fi = texture(iChannel0, uv).x;\n                            \n\treturn fix2 + fix2n + fiy2 + fiy2n - 4.0*fi;                            \n                           \n\t/*                                                      \n    \n    \n    float f2x = (texture(iChannel0, uv + vec2(2.0*pixelSize.x, 0)).x\n        - texture(iChannel0, uv - vec2(2.0*pixelSize.x, 0)).x)/2.0;\n    \n    float f2y = (texture(iChannel0, uv + vec2(0, 2.0*pixelSize.y)).x\n        - texture(iChannel0, uv - vec2(0, 2.0*pixelSize.y)).x)/2.0;\n    \n    return f2x + f2y;*/\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    if (iFrame == 0)       \n    {\n    \t//fragColor = circle(vec2(300, 300), 200.0, vec4(1.0, 0.0, 0.0, 1.0), fragCoord.xy);       \n        //fragColor = texture(iChannel2, uv);\n        fragColor = vec4(0,0,0,1.0);\n        return;\n    }\n    \n    \n    vec4 data = texture(iChannel0, uv);\n    //float d = 100.0;            \n    \n    float d = 100.0*texture(iChannel1, uv).x;\n    \n    float value = data.x;   \n    float d2 = laplacian(uv);\n    \n    //float final = value + d*d2*dt;      \n    float final = value +  d*d2*dt;      \n    \n    fragColor = vec4(final, 0, 0, 1) + circle(iMouse.xy,10.0, vec4(1.0,0,0,1.0), fragCoord.xy);\n    \n}","name":"Buf A","description":"","type":"buffer"}]}