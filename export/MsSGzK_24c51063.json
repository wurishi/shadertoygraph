{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const float PI2 = 3.14159265359*2.0;\n\nvec4 quaternion(vec3 p, float a)\n{\n\treturn vec4(p*sin(a/2.0),cos(a/2.0));\n}\n\nvec3 qtransform(vec4 q, vec3 p)\n{\n\treturn p+2.0*cross(cross(p, q.xyz)-q.w*p, q.xyz);\n}\n\nvec3 knot(float a)\n{\n\t// http://en.wikipedia.org/wiki/Trefoil_knot\n\treturn vec3(\n\t\tsin(a)+2.0*sin(2.0*a),\n\t\tcos(a)-2.0*cos(2.0*a),\n\t\t-sin(3.0*a)\n\t);\n}\n\nfloat udBox(vec3 p, vec3 b)\n{\n\treturn length(max(abs(p)-b,0.0));\n}\n\nfloat de(vec3 p)\n{\n\tconst int steps = 50;\n\tvec3 range = vec3(3.0, 3.0, 1.0);\n\tfloat radius = 0.1;\n\tfloat ratio = 0.2;\n\tfloat eps = 0.001;\n    // boundingBox\n    vec3 bb = ratio*range+radius;\n    if (any(greaterThan(abs(p), bb))) return length(max(abs(p)-bb,0.0)) + eps;\n\t/*\n\tif (abs(p.x)>ratio*range.x+radius){return udBox(p, ratio*range+radius-eps);}\n\tif (abs(p.y)>ratio*range.y+radius){return udBox(p, ratio*range+radius-eps);}\n\tif (abs(p.z)>ratio*range.z+radius){return udBox(p, ratio*range+radius-eps);}\n\t*/\n\tfloat d = length(p);\n\tfor (int i=0; i < steps; i++)\n\t{\n\t\tfloat a = float(i)*PI2/float(steps);\n\t\tvec3 b = ratio*knot(a)-p;\n        d = min(d, dot(b, b));\n\t}\n\td = sqrt(d);\n\treturn d-radius;\n}\t\n\nfloat map(vec3 p)\n{\n\treturn de(p);\n}\n\nvec3 calcNormal(vec3 p)\n{\n\tvec3 eps = vec3(0.0001,0.0,0.0);\n\tvec3 nor = vec3(\n\t\tmap(p+eps.xyy)-map(p-eps.xyy),\n\t\tmap(p+eps.yxy)-map(p-eps.yxy),\n\t\tmap(p+eps.yyx)-map(p-eps.yyx));\n\treturn normalize(nor);    \n}\n\nvec3 render(vec3 ro, vec3 rd)\n{\n\tvec3 col = vec3(1.0, 0.8, 0.5);\n\tfloat t = 0.0, d;\n\tvec3 p = ro;\n\tfor(int i=0; i<64; ++i)\n\t{\n\t\td = map(p);\n\t\tt += d;\n\t\tp = ro+t*rd;\n\t}\n\tif(abs(d) < 0.001)\n\t{\n\t\tvec3 nor = calcNormal(p);\n\t\tfloat c = dot(normalize(vec3(1.0)),nor);\n\t\treturn c*col;\n\t}else{\n\t\treturn vec3(0.9, 0.9, 1.0);\n\t}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (fragCoord.xy*2.0-iResolution.xy)/iResolution.y;\n\tvec3 rd = normalize(vec3(p, -1.8));\n\tvec3 ro = vec3(0.0, 0.0, 2.0);\n\tvec4 q = quaternion(normalize(vec3(1.0)), iTime*0.5);\n\trd = qtransform(q, rd);\n\tro = qtransform(q, ro);\n    fragColor=vec4(render(ro, rd), 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsSGzK","date":"1390823949","viewed":453,"name":"Trefoil knot","username":"gaz","description":"3d shape","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""}}