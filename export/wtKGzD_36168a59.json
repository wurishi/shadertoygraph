{"ver":"0.1","info":{"id":"wtKGzD","date":"1578449594","viewed":238,"name":"toothpick cover","username":"dtsmio","description":"cover","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["cover"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord-0.5 * iResolution.xy)/iResolution.x;\n \n    vec3 col = vec3(0);\n    \n    float time = (iTime*2.);\n        \n    \n    vec2 cv = uv/2.;\n    cv *= log(time / 2. + 3.);\n    cv = rotate(cv, PI/4.);\n    cv.y = abs(cv.y);\n    cv.x = abs(cv.x);\n    float rot = 0.;\n    float iter = 1. + min(126., floor(time*4.));\n    iter = 128.;\n    vec2 id;\n    \n    for(float i = 2.; i < iter; i *= 2.) {\n        float size = i;\n        id = (floor(cv * size) + vec2(0.5));\n\n        float a = PI * (floor(1. * sin(id.y*2.2)) + floor(1. * cos(id.x*2.)))/(2.);\n        rot += a;\n\t\tcv = rotate(cv - id/size, a) + id/size;\n    }\n    id = (floor(cv * iter))/iter;\n    \n    \n\tfloat width = log(time / 2. + 3.)/4.;\n    //float width = 0.2;\n\n    float rv = (cv.x - id.x) * iter;\n    float line = smoothstep(0.5 - width, 0.5, rv) * smoothstep(0.5 + width, 0.5, rv);\n\n    //line *= 1. - step(sin(time / 2. + id.y * 4. + id.x * 4.) * 0.5 + 0.5, cv.y);\n    float len = cv.x * iter + cv.y * iter;\n    len *= -1.;\n    len += (sin(time/8.)* 0.5 + 0.5) * iter;\n    \n    line *= smoothstep( len, len - 0.02, cv.y);\n    col = vec3(line);\n    col.rg *= 0.2 + sin(cv * 24.)/4. + cos(uv*12.)/4.;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}