{"ver":"0.1","info":{"id":"slKSRW","date":"1640279103","viewed":92,"name":"Black holes d1","username":"Safergo","description":"Very simple shader to experiment a liitle with noise.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","amateur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Noise21(vec2 uv) {\n   return fract(sin(dot(uv, vec2(223.225, 123.523))) * 14.0);\n}\n\nfloat createBlackHole(float noise, vec2 pos, float sz) {\n   float bh = length(pos * noise);\n   bh = smoothstep(sz - 0.002, sz, bh);\n\n   return bh;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n   vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.xy;\n\n   uv *= 7.0;\n   float noise = Noise21(uv * cos(sin((iTime + 10.0) * 0.007)) * 0.02);\n\n   // Create first black hole\n   vec2 bhPos = vec2(-0.8, 3.5) + uv;\n   vec3 blackHoles = vec3(createBlackHole(noise, bhPos, 0.7));\n\n   // Create n black holes\n   bhPos = vec2(-3.7, -3.0) + uv;\n   blackHoles *= vec3(createBlackHole(noise, bhPos, 0.5));\n   bhPos = vec2(-1.0, -4.5) + uv;\n   blackHoles *= vec3(createBlackHole(noise, bhPos, 1.25));\n   bhPos = vec2(2.5, -3.4) + uv;\n   blackHoles *= vec3(createBlackHole(noise, bhPos, 0.9));\n   bhPos = vec2(-3.5, 2.2) + uv;\n   blackHoles *= vec3(createBlackHole(noise, bhPos, 1.3));\n   bhPos = vec2(-2.2, -1.0) + uv;\n   blackHoles *= vec3(createBlackHole(noise, bhPos, 0.7));\n   bhPos = vec2(2.2, 1.0) + uv;\n   blackHoles *= vec3(createBlackHole(noise, bhPos, 1.5));\n\n   vec3 color = vec3(sin(iTime * 0.0002), 0.5, 1.0);\n\n   fragColor = vec4(blackHoles * color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}