{"ver":"0.1","info":{"id":"4sKfD3","date":"1530816859","viewed":507,"name":"columns 1: octogons","username":"FabriceNeyret2","description":"octogonal columns.\n","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","sdf","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime, r=1., h=6.;                 // r: radius h: height/2.\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = normalize(vec3(.3*(U+U-q.xy)/q.y, -1)),// ray direction\n          p = 30./q, a;                          // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 )\n        q = p,\n        q.xz *= R, q.yz *= R,                    // rotation\n        q.x = mod(q.x+3.,6.) -3.,                // repeat in x\n        q.y = abs(q.y)-5.,                       // 2 rows\n            \n        a = abs(q), \n        t = max(a.x,a.y) -r,                     // square column\n      //t = max(t,max(a.x+a.y,a.x-a.y)/1.41-1.), // inter rot45(square column)\n        t = max(t,(a.x+a.y)/1.41 -r),            // simplifies due to abs() symmetry\n        t = max(t,a.z -h),                       // inter range of Z\n\n        p += t*D;                                // step forward = dist to obj\n}\n","name":"Image","description":"","type":"image"}]}