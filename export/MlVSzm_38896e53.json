{"ver":"0.1","info":{"id":"MlVSzm","date":"1483690116","viewed":198,"name":"Water over Rocks","username":"FactoryReject","description":"first try at a shader, attempting to make it look like was over some rocks\n\nChanged it to use mipmaps to simulate waves distorting the bottom of the water instead of just a general blurring","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["water","mipmap","moving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CENTER (iResolution.xy / 2.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//Centered UV Coordinates, accounting for aspect ratio\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n    \n    // have the color of the water varry by time and position\n    vec4 waterColor = vec4(0., .4 + .1*sin(uv.x + uv.y * sin(iTime * 2.) * 5.), .9 + .1*sin(uv.x + uv.y * sin(iTime * 2.) * 5.), 1.);\n    \n    // current offset to make it seem like the river is flowing\n    vec2 rocksOffset = vec2(iTime*.03, .4 * sin(iTime * .1));\n    \n    // initial point of texture being looked at\n    vec4 rocks = texture(iChannel0, uv + rocksOffset, 4.0*abs(.5 + .5*sin(uv.x + uv.y * sin(iTime * 2.) * 5.)));\n    \n    // final color\n    fragColor = (rocks * waterColor)*2.;\n}","name":"Image","description":"","type":"image"}]}