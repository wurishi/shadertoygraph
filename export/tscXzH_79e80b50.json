{"ver":"0.1","info":{"id":"tscXzH","date":"1571416870","viewed":89,"name":"Game of Life (zoomed in)","username":"Anxeal","description":"First shader on ShaderToy :)\n\nYou can drag around, planning to add a minimap soon.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["conway"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ZOOM 3.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv/=ZOOM;\n    \n    uv+=iMouse.xy/iResolution.xy*(ZOOM-1.)/ZOOM;\n    \n    fragColor= texture(iChannel0, uv);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(vec2 p)\n{\n    p+=vec2(length(iDate));\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat get(vec2 v)\n{\n    return texture(iChannel0, v/iResolution.xy).r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame==0)\n    {\n        float rnd = step(0.5,rand(fragCoord));\n        vec3 col = vec3(rnd);\n        fragColor = vec4(col, 1.0);\n        return;\n    }\n    \n    vec2 p = fragCoord;\n    float last = get(p);\n    float neighbors = get(p+vec2(1.0,1.0))+get(p+vec2(1.0,0.0))+get(p+vec2(1.0,-1.0))+\n        \t\t\t  get(p+vec2(0.0,1.0))+                     get(p+vec2(0.0,-1.0))+\n                      get(p+vec2(-1.0,1.0))+get(p+vec2(-1.0,0.0))+get(p+vec2(-1.0,-1.0));\n    \n    float next;\n    \n    if(last == 0.)\n    {\n        if(neighbors == 3.0)\n        {\n            next = 1.0;\n        }\n        else\n        {\n            next = 0.0;\n        }\n    }\n    else\n    {\n        if(neighbors <= 1.0 || neighbors >= 4.0)\n        {\n            next = 0.0;\n        }\n        else\n        {\n            next = 1.0;\n        }\n    }\n    \n    fragColor = vec4(vec3(next),1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}