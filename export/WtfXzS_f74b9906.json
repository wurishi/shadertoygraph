{"ver":"0.1","info":{"id":"WtfXzS","date":"1563293018","viewed":249,"name":"RayMarchingBand001","username":"Hirai_worthless","description":"tutorial of raytracing","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p){\n    vec3 q = fract(p) * 2.0 - 1.0;\n    return min(\n        min(length(q.xz) - 0.25,length(q.xy) - 0.25)\n        ,length(q.yz) - 0.25);\n}\n\nfloat trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    for(int i = 0; i < 32; ++i){\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy /iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv,1.0));\n    r.xy *= mat2(cos(iTime),sin(iTime),-sin(iTime),cos(iTime));\n    vec3 o = vec3((cos((iTime) * 1.5* 3.14159265)+1.0) * 0.5\n                  ,(sin((iTime) * 1.5* 3.14159265)+1.0) * 0.5\n                  , iTime * 3.0);\n    float t = trace(o,r);\n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    vec3 fc = vec3(fog);\n\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}