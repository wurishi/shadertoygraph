{"ver":"0.1","info":{"id":"tsfXzn","date":"1550447780","viewed":180,"name":"Iridescent Blob","username":"cbrpnk","description":"Everyday.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nfloat pat(vec2 p)\n{\n    p = mod(p+vec2(1), 2.)-vec2(1.);\n    float d = 1000.;\n    for(float i=0.; i<10.; ++i) {\n        p *= rot(i*.3*cos(iTime*.1));\n        for(float j=0.; j<5.; ++j) {\n            p *= rot(j*.02*sin(iTime*.3));\n            p -= vec2(sin(i)+cos(iTime), cos(j)+sin(iTime))*.01;\n            d = min(d, length(p-vec2(j*.2)) - (.2-j*.05*abs(cos(iTime))));\n        }\n    }\n    return d;\n}\n\nfloat map(vec3 p)\n{\n    p.xz *= rot(iTime);\n    return length(p) - .6 + pat(p.xy)*.1 + pat(p.yz)*.3 -pat(p.xz)*.4;\n}\n\nfloat march(vec3 ro, vec3 rd)\n{\n    float t = 0.;\n    for(int i=0; i<128; ++i) {\n    \tfloat d = map(ro+rd*t);\n        if(d < .001 || d > 100.) break;\n        t += d;\n    }\n    return t;\n}\n\nvec3 getNormal(vec3 p)\n{\n    vec2 eps = vec2(.001, 0.);\n    return normalize(vec3(\n    \tmap(p+eps.xyy) - map(p-eps.xyy),\n        map(p+eps.yxy) - map(p-eps.yxy),\n        map(p+eps.yyx) - map(p-eps.yyx)\n    ));\n}\n\nfloat marchSs(vec3 ro, vec3 rd)\n{\n    float t = 0.;\n    for(float i=0.; i<1.; i+=.1) {\n    \tfloat d = map(ro+rd*i);\n        t += d;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-iResolution.xy) / iResolution.y;\n    vec3 cam = vec3(0, 0, 1);\n    vec3 dir = normalize(vec3(uv, -1));\n    float pattern = pat(uv*4.);\n    float d = march(cam, dir);\n    \n    vec3 col = vec3(.1, .2, .3);\n    vec3 p = cam+dir*d;\n    vec3 normal = getNormal(p);\n    \n    if(d<50.) {\n        float ss = marchSs(p, dir);\n    \tcol = vec3(.1, .8, .6) * max(0., dot(normal, vec3(1)));\n        col += vec3(.1, .1, .2) * pow(max(0., dot(normal, vec3(-1))), .5);\n        col *= vec3(.1, .1, .2);\n        col -= vec3(.2, .2, .1)*pow(1.-max(0., dot(normal, -dir)), 3.);\n        col += .5*col + .5+.2*ss*vec3(.3, .2, .8)*vec3(max(.5,ss));\n        col /= 1.-d*.5;\n        col = pow(col, vec3(1.5));\n    }\n    \n    col = pow(col, vec3(1., 3.*d, .2));\n    col *= 1.-length(uv)*.4;\n    fragColor = vec4(pow(col.grb, vec3(1./2.2)),1.0);\n}","name":"Image","description":"","type":"image"}]}