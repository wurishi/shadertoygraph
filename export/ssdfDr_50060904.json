{"ver":"0.1","info":{"id":"ssdfDr","date":"1656367572","viewed":65,"name":"l0sharik","username":"OlehTsyrkun","description":"loh made of shariki","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["losharik"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv  = 1.0-2.0*fragCoord/iResolution.xy;\n    float scale = iResolution.x/iResolution.y; \n    \n    // color vectors for losharik's parts\n    vec3 a1 = vec3(1.0, 0.0, 0.0);\n    vec3 a2 = vec3(0.0, 1.0, 0.0);\n    vec3 a3 = vec3(0.0, 0.0, 1.0);\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    \n    // x and y coordinates of parts (from -1 to 1)\n    float   x1 = uv.x;\n    float   y1 = uv.y;\n    \n    float   x2 = uv.x + 0.15;\n    float   y2 = uv.y + 0.075;\n    \n    float   x3 = uv.x + 0.3;\n    float   y3 = uv.y + 0.2;\n    \n    float   x4 = uv.x - 0.15;\n    float   y4 = uv.y + 0.075;\n    \n    float   x5 = uv.x - 0.3;\n    float   y5 = uv.y + 0.2;\n    \n    float   x6 = uv.x - 0.35;\n    float   y6 = uv.y + 0.4;\n    \n    float   x7 = uv.x - 0.4;\n    float   y7 = uv.y + 0.7;\n    \n    float   x8 = uv.x - 0.35;\n    float   y8 = uv.y + 0.75;\n    \n    float   x9 = uv.x - 0.35;\n    float   y9 = uv.y + 0.75;\n    \n    float   x10 = uv.x - 0.5;\n    float   y10 = uv.y + 0.65;\n    \n    float   x11 = uv.x + 0.07;\n    float   y11 = uv.y - 0.15;\n    \n    float   x12 = uv.x - 0.07;\n    float   y12 = uv.y - 0.15;\n    \n    float   x13 = uv.x - 0.1;\n    float   y13 = uv.y - 0.3;\n    \n    float   x14 = uv.x + 0.08;\n    float   y14 = uv.y - 0.3;\n    \n    float   x15 = uv.x - 0.13;\n    float   y15 = uv.y - 0.45;\n    \n    float   x16 = uv.x + 0.11;\n    float   y16 = uv.y - 0.45;\n    \n    float   x17 = uv.x - 0.07;\n    float   y17 = uv.y - 0.6;\n    \n    float   x18 = uv.x + 0.2;\n    float   y18 = uv.y - 0.6;\n    \n    float   x19 = uv.x - 0.13;\n    float   y19 = uv.y - 0.75;\n    \n    float   x20 = uv.x + 0.13;\n    float   y20 = uv.y - 0.75;\n    \n    float   x21 = uv.x - 0.3;\n    float   y21 = uv.y - 0.01;\n    \n    float   x22 = uv.x - 0.25;\n    float   y22 = uv.y - 0.01;\n    \n    float   x23 = uv.x - 0.33;\n    float   y23 = uv.y - 0.05;\n    \n    float   x24 = uv.x - 0.28;\n    float   y24 = uv.y - 0.05;\n    \n    float   x25 = uv.x + 0.4;\n    float   y25 = uv.y + 0.35;\n    \n    float   x26 = uv.x + 0.5;\n    float   y26 = uv.y + 0.4;\n    \n    float   x27 = uv.x + 0.57;\n    float   y27 = uv.y + 0.35;\n    \n    float   x28 = uv.x + 0.6;\n    float   y28 = uv.y + 0.3;\n    \n    float   x29 = uv.x + 0.62;\n    float   y29 = uv.y + 0.28;\n    \n    // losharik's parts scale and varying pixel color\n     \n    // body\n    float    r = 0.1;\n     if (x1*x1+y1*y1/(scale*scale) < r*r) {\n         col = a1;\n     }\n     \n     if (x2*x2+y2*y2/(scale*scale) < r*r) {\n         col = a2;\n     }\n     \n     if (x3*x3+y3*y3/(scale*scale) < r*r) {\n         col = a3;\n     }\n     \n     if (x4*x4+y4*y4/(scale*scale) < r*r) {\n         col = a3;\n     }\n     \n     if (x5*x5+y5*y5/(scale*scale) < r*r) {\n         col = a2;\n     }\n     \n     if (x6*x6+y6*y6/(scale*scale) < r*r) {\n         col = a1;\n     }\n    \n    r = 0.08;\n     if (x25*x25+y25*y25/(scale*scale) < r*r) {\n         col = a1;\n     }\n    r = 0.06; \n     if (x26*x26+y26*y26/(scale*scale) < r*r) {\n         col = a2;\n     }\n    r = 0.04;\n     if (x27*x27+y27*y27/(scale*scale) < r*r) {\n         col = a1;\n     }\n    r = 0.02; \n     if (x28*x28+y28*y28/(scale*scale) < r*r) {\n         col = a2;\n     } \n     \n    r = 0.01; \n     if (x29*x29+y29*y29/(scale*scale) < r*r) {\n         col = a3;\n     }\n      \n    // head\n    r = 0.15;\n     if (x7*x7+y7*y7/(scale*scale) < r*r) {\n         col = a3;\n     }\n     \n    r = 0.03;\n     if (x8*x8+y8*y8/(scale*scale) < r*r) {\n         col = a2;\n     }\n     \n    r = 0.015;\n     if (x9*x9+y9*y9/(scale*scale) < r*r) {\n         col = a1;\n     }\n     \n    r = 0.1;\n     if (x10*x10+y10*y10/(scale*scale) < r*r) {\n         col = a3;\n     }\n     \n    r = 0.01;\n     if (x10*x10+y10*y10/(scale*scale) < r*r) {\n         col = vec3(0.0, 0.0, 0.0);\n     }\n     \n    // legs\n    r = 0.07;\n     if (x11*x11+y11*y11/(scale*scale) < r*r) {\n         col = a3;\n     }\n     \n     if (x12*x12+y12*y12/(scale*scale) < r*r) {\n         col = a2;\n     }\n     \n     if (x13*x13+y13*y13/3.0 < r*r) {\n         col = a3;\n     }\n     \n     if (x14*x14+y14*y14/(scale*scale) < r*r) {\n         col = a2;\n     }\n     \n     if (x15*x15+y15*y15/(scale*scale) < r*r) {\n         col = a1;\n     }\n     \n     if (x16*x16+y16*y16/(scale*scale) < r*r) {\n         col = a1;\n     }\n     \n     if (x17*x17+y17*y17/(scale*scale) < r*r) {\n         col = a2;\n     }\n     if (x18*x18+y18*y18/(scale*scale) < r*r) {\n         col = a3;\n     }\n     \n     if (x19*x19+y19*y19/(scale*scale) < r*r) {\n         col = a3;\n     }\n     \n     if (x20*x20+y20*y20/(scale*scale) < r*r) {\n         col = a2;\n     }\n     \n    // arms\n    r = 0.03;\n     if (x21*x21+y21*y21/(scale*scale) < r*r) {\n         col = a3;\n     }\n     \n     if (x22*x22+y22*y22/(scale*scale) < r*r) {\n         col = a2;\n     }\n     \n     if (x23*x23+y23*y23/(scale*scale) < r*r) {\n         col = a3;\n     }\n     \n     if (x24*x24+y24*y24/(scale*scale) < r*r) {\n         col = a2;\n     }\n\n       // Output to screen\n                fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}