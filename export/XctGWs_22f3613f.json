{"ver":"0.1","info":{"id":"XctGWs","date":"1712257814","viewed":143,"name":"Another Rule 110","username":"krazykylep","description":"A scrolling view of a Cellular Automata simulating rule 110","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["cellularautomata","rule110"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord){\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(vec2 co) {\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 iuv = ivec2(fragCoord.xy);\n    if (iFrame < 2 && fragCoord.x < 1.) {\n        // set up initial state\n        fragColor = vec4(round(rand(vec2(fragCoord.y, fract(iDate.w / 1000.)))));\n    } else if (iFrame > 1) {\n        if (fragCoord.x < 1.) {\n            // calculate next gen if we are on column 0\n            vec4 up = texelFetch(iChannel0, iuv + ivec2(0, 1), 0);\n            vec4 center = texelFetch(iChannel0, iuv, 0);\n            vec4 down = texelFetch(iChannel0, iuv + ivec2(0, -1), 0);\n            if ((up.r > 0.5 && center.r > 0.5 && down.r > 0.5) || (up.r > 0.5 && center.r > 0.5 && down.r < 0.5) || (up.r < 0.5 && center.r < 0.5 && down.r < 0.5)) {\n                fragColor = vec4(1.);\n            } else {\n                fragColor = vec4(0.);\n            }\n        } else {\n            // move all other columns towards the right by copying your left neighbor.\n            vec4 pixelLookupL = texelFetch(iChannel0, iuv + ivec2(-1, 0), 0);\n            fragColor = pixelLookupL;\n        }\n    }\n}\n","name":"Buffer A","description":"","type":"buffer"}]}