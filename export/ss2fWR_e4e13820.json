{"ver":"0.1","info":{"id":"ss2fWR","date":"1646137538","viewed":116,"name":"Shader Rythm Game","username":"peremoya2000","description":"Small interactive rytm-like game. Meant to be played on PC. No buffers, all data is fragment-local. \nClick inside the circle when the lines and circles intersect with it.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","interactive","music","videogame"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//difficulty(0-1) lower is more difficult\nfloat diff=.4;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 bufferUV = (fragCoord/iResolution.xy);\n    float score = texelFetch(iChannel0, ivec2(fragCoord.x,fragCoord.y), 0).w;\n    \n    // Normalized pixel coordinates (from -1 to 1)\n    vec3 uv = vec3((fragCoord-.5*iResolution.xy)/iResolution.y,0.); \n    \n    //Shift center\n    vec2 center = vec2(\n    (sin(iTime*.7+iTime*.0002))*.5*cos(iTime*0.03),\n    (cos(iTime)*(.2+iTime*.0001))*cos(iTime*0.07));\n    uv.xy+=center;\n    uv.z = length(uv);\n    \n    vec2 mousePos = (iMouse.xy-.5*iResolution.xy)/iResolution.y + center; \n    \n    //beat frame\n    vec3 beat = vec3(smoothstep(.08,.11,uv.z)*smoothstep(.11,.1,uv.z));\n    \n    float circles,vbar,hbar;\n    hbar=sin(.23*iTime-uv.x-iTime*.0001);\n    vbar=cos(.33*iTime+uv.y-.7+iTime*.0001);\n    \n    //closing bars\n    beat += vec3(pow(1.-abs(hbar),27.));\n    beat += vec3(pow(1.-abs(vbar),27.));\n    \n    //closing rings\n    float speed = (1.+cos(iTime*.6)*.001+.5)+iTime*.0003;\n    circles=sin(speed*iTime+uv.z);\n    beat += vec3(pow(1.-abs(circles),15.));    \n    circles=min(abs(circles),min(abs(hbar),abs(vbar)));\n    \n    if (beat.x>1.01 && uv.z<.11){\n        if(iMouse.z>.1 && length(mousePos-uv.xy)<.19){            \n            beat*=vec3(0,1,0);\n            beat*=beat;\n        }else{\n            beat*=vec3(1,0,0);\n        }\n    }\n    if(circles>diff && iMouse.z>.1 && uv.z<.11){            \n        beat*=vec3(1,0,0);\n    }\n    \n    fragColor = vec4(beat,1.0);    \n}","name":"Image","description":"","type":"image"}]}