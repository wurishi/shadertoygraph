{"ver":"0.1","info":{"id":"mtyBzG","date":"1702204465","viewed":24,"name":"polar plot - Klein Quartic","username":"tsakal","description":"polar plot sample","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["polarplot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float polPlot(vec2 p) {\n  float r = length(p),\n        t = atan(p.y, p.x) + iTime/2.,\n        a = 2., m = .6, l = m*m,\n        v = r*r - m*a*a;\n  return v*v - l*a* ( a*a*a - 2.*r*r*r* sin(3.*t) - 3.*a*r*r );\n}\n\nvoid mainImage( out vec4 O, vec2 u ) {\n    vec2  R = iResolution.xy,\n          p = 1.8 * ( u+u -R ) / R.y;\n\n    float d = polPlot(p),\n          c = smoothstep(1.5,0., abs(d)/fwidth(d) );\n \n    O = sqrt(c) * vec4(1,1,0,0);\n}\n/*\n// my wordy code before Fabrice suggestions\nconst vec3 LINECOLOR = vec3(1.,1.,0./2.);\nconst float graphTHICK = 7./2.;\nfloat S(float thick, float d){return smoothstep(thick, 0., d);}\nfloat polPlot(vec2 p) {\n  float r = length(p);\n  float t = atan(p.y, p.x) + iTime/2.;\n  float pp, a, l, m;\n  a=2.; m=.6; l=m*m;\n  pp = pow(pow(r,2.)-m*pow(a,2.), 2.) - l*a*(pow(a,3.)-2.*pow(r,3.)*sin(3.*t)-3.*a*pow(r,2.)); // https://mathcurve.com/courbes2d.gb/klein/klein.shtml\n  return pp;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.y;\n    p *= 1.8;\n    float d = abs(polPlot(p));\n    float c = S(graphTHICK*(fwidth(p.x)+fwidth(p.y)), d);\n    vec3 finalColor = c*LINECOLOR;\n    fragColor = vec4(sqrt(finalColor), 1.);\n}\n*/","name":"Image","description":"","type":"image"}]}