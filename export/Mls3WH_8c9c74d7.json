{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat x = fragCoord.x;\n    vec2 p = fragCoord.xy / iResolution.xy;\n\tvec2 c = p - vec2(0.25, 0.5);\n    \n    \n    vec3 col = vec3 (0.0, 0.3, 0.5);\n    vec3 starcol = vec3 (1.0, 1.0, 0.0);\n   \n    float rot = iTime * 1.2;\n        \n    //stars\n    for (int i = 0 ; i < 8 ; i++) {\n         \n    c = p - vec2 (0.5 + 0.25 * sin ( - rot - float(i) * 0.78 ), 0.5 + 0.25 * cos ( - rot - float(i) * 0.78 ));\n    float r = 0.05 + 0.009 * cos  ( atan (c.y, c.x) * 5.0 + rot );\n  \tfloat f = smoothstep(r, r + 0.01, length(c)); \n    float bg = smoothstep(r, r + 0.01, length(c));\n\t\n    col *= f; //leave void for each star   \n    col += starcol * (1.0 - f ); //fill stars with color \n    \n    f = smoothstep(r+.01, r+ 0.04, length(c));\n    col += vec3 (0.8, 0.3, 0.0) * (1.0 - f); //add orange glow\n\n    }\n    \n    fragColor = vec4 (col, 1.0);\n    //bars\n    \t\n    float pat = iTime*5.0;\n    float rep = 120.0;\n    vec3 col2 = vec3(0.5 + 0.5 * sin(x/rep + 3.14 + pat), 0.5 + 0.5 * cos (x/rep + pat), 0.5 + 0.5 * sin (x/rep + pat));\n    if ( p.y > 0.1 && p.y < 0.106 || p.y > 0.9 && p.y < 0.906 ) {\n    fragColor = vec4 ( col2, 1.0 );\n   \n    }\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mls3WH","date":"1427465008","viewed":270,"name":"Rotating stars","username":"bobmachiel","description":"more practice, improved it with 1.0 - f and glow","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["stars","rotation"],"hasliked":0,"parentid":"","parentname":""}}