{"ver":"0.1","info":{"id":"llKfDK","date":"1544137522","viewed":110,"name":"Rendering Strings","username":"Cluel3ss","description":"A simple algorithm that renders a hard coded array of ascii values.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["string"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct region\n{\n    float x; float y; float w; float h;\n};\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float fontSize = 53.0; \t\t// Size in pixels of the font\n    \n    // Array containing the ascii values for 'Hello World'\n    int string[11];\n    string[0] = 72;\t\t// H\n    string[1] = 101;\t// e\n    string[2] = 108;\t// l\n    string[3] = 108;\t// l\n    string[4] = 111;\t// o\n    \n    string[5] = 29;\t\t// :)\n    \n    string[6] = 87;\t\t// W\n    string[7] = 111;\t// o\n    string[8] = 114;\t// r\n    string[9] = 108;\t// l\n    string[10] = 100;\t// d\n    \n    // Coordinates from top-left of the screen\n    vec2 screenCoord = vec2(fragCoord.x, iResolution.y-fragCoord.y);\n    \n    // Normalised character dimensions - 16 characters wide and tall\n    vec2 texChar = (iChannelResolution[0].xy / 16.0) / iChannelResolution[0].xy;\n    \n    // Rectangular region of the font\n    region r;\n    r.w = fontSize * 11.0;\n    r.h = fontSize;\n    r.x = iResolution.x/2.0 - r.w/2.0;\n    r.y = iResolution.y/2.0 - r.h/2.0;\n    \n    // rgb color of the pixel\n    vec4 color;\n    \n    if ( screenCoord.x > r.x && screenCoord.y > r.y && screenCoord.x < r.x+r.w && screenCoord.y < r.y+r.h )\n    {\n        // Fragment coordinate is within render region\n        screenCoord.x -= r.x; screenCoord.y -= r.y;\t\t\t// Move screen coords to region coords\n        \n        for ( int index = 0 ; index < 11 ; index++ )\n        {\n            if ( index == int(screenCoord.x / fontSize) )\n            {\t// Fragment coordinate is within indexed character region\n                screenCoord.x -= fontSize * float(index);\n                screenCoord.x /= fontSize;\n                screenCoord.y /= r.h;\n                \n                vec2 offset = vec2( texChar.x * mod(float(string[index]),16.0),\n                                    texChar.y * (float(string[index]/16)) );\n                \n                color = texture(iChannel0, (screenCoord*texChar)+offset);\n            }\n        }\n    }\n    else\n    {\t// Fragment coordinate is outside render region\n        color = vec4(0.0,0.0,0.0,1.0);\n    }\n\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}