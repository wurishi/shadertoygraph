{"ver":"0.1","info":{"id":"lsGSzW","date":"1463108812","viewed":415,"name":"Spacefold","username":"FreeFull","description":"Experimenting with folding space. Note that the pattern evolves rather slowly at first.","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","fold"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float tau = 8.0 * atan(1.0);\n\nmat2 rot(float angle) {\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\n// https://iquilezles.org/articles/palettes\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.5);\n    vec3 b= vec3(0.5);\n    vec3 c= vec3(1.0, 1.0, 0.5);\n    vec3 d= vec3(0.8, 0.9, 0.3);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    for(int i = 0; i < 32; i++) {\n        uv = abs(uv);\n        uv *= rot(iTime/30.0);\n        uv += -vec2(0.5,0.5);\n        uv *= 1.03;\n    }\n    uv = pow(abs(sin(uv)),vec2(0.3));\n    vec3 col = palette(uv.x*uv.y*1.9);\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}