{"ver":"0.1","info":{"id":"cssyDn","date":"1686722764","viewed":73,"name":"A NaN issue","username":"ecnucb","description":"My environment: Chrome 112 + Windows 10 + Intel CPU i5 + Integrated Graphics.\nI get the image: left is green, right is red. Is it a bug for webGL?","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["nan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 if_nan_return_green_else_red(float x) {\n    if (isnan(x)) {\n        return vec4(0.0, 1.0, 0.0, 1.0);\n    } else {\n        return vec4(1.0, 0.0, 0.0, 1.0);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float INF = exp(1000.0);\n    float NAN = INF - INF;\n    float x = fragCoord.x + 1.0;\n\n    \n    // left of image\n    if (fragCoord.x < iResolution.x * 0.5)\n    {\n        float f2 = NAN / x; // The value of x can only be obtained at runtime;\n                            // x is a positive number and greater than 1.0;\n        fragColor = if_nan_return_green_else_red(f2);\n    }\n    // right of image\n    else\n    {\n        float f2 = NAN / 2.0; // The value of 2.0 can be obtained at compile time;\n                              // 2.0 is a positive number and greater than 1.0;\n                              \n        fragColor = if_nan_return_green_else_red(f2);\n    }\n}\n","name":"Image","description":"","type":"image"}]}