{"ver":"0.1","info":{"id":"lc3fWf","date":"1733556901","viewed":42,"name":"Adding Light Waves","username":"maTtemaTics88","description":":) First Shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["lightwaves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f(float x)\n{\n    return sin(x*10.0 - iTime)/2.0 + 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec2 points[5] = vec2[](vec2(1.0, 0.0),\n                            vec2(0.5, 0.0),\n                            vec2(0.0, 0.0),\n                            vec2(-0.5, 0.0),\n                            vec2(-1.0, 0.0));\n\n    float d = sqrt((uv.x*uv.x) + (uv.y*uv.y));\n    \n    for (int i = 0; i < 5; i++) {\n        d += f(sqrt(pow(uv.x - points[i].x, 2.0) + pow(uv.y - points[i].y, 2.0)));\n    }\n    \n    d = d/5.0;\n\n    float x = d;\n    // Time varying pixel color\n    vec3 col = vec3(x,x,x);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}