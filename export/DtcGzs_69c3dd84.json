{"ver":"0.1","info":{"id":"DtcGzs","date":"1682905935","viewed":72,"name":"GPT-3 animated fractal patterns","username":"mbaernestocr","description":"PROMPT: Create code written in GLSL (OpenGL Shading Language) for ShaderToy.com, the code must creates an animated fractal patterns, make a simple version, use a maximum of 25 lines of code.","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["fractal","patterns","animated","gpt3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    uv *= 3.0;\n    uv += 1.0;\n    float o = sin(uv.x) * cos(uv.y);\n    float e = sin(uv.y) * cos(uv.x);\n    float a = sin((o + e) * 10.0 + iTime);\n    float b = sin((o - e) * 10.0 + iTime);\n    float c = sin((e - o) * 10.0 + iTime);\n    float d = sin((o + e) * 20.0 + iTime);\n    float f = sin((o - e) * 20.0 + iTime);\n    float g = sin((e - o) * 20.0 + iTime);\n    fragColor = vec4(abs(a + b + c + d + f + g), abs(a - b + c - d + f - g), abs(a + b - c - d - f + g), 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    float t = mod(time, 0.25); // repeat every 0.25 seconds\n    float note = mod(floor(time / 0.25), 4.0); // play four different notes\n    \n    float freq;\n    if (note == 0.0) freq = 440.0; // A4\n    else if (note == 1.0) freq = 493.88; // B4\n    else if (note == 2.0) freq = 554.37; // C5\n    else freq = 587.33; // D5\n    \n    float env = smoothstep(0.0, 0.05, t) * (1.0 - smoothstep(0.2, 0.25, t)); // envelope function\n    \n    return env * vec2(sin(6.2831 * freq * time));\n}\n","name":"Sound","description":"","type":"sound"}]}