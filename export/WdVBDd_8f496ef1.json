{"ver":"0.1","info":{"id":"WdVBDd","date":"1609535966","viewed":192,"name":"Disorientation EAS","username":"public_int_i","description":"Disorientation EAS","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["disorientationeas"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*Ethan Alexander Shulman 2020 - xaloez.com\n4k 60fps video https://www.youtube.com/watch?v=kf-Lrm9S6ZI\n4k wallpaper xaloez.com/art/2020/Disorientation.jpg*/\n\nmat2 r2(float a) {\n\tfloat s = sin(a), c = cos(a);\n\treturn mat2(c,-s,s,c);\n}\n\nvec4 hash(vec4 a) {\n\treturn fract(abs(sin(a.ywxz*766.345)+cos(normalize(a)*4972.92855))*2048.97435+abs(a.wxyz)*.2735);\n}\n\nfloat twave(float x) {\n\treturn x*2.-max(0.,x*4.-2.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n#define time iTime\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n\n\tfloat s = 0.;\n\t#define AA 2.\n\t#ifdef AA\n\tfor (float ax = -AA; ax < AA+1.; ax++) {\n\t\tfor (float ay = -AA; ay < AA+1.; ay++) {\n\t\t\tvec2 p = (uv.xy+vec2(ax,ay)/AA/iResolution.y)*10.;\n\t#else\n\t\t\tvec2 p = uv.xy*10.;\n\t#endif\n\t\t\tfor (float l = 1.; l < 40.; l++) {\n\t\t\t\tvec4 h = hash(l*vec4(.01,.1,1.,10.));\n\t\t\t\th.xy = (h.xy*2.-1.)*6.;\n\t\t\t\tp -= h.xy;\n\t\t\t\tfloat lp = length(p);\n\t\t\t\tp *= r2(h.z/length(p)+time*(h.w-.5));\n\t\t\t\tp += h.xy;\n\t\t\t}\n\t\t\tp = floor(100.+p);\n\t\t\ts += mod(p.x+p.y,2.);\n\t#ifdef AA\n\t\t}\n\t}\n\ts /= (AA*2.+1.)*(AA*2.+1.);\n\t#endif\n\tfragColor = vec4(s,s,s,1.);\n}","name":"Image","description":"","type":"image"}]}