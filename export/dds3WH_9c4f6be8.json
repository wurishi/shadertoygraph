{"ver":"0.1","info":{"id":"dds3WH","date":"1666099476","viewed":162,"name":"Artober - Tinfoil","username":"Flopine","description":"Day 16 of october's challenge (a bit late ^^\"\" but I'm keeping up!)","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","fractal","animation","everyday"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define TAU (2.*PI)\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\n#define cyl(p,s) (length(p)-s) \n\n#define dt(sp,of) fract((iTime+of)*sp)\n\n#define hash21(x) fract( sin(dot(x,vec2(456.7,521.3)))*1647.8 )\n\n\nvoid mo (inout vec2 p, vec2 d)\n{\n    p = abs(p)-d;\n    if(p.y>p.x) p=p.yx;\n}\n\nfloat SDF (vec3 p)\n{\n    p.yz *= rot(-atan(1./sqrt(2.)) );\n    p.xz *= rot(PI/4.);\n    \n    float r = .2, d = 1e10, o = 0.;\n    for (int i=0; i<8; i++)\n    {\n        float ratio = float(i)*0.4;\n        p.y += sin(dt(0.2, o)*TAU)*0.25;\n        d = min(d, max(abs(cyl(p.xz, r))-0.025, abs(p.y)-1.5)-0.01);\n        r += 0.2;\n        o += 0.4;\n        mo(p.xz, vec2(ratio));\n        p.xz -= 0.1;\n    }   \n    return d;\n}\n\nvec3 gn (vec3 p)\n{\n    vec2 eps = vec2(0.01,0.);\n    return normalize(SDF(p)-vec3(SDF(p-eps.xyy),SDF(p-eps.yxy),SDF(p-eps.yyx)));\n}\n\nfloat AO (vec3 p, vec3 n, float e)\n{return clamp(SDF(p+e+n)/e, 0., 1.);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    float dither = hash21(uv);\n    \n    vec3 ro = vec3(uv*3., -20.), rd=vec3(0.,0.07,1.), p=ro,\n    col = vec3(0.);\n    \n    bool hit = false; float shad;\n    for(float i=0.; i<64.; i++)\n    {\n        float d = SDF(p);\n        if(d<0.001)\n        {\n            hit=true; shad = i/64.; break;\n        }\n        d *= 0.6+dither*0.05;\n        p += d*rd;\n    }\n    \n    if (hit)\n    {\n        vec3 n = gn(p);\n        float ao = AO(p,n,0.05)+AO(p,n,0.15)+AO(p,n,0.25);\n        col = vec3(1.-shad)*ao/3.;\n    }\n\n    // Output to screen\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}