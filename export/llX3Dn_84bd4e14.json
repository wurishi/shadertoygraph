{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \t// Inputs - Play with these values.\n    const int steps = 50;\n    const float scale = 2.5;\n    const vec2 pan = vec2(0.6, 0.5);\n    ////////////////////////////////\n    \n    vec2 c = fragCoord.xy / iResolution.xy;\n    \n    // map from [0,1] to [-0.5,0.5] then apply pan and scale.\n    c = (c - pan) * scale;\n\t\n\t// apply aspect ratio to fix distortion     \n    c.x *= iResolution.x / iResolution.y;\n    \n    int currStep = 0;\n    \n    // modelling complex number with vec2\n    // z = x + yi\n    vec2 z = vec2(0.0, 0.0);\n    \n    for (int i = 0; i < steps; i++)\n    {\n        // step: z = zÂ² + c \n        // z = (xÂ² + 2xyi - yÂ²) + (cx + cyi)\n        // zx = (xÂ² - yÂ² + cx)\n        float x = (z.x * z.x - z.y * z.y) + c.x;\n        \n        // zy = 2xy + cy\n        float y = 2.0 * z.x * z.y + c.y;\n        \n        if ((x * x + y * y) > 4.0) break;\n        z.x = x;\n        z.y = y;\n        \n        currStep++;\n    }\n    \n    float r = float(currStep) / float(steps);\n\tfragColor = (currStep < steps) ? vec4(r, 0.0, 0.0, 0.0) : vec4(0.0, 0.0, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"llX3Dn","date":"1421080594","viewed":240,"name":"Hello Mandelbrot Shader","username":"phil_lira","description":"Basic Mandelbrot set to be used as Hello World for anyone learning fractals.\nPlay with scale and pan to zoom in/out and pan.\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrothelloworld"],"hasliked":0,"parentid":"","parentname":""}}