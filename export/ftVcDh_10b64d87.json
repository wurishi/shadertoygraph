{"ver":"0.1","info":{"id":"ftVcDh","date":"1661387789","viewed":73,"name":"Waves of Color Fractal","username":"spenceryonce","description":"I took the basic random waves of color shader that I made and added some fractal uvs to it. \nI really like the result of this one. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","waves","simple","clouds","uv","random","trippy"],"hasliked":0,"parentid":"slKyDz","parentname":"Random Waves Of Color"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(3333.3145,20.233)))*\n        3141519.314159);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float angle = 0.2 * iTime * 0.2;\n    vec2 st = fragCoord.xy/iResolution.xy;\n    \n    st*=7.0;\n    \n    //st = st+fract(st*20.);\n    st+=vec2(sin(st.x+iTime*0.1),cos(st.y+iTime*0.1));\n    vec2 ipos = floor(st);  \n    vec2 fpos = fract(st);\n\n    //float rnd = random( st );\n    \n    vec3 color = vec3(random( ipos ));\n    \n    color = color- vec3(fpos,0.0);\n    \n    for(float i = 1.0; i < 64.0; i += 1.0){\n        st = abs(st);\n        st -= 0.5;\n        st *= 1.1;\n        st *= mat2(\n            cos(angle), -sin(angle),\n            sin(angle), cos(angle)\n        );\n    }\n    vec3 c = color - length(st);\n\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}