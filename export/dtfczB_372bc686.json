{"ver":"0.1","info":{"id":"dtfczB","date":"1692209872","viewed":52,"name":"FBM Simple Noise Test","username":"gsm041039","description":"test","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 50.\n#define OCTAVES 10\n#define PI 3.141592654\n\n\n\nfloat Hash21(vec2 p) {\n    return (fract(sin(dot(p, vec2(4353.4523, 35273.523))) * 41342.65));\n}\n\nfloat SimpleNoise(vec2 p) {\n    vec2 f = smoothstep(0.0, 1.0, fract(p));\n    vec2 id = floor(p);\n\n    float bl = Hash21(id);\n    float br = Hash21(id + vec2(1., 0.));\n\n    float tl = Hash21(id + vec2(0., 1.));\n    float tr = Hash21(id + vec2(1., 1.));\n\n    float bn = mix(bl, br, f.x);\n    float tn = mix(tl, tr, f.x);\n\n    return mix(bn, tn, f.y);\n}\n\nfloat FBM(vec2 p, int octaves)\n{\n    float n;\n    float a = 0.5;\n    float s = 1.;\n    for(int i = 0; i < octaves; i++)\n    {\n        n += SimpleNoise(p * s ) * a;\n\n        a *= 0.5;\n        s *= 2.;\n    }\n\n    return n;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 col;\n\n    vec2 uv = ((fragCoord - 0.5 * iResolution.xy) / iResolution.y) * SCALE;\n\n    vec2 uv1 = vec2(uv.x + iTime, uv.y);\n    vec2 uv2 = vec2(uv.x - iTime, uv.y );\n\n    float n = (cos(FBM(uv2 + sin(FBM(uv1, OCTAVES) * PI * 2.) * 0.5 + 0.5 , OCTAVES) * PI * 2.) * 0.5 + 0.5) + 0.2;\n\n    col = vec3(n);\n\n    fragColor = vec4(col, 1.0);\n\n}\n","name":"Image","description":"","type":"image"}]}