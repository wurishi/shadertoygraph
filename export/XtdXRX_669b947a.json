{"ver":"0.1","info":{"id":"XtdXRX","date":"1480889667","viewed":638,"name":"Sphereiup v2","username":"pthextract","description":"Sphere. Kinda messed up. :) Short code:https://www.shadertoy.com/view/MttXRf","likes":2,"published":1,"flags":72,"usePreview":0,"tags":["sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"ls2GD1","filepath":"https://soundcloud.com/xhianhlemmurtikker/ain-soph-aur","previewfilepath":"https://soundcloud.com/xhianhlemmurtikker/ain-soph-aur","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 sphere=vec4(0.,0.,1.,2.9);\n//vec3 light=vec3(1.1,1.9+3.*sin(iTime*3.),.43+cos(iTime*3.));\nvec3 light=vec3(0.,1.9+3.*sin(iTime*3.),.43+cos(iTime*3.));\nfloat shadercolor;\n    vec3 spherepos=vec3(0.3*cos(iTime*1.),sin(iTime*1.)*2.,.5+sin(iTime*1.)*.2);\n    spherepos=vec3(.1*sin(iTime),cos(iTime)*.1,.9+.1*cos(iTime*5.));\n\tvec2 uv = fragCoord.xy / iResolution.xy-.5;\n    vec2 muv = iMouse.zw/iResolution.xy-.5;\n    //vec2 muh = iMouse.xy/iResolution.xy-.5;\n    \n    muv.x*=iResolution.x/iResolution.y;\n    uv.x*=iResolution.x/iResolution.y;\n    vec3 ray=vec3(uv,0.1);\n\tfragColor = vec4(0.,uv*uv-.39,1.0)*sin(iTime*0.618)*1.618;\n    \n    float raylength=dot(ray,spherepos)/length(ray);\n    ray*=raylength/length(ray);\n    \n    float mindist=distance(ray,spherepos)/sphere[3];\n    //bool hit=mindist<1.;//not functioning properly\n         \n    \n    mindist=.5/(-mindist*mindist+1.);\n    ray*=(raylength-mindist)/raylength;\n    ray=reflect(ray,(ray-spherepos))/length(ray);\n    light/=length(light);\n    shadercolor=distance(ray,light)*1.2;\n        \n    \n    //fragColor=vec4( mindist*0.4);\n    \n    //fragColor=vec4(vec3(1.0-shadercolor*.5),1.0);\n    fragColor+=vec4(vec3(-shadercolor*.5+1.),1.0);\n    \n    if (distance(muv,uv)<.03)\n        fragColor=vec4(1.,0,0,1);\n    \n    //fragColor-=(distance(vec2(0.,0.),uv)>=0.4)?vec4(0.):vec4(1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"vec2 mainSound( in int samp, float time )\n{\n    //float xtime= (mod(iDate.w,60.0));\n   \n    return  (0.002*vec2( sin(6.2832*888.0*2.82*time)*exp(-10.0*fract(time/8.)) )\n             +.05*vec2( sin(6.2832*233.0*2.32*time)*exp(-25.0*fract(time/3.)) )\n             +.1*vec2( cos(6.2832*432.0*4.32*time)*exp(-111.0*fract(time/5.)) ));\n}","name":"Sound","description":"","type":"sound"}]}