{"ver":"0.1","info":{"id":"fsffWB","date":"1645284438","viewed":106,"name":"Silly sine wave ocean","username":"nicehen","description":"just a silly little experiment to use sine to paint a picture of cartoony waves","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ocean","sinewave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fitSineRelativlyOnScreen(float sine){\n    return sine/1.0+0.5;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 oceanCol = vec3(0.2, 0.4, 0.6);\n    vec3 skyCol = vec3(0.6, 0.8, 1.0);\n    vec3 oceanSkyBlend = oceanCol+skyCol/2.3;\n    vec3 lightGradient = vec3(uv.yyy);\n    float waveBorderRelativeScreenSize = 0.002;\n    float waveAmount = 20.0;\n    float waveSize = (sin(iTime)/2.0+1.0)*.05;\n    float centerOffset = .5-(waveSize/2.0);\n    float xSin = fitSineRelativlyOnScreen(sin(uv.x*waveAmount+iTime))*waveSize+centerOffset; \n    \n    vec3 col = oceanSkyBlend;\n    if(xSin > uv.y){\n        col = oceanCol;\n    }\n    if(xSin+waveBorderRelativeScreenSize < uv.y){\n        col = skyCol;\n    }\n    \n    float blendContrast = 1.15;\n    col = col*lightGradient*blendContrast;\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}