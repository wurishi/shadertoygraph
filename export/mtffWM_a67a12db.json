{"ver":"0.1","info":{"id":"mtffWM","date":"1693012797","viewed":195,"name":"Polyclock","username":"ChunderFPV","description":"Showing the time as fractions using polygons: hour/12, min/60, sec/60","likes":17,"published":1,"flags":32,"usePreview":0,"tags":["clock","polygon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// digit display modified from https://www.shadertoy.com/view/stlSzM\n#define bcd(i) (i/10*6+i)\n#define digit(u,i) texture(iChannel2, (u)/16.+vec2(float(i)/16., .75)).x\n#define draw_digit(c,u,i) if(abs(u).x < .5 && abs(u).y < .5) c += (1.-c)*digit(u+.5, i)\n#define draw_bcd(c,u,i,b) if (b) draw_digit(c, u, (i&0xf0)>>4); draw_digit(c, u-vec2(.5,0),(i&0xf))\n\n// draw time: coords, offset, size\nfloat dt(vec2 u, vec2 o, float s, float t)\n{\n    u -= o; // offset\n    u /= s; // size\n    float c = 0.;\n    ivec2 d = ivec2(mod(t/3600., 12.), mod(t/60., 60.)); // hour, min\n    if (d.x == 0) d.x = 12; // change 0 to 12\n    u.x += .85;\n    draw_bcd(c, u, bcd(d.x), (d.x > 9)); // 1st & 3rd digits\n    u.x -= .85;\n    draw_digit(c, u, 10); // colon\n    u.x -= .35;\n    draw_bcd(c, u, bcd(d.y), true); // 2nd & 4th digits\n    return c;\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 m = (iMouse.xy-R/2.)/R.y;\n    float t = (iMouse.z > 0.) ?\n              atan(m.x, m.y)/6.2832*43200.:\n              iDate.w;\n    vec3 a = texture(iChannel0, U/R).rgb,\n         b = texture(iChannel1, U/R).rgb*.03,\n         c = a+b + a.brg*a.brg +\n         dt((U-.5*R)/R.y, vec2(.0, .45), .1, t) * vec3(.6, .4, .1); // digit display\n    C = vec4(c*sqrt(c), 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define CS(a) vec2(cos(a), sin(a))\n#define H(a) (cos(radians(vec3(0, 120, 240))+(a)*6.2832)*.5+.5)\n\n// sdLine https://iquilezles.org/articles/distfunctions2d/\nfloat L(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a, ba = b-a;\n    return length(pa - ba*clamp(dot(pa,ba)/dot(ba,ba), 0., 1.));\n}\n\n// polygon: coords, value, loop, size\nfloat P(vec2 u, float v, float l, float w)\n{\n    v = mod(v+.5, 1.)-.5; // limit val to +/-.5\n    float t = 6.2832,     // pi*2\n          s = sign(v),    // arc polarity\n          p = mod(atan(u.y, u.x)+t, t*s), // perimeter\n          i = 0., c = i, a;\n    if (abs(v) > .01)  // deadzone near arc 0\n        for (; i++<l;) // 1 iteration per rotation\n            a = floor(p/v/t)*v*t, // arcs\n            c = max(c, w*fwidth(u.x)/L(u, CS(a), CS(a+v*t))), // chords\n            p += t*s; // prep next set\n    else c = w*fwidth(u.x)/abs(1.-length(u)); // circle\n    return clamp(c, 0., 1.5);\n}\n","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 C, in vec2 U )\n{\n    vec2 m = (iMouse.xy-R/2.)/R.y,\n         u = (U+U-R)/R.y*1.5;\n    u = u.yx; m = m.yx; // flip to clock orientation\n    float p = 6.2832,\n          w = fwidth(u.x)*R.y/1e3,\n          r = length(u),\n          a = (iMouse.z > 0.) ?\n              atan(m.y, m.x)/p*43200.:\n              iDate.w;\n    vec3 t = mod(a/vec3(43200, 3600, 60), 1.), // HMS to 0-1\n         k = H(.5-r/2.),\n         c = k*.06;\n    t.x = floor(t.x*12.)/12.;\n    t.yz = floor(t.yz*60.)/60.;\n    \n    // polygons\n    c = max(c, P(u,     t.x, 6.,  1.) * .5 * r     * k);\n    c = max(c, P(u/.5,  t.y, 30., 1.) * .4 * r/.5  * k.brg);\n    c = max(c, P(u/.25, t.z, 30., 1.) * .3 * r/.25 * k.gbr);\n    \n    // rings\n    c += min(w    /abs(1.-r),     1.) * .3 * k;\n    c += min(w/.5 /abs(1.-r/.5),  1.) * .3 * k.brg;\n    c += min(w/.25/abs(1.-r/.25), 1.) * .3 * k.gbr;\n    \n    // vectors\n    c = max(c, w/L(u, vec2(0), CS(t.x*p))     * k);\n    c = max(c, w/L(u, vec2(0), CS(t.y*p)*.5)  * k.brg);\n    c = max(c, w/L(u, vec2(0), CS(t.z*p)*.25) * k.gbr);\n    \n    // points\n    c += 6.*w/length(u    -CS(t.x*p)) * k;\n    c += 6.*w/length(u/.5 -CS(t.y*p)) * k.brg;\n    c += 6.*w/length(u/.25-CS(t.z*p)) * k.gbr;\n    c += w/length(u);\n    \n    C = vec4(clamp(c, 0., 1.), 1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 C, in vec2 U )\n{\n    vec3 c = texture(iChannel0, U/R).rgb,\n         a = texture(iChannel1, mix(U/R, vec2(.5),  .01)).rgb*.97 + c, // blur out\n         b = texture(iChannel1, mix(U/R, vec2(.5), -.01)).rgb*.97 + c; // blur in\n    C = vec4(max(a, b), 1);\n}","name":"Buffer B","description":"","type":"buffer"}]}