{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define PI 3.1415927\n#define PI2 (PI * 2.0)\n\n// signed distance to a n-star polygon, with external angle w\nfloat sdStar(in vec2 p, in float r, in float n, in float w)\n{\n    // these 5 lines can be precomputed for a given shape\n    //float m = n*(1.0-w) + w*2.0;\n    float m = n + w*(2.0-n);\n    \n    float an = 3.1415927/n;\n    float en = 3.1415927/m;\n    vec2  racs = r*vec2(cos(an),sin(an));\n    vec2   ecs =   vec2(cos(en),sin(en)); // ecs=vec2(0,1) and simplify, for regular polygon,\n\n    // symmetry (optional)\n    p.x = abs(p.x);\n    \n    // reduce to first sector\n    float bn = mod(atan(p.x,p.y),2.0*an) - an;\n    p = length(p)*vec2(cos(bn),abs(sin(bn)));\n\n    // line sdf\n    p -= racs;\n    p += ecs*clamp( -dot(p,ecs), 0.0, racs.y/ecs.y);\n    return length(p)*sign(p.x);\n}\n\nfloat rand(float x) \n{\n    return fract(sin(x) * 43758.5453);\n}\n\nfloat noise(float x) \n{\n    return sin(x)\n    + (sin(x*2.0)/2.0)\n    + (sin(x*4.0)/4.0)\n    + (sin(x*8.0)/16.0);\n}\n\n#define MAKE_SEED(i) float(index + numFlakes * i)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    fragColor = vec4(0.0);\n    \n    const int numFlakes = 150;\n    for(int index = 0; index < numFlakes; ++index)\n    {\n        float offY = rand(MAKE_SEED(0));\n        float offX = rand(MAKE_SEED(1));\n        float size = rand(MAKE_SEED(2)) * 0.05 + 0.01;\n        float fallSpeed = size * 0.8 + 0.01;\n        float points = round(rand(MAKE_SEED(3)) * 4.0 + 5.0);\n        \n        float swaySeed = (iTime / 4.0) + (rand(MAKE_SEED(4)) * PI2);\n        float sway = noise(swaySeed) / 4.0;\n        float xrange = 1.1 * (iResolution.x / iResolution.y);\n        float posX = mix(-xrange, xrange, offX) + sway;\n        float fall = mod(-(iTime * fallSpeed) + offY, 1.0);\n        float posY = mix(-2.0, 2.0, fall);\n        \n        float rotSeed = (iTime / 8.0) + rand(MAKE_SEED(5));\n        float th = noise(rotSeed) * PI2;\n        mat2x2 rot = mat2x2(cos(th), sin(th), -sin(th), cos(th));\n        vec2 pos = (uv - vec2(posX, posY)) * rot;\n        \n        float d = sdStar(pos, size, points, 0.5) - (size / 6.0);\n        float snowflake = step(0.0, -d);\n        \n        fragColor = mix(fragColor, vec4(1.0), snowflake);\n    }\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XcyfRz","date":"1733772863","viewed":64,"name":"night snow","username":"Iunave","description":"Criticism and improvements welcome!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["animated"],"hasliked":0,"parentid":"","parentname":""}}