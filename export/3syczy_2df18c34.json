{"ver":"0.1","info":{"id":"3syczy","date":"1603093958","viewed":98,"name":"Example 43 - raytracing a plane","username":"jt","description":"Minimal raytracing example: how to render a plane.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","example","plane"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 d = vec3(2.0 * fragCoord/iResolution.xy - 1.0, 1.0);\n\n    vec3 p = vec3(-d.x/d.y, -1.0, -1.0/d.y); // collision-point of ray with plane\n    \n    //fragColor = vec4(p,1.0);\n    fragColor = texture(iChannel0, p.xz + vec2(0.0, iTime));\n    fragColor = mix(vec4(0.0, 0.0, 0.5, 1.0), fragColor, vec4(step(0.0, p.z))); // ignore collisions behind viewer\n}\n","name":"Image","description":"","type":"image"}]}