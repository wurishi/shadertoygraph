{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define hex vec2(sq3, 1)\n#define vtn vec2(tn, 1)\n#define pi acos(-1.)\n#define sq3 sqrt(3.)\n#define tn sq3 / 3.          // tan(pi/6)\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy;\n         u = 8. * (u - r / 2.) / r.y;\n         \n    u += iTime * .5;\n    \n    //------------------------------------------------\n    //-- hexgrid -------------------------------------\n    vec2 a = 2. * mod(u,            hex) - hex,\n         b = 2. * mod(u + hex / 2., hex) - hex,\n    \n         id = floor(u / hex) * vec2(2, 1),\n         p = a;\n    \n    if(dot(a, a) > dot(b, b)) \n        //id = floor(u / hex - .5) * vec2(2, 1) + vec2(1, 0),\n        id.x = floor(u.x / sq3 - .5) * 2. + 1.,\n        id.y = floor(u.y - .5),\n        p = b;\n    \n    //------------------------------------------------\n    //-- truchets ------------------------------------\n    float d = 1e5;\n    \n    #define rot(a) mat2(cos((a) + vec4(0, 3, 1, 0) * pi / 2.))\n    #define H(p) fract(sin(dot(p + 987.235, vec2(2418.8,853.24))))\n    #define curve(p, r) abs(length(p) - r) - .04\n    #define add(f) d = min(d, f)\n    \n    // tree circles\n    if(H(id) < .05) {\n        if(H(id + .4) < .5) p.x *= -1.;\n        \n        add( curve(p - vtn, tn)            );\n        add( curve(p - vec2(tn, -1), tn)   );\n        add( curve(p + vec2(2, 0) * tn, tn));\n    }\n    \n    else // sandwich  \n    if(H(id) < .3) {    \n        p *= rot(floor(H(id + .3) * 3.) * pi / 3.);\n        \n        add( abs(p.x) - .04                 );\n        add( curve(p - vec2(2, 0) * tn, tn) );\n        add( curve(p + vec2(2, 0) * tn, tn) );\n    }\n    \n    // basket ball\n    else {  \n        p *= rot(floor(H(id + .65) * 3.) * pi / 3.);\n        \n        add( abs(p.x) - .04             );\n        add( curve(p - vec2(0, 2), sq3) );\n        add( curve(p + vec2(0, 2), sq3) );  \n    }\n     \n    //------------------------------------------------\n    //-- draw ----------------------------------------\n    o.b = 0.;\n    \n    // bg\n    o.r = mod(id.x, 3.) * .1 + .25;\n    o.g = mod(id.y, 3.) * .1 + .25; \n    \n    // pattern\n    o += smoothstep(32. / r.y, 0., d);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4X3cR7","date":"1734851557","viewed":48,"name":"Hex Truchet base","username":"Elsio","description":"coloração de frutas cristalizadas em referência às festas de fim de ano. A gente (no Brasil) curte muito frutas cristalizadas. só no fim do ano.\n\nAntes de mim o colega @Leolsssspe já tinha feito um shader bem similar https://www.shadertoy.com/view/M3c","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["truchet","hexagonal","tiles"],"hasliked":0,"parentid":"l33yRH","parentname":"hex truchet with track dir"}}