{"ver":"0.1","info":{"id":"wtSczy","date":"1595065489","viewed":78,"name":"Voronoooooooooise","username":"TheGreatMurloc","description":"fdsf noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["nnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float N21(vec2 p) {\n\treturn fract(sin(p.x*123.+p.y*3456.)*3524.);\n}\n\nvec2 N22(vec2 p) {\n\treturn vec2(N21(p), N21(p+324.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy - vec2(.5,.5)) * vec2(1.,9./16.);\n    \n    float noise = 0.;\n    // Tiling\n    float tileMult = 20.;\n    vec2 tiledUV = fract(uv * tileMult) - vec2(.5);\n    vec2 id = floor(uv * tileMult) - vec2(.5);\n    \n    // Points\n    float t = (iTime+sin(iTime*.1))*10.;\n    vec2 pos = sin(N22(id)*t)*.5;\n    noise = 1.-step(.05,length(tiledUV-pos));\n    \n    // Distance\n    float dist = 999.;\n    for (float x = -1.; x <= 1.; x++)\n    {\n        for (float y = -1.; y <= 1.; y++)\n        {\n            vec2 off = vec2(x,y);\n            vec2 p = sin(N22(id+off)*t)*.5+off;\n            float d = length(tiledUV - p);\n            dist = min(d,dist);\n        }\n    }\n    \n    //Coloriiiing\n    noise = dist+.05;\n    noise -= (1.-noise)*abs(dot(uv,vec2(-cos(iTime+68.5646),sin(iTime)*2.)));\n    vec3 col = vec3(noise);\n    col.gr += uv+sin(iTime)*.3;\n    col += (1.-noise)*vec3(.4,.1,.5)-sin(iTime)*.3;\n    col -= .5;\n    col *= sin(iTime*.5);\n    col += .5;\n        \n\n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}