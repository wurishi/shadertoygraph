{"ver":"0.1","info":{"id":"wldXzf","date":"1581488727","viewed":108,"name":"Kaleidoscope of 42yeah","username":"42yeah","description":"This was an accident. But it looks good!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 uv) {\n    return fract(sin(dot(uv, vec2(13.1251, 824.1231))) * 1000000.0);\n}\n\nvec2 rot2d(vec2 uv, float deg) {\n    return vec2(cos(deg) * uv.x - sin(deg) * uv.y, sin(deg) * uv.x + cos(deg) * uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = -1.0 + 2.0 * fragCoord / iResolution.xy;\n\n\tfloat aspect = iResolution.x / iResolution.y;\n    uv.x *= aspect;\n    \n    uv = rot2d(uv, iTime * 0.3);\n    for (int i = 0; i < 10; i++) {\n        uv = abs(uv) - 0.15;\n        uv = rot2d(uv, iTime * 0.3);\n    }\n    \n    float l = length(uv);\n    if (l < (sin(iTime * 0.3) * 0.5 + 0.5) * 0.1 + 0.05) {\n        l = 1.0;\n    }\n\n    // Output to screen\n    fragColor = vec4(l, l, 0.5, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}