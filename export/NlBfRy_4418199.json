{"ver":"0.1","info":{"id":"NlBfRy","date":"1652350012","viewed":91,"name":"TooSmooth4u but with width","username":"JuanDeager","description":"Double sided smoothstep for cool people. (with width parameter) The width is the size of the flat area at the top of the curve.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gradient","smoothstep"],"hasliked":0,"parentid":"7tjfzD","parentname":"TooSmooth4U"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float tooSmooth(float edge0, float edge1, float width, float x)\n{\n    float middle = (edge0 + edge1) / 2.0;\n    return smoothstep(edge0, middle - width / 2.0, x) * (1.0 - smoothstep(middle + width / 2.0, edge1, x));\n}\n\nfloat curve(float x)\n{\n    return tooSmooth(.2, .8, .2, x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col *= tooSmooth(0.0, 1.0, .5, uv.x);\n\n    // Output to screen\n    fragColor = vec4(pow(col, vec3(1.0 / 2.2)),1.0);\n    \n    if (abs(uv.y - curve(uv.x)) < 0.01)\n    {\n        fragColor.rgb = vec3(1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}