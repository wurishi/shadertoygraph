{"ver":"0.1","info":{"id":"wlffDM","date":"1596870075","viewed":214,"name":"Fractal forest","username":"gaz","description":"fractal","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a)mat2(cos(a),sin(a),-sin(a),cos(a))\nfloat Scale;\nfloat lpNorm(vec3 p, float n)\n{\n\tp = pow(abs(p), vec3(n));\n\treturn pow(p.x+p.y+p.z, 1.0/n);\n}\n\nfloat map(vec3 p){\n    vec3 q=p;\n\tfloat s = 2.5;\n\tfor(int i = 0; i < 10; i++) {\n        p=mod(p-1.,2.)-1.;\n\t\tfloat r2=1.1/pow(lpNorm(abs(p),2.+q.y*10.),1.75);\n    \tp*=r2;\n    \ts*=r2;\n        p.xy*=rot(.001);\n    }\n    Scale=log2(s*.0003);\n    return q.y>1.3?length(p)/s:abs(p.y)/s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv=(2.*fragCoord-iResolution.xy)/iResolution.y;\n\tvec3 p,\n  \t\tro=vec3(.7-iTime*.3,.5,-iTime*.3),\n  \t\tw=normalize(vec3(.2,0.3,-1)),\n  \t\tu=normalize(cross(w,vec3(0,1,0))),\n  \t\trd=mat3(u,cross(u,w),w)*normalize(vec3(uv,2));\n  \tfloat h=0.,d,i;\n \tfor(i=1.;i<100.;i++){\n    \tp=ro+rd*h;\n      \td=map(p);\n    \tif(d<0.001)break;\n    \th+=d;\n\t}\n\tfragColor.xyz=23.*vec3(cos(Scale*.3+cos(p*.6))*.5+.5)/i;\n}\n","name":"Image","description":"","type":"image"}]}