{"ver":"0.1","info":{"id":"XsVXRR","date":"1462475703","viewed":217,"name":"Nearest Point 2","username":"anastadunbar","description":"Because the previous one was too horrible but explained the basics.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(float co) { return fract(sin(co*(91.3458)) * 47453.5453); }\nconst int size = 10;\nvec2 point[size];\nvec3 color[size];\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float time = iTime;\n\tvec2 position = fragCoord.xy / iResolution.xy;\n    vec2 uv = (fragCoord.xy/iResolution.xy)-.5;\n    uv.x /= iResolution.y/iResolution.x;\n    float circle_size = .01;\n    float allcircles=0.; float minimum; vec3 output_colors;\n    for(int i=0;i<size;i++){\n        float fi = float(i);\n    \tpoint[i] = vec2(cos((time*rand(fi+.15))+(rand(fi*2.)*14.)),sin((time*rand(fi+.4))+(rand(fi)*14.)))*.5 ;\n    \tcolor[i] = vec3(rand(fi),rand(fi+.2),rand(fi+.3))*1.5;\n        if(i==0){minimum=length(point[i]-uv);output_colors=color[i];}\n        allcircles+=step(length(uv-point[i]),circle_size);\n        if (length(point[i]-uv)<minimum) {\n            output_colors = color[i];\n            minimum = length(point[i]-uv);\n        }\n    }\n\tfragColor = vec4(clamp(output_colors,0.,1.)-allcircles,1.0);\n}","name":"Image","description":"","type":"image"}]}