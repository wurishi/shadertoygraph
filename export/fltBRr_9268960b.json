{"ver":"0.1","info":{"id":"fltBRr","date":"1662551702","viewed":176,"name":"Gaussian-Blur","username":"SoulRyder","description":"Verify simple and fast gaussian blur shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["blur","gaussian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    #define PI 3.14159265359\n    #define E 2.71828182846\n\n    float Samples = 16.0;\n    float Deviation = 0.01;\n    float BlurSize = 0.005;\n\n    //Approach to correctly get the UV off the screen\n    vec2 BaseUV = fragCoord/iResolution.xy;\n    vec4 Color;\n    float Sum = 0.0;\n    // Blur calculations\n    for(float index = 0.0; index < Samples; index++)\n    {\n        //Double Pi is one circle, divided by samples and then multiplied with index \n        //this gives back a location around a circle for each sample. \n        //This way the offset is equaly distributed around\n        float Direction = (PI+PI)/Samples*index;    \n        vec2 Offset = vec2(cos(Direction),sin(Direction)) * BlurSize;\n        //get uv coordinate of sample\n        vec2 NewUV = BaseUV + Offset;\n        //calculate the result of the gaussian function\n        float DeviationSquared = Deviation*Deviation;\n        float Gauss = (1.0 / sqrt(2.0*PI*DeviationSquared)) * pow(E, -((Offset.x*Offset.y)/(2.0*DeviationSquared)));\n        //add result to sum\n        Sum += Gauss;\n        //multiply color with influence from gaussian function and add it to sum color\n        Color += texture(iChannel0, NewUV) * Gauss;\n    }\n    // Output to screen\n    Color /= Sum;\n    fragColor = Color;\n}","name":"Image","description":"","type":"image"}]}