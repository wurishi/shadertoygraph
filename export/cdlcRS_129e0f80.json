{"ver":"0.1","info":{"id":"cdlcRS","date":"1686921019","viewed":43,"name":"cool checkerboard","username":"TheDarkKnight12318","description":"checkerboard","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float func1 (in float coord, in float cells, in float t) {\n    float uvf = 0.0;\n    uvf = sin(coord * cells * abs(sin(t)) + coord);\n    uvf = smoothstep(0.01, 0.0, uvf) - smoothstep(0.0, 0.01, uvf);\n    return uvf;\n}\n\nvoid mainImage( out vec4 fragColour, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 colour = vec3(1.0);\n    \n    vec2 uvf = vec2(0.0);\n    uvf.x = func1(uv.x, 25.0, iTime);\n    uvf.y = func1(uv.y, 25.0, iTime);\n \n    vec3 checker = 1.0 - vec3(uvf.x * uvf.y);\n    checker *= colour;\n    \n    \n    // Output to screen\n    fragColour = vec4(checker, 1.0);\n}","name":"Image","description":"","type":"image"}]}