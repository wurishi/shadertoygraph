{"ver":"0.1","info":{"id":"7ldfWM","date":"1663187786","viewed":108,"name":"Atari XL/XE Zelax Logo","username":"swiety","description":"ZELAX logo from Ray of Hope demo as a shader, it is an emulation of multicolor character mode from Atari xl / xe","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["demoscene","logo","atari","zelax"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\t\nint logoline1[40] = int[40] (    \n    0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x08, 0x2D, 0x2E, 0x2F,\n\t0x30, 0x31, 0x33, 0x34, 0x01, 0x02, 0x4E, 0x4F, 0x00, 0x00, 0x00, 0x2D,\n\t0x2E, 0x2F, 0x04, 0x05, 0x06, 0x08, 0x01, 0x02, 0x4E, 0x6A, 0x6B, 0x33,\n\t0x34, 0x00, 0x00, 0x00);\n    \nint logoline2[40] = int[40] (    \n    0x00, 0x00, 0x09, 0x0A, 0x0B,\n\t0x0C, 0x0D, 0x0E, 0x0F, 0x35, 0x36, 0x37, 0x3A, 0x3B, 0x3C, 0x3D, 0x50,\n\t0x51, 0x52, 0x53, 0x00, 0x00, 0x00, 0x35, 0x36, 0x37, 0x0C, 0x0D, 0x0E,\n\t0x0F, 0x09, 0x51, 0x52, 0x6C, 0x0D, 0x6D, 0x3D, 0x00, 0x00, 0x00);\n\nint logoline3[40] = int[40] (    \n    0x00, 0x00, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x3E,\n\t0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x3E, 0x41, 0x54, 0x56, 0x00, 0x00,\n\t0x00, 0x3E, 0x41, 0x54, 0x5A, 0x62, 0x63, 0x57, 0x6E, 0x6F, 0x70, 0x71,\n\t0x72, 0x73, 0x74, 0x00, 0x00, 0x00);\n\nint logoline4[40] = int[40] (    \n    0x00, 0x00, 0x17,\n\t0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x3F, 0x47, 0x48, 0x49, 0x4A, 0x00,\n\t0x00, 0x3F, 0x47, 0x55, 0x56, 0x00, 0x00, 0x00, 0x3F, 0x47, 0x55, 0x5A,\n\t0x64, 0x65, 0x58, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x00, 0x00,\n\t0x00);\n\nint logoline5[40] = int[40] (    \n    0x00, 0x00, 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23,\n\t0x24, 0x40, 0x4B, 0x4C, 0x4D, 0x22, 0x23, 0x24, 0x40, 0x4B, 0x4C, 0x4D,\n\t0x22, 0x23, 0x24, 0x40, 0x4B, 0x59, 0x5D, 0x66, 0x67, 0x58, 0x40, 0x4B,\n\t0x7C, 0x7F, 0x66, 0x67, 0x58, 0x00, 0x00, 0x00);\n\nint logoline6[40] = int[40] (    \n    0x00,\n\t0x00, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x25, 0x26, 0x27, 0x28,\n\t0x29, 0x2A, 0x2B, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x25, 0x26,\n\t0x5B, 0x5C, 0x68, 0x69, 0x58, 0x25, 0x26, 0x7D, 0x7E, 0x68, 0x69, 0x58,\n\t0x00, 0x00, 0x00);\n\nint logoline7[40] = int[40] (    \n    0x00, 0x00, 0x2C, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x32, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x2C, 0x00,\n\t0x00, 0x00, 0x00, 0x00, 0x32, 0x2C, 0x00, 0x5F, 0x5E, 0x00, 0x00, 0x32,\n\t0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00);\n\n\n\nint charbasepage1[256] = int[256] (\n\n\t0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFC,\n\t0xFC, 0xFC, 0xFC, 0xFC, 0xFB, 0xEE, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,\n\t0xFF, 0xEF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xF0, 0xFF, 0xBA, 0xFF, 0x00,\n\t0xFF, 0xFF, 0xFF, 0x00, 0xA0, 0xAA, 0xE9, 0x0A, 0xF0, 0xFF, 0xFF, 0xFF,\n\t0x00, 0x80, 0xA8, 0x96, 0x29, 0xC9, 0xF2, 0xF1, 0xC4, 0xC8, 0xD0, 0xFB,\n\t0xE6, 0xC5, 0xCA, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x60, 0x50,\n\t0xFC, 0xEC, 0xFC, 0xFC, 0xEC, 0xFC, 0xEC, 0xEC, 0xBF, 0xFF, 0xBF, 0xEF,\n\t0xBF, 0xAE, 0xAB, 0x00, 0xF1, 0xF1, 0xB1, 0xF1, 0xB1, 0xE1, 0xA1, 0x01,\n\t0x58, 0x6A, 0x1A, 0x1E, 0x1B, 0x1E, 0x1F, 0x1E, 0x3F, 0x3F, 0x3F, 0x2F,\n\t0x3F, 0x2F, 0x3B, 0x2F, 0xF2, 0xFC, 0xEC, 0xFC, 0xF8, 0xEC, 0xF8, 0xEC,\n\t0x50, 0x94, 0x54, 0x54, 0x54, 0x44, 0x54, 0x54, 0xEE, 0x9A, 0xAA, 0x00,\n\t0x00, 0x00, 0x00, 0x00, 0xAA, 0x65, 0xAA, 0x00, 0x00, 0x00, 0x00, 0x00,\n\t0xA5, 0x54, 0x99, 0x00, 0x00, 0x00, 0x03, 0x3F, 0x1F, 0x1F, 0x5F, 0x3F,\n\t0xFC, 0xFC, 0xF2, 0xCA, 0x3B, 0x2F, 0x3B, 0x2E, 0xAB, 0xBA, 0xAB, 0xAA,\n\t0xB8, 0xE8, 0xB8, 0xE8, 0xA8, 0xA1, 0xA1, 0xA1, 0x44, 0x54, 0x44, 0x44,\n\t0x44, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x0F, 0x3F, 0x3F,\n\t0x03, 0x3F, 0xFF, 0xFC, 0xC2, 0xC6, 0x19, 0x26, 0xFF, 0xFC, 0xC1, 0x2A,\n\t0xA9, 0xA6, 0xA9, 0x66, 0x2A, 0xAA, 0xAA, 0xA9, 0xA4, 0x91, 0x44, 0x11,\n\t0xAA, 0xAA, 0xA0, 0x05, 0x50, 0x05, 0x50, 0x00, 0x84, 0x04, 0x51, 0x04,\n\t0x50, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n\t0x3B, 0xFC, 0xEC, 0xFC, 0xEC, 0xBC, 0xEC, 0xAC, 0x15, 0x56, 0x55, 0x55,\n    0x11, 0x54, 0x10, 0x04);\n    \nint charbasepage2[256] = int[256] (    \n    0x98, 0x64, 0x51, 0x51, 0x51, 0x11, 0x41, 0x11,\n\t0x44, 0x44, 0x10, 0x10, 0x10, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00,\n\t0x00, 0xFF, 0xEF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEE, 0xBA, 0xFE,\n\t0x00, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x58, 0x98, 0x98, 0x68, 0x98, 0x58,\n\t0x54, 0x44, 0x54, 0x44, 0x10, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,\n\t0x41, 0x01, 0x11, 0x02, 0x01, 0x02, 0x02, 0x00, 0x1F, 0x1F, 0x1B, 0x1F,\n\t0x1B, 0x5E, 0xAB, 0xAA, 0x00, 0x11, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00,\n\t0x00, 0x50, 0x44, 0x10, 0x04, 0x00, 0x04, 0x00, 0x98, 0x94, 0x98, 0x98,\n\t0x64, 0x94, 0x44, 0x54, 0x40, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x03, 0x0F, 0x0F, 0x3F, 0x3F, 0x00, 0x0F, 0xFF, 0xFF,\n\t0xF0, 0xCF, 0x3F, 0x3F, 0x3F, 0xFF, 0xFF, 0xC0, 0x3F, 0xFF, 0xFF, 0xFC,\n\t0xFF, 0xFE, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFE, 0xFB, 0xFF, 0x00,\n\t0xFF, 0xFF, 0xFF, 0x3F, 0x44, 0x44, 0x04, 0x40, 0x04, 0x00, 0x40, 0x04,\n\t0xEA, 0xAA, 0xFA, 0x00, 0xFC, 0xFC, 0xFC, 0xFC, 0xA8, 0x98, 0xA8, 0xA8,\n\t0x98, 0xA8, 0x98, 0x94, 0x3F, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC,\n\t0x3F, 0xFF, 0xBF, 0xFF, 0xBF, 0xEF, 0xBF, 0xEF, 0xF0, 0xB1, 0xF1, 0xF1,\n\t0xB1, 0xF1, 0xB1, 0xE1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04,\n\t0x00, 0x00, 0x00, 0x04, 0x40, 0x44, 0x04, 0x58, 0x6A, 0x9A, 0x69, 0x1A,\n\t0x59, 0x16, 0x11, 0x15, 0x3F, 0x3F, 0x3B, 0x3F, 0x3B, 0x2E, 0x2B, 0x00,\n\t0xF8, 0xFC, 0xF8, 0xEC, 0xF8, 0xE8, 0xA8, 0x00, 0x58, 0x94, 0x54, 0x44,\n\t0x54, 0x54, 0x44, 0x54, 0xFC, 0xFC, 0xFC, 0xEC, 0xFC, 0xFC, 0xEC, 0xFC,\n\t0xEC, 0xBC, 0xEC, 0xB8, 0xAC, 0xB8, 0xA8, 0xA8);\n\nint charbasepage3[256] = int[256] (   \n    0x98, 0xA8, 0xA8, 0xA8,\n\t0x98, 0xA8, 0x98, 0x68, 0xBB, 0xAE, 0xEB, 0xAE, 0xAA, 0xAE, 0xAA, 0xAA,\n\t0xB1, 0xE1, 0xA1, 0xE1, 0xA1, 0xA1, 0xA1, 0xA0, 0x11, 0x10, 0x15, 0x50,\n\t0x1A, 0x66, 0x59, 0x00, 0x55, 0x00, 0x55, 0x00, 0xAA, 0xA6, 0xA9, 0x26,\n\t0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x04, 0x54, 0x00,\n\t0x00, 0x00, 0x00, 0x00, 0xAA, 0x9A, 0xAA, 0x9A, 0xA6, 0x9A, 0x66, 0x96,\n\t0x9A, 0xAA, 0x9A, 0x6A, 0x90, 0x61, 0x91, 0x51, 0xAA, 0xA6, 0xAA, 0x66,\n\t0x00, 0x55, 0x40, 0x15, 0x15, 0x15, 0x11, 0x15, 0x11, 0x51, 0x01, 0x55,\n\t0x65, 0x56, 0x55, 0x55, 0x55, 0x45, 0x14, 0x44, 0x91, 0x51, 0x51, 0x51,\n\t0x51, 0x11, 0x41, 0x11, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1F, 0x1F, 0x1F,\n\t0xAA, 0xAA, 0xEA, 0x02, 0xF2, 0xF2, 0xF2, 0xF2, 0xA0, 0x60, 0xA0, 0xA0,\n\t0x60, 0xA0, 0x60, 0x50, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC,\n\t0xFF, 0xFF, 0xBF, 0xFF, 0xBF, 0xEF, 0xBF, 0xEF, 0xF1, 0xB2, 0xF1, 0xF1,\n\t0xB1, 0xF1, 0xB1, 0xE2, 0x60, 0x50, 0x50, 0x10, 0x50, 0x50, 0x10, 0x50,\n\t0xB1, 0xE1, 0xA1, 0xE1, 0xA1, 0xA1, 0xA1, 0xA1, 0x91, 0xA1, 0x91, 0x61,\n\t0x91, 0x51, 0x91, 0x51, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,\n\t0x44, 0x54, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,\n\t0x44, 0x44, 0x44, 0x44, 0x91, 0x51, 0x51, 0x51, 0x51, 0x11, 0x41, 0x11,\n\t0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x41, 0x01, 0x11, 0x00,\n\t0x00, 0x00, 0x00, 0x00, 0x6E, 0xAB, 0x6A, 0x00, 0x00, 0x00, 0x00, 0x00,\n\t0x5F, 0x1F, 0x5F, 0x5F, 0x1F, 0x5F, 0x6E, 0x9F, 0x00, 0x51, 0x00, 0x14,\n\t0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00);\n    \n    \nint charbasepage4[256] = int[256] (  \n\n\t0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00, 0x10,\n\t0x00, 0x10, 0x10, 0x50, 0x3B, 0x2F, 0x3B, 0x2E, 0x2B, 0x3A, 0x2B, 0x2A,\n\t0xB8, 0xE8, 0xB8, 0xE8, 0xA8, 0xA8, 0xA8, 0xA8, 0x2A, 0x26, 0x2A, 0x26,\n\t0x29, 0x26, 0x19, 0x26, 0xA8, 0xA4, 0xA8, 0x98, 0xA4, 0x98, 0xA4, 0x98,\n\t0x15, 0x25, 0x15, 0x15, 0x15, 0x11, 0x15, 0x11, 0x94, 0x54, 0x94, 0x54,\n\t0x54, 0x54, 0x44, 0x54, 0x04, 0x11, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00,\n\t0x44, 0x50, 0x44, 0x10, 0x04, 0x00, 0x04, 0x00, 0xAF, 0x6F, 0xAF, 0xAF,\n\t0x6F, 0xAF, 0x6F, 0x5F, 0xFF, 0xFF, 0xFF, 0x00, 0x3F, 0x3F, 0x3F, 0x3F,\n\t0x6F, 0x5F, 0x5F, 0x1F, 0x5F, 0x5F, 0x1B, 0x1F, 0xFC, 0xFC, 0xEC, 0xFC,\n\t0xF8, 0xEC, 0xF8, 0xEC, 0xA8, 0x98, 0xA8, 0x26, 0x1A, 0x26, 0x09, 0x06,\n\t0xBB, 0xAE, 0xEB, 0x2E, 0x2A, 0x2E, 0x8A, 0x4A, 0xB1, 0xE2, 0xA2, 0xE0,\n\t0xA8, 0xAA, 0xAA, 0xAA, 0x1B, 0x5E, 0xAB, 0xA8, 0x00, 0xAA, 0xA6, 0xAA,\n\t0x3B, 0x2F, 0x3B, 0x2E, 0xAB, 0xBA, 0xAB, 0xAA, 0xB8, 0xE8, 0xB8, 0xE1,\n\t0xA1, 0xA1, 0x84, 0x84, 0x44, 0x44, 0x44, 0x10, 0x10, 0x10, 0x40, 0x40,\n\t0x01, 0x00, 0x01, 0x06, 0x09, 0x2A, 0x26, 0x2A, 0x50, 0x55, 0x90, 0x4A,\n\t0x86, 0x1A, 0x26, 0x16, 0x9A, 0x2A, 0x9A, 0x69, 0x9A, 0x59, 0x94, 0x50,\n\t0xA6, 0x9A, 0xA6, 0x96, 0x65, 0x95, 0x00, 0x6C, 0xA8, 0xA1, 0xA8, 0xA6,\n\t0xA9, 0x66, 0x99, 0x26, 0x11, 0x44, 0x11, 0x84, 0x84, 0x91, 0xA1, 0x91,\n\t0x00, 0x00, 0x00, 0x40, 0x40, 0x10, 0x10, 0x10, 0x91, 0x51, 0x51, 0x51,\n\t0x51, 0x11, 0x41, 0x11, 0x41, 0x01, 0x11, 0x00, 0x01, 0x00, 0x00, 0x01,\n\t0x19, 0x19, 0x04, 0x11, 0x00, 0x01, 0x10, 0x00, 0xAF, 0x5F, 0x1F, 0x1E,\n\t0x1F, 0x1E, 0x1A, 0x1E);\n\nvec3 D016 = vec3(0.5098,0.2352,0.0);\nvec3 D017 = vec3(0.6627,0.5411,0.0);\nvec3 D018 = vec3(0.9372,0.8156,0.2627); \nvec3 D019 = vec3(1.0,1.0,1.0);\nvec3 D01A = vec3(0.0,0.0,0.0);\n\nvec3 charpixel(int charnum, int xoff, int yoff)\n{\n \n    int charmask;\n    \n    if ((charnum & 0x60) == 0x00)  charmask = charbasepage1[(charnum&0x7f)*8+yoff];\n    if ((charnum & 0x60) == 0x20)  charmask = charbasepage2[((charnum&0x7f)-0x20)*8+yoff];\n    if ((charnum & 0x60) == 0x40)  charmask = charbasepage3[((charnum&0x7f)-0x40)*8+yoff];\n    if ((charnum & 0x60) == 0x60)  charmask = charbasepage4[((charnum&0x7f)-0x60)*8+yoff];\n    \n    xoff=6-(xoff & 0x03)*2;\n      \n  switch ((charmask>>xoff) & 3) {\n  \n  case 1:\n    return D016; //vec3(0.5098,0.2352,0.0);\n\n  case 2:\n    return D017; //vec3(0.6627,0.5411,0.0);\n   \n  case 3:\n  \n  if ((charnum & 0x80)==1) return D019;\n  \n  else return D018; //vec3(0.9372,0.8156,0.2627);  \n    \n    }\n    \n   return D01A;   //;vec3(0.0,0.0,0.0); \n    \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x= floor(uv.x *160.);\n    uv.y= 226. -floor(uv.y *226.);\n    \n    float logopos = uv.y+abs(sin(iTime*0.8)*160.)-80.;\n    \n    int inchary =int(mod(logopos,8.0));\n    int incharx =int(mod(uv.x,4.0));\n    \n    int inlinepos = int(uv.x/4.0);\n    int linepos = int(logopos/8.0)-11;\n    \n    \n    vec3 col;\n       \n    \n    if (linepos==0) col = charpixel(logoline1[inlinepos],incharx,inchary); \n    if (linepos==1) col = charpixel(logoline2[inlinepos],incharx,inchary);\n    if (linepos==2) col = charpixel(logoline3[inlinepos],incharx,inchary);\n    if (linepos==3) col = charpixel(logoline4[inlinepos],incharx,inchary);\n    if (linepos==4) col = charpixel(logoline5[inlinepos],incharx,inchary);\n    if (linepos==5) col = charpixel(logoline6[inlinepos],incharx,inchary);\n    if (linepos==6) col = charpixel(logoline7[inlinepos],incharx,inchary);\n\n   if ((uv.y==4.)||(uv.y==224.)) col = vec3(1.0,1.0,1.0);\n\n fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}