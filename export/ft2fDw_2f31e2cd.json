{"ver":"0.1","info":{"id":"ft2fDw","date":"1654555664","viewed":181,"name":"Line Rendered Metaballs","username":"westgarthb","description":"Metaballs rendered as lines with texture","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat smin( float a, float b, float k )\n{\n    float h = max( k-abs(a-b), 0.0 )/k;\n    return min( a, b ) - h*h*k*(1.0/4.0);\n}\n\n\nfloat map(vec3 pos)\n{\n    vec3 offset1 = vec3(\n        sin(iTime/2.0), \n        sin(iTime/2.0+2.3), \n        0.5*sin(iTime/2.0+5.0));\n        \n    vec3 offset2 = vec3(\n        sin(iTime/2.0), \n        sin(iTime/2.0+1.3), \n        0.5*sin(iTime/2.0+1.8));\n        \n    vec3 offset3 = vec3(\n        sin(iTime/2.0+4.3), \n        sin(iTime/2.0+1.1), \n        0.5*sin(iTime/2.0+5.2));\n        \n    vec3 offset4 = vec3(\n        sin(iTime/2.0+3.3), \n        sin(iTime/2.0+1.0), \n        0.5*sin(iTime/2.0+0.4));\n        \n    vec3 offset5 = vec3(\n        sin(iTime/2.0+2.3), \n        sin(iTime/2.0+10.4), \n        0.5*sin(iTime/2.0+8.5));\n        \n    vec3 offset6 = vec3(\n        sin(iTime/2.0+7.3), \n        sin(iTime/2.0+15.4), \n        0.5*sin(iTime/2.0+42.5));\n        \n    float size = 0.25;\n    \n    float d = length(pos-(0.7*offset1)) - size;\n    d = smin(length(pos-(0.7*offset2)) - size, d, 0.5);\n    d = smin(length(pos-(0.7*offset3)) - size, d, 0.5);\n    d = smin(length(pos-(0.7*offset4)) - size, d, 0.5);\n    d = smin(length(pos-(0.7*offset5)) - size, d, 0.5);\n    d = smin(length(pos-(0.7*offset6)) - size, d, 0.5);\n    //vec3 p = pos - (0.7*offset5);\n    //vec2 q = vec2(length(p.xy)-0.25,p.z);\n    //d = smin(length(q)-0.15, d, 0.5);\n    return d;\n}\n\nvec3 calcNormal(in vec3 pos)\n{\n    vec2 e = vec2(0.0001, 0.0);\n    return normalize( \n        vec3(map(pos+e.xyy)-map(pos-e.xyy),\n             map(pos+e.yxy)-map(pos-e.yxy),\n             map(pos+e.yyx)-map(pos-e.yyx)) \n    );\n    \n}\n\nfloat biasLookup(float k, float ref)\n{\n    float kcube = 1.0 - 2.0*abs(k - 0.5);\n    if(k <= 0.5)\n    {\n        return (ref * kcube) / (ref * kcube - ref + 1.0);\n    }\n    return 1.0 - ((-(ref-1.0) * kcube) / (-(ref-1.0) * kcube + ref));\n}\n\nfloat castRay(in vec3 ro, vec3 rd)\n{\n    float t = 0.0;\n    for(int i = 0; i < 100; i++)\n    {\n        vec3 pos = ro + t*rd;\n        float h = map(pos);\n        if(abs(h) < 0.001) break;\n        t += h;\n        if(h > 20.0) break;\n        \n    }\n    if(t > 20.0) t = -1.0;\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord - iResolution.xy)/iResolution.y;\n    float an = 6.28*iMouse.x/iResolution.x;\n    \n    vec3 ro = vec3(0.7-sin(an)*1.8, 1.0, 1.8*cos(an));\n    vec3 ta = vec3(0.0,0.0,0.0);\n    \n    vec3 ww = normalize( ta - ro );\n    vec3 uu = normalize( cross(ww,vec3(0,1,0)) );\n    vec3 vv = normalize( cross(uu,ww) );\n    \n    vec3 rd = normalize( p.x*uu + p.y*vv + 1.5*ww );\n\n    float t = castRay(ro, rd);\n    \n\n    float tex = texelFetch(iChannel0, ivec2(fragCoord)%256, 0).x;\n    float tex2 = texelFetch(iChannel2, ivec2(fragCoord * 2.0)%1000, 0).x - 0.5;\n    vec3 col = vec3(0.996, 0.976, 0.929) + 0.1*vec3(tex2);\n    \n    \n    if(t > 0.0)\n    {\n        float q = fract(15.0*(ro + t*rd).y - 0.5) - 0.5;\n        float f = exp(-5.0 * q * q);\n        //f += smoothstep(0.2, 1.2, cos(110.0*(ro + t*rd).x));\n        col -= vec3(biasLookup(clamp(2.0*pow(f, 60.0-f), 0.0, 1.0), tex));\n        //col -= vec3(clamp(pow(f, 60.0-f), 0.0, 1.0));\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}