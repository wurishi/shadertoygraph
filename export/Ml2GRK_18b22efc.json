{"ver":"0.1","info":{"id":"Ml2GRK","date":"1430530171","viewed":290,"name":"Zoom Blur Test","username":"anastadunbar","description":"Testing with loops on GLSL.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","texture","noob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//SET LOOP HOW HIGH YOU WANT\n#define loops 10\n\n//Triangle waves, I didn't know how to write these functions\nfloat tris(float val)\n{\n \treturn asin(sin(val))/3.1415;   \n}\nfloat tric(float val)\n{\n \treturn acos(cos(val))/3.1415;   \n}\n\nvec2 scale(vec2 pos, float size)\n{\n    //Used fract for repeating texture\n \treturn fract(vec2((pos-0.5)*size));   \n}\n\n//Some trigonometric animations\nvec2 movement1(float time){\n    return vec2(tris(time),tric(time))/7.;\n}\nvec2 movement2(float time){\n    return vec2(sin(time),cos(time))/7.;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //I like to write 'time' instead of 'iTime'\n    float time = iTime;\n    \n    //Scale animation\n    float stime = (((sin(time*0.8)/2.)+0.9)*100.)+1.;\n    \n    vec4 myTexture = vec4(0.);\n    \n    //Loops are awesome\n    for(int i=0;i<loops;++i)\n    {\n       float tick = float(i);\n       myTexture += texture(iChannel0,scale(uv+movement2(time+(tick*0.01)),(tick/stime)+1.))/float(loops);\n    }\n    \n\tfragColor = vec4(myTexture);\n}","name":"Image","description":"","type":"image"}]}