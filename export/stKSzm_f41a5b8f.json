{"ver":"0.1","info":{"id":"stKSzm","date":"1643685343","viewed":179,"name":"毛刺124","username":"lllcz","description":"毛刺","likes":4,"published":3,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.1415926;\n\n//产生随机数\nfloat rand(float n){\n   return fract(sin(n) * 43758.5455465456);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float maxJitter = 0.06;\n    \n    float duration = 0.3;\n    \n    float colorRoffset = 0.01;\n    \n    float colorBoffset = -0.025;\n    \n    float time = mod(iTime, duration * 2.0);\n    \n    float amplitude = max(sin(time * (PI / duration)) , 0.);\n    \n    float jitter = rand(uv.y) * 2.0 - 1.0;\n\n    bool needOffset = abs(jitter) < maxJitter * amplitude;\n    \n    float textureX = uv.x + (needOffset ? jitter : (jitter * amplitude * 0.006));\n\n    vec2 newTexture = vec2(textureX, uv.y);\n    \n    vec4 mask = texture(iChannel0, newTexture);\n    \n    vec4 maskR = texture(iChannel0, newTexture + vec2(colorRoffset * amplitude, 0.0));\n\n    vec4 maskB = texture(iChannel0, newTexture + vec2(colorBoffset * amplitude, 0.0));\n\n    // Output to screen\n    fragColor = vec4(maskR.r, mask.g,maskR.b, 1.0 );\n}","name":"Image","description":"","type":"image"}]}