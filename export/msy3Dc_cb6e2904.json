{"ver":"0.1","info":{"id":"msy3Dc","date":"1679111190","viewed":137,"name":"visualizing noise with digits","username":"ianertson","description":"Just an experiment","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R (iResolution.xy)\n#define T (iTime*0.09)\n\nuint hash21u(in vec2 ip, in float seed) {\n    uvec2 p = uvec2(floatBitsToUint(ip.x), floatBitsToUint(ip.y)); uint s = floatBitsToUint(seed);\n    s ^= ~s >> 3U; p ^= (p << 17U); s ^= (~p.x); s ^= (~p.y);\n    p ^= (p >> 11U); p ^= (p << 5U); p ^= (s << 3U);\n    return ((p.x + p.y) ^ (p.x * s + p.y))*293U;\n}\n\nfloat hash21(in vec2 ip, in float seed) {return float(hash21u(ip, seed))/float(0xFFFFFFFFU);}\nvec3 hash23(in vec2 ip, in float seed) {\n    uint n = hash21u(ip, seed); n ^= (n >> 13U);\n    return vec3(float((n >> 16U) & 0xFFU), float((n >> 8U) & 0xFFU), float(n & 0xFFU)) / float(0xFFU);\n}\nfloat noise(in vec2 p, in float seed) {\n    vec2 id = floor(p);\n    vec2 lv = fract(p);\n    lv = lv*lv*(3.0-2.0*lv);\n    return mix(\n        mix(hash21(id, seed), hash21(id+vec2(1, 0), seed), lv.x),\n        mix(hash21(id+vec2(0, 1), seed), hash21(id+vec2(1, 1), seed), lv.x),\n        lv.y\n    );\n}\n\nfloat letter(in vec2 uv, in int il) {\n    if (uv.y > (1.0/16.)) return 0.;\n    float mi = 65.;\n    float ma = 122.0;\n    float lx = (float(il)-97.) / 16.0;\n    float ly = ((float(il)-111.8) / 16.0) * (lx / 16.);\n    uv.y += (9.0/16.);\n    uv.x += (1.0/16.);\n    uv.x += ceil(lx*16.)/16.;\n    uv.y -= ceil(ly*16.)/16.;\n    return textureLod(iChannel0, uv, 0.0).r;\n}\n\nfloat digit(in vec2 uv, in int il) {\n    if (uv.y > (1.0/16.)) return 0.;\n    float mi = 65.;\n    float ma = 122.0;\n    float lx = float(il)/16.;\n    uv.y += (12.0/16.);\n    uv.x += floor(lx*16.)/16.;\n    return textureLod(iChannel0, uv, 0.0).r;\n}\n\nvoid mainImage( out vec4 O, in vec2 fc )\n{\n    vec3 col = vec3(0.0);\n    vec2 uv = fc/R.y;\n    float tile = 16.;\n    \n    if (fc.x < (R.x/2.0))\n    {\n        vec2 id = floor(uv*tile);\n        vec2 lv = fract(uv*tile);\n\n        int dig = int(noise(id * vec2(T, T), 3.983281)*10.)%10;\n        col += digit(lv/16., dig) * ((dig <= 0) ? hash23(id, (id.x+id.y)*7.56872813) : vec3(0, 1, 0));\n    } else {\n        vec2 id = floor(uv*tile);\n        vec2 lv = fract(uv*tile);\n\n        col += letter(lv/16., 97+(int((noise(id * vec2(T, T), 10.238145)*25.))%25) ) * hash23(id, (id.x-id.y)*4.09291);\n    }\n\n    \n    O = vec4(col, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}