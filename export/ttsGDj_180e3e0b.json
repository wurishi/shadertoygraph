{"ver":"0.1","info":{"id":"ttsGDj","date":"1557757936","viewed":1175,"name":"Visualising UV coordinates","username":"boomji","description":"shader that visualises UV space","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["uv","mapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // UV going from 0 - 1 horizontally\n    vec3 colx = vec3(uv.x);\n    \n    // UV going from 0 - 1 vertically\n    vec3 coly = vec3(uv.y);\n    \n    // Inverse\n    float inverse = -1.0;\n    \n    // Output to screen\n    //fragColor = vec4(colx,1.0);\n    \n    vec2 uv_space = vec2(pow(uv.y,5.0),pow(uv.x,5.0) ) ;// vec2(coly) ;\n    //vec3 smear_uv = vec3(uv_offset.x);\n    \n    vec3 texColor = texture(iChannel0,uv_space).xyz;\n    \n    // visualise UV space\n    //fragColor = vec4(coly,1.0);\n    fragColor = vec4(uv_space.x,uv_space.y,0.0,1.0);\n    \n    \n    // Final Color\n    //fragColor = vec4(texColor,1.0);\n}","name":"Image","description":"","type":"image"}]}