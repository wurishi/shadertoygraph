{"ver":"0.1","info":{"id":"WtGXzz","date":"1582120872","viewed":86,"name":"TestMetaBall","username":"sundxing","description":"metaball","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["metaball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define cellCount 10.0\n#define SEED_LIFE 0.646\n\nvec3 color_bg = vec3(1.0);\nvec3 color_inner = vec3(1.0,0.9,0.16);\n\nvec3 color_outer = vec3(0.12,0.59,0.21);\n\nfloat timeScale = 1.0;\nfloat mapScale = 1.0;\n\n// size in pixels inner/outer with mapscale 1.0\nvec2 cellSize = vec2(30.0, 44.0); \n\n\n\nvec3 powerToColor(vec2 power)\n{\n    float tMax = pow(1.03,mapScale*2.2);\n    float tMin = 1.0 / tMax;\n    \n    vec3 color = mix(color_bg, color_outer, smoothstep(tMin,tMax,power.y));\n    //color = mix(color, color_inner, smoothstep(tMin,tMax,power.x));\n    return color;\n}\n\n\nvec2 getCellPower( vec2 coord, vec2 pos, vec2 size )\n{\n    vec2 power;\n    \n    power = (size*size) / dot(coord-pos,coord-pos);\n    power *= power * sqrt(power); // ^5\n    \n    return power;\n}\n\nfloat random(vec2 st) {\n    \n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat animation(float time, float life, float delay) {\n    float value = 1.0 - life * pow((1.0 + delay - time), 4.0);  \n    if (value < .0) return .0;\n    return value;\n}\n\nfloat random(float n) {\n    \n  \treturn fract(sin(n) * 500000.);   \n}\n\nvec2 within(vec2 uv, vec4 rect) {\n\treturn (uv-rect.xy)/(rect.zw-rect.xy);\n}\n\n\nvoid mainImage( out vec4 color, in vec2 coord )\n{\n\tfloat T = mod(iTime, 8.0) * 0.1 * timeScale / mapScale;\n    \n    float SEED_POSITION = random(floor(iTime/8.0)) * 77.0;\n\n    float scaleTime = 6.0 * T;\n    float hMoveTime = 0.2 * T + SEED_POSITION;\n    float vMoveTime = 2.0 * T;\n    \n    vec2 hRes = iResolution.xy*0.5;\n    vec2 uv = coord.xy/iResolution.xy;\n    \n    vec2 pos;\n    vec2 power = vec2(0.0,0.0);\n \n    for(float x = 1.0; x != cellCount + 1.0; ++x)\n    {\n\n        // 位置\n        pos = hRes * vec2(sin(hMoveTime*fract(0.246*x)+x*3.6)*cos(hMoveTime*fract(0.374*x)-x*fract(0.6827*x))+1.,\n                          cos(hMoveTime*fract(0.4523*x)+x*5.5)*sin(hMoveTime*fract(.128*x)+x*fract(0.3856*x))+1.);\n       \n        // 位移\n        pos.x += hRes.x;\n\n        // 缩放\n        pos *= vec2(0.5, 0.5);\n\n        // 移动速度\n        float moveSpeed = random(x * 33.0) + 0.2 ;\n   \t\t\t\t\t\t\n        // 大小\n        float sizeScale = (0.3 + random(x) * 0.7);\n        \n        // 出现消失\n        sizeScale *= animation(vMoveTime * 2.0, (random(x)*4.0+0.1) * 2.0, fract(SEED_LIFE*x) * 0.7);\n        pos.y += vMoveTime * hRes.y  * moveSpeed;\n                        \n     \n    \tpower += getCellPower(coord.xy, pos, cellSize * sizeScale);\n    }\n    \n    color.rgb = powerToColor(power);\n}","name":"Image","description":"","type":"image"}]}