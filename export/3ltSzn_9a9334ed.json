{"ver":"0.1","info":{"id":"3ltSzn","date":"1580291616","viewed":262,"name":"Sin and Cos","username":"tonywu","description":"just for test","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n        // the sound texture is 512x2\n    //int tx = int(uv.x*512.0);\n    int tx = 1;\n     \n\t// first row is frequency data (48Khz/4 in 512 texels, meaning 23 Hz per texel)\n\tfloat fft  = texelFetch( iChannel0, ivec2(tx,0), 0 ).x; \n\n    // second row is the sound wave, one texel is one mono sample\n    float wave = texelFetch( iChannel0, ivec2(tx,1), 0 ).x;\n    \n    \n    col += sin(uv.x * cos(iTime/30.*fft/20.) * 60.) + sin(uv.y * cos(iTime / 20.) * 18.);\n\n    col += cos(uv.x* sin(iTime/60.) * 60.) + cos(uv.y * sin(iTime / 10.*wave) * 18. * fft);\n    \n    //col *= sin(iTime / 30.);\n    \n    col += mix(col,(cos(iMouse.yxy+vec3(0,2,4))),uv.y);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}