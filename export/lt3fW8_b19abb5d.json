{"ver":"0.1","info":{"id":"lt3fW8","date":"1539339697","viewed":1983,"name":"Webcam 'Giant in a lake'","username":"BenWheatley","description":"Webcam \"Giant in a lake\" effect.","likes":24,"published":3,"flags":2,"usePreview":1,"tags":["water","water","webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * Webcam 'Giant in a lake' effect by Ben Wheatley - 2018\n * License MIT License\n * Contact: github.com/BenWheatley\n */\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 pixelSize = vec2(1,1) / iResolution.xy;\n    \n    vec3 col = texture(iChannel0, uv).rgb; \n    float mirrorPos = 0.3;\n    if (uv.y < mirrorPos) {\n        float distanceFromMirror = mirrorPos - uv.y;\n        float sine = sin((log(distanceFromMirror)*20.0) + (iTime*2.0));\n        float dy = 30.0*sine;\n        float dx = 0.0;\n        dy *= distanceFromMirror;\n        vec2 pixelOff = pixelSize * vec2(dx, dy);\n        vec2 tex_uv = uv + pixelOff;\n        tex_uv.y = (0.6 /* magic number! */) - tex_uv.y;\n        col = texture(iChannel0, tex_uv).rgb;\n        \n        float shine = (sine + dx*0.05) * 0.05;\n        col += vec3(shine, shine, shine);\n    }\n   \t\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}