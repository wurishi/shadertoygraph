{"ver":"0.1","info":{"id":"4dScRt","date":"1493197945","viewed":589,"name":"perception of noise tiles - 2","username":"FabriceNeyret2","description":"Human visual system is good to detect correlation... up to some limits. \nHere, with tiles of white noise.\nMouse.x tune noise tile size.  Mouse.y offset the noise.\nSpace to see tiles.   hold S to checker-reverseVideo (negative correlation).","likes":1,"published":3,"flags":16,"usePreview":0,"tags":["noise","experiment","perception","correlation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// bluenoise version: https://www.shadertoy.com/view/XdScRt\n// see also https://www.shadertoy.com/view/Md2czm\n// from bluenoise version, cf https://www.shadertoy.com/view/4dSyDR\n//      whitenoise version https://www.shadertoy.com/view/Msjczm\n\nvec4 char(vec2 p, int c) {  // access to the image of ascii code c. from https://www.shadertoy.com/view/llySRh\n\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel0, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx(p/16.),dFdy(p/16.) );\n}\n\nvec4 pInt(vec2 p, float n) { // display int4\n    vec4 v = vec4(0,0,0,1e5), t;\n    if (n < 0.) {\n        t = char(p - vec2(-.5,0), 45 ); if (t.a<=1.) v.a=0., v += t;\n        n = -n;\n    }\n\n    for (float i = 3.; i>=0.; i--) {\n        n /= 10.;\n        t = char(p - vec2(.5*i,0), 48+ int(fract(n)*10.) ); if (t.a<=1.) v.a=0., v += t;\n    }\n    return v;\n}\n\nfloat hash( uint n ) { // from https://www.shadertoy.com/view/llGSzw  Base: Hugo Elias. ToFloat: https://iquilezles.org/articles/sfrand\n\tn = (n << 13U) ^ n;\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\n    return uintBitsToFloat( (n>>9U) | 0x3f800000U ) - 1.;\n}\n\n#define keyClick(ascii)  (texture(iChannel2, vec2((.5+ascii)/256.,.25)).x > 0.)\n\n\nvec4 noise(vec2 U) {\n    U-=.5;   return vec4( hash(uint(U.x+iResolution.x*U.y)) );\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 M = iMouse.xy; if (length(M)<10.) M = vec2(50);\n\n    vec2 S = floor(U/M.x);\n    O = noise( mod(U,M.x) +M.y );                             // tiled noise\n    if (keyClick(64.+19.) && mod(S.x+S.y,2.)==1.) O = 1.-O;   // checkboard reverse color\n    \n    O = sqrt(O);                                              // gamma conversion\n    \n    vec4 V = pInt ( ( U/iResolution.y - vec2(1.,.85) ) * 10., M.x); // print scale\n    if (V.a<1.) O = V.x*vec4(1,.6,0,0);\n    \n    U = mod(U,M.x);                                           // show tiles\n    if (keyClick(32.) && min(U.x,U.y)==.5 ) O=vec4(1,0,0,0);\n\n}","name":"Image","description":"","type":"image"}]}