{"ver":"0.1","info":{"id":"ddjfzt","date":"1690046288","viewed":70,"name":"Tiled 2 Pixel Perfection ","username":"rdcpcguy","description":"Just learning how to write shaders.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learn"],"hasliked":0,"parentid":"dsjBzt","parentname":"Tile Greatness"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t, vec3 a, vec3 b, vec3 c, vec3 d)\n{\n    return a + b * cos(6.28318*(c*t+d));\n}\n\nvec3 paletted(float t)\n{\n    vec3 v1 = vec3(0.5, 0.5, 0.5);\n    vec3 v2 = vec3(0.5, 0.5, 0.5);\n    vec3 v3 = vec3(1.0, 1.0, 1.0);\n    vec3 v4 = vec3(0.263, 0.416, 0.557);\n    return palette(t, v1, v2, v3, v4);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = sin((fragCoord * 2.0 - iResolution.xy) / sin(iResolution.y / 16.0));\n    \n    uv *= 2.0;\n    uv = fract(uv * uv);\n    uv -= 0.5;\n\n    float d = length(uv);\n    \n    vec3 col = paletted(d + iTime);\n    \n    d = sin(d * 8. + iTime) / 8.;\n    d = abs(d);\n    \n    d = smoothstep(0.1, 0., d);\n    \n    col *= d;\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}