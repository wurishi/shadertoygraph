{"ver":"0.1","info":{"id":"wtSyzG","date":"1594656357","viewed":116,"name":"Trackmania 2020's loading ring ","username":"laralex","description":"Almost exact copy of a loading bar in Trackmania 2020 game. I'm too much of a noob to make something more complex.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["loading"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float SPIN_SPEED = 120.0;\n    float RADIUS = 0.6;\n    float WIDTH = 0.25;\n    float ANTIALIAZING = 0.005;\n    \n    // center and scale uvs\n    vec2 uv = (fragCoord.xy*2.0 - iResolution.xy) / iResolution.y;\n    \n    // rotate whole uv grid\n    float angle = radians(-iTime * SPIN_SPEED);\n    mat2 rotation = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    uv = rotation * uv; \n    \n    // draw ring\n    float ringSdf = length(uv) - RADIUS;\n    float ring = 1.0 - smoothstep(WIDTH-ANTIALIAZING, WIDTH+ANTIALIAZING, abs(ringSdf));\n    \n    // make color gradient\n    float phi = atan(uv.x,uv.y); // polar angle\n    float transparency = mod(phi, PI) / PI;\n    vec3 col = vec3(transparency*ring);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}