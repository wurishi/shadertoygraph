{"ver":"0.1","info":{"id":"lsVGWh","date":"1454321658","viewed":132,"name":"Wedge","username":"sillsm","description":"x","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Max Sills 2016\n// Licensed under the MIT license.\n#define PI 3.14159265359\n\nfloat radToAngle(float r){\n    return mod(r *(180./PI), 360.);\n}\n\nfloat wedge(float low, float high, float current){ \n    float midpoint = mod(high-low,360.)/2.;        \n    float a        = mod(current - low,360.);   \n    return clamp(abs(midpoint - a)/midpoint, 0., 1.) ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - vec2(0.5,0.5);\n\n    //Calculate the angle from the center.\n    float angle = atan(uv.y,uv.x);\n    float time = iTime * 100.;\n    fragColor = vec4(0.3);\n    fragColor = mix(vec4(1.), fragColor, wedge(time, time+20., radToAngle(angle)));\n}","name":"","description":"","type":"image"}]}