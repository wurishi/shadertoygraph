{"ver":"0.1","info":{"id":"4XlBDn","date":"1728272496","viewed":34,"name":"Dodecagon w hexagon slip","username":"Elsio","description":"preciso disso pro pr√≥ximo pass","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["animate","geometri","slip","octogono","octagono","cabri","geogebra"],"hasliked":0,"parentid":"4XlfWn","parentname":"walk poly perimeter "},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI acos(-1.)\n#define TAU 2. * PI\n\n// anterior: Octagon w square slip\n// https://www.shadertoy.com/view/XXBcz3\n\nvec2 move(float poly, float ra, float d, float t) {\n    float s = TAU / poly; \n    float T = t * poly;\n    vec2 side = floor(T) * s + vec2(0, 11) + d;\n    \n    return mix(\n               cos(side), \n               cos(side + s), \n               fract(T)\n           ) * ra;\n}\n\nfloat Poly(vec2 p, float k, float ra, float T, bool fill) {\n    float d;\n    d = atan(p.y, p.x) - T;\n    d = mod(d, TAU / k) - PI / k;\n    d = cos(d) * length(p) - ra;\n    \n    return fill? d : abs(d);\n}\n\nvoid mainImage(out vec4 o, vec2 U){\n    vec2 r = iResolution.xy,\n         u = (U - r / 2.) / r.y;\n            \n    float k = 6., ds,\n          t = fract(iTime * .1) * k;\n        \n    float\n    t1 = (floor(t) + smoothstep(.0, .8, fract(t))) / k + 4./k,\n    t2 = (floor(t) + smoothstep(.8, 1., fract(t))) / k;\n    \n    vec4 R = vec4(.24, .2, .45, .47);\n    \n    vec2 q1 = move(k, R.x, ds, t1);\n    vec2 q2 = move(k, R.x, ds + 3. * PI / k, t2);\n\n    o *= .0;\n    \n    o += max(o, smoothstep(4. / r.y, .0, length(u) - R.w)) * .125; // bg\n    \n    o.rg += max(o.g, smoothstep(4. / r.y, .0, \n            Poly(u - q1, k, R.y, ds + TAU / 12., true)));\n    o.gb += max(o.b, smoothstep(4. / r.y, .0, \n            Poly(u - q2, k, R.y, ds, true)));\n\n    //if(false)\n        o.r += \n              smoothstep(\n                4. / r.y, .0, \n                Poly(u, k * 2., R.z, ds + PI/4., false)\n              );\n}","name":"Image","description":"","type":"image"}]}