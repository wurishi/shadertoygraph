{"ver":"0.1","info":{"id":"Dl2czR","date":"1691411869","viewed":57,"name":"Ball Shader two","username":"Leslie","description":"better lighting","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = (2.*fragCoord-iResolution.xy)/scale;\n    \n    \n    vec3 bClr = vec3(199., 210., 212.)/255.; // backColor\n    \n    float z = sqrt(   max(pow(0.8 , 2.)-pow(length(uv), 2.), 0.0)  );\n    vec3 p = vec3(uv, z);\n    vec3 nrml = normalize(p);\n    vec3 sun = vec3(sin(iTime), .5, cos(iTime));\n    vec3 uvSun = normalize(sun);\n    vec3 uvSpecular = normalize(vec3(0., 0., 1.)+uvSun);\n\n    vec3 clr = vec3(0.5, 0.5, 0.5); // ballColor\n    float cosDiffusion = max(0., dot(nrml, uvSun)); // Diffuse Coeffe\n    float cosSpecular = max(0., dot(uvSpecular, nrml)); // Specular Coeffe\n\n    float I = .5;\n    clr = clr*1.3 // Ambient\n         + clr*I*cosDiffusion // Diffusion\n         + mix(clr, vec3(1.), 0.3)*I*pow(cosSpecular, 200.); // Specular\n\n    clr = clamp(clr, 0., 1.);\n    \n    float blur = 3./scale; // keep blur width be same in pixel size\n    float smth = smoothstep(0.8-blur, 0.8+blur, length(uv));\n    fragColor = vec4(mix(clr, bClr, smth), 1.);\n}\n","name":"Image","description":"","type":"image"}]}