{"ver":"0.1","info":{"id":"tsG3WR","date":"1569973388","viewed":309,"name":"Distance fractals","username":"izo","description":"Weird distance based fractals. They get more and more detailed as time increments.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractals","distance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int scr = 1;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    \n    vec3 col = vec3(0);\n    \n \tvec3 ro = vec3(0);\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1));\n    float t = 0.;\n    \n    if ( !bool(fract((iTime - fract(iTime)) / 4.)) ) scr = 1;\n    else if (!bool(fract((iTime - fract(iTime)) / 6.))) scr = 3;\n    else scr = 2;\n    \n    switch(scr) {\n        \n    \tcase 1: t = sin(uv.x*10.+uv.y*sin(iTime)); break;\n    \n   \t\tcase 2: t = sin(uv.x*10.+uv.y*(iTime/uv.x)); break;\n     \n    \tcase 3: t = sin(uv.x*10.+uv.y*(iTime/uv.x*uv.y)); break;\n    };\n    \n    float dist = length(ro + rd*t);\n    \n    vec3 intensity = vec3(1. - dist);\n    \n    vec3 tint = vec3(abs(sin(fragCoord.x)),abs(cos(fragCoord.x*fragCoord.y)),0);\n    \n    col = mix(intensity, tint, .0); \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec4 someFunction( vec4 a, float b )\n{\n    return a+b;\n}","name":"Common","description":"","type":"common"}]}