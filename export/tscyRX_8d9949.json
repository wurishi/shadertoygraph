{"ver":"0.1","info":{"id":"tscyRX","date":"1601376814","viewed":147,"name":"Short hyperspace jump (loop)","username":"sparkam","description":"Short hyperspace jump forth and back.\nMy first shader experiment","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["starwars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 p, float r, float blur, float intens) {\n    float d = length(uv - p);\n    float c = smoothstep(r, r - blur, d);\n    return c * intens;\n}\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat line(vec2 uv, vec2 p1,vec2 p2, float r, float blur, float intens) {\nvec2 g = p2 - p1;\n    vec2 h = uv - p1;\n    float d = length(h - g * clamp(dot(g, h) / dot(g,g), 0.0, 1.0));\n\treturn smoothstep(r, r - blur, d) * intens;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float numStars = 1000.0;\n    float sig = 1.0; //reverse\n    float sig2 = 1.0; //reverse\n    float t_max = 1.5;\n    sig = sign(sin(2.0*3.14159265*iTime/(2.0*t_max)));\n    sig2 = sign(sin(2.0*3.14159265*iTime/(4.0*t_max)));\n    \n    float time = mod(iTime * sig, t_max);\n    time = time / t_max;\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float tz = mod(iTime, 2.0 * t_max * sig2)/(4.0*t_max);\n\n    uv *= (1.0 - 0.08*smoothstep(0.0, 0.2, tz*tz)); //zoom in\n    \n    float c = 0.0; // defines image\n    float s = 10.0; // scale value\n    \n    float dotSize = 0.002525;\n    float blurPart = 0.8;\n    float blurSize = dotSize * blurPart; //0.002\n    float starIntens = 0.5;\n    \n    float gloSize = 50.0 * dotSize;\n    float gloBlurSize = 0.99 * gloSize;\n    \n    vec2 co = vec2(0.0, 0.0);\n    vec2 co1 = vec2(0.0, 0.0);\n    vec2 coo = vec2(0.0, 0.0);\n   \n    float l;\n    float rcx;\n    float rcy;\n    \n    float starsize;\n    \n    for (float k = 0.0; k < numStars; k++) {\n        rcx = 2.0*(1.77 * rand(vec2(0.0, 10.0 + k * 10.0)) - 0.88);\n        rcy = 2.0*       (rand(vec2(1.0, 1.0 + k * 10.0)) - 0.5);\n        \n        starIntens = 0.7 * rand(vec2(2.0, 1.0 + k * 10.0));\n        starsize = dotSize * (1.0 - 0.5 * rand(vec2(3.0, 1.0 + k * 10.0)));\n            \n        coo = vec2(rcx, rcy);\n        \n        float m = sig2*s * mix(pow(0.6*time,5.0), pow(1.08*time,25.0), pow(time,1.0));\n        co1 = coo * (1.0 + max(m, -0.5));\n                \n        l = line(uv, coo, co1, starsize, blurSize, starIntens);\n        \n        c = max(c, l);\n       \n    }\n    \n    fragColor = 1.5*vec4(1.1*c, 1.1*c, 1.5*c, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}