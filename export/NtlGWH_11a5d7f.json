{"ver":"0.1","info":{"id":"NtlGWH","date":"1622009007","viewed":115,"name":"Sdf Morph","username":"Stephen_epa","description":"sdf morph experiment","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// frome iq's articles\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdStar5(in vec2 p, in float r, in float rf)\n{\n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n    const vec2 k2 = vec2(-k1.x,k1.y);\n    p.x = abs(p.x);\n    p -= 2.0*max(dot(k1,p),0.0)*k1;\n    p -= 2.0*max(dot(k2,p),0.0)*k2;\n    p.x = abs(p.x);\n    p.y -= r;\n    vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n    float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nvec2 random(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)), dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0 * fract(sin(st) * 43758.5453123);\n}\n\nfloat noise (vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random(i), f),\n            dot( random(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n            mix( dot( random(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                dot( random(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    vec2 p = uv;\n\n    p -= .5;\n    p.x *= iResolution.x / iResolution.y;\n    p *= 2.;\n    \n    float speed = 2.;\n    float jitter = (noise(p*50.+iTime*speed))*0.12;\n    \n    float sdc = sdCircle(p + jitter/2., 0.5);\n    float sdb = sdBox(p + jitter/2., vec2(0.2, 0.2));\n    float sds = sdStar5(p + mix(vec2(0.), vec2(0, jitter)*4., max(0., dot(normalize(p), vec2(0., -1.)))), .6, 0.);\n    float mi = 0.19;\n    float ma = 0.2;\n    float ocb = max(-sdc, sdb);\n    \n\n    ocb = (ocb - mi) / (ma - mi);\n    sdc = sdCircle(p - vec2(.55, 0.), 0.2);\n    sdc = (sdc - mi) / (ma - mi);\n    sdb = (sdb - mi) / (ma - mi);\n    sds = (sds - mi) / (ma - mi);\n    \n    float cb = 0.;\n    col += 1.-vec3(mix(ocb, sds, mix(fract(iTime*1.), iMouse.x / iResolution.x, iMouse.z > 0.)), sds*cb, ocb*cb);\n    float tp = dot(normalize(p), vec2(0., -1.));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}