{"ver":"0.1","info":{"id":"WsGBRW","date":"1606626615","viewed":402,"name":"faster than light","username":"Carandiru","description":"Fork of \"Waves of information\" by CoolerZ. https://shadertoy.com/view/Wd3Bz8","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["waves","physics","cherenkov"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Waves of information\" by CoolerZ. https://shadertoy.com/view/Wd3Bz8\n// 2020-11-29 03:26:02\n\n\n#define STEP .25\n#define XLIM 1.\n#define YLIM 1.\n#define SPEED (10.0f)\n\n#define PI (3.14159265358979323846)\n#define sq(a) (a*a)\n\nfloat cherenkov_radiation(out float b, in float h, in float dt)\n{\n    const float c = 299792458.0f;  // universal constant for speed of light in a vacuum (m/s)\n    const float n = 1.33f; // refraction index of water\n    const float e = 10e5f; // total energy emitted\n    const float q = 24e3f; // energy in a particle\n    \n    // n = refraction index of medium\n    // c/n < v < c  : speed of particle is greater than speed of light\n    //\t\t\t\t  in the medium, but still less than the speed of light in a vacuum\n    // B = v/c\t\t: speed of particle in medium / speed of light\n    // cos = 1/(nB) : angle of emission\n    \n    // (modified) frank-tamm formula\n    // sq(d) * e      sq(q)                sq(c)\n    // ---------  =  -------  *  1 -  --------------- \n    //     d           4pi             sq(v) * sq(n)\n    \n    //                sq(q) * (sq(n)*sq(v) - sq(c))\n    //     d       = -------------------------------\n    //                  4 * e * pi * sq(n) * sq(v)\n    \n    float v = c/n;\n    v += (h) * v * dt;\n    v = min(v, c);\n    \n    b = (1.0f / (n * (v / c)));\n    \n    float d;\n    d = sq(q) * (sq(n)*sq(v) - sq(c));\n    d /= 4.0f * e * PI * sq(n) * sq(v);\n    \n    return (d);\n}\n\nfloat circ(vec2 p) {\n    const float r = .1;\n    return length(p)-r;\n}\n\nfloat linearstep(float edge0, float edge1, float x)\n{\n    return clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n}\n\nfloat oracle(vec2 p, float t) {\n    float dist = circ(p+vec2(cos(t),sin(t)));\n    return linearstep(1.0, 0.0, dist);\n}\n\nfloat electricfield(vec2 p, float t) {\n    float velocity = length(p) * iTime;\n    float acc = 0.;\n    float count = 0.;\n    for(float y = -YLIM; y <= YLIM; y+=STEP) {\n        for(float x = -XLIM; x <= XLIM; x+=STEP) {\n            vec2 q = vec2(x, y);\n            float d = length(p - q);\n            \n            float angle;\n        \tfloat rad = cherenkov_radiation(angle, d, STEP);\n            \n            float delay = rad/velocity;\n            acc += oracle(q, t+delay)/angle;\n            ++count;\n        }\n    }\n    return acc/count;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    float background = electricfield(uv, iTime*SPEED);\n\n    vec3 col = vec3(background * 2.0f);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}