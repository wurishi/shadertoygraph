{"ver":"0.1","info":{"id":"4lByRD","date":"1507576875","viewed":139,"name":"DLReveal","username":"DysonLittle","description":"For class","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mouse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nmat3 sharpen = mat3(\n    0.0, -1.0, 0.0,\n    -1.0, 5.0, -1.0,\n    0.0, -1.0, 0.0);\n\nmat3 blur = mat3(\n    0.111, 0.111, 0.111,\n    0.111, 0.111, 0.111,\n    0.111, 0.111, 0.111);\n\nmat3 emboss = mat3(\n\t-2.0, -1.0, 0.0,\n\t-1.0, 1.0, 1.0,\n\t0.0, 1.0, 2.0);\n\nmat3 edgeDetection = mat3(\n\t0.0, 1.0, 0.0,\n\t1.0, -4.0, 1.0,\n\t0.0, 1.0, 0.0);\n\nmat3 sobelEdge = mat3(\n\t-1.0, -2.0, -1.0,\n\t0.0, 0.0, 0.0,\n\t1.0, 2.0, 1.0);\n\nvec3 aSample(const int x, const int y, in vec2 fragCoord, sampler2D iChannel)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n\treturn texture(iChannel, uv).xyz;\n}\n\n\nvec3 aFilter(in vec2 fragCoord, mat3 kernel, sampler2D iChannel)\n{\n\tvec3 sum = aSample(-1, -1, fragCoord, iChannel) * kernel[0][0]\n\t\t\t+ aSample(-1, 0, fragCoord, iChannel) * kernel[0][1]\n\t\t\t+ aSample(-1, 1, fragCoord, iChannel) * kernel[0][2]\n\t\t\t+ aSample( 0, -1, fragCoord, iChannel) * kernel[1][0]\n\t\t\t+ aSample( 0, 0, fragCoord, iChannel) * kernel[1][1]\n\t\t\t+ aSample( 0, 1, fragCoord, iChannel) * kernel[1][2]\n\t\t\t+ aSample( 1, -1, fragCoord, iChannel) * kernel[2][0]\n\t\t\t+ aSample( 1, 0, fragCoord, iChannel) * kernel[2][1]\n\t\t\t+ aSample( 1, 1, fragCoord, iChannel) * kernel[2][2];\n\n\treturn sum;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 fc = fragCoord;\n\t\n    vec2 circle = iMouse.xy;\n    float circleR = 100.0; //may need adjustment\n    \n    vec3 color;\n    \n    if (length(fc - circle) < circleR)\n    {\n        color = aFilter(fc, sharpen, iChannel1);\n    }\n    else\n    {\n        color = aFilter(fc, blur, iChannel0);\n    }\n    \n    fragColor = vec4(color, 1);\n    \n    \n    \n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}