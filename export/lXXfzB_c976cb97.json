{"ver":"0.1","info":{"id":"lXXfzB","date":"1728580821","viewed":53,"name":"night fireworks","username":"yulia_shv","description":":)","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["isad"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\n    vec2 resolution = iResolution.xy;\n    float y = fragCoord.y / resolution.y;\n    vec3 color = vec3(0.0, 0.0, 0.2); \n\n    float house1 = (fragCoord.x > 0.0 * resolution.x && fragCoord.x < 0.2 * resolution.x && y < 0.3) ? 1.0 : 0.0;\n    float house2 = (fragCoord.x > 0.5 * resolution.x && fragCoord.x < 0.7 * resolution.x && y < 0.4) ? 1.0 : 0.0;\n    float house3 = (fragCoord.x > 0.65 * resolution.x && fragCoord.x < 0.8 * resolution.x && y < 0.3) ? 1.0 : 0.0;\n    float house4 = (fragCoord.x > 0.85 * resolution.x && fragCoord.x < 1.0 * resolution.x && y < 0.435) ? 1.0 : 0.0;\n    float house5 = (fragCoord.x > 0.22 * resolution.x && fragCoord.x < 0.35 * resolution.x && y < 0.17) ? 1.0 : 0.0;\n\n\n    if (house1 > 0.0) color = vec3(0.15, 0.15, 0.15);\n    if (house2 > 0.0) color = vec3(0.15, 0.15, 0.15);\n    if (house3 > 0.0) color = vec3(0.18, 0.18, 0.18);\n    if (house4 > 0.0) color = vec3(0.15, 0.15, 0.15);\n    if (house5 > 0.0) color = vec3(0.18, 0.18, 0.18);\n\n    \n    vec2 moonPos = vec2(resolution.x * 0.9, resolution.y * 0.8);\n    float moonRadius = 0.12 * resolution.y;\n    float moonBrightness = smoothstep(moonRadius, moonRadius - 0.02 * resolution.y, length(fragCoord - moonPos));\n    vec3 moonColor = vec3(0.9, 0.9, 0.8);\n\n \n    if (length(fragCoord - moonPos) < moonRadius)\n    {\n        color = mix(color, moonColor, moonBrightness);\n    }\n    \n    vec2 uv = (-iResolution.xy + 1.3 * fragCoord.xy) / iResolution.y;\n    float timecycle = iTime-floor(iTime);  \n    float seed = (0.15+floor(iTime));\n    \n  \n  \n  \n    for(float i=0.0; i < 50.0; i+=1.0 )\n    {\n\t\tseed+=i;\n        vec2 tPos = (vec2(cos(seed),sin(seed)))*i*0.009;\n        \n        vec2 pPos = vec2(0.0,0.0);\n        pPos.x=((tPos.x) * timecycle) - 0.9;\n\t\tpPos.y = -0.1*(timecycle*timecycle)+tPos.y*timecycle + 0.1;\n        \n       \n    \tvec2 p1 = pPos;\n    \tvec4 r1 = vec4(vec2(step(p1,uv)),1.0-vec2(step(p1+2.0,uv)));\n    \n        float px1 = smoothstep(0.0,200.0,(1.0/distance(uv, pPos)));\n\n\t    color += px1*(sin(iTime*20.0 + i) + 1.0);\n    }\n    \n     for(float j = 0.0; j < 50.0; j += 1.0) {\n        seed += j;\n        vec2 tPos2 = (vec2(cos(seed + 1.5), sin(seed + 1.5))) * j * 0.009;\n\n        vec2 pPos2 = vec2(0.4, 0.0); \n        pPos2.x += ((tPos2.x) * timecycle) - 0.6;\n        pPos2.y = -0.1 * (timecycle * timecycle) + tPos2.y * timecycle - 0.25;\n\n        vec2 p2 = pPos2;\n        vec4 r2 = vec4(vec2(step(p2, uv)), 1.0 - vec2(step(p2 + 2.0, uv)));\n\n        float px2 = smoothstep(0.0, 200.0, (1.0 / distance(uv, pPos2)));\n\n        color += px2 * (cos(iTime * 20.0 + j) + 1.0) * vec3(0.0, 0.8, 1.0); \n    }\n    \n     for(float j = 0.0; j < 50.0; j += 1.0) {\n        seed += j;\n        vec2 tPos2 = (vec2(cos(seed + 1.5), sin(seed + 1.5))) * j * 0.009; \n        vec2 pPos2 = vec2(0.1, 4.0); \n        pPos2.x = ((tPos2.x) * timecycle) - 1.4; \n        pPos2.y = -0.1 * (timecycle * timecycle) + tPos2.y * timecycle - 0.35;\n\n        vec2 p2 = pPos2;\n        vec4 r2 = vec4(vec2(step(p2, uv)), 1.0 - vec2(step(p2 + 2.0, uv)));\n\n        float px2 = smoothstep(0.0, 150.0, (1.0 / distance(uv, pPos2)));\n\n        color += px2 * (cos(iTime * 20.0 + j) + 1.0) * vec3(0.8, 0.5, 0.3); \n    \n    \n    }\n\n    fragColor = vec4(color, 1.0);\n }","name":"Image","description":"","type":"image"}]}