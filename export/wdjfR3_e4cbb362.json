{"ver":"0.1","info":{"id":"wdjfR3","date":"1590542952","viewed":144,"name":"are we tripping yet","username":"scanlime","description":"Just posting..\nSome video feedback, with spatial undersampling+dithering.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["simple","patterns","diffusion","videofeedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(texture(iChannel0, uv).rgb,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 unit = vec2(1)/iResolution.xy;\n    vec2 uv = fragCoord/iResolution.xy;\n\n    const int sampleN = 3;\n    const float rate = 0.333;\n  \tconst float st = 20.0;\n    const float nbrTotal = pow(float(sampleN*2+1), 2.0);\n    const float nbrMax = nbrTotal * 0.99;\n    const float nbrMin = nbrTotal * 0.12;\n     \n\tvec4 sum = vec4(0.0);\n    vec4 prev = vec4(0.0);\n    for (int i = -sampleN; i <= sampleN; i++) {\n        for (int j = -sampleN; j <= sampleN; j++) {\n            vec2 ij = vec2(float(i), float(j));\n            int prng = iFrame * 39203 + i * 249 + j * 2952;\n            vec2 jitter = vec2( \n                (float(prng & 15) / 8.0) - 1.0,\n                (float((prng >> 8) & 15) / 8.0) - 1.0);\n            vec4 sampled = texture(iChannel0,uv + (ij * st + jitter) * unit);\n            if (i == 0 && j == 0) {\n                prev = sampled;\n            }\n            sum = sum + sampled;\n        }\n\t}\n            \n    vec4 nbrexp = clamp(nbrMin - sum, 0.0, 1.0) + clamp(sum - nbrMax, 0.0, 1.0);\n    vec4 pattern = mix(prev, nbrexp, rate);\n\n    const vec3 keyColor = vec3(0.0, 0.9, 0.0);\n    vec4 video = texture(iChannel1, uv);\n    float key = smoothstep(0.65, 0.8, length(video.rgb - keyColor));\n\n    fragColor = mix(pattern, video, key);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}