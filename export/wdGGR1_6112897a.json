{"ver":"0.1","info":{"id":"wdGGR1","date":"1569692275","viewed":63,"name":"Gradient between Lines","username":"srishti87","description":"Gradient between Lines","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradientlines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getDistanceToLine1(float m, float c, vec2 pt)\n{\n    float numerator= abs(m*pt.x +c -pt.y);\n    float denom = sqrt(m*m+1.0);\n    float result = numerator/denom;\n    return result;\n}\n\nfloat getDistLines(float m, float c1, float c2)\n{\n    float numerator= abs(c1-c2);\n    float denom = sqrt(m*m+1.0);\n    float result = numerator/denom;\n    return result;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //normalize\n    vec2 pos = fragCoord.xy/iResolution.yy;\n\n    //set bg color to black\n    fragColor = vec4(0.0,0.5,0.0, 1.0);\n\n    //Line width and point radius in openGL screen space 'units'\n    float lineWidth = 0.008;\n    float pointSize = 0.01;\n    float lineWidthHalf = lineWidth/2.0;\n\n    // arbitrary points\n    //Feel free to set these however you want\n    vec2 point1 = vec2(0.2, 0.7);\n    vec2 point2 = vec2(0.8, 0.3);\n\n    //line1 equation\n    float m = (point1.y - point2.y)/(point1.x - point2.x);\n    float c1 = point1.y - m*point1.x;\n\tvec2 line1 = vec2((pos.y-c1)/m, pos.x*m+c1);\n    \n    //parallel line2 equation\n    float c2 =c1+0.75;\n    vec2 line2 = vec2((pos.y-c2)/m, pos.x*m+c2);\n    float distBetweenLines = getDistLines(m,c1,c2);\n    //if current pixel is inside the line, set it's color to white\n    if ((pos.y > line1.y && pos.y < line2.y) || (pos.x > line1.x && pos.x < line2.x))\n    {\n        float distLine1 = getDistanceToLine1(m, c1,pos);\n\t\tfloat t  = distLine1/distBetweenLines;\n        fragColor = vec4((1.0-t),0.0,t,1.0);\n    }\n    if ((pos.y > line2.y) || (pos.x > line2.x))\n        fragColor = vec4(0.0,0.0,1.0,1.0);\n    if ((pos.y < line1.y) || (pos.x < line1.x))\n        fragColor = vec4(1.0,0.0,0.0,1.0);\n}\n","name":"Image","description":"","type":"image"}]}