{"ver":"0.1","info":{"id":"4sscRM","date":"1487483662","viewed":126,"name":"Phone Playing Video","username":"VoidChicken","description":"A basic phone playing a video and a light with a halo.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","video","light","phone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 map ( vec3 o ) {\n    float planar = o.y+.1;\n    float phonar = length(max(abs(o)-vec3(.8,.1,1.8),0.0))-.1;\n    float a = planar;\n    a=min(planar,phonar);\n    float b = a==planar?0.:1.;\n    return vec2(a,b);\n}\nfloat trace( vec3 o , vec3 d, float minD ) {\n\tfloat t = minD;\n    for (int i = 0; i < 64; ++i) {\n    \tt+=map(o+d*t).x;    \n    }\n    return t;\n}\nvec3 normals( in vec3 x )\n{\n    vec2 e = vec2( .01, 0.0 );\n    return normalize( vec3( map(x+e.xyy).x - map(x-e.xyy).x,\n                            map(x+e.yxy).x - map(x-e.yxy).x,\n                            map(x+e.yyx).x - map(x-e.yyx).x ) );\n}\nvec3 light = vec3(2, 1, 0);\nvec3 shade ( vec3 o , vec3 i) {\n    vec3 c = vec3(0);  \n      vec3 n = normals(o);\n    float dv=dot(n,normalize(light-o))/distance(o,light);\n    float mat = map(o).y;\n    if (mat==0.) {\n        c=texture(iChannel1,o.xz/10.).rgb*dv;\n    } else if (mat==1.) {\n      \n    \tvec2 uv = (o.xz+vec2(1,2))/2.;\n        vec3 body = vec3(50./256.);\n     \n        body*=dv;\n        float spec = max(pow(dot(reflect(i,n),normalize(light-o)),50.),0.0);\n        if (o.y>.09) {\n       \t\tc=texture(iChannel0,uv.yx/vec2(2,1)).rgb*dv+max(abs(spec)/1.5,0.0);\n            \n            if (uv.y<.15||uv.y>2.-.15) {\n            \tc=body;   \n            }\n        } else {\n            vec2 qv = o.xy;\n            c = body;\n            if (o.z<-.95)\n            {\n            \tfloat dv = .125;\n                if (abs(qv.x)<dv&&abs(qv.y)<dv/4.) \n                {\n                \tc=vec3(.5);\n                }\n            }\n        }\n    }\n    return c;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 o = vec3(-5., .5+iMouse.y/iResolution.y*3., -3.*cos(iMouse.x/iResolution.y*acos(-1.)/2.));\n    vec3 d = vec3(uv-.5,.5);\n    d=d.zyx;\n    d.x*=iResolution.x/iResolution.y;\n    d=normalize(d);\n    vec3 c = vec3(0);\n    float t = trace(o,d,0.0);\n    vec3 hit = o+d*t;\n    \n    vec2 hd = map(hit);\n    if (hd.x<.025) {\n       c=shade(hit,d);\n    }\n    c+=pow(dot(d,normalize(light-o)),5000.)*3.;\n\tfragColor = pow(vec4(c,1.0),vec4(1.)/2.2);\n}","name":"Image","description":"","type":"image"}]}