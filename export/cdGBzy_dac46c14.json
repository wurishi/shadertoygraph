{"ver":"0.1","info":{"id":"cdGBzy","date":"1698391440","viewed":63,"name":"Reactive Animated Sinewaves","username":"bitegw","description":"Layered sinewaves forming a gradient between two colors.\nResponds to mouse position for a pseudo 3D effect (need to press mouse buttons).\nAngle is in radians.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["reactive","animated","wallpaper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float angle = 0.6;\nconst vec3 startColor = vec3(0.2, 0.4, 1.0);\nconst vec3 endColor = vec3(0.3, 0.9, 0.1);\nconst int numWaves = 7;\nconst float waveHeight = 0.1;\nconst float frequency = 15.0;\nconst float lacunarity = 0.2f;\nconst float offset = -0.1;\n\n// Animation\nconst float speed = 0.15;\nconst float cursorInfluence = 0.0005f;\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = rotateUV(uv, angle);\n\n    vec3 col = endColor;\n    for(int i=numWaves - 1; i>=0; i--) {\n        float t = float(i + 1) / float(numWaves);\n        float diff = lacunarity * float(i + 1);\n        float invDiff = 1.0 - diff;\n        \n        vec2 offsetUV = uv + (iMouse.xy - vec2(0.5)) * cursorInfluence * (t - 0.5);\n        \n        float wave = sin((offsetUV.x + 5346.7 * float(i) + iTime * speed * invDiff) * frequency * invDiff);\n        \n        if(offsetUV.y + offset - (1.0 * t) < wave * waveHeight) \n        {\n            col = mix(startColor, endColor, t);\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}