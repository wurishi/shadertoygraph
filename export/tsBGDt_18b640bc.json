{"ver":"0.1","info":{"id":"tsBGDt","date":"1550259978","viewed":227,"name":"EGA Palette Swapper","username":"Heavybrush","description":"A EGA palette swapper + gameboy bonus","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ega","gamemaker","paletteswapper","4bit","16colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//     ▄████████    ▄██████▄     ▄████████ \n//    ███    ███   ███    ███   ███    ███ \n//    ███    █▀    ███    █▀    ███    ███ \n//   ▄███▄▄▄      ▄███          ███    ███ \n//  ▀▀███▀▀▀     ▀▀███ ████▄  ▀███████████ \n//    ███    █▄    ███    ███   ███    ███ \n//    ███    ███   ███    ███   ███    ███ \n//    ██████████   ████████▀    ███    █▀  \n//                                         \n\n/*\n\n////only for game maker studio////\n\nvarying vec2 v_vTexcoord;\nvarying vec4 v_vColour;\n\nvarying vec2 fragCoord;\n//you have to put varying vec2 fragCoord also in the vertex shader\n//after write in the last row of the local scope of the vertex shader: fragCoord = in_Position.xy\n\nuniform vec2 iResolution;\nuniform float iTime;\n\n//palette 0 is not cga but gameboy, I put it as bonus\nuniform int palette;\nuniform float gamma;\n\n*/\n\n// rgb to float\n// rgb to float = rgb / 255\n\n// 0 = 0.0\n// 85 = 0.333\n// 170 = 0.666\n// 255 = 1.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 c = vec3(0.0);\n    float alpha = 1.0;\n    \n    //only for shadertoy\n    int palette = 0; //the number between 0 and 6 change palette\n    float gamma = 1.5; //the gamma change the threshold of the palette swapper\n    \n    //c = texture2D(gm_BaseTexture,uv).rgb;\n    c = texture(iChannel0,uv).rgb;\n    \n    c.r = pow(abs(c.r),gamma);\n    c.g = pow(abs(c.g),gamma);\n    c.b = pow(abs(c.b),gamma);\n    \n    vec3 col01 = vec3(0.0);\n  \tvec3 col02 = vec3(0.0);\n  \tvec3 col03 = vec3(0.0);\n  \tvec3 col04 = vec3(0.0);\n  \tvec3 col05 = vec3(0.0);\n  \tvec3 col06 = vec3(0.0);\n  \tvec3 col07 = vec3(0.0);\n  \tvec3 col08 = vec3(0.0);\n    vec3 col09 = vec3(0.0);\n    vec3 col10 = vec3(0.0);\n    vec3 col11 = vec3(0.0);\n    vec3 col12 = vec3(0.0);\n    vec3 col13 = vec3(0.0);\n    vec3 col14 = vec3(0.0);\n    vec3 col15 = vec3(0.0);\n    vec3 col16 = vec3(0.0);\n    \n  \tif(palette == 0) {\n      col01 = vec3(0.0,0.0,0.0);\n      col02 = vec3(0.0,0.0,0.666);\n      col03 = vec3(0.0,0.666,0.0);\n      col04 = vec3(0.0,0.666,0.666);\n      col05 = vec3(0.666,0.0,0.0);\n      col06 = vec3(0.666,0.0,0.666);\n      col07 = vec3(0.666,0.333,0.0);\n      col08 = vec3(0.666,0.666,0.666);\n      col09 = vec3(0.333,0.333,0.333);\n      col10 = vec3(0.333,0.333,1.0);\n      col11 = vec3(0.333,1.0,0.333);\n      col12 = vec3(0.333,1.0,1.0);\n      col13 = vec3(1.0,0.333,0.333);\n      col14 = vec3(1.0,0.333,1.0);\n      col15 = vec3(1.0,1.0,0.333);\n      col16 = vec3(1.0,1.0,1.0);\n  \t}\n\n    float dist01 = length(c - col01);\n    float dist02 = length(c - col02);\n    float dist03 = length(c - col03);\n    float dist04 = length(c - col04);\n    float dist05 = length(c - col05);\n    float dist06 = length(c - col06);\n    float dist07 = length(c - col07);\n    float dist08 = length(c - col08);\n    float dist09 = length(c - col09);\n    float dist10 = length(c - col10);\n    float dist11 = length(c - col11);\n    float dist12 = length(c - col12);\n    float dist13 = length(c - col13);\n    float dist14 = length(c - col14);\n    float dist15 = length(c - col15);\n    float dist16 = length(c - col16);\n\n    float d = min(dist01,dist02);\n    d = min(d,dist03);\n    d = min(d,dist04);\n    d = min(d,dist05);\n    d = min(d,dist06);\n    d = min(d,dist07);\n    d = min(d,dist08);\n    d = min(d,dist09);\n    d = min(d,dist10);\n    d = min(d,dist11);\n    d = min(d,dist12);\n    d = min(d,dist13);\n    d = min(d,dist14);\n    d = min(d,dist15);\n    d = min(d,dist16);\n\n    if(d == dist01) {\n        c = col01;\n    }\n    else if(d == dist02) {\n        c = col02;\n    }\n    else if(d == dist03) {\n        c = col03;\n    }\n    else if(d == dist04) {\n        c = col04;\n    }\n    else if(d == dist05) {\n        c = col05;\n    }\n    else if(d == dist06) {\n        c = col06;\n    }\n    else if(d == dist07) {\n        c = col07;\n    }\n    else if(d == dist08) {\n        c = col08;\n    }\n    else if(d == dist09) {\n        c = col09;\n    }\n    else if(d == dist10) {\n        c = col10;\n    }\n    else if(d == dist11) {\n        c = col11;\n    }\n    else if(d == dist12) {\n        c = col12;\n    }\n    else if(d == dist13) {\n        c = col13;\n    }\n    else if(d == dist14) {\n        c = col14;\n    }\n    else if(d == dist15) {\n        c = col15;\n    }\n    else {\n        c = col16;\n    }\n    \n    //gl_FragColor = vec4(c,alpha).rgba;\n    fragColor = vec4(c,alpha).rgba;\n}","name":"Image","description":"","type":"image"}]}