{"ver":"0.1","info":{"id":"DsscRH","date":"1686584310","viewed":98,"name":"Metallic Pattern","username":"Fuergu","description":"Maybe I need to merge bufferA and B to get a higher resolution.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["2d","glossy","metallic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//https://www.shadertoy.com/view/MsjXRt\nvec3 HueShift (in vec3 Color, in float Shift)\n{\n    vec3 P = vec3(0.55735)*dot(vec3(0.55735),Color);\n    \n    vec3 U = Color-P;\n    \n    vec3 V = cross(vec3(0.55735),U);    \n\n    Color = U*cos(Shift*6.2832) + V*sin(Shift*6.2832) + P;\n    \n    return Color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 teccol1 = texture(iChannel0, uv);\n    vec4 col=teccol1;\n    //col*=.5;\n    col.rgb=HueShift(col.rgb,iMouse.y/iResolution.y);\n\n    fragColor = col;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.,0.333,0.667);\n\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvec3 palette2( float t ) {\n    vec3 a = vec3(0.8, 0.5, 0.4);\n    vec3 b = vec3(0.2, 0.4, 0.2);\n    vec3 c = vec3(2.0, 1.0, 1.0);\n    vec3 d = vec3(0.00, 0.25, 0.25);\n\n    return a + 1.5*b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv0 = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.y;\n    vec3 finalcol=vec3(0.);\n    vec2 mouse;\n    mouse.x=iMouse.x/iResolution.x/4.;\n    mouse.y=iMouse.y/iResolution.y;\n    \n    for (float i=0.;i<10.;i++)\n    {\n        vec2 uv=uv0;\n        float r= length(uv*mouse.x*8.) * exp(length(uv0*2.));\n\n        float a = atan(uv.y, uv.x)*.1;\n        float f = mod(a, 1.) - 0.5;\n        float t = iTime + r*(0.5*sin(iTime*5.)+0.5) + f*16.;\n\n        float pattern = 0.5 + 0.5*sin(6.2831*t + r*100.);\n        pattern = pow( pattern, 0.5);\n        vec3 col= palette2(r+ i+iTime/3.);\n        col*=pattern;\n        vec3 col2=palette(length(uv0)+ i+iTime/10.);\n        col2*=pattern;\n        finalcol=mix(col,col2,.5);\n    }\n    fragColor = vec4(finalcol, 1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 mouse=vec2(0.);\n    mouse=iMouse.xy/iResolution.xy;\n    mouse.x=sin(iTime)/4.+1.;\n    mouse.y*=cos(iTime)+2.;\n    float idle = float(iMouse.z<0.||iMouse.x<0.001)*0.1;\n    if(idle>0.)\n    {\n        mouse=vec2(sin(iTime)/6.+1.,cos(iTime)+2.);\n    }\n    \n    //float time01=0.5*cos(iTime*2.)+1.5;   \n    float time00=(0.5*sin(iTime)+.5)+1.;\n    vec2 uv0 = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    vec2 uv=fract(uv0*(mouse.y+1.));uv-=.5;\n    //vec2 uv1=fract(uv0*(mouse.y+1.2));uv-=.15;//effect1:\n    //vec2 uv1=fract(uv0*(mouse.y+1.));uv-=.5;\n    vec2 uv1=fract(uv0*(mouse.y+1.2));uv-=.5;\n    //uv*=uv1/time00*1.4*time01;\n    uv*=uv1/time00;\n    \n    vec2 textureuv1=vec2(.27*uv.x*.9+.485+.05*(time00-1.),.44*uv.y*.9+.5+.05*(time00-1.));\n    vec3 col=texture(iChannel0,textureuv1).rgb;\n    \n    fragColor = vec4(col, uv.x);\n}\n","name":"Buffer B","description":"","type":"buffer"}]}