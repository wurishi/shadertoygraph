{"ver":"0.1","info":{"id":"mdsczf","date":"1687083976","viewed":54,"name":"Square | Simple","username":"incorrectPleaseTryAgain","description":"Simple rotating square.\nCreated following: https://inspirnathan.com/posts/49-shadertoy-tutorial-part-3/\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["square"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 uv, float a){\n    return mat2(cos(a), sin(a), -sin(a), cos(a)) * uv;\n}\n\nvec3 sdfSquare(vec2 uv, float r, vec2 offset){\n    float x = uv.x + offset.x;\n    float y = uv.y + offset.y;\n    \n    vec2 rotated = rotate(vec2(x, y), iTime);\n    \n    float dist = max(abs(rotated.x), abs(rotated.y)) - r;\n\n    return dist > .0? vec3(0.) : .5 + cos(iTime + vec3(4, 6, 8));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy - .5);\n    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 offset = vec2(.0, .0);\n    \n    vec3 col = sdfSquare(uv, .25, offset);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}