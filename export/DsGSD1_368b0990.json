{"ver":"0.1","info":{"id":"DsGSD1","date":"1681218391","viewed":65,"name":"mic test","username":"BetaSoftCologne","description":"A spectrum analizer which has proven itself under the heavy loads at Revision 2023.","likes":0,"published":1,"flags":4,"usePreview":0,"tags":["spectrum","audio","analizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: BSC\n// Title: \n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.1415926\n#define TAU PI*2\n\nvec3 analyzer(in vec2 uv) {\n    // Normalize pixel coordinates (from -1 to 1)\n    vec2 p = -1. + (2.*uv);\n\n    float th = 0.01;\n    vec3 audio = textureLod(iChannel0, uv*0.5, 0.0).xyz;\n\n    vec3 col = vec3(0.);\n    if ((p.y < th+audio.x) && (p.y > -th-audio.x)) {\n        float d = abs(p.y-audio.x);\n        col.r = audio.x;\n        col.g = audio.x * d;\n        col.b = 0.5 * pow(-2., p.x);\n    }\n    return col;\n}\n\nvec3 bass(in vec2 uv) {\n    const float bands = 80.;\n    //const float fact = 0.2;\n    //uv *= 0.5;\n    //float band = -36. + bands * uv.x; //  uv.x / bands;\n    float band = uv.x / bands;\n    float f = 440. * pow(2., band/12.);\n    float val = textureLod(iChannel0, vec2(f,0.), 0.0).x;\n\n    const float e = 0.3;\n    vec3 col = vec3(0.);\n    if ((uv.y < e) && (val > 0.2)) {\n        col.g = val*(1./e)*(e-uv.y);\n        col.b = val*e;\n    }\n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.y;\n   \n    vec3 col = analyzer(uv);\n    col += bass(uv);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}