{"ver":"0.1","info":{"id":"ddcfWM","date":"1697218718","viewed":41,"name":"ex002","username":"opqa","description":"A weird Heart 2D sdf","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n#define M_PI2 6.2831853071795864769252867675590\n#define H_PI M_PI * .5\nprecision mediump float;\n\n\nfloat rand( float z, float w )  {\n    int n = int(z+w)*11111;\n    n = (n<<13)^n;\n    n = (n*(n*n*15731+789221)+1376312589)>>16;\n    return float(n);\n}\n\nfloat sdHeart(vec2 p, float r) {\n    vec2 mouse = iMouse.xy/ iResolution.xy;\n    float mm = sin(iTime * 5.) * .5 + .5; // mouse.x;//\n    mm = .9 + ((mm * mm) * .4 + mm * .6) * .4;\n    vec2 ps = vec2(abs(p.x), p.y) / r + vec2(0., .0 + mm * .25);\n    vec2 hcc = vec2(-.2 + mm * .4, -0.3 + mm * .1);\n    vec2 dPoint =  normalize((ps + hcc).yx) * (.07 + mm * .24)    ;\n\n    float dist = length(ps - dPoint) - .37;\n    return (dist) * r;\n}\n\nvec4 opSmoothUnion( vec4 d1, vec4 d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2.w-d1.w)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n\nvec3 IQColor(vec4 _d) {\n    float d = _d.w;\n    vec3 col = vec3(0.051, 0.5373, 0.2627) + sign(d)*_d.rgb;\n\tcol *= .8 - exp(-5.0*abs(d * 5.)) * .4;\n\tcol *= 0.8 + 0.2*cos(500.0*(d-iTime*.04));\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.003,abs(d)));\n    return col;\n}\n\nvec3 myColor(vec4 _d, vec2 p) {\n    float d = _d.w;\n    vec3 col = vec3(0.102, 0.5725, 0.4627) - sign(d)*_d.rgb;\n\tcol *= .9 - exp(-5.0*abs(d * 5.)) * .7;\n    float r = mod(\n      rand(\n        (10. + abs(atan(p.y, p.x)) * sin(iTime * .1) * 7.) * (p.y/d*1.) * sin(iTime * 1.) / mod(d,.3), \n        (p.x*.01) - d * 20. + 14. * (atan(p.x, p.y ))),\n        .3)\n       * 80.;\n\tcol = mix( col, vec3(0.5529, 0.9059, 0.1569) * (abs(p.x) + abs(p.y)) * .5, 1.0-smoothstep(.1 + d * 1.3 * r * 1.2 ,40.1 - r * 3. ,abs(d * .3)));\n    col /= mix( col, vec3( d * .4, .5 ,.5) * (sin((d<0.0?d:d*.6 + 10000. - mod(iTime * .05, 1.)) * 1000.) * 0.04/ mod(atan(p.y,p.x) + iTime * .1, .05)) , 1. - smoothstep(0.002,0.0,abs(d)));\n    return col;\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.x - vec2(.5) * vec2(1., iResolution.y / iResolution.x);\n\n    float d1 = sdHeart(p, .4);\n    float scaleM = cos(iTime * .5) * .5 + .5;\n    float d2 = sdCircle(p - vec2(cos(iTime * 2.) * scaleM * .4 ,sin(iTime * 2.) * scaleM * .4), scaleM * .03 + .01) ;\n\n    vec3 c1 = vec3(abs(d1), 0.0, 0.1);\n    vec3 c2 = c1;\n    vec4 d = opSmoothUnion(vec4(c1,d1), vec4(c2,d2), .05);\n    //d = vec4(c1,d1);\n\n    fragColor = vec4(myColor(d, p), 100.);\n}","name":"Image","description":"","type":"image"}]}