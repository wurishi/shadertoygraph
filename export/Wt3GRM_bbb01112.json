{"ver":"0.1","info":{"id":"Wt3GRM","date":"1575841504","viewed":483,"name":"Mass Spring Damper","username":"PrzemyslawZaworski","description":"Move and press LMB to interact. References and description inside Common.","likes":14,"published":1,"flags":32,"usePreview":0,"tags":["fluid","physics","spring","mass","damper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float delta = 1.0/iResolution.y;\n    float a = length(texture(iChannel0,uv + vec2(delta,0)).xyz);\n    float b = length(texture(iChannel0,uv - vec2(delta,0)).xyz);\n    float c = length(texture(iChannel0,uv + vec2(0,delta)).xyz);\n    float d = length(texture(iChannel0,uv - vec2(0,delta)).xyz);    \n    vec3 normal = normalize(vec3(vec2(a-b,c-d)/delta, 5.0));\n    vec3 light = normalize(vec3(1,1,2));\n    float diffuse = clamp(dot(normal,light),0.3,1.0);\n    float specular = pow(clamp(dot(reflect(light,normal),vec3(0,0,-1)),0.0,1.0), 32.0);\n\tfragColor = texture(iChannel0,uv) * vec4(diffuse) + vec4(specular);\n} ","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n\tfloat kspring = 2.0;\n\tfloat dspring = 1.0;\n\tfloat mass = 20.0;\n\tfloat dt = 1.0;\n\tvec2 mouse = iMouse.xy / iResolution.xy;\n\tif (iFrame < 10) mouse = vec2(0.5,0.5);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 pixel = vec2(1.0, 1.0) / iResolution.xy;\n\tvec4 currentState = texture(iChannel0, uv);\n\tfloat force = 0.0;\n\tvec2 m = (uv - mouse) * (uv - mouse) / pixel;\n\tif (m.x < 0.005 && m.y < 0.005) force -= 200.0;           \n\tfor (int i=-1; i<=1; i+=2)\n\t{\n\t\tfor (int j=-1; j<=1; j+=2)\n\t\t{\n\t\t\tvec2 neighborCoord = uv + vec2(pixel.x*float(i), pixel.y*float(j));\n\t\t\tvec4 neighborState = texture(iChannel0, neighborCoord);\n\t\t\tif (neighborCoord.x < 0.0 || neighborCoord.y < 0.0 || neighborCoord.x >= 1.0 || neighborCoord.y >= 1.0)\n\t\t\t{\n\t\t\t\tneighborState = vec4(0.0,0.0,0.0,1.0);\n\t\t\t} \n\t\t\tfloat deltaP = neighborState.r - currentState.r;\n\t\t\tfloat deltaV = neighborState.g - currentState.g;\n\t\t\tforce += kspring * deltaP + dspring * deltaV;\n\t\t}\n\t}\n\tfloat acceleration = force / mass;\n\tfloat velocity = acceleration * dt + currentState.g;\n\tfloat position = velocity * dt + currentState.r;\n\tfragColor = vec4(position, velocity, acceleration, 1.0);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 state = texture(iChannel0, fragCoord/iResolution.xy);\n    float position = clamp(state.r/1024.0 + 0.5, 0.0, 1.0);\n    fragColor = vec4(0.0, 0.3, (255.0*position)/255.0 + 0.5, 1.0) ;\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"/*\nBuffer A = fluid system;\nBuffer B = visualising particle position;\nImage = diffuse and specular shading;\n\nReferences:\nhttp://www.amandaghassaei.com/projects/shaders/\nhttps://en.wikipedia.org/wiki/Mass-spring-damper_model\nhttps://gafferongames.com/post/integration_basics/\n*/","name":"Common","description":"","type":"common"}]}