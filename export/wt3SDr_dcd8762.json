{"ver":"0.1","info":{"id":"wt3SDr","date":"1580742461","viewed":165,"name":"Polar reflected circle","username":"pixelplayer14","description":"A circle of circles of cut-off circles","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159;\n\nvec2 PolarToUv(vec2 polar)\n{\n    return vec2(polar.y*cos(polar.x),polar.y*sin(polar.x));\n}\n\nvec2 UvToPolar(vec2 uv)\n{\n    return vec2(atan(uv.y,uv.x),length(uv));\n}\n\n\nvec2 Rotate(vec2 uv, vec2 origin, float deg)\n{\n    deg = -radians(deg);\n    vec2 centered = uv-origin;\n    return origin + vec2(centered.x*cos(deg)-centered.y*sin(deg),\n                         centered.x*sin(deg)+centered.y*cos(deg));\n}\n\nfloat CircleSDF(vec2 uv, vec2 pos, float radius)\n{\n    return length(uv-pos)-radius;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n \tvec2 circlePos = vec2(0.3,0.1);\n    uv/=1.2;\n    uv = Rotate(uv,vec2(0),45.0*iTime);\n    \n    vec2 polar = UvToPolar(uv);\n    polar.x = mod(polar.x,PI/5.0); \n    uv = PolarToUv(polar);\n    float dist = floor(CircleSDF(uv,circlePos,0.3))+1.0;\n  \tint n = 0;\n    while( n <2)\n    {\n        if(dist<=0.0)\n        {\n            uv = (uv-circlePos)*5.0;\n            vec2 polar = UvToPolar(uv);\n            polar.x = mod(polar.x,PI/3.0); \n            uv = PolarToUv(polar);\n            dist = floor(CircleSDF(uv,vec2(0.3,0.1),0.2))+1.0;\n        }\n        n++;\n    }\n\n        \n    vec3 col = vec3(0.0,dist,0.0);\n\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}