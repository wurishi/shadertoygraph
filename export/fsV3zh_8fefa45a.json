{"ver":"0.1","info":{"id":"fsV3zh","date":"1631070675","viewed":66,"name":"radial progress bar2","username":"nside","description":"a radial progress bar","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["progress"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI     = 3.1415926;\nconst float TWO_PI = 6.2831852;\n\n\nfloat angleBetween(vec2 v1, vec2 v2)\n{\n    return atan( v1.x - v2.x, v1.y - v2.y ) + PI;\n}\n\n\n// OpenGL uses upper left as origin by default\nbool shouldDrawFragment(vec2 fragCoord)\n{\n    float targetAngle = TWO_PI * iTime / 5.0;\n\n    float centerX = iResolution.x / 2.0;\n    float centerY = iResolution.y / 2.0;\n    vec2 center = vec2(centerX, centerY);\n\n    float a = angleBetween(center, fragCoord );\n\n    return a <= targetAngle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  if (shouldDrawFragment(fragCoord)) {\n    fragColor = texture(iChannel0, vec2(uv.x, -uv.y));\n    \n  } else {\n    fragColor = texture(iChannel0, vec2(uv.x, -uv.y));\n    fragColor *= vec4(0.3);\n  }\n}","name":"Image","description":"","type":"image"}]}