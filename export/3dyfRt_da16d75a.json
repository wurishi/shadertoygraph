{"ver":"0.1","info":{"id":"3dyfRt","date":"1607675846","viewed":563,"name":"Bad Quality CRT Effect","username":"atsuyusky","description":"I like smell of solder from CRT display","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","crt","television","crteffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 distort(vec2 uv, float k4, float mag) {\n    vec2 v = uv - vec2(0.5);\n    float r2 = dot(v, v);\n    vec2 dr = 1.0 / (1.0 + k4 * r2 * r2) * v;\n    return dr * mag + vec2(0.5);\n}\n\nfloat noise(vec2 co){\n  return fract(sin(dot(co.xy,vec2(1.0,0.42829))) * 51126.88915);\n}\n\nfloat vignette(vec2 uv, float scale) {\n    uv = (uv - .5) * scale;\n    return smoothstep(0.0, 1.0, sqrt(pow(abs(uv.x), 8.0) + pow(abs(uv.y), 8.0)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float noisy = abs(sin(iTime) * 0.02) +\n                  pow(sin(iTime * 0.25) * 0.5 + 0.5, 8.0) + 0.01;\n    \n    float noisy2 = noisy * noisy;\n    float randomizer = noise(vec2(iTime, iTime * 3.0));\n    float randomizer2 = noise(vec2(iTime* 1.234, iTime * 2.345));\n    float scanline = sin(uv.y * 500.0 - iTime * 10.0);\n    float vflip = sin(uv.y * 4.0 - iTime * 120.0);\n    \n    // SCAN NOISE OFFSET\n    float scannoise = randomizer * 0.5 * noisy2;\n    vec2 scannoise_offset1 = vec2(scanline * scannoise, 0.0) + vec2(vflip * scannoise, 0.0);\n    vec2 scannoise_offset2 = vec2((randomizer - 0.5) * noisy2, (randomizer2 - 0.5) * noisy2);\n    \n    // CRT DISTORTION\n    vec2 uv_bend = distort(fract(uv + scannoise_offset1 + scannoise_offset2), -0.5, 0.8);\n    \n    // BLOCK NOISE\n    float block_size = 0.0001 + 0.02 * (randomizer - 0.5);\n    vec2 uv_blocked = uv_bend - mod(uv_bend, block_size);\n    float block = 1.0 - step(abs(noise(uv_blocked + vec2(iTime, iTime)) * randomizer2 * noisy), 0.01);\n    uv_bend = mix(uv_bend, uv_blocked, block);\n   \n    // VIDEO SOURCE SAMPLING\n    vec3 col;\n    col.r = texture(iChannel0, uv_bend + vec2(0.01, 0.0)).r;\n    col.g = texture(iChannel0, uv_bend).g;\n    col.b = texture(iChannel0, uv_bend + vec2(-0.01, 0.0)).b;\n   \n    // GRAIN NOISE\n    col = mix(col, vec3(noise(uv * 100.0 + randomizer)), 0.1 + noisy2 * randomizer * 0.9);\n    \n    // FADING OUT\n    vec3 bg = vec3(0.25, 0.5, 0.5);\n    col = mix(col, bg, ((scanline * 0.5 + 0.5) + (vflip * 0.5 + 0.5)) * 0.125);\n    col = mix(col, bg, vignette(uv, 1.5));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}