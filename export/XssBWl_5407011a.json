{"ver":"0.1","info":{"id":"XssBWl","date":"1498820766","viewed":150,"name":"2×2 Pattern","username":"c0de4","description":"ひとは、、","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// thanks to: https://wgld.org/\n\n#define time iTime\n#define mouse iMouse\n#define resolution iResolution\n\nfloat random (in vec2 st) { \n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233))) \n                * 43758.5453123);\n}\n\n// The MIT License\n// Copyright © 2013 Inigo Quilez\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n    \n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( random( i + vec2(0.0,0.0) ), \n                     random( i + vec2(1.0,0.0) ), u.x),\n                mix( random( i + vec2(0.0,1.0) ), \n                     random( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n  vec2 p = ( fragCoord.xy * 2. - resolution.xy ) / min(resolution.x, resolution.y);\n\n  float color = 0.0;\n\n  for(float x = 0.; x < .11; x += .01) {\n    for(float y = 0.; y < .1; y +=  .01) {\n      vec2 q = vec2(x*4.+p.x*.1+p.x*.1 * cos(time*.1)+noise(vec2(time*.1)*2.), p.y*y*sin(time)) * 4.+noise(vec2(time*.1)*4.);\n      //vec2 r = mod( p+q, .2) / .15;\n      q *= mat2(noise(vec2(time*.1)*1.));\n      q -= (p.y+y) + (p.x + x);\n      q = mod( p+q, .2) + .15;\n      \n      \n      color += 0.0008/length( q - (p+q) * (p-q) ) - .00001;\n    }\n  }\n  \n\n  fragColor = vec4( vec3( color*.75, color*.9, color ), 1.0 );\n\n}\n","name":"Image","description":"","type":"image"}]}