{"ver":"0.1","info":{"id":"NtKBWz","date":"1664359408","viewed":166,"name":"A Simple Mandelbrot Set","username":"Jayou","description":"A simple Mandelbrot Set plot, learning from https://complex-analysis.com/content/mandelbrot_set.html","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float cx = 2.0*fragCoord.x/iResolution.y-2.0;\n    float cy = 2.0*fragCoord.y/iResolution.y-1.0;\n\n    float zx = 0.0;\n    float zy = 0.0;\n    \n    int iteration = 0;\n    int max_iteration = 1000;\n    \n    // f(z) = z^2 + c, z and c are complex number.\n    while ((zx*zx + zy*zy) <= 256.0 && iteration < max_iteration)\n    {\n        float next_zx = zx*zx - zy*zy + cx;\n        zy = 2.0*zx*zy + cy;\n        \n        zx = next_zx;\n        \n        iteration++;\n    }\n    \n    if (iteration == max_iteration)\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    else\n    {\n        float smooth_iteration = float(iteration);\n        \n        // Smooth iteration use https://iquilezles.org/articles/msetsmooth/\n        // |Zn| = zx*zx + zy*zy, B = 256.0, d = 2.0\n        //smooth_iteration -= log(log(zx*zx + zy*zy)/log(256.0))/log(2.0);\n        smooth_iteration -= log2(log2(zx*zx + zy*zy)) - 3.0; // Simplified with log2.\n        \n        fragColor = vec4(smooth_iteration/25.0, (smooth_iteration-25.0)/25.0, (smooth_iteration-50.0)/25.0, 1.0);\n    }        \n}","name":"Image","description":"","type":"image"}]}