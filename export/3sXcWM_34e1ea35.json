{"ver":"0.1","info":{"id":"3sXcWM","date":"1584858379","viewed":53,"name":"a big smiley face","username":"betseyliu","description":"my very first shader toy","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float b) {\n    float d = length(uv - p);\n    float c = smoothstep(r, r-b, d);\n    \n    return c;\n}\n \n\nfloat Smiley(vec2 uv, vec2 p, float size) {\n    uv -= p;\n    uv /= size;\n\tfloat face = Circle(uv, vec2(0., 0.), .4, .005);\n    float eye_l = Circle(uv, vec2(-.13, 0.2), .07, .005); \n    float eye_r = Circle(uv, vec2(.13, 0.2), .07, .005);\n    \n    float mouth = max(Circle(uv, vec2(0.), .3, .005) - Circle(uv, vec2(.0, .1), .3, .005), .0);\n    face -= eye_l + eye_r + mouth;\n    \n    return face;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy;\n\n    uv -= .5;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    float face = Smiley(uv, vec2(0.0), 1.);\n    \n    vec3 col = vec3(1., 1., 0.) * face;\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}