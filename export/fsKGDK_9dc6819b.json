{"ver":"0.1","info":{"id":"fsKGDK","date":"1632205622","viewed":151,"name":"7/49","username":"tono","description":"Mourning the Brothers of the Four Legs\nIn line with Japan's 49th day culture\n\nhttps://twitter.com/i/events/1436311281674244100?s=20\n","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["49"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat bar(vec2 p,vec2 s){p=abs(p)-s;return max(p.x,p.y);}\nfloat bo(vec3 p,vec3 s){p=abs(p)-s;return max(p.x,max(p.y,p.z));}\nfloat pi = acos(-1.);\nvec2 pmod(vec2 p, float r){float a = atan(p.x,p.y)+pi/r;float n = (pi*2.)/r;return p*rot(-(floor(a/n)*n));}\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n#define TT(x,y) floor(x)+pow(fract(x),y)\nvec2 map(vec3 p)\n{\n    float o = 10.;\n    float id = 0.;\n    vec3 pp = p;\n    float r = random(floor(p.xz/.3));\n    id = r;\n    r *= 6.;\n    \n    p.xz=mod(p.xz,.3)-.15;\n    float s = tan(p.y/10. + r - iTime + sin(r + iTime) * 2.);\n    o=bar(p.xz,vec2(.1,.1)*s);\n    \n    float t=floor(iTime)+pow(fract(iTime),2.);\n    float shape = mix(length(pp)-3.4,bo(pp,vec3(3.)),clamp(sin(t),-.5,.5)+.5);\n    //shape = p.y*-1.+1.5;\n    pp.xz*=rot(iTime);\n    pp.xz = abs(pp.xz)-vec2(10.1);\n    float a = max(pp.x,pp.z);\n    t=TT(TT(iTime,2.)-a/2.,10.);\n    t=sign(sin(t)+.5);\n    o=max(t*o,shape);\n    return vec2(o,id);\n}\n\nvec2 march(vec3 cp , vec3 rd)\n{\n    float depth = 0.;\n    for(int i = 0 ; i< 99 ; i++)\n    {\n        vec3 rp = cp + rd * depth;\n        vec2 d = map(rp);\n        if(abs(d.x) < 0.001)\n        {\n            return vec2(depth,d.y);\n        }\n        depth += d.x;\n    }\n    return vec2(-depth , 0.);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\tvec3 cp = vec3(0.,-13.,3.);\n    cp.xz*=rot(iTime/10.);\n    vec3 target = vec3(0.);\n    \n    vec3 col = vec3(0.);\n    \n    vec3 cd = normalize(vec3(target - cp));\n    vec3 cs = normalize(cross(cd , vec3(0.,1.,0.)));\n    vec3 cu = normalize(cross(cd,cs));\n    \n    float fov = 2.5;\n    \n    vec3 rd = normalize(cd * fov + cs * p.x + cu * p.y);\n    \n    vec2 d = march(cp,rd);\n    if( d.x > 0.)\n    {\n        vec2 e = vec2(0.,0.01);\n        vec3 pos = cp + rd * d.x;\n        vec3 N = normalize(map(pos).x - vec3(map(pos - e.xyy).x , map(pos - e.yxy).x,map(pos - e.yyx).x));\n        col = N;\n        vec3 sun = normalize(vec3(2.,4.,8.));\n        //sun.xz *= rot(iTime);\n        float diff = max(0.,dot(-sun,N));\n        diff = mix(diff , 1.,.1);\n        float sp = max(0.,dot(rd,reflect(N,sun)));\n        sp = pow(sp,56.6) * 1.;\n        vec3 mat = vec3(1.) * max(sin(d.y)*10.,0.);\n        col = sp * mat + diff * mat;\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}