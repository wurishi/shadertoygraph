{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define INTENSITY 5.5\n#define GLOW 2.0\n\nvec2 blob(vec2 uv, vec2 speed, vec2 size, float time) {\n\tvec2 point = vec2(\n\t\t(sin(speed.x * time) * size.x),\n\t\t(cos(speed.y * time) * size.y)\n\t);\n\n\tfloat d = 1.0 / distance(uv, point);\n\td = pow(d / INTENSITY, GLOW);\n\t\n\t//if( d < 0.1 )\t\n\t//\treturn uv;\n\t\n\tvec2 v2 = normalize(uv - point) * clamp(d,0.1,0.7);\n\t\n\t\n\treturn uv - v2;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = -1.0 + 2.0 * (fragCoord.xy / iResolution.xy);\n\t\n\tfloat time = iTime * 0.75;\n\t\n\tvec2 read = blob(uv, vec2(3.7, 5.2), vec2(0.2, 0.2), time);\n\t\n\t\n\tvec4 pixel = texture(iChannel0, read);\n\t\n\t//if( blob < 0.1 ) pixel = vec4(pixel.r*0.5,pixel.g*0.5,pixel.b*0.5,1);\n\t\n\t\n\tfragColor = pixel;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MslGDM","date":"1372331423","viewed":218,"name":"Almost a lens","username":"deps","description":"This is almost a lens. Also, my first shader. Ever!\nAnd this is version 2 so it is even more like a lens.\nVersion 3: \"Det tar sig\" like the mordbrÃ¤nnaren said.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["lens","notreally"],"hasliked":0,"parentid":"","parentname":""}}