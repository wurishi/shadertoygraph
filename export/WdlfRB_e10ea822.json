{"ver":"0.1","info":{"id":"WdlfRB","date":"1601864846","viewed":77,"name":"Cloudy marble","username":"aberkson1","description":"not done yet","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cloudsmarbleplanet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define scale 10.0\n\n\nfloat random(vec2 st)\n{\n \treturn fract(sin(dot(st, vec2(12.43, 67.88)))*94436.3453);   \n}\n\nfloat noise(vec2 uv)\n{\n\tvec2 i = floor(uv);\n    vec2 f = fract(uv);\n    vec2 u = smoothstep(0.0, 1.0, f);\n    \n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    \n    return mix( mix(a, b, u.x),\n                mix(c, d, u.x), u.y);\n}\n\n\nmat2 rotate2d(float angle)\n{\n    return mat2(cos(angle), -sin(angle),\n                sin(angle),  cos(angle));\n}\n\nvec2 line(in vec2 uv, float b, float c)\n{\n \tvec2 f = fract(uv);\n    return smoothstep(b - c, b, f) - smoothstep(b, b + c, f);\n}\n\nfloat smoothLine(in vec2 uv)\n{\n    vec2 f = fract(uv);\n    vec2 u = smoothstep(0.0, 1.0, f);\n    float b1 = noise(uv - vec2(0.0, -1.0));\n    float b2 = noise(uv - vec2(0.0, 0.0));\n    float dist = (1.0 - abs(b2 - u.y)) * abs(b2 - u.y);\n    return  dist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec2 st = uv;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= scale;\n    uv = rotate2d(15.0 * 3.1415 / 180.0) * uv;\n   \n    \n    vec2 pos = vec2(uv.x + iTime, uv.y + iTime/5.0);\n    float pattern = line(pos, noise(pos), 0.07).y;\n    float colorPattern = smoothLine(pos);\n    \n    fragColor = vec4(vec3((colorPattern * 0.9) + pattern * 0.7, (colorPattern * 0.4) + pattern * 0.5, pattern * 0.1), 1.0);\n}","name":"Image","description":"","type":"image"}]}