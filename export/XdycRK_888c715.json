{"ver":"0.1","info":{"id":"XdycRK","date":"1522525784","viewed":221,"name":"feedback effect","username":"unnick","description":"guess why i made this, you guessed right! i made this because i was bored.","likes":10,"published":1,"flags":32,"usePreview":0,"tags":["2d","feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define TAU 6.283\n\nmat4 rotationMatrix(vec3 axis, float angle) {\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n                0.0,                                0.0,                                0.0,                                1.0);\n}\n\nvec2 pos2uv(vec2 pos) {\n  return (pos / 2.0 * min(iResolution.x, iResolution.y) + iResolution.xy / 2.0) / iResolution.xy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float s = sin(iTime * TAU / 10.0);\n    float c = cos(iTime * TAU / 10.0);\n    mat2 transform = mat2(c, -s, s, c) * 1.1;\n    \n    vec2 pos = (fragCoord.xy - iResolution.xy / 2.0) / min(iResolution.x, iResolution.y) * 2.0;\n    if(\n        fragCoord.x != clamp(fragCoord.x, 10.0, iResolution.x - 10.0)\n        || fragCoord.y != clamp(fragCoord.y, 10.0, iResolution.y - 10.0)\n    ) {\n      fragColor = texture(iChannel1, pos);\n    } else {\n      vec2 t = pos2uv(pos * transform + vec2(sin(iTime), cos(iTime*1.127)) * 0.5);\n      fragColor =\n          texture(iChannel0, fragCoord / iResolution.xy) * 0.01\n          + texture(iChannel0, t) * rotationMatrix(vec3(1.0), TAU/4.0) * 0.99;\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}