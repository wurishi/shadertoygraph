{"ver":"0.1","info":{"id":"XslcRX","date":"1489133290","viewed":97,"name":"bblble","username":"bytewave","description":"intersecting spheres","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["intersectingspheres"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float uniformRand(vec2 p,float seed)\n{ \n     return fract(9745.121*sin(dot (vec2(p.x,p.y),vec2(321.654,654.987)+seed)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t \n    vec2 uv = fragCoord / iResolution.y;\n    uv*=8.;\n    \n    float d = 0.;    \n    for(float x = 0.;x < 12.;x++)\n    {\n     \tfor(float y = 0.;y < 8.;y++)\n    \t{\n            vec2 pos = vec2(x,y);\n            float xRand = uniformRand(pos,54.);\n            float yRand = uniformRand(pos,-654.);\n            \n            vec2 p = pos*1.21 + vec2(xRand,yRand);\n            float size = 3. + xRand;\n            \n            float f = max((size - length(uv - p))/size,0.);\n            \n        \td = max(d,f*sin(x*y*iTime*0.03));\n    \t}   \n    }\n    \n\tfragColor = vec4(d,d,d,1.);\n}","name":"Image","description":"","type":"image"}]}