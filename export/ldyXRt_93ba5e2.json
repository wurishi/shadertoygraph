{"ver":"0.1","info":{"id":"ldyXRt","date":"1465951090","viewed":282,"name":"Emission Attenuation Shader","username":"Yoshimaster96","description":"This shader uses two parameters, emission and attenuation, to generate a shaded sphere.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["attenuation","shader","emission"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 emColor = vec4(0.0,0.0,0.0,1.0); //emission\nvec4 atColor = vec4(2.0,1.0,4.0,1.0); //attenuation\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = vec4(0.0);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv = (uv*4.0)-vec2(2.0);\n    uv *= vec2(iResolution.x/iResolution.y, 1.0);\n\tif(length(uv)<1.0)\n\t{\n\t\tfloat depth = 2.0*sqrt(1.0-pow(length(uv),2.0));\n\t\tvec3 nrm = vec3(uv,depth/2.0);\n\t\tfloat dist = distance(nrm,vec3(0.57735));\n\t\tvec4 emComp = emColor*log((2.0*atColor*depth)+vec4(1.0))/(2.0*atColor);\n\t\tvec4 inComp = exp(-atColor*dist);\n\t\tfragColor = inComp+emComp;\n\t}\n}","name":"Image","description":"","type":"image"}]}