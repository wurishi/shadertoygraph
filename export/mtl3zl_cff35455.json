{"ver":"0.1","info":{"id":"mtl3zl","date":"1672260009","viewed":585,"name":"OPEN AI CHAT GPT 3","username":"Effickx","description":"Fully generated with Open AI Chat GPT 3.","likes":4,"published":1,"flags":0,"usePreview":1,"tags":["rotozoomsinusdistoopenaichatgpt3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Rotozoom shader with sinusoidal distortion\n// by patriciogonzalezvivo\n// adapted from https://www.shadertoy.com/view/4t23Dh\n\n#define PI 3.14159265358979323846264\n\n// Rotate and zoom a texture\nvec2 rotateAndZoom(vec2 texCoord, float angle, float zoom) {\n  float s = sin(angle);\n  float c = cos(angle);\n  vec2 rotTexCoord = vec2(texCoord.x * c - texCoord.y * s, texCoord.x * s + texCoord.y * c);\n  rotTexCoord *= zoom;\n  return rotTexCoord;\n}\n\nvec2 addSinusoidalDistortion(vec2 texCoord, float frequency, float amplitude, float speed) {\n  // Vary the intensity of the distortion over time\n  float intensity = amplitude * sin(iTime * 2.0 * PI / 2.0);\n\n  texCoord.x += sin(texCoord.y * frequency + iTime * speed) * intensity;\n  texCoord.y += sin(texCoord.x * frequency + iTime * speed) * intensity;\n  return texCoord;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  // Normalized pixel coordinates (from -0.5 to 0.5)\n  vec2 uv = (fragCoord - 0.5 * iResolution.xy) / max(iResolution.x, iResolution.y);\n\n  // Time varying pixel color\n  vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n  // Rotate and zoom the texture\n  float angle = iTime * 0.9;\n  float zoom = 1.0 + sin(iTime * 0.5) * 0.5;\n  uv = rotateAndZoom(uv, angle, zoom);\n\n  // Add sinusoidal distortion to the texture coordinates\n  float frequency = 5.0;\n  float amplitude = 0.1;\n  float speed = 1.0;\n  uv = addSinusoidalDistortion(uv, frequency, amplitude, speed);\n\n  // Map the pixel color to the rotated, zoomed, and distorted texture\n  fragColor = vec4(texture(iChannel0, uv).rgb, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}