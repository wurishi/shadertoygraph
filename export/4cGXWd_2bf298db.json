{"ver":"0.1","info":{"id":"4cGXWd","date":"1715894061","viewed":71,"name":"Material Maker: Splines export","username":"RodzLabs","description":"Material Maker splines parameter export test","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["generated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Generated by Material Maker */\n\n#define SEED_VARIATION 0.0\n\n\n\nfloat dot2(vec2 x) {\n\treturn dot(x, x);\n}\n\nfloat rand(vec2 x) {\n    return fract(cos(mod(dot(x, vec2(13.9898, 8.141)), 3.14)) * 43758.5);\n}\n\nvec2 rand2(vec2 x) {\n    return fract(cos(mod(vec2(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t      dot(x, vec2(3.4562, 17.398))), vec2(3.14, 3.14))) * 43758.5);\n}\n\nvec3 rand3(vec2 x) {\n    return fract(cos(mod(vec3(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t\t  dot(x, vec2(3.4562, 17.398)),\n                              dot(x, vec2(13.254, 5.867))), vec3(3.14, 3.14, 3.14))) * 43758.5);\n}\nvec3 rgb2hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat param_rnd(float minimum, float maximum, float seed) {\n\treturn minimum+(maximum-minimum)*rand(vec2(seed));\n}\n\nfloat param_rndi(float minimum, float maximum, float seed) {\n\treturn floor(param_rnd(minimum, maximum + 1.0, seed));\n}\n\nconst vec4 p_o7203784238410_splines1_points[8] = vec4[]( vec4(0.767964423, 0.602849126, 0.010000000, 0.000000000), vec4(0.763753831, 0.469904125, 0.010000000, 0.000000000), vec4(0.579101443, 0.472643465, 0.010000000, 0.000000000), vec4(0.575584352, 0.606876552, 0.010000000, 0.000000000), vec4(0.575584352, 0.606876552, 0.010000000, 0.000000000), vec4(0.574376285, 0.730838120, 0.010000000, 0.000000000), vec4(0.764062285, 0.723405540, 0.010000000, 0.000000000), vec4(0.767964423, 0.602849126, 0.010000000, 0.000000000) );\nconst vec4 p_o7203784238410_color1 = vec4(0.392578125, 0.392578125, 0.392578125, 1.000000000);\nconst vec4 p_o7203784238410_splines2_points[8] = vec4[]( vec4(0.843052447, 0.608529389, 0.010000000, 0.000000000), vec4(0.848123133, 0.362831444, 0.010000000, 0.000000000), vec4(0.501602590, 0.358566940, 0.010000000, 0.000000000), vec4(0.496653557, 0.603945315, 0.010000000, 0.000000000), vec4(0.496653557, 0.603945315, 0.010000000, 0.000000000), vec4(0.496653557, 0.829323590, 0.010000000, 0.000000000), vec4(0.828417242, 0.834623218, 0.010000000, 0.000000000), vec4(0.843052447, 0.608529389, 0.010000000, 0.000000000) );\nconst vec4 p_o7203784238410_color2 = vec4(1.000000000, 1.000000000, 1.000000000, 1.000000000);\nconst vec4 p_o7203784238410_splines3_points[72] = vec4[]( vec4(0.482995450, 0.113179803, 0.010000000, 0.000000000), vec4(0.453954726, 0.141365707, 0.000000000, 0.000000000), vec4(0.476292610, 0.162260562, 0.010000000, 0.000000000), vec4(0.476292610, 0.162260562, 0.000045000, 0.000000000), vec4(0.476292610, 0.162260562, 0.000045000, 0.000000000), vec4(0.526093483, 0.202157468, 0.000076250, 0.000000000), vec4(0.553896725, 0.230417192, 0.000076250, 0.000000000), vec4(0.602934241, 0.265802652, 0.000045000, 0.000000000), vec4(0.600962818, 0.270960480, 0.000045000, 0.000000000), vec4(0.521708786, 0.271077663, 0.000045000, 0.000000000), vec4(0.287121981, 0.272718251, 0.000000000, 0.000000000), vec4(0.219013885, 0.270313919, 0.000031250, 0.000000000), vec4(0.219013885, 0.270313919, 0.000031250, 0.000000000), vec4(0.185300872, 0.272104114, 0.010000000, 0.000000000), vec4(0.153852239, 0.295654505, 0.010000000, 0.000000000), vec4(0.151539996, 0.326430291, 0.010000000, 0.000000000), vec4(0.151539996, 0.326430291, 0.010000000, 0.000000000), vec4(0.151539996, 0.361173719, 0.010000000, 0.000000000), vec4(0.188034505, 0.366914660, 0.010000000, 0.000000000), vec4(0.188034505, 0.366914660, 0.010000000, 0.000000000), vec4(0.191842049, 0.368103236, 0.010000000, 0.000000000), vec4(0.244995862, 0.369258761, 0.010000000, 0.000000000), vec4(0.393783540, 0.369111717, 0.010000000, 0.000000000), vec4(0.394097090, 0.369081616, 0.010000000, 0.000000000), vec4(0.394851178, 0.371187985, 0.010000000, 0.000000000), vec4(0.365488857, 0.394422144, 0.010000000, 0.000000000), vec4(0.046503790, 0.633916736, 0.010000000, 0.000000000), vec4(0.032663304, 0.650063992, 0.010000000, 0.000000000), vec4(0.032663304, 0.650063992, 0.010000000, 0.000000000), vec4(0.018822819, 0.666211247, 0.010000000, 0.000000000), vec4(0.000368841, 0.707732677, 0.010000000, 0.000000000), vec4(0.021129567, 0.730800152, 0.010000000, 0.000000000), vec4(0.021129567, 0.730800152, 0.010000000, 0.000000000), vec4(0.041890293, 0.753867626, 0.010000000, 0.000000000), vec4(0.078798249, 0.760787845, 0.010000000, 0.000000000), vec4(0.104172468, 0.742333889, 0.010000000, 0.000000000), vec4(0.104172468, 0.742333889, 0.010000000, 0.000000000), vec4(0.129546687, 0.723879933, 0.010000000, 0.000000000), vec4(0.270526201, 0.610772848, 0.010000000, 0.000000000), vec4(0.310326517, 0.578078866, 0.010000000, 0.000000000), vec4(0.312081009, 0.579241157, 0.010000000, 0.000000000), vec4(0.305122644, 0.623426735, 0.010000000, 0.000000000), vec4(0.318139970, 0.721953511, 0.010000000, 0.000000000), vec4(0.416501701, 0.809834242, 0.010000000, 0.000000000), vec4(0.416501701, 0.809834242, 0.010000000, 0.000000000), vec4(0.484225720, 0.873460233, 0.010000000, 0.000000000), vec4(0.690645516, 0.960220993, 0.010000000, 0.000000000), vec4(0.879597902, 0.809655130, 0.010000000, 0.000000000), vec4(0.879597902, 0.809655130, 0.010000000, 0.000000000), vec4(1.033231854, 0.679514408, 0.010000000, 0.000000000), vec4(1.017076492, 0.444649875, 0.010000000, 0.000000000), vec4(0.837718129, 0.320199162, 0.010000000, 0.000000000), vec4(0.837718129, 0.320199162, 0.010000000, 0.000000000), vec4(0.741574228, 0.246741444, 0.010000000, 0.000000000), vec4(0.603733778, 0.141222060, 0.010000000, 0.000000000), vec4(0.557614744, 0.105562575, 0.010000000, 0.000000000), vec4(0.557614744, 0.105562575, 0.010000000, 0.000000000), vec4(0.533412397, 0.091735467, 0.010000000, 0.000000000), vec4(0.498442233, 0.098886341, 0.010000000, 0.000000000), vec4(0.482995450, 0.113179803, 0.010000000, 0.000000000), vec4(0.602934241, 0.265802652, 0.010000000, 0.000000000), vec4(0.606252074, 0.268179417, 0.010000000, 0.000000000), vec4(0.605701029, 0.271060199, 0.010000000, 0.000000000), vec4(0.600962818, 0.270960480, 0.010000000, 0.000000000), vec4(0.310326517, 0.578078866, 0.010000000, 0.000000000), vec4(0.313085258, 0.575629830, 0.010000000, 0.000000000), vec4(0.312416136, 0.577802122, 0.010000000, 0.000000000), vec4(0.312081009, 0.579241157, 0.010000000, 0.000000000), vec4(0.394097090, 0.369081616, 0.010000000, 0.000000000), vec4(0.395232469, 0.369062394, 0.010000000, 0.000000000), vec4(0.395807981, 0.370608598, 0.010000000, 0.000000000), vec4(0.394851178, 0.371187985, 0.010000000, 0.000000000) );\nconst vec4 p_o7203784238410_color3 = vec4(1.000000000, 0.562500000, 0.000000000, 1.000000000);\n\n// #globals: splines\nvec2 distance_to_segment(vec2 p, vec3 b, vec3 a) {\n\tp  -= a.xy;\n\tb.xy -= a.xy;\n\tfloat h = dot(b.xy, b.xy);\n\tvec2  q = vec2(dot(p,vec2(b.y,-b.x)), dot(p,b.xy))/h;\n   \n\tq.x = abs(q.x);\n\t\n\tfloat cz = a.z-b.z;\n\tvec2  c = vec2(sqrt(h-cz*cz), cz);\n\t\n\tfloat k = c.x*q.y - c.y*q.x;\n\tfloat m = dot(c, q);\n\tfloat n = dot(q, q);\n\t\n\t\t if( k < 0.0 ) return vec2(sqrt(h*(n)) - a.z, 0.0);\n\telse if( k > c.x ) return vec2(sqrt(h*(n+1.0-2.0*q.y)) - b.z, 1.0);\n\t\t\t\t\t   return vec2(m\t\t\t\t\t   - a.z, k/c.x);\n}\nfloat distance_to_cubic_bezier_2(vec2 uv, vec4 a, vec4 b, vec4 c, vec4 d, float t0, float t1, float s) {\n\tfloat rv = 100000000000.0;\n\tt0 = clamp(t0, 0.0, 1.0);\n\tt1 = clamp(t1, 0.0, 1.0);\n\tfloat bt = t0;\n\n\tvec4 lp = d+t0*(c+t0*(b+t0*a));\n\tfor (float t = t0+s; t < t1+0.5*s; t += s) {\n\t\tvec4 p = d+t*(c+t*(b+t*a));\n\t\tvec2 dts = distance_to_segment(uv, lp.xyz, p.xyz);\n\t\tif (rv > dts.x) {\n\t\t\trv = dts.x;\n\t\t\tbt = t-s*p.y;\n\t\t}\n\t\tlp = p;\n\t}\n\treturn clamp(bt, 0.0, 1.0);\n}\nvec4 distance_to_cubic_bezier(vec2 uv, vec4 p0, vec4 p1, vec4 p2, vec4 p3) {\n\tfloat rv = 1000.0;\n\tvec4 a = p3-p0+3.0*(p1-p2);\n\tvec4 b = 3.0*(p0+p2-2.0*p1);\n\tvec4 c = 3.0*(p1-p0);\n\tvec4 d = p0;\n\tfloat t = distance_to_cubic_bezier_2(uv, a, b, c, d, 0.0, 1.0, 0.1);\n\tt = distance_to_cubic_bezier_2(uv, a, b, c, d, t-0.1, t+0.1, 0.01);\n\tt = distance_to_cubic_bezier_2(uv, a, b, c, d, t-0.01, t+0.01, 0.001);\n\tt = distance_to_cubic_bezier_2(uv, a, b, c, d, t-0.001, t+0.001, 0.0001);\n\tvec4 p = d+t*(c+t*(b+t*a));\n\tvec2 tangent = (3.0*a.xy*t+2.0*b.xy)*t+c.xy;\n\ttangent = vec2(tangent.y, -tangent.x);\n\treturn vec4(p.w, sign(dot(uv-p.xy, tangent))*length(p.xy-uv)/p.z, sign(dot(uv-p.xy, tangent))*length(p.xy-uv), 1.0);\n}\nvec4 o7203784238410_splines(vec2 uv, float _seed_variation_) {\n\tfloat closest;\n\n\tclosest = 1000.0;\n\tfor (int i = 0; i < p_o7203784238410_splines1_points.length(); i += 4) {\n\t\tvec4 d = distance_to_cubic_bezier(uv, p_o7203784238410_splines1_points[i], p_o7203784238410_splines1_points[i+1], p_o7203784238410_splines1_points[i+2], p_o7203784238410_splines1_points[i+3]);\n\t\tif (abs(d.z) < abs(closest)) {\n\t\t\tclosest = d.z;\n\t\t}\n\t}\n\tif (closest > 0.0) {\n\t\treturn p_o7203784238410_color1;\n\t}\n\n\tclosest = 1000.0;\n\tfor (int i = 0; i < p_o7203784238410_splines2_points.length(); i += 4) {\n\t\tvec4 d = distance_to_cubic_bezier(uv, p_o7203784238410_splines2_points[i], p_o7203784238410_splines2_points[i+1], p_o7203784238410_splines2_points[i+2], p_o7203784238410_splines2_points[i+3]);\n\t\tif (abs(d.z) < abs(closest)) {\n\t\t\tclosest = d.z;\n\t\t}\n\t}\n\tif (closest > 0.0) {\n\t\treturn p_o7203784238410_color2;\n\t}\n\n\tclosest = 1000.0;\n\tfor (int i = 0; i < p_o7203784238410_splines3_points.length(); i += 4) {\n\t\tvec4 d = distance_to_cubic_bezier(uv, p_o7203784238410_splines3_points[i], p_o7203784238410_splines3_points[i+1], p_o7203784238410_splines3_points[i+2], p_o7203784238410_splines3_points[i+3]);\n\t\tif (abs(d.z) < abs(closest)) {\n\t\t\tclosest = d.z;\n\t\t}\n\t}\n\tif (closest > 0.0) {\n\t\treturn p_o7203784238410_color3;\n\t}\n\n\treturn vec4(0.0);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nfloat minSize = min(iResolution.x, iResolution.y);\nfloat _seed_variation_ = SEED_VARIATION;\nvec2 UV = vec2(0.0, 1.0) + vec2(1.0, -1.0) * (fragCoord-0.5*(iResolution.xy-vec2(minSize)))/minSize;\n\n// #output0: splines\nvec4 o7203784238410_0_1_rgba = o7203784238410_splines(UV, _seed_variation_);\nfragColor = o7203784238410_0_1_rgba;\n}\n","name":"Image","description":"","type":"image"}]}