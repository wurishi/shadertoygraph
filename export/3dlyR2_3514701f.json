{"ver":"0.1","info":{"id":"3dlyR2","date":"1585173870","viewed":132,"name":"Spunky Sunrise","username":"wnu","description":"playing around with modulo","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["modulo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n#define S(v) smoothstep( 0., 50./R.y, v )\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord/iResolution.xy - vec2(0.5);\n    uv.x *= iResolution.x/iResolution.y;\n    //uv *= 10.;\n    vec2 norm = normalize(uv);\n    \n\n    float lin = abs(fract(iTime/3.)*2.-1.)-0.5;\n    \n    float dist = length(uv);\n    \n    float ac = (acos(sin(iTime/1.5)*uv.x/dist)/PI);\n    float mult =sin(iTime/4.)*40.;\n    float inc = 1.;\n    ac *= mult;\n    \n    \n    \n    float mac = 0.25-abs(mod(ac-0.5,inc)-0.5);\n    mac = S(mac);\n    \n    //mac = mod(ac,inc);\n    //252, 186, 3\n    //vec3 C = vec3(252.0,186.0,3.0)/255.0;\n    float back = 1.0-smoothstep(0.001,1.,mac);\n    \n    vec3 C = hsb2rgb(vec3(abs(sin(iTime)),0.5,0.5));\n    vec3 col = vec3(dist)*C;\n    col = vec3(mac)*C;\n    col = col + back*lin;\n    \n    \n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}