{"ver":"0.1","info":{"id":"fdGyzD","date":"1654490215","viewed":142,"name":"xorshift example and histogram","username":"ear7h","description":"I've used xorshift a few times but never bothered to actually examine it further. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["random","histogram","xorshift"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BUCKETS 100\n#define SAMPLES 2000\n\n// TODO: figure out why UINT_MAX doesn't work\n#define ALMOST_UINT_MAX (0x0fffffff)\n\nuint xorshift(inout uint x) {\n\tx ^= x << 13;\n\tx ^= x >> 17;\n\tx ^= x << 5;\n    return x;\n}\n\nfloat rand_uniform(inout uint seed) {\n\tuint x = xorshift(seed);\n    return fract(float(x) / float(ALMOST_UINT_MAX));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // example on top\n    if (uv.y > 0.5) {\n        float seedf = fract(sin(iTime * dot(uv, vec2(-42.9898, 78.233))) * 43758.5453);\n        uint seed = uint(seedf * float(ALMOST_UINT_MAX));\n        xorshift(seed);\n        \n        fragColor = vec4(vec3(rand_uniform(seed)),1.0);\n        return;\n    }\n    \n    // histogram\n    \n    // use same seed for all fragments at this point in time\n    float seedf = iTime * 1000.0;\n    uint seed = uint(seedf);\n    xorshift(seed);\n    \n    uint bucket = uint(uv.x * float(BUCKETS));\n    int bucket_count = 0;\n    \n    // take samples\n    for (int i = 0; i < SAMPLES; i++) {\n        uint x = uint(rand_uniform(seed) * float(BUCKETS));\n        if (x == bucket) {\n            bucket_count += 1;\n        }\n    }\n    \n    if (float(bucket_count) / float(SAMPLES) >= uv.y / float(BUCKETS) * 8.0) {\n        fragColor = vec4(vec3(1.0),1.0);\n    } else {\n        fragColor = vec4(vec3(0.0),1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}