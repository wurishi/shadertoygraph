{"ver":"0.1","info":{"id":"lctSD4","date":"1713959545","viewed":110,"name":"Rainbow Cyclone","username":"1Noxah","description":"Rainbow Cyclone","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["swirl","colors","star","rainbow","cyclone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    float time = iTime;\n\n    // Center the coordinates around the middle of the screen\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float angle = atan(uv.y, uv.x) + time * 0.5;\n    float radius = length(uv);\n    float swirl = sin(angle * 6.0 + time) * cos(angle * 6.0 - time);\n\n    // Swirl intensity and radius modification\n    radius += swirl * 0.2;\n\n    // Color gradient based on radius and angle\n    vec3 color = 0.5 + 0.5 * cos(time + uv.xyx + vec3(0, 2, 4));\n    color *= 0.3 / (0.3 + radius); \n\n    // Output the color with full opacity\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}