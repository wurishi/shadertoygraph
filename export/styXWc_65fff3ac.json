{"ver":"0.1","info":{"id":"styXWc","date":"1641428976","viewed":63,"name":"noise Clover","username":"Caineluo","description":"noise fract test","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2dnoiseclover"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord/iResolution.xy;\n    coord.x *= iResolution.x / iResolution.y;\n    \n    coord *= 2.0;\n    coord = fract(coord);\n    \n    vec2 uv = coord - vec2(0.5,0.5);\n    uv *= noise(uv * 109.);\n\n    vec3 col = 0.5 + 0.5*cos(iTime + uv.xyx + vec3(0,2,4));\n    \n    vec3 final = mix(col,vec3(random(uv)),vec3(0.3,0.3,0.3));\n    \n    float r = 0.2 + 0.1 * cos(atan(uv.x,uv.y) * 10.);\n    \n    final *= smoothstep(r,r+0.1,length(uv += cos(iTime / 2.)));\n   \n    fragColor = vec4(final,1.0);\n}","name":"Image","description":"","type":"image"}]}