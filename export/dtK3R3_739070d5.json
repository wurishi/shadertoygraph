{"ver":"0.1","info":{"id":"dtK3R3","date":"1684400843","viewed":91,"name":"baby's first voronoi","username":"bward194","description":"some code used from https://thebookofshaders.com/12/ and other shaders sdbfiyhsdabfisdh","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi acos(-1.)\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ((-iResolution.xy + 2.0*fragCoord.xy)/iResolution.y)*vec2(1.5,1.5);\nvec2 ouv=uv;\n    //uv-=normalize(uv)*sqrt(.1)/pow(sqrt(length(uv)-.1),2.001);\nuv/=pow(sqrt(dot(uv,uv)-0.00),4.001);\nfloat mind=10.;\nvec2 minp;\nvec2 a=floor(uv*3.);\nvec2 e=fract(uv*3.);\nfor (int i=-1; i<=1;i++) {\nfor (int j=-1; j<=1; j++){\nvec2 neighbour=vec2(float(j),float(i));\nvec2 point=random2(a+neighbour);\npoint = 0.5 + 0.5*cos(iTime + 6.2831*point);\nfloat dist=length(neighbour+point-e);\nif (dist<mind){\nmind=dist;\nminp=point;\n}}\n}\n    // Time varying pixel color\nfloat eeee=(.7+1.-mind*.3)*dot(minp,vec2(.3,.5));\n    vec3 col = round(pow(.5+ .5*cos(eeee*pi*2.+vec3(0.,pi/2.,pi)),vec3(500.)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}