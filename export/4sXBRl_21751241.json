{"ver":"0.1","info":{"id":"4sXBRl","date":"1497378634","viewed":343,"name":"Simple Kaleidoscope by Teflo","username":"Teflo","description":"I didn't know how a kaleidoscope shader worked, so this was my playground to test things out. And this is my result. Enjoy :)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy - iResolution.xy * 0.5;\n \t\n    vec2 offset = vec2(iTime, iTime) * -4.0;\n    \n    float zoom = 1.0 + sin(iTime * 0.01) * 0.5;\n    \n    float r = length(p);\n    float angle = atan(p.y, p.x);\n    \n    float slices = 6.0 + sin(iTime * 0.01) * 2.0;\n    float slice = 6.28 / slices;\n    \n    \n    \n    angle = mod(angle, slice);\n    angle = abs(angle - 0.5 * slice);\n    angle += iTime * 0.1;\n    \n    p = vec2(cos(angle), sin(angle)) * r;\n    \n    fragColor = texture(iChannel0, (p + offset) / iResolution.xy * zoom);\n    \n    angle *= -1.0;\n    \n    p = vec2(cos(angle), sin(angle)) * r;\n    \n    fragColor += texture(iChannel0, (p + offset) / iResolution.xy * zoom) * 0.5;\n}","name":"Image","description":"","type":"image"}]}