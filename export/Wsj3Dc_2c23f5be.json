{"ver":"0.1","info":{"id":"Wsj3Dc","date":"1550191711","viewed":127,"name":"Mandelbrot unfolding","username":"Saturos","description":"Continuum between powers 1 to 5. Mouse x and y adjust max iterations and threshold value.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","math","mandelbrot","dynamics","complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define cplx vec2\n\ncplx c_realpow(cplx z, float n) {\n    float r = pow(length(z), n);\n    float ntheta = n*atan(z.y,z.x);\n    return r*cplx(cos(ntheta),sin(ntheta));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float st = 2.*(sin(iTime/2.-1.57) + 1.5);\n    vec2 m = 1. - iMouse.xy/iResolution.xy;\n    cplx p = 12./(st+1.)*(cplx(fragCoord/iResolution.yy)+cplx(-1.2,-.5));\n\n    int maxIter = int(25.*m.x);\n    float thresh = 3.*m.y;\n    \n    cplx z = cplx(.000001, 0.);\n    int i = 0;\n    while (i<maxIter) {\n        z = c_realpow(z, st) + p;\n        if (length(z) > thresh) break;\n        i++;\n    }\n    float c = 1. - float(i)/float(maxIter);\n    fragColor = vec4(c,c,c,1.);\n}","name":"Image","description":"","type":"image"}]}