{"ver":"0.1","info":{"id":"Xt23RV","date":"1430536409","viewed":162,"name":"wave iterate","username":"pixelbeast","description":"Sampling wave with iterative fold,rot2d,and scale. Wait 5s for start...","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["waveit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Iain Melvin 2015\n// comment these to get the basic effect:\n#define RADIAL\n#define REFLECT\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n#ifdef REFLECT\n\tuv=abs(2.0*(uv-0.5));\n#endif\n#ifdef RADIAL\n    float theta = 1.0*(1.0/(3.14159/2.0))*atan(uv.x,uv.y);\n    float r = length(uv);\n    uv = vec2(theta,r);\t\n#endif\n    \n    const int N=10;\n    float t=1.2; //uv.y*1.2; // rotation angle\n    //float t=1.0-iMouse.x; \n    const float sc=1.2;\n\n    float s = 0.0;\n    vec2 av = uv;                      //start with uv posiiton\n    for (int i=0;i<N;i++){\n        av.x=1.2-uv.x;                 //hmm this was a bug, but seems to be important to effect\n        av.x=av.x*cos(t)-av.y*sin(t);  //rotate\n        av.y=av.x*sin(t)+av.y*cos(t); \n        av *= sc;                      // scale\n        vec4 t1 = texture(iChannel0, vec2(av.x,0.261) )-0.5; // sample\n        s=s+t1[0];                     // accumulate\n    }\n    s=s/float(N);\n\n    float y = s*2.0;\n    fragColor = vec4( sin(y*3.141*2.5), sin(y*3.141*2.0),sin(y*3.141*1.0),1.0);\n}","name":"","description":"","type":"image"}]}