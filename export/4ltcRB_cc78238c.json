{"ver":"0.1","info":{"id":"4ltcRB","date":"1686574783","viewed":144,"name":"FBM Fog Effect","username":"MartinRGB","description":"Fog Test","likes":9,"published":1,"flags":0,"usePreview":1,"tags":["fogfbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision highp float;\n#endif\n\n#define u_resolution iResolution\n#define u_mouse iMouse\n#define u_time iTime\n\n#define NUM_OCTAVES 8\n#define mTexture texture(iChannel0,_st/300.).x\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(1.5), sin(1.5),\n                    -sin(1.5), cos(1.50));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * mTexture;\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvec4 mainEffect(in vec2 fragCoord) {\n    vec2 st = gl_FragCoord.xy/u_resolution.y*4.;\n    vec3 color = vec3(0.0);\n\n    vec2 q = vec2(0.);\n    q.x = fbm( st + 0.00*u_time);\n    q.y = fbm( st + vec2(1.0));\n\n    vec2 r = vec2(0.);\n    r.x = fbm( st + 1.0*q + vec2(0.910,0.990)+ 0.15*u_time );\n    r.y = fbm( st + 1.0*q + vec2(0.560,-0.160)+ 0.022*u_time);\n\n    float f = fbm(st+r);\n\n    color = mix(vec3(st.x,cos(u_time/10.),sin(u_time/10.)),\n                vec3(st.y,sin(u_time/10.),sin(u_time/10.)*cos(u_time/10.)),\n                clamp((f*f)*4.0,0.0,1.0));\n\n    color = mix(color,\n                vec3(0.000,0.000,0.590),\n                clamp(length(q),.0,1.0));\n\n    color = mix(color,\n                vec3(0.666667,1,1),\n                clamp(length(r.x),0.0,1.0));\n\n    vec4 mColor = vec4((f*f*f+.6*f*f+.5*f)*color,1.);\n    return mColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n    // Output to screen\n    fragColor = mainEffect(fragCoord);\n}","name":"Image","description":"","type":"image"}]}