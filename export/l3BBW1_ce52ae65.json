{"ver":"0.1","info":{"id":"l3BBW1","date":"1729383805","viewed":49,"name":"Fire Circle Particle Emitter","username":"Shoozes","description":"Circles of fire.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fire","particle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Emit Fire Circles\n#define PARTICLES_NUM 16\n#define EMITT_SPEED 0.5\n\nfloat hash(vec2 p) { return fract(sin(dot(p, vec2(127.1, 311.7))) * 43758.5453); }\n\nvec3 rnd1(int seed) {\n    vec2 s = vec2(seed) * 12.9898;\n    return vec3(hash(s), hash(s + 100.0), hash(s + 200.0)) - 0.5;\n}\n\nvec3 centralCircle(vec2 uv, vec2 c, float t) {\n    float d = distance(uv, c);\n    float f = 0.08 + 0.05 * sin(t * 3.0);\n    float g = smoothstep(f, f - 0.05, d);\n    float a = 0.6 + 0.4 * cos(t * 2.0);\n    return vec3(0.9, 0.5, 0.2) * g * a * 2.0;\n}\n\nvec3 emitCircle(int i, vec2 uv, vec2 c, float t) {\n    vec2 dir = normalize(rnd1(i).rg);\n    float lt = 1.75, e = mod(t + rnd1(i).b * lt, lt);\n    vec2 p = c + dir * EMITT_SPEED * e;\n    float d = distance(uv, p);\n    float g = smoothstep(0.0, 0.1, 0.1 - d) * 0.6 + smoothstep(0.0, 0.2, 0.2 - d) * 0.4;\n    float a = smoothstep(lt, lt - 1.0, e);\n    return vec3(0.9, 0.5, 0.2) * g * a * 2.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 rgb = centralCircle(uv / 4.0, vec2(0.0), iTime);\n    for (int i = 0; i < PARTICLES_NUM; i++) rgb += emitCircle(i, uv, vec2(0.0), iTime);\n    fragColor = vec4(pow(rgb, vec3(0.4545)), 1.0);\n}","name":"Image","description":"","type":"image"}]}