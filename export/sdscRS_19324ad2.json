{"ver":"0.1","info":{"id":"sdscRS","date":"1643465499","viewed":118,"name":"RCube","username":"Proger","description":"flas","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["12"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int vertC = 20;\nvec3 vertics[vertC] = vec3[vertC](\n    vec3(0,0,0),\n    vec3(0,1,0),\n    vec3(0,0,1),\n    vec3(1,0,0),\n    vec3(1,1,0),\n    vec3(0,1,1),\n    vec3(1,0,1),\n    vec3(1,1,1),\n    vec3(0,0.5,0),\n    vec3(0,0,0.5),\n    vec3(0.5,0,0),\n    vec3(1,0.5,0),\n    vec3(1,0,0.5),\n    vec3(0.5,0,1),\n    vec3(1,1,0.5),\n    vec3(1,0.5,1),\n    vec3(0.5,1,1),\n    vec3(0,1,0.5),\n    vec3(0.5,1,0),\n    vec3(0,0.5,1)\n);\nmat2 mrot(float a){\n float c = cos(a);\n float s = sin(a);\n return mat2(c,-s,s,c);\n}\nvec2 getUV(vec3 vertic){\n    vec2 mp = ((iMouse.xy-.5*iResolution.xy) / iResolution.y);\n    vec3 rt = vertic;\n    rt += vec3(mp.x*5.,mp.y*5.-0.5,5);\n    vec2 ic = rt.xy / vec2(rt.z);\n    return ic;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ((fragCoord.xy-.5*iResolution.xy) / iResolution.y);\n    vec3 col = vec3(0);\n    for(int i = 0; i < vertC; i++){\n        vertics[i].xz = (vertics[i].xz-0.5)*mrot(iTime);\n        //if(length(uv - getUV(vertics[i])) < 0.004) col = vec3(1);\n        col += vec3(0.01 / length(uv - getUV(vertics[i])))*vec3(1.-vertics[i].x,vertics[i].y,0)/3.;\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}