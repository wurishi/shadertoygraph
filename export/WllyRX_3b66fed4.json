{"ver":"0.1","info":{"id":"WllyRX","date":"1592613730","viewed":60,"name":"angle noise for santi","username":"noc","description":"noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["anglenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (vec2 st) {\n    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat random (float p) {\n    return random(vec2(p));\n}\nvec2 rotate(vec2 v, float a) {\n    float s = sin(a);\n    float c = cos(a);\n    mat2 m = mat2(c, -s, s, c);\n    return m * v;\n}\n\n\nfloat box(vec2 st, float rotation){\n    // bottom-left\n    \n    st = rotate(st-0.5,rotation)+0.5;\n    \n    float pct = smoothstep(0.5,0.51,st.y);\n    \n    return pct;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float PI = 3.14;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    \n\tuv*=20.;\n    vec2 iuv = floor(uv);\n    uv = fract(uv);\n    // Output to screen\n    float angle= (floor(random(iuv)*4.)* PI / 2. + PI/4.);\n    \n    col = vec3(box(uv,angle))*(angle/(PI*2.));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}