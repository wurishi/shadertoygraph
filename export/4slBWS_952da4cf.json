{"ver":"0.1","info":{"id":"4slBWS","date":"1497891066","viewed":179,"name":"Normal Map 2d","username":"sebastianomorando","description":"Normal Map 2D test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","normalmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 LightColor = vec4(1.0, 1.0, 1.0, 0.6);      //light RGBA -- alpha is intensity\nvec4 AmbientColor = vec4(1.0, 1.0, 1.0, 0.5);    //ambient RGBA -- alpha is intensity\nvec3 Falloff = vec3(0.05, 0.05, 0.05);         //attenuation coefficients\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 DiffuseColor = texture(iChannel0, uv);\n    vec3 NormalMap = texture(iChannel1, uv).rgb;\n    \n    vec3 LightDir = vec3(iMouse.xy / iResolution.xy, 0.01);\n    LightDir.x *= iResolution.x / iResolution.y;\n    \n    \n    float D = length(LightDir);\n    \n    vec3 N = normalize(NormalMap * 2.0 - 1.0);\n    vec3 L = LightDir;\n    \n    vec3 Diffuse = (LightColor.rgb * LightColor.a) * max(dot(N, L), 0.0);\n    \n    vec3 Ambient = AmbientColor.rgb * AmbientColor.a;\n    \n    float Attenuation = 1.0 / ( Falloff.x + (Falloff.y*D) + (Falloff.z*D*D) );\n    \n    vec3 Intensity = Ambient + Diffuse * Attenuation;\n    vec3 FinalColor = DiffuseColor.rgb * Intensity;\n    \n    //gl_FragColor = vColor * vec4(FinalColor, DiffuseColor.a);\n\t\n    fragColor = vec4(FinalColor, DiffuseColor.a);\n}","name":"Image","description":"","type":"image"}]}