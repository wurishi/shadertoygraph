{"ver":"0.1","info":{"id":"lsKfWW","date":"1528931016","viewed":528,"name":"Repro MXJMyN","username":"clintolibre","description":"repro https://codepen.io/Veega/full/MXJMyN/","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["repro"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Gradient\n    \n    //Blue corner gradient from bottom right, weakened with a minimum\n    float blue = ((uv.x + 1.0 - uv.y-.1)*.22)+.2;\n    //Red corner gradient from top left, weakened with a minimum\n    float red = ((1.0-uv.x + uv.y-.1)*.3)+.3;\n    //constant green to produce a less harsh \"tinge\" for red and blue\n    float green = .25;\n    //initial red to blue gradient\n\tvec3 col = vec3(red, green, blue);\n    //creating \"chunked\" variable that we feed into the random number generator\n    \n    //Random Checkerboard\n    \n    //we adjust this random number to alternate between 0 and 2 pi, the frequency of sign\n    float fragCoordBlocks = rand(floor(fragCoord/25.5))*(3.14159265359*2.0);\n    //The variance function alternates between -1 and 1 with sin\n    //It does this at three times the growth rate of iTime\n    //we add a random offset to the frequency\n\tfloat variance = sin(iTime*2.2+fragCoordBlocks);\n    // we take our original gradient, adjust our variance to center on 0, and reduce its magnitude\n    col = col + ((variance-.5)*.023);\n    \n    //Output our final calculated color\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}