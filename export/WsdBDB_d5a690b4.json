{"ver":"0.1","info":{"id":"WsdBDB","date":"1605905093","viewed":301,"name":"Colour streamers","username":"FreeFull","description":"An experiment with feedback buffers","likes":7,"published":3,"flags":32,"usePreview":0,"tags":["2d","feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 col, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = uv*2.0 - 1.0;\n\n\n    uv2.x += sin(uv.y*130.0)/10.0;\n    uv2.y += sin(uv.x*130.0)/10.0;\n    uv2 *= mat2(cos(0.3), -sin(0.3), sin(0.3), cos(0.3));\n    \n    if(iFrame == 0) {\n        col = texture(iChannel1, uv);\n        return;\n    } else if (length(uv2*vec2(1, iResolution.y/iResolution.x)) < 0.1) {\n        col = texture(iChannel1, uv + vec2(iTime/10.2, iTime/24.53));\n        return;\n    }\n\n    col = texture(iChannel0, uv - uv2/150.0)*0.998;\n}","name":"Buffer A","description":"","type":"buffer"}]}