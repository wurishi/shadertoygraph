{"ver":"0.1","info":{"id":"MlBSWt","date":"1447263326","viewed":301,"name":"LineSegments","username":"jt","description":"Bouncing line segments (re-creating the classic screensaver as shader).","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["linesegments"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Line Segments (bouncing) \"screensaver\" written 2015 by Jakob Thomsen\n\n// mirror/bounce inside -1,+1\nvec2 mirror(vec2 pos)\n{\n    return (2.0 * abs(2.0 * fract(pos) - 1.0) - 1.0);\n}\n\nfloat PointLineAlong2d(vec2 a, vec2 n, vec2 p)\n{\n    return dot(p - a, n) / dot(n, n);\n}\n\nfloat PointLineDist2d(vec2 a, vec2 n, vec2 p)\n{\n    //return length(p - (a + n * dot(p - a, n) / dot(n, n)));\n    return length(p - (a + n * PointLineAlong2d(a, n, p)));\n}\n\nfloat PointLineSegDist2d(vec2 a, vec2 n, vec2 p)\n{\n    float q = PointLineAlong2d(a, n, p);\n    return length(p - (a + n * clamp(q, 0., 1.)));\n}\n\nvoid mainImage( out vec4 o, in vec2 I )\n{\n    vec2 speed0 = vec2(0.0432, 0.0123);\n    vec2 speed1 = vec2(0.0257, 0.0332);\n    I = 2. * I / iResolution.xy - 1.;\n    o -= o;\n    const float n = 20.0;\n    for(float i = 0.0; i < n; i++)\n    {\n    \tvec2 a = mirror((iTime - i * .2) * speed0);\n    \tvec2 b = mirror((iTime - i * .2) * speed1);\n    \tfloat d = PointLineSegDist2d(a, b - a, I);\n\t\to = max(o, vec4(1.0 - smoothstep(0.0, 0.01, d))); // lines\n        //o = max(o, vec4(pow(1.0 - d, 17.0))); // glow\n        //o = mix(max(o, vec4(1.0 - smoothstep(0.0, 0.01, d))), max(o, vec4(pow(1.0 - d, 17.0))), 0.5 + 0.5 * sin(iTime)); // blinking\n    }\n}\n","name":"","description":"","type":"image"}]}