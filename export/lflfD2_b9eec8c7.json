{"ver":"0.1","info":{"id":"lflfD2","date":"1724411238","viewed":43,"name":"Colour_Changing_Rift","username":"Gopherknee","description":"A multi-colour thing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rift"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nMade by Gopherknee\nCan be mmodified if anyone wants\nPlease don't steal, change it first\n*/\n\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise2d(vec2 v) {\n    const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439);\n    vec2 i  = floor(v + dot(v, C.yy));\n    vec2 x0 = v - i + dot(i, C.xx);\n    vec2 i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i);\n    vec3 p = permute(permute(i.y + vec3(0.0, i1.y, 1.0)) + i.x + vec3(0.0, i1.x, 1.0));\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m*m*m;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * (a0*a0 + h*h);\n    vec3 g;\n    g.x = a0.x * x0.x + h.x * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat snoise3d(vec3 uv, float res) {\n    vec3 s = vec3(1e0, 1e2, 1e3);\n    uv *= res;\n    vec3 uv0 = floor(mod(uv, res))*s, uv1 = floor(mod(uv+1., res))*s;\n    vec3 f = fract(uv); f = f*f*(3.0-2.0*f);\n    vec4 v = vec4(uv0.x+uv0.y+uv0.z, uv1.x+uv0.y+uv0.z, uv0.x+uv1.y+uv0.z, uv1.x+uv1.y+uv0.z);\n    vec4 r = fract(sin(v*1e-1)*1e3);\n    float r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n    r = fract(sin((v + uv1.z - uv0.z)*1e-1)*1e3);\n    float r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n    return mix(r0, r1, f.z)*2.-1.;\n}\n\nvec3 fireColour(float t) {\n    vec3 colours[5] = vec3[5](vec3(1,.5,0), vec3(1,0,0), vec3(.5,0,1), vec3(0,.5,1), vec3(1,.5,0));\n    t = fract(t) * 5.0;\n    int i = int(t);\n    return mix(colours[i], colours[(i + 1) % 5], smoothstep(0., 1., fract(t)));\n}\n\nvoid mainImage(out vec4 fragColour, in vec2 fragCoord) {\n    vec2 p = (fragCoord.xy / iResolution.xy - 0.5) * vec2(iResolution.x/iResolution.y, 1.0);\n    float explosionFactor = sin(iTime) * 0.5 + 0.5;\n    float radius = 0.3 + explosionFactor * 0.2;\n    float colour = 3.0 - (3. * length(2. * p) / radius);\n    vec3 coord = vec3(atan(p.x,p.y)/6.2832+.5, length(p)*.4, .5);\n    for(int i = 1; i <= 7; i++)\n        colour += (1.5 / pow(2.0, float(i))) * snoise3d(coord + vec3(0.,-iTime*.05, iTime*.01), pow(2.0, float(i))*16.);\n    float edgeSoftness = 0.1;\n    colour *= 1.0 - smoothstep(radius - edgeSoftness, radius, length(p));\n    colour = pow(max(colour, 0.0), 1.5);\n    float noise = snoise2d(fragCoord.xy / iResolution.xy * 5.0 + iTime * 0.1) * 0.05;\n    fragColour = vec4(fireColour(iTime * 0.1) * colour + noise, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}