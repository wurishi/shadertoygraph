{"ver":"0.1","info":{"id":"MXSyRz","date":"1726840565","viewed":34,"name":"Blur Aberrate","username":"bogdanmikh","description":"Blur Aberrate","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distortion = 0.01;      // the bias of the barrel distortion\nconst float iterations = 20.0;  // how many samples to use for edge blur\nfloat strength = 0.1;      // how much edge blur is applied (to obscure the r, g, b separation)\nfloat separation = 0.65;      // how much to separate the r, g and b\n\nvec4 Aberrate(sampler2D source, vec2 texuv, vec2 squareUv, float amount) {\n    return texture(source, 0.5 + texuv / sqrt(1.0 + amount * dot(texuv, squareUv)));\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    vec2 v_TexCoordOut = fragCoord.xy / iResolution.xy;        \n    vec2 squareUv = v_TexCoordOut - 0.5;\n    vec2 uv = v_TexCoordOut - 0.5;\n  \n    squareUv.x *= 0.3; // change radius\n    squareUv.y *= 0.3; // change radius\n    \n    vec4 A = vec4(0, 0, 0, 1);\n    \n    for (float i = -iterations; i < iterations; i++) {\n        A.r += Aberrate(iChannel0, uv, squareUv, i * strength + (distortion + separation)).r;       \n        A.g += Aberrate(iChannel0, uv, squareUv, i * strength + distortion).g;\n        A.b += Aberrate(iChannel0, uv, squareUv, i * strength + (distortion - separation)).b;\n    }\n    \n    A.rgb /= iterations * 2.0;\n        \n   // vec4 originalColor = texture(iChannel0, v_TexCoordOut);\n    fragColor = A;    \n}","name":"Image","description":"","type":"image"}]}