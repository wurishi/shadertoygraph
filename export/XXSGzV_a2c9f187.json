{"ver":"0.1","info":{"id":"XXSGzV","date":"1708616928","viewed":94,"name":"IZG: Dithering","username":"dormon","description":"Simple dithering effect using intensity and color.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["dithering","colorreduction"],"hasliked":0,"parentid":"cddGRX","parentname":"Hatching Effect"},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 getPixel(ivec2 pix){\n    vec2 coord = (vec2(pix)+vec2(.5)) / iResolution.xy;\n    return texture(iChannel0,coord).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    int kernel[] = int[](\n        1, 9, 3,11,\n       13, 5,15, 7,\n        4,12, 2,10,\n       16, 8,14, 6\n    );\n    \n    ivec2 pixCoord = ivec2(fragCoord.xy);\n    \n    ivec2 kernelCoord = pixCoord % ivec2(4,4);\n    \n    float threshold = float(kernel[kernelCoord.y*4+kernelCoord.x]) / 16.f;\n    \n    vec3 color = getPixel(pixCoord);\n    \n    float intensity = dot(color,vec3(0.299f,0.587f,0.114f));\n    \n    vec3  ditheredColor = vec3(greaterThan(color,vec3(threshold)));\n    float ditheredIntensity = float(intensity > threshold);\n    \n    \n    float right = iMouse.x*3.f - iResolution.x/2.;\n    float left = right - iResolution.x;\n    if(fragCoord.x > right)\n        fragColor = vec4(color,1.f);\n    else if(fragCoord.x > left)\n        fragColor = vec4(vec3(ditheredIntensity),1.f);\n    else\n        fragColor = vec4(ditheredColor,1.f);\n      \n}","name":"Image","description":"","type":"image"}]}