{"ver":"0.1","info":{"id":"WtjGRV","date":"1560270397","viewed":78,"name":"Nicknaking/RaymarchV1","username":"Nicknakin","description":"Ray marching","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphereDist(vec3 p, float r){\n    vec3 q = fract(p)*2.0-1.0;\n    return length(q)-r;\n}\n\nfloat marchRay(vec3 o, vec3 r){\n \tfloat t = 0.0;\n    for(int i = 0; i < 512; i++){\n\t\tvec3 p = o+r*t;\n        float d = sphereDist(p, 0.25f);\n        t += d*0.25;\n    }\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy*2.0-1.0;\n\t\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.0));\n    float theta = iTime/10.0;\n    r.xy *= mat2(cos(theta), sin(theta), -sin(theta), cos(theta));\n    r.xz *= mat2(cos(theta), sin(theta), -sin(theta), cos(theta));\n    \n    vec3 o = vec3(0.0,0.0, -iTime);\n    \n    float t = marchRay(o, r);\n    \n    float fog = 1.0/(1.0+t*t*0.01);\n    vec3 fc = vec3(fog);\n\n    fragColor = vec4(fc, 1.0);\n}","name":"Image","description":"","type":"image"}]}