{"ver":"0.1","info":{"id":"4fScDz","date":"1722178465","viewed":28,"name":"SSS Logo","username":"nextrix","description":"sss logo lmao","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["logo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 uv, float a) {\n    //uv -= 0.5;\n    uv.x *= aspect;\n    uv *= r2d(radians(a));\n    uv.x /= aspect;\n    //uv += 0.5;\n    return uv;\n}\n\nfloat line(vec2 uv, vec2 move, float len, float a) {\n    uv = rotate(uv+move, a);\n    float dist = length(uv - vec2(clamp(uv.x, -len, len), 0.));\n    return smoothstep(.02, 0., dist);\n}\n\nfloat top( in vec2 uv ) {\n\n    // rightear\n    float shortedge = line(uv, vec2(-.188,.0256), .001, -35.);\n    float shorttojaw = line(uv, vec2(-0.063,.188), .07, -35.);\n    float righteartojaw = line(uv, vec2(-.127,.03), .078, 40.);\n    \n    // midrightear\n    float shortmidedge = line(uv, vec2(-0.066,.095), .001, 40.);\n    float midtojaw = line(uv, vec2(-.155,.23), .03, 40.);\n    \n    // leftear\n    float longedge = line(uv, vec2(.16,.06), .035, 35.);\n    float longtojaw = line(uv, vec2(.034,.225), .034, 35.);\n    float lefteartojaw = line(uv, vec2(.09,-.03), .044, -40.);\n    \n    float dist = max(shortedge, shorttojaw);\n    dist = max(dist, righteartojaw);\n    \n    dist = max(dist, shortmidedge);\n    dist = max(dist, midtojaw);\n    \n    dist = max(dist, longedge);\n    dist = max(dist, longtojaw);\n    dist = max(dist, lefteartojaw);\n    \n    uv.x = -abs(uv.x)+.06; // mirror\n    \n    float earleft1 = line(uv, vec2(0.135,-0.135), .075, 90.);\n    float earleft2 = line(uv, vec2(0.065,-0.185), .08, 40.);\n    float midl = line(uv, vec2(-.05,-.088), .045, 0.);\n    float side = line(uv, vec2(.0,.0), .04, 90.);\n    \n    dist = max(dist, earleft1);\n    dist = max(dist, earleft2);\n    dist = max(dist, midl);\n    dist = max(dist, side);\n    \n    return dist;\n}\n\nfloat jaw(in vec2 uv) {\n\n    float jawtoleftmid = line(uv, vec2(.124,.18), .075, -40.);\n    float jawtoleftear = line(uv, vec2(.188,.118), .001, -40.);\n    \n    float dist = max(jawtoleftear, jawtoleftmid);\n    \n    uv.x = -abs(uv.x);\n    vec2 mewing = uv;\n    \n    mewing.y += sin(mewing.x * 16.) * 0.03;\n    \n    float side = line(uv, vec2(0.195,.2), .03, 90.);\n    float slant = line(mewing, vec2(0.099,.40), .109, 38.);\n    float center = line(uv, vec2(0.,0.3954), .065, 90.);\n    \n    dist = max(dist, side);\n    dist = max(dist, slant);\n    dist = max(dist, center);\n    \n    return dist;\n}\n\nfloat ronnyjlistenup(in vec2 uv) {\n    float dist = 0.;\n    \n    uv.y -= .1;\n    uv.y *= 1.04;\n    uv.x *= 1.2;\n    \n    \n    float Top = top(uv);\n    dist = max(dist, Top);\n    \n    float Jaw = jaw(uv);\n    dist = smoothstep(.0, .1, max(dist, Jaw));\n    // rotval\n    \n    return round(dist);\n}\n\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec2 uv = I/R.xy-.5;\n    \n    vec2 baruv = (uv)*1.;\n    baruv = (abs(baruv));\n    \n    uv = rotate(uv, rotval);\n    \n    \n    vec3 col = vec3(0,0,0); // texture(iChannel0, uv);\n    \n    \n    \n    float dist = ronnyjlistenup(uv);\n    \n    \n    \n    //if (max(baruv.x/.5, baruv.y) > .45 ) { \n    //    col.r += 1.;\n    //}\n    \n    col = mix(col, vec3(1.,1.,1.), dist);\n\n    O = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution\n#define M iMouse\n#define aspect R.x/R.y\n#define rotval M.x/R.x*360.\n\n// UV Rot\nmat2 r2d (float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c,-s,s,c);\n}\n\n// Single Line\nvec2 rot (float a) {\n    return vec2(cos(a), sin(a));\n}\n\n// https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nfloat hash11(float n){return fract(sin(n) * 43758.5453123);}\nfloat hash21(vec2 n){return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);}\n\n\n// https://www.shadertoy.com/view/wtcSzN\nfloat vmin(vec2 v) {\n\treturn min(v.x, v.y);\n}\n\nfloat vmax(vec2 v) {\n\treturn max(v.x, v.y);\n}\n\n// Effect Defines here\n\n","name":"Common","description":"","type":"common"}]}