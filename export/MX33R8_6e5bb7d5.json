{"ver":"0.1","info":{"id":"MX33R8","date":"1716062330","viewed":40,"name":"Wobbly Is Cool","username":"elifront","description":"Wobbbbbbles","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rainbow","wobbly"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float wobbly(float x, float y, float t) {\n    return sin(2.31*x + 0.11*t + 5.95 + 2.57*sin(1.73*y - 0.65*t + 1.87)) \n         + sin(3.09*y - 0.28*t + 4.15 + 2.31*sin(2.53*x + 0.66*t + 4.45))\n         + sin(3.06*x - 0.18*t + 5.16 + 2.28*sin(2.27*y + 0.71*t + 3.97)) \n         + sin(5.40*y - 0.13*t + 4.74 + 2.83*sin(3.71*x + 0.96*t + 4.42)) / 2.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n\n    // Time varying pixel color with more color components\n    float w = wobbly(uv.x, uv.y, iTime);\n    vec3 col = vec3(pow(w, 3.0), pow(w + 0.5, 2.0), pow(w + 1.0, 4.0));\n\n    // Adding a subtle gradient for more depth\n    col *= 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}