{"ver":"0.1","info":{"id":"l32yzw","date":"1727108822","viewed":17,"name":"color interpolation ","username":"HyperQuantum","description":"enable color interpolation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["phong","barycentric","interpolation","generalization","vertexcolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 mainfunction(vec2 uv , vec3 scattered[5], vec3 color[5]){\n\n\n    vec3 ourpoint = vec3(uv.x,uv.y,0);\n    vec3 si[5];\n    float ri[5];\n    for(int i=0;i<5;i++){\n        si[i] = scattered[i] - ourpoint;\n        ri[i] = length(si[i]);\n    }\n\n    float area[4];\n    float di[4];\n\n    float radian = acos(dot(normalize(si[1]),normalize(si[2])))+acos(dot(normalize(si[3]),normalize(si[1])))+acos(dot(normalize(si[2]),normalize(si[3])));\n    if(radian <= 3.1415 * 2.000){return vec3(0);}\n    \n    for(int i=0;i<4;i++){\n        area[i] = length(cross(si[i],si[i+1]))/2.0f;\n        di[i] = dot(si[i],si[i+1]);\n        if(ri[i]<=0.0015f){\n            return color[i];\n        }\n        if(area[i]<=0.0003f && di[i]<=0.00001f){\n            return (ri[i+1]*color[i]+ri[i]*color[i+1]) / (ri[i+1] + ri[i]);\n        }\n    }\n                \n    vec3 F;\n    float W;\n    \n    for(int i=1;i<=3;i++){\n        float w;\n        if(area[i-1]!=0.0f){\n            w = w + (ri[i-1]-di[i-1]/ri[i])/area[i-1];\n        }\n        if(area[i]!=0.0f){\n            w = w + (ri[i+1]-di[i]/ri[i])/area[i];\n        }\n        F = F + w * color[i];\n        W = W + w;\n    }\n    return F/W;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 red = vec3(1,0,0);\n    vec3 orange = vec3(0.8,0.5,0);\n    vec3 azure = vec3(0,0.1,1);\n    vec3 purple = vec3(1,0,0.8);\n    vec3 green = vec3(0,1,0);\n    vec3 yellow = vec3(0.8,1,0);\n    vec3 cyan = vec3(0,1,1);\n    \n    \n    vec3 leftbottom = vec3(0.1,0.1,0);\n    vec3 lefttop = vec3(0.1,0.9,0);\n    vec3 midtop = vec3(0.5,0.9,0);\n    vec3 midbottom = vec3(0.5,0.1,0);\n    vec3 slopetop = vec3(0.75,0.5,0);\n    vec3 slopebottom = vec3(0.75,0.1,0);\n    vec3 righttop = vec3(0.9,0.5,0);\n    vec3 rightbottom = vec3(0.9,0.1,0);\n    \n    vec3 receive = mainfunction(fragCoord/iResolution.xy , \n    vec3[5](\n        leftbottom,\n        lefttop,\n        midtop,\n        leftbottom,\n        lefttop\n    ),\n    //color\n    vec3[5](\n        cyan,\n        green,\n        azure,\n        cyan,\n        green\n    )\n    );\n    \n    receive += mainfunction(fragCoord/iResolution.xy , \n    vec3[5](\n        leftbottom,\n        midtop,\n        midbottom,\n        leftbottom,\n        midtop\n    ),\n    //color\n    vec3[5](\n        cyan,\n        azure,\n        yellow,\n        cyan,\n        azure\n    )\n    );\n    \n    receive += mainfunction(fragCoord/iResolution.xy , \n    vec3[5](\n        slopebottom,\n        midtop,\n        midbottom,\n        slopebottom,\n        midtop\n    ),\n    //color\n    vec3[5](\n        red,\n        green,\n        yellow,\n        red,\n        green\n    )\n    );\n    \n    receive += mainfunction(fragCoord/iResolution.xy , \n    vec3[5](\n        slopebottom,\n        midtop,\n        slopetop,\n        slopebottom,\n        midtop\n    ),\n    //color\n    vec3[5](\n        red,\n        green,\n        yellow,\n        red,\n        green\n    )\n    );  \n    \n    \n    receive += mainfunction(fragCoord/iResolution.xy , \n    vec3[5](\n        slopebottom,\n        righttop,\n        slopetop,\n        slopebottom,\n        righttop\n    ),\n    //color\n    vec3[5](\n        red,\n        green,\n        yellow,\n        red,\n        green\n    )\n    );  \n    \n    receive += mainfunction(fragCoord/iResolution.xy , \n    vec3[5](\n        slopebottom,\n        righttop,\n        rightbottom,\n        slopebottom,\n        righttop\n    ),\n    //color\n    vec3[5](\n        red,\n        green,\n        yellow,\n        red,\n        green\n    )\n    );  \n    // Output to screen\n    fragColor = vec4(receive,1.0f);\n}","name":"Image","description":"","type":"image"}]}