{"ver":"0.1","info":{"id":"4c3yzf","date":"1730932902","viewed":29,"name":"Innocent Swaying","username":"Secretstar","description":"Turn on the audio for better results","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["zoom","britney","spears","out","in"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Calcola il tempo in loop ogni 200 secondi\n    float loopTime = mod(iTime, 200.0);\n\n    // Calcola una frequenza che parte lentamente, accelera, e poi si ripristina ogni 200 secondi\n    float baseFrequency = 0.1;   // Frequenza iniziale lenta\n    float maxFrequency = 11.0;   // Frequenza massima durante il ciclo\n    float frequency = baseFrequency + (maxFrequency - baseFrequency) * smoothstep(0.0, 200.0, loopTime);\n    \n    // Calcola lo zoom con la frequenza variabile e il ciclo temporale\n    float zoom = 3.6 + 2.3 * sin(loopTime * frequency);\n\n    // Definisci gli offset per spostare il video verso il basso e lateralmente\n    float offsetY = 0.2; // Offset verticale\n    float offsetX = 0.2; // Offset orizzontale\n\n    // Applica lo zoom e gli offset\n    uv = (uv - vec2(0.4555 + offsetX, 0.4555 + offsetY)) / zoom + vec2(0.4 + offsetX, 0.4 + offsetY);\n\n    vec4 color = texture(iChannel0, uv);\n    fragColor = color;\n}\n","name":"Image","description":"","type":"image"}]}