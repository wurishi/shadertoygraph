{"ver":"0.1","info":{"id":"Ws2Gzw","date":"1548446277","viewed":157,"name":"domain repetition - lab","username":"yashgugale","description":"domain repetition","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["domainrepetition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Generate periodic coordinates from p.\n//Coords repeat in x,y with period c.x, c.y\nvec2 opRep( in vec2 p, in vec2 c)\n{\n    return mod(p,c)-0.5*c;\n}\n\n\n// signed distance to a regular octogon\nfloat sdOctogon( in vec2 p, in float r )\n{\n  // pi/8: cos, sin, tan.\n  const vec3 k = vec3(-0.9238795325,   // sqrt(2+sqrt(2))/2 \n                       0.3826834323,   // sqrt(2-sqrt(2))/2\n                       0.4142135623 ); // sqrt(2)-1 \n\n  // reflections\n  p = abs(p);\n  p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n  p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    \n  // Polygon side.\n  return length(p - vec2(clamp(p.x, -k.z*r, k.z*r), r))*sign(p.y - r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = 2.0*fragCoord/iResolution.xy -vec2(1.0);\n    \n    //Generate periodic coords\n    vec2 rep_uv = opRep(uv, vec2(0.5));\n    \n    //Pass periodic coords to distnace function to create repeating shape\n    float d = sdOctogon(rep_uv, 0.2);\n\n    vec3 col = vec3(smoothstep(0.0, 1.0, d)*iTime*10.0) * vec3(0.4, 0.9, 0.5);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}