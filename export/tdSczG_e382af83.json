{"ver":"0.1","info":{"id":"tdSczG","date":"1586833287","viewed":126,"name":"Life Game Simulation","username":"lzjseed","description":"WIKI: https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\nPress mouse left button can zoom viewer","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["2d","random","life","mutlibuffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ZOOM_SCALE (5.0)\n#define ZOOM_RANGE (150.0)\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    float inCircle = 0.0;\n        \n    if (iMouse.z > 0.0)\n    {\n        vec2 offsetMouse = fragCoord - iMouse.xy;\n\n        if (length(offsetMouse) < ZOOM_RANGE)\n        {\n            uv = (iMouse.xy + offsetMouse * 1.0 / ZOOM_SCALE) / iResolution.xy;\n        }\n\n        inCircle = 1.0 - smoothstep(0.0, 2.0, abs(length(offsetMouse) - ZOOM_RANGE));\n    }\n    \n    \n    float life = textureLod(iChannel0,uv,0.0).r > 0.5 ? 1.0 : 0.0;\n    \n    vec3 col = vec3(life,0.0,0.0);\n    \n    col = mix(col,vec3(1.0,1.0,0.0),inCircle);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float nrand( vec2 n )\n{\n\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n\nfloat n3rand( vec2 n )\n{\n\tfloat t = fract( iTime );\n\tfloat nrnd0 = nrand( n + 0.07*t );\n\tfloat nrnd1 = nrand( n + 0.11*t );\n\tfloat nrnd2 = nrand( n + 0.13*t );\n\treturn (nrnd0+nrnd1+nrnd2) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float value = 0.0;\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    if(iFrame == 0)\n    {\n        value = n3rand(uv);\n    }\n    else\n    {\n        float life = textureLod(iChannel0,uv,0.0).r;\n\n        int lifeNum = 0;\n        \n        lifeNum += textureLod(iChannel0,vec2(-1.0,0.0) / iResolution.xy + uv,0.0).r > 0.5 ? 1 : 0;\n        lifeNum += textureLod(iChannel0,vec2(1.0,0.0) / iResolution.xy + uv,0.0).r > 0.5 ? 1 : 0;\n        lifeNum += textureLod(iChannel0,vec2(0.0,-1.0) / iResolution.xy + uv,0.0).r > 0.5 ? 1 : 0;\n        lifeNum += textureLod(iChannel0,vec2(0.0, 1.0) / iResolution.xy + uv,0.0).r > 0.5 ? 1 : 0;\n        lifeNum += textureLod(iChannel0,vec2(-1.0,-1.0) / iResolution.xy + uv,0.0).r > 0.5 ? 1 : 0;\n        lifeNum += textureLod(iChannel0,vec2(1.0,-1.0) / iResolution.xy + uv,0.0).r > 0.5 ? 1 : 0;\n        lifeNum += textureLod(iChannel0,vec2(-1.0, 1.0) / iResolution.xy + uv,0.0).r > 0.5 ? 1 : 0;\n        lifeNum += textureLod(iChannel0,vec2(1.0, 1.0) / iResolution.xy + uv,0.0).r > 0.5 ? 1 : 0;\n\n        value = life > 0.0 ? ((lifeNum < 2 || lifeNum > 3) ? 0.0 : life) : ((lifeNum == 3) ? 1.0 : life);\n    }\n    \n    fragColor = vec4(value,value,value,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}