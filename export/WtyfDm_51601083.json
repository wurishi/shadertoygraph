{"ver":"0.1","info":{"id":"WtyfDm","date":"1614420515","viewed":123,"name":"Circular noise sampling idea","username":"KalonSall","description":"An idea I had to generate a 1D noise signal from a texture with dynamic scrolling speed, only needing one texture sampling.\nIdea explained here : https://twitter.com/Kalon_Sall/status/1365621771651661825?s=20","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","pattern","1dnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Idea explained here : https://twitter.com/Kalon_Sall/status/1365621771651661825?s=20\n//Top line : wrong way to interpolate between two different speeds\n//Middle line : signal interpolation between two different samplers\n//Bottom line : my idea to interpolate the radius of the trajectory circle to generate a new noise signal\n\n\nvec2 GetRoundSamplerPos(float time, float radius, float period)\n{\n    return mod(radius*vec2(sin(time/period*2.*3.1416),cos(time/period*2.*3.1416))+0.5,1.0);\n}\n\n\nfloat DrawRoundSamplerMask(vec2 samplerPos, vec2 uv,float radius)\n{    \n    float samplerDiscMask =smoothstep(5./iResolution.y, 0., distance(uv, samplerPos)-20./iResolution.y );\n    float samplerOrbitMask = smoothstep(5./iResolution.y, 0., distance(uv, vec2(0.5))-radius )*(1.-smoothstep(5./iResolution.y, 0., distance(uv, vec2(0.5))-(radius-5./iResolution.y) ));\n    return max(samplerDiscMask,samplerOrbitMask);\n}\n\nvec2 GetLinearSamplerPos(float time, float speed)\n{\n    return mod(vec2(time*speed,0.5),1.0);\n}\n\nfloat DrawLinearSamplerMask(vec2 samplerPos, vec2 uv,float speed)\n{\n    \n    float samplerDiscMask =smoothstep(5./iResolution.y, 0., distance(uv, samplerPos)-20./iResolution.y );\n    float samplerOrbitMask = step(uv.y, 0.5)*step(0.5-5./iResolution.y,uv.y);\n    return max(samplerDiscMask,samplerOrbitMask);\n}\n\nfloat GetMidSpeedMixValue(float time){\nreturn clamp(1.*0.5*sin(time/2.)+0.5,0.,1.);\n}\n\nfloat GetMidSpeed(float fast, float slow, float time){\n    return mix(fast,slow,GetMidSpeedMixValue(time));\n}\n\nfloat GetRadiusFromSpeed(float speed, float period){\n    return speed*period/2./3.1416;\n}\n\nvec2 GetRoundSamplerPosInterpol(float time, float fast, float slow, float period)\n{\n    float speed = GetMidSpeed(fast, slow, time);\n    float radius = GetRadiusFromSpeed(speed, period);\n    return mod(radius*vec2(sin(time/period*2.*3.1416),cos(time/period*2.*3.1416))+0.5,1.0);\n}\n\nfloat DrawSignalMask(vec2 samplerPosHisto, vec2 uv){\nfloat signal = texture(iChannel0,samplerPosHisto).r;\n return (1.-smoothstep(uv.y,uv.y+5./iResolution.y, signal))*\n   smoothstep(uv.y-2.*5./iResolution.y,uv.y-5./iResolution.y,signal)    ;\n}\n\nfloat DrawSignalMaskInterpol(vec2 samplerPosHistoFast,vec2 samplerPosHistoSlow, vec2 uv, float time){\nfloat fastSignal = texture(iChannel0,samplerPosHistoFast).r;\nfloat slowSignal = texture(iChannel0,samplerPosHistoSlow).r;\nfloat signal = mix(fastSignal,slowSignal, GetMidSpeedMixValue(time));\n return (1.-smoothstep(uv.y,uv.y+5./iResolution.y, signal))*\n   smoothstep(uv.y-2.*5./iResolution.y,uv.y-5./iResolution.y,signal)    ;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n//CHANGE THIS VALUES TO TEST THE IDEA---------------\n    float period = 10.;\n    float fast = 0.2;\n    float slow = 0.04;\n//--------------------------------------------------    \n    \n    float medium = GetMidSpeed(fast, slow, iTime);\n    \n\n    vec2 xy = fragCoord/iResolution.y*3.;\n    vec2 uv = mod(xy,1.);\n    vec2 signaluv = vec2(2.,1.)*vec2(fragCoord.x/iResolution.y-1./3.,mod(xy.y,1.));\n    \n    float noiseSquareMask = step(xy.x,1.);\n    \n    vec3 red = vec3(1.,0.,0.);\n    vec3 green = vec3(0.,1.,0.);\n    vec3 blue = vec3(0.2,0.6,1.);\n\n    vec3 col = vec3(texture(iChannel0,uv).r);\n    \n    float line1Mask = step(xy.y,1.);\n    float line2Mask = step(xy.y,2.)*step(1.,xy.y);\n    float line3Mask = step(xy.y,3.)*step(2.,xy.y);\n    \n    float fastradius = GetRadiusFromSpeed(fast,period);\n    float slowradius = GetRadiusFromSpeed(slow,period);\n    float mediumradius = GetRadiusFromSpeed(medium,period);\n    \n    vec2 roundSamplerPosFast = GetRoundSamplerPos(iTime,fastradius,period);\n    vec2 roundSamplerPosSlow = GetRoundSamplerPos(iTime,slowradius,period);\n    vec2 roundSamplerPosMid = GetRoundSamplerPos(iTime,mediumradius,period);\n    \n    vec2 linearSamplerPosFast = GetLinearSamplerPos(iTime,fast);\n    vec2 linearSamplerPosSlow = GetLinearSamplerPos(iTime,slow);\n    vec2 linearSamplerPosMid = GetLinearSamplerPos(iTime,medium);\n    \n    \n    //bottom line\n    col = mix(col,red,DrawRoundSamplerMask(roundSamplerPosFast,uv,fastradius)*line1Mask);\n    col = mix(col,blue,DrawRoundSamplerMask(roundSamplerPosSlow,uv,slowradius)*line1Mask);\n    col = mix(col,green,DrawRoundSamplerMask(roundSamplerPosMid,uv,mediumradius)*line1Mask);\n    \n    //middle line\n    col = mix(col,red,DrawLinearSamplerMask(linearSamplerPosFast,uv,fast)*line2Mask);\n    col = mix(col,blue,DrawLinearSamplerMask(linearSamplerPosSlow,uv,slow)*line2Mask);\n    \n    //top line\n    col = mix(col,red,DrawLinearSamplerMask(linearSamplerPosFast,uv,fast)*line3Mask);\n    col = mix(col,blue,DrawLinearSamplerMask(linearSamplerPosSlow,uv,slow)*line3Mask);\n    col = mix(col,green,DrawLinearSamplerMask(linearSamplerPosMid,uv,medium)*line3Mask);\n    \n    \n    vec2 roundSamplerPosFastHisto = GetRoundSamplerPos(iTime-signaluv.x,fastradius,period);\n    vec2 roundSamplerPosSlowHisto = GetRoundSamplerPos(iTime-signaluv.x,slowradius,period);\n    vec2 roundSamplerPosMidHisto = GetRoundSamplerPosInterpol(iTime-signaluv.x,fast, slow, period);\n    \n    vec2 linearSamplerPosFastHisto = GetLinearSamplerPos(iTime-signaluv.x,fast);\n    vec2 linearSamplerPosSlowHisto = GetLinearSamplerPos(iTime-signaluv.x,slow);\n    vec2 linearSamplerPosMidHisto = GetLinearSamplerPos(iTime-signaluv.x,GetMidSpeed(fast, slow, iTime-signaluv.x));\n    \n    float FastRoundSignal = DrawSignalMask(roundSamplerPosFastHisto,signaluv);\n    float SlowRoundSignal =  DrawSignalMask(roundSamplerPosSlowHisto,signaluv);\n    float MidRoundSignal =  DrawSignalMask(roundSamplerPosMidHisto,signaluv);\n    \n    float FastLinSignal = DrawSignalMask(linearSamplerPosFastHisto,signaluv);\n    float SlowLinSignal =  DrawSignalMask(linearSamplerPosSlowHisto,signaluv);\n    float MidLinSignal =  DrawSignalMask(linearSamplerPosMidHisto,signaluv);\n    float MidLinSignalInterpol =  DrawSignalMaskInterpol(linearSamplerPosFastHisto,linearSamplerPosSlowHisto ,signaluv,iTime-signaluv.x);\n    \n    vec3 signal = mix(vec3(1.),red,FastRoundSignal*line1Mask);\n    signal = mix(signal,blue,SlowRoundSignal*line1Mask);\n    signal = mix(signal,green,MidRoundSignal*line1Mask);\n    \n    signal = mix(signal,red,FastLinSignal*line2Mask);\n    signal = mix(signal,blue,SlowLinSignal*line2Mask);\n    signal = mix(signal,green,MidLinSignalInterpol*line2Mask);\n    \n    signal = mix(signal,red,FastLinSignal*line3Mask);\n    signal = mix(signal,blue,SlowLinSignal*line3Mask);\n    signal = mix(signal,green,MidLinSignal*line3Mask);\n    \n    col = mix(signal,col,noiseSquareMask);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}