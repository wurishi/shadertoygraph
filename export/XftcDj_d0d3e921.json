{"ver":"0.1","info":{"id":"XftcDj","date":"1731308234","viewed":69,"name":"Gerstner-ish","username":"eliaszi","description":"A simple approximation of a Gerstner wave that can be used as function y = f(Ã—).\n\nApplied in the 3D ocean SDF here: https://www.shadertoy.com/view/MXsczn","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["waves","gerstner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat wave(float p, float t)\n{\n    p += t;\n    float gtx = cos(p);\n    float gty = sin(p);\n    \n    return sin(p - gtx) + gty;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 R = iResolution.xy;\n    vec2 uv = 2. * fragCoord/R - 1.;\n    \n    float amp = 1.2 + sin(iTime * .4) * .3;\n    \n    float t = iTime * 2.;\n    float h = 0.; \n    \n    h += wave(uv.x *  5., t) * .05 * amp;\n    h += wave(uv.x * 20., t) * .005 * amp;\n    h += wave(uv.x * 80., t) * .0005 * amp;\n    \n    fragColor = mix( \n      vec4(1),                         // white\n      vec4(.1, .15, .8 + uv.y/4., 1 ), // blue gradient                 \n      smoothstep( 3./R.y, 0., uv.y-h)  // AA as suggested by FabriceNeyret2\n    );\n\n}","name":"Image","description":"","type":"image"}]}