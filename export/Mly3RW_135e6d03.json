{"ver":"0.1","info":{"id":"Mly3RW","date":"1473434810","viewed":122,"name":"Parabolic saw blades","username":"rush_2112","description":"Parabolic saw blades","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","parabolic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) - 0.5;\n    \n    \n\tfloat gt = (iTime / 50.0);\n    gt = (gt + 10.0) + gt * 20.0;\n\tfloat algo_r = 0.0;\n\tfloat algo_g = 0.0;\n\tfloat algo_b = 0.0;\n\t\n\talgo_r *= mod(uv.y + (1.0 - uv.x) * cos(uv.x) * uv.y * cos(uv.x), sin(gt) + cos(uv.x) * uv.y * uv.x + cos(uv.x));\n\talgo_r += mod(uv.y * gt + (uv.y * sin(gt)) + sin(uv.x) + (uv.x * tan(gt)), (1.0 - uv.x) * (uv.x * tan(gt)) * sin(uv.x) + uv.y + (1.0 - uv.y));\n\talgo_r += (sin(uv.x) + (uv.x * sin(gt)) * sin(uv.x) + gt * uv.y);\n\talgo_r += tan(sin(uv.x) * (1.0 - uv.x) * cos(uv.x) + sin(uv.x) + sin(uv.x));\n\talgo_r += ((uv.x * tan(gt)) * (1.0 - uv.y) * gt + sin(gt) * 0.42);\n\talgo_r *= distance(sin(uv.x) * (1.0 - uv.y) * (1.0 - uv.y) + gt * sin(gt), gt + gt + (1.0 - uv.x) * (uv.x * tan(gt)) + uv.y);\n\talgo_r += tan((uv.x * tan(gt)) * uv.y * uv.x + cos(uv.x) + uv.x);\n\talgo_r += mod(uv.y * uv.y + uv.x + gt * (1.0 - uv.y), (uv.y * sin(gt)) + (uv.y * sin(gt)) * cos(uv.x) + 3.57 * sin(gt));\n\n\talgo_g *= sin(gt * uv.y + sin(gt) + (1.0 - uv.x) + uv.y);\n\talgo_g += (uv.x + (1.0 - uv.y) + sin(gt) * sin(uv.x) * (uv.y * sin(gt)));\n\talgo_g += sin((uv.x * sin(gt)) + (1.0 - uv.y) + (1.0 - uv.y) * uv.y * gt);\n\talgo_g += tan((uv.x * sin(gt)) + gt + cos(uv.x) + sin(gt) + uv.x);\n\talgo_g *= mod(uv.y + (uv.x * sin(gt)) + (uv.x * tan(gt)) + (uv.x * sin(gt)) * (uv.x * sin(gt)), (1.0 - uv.x) * (1.0 - uv.y) + (1.0 - uv.y) + (1.0 - uv.y) + (1.0 - uv.x));\n\talgo_g *= smoothstep(gt * (1.0 - uv.y) + 3.31 + gt * cos(uv.x), (1.0 - uv.x) * sin(gt) + uv.x * (uv.y * sin(gt)) + gt, (1.0 - uv.y) * (1.0 - uv.y) + sin(uv.x) + cos(uv.x) + (1.0 - uv.y));\n\talgo_g += ((1.0 - uv.y) * uv.x * cos(uv.x) * cos(uv.x) + (uv.x * sin(gt)));\n\talgo_g += tan(uv.y * uv.x * (uv.x * tan(gt)) * uv.y * (uv.x * tan(gt)));\n\n\talgo_b += cos((1.0 - uv.x) * sin(uv.x) * 2.03 * gt * gt);\n\talgo_b += cos((uv.x * sin(gt)) + (uv.x * sin(gt)) * cos(uv.x) * uv.x + 9.53);\n\talgo_b += distance((1.0 - uv.x) * sin(gt) * 4.41 + (uv.x * tan(gt)) + uv.x, sin(uv.x) * cos(uv.x) * (uv.y * sin(gt)) * cos(uv.x) * (1.0 - uv.y));\n\talgo_b += (sin(gt) + gt + (uv.y * sin(gt)) + sin(gt) * (uv.x * tan(gt)));\n\talgo_b += (uv.x + uv.x * (uv.x * tan(gt)) * (uv.y * sin(gt)) + cos(uv.x));\n\talgo_b += (0.66 + (uv.y * sin(gt)) * uv.y * uv.y * (uv.y * sin(gt)));\n\talgo_b += smoothstep((uv.x * tan(gt)) + (uv.x * tan(gt)) * cos(uv.x) * cos(uv.x) + (uv.y * sin(gt)), (1.0 - uv.y) + 6.92 + (1.0 - uv.y) + (uv.x * tan(gt)) * sin(uv.x), cos(uv.x) + (uv.x * sin(gt)) + gt + uv.x + (uv.x * tan(gt)));\n\talgo_b += clamp(cos(uv.x) * gt + sin(gt) * uv.y + sin(uv.x), cos(uv.x) * uv.y * uv.x * uv.x * uv.x, uv.y * (uv.y * sin(gt)) * (uv.x * sin(gt)) + (uv.y * sin(gt)) + uv.y);\n\n\talgo_r = (1.0 - algo_r); algo_r = clamp(algo_r, 0.0, 1.0);\n\talgo_g = (1.0 - algo_g); algo_g = clamp(algo_g, 0.0, 1.0);\n\talgo_b = (1.0 - algo_b); algo_b = clamp(algo_b, 0.0, 1.0);\n\n\tfragColor = vec4(algo_r, algo_g, algo_b, 1.0);\n}","name":"Image","description":"","type":"image"}]}