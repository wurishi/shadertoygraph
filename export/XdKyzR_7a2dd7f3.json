{"ver":"0.1","info":{"id":"XdKyzR","date":"1520892163","viewed":73,"name":"Rainbow World","username":"GuntherRox","description":"having fun","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//For Clouds\nbool circle (vec2 uv, vec2 p, float radius)\n{\n    \tfloat dist = sqrt((uv.x - p.x) * (uv.x -p.x) + (uv.y - p.y) * (uv.y - p.y)); \n    \tif (dist < radius) \n            return true;\n    \telse return false; \n    \n   \n    \n    \n}\n\n\n//Sky Gradient that changes\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n  float sinTime = sin(iTime);\n  sinTime += 0.5;\n  sinTime *= 0.5;\n  \n  fragColor = vec4(sinTime,9,2,1);\n    \n \n //Sky Code ends here   \n    \n \t\n    \n\n//Location of White Cloud 1\n    \n  vec2 uv = fragCoord.xy / iResolution.xy;\n    \n  uv -= (.18,.18);\t\t\t\t//-0.5 < > 0.5\n  uv.x *= iResolution.x/iResolution.y; \n   \n  vec2 center = vec2(0.0, 0.0);\n    \n    \n\n\n// Rainbow\n    \n\n     //Red Cloud Location\n     vec2 RedCloud = vec2 (0.2, 0.25 * (1.0 + sin(iTime)) * 0.5);\n    \n     //Orange Cloud Location\n     vec2 OrangeCloud = vec2 (0.2, 0.25 * (1.0 + sin(iTime)) * 0.5);\n    \n     //Yellow Cloud Location\n     vec2 YellowCloud = vec2 (0.2, 0.25 * (1.0 + sin(iTime)) * 0.5);\n    \n     //Green Cloud Location\n     vec2 GreenCloud = vec2 (0.2, 0.25 * (1.0 + sin(iTime)) * 0.5);\n    \n     //Blue Cloud Location\n     vec2 BlueCloud = vec2 (0.2, 0.25 * (1.0 + sin(iTime)) * 0.5);\n    \n    //PurpleCloud Location\n    vec2 PurpleCloud = vec2 (0.2, 0.25 * (1.0 + sin(iTime)) * 0.5);\n\n  //SPHERES\n    //Red Cloud Size\n\tfloat RedCloud1 = 0.33 * (1.0);\n    \n    //OrangeCloud Size\n    float OrangeCloud1 = 0.29 * (1.0);\n    \n    //YellowCloud Size\n    float YellowCloud1 = 0.24 * (1.0);\n    \n    //GreenCloud Size\n    float GreenCloud1 = 0.20 * (1.0);\n    \n    //BlueCloud Size\n    float BlueCloud1 = 0.15 * (1.0);\n    \n    //PurpleCloud Size\n    float PurpleCloud1 = 0.10* (1.0);\n    \n   //COLOR DESIGN \n    //Red Cloud Color Design\n    bool isInRedC = circle (uv, RedCloud, RedCloud1);\n    if (isInRedC) fragColor = vec4 (sin(iTime),0.3,0.5,1.0);\n    \n    //Orange Cloud Color Design\n \tbool isInOrangeC = circle (uv, OrangeCloud, OrangeCloud1);\n    if  (isInOrangeC) fragColor = vec4(sin(iTime),0.5,0.5,1.0);\n    \n    //Yellow Cloud Color Design\n \tbool isInYellowC = circle (uv, YellowCloud, YellowCloud1);\n    if  (isInYellowC) fragColor = vec4(sin(iTime),0.8,0.6,1.0);\n    \n    //Green Cloud Color Design\n \tbool isInGreenC = circle (uv, GreenCloud, GreenCloud1);\n    if  (isInGreenC) fragColor = vec4(sin(iTime),.9,0.7,1.0);\n   \n    //Blue Cloud Color Design\n \tbool isInBlueC = circle (uv, BlueCloud, BlueCloud1);\n    if  (isInBlueC) fragColor = vec4(sin(iTime),0.9,0.9,1.0);\n    \n    //Purple Cloud Color Design\n    bool isInPurpleC = circle (uv, PurpleCloud, PurpleCloud1);\n    if  (isInPurpleC) fragColor = vec4(sin(iTime),0.5,0.8,1.0);\n    \n    \n  //White circle Cloud\n    \n   //float radiusGreen = (0.175);\n       \n  //bool isInGreenCircle = circle(uv,center, radiusGreen); \n  // if (isInGreenCircle) fragColor = vec4 (1, 1, 1, 1); \n    \n //Cloud1\n    \n    //WhiteCloud  Location\n      vec2 WhiteCloud1 = vec2 (-0.05, 0.1 * (2.0 * sin(iTime)) * 0.8);\n    //WhiteCloud Size\n\tfloat WhiteCloud_1 = 0.2 * (0.9);\n    \n    \n    //White Clouds  Color Design\n    bool isWhiteC1 = circle (uv, WhiteCloud1, WhiteCloud_1);\n    if (isWhiteC1) fragColor = vec4 (sin(iTime),sin(iTime),sin(iTime),sin(iTime));\n    \n  //Cloud2\n    \n    //WhiteCloud  Location\n      vec2 WhiteCloud2 = vec2 (0.19, 0.06 * (2.0 * sin(iTime)) * 0.8);\n     \n    //WhiteCloud Size\n\tfloat WhiteCloud_2 = 0.25 * (0.9);\n    \n    \n    //White Clouds  Color Design\n    bool isWhiteC2 = circle (uv, WhiteCloud2, WhiteCloud_2);\n    if (isWhiteC2) fragColor = vec4 (sin(iTime),sin(iTime),sin(iTime),sin(iTime));\n        \n  //Cloud3\n    \n    //WhiteCloud  Location\n      vec2 WhiteCloud3 = vec2 (0.42, 0.087 * (2.0 * sin(iTime)) * 0.8);\n     \n    //WhiteCloud Size\n\tfloat WhiteCloud_3 = 0.2 * (0.9);\n    \n    \n    //White Clouds  Color Design\n    bool isWhiteC3 = circle (uv, WhiteCloud3, WhiteCloud_3);\n    if (isWhiteC3) fragColor = vec4 (sin(iTime),sin(iTime),sin(iTime),1.0);\n        \n    \n    \n}","name":"Image","description":"","type":"image"}]}