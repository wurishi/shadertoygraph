{"ver":"0.1","info":{"id":"mtdcWn","date":"1699082374","viewed":53,"name":"231104_tilewipes","username":"anonymousAntelope","description":"Practising with uvs and transitions","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["uv","transition","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspectRatio = iResolution.x / iResolution.y;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    vec2 uvOriginal = uv;\n    vec2 uvCentre = (uv - 0.5) * 2.0;\n    \n    uv.x *= aspectRatio;\n\n    \n    // This line tiles the UVs\n    uv = fract(uv * 10.0);\n    \n    uv -= 0.5; // shifts the 0.0 point to the middle of each tile\n    uv *= 2.0; // changes the scale of each tile to -1 to 1\n    \n    \n    // Circular tile\n    float timing = sin(iTime) * 1.42;\n    float value = step(timing, length(uv));\n    \n    // horizontal tile wipe\n    //float timing = sin(iTime);\n    //float value = step(timing, uv.x);\n\n    // vertical tile wipe\n    //float timing = sin(iTime);\n    //float value = step(timing, uv.y);\n    \n    // center tile wipe\n    //float timing = sin(iTime);\n    //float value = step(timing, abs(uv.x)) + step(timing, abs(uv.y));\n    \n    // Combining the wipe with an offset so the tiling staggers across the screen\n    //float timing = sin(iTime);\n    // Add the original uv x and y to the timing to offset the time that each column and row starts\n    //float value = step(timing + uvOriginal.x, abs(uv.x)) + step(timing + uvOriginal.y , abs(uv.y));\n    \n    \n    // Combining the wipe with an offset so the tiling begins from the centre of the screen\n    //float timing = sin(iTime) + min(length(uvCentre), 1.0);\n    //float value = step(timing, abs(uv.x)) + step(timing, abs(uv.y));\n    \n\n    vec4 texture1 = texture(iChannel0, uvOriginal);\n    vec4 texture2 = texture(iChannel1, uvOriginal);\n\n\n    vec4 textureOutput = mix(texture1, texture2, min(value, 1.0));\n    \n    \n    \n\n    // Output to screen\n    fragColor = vec4(textureOutput);\n}","name":"Image","description":"","type":"image"}]}