{"ver":"0.1","info":{"id":"XcKyRz","date":"1731417640","viewed":186,"name":"tunnel  fractal new ","username":"nayk","description":"source fractal 62 and   https://www.shadertoy.com/view/McycRR","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal","tunnel","new"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n#define I iResolution\n#define A min( I.x, I.y )\n\nfloat rep(inout vec2 u, float rep){\n\n    float r = 6.28 / rep; // each radian\n    \n    float a = round( atan(u.y, u.x) / r ) * r; // aligned uv\n    \n    u = vec2(\n        dot( u, vec2( cos(a), sin(a) ) ),\n        dot( u, vec2( -sin(a), cos(a) ) )\n    );\n    \n    return floor( mod( ( round( a / r ) + rep * .5 ), rep ) ); // index\n}\n\n\n// https://iquilezles.org/articles/palettes/\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.283185*(c*t+d) );\n}\n\n\nmat2 rot( float a ){\n    return mat2( cos(a), sin(a), -sin(a), cos(a) );\n}\n\nfloat signTri( vec2 u, float w ){\n    \n    u.y-= w * .5;\n    float h = sqrt( pow(w, 2.) - pow(w * .5, 2.) );\n    \n    return max(abs(u.x) - ( w / cos( radians( 15. )) ) * ( - u.y / h / 2.), abs(u.y) - w);\n}\n\nfloat E, F, G;\n\nfloat signTri2( vec2 u, float w ){\n    vec2 v = u;\n \tfloat h = sqrt( pow(w, 2.) - pow(w * .5, 2.) ), a = 6.28 / 12.;\n\n  \tv *= rot( a );\n    \n    E = rep( v, 3. );\n  \tF = round( v.y / .045 / w );\n  \tv.x -= w * .2;\n  \n  \tv.y -= w * .05 * clamp( F, -7., 7. ); \n\treturn ( max( abs(v.x) - w * .01, abs(v.y) - w * .01 ) );\n\n}\n\nfloat df( vec3 p ){\n    \n    p.xy *= rot( iTime * .2 );\n    \n    p.z += iTime * .1;\n    \n    float z = round( p.z / .3 );\n    G = z;\n    p.z -= .3 * z;\n    p.xy *= rot( z / 3.14 );\n\n\n    vec3 g = p;\n    g.xy *= rot( iTime );\n    g.x += cos( p.z - iTime) * .1;\n    g.y += sin( p.z - iTime) * .1;\n  \n    return signTri( vec2( signTri2(p.xy, 2. ) * .8889, p.z ) * rot( g.y * 3.14 - iTime ), .06 ) * .4445;\n}\n#define h(a) fract(sin(dot(a, vec2(12.3456, 54.321))) * 9876.54321)\n#define I iResolution\n#define rot( r ) mat2(cos(r), sin(r), -sin(r), cos(r) )\n#define A min( I.x, I.y )\n\nfloat gp( vec2 u ){\n   \n   vec2 t = round( u / .05 );\n   \n   u -= .05 * t;\n   \n   return ( h( t ) < .667 ) ? (length( u ) - .002) : 1.;\n}\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n \n\nvoid mainImage(out vec4 O, vec2 C)\n{\n   vec2 uv = ( C - .5*iResolution.xy ) / iResolution.y;\n    O=vec4(0);\n    vec2 V= C;\n    vec2 u = (V + V - I.xy) / A,\n         m = (iMouse.xy * 2. - I.xy) / A;\n    \n    if( iMouse.z < .01 ){\n        m = vec2( 0 );\n    }\n    \n    float t, d;\n    \n    vec3 p, c, o = vec3( 0, 0, -1 ), r = vec3( u, 1 );\n    \n    for( float i = 0.; i < 64.; i++ ){\n        p = o + r * t,\n        p.xz *= rot(m.x * .2),\n        p.yz *= rot(m.y * .2),\n        d = df( p ),\n        t += d;\n      \tif( t < .002 || d < 1e-3 ){\n        \tbreak ;\n        }\n    }\n\n    vec3 g = palette( (E + 1.) * F * G, vec3( 0.96, 0.14, 0.43 ), vec3( 0.20, 0.99, 0.00 ), vec3( 0.04, 0.89, 0.44 ), vec3( 0.47, 0.56, 0.27 ) );\n  \t\n  \tc += g * .2;\n  \n    if( d < 1e-3 ){\n      \tc += g * g;\n    \tc += dot( p, g) * .4;\n    }\n    \n     vec2 u2 = ( V + V - I.xy ) / A,\n         m2 = (  2. - I.xy ) / A;\n    \n    vec3 c2, p2, o2 = vec3( 0., 0., -1. ), r23 = vec3( u2, 1. );\n    float t2, d23, i2;\n    while( i2++ < 64. )\n        p2 = o2 + r23 * (t += d23 = length( p2 ) - .8);\n    \n    c2 += smoothstep( .3, 0., length(u2) );\n    c2 *= c2;\n    \n    if( d23 < 1e-3 ){\n        for( float i = -00.1; i < 100.; i++ ){\n            c2+= smoothstep( 5. / A, -5. / A, gp( ( p2.xy \n            \n             + (i/120.) * .5 * u2 )  - iTime * .1 ) ) * .15;\n        }\n        \n        c2 *= smoothstep( 1., .0, length(u2) );\n    }\n\n    vec3 n1,q,r2=iResolution,\n    d2=normalize(vec3((C*2.-r2.xy)/r2.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(1),H(g*.1),.8)*1./e/8e3\n    )\n    {\n        n1=g*d2;\n     n1.z=df(n1); \n \n    n1.z += iTime * 0.01;\n      n1.z += iTime * 0.01;\n    float z = round( p.z / 0.3 );\n   \n   \n    n1.xy *= rot( n1.z / 3.14 );\nn1.z=df(n1);\n  \n        a=30.;\n        n1=mod(n1-a,a*2.)-a;\n        s=2.;\n        for(int i=0;i++<8;){\n            n1=.3-abs(n1);\n            n1.x<n1.z?n1=n1.zyx:n1;\n            n1.z<n1.y?n1=n1.xzy:n1;\n            s*=e=1.7+sin(iTime*.01)*.1;\n            n1=abs(n1)*e-\n                vec3(\n                    5.+sin(iTime*.03)*3.,\n                    120,\n                    8.+cos(iTime*.05)*5.\n                 );\n         }\n         g+=e=length(n1.yz)/s;\n    }\n    \n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n    O*= vec4(happy_star(uv, anim) * vec3(0.35,0.2,1.55)*1., 1.0);\n}","name":"Image","description":"","type":"image"}]}