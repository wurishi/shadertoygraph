{"ver":"0.1","info":{"id":"4syfDR","date":"1528209298","viewed":312,"name":"I messed up!","username":"Flopine","description":"Bored at work.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Code by Flopine\n// Thanks to wsmind, leon, lsdlive, lamogui and XT95 for teaching me <3 cookie collective rulz\n\n#define ITER 64.\n#define PI 3.141592\n#define STP 3\n\nfloat g = 0.; \n\nmat2 rot (float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\n\nfloat stmin(float a, float b, float k, float n)\n{\n    float st = k/n;\n    float u = b-k;\n    return min(min(a,b),0.5 * (u+a+abs(mod(u-a+st,2.*st)-st)));\n}\n\n// iq's palette https://iquilezles.org/articles/palettes\nvec3 palette (float t, vec3 a, vec3 b, vec3 c, vec3 d)\n{return a+b*cos(2.*PI*(c*(t+d)));}\n\n\nvec2 mo (vec2 p, vec2 d)\n{\n    p.x = abs(p.x) - d.x;\n    p.y = abs(p.y)-d.y;\n    if (p.y > p.x) p.xy = p.yx;\n    return p;\n}\n\n\nfloat sphe (vec3 p, float r)\n{return length(p)-r;}\n\n\nfloat box (vec3 p, vec3 c)\n{\n    float per = 8.;\n    p.x = mod(p.x-per/2., per)-per/2.;\n    return length(max(abs(p)-c,0.));\n}\n\n\nfloat cyl(vec2 p, float r)\n{return length(p)-r;}\n\n\nfloat prim1 (vec3 p)\n{\n    p.xy *= rot(iTime);\n    p.yz *= rot(iTime);\n    float c = min(cyl(vec2(p.x+sin(p.y*0.8),p.z), 0.2), cyl(vec2(p.y, p.z+cos(p.x)), 0.2));\n    float bs = box(p, vec3(1.));\n    return stmin(c, bs, 0.8, 5.);\n        \n}\n\n\nfloat fractal(vec3 p)\n{\n    float prim = prim1(p);\n    for (int i=0; i<STP; i++)\n    {\n\n        p.yz = mo(p.yz, vec2(2.));\n        p.xy = mo(p.xy, vec2(2.));\n        p.xy -= 2.;\n        prim = stmin(prim,prim1(p), 0.9, 5.);       \n    }\n    return prim;\n}\n\n\nfloat SDF (vec3 p)\n{\n    p = abs(p);\n    float d = fractal(p);\n    g += 0.01/(0.01+d*d);\n    return d;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(fragCoord/iResolution.xy)-1.;\n\tuv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(0.001,0.001,-15.); vec3 p = ro;\n    vec3 dir = normalize(vec3 (uv, 1.));\n    \n    float shad = 0.;\n    \n    for (float i =0.; i<ITER; i++)\n    {\n        float d = SDF(p);\n        if (d<0.001)\n        {\n            shad = i/ITER;\n            break;\n        }\n        p+=d*dir*0.7;\n    }\n    \n    float t = length(ro-p);\n    \n    vec3 pal = palette(length(uv),\n                      vec3(0.5),\n                      vec3(0.5),\n                      vec3 (1.2),\n                      vec3(0.1,0.2,0.3));\n    \n    vec3 c = mix(vec3(shad), pal,abs(uv.x+uv.y*0.5));\t\n    // glow from lsdlive, originally from balkhan : https://www.shadertoy.com/view/4t2yW1\n\tc += g*0.08;\n    \n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}