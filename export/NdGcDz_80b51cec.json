{"ver":"0.1","info":{"id":"NdGcDz","date":"1654665127","viewed":72,"name":"Uv warping - Banni","username":"banni","description":"Playing with some uv warping in y direction by a mask","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["warping","uv","masking"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(float r, vec2 p){\n    float l = length(p);\n    float s = 1.- smoothstep(r, r + length(p) * .2, l);\n    return s;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (-iResolution.xy + fragCoord * 2. ) / iResolution.y;\n    vec3 ro = vec3(0.);\n    vec3 rd = normalize(vec3(uv, 2.0f));\n    // Time varying pixel color\n    float angle = iTime * .5 ;\n    rd.xz *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    float s = circle(.3, uv + .3 * sin(iTime));\n    s += circle(.3, uv - .1 * sin(iTime) * 3.);\n    s += circle(.3, uv - .5 * sin(iTime) * 3.);\n    s += circle(.3, uv + .5 * sin(iTime) * 3.);\n    \n    s += circle(.3, uv - .1 * sin(iTime) * vec2(-1., 1.) * 3.);\n    s += circle(.3, uv - .5 * sin(iTime)* vec2(-1., 1.) * 3.);\n    s += circle(.3, uv + .5 * sin(iTime)* vec2(-1., 1.) * 3.);\n    vec4 col = vec4(0);\n    vec3 offset = vec3(.0f, -.1f, 0.0f) * s + vec3(0.0f) * (1.-s);\n    rd += offset;\n    rd = normalize(rd);\n    col = texture(iChannel0, rd);\n    // col = vec4(s);\n    fragColor = vec4(col.xyz, 1.0f);\n    \n}","name":"Image","description":"","type":"image"}]}