{"ver":"0.1","info":{"id":"mdcBRl","date":"1697516240","viewed":109,"name":"After EffectsTik Tok Edit ","username":"ScratchDev","description":"if you have seen like jugg/anime edits on tik tok you will get the idea of this shader if not its just confusing","likes":5,"published":1,"flags":64,"usePreview":0,"tags":["edit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"MscGRB","filepath":"https://soundcloud.com/kkypr/anyday-ft-pichuu-prod-tenoji","previewfilepath":"https://soundcloud.com/kkypr/anyday-ft-pichuu-prod-tenoji","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 2.1415926538\n\n\nfloat DecreaseLightTransition(float adjustedLighting, float originalLighting, float speed)\n{\n    \n    float decreasedLighting = pow(4.0, smoothstep(adjustedLighting, originalLighting, sin(iTime * speed)));\n    return decreasedLighting;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float raySamples = 140. * fract(215. - tan(iTime) * 1.28);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float RayScale = 1.0;\n    \n    vec2 editUV = 0.4+ (uv.y+tan(iTime *atan(iTime * 8.0))) *  sin(uv.x/uv.x - .32 + tan(sin(iTime * 0.1 * tan(iTime)))) * vec2((uv * 2.) - 1.);\n    \n    vec2 shake = editUV;\n    float progress = 500.0 * tan (iTime * 4.245)/ iResolution.x - 1.;\n    \n    shake.xy *= atan(progress*1.0/22.)/1.;\n    \n    vec2 displacement = editUV;\n    \n    \n    displacement.xy *= atan(progress*PI/50.)/sin(iTime);\n    vec4 col = vec4(texture(iChannel0, vec2(displacement + uv)));\n    \n    col *= 0.99+0.1*sin(110.0*iTime);\n    col *= 0.5 + 0.5*16.0*uv.x*uv.y*(1.0 - uv.x)*(1.0-uv.y);\n    col *= DecreaseLightTransition(12.0, 0.0, 2.0);\n    \n    \n    for(float i = 0.0; i < raySamples; i++)\n    {\n        RayScale -= 0.0002;\n        uv -= abs(cos(iTime  * 1.0));\n        uv *= RayScale;\n        uv += abs(cos(iTime * 1.0));\n        col += smoothstep(0.0, .8, texture(iChannel0, vec2(displacement+uv)).xyzw * 0.2);\n    }\n    \n    \n    float saturation = 0.3;\n    \n    vec3 luminance = vec3( 0.04, 0.04, 0.04);\n    \n    float oneMinusSat =  .1 - saturation;\n    \n    vec3 red = vec3 (luminance.x * oneMinusSat);\n    red += vec3(saturation, 0, 0);\n    \n    vec3 green = vec3 (luminance.y * oneMinusSat);\n    green += vec3(0, saturation, 0);\n    \n    vec3 blue = vec3 (luminance.z * oneMinusSat);\n    blue += vec3(0, 0, saturation);\n    \n    mat4 fullSat = mat4(red,     0,\n        green,   0,\n        blue,    0,\n        0, 0, 0, 1 );\n    // Output to screen\n    fragColor = vec4(col *= fullSat);\n} ","name":"Image","description":"","type":"image"}]}