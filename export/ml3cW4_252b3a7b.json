{"ver":"0.1","info":{"id":"ml3cW4","date":"1699299281","viewed":44,"name":"Pink background motion","username":"Miolith","description":"pink background","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pinkbackground"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdEquilateralTriangle( in vec2 p, in float r )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nfloat rand(in float x)\n{\n    return fract(sin(x * 43758.5453123)) * 2.0 - 1.0;\n}\n\nvec2 rand_vec2(in float x)\n{\n    return vec2(rand(x), rand(x * 10.0));\n}\n\nfloat triangle(in vec2 uv)\n{\n    float time = iTime;\n    \n    vec2 position = vec2(uv.x - cos(time) * 0.15, uv.y + sin(time) * 0.15);\n    return 1.0 - smoothstep(0.0, 0.01, abs(sdEquilateralTriangle(position, 0.1)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    vec3 col = vec3(1.000,0.659,0.973) + 0.2 * floor(smoothstep(-1.0, 1.0, uv.y) * 5.0) / 5.0;\n    \n    vec3 border_color = vec3(0.627,0.000,0.800);\n    col = mix(col, border_color, triangle(uv + rand_vec2(1.0)));\n    col = mix(col, border_color, triangle(uv + rand_vec2(2.0)));\n    col = mix(col, border_color, triangle(uv + rand_vec2(3.0)));\n    col = mix(col, border_color, triangle(uv + rand_vec2(4.0)));\n    col = mix(col, border_color, triangle(uv + rand_vec2(5.0)));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}