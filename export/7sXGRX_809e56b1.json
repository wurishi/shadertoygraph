{"ver":"0.1","info":{"id":"7sXGRX","date":"1616354887","viewed":85,"name":"Trying particles","username":"CoolerZ","description":"Trying something with particles.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["particles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"ivec2 denormalize(vec2 pos) {\n    pos = pos*.5+.5;\n    return ivec2(pos*iChannelResolution[1].xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    //uv *= 5.;\n\n\n    float min_distance = 10000.;\n    for(int i = 0; i < NUM_PARTICLES; i++) {\n        vec4 pos_vel = texelFetch(iChannel0, ivec2(i, 0), 0);\n        vec2 pos = pos_vel.xy;\n        // vec2 vel = pos_vel.zw;\n        min_distance = min(min_distance, distance(uv, pos)-.01);\n    }\n    float mask = 1.-smoothstep(0., .01, min_distance);\n    vec3 back = texelFetch(iChannel1, denormalize(uv), 0).rgb;\n    vec3 col = .5*back + vec3(mask);\n    // fragColor = texelFetch(iChannel0, ivec2(fragCoord-.5), 0);\n    fragColor = vec4(col, 1.);\n}\n/*\n// NICE LOOKING\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    //uv *= 5.;\n\n    vec3 col = vec3(0.);\n    for(int i = 0; i < NUM_PARTICLES; i++) {\n        vec4 pos_vel = texelFetch(iChannel0, ivec2(i, 0), 0);\n        vec2 pos = pos_vel.xy;\n        vec2 vel = pos_vel.zw;\n        col.r += 1./(.1+distance(uv, vel));\n        col.g += length(vel)/(.25+distance(uv, pos));\n        col.b += 1./(.1+distance(uv, pos));\n    }\n    col /= float(NUM_PARTICLES);\n    // fragColor = texelFetch(iChannel0, ivec2(fragCoord-.5), 0);\n    fragColor = vec4(col, 1.);\n}\n\n*/","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tfragColor = texelFetch(iChannel0, ivec2(fragCoord-.5), 0);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"ivec2 denormalize(vec2 pos) {\n    pos = pos*.5+.5;\n    return ivec2(pos*iChannelResolution[1].xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 pixel_coords = ivec2(fragCoord-.5);\n    vec4 new_pos_vel = texelFetch(iChannel0, pixel_coords, 0);\n    vec4 init_pos_vel = texelFetch(iChannel1, pixel_coords, 0);\n    vec2 force = texelFetch(iChannel1, denormalize(new_pos_vel.xy), 0).rg;\n    init_pos_vel = init_pos_vel*2.-1.;\n    force = force*2.-1.;\n\n    //vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    //vec3 force_tex = texelFetch(iChannel1, denormalize(uv), 0).rgb;\n\n    if(iFrame < 32) {\n        // SETUP\n        new_pos_vel = init_pos_vel;\n        // new_pos_vel = vec4(0., 0., 0., -1.);\n    } else if(pixel_coords.y == 0 && pixel_coords.x < NUM_PARTICLES) {\n        // PHYSICS\n        vec4 old_pos_vel = new_pos_vel;\n        vec2 old_pos = old_pos_vel.xy;\n        vec2 old_vel = old_pos_vel.zw;\n\n        vec2 acc = force/MASS;\n        vec2 new_vel = old_vel + acc*iTimeDelta*TIME_SCALE;\n        //new_vel = clamp(new_vel, -1., 1.);\n        new_vel = fract(new_vel*.5+.5)*2.-1.;\n        vec2 new_pos = old_pos + new_vel*iTimeDelta*TIME_SCALE;\n        new_pos = fract(new_pos*.5+.5)*2.-1.;\n        //if(new_pos.x < -1.)new_pos.x+=1.;\n        //if(new_pos.x > 1.)new_pos.x-=1.;\n        //if(new_pos.y < -1.)new_pos.y+=1.;\n        //if(new_pos.y > 1.)new_pos.y-=1.;\n        new_pos_vel = vec4(new_pos, new_vel);\n    }\n\n    fragColor = new_pos_vel;\n    // fragColor = vec4(force_tex, 1.);\n}\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const int NUM_PARTICLES = 100;\nconst float TIME_SCALE = 1.;\nconst float MASS = .5;","name":"Common","description":"","type":"common"}]}