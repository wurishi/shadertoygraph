{"ver":"0.1","info":{"id":"sddBWB","date":"1657155862","viewed":95,"name":"Not Exact Reuleaux Triangle SDF","username":"Envy24","description":"Not exact Reuleaux Triangle SDF With L2\nhttps://en.wikipedia.org/wiki/Reuleaux_triangle\nhttps://www.desmos.com/calculator/zsypq3sh5i","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","triangle","distance","euclid","reuleaux","l2"],"hasliked":0,"parentid":"7sdfDS","parentname":"Disk SDF WIth L2 Metric"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R                           iResolution\n#define AR                        ( R.x / R.y )                      // Aspect ratio (AR > 1.0).\n#define TO_CENTERED_NDC(SC)       ( ((SC)+(SC)-R.xy) / R.y )         // in range x=[-AR; AR], y=[-1.0; 1.0]\n#define NZMX                      ( (iMouse.x+iMouse.x-R.x) / R.x )  // in range [-1.0; 1.0]\n#define NZMY                      ( (iMouse.y+iMouse.y-R.y) / R.y )  // in range [-1.0; 1.0]\n#define LMB_IS_HOLD               ( iMouse.z > 0.0 )\n#define FIELD_SCALE                 3.0\n#define TAU                         6.2831853071795862\n#define PI                          3.1415926535897932\n\nfloat L2(vec2 B, vec2 E)\n{\n    vec2 D = E - B;\n    return sqrt(D.x*D.x + D.y*D.y);\n}\n\nfloat diskSDF_L2(\n    vec2 NDC, // (u, v)\n    vec2 C,\n    float R) \n{\n    return L2(C, NDC)-R;\n}\n\n/**\nfloat ReuleauxTriangleSDF_L2(\n    vec2 NDC,\n    float R) \n{\n    float h = NDC.x*NDC.x + (NDC.y-1.)*(NDC.y-1.),\n          k = (NDC.x+0.866)*(NDC.x+0.866),\n          l = (NDC.x-0.866)*(NDC.x-0.866),\n          m = (NDC.y+0.5)*(NDC.y+0.5);\n    \n    return \n        NDC.x >= 0.0 ?\n            h-k-m >= 0.0 ?\n                diskSDF_L2(NDC, vec2(0., 1.),       R) :\n                diskSDF_L2(NDC, vec2(-0.866, -0.5), R) :\n            h-l-m >= 0.0 ?\n                diskSDF_L2(NDC, vec2(0., 1.),      R) :\n                diskSDF_L2(NDC, vec2(0.866, -0.5), R);   \n}\n/* https://www.desmos.com/calculator/zsypq3sh5i */\nfloat ReuleauxTriangleSDF_L2(\n    vec2 NDC,\n    float R) \n{\n    float rad = sinOSC(0., TAU, iTime * 0.5);\n    vec2 C0 = rotateAroundZ(vec2(0, 1),             rad),\n         C1 = rotateAroundZ(vec2(0.8660254, -0.5),  rad),\n         C2 = rotateAroundZ(vec2(-0.8660254, -0.5), rad);\n    \n    float h = dot(NDC, C0-C1),\n          k = dot(NDC, C1-C2),\n          l = dot(NDC, C2-C0);\n \n    return\n        k >= 0.0 ?\n            l >= 0.0 ?\n                length(NDC - C0) - R :\n                length(NDC - C2) - R :\n            h >= 0.0 ?\n                length(NDC - C1) - R :\n                length(NDC - C0) - R;\n}\n/**/\n\n/* IQ coloring scheme */\nvec3 colorize_field(float dist, vec3 color)\n{\n    // Change color if dist is negative.\n    color = 1.0 - sign(dist) * color;\n    \n    // Attenuate color around edges.\n\tcolor *= 1.0 - exp(-4.0 * abs(dist));\n    \n    // Add interleaved curves.\n\tcolor *= 0.7 + 0.2 * cos(30.0 * dist);\n    \n    // Add white edges.\n    return mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 6./R.y, abs(dist)));\n}\n\nvec3 add_metric_circle(\n    vec2 NDC,\n    float r,\n    vec3 color)\n{\n    float unit = 7.0 / R.y;\n\n    vec2 M = \n        LMB_IS_HOLD ?\n            TO_CENTERED_NDC(iMouse.xy) * FIELD_SCALE :\n            rotateAroundZ(vec2(1, 0), iTime * 0.5) * 1.5;\n            //vec2(0);\n    \n    // Add point\n    color = mix(color, vec3(1.0, 1.0, 0.0), smoothstep(unit, 0.0, length(NDC - M) - 0.008));\n\n    float dist_form_point_to_box_edge = L2(NDC, M) - abs(ReuleauxTriangleSDF_L2(M, r));\n    float outline = abs(dist_form_point_to_box_edge);\n    \n    // Add metric circle\n    return mix(color, vec3(1.0, 1.0, 0.0), smoothstep(unit, 0.0, outline));\n}\n/* IQ coloring scheme */\n\nvoid mainImage( out vec4 O, in vec2 SC )\n{\n    vec2 NDC = TO_CENTERED_NDC(SC) * FIELD_SCALE;\n    float R = sinOSC(1.2, 3.0, iTime);\n    float minDist = ReuleauxTriangleSDF_L2(NDC, R);\n    \n    // Blending.\n    vec3 color = colorize_field(minDist, vec3(0.1, 0.4, 0.7));\n    color = add_metric_circle(NDC, R, color);\n\n    O = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/* Returns sine modulated value in range [min, max]. */\nfloat sinOSC(in float min, in float max, in float T)\n{\n    float v = (sin(T) + 1.0) * 0.5; // map T to [0.0, 1.0];\n    return min + v * (max - min);   // map T to [min, max];\n}\n\nvec2 rotateAroundZ(vec2 p, float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n\n    return vec2(\n        p.x * c - p.y * s,\n        p.x * s + p.y * c);\n}","name":"Common","description":"","type":"common"}]}