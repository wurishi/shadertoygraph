{"ver":"0.1","info":{"id":"wt2fDt","date":"1600191906","viewed":126,"name":"BzbzDemo","username":"avartation","description":"Something like a snake eating something","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["snake"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = pow(texture(iChannel0, uv),vec4(1.0/2.2));\n}\n\n\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define pi 3.14159265359\n\nfloat dist_norm(vec2 diff) {\n    float ratio = iResolution.y / iResolution.x;\n    return sqrt(pow(diff.x, 2.) + pow(diff.y*ratio, 2.));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float width = 2. * uv.x;\n    float speed = 4.;\n    \n    vec4 background_col = vec4((1.+sin(iTime))*40./255., \n                               (1.+sin(iTime+10.))*70./255., \n                               (1.+sin(iTime+5.))*74./255., 1.);    \n    \n    float blend_ratio = 0.005;\n    fragColor = texture(iChannel0, vec2(uv.x+0.01, uv.y));\n    fragColor = blend_ratio * background_col + (1. - blend_ratio) * fragColor;\n    \n    \n    ///////////////////////////////////////\n    \n    vec4 snakeColor = vec4(255./255., \n                           239./255., \n                           15./255., 1.);    \n    float x_offset = 0.75;\n    float y_offset = 0.5;\n    float diameter = 0.05;\n    \n    float snake_y = 0.5*(y_offset*sin(speed*iTime) + 1.);\n    vec2 snake_point = vec2(x_offset, snake_y);\n    \n    float snake_coef = dist_norm(uv - snake_point);\n    fragColor = (snake_coef <= diameter) ? snakeColor : fragColor;\n    \n    vec4 child_1_Color = vec4(227./255., \n                              40./255., \n                              40./255., 1.);    \n\n    vec2 child_1_point = vec2(0.6, snake_y-0.1);\n    float child_1_coef = dist_norm(uv - child_1_point);\n    fragColor = (child_1_coef <= diameter) ? child_1_Color : fragColor;\n    \n\n    \n    vec4 child_2_Color = vec4(0./255., \n                              255./255., \n                              0./255., 1.);\n    \n    vec2 child_2_point = vec2(0.6, snake_y+0.1);\n    float child_2_coef = dist_norm(uv - child_2_point);\n    fragColor = (child_2_coef <= diameter) ? child_2_Color : fragColor;\n    \n    \n    vec4 child_3_Color = vec4(86./255., \n                              166./255., \n                              227./255., 1.);\n    \n    vec2 child_3_point = vec2(0.75, snake_y-0.2);\n    float child_3_coef = dist_norm(uv - child_3_point);\n    fragColor = (child_3_coef <= diameter) ? child_3_Color : fragColor;\n    \n    \n    if (uv.x>=0.99) {\n        if (sin(uv.y*100.) > -0.01) {\n            fragColor = vec4(1.);\n        }\n    }\n}\n\n\n\n\n\n\n","name":"Buffer A","description":"","type":"buffer"}]}