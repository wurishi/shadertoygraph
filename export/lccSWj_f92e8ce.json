{"ver":"0.1","info":{"id":"lccSWj","date":"1714439864","viewed":57,"name":"Hypnotising Circles","username":"Ionut","description":"A multitude of circles going inwards to infinite.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","circle","repetition","shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cosine based palette, 4 vec3 params\nvec3 palette( in float t ) {\n    vec3 a =vec3(0.490, -0.032, 0.490);\n    vec3 b =vec3(0.420, 1.558, 0.420);\n    vec3 c =vec3(2.000, 0.248, 2.000);\n    vec3 d =vec3(-0.892, -0.558, -0.225);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    vec2 uv0 = uv;\n    \n   \n    \n    uv *= 2.0;\n    uv = fract(sin(uv)*1.0);\n    uv -= 0.5;\n    \n    \n    float d = length(uv);\n    \n    vec3 col = palette(length(uv0) + iTime*0.2);\n    \n    d = sin(d*2. + iTime)/8.;\n    d = abs(d);\n    \n    d = 0.02 / d;\n    \n    col *= d;\n    \n    // Time varying pixel color\n    \n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}