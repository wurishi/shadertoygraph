{"ver":"0.1","info":{"id":"lX3SDN","date":"1719035101","viewed":38,"name":"learn ploar ","username":"letbonsaibe","description":"same operation in cartesian and polar,  learn from the art of code : https://www.youtube.com/watch?v=r1UOB8NVE8I","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653\n\n\nfloat sameOperation(vec2 corrd, float repeat) {\n    corrd.x += iTime * 0.1;\n    \n    corrd.x = fract(corrd.x * repeat);\n    corrd.x = min(corrd.x, 1.0 - corrd.x);\n    return 0.01 / (corrd.x - corrd.y);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = min(mod(iTime, 2.0), mod(-iTime, 2.0));\n    vec2 uv = (2.*fragCoord.xy - iResolution.xy) / iResolution.y;\n    vec2 st = vec2(atan(uv.x, uv.y), length(uv));\n    st.x = st.x / 2.0 / PI + .5;\n    \n    float repeat = 3.0;\n    \n    float d = sameOperation(st, repeat) +  sameOperation(uv, repeat);\n    fragColor = vec4(vec3(d),1.0);\n}","name":"Image","description":"","type":"image"}]}