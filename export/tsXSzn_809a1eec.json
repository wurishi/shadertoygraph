{"ver":"0.1","info":{"id":"tsXSzn","date":"1550436731","viewed":581,"name":"Soul  - Distance Fields ","username":"synergyseeker1","description":"Exploring distance fields and cheap light effect, color mixing","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["shader","distance","lights","fields","shaping","artofshadersartofshaders3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// color circle part 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){   \n\t// normailze and adjsut for ratio\n    vec2 res = iResolution.xy,\n    uv = (fragCoord*2.0-res ) / res.y;\n    \n    //initilize colors\n\tvec4 background = vec4(.2,.7,.7,1.0)*-uv.y*.3*cos(uv.x); \n    vec4 color = vec4(1.0,.7,.2,1.0);\n    \n\t// calculate fragment distance from center\n    float d = length(uv*4.0); \n    uv+=uv/d*cos(d-iTime);\n    float shape = .2/length(fract(uv*1.5)-.5);\n    color*=shape*uv.y;\n    \n    \n    \n    //output final color\n\tfragColor = mix(background, color, color.a);\n}\n\n\n","name":"Image","description":"","type":"image"}]}