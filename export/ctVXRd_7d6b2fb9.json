{"ver":"0.1","info":{"id":"ctVXRd","date":"1686297819","viewed":76,"name":"Mandelbrot set zoom test","username":"Samuil","description":"Zooms in the Mandelbrot set fractal, but only to a certain point","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette (float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, .416, .557);\n\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvec2 iter(vec2 z, vec2 c){\n    return vec2(z.x * z.x - z.y * z.y + c.x, 2. * z.x * z.y + c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float speed = iTime*iTime*iTime*iTime/8.;\n    vec2 fc = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    fc /= speed;\n    fc.x -= 1.5/iTime*iTime;\n    vec2 c = fc;\n    vec2 z = vec2(0., 0.);\n    float i2 = 0.;\n    float f = 1.;\n    vec3 col;\n    float limit = 2048.;\n    \n    //fc.x -= iTime*speed*sqrt(2.);\n    \n    for (float i = 0.; i <= limit; i ++){\n        i2 += 1.;\n        if (abs(z.x) > 2.5 || abs(z.y) > 2.) {\n            break;\n        }\n        z = iter(z, c);\n    }\n    \n    if (i2 >= limit||i2 == 0.){\n        col = vec3(0.,0.,0.);\n    } else {\n        col = palette(0.015*i2*f + iTime/8.);\n    }\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}