{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define vrot 0.02  // speed\n#define forme 0.5 // forme\n\n\n\n\n\n float f(vec2 X)\n {\n\t\n    float a = (atan (X.y ,X.x));\n\ta = a - iTime * vrot;\n   \n\tfloat r = sqrt(X.x * X.x + X.y * X.y);\t\n    float variation = forme *( 10.0+ (10.0*sin(iTime/10.0)));\n    float cal =  (r -1.0 ) + 2.0*( sin(variation *a  + 11.0 *r*r*r)/2.0);\n   \treturn cal;\n }\t\t\t\t \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.x= (uv.x -0.5)/0.25;\n\tuv.y = (uv.y -0.5)/0.25;\t\n\t\n\t\n\tfloat courbe = smoothstep ( 0.5, 0.51, abs(f(uv)));\n    if (courbe == 0.0)\n\t  {\n\t    float bleu = abs(f(uv));\n\t    float red = smoothstep(-1.0,1.0,sin(iTime));\n\t    float green = smoothstep(-1.0,1.0,cos( fract(iTime/10.0)));\n\t    fragColor = vec4(red,green,bleu,1.0);\n\t\t}\n\t  else \n\t  {\n\t\tfragColor = vec4(0.22,0.1,log(length(uv)),1.0);\n\t    }\n\n\n}\n\n\n\n\n\n\n\n\n //\t\t\t\t\n//vec2 rotate(vec2 p, float angle) {\n//return p*mat2(cos(angle),sin(angle),-sin(angle),cos(angle));\n//}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MssGzl","date":"1378598933","viewed":143,"name":"simple rosace","username":"vincent","description":"test one","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["testone"],"hasliked":0,"parentid":"","parentname":""}}