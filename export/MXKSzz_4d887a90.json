{"ver":"0.1","info":{"id":"MXKSzz","date":"1719851727","viewed":46,"name":"lesson1-od","username":"ODtian","description":"lesson1 shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// #iUniform float move_speed = 10.0\n// #iUniform float move_dur = 10.0\n// #iUniform float circle_r = 0.3\n// #iUniform float box_r = 0.25\nconst float move_speed = 40.0;\nconst float move_dur = 400.0;\nconst float circle_r = 0.1;\nconst float box_r = 0.15;\n\n#define WRAP(x) ((x) * 0.5 + 0.5)\n#define WRAP_SIN(x) WRAP(sin(x))\n\nfloat circle(vec2 pos, float r) {\n    return length(pos) - r;\n}\n\nfloat box(vec2 pos, float r) {\n    vec2 x = step(r / 2.0, pos) * 2.0 - 1.0;\n    vec2 y = step(-r / 2.0, pos) * 2.0 - 1.0;\n    return (x.x + x.y) * (y.x + y.y);\n}\n\nfloat box2(vec2 pos, vec2 a) {\n    vec2 r = abs(pos) - a;\n    return max(r.x, r.y);\n}\n\nfloat box3(vec2 pos, vec2 a) {\n    vec2 d = abs(pos) - a;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\n\nfloat boxr(vec2 pos, vec2 a, float s) {\n    vec2 r = abs(pos) - a + s;\n    return max(r.x, r.y) - s;\n}\n\nfloat uni(float a, float b) {\n    return min(a, b);\n}\n\nfloat inter(float a, float b) {\n    return max(a, b);\n}\n\nfloat sub(float a, float b) {\n    return max(a, -b);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    float asp = iResolution.x / iResolution.y;\n    vec2 pos = uv - 0.5;\n    pos.y /= asp;\n    \n    float scene_circle = circle(pos, circle_r), scene_box = box2(pos, vec2(box_r));\n    \n    float scene = mix(scene_circle, scene_box, WRAP_SIN(iTime));    \n    // float scene = uni(scene_circle, scene_box);\n    \n    float move_dir = step(0.0, scene) * 2.0 - 1.0;    \n    // fragColor =  vec4(step(0.0, scene));\n    \n    fragColor = vec4(WRAP_SIN(iTime * move_speed * move_dir + (abs(pos.x) + abs(pos.y)) * move_dur));\n    // fragColor = vec4(step(0.0, mix(circle(pos, 0.1), boxr(pos, vec2(0.25), 0.31), sin(iTime) * 0.5 + 0.5)));\n    //fragColor = vec4(step(scene));\n}","name":"Image","description":"","type":"image"}]}