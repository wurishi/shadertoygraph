{"ver":"0.1","info":{"id":"wdlXWj","date":"1552249345","viewed":376,"name":"Tuto008 Music Sun","username":"arthurstammet","description":"Music Sun\nmy step by step tutorial 9\nby Arthur Stammet, 03.2019\nSoundtrack composed by Arthur Stammet : https://soundcloud.com/arthur-stammet/minimals","likes":2,"published":3,"flags":64,"usePreview":0,"tags":["sun","tutorial","music"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XtlGD4","filepath":"https://soundcloud.com/arthur-stammet/minimals","previewfilepath":"https://soundcloud.com/arthur-stammet/minimals","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* ************************************************************************************* \n\nMusic Sun\n\nBasic tutorial 9\nby Arthur Stammet, 03.2019\n\nSoundtrack composed by Arthur Stammet : https://soundcloud.com/arthur-stammet/minimals\n\n************************************************************************************* */\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // set the center to the middle of the screen and make the pixels quadratic\n    vec2 p = (fragCoord-.5*iResolution.xy)/iResolution.y; \n    \n    // Soundtrack-Analysis\n    vec2 uv = fragCoord/iResolution.xy;\n    float spect = texture(iChannel0, vec2 (uv.x, uv.y)).x; //\t\t\t(animated)\n    float dynamics = texture(iChannel0, vec2 (0.002, 0.0)).x; //\t\t(animated)\n    \n    // change values here --------------------------------------------------------------\n\n\t// Color-Cycling RG-Values for the sun\n    float SpeedRG = iTime * 0.5;\n\n\t// Parameters for the Lissajous Curve ( Ellipse if SpeedX = SpeedY )\n    float SpeedX = iTime*.11 ;\n    float SpeedY = iTime*.12 ;\n\n    float radius = .1+(dynamics*0.25); // radius of the sun ( 0.5 = height of the screen ) \n    float blur = 0.05; // low values for sharper edges\n    \n    // ---------------------------------------------------------------------------------\n    \n    // colorizing the sun ( yellow <> orange )\n    float SpeedR = iTime * 0.7;\n    float red = 0.8 + sin(SpeedRG) * 0.15; \t\t// 0.0 <> 1.0 \t\t\t(animated)\n\tfloat green = 0.7 + sin(SpeedRG) * 0.1 ;\t// 0.0 <> 1.0 \t\t\t(animated)\n\tfloat blue = 0.3; \t\t\t\t\t\t\t// 0.0 <> 1.0\n    vec3 sun = vec3( red, green, blue ); // \t\t\t\t\t\t\t(animated)\t\n\n    // creating a Lissajous Curve for the sun\n    float CenterX = sin( SpeedX ) * 0.4; //\t\t\t\t\t\t\t\t(animated)\n\tfloat CenterY = cos( SpeedX ) * 0.2; //\t\t\t\t\t\t\t\t(animated)\n\tvec2 CenterXY = p - vec2( CenterX, CenterY ); // center of the sun\t(animated)\n\n    sun *= smoothstep( radius, radius-blur, length(CenterXY)); // moving sun\n    \n    // colorizing the background = animated realtime spectrogram of the soundtrack\n    float Bred = spect/2.; \t\n\tfloat Bgreen = spect/2.;\t\n\tfloat Bblue = 0.7-spect/2.; \t\n\tvec3 back = vec3( Bred, Bgreen, Bblue );  // colorized background \t(animated)\n\n    fragColor = vec4(sun + back, 1.0);\n}","name":"Image","description":"","type":"image"}]}