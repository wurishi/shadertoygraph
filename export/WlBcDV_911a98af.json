{"ver":"0.1","info":{"id":"WlBcDV","date":"1595449524","viewed":115,"name":"v0Circles4.glsl","username":"jorge2017a1","description":"Codigo original de keijiro\nhttps://github.com/keijiro/ShaderSketches/tree/master/Fragment\nhttps://github.com/keijiro/ShaderSketches\nhttps://github.com/keijiro","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["v0circles4glsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MONOCHROME 1\n\nvec3 circle(vec2 coord, float bias)\n{\n    float repeat = sin(iTime * 0.4) * 10.0 + 30.0;\n\n    float interval = iResolution.x / repeat;\n    vec2 center = iResolution.xy * 0.5;\n\n    float dist1 = distance(coord, center);\n    float num = max(floor(dist1 / interval + 0.5) + bias, 1.0);\n    float radius = num * interval;\n\n    float phase1 = iTime * 3.0 + radius * 0.04;\n    float phase2 = phase1 * 1.3426;\n    vec2 offs = vec2(sin(phase1), cos(phase2)) * interval * 0.5;\n    float dist2 = distance(coord, center + offs);\n\n    float width = interval * 0.33;\n    float c = clamp(width * 0.5 - abs(radius - dist2), 0.0, 1.0);\n\n#if MONOCHROME\n    return vec3(1, 1, 1) * c;\n#else\n    float c_r = 0.7 + 0.2 * sin(phase1 * 0.12);\n    float c_g = 0.5 + 0.2 * sin(phase1 * 0.34);\n    float c_b = 0.3 + 0.2 * sin(phase1 * 0.176);\n    return vec3(c_r, c_g, c_b) * c;\n#endif\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy;\n    vec3 c1 = circle(p, -1.0);\n    vec3 c2 = circle(p,  0.0);\n    vec3 c3 = circle(p,  1.0);\n    fragColor = vec4(max(max(c1, c2), c3), 1);\n}\n\n","name":"Image","description":"","type":"image"}]}