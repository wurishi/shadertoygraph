{"ver":"0.1","info":{"id":"MljBDD","date":"1515888727","viewed":134,"name":"12/2018","username":"rimina","description":"This shader is part of my daily shader challenge. Today I tried to do some kind of voronoi thing. Inspiration is again from https://thebookofshaders.com/ and Iq's articles.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","dailyshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\n//Hash method from https://www.shadertoy.com/view/4djSRW\n#define HASHSCALE3 vec3(.1031, .1030, .0973)\n\nvec2  Hash22F(vec2  p ){\n    vec3 p3 = fract(vec3(p.xyx ) * HASHSCALE3); \n    p3 += dot(p3, p3.yzx  + 19.19);\n    return fract((p3.xx   + p3.yz  ) * p3.zy  );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //Tiling space..\n    vec2 q = uv *9.0;\n    vec2 f = fract(q);\n    vec2 i = floor(q);\n    \n    float t = 100.0;\n    \n    vec2 n[9];  \n    n[0] = vec2(-1.0, -1.0);\n    n[1] = vec2(-1.0,  0.0);\n    n[2] = vec2(-1.0,  1.0);\n    n[3] = vec2(0.0,  -1.0);\n    n[4] = vec2(0.0,   0.0);\n    n[5] = vec2(0.0,   1.0);\n    n[6] = vec2(1.0,  -1.0);\n    n[7] = vec2(1.0,   0.0);\n    n[8] = vec2(1.0,   1.0);\n    \n    for(int it = 0; it < 9; ++it){\n        vec2 p = Hash22F(i+n[it]);\n        p = (1.0+sin(iTime*0.5 + 2.0*PI*p))*0.5;\n        float d = length(n[it]+p-f);\n        t = min(t, d);\n    }\n    \n    vec3 col = vec3(0.8, 0.6, 0.2) * vec3(t);\n    col += vec3(0.2, 0.3, 0.7);\n    col *= 0.75;\n    col = smoothstep(0.2, 0.8, col);\n    \n    col = pow(col, 1.0/vec3(2.2));\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}