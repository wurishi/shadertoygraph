{"ver":"0.1","info":{"id":"XXdSz8","date":"1718619391","viewed":57,"name":"Bayer experiment","username":"tiusic","description":"Implementing 256 level bayer dithering using two layers of 16 level dithering (which happens to fit nicely in a mat4).","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const mat4 bayer = mat4(\n   0, 12,  3, 15,\n   8,  4, 11,  7,\n   2, 14,  1, 13,\n  10,  6,  9,  5);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  float darkness = 0.5 + 0.5 * cos(iTime * 0.2);\n  \n  ivec2 uv = ivec2(fragCoord);\n  ivec2 uv1 = uv % 4;\n  ivec2 uv2 = (uv % 16) / 4;\n  float b1 = bayer[uv1.y][uv1.x];\n  float b2 = bayer[uv2.y][uv2.x];\n  float b = (16.0 * b1 + b2 + 1.0) / 257.0;\n  fragColor = b < darkness ? vec4(0, 0, 0, 1) : vec4(1, 1, 1, 1);\n}","name":"Image","description":"","type":"image"}]}