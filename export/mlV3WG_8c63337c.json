{"ver":"0.1","info":{"id":"mlV3WG","date":"1684601483","viewed":71,"name":"Growing Lichen","username":"CeruleanBoolean141","description":"Click to place different colored Lichen around the image, watch them grow!\n\nFound this nice, organic fill pattern just playing around.  It reminds me of lichen growing in nature.  It is essentially a normal fill procedure, but over a random noise map.  \n\n","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["draw","fill"],"hasliked":0,"parentid":"mlK3WG","parentname":"Draw and Fill [RNG]"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Created by CeruleanBoolean141 May 2023\n\n//read pixel color from image in iChannel0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor =  texelFetch(iChannel0, ivec2(fragCoord), 0);\n}\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//This Buffer uses mouse position and click-status to change pixel color, an and store it in iChannel0\n\n#define BRUSHWIDTH 1.0\n#define FADE 1.0\nvec3 rng(vec2 p){\n    vec3 a = fract(p.xyx*vec3(123.34, -234.45, 456.78));\n    a += dot(a, a + 55.43);\n    return fract(vec3(a.x*a.y , a.y*a.z, 0.5))+0.25;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 black = vec3(0.0);\n    vec3 c = texelFetch(iChannel0, ivec2(fragCoord), 0).xyz; //read in color from texture\n    if(c == black){       \n        float inc = 1.0;\n        vec3 colSouth = texelFetch(iChannel0, ivec2(fragCoord.x, fragCoord.y-inc), 0).xyz;//try to access neighbor in texture\n        vec3 colNorth = texelFetch(iChannel0, ivec2(fragCoord.x, fragCoord.y+inc), 0).xyz;\n        vec3 colEast = texelFetch(iChannel0, ivec2(fragCoord.x + inc, fragCoord.y), 0).xyz;\n        vec3 colWest = texelFetch(iChannel0, ivec2(fragCoord.x - inc, fragCoord.y), 0).xyz;\n        float g = 0.85;\n        if(iMouse.z > 0.){ //mouse button down\n            if(distance(iMouse.xy, fragCoord) < BRUSHWIDTH){\n                c = rng(iMouse.xy);\n            }           \n        } \n        else if(colSouth != c){ \n            if(g > rng(vec2(uv)).x){\n                c = colSouth;\n            }\n        }\n        else if(colNorth != c){ \n            if(g > rng(vec2(uv)).x){\n                c = colNorth;\n            }\n        }\n        else if(colEast != c){ \n            if(g > rng(vec2(uv)).x){\n                c = colEast;\n            }\n        }\n        else if(colWest != c){ \n            if(g > rng(vec2(uv)).x){\n                c = colWest;\n            }\n        }\n        else if(colSouth != c|| colNorth != c || colEast != c || colWest != c){\n            c = (colWest + colSouth + colEast + colNorth)/4.;\n        }\n    }\n   \n  \n   \n    fragColor = vec4(c*FADE,0.0); //store color in iChannel0   \n}","name":"Buffer A","description":"","type":"buffer"}]}