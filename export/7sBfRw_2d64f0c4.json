{"ver":"0.1","info":{"id":"7sBfRw","date":"1645826764","viewed":212,"name":"z -> z^2","username":"RayWorld","description":"each point gets it's color from the webcam pixel at it's square","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["webcam","complexnumbers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 z = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 w = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y);\n    w = (w + vec2(1,1)) / 2.0;\n    vec3 col = vec3(0.0,0.0,0.0);\n    if (0.0 <= w.x && w.x <= 1.0 && 0.0 <= w.y && w.y <= 1.0) {\n        col = texture(iChannel0, w).rgb;\n    }\n    fragColor= vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}