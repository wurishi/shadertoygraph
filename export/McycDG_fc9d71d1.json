{"ver":"0.1","info":{"id":"McycDG","date":"1732307733","viewed":65,"name":"Psyph image visualizer?","username":"Psyph","description":"made this as a music visualizer and then realized that there is no reason that it has to take sound as an input, and then put an image into it. thought it looked cool. still works great with sounds too.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592654\n\nvec3 palette(float t)\n{\n    /*\n    vec3 a=vec3(0.500,0.500,0.500);\n    vec3 b=vec3(1.000,1.000,1.000);\n    vec3 c=vec3(0.310,0.310,0.310);\n    vec3 d=vec3(0.000,0.667,0.333);\n    */\n    \n    vec3 a=vec3(0.888,0.608,0.333);\n    vec3 b=vec3(0.588,0.418,0.250);\n    vec3 c=vec3(0.750,0.750,0.750);\n    vec3 d=vec3(0.000,0.667,0.333);\n    \n\treturn a+b*cos(2.*PI*(c*t+d));\n}\nvec2 rot2d(vec2 v, float ang)\n{\n    float s=sin(ang);\n    float c=cos(ang);\n    return v*mat2(c,-s,s,c);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec3 col=vec3(0.);\n    //vec3 col=texture(iChannel0,uv).xyz;\n    \n    float scal=512./iResolution.x;\n    //fr is the positionin the channel. where x is frequency\n    float fr=fragCoord.x*scal;\n    \n    //fd is volume at the frequency of the current fr\n    //float fd1=texelFetch(iChannel0,ivec2(fr,0),0).x;\n    \n    /*\n    if(fragCoord.y<fd*iResolution.y)\n    {\n        col=vec3(.8*fd)+.2;\n    }\n    */\n    \n    \n    float le=length(uv)*(.2*(sin(iTime/2.)+1.)+1.);\n    float le2=mod(le,1.);\n    float fd=texelFetch(iChannel0,ivec2((le2)*580.,0),0).x;\n    \n    \n    //middle bit?\n    if(le2<.9)\n    {\n        float fd2=texelFetch(iChannel0,ivec2(le2*200.,0),0).x;\n        col=(.9-le2*3.)*fd2*palette(iTime+le);\n    }\n    \n    \n    uv=rot2d(uv,sin(fd+iTime/2.)*PI);\n    //if(le>1.) uv=rot2d(uv,PI/2.);\n    float a=(atan(uv.y/uv.x)/PI+1.)/2.;\n    \n    //blue circle\n    ////vec2 uv2=rot2d(uv,PI/4.);\n    ////float a2=(atan(uv.y/uv.x)/PI+1.)/2.;\n    col+=(3.5-le)*(.9-a)*fd*vec3(.07,.1,.9);\n\n    //colored lines\n    if(a>fd&&a<fd+.08)\n    {\n        //col+=vec3(.8,.05,0.)*3.*fd;\n        col+=palette(2.*a+3.*fd+iTime/4.)*.8;\n    }\n    //col=vec3(length(uv));\n    //if(le>1.) col*=a*1.8;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}