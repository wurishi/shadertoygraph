{"ver":"0.1","info":{"id":"ftSBRV","date":"1652409943","viewed":76,"name":"ScreenSplit Attempt","username":"LF1783","description":"This is my little bad attempt on coding a shader that splits your screen in two demensional displays.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["trashold"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 col;// = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n   float PI = 3.1415926538; //Tbh the rest of the digits after the three \"3.14\" don't matter at all.\n  // col -= length(uv)*PI;\n   uv.x += sin(PI-uv.x);\n   uv.x -= floor(\n   uv.x*abs(PI*uv.x/PI)/uv.x);\n   \n   // Output to screen\n    fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"}]}