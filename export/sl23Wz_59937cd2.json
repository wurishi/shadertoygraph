{"ver":"0.1","info":{"id":"sl23Wz","date":"1623853468","viewed":157,"name":"object tracking","username":"Khrebtov_M","description":"traces the object that you choose.","likes":2,"published":1,"flags":34,"usePreview":0,"tags":["color","tracing","tracking"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//Place the object you want to trace into the center and press mouse. \n//The object must be contrast with background for tracker to be more precise\n//more comments in buffers\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n    vec2 pos=texture(iChannel2,vec2(0.0)).xy;\n    if(length((uv-pos)/iResolution.yx*iResolution.y)<0.02)  fragColor = vec4(1.0);\n\n   \n\n  \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//this buffer is for camera, nothing  interesting \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy;\n\n    \n    fragColor = texture(iChannel0,uv);\n    \n    if(texture(iChannel1,vec2(0.0)).x==0.0) if((length((uv-vec2(0.5))/iResolution.yx*iResolution.x)>0.1)&&((length((uv-vec2(0.5))/iResolution.yx*iResolution.x)<0.11))) fragColor = vec4(1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//this buffer calculates  average color of object in the center when mouse button is pressed\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     if((fragCoord==vec2(0.5,0.5))&&(iMouse.z>0.1))\n     {\n         vec2 uv=vec2(0.5);\n         vec3 sum=vec3(0.0);\n         float k=0.0;\n         for(int i=-10;i<=10;i++) for(int j=-10;j<=10;j++)\n         {\n             sum+=texture(iChannel0,uv+vec2(i,j)/iResolution.xy).xyz;\n             k+=1.0;\n         }\n         \n             \n     \n         \n         fragColor=vec4(normalize(sum/k),1.0);\n         return;\n     }\n\n    \n    fragColor = texture(iChannel1,fragCoord/iResolution.xy);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"//we calculate the average coordinates for pixels that are close enough \n//to the color of object that we calculated in buffer b\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   if(fragCoord.x>0.5) return;\n   if(fragCoord.y>0.5) return;\n    vec2 sum=vec2(0.0);\n    float k=0.0;\n    for(float i=0.0;i<=1.0;i+=0.01) for(float j=0.0;j<=1.0;j+=0.01) if((dot(texture(iChannel1,vec2(0.0)).xyz,normalize(texture(iChannel0,vec2(i,j)).xyz)))>0.97)\n    {\n        sum+=vec2(i,j);\n        k+=1.0;\n    }\n    \n     fragColor = vec4(sum/k,1.0,1.0);\n    \n}","name":"Buffer C","description":"","type":"buffer"}]}