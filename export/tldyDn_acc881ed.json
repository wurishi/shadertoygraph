{"ver":"0.1","info":{"id":"tldyDn","date":"1608835191","viewed":191,"name":"Vibing sinusoïdes","username":"Tarquin","description":"Glowing sinusoïdes moving with style","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["glow","sinusode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Arthur Jacquin - 2020\n// https://www.linkedin.com/in/arthur-jacquin-631921153/\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define PI 3.14159265359\n#define CT() abs(sin(iTime))\n\nvec3 GlowingLine(vec2 fragCoord, vec3 color, float hoffset, float voffset, float hscale, float vscale, float timescale)\n{\n    float glowRadius = 0.04 * iResolution.y * (fragCoord.x / iResolution.x + 1.0) ;\n    float glowIntensity = 1.0 * fragCoord.x / iResolution.x;\n    float twopi = 2.0 * PI;\n    float thickness = 1.5;\n    float curve = thickness - abs(fragCoord.y - (sin(mod(fragCoord.x * hscale / 100.0 / iResolution.x * 1000.0 + iTime * timescale + hoffset, twopi)) * iResolution.y * 0.25 * vscale + voffset));\n    float i = clamp(curve, 0.0, 1.0);\n\n    i += clamp((glowRadius + curve) / glowRadius, 0.0, 1.0) * glowIntensity;\n    return i * color;\n}\n\nvec3 rainbowGradient(float t) {\n\tvec3 c = 1.0 - pow(abs(vec3(t) - vec3(0.65, 0.5, 0.2)) * vec3(3.0, 3.0, 5.0), vec3(1.5, 1.3, 1.7));\n\tc.r = max(0.15 - (abs(t - 0.04) * 5.0) * (abs(t - 0.04) * 5.0), c.r);\n\tc.g = (t < 0.5) ? smoothstep(0.04, 0.45, t) : c.g;\n\treturn clamp(c, 0.0, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = vec2(fragCoord.xy / iResolution.xy);\n\n    vec3 color = vec3(0.0039, 0.0039, 0.1922);\n\n    color += GlowingLine(fragCoord.xy, rainbowGradient(0.15  * CT()), 0.0 + 2.4, iResolution.y / 2.0, abs(st.x - 1.0), abs(sin(iTime)) * st.x, 5.0);\n    color += GlowingLine(fragCoord.xy, rainbowGradient(0.1  * CT()), PI + 2.4, iResolution.y / 2.0, abs(st.x - 1.0), abs(sin(iTime + PI)) * st.x, 5.0);\n    color += GlowingLine(fragCoord.xy, rainbowGradient(0.3  * CT()), PI + 2.4, iResolution.y / 2.0, abs(st.x - 1.0), sin(iTime + PI * 0.5) * st.x, 5.0);\n    color += GlowingLine(fragCoord.xy, rainbowGradient(0.25 * CT()), PI + 2.4, iResolution.y / 2.0, abs(st.x - 1.0), sin(iTime - PI * 0.5) * st.x, 5.0);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}