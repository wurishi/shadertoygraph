{"ver":"0.1","info":{"id":"NtVBDy","date":"1665181401","viewed":157,"name":"Artober - Bathroom tiles","username":"Flopine","description":"Day 7 of artober, yet an other truchet XD","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","truchet","pattern","everyday","extrude"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define TAU (2.*PI)\n#define hr (vec2(sqrt(3.),1.)*.5)\n\n#define hd(u) max(abs(u.y), dot(abs(u),normalize(hr*2.)))\n#define circle(u,s) (length(u)-s)\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.02,fwidth(val-thre)))\n#define noise(u) textureLod(iChannel0, u, 0.).x\n\n\nstruct obj{\n    float d;\n    vec3 c;\n};\n\nobj minobj (obj a, obj b)\n{\n    if (a.d<b.d) return a;\n    else return b;\n}\n\nvoid moda(inout vec2 p, float rep, float aoff)\n{\n    float per = TAU/rep;\n    float a = mod(atan(p.y,p.x)-per*aoff, per)+per*.5;\n    p = vec2(cos(a),sin(a))*length(p);\n}\n\nvec4 hexgrid (vec2 uv)\n{\n    vec2 ga = mod(uv,hr*2.)-hr, gb=mod(uv-hr,hr*2.)-hr, \n    guv=(dot(ga,ga)<dot(gb,gb))? ga:gb, gid = uv-guv;\n    return vec4(guv,gid);\n}\n\nfloat tiles (vec2 uv)\n{\n    vec4 hg = hexgrid(uv);\n    float hex = hd(hg.xy);\n    return AAstep(0.46,hex);\n}\n\nfloat truchet (vec2 uv)\n{\n    vec4 hg = hexgrid(uv);\n    float t;\n    if (noise(hg.zw*.27) <.5 ) \n    {\n        hg.y = abs(hg.y);\n        hg.x += 0.57; // 1./sqrt(3.)\n        t = circle(hg.xy,0.285);\n        hg.xy -= vec2(0.57*1.5, 0.5);\n        t = min(t, circle(hg.xy,0.285));       \n    }\n    \n    else \n    {\n        hg.y = abs(hg.y);\n        hg.x -= 0.57;\n        t = circle(hg.xy,0.285);\n        hg.xy += vec2(0.57*1.5, -0.5);\n        t = min(t, circle(hg.xy,0.285));\n        t = 1.-t*(1./t*t)-1.;\n    }\n    return t;\n}\n\nfloat extrude (vec3 p, float d, float h)\n{\n    vec2 w = vec2( d, abs(p.z) - h );\n    return min(max(w.x,w.y),0.0) + length(max(w,0.0));\n}\n\nobj SDF (vec3 p)\n{\n    obj tr = obj(extrude(p, truchet(p.xy), 0.01)-0.06, vec3(0.55,0.8,0.9));\n    p.z += 0.035;\n    float ts = tiles(p.xy); \n    p.z -= ts*0.005;\n    obj g = obj(abs(p.z), mix(vec3(1., .89, .85),vec3(0.1), ts) );\n    return minobj(tr,g);\n}\n\nvec3 gn (vec3 p)\n{\n    vec2 eps = vec2(0.001,0.);\n    return normalize(SDF(p).d-vec3(SDF(p-eps.xyy).d, SDF(p-eps.yxy).d, SDF(p-eps.yyx).d));\n}\n\nfloat AO (vec3 p, vec3 n, float e)\n{return clamp(SDF(p+e*n).d/e, 0. ,1.);}\n\nfloat spec (vec3 rd, vec3 l, vec3 n) \n{\n    vec3 h = normalize(l-rd);\n    return pow(max(dot(n,h),0.), 28.);\n}\n\nvec3 getcam (vec3 ro, vec3 ta, vec2 uv)\n{\n    vec3 f = normalize(ta-ro);\n    vec3 l = normalize(cross(vec3(0.,1.,0.),f));\n    vec3 u = normalize(cross(f,l));\n    return normalize(f + l*uv.x+ u*uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(0.001,0.001+iTime,-3.), rd=getcam(ro, vec3(0.,.5+iTime,0.),uv),\n    p=ro, col=vec3(0.), l=vec3(0.,2.5,-5.);\n    \n    bool hit=false; obj O;\n    \n    for (float i = 0.; i<64.; i++)\n    {\n        O = SDF(p);\n        if (O.d<0.001)\n        {\n            hit=true; break;\n        }\n        p += O.d*rd*.75;\n    }\n    \n    if (hit)\n    {\n        vec3 n = gn(p);\n        float li = max(dot(n,normalize(l)),0.);\n        float ao = AO(p,n,0.05)+AO(p,n,0.15)+AO(p,n,0.25);\n        col = mix(vec3(0.15,0.1,0.02), O.c, li) + spec(rd,l,n)* ao/3. ;\n    }\n    \n    // Output to screen\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}