{"ver":"0.1","info":{"id":"ftyGzD","date":"1637222175","viewed":166,"name":"Red X of Death","username":"brisingre","description":"Worrying aura","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["error","2dshapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdOrientedBox( in vec2 p, in vec2 a, in vec2 b, float th )\n{\n    float l = length(b-a);\n    vec2  d = (b-a)/l;\n    vec2  q = (p-(a+b)*0.5);\n          q = mat2(d.x,-d.y,d.y,d.x)*q;\n          q = abs(q)-vec2(l,th)*0.5;\n    return length(max(q,0.0)) + min(max(q.x,q.y),0.0);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float box1 = sdOrientedBox(uv, vec2(-1, -1), vec2(2, 2), .1);\n    float box2 = sdOrientedBox(uv, vec2(2, -1), vec2(-1, 2), .1);\n    \n    float x = min(box1, box2);\n    \n    float baseX = smoothstep(.00, .001, x);\n    \n    vec4 xColor = vec4(1., 0, 0, 1.) * ((sin(2. * iTime) + 1.)/2.);\n    vec4 bgColor = vec4(.5, 0, 0, 1.) * ((sin(11. * iTime) + 1.)/2.);\n    \n    // Output to screen\n    fragColor = mix(bgColor, xColor, baseX);\n}","name":"Image","description":"","type":"image"}]}