{"ver":"0.1","info":{"id":"XslBzH","date":"1494873714","viewed":107,"name":"Test noise distribution","username":"tloch14","description":"Testing something I read on twitter.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","rand"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float maxCheckerSize = 6.0f;\n    \nfloat CheckerValue(vec2 n)\n{\n//    float maxCheckerSize = 6.0f;\n    int checkerSize = 1<< int(iMouse.y / iResolution.y * maxCheckerSize + 1.0f);\n    return float((int(n.x)&checkerSize)^(int(n.y)&checkerSize));\n}\n\nfloat Diagonal(vec2 n)\n{\n    float checkerSize = ceil(iMouse.y / iResolution.y * maxCheckerSize);\n    float i = floor(n.y) + floor(n.x);\n    \n    if (mod(i, checkerSize) == 0.0) { return 1.0f;  }\n    else { return 0.0f; }\n}\n\n\nfloat v2rand( vec2 n )\n{\n\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract( iTime );\n    \n    float mouseXNorm = float(iMouse.x) / float(iResolution.x);\n    float color = 1.0f;\n    float rand = v2rand(fragCoord * t);\n    if(fragCoord.x < iResolution.x/2.0f)\n    {\n        color = rand;\n    }\n    else\n    {\n        color = (rand * 0.5f) + CheckerValue(fragCoord) * mouseXNorm;\n        //color = (rand * 0.5f) + Diagonal(fragCoord) * mouseXNorm;\n    }\n    \n    fragColor = vec4(color);\n} ","name":"Image","description":"","type":"image"}]}