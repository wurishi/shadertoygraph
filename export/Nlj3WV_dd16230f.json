{"ver":"0.1","info":{"id":"Nlj3WV","date":"1624749374","viewed":109,"name":"psenough 28 people shader jam","username":"rohtie","description":"Make sure to enable sound on Buffer A for the audio reactivity!","likes":7,"published":1,"flags":96,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4tfSWB","filepath":"https://soundcloud.com/lug00ber/flipside-lug00ber-lovin-u","previewfilepath":"https://soundcloud.com/lug00ber/flipside-lug00ber-lovin-u","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\n\n\n\n\n#define time iTime\n#define texPreviousFrame iChannel0\n#define texFFT iChannel1\n#define texNoise iChannel2\n\n\n\nmat2 rotate(float a) {\n\treturn mat2(-sin(a), cos(a),\n\t\t     cos(a), sin(a));\n}\n\nfloat map(vec3 p) {\n\t\n\t//p.zy *= rotate(sin(time * 20.) * .2);\n\tp.xz *= rotate(sin(time * 20.) * .5 + 2.);\n\t\n\tfloat r = 1.;\n\t\n\t\n\tp.x = abs(p.x);\n\t\n\t{\n\t\tfloat head = length(p * vec3(1.0, 1.5 + sin(p.x) * .4 + sin(time * 2.) * .5, 1.0)) - 1.2;\n\t\t//head = max(head, -(length(p - vec2(0.5, 0.)) - .5);\n\t\t\n\t\tfloat arms = length(p - vec3(1.0, sin(time * 2.) * .2 + 0.5 + sin(p.x * 5. + 3.), 0.)) - .4;\n\t\t\n\t\thead = min(head, arms);\n\t\t\n\t\tfloat eyes = length(p - vec3(.5, 0. + sin(time * 2.) * .05, 1.2)) - .2;\n\t\tfloat eyes_sock = length(p - vec3(.5, 0. + sin(time * 2.) * .05, .8)) - .45;\t\t\n\t\t\n\t\thead = min(head, eyes);\n\t\thead = max(head, -eyes_sock);\n\t\t\n\t\tfloat body = length(p * vec3(1., .4, 1.) - vec3(0., -1.5, -1.5)) - 1.5;\n\t\thead = min(head, body);\n\t\t\n\t\t\n\t\tr = min(r, head);\n\t}\n\t\n\t{\n\t\t\n\t}\n\t\n\t\n\treturn r - smoothstep(0.1, 0.3, texture(texNoise, p.xz * .5 + time * 0.05 + sin(p.y * 4.)).r) * 0.03;\n\t\n/*\tfloat r = 1.;\n\t\n\tfor (int i=0; i<5; i++) {\n\t\tp.y += sin(p.x * 6. + time * 4.) * .5;\n\t\tp.x += sin(p.y * 2.);\t\t\n\t\t\n\t\tp.xz *= rotate(i * .1);\n\t\tp.x += 1.5;\n\t\t\n\t\tr = min(r, length(max(abs(p) - .4, 0.)) - .5);\n\t}\n\t\n\treturn r;*/\n}\n\nvoid mainImage( out vec4 out_color, in vec2 fragCoord )\n{\t\n    vec2 p = fragCoord/iResolution.xy;\n\tvec2 q = p;\n    p -= 0.5;\n    p.x *= iResolution.x / iResolution.y;\n\n//vec2 p = vec2(gl_FragCoord.x / v2Resolution.x, gl_FragCoord.y / v2Resolution.y);\n\n\t//p -= 0.5;\n\t//p /= vec2(v2Resolution.y / v2Resolution.x, 1);\n\tvec2 uv = p;\n\t\n\n\tfloat ket = 0.;\n\n\tif (p.x > 0.) {\n\t\tp.y += sin(p.x * 2. + time * 4.) * .15;\n\t\tp.y = 1. - p.y - 1.;\n\t\tket = 1.;\n\t}\n\t\n\t\n\tif (length(max(abs(p) - vec2(.75, .35), 0.)) > .1) {\n\t\tout_color = vec4(1.);\n\t\treturn;\n\t}\n\t\n\n\tp.x += texture(texFFT, vec2(p.y * .5 + .5, 0.)).r * .12;\n\t\n\tp.y += 0.075;\n\tp.x = abs(p.x) - .5;\n\tp *= 0.8;\n\t\n\t\n\tvec3 cam = vec3(0., 0., 5.);\n\tvec3 ray = vec3(p, -1.);\n\t\n\tfloat dist = 0.;\n\t\n\tfor (int i=0; i<25; i++) {\n\t\tvec3 p = cam + ray * dist;\n\t\t\n\t\tfloat tmp = map(p);\n\t\t\n\t\tif (tmp < 0.01) {\n\t\t\tvec3 light = vec3(sin(time * 0.5) * 1.2, 0., -1.);\n\t\t\tfloat shadow = map(p - light);\n\t\t\tout_color = vec4(1. - ket, 1., p.y * 1. + 0.85 + ket * 200., 0.) * shadow * smoothstep(0.5, 0.25, texture(texNoise, p.xz * .6 + time * 0.05 + sin(p.y * 4.)).r) * 1.2 + abs(p.x) * .1 + vec4(mod(p.y, .2), 0., 0., 0.);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tdist += tmp;\n\t}\n\t\n\t\n\t\n\t\n\t\n\t//p.y = abs(p.x) * .5;\n\t\n\tp.x += abs(p.y);\n\t\n\tp.y += sin(p.x * 4. + tan(time * .2)) * .5 * ket;\n\tp.x += sin( + time * 2. + p.y * 5. + tan(p.x * 2. + time * .5)) * .4 * ket;\n\tp.y += texture(texFFT, vec2(p.x, 0.)).r * .8;\n\t\n\n\t\n\tif (length(p) > 0.5) {\n\t\t//q *= 1.05;\n\t\tq -= 0.0001;\n\t\t\n\t\tif (ket > 0.) {\n\t\t\tq.x *= .99;\n\t\t}\n\t\t\n\t\t//q.x -= 0.005;\n\t\t//q.y /= 1.1 + sin(p.x);\n\t\tout_color = texture(texPreviousFrame, q).brgr * vec4(.5, 1., sin(time * 20.), 2.);\n\t\treturn;\n\t}\n\t\n\tout_color = vec4(1. + sin(time), 5.5 + tan(time * 5.) + p.y * 1.5, abs(p.y), 0.).ggrr * .05 + tan(time * 5.);\n\t\n\tif (ket > 0.) {\n\t\tout_color = vec4(1. + sin(time * 20.), 1.5 + tan(time * 5.) + p.y * 1.5, abs(p.y), 0.) * 20.;\n\t}\n}","name":"Buffer A","description":"","type":"buffer"}]}