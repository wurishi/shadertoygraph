{"ver":"0.1","info":{"id":"WsKczm","date":"1602504008","viewed":387,"name":"Example 30 - textured sphere","username":"jt","description":"A lighted and textured sphere.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["example","lighting","sphere","textures","projection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n    vec3 v = vec3(p.x, p.y, sqrt(1.0 - p.x * p.x - p.y * p.y));\n    vec3 n = normalize(v);\n    vec3 l = vec3(0.0, 0.0, 1.0);\n    //vec3 l = vec3(sin(iTime), 0.0, cos(iTime));\n    float b = dot(n, l);\n\n    //vec2 q = vec2(0.5 - 0.5 * atan(n.z, n.x) / PI, -0.5 + 0.5 * p.y);\n    // https://en.wikipedia.org/wiki/Mercator_projection\n    vec2 q = vec2(0.5 - 0.5 * atan(n.z, n.x) / PI, -acos(p.y) / PI);\n    fragColor = b * texture(iChannel0, vec2(iTime / 10.0, 0.0) + q);\n    //fragColor = vec4(n, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}