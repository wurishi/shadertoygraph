{"ver":"0.1","info":{"id":"4s3GW4","date":"1449517135","viewed":217,"name":"APeriodicTilingPinWheel","username":"jt","description":"Aperiodic pinwheel tiling. Attempt to construct the aperiodic pinwheel-tiling [url]https://en.wikipedia.org/wiki/Pinwheel_tiling[/url].\nUnfortunately very slow & failed to assign unique colors to triangles...","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tiling","aperiodic","pinwheel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Aperiodic tiling: pinwheel - written 2015 by JT\n// https://en.wikipedia.org/wiki/Pinwheel_tiling\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// About the pinwheel-tiling:\n// http://tilings.math.uni-bielefeld.de/substitution/pinwheel/\n// https://en.wikipedia.org/wiki/Pinwheel_tiling\n// http://paulbourke.net/geometry/tilingplane/ (section \"non-periodic tiling\", near end)\n\n// Basically the code fakes severall recursion steps by implementing them explicitly\n// (T1, T2, T3) because shaders don't support recursion.\n\nvec3 barycentric(vec2 a, vec2 b, vec2 c, vec2 p)\n{\n    float d = (b.y - c.y) * (a.x - c.x) + (c.x - b.x) * (a.y - c.y);\n    float alpha = ((b.y - c.y) * (p.x - c.x)+(c.x - b.x) * (p.y - c.y)) / d;\n    float beta = ((c.y - a.y) * (p.x - c.x) + (a.x - c.x) * (p.y - c.y)) / d;\n    float gamma = 1.0 - alpha - beta;\n    return vec3(alpha, beta, gamma);\n}\n\nvec3 rainbow(float value) // smooth\n{\n    return .5 + .5 * cos(2. * 3.1415926 * (value + vec3(0,1,2) / 3.));\n}\n\nfloat rnd(float p) // combines iq's hash with \"online\"-rand\n{\n    return fract(sin(dot(fract(sin(p * vec2(438.8, 452.8)) * 18.5453), vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec3 randomcolor(float value)\n{\n    return rainbow(rnd(value));\n}\n\nvec2 hash(float p) // iq's hash-function, simplified for single input\n{\n    return fract(sin(p * vec2(438.8, 452.8)) * 18.5453);\n}\n\n#define C f*=6.; vec2 aac=mix(a,c,.2); vec2 acc=mix(a,c,.6); vec2 bc=mix(b,c,.5); vec2 aacb=mix(aac,b,.5);\n\n//#define Triangle(a, b, c, p, q) o = all(greaterThan(barycentric(a, b, c, p), vec3(0.))) && !all(greaterThan(barycentric(a, b, c, p), vec3(0.01))) ? o + q : o\n//#define T(a, b, c, f, p) o += all(greaterThan(barycentric(a, b, c, p), vec3(0.))) && !all(greaterThan(barycentric(a, b, c, p), vec3(0.05))) ? 1. : 0.\n//#define T(a, b, c, f, p) o = all(greaterThan(barycentric(a, b, c, p), vec3(0.))) && !all(greaterThan(barycentric(a, b, c, p), vec3(0.05))) ? vec4(randomcolor(f),1.) : o\n//#define T(a, b, c, f, p) o = all(greaterThan(barycentric(a, b, c, p), vec3(0.))) ? vec4(pow(1.-barycentric(a, b, c, p),vec3(2.)),1.) : o\n#define T(a, b, c, f, p) o = all(greaterThan(barycentric(a, b, c, p), vec3(0.))) ? vec4(rainbow(f/5.),1.) : o\n//#define T(a, b, c, f, p) o = all(greaterThan(barycentric(a, b, c, p), vec3(0.))) ? vec4(randomcolor(f*sqrt(5.)),1.) : o\n//#define T(a, b, c, f, p) o = all(greaterThan(barycentric(a, b, c, p), vec3(0.))) ? texture(iChannel0,(1.+f)*vec2(cos(f),sin(f))) : o\n//#define T(a, b, c, f, p) o = all(greaterThan(barycentric(a, b, c, p), vec3(0.))) ? texture(iChannel0,hash(f)) : o\n//#define T(a, b, c, f, p) o = all(greaterThan(barycentric(a, b, c, p), vec3(0.))) ? vec4(hash(f),0.,1.) : o\n\nvec4 T1(vec2 a, vec2 b, vec2 c, float f, vec2 p, vec4 o)\n{\n    C\n    T(a,aac,b,f+0.,p);\n    T(bc,acc,aac,f+1.,p);\n    T(bc,acc,c,f+2.,p);\n    T(aac,aacb,bc,f+3.,p);\n    T(b,aacb,bc,f+4.,p);\n    return o;\n}\n\nvec4 T2(vec2 a, vec2 b, vec2 c, float f, vec2 p, vec4 o)\n{\n    C\n    return T1(a,aac,b,f+0.,p,T1(bc,acc,aac,f+1.,p,T1(bc,acc,c,f+2.,p,T1(aac,aacb,bc,f+3.,p,T1(b,aacb,bc,f+4.,p,o)))));\n}\n\nvec4 T3(vec2 a, vec2 b, vec2 c, float f, vec2 p, vec4 o)\n{\n    C\n    return T2(a,aac,b,f++,p,T2(bc,acc,aac,f++,p,T2(bc,acc,c,f++,p,T2(aac,aacb,bc,f++,p,T2(b,aacb,bc,f,p,o)))));\n}\n\nvoid mainImage( out vec4 o, in vec2 I )\n{\n    I /= iResolution.xy;\n    o -= o;\n    //o = T2(vec2(0,1), vec2(0,0), vec2(1,0), 0., I, o);\n    o = T3(vec2(0,1), vec2(0,0), vec2(1,0), 0., I, o);\n}\n","name":"Image","description":"","type":"image"}]}