{"ver":"0.1","info":{"id":"ds2GWw","date":"1672774316","viewed":105,"name":"Flying balls","username":"minghir","description":"Thank you BigWIngs for youre great tutorials:\nhttps://www.youtube.com/@TheArtofCodeIsCool","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d","balls"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 pos){\n    float d = length(cross(pos-ro,rd))/length(rd);\n    d = smoothstep(0.1,0.09,d);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(0.,0.,-1.);\n    vec3 rd = vec3(uv.x,uv.y,0.)-ro;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    uv.x += clamp(uv.x,-0.4,0.4);\n    float tt = mod((uv.x)/(uv.y),uv.y);\n    float t = iTime;\n    float d;\n    vec3 ball;\n    for(float i=0.;i<=360./8.*50.;i +=360./8.){\n         vec3 p = vec3(0.-cos(t/19.-i*2.),0.-sin(t-i/19.),2.+sin(t+i*2.2)*3.);\n         d += DistLine(ro-p,rd,p);\n    }\n    ball = mix(vec3(0),0.-col,d*3.)-(length(uv)-0.4);\n    fragColor = vec4(col*tt*tt*7.+d*d-ball*ball,1.0);\n}","name":"Image","description":"","type":"image"}]}