{"ver":"0.1","info":{"id":"XsdBDS","date":"1526585399","viewed":376,"name":"Toony Fire","username":"jgkling","description":"Just stepped color with noise. Uncomment the \"allow mouse input\" define at the top of the source and then you can click and drag the mouse to attenuate flame width (x) and height (y).","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["npr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Similar shaders I referenced:\n// https://www.shadertoy.com/view/MtVGWV\n// https://www.shadertoy.com/view/lsscWr\n\n#define NUM_OCTAVES 4\n#define NUM_STEPS 4.0\n#define FLAME_SIZE 5.7\n//#define ALLOW_MOUSE_INPUT\n\n// 2D Noise from IQ\nfloat Noise2D( in vec2 x ) {\n    ivec2 p = ivec2(floor(x));\n    vec2 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tivec2 uv = p.xy;\n\tfloat rgA = texelFetch( iChannel0, (uv+ivec2(0,0))&255, 0 ).x;\n    float rgB = texelFetch( iChannel0, (uv+ivec2(1,0))&255, 0 ).x;\n    float rgC = texelFetch( iChannel0, (uv+ivec2(0,1))&255, 0 ).x;\n    float rgD = texelFetch( iChannel0, (uv+ivec2(1,1))&255, 0 ).x;\n    return mix( mix( rgA, rgB, f.x ),\n                mix( rgC, rgD, f.x ), f.y );\n}\n\nfloat ComputeFBM( in vec2 pos ) {\n    float amplitude = 1.0;\n    float sum = 0.0;\n    float maxAmp = 0.0;\n    for(int i = 0; i < NUM_OCTAVES; ++i) {\n        sum += Noise2D(pos) * amplitude;\n        maxAmp += amplitude;\n        amplitude *= 0.5;\n        pos *= 2.0;\n    }\n    return sum / maxAmp; // normalize to [0, 1]\n}\n\n// Fiery palette taken from https://www.shadertoy.com/view/4tlSzl\n// Not currently used in this shader\nvec3 firePalette( float i ) {\n    float T = 1400.0 + 1300.0 * i; // Temperature range (in Kelvin).\n    vec3 L = vec3(7.4, 5.6, 4.4); // Red, green, blue wavelengths (in hundreds of nanometers).\n    L = pow(L, vec3(5.0)) * (exp(1.43876719683e5 / (T * L)) - 1.0);\n    return 1.0 - exp(-5e8/L); // Exposure level. Set to \"50.\" For \"70,\" change the \"5\" to a \"7,\" etc.\n}\n\n// Courtesy of Shane\nvec3 firePaletteCheap( float i ) {\n\treturn pow(vec3(1.65, 1.2, 1.0) * i, vec3(1.0, 2.5, 12.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized device coordinates\n    vec2 ndc = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    float uvy = (ndc.y + 1.0) / 2.0;\n    \n    float noise = ComputeFBM(ndc * vec2(2.0, 1) * 3.5 + vec2(0.0, -iTime * 7.0));\n    \n    // Offset version of first noise (offset values chosen pretty arbitrarily)\n    float noise2 = ComputeFBM(ndc + vec2(-iTime * sin(iTime * 0.005) * 0.3 - 50.0, 121.0));\n    \n    // Attenuate noise w/ noise\n    noise *= pow(noise2, 0.55);\n    \n    // Hand modeling the noise... lots of magic numbers\n    vec2 mouseEffect = vec2(1.4, 0.85); // ok default parameters\n    #ifdef ALLOW_MOUSE_INPUT\n    mouseEffect = vec2(1.0) - iMouse.xy / iResolution.xy; mouseEffect *= 2.0;\n    #endif\n    noise *= (FLAME_SIZE - pow(uvy * 21.0 * mouseEffect.y + abs(ndc.x) * 14.0, 0.57) * mouseEffect.x);\n    \n    // Debug view of falloff\n    //fragColor = vec4(vec3(noise), 1); return;\n    \n    noise = clamp(noise, 0.0, 1.0);\n    noise = floor(noise * NUM_STEPS) / NUM_STEPS;\n    //noise = floor(noise * NUM_STEPS * .999) / (NUM_STEPS - 1.0);\n    vec3 fireColor = firePaletteCheap(noise);\n    fragColor = vec4(fireColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}