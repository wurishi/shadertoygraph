{"ver":"0.1","info":{"id":"DlyXz3","date":"1686521294","viewed":80,"name":"langtons ant","username":"hexagon8899","description":"go to the \"common\" tab to change the rules.","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["ant","langtonsant"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 col, in vec2 pos ) {\n    vec2 RES = iResolution.xy/2.;\n    pos -= RES;\n    pos /= SCALE;\n    pos += RES;\n    pos = floor( pos );\n    \n    ivec2 xy = ivec2(pos);\n    vec4 curr = texelFetch(iChannel0, xy, 0);\n    \n    col = (curr.xxxx + 1.) / float(RULE_COUNT+3);\n    vec2 diff = abs(curr.yz-pos);\n    if ( max(diff.x, diff.y)< .5 ) {\n        col = vec4(1,0,0,1);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define F 0.\n#define B 2.\n#define L 1.\n#define R 3.\n#define RR R,R\n#define LL L,L\n#define FF F,F\n#define BB B,B\n/*------------------change these------------------*/\n\nconst float SCALE = 5.;\n\n// uncomment a line to select it\nconst float rules[] = float[](\n//R,L /*\n//L,R,R,L /*\n//L,L,L,L,R /*\nR,L\n//*/\n);\n\nconst vec2 movements[] = vec2[](\n    vec2( 1, 0),\n    vec2( 0, 1),\n    vec2(-1, 0),\n    vec2( 0,-1)\n);\n/*------------------change these------------------*/\n\n\n\n\n\nconst int RULE_COUNT = rules.length();\nconst int MOVEMENT_COUNT = movements.length();\n\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 col, in vec2 pos ) {\n    pos = floor(pos); \n    ivec2 xy = ivec2(pos);\n    vec4 curr = texelFetch(iChannel0, xy, 0);\n\n    col = curr;\n    \n    \n    float antpix = texelFetch(iChannel0, ivec2(col.yz), 0).x;\n    \n    vec2 diff = abs(curr.yz-pos);\n    \n    if ( max(diff.x, diff.y) < 1. ) {\n        col.x = mod( curr.x  + 1. , float(RULE_COUNT));\n    }\n    \n    col.w += rules[ int( antpix ) % RULE_COUNT ];\n    col.yz = col.yz + movements[ int( col.w ) % MOVEMENT_COUNT ];\n    \n    \n    \n    \n    \n    if (iFrame == 0) { \n        col = vec4( 0, iResolution.xy/2. , 2 );\n    }\n    \n  \n}","name":"Buffer A","description":"","type":"buffer"}]}