{"ver":"0.1","info":{"id":"Wsf3Rr","date":"1544662469","viewed":139,"name":"Sinusoid voronoi","username":"khlorghaal","description":"  ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N 32\nint voronoi(vec2 x){\n    float d= 1.e8;\n    int res;\n    for(int i=0;i!=N; i++){\n        vec2 p= rand(vec2(float(i+50),float(i*3)))*2.-1.;\n        float dd= sin(TAU*length(x-p)+time);\n        if(dd<d){\n        \td=dd;\n            res= i;\n        }\n    }\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y*2.;\n    \n\t\n    vec3 col= rand3(float(voronoi(uv)));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"precision highp float;\n\n#define PI  3.14159265359\n#define TAU (PI*2.)\n#define PHI 1.61803399\n\n#define ETA 1e-5\n#define eqf(a,b) ( abs((a)-(b))<ETA )\n\n#define bad(x) ( isnan(x)||isinf(x) )\n#define lerp mix\n#define norm normalize\n#define time float(iTime)\n#define mouse (float(iMouse.xy)/iResolution.xy)\n\n#define R1A     (4445.231)\n#define R1B     ( 556.113)\n#define R2A vec2(4411.231, 4315.23)\n#define R2B vec2( 561.111,  531.45)\n#define R3A vec3(4411.231, 4315.23, 4424.34)\n#define R3B vec3( 561.111,  531.43,  543.13)\n  float rand( float x){ return fract(sin(x*R1A)*R1B);  }\n   vec2 rand(  vec2 x){ return fract(sin(x*R2A+x.yx )); }\n   vec3 rand(  vec3 x){ return fract(sin(x*R3A+x.yzx)); }\n   vec2 rand2(float x){ return fract(sin(x*R2A)*R2B);  }\n   vec3 rand3(float x){ return fract(sin(x*R3A)*R1A);  }\n  float rand1( vec2 x){ return fract(sin(dot(x,R2A))); }\n  float rand1( vec3 x){ return fract(sin(dot(x,R3A))); }\n\nfloat sum(vec2 v){ return      dot(v,vec2(1));  }\nfloat sum(vec3 v){ return      dot(v,vec3(1));  }\nfloat sum(vec4 v){ return      dot(v,vec4(1));  }\nvec3 sumv(vec2 v){ return vec3(dot(v,vec2(1))); }\nvec3 sumv(vec3 v){ return vec3(dot(v,vec3(1))); }\nvec3 sumv(vec4 v){ return vec3(dot(v,vec4(1))); }\n\n#define absqrt(x)  sqrt(abs(x))\n#define abspow(x,p) pow(abs(x),p)\n\nfloat sat(float x){ return clamp(x, 0.,1.);}\n vec2 sat( vec2 x){ return clamp(x, 0.,1.);}\n vec3 sat( vec3 x){ return clamp(x, 0.,1.);}\n vec4 sat( vec4 x){ return clamp(x, 0.,1.);}\n","name":"Common","description":"","type":"common"}]}