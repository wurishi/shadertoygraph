{"ver":"0.1","info":{"id":"DldXW8","date":"1685343307","viewed":100,"name":"wave_bubble","username":"beetom","description":"an effecto of water wave and bublle effect ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["bubbleeffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat tlife(float t, float duration)\n{\n    return fract(t / duration);\n}\n\nfloat spot(vec2 p, vec2 o, float radius)\n{\n    float d = radius - length(p - o);\n    return smoothstep(0.f, 0.05f, d);\n}\n\n\nfloat wave(vec2 p, vec2 o)\n{\n    float ret = .0f;\n    float seq = sin(o.x * 2.f - iTime * 20. - o.y * 2.) * 0.2 + sin(o.x * 10.f - iTime * 3. - o.y * 10.f) * fract(fract(iTime * 10.)) * abs(o.x) * .05;\n    float k = -1.f;\n    float v = k * o.x + seq;\n    ret = smoothstep(0.f, .05f, v - o.y);\n    \n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = (vec2(-0.5, -0.5) + uv) / vec2(0.5,0.5);\n    uv.x *= iResolution.x / iResolution.y;\n    vec2 p = vec2(.0,.0);\n    \n    vec3 col = vec3(sin(iTime) * .2f, .3f * uv.x, 0.2f * (1.0 - uv.y));\n    float d = wave(p, uv);\n    \n    float t1 = tlife(iTime, 0.8);\n    float t2 = tlife(iTime + .3, 1.);\n    vec2 p1 = vec2(.0 + t1 , .0 - t1 * t1 * 0.16 );\n    \n    float d1 = spot(p1, uv, .15 * ((1.0 - t1) * 0.5 + 0.5) + 0.01 * cos(t1 * 20.));\n    d += d1;\n    \n    vec2 p2 = vec2(-1.5 + t2 *3.5, .5 - t2 * t2 * 0.35);\n    float d2 = spot(p2, uv, .2 + 0.02 * cos(iTime * 20.));\n    d += d2 * (0.8 + cos(iTime * 20.) * 0.1);\n    \n    vec2 p3 = vec2(-0.6 + t2 * 1.9, .4 - t2 * t2 * 1.6);\n    float d3 = spot(p3, uv, .2 + 0.02 * cos(iTime * 20.));\n    d += d3 * (0.9 + cos(iTime * 20.) * 0.1);\n    \n    vec2 p4 = vec2(.2 + t2 * 2.9, -.4 - t2 * t2 * .4);\n    float d4 = spot(p4, uv, .2 + 0.02 * cos(iTime * 20.));\n    d += d4 * (0.5 + cos(iTime * 20.) * 0.1);\n    \n    col += vec3(min(d, 1.));\n    \n    //col += vec3(d);\n    \n    vec3 color = vec3(0.8 + 0.1 * uv.x, 0.3f + 0.25 * uv.x * uv.y, 0.2f + 0.3 * uv.x * uv.y);\n    color *= col;\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}