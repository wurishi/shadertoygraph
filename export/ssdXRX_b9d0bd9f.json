{"ver":"0.1","info":{"id":"ssdXRX","date":"1633648868","viewed":378,"name":"THE SHIMMER","username":"ENDESGA","description":"annihilation is a great film. the acid chaos shader I forked here kinda reminded me of it, so I made it accumulative for a ghostly effect","likes":14,"published":3,"flags":32,"usePreview":0,"tags":["fractal","oil","acid","psy"],"hasliked":0,"parentid":"NstSzf","parentname":"acid chaos"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, in vec2 I )\n{\n    O = vec4((((texture( iChannel0, ((I + vec2(-2.,-2.)))/iResolution.xy ) +\n                texture( iChannel0, ((I + vec2(2.,-2.)))/iResolution.xy ) +\n                texture( iChannel0, ((I + vec2(-2.,2.)))/iResolution.xy ) +\n                texture( iChannel0, ((I + vec2(2.,2.)))/iResolution.xy )) * .25) +\n                texture( iChannel0, (I)/iResolution.xy )) * .5);\n    O *= sqrt(O.brga);\n    O = 1.-exp(-O*O*2.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, in vec2 I )\n{\n\tvec2 uv = I.xy / iResolution.xy;\n    float timeRatio = .0777;\n    float s = iTime * timeRatio;\n    \n    vec3 p = vec3(s, s, s);\n    vec3 C = vec3(7.777);\n    \n    for (int i = 0; i < 77; i++) \n    {\n        p += vec3(-sin(uv), sin(uv) -cos(uv));\n        \n    \tC += vec3(\n            -sin(C.y + sin(p.y)), \n            -cos(C.z + sin(p.z)), \n            sin(C.x + (cos(p.x) * (cos(iTime * timeRatio * 2.)))) \n        );\n    }\n\n    O = vec4(mix(vec4((((texture( iChannel0, ((I + vec2(-2.,0.)))/iResolution.xy ) +\n                texture( iChannel0, ((I + vec2(2.,0.)))/iResolution.xy ) +\n                texture( iChannel0, ((I + vec2(0.,-2.)))/iResolution.xy ) +\n                texture( iChannel0, ((I + vec2(0.,2.)))/iResolution.xy )) * .25) +\n                texture( iChannel0, (I)/iResolution.xy )) * .5).rgb, ((C*C)+C)*.00333, .00777), 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}