{"ver":"0.1","info":{"id":"csBBRG","date":"1689808100","viewed":118,"name":"uni-neuron","username":"cowtweeter","description":"Blank","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["lazy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Msd3Dn","filepath":"https://soundcloud.com/cherokeerecordings/ppdee-how-long-original-mix","previewfilepath":"https://soundcloud.com/cherokeerecordings/ppdee-how-long-original-mix","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 shear(float k, float l) \n{\n    return mat2(1., k, l, 1.);\n}\n\nfloat distLine(vec2 p, vec2 a, vec2 b) \n{\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float t = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n    return length(pa - ba * t);\n}\n\nfloat n21(vec2 i) {\n    i += fract(i * vec2(2.64, 823.12));\n    i += dot(i, i + 23.14);\n    return fract(i.x * i.y);\n}\n\nvec2 n22(vec2 i) {\n    float x = n21(i);\n    return vec2(x, n21(i+x));\n}\n\nvec2 getPos(vec2 id, vec2 offset) {\n    vec2 n = n22(id + offset);\n    return offset + n * sin(iTime * n) * 0.8;\n}\n\nfloat Line(vec2 p, vec2 a, vec2 b, float fft) {\n    float vibe = mix(.7, 1.1, fft);\n    float d = distLine(p,a,b);\n    float m = smoothstep(0.02, 0.005, d);\n    float d2 = length(a-b);\n    m *= smoothstep(1.2, 0.9, d2) * (0.4 - vibe * 0.01) + smoothstep(0.04, 0.03, abs(d2 - .8)) * (vibe) ;\n    return m;\n}\n\nfloat Layer(vec2 uv, float fft) {\n    float t = iTime * 0.4;\n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    float vibe = mix(.3, 1.8, fft);\n    float m = 0.;\n    \n    vec2 p[9];\n    int i = 0;\n    for(float x = -1.; x <= 1.; x++) {\n        for(float y = -1.; y <= 1.; y++) {\n            p[i] = getPos(id, vec2(x,y));\n            i++;\n        }\n    }\n    \n    for(int j = 0; j < 9; j++) {\n       m+= Line(gv, p[4], p[j], fft);\n       float sparkle = length(p[j] - gv) * 20.;\n       sparkle = .8 / dot(sparkle, sparkle) * smoothstep(.3, 1., vibe);\n       m+=sparkle * (sin(t + fract(p[j].x) * 500.)* .5 + .5) * vibe;\n    }\n    \n    m+= Line(gv, p[1], p[3], fft);\n    m+= Line(gv, p[1], p[5], fft);\n    m+= Line(gv, p[7], p[3], fft);\n    m+= Line(gv, p[7], p[5], fft);\n    // if(gv.x > 0.46) m = 1.;\n    // if(gv.y > 0.46) m = 1.;\n    return m;\n}\n\nfloat getAmp(float freq) {;\n    return (\n        texelFetch(iChannel0, ivec2((freq) * 512. , 0), 0).x + \n        texelFetch(iChannel0, ivec2((freq + 0.002) * 512. , 0), 0).x +\n        texelFetch(iChannel0, ivec2((freq - 0.002) * 512. , 0), 0).x +\n        texelFetch(iChannel0, ivec2((freq + 0.004) * 512. , 0), 0).x +\n        texelFetch(iChannel0, ivec2((freq - 0.004) * 512. , 0), 0).x\n    ) * .2;\n    \n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.);\n    float smp = distance(uv, vec2(0., 0.));\n    float fft = (getAmp(floor(smp * 512.) / 512.));\n    // fft = floor(fft * 10.) / 10.;\n    // fft = 0.5 - clamp(fft, -1., .435);\n    fft = fft * .9;\n    vec3 c2 = sin(iTime * 2.0 * vec3(.21, .324,.798)) * fft * 0.2 + 1.;\n    c2.r += (uv.x) * 0.5;\n    c2.b += (uv.y) * 0.5;\n    c2.g += smp * .05;\n    col += pow(-uv.y + 0.55 * fft , 5.0) * c2;\n    float m = 0.;\n    float vibe = mix(1., 0.95, fft);\n    \n    for(float i=0.; i<=1.; i+= 1./5.) {\n        vec2 uv = uv;\n        float s = sin(iTime * 0.15);\n        float c = cos(iTime * 0.15);\n        mat2 rot = mat2(c, -s, s, c);\n        float z = fract(i + iTime * 0.05 + vibe * .4);\n        float size = mix(30., 1., z);\n        // vec2 center = vec2(z * 6. * sin(iTime * 0.4 + i * 9.) + fft * z * 0.01, z*6. *cos(iTime * 0.4 + i *9.) + fft * z * 0.01) * 0.95;\n        vec2 center = vec2(-1. , 2.);\n        float dist = distance(uv, center) * .2;\n        float fade = smoothstep(0.,0.3,z) * smoothstep(1., 0.9, z);\n        uv.y += dist;\n        uv *= rot  * dist;\n        m += Layer(uv * size + i * 20., fft) * fade;\n    }\n    col += m * c2;\n    fragColor = vec4(col ,1.0);\n    // fragColor = vec4(dist / 15., 0, 0, 1);\n}","name":"Image","description":"","type":"image"}]}