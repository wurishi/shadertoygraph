{"ver":"0.1","info":{"id":"ctKSWD","date":"1686099268","viewed":184,"name":"Quake Water Effect","username":"Xonatron","description":"Originally coded in Mode 13h (320x200x256): https://xona.com/mode13h/\nIt ended up being similar to the Quake (1996) water \"shader\" effect.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["demoscene","quake","mode13h"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Matthew Doucette, Xona Games\n// https://xona.com/\n// Tuesday, June 6th, 2023\n// ----------------------------\n\n// Inspiration:\n// ------------\n// Originally coded in Mode 13h (320x200x256), back in my demoscene graphics programming days:\n// https://xona.com/mode13h/\n//\n// My brother, Jason Doucette, also coded it in mode 13h, more optimized:\n// http://jasondoucette.com/graphics.html\n// (see \"Bitmap Plasma Distortion\")\n//\n// Also inspired by my brother's GLSL implementation of it:\n// https://www.shadertoy.com/view/MsKXzD\n\n// Known Issues:\n// -------------\n// Not aspect-ratio independent.\n\n#define PI              3.14159265\n#define TAU             6.28318530718\n#define NUM_WAVES       1.0\n#define DISTORTION_PERC 0.10\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalize pixel coordinates (0.0..1.0)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // phase #1 - left/right sine wave distortion\n    uv.x += sin(uv.y * TAU * NUM_WAVES + iTime) * DISTORTION_PERC;\n\n    // phase #2 - up/down sine wave distortion\n    uv.y += sin(uv.x * TAU * NUM_WAVES + iTime) * DISTORTION_PERC;\n\n    // pull texture color (using distorted uv coordinates)\n    vec3 textureCol = texture(iChannel0, uv).xyz;\n\n    // output to screen\n    fragColor = vec4(textureCol,1.0);\n}","name":"Image","description":"","type":"image"}]}