{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"float rect(vec2 st, vec2 size)\n{\n    size = 0.25 * (1.0 - size);\n    vec2 uv = smoothstep(size, size + size * vec2(0.002), st * (1.0 - st));\n\n    return uv.x * uv.y;\n}\n\nvec3 draw_rect(vec2 rect_pos, vec2 size, vec3 rect_color, vec3 in_color, in vec2 fragCoord)\n{\n    vec2 st = (2.0f * fragCoord - iResolution.xy) / iResolution.y;\n    st -= vec2(size.x / 2.0f, -size.y / 2.0f);\n    vec3 color = mix(in_color, rect_color, rect(st - rect_pos, size));\n\n    return color;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\n    //first rectangle\n    vec3 color = vec3(1.0);\n\n    vec3 rect_color = vec3(0.0f);\n\n    vec2 rect_size = vec2(.8, 0.2);\n\n    vec2 rect_pos = vec2(-2.25, 0.5);\n\n    color = draw_rect(rect_pos, rect_size, rect_color, color, fragCoord);\n\n    //second rect\n    rect_color = vec3(1.0f, 0.0f, 0.0f);\n\n    rect_size = vec2(1., 1.);\n\n    rect_pos = vec2(-1.3, 0.5);\n    \n\n   \n\n    color = draw_rect(rect_pos, rect_size, rect_color, color, fragCoord);\n     \n     rect_color = vec3(1.0f, 0.0f, 0.0f);\n\n    rect_size = vec2(1., 1.);\n\n    rect_pos = vec2(-0.4, 0.5);\n    \n\n   \n\n    color = draw_rect(rect_pos, rect_size, rect_color, color, fragCoord);\n  \n    \n     //line strip\n    rect_pos = vec2(-1.37, 0.5);\n    rect_size = vec2(0.02, 0.1);\n    rect_color = vec3(0.0);\n    for (int i = 0; i < 15; i++)\n    {\n        color = draw_rect(rect_pos, rect_size, rect_color, color, fragCoord);\n        rect_pos.y -= 0.14;\n    }\n\n    //third rect yellow\n    rect_color = vec3(1.0f, 1.0f, 0.0f);\n\n    rect_size = vec2(0.2, 1.);\n\n    rect_pos = vec2(-2.25, -0.5);\n\n    color = draw_rect(rect_pos, rect_size, rect_color, color, fragCoord);\n\n    //black horizontal line strip\n\n    rect_pos = vec2(-2.25, -0.45);\n    rect_size = vec2(0.02, 0.02);\n    rect_color = vec3(0.0);\n    for (int i = 0; i < 24; i++)\n    {\n        color = draw_rect(rect_pos, rect_size, rect_color, color, fragCoord);\n        rect_pos.x += 0.12;\n    }\n    //fourth rect blue\n\n    rect_color = vec3(0.0f, 0.0f, 1.0f);\n\n    rect_size = vec2(0.4, .7);\n\n    rect_pos = vec2(0.76, -0.8);\n\n    color = draw_rect(rect_pos, rect_size, rect_color, color, fragCoord);\n\n    rect_color = vec3(0.0f, 0.0f, 0.0f);\n\n    rect_size = vec2(0.025, 0.025);\n\n    //line strip\n\n    rect_pos = vec2(0.6, 0.0);\n    for (int i = 0; i < 15; i++)\n    {\n        color = draw_rect(rect_pos, rect_size, rect_color, color, fragCoord);\n        rect_pos.y -= 0.14;\n    }\n    rect_pos = vec2(0.6, 0.0);\n    for (int i = 0; i < 10; i++)\n    {\n        color = draw_rect(rect_pos, rect_size, rect_color, color, fragCoord);\n        rect_pos.y += 0.14;\n    }\n    //\n    \n    rect_pos = vec2(.7, 0.1);\n    rect_size = vec2(0.02, 0.02);\n    rect_color = vec3(0.0);\n    for (int i = 0; i < 8; i++)\n    {\n        color = draw_rect(rect_pos, rect_size, rect_color, color, fragCoord);\n        rect_pos.x += 0.12;\n    }\n    \n    rect_pos = vec2(-.37, -0.5);\n    rect_size = vec2(0.02, 0.1);\n    rect_color = vec3(0.0);\n    for (int i = 0; i < 15; i++)\n    {\n        color = draw_rect(rect_pos, rect_size, rect_color, color, fragCoord);\n        rect_pos.y -= 0.14;\n    }\n    fragColor = vec4(color, 1.0f);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"43dyW4","date":"1735083712","viewed":48,"name":"Day 6 Shader: imitating piet ;_;","username":"Eual_Uchiha","description":"tried to recreate Piet Mondrian's art","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2drects"],"hasliked":0,"parentid":"","parentname":""}}