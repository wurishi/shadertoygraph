{"ver":"0.1","info":{"id":"M3ySRh","date":"1719867538","viewed":43,"name":"Chessboard Jump","username":"vivid_bw","description":"Chessboard zoom and rotation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["oldschool","zoom","chessboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 v, float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n    return vec2(v.x * c - v.y * s, v.x * s + v.y * c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5);\n    uv.x *= iResolution.x / iResolution.y;\n    uv = rotate(uv, iTime);\n    uv = uv * sin(iTime * 2.3) * 0.3 + 2.0;\n    uv += 0.3 * vec2(sin(iTime), cos(iTime));\n    \n    vec2 uv_scaled = uv * 4.0;\n    vec2 f = fract(uv_scaled);\n    f = step(0.5, f);\n    float c = float(f.x != f.y);\n    fragColor = vec4(c, c, c, 1.0);\n}","name":"Image","description":"","type":"image"}]}