{"ver":"0.1","info":{"id":"sdKXRc","date":"1635065901","viewed":69,"name":"Simple Loading Circle","username":"su5ed","description":"Based on plafone's Loading circle (4t3Gzs)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circle","loading"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\nconst float circles = 4.0;\nconst float size = 90.0;\nconst float dotRadius = (size / 90.0) * 0.015;\nconst float dotRadiusBack = 0.2;\nconst float offset = 7.0;\nconst float slow = 0.7;\n\nconst float radOffset = PI / 2.0;\n\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 color) {\n\tfloat d = length(pos - uv) - rad;\n\tfloat t = clamp(d, 0.0, 1.0);\n    return vec4(color, 1.0 - t);\n}\n\nvec3 rgb(float r, float g, float b) {\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 backCol = rgb(0.0, 0.0, 0.0);\n    vec3 backCirCol = rgb(30.0, 20.0, 50.0);\n    vec3 rotCirCol = rgb(255.0, 255.0, 255.0);\n\n   \tvec2 uv = fragCoord.xy;\n\tfloat radiusRot = dotRadius * 512.0;\n    float radiusBack = dotRadiusBack * 512.0;\n    vec2 center = iResolution.xy * 0.5;\n    \n    vec4 back = vec4(backCol, 0.0);\n    vec4 backCircle = circle(uv, center, radiusBack, backCirCol);\n    \n    for(float i = 0.0; i < circles; i++)\n    {\n        float time = max(iTime - i * 0.1, 0.0);\n        float timeOffset = time * offset + radOffset;\n        float speed = cos(timeOffset) * slow;\n        \n        float point = timeOffset + speed + radOffset;\n        float y = cos(point);\n        float x = sin(point);\n        vec2 centerRot = center + vec2(x * size, y * size);\n        \n        vec4 rotCircle = circle(uv, centerRot, radiusRot, rotCirCol);\n        vec4 circleColor = mix(back, backCircle, backCircle.a);\n        \n        fragColor = mix(fragColor, rotCircle, rotCircle.a);\n    }\n}","name":"Image","description":"","type":"image"}]}