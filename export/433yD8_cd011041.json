{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos[12];\n    //compute some swirling points, a uniform may be used instead\n    for (int i=0;i<12;i++){\n        float f = float(i);\n        float tt = sin(f*1000.0)*0.1+0.25;\n        vec2 r = vec2(step(cos(f*10.0),0.0)*2.0-1.0,0.0);\n        float y = sin(iTime*tt+f);\n        pos[i] = r*(-cos(iTime*tt+f)+1.0)*(1.0-y*0.5)+vec2(0.0,y)*5.0;\n    }\n    //uv in the swirling point space\n    vec2 uv = (fragCoord/iResolution.x)*30.0-vec2(15.0,8.0);\n    //we will compute 3 separate meta ball distance in the next step\n    vec3 l = vec3(0.0);\n    for (int i=0;i<12;i++){\n        vec2 d = pos[i]-uv;\n        vec3 ll = vec3(length(d),length(d+vec2(0.01,0.0)),length(d+vec2(0.0,0.01)));\n        //compute the meta ball distance at 3 points\n        l += 1.0/(ll*ll+vec3(0.1));\n    }\n    //soft clamp the meta ball distances\n    l = tanh(l*0.2);\n    //estimate the normal from the spatial derivative using the 3 points\n    vec3 n = normalize(vec3(l.y-l.x,l.z-l.x,0.005));\n    //estimate the diffuse lighting from the normal\n    float d = sqrt(max(-n.y,0.0)+max(n.y*0.25,0.0))*0.04 + 0.96;\n    //we use a smooth step function to give a contour for the blobs\n    float s = clamp((l.x-0.3)*20.0,0.0,1.0);\n    //alternatively a harsh step may be used instead\n    //float s = step(0.45,l.x);\n    //we use hsv to compute the wax color, a uniform may be used instead\n    vec3 h = hsv2rgb(vec3(fract(iTime*0.1),1.0,1.0));\n    //we use the meta ball distance, normal and color to compute a glow effect\n    vec3 g = h*l.x*max(-n.y,0.0);\n    //we use the diffuse lighting estimation to modulate the color\n    //increasing the pow exponent increases the saturation\n    //we could use s for the alpha instead of multiplying the color\n    // (the glow would obviously not work with that)\n    fragColor = vec4(mix(h*d, vec3(1.0), 0.4) * s + g, s);\n    //fragColor = vec4(,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"433yD8","date":"1734982390","viewed":146,"name":"Lava lamp shader","username":"olee","description":"Adjustment to https://www.shadertoy.com/view/MctSz7","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}