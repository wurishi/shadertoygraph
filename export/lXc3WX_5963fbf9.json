{"ver":"0.1","info":{"id":"lXc3WX","date":"1717068898","viewed":53,"name":"water shader test attempt","username":"makipl","description":"Voronoi + ripples + uhm idk.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 white_noise(vec2 uv) {\n    return fract(sin(\n                vec2(dot(uv, vec2(12, 53)),\n                     dot(uv, vec2(52, 125)))\n                ) * 23425.0f);\n}\n\nfloat voronoi2D(vec2 uv) {\n    vec2 grid = fract(uv);\n    vec2 id = floor(uv);\n    float dist = 1.0f;\n\n    for (int i = 0; i <= 2; ++i) {\n        for (int j = 0; j <= 2; ++j) {\n            vec2 offset = id + vec2(i, j);\n            vec2 rand = white_noise(offset);\n            float d = length(grid + rand - vec2(i, j));\n            dist = min(d, dist);\n        }\n    }\n    return dist;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy*0.4;\n    vec2 voronoiuv = uv * 10.0;\n    voronoiuv += iTime/6.0;\n    \n    voronoiuv.x += sin(iTime*0.2);\n    voronoiuv.y += cos(iTime*0.4) * sin(iTime*0.2);\n    \n    // ripple\n    float dist = distance(uv, vec2(0.5));\n    vec2 offset = vec2(sin((dist*100.0 - iTime*1.))/30.0);\n    vec4 base = texture(iChannel0, uv+offset);\n    \n    vec3 col = base.rgb*0.6;\n    //col += vec3(.0,0.,1.0);\n\n    // voronoi\n    float voronoiOverlay = voronoi2D(voronoiuv);//*clamp(abs(sin(iTime*0.5)+0.2),0.2,0.4);\n    voronoiOverlay /= 3.;\n    col += vec3(voronoiOverlay);\n   \n   // noise\n    vec2 noiseUv = (uv*4.0) + sin(iTime)*0.02;\n    vec4 noisergba = texture(iChannel1, noiseUv+offset*0.1);\n    float r = 0.;\n    float g = 0.8;\n    float b = 0.8;\n    float colorBoost = 0.9;\n    col += (noisergba.rgb *vec3(r, g, b))*colorBoost;\n    float minimum = 0.0;\n    col += vec3(minimum, 0.15, 0.25);\n    \n   \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}