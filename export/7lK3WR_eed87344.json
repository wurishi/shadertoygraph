{"ver":"0.1","info":{"id":"7lK3WR","date":"1637519736","viewed":85,"name":"Spinning Circles.SV","username":"turtlelover891","description":"Just a bunch of spinning circles","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circle","spinning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.1415926535897932;\n\nfloat circle(vec2 uv, vec2 pos, float r, float blur){\n    vec2 a = uv-pos;\n    return smoothstep(r+blur, r-blur, sqrt(a.x*a.x + a.y*a.y));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    //Parameters\n    int amount = 100;    //amount of circles\n    float speed = 50.; //speed of circles\n    float radius = 10.; //radius of circles\n    float spacing = .0; //spacing between each circle\n    float blur = 1.;    //blur of each circle\n    \n    float t = float(iFrame)/5000000.*speed;\n    vec2 R = iResolution.xy;\n    vec3 col = vec3(0.);\n    vec2 pos1 = vec2(R.x/2., R.y/2.);\n\n    //circle loop\n    for(float i=1.;i<2.+float(amount);i++){\n        col += circle(fragCoord, pos1, radius, blur);\n        pos1 = vec2(sin(t*i*i), cos(t*i*i))*2.*radius+vec2(pos1);\n    }\n    //invert color every other circle\n    col = sin(col*pi/2.);\n\n    //cyan/red center circle\n    col = abs(col-vec3((circle(fragCoord, vec2(R.x/2., R.y/2.), radius, blur)/2.), 0., 0.));\n\n    fragColor = vec4(col,1.0);\n\n    //prevents lag after too much time passes\n    t = float(int(t)%1);\n}","name":"Image","description":"","type":"image"}]}