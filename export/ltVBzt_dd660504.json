{"ver":"0.1","info":{"id":"ltVBzt","date":"1544308971","viewed":235,"name":"Ice Nine","username":"PianiGiani","description":"Lines fading in and out","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["blobs","lines","kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n#define nTime (iTime+9000.)/7.\n#define bluridx 35.\n#define BLUE vec3(0.1,.5,.9)*clamp(vec3(abs(sin(nTime+1.))),.1,.9)\n#define RED vec3(0.9,.2,.1)*clamp(vec3(abs(sin(nTime+2.))),.1,.9)\n#define GREEN vec3(0.1,.9,.6)*clamp(vec3(abs(sin(nTime+3.))),.1,.9)\n#define YELLOW vec3(0.9,.9,.0)*clamp(vec3(abs(sin(nTime+4.))),.1,.9)\n\nfloat DDot(vec2 p1,vec2 p2, float blr) {\n    return 1.-(distance(p1,p2)*blr);\n}\n    \n\nfloat N21(vec2 p)\n{\t// Dave Hoskins - https://www.shadertoy.com/view/4djSRW\n\tvec3 p3  = fract(vec3(p.xyx) * vec3(443.897, 441.423, 437.195));\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat segment(vec2 p, vec2 a, vec2 b) {\n    vec2 ab = b - a;\n    vec2 ap = p - a;\n    float k = clamp(dot(ap, ab)/dot(ab, ab), 0.0, 1.0);\n    return 1.-smoothstep(0.0, 1.0/iResolution.y, length(ap - k*ab) - 0.0001);\n\n}\n\nvec2 blob_pos(float i) {\n    float t=N21(vec2(i,i+9.));\n    float tt=N21(vec2(i+7.,i+9.));\n    return vec2(sin(nTime+i*t)+tt, cos(nTime+i+t)+tt)*vec2(0.42,0.22);\n}\n\nvec3 ShapeThing(vec2 uv, vec3 inCol, float seed) { \n    \n    vec3 col=vec3(0.,0.,0.);\n    vec3 colmask;\n    vec2 pos;\n    \n    vec2 pos1 = blob_pos(1.+seed);\n\tvec2 pos2 = blob_pos(2.+seed);\n\tvec2 pos3 = blob_pos(3.+seed);\n\tvec2 pos4 = blob_pos(4.+seed);\n    vec2 pos5 = blob_pos(5.+seed);\n\n\tfloat blur1=80.-(bluridx*(sin(iTime*N21(vec2(1.+seed,1.)))));\n    float blur2=80.-(bluridx*(sin(iTime*N21(vec2(2.+seed,2.)))));\n    float blur3=80.-(bluridx*(sin(iTime*N21(vec2(3.+seed,3.)))));\n    float blur4=80.-(bluridx*(sin(iTime*N21(vec2(4.+seed,4.)))));\n    float blur5=80.-(bluridx*(sin(iTime*N21(vec2(5.+seed,5.)))));\n\n   \tcolmask=inCol;\n\tcol=max(colmask*vec3(DDot(uv,pos1,blur1)),col);\n    col=max(colmask*vec3(DDot(uv,pos2,blur2)),col);\n    col=max(colmask*vec3(DDot(uv,pos3,blur3)),col);\n    col=max(colmask*vec3(DDot(uv,pos4,blur4)),col);\n    col=max(colmask*vec3(DDot(uv,pos5,blur5)),col);\n    col += segment(uv,pos1,pos2)*inCol;\n    col += segment(uv,pos1,pos3)*inCol;\n    col += segment(uv,pos3,pos2)*inCol;\n    col += segment(uv,pos1,pos4)*inCol;\n    col += segment(uv,pos2,pos4)*inCol;\n    col += segment(uv,pos3,pos4)*inCol;\n    col += segment(uv,pos5,pos1)*inCol;\n    col += segment(uv,pos5,pos2)*inCol;\n    col += segment(uv,pos5,pos3)*inCol;\n    col += segment(uv,pos5,pos4)*inCol;\n\n\treturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\n    fragColor = vec4(ShapeThing(uv,RED,0.1),1.0)+vec4(ShapeThing(uv,BLUE,0.2),1.0)+vec4(ShapeThing(uv,GREEN,0.5),1.0)+vec4(ShapeThing(uv,YELLOW,0.6),1.0);\n\tvec2 uv2=uv*vec2(-1.,-1.);\n    fragColor += vec4(ShapeThing(uv2,RED,0.1),1.0)+vec4(ShapeThing(uv2,BLUE,0.2),1.0)+vec4(ShapeThing(uv2,GREEN,0.5),1.0)+vec4(ShapeThing(uv2,YELLOW,0.6),1.0);\n\tuv2=uv*vec2(-1.,1.);\n    fragColor += vec4(ShapeThing(uv2,RED,0.1),1.0)+vec4(ShapeThing(uv2,BLUE,0.2),1.0)+vec4(ShapeThing(uv2,GREEN,0.5),1.0)+vec4(ShapeThing(uv2,YELLOW,0.6),1.0);\n\tuv2=uv*vec2(1.,-1.);\n    fragColor += vec4(ShapeThing(uv2,RED,0.1),1.0)+vec4(ShapeThing(uv2,BLUE,0.2),1.0)+vec4(ShapeThing(uv2,GREEN,0.5),1.0)+vec4(ShapeThing(uv2,YELLOW,0.6),1.0);\n}","name":"Image","description":"","type":"image"}]}