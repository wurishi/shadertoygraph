{"ver":"0.1","info":{"id":"mtBXRy","date":"1676272596","viewed":67,"name":"simple_mandlebrot","username":"tve","description":"simple rotating mandlebrot","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandlebrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//first time playing with Mandlebrot Set\n//based on description from here\n//https://en.wikipedia.org/wiki/Mandelbrot_set\n\n#define ITER 200.0\n\nmat2 rot(float a) {\n  return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvoid mainImage( out vec4 O, in vec2 c )\n{\n    \n    c -= iResolution.xy*0.5;\n    //c *= abs(cos(iTime*0.5))*1.1;\n    c *= rot(iTime*0.25);\n    c += iResolution.xy*0.5;\n            \n    c = vec2(-2.0 + c.x * (2.47/iResolution.y),\n             -1.12 + c.y * (2.24/iResolution.y) );\n    vec2 z = vec2(0);\n    \n    vec3 col = vec3(0);\n    \n    for( float i=0.0; i<ITER; i++) {\n      \n      if(dot(z,z) <= 4.0*abs(cos(iTime*0.25))) {\n          z = z*mat2(z.x,-z.y,2.0*z.y,0.0)+c;\n          if(i<40.0) col.r += i*0.003;\n          if(i>=40.0 && i<=57.0) col.g += i*0.01;\n          if(i>57.0) col.b += i*0.001;\n      }\n      \n    }\n    col.b += .5;\n    \n    if( length(col) > ITER*0.08 ) col=vec3(0);\n    \n    O = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}