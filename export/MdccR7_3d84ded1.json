{"ver":"0.1","info":{"id":"MdccR7","date":"1518187887","viewed":213,"name":"Twisted menger \"4\" (Black/White)","username":"lsdlive","description":"Another unreleased experiment I did one month ago around menger geometry.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cylinder cross\nfloat sc2(vec3 p, float r) {\n\tfloat s1 = length(p.xz);\n\tfloat s2 = length(p.xy);\n\tfloat s3 = length(p.zy);\n\treturn min(s1, min(s2, s3)) - r;\n}\n\nmat2 r2d(float a) {\n\tfloat c = cos(a), s = sin(a);\n\treturn mat2(c, s, -s, c);\n}\n\nfloat de(vec3 p) {\n\tfloat d = 0., s = 1.;\n\n\tp.xy *= r2d(cos(iTime));\n\n\tp.y -= .2;\n\tp.x -= .4;\n\n\tp.x = abs(p.x) - .6;\n\n\tif (mod(p.z, 2.) > 1.)\n\t\tp.xy *= r2d(cos(iTime + p.x)*.5);\n\telse\n\t\tp.xy *= r2d(-iTime + p.z);\n\n\tvec3 q = p;\n\n\tfor (int i = 0; i < 5; i++) {\n\t\tq = mod(p*s + 1., 4.) - 1.;\n\t\td = max(d, -sc2(q, .8) / s);\n\t\ts += 6.;\n\t}\n\n\treturn d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n\n    float dt = iTime * 2.;\n    float a = cos(dt)*.3;\n    float b = sin(dt)*.2;\n    vec3 ro = vec3(a, b, -iTime*8.), p;\n\tvec3 rd = normalize(vec3(uv, -1));\n\tp = ro;\n\n\tfloat i = 0.;\n\tfloat d;\n\tfor (float it=0.; it < 1.; it += .04) {\n\t\ti = it;\n\t\td = de(p);\n\t\tif (d < .001) break;\n\t\tp += rd*d;\n\t}\n\ti /= .1 * tan(3.*p.x + p.y*p.y);\n\n\tvec3 c = mix(vec3(.4, .5, .6), vec3(.0, .2, .3), i*tan(p.z + p.y + cos(p.x + iTime*1.)));\n\n\tfragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}