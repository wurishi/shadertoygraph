{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"/** \n\tZoom of Newton's method applied to z^3-1, with the final pixel color\n\tcorresponding to the converged root (with color selected fairly arbitrarily.\n\tInspired by http://www.reddit.com/r/math/comments/25nhy8/beautiful_symmetry_in_solving_x310_with_newtons/\n **/\n\n#define ITERATIONS 100\n\n// Give types descriptive names\n#define complex vec2\n#define Color3 vec3\n\n/////// Helper functions for complex numbers ///////\nfloat im(complex a) {\n\treturn a.y;\t\n}\n\nfloat real(complex a) {\n\treturn a.x;\t\n}\n\ncomplex conj(complex a) {\n\treturn complex(a.x, -a.y);\t\n}\n\ncomplex mul(complex a, complex b) {\n\treturn complex(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\t\n}\n\ncomplex div(complex a, complex b) {\n\treturn mul(a,conj(b)) / real(mul(b, conj(b)));\n}\n/////////////////////////////////////////////////////\n\n\n// x^3-1 / 3x^2\ncomplex f_over_f_prime(complex z) {\n\treturn div(mul(z,mul(z,z)) - complex(1.0,0.0), 3.0*mul(z,z));\n}\n\ncomplex newtonIteration(complex z_n) {\n\treturn z_n - f_over_f_prime(z_n);\t\n}\n\n/** Choose a color arbitrarily */\nColor3 toColor(complex z) {\n\treturn Color3(sin(z.x*100.0)*0.5+0.5, sin(z.y*100.0)*0.5+0.5, sin((z.x+z.y)*100.0)*0.5+0.5);\t\n}\n\nfloat timeToZoom(float time) {\n\treturn sin(time*0.2)*3.0 + 3.1;\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Set center of screen to (0,0), and scale so x and y are the same scale \n\tcomplex z = (fragCoord.xy - (iResolution.xy*0.5)) / iResolution.y;\n\tfloat zoom = timeToZoom(iTime);\n\tz = zoom*z;\n\tfor(int i = 0; i < ITERATIONS; ++i) {\n\t\tz = newtonIteration(z);\n\t}\n\tColor3 color = toColor(z);\n\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdsXWH","date":"1400210497","viewed":342,"name":"Newton's Method","username":"Mx7f","description":"Zoom of Newton's method applied to z^3-1, with the final pixel color\ncorresponding to the converged root (with color selected fairly arbitrarily).","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""}}