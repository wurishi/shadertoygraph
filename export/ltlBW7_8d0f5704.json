{"ver":"0.1","info":{"id":"ltlBW7","date":"1512144625","viewed":236,"name":"Solar System 1","username":"ZdravkoD","description":"Solar","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["solar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 globalFragCoord;\nvec2 sunCenter;\n\nvec4 drawCircle( in vec2 center_of_circle, in float radius, in vec4 color)\n{\n    float inCircleCoef = ceil(max(radius - distance(globalFragCoord, center_of_circle), 0.0));\n\n    return color * vec4(inCircleCoef);\n}\n\nvec2 rotatePoint(in vec2 pos, in float angle)\n{\n    float currentAngle = atan( pos[1] / pos[0] );\n    float c = sqrt( pow(pos[0] - sunCenter[0], 2.) + pow(pos[1] - sunCenter[1], 2.) );\n    float gama = currentAngle + angle;\n    \n    return vec2(sin(gama) * c + sunCenter[0], cos(gama) * c + sunCenter[1] );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    globalFragCoord = fragCoord;\n    sunCenter = iResolution.xy / vec2(2.0);\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float offset = 0.0;\n    float distBetweenPlantes = iResolution.y / 50.0;\n    \n    // set background\n    fragColor = vec4(0.0);\n    \n    float mercuryRotationAngle = mod(iTime, 180.);\n        \n    float earthRadius = iResolution.y / 50.0; vec4 earthColor = vec4(0.231, 0.301, 0.098, 1.0); float earthRotationAngle = mercuryRotationAngle / 1.666;\n    \n    float mercuryRadius = earthRadius * 0.48; vec4 mercuryColor = vec4(0.556, 0.419, 0.196, 1.0);\n    float venusRadius = earthRadius * 0.95; vec4 venusColor = vec4(0.568, 0.278, 0.125, 1.0); float venusRotationAngle = mercuryRotationAngle / 1.428;\n    float marsRadius = earthRadius * 0.53; vec4 marsColor = vec4(0.588, 0.494, 0.352, 1.0); float marsRotationAngle = mercuryRotationAngle / 2.083;\n    float jupiterRadius = earthRadius * 3.2; vec4 jupiterColor = vec4(0.815, 0.819, 0.835, 1.0); float jupiterRotationAngle = mercuryRotationAngle / 3.846;\n    float saturnRadius = earthRadius * 2.45; vec4 saturnColor = vec4(0.866, 0.729, 0.509, 1.0); float saturnRotationAngle = mercuryRotationAngle / 5.0;\n    float uranusRadius = earthRadius * 1.5; vec4 uranusColor = vec4(0.423, 0.623, 0.8, 1.0); float uranusRotationAngle = mercuryRotationAngle / 5.555;\n    float neptuneRadius = earthRadius * 1.2; vec4 neptuneColor = vec4(0.317, 0.423, 0.701, 1.0); float neptuneRotationAngle = mercuryRotationAngle / 7.14;\n    \n    float sunRadius = earthRadius * 6.0; // original 109.24\n    vec4 sunColor = vec4(1.0, 1.0, 0.0, 1.0);\n    \n    fragColor += drawCircle(sunCenter + vec2(offset), sunRadius, sunColor );\n    offset += sunRadius;\n    fragColor += drawCircle( rotatePoint(sunCenter + vec2(offset), mercuryRotationAngle), mercuryRadius, mercuryColor);\n    offset += mercuryRadius + distBetweenPlantes;\n    fragColor += drawCircle( rotatePoint(sunCenter + vec2(offset), venusRotationAngle), venusRadius, venusColor);\n    offset += venusRadius + distBetweenPlantes;\n    fragColor += drawCircle( rotatePoint(sunCenter + vec2(offset), earthRotationAngle), earthRadius, earthColor);\n    offset += earthRadius + distBetweenPlantes;\n    fragColor += drawCircle( rotatePoint(sunCenter + vec2(offset), marsRotationAngle), marsRadius, marsColor);\n    offset += marsRadius + distBetweenPlantes;\n    fragColor += drawCircle( rotatePoint(sunCenter + vec2(offset), jupiterRotationAngle), jupiterRadius, jupiterColor);\n    offset += jupiterRadius + distBetweenPlantes;\n    fragColor += drawCircle( rotatePoint(sunCenter + vec2(offset), saturnRotationAngle), saturnRadius, saturnColor);\n    offset += saturnRadius + distBetweenPlantes;\n    fragColor += drawCircle( rotatePoint(sunCenter + vec2(offset), uranusRotationAngle), uranusRadius, uranusColor);\n    offset += uranusRadius + distBetweenPlantes;\n    fragColor += drawCircle( rotatePoint(sunCenter + vec2(offset), neptuneRotationAngle), neptuneRadius, neptuneColor);\n    offset += neptuneRadius + distBetweenPlantes;\n}","name":"Image","description":"","type":"image"}]}