{"ver":"0.1","info":{"id":"DlVcRm","date":"1700053917","viewed":88,"name":"supuo_2d_noise","username":"supuo","description":"2d noise","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define OCTAVES 6\n\nfloat random(in vec2 uv) {\n    return fract(sin(dot(uv.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat noise(in vec2 uv) {\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n    float a = random(i);\n    float b = random(i + vec2(1, 0));\n    float c = random(i + vec2(0, 1));\n    float d = random(i + vec2(1, 1));\n    \n    vec2 u = f * f * (3. - 2. * f);\n    \n    return mix(mix(a, b, u.x), mix(c, d, u.x), u.y);\n}\n\nfloat fbm(in vec2 uv) {\n    float value = 0.;\n    float amplitude = .5;\n    float frequency = 0.;\n    vec2 shift = vec2(100.0);\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.5));\n    for (int i = 0; i < OCTAVES; ++i) {\n        value += amplitude * noise(uv);\n        uv = rot * uv * 2.0 + shift;\n        amplitude *= .5;\n    }\n    return value;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 color = vec3(0);\n    \n    vec2 q = vec2(0);\n    q.x = fbm(uv + iTime);\n    q.y = fbm(uv + vec2(1));\n    vec2 r = vec2(0);\n    r.x = fbm(uv + q + vec2(1.9, 2.8) + 0.15 * iTime);\n    r.y = fbm(uv + q + vec2(9.1, 8.2) + 0.15 * iTime);\n    float f = fbm(uv + r);\n    color = vec3(r, 0);\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}