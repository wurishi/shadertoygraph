{"ver":"0.1","info":{"id":"Ms3yD8","date":"1518612401","viewed":141,"name":"Alien fish","username":"Ultraviolet","description":"Nobody knows what lies deep beneath the surface.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["bezier","accumulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec4 buf = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    vec3 c = buf.rbg;\n    \n    c = sqrt(c);\n    \n    fragColor = vec4(c, 1.);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define lineWidth \t(0.)\n\nvec3 hsv2rgb_smooth( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    int N = int(iResolution.y);\n    float dy = 1. / (float(N)-1.);\n    //float k = float(iFrame) * dy;\n    float k = float(iFrame) /1000.;\n    k += float(iFrame/1000) /3000.;\n    \n    vec2 p = (fragCoord -iResolution.xy*.5)/iResolution.y*2.;\n    vec3 col = vec3(0.);\n    \n    \n    \n    vec2 p0 = vec2( 1. ,.0);\n    vec2 p1 = vec2(  .5,sin(k*PI*2.*5.));\n    vec2 p2 = vec2( -.5,sin(k*PI*2.*3.)*.2);\n    //vec2 p3 = vec2(-1. ,.0);\n    vec2 p3 = vec2(-1. ,cos(k*PI*2.*7.)*.7);\n    \n    Bezier4 b = Bezier4(p0, p1, p2, p3);\n    \n    \n    vec3 cc = hsv2rgb_smooth(vec3(k,1.,1.));\n    //vec3 cc = vec3(1.);\n    DRAW(b, p, cc, lineWidth, col); \n    \n    col *= 40.;\n    \n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    fragColor = (fragColor*float(iFrame) + vec4(col, 1.))/float(iFrame+1);\n//    fragColor = vec4(col, 1.);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define PI\t3.1415926535\n\n\nstruct Circle\n{\n    vec2 ctr;\n    float rad;\n};\n    \nstruct Ray\n{\n    vec2 org;\n    vec2 dir;\n};\n    \nstruct Segment\n{\n    vec2 A;\n    vec2 B;\n};\n    \nstruct Bezier3\n{\n    vec2 A;\n    vec2 B;\n    vec2 C;\n};\n    \nstruct Bezier4\n{\n    vec2 A;\n    vec2 B;\n    vec2 C;\n    vec2 D;\n};\n    \nstruct Grid\n{\n    float inter;\n};\n\nbool intersect(Circle c, Ray r, out vec2 t)\n{\n    float A = dot(r.dir, r.dir);\n    float B = dot(r.dir, -c.ctr+r.org);\n    float C = dot(c.ctr, c.ctr) +dot(r.org, r.org) -2.*dot(c.ctr, r.org) - c.rad*c.rad;\n    \n    float delta = B*B-A*C;\n    \n    if(delta < 0.0)\n    \treturn false;\n\n    t = (vec2(-B) + vec2(sqrt(delta))*vec2(-1.,1.))/A;\n    return true;\n}\n\nvec2 getPt(Ray r, float t)\n{\n    return r.org + t*r.dir;\n}\n\nvec2 getPt(Circle c, float t)\n{\n    return c.ctr + c.rad*vec2(cos(t*PI*2.), sin(t*PI*2.));\n}\n\nvec2 getPt(Segment c, float t)\n{\n    return mix(c.A, c.B, t);\n}\n\nvec2 getPt(Bezier3 c, float t)\n{\n    return mix(mix(c.A, c.B, t), mix(c.B, c.C, t), t);\n}\n\nvec2 getPt(Bezier4 c, float t)\n{\n    return mix(mix(mix(c.A, c.B, t), mix(c.B, c.C, t), t), mix(mix(c.B, c.C, t), mix(c.C, c.D, t), t), t);\n}\n\nfloat dist(Ray r, vec2 p)\n{\n    return abs(dot(r.dir.yx*vec2(-1., 1.), p-r.org)/dot(r.dir, r.dir));\n}\n\nfloat dist(vec2 p0, vec2 p1)\n{\n    return length(p1-p0);\n}\n\nfloat dist(Circle c, vec2 p)\n{\n    return abs(length(c.ctr-p)-c.rad);\n}\n\nfloat dist(Segment s, vec2 p)\n{\n\tvec2 pa = p-s.A, ba = s.B-s.A;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn length( pa - ba*h );\n    \n}\n\nfloat dist(Grid g, vec2 p)\n{\n    vec2 d = mod(p,g.inter);\n    d = min(d, g.inter-d);\n    return min(d.x, d.y);\n}\n\n\n// Solve cubic equation for roots\nvec3 solveCubic(float a, float b, float c)\n{\n    float p = b - a*a / 3.0, p3 = p*p*p;\n    float q = a * (2.0*a*a - 9.0*b) / 27.0 + c;\n    float d = q*q + 4.0*p3 / 27.0;\n    float offset = -a / 3.0;\n    if(d >= 0.0) { \n        float z = sqrt(d);\n        vec2 x = (vec2(z, -z) - q) / 2.0;\n        vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));\n        return vec3(offset + uv.x + uv.y);\n    }\n    float v = acos(-sqrt(-27.0 / p3) * q / 2.0) / 3.0;\n    float m = cos(v), n = sin(v)*1.732050808;\n    return vec3(m + m, -n - m, n - m) * sqrt(-p / 3.0) + offset;\n}\n\n// Find the signed distance from a point to a bezier curve\nfloat dist(Bezier3 B, vec2 p)\n{\n    vec2 a = B.B - B.A, b = B.A - B.B * 2.0 + B.C, c = a * 2.0, d = B.A - p;\n    vec3 k = vec3(3.*dot(a,b),2.*dot(a,a)+dot(d,b),dot(d,a)) / dot(b,b);      \n    vec3 t = clamp(solveCubic(k.x, k.y, k.z), 0.0, 1.0);\n    vec2 pos = B.A + (c + b*t.x)*t.x;\n    float dis = length(pos - p);\n    pos = B.A + (c + b*t.y)*t.y;\n    dis = min(dis, length(pos - p));\n    pos = B.A + (c + b*t.z)*t.z;\n    dis = min(dis, length(pos - p));\n    return dis;\n}\n\nfloat dist(Bezier4 BB, vec2 p)\n{\n    vec2 A = BB.A, B = BB.D;\n    \n    float ppt;\n    float At = .0;\n    float Bt = 1.;\n    \n    vec2 pp;\n    \n    float dis = dist(pp, p);\n    \n    for(int i=0; i<5; ++i)\n    {\n        ppt = (At+Bt)*.5;\n        pp = getPt(BB, ppt);\n        \n        if(dist(Segment(A, pp), p) < dist(Segment(pp, B), p))\n        {\n            Bt = ppt;\n        \tB = getPt(BB, Bt);\n        }\n        else\n        {\n            At = ppt;\n        \tA = getPt(BB, At);\n        }\n            \n    }\n    \n    return min(dist(Segment(A, pp), p), dist(Segment(B, pp), p));\n}\n\n\n#define DRAW(O,P,C,W, CC)\tCC=mix(CC,C,mix(1.,0.,clamp(dist(O,P)*iResolution.y/2. -  W, -1., 1.)*.5+.5))\n\n\n\n\n","name":"Common","description":"","type":"common"}]}