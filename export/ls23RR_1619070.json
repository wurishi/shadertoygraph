{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define MAX_RING_NUMBER 1000.0\nmat4 rotationMatrix(vec3 axis, float angle)\n{\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n                0.0,                                0.0,                                0.0,                                1.0);\n}\nvec4 sphere(float radius,vec3 center, vec2 fragCoord){\n\tvec4 ret;\n\tvec2 uv = fragCoord / iResolution.xy;\n\tvec4 sphere_color = vec4(uv,0.5+0.5*sin(iTime),1.0);\n\tvec4 background_color = vec4(0.0,0.0,0.0,0.0);\n\n\tif(distance(vec3(fragCoord,0.0) ,center.xyz) < radius)\n\t\tret = sphere_color;\n\telse\n\t\tret = background_color;\n\treturn ret;\n}\n/*Returns number of ring, where each ring has approximately \n  size == prev_ring_size*ring_size * ring_incr_step/20.0*/\nfloat get_ring_no(float rings_n,vec3 center,float ring_size,vec3 p,float dist_from_center,float ring_incr_step){\n\tfloat start,end;\n\tfloat i;\n\tfloat decr_step = rings_n / ring_size ;\n\tfloat incr_step = ring_incr_step/ring_size;//ring_size;\n\tfloat current_ring_size,next_ring_size = 0.0;\n\t\n\tnext_ring_size = incr_step;\n\t\n\tfor(float i =0.0; i<MAX_RING_NUMBER;i++){\n\t\tif(i == rings_n)\n\t\t\tbreak;\n\t\t\n\t\tcurrent_ring_size = decr_step + i*ring_size;\n\t\tdecr_step += decr_step;\n\t\tnext_ring_size = decr_step + (i+1.0)*ring_size;\n\t\t\n\t\t\n\t/*\tcurrent_ring_size = next_ring_size;\n\t\tincr_step += incr_step/150.0;//*ring_size;\n\t\tnext_ring_size = current_ring_size + incr_step; \n\t\t*/\n\n\t\t\n\t\tstart = distance(vec2(iResolution.x/2.0,current_ring_size),vec2(center.xy));\n\t\t\n\t\tend = distance(vec2(iResolution.x/2.0,next_ring_size),vec2(center.xy) );\n\t\tif(end >= dist_from_center && dist_from_center >= start)\n\t\t\treturn i;\n\t}\n\treturn i;\n\t\n}\nvec3 move_center(vec3 center){\n\tvec3 ret;\n\tfloat assembly_factor = 670.0;\n\tfloat a = sin(iTime)*iTime/assembly_factor;\n\tret.x = -2.0*center.x *a/20.0 + center.x;\n\tret.y = center.y/20.0;\n\t\n\treturn ret;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat radius = 70.0;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec3 center = vec3(iResolution.x/2.0,iResolution.y/2.0,0.0);\n\tvec4 main_color = vec4(0.0,0.0,0.0,1.0);\n\tvec4 secondary_color = vec4(1.0,1.0,1.0,1.0); \n\tfloat ring_size = 88.0;\n\tfloat ring_incr_step = .02;\n\n\t//ring_incr_step *= sin(iTime);\n\t/*Calculate the new center of the circle */\n\tcenter = move_center(center);\n\t\n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n\tfragColor = sphere(radius,center,fragCoord);\n\t\n\t/*Get the points rotated sibling point*/\n\tvec3 Y = vec3(0.0,1.0,0.0);\n\tmat4 rot = rotationMatrix(Y, cos(iTime));\n\tmat3(rot[0],rot[1],rot[2]);\n\tvec3 p = vec3(fragCoord.xy,0.0);\n\tp = mat3(rot[0],rot[1],rot[2])*p.xyz;\n\t\n\t/*Calculate the sibling's distance from the moved circle's center*/\n\tfloat d_from_center = distance(center.xyz,p);\n\tfloat max_dist = distance(center.xyz,vec3(0.0,0.0,-1.0));\n\t\n\tfloat rings_n = max_dist/ring_size;\n\t\n\t\n\t/*Get the sibling's ring number*/\n\tfloat ring_no = get_ring_no(rings_n,center,ring_size,vec3(fragCoord.xy,1.0),d_from_center,ring_incr_step);\n\t/*In which circle am i?*/\n\t/*Black or white?*/\n\tfragColor = mix(main_color,secondary_color,mod(ring_no,2.0));\n\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ls23RR","date":"1382912370","viewed":157,"name":"Into the void 2","username":"gclkaze","description":"Into the void2 with a sine cosine rotation effect!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sin","periodic"],"hasliked":0,"parentid":"","parentname":""}}