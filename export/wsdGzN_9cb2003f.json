{"ver":"0.1","info":{"id":"wsdGzN","date":"1568015529","viewed":312,"name":"hollow circle","username":"cobalthex","description":"circle; sort of antialiased","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float r = 50.0;\n\tfloat thickness = sin(iTime) * r+r;\n    float z = iResolution.x - iResolution.y;\n    float radius = 1.0;\n    \n    vec2 polar = uv * 2.0 - 1.0;\n    float dist = dot(polar, polar);\n    \n    float circleDist = abs(z * (radius - dist) - thickness);\n    float alpha = clamp(thickness - circleDist, 0.0, 1.0); //thickness here needs to combine with radius somehow\n    \n    float theta = atan(polar.y, polar.x);\n    \n    float seglen = 31.4159265; //segment length - for dashed lines (multiple of pi for a smooth transition)\n    float segoff = iTime * 50.0;\n\tif (seglen > 0.0)\n\t\talpha *= float(mod(theta * z + segoff, seglen * 2.0) > seglen);\n    \n    fragColor = vec4(col * alpha, 1);\n}\n\n\n//todo: uniform radius all the way around","name":"Image","description":"","type":"image"}]}