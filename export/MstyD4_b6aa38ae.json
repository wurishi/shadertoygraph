{"ver":"0.1","info":{"id":"MstyD4","date":"1524669998","viewed":297,"name":"FlowerOfLife","username":"goanautix","description":"-canÂ´t get the cam out","likes":0,"published":1,"flags":18,"usePreview":0,"tags":["rings","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define v2 vec2\n#define v3 vec3\n#define v4 vec4\n#define f1 float\n#define i1 int\n// press A key to use static Degrees\n#define aKey (texture(iChannel2, vec2(0.254901961, 0.25)).x)\n#define DEGRAD ((aKey > 0.5)? true : false)\n\n#define PI2 6.283185307\n#define PI1 3.141592653\n#define FL 0.866025404\n#define scale 30.0\nf1 ci(v2 p){\n\treturn 1.0-length(p);\n}\nf1 cc(v2 p , f1 s){\n    f1 c = ci(p);\n\treturn\tsmoothstep(-s\t, 0.0\t, c) -\n        \tsmoothstep(0.0\t, s \t, c);\t\n}\nf1 flower( v2 p , f1 s , f1 disp , i1 row , i1 cei){\n    // the first loop make the step between the rings\n    // the second loop rotates the UV every for segment\n    // the third loop draw an circle and move the UV to next positon\n    i1 fcount = 1;\n    i1 ceile = cei;\n    f1 displace = disp;\n    f1 angle = (DEGRAD) ? radians(360.0/f1(cei)) : PI2/f1(cei)*sin(iTime*0.1);\n    f1 HFL = disp*sin(radians(360.0/f1(cei)));\n    f1 f = cc(p,s)+cc(p*10.0,s*10.0);\n    p += vec2(0.5,HFL);\n    for(i1 i=0; i<row; i++){\n        for(i1 k=0; k<cei; k++){\n        \tfor(i1 j=0; j<(ceile/cei); j++){\n        \t    p.x -= displace;\n                fcount += 1;\n        \t    f = max(f,cc(p,s));\n        \t}//lklklj\n            v2 sc = v2(sin(angle),cos(angle));\n        \tp *= mat2(sc.y,sc.x,-sc.x,sc.y); \n        }\n        ceile += cei;\n        p.y += displace*HFL;\n        p.x += displace*0.5;\n    }\n    return f;   \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0/0 to 1/1) and move 0/0 to the center\n    vec2 uv = fragCoord/iResolution.xy-0.5;\n\tuv.x *= iResolution.x/iResolution.y;// * aspect ratio \n    uv *= scale*((iMouse.y == 0.0) ? 1.0 : (iMouse.y/iResolution.y)) ;\n    vec3 col = flower(uv,0.01*(scale*((iMouse.x == 0.0) ? 1.0 : (iMouse.x/iResolution.x))),1.0,6,6)*vec3(1.0);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}