{"ver":"0.1","info":{"id":"dsBSRV","date":"1670528461","viewed":139,"name":"Grid Wave Slice","username":"franzbernhard","description":"Inspired by: https://timrodenbroeker.de/processing-tutorial-kinetic-typography-1/\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","wave","sin","sine","slice","offset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 gridCells = vec2(16.0,16.0);\n    float speed = 1.0;\n    float amplitude = 0.1;\n        \n    float gridIndexX = floor(uv.x * gridCells.x);\n    float gridIndexY = floor(uv.y * gridCells.y);\n    \n    float valueX = gridIndexX/(gridCells.x-1.0)*5.0;\n    float valueY = gridIndexY/(gridCells.y-1.0)*5.0;\n    \n    float time = iTime * speed;\n    \n    float sinTimeX = sin(time + valueX);\n    float sinTimeY = sin(time + valueY);\n   \n    \n    uv.x -= sinTimeY * amplitude;\n    uv.y -= sinTimeX * amplitude;\n    \n    fragColor = texture(iChannel0, uv).rgba;\n}","name":"Image","description":"","type":"image"}]}