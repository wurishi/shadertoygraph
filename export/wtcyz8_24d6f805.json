{"ver":"0.1","info":{"id":"wtcyz8","date":"1608460721","viewed":106,"name":"Rosette with 19 circles","username":"rrx","description":"19 circle rosette with breathing colors","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rosette"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rot( in vec2 p, in float an )\n{\n    float cc = cos(an);\n    float ss = sin(an);\n    return mat2(cc,-ss,ss,cc)*p;\n}\n\nfloat bump(float x)\n{\n    return smoothstep(-1., 0., x) - smoothstep(0., 1., x);\n}\n\nfloat smoothbump(float r, float dr, float d)\n{\n    return smoothstep(r-dr, r, d) - smoothstep(r, r+dr, d);\n}\n\nfloat hardbump(float r, float dr, float d) \n{\n    return step(r-dr/2., d) - step(r+dr/2., d);\n\n}\n\nfloat repeat(float x) \n{\n    return 2.*(.5 - abs(mod(x, 1.0) - 0.5));\n}\n\nfloat circle(in vec2 uv, in vec2 uv0, float r, float w) \n{\n    return smoothbump(r, w, length(uv - uv0));\n}\n\n#define FLOWING_COLOR 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     // normalize aspect\n    vec2 R = iResolution.xy;\n    vec2 uv0 = ( R - 2.*fragCoord ) / R.y;\n\n    float r = 1.;\n    float dr = 20./R.x;\n\n    // view port\n    vec2 uv = rot(uv0*3.2, radians(90.));\n\n    // Time varying pixel color\n    #if FLOWING_COLOR == 1\n    vec3 col1 = 0.5 + 0.5*cos(iTime+uv0.xyx+vec3(0,2,4));\n    vec3 col2 = col1.zyx;\n    vec3 col3 = col1.yzx;\n    vec3 col4 = col1.zxy;\n    #else\n    vec3 col1 = vec3(1.,0.,0.);\n    vec3 col2 = vec3(0.,1.,0.);\n    vec3 col3 = vec3(0.,0.,1.);\n    vec3 col4 = vec3(1.,0.,1.);\n    #endif\n\n    // starting color\n    vec3 col = vec3(.1, .0, .0);\n    \n    float a = 360./6.;\n    float z = 0.0;\n    float dcenter = length(uv);\n    vec2 start = vec2(0.,0.);\n    vec2 unitx = vec2(1., 0.);\n    \n    // seed circle\n    col += col1 * circle(uv, vec2(0.,0.), r, dr);\n    \n    // bounding circles for the rosette\n    col += col3 * circle(uv, vec2(0.,0.), 3.*r, dr);\n    col += col3 * circle(uv, vec2(0.,0.), 3.*r + 0.1, dr);\n    \n    for (float x = 0.; x <= a*6.; x += a) {\n        vec2 uv2 = rot(unitx, radians(x));\n        col += col2 * circle(uv, uv2, r, dr);\n        \n        for (float y = 0.; y <= a*1.; y += a) {\n            vec2 uv3 = uv2 + rot(unitx, radians(x+y));\n            float dd = length(uv - uv3);\n            col += col3 * circle(uv, uv3, r, dr);\n\n            for (float z = -a; z <= a*0.; z += a) {\n                vec2 uv4 = uv3 + rot(unitx, radians(x+y+z));\n                if (dd < r) {\n                    col += col4 * circle(uv, uv4, r, dr);\n                }\n                \n                for (float w = 0.; w <= a*2.; w += a) {\n                    vec2 uv5 = uv4 + rot(unitx, radians(x+y+z+w));\n                    if (dd < r) {\n                        col += col1 * circle(uv, uv5, r, dr);\n                    }\n                }\n            }\n        }       \n    }\n                 \n    col.x = clamp(0.,.99, col.x);\n    col.y = clamp(0.,.99, col.y);\n    col.z = clamp(0.,.99, col.z);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}