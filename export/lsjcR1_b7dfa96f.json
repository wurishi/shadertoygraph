{"ver":"0.1","info":{"id":"lsjcR1","date":"1490971848","viewed":266,"name":"Holgaart","username":"dcbrwn","description":"reverse-engeneered from befunky photo editor","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["photoeffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Epsilon = 1e-10;\n \nvec3 RGBToHCV(vec3 RGB)\n{\n    // Based on work by Sam Hocevar and Emil Persson\n    vec4 P = (RGB.g < RGB.b) ? vec4(RGB.bg, -1.0, 2.0/3.0) : vec4(RGB.gb, 0.0, -1.0/3.0);\n    vec4 Q = (RGB.r < P.x) ? vec4(P.xyw, RGB.r) : vec4(RGB.r, P.yzx);\n    float C = Q.x - min(Q.w, Q.y);\n    float H = abs((Q.w - Q.y) / (6.0 * C + Epsilon) + Q.z);\n    return vec3(H, C, Q.x);\n}\n\nvec3 HUEToRGB(float H)\n{\n    float R = abs(H * 6.0 - 3.0) - 1.0;\n    float G = 2.0 - abs(H * 6.0 - 2.0);\n    float B = 2.0 - abs(H * 6.0 - 4.0);\n    //return saturate(vec3(R,G,B));\n    return clamp(vec3(R,G,B),0.0,1.0);\n}\n\nvec3 HSVToRGB(vec3 HSV)\n{\n    vec3 RGB = HUEToRGB(HSV.x);\n    return ((RGB - 1.0) * HSV.y + 1.0) * HSV.z;\n}\n\nvec3 RGBToHSV(vec3 RGB)\n{\n    vec3 HCV = RGBToHCV(RGB);\n    float S = HCV.y / (HCV.z + Epsilon);\n    return vec3(HCV.x, S, HCV.z);\n}\n\nvec3 modifyHSV(vec3 color, vec3 params)\n{\n    vec3 result = RGBToHSV(color);\n    result += params;\n    return HSVToRGB(result);\n}\n\n\nfloat blendOverlay(float base, float blend) {\n    return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n    return vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 shift = vec2(-50.0, 0.0);\n    vec2 uv1 = fragCoord.xy / iResolution.xy;\n    vec2 uv2 = (fragCoord.xy + shift) / iResolution.xy;\n    vec4 src1 = texture(iChannel0, uv1, 0.0);\n    vec4 src2 = texture(iChannel0, uv2, 0.0);\n\n    src1.g = src1.b;\n    src2.g = src2.b;\n\n    vec4 inverted = vec4(modifyHSV(src2.rgb, vec3(0.5, 0.0, 0.0)), 0.0);\n    \n    fragColor.rgb = blendOverlay(src1.rgb, inverted.rgb);\n}","name":"Image","description":"","type":"image"}]}