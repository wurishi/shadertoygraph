{"ver":"0.1","info":{"id":"wtyfzV","date":"1614841160","viewed":294,"name":"Radar Panel","username":"willis","description":"Have Fun with Radar :)","likes":7,"published":1,"flags":64,"usePreview":0,"tags":["2d","soundcloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ltXXWH","filepath":"https://soundcloud.com/indierocktopus/sample-g22","previewfilepath":"https://soundcloud.com/indierocktopus/sample-g22","type":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n#define TAU 6.283184\n#define S(a, b, t) smoothstep(a, b, t)\n#define saturate(a) clamp(a, 0., 1.)\n#define BASECOLOR vec3(0.01, 0.98, 0.03)\n#define LINECOLOR vec3(0.5, 0.98, 0.7)\n#define ALERTCOLOR vec3(0.95, 0.15, 0.13)\n\nfloat DistLine(vec2 a, vec2 b, vec2 p){\n    vec2 AP = p - a;\n    vec2 AB = b - a;\n    float t = clamp(dot(AP, AB)/ dot(AB, AB), 0., 1.);\n    return length(AP - AB * t);\n}\n\nfloat HASH21(vec2 p){\n    float n = fract(sin(p.x * 67.972) * 457.11 * sin(p.y * 487.31) * 735.24);\n    n += dot(p, p + 137.45);\n    return fract(n);\n}\n\nvec2 HASH22(vec2 p){\n    float n = HASH21(p);\n    return vec2(n, HASH21(p+n));\n}\n\nmat2 Rot(float a){\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nvec2 ScanLine(vec2 uv, vec2 polarUv, float mask,float t){\n    polarUv.y = fract(polarUv.y + t);\n    \n    float line = S(0.004, 0.002, DistLine(vec2(0., 0.), vec2(.0, -0.5), uv * Rot(-t * TAU)));\n    float scan = 0.; \n    scan += S(0.4, 0.7, abs(polarUv.y-0.4))  ;\n    scan = saturate(scan - line) * mask;\n    \n    return vec2(scan, line * mask);\n}\n\nfloat grid(vec2 uv, vec2 polarUv, float mask, float t){\n    \n    vec2 gv = fract(polarUv * 8.) - 0.5;\n    \n    float grid = S(0.46, 0.5, abs(gv.x));\n    grid = mix(grid, S(0.495, 0.499, abs(fract(uv.x) - .5)) + S(0.495, 0.499, abs(fract(uv.y) - .5)), grid);\n\n    uv *= Rot(sin((t+sin(3. * t))*.5));\n    \n    grid += (S(0.495, 0.499, abs(fract(uv ).x - .5)) + S(0.495, 0.499, abs(fract(uv ).y - .5))) * 0.2;\n    grid += S(0.004, 0.002, DistLine(vec2(0., -0.35), vec2(.0, -0.5), uv ));\n    grid += S(0.004, 0.002, DistLine(vec2(0., 0.35), vec2(.0, 0.5), uv ));\n    grid += S(0.004, 0.002, DistLine(vec2(0.35, 0.), vec2(.5, 0.), uv ));\n    grid += S(0.004, 0.002, DistLine(vec2(-0.35, 0.), vec2(-.5, 0.), uv ));\n    grid += S(.02, .018, abs(uv.x)) * S(0.04, 0.03,fract(abs(uv.y) * 10.)) * ceil(length(uv) - 0.05);\n    grid += S(.02, .018, abs(uv.y)) * S(0.04, 0.03,fract(abs(uv.x) * 10.)) * ceil(length(uv) - 0.05);\n    grid = grid  * mask;\n    \n    return grid;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 oriUV = uv;\n    \n    float fft1 = texelFetch(iChannel3, ivec2(0., 1.), 0).x ;\n    fft1 *= S(14.8, 15., iTime);\n    \n    uv *= (fft1 * 0.02 + 0.35) * 3.1;\n    \n    vec3 col = vec3(0);\n    float t = iTime * -0.2;\n\n    float d = length(uv);\n    float a = atan(uv.x, uv.y)/PI * 0.5 + 0.5; //ramap -Pi Pi to 0 1\n    vec2 polarUv = vec2(d, a);\n    \n    float m = S(0.5, 0.48, d);\n\n    vec3 outline = S(0.01, .003, abs(d-0.5)) * BASECOLOR ;\n    \n    vec2 scanline = ScanLine(uv, polarUv, m, t);\n    \n    //uv *= 5. ;\n    vec2 gv = fract(uv * 3.)-.5;\n    vec2 id = floor(uv * 3.);\n    \n    vec2 n = (HASH22(id) - .5) * t  * 2.;\n    vec2 p = (sin(n+t*2.) * 0.4) * 0.5 - gv;\n    \n    float sparkle = 0.01 / dot(p, p);\n    sparkle *= sin(t * 10. + p.y) * .5 + .5;\n    float circle = fract((length(p) * 10.)+t * 3.) * (S(.23, 0.18, length(p)) ) * (1. - length(p)) * floor(HASH21(id) + 0.5);\n    \n    sparkle *= scanline.x;\n    \n    \n    col += scanline.x * BASECOLOR + scanline.y * LINECOLOR;\n    col += outline;\n    col += grid(uv, polarUv, m, t) * BASECOLOR;\n    col += sparkle * BASECOLOR * scanline.x;\n    col += circle * ALERTCOLOR * scanline.x;\n    col += HASH21(uv) * (m) * BASECOLOR * 0.1;\n    \n\n    oriUV *= 32.;\n    oriUV.y += HASH21(floor(oriUV)) * t * 10. * S(14.5, 15., iTime);;\n    \n    gv = fract(oriUV) / 16.;\n    id = floor(oriUV) ;\n    \n    vec2 randGV = gv + floor(HASH22(id) * 16. + t)/16.;\n    \n    float fft2 = texelFetch(iChannel3, ivec2(0.7, 0.), 0).x ;\n    \n    float text = texture(iChannel0, randGV).r * floor(1. - m) * (sin(HASH21(id) * TAU + t * 15.) * .5 + .5);\n    \n    text *= fft2;\n\n    col +=  text * BASECOLOR; \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}