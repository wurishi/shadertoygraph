{"ver":"0.1","info":{"id":"3s2yRG","date":"1586860371","viewed":170,"name":"splitting cells","username":"nexor","description":"Space key resets.\nUse mouse to draw.","likes":2,"published":1,"flags":52,"usePreview":0,"tags":["reactiondiffusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    vec3 col = vec3(.0);\n    vec2 p = (fragCoord.xy-.5*resolution)/resolution.y;\n    \n    {\n        col += dot(vec3(0.2126,.7152,.0722),texture(iChannel0,fragCoord/iResolution.xy).rgb);\n    }\n    col = cos(iTime*.1*vec3(2,3,5)+pi/2.+119.*pi/16.+vec3(13,14,15)*dot(col,vec3(1.)))*.5+.5;\n    col = rgb2hsv(col);\n    col.x -= iTime*.1;\n    col.y *= .8;\n    col.z *= .7;\n    col = hsv2rgb(col);\n    col = pow(col,vec3(1./2.2));\n \tfragColor = vec4(col,1.);   \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define time iTime\n#define resolution iResolution.xy\n\n#define replim(x,n,a,b) ((p)-(n)*clamp(round(p/n),(a),(b)))\n#define fetch(pass,uv) texelFetch(pass,ivec2(mod(vec2(uv),(res))),0)\n\nconst float pi = acos(-1.);\n\nfloat rect(vec2 p, vec2 s)\n{\n    p=abs(p)-s;\n    return max(p.x,p.y);\n}\n\nfloat circle(vec2 p,float r)\n{\n    return length(p)-r;\n}\n\nmat2 rot(float a)\n{\n    float c=cos(a),s=sin(a);\n    return mat2(c,-s,s,c);\n}\n\nfloat rand(vec2 n) {\n\t\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\nfloat noise(vec2 p)\n{\n\t\tvec2 ip = floor(p);\n\t\t\tvec2 u = fract(p);\n\t\t\tu = u*u*(3.0-2.0*u);\n\t\t\tfloat res = mix(\n\t\t\t\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\t\t\t\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\t\t\t\t\t\t\treturn res*res;\n}\nconst mat2 M =mat2(\n\t.74,-.52,\n\t.64,.73\n);\nfloat fbm(vec2 p)\n{\n    float f = 0.0;\n    f += 0.5000*noise( p ); p*=M*2.02;\n    f += 0.2500*noise( p ); p*=M*2.03;\n    f += 0.1250*noise( p ); p*=M*2.01;\n    f += 0.0625*noise( p );\n    f /= 0.9375;\n    return f;\n}\n\nvec3 rgb2hsv(vec3 c)\n{\n\tvec4 X = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = mix(vec4(c.bg, X.wz), vec4(c.gb, X.xy), step(c.b, c.g));\n\tvec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n\tvec4 k= vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + k.xyz) * 6.0 - k.www);\n\treturn c.z * mix(k.xxx, clamp(p - k.xxx, 0.0, 1.0), c.y);\n}\n\nvec2 laplace(out vec2 prev, sampler2D pass, vec2 res)\n{\n    vec2 lap=vec2(0.);\n    ivec2 fc = ivec2(gl_FragCoord.xy);\n    ivec3 off = ivec3(-1.,0.,1.);\n    vec2 w = vec2(.2,.05);\n    \n    lap += fetch(pass,fc+off.xx).xy*w.y;\n    lap += fetch(pass,fc+off.xy).xy*w.x;\n    lap += fetch(pass,fc+off.xz).xy*w.y;\n    lap += fetch(pass,fc+off.yx).xy*w.x;\n    prev = fetch(pass,fc+off.yy).xy;\n    lap += fetch(pass,fc+off.yz).xy*w.x;\n    lap += fetch(pass,fc+off.zx).xy*w.y;\n    lap += fetch(pass,fc+off.zy).xy*w.x;\n    lap += fetch(pass,fc+off.zz).xy*w.y;\n    lap += -prev;\n    \n    return lap;\n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 get_params(vec2 p, float f)\n{\n    \n\tfloat A = .7;\n\tfloat B = .3;\n    float a = iTime*.01;\n    float k = length(p);\n    p -= vec2(cos(a),sin(a))*1.;\n    p*=.25;\n    //f = fbm(p*8. + 8.*fbm(p*4.));\n    //f = cos(f*pi*4.)*.75;\n    //f *= smoothstep(.5,.3,k);\n    //f = f*2.-1.;\n    //f*=8.15;\n\tfloat F = .025+.015*cos(pi*2.*f+iTime*.1+p.x*pi*2.)*cos(p.y*pi*2.);\n\tfloat K = .0545;\n    return clamp(vec4(A,B,F,K),0.,1.);   \n}\n\nfloat get_dt(vec2 p)\n{\n \treturn 1.25;   \n}\n\nfloat seed()\n{\n    return texture(iChannel1,gl_FragCoord.xy/resolution).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/resolution;\n    vec2 p = (fragCoord.xy-.5*resolution)/resolution.y;\n    float w = fwidth(p.y);\n    \n    vec3 col = vec3(0.);\n    float space = texelFetch(iChannel2,ivec2(32,1),0).x;\n    float backspace = texelFetch(iChannel2,ivec2(8,1),0).x;\n    float buf = texelFetch(iChannel3,ivec2(mod(length(p)*512.,512.),1),0).x;\n    \n    buf=mod(buf+.65,1.);\n    \n    if ( backspace > .5)\n    {\n        col.rg = vec2(0);\n    }\n    else if(time < 1. || space > .5)\n    {\n        col.rg = vec2(1.,seed()*.12);\n    }\n    else\n    {\n        vec2 mouse = (iMouse.xy-.5*resolution)/resolution.y;\n        vec2 click = (iMouse.zw-.5*resolution)/resolution.y;\n        \n        if(iMouse.z >.0)\n        {\n            col += smoothstep(w,.0,circle((p-(mouse)),.1))*4.5;\n        }\n        \n        vec2 curr = vec2(0.);\n        vec2 prev = vec2(0.);\n        vec2 lap = laplace(prev,iChannel0,resolution);\n        vec4 pms = get_params(p,buf);\n        float da=pms.x,db=pms.y;\n        float f=pms.z, k=pms.w;\n        \n        \n        float dt = get_dt(p);\n        \n        float pr = prev.x*prev.y*prev.y;\n        \n        curr.x = da * lap.x - pr + f * (1.-prev.x);\n        curr.y = db * lap.y + pr - (k + f) * prev.y;\n   \n        curr = prev + curr*dt;\n        \n        col += vec3(curr.xy,0.);\n        col = clamp(col,.0,1.);\n        float a = atan(p.y,p.x);\n        //col *= smoothstep(.8,.4,length(p));\n    }\n    \n    \n    fragColor = vec4(col,1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}