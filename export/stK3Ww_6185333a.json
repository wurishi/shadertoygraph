{"ver":"0.1","info":{"id":"stK3Ww","date":"1646757849","viewed":162,"name":"tree ring","username":"jiaolyulu1","description":"this is trying to simulate the tree ring","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["tree","ring","slice","circular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,c) smoothstep(a,b,c)\n\nfloat N21 (vec2 p){\n\tfloat d = fract(sin(p.x*110.+(8.21-p.y)*331.)*1218.);\n    return d;\n}\n\nfloat Noise2D(vec2 uv){\n    vec2 st = fract(uv);\n    vec2 id = floor(uv);\n    st = st*st*(3.0-2.0*st);\n    float c=mix(mix(N21(id),N21(id+vec2(1.0,0.0)),st.x),mix(N21(id+vec2(0.0,1.0)),N21(id+vec2(1.0,1.0)),st.x),st.y);\n\treturn c;\n}\n\nfloat fbm (vec2 uv){\n    \n    float c=0.;\n\tc+=Noise2D(uv)/2.;\n    c+=Noise2D(2.*uv)/4.;\n    c+=Noise2D(4.*uv)/8.;\n    c+=Noise2D(8.*uv)/16.;\n    return c/(1.-1./16.);\n}\nvec2 rot(vec2 uv,float a){\n\treturn vec2(uv.x*cos(a)-uv.y*sin(a),uv.y*cos(a)+uv.x*sin(a));\n}\nfloat line(vec2 a, vec2 b, vec2 p){\n\tvec2 ap = p-a;\n    vec2 ab = b-a;\n    float t = clamp(dot (ap,ab)/dot(ab,ab),0.0,1.0);\n    vec2 at = t*ab;\n    vec2 pt = at-ap;\n    return length(pt);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-0.5;\n    uv.x*=iResolution.x/iResolution.y;\n    float l=length(uv);\n    vec2 uv_o=uv;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    uv.x-=0.24*sin(6.28*fbm(rot(uv*pow(l,0.5),iTime*0.05)*2.6)+iTime*0.2)*pow(l,sin(iTime*0.2)+2.0);\n    uv.y-=0.24*sin(6.28*fbm(rot(uv*pow(l,0.5),iTime*0.05)*2.6)+iTime*0.2)*pow(l,sin(iTime*0.2)+2.0);\n    // Time varying pixel color\n    \n    uv=rot(uv,-iTime*0.02*(pow(l,0.5)-0.5));\n    float off=texture(iChannel0,rot(uv/20.,iTime*0.1)).r;\n    \n    float m=fract(length(uv)*40.*pow(l,1.5));\n    float n=floor(length(uv)*50.*pow(l,1.5));\n    float width=(fract(n*324.543)*2.+0.5)*0.14;\n    float brown=S(1.0,1.0-width,m)*S(0.,width,m);\n    vec3 color=vec3(0.37,0.32,0.28)+vec3(0.1,0.1,0.1)*floor(n/10.)+vec3(0.2,0.2,0.19)*Noise2D(rot(uv*10.+iTime*0.003,iTime*0.1)*1.2)*0.3;\n    color-=(1.0-brown)*vec3(0.8,1.0,1.0)*width*1.7*off*(sin(iTime*0.2)-0.5);\n    float lightBrown=S(1.2,0.8,m)*S(0.6,0.9,m);\n    color-=lightBrown*vec3(0.15,0.2,0.25)*off*sin(n)*2.;\n    color+=vec3(0.9,0.9,0.8)*0.2*fbm(vec2(fract(length(uv*30.))+iTime*0.1,uv.y));\n    \n    float angle=fract(atan(uv.y,uv.x));\n    float crack;\n    //crack=S(0.02,0.0,line(vec2(0.,0.),vec2(1.,1.),uv_o));\n    vec3 col = color;\n    //col=vec3(crack);\n    \n    // Output to screen\n    fragColor = vec4(col,0.8);\n}","name":"Image","description":"","type":"image"}]}