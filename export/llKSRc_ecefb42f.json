{"ver":"0.1","info":{"id":"llKSRc","date":"1485303806","viewed":207,"name":"Sphere of Hollow","username":"Flopine","description":"A little test about \"cutting\" pieces with an other. Use your mouse to move the spheres.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","interaction","intersect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SDF (vec3 pos)\n{\n    vec3 MPos = iMouse.xyz * 2.0 / iResolution.xyx;\n    pos = mod(pos+6.0, 12.0) - 6.0;\n    float SPH = length (pos * MPos) -2.0;\n    //float SPH = length (pos + (0.0, 0.0, 3.0)) - 3.0;\n\t//float SPH = length (vec3 (MPos,-2.0)) - 2.0;\n    float SPH2 = length (pos) - 4.0;\n\t\n    return max(-SPH, SPH2);\n}\n\nvec3 albedo (vec3 pos)\n{\n\tpos *= 0.2;\n\tfloat f = smoothstep (0.1, 0.7, fract (pos.z));\n\treturn f * vec3(1.0,1.0,1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = -1.0 + 2.0 * (fragCoord.xy / iResolution.xy);\n    uv.x *= iResolution.x / iResolution.y;\n    //vec4 MPos = iMouse / iResolution.xxxx;\n    \n    vec3 pos = vec3 (uv,-10.0); // position cam\n\tvec3 dir = normalize (vec3 (uv, 1.0)); // direction cam\n\t\n\tvec3 color = vec3(1.0);\n   \n\tfor (int i=0; i<100; i++)\n   \t {\n\t\tfloat d = SDF(pos);\n\t\tif (d < 0.01) \n\t\t{\n\t\t    color = albedo(pos);\n\t\t    break;\n\t\t}\n\t\t \n\t\tpos += d * dir; // on avance le long du rayon\n   \t }\n    \n\tfragColor = vec4 (color,1.0);\n}","name":"Image","description":"","type":"image"}]}