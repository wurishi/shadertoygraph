{"ver":"0.1","info":{"id":"DtXGWf","date":"1672511369","viewed":108,"name":"The sin of tan and friends.","username":"blurryroots","description":"Sin and a bit of a tan ‚òÄÔ∏èüï∂","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","distortion","sin","distance","repeat"],"hasliked":0,"parentid":"ctf3DX","parentname":"Sinefeld"},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n#define F fragCoord\n\nconst float pi = 355. / 113.;\nconst float halfpi = 0.5 * pi;\nconst float phi = 0.5 * (1. + sqrt (5.));\nconst float phi0 = phi - 1.;\nconst float phi0i = 1. - phi0;\n\nfloat psin (float t) {\n    return 0.5 * (1. + sin (pi * t - halfpi));\n}\nvec2 psin (vec2 t) {\n    return 0.5 * (1. + sin (pi * t - halfpi));\n}\nfloat pcos (float t) {\n    return 0.5 * (1. + cos (pi * t));\n}\nvec2 pcos (vec2 t) {\n    return 0.5 * (1. + cos (pi * t));\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    float t = iTime;\n    float r = R.x / R.y;\n    vec2 uv = fragCoord / R.xy;\n    vec2 uvn = (fragCoord - 0.5 * R.xy)\n        / max (R.x, R.y)\n        ;\n       \n    vec2 zuv = 33. * psin (0.3 * t) * uvn;\n    float t_mode = 0.3 * t;\n    int mode = int (floor (mod (t_mode, 18.)));\n    float l = 0.;\n    if (0 == mode) {\n        l = length (psin (zuv));\n    }\n    else if (1 == mode) {\n        l = length (sin (zuv));\n    }\n    else if (2 == mode) {\n        l = length (pcos (zuv));\n    }\n    else if (3 == mode) {\n        l = length (cos (zuv));\n    }\n    else if (4 == mode) {\n        l = length (tan (zuv));\n    }\n    else if (5 == mode) {\n        l = length (sin (tan (zuv)));\n    }\n    else if (6 == mode) {\n        l = length (zuv - sin (zuv));\n    }\n    else if (7 == mode) {\n        l = length (zuv - psin (zuv));\n    }\n    else if (8 == mode) {\n        l = length (zuv - cos (zuv));\n    }\n    else if (9 == mode) {\n        l = length (zuv - pcos (zuv));\n    }\n    else if (10 == mode) {\n        l = length (zuv - tan (zuv));\n    }\n    else if (11 == mode) {\n        l = length (zuv - sin (tan (zuv)));\n    }    \n    else if (12 == mode) {\n        l = length (zuv + sin (zuv));\n    }  \n    else if (13 == mode) {\n        l = length (zuv + psin (zuv));\n    } \n    else if (14 == mode) {\n        l = length (zuv + cos (zuv));\n    }\n    else if (15 == mode) {\n        l = length (zuv + pcos (zuv));\n    }\n    else if (16 == mode) {\n        l = length (zuv + tan (zuv));\n    }\n    else if (17 == mode) {\n        l = length (zuv + sin (atan (zuv)));\n    }\n    float s = smoothstep (phi * r, -phi0 * r, l);\n    \n    vec2 tuv = mix (uvn, vec2 (s), psin (0.3 * t));\n    vec3 color = vec3 (0.5, 0.0, 0.5);\n    color =  (0. + s) * texture (iChannel0, 1. * tuv).rgb;\n    color += (1. - s) * texture (iChannel1, 1. * tuv).rgb;\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}