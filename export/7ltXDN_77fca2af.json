{"ver":"0.1","info":{"id":"7ltXDN","date":"1639166940","viewed":202,"name":"Orthodoodle evvvil alt","username":"5t0n3r1pp3r","description":"just messing with stuff","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["station"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Learning a lot from this and enjoying this site \n\n\n//Original Coder >> evvvvil \n// Pencilvester's orthodoodle - Result of an improvised live coding session on Twitch\n// LIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 20:00 Uk time: \n// https://www.twitch.tv/evvvvil_\n\n// \"Rick, I'm Pencilvester. Listen to that name. You can't kill me.\" - Pencilvester\n\nfloat t,tt,bb,g;vec2 z,v,e=vec2(.00035,-.00035);vec3 np,bp,pp,op,po,no,cp,al,ld;\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nfloat bo(vec2 p,vec2 r){p=abs(p)-r;return max(p.x,p.y);}\nfloat box(vec3 p,vec3 r){p=abs(p)-r;return max(max(p.x,p.y),p.z);}\nfloat ex(vec3 p,float sdf,float h){vec2 w=vec2(sdf,abs(p.y)-h);return min(max(w.x,w.y),0.0)+length(max(w,0.0));}\nconst float[] ca = float[4](-0.785,-0.6154,-0.8,-0.6154);\nconst float[] cb = float[4](1.57,-.785,4.185,-.785);\nconst float[] cc = float[4](7.,9.,8.,10.);\nvec2 mp( vec3 p,float ga)\n{  \n  p.yz*=r2(ca[int(bb)]);\n  p.xz*=r2(cb[int(bb)]);  \n  op=p;\n  p.x=mod(p.x-tt-1.0,10.)-5.;\n  vec2 t=vec2(1000,5),h=vec2(1000,3);\n  float glo=1000.,sinner=sin(op.x)*.2;\n  p.yz*=r2(.785);\n  pp=p;  \n  pp.yz=abs(pp.yz)-4.2+sinner;\n  pp.yz*=r2(.4);\n  vec3 u=vec3(pp.xz,1);\n  np=pp;\n  float cla=clamp(sin(pp.y*.5),-.25,.25);\n  for(int i=0;i<6;i++){\n    float I=float(i);\n    u.xy=abs(u.xy)-1.5-0.5*cla;\n    u.xy*=r2(.785*mod(I,2.));\n    u*=1.55;\n   // t.x=min(t.x,ex(pp,abs(bo(u.xy,vec2(.5,2.0/u.z*.7))/u.z)-.02,4.-I*.5));        \n    h.x=min(h.x,ex(pp,bo(u.xy,vec2(.2,1.5/u.z*.75))/u.z,5.-I*.5));    \n    if(i<3&&ga>0.)glo=min(glo,ex(pp,abs(bo(u.xy,vec2(.3,1.7/u.z*.75))/u.z)-.0,4.-I*.5));        \n  }   \n  float sp=-(length(op.yz)-3.+sinner);\n  t=t.x<h.x?t:h;//t.x*=0.9;\n  t.x=max(t.x,op.y);\n  //t.x=max(t.x,sp);\n  pp=op+vec3(0,13.5,0);pp.z=abs(pp.z)-8.5;\n  h=vec2(box(pp,vec3(20,10,5)),6);\n  h.x=min(h.x,box(pp-vec3(0,4,4.2-sinner),vec3(20,10,5)));\n  if(ga>0.){\n    glo=max(glo,op.y);\n    //glo=max(glo,sp);\n    g+=0.1/(0.1+glo*glo*400.);  \n    h.x=min(h.x,glo);  \n  }  \n  t=t.x<h.x?t:h;  cp=p;\n\treturn t;\n}\nvec2 tr( vec3 ro,vec3 rd)\n{\n  vec2 h,t=vec2(.1);\n  for(int i=0;i<128;i++){\n  h=mp(ro+rd*t.x,1.);\n    if(h.x<.0001||t.x>18.) break;\n    t.x+=h.x;t.y=h.y;\n  }\n  if(t.x>18.) t.y=0.;\n\treturn t;\n}\n#define a(d) clamp(mp(po+no*d,0.).x/d,0.,1.)\n#define s(d) smoothstep(0.,1.,mp(po+ld*d,0.).x/d)\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1);\n  tt=mod(iTime,62.8)+5.0;\n  bb=mod(floor(tt*.2),1.);\t\n  vec3 ro=vec3(uv*cc[int(bb)],-8.),\n  rd=vec3(0.,0.,1.),co,fo;\n  co=fo=vec3(.1)-length(uv)*.1;\n  ld=normalize(vec3(-.5,.5,-.3));\n  z=tr(ro,rd);t=z.x;  \n  if(z.y>0.){   \n    po=ro+rd*t;\n    no=normalize(e.xyy*mp(po+e.xyy,0.).x+e.yyx*mp(po+e.yyx,0.).x+e.yxy*mp(po+e.yxy,0.).x+e.xxx*mp(po+e.xxx,0.).x);\n    al=vec3(.1,.2,.4)-ceil(abs(sin(np.y*15.))-.1)*.1;\n    if(z.y<5.) al=vec3(0)-ceil(cos(np.x*100.0));\n    //if(z.y>5.) al=vec3(1),no-=0.2*ceil(abs(cos((cp)*5.2))-.05),no=normalize(no);    \n    float dif=max(0.,dot(no,ld)),\n    fr=pow(1.+dot(no,rd),4.),\n    sp=pow(max(dot(reflect(-ld,no),-rd),0.),30.);\n    co=mix(sp+al*(a(0.1)+.2)*(dif+s(.5)),fo,min(fr,.5));\n    co=mix(fo,co,exp(-.0001*t*t*t));\n  }\n  co=mix(co,co.xzy,length(uv*.7));\n  \n  fragColor = vec4(pow(co+g*.2*mix(vec3(1.,.5,0.),vec3(1.),sin(t*po)*.5-.2),vec3(.45)),1)*vec4(uv+uv/uv,uv);\n}","name":"Image","description":"","type":"image"}]}