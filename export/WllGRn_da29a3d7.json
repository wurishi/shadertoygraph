{"ver":"0.1","info":{"id":"WllGRn","date":"1555498534","viewed":1050,"name":"Rising bubbles","username":"avin","description":"simple circles demo","likes":26,"published":3,"flags":0,"usePreview":0,"tags":["circles","simple","learn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SIZE 20.\n#define BLACK_COL vec3(32,43,51)/255.\n#define WHITE_COL vec3(235,241,245)/255.\n\n// Get random value\nfloat rand(vec2 co) { \n    return fract(sin(dot(co.xy , vec2(12.9898, 78.233))) * 43758.5453);\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{       \n    vec2 uv = fragCoord.xy/iResolution.y;\n    float smf = 1./(iResolution.y) * SIZE * 2.; // smooth factor\n    \n    vec2 ruv = uv*SIZE;    \n    vec2 id = ceil(ruv);       \n        \n    ruv.y -= iTime*2. * (rand(vec2(id.x))*0.5+.5); // move up\n    ruv.y += ceil(mod(id.x, 2.))*0.3 * iTime; // every 2nd column always move faster \n    vec2 guv = fract(ruv) - 0.5; // ceneterize guv   \n    \n    ruv = ceil(ruv);    \n    float g = length(guv);\n    \n    float v = rand(ruv)*0.5; // random bubble size     \n    v *= step(0.1, v); // remove too small bubbles\n    float m = smoothstep(v,v-smf, g);\n    v*=.8; // bubble inner empty space\n    m -= smoothstep(v,v-smf, g);\n    \n    vec3 col = mix(BLACK_COL, WHITE_COL, m); // final color\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}