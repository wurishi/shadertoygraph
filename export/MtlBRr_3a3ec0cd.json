{"ver":"0.1","info":{"id":"MtlBRr","date":"1510847316","viewed":381,"name":"grid transition","username":"laserdog","description":"grid transition shader. written just for practice. inspired by the game \"bitball\"","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","transition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float gridTileWidth = .25;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float thickness = 2. / iResolution.y;\n    float speed = 1. / 5.;\n    float repeat = 3.;\n    float thicknessModifier = 7.;\n    \n    vec2 node = round(uv / vec2(gridTileWidth)) * gridTileWidth;\n    float t = mod(iTime, repeat) * speed;\n    \n    // more distortion over distance, less distortion over time\n    float nodeOffset = 1. - t - (1. - distance(node, vec2(0.)) / thicknessModifier);\n    float uvOffset = 1. - t - (1. - distance(uv, vec2(0.)) / thicknessModifier);\n\n    vec2 dist = abs(uv - node) - vec2(nodeOffset);\n    \n    float num = min(abs(dist.x), abs(dist.y));\n    \n    fragColor = mix(texture(iChannel0, fragCoord.xy / iResolution.xy),\n                    texture(iChannel1, fragCoord.xy / iResolution.xy),\n                  max(0., uvOffset / (gridTileWidth / 2.)));\n    fragColor *= (mod(iTime, repeat) + .5) / repeat;\n    fragColor.r += mix(0., step(num, thickness), max(0., sign(dist.y + dist.x)));\n}","name":"Image","description":"","type":"image"}]}