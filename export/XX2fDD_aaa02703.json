{"ver":"0.1","info":{"id":"XX2fDD","date":"1730389307","viewed":41,"name":"MetaballsAIclubTesting","username":"dom_the_whale","description":"metaballs","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["metaballs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smoothing = 7.001;\n\nconst int numofballs = 3;\nvec3 balls[numofballs];\n\nfloat seed = 0.;\n\nfloat rand(vec2 co){\n    seed += fract(sin(dot(co + vec2(seed), vec2(12.9898, 78.233))) * 43758.5453);\n    return fract(sin(dot(co + vec2(seed), vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat OBB( in vec2 p, in vec2 a, in vec2 b, float th )\n{\n    float l = length(b-a);\n    vec2  d = (b-a)/l;\n    vec2  q = p-(a+b)*0.5;\n          q = mat2(d.x,-d.y,d.y,d.x)*q;\n          q = abs(q)-vec2(l*0.5,th);\n    float brightness = length(max(q,0.0)) + min(max(q.x,q.y),0.0);\n    brightness = max(brightness, 0.01);\n    return smoothing/brightness;    \n}\n\nfloat circles(float x, float y) {\n        float pixstrength = 0.;\n        float smoothstrength = 0.;\n        for(int i = 0; i < numofballs; i++){\n            float tempbr = length(vec2(balls[i][0] - x, balls[i][1] - y)) - balls[i][2];\n            tempbr = max(tempbr, 0.01);\n            pixstrength += smoothing / tempbr;\n        }\n        \n        \n        return pixstrength;\n    } \n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float seed = float(iFrame);\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 450. * 2.;\n    \n    \n    float dir[numofballs];\n    for(int i = 0; i < numofballs; i++){\n        dir[i] = rand(vec2(float(seed))) * 2. * 3.1415926;\n    }\n    balls[0] = vec3(0.,0.,70.);\n    for(int i = 1; i < numofballs; i++){\n        balls[i] = vec3(cos(dir[i])*90. + balls[i-1][0],sin(dir[i])*90. + balls[i-1][1], rand(vec2(float(seed)))*50. + 50. );\n    }\n    \n    float col = circles(uv.x, uv.y);\n    \n    float boxdir = rand(vec2(float(seed))) * 2. * 3.1415926;\n    int randindex = int(rand(vec2(float(seed))) * float(numofballs + 1) - 0.1);\n    vec2 boxstartpos = vec2(balls[randindex][0], balls[randindex][1]);\n    \n    col += OBB(uv, boxstartpos, boxstartpos + vec2(cos(boxdir), sin(boxdir)) * (rand(vec2(float(seed))) * 200. + 150.), 20.);\n    \n    \n    if(col > 0.5 && col < .9){\n        col = 0.;\n    }else{\n        col = 1.;\n    }\n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}