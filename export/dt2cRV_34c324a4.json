{"ver":"0.1","info":{"id":"dt2cRV","date":"1692044326","viewed":272,"name":"Tau-Sine","username":"ENDESGA","description":"creating a near-perfect approximation via a new tau identity that I came up with:\ncos(x) = (5tau^2 / 4x^2 + tau^2) - 4","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["example","sine","trig"],"hasliked":0,"parentid":"ctjyzG","parentname":"Fake Sine"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define tau 6.283185307179586476925286766559\n#define tausqr ( tau * tau )\n#define pi (tau / 2.)\n#define pi_d2 (pi / 2.)\n\n// tau_sin( x ) follows: cos(x) = ((5tau^2) / (4x^2 + tau^2)) - 4\n// copyright @ENDESGA 2023\nfloat tau_sin( float x )\n{\n    float px = mod(x + pi, tau);\n    x = (px < 0.) ? (pi - (px + tau)) : (pi - px);\n    if (px >= pi) {\n        x += pi_d2;\n        return -(4. - (5. * tausqr) / (tausqr + (4. * x * x)));\n    } else {\n        x -= pi_d2;\n        return -((5. * tausqr) / (tausqr + (4. * x * x)) - 4.);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 U = (fragCoord/res-0.5)*vec2(6.2831,3);\n    U.x += sin(iTime*.5)*tau;\n    \n    //Real sine for comparison (red)\n    float y1 = sin(U.x);\n    //tau-sine (cyan)\n    float y2 = tau_sin( U.x );\n\n    fragColor = smoothstep( 6.3*1.5/res.y,0.,abs( vec4(y1,y2,y2,0) - U.y ) );\n}","name":"Image","description":"","type":"image"}]}