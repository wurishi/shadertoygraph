{"ver":"0.1","info":{"id":"NdlBWM","date":"1644936763","viewed":227,"name":"bouncy mouse circle","username":"FutureMapper","description":"circle that bounces to mouse","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["mouse","circle","bounce"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 aspect = (iResolution.xy/iResolution.yy);\n    uv = uv * aspect;\n    \n\n    // Time varying pixel color\n    vec2 pos = texture(iChannel0, vec2(0., 0.)).xy * aspect;\n    vec3 col = vec3(clamp(1.-smoothstep(length(uv-pos), 0.0, 0.05), 0., 1.)-0.8)*4.;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 aspect = (iResolution.xy/iResolution.yy);\n    vec2 lastpos = texture(iChannel0, vec2(0, 0)).xy;\n    vec2 pos = texture(iChannel0, vec2(1, 0)).xy;\n    if(iFrame == 0)\n    {\n        lastpos = vec2(0.9, 0.9);\n        pos = vec2(0.9, 0.9);\n    }\n    vec2 lastTemp = lastpos;\n    lastpos = pos;\n    pos += (lastpos - lastTemp) * 0.999;\n    //pos.y -= 0.00095;\n    pos -= ((pos - (iMouse.xy / iResolution.xy))/5.);\n    \n    \n    vec3 buff;\n    if(uv.x < 0.1)\n    {\n        buff = vec3(lastpos.xy, 0.);\n    }\n    else\n    {\n        if(uv.x < 1.1)\n        {\n            buff = vec3(pos.xy, 0.);\n        }\n    }\n    \n    fragColor = vec4(buff, 0.);\n}","name":"Buffer A","description":"","type":"buffer"}]}