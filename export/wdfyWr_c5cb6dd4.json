{"ver":"0.1","info":{"id":"wdfyWr","date":"1584543186","viewed":61,"name":"param_23","username":"darkczar","description":"epicycles, balancing colors","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// based on...\n// https://www.shadertoy.com/view/lssfW2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec2 curve_p = vec2(0,0);\n    float d = 10000.0;\n    float di = 0.;\n    for(int i = 0;i<100;i++)\n    {\n        di = float(i)*.28;\n        curve_p.x = -.1*sin(.3*iTime)+.05*float(di)*sin(float(di)+.2*iTime) +.01*float(di)*sin(4.0*di+.2*iTime) + .03*sin(iTime*.1)*float(di)*sin(7.0*di+.4*iTime);\n        curve_p.y = -.1*cos(.3*iTime)+.05*float(di)*cos(float(di)+.2*iTime) +.01*float(di)*cos(4.0*di+.2*iTime) + .03*sin(iTime*.1)*float(di)*cos(7.0*di+.4*iTime);\n        d = min(d, length(p-curve_p));\n  \n    }\n    float r =.25*d*d - .1*(.25 - .25*pow(dot(p, curve_p),2.0)*(.5+.5*sin(iTime*.4)));\n    float g = .2*sin(2.1*d*d+.1*length(p))*.006*normalize(dot(p,curve_p*iTime*2.));\n    float b=.01*cos(iTime*.8 - .5*pow(d,2.0)) +.0002*(dot(p,normalize(curve_p - .5*vec2(iTime*-.05, iTime*.05))));\n    vec3 col = vec3(r, g, b);\n    float dn = col.x + col.y + col.z;\n    col /= dn;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}