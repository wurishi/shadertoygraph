{"ver":"0.1","info":{"id":"4djBWd","date":"1502824810","viewed":735,"name":"Rotating Candy","username":"nightfox","description":"My first shader on Shadertoy. Uses input from the microphone.","likes":3,"published":3,"flags":4,"usePreview":0,"tags":["2d","distancefield","microphone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, float r, float blur) {\n \tfloat d = length((uv)*5.0);\n    float c = smoothstep(r, r-blur, d);\n    return c;\n}\n\nmat2 rotate2d(vec2 uv, float angle) {\n \treturn mat2(-cos(angle),sin(angle),-sin(angle),-cos(angle));   \n}\n\nmat2 scale2d(vec2 scale) {\n\treturn mat2(scale.x,0.0,0.0,scale.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float f = texture(iChannel0, vec2(20.0)).r;\n    \n    uv *= 6.0;\n    \n    float c = circle(uv, 5.5*sin(iTime)+6.0+f, 0.2);\n    vec3 color = vec3(c);\n    vec3 color2 = color;\n    vec2 leftCircle = uv + vec2(0.5*sin(iTime),0.0);\n    vec2 rightCircle = uv + vec2(-0.5*sin(iTime),0.0);\n    float d = length(leftCircle);\n    float d2 = length(rightCircle);\n    \n    uv = rotate2d(uv,100.0*sin(iTime/10.0))*uv;\n    uv = scale2d(vec2(5.0*sin(iTime/5.0)+2.5))*uv;\n    \n    color *= vec3(fract(d*20.0*f),fract(d*20.0*f),uv.x);\n    color2 *= vec3(fract(d2*20.0*f),uv.x,fract(d2*20.0*f));\n    color += color2;\n    color += vec3(0.0,sin(uv.y*20.0)*sin(iTime/5.0),sin(uv.y*20.0));\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}