{"ver":"0.1","info":{"id":"cslyWS","date":"1687162689","viewed":90,"name":"domain rep randomize with checks","username":"MonterMan","description":"minimal example of domain rep with randomizations that cross cell boundaries.\nleft: with neighbor checks, right: without neighbor checks","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["reptition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 opRepeat(vec2 p, vec2 size, out vec2 outCellIndex)\n{\n    outCellIndex = floor((p+0.5*size) / size);\n    return mod(p+0.5*size,size) - 0.5*size;\n}\n\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.0 * uv - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    bool isLeftSide = uv.x < 0.01;\n    \n    // color divider\n    if (abs(uv.x) < 0.01)\n    {\n        fragColor = vec4(1,0,0,1);\n        return;\n    }\n    \n    uv.x += 0.3*iTime;\n    \n    const vec2 domainSize = vec2(0.1);\n    const float circleRadius = 0.1;\n    \n    // repeat space\n    vec2 cellId;\n    uv = opRepeat(uv, domainSize, cellId);\n    \n    int loopCount = isLeftSide? 1: 0;\n    \n    // NOTE: must loop over immediate neighbors as the randomization crosses cell boundaries\n    float dist = 10e31;\n    for (int dy = -loopCount; dy <= loopCount; ++dy)\n    {\n        for (int dx = -loopCount; dx <= loopCount; ++dx)\n        {\n            vec2 p = uv - vec2(dx, dy) * domainSize;\n            vec2 thisCellId = cellId + vec2(dx, dy);\n            \n            // randomly jitter circles in each cell\n            p -= domainSize * (hash22(thisCellId) - vec2(0.5));\n            dist = min(dist, length(p));\n        }\n    }\n    \n    // paint circle    \n    vec3 col = vec3(0.001 / pow(dist, 2.0));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}