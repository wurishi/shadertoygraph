{"ver":"0.1","info":{"id":"wdlyzX","date":"1585267619","viewed":305,"name":"smooth union circle + box","username":"justyn","description":"just simple circle and rounded box sdfs that use a smooth union","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Credit to iq for the good resources on this subject! It's helped me quite a bit wrapping my head around ray marching and the like.\n// https://iquilezles.org/articles/distfunctions\n// https://iquilezles.org/articles/distfunctions2d\n// https://www.youtube.com/watch?v=s5NGeUV2EyU\n\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n\nfloat sdCircle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nfloat sdBox( in vec2 p, in vec2 b, float r)\n{\n    vec2 d = abs(p) - (b - r);\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*(fragCoord)-iResolution.xy)/iResolution.y;\n    \n    float norm_sine = (sin(iTime) + 1.) / 2.;\n    \n    float dist = opSmoothUnion(sdBox(uv, vec2(0.5, 0.5), 0.1), sdCircle(uv - vec2(mix(-2., 2., norm_sine), 0.0), 0.5), 1.);\n    \n    vec3 col = mix(vec3(0.1), vec3(0.5), sin(dist * 30.));\n    \n    if (dist < 0.) col = vec3(1., 1., 1.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}