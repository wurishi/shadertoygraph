{"ver":"0.1","info":{"id":"ftdSRB","date":"1639347620","viewed":53,"name":"Spherical Morph","username":"Pasko70","description":"Spherical Morph Filter","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 cuv2uv(vec2 cuv){\n    cuv.x *= iResolution.y/iResolution.x;\n    return cuv + .5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    const float blur = 2.;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n    uv.x /= iResolution.x;\n    uv.y /= iResolution.y;\n    \n    vec2 cuv = uv - .5;\n    cuv.x = cuv.x*iResolution.x/iResolution.y;\n    \n    float blend = iTime;\n    \n    float mask = clamp(length(cuv)* blur*sin(blend), 0., 1.);\n    \n    //vec4 tex = texture(iChannel0, uv);\n    \n    \n    vec3 finalColour = vec3(0.0);\n    \n    const int kernelSizeX = 5;\n    const int kernelSizeY = 5;\n    \n    int counter = 0;\n    \n    \n    \n    vec2 tuv = clamp(cuv2uv(cuv - cuv * length(cuv) * .3 * sin(blend)), 0., 1.);\n    \n    for (int x=-kernelSizeX; x <= kernelSizeX; ++x){\n       for (int y=-kernelSizeY; y <= kernelSizeY; ++y){      \n            finalColour += texture(iChannel0, tuv + vec2(float(x)/float(iResolution.x), float(y)/float(iResolution.y))).rgb;\n            counter += 1;\n        } \n    }\n    \n    finalColour = finalColour / float(counter);\n    \n    vec4 tex = texture(iChannel0, tuv);\n    \n    finalColour = mix(tex.rgb, finalColour, mask);    \n    \n    fragColor = vec4(finalColour, 1.0);\n}","name":"Image","description":"","type":"image"}]}