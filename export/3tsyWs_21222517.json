{"ver":"0.1","info":{"id":"3tsyWs","date":"1593447443","viewed":373,"name":"Stepped sdf blending","username":"bozhkov","description":"blending some 2d sdfs","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","blend","stepped"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nconst float lWidth = 0.045;\nconst float lDist = 0.011;\n\n// Distance functions by Inigo Quilez\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdTriangleEq( in vec2 p )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    p.y = p.y + 1.0/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nmat2 rotate2d(float _angle)\n{\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat sdShape(vec2 st) \n{\n    st = rotate2d(cos(iTime * 0.9) * PI * 1.5) * st;\n\n    float dCircle = length(st) - 0.24;\n    float dBox = sdBox(st, vec2(0.55)) + 0.2;\n    float dTriangle = sdTriangleEq(st) + 0.34;\n    \n    float progress = fract(iTime * 0.3);\n\n    // Transition speed per unit of time (normalized)\n    float tSpeed = 0.3;\n    float tStatic = (1.0 - tSpeed * 3.0) / 3.0;\n    float shapeDuration = tStatic + tSpeed;\n\n    float d = mix(dCircle, dTriangle, smoothstep(0.0, tSpeed, progress));\n    d = mix(d, dBox, smoothstep(shapeDuration, shapeDuration + tSpeed, progress));\n    d = mix(d, dCircle, smoothstep(shapeDuration * 2.0, shapeDuration * 2.0 + tSpeed, progress));\n\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 st = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    st = rotate2d(PI / 4.0) * st;\n\n    st.x += lWidth / 2.0;\n\n    float lfull = lWidth + lDist;\n\n    // the index of each line\n    float i = floor(st.x / lfull);\n\n    // start x of line\n    float lx = lfull * i;\n    float aa = 0.003;\n    float line = smoothstep(lx, lx + aa, st.x) \n    - smoothstep(lx + lWidth - aa, lx + lWidth, st.x);\n\n    // clip x to the start x of its line\n    st.x = lx;\n\n    aa = 0.001;\n    float d = sdShape(st);\n\n    float core = 1.0 - smoothstep(-aa, 0.0, d);\n    core *= line;\n    float shell1 = 1.0 - smoothstep(-aa, 0.0, d - 0.05);\n    shell1 *= line;\n    float shell2 = 1.0 - smoothstep(-aa, 0.0, d - 0.1);\n    shell2 *= line;\n\n    vec3 baseColor = vec3(0.0, 0.05, 0.03);\n    vec3 color = mix(baseColor, vec3(1.0), line * 0.23 * (1.0 - shell2));\n    color = mix(color, vec3(0.3, 1.0, 0.95), core);\n    color = mix(color, vec3(1.0, 0.5, 0.0), shell1 - core);\n    color = mix(color, vec3(1.0, 0.25, 0.0), shell2 - shell1);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}