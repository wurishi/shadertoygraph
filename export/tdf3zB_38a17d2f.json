{"ver":"0.1","info":{"id":"tdf3zB","date":"1546673139","viewed":127,"name":"Isometric matrix","username":"ishidex2","description":"My first try on shaders, not that wonderful, but anyways, Interact with mouse","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["matrix","linearalgebra","isometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 mapPixelToWorld(vec2 point)\n{\n\treturn vec2(point.x + iResolution.x/2.0, point.y + iResolution.y/2.0); \n}\n\nfloat plot(in vec2 fragCoord, vec2 point)\n{\n\treturn 1.0/(pow(point.x - fragCoord.x, 2.0)+ pow(point.y - fragCoord.y, 2.0))*80.0;\n}\n\nfloat line(vec2 a, vec2 b, vec2 c, float sf)\n{\n    vec2 uv = c/iResolution.xy;\n    \n    vec4 curPix = texture(iChannel1, uv+3.0);\n    vec2 abn = normalize(b-a);\n    float t = dot(abn, c-a);\n    vec2 d = t * abn;\n    float l = length((c-a)-d)*sf;\n    \n    float n = 0.0;\n    if (t > 0.0 && t < length(b - a))\n    \tn = -log(l)*4.0;\n    return n*curPix.r;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    fragColor = vec4(0,0,0,1.0);\n    \n    vec4 curPix = texture(iChannel1, uv);\n\tvec2 second = vec2(iMouse.x - iResolution.x/2.0, iMouse.y - iResolution.y/2.0);\n    float l = sqrt(pow(second.x, 2.0)+pow(second.y, 2.0));\n\tvec2 first = vec2(l*cos(iTime), l*sin(iTime/10.0));\n \n    // Output to screen\n    \n              mat2 m;\n        m[0] = vec2(0, 40.0);\n        m[1] = vec2(40.0, 0);\n  \n    for (float i = -10.0; i < 10.0; i ++)\n    {\n        vec2 g1 = vec2(cos(i*iTime), -600.0);\n        vec2 g2 = vec2(i, 600.0);\n \n\n        g1 = g1*m;\n        g2 = g2*m;\n        \n\n        float n = line(mapPixelToWorld(g1), mapPixelToWorld(g2), fragCoord.xy, 0.7); \n\tif( n > 0.1) fragColor = vec4(uv.x*n/10.0, 0, n/10.0, 1.0);\n    \n    }\n    \n\n        for (float i = -10.0; i < 10.0; i ++)\n    {\n        vec2 g1 = vec2(-600.0, i);\n        vec2 g2 = vec2(600.0, cos(i*iTime));\n\n        g1 = g1*m;\n        g2 = g2*m;\n        \n\n        float n = line(mapPixelToWorld(g1), mapPixelToWorld(g2), fragCoord.xy, 0.7); \n\tif( n > 0.1) fragColor = vec4(0, uv.x*n/10.0, uv.y*n/10.0, 1.0);\n    \n    }\n    \n     \n        \n        m[0] = vec2(first.x, second.x);\n        m[1] = vec2(first.y, second.y);\n    for (float i = -20.0; i < 20.0; i ++)\n    {\n        vec2 g1 = vec2(i, -600.0);\n        vec2 g2 = vec2(i, 600.0);\n\n\n        g1 = g1*m;\n        g2 = g2*m;\n        \n        float l = sqrt(pow(second.x, 2.0)+pow(second.y, 2.0));\n\n        float n = line(mapPixelToWorld(g1), mapPixelToWorld(g2), fragCoord.xy, 0.7); \n\tif( n > 0.1) fragColor = vec4(curPix.r, uv.x*n, n, 1.0);\n    \n    }\n    \n\n        for (float i = -20.0; i < 20.0; i ++)\n    {\n        vec2 g1 = vec2(-600.0, i);\n        vec2 g2 = vec2(600.0, i);\n \n\n        g1 = g1*m;\n        g2 = g2*m;\n        \n        float l = sqrt(pow(second.x, 2.0)+pow(second.y, 2.0));\n\n        float n = line(mapPixelToWorld(g1), mapPixelToWorld(g2), fragCoord.xy, 0.7); \n\tif( n > 0.1) fragColor = vec4(0, uv.y*n, uv.x*n, 1.0);\n    \n    }\n\n\n    float n = line(mapPixelToWorld(vec2(0, 0)), mapPixelToWorld(first), fragCoord.xy, 0.4); \n\tif( n > 0.1) fragColor = vec4(n, n, n, 1.0);\n   \n  \tn = line(mapPixelToWorld(vec2(0, 0)), mapPixelToWorld(second), fragCoord.xy, 0.4); \n\tif(n > 0.1) fragColor = vec4(n, n, n, 1.0);\n    \n     n = plot(fragCoord, mapPixelToWorld(vec2(0.0, 0.0))); \n\tfragColor += vec4(uv.x*n, uv.y*n, uv.x*n, 1.0);\n    \n\n}","name":"Image","description":"","type":"image"}]}