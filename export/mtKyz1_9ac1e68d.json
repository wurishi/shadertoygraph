{"ver":"0.1","info":{"id":"mtKyz1","date":"1699966592","viewed":95,"name":"Digital Loop","username":"talixthewitch","description":"endless loop","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["talixthewitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 1 // Antialiasing level\n\nvoid mainImage(out vec4 O, in vec2 F) { \n_AA_START     \n    float a, r, t = 3.0;\n    vec2  n       = iResolution.xy,\n          i       = (F+(o-n)*0.5)/n.y; // Ajout d'un d√©calage pour centrer le visuel\n          \n    for (a = 0.0; a < 2e2 && t > 0.001; a++) {\n        vec3 p = r * vec3(i * 0.1, 4.0);\n        p.xy  *= mat2(cos(r * 0.07 + vec4(0, 33, 11, 0)));\n        p.xy  *= mat2(cos(iTime * 0.7), -sin(iTime * 0.7), sin(iTime * 0.7), cos(iTime * 0.7)); // Rotation autour de l'axe Z\n        p.z   += iTime * 0.6; p = abs(fract(p) - 0.3);            \n        r += t = (p.x + p.y + p.z - 0.10) * 0.6;        \n    }\n    tot += mix(vec3(0.7 - r * r * 2e-4), \n               1.5 * cos(r * (vec3(5.7, 5.77, 5.62) + length(i))), \n               exp(-r * 0.07) * (1.6 - length(i))); \n_AA_END \n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/* Anti-aliasing code */\n\n#define _AA_START               \\\nvec3 tot;                       \\\nfor (int j = 0; j < AA; j++)    \\\nfor (int k = 0; k < AA; k++) {  \\\nvec2 o = vec2(float(j), float(k)) / float(AA) - 0.5;\n\n#define _AA_END       \\\n} tot /= float(AA*AA);  \\\nO = vec4(tot, 1.);\n","name":"Common","description":"","type":"common"}]}