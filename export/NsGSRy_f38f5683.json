{"ver":"0.1","info":{"id":"NsGSRy","date":"1634994482","viewed":105,"name":"Flooshed","username":"shuckity","description":"Tried to remake another discord emoji, but can't get the eyebrows right. Is there a way to make a square like shape with rounded edges thats a little squashed in the middle?","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["emojiflooshed"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FC vec3(0.95, 0.75, 0.000)\n#define BLACK vec3(0.000, 0.000, 0.000)\n#define GRAY33 vec3(0.333, 0.333, 0.333) \n#define GRAY67 vec3(0.667, 0.667, 0.667) \n#define WHITE vec3(1.000, 1.000, 1.000)\n#define RED vec3(1.000, 0.000, 0.000)\n#define ORANGE vec3(0.894, 0.447, 0.000) \n#define YELLOW vec3(0.894, 0.894, 0.000) \n#define GREEN vec3(0.000, 1.000, 0.000) \n#define CYAN vec3(0.000, 0.707, 0.707)\n#define AZURE vec3(0.000, 0.447, 0.894) \n#define BLUE vec3(0.000, 0.000, 1.000) \n#define VIOLET vec3(0.447, 0.000, 0.894) \n#define ROSE vec3(0.894, 0.000, 0.447)\n#define BROWN vec3(0.500, 0.250, 0.000)\n#define GOLD vec3(0.830, 0.670, 0.220)\n#define FOREST_GREEN vec3(0.250, 0.500, 0.250)\n\nfloat Circle(vec2 uv, float r, vec2 offset) {\nfloat x = uv.x - offset.x;\nfloat y = uv.y - offset.y;\n\nreturn length(vec2(x, y)) - r;\n\n}\n\nfloat line(float a, float d, float blur){\n float l = smoothstep(length(a), length(a)-d, blur);\n return l;\n }\n \n \nfloat circle(vec2 uv, vec2 p, float r, float blur){\n     float d = length(uv-p);\n     float c = smoothstep(r, r-blur, d);\n     \n     return c;\n     \n}float Band(float t, float start, float end, float blur) {\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    return step1*step2;\n    \n    }\n    \nfloat rectangle(vec2 uv, float up, float down, float left, float right, float blur){\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, up, down, blur);\n    \n    return band1*band2;\n    \n    \n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n\n\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float x = uv.x;\n    float d = ((x-.5)*(x+.5))*.4;\n    float y = uv.y;\n    \n    \n    float f = circle(uv, vec2(0., 0.), .4, .005); //face shape\n    float fb = circle(uv, vec2(0., 0.), .4, .005); //to help shape the blush\n    vec3 F = (FC); // colors the face\n    \n    \n    float e1 = circle(vec2(x-.25, (y-x*.25)+.1), vec2(0., 0.), .15, .005); //the first eye\n    float e2 = circle(vec2(x+.25, (y+x*.25)+.1), vec2(0., 0.), .15, .005); //the second eye\n    float e = e1 + e2; // both eyes shapes\n    vec3 E = vec3(e)*WHITE;\n    \n    float ie1 = circle(vec2(x-.3, (y-x*.25)+.125), vec2(0., 0.), .072, .005); // inner eye shape\n    float ie2 = circle(vec2(x+.3, (y+x*.25)+.125), vec2(0., 0.), .072, .005); // inner eye 2 shape\n    float ie = ie1 + ie2; // both inner eye shapes\n    \n    vec3 IE = vec3(ie)*(WHITE*3.-BROWN); // colors the inner eye\n        \n    float b1 = circle(vec2(x, y+x*.8), vec2(-0.3, -0.45), .085, .005); //first blush\n    float b2 = circle(vec2(x, y-x*.8), vec2(0.3, -0.45), .085, .005); //second blush\n    float b = b1+b2; //both blushes\n    \n    vec3 B = mix(vec3(e), (-FC+vec3(1., 0, 1.))*.5, vec3(b));\n    \n    float m = rectangle(vec2(x, (y-d*3.)), -.001, .005, -.1, .1, .005);//makes the mouth\n    vec3 M = vec3(m)*(-FC+BROWN); // colors the mouth\n    \n   \n    \n    float eb1 = rectangle(vec2(x, (y+.9)+(d*11.)), -.002, .01, -.1, .1, .005); // makes the eye brows\n    vec3 EB = vec3(eb1)*(-FC+BROWN);  \n    \n    float r = f; //float shape\n    vec3 R = F + E - IE + B+M; // vec3 shape (colored)\n    \n    vec3 col = mix(vec3(1.), R, vec3(r));\n \n\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}