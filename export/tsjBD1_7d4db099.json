{"ver":"0.1","info":{"id":"tsjBD1","date":"1589988804","viewed":70,"name":"Eclipse Thing","username":"colejd","description":"Happened upon this randomly trying out other things. I'll build this out into something more cool when I get time.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","eclipse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Modified from https://www.shadertoy.com/view/tddXW4\n\n// distance of a circle\nfloat circleDist(vec2 p, float radius) {\n    return length(p) - radius;\n}\n\n// clamp the distnace to 0 and 1\nfloat mask(float dist) {\n    return clamp(-dist, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 clear = vec3(0.0);\n    // Draw the colorful background\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n \t// the sample point and the center of the screen\n    vec2 point = fragCoord.xy;\n\tvec2 center = iResolution.xy / 2.0;\n    \n    // radius of our circle\n    float circleRadius = 50.0;\n    \n    // is the point in the circle?\n    float circle = circleDist(point - center, circleRadius);\n    \n    // mask our circle (and negate the colors)\n    col = mix(clear, col, circle);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}