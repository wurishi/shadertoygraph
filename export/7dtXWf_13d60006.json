{"ver":"0.1","info":{"id":"7dtXWf","date":"1634114935","viewed":334,"name":"Physically based tiny disc light","username":"hyperknot","description":"Physically based lightness calculation \nfor a \"tiny disc\" light perpendicular to a\nmatte (Lambertian) ground plane, moving up and down.\ndetails: https://hyperknot.com/blog/area_lights_in_shaders/","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["light","physics","arealight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Physically based lightness calculation \n// for a \"tiny disc\" light perpendicular to a\n// matte (Lambertian) ground plane, moving up and down.\n// details: https://hyperknot.com/blog/area_lights_in_shaders/\n\nfloat disc_light(vec2 uv, float h, float i) {\n  // h - light's height over the ground\n  // i - light's intensity\n  if (uv.x > 0.) return 0.;\n  return i * h * -uv.x * pow(dot(uv,uv) + h*h, -2.);\n}\n\nfloat lin_to_srgb ( float val ) {\n  if( val < 0.0031308 )\n    return val * 12.92;\n  else\n    return 1.055 * pow(val,1.0/2.4) - 0.055;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n\n    float h = pow(sin(iTime/3.), 2.) * 0.1 + 0.001;\n    float v = disc_light(uv, h, 0.0327);\n    v = lin_to_srgb(v);\n\t\n \tfragColor=vec4(v);\n}","name":"Image","description":"","type":"image"}]}