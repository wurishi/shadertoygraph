{"ver":"0.1","info":{"id":"lsj3Dd","date":"1644245403","viewed":141,"name":"PsyTrance!","username":"Pierco","description":"PsyTrance, turn volume up.","likes":1,"published":1,"flags":64,"usePreview":0,"tags":["trancemusic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MtlXD2","filepath":"https://soundcloud.com/faders/kaya-project-feat-irina-mikhaelova-shiva-shankara-faders-remix","previewfilepath":"https://soundcloud.com/faders/kaya-project-feat-irina-mikhaelova-shiva-shankara-faders-remix","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[],"code":"\nfloat sph(vec3 v, float r) {\n  return length(v) - r;\n}\n\nvec3 tex(vec2 p) {\n    return vec3(cos(p.x*4.0), cos(p.x+p.y), sin(p.y*8.0));\n}\n\nfloat smin( float a, float b, float k ) {\n  float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n  return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat map(vec3 p) {\n  float k = 0.8;\n  float s = 5.0 - texture(iChannel0, vec2(0.0, 0.0)).x * 10.0;\n\n  p += sin(cos(iTime/5.0+(s*0.4))*4.0*p.zxy) * 0.4;\n  p += sin(sin(iTime/4.0+(s*0.3))*8.0*p.zxy) * 0.2;\n  p += sin(cos(iTime/3.0)*16.0*p.zxy) * 0.1;\n  p += sin(cos(iTime/2.0)*32.0*p.zxy) * 0.05;\n\n  float s2 = sph(p + vec3(0.0, 0.8, 0.0), 1.0);\n  float s3 = sph(p + vec3(0.0,-0.8, 0.0), 1.0);\n  return smin(s2, s3, k);\n}\n\nvec3 nrm(vec3 p) {\n  float eps = 0.01;\n  return normalize(vec3(\n    map(p + vec3(eps, 0, 0)) - map(p - vec3(eps, 0, 0)),\n    map(p + vec3(0, eps, 0)) - map(p - vec3(0, eps, 0)),\n    map(p + vec3(0, 0, eps)) - map(p - vec3(0, 0, eps))\n  ));\n}\n\nfloat remap(float v, float s1, float e1, float s2, float e2) {\n  return s2 + (e2 - s2) * ((v - s1) / (e1 - s1));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 fc = fragCoord.xy;\n  vec2 uv = fc / iResolution.xy - 0.5;\n  uv.x = uv.x * iResolution.x / iResolution.y;\n\n  vec3 li1 = vec3(5.0, -5.0, 8.0);\n  vec3 li2 = vec3(-5.0, -5.0, -8.0);\n\n  float s = 5.0-texture(iChannel0, vec2(0.0, 0.0)).x * 8.0;\n  vec3 ro = vec3(sin(iTime)*(7.0+s), 0.5, cos(iTime)*(7.0+s));\n  vec3 ta = vec3(0.0);\n  vec3 ww = normalize(vec3(ta-ro));\n  vec3 vv = vec3(0.0, 1.0, 0.0);\n  vec3 uu = normalize(cross(ww, vv));\n  vv = normalize(cross(ww, uu));\n  vec3 rd = normalize(uv.x * uu + uv.y * vv + ww);\n\n  float d = 0.0;\n  float sd = 0.0;\n  float md = 100.0;\n  for (int i = 0; i < 100; i++) {\n\tsd = map(ro + rd*d);\n\td += sd * 0.2;\n\tmd = max(min(md, sd), 0.0);\n\tif (sd <= 0.01) break;\n  }\n  \n  vec2 bp = uv.xy;\n  float r = length(bp);\n  float a = atan(bp.x, bp.y);\n  bp = vec2(1.0/r+iTime, a+(s*0.1));\n  vec3 bcolor = tex(bp.xy + vec2(iTime)) * pow(r,2.0);\n\n  vec3 fcolor = vec3(\n    (0.2/md)*smoothstep(0.0, 1.5, sin(0.2*(iTime))),\n    0.0,\n    0.2/md\n  );\n\n  vec3 p = ro + rd*d;\n  vec3 n = nrm(p);\n  float dif = clamp(1.5-length(p), 0.0, 1.0);\n  fcolor += dif;\n\n  fragColor = vec4(bcolor+fcolor,1.0);\n}","name":"Image","description":"","type":"image"}]}