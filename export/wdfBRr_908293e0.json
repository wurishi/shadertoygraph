{"ver":"0.1","info":{"id":"wdfBRr","date":"1587591939","viewed":104,"name":"sdf-loss","username":"OneManBand","description":"loss between two sdfs for learning parameters via gradient descent","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdfloss"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float scale = 1.0; // increase to zoom-out\nfloat size = 0.5;  // size of shapes\n\nvec2 mouse;\n\nvec4 circle( vec2 x, vec2 p, float r) {\n  return vec4(length(p - x) - r,\n              // gradient w.r.t. center\n              normalize(p - x).x,\n\t\t\t  normalize(p - x).y,\n              -1);                \n}\n\nfloat box( vec2 p, vec2 b )\n{\n  vec2 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,q.y),0.0);\n}\n\nvec3 colormap(float v) {\n    vec3 hot = vec3(1.0, 0.5,0.0);\n    vec3 cold = vec3(0.0, 0.0, 0.5); \n\tfloat stripes = max(sin(10.0*v), 0.0);\n\tvec3 color = mix(cold, hot, clamp(v*0.1, 0.0, 1.0));\n\tcolor += 0.3 * vec3(stripes);\n    return color;\n}\n\nfloat shape(vec2 uv) {\n    float d = circle(uv, mouse, size * 0.2).x;\n    // float d = box(uv - mouse - vec2(0.0, 0.1), size * vec2(0.2));\n    return d;\n}\n\nfloat target(vec2 uv) {\n\tfloat d = circle(uv, vec2(0.5, 0.0), size * 0.2).x;\n\td = min(d, circle(uv, vec2(-0.5, 0.0), size * 0.2).x);\n    return d;\n}\n\n\nfloat sdf(vec2 uv) {\n\tfloat field0 = shape(uv);\n    float field1 = target(uv);\n    return min(field0, field1);\n    //return vec3(smoothstep(0.0, 0.01, min(field0.x, field1.x)));\n}\n\nfloat loss(vec2 uv) {\n\tfloat field0 = shape(uv);\n    float field1 = target(uv);\n    float loss = field0 - field1;\n    loss *= loss;\n    loss *= exp(-10.0 * field0 * field0);\n\treturn loss;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    mouse = iMouse.xy / iResolution.xy - 0.5;\n\tmouse.x *= iResolution.x / iResolution.y;\n\tuv *= scale;\n    mouse *= scale;\n    \n    float f = loss(uv);\n    vec3 col = vec3(smoothstep(0.0, 0.01, sdf(uv)));\n    vec3 map = colormap(50.0*f);\n    col = mix(col, map, 0.8);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}