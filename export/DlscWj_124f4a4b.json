{"ver":"0.1","info":{"id":"DlscWj","date":"1691189454","viewed":35,"name":"Spiral with LFO Variables","username":"SkippyGumdrop","description":"Low-Frequency Oscillator (LFO). Each variable has a toggle to connect/disconnect it to/from the LFO and a percentage adjustment - code by ChatGPT","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["spiral","variables","lfo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ShaderToy Script: Spiraling Line with Simplified LFO Modulation\n\n// LFO Settings\nfloat lfoType = 0.0;        // 0 = sine, 1 = square, 2 = triangle\nfloat lfoFrequency = 01.5;   // Frequency of the LFO\nfloat lfoAmplitude = 0.012;   // Amplitude of the LFO\n\n// User-defined variables with LFO toggles and impact factors\nfloat zoomSpeed = 0.1;\nfloat useLFO_zoomSpeed = 1.0; // Toggle LFO for zoomSpeed (0.0 = off, 1.0 = on)\nfloat lfoImpact_zoomSpeed = 01.0; // LFO impact factor for zoomSpeed (0.0 to 1.0)\n\nfloat spiralTightness = 15.0;\nfloat useLFO_spiralTightness = 01.0;\nfloat lfoImpact_spiralTightness = 0.5;\n\nfloat lineThickness = 0.02;\nfloat useLFO_lineThickness = 01.0;\nfloat lfoImpact_lineThickness = 0.5;\n\nfloat rotationSpeed = 0.3;\nfloat useLFO_rotationSpeed = 01.0;\nfloat lfoImpact_rotationSpeed = 0.5;\n\nvec3 lineColor = vec3(0.906,0.890,0.875);\n\n// LFO Function\nfloat LFO() {\n    float t = iTime * lfoFrequency;\n    if (lfoType == 0.0) return lfoAmplitude * sin(2.0 * 3.14159 * t); // Sine wave\n    if (lfoType == 1.0) return lfoAmplitude * sign(sin(2.0 * 3.14159 * t)); // Square wave\n    if (lfoType == 2.0) return lfoAmplitude * asin(sin(2.0 * 3.14159 * t)) * (2.0 / 3.14159); // Triangle wave\n    return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 uv = (fragCoord / iResolution.xy) * 2.0 - 1.0;\n    uv *= iResolution.xy / iResolution.y;\n\n    // Apply LFO to variables\n    float lfoValue = LFO();\n    zoomSpeed += useLFO_zoomSpeed * lfoValue * lfoImpact_zoomSpeed;\n    spiralTightness += useLFO_spiralTightness * lfoValue * lfoImpact_spiralTightness;\n    lineThickness += useLFO_lineThickness * lfoValue * lfoImpact_lineThickness;\n    rotationSpeed += useLFO_rotationSpeed * lfoValue * lfoImpact_rotationSpeed;\n\n    // Time variable\n    float t = iTime * zoomSpeed;\n\n    // Convert to polar coordinates\n    float r = length(uv);\n    float theta = atan(uv.y, uv.x);\n\n    // Apply logarithmic zoom effect by modifying radial distance\n    r = log(1.0 + t) * r;\n\n    // Spiraling effect\n    theta += t * rotationSpeed;\n    float spiral = sin(theta * spiralTightness - r);\n\n    // Draw line with smooth edges\n    float line = smoothstep(-lineThickness, lineThickness, spiral);\n\n    // Color\n    vec3 color = mix(vec3(0.0), lineColor, line);\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}