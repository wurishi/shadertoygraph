{"ver":"0.1","info":{"id":"MljXW1","date":"1443585489","viewed":298,"name":"electric gel","username":"sechristo","description":"a sketch I've been poking at for the last few days","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","colorful","sketch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"//shoutout to iq for the getNormal function\n\n#define EPS 0.01\n#define TAU 2.0*3.14159265359\n\n\nfloat map (float r, float angle) {\n\treturn (tan(angle*3.0+iTime*0.1)*0.5)+0.5 + sin(r*30.0)*0.1;\n}\n\nvec3 getNormal(float r, float angle) {\n    vec3 n = vec3( map(r-EPS,angle) - map(r+EPS,angle),map(r,angle-EPS) - map(r,angle+EPS),5.0*EPS);\n    return normalize( n );\n}\n\nfloat map1(float x, float y) {\n    vec2 uv = vec2(x,y);\n    float r = sqrt(pow(uv.x,2.0)+pow(uv.y,2.0));\n    float angle = atan(uv.y,uv.x);\n    \n    vec3 light = normalize(vec3(sin(1.0),cos(1.0),sin(iTime*0.1)));\n    return pow(dot(light,getNormal(r,angle)),2.0);\n}\n\nfloat map1(float x, float y, float offset) {\n    vec2 uv = vec2(x,y);\n    float r = sqrt(pow(uv.x,2.0)+pow(uv.y,2.0));\n    float angle = atan(uv.y,uv.x);\n    \n    vec3 light = normalize(vec3(sin(1.0),cos(1.0),sin(iTime*0.1)));\n    return pow(dot(light,getNormal(r,angle+offset)),2.0);\n}\n\nvec3 getXYNormal(float x, float y) {\n        vec3 n = vec3( map1(x-EPS,y) - map1(x+EPS,y),map1(x,y-EPS) - map1(x,y+EPS),150.0*EPS);\n    return normalize( n );\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    \n    float c = 0.5;\n    \n    uv.x -= 0.5;\n    uv.y -= 0.5;\n    mouse.x -= 0.5;\n    mouse.y -= 0.5;\n    \n    uv.y *= iResolution.y/iResolution.x;\n    mouse.y *= iResolution.y/iResolution.x;\n    \n    float r = sqrt(pow(uv.x,2.0)+pow(uv.y,2.0));\n    float angle = atan(uv.y,uv.x);\n    \n    r += sin(angle*6.0+iTime)*0.0333;\n    \n    float ch = 5000.0;\n    float cr = sin(map1(uv.x,uv.y,0.0)*sin(map1(uv.x,uv.y,0.0)));\n    float cg = sin(map1(uv.x,uv.y,1.0*ch)*sin(map1(uv.x,uv.y,1.0*ch)));\n    float cb = sin(map1(uv.x,uv.y,2.0*ch)*sin(map1(uv.x,uv.y,2.0*ch)));\n    cr = map1(cr,cg);\n    cg = map1(cg,cb);\n    cb = map1(cr,cb);\n    vec3 tint = vec3(0.2,0.1,0.3);\n    vec3 col = normalize(vec3(cr,cg,cb)+tint)*10.0;\n    vec3 mLoc = vec3(sin(-iTime)*0.333,cos(-iTime)*0.333,-2.0);\n    vec3 light = vec3(uv.x,uv.y,map1(uv.x,uv.y))-mLoc;\n    vec3 lDir = normalize(light);\n    vec3 normal = getXYNormal(map1(uv.x,uv.y),map1(uv.y,uv.x));\n    col += pow(clamp(dot(lDir,normal),0.0,1.0),200.0)*6.0;\n    col += pow(clamp(dot(lDir,normal),0.0,1.0),50.0)*1.0;\n    col += tint;\n    col*=0.1;\n    \n\tfragColor = vec4(col,1.0);\n    \n    \n}","name":"","description":"","type":"image"}]}