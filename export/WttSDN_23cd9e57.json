{"ver":"0.1","info":{"id":"WttSDN","date":"1580971236","viewed":73,"name":"Mandelbrot Set - Simple","username":"Chidvilas","description":"Simple shader to visualize Mandelbrot set.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","juliaset","mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    vec2 c = vec2((uv.x * 2.0 - 1.5) * iResolution.x/iResolution.y, (uv.y * 2.0 - 1.0));\n\n    // Mandelbrot formula\n    vec2 z = c;\n    float iterations = 0.0;\n    float maxIterations = 2000.0;\n    const int maxii = 2000;\n\n    for (int i = 0; i < maxii; i++) {\n        float t = 2.0 * z.x * z.y + c.y;\n        z.x = z.x * z.x - z.y * z.y + c.x;\n        z.y = t;\n\n        if (z.x * z.x + z.y * z.y > 4.0) {\n            break;\n        }\n\n        iterations += 1.0;\n    }\n\n    if (iterations >= maxIterations) {\n        fragColor = vec4(col,1.0);\n    } else {\n        fragColor = vec4(col*iterations,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}