{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float fix = iResolution.x / iResolution.y;\n    uv.x *= fix;\n\n    vec2 pos = vec2(0.5);\n    \n    // Definición de colores estáticos\n    vec4 azul = vec4(0.18, 0.24, 0.55, 1.0);\n    vec4 verde = vec4(0.0, 0.46, 0.0275, 0.8078);\n    vec4 amarillo = vec4(1.0, 0.82, 0.06, 0.76);\n    vec4 naranja = vec4(0.73, 0.22, 0.0, 0.81);\n    vec4 rojo = vec4(0.50, 0.0, 0.0, 0.98);\n    vec4 beige = vec4(1.0, 0.72, 0.11, 0.65);\n    vec4 naranja2 = vec4(1.0, 0.64, 0.22, 0.62);\n    \n    #define pi 3.14159265359\n    \n    // TIERRA\n    vec2 mov1 = vec2(sin(iTime/3.0) * 0.5, cos(iTime/3.0) * 0.51);\n    vec2 p1 = vec2(pos.x * fix, pos.y) - (uv + mov1);\n    float r1 = length(p1);\n    float tierra = smoothstep(0.94, 0.94, (1.0 - r1));\n    vec4 colorTierra = mix(verde, azul, vec4(sin((iTime/2.0) + uv.y * pi * 15.0) * 0.5 + 0.5 + sin((iTime/2.0) + uv.x * pi * 20.0) * 0.5 + 0.5));\n    vec4 tierraFinal = vec4(vec3(tierra), 1.0) * colorTierra;\n    \n    // MARTE\n    vec2 mov2 = vec2(sin(iTime/4.0) * 0.67, cos(iTime/4.0) * 0.67);\n    vec2 p2 = vec2(pos.x * fix, pos.y) - (uv + mov2);\n    float r2 = length(p2);\n    float marte = smoothstep(0.955, 0.955, (1.0 - r2));\n    vec4 colorMarte = mix(rojo, naranja, vec4(vec3(sin(uv.x * 20.0 * pi + iTime + sin(uv.y * 20.0 * pi + iTime + sin(uv.x * 10.0 * pi - iTime))) * 0.5 + 0.5), 1.0));\n    vec4 marteFinal = vec4(vec3(marte), 1.0) * colorMarte;\n    \n    // SOL\n    vec2 p3 = vec2(pos.x * fix, pos.y) - uv;\n    float r3 = length(p3);\n    float a3 = atan(p3.x, p3.y);\n    float bordes = sin(a3 * 10.0 + sin(r3 * 10.0) + sin(uv.x * 10.0 + iTime)) * 0.01;\n    float sol = smoothstep(0.84, 0.93, (1.0 - r3 + bordes));\n    vec4 colorSol = mix(amarillo, naranja, vec4(sin(r3 * 20.0 - iTime + sin(a3 * 10.0 + iTime + sin(r3 * 100.0 - iTime + sin(a3 * 10.0 + sin(r3 * 15.0))))) * 0.5 + 0.5));\n    vec4 solFinal = vec4(vec3(sol), 1.0) * colorSol;\n    \n    // MERCURIO\n    vec2 mov4 = vec2(sin(iTime * 0.6) * 0.2, cos(iTime * 0.6) * 0.2);\n    vec2 p4 = vec2(pos.x * fix, pos.y) - (uv + mov4);\n    float r4 = length(p4);\n    float mercurio = smoothstep(0.97, 0.97, (1.0 - r4));\n    vec4 colorMercurio = mix(azul, beige, vec4(cos(iTime + uv.y * pi * 10.0) * 0.5 + 0.5 + cos(iTime + uv.x * pi * 10.0) * 0.5 + 0.5));\n    vec4 mercurioFinal = vec4(vec3(mercurio), 1.0) * colorMercurio;\n    \n    // VENUS\n    vec2 mov5 = vec2(sin(iTime * 0.5) * 0.35, cos(iTime * 0.5) * 0.35);\n    vec2 p5 = vec2(pos.x * fix, pos.y) - (uv + mov5);\n    float r5 = length(p5);\n    float venus = smoothstep(0.951, 0.951, (1.0 - r5));\n    vec4 colorVenus = mix(beige, naranja2, vec4(sin(r5 * pi * 15.0 - sin(r5 + iTime + sin(r5 * 50.0 - uv.y))) * 0.5 + 0.5 + cos(iTime + uv.y * 20.0)));\n    vec4 venusFinal = vec4(vec3(venus), 1.0) * colorVenus;\n    \n    // ESTRELLAS\nvec3 estrellas = vec3(0.0);\nint cant = 5;\n    \nfor(int i = 0; i <= cant; i++) {\n    vec2 uv2 = uv;\n    float idx = float(i) / float(cant);  // Convertir i a float antes de dividir\n    uv2 = fract(uv2 * (float(i) + 1.0)); // Convertir i a float para multiplicar\n    uv2.x *= fix;\n        \n    vec2 p = vec2(0.5) - uv2;\n    float r = length(p * 2.0);\n    float a = atan(p.x, p.y);\n        \n    float time2 = iTime;\n    if (mod(float(i), 2.0) == 0.0) {\n        time2 *= -1.0;\n    }\n    float star = sin(a * 6.0 + time2);\n        \n    star *= 1.0 - smoothstep(0.1, 0.9, r + 0.5);\n    estrellas += vec3(star, star, star);\n}\n    \n    // Combinación final de colores\n    fragColor = mix((solFinal + mercurioFinal + venusFinal + tierraFinal + marteFinal), vec4(estrellas, 0.5), sin(uv.x + iTime/2.0) * 0.5 + 0.5);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lfVBWz","date":"1733969361","viewed":23,"name":"Fork Solar syst dudemanbro 350","username":"DUDEMANBROSUN","description":"One of my first attempts","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["stars","universe","planets","solarsystem"],"hasliked":0,"parentid":"McKfWR","parentname":"Solar system + stars"}}