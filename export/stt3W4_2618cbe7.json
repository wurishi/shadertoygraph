{"ver":"0.1","info":{"id":"stt3W4","date":"1636137806","viewed":93,"name":"Very simple equalizer (by Osa)","username":"Osakazaur","description":"The frequency value is shown per the y coordinate\nYou can change 'lines' variable\n\nfreq_ammount module returns the value of frequensy, glad if it will be useful for you :)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["basic","music","color","equalizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int lines = 24;\n\nfloat freq_ammount(vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    int index = int(uv.x * float(lines));\n    \n    return texelFetch(iChannel0, ivec2(index * 512/ lines,.1), 0).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float f = freq_ammount(fragCoord); \n    \n    vec3 col = vec3 (0., 255., 255.) / 255. * f;\n    \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}