{"ver":"0.1","info":{"id":"tslXDr","date":"1551114471","viewed":547,"name":"isometric binary-map rendering","username":"FabriceNeyret2","description":"isometric + special view angle: no ray-tracing needed, we know exactly which element could show at any given place.","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["isometric","fake3d","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define H 2. // isometric angle\n\n// cell value at offset (x,y) from current\n#define T(x,y) texelFetch(iChannel0,(ivec2(50.+U)+ivec2(x,y)) % textureSize(iChannel0,0), 0).r\n// Z = binarized version \n#define C(x,y) T(x,y) > .9 *  textureLod(iChannel0,vec2(.5),99.).r\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U =  ( 2.*u - R ) / R.y\n             * mat2(1,-H,1,H) / min(1.5,H); // isometric coordinates\n    //O-=O; \n    //if (abs(U.x)>1. || abs(U.y)> 1. ) return;\n    U.y += iTime;\n\n    U *= 8.;\n    bool r = fract(U.x)+fract(U.y) > 1.; // right half of diamond cell ?\n    //vec2 L = ( fract(U)*2.-1.) * mat2(1,1,1,-1)/sqrt(2.);\n    \n    O =   C(1,-1)       ? vec4(T(1,-1),0,0,1)   // roof\n        : C(1, 0) &&  r ? vec4(.5,.3,0,1)       // lit SE wall\n        : C(0,-1) && !r ? vec4(.3,0,0,1)        // shadow SW wall\n        : C(0, 0) && !r ? vec4(.5,.3,0,1)       // lit SE wall\n        : C(0, 0) &&  r ? vec4(.3,0,0,1)        // shadow SW wall\n        : C(-1,0)       ? vec4(0,T(0,0)*.5,0,1) // shadow\n        :                 vec4(0,T(0,0),0,1);   // floor\n}","name":"Image","description":"","type":"image"}]}