{"ver":"0.1","info":{"id":"dtj3Wy","date":"1673892732","viewed":242,"name":"-1+i  base  &  twindragon figure","username":"FabriceNeyret2","description":"base -1+i  allows to represent the whole complex plane as a binary number set.\nTwinDragon of order n = all positions that can be represented with n bits.\n[url]https://en.wikipedia.org/wiki/Complex-base_system#Base_%E2%88%921_%C2%B1_i[/url]\n","likes":19,"published":3,"flags":0,"usePreview":0,"tags":["binary","fractals","onetweet","twindragon","golf","arithmetics","complexe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// base -1+i  allows to represent the whole complex plane as a binary number set.\n// TwinDragon of order n = all positions that can be represented with n bits.\n// cf https://en.wikipedia.org/wiki/Complex-base_system#Base_%E2%88%921_%C2%B1_i\n               \n\n// --- golfed version.   -9 ch by coyote\n\nvoid mainImage( out vec4 O, vec2 I )\n{\n     I -= .5 + .5*iResolution.xy;  \n     \n    for ( O *= 0. ; I != -I ; O += .05 )              // --- for all digits, as long as bit remains\n        I = floor( ( vec2( I.y, -I) -I ) / 2. );      // euclidian div by base -1+i  = next bit\n}\n\n\n\n\n\n/** //Â --- 270 chars version\n\n// complexes op from https://shadertoyunofficial.wordpress.com/2019/01/02/programming-tricks-in-shadertoy-glsl/\n#define cmul(A,B) ( mat2( A, -(A).y, (A).x ) * (B) )  // by deMoivre formula\n#define cinv(Z)   ( vec2( (Z).x, -(Z).y ) / dot(Z,Z) ) \n#define cdiv(A,B)   cmul( A, cinv(B) )\n\n\nvoid mainImage( out vec4 O, vec2 I )\n{\n     I -= .5 + .5*iResolution.xy;  \n     \n    float i = 0.;\n    for ( ; i < 16.; i++ ) {                  // --- for all digits   \n        I = floor( cdiv( I, vec2(-1,1) ) );   // euclidian div by base -1+i  = next bit\n        if ( I == vec2(0) ) break;          \n    }\n    O = vec4( i/16. );                        // show order as grey level\n}\n\n/**/","name":"Image","description":"","type":"image"}]}