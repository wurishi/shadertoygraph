{"ver":"0.1","info":{"id":"4cSSRz","date":"1705942747","viewed":53,"name":"Petri dish automata","username":"towwl","description":"Based on the Rock-Paper-Scissors automata, but instead of just three states (R, P, S) there are as many states as there are colors. A random color is occasionally introduced. Press R to restart.","likes":4,"published":1,"flags":48,"usePreview":0,"tags":["automata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4( texelFetch( iChannel0, ivec2(fragCoord), 0 ).xyz, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float GLOBAL_SEED = 4.1;\n\n// how many frames between each attempt to introduce a new color\nconst int INTERVAL = 40;\n\n// RNG from https://www.shadertoy.com/view/ltB3zD by dcerisano\nconst float PHI = 1.61803398874989484820459; // Î¦ = Golden Ratio \nfloat gold_noise(in vec2 xy, in float seed)\n{\n    return fract(tan(distance(xy*PHI, xy)*seed)*xy.x);\n}\n\nfloat quick_noise(in float i, in int f)\n{\n    return gold_noise(vec2(i * 7.0, i * 11.0), fract(PHI * float(f)));\n}\n\nvec2 color_profile (in vec3 c)\n{\n    float seed = fract(c.x + c.y + c.z + GLOBAL_SEED);\n    return vec2(gold_noise(c.xy, seed), gold_noise(c.xy, seed + 0.1));\n}\n\n// returns the distance between 2 numbers in (0, 1), with wraparound\nfloat d( in float a, in float b)\n{\n    return min(min(abs(a-b), abs(a+1.0-b)), abs(a-1.0-b));\n}\n\n\n// chooses random neighbor, chance of choosing itself\nivec2 lookdir (in ivec2 xy)\n{\n    xy.x = xy.x+1;\n    float xr = gold_noise(vec2(xy), fract(iTime));\n    float yr = gold_noise(vec2(xy), fract(iTime+0.05));\n    \n    ivec2 d = ivec2(0);\n    \n    if (xr < 0.33333333) { d.x = -1;}\n    else if (xr < 0.66666667) {d.x = 1;}\n    \n    if (yr < 0.33333333) {d.y = -1;}\n    else if (yr < 0.6666667) {d.y=1;}\n    \n    return d;\n}\n\n// color a and color b fight. return the winner\nvec3 fight(in vec3 a, in vec3 b)\n{\n    vec2 ap = color_profile(a);\n    vec2 bp = color_profile(b);\n    \n    float aScore = d(ap.x, bp.y);\n    float bScore = d(bp.x, ap.y);\n    \n    return (aScore > bScore) ? a : b;\n}\n\n// copied from a game of life shader by iq: https://www.shadertoy.com/view/XstGRf\nvec4 cell( in ivec2 p )\n{\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p+r) % r;\n    return texelFetch(iChannel0, p, 0);\n}\n\nivec2 pxc( in ivec2 p )\n{\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p+r) % r;\n    return p;\n}\n\nfloat keyPressed(int keyCode) {\n\treturn texture(iChannel1, vec2((float(keyCode) + 0.5) / 256., .5/3.)).r;   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    ivec2 px = ivec2(fragCoord);\n    \n    vec3 me = cell(px).xyz;\n    \n    vec3 rival = cell(px+lookdir(px)).xyz;\n    \n    // on interval frame, introduce new color to random pixel\n    if (iFrame % INTERVAL == 0 && all(equal(pxc(px), ivec2( int(quick_noise(1.0, iFrame)*iResolution.x) , int(quick_noise(2.0, iFrame)*iResolution.y)  ))))\n    {\n        fragColor = vec4(gold_noise(fragCoord, 0.1 + fract(iTime)),gold_noise(fragCoord, 0.2 + fract(iTime)),gold_noise(fragCoord, 0.3 + fract(iTime)),1.0);\n    }\n    else\n    {\n        fragColor = (!bool(keyPressed(82))) ? vec4(fight(me, rival),1.0) : vec4(0.0);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}