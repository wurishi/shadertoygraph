{"ver":"0.1","info":{"id":"4dV3DK","date":"1456486858","viewed":173,"name":"Nasty Box Test","username":"tomkel","description":"A nasty ray-marched box demo ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["procedural"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat pattern( vec3 p )\n{\n    p = mod( p, vec3( 32.0,32.0, 32.0) );    \n    float sum = 0.0;\n    for( float i = 4.0; i > 0.0;i--)\n    {\n        float e = pow( 2.0, i );\n        float v = 0.0;\n        if ( floor( p.x / e ) > 0.0 )\n        {\n            v++;\n        }\n        if ( floor( p.y / e ) > 0.0 )\n        {\n            v++;\n        }\n        if ( floor( p.z / e ) > 0.0 )\n        {\n            v++;\n        }\n        \n         sum += e * mod(v,2.0); \n       \n    }\n    \n    return sum / 32.0;\n}\n\n\nvec4 march2( vec3 start, vec3 ray )\n{\n    vec4 colour;\n    for ( int i = 0; i < 512; i++ )\n    {\n     \n        vec3 p = start;\n      \n        if ( p.y < -50.0 || \n             p.y > 50.0  )\n        {   \n             float value = pattern( vec3( p.x,p.z,p.y ));\n             return vec4( 0.0, value, value, 1.0 );\n        \n        }\n        \n        else if (  mod( floor(p.x/40.0), 2.0) > 0.0 && \n                   mod( floor(p.z/40.0), 2.0 )> 0.0 )\n        \t{\n            \tfloat value = pattern( p );\n                return vec4( value, 0, 0, 1.0 );\n       \n        \t}\n        \n        start += ray;\n    }\n    \n    return vec4(0,0,0,1.0);\n}\n\nvec4 march( vec3 start, vec3 ray )\n{\n    vec4 colour;\n    for ( int i = 0; i < 1024; i++ )\n    {\n        float fog = (1.0 - ( float(i) / 1024.0 ));\n     \n        vec3 p = start;\n      \n        if ( p.y < -50.0 || \n             p.y > 50.0  )\n        {   \n             float value = pattern( vec3( p.x,p.z,p.y ));\n             return (vec4( 0.0, value, value, 1.0 ) * 0.5 +\n                     march2( p + vec3(0,-ray.y, 0), vec3( ray.x, -ray.y, ray.z) ) * 0.5 ) * fog;\n        \n        }\n        \n       else if (  mod( floor(p.x/40.0), 2.0) > 0.0 && \n                   mod( floor(p.z/40.0), 2.0 )> 0.0 )\n        \t{\n            \tfloat value = pattern( p );\n                return vec4( value, 0, 0, 1.0 ) * fog;\n       \n        \t} \n        \n        start += ray;\n    }\n    \n    return vec4(0,0,0,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float aspect = iResolution.y / iResolution.x;\n    float angle = iTime;\n    vec3 m0 = vec3( cos( angle), 0, -sin(angle));\n    vec3 m1 = vec3( 0,1.0,  0 );\n    vec3 m2 = vec3( sin( angle), 0, cos(angle) );\n    vec3 local = vec3( uv.x - 0.5, (uv.y - 0.5) * aspect, 0.5);\n    vec3 ray = vec3( dot( local, m0 ), dot( local, m1 ), dot(local,m2)  );\n    //ray =  vec3( 0.5, uv.y - 0.5, uv.x - 0.5 );\n    vec3 origin = vec3( 2.0 + cos( iTime ) * 0.2, sin( iTime ) * 4.0, iTime * 10.0 );\n    vec3 pos = origin; //+ ray; //vec3( uv.x - 0.5, uv.y - 0.5, 0 );\n    float value = 0.0;\n    vec4 colour;\n\n\t\n\tfragColor = march( pos * 10.0, ray * 10.0  * 1.0/16.0);\n}","name":"Image","description":"","type":"image"}]}