{"ver":"0.1","info":{"id":"4sKBRd","date":"1530025123","viewed":1596,"name":"Distance and art","username":"FlorianDuf","description":"Just do fun things with distance function.\n\nIt could be a way to do lens flar....","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["distancearthalo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dist(in vec2 uv, in vec2 p, in float level)\n{\n    float h = level;\n    uv = pow(abs(uv - p), vec2(h));\n    return pow( uv.x + uv.y, 1./h) ;  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Coordinate\n    vec2 xy = ( fragCoord - .5*iResolution.xy ) / iResolution.y; \n    \n    // Color\n    vec3 col = vec3(0.0);\n\tfloat speed = 20.0;\n    vec2 point = .5* vec2( .5 * sin(speed*iTime*0.1243), - .1 * sin(speed*iTime*0.3) );\n    col = mix(vec3(0.0), vec3((sin(iTime) * 0.5 + 0.5), 0.5,1.0) ,1.0/dist(xy, point, 5.0 * ( 0.5 * sin(iTime) + 0.55)) / 15.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}