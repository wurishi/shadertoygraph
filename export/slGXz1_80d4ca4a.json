{"ver":"0.1","info":{"id":"slGXz1","date":"1640163509","viewed":91,"name":"3D raycasting algoritme","username":"Gravechest","description":"hope you find it fancy","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d","raycasting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRr","filepath":"/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","previewfilepath":"/media/ap/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float vx = sin(fragCoord.x / 500.0 + 0.0) * cos(fragCoord.y / 500.0 + 0.0);\n    float vy = cos(fragCoord.x / 500.0 + 0.0) * cos(fragCoord.y / 500.0 + 0.0);\n    float vz = sin(fragCoord.y / 500.0 + 0.0);\n    float x = cos(iTime) * 10.0 + 10.0;\n    float y = sin(iTime) * 10.0 + 10.0;\n    float z = 0.0;\n    float dx,dy,dz;\n    for(int i = 0;i < 512;i++){\n        if(vx > 0.0){\n            dx = float(int(x)) + 1.0 - x;\n        }\n        else{\n            dx = float(int(x)) - x;\n            if(dx == 0.0){\n                dx = -1.0;\n            }\n        }\n        if(vy > 0.0){\n            dy = float(int(y)) + 1.0 - y;\n        }\n        else{\n            dy = float(int(y)) - y;\n            if(dy == 0.0){\n                dy = -1.0;\n            }\n        }\n        if(vz > 0.0){\n            dz = float(int(z)) + 1.0 - z;\n        }\n        else{\n            dz = float(int(z)) - z;\n            if(dz == 0.0){\n                dz = -1.0;\n            }\n        }\n        if(dx / vx < dy / vy){\n            if(dx / vx < dz / vz){\n                x += dx;\n                y += vy * dx / vx;\n                z += vz * dx / vx;\n            }\n            else{\n                x += vx * dz / vz;\n                y += vy * dz / vz;\n                z += dz;\n            }\n        }\n        else if(dy / vy < dz / vz){\n            x += vx * dy / vy;\n            y += dy;\n            z += vz * dy / vy;\n        }\n        else{\n            x += vx * dz / vz;\n            y += vy * dz / vz;\n            z += dz;\n        }\n        if(x < 0.0 || x > 32.0){\n            fragColor.r = 1.0;\n            break;\n        }\n        if(y < 0.0 || y > 32.0){\n            fragColor.g = 1.0;\n            break;\n        }\n        if(z < 0.0 || z > 32.0){\n            fragColor.b = 1.0;\n            break;\n        }\n\t\tvec4 testmap = texelFetch(iChannel0,ivec3(x,y,z),0);\n        if(testmap[0] == 1.0){\n            fragColor.r = x - float(int(x));\n            fragColor.g = y - float(int(y));\n            fragColor.b = z - float(int(z));\n            break;\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}