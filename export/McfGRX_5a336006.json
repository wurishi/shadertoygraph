{"ver":"0.1","info":{"id":"McfGRX","date":"1703287373","viewed":50,"name":"Minimal function plot","username":"ChunderFPV","description":"A lightweight function plotter.  Nothing special, just the basics using a small amount of code.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","example","simple","math","graph","function","plot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define F(x) smoothstep(min(3.*fwidth(u.y-x), 1.), 0., abs(u.y-x))\n//#define F(x) min(1., fwidth(u.y-x)/abs(u.y-x))  // alternate\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec3 c = vec3(0,1,2)/20.; // background color\n    \n    vec2 R = iResolution.xy,\n         u = (U-R/2.)/R.y*4./(1.-iMouse.y/R.y), // coords with zoom\n         g = min( fwidth(u)/abs(u-round(u)), vec2(1) ); // grid\n    \n    float t = iTime,\n          x = u.x;\n    \n    c += max(g.x, g.y) * .1; // grid lines\n    c += min(g.x, g.y) * .3; // points\n    \n    c.r  += F( sin(x+t) );\n    c.gb += F( cos(x) );\n    c.rg += F( tan(x) );\n    \n    C = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}]}