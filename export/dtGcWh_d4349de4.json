{"ver":"0.1","info":{"id":"dtGcWh","date":"1700159137","viewed":29,"name":"Simple rainbow circle","username":"Siend","description":"I am studying glsl, I will be glad for advice on how to improve the code.\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 colors[8]= vec3[](\n    vec3(1., 0., 0.),\n    vec3(1., 0.5, 0.),\n    vec3(1., 1., 0.),\n    vec3(0., 1., 0.),\n    vec3(0., 1., 1.),\n    vec3(0., 0., 1.),\n    vec3(1., 0., 1.),\n    vec3(1., 0., 0.)\n);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float minXY = min(iResolution.x, iResolution.y);\n    float rainbowStep = 1. / 7.;\n    vec3 color = vec3(0.);\n\n    float dist = iTime / 4.0 - 2.0 * distance(\n        vec2(\n            iResolution.x / minXY / 2.0,\n            iResolution.y / minXY / 2.0\n        ),\n        fragCoord.xy / minXY\n    );\n\n    int index = int(floor(mod(floor(dist / rainbowStep), 7.0)));\n\n    color = mix(colors[index], colors[index + 1], dist / rainbowStep - floor(dist / rainbowStep));\n\n\tfragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}