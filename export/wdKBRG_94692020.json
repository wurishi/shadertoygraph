{"ver":"0.1","info":{"id":"wdKBRG","date":"1607659808","viewed":110,"name":"Simple 3D Points","username":"ArunJangir","description":"Lets start with 3d","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){ return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y; // Normalized pixel coordinates (from 0 to 1)\n    vec3 col = vec3(0.);\n    \n    vec3 ro =  vec3(0,0,1);\n    vec3 rd =  normalize(vec3(uv.x,uv.y,0)-ro);\n    vec3 point;\n    float distance;\n    for(float i = 0.; i < 200.; i++){\n    point  = vec3 (1.0*cos(0.05*i*iTime),1.0*sin(0.05*i*iTime),-0.05*i);\n    distance = length(cross(point-ro,rd))/length(rd);\n    distance = smoothstep(0.15,0.0,distance);\n    col += distance;\n    }/*\n    point  = vec3 (1.0*cos(iTime),1.0*sin(iTime),-2);\n    distance = length(cross(point-ro,rd))/length(rd);\n    distance = smoothstep(0.15,0.0,distance);\n    col+=distance;\n    \n    point  = vec3 (0.5+1.0*cos(2.*iTime),0.5+sin(2.*iTime),-3);\n    distance = length(cross(point-ro,rd))/length(rd);\n    distance = smoothstep(0.15,0.0,distance);\n    \n    \n    col += distance;\n    */\n    \n    fragColor = vec4(col,0.);\n}","name":"Image","description":"","type":"image"}]}