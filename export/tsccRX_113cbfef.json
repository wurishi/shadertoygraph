{"ver":"0.1","info":{"id":"tsccRX","date":"1601392046","viewed":387,"name":"Foggy Woods","username":"matttsilva","description":"Spooky times","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fog","rain","halloween"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat time = iTime;\n    \n    vec4 col = vec4(0.335, 0.432, 0.401, 1.0);\n\tvec4 woods = texture(iChannel0,uv);\n    woods = texture(iChannel0, vec2(uv.x,fract(uv.y+(time/5.0))));\n    \n    vec2 q = vec2(0.);\n    q.x = fbm( uv + 0.00*time);\n    q.y = fbm( uv + vec2(1.0));\n\n    vec2 r = vec2(0.);\n    r.x = fbm( uv + 0.8*q + vec2(1.7,9.2)+ 0.15*time );\n    r.y = fbm( uv + 0.8*q + vec2(8.3,2.8)+ 0.126*time);\n\n    float f = fbm(uv+r);\n    woods.a *= length(r) * q.x * 2.0;\n    woods.rgb *= r.y * q.y * 1.3;\n    \n    // rain\n\tfloat d = 1.;\n\tfor (int i = 0; i < 13; i++)\n\t{\n\t\tfloat f = pow(d, .45)+.25;\n\t\tvec2 st =  f * (uv * vec2(1.5, .05)+vec2(-time*.1+uv.y*.5, time*.12));\n\t\tf = (texture(iChannel1, st * .5, -99.0).x + texture(iChannel1, st*.284, -99.0).y);\n\t\tf = clamp(pow(abs(f)*.5, 29.0) * 140.0, 0.00, uv.y*.4+.05);\n\t\tvec3 b = vec3(.25);\n\t\n\t\twoods.rgb += b*f;\n\t\td += 3.5;\n\t}\n    \n    // lightning\n    float lightning = sin(time*sin(time*10.));\t\t\t\t// lighting flicker\n    lightning *= pow(max(0., sin(time+sin(time))), 2.);\t\t// lightning flash\n    woods.rgb *= 0.6 + 0.004*lightning*mix(0.5, .1, time*time);\t// composite lightning\n    woods.rgb *= 1.-dot(uv-=.5, uv); \n\n    // Output to screen\n    fragColor = col * (1.0 - woods.a) + woods * woods.a;\n}","name":"Image","description":"","type":"image"}]}