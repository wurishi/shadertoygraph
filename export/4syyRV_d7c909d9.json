{"ver":"0.1","info":{"id":"4syyRV","date":"1522547251","viewed":225,"name":"Technicolor Swarm Dance","username":"chao_mu","description":"Practicing iterative technique.  Inspired by https://www.interactiveshaderformat.com/sketches/802","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["iterative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BACKGROUND false\n#define PARTICLES 250\n#define X_FACTOR 0.2\n#define Y_FACTOR 0.1\n#define ROTATE_MULTIPLIER 5\n#define SPEED 2\n#define CIRCLE_SIZE 0.01\n\n// Produce a 1 if the provided value is <= 0, with a small transitional blur\n#define S(v) smoothstep(blur, 0., v)\n\n// Draw (return 1) a circle at the origin with the radius of r. \n#define circle(U, r) S(length(U) - r)\n\n// Multiple the result of this function call to rotate the coordinates by the given angle.\n#define rotate(angle) mat2(cos(angle),-sin(angle), sin(angle),cos(angle));\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1) so that 0,0 is the center\n    vec2 uv = ( 2.*fragCoord - iResolution.xy ) / iResolution.y;\n    float blur = 10./iResolution.y;\n    \n    float mask = 0.;\n    \n\tfloat time = iTime * float(SPEED);\n       \n    // Zoom out\n    uv *= 1.5;\n    \n    for (float i=0.; i < float(PARTICLES); i++) {\n        uv *= rotate(float(ROTATE_MULTIPLIER));\n        \n        vec2 st = uv + vec2(sin(time + (i * X_FACTOR)), cos(time + (i * Y_FACTOR)));\n        \n        mask += circle(st, (1. + sin(time + float(i))) * CIRCLE_SIZE);\n\n    }\n    \n    mask = clamp(mask, 0., 1.);\n    \n    vec3 col;\n    vec2 texUv = (fragCoord / iResolution.xy);\n    if (mask > 0.) {\n    \t// Move the background around.\n    \ttexUv *= rotate(iTime);\n    \tcol = texture(iChannel0, texUv).rgb * mask;\n    } else if (BACKGROUND) {\n        col = texture(iChannel1, texUv).rgb; \n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}