{"ver":"0.1","info":{"id":"dtGXWD","date":"1686093602","viewed":80,"name":"Shaderino","username":"Naraku","description":"Not really sure what i'm doing, but fun!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t )\n{\n    vec3 a = vec3(0.980,0.625,0.923);\n    vec3 b = vec3(0.673,0.343,0.464);\n    vec3 c = vec3(1.143,1.182,1.524);\n    vec3 d = vec3(1.306,2.887,3.029);\n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float loops = 8.0;\n    float thickness = 0.25;\n    float brightness = 0.1;\n    float colorVariationSpeed = 36.0;\n    float iterations = 3.5;\n\n    vec2 uv = ( 2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n\n    vec3 finalColor = vec3(0.0);\n\n    for ( float i = 0.0; i < iterations; i++) {\n        uv = clamp(fract(uv * (.05 * 30.0)),0.0,1.0);\n        uv -= .5;\n        \n        float angle = atan(uv.y, uv.x);\n        float radius = length(uv);\n\n        vec2 vertex1 = vec2(cos(angle), sin(angle));\n        vec2 vertex2 = vec2(cos(angle + 2.0944), sin(angle + 2.0944)); // 2π/3\n        vec2 vertex3 = vec2(cos(angle + 4.18879), sin(angle + 4.18879)); // 4π/3\n\n        float d1 = abs(length(vertex1) - radius) * exp(-length(uv0));\n        float d2 = abs(length(vertex2) - radius) * exp(-length(uv0));\n        float d3 = abs(length(vertex3) - radius) * exp(-length(uv0));\n\n        vec3 color = palette(length(uv0) + i * colorVariationSpeed + iTime);\n\n        float d = min(min(d1, d2), d3);\n\n        d = sin(d * loops + iTime) / thickness;\n        d = abs(d);\n\n        d = pow(brightness / d, 2.0);\n        d = fract(d) ;\n        uv += d;\n\n        finalColor += color * d;  \n    }\n\n    fragColor = vec4(finalColor, 1.0); \n}\n","name":"Image","description":"","type":"image"}]}