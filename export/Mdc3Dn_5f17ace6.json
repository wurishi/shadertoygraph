{"ver":"0.1","info":{"id":"Mdc3Dn","date":"1448929672","viewed":180,"name":"EnclosingCirclePair","username":"jt","description":"Visualization of a bounding-circle enclosing a pair of circles.\nSee [url]https://www.shadertoy.com/view/Msc3Wn[/url] for three-circle variant.\nSee [url]https://www.shadertoy.com/view/lllyz8[/url] for the tangent circle variant.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["circle","bounding","pair"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Enclosing Circle Pair - written 2015 by JT\n// URL of this shader: https://www.shadertoy.com/view/Mdc3Dn\n// See https://www.shadertoy.com/view/lllyz8 for original (tangent circle)\n\nvec3 EnclosingCircle(vec2 m, float r, vec2 n, float s)\n{\n    float d = length(n - m);\n    \n    if(d < r - s) return vec3(m, r); // special case: second circle contained in first\n    if(d < s - r) return vec3(n, s); // special case: first circle contained in second\n    \n    float t = (r + d + s) / 2.;\n\n    return vec3(mix(m, n, (t - r) / d), t);\n}\n\n#define draw(q) O.rg *= smoothstep(0.0, 0.01, abs(q))\n#define mark(q) O *= smoothstep(0.0, 0.01, abs(q))\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec2 R = iResolution.xy; \n    I = (I+I-R)/R.y;\n\n    vec2 m = vec2(0.1,0.2);\n    float r = 0.5;\n    \n    vec2 n = length(iMouse.xy) > 0. ? (2. * iMouse.xy - R) / R.y : vec2(-0.2,-0.55);\n    float s = 0.3;\n\n    O = vec4(1);\n    draw(length(I - m) - r); // circle\n    draw(length(I - m)-.01); // center\n    draw(length(I - n) - s); // circle\n    draw(length(I - n)-.01); // center\n    vec3 q = EnclosingCircle(m, r, n, s);\n    mark(length(I - q.xy) - q.z); // circle\n    mark(length(I - q.xy)-.01); // center\n}\n","name":"Image","description":"","type":"image"}]}