{"ver":"0.1","info":{"id":"MlcXRB","date":"1480263686","viewed":239,"name":"Split Shift","username":"panda1234lee","description":"Easy split shift [similar effect: https://www.shadertoy.com/view/4tdXzj]","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["shift"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    //float ratio = iResolution.x / iResolution.y;\n    float offset = 0.;\n    \n    // Benefited by iq's advice, Thanks very much!\n    // ------------------\n    //vec2 duvdx = dFdx(uv);\n    //vec2 duvdy = dFdy(uv);\n    // ------------------\n    \n    \n    float t1 = uv.x - uv.y;\n    float band = .5;\n    \n    if(t1 < -1.*band)\n    {\n    \toffset = -1. * sin(iTime);\n    }\n    else if(t1 > -1.*band && t1 < 0.)\n    {\n    \toffset = 1.*sin(iTime);\n    }\n    if(t1 > 0. && t1 < 1.*band)\n    {\n        offset = -1.*sin(iTime);\n    }\n    else if(t1 >band && t1 < 2.*band)\n    {\n    \toffset = 1. * sin(iTime);\n    }\n\n\tvec4 col0 = texture(iChannel0, uv + vec2(offset, offset), -10.);\n    \n    vec4 col1 = vec4(smoothstep(0.,0.015, abs(t1 - 1.*band)));\n    vec4 col2 = vec4(smoothstep(0.,0.015, abs(t1 + 0.*band)));\n    vec4 col3 = vec4(smoothstep(0.,0.015, abs(t1 + 1.*band)));\n    \n    fragColor = mix(col0, vec4(1.), (1.- col1)+(1.-col2)+(1.-col3));\n    \n    \n/*\n#if 0\n    if(fragCoord.x / fragCoord.y > ratio)\n    {\n    \toffset = 1. * sin(iTime);\n    }\n    else\n    {\n    \toffset = -1.*sin(iTime);\n    }\n#else   \n    \n    float t1 = fragCoord.x - ratio *fragCoord.y;\n    float t2 = iResolution.x - iResolution.y;\n    float band = (iResolution.x - iResolution.y);\n    if(t1 > t2)\n    {\n    \toffset = sin(.5 *iTime);\n    }\n    else if( ((t1 + 1.*band) > t2) || ((t1 + 2.*band) < t2))\n    {\n    \toffset = -sin(.5 *iTime);\n    }\n    else if( ((t1 + 2.*band) > t2) || ((t1 + 3.*band) < t2))\n    {\n    \toffset = sin(.5 *iTime);\n    }\n    \n    //fragColor = vec4(t1 + 1.*band);\n    \n    \n#endif    \n\n    // My Test\n    //fragColor = texture(iChannel0, uv + offset);\n    \n    // ☆ Benefited by iq's advice, Thanks very much!\n    // ------------------\n    //fragColor = textureGrad(iChannel0, uv + offset, duvdx, duvdy);\n    // ------------------\n    \n    // ☆ Benefited by hornet's advice, Thanks very much!\n    // ------------------\n    vec4 col0 = texture( iChannel0, uv+offset, -10.0);\n    // ------------------\n    \n    vec4 col1 = vec4(smoothstep(0.,0.015, abs(t1 + 1.*band)/iResolution.x));\n    vec4 col2 = vec4(smoothstep(0.,0.015, abs(t1 + 0.*band)/iResolution.x));\n    vec4 col3 = vec4(smoothstep(0.,0.015, abs(t1 - 1.*band)/iResolution.x));\n    fragColor = mix(col0, vec4(1.), (1.- col1)+(1.-col2)+(1.-col3));\n */\n    \n}","name":"Image","description":"","type":"image"}]}