{"ver":"0.1","info":{"id":"ssXGWl","date":"1616709654","viewed":144,"name":"Accumulation Test (293856240895)","username":"slerpy","description":"Made this to explain to a friend how you accumulate frames in Shadertoy","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["2d","test","accumulation","buffers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec4 tex = texture(iChannel0, uv);\n    \n    fragColor = 0.5 + tex / tex.w;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float pi = acos(-1.0);\n\nfloat hash(vec3 p3)\n{\n\tp3 = fract(p3 * .1031);\n    p3 += dot(p3, p3.zyx + 31.32);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec2 draw_line(vec2 coord)\n{\n    vec2 uv = 8.0 * (2.0 * coord - iResolution.xy) / iResolution.y;\n    \n    float t = float(iFrame) + 4.0 * hash(vec3(coord, iTime));\n    t = 4.0 * pi * fract(0.0006 * t);\n\n    uv.x += sin(t) * t + 1.0;\n    float angle = -2.0 * t;\n    vec2 dir = vec2(cos(angle), sin(angle));\n    \n    float d = dot(uv, dir);\n    return exp(-0.6 * abs(d)) * vec2(2.0 * step(d, 0.0) - 1.0, 1);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec4 acc = draw_line(fragCoord).xxxy;\n    \n    if (iFrame > 300) {\n        vec2 uv = fragCoord/iResolution.xy;\n        acc += texture(iChannel0, uv);\n    }\n    \n    fragColor = acc;\n}","name":"Buffer A","description":"","type":"buffer"}]}