{"ver":"0.1","info":{"id":"3dBfWh","date":"1589893174","viewed":89,"name":"blue rect and circular orbit","username":"darkfox","description":"my first shader.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["figure"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// とりあえずhsbをrgbにする関数\n// hsbで書かれた(0.0～1.0)の数値vec3をrgbに変換する魔法のコード\nvec3 getRGB(float h, float s, float b){\n  vec3 c = vec3(h, s, b);\n  vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);\n  rgb = rgb * rgb * (3.0 - 2.0 * rgb);\n  return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n// 2w, 2hを横、縦とする長方形の内部にあるとき負になる感じ\nfloat rect(vec2 p, float w, float h){\n  return max(abs(p.x) - w, abs(p.y) - h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 縦座標で-1.0～1.0にする\n    vec2 uv = (2.0 * fragCoord.xy - iResolution.xy)/min(iResolution.x, iResolution.y);\n\n    vec3 col = getRGB(0.55, abs(uv.y) * abs(uv.x), 1.0);\n    float t = rect(uv + 0.5 * vec2(cos(iTime), sin(iTime)), 0.3, 0.4);\n    if(t < 0.01){ col = vec3(0.0); }\n    if(t < -0.01){ col = getRGB(0.65, 0.5 + t, 1.0); }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}