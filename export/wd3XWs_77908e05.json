{"ver":"0.1","info":{"id":"wd3XWs","date":"1573131613","viewed":154,"name":"Interactive Game of life","username":"ThibaultTricard","description":"quick shader experimentation on the game of life, \nclick on a cell to make it allive or to kill it \npress space to launch or pause the game\npress R to reset the screen to black\npress L to reload the example","likes":3,"published":1,"flags":48,"usePreview":0,"tags":["gameoflifeconway"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    fragColor = texelFetch(iChannel0,ivec2(fragCoord),0);\n}   ","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float zoom = 7.0;\nint slowdown = 3;\nint KEY_SPACE = 32;\nint KEY_R = 82;\nint KEY_L = 76;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float start = texelFetch(iChannel1,ivec2(KEY_SPACE, 2),0).x;\n    float reset = texelFetch(iChannel1,ivec2(KEY_R, 1),0).x;\n    float load = texelFetch(iChannel1,ivec2(KEY_L, 1),0).x;\n    float togglecolor = texelFetch(iChannel2,ivec2(0, 0),0).z;\n    ivec2 coord = ivec2(fragCoord/zoom);\n    ivec2 clickCoord = ivec2(iMouse.xy/zoom); \n    fragColor = texelFetch(iChannel0,ivec2(fragCoord),0);\n    \n    //check if a cell state need to be changed\n    if(coord.x == clickCoord.x && coord.y==clickCoord.y && togglecolor >0.0){\n        fragColor = vec4(1.0-fragColor.x);\n    }\n    \n    if(start == 0.0 && iFrame%slowdown ==0){\n        int nv =0;\n        //neighborhood counting\n    \tfor(int i =-1; i <= 1; i ++){\n        \tfor(int j =-1;j <= 1; j ++){\n                if(i!=0 || j!=0){\n                 \t if(texelFetch(iChannel0,ivec2(coord*int(zoom))+ivec2(int(zoom) *i, int(zoom)*j),0).x > 0.0 ) nv+=1;\n                }\n    \t\t}\n    \t}\n        //condition to give life to a cell\n        if(nv == 3 && fragColor.x ==0.0){\n            fragColor = vec4(1.0);\n        }\n        //condition to kill to a cell\n        else if(!(nv == 3|| nv == 2) && fragColor.x ==1.0){\n            fragColor = vec4(0.0);\n        }\n    }\n    \n    if(reset>=0.5){\n        fragColor = vec4(0.0);\n    }\n    \n    if(iFrame <10 || load >0.5){\n        fragColor = vec4(texelFetch(iChannel3,ivec2(coord),0).x >0.5);\n    }\n    \n\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//getting keypressed first frame info\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float state = texture(iChannel0, vec2(0,0)).x;\n    fragColor = vec4(iMouse.z,state,iMouse.z!=state && iMouse.z > 1.0 ,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}