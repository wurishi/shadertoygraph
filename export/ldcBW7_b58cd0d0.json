{"ver":"0.1","info":{"id":"ldcBW7","date":"1525365902","viewed":628,"name":"8bit Mentality with lyrics","username":"akhgary","description":"Hope you like it! :-)\n\nI could not store lyrics in one big array so i had to chop it into smaller pieces.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["wave","music","text","string","plot","print","lyrics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ====================================\n// 8bit mentality lyrics\n// http://demoscene.stg7.net/lyrics/song.php?id=111\n// ====================================\n// Tupper's formula\n// https://en.wikipedia.org/wiki/Tupper%27s_self-referential_formula\n// ====================================\n// great video by numberphile!\n// https://www.youtube.com/watch?v=_s5RFgd59ao\n// ====================================\n// visulizing sound tutorial\n// https://www.shadertoy.com/view/Xds3Rr\n// ====================================\n// short hue\n// https://www.shadertoy.com/view/ll2cDc\n// ====================================\n\n\nfloat circle(vec2 uv, vec2 C, float r){\n    return 1./abs(length(uv-C)-r)/25.;\n}\n\nvec3 hue(float n) {\n    return 0.6+0.6*cos(6.3*n+vec3(0,23,21));\n}\n\n// plot using tuppers formula.\n// this is a slightly modified version.\n// since k is big and shader has not enough accuracy\n// k is chopped to two pieces for plotting half top and bottom.\nfloat plot(vec2 uv, vec2 center, vec2 size, int value)\n{\n    const vec2 scale = vec2(5,3), cc = vec2(0,1e-3);\n    vec2 origin = size/2., o = vec2(0,origin.y);\n    vec2 mi= center-origin, ma = center+origin;\n    if(uv.x>mi.x&&uv.y>mi.y&&uv.x<ma.x&&uv.y<ma.y-1e-4){\n        vec2 xy = uv.y>=center.y \n                ?(uv-mi-o)/(ma-mi-o)*scale+vec2(0,float(value>>15)*scale.y) // half top\n                :(uv-mi)/(ma+cc-mi-o)*scale+vec2(0,float(value&0x7FFF)*scale.y);// half bottom\n        if(.5<floor(mod(floor(xy.y/scale.y)*pow(2.,-scale.y*floor(xy.x)-mod(floor(xy.y),scale.y)),2.))) \n            return 1.;\n    }\n    return 0.;\n}\nvoid mainImage(out vec4 col,in vec2 coord)\n{\n    float ratio = iResolution.x/iResolution.y;\n    vec2 uv = (2.*coord.xy-iResolution.xy)/iResolution.y;\n    \n    float spacing = 0.03;\n    vec2 size = vec2(0.1,.2), pos = vec2(0,1);\n\n    int lines = 0;\n    int[50] lyrics = getSubtitles(iChannelTime[0],lines);\n    \n    float string = 0.;\n    for(int i=0;i<SIZE;i++){\n        \n        if(lyrics[i]<0){ // enter\n            int chars = -(lyrics[i]+1);\n            if(chars==-1) break; // end of string\n            pos.x = (1.-float(chars))*(size.x+spacing)/2.; // center\n            pos.y -= 2./float(lines+1); // padding\n        }\n        else {\n            string += plot(uv, pos,size,characters[lyrics[i]]);\n            pos.x+=size.x+spacing;\n        }\n    }\n    \n    float norm = (uv.x/ratio+1.)/2.;\n    float wave = texelFetch(iChannel0, ivec2(norm*512.,1), 0).x;\n    \n    vec3 hue1 = hue(iTime/20.-uv.y/5.);\n    vec3 hue2 = hue(iTime/20.-uv.x/5.);\n    \n    uv.x=wave-0.5; // turn circle into two waves!\n    col.xyz += hue1*circle(uv, vec2(0), 1.3-wave);\n    \n    col.xyz += string + 0.1*hue2;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define SIZE 50 // maximum string length\n\nconst int[64] characters = int[](\n    0x0        ,// space\n    0xE00140   ,// !\n    0x6180000  ,// \"\n    0xB2CAEBA  ,// #\n    0x12E8ABE9 ,// $\n    0x110DB711 ,// %\n    0x295554E  ,// &\n    0x880000   ,// '\n    0x8C0070   ,// (\n    0x700188   ,// )\n    0x11655DF5 ,// *\n    0x6049E4   ,// +\n    0x1A8      ,// ,\n    0x4924     ,// -\n    0xD8       ,// .\n    0x11000111 ,// /\n    0x1EB1E26E ,// 0\n    0xE803C8   ,// 1\n    0x15911359 ,// 2\n    0x35B2624A ,// 3\n    0x7442E96  ,// 4\n    0x25B7E24A ,// 5\n    0x5B5E24E  ,// 6\n    0x359201C0 ,// 7\n    0x15B5624E ,// 8\n    0x1C91EB68 ,// 9\n    0xD800D8   ,// :\n    0xD801A8   ,// ;\n    0x22002A0  ,// <\n    0x924A492  ,// =\n    0x280888   ,// >\n    0x15910140 ,// ?\n    0x1C9663CE ,// @\n    0x1C91F927 ,// A\n    0x15B7E24F ,// B\n    0x1491A24E ,// C\n    0x1C93E24F ,// D\n    0x25B7924F ,// E\n    0x25B78007 ,// F\n    0x1491EB4E ,// G\n    0x3927F007 ,// H\n    0x24F213C9 ,// I\n    0x27900C4E ,// J\n    0x2227B807 ,// K\n    0x3924F    ,// L\n    0x3A2BF107 ,// M\n    0x382BF807 ,// N\n    0x1C91E24E ,// O\n    0x1C938927 ,// P\n    0x1C91D54E ,// Q\n    0x1C939D27 ,// R\n    0x25B5624A ,// S\n    0x24F201C0 ,// T\n    0x3803E24E ,// U\n    0x3803C454 ,// V\n    0x3803E38E ,// W\n    0x222A3823 ,// X\n    0x310701C0 ,// Y\n    0x26B3326B ,// Z\n    0x9C0078   ,// [\n    0x51500    ,// \\\n    0xF001C8   ,// ]\n    0xA888000  ,// ^\n    0x1249     ,// _\n    0x2800000   // `\n);\n\nconst int[SIZE] lyrics0=int[](\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n);\n\nconst int[SIZE] lyrics1 = int[](\n-9,44,37,33,46,0,47,53,52,                        //0: LEAN OUT\n-7,41,46,0,52,40,37,                              //9: IN THE\n-8,55,41,46,36,47,55,12,                          //16: WINDOW,\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics2 = int[](\n-5,52,33,43,37,                                   //0: TAKE\n-7,33,0,44,47,47,43,                              //5: A LOOK\n-8,33,46,36,0,51,37,37,                           //12: AND SEE\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics3 = int[](\n-12,45,37,52,33,44,0,45,47,47,46,51,              //0: METAL MOONS\n-13,33,50,37,0,36,50,37,33,45,41,46,39,           //12: ARE DREAMING\n-8,34,47,52,40,0,47,38,                           //25: BOTH OF\n-11,57,47,53,0,33,46,36,0,45,37,                  //33: YOU AND ME\n-1,0,0,0,0,0); \n\nconst int[SIZE] lyrics4 = int[](\n-8,51,52,33,50,41,46,39,                          //0: STARING\n-11,41,46,0,52,40,37,0,51,43,57,                  //8: IN THE SKY\n-13,52,40,37,57,0,33,50,37,0,38,47,50,            //19: THEY ARE FOR\n-15,36,33,57,51,0,33,46,36,0,55,37,37,43,51,      //32: DAYS AND WEEKS\n-1,0,0);\n    \nconst int[SIZE] lyrics5 = int[](\n-15,48,33,41,46,52,41,46,39,0,35,53,34,37,51,     //0: PAINTING CUBES\n-4,33,46,36,                                      //15: AND\n-16,50,41,34,34,47,46,51,0,44,41,43,37,0,41,46,   //19: RIBBONS LIKE IN\n-10,36,37,45,47,51,35,37,46,37,                   //35: DEMOSCENE\n-1,0,0,0,0\n);               \nconst int[SIZE] lyrics6 = int[](\n-14,35,41,50,35,53,41,52,13,34,37,46,52,12,       //0: CIRCUIT-BENT,\n-16,37,41,39,40,52,13,34,41,52,0,45,33,36,37,12,  //14: EIGHT-BIT MADE,\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0); \n\nconst int[SIZE] lyrics7 = int[](\n-11,34,53,52,0,40,47,55,0,41,51,                  //0: BUT HOW IS\n-12,57,47,53,50,0,40,37,33,50,52,31,              //11: YOUR HEART?\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics8 = int[](\n-12,48,41,56,37,44,0,48,37,44,52,12,              //0: PIXEL PELT,\n-14,44,47,55,13,38,41,0,34,50,33,41,46,12,        //12: LOW-FI BRAIN,\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);   \n\nconst int[SIZE] lyrics9 = int[](\n-11,52,40,33,52,0,45,33,43,37,51,                 //0: THAT MAKES\n-13,57,47,53,0,51,47,0,51,45,33,50,52,            //11: YOU SO SMART\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics10 = int[](\n-6,34,37,37,48,51,                                //0: BEEPS\n-4,33,46,36,                                      //6: AND\n-7,54,47,41,35,37,12,                             //10: VOICE,\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);  \n\nconst int[SIZE] lyrics11 = int[](\n-7,39,44,41,52,35,40,                             //0: GLITCH\n-4,33,46,36,                                      //7: AND\n-7,46,47,41,51,37,12,                             //11: NOISE,\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);               \n\nconst int[SIZE] lyrics12 = int[](\n-11,57,47,53,7,50,37,0,46,47,52,                  //0: YOU'RE NOT\n-10,33,0,45,33,35,40,41,46,37,                    //11: A MACHINE\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics13 = int[](\n-10,33,46,57,0,45,47,50,37,1,                     //0: ANY MORE!\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);   \n\nconst int[SIZE] lyrics14 = int[](\n-7,35,47,36,41,46,39,                             //0: CODING\n-6,37,54,37,50,57,                                //7: EVERY\n-8,45,41,46,53,52,37,12,                          //13: MINUTE,\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0); \n\nconst int[SIZE] lyrics15 = int[](\n-7,35,47,36,41,46,39,                             //0: CODING\n-6,37,54,37,50,57,                                //7: EVERY\n-4,34,41,52,                                      //13: BIT\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics16 = int[](\n-8,48,33,50,52,41,37,51,                          //0: PARTIES\n-8,57,47,53,0,35,33,46,                           //8: YOU CAN\n-7,54,41,51,41,52,12,                             //16: VISIT,\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\n\nconst int[SIZE] lyrics17 = int[](\n-7,48,37,47,48,44,37,                             //0: PEOPLE\n-8,57,47,53,0,35,33,46,                           //7: YOU CAN\n-5,45,37,37,52,                                   //15: MEET\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics18 = int[](\n-8,52,53,50,46,0,47,46,                           //0: TURN ON\n-5,57,47,53,50,                                   //8: YOUR\n-10,35,47,45,48,53,52,37,50,12,                   //13: COMPUTER,\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics19 = int[](\n-7,45,33,43,37,0,33,                              //0: MAKE A\n-10,34,50,33,46,36,0,46,37,55,                    //7: BRAND NEW\n-5,34,37,33,52,                                   //17: BEAT\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics20 = int[](\n-9,36,33,46,35,37,0,41,52,                        //0: DANCE IT\n-13,44,41,43,37,0,33,0,40,53,45,33,46,            //9: LIKE A HUMAN\n-10,55,41,52,40,0,57,47,53,50,                    //22: WITH YOUR\n-11,50,47,34,47,52,0,38,37,37,52,                 //32: ROBOT FEET\n-1,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics21 = int[](\n-8,55,40,33,52,0,41,51,                           //0: WHAT IS\n-16,40,41,39,40,0,36,37,38,41,46,41,52,41,47,46,  //8: HIGH DEFINITION\n-4,38,47,50,                                      //24: FOR\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics22 = int[](\n-9,55,40,37,46,0,57,47,53,                        //0: WHEN YOU\n-11,51,52,41,44,44,0,48,44,33,57,                 //9: STILL PLAY\n-14,47,46,0,35,47,45,45,47,36,47,50,37,31,        //20: ON COMMODORE?\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] lyrics23 = int[](\n-9,47,47,55,55,55,14,14,14,                       //0: OOWWW...\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] intro0 = int[](\n-18,2,24,13,34,41,52,0,45,37,46,52,33,44,41,52,57,2,//0: \"8-BIT MENTALITY\"\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] intro1 = int[](\n-18,2,24,13,34,41,52,0,45,37,46,52,33,44,41,52,57,2,//0: \"8-BIT MENTALITY\"\n-15,55,41,52,40,0,44,57,50,41,35,51,0,26,9,       //18: WITH LYRICS :)\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nconst int[SIZE] intro2 = int[](\n-11,52,40,33,46,43,51,0,38,47,50,                 //0: THANKS FOR\n-10,55,33,52,35,40,41,46,39,1,                    //11: WATCHING!\n-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nint[SIZE] getSubtitles(float time, inout int lines){\n    int[SIZE] selected;\n    \n    if(time > 200.){\n    \tlines = 0; selected = lyrics0; time=0.;}\n    \n    if(time > 191.){\n    \tlines = 1; selected = lyrics13; time=0.;}\n    \n    if(time > 178.5)time-=(178.-55.); // loop\n    if(time>160.9) time-=(160.9-55.); // loop\n    \n    if(time > 143.){\n    \tlines = 0; selected = lyrics0; time=0.;}\n    if(time > 141.5){\n    \tlines = 1; selected = lyrics23; time=0.;}\n    if(time > 136.){\n    \tlines = 3; selected = lyrics22; time=0.;}\n    if(time > 134.){\n    \tlines = 0; selected = lyrics0; time=0.;}\n    if(time > 127.){\n    \tlines = 3; selected = lyrics21; time=0.;}\n    \n    if(time>110.5) time-=(110.-55.); // loop\n\n    if(time > 106.){\n        lines = 4; selected = lyrics20; time=0.;}\n    if(time > 103.5){\n        lines = 3; selected = lyrics19; time=0.;}\n    if(time > 101.5){\n        lines = 3; selected = lyrics18; time=0.;}\n    if(time > 99.){\n        lines = 3; selected = lyrics17; time=0.;}\n    if(time > 97.5){\n        lines = 3; selected = lyrics16; time=0.;}\n    if(time > 94.5){\n        lines = 3; selected = lyrics15; time=0.;}\n    if(time > 93.){\n        lines = 3; selected = lyrics14; time=0.;}\n\n    if(time > 72.) time-=(72.-55.); // loop\n\n    if(time > 69.){\n        lines = 0; selected = lyrics0; time=0.;}\n    if(time > 67.){\n        lines = 1; selected = lyrics13; time=0.;}\n    if(time > 65.3){\n        lines = 2; selected = lyrics12; time=0.;}\n    if(time > 64.5){\n        lines = 3; selected = lyrics11; time=0.;}\n    if(time > 63.5){\n        lines = 3; selected = lyrics10; time=0.;}\n    if(time > 61.){\n        lines = 2; selected = lyrics9; time=0.;}\n    if(time > 59.3){\n        lines = 2; selected = lyrics8; time=0.;}\n    if(time > 57.){\n        lines = 2; selected = lyrics7; time=0.;}\n    if(time > 55.0){\n        lines = 2; selected = lyrics6; time=0.;}\n    if(time > 50.9){\n        lines = 4; selected = lyrics5; time=0.;}\n    if(time > 46.5){\n        lines = 4; selected = lyrics4; time=0.;}\n    if(time > 42.){\n        lines = 4; selected = lyrics3; time=0.;}\n    if(time > 39.8){\n        lines = 3; selected = lyrics2; time=0.;}\n    if(time > 38.){\n        lines = 3; selected = lyrics1; time=0.;}\n    \n    if(time > 17.){\n    \tlines = 0; selected = lyrics0; time=0.;}\n    if(time > 10.){\n        lines = 2; selected = intro2; time=0.;}\n    if(time > 8.4){\n    \tlines = 0; selected = lyrics0; time=0.;}\n    if(time > 4.){\n        lines = 2; selected = intro1; time=0.;}\n    if(time > 0.){\n        lines = 2; selected = intro0; time=0.;}\n    \n    return selected;\n}","name":"Common","description":"","type":"common"}]}