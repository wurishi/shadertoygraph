{"ver":"0.1","info":{"id":"4lVBDV","date":"1544367738","viewed":474,"name":"Bipolar Ball","username":"skaplun","description":"Fraser's bipolar ball https://dribbble.com/shots/893769-Bipolar-Ball\nInspired by Martijn Steinrucken's 'Smile tutorial'\nInteractive!","likes":45,"published":1,"flags":0,"usePreview":0,"tags":["2d","interactive","animation","smiley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BLUE vec4(48./255., 182./255., 243./255., 1.)\n#define GREY vec4(36./255., 44./255., 44./255., 1.)\n#define TONGUE_CLR vec4(223./255., 24./255., 96./255., 1.)\n#define SHADOW_CLR vec3(40./255., 153./255., 200./255.)\n#define A (5./iResolution.y)\n#define OUTER_S(x, y) smoothstep(x, x+A, y)\n#define INNER_S(x, y) smoothstep(x+A, x, y)\n\nvec4 shadows(vec2 uv, float m){\n\tvec4 clr = vec4(1.);\n    {//chin\n        vec2 uv = vec2(uv.x + m * .25, uv.y + m * .4);\n        clr = vec4(SHADOW_CLR, INNER_S(.2 - m*.075 , distance(vec2(.025, -.15), uv)));\t\n    \tclr.a *= OUTER_S(.35, distance(vec2(.02, .13), uv));\n    }\n    \n    {//eyes\n        vec2 uv = vec2(abs(uv.x + .1), uv.y + m * .5);\n        clr = mix(clr, vec4(SHADOW_CLR, 1.), INNER_S(.26, distance(vec2(.33, .6), uv)));\n        clr.a *= step(uv.y - .4, 0.);\n    }\n    \n    {//forehead\n        vec2 uv = vec2(abs(uv.x + .1), uv.y + m * .5);\n    \tfloat cutoff = OUTER_S(.125 - .05*m, uv.y - .4) * INNER_S(cos(uv.x * 1.85) * .175, uv.y - .4);\n        clr = mix(clr, vec4(SHADOW_CLR, m), cutoff);\n    }\n    \n    return clr;\n}\n\nvec4 mouth(vec2 uv, float m){\n    uv *= 1. + (m*.6 - .2);\n    \n\tvec2 shifted_uv = vec2(uv.x + .2 * m, uv.y + .9 * m);\n    vec4 clr = GREY;\n    \n    {//tongue\n        vec2 shifted_uv = vec2(uv.x + .1 * m, uv.y + .6 * m);\n    \tclr = mix(GREY, TONGUE_CLR, INNER_S(.3, distance(vec2(.2, -.25), shifted_uv)));\n    }\n    \n    {//cheek\n        vec2 shifted_uv = vec2(uv.x + .2 * m, uv.y + .9 * m);\n    \tclr.a *= OUTER_S(.3, distance(vec2(-.4, .15), shifted_uv));\n    }\n\t\n    {//teeth\n        vec2 st = vec2(mod(uv.x, .15), uv.y + .275*m) * 1.1;\n        vec4 teeth = vec4(vec3(1.), INNER_S(.07, distance(vec2(.075, .16), st)));\n        teeth.a *= step(abs(uv.x), .3);\n        teeth.rgb *= .8 + .2 * INNER_S(.125, st.y);\n    \tclr = mix(clr, teeth, teeth.a);\n    }\n\t\n    {//lips\n        vec2 st = shifted_uv * 5.;\n\t\tfloat curve = pow(cos(st.x) * .075, .5);\n        \n        clr = mix(clr, vec4(GREY.rgb, .3*pow(m, 4.)),\n                  (1.-clr.a) * INNER_S( -curve+curve*m, shifted_uv.y - .2 + abs(uv.x)*.075));\n        \n        clr.a *= INNER_S(curve-curve*(1.-m), shifted_uv.y - .15);\n    \tclr.a *= OUTER_S(-curve+curve*m, shifted_uv.y - .15);\n    \tclr.a *= INNER_S(.31415, abs(shifted_uv.x));\n    }\n\treturn clr;\n}\n\nvec4 eyes(vec2 uv, vec2 m){\n    float sx = sign(uv.x);\n\tuv.x = abs(uv.x + .1);\n    uv.y += (1.-m.y) * .5;\n    vec4 main = vec4(vec3(1.), INNER_S(.12, distance(vec2(.33, .4), uv)));\n\tm = m*2.-1.;\n    vec2 eyeCenter = vec2(.33, .4);\n    eyeCenter += normalize(m - vec2(eyeCenter.x*sx, eyeCenter.y)) * vec2(sx, 1.) * .06;\n    eyeCenter.y = max(eyeCenter.y, .4);\n    vec4 pupil = vec4(GREY.rgb, INNER_S(.06, distance(eyeCenter, uv)));\n    pupil.a *= OUTER_S(.025, distance(eyeCenter + normalize(vec2(-.5*sx, .5)) * .065, uv));\n\t\n    main = mix(main, pupil, pupil.a);\n    return main * vec4(vec3(1.), step(0., uv.y - .4));\n}\n\nvec4 bg(vec2 uv, float m){\n    uv *= vec2(.5, 2.);\n\treturn GREY * (.6 + .4 * smoothstep(.1 + .15*m, .3+A, distance(uv, vec2(0., -1.65))));\n}\n\nvec4 makeBall(vec2 uv){\n\tvec2 m = iMouse.xy/iResolution.xy;\n    vec4 bg = bg(uv, 1.-m.y);\n    uv.y += .1 + (-.2*m.y);\n    vec4 eyes = eyes(uv, m);\n    vec4 mouth = mouth(uv, 1. - m.y);\n    vec4 shadows = shadows(uv, 1. - m.y);\n    vec4 headClr = mix(BLUE, eyes, eyes.a);\n    headClr = mix(headClr, mouth, mouth.a);\n    headClr = mix(headClr, shadows, shadows.a);\n    \n    return mix(bg, headClr, INNER_S(.75, length(uv)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    fragColor = makeBall(uv);\n}","name":"Image","description":"","type":"image"}]}