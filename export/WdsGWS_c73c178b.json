{"ver":"0.1","info":{"id":"WdsGWS","date":"1547673578","viewed":304,"name":"Gigantic Perfect Maze","username":"slerpy","description":"A huge maze, that does not contain any loops, meaning that, no matter where in the maze you place two points, there is only one path to get from one to the other (aka. a perfect maze)\n\nwhite: paths, black: walls\n\nExplore with your mouse!","likes":26,"published":1,"flags":48,"usePreview":0,"tags":["2d","experimental","procedual","generator","maze","perfect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = vec2(fragCoord - .5*iResolution.xy) / 5.;\n    u += iMouse.z > .5 ? iMouse.xy : .5 * iResolution.xy;\n    \n    vec2 v = 2.*(u - round(u)), av = abs(v);\n    \n    vec4 c = texelFetch(iChannel0, ivec2(round(u)), 0);\n    vec4 n = texelFetch(iChannel0, ivec2(round(u+v/2.)), 0);\n    \n    \n    fragColor = vec4(0);\n    \n    if(c.b == 0.)\n    {\n        fragColor = vec4(.3);\n        return;\n    }\n    \n    if(max(av.x, av.y) < 0.5 || round(v) == c.xy || round(v) == -n.xy)\n    {\n        fragColor = vec4(1);\n        return;\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0);\n    ivec2 u = ivec2(fragCoord);\n    ivec2 R = ivec2(iResolution);\n    \n    if(iFrame > 0)fragColor = texelFetch(iChannel0, u, 0);\n    \n    if(u == R/2)fragColor = vec4(0,0,1,0);\n    \n    if(fragColor.b == 1.0)return;\n    \n    uvec2 raw = uvec2(u + R);\n    uint seed = raw.x * raw.y, x = seed;\n    while(x > 4u)x = x>>2u, seed ^= x;\n    \n    uint mask = 1u << 6u;\n    if(((seed+uint(iFrame)) & mask) != 0u)return;\n    \n    for(uint i=0u; i<4u; i++)\n    {\n        uint dir = (seed ^ i) & 3u;\n        \n        ivec2 off = ivec2(0);\n        off[dir&1u] = (dir>>1u) == 0u ? -1 : 1;\n        \n        float tex = texelFetch(iChannel0, u+off, 0).b;\n        \n        if(tex != 0.0)\n        {\n            fragColor = vec4(off,1,0);\n            return;\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}