{"ver":"0.1","info":{"id":"tsGfRz","date":"1606407177","viewed":306,"name":"Recording your LCD screen","username":"PelicanPolice","description":"I have attempted to create the effect when you video record a screen. Using scan lines, overexposure, vignetting, chromatic aberration, and bloom.\n\nFree for any use commercial or otherwise. Leave a comment if you use it!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blur","screen","screen","pixel","distort","distort","tv","bloom","chromatic","pixels","record"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//scan lines tv effect Photo of screen\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Convert pixel pos 0-1280+ to (0-1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\t// Read the red pixels a little bit too far to the right to create distortion\n    float colR = texture(iChannel0,vec2(uv.x+0.004,uv.y)).r;\n    float colG = texture(iChannel0,uv).g;\n    float colB = texture(iChannel0,uv).b;\n    vec3 col = vec3(colR,colG,colB); // Rebuild the colour with the effect\n    \n    // Draw scan lines (made some better ones)\n    //float spacing = 3.0; // Space between each line\n    //float height = 1.0; // Height of each scan line\n    //col *= 1.0-(max(spacing,mod(fragCoord.y,(spacing+height)))-spacing);\n    \n\n    // Bloom\n    float samples = 3.0; // (doubled)\n    for (float i = -samples; i < samples; i++) {\n        for (float j = -samples; j < samples; j++) {\n            col += texture(iChannel0,vec2(uv.x+i*0.01,uv.y+j*0.01)).rgb*0.008;\n        }\n    }\n    \n    // Blur\n    float amount = uv.x*2.0; // (doubled)\n    for (float i = -amount; i < amount; i++) {\n        for (float j = -amount; j < amount; j++) {\n            col += texture(iChannel0,vec2(uv.x+i*0.01,uv.y+j*0.01)).rgb*0.008;\n        }\n    }\n    \n    // Overexpose the image\n    col += max(col-0.7,0.0)*1.4;\n    \n    // Vignette (kinda)\n    float offset = 0.3; // Sinewave offset (adjust x/y pos of center)\n    float intensity = 0.4; // Size of gradient (smaller = more spread)\n    col *= vec3(sin((uv.x*intensity+offset)*3.14)*sin(uv.y*intensity+offset*3.14));\n    \n    // Those weird lines\n    col -= vec3(sin(((uv.x*3.0+12.0+sin(iTime*0.09)+sin(iTime*0.03)*3.0)*uv.y*30.0)*3.14))*0.5;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}