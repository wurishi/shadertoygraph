{"ver":"0.1","info":{"id":"MsVcDm","date":"1522337063","viewed":500,"name":"repeating sound sensitive cube","username":"Nitato_","description":"cube visualiser ","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","cube","visualiser"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float audioLevel;\n\nfloat sdBox( vec3 p, vec3 b ) {\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\nmat3 rotMatrixFinal(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    float a = 1.0 - c;\n    float a2 = a*a;\n    float c2 = c*c;\n    float s2 = s*s;\n   return mat3(c2*(a+c), -s*(a2+2.*c*a+c2), -s*(c*a + c2),\n               -s2*a+s*c2-s2*c, c2*a+c2*c, -s*c*a - s*c2 - s2*c,\n               s*c*a+s*c2+s2*c, s*c*a+s*c2, c2*a+c2*c-s2*s);\n}\nvec3 opRep( vec3 p, vec3 c ) {\n    vec3 q = mod(p,c)-0.5*c;\n    return q;\n}\nfloat map (vec3 p) {\n    mat3 rot = rotMatrixFinal(iTime);\n    vec3 p2 = opRep(p*rot, vec3(.5));\n    float d1 = sdBox(p2, vec3(.7,.7,.7)*(audioLevel*0.09+0.1));\n    return d1;\n}\nvec2 trace (vec3 o, vec3 r) {\n\tfloat t = 0.;\n    float i;\n    float precis = .01;\n    for (i = 0.; i < 14.; ++i) {\n    \tvec3 p = o + r * t;\n        float d = map(p);\n        if (d<precis) break;\n        t += d;\n    }\n    return vec2(t, i);    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    audioLevel = texture(iChannel0, vec2(.1,.25)).x;\n    vec2 uv = (2.*fragCoord-iResolution.xy )/iResolution.y;\n\tvec4 m = vec4(2.*iMouse - iResolution.xyxy ) /iResolution.y;\n\n    vec3 r = normalize(vec3(uv, 1.));\n    vec3 o = vec3(0.0, 0.0, -2.0);\n    \n    vec3 col = vec3(0.2,0.3,0.5*cos(iTime)+0.5)*(0.5*audioLevel);\n\tvec3 col1 = vec3(0.4,0.4,0.5*sin(iTime)+.5);\n    \n    vec2 t = trace(o, r);\n   \n    vec3 finalC = t.x>100. ? col : col1*t.x;\n    \n    fragColor = vec4(finalC,1.0);\n}","name":"Image","description":"","type":"image"}]}