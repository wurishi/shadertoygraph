{"ver":"0.1","info":{"id":"lfsSWr","date":"1705165420","viewed":73,"name":"Simple Sphere with moving light","username":"MonadoMaster0","description":"My first attempt to create a simple sphere with lighting moving around\n\nReferences used:\nhttps://www.youtube.com/watch?v=HFPlKQGChpE\nhttps://www.youtube.com/watch?v=OCZTVpfMSys\nhttps://www.youtube.com/watch?v=dKA5ZVALOhs&t=949s","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","lighting","sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI atan(1.0)*4.0\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ) {\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    \n    //camera setup\n    vec3 screen = vec3(uv.x,uv.y, 0.0);\n    vec3 ro = vec3(0.0,0.0,-2.0);\n    vec3 rd = normalize(screen-ro);\n    \n    //sphere\n    vec3 so = vec3(0.0,0.0,4.0);\n    float r = 1.0;\n    \n    \n    float t = dot(so-ro,rd);\n    vec3 h = ro+rd*t;\n    float y = length(h-so);\n    \n    //lighting\n    vec3 lo = vec3(25.0*sin(iTime),50.0*cos(iTime),10.0);\n    float intensity = sqrt(length(lo-so))/2.0;\n    float light = dot(normalize(h+lo)*intensity,normalize(h));\n    \n    if (y<r) {\n        float x = sqrt(r*r-y*y);\n        float c = x/(r)*light;\n        \n        col += c;\n        \n        vec3 fin = pal(c,\n        vec3(0.600, -1.642, -3.142),\n        vec3(1.768, 3.138, 0.500),\n        vec3(0.198, 0.408, 1.000),\n        vec3(0.708, -1.202, 0.667));\n        //col += fin;\n    } else {\n        col += vec3(0,0.6,0.5);\n        }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}