{"ver":"0.1","info":{"id":"WsSXzR","date":"1552617682","viewed":227,"name":"2D Triangle Rasterizer","username":"scratch13764","description":"A tool I made which rasterizes a 2D triangle and weights each point to find the position of the point on the triangle.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["rasterizer","triangle","barycentric","blend","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2D Triangle Rasterizer\n\nstruct tri\n{\n    vec3 s; //Side weights (1 - Distance to the opposite side)\n    vec3 p; //Point weights (Distance to the opposite side)\n    bool i; //Intersection\n};\n\ntri triRaster(vec2 a, vec2 b, vec2 c, vec2 p)\n{\n    vec2 r = vec2(-1, 1);\n    vec2 ab = normalize(a-b).yx*r;\n    vec2 bc = normalize(b-c).yx*r;\n    vec2 ca = normalize(c-a).yx*r;\n    vec3 d = -vec3(dot(p-a, ab), dot(p-b, bc), dot(p-c, ca)) /\n             vec3(dot(a-c, ab), dot(b-a, bc), dot(c-b, ca));\n    return tri(1.-d, d, min(min(d.x, d.y), d.z) > .0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y*3.;\n    \n    vec2 a = vec2(sin(iTime*.8)*.75, sin(iTime*.50)*.72);\n    vec2 b = vec2(sin(iTime*.7)*.88, sin(iTime*.5)*.9);\n    vec2 c = vec2(sin(iTime*.9)*.85, sin(iTime*.75)*.70);\n    a = mix(a, vec2(0.,.8), .8);\n    b = mix(b, vec2(-.8,-.8), .8);\n    c = mix(c, vec2(.8,-.8), .8);\n\n    tri d = triRaster(a, b, c, uv);\n    \n    vec2 col = vec2(1, 0);\n    fragColor = col.xyyx*d.p.x + \n                col.yxyx*d.p.y + \n                col.yyxx*d.p.z;\n    if (max(max(d.s.x, d.s.y), d.s.z) >= .95) fragColor *= .75; //Dark barrier\n    if (!d.i) fragColor = texture(iChannel0, uv/100.+iTime/150.)*.25; //Background\n}","name":"Image","description":"","type":"image"}]}