{"ver":"0.1","info":{"id":"NstGW8","date":"1629689998","viewed":97,"name":" Psychedelic Cuts","username":"timeisbeautifulhere","description":"Accidentally made a cool effect. You can reduce the strobe effect by lowering RESET_CONST","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic","flashing","trippy","strobe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define X_PIXELLATE_CONST 35.0\n#define Y_PIXELLATE_CONST 5.0\n#define Y_WIGGLE_CONST 300.0\n#define RESET_CONST 5.0\n\nvec3 YELLOW = vec3(1.0/3.0, 0.847/3.0, 0.0);\nvec3 GREEN = vec3(0.0,1.0,0.0);\nvec3 PURPLE = vec3(1.0/1.0, 0.0, 1.0/1.0);\nvec3 RED = vec3(1.0,0.0,0.0);\nvec3 BLUE = vec3(0.0,0.0,1.0);\n\nvec2 pixellate(vec2 uv){\n    vec2 p_uv = uv * vec2(X_PIXELLATE_CONST, Y_PIXELLATE_CONST);\n    p_uv = floor(p_uv);\n    return p_uv/vec2(X_PIXELLATE_CONST, Y_PIXELLATE_CONST);\n}\n\n\nfloat get_y_start(vec2 uv){\n    float offset = sin(abs(uv.x*14.0 + 10153.76));\n    //offset += sin(iTime*0.2);\n    \n    return offset;\n}\n\nvec3 y_rgb(vec2 uv, vec3 x_rgb_val){\n    \n    float offset = get_y_start(uv);\n    float d = abs(uv.y - offset);\n    \n    vec3 col = mix(\n        YELLOW, x_rgb_val, abs(d)\n    );\n    \n    col = mix(PURPLE, col, 1.0-abs(d));\n    \n    return col;\n        \n    //return sin(1.0-d) * x_rgb_val;\n}\n\nvec3 x_rgb(vec2 uv){\n    //return 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec3 col = mix(\n        PURPLE, GREEN,\n        \n        (cos(1.0*iTime + uv.x) + 1.0)/2.0\n    );\n    \n    col*= vec3(1.521, 67.341, 15.42315);\n    col = sqrt(col);\n    \n    return fract(col*RESET_CONST);\n}\n\nvec2 scroll_x(vec2 uv){\n    return vec2(fract(uv.x + iTime*0.01), uv.y);\n}\n\nvec2 wiggle_entire_y(vec2 uv){\n    return vec2(uv.x, uv.y +sin(0.1*iTime));\n}\n\nvec2 wiggle_y(vec2 uv){\n    return vec2(uv.x, Y_WIGGLE_CONST*fract(uv.y + Y_PIXELLATE_CONST * sin(iTime+uv.x)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = scroll_x(uv);\n    uv = wiggle_entire_y(uv);\n    uv = wiggle_y(uv);\n    uv = pixellate(uv);\n\n    // Time varying pixel color\n    vec3 col = x_rgb(uv);\n    col = y_rgb(uv, col);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}