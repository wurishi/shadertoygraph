{"ver":"0.1","info":{"id":"WlfBWf","date":"1598172608","viewed":84,"name":"infinite eggs","username":"Deadtotem","description":"Practice code","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["infinite","eggs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define fogInt 0.009  //Fog / Distance Int\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\n\nfloat eggs(vec3 p) {\n\tfloat e = cos(p.y) * .825;\n    float o = (sin(p.x) - sin(p.y)) * sin(p.z) - e * .5 + .5;\n\treturn o;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv  = ( fragCoord.xy / iResolution.xy );\n\tuv.y *= iResolution.x / iResolution.y ;\n\tvec3 norm = normalize(vec3(uv, .750));\n    float a = atan(norm.y, norm.y);\n    norm.xy *=Rot(a * 5.5 + iTime * .05);\n\tvec3 pos = vec3(2., 2., iTime * 1.75);\n\tfloat o = 0.0;\n\n    for(int i = 0 ; i < 250; i++) {\n\t\tfloat outEggs = (eggs(pos + norm * o) * .5 + .5);\n\t\tif(outEggs < .1) break;\n\t\to += outEggs ;\n\t}\n\n\tfragColor = vec4(vec3(max(0.,eggs(pos+norm*o))+o*fogInt)+norm* (sin(iTime*.55)*.35), .05);\n\n}\n","name":"Image","description":"","type":"image"}]}