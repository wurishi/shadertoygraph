{"ver":"0.1","info":{"id":"wscGR7","date":"1568059992","viewed":90,"name":"Julia Monsters","username":"96logda","description":"Julia fractal monsters living inside a julia fractal.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","monster","frog"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Copyright (c) 2019-09-09 - 2019-09-10 by Angelo Logahd\n//Portfolio: https://angelologahd.wixsite.com/portfolio\n\nconst vec2  juliaC = vec2(0.4, 0.3);\nconst float juliaZoom = 0.5;\n\nconst int maxIterations = 8;\n\n#define TYPE_1\t0\n#define TYPE_2\t1\n#define TYPE_3  2\n\n#define SHADER_TYPE TYPE_2\n\nvec2 complexZ(const in vec2 z)\n{\n    return mat2(z, -z.y, z.x) * z;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy - iResolution.xy * 0.5;\n\tuv *= 2.0 / min(iResolution.x, iResolution.y);\n    \n    vec3 col = texture(iChannel2, uv + vec2(1.2, 0.4)).rgb * vec3(0.1, 0.6, 0.5);\n    col = mix(col, vec3(0.0, 0.0, 1.0), 0.5);\n    vec2 z = uv * juliaZoom;\n    int count = 0;\n\tfor (; count < maxIterations; ++count) \n    {\n \t\tz = complexZ(z) + juliaC;\n        z = complexZ(z) + juliaC;\n        z = complexZ(z) + juliaC;\n        z = complexZ(z) + juliaC;\n        \n        z = complexZ(z) - juliaC;\n        z = complexZ(z) - juliaC;\n        z = complexZ(z) - juliaC;\n        z = complexZ(z) - juliaC;\n        \n        #if SHADER_TYPE == TYPE_1\n        if (dot(z, z) > 4.0)\n        {\n            break;\n \t\t} \n        #endif\n        \n        #if SHADER_TYPE < TYPE_3\n        col = texture(iChannel1, uv).rgb;  \n        #else\n        col = texture(iChannel3, uv).rgb;  \n        #endif\n        float d = abs(dot(z, vec2(0.5)));\n        col -= step(d, 1.0);  \n        col = mix(col, vec3(0.4, 0.4, 0.8), 0.7);\n        \n        #if SHADER_TYPE == TYPE_2 || SHADER_TYPE == TYPE_3\n        if (dot(z, z) > 4.0)\n        {\n            break;\n \t\t} \n        #endif\n    }\n    \n    vec2 texUV = vec2(float(count));  \n    texUV /= 10.0;\n    \n    #if SHADER_TYPE < TYPE_3\n    fragColor.rgb = texture(iChannel0, texUV).rgb - col;\n    #else\n    fragColor.rgb = texture(iChannel2, texUV).rgb - col;\n    #endif\n    fragColor.rgb = pow(fragColor.rgb, vec3(0.4545));\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}