{"ver":"0.1","info":{"id":"4dKSDc","date":"1467123655","viewed":282,"name":"Weeeeeee","username":"andrewmac","description":"spinning square.. spinning","likes":11,"published":1,"flags":32,"usePreview":0,"tags":["spinningcolors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec3 rgb = texture(iChannel0, uv).xyz;\n\tfragColor = vec4(rgb, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define pi  3.14159\n#define tau 6.28318\n#define t iTime\n\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define p0 0.5, 0.5, 0.5,  0.5, 0.5, 0.5,  1.0, 1.0, 1.0,  0.0, 0.33, 0.67\t\n#define p1 0.5, 0.5, 0.5,  0.5, 0.5, 0.5,  1.0, 1.0, 1.0,  0.0, 0.10, 0.20\n#define p2 0.5, 0.5, 0.5,  0.5, 0.5, 0.5,  1.0, 1.0, 1.0,  0.30, 0.20, 0.20\n#define p3 0.5, 0.5, 0.5,  0.5, 0.5, 0.5,  1.0, 1.0, 0.5,  0.80, 0.90, 0.30\n#define p4 0.5, 0.5, 0.5,  0.5, 0.5, 0.5,  1.0, 0.7, 0.4,  0.00, 0.15, 0.20\n#define p5 0.5, 0.5, 0.5,  0.5, 0.5, 0.5,  2.0, 1.0, 0.0,  0.50, 0.20, 0.25\n#define p6 0.8, 0.5, 0.4,  0.2, 0.4, 0.2,  2.0, 1.0, 1.0,  0.00, 0.25, 0.25\n    \n// source: https://iquilezles.org/articles/palettes\n// cosine based palette, 4 vec3 params\nvec3 palette( in float t, in float a0, in float a1, in float a2, in float b0, in float b1, in float b2,\n              in float c0, in float c1, in float c2,in float d0, in float d1, in float d2)\n{\n    return vec3(a0,a1,a2) + vec3(b0,b1,b2)*cos( tau*(vec3(c0,c1,c2)*t+vec3(d0,d1,d2)) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv0 = (fragCoord.xy / iResolution.xy) + vec2(cos(t) * 0.05, sin(t) * 0.05);\n    vec3 rgb0 = texture(iChannel0, uv0).xyz;\n    \n\tvec2 uv = -1. + 2. * uv0;\n    uv.x *= iResolution.x/iResolution.y;\n\n    float t0 = t + 0.85 * sin(t * 1.5) * 5.0;\n    uv = uv * rot(t0);\n    \n    vec2 p = abs(uv);\n    float d = max(p.x, p.y); + length(max(p,0.));\n    \n    d = smoothstep(0.45, 0.46, d) - smoothstep(0.52,0.53,d);\n    \n    vec3 c = palette(t0 * 100.0, p0);   \n    vec3 rgb = 0.9 * rgb0 +  d * c;\n    \n\tfragColor = vec4(rgb, 1.);\n}","name":"Buf A","description":"","type":"buffer"}]}