{"ver":"0.1","info":{"id":"7sySzd","date":"1635136898","viewed":48,"name":"Polar HSV_havocado","username":"havocado","description":"Polar HSV (with rotation)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(vec3 hsv) {\n    float hue = mod(hsv.x, 360.);\n    float C = hsv.y * hsv.z;\n    float X = C * (1. - abs(mod((hue/60.), 2.)-1.));\n    \n    vec3 result_rgb;\n    if (hue < 60.) result_rgb = vec3(C, X, 0.);\n    else if (hue < 120.) result_rgb = vec3(X, C, 0.);\n    else if (hue < 180.) result_rgb = vec3(0., C, X);\n    else if (hue < 240.) result_rgb = vec3(0., X, C);\n    else if (hue < 300.) result_rgb = vec3(X, 0., C);\n    else result_rgb = vec3(C, 0., X);\n    \n    float m = hsv.z - C;\n    result_rgb = (result_rgb+m);\n    return result_rgb;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Relative position to center\n    vec2 to_center = vec2(uv.x - 0.5, uv.y - 0.5);\n    \n    // Calculating the polar coordinates\n    vec2 polar_coord = vec2(length(to_center), atan(to_center.y,to_center.x));\n\n    // Coordinate to HSV\n    vec3 hsv = vec3((polar_coord.y/6.28+0.5)*360.+180.+iTime*20., length(to_center)*2.5, 1.0);\n    \n    // HSV to RGB\n    vec3 rgb = hsv2rgb(hsv);\n\n    // Output to screen\n    fragColor = vec4(rgb, 1.);\n}","name":"Image","description":"","type":"image"}]}