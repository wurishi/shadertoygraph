{"ver":"0.1","info":{"id":"XdKfWK","date":"1530543000","viewed":138,"name":"rgen2 (heavy)","username":"xinux","description":"randomly generated 3d graph","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["random","fixedstep","generatedcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 pR(vec2 p, float a)\n{\np = ((p * cos(a)) + (vec2(p.y, (-p.x)) * sin(a)));\nreturn p;\n\n}\n\nvoid pRV(inout vec2 p, float a)\n{\np = ((p * cos(a)) + (vec2(p.y, (-p.x)) * sin(a)));\n\n}\n\nfloat rand1d(float n)\n{\nreturn fract((sin(n) * 43758.55));\n\n}\n\nfloat noise(vec2 uv, float intensity)\n{\nreturn min(1.0, ((1.0 / (rand1d(((uv.x * 20.0) + 1.0)) + rand1d((uv.y * 40.0)))) * intensity));\n\n}\n\nvec3 scene(float z)\n{\nvec2 uv = ((gl_FragCoord.xy - (iResolution.xy * 0.5)) / iResolution.yy);\nvec3 p = vec3(uv, z);\npRV(p.yz, (iTime * 0.2));\npRV(p.zx, (iTime * -0.4));\np = (p / smoothstep((iTime + 1.0), 0.0, 1.0));\nvec3 col;\nfloat bgl = max((tan((pR(uv, iTime).y - 3.1416)) / 2.0), 3.1416);\nbgl = clamp(bgl, 0.1, 0.15);\nfloat l = clamp(min((round(((tan(sin((pR(vec2((tan(tan(length(vec2((length(vec2((-pR(uv, tan(pR(uv, length(vec2(sin(((tan(cos((((min((tan(cos(length(vec2(pR(uv, cos(((cos(length(vec2(min(((cos((pR(vec2((pR(uv, (tan(tan(max(pR(vec2((smoothstep(smoothstep(tan((-(-(tan(smoothstep((-(tan(pR(uv, pR(vec2(cos(pR(vec2((tan(pR(uv, iTime).y) / 2.0), iTime), iTime).x), (tan(iTime) / 2.0)), iTime).x).y) / 2.0)), 0.97, 1.0)) / 2.0)))), 0.97, 1.0), 0.97, 1.0) - (p.x * 10.0)), sin((iTime *1.57))), iTime).x, pR(uv, iTime).y))) / 2.0)).y + pR(uv, iTime).y), 3.1416), iTime).x * length(p))) / (p.y * 10.0)) * (p.x * 10.0)), pR(uv, iTime).y), (p.x * 10.0)))) - pR(p.zx, iTime).y) - iTime))).x, iTime)))) / 2.0), pR(p.zx, iTime).x) * sin((iTime * 1.57))) / length(p)) * (tan(iTime) / 2.0)))) / 2.0) / pR(uv, iTime).y)), (p.y * 10.0)))).x)).x), pR(p.zx,iTime).x)) + (p.x * 10.0)), (p.z * 10.0))))) / 2.0), 3.1416), iTime).y * (p.y * 10.0)))) / 2.0) * 10.0)) / 10.0), 3.1416), 0.0, 0.95);\ncol = ((normalize(vec3(1.013968, 1.360327, 1.795099)).zxy * clamp(((1.0 / length((p - clamp(p, -0.2, 0.2)))) * 0.002), 0.0, 1.0)) * l);\nreturn col;\n\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\nvec2 uv = ((gl_FragCoord.xy - (iResolution.xy * 0.5)) / iResolution.yy);\nvec3 col = vec3(0.1);\nfor(float index = -0.5;(index < 0.5);index = (index + 0.004))\n{\ncol = (col + (scene(index) * 0.025));\n\n}\n\ncol = clamp(col, 0.0, 1.0);\ncol = (col * smoothstep(0.1, 0.3, iTime));\ncol = (col - (smoothstep(0.55, 1.3, abs(uv.x)) * 0.2));\ncol = (col - (smoothstep(0.17, 0.7, abs(uv.y)) * 0.2));\ncol = max(col, vec3(0.03));\ncol = (col + (sin((iTime * 0.4)) * 0.02));\ncol = (col + (noise(pR(uv, iTime), 0.5) * 0.04));\ncol = (col - step(0.35, abs(uv.y)));\nfragColor = vec4(col, 1.0);\n\n}\n\n","name":"Image","description":"","type":"image"}]}