{"ver":"0.1","info":{"id":"3scSzB","date":"1572240381","viewed":258,"name":"Banach-Tarski Paradox","username":"rmmcal","description":"My understanding about: Banach-Tarski Paradox...\nInspiration: [url]https://www.shadertoy.com/view/wdK3WG[/url]\n- Does density really matter?\n- Do neutrinos have mass?\n===> I'm just a curious systems analyst in this infinite universe...","likes":9,"published":1,"flags":64,"usePreview":0,"tags":["paradox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4llGWf","filepath":"https://soundcloud.com/ahmed-gado-1/sad-piano-vadim-kiselev","previewfilepath":"https://soundcloud.com/ahmed-gado-1/sad-piano-vadim-kiselev","type":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/////////////////////////////////////////////////////////////\n/////      .......Banach-Tarski Paradox.......     ////////// \n/////      ............ \"Paradox\" ............     ////////// \n/////////////////////////////////////////////////////////////\n// Brasil/Amazonas/Manaus                                       \n// Banach-Tarski Paradox\n// Created by Rodrigo Cal (twitter: @rmmcal) - 2019/10\n// - https://www.shadertoy.com/view/3scSzB\n/////////////////////////////////////////////////////////////\n// -----------------------------------------------------------\n//  \"Miracle\" of multiplication\n//\n//   Exists between [0..1] infinite divisions, how can the infinity \n//   fit into finite? \n//\n//      ... @rmmcal 2019/10\n//\n// Inspiration:\n//  => Banach-Tarski paradox\n//  => [Mathologer] https://www.youtube.com/watch?v=ZUHWNfqzPJ8\n//  => [Vsauce]     https://www.youtube.com/watch?v=s86-Z-CbaHA \n//\n// -----------------------------------------------------------\n/////////////////////////////////////////////////////////////\n\nconst float PI =3.14159265359;\nconst float PI2 = 2.*PI;\n \nfloat stepin(float v, float mn, float mx){\n    return v > mn && v < mx ? 1. : 0.;\n}\n\nvec3 hsv(float h, float s, float v){\n    vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));\n    return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);\n}\n\nvoid drawCirclePart(float i, inout vec3 c, vec2 p, float offsetJump, float jump, float dis1, float len){\n{\n    vec2 ps = p;\n    float d = 1.;\n    p = ps; \n    float a = (i*PI2)/len+(1./len)*PI;\n    if (mod(i+offsetJump, jump) == 0.) {\n        p -= vec2(cos(a),sin(a))*dis1;\n        d = min(d, .1-length(p));\n        float fix =.0028; // :) Workaround otimization: \"division infinite\" of the ideia... fix \"div/precision\" limited...\n        d = min(d, smoothstep(0.5, .51, stepin(mod(atan(p.y,p.x)/PI2,1.), i/len-fix, (i+1.)/len+fix)));\n        c = mix(c, hsv(i/len, 1.,1.)+vec3(0.), smoothstep(0., .005, d ) );\n    }\n}\n}\nvoid drawCircle(inout vec3 c, vec2 p, float offsetJump, float jump, float dis1, float len){\n    vec2 ps = p;\n    \n    float j = floor(floor(mod(((atan(p.y, p.x))/PI2 ),1.)*(len))); \t\t//  approximate angle index \n    //for (float i = j-1.; i <= j+1.; i++) \t\t\t\t\t\t\t\t//  for only with nearby indices\n    //for (float i = 0.0; i <= len; i++)   \t\t\t\t\t\t\t\t// calculate all indeces\n    \n    // removing for....\n    drawCirclePart(j-1., c, p, offsetJump, jump, dis1, len);\n   \tdrawCirclePart(j, c, p, offsetJump, jump, dis1, len);\n   \tdrawCirclePart(j+1., c, p, offsetJump, jump, dis1, len);\n   \t\n}\n\nfloat timein(float t, float ts, float te){\n    return clamp(t-ts, 0., 1.)*(1.-clamp(t-te, 0., 1.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 aspectRatio = vec2(1., iResolution.y/iResolution.x);\n\tvec2 uv = fragCoord/iResolution.xy; \n    vec2 p = (uv-.5)*aspectRatio;\n    \n    float ti = fract((iTime+50.)/60.)*60.;\n    ti /= 10.;\n    float t = fract(ti);\n    float div = min(120., pow(floor(ti+1./10.),3.));\n    \n    float t1 = pow(timein(t*10., 0., 3.),3.)+pow(timein(t*10., 5., 7.),3.);\n    float t2 = timein(t*10., 2., 4.)+timein(t*10., 4., 6.);\n    \n    float len = 6.+div*2.;\n    vec3 c = vec3(1.);\n    c = mix(c, vec3(0.), (smoothstep(0., 1.0, 1.-(1.05-length(p)) )) );\n    drawCircle(c, p-vec2(0.25,0.)*t2, 0., 2., t1/4., len);\n    drawCircle(c, p+vec2(0.25,0.)*t2, 1., 2., t1/10., len);\n    c = mix(c, vec3(0.), (smoothstep(0., .005, .004-abs(.1-length(p-vec2(0.25,0.))) )) );\n  \tc = mix(c, vec3(0.), (smoothstep(0., .005, .004-abs(.1-length(p+vec2(0.25,0.))) )) );\n    c = mix(c, vec3(0.), (smoothstep(0., .005, .004-abs(.1-length(p)) )) );\n \n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}