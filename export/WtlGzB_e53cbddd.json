{"ver":"0.1","info":{"id":"WtlGzB","date":"1557188946","viewed":290,"name":"Webcam Funk Stuff Up Filter","username":"chaz303","description":"An experiental FSU shader.","likes":6,"published":1,"flags":2,"usePreview":0,"tags":["webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define d_speed 0.0\n#define d_freq 0.0\n\n#define d_sin_amp 0.0\n#define d_tri_amp 0.0\n#define d_saw_amp 0.0\n#define d_negsaw_amp 0.0\n#define d_pwm_amp 0.0\n#define d_pw_amp 0.0\n\nfloat sinOsc(float uv, float freq, float speed, float amp){\n     return sin(uv*freq*6.28-iTime*speed)*amp;   \n}\nfloat triOsc(float uv, float freq, float speed, float amp){\n     return (asin(sin(uv*freq*6.28-iTime*speed)))*amp;   \n}\nfloat sawOsc(float uv, float freq, float speed, float amp){\n     return (fract(uv*-freq+iTime*speed/2.0)*2.0-1.0)*amp;   \n}\nfloat negSawOsc(float uv, float freq, float speed, float amp){\n     return (fract(uv*freq-iTime*speed/2.0)*2.0-1.0)*amp;   \n}\nfloat pwOsc(float uv, float pwm, float freq, float speed, float amp){\n     return ((step(pwm*2.0-1.0,sin(uv*freq*6.28-iTime*speed))*2.0-1.0))*amp;\n}\nfloat sqrOsc(float uv, float freq, float speed, float amp){\n     return ((step(0.0,sin(uv*freq*6.28-iTime*speed))*2.0-1.0))*amp;\n}\nfloat osc(float uv, float freq, float speed, float sin_amp,float tri_amp, float saw_amp, float negsaw_amp, float pwm_amp, float pw_amp){\n    float result = 0.0;\n    if (sin_amp != 0.0) {\n    \tresult += sinOsc(uv,freq,speed,sin_amp);        \n    }\n    if (tri_amp != 0.0) {\n        result += triOsc(uv,freq,speed,tri_amp);        \n    }\n    if (saw_amp != 0.0) {\n    \tresult += sawOsc(uv,freq,speed,saw_amp);        \n    }\n    if (negsaw_amp != 0.0) {\n        result += negSawOsc(uv,freq,speed,negsaw_amp);      \n    }\n    if (pw_amp != 0.0) {\n        float pwm = ((sinOsc(1.0,1.0,speed*2.0,1.0)+1.0)*0.5*pwm_amp);\n    \tresult += pwOsc(uv,pwm,freq,speed,pw_amp);\n    }\n    return result;   \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 uvStore = uv;\n    \n    float temp = osc((uv.x+uv.y*0.0)*-0.055,d_freq+1.0,d_speed+0.25,d_sin_amp+0.0,d_tri_amp+1.0,d_saw_amp+0.0,d_negsaw_amp,d_pwm_amp,d_pw_amp)*0.161;    \n    vec4 pixel = texture(iChannel0,uv);\n\n    float r_r_amp = 0.70;\n    float g_r_amp = 0.0;\n    float b_r_amp = 0.0;\n    float r_g_amp = 0.0;\n    float g_g_amp = 0.70;\n    float b_g_amp = 0.0;\n    float r_b_amp = 0.0;\n    float g_b_amp = 0.0;\n    float b_b_amp = 0.250;\n\n    r_b_amp = osc((uv.y*0.3+uv.x*1.0)*1.0,d_freq+5.0,d_speed+3.0,d_sin_amp+1.0,d_tri_amp+-.0,d_saw_amp+0.0,d_negsaw_amp,d_pwm_amp,d_pw_amp)*1.8+2.0;\n    \n    if (fract(uv.x*-30.0+iTime+uv.y*30.0)<fract(uv.x+uv.y*1.1)){\n    r_g_amp = osc((-uv.x*1.0)*1.0,d_freq+5.0,d_speed+8.25,d_sin_amp+1.0,d_tri_amp+-.0,d_saw_amp+0.0,d_negsaw_amp,d_pwm_amp,d_pw_amp)*1.8+2.0;\n    }\n        \n    float r_mix = pixel.r * r_r_amp + pixel.g * g_r_amp + pixel.b * b_r_amp;\n    float g_mix = pixel.r * r_g_amp + pixel.g * g_g_amp + pixel.b * b_g_amp;\n    float b_mix = pixel.r * r_b_amp + pixel.g * g_b_amp + pixel.b * b_b_amp;\n\n    pixel = vec4 (vec3 (r_mix, g_mix, b_mix), 1.0);\n    \n\tfragColor = pixel;\n}","name":"Image","description":"","type":"image"}]}