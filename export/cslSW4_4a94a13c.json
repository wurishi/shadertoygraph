{"ver":"0.1","info":{"id":"cslSW4","date":"1668894709","viewed":153,"name":"Local Interpolation","username":"FatalSleep","description":"Interpolates the fragment color from downscaled images using the UV local space between the downscaled pixels. Mouse over and click to see the difference.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["inteprolation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float downScale = 50.0;\nconst vec3 colors[4] = vec3[4](\n    vec3(1.0,0.0,0.0),\n    vec3(1.0,1.0,1.0),\n    vec3(0.0,1.0,0.0),\n    vec3(0.0,0.0,1.0)\n);\n\nvec3 COMPOSITE(vec3 tl, vec3 tr, vec3 bl, vec3 br, vec2 uv) {\n    return mix(mix(tl, tr, uv.y),\n        mix(bl, br, uv.y), uv.x);\n}\n\nvec3 DOWNSCALED(vec2 coord) {\n    coord = floor(coord / downScale) * downScale;\n    return COMPOSITE(colors[0], colors[2], colors[1], colors[3], coord.xy * (1.0/iResolution.xy));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 offsets[4];\n\toffsets[0] = vec2(0.0, 0.0);\n\toffsets[1] = vec2(1.0, 0.0);\n\toffsets[2] = vec2(0.0, 1.0);\n\toffsets[3] = vec2(1.0, 1.0);\n    \n    vec3 col[4];\n    col[0] = DOWNSCALED(fragCoord + (offsets[0] * downScale));\n    col[1] = DOWNSCALED(fragCoord + (offsets[1] * downScale));\n    col[2] = DOWNSCALED(fragCoord + (offsets[2] * downScale));\n    col[3] = DOWNSCALED(fragCoord + (offsets[3] * downScale));\n    \n    vec2 uvFrag = mod(fragCoord, downScale) * (1.0/downScale);\n    if (fragCoord.x <= iMouse.x) {\n        fragColor = vec4(COMPOSITE(col[0], col[2], col[1], col[3], uvFrag), 1.0);\n    } else {\n        // 4-COLOR GRADIENT:\n        //fragColor = vec4(COMPOSITE(colors[3],colors[0],colors[1],colors[2],fragCoord * (1.0/iResolution.xy)),1.0);\n        // DOWNSCALED:\n        fragColor = vec4(COMPOSITE(col[0],col[2],col[1],col[3],fragCoord * (1.0/iResolution.xy)),1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}