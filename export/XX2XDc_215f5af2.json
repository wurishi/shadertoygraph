{"ver":"0.1","info":{"id":"XX2XDc","date":"1711150239","viewed":80,"name":"casserole_magique #2","username":"casserole_magique","description":"fractal 2d art based on kishimisu tutorial : https://www.youtube.com/watch?v=f4s1h2YETNY","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","2dsdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 palette(float t)\n{\n    return vec3(0.959, 0.310, 0.736)\n    + vec3(1.050, 0.420, 0.530) * cos(vec3(0.670, 1.130, 0.627) * t +\n                              vec3(5.757, 4.920, 5.267));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 fcolor = vec3(0.);\n    \n    float time = iTime - 2. * (abs(uv.x) + abs(uv.y));\n    \n    for(int i = 0; i < 4;  i++)\n    {\n        uv = fract(1.3 * uv) - 0.5;\n\n        vec3 col;\n\n        float d = length(uv) * ((sin(1.5 * iTime) * .8 + 1.) / 1. + 1. * length(uv0));\n        d = smoothstep(1., 0., d);\n\n        col = palette(length(3. * uv0) + time * float(i));\n\n        d = sin(d * 8. + time) / 8.;\n        d = abs(d);\n\n        d = 0.02 / d;\n        \n        d = pow(d, 2.);\n        \n        fcolor += col * d;\n    }\n    \n\n    \n    fragColor = vec4(fcolor, 1.0);\n}","name":"Image","description":"","type":"image"}]}