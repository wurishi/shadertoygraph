{"ver":"0.1","info":{"id":"4fdXzf","date":"1714260943","viewed":42,"name":"basic first shader","username":"UnchartedSystems","description":"basic first shader","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["basic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n//vec2 uv = fragCoord / iResolution.xy;\nvec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\nfloat t_div = 4.0;\nfloat t = mod(iTime, t_div) / t_div;\nfloat d = length(uv);\n\nfloat x = mod(abs(t / (1.0 - d)), 1.0);\nfloat y = mod(abs(t / d), 1.0);\nfloat z = mod(abs((1.0 - t) / d),  1.0);\n\nfloat r;\nfloat g;\nfloat b;\n\n\n\nif (d < 1.0) \n{\n    r = 0.8 * x + 0.2 * z;\n    g = 0.4 * y + 0.6*abs(0.5 - z) ;\n    b = mod(abs(x - y - z), 1.0);\n} else {\n    r = x;\n    g = y;\n    b = z;\n}\n\n\nfragColor = vec4(r,g,b,0.0);\n\n}\n","name":"Image","description":"","type":"image"}]}