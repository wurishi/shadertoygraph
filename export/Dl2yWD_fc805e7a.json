{"ver":"0.1","info":{"id":"Dl2yWD","date":"1691786897","viewed":42,"name":"edoandcode_07","username":"edoandcode","description":"playing with sound and shaders","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sound","wave","music"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    float dist = length(uv - vec2(0.5));\n\n    vec3 music = texture(iChannel0, vec2(uv.x * 0.001, 0.0)).rgb ;\n    \n    uv = mix(uv, vec2(0.5), dist * music.r) ;\n\n\n    \n    float t = sin(uv.x  * 100.0 + music.r * 5.0) * music.r * 0.2 ;\n\n    float repeat = fract(uv.y * 10.0);\n    float a = (smoothstep(t + 0.3, t + 0.7, repeat) - smoothstep(t + 0.2, t + 0.8, repeat)) * 10.0 ;\n    \n    vec3 red = vec3(255.0/255.0, 0.0 / 255.0, 0.0 / 255.0);\n    vec3 yellow = vec3(255.0/255.0, 255.0 / 255.0, 0.0 / 255.0);\n    vec3 blue = vec3(0.0/255.0, 0.0 / 255.0, 255.0 / 255.0);\n    vec3 white = vec3(255.0/255.0, 255.0 / 255.0, 255.0 / 255.0);\n\n    // Time varying pixel color\n    vec3 col = a * vec3(a , music.r, dist);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}