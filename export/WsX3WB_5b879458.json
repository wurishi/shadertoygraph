{"ver":"0.1","info":{"id":"WsX3WB","date":"1547294924","viewed":144,"name":"impossibleobject l shaped blocks","username":"ukeyshima","description":"impossibleobject l shaped blocks","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\nvec3 rotate(vec3 p, float angle, vec3 axis){\n    vec3 a = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float r = 1.0 - c;\n    mat3 m = mat3(\n        a.x * a.x * r + c,\n        a.y * a.x * r + a.z * s,\n        a.z * a.x * r - a.y * s,\n        a.x * a.y * r - a.z * s,\n        a.y * a.y * r + c,\n        a.z * a.y * r + a.x * s,\n        a.x * a.z * r + a.y * s,\n        a.y * a.z * r - a.x * s,\n        a.z * a.z * r + c\n    );\n    return m * p;\n}\n\nfloat boxDistFunc(vec3 p,vec3 c,vec3 b){\n    p=p-c;\n    vec3 d=abs(p)-b;\n    return length(max(d,0.0))+min(max(d.x,max(d.y,d.z)),0.0);\n}\n\nfloat doglegDistFunc(vec3 p,vec3 c,vec3 r,float d){\n    p=p-c;\n    p=rotate(p,d,r);\n    return min(boxDistFunc(p,vec3(0.0,3.0,0.0),vec3(1.0,4.0,1.0)),boxDistFunc(p,vec3(3.0,0.0,0.0),vec3(4.0,1.0,1.0)));\n}\n\nvec3 getNormal(vec3 p,vec3 c,vec3 r,float d){\n    float delta=0.001;\n    return normalize(vec3(\n        doglegDistFunc(p+vec3(delta,0.0,0.0),c,r,d)-doglegDistFunc(p+vec3(-delta,0.0,0.0),c,r,d),\n        doglegDistFunc(p+vec3(0.0,delta,0.0),c,r,d)-doglegDistFunc(p+vec3(0.0,-delta,0.0),c,r,d),\n        doglegDistFunc(p+vec3(0.0,0.0,delta),c,r,d)-doglegDistFunc(p+vec3(0.0,0.0,-delta),c,r,d)\n        ));\n}\n\nconst vec3 lightDir=vec3(1.0,-0.7,0.2);\nconst vec3 cDir=vec3(0.0,0.0,-1.0);\nconst vec3 cPos=vec3(0.0,0.0,8.0);    \nconst vec3 cUp=vec3(0.0,1.0,0.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);            \n    const vec3 cSide=cross(cDir,cUp);\n    const float targetDepth=1.0;\n    vec3 ray=normalize(cSide*p.x+cUp*p.y+cDir*targetDepth);\n   \tfloat dist1=0.0;    \n    float dist2=0.0;\n    vec3 rPos1=cPos;\n    vec3 rPos2=cPos;\n    vec3 color1=vec3(0.0); \n    vec3 color2=vec3(0.0);\n    float rLen1=0.0;\n    float rLen2=0.0;      \n    float maxLen=20.0;\n    for(int i=0;i<50;i++){\n    vec3 rPos=rotate(rPos1,iTime,vec3(0.0,1.0,0.0));\n    float dist1=doglegDistFunc(rPos,vec3(-3.0,0.0,1.5),vec3(0.0,-1.0,1.0),PI/3.0);\n    if(dist1<0.01){            \n       vec3 normal=getNormal(rPos,vec3(-3.0,0.0,1.5),vec3(0.0,-1.0,1.0),PI/3.0);\n       color1=vec3(1.0,0.0,0.0)*vec3(clamp(dot(lightDir,normal),0.5,1.0));\n       break;\n    }\n        rLen1+=dist1;\n        rPos1=cPos+rLen1*ray;\n    }\n    for(int i=0;i<50;i++){ \n    vec3 rPos=rotate(rPos2,iTime,vec3(0.0,1.0,0.0));       \n    float dist2=doglegDistFunc(rPos,vec3(3.0,0.0,-1.5),vec3(0.0,0.5,1.0),-PI*0.8);  \n    if(dist2<0.01){           \n        vec3 normal=getNormal(rPos,vec3(3.0,0.0,-1.5),vec3(0.0,0.5,1.0),-PI*0.8);\n        color2=vec3(0.0,0.0,1.0)*vec3(clamp(dot(lightDir,normal),0.5,1.0));\n       break;\n    }\n        rLen2+=dist2;\n       rPos2=cPos+rLen2*ray;\n    }\n    fragColor=vec4(rLen2>rLen1?(rLen2>maxLen?color1:color2):(rLen1>maxLen?color2:color1),1.0);\n}","name":"Image","description":"","type":"image"}]}