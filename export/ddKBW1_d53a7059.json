{"ver":"0.1","info":{"id":"ddKBW1","date":"1698196690","viewed":39,"name":"Camera Function","username":"wizfx","description":"function for creating a 3D camera\nsourced from YT tutorial: https://www.shadertoy.com/view/4dfBRf","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","camera"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct ray \n{ \n    vec3 p, d; \n};\n\nfloat drawPoint(ray r, vec3 p)\n{ \n    return smoothstep(0.1, 0.09, length(cross(p - r.p, r.d)) / length(r.d));\n}\n\nconst vec3 boxPoints[8] = vec3[](\n    vec3(0.0, 0.0, 0.0),\n    vec3(0.0, 0.0, 1.0),\n    vec3(0.0, 1.0, 0.0),\n    vec3(0.0, 1.0, 1.0),\n    vec3(1.0, 0.0, 0.0),\n    vec3(1.0, 0.0, 1.0),\n    vec3(1.0, 1.0, 0.0),\n    vec3(1.0, 1.0, 1.0)\n);\n\nfloat getBoxP(ray r)\n{ \n    float d = 0.0;\n    float offset = -0.50;\n    d = max(d, drawPoint(r, boxPoints[0] + offset));\n    d = max(d, drawPoint(r, boxPoints[1] + offset));\n    d = max(d, drawPoint(r, boxPoints[2] + offset));\n    d = max(d, drawPoint(r, boxPoints[3] + offset));\n    d = max(d, drawPoint(r, boxPoints[4] + offset));\n    d = max(d, drawPoint(r, boxPoints[5] + offset));\n    d = max(d, drawPoint(r, boxPoints[6] + offset));\n    d = max(d, drawPoint(r, boxPoints[7] + offset));\n    return d;\n}\n\nray getCamera(vec2 uv)\n{\n    float zoom = 1.0;\n    float t = iTime * 0.75;\n    vec4 m = iMouse;\n    m = 10.0 * m / iResolution.xyxy;\n    \n    vec3 p = vec3(4.0 * sin(t - m.x), sin(t - m.y) * 4.0, -4.0 * cos(t - m.x));\n    vec3 lookAt = vec3(0.0);\n    vec3 forwardV = normalize(lookAt - p);\n    vec3 rightV = cross(vec3(0.0, 1.0, 0.0), forwardV);\n    vec3 upV = cross(forwardV, rightV);\n    vec3 centerV = p + forwardV * zoom;\n    vec3 intersectV = centerV + uv.x * rightV + uv.y * upV;\n    vec3 d = intersectV - p;\n    return ray(p, d); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = -0.5 + fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 color = uv.xyy;\n\n    ray camera = getCamera(uv);\n    float d = getBoxP(camera);\n    \n    color = mix(color, vec3(0.9412, 0.8863, 0.4118), d);\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}