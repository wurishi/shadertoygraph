{"ver":"0.1","info":{"id":"4ccBDs","date":"1733613697","viewed":38,"name":"Simple Voronoi Implementation","username":"GarlicGraphix","description":"noise","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float drawCircle(vec2 uv, vec2 center, float radius) {\n    float dist = length(uv - center);\n    return smoothstep(radius, radius - 0.01, dist);\n}\n\nvec3 hash33(vec3 p) {\n    p = fract(p * vec3(0.1031, 0.11369, 0.13787));\n    p += dot(p, p.yzx + vec3(33.33, 71.17, 111.13));\n    return fract(sin(p) * vec3(43758.5453123, 22578.1459123, 789221.123));\n}\n\nfloat hash31(vec3 p) {\n    p = fract(p * vec3(0.1031, 0.11369, 0.13787));\n    p += dot(p, p.yzx + vec3(33.33, 71.17, 111.13));\n    return fract(sin(p.x * 43758.5453123 + p.y * 22578.1459123 + p.z * 789221.123));\n}\n\n\nvec3 getPoint(vec3 t) {\n    return hash33(t);\n}\nvec3 getColour(vec3 t) {\n    return hash33(t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    \n    float tileCount = 7.;\n    \n    float zFactor = iTime*0.5;\n    \n    vec3 t = floor(vec3(uv*tileCount, zFactor));\n    vec3 tuv = fract(vec3(uv*tileCount, zFactor));\n\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    float dist = -1.;\n    int scanDist = 1;\n    for (int x = -scanDist; x <= scanDist; x++) {\n        for (int y = -scanDist; y <= scanDist; y++) {\n            for (int z = -scanDist; z <= scanDist; z++) {\n                vec3 offset = vec3(x, y, z);\n                vec3 point = getPoint(t + offset) + offset;\n                float oldDist = dist;\n                dist = 1.-length(tuv - point);\n                dist = max(dist, oldDist);\n                if (dist > oldDist) {\n                    col = getColour(t+offset);\n                }\n            }\n        }\n    }\n    \n    col = normalize(col);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}