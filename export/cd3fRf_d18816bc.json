{"ver":"0.1","info":{"id":"cd3fRf","date":"1698840181","viewed":39,"name":"Trippy circly thing","username":"Gilgamoush","description":"Hey world ! \nIt's my first contribution to the shader world.  Mainly inspired by the work of beesandbombs and Etienne Jacob.\nThere's obviously a ton of room for improvement, but I'm pretty happy with my first try. \nOf course, all comments are welcome! ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","trippish"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 Rot(float a)\n{\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nvec2 opRepLim( in vec2 p, in float s, in vec2 lima, in vec2 limb )\n{\n    return p-s*clamp(round(p/s),lima,limb);\n}\n\nvec3 palette( in float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, -0.8315, 1.0);\n    vec3 d = vec3(0.30, 0.20, 0.20);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= 1.5;\n    vec3 col = vec3(0.);\n    vec2 uv0 = uv;\n\n    uv *= Rot(mod(iTime*0.17, 3.14));\n    uv = opRepLim(uv*3., 1., vec2(-1., -1.), vec2(1., 1.));\n    float t = (sin(iTime)*0.5 + 0.5)*0.75 + 0.25; \n    float d = 1e10;\n    for(float x = -2.; x <= 2.; x+=1.)\n    {\n        for(float y = -2.; y <= 2.; y+=1.)\n        {\n            vec2 offs = vec2(x, y);\n            vec2 p = uv - offs;\n            p = abs(p*Rot(mod(iTime, 3.14)));\n            d = min(d, abs(length(p - t*vec2(0.42, 0.42)) - 0.1));\n        }\n    }\n\n    d = pow((0.08-length(uv0)*0.05)/d, 1.);\n    col = d* palette(length(uv0) * (sin(iTime*1.)*0.5+0.5));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}