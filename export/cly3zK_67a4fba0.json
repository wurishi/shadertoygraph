{"ver":"0.1","info":{"id":"cly3zK","date":"1684258922","viewed":51,"name":"Ripples of In-Finite-y","username":"tarnith","description":"Playing with a previous fork of a finite difference water shader and folding it into the feedback path through some textures\n\noriginal base: https://www.shadertoy.com/view/4sd3WB","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["procedural","simulation","water","multipass"],"hasliked":0,"parentid":"clG3zK","parentname":"Fork Distorted  tarnith 071"},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Wave propagation simulation using finite differences.\n// See (f.ex.) http://www.uio.no/studier/emner/matnat/ifi/INF2340/v05/foiler/sim04.pdf\n// for the model and equations.\n\nvoid mainImage( out vec4 C, in vec2 co )\n{\n\tvec2 uv = co.xy / R.xy;\n\tC = vec4(vec3(T(uv).rgb),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 C, in vec2 co )\n{\n    float dx = 1.0/R.x;\n    float dy = 1.0/R.y;\n    vec2 uv = co.xy / R.xy;\n\n    vec2 udu = T(uv).xy;\n    \n\t// old elevation\n    float u = udu.x;\n    // old velociy\n    float du = udu.y;\n    \n    // Finite differences\n    float ux = T(vec2(uv.x+dx, uv.y)).x;\n    float umx = T(vec2(uv.x-dx, uv.y)).x;\n    float uy = T(vec2(uv.x, uv.y+dy)).x;\n    float umy = T(vec2(uv.x, uv.y-dy)).x;\n    float feedb = texture(iChannel1, uv).r*.2e-3;\n    feedb *= sin(iTime*length(uv))*.8;\n    // new elevation\n    float nu = u + du + 0.5*(umx+ux+umy+uy-4.0*u);\n    nu *= 0.999;\n    if (iFrame == 1)\n        C = T(uv)+vec4(vec3(sin(length((uv-.5)*R.x*1e-9)))*length((uv-.5)),1.0);\n    else\n    // store elevation and velocity\n        C = vec4(nu-feedb,nu-u+feedb,0.0,0.0);\n\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T(u) texture(iChannel0,u)\n#define R iResolution","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(vec3(fract(length(uv-.5)*10.+T(uv)*1e-3)),1.0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv += texture(iChannel1,uv).r;\n    fragColor = vec4(vec3(texture(iChannel0,uv)),1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}