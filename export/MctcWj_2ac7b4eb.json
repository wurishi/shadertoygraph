{"ver":"0.1","info":{"id":"MctcWj","date":"1731193624","viewed":32,"name":"Cubeyz","username":"cothao","description":"From the art of code tutorial","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cubedots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Distline(vec3 ro, vec3 rd, vec3 p)\n{\n\n    return length(cross(p-ro, rd))/length(rd);\n\n}\n\nfloat DrawPoint(vec3 ro, vec3 rd, vec3 p)\n{\n\n    float d = Distline(ro, rd, p);\n    d = smoothstep(.06, .05, d);\n\n    return d;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5;\n    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec3 ro = vec3(3. * sin(iTime), 2., -3. * cos(iTime));\n   \n    vec3 la = vec3(.5);\n   \n    vec3 fv = normalize(la - ro);\n       \n    vec3 wu = vec3(0., 1., 0.);\n       \n    vec3 rv = cross(wu, fv);\n       \n    vec3 cu = cross(fv, rv);\n       \n    float zoom = 1.;\n       \n    vec3 c = ro + fv * zoom;\n       \n    vec3 i = c + uv.x * rv + uv.y * cu;\n       \n    vec3 rd = i - ro;\n       \n    vec3 p = vec3(0., 0., 2.);\n    \n    float d = 0.;\n            \n    d += DrawPoint(ro, rd, vec3(0., 0., 0.));\n    d += DrawPoint(ro, rd, vec3(0., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(0., 0., .5));\n    d += DrawPoint(ro, rd, vec3(0.5, 0., .0));\n    d += DrawPoint(ro, rd, vec3(0., 0.5, 0.));\n    d += DrawPoint(ro, rd, vec3(0., 0.5, 0.5));\n    d += DrawPoint(ro, rd, vec3(0.5, 0., .5));\n    d += DrawPoint(ro, rd, vec3(0.5, 0.5, 0.));\n    d += DrawPoint(ro, rd, vec3(0., 1., .5));\n    d += DrawPoint(ro, rd, vec3(0., 0.5, 1.));\n    d += DrawPoint(ro, rd, vec3(0., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(0.5, 1., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 0.5, 1.));\n    d += DrawPoint(ro, rd, vec3(0.5, 0., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 0., .5));\n    d += DrawPoint(ro, rd, vec3(0., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(0., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(0., 0., 1.));\n\n    d += DrawPoint(ro, rd, vec3(0., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(0., 1., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 1.));\n\n    // Output to screen\n    fragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}