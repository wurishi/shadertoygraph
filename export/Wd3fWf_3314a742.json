{"ver":"0.1","info":{"id":"Wd3fWf","date":"1606106782","viewed":115,"name":"Checkerboard to Sierpinski","username":"xingyzt","description":"not a true carpet as the holes get holes in them","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","checkerboard","sierpinski","swirledseries"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 10.\n#define PI 3.14159\n#define EPSILON 0.01\n#define SQUARE_WIDTH 64.\n\nint square(float x,float d)\n{\n    return int(step(fract(x/2.),d));\n}\n\nint checker(vec2 uv)\n{\n    return 2*square(uv.x+float(square(uv.y,.5)),0.5)-1;\n}\n\nint fractal(vec2 uv, float d)\n{\n    float c = 2.*d;\n    return 1-2*square(uv.x-c,d)*square(uv.y-c,d);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float time = pow(sin(float(iFrame)/180.*PI),2.)*2.;\n    float zoom = exp2(time*(1.5+EPSILON));\n\tvec2 uv = fragCoord.xy/SQUARE_WIDTH/zoom;\n    \n    int lum = checker(uv);\n    float level = 2.5*time-1.;\n    \n    for (float i=0.; i<MAX_ITER; i++)\n    {\n    \tif ( i>level ) break;\n        lum *= fractal(2.*pow(3.,i)*uv,1./3.);\n    }\n    \n    lum *= fractal(2.*pow(3.,ceil(level))*uv,1./3.*fract(level));\n\n\tfragColor = vec4(vec3(float(lum)),1);\n}","name":"Image","description":"","type":"image"}]}