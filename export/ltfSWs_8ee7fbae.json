{"ver":"0.1","info":{"id":"ltfSWs","date":"1440559706","viewed":163,"name":"Expanding Fractal","username":"gordey","description":"modification of relampago2048 code https://www.shadertoy.com/view/llB3W1\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["fractal","colorfull"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const float iters = 8.,\n\t\t\ts1 = 0.6122,\n\t\t\ts2 = 0.540,\n\t\t\ts3 = 0.270,\n\t\t\ts4 = 0.0867,\n\t\t\ts5 = 0.1326,\n\t\t\ts6 = 0.785,\n\t\t\ts7 = 0.301,\n\t\t\ts8 = 0.729;\n\nfloat fractal(vec2 p) {\n    float pulse  = .5+.5*cos(iTime*1.3+10.),\n          pulse2 = .5+.5*sin(iTime);\n    for (float i = 0.; i < iters; i++) {\n        float l = length(p);\n        if (l > 22.) return i;\n        vec2 r = l < 3.*pulse   ? vec2(sin(p.x-p.y), 0)*s2\n               : l < 12.*pulse2 ? vec2(p.x-p.y, cos(p.x+p.y)+p.x)*s3*3.\n               : l < 23.*pulse  ? vec2(p.x/p.y*s6, 0)*s4\n               :                  vec2(p.x*s7-p.y*pulse, p.x)*s5;\n        p = (vec2(r.x*s8*3.,0)+r.y)*s1*6.;\n    }\n    return 0.;\n}\nvec4 color(float i) {\n    float f = i/iters;\n    vec4 v = sin(2.*f*f*vec4(2,3,4,0)); \n    v.z=abs(v.z); \n    return v;\n}\nvoid mainImage( out vec4 o, vec2 uv) {\n    vec2 R = iResolution.xy, \n         p =.5*R.x/R.y -uv/R.y;\n    p.y -= .4;\n    o = color(fractal(18.*p));\n}","name":"","description":"","type":"image"}]}