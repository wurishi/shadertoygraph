{"ver":"0.1","info":{"id":"XXy3RG","date":"1717769628","viewed":79,"name":"Mighty Morphing Lines","username":"BarberDucky","description":"Drawing glowing lines using function determined axis offsets, in this case cosine. ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["line","lines","glow","glowinglines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float drawLine( vec2 p, vec2 a, vec2 b ) {\n  vec2 pa = p-a, ba = b-a;\n  float h = clamp(dot(pa,ba)/dot(ba,ba), 0.0, 1.0);\n  float d = length(pa - ba*h);\n  return sqrt(smoothstep(0., 1., d));\n}\n\nfloat getGlow(float dist, float radius, float intensity) {\n  return pow(radius/dist, intensity);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.);\n    float radius = 0.002;\n    float intensity = 0.7;\n    float lineLength = .90;\n    \n    float speedOffsets[5] = float[5](0.9, 0.3, 1.7, 0.0, 1.3);\n    vec2 curveModifiers[5] = vec2[5](vec2(0.8, 0.0), vec2(1.15, -0.69), vec2(1.1, 2.64), vec2(1.29, 2.52), vec2(1.1, 2.3));\n    float offsetPoints[5] = float[5](-0.05, 0., 1.2, 1.1, 1.26);\n    vec3 lineColors[5] = vec3[5](vec3(0.0, 0.5, 0.25), vec3(1.0, 1.0, 1.0), vec3(0.2, 0.2, 0.75), vec3(1.0, 0.25, 0.25), vec3(1.0, 1.0, 0.0));\n    \n    for (int i = 0; i < 5; i++) {\n        float t = mod(iTime * 0.6 - speedOffsets[i], 2.3);\n        vec2 lineStart = vec2(t - 0.5, 1.);\n        vec2 lineEnd = vec2(t - lineLength - 0.5, 1.);\n        float curve = cos(uv.y * curveModifiers[i].x + curveModifiers[i].y);\n        vec2 offsetPoint = vec2(uv.y, uv.x + curve + offsetPoints[i]);\n        float distanceToLine = drawLine(offsetPoint, lineStart, lineEnd);\n        float fallOff = smoothstep(lineEnd.x, lineStart.x, uv.y);\n        float glow = getGlow(distanceToLine, radius, intensity);\n        glow = clamp(glow, 0.0, 1.89);\n        glow *= smoothstep(0., 1., 1. - distanceToLine);\n        col += vec3(glow * lineColors[i] * fallOff);\n    }\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}