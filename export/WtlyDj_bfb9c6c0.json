{"ver":"0.1","info":{"id":"WtlyDj","date":"1593153007","viewed":415,"name":"Spectrum Tiles","username":"andremichelle","description":"Some tiling work for a spectrum visualiser I need elsewhere.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["spectrum","visualiser","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdRoundBox(vec2 p, vec2 b, float r)\n{\n  vec2 q = abs(p) - b;\n  return length(max(q,.0)) + min(max(q.x,q.y),.0) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord;\n\tuv.y = iResolution.y - uv.y;\n    vec2 nc = vec2(32.0, 24.0);\n    vec2 ts = iResolution.xy / nc;\n    vec2 fr = (fract(uv/ts)-0.5)*2.0;\n    vec2 gr = floor(uv/ts);\n    float d = sdRoundBox(fr, vec2(0.5, 0.4), 0.3);\n    float a = smoothstep(0.04, 0.0, d);\n    \n    float xNorm = floor(uv.x / iResolution.x * nc.x) / nc.x;\n    float yAtX;\n    \n    //yAtX = mod(floor(iTime), nc.y + 1.0) / nc.y;\n    //yAtX = 0.5 + sin((xNorm + iTime * 0.25) * 6.283185) * 0.5;  \n    \n    yAtX = texture(iChannel0, vec2(xNorm,0.25) ).x; \n    \n    float sw = round(yAtX * nc.y) / nc.y;\n\n    float upper = step(1.0 - sw, (gr.y - 0.0) / nc.y);\n    float lower = step(1.0 - sw, (gr.y - 1.0) / nc.y);\n    float amount = upper - lower * 0.5;\n    vec3 b = mix(vec3(0.8, 0.6, 0.4), vec3(0.4, 0.2, 0.0), uv.y / iResolution.y);\n    vec3 c = mix(vec3(0.8, 0.6, 0.4), vec3(1.0, 1.0, 1.0), amount * a * upper);\n    fragColor = vec4(mix(b, c, upper * a), 1.0);\n}","name":"Image","description":"","type":"image"}]}