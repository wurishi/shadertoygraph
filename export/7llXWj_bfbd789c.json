{"ver":"0.1","info":{"id":"7llXWj","date":"1626615577","viewed":80,"name":"Onion Sphere","username":"kithy","description":"based on iq's onion function\nhttps://www.shadertoy.com/view/MlcBDj","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","sphere","onion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPS 0.001\n#define MAX_STEPS 64\n\nmat2 rot(float angle){\n\tfloat s=sin(angle);\n\tfloat c=cos(angle);\n\treturn mat2(c,-s,s,c);\n}\n\nfloat onion(in float d,in float h){\n\treturn abs(d)-h;\n}\n\nfloat sdSphere(vec3 p){\n\treturn length(p)-0.2;\n}\n\nfloat map(vec3 p){\n\tfloat d;\n\tp.xz*=rot(iTime);\n\tp.xy*=rot(-iTime);\n\n\t//sphere\t\n\tfloat s=sdSphere(p);\n\t\n\t//onion\n\tfloat o=onion(s,0.5);\t\n\tfloat o2=onion(o,0.3);\t\n\tfloat o3=onion(o2,0.15);\n\td=min(s,onion(o3,0.05));\n\n\t//cut\n\td=max(d,p.y);\n\n\treturn d;\n}\n\nvec3 calcNormal(vec3 p){\n\tfloat d=map(p);\n\treturn normalize(vec3(\n\t\tmap(p+vec3(EPS,0.0,0.0))-d,\n\t\tmap(p+vec3(0.0,EPS,0.0))-d,\n\t\tmap(p+vec3(0.0,0.0,EPS))-d\n\t));\n}\n\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 p=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n\tvec3 ro=vec3(0.0,0.0,2.0);\n\tvec3 rd=normalize(vec3(p,-1.0));\n\n\tfloat d,t=0.0;\n\tvec3 rp,n;\n\n\tfor(int i=0;i<MAX_STEPS;i++){\n\t\trp=ro+rd*t;\n\t\td=map(rp);\n\t\tif(d<0.001)break;\n\t\tt+=d;\n\t}\n\n\tn=calcNormal(rp);\n\n\tfragColor=vec4(n,1.0);\n}\n","name":"Image","description":"","type":"image"}]}