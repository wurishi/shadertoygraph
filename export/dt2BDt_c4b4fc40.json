{"ver":"0.1","info":{"id":"dt2BDt","date":"1694630947","viewed":39,"name":"Swirl Transform Picture","username":"unravelwinter","description":"A swirl effect that looks like a magnifying glass.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["swirl","learning","magnifyingglass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 swirl(vec2 p, vec2 center) {\n    vec2 v = p - center;\n    float r = length(v);\n    float ang = atan(v.y, v.x);\n    ang += 10.0*r; // More radius = more swirl\n    return center + vec2(r*cos(ang), r*sin(ang));\n}\n\n// Normalized coordinates when x-axis is [0 to 1]\nvec2 normalized(in vec2 p) {\n    return p/iResolution.x;\n} \n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{    \n    vec2 p = normalized(fragCoord);\n    vec2 center = 0.2*vec2(cos(iTime), sin(iTime)) + normalized(iResolution.xy/2.0);\n    \n    // Use mouse to move circle's center\n    // center = normalized(iMouse.xy);\n    \n    bool isInsideCircle = length(p - center) < 0.14;\n    vec2 coord = isInsideCircle ? swirl(p, center) : p;\n    fragColor = vec4(texture(iChannel0, coord).rgb, 1);\n}\n","name":"Image","description":"","type":"image"}]}