{"ver":"0.1","info":{"id":"ctscW2","date":"1691201341","viewed":58,"name":"golden sparkly shiny","username":"wiznat","description":"its gold sparkle shiny duh","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["goldsparkleshiny"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash(vec2 p) {\n    p = vec2(dot(p, vec2(127.1, 311.7)),\n             dot(p, vec2(269.5, 183.3)));\n    return fract(sin(p) * 18.5453);\n}\n\nfloat noise(in vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(mix(dot(hash(i + vec2(0.0, 0.0)), f - vec2(0.0, 0.0)),\n                   dot(hash(i + vec2(1.0, 0.0)), f - vec2(1.0, 0.0)), u.x),\n               mix(dot(hash(i + vec2(0.0, 1.0)), f - vec2(0.0, 1.0)),\n                   dot(hash(i + vec2(1.0, 1.0)), f - vec2(1.0, 1.0)), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    float time = iTime;\n    float frequency = 8.0;\n    float width = 0.32;\n    float highlight = width * sin(frequency * uv.x + time) + 0.5; \n\n    vec3 goldenColor = vec3(1.0, 0.7, 0.0);\n    vec3 highlightColor = vec3(1.0, 0.99, 0.5);\n\n    vec3 color = mix(goldenColor, highlightColor, highlight);\n\n    vec2 sparkleCoord = floor(uv * vec2(iResolution.x, iResolution.y) / 1.5);\n    float sparkleOffset = hash(sparkleCoord).x;  // Random offset for each grid point\n    float sparkle = sin(10. * (noise(floor(sparkleCoord) * .02) + sparkleOffset + time * .1)) ;\n     sparkle = smoothstep(.95, 1.0, sparkle) * .20;\n\n    color += sparkle * vec3(1.0, 1.0, 1.0);\n\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}