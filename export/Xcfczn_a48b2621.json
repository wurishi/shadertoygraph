{"ver":"0.1","info":{"id":"Xcfczn","date":"1720680143","viewed":45,"name":"HW8_Noise fog of London","username":"EurekaChen","description":"Noise fog of London","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\nconst int MAX_ITER = 16;\n\n//noise ref: https://www.shadertoy.com/view/tldSRj\nvec2 grad( ivec2 z )  // replace this anything that returns a random vector\n{\n    // 2D to 1D  (feel free to replace by some other)\n    int n = z.x+z.y*11111;\n\n    // Hugo Elias hash (feel free to replace by another one)\n    n = (n<<13)^n;\n    n = (n*(n*n*15731+789221)+1376312589)>>16;\n\n    n &= 7;\n    vec2 gr = vec2(n&1,n>>1)*2.0-1.0;\n    return ( n>=6 ) ? vec2(0.0,gr.x) : \n           ( n>=4 ) ? vec2(gr.x,0.0) :\n                              gr;                      \n}\n\nfloat noise( in vec2 p )\n{\n    ivec2 i = ivec2(floor( p ));\n     vec2 f =       fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f); // feel free to replace by a quintic smoothstep instead\n\n    return mix( mix( dot( grad( i+ivec2(0,0) ), f-vec2(0.0,0.0) ), \n                     dot( grad( i+ivec2(1,0) ), f-vec2(1.0,0.0) ), u.x),\n                mix( dot( grad( i+ivec2(0,1) ), f-vec2(0.0,1.0) ), \n                     dot( grad( i+ivec2(1,1) ), f-vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 image = texture(iChannel0, uv);\n    vec2 p = uv ;\n    \n    vec3 col = vec3(0.);\n    \n    for(int i=1; i <= MAX_ITER; i++)\n        p += 0.6 * p.x * noise(p) * sin(float(i) * float(i) * noise(p) * p.y + iTime);\n    col += 0.3 * (p.y + 0.1) * (0.5 + 0.5 * sin(iTime)) * vec3(1.,1.,0.);\n    \n    p = uv;\n    for(int i=1; i <= MAX_ITER; i++)\n        p += 0.6 * p.x * noise(p) * sin(float(i) * float(i) * noise(p) * p.y + iTime);\n    col += 0.3 * (p.y + 0.1) * (0.5 + 0.5 * sin(iTime + PI) ) * vec3(.1,.2,1.);\n    \n    fragColor = vec4(image.xyz * (0.7 + 0.3 * sin(iTime)) + col, 1.0);\n}","name":"Image","description":"","type":"image"}]}