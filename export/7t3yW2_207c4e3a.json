{"ver":"0.1","info":{"id":"7t3yW2","date":"1660548239","viewed":106,"name":"A VISION BEYOND","username":"asynth","description":"Generated by a program written in Rust. use Chrome full screen for maximum effect.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["generativepsychedelic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tuv = circ_inv(uv, vec2(0.0288, 0.2816), 0.1304);\n\treturn vec3(length(uv));\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = noise(uv, vec2(3.261208, 0.6816686), 0.331306);\n\tvec3 a2 = vec3(0.6810, 0.4062, 0.3500);\n\tvec3 a3 = sin((-(a1 * a2))*3.8304 + 0.8026 + iTime*0.1730);\n\treturn abs(uni(a3));\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = repeat_1(uv, 0.7043);\n\tvec3 a1 = tri(vec3(uv.y)*2.4027 + 0.0122 + iTime*0.3883);\n\tvec3 a2 = tri(a1*4.6150 + 0.1294 + iTime*0.2830);\n\treturn sigmoid(a2);\n}\n\nvec3 node_4(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = mix2(uv, vec3(0.7141, 0.5032, 0.0187), vec3(0.7454, 0.8910, 0.3464), vec3(0.7045, 0.8396, 0.6011), vec3(0.7102, 0.9079, 0.0090));\n\tvec3 a2 = tri(a1*4.6522 + 0.8762 + iTime*0.3859);\n\treturn (-quant(a2, vec3(uv.y)));\n}\n\nvec3 node_5(vec2 uv) {\n\tuv = reflect_4(uv);\n\tvec3 a1 = vec3(0.4130, 0.8730, 0.5846);\n\tvec3 a2 = sin(bi(a1)*1.2072 + 0.0808 + iTime*0.1637);\n\treturn mod(a2, vec3(uv.x));\n}\n\nvec3 node_6(vec2 uv) {\n\tuv = reflect_2(uv);\n\treturn node_5(uv);\n}\n\nvec3 node_7(vec2 uv) {\n\tuv = circ_inv(uv, vec2(0.0986, -0.2951), 0.3311);\n\tvec3 a1 = noise(uv, vec2(0.09737073, 3.202062), 0.476140);\n\treturn min(vec3(atan(uv.y, uv.x)), a1);\n}\n\nvec3 node_8(vec2 uv) {\n\tuv = repeat_0(uv, 0.7199);\n\treturn (-node_7(uv));\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = circ_inv(uv, vec2(0.2494, 0.0930), 0.2800);\n\tvec3 a1 = noise(uv, vec2(0.19849676, 0.99280953), 0.102038);\n\treturn bi(a1);\n}\n\nvec3 node_10(vec2 uv) {\n\tuv = repeat_4(uv, 0.2356);\n\treturn node_9(uv);\n}\n\nvec3 node_11(vec2 uv) {\n\tuv = repeat_2(uv, 0.4313);\n\treturn node_10(uv);\n}\n\nvec3 node_12(vec2 uv) {\n\tuv = (mat2(-0.7624,-1.2607,-1.1798,0.9045)*(uv-vec2(0.1497,0.0226)));\n\tvec3 a1 = noise(uv, vec2(0.09450609, 1.1728377), 0.832675);\n\tvec3 a2 = noise(uv, vec2(2.7694008, 3.0783286), 0.508311);\n\tvec3 a3 = noise(uv, vec2(2.9657278, 0.1526972), 0.443525);\n\tvec3 a4 = sin(max(max((a2 * vec3(atan(uv.y, uv.x))), pthresh(0.3794, vec3(atan(uv.y, uv.x)), vec3(atan(uv.y, uv.x)), a3)), (node_11(uv) - sigmoid(vec3(length(uv)))))*5.4062 + 0.6493 + iTime*0.0962);\n\tvec3 a5 = tri(sq(min(a1, a4))*5.4161 + 0.6318 + iTime*0.2580);\n\tvec3 a6 = sin(a5*3.0176 + 0.8028 + iTime*0.3500);\n\tvec3 a7 = sin(uni(sigmoid(sigmoid((-a6))))*5.1200 + 0.2797 + iTime*0.1073);\n\treturn a7;\n}\n\nvec3 node_13(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.5154, 0.3235), 0.4523);\n\treturn node_12(uv);\n}\n\nvec3 node_14(vec2 uv) {\n\tuv = repeat_0(uv, 0.5665);\n\tvec3 a1 = sin(node_6(uv)*1.0155 + 0.5720 + iTime*0.1942);\n\tvec3 a2 = sin(min(vec3(uv.x), max(a1, node_8(uv)))*4.9433 + 0.1060 + iTime*0.3753);\n\treturn mod(a2, sigmoid(node_13(uv)));\n}\n\nvec3 node_15(vec2 uv) {\n\tuv = (mat2(1.1051,1.3251,1.3222,1.0880)*(uv-vec2(-0.2722,0.3193)));\n\treturn node_14(uv);\n}\n\nvec3 node_16(vec2 uv) {\n\tuv = circ_inv(uv, vec2(0.2104, -0.4154), 0.2508);\n\tvec3 a1 = mix2(uv, vec3(0.8160, 0.3618, 0.8476), vec3(0.9133, 0.6801, 0.4029), vec3(0.7955, 0.7734, 0.9264), vec3(0.0229, 0.6691, 0.3511));\n\treturn sq(a1);\n}\n\nvec3 node_17(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = vec3(0.9288, 0.2856, 0.9375);\n\treturn a1;\n}\n\nvec3 node_18(vec2 uv) {\n\tuv = repeat_3(uv, 0.7212);\n\treturn node_17(uv);\n}\n\nvec3 node_19(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.4609, 0.5692), 0.1047);\n\tvec3 a1 = vec3(0.4287, 0.8937, 0.7668);\n\tvec3 a2 = noise(uv, vec2(0.46835673, 0.70382744), 0.143628);\n\treturn mod(a1, a2);\n}\n\nvec3 node_20(vec2 uv) {\n\tuv = repeat_4(uv, 0.1270);\n\treturn node_19(uv);\n}\n\nvec3 node_21(vec2 uv) {\n\tuv = (mat2(1.3200,-1.3525,-1.1311,-1.2610)*(uv-vec2(-0.8874,0.3940)));\n\tvec3 a1 = vec3(0.0538, 0.3803, 0.0498);\n\tvec3 a2 = tri((-pthresh(0.0435, pthresh(0.5098, vec3(uv.y), vec3(length(uv)), vec3(uv.x)), uni(node_20(uv)), max(a1, vec3(uv.x))))*5.4806 + 0.2386 + iTime*0.0777);\n\treturn bi(a2);\n}\n\nvec3 node_22(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.2170, -0.3107), 0.2724);\n\treturn node_21(uv);\n}\n\nvec3 node_23(vec2 uv) {\n\tuv = circ_inv(uv, vec2(0.3352, -0.5739), 0.2982);\n\treturn sq(abs((-bi(vec3(uv.x)))));\n}\n\nvec3 node_24(vec2 uv) {\n\tuv = circ_inv(uv, vec2(0.0281, 0.5276), 0.2070);\n\tvec3 a1 = vec3(0.7374, 0.1881, 0.9451);\n\tvec3 a2 = tri((a1 * node_16(uv))*3.5363 + 0.0932 + iTime*0.2571);\n\tvec3 a3 = vec3(0.2882, 0.0206, 0.5833);\n\tvec3 a4 = noise(uv, vec2(0.56247425, 0.35028535), 0.317952);\n\tvec3 a5 = noise(uv, vec2(1.6926342, 3.6352153), 0.030452);\n\tvec3 a6 = sin(mod(mod(min(max(vec3(length(uv)), node_18(uv)), vec3(uv.x)), sigmoid(quant(node_22(uv), mod(sq(min(vec3(length(uv)), a3)), node_23(uv))))), min(mod(bi(a4), max(vec3(length(uv)), a5)), abs(sq(vec3(uv.y)))))*3.2959 + 0.6760 + iTime*0.2484);\n\tvec3 a7 = sin(a6*2.0609 + 0.3246 + iTime*0.0529);\n\treturn max(a2, a7);\n}\n\nvec3 node_25(vec2 uv) {\n\tuv = repeat_0(uv, 0.1268);\n\tvec3 a1 = vec3(0.5967, 0.9698, 0.8214);\n\tvec3 a2 = sin(a1*3.1954 + 0.0121 + iTime*0.3233);\n\treturn a2;\n}\n\nvec3 node_26(vec2 uv) {\n\tuv = repeat_0(uv, 0.6781);\n\tvec3 a1 = mix2(uv, vec3(0.2173, 0.1387, 0.7976), vec3(0.6756, 0.2048, 0.7689), vec3(0.9393, 0.2662, 0.6895), vec3(0.1670, 0.2571, 0.9556));\n\treturn a1;\n}\n\nvec3 node_27(vec2 uv) {\n\tuv = (mat2(-1.0936,-1.3211,-1.0206,0.7176)*(uv-vec2(-0.5393,-0.8380)));\n\tvec3 a1 = noise(uv, vec2(3.6030393, 0.14105827), 0.654211);\n\tvec3 a2 = vec3(0.1575, 0.4009, 0.2749);\n\treturn (bi(node_25(uv)) * sq(sigmoid(min(a1, pthresh(0.4232, vec3(length(uv)), (vec3(uv.y) * pthresh(0.4893, vec3(length(uv)), a2, vec3(length(uv)))), node_26(uv))))));\n}\n\nvec3 node_28(vec2 uv) {\n\tuv = (mat2(-1.3250,-0.9425,-1.3226,1.1740)*(uv-vec2(0.4146,0.6345)));\n\tvec3 a1 = tri(node_27(uv)*2.2542 + 0.6626 + iTime*0.1289);\n\treturn a1;\n}\n\nvec3 node_29(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = noise(uv, vec2(0.9893584, 0.10035285), 0.628530);\n\tvec3 a2 = noise(uv, vec2(0.09749332, 1.9495274), 0.555770);\n\tvec3 a3 = mix2(uv, vec3(0.0484, 0.6538, 0.2299), vec3(0.7016, 0.5709, 0.3066), vec3(0.1209, 0.9988, 0.1880), vec3(0.3211, 0.4966, 0.1958));\n\tvec3 a4 = vec3(0.8995, 0.3620, 0.6393);\n\tvec3 a5 = sin(vec3(length(uv))*5.6799 + 0.4674 + iTime*0.1400);\n\tvec3 a6 = vec3(0.2069, 0.9439, 0.6728);\n\tvec3 a7 = vec3(0.2749, 0.0052, 0.5713);\n\tvec3 a8 = sin((a7 - node_1(uv))*2.9285 + 0.6162 + iTime*0.2413);\n\tvec3 a9 = sin(node_4(uv)*3.3642 + 0.1106 + iTime*0.2296);\n\tvec3 a10 = mix2(uv, vec3(0.3393, 0.4985, 0.3314), vec3(0.8190, 0.8301, 0.7439), vec3(0.8133, 0.5023, 0.4372), vec3(0.6501, 0.0165, 0.5178));\n\tvec3 a11 = sin(node_28(uv)*4.4333 + 0.2022 + iTime*0.0622);\n\tvec3 a12 = sin(sq(sigmoid((abs(a11) - sigmoid(vec3(atan(uv.y, uv.x))))))*3.2338 + 0.5371 + iTime*0.0621);\n\treturn mod(mod(max(mod(quant(sq(bi(min((pthresh(0.8228, vec3(atan(uv.y, uv.x)), min(pthresh(0.7711, vec3(atan(uv.y, uv.x)), pthresh(0.9564, vec3(length(uv)), a1, vec3(uv.y)), a2), sigmoid(quant(mod(a3, a4), min(vec3(uv.y), a5)))), a6) * sigmoid(quant(sq((-uni((a8 * vec3(uv.y))))), node_2(uv)))), sq(node_3(uv))))), bi((-a9))), (a10 * vec3(uv.x))), node_15(uv)), node_24(uv)), uni(uni(a12)));\n}\n\nvec3 top(vec2 uv) {\n\treturn node_29(uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}