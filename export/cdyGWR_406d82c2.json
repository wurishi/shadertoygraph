{"ver":"0.1","info":{"id":"cdyGWR","date":"1678359611","viewed":79,"name":"Dynamic Gradient","username":"psyduck1312","description":"Gradient dynamically changes based on mouse position","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mouse","gradient","dynamic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Define the width and height of the screen\n    vec2 screen = iResolution.xy;\n\n    // Define the start and end colors of the gradient\n    vec3 startColor = vec3(0.3, 0.6, 0.5);\n    vec3 endColor = vec3(0.2, 0.8, 0.2);\n\n    // Define the position of the mouse relative to the screen\n    vec2 mousePos = iMouse.xy / screen;\n\n    // Use the mouse position to determine the angle of the gradient\n    float angle = atan(mousePos.y - 0.5, mousePos.x - 0.5);\n\n    // Define the gradient direction based on the angle\n    vec2 gradientDirection = vec2(cos(angle), sin(angle));\n\n    // Calculate the distance from the mouse to the center of the screen\n    float distanceFromCenter = distance(mousePos, vec2(0.5, 0.5));\n\n    // Use the distance from the center to adjust the width of the gradient\n    float gradientWidth = mix(0.2, 0.8, distanceFromCenter);\n\n    // Calculate the color of the fragment based on the gradient direction and width\n    vec3 color = mix(startColor, endColor, dot(gradientDirection, fragCoord.xy / screen) * gradientWidth);\n\n    // Set the output color\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}