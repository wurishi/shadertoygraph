{"ver":"0.1","info":{"id":"4lVyWc","date":"1537989893","viewed":160,"name":"SpiritDeck","username":"raspofabs","description":"My transcription of the spirit deck minimalist art shaders. I think some of them could be easily improved, and the way they were written leads to lots of aliasing artefacts.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["blackandwhite","minimalist"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define C 49\n//#define CURRENT 49\n#define PI 3.141597\n#define TAU (2.*PI)\n#define QTR_PI (.25*PI)\n\n// animate them all... that would be nice\n\nfloat stroke(float x, float s, float w){\n    float d = step(s,x+w*0.5) - step(s,x-w*0.5);\n    return clamp(d,0.,1.);\n}\nfloat circleSDF(vec2 st) {\n    return length(st-.5)*2.;\n}\nfloat fill(float x, float size) {\n    return 1.-step(size,x);\n}\nfloat rectSDF(vec2 st,vec2 s) {\n    st = st*2.-1.;\n    return max( abs(st.x/s.x),abs(st.y/s.y) );\n}\nfloat crossSDF(vec2 st, float s) {\n    vec2 size = vec2(.25,s);\n    return min( rectSDF(st,size.xy), rectSDF(st,size.yx));\n}\nfloat flip(float v, float pct) {\n    return mix(v,1.-v,pct);\n}\nfloat vesicaSDF(vec2 st, float w) {\n    vec2 offset = vec2(w*.5,0.);\n    return max( circleSDF(st-offset), circleSDF(st+offset) );\n}\nfloat triSDF(vec2 st) {\n    st = (st*2.-1.)*2.;\n    return max(abs(st.x)*.866025 + st.y*.5, -st.y*.5);\n}\nfloat rhombSDF(vec2 st) {\n\treturn max(triSDF(st),triSDF(vec2(st.x,1.-st.y)));\n}\nvec2 rotate(vec2 st, float a) {\n    st = mat2(cos(a),-sin(a),sin(a),cos(a))*(st-.5);\n    return st+.5;\n}\nfloat polySDF(vec2 st, int V) {\n    st = st*2.-1.;\n    float a = atan(st.x,st.y)+PI;\n    float r = length(st);\n    float v = TAU/float(V);\n    return cos(floor(.5+a/v)*v-a)*r;\n}\nfloat hexSDF(vec2 st) {\n    st = abs(st*2.-1.);\n    return max(abs(st.y),st.x * 0.866025 + st.y*.5);\n}\nfloat starSDF(vec2 st, int V, float s) {\n    st = st*4.-2.;\n\t\tfloat a = atan(st.y,st.x)/TAU;\n\t\tfloat seg = a * float(V);\n\t\ta = ((floor(seg)+.5)/float(V)+mix(s,-s,step(.5,fract(seg))))*TAU;\n    return abs(dot(vec2(cos(a),sin(a)),st));\n}\nfloat raysSDF(vec2 st, int N) {\n\tst -= .5;\n\treturn fract(atan(st.y,st.x)/TAU*float(N));\n}\nfloat heartSDF(vec2 st) {\n\tst -= vec2(.5,.8);\n\tfloat r = length(st)*5.;\n\tst = normalize(st);\n\treturn r-((st.y*pow(abs(st.x),0.67))/(st.y+1.5)-2.*st.y+1.26);\n}\nvec3 bridge(vec3 c, float d, float s, float w) {\n\tc *= 1.-stroke(d,s,w*2.);\n\treturn c + stroke(d,s,w);\n}\nvec2 scale(vec2 st, vec2 s) {\n    return (st-.5)*s+.5;\n}\nfloat flowerSDF(vec2 st, int N) {\n    st = st*2.-1.;\n    float r = length(st)*2.;\n    float a = atan(st.y,st.x);\n    float v = float(N)*.5;\n    return 1.-(abs(cos(a*v))*.5+.5)/r;\n}\nfloat spiralSDF(vec2 st, float t) {\n    st -= .5;\n\tfloat r = dot(st,st);\n\tfloat a = atan(st.y,st.x);\n\treturn abs(sin(fract(log(r)*t+a*.159)));\n}\n\nvec3 renderCard( int card, vec2 st ) {\n\tvec3 color = vec3(0.0);\n\t\tswitch( card ) {\n\t\t\tcase 0: { //VOID\n\t\t\t\t\t\t\t\tcolor = vec3(0.,0.,0.);\n\t\t\t\t\t\t\t} break;\n\t\t\tcase 1: { // JUSTICE\n\t\t\t\t\t\t\t\tcolor += step(0.5,st.x);\n\t\t\t\t\t\t\t} break;\n\t\t\tcase 2: { // STRENGTH\n\t\t\t\t\t\t\t\tcolor += step(0.5+cos(st.y*PI)*.25,st.x);\n\t\t\t\t\t\t\t} break;\n\t\t\tcase 3: { // DEATH\n\t\t\t\t\t\t\t\tcolor += step(0.5,(st.x+st.y)*.5);\n\t\t\t\t\t\t\t} break;\n\t\t\tcase 4: { // THE WALL\n\t\t\t\t\t\t\t\tcolor += stroke(st.x, .5, .15);\n\t\t\t\t\t\t\t} break;\n\t\t\tcase 5: { // TEMPERANCE\n\t\t\t\t\t\t\t\tfloat offset = cos(st.y*PI)*0.15;\n\t\t\t\t\t\t\t\tcolor += stroke(st.x, .28+offset, .1);\n\t\t\t\t\t\t\t\tcolor += stroke(st.x, .5+offset, .1);\n\t\t\t\t\t\t\t\tcolor += stroke(st.x, .72+offset, .1);\n\t\t\t\t\t\t\t} break;\n\t\t\tcase 6: { // BRANCH\n\t\t\t\t\t\t\t\tfloat sdf = 0.5+(st.x-st.y)*.5;\n\t\t\t\t\t\t\t\tcolor += stroke(sdf,.5,.1);\n\t\t\t\t\t\t\t} break;\n\t\t\tcase 7: { // THE HANGED MAN\n\t\t\t\t\t\t\t\tfloat sdf = 0.5+(st.x-st.y)*.5;\n\t\t\t\t\t\t\t\tcolor += stroke(sdf,.5,.1);\n\t\t\t\t\t\t\t\tfloat sdf_inv = (st.x+st.y)*.5;\n\t\t\t\t\t\t\t\tcolor += stroke(sdf_inv,.5,.1);\n\t\t\t\t\t\t\t} break;\n\t\t\tcase 8: { // THE HIGH PRIESTESS\n\t\t\t\t\t\t\t\tcolor += stroke(circleSDF(st),.5,.05);\n\t\t\t\t\t\t\t} break;\n\t\t\tcase 9: { // THE MOON\n\t\t\t\t\t\t\t\tcolor += fill(circleSDF(st),.65);\n\t\t\t\t\t\t\t\tvec2 offset = vec2(.1,.05);\n\t\t\t\t\t\t\t\tcolor -= fill(circleSDF(st-offset),.5);    \n\t\t\t\t\t\t\t} break;\n\t\t\tcase 10: { // THE EMPEROR\n\t\t\t\t\t\t\t\t float sdf = rectSDF(st,vec2(1.));\n\t\t\t\t\t\t\t\t color += stroke(sdf,.5,.125);\n\t\t\t\t\t\t\t\t color += fill(sdf,.1);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 11: { // THE HIEROPHANT\n\t\t\t\t\t\t\t\t float rect = rectSDF(st,vec2(1.));\n\t\t\t\t\t\t\t\t color += fill(rect,.5);\n\t\t\t\t\t\t\t\t float cross = crossSDF(st,1.);\n\t\t\t\t\t\t\t\t color *= step(.5,fract(cross*4.));\n\t\t\t\t\t\t\t\t color *= step(1.,cross);\n\t\t\t\t\t\t\t\t color += fill(cross,.5);\n\t\t\t\t\t\t\t\t color += stroke(rect,.65,.05);\n\t\t\t\t\t\t\t\t color += stroke(rect,.75,.025);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 12: { // THE TOWER\n\t\t\t\t\t\t\t\t float rect = rectSDF(st,vec2(.5,1.));\n\t\t\t\t\t\t\t\t float diag = (st.x+st.y)*.5;\n\t\t\t\t\t\t\t\t color += flip(fill(rect,.6),stroke(diag,.5,.01));\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 13: { // MERGE\n\t\t\t\t\t\t\t\t vec2 offset = vec2(.15,0.);\n\t\t\t\t\t\t\t\t float left = circleSDF(st+offset);\n\t\t\t\t\t\t\t\t float right = circleSDF(st-offset);\n\t\t\t\t\t\t\t\t color += flip(stroke(left,.5,.05),fill(right,.525));\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 14: { // HOPE\n\t\t\t\t\t\t\t\t float sdf = vesicaSDF(st,.2);\n\t\t\t\t\t\t\t\t color += flip(fill(sdf,.5),step((st.x+st.y)*.5,.5));\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 15: { // THE TEMPLE\n\t\t\t\t\t\t\t\t st.y = 1.-st.y;\n\t\t\t\t\t\t\t\t vec2 ts = vec2(st.x,0.82-st.y);\n\t\t\t\t\t\t\t\t color += fill(triSDF(st),.7);\n\t\t\t\t\t\t\t\t color -= fill(triSDF(ts),.36);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 16: { // THE SUMMIT\n\t\t\t\t\t\t\t\t float circle = circleSDF(st-vec2(.0,.1));\n\t\t\t\t\t\t\t\t float triangle = triSDF(st+vec2(.0,.1));\n\t\t\t\t\t\t\t\t color += stroke(circle,.45,.1);\n\t\t\t\t\t\t\t\t color *= step(.55,triangle);\n\t\t\t\t\t\t\t\t color += fill(triangle,.45);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 17: { // THE DIAMOND\n\t\t\t\t\t\t\t\t float sdf = rhombSDF(st-vec2(.0,.1));\n\t\t\t\t\t\t\t\t color += fill(sdf,.425);\n\t\t\t\t\t\t\t\t color += stroke(sdf,.5,.05);\n\t\t\t\t\t\t\t\t color += stroke(sdf,.6,.03);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 18: { // THE HERMIT\n\t\t\t\t\t\t\t\t color += flip(fill(triSDF(st),.5),fill(rhombSDF(st),.4));\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 19: { // INTUITION\n\t\t\t\t\t\t\t\t st = rotate(st, radians(-25.));\n\t\t\t\t\t\t\t\t float sdf = triSDF(st);\n\t\t\t\t\t\t\t\t sdf /= triSDF(st+vec2(0.,.2));\n\t\t\t\t\t\t\t\t color += fill(abs(sdf),.56);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 20: { // THE STONE\n\t\t\t\t\t\t\t\t st = rotate(st, radians(45.));\n\t\t\t\t\t\t\t\t color += fill(rectSDF(st,vec2(1.)),.4);\n\t\t\t\t\t\t\t\t color *= 1.-stroke(st.x,.5,.02);\n\t\t\t\t\t\t\t\t color *= 1.-stroke(st.y,.5,.02);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 21: { // THE MOUNTAIN\n\t\t\t\t\t\t\t\t st = rotate(st, radians(-45.));\n\t\t\t\t\t\t\t\t float off = .12;\n\t\t\t\t\t\t\t\t vec2 s = vec2(1.);\n\t\t\t\t\t\t\t\t color += fill(rectSDF(st+off,s),.2);\n\t\t\t\t\t\t\t\t color += fill(rectSDF(st-off,s),.2);\n\t\t\t\t\t\t\t\t float r = rectSDF(st,s);\n\t\t\t\t\t\t\t\t color *= step(.33,r);\n\t\t\t\t\t\t\t\t color += fill(r,.3);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 22: { // THE SHADOW\n\t\t\t\t\t\t\t\t st = rotate(vec2(st.x,1.-st.y),radians(45.));\n\t\t\t\t\t\t\t\t vec2 s = vec2(1.);\n\t\t\t\t\t\t\t\t color += fill(rectSDF(st-.025,s),.4);\n\t\t\t\t\t\t\t\t color += fill(rectSDF(st+.025,s),.4);\n\t\t\t\t\t\t\t\t color *= step(.38,rectSDF(st+.025,s));\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 23: { // OPPOSITE\n\t\t\t\t\t\t\t\t st = rotate(st, radians(-45.));\n\t\t\t\t\t\t\t\t vec2 s = vec2(1.);\n\t\t\t\t\t\t\t\t float o = .05;\n\t\t\t\t\t\t\t\t color += flip(fill(rectSDF(st-o,s),.4),fill(rectSDF(st+o,s),.4));\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 24: { // THE OAK\n\t\t\t\t\t\t\t\t st = rotate(st, radians(45.));\n\t\t\t\t\t\t\t\t float r1 = rectSDF(st,vec2(1.));\n\t\t\t\t\t\t\t\t float r2 = rectSDF(st+.15,vec2(1.));\n\t\t\t\t\t\t\t\t color += stroke(r1,.5,.05);\n\t\t\t\t\t\t\t\t color *= step(.325,r2);\n\t\t\t\t\t\t\t\t color += stroke(r2,.325,.05) * fill(r1,.525);\n\t\t\t\t\t\t\t\t color += stroke(r2,.2,.05);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 25: { // RIPPLES\n\t\t\t\t\t\t\t\t st = rotate(st, radians(-45.))-.08;\n\t\t\t\t\t\t\t\t for (int i = 0; i < 4; i++) {\n\t\t\t\t\t\t\t\t\t float r = rectSDF(st,vec2(1.));\n\t\t\t\t\t\t\t\t\t color += stroke(r,.19,.04);\n\t\t\t\t\t\t\t\t\t st += .05;\n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 26: { // THE EMPRESS\n\t\t\t\t\t\t\t\t float d1 = polySDF(st,5);\n\t\t\t\t\t\t\t\t vec2 ts = vec2(st.x,1.-st.y);\n\t\t\t\t\t\t\t\t float d2 = polySDF(ts,5);\n\t\t\t\t\t\t\t\t color += fill(d1,.75) * fill(fract(d1*5.),.5);\n\t\t\t\t\t\t\t\t color -= fill(d1,.6) * fill(fract(d2*4.9),.45);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 27: { // BUNDLE\n\t\t\t\t\t\t\t\t st = st.yx;\n\t\t\t\t\t\t\t\t color += stroke(hexSDF(st),.6,.1);\n\t\t\t\t\t\t\t\t color += fill(hexSDF(st-vec2(-.06,-.1)),.15);\n\t\t\t\t\t\t\t\t color += fill(hexSDF(st-vec2(-.06,.1)),.15);\n\t\t\t\t\t\t\t\t color += fill(hexSDF(st-vec2(.11,0.)),.15);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 28: { // THE DEVIL\n\t\t\t\t\t\t\t\t color += stroke(circleSDF(st),.8,.05);\n\t\t\t\t\t\t\t\t st.y = 1.-st.y;\n\t\t\t\t\t\t\t\t float s = starSDF(st.yx,5, .1);\n\t\t\t\t\t\t\t\t color *= step(.7,s);\n\t\t\t\t\t\t\t\t color += stroke(s,.4,.1);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 29: { // THE SUN\n\t\t\t\t\t\t\t\t float bg = starSDF(st,16,.1);\n\t\t\t\t\t\t\t\t color += fill(bg,1.3);\n\t\t\t\t\t\t\t\t float l = 0.;\n\t\t\t\t\t\t\t\t for(float i = 0.; i < 8.; i++) {\n\t\t\t\t\t\t\t\t\t vec2 xy = rotate(st,QTR_PI*i);\n\t\t\t\t\t\t\t\t\t xy.y -= .3;\n\t\t\t\t\t\t\t\t\t float tri = polySDF(xy,3);\n\t\t\t\t\t\t\t\t\t color += fill(tri,.3);\n\t\t\t\t\t\t\t\t\t l += stroke(tri,.3,.03);\n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t color *= 1.-l;\n\t\t\t\t\t\t\t\t float c = polySDF(st,8);\n\t\t\t\t\t\t\t\t color -= stroke(c,.15,.04);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 30: { // THE STAR\n\t\t\t\t\t\t\t\t color += stroke(raysSDF(st,8),.5,.15);\n\t\t\t\t\t\t\t\t float inner = starSDF(st.xy,6, .09);\n\t\t\t\t\t\t\t\t float outer = starSDF(st.yx,6, .09);\n\t\t\t\t\t\t\t\t color *= step(.7,outer);\n\t\t\t\t\t\t\t\t color += fill(outer,.5);\n\t\t\t\t\t\t\t\t color -= stroke(inner,.25,.06);\n\t\t\t\t\t\t\t\t color += stroke(outer,.6,.05);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 31: { // JUDGEMENT\n\t\t\t\t\t\t\t\t color += flip(stroke(raysSDF(st,28),.5,.2),fill(st.y,.5));\n\t\t\t\t\t\t\t\t float rect = rectSDF(st,vec2(1.));\n\t\t\t\t\t\t\t\t color *= step(.25,rect);\n\t\t\t\t\t\t\t\t color += fill(rect,.2);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 32: { // WHEEL OF FORTUNE\n\t\t\t\t\t\t\t\t float sdf = polySDF(st.yx,8);\n\t\t\t\t\t\t\t\t color += fill(sdf,.5);\n\t\t\t\t\t\t\t\t color *= stroke(raysSDF(st,8),.5,.2);\n\t\t\t\t\t\t\t\t color *= step(.27,sdf);\n\t\t\t\t\t\t\t\t color += stroke( sdf,.2,.05);\n\t\t\t\t\t\t\t\t color += stroke( sdf,.6,.1);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 33: { // VISION\n\t\t\t\t\t\t\t\t float v1 = vesicaSDF(st,.5);\n\t\t\t\t\t\t\t\t vec2 st2 = st.yx+vec2(.04,.0);\n\t\t\t\t\t\t\t\t float v2 = vesicaSDF(st2,.7);\n\t\t\t\t\t\t\t\t color += stroke(v2,1.,.05);\n\t\t\t\t\t\t\t\t color += fill(v2,1.)*stroke(circleSDF(st),.3,.05);\n\t\t\t\t\t\t\t\t color += fill(raysSDF(st,50),.2)*fill(v1,1.25)*step(1.,v2);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 34: { // THE LOVERS\n\t\t\t\t\t\t\t\t color += fill(heartSDF(st),.5);\n\t\t\t\t\t\t\t\t color -= stroke(polySDF(st,3),.15,.05);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 35: { // THE MAGICIAN\n\t\t\t\t\t\t\t\t st.x = flip(st.x,step(.5,st.y));\n\t\t\t\t\t\t\t\t vec2 offset = vec2(.15,.0);\n\t\t\t\t\t\t\t\t float left = circleSDF(st+offset);\n\t\t\t\t\t\t\t\t float right = circleSDF(st-offset);\n\t\t\t\t\t\t\t\t color += stroke(left,.4,.075);\n\t\t\t\t\t\t\t\t color = bridge(color,right,.4,.075);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 36: { // THE LINK\n\t\t\t\t\t\t\t\t st = st.yx;\n\t\t\t\t\t\t\t\t st.x = mix(1.-st.x,st.x,step(.5,st.y));\n\t\t\t\t\t\t\t\t vec2 o = vec2(.1,.0);\n\t\t\t\t\t\t\t\t vec2 s = vec2(1.);\n\t\t\t\t\t\t\t\t float a = radians(45.);\n\t\t\t\t\t\t\t\t float l = rectSDF(rotate(st+o,a),s);\n\t\t\t\t\t\t\t\t float r = rectSDF(rotate(st-o,-a),s);\n\t\t\t\t\t\t\t\t color += stroke(l,.3,.1);\n\t\t\t\t\t\t\t\t color = bridge(color,r,.3,.1);\n\t\t\t\t\t\t\t\t color += fill(rhombSDF(abs(st.yx-vec2(.0,.5))),.1);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 37: { // HOLDING TOGETHER\n\t\t\t\t\t\t\t\t st.x = mix(1.-st.x,st.x,step(.5,st.y));\n\t\t\t\t\t\t\t\t vec2 o = vec2(.05,.0);\n\t\t\t\t\t\t\t\t vec2 s = vec2(1.);\n\t\t\t\t\t\t\t\t float a = radians(45.);\n\t\t\t\t\t\t\t\t float l = rectSDF(rotate(st+o,a),s);\n\t\t\t\t\t\t\t\t float r = rectSDF(rotate(st-o,-a),s);\n\t\t\t\t\t\t\t\t color += stroke(l,.145,.098);\n\t\t\t\t\t\t\t\t color = bridge(color,r,.145,.098);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 38: { // THE CHARIOT\n                float r1 = rectSDF(st,vec2(1.));\n                float r2 = rectSDF(rotate(st,radians(45.)),vec2(1.));\n                float inv = step(.5,(st.x+st.y)*.5);\n                inv = flip(inv,step(.5,.5+(st.x-st.y)*.5));\n                //inv = step(.5,raysSDF(rotate(st,radians(90./2.)),4));\n                float w = .075;\n                color += stroke(r1,.5,w)+stroke(r2,.5,w);\n                float bridges = mix(r1,r2,inv);\n                color = bridge(color,bridges,.5,w);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 39: { // THE LOOP\n                float inv = step(.5,st.y);\n                st = rotate(st,radians(-45.))-.2;\n                st = mix(st,.6-st,step(.5,inv));\n                for(int i=0;i<5;i++) {\n                    float r = rectSDF(st,vec2(1.));\n                    float s = .25;\n                    s -= abs(float(i)*.1-.2);\n                    color = bridge(color,r,s,.05);\n                    st += .1;\n                }\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 40: { // TURNING POINT\n                st = rotate(st,radians(-60.));\n                st.y = flip(st.y,step(.5,st.x));\n                st.y += .25;\n                float down = polySDF(st,3);\n                st.y = 1.5-st.y;\n                float top = polySDF(st,3);\n                color += stroke(top,.4,.15);\n                color = bridge(color,down,.4,.15);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 41: { // TRINITY\n                st.y = 1.-st.y;\n                float s = .25;\n                float t1 = polySDF(st+vec2(.0,.175),3);\n                float t2 = polySDF(st+vec2(.1,.0),3);\n                float t3 = polySDF(st-vec2(.1,.0),3);\n                color +=\n                    stroke(t1,s,.08)+\n                    stroke(t2,s,.08)+\n                    stroke(t3,s,.08);\n                float bridges = mix(mix(t1,t2,step(.5,st.y)),mix(t3,t2,step(.5,st.y)),step(.5,st.x));\n                color = bridge(color,bridges,s,.08);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 42: { // THE CAULDRON\n                //st.x = flip(st.x,step(.5,st.y));\n                //st.y = flip(st.y,step(.5,st.y));\n                float n = 12.;\n                float a = TAU/n;\n                //for(float i = floor(n/4.); i<floor(n*.75)+1.;i++) {\n                for(float i = 0.; i<n;i++) {\n                    vec2 xy=rotate(st,a*i);\n                    xy.y -= .189;\n                    float vsc = vesicaSDF(xy,.3);\n                    color *= 1.-stroke(vsc,.45,.1)*step(.5,xy.y);\n                    color += stroke(vsc,.45,.05);                    \n                }\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 43: { // THE ELDERS\n                float n = 3.;\n                float a = TAU/n;\n                for(float i=0.;i<n*2.;i++){\n                    vec2 xy = rotate(st,a*i);\n                    xy.y -= .09;\n                    float vsc = vesicaSDF(xy,.3);\n                    color = mix(color+stroke(vsc,.5,.1),\n                               mix(color,bridge(color,vsc,.5,.1),\n                                   step(xy.x,.5)-step(xy.y,.4)),\n                                step(3.,i));\n                }\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 44: { // THE CORE\n                float star = starSDF(st,8,.063);\n                color += fill(star,1.22);\n                float n = 8.;\n                float a = TAU/n;\n                for(float i=0.;i<n;i++) {\n                    vec2 xy=rotate(st,.39+a*i);\n                    xy=scale(xy,vec2(1.,.72));\n                    xy.y-=.125;\n                    color *= step(.235,rhombSDF(xy));\n                }\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 45: { // INNER TRUTH\n                st -=.5;\n                float r = dot(st,st);\n                float a = atan(st.y,st.x)/PI;\n                vec2 uv = vec2(a,r);\n                vec2 grid = vec2(5.,log(r)*20.);\n                vec2 uv_i = floor(uv*grid);\n                uv.x += .5*mod(uv_i.y,2.);\n                vec2 uv_f = fract(uv*grid);\n                float shape=rhombSDF(uv_f);\n                color += fill(shape,.9)*step(.75,1.-r);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 46: { // THE WORLD\n                color += fill(flowerSDF(st,5),.25);\n                color -= step(.95,starSDF(rotate(st,.628),5,.1));\n                color = clamp(color,0.,1.);\n                float circle = circleSDF(st);\n                color -= stroke( circle,.1,.05);\n                color += stroke( circle,.8,.07);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 47: { // THE FOOL\n                color += step(.5,spiralSDF(st,.13));\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 48: { // ENLIGHTENMENT\n                color = vec3(1.);\n\t\t\t\t\t\t\t } break;\n\t\t\tcase 49: { // ELEMENTS\n                color += stroke(circleSDF(st),.9,.1);\n\t\t\t\tcolor += fill(flowerSDF(st.yx,3),.2);\n\t\t\t\tcolor -= fill(triSDF(vec2(st.x,.98-st.y)),\n              .15);\n\t\t\t\t\t\t\t } break;\n\t\t}\n\treturn color;\n}\n\nvec3 cardInterp( vec2 st, int card, float d ) {\n    int nextCard = (card+1)%(C+1);\n    vec3 current = renderCard(card,st);\n    vec3 next = renderCard(nextCard,st);\n\treturn mix(current,next,d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = vec3(0.);\n\t//vec2 st = fragCoord/iResolution.xy*2.0-vec2(0.5);\n    vec2 st = (fragCoord/iResolution.x - vec2((iResolution.x-iResolution.y)/iResolution.x/2.0,0.0))*iResolution.x/iResolution.y;\n    \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    int card = int(iTime) % (C+1);\n    float d = clamp(5.*fract(iTime),0.,1.);\n#ifdef CURRENT\n    card = CURRENT;\n    d = 0.;    \n#endif\n    float AA = 0.005;\n    float count = 0.;\n    for( float a = 0.; a < AA; a+= 0.001 )\n    for( float b = 0.; b < AA; b+= 0.001 ) {\n        vec2 o = vec2(a,b);\n\t\tcolor += cardInterp(st+o,card,d);\n    \tcount += 1.;\n\t}\n\tcolor /= count;\n    color = mix(vec3(.15,.05,.0),vec3(.95,.98,.99),clamp(color.x,0.,1.));\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}