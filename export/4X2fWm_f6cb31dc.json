{"ver":"0.1","info":{"id":"4X2fWm","date":"1729542870","viewed":23,"name":"The All Seeing Green Orb","username":"izutionix","description":"Trying to get A-B G-M coordinate white balance colors, and then this happened.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["colors","orb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793\n#define smoothGain(x, b) b*x/(b*abs(x)-abs(x)+1.)\n#define mapToInf(x) tan(0.5*PI*x)\n\nvec3 rgbToYuv(vec3 rgb) {\n    float luma = rgb.g;\n    float blueness = rgb.b - luma;\n    float redness = rgb.r - luma;\n    return vec3(luma, redness, blueness);\n}\n\nvec3 yuvToRgb(vec3 yuv) {\n    float green = yuv.x;\n    float red = yuv.y + green;\n    float blue = yuv.z + green;\n    return vec3(red, green, blue);\n}\n\nfloat a = -PI/4.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    \n    if (dot(mouse, vec2(1.))==0.) // if no mouse\n        mouse = vec2(1., 0.) + 0.25*cos(vec2(1.57*iTime, 0.5));\n    \n    mat2 rot = mat2( cos(a), -sin(a), sin(a), cos(a) );\n\n    vec3 col = texture(iChannel0, uv).rgb;\n    uv = 2.*uv-1.;\n    uv *= rot;\n    col = yuvToRgb(vec3(mouse.y, uv*mouse.x*2.)); //cos(uv * 3.141592653589793)));\n    col = normalize(col);\n    //col = smoothGain(col, vec3(0.54, 0.6, 1.)/vec3(0.54+0.6+1.)*3.);\n    \n    \n    //vec3 colorBalance = vec3(1., mapToInf(mouse.x), mapToInf(mouse.y));\n    \n    \n    //vec3 multiplier = yuvToRgb(rgbToYuv(col)*colorBalance);\n    \n    //col = smoothGain(col, multiplier);\n\n    //col = vec3(uv, 0.);\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}