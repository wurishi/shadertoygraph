{"ver":"0.1","info":{"id":"4tdBRM","date":"1539036675","viewed":691,"name":"Random color replacement (HSV)","username":"chao_mu","description":"Convert RGB to HSV, divide each channel up into X spaces and give a random (consistent) value to each, then convert back.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["colormapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Number of colors to use (may not be actual number)\n#define COLORS 10.0\n\nfloat rand(float n){\n    return fract(sin(n) * 43758.5453123);\n}\n\nfloat hash_channel(vec3 color, int i)\n{\n\treturn rand(floor(color[i] * COLORS) + float(i));\n}\n\n\n// https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n// https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 hsv = rgb2hsv(texture(iChannel0, uv).rgb);\n    \n    hsv = vec3(\n        hash_channel(hsv, 0),\n        hash_channel(hsv, 1),\n        hash_channel(hsv, 2)\n    );\n    \n    \n    fragColor = vec4(hsv2rgb(hsv), 1.);\n}","name":"Image","description":"","type":"image"}]}