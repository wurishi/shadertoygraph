{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Screen resolution\n    vec2 resolution = iResolution.xy;\n\n    // UV coordinates normalized to [0, 1]\n    vec2 uv = fragCoord / resolution;\n\n    // Texture coordinate for sampling your pixel art texture\n    vec2 texCoord = floor(uv * resolution / 10.0) / (resolution / 10.0);\n\n    // Sample the pixel art texture\n    vec3 color = texture(iChannel0, texCoord).rgb;\n\n    // Define the subpixel width (relative to screen resolution)\n    float subpixelWidth = 1.0 / resolution.x / 3.0;\n\n    // Determine the subpixel band for the current fragment\n    float subpixelX = mod(fragCoord.x, subpixelWidth * 3.0);\n\n    // Initialize subpixel colors to black\n    vec3 subpixelColor = vec3(0.0);\n\n    // Assign the color to the appropriate subpixel\n    if (subpixelX < subpixelWidth) {\n        subpixelColor.r = color.r; // Red subpixel\n    } else if (subpixelX < 2.0 * subpixelWidth) {\n        subpixelColor.g = color.g; // Green subpixel\n    } else {\n        subpixelColor.b = color.b; // Blue subpixel\n    }\n\n    // Optional: Add a slight vignette or fade effect\n    float vignette = 0.9 + 0.1 * sin(uv.x * uv.y * 20.0);\n\n    // Final fragment color\n    fragColor = vec4(subpixelColor * vignette, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4cVBWR","date":"1733941568","viewed":42,"name":"subpixel effect","username":"brianelete","description":"subpixel effect ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["subpixel"],"hasliked":0,"parentid":"","parentname":""}}