{"ver":"0.1","info":{"id":"csfSR8","date":"1668467660","viewed":57,"name":"xxHash32 / GLSL 3","username":"dromozoa","description":"xxHash32 based noise.\nnumbers are uniformly distributed (mouse is not clicked)\nnumbers are normally distributed (mouse is clicked)\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","random","glsl3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint xxhash32(uint seed, vec2 data) {\n    // const uint PRIME32_1 = 0x9E3779B1u;\n    const uint PRIME32_2 = 0x85EBCA77u;\n    const uint PRIME32_3 = 0xC2B2AE3Du;\n    const uint PRIME32_4 = 0x27D4EB2Fu;\n    const uint PRIME32_5 = 0x165667B1u;\n\n    uint v = seed + PRIME32_5;\n    v += 8u;\n    v += floatBitsToUint(data.x) * PRIME32_3;\n    v = (v << 17) | (v >> 15);\n    v += floatBitsToUint(data.y) * PRIME32_3;\n    v = (v << 17) | (v >> 15);\n    v *= PRIME32_4;\n    v ^= v >> 15;\n    v *= PRIME32_2;\n    v ^= v >> 13;\n    v *= PRIME32_3;\n    v ^= v >> 16;\n\n    return v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 data = fragCoord / iResolution.xy;\n    uint seed = 0u;\n    seed = floatBitsToUint(iTime);\n    uint hash = xxhash32(seed, data);\n    vec2 rand = vec2(float(hash >> 16), float(hash & 0xFFFFu)) / 65536.0;\n\n    if (iMouse.z > 0.0) {\n        // Box-Muller transform\n        // sqrt(-2 * log(U.x)) * cos(2 * M_PI * U.y)\n        rand = sqrt(-2.0 * log(rand)) * cos(6.2831853 * rand.yx);\n        rand = rand * 0.25 + 0.5;\n    }\n\n    vec3 color = vec3(rand.x);\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}