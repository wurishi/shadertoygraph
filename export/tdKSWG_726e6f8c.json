{"ver":"0.1","info":{"id":"tdKSWG","date":"1574888541","viewed":159,"name":"CursorWaves (U repeating)","username":"Einheit101","description":"Shader written because of HLSL conversion issue:\n\nhttps://gamedev.stackexchange.com/questions/177370/strange-diagonal-line-artifact-in-simple-shader","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["waves","cursor","repeating"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ORIGINAL SHADER FROM https://www.shadertoy.com/view/3sB3WW\n// MODIFIED BY EINHEIT-101 FOR A BUG REPORT\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec4 final = texture(iChannel0, uv);\n    fragColor = final;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float STRENGTH = 5.0;\nfloat MODIFIER = 0.91;\nfloat STEP = 2.0;\nfloat fadeStrength = 20.;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    float value = 0.;\n    vec2  uv = fragCoord.xy / iResolution.xy;\n    \n    vec4  color = texture(iChannel0, uv);\n   \tvec3  e = vec3(STEP, STEP, 0) / iResolution.xyy;\n   \tfloat s0 = color.g;\n        \n    vec2 uv1 = uv - e.zy;\n    vec2 uv2 = uv - e.xz;\n    vec2 uv3 = uv + e.xz;\n    vec2 uv4 = uv + e.zy;\n   \n    float s1 = texture(iChannel0, uv1).x;\n    float s2 = texture(iChannel0, uv2).x;\n    float s3 = texture(iChannel0, uv3).x;\n    float s4 = texture(iChannel0, uv4).x;\n\n   \tif (iMouse.w > 0.) value = STRENGTH * smoothstep(3.0, 0.5, length(iMouse.xy - fragCoord.xy));\n \n   \tvalue += -(s0 - .5) * 2. + (s1 + s2 + s3 + s4 - 2.);\n   \tvalue *= MODIFIER;\n    value = value * 0.5 + 0.5;\n    \n    float alphaFade = clamp(fadeStrength * uv.y, 0., 1.) * clamp(fadeStrength * (1.-uv.y), 0., 1.);\n    \n \tfragColor = vec4(value*alphaFade, color.r, value*alphaFade, 1); // Save current and previous state\n}","name":"Buffer A","description":"","type":"buffer"}]}