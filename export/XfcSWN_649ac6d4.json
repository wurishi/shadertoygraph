{"ver":"0.1","info":{"id":"XfcSWN","date":"1713906884","viewed":86,"name":"2 Conway 4 Life","username":"StormOfTheVoid","description":"rand","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["rand"],"hasliked":0,"parentid":"MfcXW8","parentname":"Life Finds A Way"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This just paints whatever is in BufferA\nvoid mainImage(out vec4 color, in vec2 coord) {\n\n    vec2 uv = coord / iResolution.xy;\n    color = texture(iChannel0, uv); \n\n\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const ivec2 FS_ADDR = ivec2(0.0);\n\nconst vec4 fs_stt = vec4(1.0);\n\nuint seed = 0u;\n\nvoid setSeed(uint s) {\n    seed = s;\n}\n\nuint hash(uint s) {\n    s ^= 2747636419u;\n    s *= 2654435769u;\n    s ^= s >> 16;\n    s *= 2654435769u;\n    s ^= s >> 16;\n    s *= 2654435769u;\n    return s;\n}\n\nuint randI() {\n    seed = hash(seed);\n    return seed;\n}\n\nfloat rand() {\n    uint rn = randI();\n    rn %= 1000000000u;\n    float rs = float(rn);\n    rs /= 1000000000.0;\n    return rs;\n}\n\n#define setNSeed() setSeed(uint(iResolution.x*fragCoord.y+fragCoord.x + float(hash(uint(iTime*1000.0))%1000u)))\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 color, in vec2 uv) {\n    vec2 fragCoord = uv;\n    \n    \n    if(mod(float(iFrame)/60.,10.)<0.001){\n        \n       color=texture(iChannel0,uv/iResolution.xy);\n        \n       if(uv.y>iResolution.y-20.){\n       color=vec4(1.0,0.,0.,1.0);\n       }\n       \n       if(uv.y<20.){\n       color=vec4(1.0,0.,0.,1.0);\n       }\n       \n       \n       float thick = 50.;\n       \n       if(mod(uv.x+uv.y,thick)<1.){\n       color=vec4(0.0,0.,1.,1.0);\n       }\n       \n       if(mod(uv.x-uv.y,thick)<1.){\n       color=vec4(0.0,1.,0.,1.0);\n       }\n       \n       if(uv.x>10. && mod(uv.x,iResolution.x/2.)<1.){\n       color=vec4(1.0,0.,0.,1.0);\n       }\n    \n       if(uv.x<20.){\n       color=vec4(1.0,0.,0.,1.0);\n       }\n       \n       if(uv.x>iResolution.x-20.){\n       color=vec4(1.0,0.,0.,1.0);\n       }\n       \n       }else{\n       \n       \n       color=texture(iChannel0,uv/iResolution.xy);\n       \n       if(mod(float(iFrame)/60.,0.05)<0.025){\n       \n       float r=-color.x;\n       float g=-color.y;\n       float b=-color.z;\n       \n       for(float i=-1.; i<=1.; i+=1.){\n       for(float j=-1.; j<=1.; j+=1.){\n       \n       vec2 next=vec2(0,0);\n       next.x=uv.x+i;\n       next.y=uv.y+j;\n       next=next/(iResolution.xy);\n       r=r+texture(iChannel0,next).x;\n       g=g+texture(iChannel0,next).y;\n       b=b+texture(iChannel0,next).z;\n       }\n       }\n\n       \n       if(color.x==1.0){\n       if(r<=1.0){\n           color.x=0.0;\n       }\n       if(r>=4.0){\n           color.x=0.0;\n       }\n       }\n       \n       if(color.x==0.0){\n       if(r==3.0){\n       color.x=1.0;\n       }\n       }\n       \n       \n       \n       if(color.y==1.0){\n       if(g<=1.0){\n           color.y=0.0;\n       }\n       if(g>=4.0){\n           color.y=0.0;\n       }\n       }\n       \n       if(color.y==0.0){\n       if(g==3.0){\n       color.y=1.0;\n       }\n       }\n       \n       \n       if(color.z==1.0){\n       if(b<=1.0){\n           color.z=0.0;\n       }\n       if(b>=4.0){\n           color.z=0.0;\n       }\n       }\n       \n       if(color.z==0.0){\n       if(b==3.0){\n       color.z=1.0;\n       }\n       }\n       }\n       \n       \n       \n       \n       \n       \n       \n       \n      \n       \n       \n       \n       \n       \n      \n       }\n}\n","name":"Buffer A","description":"","type":"buffer"}]}