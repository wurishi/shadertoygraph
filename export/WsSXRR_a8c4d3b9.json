{"ver":"0.1","info":{"id":"WsSXRR","date":"1552602843","viewed":638,"name":"[TWITCH] Hexercise","username":"Flopine","description":"The result of 03/14 stream that can be seen here: https://www.twitch.tv/flopine\nThanks to Alkama for the track <3 ","likes":13,"published":1,"flags":64,"usePreview":0,"tags":["sound","colourful","hexagone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XllGWN","filepath":"https://soundcloud.com/alkama/desert-s-spring","previewfilepath":"https://soundcloud.com/alkama/desert-s-spring","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, Coyhot and Alkama for teaching me\n// Thanks LJ for giving me the love of shadercoding :3\n\n// This shader was inspired by the AWESOME tutorial from BigWings : \n// https://www.youtube.com/watch?v=VmrIDyYiJBA&t=1s\n\n// Music by Alkama <3 thank you\n\n// Cookie Collective rulz\n\n\n#define hr vec2(1., sqrt(3.))\n#define detail 15.\n#define time iTime\n#define PI 3.141592\n#define BPM 126./60.\n#define coloured_grid(_id) vec3(1., rand(_id.x), rand(_id.y))\n#define anim(t) (PI/3.*(floor(t*BPM)+pow(fract(t*BPM),3.)))\n\nfloat rand (float x)\n{return fract(sin(x)*25.55);}\n\nmat2 rot(float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nvec2 moda(inout vec2 uv, float rep)\n{\n    float per = 2.*PI/rep;\n    float a = atan(uv.y,uv.x);\n    float l = length(uv);\n    a = mod(a, per)-per*0.5;\n    return vec2(cos(a),sin(a))*l;\n}\n\nfloat HexDist (vec2 uv)\n{\n    uv = abs(uv);\n    return max(dot(uv, normalize(hr)), uv.x);\n}\n\nvec4 HexGrid (vec2 uv)\n{\n    uv *= detail;\n    vec2 ga = mod(uv, hr)-hr*0.5;\n    vec2 gb = mod(uv-hr*0.5, hr) - hr*0.5;\n\n    vec2 guv = dot(ga,ga) < dot(gb,gb) ? ga : gb;\n\n    vec2 id = uv-guv;\n    guv.y = .5-HexDist(guv);\n    return vec4(guv.x, guv.y, id.x,id.y);\n}\n\nfloat sphere_mask(vec2 id)\n{\n    float s1 = step(length(id),2.5);\n    id *= rot(-anim(time));\n    id = moda(id,7.);\n    id.x -= 5.5;\n    return smoothstep(2.5,2.,length(id)) + s1;\n}\n\nfloat line_mask(vec2 id)\n{\n    id *= rot(anim(time));\n    id.yx = moda(id.yx, 3.);\n    id.x -= 1.;\n    id.x += sin(id.y+time);\n    return step(abs(id.x),2.);\n}\n\nfloat wave1 (vec2 id)\n{\n    id.y += 2.5;\n    id.y += sin(id.x+time*2.);\n    return step(id.y,0.5);\n}\n\nfloat wave2 (vec2 id)\n{\n    id.y -= 2.5;\n    id.y += sin(id.x-time*4.);\n    return step(0.5, id.y);\n}\n\nvec3 lines_hexa (vec2 id)\n{\n    float m = clamp(line_mask(id) - sphere_mask(id),0.,1.);\n    return coloured_grid(id).xxy*0.9*m;\n}\n\nvec3 spheres_hexa(vec2 id)\n{return coloured_grid(id).yxz*0.6 * sphere_mask(id);}\n\nvec3 background(vec2 id)\n{ \n    float foreground_masks = sphere_mask(id)+ line_mask(id);\n    float m1 = clamp(wave1(id)-foreground_masks,0.,1.);\n    float m2 = clamp(wave2(id)-foreground_masks,0.,1.);\n    return (coloured_grid(id).zyx *0.8 * m1 + coloured_grid(id).xyz*0.8*m2)*0.5;\n}\n\nvec3 frame(vec2 uv)\n{\n    vec4 hc = HexGrid(uv);\n    vec3 col = lines_hexa(hc.zw) + spheres_hexa(hc.zw) + background(hc.zw);\n    col += step(1.-(hc.y*abs(sin(length(hc.zw*(PI/3.)*0.08)-anim(time)))), 0.89)*0.4;\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  \n  vec3 col = frame(uv);\n  fragColor = vec4(pow(col,vec3(1.5)),1.);\n}","name":"Image","description":"","type":"image"}]}