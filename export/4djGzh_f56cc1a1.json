{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"struct tSphere {\n\tvec3 center;\n\tfloat radius;\n\tvec3 color;\n\tfloat spec;\n};\n\n// rotate position around axis\nvec2 rotate(vec2 p, float a)\n{\n\treturn vec2(p.x * cos(a) - p.y * sin(a), p.x * sin(a) + p.y * cos(a));\n}\n\nfloat intersect(inout vec3 ray, vec3 dir, inout vec3 nml, inout tSphere sphere)\n{\n\tfloat dist = 100.0;\n\n\tsphere.radius = 0.0;\n\tsphere.center = vec3(0.0);\n\n\tfloat st = sin(iTime*0.2);\n\tfloat ct = cos(iTime*0.2);\n\t\n\tfor (float i=0.0; i<5.0; i++) {\n\t\tfor (float j=0.0; j<5.0; j++) {\n\t\t\tfloat k = i*5.0 + j;\n\t\t\t\n\t\t\tfloat dst = abs(sin(i*j+2.0*iTime*0.01*k)) + 1.0;\n\t\t\tvec3 cen = vec3(st+dst*(i-2.0) + cos(iTime*0.1+k*4.0)*2.0, \n\t\t\t\t\t\t\tct+dst*(j-2.0),\n\t\t\t\t\t\t\tsin(iTime*0.1+k*4.0)*2.0);\n\t\t\tcen.xy = rotate(cen.xy, iTime*0.2);\n\t\t\tcen.xz = rotate(cen.xz, iTime*0.1);\n\t\t\tcen.z += 3.0;\n\t\t\tfloat r = 0.3+(1.0-0.3*abs(4.0-(i+j)));\n\t\t\t\n\t\t\tvec3 rc = ray-cen;\n\t\t\tfloat b = dot(dir, rc);\n\t\t\tfloat c = dot(rc, rc) - r*r;\n\t\t\tfloat d = b*b - c;\n\t\n\t\t\tif (d > 0.0) {\n\t\t\t\tfloat t = -b - sqrt(d);\n\t\t\t\tif (t > 0.0 && t < dist) {\n\t\t\t\t\tdist = t;\n\t\t\t\t\tsphere.radius = r;\n\t\t\t\t\tsphere.center = cen;\n\t\t\t\t\tfloat odd = mod(k, 2.0);\n\t\t\t\t\tsphere.color = mix(vec3(0.01, 0.01, 0.01), vec3(0.95, 0.81, 0.71), odd);\n\t\t\t\t\tsphere.spec = mix(64.0, 3.0, odd);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tray += dist*dir;\n\tnml = normalize(sphere.center - ray);\n\treturn dist;\n}\n\nvec3 shade(vec3 ray, vec3 dir, vec3 nml, float dist, tSphere sphere)\n{\n\tvec3 col = vec3(0.0, 0.0, 0.0);\n\n\tvec3 lightPos = vec3(cos(iTime*0.1)*-8.5, sin(iTime*.03)*1.4+5.0, sin(iTime*0.1)*4.0-5.4);\n\t\n\tvec3 shadow = ray, snml = vec3(0.0);\n\ttSphere s;\n\tfloat sdist = intersect(shadow, normalize(lightPos - shadow), snml, s);\n\n\tvec3 light = normalize(lightPos - ray);\n\tvec3 specCol = normalize(sphere.color);\n\tif (sphere.radius == 0.0) {\n\t\tlight = normalize(lightPos);\n\t\tsphere.color = vec3(0.75, 0.55, 0.35);\n\t}\n\tif (s.radius == 0.0) {\n\t\t// lighting\n\t\tif (sphere.radius == 0.0) {\n\t\t\tnml = -nml;\n\t\t\tcol = vec3(0.75, 0.55, 0.35);\n\t\t\tsphere.spec = 16.0;\n\t\t\tspecCol = vec3(0.01);\n\t\t} else {\n\t\t\tcol = sphere.color;\n\t\t}\n\t\tfloat diff = max(0.0, dot(nml, -light));\n\t\tvec3 ref = reflect(dir, nml);\n\t\tfloat spec = max(dot(ref, light), 0.0);\n\t\tspec = pow(spec, sphere.spec);\n\t\t\n\t\tcol *= diff;\n\t\tcol += spec * specCol * 2.0;\n\t}\n\tcol += max(0.0, dot(nml, light)) * sphere.color * 0.1;\n\n\treturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv = 2.0 * uv - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n\t\n\tvec3 eye = vec3(0.0, 1.0, -6.0);\n\n\tvec3 dir = normalize(vec3(uv, 1.0));\n\n\tvec3 ray = eye;\n\tvec3 nml = vec3(0.0);\n\t\t\n\tvec3 col = vec3(0.0, 0.0, 0.0);\n\t\n\ttSphere sphere;\n\t\n\tfloat dist = intersect(ray, dir, nml, sphere);\n\n\t//float fog = clamp(dist / 15.0, 0.0, 1.0);\n\t//fog *= fog;\n\t\n\tfloat refF = 0.0;\n\t\n\tvec3 ref = dir;\n\tcol = shade(ray, ref, nml, dist, sphere);\n\n\tif(sphere.radius > 0.0)\n\t{\n\t\tvec3 diff = normalize(sphere.color);\n\t\tref = reflect(ref, nml);\n\t\tdist = intersect(ray, ref, nml, sphere);\n\t\tcol += 0.3 * diff * shade(ray, ref, nml, dist, sphere);\n\n\t\tif(sphere.radius > 0.0)\n\t\t{\n\t\t\tdiff *= normalize(sphere.color);\n\t\t\tref = reflect(ref, nml);\n\t\t\tdist = intersect(ray, ref, nml, sphere);\n\t\t\tcol += 0.15 * diff * shade(ray, ref, nml, dist, sphere);\n\t\t}\n\t}\n\n\t//col = (1.0-fog) * col + fog * vec3(0.9, 0.6, 0.4);\n\t\n\t\n\t// gamma correction\n\tcol = 1.0 - exp(-col * 3.5);\n\t\n\t\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4djGzh","date":"1383668416","viewed":660,"name":"BouncBalls","username":"kig","description":"My first try at a raytracer, yay! It's got shadow rays and two bounces. And an amusing background hack / bug. Now with extra coffee.","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["spheres","shadows","raytrace"],"hasliked":0,"parentid":"","parentname":""}}