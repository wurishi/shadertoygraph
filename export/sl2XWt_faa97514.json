{"ver":"0.1","info":{"id":"sl2XWt","date":"1628907160","viewed":66,"name":"Sci-Fi Light Procedural","username":"Rorybabory","description":"A procedural sci-fi lightmap texture.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["procedural","light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 iRes2 = iResolution.xy;\n    uv = vec2(uv.y, uv.x);\n\n    uv*=2.0f;\n    uv-=1.0f;\n    uv.x*=15.0f;\n    uv.y*=2.0f;\n    uv+=1.0f;\n    uv/=2.0f;\n    //uv.x+=sin(uv.y*30.0f)/200.0f;\n    \n  \n    // Time varying pixel color\n    float wave = sin(uv.y*440.0f);\n    float gradient = uv.x*2.0f;\n    if (gradient > 1.0f) {\n        gradient = -gradient+2.0f;\n    }\n    float gradient_light = uv.x*2.0f;\n    if (gradient_light > 1.0f) {\n        gradient_light = -gradient_light+2.0f;\n    }\n    float lightBloom = sin(uv.x/2.0f+1.27f);\n   // gradient/=2.0f;\n    //gradient*=2.0f;\n    lightBloom = clamp(lightBloom,0.0f,1.0f);\n    float brightness = (lightBloom*(wave*0.1f));\n    brightness += lightBloom*(sin(iTime)+1.0f);\n    vec3 color = vec3(237.0f,252.0f,251.0f);\n    // Output to screen\n    fragColor = vec4(vec3(brightness)*color/255.0f,1.0);\n}","name":"Image","description":"","type":"image"}]}