{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Retrieve the canvas with accumulated circles from Buffer A\n    vec3 canvas = texture(iChannel0, uv).rgb;\n\n    fragColor = vec4(canvas, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"video","id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define NUM_CIRCLES 1000\n#define RAD_CIRCLES 20.\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Retrieve the previous canvas from feedback\n    vec4 previousFrame = texture(iChannel0, uv);\n\n    vec3 accumulatedColor = previousFrame.rgb;\n\n    // Draw multiple circles\n    for (int i = 0; i < NUM_CIRCLES; i++) {\n        // Generate a unique random seed for each circle\n        float seed = iTime + float(i) * 37.0; // Use a combination of time and index\n        vec2 randomPixel = fract(sin(vec2(seed, seed * 1.3)) * vec2(43758.5453, 12745.6531));\n        randomPixel *= iResolution.xy; // Scale to screen resolution\n\n        // Fetch the color from the input image at the random pixel\n        vec3 pixelColor = texture(iChannel1, randomPixel / iResolution.xy).rgb;\n\n        // Calculate distance from the current fragment to the random pixel\n        float dist = distance(fragCoord, randomPixel);\n\n        // Set a smaller circle radius (optionally randomized)\n        float randomFactor = fract(sin(seed) * 43758.5453); // Random value [0.0, 1.0]\n        float circleRadius = RAD_CIRCLES. ;    // Radius between 10.0 and 20.0\n\n        // Draw the circle\n        float circle = smoothstep(circleRadius + 1.0, circleRadius - 1.0, dist);\n\n        // Blend this circle's color with the accumulated color\n        accumulatedColor = mix(accumulatedColor, pixelColor, circle);\n    }\n\n    // Output the updated canvas\n    fragColor = vec4(accumulatedColor, 1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"McGfz3","date":"1734267013","viewed":42,"name":"Circle stipple","username":"Danoontje","description":"stipples the image\n","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["stipple"],"hasliked":0,"parentid":"","parentname":""}}