{"ver":"0.1","info":{"id":"lXVXWD","date":"1719987269","viewed":44,"name":"Rooster'hw3 Fork MyName","username":"RoosterWho","description":"My name\n可以按键盘出字和颜色，但是搞不动buffer","likes":1,"published":1,"flags":16,"usePreview":0,"tags":["font1"],"hasliked":0,"parentid":"sddBWH","parentname":"MyName"},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// The MIT License\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Forking from MyName\n\n//https://www.shadertoy.com/view/sddBWH\n//https://www.shadertoy.com/view/llySRh\n\n\n\n#define C(c) U.x -= .5; O += char(U, 64 + c)\n#define keyDown(ascii) (texelFetch(iChannel1, ivec2(ascii, 0), 0).x > 0.0)\n\n// 输入纹理坐标和旋转角度\nvec2 rotateUV(vec2 uv, float angle) {\n    // 旋转中心点（可根据需要调整）\n    vec2 center = vec2(0.5, 0.5);\n    // 将纹理坐标移到中心点\n    uv -= center;\n    // 计算旋转矩阵\n    float cosAngle = cos(angle);\n    float sinAngle = sin(angle);\n    mat2 rotationMatrix = mat2(cosAngle, -sinAngle, sinAngle, cosAngle);\n    // 应用旋转\n    uv = rotationMatrix * uv;\n    // 将纹理坐标移回原位置\n    uv += center;\n    return uv;\n}\n\nvec4 char(vec2 p, int c) \n{\n    if (p.x < .0 || p.x > 1. || p.y < 0. || p.y > 1.) return vec4(0, 0, 0, 1e5);\n    return textureGrad(iChannel0, p / 16. + fract(vec2(c, 15 - c / 16) / 16.), dFdx(p / 16.), dFdy(p / 16.));\n}\n\nvoid mainImage(out vec4 O, vec2 uv)\n{\n\n    O = vec4(0.0);\n    uv /= iResolution.y;    \n    float t = 0.05 * iTime;\n    float k = 0.3;\n    \n    vec2 position = vec2(-.5,.5);\n    position = vec2( -position.x*2.*abs((sin(35.*k*t))) ,position.y*1.5*abs(sin(85.*k*t + t)) );\n    float FontSize = 5.;\n    vec2 U = (uv - position) * 64.0 / FontSize;\n    vec3 col = vec3(0.5);\n\n\n    // Check for key presses and display corresponding characters\n    for (int i = 0; i < 256; i++) \n    {\n        if (keyDown(i)) // keypressed ascii \n        {\n            C(i-64);\n            k*= 1.3;\n            col = k*vec3(sin(float(i)*.823 *k*t),cos(float(i)*2.12738 *k*t),sin(float(i)*12.8279 *k*t)); \n        }\n    }\n\n    // Outputting \"Rooster's HW3\"\n    C(-32);    // R\n    C(18);    // R\n    C(47);    // o\n    C(47);    // o\n    C(51);    // s\n    C(52);    // t\n    C(37);    // e\n    C(50);    // r\n    C(-25);   // '\n    C(51);    // s\n    C(-32);   // space\n    C(8);     // H\n    C(23);    // W\n    C(-13);   // 3\n\n    O = O.xxxx;\n    vec2 uv_ = rotateUV(uv, 150.*k*t);\n    O -= 0.2*texture(iChannel2, (uv_-vec2(.5))*(20.)*sin(50.*k*t));\n    O += vec4(col,0.6);\n}","name":"Image","description":"","type":"image"}]}