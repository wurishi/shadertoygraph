{"ver":"0.1","info":{"id":"tsKXDz","date":"1573830467","viewed":58,"name":"aguadeltiempo","username":"Pablo17","description":"agua","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["agua"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float C = 6.283185307179586476925286766559;\n\nfloat rand (vec2 st) {\n    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat hash( float n ) {\n    return fract(sin(n)*43758.5453123);\n}\n\nfloat noise( in vec2 x )\n{\n  vec2 p  = floor(x);\n  vec2 f  = smoothstep(0.0, 1.0, fract(x));\n  float n = p.x + p.y*57.0;\n  return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n    mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n}\n\nvec2 rotation(vec2 v, float angle){\n    return v * mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n}\n\n\nfloat bump( vec2 pos )\n{\n  pos *= 1.5;\n  float color = 0.;\n  float width = 1.;\n  vec2 motion = vec2(iTime / 2., iTime / 2.);\n\n  for (int i = 0; i < 5; i++) { \n\tpos = rotation(pos + motion, C / 5.);\n\tcolor += width * noise(pos);\n\twidth *= 0.5;\n  }\n  \n  return fract(color);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tvec3 water = vec3(0.05, 0.05, 0.35);\n\tvec3 specular = vec3(0.8, 0.8, 1.) - water;\n\tfloat res = 35.;\n\tvec3 light = vec3(1.  / res, -(1. - iResolution.y) / res, 10.);\n\tvec2 pos = ((gl_FragCoord.xy + vec2(1., -1.)).xy / vec2(res, res));\n\tvec2 dif = vec2(.0, .03);\n\tvec3 normal = vec3(bump(pos - dif), bump(pos + dif.yx), 1.);\n\tfloat color = dot(normal, normalize(light - vec3(pos, 0.))); \n\twater += specular * color;\n\tfragColor = vec4(water, 1.0);\n}","name":"Image","description":"","type":"image"}]}