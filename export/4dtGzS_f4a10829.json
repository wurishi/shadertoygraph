{"ver":"0.1","info":{"id":"4dtGzS","date":"1450471314","viewed":487,"name":"alien chars","username":"RenoM","description":"random chars","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["2d","ascii","pseudo","chars","characters"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define MAX 524288.\n#define HASH(A) fract(sin(dot(A,vec2(12.9898,78.233)))*43758.5453)\n\nfloat time;\n\n/*\n\n                   each cell is 4 * 5 and represents a random binary number up to 2 ^ 20 - 1\n\n*/\n\nvec3 char(vec2 p, float s)\n{\n    float f = MAX;\n    vec3 c = vec3(0);\n    for(float i = 1.; i < 6.; i++)\n    for(float j = 1.; j < 5.; j++)\n    {\n        if(s >= f)\n        {\n            s -= f;\n            if (i == p.y && j == p.x) c = vec3(0,1,0);\n        }\n        f *= .5;\n    }\n    return c;\n}\n    \nvoid mainImage( out vec4 O, in vec2 U )\n{\n    time = mod(iTime * 30.,1230.);\n    vec2 R = iResolution.xy,\n         p = U / R.y;\n    p.y = 1. - p.y;\n    p = 30. * p * vec2(1.16667,1) + 1.;\n    vec2 f = fract(p) * vec2(6.7);\n    p = floor(p);\n    \n    float line = ceil(time/41.),\n          lim = floor(41. * HASH(p.yy)),\n          r = (p.y - 1.) * 41. + p.x;\n    float s = p.x < lim ? MAX * HASH(p) : p.x == lim && p.y == line && mod(time/8.,2.) >= 1. ? 2.*MAX-1. : .0;\n    \n    vec3 c = r < time ? char(floor(f), s) : vec3(0);\n    \n    O.xyz = c;\n}","name":"Image","description":"","type":"image"}]}