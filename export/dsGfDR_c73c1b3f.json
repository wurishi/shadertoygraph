{"ver":"0.1","info":{"id":"dsGfDR","date":"1698109674","viewed":78,"name":"Square Pixels Rotate Loop","username":"cryptomit","description":"Square pixels rotate loop\nInspired by FabriceNeyret2","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["squarespixelsrotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect_ratio = iResolution.y/iResolution.x;\n\tvec2 uv = fragCoord.xy / iResolution.x;\n    uv -= vec2(0.5, 0.5 * aspect_ratio);\n    float rot = radians(90. -iTime); // radians(45.0*sin(iTime));\n    mat2 rotation_matrix = mat2(cos(rot), -sin(rot), sin(rot), cos(rot));\n   \tuv = rotation_matrix * uv;\n    vec2 scaled_uv = 24.0 * uv; \n    vec2 tile = fract(scaled_uv);\n    float tile_dist = min(min(tile.x, 0.9-tile.x), min(tile.y, 0.9-tile.y));\n    float square_dist = length(floor(scaled_uv));\n    \n    float edge = sin(iTime-square_dist*25.);\n    edge = mod(edge * edge, edge / edge);\n\n    float value = mix(tile_dist, 1.0-tile_dist, step(1.0, edge));\n    edge = pow(abs(1.1-edge), 2.0) * 0.5;\n    \n    value = smoothstep( edge-0.05, edge, 0.95*value);\n    \n    \n    value += square_dist*.1;\n    value *= 0.8 - 0.2;\n    fragColor = vec4(pow(value, 15.9), pow(value, 1.6), pow(value, 1.2), 1.);\n\n}\n//16 25 38 47 ","name":"Image","description":"","type":"image"}]}