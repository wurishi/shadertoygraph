{"ver":"0.1","info":{"id":"dssSzH","date":"1668525476","viewed":65,"name":"Basic sort","username":"green92","description":"Tests on GPU sort","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["sort"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float read(int x, int y) { return texelFetch(iChannel0, ivec2(x, y), 0).x; }\n\nuint hash(uint x) {\n    x = x * 0xA789BCFDu;\n    x = (x ^ (x >> 16)) * 0xA789BCFDu;\n    return x;\n}\n\nfloat process(int col, int line, int maxLine)\n{\n    bool w = (col & 1) == (line & 1);\n    int oi = w ? line-1 : line + 1;\n    float v = read(col, line);\n    if (oi < 0 || oi >= maxLine)\n        return v;\n    float ov = read(col, oi);\n    return !w ? min(v, ov) : max(v, ov);\n}\n\nfloat init(int index)\n{\n    //return 1.0 - float(index) / 255.0;\n    //return cos(float((index + iFrame) % 255) / 255.0 * 3.1415 * 4.0) * 0.5 + 0.5;\n    //return float( ( (index+iFrame) * 0xA789BCFD ) % 359 ) / 358.;\n    return float(hash(uint(index * iFrame))) / float(0x7FFFFFFF) * 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n       ivec2 pix = ivec2(fragCoord);\n       int maxLine = textureSize(iChannel0, 0).y;\n       \n       //if (pix.y > 100) return;\n       \n       if (pix.x == 0)\n       {\n           fragColor = vec4(vec3(init(pix.y)), 1);\n       }\n       else\n       {\n           float result = process(pix.x-1, pix.y, maxLine);\n           fragColor = vec4(vec3(result), 1);\n       }\n}","name":"Buffer A","description":"","type":"buffer"}]}