{"ver":"0.1","info":{"id":"7sB3zc","date":"1617734016","viewed":79,"name":"John","username":"SnoopethDuckDuck","description":"e","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nconst float pi = 3.1415;\nconst float pi2 = 1. * pi / 6.;\nconst float pi3 = 2. * pi / 6.;\n\nfloat osc(float a)\n{\nreturn 0.5 * (1. + cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = fragCoord/iResolution.xy;\nvec2 dir = uv.xy - 0.5;\nfloat ad = length(dir);\n\nfloat theta = atan( dir.y,dir.x);\n//dir += 0.08 * random(vec2(length(dir),length(dir)));\nfloat k = 1. / (1000. * length(dir));\nfloat r = 0.05 * length(dir);\nfloat d = (1. + 0.25 * cos(0.2 * iTime)) * 0.00015 / sqrt(k * k + r *r);\n\nfloat b = osc(0.8 * iTime);\nfloat b2 = osc(0.8 * iTime + pi2);\nfloat b3 = osc(0.8 * iTime + pi3);\n\nfloat val = cos(b *  sin(3.* theta - iTime) + 10. * theta + (d + 1.) * (iTime + 3000.));\nfloat val2 = cos(b2 * sin(3. * theta - iTime + pi2) + 10. * theta + (d+1.) *  (iTime + 3000.) );\nfloat val3 = cos(b3 *sin(3. * theta - iTime + pi3) + 10. * theta + (d + 1.) *(iTime + 3000.) );\n    // Time varying pixel color\n    vec3 col = (1. -ad * ad )  * random(vec2(0.0001* d,0.0001 * d)) * \n    vec3(\n    smoothstep(0.02,val, sqrt(val2 * val2 + val3 * val3)), \n    smoothstep(0.02,val2, sqrt( val * val + val3 * val3)),\n    smoothstep(0.02,val3, sqrt( val2 * val2 + val * val)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}