{"ver":"0.1","info":{"id":"mlBfWd","date":"1694616298","viewed":10,"name":"test-shader-unity","username":"ellyelie","description":"test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n vec4 color = vec4(1.0, 1.0, 1.0, 1.0);\n float _OuterLineDistance = 0.1;\n float _OuterLineWidth = 0.1;\n vec4 _OuterLinesColor = vec4(1.0, 1.0, 1.0, 1.0);\n float _InnerLineDistance = 0.5;\n float _InnerLineWidth = 0.2;\n vec4 _OuterLineColor = vec4(0.0, 1.0, 0.0, 1.0);\n vec4 _DashLineColor = vec4(0.0, 0.0, 1.0, 1.0);\n float _DashesLineCount = 0.1;\n float _DashesFrequency = 2.0;\n vec2 _DashesSpeed = vec2(0.5, 0.0);\n float _DashesLineWidth = 0.1;\n float _DashesHeight = 0.1;\n float _MaskOuter = 0.5;\n float _MaskInner = 0.5;\n vec4 _BackgroundColor = vec4(0.0, 0.0, 0.0, 1.0);\n vec2 appendResult76 = vec2(_OuterLineDistance, 0.0);\n    vec2 texCoord80 = uv.xy * vec2(1.0, 1.0) + appendResult76;\n    vec2 appendResult10_g12 = vec2(_OuterLineWidth, 1.0);\n    vec2 temp_output_11_0_g12 = abs((texCoord80 * 2.0 + -1.0)) - appendResult10_g12;\n    vec2 break16_g12 = 1.0 - (temp_output_11_0_g12 / fwidth(temp_output_11_0_g12));\n    vec2 texCoord81 = uv.xy * vec2(1.0, 1.0) - appendResult76;\n    vec2 appendResult10_g11 = vec2(_OuterLineWidth, 1.0);\n    vec2 temp_output_11_0_g11 = abs((texCoord81 * 2.0 + -1.0)) - appendResult10_g11;\n    vec2 break16_g11 = 1.0 - (temp_output_11_0_g11 / fwidth(temp_output_11_0_g11));\n    vec2 appendResult51 = vec2(_InnerLineDistance, 0.0);\n    vec2 texCoord54 = uv.xy * vec2(1.0, 1.0) + appendResult51;\n    vec2 appendResult10_g8 = vec2(_InnerLineWidth, 1.0);\n    vec2 temp_output_11_0_g8 = abs((texCoord54 * 2.0 + -1.0)) - appendResult10_g8;\n    vec2 break16_g8 = 1.0 - (temp_output_11_0_g8 / fwidth(temp_output_11_0_g8));\n    vec2 texCoord58 = uv.xy * vec2(1.0, 1.0) - appendResult51;\n    vec2 appendResult10_g7 = vec2(_InnerLineWidth, 1.0);\n    vec2 temp_output_11_0_g7 = abs((texCoord58 * 2.0 + -1.0)) - appendResult10_g7;\n    vec2 break16_g7 = 1.0 - (temp_output_11_0_g7 / fwidth(temp_output_11_0_g7));\n    vec2 appendResult192 = vec2(_DashesLineCount, _DashesFrequency);\n    vec2 texCoord20 = uv.xy * appendResult192 - (iTime * _DashesSpeed);\n    float DashesLineWidth92 = _DashesLineWidth;\n    float temp_output_195_0 = _DashesLineCount * DashesLineWidth92;\n    vec2 appendResult10_g17 = vec2(temp_output_195_0, _DashesHeight);\n    vec2 temp_output_11_0_g17 = abs((fract(texCoord20) * 2.0 + -1.0)) - appendResult10_g17;\n    vec2 break16_g17 = 1.0 - (temp_output_11_0_g17 / fwidth(temp_output_11_0_g17));\n    vec2 appendResult226 = vec2(_DashesLineCount, 0.0);\n    vec2 texCoord222 = uv.xy * appendResult192 + (-(iTime * _DashesSpeed) - appendResult226);\n    float cos210 = cos((180.0 * 3.14159265358979323846 / 180.0));\n    float sin210 = sin((180.0 * 3.14159265358979323846 / 180.0));\n    vec2 rotator210 = (texCoord222 - vec2(0.0, 0.0)) * mat2(cos210, -sin210, sin210, cos210) + vec2(0.0, 0.0);\n    vec2 appendResult10_g18 = vec2(temp_output_195_0, _DashesHeight);\n    vec2 temp_output_11_0_g18 = abs((fract(rotator210) * 2.0 + -1.0)) - appendResult10_g18;\n    vec2 break16_g18 = 1.0 - (temp_output_11_0_g18 / fwidth(temp_output_11_0_g18));\n    vec2 appendResult10_g13 = vec2((_MaskOuter * 1.9 - DashesLineWidth92), 1.0);\n    vec2 temp_output_11_0_g13 = abs((uv.xy * 2.0 + -1.0)) - appendResult10_g13;\n    vec2 break16_g13 = 1.0 - (temp_output_11_0_g13 / fwidth(temp_output_11_0_g13));\n    vec2 appendResult10_g14 = vec2((_MaskInner * 4.0 + DashesLineWidth92), 1.0);\n    vec2 temp_output_11_0_g14 = abs((uv.xy * 2.0 + -1.0)) - appendResult10_g14;\n    vec2 break16_g14 = 1.0 - (temp_output_11_0_g14 / fwidth(temp_output_11_0_g14));\n    float temp1 = clamp(min(break16_g12.x, break16_g12.y), 0.0, 1.0) + clamp(min(break16_g11.x, break16_g11.y), 0.0, 1.0);\n    float temp2 = clamp(min(break16_g8.x, break16_g8.y), 0.0, 1.0) + clamp(min(break16_g7.x, break16_g7.y), 0.0, 1.0);\n    float temp3 = clamp(min(break16_g17.x, break16_g17.y), 0.0, 1.0) + clamp(min(break16_g18.x, break16_g18.y), 0.0, 1.0);\n    float temp4 = clamp(min(break16_g13.x, break16_g13.y), 0.0, 1.0) * (1.0 - clamp(min(break16_g14.x, break16_g14.y), 0.0, 1.0));\n    vec4 appendResult159 = vec4((temp1 * _OuterLinesColor + temp2 * _OuterLineColor + _DashLineColor * temp3 * temp4 + _BackgroundColor).rgb, color.a);\n    fragColor = color * appendResult159;\n    fragColor.rgb *= fragColor.a;\n}","name":"Image","description":"","type":"image"}]}