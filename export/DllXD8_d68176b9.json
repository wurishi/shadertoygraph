{"ver":"0.1","info":{"id":"DllXD8","date":"1674682859","viewed":190,"name":"Flying through stars","username":"ianertson","description":"Fake 3D,\ncontrol with mouse","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["space","stars","fake3d","flying"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define T (iTime*0.25)\n#define M_PI (3.1416)\n#define TAU (M_PI * 2.0)\n#define ZERO (min(0, int(iTime)))\n\n\nfloat star(vec2 uv, vec3 p, float radius) {\n    p.xy /= p.z; // 3D projection\n    float dist = distance(uv, p.xy);\n    return clamp(radius / max(0.0001, dist), 0.0, 1.0);\n}\n\n\nvoid mainImage( out vec4 O, in vec2 fc )\n{\n    vec3 col = vec3(0.0);\n    vec2 uv = (fc-0.5*R.xy)/R.y;\n    \n    if (iMouse.z > 0.01) {\n        uv.xy += ((iMouse.xy-0.5*R.xy)/R.y)*TAU;\n    }\n    float FAR = 60.;\n    int count = 100;\n    for (int i = ZERO; i < count; i++) {\n        float v = float(i+1) / float(count);\n        float rnd = fract((float(i)/33.215)+(0.5+(v*TAU))*M_PI);\n        float rnd2 = fract(rnd*10.20194);\n        float rnd3 = fract((rnd+rnd2)*9.392815);\n        \n        float x = (cos(rnd*TAU+v)*(rnd+1.0)) * M_PI;\n        float y = (sin(rnd2*TAU-v)*(rnd2+rnd+1.0)) * M_PI;\n        float z = (fract((-(T*((rnd+rnd2)/2.0)))*M_PI*(0.5+v)))*(0.001+v)*FAR;\n        \n        float s = star(uv,\n            vec3(\n                x,\n                y,\n                z\n            ),\n            mix(0.001, 0.009, rnd2)\n            );\n        s *= smoothstep(v, 0.25, abs(z/FAR));\n        vec3 starColor = vec3(rnd, rnd2, rnd3);\n        col += s * starColor;\n    }\n    \n    O = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}