{"ver":"0.1","info":{"id":"NtVGR1","date":"1637164679","viewed":311,"name":"ReactionDiffusion - MIPmap Lapl2","username":"FabriceNeyret2","description":"Use plugin to accelerate x16.\nUncomment for original shading + mouse paint.\n\nsimplify+golf  [url]https://shadertoy.com/view/7s2Szw[/url] which simplified+golf aiekick [url]https://shadertoy.com/view/MlByzR[/url]","likes":11,"published":3,"flags":32,"usePreview":0,"tags":["diffusion","2tweets","golf","reaction","gpmipmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// golfing 648 chars https://shadertoy.com/view/7s2Szw\n// simplified version of 2882 chars aiekick's https://shadertoy.com/view/MlByzR\n\nM.rrrr;                            // display buffA.r\n\n/*                                 // drop comments for original shading\n    float c = T().g, c2;\n    U--; c2 = T().g;               // c2 = offseted state for lighting\n \n    O =   c*c*1.5\n        + vec4(.2, .4, 1, 0) * max(c2*c2*c2 - c*c*c, 0.)*R.y*.2;  // Shane lighting model\n    O = sqrt(O);\n*/    \n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"M;                                               // previous state\n    float l;\n   \tO.rg = iFrame < 1\n      ? vec2( l = length(U+U-R)/R.y, 1.-l )      // init\n/*    : iMouse.z > 0.                            // drop comments for mouse paint\n      ? l = length( U - iMouse.xy ) / R.y,\n        l < .05 ? vec2( l, 1.-l ) : O.rg \n*/   :                                           // simulates reaction - diffusion\n        O.rg + vec2(1,.3)  *  9./8.* ( T(1.) - T() ).rg // approx Laplacian using MIPmap LOD difference\n             + vec2(.05 * (1. - O.x) - (l = O.x*O.y*O.y), l - .112 * O.y );\n}\n\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R       iResolution.xy//\n#define T(l)    texture( iChannel0, U/R, l+0. )   //\n#define M       void mainImage( out vec4 O, vec2 U ) { O = T()","name":"Common","description":"","type":"common"}]}