{"ver":"0.1","info":{"id":"lttGWr","date":"1468850402","viewed":465,"name":"Laugh wildly","username":"zhucai","description":"Laugh wildly face. Most of code is from https://www.shadertoy.com/view/4t2SRh, thank @candycat.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","distancefield","face"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdfUnion( const float a, const float b )\n{\n    return min(a, b);\n}\n\nfloat sdfDifference( const float a, const float b)\n{\n    return max(a, -b);\n}\n\nfloat sdfIntersection( const float a, const float b )\n{\n    return max(a, b);\n}\n\nfloat sdfCircle(vec2 center, float radius, vec2 coord )\n{\n    vec2 offset = coord - center;\n    return length(offset) - radius;\n}\n\nfloat sdfLine(vec2 p0, vec2 p1, float width, vec2 coord)\n{\n    vec2 dir0 = p1 - p0;\n\tvec2 dir1 = coord - p0;\n\tfloat h = clamp(dot(dir0, dir1)/dot(dir0, dir0), 0.0, 1.0);\n\treturn (length(dir1 - dir0 * h) - width * 0.5);\n}\n\nvec4 render(float d, vec3 color)\n{\n    float anti = fwidth(d) * 1.0;\n    return vec4(color, 1.0-smoothstep(-anti, anti, d));\n}\n\nvec4 render(float d, vec3 color, float stroke, vec3 strokeC)\n{\n    float anti = fwidth(d) * 1.0;\n    vec4 colorLayer = vec4(color, 1.0-smoothstep(-anti, anti, d));\n\n    if (stroke < 0.000001) {\n    \treturn colorLayer;\n    }\n    vec4 strokeLayer = vec4(strokeC, 1.0-smoothstep(-anti, anti, d - stroke));\n    return vec4(mix(strokeLayer.rgb, colorLayer.rgb, colorLayer.a), strokeLayer.a);\n}\n\nvec4 buildEye(vec2 center, float eyeRadius, vec2 uv, float stroke) {\n    float realRadius = eyeRadius * 1.3;\n    vec2 realCenter = vec2(center.x, center.y-(realRadius - eyeRadius));\n    float eyeF = sdfCircle(realCenter, realRadius, uv);\n    eyeF = sdfDifference(eyeF,\n        sdfCircle(realCenter, realRadius - stroke, uv));\n    eyeF = sdfIntersection(eyeF, center.y - uv.y);\n    return render(eyeF, vec3(.4, .4, .4));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat minSize = min(iResolution.x, iResolution.y);\n\tfloat maxSize = min(iResolution.x, iResolution.y);\n    float stroke = 3./minSize;\n\tvec2 uv = fragCoord.xy / maxSize;\n    vec2 center = iResolution.xy/maxSize/2.;\n\n    // animate\n    uv.y += sin(iTime*30.) * .01;\n    \n    // background color\n    vec2 p = (2.0*fragCoord.xy-iResolution.xy)/min(iResolution.y,iResolution.x);\n    vec3 bcol = vec3(1.,.8,.7-.07*p.y)*(1.- .25*length(p));\n    \n    // face\n    float faceRadius = .4;\n    float faceF = sdfCircle(center, faceRadius, uv);\n    vec4 faceC = render(faceF, vec3(1., .83, .0), stroke, vec3(.4, .4, .4));\n    \n    // mouth\n    float mouthWidthHalf = .36;\n    float mouthF = sdfCircle(center, mouthWidthHalf, uv);\n    mouthF = sdfIntersection(mouthF, uv.y - center.y);\n    vec4 mouthC = render(mouthF, vec3(1., 1., 1.), stroke, vec3(.4, .4, .4));\n    \n    // teeth\n    float mouthLeft = center.x - mouthWidthHalf;\n    float toothWidth = mouthWidthHalf / 2.5;\n    float toothLine = 10000.;\n    for (float i=1.; i<5.; i++) {\n        float x = mouthLeft + toothWidth * i;\n        toothLine = sdfUnion(toothLine,\n            sdfLine(vec2(x, 0.), vec2(x, uv.y), stroke, uv));\n    }\n    toothLine = sdfIntersection(toothLine, mouthF);\n    vec4 toothC = render(toothLine, vec3(.4, .4, .4));\n    \n    // eyes\n    float eyeRadius = toothWidth * 0.6;\n    float eyeY = center.y + faceRadius / 2.;\n    float eyeLeftX = center.x - faceRadius / 2.;\n    vec4 eyeLeftC = buildEye(vec2(eyeLeftX, eyeY), eyeRadius, uv, stroke);\n    \n    float eyeRightX = center.x + faceRadius / 2.;\n    vec4 eyeRightC = buildEye(vec2(eyeRightX, eyeY), eyeRadius, uv, stroke);\n    \n    // compose colors\n    fragColor = vec4(bcol, 1.);\n    fragColor.rgb = mix(fragColor.rgb, faceC.rgb, faceC.a);\n    fragColor.rgb = mix(fragColor.rgb, mouthC.rgb, mouthC.a);\n    fragColor.rgb = mix(fragColor.rgb, toothC.rgb, toothC.a);\n    fragColor.rgb = mix(fragColor.rgb, eyeLeftC.rgb, eyeLeftC.a);\n    fragColor.rgb = mix(fragColor.rgb, eyeRightC.rgb, eyeRightC.a);\n}\n\n","name":"Image","description":"","type":"image"}]}