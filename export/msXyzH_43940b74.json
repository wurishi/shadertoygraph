{"ver":"0.1","info":{"id":"msXyzH","date":"1686893170","viewed":82,"name":"Chain tunnel zoomer","username":"seven_dc","description":"chain tunnel zoomer based on Kamoshika tweet. this looks ok on intel mac but is really too sharp on 3070 1440p,\nhttps://twitter.com/kamoshika_vrc/status/1666816100083060741?s=20","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["chaintunnelzoomer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://twitter.com/kamoshika_vrc/status/1666816100083060741?s=20\n\nfloat PI = 3.14159;\n\nmat2 Rotate(float a) {\n  float s = sin(a);\n  float c = cos(a);\n  return mat2(c, -s, s, c);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 o;\n    float t = iTime*.1; // speed\n    \n    vec2 uv = (fragCoord.xy*2.-iResolution.xy)/iResolution.y;\n    \n    // rotate whole screen before effects.\n    vec2 uvr = uv * (fract(t) <  .5 ? Rotate(t*.5) : Rotate(-t*2.5));\n    \n    float zoomspeed = (fract(t*.5) < .5 ? t*.5 : t*2.5);\n    \n    // twist the uv\n    uvr = fract(vec2(log(length(uvr))-sin(zoomspeed),atan(uvr.y,uvr.x)/PI*3.)*1.5)-.5;\n    \n    // twist of the patter\n    float twist = PI*.5;\n    float d = twist;\n    float complexity = floor(5. + sin(t)*3.)/10.;\n    \n    uvr *= Rotate(ceil(atan(uvr.y,uvr.x)/twist-.5) * twist);\n    \n    for( \n        float i=0.;\n        i < 4.;\n        i++\n    ) \n        d = d >.1 ? abs(length(uvr-complexity)-.88) : d, uvr *= Rotate(twist);\n        \n    o += d<.1 ? dot(normalize(vec3(dFdx(d),dFdy(d),0.003)),vec3(.577)) : uv.y;\n    o.r += d*.2;\n   \n\n    // Output to screen\n    fragColor = o;\n}","name":"Image","description":"","type":"image"}]}