{"ver":"0.1","info":{"id":"MlXyRr","date":"1503073397","viewed":226,"name":"Fractal Phoenix","username":"hhhzzzsss","description":"This is what happens when you take the absolute value after each iteration of the Mandelbrot. In this case, I used a third power Mandelbrot, but I guess it isn't really a Mandelbrot set anymore.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","mandelbrot","zoom","phoenix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid iterate(inout vec2 z, vec2 c) {\n\tz = vec2( z.x*z.x*z.x - 3.0*z.x*z.y*z.y, 3.0*z.x*z.x*z.y - z.y*z.y*z.y) + c;\n    z = abs(z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\t\n    \n    float scale = max(pow(0.9, iTime), 0.003);\n    vec2 center = vec2(0.645, 0.417);\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv*2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= scale;\n    uv.y = - uv.y;\n    uv += center;\n    //float theta = iTime*10.0;\n    //mat2 rot = mat2 (cos(theta), sin(theta), -sin(theta), cos(theta));\n    //uv *= rot;\n    \n    vec2 z = uv;\n    vec2 c = uv;\n    \n    float iterations = -1.0;;\n    for (float i = 0.0; i < 1000.0; i++) {\n        iterate(z,c);\n        if (dot(z,z) > 64.0) {\n            iterations = i;\n            break;\n        }\n    }\n    \n    if (iterations >= 0.0) {\n        iterations = iterations + 2.0 - log(log(length(z)))/log(3.0);\n    \n    \tfloat hue = pow(iterations/50.0,0.2);\n    \thue += 0.2;\n    \n\t\tfragColor = vec4(hsv2rgb(vec3(hue,1.0,1.0)) ,1.0);\n    }\n    else fragColor = vec4(vec3(0.0),1.0);\n}","name":"Image","description":"","type":"image"}]}