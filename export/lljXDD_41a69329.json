{"ver":"0.1","info":{"id":"lljXDD","date":"1443921908","viewed":2353,"name":"Cheap Gaussian Blur","username":"jackdavenport","description":"A cheap (but crappy) gaussian blur","likes":4,"published":3,"flags":0,"usePreview":1,"tags":["blur","gaussian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define ITERATIONS 128\n#define RADIUS .3\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec3 sum = texture(iChannel0, uv).xyz;\n    \n    for(int i = 0; i < ITERATIONS / 4; i++) {\n     \n        sum += texture(iChannel0, uv + vec2(float(i) / iResolution.x, 0.) * RADIUS).xyz;\n        \n    }\n    \n    for(int i = 0; i < ITERATIONS / 4; i++) {\n     \n        sum += texture(iChannel0, uv - vec2(float(i) / iResolution.x, 0.) * RADIUS).xyz;\n        \n    }\n    \n    for(int i = 0; i < ITERATIONS / 4; i++) {\n     \n        sum += texture(iChannel0, uv + vec2(0., float(i) / iResolution.y) * RADIUS).xyz;\n        \n    }\n    \n    for(int i = 0; i < ITERATIONS / 4; i++) {\n     \n        sum += texture(iChannel0, uv - vec2(0., float(i) / iResolution.y) * RADIUS).xyz;\n        \n    }\n    \n    fragColor = vec4(sum / float(ITERATIONS + 1), 1.);\n    \n}","name":"","description":"","type":"image"}]}