{"ver":"0.1","info":{"id":"DsfGWn","date":"1665914407","viewed":71,"name":"Fork Fork rando haleyhalcy 300","username":"HaleyHalcyon","description":"a","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"mss3z7","parentname":"Fork randomgrid haleyhalcy 527"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Random integers used for noise\nuint rand[] = uint[] (\n244u, 69u,224u, 39u,208u,151u,201u,255u,\n189u,202u,157u, 92u,206u,154u,199u,194u,\n232u,101u,216u,134u, 62u,242u,163u,248u,\n140u,183u,120u, 90u,215u, 30u,211u,186u,\n150u,100u, 57u,106u,118u,142u, 61u,246u,\n 11u,230u,141u, 55u,147u,180u, 27u,226u,\n 99u,125u,122u, 13u,  2u,112u,192u, 60u,\n137u, 80u,198u,252u, 94u,245u,162u,113u,\n 24u,146u, 49u,110u,253u, 81u, 10u,165u,\n109u,115u,218u,  0u,254u,129u, 71u, 88u,\n187u,114u,176u,243u,  7u, 87u, 45u,209u,\n 23u,168u,103u,121u, 93u,153u, 22u,133u,\n 34u, 78u,241u,182u,221u, 38u,136u,104u,\n 18u,105u,164u, 65u, 91u, 25u,132u,119u,\n174u,173u, 15u,170u, 29u, 37u,212u,210u,\n 44u,169u,181u,251u,  4u,  8u,229u, 79u,\n 32u, 21u,203u,214u, 75u, 12u,225u, 97u,\n 40u, 35u, 28u, 64u,231u, 19u,185u,123u,\n236u, 77u,238u,  5u,128u,179u,127u, 48u,\n 72u,156u,190u, 54u,124u,250u,205u,161u,\n228u, 56u,158u,207u,148u, 17u, 95u, 52u,\n111u,126u, 36u, 74u,197u,152u,160u, 20u,\n219u,130u, 66u,239u,240u,  6u,108u, 47u,\n116u,213u,237u,138u, 70u, 33u, 26u, 46u,\n 96u, 53u, 41u,200u, 59u, 58u,135u, 83u,\n235u, 31u,131u, 63u, 42u,  1u,149u,139u,\n247u,  9u,159u, 73u, 98u,222u, 68u, 51u,\n 67u,144u, 82u,233u,177u,155u,178u, 50u,\n143u, 84u,184u, 85u,217u,166u,193u,145u,\n 89u,107u,172u, 76u,117u,196u, 86u,220u,\n  3u,171u,223u, 16u,167u,195u,191u,102u,\n 14u,188u,227u,234u,204u,249u, 43u,175u\n);\n\n#define TURN (3.14159265 * 2.)\n#define HEX(x) vec3((ivec3(x) >> ivec3(16, 8, 0)) & 255) / 255.\n#define ZIG(x) (1. - abs(1. - 2. * fract(x)))\n\n// Strength of color randomization.\n// 0.0 is none, 1.0 is full (canâ€™t see spiral)\n#define RANDSTRENGTH 0.5\n\n// Strength of horizontal distortion.\n// Unit is screen height.\n#define DISTSTRENGTH 0.1\n\n// 1 divided by Length of one loop.\n#define SPEED (1. / 2.1)\n\n// Random noise [0.0, 1.0) depending on coordinates and time\nfloat randxy(vec2 uv, float t) {\n    return float(rand[\n        (uint(uv.x + 256.) + rand[\n            (uint(uv.y + 256.) + rand[\n                uint(t * 256.)\n            ]) & 255u\n        ]) & 255u\n    ]) / 256.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Make loop every second\n    float time = fract(iTime * SPEED);\n    // Resize coordinates so center is (0, 0) and height is 2\n    vec2 uv = (2. * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    // Horizontal distortion\n    uv.x += DISTSTRENGTH * clamp((\n        (fract(.5 + tan(uv.y * 32. + 8. * time * TURN)) - .5)\n        * (1.2 + sin(uv.y * 7. + time * TURN))\n        * (1.2 + sin(uv.y * 22. + 0.3 + time * TURN))\n    ), -1., 1.);\n    // Generate grid to use for graphics\n    vec2 uvFine = uv * 8.;\n    float OFS = 1.1;\n    mat3x2 uvGrid = mat3x2(\n      vec2(floor(uvFine.x + OFS) - .5, uvFine.y),\n      vec2(floor(uvFine.x      ) - .5, uvFine.y),\n      vec2(floor(uvFine.x - OFS) - .5, uvFine.y)\n    );\n    \n    vec3 noise = vec3(\n        randxy(uvGrid[0], time),\n        randxy(uvGrid[1], time),\n        randxy(uvGrid[2], time)\n    );\n    // Length from center. Logarithm for zoom effect\n    vec3 lenGrid = log(vec3(\n        length(uvGrid[0]),\n        length(uvGrid[1]),\n        length(uvGrid[2])\n    ));\n    // Angle from center. Rescaled so that 1 rotation is 1.0\n    vec3 angleGrid = vec3(\n        atan(uvGrid[0].y, uvGrid[0].x),\n        atan(uvGrid[1].y, uvGrid[1].x),\n        atan(uvGrid[2].y, uvGrid[2].x)\n    ) / TURN;\n    // Spiral pattern underneath.\n    vec3 spiral = (\n        0.5 * lenGrid + // Compression of distance\n        1. * angleGrid // Number of spokes; set to 0 for rings\n    );\n    // Time varying pixel color\n    vec3 col = step(0.65,\n        ZIG(\n             RANDSTRENGTH * noise +\n             2. * spiral +\n             4. * time +\n             0.4 * cos(time * TURN)\n        )\n    );\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}