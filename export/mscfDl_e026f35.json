{"ver":"0.1","info":{"id":"mscfDl","date":"1697758602","viewed":234,"name":"Complementary Flow Adjusted","username":"fishy","description":"Added different tonemapping, dithering, more contrast-y coloring","likes":7,"published":3,"flags":32,"usePreview":1,"tags":["blur","buffer","trails","substep"],"hasliked":0,"parentid":"mddBzX","parentname":"Complementary Flow"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define desat(x) vec3(dot(x, vec3(0.2126, 0.7152, 0.0722)))\n#define DITHER(i) texture(iChannel1, uv * iResolution.xy / iChannelResolution[1].xy)[i]\n\nvec3 tonemap(vec3 c)\n{\n    vec3 g = desat(c);\n    c = mix(g / (g + 1.0), c / (c + 1.0), exp2(-g*0.2));\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 c = texture(iChannel0, uv).rgb;\n    c = tonemap(pow(c, vec3(3)));\n    fragColor = vec4(pow(c+(DITHER(iFrame % 4)-0.5)/128.0, vec3(1)/2.2), 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SUBSTEPS 8.0\n\n#define COLOR_0 vec3(1.000,0.525,0.000)\n#define COLOR_1 (1.0-COLOR_0)\n\nvec2 curve(float t, float k)\n{\n    return vec2(sin(t) - cos(t + k), cos(3.0*t) + sin(4.0 * - k))*0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec3 store = texture(iChannel0, fragCoord/iResolution.xy, 0.1).rgb;\n    \n    for(float i = 0.0; i < SUBSTEPS; i++)\n    {\n        float offset = i / SUBSTEPS * max(0.0, iTimeDelta);\n        float t = max(0.0001, iTime) * 0.5;\n        float k = max(0.0001, iTime) * 0.25;\n        float p0 = 0.3/distance(uv, curve(t + offset, k + offset));\n        float p1 = 0.3/distance(uv, curve(t + offset + 0.5, k + offset + 0.5));\n\n        vec3 col = COLOR_0 * p0 + COLOR_1 * p1;\n\n        store = mix(col, store, pow(0.5, max(0.0, iTimeDelta) / SUBSTEPS));\n    }\n    \n    fragColor = vec4(store, 1);\n}","name":"Buffer A","description":"","type":"buffer"}]}