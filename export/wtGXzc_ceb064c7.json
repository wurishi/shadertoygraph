{"ver":"0.1","info":{"id":"wtGXzc","date":"1583248938","viewed":445,"name":"CubeMap paint + drops + HUD","username":"FabriceNeyret2","description":"Illustrates continuous view-dep update of cubemap.   \nMouse controls view dir.  Arrows keys for zoom (space = reset to 1).\nBright spot spray-painted in view dir, + simulated falling drops + green HUD.","likes":9,"published":3,"flags":48,"usePreview":0,"tags":["cubemap","paint","droplets","drops"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// === display cubeMap + HUD\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 U = ( 2.*u - R ) /R.y;\n    vec3 rayDir = ray(U);\n \n    O -= O;\n    O.b = .7 * ( .5+.5*rayDir.y );       // background env\n    O.g = .3 * ( .5-.5*rayDir.y );\n    O *= .95+.05*sin(100.*rayDir.y);\n // O *= .95+.05*sin(100.*rayDir.y - sin(30.*atan(rayDir.z,rayDir.x)));\n // O = texture(iChannel2, .5+.5*vec2(atan(rayDir.z,rayDir.x)/3.14,rayDir.y)); // cylindrical map\n\n    vec4 T = texture(iChannel0, rayDir); // dynamic env\n    O = mix(O, T, T.a);\n    \n    float c = dot(rayDir, sprite.xyz);   // slow HUD part\n    if (c>.9) O.g += max(0.,1.-100.*abs(c-.98));\n    U = abs(U);                          // fast HUD part\n    if ( length(U)<.1 && min(U.x,U.y) < 2./R.y ) O.g ++;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dX3Rr","channel":0}],"code":"// === update CubeMap: paint around view direction\n\nvoid mainCubemap( out vec4 O, vec2 U, vec3 rayOri, vec3 rayDir )\n{\n    O = texture(iChannel0, rayDir) * .995; // faded past\n\n    vec3 EyeDir = viewDir;      // --- paint in eye direction\n\n#if 1                           // spray\n    vec3 X = normalize (cross(EyeDir,vec3(0,1,0))), // jitter paint dir\n         Y = cross(X, EyeDir);\n    vec2 D = hash12(iTime);\n    D =  .5 * D.x * cos(6.283*(D.y+vec2(0,.25)));\n    EyeDir = normalize( EyeDir + mat2x3(X,Y)*D );\n#endif\n    \n    float c = dot(rayDir,EyeDir);\n    if (c>.9) O = mix( O,\n                       min( texture(iChannel2, U/R)* 2., 1.),  // texture in cubemap frame\n                    // min( texture(iChannel2, (rayDir*mat2x3(X,Y)).xy)* 2., 1.), // texture in eyeDir Frame\n                       pow(max(0.,c), 300.) \n                     );\n\n    \n    for (int i=1; i<81; i++) {  // --- paint drops\n        vec3 P = drop(i).xyz;\n        c = dot(rayDir,P);\n        if (c>.9) O = mix(O,vec4(.5,0,0,1),pow(c,5e3));\n    }\n}","name":"Cube A","description":"","type":"cubemap"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// === view angles (mouse) + drops simulation + HUD sprite\n\n#define key(a)    texelFetch(iChannel3,ivec2(a,1),0).x\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = texelFetch(iChannel1, ivec2(U), 0); // previous state\n    \n    if (U==vec2(.5))           // --- track view angles\n      O.xy = length(iMouse.xy) < 20. \n                ? vec2(3.*cos(.3*iTime),.3*sin(.137*iTime))  // demo mode\n                : (2.*iMouse.xy - R ) / R * vec2(3.14,1.57); // mouse control\n    \n    else if (U==vec2(1.5))    // --- sprite lazy follow mouse\n        if (iFrame==0) \n             O.xyz = vec3(0,-1,0);\n        else O.xyz = normalize( mix(O.xyz, viewDir,.1));\n\n   else if (U==vec2(2.5))     // --- key controls\n        if (iFrame==0) \n              O = vec4(1,0,0,0);\n        else  key(32)>0. ? O.r = 1.\n            : O.r *= 1. + .3*(key(38)-key(40)); // zoom: up/down space=reset\n        \n    else if (U.y==.5)         // --- drops simulation\n        if (iFrame < int(5.*U.x) || O.y < -.995) \n            O.xyz = normalize( vec3( 2.*hash12(U.x+1.73*iTime) -1., 5 )).xzy;\n        else {\n            float l = length(O.xz),\n                  a = atan(O.y,l);\n            a -= .3/60.;\n            O.y = sin(a);\n            if (l>1e-5) O.xz *= cos(a)/l; \n        }\n    \n    else discard;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R         iResolution.xy\n#define rot(a)    mat2 ( cos(a+vec4(0,11,33,0)) )\n#define hash12(p) fract(sin((p)*vec2(127.1,311.7)) *43758.5453123)\n#define viewAngle texelFetch(iChannel1, ivec2(0), 0)\n#define viewDir   ray(vec2(0))\n#define drop(i)   texelFetch(iChannel1, ivec2(i,0), 0)\n#define sprite    texelFetch(iChannel1, ivec2(1), 0)\n#define zoom      texelFetch(iChannel1, ivec2(2), 0).x\n\nvec3 dir;\n\n#define ray(U) (                     \\\n    dir = normalize(vec3(U,zoom)),   \\\n    dir.xz *= rot(viewAngle.x),      \\\n    dir.yz *= rot(viewAngle.y),      \\\n    dir )\n\n","name":"Common","description":"","type":"common"}]}