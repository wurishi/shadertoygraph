{"ver":"0.1","info":{"id":"lsyczy","date":"1522440182","viewed":178,"name":"rotating triforce ","username":"Nitato_","description":"rotating triforce","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","rotation","triforce"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdTriPrism( vec3 p, vec2 h ) {\n    vec3 q = abs(p);\n    return max(q.z-h.y,max(q.x*0.866025+p.y*0.5,-p.y)-h.x*0.5);\n}\nfloat opU(float d1, float d2) {\n\treturn min(d1,d2);\n}\nvec3 mov(vec3 p, vec3 t) {\n\treturn p - t;\n}\nmat3 rotMatrix(vec3 axis, float angle) {\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    return mat3(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c);\n}\nvec3 positionify(vec3 p, vec3 move, vec3 axis, float angle) {\n\tp = mov(p, move);\n    p *= rotMatrix(axis, angle);\n    return p;\n}\nfloat map(vec3 p) {\n    float d1 = sdTriPrism(positionify(p,vec3(-0.875,-0.9,0.),vec3(0.,1.,0.),iTime*1.5), vec2(1.,.1));\n    float d2 = sdTriPrism(positionify(p,vec3(0.875,-0.9, 0.),vec3(0.,1.,0.),-iTime*1.5), vec2(1.,.1));\n    float d3 = sdTriPrism(positionify(p,vec3(0.,0.617, 0.),vec3(1.,0.,0.),-iTime*3.), vec2(1.,.1));\n\treturn opU(d1, opU(d2, d3));\n}\nvec2 trace (vec3 o, vec3 r) {\n\tfloat t = 0.;\n    float i;\n    float precis = .01;\n    for (i = 0.; i < 64.; ++i) {\n    \tvec3 p = o + r * t;\n        float d = map(p);\n        if (d<precis) break;\n        t += d;\n    }\n    return vec2(t, i);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2.*fragCoord-iResolution.xy )/iResolution.y;\n\t\n    vec3 o = vec3(0.0, 0.0, -2.);\n    vec3 r = normalize(vec3(uv, 1.));\n    vec2 t = trace(o, r);\n    vec3 col;\n    \n    t.x>100. ? col = vec3(0.2, 0.1, 0.5)*sin(iTime)*0.5+0.5 : col = vec3(0.5, 0.4, 0.1)*t.x;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}