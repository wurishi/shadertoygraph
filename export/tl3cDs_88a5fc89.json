{"ver":"0.1","info":{"id":"tl3cDs","date":"1610201706","viewed":321,"name":"messing with state","username":"Carandiru","description":"experiments.... yes. patterns are gorgeous!\n\nits like a random auto 2D world that is generated deterministically - a old school landscape.","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["automata","state"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// its like a random auto 2D world that is generated deterministically - a old school landscape.\n// the state patterns are incredible\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    vec3 color;\n    \n    color = vec3(texture(iChannel0, uv * 0.33333f + 0.5f).r);\n\n    // Output to screen\n    fragColor = vec4(pow(color, vec3(17.0f)),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nfloat update(in vec2 fragCoord)\n{\n    ivec2 location = ivec2(fragCoord);\n    \n    float tT = fract(iTime);\n    \n    float state = texelFetch(iChannel0, location, 0).r;\n    \n    float diff = state - tT;\n    \n    float new_state = state * abs(diff);\n    \n    //if ( diff < 0.0f )\n    {\n        new_state = mix(new_state, texelFetchOffset(iChannel0, location, 0, ivec2(0,-1)).r,\n                        bool(new_state < (1.0f/9.0f)));\n\n        new_state = mix(new_state, texelFetchOffset(iChannel0, location, 0, ivec2(-1,0)).r,\n                        bool(new_state < (3.0f/9.0f)));\n\n        new_state = mix(new_state, texelFetchOffset(iChannel0, location, 0, ivec2(-1,-1)).r,\n                        bool(new_state < (3.0f/9.0f)));\n                        \n        new_state = mix(new_state, texelFetchOffset(iChannel0, location, 0, ivec2(1,-1)).r,\n                        bool(new_state < (2.0f/9.0f)));\n    }\n    //else if ( diff > 0.0f )\n    {\n        new_state = mix(new_state, texelFetchOffset(iChannel0, location, 0, ivec2(0,1)).r,\n                        bool(new_state < (1.0f/9.0f)));\n\n        new_state = mix(new_state, texelFetchOffset(iChannel0, location, 0, ivec2(1,0)).r,\n                        bool(new_state < (6.0f/9.0f)));\n\n        new_state = mix(new_state, texelFetchOffset(iChannel0, location, 0, ivec2(1,1)).r,\n                        bool(new_state < (7.0f/9.0f)));\n                        \n        new_state = mix(new_state, texelFetchOffset(iChannel0, location, 0, ivec2(-1,1)).r,\n                        bool(new_state < (8.0f/9.0f)));\n    }\n    \n    return new_state;\n}\n\nfloat init(in vec2 fragCoord)\n{\n    return textureLod(iChannel1, fragCoord / iChannelResolution[1].xy, 0.0).r;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float state;\n    \n    if (0 != iFrame) {\n \n        state = update(fragCoord);\n    }\n    else {\n    \n        state = init(fragCoord);\n    }\n    \n    fragColor = vec4(state,0.0,0.0,0.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}