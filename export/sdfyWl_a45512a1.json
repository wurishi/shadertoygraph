{"ver":"0.1","info":{"id":"sdfyWl","date":"1642880595","viewed":235,"name":"Welcome Back ","username":"Flopine","description":"Kinda feels good to create again :) ","likes":21,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","palette","knot","tore"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\n#define od(p,s) (dot(p,normalize(sign(p)))-s)\n\nfloat stmin (float a, float b, float k, float n)\n{\n    float st = k/n;\n    float u = b-k;\n    return min(min(a,b),.5*(u+a+abs(mod(u-a+st,2.*st)-st)));\n}\n\nfloat box2D (vec2 p, float c)\n{\n    vec2 q = abs(p)-c;\n    return min(0., max(q.x,q.y))+length(max(q,0.));\n}\n\nfloat tore (vec3 p, vec2 s)\n{\n    float a = atan(p.z,p.x)+iTime;\n    vec2 q = vec2(box2D(p.xz,s.x), p.y);\n    q *= rot(a);\n    q.y = abs(abs(q.y)-.4)-0.12;\n    float b2d = box2D(q,s.y);\n    \n    return b2d;\n}\n\nfloat SDF (vec3 p)\n{\n    p.yz *= rot(-atan(1./sqrt(2.)));\n    p.xz *= rot(PI/4.);    \n    \n    return stmin(od(p-vec3(0.,sin(iTime*.1)*0.3+.3,0.),.2), tore(p,vec2(1.5,0.1)), .6, 5.);\n}\n\nvec3 gn (vec3 p, float e)\n{\n    vec2 eps = vec2(e,0.);\n    return normalize(SDF(p)-vec3(SDF(p-eps.xyy),SDF(p-eps.yxy),SDF(p-eps.yyx)));\n}\n\nfloat AO (float e, vec3 p, vec3 n)\n{return SDF(p+e*n)/e;}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    vec3 ro=vec3(uv*2.,-20.), rd=vec3(0., 0., 1.), p=ro,\n    l=normalize(vec3(1.5,2.,-1.)), col=vec3(0.5,0.8,0.95);\n\n    bool hit=false;\n    for(float i=0.; i<100.; i++)\n    {\n        float d = SDF(p);\n        if (d<0.001)\n        {\n            hit=true;break;\n        }\n       p += d*rd*.85;\n    }\n    \n    if (hit)\n    {\n        vec3 n = gn(p,0.001);\n        float light = max(dot(n,l),0.);\n        float ao = AO(0.1,p,n)+AO(0.2,p,n)+AO(0.5,p,n);\n        col = mix(vec3(0.5,0.15,0.2),vec3(0.9,0.5,0.), light);\n        col *= ao;\n    }\n        \n    // Output to screen\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}