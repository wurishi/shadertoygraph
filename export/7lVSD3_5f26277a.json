{"ver":"0.1","info":{"id":"7lVSD3","date":"1641457269","viewed":144,"name":"[Genuary 2022] Destructive Rain","username":"oneshade","description":"Another way to destroy a box.","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["particles","box","destroy","genuary","disintegrate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    float particles = texture(iChannel0, uv).x;\n    float rays = texture(iChannel1, uv).x;\n\n    fragColor = vec4(particles, 0.0, 0.0, 1.0);\n\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    float unit = 2.0 / iResolution.y;\n\n    float dist = box(uv);\n    fragColor.rgb += max(0.0, smoothstep(unit, 0.0, dist) - rays);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define rand(x) fract(485.375 * cos(284.583 * (x) + 824.587))\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float unit = 4.0 / iResolution.x;\n\n    ivec2 iFragCoord = ivec2(fragCoord);\n    fragColor = texelFetch(iChannel0, iFragCoord - ivec2(0, 1), 0);\n\n    if (iFragCoord.y < 1) {\n        float time = floor(float(iFrame) / 4.0) * 0.04;\n        uv.x = floor(uv.x / unit) * unit;\n        bool genBullet = abs(uv.x - 0.25 * sin(5.0 * time) - 0.5) < 0.005 && rand(uv.x - time) > 0.5;\n        float health = mix(0.25, 0.5, rand(uv.x + time));\n        fragColor = vec4(vec2(genBullet), health, 0.0);\n    }\n\n    float rays = texture(iChannel1, uv).x;\n\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    if (box(uv) < 0.0 && rays < 0.5) fragColor.w += 0.1;\n    if (fragColor.w > fragColor.z) fragColor = vec4(0.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float box(in vec2 p) {\n    p.y -= 0.2;\n    p = abs(p) - 0.25;\n    return length(max(p, 0.0)) + min(0.0, max(p.x, p.y));\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = max(texture(iChannel0, uv), texture(iChannel1, uv));\n}","name":"Buffer B","description":"","type":"buffer"}]}