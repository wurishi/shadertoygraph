{"ver":"0.1","info":{"id":"3lBcDV","date":"1595449535","viewed":77,"name":"v0Cherry.glsl","username":"jorge2017a1","description":"Cherry.glsl","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cherryglsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float pi = 3.1415926;\n    float scale = iResolution.y / 5.0;\n\n    vec2 p = fragCoord.xy / scale;\n    float t = iTime * 0.6 + rand(floor(p)) * 200.0;\n    \n    float s2 = 1.6 + 0.6 * sin(t);\n    p = (fract(p) - 0.5) * s2; // repeat and scale\n    scale /= s2;\n\n    float d1 = 1e6; // distance field (petal)\n    float d2 = 0.0;   // distance field (cut)\n\n    for (int i = 0; i < 5; i++)\n    {\n        float phi = pi * (2.0 * float(i / 5) + 0.1) + t;\n\n        vec2 v1 = vec2(cos(phi), sin(phi)); // outward vector\n        vec2 v2 = vec2(-v1.y, v1.x);        // vertical vector\n        vec2 v3 = vec2(cos(phi - 1.0), sin(phi - 1.0)); // cut line 1\n        vec2 v4 = vec2(cos(phi + 1.0), sin(phi + 1.0)); // cut line 2\n\n        d1 = min(d1, max(distance(p, v1 * 0.27 - v2 * 0.15),\n                         distance(p, v1 * 0.27 + v2 * 0.15)));\n\n        d2 = max(d2, min(dot(v3, p) - dot(v3, v1 * 0.4),\n                         dot(v4, p) - dot(v4, v1 * 0.4)));\n    }\n\n    vec2 c12 = vec2(1) - vec2(d1 - 0.29, d2) * scale;\n    vec3 c = max(vec3(1.0, 0.7, 0.7) + p.y, 0.0) * min(c12.x, c12.y);\n\n    fragColor = vec4(c, 1);\n}\n\n\n/*void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n*/","name":"Image","description":"","type":"image"}]}