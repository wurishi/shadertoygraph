{"ver":"0.1","info":{"id":"tsVcRD","date":"1602385771","viewed":203,"name":"Lighting Donut","username":"snolot","description":"test","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGzn","filepath":"/media/a/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","previewfilepath":"/media/ap/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 lightpos = vec3(0),lpRot;\nfloat scatter =0.;\nfloat g;\n\nfloat map(in vec3 p){\n    \n    \n    const vec2 n = vec2(0.0, 1.0);\n    mat3 r = rot(n.yxx, 0.3*iTime) * rot(n.xyx, 0.5*iTime) * rot(n.xxy, 0.7*iTime);\n    mat3 r2 = rot(n.yxx, -0.6*iTime) * rot(n.xyx, -0.2*iTime) * rot(n.xxy, 0.3*iTime);\n    vec3 t = vec3(vec2(1.0, .75)*sin(vec2(0.6, 0.3)*iTime), 0.0);\n \n    float d = sdTorus(r * (p - t), vec2(.65, .3)+ 0.016*prod3(sin(40.0*p)));\n    \n    //float s = sdTorus(r * (p - t - lightpos) ,vec2(.75, .5))/length(lpRot*lpRot);\n    //scatter += max(-s,0.)*0.4;\n    \n    d = smin(d, sdTorus(r2 * (p + t), vec2(.65, .3)+ 0.00025*prod3(sin(60.0*p))), .9);\n\t\n    vec3 pp = p;\n    pp *= rot(vec3(0., 0., 1.), iTime * .6); \n   \tlpRot=(pp-lightpos);\n    pR(lpRot.zx,iMouse.x*-0.03+0.08);\n    pR(lpRot.yz,iMouse.y*0.003-.5);\n\t\n    float s = sdBox(lpRot, vec3(.9))/length(lpRot*lpRot);\n    scatter += max(-s,0.)*0.17;\n    \n    return d;\n}\n\n// https://iquilezles.org/articles/normalsSDF\nvec3 calcNormal( in vec3 pos )\n{\n    const float ep = 0.0001;\n    vec2 e = vec2(1.0,-1.0)*0.5773;\n    return normalize( e.xyy*map( pos + e.xyy*ep ) + \n\t\t\t\t\t  e.yyx*map( pos + e.yyx*ep ) + \n\t\t\t\t\t  e.yxy*map( pos + e.yxy*ep ) + \n\t\t\t\t\t  e.xxx*map( pos + e.xxx*ep ) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    float tt=mod(iTime,62.8318);\n    \n   \tvec3 tot = vec3(.5,0.0,0.0);\n    \n \n    vec2 p = (-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n\n    vec3 ro = vec3(0.0,2.25,5.0);\n    vec3 rd = normalize(vec3(p-vec2(0.0,1.6),-3.5));\n\n    float t = .1;\n    for( int i=0; i<64; i++ ){\n        vec3 p = ro + t*rd;\n        float h = map(p);\n        if( abs(h)<0.001 || t>21.0 ) break;\n        t+=h;\n       \n    }\n\t\n    float theta = iTime * 3.141592 * 0.20;\n    lightpos = vec3(5. * cos(theta), 0.7 + 0.2 * sin(theta*2.0),-2.5); \n    \n    float fog = smoothstep(0.0, .95, t/21.);\n    \n    vec3 col = vec3(.1,.3,.45); \n    col*=-p.y*.5*cos(p.x);\n    \n\t\n    \n    if( t<21.0 ){\n        \n        \n        vec3 pos = ro + t*rd;\n        vec3 nor = calcNormal(pos);\n        vec3 refl = reflect(rd, nor);\n        vec3 r = texture(iChannel0,refl).rgb;\n        float fre = pow( clamp( 1. + dot(nor,rd),0.0,1.0), 2. ); \n        \n        col += (vec3(.75, .5, .25)  ) * scatter * .5 + r * .5  ;// * intensity;\n    }\n\n    \n\tfragColor = vec4( col , 1.0 );\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// https://iquilezles.org/articles/distfunctions\nfloat sdPlane(vec3 p, vec3 n, float h) {\n    return dot(p, n) + h;\n}\n\n// https://iquilezles.org/articles/distfunctions\nfloat sdSphere(vec3 p, float s) {\n    return length(p) - s;\n}\n\n// https://iquilezles.org/articles/distfunctions\nfloat sdBox(vec3 p, vec3 b) {\n    vec3 q = abs(p) - b;\n    return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);\n}\n\n// https://iquilezles.org/articles/distfunctions\nfloat sdTorus(vec3 p, vec2 t) {\n    vec2 q = vec2(length(p.xz) - t.x, p.y);\n    return length(q) - t.y;\n}\n\n// https://iquilezles.org/articles/smin\nfloat smin(float a, float b, float k) {\n    float h = max(k - abs(a - b), 0.0);\n    return min(a, b) - 0.25*h*h/k;\n}\n\n// https://iquilezles.org/articles/smin\nfloat smax(float a, float b, float k) {\n    float h = max(k - abs(a - b), 0.0);\n    return max(a, b) + 0.25*h*h/k;\n}\n\nfloat prod3(vec3 v) {\n\treturn v.x*v.y*v.z;\n}\n\nmat3 rot(vec3 axis, float angle) {\n    float c = cos(angle);\n    float s = sin(angle);\n    vec3 a = axis*(1.0 - c);\n    vec4 b = vec4(axis*s, c);\n    vec2 n = vec2(-1.0, 1.0);\n    return mat3(\n        axis.xyx*a.xxz + b.wzy*n.yxy,\n        axis.yyz*a.xyy + b.zwx*n.yyx,\n        axis.xzz*a.zyz + b.yxw*n.xyy\n    );\n}\n\nfloat sdCone( vec3 p, vec2 c )\n{\n    float q = length(p.xy);\n    return dot(c,vec2(q,p.z));\n}\n\nvoid pR(inout vec2 p,float a) \n{\n\tp = cos(a)*p+sin(a)*vec2(p.y,-p.x);\n}\n\nfloat rand( float n )\n{\n  \treturn fract(cos(n)*4145.92653);\n}\n\nfloat noise(vec2 p)\n{\n  \tvec2 f  = smoothstep(0.0, 1.0, fract(p));\n  \tp  = floor(p);\n  \tfloat n = p.x + p.y*57.0;\n  \treturn mix(mix(rand(n+0.0), rand(n+1.0),f.x), mix( rand(n+57.0), rand(n+58.0),f.x),f.y);\n}\n\nfloat fbm( vec2 p )\n{\n\tmat2 m2 = mat2(1.6,-1.2,1.2,1.6);\t\n  \tfloat f = 0.5000*noise( p ); p = m2*p;\n  \tf += 0.2500*noise( p ); p = m2*p;\n  \tf += 0.1666*noise( p ); p = m2*p;\n  \tf += 0.0834*noise( p );\n  \treturn f;\n}","name":"Common","description":"","type":"common"}]}