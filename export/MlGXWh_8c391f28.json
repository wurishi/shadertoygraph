{"ver":"0.1","info":{"id":"MlGXWh","date":"1484083580","viewed":128,"name":"sierpinski's triangle","username":"krwq","description":"sierpinski's triangle","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sierpinskistriangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265359\n\nbool triangle(vec2 uv) {\n    return 2. - 2. * (abs(uv.x -0.5) + 0.5) - uv.y >= 0. && uv.y >= 0.;\n}\n\nbool circle(vec2 uv) {\n    return length(uv - 0.5) <= 0.5;\n}\n\nbool shape(vec2 uv, float which) {\n    return which > 0.5 ? circle(uv) : triangle(uv);\n}\n\nvec2 sierpinskiOnce(vec2 uv) {\n    uv = (uv.y >= 0.5) ? vec2(uv.x - 0.25, uv.y - 0.5) : vec2(abs(uv.x - 0.5), uv.y);\n    return uv * 2.;\n}\n\nfloat sierpinski(in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float halfRange = 4.;\n    float period = 3.;\n    float limit = -0.5 + halfRange + halfRange * cos(iTime * 2. * pi / period);\n    for (float i = 0.; i < 100.; i += 1.) {\n        if (i >= limit) {\n            break;\n        }\n        \n        uv = sierpinskiOnce(uv);\n    }\n    \n    return shape(uv, mod(iTime / period / 2., 1.)) ? 0. : 1.;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    \n    int level = 3;\n    float step = 1.0 / (float(level) + 1.0);\n    float sum = 0.0;\n    int rowLength = level * 2 + 1;\n    int fields = rowLength * rowLength;\n    for (int cpx = 0; cpx < 300; cpx++) {\n                if (!(cpx < rowLength)) break;\n        int px = cpx - rowLength;\n        for (int cpy = 0; cpy < 300; cpy++) {\n                    if (!(cpy < rowLength)) break;\n            int py = cpy - level;\n            sum += sierpinski(fragCoord + vec2(float(px) * step, float(py) * step));\n        }\n    }\n    \n\tfloat i = (sum + sierpinski(fragCoord)) / float(fields + 1);\n    \n\tfragColor = vec4(vec3(i), 1.);\n}","name":"Image","description":"","type":"image"}]}