{"ver":"0.1","info":{"id":"XltBW2","date":"1541094297","viewed":143,"name":"Playing 2","username":"chrisfewtrell","description":"Some mic input","likes":3,"published":1,"flags":4,"usePreview":0,"tags":["outlands"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float maxFreq = 11025.0;\n    float modTime = mod(iTime, maxFreq);\n    float wav = texture(iChannel0,vec2(modTime/modTime,0.75)).r;\n    \n    float fft1=texture(iChannel0,vec2(300.0/11025.0,0.75)).r;    \n    float fft2=texture(iChannel0,vec2(360.0/11025.0,0.25)).g;    \n    float fft3=texture(iChannel0,vec2(440.0/11025.0,0.25)).b;    \n   \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 4.0;\n\n    // Time varying pixel color\n    vec3 col1 = abs(sin(cos(iTime) + uv.xxx + vec3(0,2,4)));\n    vec3 col2 = abs(cos(cos(iTime + 1.5) + uv.yyy + vec3(3,2,4)));\n    vec3 col3 = 0.5 + 0.5*cos(iTime + uv.yyy + vec3(0,2,4));\n\n    vec3 col = vec3(fft1, fft1, fft1); //col1 * col2 *fft;\n    // Output to screen\n    \n    // contrast \n    //col = col * 0.4 - vec3(1,2,0.01);\n    \n    //col = pow(col, vec3(6,2,1));\n    // col = hsv2rgb(col);\n    fragColor = vec4(col,  0.0);\n}","name":"Image","description":"","type":"image"}]}