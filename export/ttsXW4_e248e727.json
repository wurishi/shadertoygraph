{"ver":"0.1","info":{"id":"ttsXW4","date":"1563060803","viewed":203,"name":"color vortex","username":"takumifukasawa","description":"color vortex","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["color","palette","voltex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ref: https://iquilezles.org/articles/palettes\n// t: 0-1, a: contrast, b: brightness, c: times, d: offset\nvec3 palette(float t, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nmat2 rot(float r) {\n\tfloat s = sin(r), c = cos(r);\n    return mat2(c, -s, s, c);\n}\n\n// t: check value, c: center, w: width, s: smooth \n// must: w > s * 2.\nfloat band(float t, float c, float w, float s) {\n\tfloat inner = c - w * .5;\n    float outer = c + w * .5;\n    return smoothstep(inner, inner + s, t) * smoothstep(outer, outer - s, t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 st = (fragCoord.xy - iResolution.xy * .5) / min(iResolution.x, iResolution.y);\n    vec2 mouse = (iMouse.xy - iResolution.xy * .5) / min(iResolution.x, iResolution.y);\n\n    vec3 color = vec3(0.);\n\n    float d = length(st);\n        \n    vec2 str = rot(-iTime * 2.4 + d * 8.) * st;\n    float r = (atan(str.x, str.y) / 3.14) * .5 + .5;    \n    \n    vec3 pa = palette(\n        r,\n        vec3(.5) + vec3(0., mouse) * .5,\n        vec3(.6),\n        vec3(1.),\n        vec3(0., .1 + cos(iTime * 1.2) * .05, .2 + sin(iTime * .8) * .1)\n    );\n      \n    for(int i = 0; i < 9; i++) {\n        float j = float(i);\n\t\tcolor += pa * band(d, .1 + .1 * j, .24, .035) * (1. - j / 9.); \n    }\n    \n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}