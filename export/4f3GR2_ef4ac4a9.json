{"ver":"0.1","info":{"id":"4f3GR2","date":"1711894137","viewed":60,"name":"Israeli Flag","username":"Kekwdyne","description":"Israel, officially the State of Israel, is a country in the Levant region of West Asia. It is bordered by Lebanon to the north, Syria to the northeast, Jordan to the east, the Red Sea to the south, Egypt to the southwest, the Mediterranean Sea.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["flags"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265358979323846\n#define pii pi * 2.0\n\nvec3 triangle(vec2 uv, vec2 pos, float s, float rotation) {\n    uv *= vec2(iResolution.x, iResolution.y);\n    uv /= max(iResolution.x, iResolution.y);\n    \n    uv -= pos;\n    uv *= 2.0 - 1.0;\n    \n    float a = atan(uv.x, uv.y) + rotation;\n  \tfloat r = pii / float(3);\n    float d = cos(floor(0.5 + a / r) * r - a) * length(uv);\n    return vec3(step(s, d));\n}\nvec3 rect(vec2 uv, vec2 pos, vec2 size) {\n    float f = step(pos.x - size.x, uv.x) - step(pos.x + size.x, uv.x);\n    return vec3(f * step(pos.y - size.y, uv.y) - step(pos.y + size.y, uv.y));\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    uv.x *= ratio;\n    \n    // setup\n    float barOff = 0.35, starOff = 0.06, radius = 0.14;\n    vec2 pos = vec2(0.5 * ratio, 0.5);\n    vec2 size = vec2(0.5 * ratio, 0.08); // used for the bars\n    vec3 blue = vec3(vec2(0), 0.8);\n    \n    // bars \n    vec3 bars = rect(uv, vec2(pos.x, pos.y + barOff), size);\n    bars += rect (uv, vec2(pos.x, pos.y - barOff), size);\n\n    // star of David\n    vec3 star = triangle(vec2(uv.x, uv.y * 2.0), vec2(pos.x, pos.y + starOff), radius, pi);\n    star += 1.0 - triangle(vec2(uv.x, uv.y * 2.0), vec2(pos.x, pos.y + starOff), radius - 0.035, pi);\n    star += triangle(vec2(uv.x, uv.y * 2.0), vec2(pos.x, pos.y + starOff), radius, pii);\n    star -= triangle(vec2(uv.x, uv.y * 2.0), vec2(pos.x, pos.y + starOff), radius - 0.035, pii);\n    star += blue * 2.0;\n\n    // output \n    vec3 col = star - bars;\n    fragColor = vec4(blue + col, 1.0);\n}","name":"Image","description":"","type":"image"}]}