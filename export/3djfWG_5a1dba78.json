{"ver":"0.1","info":{"id":"3djfWG","date":"1590727323","viewed":139,"name":"Wide-angle lens sphere","username":"TAKUSAKU","description":"Wide-angle lens sphere","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["lens","sphere","glass","metal","angle","wide"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy, vec2(0.890,-0.900)))*757.153);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\nfloat fbm ( in vec2 _st) {\n    float v = sin(time*0.3)*0.1;\n    float a = 0.1;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(1.0), -sin(0.5), acos(0.5));\n    for (int i = 0; i < 3; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 2.0 + shift;\n        a *= 2.6;\n    }\n    return v;\n}\n\n// 2D rotate\nmat2 rotate(in float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, s, -s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Wide-angle lens is baced on Menger Sponge Variation\n    // https://www.shadertoy.com/view/ldyGWm\n    vec3 st = (vec3(2.0 * fragCoord.xy - iResolution.xy, iResolution.y));\n    st = normalize(vec3(st.xy, sqrt(max(st.z * st.z - dot(st.xy, st.xy) *4.,0.)))) * 0.3;\n    \n    st.xy *= rotate(time*0.1);\n    st.xz *= rotate(time*0.2);\n    \n    vec2 coord = st.xy;\n    coord.x += 0.1*time;\n    coord.y += 0.2*time;    \n    float len; \n    for (int i = 0; i < 3; i++) {\n        len = length(vec2(coord.x, coord.y));  \n        coord.x +=  sin(coord.y + time * 0.620)*0.1;\n        coord.y +=  cos(coord.x + time * 0.164)*0.1;\n    }\n    len -= 3.;\n     \n    vec3 color = vec3(0.);\n\n    vec2 q = vec2(0.);\n    q.x = fbm( st.xy + 1.0);\n    q.y = fbm( st.xy + vec2(-0.450,0.650));\n\n    vec2 r = vec2(0.);\n    r.x = fbm( st.xy + 1.0*q + vec2(0.570,0.520)+ 0.02*time );\n    r.y = fbm( st.xy + 1.0*q + vec2(0.340,-0.570)+ 0.05*time);\n    \n    for (float i = 0.0; i < 3.0; i++) {\n        r += 1.0 / abs(mod(st.y + st.x,((1.0 + sin(time*0.3))*0.48+0.04) * .5 * i) * 1000.);\n        r += 1.0 / abs(mod(st.y - st.x,((1.0 + sin(time*0.3))*0.48+0.04) * .5 * i) * 1000.);\n    }\n    \n    color = mix(color, cos(len + vec3(0.2, 0.0, -0.5)), 1.0);\n    color = mix(vec3(0.730,0.386,0.372), vec3(0.397,0.576,0.667), color);\n    \n    float f = mix(fbm(st.xy+r),fbm(st.xy+r*0.1),step(0.,abs(st.y)-abs(st.x)));   \n    color = 2.0*(f*f*f+.6*f*f+.5*f)*color;\n    \n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}