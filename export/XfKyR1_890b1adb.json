{"ver":"0.1","info":{"id":"XfKyR1","date":"1731487769","viewed":75,"name":"Kool-aid","username":"anshar","description":"This is my first shader, made to practice what I've learned. Based almost entirely on Kishimisu's video:  https://www.youtube.com/@kishimisu \n\nPosted just to come back in some time and see my progress (and feel a little embarrassed).","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noob","practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.141516;\nfloat sdRoundedX( in vec2 p, in float w, in float r )\n{\n    p = abs(p);\n    return length(p-min(p.x+p.y,w)*0.5) - r;\n}\n\nmat2 rotate(float angle){\n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n}\n\nvec3 palette(float t){\n    vec3 a = vec3(0.8, 0.5, 0.4);\n    vec3 b = vec3(0.2, 0.4, 0.2);\n    vec3 c = vec3(2.0, 1.0, 1.0);\n    vec3 d = vec3(0.00, 0.25, 0.25);\n    return a + b*cos(2.0*PI*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 prim = vec3(0.0,0.0,0.0);\n    float wi = 0.5 + 0.3*cos( iTime);\n    float ra = 0.1 + 0.08*sin(iTime*1.2);\n    uv *= rotate((iTime+0.5)/2.0);\n    vec2 center1 = uv;\n    for(float i = 0.0; i<3.0; i++){\n        uv = fract(uv*1.5)-0.5;\n        float d = sdRoundedX(uv, wi, ra) * exp(-sdRoundedX(uv, wi, i)); \n        float dist = sdRoundedX(center1, wi, ra);\n        vec3 color = palette(dist + i*0.5+sin(iTime/2.0));\n        d = 0.015/clamp(abs((sin(d*8.0+iTime)/8.0)), 0.03, 1.0);\n        prim+=color*d;\n    }\n    fragColor = vec4(prim, 1.0);\n}","name":"Image","description":"","type":"image"}]}