{"ver":"0.1","info":{"id":"td3fDl","date":"1606238275","viewed":85,"name":"RIP if you have epilepsy","username":"Supergamer5465","description":"e","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["e"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro,vec3 rd,vec3 p) {\n    return length(cross(p-ro,rd))/length(rd);\n}\n\nfloat DrawPoint(vec3 ro, vec3 rd, vec3 p) {\n    float d = DistLine(ro, rd, p);\n    d=smoothstep(.1,.09, d);\n    return d;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\tuv-=.5; // -.5 <> .5\n    uv.x*=iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(sin(tan(t*19000.)),sin(tan(t*19000.)),sin(tan(t*19000.)));\n    \n    float zoom=1.;\n    vec3 lap = vec3(.0);\n    vec3 f = normalize(lap-ro);\n    vec3 r = cross(vec3(0.,1.,0.),f);\n    vec3 u = cross(f,r);\n    \n    vec3 c = ro + f*zoom;\n    vec3 i = c+uv.x*r+uv.y*u;\n    vec3 ireverse = c+uv.y*r+uv.x*u;\n    \n    vec3 rd = i-ro;\n    vec3 reverse = ireverse-ro;\n\n    float t2 = iTime+1.5;\n    vec3 p = vec3(sin(t),0.,1.+2.*cos(t));\n    \n    vec3 p2 = vec3(sin(t),0.,1.+2.*cos(t));\n    \n    vec3 p3 = vec3(-sin(t),0.,1.+2.*cos(t));\n        \n    vec3 p4 = vec3(-sin(t),0.,1.+2.*cos(t));\n    \n    vec3 p5 = vec3(sin(t2),-sin(t2),1.+2.*cos(t2));\n    \n    vec3 p6 = vec3(sin(t2),sin(t2),1.+2.*cos(t2));\n    \n    vec3 p7 = vec3(-sin(t2),sin(t2),1.+2.*cos(t2));\n        \n    vec3 p8 = vec3(-sin(t2),-sin(t2),1.+2.*cos(t2));\n    \n    float d = DrawPoint(ro, rd, p);\n    float d2 = DrawPoint(ro, reverse, p2);\n    float d3 = DrawPoint(ro, rd, p3);\n    float d4 = DrawPoint(ro, reverse, p4);\n    float d5 = DrawPoint(ro, rd, p5);\n    float d6 = DrawPoint(ro, reverse, p6);\n    float d7 = DrawPoint(ro, rd, p7);\n    float d8 = DrawPoint(ro, reverse, p8);\n    \n    vec3 spherecolor = vec3(0.06);\n    \n    vec3 backg=0.5 + 0.5*cos(iTime*2.+sin(uv.yyy)+vec3(0,2,4));\n    \n    spherecolor+=vec3(d);\n    spherecolor+=vec3(d2);\n    spherecolor+=vec3(d3);\n    spherecolor+=vec3(d4);\n    spherecolor+=vec3(d5);\n    spherecolor+=vec3(d6);\n    spherecolor+=vec3(d7);\n    spherecolor+=vec3(d8);\n    \n    fragColor = vec4(backg*spherecolor,1.);\n}","name":"Image","description":"","type":"image"}]}