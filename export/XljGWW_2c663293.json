{"ver":"0.1","info":{"id":"XljGWW","date":"1429100994","viewed":135,"name":"Deformation of a circle","username":"frankier","description":"Not very interesting","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2dcircle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define PI 3.14159265359\n\nfloat dist(vec2 vec) {\n    return sqrt(pow(vec.x, 2.0) + pow(vec.y, 2.0));\n}\n\n// https://en.wikipedia.org/wiki/Circular_segment\n\nfloat deformedRadius(float natRadius, float theta) {\n    return sqrt(natRadius * natRadius / (1.0 - 1.0/(2.0*PI)*(theta - sin(theta))));\n}\n\nfloat deformedDistance(float natRadius, float theta) {\n    return natRadius * (1.0 - cos(theta / 2.0));\n}\n\nfloat tri(in float x) {\n    return abs(fract(x) * 2.0 - 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.y - vec2(0.5*iResolution.x/iResolution.y, 0.5);\n    // uv.x -0.8..0.8 uv.y -0.5..+0.5\n    float t = tri(iTime * 0.2);\n    // t 0..1\n    float natRadius = 0.2;\n    float theta = 2.0*atan(t*4.0);\n    //vec2 center = vec2(deformedDistance(natRadius, theta), 0.0);\n    float radius = deformedRadius(natRadius, theta);\n    vec2 center = vec2(deformedDistance(natRadius, theta), 0.0);\n    bool isCircle = dist(uv - center) < radius && uv.x < natRadius;\n\tfragColor = isCircle ?\n        vec4(1.0,1.0,1.0,1.0) :\n    \tvec4(0.0,0.0,0.0,1.0);\n}","name":"","description":"","type":"image"}]}