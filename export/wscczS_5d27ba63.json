{"ver":"0.1","info":{"id":"wscczS","date":"1601143379","viewed":176,"name":"what am i doing with my life","username":"SethHumanBean","description":"i dont know\nturn on the lustre-creme audio from buffer a","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["chromakey","stupid","idk","greensccreen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgb2hsv(vec3 rgb) {\n\tfloat Cmax = max(rgb.r, max(rgb.g, rgb.b));\n\tfloat Cmin = min(rgb.r, min(rgb.g, rgb.b));\n    float delta = Cmax - Cmin;\n\n\tvec3 hsv = vec3(0.0, 0.0, Cmax);\n\t\n\tif (Cmax > Cmin) {\n\t\thsv.y = delta / Cmax;\n\n        if (rgb.r == Cmax) {\n\t\t\thsv.x = (rgb.g - rgb.b) / delta;\n        } else {\n            if (rgb.g == Cmax) {\n\t\t\t\thsv.x = 2.0 + (rgb.b - rgb.r) / delta;\n            } else {\n\t\t\t\thsv.x = 4.0 + (rgb.r - rgb.g) / delta;\n            }\n\t\t}\n\t\thsv.x = fract(hsv.x / 6.0);\n\t}\n\treturn hsv;\n}\n\nfloat chromaKey(vec3 color) {\n\tvec3 backgroundColor = vec3(0.157, 0.576, 0.129);\n\tvec3 weights = vec3(4.0, 1.0, 2.0);\n\n\tvec3 hsv = rgb2hsv(color);\n\tvec3 target = rgb2hsv(backgroundColor);\n\tfloat dist = length(weights * (target - hsv));\n\treturn 1.0 - clamp(3.0 * dist - 1.5, 0.0, 1.0);\n}\n\nvec3 changeSaturation(vec3 color, float saturation) {\n\tfloat luma = dot(vec3(0.213, 0.715, 0.072) * color, vec3(1.0));\n\treturn mix(vec3(luma), color, saturation);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tvec3 color = texture(iChannel1, uv).rgb;\n\tvec3 bg = texture(iChannel0, uv).rgb;\n\t\n\tfloat incrustation = chromaKey(color);\n\t\n\tcolor = changeSaturation(color, 0.5);\n\tcolor = mix(color, bg, incrustation);\n\n\tfragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 rgb2hsv(vec3 rgb) {\n\tfloat Cmax = max(rgb.r, max(rgb.g, rgb.b));\n\tfloat Cmin = min(rgb.r, min(rgb.g, rgb.b));\n    float delta = Cmax - Cmin;\n\n\tvec3 hsv = vec3(0.0, 0.0, Cmax);\n\t\n\tif (Cmax > Cmin) {\n\t\thsv.y = delta / Cmax;\n\n        if (rgb.r == Cmax) {\n\t\t\thsv.x = (rgb.g - rgb.b) / delta;\n        } else {\n            if (rgb.g == Cmax) {\n\t\t\t\thsv.x = 2.0 + (rgb.b - rgb.r) / delta;\n            } else {\n\t\t\t\thsv.x = 4.0 + (rgb.r - rgb.g) / delta;\n            }\n\t\t}\n\t\thsv.x = fract(hsv.x / 6.0);\n\t}\n\treturn hsv;\n}\n\nfloat chromaKey(vec3 color) {\n\tvec3 backgroundColor = vec3(0.157, 0.576, 0.129);\n\tvec3 weights = vec3(4.0, 1.0, 2.0);\n\n\tvec3 hsv = rgb2hsv(color);\n\tvec3 target = rgb2hsv(backgroundColor);\n\tfloat dist = length(weights * (target - hsv));\n\treturn 1.0 - clamp(3.0 * dist - 1.5, 0.0, 1.0);\n}\n\nvec3 changeSaturation(vec3 color, float saturation) {\n\tfloat luma = dot(vec3(0.213, 0.715, 0.072) * color, vec3(1.0));\n\treturn mix(vec3(luma), color, saturation);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tvec3 color = texture(iChannel0, uv).rgb;\n\tvec3 bg = texture(iChannel2, uv).rgb;\n\t\n\tfloat incrustation = chromaKey(color);\n\t\n\tcolor = changeSaturation(color, 0.5);\n\tcolor = mix(color, bg, incrustation);\n\n\tfragColor = vec4(color, 1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}