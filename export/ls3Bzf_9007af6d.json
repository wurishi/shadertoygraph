{"ver":"0.1","info":{"id":"ls3Bzf","date":"1526135626","viewed":138,"name":"ballz","username":"spenot","description":"ballz","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nfloat sphere(vec3 rayPosition, vec3 position, float radius) {\n    return distance(rayPosition, position) - radius;\n}\n\nfloat scene(out vec3 color, in vec3 rayPosition) {\n    const float sphereRadius = 0.6;\n    float sceneDistance = 1.0 / 0.0;\n    for (int i = 0; i < 6; ++i) {\n        float degree = (2.0 * M_PI) / float(6) * float(i);\n\t    vec3 spherePosition = vec3(1.5 * cos(iTime*1.2 + degree), 0.5 * (2.0 * abs(cos(iTime*6.0 + degree)) - 1.0), 5.0 + 1.5 * sin(iTime*1.2 + degree));\n        float distance = sphere(rayPosition, spherePosition, sphereRadius);\n        if (distance < sceneDistance) {\n            sceneDistance = distance;\n#if __VERSION__ >= 300\n            float r = float((i+1)&1);\n            float g = float(((i+1)>>1)&1);\n            float b = float(((i+1)>>2)&1);\n            color = vec3(r, g, b);\n#else\n            color = vec3(0.0, 0.7, 0.4);\n#endif\n        }\n    }\n    \n    float containerDistance = -sphere(rayPosition, vec3(0.0, 0.0, 5.0), 15.0);\n    if (containerDistance < sceneDistance) {\n        sceneDistance = containerDistance;\n        color = vec3(0.5);\n    }\n    \n    float floorDistance = distance(rayPosition.y, -sphereRadius-0.5);\n    if (floorDistance < sceneDistance) {\n        sceneDistance = floorDistance;\n        color = vec3(1.0);\n    }\n    \n    return sceneDistance;\n}\n\nvec3 surfaceNormal(vec3 p) { // ray position\n    float e = 0.001;\n    vec3 color;\n    return normalize(vec3(scene(color, vec3(p.x+e, p.y, p.z)) - scene(color, vec3(p.x-e, p.y, p.z)),\n                          scene(color, vec3(p.x, p.y+e, p.z)) - scene(color, vec3(p.x, p.y-e, p.z)),\n                          scene(color, vec3(p.x, p.y, p.z+e)) - scene(color, vec3(p.x, p.y, p.z-e))));\n}\n\nfloat shadow(vec3 rayPosition, vec3 lightPosition, vec3 surfaceNormal) {\n    const int maxSteps = 256;\n    \n    vec3 rayDirection = normalize(lightPosition - rayPosition);\n    float distanceLeft = distance(lightPosition, rayPosition);\n    \n    rayPosition += rayDirection * 0.02;\n    \n    for (int i = 0; i < maxSteps; ++i) {\n        vec3 sceneColor;\n        float distance = scene(sceneColor, rayPosition);\n        if (distance < 0.001) {\n            return 0.5;\n        }\n        rayPosition += rayDirection * distance;\n        distanceLeft -= distance;\n        if (distanceLeft <= 0.0) {\n            break;\n        }\n    }\n    \n    return 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int maxSteps = 256;\n    \n\tvec2 screenPosition = fragCoord / iResolution.xy - vec2(0.5);\n\tscreenPosition.x *= iResolution.x / iResolution.y;\n    \n    const float cameraDistance = 1.0;\n    \n    vec3 rayPosition = vec3(0.0);\n    vec3 rayDirection = normalize(vec3(screenPosition, cameraDistance));\n    \n    const vec3 backgroundColor = vec3(0.0, 0.0, 0.0);//vec3(1.0, 0.01, 0.35);\n    \n    const vec3 sphereColor = vec3(0.0, 0.7, 0.4);\n    \n    vec3 lightPosition = vec3(8.0 * sin(iTime), 8.0 /** cos(iTime)*/, -4.0);\n    \n    vec3 color = backgroundColor;\n    \n    for (int i = 0; i < maxSteps; ++i) {\n        vec3 sceneColor;\n        float distance = scene(sceneColor, rayPosition);\n        if (distance < 0.001) {\n            vec3 surfaceNormal = surfaceNormal(rayPosition);\n\t\t    vec3 lightDirection = normalize(lightPosition - rayPosition);\n            vec3 shadowColor = vec3(shadow(rayPosition, lightPosition, surfaceNormal));\n\t        color = sceneColor * shadowColor * (0.0 + 1.0 * dot(surfaceNormal, lightDirection));\n            \n            break;\n        }\n        rayPosition += rayDirection * distance;\n    }\n    \n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}