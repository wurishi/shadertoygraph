{"ver":"0.1","info":{"id":"WsfBzj","date":"1588573946","viewed":162,"name":"Menger KIFS","username":"blepfo","description":"Kaleidescope","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","ifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2D KIFS References\n// https://youtu.be/il_Qg9AqQkE\n// http://roy.red/folding-the-koch-snowflake-.html\n\n#define PI (3.141)\n#define MAX_ITERATIONS (16)\n\nmat2 rotate2d(float theta) {\n    return mat2(cos(theta), -sin(theta),\n                sin(theta), cos(theta));\n}\n\n\nfloat lineSdf(vec2 uv, vec2 ends) {\n    return distance(uv, vec2(clamp(uv.x, ends[0], ends[1]), 0.));\n}\n\nfloat circSdf(vec2 uv, float r) {\n    return length(uv) - r;\n}\n\nvec2 fold(vec2 uv, float theta) {\n    vec2 normal = vec2(cos(-theta), sin(-theta));\n    float d = dot(uv, normal);\n    return uv - (2. * min(0., d) * normal);\n}\n\n// Standard menger sponge: theta1 = theta2 = 0.25\nvec2 mengerKifs(vec2 uv, int N, float theta1, float theta2) {\n    for(int i = 0; i < 12; i++) {\n        if (i >= N) { break; }\n        uv *= 3.;  \n        uv.x = abs(uv.x);\n        uv.y = abs(uv.y);\n        uv = fold(uv, theta1 * PI);\n        uv.x -= 1.*sqrt(2.);\n        uv = fold(uv, theta2 * PI);\n        uv.x -= 1.*sqrt(2.);\n    }\n    return uv;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = fragCoord.xy/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 2.;\n    uv *= rotate2d(PI / 4.);\n    \n    \n    uv *= 1.008;\n    // uv == [-1, -1] x [1, 1]\n    \n    float theta1 = 0.25 + sin(iTime*.3) * .1;\n    float theta2 = 0.25 + cos(iTime * .3) * .1;\n    \n\tint ITERATIONS = 6;\n    uv = mengerKifs(uv, ITERATIONS, theta1, theta2);\n    \n    float l = lineSdf(uv, vec2(-1., 1.));\n    //l = circSdf(uv, 1.);\n    \n    float pixelSize = (2. * pow(3., float(ITERATIONS))) / iResolution.x;\n    l = smoothstep(2.*pixelSize, 0., l);\n\n    vec3 color = vec3(0.);\n    //color = vec3(l);\n    //color.rg += sin(uv*5.) * 0.5;\n   \n    color = texture(iChannel0, uv/(pixelSize*iResolution.x)).rgb;\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}