{"ver":"0.1","info":{"id":"MdVBzt","date":"1530068969","viewed":194,"name":"Grown Tree For Stack ","username":"lzjseed","description":"The tree will grown during the time ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["tree","stack","tooneyshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define float2 vec2\n#define float3 vec3\n#define fixed4 vec4\n#define float4 vec4\n#define lerp   mix\n#define frac   fract\n#define float2x2 mat2\n#define mul(a,b) ((b)*(a))\n#define fmod mod\n#define RadToDeg(a) ((a) * 180.0 / 3.1415926)\n#define DegToRad(a) ((a) * 3.1415926 / 180.0)\n\nvoid sincos(float a,out float b,out float c)\n{\n    b = sin(a);\n    c = cos(a);\n}\n\nfloat Circle(float2 p,float r)\n{\n    return smoothstep(r * 0.99,r,length(p));\n}\n\nfloat CircleSmooth(float2 p,float r)\n{\n    return smoothstep(r * 0.9,r,length(p));\n}\n\nfloat rand(float2 co)\n{\n    return frac(sin(dot(co.xy ,float2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat Noise(float2 v)\n{\n    float2 i = floor(v);\n    float2 t = frac(v);\n    float2 u  = t*t*(3.-2.*t);\n\n    return lerp(lerp(rand(i + float2(0,0)),rand(i + float2(1,0)),u.x),\n                lerp(rand(i + float2(0,1)),rand(i + float2(1,1)),u.x),\n                u.y);\n}\n\nfloat sdLinePolar(float2 p,float2 dr)\n{\n    float ss,cs;\n    sincos(dr.x,ss,cs);\n    float2 g = float2(cs,ss);\n    float2 c = p - g*abs(dot(p,g));\n    float a = length(c);\n\n    float t = smoothstep(0.,0.1,a);\n\n    return (1. - t) * (1.-smoothstep(dr.y * 0.98,dr.y,length(p)));\n}\n\nfloat sdLinePolarSmooth(float2 p,float2 dr)\n{\n    float ss,cs;\n    sincos(dr.x,ss,cs);\n    float2 g = float2(cs,ss);\n    float2 c = p - g*abs(dot(p,g));\n    float a = length(c);\n\n    float t = smoothstep(0.,0.3,a);\n\n    return (1. - t) * (1.-smoothstep(0.,dr.y,length(p)));\n}\n\nfloat2 Rotmul(float2 p ,float a)\n{\n    float s,c;\n    sincos(a,s,c);\n    float2x2 rot = float2x2(c,-s,s,c);\n    return mul(rot,p);\n}\n\nfloat3 pow3(float3 a,float b)\n{\n    return float3(pow(a.x,b),pow(a.y,b),pow(a.z,b));\n}\n\n#define PI 3.1415926\n\n//If you want to speed up,change this.\n#define TimelineScale 1. \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    float2 pos = uv * 2. - 1.;\n    float2 canvasPos = pos*float2(13.*iResolution.x/iResolution.y,13.);\n    float2 p = canvasPos;\n\n    fixed4 color = fixed4 (1,1,1,1);\n    float  timeline = iTime*TimelineScale;\n\n    float2 sun = p;\n    float2 moon = p;\n\n    fixed4 skyDay = lerp(fixed4(1,1,1,1),fixed4(60. / 255.0,187. / 255.0,255. / 255.0,1),pow(uv.y,1.4));\n\n    sun = Rotmul(sun + float2(0.,16.),-timeline/2.)- float2(30.,0.);\n\n    fixed4 sky = lerp(fixed4(1.,0.2,0,1),skyDay,CircleSmooth(sun ,3.));\n\n    sun = Rotmul(sun,-timeline);\n\n    for(float i = 0.;i < 8.;i++)\n    {\n        float2 sunLightPos = Rotmul(sun,DegToRad(i*45.))+float2(5.,0.);\n\n        sky = lerp(sky,fixed4(1.,0.2,0.,1.),sdLinePolarSmooth(sunLightPos,float2(DegToRad(180.),3.)));\t\n    }\n\n    float t1 = (fmod(timeline/2.,PI*2.) - PI) / PI;\n    t1 = -t1;\n    t1 = t1 >= 0. ? 1.-pow(abs(t1*2.-1.),1.8): 0.;\n\n    fixed4 skyNight = lerp(fixed4(0.0,0.0,0.0,1),fixed4(0.0,0.0,0.32,1),pow(uv.y,1.4));;\n\n    moon = Rotmul(moon + float2(0.,20.),-timeline/2.)+ float2(30.,0.);\n\n    skyNight = lerp(fixed4(1,1,0,1),skyNight,1.-(1.-CircleSmooth(moon ,2.))*CircleSmooth(moon + float2(1.,1.),2.));\n\n    color = lerp(skyNight,sky,t1);\n\n    color = lerp(fixed4(40.0 / 255.0,81.0 / 255.0,26.0 / 255.0,1.0),color,Circle(pos + pos*rand(abs(pos.xx)) * 0.04 + float2(0,2.7),2.)) ;\n\n    p.y += 10.;\n\n    float3 stack[10];\n    for(int i = 0;i < 10;i ++)\n    {\n        stack[i] = float3(-1,-1,-1);\n    }\n\n    int sp = 0;\n    float num = floor(fmod(timeline/10.,50.));\n    num = min(num,9.);\n    stack[sp++] = float3(p,1);\n\n    while(sp > 0)\n    {\n        float3 pop = stack[--sp];\n        float2 p2 = pop.xy;\n\n        float d = (4.+(2.*rand(float2(sp,pop.z))-1.)*0.3) / pow(1.4,pop.z-1.);\n        float t = sdLinePolar(p2 ,float2(PI / 2.,d));\n\n        fixed4 col = fixed4(56. / 255.0,38. / 255.0,14. / 255.0,1.);\n        if(pop.z == 9.)\n        {\n            col = fixed4(1,0,1,1);\n        }\n        else if(pop.z == 8.)\n        {\n            col = fixed4(29. / 255.0,159. / 255.0,36. / 255.0,1);\n        }\n        if(num > 0.)\n        {\n            color = lerp(color,col,t);\t\n        }\n\n        if(pop.z < num)\n        {\n            stack[sp++] = float3(Rotmul(p2 + float2(0.,-d),DegToRad(33. + sin(iTime*1.5) * (2.) - pow(2.,clamp(pop.z-1.,0.,4.)))),pop.z + 1.);\n            stack[sp++] = float3(Rotmul(p2 + float2(0,-d),DegToRad(-(33. + sin(iTime*1.5) * (-2.) - pow(2.,clamp(pop.z-1.,0.,4.))))),pop.z + 1.);\n        }\n    }\n\n    color.rgb = pow3(color.rgb,0.4545);\n\t\n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}