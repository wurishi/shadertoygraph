{"ver":"0.1","info":{"id":"wllfWB","date":"1597675948","viewed":399,"name":"rounded pixels","username":"sympou","description":"an attempt to make pixels round !\n","likes":15,"published":3,"flags":0,"usePreview":0,"tags":["circlepixels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pixSize = 20.0;\n\n//luminance\nfloat lum(in vec4 pix) { return dot(pix.rgb,vec3(0.3,0.59,0.11));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 div = iResolution.xy/pixSize;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = floor(uv*div)/div;\n    \n    vec2 diff = (uv-uv2)*div;\n    \n    vec4 pix = texture(iChannel0, uv2);\n    \n    if ( pow(diff.x - 0.5,2.0) + pow(diff.y - 0.5,2.0) > 0.25) {\n        \n        vec4 pmax;\n        vec4 pmin;\n        vec2 v2 = pixSize/iResolution.xy;\n\n        if (diff.x<0.5) { v2.x = -v2.x; }\n        if (diff.y<0.5) { v2.y = -v2.y; }\n\n        vec4 p1  = texture(iChannel0, uv2 + vec2( 0.0, v2.y ));\n        vec4 p2  = texture(iChannel0, uv2 + vec2( v2.x, 0.0 ));\n        vec4 p3  = texture(iChannel0, uv2 + vec2( v2.x, v2.y ));\n\n        if ( lum(p1) > lum(p2) ) {\n            pmax = p1;\n            pmin = p2;\n        } else {\n            pmax = p2;\n            pmin = p1;\n        }\n\n        if ( lum(p3) < lum(pmin) ) {\n            pmin = p3;\n        }\n\n        if ( lum(pix) > lum(pmax) ) {\n            pix = pmax;\n        } else if ( lum(pmin) > lum(pix) ) {\n            pix = pmin;\n        }        \n        \n    }\n    \n    fragColor = pix;\n    \n}","name":"Image","description":"","type":"image"}]}