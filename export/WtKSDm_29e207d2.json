{"ver":"0.1","info":{"id":"WtKSDm","date":"1582890231","viewed":520,"name":"scanline spark","username":"Carandiru","description":"prototype scanline","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["scanline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// http://bit.ly/supersinfulsilicon\n\n// shader by Jason Tully is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License.\n// Based on a work at https://www.shadertoy.com/view/WtSBRz\n// Permissions beyond the scope of this license may be available at http://bit.ly/supersinfulsilicon\n\n#define GOLDEN_RATIO (1.61803398874989484820)\n#define GOLDEN_RATIO_MIN_ONE (GOLDEN_RATIO - 1.0)\n#define GOOD_COLOR (vec3(0.8, 0.2, 1.0))\n\n#define LINE (0.01666f)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    float t_second = fract(iTime);\n    \n    float x_spark = 1.0f - \n                                ((uv.y - abs(uv.y - t_second) \n                                 / mod(t_second, (GOLDEN_RATIO_MIN_ONE * 0.1f * t_second) \n                                       / (GOLDEN_RATIO_MIN_ONE * t_second))) * 0.5f + 0.5f );\n    \n    float y_scanline = smoothstep(0.0f, 0.666f, abs(uv.y - t_second));\n    \n    float scanline = LINE / ((LINE*0.666f) + (x_spark * 0.0666f) + y_scanline * GOLDEN_RATIO_MIN_ONE);\n    \n\n    fragColor = vec4(vec3(0.5f, 0.5f, 1.0f) * GOOD_COLOR * scanline, 1.0f);\n}","name":"Image","description":"","type":"image"}]}