{"ver":"0.1","info":{"id":"4XBfzR","date":"1729094011","viewed":10,"name":"Color Lines - Annie","username":"annieqiu","description":"Simple colored line effect","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Green screen function from @iq \n\n// :D :D :D\nvec4 compositeGreenScreenTexture(vec2 uv, vec4 background)\n{\n\n     vec4 tex = texture(iChannel0, uv);\n        \n     float maxrb = max( tex.r, tex.b );\n     float k = clamp( (tex.g-maxrb)*5.0, 0.0, 1.0 );\n\n     float ll = length( tex );\n     tex.g = min( tex.g, maxrb*0.8 );\n     tex = ll*normalize(tex);\n\n     return mix(tex, background, k);\n\n}\n\nvec2 rotate(vec2 uv, float angle)\n{\n    float s = sin(angle);\n    float c = cos(angle);\n    return vec2(c * uv.x - s * uv.y, s * uv.x + c * uv.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float lineX = fract(fragCoord.x * 0.01);\n    \n    // Rotate screen\n    float angle = 10.0;\n    uv = rotate(uv, angle);\n     \n    //I like that: float lineY = fract(fragCoord.y * 0.001);\n    \n    // Time-varying color\n    // red doesn't really move away in github image\n    float r = cos(31.0 * uv.y);\n    float g = cos(iTime - uv.y * 31.0 );\n    float b = cos(iTime + uv.y * 31.0 );\n    \n    vec4 col = vec4(r, g, b, 1.0);\n    \n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}