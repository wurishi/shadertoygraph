{"ver":"0.1","info":{"id":"Mccfzl","date":"1733368941","viewed":21,"name":"Mandelbrot Pixelated","username":"DecCatBurner","description":"Pixelated Mandelbrot Perfect for backgrounds","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.283185*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    float size = 50.0;\n    vec2 uv = round(size*fragCoord*2.5/iResolution.y)/size - vec2(2.5, 1.25);\n    \n    float it = 300.;\n    float i = 0.;\n    vec2 z = vec2(0,0);\n    while (i < it && length(z) < 2.) {\n        z = vec2(z.x*z.x - z.y*z.y, 2.*z.y*z.x) + uv; //c=c^2 + z\n        i+=1.;\n    }\n    // Color black if bounded, or if unbounded by iterations until unbounded\n    vec3 col = vec3(0.,0.,0.);\n    if (i < it) {\n        i /= it;\n        col = vec3(1.)-palette((i)*3.14159265, vec3(.5,1.,.75), vec3(0.5,0.5,1.5), vec3(-1.0,1.0,2.0), vec3(0.0, 0.1, 0.2));\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}