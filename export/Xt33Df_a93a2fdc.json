{"ver":"0.1","info":{"id":"Xt33Df","date":"1471960418","viewed":749,"name":"Test Ocean For Fabrice","username":"Imsure1200q_1UWE130","description":"FabriceNeyret, This Is A Sky Thingy With Ocean. You Think You Can Give Me A Wave Function, PLS?\n\nUpgraded Sky.\n\nYou Can Now Move Scene","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["hi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\nfloat sun( vec3 p )\n{\n    return length(p) - 0.25;\n}\nfloat trace( vec3 ro, vec3 rd )\n{\n    float t = 0.0;\n    for(int i = 0; i < 16; i++)\n    {\n        vec3 p = ro+t*rd;\n        float d = sun(p);\n        t += d * 0.5;\n    }\n    return t;\n}\nmat2 rot( bool f, float t )\n{\n    float x = iMouse.x / iResolution.x;\n    if(f != true)\n    {\n    return mat2(cos(x), -sin(x), sin(x), cos(x));\n    }\n    else return mat2(vec2(t), vec2(t)) - mat2(cos(x), -sin(x), sin(x), cos(x));\n}\nvec4 sunRay( vec2 uv, float time)\n{\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 rd = normalize(vec3(uv, 1.0));\n    vec3 ro = vec3(0.0, tan(time*3.0), -3.0);\n    ro.xz *= rot(false, 0.0);\n    float t = trace(ro, rd);\n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    return vec4(vec3(fog), 1.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 sky;\n    float time = sin(iTime/12.0);\n    sky = vec4(0.4+time, 0.021+time, 0.2 +(time/2.0), 1.0) - pow(time, 3.0);\n    vec4 c = texture(iChannel0, vec2(uv.x + time, uv.y)) - time;\n\tfragColor = vec4(cos(uv.y)) + sky + vec4(vec3(c.x / (13.0 + c.y / 2.0)), 1.0);\n    fragColor += sunRay(uv, time);\n    if(fract(uv.y)+sin(uv.y) < 0.9){\n        fragColor = vec4(sin(uv.y)) + sky + uv.y + (uv.y - 0.25) * c;\n        fragColor += texture(iChannel0, vec2(uv.x * sin(uv.y) / 17.0 - 2.0 + (iTime / 60.0), uv.y * cos(uv.y) + (iTime / 24.0)));\n        \n    }\n}","name":"Image","description":"","type":"image"}]}