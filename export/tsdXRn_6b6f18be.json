{"ver":"0.1","info":{"id":"tsdXRn","date":"1571764073","viewed":75,"name":"simple 3d practise","username":"zrcoy","description":"simple 3d","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistToLine(vec3 p, vec3 ro, vec3 rd)\n{\n    return length(cross(p-ro,rd)) / length(rd);\n}\n\nfloat MakePoint(vec3 p , vec3 ro, vec3 rd)\n{\n\treturn smoothstep(0.1f,0.09f,DistToLine(p,ro,rd));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 xy = fragCoord/iResolution.xy;\n\txy-=.5f;\n    xy.x *=iResolution.x/iResolution.y;\n    \n    \n    \n    vec3 worldUp = vec3(0,1,0);\n    vec3 worldRight = vec3(1,0,0);\n    vec3 worldForward = vec3(0,0,1);\n    vec3 ro = vec3(0,2,-3);\n    //vec3 ro = vec3(3.f * sin(iTime),3.f,-3. * cos(iTime));\n    vec3 offset = vec3(0);\n    ro+=offset;\n\n    //look at system\n    //find intersection point\n    vec3 lookat = vec3(0,0,0);\n    lookat+=offset;\n    float zoom = 1.0f;//decide distance between cam and screen\n    vec3 forward = normalize(lookat - ro);\n    vec3 right = - normalize(cross(worldUp,forward));\n    vec3 up = - cross(forward, right);\n\tvec3 c = ro + forward * zoom;                           \n    vec3 i = c - xy.x * right + xy.y * up;//intersection\n    \n    vec3 rd = i - ro;\n                           \n    //vec3 p = vec3(sin(iTime),0,2.0f+cos(iTime)); \n    \n    vec3 col = vec3(0,0,0);\n    col += MakePoint(vec3(0,0,0),ro,rd);\n    col += MakePoint(vec3(1,0,0),ro,rd);\n    col += MakePoint(vec3(1,1,0),ro,rd);\n    col += MakePoint(vec3(0,1,0),ro,rd);\n    col += MakePoint(vec3(0,0,1),ro,rd);\n    col += MakePoint(vec3(1,0,1),ro,rd);\n    col += MakePoint(vec3(1,1,1),ro,rd);\n\tcol += MakePoint(vec3(0,1,1),ro,rd);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}