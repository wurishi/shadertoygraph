{"ver":"0.1","info":{"id":"ddGyRR","date":"1695694800","viewed":32,"name":"6/49","username":"tono","description":"6","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["49"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat bo(vec3 p , vec3 s){p = abs(p)-s;return max(p.x,max(p.y,p.z));}\nfloat bar(vec2 p , vec2 s){p = abs(p)-s;return max(p.x,p.y);}\nfloat pi = acos(-1.);\nvec2 pmod(vec2 p, float r){float a = atan(p.x,p.y)+pi/r;float n = (pi*2.)/r;return p*rot(-(floor(a/n)*n));}\nvec2 map(vec3 p)\n{\n    p.xz*=rot(iTime/100.);\n    p.x+=(clamp(sin(iTime/2.),-.5,.5)+.5)*pi/4.;\n    p.y+=(clamp(sin(iTime/2.),-.5,.5)+.5)*pi/3.;\n    vec3 op = p;\n    float o = 10.;\n    float id = 0.;\n    for(int i=0;i<3;i++)\n    {\n        p = op+vec3(float(i),0.,0.).xxz*1.3;\n        p.xz*=rot(float(i)*15.);\n        p.yz*=rot(float(i)*15.);\n        p.xz=pmod(p.xz,3.);\n        p.y = sin(p.y/4.)*4.;\n\t\t\n        p = abs(abs(p)-1.6)+.1;\n        p.y=abs(p.y)-.2;\n        if(p.x > p.y)p.xy = p.yx;\n        if(p.y < p.z)p.yz = p.zy;\n        if(p.z < p.x)p.xz = p.zx;\n        p.xz*=rot(pi/6.);\n        float ti =iTime + p.y*2.+float(i)*100.+sin(p.x*10.);\n        float t = floor(ti)+pow(fract(ti),10.);\n        p.y = sin(p.y * (6.)-t*pi/2.)/4.6;\n        p=clamp(tan(p),-.5,.5);\n        \n        o = min(bar(p.xy,vec2(.2)),o);\n    }\n    \n    \n    return vec2(o*=.6,id);\n}\n\nvec2 march(vec3 cp , vec3 rd)\n{\n    float depth = 0.;\n    for(int i = 0 ; i< 128 ; i++)\n    {\n        vec3 rp = cp + rd * depth;\n        vec2 d = map(rp);\n        if(abs(d.x) < 0.001)\n        {\n            return vec2(depth,d.y);\n        }\n        depth += d.x;\n    }\n    return vec2(-depth , 0.);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\tvec3 cp = vec3(0.5,.5,-pi/1.);\n    vec3 target = vec3(0.,0.,0.);\n    //cp.y+=sin(iTime/10.);\n    cp.xz*=rot(iTime/10.);\n    cp.x+=(clamp(sin(iTime/2.),-.5,.5)+.5)*pi/8.;\n    cp.y+=(clamp(sin(iTime/2.),-.5,.5)+.5)*pi/2.;\n    cp.y+=(clamp(sin(iTime/2.),-.5,.5)+.5)*pi/2.;\n    vec3 col = vec3(0.);\n    \n    vec3 cd = normalize(vec3(target - cp));\n    vec3 cs = normalize(cross(cd , vec3(0.,1.,0.)));\n    vec3 cu = normalize(cross(cd,cs));\n    \n    float fov = 2.5;\n    \n    vec3 rd = normalize(cd * fov + cs * p.x + cu * p.y);\n    \n    vec2 d = march(cp,rd);\n    if( d.x > 0.)\n    {\n        vec3 pos = cp + rd * d.x;\n        vec2 e = vec2(1.0, -1.0) * 0.005;\n        vec3 N = normalize(\n                  e.xyy * map(pos + e.xyy).x +\n                  e.yyx * map(pos + e.yyx).x +\n                  e.yxy * map(pos + e.yxy).x +\n                  e.xxx * map(pos + e.xxx).x);\n        col = N;\n        vec3 sun = normalize(vec3(2.,4.,8.));\n        //sun.xz *= rot(iTime);\n        float diff = max(0.,dot(-sun,N));\n        diff = mix(diff , 1.,.1);\n        float sp = max(0.,dot(rd,reflect(N,sun)));\n        sp = pow(sp,53.);\n        float rim = pow(clamp(1. - dot(N, -rd), 0., 1.), 10.);\n        rim=pow(rim,1300.);\n        col = sp * vec3(1.) + diff * vec3(1.) ;\n        col = rim * vec3(1.) + sp+diff/7.;\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}