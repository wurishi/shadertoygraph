{"ver":"0.1","info":{"id":"McXyW4","date":"1722485204","viewed":21,"name":"Glith Test","username":"ARtronClassic","description":"Glith Test","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["glithtest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Offset = 0.01;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Screen Position\n    vec3 sp = iResolution;\n    float sn = SimpleNoise(vec2(uv.y * uv.y,subtract(iTime,trunc(iTime))),500.0);\n    float rp = Remap(sn,vec2(-0.15,1.0),vec2(-1.0,1.0));\n    vec2 result = vec2(rp * Offset / uv.y,0) + uv.xy;\n    vec4 tex = mix(texture(iChannel0,result),vec4(sn),0.5);\n\n    fragColor = texture(iChannel0,result);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float unity_noise_randomValue (vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233)))*43758.5453);\n}\n\nfloat unity_noise_interpolate (float a, float b, float t)\n{\n    return (1.0-t)*a + (t*b);\n}\n\nfloat unity_valueNoise (vec2 uv)\n{\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    f = f * f * (3.0 - 2.0 * f);\n\n    uv = abs(fract(uv) - 0.5);\n    vec2 c0 = i + vec2(0.0, 0.0);\n    vec2 c1 = i + vec2(1.0, 0.0);\n    vec2 c2 = i + vec2(0.0, 1.0);\n    vec2 c3 = i + vec2(1.0, 1.0);\n    float r0 = unity_noise_randomValue(c0);\n    float r1 = unity_noise_randomValue(c1);\n    float r2 = unity_noise_randomValue(c2);\n    float r3 = unity_noise_randomValue(c3);\n\n    float bottomOfGrid = unity_noise_interpolate(r0, r1, f.x);\n    float topOfGrid = unity_noise_interpolate(r2, r3, f.x);\n    float t = unity_noise_interpolate(bottomOfGrid, topOfGrid, f.y);\n    return t;\n}\n\nfloat SimpleNoise(vec2 UV, float Scale)\n{\n    float t = 0.0;\n\n    float freq = pow(2.0, float(0));\n    float amp = pow(0.5, float(3-0));\n    t += unity_valueNoise(vec2(UV.x*Scale/freq, UV.y*Scale/freq))*amp;\n\n    freq = pow(2.0, float(1));\n    amp = pow(0.5, float(3-1));\n    t += unity_valueNoise(vec2(UV.x*Scale/freq, UV.y*Scale/freq))*amp;\n\n    freq = pow(2.0, float(2));\n    amp = pow(0.5, float(3-2));\n    t += unity_valueNoise(vec2(UV.x*Scale/freq, UV.y*Scale/freq))*amp;\n    return t;\n}\n\nfloat Remap(float In, vec2 InMinMax, vec2 OutMinMax)\n{\n    return OutMinMax.x + (In - InMinMax.x) * (OutMinMax.y - OutMinMax.x) / (InMinMax.y - InMinMax.x);\n}\n\nvec4 subtract(vec4 A, vec4 B)\n{\n    return A - B;\n}\n\nvec3 subtract(vec3 A, vec3 B)\n{\n    return A - B;\n}\n\nvec2 subtract(vec2 A, vec2 B)\n{\n    return A - B;\n}\n\nfloat subtract(float A, float B)\n{\n    return A - B;\n}","name":"Common","description":"","type":"common"}]}