{"ver":"0.1","info":{"id":"fdd3Dl","date":"1630878051","viewed":465,"name":"Enord","username":"Kali","description":"6kb intro by Latitude Independent Association (LIA) presented at Flashparty Online 2021\ncode: kali - music: uctumi","likes":39,"published":1,"flags":64,"usePreview":1,"tags":["intro","demoscene"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XllXWj","filepath":"https://soundcloud.com/uctumi/enord-soundtrack-6kb-pc-intro-by-lia","previewfilepath":"https://soundcloud.com/uctumi/enord-soundtrack-6kb-pc-intro-by-lia","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define gt iChannelTime[0]*1.15\n\nfloat t,det=.005, maxdist=300.,lidist=0., drohit=0., ufohit=0., roadhit=0., flohit=0.,coneinside=0.,drofract=0., ufofract=0., drodist, drocone, droroty, drorotx, fg=0.,dtub=0.,eyeglow=0., tenthit=0., headhit=0., monspos, monshit=0.,f=1.,lion=1.,end=0., ray=0., rayglow=0., raytime=0.,tunstart=30.,monstart=330.,notub=0.;\nvec3 from, dronedir, dronepos, ufopos, licolor=vec3(1.,.85,.7), mcolor=vec3(0.,1.,0.), grcolor=vec3(1.,.3,.1);\nvec2 uv;\n\nfloat[] data1 = float[](0.,1.,1.,1.,0.,1.,0.,0.,1.,0.,0.,1.,1.,0.,0.,1.,1.,1.,0.,0.,1.,1.,1.,0.);\nfloat[] data2 = float[](1.,0.,0.,0.,0.,1.,0.,0.,1.,0.,1.,0.,0.,1.,0.,1.,0.,0.,1.,0.,1.,0.,0.,1.);\nfloat[] data3 = float[](1.,0.,0.,0.,0.,1.,1.,0.,1.,0.,1.,0.,0.,1.,0.,1.,0.,0.,1.,0.,1.,0.,0.,1.);\nfloat[] data4 = float[](1.,1.,1.,0.,0.,1.,0.,1.,1.,0.,1.,0.,0.,1.,0.,1.,1.,1.,0.,0.,1.,0.,0.,1.);\nfloat[] data5 = float[](1.,0.,0.,0.,0.,1.,0.,0.,1.,0.,1.,0.,0.,1.,0.,1.,0.,0.,1.,0.,1.,0.,0.,1.);\nfloat[] data6 = float[](0.,1.,1.,1.,0.,1.,0.,0.,1.,0.,0.,1.,1.,0.,0.,1.,0.,0.,1.,0.,1.,1.,1.,0.);\n\n\nfloat rnd(float p, float t) \n{\n    p = fract(p * .1031+gt);\n    p *= p + 33.33;\n    return step(fract(2. * p*p),t);\n}\n\n\nfloat title(vec2 p, float it)\n{\n    float tt=gt-it;\n    if (tt<0.||tt>8.) return 0.;\n    float t=smoothstep(-1.,.5,sin(5.+tt*.7));\n    p.y*=1.5;\n    p.x-=.2;\n    p*=2.;\n    float id=floor(p.x*20.);\n    if (id>23.||id<0.) return 0.;\n    p.x=fract(p.x*20.);\n    float c=0.;\n    c+=step(.2,p.x)*step(.9,p.y)*step(p.y,1.)*data1[int(id)]*rnd(id,t);\n    p.y+=.12;\n    c+=step(.2,p.x)*step(.9,p.y)*step(p.y,1.)*data2[int(id)]*rnd(id+100.,t);\n    p.y+=.12;\n    c+=step(.2,p.x)*step(.9,p.y)*step(p.y,1.)*data3[int(id)]*rnd(id+200.,t);\n    p.y+=.12;\n    c+=step(.2,p.x)*step(.9,p.y)*step(p.y,1.)*data4[int(id)]*rnd(id+300.,t);\n    p.y+=.13;\n    c+=step(.2,p.x)*step(.9,p.y)*step(p.y,1.)*data5[int(id)]*rnd(id+400.,t);\n    p.y+=.13;\n    c+=step(.2,p.x)*step(.9,p.y)*step(p.y,1.)*data6[int(id)]*rnd(id+500.,t);\n    p.y+=.13;\n    return c;\n}\n\n\n\nfloat hash(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n\nmat3 lookat(vec3 dir, vec3 up) \n{\n\tdir=normalize(dir);vec3 rt=normalize(cross(dir,normalize(up)));\n    return mat3(rt,cross(rt,dir),dir);\n}\n\n\nmat2 rot(float a)\n{\n    float s=sin(a), c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nvec3 path(float t)\n{\n    float s=sin(t*.1),c=cos(t*.05);\n    vec3 p=vec3(vec2(s*s,c*c*c)*5.,t);\n    p.y+=smoothstep(.0,.5,abs(.5-fract(t*.02)))*10.;\n    return p;\n}\n\nfloat fractal(vec2 p, float anim, int iter)\n{\n    p=abs(10.-mod(p,20.))-10.;\n    float ot=1000.;\n    for (int i=0; i<iter; i++)\n    {\n        p=abs(p)/clamp(p.x*p.y,.25,1.)-2.;\n        ot=min(ot,abs(p.y)+.7*anim*fract(abs(p.x)*.1+gt*.5+float(i)*.25));\n        \n    }\n    ot=exp(-5.*ot);\n    return ot;\n}\n\nfloat box(vec3 p, vec3 l)\n{\n    vec3 c=abs(p)-l;\n    return length(max(vec3(0.),c))+min(0.,max(c.x,max(c.y,c.z)));\n}\n\n\nfloat kset(vec3 p, float g)\n{\n    float m=100.,z=p.z*.2;\n    p=abs(fract(p*.1)-.5);\n    for (int i=0; i<5;i++)\n    {\n        p=abs(p);\n        p=p/dot(p,p)-.8;\n        m=min(m,abs(length(p)-.5));\n    }\n    m=exp(-2.*m);\n    fg+=max(0.,.7-m)*(1.+sin(p.x*4.+t)*1.)*roadhit*g;\n    return m;\n}\n\n\nvec3 sky(vec3 dir)\n{\n\tfloat s=.5,fade=1., fade2=1., pa=0., sd=0.1;\n\tvec3 v=vec3(0.);\n\tfor (float r=0.; r<5.; r++) {\n\t\tvec3 p=s*dir+vec3(.3,.4,.5);\n        mat2 rt=rot(r);\n        p.xz*=rt;\n        p.xy*=rt;\n        p.yz*=rt;\n\t\tp = abs(1.-mod(p,2.)); \n\t\tfloat pa,a=pa=0.;\n\t\tfor (int i=0; i<12; i++) { \n\t\t\tp=abs(p)/dot(p,p)-.7; \n\t\t\tfloat l=(length(p)-(p.x+p.y)*.5)*1.5;\n\t\t\ta+=abs(l-pa); \n\t\t\tpa=length(p);\n\t\t}\n\t\tsd+=.5;\n\t\tfloat cv=abs(2.-mod(sd,4.));\n\t\tv+=normalize(vec3(cv,cv*cv,cv*cv*cv))*pow(a*.015,2.)*fade; \n\t\tpa=a;\n\t\ts+=.01;\n\t}\n\tv=mix(vec3(length(v)*.5),v,.5)*.7; \n\treturn min(vec3(1.),v*f);\t\n}\n\n\n\nfloat road(vec3 p)\n{\n    float start=-p.z+tunstart;\n    mat2 rot1=rot(p.z*.01+p.x*.02);\n    mat2 rot2=rot(radians(-30.*sign(p.y)));\n    p.y=-abs(p.y)-3.;\n    float z=p.z,d=p.y;\n    p.z=mod(p.z,10.)-5.;\n    float der=1., sc=1.1;\n    float m=100.;\n    for (int i=0; i<5; i++)\n    {\n        p=abs(p);\n        der*=sc;\n        p=p*sc-1.5;\n        p.xz*=rot1;\n        p.yz*=rot1;\n        p.xy*=rot2;\n    }\n    d=max(d, -box(p,vec3(5.,5.,20.))/der);\n    d=max(abs(d)-.5, start);\n    return d*.5;\n}\n\n\nfloat disk(vec3 p){\n    p-=ufopos;\n    float l=length(p)-20.;\n    if (l>.1&&ray<.5&&drocone>1.) return l;\n    p.xz*=rot(gt*.2);\n    p/=4.;\n    vec2 pr=vec2(atan(p.x,p.z)*2.,length(p)-.75);\n    ufofract=fractal(pr,0.,6);\n    p.y+=ufofract*.05;\n    float r=1.-pow(length(p.xz),2.)*.055,disk=max(max(abs(p.y)-r,length(p.xz)-4.),-length(p.xz)+1.);\n    return disk*3.;\n}\n\nfloat monster(vec3 p){\n    p.xy-=path(p.z+5.).xy; \n    p.z-=monspos;\n    p.y+=raytime*1.5;\n    p.yz*=rot(sin(-raytime*.1)*.5);\n    p*=.7;\n    float l=length(p.xy)-2.;\n    if (l>.1&&ray<.5&&drocone>1.) return l;\n    p.xy*=rot(gt*2.*(1.-ray)+p.z*.2*smoothstep(0.,20.,p.z));\n    vec3 p2=p;\n    p.xy=abs(p.xy)-.7+cos(p.z+1.)*.8*smoothstep(10.,0.,p.z);\n    float cyl=length(p.xy)-.2*smoothstep(0.,1.,p.z)-.02-sin(p.z*10.)*.03;\n    p=p2;\n    cyl=max(cyl,-p.z);\n    p.z-=4.;\n    float sph=length(p)-1.8-sin(atan(p.x,p.y)*10.)*.05-sin(p.z*20.)*.05;\n    sph=min(sph,max(length(p.xy)-.5,-p.z));\n    float d=cyl;\n    d=min(d,sph);\n    p.z+=1.7;\n    float eye=length(p)-.4;\n    d=min(d,eye);\n    eyeglow+=.2/(.5+eye*20.);\n    headhit=step(sph,d);\n    tenthit=step(cyl,d);\n    return d;\n}\n\nfloat drone(vec3 p) \n{\n    float l=length(p)-3.;\n    if (l>.1) return l;\n    p.yz*=rot(-droroty*step(1.15,abs(p.x)));\n    drofract=fractal(p.xy*.5,0.,6);\n    float dro=max(length(p)-3.+pow(drofract,.1)*.3,-length(p+vec3(0.,0.,3.))+.6);\n    p.x=abs(abs(p.x)-1.1)-.1;\n    dro=max(dro,-abs(p.x)+.07)*.6;\n    return dro;\n}\n\n\nfloat de(vec3 p)\n{\n    vec3 p2=p;\n    p-=dronepos;\n    p=lookat(dronedir,vec3(0.,1.,0.))*p;\n    p.xz*=rot(drorotx);\n    p.yz*=rot(droroty);\n    drocone=max(length(p.xy)+p.z*.25+.3,p.z+2.8)+10.-lion*10.;\n    float dro=drone(p);\n    p.z+=2.;\n    float drolight=length(p)-.5;\n    p=p2;\n    p.xy-=path(p.z).xy;\n    float roa=road(p);\n    float k=kset(p*.2,0.)*2.*smoothstep(100.,20.,abs(p.x));\n    float flo=(p2.y+2.-smoothstep(-10.,tunstart,p2.z)*20.*smoothstep(200.,0.,abs(p2.x))+k);\n    float hue=length(p.xy)-17.;\n    flo=max(flo,-hue+k*.5)*.5;\n    roa-=kset(p2,1.)*.4*f;\n    float d=min(dro,drolight);\n    float tub=(length(abs(p.xy*rot(p2.z*.05+.7))-6.+sin(p.z*.5)*.5)-.5-sin(p.z*30.)*.02)*.5;\n    float ufo=disk(p2);\n    float mons=monster(p2);\n    float rayo=length((p2-ufopos).xz)-.5;\n    drocone=max(drocone,-roa+.1);\n    drocone=max(drocone,-tub+.5);\n    drocone=max(drocone,-flo+2.);\n    drocone=max(drocone,-ufo+1.);\n    d=min(d,drocone);\n    d=min(d,roa+.2);\n    d=min(d,tub+notub);\n    d=min(d,flo);\n    d=min(d,ufo);\n    d=min(d,mons);\n    d=min(d,rayo+1.-ray);\n    dtub=step(tub,d);\n    drohit=step(dro,d);\n    ufohit=step(ufo,d);\n    roadhit=max(step(roa,d),dtub);\n    flohit=step(flo,d);\n    monshit=step(mons,d);\n    coneinside=step(drocone,d);\n    lidist=.1/(.002+drolight*drolight*2.);\n    rayglow+=.2/(.1+rayo*.2*smoothstep(20.,0.,-p2.y+raytime*.5));\n    if (coneinside>.5 && d<.1) return clamp(abs(d),.2,.25);\n    fg*=max(0.,1.-d*.1)*(1.-dtub);\n    return d;\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e=vec2(0.,det);\n    return normalize(vec3(de(p+e.yxx),de(p+e.xyx),de(p+e.xxy))-de(p));\n}\n\nfloat ao(vec3 p, vec3 n) {\n\tfloat st=.05;\n\tfloat ao=0.;\n    for(float i=0.; i<6.; i++ ) {\n        float td=st*i*i;\n        float d=de(p+n*td);\n        ao+=max(0.,(td-d)/td);\n    }\n    return clamp(1.-ao*.3,0.,1.);\n}\n\n\nvec3 matrix(vec3 p)\n{\n    vec3 n=normalize(p-dronepos);\n    p.xy-=path(p.z).xy;\n    float c=0.;\n    if(coneinside<.5) c+=(fractal(p.xy,2.,5)+fractal(p.xz,2.,5)+fractal(p.yz,2.,5));\n    c=c*(1.-drohit)+drohit*drofract*.5; // optimizar\n    return grcolor*c*c*2.;\n}\n\n\nvec3 march(vec3 from, vec3 dir)\n{\n    float ns;\n    vec3 p, col=vec3(0.),cl=col;\n    float dl=0.;\n    float d, td=0.,foff;\n    float h=(.5-hash(gl_FragCoord.xy+gt*10.))*.15;\n    for (int i=0; i<300; i++)\n    {\n        p=from+td*dir;\n        d=de(p)*(1.+h);\n        if (d<det || td>maxdist) break;\n        td+=d;\n        det*=1.+td*.0;\n        if (f<.5) col+=matrix(p)/(2.+d*d*30.)*exp(-.001*td*td)*step(1.,td)*.5;\n        foff=exp(-.2*distance(p,dronepos));\n        cl+=(coneinside+.0*dtub)/(1.+d*d)*mix(grcolor,licolor,f)*foff;\n    }\n    float fade=exp(-.001*td*td);\n    if (d<.1) {\n        vec3 n=normal(p);\n        float camli=max(0.,dot(normalize(dronepos-p),n));\n        col+=camli*(.5+dtub)*fade*f*(roadhit+flohit)*mix(vec3(1.),licolor,lion)*foff*8.;\n        col+=f*(drohit+ufohit*.5)*.2*max(0.,dot(dir,-n))*licolor;\n        float fr=pow(drofract,.4);\n        col-=f*smoothstep(.8,.9,fr)*.2*drohit;\n        col+=f*smoothstep(.31,.3,fr)*.2*drohit;\n        fr=pow(ufofract,1.);\n        col-=f*smoothstep(.7,1.,fr)*.2*ufohit;\n        col+=f*smoothstep(.3,.5,fr)*.15*ufohit;\n        col+=1./(.0+drocone)*licolor*f*roadhit*lion*foff;\n        col+=10./(5.+drocone*drocone*.2)*licolor*f*roadhit*lion*foff;\n        col+=roadhit*grcolor*smoothstep(15.,0.,abs(p.z-monspos-10.))*1.;\n        if (roadhit>.5) col=col*max(ao(p,n),max(0.,1.-drocone*.15));\n        float k=smoothstep(0.,3.,kset(p*4.,0.));\n        if (p.z<tunstart||length(p.xy)>9.) col+=max(0.,n.y)*(.1*k+.2*(1.-flohit))*(1.-drohit)*f*(step(gt,35.)+end);\n        if (flohit>.5) col+=k*ao(p,n)*f;\n        col+=headhit*monshit*max(0.,dot(-dir,n))*grcolor*.3;\n        col*=exp(-.00003*td*td);\n    } else {\n        col=sky(dir)*smoothstep(-.3,-.1,dir.y);\n        \n    }\n    fg*=smoothstep(59.,60.,gt)*smoothstep(74.,73.,gt)+smoothstep(71.,72.,gt)*0.;\n    col+=cl*lion*.07+lidist*(.01+lion)*licolor+fg*grcolor*fade*f*(1.-drohit)*(1.-monshit)+h*.3;\n    col+=eyeglow*grcolor*.7+rayglow*.1*ray;\n    return col;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n    uv*=1.5;\n    vec2 uv2=uv, uv3=uv;\n    //if (abs(uv.y)<.55){\n    t=(gt-30.)*5.;\n    if(t>monstart-100.) t=t*2.-monstart+100.;\n    float s=sin(gt*.25+2.), c=cos(gt*.5+2.);\n    float dt=t, drorot=smoothstep(41.,42.,gt), ufot=0., dark=1.;\n    drorotx=s*s*s*s*s*4.*drorot;\n    droroty=c*c*c*drorot;\n    from=path(t+0.)+vec3(13.,-10.,0.);\n    vec3 adv=path(t+10.);\n    if (gt>35.) {\n        from=path(75.)+vec3(0.,-4.,0.);\n        adv=path(10.);\n        dark=.5;\n    }\n    if (gt>42.) {\n        from=path(t+0.);\n        adv=path(t+10.);\n        dark=1.;\n    }\n    if (gt>51.) {\n        from=path(150.);\n        from.x+=4.;\n        from.y+=0.;\n        adv=path(140.);\n    }\n    if (gt>58.) {\n        from=path(t+30.);\n        adv=path(t+10.);\n    }\n    if (t>monstart-100.) {\n        from=path(monstart);\n        adv=path(monstart+1.);\n        drorotx=droroty=1.;\n    }\n    if (t>monstart-50.) {\n        dt=monstart*1.8-t-20.;\n        from=path(dt+19.);\n        adv=path(dt+10.);\n        drorotx=smoothstep(monstart-30.,monstart-20.,t)*3.14;\n        droroty=0.;\n        uv*=3.;\n    }\n    if (t>monstart) {\n        dt=monstart*1.8-t-20.;\n        from=path(dt-5.);\n        adv=path(dt+5.);\n        drorotx=0.;\n        droroty=3.14;\n        uv*=.5;\n    }\n    if (t>monstart+70.) {\n        from=path(dt+19.);\n        from.xy=path(dt+24.).xy;\n        adv=path(dt+25.);\n        uv*=1.5;\n    }\n    if (t>monstart+120.) {\n        from=path(dt+20.);\n        adv=path(dt+15.);\n        f=0.;\n        uv=uv2;\n        uv*=3.;\n    }\n    if (t>monstart+190.) {\n        from=path(dt+8.);\n        adv=path(dt+15.);\n        f=1.;\n        uv=uv2;\n        uv*=1.5;\n        notub=1.;\n    }\n    ufopos=path(t+10.); \n    ufopos.y=100.-smoothstep(0.,15.,gt)*50.;\n    monspos=-t+monstart*1.8;\n    if (t>monstart+315.) {\n        raytime=t-monstart-315.;\n        ray=1.;\n        uv2.x+=sin(gt*50.)*.02;\n    }\n    dronepos=path(dt+15.-end*10.);\n    vec3 droneadv=path(dt+16.);\n    dronedir=dronepos-droneadv; \n    dronepos=mix(ufopos,dronepos,smoothstep(10.,20.,gt));\n    dronedir=mix(vec3(0.,-1.,.1),dronedir,smoothstep(15.,20.,gt));\n    if (t>monstart+240.) {\n        monspos+=7.;\n        f=end=1.;\n        from=vec3(30.,0.,-50.);\n        adv=path(max(-45.,monspos));\n        adv.y=5.;\n        uv=uv2;\n        ufopos=path(-45.);\n        ufopos.y=20.;\n        float s=smoothstep(monstart+290.,monstart+310.,t);\n        dronepos=mix(dronepos,ufopos,s);\n        dronedir=vec3(0.,.5,1.);\n        droroty=-s*2.;\n        lion=step(t,monstart+310.);\n    }\n    if (t>monstart+400.) {\n        ufot=t-monstart-400.;\n        raytime=0.;\n        ray=0.;\n        uv=uv3;\n        ufopos=path(-45.);\n        ufopos.y+=50.+ufot*.5;\n        ufopos.x+=10.;\n        ufopos.z+=smoothstep(50.,200.,ufot)*500.;\n        from=path(-45.);\n        from.y+=40.;\n        adv=ufopos;\n        dronepos=ufopos;\n        lion=1.;\n        maxdist=1000.;\n    }\n    if (gt<15.) from.z=-80., from.x=40.,from.y=70.,adv=ufopos;\n    vec3 dir=normalize(vec3(uv,1.));\n    dir=lookat(adv-from,vec3(0.,1.,0.))*dir;\n    vec3 col=march(from, dir);\n    col*=vec3(1.2,1.1,1.)*1.2;\n    if (ufot>.0) col=mix(vec3(1.),col,min(1.,ufot*.1));\n    col*=smoothstep(170.,150.,ufot);\n    col=mix(col*dark,grcolor,.8*title(gl_FragCoord.xy/iResolution.xy,30.*1.15));\n    fragColor=vec4(col,1.0);\n    //}\n}","name":"Image","description":"","type":"image"}]}