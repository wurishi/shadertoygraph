{"ver":"0.1","info":{"id":"M32Xzm","date":"1710848754","viewed":53,"name":"palmTreeForm","username":"leviengineer","description":"following Inigo Quilez's tutorial, commented out interim steps/formulas too...","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tree","shader","palm","form"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n//  just trying out improvised functions, so mostly gibberish maths\n//  and learning shading and shader(toy)\n//\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 q = uv - vec2(0.5, 0.5);\n\n    // Time varying pixel color\n    vec3 col = vec3(0.000,1.000,0.000);\n    //float r = 0.2 + 0.1*cos( atan(q.x,q.y)*10.0);\n    //float r = 3.0 * sin(q.x)/q.y;\n    //float r = q.x * 0.5 * 6.28 * cos(q.x + iTime);\n    //float r = 4.0 * 3.14 * sin(1.0 - tan(q.x + 5.5*iTime/q.y)); // noise-like\n    //float r = 3.14 * tan(10.0 * tan(10.0 * cos(q.x + 1.0*iTime/q.y))); //noise-like no. 2\n    //float r = 6.28 * tan(5.2 * tan(0.05 * cos(q.x + 0.05*iTime/q.y)));\n    float r = 2.0 * q.y + 0.5 * sqrt(sin(cos(sin(0.15 * q.x + iTime)))); //slightly waving\n    \n    //col *= uv.x * uv.y;\n    //col *= length (q); \n    //col *= smoothstep(0.2, 0.3, length(q));\n    col *= smoothstep(r, r + 0.2, length(q.y));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}