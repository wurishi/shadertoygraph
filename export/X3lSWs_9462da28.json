{"ver":"0.1","info":{"id":"X3lSWs","date":"1710152797","viewed":222,"name":"Visual Pythagoras","username":"pfrun0","description":"Visual representation of the Pythagoras theorem","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["pythagoras"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float udSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 ba = b-a;\n    vec2 pa = p-a;\n    float h =clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length(pa-h*ba);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdOrientedBox( in vec2 p, in vec2 a, in vec2 b, float th )\n{\n    float l = length(b-a);\n    vec2  d = (b-a)/l;\n    vec2  q = p-(a+b)*0.5;\n          q = mat2(d.x,-d.y,d.y,d.x)*q;\n          q = abs(q)-vec2(l*0.5,th);\n    return length(max(q,0.0)) + min(max(q.x,q.y),0.0);    \n}\n\nfloat map( in vec2 p, in float s, in vec2 p2)\n{\n    p = p-p2-s/2.0;\n    const vec2 rep = vec2(30,16);\n\n    vec2 id = round(p/s);\n    id = clamp(id,-rep,rep);\n    vec2 r = p - s*id;\n    return sdBox(r, vec2(s/2.0,s/2.0) ) ;\n}\n\nfloat hash( vec2 f )\n{   uvec2\n          x = floatBitsToUint(f),\n          q = 1103515245U * ( x>>1U ^ x.yx    );\n    return float( 1103515245U * (q.x ^ q.y>>3U) ) / float(0xffffffffU);\n}\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    float a = hash(i);\n    float b = hash(i + vec2(1.0, 0.0));\n    float c = hash(i + vec2(0.0, 1.0));\n    float d = hash(i + vec2(1.0, 1.0));\n    \n    vec2 u = f*f*(3.0-2.0*f);\n    return mix(mix(a,b,u.x), mix(c,d,u.x),u.y);\n}\n\nfloat fbm( in vec2 p )\n{\n    float a =1.0;   \n\tfloat f=0.0;\n    f  =a*noise( p ); p = p*2.0; a*=.5;\n    f += a*noise( p ); p = p*2.0; a*=.5;\n    f += a*noise( p ); p = p*2.0; a*=.5;\n    f += a*noise( p ); p = p*2.0; a*=.5;\n    f += a*noise( p ); p = p*2.0; a*=.5;\n    f += a*noise( p ); \n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord/iResolution.y;\n    uv = uv*2.0;\n    \n    float ar = iResolution.x/iResolution.y;\n    vec2 p1 = vec2(ar/1.25,3.0/4.0);\n    vec2 p2 = vec2(p1.x+0.6,p1.y);\n    float l = p2.x-p1.x;\n    float ratio = l/4.0;\n    vec2 p3 = vec2(p2.x,p1.y+3.0*ratio);\n    float l2 = p3.y-p2.y;\n\n    \n\tfloat d1 = udSegment( uv, p1, p2);\n    \n\tfloat d2 = udSegment( uv, p2, p3 );\n    \n\tfloat d3 = udSegment( uv, p3, p1 );\n\n    float th1 = l/2.0;\n    \n    float th2 = l2/2.0;\n    \n    float th3 = sqrt(th1*th1+th2*th2);\n    \n\tvec2 v13 = normalize(p3-p1);\n    vec2 v13p = vec2(-v13.y,v13.x);\n    \n    float gapth = (th3-th1);\n    \n    vec2 b1l = vec2(p1.x,p1.y-th1);\n    vec2 b1r =  vec2(p2.x,p2.y-th1);\n    \n    vec2 nb1l = p1+v13p*th1;\n    vec2 nb1r = p3-v13*2.0*gapth+v13p*th1;\n    \n    vec2 ab1l = vec2(clamp(mix(b1l.x,nb1l.x,iTime/2.0),nb1l.x,b1l.x),clamp(mix(b1l.y,nb1l.y, iTime/2.0),b1l.y,nb1l.y));\n    vec2 ab1r = vec2(clamp(mix(b1r.x,nb1r.x,iTime/2.0),nb1r.x,b1r.x),clamp(mix(b1r.y,nb1r.y, iTime/2.0),b1r.y,nb1r.y));\n\n    vec2 b2l = vec2(p3.x+th2,p3.y);\n    vec2 b2r = vec2(p2.x+th2,p2.y);\n    \n    vec2 b3l = p1+v13p*th3;\n    vec2 b3r = p3+v13p*th3;\n    \n    float box1 = sdOrientedBox( uv, b1l, b1r, th1);\n    float box1c = sdOrientedBox( uv, ab1l, ab1r, th1);\n\tfloat box2 = sdOrientedBox( uv, b2l, b2r, th2);\n    float box3 = sdOrientedBox( uv, b3l, b3r, th3 );\n    \n    \n    vec2 sb1l = vec2(b2l.x-gapth*2.0,b2l.y);\n    vec2 sb1r = vec2(b2r.x-gapth*2.0,b2r.y);\n    \n    vec2 sb2l = vec2(b2l.x,b2l.y);\n    vec2 sb2r = vec2(b2r.x,b2r.y);\n    \n    vec2 sb3l = vec2(b2l.x+gapth*2.0,b2l.y);\n    vec2 sb3r = vec2(b2r.x+gapth*2.0,b2r.y+4.0*gapth);\n    \n    \n    vec2 sb4l = vec2(b2l.x+gapth*2.0,b2l.y-2.0*gapth);\n    vec2 sb4r = vec2(b2r.x+gapth*2.0,b2r.y+2.0*gapth);\n    \n    vec2 sb5l = vec2(b2l.x+gapth*2.0,b2l.y-4.0*gapth);\n    vec2 sb5r = vec2(b2r.x+gapth*2.0,b2r.y);\n    \n    vec2 nsb1r = p1+v13p*gapth*9.0;\n    vec2 nsb1l = p3+v13p*gapth*9.0-v13*th1;\n    \n    vec2 nsb2l = p3-v13*gapth + v13p*gapth*6.0;\n    vec2 nsb2r = p3-v13*gapth;\n    \n    vec2 nsb3l = p3+v13p*th3*2.0-v13*gapth*3.0;\n    vec2 nsb3r = p3+v13p*(th3*2.0)-v13*gapth*3.0-v13p*gapth*2.0;\n    \n    vec2 nsb4l = nsb2l+v13p*gapth*4.0;\n    vec2 nsb4r = nsb2l+v13p*gapth*2.0;\n    \n    vec2 nsb5l = nsb2l+v13p*gapth*2.0;\n    vec2 nsb5r = nsb2l;\n    \n    vec2 asb1r = vec2(clamp(mix(sb1l.x,nsb1l.x,iTime/2.0),nsb1l.x,sb1l.x),clamp(mix(sb1l.y,nsb1l.y, iTime/2.0),sb1l.y,nsb1l.y));\n    vec2 asb1l = vec2(clamp(mix(sb1r.x,nsb1r.x,iTime/2.0),nsb1r.x,sb1r.x),clamp(mix(sb1r.y,nsb1r.y, iTime/2.0),sb1r.y,nsb1r.y));\n    \n    vec2 asb2l = vec2(clamp(mix(sb2l.x,nsb2l.x,iTime/2.0-1.0),nsb2l.x,sb2l.x),clamp(mix(sb2l.y,nsb2l.y, iTime/2.0-1.0),sb2l.y,nsb2l.y));\n    vec2 asb2r = vec2(clamp(mix(sb2r.x,nsb2r.x,iTime/2.0-1.0),nsb2r.x,sb2r.x),clamp(mix(sb2r.y,nsb2r.y, iTime/2.0-1.0),sb2r.y,nsb2r.y));\n    \n    vec2 asb3l = vec2(clamp(mix(sb3l.x,nsb3l.x,iTime/2.0-2.0),nsb3l.x,sb3l.x),clamp(mix(sb3l.y,nsb3l.y, iTime/2.0-2.0),sb3l.y,nsb3l.y));\n    vec2 asb3r = vec2(clamp(mix(sb3r.x,nsb3r.x,iTime/2.0-2.0),nsb3r.x,sb3r.x),clamp(mix(sb3r.y,nsb3r.y, iTime/2.0-2.0),sb3r.y,nsb3r.y));\n    \n    vec2 asb4l = vec2(clamp(mix(sb4l.x,nsb4l.x,iTime/2.0-3.0),nsb4l.x,sb4l.x),clamp(mix(sb4l.y,nsb4l.y, iTime/2.0-3.0),sb4l.y,nsb4l.y));\n    vec2 asb4r = vec2(clamp(mix(sb4r.x,nsb4r.x,iTime/2.0-3.0),nsb4r.x,sb4r.x),clamp(mix(sb4r.y,nsb4r.y, iTime/2.0-3.0),sb4r.y,nsb4r.y));\n    \n    vec2 asb5l = vec2(clamp(mix(sb5l.x,nsb5l.x,iTime/2.0-4.0),nsb5l.x,sb5l.x),clamp(mix(sb5l.y,nsb5l.y, iTime/2.0-4.0),sb5l.y,nsb5l.y));\n    vec2 asb5r = vec2(clamp(mix(sb5r.x,nsb5r.x,iTime/2.0-4.0),nsb5r.x,sb5r.x),clamp(mix(sb5r.y,nsb5r.y, iTime/2.0-4.0),sb5r.y,nsb5r.y));\n    \n    float sbox1 = sdOrientedBox( uv, asb1l, asb1r, gapth);\n    float sbox2 = sdOrientedBox( uv, asb2l, asb2r, gapth);\n    float sbox3 = sdOrientedBox( uv, asb3l, asb3r, gapth);\n    float sbox4 = sdOrientedBox( uv, asb4l, asb4r, gapth);\n    float sbox5 = sdOrientedBox( uv, asb5l, asb5r, gapth);\n\n    float grid = map(uv,gapth,p2);\n    \n    \n    \n    \n    float f= fbm(fragCoord/16.0);\n    vec2 d = vec2(dFdx(f),dFdy(f));\n    \n    vec3 col=vec3(0.95)+ .2*(d.y);\n    col = mix( col, vec3(0.792,0.882,0.976), 1.0-smoothstep(0.0,0.005,abs(grid)) );\n    \n\tcol = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(d1)));\n    col = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(d2)));\n    col = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(d3)));\n    col = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(box1)));\n    col = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(box2)));\n    col = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(box3)));\n    \n    col = box1c <=-0.00 ? mix(vec3(0.353,0.765,0.996),col,0.6) : col; \n    col = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(box1c)));\n    col = sbox1 <=-0.0 ? mix(vec3(0.9,0.0,0.0),col,0.6) : col; \n    col = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(sbox1)));\n    col = sbox2 <=-0.0 ?  mix(vec3(0.9,0.0,0.0),col,0.6) : col; \n    col = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(sbox2)));\n    col = sbox3 <=-0.0 ?  mix(vec3(0.9,0.0,0.0),col,0.6) : col; \n    col = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(sbox3)));\n    col = sbox4 <=-0.0 ?  mix(vec3(0.9,0.0,0.0),col,0.6) : col; \n    col = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(sbox4)));\n    col = sbox5 <=-0.0 ?  mix(vec3(0.9,0.0,0.0),col,0.6) : col; \n    col = mix( col, vec3(0.0), 1.0-smoothstep(0.0,0.01,abs(sbox5)));\n    \n    vec2 q = fragCoord/iResolution.xy;\n    float vi= 0.6 + 0.4*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.25);\n    \n\tfragColor = vec4(col*vi,1.0);\n\n}","name":"Image","description":"","type":"image"}]}