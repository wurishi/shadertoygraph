{"ver":"0.1","info":{"id":"7sGcz1","date":"1654400677","viewed":148,"name":"'nother Mandelbrot","username":"okelly4408","description":"-","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// color palettes from 'Palettes' by iq\n\n//filtered cosine also courtesy of iq ('Bandlimited Synthesis 2')\n\n#define FLTR\nvec3 fcos( vec3 x )\n\n{\n    #ifdef FLTR\n    vec3 w = fwidth(x);   \n    return cos(x) * sin(0.5*w)/(0.5*w);\n    #else\n    return cos(x);\n    #endif\n}\n\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*fcos( 6.28318*(c*t+d) );\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(-.745,.186) + 3.*(fragCoord/iResolution.y-.5)*pow(.01,1.+cos(.2*(iTime+22.)));\n    vec2 z = vec2(0.0);\n    float dmin_dt = 1e5;\n    float dmin_ln = 1e5;\n    for (int i = 0; i < 256; i++) {\n        z = uv + mat2(z,-z.y,z.x) * z;\n        dmin_dt = min(dmin_dt, length(z));\n        dmin_ln = min(dmin_ln,\n            min(abs(z.x + 4.0 * sin(0.5 * z.x)), abs(z.y + 4.0 * cos(0.5 * z.x))));    \n    }\n    vec3 col_ln = pal( dmin_dt * 4.0 ,\n        vec3(0.5),\n        vec3(0.5),\n        vec3(1.0),\n        vec3(0.0,0.10,0.20) );\n    vec3 col_dt = pal( dmin_ln * 8.0,\n        vec3(0.5),\n        vec3(0.5),\n        vec3(1.0,1.0,0.5),\n        vec3(0.8,0.90,0.30) );\n    fragColor = vec4((col_ln + col_dt) * 0.50, 1.0);\n}","name":"Image","description":"","type":"image"}]}