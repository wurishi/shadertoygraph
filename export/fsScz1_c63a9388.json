{"ver":"0.1","info":{"id":"fsScz1","date":"1643165981","viewed":1418,"name":"phoenixsdas","username":"cxm","description":"phoenixsdas","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["sand","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot2(float a) {\n  vec2 s = sin(vec2(a,-a));\n  float c = cos(a);\n  return mat2(c,s,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.yy;\n    uv.x -= ( iResolution.x - iResolution.y ) / iResolution.y * .5;\n\n    // Time varying pixel color\n    vec3 col;\n    \n    float p;\n    \n    float t = iTime + 3.;\n    \n    mat2 rr = rot2( t );\n    uv -= .5;\n    uv *= rr;\n    uv += .5;\n    \n    for( float i = 0.; i < 4.; i++ ){\n        uv.x += cos( ( uv.x, i ) * uv.y ) + sin( atan( uv.x - .5, uv.y - .5 ) ) - t * .5;\n        uv.y -= sin( i * mod( uv.x, .4 ) * .2 ) + mod( uv.x, .05 ) - t * .5;\n    }\n    \n\n    float cal = dot( sin(uv.x), uv.y );\n    \n    p = cal;\n    \n    col += smoothstep( uv.x, uv.y, p );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}