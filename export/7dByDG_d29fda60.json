{"ver":"0.1","info":{"id":"7dByDG","date":"1644060465","viewed":181,"name":"rgb circles combining","username":"MarcoF","description":"Small fun shader","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nbool negative = false;\n\nfloat circle(vec2 uv, vec2 position, float radius, float blur)\n{\n\treturn 1.0 - smoothstep(radius - blur, radius + blur, length(uv - position));\n}\n\nvec2 rotate(vec2 original, float angle, vec2 pivot) \n{\n    mat2 rotation  = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    vec2 final = original;\n    final -= pivot;\n    final *= rotation;\n    final += pivot;\n    return final;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// vertical range [-1, +1]\n    vec2 uv = (2.*fragCoord - (fragColor.xy = iResolution.xy) ) / fragColor.y ;\n    \n    vec3 color = vec3(0.0);\n    \n    float t = cos(iTime * 0.5) * .5;\n    \n\tcolor.r = circle(uv, vec2(0., 0. + t), 0.4, 0.01);\n    \n    uv = rotate(uv, 2. * PI / 3., vec2(0.0));\n    \n    color.g = circle(uv, vec2(0., 0. + t), 0.4, 0.01);\n    \n    uv = rotate(uv, 2. * PI / 3., vec2(0.0));\n    \n    color.b = circle(uv, vec2(0., 0. + t), 0.4, 0.01);\n    \n    if (negative) color = 1. - color;\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}