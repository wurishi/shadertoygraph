{"ver":"0.1","info":{"id":"Ml3yRj","date":"1533157021","viewed":295,"name":"slimy vignette","username":"pixlpa","description":"Constantly changing vignette shapes","likes":4,"published":1,"flags":2,"usePreview":0,"tags":["noise","animated","mask"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n// Value Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/lsf3WH\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat buildSDF(vec2 st){\n    vec2 aspect = vec2(iResolution.x/iResolution.y,1.);    \n    float center = length((st-vec2(0.5))*aspect);\n    float noisevalue = noise((st+vec2(0.,iTime*0.85))*5.*aspect) + noise((st+vec2(0.,iTime*0.253))*9.*aspect)*0.25;\n    return smoothstep(1.3,0.,center)*0.1+noisevalue*-0.4+(st.y-0.5)*0.1;\n}\n\nfloat lighter (vec2 st){\n    vec3 lightpos = vec3(1.,1.,0.8);\n    float hscale = 0.1;\n    float nscale = 2.;\n    vec2 aspect = vec2(iResolution.x/iResolution.y,1.);\n    vec2 offs = st+vec2(2.,-2.)/iResolution.xy;\n\tfloat map0 = buildSDF(st);\n    float map1 = buildSDF(vec2(offs.x,st.y))-map0;\n    float map2 = buildSDF(vec2(st.x,offs.y))-map0;\n\tvec3 shape = normalize(cross(vec3(1.,0.,map1),vec3(0.,1.,map2)));\n\tvec3 light = normalize(lightpos-vec3((st*vec2(2.)-vec2(1.))*vec2(1,aspect),(map0/hscale)*-nscale));\n\tfloat greyval = clamp(dot(light,shape),0.,1.);\n    return greyval;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 suv = uv*2.-vec2(1.);\n    vec2 aspect = vec2(iResolution.x/iResolution.y,1.);\n    \n    float center = length((uv-vec2(0.5))*aspect);\n    float noisevalue = noise((uv+vec2(0.,iTime*0.25))*5.*aspect) + noise((uv+vec2(0.,iTime*0.253))*10.*aspect)*0.25;\n    float sdf = smoothstep(1.3,0.,center)+noisevalue*-0.4+uv.y*0.5;\n    vec2 noisedist = vec2(noise(uv*15.*aspect),noise((uv+vec2(23.))*15.*aspect));\n    // Output to screen\n    float mask = smoothstep(0.5,0.501,fract(iTime*0.25+sdf*0.5));\n    vec4 zoomer1 = texture(iChannel0,uv+noisedist*0.01*center);\n    fragColor = vec4(mix(zoomer1.rgb,vec3(0.2,0.8,0.3)*lighter(uv),mask),1.0);\n}","name":"Image","description":"","type":"image"}]}