{"ver":"0.1","info":{"id":"ddBcWV","date":"1688163785","viewed":38,"name":"Perlin Noise - Naitronbomb","username":"Naitronbomb","description":"perlin noise","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["perlinnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159265359;\nconst float size = 10.0;\n\nfloat rand(vec3 seed) {\n    return fract(sin(dot(seed, vec3(12.9898, 78.233, 45.543))) * 43758.5453);\n}\n\nfloat s(float x) {\n    return 3.0*x*x - 2.0*x*x*x;\n}\n\nfloat lerp(float a, float b, float t) {\n    return a + s(t)*(b-a);\n}\n\nvec2 randVector(vec2 val) {\n    float angle = 2.0*pi*rand(vec3(val, iTime));\n    return vec2(cos(angle),sin(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/min(iResolution.x,iResolution.y) * size;\n\n    vec2 bl = floor(uv);\n    vec2 br = vec2(ceil(uv.x),floor(uv.y));\n    vec2 tl = vec2(floor(uv.x),ceil(uv.y));\n    vec2 tr = ceil(uv);\n\n    vec2 blv = randVector(bl);\n    vec2 brv = randVector(br);\n    vec2 tlv = randVector(tl);\n    vec2 trv = randVector(tr);\n\n    vec2 blo = uv - bl;\n    vec2 bro = uv - br;\n    vec2 tlo = uv - tl;\n    vec2 tro = uv - tr;\n\n    float bld = dot(blo, blv);\n    float brd = dot(bro, brv);\n    float tld = dot(tlo, tlv);\n    float trd = dot(tro, trv);\n\n    float val1 = lerp(bld, brd, blo.x);\n    float val2 = lerp(tld, trd, blo.x);\n    float val = lerp(val1, val2, blo.y);\n\n    // Output to screen\n    fragColor = vec4(vec3(val)/2.0 + 0.5,1.0);\n}","name":"Image","description":"","type":"image"}]}