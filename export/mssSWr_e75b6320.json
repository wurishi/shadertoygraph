{"ver":"0.1","info":{"id":"mssSWr","date":"1671576902","viewed":179,"name":"Spiral Journey","username":"ChunderFPV","description":"10 minute number spiral screensaver.\nMouse X: number line value\nMouse Y: exponent","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["spiral","25d","aa","screensaver","buffer","fractions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// --- counter code from https://www.shadertoy.com/view/7tV3zK\nvec4 char(vec2 p, int c) {\n    vec2 dFdx = dFdx(p/16.), dFdy = dFdy(p/16.);\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel1, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx, dFdy );\n}\nvec4 pInt(vec2 p, float n, float d) { // --- display int4\n    vec4 v = vec4(0);\n    if (n < 0.) \n        v += char(p - vec2(-.5,0), 45 ),\n        n = -n;\n    for (float i = d; i>0.; i--) \n        n /=  9.999999, // 10., // for windows :-(\n        v += char(p - .5*vec2(i-1.,0), 48+ int(fract(n)*10.) );\n    return v;\n}// ---\n\n// screen coords, value, size, num left digits, num right digits\nvec3 counter(vec2 sc, float v, float s, float l, float r)\n{\n    float numleft = min(log2(abs(v))/log2(10.), l-1.);\n    l = max(floor(numleft), 0.)+1.;\n    sc /= s; // size\n    sc += vec2((l+1.)/2., .28); // center on decimal\n    vec3 d = vec3(0);\n    d += pInt(sc, v, l).x; // left of decimal\n    sc.x -= l/2.;\n    d += char(sc, 46).x; // decimal point\n    sc.x -= .5;\n    d += pInt(sc, floor(abs(v)*pow(10., r)), r).x; // right of decimal\n    return d;\n}\n\nvoid mainImage( out vec4 RGBA, in vec2 XY )\n{\n    vec3 c = texture(iChannel0, XY/R, max(1., length(SC*2.))).rgb;\n    c *= c*3.5; // contrast\n    \n    if (M.z > 0.)\n    {\n        vec2 m = (M.xy/R*4.)-2.;\n        vec3 n = counter((XY-vec2(.1, .11)*R)/R.y, R2N(m.x), .1, 4., 4.); // number\n        vec3 e = counter((XY-vec2(.1, .01)*R)/R.y, R2N(-m.y), .1, 4., 4.); // exponent\n        c += n*vec3(1,1,0)+e*vec3(0,1,0);\n    }\n    \n    RGBA = vec4(c, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 RGBA, in vec2 XY )\n{\n    float sec = 600.; // time to cycle through number line\n    float st = 0.; // start time\n    float ra = ((mod(T+st, sec)/sec)-.5)*4.; // time to range -2 to +2\n    ra *= .97; // truncate near +/-inf\n    vec2 m = (M.xy/R*4.)-2.; // mouse\n    float t = (M.z > 0.) ? R2N(m.x): R2N(ra); // time\n    float e = (M.z > 0.) ? R2N(-m.y): t; // exponent\n    float z = (e < 0.) ? pow(100., e): pow(500., e); // zoom\n    z *= SCALE;\n    z = clamp(z, CL(z, 1e-16, 1e-15), CL(z, 1e+18, 1e+19)); // soft clamp at precision loss\n    vec2 sc = SC*z;\n    \n    vec2 tc = SC*SCALE; // texture coords\n    float tl = length(tc); // non-zoomed screen radius\n    float ring = pow(min(tl, 1./tl), 2.);\n    \n    float tr = sqrt(dot(tc, tc)); // transform\n    vec3 tex = texture(iChannel1, tc/tr+t, .5).rgb*tr;\n    \n    float bs = -.005*sign(t); // radial blur strength\n    float maa = (e < 0.) ? pow(z/tl/SCALE, .25): .5; // mipmap aa\n    float fade = min(.5, abs(e)*25.); // fade near 0\n    vec3 c = texture(iChannel0, mix(XY/R, vec2(.5), bs), .5).rgb*.96; // blend with previous frames\n    c += vec3(.1, .3, .6)*tex*.02*fade; // background color\n    if (e < 0.) c += pow(z/tl*fade, 1.25)*vec3(.1, .2, .3)*.005; // blue dot\n    c += vec3(.1, .2, .3)*ring*min(.03, abs(e)*10.); // blue ring\n    \n    vec3 dc = vec3(.8, .4, 1.)*ring*.5; // denominator color\n    vec3 nc = vec3(.8, .1, .2)*ring*.5; // numerator color\n    vec3 fc = vec3(1., .6, .3*tl)*pow(tl, clamp(-1./e, 0., 1.))*.4;  // fraction color\n    \n    float r = length(sc); // screen radius\n    float sr = TAU/4.; // starting rotation\n    float px = length(fwidth(sc))/1.414; // pixel radius\n    float pr = max(px*3., .005*z); // point radius\n    float cr = pow(z/SCALE, 1./e)*TAU; // counter rotation\n    float fscr = sqrt(abs(t)*cr*2.*TAU)*sign(t); // counter rotation\n    float rb = sin(T*TAU/10.)*.1; // rotation bounce\n    \n    float lim = 4.; // loop limit\n    for (float i=0.; i<lim; i++) // overlap cells for spirals\n    {\n        float rr = round((exp(log(r)/e)-i)/lim)*lim+i; // rounded radius\n        float l = pow(rr, e); // radius\n        c += DS(1./t, (1./t)*cr-sr+rb*.25, pr*.5)*nc; // numerator spiral\n        c += DS(t, t*cr-sr+rb*.5, pr*.5)*dc; // denominator spiral\n        c += FS(t, fscr+rb*.75, pr)*fc; // fraction spiral\n    }\n    vec2 b = abs(fract(XY/R+.5)-.5)/fwidth(XY/R)/5.; // black border\n    c = min(c, min(b.x, b.y)*.75); // blend with border\n    \n    RGBA = vec4(c, 1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define SCALE 2.5\n#define R iResolution.xy\n#define M iMouse\n#define T iTime\n#define SC ((XY-.5*R)/R.y)\n#define CS(a) vec2(cos(a), cos(a-TAU/4.))\n#define TAU 6.2831853071795865\n#define DS(n,a,pr) max(0., 1.-length(sc-CS(a-n*TAU*rr)*l)/(pr))\n#define FS(n,a,pr) max(0., 1.-length(sc-CS(a-(TAU*sqrt(abs(n))*sign(n))*sqrt(rr*2.))*l)/(pr))\n#define R2N(m) (abs(m) > 1.) ? 1./(2.*sign(m)-m): m\n#define CL(x,a,b) smoothstep(0.,1.,(2./3.)*(x-a)/(b-a)+(1./6.))*(b-a)+a // https://www.shadertoy.com/view/Ws3Xzr","name":"Common","description":"","type":"common"}]}