{"ver":"0.1","info":{"id":"fsSXRG","date":"1620415920","viewed":199,"name":"Kirby Wallpaper","username":"inspirnathan","description":"Kirby!!! Inspired by the thumbnail for the video, [url]https://www.youtube.com/watch?v=HrwUXZWur9w[/url].","likes":6,"published":1,"flags":64,"usePreview":0,"tags":["2d","kirby","inspirnathan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4tsSz2","filepath":"https://soundcloud.com/kerenon/kirby-superstar-green-greens","previewfilepath":"https://soundcloud.com/kerenon/kirby-superstar-green-greens","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 COLOR_BG = vec3(.906, .659, .671);\nconst vec3 COLOR_EYE_BG = vec3(.098, .114, .365);\nconst vec3 COLOR_EYE_GRAD_START = COLOR_EYE_BG;\nconst vec3 COLOR_EYE_GRAD_END = vec3(.216, .443, .675)*1.05;\nconst vec3 COLOR_BLUSH = vec3(.855, .443, .588);\nconst vec3 COLOR_BLUSH_OUTLINE = vec3(.875, .541, .62);\nconst vec3 COLOR_MOUTH = vec3(.494, .102, .271);\nconst vec3 COLOR_TONGUE = vec3(.863, .447, .518);\nconst vec3 COLOR_PUPILS = vec3(1);\nconst vec3 COLOR_STAR_BASE = vec3(0, 0.6, 0.7);\n\nfloat S(float d) {\n    return step(0., d);\n}\n\nfloat SS(float d) {\n    return smoothstep(0., 0.005, d);\n}\n\nfloat outline(float d) {\n    return smoothstep(0.01, 0.013, d);\n}\n\nfloat mouth(vec2 p) {\n    float d1 = sdEllipse(p, vec2(0.1, 0.05));\n    float d2 = sdEllipse(p, vec2(0.1, 0.11));\n    float d3 = sdBox(p - vec2(0, 0.1), vec2(.1));\n    \n    float res = 1e6;\n    res = min(res, max(d2, -d3));\n    res = min(res, max(d1, d3));\n    return res;\n}\n\nfloat tongue(vec2 p) {\n    float d1 = sdEllipse(p - vec2(0, -0.2), vec2(0.12, 0.2));\n    return max(mouth(p), d1);\n}\n\nfloat eyeBottom(vec2 p) {\n    float d1 = sdEllipse(p, vec2(0.06, 0.2));\n    float d2 = sdEllipse(p - vec2(0, 0.09), vec2(0.1, 0.2));   \n    \n    return max(d1, -d2);\n}\n\nfloat eyeBottoms(vec2 p) {\n    p.x = abs(p.x);\n    return eyeBottom(p - vec2(0.15, 0));\n}\n\nfloat eyes(vec2 p)\n{\n    p.x = abs(p.x);\n    return sdEllipse(p - vec2(0.15, 0), vec2(0.08, 0.2));\n}\n\nfloat pupils(vec2 p)\n{\n    p.x = abs(p.x);\n    return sdEllipse(p - vec2(0.15, 0), vec2(0.04, 0.075));\n}\n\nfloat blush(vec2 p)\n{\n    p.x = abs(p.x);\n    return sdEllipse(p - vec2(0.36, 0), vec2(0.08, 0.045));\n}\n\nfloat threeStars(vec2 p) {\n    p.x = abs(p.x) - 0.14;\n    p.y -= -0.05;\n    float d1 = sdStar5(p*rotate(0.3), 0.012, 0.45);\n    float d2 = sdStar5(p*rotate(-0.1) - vec2(0.03, 0.01), 0.01, 0.45);\n    float d3 = sdStar5(p*rotate(-0.1) - vec2(0.005, 0.035), 0.008, 0.45);\n    \n    float res = 1e6;\n    res = min(res, d1);\n    res = min(res, d2);\n    res = min(res, d3);\n    \n    return res;\n}\n\nvec3 scene(vec2 p) {\n    vec3 col = COLOR_BG;\n    \n    float eyes = eyes(p - vec2(0, 0.1));\n    float fullMouth = 0.9 * mouth(p - vec2(0, -0.16));\n    float mouth = mouth(p - vec2(0, -0.16));\n    float tongue = tongue(p - vec2(0, -0.16));\n    float blush = blush(p - vec2(0, -0.1));\n    float pupils = pupils(p - vec2(0, 0.2));\n    float eyeBottoms = eyeBottoms(p - vec2(0, 0.12));\n    float stars = threeStars(p);\n\n    vec3 eyeBottomCol = mix(COLOR_EYE_GRAD_START, COLOR_EYE_GRAD_END, p.y*12.+0.8);\n    vec3 starColor = mix(eyeBottomCol, COLOR_STAR_BASE, p.y*12.+0.8);\n    \n    col = mix(COLOR_EYE_BG, col, S(eyes));\n    col = mix(COLOR_MOUTH, col, S(mouth));\n    col = mix(COLOR_TONGUE, col, S(tongue));\n    col = mix(COLOR_BLUSH_OUTLINE, col, outline(blush));\n    col = mix(COLOR_BLUSH, col, SS(blush));\n    col = mix(COLOR_PUPILS, col, SS(pupils));\n    col = mix(eyeBottomCol, col, SS(eyeBottoms));\n    col = mix(starColor, col, S(stars));\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    vec3 col = scene(uv);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/*\n** Kirby Wallpaper by inspirnathan (Nathan Vaughn)\n** \n** Resources/Credit:\n** 2D SDFs: https://iquilezles.org/articles/distfunctions2d\n** Music: https://soundcloud.com/kerenon/kirby-superstar-green-greens\n*/\n\nmat2 rotate(float theta) {\n  float s = sin(theta), c = cos(theta);\n  return mat2(c, -s, s, c);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}\n\nfloat sdStar5(vec2 p, float r, float rf)\n{\n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n    const vec2 k2 = vec2(-k1.x,k1.y);\n    p.x = abs(p.x);\n    p -= 2.0*max(dot(k1,p),0.0)*k1;\n    p -= 2.0*max(dot(k2,p),0.0)*k2;\n    p.x = abs(p.x);\n    p.y -= r;\n    vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n    float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}","name":"Common","description":"","type":"common"}]}