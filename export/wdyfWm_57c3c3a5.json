{"ver":"0.1","info":{"id":"wdyfWm","date":"1607291965","viewed":72,"name":"hoeled_rectangles","username":"hoeled","description":"Rectangles.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rectangles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 Rot(float a) {\n\tfloat s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat Square(vec2 uv, float size) {\n\tvec2 s = abs(uv) - vec2(size);\n    float square = length(max(s, .0));\n    square = smoothstep(.001, .0, square);\n    return square;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv *= Rot(3.1415/4.);\n\n    vec3 col = vec3(0.);\n    \n    float ya = atan(uv.y+sin(iTime)*.17, uv.x*sin(iTime));\n    float yb = atan(uv.x+sin(iTime)*.17, uv.x*sin(iTime));\n    //uv.y = uv.y+yb*.00395;\n    //uv.x -= uv.x+yb*.0535;\n    //uv.y *= 1.2;\n    \n    //nice\n    //uv = uv * atan(uv-sin(iTime*.25), uv-cos(iTime*.25));\n    \n    //uv *= .1;\n    \n    //float recs = 10. * abs(sin(iTime)*.5+1.);\n    float recs = 9.;\n    for (float i=1.; i<recs; i++) {\n        float t = 0.;//sin(iTime)*.16;\n        float span = .009;\n        uv.x += i*span*t;\n        float str = 1.;\n        float thick = 0.012;\n        float size = .025*i;\n        float s1 = Square(uv, size)*str;\n        float s2 = Square(uv, size-thick)*str;\n        float s = s1-s2;\n    \tcol += s;\n        float a = 5.*sin(iTime);\n        if (int(i)%int(a) == 0) col += s*.6;\n    }\n    \n    vec3 ao = vec3(0.);\n    float w = .2;\n    ao += smoothstep(w, 0.0, length(uv.y+uv.x));\n    uv.x *= -1.;\n    ao += smoothstep(w, 0.0, length(uv.y+uv.x));\n    col.r -= smoothstep(.5, 0.499, length(uv.y+uv.x+.5))*.2;\n    col.g += smoothstep(.5, 0.499, length(uv.y+uv.x+.5))*.7;\n    col -= ao*.7;\n    \n    ao = vec3(0.);\n    w = .001;\n    ao += smoothstep(w, 0.0, length(uv.y+uv.x));\n    uv.x *= -1.;\n    ao += smoothstep(w, 0.0, length(uv.y+uv.x));\n    col -= ao*.4;\n    \n    \n    //uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float ms = Square(uv, 0.1);\n    col -= ms;\n\n    col -= vec3(.0, .8, .8);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}