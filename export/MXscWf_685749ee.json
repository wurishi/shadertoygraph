{"ver":"0.1","info":{"id":"MXscWf","date":"1726750203","viewed":52,"name":"video noise effect","username":"GesChen","description":"had some ideas for something, something happened, and we have this now. idk.\ntry pausing and see if you can still see the video.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define invert\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 video = vec3(texture(iChannel0, uv));\n\n    bool mask = dist(video, vec3(13,163,37)/255.) > .2;\n    \n    int seed = int(baseHash(floatBitsToUint(fragCoord * -iTime + iMouse.xy * iMouse.xy * iTime)));\n    hash1(seed);\n\n    int seed2 = int(baseHash(floatBitsToUint(fragCoord)));\n    hash1(seed2);\n\n    float alt = hash1(seed2);\n    \n    if (iMouse.z > 0.) {\n        vec3 effect = vec3(mask ? alt : hash1(seed));\n        fragColor = vec4(fragCoord.x < iMouse.x ? effect : video, 1.);\n    }\n    else {\n        fragColor = vec4(vec3(mask ? alt : hash1(seed)), 1.);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\nfloat rand(inout int seed) {\n    seed = seed * 747796405 + 2891336453;\n\tint result = ((seed >> ((seed >> 28) + 4)) ^ seed) * 27780737;\n\tresult = (result >> 22) ^ result;\n\treturn float(result) / 4294967295.;\n}\n\nuint baseHash( uvec2 p ) {\n    p = 1103515245U*((p >> 1U)^(p.yx));\n    uint h32 = 1103515245U*((p.x)^(p.y>>3U));\n    return h32^(h32 >> 16);\n}\n\nfloat hash1( inout int seed ) {\n    uint n = baseHash(floatBitsToUint(vec2(seed+=1,seed+=1)));\n    return float(n)/float(0xffffffffU);\n}\n\nfloat dist(vec2 a, vec2 b) {\n    return length(a - b);\n}\n\n\nfloat dist(vec3 a, vec3 b) {\n    return length(a - b);\n}","name":"Common","description":"","type":"common"}]}