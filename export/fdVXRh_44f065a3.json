{"ver":"0.1","info":{"id":"fdVXRh","date":"1634326997","viewed":393,"name":"angular lines","username":"FabriceNeyret2","description":"drawing polylines with angular junctions.\nMouse control.","likes":13,"published":3,"flags":0,"usePreview":0,"tags":["lines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(v) smoothstep( 3./R.y, 0., (v) -.07 )\n\nfloat line0(vec2 p, vec2 a,vec2 b) { \n    p -= a, b -= a;\n    float h = dot(p, b) / dot(b, b);   // proj coord on line\n    return length(p - b * h);          // dist to segment\n}\nfloat line(vec2 p, vec2 a,vec2 b) { \n    p -= a, b -= a;\n    float h = dot(p, b) / dot(b, b);   // proj coord on line\n    h = clamp(h, 0.,1.);               // round end\n    return length(p - b * h);          // dist to segment\n}\n \nvec2 P,_D,D, M;\n// #define L(B)  v = min( v, line(U,P,B) ); P = B;  // rounded lines \n#define L(B)  v = min( v, line(U,P,B) );                                        \\\n              _D = D; D = normalize(B-P); M = _D+D;                             \\\n              if (dot(U-P,D) < 0. && dot(U-P,_D) > 0. )                         \\\n                 v = min( v, dot(U-P,M) < 0. ? line0(U,P-_D,P) : line0(U,P,B)); \\\n              P = B; \n#define L0(A) P = A; D = vec2(0);\n\n             \nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( 2.*u - R ) / R.y ;   \n    \n    float a, v = 99.;\n    L0( vec2(-1.5,.7) ); \n    L( vec2(-1,-.5)+.4*cos(iTime+vec2(0,33)) ); \n    L( vec2(1.2,.7) ); L( vec2(.5,-.75) ); L( vec2(1.5,-.3) );\n    L( ( 2.*iMouse.xy - R ) / R.y );\n\n                 // bg  line pattern    line mask    \n    O = vec4(  mix( .5, S( v+2./R.y) , a = S( v ) ) );\n    v = max(0.,cos(.5*R.y*v)-.5); if (a==0.) O.b += v; else O.gb -= v; // show distance field\n}","name":"Image","description":"","type":"image"}]}