{"ver":"0.1","info":{"id":"sdBcRc","date":"1647995835","viewed":25,"name":"dot product","username":"kibi","description":"my personal helper and visualization of dot product","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["dotproduct"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    /*\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    //fraglor = vec4(col,1.0);\n    fragColor = vec4(1,1,1,0);\n    */\n    \n    \n    vec2 vecFixed = vec2(0.0,1.0);\n    \n    \n    //vec2 vec = vec2(fragCoord.x - iResolution.x, fragCoord.y - iResolution.y);\n    \n    \n    //vec2 mouseUV = vec2(iMouse.x - iResolution.x/2.0,iMouse.y - iResolution.y/2.0);\n    //vec2 mouseuv = iMouse.xy/iResolution.xy;\n    \n    \n    \n    //vecFixed = mouseuv + 0.5;\n    \n    float vecX = fragCoord.x - iResolution.x/2.0;\n    float vecY = fragCoord.y - iResolution.y/2.0;\n    \n    vec2 vec = vec2(vecX,vecY);\n    \n    float dotValue = abs(dot(vecFixed, vec/length(vec))); //Absoluted dot \n    //float dotValue = dot(vecFixed, vec/length(vec)); //Clamped from 0 to 1\n    \n    vec3 rgb = vec3(dotValue,dotValue,dotValue);\n    \n    fragColor = vec4(rgb,1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}