{"ver":"0.1","info":{"id":"wldfDr","date":"1612567679","viewed":365,"name":"Sparkly explosion","username":"lukaszk159","description":"Lets say that this is a simple particle explosion...right? :D","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["explosion","practicles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PRACTICLES_COUNT 23.\n\nvec2 Hash12(float t)\n{\n    float x = fract( sin(t* 674.3) * 453.2);\n    float y = fract( sin( (t + x) * 714.3) * 263.2);\n    \n    return vec2(x,y);\n\n}\n\nvec2 Hash12Polar(float t)\n{\n    float a = fract( sin(t* 674.3) * 453.2) * 6.2832; // * 2 PI\n    float d = fract( sin( (t + a) * 714.3) * 263.2);\n    \n    return vec2(sin(a),cos(a))*d;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y; // Współrzędne od środka\n    \n   // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));     // Time varying pixel color\n    vec3 col = vec3(0);\n    vec3 color = sin(vec3(.34,.54,.43) *floor(iTime)* .5 + .5);\n    float t = fract(iTime);\n    for( float i =0.0; i < PRACTICLES_COUNT; i++)\n    {\n        vec2 dir = Hash12Polar(i + 1.0) * .5;\n        \n        float d = length(uv - dir* t);\n        \n        float brightness = mix( 0.005, .0001, smoothstep(0.05, 0.0, t) );\n        brightness *= sin(t*20.0 + i)* .5 +.5;\n        brightness*= smoothstep(1.,.5,t);\n        col += brightness/d * color;\n    }\n    \n    col*= 2.0;\n    fragColor = vec4(col,1.0);     // Output to screen\n}","name":"Image","description":"","type":"image"}]}