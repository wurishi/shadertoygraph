{"ver":"0.1","info":{"id":"WslBRS","date":"1588515357","viewed":127,"name":"Polarised Blip","username":"chernomord","description":"A figure drawn with polar coordinates got twisted and transformed differently for each color channel","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","polarcoordinates","chromaticshift"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void remap(inout vec2 st) {\n  st = st/.5 - 1.;\n}\n\nvoid proportion(inout vec2 st) {\n  st.x *= iResolution.x/iResolution.y;\n}\n\n\nvec2 polar(in vec2 pos, in vec2 uv) {\n    vec2 dist = pos - uv;\n    return vec2(atan(dist.y,dist.x)+iTime/4., dot(dist,dist)*4.);\n}\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    // uv = fract((uv)*3.);\n    remap(uv);\n    proportion(uv);\n\n    uv *= rotate2d(sin(iTime*2.));\n    uv *= scale(vec2((sin(iTime)+3.5)/3.));\n\n    vec2 pos = vec2(0.0);\n\n    vec2 uv_r = uv * scale(vec2(.5,(sin(iTime)+2.)*3.));\n    vec2 uv_b = uv + vec2(cos(iTime*4.)*2.,.0) /4.;\n    \n    vec2 p_ar = polar(pos, uv);\n    \n    vec2 p_ar_r = polar(pos, uv_r);\n    vec2 p_ar_b = polar(pos, uv_b);\n    float f = cos(p_ar[1]*8.0)/6. +.5;\n    float f_r = cos(p_ar_r[0]*8.0)/6. +.5;\n    float f_b = cos(p_ar_b[0]*8.0)/6. +.5;\n    vec3 color = vec3( \n        smoothstep(f,f+0.2,p_ar_r[1]),\n        smoothstep(f,f+0.024,p_ar[1]*(sin(iTime*5.)+2.)/4.+(sin(iTime*5.)+2.)/4.),\n        smoothstep(f,f+0.1,p_ar_b[1]) \n        );\n\n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}