{"ver":"0.1","info":{"id":"wldcDX","date":"1610085394","viewed":105,"name":"Kaleidoscope - FrostBT","username":"FrostBT","description":"Nothing to see here. Just trying to emulate the graphics you see behind DJs at clubs.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hueShift( vec3 color, float hueAdjust ){\n\n    const vec3  kRGBToYPrime = vec3 (0.299, 0.587, 0.114);\n    const vec3  kRGBToI      = vec3 (0.596, -0.275, -0.321);\n    const vec3  kRGBToQ      = vec3 (0.212, -0.523, 0.311);\n\n    const vec3  kYIQToR     = vec3 (1.0, 0.956, 0.621);\n    const vec3  kYIQToG     = vec3 (1.0, -0.272, -0.647);\n    const vec3  kYIQToB     = vec3 (1.0, -1.107, 1.704);\n\n    float   YPrime  = dot (color, kRGBToYPrime);\n    float   I       = dot (color, kRGBToI);\n    float   Q       = dot (color, kRGBToQ);\n    float   hue     = atan (Q, I);\n    float   chroma  = sqrt (I * I + Q * Q);\n\n    hue += hueAdjust;\n\n    Q = chroma * sin (hue);\n    I = chroma * cos (hue);\n\n    vec3    yIQ   = vec3 (YPrime, I, Q);\n\n    return vec3( dot (yIQ, kYIQToR), dot (yIQ, kYIQToG), dot (yIQ, kYIQToB) );\n\n}\n\nvec3 toMonochrome(vec3 color) {\n  float val = (color.r + color.b + color.g)/3.;\n  float high = smoothstep(.0, .5, val);\n  float low = smoothstep(.5, 1., val);\n  return vec3(high, low, low);\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec3 mixCol(vec3 a, vec3 b, float t) {\n    return ((b - a) * t) + a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy)/max(iResolution.y, iResolution.x);\n    uv = fragCoord / iResolution.xy;\n    uv = abs(uv - 0.5) + 0.25;\n    uv = uv * rotate2d(cos(iTime/4.)/2.);\n\n    vec4 col = texture(iChannel0, uv);\n    col.rgb = mixCol(hueShift(col.rgb, iTime/2.), toMonochrome(col.rgb), .3);\n    \n    col.rgb = hueShift(col.rgb, iTime/4.);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}