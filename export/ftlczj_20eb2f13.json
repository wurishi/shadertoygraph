{"ver":"0.1","info":{"id":"ftlczj","date":"1681866134","viewed":42,"name":"Burning Ship Rainbow","username":"Angramme","description":"f","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ff"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 1000.\n#define EXPLODE_EPS 10000.\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n    \n    uv.y *= -1.;\n    const vec2 depart = vec2(.13, .48);\n    const vec2 arrive = vec2(1.77, .03);\n    float decalage = 1./exp(.5*iTime);\n    vec2 center = arrive - (arrive-depart)*decalage;\n    float zoom = iTime*.5;\n    vec2 c = (uv)*3./(1. + zoom*zoom) - center;\n    \n    vec2 z = vec2(0);\n    bool explode = false;\n    \n    float i;\n    for(i=0.; i<MAX_ITER; i++){\n        vec2 zn = vec2(\n            z.x*z.x - z.y*z.y,\n            2.*abs(z.x*z.y));\n        z = zn + c;\n        \n        if(dot(zn, zn) > EXPLODE_EPS*EXPLODE_EPS){\n            explode = true;\n            break;\n        }\n    }\n    float ns = i + 1. - log(log(length(z)))/log(2.);\n    float val = fract(ns*10./MAX_ITER)+3.7;\n    col = explode ? hsv2rgb(vec3(val*3. + iTime*.05, .7, 1.)) : vec3(0.);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}