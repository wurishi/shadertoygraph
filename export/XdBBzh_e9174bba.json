{"ver":"0.1","info":{"id":"XdBBzh","date":"1499298277","viewed":1775,"name":"wet glass","username":"Jodie","description":"wet glass effect based on https://www.shadertoy.com/view/MdfBRX","likes":38,"published":1,"flags":0,"usePreview":1,"tags":["glass","rain","wet","lense"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Licensed under \"Do What The Fuck You Want To Public License\"\n// http://www.wtfpl.net/about/\n\nvec2 hash22(vec2 p){\n    vec2 p2 = fract(p * vec2(.1031,.1030));\n    p2 += dot(p2, p2.yx+19.19);\n    return fract((p2.x+p2.y)*p2);\n}\n#define round(x) floor( (x) + .5 )\n\nfloat simplex2D(vec2 p ){\n    const float K1 = (sqrt(3.)-1.)/2.;\n    const float K2 = (3.-sqrt(3.))/6.;\n    const float K3 = K2*2.;\n\n    vec2 i = floor( p + dot(p,vec2(K1)) );\n    \n    vec2 a = p - i + dot(i,vec2(K2));\n    vec2 o = 1.-clamp((a.yx-a)*1.e35,0.,1.);\n    vec2 b = a - o + K2;\n    vec2 c = a - 1.0 + K3;\n\n    vec3 h = clamp( .5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0. ,1. );\n    \n    h*=h;\n    h*=h;\n\n    vec3 n = vec3( \n        dot(a,hash22(i   )-.5),\n        dot(b,hash22(i+o )-.5),\n        dot(c,hash22(i+1.)-.5)\n    );\n\n    return dot(n,h)*140.;\n}\n\nvec2 wetGlass(vec2 p) {\n    \n    p += simplex2D(p*0.1) * 3.; // distort drops\n    \n    float t = iTime;\n    \n    p *= vec2(.025, .025 * .25);\n    \n    p.y += t * .25; // make drops fall\n    \n    vec2 rp = round(p);\n    vec2 dropPos = p - rp;\n    vec2 noise = hash22(rp);\n    \n    dropPos.y *= 4.;\n    \n    t = t * noise.y + (noise.x*6.28);\n    \n    vec2 trailPos = vec2(dropPos.x, fract((dropPos.y-t)*2.) * .5 - .25 );\n    \n    dropPos.y += cos( t + cos(t) );  // make speed vary\n   \n    float trailMask = clamp(dropPos.y*2.5+.5,0.,1.); // hide trail in front of drop\n\n    float dropSize  = dot(dropPos,dropPos);\n    \n    float trailSize = clamp(trailMask*dropPos.y-0.5,0.,1.) + 0.5;\n    trailSize = dot(trailPos,trailPos) * trailSize * trailSize;\n    \n    float drop  = clamp(dropSize  * -60.+ 3.*noise.y, 0., 1.);\n    float trail = clamp(trailSize * -60.+ .5*noise.y, 0., 1.);\n    \n    trail *= trailMask; // hide trail in front of drop\n    \n    return drop * dropPos + trailPos * trail;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv += wetGlass(fragCoord);\n   \n    \n\tfragColor = texture(iChannel0,uv);\n    //fragColor = vec4(GetDrops(fragCoord).x);\n}","name":"Image","description":"","type":"image"}]}