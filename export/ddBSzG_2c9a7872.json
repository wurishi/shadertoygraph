{"ver":"0.1","info":{"id":"ddBSzG","date":"1670440288","viewed":59,"name":"MoveLines","username":"Raistlin_fuego","description":"Lines","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["learningshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float height(vec2 uv, float positionLine, float desface, float offset)\n{\n    float lenght = step(abs(cos(iTime) - offset) + desface, uv.y);\n    return lenght;\n}\n\nfloat baseLine(vec2 uv, float position)\n{\n    float middle = position;\n    float low = middle - 0.02;\n    float upper = middle + 0.02;\n    float lin = smoothstep(low, middle, uv.x) - smoothstep(middle, upper, uv.x);\n    lin = step(0.01, lin);\n    return lin;\n}\n\nfloat lineUp(vec2 uv, float position, float offset)\n{\n    float lin = baseLine(uv, position);\n    lin *= height(uv, position, 0.03, offset);\n    return lin;\n}\n\nfloat lineDown(vec2 uv, float position, float offset)\n{\n    float lin = baseLine(uv, position);\n    lin *= 1.- height(uv, position, -0.03, offset);\n    return lin;\n}\n\nfloat line(vec2 uv, float position, float offset)\n{\n    return lineUp(uv, position, offset) + lineDown(uv, position, offset);\n}\n\nvec3 buildLines(vec2 uv)\n{\n    vec3 col = vec3(0.,0.,1.);\n    vec3 colLin = mix(uv.xyx, uv.xyx, uv.x);\n    \n    float lin1 = line(uv, 0.0, 0.1);\n    float lin2 = line(uv, 0.05, 0.15);\n    float lin3 = line(uv, 0.1, 0.2);\n    float lin4 = line(uv, 0.15, 0.25);\n    float lin5 = line(uv, 0.2, 0.3);\n    float lin6 = line(uv, 0.25, 0.35);\n    float lin7 = line(uv, 0.3, 0.4);\n    float lin8 = line(uv, 0.35, 0.45);\n    float lin9 = line(uv, 0.4, 0.5);\n    float lin10 = line(uv, 0.45, 0.55);\n    float lin11 = line(uv, 0.5, 0.6);\n    float lin12 = line(uv, 0.55, 0.65);\n    float lin13 = line(uv, 0.6, 0.7);\n    float lin14 = line(uv, 0.65, 0.75);\n    float lin15 = line(uv, 0.7, 0.8);\n    float lin16 = line(uv, 0.75, 0.85);\n    float lin17 = line(uv, 0.8, 0.9);\n    float lin18 = line(uv, 0.85, 0.95);\n    float lin19 = line(uv, 0.9, 1.);\n    float lin20 = line(uv, 0.95, 1.05);\n    float lin21 = line(uv, 1., 1.1);\n\n    col = mix(col, colLin, lin1);\n    col = mix(col, colLin, lin2);\n    col = mix(col, colLin, lin3);\n    col = mix(col, colLin, lin4);\n    col = mix(col, colLin, lin5);\n    col = mix(col, colLin, lin6);\n    col = mix(col, colLin, lin7);\n    col = mix(col, colLin, lin8);\n    col = mix(col, colLin, lin9);\n    col = mix(col, colLin, lin10);\n    col = mix(col, colLin, lin11);\n    col = mix(col, colLin, lin12);\n    col = mix(col, colLin, lin13);\n    col = mix(col, colLin, lin14);\n    col = mix(col, colLin, lin15);\n    col = mix(col, colLin, lin16);\n    col = mix(col, colLin, lin17);\n    col = mix(col, colLin, lin18);\n    col = mix(col, colLin, lin19);\n    col = mix(col, colLin, lin20);\n    col = mix(col, colLin, lin21);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = buildLines(uv);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}