{"ver":"0.1","info":{"id":"fdjBDh","date":"1646138511","viewed":163,"name":"Moire on purpose","username":"ChunderFPV","description":"Various grids and the magic of square roots.  Not all grids shown.  Try replacing xg with dg on line 30 for instance.\nClick and move down to zoom out.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["math","moire","pattern","roots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 20.0\n#define PI radians(180.0)\n#define G(c,v,t) mix(vec3(0), c, 1.0/sin(fract(v-t)*PI)*2.0);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 m = vec2((iMouse.xy-0.5*iResolution.xy)*2.0/iResolution.y);\n    float zoom = (iMouse.z > 0.0) ? pow(pow(1.0-abs(m.y), 2.0), sign(m.y)): 1.0;\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y*SCALE*zoom;\n    \n    uv *= abs(uv); // square the screen space (which roots the grids)\n    float xp = sign(uv.x); // x polarity\n    float yp = sign(uv.y); // y polarity\n    vec2 u = abs(uv); // abs(uv) is used often enough to define it\n    float t = iTime;\n    vec3 rgb = vec3(0.01, 0.05, 0.1);\n    \n    // form grids\n    vec3 xg = G(rgb, u.x, t); // x grid\n    vec3 yg = G(rgb, u.y, t); // y grid\n    vec3 sg = G(rgb, u.x+u.y, t); // sum grid\n    vec3 dg = G(rgb, u.x-u.y, t); // difference grid\n    vec3 mg = G(rgb, xp*yp*sqrt(u.x*u.y), t); // multiply grid\n    vec3 cg = G(rgb, xp*yp*sqrt(u.x/u.y), .0); // cot grid\n    vec3 tg = G(rgb, xp*yp*sqrt(u.y/u.x), .0); // tan grid\n    \n    vec3 col = vec3(0);\n    if (xp > 0.0 && yp > 0.0) col = sg; // top right\n    else if (xp < 0.0 && yp > 0.0) col = yg; // top left\n    else if (xp < 0.0 && yp < 0.0) col = mg; // bottom left\n    else if (xp > 0.0 && yp < 0.0) col = xg; // bottom right\n    //col += cg;\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}