{"ver":"0.1","info":{"id":"dlf3D2","date":"1672424578","viewed":146,"name":"Noise color displacement","username":"TuttiMarcella","description":"simple noise displacement + rotating space by some random angle","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\nvec2 randomVector(vec2 pos){\n    \n    vec2 tmp = vec2(dot(pos,vec2(129.69,69.420)),\n                    dot(pos,vec2(4316.40216,7785.420)));\n    return fract(sin(tmp) * 13473.732106) * 2. - 1.;\n\n}\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*f*(f*(f*6.-15.)+10.);\n\n    return mix( mix( dot( randomVector(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( randomVector(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( randomVector(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( randomVector(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2. - vec2(1.);\n    uv.y *= iResolution.y/iResolution.x;\n\n    uv *= vec2(10,10);\n    //uv *= rotate2d(noise(uv + iTime));\n   uv *= rotate2d(noise(vec2(uv * 2.)));\n\n    vec2 fCoord = fract(uv);\n    vec2 iCoord = floor(uv);\n// Time varying pixel color\n    vec3 col = vec3(0.);\n    col.r = smoothstep(0.,1.,fract(noise(uv + iTime)));\n    col.b = smoothstep(0.,1.,fract(noise(uv + iTime - 0.12)));\n    col.g = smoothstep(0.,1.,fract(noise(uv + iTime - 0.1)));\n    //col += vec3(smoothstep(0.,1.,noise(uv + iTime)) * 5.);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}