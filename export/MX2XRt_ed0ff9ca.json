{"ver":"0.1","info":{"id":"MX2XRt","date":"1710965596","viewed":63,"name":"VisualFlickerTest","username":"pengliu916","description":"\n\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","vision"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPEED 0.01\n#define RESO 256.0\n\nfloat hash( in ivec2 p )  // from iq's shader\n{\n    int n = p.x*3 + p.y*113;\n\n    // 1D hash by Hugo Elias\n\tn = (n << 13) ^ n;\n    n = n * (n * n * 15731 + 789221) + 1376312589;\n    return -1.0+2.0*float( n & 0x0fffffff)/float(0x0fffffff);\n}\n\n\nfloat noise( in vec2 p )\n{\n    ivec2 i = ivec2(floor( p ));\n\n    return hash(i);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n    float ap = iResolution.x/iResolution.y;\n\n\tvec2 uv = p*vec2(iResolution.x/iResolution.y,1.0) + iTime*SPEED;\n\t\n\tfloat f = noise( RESO*uv );\n\t\n\n\tf = 0.5 + 0.5*f;\n    // uncomment to get black/white background signal\n    //f = step(0.5, f);\n\t\n    f *= smoothstep( 0.0, 0.005, abs(p.x-0.5) );\t\n    f *= smoothstep( 0.0, 0.005 * ap , abs(p.y-0.5) );\t\n\t\n\tfragColor = vec4( f, f, f, 1.0 );\n}","name":"Image","description":"","type":"image"}]}