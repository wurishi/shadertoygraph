{"ver":"0.1","info":{"id":"7ldcRM","date":"1659487992","viewed":84,"name":"leinad-10","username":"leinad","description":"fragmented circles pulsating","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 col = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n    \n    float aspectRatio = iResolution.y / iResolution.x;\n    uv.y *= aspectRatio;\n\n    uv *= 8.0;\n    \n    float timeMultiplier = abs(4.0 - floor(uv.x)) + abs(4.0 - floor(uv.y)) + 1.0;\n    \n    // 0 -> 1\n    uv = fract(uv);\n    \n    ///uv.y += (sin(timeMultiplier * iTime) + 1.0) / 2.0 - 0.5;\n    //uv.x += (cos(timeMultiplier * iTime) + 1.0) / 2.0 - 0.5;\n\n    // -0.5 -> 0.5\n    uv -= 0.5;\n    // -1 -> 1\n    uv *= 2.0;\n    // -10 -> 10\n    uv *= 10.0;\n   \n    float time = fract(iTime * timeMultiplier / 4.0);\n    \n    // 1 -> -1 -> 1\n    float dotThreshold = 2.0 * (abs((time - 0.5) * 2.0) - 0.5);\n    // 1 -> 0 -> 1\n    float colorMul = abs(time - 0.5);\n    \n    float d = length(uv);\n    float dotP = dot(normalize(uv), vec2(1.0, 0.0));\n    float dMod2 = mod(d, 2.0);\n    \n    if (dMod2 > 1.0 && mod(dotP, 0.1 * time) > 0.05 && ((uv.y > 0.0 && dotP < dotThreshold) || (uv.y < 0.0 && dotP > dotThreshold))) {\n        float smoothen = (1.0 - smoothstep(1.8, 2.0, dMod2))  * (smoothstep(1.0, 1.2, dMod2));\n        fragColor = vec4(col, 1.0) * smoothen;\n        return;\n    }\n    if (dMod2 < 1.0 && mod(dotP, 0.1 * time) < 0.05 && ((uv.y > 0.0 && dotP > dotThreshold) || (uv.y < 0.0 && dotP < dotThreshold))) {\n        float smoothen2 =  (1.0 - smoothstep(0.8, 1.0, dMod2))  * (smoothstep(0.0, 0.2, dMod2));\n        fragColor = vec4(0.0, time, 1.0, 1.0) * smoothen2;\n        return;\n    }\n    fragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"}]}