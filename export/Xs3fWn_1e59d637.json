{"ver":"0.1","info":{"id":"Xs3fWn","date":"1525053717","viewed":329,"name":"Meow","username":"rory618","description":"Rendering a cat made of triangles. Mouse to rotate and spacebar for averaged image. 1 to toggle showing intermediate steps, where each triangle is colored by a unique ID, basically raw bufA","likes":12,"published":1,"flags":48,"usePreview":0,"tags":["3d","rasterizer","triangle","stochastic","routing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 o, in vec2 i )\n{\n\tvec2 uv = i/R.xy;\n    o = vec4(.1,.7,.5,1e9);\n    for(int j = 0; j < iters; j++){\n        \n        vec4 r = hash44(vec4(F,i,j));        \n        r.z = sqrt(-2.*log(r.z));\n        r.w *= 6.28318;\n        r.zw = r.z*vec2(cos(r.w),sin(r.w));\n        vec3 barycentric;\n        float id = texture(iChannel1,(i+r.zw)/R.xy).w;\n        if(id >= 0.){\n            tri t = getTri(id, iChannel0, R); \n\n            vec2 A = t.A;\n            vec2 B = t.B;\n            vec2 C = t.C;\n\n            float d = (triangleDistance(A*R.xy,B*R.xy,C*R.xy,i,barycentric));\n        \tfloat z = dot(vec3(t.dA,t.dB,t.dC),barycentric);\n            d = clamp(.5-d,0.,1.);\n            \n            \n            if(o.w>z&&d>0.)\n            \to = vec4(t.color,z);\n        }\n    }\n    o = mix(o,texture(iChannel2,uv),float(texture(iChannel3, vec2(32.5/256.0, 0.75) ).x>0.25));\n    if(texture(iChannel3, vec2(49.5/256.0, 0.75) ).x>0.25)\n    \to = vec4(texture(iChannel1,fract(uv*2.))[int(uv.x>.5)+2*int(uv.y>.5)]/tris-1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution\n#define F iFrame\n#define T(x) mat2(  cos(x+vec4(0,-pi,pi,0)) )\n#define pi 1.570796\n#define cam (vec3(0.,0.,.21))\n#define theta ((iMouse.yx/iResolution.yx-.5)*vec2(-4,4))\n#define transform (mat4(1,0,-cam.x/cam.z,0,0,1,-cam.y/cam.z,0,0,0,1,0,0,0,-1./cam.z,1)*(mat4(cos(theta.y),0,-sin(theta.y),0,0,1,0,0,sin(theta.y),0,cos(theta.y),0,0,0,0,1)*mat4(1,0,0,0,0,cos(theta.x),sin(theta.x),0,0,-sin(theta.x),cos(theta.x),0,0,0,0,1)))\n#define iters 12\n#define tris  (411.)\n\nstruct tri {\n    vec2 A;\n    vec2 B;\n    vec2 C;\n    float dA;\n    float dB;\n    float dC;\n    vec3 color;\n}; \n\ntri getTri(float index, sampler2D ch, vec3 res){\n    vec2 p = vec2(mod(index,res.x/2.),floor(index/(res.x/2.)))/res.xy;\n    vec4 t1 = texture(ch, p);\n    vec4 t2 = texture(ch, p+vec2(.5,0));\n    vec4 t3 = texture(ch, p+vec2(0,.5));\n    vec4 t4 = texture(ch, p+vec2(.5,.5));\n    return tri(t1.xy,t2.xy,t3.xy,t1.z,t2.z,t3.z,t4.xyz);\n}\n    \nvec4 hash44(vec4 p4)\n{\n\tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+19.19);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nvec2 randn(vec2 randuniform){\n    vec2 r = randuniform;\n    r.x = sqrt(-2.*log(r.x));\n    r.y *= 6.28318;\n    r = r.x*vec2(cos(r.y),sin(r.y));\n    return r;\n}\n\n#define cross2(v0, v1) v0.x * v1.y - v0.y * v1.x\n#define IsIn(b) all(greaterThan(b, vec3(0.)))\n\nfloat lineDistanceWork(in vec2 p0, in vec2 p0p, in vec2 p1p, in vec2 p0p1, in vec2 p)\n{\n    vec2 p0p1Norm = normalize(p0p1);\n    \n    float t = dot(p0p, p0p1Norm);    \n    float nearestDistance = abs(cross2(p0p, p0p1Norm));\n        \n    return mix(\n        nearestDistance*nearestDistance,\n        min(dot(p0p,p0p), dot(p1p,p1p)),\n        float(t <= 0.0 || t*t >= dot(p0p1,p0p1))\n    );  \n}    \n\nfloat lineDistance(in vec2 p0, in vec2 p1, in vec2 p)\n{\n    vec2 p0p = p - p0;\n    vec2 p1p = p - p1;\n    vec2 p0p1 = p1 - p0;\n    \n    return sqrt(lineDistanceWork(p0, p0p, p1p, p0p1, p));  \n}\n\nfloat triangleDistance(in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p, out vec3 barycentric)\n{\n    vec2 e0 = p1 - p0;\n\tvec2 e1 = p2 - p1;\n    vec2 e2 = p0 - p2;\n\n\tvec2 v0 = p - p0;\n\tvec2 v1 = p - p1;\n\tvec2 v2 = p - p2;\n    \n    float a = cross2(e0, e1);\n    \n    //Calculate distance to the triangle as a min distance to it's edges\n    float dst = \n        sqrt(min(min\n        (\n            lineDistanceWork(p0, v0, v1, e0, p),\n            lineDistanceWork(p1, v1, v2, e1, p)\n        ),  lineDistanceWork(p2, v2, v0, e2, p)));\n    \n    //Using simplified 2d version of barycentric coords\n    vec2 bar2 = vec2(cross2(v1, v2), cross2(v2, v0)) / a;\n    barycentric = vec3(bar2, 1.0 - bar2.x - bar2.y);\n    \n    bool isInside = IsIn(barycentric);\n    //When we inside a triangle the distance is negative\n    return dst * mix(1.0, -1.0, float(isInside));    \n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3[] vertecies = vec3[](\nvec3(-995.8304  ,  75.5037  ,   -608.4150),\nvec3(-992.0101  ,  115.6586 ,    -568.2448),\nvec3(-948.9031  ,  122.7461 ,    -586.1746),\nvec3(-808.0504  ,  82.2768  ,   -504.0376),\nvec3(-829.8732  ,  90.4546  ,   -495.4801),\nvec3(-815.5106  ,  55.3138  ,   -483.6030),\nvec3(-827.6768  ,  4.7252   ,   -550.7932),\nvec3(-926.4594  ,  -11.3236 ,    -509.0985),\nvec3(-924.9203  ,  4.9779   ,   -555.2147),\nvec3(-699.9360  ,  47.5303  ,   -579.6901),\nvec3(-725.3939  ,  13.6954  ,   -604.4670),\nvec3(-739.4488  ,  72.5684  ,   -610.5344),\nvec3(-1034.0753 ,  -11.3236 ,    -534.3847),\nvec3(-1060.0525 ,  17.3272  ,   -541.3537),\nvec3(-1038.5428 ,  29.1891  ,   -575.5334),\nvec3(-1000.9319 ,  78.8761  ,   -383.3885),\nvec3(-930.1043  ,  71.7035  ,   -351.5857),\nvec3(-920.2565  ,  109.7136 ,    -404.0531),\nvec3(-702.3473  ,  16.8526  ,    -571.5159),\nvec3(-728.9493  ,  -11.3236 ,    -558.9595),\nvec3(-724.4047  ,  -11.3236 ,    -589.9592),\nvec3(-717.2055  ,  41.9075  ,   -502.3305),\nvec3(-735.5786  ,  47.5303  ,   -491.1331),\nvec3(-733.9127  ,  18.3676  ,   -496.1548),\nvec3(-733.9399  ,  96.2936  ,   -552.8721),\nvec3(-694.6128  ,  66.2405  ,   -544.0293),\nvec3(-727.1962  ,  94.3858  ,   -574.8710),\nvec3(-925.7615  ,  126.6104 ,    -513.3122),\nvec3(-853.2005  ,  115.3310 ,    -545.4424),\nvec3(-894.0300  ,  131.5131 ,    -564.8028),\nvec3(-790.0053  ,  -4.9984  ,   -523.5698),\nvec3(-788.1220  ,  -4.3065  ,   -488.5588),\nvec3(-795.1429  ,  6.2171   ,   -449.4353),\nvec3(-840.2600  ,  20.1157  ,   -360.7992),\nvec3(-841.6091  ,  -1.1064  ,   -353.7490),\nvec3(-798.4716  ,  -11.3236 ,    -394.9299),\nvec3(-836.6793  ,  74.1277  ,   -450.3682),\nvec3(-832.0030  ,  64.3311  ,   -416.8673),\nvec3(-815.2516  ,  34.6305  ,   -481.9950),\nvec3(-832.3073  ,  9.2289   ,   -452.2656),\nvec3(-789.5191  ,  55.1783  ,   -621.8122),\nvec3(-795.7584  ,  20.4113  ,   -616.7018),\nvec3(-853.6783  ,  -11.3236 ,    -657.0101),\nvec3(-814.8730  ,  -5.0179  ,   -583.5240),\nvec3(-1012.5013 ,  -11.3236 ,    -419.7687),\nvec3(-990.1320  ,  -1.7048  ,   -373.5935),\nvec3(-1004.2960 ,  44.1512  ,   -365.5110),\nvec3(-855.9658  ,  10.3450  ,   -380.9660),\nvec3(-803.1211  ,  -11.3236 ,    -401.7929),\nvec3(-906.3935  ,  -0.5085  ,   -358.5250),\nvec3(-957.7062  ,  114.9286 ,    -436.9630),\nvec3(-977.6108  ,  130.2673 ,    -533.3871),\nvec3(-738.3090  ,  5.0845   ,   -507.1984),\nvec3(-709.8657  ,  -11.3236 ,    -526.8616),\nvec3(-710.5553  ,  1.5324   ,   -511.1166),\nvec3(-747.3311  ,  0.0296   ,   -472.9264),\nvec3(-749.3085  ,  11.8466  ,   -475.1376),\nvec3(-792.2325  ,  17.3739  ,   -396.8396),\nvec3(-878.4414  ,  35.7717  ,   -642.8316),\nvec3(-989.6032  ,  17.0865  ,   -621.6263),\nvec3(-944.0946  ,  58.0384  ,   -642.5948),\nvec3(-851.3480  ,  63.6161  ,   -648.0112),\nvec3(-785.4418  ,  72.5684  ,   -496.2609),\nvec3(-793.9230  ,  105.7400 ,    -489.6239),\nvec3(-805.3693  ,  49.2849  ,   -493.7585),\nvec3(-707.0358  ,  66.2405  ,   -513.1634),\nvec3(-781.2529  ,  20.6106  ,   -610.5267),\nvec3(-752.0867  ,  49.2849  ,   -626.1438),\nvec3(-764.1007  ,  4.7729   ,   -624.7463),\nvec3(-782.7896  ,  109.1638 ,    -561.5859),\nvec3(-755.0754  ,  109.5690 ,    -604.1262),\nvec3(-778.0606  ,  97.3133  ,   -596.8195),\nvec3(-1035.4617 ,  94.9357  ,   -465.6595),\nvec3(-962.6334  ,  117.6223 ,    -475.3002),\nvec3(-1042.7870 ,  48.9679  ,   -403.3333),\nvec3(-1073.9026 ,  52.3123  ,   -485.0486),\nvec3(-1056.9429 ,  9.7043   ,   -458.5848),\nvec3(-768.6208  ,  -8.2751  ,   -504.6131),\nvec3(-771.2246  ,  5.6477   ,   -497.4490),\nvec3(-706.1431  ,  -11.3236 ,    -536.1108),\nvec3(-695.7332  ,  1.5324   ,   -547.9435),\nvec3(-699.7588  ,  -1.4693  ,   -532.1415),\nvec3(-703.2778  ,  44.4115  ,   -511.2145),\nvec3(-690.5525  ,  44.4115  ,   -542.8315),\nvec3(-806.4027  ,  26.4766  ,   -417.1291),\nvec3(-779.1372  ,  17.1613  ,   -493.2779),\nvec3(-882.1035  ,  74.7240  ,   -366.3839),\nvec3(-821.3383  ,  74.7946  ,   -638.8068),\nvec3(-867.0529  ,  24.4554  ,   -668.6847),\nvec3(-784.6449  ,  106.3202 ,    -578.2576),\nvec3(-831.2065  ,  104.9587 ,    -620.3184),\nvec3(-783.5483  ,  7.4472   ,   -469.5750),\nvec3(-764.3502  ,  -11.3236 ,    -481.8925),\nvec3(-792.4278  ,  -8.2995  ,   -418.0562),\nvec3(-743.1558  ,  106.7015 ,    -584.4225),\nvec3(-685.2125  ,  17.4394  ,   -530.0173),\nvec3(-697.9792  ,  37.3655  ,   -539.4918),\nvec3(-690.5497  ,  17.4394  ,   -516.7567),\nvec3(-712.0912  ,  13.6706  ,   -585.8790),\nvec3(-996.4185  ,  -11.3236 ,    -539.4856),\nvec3(-1024.4155 ,  0.8627   ,   -577.6360),\nvec3(-798.4020  ,  1.7822   ,   -616.4513),\nvec3(-829.1520  ,  -11.3236 ,    -598.7313),\nvec3(-873.5256  ,  -0.4193  ,   -622.8918),\nvec3(-728.0101  ,  64.0319  ,   -495.0735),\nvec3(-744.3813  ,  95.5499  ,   -520.9390),\nvec3(-761.2942  ,  88.9008  ,   -508.1789),\nvec3(-781.7170  ,  26.8159  ,   -493.0542),\nvec3(-901.6669  ,  -11.3236 ,    -398.2102),\nvec3(-767.1221  ,  11.5533  ,   -493.6247),\nvec3(-751.5170  ,  13.1415  ,   -492.4418),\nvec3(-780.6548  ,  14.4846  ,   -472.4714),\nvec3(-1060.7682 ,  61.4407  ,   -446.4903),\nvec3(-1051.7577 ,  95.4428  ,   -514.2819),\nvec3(-1039.2488 ,  61.4143  ,   -568.5452),\nvec3(-854.7079  ,  94.0548  ,   -504.5181),\nvec3(-929.0150  ,  119.9958 ,    -442.1982),\nvec3(-864.1474  ,  97.4144  ,   -420.7776),\nvec3(-870.3384  ,  96.9634  ,   -459.3782),\nvec3(-780.8250  ,  4.2498   ,   -601.9772),\nvec3(-741.7265  ,  -11.3236 ,    -599.0881),\nvec3(-721.0571  ,  7.8997   ,   -601.0405),\nvec3(-703.8851  ,  -1.0353  ,   -617.8672),\nvec3(-942.1671  ,  7.3515   ,   -341.2048),\nvec3(-921.3945  ,  19.8009  ,   -333.6794),\nvec3(-943.1711  ,  -11.3236 ,    -350.5991),\nvec3(-838.6180  ,  27.0678  ,   -411.9889),\nvec3(-863.2388  ,  18.6852  ,   -406.0000),\nvec3(-814.4047  ,  16.0976  ,   -411.6389),\nvec3(-694.4426  ,  41.9075  ,   -558.8868),\nvec3(-710.5289  ,  22.1320  ,   -509.3748),\nvec3(-706.3202  ,  37.3655  ,   -518.7678),\nvec3(-696.0511  ,  42.0174  ,   -536.3110),\nvec3(-1036.4375 ,  -11.3236 ,    -459.7409),\nvec3(-770.0264  ,  106.7015 ,    -517.6603),\nvec3(-792.2722  ,  109.5690 ,    -511.7077),\nvec3(-779.3687  ,  119.6276 ,    -475.8542),\nvec3(-758.4063  ,  103.6384 ,    -502.1507),\nvec3(-784.4563  ,  107.8258 ,    -494.3299),\nvec3(-783.4283  ,  78.5575  ,   -513.7649),\nvec3(-883.1703  ,  -3.6364  ,   -655.2727),\nvec3(-730.2901  ,  88.9008  ,   -585.2112),\nvec3(-697.2075  ,  64.0319  ,   -571.6052),\nvec3(-750.1225  ,  78.5575  ,   -596.5160),\nvec3(-737.4004  ,  107.8258 ,    -611.2444),\nvec3(-724.0314  ,  103.6384 ,    -587.5582),\nvec3(-782.6500  ,  -11.3236 ,    -570.2200),\nvec3(-900.4669  ,  96.2424  ,   -633.2571),\nvec3(-897.0970  ,  120.3056 ,    -610.5399),\nvec3(-833.9095  ,  115.4948 ,    -598.8503),\nvec3(-853.0287  ,  122.5423 ,    -581.7062),\nvec3(-759.3208  ,  -11.3236 ,    -457.8283),\nvec3(-742.3607  ,  -11.3236 ,    -526.3356),\nvec3(-694.5074  ,  22.1320  ,   -549.1814),\nvec3(-839.2968  ,  22.8362  ,   -391.3108),\nvec3(-820.5211  ,  30.1974  ,   -389.5576),\nvec3(-829.5941  ,  38.5166  ,   -409.1643),\nvec3(-836.8793  ,  47.4207  ,   -386.5396),\nvec3(-869.9812  ,  46.1542  ,   -482.3823),\nvec3(-890.2067  ,  70.0660  ,   -483.5094),\nvec3(-909.9105  ,  98.4824  ,   -473.5333),\nvec3(-937.6815  ,  103.8339 ,    -483.5974),\nvec3(-804.8950  ,  95.6823  ,   -518.2141),\nvec3(-829.9017  ,  105.1277 ,    -539.1833),\nvec3(-733.7024  ,  -11.3236 ,    -611.5656),\nvec3(-738.7223  ,  10.7529  ,   -610.3510),\nvec3(-720.5469  ,  -9.4244  ,   -620.4963),\nvec3(-945.2722  ,  87.9113  ,   -629.4183),\nvec3(-995.0536  ,  46.6390  ,   -622.5880),\nvec3(-707.1171  ,  0.0891   ,   -521.4265),\nvec3(-701.2590  ,  1.7814   ,   -528.7713),\nvec3(-696.3574  ,  18.3020  ,   -516.0935),\nvec3(-705.5143  ,  32.6190  ,   -518.7469),\nvec3(-746.8992  ,  89.1834  ,   -623.5667),\nvec3(-774.1794  ,  85.3090  ,   -610.5543),\nvec3(-749.5588  ,  79.4633  ,   -607.6957),\nvec3(-735.9028  ,  86.8596  ,   -621.5189),\nvec3(-796.1419  ,  90.7038  ,   -608.0107),\nvec3(-1030.2487 ,  110.2389 ,    -493.4697),\nvec3(-984.0498  ,  122.4129 ,    -486.0958),\nvec3(-1026.7104 ,  102.5003 ,    -546.5026),\nvec3(-790.7665  ,  79.4633  ,   -505.3118),\nvec3(-790.4939  ,  86.8596  ,   -485.8827),\nvec3(-772.3555  ,  -4.7332  ,   -484.7859),\nvec3(-770.9318  ,  12.4502  ,   -486.0145),\nvec3(-896.9176  ,  -11.3236 ,    -454.9405),\nvec3(-770.0953  ,  -11.3236 ,    -537.9039),\nvec3(-692.3391  ,  11.6189  ,   -522.3785),\nvec3(-688.5785  ,  13.9763  ,   -545.0641),\nvec3(-874.0591  ,  -11.3236 ,    -597.7254),\nvec3(-950.8364  ,  118.9327 ,    -489.5284),\nvec3(-830.0552  ,  34.2774  ,   -389.5935),\nvec3(-711.2487  ,  -11.3236 ,    -613.0066),\nvec3(-704.1648  ,  -6.0835  ,   -597.8587),\nvec3(-806.8093  ,  28.4912  ,   -497.3588),\nvec3(-697.3834  ,  32.6190  ,   -538.9485),\nvec3(-1069.4880 ,  24.5603  ,   -494.2723),\nvec3(-973.8975  ,  -1.5557  ,   -607.4702),\nvec3(-997.2460  ,  -11.3236 ,    -558.3713),\nvec3(-688.9415  ,  18.3020  ,   -534.5188),\nvec3(-871.4866  ,  -11.3236 ,    -650.8430),\nvec3(-793.2932  ,  109.4704 ,    -565.8134),\nvec3(-800.0500  ,  103.8140 ,    -523.6841),\nvec3(-736.8707  ,  111.9007 ,    -616.0329),\nvec3(-729.2321  ,  106.4699 ,    -623.9708),\nvec3(-720.9323  ,  119.6276 ,    -621.0443),\nvec3(-800.4397  ,  14.8650  ,   -433.0968),\nvec3(-710.6121  ,  -11.3236 ,    -601.5969),\nvec3(-736.1279  ,  -4.1757  ,   -606.0648),\nvec3(-783.3688  ,  5.3768   ,   -498.0137),\nvec3(-703.4008  ,  13.9763  ,   -508.2369),\nvec3(-787.3816  ,  106.4699 ,    -479.4933),\nvec3(-869.6447  ,  -11.3236 ,    -352.0651),\nvec3(-849.2291  ,  -11.3236 ,    -613.3991),\nvec3(-715.2297  ,  1.1529   ,    -625.7358),\nvec3(-843.8202  ,  -11.3236 ,    -359.5085),\nvec3(-892.2355  ,  102.2551 ,    -392.7515),\nvec3(-748.9401  ,  -11.3236 ,    -575.4650),\nvec3(-778.8455  ,  -11.3236 ,    -431.0151),\nvec3(-922.5539  ,  -11.3236 ,    -344.4546));\n\n\nint triz = 459;\n\n    \nint[] triangles = int[](459, 460, 461,\n\n\n462, 463, 464, \n465, 466, 467, \n468, 469, 470, \n471, 472, 473, \n474, 475, 476, \n477, 478, 479, \n480, 481, 482, \n483, 484, 485, \n486, 487, 488, \n489, 490, 491, \n492, 493, 494, \n495, 496, 497, \n498, 466, 465, \n499, 500, 501, \n465, 467, 502, \n503, 504, 505, \n506, 507, 508, \n476, 509, 474, \n486, 488, 510, \n511, 512, 513, \n514, 515, 516, \n517, 518, 519, \n519, 520, 517, \n521, 522, 523, \n484, 483, 524, \n525, 526, 527, \n528, 529, 530, \n526, 525, 499, \n531, 474, 532, \n533, 534, 535, \n536, 537, 489, \n538, 539, 540, \n524, 541, 542, \n496, 543, 544, \n545, 475, 492, \n546, 547, 520, \n548, 530, 549, \n550, 551, 552, \n552, 491, 550, \n462, 523, 522, \n553, 528, 483, \n493, 492, 475, \n554, 555, 556, \n557, 469, 468, \n466, 558, 467, \n518, 559, 473, \n560, 561, 501, \n562, 518, 517, \n470, 469, 526, \n528, 553, 529, \n563, 564, 565, \n521, 566, 481, \n508, 567, 506, \n568, 481, 566, \n569, 570, 543, \n571, 572, 534, \n573, 472, 572, \n574, 487, 486, \n575, 576, 577, \n578, 527, 579, \n580, 557, 581, \n505, 582, 583, \n493, 583, 584, \n498, 585, 586, \n507, 506, 587, \n477, 468, 588, \n542, 484, 524, \n480, 482, 589, \n590, 556, 591, \n497, 496, 544, \n566, 521, 523, \n471, 592, 472, \n593, 594, 595, \n596, 597, 598, \n599, 562, 517, \n547, 499, 501, \n600, 601, 470, \n602, 603, 604, \n579, 605, 578, \n502, 578, 605, \n549, 606, 607, \n548, 608, 609, \n610, 611, 511, \n539, 538, 477, \n477, 588, 612, \n613, 614, 587, \n615, 587, 543, \n543, 496, 615, \n616, 615, 496, \n495, 617, 618, \n619, 620, 575, \n621, 622, 574, \n594, 593, 528, \n623, 624, 625, \n461, 626, 459, \n627, 519, 518, \n513, 628, 629, \n630, 631, 589, \n632, 633, 529, \n603, 634, 635, \n636, 546, 549, \n526, 499, 636, \n510, 637, 638, \n573, 639, 460, \n492, 616, 545, \n614, 516, 515, \n640, 641, 521, \n521, 563, 565, \n576, 575, 476, \n576, 545, 616, \n544, 537, 568, \n642, 643, 537, \n537, 643, 568, \n491, 490, 550, \n498, 586, 644, \n502, 605, 465, \n536, 489, 645, \n646, 513, 629, \n647, 646, 540, \n502, 467, 648, \n574, 649, 620, \n618, 617, 574, \n510, 488, 461, \n607, 609, 608, \n512, 511, 611, \n517, 547, 599, \n520, 547, 517, \n509, 532, 474, \n620, 532, 509, \n650, 613, 615, \n613, 586, 585, \n505, 583, 475, \n475, 583, 493, \n469, 625, 624, \n526, 469, 624, \n651, 581, 652, \n623, 625, 651, \n653, 497, 566, \n462, 464, 523, \n591, 556, 555, \n612, 588, 654, \n475, 474, 505, \n533, 474, 531, \n590, 591, 541, \n631, 480, 589, \n534, 572, 472, \n655, 535, 534, \n656, 467, 657, \n467, 656, 648, \n656, 657, 471, \n511, 513, 482, \n515, 569, 614, \n646, 647, 658, \n612, 654, 658, \n524, 564, 563, \n563, 541, 524, \n501, 599, 547, \n562, 599, 659, \n596, 595, 597, \n595, 594, 522, \n470, 526, 632, \n633, 632, 526, \n543, 570, 544, \n490, 544, 570, \n537, 536, 642, \n602, 600, 470, \n470, 635, 634, \n639, 637, 510, \n531, 572, 571, \n492, 614, 650, \n614, 613, 650, \n596, 565, 564, \n564, 528, 593, \n660, 609, 487, \n487, 661, 660, \n662, 663, 635, \n664, 529, 553, \n604, 600, 602, \n483, 485, 553, \n491, 498, 489, \n585, 498, 665, \n598, 565, 596, \n521, 565, 598, \n538, 540, 628, \n661, 622, 621, \n594, 621, 522, \n484, 542, 601, \n601, 485, 484, \n466, 498, 644, \n617, 464, 463, \n497, 617, 495, \n652, 479, 666, \n510, 638, 486, \n486, 649, 574, \n533, 505, 474, \n505, 533, 503, \n516, 494, 514, \n624, 667, 527, \n624, 527, 526, \n490, 668, 544, \n489, 668, 490, \n636, 549, 530, \n529, 633, 530, \n589, 482, 513, \n513, 646, 669, \n518, 562, 656, \n559, 518, 656, \n460, 459, 573, \n473, 627, 518, \n499, 525, 500, \n578, 502, 500, \n606, 549, 520, \n546, 520, 549, \n630, 669, 646, \n646, 554, 556, \n665, 587, 585, \n552, 587, 665, \n494, 516, 492, \n614, 492, 516, \n635, 663, 603, \n603, 664, 604, \n597, 670, 641, \n641, 640, 597, \n652, 581, 557, \n652, 557, 479, \n520, 519, 606, \n459, 626, 519, \n477, 612, 539, \n540, 539, 647, \n671, 508, 507, \n499, 547, 546, \n499, 546, 636, \n659, 672, 562, \n562, 648, 656, \n465, 489, 498, \n645, 489, 465, \n581, 673, 580, \n673, 581, 651, \n561, 502, 648, \n560, 502, 561, \n667, 624, 623, \n576, 496, 495, \n616, 496, 576, \n567, 644, 586, \n506, 567, 586, \n643, 570, 569, \n643, 642, 550, \n609, 607, 488, \n609, 488, 487, \n588, 601, 542, \n588, 542, 555, \n493, 674, 494, \n584, 674, 493, \n531, 532, 638, \n638, 649, 486, \n476, 675, 576, \n475, 675, 476, \n600, 485, 601, \n485, 600, 604, \n510, 460, 639, \n461, 460, 510, \n514, 511, 515, \n515, 511, 569, \n543, 614, 569, \n614, 543, 587, \n579, 676, 605, \n575, 509, 476, \n509, 575, 620, \n551, 677, 552, \n636, 633, 526, \n636, 530, 633, \n535, 503, 533, \n541, 563, 480, \n590, 541, 480, \n630, 556, 590, \n630, 646, 556, \n528, 660, 661, \n530, 548, 528, \n477, 538, 478, \n607, 608, 549, \n549, 608, 548, \n482, 481, 568, \n482, 568, 511, \n501, 500, 560, \n500, 502, 560, \n582, 505, 504, \n503, 584, 504, \n617, 497, 464, \n523, 464, 497, \n544, 668, 537, \n489, 537, 668, \n615, 585, 587, \n585, 615, 613, \n641, 522, 521, \n641, 670, 522, \n618, 619, 495, \n495, 577, 576, \n661, 621, 594, \n661, 594, 528, \n557, 477, 479, \n557, 468, 477, \n630, 589, 669, \n513, 669, 589, \n501, 659, 599, \n506, 586, 613, \n506, 613, 587, \n635, 470, 632, \n635, 632, 662, \n463, 462, 621, \n522, 621, 462, \n497, 653, 523, \n566, 523, 653, \n671, 678, 508, \n567, 508, 678, \n492, 650, 616, \n615, 616, 650, \n491, 552, 665, \n491, 665, 498, \n569, 511, 568, \n568, 643, 569, \n470, 601, 468, \n588, 468, 601, \n667, 623, 579, \n579, 527, 667, \n470, 634, 602, \n634, 603, 602, \n598, 597, 640, \n598, 640, 521, \n655, 472, 592, \n472, 655, 534, \n587, 552, 507, \n507, 552, 677, \n461, 607, 606, \n607, 461, 488, \n529, 662, 632, \n662, 529, 664, \n610, 514, 494, \n511, 514, 610, \n620, 618, 574, \n619, 618, 620, \n469, 673, 625, \n625, 673, 651, \n628, 512, 538, \n628, 513, 512, \n656, 471, 559, \n473, 559, 471, \n637, 639, 572, \n572, 639, 573, \n487, 574, 622, \n661, 487, 622, \n531, 571, 533, \n533, 571, 534, \n612, 647, 539, \n647, 612, 658, \n574, 463, 621, \n463, 574, 617, \n562, 672, 648, \n475, 545, 675, \n675, 545, 576, \n651, 652, 666, \n467, 558, 657, \n469, 580, 673, \n469, 557, 580, \n503, 535, 592, \n535, 655, 592, \n572, 531, 637, \n638, 637, 531, \n583, 582, 584, \n582, 504, 584, \n568, 566, 544, \n544, 566, 497, \n595, 596, 593, \n596, 564, 593, \n553, 604, 664, \n553, 485, 604, \n500, 525, 578, \n527, 578, 525, \n524, 483, 564, \n528, 564, 483, \n591, 542, 541, \n555, 542, 591, \n473, 573, 459, \n472, 573, 473, \n609, 660, 548, \n548, 660, 528, \n570, 550, 490, \n575, 577, 619, \n495, 619, 577, \n590, 631, 630, \n590, 480, 631, \n646, 629, 540, \n628, 540, 629, \n551, 550, 642, \n554, 646, 658, \n555, 554, 658, \n658, 654, 555, \n654, 588, 555, \n620, 649, 532, \n638, 532, 649, \n481, 563, 521, \n563, 481, 480, \n670, 597, 595, \n670, 595, 522, \n664, 603, 663, \n662, 664, 663, \n606, 626, 461, \n626, 606, 519, \n459, 627, 473, \n519, 627, 459, \n605, 645, 465);\n\nvoid mainImage( out vec4 o, in vec2 i )\n{\n    o = vec4(0);\n    float d = 5.;\n    vec3 A,B,C;\n    \n    float v = 1.;\n        \n    int index = int(i.x)-(int(i.x)/int(R.x/2.))*int(R.x/2.)+(int(i.y)-int(R.y/2.)*(int(i.y)/int(R.y/2.)))*int(R.x/2.);\n    \n    index += 100;\n    index -= (index/int(tris))*int(tris);\n        A = vertecies[triangles[index*3]-triz];\n        B = vertecies[triangles[index*3+1]-triz];\n        C = vertecies[triangles[index*3+2]-triz];\n        A -= vec3(-728.0101  ,  64.0319  ,   -495.0735);\n        B -= vec3(-728.0101  ,  64.0319  ,   -495.0735);\n        C -= vec3(-728.0101  ,  64.0319  ,   -495.0735);\n        A /= 400.;\n        B /= 400.;\n        C /= 400.;\n    \n    vec3 norm = cross(normalize(A-B),normalize(C-B));\n    \n    if(float(index)<tris){\n        //B.x += texture(iChannel1,fract(B.xy)).x*.15;\n        if(i.x>R.x/2.){\n            if(i.y>R.y/2.){\n                o.xyz = vec3(.59,.5387,.5488)*(.6+.7*dot(norm,normalize(vec3(-1,-3,1))));\n            } else {\n                o.xyz = ((vec4(B,1)*(transform))).xyz*vec3(R.y/R.x,1,-1)+.5;\n            }\n        } else {\n            if(i.y>R.y/2.){\n                o.xyz = ((vec4(C,1)*(transform))).xyz*vec3(R.y/R.x,1,-1)+.5;\n            } else {\n                o.xyz = ((vec4(A,1)*(transform))).xyz*vec3(R.y/R.x,1,-1)+.5;\n            }\n        }\n    }\n    \n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 o, in vec2 i )\n{\n    o = vec4(-1);\n    \n    float d = 1e9;\n    float z = 1e9;\n    for(int j = 0; j < iters; j++){\n        vec4 r = hash44(vec4(j,F,i));\n        float rindex = tris+mod(r.x*1e5+r.y*1e3+r.z, tris);\n        tri t = getTri(rindex, iChannel0, R); \n\n        vec2 Ap = t.A;\n        vec2 Bp = t.B;\n        vec2 Cp = t.C;\n        vec3 barycentric;\n        float dp = -30.+triangleDistance(Ap*R.xy,Bp*R.xy,Cp*R.xy,i,barycentric);\n        float zp = dot(vec3(t.dA,t.dB,t.dC),barycentric);\n        if(max(0.,dp)<=max(0.,d)){\n            if(dp<-10.||d<-10.){\n                if(zp*.9<z){\n                    d = dp;\n                    z = zp;\n                    o.x = rindex;\n                }\n            } else {\n                d = dp;\n                z = zp;\n                o.x = rindex;\n            }\n        }\n    }\n    d=1e9;\n    for(int j = 0; j < iters; j++){\n        vec4 r = hash44(vec4(j,F,i));\n        float id = texture(iChannel1,(i+randn(r.zw)*30.)/R.xy).x;\n        tri t = getTri(id, iChannel0, R); \n\n        vec2 Ap = t.A;\n        vec2 Bp = t.B;\n        vec2 Cp = t.C;\n        vec3 barycentric;\n        float dp = -20.+triangleDistance(Ap*R.xy,Bp*R.xy,Cp*R.xy,i,barycentric);\n        float zp = dot(vec3(t.dA,t.dB,t.dC),barycentric);\n        if(max(0.,dp)<=max(0.,d)){\n            if(dp<-5.||d<-5.){\n                if(zp*.9<z){\n                    d = dp;\n                    z = zp;\n                    o.y = id;\n                }\n            } else {\n                d = dp;\n                z = zp;\n                o.y = id;\n            }\n        }\n    }\n    \n    d=1e9;\n    for(int j = 0; j < iters; j++){\n        vec4 r = hash44(vec4(j,F,i));\n        float id = texture(iChannel1,(i+randn(r.zw)*30.)/R.xy).y;\n        tri t = getTri(id, iChannel0, R); \n\n        vec2 Ap = t.A;\n        vec2 Bp = t.B;\n        vec2 Cp = t.C;\n        vec3 barycentric;\n        float dp = -3.+triangleDistance(Ap*R.xy,Bp*R.xy,Cp*R.xy,i,barycentric);\n        float zp = dot(vec3(t.dA,t.dB,t.dC),barycentric);\n        if(max(0.,dp)<=max(0.,d)){\n            if(dp<-3.||d<-3.){\n                if(zp*.9<z){\n                    d = dp;\n                    z = zp;\n                    o.z = id;\n                }\n            } else {\n                d = dp;\n                z = zp;\n                o.z = id;\n            }\n        }\n    }\n    d=1e9;\n    \n    for(int j = 0; j < iters; j++){\n        vec4 r = hash44(vec4(j,F,i));\n        float id = texture(iChannel1,(i+randn(r.zw)*5.)/R.xy).z;\n        tri t = getTri(id, iChannel0, R); \n\n        vec2 Ap = t.A;\n        vec2 Bp = t.B;\n        vec2 Cp = t.C;\n        vec3 barycentric;\n        float dp = triangleDistance(Ap*R.xy,Bp*R.xy,Cp*R.xy,i,barycentric);\n        float zp = dot(vec3(t.dA,t.dB,t.dC),barycentric);\n        if(max(0.,dp)<=max(0.,d)){\n            if(dp==-2.||d<-2.){\n                if(zp*.9<z){\n                    d = dp;\n                    z = zp;\n                    o.w = id;\n                }\n            } else {\n                d = dp;\n                z = zp;\n                o.w = id;\n            }\n        }\n    }\n    \n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 o, in vec2 i )\n{\n\tvec2 uv = i/R.xy;\n    o = vec4(.1,.7,.5,1e9);\n    for(int j = 0; j < iters; j++){\n        \n        vec4 r = hash44(vec4(F,i,j));        \n        r.z = sqrt(-2.*log(r.z));\n        r.w *= 6.28318;\n        r.zw = r.z*vec2(cos(r.w),sin(r.w));\n        vec3 barycentric;\n        float id = texture(iChannel1,(i+r.zw)/R.xy).w;\n        if(id >= 0.){\n            tri t = getTri(id, iChannel0, R); \n\n            vec2 A = t.A;\n            vec2 B = t.B;\n            vec2 C = t.C;\n\n            float d = (triangleDistance(A*R.xy,B*R.xy,C*R.xy,i+randn(r.xy),barycentric));\n        \tfloat z = dot(vec3(t.dA,t.dB,t.dC),barycentric);\n            d = clamp(.5-d,0.,1.);\n            \n            \n            if(o.w>z&&d>0.)\n            \to = vec4(t.color,z);\n        }\n    }\n    o = mix(o,texture(iChannel2,uv),.98);\n}","name":"Buf C","description":"","type":"buffer"}]}