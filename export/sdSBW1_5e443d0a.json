{"ver":"0.1","info":{"id":"sdSBW1","date":"1646102710","viewed":162,"name":"Oldskool demo effects - tunnel","username":"makslane","description":"Just a little demo effect test","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["demo","oldskool","effects"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void tunnelEffect( out vec4 fragColor, in vec2 fragCoord ) {\n\n    //Thanks to:\n    //https://fabiensanglard.net/Tunnel/index.php\n    //https://lodev.org/cgtutor/tunnel.html\n\n    float texWidth = iChannelResolution[0].x/400.;\n    float texHeight = iChannelResolution[0].y/400.;\n\n    float scrWidth = iResolution.x;\n    float scrHeight = iResolution.y;\n    float x = fragCoord.x;\n    float y = fragCoord.y;\n\n   \n    \n    //non-linear transformation\n    float angle, distance;\n    float ratio = 32.0;\n    distance = mod(ratio * texHeight / sqrt((x - scrWidth / 2.0) * (x - scrWidth / 2.0) + (y - scrHeight / 2.0) * (y - scrHeight / 2.0)), texHeight);\n    angle = (0.5 * texWidth * atan(y - scrHeight / 2.0, x - scrWidth / 2.0) / 3.1416);\n    \n  \n\n    //animation\n    float velocity = 15.*(sin(iTime/10.));\n    float animation = velocity*iTime/100.;\n    \n    //calculate the shift values out of the animation value\n    float shiftX = (texWidth * 1.0 * animation);\n    float shiftY = (texHeight * 0.25 * animation);\n\n    \n    //get the texel from the texture by using the tables, shifted with the animation values    \n    vec4 color = texture(iChannel0, vec2(mod((distance + shiftX), texWidth), mod((angle + shiftY), texHeight)));    \n    \n    \n    fragColor = color;\n\n} \n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    tunnelEffect(fragColor, fragCoord );\n    \n}","name":"Image","description":"","type":"image"}]}