{"ver":"0.1","info":{"id":"XttGz2","date":"1470324442","viewed":300,"name":"domain warping texture","username":"KukaTails","description":"domain warping texture","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","texture","domainwarping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash(vec2 p)\n{\n    float h = dot(p, vec2(17.1, 311.7));\n    return -1.0 + 2.0 * fract(sin(h) * 4358.5453);\n}\n\nfloat Noise(vec2 p)\n{\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    \n    return mix(mix(Hash(i + vec2(0.0, 0.0)),\n                   Hash(i + vec2(1.0, 0.0)), u.x),\n               mix(Hash(i + vec2(0.0, 1.0)),\n                   Hash(i + vec2(1.0, 1.0)), u.x), u.y);\n \n}\n\n\nfloat FbmNoise(vec2 p)\n{\n  const float octaves = 3.5;\n  const float lacunarity = 2.0;\n  const float H = 0.26;\n\n  float value = 0.0, k = 0.0;\n  for (float i = 0.0; i < octaves; ++ i) {\n    value += Noise(p) * pow(lacunarity, -H * i);\n    p *= lacunarity;\n    ++k;\n  }\n\n  float remainder = fract(octaves);\n  if (remainder != 0.0) {\n    value += remainder * Noise(p) * pow(lacunarity, -H * k);\n  }\n  return value;\n}\n\n\nfloat Pattern(vec2 p)\n{\n    vec2 q = vec2(FbmNoise(p + vec2(0.0, 0.0)),\n                  FbmNoise(p + vec2(-0.3, 0.6)));\n    vec2 r = vec2(FbmNoise(p + 0.4 * q + vec2(0.1, 0.5)),\n                  FbmNoise(p + 0.5 * q + vec2(0.8, 0.3)));\n    return FbmNoise(r);\n}\n\nvec3 GetColor(vec2 p)\n{\n    float pattern_value = Pattern(3.0 * p);\n    vec3 col = mix(vec3(0.2,0.1,0.4), vec3(0.3,0.05,0.05), pattern_value);\n    col = mix(col, vec3(0.9,0.9,0.9), 2.0 * pattern_value * pattern_value);\n    col = mix(col, vec3(0.2,0.1,0.4), 0.2 * pattern_value * pattern_value * pattern_value);\n    col = clamp(col*pattern_value*2.0, 0.0, 1.0 );\n    return col;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 uv = fragCoord.xy / iResolution.y;\n  vec3 color = GetColor(uv);\n  fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}