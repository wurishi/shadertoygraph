{"ver":"0.1","info":{"id":"7l3SWH","date":"1639006823","viewed":149,"name":"Phantom Raymarching 01","username":"spenceryonce","description":"This looked so much fun to play around with, I couldn't help but try to make something with it. \n\nhttps://cineshader.com/view/ttKGDt","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","ifs","phantommode"],"hasliked":0,"parentid":"ttKGDt","parentname":"Phantom Star for CineShader"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\n\nmat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c,s,-s,c);\n}\n\nconst float pi = acos(-1.0);\nconst float pi2 = pi*2.0;\n\nvec2 pmod(vec2 p, float r) {\n    float a = atan(p.x, p.y) + pi/r;\n    float n = pi2 / r;\n    a = floor(a/n)*n*sin(iTime*0.01);\n    return p*(rot(-a));\n}\n\nfloat box( vec3 p, vec3 b ) {\n    vec3 d = abs(p) - b;\n    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat ifsBox(vec3 p) {\n    for (int i=0; i<5; i++) {\n        p = abs(p) - 1.0;\n        p.xy *= rot(iTime*0.3);\n        p.xz *= rot(iTime*0.1);\n    }\n    p.xz *= rot(iTime);\n    return box(p, vec3(0.4,0.8,0.3));\n}\n\nfloat map(vec3 p, vec3 cPos) {\n    vec3 p1 = p;\n    p1.x = mod(p1.x-5., 10.) - 5.;\n    p1.y = mod(p1.y-5., 10.) - 5.;\n    p1.z = mod(p1.z, 32.)-16.;\n    p1.xy = pmod(p1.xy, 5.0);\n    return ifsBox(p1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    vec3 cPos = vec3(0.0,0.0, sin(iTime)*0.1);\n    vec3 cDir = normalize(vec3(0.0, 0.0, -1.0));\n    vec3 cUp  = vec3(0., 1.0, 0.0);//sin(iTime) in x for spin\n    vec3 cSide = cross(cDir, cUp);\n\n    vec3 ray = normalize(cSide * p.x + cUp * p.y + cDir);\n\n    float acc = 0.;\n    float acc2 = 0.0;\n    float t = 0.0;\n    for (int i = 0; i < 60; i++) {\n        vec3 pos = cPos + ray * t;\n        float dist = map(pos, cPos);\n        dist = max(abs(dist), 0.014);\n        float a = exp(-dist*7.0);\n        if (mod(length(pos)+22.0*iTime, 30.0) < 2.0) {\n            a *= 1.6;\n            acc2 += a;\n        }\n        acc += fract(a*1.2);\n        t += dist * 0.7;\n    }\n\n    vec3 col = vec3(acc * 0.01, acc * 0.011 + acc2*0.007, acc * 0.013+ acc2*0.006);\n    fragColor = vec4(col, 1.0 - t * .5);\n}","name":"Image","description":"","type":"image"}]}