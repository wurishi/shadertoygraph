{"ver":"0.1","info":{"id":"MfKcDW","date":"1731915163","viewed":77,"name":"Trippiest","username":"azeitmuth","description":"Trippiest","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["trippiest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ShaderToy code to demonstrate dynamic zooming with neon colors\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Get screen resolution\n    vec2 iResolution = iResolution.xy;\n\n    // Normalize coordinates to [0, 1] range\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Zoom level controlled by mouse drag\n    float zoom = 1.0 + iMouse.x / iResolution.x * 2.0; // 1.0 is normal, drag increases zoom\n\n    // Centering the zoom at the middle of the screen\n    vec2 center = vec2(0.5, 0.5);\n    vec2 zoomedCoord = (fragCoord - iResolution.xy * 0.5) / zoom + iResolution.xy * 0.5;\n\n    // Time-based animation component\n    float time = iTime * 0.1;  // Slower time scaling for better control\n\n    // Generate a rotating pattern with more intricate color mixing\n    vec2 rotCoord = zoomedCoord - iResolution.xy * 0.5;\n    float angle = time + length(rotCoord) * 0.1;  // Slower rotation for more subtle motion\n    mat2 rot = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    rotCoord = rot * rotCoord;\n\n    // Neon color palette: Vibrant, saturated colors\n    float r = 0.3 + 0.7 * sin(time + rotCoord.x * 10.0);  // Neon red\n    float g = 0.3 + 0.7 * sin(time + rotCoord.y * 10.0);  // Neon green\n    float b = 0.3 + 0.7 * sin(time + rotCoord.x * 5.0);   // Neon blue\n    float y = 0.3 + 0.7 * sin(time + rotCoord.y * 15.0);  // Neon yellow (generated by sine wave)\n\n    // Create a mix of the neon colors in a glowing effect\n    vec3 neonColor = vec3(r, g, b);\n    \n    // Add a dynamic yellow accent (using y for yellow)\n    neonColor = mix(neonColor, vec3(y, y, 0.0), 0.2);  // Slight yellow tint for glowing effect\n\n    // Boost saturation and brightness to enhance the neon effect\n    neonColor = clamp(neonColor * 1.5, 0.0, 1.0);  // Amplify color intensity for a neon look\n    \n    // Visualize the pixel size effect\n    float pixelSize = 1.0 / (zoom * 8.0);\n    vec2 pixelCoord = floor(fragCoord / pixelSize) * pixelSize;\n    \n    // Smooth transition of the zoom and animation\n    fragColor = vec4(neonColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}