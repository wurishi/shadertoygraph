{"ver":"0.1","info":{"id":"DdsSW2","date":"1669585590","viewed":116,"name":"Pixar Engine ~ RayMarch Demo","username":"Dirk","description":"This is a Demo of a Raymarching tutorial. It is intended to provide a simplified framework for young Mathematicians and Game Developers. The tutorial teaches the Raymarch system using a Pixar/Pixel paradigm, so I have renamed FragCoord and FragColor.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","educational"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    \n    \n    float map( vec3 p ){ return length(p)-0.5; }\n    vec3  nor( vec3 p ){\n        vec2 e = vec2(0.001,0.0);\n        return normalize(vec3(\n            map(p + e.xyy)-map(p - e.xyy),\n            map(p + e.yxy)-map(p - e.yxy),\n            map(p + e.yyx)-map(p - e.yyx)));\n    }\n    float ray( vec3 ro, vec3 rd ){\n        float t = 0.0;\n        for( int i=0; i<100; i++ ){\n            vec3 p = ro+rd*t;\n            float d = map(p);\n            if(d<0.001) break;\n            t += d;\n            if(t>20.0) break;\n        }\n        if(t>20.0) t=-1.0;\n        return t;\n    }\n    void mainImage( out vec4 Pixar, in vec2 Pixel ){\n        vec2 p = (2.0*Pixel-iResolution.xy)/iResolution.y;\n        vec3 ro = vec3(p,1.5);\n        vec3 rd = normalize(vec3(0.0,0.0,-1.5));\n        float t = ray(ro,rd);\n        vec3 col = vec3(1.0);\n        if( t>0.0 ){\n            vec3 p = ro+rd*t;\n            vec3 n = nor(p);\n            vec3  dir = vec3(2.0,1.0,1.0);\n            float dif = clamp(dot(n,dir),0.0,1.0);\n            col = vec3(1.0,0.0,0.0);\n            col = mix(col,col*dif,0.5);\n            col *= 0.9;\n        }\n        Pixar = vec4(col ,1.0);\n    }","name":"Image","description":"","type":"image"}]}