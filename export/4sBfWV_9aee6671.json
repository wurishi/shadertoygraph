{"ver":"0.1","info":{"id":"4sBfWV","date":"1502146687","viewed":198,"name":"Complex numbers via matrices","username":"Pidhorskyi","description":"Handy representation for complex numbers.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","julia","mandelbrot","matrices"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 ToComplex(vec2 x)\n{\n\treturn mat2(x.x, -x.y, x.yx);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / iResolution.yy;\n    uv = uv * 2.0 - vec2(iResolution.x / iResolution.y, 1.0);\n   \n    mat2 z = ToComplex(uv);\n    mat2 c = ToComplex((iMouse.xy/iResolution.xy-.5)*4.);\n    \n    int it = 0;\n    for (int i = 0; i < 255; ++i)\n    {\n\t\tz = z * z + c;\n        \n        if (length(z[0]) > 10.0)\n        {\n            it = i;\n\t\t\tbreak;\n        }\n    }\n    \n\tfragColor = vec4(pow(float(it) / 255.0, 1.0 / 2.2), 0.0, 0.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}