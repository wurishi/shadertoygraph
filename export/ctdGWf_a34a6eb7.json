{"ver":"0.1","info":{"id":"ctdGWf","date":"1684580079","viewed":68,"name":"Nyan Cat Flow","username":"wxy_equation","description":"nyan cat sprite render test","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["bl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\n#define RED     vec4(1., 0., 0., 1.)\n#define GREEN   vec4(0., 1., 0., 1.)\n#define BLUE    vec4(0., 0., 1., 1.)\n#define YELLOW  vec4(1., 1., 0., 1.)\n#define CYAN    vec4(0., 1., 1., 1.)\n#define MAGENTA vec4(1., 0., 1., 1.)\n\nvec4 blit(sampler2D tex, vec2 centre, vec2 size, vec2 p)\n{\n    vec2 S = vec2(textureSize(tex, 0));\n    \n    if(sign(abs(p)-size/2.) != vec2(-1.)) return vec4(0.);\n    \n    else return texture(tex, (p+centre)/S);\n}\n\nvec4 Nyan(sampler2D channel, vec2 p, float rainbow)\n{\n    vec4 c;\n    \n    //cat\n    float frame = floor(mod(10.*iTime, 6.));\n    vec2 size = vec2(40., 32.);\n    vec2 sprite = size/2.;\n    sprite.x += size.x*frame;\n    \n    c = blit(channel, sprite, size, p);\n    \n    //rainbow\n    float f = min(sqrt((p.x+rainbow)/(rainbow-11.)), 1.);\n    if(c.w == 0. && p.x < 0. && p.x > -rainbow )\n    {\n        switch(int(roundEven(p.y/2.5)))\n        {\n            case -2: c = MAGENTA*f; break;\n            case -1: c = BLUE   *f; break;\n            case  0: c = GREEN  *f; break;\n            case  1: c = YELLOW *f; break;\n            case  2: c = RED    *f; break;\n        }\n    }\n    \n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    //potential flow coordinates\n    vec2 uv1 = uv + vec2(1., 0.);\n    uv1 = 4./PI * vec2(.5*log(dot(uv1,uv1)), atan(uv1.y, uv1.x));\n    vec2 uv2 = uv - vec2(1., 0.);\n    uv2 = 4./PI * vec2(.5*log(dot(uv2,uv2)), atan(uv2.y, uv2.x));\n    uv = uv1-uv2;\n    uv *= mat2(1., -2., 2., 1.);\n    \n    //randomized velocity\n    float v = sin(2342.*mod(floor(uv.y), 8.));\n    v = (v+3.)/2.;\n    \n    //grid coordinates\n    vec2 p = uv-vec2(iTime*v, 0.);\n    p = mod(p, vec2(2., 1.));\n    p.x -= 1.;\n    \n    //draw sprites and background\n    fragColor = Nyan(iChannel0, (p-0.5)*64., 60.);\n    fragColor.xyz *= fragColor.w;\n    \n    vec3 bg = vec3(0.,30./255.,60./255.);\n    float a = smoothstep(0., 1., fragColor.w);\n    fragColor.xyz = mix(bg, fragColor.xyz, a);\n    \n}","name":"Image","description":"","type":"image"}]}