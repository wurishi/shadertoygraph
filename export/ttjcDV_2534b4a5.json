{"ver":"0.1","info":{"id":"ttjcDV","date":"1595445705","viewed":83,"name":"v3Text3.glsl","username":"jorge2017a1","description":"v3Text3.glsl","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["v3text3glsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat glyph(vec2 coord)\n{\n    float chars = 25.0;\n    float size = iResolution.x / chars;\n\n    // time\n    float gt = iTime * 3.5; // global\n    float ct = floor(gt); // coarse\n    float rt = fract(gt); // repeated\n\n    // position\n    vec2 gp = floor(coord / size * 7.0); // global\n    vec2 cp = floor(coord / size); // coarse\n    vec2 rp = floor(fract(coord / size) * 7.0); // repeated\n    vec2 odd = fract(rp * 0.5) * 2.0; // odd/even\n\n    // scrolling\n    vec2 gp2 = gp - vec2(0.0, ct * 7.0); // global (scrolled)\n    vec2 cp2 = cp - vec2(0, ct); // coarse (scrolled)\n\n    float c = max(odd.x, odd.y); // 2x2 grid\n    c *= step(0.5, rand(gp2)); // random removal\n    c += min(odd.x, odd.y); // border and center points\n\n    c *= rp.x * (6.0 - rp.x); // cropping\n    c *= rp.y * (6.0 - rp.y);\n\n    c *= max(step(1.0, cp.y), step(cp.x, chars * rt)); // 1st line anim\n    c *= step(0.15, rand(cp2 * 10.0)); // space\n    c *= step(cp.x, rand(cp2.yy * 10.0) * 10.0 + 10.0); // line end\n\n    float flicker = sin(iTime * 100.0 + coord.y * 3.1416 * 0.3) * 20.0 + 0.5;\n    c = clamp(clamp(c, 0.0, 1.0) * flicker, 0.0, 1.0);\n\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0, glyph(fragCoord.xy), 0.0, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}