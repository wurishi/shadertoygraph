{"ver":"0.1","info":{"id":"3sjXDD","date":"1553841784","viewed":837,"name":"Glitch noise","username":"edo_m18","description":"Glitch noise.","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["noise","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 st)\n{\n    const vec2 d = vec2(12.9898,78.233);\n    return fract(sin(dot(st.xy, d)) * 43758.5453123);\n}\n\nfloat noise(in vec2 st)\n{\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    \n    vec2 dv = vec2(1.0, 0.0);\n    \n    float a = random(i);\n    float b = random(i + dv.xy);\n    float c = random(i + dv.yx);\n    float d = random(i + dv.xx);\n    \n    vec2 u = f * f * (3.0 - 2.0 * f);\n    \n    return mix(a, b, u.x) +\n           (c - a) * u.y * (1.0 - u.x) +\n           (d - b) * u.x * u.y;\n}\n\nvec3 renderMosaic(vec2 uv, float scale)\n{\n    float rand = random(floor(uv * scale));\n    \n    return vec3(rand); \n}\n\nvec3 renderValueNoise(vec2 uv, float scale)\n{\n    float n = noise(uv * 15.0);\n    return vec3(n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n        \n    vec2 d = 1.0 / iResolution.xy;\n    \n    float mask = renderMosaic(uv * vec2(0.3, 1.0), 50.0).r;\n    \n    vec4 tex = texture(iChannel0, uv);\n    float r = texture(iChannel0, uv + d * 2.0).r;\n    float g = texture(iChannel0, uv + d * 5.0).g;\n    float b = texture(iChannel0, uv + d * 10.0).b;\n    vec3 tex2 = vec3(r, g, b);\n    //tex2 = vec3(0.0);\n    \n    vec3 col = tex.rgb;\n        \n    float s = noise(vec2(iTime * 2.5, iTime * 1.5));\n    \n    // Range of glitch.\n    vec2 rs[3] = vec2[](\n        vec2(0.1, 0.3),\n        vec2(0.5, 0.55),\n        vec2(0.8, 0.9)\n    );\n    \n    for (int i = 0; i < 3; i++)\n    {\n        if (s > rs[i].x && s < rs[i].y)\n        {\n            if (mask > rs[i].x && mask < rs[i].y)\n            {\n                col = tex2.rgb;\n            }\n            break;\n        }\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}