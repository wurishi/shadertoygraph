{"ver":"0.1","info":{"id":"4fjSWm","date":"1706412613","viewed":68,"name":"nyan cat cube","username":"SwissCheez84","description":"OVERWHELMING NYAN CAT","likes":0,"published":1,"flags":64,"usePreview":0,"tags":["meme"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xd33DS","filepath":"https://soundcloud.com/obviouslyfake/nyan-cat-2","previewfilepath":"https://soundcloud.com/obviouslyfake/nyan-cat-2","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot2D(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}\n\nfloat sdfCircle(vec3 point, float radius) {\n    return length(point) - radius;\n}\n\nfloat sdfSquare(vec3 point, vec3 size) {\n    return length(max(abs(point) - size, 0.));\n}\n\nfloat map(vec3 point) {\n    return sdfSquare(point, vec3(1, 1, 1));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord *2. - iResolution.xy) /iResolution.y;\n    vec2 mouse = (iMouse.xy *2. - iResolution.xy) /iResolution.y * 2.;\n    \n    vec3 rayOrigin = vec3(0, 0, -5);\n    vec3 rayDist = normalize(vec3(uv, 1));\n    \n    mat2 rotationMatrix = rot2D(-mouse.y);\n    rayOrigin.yz *= rotationMatrix;\n    rayDist.yz *= rotationMatrix;\n    \n    rotationMatrix = rot2D(-mouse.x);\n    rayOrigin.xz *= rotationMatrix;\n    rayDist.xz *= rotationMatrix;\n    \n    vec3 rayPosition = rayOrigin;\n    \n    float totalDistance = 0.;\n    float mapReturn = 0.;\n    \n    for (int i = 0; i < 80; i++) {\n        mapReturn = map(rayPosition);\n        totalDistance += mapReturn;\n        rayPosition += rayDist * mapReturn;\n        if (mapReturn < 0.0001 || totalDistance > 100.) break;\n    }\n    \n    //fragColor = vec4(vec3(totalDistance / 10.), 1);\n    fragColor = texture(iChannel0, 0.25 * vec2(rayPosition.x + rayPosition.z, rayPosition.y + rayPosition.z));\n}","name":"Image","description":"","type":"image"}]}