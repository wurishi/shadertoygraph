{"ver":"0.1","info":{"id":"td2cDw","date":"1586858521","viewed":161,"name":"Into NaCl Crystal","username":"Smake","description":"Experiments with 3d RB and R-Cyan glasses. The next steps are tuning of disparity and making up for more realistic virtuality ).","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","anaplyph","rgbglasses"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/XdKGWm as start point\n// https://www.shadertoy.com/view/td2cDw autolink\n\nfloat map(vec3 p){\n   vec3 q = fract(p) * 2.0 -1.0;\n   float radius = .15;\n \treturn length(q) - radius;   \n}\n\nfloat trace(vec3 o, vec3 r){\n    float t = 0.0;\n    for (int i =0; i <32; i++){\n       \tvec3 p = o+r*t;   \n        float d=map(p);\n      t += 0.5* d;//* 0.5;\t\n    }\n     return t;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv,1.0));\n    \n    vec3 ol = vec3(0.0,0.0, iTime*.5);\n    vec3 or = vec3(0.1,0.0, iTime*.5);\n  \n    float tr = trace(or, r);\n    float tl = trace(ol, r);\n    \n    float fogR =  1.0/(0.1 + tr);\n    float fogL =  1.0/(0.1 + tl);\n    \n    //  vec3 fc = vec3 (fogR, fogL,fogL); //for R-Cyan glasses   \n    vec3 fc = vec3(fogR, 0.0,fogL);       // for R-B glasses\n       \n\tfragColor = vec4(fc,1.0);\n}\n","name":"Image","description":"","type":"image"}]}