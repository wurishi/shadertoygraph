{"ver":"0.1","info":{"id":"lt3SzB","date":"1480263744","viewed":2376,"name":"202","username":"mhorga","description":"testing shadow","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat differenceOp(float d0, float d1) {\n    return max(d0, -d1);\n}\n\nfloat distanceToRect( vec2 point, vec2 center, vec2 size ) {\n\tpoint -= center;\n    point = abs(point);\n    point -= size / 2.;\n    return max(point.x, point.y);\n}\n\nfloat distanceToScene( vec2 point ) {\n    float d2r1 = distanceToRect( point, vec2( 0. ), vec2(0.45, 0.85) );\n    float d2r2 = distanceToRect( mod(point, 0.1), vec2( 0.05 ), vec2(0.02, 0.04) );\n    float diff = differenceOp(d2r1, d2r2);\n    return diff;\n}\n\nfloat getShadow(vec2 point, vec2 lightPos)  {\n    vec2 lightDir = normalize(lightPos - point);\n    float dist2light = length(lightDir);\n    float distAlongRay = 0.0;\n\tfor (float i=0.0; i < 80.; i++) {\n        vec2 currentPoint = point + lightDir * distAlongRay;\n        float d2scene = distanceToScene(currentPoint);\n        if (d2scene <= 0.001) { return 0.0; }\n        distAlongRay += d2scene;\n        if (distAlongRay > dist2light) { break; }\n    }\n    return 1.;\n}\n \nvoid mainImage( out vec4 color, in vec2 coord ) {\n    vec2 uv = coord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.y *= iResolution.y / iResolution.x;\n    float d2scene = distanceToScene(uv);\n    bool i = d2scene < 0.0; \n    color = i ? vec4( .1, .5, .5, 1. ) : vec4( .7, .8, .8, 1. );\n\tvec2 lightPos = vec2(1.3 * sin(iTime), 1.3 * cos(iTime));\n    float dist2light = length(lightPos - uv);\n    color *= max(0.0, 2. - dist2light );\n    float shadow = getShadow(uv, lightPos);\n    shadow = shadow * 0.5 + 0.5;\n    color *= shadow;\n}\n","name":"Image","description":"","type":"image"}]}