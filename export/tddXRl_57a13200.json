{"ver":"0.1","info":{"id":"tddXRl","date":"1572668515","viewed":52,"name":"GPR_200_Checkerboard","username":"cbrownewell","description":"by Cedric Brownewell","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Set number of tiles in the x and number of tiles in the Y\nfloat tilesX = 5.0;\nfloat tilesY = 4.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec4 finalImage;\n    vec4 colBlack = vec4(0.0,0.0,0.0,1.0);// Define black color as a vec4\n    \n    //Get aspect ratio based off of individual tiles\n    float aspect = (iResolution.y/tilesY)/(iResolution.x/tilesX);\n    \n\n    //Divide Available pixels by the number of tiles wanted\n    vec2 tileSize = vec2((iResolution.x/tilesX),(iResolution.y/tilesY));\n\n    //Modify tile x size by aspect ratio\n   \ttileSize *= aspect;\n    \n    \n    //Create uvs based on new resolution\n    vec2 uv = fragCoord/tileSize;\n    \n    //Perserve Aspect ratio of\n    uv.y *= aspect;\n   \n\n    //Get Images\n    vec4 image1 = texture(iChannel0,uv);//Get Image 1(Stones) \n    vec4 image2 = texture(iChannel1,uv);//Get Image 2(London)\n    \n\n    //Determines Which image to display based off the combined uv position\n    if(mod(floor(uv.x+ floor(uv.y)), 2.0) > 0.0)\n    {\n\n        finalImage = image2;//London\n    }\n    else\n    {\n    \tfinalImage = image1;//Stones\n    }\n       \n    //If the uv is greater than the number of tiles defined turn black\n    if(floor(uv.x) >= tilesX || floor(uv.y) >= tilesY)\n    {\n    \tfinalImage = colBlack;   \n    }\n    \n\n    fragColor = finalImage;\n\n}","name":"Image","description":"","type":"image"}]}