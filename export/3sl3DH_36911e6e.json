{"ver":"0.1","info":{"id":"3sl3DH","date":"1546063985","viewed":305,"name":"Black, Iridescent, Liquid","username":"spsherk_","description":"began with 2D clouds by Drift","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["procedural","fractal","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float cloudscale = 2.1;\nconst float speed = .20;\nconst float clouddark = 0.5;\nconst float cloudlight = 0.3;\nconst float cloudcover = 0.7;\nconst float cloudalpha = 10.0;\nconst float skytint = 0.5;\nconst vec3 skycolour1 = vec3(0.8, 0.1, 1.6);\nconst vec3 skycolour2 = vec3(0.4, 1.1, 1.0);\n\nconst mat2 m = mat2( 1.9,  1.2, -1.2,  0.9 );\n\nvec2 hash( vec2 p ) {\n    p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n    return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p ) {\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n    vec2 i = floor(p + (p.x+p.y)*K1);   \n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0); //vec2 of = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));\n    vec2 b = a - o + K2;\n    vec2 c = a - 1.0 + 2.0*K2;\n    vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n    vec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    return dot(n, vec3(70.0));  \n}\n\nfloat fbm(vec2 n) {\n    float total = 0.0, amplitude = 0.5;\n    for (int i = 0; i < 7; i++) {\n        total += noise(n) * amplitude;\n        n = m * n;\n        amplitude *= 0.9;\n    }\n    return total;\n}\n\n// -----------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = fragCoord.xy / iResolution.xy;\n    vec2 uv = p*vec2(iResolution.x/iResolution.y,1.0);    \n    float time = iTime * speed;\n    float q = fbm(uv * cloudscale * 0.5);\n    \n    //ridged noise shape\n    float r = 0.0;\n    uv *= cloudscale;\n    uv -= q - time;\n    float weight = 0.8;\n    for (int i=0; i<8; i++){\n        r += abs(weight*noise( uv ));\n        uv = m*uv + time;\n        weight *= 0.7;\n    }\n    \n    //noise shape\n    float f = 0.0;\n    uv = p*vec2(iResolution.x/iResolution.y,1.0);\n    uv *= cloudscale;\n    uv -= q - time;\n    weight = 0.9;\n    for (int i=0; i<8; i++){\n        f += weight*noise( uv );\n        uv = m*uv + time;\n        weight *= 0.6;\n    }\n    \n    f *= r + f;\n    \n    //noise colour\n    float c = 0.0;\n    time = iTime * speed * 2.0;\n    uv = p*vec2(iResolution.x/iResolution.y,1.0);\n    uv *= cloudscale*2.0;\n    uv -= q - time;\n    weight = 0.4;\n    for (int i=0; i<7; i++){\n        c += weight*noise( uv );\n        uv = m*uv + time;\n        weight *= .6;\n    }\n    \n    //noise ridge colour\n    float c1 = 0.0;\n    time = iTime * speed * 3.0;\n    uv = p*vec2(iResolution.x/iResolution.y,1.0);\n    uv *= cloudscale*3.0;\n    uv -= q - time;\n    weight = 0.1;\n    for (int i=0; i<7; i++){\n        c1 += abs(weight*noise( uv ));\n        uv = m*uv + time;\n        weight *= 0.2;\n    }\n    \n    c += c1;\n    \n    vec3 skycolour = mix(skycolour2, skycolour1, (p.x + p.y) * .7);\n    vec3 cloudcolour = vec3(9.10, 0.0, 0.0) * clamp((clouddark + cloudlight*c), 0.0, 0.0);\n   \n    f = cloudcover + cloudalpha*f*r;\n    \n    vec3 result = mix(skycolour, clamp(skytint * skycolour + cloudcolour, 0.0, 0.0), clamp(f + c, 0.0, 1.0));\n    \n    fragColor = vec4( result, 1.0 );\n}\n\n\n","name":"Image","description":"","type":"image"}]}