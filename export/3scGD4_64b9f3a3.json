{"ver":"0.1","info":{"id":"3scGD4","date":"1568476926","viewed":86,"name":" birdInAcage","username":"foran","description":"birdInAcage","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["birdinacage"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define TAU 2. * PI\n\nvec3 lookAt (vec3 eye, vec3 at, vec2 uv) \n{\n  vec3 forward = normalize(at - eye);\n  vec3 right = normalize(cross(forward, vec3(0,1,0)));\n  vec3 up = normalize(cross(right, forward));\n  return normalize(forward + right * uv.x + up * uv.y);\n}\n\nvec2 modA(vec2 p, float r)\n{\n  float a = atan(p.y,p.x);\n\n  a = mod(a + PI, TAU/r) - PI;\n\n  return length(p) * vec2(cos(a),sin(a));\n}\n//----------\nfloat smin(float a,float b,float k)\n{\n  float h=clamp(.5+.5*(b-a)/k,0.,1.);\n  return mix(b,a,h)-k*h*(1.-h);\n}\n//-----------\nmat2 rot(float a)\n{\n  float ca = cos(a);\n  float sa = sin(a);\n  return mat2(ca,-sa,sa,ca);\n}\n\nfloat ease(float t)\n{\n  return floor(t) + sin(fract(t) * PI - PI / 2.) * .5 + .5;\n}\n\nfloat map(vec3 p)\n{\n  float dist = 1000.;\n  //------------\n  vec3 cp=p;\n  float ti=iTime;\n for(float i=1.;i<5.;++i)//  фон с фигуркой 5\n {\n    cp.y+=iTime*.0315;// движение вверх p.y-, вниз p.y+\n    cp.y+=(sin(ti+cp.x)+cos(ti+cp.z))*1.13;//  фигурка\n    dist=smin(length(cp)-1.285,dist,1.25);//  слияние амплитуды фигурки\n    ti+=i*.2;\n    cp*=.99;// FOV фигурки  близко-далеко 1.1\n    cp.xz*=rot(ti*.3);//  вращение по xz\n    cp.yz*=rot(ti*.3);//  вращение по yz\n    cp.x+=.6;\n }\n //-----------\n\n  float ra = sin(p.y) * .55 + .45 + .2;// спираль по y\n  p.y -= iTime;// движение вверх p.y-, вниз p.y+\n  p.xz *= rot(p.y * .5);\n  p.xz = modA(p.xz, 5.);//  количество 3.\n  p.z += 3.;//  глубина по z\n  p.x += 4.5;//  ширина по x\n  float cy = length(p.xz) - ra;\n  dist = min(dist, cy);\n  \n  return dist;\n}\n\n  float cd = 0.;\n  vec3 outPos;\n  float ray(vec3 cp, vec3 rd)\n{\n  float st = 0.;\n  for(;st < 1.; st += 1./ 64.)\n  {\n    cd = map(cp);\n    if(cd < .01) break;\n    cp += rd * cd * .5;\n  }\n\n  outPos = cp;\n  return st;\n}\n\nvec3 normal(vec3 p)\n{\n  vec2 e = vec2(.01,.0);\n\n  return normalize(vec3(\n  map(p - e.xyy) - map(p + e.xyy),\n  map(p - e.yxy) - map(p + e.yxy),\n  map(p - e.yyx) - map(p + e.yyx)\n  ));\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n  vec2 uv=vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n  uv-=.5;\n  uv/=vec2(iResolution.y/iResolution.x,1);\n  \n //----------------\n vec3 eye = vec3(0.,0.,-20.);\n vec3 rd = lookAt(eye, vec3(0.), uv);\n vec3 cp = eye;\n float st = ray(cp,rd);\n vec3 norm = normal(outPos);\n vec3 ld=normalize(vec3(-.5,-1.,1.));\n ld.xz*=rot(iTime*.1);\n float li = dot(norm, vec3(-1.,-1.,1.));// с какой стороны свет\n float li2=dot(normalize(vec3(1.,0.,1.)),norm);//  свет 2\n float f=pow(max(li,li2),2.);\n f=sqrt(f);\n vec4 col=vec4(norm,0.);\n col.xy*=rot(iTime*.5);\n col.yz*=rot(iTime*.75);\n col.xz*=rot(iTime*.125);\n col=abs(col);\n vec4 out_color=vec4(1.);\n out_color=mix(vec4(0.),col*1.5,f);\n fragColor=vec4(out_color);\n //-----------\n}","name":"Image","description":"","type":"image"}]}