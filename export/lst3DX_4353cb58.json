{"ver":"0.1","info":{"id":"lst3DX","date":"1452579610","viewed":237,"name":"Life game","username":"Izokina","description":"Life game shader","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["life","stateful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 s = texture(iChannel0, fragCoord.xy / iResolution.xy);\n\tfragColor = vec4(s.xy, 0., 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float PERIOD = .3;\nconst float DENSITY = 4.;\n\nconst float INV_DENSITY = 1. / DENSITY;\n\nvec2 ff(const in vec2 v, const in float dx, const in float dy) {\n    return floor(v + vec2(dx, dy)) * DENSITY / iResolution.xy;\n}\n\nvec4 f(const in vec2 v) {\n    return texture(iChannel0, v);\n}\n\nvec2 fg(const in vec2 v, const in float dx, const in float dy) {\n    vec2 uv = ff(v, dx, dy);\n    if (uv.x < 0. || uv.y < 0. || uv.x > 1. || uv.y > 1.)\n        return vec2(0., 0.);\n    return f(uv).xy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord * INV_DENSITY + vec2(0.5);\n\tvec2 uv = ff(pos, 0., 0.);\n    vec4 s = f(uv);\n    if (s.a < .5) {\n        vec4 v = texture(iChannel1, uv);\n        if (v.r + v.g + v.b < .01) {\n            fragColor = vec4(0., 0., 0., 0.);\n            return;\n        }\n        if (v.r + v.g < 1.)\n            v.rg = vec2(0., 0.);\n        else if (v.r > v.g)\n            v.rg = vec2(1., 0.);\n        else\n            v.rg = vec2(0., 1.);\n        fragColor = vec4(v.rg, iTime, 1.0);\n        return;\n    }\n    if (iTime - s.b < PERIOD) {\n        fragColor = vec4(s.rgb, 1.);\n        return;\n    }\n    vec2 l = fg(pos, -1., 0.);\n    vec2 r = fg(pos, 1., 0.);\n    vec2 lt = fg(pos, -1., 1.);\n    vec2 rt = fg(pos, 1., 1.);\n    vec2 lb = fg(pos, -1., -1.);\n    vec2 rb = fg(pos, 1., -1.);\n    vec2 t = fg(pos, 0., 1.);\n    vec2 b = fg(pos, 0., -1.);\n    vec2 sum = l + r + lt + rt + lb + rb + t + b;\n    float total = sum.r + sum.g;\n    if (total < 1.5 || total > 3.5)\n        s.rg = vec2(0., 0.);\n    if (total > 2.5 && total < 3.5 && s.r + s.g < .5) {\n        if (sum.r > sum.g)\n            s.r = 1.;\n        else\n            s.g = 1.;\n    }\n\tfragColor = vec4(s.xy, iTime, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}