{"ver":"0.1","info":{"id":"Xs3SRn","date":"1457317096","viewed":468,"name":"Silk","username":"TrueBoolean","description":"Terrain marching a plasma.\n\nA branchless, straightline SDF marcher.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","sdf","plasma","raymarcher","terrainmarching","trace","straightline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(x) mat2(cos(x), -sin(x), sin(x), cos(x))\n\nfloat height(vec2 p){\n    return sin(p.x)+sin(p.x+p.y)+cos(p.y)/1.5+sin(iTime+p.x)+5.;\n}\n\nfloat map(vec3 p){\n \treturn p.y-height(p.xz);  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n\tvec2 uv = (fragCoord*2.-iResolution.xy)/min(iResolution.x, iResolution.y);\n    \n    vec3 ray = normalize(vec3(uv,1.));\n    ray.yz *= rot((sin(iTime)/3.+1.5));\n    ray.xz *= rot((sin(iTime)/2.+1.)/5.);\n    \n    float t = 0.;\n    for(int i = 0; i < 29 ; ++i)\n        t += map(vec3(iTime,0.,iTime/2.)+ray*t)*.5;\n    \n    float fog = 1./(1.+t*t*.005);\n    vec3 fc = vec3(fog*fog, fog/2., fog);\n\tfragColor = vec4(fc, 1.);\n}","name":"Image","description":"","type":"image"}]}