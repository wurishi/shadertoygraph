{"ver":"0.1","info":{"id":"dlSczt","date":"1692158622","viewed":61,"name":"StarRotater","username":"kushnadas","description":"a star","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 uResolution;\nuniform float uTime;\n\n// Function to draw a five-pointed star\nfloat star(vec2 st) {\n    st = st * 2.0 - 1.0;\n\n    // Convert to polar coordinates\n    float r = length(st);\n    float a = atan(st.y, st.x);\n\n    // Adjust angle for rotation over time\n    a -= iTime;\n\n    // Create star shape using modulo and scaling\n    float sector = mod(a, 3.14159/2.5) * 2.0 / 3.14159;\n    r = smoothstep(0.9, 0.41, r * (2.0 - sector));\n\n    return r;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Create rotating color effect\n    vec3 color = 0.5 + 0.5 * cos(iTime + vec3(0.000,1.000,0.118));\n\n    // Use star function to mask the color\n    fragColor = vec4(color * star(uv), 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}