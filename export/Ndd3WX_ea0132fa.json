{"ver":"0.1","info":{"id":"Ndd3WX","date":"1630784188","viewed":99,"name":"Curling","username":"elefAntti","description":"Turbulent flow based on noise","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = 1.0 - exp(-texture(iChannel2, uv)* 2.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float perlin(vec2 uv)\n{\n    return texture(iChannel0, uv).r/128.0\n    + texture(iChannel0, (uv/2.0)).r/64.0 \n    + texture(iChannel0, (uv/4.0)).r/32.0\n    + texture(iChannel0, (uv/8.0)).r/16.0\n    + texture(iChannel0, (uv/16.0)).r/8.0\n    + texture(iChannel0, (uv/32.0)).r/4.0\n    + texture(iChannel0, (uv/64.0)).r/3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(perlin(uv));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec2 derivative(vec2 uv)\n{\n    float stepsize = 0.01;\n    float dx = texture(iChannel0, uv + vec2(stepsize, 0.0)).r*0.5 - texture(iChannel0, uv-vec2(stepsize, 0.0)).r*0.5;\n    float dy = texture(iChannel0, uv + vec2(0.0, stepsize)).r*0.5 - texture(iChannel0, uv-vec2(0.0, stepsize)).r*0.5;\n    return vec2(dx, dy)/stepsize;\n}\n\nvec2 rot90(vec2 uv)\n{\n    return uv.yx * vec2(1.0, -1.0);\n}\n\n\n//Pulse adds variance so the flow doesn't stop\nfloat pulse(float time)\n{\n    time = mod(time, 0.5);\n    return smoothstep(0.0, 0.1, time) * smoothstep(0.3, 0.2, time) - 0.39;\n}\n\n\n//To keep the colors vivid despite the blending\nvec3 saturate(vec3 color)\n{\n    color -= dot(color, vec3(1.0/0.3))*0.000025;\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 uv_orig = uv;\n    //uv.y += 0.001 * iTime;\n    float dt = 0.001;\n    vec2 dir1 = rot90(derivative(uv));\n    //dir1.y += 1.0;\n    vec2 uv2 = uv +  dir1 * dt;\n    vec2 dir2 = rot90(derivative(uv2));\n    vec2 uv3 = uv_orig + dir1 * dt * 0.5 + dir2 * dt * 0.5;\n    if(iTime < 1.0)\n    {\n        fragColor = texture(iChannel1, uv3);\n    }\n    else\n    {\n        fragColor = vec4(saturate(texture(iChannel2, uv3).rgb), 0.0)\n        + texture(iChannel1, uv3) * pulse(iTime) * 0.025;\n    }\n}","name":"Buffer B","description":"","type":"buffer"}]}