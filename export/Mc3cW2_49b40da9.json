{"ver":"0.1","info":{"id":"Mc3cW2","date":"1731169326","viewed":840,"name":"The Letter A","username":"dahart","description":"GLSL example of drawing a bitmapped letter","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["a","text","bitmap","letter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uvec4 bits = uvec4( 0x00000018, 0x24244242, 0x7e424242, 0x42000000 );\n    vec2 uv    = fragCoord / iResolution.yy; // yy on purpose to keep aspect ratio square\n    vec2 tuv   = uv * vec2(30, -30) + vec2(-22, 24.); // float texel space\n    ivec2 ituv = ivec2(tuv); // int texel space (rounded)\n    int row    = ituv.y;\n    int word   = row >> 2;\n    int byte   = row & 0x3;\n    int bit    = ituv.x;\n    float val  = 0.5;\n    if (tuv.x >= 0. && tuv.x < 8. && tuv.y >= 0. && tuv.y < 16.)\n        val = float(((bits[word] >> ((3-byte) << 3u)) >> (7-bit)) & 1u);\n    fragColor  = vec4(vec3(val), 1) * 1.;\n}","name":"Image","description":"","type":"image"}]}