{"ver":"0.1","info":{"id":"fdVyDV","date":"1655644588","viewed":284,"name":"gpu sound 7542 (loud)","username":"AShaderBeginner","description":"I discovered you can use sound and the audio shader outputs raw amplitudes.\nI didn't notice this earlier, because I thought audio shaders would output frequencies and amplitudes of sine waves.\nThis is pretty fun!\n(loud)","likes":3,"published":3,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy - vec2(0.5);\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // circles\n    float circ = mod(length(uv) - iTime * 0.1, 0.1);\n    circ = smoothstep(0.022, 0.028, circ) - smoothstep(0.072, 0.078, circ);\n    \n    // also color depending on radius, too\n    float rad = mod(floor((atan(uv.y, uv.x) + 6.28 + (length(uv) + iTime)) / 0.785) + 0.785, 1.57);\n    vec3 col = mix(vec3(1.0,0.5,0.0), vec3(0.78,0.0,0.0), smoothstep(0.5133,0.5333,rad) - smoothstep(1.036,1.056,rad));\n    \n    fragColor.rgb = mix(col, vec3(1.0),circ);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    return vec2( step(0.5, fract(6.28 * 200. * time * (sin(floor(time * 10.) / 10.) * 0.25 + 0.75))) );\n}","name":"Sound","description":"","type":"sound"}]}