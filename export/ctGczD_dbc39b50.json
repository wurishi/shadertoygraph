{"ver":"0.1","info":{"id":"ctGczD","date":"1699972522","viewed":51,"name":"Sun with rays","username":"g1mishra","description":"sun, ray, sky","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ray","sun","sky"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat hash11(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvec3 createRay(vec2 ray, vec2 uv, vec3 col, float delay, float size, float len)\n{\n    vec3 sunCol = vec3(1.0, 0.9, 0.8);\n    float ang = dot(normalize(uv), normalize(ray));\n    ang = 1.0 - ang;\n    ang = ang / size;\n    ang = clamp(ang, 0.0, 1.0);\n    \n    float v = smoothstep(0.0, 1.0, (1.0 - ang)*(1.0 - ang));\n    v *= sin(iTime/2.0 + delay)/2.0 + 0.5;\n    \n    float l = length(uv) * len;\n    l = clamp(l, 0.0, 1.0);\n\n    vec3 o = mix(col, mix(sunCol, col, l), smoothstep(1.0, 4.0, iTime) * v);\n    return o;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord - iResolution.xy)/iResolution.x;\n    uv.y -= 0.3;\n    \n    uv.x -= 0.6;\n\n    vec3 sunCol = vec3(1.0, 0.9, 0.8);\n    vec3 col = mix(vec3(0.0, 0.45, 0.85), vec3(1), -0.3-uv.y);\n\n    float t = iTime/15.0;\n    mat2 rotTime = mat2( cos(t), sin(t), -sin(t), cos(t) );\n    for(float x=0.0; x < 2.0*PI; x += PI/8.0)\n    {\n        mat2 rot = mat2( cos(x), sin(x), -sin(x), cos(x) );\n        vec2 ray = rotTime * rot * vec2(1.0, 0.0); \n        col = createRay(ray, uv, col, hash11(x*15.0)*10000.0, hash11(x*234.0)*0.04, 2.0+hash11(54.0*x)*2.0);\n    }\n    \n    float l = length(uv)*4.5;\n    l -= 0.2;\n    l = clamp(l, 0.0, 1.0);\n    col = mix(sunCol* 1.2, col, smoothstep(0.0, 1.0, l));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}