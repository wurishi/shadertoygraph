{"ver":"0.1","info":{"id":"XfVSWG","date":"1715701653","viewed":40,"name":"Shader test 24-05-15","username":"novull","description":"simple shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{     \n    // Normalize pixel coordinates (from 0 to 1) and correct for aspect ratio\n    vec2 uv = (fragCoord.xy / iResolution.xy);\n    \n    // Center for circle will be at the adjusted middle point considering aspect ratio\n    vec2 center = vec2(0, 0);\n    \n    // Calculate the distance from the current fragment to the center\n    float dist = distance(uv, center);\n    \n    // Set the radius of the circle\n    float radius = 0.25;\n\n    // Create a smooth gradient for the circle's edge\n    float gradient = smoothstep(radius, radius - 0.05, dist);\n\n    // Determine the color of the pixel based on the gradient\n    vec3 color = mix(vec3(1.0, 0.0, 0.0), vec3(0.0), gradient);\n    fragColor = vec4(color, 1.0);\n\n}\n","name":"Image","description":"","type":"image"}]}