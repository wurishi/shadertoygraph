{"ver":"0.1","info":{"id":"wt2cWK","date":"1595423852","viewed":489,"name":"Zegend of Lelda: Windfaker Water","username":"pprovins","description":"By generating a voronoi pattern and detecting edges of cells it is possible to layer two voronoi fields and use a displacement map to create a water effect similar to something seen in a popular video game. ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","water","zelda","toon","windwaker","voronoiegde"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 pseudoRand(vec2 p) {\n\treturn fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n// https://iquilezles.org/articles/voronoilines\nvec3 vorobord( in vec2 x ) {\n    vec2 idx = floor(x);\n    vec2 pad = fract(x);\n\n\tvec2 selfcell, closecell;\n\n    float mindist = 4.0;\n    for( float x = -1.0; x <= 1.0; ++x) {\n        for(float y = -1.0; y <= 1.0; ++y) {\n            vec2 offset = vec2(x, y);\n            vec2 self = pseudoRand( idx + offset );\n            self = 0.5 + 0.5*sin( iTime * self * .5 );\n            vec2 neighbor = offset + self - pad;\n            float dist = length(neighbor);\n\n            if (dist < mindist) {\n                mindist = dist;\n                closecell = neighbor;\n                selfcell = offset;\n            }\n        }\n    }\n\n    mindist = 4.0;\n    for(float x = -2.0; x <= 2.0; ++x) {\n        for(float y = -2.0; y <= 2.0; ++y) {\n            vec2 offsetcell = selfcell + vec2(x, y);\n            vec2 self = pseudoRand(idx + offsetcell);\n            self = 0.5 + 0.5*sin(iTime * self  * 0.5);\n            vec2 neighbor = offsetcell + self - pad;\n\n            if(length(closecell - neighbor) > 0.00001){\n                mindist = sin(min(mindist, dot(0.5 * (closecell + neighbor), normalize(neighbor - closecell))));\n            }\n        }\n    }\n\n    return vec3(mindist, closecell);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Animate the texture for a water ripple\n    vec3 displ = vec3(texture(iChannel0, (uv * 0.25) + (sin(iTime * .15) * 0.25) + 0.25).xyz);\n    // Create a voronoi pattern\n    vec3 layerone = vorobord(5.0 * mix(uv, displ.rg, 0.12));\n    vec3 layertwo = vorobord(3.0 * mix((uv + .5), displ.rg, 0.1));\n    // Color the border and body\n    vec3 locol = mix(vec3(0.7,0.7,0.9), vec3(0.0, 0.0, 1.0), smoothstep(0.09, 0.1, layerone.x * 2.2));\n    vec3 ltcol = mix(vec3(.8,.8,1.0), vec3(1.0, 1.0, 1.0), smoothstep(0.04, 0.05, layertwo.x * 3.2));\n    // Mix uppper water with lower water\n    vec3 vorolayers = mix(locol, ltcol, 0.3);\n\n    fragColor = vec4(vorolayers, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}