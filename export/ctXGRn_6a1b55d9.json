{"ver":"0.1","info":{"id":"ctXGRn","date":"1671133924","viewed":1228,"name":"Shooting Stars [240 Chars]","username":"Xor","description":"I got hit with inspiration for the concept of shooting stars.\nThis is what I came up with.","likes":70,"published":1,"flags":0,"usePreview":0,"tags":["stars","golf","300"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    \"Shooting Stars\" by @XorDev\n\n    I got hit with inspiration for the concept of shooting stars.\n    This is what I came up with.\n    \n    Tweet: twitter.com/XorDev/status/1604218610737680385\n    Twigl: t.co/i7nkUWIpD8\n    <300 chars playlist: shadertoy.com/playlist/fXlGDN\n*/\nvoid mainImage(out vec4 O, vec2 I)\n{\n    //Clear fragcolor\n    O *= 0.;\n    \n    //Line dimensions (box) and position relative to line\n    vec2 b = vec2(0,.2), p;\n    //Rotation matrix\n    mat2 R;\n    //Iterate 20 times\n    for(float i=.9; i++<20.;\n        //Add attenuation\n        O += 1e-3/length(clamp(p=R\n        //Using rotated boxes\n        *(fract((I/iResolution.y*i*.1+iTime*b)*R)-.5),-b,b)-p)\n        //My favorite color palette\n        *(cos(p.y/.1+vec4(0,1,2,3))+1.) )\n        //Rotate for each iteration\n        R=mat2(cos(i+vec4(0,33,11,0)));\n}","name":"Image","description":"","type":"image"}]}