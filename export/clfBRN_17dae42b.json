{"ver":"0.1","info":{"id":"clfBRN","date":"1692647737","viewed":47,"name":"Simple Chunky Pixelate","username":"MondayHopscotch","description":"A simple shader that downsamples the input texture to the desired resolution.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pixelate","downsample"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // The output resolution in pixels, in this case 64x64\n    vec2 screenRes = vec2(64., 64.);\n    \n    vec2 iPixelSize = vec2(1., 1.)/screenRes;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // downsample rate (ex: 512x512 / 64x64 = 8x8)\n    vec2 iPixelateRes = iResolution.xy * iPixelSize;\n\n    vec2 sampleUV = floor(uv / iPixelSize) * iPixelSize;\n    vec4 col = texture(iChannel0, sampleUV);\n\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}