{"ver":"0.1","info":{"id":"NlBXzy","date":"1627908681","viewed":325,"name":"Variable Kawase Blur","username":"soudfv","description":"Variation of https://www.shadertoy.com/view/Wlc3D4","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["blur","tiltshift","kawase","variable","foveated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uv0 = iMouse.xy / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    fragColor = kawase(iChannel0, 4.5, uv, uv0, res, iTime);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define c1 2.0\n\nfloat blurPower( vec2 c, vec2 c0 )\n{\n    // Circular Tilt–shift\n    return pow(max(0.,length(c - c0)-0.1),0.9)*c1;\n\n    // Linear Tilt–shift\n   //return abs(c.y - c0.y)*c1;\n}\n\nvec4 kawase(sampler2D tex, float coef, vec2 uv, vec2 uv0, vec2 res, float iTime)\n{\n//coef += .0;coef = (1.-pow(1.-coef/4.5,5.))*4.5;\n    if (uv0 == vec2(0)) uv0 = vec2(0.5, 0.35);\n    float i = coef * blurPower(uv, uv0);\n    //i = i * sin(iTime); // make this animated\n    vec2 d = vec2(i,i) / res;\n    \n    vec3 col = texture( tex, uv + d).rgb;\n    col += texture( tex, uv + d * vec2(1.0,-1.0) ).rgb;\n    col += texture( tex, uv + d * vec2(-1.0,1.0) ).rgb;\n    col += texture( tex, uv - d ).rgb;\n    col *= 0.25;\n\n    return vec4( col, 1.0 );\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uv0 = iMouse.xy / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    fragColor = kawase(iChannel0, 0.5, uv, uv0, res, iTime);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uv0 = iMouse.xy / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    fragColor = kawase(iChannel0, 1.5, uv, uv0, res, iTime);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uv0 = iMouse.xy / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    fragColor = kawase(iChannel0, 2.5, uv, uv0, res, iTime);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uv0 = iMouse.xy / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    fragColor = kawase(iChannel0, 3.5, uv, uv0, res, iTime);\n}","name":"Buffer D","description":"","type":"buffer"}]}