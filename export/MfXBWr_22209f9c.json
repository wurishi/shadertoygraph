{"ver":"0.1","info":{"id":"MfXBWr","date":"1723596942","viewed":33,"name":"basic shader example #2","username":"bitshifter","description":"basic shader example #2","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 center = iResolution.xy * 0.5;\n\n  vec2 orbit = iResolution.yy * 0.4;\n\n  float speed = iTime * 0.1;\n\n  float twoPI = 2.0 * 3.14;\n\n  float angle = mod(speed * twoPI, twoPI);\n\n  vec2 xform = vec2(sin(angle), cos(angle));\n\n  vec2 origin = orbit * xform + center;\n\n  float size = iResolution.y * 0.1;\n\n  float dist = length(fragCoord - origin);\n\n  vec3 light = vec3(1.0, 1.0, 1.0) * size / dist;\n\n  vec2 uv = fragCoord / iResolution.xy;\n\n  vec3 bkgnd = texture(iChannel0, uv).rgb;\n\n  vec3 color = bkgnd * light;\n\n  fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}