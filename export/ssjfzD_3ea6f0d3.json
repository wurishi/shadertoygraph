{"ver":"0.1","info":{"id":"ssjfzD","date":"1645791606","viewed":116,"name":"Fast CRT v1","username":"samsamsam","description":"A faster version of the CRT shader used in BREAKER","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["crt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = vec4(0, 0, 0, 1);\n\n    // chromatic aberration \n    float shift = 1.0 / 640.0;\n    col.x = texture(iChannel0, vec2(uv.x + shift, uv.y)).x;\n    col.y = texture(iChannel0, uv).y;\n    col.z = texture(iChannel0, vec2(uv.x - shift, uv.y)).z;\n\n    // vignette\n    float bri = 0.9 + (1.6 * uv.x * uv.y) * (1.0 - uv.x) * (1.0 - uv.y);\n    // scanlines in darker areas\n    float lum = (0.2126 * col.x + 0.7152 * col.y + 0.0722 * col.z);\n    bri *= 0.93 + 0.07 * lum + sin(uv.y * 3.14 * 180.0) * 0.07 * (1.0 - lum);\n\n    col.x *= bri;\n    col.y *= bri;\n    col.z *= bri;\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}