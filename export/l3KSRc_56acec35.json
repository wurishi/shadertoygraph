{"ver":"0.1","info":{"id":"l3KSRc","date":"1720310083","viewed":38,"name":"Broken screen","username":"kakumbinia","description":"broken screen simulation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simulation","screen","broken"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SEED 33 // Cambia este valor para generar diferentes curvas\n\n// Función para generar números pseudoaleatorios\nfloat random(vec2 p) {\n    return fract(sin(dot(p, vec2(127.1, 311.7) + float(SEED))) * 43758.5453);\n}\n\n// Función para generar ruido basado en la semilla\nfloat noise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    f = f * f * (3.0 - 2.0 * f);\n    float n = mix(mix(random(i + vec2(0.0, 0.0)), random(i + vec2(1.0, 0.0)), f.x),\n                  mix(random(i + vec2(0.0, 1.0)), random(i + vec2(1.0, 1.0)), f.x), f.y);\n    return n;\n}\n\n// Función para generar la curva principal\nfloat generateCurve(vec2 uv, float seed, float curvature, float centerX, float centerY, float rotation) {\n    // Ajuste de la curva según el parámetro de curvatura\n    float curve = noise(vec2(uv.x * seed / 10.0, uv.y * seed / 10.0)) * (curvature / 5.0);\n    \n    // Ajustar la posición del centro de la curva relativo al centro de la pantalla\n    vec2 center = vec2(0.5 + centerX, 0.5 + centerY);\n\n    // Trasladar las coordenadas de entrada para que el centro de rotación sea el centro especificado\n    vec2 centeredUV = uv - center;\n\n    // Rotar las coordenadas alrededor del centro especificado\n    vec2 rotatedUV = vec2(\n        centeredUV.x * cos(rotation) - centeredUV.y * sin(rotation),\n        centeredUV.x * sin(rotation) + centeredUV.y * cos(rotation)\n    );\n\n    // Volver a trasladar las coordenadas al sistema original\n    rotatedUV += center;\n\n    // Generar la curva\n    return rotatedUV.x > (rotatedUV.y + curve * 0.5) ? 1.0 : 0.0;\n}\n\n\n\n// Ejemplo de uso de la función generateCurve en el shader principal\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    float lineWidth = 1.0 / iResolution.x;\n    float timeOffsetX = mod(floor(uv.x / (lineWidth * 2.0)), 100.0);\n    float timeOffsetY = mod(floor(uv.y / (lineWidth * 2.0)), 100.0);\n    \n    vec3 randomColorX = vec3(\n        fract(sin(dot(vec2(timeOffsetX, iTime), vec2(12.9898, 78.233))) * 43758.5453),\n        fract(sin(dot(vec2(timeOffsetX + 100.0, iTime + 100.0), vec2(12.9898, 78.233))) * 43758.5453),\n        fract(sin(dot(vec2(timeOffsetX + 200.0, iTime + 200.0), vec2(12.9898, 78.233))) * 43758.5453)\n    );\n    vec3 randomColorY = vec3(\n        fract(sin(dot(vec2(timeOffsetY, iTime), vec2(12.9898, 78.233))) * 43758.5453),\n        fract(sin(dot(vec2(timeOffsetY + 100.0, iTime + 100.0), vec2(12.9898, 78.233))) * 43758.5453),\n        fract(sin(dot(vec2(timeOffsetY + 200.0, iTime + 200.0), vec2(12.9898, 78.233))) * 43758.5453)\n    );\n\n    float curve1 = generateCurve(uv, float(SEED), 2.0, 0.0, 0.0, radians(0.0));\n    float curve2 = generateCurve(uv, float(SEED + 1), 4.0, 0.0, 0.0, radians(45.0));\n    float curve3 = generateCurve(uv, float(SEED + 2), 0.9, 0.0, 0.0, radians(90.0));\n    float curve4 = generateCurve(uv, float(SEED + 2), 0.9, 0.7, 0.0, radians(315.0));\n    \n    // Invertir los colores para que las curvas sean visibles sobre fondo blanco\n    float line1 = 1.0 - curve1;\n    float line2 = 1.0 - curve2;\n    float line3 = 1.0 - curve3;\n    float line4 = 1.0 - curve4;\n\n    vec3 color = mix(vec3(0.39, 0.80, 2.14), randomColorY, 0.3); // Fondo blanco\n    if (line1 < 1.0) {\n        color = mix(vec3(0.63, 0.88, 1.0), randomColorY, 0.3);\n    }\n    if (line2 < 1.0) {\n        color = mix(vec3(0.12, 0.13, 0.32), randomColorY, 0.3); // Línea roja\n    }\n    if (line4 < 1.0) {\n        color = mix(vec3(0.12, 0.13, 0.32), randomColorX, 0.3); // Línea azul\n    }\n    if (line3 < 1.0) {\n        color = mix(vec3(0.63, 0.88, 1.0), randomColorX, 0.3); // Línea azul\n    }\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}