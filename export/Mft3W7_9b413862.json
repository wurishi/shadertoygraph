{"ver":"0.1","info":{"id":"Mft3W7","date":"1711801498","viewed":74,"name":"HodlAndModify","username":"iseedumbpeople","description":"An Amiga 6-bit HAM mode filter.  Uses a fixed grayscale palette.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["video","amiga","ham"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/NS;\n    vec3 col = texture(iChannel0,uv/iResolution.xy).rgb;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  stage(fragColor,fragCoord,iChannel0,iChannel1,iResolution,NS,iFrame);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define NS 4.0\n\n#define ROT(x,n) (((x) >> (n)) | ((x) << (32 - (n))))\n\nfloat rnd(uint x,uint y,uint z) {\n  for (int i = 0; i < 3; i ++) {\n    x ^= 0xdeadbeefU + (ROT(ROT(x,13) + y,7) ^ z);\n    y += 0x0badcafeU ^ (ROT(ROT(y,5) - z,9) + x);\n    z -= 0xfeedfaceU ^ (ROT(ROT(z,22) - x,11) + 15U);\n  }\n  x += y + z;\n  return float((x >> 8) ^ (x & 255U)) / 16777215.0;\n}\n\nvec3 quantRGB12(vec3 c,vec3 n) {\n    return floor(c*16.0 + n)/16.0;\n}\n\nvec3 noise(uint x,uint y,uint z) {\n    float n1 = rnd(x ^ 0x12345678U,y,z);\n    float n2 = rnd(x ^ 0xfedcba98U,y,z);\n    float n3 = rnd(x ^ 0x55aa33ccU,y,z);\n    return vec3(n1,n2,n3);\n}\n\nvoid stage(out vec4 fragColor,in vec2 fragCoord,sampler2D iChannel0,sampler2D iChannel1,vec3 iResolution,float scale,int iFrame)\n{\n    vec2 p = fragCoord;\n    int j = int(p.x);\n    int i = int(p.y);\n    vec3 v_in = texture(iChannel1,scale*vec2(j,i)/iResolution.xy).rgb;\n    v_in = quantRGB12(v_in,noise(uint(i),uint(j),uint(iFrame)));\n    vec3 v_left = j == 0 ? vec3(0,0,0) : texture(iChannel0,vec2(j-1,i)/iResolution.xy).rgb;\n    vec3 v = v_left;\n\n    vec3 vs[3];\n    int j_best = -1;\n    float d_best = 0.0;\n\n    for (int j = 0; j < 16; j ++) {\n      vec3 vj = vec3(j,j,j)/16.0;\n      float d = length(vj - v_in);\n      if (j_best < 0 || d < d_best) {\n        j_best = j;\n        d_best = d;\n        v = vj;\n      }\n    }\n    for (int j = 0; j < 3; j ++) {\n      vec3 vj = v_left;\n      vj[j] = v_in[j];\n      float d = length(vj - v_in);\n      if (j_best < 0 || d < d_best) {\n        j_best = j;\n        d_best = d;\n        v = vj;\n      }\n    }\n    \n    fragColor = vec4(v,1.0);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  stage(fragColor,fragCoord,iChannel0,iChannel1,iResolution,1.0,iFrame);\n}","name":"Buffer B","description":"","type":"buffer"}]}