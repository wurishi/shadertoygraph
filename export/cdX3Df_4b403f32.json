{"ver":"0.1","info":{"id":"cdX3Df","date":"1666959319","viewed":377,"name":"Coral Clock","username":"ChunderFPV","description":"Number spiral shows the time in fractions.  The pattern starts over at 1:00 am/pm.  Mouse Y changes zoom & exponent.  Mouse X changes radial blur strength & direction.  M key toggles between default & user mouse position.\n","likes":16,"published":1,"flags":48,"usePreview":0,"tags":["2d","clock","spiral","screensaver","buffer","fractions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// clock modified from https://www.shadertoy.com/view/stlSzM\n#define bcd(i) (i/10*6+i)\n#define digit(uv,i) texture(iChannel1, (uv)/16.0+vec2(float(i)/16.0, 0.75)).x\n#define draw_digit(c,uv,i) if(abs(uv).x < 0.5 && abs(uv).y < 0.5) c += (1.0-c)*digit(uv+0.5, i)\n#define draw_bcd(c,uv,i,b) if (b) draw_digit(c, uv,(i&0xf0)>>4); draw_digit(c, uv-vec2(.5,0),(i&0xf))\n\nfloat draw_time(vec2 uv, vec2 xy, float s, float t)\n{\n    uv -= xy; // position\n    uv /= s; // size\n    float c = 0.0;\n    int hour = int(mod(t/3600.0, 12.0));\n    if (hour == 0) hour = 12;\n    int minute = int(mod(t/60.0, 60.0));\n    draw_bcd(c, uv, bcd(hour), (hour > 9)); // 1st & 3rd digits\n    uv.x -= 0.85;\n    draw_digit(c, uv, 10); // colon\n    uv.x -= 0.35;\n    draw_bcd(c, uv, bcd(minute), true); // 2nd & 4th digits\n    return c;\n}\n\nvoid mainImage(out vec4 RGBA, in vec2 XY)\n{\n    vec3 c = vec3(0);\n    float a = ((T/3600.0)/24.0)*TAU; // arc from 24 hour cycle\n    float o = (sin(a)+1.0)/2.0; // oscillate between 0 & 1\n    vec3 dc = vec3(0.4, 0.7, 1.0); // digit color\n    c += draw_time(XY/R.y, vec2(0.04, 0.08), 0.1, T)*dc; // clock\n    c *= texture(iChannel2, (XY/R.y)*(1.0-(o/4.0)), 3.0).rgb*1.25; // clock texture\n    c += texture(iChannel0, XY/R, 2.0*length(SC)).rgb; // buffer A\n    float n = mod(T/3600.0, 12.0); // value from 12 hour cycle\n    if (n < 1.0) n += 12.0; // change 0 to 12\n    RGBA = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define SCALE 3.5\n#define R iResolution.xy\n#define T iDate.w\n#define M iMouse\n#define PI radians(180.0)\n#define TAU (PI*2.0)\n#define CS(a) vec2(cos(a), sin(a))\n#define SC ((XY-0.5*R)/R.y)\n#define PX length(fwidth(sc/1.414))\n\n// fraction spiral: decimal(n) to visual fraction\n// screen coords, exponent, value, width, rotation\nfloat fs(vec2 sc, float e, float n, float w, float ro)\n{\n\tfloat t = TAU*sqrt(abs(n))*sign(n);\n\tfloat r = round(exp(log(length(sc))/e));\n\tvec2 xy = sc-CS(ro-t*sqrt(r*2.0))*pow(r, e);\n\treturn max(0.0, 1.0-length(xy/w));\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 RGBA, in vec2 XY)\n{\n    float n = mod(T/3600.0, 12.0); // value from 12 hour cycle\n    if (n < 1.0) n += 12.0; // change 0 to 12\n    //n = 1.333; // decimal to visual fraction\n    float ro = sqrt(n)*200.0; // rotation\n    float e = 1.0; // exponent\n    float z = 1.0; // zoom\n    float az = pow(700.0, e); // autozoom\n    float rf = -4.0/R.y; // radial flow direction & strength\n    vec2 mc = M.xy*2.0/R-1.0; // ±1x, ±1y\n    float xm = 1.0; // mouse x modifier\n    float key_m = texture(iChannel2, vec2( (float(77)+0.5)/256.0, 1.0) ).x; // key m toggle\n    if (M.z > 0.0 || key_m > 0.0) // on click\n    {\n        az = 1.0; // clear autozoom\n        e = -mc.y; // exponent from mouse y\n        z = pow(1.0-abs(mc.y), 4.0*sign(mc.y)); // mouse y zoom\n        xm = mc.x;\n        rf *= xm*3.0; // mouse x radial flow\n    }\n\tvec2 sc = SC; // screen coords\n    float r = length(sc); // screen radius\n    sc *= SCALE*z*az; // apply scale\n    \n    float o = (cos(T/10.0*PI)+3.0)/4.0; // oscillation\n    float de = (1.0-(r/10.0)); // darken screen edges to reduce negative radial flow issue\n    vec3 c = vec3(texture(iChannel0, mix(XY/R, vec2(0.5), rf), r*4.0).rgb)*0.98*de; // scale blur\n    \n    float w = max(PX*5.0, 0.025*z*az)*o; // point radius\n    float dc = max(r, xm)*(2.0-xm); // darken center\n    vec3 pc = vec3(xm-r, 1.0-abs(r+r-1.0), r); // point color\n    pc *= texture(iChannel1, mix(XY/R, vec2(0.5), o/2.0), 1.0).rgb*2.5; // texture for a bit of color variation\n    pc.b *= o*2.3; // blue tint\n    pc.r = dc*0.5; // modify red\n    c += fs(sc, e, n, w, ro)*dc*pc*4.0; // fraction spiral\n    \n\tRGBA = vec4(c, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}