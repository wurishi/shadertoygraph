{"ver":"0.1","info":{"id":"4sGfzd","date":"1545915994","viewed":96,"name":"Chimpology","username":"Wuszt","description":"Like a Chimpology game.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int howManyRows = 20; \n\n//int howManyBlocks = 37;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float ratio = iResolution.x / iResolution.y;\n \n    int howManyColumns = int(float(howManyRows) * ratio + 0.5);\n  \n    int howManyBlocks = iFrame % (howManyRows * howManyColumns);\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n    \n    float epsilon = 1. / float(howManyRows);\n    \n    float fullRows = float(howManyBlocks) / float(howManyColumns);\n    \n    float fullRowsTrunc = trunc(fullRows);\n    \n    if(uv.y < (fullRowsTrunc + 1.) * epsilon)\n    {\n        if(uv.y > fullRowsTrunc * epsilon)\n        {\n            int x = howManyBlocks % howManyColumns;\n\t\t\tif(uv.x > (float(x) / float(howManyColumns)))\n        \treturn;\n        }\n               \n       \t\tfragColor = vec4(0,0,0,0);            \n    }\n    \n}","name":"Image","description":"","type":"image"}]}