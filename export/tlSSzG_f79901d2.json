{"ver":"0.1","info":{"id":"tlSSzG","date":"1568736108","viewed":136,"name":"pattern_grid","username":"hyunxi","description":"grid","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 grids(vec2 uv,float size,float line,vec2 tile_v0,vec2 tile_v1 , vec3 c1, vec3 c2)\n{\n    line /= size;\n    \n    float v0 = dot(tile_v0, uv/size);\n    //v0 = v0 - floor(v0);\n    //v0 = fract(v0);\n    v0 = abs(fract(v0+.5) -.5);\n    \n    float v1 = dot(tile_v1, uv/size);\n    //v1 = v1 - floor(v1);\n    v1 = abs(fract(v1+.5) -.5);\n    \n    vec3 col = vec3(0.,0.,0.);\n    //if ((v0>line)&&(v1>line))\n    //{\n    //   col = c2;\n    //}\n    \n    // 0, if v0<line ; 1 if v0>line \n    //col = vec3(step(line,v0) *step(line,v1));\n    col = vec3(smoothstep(0.,line,v0) *smoothstep(0.,line,v1)); \n    \n \treturn col;   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    // get uv <-0.5,0.5>\n    //vec2 uv = fragCoord/iResolution.xy - 0.5;\n    //scale uv to 1:1\n    //uv.y /= iResolution.x/iResolution.y;\n    \n    vec2 uv = fragCoord/min(iResolution.x,iResolution.y);\n    //pixel thickness : line = pixelWidth\n    float pixelWidth = 1./iResolution.y;\n    \n    float tile_size = 0.2;\n    float tile_line_thickness = pixelWidth;//0.001;\n   \n    vec3 c1 = vec3(0.0,0.0,0.0);\n    vec3 c2 = vec3(1.0,1.0,1.0);\n    vec2 tile_v0 = vec2(1.0,1.0);\n    vec2 tile_v1 = vec2(-1.0,1.0);\n    vec3 col = grids(uv,tile_size,tile_line_thickness,tile_v0,tile_v1,c1,c2);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}