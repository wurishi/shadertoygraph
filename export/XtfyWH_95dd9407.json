{"ver":"0.1","info":{"id":"XtfyWH","date":"1504513120","viewed":1432,"name":"MSDF example practice","username":"Creta","description":"Please check Buffer A comments\nMulti-channel Signed Distance Field\n\nthis helped to my projects.\nhttps://github.com/Creta5164/Monogame-MSDF-example","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["distancefield","font"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//example source from Chlumsky's repo.\n//https://github.com/Chlumsky/msdfgen\n//README.md -> Using a multi-channel distance field\n\n//IMPORTANT : if you want see this, must be check Buffer A comments.\n\n#define msdf iChannel0\nfloat pxRange = 5.;\nvec4 bgColor = vec4(1., 1., 1., 1.);\nvec4 fgColor = vec4(0., .5, 1., 1.);\n\nvec2 textureUV;\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\n\nvoid mainImage( out vec4 color, in vec2 pos )\n{\n    if (iMouse.z != 0.) pxRange = ((iMouse.x / iResolution.x) - .5) * 5.;\n    \n    textureUV = vec2(textureSize(iChannel0, 0));\n    //use this for UV coordinate based rendering (256px, 256px)\n    //textureUV = vec2(256.);\n    \n    float zoomValue = (((12. + sin(iTime) * 10.) / iResolution.x) * 16.);\n    pos *= (textureUV / iResolution.xy);\n    pos *= zoomValue;\n    pos /= iResolution.xy;\n    \n    vec2 msdfUnit = pxRange/vec2(textureSize(msdf, 0));\n    vec3 t = texture(msdf, pos).rgb;\n    float sigDist = median(t.r, t.g, t.b) - 0.5;\n    sigDist *= dot(msdfUnit, 0.5/fwidth(pos));\n    float opacity = clamp(sigDist + 0.5, 0.0, 1.0);\n    color = mix(bgColor, fgColor, opacity);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//run this code on browser developer tool console. (F12)\n\n// IMPORTANT : Strongly recommend Chrome.\n//\t\t\t   It may not work properly in other browsers.\n/*\n\n - Open the javascript developer tool console of your browser:\n\t\t\t\t   Mac      /     Windows\n\tChrome:  cmd + opt + J  /  ctrl + shift J\n\tFirefox: cmd + opt + K  /  ctrl + shift K\n    IE:          na         /  F12   \n\n*/\n\n// 128 x 128 px MSDF texture of glyph 'A'.\n//gShaderToy.SetTexture(0, {mSrc:'https://dl.dropboxusercontent.com/s/694j08ts30o9vam/128A.png', mType:'texture', mID:1, mSampler:{ filter: 'nearest', wrap: 'repeat', vflip:'true', srgb:'false', internal:'byte' }});\n\n// 16 x 16 px MSDF texture of glyph 'A'.\n//gShaderToy.SetTexture(0, {mSrc:'https://dl.dropboxusercontent.com/s/nxi0ztua7qykqod/16A.png', mType:'texture', mID:1, mSampler:{ filter: 'nearest', wrap: 'repeat', vflip:'true', srgb:'false', internal:'byte' }});\n\n// 146 x 110 MSDF texture of my personal icon.\n//gShaderToy.SetTexture(0, {mSrc:'https://dl.dropboxusercontent.com/s/gguhhqxc1j0v209/favIcon.png', mType:'texture', mID:1, mSampler:{ filter: 'nearest', wrap: 'repeat', vflip:'true', srgb:'false', internal:'byte' }});\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / vec2(textureSize(iChannel0, 0));\n    fragColor = texture(iChannel0, uv);\n}","name":"Buf A","description":"","type":"buffer"}]}