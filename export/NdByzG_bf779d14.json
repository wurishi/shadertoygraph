{"ver":"0.1","info":{"id":"NdByzG","date":"1643659573","viewed":207,"name":"effect a-la Space Odyssey","username":"SoldatovAndrey","description":"this effect was inspired by Space Odyssey 2001\nmouse pressing will shift the direction","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["light","fake3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nfloat normSin(float x) {\n    return sin(x) * 0.5 + 0.5;\n}\n\nvec3 toACES(vec3 rgb) {\n    mat3 m = mat3(\n        0.612494, 0.338737, 0.048856,\n        0.070594, 0.917671, 0.011704,\n        0.020727, 0.106882, 0.872338\n    );\n    return rgb * m;\n}\n\nvec3 smoothColor(float y, float offset){\n    return vec3(\n        normSin(iTime * 5.0) * fract(sin(dot(vec2(y, offset), vec2(12.9898, 78.233))) * 43758.5453),\n        normSin(iTime * 5.0 + 0.67 * PI) * fract(sin(dot(vec2(y + 1.0, offset + 1.0), vec2(12.9898, 78.233))) * 43758.5453),\n        normSin(iTime * 5.0 + 1.33 * PI) * fract(sin(dot(vec2(y + 2.0, offset + 2.0), vec2(12.9898, 78.233))) * 43758.5453)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.x + vec2(0.0, (iResolution.x - iResolution.y) / (2.0 * iResolution.x));\n\n    vec3 dots;\n    \n    vec2 mLocal = iMouse.xy / iResolution.xy;\n    if(mLocal.x < 0.01) {\n        mLocal.x = 0.5;\n    }\n    \n    for(float i = -0.5; i < 0.5; i+= 0.02) {\n        for(float offset = 0.0; offset < 0.99; offset += 0.05) {\n            float dt = fract(iTime * 0.5 + offset);\n            vec2 dotPos = vec2(mLocal.x + dt * dt * (1.1 - mLocal.x), 0.5 + i * 0.4 + i * dt * dt * 3.0);\n            float brightness = 0.016 * dt;\n            float flash = brightness / distance(dotPos, uv);\n            dots += min(smoothColor(i, offset) * flash * flash, 3.0);\n            \n            dotPos = vec2(mLocal.x - dt * dt * (mLocal.x + 0.1), 0.5 + i * 0.4 + i * dt * dt * 3.0);\n            brightness = 0.016 * dt;\n            flash = brightness / distance(dotPos, uv);\n            dots += min(smoothColor(i, offset) * flash * flash, 3.0);\n        }\n    }\n    \n    dots *= sqrt(abs(uv.x - mLocal.x));\n    dots = toACES(dots);\n    // Output to screen\n    fragColor = vec4(dots,1.0);\n}","name":"Image","description":"","type":"image"}]}