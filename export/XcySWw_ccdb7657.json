{"ver":"0.1","info":{"id":"XcySWw","date":"1715229126","viewed":64,"name":"bae #009 ~ All Connected","username":"BretHudson","description":"Circles and circles","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n\n    vec3 col = vec3(0.0);\n    \n    uv *= 30.0;\n    \n    float uvOffset = 5.0;\n    float uvSpeed = iTime * 1.5;\n    uv += vec2(uvSpeed * 1.2, sin(uvSpeed)) * uvOffset;\n    \n    uv = mod(uv, 10.0) - 5.0;\n    \n    float scale = 1.0;\n    float tScale = 1.3;\n    float startT = 1.5 * (3.141592 / tScale);\n    float t = sin((iTime + startT) * tScale) * scale + scale + 2.75;\n    \n    float d = mod(length(uv), t) - 0.5;\n    \n    // I really don't know what I'm doing here, but I wanted a thicc line\n    d = smoothstep(3.9, -1.0, 1.0 * abs(d) / fwidth(d));\n    \n    float a = (length(uv0) - 0.76 + sin(iTime) * 0.2);\n\n    // Time varying pixel color\n    \n    float x = fragCoord.x/iResolution.x;\n    float y = fragCoord.y/iResolution.y;\n    vec3 col1 = d * vec3(0.5 + x * 0.6, 0.5 + y * 0.1, 0.2);\n    vec3 col2 = d * vec3(.3, x * 0.4, .7);\n    \n    float c = (cos(iTime) + 1.) * 0.5;\n    col = mix(col2, col1, c) * (1.0 - a);\n    \n    //col = col1;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}