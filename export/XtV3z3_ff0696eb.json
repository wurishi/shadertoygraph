{"ver":"0.1","info":{"id":"XtV3z3","date":"1475885876","viewed":1055,"name":"NormalMapFilter","username":"albertelwin","description":"A filter for generating a normal map from an image :)","likes":27,"published":1,"flags":0,"usePreview":0,"tags":["2d","normals","filter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define GAMMA 2.2\n\nfloat texture_lum(sampler2D tex, vec2 uv) {\n\tvec3 rgb = texture(tex, uv).rgb;\n    return 0.2126 * rgb.r + 0.7152 * rgb.g + 0.0722 * rgb.b;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float r = 1.0 / iChannelResolution[0].x;\n    vec2 uv = fragCoord.xy * r;\n    \n    float x0 = texture_lum(iChannel0, vec2(uv.x + r, uv.y));\n    float x1 = texture_lum(iChannel0, vec2(uv.x - r, uv.y));\n    float y0 = texture_lum(iChannel0, vec2(uv.x, uv.y + r));\n    float y1 = texture_lum(iChannel0, vec2(uv.x, uv.y - r));\n    \n    //NOTE: Controls the \"smoothness\"\n    float s = 1.0;\n    vec3 n = normalize(vec3(x1 - x0, y1 - y0, s));\n    \n    float t = fract(fragCoord.x / iResolution.x - iTime * 0.2);\n    if(t < 0.333) {\n        vec3 p = vec3((fragCoord.xy / iResolution.y) * 2.0 - 1.0, 0.0);\n        vec3 v = vec3(0.0, 0.0, 1.0);\n        \n        vec3 l = v - p;\n        float d_sqr = l.x * l.x + l.y * l.y + l.z * l.z;\n        l *= (1.0 / sqrt(d_sqr));\n        \n        vec3 h = normalize(l + v);\n        \t\n       \tfloat dot_nl = clamp(dot(n, l), 0.0, 1.0);\n        float dot_nh = clamp(dot(n, h), 0.0, 1.0);\n        \n        float color = texture_lum(iChannel0, uv) * pow(dot_nh, 14.0) * dot_nl * (1.0 / d_sqr);\n        color = pow(color, 1.0 / GAMMA);\n        \n\t\tfragColor.xyz = vec3(color);\n    }\n    else if(t < 0.666) {\n        fragColor.xyz = n * 0.5 + 0.5;\n    }\n    else {\n        fragColor.xyz = vec3(texture_lum(iChannel0, uv));\n    }\n}","name":"Image","description":"","type":"image"}]}