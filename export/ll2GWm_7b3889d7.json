{"ver":"0.1","info":{"id":"ll2GWm","date":"1429792608","viewed":114,"name":"Red Spiral","username":"Normangorman","description":"It's a red spiral.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define PI 3.141592653\n#define E 2.71828\n\n// Returns 1 for a point on the spiral, 0 for not, [0,1] for on the edge for antialiasing.\nfloat inSpiral(vec2 p) {\n    // Using formula r = a*theta + b\n    \n    float r = length(p);\n    float a = 0.1;\n    float b = sin(iTime) * 1.5;\n    float theta = (r-b)/a;\n    \n    vec2 s = vec2(r * cos(theta), r * sin(theta));\n    float d = length(p - s);\n    \n    return 1.0 - smoothstep(0.0, 1.0, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv =  2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n    \n    vec3 spiralColor = vec3(1.0, 0.0, 0.0); // red\n    vec3 bgColor = vec3(45.0/255.0, 187.0/255.0, 40.0/255.0); // black\n    \n    vec3 ret = bgColor;\n    /*\n    float spiral = inSpiral(uv);\n    if (length(spiral) > 0.01) {    \n    \tret = spiralColor * inSpiral(uv);\n    }\n    else {\n        ret = bgColor;\n    }\n\t*/\n    \n    ret = mix(bgColor, spiralColor, inSpiral(uv));\n    \n    fragColor = vec4(ret, 1.0);\n}","name":"","description":"","type":"image"}]}