{"ver":"0.1","info":{"id":"lcS3Rm","date":"1703959782","viewed":55,"name":"20231231_dy","username":"dongyopark","description":"draw circle and square by 2d shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1) & adjust by height\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    // adjust pivot\n    uv.y=-uv.y;\n    \n    float size = 0.3;\n    float smooth_range = 1.5/iResolution.y;\n    \n    //circle\n    vec2 offset1 = vec2(-0.4,0);\n    \n    float circle = smoothstep(size, size-smooth_range, length(uv+offset1));\n\n    //square\n    vec2 offset2 = vec2(0.4,0);\n    \n    vec2 square = smoothstep(size,size-smooth_range, abs(uv+offset2));\n    \n    \n    float color = circle + square.x*square.y;\n    \n    fragColor = vec4(color, color, color,1.0);\n}","name":"Image","description":"","type":"image"}]}