{"ver":"0.1","info":{"id":"lsKXDK","date":"1466776232","viewed":621,"name":"Bernstein","username":"zlnimda","description":"Evaluation of the bernstein polynomial","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["polynomial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Define the degree of the polynomial\n#define M 16\n#define PI 3.141592\n\n// Approximation factorial\nfloat fact(float x)\n{\n   x = max(x, 1.0);\n   return sqrt(2.*PI*x)*pow(x/exp(1.), x)*exp(1./(12.*x)-1./(360.*pow(x,3.)));\n}\n\n// eval of the binomial coef\nfloat binomial(float n, float k)\n{\n    return fact(n) / (fact(k) * fact(n-k));\n}\n\n// eval of bernstein polynomial, following this formula :\n//  bern(m,i) (u) = C(m,i) * u^i * (1-u)^(m-i)\n//  - with C(m,i) a binomial coef following this formula :\n//    C(n,k) = n!/(k!(n-k)!)\nfloat bern(float u, float i, float m)\n{\n    return binomial(m, i) * pow(u, i) * pow(1. - u, m - i);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //fragCoord.x *= 1.5;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat d = 100.;\n    \n    float m = float(M);\n    for (int i = 0; i <= M; i++)\n    {\n        vec2 ev = vec2(uv.x, bern(uv.x, float(i), m));\n        d = min(d, distance(ev * 100., uv * 100.));\n    }\n    \n    vec2 ev = vec2(uv.x, bern(uv.x, abs(mod(iTime * 3.0, m * 2.) - m), m));\n    vec3 color = vec3(1. - d);\n    d = min(1. - distance(ev * 100., uv * 100.), 0.);\n    color += vec3(d, d, 0.);\n    fragColor = vec4(color, 0.);\n}","name":"Image","description":"","type":"image"}]}