{"ver":"0.1","info":{"id":"7dtGzB","date":"1632698661","viewed":284,"name":"Pixel Perfect Pulse Ring","username":"patrickdoc","description":"A basic circle SDF, with a scalable pixel effect","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["sdf","pixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Target resolution\n    vec2 desiredResolution = vec2(64.0,32.0);\n    // Radius of circle in pixels of target resolution\n    float radius = 12.0;\n    \n    // Shift (0,0) to the center of the screen)\n    vec2 pixel = fragCoord - (iResolution.xy / vec2(2,2));\n    // Downscale image\n    pixel = trunc(pixel / (iResolution.xy / desiredResolution));\n    \n    // Circle SDF, radius in pixels of target resolution\n    float dist = length(pixel) - radius;\n    if (abs(dist) < 0.49) {\n        // Red outer ring\n        fragColor = vec4(1,0,0,1);\n    }\n    \n    if (abs((radius - 1.0) * (sin(iTime) + 1.0) / 2.0 + dist + 1.0) < 0.49) {\n        // Green inner ring\n        fragColor = vec4(0,1,0,1);\n    }\n}","name":"Image","description":"","type":"image"}]}