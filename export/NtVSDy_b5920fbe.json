{"ver":"0.1","info":{"id":"NtVSDy","date":"1641303264","viewed":55,"name":"Rotation Matrix for X Axis","username":"DexM","description":"It starts with a vector (0, 0, 1) in the middle. It rotates it to (0, 1, 0) on the bottom and to (0, -1, 0) on the top.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    // Y coordinate of current pixel as a fraction of resolution\n    float y = fragCoord.y / iResolution.y;\n    \n    // Shift Y to be in the range of -1..1\n    y = y * 2.0 - 1.0;\n    \n    // Angle for vector rotation at current pixel\n    float angle = radians(90.0) * y;\n    \n    // Rotation matrix for current angle\n    float s = sin(angle);\n    float c = cos(angle);\n    \n    mat3 rotationX = mat3(\n        1, 0, 0,\n        0, c, -s,\n        0, s, c);\n    \n    // Vector to rotate\n    vec3 vec = vec3(0, 0, 1);\n\n    // Rotation\n    vec *= rotationX;\n\n    // Render result\n    fragColor = vec4(vec, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}