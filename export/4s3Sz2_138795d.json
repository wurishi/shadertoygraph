{"ver":"0.1","info":{"id":"4s3Sz2","date":"1460198567","viewed":231,"name":"Hipnotic 1","username":"Vicious","description":"Yolo","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["yolo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI (3.1415)\n\nfloat map(vec3 p)\n{\n    vec3 q = fract(p) * 2.0 -1.0;\n    \n    return length(q) - 0.25;\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = .0;\n    for (int i = 0; i < 32; ++i) {\n    \tvec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.3;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv = uv * (iResolution.x / iResolution.y); // notre environement\n    \n    vec3 r = normalize(vec3(uv, sin(iTime / 10.) /*1.*/)); // <== camera\n    vec3 o = vec3(iTime / 2., iTime, iTime); // <== direction\n    \n    float rotate = iTime;\n    r.xy *= mat2(cos(rotate), \n                 sin(rotate), \n                 -sin(rotate),\n                 cos(rotate));\n    r.xz *= mat2(cos(rotate), \n                 sin(rotate), \n                 -sin(rotate),\n                 cos(rotate));\n    float t = trace(o, r); // <== rendu\n    float fog = 1. / (.0 + t * t * 0.1); // <== pour le fun\n    \n    vec3 fc = vec3(sin(iTime) * fog,\n                   sin(iTime - (2.0/3.0 * M_PI)) * fog,\n                   sin(iTime - (4.0/3.0 + M_PI)) * fog);\n    // <== la couleur\n    \n\tfragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}