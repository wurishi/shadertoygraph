{"ver":"0.1","info":{"id":"wsdfzB","date":"1605656772","viewed":89,"name":"ttp_slider","username":"alfredo_giani","description":"a simple slider widget","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float duration_in_sec = 180.;\nfloat speed = 1.;\n\nfloat current_time = 0.;\n\nint state = 0; // 0:stopped, 1: started\n\n// draw a background for the slider\nfloat slider_width_relative = 0.8;\nfloat slider_height_relative = 0.125;\n\n// geometrical parameters of the thumb\nfloat thumb_ext_width = 0.025 + 0.0125;\nfloat thumb_int_width = 0.025 - 0.0125;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float x_start = 0.5 - slider_width_relative/2.; \n    float x_stop = 0.5 + slider_width_relative/2.; \n\n    float y_start = 0.5 - slider_height_relative/2.; \n    float y_stop = 0.5 + slider_height_relative/2.; \n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n \n    vec3 col;\n    \n\t// slider background\n    if ( uv.x >= x_start &&  uv.x <= x_stop &&  uv.y >= y_start &&  uv.y <= y_stop )\n    {\n        float vert_dist = abs(uv.y -0.5);\n        bool under = uv.y > 0.5;\n        \n        float horiz_dist = abs(uv.x -0.5);\n        bool right = uv.x > 0.5;\n        \n        // drop a shadow at the top and bottom edge of the thumb rail \n        if( vert_dist  < .01)\n        {\n        \tcol = vec3(0.,0.,0.);\n        }\n        else\n        {\n            float w = 2.5*vert_dist/slider_height_relative/2.; \n            col = (1. -w)*vec3(0.2,0.2,0.2) + w*vec3(0.,0.,0.);\n        }\n    }\n    // canvas background\n    else\n    {\n        // Time varying pixel color\n    \tcol = 0.5 + 0.25*cos(0.2*iTime+ uv.xyx+vec3(0.,0.,0.0));\n    }\n\n    // draw thumb\n\n    \n    float thumb_ext_height = 0.135 + 0.0125*iResolution.x/iResolution.y;\n    float thumb_int_height = 0.135 - 0.0125*iResolution.x/iResolution.y;\n\n    float pos_timenorm = mod(speed*iTime, duration_in_sec)/duration_in_sec; // 0...1 duration\n    \n    float thumb_pos_x = pos_timenorm*(x_stop -x_start) + x_start;\n    float thumb_pos_y = 0.5;\n    \n    float th_x_start_ext = thumb_pos_x - .5*thumb_ext_width; \n    float th_x_stop_ext = thumb_pos_x + .5*thumb_ext_width;\n    \n    float th_x_start_int = thumb_pos_x - .5*thumb_int_width; \n    float th_x_stop_int = thumb_pos_x + .5*thumb_int_width;\n    \n    float th_y_start_ext = thumb_pos_y - .5*thumb_ext_height; \n    float th_y_stop_ext = thumb_pos_y + .5*thumb_ext_height;\n    \n    float th_y_start_int = thumb_pos_y - .5*thumb_int_height; \n    float th_y_stop_int = thumb_pos_y + .5*thumb_int_height;\n    \n    \n    vec4 thumb_col = vec4(0., 0., 0., 0.);\n    if ( uv.x >= th_x_start_ext &&  uv.x <= th_x_stop_ext && uv.y >= th_y_start_ext &&  uv.y <= th_y_stop_ext )\n    {\n        vec3 white = vec3(1.,1.,1.);\n        \n        if( uv.x >= th_x_start_int &&  uv.x <= th_x_stop_int &&  uv.y >= th_y_start_int &&  uv.y <= th_y_stop_int )\n        {\n \t\t\tthumb_col = vec4(white, 0.);\n        }\n        else\n        {\n            thumb_col = vec4(white, .5);\n        }\n    }\n    \n    // Thumb's tick\n    if ( abs(uv.x - thumb_pos_x) < 0.002 && uv.y >= th_y_start_ext - 0.01 &&  uv.y <= th_y_stop_ext + 0.01 )\n    {\n        fragColor = vec4(1., 0., 0., 1.);\n    }\n    else\n    {   \n    \tfragColor = vec4( mix(col, thumb_col.rgb, thumb_col.a), 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}