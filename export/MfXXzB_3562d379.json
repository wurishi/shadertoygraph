{"ver":"0.1","info":{"id":"MfXXzB","date":"1705397196","viewed":146,"name":"SpatiotemporalPoissonDiscBlur","username":"ShadingKnight","description":"Amortize poisson disc blur to multiple frames.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","blur","post","poisson"],"hasliked":0,"parentid":"lsfGWn","parentname":"Blur: Poisson Disc"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define USE_BLUE_NOISE \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float c_goldenRatioConjugate = 0.61803398875;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y = 1.0 - uv.y;\n   \n    float kernel_size = 8.0f;\n\n    if ( uv.y > 0.5 )\n    {\n        fragColor = texture( iChannel0, uv, log2(kernel_size) );\n    }\n    else\n    {\n        vec4 sum = vec4(0);\n        \n#ifdef USE_BLUE_NOISE\n        vec2 blueNoiseUV = fragCoord / vec2(1024.0);\n        float bn = texture(iChannel3, blueNoiseUV).r;\n        bn = fract(bn + float(iFrame % 256) * c_goldenRatioConjugate);\n#else\n        vec2 seed = fragCoord.xy + 1337.0 * fract(iTime);\n        float bn = InterleavedGradientNoise(seed);\n#endif\n        \n        float rnd = 3.141593f * 2.0f * bn;\n        vec2 seed = fragCoord.xy + 1337.0 * fract(iTime);\n        float dist = InterleavedGradientNoise(seed);\n        vec2 coordInCircle = vec2(dist * sin(rnd), dist * cos(rnd));\n\n        vec2 texcoord = uv + kernel_size * coordInCircle / iResolution.xy;\n        fragColor = textureLod(iChannel0, texcoord, 0.0);\n    }    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec4 basis_from_angle( float a )\n{\n    vec2 sc = vec2(sin(a),cos(a));\n\n    vec4 ret;\n    ret.xy = vec2(  sc.y, sc.x ); //p = vec2(1,0);\n    ret.zw = vec2( -sc.x, sc.y ); //p = vec2(0,1);\n    \n    return ret;\n}\n\nvec2 plastic(uint index)\n{\n    const float p1 = 0.7548776662466927f;\n    const float p2 = 0.5698402909980532f;\n    vec2 result;\n    result.x = mod(p1 * float(index), 1.0f);\n    result.y = mod(p2 * float(index), 1.0f);\n    return result;\n}\n\n// http://advances.realtimerendering.com/s2014/index.html\nfloat InterleavedGradientNoise( vec2 uv )\n{\n    const vec3 magic = vec3( 0.06711056, 0.00583715, 52.9829189 );\n    return fract( magic.z * fract( dot( uv, magic.xy ) ) );\n}\n\n// from https://www.shadertoy.com/view/3sfBWs\nconst vec2 BlueNoiseInDisk[64] = vec2[64](\n    vec2(0.478712,0.875764),\n    vec2(-0.337956,-0.793959),\n    vec2(-0.955259,-0.028164),\n    vec2(0.864527,0.325689),\n    vec2(0.209342,-0.395657),\n    vec2(-0.106779,0.672585),\n    vec2(0.156213,0.235113),\n    vec2(-0.413644,-0.082856),\n    vec2(-0.415667,0.323909),\n    vec2(0.141896,-0.939980),\n    vec2(0.954932,-0.182516),\n    vec2(-0.766184,0.410799),\n    vec2(-0.434912,-0.458845),\n    vec2(0.415242,-0.078724),\n    vec2(0.728335,-0.491777),\n    vec2(-0.058086,-0.066401),\n    vec2(0.202990,0.686837),\n    vec2(-0.808362,-0.556402),\n    vec2(0.507386,-0.640839),\n    vec2(-0.723494,-0.229240),\n    vec2(0.489740,0.317826),\n    vec2(-0.622663,0.765301),\n    vec2(-0.010640,0.929347),\n    vec2(0.663146,0.647618),\n    vec2(-0.096674,-0.413835),\n    vec2(0.525945,-0.321063),\n    vec2(-0.122533,0.366019),\n    vec2(0.195235,-0.687983),\n    vec2(-0.563203,0.098748),\n    vec2(0.418563,0.561335),\n    vec2(-0.378595,0.800367),\n    vec2(0.826922,0.001024),\n    vec2(-0.085372,-0.766651),\n    vec2(-0.921920,0.183673),\n    vec2(-0.590008,-0.721799),\n    vec2(0.167751,-0.164393),\n    vec2(0.032961,-0.562530),\n    vec2(0.632900,-0.107059),\n    vec2(-0.464080,0.569669),\n    vec2(-0.173676,-0.958758),\n    vec2(-0.242648,-0.234303),\n    vec2(-0.275362,0.157163),\n    vec2(0.382295,-0.795131),\n    vec2(0.562955,0.115562),\n    vec2(0.190586,0.470121),\n    vec2(0.770764,-0.297576),\n    vec2(0.237281,0.931050),\n    vec2(-0.666642,-0.455871),\n    vec2(-0.905649,-0.298379),\n    vec2(0.339520,0.157829),\n    vec2(0.701438,-0.704100),\n    vec2(-0.062758,0.160346),\n    vec2(-0.220674,0.957141),\n    vec2(0.642692,0.432706),\n    vec2(-0.773390,-0.015272),\n    vec2(-0.671467,0.246880),\n    vec2(0.158051,0.062859),\n    vec2(0.806009,0.527232),\n    vec2(-0.057620,-0.247071),\n    vec2(0.333436,-0.516710),\n    vec2(-0.550658,-0.315773),\n    vec2(-0.652078,0.589846),\n    vec2(0.008818,0.530556),\n    vec2(-0.210004,0.519896) \n);\n","name":"Common","description":"","type":"common"}]}