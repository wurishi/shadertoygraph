{"ver":"0.1","info":{"id":"WsBcRy","date":"1586815850","viewed":96,"name":"spiral 2 -Robinsong","username":"Robinsong","description":"spiral 2","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CENTER (iResolution.xy / 2.0)\n#define PI 3.1415\n#define TAU (2.0 * PI)\n\n//Convert rectangular to polar coordinates\nvec2 rect_to_polar(vec2 rect) {\n    float r = pow(length(rect),.3);\n    float theta = atan(rect.y, rect.x);\n    \n    //Fix the coordinates so they go from 0 to 2PI\n    //instead of -PI to PI. These two lines are optional\n//    if (theta < 0.0)\n//        theta += TAU;\n    \n    return vec2(r, theta);\n}\n\nvec2 normalized_polar(vec2 coord) {\n    //Centered UV coordinates accounting for aspect ratio\n    \n    vec2 nCenter = vec2(CENTER.x,CENTER.y);\n    nCenter.x = CENTER.x+sin(iTime)*(iResolution.x/3.);\n    nCenter.y = CENTER.y+cos(iTime)*(iResolution.y/5.);\n\n    \n    vec2 uv = vec2(1.0,1.0);\n    uv.y = (coord.y - nCenter.y ) / iResolution.y;\n    uv.x = (coord.x - nCenter.x ) / iResolution.y;\n    \n    //Convert to polar. Normalize the angle component by\n    //dividing by a full circle.\n    vec2 polar = rect_to_polar(uv);\n    polar.y /= TAU;\n       \n    return polar;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n \tvec2 uv = fragCoord/iResolution.xy;\n   \n    uv = normalized_polar(fragCoord);\n    \n    float gp = uv.y;\n    float gx = uv.x;\n        \n    uv.x *= 15.;\n    uv.x = fract(uv.x);\n    \n    uv.x = uv.x + sin(uv.y*TAU+iTime);\n   \n    uv.x = uv.x - iTime*3.;\n       \n    vec3 col = vec3(0,0,0);\n      \n\tcol.x = -5.+sin(uv.x*TAU-(gp*TAU))*10.;\n    col.x = clamp(col.x, 0., 1.);\n    col.x = min(col.x, gx-.3);\n\n//    col.y = -20.+sin(uv.y*TAU*8.+iTime)*25.;\n    col.y = clamp(col.y, 0., 1.);\n    col.y = min(col.y, gx+.01);\n        \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}