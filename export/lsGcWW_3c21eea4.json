{"ver":"0.1","info":{"id":"lsGcWW","date":"1521983718","viewed":240,"name":"Phased array","username":"zakrent","description":"A simple demonstration of phased array.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["waves","interference","radar","phase","radio","antenna"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define C 0.05\n//N = number of sources \n//N > 1\n#define N 48\n#define F 5.0\n#define PI 3.14159265358979323\n\nfloat getSignalValue(float t, float f, float Phi){\n    return cos(t*f*2.0*PI+Phi);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.y;\n    if(uv.x < 0.18){\n        fragColor = vec4(0.0f);\n    }\n    else{\n        float signalSum = 0.0;\n        float Psi = PI/8.0*sin(iTime);\n        float deltaY = 0.2/float(N-1);\n        float deltaPhi = (2.0*PI*deltaY*sin(Psi))/(C/F);\n        for(int i = 0; i < N; i++){\n            vec2 pos = vec2(0.2, 0.4)\n                +vec2(0.0, float(i)*deltaY);\n            float d = length(uv-pos);\n            float t = d/C;\n            float Phi = float(i)*deltaPhi;\n            signalSum += getSignalValue(iTime-t, F, Phi)*\n        \t\t (0.42659-\n                 0.49656*cos(2.*PI*float(i)/float(N-1))+\n                 0.076849*cos(4.*PI*float(i)/float(N-1))\n                 );\n\n        }\n        fragColor = vec4(signalSum);\n    }\n}","name":"Image","description":"","type":"image"}]}