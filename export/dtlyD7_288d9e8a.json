{"ver":"0.1","info":{"id":"dtlyD7","date":"1690858280","viewed":204,"name":"[phreax] akashic lookup","username":"phreax","description":"inspired by kishimisu","likes":12,"published":1,"flags":64,"usePreview":0,"tags":["fractal","pseudodepth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"ls3GDH","filepath":"https://soundcloud.com/antirealists/antireality-someone-droned-over-the-grasshoppers-bass?si=97dc0e2a63e046628cb6f15278621dc2&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/antirealists/antireality-someone-droned-over-the-grasshoppers-bass?si=97dc0e2a63e046628cb6f15278621dc2&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Creative Commons Licence Attribution-NonCommercial-ShareAlike \n   phreax 2023\n*/\n\n#define SIN(x) (.5+.5*sin(x))\n#define N 6.\n#define K 1.1\n#define PI 3.141592 \n\nmat2 rot(float a) {float s=sin(a), c=cos(a); return mat2(c, s, -s, c);}\n\n// by Nusan\nfloat curve(float t, float d) {\n  t/=d;\n  return mix(floor(t), floor(t)+1., pow(smoothstep(0.,1.,fract(t)), 10.));\n}\n\nvec3 pal(float t) {\n\n    vec3 a = vec3(.6);\n    vec3 b = vec3(1.);\n    vec3 c = vec3(.5);\n    vec3 d = vec3(0.149,0.875,0.729);\n\n    return a + b*cos(6.283*(c*t+d));\n}\n\n// chebyshev distance\nfloat chebd(vec2 v, float k) {\n    return pow(pow(abs(v.x), k)+pow(abs(v.y), k), 1./k);\n}\n        \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2. - iResolution.xy)/iResolution.y;\n    \n    vec2 uv0 = uv;\n    vec2 uv2 = uv;\n    \n    vec2 uvb = uv;\n    \n    float tt = iTime*.6;\n\n    vec3 col = vec3(0);\n    for(float j = 0.; j < N; j++) {\n    \n        float stepf = j/N;\n        float z =  fract(stepf-.05*(tt+6.*curve(tt+2., 4.))); // depth value\n        z = z*z;\n        float luma = smoothstep(0.2, .9, exp(-z*1.5)); // brightness with exponential decay\n        luma *= smoothstep(1., .8, exp(-z*1.));\n   \n        float  blur = smoothstep(.1, 0.0, z); // depth of field \n            \n        uv0 *= rot(PI*.25*j);\n        uv = uv0*z;\n        uv2 = uv0*z;\n       \n        for(float i=0.; i< 5.; i++) {\n\n            uv = abs(abs(abs(abs(uv)-.1+i/2.)-.1*SIN(.1*tt+.8*curve(tt, 2.)))-.05);\n            \n            uv = fract(uv*1.9+uv*z)-.5;\n            uv2 = fract(uv2*(1.0+.5*sin(tt*.1)))-.5;\n\n            vec3 c = pal(1.5*SIN(3.*chebd(uv0, K)-.1*tt-4.*curve(tt, 2.)) + tt*.4 + i*.4+.4*j);\n\n            float d = (fract(chebd(uv, K)-.5)+chebd(uv2, K)*exp(-chebd(uv0, K)));\n\n            d = abs(d -.4*i);\n            d = abs(.1*d+sin(d*8.+tt+j*.3)/8.);\n\n            d =  smoothstep(.015+.01*blur, .0, d);\n            col += d*luma*c;\n\n        }\n    }\n\n\n    // Output to screen\n    col *= mix(.2, 1., (1.8-pow(dot(uvb, uvb), .4))); // vignette\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}