{"ver":"0.1","info":{"id":"7tGBzm","date":"1664237720","viewed":183,"name":"eightfold hyperbolic object","username":"panic","description":"varying a parameter in a rendering of the octagonal tiling of the hyperbolic plane","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["hyperbolicgeometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 cdiv(vec2 a, vec2 b)\n{\n    float b2 = dot(b, b);\n    return vec2(dot(a,b) / b2, (a.y * b.x - a.x * b.y) / b2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / (iResolution.y * 0.45);\n    vec3 col = vec3(0);\n    if (dot(uv, uv) < 1.) {\n        float w = 0.05 + (1. + sin(iTime)) / 3.5;\n        float b = (-2. * w) / (w * w + 1.);\n        float n = 0.;\n        for (float i=0.; i<16.; ++i) {\n            if (uv.x < 0.) {\n                uv = -uv;\n                n = i;\n            }\n            float slope = uv.y / uv.x;\n            if (slope > 0.4143) {\n                uv = vec2(\n                    uv.x * 0.7071 + uv.y * 0.7071,\n                    uv.x * -0.7071 + uv.y * 0.7071\n                );\n                n = i;\n            }\n            if (slope < -0.4143) {\n                uv = vec2(\n                    uv.x * 0.7071 + uv.y * -0.7071,\n                    uv.x * 0.7071 + uv.y * 0.7071\n                );\n                n = i;\n            }\n            if (dot(uv - vec2(w, 0), vec2(1, 0) - w * uv) > 0.) {\n                uv = -cdiv(uv + vec2(b, 0), b * uv + vec2(1, 0));\n                n = i;\n            }\n        }\n        col = vec3(n / 16.) + 0.5 * pow(uv.x / w, 20.);\n    }\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}