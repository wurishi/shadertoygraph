{"ver":"0.1","info":{"id":"wdyyRt","date":"1603456636","viewed":92,"name":"motion moire mousesampling ","username":"tomoyanonymous","description":"motion moire experiment 2(sample specific pixel on mouse position and render left side of screen)","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["illusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n   \nfragColor = texture(iChannel0,fragCoord/iResolution.xy);\n    \n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// mouse position are active only when clicked down(and position you released are stored)\n\n\nfloat PI=3.141595;\nfloat speed =3.141*4.0;\nfloat size = 300.0;\nfloat border_dense = 0.1;\nint polygon_num = 5;\n\nfloat polygon(vec2 p, int n, float size){\n\tfloat a = atan(p.x, p.y) + PI;\n    float nf = float(n);\n\tfloat r = 2.0 * PI / nf;\n\treturn cos(floor(0.5 + a / r) * r - a) * length(p) - size; \n}\n\nfloat border(vec2 p,float rot){\n    mat2 m = mat2(cos(rot), -sin(rot), sin(rot), cos(rot));\n   \t\n    vec2 rotp = m*(p-iResolution.xy/2.0)+iResolution.xy/2.0;\n\treturn step(0.0,cos(rotp.x*border_dense) *2.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //mouse\n    vec2 m = iMouse.xy / iResolution.xy;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //frame buffer\n    // Time varying pixel color\n    float penta = polygon(fragCoord.xy-iResolution.xy/2.0,polygon_num,size);\n    float metermask = step(0.2,uv.x);\n    float metermask_inv = 1.0-metermask;\n\n   \n   \tfloat mask = 1.0 - max(0.0,min(penta,1.0));\n    float bod = border(fragCoord.xy,iTime*speed);\n    \n    vec4 sampledval = texture(iChannel0, iMouse.xy/iResolution.xy);\n    float meter = metermask_inv*sampledval.r;\n    float col = (1.0-mask*bod)*metermask + meter*metermask_inv; \n    vec4 myout = vec4(vec3(col),1.0);\n    // Output to screen\n    fragColor = myout;\n}","name":"Buf A","description":"","type":"buffer"}]}