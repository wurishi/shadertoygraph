{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Bruno Gohier - 09-02-2014\n\n// layers\nconst float layers=25.;\n\n// uv focus\nvec2 center = vec2(0.);\nvec2 size = vec2(.32,.965);\n\n// test\nconst vec3 mag = vec3(1.,0.,1.);\nvec3 test = mag;\n\n// apect ratio\nfloat ar = 1.0;\n\n// coord change\nvoid to01(inout vec2 v){v = v*.5+.5;}\nvoid to11(inout vec2 v){v = v*2.-1.;}\nvec2 ret11(vec2 v){ to11(v); return v; }\nvoid toSquare(inout vec2 v){ v.x -= .5*(1.-1./ar);  v.x *= ar; }\n\n// rotate texcoords\nvoid spin(inout vec2 v, float s, float o)\n{\n\tfloat t = sin(iTime * s + o);\n\tfloat ct = cos(t);\n\tfloat st = sin(t);\n\tmat2 m = mat2(ct,st,-st,ct);\n\tv = m*v;\n}\n\n// create layer\nvoid addLayer(inout vec4 c,float d,vec2 uv,float s,float o,float i)\n{\n\t// wave uvs around\n\tvec2 st = uv-vec2(0.,d);\n\ttoSquare(st);\n\tto11(st);\n\tspin(st,s,o);\n\tst *= size;\n\tst+=center;\n\t\n\t// cats\n\tvec4 t = texture(iChannel0,st);\n\t\n\t// set white as tranparent\n\tfloat ta = step(dot(t.rgb,vec3(.3,.59,.21)),.9);\n\tta *= (i+1.)/layers;\n\tfloat aa = exp(ta)-1.;\n\tfloat mixer = clamp(aa,0.,1.);\t\n\t\n\t// smoke\n\tvec4 t2=texture(iChannel1,uv+vec2(0.,.5*iTime));\n\tfloat t2a = dot(t2.rgb,vec3(.3,.59,.21));\n\tt2a += i/layers;\n\t\n\t// change hue\n\tvec3 hue = mix(vec3(1.,1.,0.),vec3(1,.0,0.),4.*(layers-i)/layers);\n\tt.rgb *= hue;\n\t\n\t// burn\n\tc.rgb *= (i/layers)*vec3(1.);\n\tc.rgb = mix(c,t,mixer).rgb;\n\t\n\t// accumulative alpha\n\tc.a = clamp(t2a*(c.a + ta),0.,1.5);\n}\n\t\n// main\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    center = vec2(.5) - .2*sin(iTime);\n\tar = iResolution.x/iResolution.y;\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.y = 1. - uv.y;\n\t\n\t// out color\n\tvec4 c = vec4(0.);\n\t\n\t// create layers\n\tfor(float i=0.;i<layers;i+=1.)\n\t\taddLayer(c,0.,uv,2.,i*.15,i);\n\t\n\t// heat shimmers\n\tvec4 t2=texture(iChannel2,uv+vec2(0.,.5*iTime));\n\tfloat t2a = dot(t2.rgb,vec3(.3,59.,21));\n\tvec2 hs = vec2(t2a*.002,0.);\n\tvec4 t3=texture(iChannel2,uv+hs);\n\t\n\t// blend background\n\tc.rgb = mix(t3,c,c.a).rgb;\n\tc = clamp(c,0.,1.);\n\t\n\t// vignette\n\tc.r += .5*dot(uv-vec2(.5),uv-vec2(.5));\n\t\n\tfragColor = c;\n\t\n\t//===============\n\t\n\tif(test != mag)\n\t\tfragColor = vec4(test,1.);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sSGRt","date":"1391998068","viewed":1078,"name":"Burning the cat!","username":"BGC","description":"First input here, love the tool! Comon kitty light my fire.. just trying to set the cat on fire..","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["fire","layers"],"hasliked":0,"parentid":"","parentname":""}}