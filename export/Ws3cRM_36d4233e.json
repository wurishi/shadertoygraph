{"ver":"0.1","info":{"id":"Ws3cRM","date":"1600592277","viewed":167,"name":"22 y/0 drk as fuck. post party.","username":"antoinefortin","description":"Un shader fait sur le party. this is shit","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["party"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void SetPixel(int x, int y, \n              inout vec3 col, \n              vec2 frag, \n              vec3 pixelColor\n)\n{\n\tfloat px = float(x) + .5;\n    float py = float(y) + .5;\n    \n    if(px == frag.x && py == frag.y)\n    {\n    \tcol = pixelColor;\n    }\n}\n\nvoid drawSquare(vec2 pos, int size, inout vec3 col, vec2 frag, vec3 sC)\n{\n\n    for(int i=0; i < size; i++)\n    {\n        for(int j =0; j < size; j++)\n        {\n        \tSetPixel(int(pos.x) + i, int(pos.y) + j, col, frag, sC);\t\n        }\n    \t\n    }\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    // Time varying pixel color\n    vec3 col = vec3(0.0, 0.0,0.0);\n\t\n    SetPixel(10, 10, col, fragCoord, vec3(0., 0., 1.0));\n    \n    \n    for(int i = 0; i < 25; i++)\n    {\n    \n    \n   \t\tdrawSquare(vec2(400.0 + float(10. * float(i) * sin(iTime * 2.)), \n                        250.0 + float(10. * float(i) * cos(iTime * 6.))), 2, col, fragCoord, vec3(1.0, 0.0, 0.0));\n        \n        drawSquare(vec2(400.0 + float(8. * float(i) * cos(iTime * 5.)), \n                        250.0 + float(10. * float(i) * sin(iTime * 8.))), 2, col, fragCoord, vec3(1.0, .6, 0.0));\n        \n        \n        for(int j = 0; j < 10; j++ )\n        {\n        \n        \n        drawSquare(vec2(400.0 + float(.5 * float(j + i * -i * -j) * sin(iTime * 1.)), \n                        250.0 + float(10. * float(i + j) * sin(iTime * 2.))), 5, col, fragCoord, \n                   vec3(sin(iTime), cos(iTime), 0.8)); drawSquare(vec2(400.0 + float(8. * float(j * i) * sin(iTime * 1.)), \n                        150.0 + float(10. * float(i - j) * cos(iTime * 2.))), 2, col, fragCoord, \n                   vec3(cos(iTime), atan(iTime * .06), abs(1. * sin(iTime))));\n            \n                   \n        drawSquare(vec2(400.0 + float(1.5 * float(j - i * i * -j) * cos(iTime * 1.)), \n                        250.0 + float(10. * float(i - j) * sin(iTime * 2.))), 5, col, fragCoord, \n                   vec3(-cos(iTime), cos(iTime), 12.8)); drawSquare(vec2(400.0 + float(23. * float(j * i) * sin(iTime * 1.)), \n                        150.0 + float(2. * float(i * j) * sin(iTime * 2.))), 2, col, fragCoord, \n                   vec3(cos(iTime), cos(iTime * .06), abs(1. * sin(iTime)))); \n            \n    \t}\n    \n    }\n    drawSquare(vec2(400., 225), 5, col, fragCoord, vec3(uv.xxx));\n\t\n    //SetPixel(int(iTime), int(iTime), col, fragCoord);\n   \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}