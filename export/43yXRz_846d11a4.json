{"ver":"0.1","info":{"id":"43yXRz","date":"1719818078","viewed":89,"name":"Dissolve Shader w/ Outlines CG","username":"Mirza","description":"Night programming dissolve shader prototype with edge warping, burn, and outlines.\nBased off FFX-2 opening menu credits dissolve.\n\n> https://x.com/TheMirzaBeig/status/1807700999970189645\n\n\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["burn","distort","warp","shader","edge","dissolve","unity","gamedev"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: Mirza Beig\n\n// https://x.com/TheMirzaBeig\n// https://www.youtube.com/@MirzaBeig\n\n// https://x.com/TheMirzaBeig/status/1807700999970189645\n\n// Feel free to use this however you want.\n// Modify, learn from it, copy-paste, etc...\n\n// Make sure to click the viewport and move your mouse left/right across the screen.\n\n// Expanded, plain-text version: https://www.shadertoy.com/view/lXdSDl\n\nvoid mainImage(out vec4 c, in vec2 f)\n{\n    vec2 uv = f / iResolution.xy, m = iMouse.xy / iResolution.xy;\n    vec2 nUV = uv * 0.5 - vec2(0.01, 0.02) * iTime;\n    \n    float n = texture(iChannel1, nUV).r, eB = 0.4, eD = 0.2, oW = 0.05, nc = mix(0.2, 0.4, m.x);\n    float bN = clamp(step(nc, n), 0.0, 1.0), bNO = clamp(bN - step(nc + oW, n), 0.0, 1.0);\n    \n    vec2 nG = vec2(texture(iChannel1, nUV + vec2(0.1, 0.0)).r - texture(iChannel1, nUV - vec2(0.1, 0.0)).r,\n                   texture(iChannel1, nUV + vec2(0.0, 0.1)).r - texture(iChannel1, nUV - vec2(0.0, 0.1)).r);\n                   \n    float eBM = 1.0 - smoothstep(nc + eB, 0.0, n), eDM = smoothstep(clamp(nc + eD, 0.0, 1.0), 0.0, n);\n    \n    vec4 tC = texture(iChannel0, uv - nG * eDM); tC.rgb *= eBM;    \n    vec3 oRGB = tC.rgb * (tC.a * bN), oC = vec3(1.0, 0.8, 0.0);\n    \n    c = vec4(mix(oRGB, oC, bNO), tC.a * bN);\n}\n","name":"Image","description":"","type":"image"}]}