{"ver":"0.1","info":{"id":"tdG3WR","date":"1569972943","viewed":149,"name":"Disco Raymarch","username":"jmdeejay","description":"Test de raymarching.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p)\n{\n\tvec3 q = fract(p) * 2.0 - 1.0;\n    return length(q) - 0.4;\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n\tfloat t = 0.0;\n    for(int i; i < 32; i++){\n    \tvec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n    float time = iTime * 0.25;\n    \n    vec3 o = vec3(0.0, time, time);\n    \n    vec3 r = normalize(vec3(uv, 1.0));\n    r.xz *= mat2(cos(time), -sin(time), sin(time), cos(time));\n    \n    float t = trace(o, r);\n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    vec3 fc = vec3(fog);\n    \n    vec3 col = 0.5 + 0.5 * cos(time + uv.xyx + vec3(0, 2, 4));\n    \n    // Output to screen\n    fragColor = vec4(fc * col, 1.0);\n}","name":"Image","description":"","type":"image"}]}