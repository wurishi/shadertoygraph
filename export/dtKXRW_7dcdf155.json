{"ver":"0.1","info":{"id":"dtKXRW","date":"1685979044","viewed":56,"name":"ss 6/5/23","username":"swindesr","description":" ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","distortion","colorful","sphere","loop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159;\nconst float TWO_PI = 6.28318;\n\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.821,0.328,0.242);\n    vec3 b = vec3(0.659,0.481,0.896);\n    vec3 c = vec3(0.612,0.340,0.296);\n    vec3 d = vec3(2.820,3.026,-0.273);\n    return a + b*cos(TWO_PI*(c*t+d));\n}\n\nfloat pulse(float frequency, float off) {\n    return 0.5*(1.0+sin(TWO_PI * frequency * iTime + off));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 finalColor = vec3(0.0, 0.0, 0.0);    \n    float len = length(uv);\n    float angle = atan(uv.x, uv.y);\n     \n    for (float i = 0.0; i < 5.0; i++)\n    {\n        vec3 col = palette(iTime * 0.3 + i * .2);\n        float size = (sin(iTime + i) + 1.3);\n        float d = len - (0.4 * size) + sin((iTime + angle) * (i + 3.)) * 0.03;\n\n        d = d > 0.0 ? smoothstep(0.005, 0., d) : exp(-10.0*abs(d));\n        d *= pow(d, 1.6) * (1. / size) * 0.8;\n        \n        finalColor += col * d;\n    }\n    \n    \n\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}