{"ver":"0.1","info":{"id":"Wtjfzm","date":"1605357331","viewed":146,"name":" Colorful truchet by MareeBree","username":"mareebree","description":" Colorful truchet","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(x,y,z) smoothstep(x,y,z)\n#define PI (3.1415)\n#define PIH (PI/2.0)\n\n// https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\n// All components are in the range [0â€¦1], including hue.\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 rotate(vec2 uv, float angle)\n{\n    uv -= 0.5;\n    mat2 mat = mat2(vec2(cos(angle), sin(angle)),vec2(-sin(angle), cos(angle)));\n    return mat*uv + 0.5;\n}\n\nvec3 sphere_uv(vec2 uv, float time)\n{\n    \n    uv = rotate(uv,0.2*sin(iTime));\n    \n    float factor = 1.3+0.5*sin(iTime);\n    float dist = factor*sqrt(abs(1.0-dot(0.3*factor*uv,uv)));\n    return vec3(time + uv*exp(dist),0.05 + dist*0.95);\n}\n\nfloat tileMask(vec2 uv, vec2 id)\n{\n    float r = rand(id);\n    \n    r = mod(floor(r*10.0),2.0);\n    uv = rotate(uv,PIH*r);\n    \n    float lr = 0.545; // Line radius\n   \tfloat lt = 0.1; // Line thickness\n    float lb = 0.01; // line burr\n    \n    float d = length(uv-vec2(0.0,1.0));\n    float m = S(lr+lb,lr,d);\n    m -= S(lr-lt+lb,lr-lt,d);\n    m = clamp(m,0.0,1.0);\n  \td = length(uv-vec2(1.0,0.0));\n    m += S(lr+lb,lr,d);\n    m -= S(lr-lt+lb,lr-lt,d);\n    m = clamp(m,0.0,1.0);\n    \n    return m;\n}\n\nvec4 mn(in vec2 fragCoord )\n{\n    vec2 uv = 2.0*fragCoord/iResolution.xy-1.0;\n    uv.x *= (iResolution.x / iResolution.y);\n    \n    vec2 suv = uv; // screen uv\n    \n    vec3 sphereRet = sphere_uv(uv,iTime/8.0);\n    uv = sphereRet.xy;\n    float aaFade = sphereRet.z; // Anti aliasing fade\n    \n    uv *= 5.0;\n    vec2 id = floor(uv);\n    uv = fract(uv);\n    \n    vec3 trailColorHSV = vec3(0.4*suv.x*suv.y + (1.0+sin(iTime))/2.0,0.8,0.7);\n    \n    vec3 col = vec3(tileMask(uv,id)) * hsv2rgb(trailColorHSV) * aaFade;\n    \n    return vec4(col,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.);\n\tint a = 4;\n    for(int i1 = 0;i1<a;i1++){\n    \tfor(int i2 = 0;i2<a;i2++){\n    \t\tfragColor += mn(fragCoord+vec2(float(i1),float(i2))/(float(a)));\n    \t}\n    }\n    fragColor /= float(a*a);\n}","name":"Image","description":"","type":"image"}]}