{"ver":"0.1","info":{"id":"fd3fWX","date":"1657530756","viewed":115,"name":"Shad13 - Circle Gamer Aliexpres","username":"pepe","description":"Shad13 - Circulo Gaming Extreme","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shad13circulogamingextreme"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define PI_2 6.2831\n#define hsl2rgb(c) clamp( abs(mod(c.x*6.+vec3(0,4,2),6.)-3.)-1., 0., 1. )\nvec3 rgb2hsv(float r, float g, float b) {\n\n     float h = 0.0;\n     float s = 0.0;\n     float v = 0.0;\n\n     float min = min( min(r, g), b );\n     float max = max( max(r, g), b );\n     v = max;               // v\n\n     float delta = max - min;\n\n     if( max != 0.0 )\n         s = delta / max;       // s\n     else {\n         // r = g = b = 0       // s = 0, v is undefined\n         s = 0.0;\n         h = -1.0;\n         return vec3(h, s, v);\n     }\n     if( r == max )\n         h = ( g - b ) / delta;     // between yellow & magenta\n     else if( g == max )\n         h = 2.0 + ( b - r ) / delta;   // between cyan & yellow\n     else\n         h = 4.0 + ( r - g ) / delta;   // between magenta & cyan\n\n     h = h * 60.0;              // degrees\n\n     if( h < 0.0 )\n         h += 360.0;\n\n     return vec3(h, s, v);\n }\n\nvec3 HueShift (in vec3 Color, in float Shift)\n{\n    vec3 P = vec3(0.55735)*dot(vec3(0.55735),Color);\n    \n    vec3 U = Color-P;\n    \n    vec3 V = cross(vec3(0.55735),U);    \n\n    Color = U*cos(Shift*6.2832) + V*sin(Shift*6.2832) + P;\n    \n    return vec3(Color);\n}\n\n\n\nvec3 grid(vec2 p) {\n    vec3 col = vec3(0.);\n    \n    col.g = step(abs(p.x), .01);\n    col.r = step(abs(p.y), .01);\n    \n    vec2 q = p;\n    q.x = fract(10. * q.x);\n    col += .2*vec3(step(abs(q.x), 0.05));\n    \n    q = p;\n    q.y = fract(10. * q.y);\n    col += .2*vec3(step(abs(q.y), 0.05));\n    \n    return col;\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    fragCoord+=0.3;\n    \n    vec2 p = (2.0*fragCoord - iResolution.xy) / iResolution.y;\n    \n    float xDisplacement = 0.0;\n    //xDisplacement = (sin(iTime*1.5));;\n    float yDisplacement = +0.0;\n    \n    p+=vec2(xDisplacement, yDisplacement);\n    \n    float CircleSize  = 0.51;\n    float CircleRadius  = 0.005;\n    float CircleResult;\n    CircleResult = smoothstep( 3./iResolution.y, 0., abs( length(p) - CircleSize ) -CircleRadius );\n    \n \n    vec3 col = vec3(0.0);    \n    vec2 Originalp = p;\n    \n    float rotDegrees = (iTime*1.5)-0.12;\n    rotDegrees = 0.;\n    mat2 R =mat2(cos(rotDegrees), -sin(rotDegrees),\n                sin(rotDegrees), cos(rotDegrees));\n                \n     p = R*Originalp;\n     xDisplacement = 0.025;\n     yDisplacement = 0.025;\n     p+=vec2(xDisplacement, yDisplacement);\n     \n\n    //col += CircleResult;\n    \n        //float pixel_angle = atan(p.x,p.y) ;\n        //float pixel_distance =  length(p)* 2.0 ;\n        //col = hsl2rgb(vec3(pixel_angle/ PI_2,1.0,.5)) * CircleResult;\n    //col+= grid(p);\n    \n    //col= vec3(step(abs(length(p)*1.-0.5)));\n    \n    \n    rotDegrees = (iTime*1.2)-0.12+0.003*rand(p);\n    R =mat2(cos(rotDegrees), -sin(rotDegrees),\n                sin(rotDegrees), cos(rotDegrees));\n    p = R*Originalp;\n    xDisplacement = (CircleSize);\n    p+=vec2(xDisplacement, yDisplacement);\n    //col+= grid(p);\n    \n    float glowSize = 0.075;\n    float glow = 1.-(length(p)/glowSize);\n    glow = max(glow, 0.0);\n    \n    float maxSize = 1./length(p)*0.001*(1.+abs(sin(iTime*1.7)));\n    CircleResult = smoothstep( maxSize, 0., abs( length(Originalp) - CircleSize ) -CircleRadius );\n    col += CircleResult;\n    \n    float pixel_angle = atan(Originalp.x,Originalp.y) ;\n    float pixel_distance =  length(Originalp)* 2.0 ;\n    col *= hsl2rgb(vec3(pixel_angle/ PI_2,1.0,.5));\n    \n    //col +=1./length(p)*0.1*(1.+abs(sin(iTime*1.7)));\n    \n    //col+= glow*hsl2rgb(vec3(pixel_angle/ PI_2,1.0,.5));\n    \n    fragColor = vec4(col,1.0);\n    \n    \n}\n\n\n","name":"Image","description":"","type":"image"}]}