{"ver":"0.1","info":{"id":"DdSyWm","date":"1687749539","viewed":27,"name":"Map Showcase","username":"boytoy","description":"a shader i made to show how to map inputs ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 col_right = vec3(1.0,0.0,0.0);\nconst vec3 col_up    = vec3(0.0,1.0,0.0);\nconst vec3 col_left  = vec3(0.0,0.0,1.0);\nconst vec3 col_down  = vec3(1.0,1.0,1.0);\n\nconst vec2 right = vec2(1.,0.);\nconst vec2 up    = vec2(0.,1.);\nconst vec2 left  = vec2(-1.,0.);\nconst vec2 down  = vec2(0.,-1.);\n\n\nvec3 map(vec2 dir){ // map vec2 into values\n    if(dot(dir,right)>0.1){return col_right;}\n    if(dot(dir,left )>0.1){return col_left ;}\n    if(dot(dir,up)>0.1){return col_up;}      \n    if(dot(dir,down)>0.1){return col_down;}\n    \n    \n    return vec3(0.);\n}\n\nvec3 nearest_neighbor_map(vec2 dir){\n     if(length(dir)>0.1){\n     \n     \n     float dist1 = length(dir-right);\n     float dist2 = length(dir-up);\n     float dist3 = length(dir-left);\n     float dist4 = length(dir-down);\n     \n     float mdist = min(min(dist1,dist2),min(dist3,dist4));\n     \n     if(dist1 <= mdist) return col_right;\n     if(dist2 <= mdist) return col_up;\n     if(dist3 <= mdist) return col_left;\n     if(dist4 <= mdist) return col_down;\n     \n     }\n\n     return vec3(0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // [-1,1]Ã—[-1,1]\n    vec2 uv = fragCoord/iResolution.xy;\n    uv*=2.;\n    uv-=1.;\n    uv.x*= iResolution.x/iResolution.y;\n    \n\n    // Output to screen\n    //fragColor = vec4(map(uv),1.0);\n    \n    fragColor = vec4(nearest_neighbor_map(uv),1.);\n}","name":"Image","description":"","type":"image"}]}