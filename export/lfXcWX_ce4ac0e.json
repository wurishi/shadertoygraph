{"ver":"0.1","info":{"id":"lfXcWX","date":"1721664276","viewed":45,"name":"Monte Carlo test","username":"OneManBand","description":"Playing with [url]http://www.cs.cmu.edu/~kmcrane/Projects/MonteCarloGeometryProcessing/paper.pdf[/url]. Used contour lines from [url]https://www.shadertoy.com/view/XdKGDW[/url]","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["2d","montecarlo","pde"],"hasliked":0,"parentid":"WdXfzl","parentname":"Montecarlo PDE (2)"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Playing with Keenan Crane's latest paper in collab with\n// Rohan Sawhney: http://www.cs.cmu.edu/~kmcrane/Projects/MonteCarloGeometryProcessing/paper.pdf[/url]\n//\n// Used contour lines from https://www.shadertoy.com/view/XdKGDW\n//\n// See https://www.shadertoy.com/view/WsXBzl for a simpler example\n//\n// Change the define in line 397 of \"Buffer A\" in order to see the\n// actual color contour curves.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 data = texelFetch(iChannel0,ivec2(fragCoord),0);\n    vec3 color = data.rgb / data.w;\n    color = pow(color, vec3(1.0/2.2));\n    fragColor = vec4(color, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// image contour SDF\nvec4 map( in vec2 pos )\n{ \n  float radius = 0.5;\n  float left_sdf = length(pos - vec2(-radius / 2.0, 0.0)) - radius;\n  float right_sdf = length(pos - vec2(radius / 2.0, 0.0)) - radius;\n  \n  float sdf = left_sdf;\n  vec3 color = vec3(1.0, 1.0, 1.0);\n  if (right_sdf < left_sdf) {\n      color = vec3(0.0, 0.0, 0.0);\n      sdf = right_sdf;\n  }\n  return vec4(color, sdf);\n}\n\nint   seed = 1;\nint   rand(void) { seed = seed*0x343fd+0x269ec3; return (seed>>16)&32767; }\nfloat frand(void) { return float(rand())/32767.0; }\nvoid  srand( ivec2 p, int frame )\n{\n    int n = frame;\n    n = (n<<13)^n; n=n*(n*n*15731+789221)+1376312589; // by Hugo Elias\n    n += p.y;\n    n = (n<<13)^n; n=n*(n*n*15731+789221)+1376312589;\n    n += p.x;\n    n = (n<<13)^n; n=n*(n*n*15731+789221)+1376312589;\n    seed = n;\n}\n\n// --------------------------------------\n\nvec2 randomInCircle( void )\n{\n    float an = 6.283185*float(rand())/32767.0;\n    return vec2(cos(an),sin(an));\n}\n\n// WoS\nvec3 march( in vec2 p )\n{\n    vec4 h = vec4(0.0);\n\tfor( int i=0; i<24; i++ )\n    {\n        h = map(p);\n        if( h.a<0.001 ) break;\n        p = p + h.a * randomInCircle();\n    }\n    return h.rgb;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// init randoms\n    srand( ivec2(fragCoord), iFrame );\n    \n\t// coords\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n#if 1\n    // solve\n    vec3 col = march(p);\n#else\n    // display SDF (reset shader after enabling this)\n    vec4 dist_col = map(p);\n    vec3 col = dist_col.rgb * smoothstep(0.01,0.0,abs(dist_col.a));\n#endif\n    \n    // montecarlo\n    vec4 data = texelFetch(iChannel0,ivec2(fragCoord),0);\n    \n    if(iMouse.z > 0.0) {\n        // Hold left-click to accumulate\n        fragColor = data + vec4(col,1.0);\n    } else {\n        // 1 spp\n        fragColor = vec4(col,1.0);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}