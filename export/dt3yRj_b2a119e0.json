{"ver":"0.1","info":{"id":"dt3yRj","date":"1699399529","viewed":27,"name":"Daily shader 07-11-23","username":"SVWDesigner","description":"Noisy","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.-1.;\n    vec2 uvn = uv;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    uv = fract(uv*2.0)-0.5;\n    uv = fract(uv*2.0)-0.5;\n    uv = fract(uv*2.0)-0.5;\n    uv = fract(uv*2.0)-0.5;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.2, 0.05, smoothstep(0.1,0.8,0.5+0.5*sin(length(uv+uvn)+iTime*3.5)));\n    vec3 acol = -col;\n    acol +=1.;\n    col = abs(0.3*sin(col+iTime*0.3)+0.3*sin(acol+iTime*1.7))+col*0.4;\n\n    \n    if (length(col)>=1.09)\n    {\n    col *= 0.;\n    col.x = sin(iTime*uvn.x*uv.x*1000000.);\n    col.y = sin(iTime*uvn.y*uv.y*1000110.);\n    col.z = sin(iTime*uvn.x*uv.y*1110000.);\n    }\n    if (length(col)>=1.15)\n    {\n    col *= 0.;\n    col.x = sin(iTime*uvn.y*uv.y*1001101.);\n    col.y = sin(iTime*uvn.y*uv.x*1111110.);\n    col.z = sin(iTime*uvn.x*uv.x*1110101.);\n    }\n    \n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}