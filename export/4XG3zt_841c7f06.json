{"ver":"0.1","info":{"id":"4XG3zt","date":"1718040319","viewed":70,"name":"BH field","username":"graygoose","description":"Let it evolve, then click, or click and hold.\n\nClick after FS to reset. If anyone understands the nature of these buffer corruption bugs related to texture/texelFetching and maybe normalization on surface resize...That would be great.","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["field","physics","laplacian","complexfunction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define colorize toColor\n\nvoid mainImage(out vec4 O, in vec2 U)\n{O=colorize(texture(iChannel0, U.xy/iResolution.xy));}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define K .25\n\nvoid mainImage(out vec4 Q, in vec2 U) {\n    if (iFrame == 0 || iMouse.z > 0.0) { \n        vec2 uv = U.xy / iResolution.xy * 5., cell = floor(uv);\n        if (mod(cell.x + cell.y, 2.0) < 1.0) Q.xyzw = IV.xyxy; else Q.xyzw = IV.yxyx;\n    } else {\n        vec4 W = texture(iChannel0, U/iResolution.xy),\n        L = lap(W, U, iChannel0, iResolution.xy);\n        W.xy += K * W.zw + L.xy;\n        W.zw += K * W.xy + L.zw;\n        Q = normalize(W);\n    }\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define IV vec2(.0,1.)\n\n\nvec4 lap(inout vec4 wave, in vec2 p, in sampler2D t, in vec2 r) {\n    return -4.0 * wave + \n    texture(t, mod(p + vec2(1.,0.),r)/r) +\n    texture(t, mod(p - vec2(1.,0.),r)/r) +\n    texture(t, mod(p + vec2(0.,1.),r)/r) +\n    texture(t, mod(p - vec2(0.,1.),r)/r);\n}\n\n\n// Colorizers\nvec4 toColor(in vec4 wave) {\n    float red = wave.x * 0.5 + 0.5;  \n    float green = wave.y * 0.5 + 0.5;\n\n    float blue = wave.z * 0.5 + 0.5; \n    float brightness = wave.w * 0.5 + 0.5;\n\n    vec3 color = vec3(red, green, blue) * brightness;\n\n    color = clamp(color, 0.0, 1.0);\n\n    return vec4(color, 1.0);\n}\n\nvec4 toBH(in vec4 wave) {\n    float red = length(wave.xy) * 0.5 + 0.5; \n    float green = length(wave.zw) * 0.5 + 0.5;\n\n    float blue = (red + green) * 0.5;\n    float brightness = 1.0;\n\n    vec3 color = vec3(red, green, blue) * brightness;\n\n    color = clamp(color, 0.0, 1.0);\n\n    return vec4(color, 1.0);\n}\n\n\n","name":"Common","description":"","type":"common"}]}