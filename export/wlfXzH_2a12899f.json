{"ver":"0.1","info":{"id":"wlfXzH","date":"1562055411","viewed":176,"name":"Practice - Space Travel","username":"ReavenTehDerg","description":"Playing around with a band creating function made by Kyle273's","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["texture","vignette","rotation","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float N21(vec2 p)\n{\n    p = fract(p * vec2(8356.655414, 645.8778));\n    p += dot(p, p + 72.724);\n    return fract(p.x * p.y);\n}\nvec2 N22(vec2 p)\n{\n    float x = N21(p);\n    float y = N21(p + x);\n    return vec2(x, y);\n}\nfloat circleMask(vec2 uv, float radius)\n{\n    float vL = length(uv);\n    float circle = smoothstep(radius, radius - 0.04, vL);\n    return circle;\n}\nvec2 GetPos(vec2 id)\n{\n    vec2 n = N22(id) * iTime * 0.6;\n    return sin(n) * .4;\n}\nfloat map(float value, float fromSource, float toSource, float fromTarget, float toTarget)\n{\n    return (value - fromSource) / (toSource - fromSource) * (toTarget - fromTarget) + fromTarget;\n}\nfloat Shines(vec2 uv, float size)\n{\n    uv *= size;\n    uv.y -= iTime * 0.2;\n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    float shineRate = map(abs(sin(iTime * N21(id))), -1.0, 1.0, 0.06, 0.2);\n    vec2 p = GetPos(id);\n    float d = length(gv - p);\n    float m = smoothstep(0.1, 0.03, d) * shineRate;\n    return m * 1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float shine = Shines(uv, 4.0);\n    float posShine = 0.0;\n    for(float i = 0.0; i <= 10.0; i += 0.5, posShine += 2.0)\n    {\n    \tshine += Shines(uv + posShine, i);\n\n    }\n    \n\n    \n   \n    uv *=  1.0 - uv.yx;    \n    float vig = uv.x*uv.y * 15.0;    \n    vig = pow(vig, 0.25);\n    \n\tuv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n\n    float t = iTime * 0.8;\n    \n    float s = sin(t);\n    float c = cos(t);\n    \n    mat2 rotmat = mat2(c, -s, s, c);\n                  \n    uv *= rotmat;\n\n    float angle = atan(uv.y,uv.x);\n    vec4 tex = texture(iChannel0, vec2(angle, dot(uv.x, uv.y) + fract(t * 0.3)));\n    vec4 tex2 = texture(iChannel1, vec2(angle, dot(uv.x, uv.y) - fract(t * 0.1)));\n    \n    vec4 col = vec4(0);\n    \n    //Kyle273's band function\n    float band = pow(sin(angle * 2.0) * 0.5 + 0.5, 5.0) * 3.0;\n    col += tex * band;\n    \n    angle += 1.5;\n    band = pow(sin(angle * 2.0) * 0.5 + 0.5, 1.0);\n    col += tex2 * band;\n    \n\t\n    \n    fragColor = shine + col * vig;\n    \n}","name":"Image","description":"","type":"image"}]}