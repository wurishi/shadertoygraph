{"ver":"0.1","info":{"id":"7dGyRG","date":"1655043357","viewed":108,"name":"2D Shapes with Mixing","username":"batuhandev","description":"Multiple 2D Shapes and Mixing","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","background"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 getBackgroundColor(vec2 uv) {\n    uv += 0.5; // remap uv from <-0.5,0.5> to <0,1>\n    vec3 gradientStartColor = vec3(1., 0., 1.);\n    vec3 gradientEndColor = vec3(0., 1., 1.);\n    return mix(gradientStartColor, gradientEndColor, uv.y); // gradient goes from bottom to top\n}\n\nfloat sdfCircle(vec2 uv, float r, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n  \n  return length(vec2(x, y)) - r;\n}\n\nfloat sdfSquare(vec2 uv, float size, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n  return max(abs(x), abs(y)) - size;\n}\n\nvec3 drawScene(vec2 uv) {\n  vec3 col = getBackgroundColor(uv);\n  float circle = sdfCircle(uv, 0.1, vec2(0, 0));\n  float square = sdfSquare(uv, 0.07, vec2(0.1, 0));\n  \n  col = mix(vec3(0, 0, 1), col, step(0., circle));\n  col = mix(vec3(1, 0, 0), col, step(0., square));\n  \n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy; // <0, 1>\n  uv -= 0.5; // <-0.5,0.5>\n  uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n\n  vec3 col = drawScene(uv);\n\n  // Output to screen\n  fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}