{"ver":"0.1","info":{"id":"mtVGRy","date":"1684236240","viewed":550,"name":"ECKER_O_ reproduction[437 chars]","username":"kishimisu","description":"Trying to reproduce https://twitter.com/ecker_o/status/1657078396860473346","likes":43,"published":3,"flags":32,"usePreview":0,"tags":["2d","sdf","code","shape","morphing","short","golf","golfing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Trying to reproduce https://twitter.com/ecker_o/status/1657078396860473346\n   originally made by @ecker_o\n   \n   [reduced from 441 to 423 chars in the comments]\n\n   It only looks nice on a smooth framerate with no frame drop!\n*/\n\nA (vec4(9,9,8,0) - Q * vec4(9,8,7,0)) * .1; }","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define A void mainImage(out vec4 O, vec2 u) { O =//\n#define R iResolution.xy//\n#define Q texture(iChannel0, u/R)//\n#define S smoothstep(0., ","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"A   Q;                                    // get previous color\n                           \n    float t = iTime,\n          s = 1. - S 5., t),                  // time control    \n          l = 1. - S 5., abs(t+t-5.)),        // time control (yo-yo)\n          r = .5 - l*.3;                   // radius\n    \n    u = (u+u-R)/R.y;                       // coordinates\n    u.x += s*1.6-.8;                       // translation\n    u *= mat2(cos(vec4(0,33,11,0) - l));   // rotation\n    \n    t = atan(u.y, u.x)/.1;                 // angle from origin\n        \n    // accumulate colors\n    O += S -l*.05-.03, \n            abs(\n                mix( // shape morphing\n                    length(u) - r, \n                    length(max(u = abs(u)-r, 0.)) + min(max(u.x,u.y), 0.), \n                    s\n                ) + .05 * sqrt(l) * (sin(t+l+l) + cos(t*2.3+s)) // noise\n            )-.01\n         );\n}","name":"Buffer A","description":"","type":"buffer"}]}