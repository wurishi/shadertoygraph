{"ver":"0.1","info":{"id":"4ssfzf","date":"1497309463","viewed":168,"name":"Radial UI","username":"eriwine","description":"A simple black and white percentage filled circle","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["radial","ui","360"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\nconst float circleWidth = 1.0;\nconst float center = 0.5;\n\nfloat percent = 0.75;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{       \n    //Position normalized into (0, 1)\n    vec2 position = fragCoord.xy/iResolution.xy;\n    \n    //Fix aspect ratio\n\tposition = vec2(((position.x-0.5)*(iResolution.x / iResolution.y))+0.5,position.y);\n    \n    // Position normalized into (-1, 0, 1)\n    vec2 d = 1.0 - (position * 2.0);\n    \n    // Distance from center\n    float dist = length(d);\n    \n    //Center\n    if (dist < center || dist > circleWidth)\n    {\n        fragColor = vec4(0.0,0.0,0.0,0.0);\n    }\n    else\n    {\n        float p = mix(0.0, PI, 1.0 - percent * 2.0);\n    \n        //Get rotation\n        float r = acos(d.x / dist);\n        \n        //Bottom half (y=-1)\n        if (d.y < 0.0) { r = PI-(r + PI); }\n        \n\t\t//Black or white - check r vs p\n        fragColor = vec4(step(p,r));\n    }\n}\n","name":"Image","description":"","type":"image"}]}