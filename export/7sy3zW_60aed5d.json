{"ver":"0.1","info":{"id":"7sy3zW","date":"1631169270","viewed":119,"name":"my Flag","username":"xlat","description":"very simple","likes":2,"published":1,"flags":64,"usePreview":0,"tags":["fragmentshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4lsSDj","filepath":"https://soundcloud.com/asphyxiaa/self-deception","previewfilepath":"https://soundcloud.com/asphyxiaa/self-deception","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///----------------------------------------------------------------------------|\n/// XLAT\n/// www.cyberforum.ru\n///----------------------------------------------------------------------------:\n\nconst vec4  WHITE   = vec4(0.9, 0.9, 0.9, 1.);\nconst vec4  BLUE    = vec4(0.0, 0.0, 0.6, 1.);\nconst vec4  RED     = vec4(0.6, 0. , 0. , 1.);\nconst vec4  BGROUND = vec4(0.0, 0.0, 0.2, 1.);\nconst vec4  YELLOW  = vec4(0.0, 0.0, 0.0, 1.);\n\nvec4 tonsinx(float minn, float maxx, float a)\n{   a = a - minn;\n    float x =  3.14 / (maxx - minn);\n    float c = 0.6  * sin(a * x);\n    return vec4(c, c, 0., 1.);\n}\n\nvec4 tonsiny(float minn, float maxx, float a)\n{   a = a - minn;\n    float x2 = 1.57 / (maxx - minn);\n    float c  = 0.3  * cos(a * x2);\n    return vec4(c, c, c, 1.);\n}\n\nvec4 getColor(vec2 pos, float a)\n{   \n    float x  = pos.x;\n    float y  = pos.y;\n    \n    if(0.08 < x && x < 0.12 && 0.05 < y)\n    {   return YELLOW + tonsinx(0.08, 0.12, x) + tonsiny(0.05, 0.7, y);\n    }\n    \n    vec4 color;\n\n    if(0.1 > x  || x > 0.9 || 0.1 > y || y > 0.7)\n    {\n        a = (sin(3.28 * y + 0.2*iTime)) * 0.2;            \n        return BGROUND + vec4(a, a, a, 0.);\n    }\n        color.r = a*2.2  ;\n        color.g = color.r;\n        color.b = color.r;\n        color.a = 0.0    ;\n    \n    if(0.3 > y) return WHITE + color;\n    if(0.5 > y) return BLUE  + color;\n                return RED   + color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float xx = iChannelResolution[0].x;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    float x = uv.x;\n    float y = 1. - uv.y;\n    \n    float a = (sin(6.28*x+3.*iTime)) * 0.1;\n    float b = (sin(3.28*y+3.*iTime)) * 0.1;\n    \n    vec2 pos = vec2(\n         x - 0.4*b * sin(1.57*x),\n         y +     a * sin(3.14*x) - 0.1*sin(1.57*x));\n\n    fragColor = getColor(pos, a);\n}","name":"Image","description":"","type":"image"}]}