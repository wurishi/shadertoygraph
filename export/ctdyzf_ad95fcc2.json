{"ver":"0.1","info":{"id":"ctdyzf","date":"1699541218","viewed":25,"name":"circle circle","username":"lbl","description":"circle circle","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circlecircle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nfloat PI = 3.14159;\n\nfloat circle(vec2 center,float r, float border,vec2 fragCoord,float time) {\n    float light = smoothstep(- border, -border + 4. , r  - length(fragCoord - center));\n    float cover = smoothstep(r - border - 4., r - border ,  length(fragCoord - center));\n    light *= cover;\n    vec2 a = fragCoord - center;\n    vec2 b = vec2(.0,1.);\n    if(time >.0) { \n        float angle = acos( dot(a,b) / (length(a) * length(b)) )   ;\n        if(a.x < .0) {\n            angle = 2.*PI - angle;\n        }\n        angle =  angle * 180. / PI + fract(time)*180.;\n        float n = floor(angle / 30.);\n        if(mod(n,2.) == 1.) { \n            float light2 =  smoothstep(0.,5.,angle - floor(angle / 30.) * 30.);\n            float light3 =  smoothstep(0.,20.,  ceil(angle / 30.) * 30. - angle);\n            return light * light2 *light3; \n        }else {\n             return .0;\n        }   \n    }else {\n        return light;\n    }\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.yy;\n       \n    vec2 center = vec2(iResolution.x/2.,iResolution.y/2.);\n   \n    float light = circle(center,150.,10.,fragCoord,iTime); \n    fragColor = vec4(130./255.,81./255.,141./255.,1.) * (light ); \n   \n    \n}","name":"Image","description":"","type":"image"}]}