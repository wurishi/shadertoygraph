{"ver":"0.1","info":{"id":"XtdGD2","date":"1471721745","viewed":150,"name":"isinside() visualization","username":"ollj","description":"visualizing and analyzing a subroutine of \n//https://www.shadertoy.com/view/4s3GW2\njust because i wanted to know what exactly it does.\n\nspoiler: its just a special case of \"distance to square\" with bottom left vocorner as parameter.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["square","isinside"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//just visualizing a subroutine of \n//https://www.shadertoy.com/view/4s3GW2\n\n//isInside returns distance to a square \n//with center offset by offsetXY=.5;\n//and with HalfSizeXY=.5;\nfloat isInside(vec2 p){\n //p.x*=2.;//scaling to rectangle\n float offsetXY=.0;\n vec2 d=abs(p-offsetXY)-.5;\n return-max(d.x,d.y);}\n//offsetXY and HalfSizeXY could easily be the same input parameter.\n\n//scaling for IsInside() may be fster if it takes a mat2 as input.\n\nvoid mainImage( out vec4 r, in vec2 i ){\n\tvec2 p =i.xy/iResolution.xy;\n    p.y*=iResolution.y/iResolution.x;\n    p*=4.;\n\tr = vec4(p,0.5+0.5*sin(iTime),1.0);\n    vec2 m=iMouse.xy/iResolution.xy;\n    m.y*=iResolution.y/iResolution.x;\n    m*=4.;\n    //if(length(p.xy-m.xy)<.5){\n\n    float delta=0.0;//this shows that its a gradient.\n    if (isInside(p-m)>delta)r*=.25;//inside is darker\n    //else r*=2.;//is outside, make brighter \n    //}\n}","name":"Image","description":"","type":"image"}]}