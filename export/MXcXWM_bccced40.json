{"ver":"0.1","info":{"id":"MXcXWM","date":"1719115506","viewed":56,"name":" Mandelbulb Fractal","username":"valvw","description":"Mandelbulb Fractal with dynamic parameters","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbulb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 100\n#define BAILOUT 4.0\n\nfloat mandelbulb(vec3 p, float power) {\n    vec3 z = p;\n    float dr = 1.0;\n    float r = 0.0;\n    for (int i = 0; i < MAX_ITER; i++) {\n        r = length(z);\n        if (r > BAILOUT) break;\n        \n        // Convert to polar coordinates\n        float theta = acos(z.z / r);\n        float phi = atan(z.y, z.x);\n        dr = pow(r, power - 1.0) * power * dr + 1.0;\n        \n        // Scale and rotate the point\n        float zr = pow(r, power);\n        theta = theta * power;\n        phi = phi * power;\n        \n        // Convert back to cartesian coordinates\n        z = zr * vec3(sin(theta) * cos(phi), sin(phi) * sin(theta), cos(theta));\n        z += p;\n    }\n    return 0.5 * log(r) * r / dr;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Dynamic power parameter\n    float power = 8.0 + 4.0 * sin(iTime * 0.5);\n\n    vec3 camPos = vec3(2.0, 2.0, 2.0);\n    vec3 camDir = normalize(vec3(0.0) - camPos);\n    vec3 camUp = vec3(0.0, 1.0, 0.0);\n    vec3 camRight = cross(camDir, camUp);\n    \n    vec3 rayDir = normalize(camDir + uv.x * camRight + uv.y * camUp);\n    \n    vec3 p = camPos;\n    float totalDistance = 0.0;\n    float distance = 0.0;\n    int i;\n    for (i = 0; i < 256; i++) {\n        distance = mandelbulb(p, power);\n        totalDistance += distance;\n        p += distance * rayDir;\n        if (distance < 0.001 || totalDistance > 100.0) break;\n    }\n    \n    float intensity = float(i) / 256.0;\n    vec3 color = vec3(intensity);\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}