{"ver":"0.1","info":{"id":"7lf3RN","date":"1621617202","viewed":68,"name":"simple mandelbrot explorer","username":"auurora","description":"quick fractal viewer","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint MaxIter = 255u;\n\nvec3 Mandelbrot(vec2 uv) {\n    vec2 z = vec2(0.);\n    uint n = 0u;\n    while (length(z) < 2. && n < MaxIter) {\n        z = vec2(z.x*z.x - z.y*z.y + uv.x, 2. * z.x * z.y + uv.y);\n        n += 1u;\n    }\n    if (n == MaxIter) return vec3(0.);\n    float Itr = float(n)/float(MaxIter);\n    if (Itr < 0.3333) \n        return vec3(Itr*3.,0.,0.);\n    else if (Itr < 0.6666) \n        return vec3(1., (Itr-0.3333)*3., 0.);\n    else \n        return vec3(1., 1., (Itr-0.6666)*3.);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 mouseUv = iMouse.xy;\n    float t = pow(1.3,iTime);\n    float mul = max(2.5*(3./pow(1.3,45.)),2.5 * (3./t));\n    uv *= mul;\n    uv -= iMouse.xy/iResolution.y - vec2(0.5);\n    fragColor = vec4(Mandelbrot(uv), 1.);\n    \n}","name":"Image","description":"","type":"image"}]}