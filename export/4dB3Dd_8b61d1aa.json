{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float sigmoid(float val, float sharpness) {\n\tval = 1./(1. + exp(-1.*(sharpness)*(val - 0.5)));\n\tval = clamp(val, 0., 1.);\n\treturn val;\n}\n\nfloat sigsin(float val, float sharpness) {\n\tval = .5+.5*sin(val);\n\treturn sigmoid(val, sharpness)*2.-1.;\n}\n\nconst float qpi =.78539816;\nconst float switchTime = .5;\nconst float switchSharpness = 100.;\nconst float frequency = 12.;\nconst float speed = .001;\nconst float displacement = 10.;\nconst float displacementSharpness = 50.;\nconst float bwSharpness = 200.;\nconst float pulseLength = 4.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// these can all go in a vertex shader\n\tvec2 uv = fragCoord.xy / iResolution.y;\n\tvec2 center = vec2(-(iResolution.x / (2. * iResolution.y)), -.5);\n\tfloat angle = qpi+qpi*sigsin(iTime * switchTime, switchSharpness);\n\tfloat sawTime = 1.-(mod(iTime, pulseLength)/pulseLength);\n\tfloat direction = sigsin(iTime, displacementSharpness);\n\tdirection *= displacement;\n\t\n\t// have to stay in the fragment shder \n\tfloat brightness = .5+.5*sin(((sin(angle)*(uv.x+center.x)+cos(angle)*(uv.y+center.y)) + iTime * speed * direction) * frequency);\n\tbrightness = sigmoid(brightness, bwSharpness);\n\tbrightness *= sawTime;\n\tfragColor = vec4(vec3(brightness),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dB3Dd","date":"1394986912","viewed":227,"name":"Movings Bars","username":"kcimc","description":"Some animating moving lines.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grayscale","blackandwhite","minimal"],"hasliked":0,"parentid":"","parentname":""}}