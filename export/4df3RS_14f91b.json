{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// http://en.wikipedia.org/wiki/Sobel_operator\n\nmat3 gx = mat3(\n\t 1.0,  2.0,  1.0,\n\t 0.0,  0.0,  0.0,\n\t-1.0, -2.0, -1.0\n);\n\nmat3 gy = mat3(\n\t-1.0, 0.0, 1.0,\n\t-2.0, 0.0, 2.0,\n\t-1.0, 0.0, 1.0\n);\n\nvec3 edgeColor = vec3(1.0, 0.5, 0.75);\n\nfloat intensity(vec3 pixel) {\n\treturn (pixel.r + pixel.g + pixel.b) / 3.0;\n}\n\nfloat pixelIntensity(vec2 uv, vec2 d) {\n\tvec3 pix = texture(iChannel0, uv + d / iResolution.xy).rgb;\n\treturn intensity(pix);\n}\n\nfloat convolv(mat3 a, mat3 b) {\n\tfloat result = 0.0;\n\n\tfor (int i=0; i<3; i++) {\n\t\tfor (int j=0; j<3; j++) {\n\t\t\tresult += a[i][j] * b[i][j];\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfloat sobel(vec2 uv) {\n\tmat3 pixel = mat3(0.0);\n\n\tfor (int x=-1; x<2; x++) {\n\t\tfor (int y=-1; y<2; y++) {\n\t\t\tpixel[x+1][y+1] = pixelIntensity(uv, vec2(float(x), float(y)));\n\t\t}\n\t}\n\n\tfloat x = convolv(gx, pixel);\n\tfloat y = convolv(gy, pixel);\n\n\treturn sqrt(x * x + y * y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n\tfloat time = iTime * 0.75;\n\n\tfloat x = 0.5 + sin(time) * 0.25;\n\tfloat y = 0.5 + cos(time) * 0.25;\n\n\tvec3 color = texture(iChannel0, uv).rgb;\t\n\tfloat s = sobel(uv);\n\n\t// Top left\n\tif (uv.x < x && uv.y > y) {\n\t\t// original\n\t}\n\t// Bottom right\n\telse if (uv.x > x && uv.y < y) {\n\t\tcolor += edgeColor * s;\n\t}\n\t// Top right\n\telse if (uv.x > x && uv.y > y) {\n\t\tcolor = edgeColor * s;\n\t}\n\t// Bottom left\n\telse {\n\t\tcolor = edgeColor * (1.0 - s);\n\t}\n\t\n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4df3RS","date":"1372603066","viewed":690,"name":"Sobel Edge Detection","username":"Eitraz","description":"Sobel edge detection. Top left is original image, bottom right original with edge detection. Top right and bottom left edge detection only.","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["sobeledgedetection"],"hasliked":0,"parentid":"","parentname":""}}