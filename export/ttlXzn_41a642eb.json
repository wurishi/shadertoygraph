{"ver":"0.1","info":{"id":"ttlXzn","date":"1561908388","viewed":203,"name":"solar eclipse","username":"jn","description":"copy from http://glslsandbox.com/e#55359.0","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 day=vec3(0.2,0.3,0.5);\nvec3 night=vec3(0.0,0.0,0.0);\nvec3 sun=vec3(2.0,2.0,2.0);\n\nvec3 background(vec2 pos,vec2 mouse)\n{\n\n    float m=length(pos);\n    float ml=length(mouse);\n    \n    vec3 bgcol=mix(night,day,ml/0.5);\n    float moomcircle=step(0.08,distance(mouse,pos));\n    float suncircle=step(0.09,m);\n    vec3 returncol=mix(sun,bgcol,suncircle);\n\treturncol*=moomcircle;\n    return returncol;\n}\nfloat rand(float x) {\n\tfloat res = 0.0;\n\t\n\tfor (int i = 0; i < 5; i++) {\n\t\tres += 0.240 * float(i) * sin(x * 0.68171 * float(i));\n\t\t\n\t}\n\treturn res;\n\t\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-0.5;\n\tuv.x*=iResolution.x/iResolution.y;\n    \n    vec2 mouse=iMouse.xy/iResolution.xy-0.5;\n    mouse.x*=iResolution.x/iResolution.y;;\n    \n    \n    \n\tvec3 col=background(uv,mouse);\n    \n\t\n    \n    vec3 light=vec3(0.0,0.0,0.0);\n    int iterations=50;\n    vec2 incr=uv/float(iterations);\n    vec2 p=vec2(0.0,0.0)+incr;\n    for(int i=2;i<iterations;i++)\n    {\n        light+=background(p,mouse);\n        p+=incr;\n    }\n    light/= float(iterations)*max(0.001,dot(uv,uv))*80.0;\n    \n    vec2 star = fragCoord.xy;\n    \n    col+=step(2.1,rand(star.y * star.x))*step(0.7,rand(star.y + star.x))*step(length(mouse),0.15)*mix(vec3(2.0,2.0,2.0),day,length(mouse)/0.5);\n\n    float moomcircle=step(0.08,distance(mouse,uv));\n    col*=moomcircle;\n    // Output to screen\n    fragColor = vec4(col+light,1.0);\n}","name":"Image","description":"","type":"image"}]}