{"ver":"0.1","info":{"id":"lXlfDn","date":"1728297920","viewed":67,"name":"Diffraction Grating 3b1b","username":"JennySchub","description":"I saw an animation by 3Blue1Brown (https://www.youtube.com/watch?v=EmKQsSDlaa4&t=1049s)\nand wanted to recreate it.\nMouse X: slit distance\nMouse Y: zoom","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["diffractiongrating"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define numSlits 16.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0);\n    float v;\n    float l;\n    float scale = pow(iMouse.y/iResolution.y,2.) * 20.;\n    float stride = iMouse.x/iResolution.x * 30. / scale;\n    if(length(iMouse.xy)==0.){\n        scale = 5.;\n        stride=3.;\n    }\n \n     l = length(\n                    vec2(iResolution.x/2., 0) - \n                    fragCoord\n                );\n\n            v += sin(\n                    -iTime*10. +\n                    l*scale\n                 )/sqrt(l);\n \n    for(float a=1.; a<numSlits/2.; a++){\n        for(float mul=-1.; mul<1.1; mul+=2.){\n            l = length(\n                    vec2(iResolution.x/2. + mul*a * stride, 0) - \n                    fragCoord\n                );\n\n            v += sin(\n                    -iTime +\n                    l*scale\n                 )/pow(l,0.4);\n         }\n    }\n    col.r=clamp(v, 0., 1. );\n    col.g=clamp(-v, 0., 1. );\n    col.b=clamp(-v, 0., 1. );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}