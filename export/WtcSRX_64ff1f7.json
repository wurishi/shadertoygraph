{"ver":"0.1","info":{"id":"WtcSRX","date":"1581378681","viewed":267,"name":"Vennevadjagskakalladen","username":"Tysken","description":"Drag your mouse around a bit.","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["simulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 get(float x, float y, in vec2 fragCoord, sampler2D channel ){\n\t    return texture(channel,(fragCoord + vec2(x,y))/iResolution.xy).rgba;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    col.r = get(0.0,0.0,fragCoord,iChannel3).r/10.0;\n    col.g = get(0.0,0.0,fragCoord,iChannel3).r/100.0;\n    col.b = get(0.0,0.0,fragCoord,iChannel3).r/1000.0;\n\n    \n    //col += getHeight\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    //fragColor += texture(iChannel2,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec4 get(float x, float y, in vec2 fragCoord, sampler2D channel ){\n\t    return texture(channel,(fragCoord + vec2(x,y))/iResolution.xy).rgba;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    //update depth\n    \n    float depth = get(0.0,0.0,fragCoord,iChannel2).r; //current depth\n    depth -= iTimeDelta*(get(0.0,0.0,fragCoord,iChannel1).r + get(0.0,0.0,fragCoord,iChannel1).g + get(0.0,0.0,fragCoord,iChannel1).b + get(0.0,0.0,fragCoord,iChannel1).a); //ooutflow\n    depth += iTimeDelta*(get(0.0,-1.0,fragCoord,iChannel1).r + get(1.0,0.0,fragCoord,iChannel1).g + get(0.0,1.0,fragCoord,iChannel1).g + get(-1.0,0.0,fragCoord,iChannel1).a); //inflow\n    \n\n    if(distance(iMouse.xy,fragCoord.xy) < 10.0) depth += 1.01;\n    \n    depth = max(depth,0.0);\n    \n    fragColor = vec4(depth,0.0,0.0,0.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 get(float x, float y, in vec2 fragCoord, sampler2D channel ){\n\t    return texture(channel,(fragCoord + vec2(x,y))/iResolution.xy).rgba;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float gdt = 9.81 * iTimeDelta;\n    \n    float waterHeight      = get( 0.0, 0.0,fragCoord,iChannel3).r;\n    float waterHeightUp    = get( 0.0, 1.0,fragCoord,iChannel3).r;\n    float waterHeightLeft  = get(-1.0, 0.0,fragCoord,iChannel3).r;\n    float waterHeightDown  = get( 0.0,-1.0,fragCoord,iChannel3).r;\n    float waterHeightRight = get( 1.0, 0.0,fragCoord,iChannel3).r;\n\n    float up = max(get(0.0,0.0,fragCoord,iChannel2).r,0.0) + gdt*(waterHeight-waterHeightUp);\n    float left = max(get(0.0,0.0,fragCoord,iChannel2).g,0.0) + gdt*(waterHeight-waterHeightLeft);\n    float down = max(get(0.0,0.0,fragCoord,iChannel2).b,0.0) + gdt*(waterHeight-waterHeightDown);\n    float right = max(get(0.0,0.0,fragCoord,iChannel2).a,0.0) + gdt*(waterHeight-waterHeightRight);\n    \n    if(waterHeight - (up+left+down+right) < 0.0){\n    \tfloat k = min(1.0,waterHeight/((up+left+down+right)*iTimeDelta));   \n        up *= k;\n        left *= k;\n        down *= k;\n        right *= k;\n    }\n    \n    //border conditions\n    \n    if(fragCoord.x < 2.0){\n    \tright += left;\n        left   = 0.0;\n    }if(fragCoord.x > iResolution.x-2.0){\n    \tleft  += right;\n        right  = 0.0;\n    }if(fragCoord.y < 2.0){\n    \tup   += down;\n        down  = 0.0;\n    }if(fragCoord.y > iResolution.y-2.0){\n    \tdown += up;\n        up    = 0.0;\n    }\n    \n\t\t\n\t\n    \n    \n    \n    fragColor = vec4(up,left,down,right);\n}","name":"Buffer A","description":"","type":"buffer"}]}