{"ver":"0.1","info":{"id":"slcGWs","date":"1636924614","viewed":93,"name":"108-8","username":"do","description":"108-8","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["ico","dode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//108\n//2021\n//do\n\n#define main() mainImage(out vec4 fragColor,in vec2 fragCoord)\n#define R iResolution\n#define t iTime\n\n#define AA 2\n#define EPS 0.0001\n\nconst int seed = 1290;\n\nconst float pi = radians(180.);\nconst float phi =  (1.+sqrt(5.))/2.;\n\nfloat h11(float p) {\n    uvec2 n = uint(int(p)) * uvec2(1391674541U,seed);\n    uint h = (n.x ^ n.y) * 1391674541U;\n    return float(h) * (1./float(0xffffffffU));\n}\n\nfloat h21(vec2 p) {\n    uvec2 n = uvec2(ivec2(p))*uvec2(1391674541U,seed);\n    uint h = (n.x^n.y) * 1391674541U;\n    return float(h) * (1./float(0xffffffffU));\n}\n\nvec2 h22(vec2 p) {\n    uvec2 n = uvec2(ivec2(p)) * uvec2(1391674541U,seed);\n    n = (n.x ^ n.y) * uvec2(1391674541U,seed);\n    return vec2(n) * (1./float(0xffffffffU));\n}\n\nvec3 h33(vec3 p) {\n   uvec3 h = uvec3(ivec3(  p)) * \n   uvec3(1391674541U,seed,2860486313U);\n   h = (h.x ^ h.y ^ h.z) * uvec3(1391674541U,seed,2860486313U);\n   return vec3(h) * (1.0/float(0xffffffffU));\n\n}\n\nfloat spiral(vec2 p,float s) {\n    float d = length(p);\n    float a = atan(p.x,p.y);\n    float l = log(d)/.618 +a;\n    return sin(l*s);\n}\n\nfloat sin3(vec3 p,float h) {\n    \n    return sin(p.x*h) * sin(p.y*h) * sin(p.z*h);\n}\n\nvec3 fmCol(float t,vec3 a,vec3 b,vec3 c,vec3 d) {\n    return a + b * cos((radians(180.)*2.0) * (c * t + d));\n}\n\nvec2 opu(vec2 d1,vec2 d2) {\n    return (d1.x < d2.x) ? d1 : d2;\n} \n\nfloat extr(vec3 p,float d,float h) {\n    vec2 w = vec2(d,abs(p.z) - h);\n    return min(max(w.x,w.y),0.) + length(max(w,0.)); \n} \n\nvec2 rmod(vec2 p,float r) {\n    float n = radians(360.)/r;\n    float a = atan(p.x,p.y)+n*.5;\n    a = floor(a/n)*n;\n    return p * mat2(cos(a),-sin(a),sin(a),cos(a));\n}\n\nfloat cell(vec3 x,float n) {\n \n    x *= n;\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n \n    float min_dist = 1.0;\n    \n    for(int i = -1; i <= 1; i++) {\n        for(int j = -1; j <= 1; j++) {\n            for(int k = -1; k <= 1; k++) { \n\n                vec3 b = vec3(float(k),float(j),float(i));\n                vec3 r = h33( p + b );\n                \n                vec3 diff = (b + r - f);\n\n                float d = length(diff);\n                min_dist = min(min_dist,d);\n    \n            }\n        }\n    }\n \n    return min_dist;  \n\n}\n\nfloat n2(vec2 x) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f =  f*f*(3.-2.*f);\n    float n = p.x + p.y * 57.;\n    \n    return( \n        mix(\n        mix(h11(n+0.),h11(n+1.),f.x),\n        mix(h11(n+57.),h11(n+58.),f.x),\n        f.y)\n        );\n       \n}\n\nfloat n3(vec3 x) {\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f * f * (3.0 - 2.0 * f);\n    float n = p.x + p.y * 157.0 + 113.0 * p.z;\n\n    return mix(mix(mix(h11(n + 0.0),h11(n + 1.0),f.x),\n           mix(h11(n + 157.0),h11(n + 158.0),f.x),f.y),\n           mix(mix(h11(n + 113.0),h11(n + 114.0),f.x),\n           mix(h11(n + 270.0),h11(n + 271.0),f.x),f.y),f.z);\n}\n\nfloat f2(vec2 x) {\n\n    float t = 0.0;\n\n    float g = exp2(-.626); \n\n    float a = 0.5;\n    float f = 1.0;\n\n    for(int i = 0; i < 5; i++) {\n    t += a * n2(f * x); \n    f *= 2.0; \n    a *=  g;  \n    \n    }    \n\n    return t;\n}\n\nfloat f3 (vec3 p) {\n    float f = 1.;\n    mat3 m = mat3(vec2(.8,.6),h11(150.),\n                  vec2(-.6,.8),h11(125.),\n                  vec2(-.8,.6),h11(100.));\n\n    f += .5    * n3(p); p = m*p*2.01;\n    f += .25   * n3(p); p = m*p*2.04;\n    f += .125  * n3(p); p = m*p*2.1;\n    f += .0625 * n3(p);\n    return f / .94;\n}\n\nfloat dd(vec3 p) {\n    vec3 q = vec3(f3(p+vec3(0.,1.,2.)),\n                  f3(p+vec3(4.,2.,3.)),\n                  f3(p+vec3(2.,5.,6.)));\n    vec3 r = vec3(f3(p + 4. * q + vec3(4.5,2.4,5.5)),\n                  f3(p + 4. * q + vec3(2.25,5.,2.)),\n                  f3(p + 4. * q + vec3(3.5,1.5,6.)));\n    return f3(p + 4. * r);\n}\n\nmat2 rot(float a) {\n\n    float c = cos(a);\n    float s = sin(a);\n    \n    return mat2(c,-s,s,c);\n}\n \nvec3 raydir(vec2 uv,vec3 ro,vec3 ta,float fov) {\n\n     vec3 f = normalize(ta - ro);\n     vec3 r = normalize(cross(vec3(0.0,1.0,0.0),f));\n     vec3 u = normalize(cross(f,r));\n\n     vec3 d = normalize(uv.x * r\n     + uv.y * u + f * fov);  \n\n     return d;\n}\n\nfloat petal(vec2 p,float r1,float r2,float h) {\n    p.x = abs(p.x);\n    float b = (r1-r2)/h;\n    float a = sqrt(1.-b*b);\n    float k = dot(p,vec2(-b,a));\n    if(k < 0.) return length(p)-r1;\n    if(k > a*h) return length(p-vec2(0.,h))-r2;\n    return dot(p,vec2(a,b))-r1;\n}\n\nfloat arc(vec2 p,vec2 sca,vec2 scb,float ra,float rb) {\n    p *= mat2(sca.x,sca.y,-sca.y,sca.x);\n    p.x = abs(p.x);\n    float k = (scb.y*p.x>scb.x*p.y) ? dot(p,scb) : length(p);\n    return sqrt(dot(p,p)+ra*ra-2.*ra*k)-rb;\n}\n\nfloat box(vec3 p,vec3 b) {\n\n    vec3 d = abs(p) - b;\n    return length(max(d,0.0)) + min(max(d.x,max(d.y,d.z)),0.0);\n}\n\nfloat dode(vec3 p,vec3 a,vec3 b) {\n   vec4 v = vec4(0.,1.,-1.,0.5 + sqrt(1.25));\n   v /= length(v.zw);\n\n   float d;\n   d = abs(dot(p,v.xyw))-a.x;\n   d = max(d,abs(dot(p,v.ywx))-a.y);\n   d = max(d,abs(dot(p,v.wxy))-a.z);\n   d = max(d,abs(dot(p,v.xzw))-b.x);\n   d = max(d,abs(dot(p,v.zwx))-b.y);\n   d = max(d,abs(dot(p,v.wxz))-b.z);\n   return d;\n}\n \nfloat ico(vec3 p,float r) {\n    float d;\n    d = abs(dot(p,vec3(.577)));\n    d = max(d,abs(dot(p,vec3(-.577,.577,.577))));\n    d = max(d,abs(dot(p,vec3(.577,-.577,.577))));\n    d = max(d,abs(dot(p,vec3(.577,.577,-.577))));\n    d = max(d,abs(dot(p,vec3(0.,.357,.934))));\n    d = max(d,abs(dot(p,vec3(0.,-.357,.934))));\n    d = max(d,abs(dot(p,vec3(.934,0.,.357))));\n    d = max(d,abs(dot(p,vec3(-.934,0.,.357))));\n    d = max(d,abs(dot(p,vec3(.357,.934,0.))));\n    d = max(d,abs(dot(p,vec3(-.357,.934,0.))));\n    return d-r;\n}\n\nvec2 scene(vec3 p) { \n\nvec2 res = vec2(1.0,0.0);\nvec3 q,y,l,k,n;\n\nvec3 e = vec3(1./phi,1.,.67);\n\nk = p;\nk.xz *= rot(t*.61);\n\nfloat d = dode(k,vec3(e.z),vec3(e.z));\nd = max(d,-dode(k,e.yxx,vec3(e.x)));\nd = max(d,-dode(k,e.xyx,vec3(e.x)));\nd = max(d,-dode(k,e.xxy,vec3(e.x)));\nd = max(d,-dode(k,vec3(e.x),e.yxx));\nd = max(d,-dode(k,vec3(e.x),e.xyx));\nd = max(d,-dode(k,vec3(e.x),e.xxy));\n\nres = opu(res,vec2(d,5.));\n\nl = p;\nl.yz *= rot(t*.05);\nres = opu(res,vec2(ico(l,1./phi-.1),20.));\n\nfloat an1 = pi * (.5+.5*cos(.5));\nfloat an2 = pi * (.5+.5*cos(1.));\nfloat rb  = .1 * (.5+.5*cos(5.));\n\nres = opu(res,vec2(\n    extr(p.xzy,arc(p.xz,vec2(sin(an1),cos(an1)),\n                 vec2(sin(an2),cos(an2)),1.25,rb),\n                 .1),2.));\n\nan1 = pi * (-.5+.5*cos(.502));\nres = opu(res,vec2(\n    extr(p.xzy,arc(p.xz,vec2(sin(an1),cos(an1)),\n    vec2(sin(an2),cos(an2)),1.5,rb),\n    .16),1.));\n\ny = p.xzy;\ny.xy = rmod(y.xy,8.);\ny.y -= 6.;\n\nvec2 c = abs(vec2(length(p.xz),p.y)) - vec2(4.,2.);\nfloat cy = min(max(c.x,c.y),0.) + length(max(c,0.));\n\nres = opu(res,vec2(\n    max(-cy,box(y,vec3(1.,1e10,1.))),8.));\n\nn = p.xzy;\nn.xy = rmod(n.xy,108.);\nn.y -= 3.3;\n\nres = opu(res,vec2(\n   length(n-vec3(0.,0.,.12))-.08,108.));\n\nq = p.xzy;\nq.xy = rmod(q.xy,24.);\nq.y -= 2.;\n\nres = opu(res,vec2(length(q)-.2,5.));\n\nres = opu(res,vec2(    \n    max(-extr(q,petal(q.xy,.24,.12,.5),.1),\n    max(-extr(p.xzy-vec3(0.,0.,.05),abs(length(p.xz)-2.5)-.5,.05),\n    extr(p.xzy,abs(length(p.xz)-3.)-2.,.05) \n    ))\n    ,64.));\n\nreturn res;\n\n}\n\nvec2 trace(vec3 ro,vec3 rd) {\n    \n    float d = -1.0;\n    float s = 4.;\n    float e = 12.; \n\n    for(int i = 0; i < 75; i++) {\n\n        vec3 p = ro + s * rd;\n        vec2 dist = scene(p);\n   \n        if(dist.x < EPS || e <  dist.x ) { break; }\n        s += dist.x;\n        d = dist.y;\n\n        }\n \n        if(e < s) { d = -1.0; }\n        return vec2(s,d);\n\n}\n\nfloat shadow(vec3 ro,vec3 rd ) {\n\n    float res = 1.0;\n    float t = 0.005;\n    float ph = 1e10;\n    \n    for(int i = 0; i < 25; i++ ) {\n        \n        float h = scene(ro + rd * t  ).x;\n\n        float y = h * h / (2. * ph);\n        float d = sqrt(h*h-y*y);         \n        res = min(res,325. * d/max(0.,t-y));\n        ph = h;\n        t += h;\n    \n        if(res < .001 || ro.y+rd.y*t > 1.) { break; }\n\n        }\n\n        return clamp(res,0.0,1.0);\n\n}\n\nvec3 calcNormal(vec3 p) {\n\n    vec2 e = vec2(1.0,-1.0) * EPS;\n\n    return normalize(vec3(\n    vec3(e.x,e.y,e.y) * scene(p + vec3(e.x,e.y,e.y)).x +\n    vec3(e.y,e.x,e.y) * scene(p + vec3(e.y,e.x,e.y)).x +\n    vec3(e.y,e.y,e.x) * scene(p + vec3(e.y,e.y,e.x)).x + \n    vec3(e.x,e.x,e.x) * scene(p + vec3(e.x,e.x,e.x)).x\n\n    ));\n    \n}\n\nvec3 render(vec3 ro,vec3 rd) {\n\n    vec2 d = trace(ro,rd); \n\n    vec3 p = ro + rd * d.x;\n\n    vec3 n = calcNormal(p);\n    vec3 r = reflect(rd,n);    \n\n    vec3 linear = vec3(0.);\n\n    float amb = sqrt(clamp(.5+.5*n.y,0.,1.));\n    float fre = pow(clamp(1.+dot(n,rd),0.,1.),2.);\n    float re = smoothstep(-2.,2.,r.y);\n\n    vec3 col = vec3(.5);\n    vec3 bg_col = vec3(1.);\n    col = bg_col * max(1.,rd.y);\n\n    vec3 l = normalize(vec3(-25.,10.,5.));\n    vec3 h = normalize(l - rd);  \n\n    float dif = clamp(dot(n,l),0.0,1.0);\n    float spe = pow(clamp(dot(n,h),0.0,1.0),16.)\n    * dif * (.04 + 0.9 * pow(clamp(1. + dot(h,rd),0.,1.),5.));\n\n    if(d.y >= 0.) {\n\n        if(dif>.001){\n            dif *= shadow(p,l);\n        }\n        \n        if(re>.001) {\n           re  *= shadow(p,r);\n        }\n        \n        linear += dif * vec3(.5);\n        linear += amb * vec3(0.001);\n        linear += fre * vec3(.005,.002,.001);\n        linear += spe * vec3(0.001,0.001,.005)*re;\n\n        if(d.y == 64.) {\n\n            col = vec3(.5);        \n            float r = length(p);\n            float a = atan(p.z,p.x);\n            a += .05* f2(p.xz*24.);\n \n            col *= .9*mix(bg_col*-2.,\n                vec3(f2(vec2(24.*a,4.*r))),\n                f3(p)*length(p));\n\n        }\n\n        if(d.y == 108.) {\n        col = vec3(1.,.5,0.);\n        col += 2.;\n        }\n\n        if(d.y == 2.) {\n        col = vec3(3.);\n        }        \n\n        if(d.y == 1.) {\n        col = vec3(0.1);\n        }\n        \n        if(d.y == 8.) {\n            col = vec3(2.)+(re*1.5);\n \n        }\n\n        if(d.y == 20.) {\n\n            p *= 3.25;\n\n            col += fmCol(dd(p),vec3(f3(p),h11(45.),h11(124.)),\n                   vec3(h11(235.),f3(p),h11(46.)),\n                   vec3(h11(245.),h11(75.),f3(p)),\n                   vec3(1.,spiral(p.xz,.5),.5));\n\n\n            col += mix(col,cell(p+f3(p*sin3(p,h11(100.)*45.\n            )),12.)*col,rd.y*rd.x*col.z)*.01;     \n    \n         \n        }    \n\n        if(d.y == 5.) {\n            col = vec3(.1,.5,.25);\n        }\n        \n          col = col * linear;\n          col = mix(col,bg_col,1.-exp(-.0001*d.x*d.x*d.x));         \n\n   }\nreturn col;\n}\n\nvoid main() { \n\nvec3 color = vec3(0.);\n\nvec3 ta = vec3(0.1);\nvec3 ro = vec3(-2.,4.,-3.);\nro.xz *= rot(t*.005);\n\nfor(int k = 0; k < AA; ++k) {\n    for(int l = 0; l < AA; ++l) { \n\nvec2 o = vec2(float(l),float(k))/ float(AA) -.5;\nvec2 uv = (2.* (fragCoord.xy+o) - R.xy)/R.y;\n\nvec3 rd = raydir(uv,ro,ta,2.);\nvec3 col = render(ro,rd);       \n\ncol = pow(col,vec3(.4545));\ncolor += col;\n   \n    }\n}\n\ncolor /= float(AA*AA);\nfragColor = vec4(color,1.0);\n\n}\n","name":"Image","description":"","type":"image"}]}