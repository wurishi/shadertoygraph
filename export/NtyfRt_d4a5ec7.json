{"ver":"0.1","info":{"id":"NtyfRt","date":"1664989606","viewed":221,"name":"Video Time Trail","username":"MysteryPancake","description":"Inspired by Bicep's Atlas music video","likes":1,"published":3,"flags":96,"usePreview":0,"tags":["video","time","buffer","trail","atlas","bicep"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ltjXWz","filepath":"https://soundcloud.com/feelmybicep/bicep-atlas","previewfilepath":"https://soundcloud.com/feelmybicep/bicep-atlas","type":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec4 trail = texture(iChannel1, uv);\n    vec4 front = texture(iChannel0, uv);\n    vec4 bg = vec4(1.0, 0.2, 0.2, 0.0) + texture(iChannel2, uv * 0.5).r;\n    \n    vec4 fg = mix(trail, front, front.a);\n    fragColor = mix(bg, fg, fg.a);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define colorKey(vid) clamp((distance(vid.rgb, target) - threshold) / softness, 0.0, 1.0)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    const vec3 target = vec3(0.0, 1.0, 0.0); // Find green\n    const float threshold = 0.7; // Controls target color range\n    const float softness = 0.1; // Controls linear falloff\n    \n    // One sample per rim light pass\n    vec4 vid = texture(iChannel0, uv);\n    vec4 vid2 = texture(iChannel0, uv + vec2(0.005));\n    vec4 vid3 = texture(iChannel0, uv - vec2(0.005));\n    \n    // Linear color key (https://www.shadertoy.com/view/NsfcWj)\n    float factor = colorKey(vid);\n    float factor2 = colorKey(vid2);\n    float factor3 = colorKey(vid3);\n    \n    // Yellow rim light\n    vid += vec4(1.0, 0.5, 0.5, 0.0) * (1.0 - factor2);\n    \n    // Blue rim light\n    vid += vec4(0.0, 0.0, 1.0, 0.0) * (1.0 - factor3);\n    \n    fragColor = vec4(vid.rgb, factor);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n    const vec2 offset = vec2(-0.002, -0.002);\n\n    if (iFrame < 1) {\n\n        // Initialize values to 0\n        fragColor = vec4(0.0);\n\n    } else if (iFrame % 8 == 0) {\n\n        // Sample every 8 frames\n        vec4 last = texture(iChannel0, uv + offset);\n        vec4 vid = texture(iChannel1, uv);\n        fragColor = mix(last, vid, vid.a);\n\n    } else {\n    \n        // Use previous sample\n        fragColor = texture(iChannel0, uv + offset);\n    }\n\n    // Decrease alpha over time\n    fragColor.a = clamp(fragColor.a - 0.0005, 0.0, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}