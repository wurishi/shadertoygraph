{"ver":"0.1","info":{"id":"7s2GzR","date":"1616875849","viewed":217,"name":"Slime Simulation","username":"ebollar","description":"A slime simulation. Click on different points on the window to change the settings! by Eric Bollar","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["slimeparticles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Eric Bollar\n// March 27, 2021\n// Slime Simulation with help from\n// https://www.youtube.com/watch?v=X-iSQQgOd1A&ab_channel=SebastianLague\n// https://www.shadertoy.com/view/wtKGW1\n\nvoid mainImage( out vec4 fragColor, in vec2 pos )\n{\n    vec4 particle = texel(ch0, pos);\n    float distr = gauss(pos - particle.xy, prad);\n    vec4 pheromone = 2. * texel(ch1, pos);\n    fragColor = vec4(sin(pheromone.xyz*vec3(0.3,0.7,1.4)), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 loop_d(vec2 pos)\n{\n\treturn mod(pos + size*0.5, size) - size*0.5;\n}\n\nvec2 loop(vec2 pos)\n{\n\treturn mod(pos, size);\n}\n\nvoid Check(inout vec4 A, vec2 pos, vec2 dx)\n{\n    vec4 Anb = texel(ch0, loop(pos+dx));\n    if(length(loop_d(Anb.xy - pos)) < length(loop_d(A.xy - pos)))\n    {\n        A = Anb; //copy the particle info\n    }\n}\n\nvoid CheckEdge(inout vec4 A, vec2 pos, float l)\n{\n    Check(A, pos, vec2(-l,0));\n    Check(A, pos, vec2(l,0));\n    Check(A, pos, vec2(0, -l));\n    Check(A, pos, vec2(0, l));\n}\n\nvoid mainImage( out vec4 A, in vec2 pos )\n{\n    vec2 muv = iMouse.xy/size;\n    if(length(muv.xy) > 0.0)\n    {\n    \tsdist *= muv.x;\n  \t\tsst *= muv.y; \n    }\n    else\n    {\n        sdist *= 0.8;\n  \t\tsst *= 0.05; \n    }\n    \n    A = texel(ch0, pos); // This Agent\n    \n    CheckEdge(A, pos, 5.0);\n    A.xy = loop(A.xy);\n    \n    if(length(A.xy - pos) > 1.0) {\n    \tA.xy += 1.*(hash2(pos)-0.5);\n    }\n\n    // Sensors\n    vec2 sleft = A.xy + sdist * vec2(cos(A.z + sangl), sin(A.z + sangl));\n    vec2 sright = A.xy + sdist * vec2(cos(A.z - sangl), sin(A.z - sangl));\n    \n    float dangl = (pixel(ch1, sleft).x - pixel(ch1, sright).x);\n    A.z += dt * sst * tanh(3.0 * dangl);\n    \n    // Update Position\n    vec2 pvel = pspeed * vec2(cos(A.z), sin(A.z));\n    A.xy += dt * pvel;\n    A.xy = loop(A.xy);\n    \n    // Generates at Start\n    if (iFrame < 1) { \n        A.xy = pos;\n        A.zw = hash2(A.xy) - 0.5;\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define dt 0.25\n#define prad 1.4\n#define decay 0.15\n#define size iResolution.xy\n#define pixel(a, p) texture(a, p/vec2(textureSize(a,0)))\n#define texel(a, p) texelFetch(a, ivec2(p-0.5), 0)\n#define ch0 iChannel0\n#define ch1 iChannel1\n#define ch2 iChannel2\n#define ch3 iChannel3\n#define PI 3.14159265\n\nfloat pspeed = 7.0;\nfloat sdist = 50.0;\nfloat sst = 10.0;\nfloat sangl = 0.7;\n\nvec2 hash2(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nfloat gauss(vec2 x, float r)\n{\n    return exp(-pow(length(x)/r,2.));\n}\n\nvec4 Laplace(sampler2D ch, vec2 p)\n{\n    vec3 dx = vec3(-1,0.,1);\n    return texel(ch, p+dx.xy)+texel(ch, p+dx.yx)+texel(ch, p+dx.zy)+texel(ch, p+dx.yz)-4.*texel(ch, p);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 Q, in vec2 p )\n{\n    Q = texel(ch1, p);\n   \n    // Diffusion\n    Q += dt*Laplace(ch1, p);\n    \n    vec4 particle = texel(ch0, p);\n    float distr = gauss(p - particle.xy, prad);\n    \n    // Depositing\n    Q += dt*distr;\n        \n    // Decay\n    Q += -dt*decay*Q;\n    \n    // At Start\n    if(iFrame < 1) {\n        Q = vec4(0);\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 Q, in vec2 p )\n{\n    Q = texel(ch1, p);\n    \n    Q = 0.85 * Q + 0.15 * texel(ch0, p); \n    \n    if(iFrame < 1) {\n        Q =vec4(0);\n    }\n}","name":"Buffer C","description":"","type":"buffer"}]}