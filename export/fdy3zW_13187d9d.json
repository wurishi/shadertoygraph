{"ver":"0.1","info":{"id":"fdy3zW","date":"1631137866","viewed":66,"name":"Random Noise Generation","username":"xXx_T0SHIII_xXx","description":"Learning about random noise. \n\nA simple easy to read/use Random Noise Generator. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","simple","beginner","random","easy","generator","rand","generation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Changes Noise random\n#define seed 1. \n\n\n//random noise function\nfloat rand( float p)\n{\n  return fract(sin(p)*100000.0);\n}\n\n//2D Random Noise \nfloat rand2D(vec2 uv)\n{\n    return fract(sin(dot(uv.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(0);\n    //Scale uv up by 10\n    uv*= 10.;\n    \n    //Integer Table\n    vec2 iPos = floor(uv);\n    \n    //Fractional Coords\n    vec2 fPos = fract(uv);\n    \n    \n    //Visualize fractional Coords\n    //color = vec3(fPos,0);\n    \n    //Visualize Noise\n    color = vec3(rand2D(uv*seed));\n    \n     //Make Random cells\n    //color = vec3(rand2D(iPos*seed));\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}