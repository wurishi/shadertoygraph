{"ver":"0.1","info":{"id":"MsscDM","date":"1489345857","viewed":236,"name":"sample02: simple bumpmap","username":"makak","description":"Playing around with 2d bumpap effect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cubemapbumpmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Very simple 2d bump effect implementation\n// may be not \"proper\", just playing around with input values \n// until it looks more or less ok\n//\n// Created by Maciej Nowicki - makak / (ex. madwizards, moons, reason, terror13)\n\n#define\tBUMP_INTENSITY\t1.0\n#define LIGHT_RADIUS\t0.29\n#define TEXTURE_SIZE\t256.0\n\nfloat lightMap(vec2 uv, vec2 center, float radius) {\n    float smoothness = radius * 1.0;\n    return 1.0 - smoothstep(radius - smoothness, radius + smoothness, length(uv - center));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n\t//uv.y *= iResolution.y / iResolution.x;\n    \n    vec3 dir = normalize(vec3(uv * 1.1, 1.0));\n    \n    float angle = radians(iTime * 25.0);\n    mat2 rotationMatrix = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    \n    dir.xz *= rotationMatrix;\n\tvec3 background = texture(iChannel0, dir).xyz;\n       \n    vec3 dirDeltaX = dir - BUMP_INTENSITY / TEXTURE_SIZE;\n    vec3 dirDeltaY = dir - BUMP_INTENSITY / TEXTURE_SIZE;\n    \n    float deltaX =  texture(iChannel0, dir).x - texture(iChannel0, dirDeltaX).x;\n    float deltaY = texture(iChannel0, dir).y - texture(iChannel0, dirDeltaY).y;\n    \n    // animate light\n    vec2 lightCenter = vec2(0.0, 0.0);\n    lightCenter.x += 2.0 * LIGHT_RADIUS * sin((iTime * 2.0));\n    lightCenter.y += 2.0 * LIGHT_RADIUS * cos((iTime * 2.0));\n    \n    // \n    vec2 lightDir = vec2(uv.x + deltaX, uv.y + deltaY);\n    float lightIntensity = lightMap(lightDir, lightCenter, LIGHT_RADIUS);\n    \n    fragColor = vec4(background * lightIntensity, 1.0);\n}","name":"Image","description":"","type":"image"}]}