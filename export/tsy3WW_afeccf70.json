{"ver":"0.1","info":{"id":"tsy3WW","date":"1603063261","viewed":267,"name":"KIFS - woz","username":"woz","description":"KIFS Test\n\nCredits: Art of Code - YouTube\nhttps://www.youtube.com/watch?v=il_Qg9AqQkE&list=PLGmrMu-IwbguU_nY2egTFmlg691DN7uE5","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["kifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358\n\nvec2 N(float angle)\n{\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n\n    float t = sin(iTime * .2) * PI * .5;\n    float c = cos(t);\n    float s = sin(t);\n    uv *= mat2(c, s, -s, c);\n    \n    uv /= (sin(iTime * .1) *.4 + .5) * 3.;\n    \n    vec3 col = vec3(0.);\n\n    uv.x = abs(uv.x);\n\n    float angle = PI * 5. / 6.;\n    uv.y += tan(angle) * .5;\n    \n    vec2 n = N(angle);\n    float d = dot(uv - vec2(.5, 0.), n);\n    uv -= n * max(0., d) * 2.;\n    \n    n = N(iTime * .05);\n    float scale = 1.;\n    \n    uv.x += .5;\n    \n    float sc = 3. + sin(iTime * .1) * 2.;\n    \n    for(int i = 0; i < 4; i++) {\n        scale *= sc;\n        uv *= sc;\n        uv.x -= 1.5;\n        \n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        uv -= n * min(0., dot(uv, n)) * 2.;\n        \n    }\n    \n\n    float l = length(uv - vec2(clamp(uv.x, -1., 1.), 0.));\n    col += smoothstep(1. / iResolution.y, 0., l / scale);\n    uv /= scale;\n    \n    \n    col = texture(iChannel1, uv * 2. + vec2(iTime * .1, iTime * .07)).rgb;\n\tcol = mix(col, texture(iChannel0, uv * 2. - iTime * .1).rgb, length(col) * 0.6 * sin(iTime));\n    col = mix(col, texture(iChannel2, uv * 2.4 - vec2(-iTime * .2, iTime * .2)).rgb, length(1. -col) * 0.4 * sin(iTime));\n\t\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}