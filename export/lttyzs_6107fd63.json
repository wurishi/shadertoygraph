{"ver":"0.1","info":{"id":"lttyzs","date":"1533744542","viewed":73,"name":"Circle Pulsar","username":"Beefster","description":"My friend was complaining about how OpenGL couldn't do circles, so I made this to prove him wrong.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    vec2 d = (fragCoord - vec2(300.0, 180.0)) / 2.0;\n    float dist = sqrt(d.x * d.x + d.y * d.y);\n    float atten = dist / 120.0;\n    \n    fragColor = vec4(\n        float(dist > 10.0 + cos(iTime * 1.2 + PI) * 5.0 && dist < 40.0 + sin(iTime) * 10.0) - atten,\n        float(dist > 25.0 + sin(iTime * 1.3 + PI) * 5.0 && dist < 55.0 + cos(iTime * 0.9) * 10.0) - atten + 0.25,\n        float(dist > 45.0 - sin(iTime * 1.4) * 15.0 && dist < 75.0 - cos(iTime * 1.1 + PI) * 10.0) - atten + 0.5,\n        1.0\n    );\n}","name":"Image","description":"","type":"image"}]}