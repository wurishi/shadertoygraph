{"ver":"0.1","info":{"id":"WttXzs","date":"1581570722","viewed":411,"name":"up the rail","username":"jiaolyulu1","description":"railway using 2D noise and lines.\nhttps://www.shadertoy.com/view/3d23z1\nreference is this link for the noise part, which constitute for the background.","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["2d","scene","train","railway"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://www.shadertoy.com/view/3d23z1, Art of Code's noise inspired me. I used this noise as this background cloud.\n//I want to draw an old style green train on the railway.\n#define S(a,b,t) smoothstep(a,b,t)\n\n\nfloat N21 (vec2 p){\n\tfloat d = fract(sin(p.x*110.+(8.21-p.y)*331.)*1218.);\n    return d;\n}\n\nfloat Noise2D(vec2 uv){\n    //uv+=iTime;\n    vec2 st = fract(uv);\n    vec2 id = floor(uv);\n    st = st*st*(3.0-2.0*st);\n    float c=mix(mix(N21(id),N21(id+vec2(1.0,0.0)),st.x),mix(N21(id+vec2(0.0,1.0)),N21(id+vec2(1.0,1.0)),st.x),st.y);\n\treturn c;\n}\n\nfloat fbm (vec2 uv,float t){\n    \n    float c=0.;\n\tc+=Noise2D(vec2(uv.x,uv.y))/2.;\n    c+=Noise2D(vec2(2.*uv.x,2.*uv.y))/4.;\n    c+=Noise2D(vec2(4.*uv.x,4.*uv.y))/8.;\n    c+=Noise2D(vec2(8.*uv.x,8.*uv.y))/16.;\n    c+=Noise2D(vec2(16.*uv.x,16.*uv.y))/32.;\n    \n    return c/(1.-1./16.);\n}\nfloat LineDistance(vec2 a, vec2 b, vec2 p){\n\tvec2 ap = p-a;\n    vec2 ab = b-a;\n    float t = clamp(dot (ap,ab)/dot(ab,ab),0.0,1.0);\n    vec2 at = t*ab;\n    vec2 pt = at-ap;\n    float off=texture(iChannel0,p/30.).r;\n    return length(pt)-0.01*off;\n}\nfloat Lines(vec2 uv,float t){\n    vec2 a,b,g,f;\n    float d;\n    for (float i=0.;i<1.;i+=0.09){\n        float y1,y2;\n        vec2 nowPos1= vec2(i,-0.7);\n        y1=N21(nowPos1)-0.5;\n        vec2 nowPos2= vec2(i,0.7);\n        y2=N21(nowPos2)-0.5;\n        a=vec2(-0.5+floor(i*3.)*0.1,fract((y1-i*t)/2.)-0.5);\n        b=vec2(0.5-floor(i*3.)*0.1,fract((y2-i*t)/2.)-0.5);\n        g=vec2(-1.,3.*(fract((y1-i*t)/2.)-0.5));\n        f=vec2(1.,(fract((y2-i*t)/2.)-0.5)*3.);\n        d+=i*S(0.02*(abs(uv.x)+0.2),0.00,LineDistance(a,b,uv));\n        d+=i*S(0.07*(abs(uv.x)),0.00,LineDistance(a,g,uv));\n        //d+=i*S(0.08*(abs(uv.x)+0.2),0.01,LineDistance(a-0.2,a-0.1,uv));\n        d+=i*S(0.07*(abs(uv.x)),0.00,LineDistance(b,f,uv));\n        }\n    \n    d+=S(0.001*(abs(uv.x)),0.00,LineDistance(vec2(0.3+0.04*sin(8.*t),1.0),vec2(0.25+0.01*cos(2.*t),-1.),uv));\n    d+=0.7*S(0.001*(abs(uv.x)),0.00,LineDistance(vec2(0.35+0.04*sin(5.*t),1.0),vec2(0.4+0.04*cos(1.*t),-1.),uv));\n    d+=0.8*S(0.001*(abs(uv.x)),0.00,LineDistance(vec2(0.4+0.04*sin(1.*t),1.0),vec2(0.45+0.04*cos(8.*t),-1.),uv));\n    d+=0.7*S(0.06*(abs(uv.x)),0.00,LineDistance(vec2(0.4,1.0),vec2(0.45,-1.),uv));\n    d+=0.7*S(0.06*(abs(uv.x)),0.00,LineDistance(vec2(-0.4,1.0),vec2(-0.45,-1.),uv));\n    \n    \n    d+=.9*S(0.001*(abs(uv.x)),0.00,LineDistance(vec2(-0.3-0.01*sin(8.*t),1.0),vec2(-0.4-0.04*cos(2.*t),-1.),uv));\n    d+=.8*S(0.001*(abs(uv.x)),0.00,LineDistance(vec2(-0.35-0.04*sin(5.*t),1.0),vec2(-0.4-0.01*cos(1.*t),-1.),uv));\n    d+=S(0.001*(abs(uv.x)),0.00,LineDistance(vec2(-0.4-0.01*sin(1.*t),1.0),vec2(-0.45-0.04*cos(8.*t),-1.),uv));\n\treturn d;\n    \n}\n\nfloat cube(vec2 p,vec2 r,float blur){\n    float train;\n    float d= length(max(abs(p)-r,0.));\n    train = S(blur,0.0,d);\n    return train;\n}\nvec3 train(vec2 p,out float m){\n    vec3 col;\n    float d;\n    for (float i=0.;i<0.5;i+=0.03){\n    \td+=cube(p-vec2(0.,i*31.5),vec2(0.29,0.42),0.09);\n        d+=cube(p-vec2(0.1,i*31.5+0.44),vec2(0.006,0.02),0.05);\n        d+=cube(p-vec2(-0.1,i*31.5+0.44),vec2(0.006,0.02),0.05);\n        m+=cube(p-vec2(0.,i*31.5),vec2(0.29,0.42),0.09);\n        //m+=cube(p-vec2(0.1,i*31.5+0.44),vec2(0.006,0.02),0.05);\n        //m+=cube(p-vec2(-0.1,i*31.5+0.44),vec2(0.006,0.02),0.05);\n        d= clamp(d,0.,1.);\n    \td-=0.5*cube(p-vec2(0.2,i*31.5),vec2(0.001,0.42),0.01);\n    \td-=0.5*cube(p-vec2(0.22,i*31.5),vec2(0.001,0.44),0.004);\n    \td-=0.5*cube(p-vec2(-0.2,i*31.5),vec2(0.001,0.42),0.01);\n    \td-=0.5*cube(p-vec2(-0.22,i*31.5),vec2(0.001,0.44),0.004);\n        for (float j=0.0;j<0.84;j+=0.1){\n        d-=cube(p-vec2(-0.22,i*31.5+j),vec2(0.04,0.01),0.004);\n        d-=cube(p-vec2(-0.12,i*31.5+j+0.02),vec2(0.17,0.005),0.004);\n        d-=cube(p-vec2(0.22,i*31.5+j),vec2(0.04,0.01),0.004);\n        d-=cube(p-vec2(0.12,i*31.5+j+0.02),vec2(0.17,0.005),0.004);\n         d= clamp(d,0.,1.);\n        }\n    }\n    \n    col=mix(col,vec3(0.0,0.15,0.05),d);\n    //col=mix(col,vec3(3),d*S(0.3,0.29,abs(p.x))*S(0.24,0.29,abs(p.x)));\n    col=mix(col,vec3(0.3,0.4,0.2),S(0.24,0.25,abs(p.x))*d);\n    col=mix(col,vec3(0.0),S(0.15,0.0,abs(p.x))*d);\n    col*=0.5*fract(p.y+p.x)+0.5;\n   \n\treturn col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy-0.5*iResolution.xy)/iResolution.y;\n    float state=floor(fract(iTime/40.)*1.9);\n\tuv+=0.01*sin(20.*state*iTime);\n    // Time varying pixel color\n    float d = fbm(vec2(uv.x,uv.y),iTime)*2.8-0.9;\n    float d1= Lines(uv,iTime);\n    float dist= length(uv);\n    vec3 col = vec3(0.25,0.15,0.0);\n    col = mix(col,vec3(1.,0.9,0.5),d*0.7+0.4);\n    col*=vec3(max(1.,0.7/(2.*dist+0.3)));\n\tcol= mix(col,vec3((0.4+state*1.5)*(1.-d1)),d1);\n    \n    col=mix(vec3(0.35,0.1,0.0),col,S(1.6,0.,dist));\n    float m;\n    vec3 trainCol=train(vec2(uv.x,uv.y+mod(iTime*3.4,6.)),m);\n    col=mix(col,trainCol,m*state*0.7);\n   \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}