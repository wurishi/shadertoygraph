{"ver":"0.1","info":{"id":"lsdSzN","date":"1458114404","viewed":656,"name":"Shader Lesson #7, textures","username":"hubbe","description":"This shader shows how to use texture lookups and also illustrates that we can use the same transforms on textures as we used in the &quot;animation&quot; shader.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["educational"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 uv, float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, s, -s, c) * uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - iResolution.xy / 2.0) / iResolution.yy;\n \n    // Uncomment any combination of the uv modifications below.\n    // Also try reordering them.\n    \n    // Translation\n    // uv += vec2(sin(iTime), sin(iTime * 1.5));\n\n    // Projection; \n    float z = (2.0 - uv.y) / uv.y;\n    uv = vec2(uv.x*z, z);\n\n    // wibbly-wobbly distortion.\n    // uv.yx += sin(uv * 20.0) / 30.0;\n\n    // Rotation\n    uv = rotate(uv, iTime  *0.3);\n    \n    // Here we just fetch the color from the iChannel0 texture at position uv.\n    // Normally, uv goes from 0 to 1, but if it gets bigger it wraps around.\n    fragColor = texture(iChannel0, uv);\n}\n\n// Homework: Replace the \"roof\" with a different texture.\n\n\n","name":"Image","description":"","type":"image"}]}