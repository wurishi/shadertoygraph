{"ver":"0.1","info":{"id":"tsGfzh","date":"1606546216","viewed":118,"name":"iMouse histogram","username":"kirindenle","description":"When you click and hold iMouse.z and iMouse.w behave differently. You can see buffer walues as histogram.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["feature"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 histogram(float start, float size, float data, vec2 uv, vec4 color) {\n    float inside_hist;\n    float end = start + size;\n    if (data > 0.0) {\n        inside_hist = float((uv.x-0.5) < data && 0.0 <= (uv.x-0.5));\n    } else {\n        inside_hist = float((uv.x-0.5) > data && (uv.x-0.5) <= 0.0);\n    }\n    return float(uv.y >= start && uv.y < end) * inside_hist * color;\n}\n\nvec4 get_mouse_consistent(vec4 m) {\n    if (m.z <= 0.0) {\n        return m;\n    } else {\n        return vec4(m.xyz, -m.w);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec4 color = vec4(1.0, 1.0, 1.0, 1.0);\n    const float n = 8.0;\n    vec4 mouseConsistent = get_mouse_consistent(iMouse);\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 uvMouse = iMouse/iResolution.xyxy*0.5;\n    vec4 uvMouseConsistent = mouseConsistent/iResolution.xyxy*0.5;\n    \n    \n    fragColor = vec4(0.0,0.0,0.0,0.0);\n    fragColor += histogram(0.0/n, 1.0/n, uvMouse.x, uv, color);\n    fragColor += histogram(1.0/n, 1.0/n, uvMouse.y, uv, color);\n    fragColor += histogram(2.0/n, 1.0/n, uvMouse.z, uv, color);\n    fragColor += histogram(3.0/n, 1.0/n, uvMouse.w, uv, color);\n    \n    fragColor += histogram(4.0/n, 1.0/n, uvMouseConsistent.x, uv, color);\n    fragColor += histogram(5.0/n, 1.0/n, uvMouseConsistent.y, uv, color);\n    fragColor += histogram(6.0/n, 1.0/n, uvMouseConsistent.z, uv, color);\n    fragColor += histogram(7.0/n, 1.0/n, uvMouseConsistent.w, uv, color);\n}","name":"Image","description":"","type":"image"}]}