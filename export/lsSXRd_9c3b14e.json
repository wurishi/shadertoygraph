{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const float Pi = 3.14159;\nconst float Pi2 = Pi * 2.0;\nconst float hPi = Pi * 0.5;\nvec3 ct[9]; \n\nvec3 lookup(const float pos)\n{\n    float p = fract(pos) * 7.999;\n    int i = int(p);\n    float f = fract(p);\n    vec3 res = vec3(0.0);\n    vec3 a = vec3(0.0);\n    vec3 b = vec3(0.0);\n      \n    if (i < 4)\n    {\n        if (i < 2)\n        {\n            if (i == 0)\n            {\n                a = ct[0]; b = ct[1];    \n            }\n            else\n            {\n                a = ct[1]; b = ct[2];\n            }            \n        }\n        else\n        {\n            if (i == 2)\n            {\n                a = ct[2]; b = ct[3];    \n            }\n            else\n            {\n                a = ct[3]; b = ct[4];\n            }            \n        }    \n    }\n    else\n    {\n\t    if (i < 6)\n        {\n            if (i == 4)\n            {\n                a = ct[4]; b = ct[5];    \n            }\n            else\n            {\n                a = ct[5]; b = ct[6];\n            }            \n        }\n        else\n        {\n            if (i == 6)\n            {\n                a = ct[6]; b = ct[7];    \n            }\n            else\n            {\n                a = ct[7]; b = ct[8];\n            }            \n        }    \n    }\n    \n\treturn mix(a, b, f);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tct[0] = vec3(0.5, 0.0, 0.3);\n\tct[1] = vec3(0.3, 0.1, 0.0);\n\tct[2] = vec3(1.0, 0.3, 0.0);\n\tct[3] = vec3(1.0, 0.6, 0.0);\n\tct[4] = vec3(1.0, 0.9, 0.0);\n\tct[5] = vec3(1.0, 0.6, 0.0);\n\tct[6] = vec3(1.0, 0.3, 0.0);\n\tct[7] = vec3(0.3, 0.1, 0.0);\n\tct[8] = vec3(0.5, 0.0, 0.3);\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n    float t = 100.0 + iTime * 0.04;\n    uv.y += 1.0  + t * 2.0;\n    \n    float aspect = iResolution.x / iResolution.y;\n\tfloat c = -cos(uv.y * Pi2 + t) * 0.0125 + 0.25 + -cos(uv.x * Pi2 + t * -0.23) * 0.125;\n       \n    float b = -cos(uv.x * (1.5 + uv.y * 14.0) * 12.0 * c + t * 0.2) * 0.5 + 0.5;\n    vec3 col = lookup(b * 2.0 + iTime * 0.5);\n    \n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsSXRd","date":"1414876946","viewed":295,"name":"This is your brain on GLSL","username":"ErnstHot","description":"Aliasing is your friend.\nBecause of the aliasing, this will look somewhat different in different resolutions.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","plasma","psychedelic"],"hasliked":0,"parentid":"","parentname":""}}