{"ver":"0.1","info":{"id":"sljfRd","date":"1652764297","viewed":77,"name":"Points and segments ","username":"mijorcalk","description":"This is my first time into GLSL. Would appreciate any comment to improve my code","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","optimize","points","segments"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159265;\n\nfloat segment(vec2 P, vec2 A, vec2 B, float r) \n{\n    vec2 g = B - A;\n    vec2 h = P - A;\n    vec2 i = P - B;\n    float d = length(h - g * clamp(dot(g, h) / dot(g,g), 0.0, 1.0));\n    r *= length(g) * r / min(length(h), length(i))/(length(g)/2.0);\n\treturn smoothstep(r, 0.0, d);\n}\n\nfloat hash(vec2 p)  // replace this by something better\n{\n    p  = 50.0*fract( p*0.3183099 + vec2(0.71,0.113));\n    return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat fbm(vec2 p){\n    float f = 0.0;\n    f += 0.5 * noise(p); p *= 2.02;\n    f += 0.25 * noise(p); p *= 2.03;\n    f += 0.125 * noise(p); p *= 2.01;\n    f += 0.0625 * noise(p); p *= 2.04;\n    f /= 0.9375;\n    return f;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 pixels = fragCoord.xy / iResolution.xy;\n    \n    // Points\n    float mov_radius = 0.05;\n    vec2 c1 = vec2(0.50 + mov_radius * cos(iTime), 0.85 + mov_radius * sin(iTime));\n    vec2 c2 = vec2(0.85 + mov_radius * cos(iTime + 0.75*pi), 0.6 + mov_radius * sin(iTime + 1.25*pi));\n    vec2 c3 = vec2(0.80 + mov_radius * cos(iTime + 0.75*pi), 0.2 + mov_radius * cos(iTime + 1.25*pi));\n    vec2 c4 = vec2(0.20 + mov_radius * cos(iTime + 1.5*pi), 0.2 + mov_radius * sin(iTime + 0.25*pi));\n    vec2 c5 = vec2(0.15 + mov_radius * cos(iTime + 3.0/4.0*pi), 0.6 + mov_radius * sin(iTime + 5.0/4.0*pi));\n    // Connected points\n    //Group 1\n    float mov_radius2 = mov_radius * 0.5;\n    vec2 c11 = vec2(0.45 + 2.0 * mov_radius2 * cos(iTime), 0.9 + mov_radius2 * sin(iTime + 0.5 * pi));\n    vec2 c12 = vec2(0.60 + 2.0 * mov_radius2 * cos(iTime), 0.9 + 2.0 * mov_radius2 * sin(iTime + 0.5 * pi));\n    vec2 c13 = vec2(0.40 + 2.0 * mov_radius2 * cos(iTime), 0.75 + mov_radius2 * sin(iTime + 0.5 * pi));\n    vec2 c14 = vec2(0.50 + mov_radius2 * cos(iTime), 0.75 + mov_radius2 * sin(iTime + 1.5 * pi));\n    vec2 c15 = vec2(0.50 + mov_radius2 * cos(iTime), 0.95 + mov_radius2 * cos(iTime + 1.5 * pi));\n    //Group 2\n    vec2 c21 = vec2(0.85 + 2.0 * mov_radius2 * cos(iTime), 0.8 + mov_radius2 * sin(iTime + 0.5 * pi));\n    vec2 c22 = vec2(0.85 + mov_radius2 * cos(iTime + pi), 0.7 + mov_radius2 * sin(iTime + pi));\n    vec2 c23 = vec2(0.90 + 2.0 * mov_radius2 * cos(iTime), 0.45 + mov_radius2 * sin(iTime + 0.5 * pi));\n    vec2 c24 = vec2(0.80 + mov_radius2 * cos(iTime), 0.50 + mov_radius2 * sin(iTime + 1.5 * pi));\n    vec2 c25 = vec2(0.85 + mov_radius2 * cos(iTime), 0.55 + mov_radius2 * cos(iTime + 1.5 * pi));\n    //Group 3\n    vec2 c31 = vec2(0.65 + 1.5 * mov_radius2 * cos(iTime - 0.5*pi), 0.35 + 0.5* mov_radius2 * sin(iTime + pi));\n    vec2 c32 = vec2(0.75 + mov_radius2 * sin(iTime + pi), 0.40 + mov_radius2 * cos(iTime + pi));\n    vec2 c33 = vec2(0.80 + 3.0 * mov_radius2 * sin(iTime), 0.30 + 2.0 * mov_radius2 * cos(iTime + 0.5 * pi));\n    vec2 c34 = vec2(0.75 + mov_radius2 * cos(iTime), 0.20 + mov_radius2 * sin(iTime + 1.5 * pi));\n    vec2 c35 = vec2(0.70 + mov_radius2 * cos(iTime), 0.10 + mov_radius2 * cos(iTime + 1.5 * pi));\n    //Group 4\n    vec2 c41 = vec2(0.15 + 1.5 * mov_radius2 * cos(iTime - 0.5*pi), 0.35 + 0.5* mov_radius2 * sin(iTime + pi));\n    vec2 c42 = vec2(0.25 + mov_radius2 * cos(iTime + pi), 0.40 + mov_radius2 * sin(iTime + pi));\n    vec2 c43 = vec2(0.40 + 0.5 * mov_radius2 * sin(iTime), 0.30 + 2.0 * mov_radius2 * cos(iTime + 0.5 * pi));\n    vec2 c44 = vec2(0.35 + mov_radius2 * sin(iTime - pi), 0.20 + mov_radius2 * sin(iTime + 0.2 * pi));\n    vec2 c45 = vec2(0.10 + mov_radius2 * cos(iTime + 0.1*pi), 0.10 + mov_radius2 * cos(iTime + 1.5 * pi));\n    \n    // Pixel points\n    vec2 p1 = pixels - c1;\n    vec2 p2 = pixels - c2;\n    vec2 p3 = pixels - c3;\n    vec2 p4 = pixels - c4;\n    vec2 p5 = pixels - c5;\n    // Pixel connected points\n    // Group 1\n    vec2 p11 = pixels - c11;\n    vec2 p12 = pixels - c12;\n    vec2 p13 = pixels - c13;\n    vec2 p14 = pixels - c14;\n    vec2 p15 = pixels - c15;\n    // Group 1\n    vec2 p21 = pixels - c21;\n    vec2 p22 = pixels - c22;\n    vec2 p23 = pixels - c23;\n    vec2 p24 = pixels - c24;\n    vec2 p25 = pixels - c25;\n    // Group 3\n    vec2 p31 = pixels - c31;\n    vec2 p32 = pixels - c32;\n    vec2 p33 = pixels - c33;\n    vec2 p34 = pixels - c34;\n    vec2 p35 = pixels - c35;\n    // Group 4\n    vec2 p41 = pixels - c41;\n    vec2 p42 = pixels - c42;\n    vec2 p43 = pixels - c43;\n    vec2 p44 = pixels - c44;\n    vec2 p45 = pixels - c45;\n    \n    // Noise\n    vec2 p = -1.0 + 2.0 * pixels;\n    float f = fbm(4.0 * p);\n    f = f/4.0 + 0.75;\n    //float f = (min(f, 1.0)- max(f, 0.0));\n    \n    // Background color\n    vec3 col = vec3(164.0, 22.0, 26.0) * f / 256.0 - pixels.y * 0.5 * vec3(164.0, 22.0, 26.0) / 256.0;\n    vec3 line_col = vec3(0.9, 0.9, 0.9);\n    \n    // Point colours\n    float r = 0.01 + 0.0003125 * sin(iTime);\n    col *= smoothstep(r, r + 0.001, length(p1));\n    col += smoothstep(r + 0.001, r, length(p1)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r, r + 0.001, length(p2));\n    col += smoothstep(r + 0.001, r, length(p2)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r, r + 0.001, length(p3));\n    col += smoothstep(r + 0.001, r, length(p3)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r, r + 0.001, length(p4));\n    col += smoothstep(r + 0.001, r, length(p4)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r, r + 0.001, length(p5));\n    col += smoothstep(r + 0.001, r, length(p5)) * vec3(0.9, 0.9, 0.9);\n    \n    // Point connected colours\n    float r2 = r * 0.5 + 0.00015 * cos(iTime);\n    // Group 1\n    col *= smoothstep(r2, r2 + 0.001, length(p11));\n    col += smoothstep(r2 + 0.001, r2, length(p11)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p12));\n    col += smoothstep(r2 + 0.001, r2, length(p12)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p13));\n    col += smoothstep(r2 + 0.001, r2, length(p13)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p14));\n    col += smoothstep(r2 + 0.001, r2, length(p14)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p15));\n    col += smoothstep(r2 + 0.001, r2, length(p15)) * vec3(0.9, 0.9, 0.9);\n    // Group 2\n    col *= smoothstep(r2, r2 + 0.001, length(p21));\n    col += smoothstep(r2 + 0.001, r2, length(p21)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p22));\n    col += smoothstep(r2 + 0.001, r2, length(p22)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p23));\n    col += smoothstep(r2 + 0.001, r2, length(p23)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p24));\n    col += smoothstep(r2 + 0.001, r2, length(p24)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p25));\n    col += smoothstep(r2 + 0.001, r2, length(p25)) * vec3(0.9, 0.9, 0.9);\n    // Group 3\n    col *= smoothstep(r2, r2 + 0.001, length(p31));\n    col += smoothstep(r2 + 0.001, r2, length(p31)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p32));\n    col += smoothstep(r2 + 0.001, r2, length(p32)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p33));\n    col += smoothstep(r2 + 0.001, r2, length(p33)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p34));\n    col += smoothstep(r2 + 0.001, r2, length(p34)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p35));\n    col += smoothstep(r2 + 0.001, r2, length(p35)) * vec3(0.9, 0.9, 0.9);\n    // Group 4\n    col *= smoothstep(r2, r2 + 0.001, length(p41));\n    col += smoothstep(r2 + 0.001, r2, length(p41)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p42));\n    col += smoothstep(r2 + 0.001, r2, length(p42)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p43));\n    col += smoothstep(r2 + 0.001, r2, length(p43)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p44));\n    col += smoothstep(r2 + 0.001, r2, length(p44)) * vec3(0.9, 0.9, 0.9);\n    col *= smoothstep(r2, r2 + 0.001, length(p45));\n    col += smoothstep(r2 + 0.001, r2, length(p45)) * vec3(0.9, 0.9, 0.9);\n    \n    // Segment colours\n    float line12 = segment(pixels, c1, c2,  r);\n    col = mix(col, line_col, line12);\n    float line23 = segment(pixels, c2, c3, r);\n    col = mix(col, line_col, line23);\n    float line34 = segment(pixels, c3, c4, r);\n    col = mix(col, line_col, line34);\n    float line45 = segment(pixels, c4, c5, r);\n    col = mix(col, line_col, line45);\n    float line51 = segment(pixels, c5, c1, r);\n    col = mix(col, line_col, line51);\n    \n    // Segment connection colours\n    // Group 1\n    float line111 = segment(pixels, c1, c11,  r2);\n    col = mix(col, line_col, line111);\n    float line112 = segment(pixels, c1, c12,  r2);\n    col = mix(col, line_col, line112);\n    float line113 = segment(pixels, c1, c13,  r2);\n    col = mix(col, line_col, line113);\n    float line114 = segment(pixels, c1, c14,  r2);\n    col = mix(col, line_col, line114);\n    float line115 = segment(pixels, c1, c15,  r2);\n    col = mix(col, line_col, line115);\n    float line1115 = segment(pixels, c11, c15,  r2);\n    col = mix(col, line_col, line1115);\n    float line1112 = segment(pixels, c11, c12,  r2);\n    col = mix(col, line_col, line1112);\n    float line1215 = segment(pixels, c12, c15,  r2);\n    col = mix(col, line_col, line1215);\n    // Group 2\n    float line221 = segment(pixels, c2, c21,  r2);\n    col = mix(col, line_col, line221);\n    float line222 = segment(pixels, c2, c22,  r2);\n    col = mix(col, line_col, line222);\n    float line223 = segment(pixels, c2, c23,  r2);\n    col = mix(col, line_col, line223);\n    float line224 = segment(pixels, c2, c24,  r2);\n    col = mix(col, line_col, line224);\n    float line225 = segment(pixels, c2, c25,  r2);\n    col = mix(col, line_col, line225);\n    float line2324 = segment(pixels, c23, c24,  r2);\n    col = mix(col, line_col, line2324);\n    float line2425 = segment(pixels, c24, c25,  r2);\n    col = mix(col, line_col, line2425);\n    float line2523 = segment(pixels, c23, c25,  r2);\n    col = mix(col, line_col, line2523);\n    float line2125 = segment(pixels, c21, c25,  r2);\n    col = mix(col, line_col, line2125);\n    // Group 3\n    float line331 = segment(pixels, c3, c31,  r2);\n    col = mix(col, line_col, line331);\n    float line332 = segment(pixels, c3, c32,  r2);\n    col = mix(col, line_col, line332);\n    float line333 = segment(pixels, c3, c33,  r2);\n    col = mix(col, line_col, line333);\n    float line334 = segment(pixels, c3, c34,  r2);\n    col = mix(col, line_col, line334);\n    float line335 = segment(pixels, c3, c35,  r2);\n    col = mix(col, line_col, line335);\n    float line3132 = segment(pixels, c31, c32,  r2);\n    col = mix(col, line_col, line3132);\n    float line3233 = segment(pixels, c32, c33,  r2);\n    col = mix(col, line_col, line3233);\n    float line3133 = segment(pixels, c31, c33,  r2);\n    col = mix(col, line_col, line3133);\n    float line3334 = segment(pixels, c33, c34,  r2);\n    col = mix(col, line_col, line3334);\n    // Group 4\n    float line441 = segment(pixels, c4, c41,  r2);\n    col = mix(col, line_col, line441);\n    float line442 = segment(pixels, c4, c42,  r2);\n    col = mix(col, line_col, line442);\n    float line443 = segment(pixels, c4, c43,  r2);\n    col = mix(col, line_col, line443);\n    float line444 = segment(pixels, c4, c44,  r2);\n    col = mix(col, line_col, line444);\n    float line445 = segment(pixels, c4, c45,  r2);\n    col = mix(col, line_col, line445);\n    float line4142 = segment(pixels, c41, c42,  r2);\n    col = mix(col, line_col, line4142);\n    float line4243 = segment(pixels, c42, c43,  r2);\n    col = mix(col, line_col, line4243);\n    float line4344 = segment(pixels, c43, c44,  r2);\n    col = mix(col, line_col, line4344);\n    \n    // Mixed\n    float line1221 = segment(pixels, c12, c21,  r2);\n    col = mix(col, line_col, line1221);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}