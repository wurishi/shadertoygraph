{"ver":"0.1","info":{"id":"3ddSzn","date":"1571315852","viewed":69,"name":"Ellipse Foci","username":"rivten","description":"Ellipse","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ellipse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lerp(float a, float b, float t)\n{\n    return (1.0 - t) * a + t * b;\n}\n\nfloat ellipsisDist(vec2 p, vec2 f0, vec2 f1, float a)\n{\n    return length(p - f0) + length(p - f1) - 2.0 * a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.0 * uv - vec2(1.0, 1.0);\n\n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    \n    vec2 f0 = vec2(320, 180);\n    vec2 deltaF = vec2(130.0 * (1.0 + cos(iTime)), 0);\n    vec2 f1 = f0 + deltaF;\n    float c = length(f1 - f0);\n    float fixedD = lerp(100.0, 50.0, c / 260.0);\n    //float a = 140.0;\n    float a = fixedD + 0.5 * c;\n    if(ellipsisDist(fragCoord, f0, f1, a) < 0.0)\n    {\n        col = vec3(1.0, 0.0, 0.0);\n    }\n    \n    if(length(fragCoord - f1) < 10.0)\n    {\n        col = vec3(0.0, 0.0, 1.0);\n    }\n\n    \n    if(length(fragCoord - f0) < 10.0)\n    {\n        col = vec3(0.0, 1.0, 0.0);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}