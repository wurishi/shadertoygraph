{"ver":"0.1","info":{"id":"DldGDS","date":"1683219336","viewed":29,"name":"My hexagram","username":"CEDipEngineering","description":"Draw a hexagram shape, move it around a circle.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\n// Inigo Quilez Hexagram \nfloat sdHexagram( in vec2 p, in float r )\n{\n    const vec4 k = vec4(-0.5,0.8660254038,0.5773502692,1.7320508076);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= 2.0*min(dot(k.yx,p),0.0)*k.yx;\n    p -= vec2(clamp(p.x,r*k.z,r*k.w),r);\n    return length(p)*sign(p.y);\n}\n\nfloat disc(vec2 uv){\n    float r1 = 0.35, r2= 0.15;\n    float d1 = length(uv) - r1;\n    float d2 = length(uv) - r2;\n    return max(-d2, d1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord / iResolution.xy);\n    p -= 0.5;\n    p.x *= (iResolution.x/iResolution.y);\n    \n    float disc = disc(p);\n    \n    float path_radius = 0.25;\n    float path_thickness = 1.0;\n    float angle = 0.0;    \n    \n    float start_angle = 0.0;\n    float end_angle = 2.0*PI;\n    \n    float time = mod(4.0*iTime/PI, end_angle);\n    //time = time > end_angle ? mod(time, end_angle) : time;\n    \n    angle = smoothstep(start_angle, end_angle, time)*2.0*PI;\n\n    vec2 offset = vec2(sin(angle)*path_radius, -cos(angle)*path_radius);\n\n    p+=offset;\n\n    float star = sdHexagram( p, 0.05 );\n\n    vec3 col = disc > 0.0 ? vec3 (0.) : vec3(sin(iTime+p.x), cos(iTime-p.y), 2.0*sin(iTime/1.73+length(p)));    \n    \n    col = (star > 0.0) ? col : vec3(cos(iTime-p.y+PI/4.0), 2.0*sin(iTime/1.73+length(p)-PI/3.0), sin(iTime+p.x+5.*PI/3.0)) * (1.05 - exp(-35.0*abs(star))) * (0.8 + 0.5*cos(110.0*star));\n    \n       \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}