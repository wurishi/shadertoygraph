{"ver":"0.1","info":{"id":"fdKBDV","date":"1658876788","viewed":83,"name":"Hash 69","username":"maze_maze","description":"A really simple hash function where every number ends with 69\nThe edit of my previous hash https://www.shadertoy.com/view/fdyBDy","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["procedural","noise","perlin","hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Hash 69\n// A really simple hash function where every integer ends with 69\n// Works well with negative numbers\n// And also outputs values in range [-1; 1] without using the sin\n\n// #define noise1D(X) float((X * 676769 ^ X * 53769) * 676769) * 4.656613e-10\nfloat noise1D(int x) {\n    return float((x * 676769 ^ x * 53769) * 676769) * 4.656613e-10;\n}\n\n// #define noise2D(P) float((P.x * 676769 ^ P.y * 53769) * 676769) * 4.656613e-10\nfloat noise2D(ivec2 p) {\n    return float((p.x * 676769 ^ p.y * 53769) * 676769) * 4.656613e-10;\n}\n\n// #define noise3D(P) float((P.x * 676769 ^ P.y * 53769 ^ P.z * 24869) * 676769) * 4.656613e-10\nfloat noise3D(ivec3 p) {\n    return float((p.x * 676769 ^ p.y * 53769 ^ p.z * 24869) * 676769) * 4.656613e-10;\n}\n\nvoid mainImage(out vec4 C, in vec2 U) {\n    ivec2 I = ivec2(U);\n    I += int(iTime * 16.);\n    switch (int(U.x / iResolution.x * 3.)) {\n    case 0:\n        C = vec4(vec3(noise1D(I.x) * .5 + .5), 1.);\n        break;\n    case 1:\n        C = vec4(vec3(noise2D(I) * .5 + .5), 1.);\n        break;\n    case 2:\n        C = vec4(vec3(noise3D(ivec3(I, int(iTime))) * .5 + .5), 1.);\n        break;\n    }\n}","name":"Image","description":"","type":"image"}]}