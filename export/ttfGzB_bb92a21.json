{"ver":"0.1","info":{"id":"ttfGzB","date":"1556697188","viewed":532,"name":"Conway experiments","username":"avin","description":"periodical change rules","likes":9,"published":3,"flags":32,"usePreview":0,"tags":["simple","life","conway","learn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 rand( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 co = ivec2(fragCoord);\n    vec3 col = texelFetch(iChannel0, co, 0).rgb *.9; // stay for motion blur\n    vec2 uv = (fragCoord - iResolution.xy*.5)/iResolution.y;\n    \n    vec2 backRes = texelFetch(iChannel1, ivec2(0,0), 0).xy;\n    if(iFrame == 0 || backRes.xy != iResolution.xy){                \n    \tcol = rand(fragCoord).x > .5 ? vec3(1.) : vec3(0.);           \n    } else {            \n        \n        float orig = texelFetch(iChannel0, co, 0).r;\n        \n        int count = 0;\n        \n        for(int y = -1; y<=1; y+=1){\n            for(int x = -1; x<=1; x+=1){\n                if(!(y==0 && x==0)){\n                    ivec2 target = co+ivec2(x,y);\n                    target.x = int(mod(float(target.x), iResolution.x));\n                    target.y = int(mod(float(target.y), iResolution.y));\n                    \n                    float p = texelFetch(iChannel0, target, 0).r;                    \n                    count += p == 1. ? 1 : 0;\n                }\n            }\n        }\n                \n        float m1 = floor(length(uv) * (sin(iTime*2.)*.5+.5)*5.5);\n        \n        float c = float(count);\n        \n        if((orig != 1. && c == 3. ) || (orig == 1. && (c >= 2. && c <= 3. + m1))){\n            \n        \tcol = vec3(1.);\n        }        \n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Store resolution here to catch resize canvas\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(iResolution.xy,1.0,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}