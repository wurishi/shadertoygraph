{"ver":"0.1","info":{"id":"Md3XDs","date":"1462139369","viewed":126,"name":"Bound detector","username":"gigatron","description":"Another for loop to draw square","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["effect","bound","squaretexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float st=0.02;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 tc=texture(iChannel0,uv).rgb;\n    float t=sin(iTime/1.5);\n     \n    // yet another bound !!\n    for( float ii=0.0;ii<1.0;ii+=st){\n     \n        if(uv.x>st+ii && uv.x<1.0-ii && uv.y>st+ii && uv.y<1.0-ii){\n         tc.r *=sqrt(1.-uv.y)*t;\n      \t tc.g *=sqrt(1.+uv.x)*t;\n         tc.b *=sqrt(1.-uv.x)*t;\n           \n            \n        }\n    }    \n    \n    \n\tfragColor = vec4(tc,1.0);\n}","name":"Image","description":"","type":"image"}]}