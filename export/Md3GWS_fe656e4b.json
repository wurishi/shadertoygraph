{"ver":"0.1","info":{"id":"Md3GWS","date":"1452038657","viewed":231,"name":"Qix multipass","username":"Andre","description":"Test for multipass","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["test","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define StepSize .75\n#define LineCount 23\n\n//Function to draw a line, taken from the watch shader\nfloat line(vec2 p, vec2 a, vec2 b)\n{\n\tvec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n\treturn 0.2*pow(clamp(1.0-length(pa - ba * h),0.0,1.0),13.0)*(12.5-distance(a,b)+abs(h-.5))*.5;\n}\n\nfloat point(vec2 uv, vec2 p, float gt)\n{\n    return pow(clamp(0.44*(2.2-distance(p,uv)),0.0,1.0),30.0+3.0*sin(gt));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) * 10.0 - 5.0;\n\n\tfloat gt = iTime * 5.0;\n    //gt -= mod(gt,StepSize);\n\n\t// Add lines to the pixel\n\tvec4 color = texture(iChannel0,(fragCoord.xy / iResolution.xy)*.98+.01)*5.1;\n    vec2 point3 = 2.3 * vec2(sin(gt * 0.39), cos(gt * 0.63)) + 1.7*vec2(sin(gt * 0.27), cos(gt * 0.33));\n\tfor (int i = 0; i < LineCount; i++)\n\t{\n\t\tgt += StepSize;\n        gt -= sin(gt * (1.7+sin(0.1*iTime)))*.15;\n\n\t\t//Calculate the next two points\n\t    vec2 point1 = 2.3 * vec2(sin(gt * 0.39), cos(gt * 0.63)) + 1.7*vec2(sin(gt * 0.27), cos(gt * 0.33));\n\t  \tvec2 point2 = 2.3 * vec2(cos(gt * 0.69), sin(gt * 0.29)) + 1.7*vec2(sin(gt * 0.19), cos(gt * 0.23));\n\n\t\t// Fade older lines\n\t\tcolor.rgb = 0.93  * color.rgb;\n\n\t\t// Add new line\n\t\tcolor.rgb += (point(uv, point1, gt)\n                     +line(\tuv,\n\t\t\t\t\t\t\tpoint1, point2)\n                     +point(uv, point2, gt))\n\t\t\t\t\t//With color\n\t\t\t\t\t* ( 0.5 +\n\t\t\t\t\t\t0.5 * (vec3(sin(float(i) * 112.13),\n\t\t\t\t\t\t\t\t\tsin(float(i) * 131.39),\n\t\t\t\t\t\t\t\t\tcos(float(i) * 122.67))));\n        point3 = point1;\n    }\n\n\t// Clamp oversaturation\n\tfragColor = clamp(pow(color,vec4(1.31))*.89, 0.0, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}