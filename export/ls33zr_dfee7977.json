{"ver":"0.1","info":{"id":"ls33zr","date":"1447704614","viewed":277,"name":"xy2rgb3,rgb3toxy2?","username":"bpt","description":"an attempt to generate some useful utilities for my shaders (gotta start somewhere right :) ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rgb","xy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec3 xy2rgb3( in vec2 pos ) {\n    #if 1\n\t\tvec2 modpos = fract( pos *= 8. );\n\t\treturn vec3( dot( pos -= modpos, vec2( 1./64., 1./8. )), modpos );\n    #else\n        vec2 rc = pos * 8.0;\n        vec2 mp = fract( rc );\n        rc = (rc - mp) * 0.125;\n        return vec3( (rc.y * 0.125) + rc.x, mp );\n    #endif\n}\n\nvec2 rgb3toxy2( in vec3 rgb ) {\n    rgb *= vec3( 8.0, 0.125, 0.125);\n    float f8 = fract( rgb.r );\n    return rgb.yz + vec2( (rgb.r - f8) * 0.125, f8 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    fragColor = vec4( xy2rgb3( rgb3toxy2( xy2rgb3( fragCoord.xy / iResolution.xy ) ) ), 1.0 );\n}\n","name":"","description":"","type":"image"}]}