{"ver":"0.1","info":{"id":"3tGfDm","date":"1614434655","viewed":295,"name":"Motion Tracker","username":"Draedrus","description":"Motion Tracker, Aliens","likes":7,"published":1,"flags":8,"usePreview":0,"tags":["alien","draw","motion","shape","tracker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// pierre.plans@gmail.com\n\nvec4 char(vec2 uv, vec2 p, int c, float s) \n{\n    vec2 co = (uv-p)*32./s;\n    int cx = c%16;\n    if(co.x<0. || co.y<0. || co.x>1.0 || co.y>1.) return vec4(0.);\n    co/=16.;\n    co += fract(vec2(float(cx)/16., 1.-float(c-cx)/256. ));\n\treturn texture( iChannel0, co);\n}\n\nfloat circle(vec2 uv, vec2 o, float r)\n{\n    return clamp(abs(length((uv-o))-r), 0., 1.);\n}\n\nfloat segment(vec2 uv, vec2 p1, vec2 p2, float r)\n{\n    vec2 d = p2-p1;\n    float t = clamp(dot(uv-p1, d)/max(0.001, d.x*d.x+d.y*d.y), 0., 1.);\n    vec2 proj = p1+t*(p2-p1);\n    return clamp(abs(length(proj-uv)-r), 0., 1.);\n}\n\nfloat rect(vec2 uv, vec2 s, float r)\n{\n    return clamp(length(max(abs(uv)-s, 0.))-r, 0., 1.);\n}\n\n#define PI 3.14\n#define PI2 6.28\n\nfloat renderScreenLines(vec2 uv)\n{\n    float v = 0.;\n    vec2 ar = vec2(0.7, 0.8);\n    v += pow(1.-circle(uv, vec2(0.), 0.6), 128.);\n    v += pow(1.-circle(uv, vec2(0.), 0.3), 128.);\n    for(int i = 0; i < 4; ++i)\n    {\n        float x = cos(float(i)*0.25*PI2);\n        float y = sin(float(i)*0.25*PI2);\n        v += pow(1.-segment(uv, 0.3*vec2(x, y), 0.63*vec2(x, y), 0.001), 128.);\n        \n        x = cos(float(i)*0.25*PI2+PI*0.25);\n        y = sin(float(i)*0.25*PI2+PI*0.25);\n        v += pow(1.-segment(uv, 0.25*vec2(x, y), 0.6*vec2(x, y), 0.001), 256.);\n        v += pow(1.-circle(uv, 0.235*vec2(x, y), 0.01), 256.);\n        \n        x = cos(float(i)*0.25*PI2+PI*0.135);\n        y = sin(float(i)*0.25*PI2+PI*0.135);\n        v += pow(1.-circle(uv, 0.585*vec2(x, y), 0.01), 256.);\n        x = cos(float(i)*0.25*PI2+PI*0.365);\n        y = sin(float(i)*0.25*PI2+PI*0.365);\n        v += pow(1.-circle(uv, 0.585*vec2(x, y), 0.01), 256.);\n        \n        x = cos(float(i)*0.25*PI2+PI*0.105);\n        y = sin(float(i)*0.25*PI2+PI*0.105);\n        v += pow(1.-circle(uv, 0.315*vec2(x, y), 0.01), 256.);\n        x = cos(float(i)*0.25*PI2+PI*0.395);\n        y = sin(float(i)*0.25*PI2+PI*0.395);\n        v += pow(1.-circle(uv, 0.315*vec2(x, y), 0.01), 256.);\n    }\n    float az = acos(dot(normalize(uv), vec2(0., 1.)));\n    v += (sin(4.*az+PI*1.5)>0.?1.:0.)*pow(1.-circle(uv, vec2(0.), 0.57), 128.);\n    for(int i = 0; i < 8; ++i)\n    {\n        float x = cos(float(i)*0.125*PI2+PI*0.125);\n        float y = sin(float(i)*0.125*PI2+PI*0.125);\n        v += pow(1.-segment(uv, 0.63*vec2(x, y), 0.57*vec2(x, y), 0.001), 256.);\n        v += pow(1.-segment(uv, 0.36*vec2(x, y), 0.3*vec2(x, y), 0.001), 256.);\n    }\n    v += (cos(4.*az)>0.?1.:0.)*pow(1.-circle(uv, vec2(0.), 0.33), 128.);\n    \n    return v;\n}\n\nfloat dotp(vec2 uv, vec2 p)\n{\n    return pow(clamp(1.-(length(uv-p)), 0., 1.), 32.);\n}\n\nfloat map(vec2 uv)\n{\n    return max(dotp(uv, vec2(-0.5, 0.2)), dotp(uv, vec2(0.2, 0.3)));\n}\n\nfloat remap(float x, float mo_, float _mo, float mn_, float _mn)\n{\n    return mn_+(_mn-mn_)*(x-mo_)*(_mo-mo_);\n}\n\nfloat remap01(float x, float mo_, float _mo)\n{\n    return (x-mo_)*(_mo-mo_);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float a = iResolution.x/iResolution.y;\n    vec2 ouv = fragCoord/iResolution.xy;\n    vec2 uv = ouv;\n    uv.x *= a;\n\n    vec3 col = vec3(0.);\n\n    float c = cos(0.4*sin(iTime)), s = sin(0.4*sin(iTime));\n    mat2 r = mat2(c, -s, s, c);\n    vec2 cuv = r*(uv-vec2(a*0.5, 0.2));\n    col += vec3(0.1, 0.3, 0.6)*renderScreenLines(cuv);\n    \n    float ls = signal(-iTime);\n    col += ls*pow(1.-circle(cuv, vec2(0.), ls), 8.);\n    \n    col += vec3(0.1, 0.3, 0.6)*pow(1.-rect(uv, vec2(a, 0.11), 0.01), 512.);\n    \n    vec2 ct = vec2(0.47*a, 0.1);\n    col+=vec3(0.6, 0.3, 0.1)*mix(char(uv, ct-vec2(0.03, 0.), 64, 4.).r, char(uv, ct-vec2(0.03, 0.), 72, 4.).r, min(1., log(1.+ls)));\n    col+=vec3(0.6, 0.3, 0.1)*char(uv, ct+vec2(0.03, 0.), 125, 4.).r;\n    \n    float m = map(cuv);\n    col += max(0., remap01(ls, 0.2, 1.)*m);\n    \n    // glass\n    float bb = 1.-rect(uv-vec2(0.5*a, 0.5), vec2(a*.4, 0.3), 0.10);\n    float b = 1.-pow(bb, 128.);\n    vec3 n = vec3(max(0.5, b)*(ouv.x-0.5)+1.5*(ouv.x-0.5), 1.+.3*sin(iResolution.x*uv.x-iResolution.y*uv.y)*b, max(0.5, b)*(ouv.y-0.5)+1.5*(ouv.y-0.5));\n    n = normalize(n);\n    float f = 0.08+0.92*pow(1.-dot(n, vec3(0., 1., 0.)), 2.);\n    //f = max(0., f-b);\n    \n    col.rgb = mix(col, vec3(0.3, 0.4, 0.1)*b, b);\n    vec3 L = normalize(vec3(0.6, 0.8, 0.2));\n    L.xz = r*L.xz;\n    col += f*5.*pow(max(0., dot(n, L)), 32.)+0.18*max(0., dot(n, L))*(1.-b);\n    //col = n;\n    //col = vec3(f);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// pierre.plans@gmail.com\n#define SF 30.\nvec2 mainSound( int samp, float time )\n{\n    float base = sin(SF*440.*time)*signal(-time)/SF;\n    return vec2( clamp(base, -1., 1.) );\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"// pierre.plans@gmail.com\n\n#define FREQ_SIGNAL 0.5\nfloat signal(float t)\n{\n    return exp(-(4./FREQ_SIGNAL)*fract(FREQ_SIGNAL*t));\n    //return pow(fract(FREQ_SIGNAL*t), 8.);\n}","name":"Common","description":"","type":"common"}]}