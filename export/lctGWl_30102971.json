{"ver":"0.1","info":{"id":"lctGWl","date":"1712264282","viewed":38,"name":"Sphere_Meer","username":"Mariya","description":"sphere","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 BGCol = vec3(0.0, 0.5, 0.6);\n\n//Sets size of the sphere and brightness of the shine\nfloat sphereScale = 0.7;\nfloat sphereShine = 0.4;\n\nvec3 sphereDiff = vec3(0.55, 0.0, 0.59); //color of the sphere\nvec3 sphereSpec = vec3(1.0, 1.0, 1.0); //color of the glare\n//vec2 specPoint = vec2(0.0, 0.0); glare in (0.0, 0.0)\nvec2 specPoint = vec2(0.3, -0.1);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tvec2 p = uv * 2.7 - 1.3; //the position of the camera\n\tp.x *= iResolution.x / iResolution.y;\n\t\n//\t1)    move of camera\n    //p.x += cos(-iTime) * 0.75;\n    //p.y += sin(-iTime) * 0.35;\n\t\n//  2)    move of glare\n\tspecPoint.x += cos(-iTime) * 0.25;\n\tspecPoint.y += sin(-iTime) * 0.35;\n\t\n\t//sets the radius of the sphere to the middle of the screen\n\tfloat radius = sqrt(dot(p, p));//dot - vector multiplication\n\t\n\tvec3 col = BGCol;\n\t\n\t//Sets the initial dark shadow around the edge of the sphere\n\tfloat f = smoothstep(sphereScale * 0.9, sphereScale, length(p + specPoint));\n\tcol -= mix(col, vec3(0.0), f) * 0.2;\n    //mix(x,y,a) = х * (1.0 - а) + у * а\n\t\n\t//painting the sphere\n\tif(radius < sphereScale) {\n\t\tvec3 bg = col;\n\t\t\n\t\t//sets the diffuse colour of the sphere (solid colour)\n\t\tcol = sphereDiff;\n\t\t\n\t\t//adds smooth dark borders to help achieve 3D look\n\t\tf = smoothstep(sphereScale * 0.45, sphereScale, radius);\n\t\tcol = mix(col, sphereDiff * 0.45, f);\n\n\t\t\n\t\t//Adds specular glow to help achive 3D look\n\t\tf = 1.0 - smoothstep(-0.3, 0.7, length(p - specPoint));\n        //for a brighter glare, reduce 1 parametr (low)\n\t\tcol += f * sphereShine * sphereSpec;\n\t\t\n\t\t//Smoothes the edge of the sphere\n\t\tf = smoothstep(sphereScale - 0.01, sphereScale, radius);\n\t\tcol = mix(col, bg, f);\n\t}\t\n\t\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}