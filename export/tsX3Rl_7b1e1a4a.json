{"ver":"0.1","info":{"id":"tsX3Rl","date":"1547185303","viewed":285,"name":"DOOM PSX Fire","username":"OccamsLaser","description":"http://fabiensanglard.net/doom_fire_psx/index.html","likes":6,"published":1,"flags":96,"usePreview":0,"tags":["fire","doom","psx"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XtsGzM","filepath":"https://soundcloud.com/user-955630316/doom-psx-ost-level-21-mt-erebus","previewfilepath":"https://soundcloud.com/user-955630316/doom-psx-ost-level-21-mt-erebus","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const ivec3 palette[37] = ivec3[37](ivec3(0x07,0x07,0x07),\n                                    ivec3(0x1F,0x07,0x07),\n                                    ivec3(0x2F,0x0F,0x07),\n                                    ivec3(0x47,0x0F,0x07),\n                                    ivec3(0x57,0x17,0x07),\n                                    ivec3(0x67,0x1F,0x07),\n                                    ivec3(0x77,0x1F,0x07),\n                                    ivec3(0x8F,0x27,0x07),\n                                    ivec3(0x9F,0x2F,0x07),\n                                    ivec3(0xAF,0x3F,0x07),\n                                    ivec3(0xBF,0x47,0x07),\n                                    ivec3(0xC7,0x47,0x07),\n                                    ivec3(0xDF,0x4F,0x07),\n                                    ivec3(0xDF,0x57,0x07),\n                                    ivec3(0xDF,0x57,0x07),\n                                    ivec3(0xD7,0x5F,0x07),\n                                    ivec3(0xD7,0x5F,0x07),\n                                    ivec3(0xD7,0x67,0x0F),\n                                    ivec3(0xCF,0x6F,0x0F),\n                                    ivec3(0xCF,0x77,0x0F),\n                                    ivec3(0xCF,0x7F,0x0F),\n                                    ivec3(0xCF,0x87,0x17),\n                                    ivec3(0xC7,0x87,0x17),\n                                    ivec3(0xC7,0x8F,0x17),\n                                    ivec3(0xC7,0x97,0x1F),\n                                    ivec3(0xBF,0x9F,0x1F),\n                                    ivec3(0xBF,0x9F,0x1F),\n                                    ivec3(0xBF,0xA7,0x27),\n                                    ivec3(0xBF,0xA7,0x27),\n                                    ivec3(0xBF,0xAF,0x2F),\n                                    ivec3(0xB7,0xAF,0x2F),\n                                    ivec3(0xB7,0xB7,0x2F),\n                                    ivec3(0xB7,0xB7,0x37),\n                                    ivec3(0xCF,0xCF,0x6F),\n                                    ivec3(0xDF,0xDF,0x9F),\n                                    ivec3(0xEF,0xEF,0xC7),\n                                    ivec3(0xFF,0xFF,0xFF));\n\nvoid mainImage( out vec4 frag_color, in vec2 frag_coord ) {\n    frag_coord = (frag_coord/iResolution.xy)*vec2(320.0,200.0);\n    frag_color = vec4(vec3(palette[int(texelFetch(iChannel0, ivec2(frag_coord), 0).x)])/255., 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(float n) {\n    return fract(sin(n)*43758.5453123);\n}\n\nvec2 hash2(vec2 p) {\n\treturn fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n\nivec2 gen_coord(vec2 frag_coord) {\n    vec2 rng = hash2(frag_coord+vec2(iTime));\n    \n    ivec2 below = ivec2(3.*rng.x-2.,2.*rng.y);\n    ivec2 below_coord = ivec2(frag_coord)-below;\n    \n    below_coord.y = max(0, below_coord.y);\n    below_coord.x = (below_coord.x + 320) % 320;\n    \n    return below_coord;\n}\n\nvoid mainImage(out vec4 frag_color, in vec2 frag_coord) {\n    \n    if(frag_coord.x > 320. || frag_coord.y > 200.) \n        discard;\n    \n    ivec2 below_coord = gen_coord(frag_coord);\n    \n    vec4 data = texelFetch(iChannel0, below_coord, 0);\n    \n    float decay = rand(iTime+frag_coord.x*frag_coord.y);\n    if(decay > 0.85 || frag_coord.y < 1.) {\n    \tdata.x -= 1.;\n    }\n    \n    if(frag_coord.y < 1. && mod(iTime,20.) < 13.) {\n        frag_color = vec4(37.,0.,0.,0.);\n    } else {\n    \tfrag_color = vec4(data.x,0.,0.,0.);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}