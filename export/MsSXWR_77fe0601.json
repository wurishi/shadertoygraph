{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":3,"type":"music","id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"float time;\nvec3  pos2;\n\nvec3 rotate(vec3 r, float v){ return vec3(r.x*cos(v)+r.z*sin(v),r.y,r.z*cos(v)-r.x*sin(v));}\nvec3 sqr(vec3 a){return a*a;}\nfloat terrain(vec3 pos, float myTime){   \n    vec3 o = pos;\n    //pos.y -= sin(pos.z*0.01)*10.0;\n    time += (o.x)*0.00001 ;//+ sin(pos.z*0.00001);\n    //time -= (o.y)*0.000005 ;\n    pos.y += (1.0 + 0.1*sin(pos.z*0.01))*100.0;\n    pos2.xz = pos.xz = mod(pos.xz,3200.0)-1600.0;\n    pos2.xz = pos.xz = mod(pos.xz,1600.0)-800.0;\n\tpos2.xz = pos.xz = mod(pos.xz,800.0)-400.0;\n    pos2.xz = pos.xz = mod(pos.xz,400.0)-200.0;\n\tpos.xyz = rotate(pos.xyz,pos.z*0.003+pos.x*0.001+time*0.1);\n\tpos.xzy  = abs(pos.xyz)-50.0 + sin(myTime*0.3+1.3)*50.0;\n\treturn \t60.0 + sin(pos.x*0.12+myTime)*sin(pos.y*0.14+myTime)*sin(pos.z*0.11+myTime)*5.0 - length(pos);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    time        = iTime*1.0;\n\n    vec2 uv     = fragCoord.xy/(iResolution.xx*0.5)-vec2(1.0+cos(time*0.3)*0.4,0.9);\n         float music = texture( iChannel3, uv ).r;\n    float musicspace = music*22.0;\n    vec3 ray    = normalize(vec3(uv.x,uv.y,0.7));\n    vec3 campos = vec3(cos(time*0.32),sin(time*0.5)*20.0-300.0,cos(time*0.1)*500.0);\n    vec3 pos    = campos;\n    pos.z -= iTime*100.0;\n    float test  = 0.0;\n    float test1 = 0.0;\n    float test2 = 0.0;\n    float test3 = 0.0;\n    float test4 = 0.0;\n    float trans = 0.0;\n    float transScale = 90.0/60.0;\n   \n    //pos.z += sqrt(music)*100.0;//*(abs(sin(iTime*0.1))+0.5);\n//-music*-122.0;\n\tfor(int i=0;i<90;i++){\n        vec3 p0 = pos;\n        p0.y -= sin(pos.z*0.01)*10.0;\n       // p0.y -= sin(p0.z*0.01)*180.0;\n        float myTime = time + p0.x*0.01;\n        float wastime = time;\n        p0.y *= (1.0 + 0.75*sin(p0.z*0.2)*iTime*0.0001);//*(1.0 + 0.15*sin(music));\n       // p0.z += music*100.0;\n        float t0 = terrain(p0, myTime + music);\n        time = wastime;\n        vec3 pos2 = p0;pos2.y*=3.63;pos2.xz *= 22.0;\n\n        float t1 = terrain(pos2 + rotate(vec3(25.0,75,-35.0), iTime*1.0), myTime);\n     //   t1+=music;\n\t\tvec3 pos3 = pos;pos3.y*=5.1163;pos3.xz *= .1222;\n        float t2 = terrain(pos3 + rotate(vec3(225.0,275,-35.0+sin(pos3.z)*5.0), music*1.0+iTime*0.2+100.0), time + pos3.x*0.01);\n        \n        vec3 pos4 = p0;pos4.y*= 1.20;pos4.xz /= 22.0;// 0.1;//22.0;\n        float t3 = terrain(pos4 + rotate(vec3(25.0,15.0,00.0), -iTime*2.5),-music+ myTime);\n        \n   \n        test = max(t0,t1);\n        test = min(test,-t2);\n        test = max(test,t3);\n  \n        test1 = t0;\n        test2 = t1;\n        test3 = t2;\n        test4 = t3;\n        \n       // test *= (0.5 + (music*music)*0.5);\n       // max(test, test/musicspace);\n        //if(test >50.0){transScale = float(i)/60.0;break;}\n      //  test = max(test,-0.01);\n        pos += ray*clamp((test*0.2131353125),-50.0,-2.0);\n        trans += smoothstep(0.0,4.0,abs(test));\n    }\n\ttrans /= transScale;\n\n    vec3 shells = texture( iChannel2, uv ).rgb;\n    vec3 cat = texture( iChannel0, uv ).rgb;\n    vec3 roots = texture( iChannel1, uv ).rgb;\n    vec3 barf = texture( iChannel1, vec2(0.5, pos.z*0.00001) ).rgb;\n    //test *= (0.5 + (music*music*music*music*music)*0.5);\n    // test *= (0.5 + (music*music)*0.5);\n    // test1 *= (0.5 + (music*music)*0.5);\n    //  test4 *= (0.5 + (music*music)*0.5);\n\tfloat c1 = smoothstep(-0.2,7.0,test2*0.2);\n\tfloat c2 = smoothstep(-0.0,70.0,test1);\n\tfloat c3 = smoothstep(70.0,45.0,trans);\n    float c4 = smoothstep(-0.0,50.0,test4);\n    //vec3(0.93,0.9,0.2)\n  //  vec3 catcolor = cat;\n    float dd = (mod(iTime+94.0+music*10.0,100.0)-0.0)*0.01;\n    vec3 maincolor = mix(vec3(0.51,0.73,1.1), vec3(0.711,0.723,0.3), clamp(dd*dd,0.0,1.0));\n    vec3 col =  c2*max(vec3(1.37,0.2,0.1),shells) + sqr((c3*maincolor+(c3*barf))*1.5) + c1*roots*vec3(5.9*music,0.2,0.0)+ sqrt(c4)*vec3(0.13,2.0*music,0.0) +roots*0.2;\n\tfragColor = vec4(col-dot(uv,uv)*0.4,1.0);\n}\n","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\nfloat makeSound(vec3 s, float speed){\n     float o = 0.0;\n     o+= sin(s.r*1900.0*speed);\n     o+=sin(s.r*2900.0*speed)*0.1;\n     o+=sin(s.g*900.0*speed)*0.1;\n     o-=abs(sin(s.g*32323.14))*0.215;\n\treturn o;\n}\n\nvec2 getUV(float time, float scale){\n    float row = scale;\n    float u = time / row;\n    float v = mod(time, row);\n    return vec2(u,v)/row;\n}\nvec2 mainSound( in int samp,float time)\n{\n    time        = time*1.0;\n\n  \n   // float music = texture( iChannel3, vec2(time,time) ).r;\n    \n    //i don't know anything about sound, this sounds terrible;0\n\tfloat tb = mod(time * 9.0, 16.0);\n    float tb2 = mod(time * 3.0, 126.0)-10.0;\n    float tb3 = abs(mod(time * 8.0, 256.0));\n    vec3 sounds = texture( iChannel0, getUV(time, 5.0*tb)).rgb;\n    vec3 sounds2 = texture( iChannel1, getUV(time, 5.0*tb2)).rgb;\n    vec3 sounds3 = texture( iChannel1, getUV(time, 15.0*tb3)).rgb;\n    float badsound = makeSound(sounds.rgb,0.13)*0.125  +\n        \t\t\t(makeSound(sounds2,0.22))*0.12 + \n        \t\t\t ceil(makeSound(sounds3,0.00012))*0.01;\n    \n   //\tfloat what = abs(mod(time * 0.1, 3.0)-1.5);\n    //badsound *= (ceil(badsound) - what);\n  \tbadsound =0.0;// pow(badsound+.5,3.0);\n    // how sounds works? just typing random stuff--\n    return vec2(cos(badsound) ,sin(badsound) ) ;\n    //*sin(6.2831*440.0*time)*exp(-3.0*time)\n}","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsSXWR","date":"1410749226","viewed":1411,"name":"happy jellys","username":"Dain","description":"the jelly are pleased \nstarted from ztri' cell shader\nlearning shader toy\nthe sound of jellyfish--or..","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["sin","jelly","repeat"],"hasliked":0,"parentid":"","parentname":""}}