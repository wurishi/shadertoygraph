{"ver":"0.1","info":{"id":"MddGzn","date":"1447842462","viewed":177,"name":"Hello metaballs!","username":"danim","description":"Little practice with metaballs.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["metaballs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Tweak seed values\n#define INITIAL_POSITION_SEED 3.141592\n#define RADIUS_SEED 2.0\n#define RADIUS_MAX 0.2\n#define METABALLS 15\n#define METABALL_THRESHOLD 4.\n#define THRESHOLD_ERROR 0.05\n\n\nfloat hash(float seed)\n{\n\t// Return a \"random\" number based on the \"seed\"\n    return fract(sin(seed) * 43758.5453);\n}\n\nvec2 metaball_position( int metaball )\n{\n    float x = hash( pow(float(metaball),4.) + INITIAL_POSITION_SEED );\n    float y = hash( x );\n    float a = hash( x + y );\n    float b = x + y + a;\n    return vec2( x + 0.5 * cos( a * iTime ), hash( x ) + 0.5 * sin( b * iTime ) );\n}\n\nfloat metaball_radius( int metaball )\n{\n    float r = hash( pow(float(metaball),2.) + RADIUS_SEED );\n    return min( r, RADIUS_MAX );\n}\n\nfloat metaball_function( in vec2 center, float radius, in vec2 p )\n{\n    vec2 r = p - center;\n    //return radius / length(r); // 1 / r\n    return (radius * radius) / dot( r,r ); // 1 / r^2\n    \n    //R / ( |x-x0| + |y-y0| )\n    //return radius / ( abs(r.x) + abs(r.y) );\n    \n    // try other functions\n\t// (1-r^2)^2\n    //r^4 - r^2 + 0.25\n\t//6r^5 - 15r^4 + 10r^3\n}\n\n// debugging purposes\nfloat disk( in vec2 center, float radius, in vec2 p )\n{\n    return 1. - smoothstep( radius - 0.01, radius + 0.01, length( p - center ) );\n    //return 1. - step( radius, length( p - center ) );\n}\n\n/*vec4 metaball_color( int metaball, in vec2 p )\n{\n    return vec4(p,0.5+0.5*sin(iTime),1.0);\n}*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    \n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    //fragColor = vec4( 1. );\n    float f = 0.;\n    float t = 0.;\n    for( int i = 0; i < METABALLS; ++i )\n    {\n        vec2 mp = metaball_position( i );\n        float mr = metaball_radius( i );\n        f += disk( mp, mr, uv );\n        t += metaball_function( mp, mr, uv );\n    }\n    \n    float e = smoothstep( METABALL_THRESHOLD - THRESHOLD_ERROR, METABALL_THRESHOLD + THRESHOLD_ERROR, t );\n    if( e > 0. && e < 1. )\n    {\n        fragColor = vec4( 0.0 );\n        return;\n    }\n    \n    f = clamp( f, 0., 1. );\n    fragColor = fragColor * f + (1.-f) * vec4( 1. );\n}","name":"","description":"","type":"image"}]}