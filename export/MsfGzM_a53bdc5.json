{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Created by inigo quilez - iq/2013\n//   https://www.youtube.com/c/InigoQuilez\n//   https://iquilezles.org/\n// I share this piece (art and code) here in Shadertoy and through its Public API, only for educational purposes. \n// You cannot use, sell, share or host this piece or modifications of it as part of your own commercial or non-commercial product, website or project.\n// You can share a link to it or an unmodified screenshot of it provided you attribute \"by Inigo Quilez, @iquilezles and iquilezles.org\". \n// If you are a teacher, lecturer, educator or similar and these conditions are too restrictive for your needs, please contact me and we'll work it out.\n\nfloat f( vec3 p )\n{ \n\tp.z += iTime;\n    return length(      cos(p)\n                  + .05*cos(9.*p.y*p.x)\n                  - .1 *cos(9.*(.3*p.x-p.y+p.z))\n                  ) - 1.; \n}\n\nvoid mainImage( out vec4 c, in vec2 p )\n{\n    vec3 d = .5-vec3(p,1)/iResolution.x, o = d;\n    \n    for( int i=0; i<256; i++ )\n        o += f(o)*d;\n        \n    c = vec4(0,1,2,3);\n    c = abs( f(o-d)*c + f(o-.6)*c.zyxw )*(1.-.1*o.z);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsfGzM","date":"1368753476","viewed":41556,"name":"Two Tweets","username":"iq","description":"Inspired by Nautilus. An experiment on how far I could go in just 280 characters, the size of 2 tweets.\n\nMore info: [url]http://iquilezles.org/articles/derivative/derivative.htm[/url]","likes":101,"published":3,"flags":0,"usePreview":0,"tags":["3d","raymarching","distancefield"],"hasliked":0,"parentid":"","parentname":""}}