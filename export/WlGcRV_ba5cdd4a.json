{"ver":"0.1","info":{"id":"WlGcRV","date":"1611308582","viewed":112,"name":"Rotational warp","username":"AugustYadon","description":"mouse x controls input for the amount of warp","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["warp","arc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate_point(vec2 pivot,float angle, vec2 p)\n{\n  float s = sin(angle);\n  float c = cos(angle);\n\n  // translate point back to origin:\n  p.x -= pivot.x;\n  p.y -= pivot.y;\n\n  // rotate point\n  float xnew = p.x * c - p.y * s;\n  float ynew = p.x * s + p.y * c;\n\n  // translate point back:\n  p.x = xnew + pivot.x;\n  p.y = ynew + pivot.y;\n  return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mouse = iMouse.xy / iResolution.y;\n    \n    //TODO NOTES https://docs.google.com/document/d/1ACI0bfryoB1UL-xjhrqBeiurXb0eaAz8c1ynPdR9AKM/edit?usp=sharing\n    vec2 pivot = vec2(0.5,0.9);//mouse\n    float angle = 3.*0.25*mouse.x;//*sin(iTime);\n    float bend = angle*.3; //mouse.x;\n    vec2 newuv = rotate_point(pivot, angle * (uv.x - pivot.x), uv);\n    \n    newuv.x = newuv.x + (-bend*(uv.x-pivot.x));\n    vec4 col = texture(iChannel0,newuv);\n\n    // Output to screen\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}