{"ver":"0.1","info":{"id":"lXlfzS","date":"1728570894","viewed":252,"name":"Magic bubbles 2","username":"ChunderFPV","description":"I made the bubbles a bit more bubbly & am using the repeating movement pattern for this one.","likes":28,"published":1,"flags":32,"usePreview":0,"tags":["fractal","circles","blur","fibonacci"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Magic bubbles\" by ChunderFPV. https://shadertoy.com/view/Mf23W1\n\n// zoom blur\n// jitter method from https://www.shadertoy.com/view/MXlyW8\nfloat hash12(vec2 u)\n{\n\tvec3 p = fract(u.xyx * .1031);\n    p += dot(p, p.yzx + 33.33);\n    return fract((p.x + p.y) * p.z);\n}\n\n#define H(a) (cos(radians(vec3(0, 60, 120))+(a)*6.2832)*.5+.5)  // hue\n#define T(p) texture(iChannel0, mix(u, m, (i+j)/l*p)).rgb       // scale texture\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 R = iResolution.xy,\n         m = (iMouse.z > 0.) ? iMouse.xy/R: vec2(.5),\n         u = U/R;\n    \n    vec3 c = texture(iChannel0, u).rgb;\n    \n    float l = 15.,  // scale loop\n          j = hash12(U + iTime),  // jitter\n          i = 0.;\n    \n    for (; i<l; i++)\n        c += T(1.) * H(1.-i/l) * .1;\n    \n    C = vec4(tanh(c*c), 1);\n    //C = texture(iChannel0, u);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define A(v) mat2(cos((v*3.1416)+vec4(0, -1.5708, 1.5708, 0)))      // rotate\n#define H(a) (cos(radians(vec3(0, 90, 180))+(a)*6.2832)*.5+.5)      // hue\n#define O(x,a,b) (smoothstep(0., 1., cos(x*6.2832)*.5+.5)*(a-b)+b)  // oscillate x between a & b\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float t = iTime/20.,\n          s = O(t/2., 4., 2.4), // scale\n          l = 10., i = 0., r, j;\n    \n    vec2 R = iResolution.xy,\n         m = (iMouse.xy-R/2.)/R.y*s,\n         u = (U-R/2.)/R.y*s;\n    \n    if (iMouse.z < 1.)\n        m = sin(t*6.2832 + vec2(0, 1.5708)), // move in circle\n        m.x *= 2.058; // stretch x\n    \n    vec3 k, c = vec3(0, 1, 2)/15.; // background\n    \n    for (; i<l; i++)\n    {\n        r = length(u);  // radius\n        j = i/l;  // step ratio\n        k = H(r-j)*2.;  // color\n        c += pow(min(r, 1./r), 25.) * k * .1; // rings\n        c += min(.1/length(u/sqrt(max(1.-dot(u, u), 0.))-m), 1.) * k;  // light\n        mat2 a = A((i+1.)*t);  // rotation matrix\n        u *= 1.618*a;  // scale & rotate\n        m *= 1.618*a;\n        u.x = abs(u.x)-1.272;  // shift x\n        m.x = abs(m.x)-1.272;\n        c += min(1., .02/length(abs(u)-vec2(0, 1))) * (H(j-t*2.)+.5);  // points\n    }\n    C = vec4(c, 1);\n}","name":"Buffer A","description":"","type":"buffer"}]}