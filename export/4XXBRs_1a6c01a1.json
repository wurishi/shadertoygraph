{"ver":"0.1","info":{"id":"4XXBRs","date":"1728751518","viewed":78,"name":"baby's first domain warp","username":"deehoff","description":"hi","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","noise","fbm","warping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FBMSPEED vec2(0.05,0.05)\n#define SCALE .25\n#define RADIUS .1\n#define ROTATIONSPEED .0\n\n#define VIGNETTE\n#define MIRROR\n\n//#define TIME ( iTime + cos(iTime)*.5 )\n#define TIME ( iTime + smoothstep(-1.,1.,cos(iTime)) )\n\n\nfloat hash(in vec2 co)\n{\n\treturn fract(sin(dot(co.xy ,vec2(12.9898,58.233))) * 13758.5453);\n}\nfloat noise(vec2 p)\n{\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\tfloat res = mix(\n\t\tmix(hash(ip),hash(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(hash(ip+vec2(0.0,1.0)),hash(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\nfloat fbm( in vec2 x )\n{   \n\tconst float H = 0.8;\n\tfloat G = exp2(-H);\n\tfloat f = 1.0;\n\tfloat a = 1.0;\n\tfloat t = 0.0;\n\tfor( int i=0; i<12; i++ )\n\t{\n\t\tt += a*noise(f * x - TIME * FBMSPEED);\n\t\tf *= 2.0;\n\t\ta *= G;\n\t}\n\t//return t;\n\treturn smoothstep(0.,1.8,t);\n}\n\n// https://iquilezles.org/articles/warp/\nfloat domainwarp( in vec2 p )\n{\n\tvec2 q = vec2( fbm( p + vec2(0.0,0.0) ),\n\t\t\t\tfbm( p + vec2(5.2,1.3) ) );\n\tvec2 r = vec2( fbm( p + 4.0*q + vec2(1.7,9.2) ),\n\t\t\t\tfbm( p + 4.0*q + vec2(8.3,2.8) ) );\n\treturn fbm( p + 4.0*r );\n}\n        \nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\n// https://iquilezles.org/articles/palettes/\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nmat2 rot2d(in float angle)\n{\n\tfloat c = cos(angle);\n\tfloat s = sin(angle);\n\treturn mat2(c, -s, s, c);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = 2. * (uv - vec2(.5,.5)) * SCALE;\n    p.x *= iResolution.x/iResolution.y;\n    \n    p *= rot2d(TIME*ROTATIONSPEED);\n    \n    \n    float sdf = sdCircle(p,RADIUS);\n    \n    #ifdef MIRROR\n    float fbm = domainwarp(abs(p)+cos(sdf));\n    #else\n    float fbm = domainwarp(p+cos(sdf));\n    #endif\n    \n    float fbmsdf = clamp(fbm+sdf,0.0,0.9);\n    \n    float vig = smoothstep(0.9,0.0,length(p));\n    \n    vec3 colP = pal( fbmsdf, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.10,0.20) );\n    \n    #ifdef VIGNETTE\n    colP *= vig;\n    #endif\n    \n    fragColor = vec4(colP,1.0);\n}","name":"Image","description":"","type":"image"}]}