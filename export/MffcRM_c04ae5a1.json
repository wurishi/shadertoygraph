{"ver":"0.1","info":{"id":"MffcRM","date":"1720963005","viewed":45,"name":"Volcano Under Starry Night","username":"Huihui_","description":"Homework for color, random.\nStar learning from Youtube - Shader Coding: Making a starfield \nsome background grid？\nThe star can go through gird, but the glow can't.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["color","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1416\nfloat band(float value, float min, float max) {\n    return step(min,value) - step(max, value);\n}\n\nfloat smoothband(float value, float min, float max, float blur) {\n    return smoothstep(min-blur,min+blur,value) - smoothstep(max-blur,max+blur,value);\n}\n\nvec2 rot(vec2 uv, float deg) {\n\n    return uv * mat2(cos(deg),-sin(deg),sin(deg),cos(deg));\n}\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(432.534,14.5334));\n    p += dot(p,p+43.34);\n    return fract(p.x*p.y);\n}\n\n\nfloat volcano_bottom(vec2 uv, vec2 pos, float width) {\n    uv -= pos;\n    uv *= 1.;   // scale\n    \n    float yBottom = -.7;\n    float yEdge = (.6-pow(max(0.,abs(uv.x)*2.-.8), 0.5))/2.;\n    float sinEdge = (sin(2.*iTime+8.*uv.x)- 0.1)/15.;\n    float mask = 0.;\n    \n    \n    mask = smoothstep(yBottom,min(yEdge,sinEdge),uv.y)\n    * band(uv.x, pos.x-0.5*width, pos.x+0.5*width)\n    * band(uv.y, yBottom, min(yEdge,sinEdge));\n    \n    return mask;\n}\n\nfloat volcano_top(vec2 uv, vec2 pos, float width) {\n    uv -= pos;\n    uv *= 1.;   // scale\n    \n    float yBottom = -.7;\n    float yEdge = (.6-pow(max(0.,abs(uv.x)*2.-.8), 0.5))/2.;\n    float sinEdge = (sin(2.*iTime+8.*uv.x)- 0.1)/15.;\n    float mask = 0.;\n    \n    mask = smoothstep(min(yEdge,sinEdge)+0.4,max(yEdge,sinEdge),uv.y)\n    * band(uv.x, pos.x-0.5*width, pos.x+0.5*width)\n    * band(uv.y,sinEdge,max(yEdge,sinEdge));\n    \n    return mask;\n}\n\n\nfloat star(vec2 uv, vec2 pos, float scale) {\n    uv -= pos;\n    uv /= scale;\n\n    float d = length(uv);\n    float mask = 0.05/d;\n\n    float rays = max(0.,1. - abs(uv.x*uv.y*3000.));\n    mask += rays ;\n    \n    uv = rot(uv,PI/4.);\n    mask += max(0.,1. - abs(uv.x*uv.y*5000.))*0.5;\n    return mask;\n}\n\nvec3 colorfulStar(vec2 uv, vec2 pos, float scale, vec3 color) {\n    uv -= pos;\n    uv /= scale;\n\n    float d = length(uv);\n    float mask = 0.05/d;\n\n    float rays = max(0.,1. - abs(uv.x*uv.y*3000.));\n    mask += rays ;\n    \n    uv = rot(uv,PI/4.);\n    mask += max(0.,1. - abs(uv.x*uv.y*5000.))*0.5;\n    return mask * color;\n}\n\n// Note: starryNight return color->vec3\nvec3 starryNight(vec2 uv) {\n    uv *= 2.;\n    vec2 gv = fract(uv)-0.5;\n    vec2 id = floor(uv);\n    \n    // Its color is white, is the same as mask\n    vec3 color = vec3(0.);\n    \n    // 这个循环做了一个叠加，在当前格子中叠加了周围越出格子的star的部分，使得图像不再有边界\n    for(int y=-1; y<=1; y++) {\n        for(int x=-1; x<=1; x++) {\n            vec2 offset = vec2(x,y);\n            \n            \n            float n = Hash21(id+offset); \n            vec3 location = (star(gv,vec2(n,fract(n*32.4))-.5+offset,0.7)/2.) * (0.5+0.5*sin(vec3(.1,.2,.8)*fract(n*432.323)*iTime));\n            //vec3 coll = vec3(0.5)+0.5*sin(vec3(vec2(n,fract(n*432.323))+offset,.8)*iTime); //(0.5+0.5*sin(vec3(.1,.2,.8)*fract(n*432.323)*iTime)\n            //vec3 location = colorfulStar(gv,vec2(n,fract(n*32.4))-.5+offset,0.7,coll)/2.;\n            \n            float size = 0.5+0.5*cos(n*123.231*sin(iTime*0.1));\n            color += location * size ;\n        \n        }\n    \n    }\n\n    return color;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    //// Color Field ////\n    \n    vec3 volcano_bot_bot_col = vec3(0.4,0.2,0.5);\n    vec3 volcano_bot_top_col = vec3(0.4,0.2,0.8);\n    vec3 volcano_top_bot_col = vec3(0.8,0.8,0.9);\n    vec3 volcano_top_top_col = vec3(1.);\n    vec3 bgY = vec3(0.01,0.2,0.4);\n    vec3 bgR = vec3(0.15+0.2*sin(iTime),0.1,0.5);\n\n\n    /////////////////////\n    \n    // 一定要及时添加，否则会被背景遮挡\n    float background = (1.-(volcano_bottom(uv, vec2(0.,-0.7),2.5)+volcano_top(uv, vec2(0.,-0.7),2.5)));\n    \n    vec3 mask = starryNight(rot(uv,iTime*0.1)) * smoothband(uv.y,-.3,1.,0.1)\n    + volcano_bottom(uv, vec2(0.,-0.7),2.5)*mix(volcano_bot_bot_col,volcano_bot_top_col,uv.y+0.7)\n    + volcano_top(uv, vec2(0.,-0.7),2.5)*mix(volcano_top_bot_col,volcano_top_top_col,uv.y+0.4)\n    + background * mix(bgY,bgR,(cos((uv.y-0.2)/2.*PI)+0.5));\n\n\n\n    fragColor = vec4(mask,1.);\n\n}","name":"Image","description":"","type":"image"}]}