{"ver":"0.1","info":{"id":"WlfGDn","date":"1556885120","viewed":300,"name":"electro wave","username":"taso69","description":"Inspired by VJ of Electro World","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","ring","box"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\nmat2 rotate(float t){\n    return mat2(cos(t),-sin(t),sin(t),cos(t));\n}\n\nfloat hash21( vec2 p) {\n    return fract(sin(dot(p, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nvec2 hash22(vec2 p){\n    float n = hash21(p);\n    return vec2(n,hash21(n+p));\n}\n\n//https://iquilezles.org/articles/distfunctions2d\nfloat sdCircle(vec2 p, float r){\n    float d =  length(p) - r;\n    return d;\n}\n\nfloat sdBox(vec2 p, float b ){\n    vec2 d = abs(p)-vec2(b);\n    return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdLine( vec2 p, vec2 a, vec2 b ){\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat boxWave(vec2 p, float t){\n \tvec2 f = fract(p) - 0.5;\n    vec2 i =  floor(p);\n\tfloat col = (0.0);\n    float b = (-0.1+0.6*sin(-t*3.0+0.3*length(i)));\n    col = (smoothstep(0.1,0.0,sdBox(f,b)));\n    return col;\n}\n\nfloat boxNoise(vec2 p, float t){\n    vec2 i = floor(p);\n    float m = step(0.4,sin(1.2-t*3.0+0.2*length(i)));\n    float n = (hash21(i*floor(t*40.0)));\n    n = (n > 0.6) ? 1.0 : 0.0;\n    return n*m;\n}\n\nfloat arc(vec2 p){\n    \tfloat outC = smoothstep(0.001,0.0,sdCircle(p,0.1));\n    \tfloat innC = smoothstep(0.001,0.0,sdCircle(p,0.09));\n        float a = atan(p.x,p.y);\n    \tfloat theta = PI/100.0;\n        float m = (abs(a) < theta ) ? 1.0 : 0.0;\n    \treturn  (outC - innC) * m;\n}\n\nfloat ring(vec2 p, float i, float t){\n\tfloat outC = smoothstep(0.001,0.0,sdCircle(p,0.08));\n    float innC = smoothstep(0.001,0.0,sdCircle(p,0.075+0.005*cos(t*i)));\n    return outC - innC;\n}\n\nfloat box(vec2 p, float i, float t ){\n    float outB = smoothstep(0.001,0.0,sdBox(p,(0.05)));\n    float innB = smoothstep(0.001,0.0,sdBox(p,(0.04+0.005*sin(t))));\n    return outB - innB;\n}\n\nfloat lines(vec2 p, float t){\n    float s = 6.0;\n    float l = 0.0;\n    for(float i = 0.0; i < 50.0; i++){\n    \tvec2 a = s * hash22(vec2(i)) - 0.5*s;\n    \tvec2 b = s * hash22(vec2(hash21(vec2(i)))) - 0.5*s;\n        a*= rotate(t*0.5);\n\t\tl += smoothstep(0.03,0.0,sdLine(p,a,b));\n    }\n    return l;\n}\t\n\nfloat boxMask(vec2 p, float t){\n    float outB = smoothstep(0.01,0.0,sdBox(p,(1.2)));\n    float innB = smoothstep(0.01,0.0,sdBox(p,(0.8+0.2*sin(t))));\n    float  m = outB - innB;\n    return m;\n}\n\nfloat ringMask(vec2 p, float t){\n    float outC = smoothstep(0.01,0.0,sdCircle(p,(1.0)));\n    float innC = smoothstep(0.01,0.0,sdCircle(p,(0.9)));\n    float  m = outC - innC;\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 p = (fragCoord.xy*2.0 - iResolution.xy)/min(iResolution.x,iResolution.y);\n    \n\tvec3 col = vec3(0.0);\n    vec2 c_gb = vec2(0.0);\n    vec2 c_rg = vec2(0.0);\n    \n    vec2 q = p*7.0 + 0.5;\n    col += boxWave(q,iTime);\n    c_gb += boxWave(q,iTime - 0.2)*vec2(0.5,0.6);\n    \n    q = p*10.0 + 0.5 ;\n    col += boxNoise(q,iTime);\n    \n    float N = 5.0;\n    for(float i = 1.0; i < N; i++){\n        q = p*fract(-iTime/12.0+i/N);\n        for(float j = 1.0; j < 30.0; j++){\n        \tq *= rotate(mix(0.0,2.0*PI,hash21(vec2(i,j))));\n    \t\tcol += arc(q);    \n        }\n        \n        q = p*fract(-iTime/3.0+i/N);\n    \tcol += ring(q,i,iTime);\n        c_gb += ring(q*0.95,i,iTime)*vec2(0.4,0.5);  \n        c_rg  += ring(q*1.05,i,iTime)*vec2(0.6,0.2);\n            \n        q = p*rotate(PI/4.0);\n       \tq = q*fract(-iTime/6.0+i/N);\n\t\tcol += box(q,i,iTime);\n        c_gb += box(q*1.05,i,iTime)*vec2(0.4,0.5);  \n        c_rg  += box(q*0.95,i,iTime)*vec2(0.6,0.2);\n    }\n     \n    col.yz = max(col.yz,c_gb);\n    col.xy = max(col.xy,c_rg);\n    \n    float cMin = min(col.x,min(col.y,col.z));\n  \tq = p;\n    q /= mod(iTime+3.0,6.0);\n    col = (ringMask(q, iTime) > 0.9) ? 1.0 - vec3(cMin) : col;\n    \t\n    q = p*rotate(PI/4.0);\n    q /= mod(iTime+2.0,4.0);\n    col = (boxMask(q, iTime) > 0.9) ? 1.0 - vec3(cMin) : col;\n    \n    q = p;\n    q /= mod(iTime*0.5,5.0);\n   \tcol += ringMask(q,iTime)*lines(q,iTime);\n\t\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}