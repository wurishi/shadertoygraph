{"ver":"0.1","info":{"id":"4dGSWR","date":"1463663406","viewed":1573,"name":"game of life (240/311 chars)","username":"FabriceNeyret2","description":"smallest Conway's game of life\ncompaction of https://www.shadertoy.com/view/4ddSRM\n\ncould you find smaller ? ;-)","likes":11,"published":3,"flags":32,"usePreview":0,"tags":["automata","life","2tweets","conway","short","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// compaction of https://www.shadertoy.com/view/4ddSRM\n\nvoid mainImage( out vec4 O, vec2 U )\n{  O = texture(iChannel0, U/iResolution.xy); }","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// compaction of https://www.shadertoy.com/view/4ddSRM (775)\n\n\n/**/   // 240 by coyote \n#define T +texture(iChannel0, P+=\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 h=1./iResolution.xy, v=h, P=U*h; h.y=v.x=0.;\n    O =  T-v) T+h) T+v) T+v)  T-h)  T-h) T-v) T-v) - 3.;     // count life in neighborhood\n\n    O = vec4(   O*O==-T+h+v)*O                               // 2 neighbors:survive 3:birth\n              ||iFrame < 9&&length(P - .5) < .1              // initial state\n              ||(O= iMouse).z > .5&&length( O.xy - U ) < 25. // mouse paint\n             );\n}\n/**/\n\n\n\n/**   // 242 by coyote \n#define T +texture(iChannel0, P\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 h=1./iResolution.xy, v=h, P=U*h; h.y=v.x=0.;\n    O =   T-h-v)  T-v)  T+h-v)                               // count life in neighborhood\n          T-h)          T+h)\n          T-h+v)  T+v)  T+h+v) - 3.;    \n\n    O = vec4(   iFrame < 9&&length(P - .5) < .1              // initial state\n              ||O*O==-T)*O                                   // 2 neighbors:survive 3:birth\n              ||(O= iMouse).z > .5&&length( O.xy - U ) < 25. // mouse paint\n             );\n}\n/**/\n\n\n\n/**   // 256 by coyote   -3 by Fabrice\n#define T(u,v) + texture(iChannel0, U/R + vec2(u-1,v-1)/R ) \n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    O =   T(, )  T(1, )  T(-, )                              // count life in neighborhood\n          T(,1)          T(-,1)\n          T(,-)  T(1,-)  T(-,-) - 3.;    \n\n    O = vec4(   iFrame < 9&&length(U/R - .5) < .1            // initial state\n              ||(O T(1,1))*O == O-O                          // 2 neighbors:survive 3:birth\n              ||(O= iMouse).z > .5&&length( O.xy - U ) < 25. // mouse paint\n             );\n}\n/**/\n\n\n\n/**   // 260\n#define T(u,v) + texture(iChannel0, U/R + vec2(u-1,v-1)/R ).x \n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    float e =   T(, )  T(1, )  T(-, )                    // count life in neighborhood\n                T(,1)          T(-,1)\n                T(,-)  T(1,-)  T(-,-);    \n    O = iMouse;\n\n  //e == 2. ? e += T(1,1) : e;                           // 2 neighbors: variant (264)\n\n    O = vec4(   iFrame < 9&&length(U/R - .5) < .1        // initial state\n              ||O.z > .5&&length( O.xy - U ) < 25.       // mouse paint\n       //     ||e == 2.&&T(1,1) == 1.                    // 2 neighbors: survive (265)\n              ||e T(1,1)== 3.                                     // rar variant (260)\n              ||e == 3.                                  // 3 neighbors: birth\n             );                                          // else die (or keep void)\n}\n/**/\n\n\n\n/**   // 281\n\n#define T(u,v) texture(iChannel0, U/R + vec2(u,v)/R).x\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    float e =   T(-1,-1) + T(0,-1) + T(1,-1)               // count life in neighborhood\n              + T(-1, 0)      +      T(1, 0)\n              + T(-1, 1) + T(0, 1) + T(1, 1);\n \n\tO = vec4(   iFrame < 10&&length(U/R-.5) < .1               // initial state\n              ||iMouse.z > .5&&length( iMouse.xy - U ) < 25.   // mouse paint\n              ||e == 2.&&T(0,0) == 1.                          // 2 neighbors: survive\n              ||e == 3.                                        // 3 neighbors: birth\n             );                                                // else die (or keep void)\n}\n/**/","name":"Buffer A","description":"","type":"buffer"}]}