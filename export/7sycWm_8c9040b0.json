{"ver":"0.1","info":{"id":"7sycWm","date":"1654954822","viewed":130,"name":"Hexagonal Truchet Tiling","username":"BrianDeLange","description":"a Hexagonal Truchet Tiling shader. inspired by the youtube channel https://www.youtube.com/c/TheArtofCodeIsCool.\nTutorial on Hexagonal Tiling: https://www.youtube.com/watch?v=VmrIDyYiJBA\nTutorial on Truchet Tiling: https://www.youtube.com/watch?v=2R7h76Go","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Hash functions from https://www.shadertoy.com/view/4djSRW\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 hash31(float p)\n{\n   vec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n   p3 += dot(p3, p3.yzx+33.33);\n   return fract((p3.xxy+p3.yzz)*p3.zyx); \n}\n\n\n\nfloat HexDist(vec2 p)\n{\n\n    p = abs(p);\n    \n    float c = dot(p, normalize(vec2(1., 1.73)));\n    c = max(c, p.x);\n    \n    return c;\n}\n\n\n\n\nmat2 Rot(float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nvec4 HexCoord(vec2 uv)\n{\n    vec2 r = vec2(1., 1.73);\n    vec2 h = r*.5;\n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n\n    vec2 gv;\n    if(length(a)<length(b))\n        gv = a;\n    else\n        gv = b;\n    \n    float x = 0.;\n    float y = 0.5 - HexDist(gv);\n    vec2 id = uv-gv;\n    return vec4(gv.x, gv.y, id.x, id.y);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.);\n    \n    uv *= 20.;\n    uv += 200.+iTime;\n    \n    vec4 hex = HexCoord(uv);\n    float randID = hash12(hex.zw);\n    float randTile = floor(randID*3.);\n    \n    hex.xy *= Rot(randTile*1.0466);\n    \n    float centerLine = smoothstep(0.12, 0.015, abs(-0.0001+hex.y*.9));\n    \n    float circle = smoothstep(0.41, 0.3, length(abs(hex.xy)-vec2(0., 0.56)));\n    \n    circle = circle - smoothstep(0.26, 0.15, length(abs(hex.xy)-vec2(0., 0.56)));\n    \n    col = vec3(max(circle, centerLine));\n    col *= hash31(randTile+654.4);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}