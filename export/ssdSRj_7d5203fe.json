{"ver":"0.1","info":{"id":"ssdSRj","date":"1633598762","viewed":101,"name":"CityEye","username":"gunzes","description":"cwiczonko","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise","eye","night"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//rand(vec2 coord)\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.y)-vec2(0.888888,0.5);\n    \n    \n    //czas\n    float speed = 2.;\n    float sinTimeBiased = (sin(iTime*speed)+1.)*.5;\n    \n    //zmienne\n    \n    vec3 col            = vec3(0.);\n    vec3 bgCol          = vec3(.9,.5,2.);\n    //vec2 col            = vec2(0.,0.);\n    float gridScale     = 100.;\n    float gridScale2    = .5;\n    //vec2 uv2            = vec2(uv.x+(iTime*.2),uv.y)*gridScale;\n    vec2 uv2            = vec2(uv.x,uv.y)*gridScale;\n    vec2 uv3            = uv*vec2(.95,1.7);\n    float cellId        = floor(uv2.x);\n    float cellFraction  = fract(uv2.x);\n    float cellId2        = floor(uv2.x*gridScale2);\n    float cellFraction2  = fract(uv2.x*gridScale2);\n    \n    float circleWidth   = .02;\n    float circleRadius  = .25;\n    \n    float noise = noise1D(cellId,cellFraction*iTime*.5);\n    float noise2 = noise1D(cellId2,cellFraction2);    \n    uv3 += vec2(0.,.1);\n    circleWidth  += noise*.12;\n    //circleRadius += circleRadius*(noise*.2);\n    \n    //col = vec2(noise1D(cellId,cellFraction),0.);\n    \n    col += vec3(drawCircleSmooth(uv, circleWidth*.8, circleRadius, .95));\n    col += vec3(drawCircleSmooth(uv+vec2(.1,0.), circleWidth+0.1, circleRadius-.03, .8),0.,0.);\n    col += vec3(vec2(drawCircleSmooth(uv, circleWidth+.05, circleRadius-0.05, .3)),0.);\n\n    col.x = clamp(pow(col.x,1.3),0.,1.);\n    \n    vec3 shadow = vec3(1.-(drawDisc(uv3+vec2(.0,.23),.45+noise2*.1) ));\n    col*=shadow;\n    \n    col += drawDisc(uv3,.45+noise2*.4)*uv.y*bgCol;\n    \n    \n\n    // Output to screen\n   /* if(uv.x>.58){\n        col = vec3(uv.y)*bgCol;\n    } */\n   \n    \n    col = uv.x > .58 ? vec3(uv.y) * bgCol : col;\n    \n    fragColor = vec4(col,1.0);\n    //fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/*vec4 someFunction( vec4 a, float b )\n{\n    return a+b;\n}*/\n\n\n//random\n\nfloat rand(vec2 coord){\n    return fract(sin(dot(coord,vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat noise1D(float cellId, float cellFraction){\n    //return clamp(mix(rand(vec2(cellId)),rand(vec2(cellId+1.)),smoothstep(0.,1.,cellFraction)),0.,1.);\n    //return mix(rand(vec2(cellId)),rand(vec2(cellId+1.)),cellFraction);\n    return rand(vec2(cellId));\n}\n\nfloat drawCircleSmooth(vec2 coord, float borderThickness, float radius, float color){\n\n    return (1.-smoothstep(0.,borderThickness,abs(radius-sqrt(dot(coord,coord)))))*color;\n}\n\nfloat drawDisc(vec2 coord,float radiusOut){\n    return smoothstep(radiusOut,radiusOut*1.015,length(coord));\n}\n\n\n//float randomNumber      = 43758.5453123;\n//vec2 randomVecNumber    = vec2(12.9898,78.233);","name":"Common","description":"","type":"common"}]}