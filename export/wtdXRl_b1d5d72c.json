{"ver":"0.1","info":{"id":"wtdXRl","date":"1581554544","viewed":144,"name":"swirly feedback thingy","username":"julianlumia","description":":octopusballoon:","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).xyz;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define RADIUS 10.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n vec2 uv = fragCoord.xy/iResolution.xy;\n vec2  uv2 = uv;\n vec2 pos;\n pos.x = .5;\n pos.y = 0.5;\n float scale =.95;\n float theta = iTime*0.1;\n vec3 col = vec3(0.);\n mat2 rot = mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n uv = (((uv-pos)/scale)*rot)+pos;\n vec3 col2;\n\n col = 1.-texture(iChannel2, uv).xyz* 2. ;           \n\n        \n if(uv.x<1. && uv.x> 0. && uv.y<1. && uv.y > 0.)     \n {\n col = 1.-texture(iChannel2, uv).xyz* 2. ;           \n col+= texture(iChannel0, uv).xyz*1.;\n }\n\n\n fragColor = vec4(col, 1.0);\n vec4 buffer;  \n float slide_up = 3.;\n float slide_down = 10.;\n vec4 su, sd, up, down, amount;\n if (iTime < .1){       \n buffer = texture(iChannel1, uv);\n }\n else{buffer= vec4(0.);}\n amount.x = fragColor.x > buffer.x ? 1.0 : 0.0;\n amount.y = fragColor.y > buffer.y ? 1.0 : 0.0;\n amount.z = fragColor.z > buffer.z ? 1.0 : 0.0;\n amount.w = fragColor.w > buffer.w ? 1.0 : 0.0;\n float d = max(1.0, abs(slide_down));\n sd = vec4(1.0 / d);\n down = buffer + ((fragColor - buffer) * sd);\n float u = max(1.0, abs(slide_up));\n su = vec4(1.0 / u);\n up = buffer + ((fragColor - buffer) * su); \n fragColor = mix(down, up, amount);    \n fragColor *= 2.;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"//sharpen\n//https://www.shadertoy.com/view/XdtfzM\nvec2 pos2uv(vec2 pos) {\n  return (pos / 2.0 * min(iResolution.x, iResolution.y) + iResolution.xy / 2.0) / iResolution.xy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n vec2 uv = fragCoord.xy/iResolution.xy;\n vec4 tl = texture(iChannel0, uv);\n vec4 tc = texture(iChannel0, uv);\n vec4 tr = texture(iChannel0, uv);\n vec4 ml = texture(iChannel0, uv);\n vec4 mc = texture(iChannel0, uv);\n vec4 sharpness =6. * tl - (tc + tr + ml + mc);\n fragColor = vec4( sharpness );\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n //cheap blur\n float blurSize = 0.01;\n vec2 uv = fragCoord.xy/iResolution.xy;\n vec2 sampleUV0 = uv;\n vec2 sampleUV1 = vec2(uv.x -blurSize,uv.y);\n vec2 sampleUV2 = vec2(uv.x +blurSize,uv.y);\n vec2 sampleUV3 = vec2(uv.x,uv.y +blurSize);\n vec2 sampleUV4 = vec2(uv.x,uv.y -blurSize);\n vec4 sample2 ;\n    \n sample2 = texture(iChannel0, sampleUV0);\n sample2 +=\t\t   texture(iChannel0, sampleUV1);\n sample2 +=\t\t   texture(iChannel0, sampleUV2);\n sample2 += \t\t   texture(iChannel0, sampleUV3);\n sample2 +=          texture(iChannel0, sampleUV4);\n fragColor =.3 * sample2;\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//slide\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n vec2 uv = fragCoord.xy/iResolution.xy;\n float slide_up = 10.;\n float slide_down =50.;\n vec4 su, sd, up, down, amount;\n vec4 buffer = texture(iChannel0, uv);\n vec4 fragColor2 = texture(iChannel1, uv);\n amount.x = fragColor2.x > buffer.x ? 1.0 : 0.0;\n amount.y = fragColor2.y > buffer.y ? 1.0 : 0.0;\n amount.z = fragColor2.z > buffer.z ? 1.0 : 0.0;\n amount.w = fragColor2.w > buffer.w ? 1.0 : 0.0;\n float d = max(1.0, abs(slide_down));\n sd = vec4(1.0 / d);\n down = buffer + ((fragColor2 - buffer) * sd);\n float u = max(1.0, abs(slide_up));\n su = vec4(1.0 / u);\n up = buffer + ((fragColor2 - buffer) * su);\n fragColor = mix(down, up, amount);    \n}","name":"Buffer B","description":"","type":"buffer"}]}