{"ver":"0.1","info":{"id":"4XtSRf","date":"1719354130","viewed":59,"name":"Energy Pulse Waves - White","username":"brian124634","description":"White fractal pattern of distorted circles.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","circles","color","glow","trippy","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t )\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 finalColor = vec4(0.0);\n    for(int k = 0; k < 3; k++)\n    {\n        float newTime = iTime + float(k) * 0.04;\n        vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n        vec2 uv0 = uv;\n        vec3 col = vec3(0.0);\n\n        int steps = 3;\n\n        for(int i = 0; i < steps; i++) {\n            vec3 col0 = palette(length(uv0) + float(i) * 0.2 + newTime * 0.4);\n            col0 = col0 / (length(uv0) * pow(2.0, 2.0 * length(uv0)));\n\n            uv = 2.0 *(fract(uv * 1.5) - 0.5);\n            float d = length(uv) * cos(length(uv0) - iTime * 0.6);\n            d = sin((d - 0.5) * 8.0 - newTime * 2.0) / 50.0;\n            d = abs(d);\n            d = pow(0.1 / d, 1.2);\n            col += col0 * d * pow(float(steps - i) / float(steps), 3.5);\n        }\n        float avgCol = (col.r + col.g + col.b) / 3.0;\n        avgCol *= 0.02;\n        if(k == 0) {finalColor += vec4(avgCol, 0., 0., 1.0);}\n        if(k == 1) {finalColor += vec4(0., avgCol, 0., 1.0);}\n        if(k == 2) {finalColor += vec4(0., 0., avgCol, 1.0);}\n    }\n    fragColor = finalColor;\n}","name":"Image","description":"","type":"image"}]}