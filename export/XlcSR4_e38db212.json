{"ver":"0.1","info":{"id":"XlcSR4","date":"1478272506","viewed":1657,"name":"LCD antialiasing","username":"FabriceNeyret2","description":"left: luminance antialiasing.\nright: subpixel antialiasing accounting for the fact that LCD pixels are made of 3 R,G,B bars.\n(Ok, it's subtle. Of course it won't work on non-LCD or when rotating a smartphone :-) )\n\nSee zoom in comments.","likes":15,"published":3,"flags":0,"usePreview":0,"tags":["antialiasing","lcd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O,  vec2 U )\n{\n    U -= .5;\n    float m = iResolution.x/2.,\n          r = 5.*U.y/iResolution.y;                   // lines width\n    vec4  x = vec4(3.*U.x+ U.y);                      // sloppy line\n    if (U.x>m) x += vec4(0,1,2,0);                    // LCD-AA: R/G/B have 1/3 pixel offset\n    \n    O = smoothstep(-1.,1., abs(mod(x/3.,10.)-5.)-r);  // varying-width antialiased lines\n     if (U.x==m) O = vec4(1,0,0,1);                   // red separator\n\n    O = sqrt(O);                                      // gamma correction\n}","name":"Image","description":"","type":"image"}]}