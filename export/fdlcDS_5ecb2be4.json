{"ver":"0.1","info":{"id":"fdlcDS","date":"1642629226","viewed":228,"name":"ecl1pse","username":"natnatnat","description":"eclipse+ourob","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"ftyXWy","parentname":"j2d"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\nconst float PI = 3.14;\nconst float e = 2.71;\n\nconst float R = e/PI;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n\n    float r = length(uv);\n \n    float angleC = iTime * R;\n    vec2 pointC = vec2(R * cos(angleC), R * sin(angleC));\n\n    vec3 circleColor = vec3(pow(e, -abs(R - r) * 10.));\n    vec3 snakeColor = vec3(pow(e, -abs(distance(uv, pointC)) * PI));\n\n    // start lixo\n    float scalarProduct = dot(pointC - uv, uv - pointC);\n    float dec = pow(e, -abs(scalarProduct) * 100.);\n    vec3 scalarProductColor = vec3(dec);\n    // end lixo \n\n    fragColor = vec4(circleColor, 1.) + vec4(snakeColor, 1.);\n}","name":"Image","description":"","type":"image"}]}