{"ver":"0.1","info":{"id":"3dBXRd","date":"1554657541","viewed":332,"name":"Simple surface warp / bend","username":"codebro","description":"I wanted to create an effect similar to my design software's \"sear\" effect. Planning on using it to create glitch effect in images.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["lines","warp","bend"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 BLACK = vec4(0.0, 0.0, 0.0, 1.0);\nconst vec4 WHITE = vec4(1.0,1.0,1.0,1.0);\nconst vec4 EMPTY_C = vec4(0.0);\nconst float LINE_FREQUENCY = 20.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \tvec2 coord = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\tcoord.x -= cos(coord.y) * sin(iTime); \n  \tvec4 c = EMPTY_C;\n  \n  \tfloat total = floor(coord.x * LINE_FREQUENCY);\n  \tbool isEven = mod(total, 2.0) == 0.0;\n  \t//c = isEven ? WHITE : BLACK; // originally I had these two lines\n  \t//fragColor = c; // (see comments section)\n\n  \tfragColor =  vec4(2.*sin(3.14*coord.x * LINE_FREQUENCY));\n}\n\n// Tiny version written by FabriceNeyret2 in the comments - very impressive :-D\n//void mainImage( out vec4 fragColor, in vec2 fragCoord )\n//{\n//    vec2 R = iResolution.xy, U = (fragCoord+fragCoord - R) / R.y;\n//    float v = sin(62.8 * ( U.x - cos(U.y) * sin(iTime) ) );\n//\tfragColor += sqrt( v/fwidth(v) );\n//}\n","name":"Image","description":"","type":"image"}]}