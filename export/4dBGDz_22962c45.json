{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"vec3 offsetColors(sampler2D t, vec2 uv, vec2 offsetR, vec2 offsetG, vec2 offsetB)\n{\n\tfloat red \t=   texture( t, uv + offsetR ).r;\n\tfloat green = \ttexture( t, uv + offsetG ).g;\n\tfloat blue \t=\ttexture( t, uv + offsetB ).b;\n\treturn vec3(red,green,blue);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 uv =  fragCoord.xy/-iResolution.xy;\n\tfloat funAnim = sin(iTime*2.0);\n\t\n\tvec3 color = offsetColors(iChannel0, uv,\n\t\t\t\t\t\t\t \tvec2(-0.05, 0.0) * funAnim,\n\t\t\t\t\t\t\t \tvec2( 0.00, 0.0) * funAnim,\n\t\t\t\t\t\t\t \tvec2( 0.05, 0.0) * funAnim );\n\n\tfragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dBGDz","date":"1385745093","viewed":318,"name":"Color Split","username":"chapter9","description":"Simple color split","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["color","cplit"],"hasliked":0,"parentid":"","parentname":""}}