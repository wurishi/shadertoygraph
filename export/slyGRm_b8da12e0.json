{"ver":"0.1","info":{"id":"slyGRm","date":"1637353960","viewed":248,"name":"Mandelbrot set with offset","username":"tungster24","description":"mandelbrot set with offset.\nnow with (somewhat broken) smoothing!\n(click on the screen to set offset and begin the rendering.)","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //mouse and fragment coordinates normalised.\n    float x = (fragCoord.x/iResolution.y-0.5*(iResolution.x/iResolution.y))*2.0-0.5;\n    float y = (fragCoord.y/iResolution.y-0.5)*2.0;\n    float mx = (iMouse.x/iResolution.y-0.5*(iResolution.x/iResolution.y))*2.0;\n    float my = (iMouse.y/iResolution.y-0.5)*2.0;\n    //iteration variable\n    int iter = 0;\n    //is it inside the set?\n    bool inside = true;\n    \n    vec2 z1 = vec2(mx,my);\n    vec2 z2 = vec2(0.0,0.0);\n    for (int i = 0;i<100;i++) {\n        \n        if (z1.x*z1.x+z1.y*z1.y <= 4.0) {\n        z2 = vec2(z1.x*z1.x-z1.y*z1.y+x,2.0*z1.x*z1.y+y);\n        z1 = z2;\n        iter++;\n        }\n        else {inside = false;break;}\n    }\n    //color variables\n    float mu = float(iter)+1.0-log(log(sqrt(z1.x*z1.x+z1.y*z1.y)))/log(2.0);\n    float r=sin(mu/30.0);\n    float g=sin(mu/20.0)-0.2;\n    float b=sin(mu/10.0)-0.4;\n    fragColor = vec4(r,g,b,1.0);\n}","name":"Image","description":"","type":"image"}]}