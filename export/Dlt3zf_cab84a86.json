{"ver":"0.1","info":{"id":"Dlt3zf","date":"1682878485","viewed":103,"name":"Hughsk 4x4 Dither","username":"airtight","description":"Using Hugh Kennedy's 4x4 Dither: https://github.com/hughsk/glsl-dither\n\nadded scale\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["dither"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 color = texture(iChannel0, uv);\n    \n    //boost contrast\n    float contrast = 0.25;\n    color.rgb = (color.rgb - 0.5) / (1.0 - contrast) + 0.5;\n    \n    //mouse scale\n    float scale = iMouse.x / iResolution.x;\n    scale = floor(mix(1.,10.,scale));\n    \n    //constant scale\n    scale = 2.;\n    \n    vec4 ditherCol = dither4x4(fragCoord.xy, color,scale);\n    \n    //colorized\n    //ditherCol *= color;\n    \n    fragColor = ditherCol;\n     \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float luma(vec3 color) {\n  return dot(color, vec3(0.299, 0.587, 0.114));\n}\n\n//https://github.com/hughsk/glsl-dither/blob/master/4x4.glsl\n\nfloat dither4x4(vec2 position, float brightness) {\n  int x = int(mod(position.x, 4.0));\n  int y = int(mod(position.y, 4.0));\n  int index = x + y * 4;\n  float limit = 0.0;\n\n  if (x < 8) {\n    if (index == 0) limit = 0.0625;\n    if (index == 1) limit = 0.5625;\n    if (index == 2) limit = 0.1875;\n    if (index == 3) limit = 0.6875;\n    if (index == 4) limit = 0.8125;\n    if (index == 5) limit = 0.3125;\n    if (index == 6) limit = 0.9375;\n    if (index == 7) limit = 0.4375;\n    if (index == 8) limit = 0.25;\n    if (index == 9) limit = 0.75;\n    if (index == 10) limit = 0.125;\n    if (index == 11) limit = 0.625;\n    if (index == 12) limit = 1.0;\n    if (index == 13) limit = 0.5;\n    if (index == 14) limit = 0.875;\n    if (index == 15) limit = 0.375;\n  }\n\n  return brightness < limit ? 0.0 : 1.0;\n}\n\nvec4 dither4x4(vec2 position, vec4 color, float scale) {\n  return vec4(vec3( dither4x4(position /scale, luma(color.rgb))), 1.0);\n}","name":"Common","description":"","type":"common"}]}