{"ver":"0.1","info":{"id":"llByDD","date":"1508600634","viewed":271,"name":"Equilateral triangle","username":"voidc","description":"Calculate the distance to an equilateral triangle with a given center.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","triangle","distance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float s = 0.8660254037844386; //sqrt(3)/2\nconst mat2 ma = mat2(s, -0.5, 0.5, s); //col, col\nconst mat2 mb = mat2(-s, -0.5, 0.5, -s);\nconst mat2 mc = mat2(0.0, 1.0, -1.0, 0.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat scl = 6.0 / iResolution.y;\n    vec2 p = (fragCoord - 0.5*iResolution.xy) * scl;\n    float d = max(ma * p, max(mb * p, mc * p)).x - 1.;\n    \n    //from https://www.shadertoy.com/view/XsXSz4\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-2.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(120.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.02,abs(d)) );\n    \n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}