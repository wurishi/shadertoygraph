{"ver":"0.1","info":{"id":"Xdy3DD","date":"1454436108","viewed":602,"name":"Tiny IFS (Sierpinski)","username":"s23b","description":"Sierpinski triangle using tiny iterated function system. Nothing fancy, just the first thing that came to mind while learning about textures and buffers :)\n\nany ideas on how to make it smaller?","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["triangle","ifs","sierpinski","iterated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 o, vec2 i )\n{\n\to = texture(iChannel0, i / iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// 834144373 takes over with 107 chars :D\n\nvoid mainImage( out vec4 o, vec2 i )\n{\n    i /= iResolution.xy;\n    o = i.x < i.y ? texture(iChannel0, fract(i + i)) * 2. : 1e-3 + o - o;\n}\n\n/* thanks, FabriceNeyret2 :)\nvoid mainImage( out vec4 o, vec2 i )\n{\n    i -= .5;             // move the corner to (0,0)\n    i /= iResolution.xy;\n    o -= o;\n    i == vec2(0)     // make the corner white\n        ? o++\n        : i.x + i.y < 1. // put buffer under the diagonal\n            ? o = texture(iChannel0, fract(i + i)) * 2.\n            : o;\n}\n\n\n\n/* my original version:\nvoid mainImage( out vec4 o, vec2 i )\n{\n    i -= .5;             // move the corner to (0,0)\n    i /= iResolution.xy;\n    o = i.x + i.y == 0.  // make the corner white\n        ? vec4(1)\n        : i.x + i.y < 1. // put buffer under the diagonal\n            ? texture(iChannel0, fract(i * 2.)) * 2.\n            : vec4(0);\n}\n*/","name":"Buf A","description":"","type":"buffer"}]}