{"ver":"0.1","info":{"id":"7lKcDm","date":"1661641529","viewed":118,"name":"Glowing Rainbow Tunnel","username":"RawFish2D","description":"Cool rainbow tunnel","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","circle","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 renderRings(vec2 uv) {\n    vec3 color = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n\n    float speed = 4.0;\n    float scale = 1.0;\n\n    float dst = (scale / length(uv)) + iTime * speed;\n    vec3 outColor = color * cos(dst) + sin(dst);\n    return vec4(outColor, 1.0);\n}\n\nvec4 renderBlackCircle(vec2 uv) {\n    vec3 color = 0.5 + 0.5 * cos(iTime + 3.0 + uv.xyx + vec3(0, 2, 4));\n\n    float dst = length(uv);\n    float borderThickness = -0.15;\n    float radius = 0.01;\n    float t1 = 1.0 - smoothstep(radius - borderThickness, radius, dst);\n    float t2 = 1.0 - smoothstep(radius, radius + borderThickness, dst);\n    return vec4(mix(vec3(0), color, t1), t2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ar = iResolution.x / iResolution.y;\n    vec2 uv = vec2((fragCoord.x / iResolution.x) * ar, fragCoord.y / iResolution.y);\n    uv += vec2(-ar / 2.0, -0.5);\n    // Output to screen\n    fragColor = renderRings(uv) * renderBlackCircle(uv);\n}","name":"Image","description":"","type":"image"}]}