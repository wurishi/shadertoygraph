{"ver":"0.1","info":{"id":"mdKGzw","date":"1678348843","viewed":67,"name":"noise2.5","username":"Kolya142","description":".","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos( a+ vec4(0,33,11,0) ))\nfloat rand2(vec2 seed) {\n\treturn fract(sin(dot(seed.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 rd = vec3(uv, .7);\n    // Time varying pixel color\n    float y = abs(pow(sin(iTime+uv.x), 2.));\n    y += rand2(vec2(1.-uv.y, y));\n    rd.xy *= rot(sin(iTime)*uv.x*tan(y));\n    rd.xz *= rot(y);\n\n    vec3 col = vec3(dot(1.-uv.y,y)) * texture(iChannel0, rd).xyz + (rd*0.05);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}