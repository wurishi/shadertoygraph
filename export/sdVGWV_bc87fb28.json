{"ver":"0.1","info":{"id":"sdVGWV","date":"1632243384","viewed":67,"name":"(x^y)%9","username":"_JZ","description":"modulo + xor experiment","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    float coords_div = (0.1+sqrt(abs(sin(iTime/(6.28*10.0)))*30.0)*1.0);\n    vec2 coords_add = vec2(12,12)*iTime*4.0+vec2(-iResolution.x/2.0,-iResolution.y/2.0);\n    vec2 new_coords = fragCoord/coords_div+coords_add;\n    \n    vec2 m_pos = iMouse.xy/coords_div+coords_add;\n    bool is_pressed = iMouse.z>0.0;\n    \n    float mouse_influence_mult = 0.0;\n    if(is_pressed){\n        mouse_influence_mult = 0.5;\n    }\n    \n    float mouse_influence = pow((max(0.0,min(300.0, (200.0/coords_div - abs(length(new_coords-m_pos))))))/(20.0-abs(sin(iTime/2.0)*20.0)),2.1);\n    \n    \n    \n    float r = sqrt(new_coords.x*new_coords.x+new_coords.y*new_coords.y);\n    float phi = acos(new_coords.x/r);\n    if(r<0.0){\n        phi = -phi;\n    }\n    \n    vec2 newcords_polar = vec2(r,phi);\n\n    vec3 col = 0.5 + 0.5*cos(iTime-abs(uv.xyx-vec3(0.5,0.5,0.5))*vec3(1,2,4));\n    int xor_res = int(new_coords.x) ^ int(new_coords.y);\n    float pattern1 = float(xor_res%9);\n    float pattern2 = mod(float(xor_res),(mod((iTime/100.0),8.0)+7.0));\n    float pattern2_mult = float(int(int(pattern2)==0));\n    \n    float phase = min(0.5,(sin(iTime/31.0+3.14)/2.0+1.0));\n   \n    float red = phase*col.x + 0.5*(1.0-phase) + 0.5*cos(sqrt(r)/20.0+iTime/1.0+abs(phi+3.14/1.0)*sin(iTime/12.0)*2.0);\n    float green =  phase*col.y + 0.5*(1.0-phase) + 0.5*sin(sqrt(r)/20.0+iTime/1.0+abs(phi+3.14/1.0)*cos(iTime/6.0)*2.0)-1.0*(1.0-pattern2_mult)*mouse_influence_mult*mouse_influence;\n    float blue =  phase*col.z +  0.3*(1.0-phase) + mouse_influence * (pattern2_mult*10.0+0.1) * mouse_influence_mult/20.0;\n    \n    col = vec3(red,green,blue);\n    \n    if(int(pattern1)==0){\n        col = min(vec3(0.5,0.5,1.0),1.0-col/0.3);\n        if(int(pattern2)==0){\n            col = min(vec3(1.0,1.0,1.0),col*10.3);\n        }\n    }else{\n    \n    if(int(pattern2)==0){\n            col = min(vec3(1.0,1.0,1.0),col*1.2);\n        }\n    }\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}