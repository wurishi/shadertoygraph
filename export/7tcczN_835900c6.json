{"ver":"0.1","info":{"id":"7tcczN","date":"1659368885","viewed":53,"name":"leinad-4","username":"leinad","description":"trail of semi circle","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float aspectRatio = iResolution.y / iResolution.x;\n    uv.y *= aspectRatio;\n    \n    uv *= 8.0;\n    uv = fract(uv);\n\n    uv -= 0.5;\n    uv *= 2.0;\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    float d = length(uv);\n    \n    if (d > 1.0) {\n        return;\n    }\n    \n    float dotP = dot(normalize(uv), vec2(1.0, 0.0));\n    \n    float time = fract(iTime / 5.0);\n    \n    // goes from 1 to -1 in the first half then stays at -1 for the other half\n    float grow = max(-4.0 * time + 1.0, -1.0);\n    // waits 1 for first half then changes to -1 in the second half\n    float shrink = min(-4.0 * time + 3.0, 1.0);\n    \n    if (y > 0.0) {\n        if (dotP > grow && dotP < shrink) {\n            fragColor = vec4(col, 1.0) * (1.0 - smoothstep(0.98, 1.0, d));\n            return;\n        }\n    } else {\n        if (dotP < grow || dotP > shrink) {\n            fragColor = vec4(col, 1.0) * (1.0 - smoothstep(0.98, 1.0, d));\n            return;\n        }\n    }\n    fragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"}]}