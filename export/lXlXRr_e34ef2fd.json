{"ver":"0.1","info":{"id":"lXlXRr","date":"1709108878","viewed":59,"name":"Blur Demo(2402)","username":"xiconxi","description":"simple blur demo","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\nfloat weight(float t, float log2radius, float gamma)\n{\n    return exp(-gamma*pow(log2radius-t,2.));\n}\n\nvec4 sample_blured(vec2 uv, float radius, float gamma)\n{\n    vec4 pix = vec4(0.);\n    float norm = 0.;\n    //weighted integration over mipmap levels\n    for(float i = 0.; i < 10.; i += 0.5)\n    {\n        float k = weight(i, log2(radius), gamma);\n        pix += k*texture(iChannel1, uv, i); \n        norm += k;\n    }\n    //nomalize, and a bit of brigtness hacking \n    return pix*pow(norm,-0.95);\n}\n\nfloat roundedBoxSDF(vec2 CenterPosition, vec2 Size, float Radius) {\n    return length(max(abs(CenterPosition)-Size+Radius,0.0))-Radius;\n}\n\nfloat blur_scale(float distance) {\n    return clamp(41.+clamp(distance, -0.5, 1.)*80., 1.0, 80.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 pos )\n{\n    vec2 uv = pos.xy/iResolution.xy;\n\n    fragColor = sample_blured(uv, 80., 0.5);\n    return ;\n\n    // Calculate distance to edge.   \n    float d0 = 40.*roundedBoxSDF(pos.xy/iResolution.xy - vec2(.5f, .5f), vec2(.5f, .5f) / 2.0f, 0.05);\n    \n    //distance = clamp(distance, 0.0, 1.0);\n    //vec2 uv = pos.xy/iResolution.xy;\n    //vec2 uv = texcoord_remap(pos.xy/iResolution.xy, 0.001, d0);\n\n    //vec4 color = sample_blured(uv, 1.0+distance*80., 0.5);\n    vec4 color = sample_blured(uv, blur_scale(d0), 0.5);\n    \n    //color = vec4(uv, 0., 1.0);\n    fragColor = mix(color, vec4(1., 1.0, 1.0, 1.0), clamp(d0+0.5, 0.0, 1.)*0.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvec2 texcoord_remap(vec2 uv, float delta) {\n    uv = uv-0.5;\n    float l = max(abs(uv.x), abs(uv.y));\n    if(l > 0.25) {\n        float l_new = (l-0.25)/0.25*delta + (0.5-delta);\n        uv *= l_new/l;\n    }else {\n        float l_new = l/0.25*(0.5-delta) ;\n        uv *= l_new/l;\n    }\n    return uv+0.5;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = texcoord_remap(fragCoord.xy/iResolution.xy, 0.001);\n    \n    fragColor = texture(iChannel0, uv, 0.);\n}","name":"Buffer A","description":"","type":"buffer"}]}