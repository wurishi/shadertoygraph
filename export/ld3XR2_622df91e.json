{"ver":"0.1","info":{"id":"ld3XR2","date":"1460234009","viewed":147,"name":"Greenpulse","username":"vrav","description":"learning exercise ch6, thebookofshaders.com","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nconst vec3 RED = vec3(1.,0.,0.);\nconst vec3 GRN = vec3(0.,1.,0.);\nconst vec3 BLU = vec3(0.,0.,1.);\n\nfloat plot(vec2 st, float pct){\n    float d = 0.005;\n    return  smoothstep( pct-d, pct, st.y) - \n            smoothstep( pct, pct+d, st.y);\n}\n\nfloat bump(float x, float ofs, float p) {\n    return 1. - clamp(pow(abs(x+ofs)*2., p), 0., 1.);\n}\n\nvec3 addline(vec3 col, float line, vec3 linecol) {\n    return (1.-line)*col + line*linecol;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy / iResolution.xy;\n    \n    float x = st.x*2. - 1.;\n    float r,g,b,w,e = 0.;\n    \n    x = floor(x*iResolution.x*.025);\n    x *= (1.-abs(sin(iTime*.2)))*2.;\n    \n    float p = 2.5;\n    r = bump(x, .5, p);\n    g = bump(x, 0., p);\n    b = bump(x,-.5, p);\n    w = bump(x, 1.2, p);\n    e = bump(x,-1.2, p);\n    \n    vec3 c = vec3(r,g,b);\n    c = mix(c, vec3(1.,0.,1.), w);\n    c = mix(c, vec3(1.,0.,1.), e);\n    \n    float rl = plot(st, r);\n    float gl = plot(st, g);\n    float bl = plot(st, b);\n    float wl = plot(st, w);\n    float el = plot(st, e);\n    \n    c = addline(c, rl, RED);\n    c = addline(c, gl, GRN);\n    c = addline(c, bl, BLU);\n    c = addline(c, wl, RED+BLU);\n    c = addline(c, el, RED+BLU);\n    \n    fragColor = vec4(c,1.0);    \n}\n","name":"Image","description":"","type":"image"}]}