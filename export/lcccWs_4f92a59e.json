{"ver":"0.1","info":{"id":"lcccWs","date":"1731337980","viewed":78,"name":"fractalic rotate 2","username":"nayk","description":"source  https://www.shadertoy.com/view/lfdyWX https://www.shadertoy.com/view/lfccWf","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal","source"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Random function\nfloat random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\n// Returns velocity vector for a particle\nvec2 getParticleVelocity(float index, float seed) {\n    float angle = random(vec2(index, seed)) * 6.28; // Random angle\n    \n    // Base speed reduced by 30% with wider variation\n    float baseSpeed = .56;  // 0.8 * 0.7 = 0.56\n    float speedVariation = random(vec2(index, seed + 1.0)) * 0.6 + 0.7; // 0.7 to 1.3 multiplier\n    float speed = baseSpeed * speedVariation;\n    \n    return vec2(cos(angle), sin(angle)) * speed;\n}\nfloat newlength(in vec2 p)\n{\n    return abs(p.x) + abs(p.y);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalize coordinates\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n   vec2 uv2 = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n  float t3 = -iTime*1.;\n    float t2 = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 1.2;\nfloat co = cos(t3);\nfloat si = sin(t3);\nfloat co2 = cos(t2);\nfloat si2 = sin(t2);\nmat2 ma = mat2(co, si, -si, co);\nmat2 ma2 = mat2(co, si, -si, co);\n uv*=ma;\n uv2*=ma;\n\n vec2 uv0 = uv;\n    // Create explosion seed based on time\n    float seed = (iTime);\n    float t = iTime;\n\n \n    // Initialize color\n    vec3 color = vec3(0.0);\n    \n    // Number of particles\n   float NUM_PARTICLES = 150.;\n    \n    // Gravity effect (pulls particles down over time)\n    float gravity = 0.2;\n    \n    // Generate particles\n    for(float i = 0.; i < NUM_PARTICLES; i++) {\n     uv*=ma2;\n        float fi = float(i);\n        uv+= fract(uv )- 0.5;\n        // Get random velocity for this particle\n        vec2 velocity = getParticleVelocity(fi, seed)+uv2;\n          \n        // Apply gravity effect to particle position\n        vec2 particlePos = uv+uv2;\n  ;\n        // Distance from current pixel to particle\n        float dist = length(uv*uv2);\n        \n        // Particle size shrinks over time\n        float size = 0.0125 *0.5;\n        \n        // Create soft particles with falloff\n        float brightness = smoothstep(size, 0.0, dist);\n        \n        // Fade out over time\n  \n        \n        // Random color variation for each particle\n        vec3 particleColor = mix(\n            vec3(1.0, 0.3, 5.1), // Orange/red core\n            vec3(1.0, 0.8, 5.3), // Yellow/white hot\n            random(vec2(fi, seed + 2.0))\n        );\n        \n        // Add this particle's contribution\n        color += particleColor * brightness;\n    }\n    \n    // Add glow effect\n    color *= 3.2;\n    \n    // Output final color\n    fragColor = vec4(color*vec3(0.1,0.2,5.)*10., 1.0);\n}","name":"Image","description":"","type":"image"}]}