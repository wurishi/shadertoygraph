{"ver":"0.1","info":{"id":"DsdyDX","date":"1695590046","viewed":136,"name":"Boken field","username":"vaskaroman","description":"fork of https://www.shadertoy.com/view/Ms3SW2\ntesting bokeh","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["bokeh","particles","field"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int NUM_PARTICLES = 50;\nconst int NUM_PARTICLES_Y = 30;\nconst float PI = 3.141592;\nconst float TAU = 2.0 * PI;\n\nfloat bokeh(vec2 p, vec2 a, float r)\n{\n    float l = length(p - a);\n    \n    if (l > r + 0.001)\n    {\n        return 0.0;\n    }\n    \n    float s = 0.01;\n    float d = l * exp(sin(5.0 * atan(p.y - a.y, p.x - a.x)) * 0.01);\n    float t = smoothstep(r + s, r - s, d);\n    \n    return 0.000001 * t / pow(r, 2.1);\n}\n    \nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\t\n    float aperture = 0.185;\n    float focus = 5.5;\n    \n    if (iMouse.z > 0.0)\n    {\n        aperture = iMouse.x / iResolution.x;\n        focus = 7.0 * iMouse.y / iResolution.y;\n    }\n\n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.y;\n    vec3 c = vec3(0);\n    \n    for (int i = 0; i < NUM_PARTICLES; i++)\n    {\n        for (int j = 0; j < NUM_PARTICLES_Y; j++)\n        {\n            vec3 color;\n            vec3 pos;\n            float radius;\n            \n            float float_i = float(i) / float(NUM_PARTICLES);\n            float float_j = float(j) / float(NUM_PARTICLES);\n\n            float p = iTime * 0.5;\n            \n            float sinsin = sin(p + float_j*10.)*cos(p + float_i * 10.);\n            color = normalize(\n                vec3(\n                    0.5*abs(sinsin),\n                    0.3*abs(sinsin),\n                    0.2*abs(sinsin)\n                )\n            );\n            pos = vec3(\n                float_i*8.-4. + 0.1*sinsin,\n                -0.7+0.1*sin(p + float_j * 20.) * sin(float_i * 10.),\n                5. - float_j*10. + 0.51*sinsin\n            );\n            float d = pos.z + 2.5;\n\n            if (d > 0.0)\n            {\n                pos.xy /= d*0.5;\n                radius = max(abs(1.0 / d - 1.0 / focus) * aperture, 0.0001);\n                c += color * bokeh(uv, pos.xy, radius);\n            }\n        }\n    }\n    \n\tc = pow(c, vec3(1.0 / 2.2));\n\tfragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}