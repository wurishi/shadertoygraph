{"ver":"0.1","info":{"id":"4ltXWl","date":"1482182373","viewed":220,"name":"Stars Pattern","username":"gigatron","description":"Fast conversion of stars pattern... READABLE code not like iq :) or others math masters :","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["colors","amiga","stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsjGWm","filepath":"https://soundcloud.com/spiral-se/hurt-my-feelings-amiga-star-remix","previewfilepath":"https://soundcloud.com/spiral-se/hurt-my-feelings-amiga-star-remix","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T 2.0+sin(iTime) \n#define ST iTime \n// for Christmas Gigat..Ron-an France \n\nvec3 hsv2rgb(vec3 c) {//https://github.com/hughsk/glsl-hsv2rgb\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvec2 rotate(vec2 point, float rads) {\n\tfloat cs = cos(rads);\n\tfloat sn = sin(rads);\n\treturn point * mat2(cs, -sn, sn, cs);\n}\n\nfloat star(vec2 p) {\n\tfloat i = (length(p) > 0.8) ? 1. : 0.;\n\t\tfloat j = 0.0;\n\n    \n\tfor (float i=0.0; i<360.0; i+=72.0)\n\t{\n\t\tvec2 p0 = rotate(p.yx, radians(i)+mod(ST,1.25));// no need sinus in this case !!!\n\t\tif (p0.x > 0.020 ) j++;\n\t}\n\n\treturn  (j<2.? 1. : 0.)  ;// anunaki code !\n\t\n\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p=  fragCoord.xy / iResolution.xy ;\t\n\tp.x = p.x * iResolution.x/iResolution.y; // ratio\n\t\n\tfloat color=0.;\t// color used\n\t// fast amiga like x,y grid ... for loop to fill x,y pos\n\t// but sure there is another fast way in math World !\n    // and this is the way without for-loop ... Stolen from Fabrice :)\n    \n    \n       color +=star(p-vec2(floor(p*8.+0.5)/8.));\n \n/*\tfor (float i=0.;i<16.;i++){\n\t    for (float j=0.0;j<10.;j++){\t \n\n\t     color +=star(p-vec2(i/8.,j/8.));\n\t\n\t\t}\n\n\t}\n*/\t\n    \n    vec3 cx = vec3( p.x+ST*0.4+p.x, 1.0, 1.0-p.y );\n\tvec3 fcol = hsv2rgb( cx );\n  \n     \n    /// \n    vec2 uv =  fragCoord.xy / iResolution.xy  * 2.0 - 1.0;\n\tuv.x *= iResolution.x/iResolution.y;\n\t\n\t\n\tvec3 finalColor = vec3( 0.0, 0.0, 0.0 );\n\n\tfloat a = atan( uv.y / uv.x );\n\tfloat r = length( uv );\n\t   \n\tfloat timeT = sin(ST) * 0.5 + 0.5;\n\tfloat move = mix( -0.8, 0.8, timeT );\n\t\n     \tfloat t = abs( sin(((a + r*move)* 4.0)) * 1.3 );\n   \n     \n    finalColor = texture(iChannel1,uv-vec2(0.1,0.0) ).xxz *t;\n   \n    \n    fragColor = vec4( fcol*color*finalColor,1.0) *3.8;\n \n}","name":"Image","description":"","type":"image"}]}