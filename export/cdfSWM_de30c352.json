{"ver":"0.1","info":{"id":"cdfSWM","date":"1668968381","viewed":354,"name":"swirl explosion","username":"lomateron","description":"click to interact\nkey W to reset\nsimilar to https://www.shadertoy.com/view/7lVGzD\nbut this one has mass appart from just 2D velocity vectors","likes":29,"published":3,"flags":48,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.xy;\n    vec4 a = texture(iChannel0,u);\n    fragColor = (+sin(a.x+vec4(0,1,2,4)+5.)*.5\n                 +sin(a.y+vec4(5,3,1,4)+5.)*.5+1.)*a.z;\n    //fragColor = a.zzzz;\n    //fragColor = a;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4  r = vec4(0);\n    vec4  a = A(u);\n    float z = 6.;//kernel convolution size\n    for(float i=-z; i<=z; ++i){\n    for(float j=-z; j<=z; ++j){\n        float l = length(vec2(i,j));\n        if((i==0.&&j==0.)|| l>z-.1){continue;}\n        vec2  c = normalize(vec2(i,j));\n        vec4  a2= A(u+vec2(i,j));\n        vec4  b = a2-a;\n        r.xy += c*b.z*cos(dot(b.yx*vec2(-1,1),vec2(i,j))*.3)*exp(-l*l*.1)*.5;\n        //r.xy += c*min(b.z,0.)*cos(dot(b.yx*vec2(-1,1),vec2(i,j))*.2)*exp(-l*l*.1)*.5;\n    }}\n    fragColor = r;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define B(u) texture(iChannel1,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4 t = A(u);\n    vec2 m = +t.xy +B(u).xy;\n    float s = 0.;\n    float z = 6.;//kernel convolution size\n    for(float i=-z; i<=z; ++i){\n    for(float j=-z; j<=z; ++j){\n        if(length(vec2(i,j))>z-.1){continue;}\n        vec2 c = (m+vec2(i,j));\n        s += exp(-dot(c,c));\n    }}\n    if(s==0.){s = 1.;}\n    s = 1./s;\n    \n    fragColor = vec4(m,s,0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define B(u) texture(iChannel1,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    float tz = 0.;\n    vec4  a  = vec4(0);\n    float z  = 6.;//kernel convolution size\n    for(float i=-z; i<=z; ++i){\n    for(float j=-z; j<=z; ++j){\n        if(length(vec2(i,j))>z-.1){continue;}\n        vec4 t = A(u+vec2(i,j));\n        vec4 m = B(u+vec2(i,j));\n        vec2 c = (m.xy-vec2(i,j));\n        float z = t.z*exp(-dot(c,c));\n        a.xy += z*m.xy;\n        a.z  += z*m.z;\n        tz   += z;\n    }}\n    if(tz==0.){tz = 1.;}\n    a.xy /= tz;\n    //a = A(u);\n    if(iMouse.z>0.)\n    {\n        vec2 m = 22.*(u-iMouse.xy)/iResolution.y;\n        a += vec4(-normalize(m),0,0)*exp(-dot(m,m));\n    }\n    float keyW = texture( iChannel2, vec2(87.5/256.,.25) ).x;\n    if(iFrame==0||keyW!=0.)\n    {\n        vec2 m = 22.*(u-iResolution.xy*.5)/450.;\n        a = vec4(0,0,.5,0)-vec4(8,8,0,0)*exp(-dot(m,m));\n    }\n    fragColor = a;\n}","name":"Buffer C","description":"","type":"buffer"}]}