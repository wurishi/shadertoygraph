{"ver":"0.1","info":{"id":"4fGSRW","date":"1714840073","viewed":41,"name":"Simple mandelbrot - gray","username":"techbelly","description":"Simplest mandelbrot shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat map(float value, float i1, float i2, float o1, float o2) {\n    float i_range = i2 - i1;\n    float o_range = o2 - o1;\n    return ((value - i1) * i_range) * o_range + o1;\n}\n\nfloat lerp(float a, float b, float t){\n    return a + (b-a) * (1.0 - (1.0 - t) * (1.0 - t));\n }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float z_a = 0.0;\n    float z_b = 0.0;\n\n    float time = fract(iTime / 30.0);\n\n    float desired_a_1 = lerp(-2.0, -0.74364, time);\n    float desired_a_2 = lerp(2.0, -0.74365, time);\n    float desired_b_1 = lerp(-2.0, 0.13182, time);\n    float desired_b_2 = lerp(2.0, 0.13183, time);\n\n\n    float c_a = map(uv.x, 0.0, 1.0, desired_a_1, desired_a_2);\n    float c_b = map(uv.y, 0.0, 1.0, desired_b_1, desired_b_2);\n    \n    \n    int m_count = 10000;\n    int esc_value = m_count;\n    for (int i = 0; i < m_count; i++) {\n        float new_za = z_a * z_a - z_b * z_b;\n        float new_zb = 2.0 * z_a * z_b;\n        z_a = new_za + c_a;\n        z_b = new_zb + c_b;\n        float mag_squared = z_a * z_a + z_b * z_b;\n        if (mag_squared > 4.0 && esc_value == m_count) {\n           esc_value = i;\n        } \n    }\n    float shade = float(esc_value)/float(m_count);\n    shade = pow(shade, 0.2);\n    \n    // Output to screen\n    fragColor = vec4(shade,shade,shade,1.0);\n}","name":"Image","description":"","type":"image"}]}