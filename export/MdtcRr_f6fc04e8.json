{"ver":"0.1","info":{"id":"MdtcRr","date":"1517866489","viewed":446,"name":"Hypnotic Flower Power ","username":"Flopine","description":"Make shader and love, not war","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","colorful","flower","repetition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Color tricks inspired by IQ's article : https://iquilezles.org/articles/palettes\n// and by dlsym shader : https://www.shadertoy.com/view/lljfDd\n// Thanks to wsmind and leon for teaching me :) \n\n\n#define PI 3.141592\n#define TAU 2.*PI\n\nmat2 rot (float angle)\n{\n    float c=cos(angle);\n    float s=sin(angle);\n    return mat2 (c,s,-s,c);\n}\n\nvec2 logmoda (vec2 p, float per)\n{\n    float angle = atan(p.y,p.x);\n\n    float l = length(p);\n    //magic line from dlsym shader\n    float r = log(sqrt(p.x*p.x+p.y*p.y)); \n    angle = mod(angle-per/2.,per)-per/2.;\n    return vec2(angle, r);\n}\n\nfloat cylY (vec3 p, float r)\n{return length(p.xz)-r;}\n\n\nfloat SDF (vec3 p)\n{\n    \n\tfloat per =2.2;\n\tp.xy *= rot(iTime*0.2);\n    p.xy = logmoda(p.xy, TAU/6.);\n    p.xy *= rot(iTime)*p.yz;\n    p.z = mod(p.z-per/2.,per)-per/2.;\n\n    return cylY(p,0.1);\n}\n\n//IQ's code from article : https://iquilezles.org/articles/palettes\nvec3 palette(in float oscill, in vec3 a, in vec3 b, in vec3 c, in vec3 phase )\n{\n    return a + b*cos(TAU*(c*oscill+phase));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(fragCoord/iResolution.xy)-1.;\n\tuv.x *= iResolution.x/iResolution.y;\n    \n    vec3 p = vec3 (0.001,0.001, -4.);\n    vec3 dir = normalize(vec3(uv,1.));\n    \n    float shad = .5;\n    \n    for(int i=0; i<90; i++)\n    {\n        float d = SDF(p);\n        if (d<0.001 || d>5.)\n        {\n            shad = float (i)*PI/60.;\n            break;\n        }\n        p += d*dir*0.8;\n    }\n    \n    // Time varying pixel color\n    vec3 col = (1.-shad)/palette(p.z*0.01,\n                                 vec3(0.5), \n                                 vec3(0.5),\n                                 vec3(2.,1.,0.),\n                                 vec3(0.50, 0.30, 0.8)\n                                );\n\n    // Output to screen\n    fragColor = vec4(pow(col,vec3(2.2)),1.0);\n}","name":"Image","description":"","type":"image"}]}