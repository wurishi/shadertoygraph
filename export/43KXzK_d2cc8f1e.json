{"ver":"0.1","info":{"id":"43KXzK","date":"1720188906","viewed":20,"name":"[ARTS1308] Julia set","username":"ARTS1308","description":"Tutorial for ARTS1308","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["ifs","arts1308"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAXITER 50\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 z = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 c = vec2(-0.8, 0.8*cos(iTime*.2));\n    int iter = 0;\n    while (length(z)<2. && iter < MAXITER) {\n        z = vec2(z.x*z.x - z.y*z.y, 2.*z.x*z.y);\n        z += c;\n        iter += 1;\n    }\n    float color = float(iter)/float(MAXITER);\n    color = (float(iter)+1.-log(log(length(z)))/log(2.))/(float(MAXITER)+1.-log(log(length(z)))/log(2.));\n    color = pow(color, .4);\n    fragColor = vec4(vec3(color), 1.);\n}","name":"Image","description":"","type":"image"}]}