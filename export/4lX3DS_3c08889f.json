{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// FMS_Cat - This Is My Own Sushi !!\n// GLSL Graphics for Tokyo Demo Fest 2015\n// 2015/02/22\n//\n// Greeting:\n//   gyabo\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define ITER 72\n#define SITER 32\n\n#define dance (t*1.)\n\n#define tMax 0.\n#define t mod(iTime,tMax)\n#define r iResolution.xy\n#define v vec2(0.,1.)\n#define cl(i) clamp(i,0.,1.)\n#define PI 3.1415926\n\nfloat hash(vec2 _v)\n{\n  return fract(sin(dot(_v,vec2(89.44,19.36)))*229.22);\n}\n\nfloat iHash(vec2 _v,vec2 _r)\n{\n  float h00 = hash(vec2(floor(_v*_r+v.xx)/_r));\n  float h10 = hash(vec2(floor(_v*_r+v.yx)/_r));\n  float h01 = hash(vec2(floor(_v*_r+v.xy)/_r));\n  float h11 = hash(vec2(floor(_v*_r+v.yy)/_r));\n  vec2 ip = vec2(smoothstep(v.xx,v.yy,mod(_v*_r,1.)));\n  return (h00*(1.-ip.x)+h10*ip.x)*(1.-ip.y)+(h01*(1.-ip.x)+h11*ip.x)*ip.y;\n}\n\nfloat noise(vec2 _v)\n{\n  float sum = 0.;\n  for(int i=1; i<6; i++)\n  {\n    sum += iHash(_v+vec2(i),vec2(2.*pow(2.,float(i))))/pow(2.,float(i));\n  }\n  return sum;\n}\n\nfloat noiseT(vec2 _v)\n{\n  float sum = 0.;\n  for(int i=1; i<6; i++)\n  {\n    sum += iHash(_v+vec2(i)*t,vec2(2.*pow(2.,float(i))))/pow(2.,float(i));\n  }\n  return sum;\n}\n\nfloat smin(float d1, float d2, float k){\n float h = exp(-k * d1) + exp(-k * d2);\n return -log(h) / k;\n}\n\nvec2 rotate(vec2 i,float th)\n{\n  return mat2(cos(th),-sin(th),sin(th),cos(th))*i;\n}\n\nfloat sphere(vec3 _p,float _r)\n{\n  return length(_p)-_r;\n}\n\nfloat box(vec3 p,vec3 b)\n{\n  vec3 d=abs(p)-b;\n  return min(max(d.x,max(d.y,d.z)),0.)+length(max(d,0.));\n}\n\nfloat box(vec3 p,float b){return box(p,vec3(b));}\n\nvec2 geta(vec3 p)\n{\n  float dis=box(p,vec3(.4,.05,.25));\n  dis=min(dis,box(p+vec3(.2,.1,.0),vec3(.05,.05,.2)));\n  dis=min(dis,box(p+vec3(-.2,.1,.0),vec3(.05,.05,.2)));\n  return vec2(dis,0.);\n}\n\nvec2 shari(vec3 p)\n{\n    float dis = sphere(p,.02);\n    float ii = 0.;\n    for( int i=0; i<26; i++ )\n    {\n        ii += 1.;\n  vec3 pt=vec3(sin(hash(ii*v.yy)*dance),sin(hash(ii*1.13*v.yy)*dance),sin(hash(ii*1.23*v.yy)*dance));\n        dis = smin( dis, sphere( p-pt*vec3(.17,.06,.09),.02 ), 49. );\n    }\n    return vec2(dis,1.);\n}\n\nvec2 neta(vec3 p)\n{\n  p.y+=pow(length(p.xz),2.);\n  p.yz=rotate(p.yz,p.x*10.*sin(dance));\n  float dis=box(p,vec3(.22,.02,.11));\n  return vec2(dis,2.);\n}\n\n#define check if(disC.x<dis.x){dis=disC;}\nvec2 distFunc(vec3 p)\n{\n  vec2 dis=geta(p+v.xyx*.12+abs(sin(dance))*v.xyx*.2);\n  vec2 disC=shari(p);check;\n  disC=neta(p-v.xyx*.12-abs(sin(dance))*v.xyx*.2);check;\n  return dis;\n}\n\nvec3 getNormal(vec3 p,float d)\n{\n  return normalize(vec3(\n    distFunc(p+vec3(d,0.,0.)).x-distFunc(p+vec3(-d,0.,0.)).x,\n    distFunc(p+vec3(0.,d,0.)).x-distFunc(p+vec3(0.,-d,0.)).x,\n    distFunc(p+vec3(0.,0.,d)).x-distFunc(p+vec3(0.,0.,-d)).x\n  ));\n}\n\nfloat shadow(vec3 _ray,vec3 _lig,float k)\n{\n  vec3 ray=normalize(_lig-_ray);\n  float maxL=length(_lig-_ray);\n  float ret=1.;\n  float dist=0.;\n  float rayL=0.;\n  vec3 rayP=_ray;\n  for(int c=0;c<SITER;c++)\n  {\n    float dist=distFunc(rayP).x;\n    if(dist<1E-4){return 0.;}\n    rayL+=dist;\n    rayP=_ray+ray*rayL;\n    ret=min(ret,dist*k/rayL);\n    if(maxL<rayL){return ret;}\n  }\n  return 0.;\n}\n\nfloat plasma(vec3 p)\n{\n  return cl(sin(length((p-v.yyy*vec3(.4,.2,.7))*200.))*4.6+sin(p.x*30.+t)*3.9+sin((p.x*sin(t)+p.y*cos(t*.7)+p.z*.7)*64.)*6.4+.4);\n}\n\nvec3 shadeGeta(vec3 rayP,vec3 camP)\n{\n  vec3 col=v.xxx;\n\n  vec3 nor=getNormal(rayP,1E-4);\n\n  vec3 lig=v.xyx;\n  float dif=cl(dot(normalize(lig-rayP),nor))*.3;\n  float spe=pow(cl(dot(normalize(normalize(lig-rayP)+normalize(camP-rayP)),nor)),3E1);\n  float sha=shadow(rayP+1E-3*nor,lig,1E1);\n  float dec=exp(-length(lig-rayP)*.1);\n\n  vec3 base=vec3(.7,.3,.1)+plasma(rayP)*vec3(.0,.7,.2);\n  col+=((dif+1.)*(sha*.5+.5)*dec*base+spe*v.yyy)*v.yyx;\n\n  return col;\n}\n\nvec3 shadeShari(vec3 rayP,vec3 camP)\n{\n  vec3 col=v.xxx;\n\n  vec3 nor=getNormal(rayP,1E-4);\n\n  vec3 lig=v.xyx;\n  float dif=cl(dot(normalize(lig-rayP),nor))*.3;\n  float spe=pow(cl(dot(normalize(normalize(lig-rayP)+normalize(camP-rayP)),nor))*1.02,9E1);\n  float sha=shadow(rayP+1E-3*nor,lig,1E1);\n  float dec=exp(-length(lig-rayP)*.1);\n\n  col+=((dif*.2+.8)*(sha*.1+.3)*dec*v.yyy+spe*v.yyy);\n\n  return col;\n}\n\nvec3 shadeNeta(vec3 rayP,vec3 camP)\n{\n  vec3 col=v.xxx;\n\n  vec3 nor=getNormal(rayP,1E-4);\n\n  vec3 lig=v.xyx;\n  float dif=cl(dot(normalize(lig-rayP),nor))*.3;\n  float spe=pow(cl(dot(normalize(normalize(lig-rayP)+normalize(camP-rayP)),nor)),3E1);\n  float sha=shadow(rayP+1E-3*nor,lig,1E1);\n  float dec=exp(-length(lig-rayP)*.1);\n  col+=((dif+.5)*(sha*.5+.5)*dec*v.yxx+spe*v.yyy);\n\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 p=(fragCoord.xy*2.-r)/r.x;\n\n  float camR=1.+sin(dance*2.+1.5)*.2;\n  float camT=t*.8;\n\n  vec3 camP=vec3(cos(camT),.3,sin(camT))*camR;\n  vec3 camC=vec3(0.,-.1,0.);\n  vec3 camA=vec3(0.,1.,0.);\n  vec3 camS=cross(normalize(camC-camP),camA);\n  vec3 camU=cross(camS,normalize(camC-camP));\n  vec3 ray=normalize(camS*p.x+camU*p.y+normalize(camC-camP));\n\n  vec2 dist=v.xx;\n  float rayL=0.;\n  vec3 rayP=camP;\n  for(int i=0;i<ITER;i++)\n  {\n    dist=distFunc(rayP);\n    rayL+=dist.x*.8;\n    if(length(camP)*10.<rayL){ break; }\n    rayP=camP+ray*rayL;\n  }\n\n  vec3 col=v.xxx;\n\n  if(abs(dist.x)<1E-3)\n  {\n    float dis=1.6/clamp(rayL,1.8,99.);\n    if(dist.y==0.)\n    {\n      col+=shadeGeta(rayP,camP);\n    }\n    if(dist.y==1.)\n    {\n      col+=shadeShari(rayP,camP);\n    }\n    if(dist.y==2.)\n    {\n      col+=shadeNeta(rayP,camP);\n    }\n  }\n  else\n  {\n    col=vec3(.1,.8,.4);\n    col+=cl((sin(atan(p.y,p.x)*40.+length(p)*20.+t*10.))*9.)*vec3(.1,-.3,.4);\n  }\n\n  col-=length(p)*.2*v.yyy;\n\n  fragColor=vec4(col,1.);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4lX3DS","date":"1424623268","viewed":444,"name":"[TDF15]This Is My Own Sushi !!","username":"FMS_Cat","description":"GLSL Graphics for Tokyo Demo Fest 2015\nraymarching\noldskool sushi","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","metaball"],"hasliked":0,"parentid":"","parentname":""}}