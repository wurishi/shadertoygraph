{"ver":"0.1","info":{"id":"4dyfDt","date":"1531027345","viewed":386,"name":"hypnotic parallelograms","username":"laserdog","description":"trippy effect. thanks @nimitz for the cool parallax technique (https://www.shadertoy.com/view/XssXz4)","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["parallax","trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float size = .3;\nconst float thickness = .05;\nconst float iterations = 15.;\n\nmat2 rotate(float rads)\n{\n    return mat2(cos(rads), sin(rads), -sin(rads), cos(rads));\n}\n\nfloat getDist(vec2 uv)\n{\n    vec2 coord = rotate(sin(iTime * .65) * 2.35) * abs(fract(uv) - .5);\n    return max(coord.x, coord.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 1.75 * (2. * fragCoord.xy - iResolution.xy) / iResolution.y;\n    vec2 stepAmt = uv * .005;\n    float colAmt = 0.;\n        \n    for (float i = 0.; i < iterations; i++)\n    {\n        uv += stepAmt * i;\n        float maxDist = getDist(uv);\n        colAmt += (smoothstep(size, size - .05, maxDist)\n        * smoothstep(size - thickness, size - (thickness - .05), maxDist));\n    }\n        \n    fragColor = vec4(colAmt + (1. - step(0.2, colAmt)) * .1, 0., 0., 1.);\n}","name":"Image","description":"","type":"image"}]}