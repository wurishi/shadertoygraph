{"ver":"0.1","info":{"id":"DdsXRj","date":"1669211906","viewed":166,"name":"Normal CRT Screen","username":"Feishiko","description":"made for my friend","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    //SCREEN TORT\n\n    float d2 = dot(vec2(.5) - uv, vec2(.5) - uv);\n\n    vec3 col = smoothstep(.0, .01, (uv - vec2(.5)) * (1.+ d2) + vec2(.5)).rrr * smoothstep(.0, .01, (uv - vec2(.5)) * (1.+ d2) + vec2(.5)).ggg * smoothstep(1. - .0, 1. - .01, (uv - vec2(.5)) * (1.+ d2) + vec2(.5)).rrr * smoothstep(1. - .0, 1. - .01, (uv - vec2(.5)) * (1.+ d2) + vec2(.5)).ggg;\n    vec4 tex = texture(iChannel0, (uv - vec2(.5)) * (1.+ d2) + vec2(.5));\n\n    //SCANLINE\n    \n    float id = floor(uv.y*150.0);\n    \n    vec3 scanline = vec3(mod(id, 2.));\n    // Output to screen\n    fragColor = vec4(tex.rgb*col*scanline, 1.);\n}","name":"Image","description":"","type":"image"}]}