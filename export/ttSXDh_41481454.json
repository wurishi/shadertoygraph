{"ver":"0.1","info":{"id":"ttSXDh","date":"1565728117","viewed":191,"name":"rayMarch learn","username":"dnkorbut","description":"just follow the tutorial","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_MARCH 64\n#define MAX_DST 100.\n#define MIN_DST .00032\n\nvec3 light;\nvec3 nor;\nvec3 collideP;\n\nfloat getDistance(vec3 p) {\n    vec4 sph = vec4(0., 1., 6., 1.);\n    vec4 sph2 = vec4(1.5, 0.8, 6., 0.8);\n    \n    float gPlane = abs(p.y);\n    float sphFunc = length(p - sph.xyz) - sph.w;\n    float sphFunc2 = length(p - sph2.xyz) - sph2.w;\n    \n    if(gPlane < sphFunc && gPlane < sphFunc2) {\n        nor = vec3(0., 1., 0.);\n        return gPlane;\n    }else{\n        if(sphFunc < sphFunc2) {\n        \tnor = normalize(p - sph.xyz);\n        \treturn sphFunc;\n        }else{\n            nor = normalize(p - sph2.xyz);\n        \treturn sphFunc2;\n        }\n    }\n}\n\nfloat rayMarch(vec3 start, vec3 dir) {\n    float ret = 0.;\n    vec3 p;\n    int i;\n    float dst;\n    \n    for(i = 0; i < MAX_MARCH; i++) {\n        collideP = start + dir * ret;\n        dst = getDistance(collideP);\n        ret += dst;\n        if(ret > MAX_DST || dst < MIN_DST) {\n           break; \n        }\n    }\n    return ret;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n\n    vec3 col = vec3(0., 0., 0.);\n\n    light = vec3(sin(iTime) * 10., 6., cos(iTime) * 10.);\n    vec3 pt = vec3(0., 1., 0.);\n    vec3 dir = normalize(vec3(uv.x, uv.y, 1.));\n    \n    col.g = rayMarch(pt, dir);\n    \n    dir = normalize(light - collideP);\n    col.r = dot(dir, nor);\n    \n    float shadow = rayMarch(collideP + (dir * 0.02), dir);\n    \n    if(shadow + MIN_DST * 2. < length(light - collideP)) {\n        col.r = .1;\n    }\n    \n    fragColor = vec4(col.r, col.r, col.r, 1.);\n}\n","name":"Image","description":"","type":"image"}]}