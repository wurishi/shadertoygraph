{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#ifdef GL_ES  \nprecision highp float;  \n#endif  \n\n#define PI 3.1416\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//map the xy pixel co-ordinates to be between -1.0 to +1.0 on x and y axes\n\t//and alter the x value according to the aspect ratio so it isn't 'stretched'\n\tvec2 p = (2.0 * fragCoord.xy / iResolution.xy - 1.0) \n\t\t\t* vec2(iResolution.x / iResolution.y, 1.0);\n\n\t//now, this is the usual part that uses the formula for texture mapping a ray-\n\t//traced cylinder using the vector p that describes the position of the pixel\n\t//from the centre.\n\tvec2 uv = vec2(atan(p.y, p.x) * 1.0/PI, 1.0 / sqrt(dot(p, p))) * vec2(2.0, 1.0);\n\t\n\t\n\t//now this just 'warps' the texture read by altering the u coordinate depending on\n\t//the val of the v coordinate and the current time\n\tuv.x += sin(2.0 * uv.y + iTime * 0.5);\n\t\t\n\tvec3 c = texture(iChannel0, uv).xyz\n\t\t\n\t//this divison makes the color value 'darker' into the distance, otherwise\n    //everything will be a uniform brightness and no sense of depth will be present.\n\t\t\t/ (uv.y * 0.5 + 1.0);\n\t\n\tfragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xdl3WH","date":"1368972726","viewed":608,"name":"Brick Vortex","username":"GhettoWolf","description":"simple alteration to the classic tunnel effect. ","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","warping"],"hasliked":0,"parentid":"","parentname":""}}