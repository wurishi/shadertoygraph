{"ver":"0.1","info":{"id":"fd2Bzh","date":"1645699081","viewed":358,"name":"Cheap chromatic aberration","username":"tuxifan","description":"A super simple chromatic aberration shader, based on my \"bad color print\" shader. It's a rather imprecise simulation but it should fit most games and stuff. No blur or anything.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["simple","chromaticaberration","colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Public Domain, feel free to use whereever and however you want.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n\n    const float intensity = 1.0;\n    float offset = distance(uv, vec2(0.5, 0.5))*(0.01*intensity);\n    fragColor = vec4(texture(iChannel0, uv+vec2(offset, 0.0)).r, texture(iChannel0, uv+vec2(-offset, 0.0)).g, texture(iChannel0, uv).b, 1.0);\n}","name":"Image","description":"","type":"image"}]}