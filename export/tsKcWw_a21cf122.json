{"ver":"0.1","info":{"id":"tsKcWw","date":"1698870304","viewed":75,"name":"Line circle intersection","username":"Kaeylos","description":"small exemple line cicle intersection","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["intersection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float diskSDF(vec2 pos, vec2 center, float radius) {\n\treturn length(pos-center) - radius;\n}\n\nfloat lineSDF(vec2 p, vec2 a, vec2 b) {\n\tvec2 ba = b - a;\n\tvec2 pa = p - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n\treturn length(pa - h * ba);\n}\n\nfloat lineCicleIntersect(vec3 cicle, vec2 a, vec2 b) {\n    vec2 dir = normalize(b - a);\n    vec2 toShpere = cicle.xy - a;\n    \n    vec2 point = dir * dot(toShpere -b, dir);\n    return length(point - cicle.xy) < cicle.z ? 1.0 : 0.0;\n}\n                  \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n\tvec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n\t//float zoom = 2.5;\n\t//uv *= zoom;\n\t\n    vec2 mouse = (iMouse.xy - iResolution.xy * .5) / iResolution.y;\n    vec3 color = vec3(0.7);  \n    \n    vec2 a = cos(iTime + vec2(0.,5.));\n\tvec2 b = cos(iTime + vec2(0.,5.) + 3.1);\n    \n    // line\n\tfloat thickness = .01;\n    float dLine = lineSDF(uv, a, b) - thickness;\n    color = vec3(dLine > thickness ? 1.0 : 0.0);\n    // mouse cicle\n    float radius = 0.2;\n    color = mix(color, vec3(lineCicleIntersect(vec3(mouse, radius), a, b), 1, 0), diskSDF(uv, mouse, radius) < 0.0 ? 1.0 : 0.0);\n\n\tfragColor = vec4(color, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}