{"ver":"0.1","info":{"id":"7ttyD7","date":"1659976397","viewed":293,"name":"Nearest Neighbor Voronoi","username":"MysteryPancake","description":"Inspired by the K-Nearest Neighbors algorithm","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["2d","fractal","voronoi","nearest","neighbor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(float co) {\n\treturn fract(sin(co) * mod(iTime * 0.5, 10.0));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord / iResolution.xy;\n\tfloat smallest = 1.0;\n\tvec3 result;\n\tfor (int i = 0; i < 100; i++) {\n\t\tfloat j = float(i);\n\t\tfloat xDiff = rand(j) - uv.x;\n\t\tfloat yDiff = rand(j + 1.0) - uv.y;\n\t\tfloat dist = xDiff * xDiff + yDiff * yDiff;\n\t\tif (dist < smallest) {\n\t\t\tsmallest = dist;\n\t\t\tresult = vec3(rand(j), rand(j + 1.0), rand(j + 2.0));\n\t\t}\n\t}\n\tfragColor = vec4(result, 1.0);\n}","name":"Image","description":"","type":"image"}]}