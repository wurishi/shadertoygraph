{"ver":"0.1","info":{"id":"tlKXR1","date":"1582222016","viewed":76,"name":"thy picker of colors","username":"supastav","description":"yes, its gamma corrected...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define tex iChannel0\n\nvec4 gammaCorrect(vec4 pixel)\n{\n    pixel = pow(pixel,vec4(2.2));\n    \n    return pixel;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat xMouse = clamp(iMouse.x / iResolution.x,0.,1.);\n    float yMouse = clamp(iMouse.y / iResolution.y,0.,1.)+.12;\n    \n    \n    // Time varying pixel color\n    vec3 col = gammaCorrect(texture(tex, uv)).rgb;\n    \n    if(uv.y<yMouse+.1 && uv.y>yMouse-.1 && uv.x<xMouse+.1 && uv.x>xMouse-.1)\n    {\n        col = vec3(gammaCorrect(texture(tex,iMouse.xy/iResolution.xy)));\n    }\n\n    // Output to screen\n    fragColor = vec4(pow(col,vec3(1./2.2)),1);\n}","name":"Image","description":"","type":"image"}]}