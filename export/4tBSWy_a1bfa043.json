{"ver":"0.1","info":{"id":"4tBSWy","date":"1446139091","viewed":150,"name":"mandelbrot move","username":"ran","description":"choose \n#define NORMAL\n#define ZOOM\n#define MOVE_Z0\n#define MOVE_DIM\n#define JULIA","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["julia","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define speed 10.\n#define dim 2.\n#define limit 500\n#define zoom 6.\n\n//// choose one and comment out\n//#define NORMAL\n#define ZOOM\n//#define MOVE_Z0\n//#define MOVE_DIM\n//#define JULIA\n\n\n//// color variation\n//#define COLORFUL\n//#define GRAY\n//#define CYAN\n//#define WHITE\n\n\n\nvec2 cx_pow(in vec2 z, const float n)\n{\n    float r = length(z);\n    float theta = atan(z.y/z.x);\n    if (z.x<0.) theta+=PI;\n    if (theta<0.) theta+=2.*PI;\n    theta -= PI;\n\treturn pow(r,n)*vec2(cos(n*theta),sin(n*theta));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = .3;\n    vec2 offset = vec2(-.34,.0);\n    \n    #ifdef NORMAL\n    scale = .3;\n    offset = vec2(-.34,.0);\n    #endif\n    #ifdef ZOOM\n    scale = pow(.3,zoom);\n    offset = vec2(-.05,.6805);\n    #endif\n    #ifdef MOVE_Z0\n    scale = .3;\n    offset = vec2(-.34,.0);\n    #endif\n    #ifdef MOVE_DIM\n    scale = .3;\n    offset = vec2(-.34,.0);\n    #endif\n    #ifdef JULIA\n    scale = .3;\n    offset = vec2(-.34,.0);\n    #endif\n    float t = iTime;\n    t *= speed;\n\tvec2 c = vec2(\n        (fragCoord.x / iResolution.x) * 16. - 8.,\n        (fragCoord.y / iResolution.y) * 9. - 4.5\n    );\n    c *= scale;\n    c += offset;\n    vec3 col = vec3(0.,0.,0.);\n    vec2 z = vec2(0,0);\n    #ifdef MOVE_Z0\n    float zr = 1.;\n    vec2 zim = cx_pow(vec2(0.,1.),mod(t/100.,6.));\n    z = zr*zim;\n    #endif\n    #ifdef JULIA\n    float zr = .5;\n    vec2 zim = cx_pow(vec2(0.,1.),mod(t/20.,6.));\n    z = c;\n    c = zr*zim;\n    #endif\n    const int h = limit;\n    int border = h;\n    #ifdef ZOOM\n    border = int(mod(1.5*t,2.*float(h)));\n    #endif\n    for (int i = 0; i < h; i++) {\n        if(i >= border) {\n            break;\n        }\n        if (length(z) >= 2.) {\n            col = vec3(1.-1./(.001+mod(float(i),4.))+.3,1./(.001+mod(float(i),7.))+.3,1.-1./(.001+mod(float(i),3.))+.3);\n            #ifdef WHITE\n            col = vec3(1.,1.,1.);\n            #endif\n            #ifdef GRAY\n            col = min(1.,1./log(.1*float(i)))*vec3(1.,1.,1.);\n            #endif\n            #ifdef CYAN\n            col = min(1.,1./log(.1*float(i)))*vec3(0.,1.,1.);\n            #endif\n            break;\n        }\n        float n = cos(t/3.)+1.;\n        n = dim;\n        #ifdef MOVE_DIM\n        n = t/10.;\n        #endif\n        z = cx_pow(z,n) + c;\n    }\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}