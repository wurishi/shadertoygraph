{"ver":"0.1","info":{"id":"XtGXDt","date":"1486333709","viewed":244,"name":"Ray Marching isVisible Example","username":"yumcyawiz","description":"this is the example code for my blog's ray marching articles.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//distance field\nfloat df(vec3 p, float r) {\n    return length(p) - r;\n}\n\n\nstruct Ray {\n    vec3 position;\n    int steps;\n    float t;\n};\n\n//it finds the intersection point and returns various data\nconst int maxSteps = 100;\nRay trace(vec3 from, vec3 rayDir) {\n    vec3 p = vec3(0);\n    int steps = 0;\n    float t = 0.0;\n    for(int i = 0; i < maxSteps; i++) {\n        p = from + t*rayDir;\n        float d = df(p, 1.0);\n        if(d < 0.001) {\n            steps = i;\n            break;\n        }\n        t += d;\n    }\n    return Ray(p, steps, t);\n}\n\n\n//is point p is visible from the light?\nbool isVisible(vec3 p, vec3 lightPos) {\n    Ray tr = trace(lightPos, normalize(p - lightPos));\n    if(distance(tr.position, p) < 0.1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\n\n//main\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //(-1, -1) ~ (1, 1)\n\tvec2 uv = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    \n    //camera settings\n    vec3 camPos = vec3(0, 0, -5);\n    vec3 camFront = vec3(0, 0, 1);\n    vec3 camUp = vec3(0, 1, 0);\n    vec3 camRight = cross(camUp, camFront);\n    float focus = 1.0;\n    \n    //ray direction\n    vec3 rayDir = uv.x*camRight + uv.y*camUp + focus*camFront;\n    \n    //trace\n    Ray tr = trace(camPos, rayDir);\n    \n    //light position\n\tvec3 lightPos = vec3(cos(iTime), 3, sin(iTime));\n    \n    //coloring\n    vec3 color = vec3(clamp(1.0 - pow(float(tr.t)/6.0, 4.0), 0.0, 1.0));\n    if(isVisible(tr.position, lightPos)) {\n    \tcolor = 1.0*color;\n    }\n    else {\n        color = 0.5*color;\n    }\n    \n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}