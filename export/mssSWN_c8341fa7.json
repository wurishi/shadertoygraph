{"ver":"0.1","info":{"id":"mssSWN","date":"1668951429","viewed":246,"name":"math - rotate uv 001","username":"catafest","description":"This is a simple demo about how to use algebra matrix rotation with sine and cosine functions. \nYou can see each step is commented.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["example","simple","math","uv","rotation","algebra","matrixrotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //set the uv to a proper size on the center of screen \n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / min(iResolution.x, iResolution.y);\n    // set rotation angle value\n    float rot = radians(0.0);\n    // this set rotation by time and \n    rot = iTime;\n    // algebra formula for rotation by matrix , https://en.wikipedia.org/wiki/Rotation_matrix\n    mat2 m = mat2(cos(rot), -sin(rot), sin(rot), cos(rot));\n    // rotation of uv with matrix algebra formula where is set the rotation angle \n    uv = m* uv;\n    // define float by function module from 1.0 and uv.x - uv.y\n    float d = mod(uv.x - uv.y, 1.0);\n    // color for fragColor is value of fload d by module function\n    vec4 col = vec4(vec3(d), 1.0);\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}