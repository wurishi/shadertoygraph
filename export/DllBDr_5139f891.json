{"ver":"0.1","info":{"id":"DllBDr","date":"1692807821","viewed":33,"name":"Idk, Rinnegan-ish thing","username":"DiogoMJP","description":"I'm just trying to practice and I thought about recreating something like the Rinnegan.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["naruto"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float _angle = 0.0;\n\nvec2 moveCenter( float t )\n{\n    _angle = _angle + 1.570746*t;\n    return vec2(cos(_angle), sin(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0*fragCoord - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    uv += 0.25 * moveCenter(iTime);\n    uv *= 0.75 * length(uv);\n    vec2 uv1 = uv0;\n    \n\n    // Time varying pixel color\n    float val = abs(sin(length(uv)*17.0 - iTime)/17.0)/0.01;\n    val = (val < 1.0 ? val : 1.0);\n    val *= smoothstep(0.0005, 0.00075, length(uv));\n    val *= 1.0 - smoothstep(0.5, 0.6, length(uv));\n    \n    vec3 col = val * vec3(0.75, 0.33, 0.8);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}