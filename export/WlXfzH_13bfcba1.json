{"ver":"0.1","info":{"id":"WlXfzH","date":"1595946577","viewed":105,"name":"happy Jumping tutorial","username":"archinaut","description":"Following Inigo Quilez's tutorial  https://youtu.be/Cfe5UQ-1L9Q","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","animation","inigoquilez"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//objects shpere = d1 ground plane = d2\nfloat map ( in vec3 pos)\n{\n\n    float d1 = length(pos) - 0.25;\n    float d2 = pos.y - (- 0.25);\n        \n    //combine objects, remove overlap pixels\n    return min (d1,d2);\n    \n   \n}\n    \n\t//lighting\n\n\tvec3 calcNormal( in vec3 pos)\n{\n    vec2 e = vec2(0.0001,0.0);\n    return normalize( vec3 (map(pos+e.xyy)-map(pos-e.xyy),\n                            map(pos+e.yxy)-map(pos-e.yxy),\n                            map(pos+e.yyx)-map(pos-e.yyx) ) );\n     \n}\n\nfloat castRay( in vec3 rayor, vec3 raydi)\n{\n    \tfloat t = 0.0;\n    \tfor( int i=0; 1<100; i++)\n    \t{\n        \tvec3 pos = rayor + t*raydi; \n        \n        \tfloat h = map( pos );\n        \tif ( h<0.001)\n            \tbreak;\n       \t \tt += h;\n        \tif( t> 20.0) break;\n        \n    }\n    if( t>20.0 ) t=-1.0;\n    \n    return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n\t//float f = smoothstep( 0.1, 0.5, length(p));\n    \n    vec3 rayor = vec3(0.0,0.0,1.0);\n    \n    vec3 raydi = normalize( vec3(p,-1.5));\n    \n    //background color+gradient\n    \n    vec3 col = vec3(0.55, 0.75,0.9)-0.6*raydi.y;\n    \n //ray marching\n    \n    \n    float t = castRay( rayor, raydi );\n    if (t>0.0)\n    {\n        \n        \n        vec3 pos = rayor + t*raydi;\n        vec3 nor = calcNormal(pos);\n        vec3 material = vec3(0.2,0.2,0.2);\n        \n        vec3  sun_dir = normalize(vec3(0.8,0.4,0.2));\n        float sun_dif = clamp( dot(nor,sun_dir),0.0,1.0);\n        float sun_sha = step(castRay( pos+nor*0.001, sun_dir), 0.0);\n        float sky_dif = clamp(0.5 + 0.5* dot(nor,vec3(0.0,1.0,0.0)),0.0,1.0);\n        float bounce_dif = clamp(0.5 + 0.5* dot(nor,vec3(0.0,-1.0,0.0)),0.0,1.0);\n        \n        \n        col  = material*vec3(7.0,4.5,3.0)*sun_dif*sun_sha;\n        col += material*vec3(0.5,0.8,0.9)*sky_dif;\n        col += material*vec3(0.7,0.3,0.2)*bounce_dif;\n    }\n    //gamma correction\n    col = pow( col, vec3(0.3545));\n\n \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}