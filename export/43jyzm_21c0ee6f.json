{"ver":"0.1","info":{"id":"43jyzm","date":"1727104272","viewed":14,"name":"Color to B&W...","username":"frogspawn","description":"My attempt at the colour to black and white challenge for https://gamedevelopment.tutsplus.com/a-beginners-guide-to-coding-graphics-shaders--cms-23313t","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blackandwhite"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragCol, vec2 fragCoord )\n{     \n    vec2 xy = fragCoord.xy / iResolution.xy; // Condensing this into one line \n    vec4 texColor = texture(iChannel0,xy); // Get the pixel at xy from iChannel0\n\n    float avg = sqrt( dot( texColor*texColor , vec4(.299,  .587, .114, 0) ));\n    float rd = avg - texColor.r;\n    float gd = avg - texColor.g;\n    float bd = avg - texColor.b;\n    \n    texColor.r += rd * (cos(iTime));\n    texColor.g += gd * (cos(iTime));\n    texColor.b += bd * (cos(iTime));    \n    \n    fragCol = texColor;\n}","name":"Image","description":"","type":"image"}]}