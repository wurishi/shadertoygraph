{"ver":"0.1","info":{"id":"3lsBR8","date":"1595979514","viewed":89,"name":"SDF Union example (simplified)","username":"rockes","description":"Forked from https://www.shadertoy.com/view/wdtXD4","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// distance of a circle\nfloat circleDist(vec2 p, float radius) {\n    return length(p) - radius;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {    \n \t// the sample point and the center of the screen\n    vec2 point = fragCoord.xy;\n\tvec2 center = iResolution.xy / 2.0;\n    \n    // radius of our circle\n    float circleRadius = 70.0;\n    \n    vec2 circle1Point = vec2(center.x / 2.0, center.y);\n    vec2 circle2Point = vec2(center.x * 1.5, center.y);\n    //sin goes from -1 to 1\n    float movement = sin(iTime) * distance(circle1Point, circle2Point) / 2.0;\n    vec2 circle3Point = vec2(center.x + movement, center.y);\n    \n    // is the point in the circle?\n    float circle1 = circleDist(point - circle1Point, circleRadius);\n    float circle2 = circleDist(point - circle2Point, circleRadius);\n    float circle3 = circleDist(point - circle3Point, circleRadius / 2.0);\n    \n    //original author's code (kind of)\n    //float dist = min(circle1, circle2);\n    //dist = min(dist, circle3);\n    //float c = mix(1.0, 0.0 , dist); //swapping 1.0 and 0.0 changes the background and foreground color\n    //vec3 color = vec3(c, c, c); //either black or white\n    //fragColor = vec4(color, 1.0);\n    \n    //same idea below, my own code\n    float hit = 0.0;\n    if(circle1<=0.0 || circle2<=0.0 || circle3<=0.0) {\n        hit = 1.0;\n    }\n    fragColor = vec4(hit, hit, hit, 1.0);\n}","name":"Image","description":"","type":"image"}]}