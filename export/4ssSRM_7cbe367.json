{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Log Spiral - Jim Bumgardner\n\nconst float PI = 3.1415926535897932384626433832795;\nconst float PId2 = PI/2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n  vec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n  p.y *= iResolution.y/iResolution.x;\n\n  // controls arms for each channel (2 layers)\n  vec3 n1_3 = vec3(-6.0,5.0,3.0);\n  vec3 m1_3 = vec3(3.0,11.0,-12.0);\n\n  // controls zoom effect for each layer\n  vec3 n4_6 = 10.0*iTime*vec3(.1,.11,.111);\n  vec3 m4_6 = 10.0*iTime*vec3(.2,.22,.222);\n\n  // color width for each channel\n  vec3 n7_9 = vec3(0.5);\n  vec3 m7_9 = vec3(0.5);\n\n  // color center for each channel\n  vec3 n10_12 = vec3(0.5);\n  vec3 m10_12 = vec3(0.5);\n\n  // Layer mix\n  float mixv = cos(iTime*.1)*0.5+0.5;\n\n  float a = atan(p.x, p.y);\n  float d = log(length(p));\n  // two layer version...\n  fragColor = vec4(mix(sin(d * n1_3 + vec3(a,-a-PId2,a+PId2) - n4_6) * n7_9 + n10_12, \n                          sin(d * m1_3 + vec3(a,-a-PId2,a+PId2) - m4_6)*sin(a*6.0) * m7_9 + m10_12, \n                          mixv), \n                      1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4ssSRM","date":"1398447121","viewed":817,"name":"Log Spiral","username":"jbum","description":"Logarithmic spiral effect","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["spiral","polar","logarithm"],"hasliked":0,"parentid":"","parentname":""}}