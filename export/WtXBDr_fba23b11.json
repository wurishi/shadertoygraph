{"ver":"0.1","info":{"id":"WtXBDr","date":"1596430371","viewed":95,"name":"Rounded Edge with illumination","username":"IA_Gaming","description":"it's my first shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["edge","rounded"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat RoundBox(vec2 p, vec2 b, float r){\n    return length(max(abs(p)-b+r,0.0))-r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 diffuse = texture(iChannel0, uv);\t//Background\n    \n    float radius = min(iResolution.x, iResolution.y)*.05;\n    vec2 halfres = 0.5 * iResolution.xy;\n    \n    float b = RoundBox(fragCoord.xy - halfres, halfres, radius);\n\n    // color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 c;\n\n    // Output to screen\n    if(b < -17.0){\n        c = mix(vec3(0.0), vec3(0.0), smoothstep(0.0,1.0,b));\n    \tfragColor = vec4(c,1.0)+diffuse;\n    }\n    else{\n        c = mix(vec3(col.r,col.g,col.b), vec3(0.0), smoothstep(0.0,1.0,b));\n    \tfragColor = vec4(c,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}