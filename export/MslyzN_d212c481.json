{"ver":"0.1","info":{"id":"MslyzN","date":"1487328145","viewed":106,"name":"Isart 3D Light","username":"ccappann","description":"First time make a little light on a special ball.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 color, in vec2 pixCoords )\n{\n    \n    float radius = 300.0;\n    \n    pixCoords.y -= iResolution.y / 2.0;\n    //pixCoords.x -= cos(iTime)*iResolution.x;\n    pixCoords.x -= iResolution.x / 2.0;\n    \n    float angle = iTime *2.0;\n    float angle2 = 90.0;\n    float newX = (pixCoords.x*cos(angle2)) + (pixCoords.y*sin(angle2));\n    float newY = (- pixCoords.x * sin(angle2)) + (pixCoords.y * cos(angle2));\n    float alpha = atan(newY,newX);\n    float rayon = 0.5*iResolution.y -100.0 + 10.0 * cos(20.0 * alpha) * sin(100.0);\n    float distance = sqrt(pow(newX,2.0) + pow(newY, 2.0));\n    \n    \n    vec3 height = vec3(newX, newY, sqrt(pow(rayon,2.0) - pow(newX,2.0) - pow(newY,2.0))) / rayon;\n    vec3 light = vec3(cos(iTime), cos(iTime), sin(iTime));\n    \n   \t\n\n    \n    float sunDistance = sqrt(pow(light.x - newX,2.0) + pow(light.y - newY,2.0));\n    \n   \tfloat lum = (height.x * light.x) + (height.y * light.y) + (height.z * light.z);\n    \n    \n    if ( distance < rayon)\n    {\n        color = vec4(0.0, 0.0, 1.0, 1.0) * max(lum,0.1);\n    }\n    else\n    {\n        color = vec4(0.0 , 0.0 , 0.0 , 1.0);\n    }\n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}