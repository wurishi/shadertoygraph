{"ver":"0.1","info":{"id":"MdKGzK","date":"1455426509","viewed":829,"name":"Electric V-Day","username":"Hsaka","description":"Valentines day mashup of Noise animation - Electric (https://www.shadertoy.com/view/ldlXRS) by nimitz and Heart (https://www.shadertoy.com/view/XsfGRn) by iq","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//V-Day version of Noise animation - Electric by nimitz (https://www.shadertoy.com/view/ldlXRS)\n\n//The domain is displaced by two fbm calls one for each axis.\n//Turbulent fbm (aka ridged) is used for better effect.\n\n#define time iTime*0.05\n#define tau 6.2831853\n\nmat2 makem2(in float theta){float c = cos(theta);float s = sin(theta);return mat2(c,-s,s,c);}\nfloat noise( in vec2 x ){return texture(iChannel0, x*.01).x;}\n\nfloat fbm(in vec2 p)\n{\t\n\tfloat z=3.;\n\tfloat rz = 0.;\n\tvec2 bp = p;\n\tfor (float i= 1.;i < 6.;i++)\n\t{\n\t\trz+= abs((noise(p)-0.5)*30.)/z;\n\t\tz = z*2.;\n\t\tp = p*2.;\n\t}\n\treturn rz;\n}\n\nfloat dualfbm(in vec2 p)\n{\n    //get two rotated fbm calls and displace the domain\n\tvec2 p2 = p*.7;\n\tvec2 basis = vec2(fbm(p2-time*1.6),fbm(p2+time*1.7));\n\tbasis = (basis-.5)*.2;\n\tp += basis;\n\t\n\t//coloring\n\treturn fbm(p*makem2(time*0.2));\n}\n\nfloat heart(vec2 p) \n{\n\tfloat r = length(p);   \n    float a = atan(p.x,p.y)/3.141593;\n    float h = abs(a);\n    float d = (13.0*h - 22.0*h*h + 10.0*h*h*h)/(6.0-5.0*h);\n    \n    // color\n\tfloat s = 1.0-0.5*clamp(r/d,0.0,1.0);\n\ts = 0.75 + 0.75*p.x;\n\ts *= 1.0-0.25*r;\n\ts = 0.5 + 0.6*s;\n\ts *= 0.5+0.5*pow( 1.0-clamp(r/d, 0.0, 1.0 ), 0.1 );\n    \n\treturn abs(mod(s*4.9,tau)-3.14)*5.+.1;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//setup system\n\tvec2 p = fragCoord.xy / iResolution.xy-0.5;\n\tp.x *= iResolution.x/iResolution.y;\n\tp*=4.;\n\t\n    float rz = dualfbm(p);\n\t\n\t//heart\n\tp /= exp(mod(time*10.,3.14159));\n\trz *= pow(abs((.8-heart(p))),.9);\n\t\n\t//final color\n\tvec3 col = vec3(.9,0.1,0.4)/rz;\n\tcol=pow(abs(col),vec3(.99));\n\tfragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}