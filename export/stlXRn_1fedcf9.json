{"ver":"0.1","info":{"id":"stlXRn","date":"1625078292","viewed":97,"name":"2D visibility with line segments","username":"gabor","description":"Attempt to create a visibility model in 2D using intersection of line segments.\nFonts and image created by hand and converted by a small script.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","raycast","linesegments","visibility"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Using the 2d line segment intersect algorithm\n// Segments are defined by one end point and a direction vector to the other end point\n// Text is hard coded into the segments, just like the little picture on the top left.\n// The rotating polygon is calculated in run time.\n\n#define cross2d(a, b) a.x*b.y - a.y*b.x\n#define fromPixel(p) (p - .5*iResolution.xy)/iResolution.y\n#define PI 3.1415926535897932384626433832795\n#define nsin(th, lo, hi) (hi-lo)*sin(th)+lo\n\nfloat aspect = 1.;\n\nint intersect(vec4 ray, vec4 sg, out vec2 p) {\n    int hit = 0;\n    p = ray.xy;\n\tfloat d = cross2d(ray.zw, sg.zw);\n\tif (d != 0.0) {\n\t\tvec2 dvu = ray.xy - sg.xy;\n\t\tfloat s = cross2d(ray.zw, dvu);\n\t\tfloat t = cross2d(sg.zw, dvu);\n\t\tif (d < 0.) {\n\t\t\ts = -s; t = -t; d = -d;\n\t\t}\n\t\tif (s >= 0. && s < d && t >= 0. && t < d) {\n            p.xy = ray.xy + t*ray.zw/d;\n            hit = 1;\n\t\t}\n\t}\n\n    return hit;\n}\n\nint intersectText(vec4 ray, out float d) {\n    int hit = 0;\n    vec4 sg;\n    vec2 iv;\n    vec2 p = ray.xy+ray.zw;\n\n    // 2\n    sg = vec4(-0.1661, 0.2619, 0.0351, 0.0108); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.131, 0.2727, 0.0351, -0.0216); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.0959, 0.2511, 0, -0.0217); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.0959, 0.2294, -0.0234, -0.0433); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.1193, 0.1861, -0.0702, -0.0649); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.1895, 0.1212, 0.0936, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    // D\n    sg = vec4(-0.0538, 0.1212, 0, 0.1515); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.0538, 0.2727, 0.0819, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(0.0281, 0.2727, 0.0351, -0.0433); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(0.0632, 0.2294, 0, -0.0649); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(0.0632, 0.1645, -0.0351, -0.0433); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(0.0281, 0.1212, -0.0585, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    // V\n    sg = vec4(-0.6269, -0.0779, 0.0702, -0.1515); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.5567, -0.2294, 0.0702, 0.1515); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    // I\n    sg = vec4(-0.4444, -0.2294, 0, 0.1515); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    // S\n    sg = vec4(-0.2737, -0.0996, -0.0234, 0.0217); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.2971, -0.0779, -0.0585, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.3556, -0.0779, -0.0233, -0.0217); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.3789, -0.0996, 0, -0.0216); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.3789, -0.1212, 0.1052, -0.0541); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.2737, -0.1753, 0, -0.0325); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.2737, -0.2078, -0.0702, -0.0216); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.3439, -0.2294, -0.0467, 0.0433); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    // I\n    sg = vec4(-0.2316, -0.2294, 0, 0.1515); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    // B\n    sg = vec4(-0.1778, -0.2294, 0, 0.1515); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.1778, -0.0779, 0.0702, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.1076, -0.0779, 0.0234, -0.0217); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.0842, -0.0996, 0, -0.0324); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.0842, -0.132, -0.0117, -0.0109); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.0959, -0.1429, -0.0468, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.0959, -0.1429, 0.0234, -0.0324); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.0725, -0.1753, 0, -0.0325); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.0725, -0.2078, -0.0234, -0.0216); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.0959, -0.2294, -0.0468, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    // I\n    sg = vec4(-0.0304, -0.2294, 0, 0.1515); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    // L\n    sg = vec4(0.0234, -0.0779, 0, -0.1515); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(0.0234, -0.2294, 0.0819, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    // I\n    sg = vec4(0.1474, -0.2294, 0, 0.1515); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    // T\n    sg = vec4(0.2012, -0.0779, 0.1286, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(0.2596, -0.0779, 0, -0.1515); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    // Y\n    sg = vec4(0.3719, -0.0779, 0.0702, -0.0866); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(0.4421, -0.1645, 0.0585, 0.0866); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(0.4421, -0.1645, 0, -0.0649); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n\n    return hit;\n}\n\nint intersectPicture(vec4 ray, out float d) {\n    int hit = 0;\n    vec4 sg;\n    vec2 iv;\n    vec2 p = ray.xy+ray.zw;\n\n    sg = vec4(-0.8262, 0.3806, -0.0161, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8423, 0.3806, -0.016, 0.0034); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8583, 0.384, -0.0128, 0.0137); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8711, 0.3977, 0, 0.0137); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8711, 0.4114, 0.0064, 0.0171); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8647, 0.4285, 0.0064, 0.0102); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8583, 0.4387, 0.0192, 0.0205); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8391, 0.4592, 0.0129, 0.0069); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8262, 0.4661, 0.0064, 0.0171); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8198, 0.4832, 0.0064, 0.0068); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8134, 0.49, 0.016, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.7974, 0.49, 0.0096, -0.0103); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8198, 0.4558, 0.0032, -0.0137); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8166, 0.4421, 0.0096, -0.0102); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.807, 0.4319, 0.0096, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.7974, 0.4319, 0.0064, -0.0034); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.791, 0.4285, 0.0096, -0.0035); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.7461, 0.4524, -0.0192, -0.041); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.7653, 0.4114, -0.0353, 0); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8359, 0.4079, 0.0129, -0.0034); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.823, 0.4045, 0.0096, -0.0034); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8134, 0.4011, 0.0128, -0.0068); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8006, 0.3943, 0.0064, -0.0103); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.7942, 0.384, -0.0096, -0.0137); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n    sg = vec4(-0.8038, 0.3703, -0.0128, -0.0102); hit = max(hit, intersect(ray, sg, iv)); d = min(d, length(p-iv));\n\n    return hit;\n}\n\nint intersectPoly(vec4 ray, int count, out float d) {\n    int hit = 0;\n    vec4 sg;\n    vec2 iv;\n    vec2 p = ray.xy+ray.zw;\n    float r = .1;\n    vec2 pos = vec2(.40*aspect-r, .40-r);\n    float th = nsin(.1*iTime, .5, 2.5) * iTime;\n    vec2 p1 = pos + r*vec2(cos(th), sin(th));\n    for (int i=0; i<count; i++) {\n        th += 2.*PI/float(count);\n        vec2 p2 = pos + r*vec2(cos(th), sin(th));\n        vec4 sg = vec4(p1, .8*(p2-p1));\n        hit = max(hit, intersect(ray, sg, iv));\n        d = min(d, length(p-iv));\n        p1 = p2;\n    }\n    return hit;\n}\n\nfloat getDist(vec2 p) {\n    vec2 ra = fromPixel(iMouse.xy);\n    vec2 rb = fromPixel(p);\n    vec4 ray = vec4(ra, rb-ra);\n    \n    float d1 = 1000., d2 = 1000.;\n    int hit = intersectText(ray, d1);\n    hit = max(hit, intersectPicture(ray, d2));\n    float d = min(d1, d2);\n    hit = max(hit, intersectPoly(ray, 8, d1));\n    d = min(d, d1);\n\n    float li = pow(nsin(1.3*iTime, .9, 1.0)-clamp(.6*length(ray.zw), 0., 1.), 1.6);\n    return d < 0.004 ? 1. : hit > 0 ? 0.6*li : li;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    aspect = iResolution.x/iResolution.y;\n    float d = clamp(getDist(fragCoord), 0., 1.);\n    vec3 col = d*vec3(fragCoord.xy/iResolution.xy, .2);\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}