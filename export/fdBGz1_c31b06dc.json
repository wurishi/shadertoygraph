{"ver":"0.1","info":{"id":"fdBGz1","date":"1616912434","viewed":89,"name":"regular Voronoi Noise","username":"lonelywaiting","description":"voronoi implement","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 generate_feature_pos(vec2 p)\n{\n    vec2 d0 = vec2(127.1, 311.7);\n    vec2 d1 = vec2(269.5, 183.3);\n    return fract(sin(vec2(dot(p, d0), dot(p, d1))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 scale_pos = fragCoord.xy/iResolution.xy;\n    scale_pos.x *= iResolution.x / iResolution.y;\n    \n    scale_pos *= vec2(4,4);\n    \n    vec2 floor_pos = floor(scale_pos);\n    vec2 frac_pos  = fract(scale_pos);\n    \n    float min_dist = 1.0f;\n    \n    for(int i = -1; i <= 1; i++)\n    {\n        for(int j = -1; j <= 1; j++)\n        {\n            vec2 neighbor = vec2(i, j);\n            vec2 feature_pos = generate_feature_pos(floor_pos + neighbor);\n            feature_pos = 0.5 + 0.5 * sin(iTime + 6.2831 * feature_pos);\n            \n            vec2 diff = neighbor + feature_pos - frac_pos;\n            \n            min_dist = min(min_dist, length(diff));\n        }\n    }\n    \n    fragColor = vec4(min_dist, min_dist, min_dist, 1.0);\n}","name":"Image","description":"","type":"image"}]}