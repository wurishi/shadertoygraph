{"ver":"0.1","info":{"id":"Wty3Wh","date":"1578751058","viewed":105,"name":"Infinite circles","username":"mgejke","description":"Learning... ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["circles","infinity"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 p, float r, float blur)\n{\n    float d = length(p-vec2(0));\n    float m = smoothstep(-blur, blur, r-d);\n    m *= smoothstep(blur, -blur, r-d - 0.03);\n    return m;\n}\n\nfloat circle_layer(vec2 uv) \n{\n    uv = fract(uv) - 0.5;        \n    float m = circle(uv, 0.1, 0.005);\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    \n    uv.x += sin(iTime * 0.6) * 0.4;\n    uv.y += cos(iTime * 0.2) * 0.4;\n    \n\tfloat layers = 42.;\n    float m = 0.;\n    for(float j = 0.; j < layers; j++)\n    {\n        float i = j / layers;\n        \n        float z = fract(i + iTime * 0.1);\n        float size = mix(30. + sin(iTime) * 10. , 1., z);\n        float a = mix(0., 2.*3.14159265, z);\n        \n        float fade = smoothstep(0., 0.99, z) * smoothstep(1.0, .9, z);\n\n        vec2 suv = uv * size;\n        suv.x += sin(z * 3. + iTime) * 0.4;\n        suv.y += cos(z * 7. + iTime) * 0.2;\n        \n        m += circle_layer(suv) * fade * 0.7;\n    }\n    \n    col += m * (sin(vec3(0.23, 0.43, 0.67)*iTime) * 0.4 + 0.6);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}