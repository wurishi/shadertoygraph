{"ver":"0.1","info":{"id":"DtKfWh","date":"1702030117","viewed":36,"name":"CellShading by Longinus","username":"Longinus","description":"Trying to look like cell shading","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cellshading"],"hasliked":0,"parentid":"DlKfWR","parentname":"CellShader by Longinus"},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float num_grays = 5.;\n\nvec3 medianFilter(vec2 coord){\n    vec3 values[9];\n    values[0] = texture(iChannel0, coord+vec2(-1,-1)/iResolution.xy).rgb;\n    for(int i=0;i<3;i++){\n        for(int j=0;j<3;j++){\n            vec3 current = texture(iChannel0, coord+vec2(j,i)/iResolution.xy).rgb;\n            for(int k=0;k<= i*3+j;k++){\n                vec3 temp = values[k];\n                values[k] = max(current, temp);\n                current = min(current, temp);\n            }\n        }\n    }\n    return values[5];\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec4 camera = texture(iChannel0, uv);\n    vec3 median = medianFilter(uv);\n    //vec3 median = texture(iChannel0,uv).rgb;\n    float gray = grayScale(median);\n    \n    vec3 color = colors(median);\n    float grayLevel = float(int(gray*num_grays)) /((num_grays-1.)*grayScale(color));\n    \n    // Output to screen\n    fragColor = vec4(color*(grayLevel+2./num_grays),1.);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 colorList[] = vec3[]( \n    vec3(214./255.,212./255.,109./255.),\n    vec3(244./255.,223./255.,182./255.),\n    vec3(222./255.,143./255.,95./255.),\n    vec3(255./255.,211./255.,217./255.),\n    vec3(63./255.,72./255.,204./255.),\n    vec3(255./255.,236./247.,242./255.)\n    );\n\n\n\nfloat grayScale(vec3 c){\n  return c.r*0.2126+c.g*0.7152+c.b*0.0722;\n}\n\nfloat divider = 32.0;\n\nvec3 colors(vec3 c){\n\n    float dist = 5.0;\n    vec3 dcamera = c.rgb-0.5;\n    vec3 final = c.rgb;\n    float lencamera =length(dcamera);\n    for(int i=0; i< 6; i++){\n        vec3 dcolor = colorList[i]-0.5;\n        float di = acos(\n            (dcamera.r*dcolor.r+dcamera.g*dcolor.g+dcamera.b*dcolor.b)\n            /(lencamera*length(dcolor))\n        );\n        \n        final = di>=dist?final:colorList[i];\n        dist=min(di,dist);\n     }\n     return final;\n}\n","name":"Common","description":"","type":"common"}]}