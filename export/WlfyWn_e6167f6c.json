{"ver":"0.1","info":{"id":"WlfyWn","date":"1591758476","viewed":713,"name":"Chladni plate simulation(new)","username":"sidchou","description":"second attempt of Chladni plate simulation.\n\nany physics pro want to help me improve this dm me at ig @sid_100_days","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["simulation","physics","harmony","oscillations","chladniplate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//second attempt of Chladni plate simulation.\n// click and drag to change wave source\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \tvec4 col = texture(iChannel0,uv);\n    fragColor = col*col;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//generating the waves\n\nfloat reflectRay(vec2 st,float t,float medium,float decayRate,float efficiency, float bounces);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    float asp = iResolution.y/iResolution.x;\n\t//uv*=2.;\n    //uv-=0.5;\n\tfloat decayRate = 1./10.; // how good the material can transfer waves\n    float efficiency = 0.9; // how good the material can transfer waves\n    float t = 5.+iTime*.5; // frequency\n    float medium= iTime*100.; //speed of waves\n    \n    \n    //center wave\n    vec2 uvC= uv;\n    if(iMouse.z>.5){\n        uvC-=iMouse.xy/iResolution.y;\n    }else{\n        uvC-=0.5;\n    }\n\tfloat f = sin(length(uvC*t)-medium)*(1.-length(uvC*decayRate));    \n    f = 0.; \n    //reflect waves\n    //right side 1 0]\n    //float dir = (mod(3.,2.)-0.5)*-2.;\n   // vec2 uvR = vec2(2.-uv.x,uv.y*dir+3.-1.);\n   \n   //f+=reflectRay(uvR,t,medium,decayRate);\n    \n    //Left side -1 0\n    vec2 uvL = vec2(-uv.x,uv.y);\n    //f+=reflectRay(uvL,t,medium,decayRate);\n\n   \n    //top side 0 1\n    vec2 uvT = vec2(uv.x,2.-uv.y);\n    //f+=reflectRay(uvT,t,medium,decayRate);\n\n    \n    //bottom side 0 -1\n    vec2 uvB = vec2(uv.x,-uv.y);\n    //f+=reflectRay(uvB,t,medium,decayRate);\n    \n    \n        for (float i = -3.; i<4.; i++){\n            for (float j = -3.; j<4.; j++){\n\n        vec2 dir = vec2(mod(i,2.),mod(j,2.));\n        dir = (dir-0.5)*-2.;\n   \t\tvec2 offsets = vec2(1.,1.);\n        vec2 _uv = vec2(uv.x * dir.x +floor((i+1.)/2.)*2.*-dir.x , uv.y * dir.y +floor((j+1.)/2.)*2.*-dir.y);\n\n       \tf+=reflectRay(_uv,t,medium,decayRate,efficiency,length(vec2(i,j)));\n       \t//f+=reflectRay(_uv,t,medium,decayRate);\n    \t}    \n        }\n    \n    \n    \n    //sum\n    vec3 col = vec3(clamp(f,0.,1.),clamp(-f,0.,1.),0.);//color debug\n    //col = min(col,step(uv.x,1.));\n    vec3 test = vec3(1.);\n     test = min(test,step(uv.x,1.));\n     test = min(test,step(0.,uv.x));\n     test = min(test,step(uv.y,1.));\n     test = min(test,step(0.,uv.y));\n    \n    \n\t//col -= test*(1.-length(uv));\n    col = vec3(clamp(1.-abs(f),0.,1.));   \n    col *= (test + 1.)/2.;\n    col = min(col,step(uv.x,1.5));\n\n    //color debug for reflection\n    //vec3 colR = vec3(clamp(reflectRay(uvR,t,medium,decayRate),0.,1.),clamp(-reflectRay(uvR,t,medium,decayRate),0.,1.),0.);\n    //col += step(1.,uv.x)*colR*0.5;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\nfloat reflectRay(vec2 st,float t, float medium, float decayRate,float efficiency, float bounces){\n  \tif(iMouse.z>.5){\n    st -=iMouse.xy/iResolution.y;\n  \t}else{\n    st-=0.5;\n    }\n    float _f = -sin(length(st*t)-medium);\n    _f*=max((1.-length(st*decayRate)),0.);\n    _f*=pow(bounces,efficiency);\n\treturn _f;\n}\n\n     /*\n    //right side\n    vec2 uvR = vec2(2.-uv.x,uv.y);\n    uvR-=iMouse.xy/iResolution.y;\n    float fR = -sin(length(uvR*10.)-t);\n    fR*=(1.-length(uvR*decayRate));\n    vec3 colR = vec3(clamp(fR,0.,1.),clamp(-fR,0.,1.),0.);\n    \n    //Left side\n    vec2 uvL = vec2(-uv.x,uv.y);\n    uvL-=iMouse.xy/iResolution.y;\n    float fL = sin(length(uvL*t));\n    fL*=(1.-length(uvL*decayRate));\n    vec3 colL = vec3(clamp(fL,0.,1.),clamp(-fL,0.,1.),0.);\n   \n    //top side\n    vec2 uvT = vec2(uv.x,2.-uv.y);\n    uvT-=iMouse.xy/iResolution.y;\n    float fT = sin(length(uvT*t));\n    fT*=(1.-length(uvT*decayRate));\n    vec3 colT = vec3(clamp(fT,0.,1.),clamp(-fT,0.,1.),0.);\n    \n    //bottom side\n    vec2 uvB = vec2(uv.x,-uv.y);\n    uvB-=iMouse.xy/iResolution.y;\n    float fB = sin(length(uvB*t));\n    fB*=(1.-length(uvB*decayRate));\n    vec3 colB = vec3(clamp(fB,0.,1.),clamp(-fB,0.,1.),0.);\n \n\n    f += fL;\n    f += fR;\n    f += fT;\n    f += fB;\n*/\n    ","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec4 new = texture(iChannel0,uv);\n   \tvec4 col = texture(iChannel1,uv);\n    col = mix(col,new,0.1);\n    fragColor = col;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec4 new = texture(iChannel0,uv);\n   \tvec4 col = texture(iChannel1,uv);\n    col = mix(col,new,0.1);\n    fragColor = col;\n}","name":"Buffer C","description":"","type":"buffer"}]}