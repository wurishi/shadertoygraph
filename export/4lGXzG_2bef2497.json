{"ver":"0.1","info":{"id":"4lGXzG","date":"1484724741","viewed":1067,"name":"Warp Core","username":"cacheflowe","description":"Using iq's classic deform technique: https://www.shadertoy.com/view/Xdf3Rn","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["deform","warp","core"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime * 1.;\t\t\t\t\t\t\t\t\t// adjust time\n    vec2 p = (-iResolution.xy + 2.0*fragCoord)/iResolution.x;\t\t// center coordinates\n    \t\n    ////////////////////////////////////\n    // deform technique from iq: https://www.shadertoy.com/view/Xdf3Rn\n    float r2 = dot(p,p);\n    float r = sqrt(r2);\n    vec2 uv = p/r2;\t\n    // animate\t\n\tuv += 10.0 * cos( vec2(0.6,0.3) + vec2(0.1,0.13) * 2. * sin(time) );\n\t// uv = p; // switch back to normal coords to test drawing\n\t////////////////////////////////////\n    \n    // custom drawing\n    uv += vec2(0., 2. * cos(uv.y * 8.));\t\t\t\t\t\t\t\t\t// warp coordinates a little more\n    uv = abs(sin(uv * 0.3));\t\t\t\t\t\t\t\t\t\t\t\t// draw horizontal stripes\n    float color = smoothstep(0.2, 0.8, abs(sin(time + uv.y * 3.)));\n    color = min(color, smoothstep(0.1, 0.95, abs(sin(time + uv.y * 4.))) );\n    color += 0.75;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// brighten everything\n    vec3 col = vec3(\t\t\t\t\t\t\t\t\t\t\t\t\t\t// oscillate color components\n        0.6 + 0.1 * cos(time + color * 1.), \n        0.5 * color, \n    \t0.9 + 0.2 * sin(time + color * 1.1)\n    );\n    // reverse vignette\n\tcol *= r*1.5 * color;\n    col += pow(length(p)/2., 2.);\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}