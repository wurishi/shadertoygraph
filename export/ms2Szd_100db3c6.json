{"ver":"0.1","info":{"id":"ms2Szd","date":"1670791169","viewed":125,"name":"normalizing a square aka circle","username":"jonasfrey","description":"i dont know how but i know by dividing the distance to an edge of the square by the maximum distance it should become a circle","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["normalizing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f_n_inoutexp(float n, float n_sharpness){\n    n_sharpness = floor(n_sharpness) + mod(floor(n_sharpness),2.); // must be dividable by 2.\n    n = max(0.,min(1., n));\n    return min(pow(n, n_sharpness),pow( n-1., n_sharpness))*pow(2., n_sharpness);\n}\nfloat f_n_dist_square(\n    vec2 o_p\n){\n    return max(abs(o_p.x), abs(o_p.y));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_trpino = (fragCoord.xy - iResolution.xy*0.5)/ iResolution.y;\n    o_trpino *=1.5;\n    vec2 o_trmono = (iMouse.xy - iResolution.xy*0.5)/ iResolution.y;\n    vec2 o_trmono_nooffset = (iMouse.xy )/ iResolution.y;\n    float n_dist_square = f_n_dist_square(o_trpino);\n    float n_dist_circ = length(o_trpino);\n    n_dist_circ = f_n_inoutexp(n_dist_circ, 2.);\n    n_dist_square*= n_dist_circ*(sin(iTime*2.)*0.5+0.5+1.0);\n\n    float n = n_dist_square*1.;\n    \n    n = f_n_inoutexp(n, 2.);\n\n    fragColor = vec4(\n        //sin(n*6.2831*10.)\n        n\n    );\n}","name":"Image","description":"","type":"image"}]}