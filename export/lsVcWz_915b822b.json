{"ver":"0.1","info":{"id":"lsVcWz","date":"1521666338","viewed":138,"name":"Fractal da madrugada","username":"Hikk","description":"Eu devia ter estudado pra prova","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SIZE 1.\n#define FACTOR 2.3\n#define PI 3.1415926535897932384626433832795\n#define SCALE 0.1\n#define POSX 0.81\n#define POSY 0.46\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = SCALE + 600.;\n    if (exp(iTime/3.) < 600.)\n    \tscale = SCALE + exp(iTime/3.) - 1.;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 xy = (uv - 0.5) * 2.0;\n    xy.x *= iResolution.x/iResolution.y;\n    xy /= scale;\n    xy += vec2(POSX, POSY);\n    vec2 center = vec2(0.0, 0.0);\n    \n    vec3 col = vec3(0., 0., 0.);\n    float size = SIZE;\n    \n    for(int i =0; i < 100; i++)\n    {\n        float x = step(center.x - size/2., xy.x) - step(center.x + size/2., xy.x);\n        float y = step(center.y - size/2., xy.y) - step(center.y + size/2., xy.y);\n        if (x*y == 1.)\n        {\n            \n            col = vec3(sin(iTime)*length(xy)/2., length(xy)/2., length(xy)/2.);\n            break;\n        }\n        \n        float i_float = float(i) + 1.;\n        float xDist = xy.x - center.x;\n        float yDist = xy.y - center.y;\n        float xRot = xDist * cos(-PI/4.) - yDist * sin(-PI/4.);\n        float yRot = xDist * sin(-PI/4.) + yDist * cos(-PI/4.);\n        \n        if (sign(xRot) * sign(yRot) == 1.)\n        {\n        \tcenter.y = center.y + sign(xRot)*(size/2. + size/(2.*FACTOR));\n            //col = vec3(10./i_float, 0., 0.);\n        }\n        else if (sign(xRot) * sign(yRot) == -1.)\n        {\n            center.x = center.x + sign(xRot)*(size/2. + size/(2.*FACTOR));\n            //col = vec3(0., 10./i_float, 0.);\n        }\n        else\n            col += vec3(0., 0., 0.);\n        \n        size = size/FACTOR;\n    }\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}