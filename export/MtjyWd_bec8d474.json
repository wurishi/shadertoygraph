{"ver":"0.1","info":{"id":"MtjyWd","date":"1510674085","viewed":370,"name":"boys and girls","username":"laserdog","description":"experimenting with parametric motion and trails (https://www.shadertoy.com/view/Xl33D7)","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["metaballs","parametric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define tau 6.28318\n#define numBlobs 15\n\n#define p0 0.5, 0.5, 0.5,  0.5, 0.5, 0.5,  1.0, 1.0, 1.0,  0.0, 0.33, 0.67\t\n    \n// source: https://iquilezles.org/articles/palettes\n// cosine based palette, 4 vec3 params\nvec3 palette( in float t, in float a0, in float a1, in float a2, in float b0, in float b1, in float b2,\n              in float c0, in float c1, in float c2,in float d0, in float d1, in float d2)\n{\n    return vec3(a0,a1,a2) + vec3(b0,b1,b2)*cos( tau*(vec3(c0,c1,c2)*t+vec3(d0,d1,d2)) );\n}\n\n\nconst float radius = .07;\nconst float edgeWidth = .01;\nconst int numTrailParticles = 10;\nconst float trailLength = .3;\nconst float metaballThreshold = .8;\nconst float metaballRadius = .00325;\nconst float speedMultiplier = 1.1;\nvec2 getPos(float t, float aspect) {\n    float tx = t / aspect;\n    vec2 p = vec2(sin(2.2 * tx) + cos(1.4 * tx), cos(.3 * t) + sin(-1.9 * t));\n    p.y *= 0.2;\n    p.x *= 0.4;\n    return p;\n}\nfloat metaballFunc(vec2 pos, vec2 uv, float radius)\n{\n    return radius / length(uv - pos);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy - vec2(.5);\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 color = vec3(.0, 0., .0);\n    vec3 colorFinal = vec3(0.);\n    float finalFactor = 0.;\n    float aspect = iResolution.x / iResolution.y;\n    float mb = 0.;\n    float[numBlobs] closeness;\n    float tot = 0.;\n    \n    for (int i = 0; i < numBlobs; i++)\n    {\n        float minDistance = 1.0;\n        float colorMul = 1.0;\n        for (int j = 0; j < numTrailParticles; j++) {\n            float pct = float(j) / float(numTrailParticles);\n            vec2 pos = getPos(iTime * speedMultiplier + float(i) * 1.5 - pct * trailLength, aspect);\n            float segmentLength = length(pos - uv);\n            minDistance = min(minDistance, segmentLength + pct * (radius + edgeWidth));\n            mb += metaballFunc(pos, uv, metaballRadius * pct);\n        }\n        finalFactor += smoothstep(radius + edgeWidth, radius, minDistance);\n    \tcloseness[i] = pow(1. / minDistance, 3.);\n    \ttot += closeness[i];\n    }\n    \n    for (int i = 0; i < numBlobs; i++) {\n    \tcolor += (closeness[i] / tot) * palette(float(i) / 2., p0);\n    }\n        \n    finalFactor += smoothstep(mb + .03, mb, metaballThreshold);\n    \n    fragColor = vec4(min(finalFactor, 1.) * color * 1.2, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}