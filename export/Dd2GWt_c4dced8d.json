{"ver":"0.1","info":{"id":"Dd2GWt","date":"1668337746","viewed":110,"name":"print number","username":"robot9","description":"print number (float, uint)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["print"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 print_n(in vec2 uv, float val);\nint PrintUInt(in vec2 uv, in uint value, const int maxDigits);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float val0 = 0.2;\n    uint val1 = 1234u;\n\n    vec2 uv = fragCoord/iResolution.y;\n    fragColor = vec4(print_n(uv+vec2(-0.5, -0.6), val0), 1.);\n    fragColor += vec4(float(PrintUInt(uv*15.+vec2(-7.5, -6.5), val1, 10)));\n}\n\nint get_fvalue(float val, int idx) {\n    idx=clamp(idx, 0, 10);\n    for (int i=0;i<idx+1;i++) {\n        val=(val-floor(val/10.)*10.)*10.;\n    }\n    return int(val/10.);\n}\n\nfloat getarr(in mat3 arr, int idx) {\n    idx=max(idx, 0);ivec2 ij=ivec2((idx/3)%3, idx%3);\n    if (ij==ivec2(0, 0))return arr[0][0];\n    if (ij==ivec2(0, 1))return arr[0][1];\n    if (ij==ivec2(0, 2))return arr[0][2];\n    if (ij==ivec2(1, 0))return arr[1][0];\n    if (ij==ivec2(1, 1))return arr[1][1];\n    if (ij==ivec2(1, 2))return arr[1][2];\n    if (ij==ivec2(2, 0))return arr[2][0];\n    if (ij==ivec2(2, 1))return arr[2][1];\n    if (ij==ivec2(2, 2))return arr[2][2];\n    return arr[0][0];\n}\n\nfloat print_num(vec2 uv, float value, int num) {\n    const mat3 fontb=mat3(vec3(480599.0, 139810.0, 476951.0), vec3(476999.0, 350020.0, 464711.0), vec3(464727.0, 476228.0, 481111.0));\n    const mat3 powers = mat3(vec3(1., 10., 100.), vec3(1000., 10000., 100000.), vec3(1000000., 10000000., 100000000.));\n    if (uv.y < 0.0 || uv.y >= 1.0) return 0.0;\n    if (uv.x < -6.0 || uv.x >= 10.0) return 0.0;\n    float bits = 0.0;\n    int di = - int(floor(uv.x))+ 1;\n    if (-di <= num) {\n        float pw = getarr(powers, di);\n        float val = abs(value);\n        float pivot = max(val, 1.5) * 10.0;\n        if (pivot < pw) {\n            if (value < 0.0 && pivot >= pw * 0.1) bits = 1792.0;\n        } else {\n            if (di == 0) {\n                if (num > 0) bits = 2.0;\n            } else {\n                int idx=0;\n                if (di < 0)idx=get_fvalue(val, int(-di)); else idx=(int(val*10.) / int(pw))%10;\n                if (idx<=9 && idx>=0)bits = idx<9?getarr(fontb, idx):481095.0;\n            }\n        }\n    } else return 0.;\n    return floor(mod(bits / exp2(floor(fract(uv.x) * 4.0) + floor(uv.y * 5.0) * 4.0), 2.0));\n}\n\nvec3 print_n(in vec2 uv, float val){\n    int numbers = 6;\n    vec2 font = vec2(15.);\n    float d = print_num(uv*font, val, numbers);\n    return vec3(1.0, 1.0, 1.0)* d;\n}\n\n\nconst uint[] ufont = uint[](0x75557u, 0x22222u, 0x74717u, 0x74747u, 0x11574u, 0x71747u, 0x71757u, 0x74444u, 0x75757u, 0x75747u);\nconst uint[] upowers = uint[](1u, 10u, 100u, 1000u, 10000u, 100000u, 1000000u, 10000000u, 100000000u, 1000000000u);\n\nint PrintUInt(in vec2 uv, in uint value, const int maxDigits) {\n    if (abs(uv.y-0.5)<0.5) {\n        int iu = int(floor(uv.x));\n        if (iu>=0 && iu<maxDigits){\n            uint n = (value/upowers[uint(clamp(maxDigits-iu-1, 0, 9))]) % 10u;\n            uv.x = fract(uv.x);\n            uvec2 p = uvec2(floor(uv*vec2(4.0, 5.0)));\n            return int((ufont[n] >> (p.x+p.y*4u)) & 1u);\n        }\n    }\n    return 0;\n}\n\n","name":"Image","description":"","type":"image"}]}