{"ver":"0.1","info":{"id":"flKfzD","date":"1664187389","viewed":95,"name":"Hexagonal tiling 0","username":"OstrichDog","description":"Hexagonal tiling","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["tiling","hexagons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float HexDist(vec2 p) {\n    p = abs(p);\n    \n    float d = dot(p, normalize(vec2(1., 1.73)));\n    d = max(d, p.x);\n    \n    return d;\n}\n\nvec4 HexCoord(vec2 p) {\n    vec2 r = vec2(1., 1.73);\n    vec2 h = r*.5;\n    \n    vec2 a = mod(p, r)-h;\n    vec2 b = mod(p-h, r)-h;\n    vec2 c = dot(a,a) < dot(b,b) ? a : b;\n    \n    vec2 id = p - c;\n    \n    return vec4(.5-HexDist(c), atan(c.x, c.y), id);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.);\n    vec4 hex = HexCoord((uv * (44. + cos(10.+iTime/30.)*40.))+ vec2(35.+iTime, 42.+iTime/2.));\n\n    col += smoothstep(0., .25 - sin(iTime/2. + hex.z*1.5 + (.5+hex.w*2.)*hex.z) + cos(iTime/3. + hex.z), hex.x);\n    col.rg -= vec2(.5 + cos(iTime*3. + hex.x)/9., .5 + sin(iTime + hex.y)/5.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}