{"ver":"0.1","info":{"id":"ttlfRH","date":"1596056937","viewed":185,"name":"Simplex Value Noise 1D","username":"sotrh","description":"GLSL implementation of simplex value noise in 1D. Adapted from https://catlikecoding.com/unity/tutorials/simplex-noise/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","proceduralgeneration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 uv) {\n    return fract(sin(dot(uv, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat simplexValue1DPart(vec2 uv, float ix) {\n    float x = uv.x - ix;\n    float f = 1.0 - x * x;\n    float f2 = f * f;\n    float f3 = f * f2;\n    return f3;\n}\n\nfloat simplexValue1D(vec2 uv) {\n    vec2 iuv = floor(uv);    \n    float n = simplexValue1DPart(uv, iuv.x);\n    n += simplexValue1DPart(uv, iuv.x + 1.0);\n    return random(vec2(n * 2.0 - 1.0, 0.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    //uv *= 100.0;\n    \n    float n = simplexValue1D(uv);\n    vec3 col = vec3(n, n, n);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}