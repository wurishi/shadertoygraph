{"ver":"0.1","info":{"id":"43VXDK","date":"1720507683","viewed":33,"name":"HW6_Newton Fractal","username":"EurekaChen","description":"Newton Fractal","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAXITER 50\n\n// complex number operations\n// ref: https://www.shadertoy.com/view/4dXGDX\nvec2 cadd( vec2 a, float s ) { return vec2( a.x+s, a.y ); }\nvec2 cmul( vec2 a, vec2 b )  { return vec2( a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x ); }\nvec2 cdiv( vec2 a, vec2 b )  { float d = dot(b,b); return vec2( dot(a,b), a.y*b.x - a.x*b.y ) / d; }\nvec2 csqr( vec2 a ) { return vec2(a.x*a.x-a.y*a.y, 2.0*a.x*a.y ); }\nvec2 csqrt( vec2 z ) { float m = length(z); return sqrt( 0.5*vec2(m+z.x, m-z.x) ) * vec2( 1.0, sign(z.y) ); }\nvec2 conj( vec2 z ) { return vec2(z.x,-z.y); }\nvec2 cpow( vec2 z, float n ) { float r = length( z ); float a = atan( z.y, z.x ); return pow( r, n )*vec2( cos(a*n), sin(a*n) ); }\nfloat dis( vec2 x, vec2 y ) { return sqrt((x.x-y.x)*((x.x-y.x))+(x.y-y.y)*((x.y-y.y)));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 z = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    //vec2 c = vec2(-0.8, 0.8*cos(iTime*.2));\n    vec2 c = vec2(1.,1.) * 1. / (0.5 * sin(iTime * .5)+ 0.7);\n    int iter = 0;\n    while (length(z)<100. && iter < MAXITER) {\n        z -= c * cdiv(cpow(z,3.)-1.,3.*cpow(z,2.));\n        iter += 1;\n    }\n    //float color = float(iter)/float(MAXITER);\n    //color = pow(color, .8);\n    \n    float dis1 = dis(z,vec2(1.,0.));\n    float dis2 = dis(z,vec2(-1.,1.));\n    float dis3 = dis(z,vec2(-1.,-1.));\n    \n    vec3 col = (dis1 <= dis2 && dis1 <= dis3 ? vec3(1.,1.,.2) : (dis2 <= dis1 && dis2 <= dis3 ? vec3(1.,.2,1.) : vec3(0.,0.,1.) ));\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}