{"ver":"0.1","info":{"id":"tlyGW1","date":"1578794104","viewed":74,"name":"Z rotation gone wrong","username":"timeisbeautifulhere","description":"For some reason my z rotation matrix does this???","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["triangle","barycentric","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Verticies of a basic tesselated square\nvec3 verts[4] = vec3[](\n\tvec3(-1.0,-1.0,1.0),\n\tvec3(1.0,-1.0,1.0),\n\tvec3(-1.0,1.0,1.0),\n\tvec3(1.0,1.0,1.0)\n);\n\n//Faces of the square\nvec3 faces[2] = vec3[](\n\tvec3(0.0, 1.0, 2.0),\n\tvec3(1.0, 3.0, 2.0)\n);\n\n//Not used\nmat3 rotateY = mat3(\n\tcos(45.0), 0.0, (-1.0)*sin(45.0),\n\t0.0, 1.0, 0.0,\n\tsin(45.0), 0.0, cos(45.0)\n);\n\n//Convert to radians\nfloat rads(float deg){\n\treturn deg * (3.14159 / 180.0);\n}\n\n//Z rotation matrix as a function of time\nmat3 getZRotate(float time){\n\tfloat rad = rads(10.0 *time);\n\t\n\tmat3 rot = mat3(\n\t\tcos(rad), sin(rad), 0.0,\n\t\t(-1.0)*sin(rad), cos(rad), 0.0,\n\t\t0.0, 0.0, 1.0\n\t);\n\t\n\treturn rot;\n}\n\n\t\n/*\nTransform the face, then convert coordinate to barycentric \ncoordinates of that face to see if it's inside.\n*/\nbool checkTriangleIntersect(vec3 face, vec2 coord){\n\tmat3 rotateZ = getZRotate(iTime);\n\t\n    vec3 v1 = rotateZ * verts[int(face[0])];\n\tvec3 v2 = rotateZ * verts[int(face[1])];\n\tvec3 v3 = rotateZ * verts[int(face[2])];\n\t\n\tfloat b1 = (((v2.y-v3.y)*(coord.x-v3.x)) + ((v3.x-v2.x)*(coord.y-v3.y))) / \n\t\t\t\t(((v2.y-v1.x)*(v1.x-v3.x)) + ((v3.x-v2.x)*(v1.y-v3.y)));\n\t\n\tfloat b2 = (((v3.y-v1.y)*(coord.x-v3.x)) + ((v1.x-v3.x)*(coord.y-v3.y))) / \n\t\t\t\t(((v2.y-v3.y)*(v1.x-v3.x)) + ((v3.x-v2.x)*(v1.y-v3.y)));\n\t\n\tfloat b3 = 1.0 - b1 - b2;\n\t\n\treturn b1>=0.0 && b1<=1.0 && b2>=0.0 && b2<=1.0 && b3>=0.0 && b3<=1.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //[-4, 4]\n    vec2 uv = 4.0 * ((2.0 * (fragCoord/iResolution.xy)) - 1.0);\n    \n\t//Check if coord is within any faces\n    vec3 col;\n    for(int i=0;i<faces.length();i++){\n\t\tif(checkTriangleIntersect(faces[i], uv)){\n\t\t\tif(i%2==0)\n\t\t\t\tcol = vec3(1.0, 0.0, 0.0);\n\t\t\telse\n\t\t\t\tcol = vec3(0.0, 1.0, 0.0);\n\t\t}\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}