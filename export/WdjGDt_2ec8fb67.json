{"ver":"0.1","info":{"id":"WdjGDt","date":"1550714988","viewed":260,"name":"sketch_006","username":"nepster","description":"sketcing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["glass","blend","flow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// based on this tutorial: https://www.youtube.com/watch?v=8--hS-PhRz8\n\n#define PI 3.14159265359\n\nfloat def(vec2 uv, float f) {\n\n    float n = 10.; \n    float e = 0.0;\n    \n    for(float i=0.; i<n; i++) {\n        // center\n        vec2 p = vec2(.5, i/n+.5) - uv;\n        // radius\n        float rad = length(p)*1.;\n        // angle\n        float ang = atan(p.x, p.y);\n    \n        e += sin(rad*10.+f+iTime);\n        e += sin(e*PI+sin(ang+e+iTime*.5))*.7;\n    }\n    \n    e /= n/4.;\n    \n    return abs(e);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // center\n    vec2 p = vec2(.5) - uv;\n    // radius\n    float rad = length(p)*1.;\n    // angle\n    float ang = atan(p.x, p.y);\n    \n    //shape\n    float e = def(uv, 0.);\n    float e2 = def(uv, PI/6.);\n    \n    // colors\n    vec4 c1 = vec4(1., .3, .01, 1.);\n    vec4 c2 = vec4(.01, .7, 1., 1.);\n    \n    // final color\n    vec4 color = vec4(e)*c1*c1.a+vec4(e2)*c2*c2.a;\n\n    // Output to screen\n    fragColor = color;\n}\n\n","name":"Image","description":"","type":"image"}]}