{"ver":"0.1","info":{"id":"lscBRS","date":"1525636390","viewed":170,"name":"Vintage is the new sexy","username":"Flopine","description":"Having fun with 2D techniques :D ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","pixels","rotozoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind, leon, lsdlive, XT95, lamogui for teaching me :) <3\n\n#define PI 3.141592\n\nmat2 rot (float a)\n{\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nfloat poumpoum (float time)\n{\n    return exp(-fract(time));\n}\n\n/////////////////////////// 2D\nfloat line (float uv, float height)\n{\n    return step(height,abs(uv));\n}\n\nfloat circle (vec2 uv, float r)\n{\n    return smoothstep(0.1,0.11, length(uv)-r);\n}\n\nfloat prim1 (vec2 uv)\n{\n    uv *= 2.;\n    return (line(uv.y, 0.04)*line(uv.x, 0.04) - circle(uv,0.3));\n}\n\nfloat layer1 (vec2 uv)\n{\n    float per = .2;\n    uv *= rot(PI/4.);\n    uv = mod(uv-per/2.,per)-per/2.;\n\n    return prim1(uv);\n}\n\nfloat layer2 (vec2 uv)\n{\n    float per = 0.5  - (uv.y*0.2);\n    uv = mod(uv-per/2.,per)-per/2.;\n    float l = layer1(uv);\n    return l*circle(uv,0.05*poumpoum(iTime));\n}\n\n///////////////////////////////\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float power = 60.* (1./poumpoum(iTime));\n    uv = floor(uv*power)/power;\n\n    uv *= rot(iTime+poumpoum(iTime));\n    \n    uv *= sin(iTime/0.8)+1.5;\n    \n    uv = vec2(layer2(uv*1.5))*vec2(0.5,abs(uv.y-0.5)-0.3);\n\t\n    \n    // Output to screen\n    fragColor = vec4(uv,0.,1.0);\n}","name":"Image","description":"","type":"image"}]}