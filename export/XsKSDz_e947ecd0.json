{"ver":"0.1","info":{"id":"XsKSDz","date":"1463842311","viewed":774,"name":"Simple radial mask","username":"Ippokratis","description":"A simple radial mask.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["simple","mask","radal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - iResolution.xy) / iResolution.y;\n    \n   \tfloat r_in = 0.15;         // inner limit of the mask\n   \tfloat r_out = 0.2;        // outer limit of the mask\n    \t\t\t\t\t\t// inner-outer = grey transition from white to black\n\t\t\t\t\t\t\t// if inner>outer, the transition inverses from white->black to black->white    \n    \n\tvec2 pos =   vec2( iMouse.xy/iResolution.y)-vec2(iResolution.x/iResolution.y,1.);\n    // the position of the mask, 0-1 left - right, bottom - top\n\t\n    float radius = length( uv-pos );\n\n \tfloat mask = ( radius-r_in ) / ( r_out-r_in );\n    \n\tfragColor = vec4( mask );\n}","name":"Image","description":"","type":"image"}]}