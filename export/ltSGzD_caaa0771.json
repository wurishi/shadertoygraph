{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"vec2 sun;\n#define GRADIENT_Y 0.1 \n\n// \n#define SUNCOLOR vec4(1.0, 0.6, 0.3, 0.0)\n\n// SET TO CONTROL WITH MOUSE\n// #define MOUSE_CONTROL\n\n// DISABLE / ENABLE COLOR CYCLING\n//#define COLOR_CYCLING\n\nvec4 suncolor = SUNCOLOR;\n\nfloat snoise(vec3 uv, float res)\n{\n\tconst vec3 s = vec3(1e0, 1e2, 1e3);\n\t\n\tuv *= res;\n\t\n\tvec3 uv0 = floor(mod(uv, res))*s;\n\tvec3 uv1 = floor(mod(uv+vec3(1.), res))*s;\n\t\n\tvec3 f = fract(uv); f = f*f*(3.0-2.0*f);\n\n\tvec4 v = vec4(uv0.x+uv0.y+uv0.z, uv1.x+uv0.y+uv0.z,\n\t\t      \t  uv0.x+uv1.y+uv0.z, uv1.x+uv1.y+uv0.z);\n\n\tvec4 r = fract(sin(v*1e-1)*1e3);\n\tfloat r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\t\n\tr = fract(sin((v + uv1.z - uv0.z)*1e-1)*1e3);\n\tfloat r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\t\n\treturn mix(r0, r1, f.z)*2.-1.;\n}\n\nvec4 sunhalo(vec2 uv)\n{\n    vec4 col = vec4(0.0);\n    if(uv.y < GRADIENT_Y)\n    {\n        return col;\n    }\n    float limit = (1.0 + sin((uv.x + sun.x) * 3.14159)) * 0.5;\n    float l = (limit - uv.y - sun.y);\n    float distToSun = length (uv - vec2(0.5, 0.5) + sun);\n    \n    float r = 1.0 - distToSun;\n    r = pow(r, 1.1);\n    r *= l;\n    r *= 1.5;\n    r = clamp(r, 0.0, 1.0);\n    \n    col = suncolor * r;\n    col = clamp(col, 0.0, 1.0);\n    return col;\n}\n\nvec4 sundisc (vec2 uv)\n{\n    vec4 col = vec4(0.0);\n\n    if(uv.y < GRADIENT_Y)\n    {\n        return col;\n    }\n    \n    float sunw = 0.11;\n    \n    // disk\n    vec2 p = uv - vec2(0.5);\n    float distToSun = length(sun + p);\n    float r = 1.0 - smoothstep(sunw - 0.05, sunw, distToSun);\n    r = clamp(r, 0.0, 1.0);\n    col = suncolor * r;\n    \n    // rays\n    float an = atan(sun.x + p.x, sun.y + p.y);\n    vec2 noiseuv = vec2(an, distToSun - iTime * 0.1);\n    float r2 = 1.0 - smoothstep(sunw - 0.05, sunw + 0.10, distToSun);\n    float rays = mix(snoise(vec3(noiseuv, 0.0), 13.0), 1.0, 0.84) * r2;\n    col += vec4(rays);\n    col = clamp(col, 0.0, 1.0);\n    \n    // texture\n    float tex = texture(iChannel0, (sun + uv + vec2(iTime * 0.02, 0.0)) * 8.0 ).r;\n    tex *= r * 0.8;\n    col -= tex;\n    return col;\n}\n\n\nvec4 horizon(vec2 uv)\n{\n    vec4 col = vec4(0.0);\n    \n    float d = distance(vec2(0.0, uv.y), vec2(0.0, GRADIENT_Y));\n    float r = smoothstep(0.05, 0.0, d);\n    float r2 = smoothstep(0.2, 0.0, d);\n    \n    col.g = r * 0.4;\n    col.r = r * 0.7;\n    //col *= 0.5;\n    \n    float amount = 0.4;\n    col += suncolor * r2 * amount;\n    \n    col = clamp(col, 0.0, 1.0);\n    return col;\n}\n\nvec4 ground(vec2 uv)\n{\n    vec4 col = vec4(0.0);\n    if(uv.y > GRADIENT_Y)\n    {\n        return col;\n    }\n    // ground color\n    float d = GRADIENT_Y - length(vec2(0.0, GRADIENT_Y) - vec2(0.0, uv.y));\n    d *= 15.0;\n    d = pow(d, 2.0);\n    \n    // falloff\n    vec2 p = uv - vec2(0.5);\n    d *= 1.0 - pow(length(sun + p), 0.75);\n    \n    col = suncolor * d;\n    return col;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y /= 1.7;\n    float sunspeed = 0.3;\n#ifdef MOUSE_CONTROL\n\n    sun = vec2(iMouse.x / iResolution.x, iMouse.y / iResolution.y) - vec2(0.5);\n#else\n    sun = vec2(0.0, 0.0);\n    sun.y += 0.1 + sin (iTime * sunspeed + 2.0) * 0.1;\n#endif\n    \n    sun *= 4.0;\n#ifdef COLOR_CYCLING\n    suncolor.b += (sin(iTime * 0.05) + 0.5 ) * 0.5;\n    suncolor.r -= (sin(iTime * 0.05) + 0.5 ) * 0.5;\n#endif\n    \n    fragColor += sunhalo(uv);\n    fragColor += horizon(uv);\n    fragColor += ground(uv);\n    fragColor += sundisc(uv);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ltSGzD","date":"1427237828","viewed":474,"name":"RiseAndShine!","username":"kuvkar","description":"A rising sun 2D effect. It's my take on http://blog.camposanto.com sun effect. I didn't get the textures perfectly, but it looks nice I think.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","sun","texturing"],"hasliked":0,"parentid":"","parentname":""}}