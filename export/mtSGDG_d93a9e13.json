{"ver":"0.1","info":{"id":"mtSGDG","date":"1673825607","viewed":60,"name":"Checker Tiles","username":"goldenwitch","description":"Alternating tiles","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float timeScale = 2.0;\n    const vec2 gridSize = vec2(19.0,10.0);\n    const float brightnessMulti = 0.8;\n    \n    vec2 tileSize = iResolution.xy/gridSize;\n    \n    //If we are in even grid, color black\n    vec2 tileIndex = floor(fragCoord/tileSize);\n    vec4 timeColor = brightnessMulti*abs(cos(iTime/timeScale)*vec4(tileIndex.y/gridSize.y,tileIndex.x/gridSize.x,0.8,1));\n    \n    //Manual modulo cuz I can't types\n    vec2 tileEvenness = tileIndex.xy-2.0*floor(tileIndex.xy/2.0);\n    if(tileEvenness.xy != vec2(0.0,0.0) && (tileEvenness.x == 0.0 || tileEvenness.y == 0.0) )\n    {\n    \n        fragColor = timeColor;\n    } else {\n        fragColor = vec4(1,1,1,1);\n    }\n}","name":"Image","description":"","type":"image"}]}