{"ver":"0.1","info":{"id":"4fBSWw","date":"1706376894","viewed":56,"name":"exponential temporal dithering","username":"sampajama","description":"uses an exponential moving average to to estimate the human perception of an image, then correct it using two colors.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["dithering","temporal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    if (uv.y < 0.5) {\n        fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    } else {\n        fragColor = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float s = (55.0 * fragCoord.x + 89.0 * fragCoord.y) / (iResolution.x * 480.0);\n    float t = fract(s - iTime / 96.0);\n    \n    int iT = int(t * 5.0);\n    switch(iT) {\n        case 0: fragColor = texture(iChannel0, uv); break;\n        case 1: fragColor = texture(iChannel1, uv); break;\n        case 2: fragColor = texture(iChannel2, uv); break;\n        case 3: fragColor = texture(iChannel3, uv); break;\n        default: \n            float s2 = (55.0 * fragCoord.x - 55.0 * fragCoord.y) / (iResolution.x * 64.0);\n            float t2 = fract(s2 - iTime / 3.0);\n            fragColor = vec4(\n                sin(16.0 * (355.0 / 113.0) * (t2 + 0.0 / 3.0)) * 0.5 + 0.5,\n                sin(16.0 * (355.0 / 113.0) * (t2 + 1.0 / 3.0)) * 0.5 + 0.5,\n                sin(16.0 * (355.0 / 113.0) * (t2 + 2.0 / 3.0)) * 0.5 + 0.5,\n                1.0\n            ); \n            break;\n    }\n    \n    if (false) {\n        fragColor = texture(iChannel0, uv);\n    }\n    \n    fragColor = clamp(fragColor, vec4(0.0), vec4(1.0));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 base = pow(texelFetch(iChannel0, ivec2(fragCoord), 0), GAMMA);\n    vec4 blur = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    \n    vec4 t = blur;\n    \n    fragColor = pow(round(clamp(base + t, vec4(0.0), vec4(1.0))), 1.0 / GAMMA);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"vec4 getCoord(ivec2 coord)\n{\n    vec4 color = vec4(texelFetch(iChannel0, coord, 0).rgb, 1.0);\n    return COLOR_SPACE * pow(color, GAMMA);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 coord = ivec2(fragCoord);\n    \n    vec4 samp_sum = getCoord(coord);\n    vec4 total = vec4(lp_window(0.0) * lp_kernel(0.0));\n    samp_sum *= total;\n    \n    for(int d = 1; d < RANGE; ++d)\n    {\n        float w = lp_window(float(d) / float(RANGE));\n        vec4 t = w * vec4(\n            lp_kernel(float(d) / KERNEL.r),\n            lp_kernel(float(d) / KERNEL.g),\n            lp_kernel(float(d) / KERNEL.b),\n            1.0\n        );\n        \n        samp_sum += t * getCoord(coord + ivec2(d, 0));\n        samp_sum += t * getCoord(coord - ivec2(d, 0));\n        total += 2.0 * t;\n    }\n    \n    fragColor = samp_sum / total;\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const vec4 GAMMA = vec4(2.4);\n\nconst mat4x4 COLOR_SPACE = mat4x4(\n        vec4(+0.299, -0.299, +0.701, +0.000),\n        vec4(+0.587, -0.587, -0.587, +0.000),\n        vec4(+0.144, +0.877, +0.144, +0.000),\n        vec4(+0.000, -0.000, +0.000, +1.000)\n    );\n    \n\nconst mat4x4 INV_COLOR_SPACE = inverse(COLOR_SPACE);\n\n////* DEBAYERING *////\nconst float EPS = (5.79334e-21);\nconst float PI = (3.14159265358979323);\nconst float PHI = (1.61803398875);\n\n////* SPATIAL  *////\nconst vec3 KERNEL = vec3(2.0);\nconst int RANGE = int(12);\n\nfloat lp_sinc(float x) {\n    return sin(PI * x + EPS) / (PI * x + EPS);\n}\n\nfloat lp_gauss(float x) {\n    return exp(-x * x * 2.0);\n}\n\nfloat lp_kernel(float x) {\n    return lp_sinc(x);\n}\n\nfloat lp_window(float x) {\n    return lp_sinc(x);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"vec4 getCoord(ivec2 coord)\n{\n    vec4 color = vec4(texelFetch(iChannel0, coord, 0).rgb, 1.0);\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 coord = ivec2(fragCoord);\n    \n    vec4 samp_sum = getCoord(coord);\n    vec4 total = vec4(lp_window(0.0) * lp_kernel(0.0));\n    samp_sum *= total;\n    \n    for(int d = 1; d < RANGE; ++d)\n    {\n        float w = lp_window(float(d) / float(RANGE));\n        vec4 t = w * vec4(\n            lp_kernel(float(d) / KERNEL.r),\n            lp_kernel(float(d) / KERNEL.g),\n            lp_kernel(float(d) / KERNEL.b),\n            1.0\n        );\n        \n        samp_sum += t * getCoord(coord + ivec2(0, d));\n        samp_sum += t * getCoord(coord - ivec2(0, d));\n        total += 2.0 * t;\n    }\n    \n    vec4 dithered = clamp(INV_COLOR_SPACE * (samp_sum / total), vec4(0.0), vec4(1.0));\n    \n    vec4 base = pow(texelFetch(iChannel2, ivec2(fragCoord), 0), GAMMA);\n    \n    vec4 error = base - dithered;\n    fragColor = error + 0.975 * texelFetch(iChannel1, ivec2(fragCoord), 0);\n}","name":"Buffer D","description":"","type":"buffer"}]}