{"ver":"0.1","info":{"id":"7dfXR2","date":"1618946190","viewed":216,"name":"fairy_circle.ff3","username":"ff3","description":"A fairy circle. This is my first shader. Hope it is acceptable for a first try.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["fairy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float CIRCLE_RAD = 100.;\nconst float TWO_PI = 6.28318530718;\nconst float AOE = 40.;\nconst int NUM_STARS = 12;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float intensity_exp = 0.0, intensity_lin = 0.0;\n\n    for (int j = 0; j < NUM_STARS; j++)\n    {\n        float theta = mod(texelFetch(iChannel0,ivec2(3*j,j),0).r, TWO_PI) + mod(float(iFrame),90.0);\n        float hypot = CIRCLE_RAD;\n        \n        vec2 star;\n\n        switch (j)\n        {\n            case 0:\n            case 4:\n            case 8:\n                star = (iResolution.xy * .5) + vec2(cos(theta) * hypot, sin(theta) * hypot);\n                break;\n            case 1:\n            case 5:\n            case 9:\n                star = (iResolution.xy * .5) + vec2(cos(theta) * -hypot, sin(theta) * hypot);\n                break;\n            case 2:\n            case 6:\n            case 10:\n                star = (iResolution.xy * .5) + vec2(cos(theta) * -hypot, sin(theta) * -hypot);\n                break;\n            case 3:\n            case 7:\n            case 11:\n                star = (iResolution.xy * .5) + vec2(cos(theta) * hypot, sin(theta) * -hypot);\n                break;\n        }\n        \n        float d = distance(fragCoord, star);\n        \n        intensity_exp += 1.0 - ( min(AOE, d * d) / AOE );\n        intensity_lin += 1.0 - ( min(AOE, d) / AOE );\n    }\n\n    fragColor = vec4(intensity_exp, intensity_exp, intensity_lin, 1.0);\n}","name":"Image","description":"","type":"image"}]}