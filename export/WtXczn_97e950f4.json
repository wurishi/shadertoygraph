{"ver":"0.1","info":{"id":"WtXczn","date":"1591210840","viewed":233,"name":"DomainDistortion TheArtOfCode","username":"stradiotto","description":"Just a very small adaptation from Example based on code from Youtube - ShaderToy Tutorial Part 4 - Domain distortion","likes":5,"published":1,"flags":2,"usePreview":0,"tags":["rect","band","remap","remap01","smokeappearance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n1) Example based on code from Youtube - ShaderToy Tutorial Part 4 - Domain distortion\nFrom The Art of Code - https://www.youtube.com/watch?v=jKuXA0trQPE&list=PLGmrMu-IwbguU_nY2egTFmlg691DN7uE5&index=4\n\nThanks again\n\n2) If you want to include your webcam, uncomment the code below and include webcan on iChannel0\n*/\n\nfloat band(float t, float start, float end, float blur)\n{\n\tfloat step1 = smoothstep(start-blur, start+blur, t);\n\tfloat step2 = smoothstep(end  +blur, end  -blur, t);\n    return step1 * step2;\n}\n\nfloat rect(vec2 uv, vec4 coords, float blur)\n{ \n    float x = band(uv.x, coords[0], coords[2], blur);\n    float y = band(uv.y, coords[1], coords[3], blur);\n    return x*y;\n}\n\nfloat remap01(float t, float a, float b)\n{\n\treturn (t-a) / (b-a);\n}\n\nfloat remap(float t, float a0, float b0, float a1, float b1)\n{\n\treturn a1 + (b1 - a1) * remap01(t, a0, b0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv     -= .5;\n    uv.x   *= iResolution.x / iResolution.y;\n    \n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    float m = sin(x*8. + 1.*iTime)*.4;\n    m*=m*.35;\n    y-=m;\n    \n    float blur = remap(x, -.5, 1., 0., .25);\n    \n    vec4 i2= \n        vec4(1., 1., 1., 1.)\n        //* texture(iChannel0, uv * vec2(1)  + vec2(.5)) \n        * vec4(1., 1., 1., 1.)  \n        * rect(vec2(x, y), \n               vec4(\n                   -.5, \n                   -.1, \n                    .5, \n                    .1\n               ), \n          blur)\n        ;\n   \n    fragColor = i2;\n}","name":"Image","description":"","type":"image"}]}