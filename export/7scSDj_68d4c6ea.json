{"ver":"0.1","info":{"id":"7scSDj","date":"1633954257","viewed":149,"name":"PixelArt Space Star Shader","username":"neryyyyyyyy","description":"Shader for a pixel art night sky, or a background for a space shooter.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["pixel","star","space","stars","pixelart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float iSpeed = 50.0;\nfloat iDensity = 2.0;\nfloat iStarSize = 4.0;\n\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 filteredRes = vec2(fragCoord.x - mod(fragCoord.x, iStarSize), fragCoord.y - mod(fragCoord.y, iStarSize));\n    vec2 st = filteredRes / iResolution.xy;\n    st *= 10.0;\n\n    vec2 ipos = floor(st);\n    vec2 fpos = fract(st);\n\n    float isStar = (pow(rand(fpos), 100.0 / iDensity)) * sin((iTime/(100.0/iSpeed)) * (rand(filteredRes) * (3.14159)));\n    float nebula = (rand(fpos) ) * 0.2;\n    fragColor = vec4(max(isStar, (sin(nebula) + 1.0)/8.0), isStar, max(isStar, (cos(nebula) + 1.0)/8.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}