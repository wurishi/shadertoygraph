{"ver":"0.1","info":{"id":"lldXRr","date":"1477883838","viewed":305,"name":"sphere_test_PZ","username":"philzook","description":"raymarched sphere","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sphereraymarched"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphere( in vec3 p){\n return length(p) - 0.5;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    vec2 st = 2.0*uv -1.0;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    vec3 cam = vec3(0.0, 0.0, -1.0);\n    vec3 ray = vec3(st.x, st.y, 1);\n    ray = normalize(ray);\n    float depth = 0.0;\n    for(int i=0; i<64; i++){\n     vec3 p = cam + depth * ray;\n     depth = depth += sphere(p);\n        \n    }\n    vec3 p = cam + depth * ray;\n    if(abs(sphere(p)) < 0.1){\n     \n     fragColor = vec4(0.3+dot(normalize(p), normalize(vec3(1.0,1.0,0.0)))); \n    }\n    \n}","name":"Image","description":"","type":"image"}]}