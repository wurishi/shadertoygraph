{"ver":"0.1","info":{"id":"clsyWS","date":"1691115223","viewed":72,"name":"voronoi 2D noise","username":"Swifter","description":"a","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float SIZE = 40.;\nconst int SEED = 69;\n\n#define PI2 6.28318530718\n\nfloat random(vec2 st, int seed) {\n    return fract(sin(dot((st.xy + float(seed)),\n        vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat voronoi2D(vec2 grid, int seed) {\n    vec2 centerPos = floor(grid);\n    float minDist = 1.;\n    \n    for (int x = 0; x <= 2; x++) {\n        for (int y = 0; y <= 2; y++) {\n            vec2 gridPos = centerPos + vec2(x, y);\n            float randX = random(gridPos, seed);\n            float randY = random(gridPos, seed + 1);\n            vec2 randOffset = vec2(randX, randY);\n            float dist = length(grid - gridPos + randOffset);\n            \n            if (dist < minDist) {\n                minDist = dist;\n            }\n        }\n    }\n    \n    return minDist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 aspectUV = vec2(1., iResolution.y / iResolution.x) * uv;\n    \n    float f = voronoi2D(aspectUV * SIZE, SEED);\n    \n    fragColor = vec4(f * vec3(1,1,1),1.0);\n}","name":"Image","description":"","type":"image"}]}