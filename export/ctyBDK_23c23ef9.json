{"ver":"0.1","info":{"id":"ctyBDK","date":"1702475358","viewed":74,"name":"Glow ring","username":"wgmgo","description":"My first shader, any suggestions are welcome. Thanks in advance.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159\n\nfloat sdCircle(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat remap(float x, float a, float b, float c, float d)\n{\n    return (x - a) / (b - a) * (d - c) + c;\n}\n\nfloat drawGridLines(vec2 uv, float unit, float width)\n{\n    float unitHalf = unit * 0.5;\n    uv = mod(uv, vec2(unit));\n\tuv = abs(uv - unitHalf);\n    return smoothstep(unitHalf - width, unitHalf, max(uv.x, uv.y));\n}\n\nvec3 drawGrid(vec2 uv, float major, float minor, float lineWidth)\n{\n\tuv = abs(uv);\n    \n    //if(smoothstep(lineWidth, .0, min(uv.x, uv.y)) > .0)\n    //    return vec3(.3); // axis\n    \n    if(major > .0 && drawGridLines(uv, major, lineWidth) > .0)\n\t\treturn vec3(.3); // major lines\n    \n    if(minor > .0 && drawGridLines(uv, minor, lineWidth) > .0)\n\t\treturn vec3(.15); // minor lines\n    \n\treturn vec3(.0);\n}\n\nfloat glow(float dist, float radius, float intensity)\n{\n    return pow(radius/dist, intensity);\n}\n\nfloat drawRing(vec2 uv, float width)\n{\n    float t1 = 1.5, t2 = 1.5, t3 = 1.5; // scale, fade out, hiden\n    float T = t1 + t2 + t3;\n    float t = mod(iTime, T);\n    float radius = remap(smoothstep(0.0, t1, t), 0.0, 1.0, 0.03, 0.3); // scale\n\tfloat glow = min(1.0, glow(abs(sdCircle(uv, radius)), width, 0.5));\n    return glow * smoothstep(t1 + t2, t1, t); // fade out\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord.xy - iResolution.xy / 2.0) / scale;\n    float px = 1. / scale; // 1 pixel\t\n    vec3 col = vec3(0.);    \n    \n    col += drawGrid(uv, .0, .1, px);\n\n    col = mix(col, vec3(1.0, 0.0, 1.0), drawRing(uv, px * 2.0));    \n\n    //col = tanh(col);     \n    fragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}