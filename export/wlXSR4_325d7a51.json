{"ver":"0.1","info":{"id":"wlXSR4","date":"1587262422","viewed":412,"name":"Busy crowd","username":"zxxuan1001","description":"Colorful stuff","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["2d","trail"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy/iResolution.xy;\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord.xy), 0);\n    //fragColor = texture(iChannel0, p);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 render(in vec2 fragCoord, in float t) \n{\n    vec2 p = 2.0*fragCoord.xy/iResolution.xy-1.0;\n    p.x *= iResolution.x/iResolution.y;\n    vec2 mo = 2.0*iMouse.xy/iResolution.xy-1.0;\n    mo.x *= iResolution.x/iResolution.y;\n    vec3 rpCol = draw(p, mo, SCALE, t);\n    return rpCol;\n}\n\n\nvec3 pixel(in ivec2 p)\n{\n    return texelFetch(iChannel0, p, 0).rgb; // not supported sometimes\n}\n\n\nvec3 pixel2(in vec2 p)\n{\n    return texture(iChannel0, p).rgb; // safe choice\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 rpCol = render(fragCoord, iTime*SPEED);\n    ivec2 p = ivec2(fragCoord);\n    vec2 p1 = fragCoord;\n    vec2 r = iResolution.xy;\n    vec3 tex = vec3(0.0);\n    \n    \n\ttex += pixel(p+ivec2(-1,0));\n    tex += pixel(p+ivec2(1,0));\n    tex += pixel(p+ivec2(0,-1));\n    tex += pixel(p+ivec2(0,1));\n\t\n    /*\n    tex += pixel2((p1+vec2(-1.0, 0.0))/r);\n    tex += pixel2((p1+vec2(1.0, 0.0))/r);\n    tex += pixel2((p1+vec2(0.0, -1.0))/r);\n    tex += pixel2((p1+vec2(0.0, 1.0))/r);\n\t*/\n    tex *= 0.25;\n    \n    vec3 col = mix(rpCol, tex, TRAIL);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define RIPPLE_NUM 24\n#define TRAIL 0.9\n#define SCALE 0.1\n#define SPEED 3.0\nfloat hash1(vec2 p)\n{\n\treturn fract(sin(dot(p.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\nvec3 ripple(vec2 p, vec2 cen, float r, float t) {\n    p -= cen;\n    float len = length(p)/r;\n    float len2 = len*len;\n    float n1 = cos(len-t+sin(cen.x+cen.y)) * exp(-0.65*len2);\n    float n2 = 0.7*cos(len-t+cen.x*1.0+cen.y*2.0) * exp(-0.63*len2);\n    float n3 = cos(len-t+cen.x*3.0-cen.y*1.0) * exp(-0.61*len2);\n    vec3 rp = vec3(n1,n2,n3) * 1.2;\n    return rp * rp;\n}\n\nvec3 draw(in vec2 uv, in vec2 mo, in float r, in float t) {\n    vec3 col = vec3(0.0);\n    float l = 1.0-length(uv);\n    col += vec3(0.0,0.05,0.1) * pow(32.0, l) * (0.6 + 0.4*sin(0.5*t));\n    col += ripple(uv, mo, r, t);\n    for (int i = 0; i < RIPPLE_NUM; i++) \n    {\n      float n = fract(float(i) * 1.731 + 0.131);\n      vec2 cen = -1.0 + 2.0*vec2(hash1(vec2(n*11.717, 10.0*n*n)), \n                               hash1(vec2(fract(n*11.511), sin(n))));\n      //vec2 cen = vec2(0.0);\n      cen +=  0.5*vec2(sin(1000.0*n + t), sin(100.0*cos(n) + t));\n      col += ripple(uv, cen, r + 0.2*sin(t+11.1*n)*r, t - 2.0*n);  \n    }\n    \n\treturn col;\n}\n","name":"Common","description":"","type":"common"}]}