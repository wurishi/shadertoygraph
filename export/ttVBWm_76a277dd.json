{"ver":"0.1","info":{"id":"ttVBWm","date":"1614509775","viewed":142,"name":"petals storm","username":"sukupaper","description":"Code is messed up but the I enjoy the result a lot.. ðŸ‘€\"","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","experimental","petals","storm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: paperu\n// Title: petals storm\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\n#define P 6.28318530717\nfloat t;\n\nvec3 SpectrumPoly(float x) {\n    // https://www.shadertoy.com/view/wlSBzD\n    return (vec3( 1.220023e0,-1.933277e0, 1.623776e0)\n          +(vec3(-2.965000e1, 6.806567e1,-3.606269e1)\n          +(vec3( 5.451365e2,-7.921759e2, 6.966892e2)\n          +(vec3(-4.121053e3, 4.432167e3,-4.463157e3)\n          +(vec3( 1.501655e4,-1.264621e4, 10.375260e4)\n          +(vec3(-2.904744e4, 1.969591e4,-2.330431e4)\n          +(vec3( 3.068214e4,-1.698411e4, 2.229810e4)\n          +(vec3(-1.675434e4, 7.594470e3,-1.131826e4)\n          + vec3( 3.707437e3,-1.366175e3, 2.372779e3)\n            *x)*x)*x)*x)*x)*x)*x)*x)*x;\n}\n\nmat2 rot(in float a) { return mat2(cos(a),sin(a),-sin(a),cos(a)); }\n\nfloat sph(in vec3 p, in float r) { return length(p) - r; }\nfloat box(in vec3 p, in vec3 s, in float r) { return length(max(abs(p) - s,0.)) - r; }\n\nfloat df(in vec3 p) {\n    p.xz *= rot(P*.125);\n    p.yz *= rot(P*.125 - t*4.);\n    float d = 10e9, v = 1.;\n    mat2 rotV1 = rot(P*.125 + t), rotV2 = rot(P*.125 + t*2.), rotV3 = rot(P*.125 + t*4.);\n    for(int i = 0; i < 5; i++) {\n        d = min(d,max(-box(p, vec3(.5)*v, .015),sph(p, .55*v)));\n        p.xz *= rotV1;\n        p.xy *= rotV2;\n        p.yz *= rotV3;\n        p.z = abs(p.z) - 0.378;\n        v *= .75;\n    }\n    return d;\n}\n\nvec3 normal(in vec3 p) { float d = df(p); vec2 u = vec2(0.,.00001); return normalize(vec3(df(p + u.yxx),df(p + u.xyx),df(p + u.xxy)) - d); }\n\nvec3 rm(in vec3 c, in vec3 r) {\n    const float MAX_D = 5., LIM = .0001;\n    const int MAX_IT = 150;\n    vec3 color = vec3(-1.);\n    vec3 p = c;\n    bool h = false;\n    for(int i = 0; i < MAX_IT; i++) {\n        float d = df(p);\n        if(d < LIM) { h = true; break; }\n        if(distance(c,p) > MAX_D) { break; }\n        p += d*r;\n    }\n    if(h) {\n        vec3 n = normal(p);\n        color = SpectrumPoly(clamp(dot(n,-r),0.,1.));\n    }     \n    \n    return color;\n}\n\nvec3 rgb2hsv(in vec3 c) {\n    vec4 K = vec4(0., -1./3., 2./3., -1.);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1e-10;\n    return vec3(abs(q.z + (q.w - q.y)/(6.0*d + e)), d/(q.x + e), q.x);\n}\n\nvec3 hsv2rgb(in vec3 c) {\n    vec4 K = vec4(1., 2./3., 1./3., 3.);\n    return c.z * mix(K.xxx, clamp(abs(fract(c.xxx + K.xyz)*6. - K.www) - K.xxx, 0., 1.), c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 st = (fragCoord.xy - .5*iResolution.xy)/iResolution.y;\n    vec2 m = iMouse.xy/iResolution.xy - .5;\n    float g = -4.312 - m.x*.1;\n    t = g*.25 + cos(g*.5)*8.2 + pow(length(st)*0.7,2.) + iTime*.1;\n    \n    vec3 c = vec3(st*1.75,-2.);\n    vec3 r = normalize(vec3(0.,0.,1.));\n\n    vec3 color = rm(c,r);\n    st += g;\n    color += vec3(fract(st*5. + cos(st.x*10.)*cos(st.y*10.)),1.);\n    st *= rot(P*.125);\n    color = mix(color,color.bgr,step(0.,fract(st.x*8.) - .5));\n    color *= .5;\n    color = clamp(color,0.03,1.);\n    vec3 colHSV = rgb2hsv(color);\n    color = hsv2rgb(vec3(colHSV.x,colHSV.y*.985,colHSV.z));\n    \n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}