{"ver":"0.1","info":{"id":"WljXDR","date":"1565618174","viewed":185,"name":"Glitch#01","username":"104","description":"Evolving scenes","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float z = 1.;\nconst float complexity = 13.;\nconst float speed = .5;// scene changing speed\nconst float density = .8; // 0-1\n\nconst float PI = atan(1.)*4.;\n\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nmat2 rot2D(float r){\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\n#define q(x,p) (floor((x)/(p))*(p))\n\n\nvoid mainImage( out vec4 o, vec2 C)\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = C/R.xy;\n    vec2 N = uv;\n    uv.x *= R.x/R.y;\n    uv *= z;\n    float t = iTime+1e4;\n    uv += floor(t*speed)*z*1.618;// scene switcher\n    o = vec4(1);\n\n    for (float i = 1.;i <= complexity; ++ i) {\n        vec4 h = hash42(floor(uv+i));\n        vec2 p = fract(uv+i)-.5;\n        p *= rot2D(h.x*PI*2.);\n        uv += p * h.z;\n        h = hash42(floor(uv));\n        h += length(fract(p+q(iTime,.1)*.1)); // animate\n        h = fract(h);\n        if (i < 2. || h.w > density) {\n            o *= h;\n        }\n    }\n    o=pow(o,o-o+.5);\n  \to=step(.5,o) * mod(C.y,3.)/2.;\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}