{"ver":"0.1","info":{"id":"mdycR1","date":"1708917306","viewed":105,"name":"Skamz Feedback Test","username":"maxpleaner","description":"feedback test","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 scaledUv = uv * 5.;\n\n    // Simulate movement of the static image by offsetting its UV coordinates over time\n    vec2 offset = vec2(sin(iTime * 0.5) * 0.5, cos(iTime * 0.5) * 0.5);\n    vec3 staticImage = texture(iChannel0, scaledUv + offset).xyz;\n\n    vec3 previousFrame = texture(iChannel1, uv).xyz; // Sample from the previous frame\n\n    // Blend the static image with the previous frame to create the smear effect\n    float blendFactor = 0.94; // Adjust this value to control the strength of the smear\n    vec3 blendedColor = mix(staticImage, previousFrame, blendFactor);\n\n    fragColor = vec4(blendedColor, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}