{"ver":"0.1","info":{"id":"WdVXzR","date":"1573253067","viewed":277,"name":"Knob Industrial","username":"andremichelle","description":"Let's build more knobs...","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["knob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define N 12.\n\n// https://vogerdesign.com/collections/latest-ui-kits/products/vintage-dials-dark-set-vol-2\n\nvec4 check(vec2 uv) {\n    return vec4(vec3(0.02*mod(floor(5.0*uv.x)+floor(5.0*uv.y),2.0)), 1.);\n}\n\nfloat Hash(in vec2 p, in float scale) {\n\treturn fract(sin(dot(mod(p, scale), vec2(27.16898, 38.90563))) * 5151.5473453);\n}\n\nfloat Noise(in vec2 p, in float scale ) {\n\tvec2 f;\n\tp *= scale;\n\tf = fract(p);\n    p = floor(p);\n    f = f*f*(3.0-2.0*f);\n    return mix(mix(Hash(p, scale),\n\t\t\tHash(p + vec2(1.0, 0.0), scale), f.x),\n\t\t\tmix(Hash(p + vec2(0.0, 1.0), scale),\n\t\t\tHash(p + vec2(1.0, 1.0), scale), f.x), f.y);\n}\n\nfloat fBm(in vec2 p) {\n\tfloat f = 0.0;\n\tfloat scale = 10.;\n    p = mod(p, scale);\n\tfloat amp   = .6;\n\tfor (int i = 0; i < 5; i++)\n\t{\n\t\tf += Noise(p, scale) * amp;\n\t\tamp *= .5;\n\t\tscale *= 2.;\n\t}\n\treturn min(f, 1.0);\n}\n\nvec4 over( in vec4 a, in vec4 b ) {\n    return mix(a, b, 1.-a.w);\n}\n\nfloat nCap(vec2 uv, float angle) {\n    const float r1 = 0.44;\n    float a = atan(uv.y, uv.x)+angle;\n    float b = a/PI*N/2.-.25;\n    float f = fract(b);\n    float l = length(uv);\n    float d = step(f, r1);\n    return (1.-d*0.1)*.5-l;\n}\n\nfloat line( in vec2 p, in vec2 a, in vec2 b ) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/-iResolution.y*2.0;\n    vec2 st = uv+vec2(.0,-.16); // shadow offset\n    float av = sin(iTime*.5)*PI*.8; // angle value\n    mat2 mat = mat2(cos(av), -sin(av), sin(av), cos(av));\n    \n    float a = atan(uv.y, uv.x);\n    float l = length(uv);\n\tfloat sCap = nCap(uv, av); // n-gon shape\n\tfloat dCap = nCap(st, av); // shadow\n\n    float noise = fBm(uv*mat*1.2);\n    vec3 col0 = vec3(.08,.20, .28);\n    vec3 col1 = vec3(.18,.39, .28);\n    vec3 col2 = vec3(.10,.28, .39);\n\n    vec3 colN = vec3(pow(noise, 2.0)+.04);\n    mat2 m = mat2(cos(av), sin(av), -sin(av), cos(av));\n    \n    float lineS = line(uv, vec2(.0, -.14)*m, vec2(.0, -.5)*m)-.05;\n    float capShape = max(-lineS*.75, l-0.386);\n    \n    vec4 col;\n    \n    float g = -1. + smoothstep(.75, -.75, uv.y) * 1.5;\n\tcol = vec4(g*.02+.16);\n    col = over(vec4(vec3(.0), max(smoothstep(0.01, 0.1, dCap+.08), smoothstep(0.02, 0.01, length(st)-0.5))*.8), col); // shadow\n    col = over(vec4(vec3(g*.06+.04), smoothstep(0.02, 0.01, l-0.5)), col); // bottom edge\n    col = over(vec4(vec3(colN*.02), smoothstep(0.02, 0.01, l-0.48)), col); // bottom fill\n    col = over(vec4(vec3(colN*.1+g*.04+col1*.1), smoothstep(0.001, 0.02, sCap)), col); // shape\n    col = over(vec4(vec3(1.)*(.95+g*.05), smoothstep(0.0, 0.12, .02-abs(sCap-.01))), col); // shape edge\n    col = over(vec4(vec3((col0-smoothstep(0.2, 1., noise)*.03+smoothstep(0.5, 0.3, noise)*.05))+g*.03, smoothstep(0.02, 0.01, capShape)), col); // cap fill\n    col = over(vec4(vec3(0.), smoothstep(0.008, 0.0, abs(capShape-.01))), col); // cap edge dark\n    col = over(vec4(vec3(g*.16+.20), smoothstep(0.01, 0.0, abs(capShape))), col); // cap edge tint\n\n\tfragColor = col;\n}","name":"Image","description":"","type":"image"}]}