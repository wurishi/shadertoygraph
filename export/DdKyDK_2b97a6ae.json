{"ver":"0.1","info":{"id":"DdKyDK","date":"1696623048","viewed":37,"name":"Fract Noise 1","username":"Rugged","description":"My trig one was very heavily \"weighted\" towards 1.0, this one is more evenly distributed. I don't consider the use of a rotation matrix in this enough to call it a \"trig\" noise function. Yes I know its not \"cloud noise\" yet.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["noise","hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n\n    vec4 col = vec4(0.0);\n\n    \n    col += cloudNoise1(fragCoord + (200. * iTime), (1.1 + sin(iTime)) / 2.1);\n    \n    \n    // darken the noise so that the range line is visible\n    col *= .4;\n    \n    \n    col += vec4(1., 0., 0., 0.) * texture(iChannel0, uv).x; \n    \n    fragColor = col;\n    \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec4 col = texture(iChannel0, uv);\n    \n    \n    float x = cloudNoise1(vec2(100. * iTime), .5);\n\n    \n    if(distance(uv, vec2(x)) < .003){\n        col = vec4(1.);\n    }\n    \n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec2 rotate(vec2 v, float theta){\n    mat2 rot;\n    rot[0] = vec2(cos(theta), -sin(theta));\n    rot[1] = vec2(sin(theta), cos(theta));\n    \n    \n    return rot * v;\n}\n\n\nfloat cloudNoise1(vec2 frag, float scale){\n    \n    frag *= scale;\n    \n    frag = floor(frag);\n    \n    frag += 1000.0f;\n    \n    vec2 frag2 = rotate(frag, frag.y);\n    vec2 frag3 = rotate(frag, frag.x);    \n    \n    \n    \n    return fract(frag2.y - frag3.x);// * frag2.y;\n}","name":"Common","description":"","type":"common"}]}