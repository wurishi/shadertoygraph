{"ver":"0.1","info":{"id":"wl2XDm","date":"1566182655","viewed":134,"name":"timelapse multiverse","username":"RemoteControlFungus","description":"I was messing around and accidentally made something I thought looked cool.. just saving it so I can figure out whats going on later.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float EPSILON = 0.0001;\n\nvec3 light( vec3 ray,vec3 lightPos,vec3 color) {\n    vec3 f = fract( ray ) -0.5;\n    vec3 normf = normalize(f);\n    vec3 light = lightPos-ray;\n    float lighting = normf.x*light.x+normf.y*light.y+normf.z*light.z;\n    lighting=lighting<0.0?0.0:lighting;\n    float l2 = length(light);\n    float brightness = 6.0f;\n\treturn brightness*lighting/pow((l2+0.30),2.5)*color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 pos = (fragCoord.xy*2.0 - iResolution.xy) / iResolution.y;\n    float time = iTime * 0.2f;\n    float t = time+0.1;\n    \n    //camera\n    vec3 camPos = vec3(cos(time*0.5), sin(time*0.5), -time*0.5);\n    vec3 camTarget = vec3(cos(t*0.5), sin(t*0.5), -t*0.5);\n    vec3 camDir = normalize(camTarget-camPos);\n    vec3 camUp  = normalize(vec3(0.0, 1.0, 0.0));\n    vec3 camSide = cross(camDir, camUp);\n    camUp  = cross(camDir, camSide);\n    vec3 rayDir = normalize(camSide*pos.x + camUp*pos.y + camDir*1.5);\n    \n    vec3 lightPos = camTarget;\n    \n    //raymarching\n    vec3 ray = camPos;\n    float cr = 0.2;//circle radius\n    bool end = true;\n    for(int i=0; i<100; ++i) \n    {\n        vec3 c = vec3(1,1,1);\n        vec3 q = mod(ray,c)-0.5f*c;\n\t\tfloat d_min = length(q)- cr;\n        \n        \n        if ((d_min<EPSILON)&&(dot(ray-camPos,camDir)>0.0))\n        {\n            end = false;\n            break;\n        }\n        \n        //This does the crazy explody thing for some reason\n        ray+=0.8*rayDir;\n        ray+=sin(t*0.1)*rayDir;\n        //ray+=d_min*rayDir;\n    }\n\n    vec3 sphereColor = vec3(0.4, 0.4, 0.8 ); \n    vec3 color = end?vec3(0.0,0.0,0.0):light(ray,lightPos,sphereColor);\n    fragColor = vec4( color*(1.0,1.0,1.0), 1.0 );\n}","name":"Image","description":"","type":"image"}]}