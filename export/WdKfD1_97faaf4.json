{"ver":"0.1","info":{"id":"WdKfD1","date":"1607029815","viewed":136,"name":"saturation picker","username":"sanderoneil","description":"I'm picking the saturation using a very limited knowledge of linear algebra","likes":1,"published":1,"flags":6,"usePreview":0,"tags":["saturation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = cos(iTime+uv.x+vec3(0,2.+uv.y*3.,4))*.5+.5;\n    \n    \n    //col = satpick(col,iMouse.x/iResolution.x*2.);//second argument is saturation\n\n    vec2 m = iMouse.xy/iResolution.xy;\n    \n    float v = 0.;\n    \n    for (int x = 0; x<512; x++)\n    {\n        v+=texture(iChannel0, vec2(x,0.)).x/100.;\n        \n        }\n    \n    //fragColor = vec4(hsvtoc(ctohsv(vec3(m.x,m.y,0))),1.0);\n    \n    fragColor = vec4(hsvtoc(ctohsv(texture(iChannel1, uv).xyz)+vec3(m,0)),1.0);\n    //fragColor = vec4(hsvtoc(vec3(1.,m.y*2.,m.x)),1.0);\n    //fragColor = vec4(hsvtoc(vec3(1,0,1.8)),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 hsvtoc( vec3 hsv )\n{\n    float h = hsv.x * 2. * 3.1415;\n    float s = hsv.y;\n    float v = hsv.z;\n    \n    float l = cos(h)*s;\n    float r = sin(h)*s;\n    float u = v*length(vec3(1,1,1)+.01);\n    \n    vec3 L = normalize(vec3(1.,-1.,0))*l;\n    vec3 U = normalize(vec3(1.,1.,1.))*u;\n    vec3 R = -cross(normalize(vec3(1.,-1.,0.)),normalize(vec3(1.,1.,1.)))*r;\n    \n    \n    return(L+U+R);\n}\nvec3 ctohsv( vec3 c )\n{\n    vec3 n = normalize(c);\n    float l = dot(n,normalize(vec3(1.,-1.,0)));\n    float u = dot(c,normalize(vec3(1.,1.,1.)));\n    vec3 r = -cross(normalize(vec3(1.,-1.,0.)),normalize(vec3(1.,1.,1.)));\n    float R = dot(n,r);\n    float h = atan(l,R);\n    l = dot(c,normalize(vec3(1.,-1.,0)));\n    u = dot(c,normalize(vec3(1.,1.,1.)));\n    r = -cross(normalize(vec3(1.,-1.,0.)),normalize(vec3(1.,1.,1.)));\n    R = dot(c,r);\n    float s = sqrt(l*l+R*R);\n    float v = length(u)/length(vec3(1,1,1)+.01);\n    vec3 hsv = vec3(h/(2. * 3.1415),s,v);\n    return(hsv);\n}\nvec3 satpick( vec3 col, float sar )\n{\n    //float s = col.x+col.y+col.z;\n\t//vec3 p = vec3(s/3.);\n    //vec3 fromgray = col - p;\n    //float sat = acos(dot(col,vec3(1)));\n    \n    \n    //return( p + fromgray * sar);\n    \n    //return(hsvtoc(ctohsv(col)*vec3(1,sar,1)));\n    return(hsvtoc(ctohsv(col)));\n}","name":"Common","description":"","type":"common"}]}