{"ver":"0.1","info":{"id":"dtyyDV","date":"1701892519","viewed":37,"name":"Test bkup","username":"grizly32","description":"Testing - trying to make smooth distance fields over empty (skipped) cells....","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["repetition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//edited from Inigo Quilez example: https://www.shadertoy.com/view/dt2czK\n\nconst vec2 s = vec2(3.8,1.8);\nconst vec2 rep = vec2(9,1);\nvec2 rid = vec2(0.);\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 q = abs(p) - b;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0));\n}\n\nvec2 positions[7] = vec2[](vec2(0.0, 0.0), vec2(3.6,-5.1), vec2(7.2,8.5), vec2(10.8, -3.7), vec2(14.4, 6.2), vec2(18., -10.1), vec2(21.6, 2.2));\n\nfloat shape( in vec2 p, float id )\n{\n    vec2 b = vec2(1.6,0.8);\n\n    //p.y += positions[int(abs(id))].y;\n    \n    return sdBox(p, b ) -  0.1;\n}\n\n//-----------------------------\n\n\nvec2 dBox(vec2 r, float gap) \n{\n    if(r.x > 0.){\n        r.x = r.x + (gap*s.x);\n    }else{\n        r.x = r.x - (gap*s.x);\n    }\n    return r;\n}\n\n\n\n\n\nvec2 gap(vec2 p, float start, float stop){\n    float numSkips = stop-start-1.;\n    float mid = numSkips*0.5;\n    if(rid.x <= mid+start){\n        p.x += (s.x*(rid.x-start));\n    }else{\n        p.x -= (s.x*(stop-rid.x));\n    }\n    return p;\n}\n\nfloat map( in vec2 p )\n{\n\n    vec2 id = round(p/s);\n\n    float d = 1e20;\n\n    rid = clamp(id,vec2(0.0),rep); // limited repetition\n\n    vec2 r = p - s*rid;\n    //r.y -= positions[int(rid.x)].y;\n    if(rid.x > 0. && rid.x < 7.){// || rid.x == 4. || rid.x == 5. || rid.x == 1.){\n        r = gap(r,0.,7.);\n    }\n    //if(rid.x == 2.){\n      //  r.x += s.x;\n    //}\n    float testA = shape(r,rid.x);\n    \n    \n        d = min( d, testA );\n\n\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float sca = 20.25;\n    vec2 p = sca*(2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = sca*(2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n    // sdf\n    float d = map(p);\n   \n    // colorize\n    vec3 col = (d>0.0) ? vec3(0.9,0.6,0.3) : vec3(0.65,0.85,1.0);\n    col *= 1.0 - exp(-6.0*abs(d));\n    col *= 0.8 + 0.2*cos(31.416*d);\n    col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.035,abs(d)) );\n\n    // distance samples\n   \n    //vec2 m = vec2(3.5,2.0)*sin( 0.3*iTime*vec2(1.1,1.3)+vec2(0,2));\n    d = map( m );\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.007, abs(length(p-m)-abs(d))-0.015));\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.007, length(p-m)-0.08));\n\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}