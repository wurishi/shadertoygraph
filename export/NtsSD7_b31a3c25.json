{"ver":"0.1","info":{"id":"NtsSD7","date":"1625825718","viewed":156,"name":"AntiPod - Icarus","username":"Flopine","description":"A shader made as a loop for a track from ThronoCrigger, check out his album!!! \nhttps://thronocrigger.bandcamp.com/album/simulacra","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","lines","animation","mograph"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings and FabriceNeyret for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define TAU 6.283185\n\n#define BPM (150./60.)\n#define time iTime\n#define dt(speed,offset) fract(time*speed+offset)\n\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.07,fwidth(val-thre)))\n#define square(puv,s) (max(abs(uv.x),abs(uv.y))-s)\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define mo(puv,d) puv=abs(puv)-d;if(puv.y>puv.x) puv=puv.yx\n\nfloat line (vec2 uv, vec2 a, vec2 b, float r)\n{\n    vec2 pa = uv - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - r*h;\n}\n\nfloat parallelepipede (vec2 uv, float animoffset)\n{\n    float thickness = 0.03;\n    vec2 a = vec2(-.8,1.5);\n    vec2 anima = mix(vec2(-.8,-.5),a,dt(0.5,animoffset));\n    vec2 b = vec2(.8,0.5);\n    vec2 animb = mix(a,b,dt(0.5,animoffset));\n    vec2 c = vec2(.8,-1.5);\n    vec2 animc = mix(b,c,dt(0.5,animoffset));\n    vec2 d = vec2(-.8,-.5);\n    vec2 animd = mix(c,d,dt(0.5,animoffset));\n    \n    float lab = AAstep(0.005,line(uv, a, animb, thickness));\n    float lbc =  AAstep(0.005,line(uv, b, animc, thickness));\n    float lcd =  AAstep(0.005,line(uv, c, animd, thickness));\n    float lda =  AAstep(0.005,line(uv, d, anima, thickness));\n    \n    return lab * lbc * lcd * lda;\n}\n\nfloat frame (vec2 uv)\n{\n    float f = 1.;\n    float off = -0.2;\n    float aoff = 0.;\n    for (int i=0; i<8; i++)\n    {\n        f *= parallelepipede((uv+off)*2.,aoff);\n        off += 0.05;\n        aoff -= 0.1;\n    }\n    \n    float size = 0.4;\n    uv *= rot(PI/15.);\n    mo(uv,vec2(1.1+dt(BPM/1.5,0.),0.3-dt(BPM/2.,1.)));\n    uv.y += 0.4;\n    uv *= rot(PI/4.);\n    for (int i=0; i<4; i++)\n    {\n        f *= clamp(AAstep(0.01, abs(square(uv,size)))+0.65,0.,1.);\n        size -= 0.07;\n    }\n    \n    return f;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(frame(uv));\n    \n    fragColor = vec4(1.-col,1.0);\n}","name":"Image","description":"","type":"image"}]}