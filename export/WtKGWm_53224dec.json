{"ver":"0.1","info":{"id":"WtKGWm","date":"1579100665","viewed":124,"name":"hamming grid","username":"alwas","description":"Zooming into the coloured representation of the hamming distances of x-y positions.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["zoom","distance","art","carpet","beauty","muster","hamming"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Beauty of hamming dists...\n// - alwas 20200115\nint ham(int a, int b) {\n    int h=0;    \n    for (int c = 32; c >= 0; c--){\n      int ak = a >> c;\n      int bk = b >> c;\n      if ((ak & 1) != (bk & 1))\n          h++;\n    }    \n    return h;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float maxITime = 3.;\n    float iTimeFactor = maxITime - mod(iTime,maxITime)/2.;\n    int vCx = int(abs(fragCoord.x-(iResolution.x/2.))*iTimeFactor);\n    int vCy = int(abs(fragCoord.y-(iResolution.y/2.))*iTimeFactor);\n    float h = float(ham(vCx, vCy))/10.;\n    fragColor = vec4(vec3(sin(h*iTime),sin(h*4.*iTime),sin(h*5.)),1.0);\n}","name":"Image","description":"","type":"image"}]}