{"ver":"0.1","info":{"id":"XdXfz8","date":"1494737276","viewed":256,"name":"MANO fractal","username":"FMS_Cat","description":"https://twitter.com/fms_eraser/status/863410581436379137","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RECUR 8\n\n#define V vec3(0.,1.,-1.)\n#define ODST .577350269\n\nvec3 catColor( float phase ) {\n    return vec3(\n        sin( phase + 3.0 ),\n        sin( phase + 4.0 ),\n        sin( phase + 5.0 )\n    ) * 0.5 + 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = ( fragCoord.xy * 2.0 - iResolution.xy ) / iResolution.x;\n    \n\tvec2 v1 = vec2( 0.0, 0.5 );\n    vec2 v2 = vec2( -ODST, -0.5 );\n    vec2 v3 = vec2( ODST, -0.5 );\n    \n    float line = 0.0;\n    float phase = 0.0;\n    float outside = 0.0;\n    \n    for ( int i = 0; i < RECUR; i ++ ) {\n        float dot1 = dot( normalize( v2 - v1 ).yx * V.zy, p - v1 );\n        float dot2 = dot( normalize( v3 - v2 ).yx * V.zy, p - v2 );\n        float dot3 = dot( normalize( v1 - v3 ).yx * V.zy, p - v3 );\n        \n        float len = min( min( dot1, dot2 ), dot3 );\n        if ( len < 0.0 ) {\n            outside = 1.0;\n            break;\n        }\n        line = max( 0.0, 1.0 - abs( len ) * 600.0 );\n        \n        vec2 c = ( v1 + v2 + v3 ) / 3.0;\n        phase += length( c - p ) * float( i );\n        \n        float comp1 = dot( ( v1 - c ).yx * V.zy, p - c );\n        float comp2 = dot( ( v2 - c ).yx * V.zy, p - c );\n        float comp3 = dot( ( v3 - c ).yx * V.zy, p - c );\n        if ( comp1 < 0.0 ) {\n            if ( comp3 < 0.0 ) {\n                v1 = c;\n            } else {\n                v2 = c;\n            }\n        } else if ( comp2 < 0.0 ) {\n            v3 = c;\n        } else {\n\t\t    v1 = c;\n        }\n        \n    }\n    \n    if ( outside == 1.0 ) {\n        fragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n    } else {\n\t    fragColor = vec4( catColor( phase * 2.0 - iTime + 2.5 ) - line * 2.0, 1.0 );\n    }\n}","name":"Image","description":"","type":"image"}]}