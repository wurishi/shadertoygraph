{"ver":"0.1","info":{"id":"ls3SR2","date":"1460329186","viewed":382,"name":"patterns and lines","username":"quisten","description":"work in progress as always. loading screen in the making? PS: should be watched in fullscreen :) ","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["2d","image"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat pattern(vec2 uv, float s, float time)\n{\n    vec2 puv2 = uv*s;\n    float flow = .65+.35*(cos(puv2.x*8.0+9.0*sin(puv2.y+time*.75)));\n   \n    float lineWidth = .885+.1*flow; \n    float linePattern = 0.0; \n     float lineGradient = float(pow(.4+.3*length(uv-.5), 3.));\n   \n    \n   \tfloat lineX = float(max(0.0, -lineWidth-sin((puv2.x+puv2.y)*200.0)));\n    float lineY = float(max(0.0, -lineWidth-cos((-puv2.x+puv2.y)*200.0)));\n    \n    linePattern += 11.0*lineGradient*(lineX+lineY);\n    \n    //dots\n    vec4 dots = vec4(max(0.0, 0.7-pow(length(mod((puv2-vec2(.138,.153))*63.6500, 2.0)-.5), .40)));\n    if (dots.x > (.20+.075*flow))\n        linePattern = .5;\n    linePattern += dots.x*.25;\n       \n    \n    dots = vec4(max(0.0, 0.7-pow(length(mod((puv2-vec2(.4360,.4515))*63.6500, 2.0)-.5), .40)));\n    if (dots.x > (.25+.05*flow))\n         linePattern = .5;\n    return linePattern; \n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uv2 = uv*vec2(1.0, iResolution.y/iResolution.x);\n    float time = iTime;\n    \n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    fragColor = vec4(.5);\n    \n    \n    //gradient\n    fragColor = vec4(.15*uv.y);\n    \n    //add some light\n    fragColor +=  0.1*vec4(max(0.0, 1.0-length((uv-vec2(0.0,.75))-.5)));\n    \n   \n \n    // pattern\n    ///////////////////////////////////////////////////  \n    float linePattern = pattern(uv2,3.0, time);\n   // linePattern += .5*pattern(uv2*4.0, time);\n    \n    float colorPattern = .65+.35*(sin(uv.x*5.0+7.0*cos(uv.y+time)));\n    \n    linePattern *= colorPattern*colorPattern;\n    fragColor += linePattern;\n    \n    \n    //circles\n    ////////////////////////////////////////////////\n    float circles = 0.0;\n    float cflow = .75+.25*(cos(time*6.2+uv.x*34.0+5.0*sin(uv.y*3.4+time*3.35)));\n    float dflow = .75+.25*(cos(uv.x*12.0+12.0*sin(uv.y*19.0+time*4.75)));\n    \n    vec2 uvc = (uv2-vec2(0.5, .28))*1.95+vec2(0.0, -.1);\n    float theta = atan(uvc.x, uvc.y);  \n    float c = length(uvc); \n    \n   // float teth = (atan((uv.y-.5)/length(uv-.5))) ;\n    \n    float teth2 = (acos((uv.x-.5)/length(uv-.5))) ;\n    \n    float rt = (( sin(time+theta*4.0*sin((theta+time)*1.0))));\n    float rt2 = (( sin(theta*2.0-time+cos(theta*5.0+time))) );\n    \n    // outer boarder\n    if (c < .228 && c > 0.225)  // outerCircle\n        circles += .5+dflow;\n    \n    if (c < .223 && c > 0.205)  // dotted \n        circles += .75*(.5+.5*sin(theta*200.0+time*10.0));\n    \n    if (c < .203 && c > 0.200)  // outerCircle\n        circles += .5;\n    \n    // loading - layer 1\n    if (c < .15 && c > 0.11)  // rotating\n         if (rt < 0.4 && rt < 0.1)\n        circles += .55+cflow;\n        \n    \n    // loading - layer 2\n    if (c < .11 && c > 0.08)  // inner\n         if (rt2 < 0.3 && rt2 < 0.7)\n        circles += .55+dflow;\n    \n    // loading - layer 3\n    if (c < .08 && c > 0.04)  // rotating\n         if (rt < 0.84 && rt < 0.4)\n        circles += .45;    \n     \n    if (c < .030 && c > 0.025)  // inner rotating dotted\n        circles += .35*(.5+.5*sin(theta*50.0+time*10.0));\n    \n    // shading\n    /////////////////////////////////////\n    fragColor *= (.05+.95*vec4(pow(max(0.0,c-0.228), .50))); \n        \n        \n        // give it some pattern\n     circles += max(0.0, circles*pattern(uv2, 5.4, time));\n    fragColor += circles*cflow;\n    \n    \n    \n        \n\t// vignetting\n    /////////////////////////////////////\n    float v = 1.0-length(uv-.5); \n    float vv = 1.1*pow(v*.95+.05*rand(uv+time), 1.35);\n         \n    //fragColor = vec4(1.0);\n    fragColor *= vec4(vv);\n    \n    // gamma correction\n    /////////////////////////////////////\n    fragColor = sqrt(fragColor);\n    \n\n}","name":"Image","description":"","type":"image"}]}