{"ver":"0.1","info":{"id":"fll3W7","date":"1622216831","viewed":382,"name":"Rainbow Line","username":"ReEngine","description":"Moving line of a flowing rainbow colors\n","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"               // shader playback time (in seconds)\n\n\n\n\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat widthHeightRatio = iResolution.x/iResolution.y;\n\tuv.y/=widthHeightRatio;\n\t\n\t\n\t//Wave/////////////////////\n\tfloat slowing = 3.0;\n\tfloat frequency = 1.;\n\tfloat amplitudeLim = 2.;\n\t\n\t//Colors///\n\tfloat RGBTime = 2.;\n\tfloat colorWidth = 6.;\n\t\n\t\n\n\t\n\t\n\t\n\tfloat curvature = -pow(uv.x-0.5,2.)/0.5+0.5;\n\tfloat wave = cos((uv.x+iTime/slowing)*frequency)/amplitudeLim;\n\tfloat line = wave  *curvature+0.25;\n\t// line = curvature;\n\tvec2 centre = vec2(uv.x,line);\n\tvec2 pos = centre - uv;\n\t// Equation 1/x gives a hyperbola which is a nice shape to use for drawing glow as \n    // it is intense near 0 followed by a rapid fall off and an eventual slow fade\n    float dist = 1./length(pos);\n\t// Dampen the glow to control the radius\n    dist *= 0.1;\n\t\n\t// Raising the result to a power allows us to change the glow fade behaviour\n    // See https://www.desmos.com/calculator/eecd6kmwy9 for an illustration\n    // (Move the slider of m to see different fade rates)\n    dist = pow(dist, 0.8);\n\tRGBTime *= iTime;\n\tvec3 col = dist * vec3(sin(RGBTime+uv.x*colorWidth)/2.+0.5, -sin(RGBTime+uv.x*colorWidth)/2.+0.5, cos(RGBTime+uv.x*colorWidth)/2.+0.5);\n\tcol = 1.0 - exp( -col );\n\t\n\t\n\t\t\n\tfragColor = vec4(col,1.);\n\t\n    \n    //fragColor = vec4(uv.yyx,1);\n}\n","name":"Image","description":"","type":"image"}]}