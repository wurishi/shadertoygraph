{"ver":"0.1","info":{"id":"XfXfRs","date":"1724164855","viewed":24,"name":"Lava Flow","username":"armin","description":"The Lava Flow Shader is a dynamic and visually captivating shader designed to simulate the appearance of molten lava in motion.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["lava","flow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// --- Lava Flow Shader ---\n\n// Function to create a simple noise pattern\nfloat noise(vec2 p) {\n    return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n// Function to create smooth noise\nfloat smoothNoise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(mix(noise(i + vec2(0.0, 0.0)), noise(i + vec2(1.0, 0.0)), u.x),\n               mix(noise(i + vec2(0.0, 1.0)), noise(i + vec2(1.0, 1.0)), u.x), u.y);\n}\n\n// Function to create a layered noise pattern with animation\nfloat fbm(vec2 p) {\n    float value = 0.0;\n    float amplitude = 0.5;\n    float frequency = 1.0;\n    \n    for (int i = 0; i < 5; i++) {\n        value += amplitude * smoothNoise(p * frequency);\n        frequency *= 2.0;\n        amplitude *= 0.5;\n    }\n    \n    return value;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 R = iResolution.xy; // Screen resolution\n    vec2 uv = fragCoord / R; // Normalized coordinates\n    \n    // Animate UV coordinates for flowing effect\n    float time = iTime * 0.2;\n    vec2 flowDirection = vec2(sin(time), cos(time));\n    uv += flowDirection * fbm(uv * 3.0 - time);\n\n    // Generate a layered noise pattern\n    float noiseValue = fbm(uv * 3.0);\n    \n    // Lava color palette based on noise value\n    vec3 lavaColor = vec3(1.5 * noiseValue, 0.6 * pow(noiseValue, 2.0), 0.2 * pow(noiseValue, 4.0));\n    \n    // Add glow effect by brightening the highlights\n    vec3 glow = vec3(1.0, 0.5, 0.0) * pow(noiseValue, 3.0);\n    \n    // Combine lava color and glow\n    vec3 finalColor = lavaColor + glow;\n    \n    // Output final color\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}