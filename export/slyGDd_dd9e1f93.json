{"ver":"0.1","info":{"id":"slyGDd","date":"1638523391","viewed":149,"name":"voronoi graph","username":"nelsonkuang","description":"voronoi graph","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n——如何分割网格？\nuv坐标默认是在0到1之间，如果我们把uv乘以一个系数，这样在0到1之间的图形就会重复生成网格。\na. 把uv乘以5，把坐标等比放大5倍：uv *= 5.0\nb. 使用fract()函数单位化变量，使之在0.0到1.0之间：vec2 f_uv = fract(uv)\nc. 使用floor()函数对uv取整，就知道是在哪个网格了：vec2 i_uv = floor(uv)\n\n——计算最短距离\n如何计算像素点到相邻网格中随机离散点的距离？从网格坐标来说，就是x坐标从-1(左)到1(右)，y坐标从 -1(下)到1(上)，一共9 个网格的3x3区域可以用两个 for 循环遍历：\n\n*/\n\n// Referenced Information:\n// Created by inigo quilez - iq/2013  \n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://gameinstitute.qq.com/community/detail/122097\n\n// 随机方法  \nvec2 hash(vec2 p) {\n  p = vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3)));\n  return fract(sin(p) * 18.5453);\n}\n\n// return distance, and cell id  \nvec2 voronoi(in vec2 x) {\n  vec2 n = floor(x);              // cell(n)  \n  vec2 f = fract(x);              // 当前像素在 cell space 的坐标  \n  vec3 m = vec3(8.);               // 影响每个 cell 的大小，影响背景颜色  \n   // 遍历相邻的 9 个 cell  \n  for(int j = -1; j <= 1; j++) {\n    for(int i = -1; i <= 1; i++) {\n      vec2 g = vec2(float(i), float(j));  // 临近的 cell id offset  \n      // n+g 临近的 cell(n+g) 的随机像素坐标 o (cell space)  \n      vec2 o = hash(n + g);   // 影响 cell 的颜色  \n      // ❤  \n      vec2 r = g - f + (0.5 + 0.5 * sin(iTime + 6.2831 * o));  \n      // vec2  r = g - f + o;     // cell(n+g)[o] - cell(n)[f]   \n      // ❤  \n      float d = dot(r, r);  \n\n      m.x = min(m.x, d);\n    }\n  }\n  return vec2(sqrt(m.x), m.y + m.z);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = fragCoord / iResolution.xy; // 归一化坐标\n  uv -= .5; // -1 to 1\n  uv.x *= iResolution.x / iResolution.y; // aspect ratio\n\n  // computer voronoi patterm  \n  vec2 c = voronoi((14.0 + 6.0 * sin(0.2 * iTime)) * uv);  \n\n  fragColor = vec4(c.x, c.x, c.x, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}