{"ver":"0.1","info":{"id":"4tfcD2","date":"1506422356","viewed":118,"name":"tp interactive","username":"Dermenslof","description":"tp interactive","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["tpinteractive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n  move camera with WASD/ZQSD, LEFT_SHIFT ans SPACE\n  yaw/pitch camera with IJKL (CTRL -> reset pitch)\n  reset all camera/buffer with ENTER\n */\n\n#define R iResolution.xy\n#define EPSILON 0.00001\n#define T iTime * 2.\n#define maxD 1000.\n#define PI 3.14159265359\n#define PI5 25.1327412\n\nvec4 cyl, sph;\nmat3 mid = mat3(1.0, 0.0, 0.0,\n                0.0, 1.0, 0.0,\n                0.0, 0.0, 1.0);\n\nmat3 rotX(in float a)\n{\n\tmat3 m;\n    \n    m = mid;\n    m[1][1] = cos(a);m[1][2] = -sin(a);\n    m[2][1] = sin(a);m[2][2] = cos(a);\n    return (m);\n}\n\nmat3 rotY(in float a)\n{\n\tmat3 m;\n    \n    m = mid;\n    m[0][0] = cos(a);m[0][2] = sin(a);\n    m[2][0] = -sin(a);m[2][2] = cos(a);\n    return (m);\n}\n\nmat3 rot(in vec2 a)\n{\n\tmat3 m;\n    \n    m = mid;\n    m *= rotX(a.x);\n    m *= rotY(a.y);\n    return (m);\n}\n\nfloat icylender(in vec3 ro, in vec3 rd, in vec4 cl)\n{\n    float a, b, c, d, t;\n    \n    ro -= cyl.xyz;\n    \n    a = dot(rd.xz, rd.xz);\n    b = -dot(ro.xz, rd.xz);\n    c = dot(ro.xz, ro.xz) - cl.w * cl.w;\n    \n    d = b * b - a * c;\n    \n    if (d < EPSILON)\n    \treturn maxD;\n    d = sqrt(d);\n    return min((b + d) / a, (b - d) / a);\n}\n\nvec3 ncylender(in vec3 i, in vec4 cl)\n{\n    vec3 n = i - cl.xyz;\n    n.y = 0.;\n    return n / cl.w; \n}\n\nfloat isphere(in vec3 ro, in vec3 rd, in vec4 s)\n{\n\tfloat a, b, c, d, t;\n    \n    ro -= s.xyz;\n    \n    a = dot(rd, rd);\n    b = -dot(ro, rd);\n    c = dot(ro, ro) - s.w * s.w;\n    \n    d = b * b - a * c;\n    \n    if (d < EPSILON)\n        return maxD;\n\td = sqrt(d);\n    return min((b + d) / a, (b - d) / a);\n}\n\nvec3 nsphere(in vec3 i, vec4 s)\n{\n    return (i - s.xyz) / s.w;\n}\n\nfloat iplane(in vec3 ro, in vec3 rd, in float posy)\n{\n    ro.y -= posy;\n    if (rd.y != 0.)\n        return -ro.y / rd.y;\n    return maxD;\n}\n\nvec3 nplane(in vec3 i)\n{\n    return normalize(vec3(0, 1, 0));\n}\n\nbool validate(inout vec2 t, in float id, in float tmp)\n{\n\tif (tmp >= EPSILON && tmp < t.x)\n    {\n        t.x = tmp;\n        t.y = id;\n        return true;\n    }\n    return false;\n}\n\n\nvec2 trace(in vec3 ro, in vec3 rd)\n{\n    float id = 0.;\n    vec2 t = vec2(1000., -1);\n    validate(t, 2., iplane(ro, rd, -3.));\n    validate(t, 3., icylender(ro, rd, cyl));\n    for (float a = 0.; a < PI5; a += radians(4.))\n    {\n    \tvec4 s = vec4(vec3(cos(a) * 2., cos(a / 8.) * 4. + 1.25 , sin(a) * 2.), .25);\n    \tif (validate(t, 0., isphere(ro, rd, s)))\n        \tsph = s;\n    }\n    return t;\n}\n\nvec3 lightning(in vec3 rd ,in vec3 lp, in vec3 cl, in vec3 i, in vec3 n, in vec3 co, in float kd, in float ks, in float kb)\n{\n\tvec3 c = vec3(0);\n    vec3 ld = lp - i;\n    vec2 res = trace(i, ld);\n    if (res.x > length(ld))\n    {\n       \tld = normalize(ld);\n       \tfloat ps = dot(n, ld);\n\n       \tif (ps > 0.)\n       \t{\n           \tc += co * ps * kd;\n           \tps = -dot(normalize(n * 2. * ps - ld), rd);\n           \tif (ps > 0.)\n           \t      c += ks * pow(ps, kb);\n        \tc *= cl;\n    \t}\n    }\n    return c;\n    \n}\n\nvoid mainImage(out vec4 C, in vec2 U)\n{\n    cyl = vec4(0, 0, 0, 1);\n    \n    C.rgb = vec3(0);\n    \n    float e = 2. * tan(radians(30.));\n    float ratio = R.x / R.y;\n\tvec2 uv = 1. * U / R - .5;\n    vec3 ro = texture(iChannel0, U/R, .5).xyz;\n    vec3 rd = normalize(vec3(uv * vec2(e * ratio, e), 1.));\n    rd *= rot(texture(iChannel1, U/R, .5).xy);\n    \n\tvec2 result = trace(ro, rd);\n\tif (result.y > -1.)\n    {\n       vec3 i = ro + rd * result.x, n;\n       float ka, kd, ks, kb;\n       vec3 co;\n       if (result.y < 2.)\n       {\n           n = nsphere(i, sph);\n           co = vec3(1, 0, 0);\n           ka = .24, kd = .6, ks = .6, kb = 42.;\n       }\n       else if (result.y == 2.)\n       {\n           n = nplane(i);\n           co = vec3(1);\n           ka = .12, kd = .6, ks = .6, kb = 10.;\n       }\n        else\n       {\n           n = ncylender(i, cyl);\n           co = vec3(1, 1, 0);\n           ka = .12, kd = .6, ks = .3, kb = 14.;\n       }\n       vec3 ca = co * ka;\n       vec3 cd = lightning(rd, vec3(0., 200., -200.), vec3(.7, .7, 0), i, n, co, kd, ks, kb);\n       cd += lightning(rd, vec3(150, 100, -200.), vec3(0, .7, .7), i, n, co, kd, ks, kb);\n       cd += lightning(rd, vec3(-150, 100, -200.), vec3(.7, 0, .7), i, n, co, kd, ks, kb);\n       \n       C.rgb = clamp(ca + cd, vec3(0), vec3(1));\n        \n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define T iTime\n#define R iResolution.xy\n\nmat3 mid = mat3(1.0, 0.0, 0.0,\n                0.0, 1.0, 0.0,\n                0.0, 0.0, 1.0);\n\nmat3\trotX(float a)\n{\n\tmat3 m;\n    \n    m = mid;\n    m[1][1] = cos(a);m[1][2] = -sin(a);\n    m[2][1] = sin(a);m[2][2] = cos(a);\n    return (m);\n}\n\nmat3\trotY(float a)\n{\n\tmat3 m;\n    \n    m = mid;\n    m[0][0] = cos(a);m[0][2] = sin(a);\n    m[2][0] = -sin(a);m[2][2] = cos(a);\n    return (m);\n}\n\nmat3\trot(vec2 a)\n{\n\tmat3 m;\n    \n    m = mid;\n    m *= rotX(a.x);\n    m *= rotY(a.y);\n    return m;\n}\n\nvoid mainImage(out vec4 C, in vec2 U)\n{\n    vec2 uv = U / R;\n    if (T < .1 || texelFetch(iChannel1, ivec2(13,0), 0).x > 0.)\n        C.xyz = vec3(0, 0, -15);\n\telse\n    {\n        vec3 pos = texture(iChannel0, uv, .5).xyz;\n        vec3 d = vec3(0);\n        float e = 2. * tan(radians(30.));\n    \tfloat ratio = R.x / R.y;\n\t\tuv = 1. * U / R - .5;\n        if (texelFetch(iChannel1, ivec2(65,0), 0).x > 0. || texelFetch(iChannel1, ivec2(81,0), 0).x > 0.)\n            d.x = -1.;\n        if (texelFetch(iChannel1, ivec2(68,0), 0).x > 0.)\n            d.x = 1.;\n        if (texelFetch(iChannel1, ivec2(87,0), 0).x > 0. || texelFetch(iChannel1, ivec2(90,0), 0).x > 0.)\n            d.z = 1.;\n        if (texelFetch(iChannel1, ivec2(83,0), 0).x > 0.)\n            d.z = -1.;\n        \n        C.xyz = pos + (d * rot(texture(iChannel2, uv, .5).xy)) * .25;\n        \n        if (texelFetch(iChannel1, ivec2(16,0), 0).x > 0.)\n            C.y -= .25;\n        if (texelFetch(iChannel1, ivec2(32,0), 0).x > 0.)\n            C.y += .25;\n    }\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define T iTime\n#define R iResolution.xy\n#define s 3.14 / 90.\n\nvoid mainImage(out vec4 C, in vec2 U)\n{\n    vec2 uv = U / R;\n    if (T < .1 || texelFetch(iChannel1, ivec2(13,0), 0).x > 0.)\n        C.xy = vec2(0, 0);\n\telse\n    {\n        vec2 a = texture(iChannel0, uv, .5).xy;\n        if (texelFetch(iChannel1, ivec2(74,0), 0).x > 0.)\n            a.y -= s;\n        if (texelFetch(iChannel1, ivec2(76,0), 0).x > 0.)\n            a.y += s;\n        if (texelFetch(iChannel1, ivec2(73,0), 0).x > 0.)\n            a.x -= s;\n        if (texelFetch(iChannel1, ivec2(75,0), 0).x > 0.)\n            a.x += s;\n        if (texelFetch(iChannel1, ivec2(17,0), 0).x > 0.)\n            a.x = 0.;\n        C.xy = a;\n    }\n}","name":"Buf B","description":"","type":"buffer"}]}