{"ver":"0.1","info":{"id":"fsjGz3","date":"1617740768","viewed":103,"name":"Bruce","username":"SnoopethDuckDuck","description":"An orb\n\nrough golf [417]:\nhttps://www.shadertoy.com/view/DsVBRR","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159;\nconst float pi2 = 2. * pi / 3.;\nconst float pi3 = 4. * pi / 3.;\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\nvec2 dir = uv.xy +  (0.21 * (cos(iTime)) + 0.05 * cos(0.15 *iTime)) * cos(3. * uv.xx +0.05 *  iTime) - 0.5;\ndir *= 2.;\n\nfloat e = 4. * length(dir);\nfloat d = 0.5 * (1. / e + e);\nfloat theta = atan( dir.y,dir.x);\n\nfloat b = 0.5 + 0.5 * cos(iTime);\nfloat t= 0.5 * iTime;\nfloat t2 = 0.5 * iTime + pi2;\nfloat t3 = 0.5 * iTime + pi3;\n\nfloat p = cos(uv.x - 0.5 + 0.5 * cos(2. * t + theta)) * cos(uv.y - 0.5 + 0.5 * cos(t));\nfloat p2 = cos(uv.x - 0.5 + 0.5 * cos(2. * t2 + theta)) * cos(uv.y - 0.5 + 0.5 * cos(t2));\nfloat p3 = cos(uv.x - 0.5 + 0.5 * cos(2. * t3 + theta)) * cos(uv.y - 0.5 + 0.5 * cos(t2));\nfloat val = max(1. - p,p * p2);\nfloat val2 = max(1. -p2,p2 * p3);\nfloat val3 = max(1. -p3,p3 * p);\n\n    // Time varying pixel color\n    vec3 col = 1. - vec3(\n    smoothstep(val + val2, d, d * sqrt(val * val + val3 * val3)),\n    smoothstep(val2 + val3, d, d * sqrt(val2 * val2 + val * val)),\n    smoothstep(val3 + val, d, d * sqrt(val3 * val3 + val2 * val2)));\n    \n    vec3 col2 = 1. - vec3(0.2126* col.x + 0.7152 * col.y + 0.0722 * col.z);\n    //col2 = vec3(step(col.x,b));\n    col = 1. - min(col,0.58 *  sqrt( 1. - col * col + col2 * col2));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}