{"ver":"0.1","info":{"id":"7dsyW2","date":"1642782788","viewed":60,"name":"Mandelbrot Set First Try","username":"Rxphi","description":"Thats my first try programming the mandelbrot set :)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 oneStep(vec2 z, vec2 c){\n    return vec2(pow(z[0],2.)-pow(z[1],2.) , 2.*z[0]*z[1]) + c;\n}\n\nint stepsUntilOut(vec2 ab, int iterationSteps){\n\n    vec2 c = ab;\n\n    for(int i=0; i < iterationSteps; i++){\n        if (length(ab) > 2.){\n            return i;\n        }\n        ab = oneStep(ab, c);\n    }\n    return -1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv *= 5.;\n    //uv.x -= .1;\n    //uv.y += .9;\n    \n    int maxDepth = 20;\n    vec3 col = vec3(0);\n    \n    for (int i=0; i<maxDepth; i++){\n    \n        int x = stepsUntilOut(uv, i);\n\n        if (x!=-1){\n            //col[1] += float(i)/float(maxDepth);\n            break;\n            col += 1./float(maxDepth); \n            //col[1] += float(x)/float(i)/float(maxDepth);\n        }\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}