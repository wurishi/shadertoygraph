{"ver":"0.1","info":{"id":"wsSBzm","date":"1589718581","viewed":161,"name":"vector fields visualiser","username":"the_8th_mage","description":"visualises vector fields using a random texture and with avaraging the results along the fields","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lic","vectorfields"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 grad(vec2 uv) {\n    return 1./(uv -vec2(0.25,0)) + 1./(uv - vec2(-0.25,0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy - 0.5);\n\n    float col = 0.;\n    int n = 100;\n    for(int i = 0; i < n; i++) {\n        col += texture(iChannel0, uv).x;\n        uv += normalize(grad(uv)) * 0.001; \n    }\n    uv = (fragCoord/iResolution.xy - 0.5);\n\n    for(int i = 0; i < n; i++) {\n        col += texture(iChannel0, uv).x;\n        uv -= normalize(grad(uv)) * 0.001; \n    }\n    col *= 1./float(2*n);\n    // Time varying pixel color\n\tfragColor = vec4(col, col, col, 1.0);\n}","name":"Image","description":"","type":"image"}]}