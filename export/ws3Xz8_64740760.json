{"ver":"0.1","info":{"id":"ws3Xz8","date":"1571401892","viewed":70,"name":"ray marching remi 2","username":"vankeisb","description":"lksqjslkqjqsdkljdskl","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blah"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST .01\n\nfloat GetDist(vec3 p) {\n    float y = abs(sin(iTime * 5.)) + 1.;\n    float x = sin(iTime);\n    float z = cos(iTime) + 6.;\n    vec4 sphere = vec4(x, y, z, 1);\n    float dS = length(p - sphere.xyz)-sphere.w;\n    float dP = p.y;\n    float d = min(dS,dP);\n    return d;\n}\n\nvec3 GetNormal(vec3 p) {\n    float d = GetDist(p);\n    vec2 e = vec2(.01, 0);\n    vec3 n = d - vec3(\n        GetDist(p-e.xyy),\n        GetDist(p-e.yxy),\n        GetDist(p-e.yyx));\n    \n    return normalize(n);\n}   \n\nfloat RayMarch(vec3 ro, vec3 rd) {    \n    float dO = 0.;\n    \n    for (int i=0; i<MAX_STEPS; i++) {\n        vec3 p = ro + rd*dO;\n        float dS = GetDist(p);\n        dO += dS;\n        if (dO > MAX_DIST || dS < SURF_DIST) break;\n    }\n    \n    return dO;\n}\n\nfloat GetLight(vec3 p) {\n    vec3 lightPos = vec3(2, 4, 0);\n    lightPos.x += sin(iTime);\n//    vec3 lightPos = vec3(0, 10, 6);\n//    lightPos.xz += vec2(sin(iTime), cos(iTime)) * 2.;\n    vec3 lightV = normalize(lightPos - p);\n    vec3 normal = GetNormal(p);\n    \n    float dif = clamp(dot(normal, lightV), 0., 1.);\n\n    float d = RayMarch(p+normal*SURF_DIST*2., lightV);\n    if (d < length(lightPos - p)) dif *= .1;\n    \n    return dif;\n   \n}\n\n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) /iResolution.y;\n\n    vec3 col = vec3(0);\n    \n    vec3 ro = vec3(0, 1, 0);\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1));\n    \n    float d = RayMarch(ro, rd);\n    vec3 p = ro + rd * d;\n    \n    float diffuseL = GetLight(p);\n    \n    col = vec3(diffuseL);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}