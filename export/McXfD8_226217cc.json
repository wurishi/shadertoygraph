{"ver":"0.1","info":{"id":"McXfD8","date":"1723666278","viewed":26,"name":"perlin study 243","username":"Elsio","description":"devolta aos estudos de \"smooth noise\" depois de telo visto na... \n\nversão do perlin extraído do shader do p_malin\nhttps://www.shadertoy.com/view/MfffWr","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin","square","diamond","brownian","vector","value"],"hasliked":0,"parentid":"ctfyD4","parentname":"Perlin Noise - specular "},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n\nfloat Hash(float p) {\n    vec2 p2 = fract(vec2(p) * vec2(4.438975, 3.972973));\n    p2 += dot(p2.yx, p2.xy + 19.19);\n    return fract(p2.x * p2.y);\n}\n\nfloat perlin(vec2 p) {\n    vec2 k = floor(p),\n         q = fract(p);\n    \n    q = q * q * (3. - 2. * q);\n    \n    float n = k.x + k.y * 57.,\n          a = Hash(n + 0.),\n          b = Hash(n + 1.),\n          c = Hash(n + 57.),\n          d = Hash(n + 58.);\n    \n    return \n        a + (b - a) * q.x + (c - a) * q.y + (a - b + d - c) * q.x * q.y;\n}\n\nfloat perlin2(vec2 p) {\n    vec2 k = floor(p),\n         q = fract(p);\n    \n    float n = k.x + k.y * 57.,\n          a = Hash(n + 0.),\n          b = Hash(n + 1.),\n          c = Hash(n + 57.),\n          d = Hash(n + 58.);\n    \n    //q = q * q * (3. - 2. * q);\n    q = 3. * q * q - 2. * q * q * q;\n    \n    //q = q * q * q * (q * (q * 6. - 15.) + 10.);\n    \n    \n    /*\n        return \n               a \n            + (b - a) * q.x \n            + (c - a) * q.y \n            + (a - b - c + d) * q.x * q.y\n            ;\n\n    */    \n    \n    /*\n    \n        return\n              a *       (1. - q.x)       * (1. - q.y) \n            + b *                    q.x * (1. - q.y) \n            + c * q.y * (1. - q.x) \n            + d * q.y              * q.x\n            ;\n    \n    */\n    \n    \n    /*\n        return \n              a * (1. - q.x - q.y + q.x * q.y)\n            + b * (     q.x       - q.x * q.y)\n            + c * (           q.y - q.x * q.y)\n            + d * (                 q.x * q.y)\n            ;\n    */\n    \n    /*\n    \n        return\n            dot(\n                vec4(a, b, c, d),\n                vec4(  \n                  1. - q.x -  q.y + q.x * q.y, \n                       q.x        - q.x * q.y,\n                              q.y - q.x * q.y,\n                                    q.x * q.y\n                )\n            )\n        ;\n    \n    */\n\n        return \n            dot(\n                vec4(a, b - a, c - a, a - b - c + d),\n                vec4(1, q.x, q.y, q.x * q.y)\n            )\n        ;\n\n}\n\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy;\n    u = 5. * (u + u - r) / r.y;\n    \n    u += 2. * cos(t + vec2(0, 11)) + t * 2.;\n    \n    float h1 = perlin(u);\n    float h2 = perlin2(u);\n    \n    \n    // não deveria haver diferença\n    if(abs(h1 - h2) < 1e-8)\n        o = vec4(abs(h1));\n    else\n        o = vec4(1, 0,0,0);\n    \n    \n    \n    \n    \n    //o = vec4(abs(h1));\n    //o = vec4(abs(h2));\n}","name":"Image","description":"","type":"image"}]}