{"ver":"0.1","info":{"id":"lcfGWN","date":"1703064795","viewed":17,"name":"ramper","username":"saeegonee","description":"Simple ramp shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient","ramp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float customSmoothStep(float e0, float e1, float x)\n{\n    float t = clamp((x - e0) / (e1 - e0), 0.0, 1.0);\n    return t * t * (3.0 - 2.0 * t);\n}\n\nfloat mask(float st, float mn, float cn, float mx)\n{\n    float f_grad = customSmoothStep(mn, cn, st) * step(st, cn);\n    float f_grad2 = customSmoothStep(mx, cn, st) * step(cn, st);\n    return f_grad + f_grad2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord.xy/iResolution.xy;\n\n    // Colors\n    vec3 v3_color0 = vec3(0.6, 0.2, 0.7);\n    vec3 v3_color1 = vec3(0.2, 0.9, 0.8);\n    vec3 v3_color2 = vec3(0.9, 0.3, 0.1);\n    vec3 v3_color3 = vec3(0.4, 0.9, 0.1);\n\n    // Borders\n    float f_border0 = 0.2;\n    float f_border1 = 0.6;\n\n    vec3 v3_color = v3_color0 * mask(st.x, 0.0, 0.0, f_border0) + v3_color1 * mask(st.x, 0.0, f_border0, f_border1) + v3_color2 * mask(st.x, f_border0, f_border1, 1.0) + v3_color3 * mask(st.x, f_border1, 1.0, 1.0);\n\n    fragColor = vec4(v3_color, 1.0);\n}","name":"Image","description":"","type":"image"}]}