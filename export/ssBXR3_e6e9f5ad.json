{"ver":"0.1","info":{"id":"ssBXR3","date":"1620667388","viewed":76,"name":"Britney Simple Chromakey","username":"SamyBencherif","description":"#freebritney","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["chromakey"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));    \n\n    // Draw backdrop\n    fragColor = vec4(col,1.0);\n\n    for (float i=0.; i<3.; i++)\n    {\n        // Use 2-color chroma key to find alpha\n        vec2 t_uv = vec2(2.4,1.)*uv + vec2(-.7*i,0.);\n        if (t_uv.x < 0. || t_uv.x > 1.) continue;\n        vec4 ipix = texture(iChannel0, t_uv);\n        vec4 key = texture(iChannel0, vec2(0.,1.));\n        vec4 key2 = texture(iChannel0, vec2(1.,1.));\n        float alpha = 1.*distance(ipix, key)+1.*distance(ipix, key2);\n        alpha = clamp(alpha,0.,1.);\n        \n        // Output to screen\n        fragColor = ipix*alpha + fragColor*(1.-alpha);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec4 someFunction( vec4 a, float b )\n{\n    return a+b;\n}","name":"Common","description":"","type":"common"}]}