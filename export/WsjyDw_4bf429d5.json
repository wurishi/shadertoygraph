{"ver":"0.1","info":{"id":"WsjyDw","date":"1586770606","viewed":100,"name":"simple outlined hexes","username":"manthrax","description":"draw an outlined hex with size, line thickness, blending,","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SQRT3 1.7320508\n\nconst vec2 s = vec2(1.0, SQRT3);\nconst vec2 ax0=vec2( .0  ,1.);\nconst vec2 ax1=vec2(-.866, .5);\nconst vec2 ax2=vec2( .866, .5);\n\nvec4 getHex(vec2 p){\n    //return xy = square 0-1 coords\n    vec4 hC = floor(vec4(p, p - vec2(.5, 1))/s.xyxy) + .5;\n    vec4 h = vec4(p - hC.xy*s, p - (hC.zw + .5)*s);\n    return dot(h.xy, h.xy)<dot(h.zw, h.zw) ? vec4(h.xy, hC.xy) : vec4(h.zw, hC.zw + 9.73);\n}\n\nfloat distToNearestHexEdge(vec2 hv){\n    vec3 adist = abs(vec3(dot(hv,ax0),dot(hv,ax1),dot(hv,ax2)));\n    return 1.-(max(max(adist.x,adist.y),adist.z)*2.);\n}\n\nvec4 hexOutline(vec2 uv,float hexSize,float lineSize,float lineBlend){\n\tvec4 hex = getHex(uv/hexSize);\n    //fragColor = vec4(abs(h.xy-.5), 0.,1.);\n    float dist = distToNearestHexEdge(hex.yx);\n    float linePower = smoothstep(lineSize,lineSize+lineBlend,dist);\n    //fragColor=vec4(mix(1.,0.,linePower));\n    hex.z = linePower;\n\treturn hex;\n}\n\nfloat hexsz(){\n    return (fract(iTime*.01)*0.5)+.1;\n}\n\nvec4 hexfn(in vec2 fragCoord){\n\tfloat hexSize = hexsz();\n    float lineSize = .02;\n    float lineBlend = .02;\n    vec2 uv = (fragCoord /iResolution.xx).yx;\n    vec4 hex = hexOutline(uv,hexSize,lineSize,lineBlend);\n    float linePower = hex.z;\n    return mix(texture(iChannel0,hex.xy),vec4(1.),1.-linePower);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfloat hexSize = hexsz();\n    float ksz = hexSize*.1;\n    fragColor = hexfn(fragCoord);\n    \n    /*fragColor = (   // \"antialising\"\n        (hexfn(fragCoord)\t\t\t\t *4.)+\n        (hexfn(fragCoord+vec2(-ksz,   0))*2.)+\n        (hexfn(fragCoord+vec2( ksz,   0))*2.)+\n        (hexfn(fragCoord+vec2(   0,-ksz))*2.)+\n        (hexfn(fragCoord+vec2(   0, ksz))*2.)+\n\n        hexfn(fragCoord+vec2(-ksz, -ksz))+\n        hexfn(fragCoord+vec2( ksz, -ksz))+\n        hexfn(fragCoord+vec2( ksz,  ksz))+\n        hexfn(fragCoord+vec2(-ksz,  ksz))\n\t) * (1./16.);*/\n}","name":"Image","description":"","type":"image"}]}