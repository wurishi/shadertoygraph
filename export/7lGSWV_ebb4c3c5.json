{"ver":"0.1","info":{"id":"7lGSWV","date":"1641340998","viewed":238,"name":"bouncy ball","username":"ArmandB","description":"a ball that bounces when you pull it away from the center","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["buffers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PointToLineSegment(vec2 a, vec2 b, vec2 p) {\n  float l2 = (b.x-a.x)*(b.x-a.x) + (b.y-a.y)*(b.y-a.y);\n  if (l2 == 0.0) return distance(p, a);\n  float t = max(0.0, min(1.0, dot(p - a, b - a) / l2));\n  vec2 projection = a + t * (b - a);\n  return distance(p, projection);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.2,0.2,0.2);\n    \n    vec2 uv = (fragCoord - iResolution.xy/2.0)/iResolution.y;\n    vec2 m = (iMouse.xy - iResolution.xy/2.0)/iResolution.y;\n    float pxunit = 1.0/iResolution.y;\n\n    vec4 pos_and_vel = texelFetch(iChannel0, ivec2(0, 0), 0);\n    \n    if (iMouse.z >= 0.0) {\n        col += vec3(1,0,0)*clamp((0.01-length(uv)+length(m)),0.0,1.0);\n    }\n    col = mix(col, vec3(1), 1.0-smoothstep(0.2,0.2+pxunit, length(uv-pos_and_vel.xy)));\n    col = mix(col, vec3(1,0.5,0), 1.0-smoothstep(0.01,0.01 + pxunit, PointToLineSegment(pos_and_vel.xy, pos_and_vel.xy + pos_and_vel.zw, uv)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col = vec4(0);\n    if (floor(fragCoord) == vec2(0,0)){\n        vec4 pos_and_vel = texelFetch(iChannel0, ivec2(0, 0), 0);\n        if (mod(float(iFrame), 60.0/fps) < 0.01){\n            if (pos_and_vel == vec4(0)){\n                pos_and_vel = vec4(0.5, 0.5, 0.1, 0.1);\n            }\n            if (sign(iMouse.z) == 1.0) {\n                vec2 m = iMouse.xy/iResolution.xy - 0.5;\n                m.x *= iResolution.x/iResolution.y;\n                pos_and_vel.xy = m;\n                pos_and_vel.zw = vec2(0);\n            } else {\n                vec2 pos = pos_and_vel.xy;\n                vec2 vel = pos_and_vel.zw;\n                vel = (vel - pos)/2.0;\n                pos += vel;\n\n                pos_and_vel = vec4(pos,vel);\n            }\n        }\n        col = pos_and_vel;\n    }\n    fragColor = vec4(col);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float fps = 60.0;\n","name":"Common","description":"","type":"common"}]}