{"ver":"0.1","info":{"id":"MXfBWn","date":"1728249718","viewed":25,"name":"Complex plane visualisations","username":"einmeterhecht","description":"simple visualisation of 2D f(x,y) -> z functions\nused here to find subsets of the complex plane","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["einmeterhecht"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 complex_division(vec2 v1, vec2 v2) {\n  // Complex numbers with real part in x and imag part in y\n  // v1=vec2(a, b)= a + bi; v2=vec2(c, s)= c + di;\n  return vec2(dot(v1,v2)/dot(v2,v2), (v2.x*v1.y-v1.x*v2.y)/dot(v2,v2));\n}\n\nbool eq(float first, float second) {\n  return abs(first - second) < 0.05;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xx;\n    \n    // Offset and scale of coord grid\n    vec2 co = (uv-vec2(.6, .3))*20.;\n    float x = co.x;\n    float y = co.y;\n    \n    // pixel color - default to black\n    vec3 col = vec3(0., 0., 0.);\n    \n    ////////////    ONLY MODIFY THIS    //////////////\n    \n    if (eq(x+1., x - y) && length(co)<=2.) col = vec3(.8, 0., 0.);\n    \n    //////////////////////////////////////////////////\n\n    if (abs(x)<.04 || abs(y)<.04) col=vec3(0.,0.,1.); // x- and y- axis\n    if (mod(x,1.)<.02 || mod(y,1.)<.02) col=vec3(1.,1.,1.);  // Coord grid\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}