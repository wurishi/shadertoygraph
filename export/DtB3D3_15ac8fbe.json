{"ver":"0.1","info":{"id":"DtB3D3","date":"1673984723","viewed":50,"name":"Trenched Sky","username":"VEShaderStuff","description":"Taking place above the tiniest stars ever.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colors","sky"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//PLEASE CREDIT ME IF YOU FORK THIS SHADER!!\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec2 p = uv * vec2(1.0, -1.0);\n    vec2 q = vec2(0.0, 0.0);\n    float r = dot(p, p);\n    float f = 0.0;\n    for(int i = 0; i < 10; i++)\n    {\n        q = vec2(p.x + sin(p.y + f), p.y + cos(p.x + f));\n        f += 0.2 + 0.05 * sin(iTime + r + f);\n    }\n    vec3 col = vec3(r, dot(q, q), f);\n    fragColor = vec4(col * 0.5 + 0.5, 1.0);\n}","name":"Image","description":"","type":"image"}]}