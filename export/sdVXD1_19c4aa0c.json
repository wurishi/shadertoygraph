{"ver":"0.1","info":{"id":"sdVXD1","date":"1634598843","viewed":123,"name":"Sine-based glitch effect","username":"aggregate1166877","description":"Simple glitch effect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Sin function taken from:\n// https://www.shadertoy.com/view/MsX3DN\n//\n// Rand function taken from:\n// https://www.shadertoy.com/view/Xt23Ry\n\nfloat rand(float co) { return fract(sin(co*(91.3458)) * 47453.5453); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Get the UV Coordinate of your texture.\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\t// Modify that X coordinate by the sin of y to oscillate back and forth.\n\tuv.x += sin(uv.y*10.0+iTime) / (rand(iTime)*500.0);\n\t\n\t// Get the pixel color at the index.\n\tvec4 color = texture(iChannel0, uv);\n\t\n\tfragColor = color;\n}\n","name":"Image","description":"","type":"image"}]}