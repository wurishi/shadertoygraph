{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"//Anime Fire Effect\n//Base shape + Subtraction based modification.\n\n//based on https://www.youtube.com/watch?v=3_TB6R_FeDE\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat opSmoothSubtraction( float d1, float d2, float k )\n{\n    float h = clamp( 0.5 - 0.5*(d2+d1)/k, 0.0, 1.0 );\n    return mix( d2, -d1, h ) + k*h*(1.0-h);\n}\n\nvec2 hash21(float p)\n{\n    vec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nfloat erode(float d, float size, float nx, vec2 p){\n  for(float i=1.; i<5.; i++){\n    vec2 s = vec2(size, size);\n    vec2 q = p+hash21(i)*size*10.;\n    q.x -= iTime*0.15;\n    q = q - s*round(q/s);\n\n    float d2 = sdCircle(q, size*0.2*sqrt(nx));//\n    d = opSmoothSubtraction(d2, d, 0.02);\n  }\n  return d;\n}\n\nfloat waveFunc(float x){\n  return sin(x*5.-iTime)*0.1 + sin(x*15.-iTime)*0.01;\n}\n\nfloat map(vec2 p)\n{\n  \n  p.y += waveFunc(p.x);\n  p.y*= 3.;\n  p.x += sin(p.y)*2.;\n  float nx = max(p.x*0.5 + 0.5, 0.);\n  float d = sdBox(p, vec2(2., (1.-nx)*0.3-0.05));\n  d = erode(d, 2., nx, p);\n  return d;\n}\n\nfloat map2(vec2 p)\n{\n  \n  p.y += waveFunc(p.x+0.1);\n  p.y*= 3.;\n  p.x += sin(p.y)*2.;\n  float nx = max(p.x*0.5 + 0.5, 0.);\n\n  //p.x += sin(p.y*5.)*1.;\n  float d = sdBox(p, vec2(2., (1.-nx)*0.5));\n  d = erode(d, 2., nx, p);\n  d = erode(d, 1., nx, p);\n  d = erode(d, 0.5, nx, p);\n  return d;\n}\n\nfloat map3(vec2 p)\n{\n  \n  p.y += waveFunc(p.x+0.3);\n  p.y*= 1.5;\n  p.x += sin(p.y)*2.;\n  float nx = max(p.x*0.5 + 0.5, 0.);\n\n  //p.x += sin(p.y*5.)*1.;\n  float d = sdBox(p, vec2(2., (1.-nx)*0.5));\n  d = erode(d, 2., nx+1., p);\n  d = erode(d, 1., nx+1., p);\n  d = erode(d, 0.5, nx+1., p);\n  return d;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n  vec2 R = iResolution.xy;\n  vec2 uv = (fragCoord.xy / iResolution.xy)*2. - 1.;\n\n  vec3 col = vec3(0.0);\n  vec3 coreC = vec3(0.992,0.878,0.278);\n  vec3 flameC = vec3(0.976,0.451,0.086);\n  vec3 smokeC = vec3(0.98,0.98,0.98);\n  float d = map(uv);\n  //if(d < 0.)col = coreC;\n  //with smoothstep \n  col = mix(col, coreC, smoothstep(-0.02, 0.0, -d));\n  d = map2(uv);\n  col = mix(col, flameC, smoothstep(-0.02, 0.0, -d));\n  d = map3(uv);\n  col = mix(col, smokeC, smoothstep(-0.02, 0.0, -d));\n  fragColor = vec4(col, 1.0);\n\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4cVBzG","date":"1734139418","viewed":142,"name":"Anime Fire Effect","username":"Nekodigi","description":"Subtractive method to add detail to a primary shape.","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["game","fire","effect","cell","stylized","anime"],"hasliked":0,"parentid":"","parentname":""}}