{"ver":"0.1","info":{"id":"Dt2Xzy","date":"1676286394","viewed":114,"name":"Dots_Indicator_Demo","username":"Zhuangdong","description":"这玩意好看嘛？","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 bufferA = texture(iChannel1, uv);\n    vec4 bufferB = texture(iChannel2, uv);\n    vec4 bufferC = texture(iChannel3, uv);\n    \n    // 2x2 Cell\n    vec2  centerM     = floor((fragCoord - DOT_R_M)/DOT_D_M) * DOT_D_M + DOT_D_M;\n    vec2  centerUVM   = centerM/iResolution.xy;\n    float brightnessM = texture(iChannel3, centerUVM).r;\n    // Mask\n    vec2 uvEN = centerUVM + DOT_UV_STEP_S * vec2( 1.0,  1.0);\n    vec2 uvWN = centerUVM + DOT_UV_STEP_S * vec2(-1.0,  1.0);\n    vec2 uvES = centerUVM + DOT_UV_STEP_S * vec2( 1.0, -1.0);\n    vec2 uvWS = centerUVM + DOT_UV_STEP_S * vec2(-1.0, -1.0);\n    float maskM =texture(iChannel3, uvEN).g > DOT_THRESHOLD && texture(iChannel3, uvWN).g > DOT_THRESHOLD &&\n                 texture(iChannel3, uvES).g > DOT_THRESHOLD && texture(iChannel3, uvWS).g > DOT_THRESHOLD ?\n                 1.0 : 0.0;\n    // brightness\n    float brightness = maskM > 0.5 ? brightnessM : bufferC.a;\n    // Dots\n    float dotsM  = max(0.0, 1.0 - distance(centerM, fragCoord) / DOT_R_M);\n    dotsM  = maskM > 0.5 ? dotsM : 0.0;\n    dotsM += bufferC.b;\n    brightness *= dotsM > 0.0 ? 1.0 : 0.0;\n    float dotsS = bufferA.b * max(0.0, bufferC.g - maskM);\n    brightness += bufferA.a * (dotsS > 0.0 ? 1.0 : 0.0);\n    float dotsL = bufferB.b;\n    brightness += bufferB.a * (dotsL > 0.0 ? 1.0 : 0.0);\n    float dots = dotsS + dotsM + dotsL;\n\n    // final\n    vec3 final = DOT_COLOR * brightness * smoothstep(dots, 0.0, 0.1) * DOT_INTENCITY + bufferC.r;\n    // return\n    fragColor = vec4(final, 1.0);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // src\n    vec2  uv = fragCoord.xy / iResolution.xy;\n    float src = dot(texture(iChannel0, uv).rgb, vec3(0.2125, 0.7154, 0.0721));\n    // 1x1 Cell\n    vec2  centerS     = floor(fragCoord/DOT_D_S) * DOT_D_S + DOT_R_S;\n    vec2  centerUVS   = centerS/iResolution.xy;\n    float brightnessS = dot(texture(iChannel0, centerUVS).rgb, vec3(0.2125, 0.7154, 0.0721));\n    // Mask\n    bool  maskS       = brightnessS < DOT_THRESHOLD ? false : true;\n    // Dots\n    float dotsS  = max(0.0, 1.0 - distance(centerS, fragCoord) / DOT_R_S);\n    dotsS = maskS ? dotsS : 0.0;\n    // return\n    fragColor = vec4(src, maskS, dotsS, brightnessS);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define DOT_R_S       6.0\n#define DOT_D_S       (DOT_R_S*2.0)\n#define DOT_UV_STEP_S (DOT_R_S/vec2(iResolution.xy))\n#define DOT_R_M       (DOT_R_S*2.0)\n#define DOT_D_M       (DOT_R_M*2.0)\n#define DOT_UV_STEP_M (DOT_R_M/vec2(iResolution.xy))\n#define DOT_R_L       (DOT_R_S*3.0)\n#define DOT_D_L       (DOT_R_L*2.0)\n#define DOT_UV_STEP_L (DOT_R_L/vec2(iResolution.xy))\n#define DOT_THRESHOLD  0.7\n#define DOT_INTENCITY  0.5\n#define DOT_COLOR      vec3(1.0, 0.8, 0.5)\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // BufferA\n    vec2 uv      = fragCoord.xy / iResolution.xy;\n    vec4 bufferA = texture(iChannel1, uv);\n    // 3x3 Cell\n    vec2  centerL     = floor(fragCoord/DOT_D_L) * DOT_D_L + DOT_R_L;\n    vec2  centerUVL   = centerL/iResolution.xy;\n    float brightnessL = texture(iChannel1, centerUVL).r;\n    // Mask\n    vec2 uvN  = centerUVL + DOT_UV_STEP_S * vec2( 0.0,  2.0);\n    vec2 uvS  = centerUVL + DOT_UV_STEP_S * vec2( 0.0, -2.0);\n    vec2 uvW  = centerUVL + DOT_UV_STEP_S * vec2(-2.0,  0.0);\n    vec2 uvE  = centerUVL + DOT_UV_STEP_S * vec2( 2.0,  0.0);\n    vec2 uvEN = centerUVL + DOT_UV_STEP_S * vec2( 2.0,  2.0);\n    vec2 uvWN = centerUVL + DOT_UV_STEP_S * vec2(-2.0,  2.0);\n    vec2 uvES = centerUVL + DOT_UV_STEP_S * vec2( 2.0, -2.0);\n    vec2 uvWS = centerUVL + DOT_UV_STEP_S * vec2(-2.0, -2.0);\n    float maskL =texture(iChannel1, uvN ).g > DOT_THRESHOLD && texture(iChannel1, uvS ).g > DOT_THRESHOLD &&\n                 texture(iChannel1, uvW ).g > DOT_THRESHOLD && texture(iChannel1, uvE ).g > DOT_THRESHOLD &&\n                 texture(iChannel1, uvEN).g > DOT_THRESHOLD && texture(iChannel1, uvWN).g > DOT_THRESHOLD &&\n                 texture(iChannel1, uvES).g > DOT_THRESHOLD && texture(iChannel1, uvWS).g > DOT_THRESHOLD &&\n                 texture(iChannel1, centerUVL).g > DOT_THRESHOLD ?\n                 1.0 : 0.0;\n    // Dots\n    float dotsL  = max(0.0, 1.0 - distance(centerL, fragCoord) / DOT_R_L);\n    dotsL = maskL > 0.5  ? dotsL : 0.0;\n    // return\n    maskL = bufferA.g - maskL;\n    fragColor = vec4(bufferA.r, maskL, dotsL, brightnessL);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // BufferB\n    vec2 uv      = fragCoord.xy / iResolution.xy;\n    vec4 bufferB = texture(iChannel2, uv);\n    // 2x2 Cell\n    vec2  centerM     = floor(fragCoord/DOT_D_M) * DOT_D_M + DOT_R_M;\n    vec2  centerUVM   = centerM/iResolution.xy;\n    float brightnessM = texture(iChannel2, centerUVM).r;\n    // Mask\n    vec2 uvEN = centerUVM + DOT_UV_STEP_S * vec2( 1.0,  1.0);\n    vec2 uvWN = centerUVM + DOT_UV_STEP_S * vec2(-1.0,  1.0);\n    vec2 uvES = centerUVM + DOT_UV_STEP_S * vec2( 1.0, -1.0);\n    vec2 uvWS = centerUVM + DOT_UV_STEP_S * vec2(-1.0, -1.0);\n    float maskM =texture(iChannel2, uvEN).g > DOT_THRESHOLD && texture(iChannel2, uvWN).g > DOT_THRESHOLD &&\n                 texture(iChannel2, uvES).g > DOT_THRESHOLD && texture(iChannel2, uvWS).g > DOT_THRESHOLD ?\n                 1.0 : 0.0;\n    // Dots\n    float dotsM  = max(0.0, 1.0 - distance(centerM, fragCoord) / DOT_R_M);\n    dotsM = maskM > 0.5 ? dotsM : 0.0;\n    // return\n    maskM = bufferB.g - maskM;\n    fragColor = vec4(bufferB.r, maskM, dotsM, brightnessM);\n}","name":"Buffer C","description":"","type":"buffer"}]}