{"ver":"0.1","info":{"id":"dlyBDD","date":"1702067137","viewed":26,"name":"Mandelbrot Attempt 1","username":"roey_shap","description":"An attempt to interpret the math here\nUse mouse to pan around, recommend fullscreen!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MANDELBROT_NUM_ITERATIONS_BASE 150\n\nfloat map(float min1, float max1, float value, float min2, float max2)\n{\n    float d2 = max2 - min2;\n    float d1 = max1 - min1;\n    float sizeRatio = d2 / d1;\n\n    return (value * sizeRatio) - (min1 * sizeRatio) + min2;\n}\n\nfloat mandelbrot(vec2 z, vec2 C, int numIterations)\n{\n    vec2 startingZ = z;\n    float prevXsq = 0.0;\n    float prevYsq = 0.0;\n    int i = 0;\n    for (i = 0; i < numIterations && (prevXsq + prevYsq <= 4.0); i++)\n    {\n        prevXsq = z.x * z.x;\n        prevYsq = z.y * z.y;\n        z = vec2(prevXsq - prevYsq, 2.0 * z.x * z.y) + C;\n    }\n    \n    vec2 delta = z - startingZ;\n    return ((5.0 * float(numIterations) / float(MANDELBROT_NUM_ITERATIONS_BASE)) / length(delta)) * float(i+1) / float(numIterations) ;         // change to 0.01 / length(delta) for stars\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float largerAxisSize = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / largerAxisSize;\n    vec2 mouseUV = (iMouse.xy - 0.5 * iResolution.xy) / largerAxisSize;\n    uv.x += mouseUV.x * iTime / 1.5f; //1.75 - (2.0 / iTime);\n    uv.y += mouseUV.y * iTime / 1.5f; //0.25;\n    float mouseZoomFactor = 1.0; //5.0 * float(iMouse.z <= iResolution.x);\n    uv *= mouseZoomFactor * 2.0 / (iTime);\n\n    float minIterationScale = 1.0;\n    float maxIterationScale = 30.0;\n    int iterations = MANDELBROT_NUM_ITERATIONS_BASE * int(clamp(map(0.0, 100.0, iTime, minIterationScale, maxIterationScale), minIterationScale, maxIterationScale));\n    float m = mandelbrot(vec2(0), uv, iterations);\n    vec3 col = vec3(m); //vec3(m / 150.0, 1.0 / (m+1.0), 1.0);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}