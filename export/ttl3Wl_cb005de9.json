{"ver":"0.1","info":{"id":"ttl3Wl","date":"1558112464","viewed":73,"name":"Ray Marching example","username":"icecreamsandwich","description":"from this tutorial: https://www.youtube.com/watch?v=yxNnRSefK94","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 point) {\n\treturn length(point) - 1.0;\n}\n\nfloat trace(vec3 origin, vec3 ray) {\n\tfloat t = 0.0;\n    \n    // steps for ray to march\n    for (int i = 0; i < 32; i++) {\n    \tvec3 p = origin + ray * t;\n        float dist = map(p);\n        t += dist * 0.5;\n    }\n    \n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ray = normalize(vec3(uv, 1.0));\n    vec3 origin = vec3 (0.0, 0.0, sin(iTime*3.)-3.);\n    \n    float t = trace(origin, ray);\n    \n\tfloat fog = 1.0 / (1.0 + t * t * .01); \n    vec3 fogColor = vec3(fog);\n\n    // Output to screen\n    fragColor = vec4(fogColor,1.0);\n}","name":"Image","description":"","type":"image"}]}