{"ver":"0.1","info":{"id":"X3SSWt","date":"1711184862","viewed":65,"name":"sdf_box_music","username":"yufengjie","description":"test","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["soundtest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\n\nfloat PI = 3.1415926;\nfloat pix;\nfloat fftsize = 512.;\n\nfloat rand(float x) {\n  return fract(sin(x));\n}\n\nfloat noise(float x) {\n  float i = floor(x);\n  float f = fract(x);\n  return mix(rand(i), rand(i+1.), smoothstep(0.,1.,f));\n}\n\nfloat sdBox(in vec2 p, in vec2 b) {\n  vec2 d = abs(p) - b;\n  return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nvec3 palette(float t) {\n  vec3 a = vec3(1.000,0.500,0.500);\n  vec3 b = vec3(0.500,0.500,0.500);\n  vec3 c = vec3(0.750,1.000,0.667);\n  vec3 d = vec3(0.800,1.000,0.333);\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\n\nmat2 rotate(float a) {\n  float s = sin(a);\n  float c = cos(a);\n  return mat2(c,-s,s,c);\n}\n\nfloat getAmp(float frequency) {\n    return texture(iChannel0, vec2(frequency / fftsize, 1.)).x;\n}\nfloat getWave(float i){\n    return texture(iChannel0, vec2(i / fftsize, 0.)).x;\n}\n\n// size xy对应sdBox的b参数是宽高\nfloat getRect(vec2 st, vec2 size,float borderWidth) {\n  float box = sdBox(st, size);\n  float border1 = smoothstep(0., 4.*pix, box);\n  float border2 = smoothstep(borderWidth*pix, (borderWidth + 4.)*pix, box);\n  return border1 - border2;\n}\nfloat getShape(vec2 st, float size,float borderWidth) {\n  float box = sdCircle(st, size);\n  float border1 = smoothstep(0., 4.*pix, box);\n  float border2 = smoothstep(borderWidth*pix, (borderWidth + 4.)*pix, box);\n  return border1 - border2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 st = (fragCoord.xy * 2. - iResolution.xy) / min(iResolution.x, iResolution.y);\n  pix = 1./iResolution.y;\n  vec3 fin_c = vec3(0.);\n  \n  \n  float total = 100.;\n  for(float i=0.;i<total;i+=1.) {\n      //float musicVal = getAmp(floor(i/total*fftsize));\n      float musicVal = getWave(floor(i/total*fftsize));\n\n      float borderWidth = musicVal * 10.;\n      //vec2 size = vec2(musicVal)+0.04 * i;\n      float size = musicVal;\n\n      vec3 color = palette(musicVal);\n      \n      //float s = getRect(st * rotate(angle), size, borderWidth);\n      float s = getShape(st, size, borderWidth);\n\n      fin_c += s * color;\n\n  }\n\n  fragColor = vec4(fin_c, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}