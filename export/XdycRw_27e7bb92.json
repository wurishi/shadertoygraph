{"ver":"0.1","info":{"id":"XdycRw","date":"1522224631","viewed":139,"name":"Level curves","username":"arkan","description":"Fun with level curves","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["distancefield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float level_curves_greyscale(float f, float scale)\n{\n    float opacity = cos(f * 3.141592 * scale);\n    opacity *= opacity;\n    opacity  = 1.f - opacity;\n    opacity *= opacity;\n    opacity *= opacity;\n    opacity  = 1.f - opacity;\n    return opacity;\n}\n\n//------------------------------------------------------------------------\n\nvec4 level_curves_color(float f, float iso_level, float scale)\n{\n\tfloat opacity = level_curves_greyscale(f, scale);\n\tvec4 color;\n\n\t     if(f >  iso_level) color = vec4(0.9f, 0.2f, 0.1f, 1.0f); // Inside red\n    else if(f <= iso_level) color = vec4(0.1f, 0.2f, 0.9f, 1.0f); // Outside blue\n\n\tif(false)\n    {\n        /*\n    \t     if(f >= 1.0f    ) color = vec4(1.0f, 0.75f, 0.5f, 1.0f);\n        else if(f <  0.0f    ) color = vec4(0.9f, 0.90f, 0.2f, 1.0f);\n\t\telse if( isnan(f)    ) color = vec4(1.0f, 1.0f, 0.0f, 1.0f); // yellow\n*/\n        // Color strip that belong to iso-surface\n        if( abs(f-iso_level) < (1.f/scale) * 0.5f )\n            color = vec4(0.2f, 0.9f, 0.1f, 1.0f); // greenish\n            //color = Vec3(0.5f); // grey\n\t}\n\n    float eps = 1e-4f;\n    if( f < (1.f + eps) && f > (1.f - eps)) \n        return vec4(0.0,0.0,0.0,1.0); // black\n    if( f < (eps*10.0) && f > 0.0 ) \n        return vec4(0.0,0.0,0.0,1.0); // black\n\n    color = vec4(1.0, 1.0, 1.0, 1.0) * opacity + color * (1.f - opacity);\n    color.a = 1.f - opacity;\n    return color;\n}\n\n//------------------------------------------------------------------------\n\nfloat sphere(vec3 p){    \n    vec3 c = vec3(iResolution.x/2.0, iResolution.y/2.0, 0);\n    return length( c - p ) - 100.0;    \n}\n\n\n//------------------------------------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord; // /iResolution.xy\n\n    // Output to screen\n    fragColor = level_curves_color(sphere(vec3(uv.xy, 0.0)), 0.0/*iso*/, 0.15/*scale*/ );\n}","name":"Image","description":"","type":"image"}]}