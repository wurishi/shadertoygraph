{"ver":"0.1","info":{"id":"MdKczD","date":"1521328008","viewed":171,"name":"Voronoi Rings","username":"metabog","description":"Mouse controlled.\n\nI can't really explain what's going on here, but it sure looks cool. I tried implementing my first ever voronoi shader by generating some random points and getting the nearest one for each pixel, and then I added some trig and... ","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["trigonometry","voronoin","knn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//wang from https://www.shadertoy.com/view/ldjczd\nfloat wang(uint u)\n{\n    uint seed = (u*1664525u);\n    \n    seed  = (seed ^ 61u) ^(seed >> 16u);\n    seed *= 9u;\n    seed  = seed ^(seed >> 4u);\n    seed *= uint(0x27d4eb2d);\n    seed  = seed ^(seed >> 15u);\n    \n    float value = float(seed) / (4294967296.0);\n    return value;\n}\n\nvec2 pointgen(uint i)\n{\n    return vec2(wang(i), wang(i+10000u));\n}\n\n#define MAXPOINTS 512u\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.y*=(iResolution.y/iResolution.x);\n    \n    uint minknn = MAXPOINTS;\n    float minval = 100000.0;\n        \n    float parameter1 = iMouse.x/iResolution.x;\n    float parameter2 = iMouse.y/iResolution.y + 1.0;\n    \n    uint escape = 128u;\n    \n    if(parameter1>0.0)\n        escape = uint(parameter1*parameter1*512.0f);\n    \n    for(uint i = 0u; i<MAXPOINTS; i++)\n    {\n        vec2 pos = pointgen(i);\n        pos = cos(pos*(iTime*0.05+16.0));\n        float len = cos(length(pos-uv)*parameter2*3.0 + parameter1*2.0); \n        if(len<minval)\n        {\n            minval = len;\n            minknn = i;\n        }\n        \n        if(i>escape)\n            break;\n    }\n\n    // Time varying pixel color\n    vec3 col = vec3(pointgen(minknn),1.0);\n\tcol = clamp(col+vec3(0.1),0.0,1.0);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}