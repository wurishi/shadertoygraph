{"ver":"0.1","info":{"id":"3sdXRS","date":"1572273965","viewed":95,"name":"Raymarch Test 001","username":"mawasi","description":"Raymarching test shader.\n\nreference\nhttps://www.youtube.com/watch?v=yxNnRSefK94","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat map(vec3 p)\n{\n    vec3 q = fract(p) * 2.0f - 1.0f;\n\n    return length(q) - 0.25f;\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0f;\n    for(int i = 0; i < 32; i++){\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5f;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // calc uv\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // uvを-1から1の範囲の値にする\n    uv = uv * 2.0f - 1.0f;\n\n    // aspect ratioを考慮\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 r = normalize(vec3(uv, 1.0f));\n\n    float the = iTime * 0.25f;\n    r.xy *= mat2(cos(the), -sin(the), sin(the), cos(the));\n\n    vec3 o = vec3(0.0f, iTime, iTime);\n\n    float t = trace(o, r);\n\n    float fog = 1.0f / (1.0f + t * t * 0.1f);\n\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 fc = vec3(col * fog);\n\n    fragColor = vec4(fc, 1.0f);\n}","name":"Image","description":"","type":"image"}]}