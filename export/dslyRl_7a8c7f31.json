{"ver":"0.1","info":{"id":"dslyRl","date":"1687115969","viewed":76,"name":"Infiniclock","username":"xingyzt","description":"Time indicator for a stellar evolution project, which needs to show the passage of time at various scales, from thousands to billions of years per second.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["clock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// (C) Xing Liu 2023, released to the public domain under CC0\n// A component of https://x-ing.space/starherd\n\nconst float TAU = 6.28318530718;\nconst int HANDS = 12;\nconst float RATIO = 3.0; // 60 for realism; 2 for nice looks\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 1.1*(2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float theta = atan(uv.x, -uv.y)/TAU;\n    float r = length(uv);\n    \n    float _t = iTime;\n    float a = 1e3;\n    float t = a*_t - a*sin(_t);\n    float dt = a - a*cos(_t);\n    \n    float border = abs(r-1.0);\n    vec3 col = 0.3*smoothstep(0.10, 0.0, border)*(\n        smoothstep(0.10, 0.0, abs(mod(theta*10.+0.5, 1.) - 0.5))\n        +smoothstep(0.10, 0.0, abs(mod(theta*100.+0.5, 1.) - 0.5))\n    )*vec3(1.0,0.1,0.4);\n    \n    for(int i = 0; i < HANDS; i++) {\n        float sharp = 0.8 * pow(2.0, -log2(0.01+dt));\n        float j = float(i)/float(HANDS);\n        float k = 1.0 - j;\n        \n        float phi = fract(theta + t - j*0.1) - 0.5;\n        bool leading = phi < 0.0;\n        \n        phi = abs(phi);\n        //phi *= smoothstep(0.5, 0.0, phi);\n        phi *= leading ? 8.0 : 1.0;\n        float width = j * 3e-2 + 1e-3;\n\n        float x = max(abs(phi)*r - width*(1.0-r/k), 0.0);\n        x *= sharp*100./(leading ? 1.0 : r);\n        \n        float f = exp(-x*x/2.0)*sharp*(1.0-pow(r/k,4.0));\n        f += 0.15 * (0.2 + r/k);\n        f *= smoothstep(k, k-3.0/iResolution.y, r);\n        f *= 12.0/float(HANDS);\n        f = clamp(f, 0.0, 1.0);\n        col += f*normalize(vec3(j, 0.3, 1.0-j));\n        \n        dt /= RATIO;\n        t /= RATIO;\n    }\n    if(length(col) > 1.0) col = mix(normalize(col), col, 0.5);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}