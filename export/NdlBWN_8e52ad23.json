{"ver":"0.1","info":{"id":"NdlBWN","date":"1644879838","viewed":88,"name":"[BDN] Polar Stream","username":"mAmaro","description":"Changed Ikeda Data Stream shader by @patriciogv to use polar coordinates some other minor tweeks","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grid","random","polar","coordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author @patriciogv - 2015\n// Title: Ikeda Data Stream\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n/*\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n*/\nfloat random (in float x) {\n    return fract(sin(x)*1e4);\n}\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat pattern(vec2 st, vec2 v, float t) {\n    vec2 p = floor(st+v);\n    return step(t, random(100.+p*.000001)+random(p.x)*0.5 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u_resolution = iResolution.xy;\n    vec2 u_mouse = iMouse.xy;\n    float u_time = iTime;\n    \n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    vec2 n_mouse = u_mouse.xy / u_resolution.xy;\n    \n    \n    \n    st.x *= u_resolution.x/u_resolution.y; //apply aspect ration\n\tst -= 0.5; // center uv coords (0,0) at monitor center\n    \n    vec2 grid = vec2(50.0,50.);\n    st *= grid; //commpress uv space by 50.0\n   \n    //convert uv space to polar coordinates\n\tvec2 uv = vec2(atan(st.x, st.y), distance(st, vec2(0.5)));\n    st = uv; // overwrite caretsian coord space with polar\n    vec2 ipos = floor(uv);  // integer\n    vec2 fpos = fract(uv);  // fraction\n\t\n    vec2 vel = vec2(u_time*n_mouse.y*max(grid.y,grid.x)); // time\n    vel *= vec2(-1.,0.3) * random(100.0+ipos.y); // direction\n\n    // Assign a random value base on the integer coord\n    vec2 offset = vec2(0.01,0.6);\n\n    vec3 color = vec3(0.);\n    color.r = pattern(st+offset,vel,0.5+u_mouse.x/u_resolution.x);\n    color.g = pattern(st-offset,vel,0.5+u_mouse.x/u_resolution.x);\n    color.b = pattern(st-offset,vel,0.5+u_mouse.x/u_resolution.x);\n\n    // Margins\n    color *= step(0.2,fpos.y);\n\n    fragColor = vec4(1.0-color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}