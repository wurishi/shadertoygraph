{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":3,"type":"texture","id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define MAX_STEPS 250\n#define R 0.5\n\nfloat max_distance = 60.0;\nfloat epsilon = 0.0125;\nfloat bump_factor = 0.12;\n\nfloat noise(vec2 p, float amp)\n{\t\n\treturn amp*fract(p.x*p.x*p.x*p.y*p.y*(p.x*p.y*20.0 +p.x*3.0) + 4.5*p.y);\n}\n\n// polynomial smooth min (k = 0.1);\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat smine( float a, float b, float k )\n{\n    float res = exp( -k*a ) + exp( -k*b );\n    return -log( res )/k;\n}\n\nfloat sphere(vec3 p, vec3 o, float r)\n{\n\treturn sqrt(dot(p,p) + dot(o,o) - 2.*dot(p,o)) - r;\n}\n\nfloat ellipsoid(vec3 p, vec3 o, float a, float b, float r)\n{\n\tp.x /= a;\n\tp.y /= b;\n\tp.z /= a;\n\treturn sphere(p, o, r);\n}\n\nfloat toothbody(vec3 p)\n{\n\tfloat top = max(-p.y-0.5, ellipsoid(p, vec3(0.0), 1.0, 1.5, 0.5));\n\tfloat bottom = max(p.y-0.4, top);\n\treturn bottom;\n}\n\nfloat cusp(vec3 p, vec3 o, float r)\n{\n\treturn ellipsoid(p, o, 1.0,3., r);\n}\n\nfloat molar(vec3 point)\n{\n\tfloat cxo = .24;\n\tfloat cyo = .06;\n\tfloat czo = .24;\n\tfloat cr = .21;\n\t\n\tfloat b = 0.0;\n\n\tfloat d1 = toothbody(point);\n\t\n\tfloat blend = .25;\n\t\n\tfloat d2 = smin(d1, cusp(point, vec3(-cxo, cyo, -czo), cr), blend);\n\td2 = smin(d2, cusp(point, vec3(-cxo, cyo, czo), cr), blend);\n\td2 = smin(d2, cusp(point, vec3(cxo, cyo, czo), cr), blend);\n\td2 = smin(d2, cusp(point, vec3(cxo, cyo, -czo), cr), blend);\n//\tfloat d2 = 0.1*sin(20.0*point.x)*sin(20.0*point.y)*sin(20.0*point.z)*cos(iTime);\n\t\n\treturn d2 - texture(iChannel0, point.xy).g*b;\n\n\treturn d2;\n\t\n}\n\nfloat anterior(vec3 p)\n{\n//\tp.z *= 0.25;\n\tfloat drop = max(length(p.xz)-0.5*sin(p.y), -p.y+.4);\n\tp.z -= .7;\n\tp.y -= 1.5;\n\tp.y *= .55;\n\tp.x *= .2;\n\tfloat sphere = length(p)-.5;\n\treturn max(-sphere,drop);\n\treturn 0.;\n}\n\nfloat fractelev(vec3 p, int niter)\n{\n\tfloat x_scale =480.;\n\tfloat y_scale = 1.0;\n\t\n   // vec3 terr_pos = fract(p);\n\t//terr_pos *= dot(terr_pos,terr_pos);\t\n\t\t\n\tfloat amp = 4.5;\n\t\n\tfloat elev = 0.;\n    for (int i = 1; i < 8; i++)\t\n\t{\n\t\tvec3 terr_pos = 0.5*(1.+p)/x_scale;\n\t\tfloat j = float(i);\n\t\tfloat el1 = texture(iChannel0, terr_pos.xz).r;\n\t\telev += (amp/(j*j))*el1;\n\t\tx_scale /= 2.;\n\t}\n\n    return elev-2.;\t\n}\n\nfloat terrain(vec3 p)\n{\n    vec3 terr_pos = p;\n\tp.z -= 282.;\n\tterr_pos.y = fractelev(p, 3);\n\treturn p.y - terr_pos.y;\n\treturn length(terr_pos-p);\n}\n\nfloat getDistance(vec3 point)\n{\n//\treturn anterior(point);\n\treturn terrain(point);\n\t//return min(molar(point), terrain(point));\n\tfloat c = 10.0;\n\treturn molar(mod(point, c) - 0.5*c);\n}\n\nfloat raycast(vec3 start_pos, vec3 ray_dir)\n{\n\tfloat d = 0.0;\n\t\n\tfor (int i = 0; i < MAX_STEPS; i++)\n\t{\n\t\tvec3 ray_pos = start_pos + ray_dir*d;\n\t\tfloat s = getDistance(ray_pos);\n\t\t\td += .6*s;\n\t\n\t\tif (s < epsilon)\n\t\t\treturn d;\t\n\n\t\t\n\t\tif (d > max_distance)\n\t\t\tbreak;\n\t\t\n\t}\n\t\n\treturn max_distance;\n}\n\nvec3 getNormal(vec3 point)\n{\n float d0 = getDistance(point);\n  float dX = getDistance(point - vec3(epsilon, 0.0, 0.0));\n  float dY = getDistance(point - vec3(0.0, epsilon, 0.0));\n  float dZ = getDistance(point - vec3(0.0, 0.0, epsilon));\n\t\n\tvec3 r = vec3(dX-d0, dY-d0, dZ-d0);\n  return normalize(r);\n}\n\nmat4 rotate(vec3 axis, float angle)\n{\n\taxis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n                0.0,                                0.0,                                0.0,                                1.0);\n\n}\n\nvec3 fog(vec3 col, float dist)\n{\n    float amount = 1. - exp(-dist*.072);\n    vec3 fogColor = vec3(.5, .6, 1.);\n    return mix(col, fogColor, amount);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.0*fragCoord.xy / iResolution.xy - 1.0;\n\t\n\tvec3 up = vec3(0.0, 1.0, 0.0);\n\tvec3 right = vec3(1.0, 0.0, 0.0);\n\tvec3 forward = vec3(0.0, 0.0, -1.0);\n\t\n\tfloat dist = -3.0;\n\t\n\tdist = 3.;\n\tdist = -3.*iTime;\n\n\tvec3 rot_axis = vec3(0.0, 1.0, 0.0);\n\tfloat angle = iTime*.2;\n\t\n\tmat4 rot = rotate(rot_axis, 0.);\n\t\n\tvec3 eye_pos = (rot*vec4(vec3(0.0, 1.5, dist), 1.0)).xyz;\n\n    eye_pos.x = 26.7;\n    eye_pos.x += 2.*cos(iTime)+2.*sin(.7*iTime);\n\teye_pos.y += terrain(eye_pos) + 1.25;\n    eye_pos.y = 4.5;\n    eye_pos.y += 2.*sin(iTime);\n\t\n\tvec3 ray_dir = (rot*vec4(normalize(up * uv.y + right * uv.x + forward), 1.0)).xyz;\n\n\tvec4 bg = vec4(0.5, 0.6, 1.0, 1.0);\n\n//\tfragColor = vec4(uv,0.5+0.5*sin(iTime),0.2);\n\n\t\n\tfloat d = raycast(eye_pos, ray_dir);\n\tvec3 point = eye_pos + ray_dir*d;\n\tif (d < max_distance)\n\t{\n\t\tvec3 normal = getNormal(point);\n\n\t\tvec3 light = normalize(vec3(0.707, .707, .5));\n\n\t\tvec3 diff_color = vec3(1.,1.,1.);//texture(iChannel0, point.xz).xyz;\n//\t\tfloat diffuse = max(0.0, dot(-light, normal));\n\t\t\t\tfloat diffuse = abs(dot(-light, normal));\n\t\tfloat wa = 0.7;\n\t\n\t\tfloat ddiv = 1./exp(d*0.035);\n\t\tdiffuse *= ddiv;\n\n\t\tdiffuse = wa*diffuse + (1.-wa);\n\t\tvec3 eye_vec = ray_dir;\n\t\tvec3 halfa = normalize(eye_vec - light);\n\t\tfloat sdot = dot(halfa, normal);\n\t\tfloat specular = 0.*pow(sdot, 80.0 );\n\t\tvec4 color =  (vec4(diffuse*diff_color, 0.2) + vec4(vec3(specular), 0.8));\n\t\t\n\t\tcolor *= texture(iChannel2, mod(point.xz/20.,1.0));\n\n//\t\td = exp(-(d*d));\n//\t\t color *= clamp(d, .0, 1.);\n\t\t\n\t\t//color *= pow(1./(.55*d), 1.05);\n\n     \n\t\t//color *= 1.12*pow(d,.25);\n        float ca = exp(-.0003*point.z);\n        color = (1.-ca)*bg+(ca)*color;\n\t\tfragColor = vec4(color+(1.-length(color))*bg);\n\t\tfragColor = vec4(color);\n//\t\tfragColor = texture(iChannel0, point.xy);\n\t\tfragColor.a = 1.0;\n        fragColor.rgb = fog(fragColor.rgb, d);\n\t}\n\telse\n\t{\n\t\tfragColor = bg + .2*texture(iChannel3, uv/40.);\n\t}\n    \n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"float rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    float w1 = pow(cos(time*30.),18.)*rand(vec2(time));\n    float w2 = .1*rand(vec2(time));\n \n//    return vec2(rand(vec2(time))*sin(1250.*time)*exp(-.1*time));\n    \n    return vec2((w1+w2)*exp(-.1*time) );\n}\n","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdsXzl","date":"1405749114","viewed":180,"name":"Rudder","username":"dirkadirkadan","description":"ouch","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["tooth"],"hasliked":0,"parentid":"","parentname":""}}