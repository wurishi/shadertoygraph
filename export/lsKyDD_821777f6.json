{"ver":"0.1","info":{"id":"lsKyDD","date":"1522117319","viewed":553,"name":"Kinda Quick Radial Blur","username":"Hamneggs","description":"I needed to figure out this technique for a project I'm working on, so I came here for help. After studying a few shaders I found jcant0n's to make a lot of sense. Then I decided to test out a few read-about-them-on-some-blogs optimizations.","likes":18,"published":1,"flags":32,"usePreview":0,"tags":["ray","rays","blur","fast","radial","godrays","god","crepuscular","jcvd","sunshafts"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RBLUR_SAMPLES 32\n\n/**\n * Pretty quick radial blur. How does it work? Samples the luminance\n * buffer at increasingly large scales centered around <center> and\n * accumulates the results.\n * It's actually just a tweak on @jcant0n's version so I could learn\n * this blur works.\n *\n * https://www.shadertoy.com/view/XsfSDs\n * \n * Parameters:\n * uv: Screen coordinates, normalized however you see fit.\n * center: The center point of the blur, in the same system as <uv>\n * falloffExp: An exponent to attenuate how gosh darn bright it is.\n */\nfloat rblur( in vec2 uv, in vec2 center, float falloffExp )\n{\n    // Translate our floating point space to the center of our blur.\n    uv -= center;\n    \n    // Go ahead and precompute the inverse of the number of samples.\n    // so we don't have any inner divisions.\n    float invSamples = 1.0 / float(RBLUR_SAMPLES);\n    \n    // Place to accumulate the result.\n    float result = 0.0;\n    \n    // Independent locations to store the results of each inner tap.\n    // Why? So each tap doesn't need to write back before the next one\n    // can start executing, preventing stalls. Works on x86 and piped\n    // MIPS and I think it helps this out too (at least on my old thinkpad).\n    float r0=0.0,r1=0.0,r2=0.0,r3=0.0;\n    \n    // We need to do each tap at a different index/position, so by storing\n    // them in a vector we can make incrementation a single op instead of 4.\n    vec4 indices = vec4(0,1,2,3);\n    \n\t// Same thing with the scale.\n    vec4 scale = vec4(0);\n    \n    // Go through and and sample the texture.\n    for( int i = 0; i < RBLUR_SAMPLES; i+=4 )\n    {\n        scale = indices*invSamples;\n        r0 = texture(iChannel0, uv*scale.x + center).r;\n        r1 = texture(iChannel0, uv*scale.y + center).r;\n        r2 = texture(iChannel0, uv*scale.z + center).r;\n        r3 = texture(iChannel0, uv*scale.w + center).r;\n        indices += 4.0;\n        result += r0+r1+r2+r3;\n    }\n    return pow(result * invSamples,falloffExp);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Get a stock copy of the image.\n    vec4 jcvd = texture(iChannel0,uv);\n    \n    // Get a radial blur of him.\n    float b = rblur(uv, vec2(.5),1.);\n\n    fragColor = vec4(b,b,b,1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Get jcvd.\n    vec4 jcvd = texture(iChannel0,fragCoord/iResolution.xy);\n    \n    // Do some chromakeying.\n    float d = length(jcvd.rgb-vec3(0,1,0));\n    \n    // Use that to create the black and white image.\n    fragColor = mix(vec4(1),vec4(0,0,0,1),smoothstep(.4,.8,d));\n}","name":"Buf A","description":"","type":"buffer"}]}