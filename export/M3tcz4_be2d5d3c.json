{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"music","id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define EYES 80.\n#define FFT(a) pow(texelFetch(iChannel0, ivec2(a, 0), 0).x, 5.)\nfloat snd = 0.;\nconst float PI = 3.1415926;\n\n// MIT Licensed hash From Dave_Hoskins (https://www.shadertoy.com/view/4djSRW)\nvec3 hash33(vec3 p)\n{\n    p = fract(p * vec3(443.8975,397.2973, 491.1871));\n    p += dot(p.zxy, p.yxz+19.27);\n    return fract(vec3(p.x * p.y, p.z*p.x, p.y*p.z));\n}\n\nvec3 stars(in vec3 p)\n{\n    vec3 c = vec3(0.);\n    float res = iResolution.x*0.8;\n\n\tfor (float i=0.;i<4.;i++)\n    {\n        vec3 q = fract(p*(.15*res))-0.5;\n        //q*= snd/10.;\n        vec3 id = floor(p*(.15*res));\n        vec2 rn = hash33(id).xy;\n        float c2 = 1.-smoothstep(0.,.6,length(q));\n        c2 *= step(rn.x,.0005+i*i*0.001);\n        c += c2*(mix(vec3(1.0,0.49,0.1),vec3(0.75,0.9,1.),rn.y)*0.25+0.75);\n        p *= 1.4;\n    }\n    return c*c*.65;\n}\nvoid camera(vec2 fragCoord, out vec3 ro, out vec3 rd, out mat3 t)\n{\n    float a = 1.0/max(iResolution.x, iResolution.y);\n    //rd = normalize(vec3((fragCoord - iResolution.xy*0.5)*a, 0.5));\n    rd = normalize(vec3(fragCoord, 1.0));\n\n    ro = vec3(0.0, 0.0, -15.);\n\n    //float ff = min(1.0, step(0.001, iMouse.x) + step(0.001, iMouse.y));\n    float ff = min(1.0, step(0.001, iMouse.x) + step(0.001, iMouse.y))+sin(iTime/20.);\n    vec2 m = PI*ff + vec2(((iMouse.xy + 0.1) / iResolution.xy) * (PI*2.0));\n    //m.y = -m.y;\n    m.y = sin(m.y*0.5)*0.3 + 0.5;\n\n    //vec2 sm = sin(m)*sin(iTime), cm = cos(m)*(1.+sin(iTime));\n    vec2 sm = sin(m)*(1.+sin(iTime/10.)/2.), cm = cos(m);\n    mat3 rotX = mat3(1.0, 0.0, 0.0, 0.0, cm.y, sm.y, 0.0, -sm.y, cm.y);\n    mat3 rotY = mat3(cm.x, 0.0, -sm.x, 0.0, 1.0, 0.0, sm.x, 0.0, cm.x);\n\n    t = rotY * rotX;\n\n    ro = t * ro;\n    rd = t * rd;\n\n    rd = normalize(rd);\n}\n\n\nfloat Eye(vec2 p, vec2 offs, float s1, float s2, float size){\n    float c1 = smoothstep(s1, s1-.01, length(size*p));\n    float c2 = smoothstep(s2, s2-.01, length(size*p-offs));\n    c1 += .003/length(p);  // for brightness\n    c1/=(0.2+snd);\n    return c1-c2;\n}\n\nmat2 Rot(float a){\n    float c = cos(a), s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int max_freq = 100;\n    for(int i=1; i < max_freq; i++){\n        snd +=FFT(i)*float(i);\n    }\n    snd /=float(max_freq*20);\n\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 cam = normalize(vec3(1.5,uv));\n    vec2 cam_uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    //camera + rd for stars\n    vec3 ro = vec3(0.0);//rd = vec3( 0.0 );\n\tvec3 rd = normalize(vec3(cam_uv,-1.5));\n    mat3 t3 = mat3(1.0);\n\tcamera(uv, ro, rd, t3);\n    vec3 bg = stars(rd)*(1.+30.*snd);\n\n    uv *= 5.5;\n    uv *= Rot(3.1415/2.);\n    vec3 col = bg;\n    float f = atan(uv.y, uv.x+2.3)/6.28318;\n\n\n    float a = smoothstep(.37, .36, length(uv))-smoothstep(.28, .27, length(uv-vec2(.1, -.05)));\n    float fade = sin(uv.x+.5)*.5+.5;\n\n    for(float i=0.; i<1.; i+=1./EYES){\n        vec2 coord = uv-vec2(4.*i-2.2, i*sin(iTime*i)+i*cos(iTime*i));\n        float t = smoothstep(i, 0., abs(length(coord)));\n        col += t*.15*vec3(.1, .4, .3);\n        float eye = Eye(coord, vec2(-.3*sin(iTime),.3*cos(iTime)), .6, .45, 5./i)*FFT(i*2.);\n        vec3 color = sin(.2*iTime*vec3(3., 5., 2.)*i)*.5+.5;\n        color.z *= .3;\n        col += eye * color;\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"M3tcz4","date":"1734812262","viewed":86,"name":"Fork Christmas tree audio vis","username":"ArthurTent","description":"it takes some seconds until you can see the tree. be patient :)\nthanks @vanshika for the tree.\nfork of \"Christmas tree ::)\"\nAdded stars background and added some reaction based on sound","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["christmas","wave","audio","tree","visualizer","bright"],"hasliked":0,"parentid":"MfGBWm","parentname":"Christmas tree ::)"}}