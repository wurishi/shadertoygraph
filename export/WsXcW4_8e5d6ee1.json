{"ver":"0.1","info":{"id":"WsXcW4","date":"1584749892","viewed":91,"name":"param_v25","username":"darkczar","description":"v24 with tweaks","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic","learning","epicycles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// based on...\n// https://www.shadertoy.com/view/lssfW2\n\nfloat nsin(float x)\n{\n    return .5+.5*sin(x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec2 curve_p = vec2(0,0);\n    float dtemp = 1000.0;\n    float d = 10001.0;\n    float d2 = 10002.0;\n    float d3 = 10003.0;\n    float di = 0.;\n    float threshold = 0.00000006;\n    float r = 0.;\n    float g = 0.;\n    float b = 0.;\n    float black_threshold=0.5 -.5*nsin(iTime*.6);\n    //float ga=0.;\n    //float ba=0.;\n    //float rb=0.;\n    //float gb=0.;\n    //float bb=0.;\n    for(int i = 0;i<3;i++)\n    {\n        di = float(i)*3.3;\n        curve_p.x = -.1*sin(.3*iTime)+.05*float(di)*sin(float(di)+.4*iTime) +.03*float(di)*sin(4.0*di+.75*iTime) + .03*sin(iTime*.1)*float(di)*sin(7.0*di+.3*iTime);\n        curve_p.y = -.1*cos(.3*iTime)+.05*float(di)*cos(float(di)+.4*iTime) +.03*float(di)*cos(4.0*di+.75*iTime) + .03*sin(iTime*.1)*float(di)*cos(7.0*di+.3*iTime);\n        dtemp = pow(length(p-curve_p),8.);\n        if (i==0)\n        {\n            //d=max(threshold + .01*nsin(iTime),dtemp) - threshold + .01*nsin(iTime);\n            d=max(threshold,dtemp); // - threshold; // + .01*nsin(.1*iTime);\n            d=mod(log(d),.8 +.2*sin(iTime));\n            if(d<black_threshold) d=0.;\n        } \n        else if (i==1)\n        {\n            //d2=max(threshold + .01*nsin(iTime+6.28/3.0),dtemp) - threshold + .01*nsin(iTime+6.28/3.0);\n            d2=max(threshold,dtemp); // - threshold; // + .01*nsin(.1*iTime+6.28/3.0);\n\n            d2=mod(log(d2),.8 +.2*cos(iTime));\n            if(d2<black_threshold) d2=0.;\n        } \n        else if (i==2)\n        {\n            //d3=max(threshold + .01*nsin(iTime + 2.*6.28/3.0),dtemp)- threshold + .01*nsin(iTime + 2.*6.28/3.0);\n            d3=max(threshold,dtemp);//- threshold; // + .01*nsin(.1*iTime + 2.*6.28/3.0);\n\n            d3=mod(log(d3),.8);\n            if(d3<black_threshold)d3=0.;\n        }\n        \n        \n        \n        r = d*d;\n        g = d2*d2*.8;\n        b = d3*d3;\n       \n        \n  \n    }\n    //r = .33*r + .33*ra + .33*rb;\n    //g = .33*g + .33*ga + .33*gb;\n    //r = d; // - .1*(.25 - .25*pow(dot(p, curve_p),2.0)*(.5+.5*sin(iTime*.4)));\n    //g = (1.0-d); //*sin(2.1*d*d+.1*length(p))*.006*normalize(dot(p,curve_p*iTime*2.));\n    //b=.06; //*cos(iTime*.8 - .5*pow(d,2.0)) +.0002*(dot(p,normalize(curve_p - .5*vec2(iTime*-.05, iTime*.05))));\n    vec3 col = vec3(r, g, b);\n    float dn = col.x + col.y + col.z;\n    col /= dn;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}