{"ver":"0.1","info":{"id":"slfyRB","date":"1648195821","viewed":49,"name":"Shader1-TunaFunG","username":"TunaFun","description":"Simple shader test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","breathing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lerp(float A, float B, float Alpha)\n{\n\treturn (A + Alpha*(B-A));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy -0.5;\n    \n    float Offset;\n    float OffsetA = iResolution.x/iResolution.y;\n    float OffsetB = fragCoord.y/iResolution.x;\n    float Alpha = sin(iTime)*0.5+0.5;\n    Offset = lerp(OffsetA, OffsetB, Alpha);\n    uv.x *= Offset;\n    \n    float distance = length(uv);\n    // Time varying pixel color\n    vec3 col;\n    if (distance < 0.3*Alpha+0.1) col = vec3(Alpha,1.0-Alpha,1); else col = vec3(0,1,0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}