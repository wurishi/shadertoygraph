{"ver":"0.1","info":{"id":"l3lcRl","date":"1726586005","viewed":26,"name":"Smoke sim test","username":"Pilo","description":"Very simple smoke simulation (very cheap to compute)\nYou can draw smoke with the mouse.\n\nIt's a draft the code is not well written at all.","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["smoke"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = pow(texture(iChannel0, uv), vec4(1.0/2.2));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    fragColor = vec4(0.0,0.0,0.0,1.0);\n\n    float l = length(iMouse.xy - fragCoord.xy);\n    const float s = 64.0;\n    if(l < s && iMouse.z > 0.0)\n        fragColor = vec4(1.0,1.0,1.0,1.0) * (1.0 - l / s);\n        \n        \n        \n    vec2 p = (vec2(cos(iTime), sin(iTime)) * 0.25 + 0.5) * iResolution.xy;\n    l = length(p - fragCoord.xy);\n    if(l < s)\n        fragColor = vec4(1.0,1.0,1.0,1.0) * (1.0 - l / s) * 0.1;       \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// from https://www.shadertoy.com/view/lXXXzS\nvec4 cheapTurbulent(vec2 x) {\n    //Scaled pixel coordinates\n    vec2 p= x /iResolution.y*6.;\n    \n    //8 wave passes\n    for(float i=0.0; i<8.0;i++)\n    {\n        //Add a simple sine wave with an offset and animation\n        p.x += sin(p.y+i+iTime*.3);\n        //Rotate and scale down\n        p *= mat2(6,-8,8,6)/8.;\n    }\n    //Pick a color using the turbulent coordinates\n    return sin(p.xyxy*.3+vec4(0,1,2,3))*.5+.5;\n}\n\nvec4 cheapTurbulentFBM(vec2 x) {\n    vec4 r = vec4(0.0);\n    r += (cheapTurbulent(x * 0.5) - vec4(0.5)) * 0.5;\n    r += (cheapTurbulent(x * 1.0) - vec4(0.5)) * 0.25;\n    r += (cheapTurbulent(x * 5.0) - vec4(0.5)) * 0.125;\n    return r + vec4(0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 tex0 = texture(iChannel0, uv)*0.1;\n    \n    \n    vec4 tex1 = vec4(0.0);\n    vec2 s = vec2(4.0) / iResolution.xy;\n    \n    vec4 t = texture(iChannel1, uv);\n    \n    vec4 n = cheapTurbulentFBM(1.0*fragCoord);\n    n.y = 0.5 * n.y;\n    \n    tex1 += (texture(iChannel1, uv + vec2( s.x, 0.0)) - t) * 0.5 * n.x;\n    tex1 += (texture(iChannel1, uv + vec2(-s.x, 0.0)) - t) * 0.5 * (1.0 - n.x);\n    \n    tex1 += (texture(iChannel1, uv + vec2(0.0, s.y)) - t) * 0.5 * n.y;\n    tex1 += (texture(iChannel1, uv + vec2(0.0, -s.y)) - t) * 0.5 * (1.0 - n.y);\n    tex1 += t;\n    fragColor = tex0 + tex1 * 0.99;//mix(tex0, tex1, 0.995);\n}","name":"Buffer B","description":"","type":"buffer"}]}