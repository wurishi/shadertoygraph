{"ver":"0.1","info":{"id":"NljSDw","date":"1627827610","viewed":135,"name":"caustics sphere","username":"kithy","description":"3D sphere textured caustics.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["raymarching","voronoi","caustics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITR 64\n#define EPS 0.001\n#define TWO_PI 6.2831\n\nmat2 rot(float angle){\n    float s=sin(angle);\n    float c=cos(angle);\n    return mat2(c,-s,s,c);\n}\n\nfloat sdSphere(vec3 p){\n    return length(p)-1.0;\n}\n\nvec3 genNormal(vec3 p){\n\tvec3 normal=vec3(\n\t\tsdSphere(p+vec3(EPS,0.0,0.0))-sdSphere(p+vec3(-EPS,0.0,0.0)),\n\t\tsdSphere(p+vec3(0.0,EPS,0.0))-sdSphere(p+vec3(0.0,-EPS,0.0)),\n\t\tsdSphere(p+vec3(0.0,0.0,EPS))-sdSphere(p+vec3(0.0,0.0,-EPS))\n\t\t);\n\treturn normalize(normal);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n\tvec3 ro=vec3(0.0,0.0,-6.0);\n\tvec3 lookat=vec3(0.0,0.0,0.0);\n\tfloat zoom=5.0;\n\n\tvec3 f=normalize(lookat-ro);\n\tvec3 r=normalize(cross(vec3(0.0,1.0,0.0),f));\n\tvec3 u=cross(f,r);\n\tvec3 c=ro+f*zoom;\n\tvec3 i=c+uv.x*r+uv.y*u;\n\tvec3 rd=normalize(i-ro);\n\n   \n    float d,t;\n    vec3 p,n;\n    \n    for(int i=0;i<ITR;i++){\n        p=ro+rd*t;\n        d=sdSphere(p);\n        n=genNormal(p);\n        if(d<EPS)break;\n        t+=d;\n    }\n    \n    p.xy*=rot(2.5);\n    p.yz*=rot(3.5);\n    \n    vec3 col=vec3(0.0);\n    \n    if(d<EPS){\n        uv=vec2(atan(p.x,p.z)/TWO_PI,p.y/3.0)+0.5;\n        vec3 tex=texture(iChannel0,uv).rgb;\n        col=tex;\n    }\n    \n    float diff=max(dot(n,vec3(1.0,1.0,-1.0)),0.1);\n    col.x*=diff;\n    col.y*=diff;\n    col.z*=diff;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 hash2(vec2 p){\n\treturn fract(sin(vec2(dot(p,vec2(123.4,748.6)),dot(p,vec2(547.3,659.3))))*5232.85324);\n}\nfloat hash(vec2 p){\n\treturn fract(sin(dot(p,vec2(43.232,75.876)))*4526.3257);\n}\n\nfloat voronoi(vec2 p){\n\tvec2 n=floor(p);\n\tvec2 f=fract(p);\n\tfloat md=5.0;\n\tvec2 m=vec2(0.0);\n\n\tfor(int i=-1;i<=1;i++){\n\t\tfor(int j=-1;j<=1;j++){\n\t\t\tvec2 g=vec2(i,j);\n\t\t\tvec2 o=hash2(n+g);\n\t\t\to=0.5+0.5*sin(iTime+5.038*o);\n\t\t\tvec2 r=g+o-f;\n\t\t\tfloat d=dot(r,r);\n\t\t\tif(d<md){\n\t\t\t\tmd=d;\n\t\t\t\tm=n+g+o;\n\t\t\t}\n\t\t}\n\t}\n\treturn md;\n}\n\nfloat ov(vec2 p){\n\tfloat v=0.0;\n\tfloat a=0.4;\n\tfor(int i=0;i<3;i++){\n\t\tv+=voronoi(p)*a;\n\t\tp*=2.0;\n\t\ta*=0.5;\n\t}\n\treturn v;\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=fragCoord.xy/iResolution.xy;\n\tvec4 a=vec4(0.0,0.65,1.0,1.0);\n\tvec4 b=vec4(0.85,0.9,1.0,1.0);\n\tfragColor=vec4(mix(a,b,smoothstep(0.0,0.5,ov(uv*5.0))));\n}","name":"Buffer A","description":"","type":"buffer"}]}