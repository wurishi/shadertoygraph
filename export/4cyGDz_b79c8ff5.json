{"ver":"0.1","info":{"id":"4cyGDz","date":"1716216938","viewed":36,"name":"прак1","username":"Belka_welka","description":"ф","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int n=6;\n\nvec3 colors[n]= vec3[n](vec3(0.6,0.6,1.),vec3(0.0,0.0,0.9),vec3(0.9, 0.0, 0.6),vec3(0.0,0.85,1.),vec3(0.0,0.9,0.9),vec3(0.0,1.,1.));\n\nvec3 BGcolor = vec3(0.5,0.,0.2);\n\nconst int v=19;\n\nvec3 v_cord[v];\n\nint vert_num[n] = int[n](4, 3, 3, 3, 3, 3);\n\nint vert_ind[n] = int[n](0, 4, 7, 10, 13, 16);\n\nvec2 centre; \n\nfloat r, z_circ;\n\n\nbool check(vec2 a, vec2 b, vec2 c) {\n\n    if((b.x-a.x)*(c.y - a.y)-(c.x - a.x)* (b.y - a.y)>0.0) return true;\n\n    else return false;\n}\n    \nvoid setCircle(){\n    centre = vec2(0.5,0.3);\n    r=0.1;\n    z_circ = 0.06;\n}\nbool in_Circle(in vec2 xy){\n\n    float centre_x = (centre.x + 0.2 * sin(iTime));\n    return (xy.x - centre_x)*(xy.x - centre_x) + (xy.y - centre.y)*(xy.y - centre.y) <= r*r;\n\n}\n    \nfloat find_z(int i, vec2 uv) {\nvec3 p0 = v_cord[vert_ind[i]];\nvec3 p1 = v_cord[vert_ind[i] + 1];\nvec3 p2 = v_cord[vert_ind[i] + 2];\nvec3 n = cross(p1-p0,p2-p0);\nfloat d =(n.x*p0.x + n.y*p0.y + n.z*p0.z);\nfloat z =(d - n.x*uv.x - n.y*uv.y)/n.z;\nreturn z;\n}\n\n\nvoid initialization(in float time){\n\n    v_cord[0]= vec3(0.2 + 0.3*cos(time), 0.1 + 0.1*sin(time),0.1);//квадрат\n\n    v_cord[1]= vec3(0.5 + 0.3*cos(time), 0.1 + 0.1*sin(time),0.2);\n\n    v_cord[2]= vec3(0.5 + 0.3*cos(time),0.3 + 0.1*sin(time),0.3);\n\n    v_cord[3]= vec3(0.2 + 0.3*cos(time), 0.3 + 0.1*sin(time),0.4);\n    \n\n    v_cord[4]= vec3(0.4 + 0.2*cos(time),0.7 + 0.1*sin(time), 0.2);//треуг\n\n    v_cord[5]= vec3(0.5 + 0.2*cos(time),0.7 + 0.1*sin(time), 0.0);\n\n    v_cord[6]= vec3(0.4 + 0.2*cos(time),0.85 + 0.1*sin(time), 0.2);\n    \n\n    v_cord[7]= vec3(0.45 + 0.1*cos(time),0.45 + 0.1*sin(time), 0.25);//треуг\n\n    v_cord[8]= vec3(0.85 + 0.1*cos(time),0.3 + 0.1*sin(time), 0.45);\n\n    v_cord[9]= vec3(0.42 + 0.1*cos(time),0.6 + 0.1*sin(time), 0.1);\n    \n    \n    v_cord[10]= vec3(0.5, 0.5, -0.1);//объемный треуг1\n    \n    v_cord[11]= vec3(0.8, 0.5, 0.1);\n    \n    v_cord[12]= vec3(0.65, 0.7, 0.0);\n    \n    \n    v_cord[13]= vec3(0.5, 0.5, -0.1);// объемный треуг2\n    \n    v_cord[14]= vec3(0.65, 0.7, -0.8);\n    \n    v_cord[15]= vec3(0.3, 0.5,-0.4);\n    \n    \n    v_cord[16]= vec3(0.2 + 0.5*cos(time), 0.1+ 0.6*sin(time),0.1);//треуг\n    \n    v_cord[17]= vec3(0.2 + 0.5*cos(time), 0.1+ 0.6*sin(time),0.1);\n    \n    v_cord[18]= vec3(0.2 + 0.5*cos(time), 0.1+ 0.6*sin(time),0.1);\n\n}\n\nbool in_Poly(in vec2 point, in int i){;\n\n    int j;\n\n    bool flag = true;\n\n    for(j=0; j<vert_num[i]-1 && flag; j++){\n\n        flag = check(v_cord[vert_ind[i] + j].xy, v_cord[vert_ind[i] + j + 1].xy, point);}\n\n    flag = flag && check(v_cord[vert_ind[i] + j].xy, v_cord[vert_ind[i]].xy, point);\n\n    return flag;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n\n{\n\n    float z_max = -100.;\n    fragColor = vec4(BGcolor, 1.);\n\n    vec2 uv = fragCoord/iResolution.xy;\n\n    initialization(iTime);\n    int i, j;\n\n    vec4 col = vec4(0.1,0.9,0.5,1.0);\n    \n    j = 0;\n    if(in_Poly(uv, j) ){\n            float tmp = find_z(j, uv);\n            if (tmp > z_max){\n                fragColor = vec4 (colors[j], 1.0);\n                z_max = tmp;\n                }\n            }\n         \n     for(i = 1; i < 5; i++){\n        if(in_Poly(uv, i) ){\n            float tmp = find_z(i, uv);\n            if (tmp > z_max){\n                fragColor = vec4 (colors[i], 1.0);\n                z_max = tmp;\n            }\n        }\n      }\n  \n    setCircle();\n    if (in_Circle(uv))\n        if (z_circ > z_max)\n            fragColor = col;\n\n}\n","name":"Image","description":"","type":"image"}]}