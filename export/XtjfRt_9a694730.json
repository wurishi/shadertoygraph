{"ver":"0.1","info":{"id":"XtjfRt","date":"1534942225","viewed":556,"name":"Worley fBm","username":"wsmind","description":"Worley generalization of Voronoi","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["noise","worley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rand2(vec2 uv)\n{\n    uv += 0.5;\n    uv /= 256.0; // texel size\n\treturn vec2(texture(iChannel0, uv).r, texture(iChannel0, uv + 17.0 / 256.0).r);\n}\n\n#define WORLEY_ORDER 2\n\nfloat worley(vec2 uv)\n{\n    vec2 centerCell = floor(uv);\n    float distances[WORLEY_ORDER];\n    \n    for (int i = 0; i < WORLEY_ORDER; i++)\n        distances[i] = 1000.0;\n    \n    for (float y = -1.0; y <= 1.0; y += 1.0)\n    {\n        for (float x = -1.0; x <= 1.0; x += 1.0)\n        {\n            vec2 cell = centerCell + vec2(x, y);\n            vec2 point = cell + rand2(cell);\n            \n            float dist = distance(point, uv);\n            distances[WORLEY_ORDER - 1] = min(dist, distances[WORLEY_ORDER - 1]);\n            \n            // re-sort distances\n\t\t    for (int i = WORLEY_ORDER - 1; i > 0; i--)\n            {\n                if (distances[i] < distances[i - 1])\n                {\n                    float tmp = distances[i - 1];\n                    distances[i - 1] = distances[i];\n                    distances[i] = tmp;\n                }\n            }\n        }\n    }\n    \n    return distances[WORLEY_ORDER - 1] - distances[WORLEY_ORDER - 2];\n}\n\nfloat fbm(vec2 uv)\n{\n    float value = worley(uv);\n    float factor = 2.0;\n    for (int i = 1; i < 2; i++)\n    {\n        uv += iTime * 0.04;\n        value *= (worley(uv * factor) + 0.2);\n        factor *= 2.0;\n    }\n    return value;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy * 5.0 / iResolution.y;\n\tfragColor = vec4(vec3(fbm(uv)) ,1.0);\n}","name":"Image","description":"","type":"image"}]}