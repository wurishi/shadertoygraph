{"ver":"0.1","info":{"id":"csSBWz","date":"1689580032","viewed":46,"name":"just a test shader","username":"ecnucb","description":"just a case test a15","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// reproducing Erlend Robaye's https://www.facebook.com/groups/procgenart/permalink/1991283661002453/\n\n#define AA 1    // antialiasing\n#define N  10   // NxN subsamples\n\n// --- complex op from https://shadertoyunofficial.wordpress.com/2019/01/02/programming-tricks-in-shadertoy-glsl/\n\n#define CS(a)        vec2( cos(a), sin(a) )\n//#define cart2pol(U)  vec2( length(U), atan((U).y,(U).x) )\n#define pol2cart(U) ( (U).x * CS( (U).y ) )\n#define cmod(Z)      length(Z)\n#define carg(Z)      atan( (Z).y, (Z).x )\n#define cmul(A,B)  ( mat2( A, -(A).y, (A).x ) * (B) )  // by deMoivre formula\n#define cinv(Z)    ( vec2( (Z).x, -(Z).y ) / dot(Z,Z) ) \n#define cdiv(A,B)    cmul( A, cinv(B) )\n//#define cpow(Z,v)    pol2cart( vec2( pow(cmod(Z),v) , (v) * carg(Z) ) )\n#define cpow(A,B)    cexp( cmul( B, clog(A) ) )\n#define cexp(Z)      pol2cart( vec2( exp((Z).x), (Z).y ) )\n#define clog(Z)      vec2( log(cmod(Z)), carg(Z) )\n#define imul(Z)      vec2(-(Z).y,(Z).x)\n#define csin(Z)    ( -.5* imul( cexp(imul(Z)) - cexp(-imul(Z)) ) )\n\n#define VIV_DEBUG 1\n#define VIV_YES 1\n#define VIV_NOT 0\n#define VIV_ASSERT(x) if (!(x)) { O = vec4(1.0, 0.0, 0.0, 1.0); return; }\n\nvec4 judge(bool res) {\n    vec4 O;\n    if (res) {\n        O = vec4(1.0, 1.0, 0.0, 1.0);\n    } else {\n        O = vec4(0.0, 1.0, 1.0, 1.0);\n    }\n    return O;\n}\n\nbool isNAN(float x) {\n    if (x >= 0.0) return false;\n    if (x < 0.0) return false;\n    return true;\n}\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R  = iResolution.xy, z;\n#if VIV_DEBUG\n    R.x = 512.0;\n    R.y = 288.0;\n#endif\n    float s = 1.8 / R.y;                // scale\n    z = ( (u-(R-R.y)/2.) * s + vec2(-.2,2.2) ) ; // x = -0.2..1.65  y = 2.2 .. 4\n    O = vec4(0);  \n    \n#if !VIV_DEBUG\n    if ( z.x < -.2 || z.x > 1.65 ) return;\n#endif\n    \n#if VIV_DEBUG\n    z.x = -0.195;\n    z.y = 2.25;\n    float INF = exp(89.0);\n#endif\n\n#if VIV_NOT\n    if (exp(89.0) >= exp(90.0)) {\n        O = vec4(1.0, 1.0, 0.0, 1.0);\n        return;\n    } else {\n        O = vec4(0.0, 1.0, 1.0, 1.0);\n        return;\n    }\n#endif\n\n#if VIV_DEBUG\n    vec2 zz = z;\n#endif\n\n#if AA\n\n#if VIV_DEBUG\n  //for( int k=12; k<13; k++) {\n  int k = 40;\n  {\n#else\n  for( int k=0; k<N*N; k++) {\n#endif\n\n#if VIV_DEBUG\n    vec2 z = zz + (vec2(k%N,k/N)-.5*float((N+1)/2)) / float(N) * s;\n#else\n    vec2 z = z + (vec2(k%N,k/N)-.5*float((N+1)/2)) / float(N) * s;\n#endif\n   \n   \n#if VIV_NOT\n    VIV_ASSERT(k == 12);\n    VIV_ASSERT(z.y >= 2.249062657);\n    VIV_ASSERT(z.y <  2.249062658);\n    //O = judge(z.y >= 2.249062657);\n    //return;\n#endif\n   \n#if VIV_DEBUG\n    VIV_ASSERT(k == 40);\n    VIV_ASSERT(z.y >= 2.2509375819);\n#endif\n   \n#endif\n        \n    for (int i=0; i<4; i++) \n        z = cdiv( cexp(z) , z );          // 4x z = (e^z)/z\n\n\n#if VIV_DEBUG\n    VIV_ASSERT(k == 40);\n    VIV_ASSERT(z.y >= 1.410468);\n#endif\n\n    z = cdiv( csin(z) , z-vec2(1,0) );    //    z = sin(z) / (z-1)\n\n\n\n    for (int i=0; i<4; i++)                                      // should simplifies to\n        z = cpow( z, vec2(1,6) );         // 4x z = z^(1+6i)     //   z^(1+6i)⁴\n  \n  \n#if VIV_NOT\n    VIV_ASSERT(k == 40);\n    O = judge(z.y >= -1073.97);\n    return;\n#endif\n  \n#if 0\n    if ( cmod(z) < .1 ) O++;              // could do this intead of following (pretty close)\n#else\n    z = cdiv( cexp(z) , z );              //    z = (e^z)/z      // should simplifies to\n    \n#if VIV_DEBUG\n    if (z.y >= INF) {\n        O = vec4(0.0, 0.0, 1.0, 1.0);\n        return;\n    }\n#endif\n    \n    \n    z = clog( z );                        //    z = log(z)       //   z -= log(z)\n // if ( cmod(z) < exp(45.) &&   cmod(z) > exp(-45. )) O++;      // could do this intead of clog\n\n // O += vec4(!isnan(cmod(z)) && !isinf(cmod(z)));  // white if defined, otherwise black\n    if (cmod(z) < 45. ) O++;                        // simplifies to this\n#endif\n      \n#if AA\n  }\n#if VIV_DEBUG\n  if (O.x >= 50.0) {\n     O = vec4(1.0, 0.0, 0.0, 1.0);\n  } else {\n     O = vec4(0.0, 1.0, 0.0, 1.0);\n  }\n#endif\n  \n#endif\n\n#if !VIV_DEBUG\n  O /= float(N*N);                        // average subpixels\n#endif\n}","name":"Image","description":"","type":"image"}]}