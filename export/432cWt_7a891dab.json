{"ver":"0.1","info":{"id":"432cWt","date":"1727888473","viewed":24,"name":"donow","username":"asadeporco","description":"don't know but kind cool","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["donow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy * 2.0 -1.0);\n    uv.x *= iResolution.x / iResolution.y;\n    vec2 uv0 = uv;\n    \n    float iterations = 3.;\n    \n    vec3 color = vec3(0.,0.,0.);\n    \n    for(float i = 0.0; i < iterations; i++){\n        uv = fract(uv * 1.21) -.5;\n    \n        float d = length(uv) * exp(-length(uv0));\n        d = sin(d * 10. * 1. + (iTime / 3.));\n        //d = smoothstep(0.1, .2, d);\n\n\n        color += palette(d * length(uv0) + iTime * .5) / 2.1;\n    }\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// cosine based palette, 4 vec3 params\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(2.0, 1.0, 0.0);\n    vec3 d = vec3(0.50, 0.20, 0.25);\n    return a + b*cos( 6.283185*(c*t+d) );\n}\n\t\t\t\t","name":"Common","description":"","type":"common"}]}