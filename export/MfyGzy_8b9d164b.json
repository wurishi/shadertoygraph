{"ver":"0.1","info":{"id":"MfyGzy","date":"1712912874","viewed":32,"name":"vhssss","username":"alexvr","description":"vhsss","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["vids"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(in vec2 uv)\n{\n    float seed = dot(uv, vec2(71.33, 852.381));\n    return fract(38351.43*sin(14.13*seed));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n\n  //add VHS\n    float u_speed = .5; \n    float streakAmount = 1.0;\n    for (int i = 0; i < 10; ++i) {\n        float t = float(i) / 10.0; // Position of each streak as a fraction\n        float stripePos = mod(uv.y + t + iTime * u_speed, 1.0); // Calculate the moving position of the streak over time\n        streakAmount += smoothstep(0.002, 0.0, abs(stripePos - uv.y)); // Increment the streak amount based on proximity to the current streak\n    }\n\n\n    float trackingLinePos = mod(iTime * 0.1, 1.0); // Position of the tracking line\n    streakAmount += smoothstep(0.5, 0.02, abs(trackingLinePos - uv.y)) * hash(vec2(trackingLinePos, uv.x)) * 2.0; // VHS tracking effect with added noise\n        fragColor*=streakAmount;\n                \n}","name":"Image","description":"","type":"image"}]}