{"ver":"0.1","info":{"id":"3tGBDt","date":"1615248033","viewed":116,"name":"Rounded-n-gon inscribed in a cir","username":"skhiat","description":"Modified n-gon sdf from @iq to have fixed radius","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Distance to a regular n-gon with roundness and inscribed in a circle\n\n// Modified from:\n// https://www.shadertoy.com/view/MtKcWW\n\n#define PI 3.141592653589793238462643f\n\n// radius > 0.0f\n// side >= 3.0f\n// 0.0f < roundness <= 1.0f\nfloat sdNGon( in vec2 p, in float radius, in float side, float roundness_ )\n{\n    float roundness = radius * roundness_;;\n\n    float rCos0 = cos(PI/float(side));\n    float roundValue = rCos0 * roundness;\n\n    float r = radius*rCos0 - roundValue;\n\n    // these 2 lines can be precomputed\n    float an = 6.2831853/float(side);\n    float he = r*tan(0.5*an);\n\n    // rotate to first sector\n    p = -p.yx; // if you want the corner to be up\n    float bn = an*floor((atan(p.y,p.x)+0.5*an)/an);\n    vec2  cs = vec2(cos(bn),sin(bn));\n    p = mat2(cs.x,-cs.y,cs.y,cs.x)*p;\n\n    // side of polygon\n    return length(p-vec2(r,clamp(p.y,-he,he)))*sign(p.x-r) - roundness;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    p *= 2.0;\n\n    float radius = 1.0f + 0.5f*abs(cos(0.25f*iTime));\n    float roundness = clamp(cos(0.5f*iTime), 0.0, 1.0);\n    float sideCount = round(4.0f*abs(cos(2.0*iTime)) + 3.0f);\n\n\tfloat d = sdNGon( p, radius, sideCount, roundness );\n\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-2.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(60.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.02,abs(d)) );\n\n#if 1\n    // Target radius\n    float a = abs(atan(p.y, p.x));\n    col = mix( col, vec3(1.0, 0.0, 0.0),\n                            abs(length(p) - radius) < 0.025f &&\n                            cos(10.0*a) > 0.0f ?\n                                1.0f :\n                                0.0f );\n#endif\n\n\tfragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}