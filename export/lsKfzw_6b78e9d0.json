{"ver":"0.1","info":{"id":"lsKfzw","date":"1528703732","viewed":842,"name":"Voronoi Voronoi","username":"shau","description":"Playing with Voronoi. Using Digital Brain from srtuss [url]https://www.shadertoy.com/view/4sl3Dr[/url] and Perspex Web Lattice by Shane [url]https://www.shadertoy.com/view/Mld3Rn[/url] as starting points","likes":28,"published":1,"flags":96,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by SHAU - 2018\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//-----------------------------------------------------\n\n#define T iTime * 0.2\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec4 sound = texture(iChannel1, vec2(0.5) / iResolution.xy);\n    vec2 uv = UV(fragCoord, iResolution.xy, T);\n\n    vec4 v = texture(iChannel0, fragCoord / iResolution.xy);\n    float c = v.x + v.y + v.z + v.w * sound.x;\n    \n    float scale = 1.0, a = 0.6; \n    v = vec4(0.0);\n    float cc = 0.0;\n    for (int i = 0; i < 4; i++) {\n        v = texture(iChannel0, fragCoord / iResolution.xy * scale);\n        cc += 0.2 * (v.z + v.x + v.y);\n        scale *= 0.3;\n        a *= 0.7;\n    }\n\n\tvec3 pc = vec3(2.0 * sound.y, 0.4 * sound.z, 0.3 * sound.w) * max(0.2, sound.z) * 0.1;\n    pc *= cc * cc * c + 0.1;\n    \n    fragColor = vec4(pc, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dSXRc","filepath":"https://soundcloud.com/countzerointerupt/acid-house-mix","previewfilepath":"https://soundcloud.com/countzerointerupt/acid-house-mix","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Created by SHAU - 2018\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//-----------------------------------------------------\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec4 currentSound = texture(iChannel0, uv / iResolution.xy);\n    \n    float level = currentSound.x;\n    float bass = currentSound.y;\n    float mid = currentSound.z;\n    float treble = currentSound.w;\n    \n    for (int x = 0; x < 512; x++) {\n        vec4 newSound = texelFetch(iChannel1, ivec2(x , 0), 0);\n        level += newSound.x;\n        if (x < 140) bass += newSound.x;\n        if (x > 139 && x < 300) mid += newSound.x;\n        if (x > 299) treble += newSound.x;\n    }\n    \n    level /= 60.0;\n    bass /= 60.0;\n    mid /= 20.0;\n    treble /= 36.0;\n    \n    fragColor = vec4(level, bass, mid, treble);    \n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"// Created by SHAU - 2018\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//-----------------------------------------------------\n\nmat2 rot(float x) {return mat2(cos(x), sin(x), -sin(x), cos(x));}\n\nvec2 UV(vec2 fragCoord, vec2 R, float T) {\n    \n    vec2 uv = fragCoord.xy / R;\n\tuv = (uv - 0.5) * 2.0;\n\tuv.x *= R.x / R.y;\n\n    uv *= 0.6 + sin(T * 0.1) * 0.4;\n\tuv *= rot(sin(T * 0.3));\n\tuv += T * 0.4;\n    \n    return uv;\n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Created by SHAU - 2018\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//-----------------------------------------------------\n\n#define T iTime\n\nvec2 hash22(vec2 p) { \n    float n = sin(dot(p, vec2(41, 289)));\n    p = fract(vec2(262144, 32768) * n); \n    return sin(p * 6.283185) * 0.35 + 0.5; \n}\n\n//Optimisation from Shane\nfloat voronoi(vec2 p){\n    \n\tvec2 g = floor(p), o; p -= g;\n\tvec3 d = vec3(1);\n    \n\tfor(int y = -1; y <= 1; y++){\n\t\tfor(int x = -1; x <= 1; x++){\n            \n\t\t\to = vec2(x, y);\n            o += hash22(g + o) - p;\n            \n            d.z = max(abs(o.x), abs(o.y));\n            \n            d.y = max(d.x, min(d.y, d.z));\n            d.x = min(d.x, d.z);           \n\t\t}\n\t}\n\t\n    return max(d.y / 1.0 - d.x * 1.0, 0.0) / 1.0;\n}\n\n//modified from srtuss\nvec2 scaledVoronoi(vec2 uv, float scale, float a) {\n    float v1 = voronoi(uv * scale + 5.0);\n\tfloat v2 = voronoi(uv * scale * 0.5 + 50.0 + iTime * 0.2);\n\tfloat va = 1.0 - smoothstep(0.0, 0.1, v1);\n\tfloat vb = 1.0 - smoothstep(0.0, 0.08, v2);\n\tfloat g = a * pow(va * (0.5 + vb), 2.0);    \n    v1 = 1.0 - smoothstep(0.0, 0.3, v1);\n    return vec2(a * v1, g);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    \n    vec4 sound = texture(iChannel0, vec2(0.5) / iResolution.xy);\n    vec2 uv = UV(fragCoord, iResolution.xy, T);\n\n    float scale = 1.0, a = 0.6;    \n    vec4 v = vec4(0.0);\n    for (int i = 0; i < 4; i++) {\n        vec2 sv = scaledVoronoi(uv, scale, a);\n        v[i] = sv.x + sv.y * sound.z;\n        scale *= 3.0;\n        a *= 0.7;\n    }\n    \n    fragColor = v;\n}\n\n","name":"Buf B","description":"","type":"buffer"}]}