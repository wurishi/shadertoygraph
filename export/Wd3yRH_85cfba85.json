{"ver":"0.1","info":{"id":"Wd3yRH","date":"1600398471","viewed":243,"name":"rgb shift + shake","username":"blue1784","description":"as title","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash22(vec2 p)\n{\n    p = vec2( dot(p,vec2(127.1,311.7)),\n              dot(p,vec2(269.5,183.3)));\n\n    return -1.0 + 2.0 * fract(sin(p)*43758.5453123);\n}\nfloat perlin_noise(vec2 p)\n{\n    vec2 pi = floor(p);\n    vec2 pf = p - pi;\n\n    vec2 w = pf * pf * (3.0 - 2.0 * pf);\n\n    return mix(mix(dot(hash22(pi + vec2(0.0, 0.0)), pf - vec2(0.0, 0.0)), \n                   dot(hash22(pi + vec2(1.0, 0.0)), pf - vec2(1.0, 0.0)), w.x), \n               mix(dot(hash22(pi + vec2(0.0, 1.0)), pf - vec2(0.0, 1.0)), \n                   dot(hash22(pi + vec2(1.0, 1.0)), pf - vec2(1.0, 1.0)), w.x),\n               w.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float noiseScale = .05;\n    float threshold = noiseScale * .2;\n    float frequency = 8.;\n    float noiseX = noiseScale * perlin_noise(vec2(iTime * frequency, 2));\n    float noiseY = noiseScale * perlin_noise(vec2(iTime * frequency, 3));\n    float noiseZ = noiseScale * perlin_noise(vec2(iTime * frequency, 4));\n    float noiseW = noiseScale * perlin_noise(vec2(iTime * frequency, 5));\n    noiseX = noiseX > threshold ? noiseX : 0.;\n    noiseY = noiseY > threshold ? noiseY : 0.;\n   \tnoiseZ = noiseZ > threshold ? noiseZ : 0.;\n    noiseW = noiseW > threshold ? noiseW : 0.;\n    vec2 noise = vec2(noiseX, noiseY);\n    vec2 shake = vec2(noiseZ, noiseW);\n    uv += shake;\n    float r = texture(iChannel0, uv - noise).r;\n    float g = texture(iChannel0, uv).g;\n    float b = texture(iChannel0, uv + noise).b;\n\n\n    // Output to screen\n    fragColor = vec4(r, g, b,1.0);\n}","name":"Image","description":"","type":"image"}]}