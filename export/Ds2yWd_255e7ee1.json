{"ver":"0.1","info":{"id":"Ds2yWd","date":"1688346491","viewed":107,"name":"blinking stars without pixelatio","username":"boytoy","description":"every star you see is going to die one day...","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"blinking stars\" by boytoy. https://shadertoy.com/view/cd2yWd\n// 2023-07-03 01:07:46\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    const vec2 pixels = vec2(320.,240.);\n    \n    fragColor = texture(iChannel0,uv) ;\n    fragColor.rgb += (1.-uv.y)*vec3(0.043,0.020,0.122) ;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float random(vec2 uv) {\n    return fract(sin(dot(uv.xy,\n        vec2(12.9898,78.233))) *\n            43758.5453123);\n}\n\nfloat noise(vec2 uv) {\n    vec2 uv_index = floor(uv);\n    vec2 uv_fract = fract(uv);\n\n    // Four corners in 2D of a tile\n    float a = random(uv_index);\n    float b = random(uv_index + vec2(1.0, 0.0));\n    float c = random(uv_index + vec2(0.0, 1.0));\n    float d = random(uv_index + vec2(1.0, 1.0));\n\n    vec2 blur = smoothstep(0.0, 1.0, uv_fract);\n\n    return mix(a, b, blur.x) +\n            (c - a) * blur.y * (1.0 - blur.x) +\n            (d - b) * blur.x * blur.y;\n}\n\nfloat fbm(vec2 uv) {\n    float octaves = 5.;\n    float amplitude = 0.5;\n    float frequency = 7.0;\n\tfloat value = 0.0;\n\t\n    for(float i = 0.; i < octaves; i++) {\n        value += amplitude * noise(frequency * uv );\n        amplitude *= 0.5;\n        frequency *= 2.0;\n    }\n    return value;\n}\n\nfloat fbm(float u){return fbm(vec2(u,0.));}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 lframe  = texture(iChannel0,uv).rgb;\n    vec3 pattern = vec3(0.);\n    float decay = pow(0.1,1./iFrameRate);\n    pattern += ( random(fract(.11111*floor(20.*iTime))+uv) > 0.9) ? 1.0 : 0.;\n    vec3 color = max(lframe*decay,pattern);\n\n    \n    fragColor.rgb = color;\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    const vec2 pixels = vec2(100.,1000.);\n    //uv = floor(uv*pixels + 0.5)/pixels;\n    \n    float avg_value = 0.; float N = 20.; float TPI = 6.28; float d = 1./iResolution.x;\n    for(float i = 0.; i<N;i++){\n         vec2 sample_pos = uv + d * vec2(cos(i*TPI/N),sin(i*TPI/N));\n         avg_value += texture(iChannel0,sample_pos).r;\n    } avg_value/=N;\n\n    fragColor = vec4(vec3(0.),1.);\n    \n    \n    vec3 lframe  = texture(iChannel1,uv+vec2(0.,0.0005)).rgb;\n    vec3 pattern = (avg_value > 0.9) ? vec3(1.) : vec3(0.);\n    \n    float decay = pow(0.01,1./iFrameRate);\n    \n    vec3 color = max(lframe*decay,pattern);\n    \n    fragColor.rgb += color ;\n    \n}","name":"Buffer B","description":"","type":"buffer"}]}