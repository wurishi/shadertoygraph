{"ver":"0.1","info":{"id":"WsSSDV","date":"1554916915","viewed":301,"name":"M87 Event horizon ","username":"angelo12","description":"As requested, still gotta work out the brightness dip on the inner ring. ","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["noise","blackholes","m87"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2D(vec2 val){\n    val = vec2(dot(val, vec2(127.1, 311.7)),\n               dot(val, vec2(242.51, 184.2)));\n    \n    float scale = 182364.0;\n    return 1.0 -  2.0 * fract(sin(val) * scale);\n}\n\nfloat random(vec2 val){\n    return fract(sin(dot(vec2(123.02, 274.73), val))* 120452.0);\n}\n\nfloat noise(vec2 p){\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n    vec2 i = floor( p + (p.x + p.y) * K1);\n\n    vec2 a = p - i + (i.x + i.y)*K2;\n    vec2 o = step(a.yx, a.xy);\n    vec2 b = a - o + K2;\n    vec2 c = a - 1.0 + 2.0*K2;\n\n    vec3 h = max( 0.5 - vec3(dot(a,a), dot(b,b), dot(c,c)), 0.0);\n\n    vec3 n = h*h*h*h*vec3(dot(a, random2D(i)), dot(b, random2D(i + o)), dot(c, random2D(i+1.0)));\n\n    return dot(n, vec3(100.0));\n}\n\nfloat simplex(vec2 p, int octaves){\n    mat2 m = mat2(1.6, 1.2, -1.2, 1.6);\n\n    float f = 0.0;\n    float scale = 1.0;\n    for(int i = 0; i < octaves; i++){\n        scale /= 2.0;\n        f += scale*noise(p);\n        p *= m;\n    }\n\n    return 0.5 + 0.5*f;\n}\n\nvec3 gas_halo_center(vec2 uv, float size){\n    vec3 orange =  vec3(0.2, 0.05, 0.0);\n    float r = smoothstep(size, size + 0.12f, length(uv));\n    vec3 ring_gradient = mix(orange * 2.0f, vec3( 1.0, 1.0, 0.5), -((uv.y - 0.1)  * 5.5)); \n    // vec3 ring_gradient = mix(orange, vec3( 1.0, 1.0, 0.5), length( (size - 0.1) - vec2(p.x, p.y * 0.7f - 0.04f)));\n    return  (1.0  - r ) * 1.0f *  ring_gradient;\n}\n\nvec3 star_background(vec2 uv){\n    vec3 result, col;\n    vec2 p, id, pf, g;\n    float size;\n    float r = 0.0;\n    vec2 baseGrid = uv + 0.5f;\n\n    //grid 1: Background super small stars (~1 pixels)\n    p = baseGrid;\n    size = 350.0;\n    p *= vec2(size);\n    id = floor(p);\n    pf = fract(p);\n    g  = pf - vec2(0.5);\n    \n    r = smoothstep(0.2, 0.8, 0.9 - length(uv) );\n    //col += vec3(1.0) * 200.0/size *(1.0 - smoothstep(r - 0.001, r * 2.0, length(g)));\n\tresult += vec3(1.0)*pow(random(uv),30.0) * r; \n    \n    //grid 2: big orange stars (~6 pixels)\n    p = baseGrid;\n    size = 90.0;\n    p *= vec2(size);\n    id = floor(p);\n    pf = fract(p);\n    g  = pf - vec2(0.45, 0.6);\n    r = 0.13 * random(id) * step(0.92, random(vec2(random(id), random(vec2(id.x, id.y)))));\n    r *= smoothstep(0.2, 0.8, 0.99 - length(uv) );\n    col = mix(vec3(1.0, 0.4,0.0), vec3(1.0), 0.3 + exp(-30.0*length(g)));\n    result += col * 140.0/size *(1.0 - smoothstep(r - 0.001, r * 2.0, length(g)));\n\n    // //grid 3: medium blue stars (~4 pixels)\n    p = baseGrid;\n    size = 120.0;\n    p *= vec2(size);\n    id = floor(p);\n    pf = fract(p);\n    g  = pf - vec2(0.45, 0.6);\n    r = 0.11 * random(id) * step(0.92, random(vec2(random(id), random(vec2(id.x, id.y)))));\n    r *= smoothstep(0.2, 0.8, 1.0 - length(uv) );\n\n    col = mix(vec3(0.3, 0.6,1.0), vec3(1.0), exp(-30.0*length(g)));\n    result += col * 140.0/size *(1.0 - smoothstep(r - 0.001, r * 2.0, length(g)));\n\n    return result;\n}\n\nvec3 gas_halo_outer(vec2 uv, float size, int density){\n    float halo_mask;\n    vec3 col = vec3(0.0f);\n    vec3 red_orange =  vec3(1.0, 0.3, 0.1) * 0.8f;\n    for(int i = 0; i < density; ++i){\n        float offset = random(vec2(i));\n        float r = size + (size / 2.0f) * cos(atan(uv.y + offset * 0.2f, uv.x)* (3.0 ) + radians(offset * 360.0f));\n        halo_mask = smoothstep(r, r + 0.35f, length(uv));\n        col += red_orange * (1.0 - halo_mask - simplex(uv, 5)) *  1.0f / float(density);\n    }\n    //I add the stars here since the halo mask is readily available\n    col += (halo_mask) * (star_background(uv));\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float time = iTime * 1.0;\n    vec3 col = vec3(0.0f);\n    vec3 orange =  vec3(0.2, 0.05, 0.0);\n    float r, size;\n    vec2 p  = fragCoord / iResolution.y;\n    p -= vec2(0.9f, 0.5f); // AR ugly hack\n     \n  \n\n    //Outer gas halo\n    size = 0.27;\n    col += gas_halo_outer(p, size, 6);\n\n\n    //Center strong gas halo\n    col += gas_halo_center(p, size/ 2.0); \n\n    //Event Horizon\n    size /= 13.0f;\n    r = smoothstep(size, size + 0.07f, length(vec2(p.x, p.y *  1.0) ));\n    col *= r;\n    col += (1.0f - r) * orange;\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}