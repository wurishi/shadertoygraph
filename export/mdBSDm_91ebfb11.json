{"ver":"0.1","info":{"id":"mdBSDm","date":"1670452714","viewed":83,"name":"Line-Line Intersection __","username":"Envy24","description":".","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["line","intersection"],"hasliked":0,"parentid":"dd2XzR","parentname":"Circle-Line Intersection"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define UNIT                      (  2.0 / iResolution.y  )\n#define SMAA(x)                   ( smoothstep(UNIT, 0., x) )\n\n/* https://www.shadertoy.com/view/DdsGDj */\n#define MOUSE_OFFSET ( iMouse.z > 0. ? iMouse.xy - iResolution.xy * 0.5 : vec2(0) )\nvec2 map_to_centered_ndc(in vec2 SC, in float scale, in vec2 origin, in bool mouse_drag)\n{\n    vec2 M = MOUSE_OFFSET * (mouse_drag == true ? 1. : 0.);\n    return ((2. * (SC - M) - iResolution.xy) / iResolution.y) * scale + origin;\n}\n\nfloat diskSDF_L2(in vec2 NDC, in vec2 C, in float r) { return length(C - NDC)-r; }\n\nfloat lineSDF_L2(in vec2 NDC, in float k, in float m, in float r)\n{\n    float x = (k*(NDC.y-m)+NDC.x) / (k*k + 1.);\n    vec2 C = vec2(x, k*x+m);\n    return length(C - NDC) - r;\n}\n\nfloat line_line_intersection(float c, float d, float k, float m)\n{\n    // if k == c && d != m then lines are parallel to each other -> no solutions\n    // if k == c && d == m then lines are euqal -> infinitly many solutions\n    return (d - m) / (k - c);\n}\n\nvoid mainImage( out vec4 O, in vec2 SC )\n{\n    vec2 NDC = map_to_centered_ndc(SC, 1., vec2(0), true);\n    \n    vec3 color = vec3(1);\n    \n    float c = -sin(iTime*0.5), d = -sin(iTime*0.25)*0.25;\n    float k = sin(iTime), m = sin(iTime*0.5)*0.5;\n    \n    color = mix( color, vec3(1,0,0), SMAA(lineSDF_L2(NDC, c, d, 0.)) );\n    color = mix( color, vec3(0,1,0), SMAA(lineSDF_L2(NDC, k, m, 0.)) );\n    \n    float root = line_line_intersection(c, d, k, m);\n    color = mix( color, vec3(1,0,1), SMAA(diskSDF_L2(NDC, vec2(root, c*root+d), 0.02)) );\n    color = mix( color, vec3(0,0,1), SMAA(diskSDF_L2(NDC, vec2(root, k*root+m), 0.01)) );\n\n    O = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}