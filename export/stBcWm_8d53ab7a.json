{"ver":"0.1","info":{"id":"stBcWm","date":"1649796165","viewed":125,"name":"voronoiBasicTraining","username":"RedWool","description":"trying to make voronoi","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RosyRed vec3(1, .2, .2)\n#define BlaseBlue vec3(.25, .55, .95)\n\n//Get random values\nfloat random(float v){\n    return fract(sin(v)*382.493);\n}\n\n//Smooth randomness\nfloat noise (float t){\n   float i = floor(t);\n   float f = fract(t);\n   \n   return mix(random(i), random(i+1.), f);\n}\n\n//Get random vec2\nvec2 random2d(in vec2 uv)\n{\n    return 2938.31 * sin(vec2(dot(uv, vec2(838.29, -937.3)*39.2), dot(uv, vec2(69.49, 299.30))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 10.;\n    \n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n    float less = 3.;\n    vec2 point;\n    \n    //Get other voronoi points\n    for (int x = -1; x <= 1; x++)\n    {for (int y = -1; y <= 1; y++)\n    {\n        vec2 n = vec2(x, y);\n        vec2 r = sin(random2d(i+n)+iTime)*.5+.5;\n        \n        float l = length(r + n - f);\n        \n        if(l < less)\n        {\n            less = l;\n            point = r;\n        }\n    }\n    }\n    \n    float pct = noise(point.x + point.y + iTime);\n\n    // Switch between red and blue\n    vec3 col = pct * RosyRed + (1. - pct) * BlaseBlue;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}