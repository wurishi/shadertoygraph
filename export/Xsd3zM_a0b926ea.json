{"ver":"0.1","info":{"id":"Xsd3zM","date":"1448643019","viewed":349,"name":"Screen Flicker","username":"chipbell4","description":"Simple Screen Flicker effect","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["flicker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat randInRange(vec2 range, vec2 seed) {\n    float randBetweenZeroAndOne = (rand(seed) + 1.) / 2.;\n    \n    return range.x + randBetweenZeroAndOne * (range.y - range.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n\t// The \"strength\" of the flicker is randomly based on time\n    float flickerPeriod = randInRange(vec2(1.5, 3.0), vec2(iTime, iTime));\n    float noiseScale = 0.01;\n    if(fract(iTime / flickerPeriod) > 0.95) {\n        noiseScale = 0.2;\n    }\n    \n    // A seed for the random number generation\n\tvec2 seed = vec2(iTime, uv.y);\n    \n    // Add the texture, but with an x-based offset to provide some CRT-style effect\n    uv.x += randInRange(vec2(-0.01, 0.01), seed);\n\tfragColor = texture(iChannel0, uv);\n    \n    // Add some noise to generate the flicker based on the time-based noise scale and a seed\n    float noise = randInRange(vec2(0.0, noiseScale), seed);\n    fragColor.xyz += vec3(noise, noise, noise);\n    \n}\n\n","name":"","description":"","type":"image"}]}