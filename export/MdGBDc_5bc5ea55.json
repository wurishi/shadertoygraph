{"ver":"0.1","info":{"id":"MdGBDc","date":"1558882121","viewed":102,"name":"Sun over the faces of waters","username":"AlphaRogue","description":"Red sun over the sea.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","sea","sun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RADIUS .1\n#define OFFSET .0015\n#define RED vec4(.6, .09, .08, 1.)\n#define BLUE vec4(.11, .15, .2, 1.)\n#define WHITE vec4(1., .98, .9, 1.)\n\nvec4 aalias(float radius, float dist, vec4 bg, vec4 color, float ratio){\n    return mix(bg, color, smoothstep(radius, radius * ratio, dist));\n}\n\nfloat offset(float pos) { return sin(iTime + pos * 100.); }\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 lM = vec2(max(iResolution.x, iResolution.y), min(iResolution.x, iResolution.y));\n    vec2 pos = (fragCoord -.5 * lM) / lM.x;\n    float time = sin(iTime / 2.) * .005;\n    \n    if (pos.y < 0.) {\n        pos.y += time;\n        float ratio = min(1., -pos.y * 20.);\n      \tpos.x += offset(pos.y) * (OFFSET + .0045 * ratio);\n        pos.y *= 1.6 * ratio;\n     \tfloat dist = length(pos);\n      \tif (dist < RADIUS) fragColor = aalias(RADIUS, dist, BLUE, mix(BLUE, RED,ratio), .95 - .1 * ratio);\n        else fragColor = BLUE;\n    }\n    else {\n        pos.y += time;\n      \tpos.x += offset(pos.y) * OFFSET;\n      \tfloat dist = length(pos);\n        if (dist < RADIUS) fragColor = aalias(RADIUS, dist, WHITE, RED, .95);\n        else fragColor = WHITE;\n    }\n}","name":"Image","description":"","type":"image"}]}