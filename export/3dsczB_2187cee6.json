{"ver":"0.1","info":{"id":"3dsczB","date":"1585058283","viewed":51,"name":"Chapter","username":"Huszky","description":"asd","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 heightMap = texture(iChannel0, uv);\n    \n    fragColor = vec4(0.05 + heightMap/2.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float N(vec2 fragCoord, vec2 p)\n{\n    return texture(iChannel1, (fragCoord + p) / iResolution.xy).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float a = (N(fragCoord, vec2(-1,0)) +\n               N(fragCoord, vec2(1,0)) +\n               N(fragCoord, vec2(0,-1)) +\n               N(fragCoord, vec2(0,1))) / 2.0\n        - texture(iChannel0, fragCoord / iResolution.xy).x;\n        \n    a *= damping;\n    \n    if(iMouse.z > 0.0 && length(iMouse.xy - fragCoord) < cursorSize)\n    {\n        a = amplitude;\n    }    \n    \n    fragColor = vec4(a);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float N(vec2 fragCoord, vec2 p)\n{\n    return texture(iChannel1, (fragCoord + p) / iResolution.xy).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float a = (N(fragCoord, vec2(-1,0)) +\n               N(fragCoord, vec2(1,0)) +\n               N(fragCoord, vec2(0,-1)) +\n               N(fragCoord, vec2(0,1))) / 2.0\n        - texture(iChannel0, fragCoord / iResolution.xy).x;\n        \n    a *= damping;\n    \n    if(iMouse.z > 0.0 && length(iMouse.xy - fragCoord) < cursorSize)\n    {\n        a = amplitude;\n    }    \n    \n    fragColor = vec4(a);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define damping 0.95\n#define cursorSize 10.0\n#define amplitude -10.0","name":"Common","description":"","type":"common"}]}