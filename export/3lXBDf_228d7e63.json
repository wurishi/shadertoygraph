{"ver":"0.1","info":{"id":"3lXBDf","date":"1597857976","viewed":608,"name":"pasoblig","username":"kloumpt","description":"bling bling","likes":1,"published":3,"flags":98,"usePreview":0,"tags":["paso","doble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"lljGDG","filepath":"https://soundcloud.com/user-777419262/bien-baladee","previewfilepath":"https://soundcloud.com/user-777419262/bien-baladee","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float scene(vec3 p, float t) {\n    float d = 1000.0;\n    \n    p = vec3(rot(p.xz, t), p.y).xzy;\n    p = vec3(rot(p.xy, t), p.z).xyz;\n    \n    d = min(d, sdBox(p, vec3(0.5) / (1.0 - cos(t / 4.0 * PI) * 0.5)));\n    \n    return d;\n}\n\nvec3 trace(vec2 uv, float t) {\n    vec3 p = vec3((uv.xy * 2.0 - 1.0)* iResolution.xy / iResolution.yy, -2.0);\n    vec3 d = normalize(vec3((uv.xy * 2.0 - 1.0)* iResolution.xy / iResolution.yy, 2.0));\n    \n    for (int i=0; i<16; i++) {\n    \tp += scene(p, t) * d;   \n    }\n    \n    vec3 color = texture(iChannel1, p.xy).rgb;\n    color*= step(-0.01, -scene(p, t));\n    \n    return color;\n}\n    \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n    float t = iTime / 60.0 * BPM;\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 color_bg = abs(fract(uv.xyy + t / 8.0) * 2.0 - 1.0);\n    color_bg = vec3(fract(color_bg.x / 1.312), fract(color_bg.y / 2.0  + color_bg.x / 2.0), fract(-color_bg.x * color_bg.y));\n    color_bg = texture(iChannel2, uv.xy / 10.0 + color_bg.xy).rgb;\n    \n    vec3 color = color_bg;\n    \n    vec3 color_scene = trace(uv, t);\n    \n    color = mix(color, color_scene, step(0.01,length(color_scene)));\n    \n    color_bg = texture(iChannel2, uv.xy).rgb;\n    color = clamp(color, color_bg - 16.0 / 255.0, color_bg + 16.0 / 255.0);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float t = iTime / 60.0 * BPM;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 color = texture(iChannel0, uv).rgb;\n    \n    vec3 color_st = texture(iChannel1, (uv.xy - 0.5) / 1.75 + 0.5 ).rgb;\n    color_st = texture(iChannel1, (uv.xy - 0.5) / 1.75 + 0.5 + 0.07 * rot(vec2(0.0, length(color_st)), t / 16.0)).rgb;\n    \n    \n    color_st = abs(fract(color_st * 4. - t / 4.0) * 2.0 - 1.0);\n    \n    color = mix(color, color_st * (1.0 - normalize(color)), step(color.b, color_st.b));\n    \n    \n    \n    fragColor = vec4(color,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define BPM 45.0\n\n\n\nfloat sdPlane( vec3 p )\n{\n\treturn p.y;\n}\n\nfloat sdSphere( vec3 p, float s )\n{\n    return length(p)-s;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n    vec3 d = abs(p) - b;\n    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\n#define PI 3.141592\n\n\nvec2 rot(vec2 p, float r) {\n    return vec2(\n        cos(r * PI) * p.x - sin(r * PI) * p.y,\n        cos(r * PI) * p.y + sin(r * PI) * p.x \n    );\n}\n\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"float scene(vec3 p, float t) {\n    float d = 1000.0;\n    \n    d = min(d, sdBox(p - vec3(-2.0, 1.0 - pow(abs(fract(t / 16.0) * 2.0 - 1.0), 3.0), 0.0), vec3(0.5, 0.5, 0.125)));\n    d = min(d, sdBox(p - vec3(+2.0, 1.0 - pow(abs(fract(t / 4.0) * 2.0 - 1.0), 3.0), 0.0), vec3(0.5, 0.75, 0.125)));\n    d = min(d, sdBox(p - vec3(-1.0, 1.0 - pow(abs(fract(t * 1.0) * 2.0 - 1.0), 3.0), 0.0), vec3(0.25, 0.75, 0.125)));\n    d = min(d, sdBox(p - vec3(+1.0, 1.0 - pow(abs(fract(t * 2.0) * 2.0 - 1.0), 3.0), 0.0), vec3(0.125, 1.0, 0.125)));\n    \n    p = vec3(rot(p.xz, t), p.y).xzy;\n    p = vec3(rot(p.xy, t), p.z).xyz;\n    \n    d = min(d, sdBox(p, vec3(0.5) / (1.0 - cos(t / 4.0 * PI) * 0.5)));\n    \n    return d;\n}\n\nvec3 trace(vec2 uv, float t) {\n    vec3 p = vec3((uv.xy * 2.0 - 1.0)* iResolution.xy / iResolution.yy, -2.0);\n    vec3 d = normalize(vec3((uv.xy * 2.0 - 1.0)* iResolution.xy / iResolution.yy, 2.0));\n    \n    for (int i=0; i<4; i++) {\n    \tp += scene(p, t) * d;   \n    }\n    \n    vec3 color = texture(iChannel0, uv.xy).rgb;\n    color*= step(-0.01, -scene(p, t));\n    \n    return color;\n}\n    \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n    float t = iTime / 60.0 * BPM;\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 color_bg = abs(fract(uv.xyy - t / 8.0) * 2.0 - 1.0);\n    color_bg = vec3(fract(color_bg.x / 1.312), fract(color_bg.y / 2.0  + color_bg.x / 2.0), fract(-color_bg.x * color_bg.y));\n    color_bg = texture(iChannel1, uv.xy / 10.0 + color_bg.xy).rgb;\n    \n    vec3 color = color_bg;\n    \n    vec3 color_scene = trace(uv, t);\n    \n    color = mix(color, abs(fract(color_scene + 4.0 * color_scene * color - t / 4.0) * 2.0 - 1.0), step(0.01,length(color_scene)));\n    \n    color_bg = texture(iChannel1, uv.xy).rgb;\n    color = clamp(color_bg, color - 4.0 / 255.0, color + 4.0 / 255.0);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Buffer C","description":"","type":"buffer"}]}