{"ver":"0.1","info":{"id":"4fdcz2","date":"1730906102","viewed":51,"name":"Infinite Sierpinsky Triangle","username":"Rizzi001","description":"Infinite zoom into the sierpinsky triangle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","triangle","zoom","infinite","infinity"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvec2 rotateVec(vec2 v, float b) {\n  return vec2(cos(b) * v.x + sin(b) * v.y, cos(b) * v.y - sin(b) * v.x);\n}\n\nbool inSierpinsky(vec2 pos, float t) {\n  int counter = 0;\n  while(pos.x + pos.y < 1.0 && counter < int(12.0 + t * 4.0)) {\n    pos = fract(pos * 2.0);\n    counter ++;\n  }\n  if(pos.x + pos.y < 1.0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfloat timedSierpinsky(vec2 pos, float t) {\n  float maxi = max(iResolution.x, iResolution.y);\n  pos = (pos - iResolution.xy/2.0) / maxi / 2.0;\n  pos /= pow(2.0, t * 4.0);\n  pos = rotateVec(pos, t * 2.0943951);\n  pos.x *= 0.8660254;\n  pos += 1.142857143 * vec2(1.0, 1.0)/2.0;\n  pos.x -= pos.y * 0.5;\n  return float(inSierpinsky(pos, t));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 pos = gl_FragCoord.xy;\n  float t = fract(iTime / 10.0);\n\n  float sum = timedSierpinsky(pos, t);\n\n  fragColor = vec4(sum) * (1.0 - 0.1 * fract(t * 4.0));\n}","name":"Image","description":"","type":"image"}]}