{"ver":"0.1","info":{"id":"NltGzM","date":"1635877862","viewed":63,"name":"Mandelbrot-simple","username":"backhoff","description":"Simple Mandelbrot visualization.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","trippy","easy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalize position\n    vec2 uv = (2.0*fragCoord.xy-iResolution.xy)/min(iResolution.y,iResolution.x);\n    \n    // interesting points\n    //float x0 = 0.42884;\n    //float y0 = -0.231345;\n    float x0 = -0.761574;\n    float y0 = -0.0847596;\n    \n    uv /= 1.0 * exp(6.0 * (1.0 + sin((iTime + 23.5)/ 5.0)));\n    uv = vec2((uv.x + x0), (uv.y + y0) );\n    \n    // mandelbrot algo\n    int max_it = 300;\n    vec2 z = vec2(0.0, 0.0);\n    int cnt = 0;\n    for (int i = 0; i < max_it && dot (z,z) < 4.0; i++)\n    {\n        float x = z.x * z.x - z.y * z.y + uv.x;\n        z.y = 2.0 * z.x * z.y + uv.y;\n        z.x = x;\n        cnt += 1;\n    }\n    \n    // set the default funky colors and obscure them\n    // using madelbrot result depending on how quickly\n    // they exploded (if)\n    vec3 col;\n    col = 0.75 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n     if (cnt < max_it - 1) \n    { \n        col  *= (float(cnt) / (float(max_it) - 1.0));\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}