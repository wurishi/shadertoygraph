{"ver":"0.1","info":{"id":"M3V3Rw","date":"1717472023","viewed":64,"name":"Primordial Whirlpool","username":"GarlicGraphix","description":"Space Bar to reset Image\n\nAdd red with mouse","likes":8,"published":1,"flags":48,"usePreview":0,"tags":["flow","automata","whirlpool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\nconst float KEY_SP    = 32.5/256.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 m = iMouse.xy/iResolution.xy;\n    \n    vec2 p = 1.0/iResolution.xy;\n    \n    vec2 vr = vec2(0.0);\n    vec2 v = vec2(0.);\n    \n    v = uv*2.-1.;\n    float r = random(uv+iTime);\n    if (r > 1.-abs(v.y)) {\n        vr.x += 1.;\n    }\n    if (v.y > 0.) {\n        vr.x *= -1.;\n    }\n    r = random(uv*2.1421+iTime);\n    if (r > 1.-abs(v.x)) {\n        vr.y += 1.;\n    }\n    if (v.x < 0.) {\n        vr.y *= -1.;\n    }\n    vec3 b = vec3(0.0);\n    b += texture(iChannel0, fract(uv - vr*p)).rgb;\n    if (iFrame <= 10 || texture( iChannel2, vec2(KEY_SP, 0.5) ).x >= 0.5) {\n        vec3 te = texture(iChannel1, uv).rgb;\n        if (random(uv) < 0.4) {\n            b = te.r*vec3(0.4, 0.1, 0.8);\n        } else if (random(uv) < 0.6) {\n            b = te.r*vec3(.5, 0.5, 0.9);\n        } else {\n            b = vec3(0.0);\n        }\n         \n        \n    }\n    if (length(m-uv) < 0.005) {\n        b = vec3(random(uv+iTime), 0.0, 0.0);\n    }\n    fragColor = vec4(b ,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}