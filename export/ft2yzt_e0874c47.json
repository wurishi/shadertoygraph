{"ver":"0.1","info":{"id":"ft2yzt","date":"1650223431","viewed":64,"name":"test_THT","username":"hthieu","description":"test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//THT test\n\nfloat sdfBox(vec2 uv, float r, vec2 o){\n    return length(uv-o) - r;\n}\n\nfloat sdfCircle(vec2 uv, float r, vec2 o){\n    return length(uv-o) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = vec3(0.5) + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    uv -=.5;\n    \n    if (iResolution.y < iResolution.x) {\n        uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n    } else {\n        uv.y *= iResolution.y/iResolution.x; // fix aspect ratio\n    }\n    vec2 o = 0.2*vec2(cos(iTime*2.),sin(iTime*2.)); \n    float d = sdfCircle(uv, 0.2, o) +.02*cos(atan((uv.y-o.y)/(uv.x-o.x))*20.);\n    vec3 col;\n    //if ((d > 0.01) || (d < -0.01)) {\n    if (d > 0.) {\n        col = vec3(1.);\n    } else {\n        col = vec3(0.5) + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,0);\n}","name":"Image","description":"","type":"image"}]}