{"ver":"0.1","info":{"id":"XsVyRV","date":"1522637161","viewed":117,"name":"Mistakes... burn!","username":"raxter","description":"Was an attempt to be a helix ray march.... it failed... added modulo, Ponk said add some flame.... fire happened","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.141592;\nmat2 rot(float a) { a = PI/180.*a; float s = sin(a); float c = cos(a); return mat2(c,s,-s,c);}\n\n\nfloat sphere(vec3 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat cyl(vec3 p, vec3 c)\n{\n    return length(p.xz - c.xy) - c.z;\n}\n\nfloat box(vec3 p, vec3 b) // ??\n{\n    vec3 d = abs(p) - b;\n    return min(.0, max(max(d.x, d.y), d.z)) - length(max(d, .0));\n}\n    \n\nfloat sdf(vec3 p)\n{\n    //return sphere(p, 1.);\n\t//return box(p, vec3(1.,1.,1.));\n    vec3 o = p;\n    o = (p - vec3(0,0,7));\n \to = mod(o, vec3(10, 10,10));\n    //o.yz *= rot((p.y + iTime*4.)*30.);   \n    //o.xz *= rot((p.y + iTime*2.234)*20.);\n    o.xz *= rot((p.y - iTime*2.234)*20.);\n\n\treturn cyl(o - .0*vec3(mod(iTime,1.),0,0), vec3(1.,2.,2.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv *= 2.;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    //fragColor = vec4(col,1.0);\n    \n    vec3 dir = normalize(vec3(uv, 1.));\n    float d = .0;\n    vec3 eye = vec3(-4,-3,-10. + 0.*iTime);\n    \n    float maxDist = 200.;\n    int maxItt = 20;\n    for (int i = 0 ; i < maxItt ; i++)\n    {\n        float id = sdf(eye + dir * d);\n        \n        if (id < 0.001)\n        {\n            break;\n        }\n        \n        d += id;\n        \n        if (d > maxDist)\n        {\n            d = maxDist;\n        \tbreak;\n        }\n    }\n    \n    float f = d/maxDist;\n    f = 1.-pow(1.-mod(f+iTime/8., 1.),0.7);\n    vec3 c = mix(vec3(0.3, 0.4,0.6)/**pow((1.+sin(iTime/40.))/2.,0.1)*1.*/, vec3(0.2, 0.55, 0.07)/**(1.+sin((iTime+0.125)/6.))/2.*1.*/, (f-0.5)*1.5 + 0.5);\n    \n    float l = 0.72;\n    if (f > l)\n        fragColor = mix(vec4(1,0,0,1), vec4(1,1,0.,1), (f-l)*1./(1.-l));\n        //fragColor = vec4(0,0,0,1);\n//else if (f > 0.86)\n    //    fragColor = vec4(0,0,0,1);    \n    \n    else\n\t    fragColor = vec4(c,1);    \n    //fragColor = vec4(uv,f,1);\n\n    \n}","name":"Image","description":"","type":"image"}]}