{"ver":"0.1","info":{"id":"tlBGRc","date":"1563405228","viewed":274,"name":"lines and mirrors","username":"theepicsnail","description":"aasdf","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["asdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 cossin(float a) { return vec2(cos(a),sin(a)); }\nmat2x2 rotmat(float a) {\n    vec2 cs = cossin(a);\n    return mat2x2(cs.x, -cs.y, cs.y, cs.x);\n}\n\nfloat hash(vec2 v) {\n    return fract(sin(dot(v, vec2(15.1345, 7823.949)))*1903.34);\n}\n\n\nfloat minMirrorDist = 1000.;\nvec2 mirror(vec2 p, vec2 c, float a) {\n    p-=c;\n    p*=rotmat(-a);\n    p.y = abs(p.y);\n    minMirrorDist = min(minMirrorDist, p.y);\n    p*=rotmat(a);\n    p+=c;\n    return p;\n}\n\nvec2 angleMirror(vec2 p, vec2 c, float a) {\n    p-=c;\n    float t = atan(p.y, p.x)-a/2.;\n    t = mod(t,a)-a/2.;\n    p = vec2(cos(t), sin(t))*length(p);\n    p+=c;\n    return p;\n}\nfloat tmod(float v, float b) {\n    return b - abs(b - mod(v,b*2.));\n}\nvec2 tangleMirror(vec2 p, vec2 c, float a) {\n    p-=c;\n    float t = atan(p.y, p.x)+a/2.;\n    t = tmod(t,a)-a/2.;\n    p = vec2(cos(t), sin(t))*length(p);\n    p+=c;\n    return p;\n}\n\n#define PI 3.1415926\n#define TAU 6.2831852\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    vec2 muv = (iMouse.xy*2.-iResolution.xy)/iResolution.y;\n    \n    \n    \n        vec2 ouv = uv;\n    float d = 1000.;\n    for(float i = 0. ; i < TAU ; i += TAU/3.) {\n        vec2 ouv = uv;\n        uv *= rotmat(i+iTime*.01);\n        uv = tangleMirror(uv, 1.-abs(2.*cossin(i+iTime*.1)), TAU/6.);\n        d = min(d,length(uv-ouv));\n    }\n    \n    //uv = tangleMirror(uv, muv, TAU/6.);\n    \n    \n    //uv -= vec2(.2,0)*(1.+cos(iTime));\n    //vec3 col = vec3(0,1.-length(uv)*10.,1.-minMirrorDist*10.);\n    //uv = 1.-5.*min(fract(uv*5.),1.-fract(uv*5.));\n    vec3 col = vec3(.5-10.*fract(uv*2.)*.5,1.-fract(d)*10.);\n    // Output to screen\n    fragColor = vec4(col,0);\n}","name":"Image","description":"","type":"image"}]}