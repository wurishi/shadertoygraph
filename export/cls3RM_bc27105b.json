{"ver":"0.1","info":{"id":"cls3RM","date":"1671503929","viewed":106,"name":"polygon demo","username":"backlly","description":"try to draw some basic graphics use shader.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","polygon","coordinate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI 6.28318530718\nvec2 rotate(vec2 v, float angle) {\n    float cosA = cos(angle), sinA = sin(angle);\n    return v.x * vec2(cosA, sinA) + v.y * vec2(-sinA, cosA);\n}\nvoid drawLine(inout vec4 bg, in vec4 color, in vec2 uv, in vec2 start, in vec2 end, in float width) {\n    vec2 pa = uv - start, ba = end - start;\n    float d = length(pa - ba * clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0));\n    bg = mix(bg, color, smoothstep(width, 0.0, d));\n}\nvoid drawCircle(inout vec4 bg, in vec4 color, in vec2 uv, in vec2 center, in float radius, in float width ) {\n    bg = mix(bg, color, smoothstep(width, 0.0, abs( length(uv - center) - radius )));\n}\nvoid drawDisk(inout vec4 bg, in vec4 color, in vec2 uv, in vec2 center, in float radius) {\n    bg = mix(bg, color, smoothstep(length(fwidth(uv)), 0.0, length(uv - center) - radius));\n}\nvoid drawPolygon(inout vec4 bg, in vec2 uv, int N, float radius, in bool fill, in vec4 color) {\n    float a = atan(uv.x, uv.y) + PI;\n    float r = TWO_PI / float(N);\n    float d = cos(floor(0.5 + a / r) * r - a) * length(uv);\n    float w = length(fwidth(uv));\n    if(fill) {\n        float alpha = smoothstep(radius + w, radius, d);\n        bg = mix(bg, color, alpha);\n    } else {\n        float alpha1 = smoothstep(radius, radius + w, d);\n        float alpha2 = smoothstep(radius + w, radius + 2.0 * w, d);\n        bg = mix(bg, color, alpha1 - alpha2);\n    }\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    fragColor = vec4(0.82, 0.87, 0.89, 1.0);\n    // first draw some fixed object\n    vec2 pos = fragCoord.xy - iResolution.xy * 0.5;\n    if(mod(abs(pos.x), 40.0) < 1.5 || mod(abs(pos.y), 40.0) < 1.5) {\n        // grid\n        fragColor.rgb = mix(fragColor.rgb, vec3(0.0), 0.1);\n    }\n    // x axis\n    drawLine(fragColor, vec4(1.0, 0.0, 0.0, 1.0), pos, vec2(0.0, 0.0), vec2(150.0, 0.0), 3.0);\n    drawLine(fragColor, vec4(1.0, 0.0, 0.0, 1.0), pos, vec2(140.0, 5.0), vec2(150.0, 0.0), 3.0);\n    drawLine(fragColor, vec4(1.0, 0.0, 0.0, 1.0), pos, vec2(140.0, -5.0), vec2(150.0, 0.0), 3.0);\n    // y axis\n    drawLine(fragColor, vec4(0.0, 0.75, 0.0, 1.0), pos, vec2(0.0, 0.0), vec2(0.0, 150.0), 3.0);\n    drawLine(fragColor, vec4(0.0, 0.75, 0.0, 1.0), pos, vec2(5.0, 140.0), vec2(0.0, 150.0), 3.0);\n    drawLine(fragColor, vec4(0.0, 0.75, 0.0, 1.0), pos, vec2(-5.0, 140.0), vec2(0.0, 150.0), 3.0);\n    // then draw some object with simple animation\n    vec2 uv = vec2( 2.0 * fragCoord - iResolution.xy ) / iResolution.y;\n    uv += vec2(0.35 * sin(iTime), 0.35 * cos(iTime));\n    uv = rotate(uv, sin(iTime) * 0.5) * 1.5;\n    // disk\n    drawDisk(fragColor, vec4(0.16, 0.22, 0.6, 1.0), uv, vec2(0.0,0.0), 0.2);\n    // circle\n    drawCircle(fragColor, vec4(0.56, 0.22, 0.6, 1.0), uv, vec2(0.0,0.0), 0.45, length(fwidth(uv)));\n    // some polygon line\n    drawPolygon(fragColor, uv, 3, 0.2, false, vec4(1.,.0,.0,1.));\n    drawPolygon(fragColor, uv, 4, 0.45, false, vec4(.0,1.,.0,1.));\n    drawPolygon(fragColor, uv, 5, 0.66, false, vec4(.0,.0,1.,1.));\n    drawPolygon(fragColor, uv, 6, 0.85, false, vec4(.0));\n    // fill some polygon\n    vec4 color = vec4(0.56, 0.22, 0.6, 1.0);\n    drawPolygon(fragColor, rotate(uv + vec2(0.9, 0.55), sin(iTime) * 0.5) * 2.0, 3, 0.2, true, color);\n    drawPolygon(fragColor, rotate(uv + vec2(0.9, -0.55), sin(iTime) * 0.5) * 1.5, 4, 0.2, true, color);\n    drawPolygon(fragColor, rotate(uv + vec2(0.0, 1.0), sin(iTime) * 0.5) * 1.5, 5, 0.2, true, color);\n    drawPolygon(fragColor, rotate(uv + vec2(-0.9, 0.55), sin(iTime) * 0.5) * 1.5, 6, 0.2, true, color);\n    drawPolygon(fragColor, rotate(uv + vec2(-0.9, -0.55), sin(iTime) * 0.5) * 1.5, 7, 0.2, true, color);\n    drawPolygon(fragColor, rotate(uv + vec2(0.0, -1.0), sin(iTime) * 0.5) * 1.5, 8, 0.2, true, color);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}