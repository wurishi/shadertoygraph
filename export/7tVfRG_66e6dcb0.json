{"ver":"0.1","info":{"id":"7tVfRG","date":"1664778056","viewed":97,"name":"Leather Cushion","username":"sysrpl","description":"Leather Cushioning","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["material"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Load these textures\n\ngShaderToy.SetTexture(0, {mSrc: 'https://cache.getlazarus.org/shaders/leather_padded_256_normal.jpg',\n  mType:'texture', mID:1, mSampler:{ filter: 'linear', wrap: 'repeat',\n  vflip:'true', srgb:'false', internal:'byte' }});\n\ngShaderToy.SetTexture(1, {mSrc: 'https://cache.getlazarus.org/shaders/leather_padded_256_ambientocclusion.jpg',\n  mType:'texture', mID:1, mSampler:{ filter: 'linear', wrap: 'repeat',\n  vflip:'true', srgb:'false', internal:'byte' }});\n  \nAlternate:  \n  \ngShaderToy.SetTexture(0, {mSrc: 'https://cache.getlazarus.org/shaders/leather_normal.png',\n  mType:'texture', mID:1, mSampler:{ filter: 'linear', wrap: 'repeat',\n  vflip:'true', srgb:'false', internal:'byte' }});  \n  \n*/\n\nconst vec3 color = vec3(0.8, 0.2, 0.2);\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv;\n    uv.x = fragCoord.x / 256.;\n    uv.y = fragCoord.y / 256.;\n    vec4 normal = texture(iChannel0, uv);\n    vec4 occlude = texture(iChannel1, uv);\n    vec2 m = iMouse.xy;\n    vec3 light = vec3(m, 500.);\n    vec3 point = vec3(fragCoord, 0.);\n    float i = distance(light, point) / 500.;\n    i = clamp(1. / (i * i), 0., 1.);\n    vec3 bump = (normal.xyz - 0.5) * 2.; \n    float b = dot(normalize(light - point), bump) * i;\n    vec3 r = reflect(normalize(light - point), bump);\n    float s = clamp(dot(r, vec3(0., 0, -1.)), 0., 1.);\n    s = pow(s, 100.) * 0.5;\n    if (b < 0.15)\n        b = 0.15;\n    fragColor = vec4(color * b + vec3(s), 1.);\n}","name":"Image","description":"","type":"image"}]}