{"ver":"0.1","info":{"id":"WssyzM","date":"1584427900","viewed":250,"name":"Lab-02","username":"MykhailKo","description":"Lab-2, KPI, Computer graphics, IS-91 Mykhal Kosiuk","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["stamp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float angle)\n{\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\nfloat Circle(vec2 uv, vec2 p, float r, float blur) {\n\tfloat d = length(uv-p);\n\tfloat c = smoothstep(r, r-blur, d);\n\treturn c;\n}\n\nfloat Band (float t, float start, float end, float blur) {\n\tfloat step1 = smoothstep(start-blur, start+blur, t);\n\tfloat step2 = smoothstep(end+blur, end-blur, t);\n\treturn step1*step2;\n}\n\nfloat Rect (vec2 uv, vec2 position, float rot, float height, float width, float blur) {\n    \n    uv -= position; // translating coordinates system\n    uv *= rotate2d(rot); // rotating coordinates system\n\tfloat band1 = Band(uv.x, -(width/2.0), width/2.0, blur);\n\tfloat band2 = Band(uv.y, -(height/2.0), height/2.0, blur);\n\treturn band1*band2;\n}\n\nfloat Logo(vec2 uv, float width, float height, float blur){\n    \n    float maskK = Rect(uv, vec2(-width/2.0 + width/6.5, 0.0), 0.0, height-height/2.5, height/10.0, blur);\n    maskK += Rect(uv, vec2(-width/2.0 + height/2.77777, -height/10.0), 15.0, height*0.5, height/16.77777, blur);\n    maskK += Rect(uv, vec2(-width/2.0 + height/2.85714, height/5.8823529), 120.0, height/3.333333, height/16.77777, blur);\n    maskK += Rect(uv, vec2(-width/2.0 + height/1.4285714, 0.0), 0.0, height-(height/5.0*2.0), height/10.0, blur);\n    maskK += Rect(uv, vec2(-width/2.0 + height/0.90909, 0.0), 0.0, height-(height/5.0*2.0), height/10.0, blur);\n    maskK += Rect(uv, vec2(-width/2.0 + height-(height/5.0), width/10.0), 15.0, height/2.631578, height/10.0-(height/50.0*2.0), blur);\n    maskK += Rect(uv, vec2(-width/2.0 + height, width/10.0), 120.0, height/2.77777777, height/10.0-(height/50.0*2.0), blur);\n    \n    return maskK;\n}\n\n\nfloat Stamp(vec2 uv, vec2 position, float height, float width, float blur){\n    \n    uv -= position; // translating coordinates system\n    \n\tfloat mask = Rect(uv, vec2(0.0, 0.0), 0.0, height, width, blur);\n    \n    float sr = height/20.0;\n    \n    int horN = int(5.0*(width/height));\n    float margin = (5.0*(width/height) - float(horN))/(float(horN)+2.0);\n    float edgePattern = 0.;\n    \n    for(float i = margin; int(i) < horN * 2; i += 1.0+margin){\n    \tedgePattern += Circle(uv, vec2(-(width/2.0) + sr*(i*2.0+1.0), height/2.0), sr, blur);\t\n        edgePattern += Circle(uv, vec2(-(width/2.0) + sr*(i*2.0+1.0), -height/2.0), sr, blur);\t\n    }\n    for(float i = 0.5; i < 9.0; i++){\n    \tedgePattern += Circle(uv, vec2(width/2.0, -(height/2.0) + sr*(i*2.0+1.0)), sr, blur);\n        edgePattern += Circle(uv, vec2(-width/2.0, -(height/2.0) + sr*(i*2.0+1.0)), sr, blur);\n    }\n    \n    float logo = Logo(uv, width, height, blur);\n    \n    return mask-edgePattern-logo;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n        \n    float mask = Stamp(uv, vec2(cos(iTime)*0.65, sin(iTime)*0.3), 0.4, 0.5, 0.005);\n        \n    fragColor = vec4(abs(cos(iTime)), 1.0, abs(sin(iTime)), 1.0)*mask;\n}","name":"Image","description":"","type":"image"}]}