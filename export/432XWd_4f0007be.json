{"ver":"0.1","info":{"id":"432XWd","date":"1711238985","viewed":26,"name":"Triforce Exercise","username":"billrockx","description":"The Book of Shaders Exercise:\ngeometric logo to replicate using distance fields","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tbos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n\nfloat shape(vec2 pos, int n_coners, float side, vec2 uv) {\n    // Remap the space to -1. to 1.\n\tuv = uv *2.-1.;\n    uv -= pos;\n    //uv.x -= side/2.0;\n    // Angle and radius from the current pixel\n    float a = atan(uv.x,uv.y)+PI;\n    float r = TWO_PI/float(n_coners);\n\t// Shaping function that modulate the distance\n\tfloat d = cos(floor(.5+a/r)*r-a)*length(uv);\n    return 1.0-smoothstep(side,side + 0.01, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.0);\n    vec3 t1 = vec3(shape(vec2(-0.45, -0.7), 3, 0.25, st));\n    vec3 t2 = vec3(shape(vec2(0.45, -0.7), 3, 0.25, st));\n    vec3 t3 = vec3(shape(vec2(0.0, 0.1), 3, 0.25, st));\n\n\n    color = (t1 + t2 + t3) * vec3(1.0, 1.0, 0.0);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}