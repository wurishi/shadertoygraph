{"ver":"0.1","info":{"id":"Mdyyzt","date":"1563809970","viewed":692,"name":"Backyard Starleaves","username":"104","description":"Are they stars or leaves?","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["2d","bargainbin","dimeadozen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float maxIter = 40.;\nconst float fallSpeed = .7;\nconst float fallDuration = 3.;\nconst float spinSpeed = 2.;\nconst float stickiness = 0.9;// pushes exp curve back\nconst float maxRepDist = 1.;\nconst float minRepDist = .6;\nconst float sharpness = 800.;\n\nconst float pi = 3.141592;\nconst float pi2 = pi * 2.;\n\nfloat rand(vec2 co)\n{\n    float a = 12.9898;\n    float b = 78.233;\n    float c = 43758.5453;\n    float dt= dot(co.xy ,vec2(a,b));\n    float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\nfloat nsin(float t) {return sin(t)*.5+.5; }\n\nvec2 hash2( vec2 p )\n{\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\nfloat triWave(float x) {\n    float ret = mod(x, pi2)/pi-1.;// -1 to 1\n    ret = abs(ret);// 0-1\n    ret -= .5;\n    ret *= 2.;    \n    return ret;\n}\n\nfloat dstar(vec2 uv, float p, float ir, float or, float phase, vec2 id) {\n    float a = atan(uv.x,uv.y)/pi2+phase;\n    float r = triWave(a*p*pi2)*.5+.5;// 0-1\n    //r = pow(r, nsin(iTime)*4.+.5);\n    r = pow(r, rand(id)*4.+.5);\n    r *= or-ir;\n    r += ir;\n    return length(uv)-r;\n}\n\nfloat dtoa(float d, float amount){\n    return 1. / clamp(d*amount, 1., amount);\n}\n\n\nvoid mainImage(out vec4 o, vec2 O)\n{\n    float t = iTime+1e3;\n    vec2 R = iResolution.xy,\n        V=(O-.5*R)/R.y\n        ,N=O/R-.5// normalized coords (0-1)\n        ,P=O-R*.5// screen space coords, centered\n        ;\n    V *= .7;\n    \n    t *= .1;\n    V += iMouse.xy/iResolution.xy;\n    float sgn = 1.;\n    \n    o = vec4(0.);\n    vec2 moon = vec2(0,.3);\n    float ma = dtoa(length(V-moon)-.1, 100.);\n    float ma2 = dtoa(length(V-moon)-.1, 20.);\n    for (float i = 0.; i <maxIter; ++ i) {\n    \tV.x += sgn * t;\n       \tsgn = -sgn;\n        vec2 cent = vec2(-.5+rand(vec2(i, i+1.)), -.5+rand(vec2(i+2., i+3.)));// find a center; \n        vec2 off = cent;\n        off *= 2.;// spread\n        \n        off.y -= exp(mod(t*fallSpeed + i*fallDuration/maxIter, fallDuration)-stickiness)-1.;// make them fall. -2 to hover longer near 0.\n\n        float phase = rand(cent)-.5;\n        phase *= spinSpeed;\n\n        vec2 rep = hash2(cent)*(maxRepDist-minRepDist)+minRepDist;// ID\n        vec2 repUV = mod(V-off, rep)-rep*.5;\n        float d = dstar(repUV, 5., rep.x*.04, 0.008, t*phase*5., rep);\n        vec4 thisColor;\n        thisColor.rg = vec2(dtoa(d, sharpness*(i/maxIter))*(i/maxIter));// darken layers\n        thisColor.b = d*.4;\n        thisColor.rg *= rep*rep*rep*rep;\n        \n        thisColor *= (ma2*2.)+.2;\n        o = max(o, thisColor);// mix\n    }\n    o += ma;\n    \n    // post\n    o *= .8;\n    o = clamp(o,0.,1.);\n    o = pow(o,vec4(.5));\n    o += (fract(sin(dot(R+t,N))*1e5)-.5)*.01;\n    o *=1.4-dot(N,N);\n    o *= 1.-step(.42,abs(N.y));\n    o = clamp(o,0.,1.);\n    o.a = 1.;\n}\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}