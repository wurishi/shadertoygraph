{"ver":"0.1","info":{"id":"NlyXDd","date":"1641493058","viewed":122,"name":"Fire 02","username":"SlimFrogNet","description":"fire02 ","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["fire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float p2(float x){ return x*x; }\nfloat p3(float x){ return x*x*x; }\nfloat p4(float x){ return x*x*x*x; }\nfloat s2(float x){ return (2.0-x)*x; }\nfloat s3(float x){ return x*x*x-3.0*x*(x-1.0); }\nfloat s4(float x){ return 4.0*x-6.0*x*x+4.0*x*x*x-x*x*x*x; }\nfloat e1(float x){ return 3.0*x*x-2.0*x*x*x; }\nfloat ei1(float x){ return 2.0*x*x*x-3.0*x*x+2.0*x; }\n\n\n\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 scale = vec2(4.0, 1.5);\n    vec2 offset = vec2(0.0, -0.5) * iTime;\n\n    vec2 scale2 = vec2(6.0, 1.8);\n    vec2 offset2 = vec2(0.0, -0.7) * iTime;\n    \n    vec2 distort = vec2(sin(p2(uv.y*0.7) * 11.0 - iTime*3.5)*0.07, 0.0);\n    vec2 distort2 = vec2(sin(p2(uv.y*0.8) * 17.0 - iTime*2.5)*0.03, 0.0);\n    \n    float mask = sin(uv.x*3.14)* sin((1.0-uv.y)*1.56);\n    \n    float gray = snoise((uv + distort) * scale + offset)*0.5+0.5;\n    float gray2 = snoise((uv + distort2) * scale2 + offset2)*0.5+0.5;\n    \n\n    gray *= smoothstep(0.0, 0.7, gray2);\n    gray += p2(1.0-uv.y)*0.7;\n    gray = e1(clamp(gray,0.0,1.0));\n\n    gray *= mask;\n    gray = smoothstep(0.1, 0.7, gray);\n    vec3 color = vec3(s3(gray),e1(gray),p3(gray));\n\n    fragColor = vec4(color,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}