{"ver":"0.1","info":{"id":"XcByRR","date":"1721818252","viewed":44,"name":"Growing Acacia Tree","username":"Eolc","description":"growing tree using IFS","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","ifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define C01(x) clamp(x, 0., 1.)\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define PI 3.14159265359\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (fragCoord - iResolution.xy / 2.0) / iResolution.y;\n  uv *= 5.0;\n  uv.y += 1.5;\n\n  float t = fract(iTime);\n  float len = 0.0;\n  float c = 1.0;\n  float iter = mod(floor(iTime), 20.0);\n  float n = 0.0, flag = 0.0;\n  bool first = true;\n  for (int i = 0; i < 20; i++) {\n    float tmp = length(max(abs(uv) - vec2(0., float(i) < iter ? 1. : t), 0.));\n    c = min(c, tmp);\n\n    flag = 1. - smoothstep(0.1, 0.75, tmp);\n    if ((flag > 0.) && first) {\n      n = float(i) / 20.0;\n      first = false;\n    }\n\n    if (float(i) < iter) {\n\n      uv.x = abs(uv.x);\n      uv *= 1.5;\n      uv -= vec2(0.0, 1.5);\n      uv = rot(-0.16 * PI) * uv;\n    }\n  }\n\n  c = smoothstep(0.1, 0.11, c);\n  float k = smoothstep(0., 0.8, n) + 0.1;\n  vec3 col = vec3(mix(0.85, 0.3, k), mix(0.5, 0.6, k), 0.) * c;\n\n  fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}