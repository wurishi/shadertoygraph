{"ver":"0.1","info":{"id":"XtS3Dt","date":"1436481915","viewed":761,"name":"Flip Dot Plasma","username":"slembcke","description":"Plasma drawn on a mechanical flip dot display.","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["plasma","monochrome","flipdots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define M_PI 3.141592653589793\n\n#define CELL_SIZE 40.0\n#define WIDTH 0.4\n#define ROUND 0.5\n\n#define INTERVAL 0.6\n\n// Rotate the uv coords for a flip dot plane around the x-axis.\nvec2 flipX(vec2 uv, float a){\n    vec3 r = vec3(uv, 3.0);\n    vec3 n = vec3(0.0, sin(a), cos(a));\n    float t = (r.z*n.z)/dot(n, r);\n    \n    vec3 p = r*t;\n    return vec2(p.x, p.y/n.z);\n}\n\n// Called for the value of each flip dot cell.\n// Borrowed from https://www.shadertoy.com/view/MdXGDH\nfloat display(vec2 uv, float t){\n    uv *= 20.0;\n    t *= 0.01;\n    \n\tvec2 center = vec2(640.0/2.0, 360.0/2.0) + vec2(640.0/2.0*sin(-t*3.0), 360.0/2.0*cos(-t*3.0));\n\n\tfloat color1 = (sin(dot(uv.xy, vec2(sin(t*3.0), cos(t*3.0)))*0.02 + t*3.0) + 1.0)/2.0;\n\tfloat color2 = (cos(length(uv.xy - center)*0.03) + 1.0)/2.0;\n\tfloat color = (color1 + color2)/2.0;\n\n\treturn (cos(M_PI*color/0.5 + t*3.0) + 1.0)/2.0;\n}\n\n// Each flip cell has a slightly different timing.\nfloat delay(vec2 uv){\n    return texture(iChannel0, uv/1024.0).r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Cell coordinates.\n    vec2 cell = fragCoord.xy/CELL_SIZE;\n    vec2 cellf = fract(cell);\n    vec2 celli = cell - cellf;\n    \n    // Time values.\n    float t = iTime/INTERVAL + 0.5*delay(celli) + celli.y/40.0;\n    float tf = fract(t);\n    float ti = t - tf;\n    \n    // Current and next display value.\n    float d0 = step(0.5, display(celli, ti));\n    float d1 = step(0.5, display(celli, ti + 1.0));\n    \n    // Flip dot rotation phase. [0, 1]\n    float phase = mix(d0, d1, smoothstep(0.0, 1.0, tf));\n    \n    // Coordinates of the flip dot's plane.\n    vec2 plane = flipX(2.0*cellf - 1.0, M_PI*phase);\n    \n    // Implicit function for the rounded rectangle.\n    float f = ROUND - length(plane - clamp(plane, -WIDTH, WIDTH));\n    \n    // Anti-alias and output!\n    vec3 color = mix(vec3(0.2), vec3(1.0), step(phase, 0.5));\n    float aa = smoothstep(0.0, fwidth(f), f);\n\tfragColor = vec4(aa*color, 1.0);\n}","name":"Image","description":"","type":"image"}]}