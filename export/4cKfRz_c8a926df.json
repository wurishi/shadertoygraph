{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"video","id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define shifty 1\n\nfloat texSamp(vec2 uv) {\n#if shifty\n    float t = fract(iTime/7.);\n    if (t <= 1./3.) {\n        return texture(iChannel0,uv).r;\n    } else if (t <= 2./3.) {\n        return texture(iChannel0,uv).g;\n    } else {\n        return texture(iChannel0,uv).b;\n    }\n#endif\n    return length(texture(iChannel0,uv))/3.;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    float threshold = 0.5;\n    bool isRed = (texSamp(uv) > threshold);\n\n    vec2 center = vec2(0.5, 0.5);\n\n    // Direction from center to current pixel\n    vec2 dir = normalize(uv - center);\n\n    // Offsets for sampling:\n    // We'll sample slightly toward the center. You can invert these if you want outward expansion.\n    float greenOffset = 10.0 * (1.0 / min(iResolution.x, iResolution.y));\n    float blueOffset  = 20.0 * (1.0 / min(iResolution.x, iResolution.y));\n\n    // Sample for green:\n    // If the pixel itself is not red, we look \"one step\" closer to the center.\n    // If that position is red, we make this pixel green.\n    bool isGreen = false;\n    if(!isRed) {\n        if(texSamp(uv - dir * greenOffset) > threshold ||\n           texSamp(uv + dir * greenOffset) > threshold) {\n            isGreen = true;\n        }\n    }\n\n    // Sample for blue:\n    // If the pixel is not red and not green, we try \"two steps\" closer to the center.\n    // If that sampled pixel is red, we make this pixel blue.\n    bool isBlue = false;\n    if(!isRed && !isGreen) {\n        if(texSamp(uv - dir * blueOffset) > threshold ||\n           texSamp(uv + dir * blueOffset) > threshold) {\n            isBlue = true;\n        }\n    }\n\n    vec3 col = vec3(0.0);\n    if (isRed) {\n        col = vec3(1.0, 0.0, 0.0);\n    } else if (isGreen) {\n        col = vec3(0.0, 1.0, 0.0);\n    } else if (isBlue) {\n        col = vec3(0.0, 0.0, 1.0);\n    }\n\n#if shifty\n    // color shift\n    float t = fract(iTime/3.);\n    if (t <= 1./5.) {\n        col.rgb = col.brg;\n    } else if (t <= 2./3.) {\n        col.rgb = col.gbr;\n    }\n#endif\n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4cKfRz","date":"1733880357","viewed":49,"name":"rgb outline experimentation","username":"bombblob","description":"experimenting with rgb outlines","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic","rgb","outline"],"hasliked":0,"parentid":"","parentname":""}}