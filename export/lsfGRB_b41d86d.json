{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"void sampleCamera(vec2 fragCoord, vec2 u, out vec3 rayOrigin, out vec3 rayDir)\n{\n\tvec2 filmUv = (fragCoord.xy + u)/iResolution.xy;\n\n\tfloat tx = (2.0*filmUv.x - 1.0)*(iResolution.x/iResolution.y);\n\tfloat ty = (1.0 - 2.0*filmUv.y);\n\tfloat tz = 0.0;\n\n\trayOrigin = vec3(0.0, 0.0, 5.0);\n\trayDir = normalize(vec3(tx, ty, tz) - rayOrigin);\n}\n\nfloat Q(float a, float b, float c)\n{\n\tfloat d = b*b-4.0*a*c;\n\tif (d < 0.0) return -1.0;\n\td=sqrt(d);\t\n\tfloat oo2a = 0.5/a;\n\treturn min((-b-d)*oo2a,(-b+d)*oo2a);\n}\n\t\nvec3 L = normalize(vec3(-2,-1,1));\n\nfloat Lit(vec3 N, vec3 V, vec3 H)\n{\n\tfloat d = max(dot(N,L),0.0) * 0.5;\n\tfloat s = pow(max(dot(N,H),0.0),100.0)*.5;\n\t\n\treturn d+s;\n}\n\nvec3 trace(vec3 P, vec3 V, vec3 H, float time)\n{\n\ttime += iTime;\n\ttime += sin(time)*0.9;\t\n\tvec3 c=vec3(0.2,0.1,0.1);\n\n#define N_SPHERE\t12\n\t\n\tvec4 S[N_SPHERE];\n\tvec3 C[N_SPHERE];\n\tvec2 gb=vec2(0.1,0);\n\t\n\tfor (int i=0; i<N_SPHERE; i++)\n\t{\n\t\tfloat I = float(i)*(1.0/float(N_SPHERE));\n\t\tfloat t = I*2.0*3.1415927 + time;\n\t\tvec3 A = vec3(sin(t),sin(t*3.0)*0.4,cos(t));\n\t\tfloat R = (1.0-I)*0.33 + 0.1;\n\t\tS[i]=vec4(A,R);\n\t\t\n\t\tC[i]=vec3(0,gb);\n\t\tgb=vec2(0.1,0.1)-gb;\n\n\t}\n\t\n//\tS[0]=vec4(sin(iTime),0,cos(iTime),0.7);\n//\tS[1]=vec4(sin(iTime+1.0),0,cos(iTime+1.0),0.2);\n\t\n\tfloat nearest = 1e10;\n\t\n\tvec3 E=V;\n\t\n\tfor (int i=0; i<N_SPHERE; i++)\n\t{\n\t\tvec3 A=S[i].xyz;\n\t\tfloat R=S[i].w;\n//\t\tfloat I = float(i)*(1.0/float(N_SPHERE));\n//\t\tfloat t = I*2.0*3.1415927 + iTime;\n//\t\tvec3 A = vec3(sin(t),sin(t*3.0)*0.1,cos(t));\n//\t\tfloat R = I*0.5 + 0.1;\n\t\tfloat T=Q(dot(V,V),2.0*(dot(P,V)-(dot(A,V))),dot(A,A)+dot(P,P)-R*R-(2.0*(dot(A,P))));\t\t\n\t\tif (T > 0.0)\n\t\t{\t\t\t\n\t\t\tif (T < nearest)\n\t\t\t{\n\t\t\t\tvec3 X=P+T*V;\n\t\t\t\tvec3 N=normalize(X-A);\n\t\t\t\t\n\t\t\t\tvec3 Ref = reflect(V,N);\n\t\t\t\t\n\t\t\t\tfloat nearestR = 1e10;\n\t\t\t\tvec3 Rcol=vec3(0.0,0.0,0.0);\n\t\t\t\tint blocked =0;\n\t\t\t\tfor (int j=0; j<N_SPHERE; j++)\n\t\t\t\t{\n\t\t\t\t\tif (i!=j)\n\t\t\t\t\t{\n\t\t\t\t\t\tvec3 A=S[j].xyz;\n\t\t\t\t\t\tfloat R=S[j].w;\n\t\t\t\t\t\tvec3 V=L;\n\t\t\t\t\t\tvec3 P=X;\n\t\t\t\t\t\tfloat T=Q(dot(V,V),2.0*(dot(P,V)-(dot(A,V))),dot(A,A)+dot(P,P)-R*R-(2.0*(dot(A,P))));\t\t\n\t\t\t\t\t\tif (T > 0.0)\n\t\t\t\t\t\t\tblocked=1;\n\t\t\t\t\t\t\n\t\t\t\t\t\tV=normalize(Ref);\n\t\t\t\t\t\tT=Q(dot(V,V),2.0*(dot(P,V)-(dot(A,V))),dot(A,A)+dot(P,P)-R*R-(2.0*(dot(A,P))));\t\t\n\t\t\t\t\t\tif (T > 0.0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (T<nearestR)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvec3 X=P+T*V;\n\t\t\t\t\t\t\t\tvec3 N=normalize(X-A);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tnearestR=T;\n\t\t\t\t\t\t\t\tRcol=C[j]+Lit(N,E,H);\n\t\t\t\t\t\t\t\tRcol *= 0.5/(1.0+T*T);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t//\tvec3 H=normalize(L-V);\t\t\t\t\n\t\t\t//\tfloat d = max(dot(N,L),0.0) * 0.5;\n\t\t\t//\tfloat s = pow(max(dot(N,H),0.0),100.0)*.5;\n\t\t\t\t\n\t\t\t\tfloat b = blocked > 0 ? 0.0 : Lit(N,V,H); //d+s;\n\t\t\t\tnearest = T;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tc = vec3(b,b,b)+C[i]+Rcol;\n\t\t\t}\n\t\t}\t\t\n\t}\n\t\n\treturn c;\n}\n\nfloat hash(float n)\n{\n    return fract(sin(n)*43758.5453123);\n}\n\nfloat rand( vec2 n )\n{\nreturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n\n/*\nint wang_hash(int seed)\n{\n    seed = (seed ^ 61) ^ (seed >> 16);\n    seed *= 9;\n    seed = seed ^ (seed >> 4);\n    seed *= 0x27d4eb2d;\n    seed = seed ^ (seed >> 15);\n    return seed;\n}\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 P, V;\n\tsampleCamera(fragCoord, vec2(0.5,0.5), P, V);\n\n\tvec3 H=normalize(L-V);\t\t\t\t\n\t\n\tvec3 c = vec3(0,0,0);\n\t\n\tvec2 u = (fragCoord.xy)/max(iResolution.x,iResolution.y);\n\t\t\n\tfloat p = fract(iTime)*123.789 + fragCoord.y*iResolution.x+fragCoord.x;\n//\tfor (float t=0.0; t<0.1; t+=0.1)\n//\t{\n\tfloat spread = 0.06;\n//\tfloat t = (hash(p)*2.0-1.0)*spread;\n//\tfloat t = (rand(fragCoord.xy)*2.0-1.0)*spread;\n\tfloat t = (texture(iChannel0,u*4.0).x*2.0-1.0)*spread;\n\t\tc += trace(P,V,H, t);\n//\t}\n\t//c*=0.2;\n\tfragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsfGRB","date":"1373109430","viewed":1032,"name":"Lame Raytraced Spheres","username":"Antonalog","description":"yeah. lame.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["raytracedspheres"],"hasliked":0,"parentid":"","parentname":""}}