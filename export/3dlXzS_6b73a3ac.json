{"ver":"0.1","info":{"id":"3dlXzS","date":"1551554281","viewed":152,"name":"lol simple rainbow (2d)","username":"Samsonshade","description":"lol simple rainbow because everyone starts simple","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["simple","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// lol simple rainbow because everyone starts simple\n\nvec3 hue2rgb(in float hue)\n{\n    // Converting pure HUE to RGB (see http://www.chilliant.com/rgb2hsv.html)\n  \n    vec3 out_rgb = vec3(      abs(hue * 6. - 3.) - 1.  ,\n    \t\t\t\t     2. - abs(hue * 6. - 2.)       ,\n        \t\t\t     2. - abs(hue * 6. - 4.)       );    \n    return out_rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    // Time varying pixel color\n    \n    vec3 col = vec3( hue2rgb( fract( uv.x - (iTime * 1.)  + sin( uv.y + iTime))  ).r,\n                     hue2rgb( fract( uv.x - (iTime * 1.1) + sin( uv.y + iTime))  ).g,\n                     hue2rgb( fract( uv.x - (iTime * 1.2) + sin( uv.y + iTime))  ).b                     \n                   ); \n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}