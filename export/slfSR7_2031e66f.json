{"ver":"0.1","info":{"id":"slfSR7","date":"1625335154","viewed":4480,"name":"CineShader Demo","username":"jhancock532","description":"This has been adapted from the book of shaders (https://thebookofshaders.com/edit.php#10/ikeda-03.frag) to be displayed on cineshader.com","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in float x) {\n    return fract(sin(x)*1e4);\n}\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat pattern(vec2 st, vec2 v, float t) {\n    vec2 p = floor(st+v);\n    return step(t, random(8.+p*.000001)+random(p.x)*0.5 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n\n    vec2 grid = vec2(100.0,50.);\n    st *= grid;\n\n    vec2 ipos = floor(st);  // integer\n    vec2 fpos = fract(st);  // fraction\n\n    vec2 vel = vec2(iTime*1.*max(grid.x,grid.y)); // time\n    vel *= vec2(-1.,0.0) * random(1.0+ipos.y); // direction\n\n    // Assign a random value base on the integer coord\n    vec2 offset = vec2(0.1,0.);\n\n    vec3 color = vec3(0.);\n    color.r = pattern(st+offset,vel,0.5);\n    color.g = pattern(st,vel,0.5);\n    color.b = pattern(st-offset,vel,0.5);\n\n    // Margins\n    color *= step(0.2,fpos.y);\n\n    fragColor = vec4(color,1.0);\n}\n\n/** SHADERDATA\n{\n\t\"title\": \"CineShader Demo\",\n\t\"description\": \"Adapted from Book of Shaders\",\n\t\"model\": \"person\"\n}\n*/","name":"Image","description":"","type":"image"}]}