{"ver":"0.1","info":{"id":"dsjBRR","date":"1689362086","viewed":65,"name":"Mandelbrot set logistic map","username":"SnackEater","description":"the logistic map of the real part of the Mandelbrot set","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - .5;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 col;\n    uv *= 3.;\n     float count = mod(5. * iTime,100.);\n    \n    vec2 Z = uv;\n    vec2 C = uv;\n    for(float i =0.;i<count;i++){\n        Z = vec2(Z.x * Z.x - Z.y * Z.y,2. * Z.x * Z.y) + C;\n        if(length(Z) < 2.){\n        col.b = i/count;\n        }\n    }\n    float x = uv.x;\n    float c = uv.x;\n    float m;\n    vec2 z;\n   \n    for(float i =0.;i<count;i++){\n        x = x * x + c;\n        m = length(x);\n        z = vec2(uv.x,m);\n         col.r += .0005/length(uv - z);\n    }\n   \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}