{"ver":"0.1","info":{"id":"fdlyzH","date":"1641835390","viewed":61,"name":"Safe Eyes 03","username":"vicking","description":"Contrast subprorgam","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["eyes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SIZE 1.5\n#define bg vec3(0., 0.5, 0)\n\n\nfloat drawContrast(vec2 uv, float t) {\n    float d = mix(0.0, 1., fract(t-abs(uv.y)));\n    float d2 = mix(0.0, 1., fract(t+abs(uv.y)));\n    \n    if(uv.x > uv.y) return d;\n    else return d2;\n \n}\n\nvec3 Program1(vec2 uv, float t) {\n    float ofs = SIZE*0.5-0.5;\n    \n    float idx = mod(floor(uv.x*8.0), 2.)*2. - 1.;\n    float idy = min(1., abs(floor(uv.y*SIZE-ofs)));\n    float w = min(1., abs(floor((uv.x*8.-1.)/6.)));\n    vec2 gv = vec2(fract(uv.x*8.*idx), uv.y*SIZE-ofs);\n \n    // Time varying pixel color\n    \n    float d = drawContrast(gv, t);\n    vec3 col = vec3(d/1.25+0.25);\n    col = mix(col, bg, min(1., idy+w));\n    \n    return col;\n\n}\n\nfloat drawContrast2(vec2 uv, float t) {\n    float dy = fract(t-uv.y);\n    float dx = fract(t-uv.x);\n    \n    if(uv.x > uv.y) return  mix(0.3, 0.8, dx);\n    return mix(0.5, 1.0, dy);\n\n}\n\n\nvec3 Program2(vec2 uv, float t) {\n    uv.x = (uv.x*iResolution.x - 0.5*(iResolution.x-iResolution.y))/iResolution.y;\n    vec2 gv = abs(uv-0.5)*2.0;\n    gv *= 1.5;\n    vec2 id = min(vec2(1.0, 1.0), floor(gv));\n    //return ;\n    vec3 col = vec3(drawContrast2(gv, t));\n    col = mix(col, bg, min(1.0, id.x+id.y));\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = iTime*0.75;\n    \n    int p = int(mod(floor(t/5.0), 4.0));\n    \n    vec3 col = bg;\n    if (p == 0) {\n        col = Program1(uv, t);\n    } else if (p == 1) {\n        col = Program1(uv, -t);\n    } else if (p == 2) {\n        col = Program2(uv, t);\n    } else if (p == 3) {\n        col = Program2(uv, -t);\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}