{"ver":"0.1","info":{"id":"dldBRn","date":"1700893957","viewed":98,"name":"classmates sketchbook","username":"chenxianming","description":"make this prints for the glass drag gate pasting.","likes":12,"published":1,"flags":32,"usePreview":0,"tags":["retro","carton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// https://www.shadertoy.com/view/ls3GWS\n// FXAA code from: http://www.geeks3d.com/20110405/fxaa-fast-approximate-anti-aliasing-demo-glsl-opengl-test-radeon-geforce/3/\n// https://developer.download.nvidia.com/assets/gamedev/files/sdk/11/FXAA_WhitePaper.pdf\n\n#define FXAA_SPAN_MAX 8.0\n#define FXAA_REDUCE_MUL   (1.0/FXAA_SPAN_MAX)\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_SUBPIX_SHIFT (1.0/4.0)\n\nvec3 FxaaPixelShader( vec4 uv, sampler2D tex, vec2 rcpFrame) {\n    \n    vec3 rgbNW = texture(tex, uv.zw).xyz;\n    vec3 rgbNE = texture(tex, uv.zw + vec2(1,0)*rcpFrame.xy).xyz;\n    vec3 rgbSW = texture(tex, uv.zw + vec2(0,1)*rcpFrame.xy).xyz;\n    vec3 rgbSE = texture(tex, uv.zw + vec2(1,1)*rcpFrame.xy).xyz;\n    vec3 rgbM  = texture(tex, uv.xy).xyz;\n\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max(\n        (lumaNW + lumaNE + lumaSW + lumaSE) * (0.25 * FXAA_REDUCE_MUL),\n        FXAA_REDUCE_MIN);\n    float rcpDirMin = 1.0/(min(abs(dir.x), abs(dir.y)) + dirReduce);\n    \n    dir = min(vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\n          max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n          dir * rcpDirMin)) * rcpFrame.xy;\n\n    vec3 rgbA = (1.0/2.0) * (\n        texture(tex, uv.xy + dir * (1.0/3.0 - 0.5)).xyz +\n        texture(tex, uv.xy + dir * (2.0/3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * (1.0/2.0) + (1.0/4.0) * (\n        texture(tex, uv.xy + dir * (0.0/3.0 - 0.5)).xyz +\n        texture(tex, uv.xy + dir * (3.0/3.0 - 0.5)).xyz);\n    \n    float lumaB = dot(rgbB, luma);\n\n    if((lumaB < lumaMin) || (lumaB > lumaMax)) return rgbA;\n    \n    return rgbB; \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 rcpFrame = 1./iResolution.xy;\n  \tvec2 uv2 = fragCoord.xy / iResolution.xy;\n        \n    float splitCoord = (iMouse.x == 0.0) ? iResolution.x/2. + iResolution.x*cos(iTime*.5) : iMouse.x;\n    \n    vec3 col;\n    \n    vec4 uv = vec4( uv2, uv2 - (rcpFrame * (0.5 + FXAA_SUBPIX_SHIFT)));\n    col = FxaaPixelShader( uv, iChannel0, 1./iResolution.xy );\n    \n    fragColor = vec4( col, 1. );\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define I iResolution\n#define T iTime\n#define PI 3.1415\n#define TAU PI * 2.\n#define rr( a ) mat2( cos(a), sin(a), -sin(a), cos(a) )\n// mat2(cos(a+vec4(0,11,33,0))) lt broblm\n#define S smoothstep\n\n// V IQ V\n\nfloat sdTriangle( in vec2 p, in vec2 p0, in vec2 p1, in vec2 p2 )\n{\n    vec2 e0 = p1-p0, e1 = p2-p1, e2 = p0-p2;\n    vec2 v0 = p -p0, v1 = p -p1, v2 = p -p2;\n    vec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n    vec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n    vec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    float s = sign( e0.x*e2.y - e0.y*e2.x );\n    vec2 d = min(min(vec2(dot(pq0,pq0), s*(v0.x*e0.y-v0.y*e0.x)),\n                     vec2(dot(pq1,pq1), s*(v1.x*e1.y-v1.y*e1.x))),\n                     vec2(dot(pq2,pq2), s*(v2.x*e2.y-v2.y*e2.x)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat smin (float a, float b, float r)\n{\n    float h = clamp(.5+.5*(b-a)/r,0.,1.);\n    return mix(b, a, h) - r*h*(1.-h);\n}\n\nfloat smax(float a, float b, float k) {\n    return -smin(-a, -b, k);\n}\n\nfloat rep(inout vec2 p, float rep) \n{\n\n    float an = TAU/rep;\n    \n    float fa = (atan(p.y,p.x)+an*0.5)/an;\n    float ia = floor( fa );\n    \n    float sym = an*ia;\n    \n    if( p.y < 0. ){\n        sym = 0.;\n    }\n    \n    p *= rr(sym);\n\n    return ia;\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nfloat df( vec3 p ){\n    p.y += cos( T * 1.5 ) * .2;\n    p.x -= cos( T ) * 4.;\n    p.z -= sin( T ) * 1.5;\n\n    p.yz *= rr( cos( T ) * .2 );\n    \n    p.yz *= rr( atan( cos(T), sin(T) ) );\n\n    return max(\n        max(\n            abs( p.y ) - .005,\n            abs( p.z ) - .005\n        ),\n        abs( p.x ) - .02\n    );\n}\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float A = min( I.x, I.y );\n    vec2 u = ( V * 2. - I.xy ) / A;\n    \n    vec3 c, m = c, p, o = vec3( 0., 0., -3. ), r = vec3( u * .4, 1. );\n    \n    float t, d, i, e = 0.;\n    for( ; i < 8.; i++ ){\n        p = o + r * t,\n        d = df( p );\n        t += d;\n    }\n    \n    if( d < 1e-3 ){\n        c = vec3(.47, .51, .52);\n    }\n    \n    c *= 35.;\n\n    // Output to screen\n    \n    // linear tail\n    // c = c * ( .9 + round( fract( iTime ) ) * .1 ) + texture( iChannel0, V / I.xy ).rgb * ( .9 + round( cos( iTime ) ) * .1 );\n    \n    c = c * .1 + texture( iChannel0, V / I.xy ).rgb * .992;\n    \n    if( c.x < .4 )\n        c = vec3(0);\n    \n    U = vec4(c,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nfloat ligBubble( vec2 u ){\n    return min(\n        smin(\n            length( u + vec2( 0., -.15 ) ) - .2,\n            max(\n                abs( u.x ) - .1, abs( u.y ) - .2\n            ),\n            .08\n        ),\n        length( u + vec2( 0., .2 ) ) - .1\n    );\n}\n\nfloat lig( vec2 u ){\n    \n    u.y -= .15;\n    \n    u *= rr( PI * .08 );\n    \n    float i = rep( u, 11. );\n    u.x -= .4;\n    u.x += cos( T * ( i - 9. ) ) * .01;\n    u *= rr( PI * .5 );\n   \n    return max(\n        abs( u.x ) - .05 * abs( u.y - .5 ),\n        abs( u.y ) - .1\n    );\n}\n\nfloat mainVisual( vec2 u ){\n    u.x += .1;\n    u.y -= .1;\n    \n    u *= rr( cos( T ) * .1 );\n    \n    return abs(\n        min(\n            ligBubble( u ),\n            lig( u )\n        )\n    );\n}\n\nfloat paperPlane1( vec3 p ){\n    p.x = abs( p.x ) - .01;\n    p.y -= .4;\n    p.xy *= rr( PI * .03 );\n    p.y += .4;\n    \n    p.yz *= rr( PI * .01 );\n    \n    return max(\n        sdTriangle( p.xy, vec2( 0., .5 ), vec2( .25, 0. ), vec2( 0., 0. ) ),\n        abs( p.z ) - .001\n    );\n}\n\nfloat paperPlane2( vec3 p ){\n    p.z -= .15;\n    p.x = abs( p.x ) - .0;\n    \n    p.yz *= rr( PI * -.08 );\n    \n    p.y -= .4;\n    p.xz *= rr( PI * -.45 );\n    \n    p.y += .4;\n    \n    return max(\n        sdTriangle( p.xy, vec2( 0., .5 ), vec2( .15, 0. ), vec2( 0., 0. ) ),\n        abs( p.z ) - .001\n    );\n}\n\nfloat paperPlane( vec3 p ){\n\n    // trians\n    p.y += cos( T * 1.5 ) * .2;\n    p.x -= cos( T ) * 4.;\n    p.z -= sin( T ) * 1.5;\n    p.xz *= rr( atan( cos(T) * .2, sin(T) ) );\n    p.yz *= rr( cos( T * -3. ) * .2 + .5 );\n    \n    \n    // pose\n    p.yz *= rr( PI * .25 );\n    p.xy *= rr( PI * .5 );\n    \n    return min(\n        paperPlane1( p ),\n        paperPlane2( p )\n    );\n}\n\nfloat rule1( vec2 u ){\n    u.x -= .5;\n    u.y += .8;\n    u *= rr( PI * .2 );\n    return abs( sdTriangle( u, vec2( 0., .5 ), vec2( .25, 0. ), vec2( 0., 0. ) ) );\n}\n\n\nfloat lo( vec2 u ){\n    \n    u.x += 1.1;\n    u.y += .3;\n\n    return abs( \n        sin( atan( u.x, u.y ) - exp( length(u) + 1. ) * 25. + T * .5 )\n    );\n}\n\nfloat lo_1( vec2 u ){\n    u.x += 1.1;\n    u.y += .3;\n    \n    return length( u ) - .2;\n}\n\nfloat lo2( vec2 u ){\n    u.x += 1.1;\n    u.y += .3;\n    \n    u *= rr( PI * -.1 );\n    \n    return abs( \n        min(\n            length( u ) - .22,\n            max(\n                abs( u.x ) - .015,\n                abs( u.y + .3 ) - .2\n            )\n        )\n    );\n}\n\nfloat rule2( vec2 u ){\n    u.x -= .8;\n    u.y += .5;\n    u *= rr( PI * -1.3 );\n    return abs( \n        max(\n            max(\n                length( u ) - .2,\n                u.y - .035\n            ),\n            -(\n                max(\n                    length( u ) - .13,\n                    u.y + .02\n                )\n            )\n        )\n    );\n}\n\nfloat pen( vec3 p ){\n    \n    p.x += .5;\n    p.y += .5;\n    \n    p.xz *= rr( T );\n    p.yz *= rr( T );\n    \n    return max(\n        length( p.xz ) - .03 * ( abs( p.y - .6 ) + .2 ),\n        abs( p.y ) - .2\n    );\n}\n\n\nfloat pt( vec2 u ){\n    \n    u.x -= .52;\n    u.y += .3;\n    \n    float py = u.y;\n    \n    py = pow( abs( py - .3 ), 2. ) + .1;\n    \n    py *= ( u.y / 2. + .5 ) / .1;\n    \n    return abs(\n        smax(\n            length( u.x ) - .1 * py,\n            abs( u.y ) - .3,\n            .1 * abs( u.y - .5 )\n        )\n    );\n}\n\n\nfloat pt2( vec2 u, float a ){\n    \n    u.x -= .5;\n    u.y -= .04;\n    \n    u.y -= fract( a ) * .3;\n    u.x += cos( a * 3. ) / 30.;\n\n    return abs(\n        length( u ) - .03 * ( 1. - fract( a ) * .3 )\n    );\n}\n\n\nfloat df( vec3 p ){\n    float d = .1;\n    \n    d = min(\n        d,\n        paperPlane( p )\n    );\n    \n    \n    d = min(\n        d,\n        pen( p )\n    );\n    \n    return d;\n}\n\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float A = min( I.x, I.y );\n    vec2 u = ( V * 2. - I.xy ) / A;\n    \n    vec3 c = vec3(.47, .51, .52), m = c, p, o = vec3( 0., 0., -3. ), r = vec3( u * .4, 1. );\n    \n    c = mix(\n        c,\n        m * 1.2,\n        S(\n            2. / A,\n            0.,\n            abs(\n                mod( u.x + .1, .2 ) - .1\n            )\n        )\n    );\n    \n    c = mix(\n        c,\n        m * 1.2,\n        S(\n            2. / A,\n            0.,\n            abs(\n                mod( u.y + .1, .2 ) - .1\n            )\n        )\n    );\n    \n    float t, d, i, e = 0., w = 5. / A, l = 9e9;\n    \n    for( ; i < 100.; i++ ){\n        p = o + r * t,\n        d = df( p );\n        \n        if( l < w && d > l + 1e-5 && p.z > 0. ){\n            // ( df(p) == N ) ? :\n            e = 1.;\n        }\n        \n        t += d * .8889;\n        \n        if( d < l ) l = d;\n        \n    }\n    \n    c += texture( iChannel0, V / I.xy ).rgb * .1;\n    \n    c = mix(\n        c,\n        m * 1.8,\n        e // texture( iChannel0, V / I.xy ).r\n    );\n    \n    c = mix(\n        c,\n        m * 1.8,\n        S(\n            4. / A,\n            0.,\n            mainVisual( u )\n        )\n    );\n    \n    c = mix(\n        c,\n        m * 1.8,\n        S(\n            4. / A,\n            0.,\n            pt( u )\n        )\n    );\n    \n    c = mix(\n        c,\n        m * 2. - ( fract( T ) * .5 ),\n        S(\n            5. / A,\n            0.,\n            pt2( u, T )\n        )\n    );\n    \n    c = mix(\n        c,\n        m * 2. - ( fract( T + .5 ) * .5 ),\n        S(\n            5. / A,\n            0.,\n            pt2( u, T + .5 )\n        )\n    );\n    \n    c = mix(\n        c,\n        m * 2. - ( fract( T + .8 ) * .5 ),\n        S(\n            5. / A,\n            0.,\n            pt2( u, T + .8 )\n        )\n    );\n    \n    c = mix(\n        c,\n        m * 2.,\n        S(\n            4. / A,\n            0.,\n            rule1( u )\n        )\n    );\n    \n    c = mix(\n        c,\n        m * 2.,\n        S(\n            4. / A,\n            0.,\n            rule2( u )\n        )\n    );\n    \n    c = mix(\n        c,\n        m * 1.8,\n        S(\n            300. / A,\n            0.,\n            lo( u )\n        ) * step( lo_1( u ), 0. )\n    );\n    \n    c = mix(\n        c,\n        m * 2.,\n        S(\n            5. / A,\n            0.,\n            lo2( u )\n        )\n    );\n    \n\n\n    // Output to screen\n    U = vec4(c,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}