{"ver":"0.1","info":{"id":"fdBSR1","date":"1619649860","viewed":112,"name":"_Infinite Circles_","username":"bhpcv252","description":"Hi, tried replicating the effect from https://brunoarizio.com/\n\nOpen for optimization remarks. Thank you!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","lines","circle","infinite"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// From https://brunoarizio.com/\n\nfloat rand(vec2 co, float s){\n    float PHI = 1.61803398874989484820459;\n    return fract(tan(distance(co*PHI, co)*s)*co.x);\n}\n\nfloat C( vec2 uv, vec2 pos, float rad, float blur ) {\n    return smoothstep(rad, rad-blur, length(uv-pos));\n}\n\nfloat DL(vec2 uv, vec2 p,  float t, float l) {\n\n    vec2 pos = uv-p;\n    \n    float x = (pos.x >= -(t/2.) && pos.x <= (t/2.))? 1. : 0.;\n    float y = (pos.y >= -(l/2.) && pos.y <= (l/2.))? 1. : 0.;\n    \n    return x*y;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec4 w = vec4(0.8431372549, 0.85098039215, 0.80392156862, 1.);\n\n    vec4 col = vec4(0.03529411764, 0.03921568627, 0.03137254901, 1.);\n    \n    \n    for(float i = -0.6; i<=0.6; i+=0.04) {\n        float l = .75;\n        \n        if(iTime < 5.) {\n            float j = pow(i+ .65, 7.);\n            l = ((-iTime*iTime+j)/25.) + 1.;\n            l = (l < 0.75)? 0.75 : abs(l);\n        }\n        \n        float m = DL(uv, vec2(i, 0.), 0.003, l);\n        col += m;\n    }\n    \n    float m = 0.;\n    \n    if(iTime >= 5.) {\n        float t = iTime-5.;\n        for(float i=1.; i<=6.; i+=1.5) {\n             m = abs(m-C( uv, vec2((-3.*(fract(t/i)-1.))-1.5, 0.), 0.3, 0.005));\n        }\n    \n    }\n    \n    col -= m*w;\n    \n    float colBW = (col.r + col.g + col.b)/3.;\n    \n    float noise = rand(fragCoord, fract(iTime)+1.0)*0.08;\n    \n    noise *= (colBW > 0.5)? -1.: 1.; \n\n    fragColor = abs(col + noise);\n}","name":"Image","description":"","type":"image"}]}