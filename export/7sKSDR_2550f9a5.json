{"ver":"0.1","info":{"id":"7sKSDR","date":"1634518932","viewed":201,"name":"Camerons Star Field","username":"cam93","description":"demonstrates pseudo behavior of a star cluster","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["spacestars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_LAYERS 4.\n\nmat2 Rot(float a){\n    float s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat Star(vec2 uv, float flare){\n    float d = length(uv);\n    float m = .02/d;\n    \n    float rays = max(0., 1.-abs(uv.x * uv.y * 1000.));\n    m += rays*flare;\n    uv*=Rot(3.1415/4.);\n    rays = max(0., 1.-abs(uv.x * uv.y * 1000.));\n    m += rays*.3*flare;\n    \n    m*= smoothstep(1.,.2,d);\n    return m;\n}\n\nfloat Hash21(vec2 p){\np=fract(p*vec2(123.34, 456.21));\np+=dot(p, p+45.32);\nreturn fract(p.x*p.y);\n}\n\nvec3 StarLayer(vec2 uv){\n\n    vec3 col = vec3(0);\n    \n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    for(int y=-1;y<=1;y++){\n        for(int x=-1;x<=1;x++){\n        \n            vec2 offset = vec2(x,y);\n            \n            float n = Hash21(id+offset);\n            float size=fract(n*345.32);\n            float star = Star(gv-offset-vec2(n,fract(n*34.))+.5, smoothstep(.8,.9,size));\n            vec3 color = sin(vec3(.2,.3,.9)*fract(n*2345.2)*123.2)*.5+.5;\n            color = color*vec3(1.,.5,1.+size);\n            col+=star*size*color;\n        }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    float t = iTime*.1;\n    vec3 col = vec3(0);\n    \n    for(float i=0.; i<1.; i+=1./NUM_LAYERS){\n    float depth = fract(i+t);\n    \n    float scale = mix(20.,.5,depth);\n    float fade = depth;\n    col+=StarLayer(uv*scale)*fade;\n    }\n   // if(gv.x>.48 || gv.y>.48)col.r=1.;\n   \n    fragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}