{"ver":"0.1","info":{"id":"slSBRd","date":"1652603984","viewed":161,"name":"beizier eye","username":"shudal","description":"beizier eye","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 bezier(vec3 A, vec3 B, vec3 C, vec3 D, float t) {\n  vec3 E = mix(A, B, t);\n  vec3 F = mix(B, C, t);\n  vec3 G = mix(C, D, t);\n\n  vec3 H = mix(E, F, t);\n  vec3 I = mix(F, G, t);\n\n  vec3 P = mix(H, I, t);\n\n  return P;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec3 pn=bezier(vec3(-0.1,0.5,0.),vec3(0.25,0.63,0.),vec3(0.75,0.66,0.),vec3(1.1,0.6,0.),uv.x);\n    vec3 pn2=bezier(vec3(-0.1,0.4,0.),vec3(0.25,0.27,0.),vec3(0.75,0.24,0.),vec3(1.1,0.5,0.),uv.x);\n    if (uv.y>pn.y || uv.y <pn2.y) {\n        col = vec3(0.);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}