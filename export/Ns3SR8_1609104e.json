{"ver":"0.1","info":{"id":"Ns3SR8","date":"1632771295","viewed":97,"name":"AA line","username":"rafastv","description":"Anti-aliasing on the line","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["line","antialiasing","aa","rotating","alias","straight","jaggies"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 ab[8];\n    /* AA method 4, post-processing */\n    ab[0] = (fragCoord + vec2( 1.0, 1.0))/iResolution.xy;\n    ab[1] = (fragCoord + vec2( 1.0,-1.0))/iResolution.xy;\n    ab[2] = (fragCoord + vec2(-1.0,-1.0))/iResolution.xy;\n    ab[3] = (fragCoord + vec2(-1.0, 1.0))/iResolution.xy;\n    ab[4] = (fragCoord + vec2( 1.0, 0.0))/iResolution.xy;\n    ab[5] = (fragCoord + vec2(-1.0, 0.0))/iResolution.xy;\n    ab[6] = (fragCoord + vec2( 0.0,-1.0))/iResolution.xy;\n    ab[7] = (fragCoord + vec2( 0.0, 1.0))/iResolution.xy;\n    \n    vec3 color;\n    color += texture(iChannel0, vec2(uv)).rgb;\n    for (int i=0;i<8;i++)\n        color += texture(iChannel0, vec2(ab[i])).rgb;\n    fragColor = vec4(color/9.,1.0);\n    /* no post-processing AA */\n    //color = texture(iChannel0, vec2(uv)).rgb;\n    //fragColor = vec4(color,1.0);\n}\n\n\n/* Copyright (c) 2021 Rafael S. T. Vieira\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights  \n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float f(float x) // f(x) = x\n{\n    return tan(iTime*.25)*x;\n}\n\nfloat dist2line(vec2 p) // pixel's distance to the line \n{\n    vec2 dir = vec2(2., f(2.));\n    vec2 proj = dot(p,dir)/dot(dir,dir) * dir;\n    return length(proj - p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float aspect_ratio = iResolution.x/iResolution.y;\n    vec2 uv = fragCoord/iResolution.y - 0.5*vec2(aspect_ratio,1.0);\n    \n    float scale = 10., thickness = 5.;\n    uv = uv * scale;\n\n    float pixel_side = 1./iResolution.y * scale * (thickness * .5); \n    \n    vec3 color = vec3(0.);\n    \n    /* no-AA */\n    //if (dist2line(uv) <= pixel_side*.5)\n    //    color = vec3(1.); \n        \n    /* AA method 1, pre-processing; distance    */\n    //color = vec3(1. - dist2line(uv)/pixel_side); \n        \n    /* AA method 2, pre-processing; distance sample with exponential function */\n    color = vec3(1. - pow(dist2line(uv)/pixel_side,.8));    \n        \n    /* AA method 3, pre-processing; distance sample with subpixels */\n    /*\n    vec2 ab[4];\n    ab[0] = vec2(uv) + vec2( pixel_side, pixel_side)*.5;\n    ab[1] = vec2(uv) + vec2( pixel_side,-pixel_side)*.5;\n    ab[2] = vec2(uv) + vec2(-pixel_side,-pixel_side)*.5;\n    ab[3] = vec2(uv) + vec2(-pixel_side, pixel_side)*.5;\n    float mn = dist2line(uv);\n    for (int i=0;i<4;i++)\n        if (dist2line(ab[i]) < mn)\n            mn = dist2line(ab[i]);\n    color = vec3(1. - pow(mn/pixel_side,2.));*/\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}\n\n\n/* Copyright (c) 2021 Rafael S. T. Vieira\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights  \n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = vec3(0.);\n    /** no AA **/\n    if (fragCoord.x == fragCoord.y)\n        color = vec3(1.);\n    /** 2 pixels of AA **/\n    if ((fragCoord.x == (fragCoord.y-1.)) || (fragCoord.x == (fragCoord.y+1.)))\n        color = vec3(.5);\n    /** 4 pixels of AA **/\n    //if ((fragCoord.x == (fragCoord.y-2.)) || (fragCoord.x == (fragCoord.y+2.)))\n    //    color = vec3(.25);\n    /** 6 pixels of AA **/\n    //if ((fragCoord.x == (fragCoord.y-3.)) || (fragCoord.x == (fragCoord.y+3.)))\n    //    color = vec3(.125);\n    /** 8 pixels of AA **/\n    //if ((fragCoord.x == (fragCoord.y-4.)) || (fragCoord.x == (fragCoord.y+4.)))\n    //    color = vec3(.0625);\n    fragColor = vec4(color, 1.0);\n}\n\n\n/* Copyright (c) 2021 Rafael S. T. Vieira\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights  \n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */","name":"Buffer B","description":"","type":"buffer"}]}