{"ver":"0.1","info":{"id":"wtGGRt","date":"1581322607","viewed":132,"name":"Colorful Metaballs","username":"a1pha1","description":"wobbling metaballs","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["wobble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash2(vec2 val)\n{\n    return fract(cos(val.x*12.45252)*55346.325+sin(val.y)*43758.5453123);\n}\n\nfloat poly(float x, float a, float b, float c, float d)\n{\n    return a*x*x*x+b*x*x+c*x+d;\n}\n\nfloat cubic(float x, float A, float B, float C, float D)\n{\n    float d = B;\n    float c = (C-A)/2.;\n    float a = (D-B)/2. - 2.*C + c + 2.*d;\n    float b = C - a - c - d;\n    \n    return poly(x, a, b, c, d);\n}\n\nfloat bicubic(vec2 p, mat4 data)\n{\n    float A = cubic(p.y, data[0][0], data[0][1], data[0][2], data[0][3]);\n    float B = cubic(p.y, data[1][0], data[1][1], data[1][2], data[1][3]);\n    float C = cubic(p.y, data[2][0], data[2][1], data[2][2], data[2][3]);\n    float D = cubic(p.y, data[3][0], data[3][1], data[3][2], data[3][3]);\n\treturn cubic(p.x, A, B, C, D);\n}\n\nfloat bicubicNoise(vec2 p)\n{\n    vec2 pos = floor(p);\n    vec2 dpos = p-pos;\n   \n    mat4 dat;\n    dat[0] = vec4(hash2(pos+vec2(-1., -1.)), hash2(pos+vec2(-1., 0.)),hash2(pos+vec2(-1., 1.)),hash2(pos+vec2(-1., 2.)));\n    dat[1] = vec4(hash2(pos+vec2(0., -1.)), hash2(pos+vec2(0., 0.)),hash2(pos+vec2(0., 1.)),hash2(pos+vec2(0., 2.)));\n    dat[2] = vec4(hash2(pos+vec2(1., -1.)), hash2(pos+vec2(1., 0.)),hash2(pos+vec2(1., 1.)),hash2(pos+vec2(1., 2.)));\n    dat[3] = vec4(hash2(pos+vec2(2., -1.)), hash2(pos+vec2(2., 0.)),hash2(pos+vec2(2., 1.)),hash2(pos+vec2(2., 2.)));\n\n    return bicubic(dpos, dat);\n}\n\nfloat noise(vec2 p)\n{\n    p *= 4.;\n    float H = 0.9;\n    float G = pow(2., -H);\n    float a = 1.;\n    float f = 1.;\n    float t = 0.;\n    \n    for(int i = 0; i < 3; i++)\n    {\n        t += a * bicubicNoise(p*f);\n        a *= G;\n        f *= 2.;\n    }\n    return t*0.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float w = 0.5;\n    \n    vec3 sum = vec3(0.);\n    \n    for(float i = 0.; i < 10.; i++)\n    {\n        vec2 npos = vec2(cos(iTime*w), sin(iTime*w))+i*vec2(330., 73.);\n    \tfloat x = noise(npos)-0.5;\n    \tfloat y = noise(npos+vec2(100.,20.))-0.5;\n        vec2 vec = (uv-vec2(x,y));\n        vec3 rgb = vec3(noise(npos+vec2(7., 3.)), noise(npos+vec2(2.,10.)), noise(npos+vec2(12., 17.)));\n    \tsum += rgb / pow(vec.x*vec.x+vec.y*vec.y, 0.8);\n    }\n    col = vec3(sum/100.);\n\t\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}