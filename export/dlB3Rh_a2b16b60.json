{"ver":"0.1","info":{"id":"dlB3Rh","date":"1672826342","viewed":113,"name":"fbm colorful water ","username":"amuda","description":"colorful water in fbm method","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 n) { \n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n    vec2 ip = floor(p);\n    vec2 u = fract(p);\n    u = u*u*(3.0-2.0*u);\n\n    float res = mix(\n        mix(rand(ip), rand(ip+vec2(1.0,0.0)), u.x),\n        mix(rand(ip+vec2(0.0,1.0)), rand(ip+vec2(1.0,1.0)),u.x), \n        u.y);\n    \n    return res * res * res;\n}\n\n\nfloat fbm( in vec2 x)\n{    \n    float G = exp2(-0.8);\n    float f = 1.0;\n    float a = 1.0;\n    float t = 0.0;\n    for( int i=0; i<8; i++ )\n    {\n        t += a*noise(f*x);\n        f *= 2.0;\n        a *= G;\n    }\n    return t;\n}\n\nfloat pattern(in vec2 p)\n{\n    vec2 q = vec2(fbm(p + vec2(1.0, 1.0)), fbm(p + vec2(5.1, 1.3)));\n\n    return fbm(p + 4.0 * q);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = 2.0 * fragCoord / min(iResolution.x, iResolution.y) - 1.0;\n    uv = uv * 5.0;\n    uv = uv + noise(vec2(iTime * 1.0 + uv * 2.0));\n    \n    fragColor = vec4(pattern(uv), pattern(uv + vec2(2.3, 8.9)), pattern(uv + vec2(0.7, 1.5)), 1.0);\n}","name":"Image","description":"","type":"image"}]}