{"ver":"0.1","info":{"id":"mdKyDD","date":"1697630128","viewed":56,"name":"eeeeeeeewwwww","username":"akabozu","description":"eeeee","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["eee"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define D 0.048\n#define I_RAY 15\n#define I_NORMAL 5\n\nvec2 wd(vec2 p, vec2 d, float f) {\n    float x = dot(d, p) * f;\n    float w = exp(sin(x) - 1.0);\n    float dx = w * cos(x);\n    return vec2(w, -dx);\n}\n\nfloat gw(vec2 p, int i) {\n    float t = 0.0;\n    float ph = 4.0;\n    float we = 3.0;\n    float sum_w = 1.0;\n    float wsum = 0.0;\n    \n    for (int j = 0; j < i; j++) {\n        vec2 dp = vec2(sin(t), cos(t));\n        vec2 r = wd(p, dp, ph);\n        p += dp * r.y * we * D;\n        t += 15.0;\n        wsum += we;\n        we = mix(we, 1.9, 0.2);\n        ph *= 0.98;\n        sum_w += r.x * we;\n    }\n    \n    return sum_w / wsum;\n}\n\nfloat rs(vec3 c, vec3 s, vec3 e, float d) {\n    vec3 p = s;\n    float h = 0.0;\n    vec2 z = vec2(0.0);\n    vec3 dr = normalize(e - s);\n    \n    for (int j = 0; j < 318; j++) {\n        h = gw(p.xz * 0.1, I_RAY) * d - d;\n        if (h + 0.01 > p.y) {\n            return distance(p, c);\n        }\n        p += dr * (p.y - h);\n    }\n    \n    return -1.0;\n}\n\nfloat H = 0.0;\n\nvec3 n(vec2 p, float e, float d) {\n    vec2 x = vec2(e, 0);\n    H = gw(p.xy * 0.1, I_NORMAL) * d;\n    vec3 a = vec3(p.x, H, p.y);\n    return normalize(cross((a - vec3(p.x - e, gw(p.xy * 0.1 - x.xy * 0.1, I_NORMAL) * d, p.y)), \n                         (a - vec3(p.x, gw(p.xy * 0.1 + x.yx * 0.1, I_NORMAL) * d, p.y + e))));\n}\n\nmat3 rm(vec3 a, float t) {\n    float s = sin(t);\n    float c = cos(t);\n    float o = 1.0 - c;\n    return mat3(o * a.x * a.x + c, o * a.x * a.y - a.z * s, o * a.z * a.x + a.y * s, \n                o * a.x * a.y + a.z * s, o * a.y * a.y + c, o * a.y * a.z - a.x * s, \n                o * a.z * a.x - a.y * s, o * a.y * a.z + a.x * s, o * a.z * a.z + c);\n}\n\nvec3 r(vec2 u) {\n    u = (u * 2.0 - 1.0) * vec2(iResolution.x / iResolution.y, 1.0);\n    vec3 p = normalize(vec3(u.x, u.y, 1.0) + vec3(u.x, u.y, -1.0) * pow(length(u), 2.0) * 0.05);    \n    if (iResolution.x < 400.0) return p;\n    \n    vec3 r = rm(vec3(0.0, -1.0, 0.0), 3.0 * ((0.6) * 2.0 - 1.0)) * rm(vec3(1.0, 0.0, 0.0), 1.5 * ((0.6) * 2.0 - 1.0)) * p;\n    return r;\n}\n\nfloat ip(vec3 o, vec3 dir, vec3 point, vec3 n) { \n    return clamp(dot(point - o, n) / dot(dir, n), -1.0, 9991999.0); \n}\n\nvec3 eca(vec3 rd, vec3 sd) {\n    sd.y = max(sd.y, -0.07);\n    float st = 1.0 / (rd.y * 1.0 + 0.1);\n    float st2 = 1.0 / (sd.y * 11.0 + 1.0);\n    float rdsdt = pow(abs(dot(sd, rd)), 2.0);\n    float st_mie = st2 * 0.2;\n    vec3 sun_color = mix(vec3(1.0), max(vec3(0.0), vec3(1.0) - vec3(5.5, 13.0, 22.4) / 22.4), st2);\n    vec3 blue_sky = vec3(5.5, 13.0, 22.4) / 22.4 * sun_color;\n    vec3 blue_sky2 = max(vec3(0.0), blue_sky - vec3(5.5, 13.0, 22.4) * 0.002 * (st + -6.0 * sd.y * sd.y));\n    blue_sky2 *= st * (0.24 + rdsdt * 0.24);\n    return blue_sky2 * (1.0 + 1.0 * pow(1.0 - rd.y, 3.0)) + st_mie * sun_color;\n}\n\nvec3 gat(vec3 ray) {\n    return eca(ray, normalize(vec3(1.0))) * 0.5;\n}\n\nfloat sun(vec3 ray) {\n    vec3 sd = normalize(vec3(1.0));   \n    return pow(max(0.0, dot(ray, sd)), 528.0) * 110.0;\n}\n\nvec3 tonemap(vec3 c) {    \n    mat3 m1 = mat3(\n        0.59719, 0.07600, 0.02840,\n        0.35458, 0.90834, 0.13383,\n        0.04823, 0.01566, 0.83777\n    );\n    mat3 m2 = mat3(\n        1.60475, -0.10208, -0.00327,\n        -0.53108,  1.10813, -0.07276,\n        -0.07367, -0.00605,  1.07602\n    );\n    vec3 v = m1 * c;    \n    vec3 a = v * (v + 0.0245786) - 0.000090537;\n    vec3 b = v * (0.983729 * v + 0.4329510) + 0.238081;\n    return pow(clamp(m2 * (a / b), 0.0, 1.0), vec3(1.0 / 2.2));    \n}\n\nvoid mainImage( out vec4 fc, in vec2 fCoord )\n{\n    vec2 u = fCoord.xy / iResolution.xy;\n    \n    float sd = 9.1;\n    vec3 floor = vec3(0.0, -sd, 0.0);\n    vec3 ceil = vec3(0.0, 0.0, 0.0);\n    vec3 o = vec3(0.0, 1.0, 0.0);\n    vec3 r = r(u);\n    float hh = ip(o, r, ceil, vec3(0.0, 1.0, 0.0));\n    \n    if (r.y >= -0.01) {\n        vec3 C = gat(r) * 2.0 + sun(r);\n        C = tonemap(C);\n        fc = vec4(C, 1.0);   \n        return;\n    }\n    \n    float lh = ip(o, r, floor, vec3(0.0, 1.0, 0.0));\n    vec3 hp = o + r * hh;\n    vec3 lp = o + r * lh;\n    float dist = rs(o, hp, lp, sd);\n    vec3 p = o + r * dist;\n\n    vec3 N = n(p.xz, 0.01, sd);\n    vec2 v = N.xz * (1.0 - N.y);\n    N = mix(vec3(0.0, 1.0, 0.0), N, 1.0 / (dist * dist * 0.01 + 1.0));\n    vec3 R = reflect(r, N);\n    float f = 0.04 + (1.0 - 0.04) * (pow(1.0 - max(0.0, dot(-N, r)), 5.0));\n    \n    vec3 C = f * gat(R) * 1.0 + f * sun(R) + vec3(0.743, 0.486, 0.322) * 0.5;\n    C = tonemap(C);\n    \n    fc = vec4(C, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}