{"ver":"0.1","info":{"id":"XXK3Wc","date":"1718388246","viewed":51,"name":"Aprendiendo a crear un  shader","username":"ebriopes","description":"Mi primer Shader siguiendo un videotutorial en YouTube","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float M_PI = 3.1415926535897932384626433832795;\n\nvec3 palette(float t){\n    vec3 a = vec3(0.228, 0.588, 0.5);\n    vec3 b = vec3(0.288, 0.5, 0.5);\n    vec3 c = vec3(0.628, 1.0, 0.667);\n    vec3 d = vec3(1.238, 1.60, 0.33);\n\n    return a + b*cos( 2.*M_PI * (c*t + d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n    vec2 uv0 = uv;\n    //vec2 uv = fragCoord/iResolution.y;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 5.; i++){\n        uv = fract(uv * 1.431234) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + iTime*.5);\n\n        //d = sin(d*8. + iTime)/8.;\n        d = sin(d * M_PI * 2. + iTime)/2.;\n        d = abs(d);\n\n        d = pow(0.05/d, 2.0);\n        \n\n        finalColor += (col * d);\n    }\n\n    // Output to screen\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}