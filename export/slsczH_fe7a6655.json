{"ver":"0.1","info":{"id":"slsczH","date":"1647530305","viewed":237,"name":"SDF Gradient Experimentation","username":"mehow_one","description":"Trying to get a better understanding of distances functions in 2D","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["sdf","gradient","segment","irridescent"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 irri(float hue) {\n  \n  return .5+ .5 *cos(( 9.*hue)+ vec3(0.,23.,21.));\n\n}\n\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n#define T iTime\n\nvec2 line(in vec2 p, in vec2 a, in vec2 b) {\n\tvec2 ba = b - a;\n\tvec2 pa = p - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n\treturn vec2(length(pa - h * ba),h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec3 sum = vec3(0.0);\n    float valence = 0.0;\n    for (float i = 0.; i <= 4.; i++) {\n        float id = 0.2 + (i/5.)*.75;\n        vec2 start = vec2(id,0.25);\n        vec2 end = vec2(id,0.75);\n        float blend = 2.0;\n        float v = float(i+1.)*.152;\n        vec2 d = line(uv,start,end);\n        float w =  1. / pow(d.x, blend);\n        vec3 colA = irri(id+T*0.1);//d.y*length(end-start)\n        sum += w * colA;\n        valence += w;\n        \n    }\n    sum /= valence;\n    sum = pow(sum, vec3(1.0/2.2));    \n\tfragColor = vec4(sum, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}