{"ver":"0.1","info":{"id":"dljyRc","date":"1693419533","viewed":69,"name":"Repeating Sine Wave","username":"tplassman","description":"Repeating sine wave pattern","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec2 shear(\n    in vec2 P,\n    in vec2 SHEAR)\n{\n    return vec2(\n        P.x + SHEAR.x * P.y,\n        P.y + SHEAR.y * P.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -0.5 to 0.5 (origin in center))\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    // Reference to starting plane\n    vec2 uv0 = uv;\n    // Shear xy plane\n    uv.xy = shear(uv.xy, vec2(tan(PI), 1));\n    // Repeat plane\n    uv.y = fract(uv.y * 3.0) - 0.5;\n    \n    float freq = 1.0;\n    float amp = sin(uv0.x - iTime) / 2.0;\n\n    // Calculate y-pos out of x-pos\n    float y = sin(uv.x * PI * freq - iTime) * amp;\n\n    // Output to screen\n    fragColor = vec4(10. - abs(uv.y - y) * iResolution.y);\n}","name":"Image","description":"","type":"image"}]}