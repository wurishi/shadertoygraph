{"ver":"0.1","info":{"id":"wsKXDm","date":"1574232010","viewed":800,"name":"Stars (ltp)","username":"liutp","description":"change from https://www.shadertoy.com/view/MtB3zW\n\n画星星","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["stars","starfield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rand2(vec2 p)\n{\n    p = vec2(dot(p, vec2(12.9898,78.233)), dot(p, vec2(26.65125, 83.054543))); \n    return fract(sin(p) * 43758.5453);\n}\n\nfloat rand(vec2 p)\n{\n    return fract(sin(dot(p.xy ,vec2(54.90898,18.233))) * 4337.5453);\n}\n\nfloat stars(in vec2 x, float numCells, float size, float br)\n{\n    vec2 n = x * numCells;\n    vec2 f = floor(n);\n\n\tfloat d = 1.0e10;\n    for (int i = -1; i <= 1; ++i)\n    {\n        for (int j = -1; j <= 1; ++j)\n        {\n            vec2 g = f + vec2(float(i), float(j));\n\t\t\tg = n - g - rand2(mod(g, numCells)) + rand(g);\n            // Control size\n            g *= 1. / (numCells * size);\n\t\t\td = min(d, dot(g, g));\n        }\n    }\n\n    return br * (smoothstep(.95, 1., (1. - sqrt(d))));\n}\n\n#define StarsNum 32.\t//number of stars\n#define StarsSize 0.025\t//size of stars\n#define StarsBright 2.0\t//Bright of stars\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float resolution = max(iResolution.y, iResolution.y);\n    vec2 coord = fragCoord.xy / resolution;\n    vec3 result = vec3(0.);\n    result += stars(coord, StarsNum, StarsSize, StarsBright);\n    fragColor = vec4(result, 1.);\n}","name":"Image","description":"","type":"image"}]}