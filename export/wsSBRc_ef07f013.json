{"ver":"0.1","info":{"id":"wsSBRc","date":"1590504644","viewed":144,"name":"hearts5♡♡♡♡","username":"HaleyHalcyon","description":"1","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distCustom(float x, float y)\n{\n    float n = -0.5 * abs(x) + y;\n    return log(\n        x * x + 1.5 * n * n\n    );\n}\n\nfloat fn(float x, float multi, float offset)\n{\n    return max(0.0, min(1.0, (sin(x * 3.14159265) + offset) * multi));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float PI = 3.14159265;\n    const float PI_3 = PI / 3.;\n    const float speed = 5.;\n    const float density = 3.;\n    const float period = 15.;\n    const vec3 color1 = vec3(1.2, 0.5, 0.8);\n    const vec3 color2 = vec3(0.3, 0.8, 1.0);\n    \n    float hue = iTime * 2. * PI / 5.;\n    vec3 color3 = (vec3(sin(hue), sin(hue + 2. * PI_3), sin(hue - 2. * PI_3)) + 1.0) * .5;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n\tuv -= vec2(iResolution.x / scale, iResolution.y / scale) / 2.;\n    uv *= 2.0;\n    \n    float dist = log(uv.x*uv.x+uv.y*uv.y) / 2.;\n    float distH = distCustom(uv.x, uv.y);\n    float angle = atan(uv.y, uv.x);\n    \n    float timeH = 32.0 * cos(smoothstep(0.0, 1.0, fract(iTime / period)) * PI);\n    \n    // Time varying pixel color\n    float c1 = fn((distH + timeH) * density + 0.0, 1.8, -0.2);\n    float c2 = fn((distH + timeH) * density + 0.8, 4., -0.7);\n    float c3 = fn(dist * 4.0 + angle / PI + iTime * speed + PI, 3.0, -0.8);\n    // Output to screen\n    fragColor = vec4(\n\t\tc1 * color1 + c2 * color2 + c3 * color3,\n        1.\n    );\n}","name":"Image","description":"","type":"image"}]}