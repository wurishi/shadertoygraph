{"ver":"0.1","info":{"id":"XffSDS","date":"1705623242","viewed":77,"name":"alices wonderland","username":"javelamaker","description":"mama mirkins","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mama"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 uv)\n{\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n\n    // Smooth interpolation function (Hermite cubic)\n    float a = rand(i);\n    float b = rand(i + vec2(1.0, 0.0));\n    float c = rand(i + vec2(0.0, 1.0));\n    float d = rand(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\nfloat theta(vec2 uv)\n{\n  float pi = PI;\n  float theta = atan(uv.y, uv.x);\n  return theta;\n}\n\nvec4 _Star = vec4(1.,1.,5.,5.);\n\nfloat star(vec2 p)\n{\n   // hard star\n   float pi = PI;\n   float a = theta(p) + iTime * _Star.g;\n\n   float a1 = (a - floor(a / (2.0 * pi / _Star.b)) * (2.0 * pi / _Star.b)) + pi / _Star.a;\n   float a2 = (-a - floor(-a / (2.0 * pi / _Star.b)) * (2.0 * pi / _Star.b)) + pi / _Star.a;\n\n   return clamp(1. - (length(p) - .5 * sin(pi / 10.) / min(sin(a1), sin(a2))) * _Star.r, .0, 1.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 offset = vec2(-.5, -.5);\n    vec2 size = vec2(10,5.8)/2.;\n    uv += offset;\n    uv *= size;\n\n    vec2 m = sin(iTime/3.) + (vec2(sin(iTime), cos(iTime))/8.);\n    \n    // Time varying pixel color\n    vec3 col = floor((1.-star(uv) + noise(uv*10.)/7.) * 4.)/4. * vec3(.4,.2,0);\n    float a = theta(uv) * 2.;\n    float d = star(uv /5.);\n    float w = (sin(a*4.+3.14159*5./3.+5./d*5.-(iTime)*6.)*.5+.5)*1.*sin(a*7.);\n    \n    col = mix(floor(vec3(w)*5.)/3., col, 1. -d * (clamp(iTime-10.,.0,100.)/40.));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}