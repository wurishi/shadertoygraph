{"ver":"0.1","info":{"id":"XsyBW1","date":"1528497197","viewed":287,"name":"Ocean Creature","username":"fizzer","description":"A small sketch of some kind of aquatic animal in the open ocean.\nSorry for the really messy code this time. It's just a quick sketch.","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["ocean","creature"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.141592653589\n\nfloat time;\n\nfloat polydist(vec2 p,float angleoffset)\n{\n    float d=0.;\n    const int N=6;\n    for(int i=0;i<N;++i)\n    {\n        float a=float(i)/float(N)*PI*2.+angleoffset;\n        vec2 n=vec2(cos(a), sin(a));\n        d=max(d,dot(n,p));\n    }\n    return d;\n}\n\nvec2 intersectSphere(vec3 ro, vec3 rd, vec3 org, float rad)\n{\n    float a = dot(rd, rd);\n    float b = 2. * dot(rd, ro - org);\n    float c = dot(ro - org, ro - org) - rad * rad;\n    float desc = b * b - 4. * a * c;\n    if (desc < 0.)\n        return vec2(1., 0.);\n\n    return vec2((-b - sqrt(desc)) / (2. * a), (-b + sqrt(desc)) / (2. * a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor.a=1.0;\n    fragColor.rgb=vec3(0);\n    time=iTime;\n    vec2 tt = (fragCoord/iResolution.xy*2.-1.)*.75;\n    tt.x*=iResolution.x/iResolution.y;\n    float an=0.;\n\n    vec3 ro=vec3(0.,1.,5);\n    vec3 rd=normalize(vec3(tt.xy,-1.3));\n    vec2 ot=tt.xy;\n\n    rd.xy=normalize(rd.xy)*(length(rd.xy)-pow(length(rd.xy),4.)/1.5);\n\n    an=0.2;\n    rd.yz=mat2(cos(an),sin(an),sin(an),-cos(an))*rd.yz;\n    ro.yz=mat2(cos(an),sin(an),sin(an),-cos(an))*ro.yz;\n\n    an=-2.5;\n    rd.xz=mat2(cos(an),sin(an),sin(an),-cos(an))*rd.xz;\n    ro.xz=mat2(cos(an),sin(an),sin(an),-cos(an))*ro.xz;\n\n    vec3 rdx=rd+dFdx(rd);\n    vec3 rdy=rd+dFdy(rd);\n\n    float t=-ro.y/rd.y;\n\n    vec3 spherepos=vec3(0.,sin(time*4.)*.1,0.);\n\n    vec2 dt=intersectSphere(ro, rd, spherepos, 1.);\n\n    if(dt.x<dt.y&&dt.x<t)\n    {\n        vec3 rp=ro+rd*dt.x-spherepos;\n        an=3.8;\n        rp.xz=mat2(cos(an),sin(an),sin(an),-cos(an))*rp.xz;\n\n        an=cos(time*4.)*.05;\n        rp.yz=mat2(cos(an),sin(an),-sin(an),cos(an))*rp.yz;\n\n        fragColor.rgb=vec3(.5,1,.5)/1.3;\n        float a=smoothstep(0.,.0005,dot(normalize(vec3(abs(rp.x),rp.y,rp.z)),normalize(vec3(.6,1.,-1)))-.99);\n\n        if(mod(time-.5,3.)<.1)\n            a=step(abs(rp.y-.65),.01)*step(abs(abs(rp.x)-.4),.1);\n\n        a=max(a,1.-smoothstep(0.,.005,abs(length(rp.xy-vec2(0.,.3))-.15)-.02-.01));\n\n        fragColor.rgb=mix(fragColor.rgb,vec3(.8),a);\n    }\n    else if(t>0.&&(t<dt.x||dt.x>dt.y))\n    {\n        vec3 rp=ro+rd*t;\n        vec3 rpx=ro+rdx*-ro.y/rdx.y;\n        vec3 rpy=ro+rdy*-ro.y/rdy.y;\n\n        float d=length(rp-spherepos)-1.;\n\n        float a=0.;\n        float wsum=0.;\n        const int N=3;\n        for(int i=-N;i<=+N;++i)\n        {\n            for(int j=-N;j<=+N;++j)\n            {\n                float w=1.;\n                float u=float(i)/float(N)/2., v=float(j)/float(N)/2.;\n                vec3 rp2=rp+(rpx-rp)*u+(rpy-rp)*v;\n\n                rp2.xz+=normalize(rp2.xz)*cos(d*3.-time)*exp(-d)*2.;\n\n                rp2.xz*=1.5;\n                a+=w*step(abs(cos(rp2.z+sin(rp2.x)+time/3.+cos(rp2.z+rp2.x/7.)*1.5)*cos(time/2.+rp2.x+sin(rp2.z/2.+15.*sin(rp2.z/20.)))),\n                          -pow(smoothstep(10.,240.,length(rp2.xz)),.5)+.2+cos(time*2.+rp2.x/3.-rp2.z/2.)*.05);\n                wsum+=w;\n            }\n        }\n\n        a/=wsum;\n\n        a+=step(fract(d*2.-time/2.),.3-d/4.);\n\n        fragColor.rgb=mix(vec3(0.3,0.35,1.),vec3(1),clamp(a,0.,2.)/10.);\n\n\n        fragColor.rgb+=exp(-length(rp.xz-ro.xz)/4.)*.3;\n    }\n\n    {\n        float a=0.;\n        float u=(atan(rd.z,rd.x)/PI)+time/400., v=acos(abs(rd.y))/PI+.02;\n\n        for(int i=0;i<45;++i)\n        {\n            float u2=u+float(i)*.2;\n            a=max(a,(cos(float(i)*13.)*.3+.7)*(1.-(cos(float(i)*9.)*.3+.7)*smoothstep(0.,.03,(polydist(vec2(mod(u2*8.,1.)-.5,(v-pow(.45+cos(float(i)*18.+floor(u2*8.)*21.)*.08,.8))*10.),floor(u2*8.)+time/15.))-(.11+cos(float(i))*.12))));\n        }\n\n        fragColor.rgb+=mix(vec3(0.3,0.35,1)/1.4*mix(.1,1.,step(0.,rd.y)),vec3(1),clamp(a,0.,1.)/3.)*mix(.2,1.,step(0.,rd.y));\n    }\n\n    fragColor.rgb+=pow(exp(-abs(rd.y)*(1.+100.*step(rd.y,0.))),.24)*.3;\n    fragColor.rgb+=exp(-length(ot)/2.)*.2;\n\n    float b=smoothstep(max(1e-4,length(max(abs(ot)-.67,0.))-.05),.0,.001);\n\n    fragColor.rgb=mix(min(fragColor.rgb,1.),vec3(.3),b);\n\n    fragColor.rgb=pow(fragColor.rgb,vec3(1./2.4));\n}\n\n","name":"Image","description":"","type":"image"}]}