{"ver":"0.1","info":{"id":"lcsSW4","date":"1705353004","viewed":80,"name":"Metaballs test","username":"IanDotVos","description":"As it says a small test about metaballs, antialiasing is set for fullscreen.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["metaball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float metaball_function(vec2 point, vec2 ball_center, float radius)\n{\n    return 0.05 / pow(sqrt((point.x - ball_center.x) * (point.x - ball_center.x) + \n    (point.y - ball_center.y) * (point.y - ball_center.y)), radius);\n}\n\nfloat clamper(float x)\n{\n    return max(0.0, min(1.0, x));\n}\n\nfloat antialiaser(float x)\n{\n    return clamper(min(20.0 * (x - 3.0), float((x) > 3.0)));\n    //CHANGE THIS 20.0 TO 10.0 FOR BETTER ANTIALIASING WITHOUT FULLSCREEN\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 center = iResolution.xy / (2.0 * iResolution.y);\n    \n    vec4 colors[5];\n    colors[0] = vec4(0.396, 0.294, 0.737, 1.0);\n    colors[1] = vec4(0.1411, 0.8156, 0.1823, 1.0);\n    colors[2] = vec4(0.8, 0.2, 0.4, 1.0);\n    colors[3] = vec4(0.5, 0.23, 0.8, 1.0);\n    colors[4] = vec4(0.6, 0.3, 0.6, 1.0); //Changing this color to white is interesting\n    \n    float time = iTime;\n    \n    vec2 centers[5];\n    centers[0] = center + 0.2 * vec2(sin(time * 0.2), cos(time * 0.02));\n    centers[1] = center + vec2(sin(distance(centers[0], center)), 0.0);\n    centers[2] = center - 0.4 * vec2(sin(time * 0.4) * sin(time * 0.5) * 0.5, cos(time * 0.2));\n    centers[3] = center + 0.4 * vec2(sin(time * 1.0) * 0.1, 0.2 * sin(iTime * 0.8));\n    centers[4] = center + vec2(0.2, 0.2 * sin(time * 0.2));\n    \n    float radiuses[5];\n    radiuses[0] = 1.0;\n    radiuses[1] = 1.3;\n    radiuses[2] = 1.8;\n    radiuses[3] = 1.2;\n    radiuses[4] = 0.7;\n    \n    float results[5];\n    float sum = 0.0;\n\n    float closeness = 0.0f;\n    vec4 final_color = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    for (int i = 0; i < 5; i++)\n    {\n        float f = metaball_function(uv, centers[i], radiuses[i]);\n        closeness += f;\n        results[i] = f;\n        sum += f;\n    }\n    \n    for (int i = 0; i < 5; i++)\n    {\n        final_color += vec4(0.8, 0.2, 0.4, 1.0) * results[i] / (sum * 0.5);\n    }\n    \n    \n    //final_color = vec4(1.0, 1.0, 1.0, 1.0);\n    \n\n    // Output to screen\n    fragColor = mix(vec4(1.0, 1.0, 1.0, 1.0), final_color, antialiaser(closeness));\n}","name":"Image","description":"","type":"image"}]}