{"ver":"0.1","info":{"id":"DsSSR1","date":"1669876655","viewed":169,"name":"AI Written Smiley","username":"oxters168","description":"This smiley face code was written by ChatGPT from OpenAI","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["face","ai"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 bezier(vec2 start, vec2 ctrl1, vec2 ctrl2, vec2 end, float t)\n{\n  return (1.0 - t) * (1.0 - t) * (1.0 - t) * start +\n         3.0 * (1.0 - t) * (1.0 - t) * t * ctrl1 +\n         3.0 * (1.0 - t) * t * t * ctrl2 +\n         t * t * t * end;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  // Set the background color to black\n  fragColor = vec4(0, 0, 0, 1);\n\n  // Calculate the position of the center of the screen\n  vec2 center = vec2(iResolution.x / 2.0, iResolution.y / 2.0);\n\n  // Calculate the distance between the fragment and the center of the screen\n  float dist = distance(fragCoord, center);\n\n  // If the fragment is within the circle that defines the smiley face, set its color to yellow\n  if (dist < 80.0)\n  {\n    fragColor = vec4(1, 1, 0, 1);\n  }\n\n  // Calculate the position of the left eye\n  vec2 leftEyePos = vec2(center.x - 20.0, center.y + 20.0);\n\n  // If the fragment is within the circle that defines the left eye, set its color to black\n  if (distance(fragCoord, leftEyePos) < 10.0)\n  {\n    fragColor = vec4(0, 0, 0, 1);\n  }\n\n  // Calculate the position of the right eye\n  vec2 rightEyePos = vec2(center.x + 20.0, center.y + 20.0);\n\n  // If the fragment is within the circle that defines the right eye, set its color to black\n  if (distance(fragCoord, rightEyePos) < 10.0)\n  {\n    fragColor = vec4(0, 0, 0, 1);\n  }\n\n  // Calculate the start and end points of the smile\n  vec2 smileStart = vec2(center.x - 30.0, center.y - 20.0);\n  vec2 smileEnd = vec2(center.x + 30.0, center.y - 20.0);\n\n  // Calculate the control points of the Bezier curve that defines the smile\nvec2 smileCtrl1 = vec2(center.x - 30.0, center.y - 60.0); // change -40.0 to -50.0\nvec2 smileCtrl2 = vec2(center.x + 30.0, center.y - 60.0); // change -40.0 to -50.0\n\n\n  // Check if the fragment is within a certain distance of the Bezier curve at any parameter value in the range [0, 1]\n  for (float t = 0.0; t <= 1.0; t += 0.01)\n  {\n    if (distance(fragCoord, bezier(smileStart, smileCtrl1, smileCtrl2, smileEnd, t)) < 5.0)\n    {\n      fragColor = vec4(0, 0, 0, 1);\n    }\n  }\n}","name":"Image","description":"","type":"image"}]}