{"ver":"0.1","info":{"id":"MXsGRf","date":"1707783713","viewed":62,"name":"Andres_Test_FracCircles","username":"Andrelo","description":"Circle with effects following the mouse.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["testing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 lerp(vec3 colorone, vec3 colortwo, float value)\n{\n\treturn (colorone + value*(colortwo-colorone));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float F = 0.0;\n    vec2 mouseScaled = iMouse.xy / iResolution.xy ;\n    //vec2 uv = fragCoord / iResolution.xy * 2.0 -1.0;\n    //uv.x *= iResolution.x / iResolution.y;\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 mouseCentered = (iMouse.xy * 2.0 - iResolution.xy) / iResolution.y;\n    float distFromCenter = length(uv - mouseCentered);\n    \n    uv = uv - mouseCentered;\n    \n    for(float i = 0.0; i<5.0; i++ ){\n        uv = fract(uv * 1.4) - 0.5;\n\n        float radious = 0.15;\n        //float center = length(uv - mouseCentered);\n        float center = length(uv);\n        float d = center;\n\n        center -= radious;\n        center = abs(center);\n        center = smoothstep(0.0,0.15, center);\n        center = pow(0.02/center, 2.0);\n        //d -= radious;\n        d = d > radious ? sin(d*8.0 + iTime)/8.0 : 1.0;\n        d = abs(d);\n        d = smoothstep(0.0,0.1, d);\n        d = 0.02/d;\n\n        d += center;\n\n        F += d;\n    }\n    \n    //vec2 mouseScaled = (iMouse.xy * 2.0 - iResolution.xy) / iResolution.y;\n    float diagonal = abs(1.0-mouseScaled.x);\n    \n    vec3 centerColor = vec3(mouseScaled, diagonal) * 2.0;\n    vec3 edgeColor = 1.0 - centerColor;\n    fragColor = vec4(lerp(centerColor, edgeColor, distFromCenter/1.1)*1.25, 1.0) * vec4(F,F,F,1.0);\n}","name":"Image","description":"","type":"image"}]}