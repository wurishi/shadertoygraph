{"ver":"0.1","info":{"id":"tsdcR8","date":"1600420021","viewed":69,"name":"SphereIntersection","username":"luosiri","description":"Simple sphrere intersection","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"       \n\n/**\n * Return the normalized direction to march in from the eye point for a single pixel.\n * \n * fieldOfView: vertical field of view in degrees\n * size: resolution of the output image\n * fragCoord: the x,y coordinate of the pixel in the output image\n */\nvec3 rayDirection(float fieldOfView, vec2 size, vec2 fragCoord) {\n    vec2 xy = fragCoord - size / 2.0;\n    float z = size.y / tan(radians(fieldOfView) / 2.0);\n    return normalize(vec3(xy, z));\n}\nvec3 SampleSphrere(vec3 ori, vec3 dir ,out int hit){\n    vec4 sphere = vec4((iMouse.x / iResolution.x * 2.0 - 1.0) * 2.0,0,4,1);\n\thit = 0;\n    vec3 toBbl  = sphere.xyz - ori;\n    float dis = length(toBbl );\n    float dt = dot(normalize(toBbl),dir);\n    vec3 closerPoint = ori + dir * dis * dt;\n    float toSphere = length(closerPoint - sphere.xyz);\n    if(toSphere > sphere.w ){\n        return vec3(0,0,0);\n    }else{\n        float toEdge = sqrt((sphere.w * sphere.w) - (toSphere * toSphere ));\n        vec3 hitPointFrontSideWS = ori + dir * (dis * dt - toEdge);\n        //return hitPointFrontSideWS;\n        //return vec3(toEdge,toEdge,toEdge) ;\n        hit = 1;\n        return normalize(hitPointFrontSideWS - sphere.xyz) ;\n    }\n}\nvec3 LightDir(){\n\treturn normalize(vec3(sin(iTime),1,cos(iTime)) - vec3(0,0,0));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 dir = rayDirection(75.0, iResolution.xy, fragCoord);\n   \tint hit = 0;\n    vec3 vec = SampleSphrere(vec3(0,0,0),dir , hit);\n    vec3 col = vec3(0,0,0);\n    col = texture(iChannel0,dir).xyz ;\n\n    if(hit == 1){\n        col = vec3(0.9,0.1,0.2);\n    \tfloat fres = 1.0 - dot(-vec,dir);\n        fres = clamp(fres * fres * fres * fres + 0.5,0.0,1.0);\n        float light = dot(vec,normalize(LightDir())) * 0.5 + 0.5 ;\n        light = max(light,0.0);\n        col *= vec3(light,light,light);\n\n        vec3 envir = texture(iChannel0,reflect(dir,vec),0.0).xyz ;\n        col += envir * fres;\n\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}