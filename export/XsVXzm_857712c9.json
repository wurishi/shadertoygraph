{"ver":"0.1","info":{"id":"XsVXzm","date":"1463561357","viewed":329,"name":"AA Bouncing Ball","username":"tholzer","description":"Demonstrate bouncing antialiased ball in 2d.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","simulation","antialiasing","ball","animate","bouncing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// AABouncingBall\n// based on https://www.shadertoy.com/view/XsKXRm\n//---------------------------------------------------------\n// draw circle at pos with given radius\n//---------------------------------------------------------\nfloat circle(in vec2 pos, in float radius, in float halo)\n{\n  return clamp (halo * (radius - length(pos)), 0.0, 1.0);\n}\n//---------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.yy;\n    float t = iTime / 5.50;\n\n    float xPos = abs(mod(t, 2.0) -1.0) * 1.6;\n    vec2 center = vec2(0.085, 0.5) + vec2(xPos, -0.4+0.7*abs(sin(t*5.0)));\n\t\n    const vec3 circleColor = vec3(0.4, 0.3, 0.5);\n    const float radius = 0.1;\n    vec3 col = vec3(1.0);   // background\n\n    float d = circle (uv-center, radius, 111.0);\n    \n    col = mix(col, circleColor, d);\n    fragColor = vec4(col,1.0);    \n}","name":"Image","description":"","type":"image"}]}