{"ver":"0.1","info":{"id":"XtjGR3","date":"1430919366","viewed":2118,"name":"Run Game Demo2","username":"yasuo","description":"inspiration of spectra game.","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["3d","game"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\t\t#define NEAR 0.1\n\t\t#define FAR 100.\n\t\t#define ITER 128\n\t\t#define PI 3.14159265\n\n\t\tconst float Tau\t\t= 6.2832;\n\t\tconst float speed\t= .05;\n\t\tconst float density\t= .0000000000000001;\n\t\tconst float shape\t= .05;\n\n\t\tvec2 frot(vec2 p,float a){float c=cos(a),s=sin(a);return p*mat2(c,-s,s,c);}\n\t\tbool xnor(bool a,bool b){return !(a^^b);}\n\t\tbool alleq(bool a,bool b,bool c){return xnor(a,b)&&xnor(b,c)&&xnor(c,a);}\n\t\tbool rect(vec2 p,vec2 wh){return abs(p.x)<abs(wh.x)&&abs(p.y)<abs(wh.y);}\n\t\tbool digNF(vec2 p){return rect(p,vec2(.015,.17));}\n\t\tbool digN(vec2 p,int n){float D=.005;bool a=digNF(p-vec2(.1+D,.1+D)),b=digNF(p-vec2(.1+D,-.1-D)),c=digNF(p-vec2(-.1-D,.1+D)),d=digNF(p-vec2(-.1-D,-.1-D)),e=digNF(frot(p,PI/2.)),f=digNF(frot(p-vec2(0.,.2+2.*D),PI/2.)),g=digNF(frot(p+vec2(0.,.2+2.*D),PI/2.));if(n==0){return a||b||c||d||f||g;}if(n==1){return a||b;}if(n==2){return a||d||e||f||g;}if(n==3){return a||b||e||f||g;}if(n==4){return a||b||c||e;}if(n==5){return b||c||e||f||g;}if(n==6){return b||c||d||e||f||g;}if(n==7){return a||b||f;}if(n==8){return a||b||c||d||e||f||g;}if(n==9){return a||b||c||e||f||g;}return false;}\n\t\tbool colon(vec2 p){return rect(p*3.-vec2(0.,.3),vec2(.1))||rect(p*3.-vec2(0.,-.3),vec2(.1));}\n\n\t\tfloat getHrs(){return mod(floor(iTime/3600.),24.);}\n\t\tfloat getMns(){return mod(floor(iTime/60.),60.);}\n\t\tfloat getScs(){return mod(floor(iTime),60.);}\n\n\t\tfloat random(vec2 seed) {\n\t\t    return fract(sin(dot(seed.xy ,vec2(12.9898,78.233))) * 43758.5453);\n\t\t}\n\n\t\tfloat Cell(vec2 coord) {\n\t\t    vec2 cell = fract(coord) * vec2(.5, 2.) - vec2(.1, .5);\n\t\t    return (1. - length(cell * 0.5 - 0.25)) * step(random(floor(coord)), density) * 5.;\n\t\t}\n\n\t\tfloat sdBox( vec3 p, vec3 b )\n\t\t{\n\t\t\tvec3 d = abs(p) - b;\n\t\t\treturn min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n\t\t}\n\n\t\tvec4 mapCube( vec3 pos, vec3 cl)\n\t\t{\n\t\t\tfloat dist = sdBox(  pos , vec3(2.0,0.3,10.0));\n\t\t\treturn vec4( cl, dist );\n\t\t}\n\n\t\tfloat ship( vec3 p)\n\t\t{\n\t\t    return dot(vec3(0.9,0.3,0.5),abs(p))-1.0;\n\t\t}\n\n\t\tvec4 combine(vec4 val1, vec4 val2 )\n\t\t{\n\t\t\tif ( val1.w < val2.w ) return val1;\n\t\t\treturn val2;\n\t\t}\n\n\t\tvec4 map( vec3 pos)\n\t\t{\n\t\t\tvec4 q = vec4(pos+vec3(0,0,-60.0+iTime*70.0),1.0);\n\t\t\tq.z = mod(q.z, 40.0)-20.0;\n\n\t\t\tvec4 val1 = mapCube(q.xyz+vec3( 0, 0, 0.0 ), vec3(0.3+pos.y+sin(iTime*0.7),0.5+pos.y+sin(iTime*0.7),0.7+pos.y+sin(iTime*0.7)) );\n\t\t\t\n    \t\tfloat si = ship(pos+vec3( 0, -5.0+sin(iTime*10.0), -50.0 ));\n\t\t\treturn combine(val1,vec4(1,1,1,si));\n\t\t}\n\n\t\tvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n\t\t\tvec2 position = ( fragCoord.xy / iResolution.xy );\n\t\t\tposition -= .5;\n\n\t\t\tvec2 rot_t = vec2(iTime + cos(iTime*0.33) - length( position *sin(iTime*0.21)));\n\t\t\tmat2 rot_x = mat2(cos(rot_t.y), -sin(rot_t.x),sin(rot_t.x), cos(rot_t.y)) * 2.0;\n\n\t\t\tint sec = int(mod(iTime,10.));\n\n\t\t\tfloat dir2 = 1.0;\n\t\t\tif(sec>=4) {\n\t\t\t\tif(sec>=7)\n\t\t\t\t{\n\t\t\t\t\tdir2 = -1.0;\n\t\t\t\t}\n\t\t\t\tposition = position*rot_x*dir2;\n\t\t\t}\n\n\t\t\tvec3 dir = vec3( position, 1.0 );\n\t\t\tdir = normalize(dir);\n\t\t\t\n\t\t\tvec3 pos = vec3( .0, 3.5, 15.0);\n\t\t\t\n\t\t\tvec4 result;\n\t\t\tfor (int i =0; i < ITER; i++)\n\t\t\t{\n\t\t\t\tresult = map( pos);\n\t\t\t\tif (result.w < NEAR || result.w > FAR) break;\n\t\t\t\tpos += result.w * dir;\n\t\t\t}\n\n\t\t\tvec3 col = map(pos).xyz;\n\t\t\tif ( pos.z> 100. )\n\t\t\t{\n\t\t\t\tvec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n\t\t\t\tif(sec>=4) {\n\t\t\t\t\tp = p*rot_x*dir2;\n\t\t\t\t}\n\n\t\t\t\tp.y += 0.1;\n\t\t\t\tvec2 uv;\n\t\t\t\t\n\t\t\t\tfloat r = sqrt(dot(p,p));\n\t\t\t\tfloat a = atan(p.y,p.x);\n\t\t\t\t\n\t\t\t\tuv.x = 0.1 * (iTime*3.0) - .1 / r;\n\t\t\t\tuv.y = 1. * a / 3.1416;\n\t\t\t\t\n\t\t\t\tvec2 position = floor(uv*20.0+sin(iTime)*2.0)/20.0;\n\n\t\t\t\tfloat ca = sin(3.14 * 20.0 * fract(sin(dot(position.xy,vec2(11.9898,78.233)))*43758.5453) + 2.0 * iTime);\n\t\t\t\tfloat cb = sin(3.14 * 30.0 * fract(sin(dot(position.xy,vec2(11.9898,78.233)))*43758.5453) + 3.0 * iTime);\n\t\t\t\tfloat cc = sin(3.14 * 20.0 * fract(sin(dot(position.xy,vec2(11.9898,78.233)))*43758.5453) + 1.0 * iTime);\n\t\t\t\tfloat color = ca*cb+cc-1.0;\n\n\t\t\t\t// took effect from http://glslsandbox.com/e#24979.0\n\t\t\t    float a2 = fract(atan(p.x, p.y) / Tau);\n\t\t\t    float d = length(p);\n\n\t\t\t    vec2 coord = vec2(pow(d, shape), a2) * 256.;\n\t\t\t    vec2 delta = vec2(-iTime * speed * 256., .5);\n\n\t\t\t    float c = 0.;\n\t\t\t\tcoord += delta;\n\t\t\t\tc = max(c, Cell(coord));\n\n\t\t\t    col = vec3(0.3+color, 0.5+color, 0.7+color)+vec3(c * d);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvec3 lightPos = vec3(20.0, 20.0, 20.0 );\n\t\t\t\tvec3 light2Pos = normalize( lightPos - pos);\n\t\t\t\tvec3 eps = vec3( .1, .01, .0 );\n\t\t\t\tvec3 n = vec3( result.w - map( pos - eps.xyy ).w,\n\t\t\t\t\t       result.w - map( pos - eps.yxy ).w,\n\t\t\t\t\t       result.w - map( pos - eps.yyx ).w );\n\t\t\t\tn = normalize(n);\n\t\t\t\t\t\t\n\t\t\t\tfloat lambert = max(.0, dot( n, light2Pos));\n\t\t\t\tcol *= vec3(lambert);\n\t\t\t\t\n\t\t\t\t// specular : \n\t\t\t\tvec3 h = normalize( -dir + light2Pos);\n\t\t\t\tfloat spec = max( 0., dot( n, h ) );\n\t\t\t\tcol += vec3(pow( spec, 16.)) ;\n\t\t\t}\n\t\t\t\n\t\t\tvec2 p2 = -1.0 + 2.0 * fragCoord.xy / iResolution.xy - vec2(0.7,1.1);\n\t\t\tfloat digT=0.;\n\t\t\tdigT+=digN(p2*5.-vec2(-.2,-1.),int(fract(iTime)*3.0))?1.:0.;\n\t\t\tdigT+=digN(p2*5.-vec2(.2,-1.),int(fract(iTime)*6.0))?1.:0.;\n\t\t\tdigT+=colon(p2*5.-vec2(.5,-1.))?1.:0.;\n\t\t\tdigT+=digN(p2*5.-vec2(.8,-1.),int(fract(iTime)*9.0))?1.:0.;\n\t\t\tdigT+=digN(p2*5.-vec2(1.2,-1.),int(mod(getScs(),10.)))?1.:0.;\n\n\t\t\tfragColor = vec4( col+vec3(digT), 1.0);\n\t\t}","name":"Image","description":"","type":"image"}]}