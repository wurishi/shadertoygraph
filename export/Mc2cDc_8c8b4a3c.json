{"ver":"0.1","info":{"id":"Mc2cDc","date":"1723137249","viewed":25,"name":"Emanation From Creation","username":"GarlicGraphix","description":"Sine waves are fun","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159;\nvec3 PALETTE_YELLOW = vec3(255, 242, 117)/255.;\nvec3 PALETTE_BLUE = vec3(102, 153, 204)/255.;\nvec3 PALETTE_ORANGE = vec3(255, 153, 204)/255.;\nvec3 PALETTE_RED = vec3(162, 62, 72)/255.;\n\nmat2 rot2D(float angle) \n{\n    float c = cos(angle);\n    float s = sin(angle);\n    \n    return mat2(c, -s, s, c);\n}\n\nfloat trueAbs( float n, float f )\n{\n    n = mod(n, f)-f/2.;\n    n = abs(n);\n    return n;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    uv -= vec2(0.5*iResolution.x/iResolution.y, 0.5);\n    uv *= iTime*0.1;\n    uv*=10.;\n    vec2 tuv = uv;\n    \n    float rf = acos(dot(normalize(uv), normalize(vec2(1.,0.)*rot2D(sin(iTime+length(uv)*0.1)*sin(length(uv*0.1))))))*5.*PI;\n    uv = vec2(trueAbs(length(uv)+cos(rf)*0.1*length(uv*0.8), 8.));\n    uv = (uv);\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float tf = clamp(length(tuv)*0.1, 0., 1.);\n    col *= 1. + PALETTE_BLUE*(1.-tf);\n    col *= 1. + PALETTE_YELLOW*(1.-tf);\n    col *= 1. + PALETTE_RED*(tf);\n    col *= 1. + PALETTE_ORANGE*(tf);\n    col.b *= 1.-length(tuv*0.02);\n    col.g *= 1.-length(tuv*0.01);\n    col.r *= 1.-length(tuv*0.008);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}