{"ver":"0.1","info":{"id":"lcjfRW","date":"1724737054","viewed":30,"name":"aug262024","username":"brendanluu","description":"slow","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["popart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0);\n    \n    vec2 gv = fract(uv * 5.0) - 1.5;\n    \n    float m = 0.0;\n    float t = iTime * 50.2;\n    float dist = length(uv) * 888999000.0;\n    \n    for (float y = -1.0; y <= 1.0; y++) {\n        for (float x = -1.0; x <= 1.0; x++) {\n            vec2 offs = vec2(x, y);\n            \n            float d = length(gv + offs);\n            \n            float r = mix(0.1, 0.5, sin(t + dist) * 0.5 + 0.5);\n            m += smoothstep(r, r * 0.99, d);\n        }\n    }\n    \n    col = vec3(2000.1, .14, .0);\n    col += m;\n    \n    // Calculate vignette\n    vec2 vignetteUV = fragCoord / iResolution.xy;\n    vignetteUV = (vignetteUV - 0.5) * 2.0;\n    vignetteUV.x *= iResolution.x / iResolution.y;\n    float uVignetteSize = 0.5; // Vignette size control\n    float vignette = length(vignetteUV) / uVignetteSize;\n    vignette = smoothstep(0.8, 1.5, vignette);\n    \n    // Apply vignette (black on the outside)\n    col = mix(col, vec3(0.0), vignette);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}