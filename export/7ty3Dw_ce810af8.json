{"ver":"0.1","info":{"id":"7ty3Dw","date":"1637788541","viewed":99,"name":"Ray Casted Ball Shadows","username":"ravarcade","description":"Shadows from balls.\nBase on distance from ball center to line between light source and targer point. If distance is less than ball radius -> we are in shadow. ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fp","bam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 ball = vec4(500,300, 6.5, 6.5);\nconst vec3 bg = vec3(0.7);\nconst vec2 bsh = vec2(0.90, 1.0);\nconst vec4 balls[4] = vec4[4](\n    vec4(500,300, 30, 30),\n    vec4(700,200, 40, 40),\n    vec4(300,400, 50, 50),\n    vec4(800,500, 60, 60)\n);\n/*\n * A - light source position\n * B - point on 3D space\n * P - ball, where xyz - point of ball, w - radius\n */\nfloat castShadow(vec3 A, vec3 B, vec4 P)\n{\n    vec3 ab = B-A;\n    vec3 av = P.xyz - A;\n    if (dot(av,ab) < 0.0) return 1.0;\n        \n    // vec3 bv = P.xyz - B;\n    // if (dot(bv,ab) > 0.0) return 1.0;\n    float d = length(cross(ab, av)) / length(ab);\n    return smoothstep(bsh.x, bsh.y, d/P.w);\n}\n\nfloat drawBall(vec3 B, vec4 P)\n{\n    float d = length(B.xy - P.xy) / P.w;\n    return smoothstep(1.0, 0.0, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 light = vec3(iMouse.xy, 200);\n    vec3 point = vec3(fragCoord, 0);\n    float s = 1.0;\n    vec3 col = vec3(0);\n    for(int i=0; i<4; ++i)\n    {\n        s *= castShadow(light, point, balls[i]);\n        col += drawBall(point, balls[i]) * vec3(10, -10, -10);\n    }\n    col += bg * s;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}