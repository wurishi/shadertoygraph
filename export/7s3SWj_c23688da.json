{"ver":"0.1","info":{"id":"7s3SWj","date":"1633946496","viewed":161,"name":"simple tunnel efx","username":"jcyuan","description":"simple effect for a friend","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2. * fragCoord.xy - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    // .8 = 中心偏移速度，.3中心偏移范围\n    float t = iTime * .8;\n    float rng = .3;\n    vec2 offset = vec2(cos(t), sin(t)) * rng;\n    uv += offset;\n    \n    // 4. = 纹理重复度\n    float a = atan(uv.y, uv.x) / 3.14 * 4.;\n    float l = length(uv);\n    \n    // .5 = 前进速度\n    // a = floor(a * 5.) / 5.;\n    vec2 texUv = vec2(a, 1. / l + iTime * .5);\n\n    // 2. = 中心黑洞扩散范围\n    float hole = min(1., pow(l, 2.));\n    vec3 col = textureGrad(iChannel0, texUv, dFdx(uv), dFdy(uv)).rgb * hole;\n\n    fragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}