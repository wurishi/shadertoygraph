{"ver":"0.1","info":{"id":"X3SSWz","date":"1710431165","viewed":47,"name":"SpiralRave","username":"_TAU_","description":"spiral rave madness with a 90s aestetic","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FEATURE_DIM 6\nconst float BLUR = .01;\nconst float BASE = .25;\n\nfloat frac(float v)\n{\n    return v - floor(v);\n}\n\nvec2 rotate(vec2 pos, float theta){\n    pos.x = pos.x * cos(theta) - pos.y * sin(theta);\n    pos.y = pos.x * sin(theta) + pos.y * cos(theta);\n    return pos;\n}\n\nfloat spiral(vec2 uv, float ecc_x, float ecc_y, float zoom_in, float thickness, float ccw){  \n    float d = length(uv);\n    float theta = atan( ecc_y * uv.y, ecc_x * uv.x) / 6.28; \n    // time varying pixel color\n    float col = frac(d / zoom_in - theta + sign (ccw) * iTime);\n    return smoothstep(BASE-BLUR+.2,BASE+BLUR+.2,col);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //-----------------------------INIT------------------------------------------\n    // NORMALIZED PIXEL coordinates:\n    // (y in {-1 ; 1} x in { -(resolution.x/resolution.y) ; (resolution.x/resolution.y)})\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;  \n    //---------------------------------------------------------------------------\n    \n    float col = 0.0;\n    float blur = 0.1;\n    float t = iTime;\n    \n    float audio_features[FEATURE_DIM];\n    // uniforms for parameters previously computed by automate()\n    float ecc_x = 0.6 + 0.5 * sin(iTime);\n    float ecc_y = 0.6 + 0.5 * cos(iTime) ;\n    float zoom_in = 0.3 + 0.05 * (sin(0.1 * t) + sin(t) + sin(0.8 *t));\n    float thickness = 0.5;\n    float radial_pos = 0.3 + 0.03 * (sin(3.1 * t) + sin(t) + 0.5 * sin(9.8 *t));\n    float radial_pos_delta = 0.05;\n    float zoom_in_balls = 0.2;\n    float num_balls = floor(6.0 * sin(iTime / 10.0));\n\n    // background spiral setting\n    float ecc_x_mov = ecc_x + 0.1 + ecc_x * sin(t); \n    float ecc_y_mov = ecc_y + 0.1 + ecc_y * cos(t); \n    // do background spiral\n    col = spiral(uv, ecc_x_mov, ecc_y_mov, zoom_in, thickness, 1.0);\n\n    // do foreground spiral\n    float r = length(vec2(uv.x, uv.y));\n    if(r < radial_pos ){\n        if(r < radial_pos - radial_pos_delta){\n          col = spiral(uv, ecc_y_mov, ecc_x_mov, zoom_in, thickness, -1.0); \n        }else{\n          col = 0.0;\n        }\n    }\n    \n    // outgoing spiral balls\n    float NUM_BALLS = floor(num_balls);\n    vec2 center = vec2(mod(2.5 * t, 15.));\n    for(float i = 0.; i< NUM_BALLS; i++){\n        float angle_div = i * ( 180. / NUM_BALLS);\n        center = rotate(center, angle_div );\n\n        float r_c = length(vec2(uv.x-center.x, uv.y-center.y));\n        if(r_c < 0.2 * length(center) + 0.03){\n            if(r_c < 0.2 * length(center)){\n                float theta = atan( ecc_y_mov * uv.y, ecc_x_mov * uv.x) / 6.28;\n                col = frac(r_c / zoom_in_balls + theta - 2. * t);\n                col = smoothstep(thickness-blur,thickness+blur,col);\n            }else{\n                col = 0.0;\n            }\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col, col, col, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}