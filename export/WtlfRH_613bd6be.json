{"ver":"0.1","info":{"id":"WtlfRH","date":"1596725188","viewed":222,"name":"Littlewood polynomials 4","username":"rory618","description":"Making some final improvements: slightly quicker convergence, better color, and a single formula for all points, so no longer inverting about the unit circle. R to reset.","likes":17,"published":1,"flags":48,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, in vec2 I )\n{\n\n    vec2 uv = I/iResolution.xy;\n    vec4 t0 = texture(iChannel0, vec2(0,0)+vec2( 1, 1)*uv);\n    vec4 t1 = texture(iChannel0, vec2(1,0)+vec2(-1, 1)*uv);\n    vec4 t2 = texture(iChannel0, vec2(0,1)+vec2(1 ,-1)*uv);\n    vec4 t3 = texture(iChannel0, vec2(1,1)+vec2(-1,-1)*uv);\n    O = t0+t1+t2+t3;\n    \n    O /= O.w;\n    O = log(10.+1.5*abs(O))/5.;\n    O.xyz = mat3(1,.1,0,.3,1,.6,.1,0,1)*O.xyz;\n    O = O-vec4(0.6,0.4,0.6,0);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int IHash(int a){\n\ta = (a ^ 61) ^ (a >> 16);\n\ta = a + (a << 3);\n\ta = a ^ (a >> 4);\n\ta = a * 0x27d4eb2d;\n\ta = a ^ (a >> 15);\n\treturn a;\n}\n\nfloat Hash(int a){\n\treturn float(IHash(a)) / float(0x7FFFFFFF);\n}\nvec4 rand4(int seed){\n    return vec4(Hash(seed^0x34F85A93),\n                Hash(seed^0x85FB93D5),\n                Hash(seed^0x6253DF84),\n                Hash(seed^0x25FC3625));\n}\nvec3 rand3(int seed){\n    return vec3(Hash(seed^0x348CD593),\n                Hash(seed^0x8593FD5),\n                Hash(seed^0x62A5D384));\n}\nvec2 rand2(int seed){\n    return vec2(Hash(seed^0x348C5F93),\n                Hash(seed^0x8593D5BB));\n}\n\n#define R iResolution\n\n\nvec2 randn(vec2 randuniform){\n    vec2 r = randuniform;\n    r.x = sqrt(-2.*log(1e-9+abs(r.x)));\n    r.y *= 6.28318;\n    r = r.x*vec2(cos(r.y),sin(r.y));\n    return r;\n}\n\nfloat specEst(vec2 x, int seed, float r){\n    vec2 xx = x;\n    vec2 f0 = r*randn(rand2(seed))/pow(dot(x,x),3.5);\n    vec2 f1 = r*randn(rand2(0x60946546^seed))/pow(dot(x,x),3.5);\n    float acc = 0.0;\n    float p0 = 1.0;\n    float p1 = 1.0;\n    for(int i = 0; i < 16; i++){\n        acc += p0+p1;\n        p0 *= cos(dot(xx,f0))*2.;\n        p1 *= cos(dot(xx,f1))*2.;\n        xx = mat2(x,-x.y,x.x)*xx;\n    }\n    return (acc+p0+p1)/2.;\n}\n\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    O = texture(iChannel0, I/iResolution.xy);\n    int seed = 100*2000*2000*iFrame + 100*2000*int(I.x) + 100*int(I.y);\n    vec2 x = ((I+.3*randn(rand2(seed)))*2.-R.xy)/R.y*1.6;\n    for(int k = 0; k < 100; k++){\n        seed++;\n    \tO.x += specEst(x,seed*5,14.);\n    \tO.y += specEst(x,seed*7,29.);\n    \tO.z += specEst(x,seed*9,60.);\n    \tO.w += 1.;\n    }\n    if(texelFetch(iChannel1, ivec2(82,1),0).x>.5){O*=0.;}\n}","name":"Buffer A","description":"","type":"buffer"}]}