{"ver":"0.1","info":{"id":"MlVfzt","date":"1543693852","viewed":66,"name":"My_first_test","username":"Himme","description":"This is my first experiment after following a short tutorial. There are three point sources with R, G and B respectively. They each behave like a gaussian source with exp(-r^2/std) drop-off from the center. Their periods are hooked up as (R,G,B) = 1:2:3.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 solidRed = vec4(1.0,0.0,0.0,1.0);\n    vec4 solidGreen = vec4(0.0,1.0,0.0,1.0);\n    vec4 solidBlue = vec4(0.0,0.0,1.0,1.0);\n    \n    fragCoord.x = fragCoord.x/iResolution.x; //Now fragCoord.x runs between 0 to 1\n    fragCoord.y = fragCoord.y/iResolution.y;\n    \n    //Calculate a gradient by using a radial gaussian superposition of each\n    \n    float blurStd = 0.15;\n    float blurAmp = 2.0;\n    \n    // Roughly triangular\n    \n    vec2 redPos = vec2(0.25,0.33);\n    vec2 greenPos = vec2(0.75, 0.33);\n    vec2 bluePos = vec2(0.5, 0.66);\n        \n    float distanceToRed = distance(redPos, fragCoord);\n    float distanceToGreen = distance(greenPos, fragCoord);\n    float distanceToBlue = distance(bluePos, fragCoord);\n    \n   \tfragColor.r = blurAmp*exp(-distanceToRed*distanceToRed/blurStd)*cos(iTime);\n    fragColor.g = blurAmp*exp(-distanceToGreen*distanceToGreen/blurStd)*cos(iTime/2.0);\n    fragColor.b = blurAmp*exp(-distanceToBlue*distanceToBlue/blurStd)*cos(iTime/3.0);\n    \n    // Draw texture with gradient on-screen\n    \n    vec4 texColor = texture(iChannel0, fragCoord);\n    \n    if ((fragCoord.x < 0.2) && (fragCoord.y < 0.2)) {\n        // Total normed amplitude\n        float amp = length(vec3(texColor.r,texColor.g,texColor.b));\n        \n        //Grayscale\n        \n        texColor.r = cos(iTime)*amp;\n        texColor.g = cos(iTime/2.0)*amp;\n        texColor.b = cos(iTime/3.0)*amp;\n        \n    \tfragColor = texColor;\n    }\n}","name":"Image","description":"","type":"image"}]}