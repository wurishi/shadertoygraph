{"ver":"0.1","info":{"id":"llKBz3","date":"1543487373","viewed":1346,"name":"Voronoi Wooble","username":"beervgeer","description":"Exercising wooble and voronoi with book of shaders.","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","shiny","wooble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nuniform float rot;\nuniform float huecolor;\nuniform float brightness;\n#define time iTime\n#define resolution iResolution.xy\nuniform vec2 mouse;\nuniform vec3 spectrum;\n\nuniform sampler2D texture0;\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform sampler2D texture3;\nuniform sampler2D prevFrame;\nuniform sampler2D prevPass;\n#define PI 3.14159265359\n\n\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nfloat voronoiClassic(in vec2 st){\n    // Tile the space\n    vec2 i_st = floor(st);\n    vec2 f_st = fract(st);\n\n    float m_dist = 1.0;  // minimun distance\n    vec2 m_point ;\n    \n    for (int j=-1; j<=1; j++ ) {\n        for (int i=-1; i<=1; i++ ) {\n            vec2 neighbor = vec2(float(i),float(j));\n            vec2 point = random2(i_st + neighbor);\n            \n             point = 0.5 + 0.5*sin(time + 0.4 *sin(time*0.1) * point);\n             \n          \n            vec2 diff = neighbor + point - f_st;\n            float dist = length(diff);\n            \n           \n             m_dist = (min(m_dist, dist) + min(m_dist, m_dist*dist)) /2.;\n            \n        }\n    }\n    \n    \n\n    return m_dist ;\n   \n}   \n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 res = vec2(0);\n    res.x = resolution.x*0.5625;\n    res.y = resolution.y;\n    \n    vec2 st = fragCoord.xy/res.y;\n    \n    st.x -= 0.35;\n   \n    st.x +=  0.1 * sin(time *0.2) + 0.05 * sin(time *0.6);\n   \n    st.y +=  0.1 * sin(time*0.4) + 0.05 * sin(time*0.1);\n   \n    vec2 toCenter = vec2(0.5)-st;\n    float angle = atan(toCenter.y,toCenter.x);\n    \n  \n  \n    float radius = 1.- length(toCenter)*1.1;\n    \n    float deg = (1.+cos(time*0.1+ (radius*(11.299721*(sin(time*.1))))*radius))/2.;\n    \n    st -= vec2(0.5);\n  \n    st = rotate2d( deg )* st;\n    st += vec2(0.5);\n   \n    st *= 4.+ 2.*sin(time*.22);\n \n    \n    vec3 color = vec3(.0);\n    vec3 color2 = vec3(.0);\n   \t\n    float voronoi = voronoiClassic(st);\n    color.r += pow(voronoi ,2.)*3.5;\n    color.r = 1.-color.r;\n    color2.r += pow(voronoi ,radius*1.1)*2.2;\n    color2.r = 1.-color2.r;\n    color2.g += pow(voronoi ,radius*1.1)*2.2;\n    color2.g = 1.-color2.g;\n  \n\n    \n   vec3 hue = rgb2hsb(color);\n\n   hue.y = 0.709906*radius ;\n   vec3 hue2 = rgb2hsb(color2);\n   hue2.y = 0.709906*radius;\n   fragColor = vec4((hsb2rgb(hue) +color + hsb2rgb(hue2) + color2 )/1.9,radius);\n    \n}\n","name":"Image","description":"","type":"image"}]}