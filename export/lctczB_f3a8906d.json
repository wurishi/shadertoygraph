{"ver":"0.1","info":{"id":"lctczB","date":"1730844291","viewed":45,"name":"Pac-Man sur un plan/tore","username":"Fred_The_Red","description":"Pac-Man sur un tore, vu au revêtement universel","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["topologie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Position de la souris normalisée\n    vec2 mousePos = iMouse.xy / iResolution.xy * 2.0 - 1.0;\n    mousePos.y *= iResolution.y / iResolution.x;  // Ajustement pour le rapport d'aspect\n\n    // Coordonnées centrées sur la position de la souris\n    vec2 uv = (fragCoord / iResolution.xy) * 2.0 - 1.0;\n    uv.y *= iResolution.y / iResolution.x;  // Ajustement du rapport d'aspect\n    uv -= mousePos;  // Translation pour centrer Pac-Man sur la souris\n\n    // Répéter Pac-Man tous les 0.4 unités verticalement et horizontalement\n    float period = 0.3;\n    uv.x = mod(uv.x + period * 0.5, period) - period * 0.5;\n    uv.y = mod(uv.y + period * 0.5, period) - period * 0.5;\n\n    float radius = 0.03;    // Rayon du Pac-Man\n    float mouthAngle = 0.3;  // Angle de la bouche\n\n    // Calcul de la distance du point actuel au centre\n    float dist = length(uv);\n\n    // Calcul de l'angle du point actuel par rapport à l'axe X\n    float angle = atan(uv.y, uv.x);\n\n    // Condition pour être dans le disque et hors de la zone de la bouche\n    if (dist < radius && (abs(angle) > mouthAngle)) {\n        fragColor = vec4(1.0, 1.0, 0.0, 1.0);  // Couleur jaune pour le Pac-Man\n    } else {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);  // Couleur noire pour le fond\n    }\n}\n","name":"Image","description":"","type":"image"}]}