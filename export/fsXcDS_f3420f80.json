{"ver":"0.1","info":{"id":"fsXcDS","date":"1642588002","viewed":63,"name":"y = mx + p","username":"raoul","description":"rotate line","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rotateline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\nfloat plot (vec2 st, float pct){\n  return  smoothstep( pct-0.01, pct, st.y) -\n          smoothstep( pct, pct+0.01, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //y = a .sin(k(x -d)) + c\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5; \n    uv.x *= iResolution.x / iResolution.y; //-0.5<> 0.5\n    /*float k = 4.2; \n    float t = iTime; \n    float d = 1.0; \n    float pct =  sin(iTime);//; /0.1 * sin( k *(iTime - d)); \n    */\n    float x = uv.x ; \n     float res = 1.0; \n    //float m = (x -.5) * (x + .5); \n   // float m = sin(uv.x *\n    //8. + t)* 0.1;\n    //y = ax +b\n    float m = +0.4; \n    float p = 0.1;\n    float y = uv.y ;//- m;\n    y -= m * x +p;\n\n    //y += (x-p) /m; \n    float r = 90. * PI /180.;//mod(iTime* 50., 360.) * PI / 180.; //0<>360\n    \n   \n    float line = plot(vec2(x,y), 0.0) ; \n    \n    float xaxis = plot(uv,0.); \n    float x1 = cos(r) * x - sin(r) * y;\n    float y1 = sin(r) * x + cos(r) * y;\n    float yaxis = plot(vec2(x1,y1),0.);\n     \n    \n    vec3 col = vec3(line ); \n    //float t =  abs(fragCoord.y - line);\n    // Output to screen\n    fragColor = vec4(vec3(xaxis)*vec3(1.,0.,0.)+vec3(line) * res +vec3(yaxis)* vec3(0.,1.,0.),1.0);\n}","name":"Image","description":"","type":"image"}]}