{"ver":"0.1","info":{"id":"wtySRG","date":"1582965505","viewed":91,"name":"arewijk_lcd_screen","username":"Bl00dhound","description":"a simple shader that generates 3 bars, one for each color, then gets scaled down and used on a texture or video","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","beginner","lcd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\ngimme some moire\n*/\n\n#define lcd_pixels_x 160\n#define lcd_pixels_y 120\n#define lcd_spacing 16              // (buggy)\n#define use_spacing true\n#define brightness_threshold .25\t// the minimum brightness for the led to enable. \n\nfloat step_x=1.0/float(lcd_pixels_x);\nfloat step_y=1.0/float(lcd_pixels_y);\nvec3 img_lcd=vec3(0.0);\n\n  // make lcd bars to be scaled\n  vec3 make_lcd(vec2 _coords) {\n  vec2 xy=_coords;\n  float sp=0.0;\n    \n    if (use_spacing) { \n    sp=(float(lcd_spacing)/100.0)*((step_x*100.0));\n    }  \n  \n  float x=mod(xy.x*3.0,3.0);\n  float y=xy.y;\n  float y_mod=step(sp/2.0,xy.y);\n  \n  float r=step(0.0+sp,x)-step(1.0,x);\n  float g=step(1.0+sp,x)-step(2.0,x);      \n  float b=step(2.0+sp,x)-step(3.0-sp,x);\n  r*=step(sp,fract(xy.y));\n  g*=step(sp,fract(xy.y));\n  b*=step(sp,fract(xy.y));\n  return vec3(r,g,b);\n  }\n\n  // get tile float number\n  float get_tile_float(vec2 _coords) {\n  vec2 xy=_coords;\n  float ix=0.0;\n  ix+=mod(xy.x*float(lcd_pixels_x),float(lcd_pixels_x));\n  ix+=mod(xy.y*float(lcd_pixels_y),float(lcd_pixels_y))*float(lcd_pixels_y);\n  return ix;\n  }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n vec2 uv=fragCoord/iResolution.xy;\n float tm=.5+(sin(iTime/4.0)/2.0);\n uv-=.5;    \n uv*=.1+tm;    \n uv+=.5;   \n vec2 uv_scale=uv;  \n vec2 uv_floor=uv;\n    uv_scale.x*=float(lcd_pixels_x);\n    uv_scale.y*=float(lcd_pixels_y);\n    img_lcd=make_lcd(uv_scale);\n  \n\tfloat tile=get_tile_float(uv_scale);\n    uv_floor.x=ceil(uv.x*float(lcd_pixels_x))/float(lcd_pixels_x);\n    uv_floor.y=ceil(uv.y*float(lcd_pixels_y))/float(lcd_pixels_y);\n    //uv_floor_x=uv.x;\n    vec4 tex=texture(iChannel0,uv_floor);\n\tvec3 col=vec3(0.0);\n    //col=tex.rgb;\n\n    col.r=tex.r*(img_lcd.r*step(brightness_threshold,tex.r));\n    col.g=tex.g*(img_lcd.g*step(brightness_threshold,tex.g));\n    col.b=tex.b*(img_lcd.b*step(brightness_threshold,tex.b));\n\t\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}