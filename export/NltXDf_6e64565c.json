{"ver":"0.1","info":{"id":"NltXDf","date":"1639902528","viewed":66,"name":"Grid_1","username":"allllll3n","description":"Simple Grid,Just for Testing","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nfloat PixelateCircle(vec2 uv,vec2 center,float radius,float edgeBlur,float gridScale){\n\n    //vec2 uv = fragCoord/iResolution.xy;\n    uv/=gridScale;\n    uv=round(uv);\n    uv*=gridScale;\n    uv/=iResolution.xy;\n\tuv-=center;\n    uv.x*=iResolution.x/iResolution.y;\n    \n    float d=length(uv);\n    float r=radius;\n    float c=smoothstep(r,r-edgeBlur,d);\n    return c;\n}\n\nfloat CircleEdge(vec2 uv,vec2 center,float radius,float edgeBlur,float gridScale,float edgeWidth){\n\n    \n    return PixelateCircle(uv,center,radius,edgeBlur,gridScale)-PixelateCircle(uv,center,radius-edgeWidth,edgeBlur,gridScale);\n}\n\nfloat Grid(){\n return 1.0f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 normalizedUV = fragCoord.xy / iResolution.xy;\n    //Params Begin\n    float gridScale=20.0f;\n    float gridLineWidth=0.02f;\n    float timeScale=0.2f;\n    float edgeWidth=0.02f;\n    float edgeBlur=0.03f;\n    float circleRadius=0.3f;\n    //Params End\n    \n    //Colors Begin;\n    vec3 color1=vec3(0.29f,0.77f,0.92f);\n    vec3 color2=vec3(0.92f,0.88f,0.19f);\n    vec3 color3=vec3(0.91f,0.10f,0.23f);\n    \n    vec2 CircleCenter1=vec2(0.8f+0.2f*sin(6.28f*iTime*timeScale),0.7f);\n    vec2 CircleCenter2=vec2(0.2f,0.3f+0.3f*cos(12.56f*iTime*timeScale+0.05f));\n    vec2 CircleCenter3=vec2(0.5f+0.2f*sin(3.14f*iTime*timeScale),0.2f+0.2f*sin(6.28f*iTime*timeScale));\n\n\tvec2 uv = floor(gridScale * fragCoord.xy * vec2(iResolution.x / iResolution.y, 1) / iResolution.xy);\n    vec2 normalUV=fragCoord.xy* vec2(iResolution.x / iResolution.y,1)/iResolution.xy;\n    \n    float c1=CircleEdge(fragCoord,CircleCenter1,circleRadius,edgeBlur,gridScale,edgeWidth);\n    float c2=CircleEdge(fragCoord,CircleCenter2,circleRadius,edgeBlur,gridScale,edgeWidth);\n    float c3=CircleEdge(fragCoord,CircleCenter3,circleRadius,edgeBlur,gridScale,edgeWidth);\n\n    vec3 finalColor=c1*color1+c2*color2+c3*color3;\n    \n    fragColor=vec4(finalColor,1.0f);\n\n}","name":"Image","description":"","type":"image"}]}