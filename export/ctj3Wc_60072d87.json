{"ver":"0.1","info":{"id":"ctj3Wc","date":"1674053679","viewed":721,"name":"PCG Hash","username":"lilja","description":"PCG hash\nInspired from https://www.reedbeta.com/blog/hash-functions-for-gpu-rendering/","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint rng_state;\n\nuint PCGHash()\n{\n    rng_state = rng_state * 747796405u + 2891336453u;\n    uint state = rng_state;\n    uint word = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;\n    return (word >> 22u) ^ word;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    rng_state = uint(fragCoord.y * iResolution.x + fragCoord.x);\n \n    vec3 result = vec3(PCGHash(), PCGHash(), PCGHash()) / float(0xFFFFFFFFU);\n    \n    // Output to screen\n    fragColor = vec4(result,1.0);\n}","name":"Image","description":"","type":"image"}]}