{"ver":"0.1","info":{"id":"4dGfWh","date":"1528468761","viewed":227,"name":"Black and white grid","username":"mitjaprelovsek","description":"undulating black and white rectangles","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grid","blackandwhite"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Inputs\n    float gridRows=5.0;\n    float gridCols=9.0;\n    float brightness=0.5;\n    float movingSpeed=1.0;\n    float waveSize=0.2;\n    float angle = 0.5;\n    \n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //We find out in which grid the pixel is\n    int pixCol=int(uv.x*gridCols);\n    int pixRow=int(uv.y*gridRows);\n    \n    // Time varying pixel color\n    vec3 col = brightness + brightness*cos(iTime*movingSpeed+vec3(pixRow,pixRow,pixRow)/gridRows/waveSize*angle+vec3(pixCol,pixCol,pixCol)/gridCols/waveSize*(1.0-angle));\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}