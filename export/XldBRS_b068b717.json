{"ver":"0.1","info":{"id":"XldBRS","date":"1540830383","viewed":1375,"name":"2D Rain Effect","username":"lgabriel13","description":"A simple 2D rain effect.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","effect","vignette","rain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DEBUG 0.0\n\nfloat Hash (float x)\n{\n\treturn fract (sin (x * 21.34) * 456.78);    \n}\n\nvec2 GetDrops(vec2 uv, float t, float speedMultiplier) \n{                    \n    vec2 gridSize = vec2 (10.0, 4.0); //Grid size\n    float sizeOffset = texture (iChannel1, uv * 0.1).x; //get a random offset for the size\n    float speed = ((Hash (floor (uv * gridSize).x) + 1.0) * 0.5)  * .2; //Random speed 0->0.2         \n    uv.y += speed * t * speedMultiplier; //Move the grid down in time\n    \n    vec2 st = fract (uv * gridSize + vec2 (sizeOffset * 0.5, sizeOffset * 0.1)); //apply the offset to the domain\n   \tst -= 0.5;        //-0.5-> 0.5\n   \tst *= 2.0;        //-1.0-> 1.0    \n    \n    //Draw a circle\n    vec2 p = (st)/gridSize;       \n    float mainDropDist = smoothstep (0.03, 0.02, length (p));\n        \n    if (DEBUG > 0.0)    \n       return fract (st);\n    \n    //Modify 2.5 if you want a bigger/smaller offset\n    return ((p * mainDropDist * 3.5));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //UV [-1,1]\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 2.0 - 1.0;\n    uv.x*=iResolution.x/iResolution.y;\n    \n    //3 layers of drops\n    vec2 drops = GetDrops (uv, iTime + 21.5, .75);    \n    drops += GetDrops (uv * 2.0, iTime + 251.5, 1.75) * .5;\n    drops += GetDrops (uv * 4.0, iTime + 32.5, 2.0) * .25;\n   \t\n  \t//Sample with the offset caused by drops\n\tfragColor = texture (iChannel0, fragCoord/iResolution.xy + drops);\n    \n    \n    //Simple VIGNETTE\n    vec2 uv2 = (fragCoord/iResolution.xy) - .5;            \n    \n    float dist = length (uv2) * 1.85;\n    float vignette = 1.0/(dist*dist + 1.0);\n    \n\tfragColor *= vignette;\n    \n    if (DEBUG > 0.0)\n    \tfragColor = vec4 (drops, 0.0, 0.0);\n}","name":"Image","description":"","type":"image"}]}