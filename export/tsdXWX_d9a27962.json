{"ver":"0.1","info":{"id":"tsdXWX","date":"1573055023","viewed":394,"name":"symmetric pattern","username":"talon","description":"just play around with basic things like matrix,color...\nthen create pattern like this one.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["2dpattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 st ,float sita ){\n    mat2 rotate = mat2(vec2(sin(sita),cos(sita)),\n                       vec2(-cos(sita),sin(sita)));\n    return rotate * st;\n}\n\nfloat bendedRect(vec2 st ,vec2 rect ,float offset ,float timeOffset ,float timeFactor){\n    float sita = iTime * timeFactor +timeOffset;\n    \n    st = abs(st);\n    st = rotate(st ,sita);\n    st.y -= offset;\n    \n    float blur = 0.3;\n    float a = smoothstep(-0.08*st.x*st.x-rect.y/2.0-blur ,-0.08*st.x*st.x-rect.y/2.0 ,st.y);\n    float b = 1.0 - smoothstep(-0.12*st.x*st.x+rect.y/2.0 ,-0.12*st.x*st.x+rect.y/2.0+blur ,st.y);\n    float c = smoothstep(-rect.x/2.0-blur ,-rect.x/2.0 ,st.x);\n    float d = 1.0 - smoothstep(rect.x/2.0 ,rect.x/2.0+blur ,st.x);\n    \n    return a * b * c * d;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= 20.;\n\n    vec3 color = vec3(0.0);\n    for(float i=0.0;i<12.0;i++){\n        float r = bendedRect(uv ,vec2(4.0 - i*0.3 ,0.4 ),10.0-i*0.8 ,20.0 - i*20. ,2.8-0.2*i);\n        color += r;\n    }\n    \n    uv = rotate(uv ,iTime);\n\t\n    // Output to screen\n    fragColor = vec4(color * vec3(0.6+uv.x/10.,0.5,0.6+uv.y/10.),1.0);\n}","name":"Image","description":"","type":"image"}]}