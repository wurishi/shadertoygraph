{"ver":"0.1","info":{"id":"DdVyDV","date":"1696642701","viewed":61,"name":"Mandelbrot trip ","username":"spluko","description":"A slow fly over the filaments and spirals of the Mandelbrot set","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","orbittrap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float v){\n    return vec3(0.5) + vec3(0.5) * cos(6.28318 * (vec3(1.0) * v + vec3(0.3, 0.2, 0.2)));\n}\nvec2 multComplex(vec2 a, vec2 b) {\n    return mat2(a, vec2(-a.y, a.x)) * b;\n}\n\nvoid mainImage(out vec4 color, in vec2 p) {\n    const float pi = 3.1415926;\n    const float limit = 150.0;\n    const float threshold = 16.0;\n\n    float scale = 0.0002;\n    float tm = 1.2 - cos(iTime * 0.008994) * 1.2;\n    vec2 centre = vec2(-0.743643135 - sin(tm) * 0.001, 0.130825963 + cos(tm) * 0.001);//vec2(-0.743643135, 0.131825963);\n    \n    vec2 xy = (p.xy - iResolution.xy * 0.5) / iResolution.y;\n    vec3 ro = vec3(0.0, 0.0, -2.0);\n    vec3 rd = normalize(vec3(xy, 0.0) - ro);\n    float theta = pi / 6.0;\n    vec3 n = vec3(0.0, sin(theta), -cos(theta));\n    vec3 i = ro - dot(ro, n) / dot(n, rd) * rd;\n    mat3 r = mat3(1.0, 0.0, 0.0, 0.0, cos(theta), -sin(theta), 0, sin(theta), cos(theta));\n    vec2 uv = (r * i).xy;\n    float tc = iTime * 0.017453;\n    mat2 rr = mat2(cos(tc), -sin(tc), sin(tc), cos(tc));\n    vec2 c = rr * uv * scale + centre;\n    \n    vec2 z = vec2(0.0);\n    float v = limit;\n    for(float i = 0.0; i < limit; i += 1.0) {\n        z = multComplex(z, z) + c;\n        vec2 dif = z - vec2(sin(iTime*.05)+2.0, 0.0);\n        float d = dot(dif, dif);\n        v = min(v,d);\n    }\n    v = sqrt(v) *0.75;\n    color = vec4(palette(v), 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}