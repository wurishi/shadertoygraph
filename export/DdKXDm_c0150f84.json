{"ver":"0.1","info":{"id":"DdKXDm","date":"1681212655","viewed":69,"name":"blue wave expansion","username":"darkfox","description":"waving, calm.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159;\n\n// border, power.\nfloat pudding(float x, float border, float power){\n  return (1.0-tanh(power*(x-border)))*(1.0-tanh(-power*(x+border)))/((1.0-tanh(power*(-border)))*(1.0-tanh(-power*(border))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 p = fragCoord/iResolution.xy;\n    p = 2.0*p - 1.0;\n    p.x *= iResolution.x/iResolution.y;\n\n\tfloat r = length(p);\n\tfloat border = fract(iTime*0.25);\n\tfloat factor = pudding(r, pow(border, 1.5)*2.0, 16.0);\n\tif(fract(iTime/8.0) > 0.5){ factor = 1.0-factor; }\n\n\tp = p + 0.04 * factor * vec2(sin(8.0*p.y + 12.0*iTime), sin(8.0*p.x + 12.0*iTime));\n\tp = fract(10.0 * p);\n\n\tvec3 col = vec3(pow(sin(p.x*PI)*sin(p.y*PI), 0.5));\n\tvec3 baseColor = vec3(0.25, 0.5, 0.75);\n\n\tif(col.r < 0.5){\n\t  col = col * baseColor * 2.0;\n\t}else{\n\t  col = 2.0 * (col + baseColor - col * baseColor) - 1.0;\n\t}\n\n\tfloat bl = 1.414-r;\n\tvec3 blightness = vec3(bl*0.75, bl*1.0, bl*1.25);\n\n  fragColor = vec4(col * blightness, 1.0);\n}","name":"Image","description":"","type":"image"}]}