{"ver":"0.1","info":{"id":"43s3zX","date":"1707794183","viewed":70,"name":"Stare","username":"Aurcereal","description":"Stare","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\nfloat RailWidth = 0.45;\nfloat RailThickness = 0.03;\nfloat RailSmallInset = 0.0355;\nfloat RailSmallThick = 0.004;\n\nfloat SpiralHeight = 0.23;\nfloat SpiralThick = 0.05;\n\nfloat t;\n\nfloat sbTicks(vec2 p)\n{\n    //return 0.0;\n    //\n    float repSize = 0.06;\n    float tickWidth = 0.009;\n    float tickLowHeight = 0.003;\n    float tickHiHeight = 0.013;\n    \n    float a = 6.28318/(2.*iResolution.x/iResolution.y);\n    \n    tickHiHeight += 0.012*(sin((p.x+t*0.1)*a*8.0)*0.5+0.5);\n    tickHiHeight *= 0.8;\n\n    p.y = abs(p.y);\n    p.y = (RailWidth*0.5 - RailThickness*0.5 - RailSmallInset*0.5 - RailSmallThick) - p.y;\n    p.x = abs(mod(p.x + t*0.01, repSize) - repSize*0.5);\n    \n    float lowExist = step(p.y, tickLowHeight) * step(0.0, p.y);\n    float hiExist = step(0.0, p.y) * step(p.x, tickWidth*0.5) * step(p.y, tickHiHeight);\n    \n    return saturate(lowExist+hiExist);\n}\n\nfloat sbInsideRail(vec2 p)\n{\n    //\n    float repSize = 0.4;\n    float height = SpiralHeight;\n    float thick = SpiralThick;\n    \n    vec2 lp = p;\n    lp.x = mod(lp.x, repSize) - repSize*0.5;\n    lp.x = -abs(lp.x);\n    \n    return saturate(\n       sbLine(lp, vec2(-repSize*0.5, -height*0.5), vec2(0.0, height*0.5), thick*0.6 + thick*0.4*cos(p.x*8.0+10.0+t*1.8)) +\n       sbLine(lp, vec2(-repSize*0.5, height*0.5), vec2(0.0, -height*0.5), thick*0.5 + thick*0.5*sin(p.x*10.0-t*1.4))\n    );\n}\n\nfloat sbRail(vec2 p)\n{\n    return saturate(\n        step(abs(abs(p.y) - RailWidth*0.5), RailThickness*0.5) + \n        step(abs(abs(p.y) - (RailWidth*0.5-RailSmallInset)), RailSmallThick*0.5)\n    );\n}\n\nfloat sbFullRail(vec2 p, vec2 rp)\n{\n    return saturate(sbRail(p) + sbInsideRail(p) + sbTicks(rp));\n}\n\nfloat sbPlusBackground(vec2 p)\n{\n    float repSize = 0.06;\n    float size = 0.02;\n    float thickness = 0.004;\n    \n    vec2 lp = mod(p + t*vec2(0.02, 0.01), repSize) - repSize*0.5;\n    lp = abs(lp);\n    \n    lp -= 2.0 * (0.5 * vec2(-1.0,1.0) * max(0.0, dot(lp, vec2(-1.0, 1.0))));\n    \n    return step(lp.x, size*0.5) * step(lp.y, thickness*0.5) \n        * step(1.014, length(p))\n        * step(abs(p.x), 1.68)\n        * step(abs(p.y), 1.03);\n     \n}\n\nfloat sbAngledBackground(vec2 p)\n{\n    p = abs(p);// * sign(p.x)*sign(p.y);\n    \n    float inset = 0.07;\n    vec2 corner = 1.1*vec2(iResolution.x/iResolution.y, 1.0) - inset;\n    \n    p = corner - p;\n    \n    p -= 2.0 * (0.5 * vec2(-1.0,1.0) * max(0.0, dot(p, vec2(-1.0, 1.0))));;\n    \n    //\n    float barLoLength = 0.2;\n    float barHiLength = 0.22;\n    float barWidth = 0.02;\n    \n    float exists = 1.0;\n    \n    exists *= step(0.0, p.x) * step(0.0, p.y) * step(p.y, barWidth);\n    exists *= step(p.x, barLoLength + (barHiLength - barLoLength) * saturate(1.0-p.y/barWidth));\n    \n    return exists;\n}\n\nfloat sbCrossBackground(vec2 p)\n{\n\n\n    p.x = abs(p.x);\n    p.x -= 1.5;\n    p.x = abs(p.x);\n    p = p.yx;\n    \n    return sbFullRail(p, p);\n\n    /*\n    p = abs(p);\n    \n    //\n    vec2 start = vec2(1.2, 1.0);\n    vec2 end = vec2(1.6, 0.8);\n    //vec2 start = vec2(1.4, 1.05);\n    //vec2 end = vec2(1.65, 0.8);\n    \n    p -= start;\n    p *= 1.2;\n    vec2 fo = normalize(end-start);\n    vec2 up = perp(fo);\n    p = vec2(dot(p, fo), dot(p, up));\n    \n    return sbFullRail(p, p);*/\n}\n\nfloat render(vec2 p)\n{\n    t = iTime*3.0; //6\n    \n    float sbPlus = sbPlusBackground(p)*.5*.4*0.;\n    float sbAngled = sbAngledBackground(p);\n    //float sbCross = sbCrossBackground(p);\n    \n    p = mat2x2(0.0, 1.0, -1.0, 0.0) * p;\n    vec2 rp1 = vec2(mod(atan(p.y, p.x), 6.283), length(p) - 0.3);\n    vec2 rp2 = vec2(mod(atan(p.y, p.x), 6.283), length(p) - 0.75);\n    p.y = abs(p.y);\n    \n    vec2 p1 = vec2(mod(atan(p.y, p.x), 6.283), length(p) - 0.3);\n    float b1 = sbFullRail(p1, rp1);\n    \n    vec2 p2 = vec2(mod(atan(p.y, p.x), 6.283), length(p) - 0.75);\n    float b2 = sbFullRail(p2, rp2);\n    \n    float bOutline = step(abs(length(p) - 1.012), 0.0025);\n    \n    return saturate(b1+b2 + bOutline + sbPlus + sbAngled);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = ((fragCoord/iResolution.xy)*2.0-1.0)*vec2(iResolution.x/iResolution.y, 1.0);\n    p *= 1.1;//*2.4;\n    \n    vec2 eps = vec2(1.0/iResolution.y, 0.0);\n    \n    float exists = 0.25*(render(p) + render(p+eps.xy) + render(p+eps.yx) + render(p+eps.xx));\n    \n    fragColor = vec4(exists, exists, exists,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float saturate(float f) { return clamp(f, 0.0, 1.0); }\nvec2 perp(vec2 v) { return mat2x2(0.0, 1.0, -1.0, 0.0) * v; }\nfloat sbLine(vec2 p, vec2 start, vec2 end, float thick)\n{\n    p -= start;\n    \n    vec2 fo = normalize(end-start);\n    vec2 up = perp(fo);\n    \n    p = vec2(dot(p, fo), dot(p, up));\n    \n    return step(abs(p.y), thick*0.5);\n}","name":"Common","description":"","type":"common"}]}