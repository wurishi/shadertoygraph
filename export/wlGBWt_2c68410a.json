{"ver":"0.1","info":{"id":"wlGBWt","date":"1615257737","viewed":475,"name":"Doom Fire AlanToy","username":"AlanToy","description":"Fire effect from the title screen of the Playstation and Nintendo 64 versions of Final Doom, as documented at https://fabiensanglard.net/doom_fire_psx/\n\nRequires a version of Safari from September 2021 or later.","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["fire","doom"],"hasliked":0,"parentid":"WlKBW3","parentname":"Doom Fire - array palette test"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 palette[max_heat] = vec4[](\n    vec4(0.027451,0.027451,0.027451,1.0),\n    vec4(0.121569,0.027451,0.027451,1.0),\n    vec4(0.184314,0.058824,0.027451,1.0),\n    vec4(0.278431,0.058824,0.027451,1.0),\n    vec4(0.341176,0.090196,0.027451,1.0),\n    vec4(0.403922,0.121569,0.027451,1.0),\n    vec4(0.466667,0.121569,0.027451,1.0),\n    vec4(0.560784,0.152941,0.027451,1.0),\n    vec4(0.623529,0.184314,0.027451,1.0),\n    vec4(0.686275,0.247059,0.027451,1.0),\n    vec4(0.749020,0.278431,0.027451,1.0),\n    vec4(0.780392,0.278431,0.027451,1.0),\n    vec4(0.874510,0.309804,0.027451,1.0),\n    vec4(0.874510,0.341176,0.027451,1.0),\n    vec4(0.874510,0.341176,0.027451,1.0),\n    vec4(0.843137,0.372549,0.027451,1.0),\n    vec4(0.843137,0.403922,0.058824,1.0),\n    vec4(0.811765,0.435294,0.058824,1.0),\n    vec4(0.811765,0.466667,0.058824,1.0),\n    vec4(0.811765,0.498039,0.058824,1.0),\n    vec4(0.811765,0.529412,0.090196,1.0),\n    vec4(0.780392,0.529412,0.090196,1.0),\n    vec4(0.780392,0.560784,0.090196,1.0),\n    vec4(0.780392,0.592157,0.121569,1.0),\n    vec4(0.749020,0.623529,0.121569,1.0),\n    vec4(0.749020,0.623529,0.121569,1.0),\n    vec4(0.749020,0.654902,0.152941,1.0),\n    vec4(0.749020,0.654902,0.152941,1.0),\n    vec4(0.749020,0.686275,0.184314,1.0),\n    vec4(0.717647,0.686275,0.184314,1.0),\n    vec4(0.717647,0.717647,0.184314,1.0),\n    vec4(0.717647,0.717647,0.215686,1.0),\n    vec4(0.811765,0.811765,0.435294,1.0),\n    vec4(0.874510,0.874510,0.623529,1.0),\n    vec4(0.937255,0.937255,0.780392,1.0),\n    vec4(1.000000,1.000000,1.000000,1.0)\n    );\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float x = texelFetch(iChannel0, ivec2(fragCoord/SCALE), 0).r;\n    int idx = int(x);\n    //fragColor = vec4(x/36.0);\n    fragColor = palette[idx];\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float heat = 0.0;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec4 x;\n    // Output to screen\n    if(fragCoord.y < 1.0) {\n        heat = float(max_heat-1);\n    } else {\n        x = texelFetch(iChannel2, ivec2(fragCoord+vec2(1,-1)), 0);\n        if(int(x.r) == -1) {\n            heat = x.g;\n        } else {\n            x = texelFetch(iChannel2, ivec2(fragCoord+vec2(0,-1)), 0);\n            if(int(x.r) == 0) {\n                heat = x.g;\n            } else {\n                x = texelFetch(iChannel2, ivec2(fragCoord+vec2(-1,-1)), 0);\n                if(int(x.r) == 1) {\n                    heat = x.g;\n                } else {\n                    heat = texelFetch(iChannel0, ivec2(fragCoord), 0).g;\n                }\n            }\n                \n        }\n        //ivec2 src = ivec2(fragCoord - vec2(0,1));\n        //heat = int(texelFetch(iChannel0, src, 0).r) - 1;\n        //if(heat < 0) { heat = 0; }\n    }\n    //float fnorm = float(heat) / float(max_heat);\n    //fragColor = vec4(vec3(fnorm, fnorm, fnorm),1.0);\n    float f = float(heat);\n    fragColor = vec4(f,f,f,1.0);\n\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\n// Noise generator from https://www.shadertoy.com/view/ltB3zD\nconst float PHI = 1.61803398874989484820459; // Î¦ = Golden Ratio \nfloat gold_noise(in vec2 xy, in float seed)\n{\n    return fract(tan(distance(xy*PHI, xy)*seed)*xy.x);\n}\n\nconst int max_heat = 36;\n\nconst float SCALE = 1.0;\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// r is offset for line above (1, 0, or -1)\n// g is heat decay (0 or 1)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int start_heat = int(texelFetch(iChannel0, ivec2(fragCoord), 0).r);\n    if(start_heat == 0) {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        return;\n    }\n    int offset = int(gold_noise(fragCoord, iTime) * 3.0);\n    //float foffset = float(offset)*0.5; // For debugging visualization\n    float foffset = float(offset-1);\n    int decay = offset%2;\n    int heat = start_heat - decay;\n    fragColor = vec4(foffset, float(heat), 0.0, 1.0);\n}","name":"Buffer C","description":"","type":"buffer"}]}