{"ver":"0.1","info":{"id":"3sKcR1","date":"1602236684","viewed":62,"name":"Kazaguruma","username":"nanase","description":"guruguru","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot2D(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\nfloat box1(vec3 p) {\n    p.y += 1.6;\n    p = abs(p);\n    p.x -= .1;\n    p.y -= 2.;\n    return max(max(p.x,p.y),p.z);\n}\n\nfloat dist(vec3 p, float speed) {\n    vec3 q=p, e = vec3(1,0,0);\n    p.xy *= rot2D(iTime * speed);\n    float a = p.x < 0. ? length(p-e.zxz) - 1. :  length(p+e.zxz) - 1.,\n          b = p.y < 0. ? length(p+e.xzz) - 1. :  length(p-e.xzz) - 1. ;\n    return min( min(a,b),  box1(q) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 resolution = iResolution.xy;\n    vec2 uv = (fragCoord.xy * 2.0 - resolution.xy) / min(resolution.x, resolution.y);\n    \n    vec2 uv2 = mod(uv, 0.25) - 0.1;\n\n    vec3 cp = vec3(0.,0.,-5.);\n    float screenZ = 0.2; \n\n    vec3 rd = normalize(vec3(uv2, screenZ));\n\n    float depth = 0.0;\n    vec3 col = vec3(1.);\n\n    for (int i=0; i<10; i++) {\n        vec3 rp = cp + rd * depth;\n        float dist = dist(rp, 2.3);\n        if(dist < 0.001) {\n            col = vec3(0.);\n            break;\n        }\n        depth += dist;\n    }\n\n\n    fragColor = vec4(col,1.);\n}\n","name":"Image","description":"","type":"image"}]}