{"ver":"0.1","info":{"id":"csjBR1","date":"1689435136","viewed":26,"name":"tutotr2","username":"andreaferrario","description":"afasf","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"tutotr\" by andreaferrario. https://shadertoy.com/view/cd2fRh\n// 2023-07-15 14:05:56\n\n\nvec3 palette2(float s ){\nvec3 e = vec3(0.931, 0.527, 0.017);\nvec3 f = vec3(0.641, 0.318, 0.916);\nvec3 g = vec3(0.566, 1.324, 0.731);\nvec3 h = vec3(5.381, 1.108, 0.953);\n\nreturn e + f*cos( 6.28318*(g*(s/h)) );\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv*2.;\n    vec3 finalColor = vec3(0.0);\n   \n    \nfor (float i = .0; i < 3.0; i++){\n    \n   uv = fract(uv * 1.5) - .5;\n\n   float d = length(uv) * sin(-length(sin(uv0)));\n    float s = length(uv) * sin(length(cos(uv0)));\n   \n   vec3 col = palette2(length(uv0) + i+1.+ iTime+.05);\n\n   d = sin(d*13.0 + iTime*1.)/13.0;\n   d = abs(d);\n   d = 0.002 / d;\n  s = sin(s*3.0 + iTime*2.)/3.0;\n   s = abs(s);\n   s = 0.002 / s;\n   finalColor += col * (d+s);\n   \n   }\n   \n    // Output to screen\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}