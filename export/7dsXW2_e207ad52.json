{"ver":"0.1","info":{"id":"7dsXW2","date":"1619347145","viewed":120,"name":"StarStream","username":"DougL_","description":"drawing points following a target at different speeds","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["random","abstract","stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    const float cellCount = 256.0;\n    \n    vec2 fracUv = fract(uv * cellCount);\n    vec2 floorUv = floor(uv*cellCount);\n    \n    float hash = hash12(floorUv.xx);\n    \n    float target = fract(iTime*mix(0.1, 2.0, hash))*1.5;\n    \n    float c = uv.y;\n    float phase = 1.0-abs(c*2.0-1.0);\n    \n    vec3 line = vec3(1.0-abs(phase - target + 0.02),1.0-abs(phase - target+0.01),1.0-abs(phase - target-0.02));\n    line = pow(line, vec3(8.0));\n    line *= smoothstep(0.4, 1.0, 1.0-abs(fracUv.x*2.0-1.0));\n    line = line * line * line;\n    \n    // Output to screen\n    fragColor = vec4(vec3(sqrt(line)),1.0);\n}","name":"Image","description":"","type":"image"}]}