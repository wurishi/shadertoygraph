{"ver":"0.1","info":{"id":"XdcGzn","date":"1447559342","viewed":1517,"name":"Faded Edge","username":"jackdavenport","description":"A shader I wrote for a minimap in a game, recreated for Shadertoy. It uses smoothstep to blend the edge and create a fadeoff. Similar to the minimap in Watch Dogs.","likes":13,"published":3,"flags":0,"usePreview":1,"tags":["edge","fade","smoothstep"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define EDGE .2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float edge = EDGE * abs(sin(iTime / 5.));\n\n\tfragColor = texture(iChannel0, uv);\n    fragColor *= (smoothstep(0., edge, uv.x)) * (1. - smoothstep(1. - edge, 1., uv.x));\n    fragColor *= (smoothstep(0., edge, uv.y)) * (1. - smoothstep(1. - edge, 1., uv.y));\n}","name":"","description":"","type":"image"}]}