{"ver":"0.1","info":{"id":"3sffRs","date":"1588833483","viewed":52,"name":"SDF_2Dcircle","username":"sakiCunha","description":"https://www.shadertoy.com/view/3ltSW2\n\nhttps://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sign.xhtml","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SDF_2Dcircle(vec2 c,float r,vec2 p)\n{\n    // distance to the center point\n    float dis = length(p - c);\n    return dis - r;\n}\n\nconst vec2 _center = vec2(0.0,0.0);\nconst float _radius = 0.5;\n\nconst vec3 _col = vec3(0.1,0.4,0.7);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord - iResolution.xy)/iResolution.y;\n\n    float d_circle = SDF_2Dcircle(_center,_radius,uv);\n    \n    vec3 col = vec3(1.0) - _col*sign(d_circle);\n    col *= 1.0 - exp(-3.0*abs(d_circle));\n    col *= cos(120.0*d_circle);\n    col = mix( col, vec3(1.0),1.0-smoothstep(0.0,0.015,abs(d_circle)) );\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}