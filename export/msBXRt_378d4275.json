{"ver":"0.1","info":{"id":"msBXRt","date":"1670705133","viewed":110,"name":"Abstract painting # 2","username":"thom_bahm","description":"Trying to make a generative painting. Heavily Inspired by thebookofshaders: https://thebookofshaders.com/11/\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","random"],"hasliked":0,"parentid":"mdSSRt","parentname":"Abstract painting #1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Based on https://thebookofshaders.com/edit.php#11/wood.frag\n//scale the painting\n#define paintScale 1.\n#define timeScale 1.\n\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nfloat lines(in vec2 pos, float b){\n    float scale = 10.0;\n    pos *= scale;\n    return smoothstep(0.0,.5+b*.5,\n                    abs((sin(pos.x*1.)+b*2.0))*0.95);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates <-0.5, 0.5>\n    vec2 uv = fragCoord / iResolution.xy;\n    uv *= iResolution.x / iResolution.y;\n    float t = (1.-iTime/10.)*timeScale;\n    uv = (uv + noise(uv*2.))*rotate2d(t);\n    uv *= paintScale;\n    float pattern = lines(uv,0.5);\n    //pattern = 1.; //makes it look better when scaled\n    vec3 col = vec3(1.0) * smoothstep(0.17, 0.20, noise(uv*pattern));\n    col += smoothstep(0.15, 0.2, noise(uv*10.));\n    col -= smoothstep(0.35, 0.4, noise(uv*10.));\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}