{"ver":"0.1","info":{"id":"NtBXWW","date":"1627639248","viewed":55,"name":"afternoon","username":"Jzscwhat","description":"test","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["curves"],"hasliked":0,"parentid":"-1","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ChromaticAberration = 4.0;\n        vec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec2 texel = 2.0 / iResolution.xy;\n    \n    vec2 coords = (uv - 0.5) * 2.0;\n    float coordDot = dot (coords, coords);\n    \n    vec2 precompute = ChromaticAberration * coordDot * coords;\n    vec2 uvR = uv - texel.xy * precompute;\n    vec2 uvB = uv + texel.xy * precompute;\n    \n    vec4 color;\n    color.r = texture(iChannel0, uvR).r*1.3;\n    color.g = texture(iChannel0, uv).g;\n    color.b = texture(iChannel0, uvB).b;\n    \n        fragColor = color;\n        \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nfloat SCurve (float value, float amount, float correction) {\n\n\tfloat curve = 1.0; \n\n    if (value < 0.5)\n    {\n\n        curve = pow(value, amount) * pow(2.0, amount) * 0.5; \n    }\n        \n    else\n    { \t\n    \tcurve = 1.0 - pow(1.0 - value, amount) * pow(2.0, amount) * 0.5; \n    }\n\n    return pow(curve, correction);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    vec4 C = texture(iChannel0, uv);\n   \tvec4 A = C; \n    \n    \t// Writing this as a sort of 'note to self' \n    \n    \t// Applies an S curve to the image, you can adjust the steepness\n    \t// of the curve with the control values SCurve(input, steepness, gamma)\n    \n    \tC = vec4(SCurve(C.r, 1.5, 0.8), SCurve(C.g, 1.2, 0.8), SCurve(C.b, 0.8, 0.8), 1.0); \n    \n    fragColor = C;\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}