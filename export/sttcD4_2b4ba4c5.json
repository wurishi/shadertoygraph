{"ver":"0.1","info":{"id":"sttcD4","date":"1660416800","viewed":89,"name":"autogen 48","username":"asynth","description":"Generated by a program written in Rust.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = mix2(uv, vec3(0.2824, 0.8148, 0.0309), vec3(0.8936, 0.8861, 0.1277), vec3(0.8469, 0.1953, 0.6745), vec3(0.7376, 0.0144, 0.3788));\n\tvec3 a2 = sin(mod(a1, vec3(uv.x))*3.1760 + 0.2181 + iTime*0.2350);\n\treturn a2;\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = reflect_0(uv);\n\tvec3 a1 = mix2(uv, vec3(0.7836, 0.9578, 0.1172), vec3(0.7938, 0.5947, 0.4349), vec3(0.3902, 0.9698, 0.2449), vec3(0.3914, 0.0674, 0.0179));\n\tvec3 a2 = well(a1*4.2136 + 0.6307 + iTime*0.2042);\n\treturn min((node_1(uv) + vec3(length(uv))), a2);\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = (mat2(-1.0853,-0.8838,-1.0674,1.1427)*(uv-vec2(-0.1545,-0.6953)+vec2(-0.1545,-0.6953)));\n\treturn pthresh(0.3671, vec3(atan(uv.y, uv.x)), vec3(length(uv)), vec3(atan(uv.y, uv.x)));\n}\n\nvec3 node_4(vec2 uv) {\n\tuv = repeat_0(uv, 0.6632);\n\treturn vec3(uv.y);\n}\n\nvec3 node_5(vec2 uv) {\n\tvec3 a1 = noise(uv, vec2(0.09876424, 2.0603986), 0.248872);\n\tvec3 a2 = tri(min(vec3(uv.x), min(a1, (vec3(length(uv)) / vec3(uv.y))))*5.7894 + 0.3172 + iTime*0.0591);\n\tuv = xywarp(uv, vec2(0.0869, -0.2031), (-a2).xy);\n\treturn ((node_3(uv) / vec3(uv.x)) - node_4(uv));\n}\n\nvec3 node_6(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.3118, -0.5592), vec3(uv.y).xy);\n\treturn sq(vec3(atan(uv.y, uv.x)));\n}\n\nvec3 node_7(vec2 uv) {\n\tuv = (mat2(-0.9233,1.1164,-0.9110,1.1518)*(uv-vec2(-0.4732,0.6526)+vec2(-0.4732,0.6526)));\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_8(vec2 uv) {\n\tuv = (mat2(0.8246,1.3040,0.9721,0.9722)*(uv-vec2(-0.4894,0.6716)+vec2(-0.4894,0.6716)));\n\treturn node_7(uv);\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = repeat_3(uv, 0.6846);\n\tvec3 a1 = sin(node_6(uv)*1.0630 + 0.3902 + iTime*0.3797);\n\tvec3 a2 = well((uni(sq(bi(uni(node_5(uv))))) - a1)*4.4933 + 0.5069 + iTime*0.0629);\n\tvec3 a3 = noise(uv, vec2(0.98295313, 0.4716745), 0.208211);\n\tvec3 a4 = tri(a3*5.2790 + 0.6840 + iTime*0.3868);\n\tvec3 a5 = vec3(0.0877, 0.7247, 0.3005);\n\tvec3 a6 = tri(mix(a2, pthresh(0.4778, node_8(uv), bi(vec3(length(uv))), vec3(length(uv))), mod(a4, a5))*2.5890 + 0.9446 + iTime*0.0671);\n\treturn a6;\n}\n\nvec3 node_10(vec2 uv) {\n\tuv = repeat_0(uv, 0.1216);\n\tvec3 a1 = noise(uv, vec2(0.7704049, 0.8183545), 0.526943);\n\treturn a1;\n}\n\nvec3 node_11(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = well(vec3(atan(uv.y, uv.x))*3.7135 + 0.1341 + iTime*0.0823);\n\treturn sigmoid(mod(vec3(uv.x), a1));\n}\n\nvec3 node_12(vec2 uv) {\n\tuv = repeat_1(uv, 0.4507);\n\tvec3 a1 = noise(uv, vec2(1.9902186, 1.6236007), 0.937310);\n\tvec3 a2 = noise(uv, vec2(1.6766034, 1.8420097), 0.093066);\n\tvec3 a3 = sin(a2*5.9242 + 0.1366 + iTime*0.1718);\n\tvec3 a4 = noise(uv, vec2(3.183395, 0.13087247), 0.501102);\n\tvec3 a5 = mix2(uv, vec3(0.5076, 0.2377, 0.4447), vec3(0.0697, 0.4374, 0.9558), vec3(0.9889, 0.3024, 0.4945), vec3(0.6661, 0.9553, 0.1569));\n\treturn max(mod(sigmoid(uni(uni(mod(vec3(uv.x), vec3(uv.y))))), abs(uni(pthresh(0.8500, a1, a3, a4)))), a5);\n}\n\nvec3 node_13(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.8346, 0.2174), node_11(uv).xy);\n\treturn abs(sq(sq(uni(node_12(uv)))));\n}\n\nvec3 node_14(vec2 uv) {\n\tuv = repeat_2(uv, 0.6643);\n\tvec3 a1 = noise(uv, vec2(1.7877663, 0.38948604), 0.195237);\n\treturn a1;\n}\n\nvec3 node_15(vec2 uv) {\n\tuv = repeat_4(uv, 0.7886);\n\tvec3 a1 = noise(uv, vec2(0.20506664, 3.4290888), 0.795583);\n\tvec3 a2 = mix2(uv, vec3(0.5258, 0.9313, 0.8016), vec3(0.8091, 0.2898, 0.7211), vec3(0.8716, 0.3679, 0.6307), vec3(0.3628, 0.6526, 0.9373));\n\tvec3 a3 = noise(uv, vec2(3.3368344, 1.8067394), 0.568755);\n\treturn mod(vec3(length(uv)), uni(pthresh(0.4102, a1, a2, (vec3(length(uv)) - a3))));\n}\n\nvec3 node_16(vec2 uv) {\n\tuv = repeat_1(uv, 0.4696);\n\tvec3 a1 = noise(uv, vec2(1.6097864, 3.7226129), 0.434882);\n\treturn a1;\n}\n\nvec3 node_17(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.1039, 0.3856), vec3(uv.y).xy);\n\treturn vec3(length(uv));\n}\n\nvec3 node_18(vec2 uv) {\n\tvec3 a1 = sin(node_15(uv)*2.6438 + 0.6916 + iTime*0.2637);\n\tuv = xywarp(uv, vec2(-0.0810, 0.4499), abs(a1).xy);\n\tvec3 b1 = mix2(uv, vec3(0.8422, 0.0310, 0.4602), vec3(0.7808, 0.6604, 0.8642), vec3(0.8087, 0.4160, 0.8793), vec3(0.6231, 0.8291, 0.5644));\n\tvec3 b2 = mix2(uv, vec3(0.4383, 0.9241, 0.6342), vec3(0.4897, 0.9543, 0.9447), vec3(0.6715, 0.7201, 0.6372), vec3(0.4528, 0.1819, 0.4180));\n\tvec3 b3 = sin(b2*1.8109 + 0.4653 + iTime*0.1025);\n\tvec3 b4 = mix2(uv, vec3(0.5365, 0.4300, 0.5807), vec3(0.4657, 0.0676, 0.1140), vec3(0.4800, 0.8788, 0.8068), vec3(0.7935, 0.7336, 0.9741));\n\tvec3 b5 = noise(uv, vec2(1.4988394, 1.1941762), 0.039581);\n\tvec3 b6 = vec3(0.3787, 0.5841, 0.3656);\n\tvec3 b7 = noise(uv, vec2(0.34081677, 3.7249417), 0.387279);\n\tvec3 b8 = vec3(0.4177, 0.4761, 0.8814);\n\tvec3 b9 = sin(max(bi(pthresh(0.7543, sq(vec3(uv.y)), mod(b3, max(b4, b5)), pthresh(0.5535, vec3(uv.x), b6, b7))), b8)*3.6727 + 0.5475 + iTime*0.1560);\n\tvec3 b10 = mix2(uv, vec3(0.2493, 0.3685, 0.9217), vec3(0.6034, 0.5712, 0.8130), vec3(0.1944, 0.2126, 0.9178), vec3(0.9881, 0.2876, 0.3966));\n\tvec3 b11 = well(vec3(uv.x)*3.8261 + 0.2957 + iTime*0.2598);\n\tvec3 b12 = mix2(uv, vec3(0.2669, 0.1367, 0.6992), vec3(0.9538, 0.2954, 0.5860), vec3(0.2840, 0.5857, 0.5406), vec3(0.0316, 0.2549, 0.3127));\n\treturn mod(pthresh(0.2650, vec3(uv.x), b1, vec3(atan(uv.y, uv.x))), mix(b9, (-mix(node_16(uv), (vec3(length(uv)) - abs(mod((b10 + b11), min(b12, node_17(uv))))), vec3(length(uv)))), mix(abs(vec3(uv.x)), vec3(atan(uv.y, uv.x)), vec3(uv.x))));\n}\n\nvec3 node_19(vec2 uv) {\n\tuv = reflect_4(uv);\n\tvec3 a1 = noise(uv, vec2(0.448085, 3.3694584), 0.568565);\n\tvec3 a2 = sin(a1*2.7322 + 0.0252 + iTime*0.3586);\n\tvec3 a3 = mix2(uv, vec3(0.0152, 0.6819, 0.2625), vec3(0.0674, 0.6977, 0.1958), vec3(0.2646, 0.6844, 0.4725), vec3(0.6324, 0.5122, 0.6268));\n\tvec3 a4 = well((a3 + vec3(atan(uv.y, uv.x)))*1.1766 + 0.8382 + iTime*0.3494);\n\treturn mod(sigmoid((a2 / a4)), bi(node_18(uv)));\n}\n\nvec3 node_20(vec2 uv) {\n\tuv = reflect_0(uv);\n\tvec3 a1 = mix2(uv, vec3(0.4959, 0.4345, 0.1617), vec3(0.7931, 0.5420, 0.6444), vec3(0.8700, 0.0526, 0.7088), vec3(0.3000, 0.9871, 0.8647));\n\tvec3 a2 = vec3(0.3442, 0.5824, 0.2281);\n\tvec3 a3 = sin(node_14(uv)*2.0869 + 0.6870 + iTime*0.0923);\n\treturn ((vec3(length(uv)) + a1) / max(bi(mod(max((-abs(vec3(length(uv)))), a2), (-min(a3, vec3(uv.x))))), node_19(uv)));\n}\n\nvec3 node_21(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = mix2(uv, vec3(0.5061, 0.0178, 0.0390), vec3(0.6118, 0.6698, 0.2023), vec3(0.6290, 0.3838, 0.5073), vec3(0.3355, 0.5601, 0.4874));\n\treturn ((node_13(uv) + sigmoid(min(vec3(uv.y), a1))) + node_20(uv));\n}\n\nvec3 node_22(vec2 uv) {\n\tuv = (mat2(0.9568,-0.7825,1.0826,0.7737)*(uv-vec2(0.3211,-0.1317)+vec2(0.3211,-0.1317)));\n\tvec3 a1 = mix2(uv, vec3(0.7002, 0.6533, 0.4484), vec3(0.6104, 0.6545, 0.6270), vec3(0.3372, 0.7725, 0.5731), vec3(0.1343, 0.2714, 0.5469));\n\treturn a1;\n}\n\nvec3 node_23(vec2 uv) {\n\tvec3 a1 = vec3(0.7276, 0.5715, 0.6585);\n\tuv = xywarp(uv, vec2(-0.4040, -0.4040), (abs(bi(pthresh(0.6189, a1, max((-vec3(length(uv))), uni(node_10(uv))), vec3(uv.y)))) / node_21(uv)).xy);\n\tvec3 b1 = noise(uv, vec2(3.3085172, 0.2605345), 0.477416);\n\treturn max((mix(vec3(uv.y), vec3(uv.x), b1) / vec3(atan(uv.y, uv.x))), node_22(uv));\n}\n\nvec3 top(vec2 uv) {\n\tvec3 a1 = tri(abs(sq(node_23(uv)))*3.2474 + 0.0337 + iTime*0.2234);\n\treturn mod((sigmoid(node_2(uv)) / uni(node_9(uv))), a1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}