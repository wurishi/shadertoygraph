{"ver":"0.1","info":{"id":"dlVfzy","date":"1702246059","viewed":42,"name":"1d noise exp","username":"punpun","description":"1d noise exp","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["noise","experiment","1d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n\nfloat hash(float p) {\n    //43758.5453123\n    return fract(sin(p)*(43758.5453123+iTime));\n}\n\nfloat circle(in vec2 _st, in float _radius) {\n    vec2 dist = _st - vec2(0.5);\n\n    return 1. - smoothstep(_radius - (_radius * 0.01), _radius + (_radius * 0.01), dot(dist, dist) * 4.0);\n}\n\n\nfloat noise(in float x){\n    float i = floor(x);\n    float f = fract(x);\n    return mix(hash(i), hash(x+0.), smoothstep(0.0, 0.1, f));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y; // Aspect ratio\n    st.x -= .35;\n\n    vec3 color = vec3(circle(st, .7));\n    color = vec3(hash(st.x));\n    color = vec3(circle(st, noise(st.y)));\n    color = vec3(circle(st, noise(st.x+st.y)));\n    color = vec3(circle(st, noise(st.x-st.y)));\n    color = vec3(circle(st, noise(st.x*st.y)));\n    color = vec3(circle(st, noise(st.x/st.y)));\n    color = vec3(circle(st, noise(st.x*st.y+PI)));\n    //color = vec3(circle(st, noise(st.x*st.y-PI)));\n    //color = vec3(circle(st, noise(st.x*st.y/PI)));\n    //color = vec3(circle(st, noise(st.x*st.y*PI)));\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}