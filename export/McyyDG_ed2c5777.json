{"ver":"0.1","info":{"id":"McyyDG","date":"1732308821","viewed":103,"name":"random discovery","username":"jt","description":"Trying to do something completely different, stumbled upon this pattern - looks kind of interesting.\n(Click to regenerate pattern)","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["random","buffer","particle","tesselation"],"hasliked":0,"parentid":"dttBRM","parentname":"particle random rectangle tiling"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/dttBRM particle random rectangle tiling, 2023 by jt IMAGE\n\n// see buffer A for the core implementation\n\nvoid mainImage(out vec4 o, in vec2 I)\n{\n    vec4 c = texelFetch(iChannel0, ivec2(I),0);\n    o = c;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// https://www.shadertoy.com/view/McyyDG random discovery, 2024 by jt\n\n// Trying to do something completely different, stumbled upon this pattern - looks kind of interesting.\n// (Click to regenerate pattern)\n\n// tags: random, buffer, particle, tesselation, discovery\n\n// The MIT License\n// Copyright (c) 2024 Jakob Thomsen\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvoid mainImage(out vec4 c, in vec2 I)\n{\n    if(iFrame == 0 || iMouse.z > 0.0) // initialize\n    {\n        c = vec4(0);\n        vec2 random = hash22(I+iTime);\n        float scale = 10.0;\n        if(max(random.x,random.y)<1.0/scale)\n            c = vec4(random*scale,0,0);\n    }\n    else // iterate\n    {\n        ivec2 i = ivec2(I);\n        vec4 original = texelFetch(iChannel0,i,0);\n        ivec2 o;\n        for(o.y = -1; o.y <= +1; o.y++)\n        {\n            for(o.x = -1; o.x <= +1; o.x++)\n            {\n                vec2 center = texelFetch(iChannel0,i+o,0).xy*iResolution.xy;\n                \n                if(center.x > 0.0 && center.y > 0.0)\n                {\n                    float radius0 = distance(vec2(i+o), center);\n                    float radius1 = distance(vec2(i  ), center);\n                    if(radius1 <= radius0)\n                    {\n                        if(c == vec4(0))\n                            c = vec4(center/iResolution.xy, 0, 0);\n                        else\n                            c = vec4(0,0,1,0); // collision\n                    }\n                }\n            }\n        }\n        \n        if(c.z > 0.0) // collision\n            c = original; // reset\n    }\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\n// see buffer A for the core implementation\n\nvec2 hash22(vec2 p) // https://www.shadertoy.com/view/4djSRW by Dave_Hoskins\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nvec2 polar(float angle)\n{\n    return vec2(cos(angle),sin(angle));\n}\n","name":"Common","description":"","type":"common"}]}