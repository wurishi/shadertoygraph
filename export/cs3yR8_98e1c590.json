{"ver":"0.1","info":{"id":"cs3yR8","date":"1694692916","viewed":56,"name":"_truchet_zl","username":"zlnimda","description":"Learning stuff","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Tile size in pixel\nconst float TileSize = 20.f;\nconst uint AA = 3u;\n\n//*** Rand ***\n// degenerative values from fractional value from high frequency sinus values\nfloat rand(float x)\n{\n    return fract(sin(x) * 4973.363);\n}\n\n// random single value from 2dimension value\nfloat rand2(vec2 v)\n{\n    return rand(dot(v, vec2(16.37, 11.97)));\n}\n//*** !Rand ***\n\nvec3 mainTiled(in vec2 idx, in vec2 uv)\n{\n    float n = rand2(idx);\n\n    uv -= .5;\n    float sign = n > .5 ? -1. : 1.;\n    vec2 o = vec2(.5 * sign,.5);\n    float sd = min(abs(length(uv - o.xy) - .5), abs(length(uv + o.xy) - .5));\n    \n    return vec3(sd < .1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Accumulation AA\n    vec3 color = vec3(0.);\n    \n    for (uint i = 0u; i < AA * AA; ++i)\n    {\n        vec2 aaofst = vec2(1./float(AA)) * vec2(i / AA, i % AA) - vec2(.5);\n        vec2 aacoord = fragCoord.xy + aaofst;\n\n        // coordinates zoom centered by time\n        vec2 zcoord = (aacoord - iResolution.xy * .5) * (sin(iTime * .6) * .6 + .9) + iResolution.xy * .5;\n        // coordinates move by time\n        vec2 vcoord = zcoord + iTime * 20.;\n        \n        // Setup idx & uv by tile\n        vec2 idtld = floor(vcoord / TileSize);\n        vec2 uvtld = fract(vcoord / TileSize);\n\n        color += mainTiled(idtld, uvtld);\n    }\n    color /= float(AA * AA);\n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}