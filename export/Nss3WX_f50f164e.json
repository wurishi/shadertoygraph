{"ver":"0.1","info":{"id":"Nss3WX","date":"1616660174","viewed":561,"name":"LowRes FMV + Dithering effect","username":"MrHimself","description":"Low res + small color palette (8/16 bit comparable)+ dithering Effect on top of camera","likes":6,"published":3,"flags":2,"usePreview":0,"tags":["pixel","dithering","lowres"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PIXEL_FACTOR = 320.;\nconst float COLOR_FACTOR = 3.;\n\n//wiki Ordered dithering table\nconst mat4 ditherTable = mat4(\n    0.0, 8.0, 2.0, 10.0,\n    12.0, 4.0, 14.0, 6.0,\n    3.0, 11.0, 1.0, 9.0,\n    15.0, 7.0, 13.0, 5.0\n);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{                  \n    // Reduce pixels            \n    vec2 size = PIXEL_FACTOR * iResolution.xy/iResolution.x;\n    vec2 coor = floor( fragCoord/iResolution.xy * size) ;\n    vec2 uv = coor / size;   \n                \n   \t// Get source color\n    vec3 col = texture(iChannel0, uv).xyz;     \n    \n    // Dither\n    col += ditherTable[int( coor.x ) % 4][int( coor.y ) % 4] * 0.015; // last number is dithering strength\n\n    // Reduce colors    \n    col = floor(col * COLOR_FACTOR) / COLOR_FACTOR ; \n    \n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}