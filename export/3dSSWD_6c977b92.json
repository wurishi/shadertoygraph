{"ver":"0.1","info":{"id":"3dSSWD","date":"1553729144","viewed":174,"name":"whys and hows of shirley jones 4","username":"elenzil","description":"mouse vertical for circle size. lower-left for autopilot.\ninspired by [url]https://www.shadertoy.com/view/3sBXDh[/url]","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["blur","shirley","jones"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LOBOTOMIZE 0\n\n#if LOBOTOMIZE\nvoid mainImage(out vec4 a, in vec2 b) {\n    a = vec4(0.0, 0.0, 0.8, 1.0);\n}\n#else\n\n\n// mouse vertical for circle size. lower-left for autopilot.\n// inspired by [url]https://www.shadertoy.com/view/3sBXDh[/url]\n\n#define PI (3.14159265359)\n\nfloat rgb_brt(vec3 rgb) {\n\treturn dot(rgb, vec3(1.0/3.0));\n}\n\nfloat myTime = 0.0;\n\nvec3 samp(vec2 uv) {\n    return texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    myTime = iTime * 0.5 + 3.0;\n    \n    vec2 XY  = fragCoord.xy;\n    vec2 UV  = XY / iResolution.xy;\n    \n    bool darkTime = sin(myTime) < 0.0;\n    \n    float radMin;\n    if (dot(iMouse.xy, vec2(1.0)) > 50.0) {\n        radMin    = iMouse.y / iResolution.y * 2.0 - 1.0;\n        darkTime  = radMin < 0.0;\n        radMin   *= 100.0;\n    }\n    else {\n\t\tradMin    = sin(myTime);\n        radMin   *= 50.0;\n    }\n    radMin    = abs(radMin);\n\n    float radMax = radMin + 1.0;\n    \n    float rmx   = max(1.0, radMax);\n    float rmn   = max(0.0, radMin);\n    float rmxSq = rmx * rmx;\n    float rmnSq = rmn * rmn;\n    \n    vec3 rgb = vec3(darkTime ? 1.0 : 0.0);\n    \n    vec2 xy;\n    for (float ry = -rmx; ry < rmx; ry += 1.0) {\n        xy.y = XY.y + ry;\n\n        // max() because rmxSq - ry * ry might be < 0 due to floats.\n        float rxMax = sqrt(max(0.0, rmxSq - ry * ry));\n        float rxMin = sqrt(max(0.0, rmnSq - ry * ry));\n        \n        for (float rx = rxMin; rx < rxMax; rx += 1.0) {\n            xy.x = XY.x + rx;\n            vec3 in1 = samp(xy/iResolution.xy);\n            xy.x = XY.x - rx;\n            vec3 in2 = samp(xy/iResolution.xy);\n            \n            if (darkTime) {\n                rgb  = min(rgb, in1);\n                rgb  = min(rgb, in2);\n            }\n            else {\n                rgb  = max(rgb, in1);\n                rgb  = max(rgb, in2);\n            }\n        }\n    }\n    \n\n    fragColor = vec4(rgb, 1.0);\n}\n\n#endif","name":"Image","description":"","type":"image"}]}