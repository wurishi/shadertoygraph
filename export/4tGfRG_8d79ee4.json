{"ver":"0.1","info":{"id":"4tGfRG","date":"1542865740","viewed":165,"name":"Parametrics 1","username":"saidwho12","description":"teestaeet","likes":10,"published":1,"flags":32,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate( float a )\n{\n\tfloat c = cos(a), s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nfloat SmoothBump (float lo, float hi, float w, float x)\n{\n  return (1. - smoothstep (hi - w, hi + w, x)) * smoothstep (lo - w, lo + w, x);\n}\n\nvoid mainImage(out vec4 O, in vec2 u)\n{\n\tvec2 R = iResolution.xy, p = (u+u-R)/R.y;\n\tO.rgb = mix(vec3(.3), vec3(0.92, 0.9, 0.85),\n                texture(iChannel0, u/R).a);\n    \n    // G1 just means Gear #1\n    float N = 48.; // number of teeth for G1\n    \n    float G1_InnerRadius = (R1-R2) + RD + grooveHeight + chalkRadius;\n    float G1_Radius = G1_InnerRadius + gearThickness;\n    \n    // InnerRadius for G1 with grooves\n    float G1_Gx = (atan(p.y,p.x)/M_PI*.5+.5) * N;\n    float G1_Grooves = grooveHeight * SmoothBump(-.5, .5, .25, fract(-G1_Gx)*2.-1.) - grooveHeight;\n    \n    float G1_Dist = max(length(p)-G1_Radius, -(length(p)-(G1_InnerRadius + G1_Grooves)) );\n    \n    // Find ratio of circumference between gears\n    float ratio = (R2*PI_2) / (R1*PI_2);\n    \n    // Gear 2 / Inner gear\n    float G2_MoveT = chalkSpeed * PI_2 * iTime;\n    float G2_V = R1 * G2_MoveT;\n    float G2_RotT = G2_V / R2;\n    \n    vec2 G2_C = (R1-R2+chalkRadius)*vec2(cos(G2_MoveT),sin(G2_MoveT));\n    \n    float G2_RotT0 = atan(G2_C.y, G2_C.x);\n    \n    vec2 G2_p = rotate(-(G2_RotT0 - G2_RotT)) * (p-G2_C);\n    \n    float G2_Gx = (atan(G2_p.y, G2_p.x)/M_PI*.5+.5) * N * ratio;\n    \n    float G2_Grooves = grooveHeight * SmoothBump(-.5, .5, .25, fract(-G2_Gx + .5)*2.-1.);\n    float G2_Radius = R2 + G2_Grooves;\n    \n    float G2_Dist = max(length(G2_p)-G2_Radius, - (length(G2_p) - (R2 - 3.*chalkRadius)) );\n    \n    \n    float t = min(G1_Dist, G2_Dist);\n    float s = smoothstep(3./R.y, 0., t);\n    O.rgb = mix(O.rgb, gearColor, s);\n    //O.rgb = mix(O.rgb, gearColor, smoothstep(3./R.y, 0., G2_Dist) );\n    \n    O.rgb *= 1.-.5*exp(-25.*t)*(1.-s);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float noise( vec3 x )\n{\n    vec3 p = floor(x), f = x-p;\n    f = f*f*(3.-2.*f);\n\n    vec2 u = (p.xy+vec2(37.,17.)* p.z) + f.xy;\n    vec2 rg = textureLod( iChannel1, (u+.5)/256., 0. ).yx;\n\n    return mix( rg.x, rg.y, f.z );\n}\n\nfloat fbm( vec3 x )\n{\n\treturn .5*noise(x) + .25*noise(2.*x) + .125*noise(4.*x) + .0625*noise(8.*x);\n}\n\n\n#define N 10.\n\nfloat A( vec2 p, vec2 R )\n{\n   \tfloat a = 0.;\n    for(float i = 0.; i < N; i++) {\n    \ta += smoothstep(3./R.y, 0.,\n                        length(p - f(iTime-i/(N*10.), R1, R2, RD))\n                        -chalkRadius - 8e-3*(fbm(vec3(350.*p,iTime))*2.-1.) );\n    }\n    return a/N;\n}\n\nvoid mainImage(out vec4 O, in vec2 u) {\n\tvec2 R = iResolution.xy, p = (u+u-R)/R.y;\n    float t = (.3+.7*fbm(vec3(u/R.y,0)*250.)) * A(p,R);\n    O.a = (1.-t)*min(texture(iChannel0, u/R).a*0.9995,1.) + t;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float R1 = .8;\nconst float R2 = .25;\nconst float RD = .25;\n\nconst float chalkRadius = 2e-2;\nconst float grooveHeight = 5e-2;\nconst float gearThickness = .1;\n\nconst float chalkSpeed = .2;\nconst vec3 gearColor = vec3(.75,.72,.5);\n\n#define M_PI 3.14159265358979323846\n#define PI_2 (2.*M_PI)\n\nvec2 f( float t, float R, float r, float d ) {\n    float a = chalkSpeed * t * PI_2, b = R - r, c = b/r;\n\treturn vec2(b*cos(a) + d*cos(c*a),b*sin(a) - d*sin(c*a));\n}","name":"Common","description":"","type":"common"}]}