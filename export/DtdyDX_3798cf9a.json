{"ver":"0.1","info":{"id":"DtdyDX","date":"1699891863","viewed":41,"name":"Heart function shader","username":"FrederikJA","description":"Some heart functions","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["heartfunction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793238\n#define BPS 1.0\n\nfloat heartFunction(vec2 uv, float size) {\n    float top = sqrt(1.0-pow(abs(uv.x * size)-1.0, 2.0)) + 1.0 - uv.y * size;\n    float bottom = acos(1.0 - abs(uv.x * size)) - PI + 1.0 - uv.y * size;\n    return 1.0 - top * bottom;\n}\n\nbool customHeart(vec2 uv, float size) {\n    bool top = uv.y * size < sqrt(1.0-pow(abs(uv.x * size)-1.0, 2.0)) + 1.0;\n    bool bottom = uv.y * size > acos(1.0 - abs(uv.x * size)) - PI + 1.0;\n    return top && bottom;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord-.5*iResolution.xy ) / iResolution.y;\n\n    float heartValue = heartFunction(uv, 5.0 + abs(sin(iTime * BPS))) - 1.0;\n    fragColor = vec4(heartValue, 0.0, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}