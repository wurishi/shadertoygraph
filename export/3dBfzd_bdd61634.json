{"ver":"0.1","info":{"id":"3dBfzd","date":"1590580817","viewed":91,"name":"Shape Practice","username":"izhi","description":"this is a practice of shape !","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nfloat triangle(vec2 st, vec2 p0, vec2 p1, vec2 p2, float smoothness) {\n    vec3 e0, e1, e2;\n    \n    e0.xy = normalize(p1 - p0).yx * vec2(1.0, -1.0);\n    e1.xy = normalize(p2 - p1).yx * vec2(1.0, -1.0);\n    e2.xy = normalize(p0 - p2).yx * vec2(1.0, -1.0);\n    \n    e0.z = dot(e0.xy, p0) - smoothness;\n    e1.z = dot(e1.xy, p1) - smoothness;\n    e2.z = dot(e2.xy, p2) - smoothness;\n    \n    float a = max(0.0, dot(e0.xy, st) - e0.z);\n    float b = max(0.0, dot(e1.xy, st) - e1.z);\n    float c = max(0.0, dot(e2.xy, st) - e2.z);\n    \n    return smoothstep(smoothness * 2.0, 1e-7, length(vec3(a, b, c)));\n}\n\nfloat circle(in vec2 _st, in float _radius) {\n    vec2 dist = _st - vec2(0.5);\n    return 1.0 - smoothstep(_radius - (_radius * 0.01), _radius + (_radius * 0.01), dot(dist, dist) * 4.0);\n}\n\nmat2 rotate(float _angle) {\n    return mat2(cos(_angle), -sin(_angle), sin(_angle), cos(_angle));\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.0);\n    \n    st -= vec2(0.5);\n    st = rotate(sin(iTime) * PI) * st;\n    \n    vec2 pos = st;\n    \n    float r = length(pos) * 2.0;\n    float a = atan(pos.x, pos.y);\n    \n    float f = smoothstep(-.5,1., cos(a*10.))*0.2+0.5;\n    \n    color = vec3(1.0 - smoothstep(f, f + 0.02, r));\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}