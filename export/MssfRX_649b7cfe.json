{"ver":"0.1","info":{"id":"MssfRX","date":"1497337761","viewed":143,"name":"Infinite Rose","username":"Sheado","description":"A random distance field infinite rose. \nClick to seed randomizer.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","distancefield","random","rose"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 uv);\nfloat noise (in vec2 st);\nvoid noise( out vec4 fragColor, in vec2 fragCoord );\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    noise(fragColor, fragCoord);\n}\n\nvoid noise( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv *= 10.;\n    float n = noise(uv);\n    n = length(uv)-n+(fract(iTime));\n    n = fract(n);\n    \n    fragColor = vec4(vec3(n,0.,0.),1.);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u;// = f*f*(3.0-2.0*f);\n     u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners porcentages\n    return mix(a, b, u.x) + \n            (c - a)* u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}\n\nfloat random(vec2 uv)\n{\n    float x = iMouse.x;\n    float y = iMouse.y;\n    if( x == 0. )\n        x = 12.32453454;\n    if( y == 0. )\n        y = 4.98743657943;\n    return fract(sin(dot(uv,vec2(x,y))) * iResolution.x*iResolution.y);\n}\n","name":"Image","description":"","type":"image"}]}