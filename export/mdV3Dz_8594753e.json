{"ver":"0.1","info":{"id":"mdV3Dz","date":"1678429078","viewed":96,"name":"Julia set fractal animation","username":"tejasnishad","description":"Renders julia set for different points","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","julia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0);\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nfloat julia(vec2 z, vec2 c) {\n    for (float i = 0.; i < 200.; i++) {\n        if (dot(z,z) > 4.0) { return i/200.; }\n        z = mat2(z, -z.y, z.x)*z +c;\n    }\n    return 200.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = 4.* ( fragCoord.xy - .5* iResolution.xy ) / iResolution.y;\n    float b = julia(uv.xy, 4.* ( iMouse.xy - .5* iResolution.xy ) / iResolution.y);\n    vec3 col = hsb2rgb(vec3(b+0.8, 1.0, sin(b-25.0)));\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}