{"ver":"0.1","info":{"id":"tl2yzd","date":"1595201989","viewed":418,"name":"[4k] ARQ","username":"LIA","description":"4kb intro presented at Flashparty 2020 online\n1st place - combined pc intro/demo compo\ncode by kali - music by uctumi\n","likes":21,"published":1,"flags":64,"usePreview":0,"tags":["raymarching","fractal","intro","4k","demoscene"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MtS3zt","filepath":"https://soundcloud.com/uctumi/lia-arq-soundtrack-4klang","previewfilepath":"https://soundcloud.com/uctumi/lia-arq-soundtrack-4klang","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n___.                       ___            .___ ___________\n,___ _\\(   |._____________ __. __\\(__/___. ______\\|_  \\\\          )_. ________,\n|%%% |     ||            //  |/          |/        /                | %%%%%%%%|\n|%%% |    _||                |           |        _                 | %%%%%%%%|\n|'_ _|    \\                 _|          _|        |                 |_ _ `%%%%|\n .\\)\\_______________________)|__________)|________|__________________/(/.\n<------------------------------------------------------------------------diP->>\n         l a t i t u d e  i n d e p e n d e n t  a s s o c i a t i o n\n<<---------------------------------------------------------------------------->\n\n                                    L.I.A.\n\n                                   presents\n\n                              a 4 kilobytes PC intro\n\n                                    titled\n\n                                    \"ARQ\"\n\n\n--------------------------------- Release Info --------------------------------\n\n\n                                 code by: Kali\n                                 music by: Uctumi\n\n   Coded for Flashparty 2020 online, to be released on july 18, 2020.\n   Nos alegra poder participar de una nueva edición de una demoparty para\n   Latinoamérica como Flashparty 2020 online. Esperemos que el próximo año\n   podamos vernos en persona!\n   We're happy to take part in a new edition of a demoparty for Latin America\n   We hope next year we can meet in person!\n\n   Kali wishes to greet DJ Joe Riquelme and Eiffie.\n\n\n----------------------------------- News --------------------------------------\n\n\n   We're happy to announce we got 1st place at the intro compo at @party\n   with \"Golden Path\" which was also our Flashparty 2020 invitation.\n   We're also thrilled to have achieved 2nd place at the 4kb executable gfx\n   compo at Solskogen with \"The engineer\" coded and created by Bitnenfer.\n\n------------------------------------ Members -----------------------------------\n\n\n            Bitnenfer - Foco - Kali - Pixel Syndrome - Riq - Uctumi\n\n\n----------------------------------- Contact -----------------------------------\n\n\n                         http://liagroup.is-great.org\n\n\n---------------------------------- Greetings ----------------------------------\n\n\n                     To all fellow demosceners of the world!\n            Specially: PVM - Hokuto Force - Azop - Christian Kleinhus\n                          Dipswitch - QOP - JPupper\n\n\n-------------------------------------------------------------------------------\n\n\n\n                        Signing off... The LIA crusaders\n                                                                       */\n\n#define iTime iChannelTime[0]\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nfloat det=.00003,maxdist=.5,fcol,t,scene,sct,obj,td=0.;\n\nfloat is(float s) \n{\n\treturn step(abs(s-scene),.1);\n}\n\nmat3 lookat(vec3 dir, vec3 up) \n{\n\tdir=normalize(dir);vec3 rt=normalize(cross(dir,normalize(up)));\n    return mat3(rt,cross(rt,dir),dir);\n}\n\nfloat hash(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n\nfloat ksetw(vec3 p) \n{\n    p=abs(1.-mod(p*50.,2.))+vec3(.15,.4,.32);\n    for (int i=0; i<8; i++) p=abs(p)/dot(p,p)-.9;\n\treturn clamp(length(p),0.,2.);\n}\n\nvec3 path(float t) \n{\n\treturn vec3(sin(t*12.)*.1,.25*smoothstep(0.,.5,abs(.5-fract(t*2.)))*is(6.),t);\n}\n\n\nfloat de(vec3 p) \n{\n    p.y+=.005*is(6.);\n    vec3 pth=path(p.z);\n    float yw=.045+p.y-(1.+sin(p.z*20.-1.))*.02-pth.y,der=1.,m=100.,sc;\t\n    p.y-=3.21;\n    p.x+=.25;\n    p.xy-=pth.xy;\n    p.z=is(6.)>.1 ? abs(.1-mod(p.z,.2))+.1 : abs(.5-fract(p.z));\n    vec3 pos=p;\n    for(int i=0;i<13;i++)\n    {\n\t\tp=abs(p);\n        p-=vec3(0,2.2,0.1+sin(pos.z)*0.1)*(1.-is(6.))+vec3(0,2,0)*is(6.);\n\t    sc=2./clamp(dot(p,p),0.25,1.);\n\t\tp*=sc; \n\t\tder*=sc;\n\t\tp-=vec3(.5,1,.4);\n        p.xz*=rot(t*20.*is(7.)*step(3.,float(i)));\n\t\tif(i<10) m=min(m,abs(p.y));\n    }\n\tfcol=max(.45,.9-m);\n\tfloat d=(length(p)-2.)/der*.75;\n    yw-=ksetw(pos+t*.2)*.00001-is(3.)-is(6.);\n    d=min(d,yw);\n    obj=step(yw,d);\n    return d;\n}\n\nvec3 normal(vec3 p) \n{\n\tvec3 e=vec3(0.,det*2.,0.);\n    return normalize(vec3(de(p+e.yxx),de(p+e.xyx),de(p+e.xxy))-de(p));\n}\n\nfloat ao(vec3 p, vec3 n) \n{\n\tfloat st=.0003,ao=0.;\n    for(float i=0.; i<6.; i++ ) \n    {\n        float td=st*i, d=de(p+n*td);\n        ao+=max(0.,(td-d)/td);\n    }\n    return clamp(1.-ao*.2,0.,1.);\n}\n\nfloat kset(vec3 p) \n{\n\tp.xy*=rot(t*50.);\n    p*=200.;\n    float m=100.;\n    for (int i=0; i<4; i++) \n    {\n        p.xz*=rot(t*50.);\n    \tp=abs(p)/dot(p,p)-1.05;\n        m=min(m,length(p));\n    }\n\treturn exp(-1.*m)*.0025;\n}\n\nfloat de_light(vec3 p) \n{\n\treturn (length(p)-kset(p))*.5-smoothstep(139.5,147.,iTime)*.1;\n}\n\nfloat shadow(vec3 p, vec3 lightpos, vec3 ldir) \n{\n    float td=.0001,sh=1.,d=det;\n    for (int i=0; i<30; i++) {\n\t\tp-=ldir*d;\n        d=de(p);\n        td+=d;\n\t\tsh=min(sh,15.*d/td);\n\t\tif (sh<.001 || distance(p,lightpos) < .02) break;\n    }\n    return clamp(sh,0.,1.);\n}\n\nfloat march(vec3 from, vec3 dir, vec3 lightpos, vec2 uv) \n{\n    vec3 p, pl, pref, odir=dir, camdir=normalize(lightpos-from);\n    float tdl=0.,d,dl, fade=1.,col=0.;\n    float g=0.,lg=0., ref=0.;\n    float light=max(.1+(.5-abs(.5-fract(t*38.)))*1.2,smoothstep(34.,37.,iTime));\n    float n=hash(gl_FragCoord.xy+iTime)*.006;\n    d=dl=n;\n    dir.zy-=step(iTime,17.5)*.47;\n    if (iTime>26.3 && iTime<30.8) dir.yz*=rot(1.3),light+=.3;\n    p=from;\n    \n    for(int i=0; i<150 && td<maxdist; i++) {\n\t\tp+=min(d,dl)*dir;\n        dl=de_light(p-lightpos);\n        d=de(p);\n        det*=1.+td*.2;\n\t\tif (d<det && (obj<.5 || ref>0.)) break;\n        if (d<det && obj>.5) \n        {\n            vec3 n=normal(p);\n            dir=reflect(dir,n);\n            p+=dir*det;\n            ref=.5;\n            pref=p;\n            pl=p;\n            from=p;\n        } \n        td+=d;\n        lg=max(lg,max(0.,.035-dl)/.035);\n        g++;\n    }\n    if (d<.01 && td<maxdist) \n    {\n        p-=dir*det*2.;\n     \tfloat cl=fcol;\n       vec3 ldir=normalize(p-lightpos),n=normal(p);\n       float fall=exp(-15.*distance(p,lightpos));\n       col+=cl*(fall*ao(p,n)+max(0.,dot(ldir,-n))*shadow(p,lightpos,ldir))*1.3*light*(1.-ref)*fall;\n       col=min(1.,col);\n    } \n    else \n    {\n        td=maxdist;\n        p=from+dir*td;\n    }\n\tcol+=ref*.1;\n    col=pow(abs(col),1.25);\n    col=mix(col,light,pow(lg,10.))*.8;\n    col+=g*.0013*light;\n    col=mix((td*.5*(light+.2))+col*.2,col,light);\n    return col*(1.+.5*smoothstep(.1,.0,abs(132.-iTime)))*step(.6,abs(104.4-iTime));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tfloat sceneidx=step(44.,iTime)+step(52.5,iTime)+step(61.,iTime)+step(70.,iTime)+step(78.5,iTime)+step(87.,iTime)+step(96.,iTime)+step(105.,iTime)+step(122.,iTime); \n    scene=float[](0.,5.,0.,2.,3.,4.,5.,1.,6.,7.)[int(sceneidx)];\n\tvec2 uv = (gl_FragCoord.xy-iResolution.xy*.5)/iResolution.y;\n    t=iTime*.012;\n\tt*=1.+step(78.5,iTime)+is(6.);    \n    vec3 dir = normalize(vec3(uv,1.-smoothstep(140.,143.,iTime)*.5)+vec3(cos(t*20.)*.2,sin(t*10.)*.2,0.)),\n        lightpos = path(t+.06+sin(t*20.)*.03),\n        from = path(t);\n    float c=0.;\n    if (is(1.)>.1) from = path(t)+vec3(0.063,.025,.0), lightpos = path(t)+vec3(0.,.03,0.);\n    if (is(2.)>.1) t=(iTime-61.)*.02,from = path(.04)+vec3(0.01,0.01,0.),lightpos = path(t);\n    if (is(3.)>.1) from.y-=.025,lightpos.y-=.02;\n    if (is(4.)>.1) from.y+=.02,lightpos = path(t-.05);\n    if (is(5.)>.1) from.y+=.04,dir.yz*=rot(.7),lightpos = path(t+.01);\n    if (is(6.)>.1) lightpos = path(t+.04), lightpos.x-=(smoothstep(112.,114.,iTime)-smoothstep(117.,119.,iTime))*.025;\n    float s=step(127.5,iTime);\n    if (is(7.)>.1) lightpos = path(t+.02+s*.05),dir.xz*=rot(-t*5.*(1.-s));\n    dir=lookat(lightpos-from,vec3(0.,1.,0.))*dir;\n    if (abs(uv.y)<0.35+smoothstep(35.,40.,iTime)) c=march(from, dir, lightpos, uv)+hash(gl_FragCoord.xy+iTime)*.05;\n    vec3 col = mix(vec3(c),vec3(c,c*c*1.1,c*c*c),.45);\n    fragColor = vec4(col,td*(1.+is(3.)*2.))*smoothstep(146.,140.,iTime)*step(iTime,142.8);\n}","name":"Image","description":"","type":"image"}]}