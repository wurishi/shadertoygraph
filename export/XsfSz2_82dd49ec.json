{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float PI = 3.1415926;\n#define RING_COUNT 50.0\n//#define CONSTRAINED_TO_CIRCLE //as opposed to filling the whole screen\n#define AA 1.0\n#define AA_SAMPS 64\t\n\n//mmalex's random functions\nfloat srand(vec2 a) { return fract(sin(dot(a,vec2(1233.224,1743.335)))); }\nvec2 rand(vec2 r) { return fract(3712.65*r+0.61432); }\n\nfloat easeWithSteps(float t, float steps)\n{\n\tfloat frac = 1.0 / steps;\t\n\tfloat eT = mod(t, frac);\n\tfloat x = eT / frac;\n\treturn t - eT + frac * x*x*x*(x*(x*6.0 - 15.0) + 10.0); // fancy smoothstep (see wikipeed)\n}\n\nfloat map(float x, float xmin, float xmax, float ymin, float ymax)\n{\n\t// miss u processing\n\treturn clamp(ymin + (x - xmin) / (xmax - xmin) * (ymax - ymin), ymin, ymax);\n}\n\nfloat colorAtCoord(vec2 coord, float t)\n{\n\tfloat steps = 1. + mod(floor(t), 7.0); // pattern cycling\n\tt = mod(t, 1.0);\n\t\n\tvec2 uv = coord.xy / iResolution.xy;\n\tvec2 p = uv - vec2(.5,.5);\n\tp.y *= iResolution.y / iResolution.x;\n\t\n\tfloat angle = atan(p.y, p.x);\n\tangle = mod( angle + PI * 2.0, PI * 2.0);\n\t\n\tfloat dist = length(p);\n\t\n\tfloat ring = floor(pow(dist*1.5,.5) * RING_COUNT - t); // tweak!\n\tfloat ringFrac = ring / RING_COUNT;\n\t\n\tfloat ringTime = map(t, ringFrac * .125, 1.0 - ringFrac * .125, 0.0, 1.0);\n\tringTime = easeWithSteps(ringTime, steps); // aand tweak!\n\t\n\tfloat color = 0.0;//vec4 color = vec4(0.0,0.0,0.0,1.0);\n\tfloat tAngle =  PI * 2.0 * mod(ringTime * ring*1.0, 1.0);\n\t//if ( mod(ring, 2.0) == 0.0) tAngle = PI * 2.0 - tAngle;\n\ttAngle *= mod(ring, 2.0)*2.0 - 1.0;\n\tfloat si = sin(tAngle);\n\tfloat co = cos(tAngle);\n\tcolor = step(0., dot(vec2(-si,co),p)); \n\t// if ((angle > tAngle && angle < tAngle + PI) || angle < tAngle - PI)\n\t// \tcolor = vec4(1.0,1.0,1.0,1.0);\n\t#ifdef CONSTRAINED_TO_CIRCLE\n\tif (dist > .45 * iResolution.y / iResolution.x) color = vec4(1.0,1.0,1.0,1.0);\n\telse if (dist > .446 * iResolution.y / iResolution.x) color = vec4(0.5,0.5,0.5,1.0);\n\t#endif\n\treturn color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\t// assume 60fps\n\tfloat t = iTime;\n\tfloat c=0.;\n\t\n\t// mmalex's AA/blur code.\n\tvec2 aa=vec2( srand(fragCoord.xy), srand(fragCoord.yx) );\n\tt+=1.0/60.0/float(AA_SAMPS)*aa.x;\t\n\t\n\tfor (int i=0;i<(AA_SAMPS);i++) {\n\t\taa=rand(aa);\n\t\tc+=colorAtCoord(fragCoord.xy+aa, t*.05);\n\t\tt+=1.0/60.0/float(AA_SAMPS);\n\t}\t\n\tc=sqrt(c/float(AA_SAMPS));\n\tfragColor = vec4(c);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsfSz2","date":"1403820582","viewed":360,"name":"instants // conc. circles [fix]","username":"bigblueboo","description":"instants is back -- after crashing everyone's browser -- with excellent tweaks by mmalex and some further ones by me.  now cycles through 7 patterns.  hosted + interactive @ http://bigblueboo.com/glsl/instants.html","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles","blackandwhite","bw","bigblueboo","processing","mmalex"],"hasliked":0,"parentid":"","parentname":""}}