{"ver":"0.1","info":{"id":"McBSRD","date":"1706087994","viewed":81,"name":"binary tiling zoom v1","username":"sepia_sempervirens","description":"Simple infinite zoom out of (or into) the binary tiling.\nhttps://en.wikipedia.org/wiki/Binary_tiling","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","loop","binarytiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// time, in seconds, that it takes to repeat\n// change this to a negative number to zoom in instead of out\nconst float PERIOD = 1.6;\nconst float ORIGIN_X_POS = 0.333;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    // use fract() to make sure that we don't get unreasonably large values\n    // of exp2(cycleProgress)\n    float cycleProgress = fract(iTime / PERIOD);\n    vec2 tilingCoord = (uv - vec2(ORIGIN_X_POS, 0)) * exp2(cycleProgress);\n    \n    float layer = floor(log2(tilingCoord.y));\n    float tileWidth = exp2(layer);\n    \n    int tilePos = int(floor(tilingCoord.x / tileWidth));\n    vec3 col = vec3(tilePos % 2);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}