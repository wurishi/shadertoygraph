{"ver":"0.1","info":{"id":"Ms3yWs","date":"1520544834","viewed":114,"name":"CJ mystery hard edge - help!","username":"chrisjj","description":"Expected: no hard edge on arms, as ringed in green https://i.imgur.com/cGgsdxl.png\nObserved: a hard edge on one pair of arms, ringed in red. Why?","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["help"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RAY_STEPS 150\n\n#define detail .001\n#define t (iTime)\n#define tt (t/10.)\n\nfloat det=0.0;\n\n// 2D rotation\nmat2 rot(float a) {\n\treturn mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvec4 formula(vec4 p) {\n\tp.yz = -abs(p.yz);\n\tp.x = abs(p.x);\n\tp.xy *= rot(radians(-10.)); // pinch\n\tp.xz *= rot(radians(-10.)); // pinch - mystery hard edge alone front+back of arm\n\t// Transposing pinch moves the hard edge to the other arm pair\n\treturn p;\n}\n\n// Distance function\nfloat de(vec3 pos) {\n\tvec4 p = vec4(pos,1.);\n\tp=formula(p);\n\tfloat fr = length(max(p.xyz,.3259-.95))-1.0;\n\treturn fr/p.w/1.4;\n}\n\nvec3 origin;\n\n// Normal\nvec3 normal(vec3 p) {\n\tvec3 e = vec3(0.0,det*5.,0.0);\n\tfloat d1=de(p-e.yxx),d2=de(p+e.yxx);\n\tfloat d3=de(p-e.xyx),d4=de(p+e.xyx);\n\tfloat d5=de(p-e.xxy),d6=de(p+e.xxy);\n\treturn normalize(vec3(d1-d2,d3-d4,d5-d6));\n}\n\n// Raymarch\nvec3 raymarch(in vec3 from, in vec3 dir, in vec3 ldir)\n{\n\tvec3 p;\n\tfloat d=100.;\n\tfloat totdist=0.,todistlimit=50./*was 25*/;\n\tfor (int i=0; i<RAY_STEPS; i++) {\n\t\tif (d>det && totdist<todistlimit) {\n\t\t\tp=from+totdist*dir;\n\t\t\td=de(p);\n\t\t\tdet=detail*exp(.13*totdist);\n\t\t\ttotdist+=d;\n\t\t}\n\t}\n\tvec3 col = vec3(.8,.8,1); // material\n\tvec3 backg=vec3(0.,0.,0.);\n\tif (totdist>todistlimit) col=backg; // hit background\n\telse\n\t{\n\t\tp-=(det-d)*dir;\n\t\t// paint\n\t\tfloat pat = cos(p.y*12.) +cos(p.z*12.) >-.0?1.:0.\t\t\t\t\t;\n\t\tcol.rgb += pat;\n\t\t// Illumination\n\t\tldir = (ldir-p);\n\t\tvec3 lcol = vec3(1,1,0.7);\n\t\tvec3 norm=normal(p);\n\t\tfloat incid = max(0.0,dot(-norm, normalize(ldir)));\n\t\tcol *= .1\n\t\t\t\t+ lcol * pow(incid,6.)*.9;\n\t\t;\n\t}\n\treturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy*2.-1.;\n\n\tuv.y*=iResolution.y/iResolution.x;\n\tvec4 mouse=(iMouse.xyzw/iResolution.xyxy-.5)*3.;\n    mouse *= 0.;\n\n\tfloat fov=.6;\n\torigin=vec3(0,0,-6.);\n\tvec3 dir=normalize(vec3(uv*fov,1.));\n\tvec3 from=origin;\n\n\tfrom.xz*=rot(mouse.x);dir.xz*=rot(mouse.x);\n\tfrom.yz*=rot(mouse.y);dir.yz*=rot(mouse.y); // Turn object\n    float a = 1.*26.*tt*4.,a2=a*2.*0.-80.;\n\tfrom.xz*=rot(radians(a2));\tdir.xz*=rot(radians(a2));\n\tfrom.yz*=rot(radians(a));\tdir.yz*=rot(radians(a));\n\n    vec3 ldir = (vec3(15,15,-20)); // lamp pos\n\tldir.xz*=rot(mouse.x);\n\tldir.yz*=rot(mouse.y);\n\tldir.xz*=rot(radians(a2));\n\tldir.yz*=rot(radians(a));\n\tvec3 col=raymarch(from,dir,ldir);\n\tfragColor = vec4(col,1.);\n}\n","name":"Image","description":"","type":"image"}]}