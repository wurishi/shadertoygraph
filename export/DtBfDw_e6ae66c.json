{"ver":"0.1","info":{"id":"DtBfDw","date":"1694088514","viewed":39,"name":"Ripple Waves Interference","username":"Diztend","description":"A 2d wave interference simulation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave","demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nconst vec3 WAVE_COLOR = vec3(0, 0.7, 0.7);\nconst vec3 BASE_COLOR = vec3(0.2, 0.3, 0.4);\nconst vec2 origin1 = vec2(-0.5, 0);\nconst vec2 origin2 = vec2(0.5, 0);\nconst float WAVLEN1 = 1. / 32.;\nconst float WAVLEN2 = 1. / 32.;\nconst float SPEED1 = 1.;\nconst float SPEED2 = 1.;\nconst float AMP1 = 1.;\nconst float AMP2 = 1.;\nconst float DELAY1 = 0.;\nconst float DELAY2 = 0.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float t = iTime * 2. * PI;\n    vec2 uv = (fragCoord / iResolution.xy) * 2.0 - 1.0;\n    uv.x *= (iResolution.x / iResolution.y);\n    float d1 = length(uv - origin1);\n    float d2 = length(uv - origin2);\n    float d3 = length(uv - vec2(0, 0.5));\n    float wave1 = sin(d1 / WAVLEN1 - (t + DELAY1 * 2. * PI) * SPEED1);\n    float wave2 = sin(d2 / WAVLEN2 - (t + DELAY2 * 2. * PI) * SPEED2);\n    float superpose = AMP1 * wave1 + AMP2 * wave2;\n    fragColor = vec4(WAVE_COLOR * (superpose / 2. + 0.5) + BASE_COLOR * ((1. - superpose) / 2. + 0.5), 1.);\n}","name":"Image","description":"","type":"image"}]}