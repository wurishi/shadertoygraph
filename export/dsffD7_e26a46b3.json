{"ver":"0.1","info":{"id":"dsffD7","date":"1688803071","viewed":75,"name":"Stripes Transition","username":"duelas","description":"Saw this in Touhou Reiiden: https://youtu.be/Ctve1g91FVM?t=387\nIt is constructed of stripes.\nThe main image changes as the stripes go left and right.\n11/7/2023 - reworked the structure so it supports different ratio textures better","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["transition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Every other n lines, return either 0 or 1 (even or odd)\nfloat everyOther(float y, float n){\nreturn mod(floor((y -.5)/n),2.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Animation Time Constant, return 0 to 1\n    float anim = clamp((cos(iTime/2. + fragCoord.y / iResolution.y) + .5) * 1.7,0.,1.);\n    \n    // Smaller the blockier, bigger the smoother (1 to infinity)\n    float horizontalOffset = 10.;\n    \n    // Rows go left and right\n    float dir = everyOther(fragCoord.y,2.);\n    float minusplus = (1. - 2. * dir);\n    \n    // Grouping rows\n    float animX = floor(anim * horizontalOffset)/horizontalOffset;\n    \n    \n    float uvY = .5 + (fragCoord.y -.5 * iResolution.y ) / iResolution.y;\n    float TW0 = iChannelResolution[0].x / iChannelResolution[0].y * iResolution.y;\n    float TW1 = iChannelResolution[1].x / iChannelResolution[1].y * iResolution.y;\n    \n    // After some maths, found out every row should move this amount\n    float totalX = .5*(TW0+TW1);\n    float offsetX = totalX * animX; // Animation lerp\n    \n    float posX = fragCoord.x -.5 * iResolution.x + minusplus * offsetX;\n    \n    \n    // Check if the pixel is on the second texture or not\n    float chk = float(abs(posX) > TW0 * .5);\n    \n    // Looks complicate but actually just if elses in one argument\n    float uvX = (1.-chk)*(1.-(.5*((TW0*.5-posX)/(TW0*.5))))\n    + chk*(dir*(1.+(TW0*.5+posX)/TW1) + (1.-dir)*((posX-TW0*.5)/TW1));\n    \n    \n    vec2 uv = vec2(uvX,uvY);\n    \n    \n    // clean up some pixels with out of bounds uvs\n    if (uvX < 0. || uvX > 1.){\n    fragColor = vec4(0);\n    return;\n    }\n    \n    fragColor = vec4( (1.-chk)*texture(iChannel0,uv).xyz*(1.-animX) + chk*texture(iChannel1,uv).xyz*animX ,1);\n    \n    // This one shows the true nature of this shader\n    //fragColor = vec4( (1.-chk)*texture(iChannel0,uv).xyz + chk*texture(iChannel1,uv).xyz ,1);\n    \n    }\n","name":"Image","description":"","type":"image"}]}