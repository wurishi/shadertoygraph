{"ver":"0.1","info":{"id":"3dGBWm","date":"1607648382","viewed":41,"name":"test smiley advanced","username":"ltms","description":"asdasdas","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float remap(float low1, float high1, float low2, float high2, float value)\n{\n    return ((value-low1)/(high1-low1)) * (high2-low2) + low2;\n}\n\nfloat remap01(float low, float high, float value)\n{\n    return remap(low, high, 0., 1., value);\n}\n\n// normalizes uv to the box\n// rect.xy -> [0;0], rect.zw -> [1;1]\nvec2 within(vec2 uv, vec4 rect)\n{\n\treturn (uv - rect.xy)/(rect.zw - rect.xy);\n}\n\nvec4 drawEye(vec2 uv)\n{\n\tuv -= .5;\n    float d = length(uv);\n    \n    vec4 irisColor = vec4(.3, .5, 1., 1.);\n    // a szem hatterszinet kicsit befesti kekkel\n    vec4 eye = mix(vec4(1.), irisColor, smoothstep(.1, .7, d)*.3);\n    // szem feherjenek konturja, az aljan kis arnyekkal\n    eye.rgb *= 1. - smoothstep(.70, .78, d) * .3 * clamp(-uv.y-uv.x, 0., 1.);\n\t\n    // a tenyleges irisz\n    // a kulso fekete kontur\n\teye.rgb = mix(eye.rgb, vec3(0.), smoothstep(.46, .44, d));\n    // az iris szin kek-feher atmenete\n    irisColor.rgb *= 1. + smoothstep(.4, .06, d);\n\teye.rgb = mix(eye.rgb, irisColor.rgb, smoothstep(.40, .38, d));\n    \n    // szembogar\n    eye.rgb = mix(eye.rgb, vec3(0.), smoothstep(.22, .20, d));\n    \n    float highlight = smoothstep(.17, .11, length(uv-vec2(-.25, .19)));\n    highlight += smoothstep(.11, .07, length(uv+vec2(-.12, .14)));\n    eye.rgb = mix(eye.rgb, vec3(1.), highlight);\n    \n\t// a szem kulso hataranak fv-e\n    eye.a = smoothstep(.78, .76, d);\n    return eye;\n}\n\nvec4 drawMouth(vec2 uv)\n{\n\tuv -= .5;\n    vec4 color = vec4(.5, .18, .04, 1.);\n    \n    // make mouth curve upward\n    uv.y *= 1.4;\n    uv.y -= uv.x*uv.x *2.1;\n    float d = length(uv);\n    \n    // teeth\n    float teethdist = length(uv-vec2(.0,.6));\n    // fogak szine az arnyekkal beszorozva\n    vec3 teethcolor = vec3(1.) * smoothstep(.6, .35, d);\n    color.rgb = mix(color.rgb, teethcolor, smoothstep(.4, .37, teethdist));\n    \n    // tongue\n    float tonguedist = length(uv+vec2(.0, .5));\n    color.rgb = mix(color.rgb, vec3(1.,.5,.5), smoothstep(.5,.2,tonguedist));\n    \n    color.a = smoothstep(.5, .48, d);\n    return color;\n}\n\nvec4 drawHead(vec2 uv)\n{\n    vec4 headColor = vec4(.88, .68, .1, 1.);\n    float d = length(uv);\n    // alfa alapjan keveri ossze a hatterszint a fej szineivel a drawSmiley fuggvenyben\n    headColor.a = smoothstep(.5,.49, d);\n    \n    // linearisan novekvo, (.35;0) es (.5;1) x,y metszespontokkal\n    float edgeShade = remap01(.35, .5, d);\n    // .35 es .5 kozott linearisan novekvo, folotte/alatta 0/1\n    edgeShade = clamp(edgeShade, 0., 1.);\n    // parabola fuggvennye alakitjuk, hogy ne legyen eros hatara az arnyeknak\n    edgeShade *= edgeShade;\n    // inverzet vesszuk es csokkentjuk a meredekseget\n    headColor.rgb *= 1. - edgeShade*.5;\n    \n    // outline\n    vec3 outlineColor = vec3(.6, .3, .1);\n    // outline function\n    float outlinefv = smoothstep(.48, .49, d);\n    headColor.rgb = mix(headColor.rgb, outlineColor, outlinefv);\n    \n    // vilagos becsillanas a fejen\n    float highlightfv = smoothstep(.41, .405, d);\n    highlightfv *= remap(0.41, -.1 , .75, 0., uv.y);\n    highlightfv = clamp(highlightfv, 0., 1.);\n    vec3 highlightcolor = vec3(1.);\n    headColor.rgb = mix(headColor.rgb, highlightcolor, highlightfv * .75);\n    \n    // cheeks\n    d = length(uv - vec2(.23, -.22));\n    // megszorozzuk, hogy csokkentsuk az erejet\n    float cheekfv = smoothstep(.2, .01, d) * .4;\n    // legyen egy gyenge konturja a foltnak\n    cheekfv *= smoothstep(.17, .16, d);\n    vec3 cheekColor = vec3(1., .1, .1);\n    headColor.rgb = mix(headColor.rgb, cheekColor, cheekfv);\n    \n    return headColor;\n}\n\nvec4 drawSmiley(vec2 uv)\n{\n    vec4 bgcolor = vec4(0.);\n    \n    // a fej tukrozese\n    uv.x = abs(uv.x);\n    vec4 head = drawHead(uv);\n    vec4 eye = drawEye(within(uv, vec4(.08,-.01, .3,.21)));\n    vec4 mouth = drawMouth(within(uv, vec4(-.3, -.4, .3, -.1)));\n    \n    bgcolor = mix(bgcolor, head, head.a);\n    bgcolor = mix(bgcolor, eye, eye.a);\n    bgcolor = mix(bgcolor, mouth, mouth.a);\n    return bgcolor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    // x: [-0.89 ; 0.89], y: [-0.5 ; 0.5]\n    vec2 uv = (fragCoord.xy - 0.5*iResolution.xy ) / iResolution.y;\n\n    // Output to screen\n    fragColor = drawSmiley(uv);\n}","name":"Image","description":"","type":"image"}]}