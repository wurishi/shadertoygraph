{"ver":"0.1","info":{"id":"msdczj","date":"1695260015","viewed":50,"name":"Burning Ship Fractal + Moving","username":"ArachaicDev","description":"Burning Ship","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["burningship"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 cpow(vec2 c, float exponent) {\n    if (abs(c.x) < 1e-5 && abs(c.y) < 1e-5) {\n        return vec2(0,0);\n    }\n    else {\n        float cAbs = length(c);\n        vec2  cLog = vec2(log(cAbs), atan(c.y,c.x));\n        vec2  cMul = exponent*cLog;\n        float expReal = exp(cMul.x);\n        return vec2(expReal*cos(cMul.y), expReal*sin(cMul.y));\n        \n    }\n    \n}\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 dimensions = vec2 (2.2,2.2);\n    int iterations = 200;\n    float colors = 150.0;\n    float power = 2.0;\n    \n    vec2 coord = fragCoord/iResolution.xy;\n    coord = coord - vec2(0.5,0.5);\n    coord = vec2 (coord.x * (iResolution.x / iResolution.y),coord.y);\n    coord = coord * dimensions;\n    coord = coord + (iMouse.xy/iResolution.xy - vec2(0.5,0.5));\n    \n    vec2 z = vec2(0.0,0.0);\n    \n    for(int iteration = 0; iteration < iterations; iteration++) {\n        z = cpow(vec2(abs(z.x),abs(z.y)),power);\n        z = z + coord;\n        \n        if (abs(z.x) > 2.0) {\n            vec3 color = vec3(float(iteration)/colors,1.0,1.0);\n            color = hsv2rgb(color);\n            fragColor = vec4(color,1.0);\n            return;\n            \n        }\n        \n    }\n    \n    fragColor = vec4 (0.0,0.0,0.0,0.0);\n    \n}","name":"Image","description":"","type":"image"}]}