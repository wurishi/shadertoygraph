{"ver":"0.1","info":{"id":"Xd3SzB","date":"1459884331","viewed":419,"name":"Procedural Color Map","username":"gigatron","description":"Thanx to 4rknova ... use mouse to move specular circle","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["texture","color","grey","tags"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// by Nikos Papadopoulos, 4rknova / 2013\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define ENABLE_LIGHTING\n#define ENABLE_SPECULAR\n\n// displacement x,y \n\n#define OFFSET_X 2   \n#define OFFSET_Y 2\n#define DEPTH\t 7.5\n\nvec3 sample4(const int x, const int y, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy;\n\treturn texture(iChannel0, uv).xyz;\n}\n\nfloat luminance(vec3 c)\n{\n\treturn dot(c, vec3(.2126, .7152, .0722));\n}\n\nvec3 normal(in vec2 fragCoord)\n{\n\tfloat R = abs(luminance(sample4( OFFSET_X,0, fragCoord)));\n\tfloat L = abs(luminance(sample4(-OFFSET_X,0, fragCoord)));\n\tfloat D = abs(luminance(sample4(0, OFFSET_Y, fragCoord)));\n\tfloat U = abs(luminance(sample4(0,-OFFSET_Y, fragCoord)));\n\t\t\t\t \n\tfloat X = (L-R) * .1;\n\tfloat Y = (U-D) * .1;\n\n\treturn normalize(vec3(X, Y, 1. / DEPTH));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec3 n = normal(fragCoord);\n\n#ifdef ENABLE_LIGHTING\n\tvec3 lp = vec3(iMouse.xy / iResolution.xy * iChannelResolution[0].xy, 2000.);\n\tvec3 sp = vec3(fragCoord.xy / iResolution.xy * iChannelResolution[0].xy, 0.);\n\t\n\tvec3 c = sample4(0, 0, fragCoord) * dot(n, normalize(lp - sp));\n    vec3 c1 = sample4(0, 0, fragCoord) * dot(n, normalize(lp - sp));\n    \n\n#ifdef ENABLE_SPECULAR\n    float e = 64.;\n    vec3 ep = vec3(iChannelResolution[0].x * .5, (iChannelResolution[0].y) * .5, 2000.);\n\tc += pow(clamp(dot(normalize(reflect(lp - sp, n)), \n\t\t\t\t\t   normalize(sp - ep)), 0.0, 1.0), e);\n    \n       ep += vec3(iChannelResolution[0].x * .5, (iChannelResolution[0].y) * .5, 400.);\n\tc1 += pow(clamp(dot(normalize(reflect(lp - sp, n)), \n\t\t\t\t\t   normalize(sp - ep)), 0.0, 0.99), e);\n    \n    \n#endif /* ENABLE_SPECULAR */\n\t\n#else\n\tvec3 c = n;\n\t\n#endif /* ENABLE_LIGHTING */\n    vec4 tcf=texture(iChannel0,fragCoord);\n\t\n\tfragColor = vec4(c-c1, 1);// substract c1 colors \n \n     fragColor += vec4(tcf-vec4(0.1,0.6,0.6,1.0));\n    // so remove of R 0.1; G 0.6;  B 0.6  \n}","name":"Image","description":"","type":"image"}]}