{"ver":"0.1","info":{"id":"M3fyzj","date":"1726411361","viewed":37,"name":"Endless Cube","username":"TwoKewl","description":"Used raymarching and the 'fract' function to make it seem infinite.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float floorSDF(vec3 pos) {\n    float floor_y = -0.5;\n    return length(vec3(0, pos.y - floor_y, 0));\n}\n\nfloat ceilSDF(vec3 pos) {\n    float ceil_y = 0.5;\n    return length(vec3(0, pos.y - ceil_y, 0));\n}\n\nfloat cubeSDF(vec3 pos) {\n    return length(max(abs(pos) - vec3(0.05), 0.0));\n}\n\nvec3 rayDirection(vec2 fragCoord, vec2 resolution) {\n    vec2 uv = (fragCoord - resolution * 0.5) / resolution.y;\n    return normalize(vec3(uv, 1));\n}\n\nfloat marchRay(vec3 ro, vec3 rd) {\n    float totalDist = 0.0;\n    float maxDist = 25.0;\n    int maxSteps = 10000;\n    \n    for (int i = 0; i < maxSteps; i++) {\n        vec3 currentPos = ro + totalDist * rd;\n        float dist = cubeSDF(mod(currentPos, 0.5) - 0.25);\n        dist = min(dist, floorSDF(currentPos));\n        dist = min(dist, ceilSDF(currentPos));\n        \n        if (dist < 0.001) return totalDist;\n        totalDist += dist;\n        \n        if (totalDist >= maxDist) break;\n    }\n    \n    return totalDist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec3 ro = vec3(0, 0, iDate.w);\n    vec3 rd = rayDirection(fragCoord, res);\n    \n    float dist = marchRay(ro, rd);\n    vec3 pos = (ro + dist * rd);\n    float viewDist = 30.0;\n    \n    float blue = sin(2.0 * 3.141592 * (0.5 - (dist * 0.5) / viewDist));\n    \n    fragColor = vec4(.2 * blue, 0, blue, 1);\n}","name":"Image","description":"","type":"image"}]}