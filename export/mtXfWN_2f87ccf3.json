{"ver":"0.1","info":{"id":"mtXfWN","date":"1693527700","viewed":93,"name":"magnetic pendulum fractal","username":"bward194","description":"VERY experimental thing \nthe thing i;m making for reference: https://beltoforion.de/en/magnetic_pendulum/","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["fractal","experimental","magent"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = zoom*(2.*fragCoord-iResolution.xy)/iResolution.x;\n vec2 uv2 = fragCoord.xy/iResolution.xy;\nfloat hue=0.;\nvec2 velo=vec2(0.);\nvec2 pos=uv;\n    vec3 col = vec3(0.);\n//for (int i=1; i<500; i++){\n//velo+=pendtest(pos,velo)*kill;\n//pos+=(velo*kill);\n//velo-=friction*velo;\n\n//}\n//vec2 subb= pos;\nfloat c=100000000000000000000000000.;\n\nfor(int i=0; i<magnets; i++){\n\n\n    float a = length(texture(iChannel1,uv2).xy - magpos[i]);\n    if (a < c) {\n      c = a;\n      col=hsv2rgb(vec3(float(i)/float(magnets+1),1.,.5));\n    }\ncol+=hsv2rgb(vec3(float(i)/float(magnets+1),.5,distance(uv,magpos[i])>.2?0.0:1.0));}\ncol+=vec3(distance(uv,texture(iChannel0,uv).xy)>.1?0.0:1.0);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define magnets 3\n#define friction 0.003333\n#define zoom 4.\n#define d .3333\n#define kill 0.001\nvec2 magpos[3]=vec2[3](vec2(-.866,.5),vec2(.866,.5),vec2(0,-1.)); //(vec2(-.5,-.5),vec2(.5,-.5),vec2(.5,.5),vec2(-.5,.5));\nvec2 pendtest(vec2 pos, vec2 velo){\nvec2 final=vec2(0);\n\nfor (int i=0; i<magnets; i++){ \n\nfloat dis=pow(pow(length(magpos[i]-pos),2.)+(d*d),1.5);\nfinal+=((magpos[i]-pos)/dis);\n\n}\n\nreturn final;\n}\nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n vec2 uv = fragCoord.xy/iResolution.xy;\nvec2 coord=texture(iChannel0,uv).xy;\nvec2 velo=texture(iChannel0,uv).zw;\nvec2 velold=vec2(0.);\nif (iMouse.w>0.){\ncoord=zoom*(2.*iMouse.xy-iResolution.xy)/iResolution.x;\nvelo=vec2(0.,0.);}\nelse\n{\nvelo+=(pendtest(coord,velo))*kill;\ncoord+=(velo);\nvelo-=friction*velo;\n\n\n}\n    fragColor = vec4(coord,velo);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = fragCoord.xy/iResolution.xy;\nvec2 coord=texture(iChannel0,uv).xy;\nvec2 velo=texture(iChannel0,uv).zw;\nvec2 velold=vec2(0.);\nif (iFrame==0){\ncoord=zoom*(2.*fragCoord.xy-iResolution.xy)/iResolution.x;\nvelo=vec2(0.,0.);}\nelse\n{\nfor (int i=0; i<2; i++){\n\n\nvelo+=(pendtest(coord,velo))*kill;\ncoord+=(velo);\nvelo-=friction*velo;\n\n}\n\n}\nfragColor = vec4(coord,velo);\n}","name":"Buffer B","description":"","type":"buffer"}]}