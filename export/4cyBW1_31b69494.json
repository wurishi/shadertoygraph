{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Programmer: Sarah Akhtar\n// Date: December 11th, 2024\n// Mandelbrot Animation\n\n\n// Squares a given complex number\nvec2 cSquare( in vec2 z ) \n{\n    return vec2(\n            z.x * z.x - z.y * z.y,\n            2.0 * z.x * z.y\n        );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 c = fragCoord/iResolution.x;\n    \n    // Scale [lower is more zoomed in]\n    float scale = 4.0;\n    \n    c *= scale;\n    \n    // Move set into view\n    c += vec2(-2.1,-1.15);\n    \n    // Maximum number of iterations\n    int maxIterations = 256;\n\n\t// Starting point\n\tvec2 Z = vec2(0,0);\n    \n    for(int i = 0; i < maxIterations; i++)\n    {\n        vec2 oldZ = Z;\n        Z = cSquare(cSquare(oldZ)) + (c/1.5) + (oldZ * cos(iTime/5.0)*1.5);\n        \n        if(dot(Z, Z) > 20.0) {\n            float sn = float(i) - log2(log2(dot(Z,Z))) + 8.0;\n        \n            // Normalize i for brightness\n            float brightness = (float(i) - log2(log2(dot(Z,Z))) + 4.0) / float(maxIterations);\n            \n            // multipliers for ( R   G   B ) values\n            vec3 weights = vec3(10.0 + sin(iTime) * 8.0,10.0 + cos(iTime) * 2.0,2.0);\n            fragColor = vec4(vec3(float(sn)/float(maxIterations)) * weights, 1.0);\n            \n            break;\n        } else {\n            fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4cyBW1","date":"1733980501","viewed":43,"name":"Mandelbrot Sequence","username":"sarahak1786","description":"This ShaderToy program generates an animated Mandelbrot-like fractal using complex number manipulation. It iteratively transforms each pixel's coordinates with a unique formula, incorporating a time-dependent oscillation to create dynamic movement.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math","mandelbrot","womeninstem"],"hasliked":0,"parentid":"","parentname":""}}