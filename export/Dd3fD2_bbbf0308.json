{"ver":"0.1","info":{"id":"Dd3fD2","date":"1697765812","viewed":32,"name":"Colour Puzzle Shader - CIS 5660","username":"sagescherrytree","description":"CIS 5660 lab 4 part 1.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["colour"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Green screen function from @iq \n\n// :D :D :D\nvec4 compositeGreenScreenTexture(vec2 uv, vec4 background)\n{\n\n     vec4 tex = texture(iChannel0, uv);\n        \n     float maxrb = max( tex.r, tex.b );\n     float k = clamp( (tex.g-maxrb)*5.0, 0.0, 1.0 );\n\n     float ll = length( tex );\n     tex.g = min( tex.g, maxrb*0.8 );\n     tex = ll*normalize(tex);\n\n     return mix(tex, background, k);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    mat2 mat = mat2 (cos(-45.0), -sin(-45.0),\n                     sin(-45.0), cos(-45.0)\n    );\n    \n    uv *= mat;\n    vec2 uv1 = uv + iTime/20.f;\n    vec2 uv2 = uv - iTime/20.f;\n\n    // Time varying pixel color\n    float r = cos(uv.x * 20.f);\n    float g = cos(uv2.x * 20.f);\n    float b = -cos(uv1.x * 20.f);\n    vec4 col = vec4(r, g, b, 1.0);\n    \n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}