{"ver":"0.1","info":{"id":"4lsfRs","date":"1513435627","viewed":88,"name":"CJ Ink - symmetry test ","username":"chrisjj","description":"Expected: left-right and up-down symmetry\nObserved: asymmetry https://i.imgur.com/UBaBKww.png\n\nTo colourise asymmetry, change Image macro.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["tag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   #define COLOURISE_ASSYMETRY false\n\n\tfragColor = texture(iChannel0, fragCoord.xy/iResolution.xy);\n\n    if(COLOURISE_ASSYMETRY)\n    {\n        fragColor.r = texture(iChannel0, fragCoord.xy/iResolution.xy * vec2(-1.,1.) + vec2(1.,0.)).g;\n        fragColor.b = texture(iChannel0, fragCoord.xy/iResolution.xy * vec2(1.,-1.) + vec2(0.,1.)).g;\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 getPixel(in vec2 uv)\n{\treturn texture(iChannel0, uv+0.5);\n}\n\nvec4 getPixelSurround(in vec2 uv)\n{ \n    vec2 d=1.0/iResolution.xy;\n    return (\n        getPixel(uv+vec2(-d.x,-d.y))+\n        getPixel(uv+vec2(-d.x,+d.y))+\n        getPixel(uv+vec2(+d.x,-d.y))+\n        getPixel(uv+vec2(+d.x,+d.y))\n    )/4.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xyp = fragCoord.xy-iResolution.xy/2.; // mid-integer pixel co-ord, centered.\n    vec2 xys = xyp/iResolution.xy*0.99; // And scaled, stretched\n    vec4 c;\n\n    // Diffuse and react\n    c = getPixel( xys );      // Zoom in    \n    c -= getPixelSurround( xys )/4.; // Darken interior more than boundaries\n    c *= 1.33;                    // Brighten\n\n    // Add central dot as seed\n    if( max(abs(xyp.x),abs(xyp.y))<9.) c=vec4(1.,1.,1.,0.); // Add central  dot\n\n    fragColor = clamp(c,0.,1.);\n\n    // After some frames, freeze\n  \tif(iFrame > 400) fragColor = texture(iChannel0, fragCoord.xy/iResolution.xy);\n\n}\n","name":"Buf A","description":"","type":"buffer"}]}