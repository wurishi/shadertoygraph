{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define PI\t3.14159265359\n#define PI2\tPI * 2.0\n    \nbool Flag = false;\nint material;\n\n\nmat2 rotate(float a)\n{\n\treturn mat2(cos(a), sin(a), -sin(a), cos(a));\t\n}\n\nvec3 hsv(float h, float s, float v)\n{\n  return mix( vec3( 1.0 ), clamp( ( abs( fract(\n    h + vec3( 3.0, 2.0, 1.0 ) / 3.0 ) * 6.0 - 3.0 ) - 1.0 ), 0.0, 1.0 ), s ) * v;\n}\n    \nfloat udBox( vec3 p, vec3 b )\n{\n  return length(max(abs(p)-b,0.0));\n}    \n    \nfloat map1(in vec3 p, in float a)\n{\n    p.xy *= rotate(-a);\n    p.xy *= rotate(-iTime * 0.5);\n    p.y += 0.15;\n    return  0.5 * udBox(p, vec3(0.2, 0.15, 0.2));    \n}    \n    \nfloat map2(in vec3 p)\n{\n    p.z = abs(p.z) - 0.25;\n    return max(p.y, length(p.xz) - 0.05);\n}    \n    \nfloat map(in vec3 p)\n{\n    p.xy *= rotate(iTime*0.5);\n    // https://www.shadertoy.com/view/Mlf3Wj\n    float sep = 6.0;\n    float a = PI / sep - atan(p.x, p.y);\n    float n = PI2 / sep;\n    a = floor(a / n) * n;\n    p.xy *= rotate(a);   \n    p.y -= 1.0;\n    float de1 = map1(p, a);\n    float de2 = map2(p);    \n    if (Flag)\n    {\n        if (de1 < de2)\n        {\n             material = 1;\n        } else {\n            material = 2;\n        }\n    }        \n    return min(de1, de2);    \n}\n\nvec3 calcNormal(in vec3 p)\n{\n\tconst vec2 e = vec2(0.0001, 0.0);\n\treturn normalize(vec3(\n\t\tmap(p + e.xyy) - map(p - e.xyy),\n\t\tmap(p + e.yxy) - map(p - e.yxy),\n\t\tmap(p + e.yyx) - map(p - e.yyx)));\n}\n\nfloat march(in vec3 ro, in vec3 rd)\n{\n\tconst float maxd = 10.0;\n\tconst float precis = 0.001;\n    float h = precis * 2.0;\n    float t = 0.0;\n\tfloat res = -1.0;\n    for(int i = 0; i < 64; i++)\n    {\n        if(h < precis || t > maxd) break;\n\t    h = map(ro + rd * t);\n        t += h;\n    }\n    if(t < maxd) res = t;\n    return res;\n}\n\nvec3 doColor(in vec3 p)\n{\n    Flag = true; map(p); Flag = false;\n    if (material == 1) \n    {\n        return hsv(0.05, 0.6, 1.0 );\n    }\n    return hsv(0.5, 0.3, 0.7 );\n}\n\n\nvec3 transform(in vec3 p)\n{\n    p.zx *= rotate(iTime * 0.1 + 0.2);\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n\tvec3 col = vec3(0.3 + p.y * 0.15);\n    vec3 rd = normalize(vec3(p, -1.8));\n\tvec3 ro = vec3(0.0, 0.0, 3.0);\n    vec3 li = normalize(vec3(0.5, 0.8, 3.0));\n    ro = transform(ro);\n\trd = transform(rd);\n\tli = transform(li);\n    float t = march(ro, rd);\n    if(t > -0.001)\n    {\n        vec3 pos = ro + t * rd;\n        vec3 n = calcNormal(pos);\n\t\tfloat dif = clamp((dot(n, li) + 0.5) * 0.7, 0.3, 1.0);\n        col = doColor(pos) * dif;\n\t}\n   \tfragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MtfGDj","date":"1425140516","viewed":179,"name":"Ferris wheel","username":"gaz","description":"https://www.shadertoy.com/view/Mlf3Wj","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","de","fold"],"hasliked":0,"parentid":"","parentname":""}}