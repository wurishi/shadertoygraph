{"ver":"0.1","info":{"id":"lXSczR","date":"1726842060","viewed":21,"name":"Test Concentric circles","username":"MaxPie","description":"Color test, thank you kishimisu","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t )\n{\n    vec3 a = vec3(0.500, 0.608, 0.500);\n    vec3 b = vec3(0.500, 0.358, -0.422);\n    vec3 c = vec3(1.000, 1.000, 0.838);\n    vec3 d = vec3(-1.082, 0.333, -0.142);\n    \n    \n    return a + b*cos( 6.283185*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //sistema le uv in modo che vadano da -1 a 1 e lo 0, 0 sia il pixel centrale\n    vec2 uv = vec2((fragCoord * 2.0 - iResolution.xy) / iResolution.y);\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 3.0; i++) {\n   \n    //dato che per qualche motivo il fract mi riporta le uv da 0 a 1\n    //moltiplica 2 e sottrai .5 per riportarle a -1 1\n    uv = fract(uv*1.5)-0.5;\n    \n    //crea un cerchio\n    float d = length(uv) * length(uv0);\n    \n    vec3 col = palette(length(uv0) + iTime*.4);\n    \n    //crea cerchi concentrici\n    d = sin(d*8.0 + iTime)/8.0;\n    d = abs(d);\n    d= pow(0.01 / d, 1.2);\n    \n    finalColor += col * d;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}