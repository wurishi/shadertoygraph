{"ver":"0.1","info":{"id":"cdlGzM","date":"1695955356","viewed":43,"name":"ugly buffer wowow","username":"chenxianming","description":"ugly buffer wowow\nfree for texture [doge]","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 m = mat2( .1, .1, -.6, .5 );\nmat2 rot( float d ){\n    float s = sin(d), c = cos(d);\n    return mat2(c, s, -s, c);\n}\n\nfloat noise( in vec2 f ){\n    f *= m;\n    return ( cos( f.x + .123 ) * sin( f.y + .6543 ) + .123 );\n}\n\nfloat f( in vec2 x, in float H )\n{    \n    float t = 0.;\n    for( int i=0; i<int( fract(iTime * .2) * 5. ) + 5; i++ )\n    {\n        float f = pow( 2., float(i) );\n        x *= rot( float( i ) );\n        float a = pow( f, -H );\n        a = smoothstep( 0.01, .05, a );\n        \n        t += a*noise(f*x * rot( float(i) ));\n\n    }\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    float p = f( vec2( f( uv - .3, .9 ) ), .1 );\n\n    uv += p;\n\n    // Time varying pixel color\n    vec3 col = sin( abs( vec3( uv.xy, p ) ) - .5 );\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}