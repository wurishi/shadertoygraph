{"ver":"0.1","info":{"id":"4cXczn","date":"1720704733","viewed":65,"name":"wave in galaxy(hw8)","username":"zemi","description":"a little trial ,adapt from https://www.shadertoy.com/view/Xsl3zX","likes":0,"published":1,"flags":16,"usePreview":0,"tags":["noise","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//adapt from https://www.shadertoy.com/view/Xsl3zX\n\nconst float RETICULATION = 30.;  // 尘埃纹理的强度\nconst float NB_ARMS = 5.;       // 银河系的旋臂数量\n//const float ARM = 3.;         // 旋臂内外对比度\nconst float COMPR = .1;         // 旋臂的压缩程度\nconst float SPEED = .5;\nconst float GALAXY_R = 1./2.;\nconst float BULB_R = 1./4.;\nconst vec3 GALAXY_COL = vec3(.9,.9,1.); //(1.,.8,.5);\nconst vec3 BULB_COL   = vec3(1.,.8,.8);\nconst vec3 SKY_COL    = .5*vec3(.1,.3,.5);\n\n#define t iTime\n\n// --- base noise\nfloat tex(vec2 uv) \n{\n    float n = texture(iChannel0,uv, 0.).r;\n\n#define MODE 3  // 噪声纹理的种类\n#if MODE==0         // 无符号\n    #define A 2.\n    return 4.*n*n*n-2;\n#elif MODE==1       // 有符号\n    #define A 3.\n    return 15.*n*n-12.;\n#elif MODE==2       // 球状\n    #define A 3.\n    return abs(20.*n-1.)-11;\n#elif MODE==3       // 线状\n    #define A 1.5\n    return 0.-abs(300.*n-1.);\n#endif\n}\n\n// --- perlin turbulent noise + rotation\nfloat noise(vec2 uv)\n{\n    float v=0.;\n    float a=-SPEED*t, co=cos(a), si=sin(a); \n    mat2 M = mat2(co,-si,si,co);\n    \n    const int L = 30;\n    float s=2.;\n    for (int i=0; i<L; i++)\n    {\n        uv = M*uv;\n        float b = tex(uv*s);\n        v += 1./s* pow(b,RETICULATION); \n        s *= 1.5;\n    }\n\n    return v/2.;\n}\n\nbool keyToggle(int ascii) \n{\n    return (texture(iChannel2,vec2((.5+float(ascii))/256.,0.75)).x > 0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.y-vec2(.8,.5);\n    vec3 col;\n\n    // spiral stretching with distance\n    float rho = length(uv); // 极坐标\n    float ang = atan(uv.y,uv.x);\n    float shear = 1.*log(rho); \n    float c = cos(shear), s=sin(shear);\n    mat2 R = mat2(c,-s,s,c);\n\n    // galaxy profile\n    float r; // 盘\n    r = rho/GALAXY_R; \n    float dens = exp(-0.09*r*r-r*1.3);\n    r = rho/BULB_R;\t  \n    float bulb = exp(-r*r);\n    float phase = NB_ARMS*(ang-shear);\n    // arms = spirals compression\n    ang = ang-COMPR*tan(phase) + SPEED * t;  \n    uv = rho*vec2(sin(ang), tan(ang));\n    \n    float spires = 1.+NB_ARMS*COMPR*sin(phase);\n    \n    dens *= .7*spires;    \n\n    // gaz texture\n    float gaz = noise(.009*1.2*R*uv);\n    float gaz_trsp = pow(abs(1.-gaz*dens),2.);\n\n    // stars\n    float ratio = .8*iResolution.y/iChannelResolution[0].y;\n    float stars1 = texture(iChannel1,ratio*uv+.05, 0.).r, \n          stars2 = texture(iChannel0,ratio*uv+.5, 0.).r,\n          stars = pow(abs(1.-(1.-stars1)*(1.-stars2)),5.);\n\n    // keybord controls (numbers)\n    if (keyToggle(49)) gaz_trsp = 1./1.7;\n    if (keyToggle(50)) stars = 0.;\n    if (keyToggle(51)) bulb = 0.;\n    if (keyToggle(52)) dens = .3*spires;\n\n    // mix all    \n    col = mix(SKY_COL,\n              gaz_trsp*(1.5*GALAXY_COL) + 01.2*stars, \n              dens);\n    col = mix(col, 1.2*BULB_COL, bulb);\n\n    fragColor = vec4(col,1.);\n}\n","name":"Image","description":"","type":"image"}]}