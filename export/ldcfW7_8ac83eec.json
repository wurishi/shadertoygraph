{"ver":"0.1","info":{"id":"ldcfW7","date":"1525394990","viewed":203,"name":"Line detector 1","username":"JackAssMelchiah","description":"Line detection using combination of Gaussian Blur, LoG, Sobel and tresholding.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["sobel","grayscale","gaussianblur","log","tresholding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*Tresholding*/\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    \n    vec3 col =texture(iChannel0,uv).xyz;\n    \n    vec3 X = texture(iChannel0, uv + col.xy ).rgb;\n    vec3 Y = texture(iChannel0, uv - col.xy ).rgb;\n    \n    if(col.z> 0.03 && col.z> X.z && col.z > Y.z){\n    \tcol = vec3(1.f);\n    }\n    else{\n    \tcol = vec3(0.f);\n    }\n    \n    fragColor = vec4(col, 1.f);\n        \n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*Gaussian Blur*/\n\nvec3 convolution(sampler2D tex,vec2 uv, float[9] ffilter);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord );\n\n\nvec3 convolution(sampler2D tex,vec2 uv, float[9] ffilter){\n    \n    vec2 moveBy = vec2(1,1)/iChannelResolution[0].xy;\n\t    \n    vec4 col = vec4(0.f);\n    \n    col += texture(tex, vec2(uv.x-moveBy.x,uv.y-moveBy.y))* ffilter[0];\n    col += texture(tex, vec2(uv.x-moveBy.x,uv.y))* ffilter[1];\n    col += texture(tex, vec2(uv.x-moveBy.x,uv.y+moveBy.y))* ffilter[2];\n    col += texture(tex, vec2(uv.x,uv.y-moveBy.y))* ffilter[3];\n    col += texture(tex, vec2(uv.x,uv.y))* ffilter[4];\n    col += texture(tex, vec2(uv.x,uv.y+moveBy.y))* ffilter[5];\n    col += texture(tex, vec2(uv.x+moveBy.x,uv.y-moveBy.y))* ffilter[6];\n    col += texture(tex, vec2(uv.x+moveBy.x,uv.y))* ffilter[7];\n    col += texture(tex, vec2(uv.x+moveBy.x,uv.y+moveBy.y))* ffilter[8];\n    \n \n    return col.xyz;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float[9] blur= float[](\n\t\t\t\t0.095332, 0.118095, 0.095332,\n                0.118095, 0.146293, 0.118095,\n                0.095332, 0.118095, 0.095332\n       \t\t\t);\n    \n    vec3 col =convolution(iChannel0,uv,blur);\n    fragColor = vec4(col,1.f);\n        \n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"/*Grayscale and GoL*/\nvec3 convolution(sampler2D tex,vec2 uv, float[9] ffilter);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord );\n\nvec3 convolution(sampler2D tex,vec2 uv, float[9] ffilter){\n    \n    vec2 moveBy = vec2(1,1)/iChannelResolution[0].xy;\n\t    \n    vec3 col = vec3(0.f);\n    \n    col += vec3(dot(vec3(0.299,0.587,0.114),(texture(tex, vec2(uv.x-moveBy.x,uv.y-moveBy.y))* ffilter[0]).xyz));\n    col += vec3(dot(vec3(0.299,0.587,0.114),(texture(tex, vec2(uv.x-moveBy.x,uv.y))* ffilter[1]).xyz));\n    col += vec3(dot(vec3(0.299,0.587,0.114),(texture(tex, vec2(uv.x-moveBy.x,uv.y+moveBy.y))* ffilter[2]).xyz));\n    col += vec3(dot(vec3(0.299,0.587,0.114),(texture(tex, vec2(uv.x,uv.y-moveBy.y))* ffilter[3]).xyz));\n    col += vec3(dot(vec3(0.299,0.587,0.114),(texture(tex, vec2(uv.x,uv.y))* ffilter[4]).xyz));\n    col += vec3(dot(vec3(0.299,0.587,0.114),(texture(tex, vec2(uv.x,uv.y+moveBy.y))* ffilter[5]).xyz));\n    col += vec3(dot(vec3(0.299,0.587,0.114),(texture(tex, vec2(uv.x+moveBy.x,uv.y-moveBy.y))* ffilter[6]).xyz));\n    col += vec3(dot(vec3(0.299,0.587,0.114),(texture(tex, vec2(uv.x+moveBy.x,uv.y))* ffilter[7]).xyz));\n    col += vec3(dot(vec3(0.299,0.587,0.114),(texture(tex, vec2(uv.x+moveBy.x,uv.y+moveBy.y))* ffilter[8]).xyz));\n    \n \n    return col.xyz;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float[9] blur= float[](\n\t\t\t\t1.f, 1.f, 1.f,\n                1.f, -8.f, 1.f,\n                1.f, 1.f, 1.f\n       \t\t\t);\n    \n    vec3 col =convolution(iChannel0,uv,blur);\n    fragColor = vec4(col,1.f);\n        \n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"/*Sobel*/\nvec3 convolution(sampler2D tex,vec2 uv, float[9] ffilter);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord );\n\nvec3 convolution(sampler2D tex,vec2 uv, float[9] ffilter){\n    \n    vec2 moveBy = vec2(1,1)/iChannelResolution[0].xy;\n\t    \n    vec4 col = vec4(0.f);\n    \n    col += texture(tex, vec2(uv.x-moveBy.x,uv.y-moveBy.y))* ffilter[0];\n    col += texture(tex, vec2(uv.x-moveBy.x,uv.y))* ffilter[1];\n    col += texture(tex, vec2(uv.x-moveBy.x,uv.y+moveBy.y))* ffilter[2];\n    col += texture(tex, vec2(uv.x,uv.y-moveBy.y))* ffilter[3];\n    col += texture(tex, vec2(uv.x,uv.y))* ffilter[4];\n    col += texture(tex, vec2(uv.x,uv.y+moveBy.y))* ffilter[5];\n    col += texture(tex, vec2(uv.x+moveBy.x,uv.y-moveBy.y))* ffilter[6];\n    col += texture(tex, vec2(uv.x+moveBy.x,uv.y))* ffilter[7];\n    col += texture(tex, vec2(uv.x+moveBy.x,uv.y+moveBy.y))* ffilter[8];\n    \n \n    return col.xyz;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float[9] sobelX= float[](\n        \t\t1.f ,2.f ,1.f ,\n                0.f ,0.f ,0.f ,\n                -1.f,-2.f,-1.f\n       \t\t\t);\n    \n    float[9] sobelY= float[](\n        \t\t1.f,0.f ,-1.f ,\n                2.f,0.f ,-2.f ,\n                1.f,0.f ,-1.f\n       \t\t\t); \n    \n    vec3 col = sqrt(pow(convolution(iChannel0,uv,sobelX),vec3(2))+ pow(convolution(iChannel0,uv,sobelY),vec3(2)));\n    col.x =  dFdx(texture(iChannel0,uv).xyz).x/col.x;\n    col.y =  dFdy(texture(iChannel0,uv).xyz).x/col.y;\n    col.z =  texture(iChannel0,uv).z;\n    \n    fragColor = vec4(col, 1.f);\n        \n}","name":"Buf C","description":"","type":"buffer"}]}