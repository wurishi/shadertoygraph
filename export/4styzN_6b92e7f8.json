{"ver":"0.1","info":{"id":"4styzN","date":"1518133535","viewed":102,"name":"paw metaballs","username":"sidsuk","description":"CIS 566, paw metaballs\nAnimation reference: https://camo.githubusercontent.com/04383354badbdd77b6fdbab1d847cb9c8636b5f3/68747470733a2f2f617373657473302e656c6c6f2e636f2f75706c6f6164732f61737365742f6174746163686d656e742f353135393836382f656c6c6f2d6f7074696d6","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","smoothblending"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPSILON 0.001\n#define MAX_DIS 1000.0\n#define PI 3.14159265359\n\n// sdf function, smooth blending from https://iquilezles.org/www/index.htm\n\n// sphere sdf function\nfloat sphereSDF(vec2 p, vec2 c,float radius) {\n    return length(p - c) - radius;\n}\n\n// polynomial smooth blend\nfloat smoothBlend(float a, float b, float k) {\n    float h = clamp(0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord - iResolution.xy / 2.0;\n    \n    float down = 25.0;\n    float scale = 0.4;\n    p /= down; // scale down sample point\n    \n    float dist = MAX_DIS;\n    \n    int num = 8;\n    \n    for(int i = 0; i < num; ++i) {\n        float radius = 5.0;\n        float angle = float(i) * 360.0 / float(num);\n        float x = radius * cos(radians(angle)) * (cos(iTime * PI / 1.5  + float(i) * PI / 4.0)  + 1.2) / 1.6;\n        float y = radius * sin(radians(angle)) * (cos(iTime * PI / 1.5  + float(i) * PI / 4.0)  + 1.2) / 1.6;\n        float s = scale * sphereSDF(p / scale, vec2(x, y), 1.0);\n        dist = smoothBlend(dist, s, 1.3);\n    }\n    dist = down * dist; // scale \n    \n    if(dist > 1.0 ) {\n        fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n        return;\n    }\n    fragColor = vec4(0.0, 0.0, 0.0, 0.0);\n}","name":"Image","description":"","type":"image"}]}