{"ver":"0.1","info":{"id":"dstfWB","date":"1697622694","viewed":49,"name":"Sin Heart","username":"lucasolip","description":"A beating heart made of small circles changing sizes","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circles","sin","heart","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NEWTON_ITER 2\n#define HALLEY_ITER 0\n\nfloat cbrt( float x )\n{\n  float y = sign(x) * uintBitsToFloat( floatBitsToUint( abs(x) ) / 3u + 0x2a514067u );\n\n  for( int i = 0; i < NEWTON_ITER; ++i )\n      y = ( 2. * y + x / ( y * y ) ) * .333333333;\n\n    for( int i = 0; i < HALLEY_ITER; ++i )\n    {\n      float y3 = y * y * y;\n        y *= ( y3 + 2. * x ) / ( 2. * y3 + x );\n    }\n    \n    return y;\n}\n\nfloat map(float value, float istart, float istop, float ostart, float ostop) {\n    return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));\n}\n\nfloat cardioid_dist(vec2 position) {\n    float sqx = position.x*position.x;\n    float sqy = position.y*position.y;\n    return sqx + sqy - cbrt(sqx * sqy*position.y);\n}\n\nconst vec3 foreground = vec3(1.0, 0.898, 0.9254);\nconst vec3 background = vec3(1.0, 0.7019, 0.7764);\nconst vec3 other_foreground = vec3(1.0, 0.7, 0.78);\nconst vec3 other_background = vec3(0.9843, 0.4352, 0.5725);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float tiling = 32.0;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/vec2(iResolution.x, iResolution.x*0.8);\n\n    float speed = 3.0;\n    float centerDistance = cardioid_dist(uv - vec2(0.5, (0.425*iResolution.y)/iResolution.x));\n    float circleRadius = map(sin(speed*iTime - centerDistance*75.0), -1.0, 1.0, 0.1, 0.6);\n    uv *= tiling;\n    float circleBound = step(length(uv - vec2(floor(uv)+0.5)), circleRadius);\n    \n    vec3 col = mix(\n                mix(background, \n                    foreground, \n                    circleBound),\n                mix(other_background, \n                    other_foreground, \n                    circleBound), clamp(centerDistance*2.0, 0.0, 1.0));\n    //col = vec3(circleBound);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}