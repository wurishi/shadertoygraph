{"ver":"0.1","info":{"id":"WlK3WW","date":"1578956154","viewed":192,"name":"Rainbow rave mirror","username":"henrybergstrom","description":"color mapping onto webcam texture. Alot of fun.","likes":3,"published":1,"flags":2,"usePreview":0,"tags":["colors","webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 getStartColor(float t) {\n    vec3 col = vec3(0.0);\n    float tt = fract(t);\n\tif (tt < 0.8) col = vec3(0.99, 0.3, 0.5); // rosa\n    if (tt < 0.6) col = vec3(0.9, 0.58, 0.2); // munk\n    if (tt < 0.4) col = vec3(0.81, 0.0, 0.81); // munk\n\tif (tt < 0.2) col = vec3(1.0);\n    return col;\n}\n\nfloat mixi(float t) {\n\treturn sin(t) * 0.5 + 0.5; \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec2 mouse = iMouse.xy/iResolution.xy;\n    // Time varying pixel color\n    vec3 col = vec3(mouse.x, mouse.y, 0.0); // red, green, blue\n   \n    vec4 camCol = texture(iChannel0, uv);\n    // Output to screen\n    \n    vec3 get = getStartColor(iTime*0.1);\n    if (camCol.r + 0.5 + sin(iTime)*0.1 < 0.8) {\n        if (uv.y > 0.0) \n            get = vec3(mouse.x       , mixi(iTime*0.2), mixi(-iTime));\n        if (uv.y > 0.33) \n            get = vec3(mixi(iTime), mouse.y           , mixi(iTime*0.2));\n        if (uv.y > 0.66) \n            get = vec3(mixi(-iTime), mixi(iTime*0.2), mouse.x*mouse.y);\n    }\n    \n    fragColor = vec4(get,1.0);\n}","name":"Image","description":"","type":"image"}]}