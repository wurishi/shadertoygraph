{"ver":"0.1","info":{"id":"lldGDS","date":"1471391474","viewed":107,"name":"WavesSJ","username":"StrongJoshua","description":"Simple waves","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358\n\nfloat normY(float pixel) {\n    return pixel / iResolution.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 xy = fragCoord.xy / iResolution.xy;\n\t\n    vec4 color = vec4(1.0, 1.0, 1.0, 1.0);\n    float buffer = normY(5.0);\n    const int amt = 5;\n    float amtf = float(amt);\n    \n    float sinVal;\n    bool colored = false;\n    \n    for(int i = 0; i < amt; i++) {\n        sinVal = sin(xy.x * 2.0 * PI - iTime) / amtf + float(i) / amtf;\n\n        if(xy.y < sinVal + buffer && xy.y > sinVal - buffer) {\n            color.r = xy.y;\n            color.g = xy.x;\n            colored = true;\n            break;\n        }\n    }\n    \n    if (!colored && xy.y < sinVal) {\n            color.r = xy.x;\n            color.g = xy.y;\n    }\n    \n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}