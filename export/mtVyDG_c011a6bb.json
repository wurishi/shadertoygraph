{"ver":"0.1","info":{"id":"mtVyDG","date":"1700613943","viewed":184,"name":"scrolling space","username":"Godlander","description":"now scrolls infinitely","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"MslGWN","parentname":"Simplicity Galaxy"},"renderpass":[{"inputs":[],"outputs":[],"code":"//CBS\n//Parallax scrolling fractal galaxy.\n//Inspired by JoshP's Simplicity shader: https://www.shadertoy.com/view/lslGWr\n\n// http://www.fractalforums.com/new-theories-and-research/very-simple-formula-for-fractal-patterns/\nfloat field(in vec3 p, float s, int i) {\n\tfloat strength = 10.;\n\tfloat accum = s;\n\tfloat prev = 0.;\n\tfloat tw = 0.;\n\tfor (int j = 0; j < i; ++j) {\n\t\tfloat mag = dot(p, p);\n\t\tp = abs(p) / mag + vec3(-.5, -.4, -1.5);\n\t\tfloat w = exp(-float(j) / 7.);\n\t\taccum += w * exp(-strength * abs(mag - prev));\n\t\ttw += w;\n\t\tprev = mag;\n\t}\n\treturn max(0., 4.*accum/tw-.4);\n}\n\nfloat rand(vec2 co) {\n\tfloat a = fract(cos(co.x*8.3e-3 + co.y) * 4.7e5);\n\tfloat b = fract(sin(co.x*0.3e-3 + co.y) * 8.1e5);\n\tfloat c = mix(a, b, 0.5);\n\treturn c;\n}\n\nfloat stars(vec3 coord) {\n    vec2 v = round(coord.xy*1.5*iResolution.x);\n    float a = fract(cos(v.x*8.3e-3 + v.y) * 4.7e5);\n    float b = fract(sin(v.x*0.3e-3 + v.y) * 8.1e5);\n    float c = mix(a, b, 0.5);\n    return exp((c-1.)*40.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float time = iTime;\n\tvec2 uv = 2. * fragCoord.xy / max(iResolution.x, iResolution.y) + 0.5;\n    vec4 color = vec4(0);\n\n\tfloat freqs[6];\n\tfreqs[0] = 0.5+0.3*sin(0.1+time/11.);\n\tfreqs[1] = 0.5+0.3*sin(0.2+time/15.);\n\tfreqs[2] = 0.5+0.3*sin(0.3+time/21.);\n\tfreqs[3] = 0.5+0.3*sin(0.4+time/29.);\n\tfreqs[4] = 0.5+0.3*sin(0.5+time/37.);\n\tfreqs[5] = 0.5+0.3*sin(0.6+time/31.);\n\n    vec3 anim = vec3(sin(time/64.), time/13., sin(time/256.));\n\n    //back layer\n\tvec3 p = vec3(uv/(3.0+sin(time*0.03)*0.2), 0);\n\tp += .2 * anim;\n    p = abs(fract(p/4.)*4. - 2.);\n\tfloat t = field(p, freqs[3], 26);\n    float tt = t * t;\n    color += vec4(2.5*freqs[1]*t*tt , 1.2*freqs[3]*tt, freqs[5]*t, 1);\n    //stars\n    color += stars(p);\n\n    //front Layer\n\tvec3 p2 = vec3(uv/(4.0+sin(time*0.02)*0.2), 0);\n\tp2 += .25 * anim;\n    p2 = abs(fract(p2/5.)*5. - 2.5);\n\tfloat t2 = field(p2, freqs[2], 18);\n    float tt2 = t2 * t2;\n\tcolor += vec4(2.2*freqs[0]*t2*tt2, 1.6*freqs[2]*tt2, freqs[4]*t2, 1);\n    //stars\n    color += stars(p2);\n\n\tfragColor = color;\n}","name":"Image","description":"","type":"image"}]}