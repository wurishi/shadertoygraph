{"ver":"0.1","info":{"id":"tdyfz1","date":"1606570895","viewed":37,"name":"circle2_real","username":"wil","description":"temporary code while trying to figure out how to uses \"buffers\"","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["stuck"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// how the **** do you use cubemap and buffers in ShaderToy??\n\nvec2 uiPosition;\n\n\nbool inCirle(vec2 normalizedPixCoord, vec2 center, float radius)\n{\n    return  dot(normalizedPixCoord-center, normalizedPixCoord-center) < radius*radius;   \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    if( inCirle(uv, vec2(0.5, 0.5), 0.5) )\n        col.rgb = vec3(1,1,1) - col.rgb;\n\n    if( inCirle(uv, uiPosition, 0.1) )\n        col.rgb = vec3(1,1,1) - col.rgb;\n\n    uiPosition.x += 1.0;\n    \n    \n  //  vec3 cubemapOrig = vec3(0);\n  //  vec3 cubemapDir = vec3(1);\n  //  vec4 cubemapcolor;\n  //  mainCubemap(cubemapcolor, fragCoord, cubemapOrig, cubemapDir);\n        \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dX3Rr","channel":0}],"code":"void mainCubemap( out vec4 fragColor, in vec2 fragCoord, in vec3 rayOri, in vec3 rayDir )\n{\n    // Ray direction as color\n    vec3 col = 0.5 + 0.5*rayDir;\n\n    // Output to cubemap\n    fragColor = vec4(col,1.0);\n}","name":"Cube A","description":"","type":"cubemap"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}