{"ver":"0.1","info":{"id":"4ljyD1","date":"1508418484","viewed":103,"name":"First Spiral","username":"dickie","description":"first experiment with shader toy, just trying it out :)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.141592\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float turns = 4.0 ;\n    float speed = -0.333;\n    bool invert = false;\n    \n    \n\tvec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n    \n    float angle = atan(uv.y, uv.x) / (2.*M_PI);\n    angle = fract(angle + (iTime * speed));\n    \n\t\n    float dist = length(uv);\n    float waves = fract( dist  * turns) ;\n    \n    float spiral = (abs(angle - waves)  - 0.5) * 2.0;\n    spiral = (spiral*spiral * spiral * spiral);\n\t\n    if(!invert)\n        spiral = 1.0 - spiral;\n    \n    spiral *= clamp(dist * (turns / 2.0), 0.0,1.0);\n\tfragColor = vec4(spiral);\n}\n\n\n/*\n\n#define M_PI 3.141592\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float turns = 4.0;\n    float speed = 0.333;\n    \n    //float pinch = 1.05;\n    // experimenting with pinching but it's way more relaxing without\n    float pinch = 1.0; // change to 1.1 or greater to see pinches\n    float pinches = 10.0;\n    float pinchSpeed = 0.5;\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x = ((uv.x - 0.5) / (iResolution.y / iResolution.x)) + 0.5;\n    \n    float angle = ((atan(uv.y - 0.5, uv.x - 0.5) / M_PI) + 1.0) * 0.5;\n    angle = fract(angle + (iTime * speed) );\n    \n    float pinchPoints = pow(abs(0.5 - fract(angle * pinches)) * 2.0, 2.0);\n    pinchPoints = mix( 1.0, mix( pinch, 1.0, sin(iTime * pinchSpeed)), pinchPoints);\n\t\n    float dist = distance(uv, vec2(0.5,0.5));\n    float waves = fract( dist * pinchPoints * turns) ;\n    \n    float spiral = abs(abs(angle - waves)  - 0.5) * 2.0;\n    spiral = 1.0 - pow(spiral, 2.0);\n    spiral *= clamp(dist * (turns / 2.0), 0.0,1.0);\n    float result = spiral;\n    //float result = waves;\n    fragColor = vec4(result, result, result,1.0);\n\n}\n*/","name":"Image","description":"","type":"image"}]}