{"ver":"0.1","info":{"id":"3llGD7","date":"1556545648","viewed":1268,"name":"Fibonacci spiral 3","username":"FabriceNeyret2","description":"Dynamic version with no precomputations.\n[url]https://en.wikipedia.org/wiki/Fibonacci_spiral[/url] Box sides = Fibonacci sequence.\nCompare to golden log spiral: [url]https://www.shadertoy.com/view/wtlGD4[/url]","likes":21,"published":3,"flags":0,"usePreview":0,"tags":["spiral","fibonacci","log","golden"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// zoomable + values display variant of https://shadertoy.com/view/3lf3DM\n\nfloat pInt(vec2,float);                    // display integer\n// #define S(v) min( 1., abs(v)/p  )       // lazy AA\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, U, P,V,B, C = vec2(1,0);\n    float l,r,  _F=0.,F=1.,                // Fibonacci sequence\n          p = exp2(iTime)/R.y;             // pixel size (i.e. 1/scaling)\n    \n    U = p* ( u+u - R );\n \n    O = vec4(1);\n    \n    for (float i=0.; i<3.+ iTime/log(2.); i++) {\n        V = cos( 1.5708 * vec2(i+1.,i) );  // next box direction\n        r = F/2.;                          // box radius & center\n        B = C - r* vec2(V.y+V.x,V.y-V.x);  // vec2(1)*mat2(V.y,V.x,-V.x,V.y);\n        P = abs( B - U );\n        l = max(P.x,P.y) - r;              // SDF to box border\n        if ( l < p/4.) {                   // in box: draw arc and box\n            O = mix(vec4(1,0,0,1), .98+.02*cos( i + vec4(0,23,21,0) ), min(1.,abs(length(C-U)-2.*r)/p/5.) ); // https://www.shadertoy.com/view/ll2cDc\n            O = min(O, abs(l)/p/3. );\n            O.rg -= pInt((U-B)*6./F,F)     // display size = Fibonacci\n                    *( i<36.? 1.: .2 );    // faint when approx\n         // O.rg -= pInt((U-B)*8./p/R.y,F);\n        }\n        C += _F * V;                       // next arc center\n        l=F; F += _F; _F=l;                // Fibonacci sequence\n    }\n}\n\n// --- utils : display integer\n#define C(U,c) U.x<.0||U.x>1.||U.y<0.||U.y>1. ?0.: textureGrad(iChannel3, U/16. + fract( vec2(c, 15-(c)/16) / 16.), dFdx(U/16.),dFdy(U/16.) ).x\nfloat pInt(vec2 p, float n) {\n    float v = 0.; \n    p+=.5; p.x -= .25*floor(log(n)/log(10.));// centering\n    for (int i = int(n); i>0; i/=10, p.x += .5 )\n        v += C(p, 48+ i%10 );\n    return v;\n}","name":"Image","description":"","type":"image"}]}