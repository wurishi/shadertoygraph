{"ver":"0.1","info":{"id":"4lGfWh","date":"1542290354","viewed":372,"name":"Simplex noise fire","username":"Imic","description":"the fire based of simplex noise.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2dnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash( vec2 p )\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t dot(p,vec2(269.5,183.3)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise(vec2 p)\n{\n    const float K1=0.366025404;//(sqrt(3)-1)/2)\n    const float K2=0.211324865;//(3-sqrt(3))/6;\n    \n    vec2 i=floor(p+(p.x+p.y)*K1);\n    \n    vec2 a=p-(i-(i.x+i.y)*K2);\n    vec2 o=(a.x<a.y)?vec2(0.0,1.0):vec2(1.0,0.0);\n    vec2 b=a-o+K2;\n    vec2 c=a-1.0+2.0*K2;\n    \n    vec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\t\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n\t\n\treturn dot( n, vec3(70.0) );\n    \n}\n\nfloat fbm(vec2 uv)\n{\n    float f=0.0;\n    uv=uv*2.0;\n\tf  = 0.5000*noise( uv ); uv = 2.0*uv;\n\tf += 0.2500*noise( uv ); uv = 2.0*uv;\n\tf += 0.1250*noise( uv ); uv = 2.0*uv;\n\tf += 0.0625*noise( uv ); uv = 2.0*uv;\n\tf = f+0.5;\n\treturn f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 q = uv;\n    q.x*=5.;\n\tfloat strength =1.5;\n\tfloat T = 1.5*iTime;\n\tq.x-=2.5;//Ox=2.5\n\tq.y-=0.25;//Oy=0.25\n    \n    //the first layer of noise\n\tfloat n = fbm(strength*q - vec2(0,T));\n\n    //the second layer of noise\n    float c=1.-16.*(pow(length(q)-n*q.y,2.));\n    \n    //using the noise to generate pixel color;\n    float c1=n*c*(1.-pow(uv.y,4.));\n\tc1=clamp(c1,0.,1.);\n\n    //color\n\tvec3 col = vec3(1.5*c1, 1.5*c1*c1*c1, c1*c1*c1*c1*c1*c1);\n    \n    //the mix paramterï¼Œc1/n\n\tfloat c2 = c * (1.-pow(uv.y,4.));\n    \n    //liner mix to complement the pixel,which should be black.\n\tfragColor = vec4( mix(vec3(0.),col,c2), 1.0);\n    //fragColor = vec4(col,1.0);\n    //fragColor=vec4(1.0*c,1.0*c,1.0*c,1.0);\n}","name":"Image","description":"","type":"image"}]}