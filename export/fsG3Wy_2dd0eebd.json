{"ver":"0.1","info":{"id":"fsG3Wy","date":"1632069377","viewed":262,"name":"julia_set","username":"bhuwan0000","description":"julia set","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","visualization","numbers","complex","maths"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n#define PI 3.14159265359\nfloat max_iter = 512.0;\nint AA = 6;\n\n//#define iTime iGlobalTime\n\n\nvec3 randCol(float i) {\n    float f = i/max_iter * 2.0;\n    f=f*f*2.;\n    float t = iTime+1.;\n    return vec3((sin(f*2.0)), (sin(f*4.)), abs(sin(f*8.0)));\n}\n\n\nvec3 julia(vec2 p, vec2 comp)\n{\n    float th = iTime*2.*PI/180.;\n    mat2 rot = mat2(cos(th), -sin(th), sin(th), cos(th));\n    vec3 col = vec3(0.0);\n    vec2 z = (2.0*p - R.xy)/R.y;\n    z *= rot;\n    z *= pow(1.1, -iTime*2.);//(fract(-iTime*0.05+0.99));\n    z += vec2(0.0566,0.279);\n    vec2 c = comp; \n    float r = 20.;\n    float iter = 0.0;\n    vec3 jCol = vec3(0.0);\n    vec2 zP;\n    for (; iter<max_iter && dot(z,zP)<r*r; iter++)\n    {\n        zP = z;\n        z = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;\n    }\n    if (iter>max_iter) return vec3(0.0);\n    \n    float d = length(z);\n    float fIter = log2(log(d)/log(r));\n    col = vec3( smoothstep(6.,.0,fIter) )*randCol(iter*6.);\n    return col + vec3(0.2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)    \n    vec3 accCol = vec3(0.);\n    \n    //vec2 c1 =  vec2(-0.8 , 0.156);//vec2( -0.79, 0.141 );\n    //vec2 c2 =  vec2( -0.79, 0.141 );\n    //vec2 c4 =  vec2( -0.75, 0.16 );\n    //float a = 0.2*PI+sin(iTime*0.05)*0.5+0.5+3.;\n    vec2 c3 = vec2(0.285,0.01);\n    //vec2 c = mix(c1,c2,sin(iTime*0.02+0.33));\n    \n    \n    for (int i=0; i<AA; i++)\n    for (int j=0; j<AA; j++)\n    {\n        vec2 dx = -0.5 + vec2(float(i), float(j))/float(AA);\n        accCol += julia(fragCoord + dx, c3);\n    }\n    accCol /= float(AA*AA);\n    \n    vec3 col = vec3(accCol);\n\n    // Output to screen\n    col = pow(col, vec3(2.2));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}