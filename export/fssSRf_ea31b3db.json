{"ver":"0.1","info":{"id":"fssSRf","date":"1618966078","viewed":292,"name":"Gradient Map (N colors)","username":"Nieb","description":"Basic gradient map with N number of colors with position.\n\nNote: this shader isn't exactly performant, it gets more expensive with each color added.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gradient","gradientmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// vec4(Red, Green, Blue, GradientPosition = 0 to 1)\nconst vec4 Color[6] = vec4[6](\n    vec4(1.0, 0.0, 0.0, 0.083),\n    vec4(1.0, 1.0, 0.0, 0.250),\n    vec4(0.0, 1.0, 0.0, 0.416),\n    vec4(0.0, 1.0, 1.0, 0.583),\n    vec4(0.0, 0.0, 1.0, 0.750),\n    vec4(1.0, 0.0, 1.0, 0.916)\n);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 ScreenUV = fragCoord/iResolution.xy;\n    float TexSample0 = texture(iChannel0, ScreenUV).r;\n\n#if 1\n    TexSample0 = TexSample0 + fract(iTime*0.333);\n    if (TexSample0 > 1.0) {TexSample0 = TexSample0 - 1.0;}\n#endif\n\n    vec3 TheColor;\n    for(int index = 0; index <= Color.length(); index++) { // Array length isn't 0 inclusive :(  (but we need length+1 anyhow)\n        if (index == Color.length()) { // Are we past the last ColorPosition?\n            TheColor = vec3( Color[index-1].rgb); // If so, only sample the last Color.\n            break;\n        } else if (TexSample0 < Color[index].a) { // Is our TextureSample value in this Color[index]'s range?\n            if (index == 0) { // Are we below the first ColorPosition?\n                TheColor = vec3( Color[index].rgb); // If so, only sample the first Color.\n                break;\n            } else { // Else, let's blend 2 Colors.\n                // Color mix value:  (TextureValue - ColorPos.Start)  /  ( Distance between ColorPos.Start and ColorPos.End )\n                TheColor = vec3( mix( Color[index-1].rgb, Color[index].rgb, (TexSample0 - Color[index-1].a)/(Color[index].a - Color[index-1].a)));\n                break;\n            }\n        }\n    }\n\n    fragColor = vec4(TheColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}