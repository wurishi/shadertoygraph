{"ver":"0.1","info":{"id":"NdtBz8","date":"1713866176","viewed":34,"name":"DMT_aaaeaeaeaea","username":"damotime","description":"aaa","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["aaaa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST 0.01\n\nfloat GetDist(vec3 p){\n    vec4 s = vec4(0, 1, 6, 1);\n    \n    float sphereDist = length(p-s.xyz) -s.w;\n    float planeDist = p.y;\n    \n    float d = min(sphereDist, planeDist);\n    return d;\n}\n\nfloat RayMarch(vec3 ro, vec3 rd){\n    \n    float dO = 0.;\n    \n    for(int i=0; i<MAX_STEPS; i++){\n        \n        vec3 p = ro + rd*dO;\n        float dS = GetDist(p);\n        dO += dS;\n        if(dO>MAX_DIST || dS<SURF_DIST) break;\n    \n    }\n    \n    return dO;\n    \n}\n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy /iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = vec3(0.);\n    vec3 ro = vec3(0.,1.,0.);\n    vec3 rd = normalize(vec3(uv.x,uv.y,1.));\n    \n    float d = RayMarch(ro, rd);\n    d /= 6.;\n    col = vec3(d);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}