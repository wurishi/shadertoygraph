{"ver":"0.1","info":{"id":"tsdGWB","date":"1575677863","viewed":104,"name":"Shapes without conditionals","username":"sux2bthatguy","description":"Shapes without conditionals","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 center = vec2(.5,.5);\nfloat radius = .25;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.y *= iResolution.y/iResolution.x;\n    center.y *= iResolution.y/iResolution.x;\n    \n    vec3 col = .5 + .5*abs(tan(iTime+uv.xyx+vec3(0,2,4)));\n    vec3 col2 = .5 + .5*abs(cos(iTime+uv.xyx+vec3(0,2,4)));\n    \n    float onOff = 1.0 - smoothstep(radius, radius +.1, length(uv-center));\n    \n    col = col * (onOff) + col2 * (1.0 - onOff);\n\t\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}