{"ver":"0.1","info":{"id":"NlSczW","date":"1649233409","viewed":121,"name":"big bang","username":"origo_","description":"How the big bang might have looked like at the core during the first microseconds?","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["bigbang"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float focus = 0.67;\n\nvec2 rotate(vec2 p,float a){\n\tfloat c = cos(a);\n    float s = sin(a);\n    return p*mat2(c,s,-s,c);\n}\n\nvec3 palette(float d){\n\tvec3 p = mix(vec3(1.3,0.72,0.7),vec3(cos(iTime/1.3),0.7,sin(iTime*3.)+0.5),d);\n    p.xy = rotate(p.xz, d*d);//+vec2(0.6, 0.6);\n    return p;\n}\n\n\nfloat map1(vec3 p, float t, float mm){\n    float mult = (sin(t)+0.5)*mm;//+t;//mod(t, 3.3);\n    int max = min(7, 1+int(iTime/9.5));\n    for( int i = 0; i<max; ++i){\n        p.xz = rotate(p.xz,t);\n        p.xy = rotate(p.xy,float(i)/3.+t*(mult*3.1415926));\n        p.xz = abs(p.xz);\n        p.xz-=0.09;//-sin(t);\n\t}\n    p.yz = rotate(p.yz, t+t);\n\treturn dot(sign(p),p)/1.807;\n}\n\nfloat map(vec3 p, float t){\n    float d = map1(p,t, 13.);\n    return d;\n}\n\nvec4 rm (vec3 ro, vec3 rd, float smp){\n    float t = 0.;\n    vec3 col = vec3(0.);\n    float d;\n    float tt = sin(iTime*0.9)*0.02+0.5+(smp/14.0);\n\n    for(float i =0.; i<64.; i++){\n\t\tvec3 p = ro + rd*t;\n        d = map(p,tt)*(.291+focus);// - 0.01;\n        if(d < 0.00001){\n            break;\n        }\n        if(d > 90.){\n        \tbreak;\n        }\n        //col+=vec3(0.9,0.3,0.3)/(400.*(d));\n        col+=palette(length(p)*0.1337)/(133.37*(d));\n        t+=d;\n    }\n    return vec4(col,1./(d/1.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    focus = 0.2+1.0/iTime;\n    float smp = 2.5*texture(iChannel0, vec2(0.79, 0.0)).x+0.3;\n    float smp1 =iTime/30.0*texture(iChannel0, vec2(0.29, 0.0)).x+0.3;\n    float smp2 = 1.1*sin(iTime*0.3)*texture(iChannel0, vec2(0.49, 0.0)).x+0.3;\n\n    vec2 uv = (fragCoord-(iResolution.xy/2.))/iResolution.x;\n    uv.xy = rotate(uv.yx,iTime/3.);\n\t\n    float bp = 180.0/60.0;\n    vec3 ro = vec3(sin(iTime*bp)*23.,cos(iTime*4.)+smp1*8.,-42.);\n\t//vec3 ro = vec3(0.,0.,-22.);\n    vec3 cf = normalize(-ro);\n    vec3 cs = normalize(cross(cf,vec3(0.,1.,0.)));\n    vec3 cu = normalize(cross(cf,cs));\n\n    cu.xz = rotate(cu.xz, iTime*3.);\n    vec3 uuv = ro+cf*21. + uv.x*cs + uv.y*cu + 0.2*sin(iTime)/14.0*cs;\n    vec3 rd = normalize(uuv-ro);\n    \n    vec4 col = rm(ro,rd,smp2-smp1)*(smp2/smp*0.29);\n    \n    col += vec4(cs,1.0)*rm(ro,rd,smp1+smp)*(0.13/smp2);\n    col += vec4(cf,1.0)*rm(ro,rd,smp2)*(0.13/smp2);\n\n    vec4 sc = vec4(smp, smp2*smp1, smp2, 0.3)/4.0;\n    fragColor = col + sc;\n}\n","name":"Image","description":"","type":"image"}]}