{"ver":"0.1","info":{"id":"ltcBzS","date":"1539982879","viewed":1283,"name":"Some fx","username":"bytewave","description":"Some fx","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["somefx"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash( vec2 p )\n{\n\tfloat h = dot(p,vec2(127.1,311.7));\t\n    return -1.0 + 2.0*fract(sin(h)*43758.5453123);\n}\n\nfloat noise(vec2 p)\n{\n    vec2 cell = floor(p);\n    \n    float BottomLeft = hash(cell);\n    float BottomRight = hash(cell + vec2(1.,0.));\n    float TopLeft =  hash(cell + vec2(0.,1.));\n    float TopRight = hash(cell + vec2(1.,1.));\n    \n    vec2 posLocal = fract(p);\n    \n    vec2 u = posLocal*posLocal*(3.0-2.*posLocal);\n    \n    float BottomLine = mix(BottomLeft,BottomRight,u.x);\n    float TopLine = mix(TopLeft,TopRight,u.x);\n    \n    float CellInterpolationFinal = mix(BottomLine,TopLine,u.y);\n    \n    return CellInterpolationFinal;\n}\n\nfloat perlinNoise(vec2 p,float iteration)\n{\n    float outValue = 0.;\n    \n    for(float i = 0.0;i < iteration;i += 1. )\n    {\n        float freq = pow(2.,i);\n        float Amp = 1. / freq;\n        \n        outValue += sin((noise(p * freq) * Amp));\n    }\n    return outValue;\n}\n\n\nvec2 Turbul(inout vec2 p,float freq,float amp)\n{\n\tp.x += sin(iTime*5. + p.y * freq) * amp;\n    p.y += sin(iTime*5. + p.x * freq) * amp;\n    return p;\n}\n\nvoid rotate(inout vec2 p,float angle,vec2 rotationOrigin)\n{\n    p -= rotationOrigin;\n    p *= mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n    p += rotationOrigin;\n}\n\nvec4 fx(vec2 p)\n{\n    vec3 col = 0.5 + 0.5*cos(iTime+p.xyx+vec3(0,2,4));\n    \n    float noiseVal = 1.;\n    float l = length(p*1.)*3.;\n        \n    rotate(p,l*l*l,vec2(0.,0.));\n        \n    p += perlinNoise(p * 2.,2.)*.1 * noiseVal;\n    p -= perlinNoise(p * 4.,2.)*.05 * noiseVal;\n    p += perlinNoise(p * 8.,2.)*.025 * noiseVal;\n    p -= perlinNoise(p * 8.,2.)*.0125 * noiseVal;\n    \n    Turbul(p,20.,0.05 );\n    Turbul(p,50.,0.0125 );\n    \n    float c = 1. - max( pow(length(p*5.),0.75)*1.,0.);\n    c =  1. - abs((sin(iTime) * 0.5 + 0.5) - c)*1.;\n    return vec4(c*col,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\t\n    // Output to screen\n    fragColor = fx(uv)+fx(-uv*1.);\n}","name":"Image","description":"","type":"image"}]}