{"ver":"0.1","info":{"id":"wsyfWt","date":"1608213824","viewed":196,"name":"Laplacian Ocean","username":"mherreshoff","description":"Simulates ocean waves using the laplacian wave equation.  Initialized with a wood texture to create wave patterns which mostly move vertically and are somewhat organic.","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["simulation","ocean","laplacian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 t = texture(iChannel0, uv);\n    vec3 color = mix(hsv2rgb(vec3(.62,1.,.35)), vec3(1.), pow(t.x,3.));\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, in vec2 U )\n{\n    vec3 o = vec3(1,0,-1);\n    vec2 pw = 1./iResolution.xy;\n    vec2 uv = U*pw;\n#define F(v) texture(iChannel0, uv+pw*v)\n    vec4 t = F(o.yy);\n    vec4 lap = 8.*F(o.yy)-F(o.xx)-F(o.xy)-F(o.xz)-F(o.yx)-F(o.yz)-F(o.zx)-F(o.zy)-F(o.zz);\n    float dt = 0.1;\n    O.xy = t.xy + dt*vec2(t.y-.1*lap.x, -1.*lap.x);\n    if (iFrame < 10) O = vec4(texture(iChannel1, uv).x,0,0,0);\n}","name":"Buffer A","description":"","type":"buffer"}]}