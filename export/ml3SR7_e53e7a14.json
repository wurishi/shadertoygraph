{"ver":"0.1","info":{"id":"ml3SR7","date":"1685167600","viewed":61,"name":"SineRider Sunset","username":"ProfSucrose","description":"Sunset used for the \"Constant Lake\" cutscene on https://sinerider.com","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sunset","sinerider"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\n\nuniform sampler2D stars;\n\n#define PI 3.1415926538\n\n#define LIGHT_SKY_G0_COL  vec3(0.388235, 0.576471, 0.780392)\n#define LIGHT_SKY_G1_COL  vec3(0.243137, 0.431373, 0.686275)\n#define SKY_COL           vec3(1., 0.972549, 0.8)\n\n#define LIGHT_YELLOW      vec3(0.937255, 0.886275, 0.568627)\n#define LIGHT_ORANGE      vec3(0.92549, 0.764706, 0.435294)\n#define RED               vec3(0.913725, 0.423529, 0.447059)\n#define VELVET            vec3(0.788235, 0.243137, 0.443137)\n#define LIGHT_PURPLE      vec3(0.192157, 0.14902, 0.470588)\n#define DARK_PURPLE       vec3(0.094118, 0.058824, 0.266667)\n#define BLACK             vec3(0.031373, 0.011765, 0.14902)\n\n#define SUN_ORANGE_WHITE  vec3(1., 0.972549, 0.7)\n#define SUN_WHITE         vec3(1., 0.984314, 0.972549)\n\n#define SUN_GLOW_ORANGE   vec3(0.988235, 0.568627, 0.)\n\n\n#define HORIZON_Y         0.35\n#define SUN_START_Y       0.9\n\n// When to start fading in stars w.r.t. iTime\n#define START_STARS_FADE_IN  8.0\n#define END_STARS_FADE_IN    10.0\n\n// Credit for noise helpers to https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nfloat rand(vec2 c) {\n\treturn fract(sin(dot(c.xy, vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 p, float freq ){\n\tfloat unit = iResolution.y/freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(PI*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\nfloat pNoise(vec2 p, int res) {\n\tfloat persistance = .5;\n\tfloat n = 0.;\n\tfloat normK = 0.;\n\tfloat f = 4.;\n\tfloat amp = 1.;\n\tint iCount = 0;\n\tfor (int i = 0; i<4; i++){\n\t\tn+=amp*noise(p, f);\n\t\tf*=2.;\n\t\tnormK+=amp;\n\t\tamp*=persistance;\n\t\tif (iCount == res) break;\n\t\tiCount++;\n\t}\n\tfloat nf = n/normK;\n\treturn nf*nf*nf*nf;\n}\n\nfloat lerpBetween(float lower, float upper, float a) {\n  return clamp((a - lower) / (upper - lower), 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = gl_FragCoord.xy/iResolution.y;\n  uv.x += 0.5-.5*iResolution.x/iResolution.y;\n\n  vec3 col = vec3(0.);\n  \n  vec2 sunPos = vec2(0.5, SUN_START_Y - 0.5 * iTime/5.);\n  float horizonProx = 2.0 * (1.0 - lerpBetween(HORIZON_Y - (SUN_START_Y - HORIZON_Y), SUN_START_Y, sunPos.y));\n  \n  vec3 lightSkyCol = mix(LIGHT_SKY_G0_COL, LIGHT_SKY_G1_COL, uv.y);\n  vec3 horizonCol = mix(LIGHT_ORANGE, VELVET, uv.y);\n  vec3 purpleCol = mix(LIGHT_PURPLE, DARK_PURPLE, uv.y);\n  vec3 blackCol = mix(DARK_PURPLE, BLACK, uv.y);\n\n  float sunDist = distance(sunPos, uv);\n\n  float noise = pNoise((uv - vec2(1.0 * (SUN_START_Y - sunPos.y), 0.0)) * vec2(200.0, 1000.0), 50);\n\n  float skyProgress = horizonProx;\n\n\n  vec3 skyCol = mix(horizonCol, lightSkyCol, noise + smoothstep(0.0, 0.1 + 1.7 * pow(horizonProx, 2.0), uv.y));\n  skyCol = mix(skyCol, purpleCol, noise + smoothstep(1.0 - 1.3 * pow(horizonProx, 3.0), 2.0 - 2.0 * pow(max(0., horizonProx - 1.0), 6.0), uv.y));\n  skyCol += SUN_GLOW_ORANGE * 1./(1. + sunDist * 5.0); // Sun glow\n  skyCol = mix(skyCol, blackCol, smoothstep(1.0 - pow(horizonProx / 1.2, 8.5), 2.0 - 2. * pow(horizonProx / 3.3, 8.5), uv.y));\n  skyCol *= 1.0 - smoothstep(1.3, 1.7, horizonProx);\n\n  col += skyCol;\n\n\n  float sun = pow(.15/sunDist, mix(1.0, 10.0, pow(horizonProx, 3.0)));\n  vec3 sunCol = mix(SUN_WHITE, SUN_ORANGE_WHITE, pow(lerpBetween(0.65, 1.1, horizonProx), 2.0));\n  col = mix(col, sunCol, clamp(sun, 0.0, 1.0));\n\n\n  vec2 sampleUv = gl_FragCoord.xy/iResolution.xy;\n\n  #if defined(DEBUG_STAR_FIELD)\n  col = starCol;\n  #endif\n\n  fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}