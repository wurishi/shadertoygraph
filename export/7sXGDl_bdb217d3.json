{"ver":"0.1","info":{"id":"7sXGDl","date":"1616726105","viewed":193,"name":"Test shader000001","username":"Musthegreat","description":"This shader is a dotted line, nothing special","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 Line(vec2 uv, vec2 spoint, vec2 epoint, float thickness) {\n    vec3 col = vec3(0.);\n    float d = length(uv.y); //calculates dist between stuff i dunno\n    float c = 0.; //if value is 0 pixel is black if 1 pixel is white\n    \n    if(d < thickness) c = 1.; else c = 0.; // draws the line\n    \n    col += sin(uv.x*90.)*9.; //draws the black mask over the line\n    \n    col *= c;\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    uv.y += 0.; //must revisit tomorrow\n    \n    vec3 col = vec3(1.);\n    \n    //col.rg += uv;\n    \n    col *= Line(vec2(uv), vec2(0.), vec2(0.), 0.02);     \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}