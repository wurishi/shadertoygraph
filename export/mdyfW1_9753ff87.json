{"ver":"0.1","info":{"id":"mdyfW1","date":"1698678785","viewed":25,"name":"Camcorder_Barricade","username":"FlyingBanana","description":"test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord.xy / iResolution.xy ) ;\n\n    vec3 col1 = vec3(iTime * uv.y , iMouse.x / 0.7, 0.2); \n    uv = uv +  vec2(sin(iTime)/ 0.9,  sin(iTime * 0.5 * iMouse.x)*0.1);\n    // Time varying pixel color        \n    vec3 chouette_couleur;\n\n    if ( uv.x > 0.5 && uv.x < 0.6 && uv.y < 0.7 && uv.y > 0.6) { \n    \n        chouette_couleur = vec3(sin(0.2),cos(iMouse.xy) ) * col1;\n    \n    } else {\n    \n        chouette_couleur = vec3(0.1,iMouse.xy);\n    \n    }\n    \n    // Output to screen\n    fragColor = vec4(chouette_couleur,1.0);\n}","name":"Image","description":"","type":"image"}]}