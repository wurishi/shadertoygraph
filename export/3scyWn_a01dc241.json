{"ver":"0.1","info":{"id":"3scyWn","date":"1601243365","viewed":92,"name":"FireForCharacters","username":"Tomasz","description":"draw FFC","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ffc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat hash12(vec2 x) {\n    return fract(sin(dot(x, vec2(40.3862, 65.37862))) * 3224.9721);\n}\nfloat noise12(vec2 x) {\n    vec2 root = floor(x);\n    vec2 t = fract(x);\n    \n    float n00 = hash12(root + vec2(0,0));\n    float n01 = hash12(root + vec2(0,1));\n    float n10 = hash12(root + vec2(1,0));\n    float n11 = hash12(root + vec2(1,1));\n    \n    float n0 = mix(n00, n01, t.y);\n    float n1 = mix(n10, n11, t.y);\n    \n    return mix(n0, n1, t.x);\n    \n}\nfloat fractalNoise12(vec2 x) {\n    \n    float sum = 0.0;\n    for(float i = 1.0; i <= 32.0; i *= 2.0)\n    {\n        float noise = noise12(x * i) /i;\n        \n        sum += noise;\n        x += noise;\n    }\n    return sum /2.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    uv *= 8.0;\n\n    vec2 rootUV = floor(uv);\n    vec3 white = vec3(1.0, 1.0, 1.0);\n    vec3 black = vec3(0.0, 0.0, 0.0);\n    \n    float step1 = -0.5;\n    float step2 = 0.5;\n    \n    float cutoutLine = smoothstep(step1 - (sin(iTime * 0.2) * 0.25 + 0.25), step2 + 0.2, uv.y *0.2);\n    \n    vec3 color1 = mix(white, black, cutoutLine);\n    \n\tuv.y -= iTime * 0.4;\n    float noise = fractalNoise12(uv);\n   \n    \n    vec3 fireMask = step(noise, color1);\n    vec3 fireSmooth = 1.0 - smoothstep(noise, noise + 0.1, color1 - 0.2);\n    \n    vec3 fireNoise = fireMask * noise;\n    \n    vec3 fire = fireMask - fireSmooth + fireNoise;\n    fire *= 1.0 - smoothstep( 0.2, 0.0, fire);\n  \n\n    fragColor = vec4(fire, 1.0);\n}","name":"Image","description":"","type":"image"}]}