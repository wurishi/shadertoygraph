{"ver":"0.1","info":{"id":"4ttyWn","date":"1532234058","viewed":12570,"name":"Star Field Steps","username":"virtuosic","description":"A shader demonstrating the steps taken to achieve the star field effect.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise","stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define HASHSCALE3 vec3(.1031, .1030, .0973)\n#define UVSCALE 3.0\n\n\n// Hash without Sine\n// Creative Commons Attribution-ShareAlike 4.0 International Public License\n// Created by David Hoskins.\n\n///  2 out, 2 in...\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * HASHSCALE3);\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nfloat saturate(float x)\n{\n\treturn clamp(x, 0.0, 1.0);\n}\n\nvec3 saturate(vec3 x)\n{\n   x.x = clamp(x.x, 0.0, 1.0);\n   x.y = clamp(x.y, 0.0, 1.0);\n   x.z = clamp(x.z, 0.0, 1.0);\n    \n   return x; \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\n    //remap mouse coords. \n    vec2 mouseCoords = iMouse.xy/iResolution.xy;\n    \n    float timeAlpha = mouseCoords.x * 4.0;\n     \n    float screenRatio = iResolution.x/iResolution.y;\n    vec2 ratioScale = vec2(1.0 * screenRatio, 1);\n    vec2 uv = (fragCoord * ratioScale)/iResolution.xy * UVSCALE;\n    vec2 uvcell = fract(uv);\n    \n    // get random 2d cell noise\n\tvec2 hash = hash22(floor(uv));\n    hash = (hash - 0.5);\n    hash *= saturate(timeAlpha - 3.0);\n    float hashMagnitude = saturate((1.0 - length(hash)) - 0.5); \n\n    \n    \n\n    vec3 frame1 = fract(vec3(fragCoord.xy/iResolution.xy * ratioScale,0.0) * clamp(timeAlpha, 1.0/UVSCALE, 1.0) * UVSCALE);\n    \n    vec3 frame2 = frame1 - ((vec3(0.5, 0.5, 0.0) * saturate(timeAlpha - 1.0)) + \n                           vec3(hash,0.0) * 1.0);\n    \n    float radius = saturate(hashMagnitude);\n    vec3 frame3 = saturate( 1.0 - vec3( length(frame2) /hashMagnitude) ); \n    \n    \n    \n    vec3 section1 = mix(frame1, frame2, saturate(floor(timeAlpha)));\n    \n    vec3 section2 = frame3;\n    \n    vec3 final = mix(section1, section2, saturate(timeAlpha - 2.0));\n\n\n    vec3 col = vec3(final);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}