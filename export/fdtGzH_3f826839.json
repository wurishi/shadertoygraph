{"ver":"0.1","info":{"id":"fdtGzH","date":"1629882305","viewed":101,"name":"Fade to Green Tie-dye Spiral","username":"vtgco","description":"Strange tie-dye spiral thing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"NlSSW3","parentname":"Trippy Halftone Rainbow Spiral"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.2832\n\nbool ALIASED = false;\n\nfloat MOON_SIZE = 0.005;\nfloat BREATHING_ROOM = 0.001;\nfloat R_STEP;\n\nfloat ANTI_ALIAS_RADIUS;\nfloat ARC_ANTI_ALIAS_RADIUS;\n    \nfloat DISPLACEMENT_FACTOR;\n\n// -------------------------\n\nvec2 hash( vec2 x )  \n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat fbm( in vec2 uv )\n{\n \tuv *= 2.;\n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\tfloat f = 0.;\n    f  = abs(sin(0.5000*noise( uv ))); uv = m*uv;\n\tf += abs(sin(0.2500*noise( uv ))); uv = m*uv;\n\tf += abs(sin(0.1250*noise( uv ))); uv = m*uv;\n\tf += abs(sin(0.0625*noise( uv ))); uv = m*uv;\n\t//f  = 0.5 + 0.5*f;\n    return f;\n}\n\n\n// ------------------\n\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\n// ------------------\n\nvoid setup() {\n    R_STEP = (MOON_SIZE + BREATHING_ROOM)*2.;\n    \n    float rel_moon_size = 0.02 / MOON_SIZE;\n    \n    ARC_ANTI_ALIAS_RADIUS = (0.2 * rel_moon_size);\n    ANTI_ALIAS_RADIUS = 1. - ARC_ANTI_ALIAS_RADIUS;\n    \n    ANTI_ALIAS_RADIUS *= MOON_SIZE;\n    \n    DISPLACEMENT_FACTOR = 0.01 / pow(rel_moon_size, 0.5);\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    setup();\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n     uv -= vec2(0.5, 0.5);\n    uv.x *= iResolution.x / iResolution.y;\n    uv.y -= 0.2;\n    uv *= 10.;\n    \n    \n    \n    float new_theta = atan(uv.y, uv.x) + TWO_PI*float(uv.y<0.);\n    float new_r = length(uv)/ R_STEP + 0.5;\n    \n    new_r += fbm(uv)*pow(new_r+1000.,1.5)*0.0005;\n    new_theta += fbm(uv)*pow(new_r+1000.,1.6)*0.0001;\n    \n    \n    float phase = new_theta*2./TWO_PI + pow(new_r,0.75)*0.1 - iTime * 0.25;\n    phase = mod(phase, 2.);\n    \n\n    \n    //phase += *0.5;\n   \n    //phase *= (1. + fbm(uv)*pow((new_r-1.),0.2)*5.);\n    \n    phase = 2. - smoothstep(-1., 1., (phase - 1.))*2.;\n    \n    \n    \n    //phase = mix(2. - smoothstep(0.,1.,smoothstep(-1., 1., (phase - 1.)))*2., 2. - smoothstep(-1., 1., (phase - 1.))*2., min(10000.*pow(new_r + 90.,-2.),1.));\n    \n    vec3 col = vec3(1.0);\n\n    //float brightness = max((1. - min(phase, 2. - phase))*2.  + (1.-abs(1.-phase))/length(uv)* 0.3, 0.01);\n    \n    float brightness = smoothstep(0., 1., smoothstep(0., 1., smoothstep(0., 1., smoothstep(0., 1., abs(phase - 1.)))))*1.5;\n    brightness = max(brightness, 1.5*min(1., pow(new_r*0.015, -2.)));\n\n    \n    vec3 colorHSL = vec3(phase * .5 + 0.3, 0.6, .76);\n    vec3 colorRGB = hsl2rgb(colorHSL);\n    \n    col = mix(col, colorRGB, brightness);\n\n    fragColor = vec4(col, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}