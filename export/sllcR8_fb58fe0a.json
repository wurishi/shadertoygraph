{"ver":"0.1","info":{"id":"sllcR8","date":"1647520900","viewed":67,"name":"Samsung Clock","username":"giezu","description":"Inspired by Samsung watchface","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["clock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 Rot(float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n    \n    return mat2(c, -s, s, c);\n}\n\nfloat rand(float c)\n{\n\treturn fract(sin(dot(vec2(c, -c) ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nconst float perMin = 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    uv *= Rot(iTime / perMin * 3.1415 * 2.0 + 3.1451);\n\n    float a = atan(uv.x, uv.y) / 3.1415 / 2.0 + 0.5;\n\n    \n    // Time varying pixel color\n    float t = floor(iTime / perMin);\n    \n    vec3 colA = vec3(rand(t+87.242), rand(t+3.42), rand(t+52.321));\n    vec3 colB = vec3(rand(t+78.232), rand(t+5.97), rand(t+75.233));\n    \n    vec3 col = mix(colA, colB, a);\n    \n    float m = length(uv) - 0.25;\n    float s = 0.25;\n    col -= smoothstep(s-0.002, s, m);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}