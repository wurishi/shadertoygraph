{"ver":"0.1","info":{"id":"llyBWt","date":"1544469278","viewed":168,"name":"Distortion Bomb","username":"CyanSprite","description":"I'm just playing, it might trip you out a little","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["distortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\nconst int DISPLACE    = 0x00000001;\nconst int TWIST       = 0x00000002;\nconst int BEND  \t  = 0x00000004;\n\nconst bool doFract = false;\nconst float blackSpace = 2.0;\nconst float speed = 0.5;\n\n\n//float time = mod(iTime * speed, 300.);\nfloat getTime()\n{\n\treturn mod(iTime * speed, 120.0);\n}\n\nfloat displace(vec3 p){\n    float x = sin(p.x * getTime());\n    float y = sin(p.y * getTime());\n    float z = sin(p.z * getTime());\n    float r = sin(getTime()) * 0.2f;\n    return x * y * r * z;\n}\n\nfloat prim(vec3 p){\n\treturn length(max(abs(p)-blackSpace,0.0))-blackSpace*.5;\n}\n\nfloat opTwist( vec3 p )\n{\n    float c = cos(p.z * getTime());\n    float s = sin(p.z * getTime());\n    mat2  m = mat2(c, -s, s, c);\n    vec3  q = vec3(m * p.xy, p.z);\n    return prim(q);\n}\n\nfloat opDisplace( vec3 p )\n{\n    float d1 = prim(p);\n    float d2 = displace(p);\n    return d1 + d2;\n}\n\nfloat opBlend( float prim1 , float prim2, float size)\n{\n    float h = clamp( 0.5 + 0.5 * ( prim2 - prim1 ) / size, 0.0, 1.0 );\n    return mix( prim2, prim1, h ) - size * h * ( 1.0 - h );\n}\n\nfloat noisyInHere(vec3 p)\n{\n    float x = cos(p.y * getTime() * .2 + p.y *.3 * opDisplace(p)) / opDisplace(p);\n    float y = sin(p.x * getTime() * .2 - p.x *.3 * opDisplace(p)) / opDisplace(p);\n    float z = cos(p.z * getTime() * .02) + displace(p);\n    z = z * sin ( getTime() * .1f ) * 2.0f;\n    \n    mat2 m = mat2(x, -y, y, x);\n    vec3 q = vec3(m * p.xy, p.z);\n    return prim(q) * z;\n}\n\nfloat opManage(vec3 p, int opCode){\n\tif(opCode == DISPLACE)\n        return opDisplace(p);\n    else if(opCode == TWIST)\n        return opTwist(p);\n    else if(opCode == BEND)\n        return noisyInHere(p);\n    else\n        return 1.0;\n}\n\nfloat trace4(vec3 o, vec3 r, int opCode){\n\tfloat t = 0.0;\n    for(int i=1;i<4;i++){\n    \tvec3 p = o + r * t;\n        float d = opManage(p, opCode);\n        t += d * blackSpace;\n    }\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Generalizing to window\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    //aspect\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    //normalizeing uvs to vec3\n    vec3 norm = normalize(vec3(uv,1.0)) * vec3(1.,1.,1.);\n    vec3 dis = norm;\n\tvec3 bend = norm;\n    vec3 twist = norm;\n    \n    //rotation\n    float rot = getTime() * .5;\n    rot = 0.0f;\n    bend.yx *= mat2(cos(rot),-sin(rot),sin(rot),cos(rot));\n    \n    //cam\n    vec3 o = vec3(cos(getTime()),cos(getTime())*sin(getTime()),sin(getTime()));\n    o = vec3(0,0,-5);\n    \n    //tracing\n    float disTr   = trace4(o, dis  ,DISPLACE);\n   \tfloat twistTr = trace4(o, twist,TWIST);\n    float bendTr  = trace4(o, bend ,BEND);\n    \n    //fog\n    vec4 mixedColor = vec4(sin(getTime()),0.5,cos(getTime()),1);\n    \n    float bendFac = 1.0/ (1.0 + bendTr * bendTr * .1);\n    float twistFac = 1.0/ (1.0 + twistTr * twistTr * .1);\n    float disFac = 1.0/ (1.0 + disTr * disTr * .1);\n    \n    float tr = bendFac;\n\n    float damp = 1.;\n\n    bendFac = mod(bendFac * twistFac * disFac, 1.0f);\n\n    vec4 fc = vec4(bendFac) * twistFac * disFac * mixedColor;\n\t\n    fc = vec4(bendFac) * mixedColor * vec4(3.5);\n    \n    //final output  \n    fragColor = fc;\n    \n}","name":"Image","description":"","type":"image"}]}