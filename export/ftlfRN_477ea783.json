{"ver":"0.1","info":{"id":"ftlfRN","date":"1651517504","viewed":214,"name":"Starry Universe","username":"Wildric","description":"This is an implementation of perlin noise to generate a colorful sky","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin","sky","stars","universe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Nebula 30.0\n#define NebIntensity 4.0\n#define stars 175.0\n#define colIntensity vec3(1.5,.5,1.0)\n//Standard random function and noise to build perlin noise function with addition of octaves\nfloat rand(vec2 uv) {\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 uv, float freq) {\n    uv *= freq;\n    vec2 fractional = fract(uv);\n    vec2 integer = floor(uv);\n    fractional = fractional*fractional*(3.0-2.0*fractional);\n    vec2 down = vec2( rand(integer), rand(integer + vec2(1.0, 0.0)) );\n    vec2 up = vec2( rand(integer + vec2(0.0,1.0)), rand(integer + vec2(1.0, 1.0)) );\n    float x = mix(down.x, down.y, fractional.x);\n    float y = mix(up.x, up.y, fractional.x);\n    return mix(x,y, fractional.y);\n}\n\n\nvec3 perlin(vec2 uv, float amplitudeMul, float freqMul,float amplitude, float freq)  {\n    vec3 col = vec3(noise(uv, 10.0)*10.0);\n    float total = amplitude;\n    for (int i = 0; i<10; i++) {\n        freq *= freqMul;\n        amplitude *= amplitudeMul;\n        col += vec3(noise(uv, freq)*amplitude);\n        total += amplitude;\n    }\n    col/= total;\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;   \n    vec3 r = perlin(uv, 0.5, 2.0, 100.0, 3.0)*colIntensity.r; //arbitrary values in perlin function to generate \"galatical\" colors\n    vec3 g = perlin(uv+0.1, 0.5, 2.0, 100.0, 3.0)*colIntensity.g;\n    vec3 b = perlin(uv + 0.5, 0.5, 4.0, 100.0, 1.0)*colIntensity.b;\n    float fade = pow(length(perlin(uv-0.1, 0.6, 2.0, 10.,10.0)),NebIntensity)*Nebula;\n    vec3 col = vec3(length(r),length(g), length(b))/sqrt(3.0);\n    vec3 sky = vec3(pow(rand(uv), stars));\n    sky += col/fade;\n    fragColor = vec4(sky,1.0);\n}\n","name":"Image","description":"","type":"image"}]}