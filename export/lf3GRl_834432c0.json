{"ver":"0.1","info":{"id":"lf3GRl","date":"1712010047","viewed":47,"name":"Circle x","username":"Cloudy","description":"\ngot it","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["medium"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // set scale; sizes to y resolution\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    // find points a certain distance from circle w/ .5 radius\n    float d = length(uv);\n    d = sin(d * 8.0 + iTime * 10.0) / 8.0;\n    d = abs(d) * 0.5;\n\n    // apply smoothstep to create a smoother transition at the edge of the circles\n    d = smoothstep(0.0, 0.1, d);\n    \n    // Convert to binary color scheme\n    if (d < 0.5) {\n        d = 0.0; // Make transparent\n    } else {\n        d = 1.0; // Make opaque\n    }\n    \n    // Interpolate between blue and yellow based on horizontal position\n    vec3 blue = vec3(0.0, 1.0, 1.0);\n    vec3 yellow = vec3(1.0, 1.0, 0.0);\n    vec3 col = mix(blue, yellow, uv.x);\n    \n    // Set color based on distance value\n    col *= d;\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}