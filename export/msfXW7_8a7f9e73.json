{"ver":"0.1","info":{"id":"msfXW7","date":"1669011171","viewed":188,"name":"BaraBara","username":"akabozu","description":"010","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d","noise","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 r(vec2 p, float t) {\n    return vec2(cos(t) * p.x - sin(t) * p.y, sin(t) * p.x + cos(t) * p.y);\n}\n\nvec3 ry(vec3 p, float t) {\n    return vec3(p.y, r(p.zx, t)).zxy;\n}\n\nuvec3 k = uvec3(0x456789abu, 0x6789ab45u, 0x89ab4567u);\nuvec3 u = uvec3(1, 2, 3);\nconst uint MAX_UINT = 0xffffffffu;\n\nuvec3 h(uvec3 n) {\n    n ^= (n.yzx << u);\n    n ^= (n.yzx >> u);\n    n *= k;\n    n ^= (n.yzx << u);\n    return n * k;\n}\n\nfloat g(vec3 la, vec3 p) {\n    uvec3 n = floatBitsToUint(la);\n    uint i = h(n).x >> 28;\n    float x = i < 8u ? p.x : p.y;\n    float y = i < 4u ? p.y : i == 12u || i == 14u ? p.x : p.z;\n    return ((i & 1u) == 0u ? x : -x) + ((i & 2u) == 0u ? y : -y);\n}\n\nfloat pn(vec3 p) {\n    vec3 n = floor(p);\n    vec3 f = fract(p);\n    float[8] v;\n    for (int k = 0; k < 2; k++) {\n        for (int j = 0; j < 2; j++) {\n            for (int i = 0; i < 2; i++) {\n                v[i + 2 * j + 4 * k] = g(n + vec3(i, j, k), f - vec3(i, j, k)) * 0.70710678;\n            }\n        }\n    }\n    f = f * f * f * (10.0 - 15.0 * f + 6.0 * f * f);\n    float[2] w;\n    for (int i = 0; i < 2; i++) {\n        w[i] = mix(mix(v[4 * i], v[4 * i + 1], f[0]), mix(v[4 * i + 2], v[4 * i + 3], f[0]), f[1]);\n    }\n    return iTime * 0.6 * mix(w[0], w[1], f[2]) + 0.5;\n}\n\nfloat sp(vec3 p) {\n    return length(p) - 1.0;\n}\n\nfloat sc(vec3 p) {\n    return sp(p) + 0.3 * pn(10.0 * p);\n}\n\nvec3 gr(vec3 p) {\n    float e = 0.001;\n    return normalize(vec3(\n        sc(p + vec3(e, 0.0, 0.0)) - sc(p - vec3(e, 0.0, 0.0)),\n        sc(p + vec3(0.0, e, 0.0)) - sc(p - vec3(0.0, e, 0.0)),\n        sc(p + vec3(0.0, 0.0, e)) - sc(p - vec3(0.0, 0.0, e))\n    ));\n}\n\nvoid mainImage(out vec4 f, in vec2 c) {\n    vec2 p = (c.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    float t = iTime * 0.3;\n    vec3 cp = ry(vec3(0.0, 0.0, 2.0), t);\n    vec3 cd = ry(vec3(0.0, 0.0, -1.0), t);\n    vec3 cu = ry(vec3(0.0, 1.0, 0.0), t);\n    vec3 cs = cross(cd, cu);\n    float td = 1.0;\n    vec3 ld = ry(vec3(1.0), t);\n    vec3 r = cs * p.x + cu * p.y + cd * td;\n    vec3 rp = r + cp;\n    r = normalize(r);\n    bool h = false;\n    f.rgb = vec3(0.9);\n    for (int i = 0; i < 20; i++) {\n        if (sc(rp) > 0.001) {\n            rp += sc(rp) * r * 1.0;\n        } else {\n            float a = 0.1;\n            float d = 1.9 * max(dot(normalize(ld), gr(rp)), 0.0);\n            vec3 cl = vec3((dot(normalize(ld), gr(rp))) * 3.9, 0.7, 0.7);\n            f.rgb = cl * (d + a);\n            break;\n        }\n    }\n    f.a = 1.0;\n}\n","name":"Image","description":"","type":"image"}]}