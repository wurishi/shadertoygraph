{"ver":"0.1","info":{"id":"3syGzw","date":"1569870869","viewed":364,"name":"unmirrored X Basic Quad Truchet","username":"tutmann","description":"Truchet with proper (unmirrored) texture y coordinate.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Truchet with proper (unmirrored) texture y coordinate.\n\n// This is just a slight mod of: https://www.shadertoy.com/view/3lBXWK\n\n// Basic Quad Truchet by Martijn Steinrucken aka BigWings - 2019\n// countfrolic@gmail.com\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// \n// This is the end result of one of my video tutorials\n// on YouTube that you can see here:\n// https://youtu.be/2R7h76GoIJM\n\nfloat Hash21(vec2 p) {\n\tp = fract(p*vec2(234.34, 435.345));\n    p += dot(p, p+34.23);\n    return fract(p.x*p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec2 UV = fragCoord.xy/iResolution.xy;\n    \n    vec3 col = vec3(0);\n    \n    // uv += iTime*.05;\n    uv *= 5.;\n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    float n = Hash21(id); // random number between 0 and 1\n    \n    float width = .3*UV.y;\n    \n    if(n<.5) gv.x *= -1.;\n    float d = abs(abs(gv.x+gv.y)-.5);\n    vec2 cUv = gv-sign(gv.x+gv.y+.001)*.5;\n    d = length(cUv);\n    float mask = smoothstep(.01, -.01, abs(d-.5)-width);\n\tfloat angle = atan(cUv.x, cUv.y); // -pi to pi\n    float checker = mod(id.x+id.y, 2.)*2.-1.;\n    float flow = sin(iTime+checker*angle*10.);\n    \n    float x = (checker*angle/(2.*1.57079632679)-iTime*.3);\n    float y = (abs(d)-(0.5-width))*.5/width;\n    float checker_or_n = (checker - .5) * (n - .5);\n    if (checker_or_n > 0.) y = 1. - y;\n    \n    \n    vec2 tUv = vec2(x, y);\n    col += texture(iChannel0, tUv).rgb*mask;\n    col *= 1. - abs(1. - 2.*tUv.y);\n    \n    \n    // if(gv.x>.48 || gv.y>.48) col = vec3(1,0,0);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}