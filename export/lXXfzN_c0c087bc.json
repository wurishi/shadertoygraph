{"ver":"0.1","info":{"id":"lXXfzN","date":"1728084992","viewed":47,"name":"OemfoeVFX1","username":"oemfoe","description":"Made during the genious live set of hrmny during Deadline 2024.\n\nClick the mouse to control the frequency response parameters","likes":0,"published":3,"flags":36,"usePreview":0,"tags":["oemfoevfx1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 M = iMouse.xy / iResolution.xy;\n    vec2 uv2 = uv;\n    \n    vec4 buf = texture(iChannel1, uv);\n    \n    float beat = texture(iChannel0, vec2(M.x, 0.25)).x * sqrt(M.x);\n    float beat2 = texture(iChannel0, vec2(M.x, 0.25)).x * sqrt(M.x);\n    vec4 st = texture(iChannel0, vec2(uv.x, 0.25));\n    \n    uv.x -= 0.5;\n    uv.y -= 0.5;\n    uv.y = -uv.y;\n    uv.y += 0.5;\n    float y2 = uv.y;\n    uv.x = uv.x / uv.y;\n    uv.y = 1./y2;\n    uv.x += 0.5;\n    uv.y += iTime / 2. + beat;\n    uv.x += beat2;\n    bool checker = mod(float(int((uv.x + .5) * 10.) + int(uv.y * 10.)), 2.) == 0.;\n    \n\n    // Output to screen\n    fragColor = vec4(buf.xyz, 1.0);\n    \n    if (checker)\n        fragColor += vec4(0.2) * smoothstep(1., 0., uv2.y);\n    \n    fragColor += st * sqrt(uv2.x);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat2 rot2D(float phi) {\n    return mat2(\n        cos(phi), sin(phi),\n        -sin(phi), cos(phi)\n    );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 M = iMouse.xy / iResolution.xy;\n    \n    vec4 texel = texture(iChannel0, vec2(uv.x, 0.75));\n    vec2 uv2 = uv;\n    \n    float beat = texture(iChannel0, vec2(M.x, 0.25)).x * sqrt(M.x);\n    beat = smoothstep(0.0, 0.3, beat);\n    \n    uv2 -= 0.5;\n    uv2 = rot2D(0.2 * beat) * uv2;\n    uv2 += 0.5;\n    //uv2.y -= 0.005;\n    \n    vec4 buf = texture(iChannel1, uv2) + vec4(0.01, 0.02, 0.04, 0.);\n\n    // Output to screen\n    fragColor = buf * 0.95;\n    fragColor += vec4(1. - smoothstep(0., 0.005, abs(texel.r - uv.y)));\n    //fragColor += 0.1 * vec4(beat);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat2 rot2D(float phi) {\n    return mat2(\n        cos(phi), sin(phi),\n        -sin(phi), cos(phi)\n    );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 M = iMouse.xy / iResolution.xy;\n    \n    vec4 texel = texture(iChannel0, vec2(uv.x, 0.75));\n    vec2 uv2 = uv;\n    \n    float beat = texture(iChannel0, vec2(M.x, 0.25)).x * sqrt(M.x);\n    beat = smoothstep(0.0, 0.3, beat);\n    \n    uv2 -= 0.5;\n    uv2 = rot2D(0.2 * beat) * uv2;\n    uv2 += 0.5;\n    //uv2.y -= 0.005;\n    \n    vec4 buf = texture(iChannel1, uv2) + vec4(0.01, 0.02, 0.04, 0.);\n\n    // Output to screen\n    fragColor = buf * 0.95;\n    fragColor += vec4(1. - smoothstep(0., 0.005, abs(texel.r - uv.y)));\n    //fragColor += 0.1 * vec4(beat);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}