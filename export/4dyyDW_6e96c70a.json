{"ver":"0.1","info":{"id":"4dyyDW","date":"1521939738","viewed":576,"name":"rainbow noise","username":"violetforest","description":"rainbow hue noise","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["rainbow","hue"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define OCTAVES 6\n\nfloat random (in vec2 uv) {\n    return fract(sin(dot(uv.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat noise (in vec2 uv) {\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n\nfloat fbm (in vec2 uv) {\n    float value = 0.0;\n    float amplitude = .5;\n    float frequency = 0.;\n\n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitude * noise(uv);\n        uv *= 2.;\n        amplitude *= .5;\n    }\n    return value;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 col = 0.5 * .5 + cos(iTime + 6. * fbm(uv * atan(3.0))+ vec3(0,23,21));\n\t\n    col += fbm(uv * atan(3.0));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}