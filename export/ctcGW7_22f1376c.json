{"ver":"0.1","info":{"id":"ctcGW7","date":"1682557720","viewed":31,"name":"float2(uv) to RGBA and reverse","username":"alenwesker","description":"converts a float2 uv to RGBA in order to retain as much resolution as possible (instead of 0-255), with a method to convert it back;  Used for store uv in GBuffer with enough precision","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["function"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Reference: https://www.shadertoy.com/view/WsVGzm\n#define float2 vec2\n#define float4 vec4\n#define fmod mod\n\n\n/*float2 RGBAToFloat2(float4 rgba, float scale)\n{\n    return rgba.rg + rgba.ba / scale;\n}\n\nfloat4 Float2ToRGBA(float2 v, float scale)\n{\n    float4 result;\n    result.rg = v.xy;\n    result.ba = fmod(v.xy * scale, 1.0f);\n    result.rg -= result.ba;\n    return result;\n}*/\n\nfloat2 RGBAToFloat2(float4 rgba, float scale)\n{\n    return rgba.rg + rgba.ba / scale;\n}\n\nfloat4 Float2ToRGBA(float2 v, float scale)\n{\n    float4 result;\n    result.rg = floor(v.xy * scale);\n    result.ba = fmod(v.xy * scale, 1.0f) * scale;\n    //result.rg -= result.ba;\n    return result / scale;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float2 inp = uv.xx;\n    \n    float scale = 255.0;\n    \n    vec4 rgba = Float2ToRGBA(inp,scale);\n    \n    rgba = floor(rgba * 255.0f) / 255.0f; //Make that to int\n    \n    float2 v = RGBAToFloat2(rgba,scale);\n\n    if(uv.y > 0.75)\n        // RGB encoded float\n    \tfragColor = vec4(rgba);\n   \telse if(uv.y > 0.5)\n        // decoded RGB to float\n        fragColor = v.xxxx;\n    else if(uv.y > 0.25)\n        // Actual input\n        fragColor = vec4(inp.x,inp.x,inp.x,1.0);\n    else\n    {\n        //Difference\n        float diff = abs(inp.x - v.x)*20.0f; //mul a big value to reveal trivial difference\n        fragColor = vec4(diff,diff,diff,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}