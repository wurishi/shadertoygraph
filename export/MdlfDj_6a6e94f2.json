{"ver":"0.1","info":{"id":"MdlfDj","date":"1498247775","viewed":136,"name":"Bezier Colors","username":"joshforisha","description":"A demo of color-shifting using bezier curves.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 green = vec3(0.0, 1.0, 0.0);\nvec3 pinkSalmon = vec3(1.000, 0.589, 0.718);\nvec3 white = vec3(1.0, 1.0, 1.0);\nvec3 wisteria = vec3(0.620, 0.402, 0.694);\n\nfloat cerp (float a, float b, float c, float d, float u) {\n    return (a * pow(1.0 - u, 3.0)) +\n        (3.0 * b * pow(1.0 - u, 2.0) * u) +\n        (3.0 * c * (1.0 - u) * pow(u, 2.0)) +\n        (d * pow(u, 3.0));\n}\n\nfloat cirp (vec4 v, float t) {\n    return v[0]*pow(t, 3.0) + v[1]*pow(t, 2.0) + v[2]*t + v[3];\n}\n\nvec4 infl (float a, float b, float c, float d) {\n    return vec4(\n        d - 3.0*c + 3.0*b - a,\n        3.0*c - 6.0*b + 3.0*a,\n        3.0*b - 3.0*a,\n        a\n    );\n}\n\nfloat slope (float a, float b, float c, float t) {\n    return 1.0 / (3.0*a*pow(t, 2.0) + 2.0*b*t + c);\n}\n\nfloat cubicBezier (vec4 curve, float u) {\n    vec4 ix = infl(0.0, curve[0], curve[2], 1.0);\n    vec4 iy = infl(0.0, curve[1], curve[3], 1.0);\n    \n    float v = u;\n    int nRefinements = 10;\n    for (int i = 0; i < nRefinements; i++) {\n        float x = cirp(ix, v);\n        float slp = slope(ix[0], ix[1], ix[2], v);\n        v = clamp(v - ((x - u) * slp), 0.0, 1.0);\n    }\n    \n    return cirp(iy, v);\n}\n\nfloat plot (float val, float pct) {\n    return smoothstep(pct - 0.02, pct, val) -\n           smoothstep(pct, pct + 0.02, val);\n}\n\n// CURVES!\nvec4 easeInOutCirc = vec4(0.785, 0.135, 0.15, 0.86);\nvec4 easeInOutCubic = vec4(0.645, 0.045, 0.355, 1.000);\nvec4 easeInOutExpo = vec4(1.0, 0.0, 0.0, 1.0);\nvec4 easeInOutQuad = vec4(0.455, 0.03, 0.515, 0.955);\nvec4 easeInOutQuart = vec4(0.77, 0.0, 0.175, 1.0);\nvec4 easeInOutQuint = vec4(0.86, 0.0, 0.07, 1.0);\nvec4 easeInOutSine = vec4(0.445, 0.05, 0.55, 0.95);\n\nvec4 easeInCirc = vec4(0.6, 0.04, 0.98, 0.335);\nvec4 easeInCubic = vec4(0.55, 0.055, 0.675, 0.19);\nvec4 easeInExpo = vec4(0.95, 0.05, 0.795, 0.035);\nvec4 easeInQuad = vec4(0.55, 0.085, 0.68, 0.53);\nvec4 easeInQuart = vec4(0.895, 0.03, 0.685, 0.22);\nvec4 easeInQuint = vec4(0.755, 0.05, 0.855, 0.06);\nvec4 easeInSine = vec4(0.47, 0.0, 0.745, 0.715);\n\nvec4 easeOutCirc = vec4(0.075, 0.82, 0.165, 1.0);\nvec4 easeOutCubic = vec4(0.215, 0.61, 0.355, 1.0);\nvec4 easeOutExpo = vec4(0.19, 1.0, 0.22, 1.0);\nvec4 easeOutQuad = vec4(0.25, 0.46, 0.45, 0.94);\nvec4 easeOutQuart = vec4(0.165, 0.84, 0.44, 1.0);\nvec4 easeOutQuint = vec4(0.23, 1.0, 0.32, 1.0);\nvec4 easeOutSine = vec4(0.39, 0.575, 0.565, 1.0);\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n\n\t// Change this to any of the above curves:\n\tvec4 curve = easeInOutQuad;\n\n\t// Set speed, in seconds:\n\tfloat speed = 2.0;\n    \n    vec2 st = fragCoord.xy / float(iResolution);\n    float t = 1.0 - abs((mod(iTime, 2.0 * speed) - speed) / speed);\n    float timed = cubicBezier(curve, t);\n    float plotted = plot(st.y * 1.778, cubicBezier(curve, st.x));\n    float indicated = plot(st.x, t);\n    \n    vec3 baseColor = mix(wisteria, pinkSalmon, timed);\n    vec3 bgColor = mix(baseColor, white, indicated);\n    vec3 color = mix(bgColor, green, plotted);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}