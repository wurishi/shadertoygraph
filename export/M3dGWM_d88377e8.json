{"ver":"0.1","info":{"id":"M3dGWM","date":"1716579479","viewed":137,"name":"NotSoGreeeen - Chroma. Aberrat.","username":"NotSoGreeeen","description":"Chromatic abberation - achieved by simply moving the r and g channels over a little bit, causing fun artifacts","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["chromaticaberration","texture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 Aberrate(vec2 uv, float mult) {\n    vec3 col = vec3(0.);\n   \n    col.x = texture(iChannel0, vec2(uv.x + sin(iTime) * mult, uv.y)).x;\n    col.y = texture(iChannel0, vec2(uv.x + cos(iTime) * mult, uv.y)).y;\n    col.z = texture(iChannel0, uv).z;\n    \n    return col;\n}\n   \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = Aberrate(uv, .005);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}