{"ver":"0.1","info":{"id":"M3l3RX","date":"1707776399","viewed":156,"name":"Frequency Function","username":"zadkielmodeler","description":"Conical Gradient with a 6x frequency applied to it.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["gradient","cone","frequency","conical"],"hasliked":0,"parentid":"lXsGRX","parentname":"Fork Simple Con zadkielmod 587"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI acos(-1.0)\n\nfloat conicalGradient(vec2 uv, vec2 center) {\n    vec2 offset = uv - center;\n    return atan(-offset.y, -offset.x) / (2.0 * PI) + 0.5;\n}\n\n\n\nfloat applyFrequency(float value, float frequency, float amplitude) {\n    return sin(value * frequency) * amplitude;\n}\n\n\nvec3 conicalColor (vec2 uv)\n{\n\n    vec2 center = vec2(0,0);\n    uv -= 0.5;\n    uv *= 2.0;\n    \n    //fix for aspect ratio.\n    uv.x *= iResolution.x / iResolution.y;\n    \n    \n    float conical = conicalGradient(uv, center);\n\n    vec3 col = vec3(1.0-conical,0,0);\n    return col;\n}\n\n\n\n//frequncy similar to genetica's frequency function\nvec3 frequency(float gradient, float frequency, float amplitude, float phase) {\n\n \n    // Apply the frequency effect\n    float freqEffect = applyFrequency((gradient * 2.0 * PI) + phase, frequency, amplitude);\n    \n    // Mixing the conical gradient with the frequency effect\n    // The 0.5 offsets the sine wave to only get positive values\n    float combined = 0.5 + 0.5 * freqEffect;\n\n    vec3 col = vec3(1.0 - combined, 0, 0);\n    return col;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //vec2 tileduv = tile(uv);\n\n    vec3 color = conicalColor(uv);\n        \n    color = frequency(color.r, 6.0, 1.0, 0.27);\n\n    \n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}