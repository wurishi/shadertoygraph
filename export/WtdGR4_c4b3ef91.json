{"ver":"0.1","info":{"id":"WtdGR4","date":"1575754668","viewed":133,"name":"Petits ronds qui font malauxyeux","username":"Windless","description":"Exercice from the shader book.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uniform float fGlobalTime; // in seconds\nuniform vec2 v2Resolution; // viewport resolution (in pixels)\n\n#define N 20.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy.x;\n  \n  vec2 ouv = fract(uv * N) - 0.5 ;\n  \n  float t = fract(iTime / 2.0);\n  \n  float dx = clamp(t, 0.0, 0.25)  * (mod(floor(uv.y * N ),2.0) * 2.  - 1.);\n  float dy = (clamp(t, 0.25, 0.50) - 0.25) * (mod(floor(uv.x * N ),2.) * 2.  - 1.);\n  dx -= (0.50 - clamp(t, 0.50, 0.75))  * (mod(floor(uv.y * N ),2.) * 2.  - 1.);\n  dy -= (0.75 - clamp(t, 0.75, 1.00)) * (mod(floor(uv.x * N ),2.) * 2.  - 1.);\n    \n  uv.x += dx / N * 4.0;\n  uv.y += dy / N * 4.0;\n  \n  vec2 xy = floor(uv * N);\n  uv = fract(uv * N) - 0.5 ;\n\n  float r = length(ouv) ;\n  r = smoothstep(0.20, 0.25, r) - smoothstep(0.30, 0.35, r);\n\n  float v = length(uv) ;\n  v = smoothstep(0.20, 0.25, v) - smoothstep(0.30, 0.35, v);\n  \n  fragColor = vec4(r,v,1,1);\n}","name":"Image","description":"","type":"image"}]}