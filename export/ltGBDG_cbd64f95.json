{"ver":"0.1","info":{"id":"ltGBDG","date":"1543829492","viewed":173,"name":"Clownish Face","username":"Uiharu","description":"Err, just for fun. It's a very frequently-used funny emoji in china forum. XD\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat d_eyes(vec2 p, float p1, float p2, float s)\n{\t//syes\n    vec2 t = vec2(0.95 * cos(s), -0.38 + 1.4 * sin(s));\n    return pow(0.1 / length(p-vec2(p1+t.x,t.y)), 4.0) + pow(0.1 / length(p-vec2(p2+t.x,t.y)), 4.0);\n}\nfloat d_cheek(vec2 p, float s)\n{\t//cheek\n    vec2 p2 = vec2(0.2 * p.x, p.y - 0.2);\n    return min(pow(s/length(p2+vec2(0.3,0.0)),5.0),1.0) + min(pow(s/length(p2-vec2(0.3,0.0)),5.0),1.0);\n}\nstruct cur{vec4 OA; float rad;};\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    cur C[14];\n    vec4 col1 = vec4(1.0, 0.8, 0.1, 1.0);\t//curve color\n    vec4 col2 = vec4(0.8, 0.3, 0.1, 1.0);\t//cheek color\n    float cy = sin(3.141593 * iTime) - 0.8;\n    cy = max(0.0, cy);\n    C[0] = cur(vec4(0.0, 0.0, 0.0, -1.7), 0.5);\n    C[1] = cur(vec4(0.0, 0.15, 0.0, -1.56), 0.47);\n    C[2] = cur(vec4(-1.0, 0.4, -1.0, 1.2), 0.4);\n    C[3] = cur(vec4(-1.0, 0.2, -1.0, 0.85), 0.3);\n    C[4] = cur(vec4(-1.65, 0.6, -1.68, 0.49), 0.45);\n    C[5] = cur(vec4(-0.35, 0.59, -0.32, 0.48), 0.46);\n    C[6] = cur(vec4(1.0, 0.4, 1.0, 1.2), 0.4);\n    C[7] = cur(vec4(1.0, 0.2, 1.0, 0.85), 0.3);\n    C[8] = cur(vec4(1.65, 0.6, 1.68, 0.49), 0.45);\n    C[9] = cur(vec4(0.35, 0.59, 0.32, 0.48), 0.46);\n    C[10] = cur(vec4(-1.2, 1.4 + cy, -1.15, 1.9 + cy), 0.42);\n    C[11] = cur(vec4(-1.2, 1.2 + cy, -1.19, 1.78 + cy), 0.31);\n    C[12] = cur(vec4(1.2, 1.4, 1.15, 1.9), 0.42);\n    C[13] = cur(vec4(1.2, 1.2, 1.19, 1.78), 0.31);\n    \n    vec3 pos = 6.0 * vec3(vec2(fragCoord/iResolution.xy - vec2(0.5)), 0.0);\n    pos.x = pos.x * (iResolution.x / iResolution.y);\n    float a = 6.283185 * fract(0.5 * iMouse.x / iResolution.x);\n    vec2 sita = 1.0 / vec2(cos(a), sin(a));\n    pos = mat3(vec3(sita.x, 0.0, sita.y), vec3(0.0, 1.0, 0.0), vec3(-sita.y, 0.0, sita.x)) * pos;\n    \n    float light = pow(0.02 / d_cir(vec2(0.0, 0.0), 2.0, pos.xy), 2.0);\n    light += d_eyes(pos.xy, -1.0, 1.0, 3.0 * abs(fract(0.2 * iTime) - 0.5) + 0.85);\n\tfor(int i = 0; i < 14; i++)\n    \tlight += pow(0.02 / d_arc(C[i].OA.xy, C[i].OA.zw, C[i].rad, pos.xy), 2.0);\n    float cheek = d_cheek(pos.xy, 0.1 * (0.1 * sin(iTime) + 0.95));\n    \n    fragColor = clamp(light * col1 + cheek * col2, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float d_arc(vec2 O, vec2 A, float sita, vec2 position)\n{\t//弧线函数\n\tsita = 3.14159265 * min(sita, 1.0);\n\tvec2 r = vec2(cos(sita), sin(sita));\n\tvec2 OA = A - O;\n\tfloat R_c = length(OA);\n\tvec2 OP = position - O;\n\tvec2 OB = r * mat2(OA.x, -OA.y, OA.y, OA.x);\n\tvec2 OC = r * vec2(1.0, -1.0) * mat2(OA.x, -OA.y, OA.y, OA.x);\n\tif(r.x < dot(OP, OA) / (length(OP) * R_c))\n\t\treturn abs(length(OP) - R_c);\n\telse\n\t\treturn min(distance(OP, OB), distance(OP, OC));\n}\nfloat d_cir(vec2 center, float rad, vec2 position)\n{\t//圆环函数\n\tfloat OP = length(position - center);\n\treturn abs(OP - rad);\n}","name":"Common","description":"","type":"common"}]}