{"ver":"0.1","info":{"id":"tdjcRy","date":"1586906371","viewed":196,"name":"#005 infinite spaceship","username":"9re","description":"practicing primitives","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["raytracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nconst float r0 = sqrt(2.)/2.;\nconst float r1 = sqrt(2. - sqrt(2.))/2.;\nconst float a1 = 2.0 * r1;\nconst float r2 = sqrt(2. + sqrt(2.))/2.;\nconst mat2 mat45 = mat2(r0, r0, -r0, r0);\nconst mat2 mat22_5 = mat2(r2, r1, -r1, r2);\nconst mat2 mat90 = mat2(0, 1, -1, 0);\nconst vec3 c0 = vec3(.811,.819,.666);\nconst vec3 c1 = c0 * 0.7;\n\nfloat box(vec2 r, vec2 p)\n{\n    return length(max(abs(p) - r, 0.));\n}\n\nvoid tile(out vec4 fragColor, in vec2 uv)\n{\n    vec3 c = c0;\n    c = mix(vec3(1.0), c, smoothstep(0., 0.01, box(vec2(0.46, 0.1), uv - vec2(0.5, 0.1))));\n    c = mix(c1, c, smoothstep(0., 0.01, box(vec2(0.06, 0.32), uv - vec2(0.5, 0.6)) - 0.015));\n    c = mix(vec3(0.0), c, smoothstep(0., 0.01, box(vec2(0.06, 0.32), uv - vec2(0.5, 0.6))));\n    \n    c = mix(c1, c, smoothstep(0., 0.01, box(vec2(0.04, 0.07), uv - vec2(0.32, 0.6)) - 0.015));\n    c = mix(vec3(0.9), c, smoothstep(0., 0.01, box(vec2(0.04, 0.07), uv - vec2(0.32, 0.6))));\n    \n    c = mix(c1 * 0.9, c, smoothstep(0., 0.01, box(vec2(0.004, 0.02), uv - vec2(0.1, 0.9)) - 0.015));\n    c = mix(c1 * 0.9, c, smoothstep(0., 0.01, box(vec2(0.004, 0.02), uv - vec2(0.1, 0.3)) - 0.015));\n    \n    c = mix(c1 * 0.9, c, smoothstep(0., 0.01, box(vec2(0.002, 0.12), uv - vec2(0.95, 0.8)) - 0.001));\n    c = mix(c1 * 0.9, c, smoothstep(0., 0.01, box(vec2(0.002, 0.12), uv - vec2(0.95, 0.4)) - 0.001));\n    \n    fragColor = vec4(c, 1.0);\n}\n\nvoid map(out vec4 fragColor, in vec2 uv)\n{\n    vec3 ro = vec3(0.0, 0.0, -1.0 - iTime*0.2);\n    vec3 rd = normalize(vec3(uv, -1));\n    float e = 1. + sqrt(2.);\n    vec4 plane = vec4(e, 1.0, 0.0, -e);\n    float s = dot(rd, plane.xyz);\n    if (s > 0.001) {\n        float t = - (plane.w + dot(ro, plane.xyz)) / dot(rd, plane.xyz);\n        vec3 q = ro + t * rd;\n        q.x = -q.x;\n        vec2 st = (mod(-q.xz/a1 + r1, 1.0) - 0.5)/r1 + 0.5;\n        st.y *= a1;\n        tile(fragColor, mod(st, 1.0));\n        fragColor *= smoothstep(0.01, 1.0, 1.5 / t);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2. * uv - 1.;\n    uv.y *= -iResolution.y/iResolution.x;\n    uv *= mat22_5;\n    \n    if (uv.x * uv.y < 0.) {\n        uv *= mat90;\n    }\n    if (uv.x < 0. && uv.y < 0.) {\n\t    uv = -uv;\n    }\n    if (uv.x > 0. && uv.y > 0.) {\n        if (uv.y > uv.x) {\n           uv *= mat45;\n        }\n        map(fragColor, uv);\n    }\n}","name":"Image","description":"","type":"image"}]}