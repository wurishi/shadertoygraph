{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 n) {\n\tconst vec2 d = vec2(0.0, 1.0);\n\tvec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) {\n   \n    vec2 dirs[4];\n    dirs[0] = vec2(0., 0.3);\n    dirs[1] = vec2(0.5, 0.6);\n    dirs[2] = vec2(-0.1, 0.9);\n    dirs[3] = vec2(0.7, 1.2);\n    \n    float total = 0.;\n    float amplitude = 0.5;\n\n\tfor (int i = 0; i <4; i++) {\n        total += noise(n +iTime*dirs[i]) * amplitude;\n\t\tn += n;\n\t\tamplitude *= 0.5;\n\t}\n\treturn total;\n}\n\nfloat clouds(vec2 n) {\n    float ampl = noise(n + vec2(iTime, iTime*0.1)*0.1);\n  \n    float strips= sin(iTime*1. + n.y*15. + n.x*4. + 8.*noise(vec2(0, n.y*1.)));\n    float c = ampl *0.2*strips + 1.;\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy-vec2(0.5, 0.);\n\n    vec3 r=vec3(uv.x, uv.y, 1);\n    r *= 2./ uv.y;\n\n    float fog = clamp(0., 1., exp(-(r.z-8.)*0.2));\n\n    vec4 fogColor = vec4(0.8, 0.9, 1.0, 1.);\n    float c = fbm(r.xz)*1.2;\n    c *= clouds(r.xz);\n    c = mix(0.2, c, fog);\n    vec4 res = mix(vec4(0.8,0.8,1,0), vec4(0.2,0.2,1,0), c);\n\tfragColor = vec4(res);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mlf3DX","date":"1425598735","viewed":312,"name":"Fleecy clouds","username":"andregc","description":"Simple clouds using 2d noise and some manipulation with its intencity","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","clouds","sky"],"hasliked":0,"parentid":"","parentname":""}}