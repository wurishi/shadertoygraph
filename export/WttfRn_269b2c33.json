{"ver":"0.1","info":{"id":"WttfRn","date":"1612103326","viewed":275,"name":"Distorted Spinning Stars","username":"gaboose","description":"Split the origin point into two for distance and angle in polar coordinates and voila!","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["stars","night","hash","gravity","distorted"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define HASHSCALE1 .1031\n\n// From Dave_Hoskins (https://www.shadertoy.com/view/4djSRW)\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nconst float PI = 3.1415;\n\n// From HuaTham (https://stackoverflow.com/a/26070411)\nfloat atan2(in float y, in float x)\n{\n    bool s = (abs(x) > abs(y));\n    return mix(PI/2.0 - atan(x,y), atan(y,x), s);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 centerD = vec2(.2, .8) * iResolution.y;\n    vec2 centerA = vec2(-.2, 0.) * iResolution.y;\n    \n    vec2 rCoord = vec2(\n        distance(fragCoord, centerD),\n        atan2(fragCoord.x-centerA.x, fragCoord.y-centerA.y)\n    );\n    \n    rCoord.y -= iTime*0.1;\n    \n    vec2 rCoordFloor = vec2(floor(rCoord.x *0.75), 0.);\n    rCoordFloor.y = floor(rCoord.y * 20. * pow(rCoordFloor.x, 0.5));\n    \n    float v = pow(hash12(rCoordFloor*100.), 200.);\n    \n    vec3 col = vec3(v);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}