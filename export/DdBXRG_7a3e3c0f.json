{"ver":"0.1","info":{"id":"DdBXRG","date":"1670428054","viewed":100,"name":"Split RGB Annotated","username":"pixelbeat","description":"Split RGB formatted with comments.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["colors"],"hasliked":0,"parentid":"ssVczD","parentname":"Split RGB"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f(float x) {\n    // Return 1.0 - cos(3.141 * x)^3\n    return 1.0 - pow(cos(3.141 * x), 3.0);\n}\n\nfloat circ(float x, float y, float r) {\n    // Return f(clamp(1.0 - sqrt((mod(x, 2.0*r)/r-1.0)^2 + (mod(y,2.0*r)/r-1.0)^2), 0.0, 1.0))\n    return f(clamp(\n        1.0 - sqrt(\n            pow(mod(x, 2.0 * r) / r - 1.0, 2.0) + \n            pow(mod(y, 2.0 * r) / r - 1.0, 2.0)\n        ),\n        0.0,\n        1.0\n    ));\n}\n\nfloat distorted(float x, float y, float r, float cx, float cy, float intensity) {\n    // Return circ(\n    //     (x - cx) * intensity + cx,\n    //     (y - cy) * intensity + cy,\n    //     r\n    // )\n    return circ(\n        (x - cx) * intensity + cx,\n        (y - cy) * intensity + cy,\n        r\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Compute the circle radius and fragment coordinates\n    float r = iResolution.x / 20.0;\n    float x = fragCoord.x + iTime * r;\n    float y = fragCoord.y;\n    float cx = iResolution.x / 2.0 + iTime * r;\n    float cy = iResolution.y / 2.0;\n    \n    // Set the fragment color using the distorted function\n    fragColor.r = distorted(x, y, r, cx, cy, 1.05);\n    fragColor.g = distorted(x, y, r, cx, cy, 1.10);\n    fragColor.b = distorted(x, y, r, cx, cy, 1.15);\n}\n","name":"Image","description":"","type":"image"}]}