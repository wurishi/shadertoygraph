{"ver":"0.1","info":{"id":"mtfcRs","date":"1691039333","viewed":44,"name":"in-between","username":"zadgy5534","description":"going in between the piled layers","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["patterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 rotate3D(float angle, vec3 axis){\n    vec3 a = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float r = 1.0 - c;\n    return mat3(\n        a.x * a.x * r + c,\n        a.y * a.x * r + a.z * s,\n        a.z * a.x * r - a.y * s,\n        a.x * a.y * r - a.z * s,\n        a.y * a.y * r + c,\n        a.z * a.y * r + a.x * s,\n        a.x * a.z * r + a.y * s,\n        a.y * a.z * r - a.x * s,\n        a.z * a.z * r + c\n    );\n}\n\nvoid mainImage( out vec4 o, in vec2 FC )\n{\n    float i,j,d=.1,e=.1; vec3 p,q;\n    o=vec4(0.);\n    \n    for(i=0.;i++<128.&&d>1e-4;){\n        p=vec3((FC.xy-.5*iResolution.xy)/iResolution.y,1)*e;\n        p.z-=2.; \n        p*=rotate3D(6.+iTime*.2,vec3(-1));\n        \n        for(j=0.;j<64.;j++){\n            p=abs(abs(p)-.027)-.01,\n            q=vec3(p.x*p.x-p.y*p.y,p.x*p.y, p.z);\n            d=length(q);\n            d-=dot(p,p)/1e4;\n        }e+=d;\n        \n    }o+=vec4(1.-log(p*j),1)*4./i;\n}","name":"Image","description":"","type":"image"}]}