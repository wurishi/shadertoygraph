{"ver":"0.1","info":{"id":"lljSRV","date":"1445130255","viewed":491,"name":"Smooth Floor","username":"anastadunbar","description":"Smooth math.floor();","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["math","floor","steps","smooth","power","step","formula","ceil"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float smooth_floor(float x, float c) {\n    float a = fract(x);\n    float b = floor(x);\n    return ((pow(a,c)-pow(1.-a,c))/2.)+b;\n}\n\nfloat smooth_ceil(float x, float c) {\n    float a = fract(x);\n    float b = ceil(x);\n    return ((pow(a,c)-pow(1.-a,c))/2.)+b;\n}\n\nfloat smooth_step(float a, float b, float c) {\n    return clamp(1.-((a-b)*c),0.,1.);\n}\n\nfloat clamps(float x) {\n    return clamp(x,0.,1.);\n}\n\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float time = iTime;\n    \n    float size = 5.; //How many to see\n    float sharpness = (sin(time*2.)*8.)+11.; //Animate floor sharpness\n    float formula = smooth_floor(uv.x*size,sharpness)/size; //Use the smooth_floor\n    float draw1 = formula; //Copy\n    float line_s = 30.; //Line sharpness\n    draw1 = clamps((smooth_step(uv.y+(1./line_s),draw1,line_s/2.)-smooth_step(uv.y+(1./line_s),draw1,line_s))*2.); //Use copy and draw graph\n\tfragColor = vec4(draw1+(hsl2rgb(vec3(formula,.6,0.3))-.5),1.0);\n}","name":"","description":"","type":"image"}]}