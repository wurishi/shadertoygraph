{"ver":"0.1","info":{"id":"stf3zs","date":"1622628900","viewed":319,"name":"ripple demo of radar","username":"zengqh","description":"ripple demo","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define green vec3(0.0,.3,0.6)\n\n// returns a vec3 color from every pixel requested.\n// Generates a BnW Ping on normalized 2d coordinate system\nvec3 RadarPing(in vec2 uv, in vec2 center, in float innerTail, \n               in float frontierBorder, in float timeResetSeconds, \n               in float radarPingSpeed, in float fadeDistance, float t)\n{\n    vec2 diff = center-uv;\n    float r = length(diff);\n    float time = mod(t, timeResetSeconds) * radarPingSpeed;\n   \n    float circle;\n    // r is the distance to the center.\n    // circle = BipCenter---//---innerTail---time---frontierBorder\n    //illustration\n    //https://sketch.io/render/sk-14b54f90080084bad1602f81cadd4d07.jpeg\n    circle += smoothstep(time - innerTail, time, r) * smoothstep(time + frontierBorder,time, r);\n\tcircle *= smoothstep(fadeDistance, 0.0, r); // fade to 0 after fadeDistance\n        \n    return vec3(circle);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n    //normalize coordinates \n    vec2 uv = fragCoord.xy / iResolution.xy; //move coordinates to 0..1\n    uv = uv.xy*2.; // translate to the center\n    uv += vec2(-1.0, -1.0);\n    uv.x *= iResolution.x/iResolution.y; //correct the aspect ratio\n    \n\tvec3 color;\n    // generate some radar pings\n    float fadeDistance = 0.8;\n    float resetTimeSec = 3.0;\n    float radarPingSpeed = 0.2;\n    vec2 greenPing = vec2(0.0, 0.0);\n    color += RadarPing(uv, greenPing, 0.08, 0.00025, resetTimeSec, radarPingSpeed, fadeDistance, iTime) * green;\n    color += RadarPing(uv, greenPing, 0.08, 0.00025, resetTimeSec, radarPingSpeed, fadeDistance, iTime + 1.) * green;\n    color += RadarPing(uv, greenPing, 0.08, 0.00025, resetTimeSec, radarPingSpeed, fadeDistance, iTime + 2.) * green;\n    //return the new color\n\tfragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}