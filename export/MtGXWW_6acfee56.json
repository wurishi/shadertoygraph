{"ver":"0.1","info":{"id":"MtGXWW","date":"1484315411","viewed":108,"name":"Pixel_Waves","username":"McShip","description":"Here, have some pixelized sea","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sea","pixels","chill"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void makeSinus(out vec4 color, in vec2 pixCoords, float ratio){\n\t\n    float position = iResolution.y * 0.3;\n   \tfloat frequency = 0.0001;\n   \tfloat amplitude = 3.0;\n    vec4 deltaColor = vec4(0.0, 0.0, 1.0, 1.0);\n   \tfloat deltaCamera = 50.0;\n    \n    float sinus = (position / ratio) + sin(pixCoords.x / (frequency / ratio) + iTime) * (amplitude * ratio);\n    float effectCamera = sinus + sin((pixCoords.x / 0.001) + iTime) * 8.0;\n    if (pixCoords.y <= sinus)\n    {\n        color = deltaColor * ratio;\n    }\n}\n\nvoid makeSquare(out vec4 color, in vec2 pixCoords, in float x, in float y, in float size)\n{\n    if (pixCoords.x > x && pixCoords.x < x + size && pixCoords.y > y && pixCoords.y < y + size)\n    {\n        color = vec4(1.0, 1.0, 0.0, 1.0);\n    }\n}\nvoid mainImage( out vec4 color, in vec2 pixCoords)\n{\n    color = vec4(0.0,0.0,1.0,1.0);\n   \n   makeSinus(color, pixCoords, 0.50); \n   makeSinus(color, pixCoords, 0.60);\n   makeSinus(color, pixCoords, 0.75);\n   makeSinus(color, pixCoords, 1.5);\n   makeSquare(color, pixCoords, (iResolution.x/6.0) * 5.0, (iResolution.y/6.0) * 5.0, 50.0);\n    \n    \n    \n  \t\n}\n","name":"Image","description":"","type":"image"}]}