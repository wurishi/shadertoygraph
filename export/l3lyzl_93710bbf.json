{"ver":"0.1","info":{"id":"l3lyzl","date":"1726638342","viewed":29,"name":"penlight 18472389014712389047301","username":"HaleyHalcyon","description":"aoeuoeu","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["aoeua"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TURN = acos(-1.) * 2.;\n#define R(x) mat2x2(cos(vec4(x) + 0.25 * vec4(0, TURN, -TURN, 0)))\n// #define HEX(x) (vec3((x >> 16) & 255, (x >> 8) & 255, x & 255) / 255.)\n\nfloat inverseLerp(float minV, float maxV, float v) {\n    return clamp(\n        (v - minV) / (maxV - minV),\n        0., 1.\n    );\n}\n\nconst int permutation[256] = int[]( 44,157,6,193,149,195,168,24,227,224,12,240,91,50,27,101,86,39,150,58,114,18,203,69,53,245,13,110,16,189,219,134,54,56,35,7,71,76,242,68,237,0,154,236,226,204,14,231,23,67,216,126,100,59,1,38,167,194,243,255,235,22,133,225,117,109,45,173,246,89,205,108,140,186,52,120,49,181,5,9,85,73,153,84,98,143,161,218,66,63,78,28,170,94,184,230,92,221,228,31,131,174,115,87,47,199,223,190,248,175,2,138,142,137,217,166,40,95,151,141,111,80,104,214,252,220,212,75,90,172,197,127,164,232,21,253,17,88,156,207,165,125,102,182,145,147,206,105,26,124,82,229,169,179,196,30,215,99,60,96,191,72,25,213,148,159,160,128,136,208,139,43,83,130,211,249,163,113,70,250,4,183,32,36,178,188,247,77,10,93,20,135,187,238,180,152,65,55,29,62,200,146,144,33,251,48,176,64,107,34,8,201,3,42,119,210,103,41,79,233,106,254,11,222,209,171,46,234,118,81,37,162,61,177,132,202,244,116,123,158,122,192,155,121,51,74,15,57,198,97,239,129,185,112,241,19);\n\nint rand(int x) {\n    return permutation[x & 255];\n}\n\nfloat randxy(vec2 xy, int t) {\n    return float(\n    rand(\n      rand(\n        rand(\n          int(floor(xy.x))\n        ) + int(floor(xy.y))\n      ) + t\n    )\n    ) / 255.0;\n}\n\nfloat crosshatch(vec2 xyf) {\n    ivec2 xy = ivec2(xyf) & 3;\n    return float(\n        1 +\n        + ((xy.y >> 1) & 1)\n        + ((xy.x & 2) ^ (xy.y & 2))\n        + ((xy.y & 1) << 2)\n        + ((((xy.x) & 1) ^ (xy.y & 1)) << 3)\n    )/ 16.;\n}\n\nvec3 colorMap(float v, vec3 colorBase) {\n    return mix(\n        mix(\n            vec3(0),\n            colorBase,\n            inverseLerp(0.0, 3. / 5., v)\n        ),\n        vec3(1),\n        inverseLerp(3. / 5., 1., v)\n    );\n}\n\nvec3 hueToColor(float hue) {\n    //hue *= 6.;\n    /*\n      (0---1) (2---3) (4---5)  0\n      (    1---2    )     (5---0)\n      (            3---4        )\n    */\n    return\n    mix(\n      mix(\n        mix(\n          vec3(1,0,0),\n          vec3(1,1,0),\n          inverseLerp(0., 1., hue)\n        ),\n        mix(\n          vec3(0,1,0),\n          vec3(0,1,1),\n          inverseLerp(2., 3., hue)\n        ),\n        inverseLerp(1., 2., hue)\n      ),\n      mix(\n        mix(\n          vec3(0,0,1),\n          vec3(1,0,1),\n          inverseLerp(4., 5., hue)\n        ),\n        vec3(1,0,0),\n        inverseLerp(5., 6., hue)\n      ),\n      inverseLerp(3., 4., hue)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime / 4.0);\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.x;\n    float theta = atan(uv.y, uv.x);\n    \n    vec2 center = vec2(\n        0.25 * cos(t * TURN * 3.),\n        0.05 * sin(t * TURN * 5.)\n    ) * R((t + 0.25) * TURN);\n    float thetaCenter = atan(center.y, center.x);\n    float lCenter = length(center);\n    float rCenter = length(uv - center);\n    float light = smoothstep(0.10, 0.02, rCenter);\n    float lightSpread = pow(smoothstep(1.0, 0.14, rCenter), 0.5);\n    \n    float ambient = dot(center, uv);\n    \n    vec2 uvCone = uv - 0.5 * center;\n    float thetaCone = atan(uvCone.y, uvCone.x);\n    float cone = max(0.0, lCenter * (\n        cos(thetaCone - thetaCenter)\n    ));\n    \n    float v = max(\n        + 2.0 * light\n        + 0.25 * lightSpread\n        ,\n        + 0.25\n        + 0.5 * lightSpread * log(1.5 - lCenter)\n        + 0.5 * ambient\n        + 0.5 * cone\n    );\n    v = max(0.0, min(1.0, v * 0.5 - 0.1));\n    \n    // dithering\n    v *= 4.0;\n    v = floor(v) + step(\n        mix(\n            randxy(fragCoord, iFrame),\n            crosshatch(fragCoord),\n            0.75\n        ),\n        fract(v)\n    );\n    v /= 4.0;\n    \n    float h = t;\n    h *= 6.;\n    h = floor(h) + step(\n        mix(\n            randxy(-fragCoord, iFrame),\n            crosshatch(fragCoord + 1.0),\n            0.75\n        ),\n        fract(h)\n    );\n    //h /= 6.;\n\n    vec3 col = colorMap(\n        v,\n        hueToColor(mod(h, 6.))\n    );\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}