{"ver":"0.1","info":{"id":"wtKSz1","date":"1582223482","viewed":330,"name":"MSAA test(raytrace version)","username":"supastav","description":"MSAA is on left with no anti aliasing is on the right","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["antialias"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 marchNotTheMonth(vec3 s, vec3 d)\n{\n    \n    float h = s.y;\n    float a = -d.y;\n    \n    float t = h/a;\n    \n    \n    vec3 p = s+d*t;\n     \n    if(t > 0.)\n        {\n            vec2 texUv = p.xz;\n                        return mix(vec3(texture(iChannel1,d)), vec3(texture(iChannel0,texUv)), vec3(exp2(-32. * length(fwidth(texUv)))));\n        }\n    \n    return vec3(texture(iChannel1,d));\n}\n\nvec3 render(vec2 uv)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 yo = uv*2.-1.;\n    vec3 dir = vec3(yo,1);\n    vec3 camera = vec3(1,.3,iTime);\n    vec3 march =  marchNotTheMonth(camera,dir);\n\n    // Time varying pixel color\n    vec3 col = vec3(march);\n    \n\n    \n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 px = 1./ iResolution.xy;\n\tfloat _14 = 1./4.;\n    float _34 = 3./4.;\n    // Time varying pixel color\n    vec3 col = vec3(0);\n    \n    \n    col += render(uv + px*vec2(_14,_14));\n    col += render(uv + px*vec2(_34,_14));\n    col += render(uv + px*vec2(_14,_34));\n    col += render(uv + px*vec2(_34,_34));\n    col /= 4.;\n\tif (uv.x>iMouse.x/iResolution.x)\n\t\tcol = render(uv);\n    if (abs(uv.x-iMouse.x/iResolution.x)<.01) col = vec3(0,1,0);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}