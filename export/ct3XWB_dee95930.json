{"ver":"0.1","info":{"id":"ct3XWB","date":"1685724969","viewed":49,"name":"Jimbo's SDF Shader #2","username":"JimboWondall","description":"My first try at doing what I think is SDF\nAdded fun little slider","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sigmoidf(float n) {\n    return (1. / (1. + pow(2.71828182846, -n)));\n}\n\nfloat lerp(float a, float b, float t){\n    return a + (b-a) * t;\n}\n\nfloat smin(float a, float b, float k) {\n    float h = max(k - abs(a-b), 0.) / k;\n    return min(a, b) - h*h*h*k*1./6.;\n}\n\nfloat morphShapeSDF(vec2 cPos, vec2 myPos, float radius, float t) {\n    vec2 offset = cPos - myPos;\n    vec2 c = vec2(abs(offset.x), abs(offset.y)) - vec2(radius * 0.5);\n    return lerp(length(offset) - radius, length(vec2(max(c, 0.))), t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pix = 2./iResolution.y;\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    float st = sin(iTime);\n\n    vec2 sliderPos = vec2(0., -0.8);\n    float width = 0.8;\n    float height = 0.02;\n    \n    vec2 mousePos = (iMouse.xy * 2.0 - iResolution.xy) / iResolution.y;\n    float value = mousePos.x + width;\n    value *= 1. / (width * 2.);\n    value = clamp(value,0.,1.);\n    \n    if( uv.y < sliderPos.y + height && uv.y > sliderPos.y - height &&\n        uv.x < sliderPos.x + width  && uv.x > sliderPos.x - width ) {\n            \n        if(uv.x + width < value * width * 2.) {\n            fragColor = vec4(1.);\n        } else {\n            fragColor = vec4(.1,.1,.1,1);\n        }\n        \n    } else {\n    \n        float[4] scene = float[4](\n            morphShapeSDF(uv, vec2( 0.5, 0.0), 0.1, 0.),\n            morphShapeSDF(uv, vec2( 0.0, 0.0), 0.1, 0.),\n            morphShapeSDF(uv, vec2(-0.5, 0.0), 0.1, 0.),\n            morphShapeSDF(uv, vec2( st, 0.3), 0.2, (st + 1.0) * 0.5 )\n        );\n        \n        float mixFactor = value + 0.0001;\n        float dist = 1.;\n        int sl = scene.length();\n        for (int i = 0; i < sl; i++) {\n            dist = smin(scene[i], dist, mixFactor);\n        }\n        float blur = 0.01;\n        float lum = smoothstep(0.0, blur, dist);\n    \n        vec3 col = vec3(0.949,0.212,0.212);\n        col = col * (1. - lum);\n        fragColor = vec4(col,1.0);\n        \n    }\n    \n}\n\n\n\n\n","name":"Image","description":"","type":"image"}]}