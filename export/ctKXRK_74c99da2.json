{"ver":"0.1","info":{"id":"ctKXRK","date":"1686238436","viewed":28,"name":"FirstTryTuti","username":"deep2universe","description":"First Shader-Test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["experiment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cosine based palette, 4 vec3 params\nvec3 palette( in float t)\n{\n    vec3 a = vec3(-0.602, 0.958, 0.714);\n    vec3 b = vec3(1.728, 1.888, 2.407);\n    vec3 c = vec3(1.208, 2.168, 2.976);\n    vec3 d = vec3(0.148, 3.138, 2.578);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;    \n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i=0.0; i< 2.0; i++){ \n    \n        uv = fract(uv * 1.5) -0.5;\n\n        float d = length(uv) * exp(length(uv0));\n        \n\n        vec3 col = palette(length(uv0) + i*0.4 + sin(iTime*0.4));\n\n        d = sin(d*8. + iTime)/8.;\n        //d = abs(d);\n        d = pow(0.01/d, 0.2);\n        \n        finalColor += col *d;\n        \n    }\n    \n    fragColor = vec4(finalColor, .1);\n}","name":"Image","description":"","type":"image"}]}