{"ver":"0.1","info":{"id":"X3lcDH","date":"1726115937","viewed":23,"name":"Computer Composition With Lines","username":"Kamenev","description":"Inspired by A. Michael Noll","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["disk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    \n    float dist = length(uv);\n    if (dist > 1.0) {\n    vec3 finalColor = vec3(0.0);\n    for (float i = 0.0; i < 7.0; i++) {\n        uv = fract(uv * 1.5) - 0.1;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + .4*iTime);\n\n        d = atan(d*5.)/5.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.001);\n\n        finalColor += col * d;\n}   \nfragColor = vec4(finalColor, sin(5.*iTime));\nreturn;\n}\n    \n    uv = fract(uv * 1.5) - 0.5;\n    float lineWidth = 0.05;\n    float numCells = 30. + cos(0.001);\n    \n    \n    vec2 gridPos = floor(uv * numCells) / numCells;\n    \n    //https://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl\n    float rand = fract(sin(dot(gridPos, vec2(12.9898, 78.233))) * 43758.5453);\n    \n    vec2 lineDir = (rand < 0.3) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    float lineLength = 2.*rand; \n    \n    \n    float line = step(lineWidth, max(abs(gridPos.x), abs(gridPos.y)));\n    \n    if (rand > 0.75) {\n        line = 0.0; \n    }\n    \n    \n    fragColor = vec4(vec3(1. - line), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}