{"ver":"0.1","info":{"id":"wlXSzs","date":"1563901875","viewed":444,"name":"RayMarching013:Glitch","username":"Hirai_worthless","description":"noisy.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nvec2 path(float z){\n    float x = sin(z) + 2.0 * cos(z * 0.3) - 1.5 * sin(z * 0.12345);\n    float y = cos(z) + 1.5 * sin(z * 0.3) + 2.0 * cos(z * 0.12345);\n    return vec2(x,y);\n}\n\nfloat map1(vec3 p){\n\t//p = fract(p/2.0) * 6.0 - 3.0;\n    vec2 o = path(p.z) / 4.0;\n\tfloat tBase = max(-length(p.xy - o) + 1.0 \n                      //* (1.0 + sin(p.z) * 0.5)\n                      ,length(p.xy - o) - 1.2 \n                      //* (1.0 + sin(p.z) * 0.5)\n                     );\n    float tdonut = max(-length(p.xy - o) + 0.5\n                      ,length(p.xy - o) - 0.6 \n                     );\n    tdonut = max(tdonut,abs(fract(p.z) - 0.5));\n    float tTube1 = length(p.xy - o + vec2(0.3,0.3)) - 0.025;\n    float tTube2 = length(p.xy - o + vec2(0.5,0.2)) - 0.025;\n    float tTube3 = length(p.xy - o + vec2(0.2,0.5)) - 0.025;    \n    float tTube4 = length(p.xy - o + vec2(-0.3,-0.3)) - 0.025;\n    float tTube5 = length(p.xy - o + vec2(-0.5,-0.2)) - 0.025;\n    float tTube6 = length(p.xy - o + vec2(-0.2,-0.5)) - 0.025;\n    float tTube = min(min(tTube1,tTube2),tTube3);\n    tTube = min(min(tTube,tTube4),min(tTube5,tTube6));\n\n    float bound = 2.0;\n    float tSplit = (fract(p.z)-0.5);\n    tSplit = min(tSplit, abs((p.x - o.x))-0.15);\n    tSplit = min(tSplit, abs((p.y - o.y))-0.15);\n\n    return min(min(max(tBase,-tSplit),tdonut),tTube);\n}\nfloat temp(){\n    return (floor(iTime) + min(sin(fract(iTime) * PI / 2.0) * 2.0,1.0));\n}\nfloat map2(vec3 p){\n    p = mod(abs(p), 1.5) - 0.75;\n\n    float rot = temp() * PI / 2.0;\n    float size = sin(rot * 2.0 + PI / 4.0);\n    p.xz *= mat2(cos(rot),-sin(rot),sin(rot),cos(rot));\n    float sphere = length(p) - 0.5;\n\tfloat cube = max(max(abs(p.x) - 0.5,abs(p.y) - 0.5),abs(p.z) - 0.5);\n    float obj = mix(sphere,cube,0.5 - size * 0.5);\n    float poleY = length(p.xz) - 0.1 * size;\n    float holes = 100000000.0;\n    for(float i = -0.25; i < 0.50; i += 0.25){\n        for(float j = -0.25; j < 0.50; j += 0.25){\n        \tfloat holeZ = length(p.xy - vec2(i,j)) - 0.075 * (1.0 - size);\n    \t\tfloat holeX = length(p.yz - vec2(i,j)) - 0.075 * (1.0 - size);\n    \t\tholes = min(holes,holeX);\n        \tholes = min(holes,holeZ);\n        }\n    }\n\n    return max(min(obj,poleY),-holes);\n\t\n\n}\n\nfloat trace1 (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    for(int i = 0; i < 32; ++i){\n        vec3 p = o + r * t;\n        float d = map1(p);\n        t += d * 0.5;\n    }\n    return t;\n}\nfloat trace2 (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    for(int i = 0; i < 32; ++i){\n        vec3 p = o + r * t;\n        float d = map2(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float PI = 3.14159265;\n    vec2 uv = fragCoord.xy /iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv,1.0));\n    \n    float z = iTime * 4.0 ;\n\tvec2 a = path(z);\n    vec3 o = vec3(a / 4.0,z);\n    float t1 = trace1(o,r);\n    float t2 = trace2(o,r);\n\n    float fog1 = 1.0 / (1.0 + t1 * t1 * 0.2); \n    float fog2 = 1.0 / (1.0 + t2 * t2 * 0.2);\n\n    vec3 fc = rand(floor(vec2(uv.x +rand(vec2(uv.x,floor(iTime * 5.0)))+ uv.y,uv.y * 10.0)) * floor(iTime * 16.0)) > 0.5 ? vec3(fog1,0,0) : vec3(0,0,fog2);\n\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}