{"ver":"0.1","info":{"id":"tdScDh","date":"1586530666","viewed":153,"name":"Toy1","username":"ArthMax","description":"This is Toy1 for my followers-students. Make Your own Toy which is Your recognizable Portrait!\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["toy1forfollowers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"     mat2 rotate2d(float _angle){\n                                 return mat2(\n                                             cos(_angle),-sin(_angle),\n                                             sin(_angle), cos(_angle)\n                                            );\n     }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv  = 1.0-2.0*fragCoord/iResolution.xy;\n    // Normalized mouse coordinates (from -1 to 1)\n    vec2 muv = 1.0-2.0*iMouse.xy/iResolution.xy;\n    \n    // mouse coordinates (from -1 to 1)\n    float mx = muv.x;\n    float my = muv.y;\n    \n    // x and y  shifted by mouse coordinates (from -1 to 1)\n    float x = uv.x-mx;\n    float y = uv.y-my;\n    \n     // scaled and squared distance to current center\n     float r = (x*x+y*y)*5.0;\n     // angle from x axis to mouse position on click\n     float a = atan(my,mx);\n       mat2 R = rotate2d(a); \n        vec2 rxy = R*vec2(x,y);\n        \n     // max distance from current center to rotated xy\n     float m = max(abs(rxy.x),abs(rxy.y))*1.0;\n\n        \n      // varying pixel color by Time and mouse down\n       vec3 col = cos((m+sin(r-iTime))*10.0+vec3(4.0*mx,a,3.0*my));\n\n       // Output to screen\n             fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}