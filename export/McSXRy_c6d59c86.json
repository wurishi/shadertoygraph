{"ver":"0.1","info":{"id":"McSXRy","date":"1706490865","viewed":88,"name":"Island shadow","username":"pi76r","description":"Small ray cast island, inspired by https://youtu.be/bMTeCqNkId8","likes":3,"published":1,"flags":0,"usePreview":1,"tags":["raycasting","shadow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float maxH = 200.0;\n\nfloat random(vec2 p) {\n  return texture(iChannel0, p).r;\n}\n\nfloat perlin(vec2 p) {\n  float h = 0.0;\n  int n = 5;\n  float div = 0.8;\n  float mul = 1.0 / pow(2.0, float(n));\n  for (int i = 0; i < n; i++) {\n    h += random(p*mul)*div;\n    mul*=2.0;\n    div/=2.0;\n  }\n  return clamp(h, 0.0, 1.0);\n}\n\nfloat hei(vec2 p) {\n  float d = length(p/iResolution.yy-vec2(0.4, 0.0)-0.5);\n  float h = mix(-20.0, maxH, perlin(p/iChannelResolution[0].xy)-d*1.5);\n  return clamp(h, 0.0, maxH);\n}\n\n\nvec3 norm(vec2 p) {\n  float hr = max(0.0, hei(p+vec2(1.0, 0.0)));\n  float hl = max(0.0, hei(p-vec2(1.0, 0.0)));\n  float ht = max(0.0, hei(p+vec2(0.0, 1.0)));\n  float hb = max(0.0, hei(p-vec2(0.0, 1.0)));\n  return normalize(vec3(2.0*(hr-hl),\n  2.0*(ht-hb),4.0));\n}\n\nfloat shadow(vec3 p, vec3 sd) {\n  float t = 2.0;\n  while(t<1000.0){\n    vec3 c = p+sd*t;\n    if (c.z > maxH) break;\n    float h = hei(c.xy);\n    if (h > c.z) return 1.0;\n    t+=max(1.0, (c.z-h)*0.5);\n  }\n\n  return 0.0;\n}\n\nvec3 terrainColor(float h) {\n    if (h > 120.0) return vec3(1.0);\n    if (h > 60.0) return vec3(0.8);\n    if (h > 45.0) return vec3(0.2,0.7,0.1);\n    if (h > 30.0) return vec3(0.4,0.9,0.4);\n    if (h > 0.0) return vec3(0.9, 0.8,0.2);\n    return vec3(0.3,0.5,0.9);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord;\n    float h = hei(p);\n\n    vec3 col = terrainColor(h);\n    \n    \n    vec3 sp = vec3(vec2(cos(iTime*0.5),sin(iTime*0.5))*100000.0,80000.0);\n    //vec3 sp = vec3(-100000.0,0.0,5000.0);\n    //vec3 sp = vec3(iMouse.xy, 500.0);\n    vec3 sd = normalize(vec3(p,h) - sp);\n    vec3 n = norm(p);\n    float ls = dot(sd,n);\n    float sh = shadow(vec3(p,h),-sd);\n    if (sh < 0.5) col += vec3(1.0,1.0,0.5)*ls*0.5;\n    col -= vec3(1.0,1.0,1.2)*sh*0.5;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}