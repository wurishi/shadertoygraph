{"ver":"0.1","info":{"id":"dtXGzl","date":"1672218401","viewed":132,"name":"Glowing star","username":"samui","description":"https://inspirnathan.com/posts/65-glow-shader-in-shadertoy","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdStar5(vec2 p, float r, float rf)\n{\n  const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n  const vec2 k2 = vec2(-k1.x,k1.y);\n  p.x = abs(p.x);\n  p -= 2.0*max(dot(k1,p),0.0)*k1;\n  p -= 2.0*max(dot(k2,p),0.0)*k2;\n  p.x = abs(p.x);\n  p.y -= r;\n  vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n  float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n\n  return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy; // x: <0, 1>, y: <0, 1>\n  uv -= 0.5; // x: <-0.5, 0.5>, y: <-0.5, 0.5>\n  uv.x *= iResolution.x/iResolution.y; // x: <-0.5, 0.5> * aspect ratio, y: <-0.5, 0.5>\n\n  float d = sdStar5(uv, 0.12, 0.45); // signed distance value\n\n  vec3 col = vec3(step(0., -d)); // create white circle with black background\n  float glow = 0.;\n  if (d > 0.) {\n      glow = 0.01 / d;\n      glow = clamp(glow, 0., 1.);\n  }\n  col += glow;\n  col *= vec3(1., 1., 0);\n\n  fragColor = vec4(col,1.0); // output color\n}\n","name":"Image","description":"","type":"image"}]}