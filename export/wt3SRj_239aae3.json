{"ver":"0.1","info":{"id":"wt3SRj","date":"1581318192","viewed":354,"name":"sin more precise than fract :-)","username":"FabriceNeyret2","description":"top:         sin( length * 1e5)\nmiddle:    sin( length * 5e7)\nbottom:  fract( length * 1e5)\nred: exactly 0\n\n( As posted below, it's probably more about random bits surviving than precision ;-) )\n","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["glsl","precision","compilation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O,  vec2 U )\n{\n    O  = vec4(0); \n    vec2 R = iResolution.xy;\n    float l = length( U -= vec2(0, R.y/2.) ),\n        tau = 6.28318530718;\n    if ( int(abs(U.y))== int(R.y*.1) ) O.g++;\n    U /= R;     \n    O +=  U.y > .1 ?   sin(l*1e5) *.5 + .5\n        : U.y >-.1 ?   sin(l*5e7)\n                    // ( l     - tau*floor(l    /tau) )\n                    // ( l*1e3 - tau*floor(l*1e3/tau) )\n                   : fract(l*1e5) ;\n\n    if( O==vec4(0) ) O.r ++;\n}","name":"Image","description":"","type":"image"}]}