{"ver":"0.1","info":{"id":"4sdBR4","date":"1524324915","viewed":107,"name":"My dumb mode7 test","username":"Schorsch","description":"Simple testing","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mode7"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359;\n\nvec2 mode7(vec2 r, mat2 transformation, vec2 r0) {\n    return transformation * (r - r0) + r0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float angle = iTime / 150.0;\n    float alpha = angle * 180.0 / PI;\n    mat2 transformation = mat2(cos(alpha), -sin(alpha),\n                               sin(alpha), cos(alpha));\n    vec2 newUV = mode7(uv, transformation, uv/2.0);\n    \n    vec3 color = texture(iChannel0, newUV).xyz;\n    \n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}