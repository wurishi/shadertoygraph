{"ver":"0.1","info":{"id":"MsKBzV","date":"1529689141","viewed":87,"name":"2D Matrix Transformation with AA","username":"viclw17","description":"Try to better understand 2D Matrix Transformation.\n\nReference --> https://en.wikipedia.org/wiki/Transformation_matrix\nBased on --> https://www.shadertoy.com/view/4stBWl","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 stretch = vec2(1.,1.);\nfloat squeeze = 1.;\nfloat rotation = 0.;\nvec2 shearing = vec2(0,0);\n\n/////////////////////////////////////////////////////////////\n\n#define LINE_COUNT 10.\n#define THICKNESS 0.08\n\n#define STRETCHING \\\nmat2(\\\n    stretch.x, 0.0,     \\\n    0.0,       stretch.y\\\n    )\n\n#define SQUEEZING \\\nmat2(\\\n    squeeze, 0.0,       \\\n    0.0,     1.0/squeeze\\\n    )\n    \n#define ROTATION \\\nmat2(\\\n     cos(rotation),sin(rotation),\\\n    -sin(rotation),cos(rotation) \\\n    )\n    \n#define SHEARING_X \\\nmat2(\\\n    1.0, shearing.x,\\\n    0.0, 1.0        \\\n    )\n#define SHEARING_Y \\\nmat2(\\\n    1.0,        0.0,\\\n    shearing.y, 1.0 \\\n    )\n\nfloat renderGrid(vec2 uv) {    \n    vec2 repeating = fract(vec2(uv * LINE_COUNT));\n    if (repeating.x > 1. - THICKNESS || \n    repeating.y > 1. - THICKNESS) {\n        return 1.;\n    }\n    return 0.;\n}\n\n#define AA 3\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\nvec3 tot = vec3(0.0);\n#if AA>1\nfor( int m=0; m<AA; m++ )\nfor( int n=0; n<AA; n++ ){\n\n    vec2 o = vec2(float(m),float(n)) / float(AA) - 0.5;\n    \n    // Calculate UV coordianates \n    vec2 uv = (fragCoord+o)/iResolution.xy;\n    #else \n    vec2 uv = (fragCoord)/iResolution.xy;\n    #endif\n    // Normalize UV coordianates from 0~1.0 to -0.5~0.5\n    uv -= .5;\n    // Adjust for aspect ratio\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Draw grid\n    vec3 col = vec3(renderGrid(uv));\n    col*=.5;\n    \n    /*****Automated Example*****/\n    float time = iTime*.5;\n    stretch = vec2(sin(time)*.1+1.,1.);\n\tsqueeze = cos(time)*.5+1.;\n\trotation = sin(time);\n\tshearing = vec2(cos(time),1.);\n    \n    /*****MATRIX TRANSFORMATION*****/\n    //col += vec3(renderGrid(uv * STRETCHING), 0., 0.);\n    //col += vec3(renderGrid(uv * SQUEEZING), 0, 0.);\n    //col += vec3(renderGrid(uv * SHEARING_X * SHEARING_Y), 0, 0.);\n    // Combined transformation\n    col += vec3(renderGrid(uv * STRETCHING * ROTATION * SQUEEZING * SHEARING_X * SHEARING_Y), 0, 0.);\n    \n    tot += col;\n    \n#if AA>1\n}\ntot /= float(AA*AA);\n#endif\n\n    //fragColor = vec4(fract(vec2(uv * LINE_COUNT)),0,1);\n    fragColor = vec4(tot,1);\n}","name":"Image","description":"","type":"image"}]}