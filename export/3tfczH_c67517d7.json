{"ver":"0.1","info":{"id":"3tfczH","date":"1591372677","viewed":76,"name":"Plot shaping f - Almost Identity","username":"imanishi","description":"https://iquilezles.org/articles/functions/functions.htm\n\nAlmost Identity\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["plot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plot(vec2 st, float th) {\n    return smoothstep(th - 0.01, th, st.y) - smoothstep(th, th + 0.01, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord / iResolution.xy;\n    \n    float y1 = almostIdentity(st.x, 1.0, 0.1);\n    float y2 = almostIdentity(st.x);\n    vec3 color = vec3(0.0);\n    \n    float p1 = plot(st, y1);\n    float p2 = plot(st, y2);\n    \n    color = (1.0 - p1) * color \n        + p1 * vec3(1.0, 0.0, 0.0)\n        + p2 * vec3(0.0, 1.0, 0.0);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n/*\n\nAlmost Identity (I)\n\n*/\n\n// m : threshold (anything above m stays unchanged)\n// n : the value things will take when your input is zero\nfloat almostIdentity(float x, float m, float n)\n{\n    if(x > m) return x;\n    float a = 2.0 * n - m;\n    float b = 2.0 * m - 3.0 * n;\n    float t = x / m;\n    return (a * t + b) * t * t + n;\n}\n\n/*\n\nAlmost Unit Identity\n\n*/\n\nfloat almostIdentity(float x)\n{\n    return x * x * (2.0 - x);\n}\n\n","name":"Common","description":"","type":"common"}]}