{"ver":"0.1","info":{"id":"ld2BWK","date":"1502295103","viewed":321,"name":"Raymarcher [98 Chars]","username":"Xor","description":"Here's an updated version of this shader: https://www.shadertoy.com/view/XlKSz1. It should work for Firefox, Linux and nVidia as well.\nThis is my 82 char version: #define mainImage(O,I) for(int i;i++<99;)O+=(length(cos(O/.1))-1.)*vec4(I/1e4,.1,0)","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarcher","onetweet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//<100 chars playlist: https://www.shadertoy.com/playlist/f3lGDN\n\n//Raymarcher [98  Chars]: https://www.shadertoy.com/view/ld2BWK\n//Raymarcher [104 Chars]: https://www.shadertoy.com/view/lsyGRR\n//Raymarcher [137 Chars]: https://www.shadertoy.com/view/NtXBzB\n\nvoid mainImage(out vec4 O, vec2 I)\n{\n    for(O-=O; O.w++ < 1e2; )\n    O += (length(cos(O/.1))-.8)*vec4(I/1e4, .1, 0);\n}\n\n\n//Original:\n/*void mainImage(out vec4 O,vec2 I)\n{\n    O -= O;\n    for (int i; i++ < 99;)\n    O += ( length(cos(O/.1)) - 1.1)* vec4( I/1e4, .1, 0);\n}*/\n\n//82 Character version:       \n//#define mainImage(O,I) for(int i;i++<99;)O+=(length(cos(O/.1))-1.)*vec4(I/1e4,.1,0)","name":"Image","description":"","type":"image"}]}