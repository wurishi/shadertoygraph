{"ver":"0.1","info":{"id":"wlX3Ds","date":"1558043946","viewed":101,"name":"Somehow True Random","username":"mgrant8164","description":"A mandelbrot mess-up, which somehow produces random results! (tested only on an intel iGPU so far)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 squareImag(vec2 p) {\n    return vec2(p.x*p.x - p.y*p.y, 2.*p.x*p.y);\n}\n\nvec3 getColor(float n) {\n    //length (in z) of color band\n    const float col_size = 4.;\n    \n    if(n <= 0.)\n        return vec3(0.);\n    const vec3 cola = vec3(1., 0., 0.);\n    const vec3 colb = vec3(0., 0., 1.);\n    \n    const float cols_length = 3.;\n    const vec3 cols[3] = vec3[3](\n        vec3(1.,0.,0.),\n        vec3(0.,0.,1.),\n        vec3(1.,0.,0.)\n    );\n    \n    n /= col_size;\n    int col_i = int(n * cols_length);\n    return mix(cols[col_i], cols[col_i + 1], fract(n));\n}\n\nvec3 mandel(vec2 pos) {\n    const int ITER_COUNT = 100;\n    \n    vec2 z = vec2(0.);\n    float n = 0.;\n    for(int i = 0; i < ITER_COUNT; i++) {\n        ++n;\n        z = squareImag(z) + pos;\n        if(length(z) >= 4.)\n            break;\n       \t\n    }\n    //return vec3( log(length(z)/pow(2., n)) );\n    \n    float nu = log(0.5 * log(length(z)) / log(2.)) / log(2.);\n    return getColor(n + (1. - nu));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //vec2 aspect = iResolution.xy / min(iResolution.x, iResolution.y);\n    \n    vec2 fp = 2. * (fragCoord - 0.5 * iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    // Output to screen\n    vec2 offset = vec2(1.25, 0.0);\n    vec2 scale = vec2(4.0);\n    fragColor = vec4(mandel((fp + offset) / scale),1.0);\n}","name":"Image","description":"","type":"image"}]}