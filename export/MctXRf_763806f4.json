{"ver":"0.1","info":{"id":"MctXRf","date":"1714278483","viewed":55,"name":"basic chromatic abberation fx","username":"IDG_works","description":"i'm new to this shader stuff but i saw a glitch effect and thought 'i can probably do this'\nplease comment a solution for the boxType code lmao it's kinda wacky and i feel like i shouldn't have to copy-paste it 3 times (see what happened in boxType==2)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","beginner","effect","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    // changes the boundary type (0 - 2)\n        #define boxType 0\n    // glitch constant (0 - 1)\n    \n    float gFact = 0.45;\n         //gFact = sin(iTime);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n        vec2 uvr = uv;\n        vec2 uvb = uv;\n\n\n    \n    uv.x -= 0.5;\n    uvr.x -= gFact;\n    uvb.x -= 1.-gFact;\n    \n    \n    // i wish i couldve figured out how to make this easier\n    #if boxType == 0\n    if (uv.x < 0.) {\n        uv = vec2(0.);\n    } else if (uv.x > 1.) {\n        uv = vec2(0.);\n    }\n    if (uvr.x < 0.) {\n        uvr = vec2(0.);\n    } else if (uvr.x > 1.) {\n        uvr = vec2(0.);\n    }\n    if (uvb.x < 0.) {\n        uvb = vec2(0.);\n    } else if (uvb.x > 1.) {\n        uvb = vec2(0.);\n    }\n    \n    #elif boxType == 1\n    if (uv.x < 0.) {\n        uv = vec2(0.);\n        uvr = vec2(0.);\n        uvb = vec2(0.);\n    } else if (uv.x > 1.) {\n        uv = vec2(0.);\n        uvr = vec2(0.);\n        uvb = vec2(0.);\n    }\n    \n    #elif boxType == 2\n    // p.s. i have no idea why this doesnt work compared to boxType==1 but it looks kinda sick lmao\n    if (uv.x < 0.) {\n        uv, uvr, uvb = vec2(0.);\n    } else if (uv.x > 1.) {\n        uv, uvr, uvb = vec2(0.);\n    }\n\n    #endif\n\n    \n    vec3 txt = texture(iChannel0, uv).xyz;\n        float txtr = texture(iChannel0, uvr).x;\n        float txtb = texture(iChannel0, uvb).x;\n    txt.x = mix(txt.x, txtr, 0.5);\n    txt.x = mix(txt.x, txtb, 0.5);\n    // fragColor\n    vec3 col = vec3(txt);\n    \n    // Output to screen\n    fragColor = vec4(txt ,1.0);\n}","name":"Image","description":"","type":"image"}]}