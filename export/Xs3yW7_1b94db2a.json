{"ver":"0.1","info":{"id":"Xs3yW7","date":"1519088197","viewed":205,"name":"Some fractal","username":"wyatt","description":"playing around with convergent/divergent series \n\n","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["fractal","imaginary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float a = 0.1*iTime;\n    uv.x *= iResolution.x/iResolution.y;\n\tuv = 1.3*(uv*2.-1.)*mat2(sin(a),cos(a),-cos(a),sin(a));\n    \n    // Time varying pixel color\n    vec2 v = uv;\n    float t = 3.1*exp(-10.*sin(0.52424*iTime)*sin(0.52424*iTime));\n    float g = 4.*sin(iTime)*sin(iTime);\n    float j = 0.;\n    vec2 c = vec2(-0.8,0.3);\n    for (int i = 0; i < 30; i++) {\n        \n    \tfloat x = (3.+t)*(v.x*v.x-v.y*v.y) - 3.*(v.x*uv.x - v.y*uv.y);\n        v.y = (3.+t+x*g)*(2.*v.x*v.y) - 3.*(v.x*uv.y+uv.x*v.y);\n        v.x = x;\n        j += .4*exp(-.01*dot(v,v));\n        if (dot(v,v) > 100.)break;\n    }\n    vec3 col = sin(vec3(1,1.5,2)*j)*0.5+0.5;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}