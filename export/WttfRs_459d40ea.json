{"ver":"0.1","info":{"id":"WttfRs","date":"1613278287","viewed":782,"name":"Simple Pixelate with Splits","username":"ferotan","description":"Simple Pixelate shader.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["pixel","pixelate","mosaic","pixellate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A Simple Pixelate Shader by F3R0\n\n// Maximum Possible Pixel Size\nconst float maxPixelSize = 64.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mpos = (iMouse.xy/iResolution.xy);\n    \n    //Centered start pos of the splits.\n    if (mpos == vec2(0.0,0.0))\n    {\n    mpos = vec2(0.5, 0.5);\n    }\n  \n    // Mouse.y adjusts current Pixel Size\n    vec2 pixelSize = mpos.y/(iResolution.xy/maxPixelSize);\n    \n    // add pxResolution/2 to fix image position.\n    vec2 fixedUV = uv+pixelSize/2.0;\n    \n    // Pixelated UV coordinates\n    vec2 pxUV = floor(fixedUV/pixelSize)*pixelSize;\n    \n    // Texture\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    // Pixelated Texture\n    vec3 colPx = texture(iChannel0, pxUV).rgb;\n    \n    \n    vec2 lines = round(clamp(1.0-abs(uv-mpos)*iResolution.xy/2.0,0.0,1.0));\n    vec2 split = round(clamp(1.0-(uv-mpos)*iResolution.x/2.0,0.0,1.0));\n   \n    vec3 col0 = vec3(mix(col.rgb,colPx.rgb, split.x ));\n    \n    col = mix(col0,vec3(lines.x,lines.y,0.0),lines.y+lines.x);\n    \n    fragColor = vec4(col,1.0);\n   \n}","name":"Image","description":"","type":"image"}]}