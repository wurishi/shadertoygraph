{"ver":"0.1","info":{"id":"DlcyWs","date":"1699801381","viewed":42,"name":"alternating domino pair tiling","username":"jt","description":"An alternating [url=https://en.wikipedia.org/wiki/Domino_tiling]domino tiling[/url] with randomly colored tiles.\nRelated to Cairo Pentagonal Tiling (see [url=https://mathcurve.com/polyedres/pavageducaire/pavageducaire.shtml]mathcurve animation[/url]).\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["tiling","tesselation","pair","alternating","domino"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/DlcyWs alternating domino pair tiling, 2023 by jt\n\n// An alternating https://en.wikipedia.org/wiki/Domino_tiling with randomly colored tiles.\n// Related to [url=https://en.wikipedia.org/wiki/Cairo_pentagonal_tiling]Cairo Pentagonal Tiling[/url]\n// see [url=https://mathcurve.com/polyedres/pavageducaire/pavageducaire.shtml]mathcurve animation[/url].\n// Click to visualize domino outlines.\n\n// tags: tiling, tesselation, pair, alternating, domino\n\n// The MIT License\n// Copyright (c) 2023 Jakob Thomsen\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvec3 hash32(vec2 p) // https://www.shadertoy.com/view/4djSRW Hash without Sine by Dave_Hoskins\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\n\n// returns domino tile index\nivec2 alternating_domino_pair_tiling(vec2 p) // https://www.shadertoy.com/view/DlcyWs alternating domino tiling by jt\n{\n    ivec2 q = ivec2(floor(p)); // quantize to squares \n    bool flip = (q.x&1)!=(q.y&1); // alternate in checkerboard pattern\n    //return ivec2(floor(p*(flip ? vec2(1, 2) : vec2(2, 1)))); // (re-)quantize to dominos\n    return\n        flip ?\n        ivec2(2.0*floor(p.x), floor(2.0*p.y)): // quantize to horizontal dominos\n        ivec2(floor(2.0*p.x), 2.0*floor(p.y)); // quantize to vertical dominos\n}\n\nvoid mainImage(out vec4 o, in vec2 I)\n{\n    vec2 R = iResolution.xy;\n    I = floor(I);\n    I = (2. * I - R) / R.y;\n    vec3 color =\n        all(lessThan(abs(I), vec2(1))) ?\n        hash32(vec2(alternating_domino_pair_tiling(5.0*I.xy))) :\n        vec3(0);\n    if(iMouse.z>0.0) // click to display domino outlines\n    {\n        // Thanks to Shane for domino outline visualization!\n        I -= 4./R.y;\n        vec3 color2 =\n            all(lessThan(abs(I), vec2(1))) ?\n            hash32(vec2(alternating_domino_pair_tiling(5.0*I.xy))) :\n            vec3(0); \n        if(any(greaterThan(abs(color2 - color), vec3(0)))) color *= 0.;\n        //vec3 di = abs(color2 - color);\n        //if(di.x>0. || di.y>0. || di.z>0.) color *= 0.;\n    }\n    //if(dFdx(color) != vec3(0.0)) color *= 0.0;\n    //if(dFdy(color) != vec3(0.0)) color *= 0.0;\n    o = vec4(color, 1);\n}\n","name":"Image","description":"","type":"image"}]}