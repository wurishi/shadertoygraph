{"ver":"0.1","info":{"id":"fsBXDh","date":"1620080468","viewed":129,"name":"Mellow Manypus jeanNshuti","username":"jeanNshuti","description":"A Manypus is a species discovered in Shadertoyland in May 2015. This new cell/monster/animal loves music and it specially enjoys reacting to your microphone!\n\ntouched by JeanNshuti for fun and university. The psychedelic brother to the Yellow Manypus","likes":4,"published":1,"flags":4,"usePreview":0,"tags":["2d","sound","reactive","music","microphone","manypus"],"hasliked":0,"parentid":"ltB3RK","parentname":"Yellow Manypus"},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Edited Shader by Nshuti Jean-Ren√© (04/05/2021) based on the \n// Yellow Manypus created by Pol Jeremias - pol/2015\n// and combine a an oscillating red disk from the Motion Blur Visualization at\n// https://www.shadertoy.com/view/XdXXz4\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//\n#define SOUND_MULTIPLIER 1.0\n\n//(Nshuti) changed function from sinus to cosinus\nfloat cos01(float v){ return 0.5 + 0.5 * cos(v); }\n\n//(Nshuti) disk function\nvec4 disk(vec2 uv, vec2 center, float radius, vec4 color) {\n    float dist = step(length(center - uv), radius);\n    return vec4(dist, dist, dist, 1.0)*color * cos01(1.2 * iTime );\n}\n\n//(Nshuti) Added functions circle & scene from \n//shader : Motion Blur Visualization\n//@https://www.shadertoy.com/view/XdXXz4\nvec4 circle(vec2 p, vec2 center, float radius)\n{\n\treturn mix(vec4(1,1,1,0), vec4(1,0,0,1), smoothstep(radius + 0.005, radius - 0.005, length(p - center)));\n}\n\nvec4 scene(vec2 uv, float t, float rayon)\n{\n\treturn circle(uv, vec2(0, sin(t * 16.0) * (sin(t) * 0.5 + 0.5) * 0.5), rayon);\n}\n\n//(Nshuti) plot function used to\"blackout\" shader\nfloat plot(vec2 coord, float y, float thickness){\n    return smoothstep( y-thickness, y, coord.y) - smoothstep( y, y+thickness,\n    coord.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //(Nshuti) Create greyscale function to black out\n    //the manypus\n    vec2 xy = fragCoord.xy/iResolution.xy;\n    xy -= abs(sin(iTime)/2.0);\n    vec2 center = iResolution.xy * 0.5;\n    float radius = 0.25 * iResolution.y;\n    float y = cos01(xy.x)/15.0+0.1;\n    float greyScale = plot( xy, y, 4.0);\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= vec2(0.5);\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    //(Nshuti) create oscillating red disk copied from Motion Blur Visualization\n    float view = floor(fragCoord.x / iResolution.x);\n    float frametime = (60. / (floor(view / 2.) + 1.));\n\tfloat time = floor((iTime + 3.) * frametime) / frametime * texture(iChannel0, vec2(0.1, 0.0) ).x;\n\tvec4 mainCol = scene(uv, time,0.1);\n   \n    float a = atan( uv.y, uv.x );\n    float r = length( uv );\n    \n    //\n    // Draw the white eye\n    //\n    //(Nshuti) Changed reactBase to depend on y-axis to have a fixed circular white eye\n    float reactBase = SOUND_MULTIPLIER * texture(iChannel0, vec2(0.1, 0.0) ).y;\n    float nr = r + reactBase * 0.06 * cos01(a * 0.2 +iTime);\n    float c = 1.0 - smoothstep(0.04, 0.07, nr);\n\t\n    //\n    // Draw the manypus\n    //\n    uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n\n    const float it = 10.0;\n    float c1 = 0.0;\n    for( float i = 0.0 ; i < it ; i += 1.0 )\n    {\n        float i01 = i / it;\n        float rnd = texture( iChannel1, vec2(i01)).x;\n        float react = SOUND_MULTIPLIER * texture(iChannel0, vec2(i01, 0.0) ).x;\n        \n        float a = rnd * 3.1415;\n        uv = uv * mat2( cos(a), -sin(a), sin(a), cos(a) );\n        \n        // Calculate the line\n        float t= 0.3 * abs(1.0 / sin( uv.x * 3.1415 + sin(uv.y * 30.0 * rnd +iTime) * 0.13)) - 1.0;\n        \n        // Kill repetition in the x axis\n        t *= 1.0 - smoothstep(0.3, 0.53, abs(uv.x));\n        \n        // Kill part of the y axis so it looks like a line with a beginning and end\n        float base = 0.1 + react;\n        rnd *= 0.2;\n        t *= 1.0 - smoothstep(base + rnd, base + 0.3 + rnd, abs(uv.y));\n        \n        c1 += t;\n        // (Nshuti) modulate radius of disk inversely by t to add fractured effect\n        radius /= t;\n    }\n    \n    //\n    // Calculat the final color\n    //\n    c1 = clamp(c1, 0.0, 1.0);\n    //vec3 col = mix(vec3(0.5,0.85,0.0), vec3(0.0), c1 - c);\n    //(Nshuti) Mix greyscale function and changed colour of vec3 from yellow to lime green (no longer\n    //visible due to greyscale function -> result purple red-ish colour \n    vec3 col = mix(vec3(0.5,0.85,0.0), vec3(0.0), c1 - c + greyScale);\n    col += c;\n    // (Nshuti) Add oscillating red disk (mainCol) and fragmented disk\n    fragColor = vec4( col, 1.0) +  disk(fragCoord.xy, center, radius, vec4(1.0, 0.0, 0.0, 1.0)+ mainCol) ;\n\n    \n}","name":"Image","description":"","type":"image"}]}