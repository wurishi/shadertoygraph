{"ver":"0.1","info":{"id":"4dScDz","date":"1491592982","viewed":117,"name":"AleixParellada-Bloom-ENTI","username":"AleixParelladaENTI","description":"University Project.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["enti"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n \tvec4 blur = texture(iChannel0,uv);\n    fragColor = texture ( iChannel1, uv);\n    \n    fragColor += blur;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Lighting\n\n#define LUMINANCE 2.4\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n    \n    vec3 lightColor = fragColor.xyz;\n    lightColor = vec3(dot(lightColor, vec3(0.222, 0.707, 0.071)));\n    float lighting = lightColor.x + lightColor.y + lightColor.z;\n\n    //get brighter pixels\n    if (lighting > LUMINANCE) {\n        fragColor.xyz = lightColor;\n    }\n    \n    else{\n        fragColor = vec4(0.0);\n    }\n    \n}\n","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//Vertical Gaussian Blur\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pixel = 1.0/iChannelResolution[0].xy;\n    vec2 uv = fragCoord.xy * pixel;\n    \n    float vertical = pixel.y;\n    vec4 sumatory = vec4(0.0,0.0,0.0,0.0);\n    \n\tfloat firstMultiply = 0.05;\n\tfloat secondMultiply = 0.16;\n    float normalization = 0.98;\n\n    for(float i = 4.0; i > 0.0; i--){\n        if(i == 4.0){\n        \tfirstMultiply = firstMultiply;\n        }\n        \n        if(i == 3.0){\n        \tfirstMultiply += 0.04;\n        }\n        \n        \n        if(i == 2.0){\n        \tfirstMultiply += 0.03;\n        }\n        \n        if(i == 1.0){\n        \tfirstMultiply += 0.03;\n        }\n\n        sumatory += texture(iChannel0, fract(vec2(uv.x,uv.y - i*vertical)))*firstMultiply;\n    } \n    \n    for(float j = 0.0; j <= 4.0; j++){\n        if(j == 0.0){\n\t\t\tsecondMultiply = secondMultiply;\n        }\n        \n        if(j == 1.0){\n\t\t\tsecondMultiply -= 0.01;\n        }\n        \n        if(j == 2.0){\n\t\t\tsecondMultiply -= 0.03;\n        }\n        \n        if(j == 3.0){\n\t\t\tsecondMultiply -= 0.03;\n        }\n        \n        if(j == 4.0){\n\t\t\tsecondMultiply -= 0.04;\n        }\n        \n        sumatory += texture(iChannel0, fract(vec2(uv.x,uv.y+j*vertical)))*secondMultiply;\n    }\n\n    \n    fragColor.xyz = sumatory.xyz/normalization; \n\tfragColor.a = 1.0;\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"//Horizontal Gaussian Blur\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 pixel = 1.0/iChannelResolution[0].xy;\n    vec2 uv = fragCoord.xy * pixel;\n    \n    float horizontal = pixel.x;\n    vec4 sumatory = vec4(0.0,0.0,0.0,0.0);\n    \n\tfloat firstMultiply = 0.05;\n\tfloat secondMultiply = 0.16;\n    float normalization = 0.98;\n\n    for(float i = 4.0; i > 0.0; i--){\n        if(i == 4.0){\n        \tfirstMultiply = firstMultiply;\n        }\n        \n        if(i == 3.0){\n        \tfirstMultiply += 0.04;\n        }\n        \n        \n        if(i == 2.0){\n        \tfirstMultiply += 0.03;\n        }\n        \n        if(i == 1.0){\n        \tfirstMultiply += 0.03;\n        }\n\n        sumatory += texture(iChannel0, fract(vec2(uv.x - i*horizontal,uv.y)))*firstMultiply;\n    } \n    \n    for(float j = 0.0; j <= 4.0; j++){\n        if(j == 0.0){\n\t\t\tsecondMultiply = secondMultiply;\n        }\n        \n        if(j == 1.0){\n\t\t\tsecondMultiply -= 0.01;\n        }\n        \n        if(j == 2.0){\n\t\t\tsecondMultiply -= 0.03;\n        }\n        \n        if(j == 3.0){\n\t\t\tsecondMultiply -= 0.03;\n        }\n        \n        if(j == 4.0){\n\t\t\tsecondMultiply -= 0.04;\n        }\n        \n        sumatory += texture(iChannel0, fract(vec2(uv.x - j*horizontal,uv.y)))*secondMultiply;\n    }\n\n    fragColor.xyz = sumatory.xyz/normalization; \n}","name":"Buf C","description":"","type":"buffer"}]}