{"ver":"0.1","info":{"id":"WlKBWW","date":"1614340166","viewed":220,"name":"Fibonacci blur","username":"nebbul","description":"Blur the image by sampling the image multiple times in a 2d fibonacci spiral pattern also called phyllotaxis. \n\nThe Phyllotaxis pattern exist all around us in nature, for example the positioning of sunflower seeds","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["blur","fibonacci","sunflower","phyllotaxis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\n// a 2d fibonacci disk, also called phyllotaxis\n// i = current sample count\n// c = total sample counts\nvec2 phyllotaxis(float i, float c)\n{\n\tfloat phi = M_PI * (3. - sqrt(5.)) * c;\n\n\tfloat angle = (i / c) * phi;\n\tfloat r = sqrt(i / c);\n\tfloat x = r * cos(angle);\n\tfloat y = r * sin(angle);\n\n\treturn vec2(x, y);\n}\n\n// sample texture multiple times in a phyllotaxis pattern - just like sunflower seeds are positioned\n// params:\n//    radius: how far to push the blur, higher values require higher sample count\n//    samples: how many seeds the sunflower have\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float radius = 0.05; // maximum blur radius\n    // uncomment to visualize blur radius\n    //radius = mix(0., 0.2, smoothstep(0., 0.5, mod(iTime*0.3, 1.)) - smoothstep(0.5, 1., mod(iTime*0.3, 1.)));\n    \n    float samples = 128.;\n    //uncomment to visualize sample count\n    //samples = floor(mix(5., 64., smoothstep(0., 0.5, mod(iTime*0.4, 1.)) - smoothstep(0.5, 1., mod(iTime*0.4, 1.))));\n    \n    vec4 col;\n    \n    for(float i = 0. ; i < samples ; i++)\n    {\n        vec2 offset = phyllotaxis(i, samples) * radius;\n        col += texture(iChannel0, uv + offset);\n    }\n    \n    col /= samples;\n    \n    fragColor = vec4(0.,0.,0.,1.);\n    \n    float line = (sin(iTime * 2.) + 1.0) / 2.0;\n    // compare blur and no blur\n    if(uv.x < line - 0.001) fragColor = vec4(col.rgb, 1.0);\n    if(uv.x > line + 0.001) fragColor = vec4(texture(iChannel0, uv).rgb, 1.0);\n\n    // Output to screen\n    fragColor = vec4(fragColor.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}