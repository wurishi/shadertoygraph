{"ver":"0.1","info":{"id":"3ldyzn","date":"1608353960","viewed":68,"name":"Breathing Grid 2","username":"jllusty","description":"Another breathing grid demo.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grid","breathing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 4.*atan(1.);\n\nmat2 rotate(float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c,s,-s,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 5.*(2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    \n    float sum = floor(uv.x) + floor(uv.y);\n    if (mod(sum,2.) < .5) {\n        float x = 2.*fract(uv.x)-1.;\n        float y = 2.*fract(uv.y)-1.;\n        x /= sqrt(2.);\n        y /= sqrt(2.);\n        vec2 diff = vec2(x,y)*rotate(pi/4.);\n        float p = (101.+99.*cos(pi*iTime))/200.;\n        float dp = pow(pow(abs(diff.x),p) + pow(abs(diff.y),p),1./p);\n        if(dp > 1.) {\n            col = vec3(0.);\n        }\n        else\n            col = vec3(1.);\n    }\n    else {\n        col = vec3(0.);\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}