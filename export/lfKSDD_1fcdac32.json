{"ver":"0.1","info":{"id":"lfKSDD","date":"1715224215","viewed":42,"name":"BrickSDFJ3D","username":"just_3d_things","description":"Brick SDF","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["patterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define len 2.\n#define width 5.\n\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\nfloat smin(float a, float b, float k) {\n  float h = clamp(0.5 + 0.5*(a-b)/k, 0.0, 1.0);\n  return mix(a, b, h) - k*h*(1.0-h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 dimention = vec2(len,width);\n    vec2 id = floor(uv*dimention);\n    vec2 offsetuv = uv*dimention;\n    offsetuv.x = uv.x*len + (mod(id.y,2.)*0.5);\n    vec2 fc = fract(offsetuv);\n    fc -=0.5;\n    fc = abs(fc)*2.;\n    fc = vec2(1.)-fc;\n    fc = fc/dimention;\n    float sdf = smin(fc.x,fc.y,0.05)*max(len,width);\n\n\n    // Output to screen\n    fragColor = vec4(vec3(sdf),1.0);\n}","name":"Image","description":"","type":"image"}]}