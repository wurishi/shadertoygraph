{"ver":"0.1","info":{"id":"Dd2XW3","date":"1671005905","viewed":253,"name":"Big Laser","username":"RecursiveCollapse","description":"A basic large laser, for more dramatic attacks. Couldn't find any that had the energy I was looking for, so I made my own. Commented for ease of reading.","likes":13,"published":1,"flags":0,"usePreview":1,"tags":["laser"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 redLaser = vec4(1.0, 0.1, 0.1, 1.0);\nconst vec4 blueLaser = vec4 (0.1, 0.75, 1, 1);\nconst vec4 white = vec4(1.0,1.0,1.0,1.0);\nconst float centerIntensity = 16.0;\nconst float laserStartPercentage = 0.0;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Define the laser effect and center color (these can be tuned to produce any color laser)\n    vec4 laserColor = blueLaser;\n    \n    \n    // Normalize pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Comment out to disable gay mode\n    laserColor.rgb = 0.5 + 0.5*cos(iTime + uv.xyx + vec3(0,2,4));\n    \n    //Get the background color for this pixel\n    vec4 baseColor = texture(iChannel1, uv);\n    \n    //Calculate how close the current pixel is to the center line of the screen\n    float intensity = 1.0 - abs(uv.y - 0.5);\n    \n    //Raise it to the power of 4, resulting in sharply increased intensity at the center that trails off smoothly\n    intensity = pow(intensity, 6.0);\n    \n    //Make the laser trail off at the start\n    if(uv.x < laserStartPercentage){\n        intensity = mix(0.0, intensity, pow(uv.x / laserStartPercentage, 0.5));\n    }\n    \n    //Pick where to sample the texture used for the flowing effect\n    vec2 samplePoint = uv;\n    //Stretch it horizontally and then shift it over time to make it appear to be flowing\n    samplePoint.x = samplePoint.x * 0.1 - iTime;\n    //Compress it vertically\n    samplePoint.y = samplePoint.y * 2.0;\n    //Get the texture at that point\n    float sampleIntensity = texture(iChannel0, samplePoint).r;\n    vec4 sampleColor;\n    sampleColor.r = sampleIntensity * laserColor.r;\n    sampleColor.b = sampleIntensity * laserColor.b;\n    sampleColor.g = sampleIntensity * laserColor.g;\n    \n    \n    //Mix it with 'intensity' to make it more intense near the center\n    vec4 effectColor = sampleColor * intensity * 2.0;\n    \n    //Mix it with the color white raised to a higher exponent to make the center white beam\n    effectColor = effectColor + white * centerIntensity * (pow(intensity, 4.0) * sampleIntensity);\n    \n    //Mix the laser color with the center beam\n    laserColor = mix(laserColor, effectColor, 0.8);\n    \n    //Reduce the brightness of the background to emphacize the laser\n    baseColor *= pow(1.0 - intensity, 3.0);\n    \n    //Add the laser to the background scene\n    baseColor = mix(baseColor, laserColor, intensity * 2.0);\n    \n    // Output to screen\n    fragColor = baseColor;\n}","name":"Image","description":"","type":"image"}]}