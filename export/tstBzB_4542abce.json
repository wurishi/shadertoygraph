{"ver":"0.1","info":{"id":"tstBzB","date":"1648408103","viewed":157,"name":"Sierpinski-Carpet Zoom","username":"Pedulatsch","description":"It zooms out","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","zoom","sponge","sierpinski","carpet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 col = vec3(1.0,0.3,0.0);\n\n\nbool InSet(vec2 uv)\n{\n   bool inSet = false;\n    \n    \n    vec2 maxX = vec2(0.0,1.0);\n    vec2 maxY = vec2(0.0,1.0);\n    \n    \n    \n    for(float i = 0.0; i<= 7.0;i++)\n    {\n        float xDis = (maxX.y-maxX.x)/3.0;\n        float yDis = (maxY.y-maxY.x)/3.0;\n        \n        bool lowerX;\n        bool middleX;\n        bool upperX;\n        \n        bool lowerY;\n        bool middleY;\n        bool upperY;\n        \n        \n        if(uv.x < maxX.x+xDis && uv.x >maxX.x)        \n        {\n            \n            maxX.y = maxX.x+xDis;\n            lowerX = true;\n        }\n        else if(uv.x > maxX.y-xDis && uv.x <maxX.y)\n        {\n           \n            maxX.x = maxX.y-xDis;\n            upperX = true;\n        }\n        else\n        {   \n           maxX.x = maxX.x+xDis;\n           maxX.y = maxX.y-xDis;\n           middleX = true;\n        }\n        \n        \n        \n        \n        if(uv.y < maxY.x+yDis && uv.y >maxY.x)            \n        {\n            \n            maxY.y = maxY.x+yDis;\n            lowerY = true;\n        }\n        else if(uv.y > maxY.y-yDis && uv.y <maxY.y)\n        {\n           \n            maxY.x = maxY.y-yDis;\n            upperY = true;\n        }\n        else\n        {   \n           maxY.x = maxY.x+yDis;\n           maxY.y = maxY.y-yDis;\n           middleY = true;\n        }\n        \n        \n        if(middleY && middleX) inSet = true;\n        \n    }\n    \n   return inSet;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    vec2 uv;\n    \n    \n    float realTime = float(int(iTime*20000.0)%int(15849.0))/10000.0;\n    \n    uv = fragCoord/iResolution.xy/((pow(2.0,3.0-realTime)));\n\n    if(InSet(uv))col = vec3(0.0,0.0,0.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}