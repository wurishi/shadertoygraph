{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Ref: http://adrianboeing.blogspot.in/2011/01/xor-demoeffect-in-webgl.html\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // The first step is to calculate the position of the pixel on the screen \n    // (or canvas in case of WebGL) normalised from -1 to 1\n\tvec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    \n    // Now each horizontal value will get an increasing value of red, and each \n    // vertical value will get an increasing value of green\n    \n    // 0,0 is origin we calculate distance from origin and set is as color \n\tfloat radius = sqrt(p.x*p.x + p.y*p.y);\n    \n    // (0.5* (1.0 + sin(iTime))) will clamp sin function range in 0-1\n\tfragColor = vec4(radius * (0.5* (1.0 + sin(iTime))),0.0,0.0,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldBSDD","date":"1412071035","viewed":224,"name":"SingleColorCircleGradient","username":"abhi_bansal","description":"2D Circle Gradient Animating in time","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","circle"],"hasliked":0,"parentid":"","parentname":""}}