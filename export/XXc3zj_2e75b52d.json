{"ver":"0.1","info":{"id":"XXc3zj","date":"1716733329","viewed":26,"name":"hhazle's wiggly circle","username":"hhazle","description":"trying to get a wiggly circle\n\nthanks FabriceNeyret2 for smoothstep suggestion!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.0 - iResolution.xy)/iResolution.y;\n\n\n    //get angle\n    float angle = acos(dot(vec2(0.0,1.0), normalize(vec2(uv))));\n    angle = degrees(angle);\n    if(uv.x < 0.0)\n    {\n        angle = 360.0 - angle;\n    }\n    angle = angle/360.0;\n    \n    //MAKE CIRCLES MORE WIGGLY WITH THESE 2 VARIABLES!\n    float circleWaveFrequency = 62.8; // higher number = more\n    float circleWaveMagnitude = 25.0; // higher number = less\n    float circleWaveSpeed     = 10.0; // higher number = faster\n    \n    // Time varying pixel color\n    vec3 col = vec3(1.0);\n    \n    float d = length(uv);\n    d += cos((angle * circleWaveFrequency) + iTime * circleWaveSpeed) / circleWaveMagnitude;\n    float speed = 0.25;\n    float frequency = 12.5;\n    float dWaved = (sin((d -(iTime * speed)) * frequency)+1.0) /2.0;\n    float dWaved2 = (cos((d -(iTime *0.125)) * frequency)+1.0) /2.0;\n    dWaved = smoothstep(dWaved, 0.3, 2.0);\n    dWaved2 = smoothstep(dWaved2, 0.3, 2.0);\n    col = vec3(0.5,dWaved, dWaved2);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}