{"ver":"0.1","info":{"id":"lsKyWh","date":"1521872623","viewed":286,"name":"damme smoky","username":"LegoCylon","description":"Creates smoke particles where edges are detected in the input image which are emitted upwards and decay over 1 second.","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["edge","smoke","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This work is licensed under the Creative Commons Attribution 4.0 International License. \n// To view a copy of this license, visit http://creativecommons.org/licenses/by/4.0/ or\n// send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n\n//  Blends the input texture with active particles\n//\nvoid mainImage (out vec4 o, in vec2 i) {\n    vec2 uv = i / iResolution.xy;\n    vec4 a = texture(iChannel0, uv);\n    vec4 b = texture(iChannel1, uv);\n    o = vec4(mix(a, b, b.a).rgb, 1.);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// This work is licensed under the Creative Commons Attribution 4.0 International License. \n// To view a copy of this license, visit http://creativecommons.org/licenses/by/4.0/ or\n// send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n\n//  Stores a reference copy of iChannel0 into a buffer that other shaders can use.\n//\nvoid mainImage (out vec4 o, in vec2 i) {\n    o = texture(iChannel0, i / iResolution.xy);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// This work is licensed under the Creative Commons Attribution 4.0 International License. \n// To view a copy of this license, visit http://creativecommons.org/licenses/by/4.0/ or\n// send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n\n//  Manages particle lifetime.\n//\nvoid mainImage (out vec4 o, in vec2 i) {\n    vec2 uv = i / iResolution.xy;\n\n    //  Pick the position of the next particle.\n    //\n    vec2 p = vec2(cos(25. * (iTime + uv.y)), -2.) / iResolution.xy;\n    \n    //  The particle at the current position.\n    //\n    vec4 a = texture(iChannel0, uv);\n    \n    //  The particle at the next position.\n    //\n    vec4 b = texture(iChannel0, uv + p);\n    \n    //  The input texture (video).\n    //\n    vec3 t = texture(iChannel1, uv).rgb;\n    \n    //  Create a particle when an edge is detected.\n    //\n    if (length(fwidth(t)) > .1) {\n        o.a = .5;\n    }\n    //  Prefer to keep the particle with the highest alpha value.\n    //\n    else {\n        o.a = max(0., max(a.a, b.a) - .5/60.);\n    }\n}","name":"Buf B","description":"","type":"buffer"}]}