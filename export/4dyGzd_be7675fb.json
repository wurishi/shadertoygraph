{"ver":"0.1","info":{"id":"4dyGzd","date":"1455788793","viewed":246,"name":"Jean Claude VanEdgeDetection","username":"Oodar","description":"Basic sobel ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["edgedetection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 kernelX;\nmat3 kernelY;\n\nvec4 toGrey( in vec4 col )\n{\n    float g = (0.3 * col.x) + (0.6 * col.y) + (0.11 * col.z);\n    return vec4(g, g, g, 1.0);\n}\n\nfloat getGrey( in vec4 col )\n{\n    return (0.3 * col.x) + (0.6 * col.y) + (0.11 * col.z);\n}\n\nvec2 getUVCoord(in vec2 fragCoord)\n{\n    return fragCoord.xy / iResolution.xy;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    kernelX[0] = vec3(-1.0, -2.0, -1.0);\n\tkernelX[1] = vec3(0.0, 0.0, 0.0);\n\tkernelX[2] = vec3(1.0, 2.0, 1.0);\n\n\tkernelY[0] = vec3(-1.0, 0.0, 1.0);\n\tkernelY[1] = vec3(-2.0, 0.0, 2.0);\n\tkernelY[2] = vec3(-1.0, 0.0, 1.0);\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 topLeft = getUVCoord(vec2(fragCoord.x - 1.0, fragCoord.y - 1.0));\n    vec2 midLeft = getUVCoord(vec2(fragCoord.x - 1.0, fragCoord.y));\n    vec2 botLeft = getUVCoord(vec2(fragCoord.x - 1.0, fragCoord.y + 1.0));\n    \n    vec2 midTop = vec2(uv.x, uv.y - 1.0);\n    vec2 mid = uv;\n    vec2 midBot = vec2(uv.x, uv.y + 1.0);\n    \n    vec2 topRight = getUVCoord(vec2(fragCoord.x + 1.0, fragCoord.y - 1.0));\n    vec2 midRight = getUVCoord(vec2(fragCoord.x + 1.0, fragCoord.y));\n    vec2 botRight = getUVCoord(vec2(fragCoord.x + 1.0, fragCoord.y + 1.0));\n    \n    float magX = 0.0;\n    float magY = 0.0;\n    \n    // apply kernel in x direction\n    magX += getGrey(texture(iChannel0, topLeft, 0.0)) * kernelX[0][0];\n    magX += getGrey(texture(iChannel0, midLeft, 0.0)) * kernelX[0][1];\n    magX += getGrey(texture(iChannel0, botLeft, 0.0)) * kernelX[0][2];\n    \n    magX += getGrey(texture(iChannel0, topRight, 0.0)) * kernelX[2][0];\n    magX += getGrey(texture(iChannel0, midRight, 0.0)) * kernelX[2][1];\n    magX += getGrey(texture(iChannel0, botRight, 0.0)) * kernelX[2][2];\n    \n    \n    // apply kernel in y direction\n    magY += getGrey(texture(iChannel0, topLeft, 0.0)) * kernelY[0][0];\n    magY += getGrey(texture(iChannel0, midLeft, 0.0)) * kernelY[0][1];\n    magY += getGrey(texture(iChannel0, botLeft, 0.0)) * kernelY[0][2];\n    \n    magY += getGrey(texture(iChannel0, topRight, 0.0)) * kernelY[2][0];\n    magY += getGrey(texture(iChannel0, midRight, 0.0)) * kernelY[2][1];\n    magY += getGrey(texture(iChannel0, botRight, 0.0)) * kernelY[2][2];\n    \n    //fragColor = toGrey(texture(iChannel0, topLeft, 0.0));\n    float mag = sqrt((magX*magX) + (magY * magY));\n    \n    fragColor = vec4(mag, mag, mag, 1.0);\n}","name":"Image","description":"","type":"image"}]}