{"ver":"0.1","info":{"id":"Md3Bzs","date":"1526331321","viewed":108,"name":"Sootie","username":"gilesruscoe","description":"sootie","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["soot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //uvs\n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.y / iResolution.x;\n    uv = uv * 2.0 - 1.0;\n    uv += vec2(sin(iTime), cos(iTime)) * sin(iTime) * 0.25;\n    uv.y *= ar;\n    \n    //basic shape\n    float lenUV = length(uv);\n    float body = smoothstep(lenUV, lenUV + 0.35, 0.5);\n\n    float rot = atan(uv.y, uv.x);\n\n    //anim\n    rot += sin(rot * 12.0 + iTime * 3.0 - lenUV * 50.0) * 0.1;\n    float sinrot = sin(rot * 8.0) * 0.5 + 0.5;\n    \n    //arms\n    float arms = sinrot * (1.0 - lenUV * 4.5) * 5.0;\n\t\n    //eyes\n    float eyeshapesL = length(uv * vec2(2.0, 1.0) + vec2(0.1, 0.0));\n    float eyeshapesR = length(uv * vec2(2.25, 1.2) - vec2(0.1, -0.02));\n    float pupilshapesL = length(uv * vec2(1.0, 1.0) + vec2(0.05, 0.055));\n    float pupilshapesR = length(uv * vec2(1.2, 1.0) - vec2(0.05, -0.055));\n    float eyes = smoothstep(eyeshapesL, eyeshapesL + 0.008, 0.1);\n    eyes += smoothstep(eyeshapesR, eyeshapesR + 0.008, 0.1);\n    eyes -= smoothstep(pupilshapesL, pupilshapesL + 0.005, 0.035);\n    eyes -= smoothstep(pupilshapesR, pupilshapesR + 0.005, 0.035);\n    \n    //blinky blink\n    eyes *= step(sin(iTime * 3.0 + cos(iTime * 2.0) * 2.0), 0.95);\n\n    //comp\n    float comp = arms + body;\n\tcomp *= 3.0;\n    comp = 1.0-clamp(comp, 0.0, 1.0);\n    comp += eyes;\n    fragColor = vec4(comp);\n}","name":"Image","description":"","type":"image"}]}