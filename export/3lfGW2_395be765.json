{"ver":"0.1","info":{"id":"3lfGW2","date":"1557597766","viewed":89,"name":"LSD Sphere","username":"Hendiadyoin","description":"wierd coloring with rayMarching and wrongfully bending space","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MaxSteps 100\n#define MaxDist 50.\n#define MinDist .001\n\n\nstruct Ray{\n\tfloat dist;\n    vec3 pos;\n    int steps;\n};\n\nfloat dS(vec3 p,vec4 sphere){\n    p = abs(p);\n    p%= 5.;\n\treturn length(p-sphere.xyz) - sphere.w;\n}\n\nfloat dPl(vec3 p){\n\treturn p.y;\n}\n\nfloat map(vec3 p){\n\tfloat sd = dS(p,vec4(0,1,0,1)),\n        pd = dPl(p);\n    return min(sd,pd);\n}\n\nRay rayMarch(vec3 ro,vec3 rd){\n\tfloat d = 0.;\n    int st;\n    for(st = 0;st<MaxSteps;st++){\n    \tfloat ds = map(ro+rd*d);\n        if(ds<MinDist) break;\n        d+= ds;\n        if(d>MaxDist) break;\n    }\n    return Ray(d,ro+rd*d,st);\n}\n\nvec3 estNormal(vec3 p){\n\tvec2 sstep = vec2(MinDist,0);\n    float gradx = map(p+sstep.xyy)-map(p-sstep.xyy);\n    float grady = map(p+sstep.yxy)-map(p-sstep.yxy);\n    float gradz = map(p+sstep.yyx)-map(p-sstep.yyx);\n    \n\treturn normalize(vec3(gradx,grady,gradz));\n}\n\n\nvoid mainImage( out vec4 color, in vec2 coord )\n{\n    vec2 uv = (coord-.5*iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(3.*sin(iTime),1,-3.*cos(iTime));\n    vec3 rd = normalize(vec3(uv,1));\n    rd.xz *= mat2(cos(iTime),-sin(iTime),sin(iTime),cos(iTime));\n    \n    vec3 col = vec3(0);\n\tRay r = rayMarch(ro,rd);\n    \n    if(r.dist<MaxDist){\n    \tcol += abs(r.pos);\n        col %= float(1-r.steps/MaxSteps);\n        col += max(estNormal(r.pos),0.);\n    }\n    \n    \n    // Output to screen\n    color = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}