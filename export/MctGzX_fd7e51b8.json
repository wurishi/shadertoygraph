{"ver":"0.1","info":{"id":"MctGzX","date":"1711989165","viewed":31,"name":"Planets of the fabulous system","username":"SASHA6668","description":"Planets of the fabulous system","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["planets"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 BGcol = vec3(0.0, 0.0, 0.5); \n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    fragColor = vec4(BGcol, 1.0); \n    vec2 uv = fragCoord / iResolution.xy;\n\n    float cy1 = 0.5 + sin(iTime)/3.0, cx1 = 0.5 + cos(iTime)/3.0, radius1 = 0.05; \n    float cy2 = 0.5 + cos(iTime)/3.0, cx2 = 0.5 + sin(iTime)/3.0, radius2 = 0.08;\n    float cy3 = 0.5, cx3 = 0.5, radius3 = 0.1;\n    float cy4 = 0.5 + sin(iTime)/2.0, cx4 = 0.5 + cos(iTime)/3.0, radius4 = 0.02;\n    \n    float colorTime = sin(iTime);\n    vec3 color = vec3(abs(colorTime + 0.5), abs(colorTime - 0.1), abs(colorTime + 0.9));\n    \n\n    float distance1 = sqrt((uv.x - cx1) * (uv.x - cx1) + 0.35 * (uv.y - cy1) * (uv.y - cy1));\n    float distance2 = sqrt((uv.x - cx2) * (uv.x - cx2) + 0.35 * (uv.y - cy2) * (uv.y - cy2));\n    float distance3 = sqrt((uv.x -cx3) * (uv.x - cx3) + 0.35 * (uv.y - cy3) * (uv.y - cy3));\n    float distance4 = sqrt((uv.x -cx4) * (uv.x - cx4) + 0.35 * (uv.y - cy4) * (uv.y - cy4));\n\n\n    if (distance1 <= radius1) {\n        fragColor = vec4(0.9, 0.0, 0.0, 1.0); \n    } else if (distance2 <= radius2) {\n        fragColor = vec4(0.9, 0.9, 0.0, 1.0); \n    } else if (distance3 <= radius3) {\n        fragColor = vec4(color, 1.0); \n        } \n\n       else if (distance4 <= radius4) {\n        fragColor = vec4(0.9, 0.4, 0.0, 1.0); \n    }\n}\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}