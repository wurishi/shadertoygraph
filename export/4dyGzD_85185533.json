{"ver":"0.1","info":{"id":"4dyGzD","date":"1453393124","viewed":196,"name":"Slightly random spheres","username":"Emil","description":"Slightly random.., yes","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 cellColor = vec4(0.0,0.0,0.0,0.0);\nvec3 cellPosition = vec3(0.0,0.0,0.0);\nfloat cellRandom = 0.0, onOffRandom = 0.0;\n\n\nfloat random (vec3 i){\n\treturn fract(sin(dot(i.xyz,vec3(4154895.34636,8616.15646,26968.489)))*968423.156);\n}\n\nvec4 getColorFromFloat (float i){\n    i *= 2000.0;\n    return vec4(normalize(vec3(abs(sin(i+radians(45.0))),abs(sin(i+radians(90.0))),abs(sin(i)))),1.0);\n}\n\nvec3 getPositionFromFloat (float i){\n    i *= 2000.0;\n    return vec3(normalize(vec3(abs(sin(i+radians(45.0))),abs(sin(i+radians(90.0))),abs(sin(i)))))-vec3(0.5,0.5,0.5);\n}\n\nfloat map(vec3 p){\n    //p *= 1.0;\n    cellRandom = random(floor((p*0.5)+0.0*vec3(0.5,0.5,0.5)));\n    onOffRandom = random(vec3(5.0,2.0,200.0)+floor((p*0.5)+0.0*vec3(0.5,0.5,0.5)));\n    cellColor = getColorFromFloat(cellRandom);\n    cellPosition = getPositionFromFloat(cellRandom);\n    p.x = mod(p.x, 2.0);\n    p.y = mod(p.y, 2.0);\n    p.z = mod(p.z, 2.0);\n    p += 1.0*cellPosition.xyz;\n    p += p.xyz*sin(10.0*iTime+onOffRandom*300.0)*\t\t\t0.05;\n    p += p.yzx*cos(10.0*iTime+onOffRandom*300.0+1561.355)*\t0.05;\n    if(onOffRandom>0.5){\n    \treturn length(p-vec3(1.0,1.0,1.0)) - 0.5*cellRandom*abs(sin(iTime+cellRandom*2000.0));\n    } else {\n        return 1.0;\n    }\n}\n\nfloat trace(vec3 o, vec3 r){\n    float t = 0.5;\n    const int maxSteps = 48;\n    for (int i = 0; i < maxSteps; i++){ \n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d*0.35;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv*2.0 -1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv, 1.0));\n    \n    vec3 o = vec3(0.0,0.0,-3.0);\n    o.z = 2.6*iTime*0.5+(sin(iTime)*1.25);\n    \n    \n    float t = trace(o,r);\n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    vec3 fc = vec3(fog);\n    \n\tfragColor = vec4(fc*vec3(2.0,1.0,2.0)*2.0,1.0)*cellColor;\n}","name":"Image","description":"","type":"image"}]}