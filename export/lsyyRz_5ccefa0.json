{"ver":"0.1","info":{"id":"lsyyRz","date":"1520804511","viewed":145,"name":"divisionism 1","username":"kariluoma","description":"Use splotches of pure color to represent the target color. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pointillism","divisionism"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define red(mix)   vec4(mix.r > .5, 0, 0, mix.a)\n#define green(mix) vec4(0, mix.g > .5, 0, mix.a)\n#define blue(mix)  vec4(0, 0, mix.b > .5, mix.a)\n#define yellow(mix)  vec4(mix.r>.5 && mix.g>.5, mix.r>.5 && mix.g>.5, 0, mix.a)\n#define magneta(mix) vec4(mix.r>.5 && mix.b>.5, 0, mix.r>.5 && mix.b>.5, mix.a)\n#define cyan(mix)    vec4(0, mix.g>.5 && mix.b>.5, mix.g>.5 && mix.b>.5, mix.a)\n#define value(mix)    vec4(vec3(mix.r>.5 && mix.g>.5 && mix.b>.5), mix.a)\n#define anypure(mix)  vec4(mix.r > .5, mix.g > .5, mix.b > .5, mix.a)\n\n#define SUBCELLS 3\n\nint which_cell(vec2 w)\n{\t\n\t// returns an int between 0 and (SUBCELLS*SUBCELLS)-1\n\tw = floor(w*float(SUBCELLS)); \n\tint i = int(w.x), j = int(w.y); \n\treturn i + SUBCELLS*j;\n}\n\n//iChannel0: texture (e.g. Claude Van Damme)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float fSUB = float(SUBCELLS);\n    #if 1\n    // good default\n    float CELL_1 = iResolution.y/3.;\n    #else\n    // use mouse.x to fine-tune\n\tfloat CELL_1 = iResolution.y/iMouse.x*10.;\n    #endif\n\tfloat CELL_2 = CELL_1 * fSUB;\n    \n    vec2 xy = CELL_1 * fragCoord.xy  / iResolution.y;\n    vec2 s1 = floor(xy); // sample bottom-left corner of CELL_1\n    vec2 T = iChannelResolution[0].xy; \n    vec4 t = texture(iChannel0, s1 / CELL_1 * T.y / T); // target color\n    \n    vec2 s2 = floor(xy * fSUB); // represent the target color with (SUBCELLS*SUBCELLS) cells\n\n    vec4 c = t; // sampled color\n    \n    switch (which_cell( s2 / fSUB - s1 ))\n    {\n        case 0: c = cyan(t);\tbreak;\tcase 1: c = anypure(t);\tbreak;\tcase 2: c = value(t);\tbreak;\n        case 3: c = value(t);\tbreak;\tcase 4: c = cyan(t);\tbreak;\tcase 5: c = anypure(t);\tbreak;\n        case 6: c = anypure(t);\tbreak;\tcase 7: c = value(t);\tbreak;\tcase 8: c = cyan(t);\tbreak;\n        default: break;\n    }\n    \n    \n    vec2 d = xy*fSUB - s2 - 0.5; // transform coordinates to unit circle\n   \t\n    if (length(d) <  0.443)\tfragColor = c;\n    else           \t\t\tfragColor = value(t);\n}\n","name":"Image","description":"","type":"image"}]}