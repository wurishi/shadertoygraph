{"ver":"0.1","info":{"id":"clSGWW","date":"1673528965","viewed":99,"name":"Forest beginner ","username":"benjik42","description":"Hey ! I ve follow a tuto from the art of code ! Love this channel ! I've learn a tone of this 2 series of videos !\nHope you will enjoy !","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["forestbeginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n\nfloat TaperBox(vec2 pos, float wb, float wt, float hb, float ht, float blur){\nfloat m = S(-blur,blur,pos.y-hb);\nm *= S(blur,-blur,pos.y-ht);\npos.x = abs(pos.x);\n\nfloat w = mix(wb,wt,(pos.y-hb)/(ht-hb));\nm *= S(blur,-blur,pos.x-w);\nreturn m;\n}\nvec4 Tree(vec2 uv ,vec3 col, float blur){\n    float m = TaperBox(uv,0.05, .05, -.05, .25, blur);\n    m += TaperBox(uv,0.25, .15, 0.25, .5, blur);\n    m += TaperBox(uv,0.22, .08, 0.5, .75, blur);\n    m += TaperBox(uv,0.15, 0., 0.75, 1., blur);\n    \n\n    \n    float shadow= TaperBox(uv-vec2(.25,0),0.1, .5, 0.7, .75, blur);\n    shadow += TaperBox(uv+vec2(.25,0),0.1, .5, 0.45, .5, blur);\n    shadow += TaperBox(uv-vec2(.25,0),0.1, .5, 0.2, .25, blur);\n    col -= shadow*.8;\n    return vec4(col,m);\n}\n\nfloat GetHeight(float x){\n    return sin(x*.234)+sin(x)*.3;\n}\nvec4 Layer(vec2 uv, float blur){\n    \n    vec4 col = vec4(0.);\n    uv.x += iTime * 0.2;\n    float id = floor(uv.x);\n    float n = fract(sin(id*234.56)*5463.26)*2.-1.;\n    float x = n*.3;\n    float y = GetHeight(uv.x);\n    float temps = uv.y + y;\n    col += S(blur, -blur, temps);\n    y = GetHeight(id+.5+x);\n    uv.x = fract(uv.x)-.5;\n    vec4 tree = Tree((uv-vec2(x,-y))* vec2(1,1.+n*.2),vec3(1), blur);\n    return mix(col,tree,tree.a);\n\n\n}\nfloat Moon(vec2 pos, float r){\n    float M = S(.01,.01,1.-(length(pos)-r));\n    M-=S(.01,.01,1.-(length(pos+vec2(-.5,-.5))-r));\n    \n    return M;\n\n\n}\nfloat Sun(vec2 pos, float r){\n    float M = S(.01,.01,1.-(length(pos)-r));  \n    return M;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy) / iResolution.y;\n    vec2 M = (iMouse.xy/iResolution.xy)*2.-1.;\n    \n    \n    \n    float t = iTime*.1;\n    float blur = 0.005;\n    vec4 col = vec4(0); \n    col += Moon(uv*8.+vec2(10,-1.8)+vec2(mix(-25.,25.,fract(iTime/10.)),0.),.005);\n    col += Sun(uv*8.+vec2(-10,-1.8)+vec2(mix(-15.,15.,fract(iTime/10.)),0.),.005);\n    vec4 layer;\n    for(float i =0.; i<1.; i+= 1./ 10.){\n        float scale = mix(20.,1.,i);\n        blur = mix(.05,.005,i);\n        layer = Layer(uv*scale+vec2(t+i*100.,i*3.)-M, blur);\n        layer.rgb *= (1.-i)*vec3(.9,.9,1.);\n        \n        col = mix(col,layer,layer.a);\n    \n    \n    \n    \n    }\n    \n    \n    \n    //col.rg = uv;\n    \n    if(abs(uv.x)<(1./iResolution.y)) col.g = 1.;\n    if(abs(uv.y)<(1./iResolution.y)) col.r = 1.;\n    fragColor = col;\n} ","name":"Image","description":"","type":"image"}]}