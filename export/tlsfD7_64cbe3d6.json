{"ver":"0.1","info":{"id":"tlsfD7","date":"1596944233","viewed":266,"name":"brick to leaf","username":"3SvBop3F","description":"brick texture deformed to look live leaves","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["leaf","brick","bricks","leaves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    // regular uv\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    // square, centered uv\n    float max_res_dim = max(iResolution.x, iResolution.y);\n    vec2 uvsq_offset = (1.-(iResolution.xy/max_res_dim))/2.;\n\n    vec2 uvsq = (        // special case screen-is-uv-but-square-uv-space\n        gl_FragCoord.xy  // width/height\n        / max_res_dim    // of max width/height\n    ) + uvsq_offset;     // plus half the w/h margin\n\t\t\t\t\t     // is centered\n    \n    uv = uvsq;\n    \n    \n    uv = abs((uv * 2.) - 1.); // mao 0_1 to n1_0_1\n\n\t// petal-like deform\n    uv.x = pow(uv.x, uv.y);\n    uv.y = pow(uv.y, uv.x);\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(\n        texture(iChannel0, uv) * vec4(col, 1.0)\n    );\n}","name":"Image","description":"","type":"image"}]}