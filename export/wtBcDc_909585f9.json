{"ver":"0.1","info":{"id":"wtBcDc","date":"1595601654","viewed":157,"name":"Waves v.1","username":"pli","description":"First shader test, very basic 2d stuff.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SHADOW 0.03\n\n\nfloat covered(vec2 uv, float speed, float height, float vOffset) {\n    float distance = height * cos(speed * iTime + uv.y * 2.0 + uv.x * 300.0 * height)\n        \t+ 0.3 * height * cos(speed * iTime + uv.x * 100.0 * height)\n        \t+ vOffset - uv.y;\n    \n    float covered;\n    if (distance < 0.0) {\n        covered = 1.0;\n    } else if (distance < SHADOW) {\n        covered = 1.0 - distance / SHADOW;\n    } else {\n        covered = 0.0;\n    }\n    return covered;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec4 result;\n    float c = covered(uv, 1.5, 0.02, 0.2);\n    if (c > 0.0) {\n        result = vec4(0.0, 0.18, 0.2 ,1.0) * sqrt(c);\n    } else {\n        c = covered(uv, 2.5, 0.04, 0.0);\n        if (c > 0.0) {\n        \tresult = vec4(0.14, 0.37, 0.4 ,1.0) * sqrt(c);\n        } else {\n            c = covered(uv, 4.0, 0.05, -0.25);\n            if (c > 0.0) {\n                result = vec4(0.25, 0.47, 0.51 ,1.0) * sqrt(c);\n            } else {\n                result = vec4(0.41, 0.58, 0.61 ,1.0);\n            }\n        }\n    }\n    \n    // Output to screen\n    fragColor = result;\n}","name":"Image","description":"","type":"image"}]}