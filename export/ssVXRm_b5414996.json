{"ver":"0.1","info":{"id":"ssVXRm","date":"1634447579","viewed":57,"name":"There and back","username":"nkaretnikov","description":" ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","circle","inversion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Public domain.\n\n#define S(lower, upper, x) smoothstep(lower, upper, x)\n\nvec4 Circle(vec4 col, vec2 uv, vec2 pos, float radius, float blur)\n{\n    float dist = length(uv - pos);\n    col.a = S(radius, radius - blur, dist);\n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec4 col = vec4(0.);\n    \n    vec4 white = vec4(1.);\n    \n    float t = sin(iTime);\n    \n    vec4 circle = Circle(white, uv * t, vec2(0.), .3, .01 * t);\n    \n    col = mix(col, circle, circle.a);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}