{"ver":"0.1","info":{"id":"MtsBzl","date":"1512998270","viewed":125,"name":"line clipping","username":"voax","description":"simple test for one-sided line clipping function","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","line","clipping","debugging"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// clip line A-B to [0,0,size] when A is pre-known to be inside the area\nvec2 clipLineB(vec2 a, vec2 b, vec2 size) {\n    vec2 d = b - a;\n\n    if (b.x < 0.0)\n        b = vec2(0, a.y - a.x * (d.y / d.x));\n    else if (b.x > size.x)\n        b = vec2(size.x, a.y + (size.x - a.x) * (d.y / d.x));\n\n    if (b.y < 0.0)\n        b = vec2(a.x - a.y * (d.x / d.y), 0);\n    else if (b.y > size.y)\n        b = vec2(a.x + (size.y - a.y) * (d.x / d.y) , size.y);\n\n    return b;\n}\n\nfloat SqDistancePtSegment( vec2 a, vec2 b, vec2 p )\n{\n    vec2 n = b - a;\n    vec2 pa = a - p;\n \n    float c = dot( n, pa );\n \n    // Closest point is a\n    if ( c > 0.0f )\n        return dot( pa, pa );\n \n    vec2 bp = p - b;\n \n    // Closest point is b\n    if ( dot( n, bp ) > 0.0f )\n        return dot( bp, bp );\n \n    // Closest point is between a and b\n    vec2 e = pa - n * (c / dot( n, n ));\n \n    return dot( e, e );\n}\n\nfloat drawLine(vec2 a, vec2 b, vec2 p) {\n    return 1.0 - SqDistancePtSegment(a,b,p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // draw clipping rectangle:\n    vec2 ll = vec2(50, 50);\n    vec2 ur = vec2(700, 400);\n    vec2 lr = vec2(ur.x, ll.y);\n    vec2 ul = vec2(ll.x, ur.y);\n    float l = drawLine(ll, ul, fragCoord);\n    float r = drawLine(lr, ur, fragCoord);\n    float b = drawLine(ll, lr, fragCoord);\n    float t = drawLine(ul, ur, fragCoord);\n    float rect = max(max(l,r),max(b,t));\n\n    // draw clipped line\n    vec2 p1 = vec2(350, 250);\n    vec2 p2 = iMouse.xy;\n    p2 = clipLineB(p1 - ll, p2 - ll, ur - ll) + ll;\n    float line = drawLine(p1, p2, fragCoord);\n\n    fragColor = vec4(vec3(max(rect,line)),1);\n}","name":"Image","description":"","type":"image"}]}