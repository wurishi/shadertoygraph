{"ver":"0.1","info":{"id":"MXySDw","date":"1720015559","viewed":177,"name":"Matrix Effect (HW3 for ARTS1308)","username":"Reversion","description":"Tried realizing some images that can leave an impression of the movie `Matrix`.\nReference: https://www.shadertoy.com/view/ldccW4\nExcept for what the original work did (raining chars), I made some modifications to reach a glitch effect.\nHope you like it!\n","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["glitch","matrix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// CC BY-SA 3.0\n// Created by Reversion\n// This shader is for a course, Fragment Shading Art (ARTS1308) in ShanghaiTech University.\n// Reference: https://www.shadertoy.com/view/ldccW4 created by WillKirkby\n\n#define PI 3.1415926535\n\nfloat sdCircle( in vec2 p, in float r){\n    return length(p) -r;\n}\n\nvec2 rotate ( in vec2 p, in float theta ){\n    vec2 pos;\n    pos.x = cos(theta) * p.x - sin(theta) * p.y;\n    pos.y = sin(theta) * p.x + cos(theta) * p.y;\n    return pos;\n}\n\nfloat text(vec2 fragCoord){\n    vec2 uv = mod(fragCoord.xy, 16.)*.0625;\n    vec2 block = fragCoord*.0625 - uv;\n    uv = (uv*.65 + floor(texture(iChannel1, block/iChannelResolution[1].xy + iTime*.005).xy * 16.))*-.9;\n    uv *= -.0625;\n    \n    return texture(iChannel0, uv).r;\n}\n\nvec3 rain(vec2 fragCoord){\n    fragCoord.y -= mod(fragCoord.y, 16.);\n    \n    float offset=sin(fragCoord.y*15.);\n    float speed=cos(fragCoord.y*3.)*.3+.4;\n   \n    float x = fract(fragCoord.x/iResolution.x + iTime*speed);\n    return vec3(.1,1.,.7) / x*.2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    fragCoord = rotate(fragCoord, PI/50.*iTime);\n    vec4 base = vec4(text(fragCoord)*rain(fragCoord),1.0);\n    vec4 base1 = vec4(text(fragCoord + 200.)*rain(fragCoord + 200.),1.0);\n    fragColor = mix(base, base1, 0.5);\n    //fragColor = base;\n    \n    vec2 lightPos = rotate(vec2(800.,0.),PI/20.*iTime);\n    vec4 lightCol = fragColor;\n    //lightCol = vec4(0.,smoothstep(.0001,.0,sdCircle(fragCoord-lightPos, iTime * 20.*PI)),.0,1.); !This is a faliure\n    fragColor = mix(fragColor, lightCol,.5);\n \n}","name":"Image","description":"","type":"image"}]}