{"ver":"0.1","info":{"id":"7tVfDD","date":"1664556452","viewed":53,"name":"Mandelbrot sinner","username":"guillermolmr","description":"Just some stuff I came up while playing around.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","fidgetspinner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int mandelbrot(vec2 uv) {\n    vec2 z = uv;\n    for (int i = 0; i < 255; i++) {\n        if (dot(z, z) > 4.0) return i;\n        z = vec2(sin(iTime)*z.x * z.x -cos(iTime)* z.y * z.y, 2.0 * z.x * z.y) + uv;\n    }\n    return 0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy*2.0 - iResolution.xy) * 2.0/ iResolution.x;\n    if(iMouse.z>0.0){\n        \n        //uv+=(iMouse.xy*iTime - iResolution.xy) * 2.0/ iResolution.x;\n        \n        //uv/=iTime;\n    }\n    float iterations=300.0;\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n/*\n    vec2 p=uv;\n    float i=.0;\n    float d=0.0;\n    \n    for(;i<iterations && d<4.0;i+=1.0){\n        d=dot(p,p);\n        float t=p.x*p.x-p.y*p.y+uv.x;\n        p.y=2.0*p.x*p.y+uv.y;\n        p.x=t;\n    \n    }*/\n    \n    col=vec3(float(mandelbrot(uv))/255.0);\n    col+=vec3(0.04,0.47,0.31);\n    col.z*=col.z*.75;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}