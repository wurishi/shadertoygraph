{"ver":"0.1","info":{"id":"msyGDR","date":"1678381993","viewed":113,"name":"Reverse Order Transparency","username":"Cieric","description":"Just a test if I could reverse the mix operation on transparency, aka rendering transparency front to back instead of back to front. It all appears to work, but I assume further implementation will run into issues.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["transparency"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4[] colors = vec4[](\n    vec4(0.9, 0.1, 0.2, 1.0),\n    vec4(0.1, 0.9, 0.2, 0.9),\n    vec4(0.1, 0.2, 0.9, 0.8),\n    vec4(0.9, 0.1, 0.2, 0.6),\n    vec4(0.1, 0.9, 0.2, 0.4),\n    vec4(0.1, 0.2, 0.9, 0.2),\n    vec4(0.9, 0.1, 0.2, 0.1),\n    vec4(0.1, 0.9, 0.2, 0.05)\n);\n\nconst int colors_count = 8;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 base = texture(iChannel0, uv * vec2(1.0, 2.0));\n    \n    uv.x *= iResolution.x/iResolution.y;\n\n    float dist = cos(iTime) * cos(iTime) * 0.2;\n\n    vec4 col;\n\n    if(uv.y < 0.5)\n    {\n        col = vec4(0,0,0,1);\n        for(int i=colors_count-1; i>=0; --i)\n        {\n            float xOffset = dist*float(i);\n            float yOffset = float(i%2) * 0.1;\n            if(uv.y > (0.0 + yOffset) &&\n               uv.y < (0.4 + yOffset) &&\n               uv.x > (0.1 + xOffset) &&\n               uv.x < (0.5 + xOffset)\n            ) {\n                col = vec4(col.rgb + col.a * colors[i].a * colors[i].rgb, col.a * (1.0 - colors[i].a));\n            }\n        }\n        \n        col = vec4(col.rgb + col.a * base.a * base.rgb, col.a * (1.0 - base.a));\n    }\n    else\n    {\n        uv.y -= 0.5;\n        col = base;\n        for(int i=0; i<colors_count; ++i)\n        {\n            float xOffset = dist*float(i);\n            float yOffset = float(i%2) * 0.1;\n            if(uv.y > (0.0 + yOffset) &&\n               uv.y < (0.4 + yOffset) &&\n               uv.x > (0.1 + xOffset) &&\n               uv.x < (0.5 + xOffset)\n            ) {\n                col.rgb = mix(col.rgb, colors[i].rgb, colors[i].a);\n            }\n        }\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(col.rgb, 1.0);\n}","name":"Image","description":"","type":"image"}]}