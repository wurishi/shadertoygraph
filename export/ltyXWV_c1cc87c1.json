{"ver":"0.1","info":{"id":"ltyXWV","date":"1485925178","viewed":89,"name":"Reveal Assignment 2","username":"TimeforGLSL","description":"Assignment 2 for Graphics","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["filtersblurcirclessharpen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//////////////////////////////// \n///////Code from Lectures///////\n////////////////////////////////\n\n//Layers for the matrices\nvec4 blurlayer; \nvec4 sharplayer; \n\n//Blur image\nmat3 blur = mat3(\n 0.111, 0.111, 0.111, \n 0.111, 0.111, 0.111, \n 0.111, 0.111, 0.111 \n);\n\n//Sharpen image\nmat3 sharpen = mat3(\n \t0.0, -1.0, 0.0, \n \t-1.0, 5.0, -1.0, \n \t0.0, -1.0, 0.0 \n);\n\n\n//sampler for ichannel0\nvec3 sample(const int x, const int y, in vec2 fragCoord)\n{\n vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n uv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n return texture(iChannel0, uv).xyz;\n}\n\n\n\n//filter thing for sampler\nvec3 filter(in vec2 fragCoord, mat3 kernel)\n{\n vec3 sum = sample(-1, -1, fragCoord) * kernel[0][0]\n + sample(-1, 0, fragCoord) * kernel[0][1]\n + sample(-1, 1, fragCoord) * kernel[0][2]\n + sample( 0, -1, fragCoord) * kernel[1][0]\n + sample( 0, 0, fragCoord) * kernel[1][1]\n + sample( 0, 1, fragCoord) * kernel[1][2]\n + sample( 1, -1, fragCoord) * kernel[2][0]\n + sample( 1, 0, fragCoord) * kernel[2][1]\n + sample( 1, 1, fragCoord) * kernel[2][2];\n \n return sum;\n}\n\n////////////////////////////////\n////////////////////////////////\n////////////////////////////////\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Little variable for the circle\n    float radius = 0.15; \n    \n    //Track mouse, initialize uv, and set up filters for shader\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 mCoord = iMouse.xy / iResolution.xy;  \n \tvec3 blurImage = filter(fragCoord.xy, blur); \n    vec3 sharpenImage = filter(fragCoord.xy, sharpen); \n    \n    \n    //fix ratio so that mouse is centered and the circle is actually a circle \n    uv.x *= iResolution.x / iResolution.y;\n    mCoord.x *= iResolution.x / iResolution.y;\n\n    //Set layers\n    blurlayer = vec4(sharpenImage, 1.0); \n    sharplayer = vec4(blurImage, 1.0); \n    \n    \n    //draw the circle \n    if (length(uv - mCoord) <= radius)\n    {\n        sharplayer.a = 0.0; \n    }\n    \n    //Mix it up and presto, magic!\n    vec4 reveal = mix(blurlayer, sharplayer, sharplayer.a);\n \tfragColor = reveal;\n} \n  ","name":"Image","description":"","type":"image"}]}