{"ver":"0.1","info":{"id":"4XfGRS","date":"1707583671","viewed":50,"name":"Pixilate Example","username":"zadkielmodeler","description":"An example of pixilating via uv manipulation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pixilate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//no license, do whatever you want with this.\n\n// Function to quantize UV coordinates for the pixelation effect\nvec2 pixilate(vec2 uv, float pixelSize) {\n    vec2 pixelSizeUV = pixelSize / iResolution.xy;\n    vec2 quantizedUV = floor(uv / pixelSizeUV) * pixelSizeUV;\n    //quantizedUV += pixelSizeUV * 0.5; // Center the sample within the pixel block\n    return quantizedUV;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = pixilate(uv,100.0);\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}