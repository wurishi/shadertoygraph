{"ver":"0.1","info":{"id":"sllGWs","date":"1623168724","viewed":148,"name":"Polychromos pencils color set","username":"rafaelbeckel","description":"Faber Castell's Polychomos colored pencils 120 color set.\nThis should be helpful if you have an actual set.\n\n Reference table from:\n   - http://www.jennyscrayoncollection.com/2020/11/complete-list-of-faber-castell.html","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["colors","set","polychromos","fabercastell"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\n Faber Castell's Polychomos colored pencils 120 color set.\n\n Reference table from:\n   - http://www.jennyscrayoncollection.com/2020/11/complete-list-of-faber-castell.html\n \n @TODO Reorder the colors in a nice way\n\n @TODO some of the colors from the table author were not correct,\n       I need to check them one by one and fix where necessary.\n       \n @EDIT fixed border clipping (thanks, @mia)\n\n*/\n#define white vec3(1.0)\n#define black vec3(0.0)\n#define ivory vec3(1.0, 0.956863, 0.847059)\n#define cream vec3(1.0, 0.945098, 0.713725)\n#define light_yellow_glaze vec3(0.952941, 0.937255, 0.435294)\n#define cadmium_yellow_lemon vec3(0.921569, 0.917647, 0.392157)\n#define light_cadmium_yellow vec3(1.0, 0.905882, 0.243137)\n#define light_chrome_yellow vec3(1.0, 0.870588, 0.270588)\n#define cadmium_yellow vec3(1.0, 0.835294, 0.188235)\n#define dark_cadmium_yellow vec3(1.0, 0.760784, 0.12549)\n#define dark_chrome_yellow vec3(0.980392, 0.65098, 0.196078)\n#define cadmium_orange vec3(0.968627, 0.560784, 0.14902)\n#define orange_glaze vec3(0.956863, 0.501961, 0.203922)\n#define dark_cadmium_orange vec3(0.956863, 0.47451, 0.2)\n#define light_cadmium_red vec3(0.941176, 0.333333, 0.266667)\n#define scarlet_red vec3(0.909804, 0.301961, 0.278431)\n#define pale_geranium_lake vec3(0.937255, 0.27451, 0.313725)\n#define deep_scarlet_red vec3(0.909804, 0.286275, 0.368627)\n#define deep_red vec3(0.894118, 0.184314, 0.266667)\n#define middle_cadmium_red vec3(0.737255, 0.270588, 0.309804)\n#define permanent_carmine vec3(0.847059, 0.172549, 0.290196)\n#define dark_red vec3(0.65098, 0.188235, 0.333333)\n#define magenta vec3(0.576471, 0.305882, 0.403922)\n#define madder vec3(0.803922, 0.247059, 0.360784)\n#define alizarin_crimson vec3(0.87451, 0.176471, 0.364706)\n#define pink_carmine vec3(0.909804, 0.321569, 0.454902)\n#define rose_carmine vec3(0.913725, 0.360784, 0.447059)\n#define fuchsia vec3(0.937255, 0.298039, 0.52549)\n#define middle_purple_pink vec3(0.764706, 0.25098, 0.545098)\n#define light_purple_pink vec3(0.941176, 0.427451, 0.596078)\n#define pink_madder_lake vec3(0.952941, 0.537255, 0.698039)\n#define light_magenta vec3(0.843137, 0.52549, 0.72549)\n#define light_red_violet vec3(0.670588, 0.407843, 0.631373)\n#define red_violet vec3(0.533333, 0.286275, 0.427451)\n#define crimson vec3(0.631373, 0.301961, 0.615686)\n#define manganese_violet vec3(0.603922, 0.411765, 0.678431)\n#define violet vec3(0.541176, 0.419608, 0.686275)\n#define purple_violet vec3(0.45098, 0.345098, 0.627451)\n#define blue_violet vec3(0.34902, 0.321569, 0.619608)\n#define mauve vec3(0.380392, 0.341176, 0.631373)\n#define Delft_blue vec3(0.282353, 0.309804, 0.623529)\n#define dark_indigo vec3(0.243137, 0.290196, 0.356863)\n#define indanthrene_blue vec3(0.266667, 0.368627, 0.596078)\n#define helioblue_reddish vec3(0.090196, 0.439216, 0.721569)\n#define cobalt_blue vec3(0.019608, 0.415686, 0.709804)\n#define ultramarine vec3(0.313725, 0.427451, 0.705882)\n#define light_ultramarine vec3(0.396078, 0.603922, 0.823529)\n#define sky_blue vec3(0.52549, 0.698039, 0.87451)\n#define cobalt_blue_greenish vec3(0.082353, 0.427451, 0.713725)\n#define phthalo_blue vec3(0.043137, 0.490196, 0.760784)\n#define middle_phthalo_blue vec3(0.188235, 0.611765, 0.839216)\n#define light_phthalo_blue vec3(0.262745, 0.67451, 0.882353)\n#define bluish_turquoise vec3(0.0, 0.466667, 0.635294)\n#define Prussian_blue vec3(0.070588, 0.392157, 0.584314)\n#define helio_turquoise vec3(0.031373, 0.494118, 0.564706)\n#define cobalt_turquoise vec3(0.0, 0.509804, 0.635294)\n#define light_cobalt_turquoise vec3(0.4, 0.796078, 0.854902)\n#define cobalt_green vec3(0.003922, 0.729412, 0.741176)\n#define deep_cobalt_green vec3(0.078431, 0.419608, 0.376471)\n#define Hookers_green vec3(0.043137, 0.466667, 0.392157)\n#define dark_phthalo_green vec3(0.0, 0.576471, 0.470588)\n#define chrome_oxide_green_fiery vec3(0.0, 0.596078, 0.498039)\n#define phthalo_green vec3(0.0, 0.690196, 0.568627)\n#define emerald_green vec3(0.047059, 0.690196, 0.454902)\n#define light_phthalo_green vec3(0.219608, 0.721569, 0.560784)\n#define light_green vec3(0.627451, 0.819608, 0.521569)\n#define grass_green vec3(0.462745, 0.760784, 0.372549)\n#define leaf_green vec3(0.286275, 0.72549, 0.360784)\n#define permanent_green vec3(0.152941, 0.541176, 0.27451)\n#define permanent_green_olive vec3(0.298039, 0.478431, 0.309804)\n#define pine_green vec3(0.192157, 0.360784, 0.282353)\n#define chrome_oxide_green vec3(0.290196, 0.380392, 0.294118)\n#define juniper_green vec3(0.266667, 0.411765, 0.301961)\n#define olive_green_yellowish vec3(0.356863, 0.364706, 0.266667)\n#define may_green vec3(0.623529, 0.733333, 0.337255)\n#define earth_green_yellowish vec3(0.509804, 0.635294, 0.333333)\n#define chromium_green_opaque vec3(0.396078, 0.443137, 0.309804)\n#define earth_green vec3(0.45098, 0.54902, 0.439216)\n#define caput_mortuum vec3(0.603922, 0.364706, 0.345098)\n#define Indian_red vec3(0.568627, 0.278431, 0.290196)\n#define caput_mortuum_violet vec3(0.509804, 0.305882, 0.317647)\n#define burnt_carmine vec3(0.666667, 0.317647, 0.392157)\n#define dark_flesh vec3(0.964706, 0.596078, 0.572549)\n#define medium_flesh vec3(0.964706, 0.611765, 0.6)\n#define light_flesh vec3(0.984314, 0.760784, 0.623529)\n#define cinnamon vec3(0.894118,0.658824,0.576471)\n#define Pompeian_red vec3(0.905882, 0.486275, 0.513725)\n#define Venetian_red vec3(0.862745, 0.494118, 0.462745)\n#define sanguine vec3(0.843137, 0.447059, 0.333333)\n#define burnt_ochre vec3(0.847059, 0.592157, 0.388235)\n#define terracotta vec3(0.92549, 0.556863, 0.34902)\n#define light_yellow_ochre vec3(0.94902, 0.737255, 0.372549)\n#define Naples_yellow vec3(0.972549, 0.823529, 0.352941)\n#define dark_Naples_ochre vec3(0.960784, 0.760784, 0.356863)\n#define green_gold vec3(0.792157, 0.580392, 0.223529)\n#define brown_ochre vec3(0.768627, 0.572549, 0.364706)\n#define raw_umber vec3(0.603922, 0.45098, 0.290196)\n#define bistre vec3(0.486275, 0.376471, 0.298039)\n#define Van_Dyck_brown vec3(0.423529, 0.34902, 0.329412)\n#define nougat vec3(0.572549, 0.486275, 0.419608)\n#define burnt_umber vec3(0.407843, 0.333333, 0.27451)\n#define burnt_siena vec3(0.537255, 0.352941, 0.278431)\n#define walnut_brown vec3(0.364706, 0.309804, 0.282353)\n#define dark_sepia vec3(0.278431, 0.286275, 0.282353)\n#define warm_grey_VI vec3(0.345098, 0.333333, 0.341176)\n#define warm_grey_V vec3(0.384314, 0.376471, 0.376471)\n#define warm_grey_IV vec3(0.486275, 0.494118, 0.498039)\n#define warm_grey_III vec3(0.658824, 0.647059, 0.623529)\n#define warm_grey_II vec3(0.784314, 0.756863, 0.745098)\n#define warm_grey_I vec3(0.85098, 0.815686, 0.807843)\n#define cold_grey_I vec3(0.792157, 0.819608, 0.847059)\n#define cold_grey_II vec3(0.745098, 0.768627, 0.8)\n#define cold_grey_III vec3(0.67451, 0.694118, 0.721569)\n#define cold_grey_IV vec3(0.556863, 0.580392, 0.596078)\n#define cold_grey_V vec3(0.431373, 0.443137, 0.462745)\n#define cold_grey_VI vec3(0.341176, 0.341176, 0.345098)\n#define Paynes_grey vec3(0.282353, 0.305882, 0.333333)\n#define pigment_black vec3(0.019608, 0.019608, 0.019608)\n#define silver vec3(0.670588, 0.678431, 0.690196)\n#define gold vec3(0.803922, 0.752941, 0.552941)\n#define copper vec3(0.690196, 0.564706, 0.572549)\n\n// The actual Polychromos color codes\nint colors[] = int[](\n    101, 103, 102, 104, 205, 105, 106, 107, 108, 109, 111, 113, \n    226, 142, 121, 133, 225, 126, 217, 223, 219, 118, 117, 115, \n    127, 124, 123, 125, 128, 129, 119, 135, 194, 134, 160, 250, \n    138, 136, 137, 249, 141, 157, 247, 151, 143, 120, 140, 146, \n    144, 110, 152, 145, 149, 246, 155, 153, 154, 156, 158, 159, \n    264, 276, 161, 163, 162, 171, 166, 112, 266, 167, 267, 278, \n    165, 173, 170, 168, 174, 172, 169, 192, 263, 193, 130, 131, \n    132, 189, 191, 190, 188, 187, 186, 183, 185, 184, 268, 182, \n    180, 179, 176, 178, 280, 283, 177, 175, 252, 251, 181, 199,\n    270, 271, 272, 273, 274, 275, 235, 234, 233, 232, 231, 230\n);\n\nvec3 selectColorById(int id) {\n    switch(id) {\n        case 101: \n            return white;\n        case 000: \n            return black;\n        case 103: \n            return ivory;\n        case 102: \n            return cream;\n        case 104: \n            return light_yellow_glaze;\n        case 205: \n            return cadmium_yellow_lemon;\n        case 105: \n            return light_cadmium_yellow;\n        case 106: \n            return light_chrome_yellow;\n        case 107: \n            return cadmium_yellow;\n        case 108: \n            return dark_cadmium_yellow;\n        case 109: \n            return dark_chrome_yellow;\n        case 111: \n            return cadmium_orange;\n        case 113: \n            return orange_glaze;\n        case 115: \n            return dark_cadmium_orange;\n        case 117: \n            return light_cadmium_red;\n        case 118: \n            return scarlet_red;\n        case 121: \n            return pale_geranium_lake;\n        case 219: \n            return deep_scarlet_red;\n        case 223: \n            return deep_red;\n        case 217: \n            return middle_cadmium_red;\n        case 126: \n            return permanent_carmine;\n        case 225: \n            return dark_red;\n        case 133: \n            return magenta;\n        case 142: \n            return madder;\n        case 226: \n            return alizarin_crimson;\n        case 127: \n            return pink_carmine;\n        case 124: \n            return rose_carmine;\n        case 123: \n            return fuchsia;\n        case 125: \n            return middle_purple_pink;\n        case 128: \n            return light_purple_pink;\n        case 129: \n            return pink_madder_lake;\n        case 119: \n            return light_magenta;\n        case 135: \n            return light_red_violet;\n        case 194: \n            return red_violet;\n        case 134: \n            return crimson;\n        case 160: \n            return manganese_violet;\n        case 138: \n            return violet;\n        case 136: \n            return purple_violet;\n        case 137: \n            return blue_violet;\n        case 249: \n            return mauve;\n        case 141: \n            return Delft_blue;\n        case 157: \n            return dark_indigo;\n        case 247: \n            return indanthrene_blue;\n        case 151: \n            return helioblue_reddish;\n        case 143: \n            return cobalt_blue;\n        case 120: \n            return ultramarine;\n        case 140: \n            return light_ultramarine;\n        case 146: \n            return sky_blue;\n        case 144: \n            return cobalt_blue;\n        case 110: \n            return phthalo_blue;\n        case 152: \n            return middle_phthalo_blue;\n        case 145: \n            return light_phthalo_blue;\n        case 149: \n            return bluish_turquoise;\n        case 246: \n            return Prussian_blue;\n        case 155: \n            return helio_turquoise;\n        case 153: \n            return cobalt_turquoise;\n        case 154: \n            return light_cobalt_turquoise;\n        case 156: \n            return cobalt_green;\n        case 158: \n            return deep_cobalt_green;\n        case 159: \n            return Hookers_green;\n        case 264: \n            return dark_phthalo_green;\n        case 276: \n            return chrome_oxide_green_fiery;\n        case 161: \n            return phthalo_green;\n        case 163: \n            return emerald_green;\n        case 162: \n            return light_phthalo_green;\n        case 171: \n            return light_green;\n        case 166: \n            return grass_green;\n        case 112: \n            return leaf_green;\n        case 266: \n            return permanent_green;\n        case 167: \n            return permanent_green_olive;\n        case 267: \n            return pine_green;\n        case 278: \n            return chrome_oxide_green;\n        case 165: \n            return juniper_green;\n        case 173: \n            return olive_green_yellowish;\n        case 170: \n            return may_green;\n        case 168: \n            return earth_green_yellowish;\n        case 174: \n            return chromium_green_opaque;\n        case 172: \n            return earth_green;\n        case 169: \n            return caput_mortuum;\n        case 192: \n            return Indian_red;\n        case 263: \n            return caput_mortuum_violet;\n        case 193: \n            return burnt_carmine;\n        case 130: \n            return dark_flesh;\n        case 131: \n            return medium_flesh;\n        case 132: \n            return light_flesh;\n        case 189: \n            return cinnamon;\n        case 191: \n            return Pompeian_red;\n        case 190: \n            return Venetian_red;\n        case 188: \n            return sanguine;\n        case 187: \n            return burnt_ochre;\n        case 186: \n            return terracotta;\n        case 183: \n            return light_yellow_ochre;\n        case 185: \n            return Naples_yellow;\n        case 184: \n            return dark_Naples_ochre;\n        case 268: \n            return green_gold;\n        case 182: \n            return brown_ochre;\n        case 180: \n            return raw_umber;\n        case 179: \n            return bistre;\n        case 176: \n            return Van_Dyck_brown;\n        case 178: \n            return nougat;\n        case 280: \n            return burnt_umber;\n        case 283: \n            return burnt_siena;\n        case 177: \n            return walnut_brown;\n        case 175: \n            return dark_sepia;\n        case 275: \n            return warm_grey_VI;\n        case 274: \n            return warm_grey_V;\n        case 273: \n            return warm_grey_IV;\n        case 272: \n            return warm_grey_III;\n        case 271: \n            return warm_grey_II;\n        case 270: \n            return warm_grey_I;\n        case 230: \n            return cold_grey_I;\n        case 231: \n            return cold_grey_II;\n        case 232: \n            return cold_grey_III;\n        case 233: \n            return cold_grey_IV;\n        case 234: \n            return cold_grey_V;\n        case 235: \n            return cold_grey_VI;\n        case 181: \n            return Paynes_grey;\n        case 199: \n            return pigment_black;\n        case 251: \n            return silver;\n        case 250: \n            return gold;\n        case 252: \n            return copper;\n        default:\n            return black;\n    }\n}\n\nbool isInMargin(vec2 fragCoord, float margin) {\n    if (fragCoord.x < margin ||\n        fragCoord.y < margin ||\n        fragCoord.x > iResolution.x - margin ||\n        fragCoord.y > iResolution.y - margin\n    ){\n        return true;\n    }\n\n    return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = black;\n    float margin = 15.0;\n    float num_rows = 10.0;\n    float num_columns = 12.0;\n    vec3 margin_color = black;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float row_height = (iResolution.y - margin * 2.0) / num_rows;\n    float column_width = (iResolution.x - margin * 2.0) / num_columns;\n    \n    if (isInMargin(fragCoord, margin)) {\n        color = margin_color;\n    } else {\n        // inverted rows to match color array\n        float row = floor((iResolution.y - fragCoord.y - margin)/row_height);\n        float column = floor((fragCoord.x - margin)/column_width);\n        \n        int id = colors[int(column + row * num_columns)];\n        \n        color = selectColorById(id);\n    }\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}