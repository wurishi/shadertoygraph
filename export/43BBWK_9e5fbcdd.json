{"ver":"0.1","info":{"id":"43BBWK","date":"1729927912","viewed":55,"name":"example_003_error.frag.glsl","username":"whoami","description":"Experimenting with signed distance for font rendering","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["sdf","font"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define E 0\n#define O 1\n#define R 2\n\nfloat get_sd_line(vec2 p, vec2 a, vec2 b, float r) {\n    vec2 ab = b - a;\n    vec2 ap = p - a;\n    float t = clamp(dot(ap, ab) / dot(ab, ab), 0.0, 1.0);\n    return length(a + t * ab - p) - r;\n}\n\nfloat smin(float a, float b, float k) {\n    k *= 4.0;\n    float h = max(k - abs(a - b), 0.0) / k;\n    return min(a, b) - h * h * k * (1.0 / 4.0);\n}\n\nfloat smin(float a, float b) {\n    float sd = smin(a, b, 0.01);\n    return sd;\n}\n\nfloat get_sd_E(vec2 p, float r) {\n    vec2 a = vec2(-0.3, -0.5);\n    vec2 b = vec2(-0.3, 0.5);\n    vec2 c = vec2(0.3, 0.5);\n    vec2 d = vec2(0.3, 0.3);\n    vec2 e = vec2(-0.3, 0.0);\n    vec2 f = vec2(0.2, 0.0);\n    vec2 g = vec2(0.3, -0.5);\n\n    float sd = get_sd_line(p, a, b, r);\n    sd = smin(sd, get_sd_line(p, b, c, r));\n    sd = smin(sd, get_sd_line(p, e, f, r));\n    sd = smin(sd, get_sd_line(p, a, g, r));\n\n    return sd;\n}\n\nfloat get_sd_R(vec2 p, float r) {\n    vec2 a = vec2(-0.3, -0.5);\n    vec2 b = vec2(-0.3, 0.5);\n    vec2 c = vec2(0.3, 0.5);\n    vec2 d = vec2(0.3, 0.0);\n    vec2 e = vec2(-0.1, 0.0);\n    vec2 f = vec2(0.3, -0.5);\n\n    float sd = get_sd_line(p, a, b, r);\n    sd = smin(sd, get_sd_line(p, b, c, r));\n    sd = smin(sd, get_sd_line(p, c, d, r));\n    sd = smin(sd, get_sd_line(p, d, e, r));\n    sd = smin(sd, get_sd_line(p, e, f, r));\n\n    return sd;\n}\n\nfloat get_sd_O(vec2 p, float r) {\n    vec2 a = vec2(-0.3, -0.5);\n    vec2 b = vec2(-0.3, 0.5);\n    vec2 c = vec2(0.3, 0.5);\n    vec2 d = vec2(0.3, -0.5);\n\n    float sd = get_sd_line(p, a, b, r);\n    sd = smin(sd, get_sd_line(p, b, c, r));\n    sd = smin(sd, get_sd_line(p, c, d, r));\n    sd = smin(sd, get_sd_line(p, d, a, r));\n\n    return sd;\n}\n\nfloat get_sd_letter(vec2 p, int letter_idx, float r) {\n    switch (letter_idx) {\n        case E:\n        return get_sd_E(p, r);\n        case R:\n        return get_sd_R(p, r);\n        case O:\n        return get_sd_O(p, r);\n        default:\n        return 10e6;\n    }\n}\n\nvoid type_letter(inout vec2 cursor, inout float sd, int letter_idx, float r) {\n    cursor.x -= 1.0;\n    sd = smin(sd, get_sd_letter(cursor, letter_idx, r));\n}\n\nfloat attenuate(float x, float a, float b, float c) {\n    return 1.0 / (a + b * x + c * x * x);\n}\n\nfloat get_brightness(vec2 p) {\n    float x = p.x + 5.0 * sin(iTime);\n    float b = attenuate(x, 0.1, 1.0, 20.0);\n    return b;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    \n    vec2 p = 5.0 * ((uv * 2.0) - 1.0);\n    p.x *= aspect;\n\n    vec2 cursor = p;\n    cursor.x += 3.0;\n\n    float r = 0.15;\n    float brightness = 0.1 * get_brightness(p);\n\n    float sd = 10e9;\n    type_letter(cursor, sd, E, r);\n    type_letter(cursor, sd, R, r);\n    type_letter(cursor, sd, R, r);\n    type_letter(cursor, sd, O, r);\n    type_letter(cursor, sd, R, r);\n\n    float t = 1.0 / pow(sin(abs(sd)), 2.5);\n    vec3 color = vec3(0.2, 1.0, 0.0);\n    color = t * brightness * color;\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}