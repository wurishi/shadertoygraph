{"ver":"0.1","info":{"id":"mlsBzr","date":"1692652944","viewed":37,"name":"My version of Happy Jumping ","username":"Sotos","description":"Learning from Happy Jumping tutorial made by Iñigo Quilez (in process)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map (in vec3 pos) // creates a point in the screen\n{\n    float sphere = length(pos) - 0.25;\n    return sphere;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(0.0, 0.0, 2.0);\n    vec3 rd = normalize(vec3(p, -1.5));\n\n    vec3 col = vec3(0);\n    \n    //Raymarching\n    float t = 0.0;\n    for( int i = 0; i<100; i++)\n    {\n        vec3 pos = ro + t*rd; //Comienza en el centro de la cámara\n        \n        float h = map(pos); //Dibuja un punto en el espacio\n        t += h;\n    }\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}