{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float DistToLine(vec2 pt1, vec2 pt2, vec2 testPt)\n{\n  vec2 lineDir = pt2 - pt1;\n  vec2 perpDir = vec2(lineDir.y, -lineDir.x);\n  vec2 dirToPt1 = pt1 - testPt;\n  return abs(dot(normalize(perpDir), dirToPt1));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 lineStart = vec2(0,0);\n\tvec2 lineEnd = vec2(1,1);\n\tfloat dist = DistToLine(lineStart, lineEnd, uv);\n\tfragColor = vec4(dist, dist, dist, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4djGRV","date":"1390985223","viewed":718,"name":"distance-to-line","username":"wil","description":"illustrate function to compute the distance to a line (from http://stackoverflow.com/a/9246451/758666)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["utilitydistancetoline"],"hasliked":0,"parentid":"","parentname":""}}