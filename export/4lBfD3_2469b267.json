{"ver":"0.1","info":{"id":"4lBfD3","date":"1517336681","viewed":436,"name":"Some Basic Booleans","username":"NickMagnus","description":"quick boolean done for class","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["intersection","boolean"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 Location1 = vec2(.55, .55);\nvec2 Location2 = vec2(.45, .45);\nfloat Radius = .15;\nvec3 BgColor = vec3(1.0,1.0,1.0);\nvec3 MgColor = vec3 (0, 1, 0);\nvec3 FgColor = vec3(1.0,0.0, 0.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n   \n    float iRes = iResolution.x / iResolution.y;\n    \n    Location1.y /= iRes;\n    Location2.y /= iRes;\n  \n    uv.y /= iRes;\n    \n\n    if (length(Location2 - uv) > Radius && length(Location1 - uv) > Radius)\n    {  \n         fragColor = vec4(1,1,1,1);\n    }\n    else if (length(Location2 - uv) < Radius && length(Location1 - uv) < Radius)\n    {  \n  \t\t fragColor = (vec4(FgColor, 1.0) + vec4(MgColor, 1.0) / 2.0);\n    }\n    else \n    {\n   \t     fragColor = texture(iChannel0, uv);//(vec4(FgColor, 1.0) + vec4(MgColor, 1.0) / 2.0);\n    }\n    \n\n}","name":"Image","description":"","type":"image"}]}