{"ver":"0.1","info":{"id":"dtlSRH","date":"1674317319","viewed":307,"name":"gyroid 2","username":"FabriceNeyret2","description":"variant of [url]https://shadertoy.com/view/4stfRX[/url]","likes":26,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","sdf","short","trabeculum"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/4stfRX\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime,v,d=t;\n    mat2  R = mat2( sin(.5*t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),              // ray direction\n          p = 90./q, a;                                 // marching point along ray \n    O-=O; \n    for ( O++; O.x > 0. && d > .01 ; O-=.015 )\n        q = p,\n        q.xz *= R, q.yz *= R,                           // rotation\n        v= dot(sin(q),cos(q.yzx)) ,\n        d = abs(v-1.3),                                 // gyroid\n        fract(t/4.)>.5 ? d = min(d, abs(v+1.3)) : d,    // dual                  \n     // d = abs(v)-.1,                                  // regular gyroid\n        a = abs(q),\n        d = max(d, max(a.x,max(a.y,a.z))-18.),          // clamped to cube\n\n        p += .5*d*D;                                    // step forward = dist to obj\n \n    O *= v>0. ? vec4(1,.8,.8,1) : vec4(.8,.8,1,1);\n}\n","name":"Image","description":"","type":"image"}]}