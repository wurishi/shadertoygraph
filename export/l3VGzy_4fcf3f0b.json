{"ver":"0.1","info":{"id":"l3VGzy","date":"1717857858","viewed":35,"name":"tobi(naruto)","username":"nayk","description":"return shaders pls='(","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","copypast"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*from https://www.shadertoy.com/view/Dt2XDD https://www.shadertoy.com/view/lXVGRy*/\n// The MIT License\n// Copyright © 2020 Inigo Quilez\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// https://www.shadertoy.com/view/3ltSW2\nfloat sdCircle(vec2 p, float r) {\n    return length(p)-r;\n}\n\n// The MIT License\n// Copyright © 2019 Inigo Quilez\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// https://www.shadertoy.com/view/tt23RR\nfloat sdHexagram( in vec2 p, in float r ) {\n    const vec4 k = vec4(-0.5,0.8660254038,0.5773502692,1.7320508076);\n    p = abs(p);\n    p -= 5.0*cos(iTime*.5)*min(dot(k.xy,p*cos(iTime*.5)),0.0)*k.xy;\n    p -= 2.0*sin(iTime*.5)*min(dot(k.yx,p),0.0)*k.yx;\n    p += vec2(clamp(p.x*cos(iTime*.5),r*k.z,r*k.w),r);\n    return length(p)*sign(p.y*p.x);\n}\n\n// The MIT License\n// Copyright © 2015 Inigo Quilez\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// See https://iquilezles.org/articles/palettes for more information\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n\treturn a+b*cos(50.28318*(c*t+d));\n}\n\n// The MIT License\n// Copyright © 2014 David Hoskins\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// https://www.shadertoy.com/view/4djSRW\nfloat hash12(vec2 p) {\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n// ref: https://www.youtube.com/watch?v=VmrIDyYiJBA\nfloat Hexagon(vec2 uv) {\n    uv = abs(uv);\n    return max(uv.x, dot(uv, normalize(vec2(1., sqrt(3.)))));\n}\n\n// ref: https://www.youtube.com/watch?v=VmrIDyYiJBA\nvec4 HexCoord(vec2 uv) {\n    vec2 r = vec2(1., sqrt(3.));\n    vec2 h = r*.5;\n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n    vec2 gv = dot(a, a) < dot(b, b) ? a : b;\n    return vec4(gv, uv-gv);\n}\n\nfloat ring(vec2 uv, vec2 pos, float size) {\n    return abs(sdCircle(uv-pos, size));\n}\n\nfloat hexRing(vec2 uv, vec2 pos, float size) {\n    return abs(Hexagon(uv-pos)-size);\n}\n\nfloat starRing(vec2 uv, vec2 pos, float size) {\n    return abs(sdHexagram(uv-pos, size));\n}\n\n// SPDX-License-Identifier: Unlicense\n// This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvec3 grain(vec2 uv, vec3 color, vec3 grainTex, float wei) {\n    color += grainTex*wei;\n    return color-wei/2.;\n}\n\n// SPDX-License-Identifier: Unlicense\n// This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nmat2 rotate(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}\nfloat hash122(vec2 p) {\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n// MIT License\n// Copyright © 2023 Zaron Chen\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvec2 displace(vec2 uv, vec2 duv, float off, float wei) {\n    duv -= off;\n    return uv-duv*wei;\n}\n\n// MIT License\n// Copyright © 2023 Zaron Chen\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nfloat radial(vec2 uv, vec2 pos, float tile, float ofst) {\n\tuv -= pos;\n\tfloat d = length(uv);\n\td = d*tile-fract(ofst);\n\treturn fract(d);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2.*fragCoord.xy-iResolution.xy)/min(iResolution.x, iResolution.y);\n    uv *= 2.;\n\n\tfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n    vec2 huv = HexCoord(uv*ma).xy*ma;\n\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    \n    uv -= .5;\n    uv *= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec4 cir = vec4(smoothstep(.4, .1, length(uv)));\n    \n    vec2 iuv = floor(uv.xx*30.);\n\tvec4 dimg = vec4(hash12(iuv*314159.26));\n    \n    float wei = mouse.x;\n    vec2 duv = vec2(uv.x, displace(uv, dimg.rg, .5, wei).y);\n    \n    vec2 ruv = vec2(radial(duv, vec2(0.), 5., iTime*.5));\n    ruv += hash12(uv*314159.26);\n    float ts = 1.5+1.0*sin(iTime*.6);\n    float tc = 1.5+5.5*cos(iTime*.5)*.4+.1;\n   huv*= ruv;\n    float s =  .5/sqrt(3.);\n    float c =     ring(huv, vec2(  .5,     s ), ts*.5+.2);\n    c = min(c,    ring(huv, vec2( -.5,     s ), ts*.5+.2));\n    c = min(c,    ring(huv, vec2(  .5,    -s ), ts*.5+.2));\n    c = min(c,    ring(huv, vec2( -.5,    -s ), ts*.5+.2));\n    c = min(c,    ring(huv, vec2(  0.,  2.*s ), ts*.5+.2));\n    c = min(c,    ring(huv, vec2(  0., -2.*s ), ts*.5+.2));\n    c = min(c, hexRing(huv, vec2(  .5,     s ), tc));\n    c = min(c, hexRing(huv, vec2( -.5,     s ), tc));\n    c = min(c, hexRing(huv, vec2(  .5,    -s ), tc));\n    c = min(c, hexRing(huv, vec2( -.5,    -s ), tc));\n    c = min(c, hexRing(huv, vec2(  0.,  2.*s ), tc));\n    c = min(c, hexRing(huv, vec2(  0., -2.*s ), tc));\n    c = min(c, starRing(rotate(sin(iTime))*huv, vec2(0.), ts*.2));\n    c = clamp(.0125/abs(c)*(dot(uv*ma, uv)+.5), 0., 1.);\n\n    vec3 col = palette( c, vec3(.0), vec3(1.), vec3(0.1), vec3(.0, .0, .1) );\n\n    col = grain(uv, col, vec3(hash12(uv*314159.26)), .25);\n\n    fragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}