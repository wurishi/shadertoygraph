{"ver":"0.1","info":{"id":"WsGGWd","date":"1571243308","viewed":164,"name":"Anyone Remember?","username":"rmmcal","description":"Remembering the past.... (Johnny Castaway Screensaver) dedicated to my favorite screensaver...","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["johnnycastaway"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/////////////////////////////////////////////////////////////\n/////      ........ Johnny Castaway ..........     ////////// \n/////      .... My favorite screensaver ......     ////////// \n/////////////////////////////////////////////////////////////\n// Brasil/Amazonas/Manaus            \n// Anyone Remember?  \n// Created by Rodrigo Cal (twitter: @rmmcal) - 2019/10\n// - https://www.shadertoy.com/view/WsGGWd\n/////////////////////////////////////////////////////////////\n// -----------------------------------------------------------\n// The past is alive for time travelers....\n//\n//      - Reflection of the day... @rmmcal 2019/10\n//\n// Inspiration:\n//  => https://en.wikipedia.org/wiki/Johnny_Castaway\n//  => Johnny Castaway Screensaver\n//// -----------------------------------------------------------\n/////////////////////////////////////////////////////////////\n\nvec2 uv ;\n\n/////////////////////////////////////////////////////////////\n//  => https://www.shadertoy.com/view/tsKGDc @onak\nvec2 hash22(vec2 p) {\n    p = p*mat2(127.1,311.7,269.5,183.3);\n\tp = -1.0 + 2.0 * fract(sin(p)*43758.5453123);\n\treturn sin(p*6.283);\n}\nfloat perlin_noise(vec2 p) {\n\tvec2 pi = floor(p);\n    vec2 pf = p - pi;\n    \n    // interpolation\n    vec2 w = pf * pf * (3.0 - 2.0 * pf);\n    \n    float f00 = dot(hash22(pi + vec2(0.0, 0.0)), pf - vec2(0.0, 0.0));\n    float f01 = dot(hash22(pi + vec2(0.0, 1.0)), pf - vec2(0.0, 1.0));\n    float f10 = dot(hash22(pi + vec2(1.0, 0.0)), pf - vec2(1.0, 0.0));\n    float f11 = dot(hash22(pi + vec2(1.0, 1.0)), pf - vec2(1.0, 1.0));\n    \n    // mixing top & bottom edges\n    float xm1 = mix(f00, f10, w.x);\n    float xm2 = mix(f01, f11, w.x);\n    \n    // mixing to point\n    float ym = mix(xm1, xm2, w.y); \n    \n    return ym;\n}\nfloat perlin_noise1(vec2 p) {\n    vec2 count ;\n    for (float i = 0.; i < 9.; i++){\n        count += hash22 ( floor(p*10.)/10. +vec2(mod(i,3.)-1., i/3.-1.) );\n    }\n    count /= 9.;\n    return count.x;\n}\nfloat noise_fBM(float size, int octaves, float persistence, float scale, vec2 coord) {\n    float c = 0.0;\n    float p = 1.0;\n    float n = 0.0;\n    for (int i = 1; i <= octaves; i++) {\n        c += perlin_noise(coord * size) * p;\n        n    += p;\n        size *= scale;\n        p    *= persistence;\n    }\n    c /= n;\n    return c;\n}\n/////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////\n\nfloat clouds(vec2 p) {\n    float c = 2.5 * noise_fBM(2.0, 6, 0.5, 2.0, p*vec2(1.,2.1/(pow(p.y,2.))) + vec2(iTime * ( 0.01), 0.0));\n \treturn c;\n}\n\nfloat water(vec2 p) {\n    float c = 4.5 * noise_fBM(2.0, 6, 0.5, 2.0, p*vec2(1.,4.) )*.4+ +1.-p.y*3.2;\n \treturn c;\n}\n\nfloat bit(float b){\n    return floor(b*2.+.4)/2.;\n}\n\nvec3 bit(vec3 b){\n    return floor(b*2.+.4)/2.;\n}\n\nfloat stepin(float a, float b, float x){\n    return a < x && x < b ? 1. : 0.;\n}\n\nvoid wood(inout vec3 canvas, vec2 p)\n{\n    float cf = (abs(mod(p.y+cos(p.x*10.),.03)*20.-1.));\n    cf = (cf*=cf)*(cf*=cf);\n    cf = bit(1.-cf*.5);\n    p -=  vec2(-0.12,+0.04);\n    canvas = mix(canvas, bit(vec3(p.x*2.))+(vec3(.4,.1,0.))*cf, (stepin(0.5,2., -atan(-p.x,p.y))) * step( 0.002, (.01-p.y)*.15+.08-abs(length((p-vec2(0.,0.))*vec2(4.,1.0))-.5)  ));\n}\n\nmat2 rotate(float a)\n{\n\treturn mat2(cos(a), sin(a), -sin(a), cos(a));\n}\n\nvoid foliage(inout vec3 canvas, vec2 p)\n{\n\tp*= 2.0;\n    p -=  vec2(-0.0,-0.18);\n    vec3 c1 = vec3(.0,.9,0.0);\n    vec3 c2 = vec3(.23,.56,0.23);\n    vec3 c = p.x>0.0?c1:c2;\n    float cf = abs(mod(p.y,.1)*20.-1.);\n    p.x *= 1.+pow(cf,8.);\n    float f = .2-length(p*vec2(8.*(0.5-p.y),1.));\n    canvas = mix(canvas, c,  step( 0.002, f));\n    canvas = mix(canvas, vec3(1.),  step( 0.002, min(f, .004-abs(p.x))));\n}\n\nvoid coconutTree(inout vec3 canvas, vec2 p)\n{\n    for (int i = 0; i < 5; i++)\n\t\tfoliage(canvas, rotate(float(5-i)*.56-1.75)*(p-vec2(.0,0.25))+vec2(0.,abs(p.y*.1)));\n    wood(canvas, p-vec2(.0,-.07));\n}\n\nvoid johnny(inout vec3 canvas, vec2 p)\n{\n    p *= vec2(.5,1.);\n    p *= vec2(1.5);\n    \n\tp *= vec2(2.- clamp(iTime*.2-.1,0.,1.));\n    p += vec2(0.7,-.4)* vec2(1.- clamp(iTime*.2-.1,0.,1.));\n\n    float t = abs(fract(iTime*.1)*2.-1.);\n    float t2 = abs(fract(iTime*.7)*2.-1.);\n\tfloat y = cos(t*5.);\n    p -=  vec2(t*.2-.1,-0.05);\n    p *= 2.;\n    float f;\n    \n    //head\n    vec3 skin = vec3(1.0,0.7,0.5);\n    float f0 = .06-length(p*vec2(2.,1.1)-vec2(0.,.05));\n    canvas = mix(canvas, skin,  step( 0.002, f0));\n\n    // beard\n    float f1 = .05-length(p*vec2(8.*(0.2-p.y),1.));\n    canvas = mix(canvas, vec3(0.),  step( 0.002, f1));\n\n    //hair\n    f = .05-length(p*vec2(8.*(0.3-p.y),1.)+vec2(0.,-.04));\n    f =  .01-abs(f);\n    f =  -max(-f,f1);\n    canvas = mix(canvas, vec3(0.0),  step( 0.002, f));\n\n    // mouth\n    f = .02-length(p*vec2(1.,4.1));\n    canvas = mix(canvas, skin+.1,  step( 0.002, f));\n\n    // nose\n    f = .03-length(p*vec2(2.,2.1)+vec2(0.,-.06));\n    canvas = mix(canvas, skin+.1,  step( 0.002, f));\n\n    // hat\n    f =        .03-length(p*vec2(1.0,2.1)+vec2(0.,-.22));\n    f = max(f, .03-length(p*vec2(1.5,2.1)+vec2(0.,-.25)));\n    canvas = mix(canvas, vec3(1.),  step( 0.002, f));\n\n    // eye white\n    f = .01-length(p*vec2(1.,2.1)+vec2((p.x>0.)?-0.01:0.01,-.13));\n    canvas = mix(canvas, vec3(1.),  step( 0.002, f));\n\n    // eye black\n    f = .007-length(p*vec2(1.,1.1)+vec2((p.x>0.)?-0.01:0.01,-.07));\n    canvas = mix(canvas, vec3(0.),  step( 0.002, f));\n\n    ////////////////\n    p *= vec2(1.5);\n\t\n    float side = (p.x>0.)?-1.:1.;\n    //arms\n    f = .07-length(rotate((t2-0.5+side)*.1)*p*vec2(3.,-0.9)+vec2( side*0.1,-.13));\n    canvas = mix(canvas, skin,  step( 0.002, f));\n\tcanvas = mix(canvas, vec3(0.),  step( 0.002, 0.008-abs(f)));\n  \t\n \t//legs\n    f = .07-length(rotate((t2-0.5+side)*.03)*p*vec2(3.,-0.9)+vec2((p.x>0.)?-0.05:0.05,-.26));\n    canvas = mix(canvas, skin,  step( 0.002, f));\n    canvas = mix(canvas, vec3(0.),  step( 0.002, 0.008-abs(f)));\n\n    // body\n    f = .07-length(p*vec2(3.,-0.9)+vec2((p.x>0.)?-0.01:0.01,-.13+0.02));\n    canvas = mix(canvas, skin,  step( 0.002, f));\n \tcanvas = mix(canvas, vec3(0.),  step( 0.002, 0.008-abs(f)));\n  \n    // pants\n    f = .07-length((p)*vec2(3.,-1.7)+vec2((p.x>0.)?-0.01:0.01,-.35));\n    canvas = mix(canvas, vec3(1.),  step( 0.002, f));\n    canvas = mix(canvas, vec3(0.),  step( 0.002, 0.008-abs(f)));\n  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float re = 400.;\n    \n    vec2 r= iResolution.xy;\n    uv = fragCoord/iResolution.xy;\n    uv = floor(uv*re)/re;\n    vec2 cp = vec2(0.,1.)+uv*vec2(1.,-1.);\n\t\n    vec2 aspectRatio  = vec2( iResolution.x/iResolution.y,1.);\n    vec2 p = (uv-.5)*aspectRatio;\n\tvec2 pt = (uv-.5)*aspectRatio;\n\t\n    vec3 canvas ;\n    canvas = vec3(0.,0.97,0.97);\n  \n    float c = clouds(uv);\n    vec3 cloud = bit(canvas+ abs(vec3(c))+.5);\n    \n    float cb1 = step(.3,clouds(uv))-step(.3,clouds(uv-vec2(1./r)));\n    float cb2 = step(.5,clouds(uv))-step(.5,clouds(uv-vec2(1./r)));\n    float cb3 = step(.8,clouds(uv))-step(.8,clouds(uv-vec2(1./r)));\n    cloud = mix(cloud, vec3(0.8), step( 0.5, cb1 ));\n    cloud = mix(cloud, vec3(0.8), step( 0.5, cb2 ));\n    cloud = mix(cloud, vec3(0.8), step( 0.5, cb3 ));\n\n    canvas = mix(canvas, cloud, 1.-step( 0.4, cp.y ));\n    \n    float w2 = water(uv+vec2(0.,-0.7));\n    float w = water(uv);\n    canvas = mix(canvas, vec3(0.,0.5,0.97), step( 0.4, cp.y )*bit(w2));\n    canvas = mix(canvas, vec3(0.,0.0,0.97), step( 0.45, cp.y ));\n    canvas = mix(canvas, vec3(0.,0.0,0.48), step( 0.5, cp.y )*bit(w) );\n    \n    \n    float down = step(.63, cp.y);\n    float up = 1.-down;\n    \n    float pn = bit(perlin_noise(p*20.*vec2(1.,2.))*.4+.35)+.95;\n    \n    canvas = mix(canvas, vec3(0.9,.9,0.48), down*step( 0.0, .2-length((cp-vec2(0.,(1.,.5)))*vec2(1.,4.)-.5) ) );\n    canvas = mix(canvas, vec3(1.,1.0,0.48)*pn, up *step( 0.0, .2-length((cp-vec2(0.,(1.,.4)))*vec2(1.,2.)-.5) ) );\n    \n    coconutTree(canvas, p);\n    johnny(canvas, p);\n   \n    canvas = mix(canvas, vec3(0.),          step( 0.01, (length(p)-iTime+.3)  ));\n \n    fragColor = vec4(canvas,1.0);\n}","name":"Image","description":"","type":"image"}]}