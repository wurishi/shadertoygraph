{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Hazel Quantock - 2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nconst float tau = 6.28318530717958647692;\n\n// Gamma correction\n#define GAMMA (2.2)\n\nvec3 ToLinear( in vec3 col )\n{\n\t// simulate a monitor, converting colour values into light values\n\treturn pow( col, vec3(GAMMA) );\n}\n\nvec3 ToGamma( in vec3 col )\n{\n\t// convert back into colour values, so the correct light will come out of the monitor\n\treturn pow( col, vec3(1.0/GAMMA) );\n}\n\n\nvec2 Noise( in vec3 x )\n{\n//x.z = .0;    \n    vec3 p = floor(x);\n    vec3 f = x-p;\n\tf = f*f*(3.0-2.0*f);\n//\tvec3 f2 = f*f; f = f*f2*(10.0-15.0*f+6.0*f2);\n\n    vec2 uv = (p.xy+vec2(37.0,17.0)*p.z);\n\n#if (1)\n    uv += f.xy;\n\tvec4 rg = textureLod( iChannel0, (uv+0.5)/256.0, 0.0 );\n\trg.yw = texture( iChannel0, (uv-vec2(37.0,17.0)+0.5)/256.0, -100.0 ).xz;\n#else\n\t// on some hardware interpolation lacks precision\n\tvec4 rg = mix( mix(\n\t\t\t\ttexture( iChannel0, (uv+0.5)/256.0, -100.0 ),\n\t\t\t\ttexture( iChannel0, (uv+vec2(1,0)+0.5)/256.0, -100.0 ),\n\t\t\t\tf.x ),\n\t\t\t\t  mix(\n\t\t\t\ttexture( iChannel0, (uv+vec2(0,1)+0.5)/256.0, -100.0 ),\n\t\t\t\ttexture( iChannel0, (uv+1.5)/256.0, -100.0 ),\n\t\t\t\tf.x ),\n\t\t\t\tf.y );\n#endif\t\t\t  \n\n\treturn mix( rg.yw, rg.xz, f.z ); // this doesn't seem to match up well any more, but it's close...\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy-.5*iResolution.xy) / iResolution.x;\n\t\n\tvec2 blob = Noise( vec3(uv.x,uv.y*sqrt(3.0)*.5,uv.y*.5)*4.0 + iTime*vec3(0,-.1,.1) );\n\t\n\tconst vec3 ink1 = vec3(.1,.9,.8);\n\tconst vec3 ink2 = vec3(.9,.1,.6);\n\t\n\tvec3 col1 = pow(ink1,vec3(4.0*sqrt(max(0.0,(blob.x-.6)*2.0))));\n\tvec3 col2 = pow(ink2,vec3(4.0*sqrt(max(0.0,(blob.y-.6)*2.0))));\n\t\n\tfragColor = vec4(ToGamma(col1*col2),1);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xdf3D2","date":"1379194257","viewed":1205,"name":"Cinema Blobs","username":"TekF","description":"I remember British cinemas used to show something like this before the feature started.","likes":50,"published":1,"flags":0,"usePreview":0,"tags":["noise","colour","liquid"],"hasliked":0,"parentid":"","parentname":""}}