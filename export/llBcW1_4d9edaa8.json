{"ver":"0.1","info":{"id":"llBcW1","date":"1508348027","viewed":533,"name":"shortest triangular tiling (69c)","username":"FabriceNeyret2","description":"and fract(U) gives local coordinates ( see [url]https://www.shadertoy.com/view/ll2cRR[/url])\n\nsee commented variants and sub-variants\n\n","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["2d","onetweet","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// inspired from https://www.shadertoy.com/view/ll2cRR   ( hexamaze )\n\n/**/ // RGB tile : 71 chars         \n\nvoid mainImage(out vec4 O, vec2 u) {\n    O = mod( ceil(u * mat4x2( 12, -7, 0, 14,    12, 7, u) / 2e2), 2. ); }\n\n/**/\n        \n        \n\n        \n/** // B&W tiling : 84 chars         \n\n#define mainImage( O, u )                                       \\\n    vec3 U = ceil(u * mat3x2( 12, -7, 0, 14,    12, 7 ) / 2e2); \\\n    O  += mod( dot(U,U), 2. )\n\n/**/\n  \n  \n        \n        \n/**  // random grey tiling: 92 chars\n\n#define mainImage( O, u )                                   \\\n    vec3 U = u * mat3x2( 12, -7, 0, 14,    12, 7 ) / 2e2;   \\\n    O  += .5+.5*sin( 1e5* length( ceil( U )))\n\n// variants:\n//   O [ 1 + int( 2.* sin( 1e5* length( ceil( U )))) ]++  // random colors\n//   O += fract( 1e2* length( ceil( U )))                 // correlated noise\n//   O += vec4(fract(U),1)                                // local coordinates\n\n/**/\n","name":"Image","description":"","type":"image"}]}