{"ver":"0.1","info":{"id":"XfsGWS","date":"1703451894","viewed":100,"name":"Sine bud (alt)","username":"ChunderFPV","description":"This version doesn't require a large raymarch loop and uses tori instead of polar sine.","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","flower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define A(v) mat2(cos(m.v+vec4(0, -1.5708, 1.5708, 0)))  // rotate\n#define H(v) (cos(radians(vec3(0, 60, 120))+(v)*6.2832)*.5+.5)  // hue\n\n// modified torus from iq: https://iquilezles.org/articles/distfunctions/\nfloat tor(vec3 p, vec2 t)\n{\n    p.z = .5-abs(p.z);\n    p.y = abs(p.y)-.5;\n    p.yz *= mat2(cos(.785+vec4(0, -1.5708, 1.5708, 0)));\n    p.y *= .707;\n    return length( vec2(length(p.xy)-t.x, p.z) ) - t.y;\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float pi = 3.1416,\n          pi2 = pi*2.,\n          pi_2 = pi/2.,\n          t = iTime/5.,\n          s = 1., d = 0., i = d;\n    \n    vec2 R = iResolution.xy,\n         m = (iMouse.xy-.5*R)/R.y*4.,\n         ts = vec2(0.5, .01); // torus size\n    \n    vec3 o = vec3(0, 0, -40), // cam\n         u = normalize(vec3((U-.5*R)/R.y, 10)),\n         b = H(t/5.)*3.*length(u.xy), // bg color\n         c = b, k = c, p;\n    \n    if (iMouse.z < 1.) m = -vec2(t-pi_2/2., .6);\n    mat2 v = A(y), h = A(x); // pitch & yaw\n    \n    for (; i++< 60.;) // raymarch\n    {\n        p = o+u*d;\n        p.yz *= v;\n        p.xz *= h;\n        p = abs(p) - cos(t+pi)*.5-.5; // clone\n        k.x = tor(p, ts);\n        k.y = tor(p.yzx, ts);\n        k.z = tor(p.zxy, ts);\n        s = min(s, min(k.z, min(k.x, k.y)));\n        d += s;\n        if (s < .001 || d > 100.) break;\n    }\n    c /= min(vec3(s*d), .05/c)*k + c;\n    C = vec4(c + b/3., 1);\n}","name":"Image","description":"","type":"image"}]}