{"ver":"0.1","info":{"id":"cljSRG","date":"1676276038","viewed":132,"name":"Bezier_curve","username":"zmyyy","description":"Bezier curve","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["curve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 1\nvec2 bezier(float t, vec2 s, vec2 e, vec2 c){\n    return mix(mix(s,c,t),mix(c,e,t),t);\n}\nfloat circle(vec2 p, vec2 c){\n    float d = length(p-c);\n    return smoothstep(fwidth(d),0.,d-.02);\n}\nfloat line(vec2 p, vec2 a, vec2 b){\n    vec2 ap = p-a, ab = b-a;\n    float t = clamp(dot(ap,ab)/dot(ab,ab),0.,1.);\n    vec2 c = a+ab*t;\n    float d = length(p-c);\n    return smoothstep(fwidth(d),.0,d-0.001);\n}\nvec3 curveA2B(vec2 A, vec2 B, vec2 uv){\n    vec2 C = mix(A,B,clamp(sin(iTime),0.,1.));\n    C += .1*cos(iTime);\n    vec3 col = vec3(0.);\n    int num_seg = 25;\n\n    vec2 p = A;\n    col += vec3(1.,0.,0.)*circle(uv,A);\n    col += vec3(0.,1.,0.)*circle(uv,B);\n    //col += vec3(0.,0.,1.)*circle(uv,C);\n    for(int i=1;i<=num_seg;i++){\n        float t = float(i)/float(num_seg);\n        vec2 nxtp = bezier(t,A,B,C);\n        \n        col += vec3(1.)*line(uv,p,nxtp);\n        p=nxtp;\n    }\n\n    return col;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.);\n    for(float i = 0.1;i<1.0;i+=0.1){\n        col += curveA2B(vec2(.1,i),vec2(.9,i),uv);\n        col += curveA2B(vec2(i,.1),vec2(i,.9),uv);\n    }\n    fragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}