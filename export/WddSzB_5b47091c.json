{"ver":"0.1","info":{"id":"WddSzB","date":"1572285274","viewed":81,"name":"Checker Pattern","username":"adamgotya","description":"this shader makes a checker pattern","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["classwork"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rows = 5.; //#of rows\nfloat cols = 8.; //#of colums\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 uv = (fragCoord-.5/iResolution.xy)/iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //aspect ratio\n    float asp = iResolution.y/iResolution.x;\n    \n    \n    \n    uv.y *= asp;\n    //uv.x /= asp;\n    \n    vec3 col = vec3(0);\n    \n    //use these two lines to find the higher of the two values\n    float t = step(cols,rows);\n    \n    float tt = step((rows/cols), asp);\n    \n    float size = (cols * 1.-t) + (rows * t);\n    \n    \n    \n    //use these two lines to define create values for each square\n    float xnum = floor(uv.x*size+1.);\n    float ynum = floor(uv.y*size+1.);\n    \n    //use these 3 lines to determine if the square is within the range of rows/cols\n    float rgood = step(xnum,cols);\n    float cgood = step(ynum,rows);\n    float good = rgood*cgood;\n    \n    //use these two lines to give each row then column a value of 1 or 0\n    uv.x = mod(xnum,2.)*rgood;\n    uv.y = mod(ynum,2.)*cgood;\n    \n    //use abs to determine the value of each square (its either 0 or 1 aka black or white)\n    col.rgb = vec3(abs(uv.x-uv.y)) * good;\n    \n    //col.rgb = vec3(step(1., 3.)); //if a > b = 0 // a <= b = 1\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}