{"ver":"0.1","info":{"id":"csjBDt","date":"1690275061","viewed":42,"name":"quadratic function","username":"LCDShader","description":"二次函数","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//以屏幕中心为原点(0.0),绘制二次函数\nfloat Screen_Y=360.0;\nfloat Screen_X=640.0;\nfloat step_x;\nfloat step_y;\n\nvec3 BackGrundColor=vec3(0.0,0.0,0.0);\n\nvec2 Origin=vec2(0.0,0.0);\n\nfloat CoordinateWidth;\nvec3 CoordinateClor=vec3(1.0,1.0,1.0);\n\nfloat A=2.0;//amplitude 振幅\nfloat B=0.2;//center 中心\nfloat C=-0.2;//shifting 偏移\nvec3 FunColor=vec3(0.0,1.0,0.0);\n\nfloat range_Y;// Y的范围，线条粗细\n\nfloat Fun_Y(float a,float b,float c,float x)\n{\n  //return a*pow((x-b-Origin.x),2.0)+c+Origin.y;//\n  return a*(x-b)*(x-b)+c;\n}\n\nvec3 DrawCoordinate(vec2 uv)\n{\n   //Origin=vec2(0.5,0.5*Screen_Y/Screen_X); \n   if(abs(uv.x-Origin.x)<CoordinateWidth*step_x)\n   {\n       return CoordinateClor;\n   }\n  \n   if(abs(uv.y-Origin.y)<CoordinateWidth*step_y)\n   {\n     return CoordinateClor;\n   }    \n  return BackGrundColor;\n}\n\nvec2 rotate( vec2 v, float a ) {\n    vec2 uv=v-0.1;\n    float s = sin(a);\n    float c = cos(a);\n    mat2 m = mat2(c, -s, s, c);\n    return m * uv+0.1;\n}\n\nvec3 Draw(vec2 uv)\n{\n float t_x=0.1;\n float t_y=0.1;\n mat3 transform=mat3(1.0,0.0,-t_x,\n                       0.0,1.0,-t_y,\n                       0.0,0.0,1.0);\n   uv= (vec3(uv,1.0)*transform).xy;\n   //uv+=rotate(uv,45.0);\n  float y=Fun_Y(A,B,C,uv.x);\n  float blur=smoothstep(range_Y,0.0,abs(uv.y-y));\n  return BackGrundColor+blur*FunColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    step_x=1.0/iResolution.x;\n    step_y=1.0/iResolution.y;\n    Screen_Y=iResolution.y;\n    Screen_X=iResolution.x;\n    \n    range_Y=1.5/iResolution.y;\n    CoordinateWidth=1.0;\n    // Output to screen\n        // 坐标矫正\n    uv=uv-0.5;\n    fragColor = vec4(DrawCoordinate(uv)+Draw(uv),1.0);\n}","name":"Image","description":"","type":"image"}]}