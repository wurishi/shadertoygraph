{"ver":"0.1","info":{"id":"WdGSzc","date":"1574549987","viewed":806,"name":"ZzArt 6 - Generative Abstract","username":"KilledByAPixel","description":"Evolved using zzart.3d2k.com","likes":33,"published":3,"flags":32,"usePreview":0,"tags":["zzart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//////////////////////////////////////////////////////////////////////////////////\n// ZzArt Loop - Copyright 2020 Frank Force\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//////////////////////////////////////////////////////////////////////////////////\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = fragCoord.xy/iResolution.xy;\n   fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// ZzArt - Generation: 92-B (1574121855632)\n\nconst float PI=3.141592653589793;\nvec3 SmoothHSV(vec3 c) { vec3 rgb = clamp(abs(mod(c.x*6.+vec3(0,4,2),6.)-3.)-1.,0.,1.); return c.z * mix( vec3(1), rgb*rgb*(3.-2.*rgb), c.y); }\nvec4 lengthA(vec4 a)      { return vec4(length(a)); }\nvec4 log2A(vec4 a)        { return log2(abs(a)); }\nvec4 sqrtA(vec4 a)        { return sqrt(abs(a)); }\n\nvoid mainImage(out vec4 a, in vec2 p)\n{\n    a=p.yxyx/iResolution.yxyx;\n    a.xywz *= vec2(-2.720, -11.550).xyxy;\n    a.xywz += vec2(-9.370, 2.120).xyxy;\n    vec4 b = a;\n\n    float t = 2.*PI*iTime/4.0;\n\n    // Generated Code - Line Count: 8\n    for (int i = 0; i < 8; ++i)\n    {\n        b.yxzw += cos(b+(i>0?t:0.)).zwxx;\n        b.yzxw *= (a).xwyx;\n        a.yzwx = normalize(b).xzyw;\n        b.xwyz -= (vec4(8.875, -6.698, 4.058, 5.739)).zwyz;\n        b.xwzy *= exp(vec4(-1.442, 0.000, -1.654, 0.375)).yywy;\n        b.wyzx /= floor(vec4(-0.008, 4.372, 0.419, 2.222)).xyxw;\n        b.zwxy *= log2A(a).yxyz;\n        a.zwxy = sqrtA(a).xxwz;\n    }\n\n    // Smooth HSV by iq\n    a.x *= 0.539+0.964;\n    a.y *= 0.587;\n    a.xyz = SmoothHSV(a.xyz);\n    \n   vec2 uv = p.xy/iResolution.xy;\n   vec4 c = texture(iChannel0, uv);\n    a = c*.95+.05*a;\n}","name":"Buffer A","description":"","type":"buffer"}]}