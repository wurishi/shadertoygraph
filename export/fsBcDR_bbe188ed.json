{"ver":"0.1","info":{"id":"fsBcDR","date":"1643301446","viewed":290,"name":"cumulated random lines","username":"FabriceNeyret2","description":"SPACE for contrast enhancement.\ntry #def hash = float hashf vs int hashi\nNot visible stat difference, but  float hash get artifacts after a few thousand lines.\n\nbetter use x64 acceleration ","likes":8,"published":3,"flags":48,"usePreview":0,"tags":["random","hash","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define keyToggle(a)  ( texelFetch(iChannel3,ivec2(a,2),0).x > 0.)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T(U) * R.x/2. / float(iFrame);  // normalize cumul\n    if ( keyToggle(32) ) O = (O-.5) *3. + .5;\n    \n    O = sqrt(O);                        // to sRGB\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define hash hashi  // hashi or hashf\n\nvec3 hashi( int v ) { // --- integer hash from https://www.shadertoy.com/view/XlXcW4\n    uint k = 1103515245U;  // GLIB C\n    uvec3 x = uvec3(v,k,k+uint(v));  // attention: v = uvec3(v) is horrible\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    return vec3(x)/float(0xffffffffU);\n}\nvec3 hashf(int v) { // --- float hash\n    return fract(sin(float(v) *vec3(127.1,311.7, 269.5)) *43758.5453123);\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if ( iFrame < 1 ) { O-=O; return; }\n    O.xyz = hash(iFrame);\n    vec2 p = O.xy*R/R.y,                         // choose a random line\n         d = cos( 6.28*O.z + vec2(0,1.57) );\n    O = T(U);\n    p -= U/R.y; p -= dot(p,d)*d;                 // vector distance to line\n    float l = length(p);\n    O += smoothstep( 1./R.y, 0., l );            // cumulates lines\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R    iResolution.xy\n#define T(U) texelFetch(iChannel0, ivec2(U), 0 )","name":"Common","description":"","type":"common"}]}