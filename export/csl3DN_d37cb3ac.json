{"ver":"0.1","info":{"id":"csl3DN","date":"1666267017","viewed":110,"name":"Test_stochasticprocess_end","username":"kverleys","description":"test file for chapter ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["phd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Test_stochasticprocess_2\" by kverleys. https://shadertoy.com/view/stKBDt\n// 2022-10-11 11:33:19\n\n// Fork of \"Test_stochasticprocess\" by kverleys. https://shadertoy.com/view/NlGfDt\n// 2022-10-11 11:30:27\n\n// Author @patriciogv - 2015\n// http://patriciogonzalezvivo.com\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\nvec3 bgCol = vec3(1.0,1.0,1.0);\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(-0.930,-0.950)))*\n        43758.417);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 3\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.3;\n    float a = 1.0;\n    vec2 shift = vec2(-1.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(1.2), sin(1.2),\n                    -sin(1.5), cos(1.20));\n    \n    \n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 1.5 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = 6.0*iTime;\n    vec2 uv = fragCoord.xy/(iResolution.xy);\n    vec2 st = uv * 10.;\n  \n\n    vec3 color = vec3(1.0);\n\n    vec2 q = vec2(0.);\n    q.x = fbm( st + 0.00*t);\n    q.y = fbm( st + vec2(0.5));\n\n    vec2 r = vec2(0.);\n    r.x = fbm( st + 1.0*q + vec2(1.0,1.0)+ 0.15*t );\n    r.y = fbm( st + 1.0*q + vec2(1.0,1.0)+ 0.126*t);\n\n    float f = fbm(st+r);\n    \n    color = mix(vec3(0.001,01.0,1.0),\n                vec3(1,0.666,1.0),\n                clamp((f*f)*4.0,0.0,1.0));\n\n    color = mix(color,\n                vec3(0,0,0.0),\n                clamp(length(q),0.0,1.0));\n\n    color = mix(color,\n                vec3(1,1,1),\n                clamp(length(r.x),0.0,1.0));\n\n    vec4 BGLayer = vec4(bgCol, 1.0);\n    vec4 LayerOne = vec4(0.0,0.0,0.0,0.0);\n    vec4 LayerTwo = vec4(0.0,0.0,0.0,0.0);\n    vec4 LayerThree = vec4(0.0,0.0,0.0,0.0);\n    \n    LayerOne = vec4(texture(iChannel0, uv));\n    \n    LayerTwo =  vec4((f*f*f+.6*f*f+.5*f)*color,0.1);//\n    \n    LayerThree = vec4(texture(iChannel1, uv));\n    \n    vec4 Comp = mix(BGLayer, LayerOne, LayerOne.a);\n    Comp = mix(Comp, LayerTwo, LayerTwo.a);\n    Comp = mix(Comp, LayerThree, LayerThree.a);\n\n    // Output to screen\n\n    //fragColor = vec4((f*f*f+.6*f*f+.5*f)*color,0.1) ;\n    fragColor = Comp;\n}","name":"Image","description":"","type":"image"}]}