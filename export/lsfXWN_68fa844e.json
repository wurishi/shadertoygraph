{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const float pi = 3.14159;\n\n// complex multiplication\nvec2 cmul(vec2 a, vec2 b) {return vec2(a.x*b.x -  a.y*b.y, a.x*b.y + a.y*b.x);}\nvec2 cdiv(vec2 a, vec2 b) {return -cmul(a, b)/(b.x*b.x + b.y*b.y);}\n\n// complex conjugation\nvec2 conj(vec2 c) {return vec2(c.x, -c.y);}\n\nfloat usin(float x) {return 0.5 + 0.5*sin(x);}\nfloat ucos(float x) {return 0.5 + 0.5*cos(x);}\n\n\n// generate fractals\nvec3 cols(float t, vec2 uv, vec2 r) {\n\tfloat c = 1.0, xa = 1.0, ya = 1.0, xb = 1., yb = 1.;\n\tfloat esc = 1.;\n\n\tvec2 z = uv;\n\t//vec2 z = vec2(0.);\n\t\t\n\tvec2 o = vec2(sin(t), cos(t));\n\tfloat or = 3.14159/16.;\n\tvec2 o2 = vec2(0,0);//cos(t) - or*cos(1./or*t), sin(t) - or*sin(1./or*t));\n\n\tconst int iters = 128;\n\tconst float st = 1./float(iters);\n\tfloat bgb = 0.;\n\tfloat v = 0., u = r.x;\n\t\t\n\tfor (int i = 0; i < iters; i++) {\n\t\t\n\t\t// mandelbrot set (set z = vec2(0.) above)\n\t\tz = cmul(z, z) + uv;\n\t\t\n\t\t// julia set\n\t\t//z = cmul(z, z) + r;\n\t\t\n\t\t// mandelbar set\n\t\t//z = cmul(conj(z), conj(z)) + r;\n\t\t\n\t\t// cubic fractals\n\t\t//z = cmul(cmul(z, z), z) + r;\n\t\t\n\t\t// burning ship\n\t\t//z = conj(cmul(abs(z), abs(z))) + uv;\n\t\t\n\t\t//nova fractal\n\t\t//z = z - 2.*cdiv(cmul(z, cmul(z, z)) - vec2(1., 0.), 3.*cmul(z, z));\n\t\t\n\t\t//ikeda map\n\t\t//v = 0.4 - 6./(1. + z.x*z.x + z.y*z.y);\n\t\t//z = vec2( 1. + u*(z.x*cos(v)-z.y*sin(v)), u*(z.x*sin(v)+z.y*cos(v)));\n\t\t\n\t\t//logistic map\n\t\t//z = r.x*cmul(z, vec2(z.x-1., z.y));\n\t\t\n\t\t//misc julia sets\n\t\t//z = exp(z) + r;\n\t\t//z = cmul(z, exp(z)) + r;\n\t\t//z = cmul(cmul(z, z), exp(z)) + r;\n\t\t//z = cdiv((cmul(z, z) + z), log(z)) + r;\n\t\t//z = cmul(cmul(z, z), r)-r;\n\t\t\n\t\tif ( i < 2 ) continue;\n\t\t\n\t\tfloat dist = length(o-z);\n\t\tif (dist > 1.) break;\n\t\t\n\t\txa = min(xa, abs(z.x-o.x));\n\t\tya = min(ya, abs(z.y-o.y));\n\t\n\t\txb = min(xb, abs(z.x-o2.x));\n\t\tyb = min(yb, abs(z.y-o2.y));\n\t\t\n\t\tesc = min(esc, dist);\n\t\tc = min(c, min(xa, ya));\n\t\tbgb += st;\n\t}\n\t\t\n\tvec3 c1 = vec3(0.000000, 0.627451, 0.690196);\n\tvec3 c2 = vec3(0.415686, 0.290196, 0.235294);\n\tvec3 c3 = vec3(0.800000, 0.200000, 0.247059);\n\tvec3 c4 = vec3(0.921569, 0.407843, 0.254902);\n\tvec3 c5 = vec3(0.929412, 0.788235, 0.317647);\n\tvec3 c6 = vec3(0.286275, 0.039216, 0.239216);\n\tvec3 c7 = vec3(0.541176, 0.607843, 0.058824);\n\tvec3 c8 = vec3(0.972549, 0.792157, 0.000000);\n\t\n\tfloat b = exp(-c);\n\tfloat ex = exp(-xa*xa);\n\tfloat ey = exp(-ya*ya);\n\t\n\tvec3 bg = ucos(pi*ex)*c1 + usin(pi*(ex+ey))*c2;\n\t//if (b > .99) return exp(-(1.-b)*300.)*c8;\n\treturn 1.5*bg-1.+ 1.5*(exp(-xb*xb)*c6+ exp(-yb*yb)*c5) + (1.-esc)*c7;\n}\n\n// aa, transformations\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n\tuv.x *= iResolution.x/iResolution.y;\n\t\t\n\tvec2 m = iMouse.xy / iResolution.xy;\n\tm = m * 2.0 - 1.0;\n\tm.x *= iResolution.x/iResolution.y;\n\t\n\tfloat t = iTime;\n\n\t//uv /= exp(t);\n\t\n\t// antialiasing\n\tconst int aa = 3;\n\tvec2 px = 1./(iResolution.xy*float(aa));\n\t\n\tvec3 c = vec3(0.);\n\t\n\tfor (int x = 0; x < aa; x++) {\n\t\tfor (int y = 0; y < aa; y++) {\n\t\t\tc += cols(t, uv + vec2(px.x*float(x), px.y*float(y)), m);\t\n\t\t}\n\t}\n\tc /= float(aa*aa);\n\n\tfragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsfXWN","date":"1401125107","viewed":227,"name":"Fractals exploring","username":"zugamifk","description":"a simple way to look at fractals","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","mandelbrot"],"hasliked":0,"parentid":"","parentname":""}}