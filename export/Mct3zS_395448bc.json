{"ver":"0.1","info":{"id":"Mct3zS","date":"1711847595","viewed":84,"name":"Morphing gyroids - Revision 2024","username":"Krafpy","description":"Made during the Shader Jam at Revision 2024.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","gyroid","revision","jam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\nmat2 rot(float a){\nfloat c = cos(a);\n  float s = sin(a);\n  return mat2(c, -s, s, c);\n}\n\nfloat hash13(vec3 p3) {\n    p3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.zyx + 31.32);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise(vec3 p) {\n    vec3 i = floor(p);\n    vec3 w = smoothstep(0., 1., p-i);\n    \n    vec2 k = vec2(1., 0.);\n    return \n    mix(mix(mix(hash13(i+k.yyy),\n                hash13(i+k.xyy), w.x),\n            mix(hash13(i+k.yxy),\n                hash13(i+k.xxy), w.x), w.y),\n        mix(mix(hash13(i+k.yyx),\n                hash13(i+k.xyx), w.x),\n            mix(hash13(i+k.yxx),\n                hash13(i+k.xxx), w.x), w.y), w.z);\n}\n\nfloat fbm(vec3 p){\n    float f = 0.;\n    float s = 0.5;\n    float a = 1.;\n    for(int i = 0; i < 1; i++){\n        s *= 2.;\n        a *= 0.5;\n        f += a*noise(s*p);\n    }\n    return f;\n}\n\nfloat gyr(vec3 p){\n    return dot(sin(p.xyz), cos(p.yzx))*0.7;\n}\n\nfloat smin(float a, float b , float k){\n  return -log2(exp2(-k*a)+exp2(-k*b))/k;\n  }\n\n float zz(float x){\n  return fract(x)*2.-1.;\n   }\n   \n   float ss(float x){ return 0.5*sin(x)+0.5;}\n  \nfloat map(vec3 p) {\n  vec3 p0 = p;\n  p.xz *= rot(p.y);\n  p.xz *= 1. + 0.2*sin(p.y + 2.*time);\n  p.x = abs(p.x)-1.;\n  p.z = abs(p.z) - 0.5;\n  float d = abs(length(p) - (1.+0.5*exp(-fract(3.*time)))) -( 0.1 + 0.1*exp(-fract(time)));\n  vec3 q = p + time + pow(abs(sin(time*0.5)), 5.);\n  p.xz *= rot(4.*time);\n  p.yz *= rot(3.*time);\n  \n  //vec3 c = vec3(cos(time),0,sin(time));\n  //d = min(d, dot(q, c)-0.1);\n  \n  d = max(d, gyr(q*10. + sin(time))/10.);\n  float d1 = d + fbm(p*(10.+2.*ss(3.*time)))*0.1;\n  d = d1;\n  vec3 n = vec3(0, 1, 1);\n  float d2 = abs(dot(p, n) - sin(time)) - 1.;\n  d = max(d, d2);\n  return d;\n}\n\nvec3 normal(vec3 p){\n  vec2 h = 0.001*vec2(1,-1);\n  return normalize(\n    h.xyy*map(p+h.xyy) +\n    h.yxy*map(p+h.yxy) +\n    h.yyx*map(p+h.yyx) +\n    h.xxx*map(p+h.xxx)\n  );\n  }\n\n\nfloat glow = 0.;\nvec2 march(vec3 ro, vec3 rd){\n  float t = 0.;\n  float n = 32.;\n  for(float i = 0.; i < n; i++){\n    float d = map(ro + rd*t);\n    glow += pow(exp(-3.*d), 50.);\n    if(d < 0.001){\n      return vec2(t, i/n);\n    }\n    t += d;\n  }\n  return vec2(-1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / iResolution.xy;\n\tuv -= 0.5;\n  uv.x *= iResolution.x / iResolution.y;\n  \n  vec3 col = vec3(0);\n  \n  vec3 ro = vec3(0, 0, -4);\n  vec3 rd = normalize(vec3(uv, 1));\n  rd.xz *= rot(time);\n  ro.xz *= rot(time);\n  \n  vec2 hit = march(ro, rd);\n  if(hit.y > 0.){\n    float f = 1. - hit.y;\n    f = pow(f, 0.5);\n    col = vec3(1)*f;\n    \n    vec3 p = ro + rd*hit.x;\n    vec3 n = normal(p);\n    \n    \n    vec3 c = mix(vec3(1), vec3(0,1,1), 0.5*sin(10.*time)+0.5);\n    c = mix(c, vec3(1,0,1), 0.3*sin(time)+0.5);\n    \n    float sh = max(0., dot(n, normalize(vec3(1)+sin(time))));\n    col *= sh*sh*sh*sh*sh;\n    col += max(0., dot(n, -normalize(vec3(1)))) * vec3(0, 0, 1) * 0.5;\n     \n    vec3 s = normalize(vec3(1));\n    col += pow(max(0., dot(n, -rd)), 10.);\n    \n    col += f*c;\n    \n    vec3 k = normalize(vec3(0,1,0));\n    k.xy *= rot(time);\n    k.zx *= rot(time);\n    col = mix(col, 1.-col, step(0., dot(p,k)));\n    \n    col.rg *= rot(col.b + time);\n  } else {\n    col += glow;\n    }\n  \n    \n    float k = time + exp(-fract(5.*time));\n    float d = dot(uv, vec2(cos(k), sin(k))) + 0.3*sin(time);\n    float d2 =  dot(uv, vec2(-cos(k), sin(k+1.33))) + 0.3*sin(time);\n    col = mix(col, 1.-col, step(d*d2, 0.));\n    //col= mix(col, 1-col, noise(vec3(uv)\n    \n  fragColor = vec4(col, 1.);\n}\n\n","name":"Image","description":"","type":"image"}]}