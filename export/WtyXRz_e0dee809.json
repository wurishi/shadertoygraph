{"ver":"0.1","info":{"id":"WtyXRz","date":"1582029635","viewed":356,"name":"Vector blur","username":"voax","description":"Like After effects' vector blur. A gradient map controls the location, direction and intensity of blur.\nHold mouse to control gradient map.","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["blur","map","vector"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int steps = 10;\nconst float weight = 100.0;\nconst float angle_offset = 0.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 map = texture(iChannel2, uv);\n    float lum = dot(map.rgb, vec3(1.0)) / 3.0;\n    float dx = dFdx(lum);\n    float dy = dFdy(lum);\n    vec2 d = vec2(dx, dy);\n    \n    vec2 n;\n    if (abs(d.x) + abs(d.y) == 0.0)\n        n = vec2(0.0);\n    else {\n        n = d / length(d);\n        \n        float q = angle_offset * 3.14159265359 / 180.0;\n        n = vec2(cos(q) * n.x - sin(q) * n.y,\n        \t\t sin(q) * n.x + cos(q) * n.y);\n    }\n    \n    vec2 s = vec2(1.0) / iResolution.xy;\n    \n    vec4 blurcolor = vec4(0.0);\n    for (int i = -steps; i <= steps; ++i)\n        blurcolor += texture(iChannel0, uv + n * float(i) * s);\n    blurcolor /= float(2 * steps + 1);\n    \n    vec4 basecolor = texture(iChannel0, uv);\n    \n    float r = clamp(length(d) * weight, 0.0, 1.0);\n    vec4 c = mix(basecolor, blurcolor, r);\n    \n    fragColor = c;\n    // fragColor = map;\n    // fragColor = vec4(n / 2.0 + 0.5, r, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// #define CONSTANT_BLUR\n\nvec2 a = vec2(0.5, 0.5);\nvec2 b = vec2(0.7, 0.4);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iMouse.z > 0.5)\n        b = iMouse.xy / iResolution.xy;\n    //else\n    //    b = a + vec2(sin(iTime) * 0.5 + 0.5, 0.1) * (sin(iTime * 0.3) * 0.2 + 0.3);\n        \n    vec2 v = b - a; \t\t\t\t\t\t\n    vec2 n = v / length(v); \t\t\t\t\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec2 d = uv - a;\t\t\t\t\t\t\n    \n    float t = dot(d, n) / length(v);\n    \n    #ifndef CONSTANT_BLUR\n    t = smoothstep(0.0, 1.0, t);\n    // t = t * t * t;\n    #endif\n    \n    t = clamp(t, 0.0, 1.0);\n    fragColor = vec4(vec3(t),1);\n}","name":"Buffer A","description":"","type":"buffer"}]}