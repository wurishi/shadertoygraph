{"ver":"0.1","info":{"id":"DtffWB","date":"1693387347","viewed":51,"name":"Spatial Warping","username":"zack_blaug","description":"code golf ray marcher","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define r iResolution\n\nvec2 m(vec3 p) {\n    float d = distance(mod(p,2.), vec3(1.)) - .6;\n    p+=iTime*.2;\n    p *=10.;\n    float a = sin(p.x)*sin(p.y)*sin(p.z);\n    return vec2(d+a*0.2,d+.6);\n}\n\nvoid mainImage( out vec4 o, in vec2 f )\n{\n    f = (f.xy / r.xy * 2. -1.);\n    f.x*=r.x/r.y;\n    vec3 e=vec3(0.,0.,iTime);\n    float c=cos(iTime);\n    float s=sin(iTime);\n    vec3 v=mat3(vec3(c,s,0),vec3(-s,c,0),vec3(0,-s*c+-s*c,c))*normalize(vec3(f.x, f.y, -1));\n    vec3 d;\n    for (float i = 0.; i < 100.; i+=1.)\n    {\n        vec2 r = m(e);\n        d.z = r.y;\n        if(r.x < .01 || d.y > 100.) break;\n        e  += r.x*v*0.3;\n        d.y += r.x;\n        d.x += 0.01;\n    }\n    \n    o = vec4((1.-d.z*1.5)+ 1.-d.y/10.+d.x*v.rgrr);\n    \n}","name":"Image","description":"","type":"image"}]}