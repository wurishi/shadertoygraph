{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"//author khlorghaal\n//most rights reserved\n\n#define PHI 1.61803399\n#define TAU 6.28318531\n#define time iTime\n#define ASPECT (float(iResolution.x)/float(iResolution.y))\nfloat lum(vec3 rgb){ return dot(rgb,vec3(0.299, 0.587, 0.114)); }\n#define nmaps(x) (x*2.-1.)\n#define nmapu(x) (x*.5+.5)\n#define tri(x) (abs(nmaps(fract(x))))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv= fragCoord/iResolution.xy;\n    uv= uv*.75+.125;\n    \n    vec3 col= pow(texture(iChannel0, uv).rgb, vec3(1./2.));\n    \n    col.rg*= (.8 + tri( lum(col)*2.75 + time*1.25 )*.5 );\n    \n    col= pow(col,vec3(2.5));\n        \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"mdtGWX","date":"1677960231","viewed":79,"name":" luminance flow onto luminance","username":"khlorghaal","description":" ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["distortion","postprocess"],"hasliked":0,"parentid":"Mt3Bz7","parentname":"Thin Water"}}