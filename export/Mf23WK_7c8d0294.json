{"ver":"0.1","info":{"id":"Mf23WK","date":"1704655967","viewed":16,"name":"Testingforyou","username":"ghost59","description":"This is another test, it will change over time. ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["thisisanothertest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.5,0.5,0.5);    \n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(1.0,1.0,1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n    \n    return a + b*cos(6.28318*(c*t+d) );\n\n}\n\nvec3 palette2(float t){\n     vec3 a = vec3(123,33,44);    \n    vec3 b = vec3(55,66,77);\n    vec3 c = vec3(77,77,77);\n    vec3 d = vec3(565,66,200);\n    \n    return a + b*cos(6.28318*(c*t+d) );\n    }\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv; \n\n    // Time varying pixel color\n    uv = fract(uv * 1.5) - 0.5;\n    vec3 col = palette(length(uv0) * .4 + iTime * .4);\n    vec3 finalcolor = palette2(length(uv) * .1 + iTime * .1);\n    float a = length(uv) * exp(-length(uv0));\n    float b = length(uv) * exp(length(uv0));\n    \n    a = sin(a* 8. + iTime)/8.;\n    a = abs(a);\n    a = 0.03 / a;\n    \n    b = sin(b * 8. + iTime)/8.;\n    b = sin(b * 8. - iTimeDelta)*8.;\n    b = abs(b);\n    \n    col = a * col / b;\n    finalcolor = col / finalcolor;\n\n    // Output to screen\n    fragColor = vec4(finalcolor,1.0);\n}","name":"Image","description":"","type":"image"}]}