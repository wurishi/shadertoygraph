{"ver":"0.1","info":{"id":"Ds2SRW","date":"1669977142","viewed":47,"name":"Geshire","username":"Vaksim","description":"simple dimple","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["studieren"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float w = 16.0;\nconst float h = 9.0;\n\nfloat notNeg(float x){\n    if (x< 0.0) x = 0.0;\n    return x;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col;\n    \n    //уравнение плоскости внизу\n    float A = 0.0;\n    float B = 1.0;\n    float C = 0.0;\n    float d = 5.0;\n    vec3 lightPos = vec3(0.0,5.0*sin(iTime)+10.0,15.0);\n    \n    float k = iResolution.x / iResolution.y;\n    vec3 Xp = vec3((uv.x-0.5)*w, (uv.y-0.5)*h, 10);\n    vec3 center = vec3 (1,3,20);\n    float R = 4.0;\n    \n    \n    float t = (-d/(A*Xp[0] + B*Xp[1] + C*Xp[2]));\n    vec3 pointOnP = t*Xp;\n    vec3 lin = lightPos - pointOnP;\n    \n    float a = dot(lin,lin);\n    float b = 2.0*dot(lin,pointOnP-center);\n    float c = dot(pointOnP-center,pointOnP-center)-R*R;\n    float D1 = b*b-4.0*a*c;\n    \n    \n    a = dot(Xp,Xp);\n    b = -2.0*dot(Xp,center);\n    c = dot(center,center)-R*R;\n    float D2 = b*b-4.0*a*c;\n    float tmin = (-b-sqrt(D2))/(2.0*a);\n    vec3 pointOnC = tmin*Xp;\n    \n    \n    vec3 n = normalize(pointOnC - center);\n    vec3 lToLight = normalize(lightPos - pointOnC);\n    vec3 lToEye = normalize(-pointOnC);\n    vec3 lRef = 2.0*dot(lToLight,n)*n-lToLight;\n    vec3 TexCol = vec3 (1.0,0.0,0.0);\n    vec3 lightCol = vec3 (1,1,0);\n    vec3 bCol = vec3 (1,1,1);\n    \n    vec3 Ambient = 0.2 * TexCol ;\n    vec3 Diffuse = 0.4 * lightCol * notNeg(dot(n,lToLight));\n    vec3 Specular = 0.4 * bCol*pow (notNeg(dot(lRef,lToEye)), 7.0);\n    \n    \n    if (D2>0.0){\n        col = Ambient+Diffuse+Specular;\n    } else if(D1>0.0 && length(pointOnP) < 100.0 && pointOnP[2]>0.0){\n        col = vec3(0.5, 0.5, 0.5);\n    } else if(length(pointOnP) < 100.0 && pointOnP[2]>0.0){\n        col = vec3(1, 1, 1);\n    } else {\n        col = vec3(0,0,0);\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}