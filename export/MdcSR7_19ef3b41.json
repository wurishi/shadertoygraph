{"ver":"0.1","info":{"id":"MdcSR7","date":"1458295595","viewed":700,"name":"Constant fast blur shader","username":"jstarpl","description":"Generate a fast blur based on a given radius.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["blur","fast"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 Circle(float Start, float Points, float Point) \n{\n\tfloat Rad = (3.141592 * 2.0 * (1.0 / Points)) * (Point + Start);\n\treturn vec2(sin(Rad), cos(Rad));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 PixelOffset = 1.0 / iResolution.xy;\n    \n    const float Radius = 120.0;\n    float Start = 2.0 / Radius;\n\tvec2 Scale = 0.66 * Radius * 2.0 * PixelOffset.xy;\n    \n    float W = 1.0 / (Radius + 1.0);\n    \n    vec3 color = vec3(0,0,0);\n    \n    for (float i=0.0;i<Radius; i++) {\n       color.rgb += texture(iChannel0, uv + Circle(Start, Radius, i) * Scale).rgb * W;\n    }\n\n    fragColor = vec4(color.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}