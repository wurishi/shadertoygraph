{"ver":"0.1","info":{"id":"mljyWd","date":"1692526341","viewed":15,"name":"NMA Demo 2","username":"rokas","description":"Demo","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["nma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.x / iResolution.y;\n    uv.x *= ar;\n    uv.x -= ar / 2. - 0.5;\n    if (uv.x < 0. || uv.x > 1.) {\n        fragColor = vec4(0);\n        return;\n    }\n  \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float f;\n    \n    int NUM_IT = 4;\n    for (int i = 0; i < NUM_IT; ++i) {\n        if (uv.x >= 1. / 3. && uv.y >= 1. / 3. && uv.x < 2. / 3. && uv.y < 2. / 3.)\n            f = 1.;\n        uv = fract(uv * 3.);\n    }\n    \n    col = mix(col, vec3(0), f);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}