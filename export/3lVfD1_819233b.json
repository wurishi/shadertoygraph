{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"mat2 get_rotation_matirx(float rot) {\n    return mat2(\n        cos(rot), -sin(rot), \n        sin(rot), cos(rot)\n    );\n}\n\nvec2 rotate_uv(vec2 uv, mat2 rotation) {\n    uv -= 0.5;\n    uv.x = uv.x * iResolution.x / iResolution.y;\n    uv = rotation * uv;    \n    uv.x = uv.x / iResolution.x * iResolution.y;\n    uv += 0.5;\n    uv = abs(uv);\n    uv = step(1., uv) * 2. + sign(1.-uv) * uv;\n    return uv;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.);\n    \n    //////////////////////////\n    ///    Spining blur    ///\n    //////////////////////////\n    \n    float numSteps = 15.;\n    float sigma = 0.03 * (sin(7.*iTime)*0.5+0.5);\n    for (float i=-numSteps; i <= numSteps; i++)\n    {\n        mat2 rotation = get_rotation_matirx(i*sigma);\n        vec2 _uv = rotate_uv(uv, rotation);\n        col += texture(iChannel1, _uv).rgb;\n    }\n    if (numSteps != 0.)\n        col /= 2. * numSteps + 1.;\n    \n    //////////////////////////\n    //////////////////////////\n\n    vec4 forground = texture(iChannel0, uv);\n    fragColor = mix(vec4(col, 1.), forground, forground.a);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"video","id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"float th = 20.0; // threshold\nfloat a2 = 1.2;\n\nfloat getAlpha(vec4 c){\n\treturn 1.0 - th*(c.g-a2*(max(c.r,c.b)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 fg = texture(iChannel0,uv);\n    \n    float alpha = step(0.5, getAlpha(fg));\n    \n\tfragColor = vec4(fg.rgb, alpha);\n}","name":"Buffer A","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"3lVfD1","date":"1734012187","viewed":13,"name":"Background.No.16","username":"avartation","description":"hgfds","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["asdfgh"],"hasliked":0,"parentid":"","parentname":""}}