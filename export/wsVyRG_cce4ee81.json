{"ver":"0.1","info":{"id":"wsVyRG","date":"1603155586","viewed":871,"name":"RGB Colourise","username":"iaian7","description":"In answer to the question posted here: https://gamedev.stackexchange.com/questions/75923/colorize-with-a-given-color-a-texture?newreg=2110f41c892d4c75b4c0cc336284a218","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["color","colour","colorize","colourise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t// UV map\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Input image\n\tvec4 image = texture(iChannel0, uv);\n\n    // Input colour\n    vec3 color = vec3(sin(iTime),sin(iTime+1.0),sin(iTime+2.0))*0.5+0.5;\n    color = vec3(1.0, 0.5, 1.0);\n\n    // Perceptual greyscale\n    // https://gist.github.com/Volcanoscar/4a9500d240497d3c0228f663593d167a\n    // https://mouaif.wordpress.com/2009/01/05/photoshop-math-with-glsl-shaders/\n    image.r = image.r * 0.3 + image.g * 0.7 + image.b * 0.1;\n\n\t// Centre the colour values using the RGB average\n    vec3 power = (color.r+color.g+color.b)*0.3333-color;\n\n    // Increase the perceptual saturation (this is the downside of simple RGB calculations - you easily lose hue/sat accuracy)\n    power *= 2.0;\n\n    // Colourise the original image\n    image.rgb = pow(image.rrr, 1.0+power);\n\n    // Output to screen\n    fragColor = (uv.x > 0.05)? image: vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}