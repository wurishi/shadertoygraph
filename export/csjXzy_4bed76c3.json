{"ver":"0.1","info":{"id":"csjXzy","date":"1670551787","viewed":191,"name":"Bubble Hell","username":"ChunderFPV","description":"Key 'A\" toggles anti-aliasing (on by default).  Mouse rotates.","likes":20,"published":1,"flags":16,"usePreview":0,"tags":["raymarch","spheres","aa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define M iMouse\n#define KT(i) texelFetch(iChannel0, ivec2(i, 2), 0).x > 0.0\n#define HUE(a) (sin(vec3(0, 1.047, 2.094)+vec3(a*6.3))*.5+.5)\nmat2 rot(float a) { float c = cos(a), s = sin(a); return mat2(c, s, -s, c); }\nvoid mainImage( out vec4 RGBA, in vec2 XY )\n{\n    float t = iTime/8.;\n    vec2 m = (M.xy/R*4.)-2.; // mouse coords\n    vec3 bg = vec3(0); // background\n    vec3 ro = vec3(vec2(.5), t); // camera (ray origin)\n    if (M.z < 1.) m = vec2(cos(t)*.5+.4, cos(t*1.57)*.15+.2); // rotate with time\n    float aa = KT(65) ? 1.: 2.; // key toggle A\n    for (float j = 0.; j < aa; j++)\n    for (float k = 0.; k < aa; k++)\n    {\n        vec2 o = vec2(j, k)/aa; // offset\n        vec2 uv = (XY-.5*R+o)/R.y; // 2d coords\n        vec3 rd = normalize(vec3(uv, 1)); // 3d uv (ray direction)\n        rd.yz *= rot(m.y*1.57); // pitch\n        rd.xz *= rot(m.x*1.57); // yaw\n        float d = 0.; // step dist for raymarch\n        for (int i = 0; i < 100; i++)\n        {\n            vec3 p = ro+rd*d;\n            p.xz += round(p.y)*t; // move cells\n            float s = smoothstep(.2, .25, length(p-round(p))); // sphere grid\n            if (s < 0.001) break;\n            d += s;\n        }\n        vec3 c = vec3(0);\n        c += d*.013; // objects\n        c += vec3(.9, .5, .2)-min(length(rd.xy), length(rd.yz)); // firey glow\n        c.b += sin(length(rd.xy)*6.3)*.5; // blue tint\n        c.rb += sin(length(rd.yz)*6.3)*.1; // magenta tint\n        c = max(c, .5-HUE(d)); // rainbow fringe\n        bg += c; // add to bg\n    }\n    bg /= aa*aa;\n    bg *= sqrt(bg)*.5; // contrast\n    RGBA = vec4(bg, 1.);\n}","name":"Image","description":"","type":"image"}]}