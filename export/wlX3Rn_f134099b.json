{"ver":"0.1","info":{"id":"wlX3Rn","date":"1555450993","viewed":216,"name":"GPU hacks #03 - ARB Assembly","username":"PrzemyslawZaworski","description":"Simple framework (OpenGL ARB Assembly).","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nVersion for Windows (with red-blue pattern):\nCompile with Visual Studio from command line: cl filename.c opengl32.lib user32.lib gdi32.lib\nARB Assembly Language details: http://www.renderguild.com/gpuguide.pdf\nPaste own code inside FS\nExample renders red-blue screen for 1920x1080\n*/\n\n\n/*\n#include <windows.h>\n#include <GL/gl.h>\n#include <string.h>\n\ntypedef int(APIENTRY* PFNWGLSWAPINTERVALEXTPROC) (int i);\ntypedef void(APIENTRY* PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const void *string);\n \nstatic const char* FS = \\\n\t\"!!ARBfp1.0\\n\"\n\t\"TEMP R0, H0;\"\n\t\"MUL R0.x, fragment.position, {0.00052};\"\n\t\"SGE H0.x, {0.5}, R0;\"\n\t\"MAD result.color, H0.x, {1,0,-1,0}, {0,0,1,1};\"\n\t\"END\";\n\nint main()\n{\n\tShowCursor(0);\n\tPIXELFORMATDESCRIPTOR pfd = { 0,0,PFD_DOUBLEBUFFER };\n\tHDC hdc = GetDC(CreateWindow(\"static\", 0, WS_POPUP|WS_VISIBLE|WS_MAXIMIZE, 0, 0, 0, 0, 0, 0, 0, 0));\n\tSetPixelFormat(hdc, ChoosePixelFormat(hdc, &pfd), &pfd);\n\twglMakeCurrent(hdc, wglCreateContext(hdc));\n\tglEnable(0x8804);\n\t((PFNWGLSWAPINTERVALEXTPROC)wglGetProcAddress(\"wglSwapIntervalEXT\")) (0);\t\n\t((PFNGLPROGRAMSTRINGARBPROC)wglGetProcAddress(\"glProgramStringARB\")) (0x8804, 0x8875, strlen(FS), FS);\n\tdo\n\t{\n\t\tglRects(-1, -1, 1, 1);\n\t\twglSwapLayerBuffers(hdc, WGL_SWAP_MAIN_PLANE);\n\t} while (!GetAsyncKeyState(VK_ESCAPE));\n\treturn 0;\n}\n*/\n\n\n//-----------------------------------------------------------------------------------------------------------------------\n\n\n/*\nVersion for Linux (with green-blue pattern):\ngcc greenblue.c -lX11 -lGL -o greenblue\n./greenblue\nTested in Lubuntu 19\n*/\n\n/*\n#include <X11/X.h>\n#include <sys/time.h>\n#define GL_GLEXT_PROTOTYPES 1\n#include <GL/gl.h>\n#include <GL/glx.h>\n#include <string.h>\n\nstatic const char* FS = \\\n\t\"!!ARBfp1.0\\n\"\n\t\"PARAM time = program.env[0];\"\n\t\"TEMP R0, R1, R2, H0;\"\n\t\"SIN R1.x, time.x;\"\n\t\"MAD R2.x, R1.x, {0.5}.x, {0.5}.x;\"\n\t\"MUL R0.x, fragment.position, {0.00078};\"\n\t\"SGE H0.x, R2.x, R0;\"\n\t\"MAD result.color, H0.x, {0,.5,-1,0}, {0,0,1,1};\"\n\t\"END\";\n\nstatic long GetTickCount( void )\n{\n\tstruct timeval now, res;\n\tgettimeofday(&now, 0);\n\treturn (long)((now.tv_sec*1000) + (now.tv_usec/1000));\n}\n\nint main( void )\n{\n\tDisplay *hDisplay = XOpenDisplay( NULL );\n\tint buffer[]  = { GLX_RGBA, GLX_DEPTH_SIZE, 24, GLX_DOUBLEBUFFER, None };\n\tXVisualInfo *info = glXChooseVisual( hDisplay, DefaultScreen(hDisplay), buffer);\n\tXSetWindowAttributes winAttr;\n\twinAttr.override_redirect = 1;\n\twinAttr.colormap = XCreateColormap( hDisplay, RootWindow(hDisplay, info->screen), info->visual, AllocNone );\n\tWindow hWnd = XCreateWindow( hDisplay, RootWindow(hDisplay, info->screen), 0, 0, 1280, 720, 0, info->depth, InputOutput, info->visual, CWColormap|CWOverrideRedirect, &winAttr);\n\tXMapRaised(hDisplay, hWnd);\n\tXGrabKeyboard(hDisplay, hWnd, 1, GrabModeAsync, GrabModeAsync, CurrentTime);\n\tglXMakeCurrent( hDisplay, hWnd, glXCreateContext(hDisplay, info, NULL, 1) );\n\tglEnable(GL_FRAGMENT_PROGRAM_ARB);\n\tglProgramStringARB (GL_FRAGMENT_PROGRAM_ARB, GL_PROGRAM_FORMAT_ASCII_ARB, strlen(FS), FS);\n\tXEvent event;\n\tlong s = GetTickCount();\n\twhile( !XCheckTypedEvent(hDisplay, KeyPress, &event) )\n\t{    \n\t\tGLfloat t = (GetTickCount()-s) * 0.001f;\n\t\tglProgramEnvParameter4fvARB(GL_FRAGMENT_PROGRAM_ARB, 0, &t);   \n\t\tglRects( -1, -1, 1, 1 );\n\t\tglXSwapBuffers( hDisplay, hWnd );\n\t}\n\treturn 0;\n}\n\n*/\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if (uv.x > 0.5)\n    \tfragColor = vec4(0.0,0.0,1.0,1.0);\n    else\n        fragColor = vec4(1.0,0.0,0.0,1.0);\n}","name":"Image","description":"","type":"image"}]}