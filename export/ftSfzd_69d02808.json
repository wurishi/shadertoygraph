{"ver":"0.1","info":{"id":"ftSfzd","date":"1652577944","viewed":55,"name":"Expansive Tunnel","username":"creikey","description":"Use mouse to change zoom center","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mouse","zoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 hashwithoutsine32(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    //vec3 col = vec3(hash12((uv.xy + vec2(4.0)) * (1.0 / length(fragCoord - iMouse.xy)) + vec2(abs(sin(iTime/4.0)*0.5))));\n    vec2 toMouse = iMouse.xy - fragCoord;\n    float angle = atan(toMouse.y / toMouse.x);\n    //vec3 col = vec3(hash12((uv.xy + vec2(4.0)) * (1.0 / (length(toMouse) * 5.0)) + vec2(log(iTime) * 1.0 + sin(angle*sin(iTime/4.0)*10.0 + iTime)*0.002)));\n    vec3 col = hashwithoutsine32((uv.xy + vec2(4.0)) * (1.0 / (length(toMouse) * 5.0)) + vec2(log(iTime) * 1.0 + sin(angle*sin(iTime/4.0)*10.0 + iTime)*0.002));\n\n    \n\n    //col = vec3(1.0/length(fragCoord - iMouse.xy) * 10.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}