{"ver":"0.1","info":{"id":"tldyzS","date":"1609449435","viewed":123,"name":"Soundcloud Image","username":"Jinkweiq","description":"I HIGHLY suggest muting this shader. Tis draws an image stored in an audio file. The shader needs to run at at least 60 fps to not have black dots in the the image. Whole thing takes about 26 mins","likes":5,"published":1,"flags":96,"usePreview":0,"tags":["image"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// by jinkweiq\n// original image is https://nealysonwheels.files.wordpress.com/2018/02/d610484-edit.jpg?w=256&h=256&crop=1\n// the audio is at https://soundcloud.com/ethan-lowenthal-866872725/soundcloud-image3\n// sometimes you need to put it in manually\n// you might need to restart the shader to get the audio to play\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y = 1.-uv.y;\n\tfragColor = texture(iChannel0, uv);\n    fragColor*=vec4(255./267.,255./220.,255./181.,1.); // color correction\n    fragColor*=fragColor*fragColor*fragColor*fragColor*fragColor; // increase saturation\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"llfXR4","filepath":"https://soundcloud.com/ethan-lowenthal-866872725/soundcloud-image3","previewfilepath":"https://soundcloud.com/ethan-lowenthal-866872725/soundcloud-image3","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col;\n    float size = 256.;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv*=size;\n    float per = 23.*50./48000.;\n    ivec2 p = ivec2(mod(iTime/per, size), iTime/per/size);\n    if(abs(int(uv.x)-p.x) < 1 && abs(int(uv.y)-p.y) < 1) {\n    \tcol = vec3(\n        texelFetch( iChannel0, ivec2(21,0), 0 ).x\n        ,texelFetch( iChannel0, ivec2(216,0), 0 ).x\n        ,texelFetch( iChannel0, ivec2(433,0), 0 ).x\n        );\n    } else {\n        col = texelFetch(iChannel1, ivec2(fragCoord.x,fragCoord.y), 0).xyz;\n    }\n\n\tfragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}