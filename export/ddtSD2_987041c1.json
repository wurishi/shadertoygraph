{"ver":"0.1","info":{"id":"ddtSD2","date":"1682889320","viewed":30,"name":"No11_BlueCircle","username":"Luking","description":"shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//No11_BlueCircle\nfloat sdfCircle(vec2 uv, float r, vec2 offset) {\n  //float x = uv.x - offset.x;\n  //float y = uv.y - offset.y;\n\n  //return length(vec2(x, y)) - r;\n  \n  return length( uv-offset ) - r;\n}\n\nvec3 drawScene(vec2 uv) {\n  vec3 col = vec3(1);\n  float circle = sdfCircle(uv, 0.1, vec2(0, 0));\n  \n  col = mix(vec3(0, 0, 1), col, step(0., circle));\n  \n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  //vec2 uv = fragCoord/iResolution.xy; // <0, 1>\n  //uv -= 0.5; // <-0.5,0.5>\n  //uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n  \n  vec2 uv = ( fragCoord - .5* iResolution.xy ) /iResolution.y; \n\n  vec3 col = drawScene(uv);\n\n  // Output to screen\n  fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}