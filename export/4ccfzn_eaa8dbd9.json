{"ver":"0.1","info":{"id":"4ccfzn","date":"1732830589","viewed":73,"name":"Hypotrochoid Tower","username":"GarlicGraphix","description":"Works better if you turn the screen sideways. Kinda Silly.","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["curves","hypotrochoid"],"hasliked":0,"parentid":"McVcDd","parentname":"Lissajous Figurettes"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Get pixel colour from iChannel0\n    vec3 col = texture(iChannel0, uv).rgb + random(uv+fract(iTime))*0.1;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159\n\nfloat lineSegment( vec2 a, vec2 b, vec2 p, float w ) {\n    vec2 ba = b - a;\n    vec2 pa = p - a;\n\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    vec2 cp = a + h * ba;\n\n    float d = length(p - cp);\n\n    return 1.-smoothstep(0., w, d);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 tuv = fragCoord/iResolution.xy;\n    tuv.x -= 100.5;\n    tuv *= 1.000008;\n    tuv.x += 100.5;\n    \n    \n    \n    vec2 t = ceil(uv);\n    uv.y -= 0.5;\n    uv.x -= 0.5;\n    \n    \n    vec3 col = vec3(0.0);\n    bool used = false;\n    for (int i = 0; i < 25; i++) {\n        float R = 50.3;\n        float r = 22.2;\n        float d = 50.;\n        \n        float m = (abs(R - r) + d)/(float(i)*0.02);\n\n        \n        R /= m;\n        r /= m;\n        d /= m;\n\n        vec2 curvePoint;\n        float speed = 3.;\n        float time = iTime*speed- (float(i)*0.5);\n        curvePoint.x = (R - r) * cos(time) + d * cos((R - r)/r * time);\n        curvePoint.y = (R - r) * sin(time) - d * sin((R - r)/r * time);\n\n        vec2 prevCurvePoint;\n        float prevTime = time - iTimeDelta*speed;\n        prevCurvePoint.x = (R - r) * cos(prevTime) + d * cos((R - r)/r * prevTime);\n        prevCurvePoint.y = (R - r) * sin(prevTime) - d * sin((R - r)/r * prevTime);\n        float l = lineSegment( curvePoint, prevCurvePoint, uv, 0.01 + float(i)*0.0005);\n        vec3 texColour = texture(iChannel0, tuv).rgb * vec3(0.999, 0.998, 0.998);\n        vec3 newColour = 0.5 + 0.5 * cos(iTime + vec3(0.0, 2.0, 4.0) + float(i));\n        if (l > 0.) {\n            col = mix(texColour, newColour, l);\n            used = true;\n        } else if (!used){\n            col = texColour;\n        }\n    }\n    \n    col = clamp(col, 0., 1.);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n","name":"Common","description":"","type":"common"}]}