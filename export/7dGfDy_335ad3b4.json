{"ver":"0.1","info":{"id":"7dGfDy","date":"1658788236","viewed":266,"name":"Infinite roguelike dungeon","username":"jarble","description":"An infinite roguelike dungeon map.","likes":8,"published":3,"flags":8,"usePreview":0,"tags":["maze","dungeon","labyrinth","roguelike"],"hasliked":0,"parentid":"NdyfDy","parentname":"Simple labyrinth"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float threshold = .5;\nint iters = 4;\n\n#define noise2D(p) float((p.x * 68657387u ^ p.y * 361524851u + p.x) % 890129u) / 890128.\n\nbool labyrinth(uvec2 U,float n2){\n    bvec2 b = bvec2(U & 1u);\n    return (b.x && b.y || b.x != b.y  && n2 < threshold);\n}\n\nvoid mainImage(out vec4 O, vec2 U) {\n    uvec2 I = uvec2( U/8.+ iTime*8.);\n    O = vec4(1);\n    bool b = false,l1=false;\n    for(int i = 0; i++ < iters;I =\n    I*2u/3u\n    //I*13u/17u\n    ){\n        //I += uvec2(i%2);\n        //I += uint(i/2);\n        I += 1u; //another interesting pattern\n        float n =\n            noise2D(I)\n            //more dungeon patterns\n            //noise2D((I/3u)+(I/2u))\n            //noise2D((I/uint(1+i)))\n        ;\n        l1=labyrinth(I,n),\n        b =\n            !b || l1\n            //!b || labyrinth(I,n)||labyrinth(I/3u,n)\n            //!b || l1 || n > (8.*abs(.5-fract(iTime/16.))-.5)\n            //!(b || l1)\n            //!b && l1\n        ;\n        O -= float(n > .125)/float(iters)/4.;\n        \n        //some random-looking distortion (using prime numbers)\n        //I += I.yx/(31u)-I.yx/(29u)+I.yx/(23u);\n    }\n    if (b) O = 1.-O;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n#define fmod(x,y) floor(max(mod(floor(-(x))*3.,y),mod(floor(x)*4.,y)))\n\nvec2 mainSound1(int samp, float time){\n  \n  float s1 =\n      4.,\n\n  s2 = 6.,\n\n  m1 =\n      fmod(time/s1+s1,s2)\n      //fmod(time/s1+float(samp)+s1,s2)\n  ,\n  t=\n      time\n  ,\n  m4 =\n      fmod(t+s1,s2)\n  ,\n  m3 =\n      fmod((t+m4)*s1/(m1+.5),s2);\n\n  /*\n  for(int i = 0; i < 3; i++){\n      t *= pow(2.,fmod(t/2.,2.)-1.);\n      m3 = fmod(t*s1-m3,s2);\n  }\n  */\n\n  t *=\n      s1*s1/pow(2.,fmod(t/s1,3.)-1.)\n  ;\n\n  float m2 =\n      1. + fmod(t/s1,s1);\n  ;\n  \n  float a=\n      64./4.*pow((1.-sqrt(fract(t/s1)))/4.,2.)\n  ;\n  \n  \n  float nb = 4.*time*pow(2.,(m3+m2)/5.+6.5)/pow(2.,fmod(t/s1,3.)-1.);\n\n  return\n      (abs(.5-vec2(fract(nb*.998),fract(nb*2.))))*a\n  ;\n\n}\n\nvec2 mainSound(int a,float b){\n    return\n        mainSound1(a,b)\n        //mainSound1(a,b)*abs(1.-mainSound1(a,-b*2.))\n        //vec2(mainSound1(a,b/2.).x,mainSound1(a,b).y/8.)\n    ;\n}","name":"Sound","description":"","type":"sound"}]}