{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// constants for the camera tunnel\r\nconst vec2 cama=vec2(-2.6943,3.0483);\r\nconst vec2 camb=vec2(0.2516,0.1749);\r\nconst vec2 camc=vec2(-3.7902,2.4478);\r\nconst vec2 camd=vec2(0.0865,-0.1664);\r\n\r\nconst vec2 lighta=vec2(1.4301,4.0985);\r\nconst vec2 lightb=vec2(-0.1276,0.2347);\r\nconst vec2 lightc=vec2(-2.2655,1.5066);\r\nconst vec2 lightd=vec2(-0.1284,0.0731);\r\n\r\n// calculates the position of a single tunnel\r\nvec2 Position(float z, vec2 a, vec2 b, vec2 c, vec2 d)\r\n{\r\n\treturn sin(z*a)*b+cos(z*c)*d;\r\n}\r\n\r\n// calculates 3D positon of a tunnel for a given time\r\nvec3 Position3D(float time, vec2 a, vec2 b, vec2 c, vec2 d)\r\n{\r\n\treturn vec3(Position(time,a,b,c,d),time);\r\n}\r\n\r\n// 2d distance field for a slice of a single tunnel\r\nfloat Distance(vec3 p, vec2 a, vec2 b, vec2 c, vec2 d, vec2 e, float r)\r\n{\r\n\tvec2 pos=Position(p.z,a,b,c,d);\t\r\n\tfloat radius=max(5.0,r+sin(p.z*e.x)*e.y)/10000.0;\r\n\treturn radius/dot(p.xy-pos,p.xy-pos);\r\n}\r\n\r\n// 2d distance field for a slice of the tunnel network\r\nfloat Dist2D(vec3 pos)\r\n{\r\n\tfloat d=0.0;\r\n\t\r\n\td+=Distance(pos,cama,camb,camc,camd,vec2(2.1913,15.4634),70.0000);\r\n\td+=Distance(pos,lighta,lightb,lightc,lightd,vec2(0.3814,12.7206),17.0590);\r\n\td+=Distance(pos,vec2(2.7377,-1.2462),vec2(-0.1914,-0.2339),vec2(-1.3698,-0.6855),vec2(0.1049,-0.1347),vec2(-1.1157,13.6200),27.3718);\r\n\td+=Distance(pos,vec2(-2.3815,0.2382),vec2(-0.1528,-0.1475),vec2(0.9996,-2.1459),vec2(-0.0566,-0.0854),vec2(0.3287,12.1713),21.8130);\r\n\td+=Distance(pos,vec2(-2.7424,4.8901),vec2(-0.1257,0.2561),vec2(-0.4138,2.6706),vec2(-0.1355,0.1648),vec2(2.8162,14.8847),32.2235);\r\n\td+=Distance(pos,vec2(-2.2158,4.5260),vec2(0.2834,0.2319),vec2(4.2578,-2.5997),vec2(-0.0391,-0.2070),vec2(2.2086,13.0546),30.9920);\r\n\td+=Distance(pos,vec2(0.9824,4.4131),vec2(0.2281,-0.2955),vec2(-0.6033,0.4780),vec2(-0.1544,0.1360),vec2(3.2020,12.2138),29.1169);\r\n\td+=Distance(pos,vec2(1.2733,-2.4752),vec2(-0.2821,-0.1180),vec2(3.4862,-0.7046),vec2(0.0224,0.2024),vec2(-2.2714,9.7317),6.3008);\r\n\td+=Distance(pos,vec2(2.6860,2.3608),vec2(-0.1486,0.2376),vec2(2.0568,1.5440),vec2(0.0367,0.1594),vec2(-2.0396,10.2225),25.5348);\r\n\td+=Distance(pos,vec2(0.5009,0.9612),vec2(0.1818,-0.1669),vec2(0.0698,-2.0880),vec2(0.1424,0.1063),vec2(1.7980,11.2733),35.7880);\r\n\t\r\n\treturn d;\r\n}\r\n\r\nvec3 nmap(vec2 t, sampler2D tx, float str)\r\n{\r\n\tfloat d=1.0/1024.0;\r\n\r\n\tfloat xy=texture(tx,t).x;\r\n\tfloat x2=texture(tx,t+vec2(d,0)).x;\r\n\tfloat y2=texture(tx,t+vec2(0,d)).x;\r\n\t\r\n\tfloat s=(1.0-str)*1.2;\r\n\ts*=s;\r\n\ts*=s;\r\n\t\r\n\treturn normalize(vec3(x2-xy,y2-xy,s/8.0));///2.0+0.5;\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\tfloat time=iTime/3.0+291.0;//+43.63/3.0;\r\n\r\n\t//calculate camera by looking ahead in the tunnel\r\n\t\r\n\tvec2 p1=Position(time+0.05,cama,camb,camc,camd); //position ahead\r\n\tvec3 Pos=Position3D(time,cama,camb,camc,camd); //current position\r\n\tvec3 oPos=Pos;\r\n\t\r\n\tvec3 CamDir=normalize(vec3(p1.x-Pos.x,-p1.y+Pos.y,0.1));\r\n\tvec3 CamRight=normalize(cross(CamDir,vec3(0,1,0)));\r\n\tvec3 CamUp=normalize(cross(CamRight,CamDir));\t\r\n\tmat3 cam=mat3(CamRight,CamUp,CamDir);\r\n\r\n\t//ray calculation\t\r\n\tvec2 uv=2.0*fragCoord.xy/iResolution.xy-1.0;\r\n\tfloat aspect=iResolution.x/iResolution.y;\r\n\t\r\n\tvec3 Dir=normalize(vec3(uv*vec2(aspect,1.0),1.0))*cam;\r\n\t\r\n\t//raymarching\r\n\tfloat fade=0.0;\r\n\t\r\n\tconst float numit=75.0; //raymarch precision\r\n\tconst float threshold=1.20; //defines the thickness of tunnels\r\n\tconst float scale=1.5; //tunnel z depth\r\n\t\r\n\tvec3 Posm1=Pos;\r\n\t\r\n\t//calculate first hit\r\n\tfor (float x=0.0; x<numit; x++)\r\n\t{\r\n\t\tif (Dist2D(Pos)<threshold)\r\n\t\t{\r\n\t\t\tfade=1.0-x/numit;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tPosm1=Pos;\r\n\t\tPos+=Dir/numit*scale;//*(1.0+x/numit);\r\n\t}\r\n\r\n\t//track back to get better resolution\r\n\tfor (int x=0; x<6; x++)\r\n\t{\r\n\t\tvec3 p2=(Posm1+Pos)/2.0;\r\n\t\tif (Dist2D(p2)<threshold) \r\n\t\t\tPos=p2;\r\n\t\telse\r\n\t\t\tPosm1=p2;\r\n\t}\t\r\n\r\n\t//lighting\t\r\n\tvec3 n=normalize(vec3(Dist2D(Pos+vec3(0.01,0,0))-Dist2D(Pos+vec3(-0.01,0,0)),\r\n\t\t\t\t\t\t  Dist2D(Pos+vec3(0,0.01,0))-Dist2D(Pos+vec3(0,-0.01,0)),\r\n\t\t\t\t\t\t  Dist2D(Pos+vec3(0,0,0.01))-Dist2D(Pos+vec3(0,0,-0.01))));\r\n\t\r\n\t//triplanar blend vector\r\n\tvec3 tpn=normalize(max(vec3(0.0),(abs(n.xyz)-vec3(0.2))*7.0))*0.5;\r\n\t\r\n\t//position of the light - uncomment the second line to get a more interesting path\r\n\tvec3 lp=Position3D(time+0.5,cama,camb,camc,camd); //current light position\r\n\t//lp=Position3D(time+0.3,lighta,lightb,lightc,lightd);\r\n\t\r\n\tvec3 ld=lp-Pos;\t//light direction\r\n\tfloat lv=1.0;\r\n\t\r\n\tconst float ShadowIT=15.0; //shadow precision\r\n\t\r\n\t//shadow calc\r\n\tfor (float x=1.0; x<ShadowIT; x++)\r\n\t\tif (Dist2D(Pos+ld*(x/ShadowIT))<threshold) \r\n\t\t{\r\n\t\t\tlv=0.0;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\tvec3 tuv=Pos*vec3(3.0,3.0,1.5);\t//texture coordinates\r\n\t\r\n\t//normal mapping\r\n\tfloat nms=0.19;\r\n\tvec3 nmx=nmap(tuv.yz,iChannel0,nms)+nmap(-tuv.yz,iChannel0,nms);\r\n\tvec3 nmy=nmap(tuv.xz,iChannel1,nms)+nmap(-tuv.xz,iChannel1,nms);\r\n\tvec3 nmz=nmap(tuv.xy,iChannel2,nms)+nmap(-tuv.xy,iChannel2,nms);\r\n\t\r\n\tvec3 nn=normalize(nmx*tpn.x+nmy*tpn.y+nmz*tpn.z);\r\n\t\r\n\tfloat dd;\r\n\t//normalmapped version:\r\n\tdd=max(0.0,dot(nn,normalize(ld*mat3(vec3(1,0,0),vec3(0,0,1),n))));\r\n\t//standard version:\r\n\t//dd=max(0.0,dot(n,normalize(ld)));\r\n\t\r\n\tvec4 diff=vec4(dd*1.2*lv)+vec4(0.2);\r\n\r\n\t//wisp\r\n\tfloat w=pow(dot(normalize(Pos-oPos),normalize(lp-oPos)),5000.0);\r\n\tif (length(Pos-oPos)<length(lp-oPos)) w=0.0;\t\r\n\r\n\t//texturing\r\n\t//double sampling to fix seams on texture edges\r\n\tvec4 tx=texture(iChannel0,tuv.yz)+texture(iChannel0,-tuv.yz);\r\n\tvec4 ty=texture(iChannel1,tuv.xz)+texture(iChannel1,-tuv.xz);\r\n\tvec4 tz=texture(iChannel2,tuv.xy)+texture(iChannel2,-tuv.xy);\r\n\t\r\n\tvec4 col=tx*tpn.x+ty*tpn.y+tz*tpn.z;\r\n\t\r\n\tfragColor = col*diff*min(1.0,fade*10.0)+w;\r\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsX3RH","date":"1362329254","viewed":9757,"name":"The Cave","username":"BoyC","description":"Hello Shadertoy :)","likes":161,"published":1,"flags":0,"usePreview":0,"tags":["3d","tunnel","raymarch","shadow","triplanar","normalmap"],"hasliked":0,"parentid":"","parentname":""}}