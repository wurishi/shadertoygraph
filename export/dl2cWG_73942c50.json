{"ver":"0.1","info":{"id":"dl2cWG","date":"1692241799","viewed":20,"name":"Circle implementation","username":"Sara01","description":"a circle function implementation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","function"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, float radius, float smoothness, vec2 pos) {\n    uv += pos;\n    float lengthInv = 1.0 - length(uv) * radius;\n    float circle = lengthInv * radius;\n    float smoothFactor = smoothstep(0.0, max(0.0, smoothness), circle);\n    return smoothFactor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n\n    vec3 color = vec3(circle(uv,2.448, 1, vec2(-0.410,-0.450)));\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}