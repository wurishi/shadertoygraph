{"ver":"0.1","info":{"id":"4ct3Rl","date":"1712021036","viewed":26,"name":"Shader 2: Collapsing Circle","username":"roman","description":"Collapsing Circle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    float distance = length(uv);\n\n    float collapse = sin(distance * 8.0 + iTime * 2.0) / 8.0;\n\n    float smoothDist = smoothstep(0.0, 0.1, abs(collapse) * 0.5);\n\n    float isInsideCircle = smoothDist < 0.5 ? 1.0 : 0.0;\n\n    vec3 background = mix(vec3(0.0, 1.0, 1.0),vec3(1.0, 1.0, 0.0), uv.x);\n\n    vec3 col = mix(vec3(0.0), background, isInsideCircle);\n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}