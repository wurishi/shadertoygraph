{"ver":"0.1","info":{"id":"DtlBzn","date":"1692541812","viewed":118,"name":"Cairo Wheel(sound)","username":"grom12345","description":"Based on @BigWings YT video: https://www.youtube.com/watch?v=51LwM2R_e_o\n\nForked from this shader: https://www.shadertoy.com/view/DdVGR1\n\n\n","likes":5,"published":1,"flags":8,"usePreview":0,"tags":["procedural","sound","tiles","cairo"],"hasliked":0,"parentid":"dlffRn","parentname":"Cairo grom12345 975"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N(float angle) {\n\n   return vec2(sin(angle), cos(angle));\n}\nmat2 Rot(float a){\n    vec2 sc = N(a);\n    return mat2(sc.y, -sc.x, sc.x, sc.y);\n}\nvec3 Hash23(vec2 p) {\n    p = fract(p*vec2(16133.2341251, 791.43971));\n    p += dot(p, p+82171.11321712);\n    return abs(vec3(fract(p.x+p.y), fract(p.y-p.x), fract(p.y)));\n}\n\nvec3 Cairo(vec2 uv, float angle) {\n    vec2 id = floor(uv);\n    float check = mod(id.x+id.y, 2.0);\n    uv = fract(uv)-0.5;\n    vec2 p = abs(uv);\n    if(check == 1.0) p = p.yx;\n    \n    float a = (angle*0.5 + 0.5)*3.1315;\n    vec2 n = vec2(sin(a), cos(a));\n    float d = dot(p-0.5, n);\n    \n    if(d*(check-0.5) < 0.0)\n        id.x += sign(uv.x)*0.5;\n    else\n        id.y += sign(uv.y)*0.5;\n        \n    d = min(d, p.x);\n    d = max(d, -p.y);\n    d = abs(d);\n    d = min(d, dot(p-0.5, vec2(n.y, -n.x)));\n\n    return vec3(id, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    vec3 col = vec3(0);\n    \n    float t = iTime*0.5;\n    float tt = iTime*4.;\n    \n    float fade1 = (1.-pow(fract(t/2.), 0.3));\n    float fade2 = (1.-pow(fract(tt), 0.3));\n    float fade3 = (1.-pow(fract(t*2.), .8));\n    \n    vec2 s = -1.+floor(2.*Hash23(vec2(floor(tt))).xy)+vec2(.0, .5);\n    vec2 s1 = -1.+floor(1.*Hash23(vec2(floor(tt)+1.)).xy)+vec2(.0, .5);\n    \n    float e = 0.01;\n    float mask = length(uv*4.);//-.3*(s.xy+vec2(.5,0.)));\n    float mask1 = length(uv*4.);//-.3*(s1.xy+vec2(.5,0.)));\n    \n    float step = floor(t)+pow(fract(t), .5);\n    float si = sign(0.5-mod(floor(t),2.));\n    float a = 0.5+0.5*cos(1.62*(si*fade3*4.));\n    float ang = pow(fract(t/2.), 10.);\n    uv*=fade1*5.+0.;\n    uv *= Rot((ang*200.+fade1)*1.62);\n   // uv *= 1.+.95*sin(3.14155*(step-.5));;//*( pow(length(uv),2.)+0.5);//+mouse.y*3.0;\n    uv *= 5.-0.5*pow(mix(mask, mask1, fract(iTime)),3.5);\n   //uv += iTime*0.1;\n    \n    vec3 c = Cairo(uv/**(pow(mask, .5)+1.)*/, a);\n    //vec3 selected = vec3((c.x+2.)/4., (c.y+2.)/4., 0.);\n    float selected = float(c.x <= s.x+e&&c.x>s.x-e) * float(c.y <= s.y+e&&c.y>s.y-e);\n    vec3 tile_color = 0.5 + 0.5*sin(Hash23(c.xy)*6.2831+step);\n    float line_color = smoothstep(0.01, 0.0, c.z-0.05);\n    float gradient_color = c.z*c.z;\n    \n     col += (1.-mask)*fade1;\n    \n    col += tile_color;//*0.5;\n    if(mod(floor(t*0.5), 2.)==0.)\n      col *= line_color;//col += selected*fade*1.5;\n    float play = fract(t*0.5)>0.1&&fract(t*0.5)<0.41?1.:0.;\n     \n    col += smoothstep(1.5, 0., mask)*(2.*pow(fade1,3.)+fade2*play);\n    \n    col += 3.*selected*fade2*play;\n    col *= 1.-gradient_color;\n    col *= (.7+1.*fade1+ang*2.)*max(0.,1.- pow(mask/(1.95-ang*2.), 50.)*1.5);\n    col = max(vec3(0), col);\n    col += max(0., pow(mask/(2.0), 50.))*fade1*5.*ang;//*vec3(1., 1.3,1.6);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 Hash23(vec2 p) {\n    p = fract(p*vec2(16133.2341251, 791.43971));\n    p += dot(p, p+82171.11321712);\n    return abs(vec3(fract(p.x+p.y), fract(p.y-p.x), fract(p.y)));\n}\nvec2 mainSound( in int samp, float time )\n{\n\n    float t = mod(time/2., 2.);\n    float tt = time*4.;\n    time = mod(t/2., 1.);\n    \n    float fade1 = (1.-pow(fract(t/2.), 0.3));\n    float fade2 = (1.-pow(fract(tt), 0.5));\n    \n    float ang = pow(fract(t/2.), 10.);\n    \n    float play = fract(t*0.5)>0.1&&fract(t*0.5)<0.41?1.:0.;\n    \n    vec2 sl = -1.+floor(2.*Hash23(vec2(floor(tt))).xy)+vec2(.0, .5);\n     \n    float s = 0., p;\n    \n    for (float i=0.; i<4.; i++)\n        p = exp2(2.*i/12.),\n        s += sin(6.2831*440.*(1.-fade1)*(sl.x+sl.y*4.)*4.*p*time) *exp(-6.*time/p) / p;\n    \n    \n    float bs = 0.;\n    \n    for (float i=0.; i<4.; i++)\n        p = exp2(2.*i/12.),\n        bs += sin(6.2831*440.*4.*p*time) *exp(-6.*time/p) / p;\n    \n    bs = bs*0.4*fade1;\n    s = s*0.4*play*fade2;\n    \n    float o = sin(t*ang*440.)*ang;\n    o *= smoothstep(.9,0.89,ang);\n  \n    o = min(1.0, pow(o, 1.*(ang+1.)));\n    o *= .05;\n    \n     return vec2( pow(bs, 2.) + s + o);\n}","name":"Sound","description":"","type":"sound"}]}