{"ver":"0.1","info":{"id":"MdjBWy","date":"1502100190","viewed":217,"name":"Malaysia","username":"gsynuh","description":"using http://pixelspiritdeck.com/ by Patricio Gonzales Vivo\nmy childhood/teenage country I wish to get back to","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","flag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// SDFs and fill function from http://pixelspiritdeck.com/ \n// simplifications and AA suggested by FabriceNeyret2 in the comments\n// noise from https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\n\n#define TAU 6.28318530718\n#define PI 3.14159265359\n#define HALF_PI 1.57079632679\n\nfloat starSDF(vec2 st, int V, float s) {\n\tst = st*4.-2.;\n    float a0 = atan(st.y,st.x),\n         seg = a0 * float(V)/TAU,\n           a = ((floor(seg) + 0.5) / float(V) + mix(s,-s,step(.5,fract(seg)))) * TAU;\n    return cos(a-a0)*length(st);\n}\n\nfloat rectSDF(vec2 st, vec2 s) {\n\tvec2 a = abs ( (st*2.-1.) / s);\n    return max(a.x,a.y);\n}\n\nfloat circleSDF(vec2 st) {\n\treturn length(st -.5)*2.;\n}\n\nfloat fill(float x, float size) {\n\treturn smoothstep(3./iResolution.y, 0., x-size);\n}\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\n\nfloat wavephase(float x) {\n    return noise(vec2(x + iTime*0.5))*4.3 + x*8. + iTime*6.223;\n}\n\nfloat wave(float x) {\n    return cos(wavephase(x))*x*x*0.5;\n}\n\nfloat waveS(float x) {\n    return sin(wavephase(x))*x*x*0.5;\n}\n\n\nfloat waveNoise(float x) {\n\treturn wave(x) - wave(0.);\n}\n\nfloat waveNoiseS(float x) {\n\treturn waveS(x) - waveS(0.);\n}\n\nvec3 yellow =  vec3(1.,0.8,0.);\nvec3 blue =  vec3(0.004,0.,0.4);\nvec3 red =  vec3(0.8,0.,0.004);\nvec3 black = vec3(0.);\nvec3 white = vec3(1.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy ) / iResolution.y;\n    \n    //note : malaysian flag ratio is 2:1\n    \n    uv *= 1.4;\n    uv += vec2(1.,0.5);\n    \n    //wavy flag\n    uv.y += waveNoise(-uv.x)*0.01;\n    \n    //a bit of noise\n    uv += noise(uv*2. + iTime*3.)*0.008;\n    \n    //color base\n    vec3 color = vec3(1.);\n    \n    //Crescent and star\n\n    vec2 starPos = (vec2(uv) + vec2(0.05,-0.21)) ;\n    float crescentC = fill(circleSDF(starPos),0.4);\n    crescentC -= fill(circleSDF(starPos - vec2(0.05,0.)),0.35);\n    crescentC = clamp(crescentC,0.,1.);\n    \n    starPos -= vec2(0.2,0.);\n    \n    float s = smoothstep(\n        starSDF(starPos.yx,14,.18),\n        starSDF(starPos.yx,14,.177),\n        0.14);\n    \n    crescentC += s;\n    \n    //stripes\n    float stripesC = clamp(-8.* sin( 6.27*uv.y*(14. * .5) ) , 0.,1.);\n    \n    //rect\n    vec2 rectSize = vec2(1.0,8.05/14.);\n    vec2 rectPos = uv + vec2(0.005,-3.005/14.0);\n    float rectC = fill(rectSDF(rectPos,rectSize),1.);\n    \n    //shadow\n    float shadowDistance = 0.06;\n    float shadowSmooth = 0.06;\n    float shadowC = smoothstep(1.,1.-shadowSmooth,rectSDF(\n        uv - vec2(0.5+shadowDistance,-shadowDistance),\n        vec2(2.,1.)));\n                      \n    \n    color = mix(color,red,stripesC);\n    color = mix(color,blue,rectC);\n    color = mix(color,yellow,crescentC);\n    \n    //highlight\n    color *= (1.-waveNoiseS(-uv.x))* 0.10 + 0.9;\n    \n    //mask\n    float maskC = fill(rectSDF(vec2(uv) - vec2(0.5,0.),vec2(2.,0.99)),1.);\n    color = mix(yellow,color,maskC);\n    \n    \n    float shadowOut = clamp(shadowC-maskC,0.,1.);\n    color = mix(color,black, shadowOut * 0.05);\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}