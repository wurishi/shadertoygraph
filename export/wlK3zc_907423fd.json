{"ver":"0.1","info":{"id":"wlK3zc","date":"1579549019","viewed":98,"name":"Dot screensaver","username":"sbrown2","description":"I got sidetracked working on a project, this is the result. Really simple, just a set of tiles with animated circles inside each tile. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","distancefunction","tile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dist(vec2 p, vec2 a, vec2 b){\n\tfloat h = clamp(dot(p-a,b-a)/dot((b-a),(b-a)),0.,1.);\n    return length((p-a)-(b-a)*h);\n    \n}\nfloat rand21(vec2 p){\n\treturn fract(sin(p.y*123.2)*231.4*fract(sin(p.x)*123.142)*123.24);\n\n}\nvec2 rand22(vec2 p){\n    float r1 = rand21(p);\n\treturn vec2(r1,rand21(vec2(r1,r1+32.)));\n}\n\nvec2 tile(vec2 uv, float amount){\n\treturn fract(uv*amount);\n}\n\nfloat circle(vec2 uv, vec2 center){\n\treturn length(uv-center)*1.75;\n}\nfloat GetPos(vec2 id, vec2 inneruv){\nfloat rx = clamp(rand21(id+123.2),.3,.7);\n    float ry = clamp(rand21(id*rx+134.23),.3,.7);\n    \n    float rmx = clamp(rand21(id+978.1),.1,.9);\n    \n    float rmy = clamp(rand21(id+542.8),.1,.9);\n    \n    //draw circle in each square\n    float d = circle(inneruv, vec2(rx,ry)+\n                     (cos(iTime*rmx)*.2*sin(iTime*rmy)));\n\treturn d;    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n //   uv-=.5;\n    uv.x*=iResolution.x/iResolution.y;\n\tvec3 lemon_chiffon = vec3(1.,.95,.9);\n    vec3 col = vec3(0.);\n    \n    vec2 inneruv = tile(uv,5.);\n    vec2 id = floor(uv*5.);\n    uv-=.5;\n\n    //get a random position\n    float d = GetPos(id,inneruv);\n    col+= smoothstep(.1,.09,d)\n                     *clamp(cos(iTime*.4),.4,7.); \n    \n    //color selection\n    if(length(id) < abs(10.*sin(iTime/2.))){\n        col*=vec3(.5+.3*cos(iTime),\n                  .5+.7*cos(iTime),\n                  .5+.5*cos(iTime));}\n    \n    //if(inneruv.x > .98 || inneruv.y > .98) col = vec3(1.);\n    // Output to screen\n\t//col = vec3(rx);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}