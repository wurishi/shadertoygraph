{"ver":"0.1","info":{"id":"ddlGRn","date":"1665583219","viewed":165,"name":"Wave Distortion Texture Gen","username":"Oneleven","description":"Mouse.x for switching between end result/normal view\nThe intended use is to tweak constants by hand and then export resulting texture to use in game engines for distortion shader\nSomething like https://mebiusbox.github.io/contents/EffectTextureMaker/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave","distortion","generator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\n//Wave\n#define PHASE -0.5\n#define FREQUENCY 9.0\n#define AMPLITUDE 1.0\n\n//MASK defined in amount of ripples \n#define MASK_START 3.0\n#define MASK_END 5.0\n#define MASK_FEATHER 0.0\nfloat mask(float start, float end, float feather, float value)\n{\n    return smoothstep(start, start + feather, value) * (1.0 - smoothstep(end - feather, end, value));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    \n    float value = length(uv);\n    float period = sin((value * FREQUENCY + PHASE) * PI);\n    float m = pow(mask(MASK_START, MASK_END, MASK_FEATHER, value * FREQUENCY - PHASE), 3.0); \n    vec2 distort = normalize(uv) * period * AMPLITUDE * m;\n\n    vec3 col;\n    \n    if (uv.x > (iMouse.x - 0.5 * iResolution.x) / iResolution.y)\n    {\n        //RG channels for normalized direction around 0.5\n        //Blue channel for intensity. Use it instead Alpha when exporting to game engines\n        vec2 v = normalize(distort);\n        col = vec3(v * 0.5 + 0.5, length(distort)); \n    }\n    else\n        col = texture(iChannel0, uv + distort + iTime*0.2).rgb;\n    \n    //Quick uncoment for debug\n    //col = vec3(m);\n    //col = period >= 0.0 ? vec3(period) * vec3(1., 0., 0.) * m : vec3(period * -1.) * vec3(0., 0., 1.) * m;\n    //col = vec3(distort, 0.0);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}