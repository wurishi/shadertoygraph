{"ver":"0.1","info":{"id":"wlyczh","date":"1610450356","viewed":156,"name":"GBC solver","username":"Reynolds","description":"Image space Laplacian generalized barycentric coordinate solver.","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["barycentric","harmonic","coordinate","gbc","generalizedbarycentriccoordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdSegment(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a, ba = b-a;\n    float A = dot(pa,ba)/dot(ba,ba);\n    float h = clamp( A, 0.0, 1.0 );\n\n    return length( pa - ba*h);\n}\n\nfloat sdScene(vec2 p) {\n\n    vec2 A = vec2(0.25, 0.25);\n    vec2 B = vec2(0.75, 0.25);\n    vec2 C = vec2(0.75, 0.75);\n    vec2 D = vec2(0.55, 0.75);\n    vec2 E = vec2(0.55, 0.45);\n    vec2 F = vec2(0.35, 0.45);\n    vec2 G = vec2(0.35, 0.75);\n    vec2 H = vec2(0.25, 0.75);\n\n    float d = sdSegment(p, A, B);\n    d = min(d, sdSegment(p, B, C));\n    d = min(d, sdSegment(p, C, D));\n    d = min(d, sdSegment(p, D, E));\n    d = min(d, sdSegment(p, E, F));\n    d = min(d, sdSegment(p, F, G));\n    d = min(d, sdSegment(p, G, H));\n    d = min(d, sdSegment(p, H, A));\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = texture(iChannel0, uv);\n\n    float u = floor(col.x*20.0)/20.0;\n    vec3 A = mix(vec3(0.0, 0.0, 1.0), 1.5*vec3(0.0, 1.0, 0.0), u);\n    vec3 B = mix(1.5*vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 0.0), u);\n    vec3 C = mix(A, B, u);\n    \n    \n    \n    if(sdScene(uv) < 0.002) {\n        fragColor = vec4(1.0);\n    } else {\n        fragColor = vec4( C, 1.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//change this to change the function to show\n#define coord 3\n\nvec2 sdSegment(vec2 p, vec2 a, vec2 b, int i)\n{\n    vec2 pa = p-a, ba = b-a;\n    float A = dot(pa,ba)/dot(ba,ba);\n    float h = clamp( A, 0.0, 1.0 );\n    vec2 n = vec2(-ba.y, ba.x);\n    vec3 coords;\n    float tt = fract(iTime/2.0);\n    int q = int(floor(iTime/2.0));\n    int r = q + 1;\n    \n    float B = clamp(dot(pa, normalize(ba)) / length(ba), 0.0,1.0);\n\n    float c = 0.0;\n    if(i == coord) {\n        c = B;\n    } else if( (i-1 + 8) % 8 == coord) {\n        c = 1.0 - B;\n    }\n\n    return vec2(length( pa - ba*h), c);\n}\n\nvec2 minA(vec2 d, vec2 e) {\n    float a = float(d.x < e.x);\n    return vec2(min(d.x, e.x), mix(d.y, e.y, 1.0-a));\n}\n\nvec2 sdScene(vec2 p) {\n\n    vec2 A = vec2(0.25, 0.25);\n    vec2 B = vec2(0.75, 0.25);\n    vec2 C = vec2(0.75, 0.75);\n    vec2 D = vec2(0.55, 0.75);\n    vec2 E = vec2(0.55, 0.45);\n    vec2 F = vec2(0.35, 0.45);\n    vec2 G = vec2(0.35, 0.75);\n    vec2 H = vec2(0.25, 0.75);\n\n    vec2 d = sdSegment(p, A, B, 0);\n    d = minA(d, sdSegment(p, B, C, 1));\n    d = minA(d, sdSegment(p, C, D, 2));\n    d = minA(d, sdSegment(p, D, E, 3));\n    d = minA(d, sdSegment(p, E, F, 4));\n    d = minA(d, sdSegment(p, F, G, 5));\n    d = minA(d, sdSegment(p, G, H, 6));\n    d = minA(d, sdSegment(p, H, A, 7));\n   \n\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,0.0,1.0);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 d = sdScene(uv);\n    if(d.x < 0.0025) {\n        fragColor = vec4(vec3(d.y), 0.0);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 colA = texture(iChannel0, uv);\n    \n    int s = 1;\n    vec4 col2 = texelFetch(iChannel1, ivec2(fragCoord) + ivec2(s, 0), 0);\n    vec4 col3 = texelFetch(iChannel1, ivec2(fragCoord) + ivec2(0, s), 0);\n    vec4 col4 = texelFetch(iChannel1, ivec2(fragCoord) + ivec2(-s, 0), 0);\n    vec4 col5 = texelFetch(iChannel1, ivec2(fragCoord) + ivec2(0, -s), 0);\n    \n    fragColor = mix(colA, 0.25*(col2 + col3 + col4 + col5), colA.w);\n}","name":"Buffer B","description":"","type":"buffer"}]}