{"ver":"0.1","info":{"id":"Wd3SWS","date":"1572710523","viewed":154,"name":"Ripple screensaver","username":"gabrielmuller","description":"it be like that","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["screensaver"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash(float n) {\n    return floor(vec2(fract(sin(n)*138.5453123), fract(sin(n)*832.83037595)) * 7.) / 7.;\n}\n\nfloat rippleValue(float n, vec2 uv) {\n    vec2 params = hash(n + 0.3859903);\n    params.x = params.x * 0.1 + 0.01;\n    float ripple = floor(iTime * params.x + 10.);\n    float distance = length(uv - hash(ripple * n) * vec2(iResolution.x/iResolution.y, 1.0));\n    float peak = fract(iTime * params.x) * 2.0;\n    float spread = peak * 0.1;\n    return pow((smoothstep(peak-spread, peak, distance) - smoothstep(peak, peak+spread, distance)), 0.2) / pow(peak, 0.8);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.yy;\n    vec3 value = vec3(0.);\n    for (int i = 0; i < 20; i++) {\n        float v = rippleValue(float(i), uv) * 2.;\n        value += pow(vec3(v, v * 0.5, 0.), vec3(2.2));\n        if (i % 6 == 0) value = value.xzy;\n        if (i % 6 == 1) value = value.zyx;\n        if (i % 6 == 2) value = value.yxz;\n        if (i % 6 == 3) value = value.zxy;\n        if (i % 6 == 4) value = value.yzx;\n\n    }\n    value = pow(value, vec3(1./2.2));\n    fragColor = vec4(vec3(value*0.2 * (iMouse.y/iResolution.y + 1.0)), 1.0);\n}","name":"Image","description":"","type":"image"}]}