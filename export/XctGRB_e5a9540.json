{"ver":"0.1","info":{"id":"XctGRB","date":"1711836244","viewed":118,"name":"exploding sphube","username":"immibis","description":"The translucent sphere/cube repeatedly breaks into parts.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"4fd3zS","parentname":"exploding sphube (internal)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rotateX(vec3 v, float angle) {\n    return vec3(v.x,v.y*cos(angle)+v.z*sin(angle),-v.y*sin(angle)+v.z*cos(angle));\n}\nvec3 rotateY(vec3 v, float angle) {\n    return rotateX(v.yxz,angle).yxz;\n}\n\nfloat inside(vec3 pos) {\n    return max(0.,1.-(length(pos)/160.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.yy*2.;\n    vec3 dir = vec3(uv, 1.0);\n    vec3 pos = vec3(0.,0.,-300.);\n    float time = iTime;\n    float rot = iTime*3.14159/2.;\n    pos = rotateX(pos,rot);\n    dir = rotateX(dir,rot);\n    pos = rotateY(pos,rot/3.);\n    dir = rotateY(dir,rot/3.);\n    fragColor = vec4(0.);\n    float cellsize_ = exp(mod(iTime, log(9.)))*(240.);\n    for(int i = 0; i < 100; i++) {\n        pos += dir*5.;\n        float cellsize = cellsize_;\n        vec3 checkpos = pos;\n        for(int j = 0; j < 5; j++) {\n            vec3 cellbase = floor(checkpos/cellsize+0.5)*cellsize;\n            vec3 incell = checkpos - cellbase;\n            checkpos = cellbase - incell;\n            if(length(cellbase) >= 1.0) break;\n            cellsize /= 3.;\n        }\n        fragColor += 0.015*inside(checkpos)*(1.-fragColor.a)*vec4(1.,0.,0.,-1.);\n    }\n    fragColor.r = pow(fragColor.r,0.3);\n}","name":"Image","description":"","type":"image"}]}