{"ver":"0.1","info":{"id":"XXlXWN","date":"1709539340","viewed":140,"name":"Sun Flower0","username":"kenshin","description":"Sun Flower","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["sunflower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy)/iResolution.y;\n    float len = length(uv);\n    vec2 poler = vec2(atan(uv.x, uv.y), length(uv));\n    uv = vec2(poler.x / (2. * PI) + .5 - iTime * .1 + poler.y, poler.y);\n    float x = uv.x * 8.;\n    float m = min(fract(x), fract(1. - x));\n    float n = smoothstep(.0, .05, m * .5 + .3 - uv.y);\n    // Time varying pixel color\n    vec3 col = n * vec3(2., .9, .1) * smoothstep(1., .0, len);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}