{"ver":"0.1","info":{"id":"4tjBzd","date":"1516879061","viewed":241,"name":"Skull head","username":"lsdlive","description":"My second attempt to model with sphere tracing.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","modelling","skull"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Skull head\n// @lsdlive\n\nmat2 r2d(float a) {\n\tfloat c = cos(a);\n\tfloat s = sin(a);\n\treturn mat2(c, s, -s, c);\n}\n\nfloat sphere(vec3 p, float r) {\n\treturn length(p) - r;\n}\n\n// iq via leon/koltes\nfloat smoo(float a, float b, float r) { return clamp(.5 + .5*(b - a) / r, 0., 1.); }\nfloat smin(float a, float b, float r) { float h = smoo(a, b, r); return mix(b, a, h) - r*h*(1. - h); }\nfloat smax(float a, float b, float r) { float h = smoo(a, b, r); return mix(a, b, h) + r*h*(1. - h); }\n\n// iq's primitives\nfloat sdHexPrism(vec3 p, vec2 h)\n{\n\tvec3 q = abs(p);\n\treturn max(q.z - h.y, max((q.x*0.866025 + q.y*0.5), q.y) - h.x);\n}\n\nfloat sdTriPrism(vec3 p, vec2 h)\n{\n\tvec3 q = abs(p);\n\treturn max(q.z - h.y, max(q.x*0.866025 + p.y*0.5, -p.y) - h.x*0.5);\n}\n\nfloat sdBox(vec3 p, vec3 b)\n{\n\tvec3 d = abs(p) - b;\n\treturn min(max(d.x, max(d.y, d.z)), 0.0) + length(max(d, 0.0));\n}\n\nfloat map(vec3 p) {\n\tmat2 r = r2d(iTime);\n\n\tp.xz *= r2d(cos(iTime)*.2);\n\tp.xy *= r2d(cos(iTime)*.2);\n\n    // \"push/pop\" transforms\n\tvec3 q = p;\n\n\n\t// Head\n\tp.y *= 1.08;\n\tfloat head1 = sphere(p, .7);\n\n\n\t// Eyes\n\tp.x = abs(p.x);\n\tp.y += .1;\n\tp.xy *= r2d(.2);\n\tp.x *= .7;\n\tp.z -= .5;\n\tp.x -= .18;\n\tfloat s2 = sdBox(p, vec3(.07, .05, .1)) - .09;\n\n\t// Face\n\tp = q;\n\tp.y += .25;\n\tp.z -= .4;\n\tfloat hex1 = sdHexPrism(p, vec2(.4, .1));\n\n\t// Nose\n\tp = q;\n\tp.y += .3;\n\tp.z -= .7;\n\tfloat tri1 = sdTriPrism(p, vec2(.15, .2));\n\tp.z += .2;\n\tp.y += .1;\n\tfloat tri2 = sdTriPrism(p, vec2(.15, .2) * .33);\n\n\n\t// Teeth\n\t// big mess of fine tuning during 30 minutes\n    // til I smin everything & give up as it is.\n\tp = q;\n\tp.x = abs(p.x);\n\tp.y += .6;\n\tp.z -= .53;\n\tp.x -= .28;\n\tp.xy *= r2d(.05);\n\tfloat b1 = sdBox(p, vec3(.024, .03, .026)*1.2) - .002;\n\tp.x += .1;\n\tp.y += .12;\n\tfloat b2 = sdBox(p, vec3(.039*p.y*10., .12, .039)*1.2);// - .02;\n\tp.y -= .12;\n\tp.x += .125;\n\tfloat b3 = sdBox(p, vec3(.04, .06, .04)*1.2) - .002;\n\t//p.x += .088;\n\t//float b4 = sdBox(p, vec3(.044));// - .02;\n\t//p.x += .088;\n\t//float b5 = sdBox(p, vec3(.048));// - .02;\n\n\tp = q;\n\tfloat d;\n\n\t// head / maw\n\td = smin(head1, hex1, .3);\n\td = max(d, -p.y - .59);\n\n\t// eye\n\td = max(d, -s2);\n\n\t// nose\n\td = smax(d, -tri1, .08);\n\td = smin(d, tri2, .03);\n\n\t// teeth\n\td = smin(d, b1, .08);\n\td = smin(d, b2, .08);\n\td = smin(d, b3, .09);\n\t//d = min(d, b4);\n\treturn d;\n\n}\n\nvec3 normal(in vec3 pos)\n{\n\tvec2 e = vec2(1., -1.)*.5773*.0005;\n\treturn normalize(e.xyy*map(pos + e.xyy) +\n\t\te.yyx*map(pos + e.yyx) +\n\t\te.yxy*map(pos + e.yxy) +\n\t\te.xxx*map(pos + e.xxx));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = (fragCoord - .5*iResolution.xy) / iResolution.y;\n\n\tvec3 ro = vec3(0, -.1, 2.3), p;\n\tvec3 rd = normalize(vec3(uv, -1.));\n\tp = ro;\n\n\tfloat ri;\n\tfloat d;\n\tfloat t;\n\tfloat maxt = 10.;\n\n\tfor (float i = 0.; i < 1.; i += .01) {\n\t\tri = i;\n\t\tp = ro + rd * t;\n\t\td = map(p);\n\t\tif (d < .001 || t > maxt) break;\n\t\tt += d;\n\t}\n\n\tri /= .5;\n\n\tvec3 c = vec3(.17, .1, .1);\n\n\tif (t < maxt) {\n\t\tc = mix(c, vec3(.9, .8, .7), 1. + (ri)*p.y*8.);\n\t\tc = smoothstep(0.1, 1., c);\n\t\t//c = normal(p);\n\t}\n\n\t// centered light\n\tc = c * sqrt(1. - length(uv));\n\n\tfragColor = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}]}