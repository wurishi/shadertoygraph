{"ver":"0.1","info":{"id":"DsBGDD","date":"1667582415","viewed":134,"name":"pseudo random rgb noise","username":"jonasfrey","description":"this is a test of how one can get pseudo random values, foreach each random value to be generated it needs a previous unique value, \nfor the first random value that is the index of the current pixel\nfor the following random values, i take the previous rnd","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 a_n_mouse_coords_norm = iMouse.xy / iResolution.xy;\n    vec2 a_n_frag_coords_norm = fragCoord.xy / iResolution.xy;\n    \n    float n_high_prime = 1471343.0;\n    float n_high_prime_modified = n_high_prime * a_n_mouse_coords_norm.x;\n    \n    float n_tau = 6.2831;\n    int n_index_pixel = \n        int(\n            a_n_frag_coords_norm.x * iResolution.x + \n            (a_n_frag_coords_norm.y * iResolution.y) * iResolution.x\n           ); \n    int n_index_pixel2 = \n        int(fragCoord.x + fragCoord.y * iResolution.x);\n    float n_index_pixel_normalized = float(n_index_pixel2) / iResolution.x * iResolution.y;\n    float n_freq = float(n_index_pixel_normalized); \n\n    \n    float n_y = sin(n_freq*n_tau) * n_high_prime_modified;\n    \n    float n_rand_method1 = abs(mod(n_y,1.0));\n    float n_rand_method2 = n_y - floor(n_y);\n    \n    \n    float n_y2 = sin(n_freq*n_tau*n_rand_method2) * n_high_prime;\n    float n_rand2 = n_y2 - floor(n_y2);\n    \n    float n_y3 = sin(n_freq*n_tau*n_rand2) * n_high_prime;\n    float n_rand3 = n_y3 - floor(n_y3);\n    fragColor = vec4(\n        n_rand_method2, \n        n_rand2, \n        n_rand3, \n        1.0\n    );\n}","name":"Image","description":"","type":"image"}]}