{"ver":"0.1","info":{"id":"4fScWt","date":"1723127499","viewed":69,"name":"twilight and twilight_shifted","username":"mattz","description":"Rational fourier fits of twilight and twilight_shifted colormaps from matplotlib, by request of @larsmaxfield.","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["colormap","colormap","fourier","fit","twilight"],"hasliked":0,"parentid":"3dByzK","parentname":"h[sp]luv rational Fourier series"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// fitting rational fourier series to twilight and twilight_shifted colormaps\n// original colormaps are from matplotlib (introduced in version 3.0)\n//\n// License CC0 (public domain) \n//   https://creativecommons.org/share-your-work/public-domain/cc0/\n//\n\n\nvec3 twilight(float t) {\n\n    t *= 6.283185307179586;\n\n    vec2 cs1 = vec2(cos(t), sin(t));\n    vec2 cs2 = vec2(cs1.x*cs1.x - cs1.y*cs1.y, 2.0*cs1.x*cs1.y);\n\n    vec3 n = vec3(0.604241906517949, 0.4211209742387994, 0.5654329623884283);\n    n += vec3(0.3786081652411069, 0.4231873615015874, 0.3006285459149778)*cs1.x;\n    n += vec3(-0.3806740645833865, -0.2192933437505726, 0.297215004243999)*cs1.y;\n    n += vec3(-0.1225310774589317, 0.05262481606068274, -0.1299696350001923)*cs2.x;\n    n += vec3(-0.209793460377647, -0.08229299637364859, 0.2043188473156559)*cs2.y;\n\n    vec3 d = vec3(1.0);\n    d += vec3(0.2411111517951086, 0.1090036451124381, 0.1358630678955726)*cs1.x;\n    d += vec3(-0.3611005116375753, -0.7206085364851942, 0.09738419152461333)*cs1.y;\n    d += vec3(-0.2459830263163363, -0.04512164179268539, -0.2825334376412894)*cs2.x;\n    d += vec3(-0.2362425339299566, 0.1115700597048391, 0.3416930715651435)*cs2.y;\n\n    return n/d;\n\n}\n\nvec3 twilight_shifted(float t) {\n    \n    return twilight(fract(0.5 - t));\n\n}\n\n\nvec3 paletteLUT(float row, float u) {\n    \n    vec2 uv;\n    \n    uv.x = mix(0.5, 254.5, u);\n    uv.y = 0.5 + row;\n    \n    uv /= iResolution.xy;\n    \n    return texture(iChannel0, uv, 0.0).xyz;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    float u = fragCoord.x / iResolution.x;\n    \n    //fragColor = vec4(paletteLUT(2.0, u), 1);\n    \n    \n    float y;\n    vec2 uv;\n    \n    if (max(iMouse.z, iMouse.w) > 0.) {\n        \n        uv = fragCoord / iResolution.xy;\n        y = floor(iMouse.y * 4. / iResolution.y );\n        \n    } else {\n\n        const float m = 2.0;\n\n        vec2 dims = iResolution.xy - vec2(2.*m, 2.*m);\n\n        float h = floor(0.25*dims.y);\n\n        dims.y = 4.0*h;\n\n        fragCoord -= 0.5*(iResolution.xy-dims) + mod(m, 2.)*0.5;\n\n        y = floor(fragCoord.y / h);\n\n        uv = fragCoord / dims;\n\n        float b = mod(fragCoord.y + 0.5*h, h);\n\n        if (abs(b - 0.5*h) < 0.5*m || uv.x < 0. || uv.x >= 1.) {\n            y = -1.;\n        }\n        \n    }\n\n    fragColor = vec4(0, 0, 0, 1);\n    \n    if (y == 0.) {\n        fragColor.xyz = paletteLUT(1.0, uv.x);\n    } else if (y == 1.) {\n        fragColor.xyz = twilight(uv.x);\n    } else if (y == 2.) {\n        fragColor.xyz = paletteLUT(1.0, fract(0.5 - uv.x));\n    } else if (y == 3.) {\n        fragColor.xyz = twilight_shifted(uv.x);\n    }\n\n    \n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 data = vec4(0);\nivec2 fc;\nivec2 dst_fc;\n\nvoid store(vec3 f) { \n\n    if (dst_fc == fc) {\n        data.xyz = f;\n    }\n    dst_fc.x += 1;\n    \n}\n    \n\nvoid store_all_data() {\n    \n    // initialization\n    dst_fc = ivec2(0, 0);\n    store(vec3(1));\n    \n    dst_fc = ivec2(0, 1);\n    \n    store(vec3(0.885750, 0.850009, 0.887974));\n    store(vec3(0.881722, 0.851276, 0.886381));\n    store(vec3(0.877249, 0.851870, 0.884341));\n    store(vec3(0.872331, 0.851802, 0.881897));\n    store(vec3(0.866960, 0.851090, 0.879098));\n    store(vec3(0.861102, 0.849768, 0.875992));\n    store(vec3(0.854726, 0.847875, 0.872628));\n    store(vec3(0.847807, 0.845455, 0.869040));\n    store(vec3(0.840304, 0.842561, 0.865251));\n    store(vec3(0.832227, 0.839235, 0.861276));\n    store(vec3(0.823574, 0.835525, 0.857132));\n    store(vec3(0.814390, 0.831466, 0.852838));\n    store(vec3(0.804692, 0.827098, 0.848424));\n    store(vec3(0.794543, 0.822451, 0.843922));\n    store(vec3(0.783991, 0.817554, 0.839367));\n    store(vec3(0.773084, 0.812435, 0.834802));\n    store(vec3(0.761869, 0.807119, 0.830266));\n    store(vec3(0.750403, 0.801627, 0.825797));\n    store(vec3(0.738738, 0.795977, 0.821429));\n    store(vec3(0.726922, 0.790185, 0.817192));\n    store(vec3(0.715004, 0.784265, 0.813111));\n    store(vec3(0.703030, 0.778229, 0.809206));\n    store(vec3(0.691046, 0.772086, 0.805488));\n    store(vec3(0.679096, 0.765845, 0.801965));\n    store(vec3(0.667215, 0.759511, 0.798637));\n    store(vec3(0.655437, 0.753092, 0.795503));\n    store(vec3(0.643791, 0.746592, 0.792557));\n    store(vec3(0.632303, 0.740017, 0.789789));\n    store(vec3(0.620992, 0.733369, 0.787190));\n    store(vec3(0.609875, 0.726654, 0.784748));\n    store(vec3(0.598967, 0.719874, 0.782453));\n    store(vec3(0.588276, 0.713032, 0.780291));\n    store(vec3(0.577812, 0.706131, 0.778253));\n    store(vec3(0.567581, 0.699173, 0.776327));\n    store(vec3(0.557589, 0.692159, 0.774504));\n    store(vec3(0.547841, 0.685091, 0.772774));\n    store(vec3(0.538340, 0.677971, 0.771127));\n    store(vec3(0.529091, 0.670798, 0.769556));\n    store(vec3(0.520096, 0.663574, 0.768051));\n    store(vec3(0.511360, 0.656299, 0.766607));\n    store(vec3(0.502885, 0.648972, 0.765214));\n    store(vec3(0.494676, 0.641595, 0.763867));\n    store(vec3(0.486736, 0.634166, 0.762558));\n    store(vec3(0.479068, 0.626687, 0.761280));\n    store(vec3(0.471676, 0.619155, 0.760027));\n    store(vec3(0.464564, 0.611572, 0.758792));\n    store(vec3(0.457734, 0.603936, 0.757569));\n    store(vec3(0.451189, 0.596248, 0.756351));\n    store(vec3(0.444932, 0.588506, 0.755131));\n    store(vec3(0.438966, 0.580710, 0.753903));\n    store(vec3(0.433290, 0.572859, 0.752659));\n    store(vec3(0.427907, 0.564954, 0.751394));\n    store(vec3(0.422815, 0.556994, 0.750101));\n    store(vec3(0.418014, 0.548978, 0.748772));\n    store(vec3(0.413502, 0.540906, 0.747401));\n    store(vec3(0.409277, 0.532777, 0.745980));\n    store(vec3(0.405333, 0.524592, 0.744504));\n    store(vec3(0.401667, 0.516350, 0.742964));\n    store(vec3(0.398272, 0.508052, 0.741355));\n    store(vec3(0.395141, 0.499696, 0.739668));\n    store(vec3(0.392265, 0.491283, 0.737898));\n    store(vec3(0.389636, 0.482813, 0.736038));\n    store(vec3(0.387243, 0.474286, 0.734080));\n    store(vec3(0.385076, 0.465703, 0.732019));\n    store(vec3(0.383122, 0.457063, 0.729846));\n    store(vec3(0.381369, 0.448367, 0.727557));\n    store(vec3(0.379804, 0.439616, 0.725143));\n    store(vec3(0.378414, 0.430809, 0.722599));\n    store(vec3(0.377184, 0.421947, 0.719918));\n    store(vec3(0.376100, 0.413031, 0.717094));\n    store(vec3(0.375148, 0.404061, 0.714119));\n    store(vec3(0.374313, 0.395039, 0.710988));\n    store(vec3(0.373581, 0.385965, 0.707693));\n    store(vec3(0.372936, 0.376840, 0.704228));\n    store(vec3(0.372364, 0.367665, 0.700585));\n    store(vec3(0.371851, 0.358441, 0.696757));\n    store(vec3(0.371381, 0.349171, 0.692737));\n    store(vec3(0.370942, 0.339856, 0.688517));\n    store(vec3(0.370517, 0.330497, 0.684089));\n    store(vec3(0.370095, 0.321098, 0.679444));\n    store(vec3(0.369660, 0.311661, 0.674573));\n    store(vec3(0.369198, 0.302189, 0.669468));\n    store(vec3(0.368697, 0.292687, 0.664116));\n    store(vec3(0.368141, 0.283159, 0.658509));\n    store(vec3(0.367517, 0.273611, 0.652634));\n    store(vec3(0.366811, 0.264049, 0.646480));\n    store(vec3(0.366009, 0.254480, 0.640034));\n    store(vec3(0.365096, 0.244915, 0.633282));\n    store(vec3(0.364057, 0.235365, 0.626210));\n    store(vec3(0.362876, 0.225841, 0.618804));\n    store(vec3(0.361538, 0.216361, 0.611049));\n    store(vec3(0.360027, 0.206941, 0.602928));\n    store(vec3(0.358325, 0.197603, 0.594428));\n    store(vec3(0.356414, 0.188371, 0.585532));\n    store(vec3(0.354275, 0.179274, 0.576228));\n    store(vec3(0.351892, 0.170343, 0.566503));\n    store(vec3(0.349245, 0.161615, 0.556348));\n    store(vec3(0.346315, 0.153128, 0.545760));\n    store(vec3(0.343086, 0.144925, 0.534737));\n    store(vec3(0.339542, 0.137048, 0.523288));\n    store(vec3(0.335670, 0.129541, 0.511428));\n    store(vec3(0.331462, 0.122442, 0.499183));\n    store(vec3(0.326914, 0.115787, 0.486586));\n    store(vec3(0.322029, 0.109601, 0.473685));\n    store(vec3(0.316816, 0.103899, 0.460534));\n    store(vec3(0.311294, 0.098685, 0.447193));\n    store(vec3(0.305487, 0.093953, 0.433728));\n    store(vec3(0.299425, 0.089682, 0.420216));\n    store(vec3(0.293146, 0.085851, 0.406722));\n    store(vec3(0.286692, 0.082430, 0.393312));\n    store(vec3(0.280106, 0.079390, 0.380050));\n    store(vec3(0.273437, 0.076703, 0.366996));\n    store(vec3(0.266732, 0.074344, 0.354203));\n    store(vec3(0.260039, 0.072295, 0.341718));\n    store(vec3(0.253407, 0.070534, 0.329595));\n    store(vec3(0.246882, 0.069054, 0.317870));\n    store(vec3(0.240508, 0.067857, 0.306571));\n    store(vec3(0.234331, 0.066936, 0.295740));\n    store(vec3(0.228392, 0.066290, 0.285411));\n    store(vec3(0.222727, 0.065934, 0.275597));\n    store(vec3(0.217378, 0.065860, 0.266342));\n    store(vec3(0.212374, 0.066085, 0.257652));\n    store(vec3(0.207744, 0.066615, 0.249546));\n    store(vec3(0.203520, 0.067444, 0.242056));\n    store(vec3(0.199716, 0.068593, 0.235171));\n    store(vec3(0.196083, 0.070321, 0.228747));\n    store(vec3(0.191994, 0.073183, 0.222434));\n    store(vec3(0.187392, 0.077102, 0.216189));\n    store(vec3(0.187745, 0.077252, 0.213874));\n    store(vec3(0.193155, 0.073607, 0.215424));\n    store(vec3(0.198193, 0.070975, 0.216910));\n    store(vec3(0.202904, 0.069435, 0.218332));\n    store(vec3(0.207857, 0.068484, 0.220001));\n    store(vec3(0.213331, 0.067830, 0.222070));\n    store(vec3(0.219305, 0.067466, 0.224510));\n    store(vec3(0.225754, 0.067382, 0.227290));\n    store(vec3(0.232663, 0.067557, 0.230376));\n    store(vec3(0.239996, 0.067985, 0.233734));\n    store(vec3(0.247721, 0.068653, 0.237329));\n    store(vec3(0.255821, 0.069532, 0.241122));\n    store(vec3(0.264255, 0.070617, 0.245078));\n    store(vec3(0.272997, 0.071884, 0.249158));\n    store(vec3(0.282017, 0.073316, 0.253328));\n    store(vec3(0.291285, 0.074899, 0.257551));\n    store(vec3(0.300773, 0.076618, 0.261793));\n    store(vec3(0.310455, 0.078457, 0.266020));\n    store(vec3(0.320300, 0.080413, 0.270203));\n    store(vec3(0.330292, 0.082468, 0.274309));\n    store(vec3(0.340402, 0.084622, 0.278313));\n    store(vec3(0.350607, 0.086876, 0.282188));\n    store(vec3(0.360888, 0.089227, 0.285911));\n    store(vec3(0.371225, 0.091680, 0.289459));\n    store(vec3(0.381602, 0.094239, 0.292811));\n    store(vec3(0.391999, 0.096916, 0.295952));\n    store(vec3(0.402397, 0.099723, 0.298867));\n    store(vec3(0.412780, 0.102673, 0.301542));\n    store(vec3(0.423132, 0.105781, 0.303968));\n    store(vec3(0.433436, 0.109064, 0.306138));\n    store(vec3(0.443674, 0.112539, 0.308050));\n    store(vec3(0.453830, 0.116222, 0.309704));\n    store(vec3(0.463891, 0.120126, 0.311103));\n    store(vec3(0.473841, 0.124264, 0.312255));\n    store(vec3(0.483666, 0.128647, 0.313172));\n    store(vec3(0.493355, 0.133281, 0.313866));\n    store(vec3(0.502895, 0.138171, 0.314357));\n    store(vec3(0.512278, 0.143317, 0.314663));\n    store(vec3(0.521497, 0.148715, 0.314808));\n    store(vec3(0.530544, 0.154362, 0.314813));\n    store(vec3(0.539417, 0.160248, 0.314703));\n    store(vec3(0.548114, 0.166363, 0.314501));\n    store(vec3(0.556632, 0.172697, 0.314230));\n    store(vec3(0.564973, 0.179237, 0.313914));\n    store(vec3(0.573138, 0.185970, 0.313571));\n    store(vec3(0.581129, 0.192885, 0.313224));\n    store(vec3(0.588949, 0.199970, 0.312889));\n    store(vec3(0.596599, 0.207213, 0.312585));\n    store(vec3(0.604084, 0.214603, 0.312327));\n    store(vec3(0.611406, 0.222131, 0.312129));\n    store(vec3(0.618569, 0.229788, 0.312005));\n    store(vec3(0.625574, 0.237565, 0.311967));\n    store(vec3(0.632425, 0.245456, 0.312028));\n    store(vec3(0.639124, 0.253454, 0.312197));\n    store(vec3(0.645673, 0.261552, 0.312487));\n    store(vec3(0.652074, 0.269747, 0.312906));\n    store(vec3(0.658328, 0.278032, 0.313464));\n    store(vec3(0.664436, 0.286405, 0.314172));\n    store(vec3(0.670400, 0.294861, 0.315038));\n    store(vec3(0.676219, 0.303398, 0.316072));\n    store(vec3(0.681895, 0.312011, 0.317284));\n    store(vec3(0.687427, 0.320700, 0.318681));\n    store(vec3(0.692815, 0.329460, 0.320275));\n    store(vec3(0.698061, 0.338290, 0.322075));\n    store(vec3(0.703162, 0.347187, 0.324089));\n    store(vec3(0.708121, 0.356150, 0.326329));\n    store(vec3(0.712935, 0.365176, 0.328803));\n    store(vec3(0.717604, 0.374263, 0.331521));\n    store(vec3(0.722130, 0.383409, 0.334495));\n    store(vec3(0.726511, 0.392611, 0.337733));\n    store(vec3(0.730748, 0.401869, 0.341245));\n    store(vec3(0.734841, 0.411178, 0.345042));\n    store(vec3(0.738791, 0.420537, 0.349133));\n    store(vec3(0.742599, 0.429943, 0.353527));\n    store(vec3(0.746266, 0.439392, 0.358234));\n    store(vec3(0.749794, 0.448883, 0.363263));\n    store(vec3(0.753186, 0.458412, 0.368622));\n    store(vec3(0.756443, 0.467975, 0.374319));\n    store(vec3(0.759571, 0.477569, 0.380361));\n    store(vec3(0.762573, 0.487189, 0.386753));\n    store(vec3(0.765455, 0.496832, 0.393503));\n    store(vec3(0.768222, 0.506494, 0.400613));\n    store(vec3(0.770881, 0.516169, 0.408087));\n    store(vec3(0.773440, 0.525853, 0.415927));\n    store(vec3(0.775908, 0.535542, 0.424134));\n    store(vec3(0.778293, 0.545231, 0.432707));\n    store(vec3(0.780608, 0.554913, 0.441643));\n    store(vec3(0.782862, 0.564585, 0.450940));\n    store(vec3(0.785068, 0.574242, 0.460591));\n    store(vec3(0.787239, 0.583877, 0.470590));\n    store(vec3(0.789387, 0.593488, 0.480929));\n    store(vec3(0.791528, 0.603067, 0.491597));\n    store(vec3(0.793676, 0.612610, 0.502582));\n    store(vec3(0.795843, 0.622114, 0.513871));\n    store(vec3(0.798044, 0.631573, 0.525451));\n    store(vec3(0.800294, 0.640982, 0.537305));\n    store(vec3(0.802605, 0.650338, 0.549417));\n    store(vec3(0.804991, 0.659635, 0.561767));\n    store(vec3(0.807461, 0.668870, 0.574337));\n    store(vec3(0.810028, 0.678037, 0.587106));\n    store(vec3(0.812699, 0.687130, 0.600052));\n    store(vec3(0.815481, 0.696145, 0.613152));\n    store(vec3(0.818379, 0.705074, 0.626382));\n    store(vec3(0.821395, 0.713911, 0.639718));\n    store(vec3(0.824527, 0.722646, 0.653131));\n    store(vec3(0.827772, 0.731270, 0.666596));\n    store(vec3(0.831122, 0.739772, 0.680081));\n    store(vec3(0.834566, 0.748138, 0.693557));\n    store(vec3(0.838091, 0.756353, 0.706986));\n    store(vec3(0.841678, 0.764401, 0.720333));\n    store(vec3(0.845298, 0.772263, 0.733564));\n    store(vec3(0.848922, 0.779920, 0.746637));\n    store(vec3(0.852519, 0.787349, 0.759499));\n    store(vec3(0.856040, 0.794530, 0.772106));\n    store(vec3(0.859435, 0.801439, 0.784398));\n    store(vec3(0.862656, 0.808055, 0.796283));\n    store(vec3(0.865649, 0.814355, 0.807670));\n    store(vec3(0.868400, 0.820309, 0.818416));\n    store(vec3(0.870938, 0.825869, 0.828385));\n    store(vec3(0.873352, 0.830967, 0.837489));\n    store(vec3(0.875715, 0.835530, 0.845755));\n    store(vec3(0.878023, 0.839502, 0.853306));\n    store(vec3(0.880193, 0.842852, 0.860274));\n    store(vec3(0.882115, 0.845570, 0.866738));\n    store(vec3(0.883691, 0.847649, 0.872741));\n    store(vec3(0.884851, 0.849084, 0.878282));\n    store(vec3(0.885547, 0.849872, 0.883362));\n    store(vec3(0.885712, 0.850022, 0.885725));\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    float ready = texelFetch(iChannel0, ivec2(0, 0), 0).x;\n\n    fc = ivec2(fragCoord);\n    data = texelFetch(iChannel0, fc, 0);\n    \n    if (ready != 1.0) {\n        store_all_data();\n    }\n    \n    fragColor = data;\n\n}\n","name":"Buffer A","description":"","type":"buffer"}]}