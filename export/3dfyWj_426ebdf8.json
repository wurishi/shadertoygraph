{"ver":"0.1","info":{"id":"3dfyWj","date":"1585536441","viewed":433,"name":"edge detection sobel","username":"horristic","description":"sobel filter","likes":5,"published":1,"flags":2,"usePreview":0,"tags":["sobelfilter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 kSobelH;\nmat3 kSobelV;\n\nfloat _2gray(vec4 rgb)\n{\n\treturn rgb.x * 0.2999+rgb.y*0.587+rgb.z*0.114;\n}\n\nvec4 _sampleColor(vec2 pos)\n{\n    if(pos.x < 0.0) pos.x *= -1.0;\n    if(pos.y < 0.0) pos.y *= -1.0;\n    if(pos.x > iResolution.x) pos.x -= iResolution.x;\n    if(pos.y > iResolution.y) pos.y -= iResolution.y;\n    vec2 uv = pos/iResolution.xy;\n    return texture(iChannel0, uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tkSobelH[0]=vec3(-1, 0, 1);\n   \tkSobelH[1]=vec3(-2, 0, 2);\n   \tkSobelH[2]=vec3(-1, 0, 1);\n    \n    kSobelV[0]=vec3(-1, -2, -1);\n   \tkSobelV[1]=vec3( 0, 0, 0);\n   \tkSobelV[2]=vec3( 1, 2, 1);\n    \n    vec2 sample_position = fragCoord;\n    vec4 col = vec4(0);\n    float magx = 0.0, magy = 0.0;\n    for(int y = 0; y < 3; y++)\n    {\n        for(int x =0; x < 3; x++)\n        {\n            sample_position.x += float(x-1);\n            sample_position.y += float(y-1);\n            magx += _2gray(_sampleColor( sample_position )) * kSobelH[y][x];\n            magy += _2gray(_sampleColor( sample_position )) * kSobelV[y][x];\n            col.x = sqrt(pow(magx,2.0) + pow(magy,2.0));\n            col.y = sqrt(pow(magx,2.0) + pow(magy,2.0));\n            col.z = sqrt(pow(magx,2.0) + pow(magy,2.0));\n        }\n    }\n    \n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}