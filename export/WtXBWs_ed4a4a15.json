{"ver":"0.1","info":{"id":"WtXBWs","date":"1598047973","viewed":57,"name":"metart_00","username":"mebemory","description":"Just test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void drawGrid(out vec3 color, vec2 uv, float stepCount, vec3 colorLine, vec3 colorAxis, float widthLine)\n{    \n    if (fract(uv.x*stepCount)< widthLine) \n        color = colorLine;\n    if (fract(uv.y*stepCount)< widthLine) \n        color = colorLine;\n    \n    if (abs(uv.x) < widthLine)\n        color = colorAxis;\n    if (abs(uv.y) < widthLine)\n        color = colorAxis;\n}\n\nvoid drawCircle(out vec3 color, vec2 uv, vec2 centr, float radius, vec3 circleColor)\n{\n    uv -= centr;\n    color = mix(color, circleColor, clamp(mix(50.0, 2.0, (uv.x * uv.x + uv.y * uv.y)*1.0/(radius*radius)), 0.0, 1.0));\n}\n\nvoid drawCircleAdd(out vec3 color, vec2 uv, vec2 centr, float radius, vec3 circleColor)\n{\n    uv -= centr;\n    color = mix(color, color+circleColor*0.5, clamp(mix(2.0,1.0, (uv.x * uv.x + uv.y * uv.y)*1.0/(radius*radius)), 0.0, 1.0));\n}\n\n\nvoid rotMat2(out vec2 uv, float angle)\n{\n    float s = sin(angle);\n    float c = cos(angle);\n\tmat2 rotMat = mat2(c , -s,\n                       s, c);\n    uv = rotMat*uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ar = iResolution.y/iResolution.x;\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= vec2(0.5+cos(iTime+0.5)*0.05, 0.4+sin(iTime)*0.05);\n    uv *=5.0;\n    uv.y *=ar;\n  \tuv.x = fract(uv.x*0.314)*10.0-5.0;\n    uv.y = uv.y*10.0*ar;\n      \n/// background param\n\tvec3 colorBack = vec3(115.0/255.0,86.0/255.0,81.0/255.0);\n/// grid param\n    vec3 _colorLine = vec3(191.0/255.0,135.0/255.0,126.0/255.0);   \n    vec3 _colorAxis = vec3(117.0/255.0,184.0/255.0,191.0/255.0);  \n    \n    float _lineWidth = 0.05*ar;\n    float _stepCount = 1.0;\n    \n    float waveMask = 1.0-step(uv.y, abs(sin(sin(sin(iTime*0.5+uv.x*3.14)*2.5+iTime*5.5)*0.5)*0.3));\n    float wavePos = sin(iTime*2.25+1.23);\n/// circle 1 param\n    vec2 _centr = vec2(sin(iTime),cos(iTime)+wavePos);\n    float _radius = 1.0+((sin(uv.x*5.0+(iTime*2.0))*0.05+sin(uv.y*5.0+(iTime*2.0))*0.05))*(1.0-waveMask);\n    vec3 _circleColor = vec3(185.0/255.0,110.0/255.0,50.0/255.0)+vec3(50.0/255.0, 95.0/255.0, 21.0/255.0)*waveMask;\n// circle 2 param\n    vec2 _centr2 = vec2(0.0,wavePos);\n    float _radius2 = 2.0+(sin(uv.x*5.0+(iTime*2.0))*0.05+sin(uv.y*5.0+(iTime*2.0))*0.05)*(1.0-waveMask);\n    vec3 _circleColor2 = vec3(121.0/255.0,107.0/255.0,151.0/255.0)+vec3(35.0/255.0, 45.0/255.0, 61.0/255.0)*waveMask;\n// circle 3 param\n    vec2 _centr3 = _centr+vec2(sin(iTime*3.14),cos(iTime*3.14))*0.5;\n    float _radius3 = 0.5+(sin(uv.x*5.0+(iTime*2.0))*0.05+sin(uv.y*5.0+(iTime*2.0))*0.05)*(1.0-waveMask);\n    vec3 _circleColor3 = vec3(0.2, 0.2, 0.2);  \n    _circleColor += smoothstep(0.0, 0.5, uv.y*uv.y*0.1+uv.x*uv.x*0.1)*0.5;\n    _circleColor2 += vec3(0.0, 0.3, 0.5)*_circleColor2*smoothstep(0.0, 0.5, uv.y*uv.y*0.05+uv.x*uv.x*0.05)*3.0*(waveMask);\n    _circleColor2 += vec3(0.5, 0.3, 0.5)*_circleColor2*smoothstep(0.0, 0.5, uv.y*uv.y*0.05+uv.x*uv.x*0.05)*1.5*(1.0-waveMask);\n// circle 4 param\n    vec2 _centr4 = vec2(-1.0, 1.0+wavePos);\n    float _radius4 = 0.45+(sin(uv.x*5.0+(iTime*2.0))*0.05+sin(uv.y*5.0+(iTime*2.0))*0.05)*(1.0-waveMask);\n    vec3 _circleColor4 = vec3(0.5, 0.9, 0.9);  \n\n        \n    vec3 color = colorBack;\n    vec2 offsetWater = 0.5+(sin(2.0*uv+iTime)*0.2);\n    vec2 uvWater = uv + offsetWater*(1.0-waveMask);\n\tdrawGrid(color, uvWater, _stepCount, _colorLine, _colorAxis, _lineWidth);\n    color = color+mix(vec3(0.1, 0.2, 0.8)*0.5, vec3(0.0, 0.0, 0.0), waveMask);\n    color +=vec3(0.4,0.2,0.3)*(1.0-smoothstep(1.1, 0.9, uv.y)*(1.0-waveMask));\n    color +=vec3(0.2,0.2,0.2)*(smoothstep(1.1, 0.9, uv.y)*(1.0-waveMask));\n    drawCircle(color, uv, _centr2, _radius2, _circleColor2);\n    drawCircle(color, uv, _centr, _radius, _circleColor);\n    drawCircle(color, uv, _centr3, _radius3, _circleColor3);\n    drawCircleAdd(color, uv, _centr4, _radius4, _circleColor4);\n    \n    \n\t\n    color = mix(color, color*vec3(0.2, 0.2, 0.2), abs(uv.y)*0.1);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}