{"ver":"0.1","info":{"id":"MXdSRH","date":"1718645668","viewed":87,"name":"Cell Lab substrate shader code","username":"labyrinth","description":"The shader code for the substrate in the mobile game Cell Lab\nmight slightly deviate from the original","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["substrate","celllab"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 bgcol = vec4(217./255., 217./255., 253./255., 1.);\nconst vec4 bordercol = vec4(0);\nconst float radius = 100.;\n\nvec2 dir;\nfloat amount = 1.;\nfloat range = .2;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    dir = vec2(cos(iTime), sin(iTime));\n    fragColor = bgcol;\n\n    vec2 p = fragCoord-iResolution.xy/2.;\n    p /= radius;\n\tfloat ds = dot(p,p);\n\tif(ds > 1.02) return;\n\telse{\n        if(ds > 0.999)\n            fragColor = bordercol;\n        else\n        {\n            ds = 1.+(1.-range)*(1.-ds)/range;\n            float py = dot(dir,p);\n            float l = amount*max((py*(1.-range)+range)/(ds*ds), 0.);\n            fragColor = bgcol+vec4(l*.5, l*.35, l*.25, 1.);\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}