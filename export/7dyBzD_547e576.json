{"ver":"0.1","info":{"id":"7dyBzD","date":"1657738138","viewed":71,"name":"Bur","username":"nedev_v","description":"Buratino","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["buratino"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool circle(vec2 point, vec2 o, float r){\n             float scaleY = iResolution.y / iResolution.x; // коэффициент по ОУ\n              return (point.x - o.x) * (point.x - o.x) + (point.y - o.y) * (point.y - o.y) * (scaleY * scaleY) < r*r;//check if the point inside the circle\n    }\n    \nvec3 Triangle( vec3 p, vec3 a, vec3 b, vec3 c){\n             vec3 ab = a - b;\n             vec3 bc = b - c;\n             vec3 ca = c - a;\n\n             vec3 ap = a - p;\n             vec3 bp = b - p;\n             vec3 cp = c - p;\n\n              bool b1 = cross(ab, ap).z >= 0.0;\n              bool b2 = cross(bc, bp).z >= 0.0;\n              bool b3 = cross(ca, cp).z >= 0.0;\n\n               if(b1 && b2 && b3){\n                  return vec3(0.9, 0.2, 0.34);\n               }else{\n                  return vec3(0.0);\n               }\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    vec2 uv = fragCoord/iResolution.xy;\n     float x = uv.x;\n     float y = uv.y;\n    vec3 col = vec3(0.0);\n    float a = 3.1415;\n    mat2 rot = mat2(cos(a), -sin(a),\n                 sin(a), cos(a));\n                 \n      uv = uv - vec2(0.5);\n      uv = uv*rot;\n      uv = uv + vec2(0.5);\n                 \n     //hat triangle        \n     vec3 v0 = vec3(0.3, 0.8, 0.0);\n     vec3 v1 = vec3( 0.2, 0.6, 0.0);\n     vec3 v2 = vec3( 0.4,  0.6, 0.0);\n      vec3 res = Triangle(vec3(uv, 0.0), v0, v1, v2);\n       col += vec3(res);\n       \n     //nose triangle        \n     vec3 v01 = vec3(0.38, 0.42, 0.0);\n     vec3 v11 = vec3( 0.37, 0.38, 0.0);\n     vec3 v21 = vec3( 0.6, 0.4, 0.0);\n      vec3 res2 = Triangle(vec3(uv, 0.0), v01, v11, v21);\n        col += vec3(res2);\n         fragColor = vec4(col, 1.0);\n        \n     if (circle(uv, vec2(0.3, 0.8), 0.02)) // hat upper circle\n            fragColor = vec4(1.0, 0.0, .0, 1.0);\n            \n     if (circle(uv, vec2(0.3, 0.45), 0.1)) // head\n            fragColor = vec4(1.0, 0.8, 0.4, 1.0);\n    \n     if (circle(uv, vec2(0.2, 0.6), 0.02)) // hat left bottom circle\n            fragColor = vec4(1.0, 0.0, .0, 1.0);\n            \n     if (circle(uv, vec2(0.4, 0.6), 0.02)) // hat right bottom circle\n            fragColor = vec4(1.0, 0.0, .0, 1.0);\n     //hat rect\n     if (uv.x > 0.2 && uv.x < 0.4 && uv.y > 0.565 && uv.y < 0.635)\n            fragColor = vec4(1.0, 0.0, .0, 1.0);\n            \n     if (circle(uv, vec2(0.35, 0.47), 0.02)) // eye inner black\n            fragColor = vec4(0.0, 0.0, .0, 1.0);\n            \n     if (circle(uv, vec2(0.35, 0.49), 0.02)) // eye outer body\n            fragColor = vec4(1.0, 0.8, 0.4, 1.0);\n     \n     if (circle(uv, vec2(0.33, 0.38), 0.025)) // cheek\n            fragColor = vec4(1.0, 0.4, 0.4, 0.5);\n            \n     if (circle(uv, vec2(0.36, 0.32), 0.015)) // mouth black\n            fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n            \n     if (circle(uv, vec2(0.36, 0.335), 0.012)) // mouth body\n            fragColor = vec4(1.0, 0.8, 0.4, 1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}