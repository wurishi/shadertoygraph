{"ver":"0.1","info":{"id":"ctSSWD","date":"1676053713","viewed":146,"name":"Water video","username":"Grooo","description":"Distort water by texture","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["water","caustic"],"hasliked":0,"parentid":"MdlXz8","parentname":"Tileable Water Caustic"},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Found this on GLSL sandbox. I really liked it, changed a few things and made it tileable.\n// :)\n// by David Hoskins.\n// Original water turbulence effect by joltz0r\n\n\n#define TAU 6.28318530718\n#define MAX_ITER 5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tfloat time = iTime * .5+23.0;\n    // uv should be the 0-1 uv of texture...\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // - Texture luma\n    vec3 luma = texture(iChannel0, uv).rgb;\n    \n#ifdef SHOW_TILING\n\tvec2 p = mod(uv*TAU*2.0, TAU)-250.0;\n#else\n    vec2 p = mod(uv*TAU, TAU)-250.0;\n#endif\n\tvec2 i = vec2(p);\n\tfloat c = 1.0;\n\tfloat inten = .005;\n\n\tfor (int n = 0; n < MAX_ITER; n++){\n\t\tfloat t = time * (1.0 - (3.5 / float(n+1)));\n\t\ti = (p - (luma.rb * 0.5)) + vec2(cos(t - i.x) + sin(t + i.y + (luma.r * 0.2)), sin(t - i.y) + cos(t + i.x + (luma.r * 0.2)));\n\t\tc += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),p.y / (cos(i.y+t)/inten))) + (luma.r * -0.06);\n\t}\n\tc /= float(MAX_ITER);\n\tc = 1.17-pow(c, 1.4);\n    vec3 newColor = vec3(pow(abs(c), 14.0));\n    \n    // -   \n\tvec3 colour = newColor;\n    colour = clamp(colour + vec3(0.0, 0.25, 0.3), 0.1, 1.0);\n\n    // - \n\tfragColor = vec4(colour, 1.0);\n}","name":"Image","description":"","type":"image"}]}