{"ver":"0.1","info":{"id":"fdVGDh","date":"1631917262","viewed":101,"name":"2d electromagnetic potential ","username":"Lay","description":"Thisi is a visualization of conformal map applied to problem to find potential of charged 2d particle being placed between two conductors\n\nfwidth is used so fullscreen is preferred","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["complexanalysis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float scale = 1.; // try 2. or 3.\n\nvec2 complex_log(vec2 z)\n{\n    return vec2(log(length(z)), atan(z.x, z.y));\n}\n\nvec2 complex_exp(vec2 z)\n{\n    return vec2(exp(z.x) * cos(z.y), exp(z.x) * sin(z.y));\n}\n\nvec2 position(float t)\n{\n    t *= 3.14;\n    return vec2(cos(t), sin(t));\n}\n\nfloat potential(vec2 uv, float t)\n{\n    vec2 p = position(t);\n    vec2 n = p; n.y = -n.y;\n    float pot = -log(length(uv - p)) + log(length(uv - n));\n    return 1. * pot;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    uv.x -= 0.5 * iResolution.x/iResolution.y;\n    uv *= 3.14;\n    float time = fract(0.04 * iTime);\n    time = clamp(time, .0, .5) - 0.5 * time;\n    time *= 8.;\n    time -= .5;\n    time = smoothstep(0., 1., time);\n    uv *= scale;\n    uv = (1. - time) * uv + time * complex_exp(uv);\n\n    float t = 0.4 * sin(0.3 * iTime) + 0.5;\n    vec2 pos = position(t);\n    vec2 pos_neg = pos;\n    pos_neg.y = - pos_neg.y;\n    \n    vec3 col = vec3(0.);\n    \n    col += vec3(1.) * max(0., cos((30. * atan(uv.x, uv.y))) * smoothstep(0.009, 0.003, abs(1. - length(uv))));\n    col += vec3(1.) * smoothstep(0.02 * abs(uv.x), 0.01 * abs(uv.x), abs(uv.y));\n    \n    col.b += smoothstep(.04, .03, length(uv - pos));\n    col.r += smoothstep(.04, .03, length(uv - pos_neg));\n    \n    float fw = fwidth(25./(sqrt(abs(potential(uv, t)))));\n    float moire = abs(fw);\n    moire = smoothstep(2.2, .2, moire);\n    \n    float pot = potential(uv, t);\n    float bl = pot;\n    bl = smoothstep(1. - moire, 1., cos(25./(sqrt(bl))));\n    bl *= ( 1. - smoothstep(.1, .04, length(uv - pos)));\n    \n    float rd = -pot;\n    rd = smoothstep(1. - moire, 1., cos(25./(sqrt(rd))));\n    rd *= ( 1. - smoothstep(.1, .04, length(uv - pos_neg)));\n    \n    col.b += bl * moire;\n    col.r += rd * moire;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}