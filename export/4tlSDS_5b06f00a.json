{"ver":"0.1","info":{"id":"4tlSDS","date":"1439413854","viewed":463,"name":"Procedural Landscape","username":"Rosie","description":"Created as part of the SIGGRAPH 2015 Shadertoy workshop","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["procedural","landscape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float cosNoise(in vec2 pos){\n\treturn 0.5*(sin(pos.x) + sin(pos.y));\n}\n\nconst mat2 m2 = mat2(0.8, -0.6,\n                     0.6, 0.8); \n\nfloat map(in vec3 pos){\n//\tcircle return length(pos - vec3(0.0,0.0,-2.0)) -1.0;\n    vec2 q = pos.xz * 0.5;\n    float h = 0.0;\n        \n    float s = 0.5;\n    for(int i = 0; i<10; i++){\n   \t   h += s*cosNoise(q);\n       s *= 0.5;\n       q = m2 * q * 1.7;\n    }\n    \n    h *= 3.0;\n  \n    return pos.y - h;\n}\n\n\n\n\nvec3 calcNormal(in vec3 pos){\n\tvec3 nor;\n    vec2 e = vec2(0.01,0.0);\n    nor.x = map(pos + e.xyy) - map(pos - e.xyy);\n    nor.y = map(pos + e.yxy) - map(pos - e.yxy);\n    nor.z = map(pos + e.yyx) - map(pos - e.yyx);\n    return normalize(nor);\n}\n\nfloat calcShadow(in vec3 ro, in vec3 rd){\n    float res = 1.0;\n    float t = 0.1;\n    for (int i = 0; i <64; i++){\n    \tvec3 pos = ro + t*rd;\n        float h = map(pos);\n       res = min( res, max(h,0.0)*164.0/t );\n        if(res< 0.0001) break;\n        t+=h*0.5;\n    }\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    vec2 q = -1.0 + 2.0*p;\n    q.x *= 1.777; \n    \n    vec3 ro = vec3(0.0, 1.65, -iTime);\n    vec3 rd = normalize( vec3(q, -1.0));\n    \n    vec3 col = vec3(0.7, 0.8, 1.0);\n    col *= 1.0 -0.5 *rd.y;\n    float tmax =40.0;\n    float t = 0.0;\n    \n    for(int i=0; i<256; i++){\n    \tvec3 pos = ro + rd*t;\n        float h = map(pos);\n        if(h < 0.001 || t > tmax) break;\n        \n        t += h*0.5;\n    }\n    \n    vec3 light = normalize(vec3(1.0,0.1,-0.5));\n    \n    if(t < tmax){\n        vec3 pos = ro + t*rd;\n        vec3 nor = calcNormal(pos);\n        float sha = calcShadow(pos + nor *0.1,light);\n\n        float dif = clamp (dot(nor,light), 0.0,1.0);\n        vec3 lig = vec3(2.0, 1.5,1.0)*dif *sha;\n        lig += vec3(0.1,0.2,0.3)*nor.y *2.0;\n        \n        \n        vec3 mate = vec3(0.2, 0.3, 0.3)*0.5; \n        mate = mix(mate, vec3(0.2,0.15,0.1), smoothstep(0.7,0.9,nor.y));\n    \tcol = lig * mate;\n        \n        float fog = exp(-0.002 *t * t);\n        col *= fog;\n        col += ((1.0 - fog)*vec3(0.5,0.6,0.7));\n    }\n    \n    // gamut for monitor\n    col = sqrt(col);\n    \n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}