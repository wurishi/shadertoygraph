{"ver":"0.1","info":{"id":"tdGBDD","date":"1607131247","viewed":889,"name":"Nyan Cat ported to Rust! +Audio","username":"Boscop","description":"Originals:\nVisual: https://www.shadertoy.com/view/lsX3Rr\nSound: https://www.shadertoy.com/view/XtB3zc","likes":5,"published":1,"flags":8,"usePreview":0,"tags":["nyan","nyancat","cat","rust"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nimpl Uniforms {\n    fn main_image(\n        &mut self,\n        frag_color: &mut Vec4,\n        frag_coord: Vec2,\n        channel0: SampledImage<Image2d>,\n        channel1: SampledImage<Image2d>,\n        _channel2: SampledImage<Image2d>,\n        _channel3: SampledImage<Image2d>,\n    ) {\n        let p = frag_coord / self.resolution.xy();\n        let uv = vec2(p.x + self.time % 2.0, p.y);\n        let bg = vec3(0.0, 51.0 / 255.0, 102.0 / 255.0);\n        let f = texture(channel1, uv).x;\n        let f = f * f;\n        let mut bg = mix(bg, Vec3::splat(1.0), f);\n        let a = 0.01 * (40.0 * p.x + 40.0 * self.time).sin();\n        let mut h = (a + p.y - 0.3) / (0.7 - 0.3);\n        if p.x < 0.65 && h > 0.0 && h < 1.0 {\n            h = (h * 6.0).floor();\n            bg = mix(\n                bg,\n                vec3(1.0, 0.0, 0.0),\n                1.0 - smoothstep(0.0, 0.1, (h - 5.0).abs()),\n            );\n            bg = mix(\n                bg,\n                vec3(1.0, 0.6, 0.0),\n                1.0 - smoothstep(0.0, 0.1, (h - 4.0).abs()),\n            );\n            bg = mix(\n                bg,\n                vec3(1.0, 1.0, 0.0),\n                1.0 - smoothstep(0.0, 0.1, (h - 3.0).abs()),\n            );\n            bg = mix(\n                bg,\n                vec3(0.2, 1.0, 0.0),\n                1.0 - smoothstep(0.0, 0.1, (h - 2.0).abs()),\n            );\n            bg = mix(\n                bg,\n                vec3(0.0, 0.6, 1.0),\n                1.0 - smoothstep(0.0, 0.1, (h - 1.0).abs()),\n            );\n            bg = mix(\n                bg,\n                vec3(0.4, 0.2, 1.0),\n                1.0 - smoothstep(0.0, 0.1, (h - 0.0).abs()),\n            );\n        }\n        let uv = (p - vec2(0.5, 0.15)) / (vec2(1.02, 0.9) - vec2(0.5, 0.15));\n        let mut uv = uv.map(|c| c.clamp(0.0, 1.0));\n        let ofx = (self.time * 10.0 * 2.0 % 6.0).floor();\n        let ww = 40.0 / 256.0;\n        uv.y = 1.0 - uv.y;\n        uv.x = (uv.x * ww + ofx * ww).clamp(0.0, 1.0);\n        let fg = texture(channel0, uv);\n        let col = mix(bg, fg.xyz(), fg.w);\n        *frag_color = col.extend(1.0);\n    }\n}\n*/\n\nstruct for_r_unsafe_fn\n{\n    int empty_struct_member;\n};\nstruct f32_vec3_Vec3\n{\n    float x;\n    float y;\n    float z;\n};\nstruct Uniforms\n{\n    vec3 resolution;\n    vec4 mouse;\n    vec4 date;\n    float time;\n    float sample_rate;\n    int frame;\n    float time_delta;\n    float frame_rate;\n    float channel_time[4];\n};\nint _129;\nvec2 _130;\nvec4 _131;\nfloat _132;\nf32_vec3_Vec3 _133;\nvoid _glam_f32_vec3_Vec3_as_core_convert_Into_glam_f32_vec3a_Vec3A_into(inout vec3 _534, f32_vec3_Vec3 _535)\n{\n    f32_vec3_Vec3 _537;\n    _537 = _535;\n    _534.x = _537.x;\n    _534.y = _537.y;\n    _534.z = _537.z;\n}\nvoid _spirv_std_textures_SampledImage_spirv_std_textures_Image2d_sample(out vec4 _569, sampler2D _570, vec3 _571)\n{\n    _569.x = 0.0;\n    _569.y = 0.0;\n    _569.z = 0.0;\n    _569.w = 0.0;\n    _569 = texture(_570, _571.xy);\n}\nvoid shared_mix_glam_f32_vec3_Vec3_f32_(inout f32_vec3_Vec3 _475, f32_vec3_Vec3 _476, f32_vec3_Vec3 _477, float _478)\n{\n    f32_vec3_Vec3 _480;\n    _480 = _476;\n    f32_vec3_Vec3 _481;\n    _481 = _476;\n    f32_vec3_Vec3 _492 = _133;\n    _492.x = _481.x * _478;\n    f32_vec3_Vec3 _493 = _492;\n    _493.y = _481.y * _478;\n    f32_vec3_Vec3 _494 = _493;\n    _494.z = _481.z * _478;\n    f32_vec3_Vec3 _507 = _133;\n    _507.x = _480.x - _494.x;\n    f32_vec3_Vec3 _508 = _507;\n    _508.y = _480.y - _494.y;\n    f32_vec3_Vec3 _509 = _508;\n    _509.z = _480.z - _494.z;\n    f32_vec3_Vec3 _482;\n    _482 = _477;\n    f32_vec3_Vec3 _519 = _133;\n    _519.x = _482.x * _478;\n    f32_vec3_Vec3 _520 = _519;\n    _520.y = _482.y * _478;\n    f32_vec3_Vec3 _521 = _520;\n    _521.z = _482.z * _478;\n    _475.x = _509.x + _521.x;\n    _475.y = _509.y + _521.y;\n    _475.z = _509.z + _521.z;\n}\nfloat shared_saturate(float _547)\n{\n    return min(max(_547, 0.0), 1.0);\n}\nfloat shared_smoothstep(float _551, float _552, float _553)\n{\n    float _558 = shared_saturate((_553 - _551) / (_552 - _551));\n    return (_558 * _558) * (3.0 - (2.0 * _558));\n}\nfloat _f32_as_shared_Clamp_clamp(float _563, float _564, float _565)\n{\n    return min(max(_563, _564), _565);\n}\nfloat _texread_Uniforms_main_image_closure_0_(for_r_unsafe_fn _146, float _147)\n{\n    return _f32_as_shared_Clamp_clamp(_147, 0.0, 1.0);\n}\nvoid _glam_f32_vec2_Vec2_as_rustoy_std_Vec2Ext_map_texread_Uniforms_main_image_closure_0_(inout vec2 _134, vec2 _135)\n{\n    for_r_unsafe_fn _137;\n    _134.x = _texread_Uniforms_main_image_closure_0_(_137, _135.x);\n    _134.y = _texread_Uniforms_main_image_closure_0_(_137, _135.y);\n}\nvoid _texread_Uniforms_main_image(Uniforms _150, inout vec4 _151, vec2 _152, sampler2D _153, sampler2D _154, sampler2D _155, sampler2D _156)\n{\n    vec2 _201 = _130;\n    _201.x = _150.resolution.x;\n    vec2 _202 = _201;\n    _202.y = _150.resolution.y;\n    vec2 _209 = _130;\n    _209.x = _152.x / _202.x;\n    vec2 _210 = _209;\n    _210.y = _152.y / _202.y;\n    vec2 _217 = _130;\n    _217.x = _210.x + (_150.time - 2.0 * floor(_150.time / 2.0));\n    vec2 _218 = _217;\n    _218.y = _210.y;\n    f32_vec3_Vec3 _158;\n    _158.x = 0.0;\n    _158.y = 0.20000000298023223876953125;\n    _158.z = 0.4000000059604644775390625;\n    f32_vec3_Vec3 _189;\n    _189.x = _218.x;\n    _189.y = _218.y;\n    _189.z = 0.0;\n    vec3 _190;\n    _glam_f32_vec3_Vec3_as_core_convert_Into_glam_f32_vec3a_Vec3A_into(_190, _189);\n    vec3 _191 = _190;\n    vec4 _186;\n    _spirv_std_textures_SampledImage_spirv_std_textures_Image2d_sample(_186, _154, _191);\n    f32_vec3_Vec3 _160;\n    _160 = _158;\n    f32_vec3_Vec3 _161;\n    _161.x = 1.0;\n    _161.y = 1.0;\n    _161.z = 1.0;\n    f32_vec3_Vec3 _159;\n    shared_mix_glam_f32_vec3_Vec3_f32_(_159, _160, _161, _186.x * _186.x);\n    float _248 = (((0.00999999977648258209228515625 * sin((40.0 * _210.x) + (40.0 * _150.time))) + _210.y) - 0.300000011920928955078125) / 0.39999997615814208984375;\n    int _262;\n    bool _263;\n    bool _264;\n    if (_210.x < 0.64999997615814208984375)\n    {\n        int _259;\n        bool _260;\n        bool _261;\n        if (_248 > 0.0)\n        {\n            _259 = true ? int(1) : int(0);\n            _260 = true;\n            _261 = false;\n        }\n        else\n        {\n            _259 = _129;\n            _260 = false;\n            _261 = true;\n        }\n        _262 = _259;\n        _263 = _260;\n        _264 = _261;\n    }\n    else\n    {\n        _262 = _129;\n        _263 = false;\n        _264 = true;\n    }\n    int _269;\n    bool _270;\n    if (_264)\n    {\n        _269 = false ? int(1) : int(0);\n        _270 = true;\n    }\n    else\n    {\n        _269 = _262;\n        _270 = _263;\n    }\n    if (_270)\n    {\n        int _286;\n        bool _287;\n        bool _288;\n        if (_269 != int(0))\n        {\n            int _283;\n            bool _284;\n            bool _285;\n            if (_248 < 1.0)\n            {\n                _283 = true ? int(1) : int(0);\n                _284 = true;\n                _285 = false;\n            }\n            else\n            {\n                _283 = _129;\n                _284 = false;\n                _285 = true;\n            }\n            _286 = _283;\n            _287 = _284;\n            _288 = _285;\n        }\n        else\n        {\n            _286 = _129;\n            _287 = false;\n            _288 = true;\n        }\n        int _293;\n        bool _294;\n        if (_288)\n        {\n            _293 = false ? int(1) : int(0);\n            _294 = true;\n        }\n        else\n        {\n            _293 = _286;\n            _294 = _287;\n        }\n        if (_294)\n        {\n            float _352;\n            float _353;\n            float _354;\n            float _355;\n            float _356;\n            float _357;\n            float _358;\n            float _359;\n            if (_293 != int(0))\n            {\n                float _303 = floor(_248 * 6.0);\n                f32_vec3_Vec3 _163;\n                _163 = _159;\n                f32_vec3_Vec3 _164;\n                _164.x = 1.0;\n                _164.y = 0.0;\n                _164.z = 0.0;\n                float _308 = abs(_303 - 5.0);\n                f32_vec3_Vec3 _162;\n                shared_mix_glam_f32_vec3_Vec3_f32_(_162, _163, _164, 1.0 - shared_smoothstep(0.0, 0.100000001490116119384765625, _308));\n                _159 = _162;\n                f32_vec3_Vec3 _166;\n                _166 = _159;\n                f32_vec3_Vec3 _167;\n                _167.x = 1.0;\n                _167.y = 0.60000002384185791015625;\n                _167.z = 0.0;\n                float _316 = abs(_303 - 4.0);\n                f32_vec3_Vec3 _165;\n                shared_mix_glam_f32_vec3_Vec3_f32_(_165, _166, _167, 1.0 - shared_smoothstep(0.0, 0.100000001490116119384765625, _316));\n                _159 = _165;\n                f32_vec3_Vec3 _169;\n                _169 = _159;\n                f32_vec3_Vec3 _170;\n                _170.x = 1.0;\n                _170.y = 1.0;\n                _170.z = 0.0;\n                float _324 = abs(_303 - 3.0);\n                f32_vec3_Vec3 _168;\n                shared_mix_glam_f32_vec3_Vec3_f32_(_168, _169, _170, 1.0 - shared_smoothstep(0.0, 0.100000001490116119384765625, _324));\n                _159 = _168;\n                f32_vec3_Vec3 _172;\n                _172 = _159;\n                f32_vec3_Vec3 _173;\n                _173.x = 0.20000000298023223876953125;\n                _173.y = 1.0;\n                _173.z = 0.0;\n                float _332 = abs(_303 - 2.0);\n                f32_vec3_Vec3 _171;\n                shared_mix_glam_f32_vec3_Vec3_f32_(_171, _172, _173, 1.0 - shared_smoothstep(0.0, 0.100000001490116119384765625, _332));\n                _159 = _171;\n                f32_vec3_Vec3 _175;\n                _175 = _159;\n                f32_vec3_Vec3 _176;\n                _176.x = 0.0;\n                _176.y = 0.60000002384185791015625;\n                _176.z = 1.0;\n                float _340 = abs(_303 - 1.0);\n                f32_vec3_Vec3 _174;\n                shared_mix_glam_f32_vec3_Vec3_f32_(_174, _175, _176, 1.0 - shared_smoothstep(0.0, 0.100000001490116119384765625, _340));\n                _159 = _174;\n                f32_vec3_Vec3 _178;\n                _178 = _159;\n                f32_vec3_Vec3 _179;\n                _179.x = 0.4000000059604644775390625;\n                _179.y = 0.20000000298023223876953125;\n                _179.z = 1.0;\n                float _348 = abs(_303 - 0.0);\n                f32_vec3_Vec3 _177;\n                shared_mix_glam_f32_vec3_Vec3_f32_(_177, _178, _179, 1.0 - shared_smoothstep(0.0, 0.100000001490116119384765625, _348));\n                _159 = _177;\n                _352 = _348;\n                _353 = _340;\n                _354 = _332;\n                _355 = _324;\n                _356 = _316;\n                _357 = _308;\n                _358 = _303;\n                _359 = _303;\n            }\n            else\n            {\n                _352 = _132;\n                _353 = _132;\n                _354 = _132;\n                _355 = _132;\n                _356 = _132;\n                _357 = _132;\n                _358 = _132;\n                _359 = _248;\n            }\n            vec2 _360 = _130;\n            _360.x = 0.5;\n            vec2 _361 = _360;\n            _361.y = 0.1500000059604644775390625;\n            vec2 _368 = _130;\n            _368.x = _210.x - _361.x;\n            vec2 _369 = _368;\n            _369.y = _210.y - _361.y;\n            vec2 _370 = _130;\n            _370.x = 1.019999980926513671875;\n            vec2 _371 = _370;\n            _371.y = 0.89999997615814208984375;\n            vec2 _372 = _130;\n            _372.x = 0.5;\n            vec2 _373 = _372;\n            _373.y = 0.1500000059604644775390625;\n            vec2 _380 = _130;\n            _380.x = _371.x - _373.x;\n            vec2 _381 = _380;\n            _381.y = _371.y - _373.y;\n            vec2 _180;\n            _180.x = _369.x / _381.x;\n            _180.y = _369.y / _381.y;\n            vec2 _181;\n            _glam_f32_vec2_Vec2_as_rustoy_std_Vec2Ext_map_texread_Uniforms_main_image_closure_0_(_181, _180);\n            float _394 = (_150.time * 10.0) * 2.0;\n            _181.y = 1.0 - _181.y;\n            _181.x = _f32_as_shared_Clamp_clamp((_181.x * 0.15625) + (floor(_394 - 6.0 * floor(_394 / 6.0)) * 0.15625), 0.0, 1.0);\n            f32_vec3_Vec3 _193;\n            _193.x = _181.x;\n            _193.y = _181.y;\n            _193.z = 0.0;\n            vec3 _194;\n            _glam_f32_vec3_Vec3_as_core_convert_Into_glam_f32_vec3a_Vec3A_into(_194, _193);\n            vec3 _195 = _194;\n            vec4 _187;\n            _spirv_std_textures_SampledImage_spirv_std_textures_Image2d_sample(_187, _153, _195);\n            f32_vec3_Vec3 _183;\n            _183 = _159;\n            f32_vec3_Vec3 _184;\n            _184.x = _187.x;\n            _184.y = _187.y;\n            _184.z = _187.z;\n            f32_vec3_Vec3 _182;\n            shared_mix_glam_f32_vec3_Vec3_f32_(_182, _183, _184, _187.w);\n            f32_vec3_Vec3 _185;\n            _185 = _182;\n            vec4 _432 = _131;\n            _432.x = _185.x;\n            vec4 _433 = _432;\n            _433.y = _185.y;\n            vec4 _434 = _433;\n            _434.z = _185.z;\n            vec4 _435 = _434;\n            _435.w = 1.0;\n            _151 = _435;\n            return;\n        }\n        else\n        {\n        }\n    }\n    else\n    {\n    }\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){_texread_Uniforms_main_image(Uniforms(iResolution, iMouse, iDate, iTime, iSampleRate, iFrame, iTimeDelta, iFrameRate, iChannelTime), fragColor, fragCoord, iChannel0, iChannel1, iChannel2, iChannel3);}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"struct Uniforms\n{\n    vec4 date;\n    float sample_rate;\n    float time_offset;\n    int sample_offset;\n};\nstruct State\n{\n    vec3 a1;\n    vec3 a2;\n    float ct;\n};\nfloat _112;\nvec2 _113;\nvec4 _114;\nvoid _nyan_cat_sound_State_n1(inout State _184, int _185, int _186)\n{\n    if (_184.ct > _184.a1.x)\n    {\n        _184.a1.z = _184.a1.x;\n        _184.a1.y = float(_186);\n    }\n    else\n    {\n    }\n    _184.a1.x += float(_185);\n}\nvoid _nyan_cat_sound_State_n2(inout State _212, int _213, int _214)\n{\n    if (_212.ct > _212.a2.x)\n    {\n        _212.a2.z = _212.a2.x;\n        _212.a2.y = float(_214);\n    }\n    else\n    {\n    }\n    _212.a2.x += float(_213);\n}\nvoid _nyan_cat_sound_State_composition(inout State _240)\n{\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 18, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n1(_240, 12, 21);\n    _nyan_cat_sound_State_n1(_240, 12, 14);\n    _nyan_cat_sound_State_n2(_240, 18, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n2(_240, 18, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 14);\n    _nyan_cat_sound_State_n1(_240, 6, 28);\n    _nyan_cat_sound_State_n1(_240, 6, 42);\n    _nyan_cat_sound_State_n1(_240, 6, 28);\n    _nyan_cat_sound_State_n2(_240, 18, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 13);\n    _nyan_cat_sound_State_n1(_240, 12, 14);\n    _nyan_cat_sound_State_n1(_240, 12, 21);\n    _nyan_cat_sound_State_n2(_240, 18, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n1(_240, 12, 21);\n    _nyan_cat_sound_State_n2(_240, 18, -10);\n    _nyan_cat_sound_State_n1(_240, 12, 14);\n    _nyan_cat_sound_State_n1(_240, 6, 28);\n    _nyan_cat_sound_State_n2(_240, 18, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 13);\n    _nyan_cat_sound_State_n1(_240, 6, 14);\n    _nyan_cat_sound_State_n1(_240, 6, 28);\n    _nyan_cat_sound_State_n1(_240, 6, 31);\n    _nyan_cat_sound_State_n2(_240, 18, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 42);\n    _nyan_cat_sound_State_n1(_240, 6, 31);\n    _nyan_cat_sound_State_n1(_240, 6, 28);\n    _nyan_cat_sound_State_n1(_240, 12, 21);\n    _nyan_cat_sound_State_n2(_240, 12, -17);\n    _nyan_cat_sound_State_n1(_240, 12, 23);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -15);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -18);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -13);\n    _nyan_cat_sound_State_n1(_240, 12, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 12, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -20);\n    _nyan_cat_sound_State_n1(_240, 6, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -8);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -15);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n1(_240, 6, 23);\n    _nyan_cat_sound_State_n2(_240, 12, -34);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -34);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 12, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -17);\n    _nyan_cat_sound_State_n1(_240, 12, 21);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 23);\n    _nyan_cat_sound_State_n2(_240, 12, -15);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -18);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -13);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 12, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -20);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -8);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -15);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -34);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 12, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -34);\n    _nyan_cat_sound_State_n1(_240, 12, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 12, 21);\n    _nyan_cat_sound_State_n2(_240, 12, -17);\n    _nyan_cat_sound_State_n1(_240, 12, 23);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -15);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -18);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -13);\n    _nyan_cat_sound_State_n1(_240, 12, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 12, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -20);\n    _nyan_cat_sound_State_n1(_240, 6, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -8);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -15);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n1(_240, 6, 23);\n    _nyan_cat_sound_State_n2(_240, 12, -34);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -34);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 12, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -17);\n    _nyan_cat_sound_State_n1(_240, 12, 21);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 23);\n    _nyan_cat_sound_State_n2(_240, 12, -15);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -18);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -13);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 12, 17);\n    _nyan_cat_sound_State_n2(_240, 12, -20);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -8);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -15);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -34);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 12, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -34);\n    _nyan_cat_sound_State_n1(_240, 12, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, 7);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n2(_240, 12, 6);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -8);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 6);\n    _nyan_cat_sound_State_n1(_240, 6, 7);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, 7);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n2(_240, 12, 6);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -8);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 1);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 12, 1);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, 7);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n2(_240, 12, 6);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -8);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 6);\n    _nyan_cat_sound_State_n1(_240, 6, 7);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n2(_240, 12, 7);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n2(_240, 12, 6);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -8);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -5);\n    _nyan_cat_sound_State_n1(_240, 6, 1);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -1);\n    _nyan_cat_sound_State_n1(_240, 6, 9);\n    _nyan_cat_sound_State_n1(_240, 6, 11);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n    _nyan_cat_sound_State_n1(_240, 6, 2);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n2(_240, 12, -22);\n    _nyan_cat_sound_State_n1(_240, 6, 18);\n    _nyan_cat_sound_State_n1(_240, 6, 19);\n    _nyan_cat_sound_State_n2(_240, 12, -6);\n    _nyan_cat_sound_State_n1(_240, 6, 21);\n    _nyan_cat_sound_State_n1(_240, 12, 2);\n    _nyan_cat_sound_State_n2(_240, 12, -3);\n    _nyan_cat_sound_State_n1(_240, 12, 16);\n    _nyan_cat_sound_State_n2(_240, 12, -10);\n}\nfloat nyan_cat_sound_note_to_freq(float _142)\n{\n    return 440.0 * pow(2.0, _142 / 12.0);\n}\nfloat _f32_as_shared_Clamp_clamp(float _734, float _735, float _736)\n{\n    return min(max(_734, _735), _736);\n}\nfloat nyan_cat_sound_piano(float _115, float _116)\n{\n    float _118 = _115 * _116;\n    float _124;\n    float _125;\n    float _126;\n    float _127;\n    if (_118 == 0.0)\n    {\n        _124 = _112;\n        _125 = 0.0;\n        _126 = _112;\n        _127 = 0.0;\n    }\n    else\n    {\n        float _123 = _118 - 1.0 * trunc(_118 / 1.0);\n        _124 = _123;\n        _125 = _112;\n        _126 = 1.0;\n        _127 = _123;\n    }\n    float _133;\n    float _134;\n    if (!(_127 == _127))\n    {\n        _133 = _112;\n        _134 = _118;\n    }\n    else\n    {\n        float _132 = _118 - _127;\n        _133 = _132;\n        _134 = _132;\n    }\n    return (0.4000000059604644775390625 * (_118 - _134)) * _f32_as_shared_Clamp_clamp(1.0 - ((0.00779999978840351104736328125 * _115) * _116), 0.0, 1.0);\n}\nfloat _nyan_cat_sound_Uniforms_calc_sound(Uniforms _156, float _157)\n{\n    State _159;\n    _159.ct = _157;\n    _159.a1 = vec3(0.0);\n    _159.a2 = vec3(0.0);\n    _nyan_cat_sound_State_composition(_159);\n    return nyan_cat_sound_piano(nyan_cat_sound_note_to_freq(_159.a1.y), (_159.ct - _159.a1.z) * 0.02500000037252902984619140625) + (0.5 * nyan_cat_sound_piano(nyan_cat_sound_note_to_freq(_159.a2.y), (_159.ct - _159.a2.z) * 0.02500000037252902984619140625));\n}\nvoid rustoy_std_vec2s(inout vec2 _729, float _730)\n{\n    _729.x = _730;\n    _729.y = _730;\n}\nvoid _nyan_cat_sound_Uniforms_main_sound(inout vec2 _147, Uniforms _148, int _149, float _150)\n{\n    rustoy_std_vec2s(_147, _nyan_cat_sound_Uniforms_calc_sound(_148, (_150 - 42.34999847412109375 * trunc(_150 / 42.34999847412109375)) / 0.02500000037252902984619140625));\n}\nvec2 mainSound(int s,float t){vec2 r;_nyan_cat_sound_Uniforms_main_sound(r,Uniforms(iDate,iSampleRate,iTimeOffset,iSampleOffset),s,t);return r;}\n","name":"Sound","description":"","type":"sound"}]}