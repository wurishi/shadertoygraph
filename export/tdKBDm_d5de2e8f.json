{"ver":"0.1","info":{"id":"tdKBDm","date":"1607335204","viewed":158,"name":"Fractal armor","username":"gaz","description":"3d","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU atan(1.)*8.\n\nvoid lookAt(inout vec3 rd,vec3 ro,vec3 ta,vec3 up){\n    vec3 w=normalize(ta-ro),u=normalize(cross(w,up));\n    rd=rd.x*u+rd.y*cross(u,w)+rd.z*w;\n}\n\nvoid rot(inout vec3 p,vec3 a,float t){\n\ta=normalize(a);\n\tvec3 u=cross(a,p),v=cross(a,u);\n\tp=u*sin(t)+v*cos(t)+a*dot(a,p);   \n}\n\nfloat mabs(float p)\n{\n    return abs(p)+exp(-p*p*8.);\n}\n\nvoid sfold45(inout vec2 p)\n{\n    vec2 v=normalize(vec2(1,-1.03));\n    float g=dot(p,v);\n    p-=(g-mabs(g))*v;\n}\n\nfloat map(vec3 p){\n\trot(p,vec3(cos(iTime*.03),sin(iTime*.02),sin(iTime*.05)*.5),iTime*.5);\n\tfloat s=4.;\n\tp=abs(p);\n    vec3 q=p;\n\tfor(int i=0;i<6;i++)\n\t{\n\t    p-=clamp(p,-1.,1.)*2.;\n    \tsfold45(p.xz);\n\t\tsfold45(p.yz);\n\t\tp*=-2.;\n        p-=q*2.5;\n        s*=2.;\n  \t}\n  \treturn length(p.xy)/s-.1;\n}\n\nvec3 calcNormal(vec3 p)\n{\n  vec3 n=vec3(0);\n  for(int i=0; i<4; i++){\n    vec3 e=.001*(vec3(9>>i&1, i>>1&1, i&1)*2.-1.);\n    n+=e*map(p+e);\n  }\n  return normalize(n);\n}\n\nfloat march(vec3 ro, vec3 rd, float near, float far)\n{\n    float t=near,d;\n    for(int i=0;i<150;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if (d<.001) return t;\n        if (t>=far) return far;\n    }\n    return far;\n}\n\nvec3 doColor(vec3 p)\n{\n    return (cos(vec3(7,6,4)+p*.2)*.5+.5)*2.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy*2.-iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(0,0,15);\n    vec3 rd = normalize(vec3(uv,2));\n    vec3 ta =vec3(0);\n    lookAt(rd,ro,ta,vec3(0,1,0));    \n    vec3 col= vec3(0,0,.03);\n\tconst float maxd=30.;\n    float t=march(ro,rd,0.,maxd);\n    if(t<maxd)\n    {\n        vec3 p=ro+rd*t;\n        col=doColor(p); \n        vec3 n=calcNormal(p);      \n\t\tvec3 lightPos=ro+vec3(2,5,2);\n    \tvec3 li=lightPos-p;\n\t\tfloat len=length(li);\n\t\tli/=len;\n\t\tfloat dif=clamp(dot(n,li),0.,1.);\n        col*=max(dif,.2);\n        float rimd=pow(clamp(1.-dot(reflect(-li,n),-rd),0.,1.),2.5);\n\t\tfloat frn=rimd+2.2*(1.-rimd);\n    \tcol*=frn*.6;\n        col*=max(.5+.5*n.y,.3);\n        col*=exp2(-4.*pow(max(0.,1.-map(p+n*.8)/.8),2.));\n        //col+=vec3(.8,.6,.2)*pow(clamp(dot(reflect(rd,n),li),0.,1.),100.);\n        col+=vec3(11.2,.6,.2)*pow(clamp(dot(reflect(rd,n),li),0.,1.),8.); \n    }\n    fragColor.xyz=col;\n}","name":"Image","description":"","type":"image"}]}