{"ver":"0.1","info":{"id":"XcVSzV","date":"1715469272","viewed":70,"name":"tempus fugit","username":"acoo","description":"just noodlin around :)","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","colors","palette","trig","layers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318530718\n#define PI 3.14159265359\n\n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) \n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    float aspect = iResolution.x / iResolution.y;\n    \n    int num = 8;\n    float dt = 1.0 / float(num);\n\n    vec3 tot = vec3(0.0);\n    int j = 0;\n    \n    float n = mix(0.0, aspect, smoothstep(0.0, 1.0, cos(iTime * 0.5) * 0.5 + 0.5));\n    \n    while(j < num / 2)\n    {\n        float i = 0.0;\n        float k = float(j) * iTime * 0.1 + 0.9;\n        \n        for(float t = 0.0; t < TAU; t += dt)\n        {   \n            float x = float(i) / float(num);\n            mat2 m = mat2(cos(k), sin(k), -sin(k), cos(k));\n            float pct = cos(iTime * dt * (t + x) + length(abs(uv))) * 0.5 + 0.5;\n            vec2 p = vec2(cos(t) * n, sin(t)) * pct;\n            p = m * p;\n            \n            float d = length(p);\n            \n            float size = d * 0.222;\n            float c = smoothstep(size + 0.01, size - 0.1, length(uv - p) - size * dt);\n            \n            vec3 color = c * palette(d);\n            tot += color;\n            \n            i++;\n        }\n\n        j++;\n    }\n\n    fragColor = vec4(vec3(tot), 1.0);\n}","name":"Image","description":"","type":"image"}]}