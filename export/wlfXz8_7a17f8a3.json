{"ver":"0.1","info":{"id":"wlfXz8","date":"1562661907","viewed":437,"name":"Somebody's Watching","username":"mosaic","description":"Click to view without polar transform","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//screenshake from https://www.shadertoy.com/view/XljBDc\n#define TileU 1.0\n#define TileV 3.0\n\n#define SpeedU -0.1\n#define SpeedV 0.0\n\n#define M_PI 3.1415926535897932384626433832795\n\n#define PI 3.14159\n#define TAU (PI * 2.)\n#define HPI (PI * .5)\n\n\nfloat HitCurve(float t,float hitFlag, float raiseFlag)\n{\n    t = mod(t,1.);\n    float hit = step(t,hitFlag);\n    float raise = step(raiseFlag,t);\n    float stay = 1. - raise - hit;\n    return 1. - (\n        pow(t / hitFlag,2.) * hit \n        + stay\n        + (cos((t - raiseFlag) * 1. / (1. - raiseFlag) * PI) * .5 + .5) * (raise)\n        );\n}\n\nfloat HitShakeCurve(float t, float hitFlag)\n{\n    t = mod(t, 1.);\n    return  step(hitFlag, t) * max(pow(hitFlag - t + 1., 18.), 0.);\n}\n\n\nfloat NB_SQUARE = 6.;\n\nfloat bpm = 50.;\n\n///============\n\n\nfloat divScotFlag( vec2 uv) {\n    float botRight = step( uv.x + uv.y, 1. );\n    float botLeft = step( uv.x + 1. - uv.y, 1. );\n    \n    // Scottish flag ( sorta )\n    float scotFlag = abs(botRight - botLeft);\n    float divider = step( uv.x, .5);\n    \n    // Divided scottish flag\n    return abs( divider - scotFlag);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n\t\n    //vignette\n    float dist = length(uv)/1.6;\n    float col = dist / 1.;\n \n    uv/=1.9;\n    uv.y+=.4;\n    \n    //mirror\n\tuv.x=abs(sin(iTime/2.)-uv.x);\n    \n    //map to polar coordinates\n    vec2 delta = uv - vec2(0.5,0.5);\n\tfloat radius = length(delta);\n\tfloat angle = atan(delta.y, delta.x) / 2. / M_PI;\n    \n    radius *= TileU;\n    radius += SpeedU *iMouse.x/500.;\n        \n    angle *= TileV;\n    angle += SpeedV * iMouse.x/500.;\n    \n    vec2 polarUV = vec2(radius, angle);\n\n    float time = iTime * bpm / 60. ;\n    float hit = .05;\n    float raise = .75;\n    \n    float shakeForce = 0.;\n      \n    for(float i = 0.; i < 6.; ++i)\n    {\n        float decal = (time + i) / NB_SQUARE;\n        shakeForce += HitShakeCurve(decal, hit);\n    }\n    \n    float shakeAmplitude = .025;\n    vec2 shake = vec2(sin(time * 3256.123), sin(time * 4256.365)) * shakeAmplitude * shakeForce;\n    \n    \n    //comment out this line to disable screen shake\n    polarUV += shake;\n    uv  += shake;\n    \n    //                                                                      colour effect\n   \n    \n   vec3 cool =   vec3( divScotFlag( fract(polarUV*4.-(iTime/10.) * 4.) ) )-col-vec3(.1,.9,.9);//+vec3(0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)));;\n    \n     vec3 other =   vec3( divScotFlag( fract(uv*4.-(iTime/10.) * 4.) ) )-col-vec3(.1,.9,.9);//+vec3(0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)));;\nif (iMouse.z <= 0.){   \nfragColor = vec4( vec3( cool  ),  1.0)+.4;\n       \n} else fragColor = vec4( vec3( other  ),  1.0)+.4;\n}    ","name":"Image","description":"","type":"image"}]}