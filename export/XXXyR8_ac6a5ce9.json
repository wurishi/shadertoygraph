{"ver":"0.1","info":{"id":"XXXyR8","date":"1725782779","viewed":31,"name":"sep62024","username":"brendanluu","description":"blackhole","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["popart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"sep62024v2\" by brendanluu. https://shadertoy.com/view/lf2fWt\n// 2024-09-08 08:05:59\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize the coordinates\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    // Center the coordinate system\n    uv *= 4.0;\n    \n    // Calculate the angle and distance from the center\n    float angle = atan(uv.y, uv.x);\n    float dist = length(uv);\n    \n    // Create the spiral effect\n    float spiral = (angle + iTime) / (2.0 * 3.14159);\n    spiral = fract(spiral * 8.0); // Adjust 4.0 to change the number of arms\n    \n    // Create rectangles\n    float rectSize = 0.1; // Adjust for smaller/larger rectangles\n    vec2 rectCoord = vec2(dist - spiral * 0.5, spiral);\n    vec2 rectId = floor(rectCoord / rectSize);\n    \n    // Alternate colors\n    float colorSwitch = mod(rectId.x + rectId.y, 2.0);\n    \n    // Set colors\n    vec3 color1 = vec3(1.0, 0.3, 0.1); // Bright red-orange\n    vec3 color2 = vec3(1.0); // White\n    \n    // Mix colors based on the rectangle ID\n    vec3 finalColor = mix(color1, color2, colorSwitch);\n    \n    // Add some shading based on distance from center\n    finalColor *= smoothstep(2.0, .7, dist);\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}