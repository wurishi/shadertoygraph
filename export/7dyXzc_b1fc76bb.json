{"ver":"0.1","info":{"id":"7dyXzc","date":"1635017337","viewed":149,"name":"After Effects: Displacement Map","username":"barton","description":"Possible implementation of Displacement Map effect from After Effects","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["displacement","effect","map","effects","aftereffects","aftereffects","after"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// \n// Somewhere I made full replication of some plugins/effects from After Effects.\n// All plugins are written in C++ and use Metal for rendering.\n// So, I would like to demonstrate some of them.\n//\n// This shader shows possible implementation of Displacement Map effect from After Effects.\n//\n// Effect Inputs:\n// - Displacement Map Layer: [Layer's Name][Source|Masks|Effect And Masks]\n// - Use For Horizontal Displacement: Red|Green|Blue|Alpha|Luminance|Hue|Lightness|Saturation|Full|Half|Off\n// - Max Horizontal Displacement: -100...100\n// - Use For Vertical Displacement: Red|Green|Blue|Alpha|Luminance|Hue|Lightness|Saturation|Full|Half|Off\n// - Max Vertical Displacement: -100...100\n// - Displacement Map Behavior: Center Map | Strech Map to Fit | Tile Map\n// - Wrap Pixels Around: true/false\n// - Expand Output\n// \n// So, this shader shows only one part of this effect - Horizontal Displacement \n// using red channel as map. \n//\n// The link about effect. The video is not mine, it's just for effect demonstration.\n// https://www.youtube.com/watch?v=JzJohgzY4S0\n// https://www.youtube.com/watch?v=XNHl5Dbw3Mw\n// \n\nconst float amountMin = -100.0;\nconst float amountMax = 100.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float value = abs(sin(iTime * 0.5));\n    float horizontal = mix(amountMin, amountMax, value);\n    float horizontalNormal = horizontal/(amountMax - amountMin) + 0.5;\n    float horizontalTarget = mix(-1.0, 1.0, horizontalNormal);\n\n    // Put any texture hire to make displacement from..\n    // In case iChannel0 the displacement will flow from the same texture.\n    // In case iChannel1 the displacement will flow from different texture.\n    vec4 originalColor = texture(iChannel1, uv);\n\n    float factorX = mix(-1.0, 1.0, originalColor.r) * horizontalTarget/6.6;\n    vec2 uvFinal = vec2(uv.x + factorX, uv.y);\n    vec4 outColor = texture(iChannel0, uvFinal);\n    float mask = step(0.0, uvFinal.x) * step(uvFinal.x, 1.0);\n\n    fragColor = mix(originalColor, outColor, mask);\n}","name":"Image","description":"","type":"image"}]}