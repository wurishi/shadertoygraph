{"ver":"0.1","info":{"id":"7s23RD","date":"1617075884","viewed":171,"name":"Bloom level evaluation","username":"dirkadirkadan","description":"Evaluating bloom levels","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["bloom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nSmall shader for evaluating different bloom ramps.\nComment / uncomment the defines below to see the bloom under the hood.\n\n*/\n\n#define BLOOM\n//#define DEBUG\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    #ifdef BLOOM\n    col += texture(iChannel0, uv).rgb;\n    #endif\n    \n    #ifndef DEBUG\n    col += texture(iChannel1, uv).rgb;\n    #endif\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    //col = pow(col+vec3(.18), vec3(3.4));\n    float fact = .333*(col.r+col.g+col.b);\n    col *= step(abs(cos(iTime*.1)), fact);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    float eps = .0025;\n    vec4 col = \n        texture(iChannel0, vec2(uv.x+eps, uv.y)) +\n        texture(iChannel0, vec2(uv.x+eps, uv.y+eps)) +\n        texture(iChannel0, vec2(uv.x+eps, uv.y-eps)) +\n        texture(iChannel0, vec2(uv.x-eps, uv.y-eps)) +\n        texture(iChannel0, vec2(uv.x-eps, uv.y)) +\n        texture(iChannel0, vec2(uv.x-eps, uv.y+eps)) +\n        texture(iChannel0, vec2(uv.x, uv.y+eps)) +\n        texture(iChannel0, vec2(uv.x, uv.y-eps)) +\n        texture(iChannel0, vec2(uv.x, uv.y));\n        \n    col /= 9.;\n    \n    fragColor = col;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    float eps = .005;\n    vec4 col = \n        texture(iChannel0, vec2(uv.x+eps, uv.y)) +\n        texture(iChannel0, vec2(uv.x+eps, uv.y+eps)) +\n        texture(iChannel0, vec2(uv.x+eps, uv.y-eps)) +\n        texture(iChannel0, vec2(uv.x-eps, uv.y-eps)) +\n        texture(iChannel0, vec2(uv.x-eps, uv.y)) +\n        texture(iChannel0, vec2(uv.x-eps, uv.y+eps)) +\n        texture(iChannel0, vec2(uv.x, uv.y+eps)) +\n        texture(iChannel0, vec2(uv.x, uv.y-eps)) +\n        texture(iChannel0, vec2(uv.x, uv.y));\n        \n    col /= 9.;\n    \n    fragColor = col;\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    float eps = .01;\n    vec4 col = \n        texture(iChannel0, vec2(uv.x+eps, uv.y)) +\n        texture(iChannel0, vec2(uv.x+eps, uv.y+eps)) +\n        texture(iChannel0, vec2(uv.x+eps, uv.y-eps)) +\n        texture(iChannel0, vec2(uv.x-eps, uv.y-eps)) +\n        texture(iChannel0, vec2(uv.x-eps, uv.y)) +\n        texture(iChannel0, vec2(uv.x-eps, uv.y+eps)) +\n        texture(iChannel0, vec2(uv.x, uv.y+eps)) +\n        texture(iChannel0, vec2(uv.x, uv.y-eps)) +\n        texture(iChannel0, vec2(uv.x, uv.y));\n        \n    col /= 9.;\n    \n    fragColor = col;\n}","name":"Buffer D","description":"","type":"buffer"}]}