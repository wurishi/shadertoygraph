{"ver":"0.1","info":{"id":"DtSyDD","date":"1691979686","viewed":39,"name":"Gamma Simp by wang","username":"wangyitu","description":"\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["color","gamma","linear"],"hasliked":0,"parentid":"DtSyWW","parentname":"Gamma Simpified Test"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lut1[] = float[256](//计算pow(color,2.2f)\n0.0f,\n5.07705e-06,\n2.3328e-05,\n5.69218e-05,\n0.000107187,\n0.000175124,\n0.000261544,\n0.000367136,\n0.000492504,\n0.000638183,\n0.000804658,\n0.000992374,\n0.00120174,\n0.00143313,\n0.00168692,\n0.00196342,\n0.00226295,\n0.00258583,\n0.00293232,\n0.0033027,\n0.00369724,\n0.00411618,\n0.00455975,\n0.0050282,\n0.00552174,\n0.00604059,\n0.00658496,\n0.00715504,\n0.00775103,\n0.00837312,\n0.00902149,\n0.00969633,\n0.0103978,\n0.0111261,\n0.0118813,\n0.0126637,\n0.0134734,\n0.0143105,\n0.0151752,\n0.0160677,\n0.0169881,\n0.0179364,\n0.018913,\n0.0199178,\n0.0209511,\n0.022013,\n0.0231036,\n0.0242229,\n0.0253713,\n0.0265487,\n0.0277553,\n0.0289912,\n0.0302565,\n0.0315514,\n0.0328759,\n0.0342302,\n0.0356144,\n0.0370285,\n0.0384727,\n0.0399472,\n0.0414519,\n0.042987,\n0.0445526,\n0.0461488,\n0.0477758,\n0.0494335,\n0.0511221,\n0.0528416,\n0.0545923,\n0.0563741,\n0.0581872,\n0.0600316,\n0.0619075,\n0.0638149,\n0.0657539,\n0.0677246,\n0.0697271,\n0.0717615,\n0.0738278,\n0.0759261,\n0.0780566,\n0.0802193,\n0.0824142,\n0.0846415,\n0.0869013,\n0.0891935,\n0.0915184,\n0.0938759,\n0.0962661,\n0.0986892,\n0.101145,\n0.103634,\n0.106156,\n0.108711,\n0.111299,\n0.113921,\n0.116576,\n0.119264,\n0.121986,\n0.124741,\n0.12753,\n0.130352,\n0.133209,\n0.136099,\n0.139022,\n0.14198,\n0.144972,\n0.147998,\n0.151058,\n0.154152,\n0.157281,\n0.160444,\n0.163641,\n0.166872,\n0.170138,\n0.173439,\n0.176774,\n0.180144,\n0.183549,\n0.186989,\n0.190463,\n0.193972,\n0.197516,\n0.201096,\n0.20471,\n0.20836,\n0.212044,\n0.215764,\n0.21952,\n0.22331,\n0.227137,\n0.230998,\n0.234895,\n0.238828,\n0.242796,\n0.2468,\n0.25084,\n0.254916,\n0.259027,\n0.263175,\n0.267358,\n0.271577,\n0.275833,\n0.280124,\n0.284452,\n0.288816,\n0.293216,\n0.297653,\n0.302126,\n0.306635,\n0.311181,\n0.315763,\n0.320382,\n0.325037,\n0.329729,\n0.334458,\n0.339223,\n0.344026,\n0.348865,\n0.353741,\n0.358654,\n0.363604,\n0.368591,\n0.373615,\n0.378676,\n0.383775,\n0.38891,\n0.394083,\n0.399293,\n0.404541,\n0.409826,\n0.415148,\n0.420508,\n0.425905,\n0.43134,\n0.436813,\n0.442323,\n0.447871,\n0.453456,\n0.45908,\n0.464741,\n0.47044,\n0.476177,\n0.481952,\n0.487765,\n0.493616,\n0.499505,\n0.505432,\n0.511398,\n0.517401,\n0.523443,\n0.529523,\n0.535642,\n0.541798,\n0.547994,\n0.554227,\n0.560499,\n0.56681,\n0.573159,\n0.579547,\n0.585973,\n0.592438,\n0.598942,\n0.605484,\n0.612066,\n0.618686,\n0.625345,\n0.632043,\n0.638779,\n0.645555,\n0.65237,\n0.659224,\n0.666117,\n0.673049,\n0.68002,\n0.687031,\n0.694081,\n0.701169,\n0.708298,\n0.715465,\n0.722672,\n0.729919,\n0.737205,\n0.74453,\n0.751895,\n0.7593,\n0.766744,\n0.774227,\n0.781751,\n0.789314,\n0.796917,\n0.804559,\n0.812241,\n0.819964,\n0.827726,\n0.835528,\n0.84337,\n0.851252,\n0.859174,\n0.867136,\n0.875138,\n0.88318,\n0.891262,\n0.899384,\n0.907547,\n0.91575,\n0.923993,\n0.932277,\n0.940601,\n0.948965,\n0.95737,\n0.965815,\n0.9743,\n0.982826,\n0.991393,\n1.0f\n);\n\nfloat lut2[] = float[256](//计算pow(color,0.45f)\n0.0,\n0.0826146,\n0.112855,\n0.135445,\n0.154164,\n0.170449,\n0.185023,\n0.198313,\n0.210595,\n0.222058,\n0.23284,\n0.243043,\n0.252748,\n0.262018,\n0.270903,\n0.279446,\n0.287681,\n0.295637,\n0.30334,\n0.310811,\n0.318068,\n0.325129,\n0.332007,\n0.338715,\n0.345265,\n0.351666,\n0.357927,\n0.364058,\n0.370065,\n0.375955,\n0.381735,\n0.387409,\n0.392984,\n0.398463,\n0.403852,\n0.409155,\n0.414375,\n0.419515,\n0.42458,\n0.429572,\n0.434494,\n0.439349,\n0.444139,\n0.448867,\n0.453535,\n0.458145,\n0.462698,\n0.467198,\n0.471645,\n0.476042,\n0.480389,\n0.484689,\n0.488943,\n0.493152,\n0.497318,\n0.501441,\n0.505524,\n0.509566,\n0.51357,\n0.517536,\n0.521465,\n0.525358,\n0.529216,\n0.53304,\n0.536831,\n0.54059,\n0.544317,\n0.548013,\n0.551678,\n0.555315,\n0.558922,\n0.562501,\n0.566052,\n0.569577,\n0.573075,\n0.576547,\n0.579993,\n0.583415,\n0.586813,\n0.590186,\n0.593536,\n0.596864,\n0.600168,\n0.603451,\n0.606712,\n0.609952,\n0.61317,\n0.616369,\n0.619547,\n0.622705,\n0.625844,\n0.628964,\n0.632065,\n0.635147,\n0.638211,\n0.641258,\n0.644286,\n0.647298,\n0.650292,\n0.65327,\n0.656231,\n0.659176,\n0.662105,\n0.665018,\n0.667916,\n0.670799,\n0.673666,\n0.676518,\n0.679356,\n0.68218,\n0.684989,\n0.687784,\n0.690566,\n0.693334,\n0.696088,\n0.698829,\n0.701557,\n0.704272,\n0.706975,\n0.709664,\n0.712342,\n0.715007,\n0.71766,\n0.720301,\n0.722931,\n0.725548,\n0.728155,\n0.73075,\n0.733333,\n0.735906,\n0.738468,\n0.741018,\n0.743559,\n0.746088,\n0.748607,\n0.751116,\n0.753615,\n0.756103,\n0.758582,\n0.761051,\n0.76351,\n0.765959,\n0.768399,\n0.770829,\n0.77325,\n0.775662,\n0.778065,\n0.780458,\n0.782843,\n0.785219,\n0.787586,\n0.789944,\n0.792294,\n0.794636,\n0.796969,\n0.799293,\n0.80161,\n0.803918,\n0.806218,\n0.80851,\n0.810795,\n0.813071,\n0.81534,\n0.817601,\n0.819854,\n0.8221,\n0.824338,\n0.826569,\n0.828793,\n0.831009,\n0.833219,\n0.835421,\n0.837616,\n0.839803,\n0.841985,\n0.844159,\n0.846326,\n0.848486,\n0.85064,\n0.852787,\n0.854928,\n0.857062,\n0.85919,\n0.861311,\n0.863426,\n0.865534,\n0.867636,\n0.869732,\n0.871822,\n0.873906,\n0.875984,\n0.878055,\n0.880121,\n0.882181,\n0.884235,\n0.886283,\n0.888326,\n0.890362,\n0.892393,\n0.894419,\n0.896438,\n0.898453,\n0.900461,\n0.902465,\n0.904462,\n0.906455,\n0.908442,\n0.910424,\n0.9124,\n0.914372,\n0.916338,\n0.918299,\n0.920255,\n0.922206,\n0.924151,\n0.926092,\n0.928028,\n0.929959,\n0.931885,\n0.933806,\n0.935723,\n0.937634,\n0.939541,\n0.941443,\n0.943341,\n0.945233,\n0.947122,\n0.949005,\n0.950884,\n0.952759,\n0.954629,\n0.956494,\n0.958355,\n0.960212,\n0.962064,\n0.963912,\n0.965756,\n0.967595,\n0.96943,\n0.971261,\n0.973088,\n0.97491,\n0.976728,\n0.978543,\n0.980353,\n0.982159,\n0.983961,\n0.985759,\n0.987552,\n0.989342,\n0.991128,\n0.992911,\n0.994689,\n0.996463,\n0.998233,\n1.0f\n);\n\nfloat gamma_simplified1(float color) //计算pow(color,2.2f)\n{\n    float res = 0.0;\n    \n    color *= 255.0;\n    highp int left = int(color);\n    \n    int right = left+1 > 255 ? 255 : left + 1;\n    float blend = fract(color);\n    \n    float col1 = lut1[left];\n    float col2 = lut1[right];\n    res = mix(col1,col2,blend);\n    \n    return res;\n    \n}\n\n\nfloat gamma_simplified2(float color) //计算pow(color,0.45f)\n{\n    float res = 0.0;\n    \n    color *= 255.0;\n    highp int left = int(color);\n    \n    int right = left+1 > 255 ? 255 : left + 1;\n    float blend = fract(color);\n    \n    float col1 = lut2[left];\n    float col2 = lut2[right];\n    res = mix(col1,col2,blend);\n    \n    return res;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float colorSpace = uv.x;\n    if (uv.y > 0.67)\n    {\n        // Convert from Linear to sRGB color //进行了gamma矫正\n        colorSpace = pow(colorSpace, 1.0 / 2.2);\n    }else if(uv.y > 0.33 && uv.y <= 0.67 ){\n        //简化后的gamma矫正\n        colorSpace = gamma_simplified2(colorSpace);\n    }else{\n        //没有经过gamma矫正\n        //colorSpace = gamma_simplified1(colorSpace);\n    }\n    fragColor = vec4(vec3(colorSpace),1.0);\n}\n      \n","name":"Image","description":"","type":"image"}]}