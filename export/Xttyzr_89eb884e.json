{"ver":"0.1","info":{"id":"Xttyzr","date":"1531322466","viewed":339,"name":"D2 Style Portal with alpha","username":"iKest","description":"Shader from https://www.shadertoy.com/view/ldKGDh with alpha chanel","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","noise","alpha"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Noise animation - Electric\n//by nimitz (stormoid.com) (twitter: @stormoid)\n//modified to look like a portal by Pleh\n//fbm tweaks by foxes\n\n//The domain is displaced by two fbm calls one for each axis.\n//Turbulent fbm (aka ridged) is used for better effect.\n\n#define time iTime*0.15\n#define tau 6.2831853\n\nmat2 makem2(in float theta){float c = cos(theta);float s = sin(theta);return mat2(c,-s,s,c);}\nfloat noise( in vec2 x ){return texture(iChannel0, x*.01).x;}\n\nfloat fbm(in vec2 p)\n{\t\nvec4 tt=fract(vec4(time*2.)+vec4(0.0,0.25,0.5,0.75));\nvec2 p1=p-normalize(p)*tt.x;\nvec2 p2=vec2(1.0)+p-normalize(p)*tt.y;\nvec2 p3=vec2(2.0)+p-normalize(p)*tt.z;\nvec2 p4=vec2(3.0)+p-normalize(p)*tt.w;\nvec4 tr=vec4(1.0)-abs(tt-vec4(0.5))*2.0;//*vec4(0.0,1.0,0.0,1.0);\nfloat z=2.;\nvec4 rz = vec4(0.);\nfor (float i= 1.;i < 4.;i++)\n{\nrz+= abs((vec4(noise(p1),noise(p2),noise(p3),noise(p4))-vec4(0.5))*2.)/z;\nz = z*2.;\np1 = p1*2.;\np2 = p2*2.;\np3 = p3*2.;\np4 = p4*2.;\n}\nreturn dot(rz,tr)*0.25;\n}\nfloat dualfbm(in vec2 p)\n{\n    //get two rotated fbm calls and displace the domain\n\tvec2 p2 = p*.7;\n\tvec2 basis = vec2(fbm(p2-time*1.6),fbm(p2+time*1.7));\n\tbasis = (basis-.5)*.2;\n\tp += basis;\n\t\n\t//coloring\n\treturn fbm(p); //*makem2(time*2.0));\n}\n\nfloat circ(vec2 p) \n{\n\tfloat r = length(p);\n\tr = log(sqrt(r));\n\treturn abs(mod(r*2.,tau)-4.54)*3.+.5;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//setup system\n\tvec2 uv = fragCoord.xy / iResolution.xy-0.5;\n\tuv.x *= iResolution.x/iResolution.y;\n\tvec2 p = uv * 4.;\n\t\n    float rz = dualfbm(p);\n\t\n\t//rings\n\t//p /= 7.0; //exp(mod(time*10.,3.14159));\n\t//rz *= pow(abs((0.0-circ(p))),.99);\n    \n    rz *= abs((-circ(vec2(p.x / 4.2, p.y / 7.0))));\n    rz *= abs((-circ(vec2(p.x / 4.2, p.y / 7.0))));\n    rz *= abs((-circ(vec2(p.x / 4.2, p.y / 7.0))));\n\t\n\t//final color\n\tvec4 col = vec4(.1,0.1,0.4, 0.05)/rz;\n\tcol=pow(abs(col),vec4(.99));\n    vec4 bg = texture(iChannel1, uv);\n\tfragColor = vec4((col.rgb*col.a + bg.rgb*(1.0-col.a)),1.0);\n}","name":"Image","description":"","type":"image"}]}