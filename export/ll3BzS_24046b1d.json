{"ver":"0.1","info":{"id":"ll3BzS","date":"1539983126","viewed":95,"name":"Breathing Mandelbrot.n","username":"t3knomanser","description":"Mandelbrot fractal wired to \"breathe\"","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITERS 1000.\n#define RADIUS 256.\n#define SCALE 1./256.\n#define C vec2(0.004*sin(iTime*0.5), 0.001*cos(iTime*0.4))\n#define STEPS 5\n\nvec3 palette[STEPS];\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\nfloat mandelbrot(vec2 st) {\n    float iter = 0., maxIter = ITERS;\n    vec2 s = st;\n    while ((st.x * st.x + st.y * st.y) < RADIUS && iter < maxIter) {\n        float x = st.x;\n        st.x = x * x - st.y * st.y + s.x;\n        st.y = 2.*x*st.y + s.y;\n        st += C;\n        iter += 1.;\n    }\n    return iter;\n}\n\nvoid buildPalette() {\n    palette[0] = vec3(0., 0.004, 0.0);\n    palette[1] = vec3(0.055, 0.227, 0.153);\n    palette[2] = vec3(0.173, 0.294, 0.075);\n    palette[3] = vec3(0.278, 0.318, 0.078);\n    palette[4] = vec3(0.49, 0.706, 0.612);\n}\n\nvec3 palletize(float c) {\n    float stp = 1.0/float(STEPS);\n    vec3 col = mix(palette[0], palette[1], smoothstep(0., stp, c));\n    for (int i = 1; i < STEPS; i++) {\n        float weight = smoothstep(stp*(float(i) + 1.), stp*(float(i)  + 2.), c);\n        col = mix(col, palette[i], weight);\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    buildPalette();\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //start in the mandelbrot space\n\tuv.x *= 3.5;\n    uv.x -= 2.5;\n    uv.y *= 2.;\n    uv.y -= 1.;\n    //find your spot in the fractal\n    uv *= scale(vec2(SCALE, SCALE));\n    uv -= vec2(0.835, 0.203);\n\n    //draw it\n    float c = 1. - mandelbrot(uv) / ITERS;\n    vec3 col = palletize(c);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}