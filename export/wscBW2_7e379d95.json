{"ver":"0.1","info":{"id":"wscBW2","date":"1605997572","viewed":65,"name":"mix(circle, square, sin)","username":"Ezra_Szanton","description":"A circle and a square walk into a sin wave","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["periodic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 center, float min, float max)\n{\n    return (1. - smoothstep(0.1, 0.15, length(uv - center)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pi = 3.14159;\n    float clamping = 0.714;\n    float points = 50.0;\n   \n    \n    vec2 uv = (fragCoord - 0.*iResolution.xy)/iResolution.y;\n    uv -= vec2(0.5);\n    \n    \n    //vec2 polar = vec2(length(uv), atan(uv.x / uv.y) * 1.14);\n    //uv = polar;\n    \n    \n    uv *= 10.;\n\n    vec3 col = vec3(0.);\n    \n    float numCircles = cos(iTime) * 50.  + 55.;\n    \n\n    vec3 color = vec3(0.5, 0.8, 0.85);\n    \n    \n    for(float i = 0.0; i < 1.0; i += 1.0 / points)\n    {\n        float offset = i * 2.0 * pi;\n    \tcol += circle(uv, 4.0 * vec2(clamp(cos(iTime * 0.0 + offset), -clamping, clamping), \n                                     clamp(sin(iTime * 0.0 + offset), -clamping, clamping)), 0.2, 0.25);\n    }\n    \n    for(float i = 0.0; i < 1.0; i += 1.0 / points)\n    {\n        float offset = i * 2.0 * pi;\n    \tcol += circle(uv, 4.0 * vec2(cos(iTime * 0.0 + offset), \n                                     sin(iTime * 0.0 + offset)), 0.2, 0.25);\n    }\n    \n    col = min(col, 1.0);\n    \n    col *= color;\n    col *= abs(sin(iTime / 4.0)) * 0.4;\n    \n    vec3 col2 = vec3(0.);\n    vec3 color2 = vec3(0.9, 0.8, 0.35);\n    \n    \n    for(float i = 0.0; i < 1.0; i += 1.0 / points)\n    {\n        float offset = i * 2.0 * pi;\n        \n        vec2 square = vec2(clamp(cos(iTime * 0.0 + offset), -clamping, clamping), clamp(sin(iTime * 0.0 + offset), -clamping, clamping));\n        vec2 circlePos = vec2(cos(iTime * 0.0 + offset), sin(iTime * 0.0 + offset));\n        \n    \tcol2 += circle(uv, 4.0 * mix(square, circlePos, sin(iTime)), 0.2, 0.25);\n    }\n    \n    col2 = min(col2, 1.0);\n    col2 *= color2;\n    \n    // Output to screen\n    fragColor = vec4(col2 + col,1.0);\n}","name":"Image","description":"","type":"image"}]}