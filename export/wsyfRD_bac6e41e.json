{"ver":"0.1","info":{"id":"wsyfRD","date":"1606686270","viewed":683,"name":"paint / color mixer","username":"FabriceNeyret2","description":"select color on left and paint.\nSPACE:  toggle additive / subtractive blend. [ not working. WIP ]\nP:  pick color anywhere. Keep pressed to smudge.\nS:  toggle add/erasing color \nC:  clear  F: fill   T: bg texture","likes":16,"published":3,"flags":48,"usePreview":1,"tags":["paint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U ) { \n    \n    O = T(U); \n    O /= O.w;                                         // normalize color\n // if keyToggle(32) O = 1.-O;                        // switch to subtractive colors\n // O = pow( O, vec4(1./2.2) );                       // to sRGB\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, U = u / R.y, P,m;\n    vec4 M = iMouse;\n    O = T(u);                                                        // restore previous state\n    if (iFrame<1 || keyDown(64+3) )                                  // start or 'C': reset\n        O = vec4(0,0,0,1);\n    //  O = vec4(keyToggle(32)), O.w=1.;\n    if keyDown(64+6)  O = T(0);                                      // 'F': fill with color\n    if keyDown(64+20) O = texture(iChannel1,U);                      // 'T': wood texture bg\n    if ( u == vec2(1.5) ) { O.xy = M.xy; return; }                   // memo prev mouse\n    if ( u == vec2(.5) ) {\n        if ( M.z > 0. && ( M.x/R.y < .1 || keyClick(64+16)) )        // choose color in palette or pick in paint\n            O = T(M.xy), O /= O.w; \n    //  else if keyDown(32) O.rgb = 1.-O.rgb;                        // inverse at switch colors mode\n        if keyDown(64+19) O.rgb = -O.rgb;                            // 'S': switch to negative colors\n        return;\n    }\n    if ( U.x<.1  ) {                                                 // display palette on left\n        float y = floor(9.*U.y);\n        O = y==8. ? vec4(1) : y==7. ? vec4(0) : hue( y/8.) ; O.w = 1.;\n        return;\n    }\n    \n    P = M.w > 0. ? M.xy : T(1).xy;                                   // prev mouse or start stroke \n    m = abs( (M.xy+P)/2. - u ) - abs(M.xy-P)/2.;                     // for bounding box\n    \n    if (M.z > 0.  && M.xy != P )                                     // paint\n      if ( max(m.x,m.y)< 20. )                                       // optim: bounding box\n        for( float  l = length(M.xy-P), d = 0.; d < l ; d++ )\n        O +=  S( length( mix( M.xy, P, d/l ) - u ) - 20. ) / 20. * T(0); \n        \n//  if keyDown(32) O.rgb = O.w - O.rgb;                              // inverse at switch colors mode\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T(U)            texelFetch( iChannel0, ivec2(U), 0 )\n#define hue(v)        ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) ) // https://www.shadertoy.com/view/llySRh\n#define keyToggle(a)  ( texelFetch(iChannel3,ivec2(a,2),0).x > 0.)\n#define keyDown(a)    ( texelFetch(iChannel3,ivec2(a,1),0).x > 0.)\n#define keyClick(a)   ( texelFetch(iChannel3,ivec2(a,0),0).x > 0.)\n#define S(v)            smoothstep( 1.5, 0., v )\n\n","name":"Common","description":"","type":"common"}]}