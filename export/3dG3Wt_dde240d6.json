{"ver":"0.1","info":{"id":"3dG3Wt","date":"1571147382","viewed":385,"name":"Kawase blur proof-of-concept","username":"ufna","description":"With preview","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["blur","kawase"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float CircleSize = 0.75;\nconst float SmoothPadding = 0.33;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Clear color\n    vec3 ClearColor = texture(iChannel1, uv).rgb;\n    \n    // Kawase bluer\n    vec4 BlurColor = vec4(0);\n    KawaseSample(BlurColor, fragCoord, 4.5);\n    \n    // Calculate clear vision circle\n    float AspectRatio = iResolution.x / iResolution.y;\n    vec2 VisionCenter = iMouse.xy/iResolution.xy;\n\n    vec2 v = uv - VisionCenter;\n    v.x = v.x * AspectRatio;\n\n    float CirleRadius = CircleSize / 2.0;\n    float SmoothRadius = CirleRadius * SmoothPadding;\n    float CircleMask = smoothstep(CirleRadius, CirleRadius - SmoothRadius, length(v));\n    BlurColor.rgb = mix(BlurColor.rgb, ClearColor.rgb, CircleMask);\n    \n    fragColor = vec4(BlurColor);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    KawaseSample(fragColor, fragCoord, 0.5);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    KawaseSample(fragColor, fragCoord, 1.5);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    KawaseSample(fragColor, fragCoord, 2.5);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    KawaseSample(fragColor, fragCoord, 3.5);\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"                            // Header: Enable access to inputs from Common tab\n                            // See https://www.shadertoy.com/view/ttf3R4\n                                #if __LINE__<17          // Must be on line 3!\n                                #define _ST_TAB_COMMON\n                                #endif\n                                #if __LINE__<25\n                                #define _ST_TAB_SOUND\n                                uniform vec3 iResolution; // Sound tab\n                                uniform float iTime;  // never defines these\n                                #endif\n                                #ifdef _ST_TAB_COMMON\n                                #undef _ST_TAB_SOUND\n                                uniform float iTimeDelta;\n                                uniform int iFrame;\n                                uniform float iChannelTime[4];\n                                uniform vec3 iChannelResolution[4];\n                                uniform vec4 iMouse;\n                                // iDate and iSampleRate: Alread have them.\n                                uniform sampler2D iChannel0;\n                                uniform sampler2D iChannel1; // Change type to\n                                uniform sampler2D iChannel2; // samplerCube\n                                uniform sampler2D iChannel3; // if Cube input\n                                #endif\n                            // End header\n\nvoid KawaseSample( out vec4 fragColor, in vec2 fragCoord, in float Shift)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 Resolution = iChannelResolution[0].xy;\n    \n    vec3 BlurColor = texture(iChannel0, uv + vec2(Shift, Shift) / Resolution).rgb;\n    BlurColor += texture(iChannel0, uv + vec2(Shift, -Shift) / Resolution).rgb;\n    BlurColor += texture(iChannel0, uv + vec2(-Shift, Shift) / Resolution).rgb;\n    BlurColor += texture(iChannel0, uv + vec2(-Shift, -Shift) / Resolution).rgb;\n    BlurColor /= 4.0;\n    \n    fragColor = vec4(BlurColor, 1.0);\n}\n","name":"Common","description":"","type":"common"}]}