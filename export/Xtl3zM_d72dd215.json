{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":1,"type":"texture","id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"const float pi = 3.1415926536;\n\n\n\n// Created by Sebastien DURAND - 2014\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n//----------------------------------------------------------------\n// A lot from IQ shader Bridge (https://www.shadertoy.com/view/Mds3z2)\n\n\n// Because does not works with trees in chrome update !!!??\n// Ok on Chrome Canary\n#define TREES\n\n\n#define NB_ITER 50 \n#define STEREOGRAPHIC\n\nbool withMen, withWomen;  // Optimization: only calculate head if it is visible by the current ray\n\nconst float cc = .866, ss = -.5;\nconst mat2 Rot = mat2(cc,ss,-ss,cc);\nconst mat2 Rot2 = mat2(cc,-ss,ss,cc);\n\nfloat noise( in vec2 x) {\n    vec2 f = fract(x);\n\treturn -1.0 + 2.0*textureLod( iChannel2, ((floor(x) + f.xy*f.xy*(3.0-2.0*f.xy))+0.5)/256.0, -100.0 ).x;\n}\n\n//----------------------------------------------------------------\n\nfloat sdTorus(in vec3 p, in vec3 t ) {\n  vec3 q = vec3(length(p.xz)-t.x,p.y,p.z);\n  return max(length(q.x)-t.y, length(q.y)-t.z);\n}\n\nfloat sdCapsule(in vec3 p, in vec3 a, in vec3 b, in float r1, in float r2 ) {\n    vec3 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - mix(r1,r2,h);\n}\n\nbool intersectSphere(in vec3 ro, in vec3 rd, in vec3 c, in float r) {\n    ro -= c;\n\tfloat b = dot(rd,ro), d = b*b - dot(ro,ro) + r*r;\n\treturn (d>0. && -sqrt(d)-b > 0.);\n}\n\n//----------------------------------------------------------------\n\nfloat smin( float a, float b, float k ) {\n\tfloat h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.-h);\n}\n\nvec2 smin(in vec2 a, in vec2 b ) {\n\tfloat h = clamp( .5 + 1.25*(b.x-a.x), 0., 1. );\n\treturn mix( b, a, h ) - .4*h*(1.-h);\n}\n\nvec2 mini(in vec2 a, in vec2 b ) {\n\treturn a.x<b.x?a:b;\n}\n\n//----------------------------------------------------------------\n\n\nfloat terrain(in vec2 p) {\n    p+=vec2(5,8.5);\n    return 3.3 + 2.*cos(.1*length(p))-(1.6-1.6*cos(p.x/4.5)*cos(p.y/3.5))+.006*noise(p.yx*35.); // very regular patern + a little bit of noise\n}\n\n\nfloat trees(in vec3 p, in float h ) { \n        vec2 v = p.xz;\n\tfloat e = .5*smoothstep( 0.4, 0.6, textureLod(iChannel1,0.001*v, -32.0).x )\n\t            *smoothstep( 23.0, 24.0, abs(p.z-3.) );\n    v = mod( v, 5.0 ) - 2.5;\n    float a = p.y - (h +6.0*e);\n    return max(dot(vec2(0.94,0.342), vec2(length(v),a)),a);\n  //  float a = p.y - (h + 3.0*smoothstep( 53., 54.0, abs(p.z-10.) ));\n  //  return max(dot(vec2(0.94,0.342), vec2(length( mod(p.xz, 10.0 ) - 5.),a)),a);\n}\n\nvec2 girl(vec3 p) {\n    p/=.85;\n\n    vec2 res = vec2(length(p-vec3(0,3,0))-1.8, 0.);\n    \n    if (withWomen) {\n\t\tres.x = min(res.x, length(p-vec3(0,5.3,0))-1.4);\n        p.xz*=Rot2;\n\n        vec3 p1 = p - vec3(0,5.3,0);\n\n        p1.xy*=Rot;\n\n        float angle = atan(p1.x,p1.z);\n        float k = .05*abs(cos(1.5+10.*angle));\n        float cc = cos(3.14-10.*p1.y);\n        float hat = sdTorus(p1, vec3(1.3,.3,.3))-.03*cc-.5*k;\n\n        if (p1.y>0.) hat = min(hat, length(p1)-1.5-.5*k);\n\n        hat = smin(hat, length(p-vec3(1.2,6.5,.0))-.4, 1.1);\n        p1.z=abs(p1.z);\n        hat = smin(hat, length(p1-vec3(-.54,-.6,1.34))-.18,.43);\n        float hat2 = length(p1-vec3(-.4,-.95,1.6))-.25;\n\n        vec3 p0 = p;    \n\n        p0-=vec3(0,4.3,0)*(1.+.05*cos(p0.x));\n\n        float echarpe = sdTorus(p0, vec3(1.3,.3,.3))-.05*cos(3.14-10.*p0.y);\n        float noze = sdCapsule(p, vec3(-1.6,5.1,0), vec3(0,5.,0), .12, .3 );\n\n        p.z = abs(p.z);\n        float eyes = length(p-vec3(-1.3,5.32,.25))-.15;\n        res = res.x<hat2 ? res : vec2(hat2, 8.); \n        res = res.x<eyes ? res : vec2(eyes, 12.); \n        res = res.x<noze ? res : vec2(noze, 13.); \n        res = res.x<hat ? res : vec2(hat,   mod(1.5708*angle,1.)>.5?8.:9.); \n        res = res.x<echarpe ? res : vec2(echarpe*.9, mod(1.5708*atan(p0.x,p0.z),1.)>.5?8.:9.); \n        res.x*=.9;\n    }\n    res.x*=.85;\n    return res;\n}\n\n\nvec2 man(vec3 p) {\n\tfloat body = min(\n            length(p-vec3(0,3,0))-1.8,\n        \tlength(p-vec3(0,5.3,0))-1.4);\n    vec2 res = vec2(body, 0.);\n    \n    vec3 p1=p;\n    p1.z = abs(p1.z);\n    float hand = min(sdCapsule(p1, vec3(.5,4.2,0), vec3(-1.6,3.2,2), .12, .09 ),\n                     sdCapsule(p1, vec3(-1.2,3.3,1.8), vec3(-1.6,3.6,2.1), .1, .05));\n\n    res = res.x<hand ? res : vec2(hand,    12.); \n\n    if (withMen) {\n        vec3 p1 = p - vec3(0,5.3,0);\n\n        p1.xy*=Rot;\n        p.xz*=Rot;\n\n        float angle = atan(p1.x,p1.z);\n        float k = .05*abs(cos(1.5+10.*angle));\n        float cc = cos(3.14-10.*p1.y);\n        float hat = sdTorus(p1, vec3(1.3,.3,.3))-.03*cc-1.1*k;\n        if (p1.y>0.) hat = min(hat, length(p1)-1.5-2.*k);\n\n        hat = min(hat, length(p1-vec3(.3,2.,.0))-.54);\n\n        vec3 p0 = p;    \n\n        p0-=vec3(0,4.3,0)*(1.+.05*cos(p0.x));\n\n        float echarpe = sdTorus(p0, vec3(1.3,.3,.3))-.05*cos(3.14-10.*p0.y);\n        float noze = sdCapsule(p, vec3(-1.8,5.1,0), vec3(0,5.,0), .12, .3 );\n\n        p.z = abs(p.z);\n        float eyes = length(p-vec3(-1.3,5.43,.3))-.15;\n\n        res = res.x<eyes    ? res : vec2(eyes,    12.); \n        res = res.x<noze    ? res : vec2(noze,    13.); \n        res = res.x<hat     ? res : vec2(hat,     mod(1.5708*angle,1.)>.5?10.:11.); \n        res = res.x<echarpe ? res : vec2(echarpe*.9, mod(1.5708*atan(p0.x,p0.z),1.)>.5?10.:11.); \n        res.x*= 0.9;\n    }\n    \n    return res;\n}\n\n\nvec2 map(in vec3 p) {\n\t// Terrain\n\tfloat h = terrain(p.xz);\n// return vec2(p.y - h, 0.);\n    // Snowmens\n    vec2 res =  smin(mini(man(p-vec3(-1.3,0,3)), girl(p-vec3(-2,0.25,8))), vec2(p.y - h, 0.));\n  \n    // Trees\n#ifdef TREES\n    float dis = trees(p,h);\n    return dis<res.x ? vec2(dis, 1.) : res;\n#else\n    return res;\n#endif \n}\n\nconst float precis = 0.0235;\nconst vec3 eps = vec3(precis,0.0,0.0);\n\nvec3 intersect( in vec3 ro, in vec3 rd ) {\n    float h = precis*1.5;\n#ifdef STEREOGRAPHIC\n    float t = .0;\n#else\n    float t = 4.0;\n#endif\n    vec2 res;\n    for( int i=0; i<NB_ITER; i++ ){\n        if(h<precis||t>100.) break;\n#ifdef STEREOGRAPHIC\n        h*=.9;\n#endif\n        t += h;\n\t    res = map( ro+rd*t );\n        h = res.x;\n    }\n    return vec3( t, res.y, (t>100.) ? -1.0 : res.y );\n}\n\nvec3 calcNormal( in vec3 pos ) {\n\treturn normalize( vec3(\n           map(pos+eps).x - map(pos-eps).x,\n           map(pos+eps.yxy).x - map(pos-eps.yxy).x,\n           map(pos+eps.yyx).x - map(pos-eps.yyx).x ) );\n}\n\nfloat softshadow( in vec3 ro, in vec3 rd, float k ) {\n  //  return .5;\n    float res=1., t=0.2, h=1.;\n    for( int i=0; i<46; i++ ) {\n        h = map(ro + rd*t).x;\n        res = min( res, k*h/t );\n\t\tt += clamp( h, 0.15, 1.0 );\n\t\tif( h<0.0012 ) break;\n    }\n    return clamp(res,0.0,1.0);\n}\n\n\nfloat calcOcc( in vec3 pos, in vec3 nor ) {\n    vec3 aopos;\n\tfloat hr, dd, totao = 0.0;\n    for(float aoi=0.; aoi<1.; aoi+=.125 ){\n        hr = 0.1 + 1.5*aoi*aoi;\n        aopos = pos + nor * hr;\n        dd = map( aopos ).x;\n\t\ttotao += max( 0.0, hr-3.0*dd-0.01);\n    }\n    return clamp( 1.0 - 0.15*totao, 0.0, 1.0 );\n}\n\n\nvec3 lig = normalize(vec3(-0.5,0.25,-0.3));\n\n\nvoid shade( in vec3 pos, in vec3 nor, in vec3 rd, in float matID, out vec3 mate){\n// TODO: use an Array\n    if( matID<0.5)        { mate = vec3(.8,.8,.8); }\n    else if( matID>12.5 ) { mate = vec3(4.,.2,.2); }\n    else if( matID>11.5 ) { mate = vec3(.1); }\n    else if( matID>9.5 )  { mate = mix(vec3(0,.5,.6),vec3(.3,.8,.9), matID-10.); }\n    else if( matID>7.5 )  { mate = mix(vec3(.6,0.2,.5),vec3(.9,.6,.8), matID-8.); }\n \telse/*if( matID>.5)*/ { mate = vec3(0.05,0.1,0); }   \n}\n\n\nfloat cloudShadow( in vec3 pos ) {\n\treturn 0.45 + 0.55*smoothstep( 0.1, 0.35, texture( iChannel1, 0.0003*(pos.xz + lig.xz*(100.0-pos.y)/lig.y) + 0.1+0.0043*iTime ).x );\n}\n\n\n#ifdef STEREOGRAPHIC\nvec3 getStereoDir(vec2 fragCoord)\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    float t = 3.+iTime*.08, ct = cos(t), st = sin(t);\n\tfloat m = .5;\n\n    p = (p * 2. * m - m)*3.1;\n    p.x *= iResolution.x/iResolution.y;\n    p *= mat2(ct,st,-st,ct);\n\n\treturn normalize(vec3(2.*p.x,dot(p,p)-1.,2.*p.y));\n}  \n#endif\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy / iResolution.xy;\n    vec2 p = -1.0 + 2.0 * q;\n    p.x *= iResolution.x/iResolution.y;\n    vec2 m = vec2(.5,0.);\n\tif( iMouse.z>0.0 ) m = iMouse.xy/iResolution.xy;\n\n\n\n\n    //-----------------------------------------------------\n    // camera\n    //-----------------------------------------------------\n\n#ifdef STEREOGRAPHIC\n\tfloat ctime = iTime*6.;\n\tvec3 rd = getStereoDir(fragCoord);\n    float r = 7.+3.0*m.x;\n    float an = -.35+1.2*sin(5.3+0.05*ctime)- 6.2831*(m.x-0.05);\n\tvec3 ro = vec3(-1.-r*sin(-an),3.5+clamp(5.*m.y, 0.,10.),4.-r*cos(-an));    \n#else\n\tfloat ctime = iTime*2.;\n    float an = -.35+1.2*sin(5.3+0.05*ctime) - 6.2831*(m.x-0.05);\n\tvec3 ro = vec3(-28.0*sin(-an),3.5+clamp(15.*m.y, 0.,100.),-28.0*cos(-an));\n    vec3 ta = vec3(2.0,2.5,0.0);\n\n    // camera matrix\n    vec3 ww = normalize( ta - ro );\n    vec3 uu = normalize( cross(ww,vec3(0,1,0) ) );\n    vec3 vv = normalize( cross(uu,ww));\n\n\t// create view ray\n\tvec3 rd = normalize( p.x*uu + p.y*vv + 3.7*ww );\n#endif // STEREOGRAPHIC\n\n    //-----------------------------------------------------\n\t// render\n    //-----------------------------------------------------\n\n\tvec3 col = 2.5*vec3(0.18,0.33,0.45) - rd.y*1.5;\n\tcol *= 0.9;\n    float sun = clamp( dot(rd,lig), 0.0, 1.0 );\n\tcol += vec3(2.0,1.5,0.0)*0.8*pow( sun, 32.0 );\n\n    vec3 bgcol = col;\n\n\twithMen = intersectSphere(ro, rd, vec3(-1.3,5.6,3), 2.3);\n\twithWomen = intersectSphere(ro, rd, vec3(-2,4.75,8), 1.8);\n\t\n\t// raymarch\n    vec3 tmat = intersect(ro,rd);\n    if( tmat.z>-0.5 )\n    {\n        // geometry\n        vec3 pos = ro + tmat.x*rd;\n        vec3 nor = calcNormal(pos);\n\t\tfloat occ = 1.; //calcOcc(pos,nor) * clamp(0.7 + 0.3*nor.y,0.0,1.0);\n\n        // materials\n\t\tvec3 mate = vec3(0);\n        shade( pos, nor, rd, tmat.z, mate);\n\n\t\tvec3 ref = reflect( rd, nor );\n\n\t\t// lighting\n        float sky = 0.6 + 0.4*nor.y;\n\t\tfloat bou = clamp(-nor.y,0.0,1.0);\n\t\tfloat dif = max(dot(nor,lig),0.0);\n        float bac = max(0.2 + 0.8*dot(nor,normalize(vec3(-lig.x,0.0,-lig.z))),0.0);\n\t\tfloat sha = 0.0;\n        if( dif>0.01 ) {\n            withMen = intersectSphere(pos+0.01*nor, lig, vec3(-1.3,5.6,3), 2.3);\n\t\t\twithWomen = intersectSphere(pos+0.01*nor, lig, vec3(-2,4.75,8), 1.8);\n            sha=softshadow( pos+0.01*nor, lig, 64.0 );\n\t\t\tsha *= cloudShadow( pos );\n        }\n        float fre = pow( clamp( 1.0 + dot(nor,rd), 0.0, 1.0 ), 3.0 );\n\n\t\t// lights\n\t\tvec3 lin = dif*vec3(1.70,1.15,0.70)*pow(vec3(sha),vec3(1.0,1.2,2.0));\n\t\tlin += 1.2*bou*vec3(0.15,0.20,0.20)*(0.5+0.5*occ);\n        lin += occ*( fre*vec3(1.00,1.25,1.30)*0.5*(0.5+0.5*dif*sha)\n                    +sky*vec3(0.05,0.20,0.45)\n\t\t\t\t\t+bac*vec3(0.20,0.25,0.25));\n\n\t\t// surface-light interacion\n\t\tcol = mate*lin;\n\n\t\t// fog\n        #ifdef STEREOGRAPHIC\n\t\tcol = mix( bgcol, col, exp(-0.0015*pow(abs(tmat.x),1.37)) );\n\t\t#else\n        col = mix( bgcol, col, exp(-0.0015*pow(abs(tmat.x),1.67)) );\n        #endif\n    } else {\n        vec2 cuv = ro.xz + rd.xz*(1000.0-ro.y)/rd.y;\n        float cc = texture( iChannel1, 0.00015*cuv +0.1+ 0.0043*iTime ).x;\n        cc = 0.65*cc + 0.35*texture( iChannel1, 0.00015*2.0*cuv + 0.0043*.5*iTime ).x;\n        cc = smoothstep( 0.3, 1.0, cc );\n     \n        col = mix( col, vec3(1.0,1.0,1.0)*(0.95+0.20*(1.0-cc)*sun), 0.7*cc );\n      #ifdef STEREOGRAPHIC\n\t\tcol = .35+.65*col;  // less background sky => higlight the Ball\n      #endif\n    }\n\n\t// sun glow\n    col += vec3(1.0,0.6,0.2)*0.4*pow( sun, 4.0 );\n\n\t//-----------------------------------------------------\n\t// postprocessing\n    //-----------------------------------------------------\n    // gamma\n\n\tcol = pow( clamp(col,0.0,1.0), vec3(.45)); //.53) );\n\n    // contrast, desat, tint and vignetting\t\n\tcol = col*0.8 + 0.2*col*col*(3.0-2.0*col);\n\tcol = mix( col, vec3(col.x+col.y+col.z)*0.333, 0.25 );\n\tcol *= vec3(1.0,1.02,0.96);\n#ifdef STEREOGRAPHIC\n\tcol *= 0.55 + 0.45*pow(abs( 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y)), 0.35 );\n#else\n\tcol *= 0.55 + 0.45*pow(abs( 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y)), 0.16 );\n#endif\n    fragColor = clamp(vec4( col, 1.0 ),0.,1.);\n}\n\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xtl3zM","date":"1420145523","viewed":935,"name":"Snow Ball","username":"iapafoto","description":"Playing with stereographic panorama effect  :)\n[Mouse available] (with some artfacts!)","likes":37,"published":1,"flags":0,"usePreview":0,"tags":["panorama","stereographic"],"hasliked":0,"parentid":"","parentname":""}}