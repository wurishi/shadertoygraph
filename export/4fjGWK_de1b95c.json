{"ver":"0.1","info":{"id":"4fjGWK","date":"1704646838","viewed":43,"name":"Draw Rectangle by dragging","username":"odalet","description":"Drag to draw a rectangle","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","rectangle","drag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Initially forked from https://www.shadertoy.com/view/WtdSDs\n\nconst float edgeWidth = 1.f;\nconst vec4 red = vec4(1.f, 0.f, 0.f, 1.f);\nconst vec4 green = vec4(0.f, 1.f, 0.f, 1.f);\nconst bool showAxes = true;\n\nbool eq(float v, float target, float tolerance) {\n    return v >= target - tolerance / 2.f && v <= target + tolerance / 2.f;\n}\n\nbool isInRect(vec2 point, vec2 topLeft, vec2 size, bool edgesOnly) {\n\n    vec2 delta = point - topLeft;\n    if (edgesOnly) {\n            \n        if (eq(delta.y, 0.f, edgeWidth) || eq(delta.y, size.y, edgeWidth))\n            return delta.x >= 0.f && delta.x <= size.x;\n            \n        if (eq(delta.x, 0.f, edgeWidth) || eq(delta.x, size.x, edgeWidth))\n            return delta.y >= 0.f && delta.y <= size.y;\n        \n        return false;\n    }\n    \n    if (delta.x >= 0.f && delta.x <= size.x) \n        return delta.y >= 0.f && delta.y <= size.y;\n    \n    return false;\n}\n\nbool isInXAxis(vec2 center, vec2 point, float size, float thickness) {\n    return eq(point.y, center.y, thickness) && (point.x >= center.x && point.x <= center.x + size);\n}\n\nbool isInYAxis(vec2 center, vec2 point, float size, float thickness) {\n    return eq(point.x, center.x, thickness) && (point.y >= center.y && point.y <= center.y + size);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec4 bg = vec4(1.f);\n    vec4 fg = vec4(0.9f, 0.2f, 1.f, 0.f);\n    vec4 dragColor = vec4(0.f, 0.2f, 1.f, 0.f); \n    \n    vec2 p1 = iMouse.xy;\n    vec2 p2 = abs(iMouse.zw);    \n    bool dragging = iMouse.z >= 0.f && iMouse.w < 0.f; // button pressed and not released\n    \n    vec2 size = abs(p2 - p1);\n    vec2 tl = min(p1, p2);\n    \n    float inside = isInRect(fragCoord.xy, tl, size, dragging) ? 1.f : 0.f;\n    vec4 col = mix(bg, dragging ? dragColor : fg, inside);\n    \n    if (showAxes) {\n        vec2 center = iResolution.xy / 2.f;\n        col = mix(col, red, isInXAxis(center, fragCoord.xy, 50.f, 2.f) ? 1.f : 0.f);    \n        col = mix(col, green, isInYAxis(center, fragCoord.xy, 50.f, 2.f) ? 1.f : 0.f);\n    }\n    \n    fragColor = col;\n}\n","name":"Image","description":"","type":"image"}]}