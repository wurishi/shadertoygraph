{"ver":"0.1","info":{"id":"Ml3XWS","date":"1481458629","viewed":275,"name":"Chromatic Aberration Testing","username":"Pinkfox","description":"Wanted to play around with the chromatic aberration HSLS code that Fran√ßois Tarlier put together based on the original algorithm from SynthEyes.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["chromatic","aberration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tModified HLSL Shader from http://www.francois-tarlier.com/blog/cubic-lens-distortion-shader/\n\tOriginal version from https://www.ssontech.com/content/lensalg.html\n*/\nvec2 aberration(vec2 uv, float k)\n{\n    \n    //k = k + k * sin(iTime);\n    \n    float r2 = pow(uv.x - 0.5, 2.0) + pow(uv.y - 0.5, 2.0);\n    float f = 1.0 + r2 * k;\n    return vec2(f * (uv - 0.5) + 0.5);\n    \n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float colorRed = texture(\n        iChannel0, \n        aberration(uv, -0.1)\n    ).r;\n    \n    float colorGreen = texture(\n        iChannel0, \n        uv\n    ).g;\n    \n    float colorBlue = texture(\n        iChannel0, \n        aberration(uv, -0.05)\n    ).b;\n    \n    // Output\n    fragColor = vec4(colorRed, colorGreen, colorBlue, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}