{"ver":"0.1","info":{"id":"csyczz","date":"1695694632","viewed":27,"name":"4/49","username":"tono","description":"4","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["49"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat box(vec3 p , vec3 s){p = abs(p) - s;return max(p.x,max(p.y,p.z));}\nfloat bar(vec2 p , vec2 s){p = abs(p) - s;return max(p.x,p.y);}\nfloat pi = acos(-1.);\n\n// r is splited number.\nvec2 pmod(vec2 p, float r)\n{\n    float a = atan(p.x, p.y) + pi / r;\n    float n = (pi*2.) / r;\n    a = floor(a / n) * n;\n    return p * rot(-a);\n}\nvec2 map(vec3 p)\n{\n    float o = 10.;\n    float id = 0.;\n    p.y += sin(p.x * 2. + p.z * 5.)/4.;\n    //p.xz = pmod(p.xz , 6.);\n    //o = box(p,vec3(.7));\n    float t = iTime/1. + p.z/20.;\n    t = floor(t) + pow(fract(t),12.);\n    p.xy *= rot(t/6. * pi);\n    p.x += sin(p.z);\n    p = abs(p) - 1.4;\n    \n    p = sin(p);\n    p.xz = pmod(p.xz , 8.);\n    for(int i = 0;i < 3;i++)\n    {\n        if(p.x > p.y)p.xy = p.yx;\n    \t\n       // \n        if(p.z < p.x)p.xz = p.zx;\n        if(p.y < p.z)p.yz = p.zy;\n        p.z = abs(p.z) - .01;\n        p.x = abs(p.x) - .02;\n        p.y = abs(p.y) - .3;\n    \tp.xz *= rot(t);\n        //p.xz = pmod(p.xz , 4.);\n    \tp = sin(p);\n    }\n     \n    //o = box(p,vec3(.04));\n    o = bar(p.xz,vec2(.1));\n    o *= .9;\n    return vec2(o,id);\n}\n\nvec2 march(vec3 cp , vec3 rd)\n{\n    float depth = 0.;\n    for(int i = 0 ; i< 99 ; i++)\n    {\n        vec3 rp = cp + rd * depth;\n        vec2 d = map(rp);\n        if(abs(d.x) < 0.001)\n        {\n            return vec2(depth,d.y);\n        }\n        depth += d.x;\n    }\n    return vec2(-depth , 0.);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\tvec3 cp = vec3(0.,-pi*0.,-pi);\n    vec3 target = vec3(0.);\n    \n    vec3 bg = vec3(1.0,0.,.5);\n    vec3 col = bg;\n    \n    vec3 cd = normalize(vec3(target - cp));\n    vec3 cs = normalize(cross(cd , vec3(0.,1.,0.)));\n    vec3 cu = normalize(cross(cd,cs));\n    \n    float fov = 3.5 - dot(p,p);\n    \n    vec3 rd = normalize(cd * fov + cs * p.x + cu * p.y);\n    vec2 d = march(cp,rd);\n    float t = 1. - exp(-.00003 * d.x * d.x *d.x * d.x);\n    t = floor(t*3.)/3.;\n    if(t < .3){\n        bg = vec3(1.,0.5,0.);\n    }else if(t < .6){\n        bg = vec3(0.,1.,.5);\n    }else{\n        bg = vec3(.5,1.,0.);\n    }\n    col = bg;\n    if( d.x > 0.)\n    {\n        vec2 e = vec2(0.,0.01);\n        vec3 pos = cp + rd * d.x;\n        vec3 N = normalize(map(pos).x - vec3(map(pos - e.xyy).x , map(pos - e.yxy).x,map(pos - e.yyx).x));\n        col = bg;\n        vec3 sun = normalize(vec3(2.,4.,8.));\n        //sun.xz *= rot(iTime);\n        float diff = max(0.,dot(-sun,N));\n        diff = mix(diff , 1.,.1);\n       // diff = diff - dot(p,p);\n        float sp = max(0.,dot(rd,reflect(N,sun)));\n        sp = pow(sp,56.6) * 1.;\n        \n        vec3 mat = vec3(0.);\n        if(diff > .9)\n        {\n            mat = vec3(1.,1.,0.);\n        }else if(diff > .8)\n        {\n            mat = vec3(0.,.5,0.);\n        }else if(diff > .7)\n        {\n            mat = vec3(0.,.3,0.);\n        }else if(diff > .6)\n        {\n            mat = vec3(.0,.4,1.);\n        }else if(diff > .5)\n        {\n            mat = vec3(0.,0.,1.);\n        }else if(diff > .4){\n            mat = vec3(0.,0.,0.);\n        }else if(diff > .3)\n        {\n            mat = vec3(0.,1.,0.);\n        }else if(diff > .1)\n        {\n            mat = vec3(0.,0.5,0.9);\n        }else if(diff > 0.)\n        {\n            mat = vec3(0.,1.,1.);\n        }\n        col = sp * mat + diff * mat;\n        //col = mat;\n        \n        \n        col = mix(col,bg,t);\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}