{"ver":"0.1","info":{"id":"4dXXWs","date":"1439676603","viewed":275,"name":"plasmablobs","username":"sh","description":"a plasma-like effect with color blobs and \"scanlines\"\nWorks on MY Machineâ„¢\n\nShould now also work on Macs ;)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","newbie","threetweets","blazeit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"void mainImage(out vec4 f, vec2 c){\n    if( mod( c.y , 4. ) < 2. )\n        f.z=iDate.w,\n        f.xy = vec2(\n                    c.x / (80. + sin(       f.z      ) * 48.),\n                    c.y / (90. + cos( 15. + f.z * 1.5) * 38.)\n                   ),\n        f = vec4(\n                        sin( f.z * -1.8 + f.x *  .5) + cos( f.z * 2.5 + f.y * 2.5 ) + cos(     -f.z + f.y * 2.5),\n                        cos( f.z        + f.x * 3. ) + atan(f.z *-.72  + f.y       ) + sin(5. +  f.z  + f.x ),\n                        sin( f.z *  2.3 + f.y * 3. ) + cos( f.z * 1.7 + f.y *-3.1 ) + cos(      f.z  + f.x ),\n            \t\t\t0\n                     )\n               - sin( 5. + f.z * 3.1 + c.y * .01 ) \n               + cos( f.z * .257 + c.x * .0075) * 2. \n               + sin( -f.z * 1.2 + c.x * .005) * 2. \n               - cos( -f.z + c.y * .015) * 0.75;\n}\n\n/* two-tweet \"monochrome\" version\nvoid mainImage(out vec4 f, vec2 c){\n    if( mod( c.y , 4. ) < 2. )\n        f.z=iDate.w,\n        f.xy = vec2(\n                    c.x / (80. + sin(       f.z      ) * 48.),\n                    c.y / (90. + cos( 15. + f.z * 1.5) * 38.)\n                   ),\n        f.rgb =  vec3(.5, .2, .8)\n               - vec3(  sin( 5. + f.z * 3.1 + c.y * .01 ) * 2. \n                       + cos( f.z * .257 + c.x * .0075) * 4. \n                       + sin( -f.z * 1.2 + c.x * .005) * 4. \n                       - cos( -f.z + c.y * .015) * 1.5\n                     ) * .5;\n}\n*/\n\n/* SMS-size monochrome pattern\nvoid mainImage(out vec4 f, vec2 c){\n        f.z = iDate.w,\n        f.xy = c / sin(f.z),\n        f.rgb =  vec3(.5, .2, .8)\n               - vec3(   sin( f.z + c.y * .01 )\n                       + cos( f.z + c.x * .05)\n                       + sin( f.z + c.x * .005) \n                       - cos(-f.z + c.y * .15)\n                     ) ;\n}\n*/","name":"","description":"","type":"image"}]}