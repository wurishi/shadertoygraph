{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float udBox( vec3 p, vec3 b ) {\n  return length(max(abs(p)-b,0.0)) ;\n}\nfloat sdCone(vec3 p, vec3 c){\n    vec2 q = vec2( length(p.xz), p.y );\n    return max( max( dot(q,c.xy), p.y), -p.y-c.z );\n}\nfloat sdTriPrism(vec3 p, vec2 h){\n    vec3 q = abs(p);\n    return max(q.z-h.y,max(q.x*0.866025+p.y*0.5,-p.y)-h.x*0.5);\n}\n/***********************************************/\nfloat sminp(float a, float b, float k) {\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n/***********************************************/\nvec2 rot(vec2 k, float t) {\n    return vec2(cos(t)*k.x-sin(t)*k.y,sin(t)*k.x+cos(t)*k.y);\n}\n/***********************************************/\nfloat body(vec3 p) {\n    //head\n    vec3 q=p;\n    q.y-=0.47;\n    q.z-=0.1;\n    float h=length(q)-0.13 - cos(p.y)*0.05;\n    //body\n    p.z-=0.1;\n    p.y+=0.1;\n    p.y*=0.35+sin(p.z*0.5)*0.5;\n    float b=length(p)-0.25;\n    //beak\n    q.y-=0.45;\n    q.z-=0.11;\n    float n=sdCone(q,vec3(0.8,0.11,0.3))+sin(q.z*3.2)*0.2;\n    //tail\n    q.y+=2.1;\n    q.z+=0.15;\n    float t=sdTriPrism(q,vec2(0.5,0.01))-sin(q.y+0.05)*0.1;\n    \n    return sminp(t, sminp(n, sminp(h,b,0.05), 0.02), 0.1);\n}\n/***********************************************/\nfloat wing(vec3 p) {\n    float sgt=sin(2.0+iTime*2.0);\n    float a=( 0.25+sgt*0.4 );\n    p.xz=rot(p.xz,a);\n    float bf=-0.4*(a*0.4- ((cos(2.0+iTime*2.0)*0.4 )+0.3) );\n\n    float c = cos(-p.x*bf);\n    float s = sin(-p.x*bf);\n    mat2  m = mat2(c,-s,s,c);\n    p.xz*=m;\n\n    p.y-=1.;\n    p.y+=sin(1.6+p.x*0.3);\n    p.x-=1.35;\n    p.y+=clamp( sin(p.x*0.3) ,0.0, 1.0);\n    p.y*=  pow(abs(1.4-p.x),-0.20) ;\n\n    return udBox(p, vec3(1.4,0.30,0.02));// -d;\n}\n/***********************************************/\nfloat hash(float n) { \n\treturn fract(sin(n)*43758.5453123); \n}\n\nfloat noise3(vec3 x) {\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0 + p.z*113.0;\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n}\n\n/***********************************************/\nvec2 opU(vec2 a, vec2 b) {\n\treturn mix(a, b, step(b.x, a.x));\n}\n/***********************************************/\nvec2 DE(vec3 p) {\n    vec3 q=p;\n//floor\n    q.x*=0.3;\n    q.z+=iTime*3.0;\n    q.y+=iTime*1.2;\n    vec2 water=vec2( p.y+2.0-noise3(q)*0.2 , 1.0);\n    \n//bird\n    p.y+=sin(1.0+iTime*2.0)*0.3;\n\n    p.zy=rot(p.zy,1.57);\n\n    float l=wing(vec3( p.x-0.13,p.y,p.z+0.05));\n    float r=wing(vec3(-p.x-0.13,p.y,p.z+0.05));\n    float b=body(p);\n    vec2 bird=vec2( sminp(b, sminp(l,r,0.1), 0.1), 2.0);\n\n\treturn opU(bird,water);\n}\n\n/***********************************************/\nfloat calcSS(vec3 ro, vec3 rd, float t, float k ) {\n    float res = 1.0;\n    for( int i=0; i<10; i++ ) {\n    \tfloat h = DE(ro + rd*t).x;\n        res = min( res, k*h/t );\n        t += h;\n\t}\n    return clamp(res,0.0,1.0);\n}\n/***********************************************/\nvec3 normal(vec3 p) {\n\tvec3 e=vec3(0.01,-0.01,0.0);\n\treturn normalize( vec3(\te.xyy*DE(p+e.xyy).x +\te.yyx*DE(p+e.yyx).x +\te.yxy*DE(p+e.yxy).x +\te.xxx*DE(p+e.xxx).x));\n}\n/***********************************************/\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    p.x *= iResolution.x/iResolution.y;\t\n\tvec3 ta = vec3(0.0, 0.0, 0.0);\n\tvec3 ro =vec3(0.0, 6.0, -6.0);          //5\n\tvec3 lig=normalize(vec3(1.0, 5.0, 0.0));\n\t\n    ro.xz=rot(ro.xz,iTime*0.2);\n\n\tvec3 cf = normalize( ta - ro );\n    vec3 cr = normalize( cross(cf,vec3(0.0,1.0,0.0) ) );\n    vec3 cu = normalize( cross(cr,cf));\n\tvec3 rd = normalize( p.x*cr + p.y*cu + 2.5*cf );\n\n\tvec3 col=vec3(0.6,0.7,1.0);\n\t/* trace */\n\tvec2 r=vec2(0.0);\t\n\tfloat f=0.0;\n\tvec3 ww;\n\tfor(int i=0; i<90; i++) {\n\t\tww=ro+rd*f;\n\t\tr=DE(ww);\t\t\n\t\tif( r.x<0.0 ) break;\n\t\tf+=r.x/2.0 ;\n\t}\n\t/* draw */\n\n\tif( f<30.0 ) {\n\t\tvec3 nor=normal(ww);\n\n        float rim=0.0;\n        float spe=0.0;\n\n\t\tif (r.y==1.0) {\n\t\t    \n\t        float rim =0.3*pow(1.+dot(nor,rd), 5.0);\n            float spe =0.5*pow(clamp( dot( lig, reflect(rd,nor) ), 0.0, 1.0 ) ,16.0 );\n\t\t    }\n\t\tif (r.y==2.0) col=vec3(0.8) ;\n\t\t\n\t\t\tfloat amb =0.2*ww.y;\n\t\t\tfloat dif =0.7*clamp(dot(lig, nor), 0.0,1.0);\n\t\t\tfloat bac =0.2*clamp(dot(nor,-lig), 0.0,1.0);\t\t\n\t\t    float sh=calcSS(ww, lig, 0.01, 1.0);\n\n\t\tcol*=(amb+dif+bac+sh);\n\n\t    col += (rim+spe)*vec3(1.);\t\t\n\t}\n\t\n\tcol*=exp(0.02*f); col*=0.9;\t\n\t\n\tfragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsB3DG","date":"1392670213","viewed":1070,"name":"Seagull","username":"avix","description":"Fast try of making a seagull. Still need to figure out how to fix wing tearing...","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","animal"],"hasliked":0,"parentid":"","parentname":""}}