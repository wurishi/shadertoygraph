{"ver":"0.1","info":{"id":"7sc3z7","date":"1630026035","viewed":354,"name":"Fake fluid physics","username":"jarble","description":"This fluid simulation is completely fake, but it somehow manages to look realistic.\nThis illusion works [url=https://www.shadertoy.com/view/7ddGzS]in 3 dimensions[/url], too.","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"NsBXDm","parentname":"unmixing fluid"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 fluid(vec2 uv){\n float t1 = iTime*2.;\n \n //uv *= 8.;\n float turbulence = 3.;\n //decrease this number to increase the turbulence\n \n for (float i = 1.; i < 4.; i += 1.)\n  {\n    \n    float i1 = i;\n    //uv.x += sin(uv.y*(i-1.)+t1/i)/i;\n    //uv.y += cos(uv.x*(i-1.)+t1/i)/i;\n    \n    //uv.x += sin((t1-uv.y)*.5)*1.5/i* sin(i * uv.y + t1 * 0.5);\n    //uv.y += sin((t1-uv.x)*.5)*1.5/i* sin(i * uv.x + t1 * 0.5 );\n    \n    //uv.x += sin(uv.y*i-t1-uv.y)/i;\n    //uv.y += sin(uv.x*i)/i;\n\n    //uv.x += sin(uv.y*i)/i;\n    //uv.y += cos(uv.x*i+t1)/i;\n    \n    //uv.x += (sin(uv.y*i1)/i1+t1/i1/i1)/turbulence;\n    //uv.y += cos(uv.x*i1)/i1/turbulence;\n    \n    uv.x += (cos(uv.y*i1)+t1)/turbulence;\n    uv.y += sin(uv.x*i1)/turbulence;\n    uv = uv.yx;\n    \n  }\n  return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n vec2 uv = fragCoord/iResolution.xy*10.;\n uv = fluid(uv);\n float r = abs(sin(uv.x))+.5;\n float g =abs(sin(uv.x+2.+iTime*.2))-.2;\n float b = abs(sin(uv.x+4.));   \n vec3 col = vec3(r,g,b);   \n \n fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}