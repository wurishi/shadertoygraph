{"ver":"0.1","info":{"id":"X3lGRf","date":"1707853855","viewed":59,"name":"[Kiltun] kishimisu Neons","username":"Kiltun","description":"Neon shader based on kishimisu tuto here : https://www.shadertoy.com/view/mtyGWy","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    //vec3 a = vec3(0.5, 0.5, 0.5);\n    //vec3 b = vec3(0.5, 0.5, 0.5);\n    //vec3 c = vec3(1.0, 1.0, 1.0);\n    //vec3 d = vec3(0.5,0.7,0.3);\n    \n    //vec3 a = vec3(0.5, 0.5, 0.5);\n    //vec3 b = vec3(0.5, 0.5, 0.5);\n    //vec3 c = vec3(2.0, 1.0, 0.0);\n    //vec3 d = vec3(0.5,0.20,0.25);\n    \n    //vec3 a = vec3(0.5, 0.5, 0.5);\n    //vec3 b = vec3(0.5, 0.5, 0.5);\n    //vec3 c = vec3(1.0, 1.0, 1.0);\n    //vec3 d = vec3(0.8,0.9,0.3);\n    \n    //vec3 a = vec3(0.5, 0.5, 0.5);\n    //vec3 b = vec3(0.5, 0.5, 0.5);\n    //vec3 c = vec3(1.0, 1.0, 1.0);\n    //vec3 d = vec3(0.263,0.416,0.557);\n    \n    vec3 a = vec3(0.5, 0.5, 0.098);\n    vec3 b = vec3(0.5, 0.5, 0.538);\n    vec3 c = vec3(1.0, 1.0, -0.841);\n    vec3 d = vec3(0.75,0.25,-1.19);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    float iteration = 3.0;\n    for(float i = 1.0; i <= iteration; ++i){\n        \n        float timeSpeed = 0.2;\n        float timeRange = 2.0;\n        float timeVal = (sin(iTime*timeSpeed)+timeRange)*1.0/timeRange;\n        \n        uv = fract(uv * timeVal) - 0.5;\n        \n        // Shapes ----------       \n        // ShapeShiftValue\n        float shapeShift = (sin(iTime*0.1+5.)+1.0)*0.5;      \n        \n        // (Circle)       \n        float circleShape = sdCircle(uv,1.)* exp(-sdCircle(uv0,sin(iTime*0.2)+1.0)*0.5);\n        \n        // (Box)  \n        float boxShape = sdBox(uv, vec2((sin(iTime*0.05)+1.0)*0.1+0.2))* exp(-sdCircle(uv0,sin(iTime*0.1+1.)+1.0)*0.5);\n        \n        \n        float d = mix(circleShape, boxShape, shapeShift);  \n        float colorSpeed = 0.5;\n        vec3 col = palette(length(uv0) + i*colorSpeed +  iTime*colorSpeed);\n        \n        float shapeSpace = 12.;\n        float shapeSpeed = 0.2;\n        d = sin(d*shapeSpace + iTime*shapeSpeed) / shapeSpace;\n        d = abs(d);\n\n        d = pow(0.0035/d, 1.);\n\n\n        finalColor += col * d;\n    }\n    \n    // Output to screen\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}