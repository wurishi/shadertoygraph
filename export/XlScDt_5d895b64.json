{"ver":"0.1","info":{"id":"XlScDt","date":"1510503697","viewed":82,"name":"raymarching test 2 ","username":"pedwards","description":"extra ball","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926536\n\n\nvec3 p1 = vec3(-1.2,0.0,0.0);\nfloat r1 = 1.0;\nfloat alpha1 = 0.9;\nfloat F01 = 0.1;\nvec3 diffC1 = vec3(1.0,0.2,0.2);\nvec3 speC1 = vec3(1.0,1.0,1.0);\n\nvec3 p2 = vec3(1.2,0.0,0.0);\nfloat r2 = 1.0;\nfloat alpha2 = 0.2;\nfloat F02 = 1.95;\nvec3 diffC2 = vec3(0.5,0.3,0.05);\nvec3 speC2 = 0.5*vec3(0.8,0.6,0.1);\n\nfloat floorH = -1.5;\nfloat alphafloor = 0.3;\nfloat F0floor = 0.2;\nvec3 diffCfloor = vec3(0.2,0.5,0.7);\nvec3 speCfloor = vec3(0.9,0.9,0.9);\n\nfloat backZ = 5.0;\nfloat alphaback = 0.5;\nfloat F0back = 0.8;\nvec3 diffCback = vec3(0.1,0.5,0.1);\nvec3 speCback = vec3(0.2,0.2,0.2);\n\n\nfloat D(vec3 wh, vec3 n, float alphap){\n    float alpha2 = alphap*alphap;\n    float nwh2 = pow(dot(n,wh),2.0);\n    //return alpha2/(PI*pow(1.0+(alpha2-1.0)*pow(dot(n,wh),2.0),2.0));\n    return exp((nwh2-1.0)/(alpha2*nwh2))/(PI*alpha2*pow(nwh2,2.0));\n}\n\nfloat F(vec3 wi, vec3 wh, float F0p){\n    return F0p+(1.0-F0p)*pow(1.0-max(0.0,dot(wi,wh)),5.0);\n}\n\nfloat G(vec3 wo, vec3 wi, vec3 wh, vec3 wn){\n \treturn min(1.0,min(2.0*dot(wn,wh)*dot(wn,wi)/dot(wo,wh),2.0*dot(wn,wh)*dot(wn,wo)/dot(wo,wh)));\n}\n\nvec3 diffusemap(vec3 r){\n    if(r.y-floorH<0.01){\n     \treturn diffCfloor;   \n    }\n    if(backZ-r.z<0.01){\n     \treturn diffCback;   \n    }\n    if(length(r-p1)<length(r-p2)){\n        return diffC1;\n    }else{\n        return diffC2;\n    }\n}\n\nvec3 specularmap(vec3 r){\n    if(r.y-floorH<0.01){\n     \treturn speCfloor;   \n    }\n    if(backZ-r.z<0.01){\n     \treturn speCback;   \n    }\n    if(length(r-p1)<length(r-p2)){\n        return speC1;\n    }else{\n        return speC2;\n    }\n}\n\nfloat alphamap(vec3 r){\n    if(r.y-floorH<0.01){\n     \treturn alphafloor;   \n    }\n    if(backZ-r.z<0.01){\n     \treturn alphaback;   \n    }\n    if(length(r-p1)<length(r-p2)){\n        return alpha1;\n    }else{\n        return alpha2;\n    }\n}\n\nfloat fmap(vec3 r){\n    if(r.y-floorH<0.01){\n     \treturn F0floor;   \n    }\n    if(backZ-r.z<0.01){\n     \treturn F0back;   \n    }\n    if(length(r-p1)<length(r-p2)){\n        return F01;\n    }else{\n        return F02;\n    }\n}\n\nfloat map(vec3 r){\n    return min(length(r-p1)-r1,\n               min(length(r-p2)-r2,\n               min(r.y-floorH,\n               backZ-r.z)));\n}\n\nvec3 nmap(vec3 r){\n    if(r.y-floorH<0.01){\n     \treturn vec3(0.0,1.0,0.0);   \n    }\n    if(backZ-r.z<0.01){\n     \treturn vec3(0.0,0.0,-1.0);   \n    }\n    if(length(r-p1)<length(r-p2)){\n        return normalize(r-p1);\n    }else{\n        return normalize(r-p2);\n    }\n}\n\nfloat trace(vec3 o, vec3 r){\n    r=normalize(r);\n    float t = 0.1;\n    for(int i=0; i<96; i++){\n        float d = map(o+t*r);\n       if(abs(d)<0.005 || abs(d)>10.0) break;\n        t+=d*0.95;\n    }\n    return t;\n}\n\n\nvec3 specdif(vec3 p, vec3 wo, vec3 lightp, vec3 lightc){\n    vec3 col = vec3(0.0,0.0,0.0);\n    \n    vec3 wn = nmap(p);\n    float alphap = alphamap(p);\n    float F0p = fmap(p);\n    vec3 diffC = diffusemap(p);\n    vec3 specularC = specularmap(p);\n\n    float d = trace(p,lightp-p);\n    vec3 wi = normalize(lightp-p);\n    vec3 wh = normalize(wi+wo);\n    if(d>length(lightp-p) && dot(wi,wn)>0.0 && dot(wo,wn)>0.0){\n        col+=dot(wi,wn)/3.0*lightc*diffC;\n        col+=D(wh,wn,alphap)*F(wi,wh,F0p)*G(wo,wi,wh,wn)/(4.0*dot(wn,wi)*dot(wn,wo)+1.0)*lightc*specularC;\n        //col=vec3(G(wo,wi,wh,wn));\n    }\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float speed = 1.0;\n    float myTime = iTime*speed;\n    \n    vec3 light = 3.0*vec3(cos(myTime),0.5,sin(myTime));\n    vec3 lightc = vec3(1.0,1.0,1.0);\n    vec3 light2 = 3.0*vec3(cos(myTime+2.0*PI/3.0),0.5,sin(myTime+2.0*PI/3.0));\n    vec3 lightc2 = vec3(1.0,1.0,1.0);\n    vec3 light3 = 3.0*vec3(cos(myTime+4.0*PI/3.0),0.5,sin(myTime+4.0*PI/3.0));\n    vec3 lightc3 = vec3(1.0,1.0,1.0);\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv = 2.0*uv - 1.0;\n    \n    uv.x*=iResolution.x/iResolution.y;\n    \n    vec3 o = vec3(0.0,0.0,-3.0);\n    vec3 wo = normalize(vec3(uv,1.0));\n    \n    float t =  trace(o,wo);\n    \n    float col = 0.0;\n    float col2 = 0.0;\n    float col3 = 0.0;\n    \n    vec3 colv = vec3(0.0,0.0,0.0);\n    \n    if(t<1000.0){\n        vec3 p = o+t*wo;\n        \n        colv+=specdif(p,-wo,light,lightc);\n        colv+=specdif(p,-wo,light2,lightc2);\n        colv+=specdif(p,-wo,light3,lightc3);\n    }\n    \n    \n\tfragColor = vec4(colv,1.0);\n}","name":"Image","description":"","type":"image"}]}