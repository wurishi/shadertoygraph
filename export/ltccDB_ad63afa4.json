{"ver":"0.1","info":{"id":"ltccDB","date":"1533856628","viewed":168,"name":"Serpinski mod 10","username":"tiusic","description":"You can make the Serpinski triangle by looking at whether each element of Pascal's triangle is even or odd. So the Serpinski triangle is essentially Pascal's triangle mod 2. This is what happens when you do mod 10 instead.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 hue(float h) {\n\t\n\tfloat c = cos(h);\n\tfloat s = sin(h);\n\t\n    // Hue matrix from https://www.shadertoy.com/view/4sl3DH\n\tmat4 hueRotation =\t\n\t\t\t\t\tmat4( \t 0.299,  0.587,  0.114, 0.0,\n\t\t\t\t\t    \t 0.299,  0.587,  0.114, 0.0,\n\t\t\t\t\t    \t 0.299,  0.587,  0.114, 0.0,\n\t\t\t\t\t   \t\t 0.000,  0.000,  0.000, 1.0) +\n\t\t\n\t\t\t\t\tmat4(\t 0.701, -0.587, -0.114, 0.0,\n\t\t\t\t\t\t\t-0.299,  0.413, -0.114, 0.0,\n\t\t\t\t\t\t\t-0.300, -0.588,  0.886, 0.0,\n\t\t\t\t\t\t \t 0.000,  0.000,  0.000, 0.0) * c +\n\t\t\n\t\t\t\t\tmat4(\t 0.168,  0.330, -0.497, 0.0,\n\t\t\t\t\t\t\t-0.328,  0.035,  0.292, 0.0,\n\t\t\t\t\t\t\t 1.250, -1.050, -0.203, 0.0,\n\t\t\t\t\t\t\t 0.000,  0.000,  0.000, 0.0) * s;\n    return vec4(1.0, 0.0, 0.0, 1.0) * hueRotation;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec4 c = texture(iChannel0, fragCoord / iResolution.xy);\n    if (c.b < 0.01) {\n        fragColor = vec4(0,0,0,1);\n    } else {\n    \tfragColor = hue(c.r * 6.28318530718 / 10.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float get(in vec2 p, in float dx, in float dy) {\n    return texture(iChannel0, (p - vec2(dx, dy)) / iResolution.xy, 1.0).r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    if (fragCoord.y < 0.8 || fragCoord.x < 0.8) {\n        fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n        return;\n    }\n    float l = get(fragCoord, 0.0, 1.0);\n    float r = get(fragCoord, 1.0, 0.0);\n    float g = mod(l + r, 10.0);\n    fragColor = vec4(g,g,g,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}