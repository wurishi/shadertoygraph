{"ver":"0.1","info":{"id":"XtVczV","date":"1536960269","viewed":199794,"name":"Whoa my kinda beams","username":"Carandiru","description":"raymarching edit fun\nhttps://cineshader.com/view/XtVczV","likes":62,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// http://bit.ly/supersinfulsilicon\n// @Carandiru on twitter - follow me!\n\nvoid pMod1(inout float p, float size) {\n\tfloat halfsize = size*0.5;\n\tp = mod(p + halfsize, size) - halfsize;\n}\n\nvoid pMod3(inout vec3 p, vec3 size) {\n    \n\tp = mod(p - size*0.5, size) - size*0.5;\n}\n\nfloat sphere(vec3 p, float radius){\n    return length(p)-radius;\n\n}\n\n\nfloat map(vec3 p)\n{\n    vec3 q = p;\n\tvec3 qa = p;\n    pMod3(q, vec3(0.8, 1., 0.23));\n\tpMod3(qa, vec3(0.8, 1., 0.18));\n    pMod1(p.x, 1.);\n    \n    float s1 = sphere(p, 0.75); \n    float s2 = sphere(q, 0.5);  \t    \t\n    float s3 = sphere(qa, 0.555);\n    \n  \tfloat df1 = min(min(s1, s2),s3); // Union\n\n    return df1;\n}\n\n\nfloat trace(vec3 origin, vec3 r) \n{\n  float t = 0.0;\n    for (int i = 0; i < 64; ++i) {\n        vec3 p = origin + r * t;\n        float d = map(p);\n        t += d*0.22;\n        }\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.324, 0.12, 0.536);\n    uv = uv *2.-1.; // Remap the space to -1. to 1.\n    uv.x *= iResolution.x/iResolution.y;\n    \n    \t\n   \tfloat FOV = 1.25;\n   \tvec3 ray = normalize(vec3(uv, FOV));\n    \n    \n    vec3 origin = vec3(iTime, 0.0, -1.75);\n    float t = trace(origin, ray);\n    \n    float expFog = 0.5 / (t*t* 0.95);\n    \n    vec3 fc = vec3(expFog);\n    \n    if ( t < -0.9f ) {\n        color = 0.25-(0.5/t+color);\n        vec3 maincolor = exp(-(fc+color)*3.6f);\n        color = (1.0f - maincolor);\n        color = cos(color) * maincolor;\n    }\n    else\n        color = vec3(0);\n    \n    fragColor = vec4(color,dot(color, vec3(0.5)) * exp(-expFog));\n}","name":"Image","description":"","type":"image"}]}