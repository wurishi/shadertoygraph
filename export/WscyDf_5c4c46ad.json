{"ver":"0.1","info":{"id":"WscyDf","date":"1601834714","viewed":60,"name":"Basic Camera 3D","username":"ferrazrx","description":"Following this tutorial https://www.youtube.com/watch?v=PBxuVlp7nuM","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["camera"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distanceBetweenPointAndRay(vec3 point, vec3 ro, vec3 rd){\n\treturn length(cross(point - ro, rd))/length(rd);\n}\n\nfloat drawPoint(vec3 point, vec3 ro, vec3 rd){\n     float d = distanceBetweenPointAndRay(point, ro, rd);\n    \n    d = smoothstep(0.05, 0.045, d);\n    return d;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //Ray Origin\n    vec3 ro = vec3(cos(iTime),sin(iTime) * -9., -4.);\n    \n    //Look At\n    vec3 lookat = vec3(0., 0., 0.);\n    \n    //Forward\n    vec3 forward = normalize(lookat - ro);\n    \n    vec3 Yaxis = vec3(0.,1.,0.);\n   \n   \t//Right\n    vec3 right = cross(Yaxis, forward);\n    \n    //Up\n    vec3 up = cross(forward, right);\n    \n    //Zoom\n    float zoom = 1.;\n    \n    //Center\n    vec3 center = ro + (forward * zoom);\n    \n    // i\n    vec3 i = center + (uv.x * right) + (uv.y * up);\n    \n    //Ray Distance\n    vec3 rd = i - ro;\n    \n \tfloat d = 0.;\n    \n    d += drawPoint(vec3(-.5,.5,-.5), ro, rd);\n    d += drawPoint(vec3(.5,-.5,-.5), ro, rd);\n    d += drawPoint(vec3(-.5,-.5,.5), ro, rd);\n    d += drawPoint(vec3(-.5,-.5,-.5), ro, rd);\n    d += drawPoint(vec3(.5,.5,-0.5), ro, rd);\n    d += drawPoint(vec3(.5,-.5,.5), ro, rd);\n    d += drawPoint(vec3(-.5,.5,.5), ro, rd);\n    d += drawPoint(vec3(.5,.5,.5), ro, rd);\n \n    vec3 col = vec3(d,1.,1.);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}