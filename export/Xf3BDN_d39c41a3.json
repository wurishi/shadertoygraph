{"ver":"0.1","info":{"id":"Xf3BDN","date":"1733086517","viewed":155,"name":"mandala 4","username":"nayk","description":"originals from https://www.shadertoy.com/view/mtyGWy","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["fractal","sdf","tutorial","intro","repetition","code","youtube","tuto","creative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n#define pi 3.14\nvec2 Rot2D (vec2 q, float a)\n{\n  vec2 cs;\n  cs = sin (a + vec2 (2.5 * pi, 0.));\n  return vec2 (dot (q, vec2 (cs.x, - cs.y)), dot (q.yx, cs));\n}\n//https://www.shadertoy.com/view/mtyGWy\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    uv+=Rot2D(uv,iTime*0.65);\n     uv/=vec2(fract(log(length(uv.xy))+iTime*0.025));\n    for (float i = 0.0; i < 10.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n        uv+=reflect(uv, -uv);\n           \n      uv/=vec2(fract(log(length(uv.xy))+iTime*0.025));\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*0.54 + iTime*.04);\n\n        d = sin(d*7. + iTime)/5.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}