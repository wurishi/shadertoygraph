{"ver":"0.1","info":{"id":"csdGDS","date":"1677767077","viewed":45,"name":"GreenGrid","username":"akabozu","description":"000","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","mix","grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uvec3 k = uvec3(0x456789abu, 0x6789ab45u, 0x89ab4567u);\nuvec3 u = uvec3(1, 2, 3);\n\nuvec3 uh(uvec3 n) {\n    n ^= (n.yzx << u);\n    n ^= (n.yzx >> u);\n    n *= k;\n    n ^= (n.yzx << u);\n    return n * k;\n}\n\nfloat g(vec3 lattice, vec3 p) {\n    uvec3 n = floatBitsToUint(lattice);\n    uint ind = uh(n).x >> 28;\n    float u = ind < 8u ? p.x : p.y;\n    float v = ind < 4u ? p.y : ind == 12u || ind == 14u ? p.x : p.z;\n    return ((ind & 1u) == 0u ? u : -u) + ((ind & 2u) == 0u ? v : -v);\n}\n\nfloat pn(vec3 p) {\n    vec3 n = floor(p);\n    vec3 f = fract(p);\n    float[8] v;\n    for (int k = 0; k < 2; k++) {\n        for (int j = 0; j < 2; j++) {\n            for (int i = 0; i < 2; i++) {\n                v[i + 2 * j + 4 * k] = g(n + vec3(i, j, k), f - vec3(i, j, k)) * 0.70710678;\n            }\n        }\n    }\n    f = f * f * f * (10.0 - 15.0 * f + 6.0 * f * f);\n    float[2] w;\n    for (int i = 0; i < 2; i++) {\n        w[i] = mix(mix(v[4 * i], v[4 * i + 1], f[0]), mix(v[4 * i + 2], v[4 * i + 3], f[0]), f[1]);\n    }\n    return 10.5 * mix(w[0], w[1], f[2]) + 0.5;\n}\n\nvoid mainImage(out vec4 fc, in vec2 fcCoord) {\n    vec2 uv = vec2(0.5, 0.5) + 1.0 * fcCoord.xy / iResolution.xy;\n\n    uv *= pn(vec3(sin(uv.x * 30.5), cos(uv.y * 30.5), iTime * 0.8));\n\n    vec3 c[2];\n    c[0] = vec3(0.1176, 0.7725, 0.4667);\n    c[1] = vec3(0.949, 0.9451, 0.9608);\n\n    vec3 col1 = mix(c[0], c[1], smoothstep(0.0, 1.5, uv.x));\n    vec3 col2 = mix(c[1], c[1], smoothstep(0.0, 1.0, uv.x));\n    vec3 col = mix(col1, col2, smoothstep(0.0, 1.0, uv.y));\n\n    fc = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}