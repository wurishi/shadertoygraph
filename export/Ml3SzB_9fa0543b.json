{"ver":"0.1","info":{"id":"Ml3SzB","date":"1480678061","viewed":955,"name":"[ #00 ] - SF 2D","username":"Yrai","description":"Four out of many possible variations of superformula in 2D.","likes":14,"published":3,"flags":0,"usePreview":0,"tags":["2d","superformula","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926;\nfloat scale = 9.8;\n\n\nfloat function(float r, float t,float y, float z, float n1, float a, float b, float n2, float n3);\nfloat solve(vec2 p,float y, float z, float n1, float a, float b, float n2, float n3);\nfloat value(vec2 p, float size, float y, float z, float n1, float a, float b, float n2, float n3);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat width = 1. / min( iResolution.x, iResolution.y );\n\tvec2 control = mix(iResolution.xy*.5, iMouse.xy,1.-step(iMouse.z, 0.));\n    \n\tvec2 uv = (fragCoord.xy - control) * 1. * width;\n\tvec3 col = vec3(0.);\n    float tf = floor(sin(iTime)*11.);\n    \n    col.rgb += 1. - smoothstep(.001,.002,abs(uv.x));\n    col.rgb += 1. - smoothstep(.001,.002,abs(uv.y));\n \t\n    \n    uv -= vec2(0.35,0.25);\n    float sf1 = value(uv*scale, width*scale,tf+.5,tf+.5,1.,1.,1.,1.,1.);\n    col.rgb += 3.*smoothstep(.01,3.,sf1);\n    \n    uv -= vec2(-0.8,0.);\n    float sf2 = value(uv*scale, width*scale,tf,tf,1.,1.,1.,1.,1.);    \n    col.rgb += 3.*smoothstep(.01,3.,sf2);\n    \n    uv -= vec2(0.8,-0.5);\n    float sf3 = value(uv*scale, width*scale,5.,tf,12.,12.,tf,1.,-1.5);    \n    col.rgb += 3.*smoothstep(.01,3.,sf3);\n    \n    uv -= vec2(-0.8,0.0);\n    float sf4 = value(uv*scale, width*scale,tf,1.,-1.,1.,1.,1.,1.);\n    col.rgb += 3.*smoothstep(.01,4.,sf4);\n    \n    col.bg += sf1;\n    col.b += sf2;\n    col.rg += sf3;\n    col.g += sf4;\n \n    col = sqrt(col);\n    \n    fragColor = vec4(col, 1.);\n}\n\n\nfloat function( float r, float t, float y, float z, float n1, float a, float b, float n2, float n3) {        \n    float ca = cos(y*t/4.);\n    float sa = sin(z*t/4.);\n    float lf = pow(abs(ca/a),n2);\n    float rg = pow(abs(sa/b),n3);\n    \n    return pow(lf+rg,-1./n1)-r;\n}\n\nfloat solve(vec2 p,float y, float z, float n1, float a, float b, float n2, float n3) {\n\n\tfloat r = length(p);\n\tfloat t = atan(p.y, p.x);\n\t\n\tfloat v = 1000.;\n\tfor(int i=0; i<32; i++ ) {\n\t\tv = min(v, abs(function(r,t, y,z,n1,a,b,n2,n3)));\n\t\tt += PI*2.;\n\t}\n    \n\treturn v;\n}\n\nfloat value(vec2 p, float size, float y, float z, float n1, float a, float b, float n2, float n3) {\n\tfloat error = size;\n\treturn 1. / max(solve(p,y,z,n1,a,b,n2,n3) / error, 1.);\n}","name":"Image","description":"","type":"image"}]}