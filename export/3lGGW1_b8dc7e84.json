{"ver":"0.1","info":{"id":"3lGGW1","date":"1585837390","viewed":66,"name":"Corstiaan.LineAnimationTest","username":"Corstiaan","description":"Testing line animations","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test","animation","linegraphics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI  3.14159265359\n#define TWO_PI (2.0*PI)\n#define HALF_PI (0.5*PI)\n\nfloat sgm(float f)\n{\n    float a = 15.;\n    return 1.0/(1.0 + exp(-(f-0.5)*a));\n}\n\nvec2 Polar(vec2 p)\n{\n    float rho = length(p) * 2.;\n    float phi = (atan(p.y, p.x) + PI) / (PI * 2.) * 2.;\n    \n    return vec2(rho, phi);\n}\n\nfloat thresh(float base, float val, float blur)\n{\n    // divides a gradient 0-1 in black and white with:\n    // base: the gradient / coordinate system\n\t// val: middle of the threshold\n\t// width: width of the threshold\n    return smoothstep(val-(blur/2.), val+(blur/2.), base);\n}\n\nfloat band(float base, float val, float width, float blur)\n{\n    // similar to thresh but mirrored around val\n    return 1.-thresh(abs(base-val)-width/2., 0., blur)*2.;\n}\n\nfloat sdfLine(vec2 p, vec2 a, vec2 b, float r)\n{\n    if (length(a-b) < 0.001) return 1.;\n    \n    vec2 l = b-a;\n    float h = min(1.0, max(0.0, dot(p-a, l) / pow(length(l),2.)));\n    return length(p-a-(b-a)*h)-r;\n}\n\nfloat Line(vec2 p, vec2 a, vec2 b, float width, float blur)\n{\n    float sdf = sdfLine(p, a, b, width-blur/2.);\n    return 1.-thresh(sdf, blur/2., blur);\n}\n\nfloat tw(float t, float start, float end)\n{\n    return max(0., min(1., (t - start)/(end - start)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 R = iResolution.xy, UV = (fragCoord - .5 *R ) / R.y;\n    vec3 col = vec3(0.);\n    vec2 mouse = (iMouse.xy - .5 *R ) / R.y;\n    \n    float loopDuration = 2.;\n    float tLoop = fract(iTime / loopDuration);\n    float line;\n\n    // line = Line(UV, vec2(-0.8, 0.), vec2(0.8, 0.), 0.02, 0.005);\n    \n    line += Line(Polar(UV), \n                        vec2(0.70, mix(2.,0.,sgm(tw(tLoop,0.10,0.70)))),\n                        vec2(0.70, mix(2.,0.,sgm(tw(tLoop,0.15,0.75)))), 0.001, 1./R.y);\n\n    line += Line(Polar(UV), \n                        vec2(0.80, mix(2.,0.,sgm(tw(tLoop,0.30,0.90)))),\n                        vec2(0.80, mix(2.,0.,sgm(tw(tLoop,0.35,0.95)))), 0.001, 1./R.y);\n    \n    line += Line(Polar(UV), \n                        vec2(0.90, mix(2.,0.,sgm(tw(tLoop,0.20,0.80)))),\n                        vec2(0.90, mix(2.,0.,sgm(tw(tLoop,0.25,0.85)))), 0.001, 1./R.y);\n\t\n    col = vec3(line);\n    \n    // col = vec3(sigmoid(UV.y,5.));\n    \n\t// col.rg = UV;\n    // col += vec3(max(0.,bla));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}