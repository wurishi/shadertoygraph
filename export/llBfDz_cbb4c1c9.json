{"ver":"0.1","info":{"id":"llBfDz","date":"1515972395","viewed":124,"name":"ondes noir qui d√©filent","username":"Loustik","description":"onde","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["onde"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 circle(vec2 uv, vec2 center, float size, float gradient, float ep)\n{\n    float ratio = iResolution.x / iResolution.y;\n    uv.x *= ratio;\n    center.x *= ratio;\n    \n    float calc = (abs (distance (uv,center)-size) -ep) /gradient;\n    float value = clamp (calc,0.0,1.0);\n    float alpha = 1.0 - value;\n\treturn vec4(value, value, value, alpha);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // param\n    vec2 center = vec2(0.5,0.5);\n    float vitesse = 0.3;\n    float size = 0.0+fract(iTime*vitesse);\n    float size2 = 0.0+fract((iTime)*vitesse);\n    float gradient = 0.1;\n    float epaisseur = 0.05;\n    \n    // color\n    vec3 color = vec3(0.5-uv.y*sin(iTime),0.7,uv.x*sin(iTime));\n    vec3 noir = vec3(0.0,0.0,0.0);\n    \n    // compo\n    vec4 onde = circle(uv, center, size, gradient, epaisseur);    \n    vec3 layer = vec3(mix(noir, color, onde.a));\n\n    \n    \n\tfragColor = vec4(layer,1.0);\n}","name":"Image","description":"","type":"image"}]}