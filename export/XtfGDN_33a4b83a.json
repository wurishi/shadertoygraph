{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Chromatic Color Wheel\n// Copyleft {c} 2015 Michael Pohroeski\n// Chars: 330\n// Can you get this down to 280 characters?\n\n// Minified/Optimized Hue to RGB\n//vec3 h2rgb(float normalizedHueAngle)\nvec3 h(float a)\n{\n    return clamp(abs(fract(vec3(a)+vec3(3,2,1)/3.)*6. - 3.) - 1., 0., 1.);\n}\n\n// Every 24 seconds cycle repeats\n// First 12 seconds increase multiple of 360 colors\n// Last  12 seconds decrease multiple of 360 colors\nfloat s(float x)\n{\n    float m = mod(floor(x),8.);\n    if( m < 4. )\n        return 1. + m;\n    else\n        return 9. - m;\n}\n\n// Tau = 2*Pi\n// angle = atan2()\n// angle / Tau --> -0.5 .. +0.5 (normalized Hue Angle)\n//             --> -180 .. +180 degrees (equivalent)\nvoid mainImage( out vec4 f, in vec2 q ) // fragColor, fragCoord\n{\n    vec2  p = 2.*q.xy/iResolution.xy - 1.;\n    float d = atan(p.y,p.x)/6.283185, // -pi < atan() <= +pi\n          t = iTime/3.;         // change every 3 seconds\n    f = vec4( 2.*mix( h(d*s(t)), h(d*s(t+1.)), fract(t) ), 1. ); // over-saturate to white with 2x\n}\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XtfGDN","date":"1421984681","viewed":589,"name":"Chromatic Color Wheel","username":"MichaelPohoreski","description":"Cycle Color Wheel without discontinuity; cycles does a linear blend between integer N = 1, 2, 3, 4, and 5 repetitions.\n\nThanks to yakoudbz for the hint on how to remove the discontinuity!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","color","trigonometry"],"hasliked":0,"parentid":"","parentname":""}}