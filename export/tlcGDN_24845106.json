{"ver":"0.1","info":{"id":"tlcGDN","date":"1656055816","viewed":155,"name":"Raytracing plane wiki","username":"csblo","description":"Raytracing plane","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","plane"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 screenUV(vec2 uv)\n{\n    vec2 resizeUV = uv / iResolution.x;\n    return vec2(resizeUV.x - 0.5, resizeUV.y - (iResolution.y / iResolution.x * 0.5)); \n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = screenUV(fragCoord);\n\t\n    vec3 ray = vec3(uv, 1.);\n\n        \n    vec3 light = vec3(0.2, -0.8, 0.3);\n    \n    // plane\n    vec3 n = vec3(0.0, 1.0, 0.0);\n    //vec3 p0 = vec3(0., 0., 0.3);\n    vec3 p0 = vec3(0., 0.2, 0.);\n    //compute line-plane intersection\n    float d = dot(p0, n) / dot(ray, n);\n    // get hit point\n    vec3 p = ray * d;\n    \n    vec3 col = vec3(0);\n    \n    // check if intersect\n    if (dot(ray, n) < 0. /*&& p.z < 10.*/)\n    {\n        // project texture (x,y) coordinates from (x,z) hit point coordinates\n       \tcol = vec3(texture(iChannel0, vec2(p.x, p.z + iTime * 0.1) * 8.)) * dot(n, -light);\n    }\n    \n\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}