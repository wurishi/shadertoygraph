{"ver":"0.1","info":{"id":"XcB3WR","date":"1704025076","viewed":58,"name":"Fireworks 2024","username":"A__M","description":"Happy new Year!","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["2024"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 cache = texelFetch(iChannel0, ivec2(0,0), 0);\n    vec2 coord = cache.xy - vec2(0, yOffset);\n    float time = cache.z;\n \n    vec3 color = texelFetch(iChannel1, ivec2(coord) % 64, 0).rgb;\n\n    if (fly(iTime) > 0.f) {\n        color = clamp(vec3(dotRadius - length(fragCoord - coord)) / dotRadius, 0.f, 1.f);\n    }\n    else {\n        vec2 diff = fragCoord - coord;\n        float dist = length(diff);\n        \n        expRadius *= spread * (iTime - time + 1.f);\n        float offset = dist > expRadius ? radOffFront : -radOffBack;        \n        \n        float value = invLerp(expRadius + offset, expRadius, dist) * rays(diff / dist, 10);\n        color *= clamp(value, 0.f, 1.f);    \n    }    \n\n    vec2 uv = fragCoord / iResolution.y;\n    vec2 timeOff = vec2(iTime * textSpeed.x, textAmp * sin(uv.x * textSpeed.y));\n    \n    for (int i = 0; i < string.length(); i++) {\n        vec2 charOff = -vec2(float(i) * letterSpace * fsBig, textHeight);\n        color += print(iChannel2, mod(uv + charOff + timeOff, vec2(textWrap)), string[i], fsBig) * rainbow(uv);    \n    }\n        \n    for (int i = 0; i < credits.length(); i++) {\n        color += print(iChannel2, uv - vec2(float(i) * letterSpace * fsSmall, 0), credits[i], fsSmall);    \n    }\n    \n\n    fragColor = vec4(color, 1.0);\n    \n    \n}\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 old = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    float random = old.w;\n    \n    if (fly(iTime) > 0.f) {\n        fragColor = vec4(\n            mod(iTime * speed.x * sign(random) + random, iResolution.x),\n            iResolution.y / 2.f * (sin(iTime * speed.y) + 1.f),\n            iTime, \n            random\n        );\n    }\n    else {\n        fragColor = vec4(\n            old.xyz,\n            (texelFetch(iChannel1, ivec2(iTime, 0) % 64, 0).x - 0.5f) * 1000.f\n        );\n    }    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec2 speed = vec2(250.f, 4.f);\n\nfloat spread = 7.f;\nfloat dotRadius = 5.f;\nfloat expRadius = 10.f;\n\nfloat radOffFront = 15.f;\nfloat radOffBack = 90.f;\n\nfloat yOffset = 100.f;\n\nvec2 textSpeed = vec2(0.6f, 2.0f);\nfloat textAmp = 0.3f;\nfloat textHeight = .4f;\nfloat textWrap = 1.6f;\n\nfloat fsBig = 8.f;\nfloat fsSmall = 2.5f;\n\nfloat letterSpace = 0.008f;\n\nint string[] = int[](72, 97, 112, 112, 121, 32, 78, 101, 119, 32, 89, 101, 97, 114, 32, 50, 48, 50, 52, 33, 33, 33);\nint credits[] = int[](64, 65, 46, 77, 46, 32, 51, 49, 46, 49, 50, 46, 50, 48, 50, 51);\n\n\nfloat fly(float time) {\n    return sign(cos(time * speed.y));\n}\n\nfloat rays(vec2 norm, int deg) {\n    float x = norm.y > 0.f ? norm.x : -norm.x; // flip arccos vartically in III and IV quarter\n    return int(degrees(acos(x))) % deg == 0 ? 1.f : 0.f;\n}\n\nfloat invLerp(float start, float end, float val) {\n    return (val - start) / (end - start);\n}\n\n// modification of https://www.shadertoy.com/view/4sBfRd\nvec3 print(sampler2D tex, vec2 pos, int char, float fontSize) \n{\n    pos *= 64.0 / fontSize;\n    vec2 charIndex = vec2(char, 15 - char / 16);\n    \n    if (pos.x < 0.0 || pos.x > 1.0 || pos.y < 0.0 || pos.y > 1.0) return vec3(0,0,0);\n\treturn vec3(textureGrad(tex, pos / 16. + fract(charIndex / 16.), dFdx(pos / 16.), dFdy(pos / 16.)).xxx);\n}\n\n// from https://www.shadertoy.com/view/dsGXDt\nvec3 rainbow(vec2 uv) {\n     return abs(cos(uv.x + vec3(5,6,1)));\n}\n","name":"Common","description":"","type":"common"}]}