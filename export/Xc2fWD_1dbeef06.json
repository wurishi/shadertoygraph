{"ver":"0.1","info":{"id":"Xc2fWD","date":"1724943242","viewed":39,"name":"pattern noise","username":"Wik","description":"noise/patterns","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float outSeed( in float pixelIndex )\n{\n    // Example function, replace this with whatever you want\n    return fract(sin(pixelIndex * 1281.0 + pixelIndex * 54234.7 + cos(pixelIndex * 43343.554 + iTime) * sin(iTime/15.0)) * 123.321);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize the pixel coordinates to a range of [0, 1]\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Create a seed value by converting the 2D coordinates into a 1D value\n    float pixelIndex = uv.x + uv.y * iResolution.x / iResolution.y;\n    \n    // Apply a function to the seed\n    // Example function: seed^2\n    float outputSeed = outSeed(pixelIndex);\n    \n    // Use the outSeed value to create a grayscale color\n    vec3 color = vec3(outputSeed, outSeed(outputSeed), outSeed(outSeed(outputSeed)));\n    \n    // Output the final color\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}