{"ver":"0.1","info":{"id":"NtfGRf","date":"1622563071","viewed":68,"name":"Plasma studies","username":"Bjorn","description":"original idea: https://www.bidouille.org/prog/plasma","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test","zau"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xx;\n\n    // Time varying pixel color\n    \n    // x sinus:\n    float pop1 = sin(uv.x*10. + iTime)*.5+.5;\n    // rotate sinus : \n    float pop2 = sin(10.*(uv.x*sin(iTime)-.5 + uv.y*cos(iTime)-.5))*.5+.5;\n    // circles\n    vec2 c =vec2(uv.x-.5+sin(iTime), uv.y-.5+cos(iTime));\n    float pop3 = sin(sqrt(100.*(c.x*c.x+c.y*c.y)))*.5+.5;\n    // merge waves\n    float pop4 = (pop1 + pop2 + pop3);\n    \n    vec3 col = vec3(sin(pop4*3.),cos(pop4*3.),.5);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}