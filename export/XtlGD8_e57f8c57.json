{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Complex power\n//--------------\n\n// comment to supress isolines | shade | color\n#define ISOLINES\n#define SHADE\n#define COLORS\n\n// change it as you want\n#define powermax 2.0\n#define powermin 1.0\n\n// isoline interval and width\n#define interval 0.3\n#define linewidth 0.1\n\n#define pi 3.14159265359\n\nvec2 cartToPol(vec2 z){\n\treturn vec2(length(z),atan(z.y,z.x));\n}\n\nvec2 polToCart(vec2 p){\n\treturn vec2(p.r*cos(p.g),p.r*sin(p.g));\n}\n\nvec3 colorize(vec2 p){\n   \t// give a color for each number p\n    #ifdef COLORS\n    float A = mod(p.g/pi,2.0)-1.0; // angle from -1 to 1\n    float AA = abs(A + 1./3.) - 1.0;\n    float AAA = 1.0 - abs(A - 1./3.);\n    vec3 color = vec3(1.0 - abs(A), 1.0 - abs(AA),1.0 - abs(AAA));\n    color/=length(color);\n    #else\n    vec3 color=vec3(0);\n    #endif\n\t\n    #ifdef SHADE\n    color *= exp(-p.r)*1.2;\n    #endif\n    \n    // ==== iso-line ===\n    #ifdef ISOLINES\n    vec2 z = polToCart(p);\n    //float isog = smoothstep(interval-linewidth,interval+linewidth,abs(mod(A,2.0*interval)-interval));\n    float isor = smoothstep(linewidth,-0.03,abs(mod(p.r,interval)*2.0/interval - 1.0));\n    float isox = smoothstep(linewidth,-0.03,abs(mod(z.x,interval)*2.0/interval - 1.0));\n    float isoy = smoothstep(linewidth,-0.03,abs(mod(z.y,interval)*2.0/interval - 1.0));\n\t\n    return color + isox + isoy + isor;\n    #else\n    return color;\n    #endif\n}\n\nvec2 powz(vec2 p , float power){\n    return vec2(pow(p.r,power),power*mod(p.g,2.*pi));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 Z = ( 2.0*fragCoord.xy / iResolution.xy ) - 1.0;\n\tvec2 P = cartToPol(Z);\n        \n    vec2 p = powz(P,cos(iTime)*0.5*(powermax-powermin)+0.5*(powermin+powermax));\n\n    fragColor = vec4(colorize(p), 1.0 );\n\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XtlGD8","date":"1421667922","viewed":364,"name":"Complex power","username":"yakoudbz","description":"A simple shader to display the power of the complex plane (literally)\nYou can change powermax and powermin to any value you want.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fast","complex","power","transform"],"hasliked":0,"parentid":"","parentname":""}}