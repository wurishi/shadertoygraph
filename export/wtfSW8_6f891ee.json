{"ver":"0.1","info":{"id":"wtfSW8","date":"1563461276","viewed":147,"name":"Donuts can be beautiful too","username":"104","description":"How can we make a donut look nice?","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","donut"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float innerh = .17;\nconst float PI = 3.14159;\n\nvec3 dtoa(vec3  d, float amount){\n    vec3 a = clamp(1.0 / (clamp(d, 1.0/amount, 1.0)*amount), 0.,1.);\n    return a;\n}\nmat2 rot2D(float r){\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\nfloat nsin(float x) { return sin(x)*.5+.5;}\n\nvoid mainImage( out vec4 O, in vec2 P)\n{\n    float t = iTime + 100.;\n    vec2 R = iResolution.xy;\n    P -= R*.5;// center at origin\n    vec2 uv = P / R.y;// aspect correct uv\n    \n    float ang = atan(uv.x, uv.y);\n    // find a base height around the circle\n    float h = 0.;\n    float f = 1.;\n    for (float i = 0.; i < 5.; ++ i) {\n        h += nsin((ang+f)*i + t*f*.1);\n        f *= -1.37;\n    }\n    h = h*h;\n    \n    // find ind height for 3 separate components\n    vec3 h3 = h + .4*sin(t*vec3(1.,1.44,1.77) + ang*4.);\n    vec3 d3 = length(uv) - innerh - h3*.02; // distance\n    d3 = max(d3, -(length(uv) - innerh - h3 * .011));// donut\n    d3 = min(d3, length(uv) - h3*0.01); // center\n\n    vec2 shuv = uv+.06;\n    vec3 dsh = length(shuv) - innerh - h3*.02; // distance\n    dsh = max(dsh, -(length(shuv) - innerh - h3 * .011));// donut\n    dsh = min(dsh, length(shuv) - h3*0.01); // center\n    vec3 ash = dtoa(dsh, 30.)*.2;\n\n    O = vec4(1);\n    O *= 1.-min(ash.r, min(ash.g, ash.b));\n    vec3 a3 = dtoa(d3, 30.);\n    a3.rg *= rot2D(iTime*.4);\n    a3 = clamp(a3,0.,1.);\n    O.rgb = mix(O.rgb, a3, a3);\n    O.rgb = mix(vec3(O.r+O.g+O.b)/3.,O.rgb,.5);\n    vec2 N = P/R;\n    O = pow(O, vec4(4.));\n    O *= 1.-dot(N,N);\n    O += (fract(sin(dot(R+t,N))*1e5)-.5)*.05;\n    O.a = 1.;\n}\n\n\n","name":"Image","description":"","type":"image"}]}