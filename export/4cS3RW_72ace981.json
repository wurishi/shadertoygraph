{"ver":"0.1","info":{"id":"4cS3RW","date":"1707252129","viewed":131,"name":"Moon and Waves","username":"MonadoMaster0","description":"reference used: https://www.shadertoy.com/view/dlGfWV","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["waves","sea","moon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 p) {\n    return(fract(sin(dot(p,vec2(411.21,-47.52)))*45315.6327));\n    }\n\nfloat Circle(vec2 p, float R) {\n    return step(1.0-R/2.0,1.0-length(p));\n}\n\nfloat vnoise(vec2 p, float q) {\n    float re = 0.0;\n    \n    for (float i=0.0;i<q;i++) {\n        vec2 gv = fract(p);\n        vec2 id = floor(p);\n        float topL = rand(id+vec2(-0.5,0.5)),\n              topR = rand(id+vec2(0.5,0.5)),\n              botL = rand(id+vec2(-0.5,-0.5)),\n              botR = rand(id+vec2(0.5,-0.5));\n        float top = mix(topL,topR,gv.x);\n        float bot = mix(botL,botR,gv.x);\n        re += mix(bot,top,gv.y)/q;\n        p *= 2.0;\n        }\n    return re;\n    }\n\nmat2 rotate2D(float angle) {\n    \n    return mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n    }\n\nfloat wave(vec2 uv) {\n    float t = iTime;\n    vec2 n = vec2(0),q;\n    vec2 N = vec2(0);\n    vec2 p = uv + sin(t*0.1)/10.;\n    float S = 10.;\n    mat2 m = rotate2D(1. - iMouse.x * 0.0001);\n\n    for(float j=0.;j++<30.;){\n      p*=m;\n      n*=m;\n      q=p*S+j+n+t;\n      n+=sin(q);\n      N+=cos(q)/S;\n      S*=1.2; \n    }\n    return pow((N.x + N.y + 0.2)+.005/length(N), 2.1);\n    }\n\nvec3 moon(vec2 uv) {\n    vec3 ret = vec3(0.0);\n    float h = vnoise(uv*50., 2.0);\n    h = 1.0-clamp(h,0.3,0.4)*1.7;\n    float moon = 0.1/length(uv-vec2(-0.4,0.15));\n    moon = clamp(0.0,1.0,moon);\n    float c = Circle(uv-vec2(-0.4,0.15), 0.2);\n    moon -= c*h*(1.0-10.0*length(uv-vec2(-0.4,0.15)));\n    float m = moon;\n    ret += vec3(m-0.19,m-0.16,m-0.1);\n    return ret;\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.0);\n    vec3 m1 = moon(uv);\n    vec2 av = uv;\n    av = (av.y<-0.0)?av : vec2(0.0);\n    av.y*=6.0;\n    vec3 m2 = moon(uv-vec2(0.0,-0.5))*(wave(av*3.)*length(av.y)*5.0);\n    col += max(m1,m2-0.03);\n    \n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}