{"ver":"0.1","info":{"id":"dtX3zS","date":"1671988260","viewed":120,"name":"WavesTest1","username":"SteelFlame","description":"Numerical wave equation solve","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 D = vec2(1./iResolution.x,1./iResolution.y);\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float clr = texture(iChannel0,uv).r;\n    float xClr = texture(iChannel0,uv+vec2(D.x,0.)).r;\n    float yClr = texture(iChannel0,uv+vec2(0.,D.y)).r;\n    \n    vec3 N = (vec3(xClr-clr,0.,yClr-clr));\n    float C = length(N);\n    fragColor = vec4(clr,0.,-clr,0.)*3.+distortedTexture(iChannel1,uv,iFrame)*.02;\n    //fragColor = vec4(C)*20.+distortedTexture(iChannel1,uv,iFrame);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float gaussFunc2d(vec2 p, float D) {\n    return 1./(1.+pow(length(p)*D,2.));\n}\n\nvec2 D = vec2(0.01,0.01);\nfloat a = .8;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    D = vec2(1./iResolution.x,1./iResolution.y);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float pastV = texture(iChannel0,uv).y;\n    float V = texture(iChannel0,uv).x;\n    \n    float R = distortedTexture(iChannel1,uv,iFrame).w;\n    vec4 resistance = vec4(\n        distortedTexture(iChannel1,uv+vec2(D.x,0.),iFrame).w,\n        distortedTexture(iChannel1,uv+vec2(-D.x,0.),iFrame).w,\n        distortedTexture(iChannel1,uv+vec2(0.,D.y),iFrame).w,\n        distortedTexture(iChannel1,uv+vec2(0.,-D.y),iFrame).w\n    );\n    resistance = vec4(1.)-resistance;\n    \n    float deltasX = (texture(iChannel0,uv+vec2(D.x,0.)).x*resistance.x+texture(iChannel0,uv+vec2(-D.x,0.)).x*resistance.y-2.*V);\n    float deltasY = (texture(iChannel0,uv+vec2(0.,D.y)).x*resistance.z+texture(iChannel0,uv+vec2(0.,-D.y)).x*resistance.w-2.*V);\n    float newV = (deltasX+deltasY)*a*a/2.+(2.*V*(1.-R)-pastV)*1.;\n    \n    float spiralV1 = gaussFunc2d(uv-vec2(.5,.5)-vec2(cos(float(iFrame)*.05),sin(float(iFrame)*.05))*.0866,1000.)*.6;\n    float spiralV2 = gaussFunc2d(uv-vec2(.5,.5)-vec2(cos(float(iFrame)*.05+PI),sin(float(iFrame)*.05+PI))*.0866,1000.)*.6;\n    float addV = spiralV1-spiralV2;\n    //addV = gaussFunc2d(uv-vec2(.5,.5),1000.)*cos(float(iFrame)*.1);\n    //addV = 0.;\n    if (iMouse.z > 0.) {\n        float v1 = gaussFunc2d(uv-iMouse.xy/iResolution.xy,1000.)*.6;\n        addV = v1*sin(float(iFrame)*.2);//(v1*sin(float(iFrame)*.2));\n    }\n    \n    fragColor = vec4(newV+addV,V,0.,0.);\n    \n    if (iFrame == 0) {\n        float v = 0.;\n        //v=fbm(vec3(uv,0.),10.,1.,1,.5)*(1.-distortedTexture(iChannel1,uv).w);\n        //v=cos(uv.x*2.*PI)*cos(uv.y*2.*PI);\n        fragColor = vec4(v);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define PI 3.14\n\nfloat smoothh(float x) {\n    return x*x*x*(x*(x*6.0-15.0)+10.0);\n    return -2.0*x*x*x+3.0*x*x;\n}\nfloat lerp1d(float a, float b, float t) {\n    return a+(b-a)*t;\n}\nvec2 lerp(vec2 a, vec2 b, float t) {\n    return a+(b-a)*t;\n}\nfloat clamp01(float x) {\n    if (x>1.0) return 1.0;\n    if (x<0.0) return 0.0;\n    return x;\n}\nfloat frac(float x) {\n    return x-floor(x);\n}\nfloat random(vec3 uv) {\n    return frac(sin(dot(uv,vec3(12.9898,78.233,153.8465)))*43758.5453123);\n}\nvec3 getVector(vec3 x) {\n    return normalize(vec3(-1.0+random(x)*2.0, -1.0+random(x*100.0)*2.0, -1.0+random(x*100.0*100.0)*2.0));\n    \n}\nfloat noise(vec3 x) {\n    vec3 xInEdge = floor(x);\n    vec3 localX = vec3(frac(x.x),frac(x.y),frac(x.z));\n    \n    vec3 side000 = vec3(xInEdge+vec3(0,0,0));\n    vec3 side001 = vec3(xInEdge+vec3(0,0,1));\n    vec3 side010 = vec3(xInEdge+vec3(0,1,0));\n    vec3 side011 = vec3(xInEdge+vec3(0,1,1));\n    vec3 side100 = vec3(xInEdge+vec3(1,0,0));\n    vec3 side101 = vec3(xInEdge+vec3(1,0,1));\n    vec3 side110 = vec3(xInEdge+vec3(1,1,0));\n    vec3 side111 = vec3(xInEdge+vec3(1,1,1));\n    \n    vec3 vector000 = getVector(side000);\n    vec3 vector001 = getVector(side001);\n    vec3 vector010 = getVector(side010);\n    vec3 vector011 = getVector(side011);\n    vec3 vector100 = getVector(side100);\n    vec3 vector101 = getVector(side101);\n    vec3 vector110 = getVector(side110);\n    vec3 vector111 = getVector(side111);\n    \n    vec3 dir000 = x-side000;\n    vec3 dir001 = x-side001;\n    vec3 dir010 = x-side010;\n    vec3 dir011 = x-side011;\n    vec3 dir100 = x-side100;\n    vec3 dir101 = x-side101;\n    vec3 dir110 = x-side110;\n    vec3 dir111 = x-side111;\n    \n    float dot000 = dot(dir000,vector000);\n    float dot001 = dot(dir001,vector001);\n    float dot010 = dot(dir010,vector010);\n    float dot011 = dot(dir011,vector011);\n    float dot100 = dot(dir100,vector100);\n    float dot101 = dot(dir101,vector101);\n    float dot110 = dot(dir110,vector110);\n    float dot111 = dot(dir111,vector111);\n    \n    localX.x = smoothh(localX.x);\n    localX.y = smoothh(localX.y);\n    localX.z = smoothh(localX.z);\n    \n    float lerp1 = lerp1d(lerp1d(dot000,dot001,localX.z),lerp1d(dot010,dot011,localX.z),localX.y);\n    float lerp2 = lerp1d(lerp1d(dot100,dot101,localX.z),lerp1d(dot110,dot111,localX.z),localX.y);\n    \n    return lerp1d(lerp1,lerp2,localX.x);\n}\n\nfloat fbm(vec3 uv, float startFrequency, float startIntensity, int octavesCount, float persistance) {\n    float freq = startFrequency;\n    float intens = startIntensity;\n    float v = 0.;\n    for (int i = 0; i < octavesCount; i++) {\n        v += noise(uv*freq)*intens;\n        freq *= 2.;\n        intens *= persistance;\n    }\n    return v;\n}\n\nvec4 distortedTexture(sampler2D tex, vec2 uv, int frame) {\nreturn vec4(0.);\n    //float ratio = iResolution.x/iResolution.y;\n    //uv.x *= ratio;\n    //uv -= vec2(.885,.5);\n    //float v = length(uv);\n    //v = round(v);\n    //return vec4(v);\n    //return vec4(1.,0.,0.,1.);\n    vec2 U = vec2(uv.x*.2+4./5.-.03,uv.y);\n    float v = fbm(vec3(uv,float(frame)*.001),15.,.5,5,.5);\n    //v*=v;.\n    //v = .3/(1.+pow(1000.*(uv.x-.5),2.));\n    if (v < 0.) v = 0.;\n    if (v > 1.) v = 1.;\n    //if (uv.y > 0.35 && uv.y < 0.45) v =0.;\n    //if (uv.y > 0.55 && uv.y < 0.65) v =0.;\n    return vec4(v*.1,0.,0.,v);\n    return vec4(texture(tex,uv).rgb,.013)*texture(tex,uv).w;\n}\n","name":"Common","description":"","type":"common"}]}