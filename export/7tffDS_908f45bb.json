{"ver":"0.1","info":{"id":"7tffDS","date":"1651626576","viewed":66,"name":"Mandelbrot Zooming","username":"fprime","description":"Zooms in on the Mandelbrot Set.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 itersToColor(float i) {\n    return vec4(\n        i, \n        i * 2., \n        i * 3., \n        i\n    );\n}\n\nfloat cabs(vec2 c) {\n    return c.x * c.x + c.y * c.y;\n}\n\nvec2 cmul(vec2 c1, vec2 c2) {\n    return vec2(c1.x * c2.x - c1.y * c2.y, c1.y * c2.x + c1.x * c2.y);\n}\n\nvec2 cadd(vec2 c1, vec2 c2) {\n    return vec2(c1.x + c2.x, c1.y + c2.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 uv )\n{\n    float WIDTH  = iResolution.x;\n    float HEIGHT = iResolution.y;\n \n    float zoom = iTime * float(iFrame) / 1000.;\n \n    float scale = WIDTH * zoom;\n    float x_offset = (WIDTH / 2.) - 450. * zoom;\n    float y_offset = (HEIGHT / 2.) + 200. * zoom;\n    float x = (uv.x - x_offset) / scale;\n    float y = (uv.y - y_offset) / scale;\n    \n    vec2 c0 = vec2(x, y);\n    vec2 c = vec2(0.0, 0.0);\n    \n    int i;\n    int max_iters = 255;\n    \n    for (i = 1; i <= max_iters; i++) {\n        if (cabs(c) > 4.) {\n            break;\n        }\n        c = cadd(cmul(c, c), c0); \n    }\n    \n    \n    // Output to screen\n    if (i < 255) {\n        fragColor = itersToColor(float(i) / float(max_iters));\n    } else {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}