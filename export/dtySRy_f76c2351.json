{"ver":"0.1","info":{"id":"dtySRy","date":"1686221449","viewed":47,"name":"lil' fractal","username":"77Tigers","description":"idk","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["idk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Smooth HSV to RGB conversion \n// https://www.shadertoy.com/view/MsS3Wc\nvec3 hsv2rgb_smooth( in vec3 c ) {\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec2 m(vec2 x, vec2 y) {\n    return vec2(x.x*y.x - x.y * y.y, x.x * y.y + x.y * y.x);\n}\n\n//\n//vec2 f(vec2 x, vec2 c) {\n//    vec2 mo = 2. * (iMouse.xy - iResolution.xy * .5)/iResolution.y;\n//    return m(x, x + mo * 0.0) + c;\n//}\n\nvec2 f(vec2 x, vec2 c) {\n    return exp(x.x) * vec2(cos(x.y), sin(x.y)) + c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // MOUSE\n    vec2 mo = 2. * (iMouse.xy - iResolution.xy * .5)/iResolution.y;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 p = 2. * (fragCoord - iResolution.xy * .5)/iResolution.y;\n    \n    vec2 c = p;\n    \n    vec2 x = vec2(0.0);\n    \n    bool failed = false;\n    \n    int i;\n    \n    float res1 = .0;\n    \n    for (i = 0; i < 50; i++) {\n        float dx = mo.x - x.x;\n        float dy = mo.y - x.y;\n        float d2 = dx*dx + dy*dy;\n        res1 += 0.005 / d2;\n        \n        x = f(x, c);\n        if (length(x) > 100.) {\n            failed = true;\n            break;\n        }\n    }\n    \n    vec3 col = hsv2rgb_smooth(vec3(atan(x.y/x.x), 1.0, tanh(length(x))));\n    \n    if (failed) {\n        //col = (float(i) / 10.) * (hsv2rgb_smooth(vec3(atan(x.y/x.x), 1.0, 1.0)));\n        col = vec3(0.0);\n    }\n    \n    res1 = clamp(res1, 0., 1.);\n    col = res1 * vec3(1.0) + (1. - res1) * col;\n    \n    { // mouse thing 2\n        x = mo;\n        float res2 = 0.0;\n        for (i = 0; i < 50; i++) {\n            float dx = p.x - x.x;\n            float dy = p.y - x.y;\n            float d2 = dx*dx + dy*dy;\n            if (d2 < 0.05 * 0.05)\n                res2 = 0.5;\n\n            x = f(x, c);\n            if (length(x) > 10000000000000.) {\n                failed = true;\n                break;\n            }\n        }\n        col = res2 * vec3(0.0, 1.0, 0.0) + (1. - res2) * col;\n    }\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}