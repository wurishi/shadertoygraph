{"ver":"0.1","info":{"id":"4l3cDr","date":"1532177750","viewed":136,"name":"marble test","username":"saidwho12","description":"test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define HASHSCALE1 .1031\n#define HASHSCALE3 vec3(.1031, .1030, .0973)\n#define HASHSCALE4 vec4(.1031, .1030, .0973, .1099)\n\nfloat hash11(float p) {\n\tvec3 p3  = fract(vec3(p) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat hash12(vec2 p) {\n\tvec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat hash13(vec3 p3) {\n\tp3  = fract(p3 * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec2 hash21(float p) {\n\tvec3 p3 = fract(vec3(p) * HASHSCALE3);\n\tp3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nvec2 hash22(vec2 p) {\n\tvec3 p3 = fract(vec3(p.xyx) * HASHSCALE3);\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nvec2 fade(in vec2 p) {\n\treturn 6.0*pow(p,vec2(5.0)) - 15.0*pow(p,vec2(4.0)) + 10.0*pow(p,vec2(3.0));\n}\n\nfloat perlin(in vec2 p) {\n\tvec2 a = floor(p), b = ceil(p);\n    vec2 s = fade(p-a);\n    \n    float a1 = hash12(a)  * radians(360.0);\n    vec2 v1 = vec2(cos(a1), sin(a1));\n    \n    vec2 p2 = vec2(b.x, a.y);\n    float a2 = hash12(p2) * radians(360.0);\n    vec2 v2 = vec2(cos(a2), sin(a2));\n    \n    vec2 p3 = vec2(a.x, b.y);\n    float a3 = hash12(p3) * radians(360.0);\n    vec2 v3 = vec2(cos(a3), sin(a3));\n    \n    float a4 = hash12(b) * radians(360.0);\n    vec2 v4 = vec2(cos(a4), sin(a4));\n    \n    vec2 d1 = normalize(v1-p);\n    vec2 d2 = normalize(v2-p);\n    vec2 d3 = normalize(v3-p);\n    vec2 d4 = normalize(v4-p);\n    \n    float g1 = dot(d1, v1);\n    float g2 = dot(d2, v2);\n    float g3 = dot(d3, v3);\n    float g4 = dot(d4, v4);\n    \n    return mix(mix(g1, g2, s.x), mix(g3, g4, s.x), s.y);\n}\n/*\nfloat perlin(in vec2 p) {\n    vec2 low = floor(p);\n    vec2 high = ceil(p);\n    \n    vec2 s = fade(p-low);\n    \n    const float sides = 4.0;\n    \n    float a0 = radians(360.0*floor(sides*hash12(low))/sides);\n    vec2 p0 = vec2(cos(a0), sin(a0));\n    float a1 = radians(360.0*floor(sides*hash12(vec2(high.x, low.y)))/sides);\n    vec2 p1 = vec2(cos(a1), sin(a1));\n    float a2 = radians(360.0*floor(sides*hash12(vec2(low.x, high.y)))/sides);\n    vec2 p2 = vec2(cos(a2), sin(a2));\n    float a3 = radians(360.0*floor(sides*hash12(high))/sides);\n    vec2 p3 = vec2(cos(a3), sin(a3));\n    \n    vec2 d0 = normalize(p0-p);\n    vec2 d1 = normalize(p1-p);\n    vec2 d2 = normalize(p2-p);\n    vec2 d3 = normalize(p3-p);\n    \n    float g0 = dot(p0, d0);\n    float g1 = dot(p1, d1);\n    float g2 = dot(p2, d2);\n    float g3 = dot(p3, d3);\n    \n    return mix(mix(g0, g1, s.x), mix(g2, g3, s.x), s.y);\n}\n*/\n\nconst int N = 8;\n\nfloat marble(in vec2 p) {\n    float f = 0.0;\n    mat2 m = mat2(1.6,  1.2, -1.2,  1.6);\n    \n    float q = 0.5;\n    for(int i = 0; i < N; i++) {\n        f += q*perlin(p);\n        p = m*p;\n        q *= 0.5;\n    }\n    \n    f = f * 0.5 + 0.5;\n    return f;\n    \n    float a = f;\n    f = 0.0;\n    q = 0.5;\n    for(int i = 0; i < N; i++) {\n    \tf += q * abs(cos(a*radians(360.0))) * smoothstep(1.0, 0.0, q*10.0*abs(cos((1.0-q)*10.0*radians(360.0)*a)));\n        q *= 0.5;\n    }\n    \n    return 1.0-f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (2.0*fragCoord - iResolution.xy) / iResolution.y;\n    vec2 uv = fragCoord / iResolution.y;\n    float f = 0.0;\n    \n    //uv *= 2.0;\n    \n    fragColor = vec4(marble(uv*12.0));\n    //fragColor = vec4(f);\n}","name":"Image","description":"","type":"image"}]}