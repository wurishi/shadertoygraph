{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float g_cw = 15.; // char width in normalized units\nfloat g_ch = 30.; // char height in normalized units\n\nfloat g_cwb = .6; // character width buffer as a percentage of char width\nfloat g_chb = .5; // line buffer as a percentage of char height\n\n// vertical segment with the bottom of the segment being s\n// and having length d\nfloat vd( vec2 s, float d, vec2 uv )\n{    \n    float t = (d * (uv.y - s.y)) / (d*d);\n    t = clamp(t, 0., 1.);\n    return .1 * length((s + t * vec2(0., d)) - uv);\n}\n\n// horizontal segment with the left of the segment being s\n// and having length d\nfloat hd( vec2 s, float d, vec2 uv )\n{    \n    float t = (d * (uv.x - s.x)) / (d*d);\n    t = clamp(t, 0., 1.);\n    return .1 * length((s + t * vec2(d, 0.)) - uv);\n}\n\n// divide the experience into cells.\nvec2 mod_uv(vec2 uv)\n{\n    return vec2(mod(uv.x, g_cw * (1. + g_cwb)), \n                mod(uv.y, g_ch * (1. + g_chb)));\n}\n\n// ---------------------------------------------\n// ALPHABET\nfloat a(vec2 uv)\n{    \n    float r = vd(vec2(0.), g_ch * .9, uv);\n    r = min(r, hd(vec2(g_cw * .1, g_ch), g_cw * .8, uv));\n    r = min(r, vd(vec2(g_cw, 0.), g_ch * .9, uv));\n    r = min(r, hd(vec2(0., g_ch * .6), g_cw, uv));\n    return r;\n}\n\nfloat b(vec2 uv)\n{    \n    float r = vd(vec2(0.), g_ch, uv);\n    r = min(r, hd(vec2(.0, g_ch), g_cw, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .7), g_ch * .3, uv));\n    r = min(r, hd(vec2(0., g_ch * .6), g_cw * .8, uv));\n    r = min(r, vd(vec2(g_cw, 0.), g_ch * .5, uv));\n    r = min(r, hd(vec2(0.), g_cw, uv));\n    return r;\n}\n\nfloat c(vec2 uv)\n{    \n    float r = vd(vec2(0., g_ch * .1), g_ch * .8, uv);\n    r = min(r, hd(vec2(g_cw * .1, 0.), g_cw * .9, uv));\n    r = min(r, hd(vec2(g_cw * .1, g_ch), g_cw * .9, uv));\n    return r;\n}\n\nfloat d(vec2 uv)\n{    \n    float r = vd(vec2(0.), g_ch, uv);\n    r = min(r, vd(vec2(g_cw, g_ch * .1), g_ch * .8, uv));\n    r = min(r, hd(vec2(0.), g_cw * .9, uv));\n    r = min(r, hd(vec2(.0, g_ch), g_cw * .9, uv));\n    return r;\n}\n\nfloat e(vec2 uv)\n{    \n    float r = hd(vec2(.0, g_ch), g_cw, uv);\n    r = min(r, vd(vec2(0.), g_ch, uv));\n    r = min(r, hd(vec2(0.), g_cw, uv));\n    r = min(r, hd(vec2(0., g_ch * .6), g_cw * .8, uv));\n    return r;\n}\n\nfloat f(vec2 uv)\n{\n    float r = hd(vec2(0., g_ch), g_cw, uv);\n    r = min(r, vd(vec2(0.), g_ch, uv));\n    r = min(r, hd(vec2(0., g_ch * .6), g_cw * .8, uv));\n    return r;\n}\n\nfloat g(vec2 uv)\n{    \n    float r = hd(vec2(g_cw * .1, g_ch), g_cw * .8, uv);\n    r = min(r, vd(vec2(0., g_ch * .1), g_ch * .8, uv));\n    r = min(r, hd(vec2(g_cw * .1, 0.), g_cw * .8, uv));\n    r = min(r, vd(vec2(g_cw, .1 * g_ch), g_ch * .4, uv));\n    r = min(r, hd(vec2(g_cw * .5, g_ch * .6), g_cw * .4, uv));\n    return r;\n}\n\nfloat h(vec2 uv)\n{    \n    float r = vd(vec2(0.), g_ch, uv);\n    r = min(r, vd(vec2(g_cw, 0.), g_ch, uv));\n    r = min(r, hd(vec2(.0, g_ch * .6), g_cw, uv));\n    return r;\n}\nfloat i(vec2 uv)\n{    \n    float r = hd(vec2(0.), g_cw, uv);\n    r = min(r, vd(vec2(g_cw * .5, 0.), g_ch, uv));\n    r = min(r, hd(vec2(0., g_ch), g_cw, uv));\n    return r;\n}\n\nfloat j(vec2 uv)\n{    \n    float r = vd(vec2(g_cw, g_ch * .1), g_ch * .9, uv);\n    r = min(r, hd(vec2(g_cw * .1, 0.), g_cw * .8, uv));\n    r = min(r, vd(vec2(0., g_ch * .1), g_ch * .2, uv));\n    return r;\n}\n\n\nfloat k(vec2 uv)\n{    \n    float r = vd(vec2(0.), g_ch, uv);\n    r = min(r, vd(vec2(g_cw, g_ch*.7), g_ch * .3, uv));\n    r = min(r, vd(vec2(g_cw, 0.), g_ch * .5, uv));\n    r = min(r, hd(vec2(0., g_ch * .6), g_cw * .8, uv));\n    return r;\n}\n\nfloat l(vec2 uv)\n{    \n    float r = vd(vec2(0.), g_ch, uv);\n    r = min(r, hd(vec2(0.), g_cw, uv));\n    return r;\n}\n\nfloat m(vec2 uv)\n{    \n    float r = vd(vec2(0.), g_ch, uv);\n    r = min(r, vd(vec2(g_cw, 0.), g_ch, uv));\n    r = min(r, hd(vec2(0., g_ch), g_cw * .3, uv));\n    r = min(r, vd(vec2(g_cw * .5, g_ch * .6), .3 * g_ch, uv));\n    r = min(r, hd(vec2(g_cw * .7, g_ch), g_cw * .3, uv));\n    return r;\n}\n\nfloat n(vec2 uv)\n{    \n    float r = vd(vec2(0.), g_ch, uv);\n    r = min(r, vd(vec2(g_cw, 0.), g_ch, uv));    \n    r = min(r, vd(vec2(g_cw * .1, g_ch * .9), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .3, g_ch * .7), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .5, g_ch * .5), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .7, g_ch * .3), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .9, 0.), g_ch * .2, uv));\n    return r;\n}\n\nfloat o(vec2 uv)\n{    \n    float r = vd(vec2(0., g_ch * .1), g_ch * .8, uv);\n    r = min(r, hd(vec2(g_cw * .1, g_ch), g_cw * .8, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .1), g_ch * .8, uv));\n    r = min(r, hd(vec2(g_cw * .1, 0.), g_cw * .8, uv));\n    return r;\n}\n\nfloat p(vec2 uv)\n{    \n    float r = vd(vec2(0.), g_ch, uv);\n    r = min(r, hd(vec2(0., g_ch), g_cw, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .7), g_ch * .3, uv));\n    r = min(r, hd(vec2(0., g_ch * .6), g_cw * .8, uv));\n    return r;\n}\nfloat q(vec2 uv)\n{    \n    float r = vd(vec2(0., g_ch * .1), g_ch * .8, uv);\n    r = min(r, hd(vec2(g_cw * .1, g_ch), g_cw * .8, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .1), g_ch * .8, uv));\n    r = min(r, hd(vec2(g_cw * .1, 0.), g_cw * .8, uv));    \n    r = min(r, vd(vec2(g_cw * .7, g_ch * -.05), g_cw * .4, uv));\n    return r;\n}\n\nfloat r(vec2 uv)\n{    \n    float r = vd(vec2(0.), g_ch, uv);\n    r = min(r, hd(vec2(.0, g_ch), g_cw, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .7), g_ch * .3, uv));\n    r = min(r, hd(vec2(0., g_ch * .6), g_cw * .8, uv));\n    r = min(r, vd(vec2(g_cw, 0.), g_ch * .5, uv));\n    return r;\n}\nfloat s(vec2 uv)\n{    \n    float r = hd(vec2(0.), g_cw * .9, uv);\n    r = min(r, vd(vec2(g_cw, g_ch * .1), g_ch * .4, uv));\n    r = min(r, hd(vec2(g_cw * .2, g_ch * .6), g_cw * .7, uv));\n    r = min(r, vd(vec2(0., g_ch * .7), g_ch * .2, uv));\n    r = min(r, hd(vec2(g_cw * .2, g_ch), g_cw * .8, uv));\n    return r;\n}\n\nfloat t(vec2 uv)\n{    \n    float r = hd(vec2(0., g_ch), g_cw, uv);\n    r = min(r, vd(vec2(g_cw * .5, 0.), g_ch, uv));\n    return r;\n}\n\n\nfloat u(vec2 uv)\n{    \n    float r = vd(vec2(0., g_ch * .1), g_ch * .9, uv);\n    r = min(r, hd(vec2(g_cw * .1, 0.), g_cw * .8, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .1), g_ch * .9, uv));\n    return r;\n}\n\nfloat v(vec2 uv)\n{    \n    float r = vd(vec2(0., g_ch * .5), g_ch * .5, uv);\n    r = min(r, vd(vec2(g_cw, g_ch * .5), g_ch * .5, uv));\n    r = min(r, vd(vec2(g_cw * .2, g_ch * .2), g_ch * .2, uv));\n    r = min(r, vd(vec2(g_cw * .8, g_ch * .2), g_ch * .2, uv));\n    r = min(r, vd(vec2(g_cw * .5, 0.), g_ch * .1, uv));\n    return r;\n}\n\nfloat w(vec2 uv)\n{    \n    float r = vd(vec2(0.), g_ch, uv);\n    r = min(r, vd(vec2(g_cw, 0.), g_ch, uv));\n    r = min(r, vd(vec2(g_cw * .5, g_ch * .1), g_ch * .3, uv));\n    r = min(r, hd(vec2(0.), g_cw * .3, uv));\n    r = min(r, hd(vec2(g_cw * .7, 0.), g_cw * .3, uv));\n    return r;\n}\n\nfloat x(vec2 uv)\n{    \n    float r = vd(vec2(0., g_ch * .9), g_ch * .1, uv);\n    r = min(r, vd(vec2(g_cw * .2, g_ch * .7), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .5, g_ch * .5), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .8, g_ch * .3), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw, 0.), g_ch * .2, uv));    \n    r = min(r, vd(vec2(g_cw, g_ch * .9), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .8, g_ch * .7), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .2, g_ch * .3), g_ch * .1, uv));    \n    r = min(r, vd(vec2(0.), g_ch * .2, uv));\n    \n    return r;\n}\n\nfloat y(vec2 uv)\n{    \n    float r = vd(vec2(0., g_ch * .8), g_ch * .2, uv);\n    r = min(r, vd(vec2(g_cw * .2, g_ch * .6), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .8, g_ch * .6), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .8), g_ch * .2, uv));\n    r = min(r, vd(vec2(g_cw * .5, 0.), g_ch * .5, uv));\n    \n    return r;\n}\nfloat z(vec2 uv)\n{    \n    float r = hd(vec2(0., g_ch), g_cw, uv);\n    r = min(r, vd(vec2(g_cw * .9, g_ch * .9), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .7, g_ch * .7), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .5, g_ch * .5), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .3, g_ch * .3), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .1, g_ch * .1), g_ch * .1, uv));\n    r = min(r, hd(vec2(0.), g_cw, uv));\n    return r;\n}\n\n// ---------------------------------------------\n// NUMBERS\n\nfloat n1(vec2 uv)\n{    \n    float r = hd(vec2(g_cw * .3, g_ch), g_cw * .2, uv);\n    r = min(r, vd(vec2(g_cw * .5, 0.) , g_ch, uv));\n    return r;\n}\n\n\nfloat n2(vec2 uv)\n{    \n    float r = hd(vec2(0., g_ch), .9 * g_cw, uv);\n    r = min(r, vd(vec2(g_cw, g_ch*.7), g_ch * .2, uv));\n    r = min(r, hd(vec2(g_cw * .2, g_ch * .6), g_cw * .7, uv));\n    r = min(r, vd(vec2(0.), g_ch * .5, uv));\n    r = min(r, hd(vec2(0.), g_cw * .9, uv));\n    return r;\n}\nfloat n3(vec2 uv)\n{    \n    float r = hd(vec2(0., g_ch), .9 * g_cw, uv);\n    r = min(r, vd(vec2(g_cw, g_ch * .1), g_ch * .4, uv));\n    r = min(r, hd(vec2(g_cw * .2, g_ch * .6), g_cw * .7, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .7), g_ch * .2, uv));\n    r = min(r, hd(vec2(0.), g_cw * .9, uv));\n    return r;\n}\nfloat n4(vec2 uv)\n{    \n    float r = vd(vec2(0., g_ch * .6), g_ch * .4, uv);\n    r = min(r, hd(vec2(.0, g_ch * .6), g_cw, uv));\n    r = min(r, vd(vec2(g_cw, 0.), g_ch, uv));\n    return r;\n}\n\nfloat n5(vec2 uv)\n{    \n    float r = hd(vec2(0., g_ch), g_cw, uv);\n    r = min(r, vd(vec2(0., g_ch*.6), g_ch * .4, uv));\n    r = min(r, hd(vec2(g_cw * .1, g_ch * .6), g_cw * .8, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .1), g_ch * .4, uv));\n    r = min(r, hd(vec2(0.), g_cw * .9, uv));\n    return r;\n}\nfloat n6(vec2 uv)\n{    \n    float r = hd(vec2(g_cw * .1, g_ch), g_cw * .9, uv);\n    r = min(r, vd(vec2(0., g_ch * .1), g_ch * .8, uv));\n    r = min(r, hd(vec2(g_cw * .1, 0.), g_cw * .8, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .1), g_ch * .4, uv));\n    r = min(r, hd(vec2(g_cw * .2, g_ch * .6), g_cw * .7, uv));\n    return r;\n}\nfloat n7(vec2 uv)\n{\n    \n    float r = hd(vec2(0., g_ch), g_cw, uv);\n    r = min(r, vd(vec2(g_cw * .9, g_ch * .9), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .7, g_ch * .7), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .5, g_ch * .5), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .3, g_ch * .3), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .1, 0.), g_ch * .2, uv));\n    return r;\n}\n\nfloat n8(vec2 uv)\n{    \n    float r = hd(vec2(g_cw * .1, 0.), g_cw * .8, uv);\n    r = min(r, vd(vec2(g_cw, g_ch * .1), g_ch * .4, uv));\n    r = min(r, hd(vec2(g_cw * .2, g_ch * .6), g_cw * .7, uv));\n    r = min(r, vd(vec2(0., g_ch * .1), g_ch * .4, uv));\n    r = min(r, hd(vec2(g_cw * .1, g_ch), .8 * g_cw, uv));\n    r = min(r, vd(vec2(0., g_ch * .7), g_ch * .2, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .7), g_ch * .2, uv));\n    return r;\n}\nfloat n9(vec2 uv)\n{    \n    float r = hd(vec2(g_cw * .1, 0.), g_cw * .8, uv);\n    r = min(r, vd(vec2(g_cw, g_ch * .1), g_ch * .8, uv));\n    r = min(r, hd(vec2(g_cw * .2, g_ch * .6), g_cw * .6, uv));\n    r = min(r, hd(vec2(g_cw * .1, g_ch), g_cw * .8, uv));\n    r = min(r, vd(vec2(0., g_ch * .7), g_ch * .2, uv));\n    return r;\n}\nfloat n0(vec2 uv)\n{    \n    float r = vd(vec2(0., g_ch * .1), g_ch * .8, uv);\n    r = min(r, hd(vec2(g_cw * .1, g_ch), g_cw * .8, uv));\n    r = min(r, vd(vec2(g_cw, g_ch * .1), g_ch * .8, uv));\n    r = min(r, hd(vec2(g_cw * .1, 0.), g_cw * .8, uv));\n\n    r = min(r, vd(vec2(g_cw * .9, g_ch * .9), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .7, g_ch * .7), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .5, g_ch * .5), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .3, g_ch * .3), g_ch * .1, uv));\n    r = min(r, vd(vec2(g_cw * .1, g_ch * .1), g_ch * .1, uv));\n    \n    return r;\n}\n\n// ---------------------------------------------\n// SPECIAL CHARACTERS\n\nfloat pe(vec2 uv) // period\n{    \n    float r = vd(vec2(0.), g_ch * .02, uv);\n    \n    return r;\n}\n\n// ---------------------------------------------\n// MACROS\n\n#define A if (cs == idx) { tx = min(tx, a(uv)); } idx++;\n#define B if (cs == idx) { tx = min(tx, b(uv)); } idx++;\n#define C if (cs == idx) { tx = min(tx, c(uv)); } idx++;\n#define D if (cs == idx) { tx = min(tx, d(uv)); } idx++;\n#define E if (cs == idx) { tx = min(tx, e(uv)); } idx++;\n#define F if (cs == idx) { tx = min(tx, f(uv)); } idx++;\n#define G if (cs == idx) { tx = min(tx, g(uv)); } idx++;\n#define H if (cs == idx) { tx = min(tx, h(uv)); } idx++;\n#define I if (cs == idx) { tx = min(tx, i(uv)); } idx++;\n#define J if (cs == idx) { tx = min(tx, j(uv)); } idx++;\n#define K if (cs == idx) { tx = min(tx, k(uv)); } idx++;\n#define L if (cs == idx) { tx = min(tx, l(uv)); } idx++;\n#define M if (cs == idx) { tx = min(tx, m(uv)); } idx++;\n#define N if (cs == idx) { tx = min(tx, n(uv)); } idx++;\n#define O if (cs == idx) { tx = min(tx, o(uv)); } idx++;\n#define P if (cs == idx) { tx = min(tx, p(uv)); } idx++;\n#define Q if (cs == idx) { tx = min(tx, q(uv)); } idx++;\n#define R if (cs == idx) { tx = min(tx, r(uv)); } idx++;\n#define S if (cs == idx) { tx = min(tx, s(uv)); } idx++;\n#define T if (cs == idx) { tx = min(tx, t(uv)); } idx++;\n#define U if (cs == idx) { tx = min(tx, u(uv)); } idx++;\n#define V if (cs == idx) { tx = min(tx, v(uv)); } idx++;\n#define W if (cs == idx) { tx = min(tx, w(uv)); } idx++;\n#define X if (cs == idx) { tx = min(tx, x(uv)); } idx++;\n#define Y if (cs == idx) { tx = min(tx, y(uv)); } idx++;\n#define Z if (cs == idx) { tx = min(tx, z(uv)); } idx++;\n#define N1 if (cs == idx) { tx = min(tx, n1(uv)); } idx++;\n#define N2 if (cs == idx) { tx = min(tx, n2(uv)); } idx++;\n#define N3 if (cs == idx) { tx = min(tx, n3(uv)); } idx++;\n#define N4 if (cs == idx) { tx = min(tx, n4(uv)); } idx++;\n#define N5 if (cs == idx) { tx = min(tx, n5(uv)); } idx++;\n#define N6 if (cs == idx) { tx = min(tx, n6(uv)); } idx++;\n#define N7 if (cs == idx) { tx = min(tx, n7(uv)); } idx++;\n#define N8 if (cs == idx) { tx = min(tx, n8(uv)); } idx++;\n#define N9 if (cs == idx) { tx = min(tx, n9(uv)); } idx++;\n#define N0 if (cs == idx) { tx = min(tx, n0(uv)); } idx++;\n#define PE if (cs == idx) { tx = min(tx, pe(uv)); } idx++;\n#define SP idx++;\n#define NL idx+=int(cc - mod(float(idx), cc));\n\n// ---------------------------------------------\n\n\n// Periodic saw tooth function that repeats with a period of \n// 4 and ranges from [-1, 1].  \n// The function starts out at 0 for x=0,\n//  raises to 1 for x=1,\n//  drops to 0 for x=2,\n//  continues to -1 for x=3,\n//  and then rises back to 0 for x=4\n// to complete the period\n\nfloat sawtooth( float x )\n{\n    float xmod = mod(x+3.0, 4.);\n    return abs(xmod-2.0) - 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        \n    float display_width = 1010.;\n    float cc = floor(display_width / (g_cw * (1. + g_cwb))); // character count per line\n    \n    vec2 uv = (fragCoord.xy) / iResolution.xx;\n    uv.y = iResolution.y/iResolution.x - uv.y;  // type from top to bottom, left to right   \n    uv *= display_width;\n\n    int cs = int(floor(uv.x / (g_cw * (1. + g_cwb))) + cc * floor(uv.y/(g_ch * (1. + g_chb))));\n\n    uv = mod_uv(uv);\n    uv.y = g_ch * (1. + g_chb) - uv.y; // paint the character from the bottom left corner\n    vec3 ccol = .35 * vec3(.1, .3, .2) * max(smoothstep(3., 0., uv.x), smoothstep(5., 0., uv.y));   \n    uv -= vec2(g_cw * g_cwb * .5, g_ch * g_chb * .5);\n    \n    float tx = 10000.;\n    int idx = 0;\n    \n    //A B C D E F G H I J K L M N O P Q R S T U V W X Y Z N1 N2 N3 N4 N5 N6 N7 N8 N9 N0 PE NL\n    \n    NL \n\tNL \n    SP I N SP T H E SP N O T SP T O O SP D I S T A N T SP F U T U R E NL \n    SP W A Y SP D O W N SP I N SP D E E P SP N1 N3 NL\n    SP D R PE SP F O R R E S T E R SP A N D SP T V S SP F R A N K NL\n    SP W E R E SP H A T C H I N G SP A N SP E V I L SP S C H E M E PE NL\n    SP T H E Y SP H I R E D SP A SP T E M P SP B Y SP T H E SP N A M E SP O F SP M I K E NL\n    SP J U S T SP A SP R E G U L A R SP J O E SP T H E Y SP D I D N T SP L I K E PE NL\n    SP T H E I R SP E X P E R I M E N T SP N E E D E D SP A SP G O O D SP T E S T SP C A S E NL\n    SP S O SP T H E Y SP C O N K E D SP H I M SP O N SP T H E SP N O G G I N NL\n    SP A N D SP T H E Y SP S H O T SP H I M SP I N T O SP S P A C E SP PE PE PE \n\n    float throb = .4 + .2 * (.5 * sin(4. * iTime - .05 * float(cs)) + .5);\n    vec3 tcol = vec3(.7, 1., .8) * smoothstep(.2, .0, tx);\n    vec3 tglow = vec3(.7, 1., .8) * (.3 * throb + .7 * mix(.6, 1., throb) * smoothstep(throb, .1, tx));\n    \n    vec3 terminal_color = ccol + tcol + tglow;\n    vec3 simple_color = vec3(max(0., 1. - tx));\n    float trans = smoothstep(-.1, .1, sawtooth(.3 * iTime - 1.));\n        \n    fragColor = vec4(mix(terminal_color, simple_color, trans), 1.0);\n    \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsBSDm","date":"1413178306","viewed":1633,"name":"Distance Field Typeface","username":"mplanck","description":"Inspired by the Valve paper on alpha tested magnification, made a distance field typeface which can be anti-aliased and stylized.  Also inspired by another toy I'm working on.  Hint: MST3K and Britney.","likes":51,"published":1,"flags":0,"usePreview":0,"tags":["2d","distancefield","antialias","typeface","mst3k"],"hasliked":0,"parentid":"","parentname":""}}