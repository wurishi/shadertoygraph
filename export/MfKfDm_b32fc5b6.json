{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.3, 0.7);\n    vec3 b = vec3(0.5, 0.3, 0.2);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.00, 0.10, 0.20);\n\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n\n    float zoom = 1.0 + 0.5 * sin(iTime * 0.5);\n    uv *= zoom;\n    \n    for (float i = 0.0; i < 6.0; i++) {\n        uv = fract(uv * 1.8 + 0.1 * sin(iTime * 0.3 + i)) - 0.5;\n\n\n        float d = length(uv) * exp(-length(uv0) * (0.7 + 0.3 * cos(iTime * 0.3)));\n        d += 0.1 * sin(iTime + length(uv) * 5.0);\n\n        vec3 col = palette(length(uv0) + i * 0.5 + iTime * 0.5);\n\n        d = sin(d * 12.0 + iTime) / 8.0;\n        d = abs(d);\n        d = pow(0.02 / d, 1.5);\n\n        finalColor += col * d * (0.8 + 0.2 * cos(iTime + i));\n    }\n\n    finalColor *= 0.8 + 0.2 * cos(iTime * 0.7);\n\n\n    finalColor = pow(finalColor, vec3(0.8));\n\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MfKfDm","date":"1734117154","viewed":97,"name":"phantasm","username":"zhuo2","description":"12","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["graphic"],"hasliked":0,"parentid":"","parentname":""}}