{"ver":"0.1","info":{"id":"NddBRr","date":"1655926598","viewed":115,"name":"Butterfly (Distorted Tree)","username":"okelly4408","description":".","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tree","butterfly"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ROT(v, theta) mat2(cos(theta), sin(theta), -sin(theta), cos(theta)) * v\n//from iq\nfloat line_dist(in vec2 a, in vec2 b, in vec2 p )\n{\n    vec2 ba = b-a;\n    vec2 pa = p-a;\n    float h =clamp( dot(pa,ba)/dot(ba,ba), .0, 1. );\n    return length(pa-h*ba);\n}\nfloat draw_branch(vec2 r, vec2 dir, float angle, vec2 uv) {\n    vec2 b_1 = ROT(dir+r, angle);\n    float ld_1 = line_dist(r, b_1, uv);\n    vec2 b_2 = ROT(dir+r, -angle);\n    float ld_2 = line_dist(r, b_2, uv);\n    return min(ld_1, ld_2);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 px = fragCoord/iResolution.xy;\n    vec2 uv = (2.*px) - 1.;\n    uv.x *= iResolution.x/iResolution.y;\n    float th = (iTime+8.69) * .5;\n    float th2 = (iTime + 9.69) * .5;\n    vec2 a = vec2(.0, -.75);\n    vec2 b = vec2(.0, -.073);\n    vec4[63] branches;\n    branches[0] = vec4((b - a)/1.3, b);\n    float ln = 1e5;\n    float lnn = 1e5;\n    float s = 1.;\n    int back_indx = 0;\n    float n = 1.;\n    float jj = 1.;\n    vec3 rnd = texture(iChannel0, uv).rgb;\n    for (int j = 1; j < 127; j++, jj++) {\n        back_indx = (1 - j%2)*((j / 2) - 1) + ((j % 2)*((j - 1) / 2));\n        vec4 prev = branches[back_indx];\n        vec2 p_i = prev.zw;\n        float l_i = length(prev.xy);\n        vec2 p_j = ROT(prev.xy + p_i, (th + rnd.r) * s);\n        vec2 d_j = (p_j - p_i)/(1.3);\n        float ln_i =  draw_branch(p_j, d_j, (th+rnd.r), uv);\n       // n = (((sign(ln_i - ln) + 1.)*n) + ((sign(ln - ln_i) + 1.)*jj))/2.;\n        if (ln > ln_i) n = jj;\n        ln = min(ln, ln_i);\n        if (j < 63)\n            branches[j] = vec4(d_j, p_j);\n        s *= -1.;\n    }\n    branches[0] = vec4((b - a)/-1.6, b);\n    float nn = 1.;\n    jj = 1.0;\n    back_indx = 0;\n    s = 1.;\n    for (int j = 1; j < 63; j++, jj++) {\n        back_indx = (1 - j%2)*((j / 2) - 1) + ((j % 2)*((j - 1) / 2));\n        vec4 prev = branches[back_indx];\n        vec2 p_i = prev.zw;\n        float l_i = length(prev.xy);\n        vec2 p_j = ROT(prev.xy + p_i, (th2 + rnd.r) * s);\n        vec2 d_j = (p_j - p_i)/(1.6);\n        float ln_i =  draw_branch(p_j, d_j, (th2+rnd.r), uv);\n       // nn = (((sign(ln_i - lnn) + 1.)*nn) + ((sign(lnn - ln_i) + 1.)*jj))/2.;\n        if (lnn > ln_i) nn = jj;\n        lnn = min(lnn, ln_i);\n        if (j < 31)\n            branches[j] = vec4(d_j, p_j);\n        s *= -1.;\n    }\n    n = floor(log2(n))/12.0;\n    nn = floor(log2(nn))/10.0;\n    //palette functions from iq\n    vec3 col_ln = vec3(0.45, 0.3, 0.65) + 0.75*cos( 6.28318*(2.0*n+vec3(0.1,0.33,0.67)) );\n    vec3 col_lnn = vec3(0.45, 0.3, 0.65) + 0.75*cos( 6.28318*(1.75*nn+vec3(0.1,0.33,0.67)) );\n    float len = length(uv);\n    col_ln = mix(vec3(.0), col_ln, 1.-smoothstep(.0, .015, ln*len));\n    col_lnn = mix(vec3(.0), col_lnn, 1.-smoothstep(.0, .025, lnn*len));\n    fragColor = vec4( col_ln + col_lnn, 1.);\n}","name":"Image","description":"","type":"image"}]}