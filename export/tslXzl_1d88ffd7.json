{"ver":"0.1","info":{"id":"tslXzl","date":"1551930411","viewed":193,"name":"simple bolt","username":"brock","description":"bolt","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["bolt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    const vec4 _TintColor = vec4(0., 0., 0., 1.);\n    const vec4 _Color = vec4(0., 1., 1., 1.);\n    const vec4 _OutlineColor = vec4(0.5, 0.5,  1., 1.);\n    const float _Freq = 0.4;\n    const float _NoiseAdjust = 0.2;\n    const float _Speed = 1.5;\n    const float _Width = 1.7;\n    const float _OutlineWidth = 0.5;\n    const float _Angle = 0.;\n    const float _Tail = 0.1f;\n    vec3 vtx = vec3(uv - 0.5f, 1);\n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    // vec4 color = vec4(0., 0., 0., 0.);\n    vec2 noise_uv = uv + vec2(iTime * _Speed);\n    float noise1 = normalize(texture(iChannel0, noise_uv)).r * _Freq - _Freq * 0.5 * _NoiseAdjust;\n    // fixed noise2 = normalize(tex2D(_NoiseTex, _Time.xy * 1.3 + i.uv.zw)).b * 0.3 - 0.1;\n    const float pi = 3.1415927;\n    const float ang = _Angle * pi / 180.0f;\n    float width = _Width * 0.025 * smoothstep(0.0f, _Tail / 0.5f, 0.5f - abs(vtx.x));\n    // const float width = _Width * 0.025 * smoothstep(0, _Tail, (0.45 - abs(i.vtx.x)));\n\n    vec2 fp = vec2( vtx.x, vtx.x * tan(ang) + noise1);\n    float dist = distance(vtx.xy, fp);\n    float coreWidth = width * (1.0 - _OutlineWidth);\n    vec4 flashColor = mix(_Color, _OutlineColor, smoothstep(0.0f, coreWidth, dist));\n    fragColor = mix(flashColor, _TintColor, smoothstep(0.0f, width, dist));    \n    // fragColor = vec4(noise1, noise1, noise1, 1);\n\n    // Output to screen\n    // fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}