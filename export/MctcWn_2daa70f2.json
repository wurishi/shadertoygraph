{"ver":"0.1","info":{"id":"MctcWn","date":"1730500317","viewed":33,"name":"Don't get it twisted","username":"goeiecool9999","description":"Rotation value based on distance from the center and animated scaling.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["texture","rotation","twist"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, s, -s, c);\n\treturn m * v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    uv -= vec2(0.5,0.5);\n    float test = length(uv)-0.5;\n    uv = rotate(uv, test*sin(iTime/2.0)*3.1415*2.0);\n    uv += vec2(0.5,0.5);\n    \n    // Output to screen\n    fragColor = vec4(texture(iChannel0,uv).xyz,1.0);\n}","name":"Image","description":"","type":"image"}]}