{"ver":"0.1","info":{"id":"DtBczy","date":"1692093834","viewed":64,"name":"lines tip","username":"torleifs","description":"WIP lines","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["lines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b, t) smoothstep(a,b,t)\n\nfloat DistLine(vec2 p, vec2 a, vec2 b) {\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float t = clamp(dot(pa, ba)/dot(ba, ba), 0., 1.);\n    return length(pa - ba*t);\n}\n\nfloat N21(vec2 p) {\n    p = fract(p*vec2(233.34, 851.73));\n    p += dot(p, p+23.45);\n    return fract(p.x*p.y);\n}\n\nvec2 N22(vec2 p) {\n    float n = N21(p);\n    return vec2(n, N21(p+n));\n}\n\nfloat Line(vec2 p, vec2 a, vec2 b) {\n    float d = DistLine(p, a, b);\n    float m = S(0.03, 0.01, d);\n    m*= S(1.2, .8, length(a-b));\n    return m;\n}\nvec2 GetPos(vec2 id, vec2 offs ) {\n    vec2 n = N22(id + offs)* iTime;\n    \n    return offs + sin(n)*.4;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    //float d = DistLine(uv, vec2(0), vec2(1));\n    float m = 0.;\n    \n    // coordinate system -.5, .5 within each box\n    uv *= 5.;\n    vec2 gv = fract(uv) - .5;\n    vec2 boxId = floor(uv);\n    \n    // put random points in all boxes\n    vec2 p[9];\n    int i = 0;\n    for(float y = -1.; y <= 1.; y++) {\n        for(float x = -1.; x <= 1.; x++) {\n            p[i++] = GetPos(boxId, vec2(x, y));\n        }\n    }\n    \n    float t = iTime*5.;\n    for(int i = 0; i < 9; i++) {\n       \n        m += Line(gv, p[4], p[i]);\n        vec2 j = (p[i]-gv)*15.;\n        float sparkle = 1./dot(j,j);\n        m+= sparkle*(sin(t+ p[i].x*10.)*.5 +.5);\n    }\n    m+= Line(gv, p[1], p[3]);\n    m+= Line(gv, p[1], p[5]);\n    m+= Line(gv, p[7], p[3]);\n    m+= Line(gv, p[7], p[5]);\n    vec3 col = vec3(m);\n    //col.rg = gv;\n    \n    //if(gv.x> 0.48 || gv.y > .48) col = vec3(1,0,0);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}