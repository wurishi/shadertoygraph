{"ver":"0.1","info":{"id":"tdX3R8","date":"1544871643","viewed":263,"name":"track1","username":"nabr","description":"I GUESS YOU GUYS ARENâ€™T READY FOR THAT YET. BUT YOUR KIDS ARE GONNA LOVE IT!","likes":8,"published":1,"flags":8,"usePreview":0,"tags":["sound","generative","undergroundvibes","neosmixtape","liveset","followthewhiterabbit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// nabr\n// https://www.shadertoy.com/view/tdX3R8\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n// hex https://gist.github.com/sakrist/8706749\nfloat hex(vec2 p) {\n  p.x *= 0.57735*1.80;\n\tp.y += mod(floor(p.x), 12.0)*0.5;\n\tp = abs((mod(p, 1.0) - 0.5));\n\treturn abs(max(p.x*(.5+( (sin(iTime*.41)<.5) ?1.:-1.)) + p.y, p.y*2.0) - 1.0);\n}\n\nfloat r(vec2 p) {\n    float t = 0.0;\n    p *= .15;\n    float t0 = dot(0.0081, p.y) *\n        fract((dot(vec2(19998. * p.y, p.y), vec2((iTime * .1), iTime * .01)))) * 8.0;\n    float d = t0;\n    d += t0;\n    return max(sin(iTime) * d, -1.);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 st = (fragCoord.xy * 2.0 - iResolution.xy);\n    st /= min(iResolution.x, iResolution.y);\n    vec3 col = vec3(0.);\n    if(abs(st.y)>.65){fragColor.rgb=vec3(.1);return;};\t \n    vec3 ro = vec3(0,0, -2.001);\n    vec3 rd = normalize(ro - vec3(st, -1.0));\n   \n    if(mod(iTime,12.)>8.)\n        Brot(rd.yz,cos(iTime*2.1) + 14.  );\n    Brot(rd.xy,iTime+sin(iTime));\n    Brot(rd.yz,f(step(.8,mod(iTime,3.)))*1.8);\n    \n    float a = normalize(.5 + acos(rd.x));\n    float b = (((.5 - acos(rd.y)) * 2.0) * 2.0);\n    float tx = cos(a) * sin(b);\n    float ty = cos(a) * cos(b);\n    float tz = sin(a)-f(iTime*22.);\n    float t0 = max(max(-max(tx, -tz), ty),tx);\n    float x = r(iTime+vec2(a, f(iTime)+b));\n    t0 += x;;\n    vec3 result = 1.72*vec3(-1.0,1., 1.) *  \n        max(0.,dot(normalize(vec3(tx - t0,ty - t0, tz - t0)),\n                   normalize(vec3(2.0 * f(iTime), 1., 8.))));\n    col  = (t0*tan(12.-f(iTime))/6.)+result; \n    col *= f(iTime) * sqrt(result - abs(x + x + x));\n    \n    vec2 p = st/.520*f(iTime); \n\tfloat  r = (1.0 -0.7+cos(iTime*.1))*0.5;\t\n\tcol = col - hex(rd.xz+p); //(smoothstep(0.0, r + 0.05, hex(rd.xz+p)));\n    fragColor.rgb = col;\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// nabr\n// https://www.shadertoy.com/view/tdX3R8\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n\n#define Brot(p, a) p = cos(a) * p + sin(a) * vec2(p.y, -p.x)\n#define tau (8. * atan(1.))\n#define msk(t, p, snd) snd += sin(tau * p * t) * exp(-mod(t, 12.))\n#define final(t, p, snd) snd += sin(6.2831 * p * t) * exp(-mod(t, 2.1));\n\nfloat f( in float t) {\n\nfloat m =float[](10110., 10111., 1100.*.918+sin(t*16.))[int(mod(t * 2., 3.))];\n    \nint t1 = int(t);\nif(t1>13)\n{\nt = mod(t, 2.);\nfloat s = 0.;\nfloat p = 140.0;\nfloat f = 300.;\n\nfloat ph = 22.1;\nfloat tt = float[](t * 2., t * 12.)[t1];\nfloat tmpm = float[](10110., 10111., 500.)[int(mod(tt, 3.))];\nif ((exp(1. - sin(float(t1))) * 2.) <= 4.) \n{\nt1 = ((int(t) < 4) ? 0 : 1);\nm = float[](10110., 10111., 500.)[int(mod(tt, 3.))];\nph = 2.;\n}\ns = msk(t, m, s);\nif (t1 > 32 &&  t1 < 42 )\n{\nmsk(t * 12.32, f / .91, s);\nph = 22.;\n}\nmsk(t * .2, f / .91, s);\nfloat ff = f / 13.1;\nif (t1 > 24 && t1 < 28 ) ff = f / 3.;\nmsk(t, ff, s);\nif (t1 < 38 && t1 < 44 ) return final(t * ph,smoothstep(.42, .05, .7-s)+s, s);\nreturn final(t * ph, s, s)\n}\n// INTRO\nelse\n{\nt = mod(t, 2.);\nfloat s = 0.;\nfloat p = 140.0;\nfloat f = 300.;\nfloat m1 = float[](120., 180., mix(250.,180., sin(t*6.)*.5*.5))[ int(mod(t*5.,3.)) % 3 ];\nfloat m = float[](101010., m1, 11010.)[ int(mod(t*2.,3.1)) ];\ns = msk(t, m, s);\nmsk(t*.2, f/.91, s);\nfloat ff = f/10.1; ;\nmsk(t, ff, s);\nfloat sm = smoothstep(.42, .5, s );\nif(t1<8||t1>9)\nreturn final(t * 12., s, s ) ;\nreturn sm-sin(sm+t);\n}\n}\n\nvec2 r(vec2 v, float a)\n{\nfloat s = sin(a), c = cos(a);\nmat2 m = mat2(c, -s, s, c);\nreturn m * v;\n}\n\nvec2 mainSound( in int samp,float time )\n{\nvec3 p = vec3(f(time) * .75, f(time) * .95, f(time) * .5);\n\nvec2 s = vec2(0.);\n\nif (time < 12.5) \n{\nr(p.zy, 3.);\n\nr(p.zx, 3.141 * cos(time * .1));\nr(p.xy, 10. * sin(time * .01));\ns = max(p.xy, min(p.zx, p.yx));\n\n} \nelse {\nr(p.zy, 2.114);\nr(p.xy, 10. * sin(time * .01));\ns = max(p.xy, min(p.zx, p.yx));\n\n}\nreturn s;\n\n}\n/*\n\n    \n    if (time < 13.5) \n    {\n       \n       // Brot(p.xy, tmp1 );\n    \tBrot(p.zx, -3. );\n   \t\tBrot(p.xy, 1.52 );\n        return max(p.yx, min(p.zx, p.yx));\n\n    }\n    else {\n       \t\n        Brot(p.zy, 1.517 );\n        Brot(p.zy, 0. );\n        Brot(p.zy, 1.552 );\n        Brot(p.zx, 3.072);\n        return max(p.yx, min(p.zx, p.yx));\n\n    }\n*/","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"// see common tab","name":"Sound","description":"","type":"sound"}]}