{"ver":"0.1","info":{"id":"NtByzD","date":"1649244243","viewed":290,"name":"The Tetris Dimension","username":"Hyeve","description":"this is a mess\n\n\nbut it looks cool :>","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","transparency","glass","tetris","crystal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nvec2 uv;\nvec3 cp,cn,cr,ro,rd,ss,oc,cc,gl,vb;\nvec4 fc;\nfloat tt,cd,sd,io,oa,td,tc;\nint es=0,ec;\n\nfloat bx(vec3 p,vec3 s){vec3 q=abs(p)-s;return min(max(q.x,max(q.y,q.z)),0.)+length(max(q,0.));}\n\nvec3 minoc(int num)\n{\n\tnum=int(mod(float(num),7.));\n\tvec3 c;switch(num){\n\tcase 0:c=vec3(0.7,0,0);break;\n\tcase 1:c=vec3(0,0.7,0);break;\n\tcase 2:c=vec3(0.8,0.7,0.1);break;\n\tcase 3:c=vec3(0.5,0.2,0.8);break;\n\tcase 4:c=vec3(0.1,0.7,0.8);break;\n\tcase 5:c=vec3(0,0.2,0.7);break;\n\tcase 6:c=vec3(0.9,0.5,0);break;}\n\treturn c;\n}\n\nfloat mino(int num, vec3 p, float s)\n{\n\tnum=int(mod(float(num),7.));\n\tvec2 o2,o3,o4;switch(num){case 2:o2=vec2(1,-1);\n\to4=vec2(-0.5,0.5);break;case 3:o4=vec2(0,0.5);break;\n\tcase 4:o3=vec2(-2,0);o4=vec2(0.5,0);break;}\n\tif(num>2)o2=vec2(-1,0);if(num<4)o3=vec2(0,1-sign(num)*2);\n\tif(num>4){o3=vec2(sign(float(num)-5.5),-1);o4=vec2(0,0.5);}\n\tif(num<2){o2=vec2(-1,-sign(float(num)-0.5));o4=vec2(0,sign(float(num)-0.5)*0.5);}\n\tp.xy+=o4*s;vec3 dp=p;float hs=s/2.;float d=bx(dp, vec3(hs));\n\tdp.xy+=vec2(1,0)*s;d=min(d,bx(dp,vec3(hs)));dp=p;\n\tdp.xy+=o2*s;d=min(d,bx(dp,vec3(hs)));dp=p;\n\tdp.xy+=o3*s;d=min(d,bx(dp,vec3(hs)));dp=p;\n\treturn d;\n}\n\nfloat hash(vec2 p)\n{\n    p=fract(p)-cos(p);\n    vec2 q=tan(abs(p*37482.34)+p.yx*678324.);\n    return fract(q.x+p.x*q.y-p.y);\n}\n\nfloat mp(vec3 p)\n{\n\t\tvec3 pp=p;\n\t\tp.y+=tt;\n\t\tp.z-=20.;float yid=trunc(p.y/16.+8.);\n\t\tp.y=mod(p.y,16.)-8.;\n\t\tp.xz*=rot(tt*0.3+yid);\n\t\tp.xy*=rot(tt*0.1);\n\t\tint mn=int(tt+yid*2.);\n\t\tfloat mm=pow(mod(tt,1.),5.);\n\t\tfloat ms=3.;\n\t\tfloat mno=mino(mn,p,ms)-0.05;\n\t\tmno=mix(mno,mino(mn+1,p,ms)-0.05,mm);\n\t\tvec3 mc=mix(minoc(mn),minoc(mn+1),mm);\n\t\tif(mno>0.03)gl+=exp(-mno)*mc*1.4;\n\t\tp=pp;p.z+=tt*1.5;\n\t\tvec3 cellID = trunc(p/2.+0.5);\n\t\tvec3 id=vec3(hash(cellID.xx+cellID.yz),hash(cellID.yz),hash(cellID.zy))*vec3(1,0.6,1);\n\t\tif(length(id) < 1.15) id = vec3(0.);\n\t\telse id = normalize(id);\n\t\tif(isnan(id.x))id=vec3(0); //this is a stupid fix but whatever\n\t\tp.yz=mod(p.yz-1.,2.)-1.;\n\t\tp.x=abs(p.x)-28.;\n\t\tfloat wls = bx(p,vec3(0.7))-0.05;\n\t\tif(sd>0.01) gl += exp(-wls*0.1) * id*0.5;\n\t\tsd=min(mno,wls);\n\t\tsd=abs(sd)-0.001;\n\t\tif(sd<0.001)\n\t\t{\t\n\t\t\tio=mno<wls?1.1:1.05;\n\t\t\toc=mno<wls?mc:id;\n\t\t\toa=length(id)<0.5?0.:0.1;\n\t\t\tss=vec3(1.);\n\t\t  vb=vec3(0.);\n\t\t\tec=2;\t\n\t\t}\n\t\treturn sd;\n}\n\nvoid tr(){vb.x=0.;cd=0.;for(tc=1.;tc<512.;tc++){mp(ro+rd*cd);cd+=sd;td+=sd;if(sd<0.0001||cd>80.)break;}}\nvoid nm(){mat3 k=mat3(cp,cp,cp)-mat3(.001);cn=normalize(mp(cp)-vec3(mp(k[0]),mp(k[1]),mp(k[2])));}\n\nvoid px()\n{\n  cc=vec3(0.,0.,0.)+length(pow(abs(rd+vec3(0,0.5,0)),vec3(3)))*vec3(0.1,0.,0.2)+gl/tc;\n  vec3 l=vec3(0.5,0.5,0.8);\n  if(cd>80.){oa=1.;return;}\n  float df=clamp(length(cn*l),0.,1.);\n  vec3 fr=pow(1.-df,3.)*mix(cc,vec3(0.4),0.5);\n\tfloat sp=(1.-length(cross(cr,cn*l)))*0.2;\n\tfloat ao=min(mp(cp+cn*0.3)-0.3,0.3)*0.5;\n  cc=mix((oc*(df+fr+ss)+fr+sp+ao+gl/tc),oc,vb.x);\n}\n\nvoid render(vec2 frag, vec2 res, float time, out vec4 col)\n{\n\t\n  uv=vec2(frag.x/res.x,frag.y/res.y);\n  uv-=0.5;uv/=vec2(res.y/res.x,1);\n  ro=vec3(0,0,-15);rd=normalize(vec3(uv,1));\n\ttt=mod(time, 100.);\n  \n\tfor(int i=0;i<25;i++)\n  {\n\t\ttr();cp=ro+rd*cd;nm();ro=cp-cn*(io<0.?-0.01:0.01);\n\t\tcr=refract(rd,cn,i%2==0?1./io:io);i=io<0.?i+1:i;\n    if((length(cr)==0.&&es<=0)||io<0.){cr=reflect(rd,cn);es=(io<0.?es:ec);}\n    if(max(es,0)%3==0&&cd<128.)rd=cr;es--;\n\t\tif(vb.x>0.&&i%2==1)oa=pow(clamp(cd/vb.y,0.,1.),vb.z);\n\t\tpx();fc=fc+vec4(cc*oa,oa)*(1.-fc.a);if((fc.a>=1.||cd>80.))break;\n  }\n  col = pow(fc/fc.a,vec4(0.8));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    render(fragCoord.xy,iResolution.xy,iTime,fragColor);\n}","name":"Image","description":"","type":"image"}]}