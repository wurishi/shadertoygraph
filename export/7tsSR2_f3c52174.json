{"ver":"0.1","info":{"id":"7tsSR2","date":"1626115111","viewed":97,"name":"Dance of the Spheres_","username":"xlat","description":"Very simple","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fragmentshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///----------------------------------------------------------------------------|\n/// XLAT\n/// www.cyberforum.ru\n///----------------------------------------------------------------------------:\n\nconst vec3  RED   = vec3(0.6, 0. , 0. );\nconst vec3  GREEN = vec3(0. , 0.6, 0. );\nconst vec3  GRAY  = vec3(0.2, 0.4, 0.6);\nconst vec3  WHITE = vec3(1. , 1. , 1. );\n\nfloat stretch(float x, float start, float finish)\n{   return (x - start)/(finish - start);\n}\n\nvec4 foo_02(vec2 pos, float radius, float speed, vec3 COLOR)\n{\n                            \n    float   x = radius*sin(iTime *  speed);\n    float   y = radius*cos(iTime * (speed-0.2));\n    \n    float len = 2.3*length(vec2(pos.x - 0.5 + x, pos.y - 0.5 + y));\n    \n    vec4 res;\n    if( (0. < len && len < .2))\n    {   float l = len * 10.;\n        res = vec4(COLOR, 1.) *( 1. - l + 0.7);\n            \n    }\n    else\n        {float l = len * 10.;\n        res = vec4(0.,0.,0., 0.);\n    }\n\n    return res;\n}\n\nconst int N = 3;\nint next_n( int n)\n{   n++;\n    if(n == N) n = 0;\n    return n;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 COLOR[N];\n         COLOR[0] = vec3(RED);\n         COLOR[1] = vec3(GREEN);\n         COLOR[2] = vec3(GRAY);\n    \n    \n    vec2 uv = fragCoord/iResolution.xy;\n\n    int n = 0;\n    vec4 res = vec4(0.,0.,0., 0.);\n    for(float i = 0.15; i < 0.5; i += 0.05)///0.028\n    {\n        n = next_n(n);\n        res += foo_02(uv, i,  i * 2.6 , COLOR[n] );\n    }\n    fragColor = res;\n}\n","name":"Image","description":"","type":"image"}]}