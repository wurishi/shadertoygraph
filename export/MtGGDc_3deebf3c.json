{"ver":"0.1","info":{"id":"MtGGDc","date":"1477114520","viewed":274,"name":"All Seeing Eye","username":"MickLH","description":"Plotting the complex sine function with animated domain coloring.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["mathematics","complexplot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* <-- make the slash a double slash, good luck\n\n/// COSH Function (Hyperbolic Cosine)\nfloat cosh(float val)\n{\n    float tmp = exp(val);\n    float cosH = (tmp + 1.0 / tmp) / 2.0;\n    return cosH;\n}\n \n// TANH Function (Hyperbolic Tangent)\nfloat tanh(float val)\n{\n    float tmp = exp(val);\n    float tanH = (tmp - 1.0 / tmp) / (tmp + 1.0 / tmp);\n    return tanH;\n}\n \n// SINH Function (Hyperbolic Sine)\nfloat sinh(float val)\n{\n    float tmp = exp(val);\n    float sinH = (tmp - 1.0 / tmp) / 2.0;\n    return sinH;\n}\n//*/\n\nfloat hue2rgb(float p, float q, float t) {\n\tif(t < 0.0) t += 1.0;\n\tif(t > 1.0) t -= 1.0;\n\tif(t < 1.0/6.0) return p + (q - p) * 6.0 * t;\n\tif(t < 1.0/2.0) return q;\n\tif(t < 2.0/3.0) return p + (q - p) * (2.0/3.0 - t) * 6.0;\n\treturn p;\n}\nvoid HSL2RGB(out float r, out float g, out float b, float h, float s, float l) {\n\tif (abs(s) <= 0.0000001) {\n\t\tr = g = b = l; // achromatic\n\t} else {\n\t\tfloat q = (l < 0.5) ? l * (1.0 + s) : l + s - l * s;\n\t\tfloat p = 2.0 * l - q;\n\t\tr = hue2rgb(p, q, h + 1.0/3.0);\n\t\tg = hue2rgb(p, q, h);\n\t\tb = hue2rgb(p, q, h - 1.0/3.0);\n\t}\n}\nvoid mainImage2( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float sec = iTime;\n    float M_PI = 3.15159;\n    float sca = 1.0 + sin(iTime * 0.25) * 0.25;\n    float in_real = sca * (uv.x * 3.0 - 1.5) * iResolution.x / 640.0;\n\tfloat in_imag = sca * (uv.y * 3.0 - 1.5) * iResolution.y / 480.0;\n\tfloat out_real = sin(in_real) * cosh(in_imag);\n\tfloat out_imag = cos(in_real) * sinh(in_imag);\n\t\t\t\tfloat h = atan(out_imag, out_real) / (2.0 * M_PI);\n\t\t\t\tfloat s = abs(sin(2.0*M_PI*length(vec2(out_real,out_imag))));\n    float t2 = iTime * 0.2;\n    vec2 rm = vec2(t2*sin(t2)+cos(t2), t2*cos(t2)-sin(t2)) / 10.0;\n\t\t\t\tfloat l = sqrt(sqrt(abs(\n\t\t\t\t\tsin(2.0*M_PI*out_imag+rm.x)*\n\t\t\t\t\tsin(2.0*M_PI*out_real+rm.y)\n\t\t\t\t)));\n\t\t\t\tfloat omg = 1.0 / exp(l);\n\t\t\t\tfloat l1 = 0.5 * ((1.0 - s) + l + sqrt((1.0 - s - l)*(1.0 - s - l) + 0.01));\n\t\t\t\tl = 1.0 / (1.0 + l);\n\t\t\t\t\n\t\t\t\tfloat nl = (2.0 - s) * l;\n\t\t\t\ts *= l;\n\t\t\t\ts /= (l <= 1.0) ? l : (2.0 - l);\n\t\t\t\tl = nl / 2.0;\n    float fack = pow(sin(iTime) * 0.5 + 0.5, 5.0);\n\t\t s = 0.75 + fack;\n\t\t\t\n\t\t\t\tif (h < 0.0) h += 1.0 + ceil(-h);\n\t\t\t\th = mod(h, 1.0);\n\t\t\t\tfloat r=0.0, g=0.0, b=0.0;\n\t\t\t\tfloat r1=0.0, g1=0.0, b1=0.0;\n\t\t\t\tfloat r2=0.0, g2=0.0, b2=0.0;\n\t\t\t\tHSL2RGB(r,g,b,h,s,l);\n    float t3 = sin(iTime * 0.383)* 5.0 + 5.0;\n\t\t\t\th = mod(0.0 / 360.0, 1.0);\n\t\t\t\tHSL2RGB(r1,g1,b1,h,s,l);\n\t\t\t\th = mod(195.0 / 360.0, 1.0);\n\t\t\t\tHSL2RGB(r2,g2,b2,h,s,l);\n\n\t\t\t\tfloat t = omg - 0.5;\n\t\t\t\t\n\t\t\t\tr += (r1 + r2 + t * (r2 - r1));// / 2.0;\n\t\t\t\tg += (g1 + g2 + t * (g2 - g1));// / 2.0;\n\t\t\t\tb += (b1 + b2 + t * (b2 - b1));// / 2.0;\n    r/=3.0;g/=3.0;b/=3.0;\n\t\t\t\tomg *= mix(0.5, pow(sin(iTime * 0.5) * 0.5 + 0.5, 20.0), fack) * 0.25;\n\t\t\t\tr += r2 * omg;\n\t\t\t\tg += g2 * omg;\n\t\t\t\tb += b2 * omg;\n\n\tfragColor = vec4(b,g,r,1);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    mainImage2(fragColor, fragCoord);\n\n    //return; // UN-COMMENT THIS TO DISABLE AA\n   \n    float sp = 0.333;\n    vec4 aa1 = vec4(0.0);\n    vec2 fc2 = fragCoord + vec2(sp, sp);\n    mainImage2(aa1, fc2);\n    fragColor += aa1;\n    \n    //fragColor /= 2.0;return; // UN-COMMENT THIS USE 2x AA (Default = 5x)\n    \n    fc2 = fragCoord + vec2(sp, -sp);\n    mainImage2(aa1, fc2);\n    fragColor += aa1;\n    \n    fc2 = fragCoord + vec2(-sp, sp);\n    mainImage2(aa1, fc2);\n    fragColor += aa1;\n    \n    fc2 = fragCoord + vec2(-sp, -sp);\n    mainImage2(aa1, fc2);\n    fragColor += aa1;\n\n    fragColor /= 5.0;\n}","name":"Image","description":"","type":"image"}]}