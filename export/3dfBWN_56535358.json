{"ver":"0.1","info":{"id":"3dfBWN","date":"1588225839","viewed":97,"name":"Bare bones raymarching framework","username":"42yeah","description":"This shader does nothing else other than a few basic raymarching code. I wrote this so I can reuse it like crazy :P There aren't even lighting! ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// It's \"floor\" because floor is reserved keyword\nfloat sol(vec3 pos) {\n    return pos.y;\n}\n\nvec2 map(vec3 pos) {\n    float closest = 1000.0;\n    float id = -1.0;\n    \n    float dist = sol(pos);\n    if (dist < closest) { closest = dist; id = 0.5; }\n    \n    return vec2(closest, id);\n}\n\nvec2 trace(vec3 ro, vec3 rd) {\n    float depth = 0.0;\n    float id = -1.0;\n    for (int i = 0; i < 200; i++) {\n        vec2 info = map(ro + rd * depth);\n        if (info.x <= 0.001) {\n            id = info.y;\n            break;\n        }\n        depth += info.x;\n    }\n    return vec2(depth, id);\n}\n\nvec3 getColor(float id, vec3 pos) {\n    if (id < -0.5) { return vec3(0.0, 0.0, 0.0); } // sky\n    if (id < 1.0) { return vec3(1.0, 1.0, 1.0); } // ground\n    return vec3(1.0, 0.0, 0.0); // red for undefined\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    float aspect = iResolution.x / iResolution.y;\n    uv.x *= aspect;\n    \n    vec3 ro = vec3(0.0, 1.0, 5.0);\n    vec3 center = vec3(0.0, 0.0, 0.0);\n\n    vec3 front = normalize(center - ro);\n    vec3 right = normalize(cross(front, vec3(0.0, 1.0, 0.0)));\n    vec3 up = normalize(cross(right, front));\n    \n    mat4 lookAt = mat4(\n        vec4(right, 0.0),\n        vec4(up, 0.0),\n        vec4(front, 0.0),\n        vec4(0.0, 0.0, 0.0, 1.0)\n    );\n    vec3 rd = normalize(vec3(lookAt * vec4(uv, 2.0, 1.0)));\n    \n    vec2 info = trace(ro, rd);\n    vec3 pos = ro + rd * info.x;\n    vec3 objColor = getColor(info.y, pos);\n    objColor = pow(objColor, vec3(0.4545));\n    \n    fragColor = vec4(objColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}