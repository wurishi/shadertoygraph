{"ver":"0.1","info":{"id":"md2yDD","date":"1687740717","viewed":34,"name":"Generattiv - 1","username":"generattiv","description":"First shader I made. The color component is based off the normalized uv components after playing around with some values. ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n    \n    //Normalized x and y values\n    float nx = normalize(uv).x;\n    float ny = normalize(uv).y;\n    \n    //Variables to play with - with an added time value  \n    float a = uv.x / uv.y + uv.x*sin(uv.x + iTime);\n    float b = distance(normalize(uv), uv) + uv.y*cos(uv.y + iTime);\n    \n    \n    // time component to add to color\n    float t = uv.x/uv.y*sin(iTime);\n    \n    //float t = 0.;\n    //\n    //if(uv.y > 0.){\n    //    t = uv.x*sin(iTime);\n    //} else{\n    //    t = uv.y*sin(iTime);\n    //}\n   \n    vec3 color = vec3(0.1*t + a * b, 0.5*t + a * b , 1.*t + a * b);\n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}