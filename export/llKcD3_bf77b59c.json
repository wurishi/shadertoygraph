{"ver":"0.1","info":{"id":"llKcD3","date":"1538011336","viewed":458,"name":"Basic Circle Orbit","username":"birkal","description":"Basic Circle Orbit made from this video https://www.youtube.com/watch?v=dKA5ZVALOhs\n\n","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["basic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 p)\n{\n    return length(cross(p-ro,rd))/length(rd);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5; // range from -0.5 to 0.5 (at middle of screen)\n    \n    uv.x *= iResolution.x/iResolution.y; // adjust aspect ratio to square (width is larger than height)\n    \n    vec3 ro = vec3(0., 0., -2.); // negative is out of the screen\n    vec3 rd = vec3(uv.x, uv.y, 0.) - ro; // screen is at z=0, pointing to top left corner\n\n    float t = iTime;\n    vec3 p = vec3(sin(t), 0., 2.+cos(t)*2.);\n    float d = DistLine(ro, rd, p);\n    d = smoothstep(.1, .09, d);\n\n    // Output to screen\n    fragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}