{"ver":"0.1","info":{"id":"3ltBD4","date":"1612760583","viewed":249,"name":"Inner Circle","username":"yuhe","description":"Simple circular music visualizer","likes":12,"published":1,"flags":96,"usePreview":1,"tags":["music","visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4tfXR7","filepath":"https://soundcloud.com/spottermusic/simple-melody-1","previewfilepath":"https://soundcloud.com/spottermusic/simple-melody-1","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define BLUR_OUTWARDS 0\n#define GRADIENT_BACKGROUND 0\n\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n    vec4 color = vec4(0.0);\n    vec2 off1 = vec2(1.3846153846) * direction;\n    vec2 off2 = vec2(3.2307692308) * direction;\n    color += texture(image, uv) * 0.2270270270;\n#if BLUR_OUTWARDS\n    color += texture(image, uv - (off1 / resolution)) * 0.3162162162 * 2.0;\n    color += texture(image, uv - (off2 / resolution)) * 0.0702702703 * 2.0;\n#else\n    color += texture(image, uv + (off1 / resolution)) * 0.3162162162;\n    color += texture(image, uv - (off1 / resolution)) * 0.3162162162;\n    color += texture(image, uv + (off2 / resolution)) * 0.0702702703;\n    color += texture(image, uv - (off2 / resolution)) * 0.0702702703;\n#endif\n    return color;\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uvN = (uv - 0.5) * 4.0 * iResolution.xy / iResolution.y;\n    vec2 st = vec2(0.5 + (atan(uvN.x, uvN.y) / 6.28318530718), length(uvN));\n    \n    float k = floor(fract(st.x + 0.5) * 45.0) / 45.0 + 0.5 / 45.0;\n    k = k > 0.5 ? fract(1.0 - k * 2.0) : k * 2.0;\n    k = fract(k + iTime * 0.1);\n    float s = texture(iChannel1, vec2(k, 0.0)).x;\n    float a = 0.1 + 1.6 * s * s * exp(k);\n    \n    float d = smoothstep(0.01, 0.05, st.y - a) -\n              smoothstep(0.01, 0.05, st.y - a - 0.05);\n    \n    vec4 c = vec4(hsv2rgb(vec3(a + iTime, 1.0, 1.0)) * d, d) * 1.5;\n    vec4 pc = blur9(iChannel0, uv, iResolution.xy, vec2(uvN) * 2.0);\n    \n#if GRADIENT_BACKGROUND\n    vec4 c1 = vec4(hsv2rgb(vec3(0.0 + iTime * 0.1, 0.8, 0.1)), 1.0);\n    vec4 c2 = vec4(hsv2rgb(vec3(0.2 + iTime * 0.1, 0.8, 0.1)), 1.0);\n    vec2 bt = vec2(sin(uv.x + iTime), sin(uv.y + iTime));\n    vec4 bg = mix(c1, c2, bt.x * bt.x * bt.y * bt.y);\n    bg *= 1.0 + 2.0 * abs(1.0 - bt.x * bt.y);\n    vec2 blueNoiseUV = fragCoord / vec2(1024.0);\n    vec3 blueNoise = texture(iChannel2, blueNoiseUV).rgb;\n    blueNoise = fract(blueNoise + float(iFrame%256) * 0.61803398875);\n    float scale = exp2(float(8)) - 1.0;\n    bg = floor(bg*scale + vec4(blueNoise, 1.0)) / scale;\n#else\n    vec4 bg = vec4(0.0);\n#endif\n    \n    fragColor = mix(max(pc * 0.95, bg), c, d);\n}","name":"Buffer A","description":"","type":"buffer"}]}