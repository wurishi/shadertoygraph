{"ver":"0.1","info":{"id":"XtcyRB","date":"1533117405","viewed":177,"name":"Clouds Proc Noise 9","username":"phomo","description":"Gunk Spill","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["procedural","space"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void slice( out float value, in vec3 diffuse, in float base, in float spread )\n{\n    float renorm = 1.0/ spread;\n    value = (clamp(diffuse.r, base,base+spread) - base) * renorm;\n}\n\nvoid light( out float outVal, in float inVal, float tValue, in vec2 uv, in float radius )\n{\n    float fakedZ = tValue;\n    vec3 fakedPixelLocation = vec3(uv.x, uv.y, fakedZ);    \n    float dist = 1.0 - distance(fakedPixelLocation, vec3(0.5,0.5,0.75));\n    dist /= 32.0;\n    float lit = inVal * (dist / 0.1);\n    outVal = pow(lit,5.0);\n}\n\nvoid calcUV( out vec2 uvOut, in float tValue, in vec2 uv )\n{   \n    float nrmStep = 0.035;\n    vec2 blur = vec2(15,0.01);\n\tvec2 uvBase = uv.xy + tValue * blur;    \n    vec3 uvOffset = texture(iChannel1, uvBase + nrmStep * tValue + iTime * 0.01).rgb;\n    uvBase.x += (iTime * tValue * 0.02);\n    uvOut.xy = uvBase + (uvOffset.xy * nrmStep * tValue);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;    \n    \n    vec3 col = vec3(0.0,0.0,0.0);\n    float tValue = 0.0;\n    float diffuseZoom = 0.55;\n    float steps = 10.0;\n    float delta = 1.0 / steps;\n    float diffuseMultiplier = 4000.45;\n    vec3 baseDiffuse = vec3(1.0,1.52,1.25);\n    \n    while (steps > 0.0)\n    {\n        float slice1;\n        float lit;\n        vec2 fetchUV;\n        calcUV( fetchUV, tValue, uv);\n    \tvec3 diffuse1 = texture(iChannel0, fetchUV.xy*diffuseZoom).rgb;    \n    \tslice( slice1, diffuse1, tValue, 0.2 );\n        light( lit, slice1, tValue, uv, 0.5 );                \n        \n        col.rgb += (lit * baseDiffuse * diffuseMultiplier);\n        steps = steps - 1.0;\n        tValue += delta;\n    }       \n    \n\n    // Output to screen\n    fragColor = vec4( col.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}