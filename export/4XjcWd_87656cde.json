{"ver":"0.1","info":{"id":"4XjcWd","date":"1728782995","viewed":42,"name":"Blurry Flag","username":"Akeniston","description":"Blurry Flag","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blurryflag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float star(vec2 p, vec2 center, float size, float angleOffset) {\n    vec2 dir = p - center;\n    float angle = atan(dir.y, dir.x) + angleOffset; // Add angle offset to spin\n    float dist = length(dir);\n    float starShape = step(0.75, cos(angle * 5.0)) * step(dist, size);\n    return starShape;\n}\n\nvec2 starPos;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    starPos = vec2(0.25, 0.5); //Initialize star \n\n    //Get mouse \n    vec2 mousePos = iMouse.xy / iResolution.xy;\n    float starSize = 0.07; // Set size of star\n\n    //Drag the star\n    if (iMouse.z > 0.0) {\n        starPos = mousePos;\n    }\n\n    //spin the star\n    float spinSpeed = 5.9; //Speed of the spin\n    float angleOffset = iTime * spinSpeed;\n\n    //colors!\n    vec3 baseBlue = vec3(0.0, 0.0, 1.0);\n    vec3 baseRed = vec3(1.0, 0.0, 0.0);\n    vec3 baseWhite = vec3(1.0);\n    vec3 pinkColor = vec3(1.0, 0.75, 0.8);\n    vec3 purpleColor = vec3(0.5, 0.0, 0.5);\n\n    //Change colors\n    vec3 blueColor = mix(baseBlue, pinkColor, starPos.x * 2.0); //blue -> pink\n    vec3 redColor = mix(baseRed, purpleColor, starPos.x * 2.0); //red->purple\n    vec3 whiteColor = mix(baseWhite, purpleColor, starPos.x * 1.0); //white -> ple\n\n    //Create flag design\n    vec4 color;\n    if (uv.x < 0.5) {\n        color = vec4(blueColor, 1.0); //Background changes to blue/pink\n    } \n    else {\n        //Draw stripes\n        float stripeHeight = 0.5; //stripe height\n        if (mod(floor(uv.y / stripeHeight), 4.0) == 0.0) {\n            color = vec4(redColor, 1.0); //Stripes change to red/purple\n        } else {\n            color = vec4(whiteColor, 1.0); //White stripes\n        }\n    }\n\n    //Apply blur\n    float blurAmount = smoothstep(0.0, 1.0, mousePos.x) * 0.005;\n\n    vec4 blurredColor = vec4(0.0);\n    float totalWeight = 0.0;\n    for (float x = -4.0; x <= 4.0; x++) {\n        for (float y = -4.0; y <= 4.0; y++) {\n            vec2 offset = vec2(x, y) * blurAmount;\n            vec2 sampleUv = uv + offset;\n\n            //Calculate the color for each sampled pixel (based on its UV coordinates)\n            vec4 sampleColor;\n            if (sampleUv.x < 0.5) {\n                sampleColor = vec4(blueColor, 1.0);\n            } else {\n                float stripeHeight = 0.5;\n                if (mod(floor(sampleUv.y / stripeHeight), 2.0) == 0.0) {\n                    sampleColor = vec4(redColor, 1.0); //Stripes change to red/purple\n                } else {\n                    sampleColor = vec4(whiteColor, 1.0); //White stripes\n                }\n            }\n\n            blurredColor += sampleColor;\n            totalWeight += 1.0;\n        }\n    }\n\n    //blurred color for background\n    fragColor = blurredColor / totalWeight;\n\n    //Draw the star\n    float starShape = star(uv, starPos, starSize, angleOffset);\n    if (starShape > 0.0) {\n        fragColor = mix(fragColor, vec4(whiteColor, 1.0), starShape);\n    }\n}\n","name":"Image","description":"","type":"image"}]}