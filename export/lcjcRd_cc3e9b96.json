{"ver":"0.1","info":{"id":"lcjcRd","date":"1722874233","viewed":23,"name":"Osciladores 2.2","username":"jpupper","description":"//2.2\n//Intro senoidales\n//Taller de Livecoding con visuales en GLSL ","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["tutorial","sin","cos","shaders","shaders","livecoding","functions","taller","tutoriales","osciladores"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//2.2\n//Intro senoidales\n//Taller de Livecoding con visuales en GLSL \n\n\n//Puedo utilizar la directiva \"#define \" para crear las constantes.\n//Se suele utilizar para la constante PI, también para igualar el nombre de los uniforms\n//sin necesidad de cambiar todo el codigo. \n#define time iTime\n#define resolution iResolution\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n      vec2 uv = gl_FragCoord.xy / resolution.xy; //Obtengo las coordenadas UV(coordenadas cartesianas.\n   \n    //Si a la función senoidal le sumamos una variable. veremos que oscilara en relación en esa variable. \n    \n    float forma = sin(time+uv.x)*0.5+0.5; //Degrade constante en X\n          forma = sin(time+uv.y)*0.5+0.5; //Degrade constante en Y\n          forma = sin(time+uv.y+uv.x)*0.5+0.5; //Degrade constante en X+Y\n          \n    fragColor = vec4(vec3(forma),1.0); \n\n}","name":"Image","description":"","type":"image"}]}