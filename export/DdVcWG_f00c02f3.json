{"ver":"0.1","info":{"id":"DdVcWG","date":"1696543382","viewed":159,"name":"Mandelbulb z^12","username":"DarthNOdlehS","description":"MandelBulb z^12","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* by DarthNOdlehS */\n#define DOSXPI 6.283185307 \n#define NUM_ITERS 99\t\t// number interations\n#define D_MIN 0.0001\t\t// distance min 0.0001\n#define D_MAX 100.0\t\t\t// distance max 100.0\n#define CONTROL 1.0\n#define M_EXP  12.0\n\nfloat _z_pos = -2.0;\n\nvec3 hsv_to_rgb(vec3 hsv){\n\tfloat hue_col = 6.0 * fract(hsv.x); \n\tfloat r = -1.0 + abs(hue_col - 3.0);\n\tfloat g =  2.0 - abs(hue_col - 2.0);\n\tfloat b =  2.0 - abs(hue_col - 4.0);\n\tvec3 rgb = clamp(vec3(r, g, b),0.0,1.0); \t//hue\n\trgb = mix(vec3(1.0), rgb, hsv.y); \t\t\t//saturation\n\treturn rgb * hsv.z; \t\t\t\t\t\t//value\n}\n\nvec2 rotation(float argo, float prima, float secua){\n\tfloat s = sin(argo);\n\tfloat c = cos(argo);\n\treturn vec2(prima * c + secua * s, -prima * s + secua * c);\n}\n\nfloat distance_to_mb( vec3 r3d ){     // BULB z ^ M\n\tr3d.xy = rotation(DOSXPI*sin(iTime*0.03),r3d.x, r3d.y);\n\tr3d.yz = rotation(DOSXPI*cos(iTime*0.03),r3d.y, r3d.z);\n\tfloat mxthe, mxphi, rexpm, sinthe, radius;\n\tvec3 zn = r3d;\n\tfloat df = 1.0;\n\n\tfor( int i = 0; i < 10; i++ ){\n\t\tradius = length( zn );\n\t\tif( radius > 2.0 )\t\n\t\t\tbreak;\t\t\t\t\n\t\tmxthe = M_EXP*atan( length( zn.xy ), zn.z ); // M x theta\n\t\tmxphi = M_EXP*atan( zn.y, zn.x );\t\t\t // M x phi\n\t\trexpm = pow(radius,M_EXP);\t\t\t\t\t // r ^ M\n\t\tsinthe=sin(mxthe); \n\t\tzn = rexpm * vec3(sinthe * cos(mxphi), sinthe * sin(mxphi), cos(mxthe)) + r3d;  \n\t\tdf = M_EXP * pow(radius, M_EXP-1.0) * df + CONTROL; \n\t}\n\treturn 0.5 * log(radius) * radius / df;\t\t\t// final distance aprox\n}\nvec2 ray_marching_plus(vec3 p_ini, vec3 u_raymar_dir){\t\n\tfloat deep=0.0;\n\tfloat delta=0.0;\n\tint i;\n\tfor(i=0; i<NUM_ITERS; i++){\n\t\tdelta = distance_to_mb(p_ini + deep * u_raymar_dir);\n\t\tif ( delta < D_MIN) \n\t\t\tbreak;\t\t \n\t\tdeep += delta;\n\t}\n\treturn vec2(deep, i);  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv =  (fragCoord-0.5*iResolution.xy)/iResolution.yy;  \n\tvec3 p_ini=vec3(0.0, 0.0, _z_pos + 0.7* sin(iTime*0.3));  // camera pos\n\tvec3 u_raymar_dir = normalize(vec3(uv.x, uv.y ,1.0));     //ray marching direction\n\tvec2 deepi = ray_marching_plus(p_ini, u_raymar_dir);\n\tvec3 pos3d = p_ini + deepi.x * u_raymar_dir;\t\n\tvec3 col =hsv_to_rgb(vec3(0.1 - length(pos3d), 0.8, 10.0/deepi.y)); \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}