{"ver":"0.1","info":{"id":"wlG3Dd","date":"1580164471","viewed":104,"name":"Learning Code [16]","username":"ozu","description":"Still trying to figure out uvs...\n\nBits taken there :\nhttps://www.youtube.com/watch?v=rvDo9LvfoVE&feature=youtu.be&fbclid=IwAR0dMj4aibeKJoy630xq0OXPV91sKIVu50uD6B_eBo9Px6ATBX8zBWyUAGY","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","uv","circle","smoothstep","floor","fract","hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 Circle(vec2 uv, float radius, float blur, float cell, float d){\n\t \n    vec3 col =  vec3(smoothstep(radius + blur, radius, d));\n\t//vec3 col = vec3(0.1/length(uv));\n    return col;\n}\n\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(123.34, 456.21));\n    p += dot(p, p+45.32);\n    return fract(p.x*p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord - .5 * iResolution.xy) /iResolution.y;\n\n    vec3 col = vec3(0);\n    float cell = 100.;\n    uv *= cell;\n    vec2 gv = fract(uv);\n\n    float d = length( gv-.5) ;\n    vec2 id = floor(uv);\n    \n    float radius = Hash21(id) * .4;\n    radius *= sin(id.x * id.y + iTime);\n    float blur = (1.5 * cell) / iResolution.y;\n    \n    col += Circle(gv, radius, blur, cell, d);\n   \n    \n\n    \n    //if (gv.x < .02 || gv.y < 0.02) col.r = 1.;\n\t\n    col *= Hash21(id) * sin(id.x * id.y + iTime);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}