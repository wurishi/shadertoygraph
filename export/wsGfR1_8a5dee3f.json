{"ver":"0.1","info":{"id":"wsGfR1","date":"1606563903","viewed":186,"name":"Cookie Jam","username":"Flopine","description":"Improvised in 30 minutes during a cookie collective stream! Had fun experimenting with FFT driven FX :) \nWatch the live here: https://www.twitch.tv/cookiedemoparty","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","fft","animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n\n#define mo(puv,d) puv=abs(puv)-d;if(puv.y>puv.x) puv=puv.yx\n#define circ(puv,s) (length(puv)-s) \n#define TAU 6.283185\n#define pal(c,t,d) (vec3(0.5)+vec3(0.5)*cos(TAU*(c*t+d)))\n#define dt(speed,off) fract(iTime*speed+off)\n#define switanim(sp) floor(sin(dt(sp,0.)*TAU)+1.)\n#define BPM (110./60.)\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a)) \n\n\nvoid moda (inout vec2 uv, float rep)\n{\n    float per = TAU/rep;\n    float a = mod(atan(uv.y,uv.x),per)-per*0.5;\n    uv = vec2(cos(a),sin(a))*length(uv);\n}\n\nfloat frame (vec2 uv)\n{\n    vec2 uu = uv;\n    \n    float f = smoothstep(0.015+texture(iChannel0, vec2(0.001,0.25)).x*0.2,0.01, abs(circ(uv,0.5)));\n\n    moda(uv,12.);\n    mo(uv, vec2(0.55));\n    uv.y -= sin(uv.x*2.)*0.2;\n    f+= texture(iChannel0, vec2((uv.x+uv.y)*0.2,0.25)).x*1.2;\n\n    moda(uu, 5.);\n    mo(uu,vec2(0.9));\n    for(int i=0; i<4;i++)\n    {\n        float ratio = float(i)/4. ;\n        uu.x -= 1.;\n        uu *= rot(dt(0.05,ratio*2.)*TAU);\n        f += smoothstep(0.1,0.09, abs(uu.x))*0.7;\n    }\n    return f;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    \n    float detail = 60.*texture(iChannel0, vec2(0.0001,0.25)).x*1.5;\n    uv = floor(uv*detail)/detail;\n\n    float size = (switanim(BPM/2.)<0.5) ? 1.: 5.;\n\n    vec3 col = frame(uv*size)*pal(length(uv),vec3(0.3),vec3(0.,0.36,0.64));\n    \n    fragColor = vec4(sqrt(col),1.);\n}","name":"Image","description":"","type":"image"}]}