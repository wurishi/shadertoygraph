{"ver":"0.1","info":{"id":"WsKfRW","date":"1606681791","viewed":197,"name":"Abstract color overlay","username":"pixeljig","description":"Testing an overlay concept I saw in an app. Try it out with different blending modes, and maybe gamma correction.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["color","abstract","rotation","overlay"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 screen(vec4 a, vec4 b) {\n  return 1.0 - (1.0 - a) * (1.0 - b);  \n}\n\nvec4 multiply(vec4 a, vec4 b) {\n    return a*b;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv1 = fragCoord/iResolution.xy;\n    float angle = mod(iTime, 360.0);\n    uv -= vec2(0.5);\n    uv *= vec2(iResolution.x/iResolution.y, 1.0);\n    uv = uv * mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    uv += vec2(0.5);\n    // Output to screen\n    vec4 a = vec4(texture(iChannel1, uv1).rgb, 1.0);\n    vec4 b = vec4(texture(iChannel0, uv).rgb, 1.0);\n    fragColor = multiply(a, b);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 rgb(float r, float g, float b) {\n   return vec3(r, g, b)/255.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    if (uv.x <= 0.5 && uv.y > 0.5) {\n     \tcol = rgb(20.0, 175.0, 93.0);\n    }\n    \n    if (uv.x >= 0.5 && uv.y > 0.5) {\n     \tcol = rgb(130.0, 168.0, 246.0);\n    }\n    \n    if (uv.x <= 0.5 && uv.y < 0.5) {\n     \tcol = rgb(130.0, 35.0, 76.0);\n    }\n    \n    if (uv.x >= 0.5 && uv.y < 0.5) {\n     \tcol = rgb(233.0, 135.0, 8.0);\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}