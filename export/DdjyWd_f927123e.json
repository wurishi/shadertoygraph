{"ver":"0.1","info":{"id":"DdjyWd","date":"1689571273","viewed":73,"name":"Circles10","username":"andydevs","description":"Shader of circles that move around","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589\n\nvec3 colorMap1D(float arg) {\n    vec3 freqs = vec3(0.75, 1.15, -0.75);\n    vec3 phases = vec3(0, 1.2, 4.0);    \n    return 0.5*(1.0 + cos(arg*freqs + phases));\n}\n\nvec3 path(float p) {\n    float rescale = min(iResolution.x, iResolution.y);\n    float radius = 1.625;\n    float scalex = iResolution.x/rescale;\n    float scaley = iResolution.y/rescale;\n    return vec3(\n        radius * scalex * cos(iTime + 3.0 * p),\n        radius * scaley * sin(iTime + 4.0 * p),\n        cos(iTime + 1.5 * p) - 1.0\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize pixel & set camera z position\n    float rescale = min(iResolution.x, iResolution.y);\n    vec2 uv = (2.0*fragCoord - iResolution.xy)/rescale;\n    float cameraZ = -2.0;\n    \n    // Circle count and radius\n    float numCircles = 50.0;\n    float radius = 0.125;\n    \n    // Color parameters\n    float lumino = 0.01/log(numCircles + 1.0);\n    vec3 finalColor = vec3(0.0);\n    \n    // Circles are spaced evenly along a circle\n    for (float w = 0.0; w < 2.0*PI; w += 2.0*PI/numCircles) {\n        // Calculate circle center based on path\n        vec3 center = path(w);\n        \n        // Signed distance to circle\n        center.z = -(center.z + cameraZ);\n        float sdist = length(uv - center.xy/center.z) - radius/center.z;\n        \n        // Color calculation\n        float lum = lumino/abs(sdist);\n        vec3 color = colorMap1D(iTime + w);\n        finalColor += lum*color;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}