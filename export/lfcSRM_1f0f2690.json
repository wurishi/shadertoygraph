{"ver":"0.1","info":{"id":"lfcSRM","date":"1713714383","viewed":98,"name":"First steps into 3D","username":"Chalouek","description":"Some simple educational content","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["3d","simple","education"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // just values for future point\n    vec3 point = vec3(cos(iTime),-0.3,sin(iTime)+2.);\n    float pointScale = 0.2;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    vec2 viewport = vec2((uv.x-0.5)*ratio,(uv.y-0.5));//centered uv coordinates with aspect ratio correction\n    \n    vec2 zOffset = viewport*point.z;// by multiplication we offsetting our viewport plane into Z depth direction\n    //as if our POV = 90 deg\n    //Viewport * 1 means 1 length of horizontal line from center to edge of viewport into screen depth direction\n    //more you multiply smaller scale of object you get, \n    //smaller appears distance of 1 unit from viewport center in screen plane direction\n    //play with point values to understand\n    \n    //draw our circle on zOffseted plane of viewport\n    if (distance(zOffset,vec2(point.x,point.y)) < pointScale){\n    fragColor = vec4(point.z/3.);\n    }else{\n    fragColor = vec4(zOffset,0.,1.0); //our zOffset coords\n    }\n}","name":"Image","description":"","type":"image"}]}