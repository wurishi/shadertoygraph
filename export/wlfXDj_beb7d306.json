{"ver":"0.1","info":{"id":"wlfXDj","date":"1564294524","viewed":91,"name":"peels_spin","username":"Hirai_worthless","description":"aaaaaaaaa","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p){\n\n        p.xz *= mat2(cos(iTime),-sin(iTime)\n             ,sin(iTime),cos(iTime));\n\tfloat s1 = max(abs(length(p) - 1.8) - 0.05, max(p.x,-p.z));\n        p.yz *= mat2(cos(iTime),-sin(iTime)\n             ,sin(iTime),cos(iTime));\n    float s2 = max(abs(length(p) - 1.5) - 0.05,max(p.y,-p.z));\n        p.xy *= mat2(cos(iTime),-sin(iTime)\n             ,sin(iTime),cos(iTime));\n    float s3 = max(abs(length(p) - 1.2) - 0.05,max(p.x,-p.y));\n            p.xz *= mat2(cos(iTime),-sin(iTime)\n             ,sin(iTime),cos(iTime));\n\tfloat s4 = max(abs(length(p) - 0.9) - 0.05, max(-p.x,p.z));\n            p.yz *= mat2(cos(iTime),-sin(iTime)\n             ,sin(iTime),cos(iTime));\n    float s5 = max(abs(length(p) - 0.6) - 0.05,max(-p.y,p.z));\n            p.xy *= mat2(cos(iTime),-sin(iTime)\n             ,sin(iTime),cos(iTime));\n    float s6 = max(abs(length(p) - 0.3) - 0.05,max(-p.x,p.y));\n    float holes = min((length(p.xy) - 0.2),min((length(p.xz) - 0.2),(length(p.yz) - 0.2)));\n    return max(min(min(s1,min(s2,s3)),min(s4,min(s5,s6))),  -holes);\n}\n\nconst float EPS = 0.001;\nvec3 getNormal(vec3 p) {\n    return normalize(vec3(\n        map(p + vec3(EPS, 0.0, 0.0)) - map(p + vec3(-EPS,  0.0,  0.0)),\n        map(p + vec3(0.0, EPS, 0.0)) - map(p + vec3( 0.0, -EPS,  0.0)),\n        map(p + vec3(0.0, 0.0, EPS)) - map(p + vec3( 0.0,  0.0, -EPS))\n    ));\n}\n\nvec4 trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    vec3 p = vec3(0.0,0.0,0.0);\n    \n    for(int i = 0; i < 96; ++i){\n        p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return vec4(getNormal(p),t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float PI = 3.14159265;\n    vec2 uv = fragCoord.xy /iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv,1.2));\n    \n    vec3 o = vec3(0,0,-2.5);\n    vec4 data = trace(o,r);\n    float t = data.w;\n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    vec3 fc = mix(vec3(0.5 - data.x,0.5 -data.y,0.5-data.z),vec3(1.0),1.0 - fog);\n\t//fc = vec3(fog);\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}