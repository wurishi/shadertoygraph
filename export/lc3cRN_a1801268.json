{"ver":"0.1","info":{"id":"lc3cRN","date":"1730319896","viewed":234,"name":"Loading Loading Loading","username":"incre_ment","description":"Just a little daily coding.","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["sdf","triangles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rotation(angle) mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n\nfloat TAU = 2.*3.14159;\n\n// Thanks IQ\nfloat eqTri( in vec2 p, in float r )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = ( fragCoord - .5 * iResolution.xy ) / iResolution.y;\n   vec3 col = vec3(0.);\n   float t = fract(.1 * iTime);\n   uv *= rotation(3. * TAU * (.3 - clamp(length(uv),0.,.3)));\n   float s = -1.;\n   for(float i = 0.; i < 3.; i++){\n     float rad = .4 / pow(2.,i) * (.9 - .2 * i);\n     uv *= rotation(-2. * s * (i + 1.) * TAU * t);\n     float tri = eqTri(uv, rad);\n     s *= -1.;\n     col += .004 / abs(tri);\n   }\n   fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}