{"ver":"0.1","info":{"id":"MffXDf","date":"1705795102","viewed":85,"name":"hihihhhhhhh","username":"Angramme","description":"f","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["f"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x-.5*vec2(1., iResolution.y/iResolution.x);\n    const float dis = 0.2;\n    const float soft = 100.;\n    uv.x /= dis+(1.-dis)*soft*pow(abs(uv.y), 3.)/(soft*uv.y*uv.y + 1.);\n\n    float d = distance(uv, vec2(-0.5, 0.5));\n    \n    vec3 col = vec3(0);\n    \n    col.x += pow(sin(20.*d + iTime + 0.2*cos(30.*abs(uv.y) + iTime)), 2.);\n    col.z += pow(abs(sin(20.*d + iTime +0.1 + cos(uv.x+.69*iTime))), 3.);\n    \n    col *= 1./d;\n    col.z *= smoothstep(-0.6, 0.15, uv.y);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}