{"ver":"0.1","info":{"id":"XsVGRd","date":"1455910667","viewed":238,"name":"MipMaps","username":"overlii","description":"Computing a few levels of mipmaps, I wish we could have more buffers and channels.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["2d","mipmaps","miltipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 iRes = vec2(1.0) / iResolution.xy;\n    \n    float i = floor(mod(iTime, 5.0));\n    if(i == 0.0) {\n        fragColor = texture(iChannel0, fragCoord * iRes);\n        return;\n    } else if(i == 1.0) {\n        fragColor = texture(iChannel1, fragCoord * iRes);\n        return;\n    } else if(i == 2.0) {\n        fragColor = texture(iChannel2, fragCoord * iRes);\n        return;\n    } else if(i == 3.0) {\n        fragColor = texture(iChannel3, fragCoord * iRes);\n        return;\n    }\n    \n\tfloat level = 16.0;\n\n    vec2 p = fragCoord.xy / level;\n    p = level * floor(p);\n    \n    float l = 0.5*level;\n\tvec2 t0 = p;\n    vec2 t1 = p + vec2(l,0);\n    vec2 t2 = p + vec2(0,l);\n    vec2 t3 = p + vec2(l,l);\n    \n    vec4 c0, c1, c2, c3;\n \n    c0 = texture(iChannel3, t0 * iRes);\n\tc1 = texture(iChannel3, t1 * iRes);\n\tc2 = texture(iChannel3, t2 * iRes);\n\tc3 = texture(iChannel3, t3 * iRes);\n    \n    vec4 c = c0 + c1 + c2 + c3;\n    c *= 0.25;\n \n    fragColor = c;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float level = 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 iRes = vec2(1.0) / iResolution.xy;\n    vec2 p = fragCoord.xy / level;\n    p = level * floor(p);\n    \n\tvec2 t0 = p;\n    vec2 t1 = p + vec2(1,0);\n    vec2 t2 = p + vec2(0,1);\n    vec2 t3 = p + vec2(1,1);\n        \n    vec4 c0 = texture(iChannel0, t0 * iRes);\n\tvec4 c1 = texture(iChannel0, t1 * iRes);\n\tvec4 c2 = texture(iChannel0, t2 * iRes);\n\tvec4 c3 = texture(iChannel0, t3 * iRes);\n\t\n    vec4 c = c0 + c1 + c2 + c3;\n    c *= 0.25;\n \n    fragColor = c;\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float level = 4.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 iRes = vec2(1.0) / iResolution.xy;\n    vec2 p = fragCoord.xy / level;\n    p = level * floor(p);\n    \n    float l = 0.5*level;\n\tvec2 t0 = p;\n    vec2 t1 = p + vec2(l,0);\n    vec2 t2 = p + vec2(0,l);\n    vec2 t3 = p + vec2(l,l);\n        \n    vec4 c0 = texture(iChannel0, t0 * iRes);\n\tvec4 c1 = texture(iChannel0, t1 * iRes);\n\tvec4 c2 = texture(iChannel0, t2 * iRes);\n\tvec4 c3 = texture(iChannel0, t3 * iRes);\n\t\n    vec4 c = c0 + c1 + c2 + c3;\n    c *= 0.25;\n \n    fragColor = c;\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"float level = 4.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 iRes = vec2(1.0) / iResolution.xy;\n    vec2 p = fragCoord.xy / level;\n    p = level * floor(p);\n    \n    float l = 0.5*level;\n\tvec2 t0 = p;\n    vec2 t1 = p + vec2(l,0);\n    vec2 t2 = p + vec2(0,l);\n    vec2 t3 = p + vec2(l,l);\n        \n    vec4 c0 = texture(iChannel0, t0 * iRes);\n\tvec4 c1 = texture(iChannel0, t1 * iRes);\n\tvec4 c2 = texture(iChannel0, t2 * iRes);\n\tvec4 c3 = texture(iChannel0, t3 * iRes);\n\t\n    vec4 c = c0 + c1 + c2 + c3;\n    c *= 0.25;\n \n    fragColor = c;\n}","name":"Buf C","description":"","type":"buffer"}]}