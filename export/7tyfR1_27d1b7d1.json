{"ver":"0.1","info":{"id":"7tyfR1","date":"1667481386","viewed":101,"name":"Circling Colors","username":"goulart","description":"Simple shader used in https://mewa.app","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","colors","circle","gradient","glow","mewa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// adapted from : https://www.shadertoy.com/view/XdlSDs\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n    float tau = 3.1415926535*2.0;\n    float a = atan(p.x,p.y);\n    float r = length(p)*0.75;\n    vec2 uv = vec2(a/tau,r);\n\t\n\t//get the color\n\tfloat xCol = (uv.x - (iTime / 3.0)) * 3.0;\n\txCol = mod(xCol, 3.0);\n\tvec3 horColour = vec3(0.0, 0.0, 0.0);\n\t\n\tif (xCol < 1.0) {\n\t\t\n\t\thorColour.r += 1.0 - xCol;\n\t\thorColour.g += xCol;\n\t}\n\telse if (xCol < 2.0) {\n\t\t\n\t\txCol -= 1.0;\n\t\thorColour.g += 1.0 - xCol;\n\t\thorColour.b += xCol;\n\t}\n\telse {\n\t\t\n\t\txCol -= 2.0;\n\t\thorColour.b += 1.0 - xCol;\n\t\thorColour.r += xCol;\n\t}\n\n\t// draw color beam\n\tuv = (2.0 * uv) - 1.0;\n    float breaks = 2.0; // between 0 and 10\n    float leak = 30.0;\n\tfloat beamWidth = (0.7+0.5*cos(uv.x*10.0*tau*0.15* breaks)) * abs(1.0 / ( leak * uv.y));\n\tvec3 horBeam = vec3(beamWidth);\n\tfragColor = vec4(1.0) - vec4((( horBeam) * horColour), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}