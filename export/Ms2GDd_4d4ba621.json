{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define FARCLIP    55.0\r\n\r\n#define MARCHSTEPS 60\r\n#define AOSTEPS    20\r\n#define SHSTEPS    20\r\n#define SHPOWER    1.0\r\n\r\n#define PI         3.14\r\n#define PI2        PI*0.5    \r\n#define d90        1.57079633\r\n#define d15        0.261799388\r\n\r\n#define AMBCOL     vec3(1.0,1.0,1.0)\r\n#define BACCOL     vec3(1.0,1.0,1.0)\r\n#define DIFCOL     vec3(1.0,1.0,1.0)\r\n\r\n#define MAT1       1.0  //terrain\r\n#define MAT2       2.0  //water\r\n#define MAT3       3.0  //trees\r\n\r\n#define MAT4       4.0  //body\r\n#define MAT5       5.0  //windows\r\n#define MAT6       6.0  //propelers\r\n#define MAT7       7.0  //legs\r\n\r\n/***********************************************/\r\nfloat rbox(vec3 p, vec3 s, float r) {\t\r\n    return length(max(abs(p)-s+vec3(r),0.0))-r;\r\n}\r\nfloat sminp(float a, float b) {\r\nconst float k=0.1;\r\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\r\n    return mix( b, a, h ) - k*h*(1.0-h);\r\n}\r\n/***********************************************/\r\nfloat hash(float n) { \r\n\treturn fract(sin(n)*43758.5453123); \r\n}\r\n/***********************************************/\r\nfloat noise2(vec2 x) {\r\n    vec2 p = floor(x);\r\n    vec2 f = fract(x);\r\n    f = f*f*(3.0-2.0*f);\r\n\tfloat n = p.x + p.y*57.0;\r\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\r\n               mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\r\n}\r\n/***********************************************/\r\nvoid oprep(inout vec3 p, float l, float s) {\r\n\tfloat r=1./l;\r\n\tfloat ofs=s+s/(r*2.0);\r\n\tfloat a= mod( atan(p.x, p.z) + PI2*r, PI*r) -PI2*r;\r\n\tp.xz=vec2(sin(a),cos(a))*length(p.xz) -ofs;\r\n\tp.x+=ofs;\r\n}\r\nvoid oprepb(inout vec3 p, float l, float s) {\r\n\tfloat r=1./l;\r\n\tfloat ofs=s+s/(r*2.0);\r\n\tfloat a= mod( atan(p.x, p.y) + PI2*r, PI*r) -PI2*r;\r\n\tp.xy=vec2(sin(a),cos(a))*length(p.xy) -ofs;\r\n\tp.x+=ofs;\r\n}\r\n/***********************************************/\r\nvec2 rot(vec2 k, float t) {\r\n    float ct=cos(t); \r\n    float st=sin(t);\r\n    return vec2(ct*k.x-st*k.y,st*k.x+ct*k.y);\r\n}\r\n/***********************************************/\r\nvec3 opU(vec3 a, vec3 b) {\r\n\treturn mix(a, b, step(b.x, a.x));\r\n}\r\n/***********************************************/\r\nvec3 chop(vec3 p) {\r\n    p.x+=sin(PI+iTime)*2.0;\r\n    p.y-=0.5+sin(iTime*0.35)*0.75;\r\n    p.xz=rot(p.xz,-d90+sin(PI2+iTime));\r\n    p.xy=rot(p.xy,d15);\r\n\r\n    vec3 q=p;\r\n        q.z+=sin(p.z)*0.5;\r\n        q.y+=sin(p.y)*0.45 -0.05;\r\n        float h=length(q)-0.3;\r\n        float t=rbox(p+vec3(-0.25,-0.1,0.0), vec3(0.2,0.1,0.2),0.025);\r\n        float r=rbox(p+vec3(0.05,-0.1,0.0), vec3(0.08,0.1,0.3),0.025);\r\n    vec3 wind=vec3 (max(min(t,r),h),MAT5,0.0);\r\n    \r\n    h=max(max(h,-t),-r);\r\n          t=rbox(p+vec3(0.5,-0.12,0.0), vec3(0.3,0.05,0.06),0.05);\r\n    h=sminp(h,t);\r\n          t=rbox(p+vec3(0.8,-0.23,0.0), vec3(0.05,0.1,0.04),0.02);\r\n    h=sminp(h,t);\r\n    \r\n        q.xz=-abs(p.xz);\r\n        q.yz+=vec2(0.3,0.2);\r\n          r=rbox(q, vec3(0.2,0.015,0.015),0.0075);\r\n        q+=vec3(0.1,-0.025,-0.2);\r\n          t=rbox(q, vec3(0.015,0.015,0.2),0.0075);\r\n        r=min(r,t);      \r\n        wind=opU(wind,vec3(r,MAT7,0.0));\r\n//        h=min(h,r);      \r\n\r\n        q=p;\r\n        q.xz=rot(q.xz,iTime*9.0);\r\n        oprep(q,1.5,0.1);\r\n        r=rbox(q+vec3(0.0,-0.25,0.0), vec3(0.04,0.01,0.5),0.01);\r\n        q=p;\r\n        q+=vec3(0.8,-0.25,-0.05);\r\n        q.xy=rot(q.xy,iTime*9.0);\r\n        oprepb(q,1.5,0.0);\r\n        t=rbox(q, vec3(0.03,0.15,0.01),0.01);\r\n    vec3 rotors=vec3(min(r,t),MAT6,0.0);\r\n    \r\n    return opU(rotors,opU(wind,vec3(h, MAT4,0.0)));\r\n}\r\n\r\n/***********************************************/\r\nvec3 DE(vec3 p) {\r\n\r\nfloat rw=0.8;                //river width\r\nfloat sw=0.55;              //shore to side transition speed\r\nfloat h=p.y+0.8;\r\nfloat ss=0.0;\r\n\r\nfloat mat=MAT1;\r\nvec3 q=p;\r\n\r\n        p.z+=iTime*2.0;\r\n\r\n        float crv=sin(p.z*0.5)*2.0+0.5;         //river path center\r\n        float lrv=crv+rw + noise2(p.xz);  //left shore path\r\n        float rrv=crv-rw + noise2(p.zx);  //right shore path\r\n\r\n        //river        \r\n        if ( p.x<lrv && rrv<p.x ) {  //water surface\r\n            mat=MAT2;\r\n            ss=texture(iChannel0, p.xz).x*0.01; \r\n            h+=ss;\r\n        } else { //terrain\r\n\r\n            float t=texture(iChannel0, p.xz*0.001).x*1.25; //hills \r\n            float g=texture(iChannel0, vec2(p.x*0.2,p.z*0.5*0.2)).x*0.05;  //greens\r\n            t+=g;\r\n            //soft shore transition\r\n            if ( p.x>lrv ) sw=t*clamp( (p.x - lrv  )*sw ,0.0,3.0); else\r\n                           sw=t*clamp( abs(p.x - rrv)*sw ,0.0,3.0);\r\n            h-=sw;               \r\n            if (g>0.01) { mat=MAT3; ss=g; } else ss=sw;\r\n            \r\n        }\r\n\r\n    return opU(chop(q),vec3(h,mat,ss));\r\n}\r\n/***********************************************/\r\n#define suncolor vec3(0.8,0.8,0.2)  //vec3(0.8,0.7,0.9)\r\nvec3 sky(vec3 rd, vec3 sky){\r\n    float sa=max(dot(rd,sky),0.0);\r\n    float v=pow(1.0-max(rd.y,0.0),8.0);\r\n    vec3 s=mix(vec3(0.7,0.8,0.9),vec3(0.9,0.9,0.9),v);\r\n        s=s+suncolor*sa*sa*0.2;\r\n        s=s+suncolor*min(pow(sa,550.0)*1.5,0.3);\r\n    return clamp(s,0.0,1.0);\r\n}\r\n/***********************************************/\r\nvec3 clouds(vec3 ro, vec3 rd, vec3 col) {\r\n    float v=(250.0-ro.y)/rd.y;\r\n    rd.xz*=v;\r\n    rd.xz+=ro.xz;\r\n    rd.xz*=0.1;\r\n    float f=noise2(rd.xz*0.05+iTime*0.2)*2.2;\r\n    col=mix(col,vec3(0.75,0.75,0.73), clamp(f*rd.y,0.0,1.0));\r\n    return col;\r\n}\r\n/***********************************************/\r\nvec3 normal(vec3 p) {\r\n\tvec3 e=vec3(0.01,-0.01,0.0);\r\n\treturn normalize( vec3(\te.xyy*DE(p+e.xyy).x +\te.yyx*DE(p+e.yyx).x +\te.yxy*DE(p+e.yxy).x +\te.xxx*DE(p+e.xxx).x));\r\n}\r\n/***********************************************/\r\nfloat calcAO(vec3 p, vec3 n ){\r\n\tfloat ao = 0.0;\r\n\tfloat sca = 1.0;\r\n\tfor (int i=0; i<AOSTEPS; i++) {\r\n        \tfloat h = 0.01 + 1.2*pow(float(i)/float(AOSTEPS),1.5);\r\n        \tfloat dd = DE( p+n*h ).x;\r\n        \tao += -(dd-h)*sca;\r\n        \tsca *= 0.65;\r\n\t\tif( ao>0.99 ) break;\r\n    \t}\r\n   return clamp( 1.0 - 1.0*ao, 0.0, 1.0 );\r\n //  return clamp(ao,0.0,1.0);\r\n}\r\n/***********************************************/\r\nfloat calcSh( vec3 ro, vec3 rd, float s, float e, float k ) {\r\n\tfloat res = 1.0;\r\n    for( int i=0; i<SHSTEPS; i++ ) {\r\n    \tif( s>e ) break;\r\n        float h = DE( ro + rd*s ).x;\r\n        res = min( res, k*h/s );\r\n    \ts += 0.02*SHPOWER;\r\n\t\tif( res<0.001 ) break;\r\n    }\r\n    return clamp( res, 0.0, 1.0 );\r\n}\r\n/***********************************************/\r\nvoid rot2( inout vec3 p, vec3 r) {\r\n\tfloat sa=sin(r.y); float sb=sin(r.x); float sc=sin(r.z);\r\n\tfloat ca=cos(r.y); float cb=cos(r.x); float cc=cos(r.z);\r\n\tp*=mat3( cb*cc, cc*sa*sb-ca*sc, ca*cc*sb+sa*sc,\tcb*sc, ca*cc+sa*sb*sc, -cc*sa+ca*sb*sc,\t-sb, cb*sa, ca*cb );\r\n}\r\n/***********************************************/\r\n\r\nvoid animate(inout vec3 ro) {\r\n ro.xz=rot(ro.xz,iTime*0.1);   \r\n    ro.z+=sin(iTime*0.2)*5.0;\r\n    ro.y+=5.0+abs(sin(iTime))*0.35;\r\n}\r\n/***********************************************/\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\r\n    vec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\r\n    p.x *= iResolution.x/iResolution.y;\t\r\n\tvec3 ta = vec3(0.0, 0.0, 0.0);\r\n\tvec3 ro =vec3(0.0, 0.0, -13.0);     //-10.0\r\n\tvec3 lig=normalize(vec3(0.0, 0.5, 5.0));\r\n\tvec3 sun=normalize(vec3(0.0, 0.5, 5.0));\r\n\r\nanimate(ro);\r\n\t\r\n\tvec2 mp=iMouse.xy/iResolution.xy;\r\n\trot2(ro,vec3(mp.x,mp.y,0.0));\r\n\trot2(lig,vec3(mp.x,-mp.y,0.0));\r\n\r\n\tvec3 cf = normalize( ta - ro );\r\n    vec3 cr = normalize( cross(cf,vec3(0.0,1.0,0.0) ) );\r\n    vec3 cu = normalize( cross(cr,cf));\r\n\tvec3 rd = normalize( p.x*cr + p.y*cu + 2.5*cf );\r\n\r\n\tvec3 col=vec3(1.0);\r\n\t/* trace */\r\n\tvec3 r=vec3(0.0);\t\r\n\tfloat d=0.0;\r\n\tvec3 ww;\r\n\tfor(int i=0; i<MARCHSTEPS; i++) {\r\n\t\tww=ro+rd*d;\r\n\t\tr=DE(ww);\t\t\r\n        if( abs(r.x)<0.01 || r.x>FARCLIP ) break;\r\n        d+=r.x;\r\n\t}\r\n    r.x=d;\r\n\t/* draw */\r\n\tif( r.x<FARCLIP ) {\r\n\t    \r\n\t    vec2 rs=vec2(1.0,1.0);  //rim and spec\r\n\r\n\t\tif (r.y==MAT1) { col=smoothstep(vec3(0.0,0.0,0.06),vec3(0.63,0.63,0.605), vec3(r.z*3.1)); rs=vec2(0.3,0.6); }\r\n\t\tif (r.y==MAT2) { col=vec3(0.148,0.157,0.331); rs=vec2(1.0,0.6); }\r\n\t\tif (r.y==MAT3) { col=smoothstep(vec3(0.235,0.114,0.105), vec3(1.0,0.713,1.623), vec3(r.z*10.0));  rs=vec2(0.0,0.5); }\r\n\r\n\t\tif (r.y==MAT4) { col=vec3(0.95,0.34,0.21);  rs=vec2(0.2,1.0); }\r\n\t\tif (r.y==MAT5) { col=vec3(0.6,0.7,0.95);  rs=vec2(0.2,1.0); }\r\n\t\tif (r.y==MAT6) { col=vec3(0.1,0.2,0.1);  rs=vec2(0.2,1.0); }\r\n\t\tif (r.y==MAT7) { col=vec3(0.91,0.95,0.98);  rs=vec2(0.2,1.0); }\r\n\r\n\t\tvec3 nor=normal(ww);\r\n\r\n    \tfloat amb= 1.0;\t\t\r\n    \tfloat dif= clamp(dot(nor, lig), 0.0,1.0);\r\n    \tfloat bac= clamp(dot(nor,-lig), 0.0,1.0);\r\n    \tfloat rim= pow(1.+dot(nor,rd), 3.0);\r\n    \tfloat spe= pow(clamp( dot( lig, reflect(rd,nor) ), 0.0, 1.0 ) ,16.0 );\r\n    \tfloat ao= calcAO(ww, nor);\r\n    \tfloat sh= calcSh(ww, lig, 0.01, 2.0, 4.0);\r\n\r\n\t    col *= 0.5*amb*AMBCOL*ao + 0.4*dif*DIFCOL*sh + 0.05*bac*BACCOL;\r\n\t    col += 0.3*rim*amb * rs.x;\r\n    \tcol += 0.5*pow(spe,1.0)*sh * rs.y;\r\n\r\n     \r\n\t}else {\r\n        col=sky(rd,sun);\r\n        col=clouds(ro,rd,col);\r\n\t}\r\n\r\n    \t\r\n\t\t\r\n//\tcol*=exp(.01*-d); col*=0.9;\t\r\n    \r\n\tfragColor = vec4( col, 1.0 );\r\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Ms2GDd","date":"1395433748","viewed":247,"name":"Heli","username":"avix","description":"semi finished.. got bored with it...","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["procedural","3d"],"hasliked":0,"parentid":"","parentname":""}}