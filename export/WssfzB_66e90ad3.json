{"ver":"0.1","info":{"id":"WssfzB","date":"1588539373","viewed":84,"name":"Conway's game of life","username":"CheersLuv","description":"A simple implementation of Conway's game of life using pixel shaders","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv *= 0.2;\n\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    fragColor = (rand(fragCoord) < 0.020) ? black : white;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 color = texture(iChannel0, fragCoord/iResolution.xy);\n    \n    if(iFrame % 10 == 0){\n    \tint count = 0;\n    \n        for(float i = -1.0; i < 2.0; i++){\n            for(float j = -1.0; j < 2.0; j++){\n                vec4 col = texture(iChannel0, (fragCoord + vec2(i, j))/iResolution.xy);\n\n                if(length(col.z) < 0.1){\n                    count++;\n                }\n            }   \n        }\n\n        if(count < 2) color = white;\n        if(count > 4) color = white;\n        if(count == 3) color = black;    \n        \n    }\n    \n    if(iFrame == 0){\n        color = texture(iChannel1, fragCoord/iResolution.xy);   \n    }\n    \n    \n    fragColor = color;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\nvec4 black = vec4(0.0, 0.0, 0.0, 1.0);\nvec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\n\n// https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = texture(iChannel0, uv);\n}","name":"Buffer C","description":"","type":"buffer"}]}