{"ver":"0.1","info":{"id":"MdGyDy","date":"1597848030","viewed":86,"name":"CIS566 Final Project","username":"ChloeSnyder","description":"Start","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["finalproject"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*#ifdef GL_ES\nprecision mediump float;\n#endif*/\n\n\n/*float map(vec3 p) {\n\tfloat k = cos(p.z * 15.0) * 0.03 + cos(p.x * 15.0) * 0.03;\n\treturn pow((cos(p.x) + cos(p.y)) + sin(p.z) + k, 1.3);\n}*/\n\nfloat map(vec3 p) {\n    //controls the lines\n\tfloat k = cos(p.z) * 0.01 + cos(p.x * 10.0) * 0.15;\n\treturn pow((cos(p.x) + cos(p.y)) + sin(p.z) + k, 1.0); //changing to 1 fixed the spazzing out\n}\n\n// union with a different map. One for smooth ridges for base of tentacle, and one for the suction cups?\n\n\n\nvec2 rot(vec2 r, float a) {\n\treturn vec2(\n\t\tcos(a) * r.x - sin(a) * r.y,\n\t\tsin(a) * r.x + cos(a) * r.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv  = ( fragCoord.xy / iResolution.xy );// * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y ;\n\tvec3 dir = normalize(vec3(uv, 1.0));\n\tdir.zy = rot(dir.zy, iTime * 0.2);\n\tdir.xz = rot(dir.xz, iTime * 0.1); dir = dir.yzx;\n\n\tvec3 pos = vec3(0, 0, iTime * 2.0);\n\tfloat t = 0.0;\n\tfor(int i = 0 ; i < 100; i++) {\n\t\tfloat temp = map(pos + dir * t) * 0.55;\n\t\tif(temp < 0.001) break;\n\t\tt += temp;\n\t}\n\tvec3 ip = pos + dir * t;\n\tfragColor = vec4(vec3(max(0.01, map(ip + 0.2)) + t * 0.02) + dir * 0.3, 1.0);\n\n}\n\n/*void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}*/","name":"Image","description":"","type":"image"}]}