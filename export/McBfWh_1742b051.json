{"ver":"0.1","info":{"id":"McBfWh","date":"1724864480","viewed":45,"name":"Spinning vogel_hemisphere ","username":"DingoDoggins","description":"visualized spinning vogel hemisphere","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphereSDF(vec3 p,vec3 p2){\nreturn length(p-p2)-1.;\n}\n\n\nconst float PI = 3.14159265f;\nconst float GOLDEN_ANGLE = PI * (3.0 - sqrt(5.0));\n\nvec3 rotate(vec3 v,float a){\n    mat3 matrix=mat3(vec3(cos(a),-sin(a),0.),vec3(sin(a),cos(a),0.),vec3(0.,0.,1.));\n\n    return v*matrix;\n}\n//From godot\nvec3 vogel_hemisphere(uint p_index, uint p_count, float p_offset) {\n\tfloat r = sqrt(float(p_index) + 0.5f) / sqrt(float(p_count));\n\tfloat theta = float(p_index) * GOLDEN_ANGLE + p_offset;\n\tfloat y = cos(r * PI * 0.5);\n\tfloat l = sin(r * PI * 0.5);\n\treturn 20.*rotate(vec3(l * cos(theta), l * sin(theta), y * (float(p_index & 1u) * 2.0 - 1.0)),iTime);\n}\n\n\nfloat sampleSDF(vec3 p){\n    float s=1000.;\n    for(uint i=0u; i<100u; i++){\n       s=min(s,sphereSDF(vogel_hemisphere(i,100u,0.),p));  \n    \n    }\n    return s;\n}\n\nfloat raymarch(vec3 start, vec3 dir){\n    float totaldist=0.;\n    for(int i=0; i<100; i++){\n        float dist=sampleSDF(start+dir*totaldist);\n        if(dist<=0.05){return dist;}\n        totaldist+=dist;\n        \n    }\n    return 2000.;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    if (raymarch(vec3(50.,-2.5,0),normalize(vec3(-1,(uv.x-0.5)*iResolution.x/iResolution.y,(uv.y-0.5))))<0.15){\n    fragColor = vec4(0.,0.,0.,1);\n    }else{\n        fragColor = vec4(1.,1.,1.,1);\n    }\n    // Output to screen\n\n}\n\n","name":"Image","description":"","type":"image"}]}