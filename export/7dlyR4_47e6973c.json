{"ver":"0.1","info":{"id":"7dlyR4","date":"1643462553","viewed":58,"name":"hash noise 0x0ffffff","username":"gurpreetsingh_exe","description":"hash function","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// http://www.jcgt.org/published/0009/03/02/\nuvec3 pcg3d(uvec3 v) {\n\n    v = v * 1664525u + 1013904223u;\n\n    v.x += v.y*v.z;\n    v.y += v.z*v.x;\n    v.z += v.x*v.y;\n\n    v ^= v >> 16u;\n\n    v.x += v.y*v.z;\n    v.y += v.z*v.x;\n    v.z += v.x*v.y;\n\n    return v;\n}\n\n#define seed iTime\n\nuvec3 hash(vec2 s) {\n    uvec4 coords = uvec4(s + vec2(seed * 100.0f, 0.0f), uint(s.x) ^ uint(s.y), uint(s.x) + uint(s.y));\n    return pcg3d(coords.xyz);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord;\n\n    uint bit = uint(8.0 * uv.x) + 8u * uint(4.0 * uv.y);\n\n    uvec3 hash = uvec3(hash(uv));\n\n    fragColor = vec4(vec3(hash) * (1.0/float(0xffffffffu)), 1.0);\n}","name":"Image","description":"","type":"image"}]}