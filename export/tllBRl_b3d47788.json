{"ver":"0.1","info":{"id":"tllBRl","date":"1602715452","viewed":132,"name":"Tangent Line to cosh Curve","username":"athibaul","description":"Experiments with 2D graphics and equations.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","graph","geometry","tangent"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Construct some 2D geometry related to tangent curves,\n// catenary, gears, and square wheels.\n//\n// https://mathcurve.com/courbes2d.gb/engrenage/engrenage2.shtml\n// http://aesculier.fr/fichiersMaple/rouesdroles/rouesdroles.html\n\nvec2 uv;\n\nfloat ZeroSet(float f, float linewidth)\n{\n    vec2 grad = vec2(dFdx(f), dFdy(f));\n    float pxSize = max(length(grad), fwidth(uv.y));\n    return clamp(linewidth-abs(f)/pxSize, 0., 1.);\n}\nfloat ZeroSet(float f) { return ZeroSet(f, 2.); }\nfloat Point(vec2 x) { return ZeroSet(length(x), 5.); }\n\nfloat Segment(vec2 a, vec2 b, vec2 p)\n{\n    float h = clamp(dot(p-a,b-a) / dot(b-a,b-a), 0., 1.);\n    float d = length(p-a - h*(b-a));\n    return ZeroSet(d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Set coordinates to [-1.,1.] vertically, and a little bit more\n    // horizontally.\n    uv = fragCoord/iResolution.xy;\n    uv = uv*2.-1.;\n    uv.x *= iResolution.x/iResolution.y;\n    // Scale and pan to taste\n    uv *= 3.;\n    uv.y -= 2.;\n    \n    float fx = -cosh(uv.x);\n    // Tangent line at x0\n    float x0 = 2.*sin(iTime);\n    vec2 p0 = vec2(x0, -cosh(x0));\n    float a = -sinh(x0), b = x0*sinh(x0) - cosh(x0);\n    float tang = a*uv.x+b;\n    vec2 q;\n    q.x = x0 - tanh(x0);\n    q.y = a*q.x+b;\n    vec2 q1 = q + normalize(vec2(sinh(x0), 1.));\n    \n    vec3 col = vec3(0.95,0.94,0.9);\n    col = mix(col, vec3(0.8), ZeroSet(uv.y));\n    col = mix(col, vec3(0.), ZeroSet(fx - uv.y));\n    col = mix(col, vec3(0.1,0.8,0.1), ZeroSet(tang - uv.y));\n    col = mix(col, vec3(0.1,0.2,0.8), Segment(q, q1, uv));\n    col = mix(col, vec3(0.9,0.,0.1), Point(p0-uv));\n    col = mix(col, vec3(0.6,0.1,0.8), Point(q-uv));\n    col = mix(col, vec3(0.1,0.5,0.8), Point(q1-uv));\n\n    // Output to screen\n    fragColor.rgb = col;\n}","name":"Image","description":"","type":"image"}]}