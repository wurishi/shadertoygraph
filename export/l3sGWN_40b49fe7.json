{"ver":"0.1","info":{"id":"l3sGWN","date":"1707493375","viewed":58,"name":"Fork cream","username":"mehow_one","description":"Testing out some ideas","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise","drip","cream"],"hasliked":0,"parentid":"3lXGWM","parentname":"cream"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define R iResolution.xy\n#define time iTime\n#define PI 3.14159265\n\nconst float xScale = 23.;\nconst float xScaleIntensity = 0.03;\nconst float speed = 0.1;\nconst vec2 creamScale = vec2(30,20);\nconst float bulgeIntensity = 0.5;\nconst float rowOffset = PI*.85;\nconst float goo = .1;\nconst float gooDetails = 0.8;\n\nvec3 irri(float hue) {\n  \n  return .5+ .55 *cos(( 9.*hue)+ vec3(0,23.,21.));\n\n}\n\nvoid mainImage( out vec4 fragColor, vec2 fragCoord )\n{\n\n    vec2 p = (( fragCoord.xy / R.xy ) * 2.0 - 1.0)*vec2(R.x/R.y,1.) * .5;\n    float fromCenter = length((fragCoord/R.xy - .5)*vec2(R.x/R.y,1.));\n    float r = length(p * 2.) * PI * bulgeIntensity;\n    p *= ( ( 1. - sqrt( 1. - r ) ) / r );\n    p.x += sin(time * 0.05 + p.y * PI)*.1;\n    p.y += sin(p.x * xScale) * xScaleIntensity + time * speed;\n    p *= creamScale;\n    \n    float x = p.x + time + floor(p.y) * rowOffset;\n    float y = fract(p.y);\n    float f = .5 + sin(x *.22) *.2;\n    float drip = 1. - sin(x - cos(x)) * f - sin(x * gooDetails) * goo;\n    float specular = smoothstep(drip * .99, drip ,y * 2.);\n          \n          \n    float mask = 1.-smoothstep(0.445,0.455,fromCenter);   \n    float fade = 1.-smoothstep(0.3,0.5,fromCenter); \n    float color = (y - specular) * 1.5;\n    // TODO : figure out dripping color\n    vec3 irr = irri(p.y *0.5)*r*0.29;\n    \n    \n    fragColor = vec4(vec3(color),1.);\n}\n","name":"Image","description":"","type":"image"}]}