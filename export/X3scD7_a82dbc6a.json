{"ver":"0.1","info":{"id":"X3scD7","date":"1728321360","viewed":15,"name":"First test shader - stoggy","username":"Stoggy","description":"tets","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n\n    vec3 a = vec3(0.328, 0.358, 0.798);\n    vec3 b = vec3(-0.332, -0.202, -0.174);\n    vec3 c = vec3(-4.427, 2.743, 1.303);\n    vec3 d = vec3(0.457, 0.697, 0.777);\n    \n    return a + b*cos(6.0*(c*t*d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    \n    for (float i = 0.0; i < 3.25; i++) {\n    uv = fract(uv * 1.5) - 0.5;\n    \n    float d = length(uv) * exp(-length(uv0));\n    vec3 color = palette(length(uv0) + i*.4 + iTime*.4);\n    \n    d = sin(d*8.5 + iTime)/10.0;\n    d = abs(d);\n    d = pow(0.01 / d, 1.2);\n    \n    finalColor += color * d;\n    }\n\n    fragColor = vec4(finalColor ,1.0);\n}","name":"Image","description":"","type":"image"}]}