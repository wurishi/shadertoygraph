{"ver":"0.1","info":{"id":"3tjXWy","date":"1566972037","viewed":91,"name":"Test: Conway's Game of Life","username":"g2_xpf","description":"Buffer test with Conway's Game of Life","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["buffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n\tfloat v = texture(iChannel0, uv).x;\n    fragColor = vec4(vec3(v), 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float INIT_PROBABILITY = 0.5;\n\nint get(vec2 coord) {\n    float v = texture(iChannel0, coord / iResolution.xy).x;\n    return v > 0.5 ? 1 : 0;\n}\n\nvoid set(out vec4 fragColor, float v) {\n    fragColor = vec4(v);\n}\n\n// ref:\n// \t\thttp://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl\nfloat rand(vec2 uv){\n    float r = fract(sin(dot(uv ,vec2(12.9898,78.233))) * 43758.5453);\n    return step(INIT_PROBABILITY, r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    if(iFrame == 0) {\n        set(fragColor, rand(fragCoord / iResolution.xy));\n    }else{\n        // get the current value\n        int cur = get(fragCoord);\n        \n        // get the surrounding 8 values\n        int sum = 0;\n        for(int y = -1; y <= 1; ++y)\n        for(int x = -1; x <= 1; ++x) {\n            if(x == 0 && y == 0) continue;\n        \tfloat nx = fragCoord.x + float(x);\n            float ny = fragCoord.y + float(y);\n            sum += get(vec2(nx, ny));\n        }\n        \n        // match\n        if(sum == 3 || (cur == 1 && sum == 2)) {\n            set(fragColor, 1.);\n        }else {\n        \tset(fragColor, 0.);\n        }\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}