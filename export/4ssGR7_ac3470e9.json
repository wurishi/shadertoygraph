{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// A classic plasm shader. (c) Ajarus, viktor@ajarus.com; 1996.\n//\n// Attribution-ShareAlike CC License.\n\n//----------------\n  const int ps = 0; // play with values 0..10\n//----------------\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   float x = fragCoord.x / iResolution.x * 640.;\n   float y = fragCoord.y / iResolution.y * 480.;\n   \n\tif (ps > 0)\n\t{\n\t   x = float(int(x / float(ps)) * ps);\n\t   y = float(int(y / float(ps)) * ps);\n\t}\n\t\n   float mov0 = x+y+sin(iTime)*10.+sin(x/90.)*70.+iTime*2.;\n   float mov1 = (mov0 / 5. + sin(mov0 / 30.))/ 10. + iTime * 3.;\n   float mov2 = mov1 + sin(mov1)*5. + iTime*1.0;\n   float cl1 = sin(sin(mov1/4. + iTime)+mov1);\n   float c1 = cl1 +mov2/2.-mov1-mov2+iTime;\n   float c2 = sin(c1+sin(mov0/100.+iTime)+sin(y/57.+iTime/50.)+sin((x+y)/200.)*2.);\n   float c3 = abs(sin(c2+cos((mov1+mov2+c2) / 10.)+cos((mov2) / 10.)+sin(x/80.)));\n  \n   float dc = float(16-ps);\n\t\n\tif (ps > 0)\n\t{\n   \t\tcl1 = float(int(cl1*dc))/dc;\n   \t\tc2 = float(int(c2*dc))/dc;\n   \t\tc3 = float(int(c3*dc))/dc;\n\t}\n\t\n   fragColor = vec4( cl1,c2,c3,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4ssGR7","date":"1366145835","viewed":1613,"name":"Plasma 90x","username":"bitek","description":"an oldskool plasma effect","likes":42,"published":1,"flags":0,"usePreview":0,"tags":["2d","plasma","plasm","paletterotation"],"hasliked":0,"parentid":"","parentname":""}}