{"ver":"0.1","info":{"id":"mlfcDf","date":"1691254652","viewed":18,"name":"Basic iResolution Square","username":"unravelwinter","description":"Learn how iResolution works!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["learning","iresolution"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// iResolution: (640, 360)\n// fragCoord: vec2(0 to 640-1, 0 to 360-1)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    //     fragCoord                                  [0, 640-1] on x,             [0, 360-1] on y\n    //  2.*fragCoord - iResolution.xy                 [-640, 2(640-1)-640] on x,   [-360, 2(360-1)-360] on y\n    //                                                [-640, 640-2] on x,          [-360, 360-2] on y\n    // (2.*fragCoord - iResolution.xy)/iResolution.x  [-1, 1-2/640] on x,          [-360/640, (360-2)/640] on y\n    \n    // Normalized point from -1 to 1 on x-axis:\n    vec2 uv = (2.*fragCoord - iResolution.xy)/iResolution.x;\n\n    // Normalized point from 0 to 1 on x-axis:\n    // uv = fragCoord/iResolution.x; \n\n    // Draw red-green gradient\n    fragColor = vec4(uv, 0, 1);\n    \n    // Draw blue square\n    if (uv.x >= 0. && uv.x <= .5 && uv.y >= 0. && uv.y <= .5) { \n      fragColor = vec4(0, 0, 1, 1);\n    }\n}","name":"Image","description":"","type":"image"}]}