{"ver":"0.1","info":{"id":"3sjGWD","date":"1548901170","viewed":583,"name":"Simple fill w/ falloff","username":"amp","description":"Example code for easy cut/slice VFX tutorial: https://twitter.com/ampgamedev/status/1090719426884890624\nInstructions: Click the mouse in the viewport and drag left to right to see the effect in action.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fillWithFalloff(vec2 uv)\n{\n    // Make these uniform parameters of your shader\n    const float falloff = 0.25; // falloff range\n\n    // fill position from left\n    float fill = iMouse.x < 1.0 \n        ? 0.5 + 0.5 * sin(iTime) // animate shader w/ sine if mouse position is 0\n        : iMouse.x/iResolution.x; // else fill using mouse position\n    \n    // Offset the falloff range using fill to\n    // map 0 fill to fully transparent and 1 fill to fully opaque\n    float falloffShift = falloff*fill; \n    return min(1.0, max(0.0, (fill - uv.x + falloffShift)/falloff));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Sample the texture\n    vec4 col = texture(iChannel0, uv);\n    \n    // Perform fill calculation\n    float alpha = fillWithFalloff(uv);\n    \n    // Apply texture on top of a black background\n    // I'm just using this to simulate transparency within this shader\n    // In your game, you can probably set it as the colour's alpha component\n    // Assuming you have support for transparency\n    const vec4 black = vec4(0.0,0.0,0.0,1.0);\n    col = mix(black, col, alpha);\n    \n    // Output to screen\n    fragColor = col;\n}\n","name":"Image","description":"","type":"image"}]}