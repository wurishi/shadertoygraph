{"ver":"0.1","info":{"id":"wslfR8","date":"1587709959","viewed":66,"name":"Day9: Pseudorandom Blobs","username":"fluxatron","description":"Playing around with random numbers and accidentally made this","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect =  iResolution.x / iResolution.y;\n    vec2 uv = (2.*fragCoord - iResolution.xy)/iResolution.y; // -(aspect,1) to (aspect,1)\n    vec3 col = vec3(0);\n    \n    uv *=0.7;\n    \n    const int numVerts = 70;\n    \n    ivec2 sz = textureSize(iChannel0, 0);\n    vec2 v = vec2(99999999);\n    for (int i = 0; i < numVerts; i++)\n    {\n        int x = i / sz.y;\n        int y = i % sz.x;\n        \n        // Make a vert\n\t    vec2 t = texelFetch(iChannel0, ivec2(x, y), 0).rg; // better uniformity\n        vec2 vert = vec2(-aspect,-1) + t*vec2(2.*aspect, 2); // map [0,1) random point to the uv bounds\n        \n        // Move the vert\n        float m = iTime + float(i);\n        vert += 0.1*vec2(sin(m), cos(m));\n        \n        // Find closest vert\n        vec2 c = (vert-uv);\n        v = dot(c,c) < dot(v,v) ? c : v;\n    }\n    \n    float d = length(v);\n    \n    // Height map shade\n    d = smoothstep(0.4,0.0,d);\n    d = pow(d,.6);\n    \n    \n    float dist = clamp(3.*length(v), 0., 1.);\n    vec2 dir = v / dist;\n    \n    // Generate normal\n    float z = cos(dist * 3.142 * 0.5);\n    vec2 xy = (1.-z)*-dir;\n    vec3 n = normalize(vec3(xy,z));\n    \n    // Lighting\n    vec3 lightDir = normalize(vec3(4,4,3));\n    float strength = clamp(dot(lightDir, n),0., 1.);\n    \n   \tcol = mix(vec3(1,0,0.1), vec3(0.4,0,1), vec3(pow(d, 2.)));\n    col = /*strength **/ pow(col, vec3(1.4));\n    \n    //col = vec3(xy+vec2(0.5),0);\n    //col = vec3(length(d));\n    //col = n*.5 + vec3(.5); // map normal [-1,1] to [0,1]\n    //col = vec3(strength);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}