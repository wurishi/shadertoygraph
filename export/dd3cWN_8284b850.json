{"ver":"0.1","info":{"id":"dd3cWN","date":"1695062848","viewed":46,"name":"bunchasquares","username":"makscee","description":"100 squares rotating in an always changing pattern","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["sdf","sin","square"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sd_box( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, s, -s, c);\n\treturn m * v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) /iResolution.yy;\n    const float w = 0.002;\n    float col = 0.;\n    for (float i = .1; i < 10.; i += .1) {\n        float s = sin(iTime + i * cos(iTime * .1)) * .15 + .15 + i * .001;\n        uv = rotate(uv, iTime * (.005 + sin(iTime * .2) * 0.002) + i * .001);\n        col = max(col, min(smoothstep(-w, w, sd_box(uv, vec2(s))), smoothstep(w, -w, sd_box(uv, vec2(s)))));\n    }\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}