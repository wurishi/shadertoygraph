{"ver":"0.1","info":{"id":"NlXBW4","date":"1650849336","viewed":182,"name":"Integer Raymarcher","username":"TrueBoolean","description":"Raymarching with integers. The tunnel uses the taxicab distance. Would run fast on CPUs too using any native signed or unsigned word.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","simple","fast","raymarcher","integer","bitwise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITER 256\n\nvoid mainImage( out vec4 FCOL, in vec2 FPT ){\n    \n    ivec2 PT = ivec2(FPT-iResolution.xy/2.);\n    int SIZE = int(min(iResolution.x, iResolution.y))>>3;\n    ivec2 look = ivec2(int(sin(iTime)*float(SIZE)));\n    int scroll = int(iTime*159.);\n      \n    ivec2 sum = ivec2(0);\n    ivec2 ray = sum;\n    int z;\n    for(z = 0 ;z < ITER; ++z){\n        sum += PT;\n        sum += look;\n        ray = abs(sum)>>8;\n        if(ray.x+ray.y > SIZE)\n            break;      \n    }\n    ivec3 COL = ivec3((abs(ray.x)-abs(ray.y)^abs(z-scroll))&255);\n    COL.y &= 63;\n    COL.z &= 127;\n    if(z > ITER*5>>3)\n        COL -= z;\n    else\n        COL -= z>>2;\n    \n    FCOL = vec4(vec3(COL)/float(ITER), 1.);\n}","name":"Image","description":"","type":"image"}]}