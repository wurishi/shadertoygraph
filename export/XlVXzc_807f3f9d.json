{"ver":"0.1","info":{"id":"XlVXzc","date":"1485300782","viewed":609,"name":"Circular Multiplication Graph 2","username":"n1kk","description":"another multiplication graph. heavy with 1k lines, but with <1k patterns are not that nice","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["patterns","lines","circle","multiplication"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**/ // readable version\n#define LINES 1000.\n#define PI2 6.28318530718\n#define SC( a)  vec2(sin(a), cos(a))\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec2 R = iResolution.xy;\n         U = (U+U -R)/ R.y; // shift origin to center\n    O-=O;\n    float t = smoothstep(-1., 1., -cos(iTime * .4)), // timed animation\n          M = mix(349., 351., t); // angle multiplication\n    \n    for (float i = 0.0; i <= LINES; i+=1.) {\n        float a1 = i * PI2 / LINES,\n              a2 = a1 * M;\n        vec2  a = 4. *SC(a1), // point on a big circle\n              b = 1.8*SC(a2), // point on a small circle\n             pa = -U-a-U, ba = b-a; \n        float h = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.),\n              d = length(pa - ba * h); // dist to line between points\n        \n        O += .2  * clamp(1. - (.25*R.x/1.5) * d, 0., 1.); // line\n    \tO += .03 * clamp(1. -           10. * d, 0., 1.); // line glow\n    }\n    vec4 colourA = vec4(.2 , .8, .8, 1), \n         colourB = vec4(.85, .2, .2, 1);\n    O *= mix(colourA, colourB, t);\n}\n/**/\n\n/**  // compact version\n#define S 2.*sin(1.5708*(vec2(0,1)\nvoid mainImage(out vec4 O,  vec2 U ) {\n    vec2 P,B,R = iResolution.xy; O-=O;\n    float d, t = cos(iDate.w * .3);\n    for (float i = 0.; i < 4.; i+=4e-3) \n        P = (U+U-R)/R.y + S+i)),\n        B = S+i)) -.45* S+i*(350.+t))),\n        d = length(P - B * min(dot(P,B) / dot(B,B),  1.)),\n        O += (max(.1 - .034*R.x*d, 0.) + max(.01 - .3*d, 0.))*\n             vec4(.3+t,vec2(1.3-t),1);\n}\n/**/","name":"Image","description":"","type":"image"}]}