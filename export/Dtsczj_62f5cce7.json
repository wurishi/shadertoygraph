{"ver":"0.1","info":{"id":"Dtsczj","date":"1690954239","viewed":46,"name":"Infinity atom2","username":"SUBAUX","description":"it looks ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["orbital"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p) {\n   // Animate\n   p.z += iTime/2.0;\n    \n   // This makes everything below repeat infinitely.\n   p = mod(p, 0.2) - vec3(0.1);\n   \n   // You can select a different shape by uncommenting lines below.\n    \n   // A ball with radius 0.05\n   return length(p) - 0.05;\n   \n   // Octagon shape.\n    //return dot(abs(p), vec3(1.0/sqrt(3.0))) - 0.05;\n\n   // Cube shape\n   // return length(p - clamp(p, vec3(-0.05), vec3(0.05)));\n}\nfloat ray(vec3 from, vec3 direction) {\n    // How far we travelled (so far)\n    float travel_distance = 0.0;\n    \n    for (int i = 0; i < 50; i++) {\n        // calculate the current position along the ray\n\t    vec3 position = from + direction * travel_distance;\n\t    float distance_to_closest_object = map(position);\n    \tif (distance_to_closest_object < 0.0001) {\n        \treturn travel_distance;\n    \t}\n        // We can safely advance this far since we know that the closest\n        // object is this far away. (But possibly in a completely different\n        // direction.)\n        travel_distance += distance_to_closest_object;\n    }\n    \n    // We walked 50 steps without hitting anything.\n    return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.xy;\n    float x = uv.x;\n    float y = uv.y;\n    float r = iTime;\n    vec2 tit = abs(cos(vec2(x,y)));\n    float tot = abs(sin(x)/cos(y));\n    float bro = abs(cos(y)/(sin(x)/sin(y)));\n    float done = (bro+cos(r)/tot);\n    done /= tit.x/tot*cos(bro);\n    vec3 col = cos(done)*vec3(tit,2.);\n    col += length(tit);\n     vec3 t = vec3(ray(col, vec3(tit,done)*vec3(0.,2.,cos(r))),\n     ray(col, vec3(tit,done)*vec3(0.,5.*cos(r),0.))\n     ,ray(col, vec3(tit,done)*vec3(cos(r),2.,0.05)));\n\n    fragColor = vec4(t,1.0);\n}","name":"Image","description":"","type":"image"}]}