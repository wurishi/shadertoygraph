{"ver":"0.1","info":{"id":"MssyWB","date":"1489763737","viewed":130,"name":"Julia__00","username":"aym0","description":"simple fractal scketch","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Complex {\n\tfloat r, i;\n};\n\nComplex add(in Complex z1, in Complex z2) {\n\t\n    Complex z;\n    z.r = z1.r + z2.r;\n    z.i = z1.i + z2.i;\n    \n    return z;\n}\n\nComplex mult(in Complex z1, in Complex z2) {\n\t\n    Complex z;\n    z.r = z1.r * z2.r - z1.i * z2.i;\n    z.i = z1.r * z2.i + z1.i * z2.r;\n    \n    return z;\n}\n\nfloat getLength(in Complex z) {\n\treturn z.r * z.r + z.i * z.i;\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n    \n    vec2 uv = (fragCoord.xy - vec2(iResolution * 0.5)) / iResolution.x * 0.4 + vec2(0.0, 0.5);\n    \n    Complex z;\n    z.r = uv.x;\n    z.i = uv.y;\n    \n    Complex c;\n    c.r = sin(iTime) * 0.05 + 0.41;\n    c.i = cos(iTime) * 0.05 + 0.41;\n    \n    float count = 0.0;\n    bool bDive = false;\n    \n    for (float i = 0.0; i < 1.0; i += 0.01) {\n    \tz = mult(z, z);\n        z = add(z, c);\n        \n        count = i;\n        \n    \tcount += 1.0;\n        if (getLength(z) > 1e5) {\n            bDive = true;\n        \tbreak;\n        }\n    }\n    \n    vec3 col = vec3(0.4, 0.8, 1.0) * count * 0.6;\n\tif (bDive) fragColor = vec4(sqrt(col), 1.0);\n    else fragColor = vec4(1.0);\n    \n    \n\t\n}\n","name":"Image","description":"","type":"image"}]}