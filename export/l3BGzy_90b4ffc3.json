{"ver":"0.1","info":{"id":"l3BGzy","date":"1708578652","viewed":65,"name":"illusion 42","username":"TWIX3RA","description":"Fun","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["illusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t) {\n    vec3 a = vec3(0.048, 0.428, 0.638);\n    vec3 b = vec3(0.928, 0.718, -0.082);\n    vec3 c = vec3(0.268, -0.322, -1.602);\n    vec3 d = vec3(-3.142, -0.003, -0.003);\n\n\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n   vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0; //Centrer l'origine sur l'image\n   uv.x *= iResolution.x / iResolution.y; //Correction d'image pour tout type de fenêtre\n   vec2 uv0 = uv;\n   vec3 finalColor = vec3(0.0);\n   \n   for (float i = 0.0; i < 3.0; i++) {\n       uv = fract(uv * 2.5) - 0.5;\n\n\n       float d = length(uv); //Distance du pixel à l'origine\n\n       vec3 col= palette(length(uv0) + iTime*.4);\n\n       d = sin(d*8. + iTime)/6.;\n       d = abs(d);\n\n       d = 0.03 / d;\n\n       finalColor += col * d;\n   }\n   \n   fragColor = vec4(finalColor, 1.0);   //Couleur\n   \n}","name":"Image","description":"","type":"image"}]}