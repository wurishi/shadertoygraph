{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"//License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n//I have followed the UÄŸur GÃ¼ney`s tutorials -> https://www.shadertoy.com/view/Md23DV\n\n// returns 1.0 if inside circle\t(by UÄŸur GÃ¼ney. March 8, 2014.)\nfloat disk(vec2 r, vec2 center, float radius) \n{\n\treturn 1.0 - smoothstep( radius-0.005, radius+0.005, length(r-center));\n}\n\nfloat diskSol(vec2 r, vec2 center, float radius) \n{\n\treturn 1.0 - smoothstep( radius-0.009 / center.y, radius+0.009 / center.y, length(r-center));\n}\n\nfloat diskResplandor(vec2 r, vec2 center, float radius) \n{\n\treturn 1.0 - smoothstep( radius-0.1 / center.y, radius+0.1 / center.y, length(r-center));\n}\n\nfloat diskFugaz(vec2 r, vec2 center, float radius) \n{\n\treturn 1.0 - smoothstep( radius-0.005, radius+0.001, length(r-center));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n\tvec2 r = uv * 10.0;\n\t\n\tfloat t = iTime;\t\n\t\n\tfloat horizon = 0.5;\n\tfloat waterLine = 0.2 + 0.07 * sin(t) * (uv.x + cos(t))* texture(iChannel1, uv).x;\n\t\n\t//Sun\n\tvec2 sunCenter = vec2 (0.7 + 0.5 * cos(t * 0.2), 0.48 + 0.3 * sin(t * 0.2));\n\tfloat radius = 0.08;\n\tvec3 sunColor = vec3 (0.9, 0.8, 0.8 * abs(cos((sunCenter.y) * 3.1416)));\n\t\n\t\n\t//MÃ¡ximum height of the sun\n\tvec2 maxp = vec2(0.78, 0.78);\n\tfloat sunMaxpDistance = length(sunCenter - maxp);\n\t\n\t//To activate the sunrise\n\tfloat sunrise = (sunCenter.y + 0.6) * 2.0 - 3.0*uv.y;\n\t\t\n\t//Brightness surrounding to the sun\n\tfloat sunBrightness = diskResplandor(uv, sunCenter, 0.2);\n\t\n\t//Sky\t\t\t   Blue\t\t\t\t\t\t\t\t\tOrenge brightness\t\t\t\t\t\t\t\t\t\t\t\t\t\tOrange to the sky\n\tvec3 sky = vec3 (0.75 * 1.1 * uv.y * sunCenter.y + \t1.0 * sunrise * sunBrightness * sin((sunCenter.y + 0.25) * 3.1416) + \t1.0 * sunrise * sin((sunCenter.y + 0.25) * 3.1416), \n\t\t\t\t\t   0.88 * 1.1 * uv.y * sunCenter.y + \t0.5 * sunrise * sunBrightness * sin((sunCenter.y + 0.25) * 3.1416) + \t0.5 * sunrise * sin((sunCenter.y + 0.25) * 3.1416), \n\t\t\t\t\t   0.95 * 1.3 * uv.y * sunCenter.y + \t0.0 * sunrise * sunBrightness * sin((sunCenter.y + 0.25) * 3.1416) + \t0.0 * sunrise * sin((sunCenter.y + 0.25) * 3.1416));\n\tvec3 pixelColor = sky;\n\t\n\t//Stars\n\tvec3 starsColor = vec3(1.0, 1.0, 1.0);\n\tconst float starsNum = 35.0;\n\tfloat starsRadius = 0.008;\n\tfloat disappear = -sunCenter.y * 0.015;\n\t\n\tfloat j = 0.0, k = 0.1;\t//To give a 'random' position to the stars\n\tfor (float i = 0.0; i < starsNum; i++)\n\t{\n\t\tvec2 starPosition = vec2(1.5 + j - k + cos(i) * k, \n\t\t\t\t\t\t\t\t\t 0.75 + sin(i) * j);\n\t\tfloat flickerVel = 0.15;\n\t\tfloat flicker = 0.002 * abs(cos(t * flickerVel * i));\n\t\t\n\t\tpixelColor += disk(uv, starPosition,\n\t\t\t\t\t\t   starsRadius * sunMaxpDistance + flicker + disappear) * \n\t\t\t\t\t\t(starsColor - pixelColor);\n\t\t\n\t\tj += 0.007;\n\t\tk += 0.03;\n\t}\n\t\n\t//Shooting star\n\tpixelColor += diskFugaz(uv, vec2(-2.5 -4.0 * cos(t), 2.0 * sin(t)),\n\t\t\t\t\t\t\t0.01 + disappear) * (starsColor - pixelColor);\n\t\n\t\t\n\t//Sun color\n\tpixelColor += diskSol(uv, sunCenter, radius) * (sunColor - pixelColor);\n\t\n\t//To do the plasma effect in the water by IQ\n\tfloat v1 = sin(r.x +t);\n    float v2 = sin(r.y +t);\n    float v3 = sin(r.x+r.y +t);\n    float v4 = cos(sqrt(r.x*r.x+r.y*r.y) +1.7*t);\n\tfloat v = v1+v2+v3+v4;\n\t\n\t//Water\n\tvec3 waterColor = vec3(0.2 * sin(v * 0.5 + 3.1416) + sunCenter.y - (uv.y - waterLine) * 6.0, 0.2 * sin(v * 0.5 + 3.1416) + sunCenter.y - (uv.y - waterLine) * 6.0, 0.1 * sin(v * 0.5 + 3.1416) + sunCenter.y);\n\t\n\tpixelColor += (waterColor - pixelColor) * \n\t\tvec3 (abs(smoothstep(horizon - 0.01, horizon + 0.01, uv.y) - 1.0));\n\n\t//Sand\n\tvec3 sandColor = vec3(1.0 * sunCenter.y + 0.2,\n\t\t\t\t\t\t   0.8 * sunCenter.y + 0.2,\n\t\t\t\t\t\t   0.2 * sunCenter.y + 0.2);\n\t\n\tpixelColor += (sandColor * texture(iChannel1, r).xyz - pixelColor) * \n\t\tvec3 (abs(smoothstep(waterLine - 0.02, waterLine + 0.02,\n\t\t\t\t\t\t\t uv.y) - 1.0));\n\t\n\tfragColor = vec4(pixelColor,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dXSRM","date":"1398326609","viewed":163,"name":"Day & night","username":"alfredoantonio11","description":"Delivery PGATR Practice 5. Master in Computer Graphics, Games and Virtual Reality. URJC, Madrid.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["night","day","dia","noche","alfredo","gonzalez"],"hasliked":0,"parentid":"","parentname":""}}