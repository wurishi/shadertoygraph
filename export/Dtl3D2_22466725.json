{"ver":"0.1","info":{"id":"Dtl3D2","date":"1672631845","viewed":91,"name":"Premult vs. Straight Alpha","username":"bestknighter","description":"A simple study of alpha blending modes of straight vs premultiplied using only the over operator","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["study","learning","alphablending"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Inspired by https://ciechanow.ski/alpha-compositing/\n\nfloat len(vec2 a) {\n    return sqrt(a.x*a.x + a.y*a.y);\n}\n\nfloat circle(vec2 uv, vec2 pos, float r) {\n    float feather = 0.01/2.0;\n    float dist = len((pos-uv)*vec2(iResolution.x/iResolution.y, 1.0));\n    return 1.0-smoothstep(r-feather, r+feather, dist);\n}\n\n// Under = Destination in linked Bartosz's article\n// Over = Source\n\nvec4 alphaBlend_premul(vec4 under, vec4 over) {\n    return over + under*vec4(1.0-over.a);\n}\n\nvec4 alphaBlend_straight(vec4 under, vec4 over) {\n    under.rgb *= vec3(under.a);\n    vec4 ans = vec4(\n        mix(under.rgb, over.rgb, vec3(over.a)),\n        over.a + under.a*(1.0-over.a)\n    );\n    ans.rgb /= vec3(ans.a);\n    return ans;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 composite = vec4(uv.x, uv.y, 0.0, 1.0);\n    \n    /****************************************************************\n     * Uncomment the following lines, one at a time, and see        *\n     * how it is rendered and how it affects the entire composition *\n     ****************************************************************/\n    \n    // Upper Left   - PREMULT  blending with STRAIGHT circle\n    //                                                          COLOR             ALPHA\n    //composite = alphaBlend_premul  (composite, vec4(      0.5, 0.5, 1.0,        circle(uv, vec2(0.25, 0.75), 0.2) ));\n    \n    // Upper Right  - STRAIGHT blending with PREMULT  circle\n    //composite = alphaBlend_straight(composite, vec4( vec4(0.5, 0.5, 1.0, 1.0) * circle(uv, vec2(0.75, 0.75), 0.2) ));\n    \n    /*****/\n    \n    // Bottom Left  - STRAIGHT blending with STRAIGHT circle\n    composite = alphaBlend_straight(composite, vec4(      0.5, 0.5, 1.0,        circle(uv, vec2(0.25, 0.25), 0.2) ));\n    \n    // Bottom Right - PREMULT  blending with PREMULT  circle\n    composite = alphaBlend_premul  (composite, vec4( vec4(0.5, 0.5, 1.0, 1.0) * circle(uv, vec2(0.75, 0.25), 0.2) ));\n    \n    fragColor = pow(composite, vec4(1./2.2));\n}","name":"Image","description":"","type":"image"}]}