{"ver":"0.1","info":{"id":"clGcRc","date":"1700468495","viewed":38,"name":"Fabric of Spacetime","username":"shaderwho","description":"Simulates an endless pattern of nodes connected together at a diagonal angle against a constantly changing gridsize controlled by time","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["spacetime","fabric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float loopTime = mod(iTime, 1000000000000000000000.);\n    float gridSize = mix(.01, 1.0, loopTime / .2);\n    vec2 gridUV = fract(uv * gridSize) - 0.5;\n    float dist1 = abs(gridUV.x - gridUV.y);\n    float dist2 = abs(gridUV.x + gridUV.y - 1.0);\n    float minDist = min(dist1, dist2);\n    float lineThickness = 0.0005;\n    bool onLine = minDist < lineThickness;\n    float nodeRadius = 0.025;\n    bool onNode = (length(gridUV) < nodeRadius) ||\n                  (length(gridUV - vec2(0.5, -0.5)) < nodeRadius) ||\n                  (length(gridUV - vec2(-0.5, 0.5)) < nodeRadius);\n    vec3 color1 = vec3(1.0, 0.0, 0.0);\n    vec3 color2 = vec3(0.0, 1.0, 0.0); \n    vec3 color3 = vec3(0.0, 0.0, 1.0);\n    vec3 creamyOrange = vec3(1.0, 0.8, 0.5);\n    float transitionSpeed = 2.0;\n    float t = mod(loopTime * transitionSpeed, 11.0);\n    vec3 currentColor, nextColor;\n    if (t < 0.33) {\n        currentColor = color1;\n        nextColor = color2;\n    } else if (t < 0.66) {\n        currentColor = color2;\n        nextColor = color3;\n    } else {\n        currentColor = color3;\n        nextColor = color1;\n    }\n    vec3 transitionColor = mix(currentColor, nextColor, t);\n    float orangePhase = 0.15;\n    vec3 nodeColor = mix(transitionColor, creamyOrange, smoothstep(0.0, orangePhase, abs(t - 0.5)));\n    vec3 col = vec3(0.0);\n    if (onLine) {\n        col = transitionColor;\n    }\n    if (onNode) {\n        col = nodeColor;\n    }\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}