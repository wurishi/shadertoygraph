{"ver":"0.1","info":{"id":"WsBBzz","date":"1589337130","viewed":52,"name":"CMPM163 Lab 6 Quan Gao","username":"qugao","description":"CMPM163 Lab 6","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["lab6","cmps163"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// compute distance from a point to the line\nfloat DistLine(vec3 ro, vec3 rd, vec3 p) {\n\treturn length(cross(p - ro, rd)) / length(rd);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    // Fixes the u axis so we have the right aspect ratio in terms of uv\n    uv.x *= iResolution.x/iResolution.y;\n\n    // output ray origin & ray direction\n\tvec3 ro = vec3(0., 0., -2.);\n    vec3 rd = vec3(uv.x, uv.y, 0.) - ro;\n    \n    // make circle go circle\n    float t = iTime;\n    vec3 p = vec3(sin(t), 0., 2. + cos(t));\n    float d = DistLine(ro, rd, p);\n    \n    // make disk\n    d = smoothstep(.1, .09, d);\n  \tvec4 sampledColor = texture(iChannel0, uv);\n    fragColor = vec4(sampledColor * d);\n    \n\n}","name":"Image","description":"","type":"image"}]}