{"ver":"0.1","info":{"id":"dlXBWr","date":"1693354867","viewed":42,"name":"RayMarching Primitives Practice","username":"Lobinux","description":"Ray marching practice.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.0\n#define SURF_DIST 0.01\n\nfloat GetDist(vec3 p)\n{\n    vec4 s = vec4 (0, 1, 6, 1);\n    float sphereDist = length(p - s.xyz) - s.w;\n    float planeDist = p.y;\n    \n    float d = min(sphereDist, planeDist);\n    return d;\n}\n\nfloat RayMarch(vec3 ro, vec3 rd)\n{\n    float dO = 0.0;\n    \n    for(int i = 0; i < MAX_STEPS; i++)\n    {\n        vec3 p = ro + rd * dO;\n        float ds = GetDist(p);\n        dO += ds;\n        if(dO > MAX_DIST || ds < SURF_DIST) break;\n    }\n    \n    return dO;\n}\n\nvec3 GetNormal(vec3 p)\n{\n    float d = GetDist(p);\n    vec2 e = vec2(.01, 0);\n    \n    vec3 n = d - vec3(GetDist(p - e.xyy), GetDist(p - e.yxy), GetDist(p - e.yyx));\n    \n    return normalize(n);\n}\n\nfloat GetLight(vec3 p)\n{\n    vec3 lightPos = vec3(0, 5, 6);\n    lightPos.xz += vec2(sin(iTime), cos(iTime)) * 4.0;\n    \n    // light direction\n    vec3 l = normalize(lightPos - p);\n    \n    // light normal hit\n    vec3 n = GetNormal(p);\n    \n    float dif = clamp(dot(n, l), 0.0, 1.0);\n    \n    // Calculate the shadows using raymarching\n    float d = RayMarch(p + n * SURF_DIST * 2.0, l);\n    \n    if(d < length(lightPos - p)) dif *= 0.1;\n    \n    return dif;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    \n    vec3 col = vec3(0);\n    \n    // Ray origin\n    vec3 ro = vec3(0, 1, 0);\n    \n    // Ray Direction\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1.0));\n    \n    // distance\n    float d = RayMarch(ro, rd);\n    \n    // Point light\n    vec3 p = ro + rd * d;\n    \n    // Difuse light\n    float dif = GetLight(p);\n    \n    col = vec3(dif);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}