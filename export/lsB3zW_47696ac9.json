{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float time = 0.;\nfloat pi = 3.14159;\nfloat cycle = 0.;\n\nfloat usin(float x) {return 0.5+0.5*sin(x);}\nfloat osin(float x) {return 0.75+0.25*sin(x);}\nfloat ucos(float x) {return 0.5+0.5*cos(x);}\nfloat ocos(float x) {return 0.75+0.25*cos(x);}\n\nconst vec4 nullcol = vec4(0.);\nconst vec3 nulldir = vec3(0.);\n\nstruct shapevals {vec2 pos; float ang; float scale; float line;};\nstruct rayblob {vec3 pos; float ang; float scale; vec3 col;};\n\t\nvec3 sphere(vec3 p, vec3 r, rayblob s) {\n\tvec3 inc = p+r;\n\tif (length(inc-s.pos) < s.scale) {\n\t\tfloat b = 2.*dot(r, p-s.pos);\n\t\tfloat c = dot(p-s.pos, p-s.pos) - s.scale*s.scale;\n\t\tfloat d = b*b-4.*c;\n\t\tif (d < 0.) return nulldir;\n\t\tfloat t1 = (-b + sqrt(d))/2.;\n\t\tfloat t2 = (-b - sqrt(d))/2.;\n\t\tfloat t = min(t1,t2);\n\t\treturn inc-t*r;\n\t} \n\treturn nulldir;\n}\n\nfloat surf(vec2 p) {\n\tfloat z = usin(p.x*7.+2.*time) + ucos(p.y*4.+osin(time*4.)*2.);\t\n\n\treturn z*.3;\n}\n\t\nconst vec3 eye = vec3(0.,0.,4.);\nconst vec3 at = vec3(0.,0.,0.);\nconst vec3 up = vec3(0.,1.,0.);\nconst float frustrum = 2.0;\nvec4 raysurf(vec2 p, rayblob s) {\n\tvec3 ray = normalize(at-eye);\n\tvec3 right = cross(up, ray);\n\n\tvec3 pt = normalize(ray*frustrum + p.x*right + p.y*up);\n\tray = eye;\n\t\n\tvec3 collide;\n\tvec3 col = vec3(0.);\n\t\n\tfloat dt = .2;\n\tfloat z = eye.z;\n\tfor (int i = 0; i < 32; i++) {\n\t\tcollide = sphere(ray, pt*dt, s);\n\t\tif (collide != nulldir) {\n\t\t\tvec3 n = normalize(collide - s.pos);\n\t\t\tpt = -n;\n\t\t\tz = dot(ray, n);\n\t\t\tcol += s.col;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tz = surf(ray.xy);\n\t\tif (z > ray.z) break;\n\t\tray += pt*dt;\n\t}\n\t\n\tfloat stripe = ceil(sin(z*(30.*osin(time*4.))));\n\tvec3 scol = vec3(stripe*.8, stripe*.5, 0.);\n\t\n\tcol += scol*(z+.3);\n\treturn vec4(col,1.);\t\n}\n\n\nfloat pattern(vec3 ray) {\n\tfloat res = 0.;\n\tfloat r = length(ray.xy);\n\t\n\treturn usin(r*cycle*2.-time*10.)+ucos(12.*atan(ray.y/ray.x)+2.*time+r*cycle*10.);\n}\n\nvec4 circle(vec2 p, shapevals s, float j) { \n\tvec2 pos = s.pos;\n\t\n\tvec2 os = p-pos;\n\tfloat a = atan(os.y,os.x)+s.ang;\n\tfloat d = length(os)-usin(a*j)*s.scale;\n\t\n\tif (d<s.scale) {\n\t\treturn vec4(usin(pos.x), usin(pos.y),pattern(os.xyx),1.0);\n\t} else if (d-s.line < s.scale) {\n\t\treturn vec4(nullcol.xyz,1.);\n\t}return nullcol;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv = 2.*uv-1.;\n\tuv.x *= iResolution.x/iResolution.y;\n\t\n    time = iTime;\n    cycle = 2.*pi;\n    \n\tvec4 col;\n\t\n\tshapevals f1 = shapevals(vec2(sin(time),cos(time*4.)), time*4.+sin(time)*2., 0.2,0.05);\n\tshapevals f2 = shapevals(vec2(cos(time*4.+pi/2.),sin(time)), time*2.-sin(time*2.)*3., 0.25,.05);\n\tshapevals rain;\n\t\n\trayblob s1 = rayblob(vec3(sin(time), cos(time*2.), .5), 0., 1., vec3(0.,.4,0.));\n\t\n\tconst int num = 10;\n\tfor (int i = 0; i < num; i++) {\n\t\tfloat j = float(i);\n\t\tfloat fall = usin(sin(j));\n\t\tfall = fall*-time*2.;\n\t\train = shapevals(vec2(mod(j, pi)-pi/2.,mod(j+fall, pi)-pi/2.), time*(0.5+0.5*usin(j))+sin(time+j)*2., 0.1+0.02*usin(cycle*time*4.+j), .05);\t\n\t\tcol = circle(uv, rain, 5.);\n\t\tif (col != nullcol) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif (col == nullcol) {\n\t\tcol = circle(uv, f1, 2.);\n\t}\t\n\tif (col == nullcol) {\n\t\tcol = circle(uv, f2, 3.);\n\t}\n\tif (col == nullcol) {\n\t\tcol = raysurf(uv, s1);\n\t}\n\t\n\tfragColor = col;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsB3zW","date":"1398135910","viewed":424,"name":"fall stars","username":"zugamifk","description":"star","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["star"],"hasliked":0,"parentid":"","parentname":""}}