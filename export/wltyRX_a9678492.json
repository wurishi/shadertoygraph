{"ver":"0.1","info":{"id":"wltyRX","date":"1609685260","viewed":66,"name":"Genuary2021 2 Rule 30 (CA)","username":"qw","description":"Entry for Day 2 of #Genuary2021 - see https://genuary2021.github.io/\nPrompt of the day: Rule 30 (Cellular Automaton)","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["cellularautomaton","genuary2021","genuary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv *= 2.;\n    //uv = .1 + sin(uv.y)*sin(uv.x)*uv;\n\n//    uv = pow( sin(uv.x)*uv, vec2(1.2));\n    uv *=  atan(uv.y*uv.y,uv.x*uv.x) * abs(uv.x*uv.y) +  0.5;\n    \n    \n    float a = iTime * .8;\n    mat2 m = mat2(cos(a),-sin(a),sin(a),cos(a));\n    uv *= m;\n    vec4 col = texture(iChannel0, uv);\n    \n    fragColor = vec4(col.rgb, 1.);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define boxCount 30.\n\nfloat Rand21(vec2 id){\n\n    //vec3 v = vec3(id.y, id.x*id.y,id.x * (id.y * 13524.12991));\n    //return fract(  ( id.x + (3551.904*id.y) * 23.5123)  + id.x * 1233.1 + dot(v*14.6331, v.zyx) );    \n\n    vec3 a = fract(vec3(id.xyx) * vec3(43.27, 159.992, 122.12));\n    a += dot(a, a.yzx + 49.93);\n    return fract((a.x + a.y) * a.z);    \n}\n\n\nfloat Rule30(vec2 id, vec2 uv){\n\n    vec2 centerOfBoxOffset = vec2( (1. / boxCount)*0.5);\n    vec2 box1CoordID = vec2( mod( (id.x-1.)+boxCount,boxCount) , mod(id.y+1.,boxCount) );\n    vec2 box2CoordID = vec2( id.x , mod(id.y+1.,boxCount) );\n    vec2 box3CoordID = vec2( mod( (id.x+1.),boxCount) , mod(id.y+1.,boxCount) );\n\n\n    float colIn1 = texture(iChannel0, (vec2(box1CoordID)/boxCount) + centerOfBoxOffset ).r;\n    float colIn2 = texture(iChannel0, (vec2(box2CoordID)/boxCount) + centerOfBoxOffset ).r;\n    float colIn3 = texture(iChannel0, (vec2(box3CoordID)/boxCount) + centerOfBoxOffset ).r;\n    \n    float colOut = 0.;\n    \n    if( colIn1 == 0. && colIn2 == 0. && colIn3 == 0. ){\n        colOut = 1.;\n    }else if( colIn1 == 0. && colIn2 == 0. && colIn3 == 1. ){\n        colOut = 1.;\n    }else if( colIn1 == 0. && colIn2 == 1. && colIn3 == 0. ){\n        colOut = 1.;\n    }else if( colIn1 == 0. && colIn2 == 1. && colIn3 == 1. ){\n        colOut = 0.;\n    }else if( colIn1 == 1. && colIn2 == 0. && colIn3 == 0. ){\n        colOut = 0.;\n    }else if( colIn1 == 1. && colIn2 == 0. && colIn3 == 1. ){\n        colOut = 0.;\n    }else if( colIn1 == 1. && colIn2 == 1. && colIn3 == 0. ){\n        colOut = 0.;\n    }else if( colIn1 == 1. && colIn2 == 1. && colIn3 == 1. ){\n        colOut = 1.;\n    }\n   \n    return colOut;   \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv *= boxCount;\n    vec2 boxes = mod(uv,1.0)-vec2(0.05);\n    //if( boxes.x >= 0.9 ||  boxes.y >= 0.9){\n        //fragColor = vec4(1.,0.,0.,1.);\n    //}else{\n        \n        vec2 id = vec2(floor(uv));\n            \n        if( iFrame == 0){ //First frame\n            float random = Rand21(id);\n            float filled = random > 0.5 ? 1. : 0.;\n            fragColor = vec4(filled,filled,filled,1.);\n            \n            //fragColor.rg = boxes;\n        }else if( mod(float(iFrame),80.) == 0.){\n             float value = Rule30(id, uv);\n            fragColor = vec4(value,value,value,1.);\n        }else{\n            fragColor =  texture(iChannel0, fragCoord/iResolution.xy);\n        }\n    //} \n}","name":"Buffer A","description":"","type":"buffer"}]}