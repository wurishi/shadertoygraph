{"ver":"0.1","info":{"id":"MlcBz2","date":"1540249759","viewed":102,"name":"Distance hsv","username":"R3QU13M","description":"simple blob computation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["experiment","distance","hsv","static"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI  3.14159265358\n#define M_1div_e_pow_pi 0.04321391826\n\nvec3 hsv2rgb(float h, float s, float v)\n{\n\t// https://gist.github.com/JensAyton/499357\n\tfloat hi = h * 3.0 / M_PI;  // Sector, [-3..3)\n\tfloat f = hi - floor(hi);  // Fractional part.\n    \n\tvec4 components = vec4\n\t(\n\t\t0.0,\n\t\ts,\n\t\ts * f,\n\t\ts * (1.0 - f)\n\t);\n\t\n\tcomponents = (1.0 - components) * v;\n \n\treturn (hi < 0.0) ?\n\t\t(\n\t\t\t(hi < -2.0) ? components.xwy :\n\t\t\t(hi < -1.0) ? components.zxy :\n\t\t\tcomponents.yxw\n\t\t) :\n\t\t(\n\t\t\t(hi < 1.0) ? components.yzx :\n\t\t\t(hi < 2.0) ? components.wyx :\n\t\t\tcomponents.xyz\n\t\t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 rnd[3] = vec2[](vec2(random(0.1f), random(0.2f)), vec2(random(0.3f), random(0.4f)), vec2(random(0.5f), random(0.6f)));\n    vec2 rnd[3] = vec2[](vec2(0.25, 0.5), vec2(0.5, 0.56), vec2(0.8, .5));\n\n    \n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 0.5;\n   \t\n    float total = 0.0;\n    \n    for(int i = rnd.length() - 1; i >= 0; --i)\n    {\n       total += .0625 / distance(uv, rnd[i] / 2.0) - .25;\n   \t}\n    //total+= 0.0625 / distance(uv, rnd[0]);\n    //total+= 0.0625 / distance(uv, rnd[1]);\n    \n\t\n    \n    // Output to screen\n    //fragColor = vec4(vec3(total),1.0);\n    fragColor = vec4(hsv2rgb(total - 1.0, 1.0, 1.0),1.0);\n}","name":"Image","description":"","type":"image"}]}