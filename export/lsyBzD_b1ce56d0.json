{"ver":"0.1","info":{"id":"lsyBzD","date":"1527773361","viewed":543,"name":"Butterfly 01","username":"peko","description":"Simple butterfly forked from https://www.shadertoy.com/view/4sfyWB","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["butterfly"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// fork of https://www.shadertoy.com/view/4sfyWB\n\nconst float PI = 3.1415926;\nvec3 butterfly(vec2 frag);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = 0.5+vec4(butterfly(uv)/2.0,1.0);\n}\n\n\nvec3 butterfly(vec2 uv) {\n    uv-= 0.5;\n    uv*= 1.5;\n    uv.x*=1.5;\n    uv.x *= 1.0 -sin(iTime*2.)*.2;\n    vec2 p =uv*20.0;\n\n   \tfloat r = length(p);\n\tfloat t = atan(p.y, p.x);\n    \n    float butterfly = \n        7. - 0.5*sin( 1.*t) \n           + 2.5*sin( 3.*t) \n           + 2.0*sin( 5.*t) \n           - 1.7*sin( 7.*t) \n           + 3.0*cos( 2.*t) \n           - 2.0*cos( 4.*t) \n           - 0.4*cos(16.*t) - r;\n    \n    float a =-2.0;\n    float b = 0.0;\n    float c = smoothstep(a, b, butterfly);\n    vec2 g = normalize(p);\n    return vec3(g*c, 0.0);\n}\n","name":"Image","description":"","type":"image"}]}