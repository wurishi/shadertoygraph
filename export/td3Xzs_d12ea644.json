{"ver":"0.1","info":{"id":"td3Xzs","date":"1575415416","viewed":73,"name":"Texture Board / Checker Board","username":"joshBogin","description":"Checker Board of square tiles made with textures.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["texturescheckerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// vars for rows and columns\nfloat cols = 10.0;\nfloat rows = 10.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = fragCoord/iResolution.xy;\n\n\t// correct shape dimensions\n\tfloat aspectRatio = iResolution.x/iResolution.y;\n\n    // fix ratio of tiles\n\tuv.x *= aspectRatio * cols;\n\tuv.y *= cols/rows * rows;\n    \n\t// determine whether uv position is even or odd and store it in a variable\n\tvec3 blackOrWhite = vec3(mod(floor(uv.x) + floor(uv.y),2.0));\n    \n    // create display output color\n\tvec3 color;\n\n    // create tiles for output\n\tfloat colLength = step(cols,distance(uv.y, cols));\n\tfloat rowLength = step(rows,distance(uv.x, rows));\n    \n    // first color\n    vec3 color1 = vec3(texture(iChannel0,uv));\n    // second color\n    vec3 color2 = vec3(texture(iChannel1,uv));\n    \n    // background color\n    color = color1 * blackOrWhite + color2 * (1.0 - blackOrWhite);\n    \n\t// if-statement to cut off tile if it won't fully fit on screen\n    if (uv.x > floor(cols * aspectRatio))\n    {\n        // make cut-off space black\n    \tcolor = vec3(0.0,0.0,0.0);\n    }\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}