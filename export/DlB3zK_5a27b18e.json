{"ver":"0.1","info":{"id":"DlB3zK","date":"1673512769","viewed":38,"name":"XWX_Circles","username":"XWX","description":"circle","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N 10 // 同心圆个数\n#define V 0.1 //扩散速度\n#define Width 0.01 //宽度\n\nvec3 drawCircle(float offset, vec2 uv, float v)\n{    \n    //屏幕上的点到圆心的距离\n    float dist1=length(fract(iTime*v+offset));\n    float dist2=length((fract(iTime*v+offset)))+Width;\n    if(dist1<=length(uv) && length(uv)<=dist2) return vec3(1.0-length(uv));\n    else return vec3(0,0,0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1), and correcting x\\y \n    vec2 uv = (fragCoord/iResolution.xy*2.0f-1.0f); // S R T\n    //uv.x*= iResolution.x/iResolution.y; //纵向匹配viewport\n    uv.y*= iResolution.y/iResolution.x;//横向匹配viewport\n\n    // Time varying pixel color\n    vec3 col;\n    for(int i=0;i<N;i++){\n        col+=drawCircle(float(i)/float(N),uv,V);\n    \n    }\n\n    // Output to screen\n    // gamma矫正，没有gamma矫正的话会显得暗一些（gamma2.2）\n    fragColor = vec4(pow(col,vec3(0.4545)),1.0);\n    // fragColor = vec4(pow(col,vec3(1.0)),1.0);\n}","name":"Image","description":"","type":"image"}]}