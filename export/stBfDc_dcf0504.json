{"ver":"0.1","info":{"id":"stBfDc","date":"1652823702","viewed":125,"name":"Ring of Circles","username":"pocketCoffee","description":"Arranges any number of circles in a circle.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","circle","ring"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 p){\n    return step(length(uv - p), .01);\n}\n\nfloat ring(float circles, vec2 uv){\n    float sum = 0.;\n    for(float i = 0.; i < circles; i++){\n        float r = circle(uv, vec2(cos(i*2.*3.14159/circles)*.1, sin(i*2.*3.14159/circles)*.1));\n        sum += r;\n    }\n    \n    return 1.-sum;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.y *= iResolution.y/iResolution.x;\n    \n    float c = ring(10., uv); // Set number of circles in the ring here\n    \n    vec3 col = vec3(c);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}