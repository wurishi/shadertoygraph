{"ver":"0.1","info":{"id":"lf2BRK","date":"1725270693","viewed":16,"name":"hue radial","username":"nahuel36","description":"hue radial","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["huerainbowradial"],"hasliked":0,"parentid":"lf2fzy","parentname":"hue radial ring"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define TWO_PI 6.28318530718\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0,0.0,1.0);\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage(out vec4 fragColour, in vec2 fragCoord){\n    vec2 st = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.0);\n\n    // Use polar coordinates instead of cartesian\n    vec2 toCenter = vec2(0.5)-st;\n\n    float angle = atan(toCenter.y,toCenter.x);\n    float radius = length(toCenter);\n\n    angle = angle + iTime;\n\n    // Map the angle (-PI to PI) to the Hue (from 0 to 1)\n    // and the Saturation to the radius\n    color = hsb2rgb(vec3((angle/TWO_PI)+0.5,radius*2.0, 1.0));\n\n    fragColour = vec4(color.rgb, 1.0);\n}","name":"Image","description":"","type":"image"}]}