{"ver":"0.1","info":{"id":"ssSSRK","date":"1620551533","viewed":76,"name":"F2-F1 Voronoi","username":"RiceFields","description":"Voronoi","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat aastep(float threshold, float value) {\n    float afwidth = 10.0f/iResolution.y; // pixel width for smoothstep edge \n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\n}\n\nfloat stroke(float f, float size, float width) {\n    return aastep(size, f+width*0.5f) - aastep(size, f-width*0.5f);\n}\n\nfloat fill(float f, float size) {\n    return 1.-aastep(size, f);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.y;\n    \n    uv *= 10.0f;\n    \n    vec2 iuv = floor(uv);\n    vec2 fuv = fract(uv);\n    \n    vec2 mDist = vec2(1.0f); // x least point distnace, y 2nd least point distance\n    \n    for(int j=-1; j<=1; ++j) {\n        for(int i=-1; i<=1; ++i) {\n            vec2 neighbour = vec2(float(i), float(j));\n            vec2 point = random2(iuv + neighbour);\n            \n            // animate\n            point = 0.5f + 0.5f*sin(iTime + 6.2831f*point);\n            \n            vec2 diff = neighbour + point - fuv;\n                        \n            float dist = dot(diff, diff); // lenght^2\n            \n            if(dist < mDist.x) {\n                mDist.y = mDist.x;\n                mDist.x = dist;\n            } else if(dist < mDist.y) {\n                mDist.y = dist;\n            }\n        }\n    }\n    \n    mDist = sqrt(mDist);\n    \n   vec3 col = vec3(fill(mDist.y - mDist.x, 0.04f)); // F2-F1 Voronoi,\n    //vec3 col = vec3(stroke(mDist.y - mDist.x, 0.05f, 0.02f)); // F2-F1 Voronoi,\n\n\n    fragColor = vec4(1.0f - col,1.0);\n}","name":"Image","description":"","type":"image"}]}