{"ver":"0.1","info":{"id":"ldGyR3","date":"1522749868","viewed":497,"name":"16 Dimensional Julia (Sedenion)","username":"rodolphito","description":"I just can't get enough of that dimension juice, man... Tengo sed-enion xD\nUncomment trueJulia to disable screen-coordinate variation of the julia (multiple julias rendered stitched)\n\nMouse Enabled\n\nOctonion Version: https://www.shadertoy.com/view/XdyyzV","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","complex","quaternion","octonion","sedenion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define volumetric\n\n//#define trueJulia\n\n#define fractalIters 5\n#define marchingIters 80\n\n#define close 0.001\n#define far 10.0\n\nmat4x4 f(mat4x4 s, mat4x4 c){return ssqr(s) + c;}\n\nfloat sdf(mat4x4 p,mat4x4 c){\n    mat4x4 deriv = sreal(1.0);\n    for(int i = 0; i < fractalIters; i++){\n        deriv = smul(2.0*p, deriv);\n        p = f(p,c);\n    }\n    float lp = sl(p);\n    #ifdef volumetric\n\tfloat r = 0.5*log(lp)/exp2(float(fractalIters));\n    #else\n    float r = 0.25*lp*log(lp)*inversesqrt(ssl(deriv));\n\t#endif\n    if (r != r) return 0.0;\n    return r;\n}\n\n\nvec3 getCol(mat4x4 s,mat4x4 c)\n{\n    //vec3 e = vec3(-0.1,0.0,0.1);\n    /*return (sdf(o) - vec3(\n        sdf(o+mat2x4(e.xyzx,e.yzxy)),\n        sdf(o+mat2x4(e.yzxy,e.xxyz)),\n        sdf(o+mat2x4(e.zxyz,e.zyzx))\n    )) * 10.0 + 0.5;*/\n    #ifdef volumetric\n    float scale = sdf(s*1.1,c);\n    if (scale > 1.0) scale = 1.0;\n    float value = 1.0-0.25*ssl(s);\n    float satur = value;\n    value *= value;\n    value *= value;\n    value *= scale;\n    float sharp = sdf(smul(rand3/sl(rand3),s),c);\n    return hsv2rgb(vec3(sharp*50.0,satur,value));\n    #else\n    float satur = 1.0;\n    float value = sdf(s*1.1,c);\n    float sharp = sdf(smul(rand1/sl(rand1),s),c);\n    return hsv2rgb(vec3(sharp*60.0,satur,value*20.0));\n\t#endif\n}\n\nvec4 iSphere(vec3 ro, vec3 rd){\n    float rdro = dot(rd, ro);\n    float disc = rdro*rdro - dot(ro, ro) + 4.0;\n    if(disc < 0.0) return vec4(9e9);\n    disc = sqrt(disc);\n    float d = -rdro - disc;\n    return vec4(ro + d*rd, 2.0*disc);\n}\n\nvec3 render(vec3 ro, vec3 rd, vec4 m){\n    vec4 sphere = iSphere(ro, rd);\n    #ifdef trueJulia\n    mat4x4 c = mat4x4(vec4(0.05), vec4(0.05), vec4(0.05), m.wzwz);\n    #else\n    mat4x4 c = mat4x4(vec4(0.05), vec4(0.05), vec4(0.05), m);\n    #endif\n    mat4x4 p = mat4x4(vec4(0), vec4(0), vec4(0), sphere.xyz, 0);\n    #ifdef volumetric\n    vec3 col = vec3(0.0);\n    #else\n    bool hit = false;\n    #endif\n    \n    if(sphere.w < far){\n        mat4x4 dir = mat4x4(vec4(0), vec4(0), vec4(0), rd, 0);\n        float t = 0.0;\n    \t\n        for(int i = 0; i < marchingIters; i++){\n            float d = sdf(p,c);\n            t += d;\n            p += d * dir;\n    \t\t#ifdef volumetric\n            col += max(0.0,1.0-d)*getCol(p,c);\n    \t\t#else\n            if (d < close)\n            {\n                hit = true;\n                break;\n            }\n            #endif\n            if(t > sphere.w) break;\n        }\n    }\n    #ifdef volumetric\n    return col;\n    #else\n    if (hit) return getCol(c,p);\n    else return vec3(0);\n    #endif\n}\n\nvec3 r(vec3 v, vec2 r)\n{\n    vec4 t = sin(vec4(r, r + 1.5707963268));\n    float g = dot(v.yz, t.yw);\n    return vec3(v.x * t.z - g * t.x,\n                v.y * t.w - v.z * t.y,\n                v.x * t.x + g * t.z);\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    vec4 m = (2.0*vec4(fragCoord,iMouse.xy)-iResolution.xyxy)/iResolution.y;\n    if (iMouse.z==0.0) m.zw = vec2(0.6,0.6)*sin(iTime*vec2(0.4,0.7)+vec2(0.9,1.5));\n    vec3 ro = vec3(0,0,-4);\n    vec3 rd = normalize(vec3(m.xy, 3));\n    ro = r(ro, vec2(0.5,0.2)*iTime);\n    rd = r(rd, vec2(0.5,0.2)*iTime);\n    fragColor.a = 0.0;\n    fragColor.rgb = render(ro, rd, m).grb;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//Complex+Quaternion+Octonion+Sedenion code\n//use with attribution (c) Rodol 2018\n//https://www.shadertoy.com/view/ldGyR3\n\nvec4 pi = vec4(0,2,4,8)*atan(1.0);\n\n// (1,i)\nvec2 creal(float a){return vec2(a,0);}\nfloat csl (vec2 z){return dot(z,z);}\nfloat cl  (vec2 z){return sqrt(csl(z));}\nfloat csil(vec2 z){return z.y*z.y;}\nfloat cil (vec2 z){return z.y;}\nfloat carg(vec2 z){return atan(cil(z),z.x);}\nvec2 cconj(vec2 z){z.x=-z.x;return-z;}\nvec2 cmul (vec2 z,float b){return z*b;}\nvec2 cmul (vec2 a,vec2 b){return mat2(a,-a.y,a.x)*b;}\nvec2 csqr (vec2 z){return vec2(z.x*z.x-z.y*z.y,2.0*z.y*z.x);}\nvec2 ccube(vec2 z){return vec2(z.x*z.x-3.0*z.y*z.y,3.0*z.x*z.x-z.y*z.y)*z;}\nvec2 cinv (vec2 z){return cconj(z)/csl(z);}\nvec2 cdiv (vec2 a,vec2 b){return cmul(a,cinv(b));}\nvec2 cexp (vec2 z){float l=cil(z);return sin(l+pi.yx)*exp(z.x);}\nvec2 clog (float x){return vec2(log(abs(x)),pi.z*step(0.0,x));}\nvec2 cpow (float a,vec2 z){float l=cil(z);return sin(l+pi.yx)*pow(a,z.x);}\nvec2 cpow (vec2 z,float n){return pow(csl(z),n*0.5)*sin(carg(z)*n+pi.yx);}\nvec2 cpow (vec2 a,vec2 b){return cmul(cpow(csl(a),0.5*b),cexp(carg(a)*b));}\n\n// (1,i,j,k)\nvec4 qreal(float a){return vec4(a,vec3(0));}\nfloat qsl (vec4 q){return dot(q,q);}\nfloat ql  (vec4 q){return sqrt(qsl(q));}\nfloat qsil(vec4 q){return dot(q.yzw,q.yzw);}\nfloat qil (vec4 q){return sqrt(qsil(q));}\nfloat qarg(vec4 q){return atan(qil(q),q.x);}\nvec4 qconj(vec4 q){q.x=-q.x;return-q;}\nvec3 qmul (vec4 q,vec3 v){return v+2.0*cross(cross(v,q.yzw)+q.x*v,q.yzw);}\nvec4 qmul (vec4 a,vec4 b){return vec4(a.x*b.x-dot(a.yzw,b.yzw),b.yzw*a.x+a.yzw*b.x+cross(a.yzw,b.yzw));}\nvec4 qsqr (vec4 q){return vec4(q.x*q.x-qsil(q),2.0*q.x*q.yzw);}\nvec4 qcube(vec4 q){float l=qsil(q);return q*vec2(3.0*q.x*q.x-l,q.x*q.x-3.0*l).yxxx;}\nvec4 qinv (vec4 q){return qconj(q)/qsl(q);}\nvec4 qdiv (vec4 a,vec4 b){return qmul(a,qinv(b));}\nvec4 qexp (vec4 q){float l=qil(q);vec2 z=sin(l+pi.xy)*exp(q.x);q*=z.x/l;q.x=z.y;return q;}\nvec4 qlog (float x){return vec4(log(abs(x)),step(0.0,x),vec2(0));}\nvec4 qpow (float a,vec4 q){float l=qil(q);vec2 z=sin(l+pi.xy)*pow(a,q.x);q*=z.x/l;q.x=z.y;return q;}\nvec4 qpow (vec4 q,float n){return pow(qsl(q),n*0.5)*sin(qarg(q)*n+pi.xy).yxxx;}\nvec4 qpow (vec4 a,vec4 b){return qmul(qpow(qsl(a),0.5*b),qexp(qarg(a)*b));}\n\n// (1,i,j,k,l,m,n,o)\nmat2x4 oreal(float a){return mat2x4(a,vec3(0),vec4(0));}\nfloat osl (mat2x4 o){return qsl(o[0])+qsl(o[1]);}\nfloat ol  (mat2x4 o){return sqrt(osl(o));}\nfloat osil(mat2x4 o){return qsil(o[0])+qsl(o[1]);}\nfloat oil (mat2x4 o){return sqrt(osil(o));}\nfloat oarg(mat2x4 o){return atan(oil(o),o[0].x);}\nmat2x4 oconj(mat2x4 o){o[0].x=-o[0].x;return-o;}\nmat2x4 omul (mat2x4 a,mat2x4 b){return mat2x4(qmul(a[0],b[0])-qmul(qconj(b[1]),a[1]),qmul(b[1],a[1])+qmul(a[1],qconj(b[0])));}\nmat2x4 osqr (mat2x4 o){return mat2x4(qsqr(o[0])-vec4(qsil(o[1]),vec3(0)),qsqr(o[1])+qmul(o[0],qconj(o[1])));}\n//mat2x4 ocube(mat2x4 o)\nmat2x4 oinv (mat2x4 o){return oconj(o)/osl(o);}\nmat2x4 odiv (mat2x4 a,mat2x4 b){return omul(a,oinv(b));}\nmat2x4 oexp (mat2x4 o){float l=oil(o);vec2 z=sin(l+pi.xy)*exp(o[0].x);o*=z.x/l;o[0].x=z.y;return o;}\nmat2x4 olog (float x){return mat2x4(log(abs(x)),step(0.0,x),vec2(0),vec4(0));}\nmat2x4 opow (float a,mat2x4 o){float l=oil(o);vec2 z=sin(l+pi.xy)*pow(a,o[0].x);o*=z.x/l;o[0].x=z.y;return o;}\nmat2x4 opow (mat2x4 o,float n){vec2 z=pow(osl(o),n*0.5)*sin(oarg(o)*n+pi.xy);return mat2x4(z.yxxx,z.xxxx);}\nmat2x4 opow (mat2x4 a,mat2x4 b){return omul(opow(osl(a),0.5*b),oexp(oarg(a)*b));}\n\n// (1,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w)\nmat4x4 sreal(float a){return mat4x4(a,vec3(0),vec4(0),vec4(0),vec4(0));}\nfloat ssl (mat4x4 s){return qsl(s[0])+qsl(s[1])+qsl(s[2])+qsl(s[3]);}\nfloat sl  (mat4x4 s){return sqrt(ssl(s));}\nfloat ssil(mat4x4 s){return qsil(s[0])+qsl(s[1])+qsl(s[2])+qsl(s[3]);}\nfloat sil (mat4x4 s){return sqrt(ssil(s));}\nfloat sarg(mat4x4 s){return atan(sil(s),s[0].x);}\nmat4x4 sconj(mat4x4 s){s[0].x=-s[0].x;return-s;}\nmat4x4 smul (mat4x4 a,mat4x4 b){mat2x4 c=omul(mat2x4(a[0],a[1]),mat2x4(b[0],b[1]))-omul(oconj(mat2x4(b[2],b[3])),mat2x4(a[2],a[3]));mat2x4 d=omul(mat2x4(b[2],b[3]),mat2x4(a[2],a[3]))+omul(mat2x4(a[2],a[3]),oconj(mat2x4(b[0],b[1])));return mat4x4(c[0],d[1],c[0],d[1]);}\nmat4x4 ssqr (mat4x4 s){mat2x4 a=osqr(mat2x4(s[0],s[1]))-mat2x4(osil(mat2x4(s[2],s[3])),vec3(0),vec4(0));mat2x4 b=osqr(mat2x4(s[2],s[3]))+omul(mat2x4(s[0],s[1]),oconj(mat2x4(s[2],s[3])));return mat4x4(a[0],a[1],b[0],b[1]);}\n//mat4x4 scube(mat4x4 s)\nmat4x4 sinv (mat4x4 s){return sconj(s)/ssl(s);}\nmat4x4 sdiv (mat4x4 a,mat4x4 b){return smul(a,sinv(b));}\nmat4x4 sexp (mat4x4 s){float l=sil(s);vec2 z=sin(l+pi.xy)*exp(s[0].x);s*=z.x/l;s[0].x=z.y;return s;}\nmat4x4 slog (float x){return mat4x4(log(abs(x)),step(0.0,x),vec2(0),vec4(0),vec4(0),vec4(0));}\nmat4x4 spow (float a,mat4x4 s){float l=sil(s);vec2 z=sin(l+pi.xy)*pow(a,s[0].x);s*=z.x/l;s[0].x=z.y;return s;}\nmat4x4 spow (mat4x4 s,float n){vec2 z=pow(ssl(s),n*0.5)*sin(sarg(s)*n+pi.xy);return mat4x4(z.yxxx,z.xxxx,z.xxxx,z.xxxx);}\nmat4x4 spow (mat4x4 a,mat4x4 b){return smul(spow(ssl(a),0.5*b),sexp(sarg(a)*b));}\n\nvec3 hsv2rgb(vec3 c){return (2.0-c.y-sin(c.x-pi.xzw/3.0)*c.y)*c.z*0.5;}\n\nmat4x4 rand1 = mat4x4( //courtesy of Random.org (gaussian)\n     1.1593834080e-1,   1.3775394660e-1,\n     5.3141528240e-1,  -9.2197713630e-1,\n     9.9250190800e-2,  -9.9445872570e-1,\n    -3.1061433050e-1,   1.0464928420e-1,\n    -1.0364798210e+0,   1.2225079270e-1,\n     1.7464582160e-2,  -9.0843988340e-1,\n     6.8511932050e-1,   5.6274976480e-1,\n     4.5539237810e-1,  -4.7145843960e-2\n);\n\nmat4x4 rand2 = mat4x4( //courtesy of Random.org (gaussian)\n    -1.6286628530e-1,   5.4371144610e-2,\n     1.3572019950e-1,   6.4559986970e-2,\n    -6.8500334680e-1,   4.4710113270e-1,\n     9.4101242240e-2,  -3.5224937520e-2,\n    -1.4861947450e-1,   5.2194770830e-1,\n    -9.7530016410e-1,   5.6408309780e-1,\n     1.1661108920e+0,  -2.7485361890e-1,\n     7.8126680870e-1,  -5.0644988960e-1\n);\n\nmat4x4 rand3 = mat4x4( //courtesy of Random.org (gaussian)\n     8.6324789700e-1,   7.3956859870e-1,\n    -5.3717888280e-1,  -3.6349861560e-1,\n     1.1642346260e-1,  -7.0595935620e-2,\n     1.6893859320e-1,  -5.4608794640e-1,\n    -1.0161218400e+0,   3.6012778120e-1,\n    -1.3112304220e-2,  -6.1305132510e-1,\n     5.6552559430e-1,  -1.1049970990e-2,\n     2.0906878620e-1,  -1.1049500920e+0\n);","name":"Common","description":"","type":"common"}]}