{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"channel":2,"type":"cubemap","id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfragColor=vec4(1.0);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n \n    // Output to screen\n    float mid=texture(iChannel0,uv).b;\n    vec2 grad=vec2(mid-texture(iChannel0,uv+vec2(1.0,0.0)/iResolution.x).b,mid-texture(iChannel0,uv+vec2(0.0,1.0)/iResolution.y).b);\n    vec3 norm=vec3(grad,0.2);\n    norm=normalize(norm);\n    fragColor.rgb=vec3(0.0);\n   \n \n    vec3 dat=texture(iChannel2,vec3(uv+norm.xy/(2.0+mid*8.0),1.0)).rgb*((1.0-mid)*0.9+0.1)*0.6;\n    fragColor.rgb+=dat;\n    fragColor.rgb+=mid*0.9;\nfragColor.rgb*=0.8;\nvec3 toV2=normalize(vec3(uv,1.0));\nvec3 toV=normalize(vec3(uv,0.0)-vec3(iMouse.xy/iResolution.xy,1.0));\nfragColor.rgb=mix(fragColor.rgb,texture(iChannel2,reflect(toV2,norm)).rgb,(1.0-mid)*0.5+0.5);\nfragColor.rgb*=0.5*(1.0-mid);\nfragColor.rgb+=0.5*(mid)*vec3(0.3,1.0,0.3);\nfloat li=dot(toV,-norm);\n   fragColor.rgb*=li;\n   float spec=li;\n   spec=pow(spec,50.0+(1.0-mid)*500.0);\n   \n   fragColor.rgb+=spec*0.5*(mid*0.9+0.1);\n    fragColor.a=1.0;\n}","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"XdfGR8","filepath":"/media/previz/buffer03.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":" uint hash( uint x ) {\n    x += ( x << 10u );\n    x ^= ( x >>  6u );\n    x += ( x <<  3u );\n    x ^= ( x >> 11u );\n    x += ( x << 15u );\n    return x;\n}     \nfloat hash( float f ) {\n    const uint mantissaMask = 0x007FFFFFu;\n    const uint one          = 0x3F800000u;\n   \n    uint h = hash( floatBitsToUint( f ) );\n    h &= mantissaMask;\n    h |= one;\n    \n    float  r2 = uintBitsToFloat( h );\n    return r2 - 1.0;\n}\nvec2 hash(float seed, vec2 uv){\n    return vec2(hash(uv.y+hash(1.0+uv.x+seed++)),hash(uv.x+hash(uv.y+seed++)));\n}\nvec4 sampleTex(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod)*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfragColor=vec4(1.0);\nvec2 uv = fragCoord/iResolution.xy;\n\nif(iFrame==0){\n fragColor.rg=vec2(0.0);\n fragColor.b=sign(sin(uv.x*40.0)*sin(uv.y*40.0));\n}else{\nvec4 curDat=sampleTex(fragCoord.xy,0.0);\nvec2 curVel=curDat.rg;\nfragColor=vec4(0.0);\nfor(float i=0.0;i<3.0;i++){\nvec4 dat=sampleTex(fragCoord.xy+curVel*(i+1.0),0.0);\n    fragColor += dat;\n    }\n    fragColor/=3.0;\n}\n\nfragColor.rg+=(hash(iTime,uv).rg-0.5)*3.0;\nif(iFrame<20){\n    if(uv.x<0.2&&uv.y>0.48-0.1&&uv.y<0.52-0.1){\n fragColor.rg-=vec2(1.0,0.0)/0.5;\n }\n if(uv.x>0.8&&uv.y>0.48+0.1&&uv.y<0.52+0.1){\n fragColor.rg-=vec2(-1.0,0.0)/0.5;\n }\n }\n fragColor.b*=1.0005;\n fragColor.b=clamp(fragColor.b,-1.0,1.0);\nfragColor.g+=fragColor.b*0.3;\nfragColor.rg*=(((-fragColor.b)+1.0)/2.0)*0.2+0.8;\nfragColor=(fragColor+1.0)/2.0;\n\n}","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"vec4 sampleTex(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod)*2.0-1.0;\n}\nvec2 sampleVels(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod).xy*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfragColor=vec4(1.0);\nvec2 uv = fragCoord/iResolution.xy;\n\n\nvec4 curDat=sampleTex(fragCoord.xy,0.0);\nvec2 curVel=curDat.rg;\nvec2 p=fragCoord.xy;\nfragColor=curDat;\nfor(float i=0.0;i<4.0;i++){\nfloat mip=i;\nfloat siz=exp(mip);\nfloat samp=1.0*siz;\n\nfragColor.rg+=sampleVels(p,mip) + (dot(sampleVels(p-vec2(samp),mip) + sampleVels(p+vec2(samp),mip), vec2(1.0)) + dot(sampleVels(p+vec2(-samp,samp),mip) + sampleVels(p+vec2(samp,-samp),mip), vec2(1.0,-1.0)) * vec2(1.0,-1.0) + (sampleVels(p+vec2(-samp,0.0),mip) + sampleVels(p+vec2(samp,0.0),mip) - sampleVels(p+vec2(0.0,-samp),mip) - sampleVels(p+vec2(0.0,samp),mip)) * vec2(2.0,-2.0) + sampleVels(p,mip) * -4.0) * 0.125;\n}\nfragColor.rg/=5.0;\nfragColor=(fragColor+1.0)/2.0;\n\n}","name":"Buffer B","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"4sXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"vec4 sampleTex(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod)*2.0-1.0;\n}\nvec2 sampleVels(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod).xy*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfragColor=vec4(1.0);\nvec2 uv = fragCoord/iResolution.xy;\n\n\nvec4 curDat=sampleTex(fragCoord.xy,0.0);\nvec2 curVel=curDat.rg;\nvec2 p=fragCoord.xy;\nfragColor=curDat;\nfor(float i=0.0;i<4.0;i++){\nfloat mip=i;\nfloat siz=exp(mip);\nfloat samp=1.0*siz;\n\nfragColor.rg+=sampleVels(p,mip) + (dot(sampleVels(p-vec2(samp),mip) + sampleVels(p+vec2(samp),mip), vec2(1.0)) + dot(sampleVels(p+vec2(-samp,samp),mip) + sampleVels(p+vec2(samp,-samp),mip), vec2(1.0,-1.0)) * vec2(1.0,-1.0) + (sampleVels(p+vec2(-samp,0.0),mip) + sampleVels(p+vec2(samp,0.0),mip) - sampleVels(p+vec2(0.0,-samp),mip) - sampleVels(p+vec2(0.0,samp),mip)) * vec2(2.0,-2.0) + sampleVels(p,mip) * -4.0) * 0.125;\n}\nfragColor.rg/=5.0;\nfragColor=(fragColor+1.0)/2.0;\n\n}","name":"Buffer C","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XdfGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"vec4 sampleTex(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod)*2.0-1.0;\n}\nvec2 sampleVels(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod).xy*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfragColor=vec4(1.0);\nvec2 uv = fragCoord/iResolution.xy;\n\n\nvec4 curDat=sampleTex(fragCoord.xy,0.0);\nvec2 curVel=curDat.rg;\nvec2 p=fragCoord.xy;\nfragColor=curDat;\nfor(float i=0.0;i<4.0;i++){\nfloat mip=i;\nfloat siz=exp(mip);\nfloat samp=1.0*siz;\n\nfragColor.rg+=sampleVels(p,mip) + (dot(sampleVels(p-vec2(samp),mip) + sampleVels(p+vec2(samp),mip), vec2(1.0)) + dot(sampleVels(p+vec2(-samp,samp),mip) + sampleVels(p+vec2(samp,-samp),mip), vec2(1.0,-1.0)) * vec2(1.0,-1.0) + (sampleVels(p+vec2(-samp,0.0),mip) + sampleVels(p+vec2(samp,0.0),mip) - sampleVels(p+vec2(0.0,-samp),mip) - sampleVels(p+vec2(0.0,samp),mip)) * vec2(2.0,-2.0) + sampleVels(p,mip) * -4.0) * 0.125;\n}\nfragColor.rg/=5.0;\nfragColor=(fragColor+1.0)/2.0;\n\n}","name":"Buffer D","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"McKfzV","date":"1734280442","viewed":173,"name":"sickly goo","username":"BearKirb","description":"sfasfdasdfas","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["afasdf"],"hasliked":0,"parentid":"","parentname":""}}