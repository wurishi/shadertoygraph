{"ver":"0.1","info":{"id":"ss3czH","date":"1653026326","viewed":78,"name":"Basic Filter","username":"dukang","description":"Basic Filter","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","filter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float u_brightness = 0.0;\nfloat u_contrast = 1.0;\nfloat u_saturation = 1.0;\nfloat u_hue = 0.0;\nvec3 contrastTarget = vec3(0.5, 0.5, 0.5);\nvec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float offset = 0.5 + 0.5*cos(iTime);\n    \n    // 修改这里进行演示\n    // u_brightness = offset;\n    // u_contrast = offset+0.5;\n    // u_saturation = offset + 0.5;\n    u_hue = offset;\n    vec3 baseColor = texture(iChannel0, uv).xyz;\n\n    // 亮度\n    baseColor.rgb += u_brightness;\n    \n    // 对比度\n    baseColor.rgb = mix(contrastTarget, baseColor.rgb, u_contrast);\n\n    // 饱和度\n    // 灰度常量, RGB值分别乘以该值, 结果是灰色\n    // 灰色值, dot()是点乘函数, 即w与RGB分量相乘然和求和, 得到灰度值\n    float saturationLuminance = dot(baseColor.rgb, w);\n    vec3 saturationTarget = vec3(saturationLuminance, saturationLuminance, saturationLuminance);\n    baseColor.rgb = mix(saturationTarget, baseColor.rgb, u_saturation);\n\n    // 色相表示颜色的类型 值域[0,360]\n    /* hue adjustment, wolfram alpha: RotationTransform[angle, {1, 1, 1}][{x, y, z}] */\n    float angle = u_hue * 3.14159265;\n    float s = sin(angle), c = cos(angle);\n    vec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\n    float len = length(baseColor.rgb);\n    baseColor.rgb = vec3(\n        dot(baseColor.rgb, weights.xyz),\n        dot(baseColor.rgb, weights.zxy),\n        dot(baseColor.rgb, weights.yzx)\n    );\n\n    \n    // Output to screen\n    fragColor = vec4(baseColor,1.0);\n}","name":"Image","description":"","type":"image"}]}