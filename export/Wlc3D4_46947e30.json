{"ver":"0.1","info":{"id":"Wlc3D4","date":"1576269496","viewed":437,"name":"Kawase Blur animated","username":"alex47","description":"Based on https://www.shadertoy.com/view/MdyBzG","likes":8,"published":1,"flags":32,"usePreview":1,"tags":["blur","animated","kawase"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    float i = 3.5;\n    i = i * sin(iTime + vec3(0, 0, 0)).x; // make this animated\n    \n    vec3 col = texture( iChannel0, uv + vec2( i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( i, -i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, -i ) / res ).rgb;\n    col /= 4.0;\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    float i = 0.5;\n    i = i * sin(iTime + vec3(0, 0, 0)).x; // make this animated\n    \n    vec3 col = texture( iChannel0, uv + vec2( i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( i, -i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, -i ) / res ).rgb;\n    col /= 4.0;\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    float i = 1.5;\n    i = i * sin(iTime + vec3(0, 0, 0)).x; // make this animated\n    \n    vec3 col = texture( iChannel0, uv + vec2( i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( i, -i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, -i ) / res ).rgb;\n    col /= 4.0;\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    float i = 2.5;\n    i = i * sin(iTime + vec3(0, 0, 0)).x; // make this animated\n    \n    vec3 col = texture( iChannel0, uv + vec2( i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( i, -i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, -i ) / res ).rgb;\n    col /= 4.0;\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Buf C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 res = iChannelResolution[0].xy;\n\t\n    float i = 2.5;\n    i = i * sin(iTime + vec3(0, 0, 0)).x; // make this animated\n    \n    vec3 col = texture( iChannel0, uv + vec2( i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( i, -i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, i ) / res ).rgb;\n    col += texture( iChannel0, uv + vec2( -i, -i ) / res ).rgb;\n    col /= 4.0;\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Buf D","description":"","type":"buffer"}]}