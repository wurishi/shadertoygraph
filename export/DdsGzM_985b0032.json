{"ver":"0.1","info":{"id":"DdsGzM","date":"1665857992","viewed":159,"name":"Smooth Radial donut progressbar","username":"lortonx","description":"Radial Progress bar. Used for \"Time to merge\" feature\nOriginal: https://www.shadertoy.com/view/NtcyWn\ni make my own agario clone using shaders\nMy project deployed: https://deltav4.gitlab.io/ , (canvas renderer default)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["radial","progressbar","donut"],"hasliked":0,"parentid":"NtcyWn","parentname":"Smooth Radial progress bar"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define THICKNESS 0.05\n#define RADIUS 0.4\n#define PI2 6.28318530718\n#define AA (0.8 / iResolution.y)\n\nfloat DrawCircle(vec2 uv, vec2 p, float r)\n{\n    uv += p;\n    return smoothstep(r+AA, r-AA, length(uv));\n}\n\nvec2 RotationUV(vec2 uv, float d)\n{\n    float s = sin(d);\n    float c = cos(d);\n    mat2 rotMatrix = mat2(c, -s, s, c);\n    return uv * rotMatrix;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 background = vec4(vec3(0.0, 0.0, 160.0)/255.0, 1.0);\n    // Thanks to FabriceNeyret2 ‚ù§\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float circle = smoothstep(RADIUS+AA, RADIUS-AA, abs(length(uv) - RADIUS) + RADIUS - THICKNESS);\n    float radial = (atan(uv.x, uv.y) / 3.14159265359 * 0.5);\n    float time = iTime / 5.0;\n    radial += time;\n    circle *= step(fract(radial), fract(time));\n    \n    circle = max(circle, DrawCircle(uv, vec2(0,-RADIUS), THICKNESS));\n    circle = max(circle, DrawCircle(RotationUV(vec2(-uv.x, uv.y), PI2 * time), vec2(0,-RADIUS), THICKNESS));\n\n    fragColor = mix(background, vec4(1.0,1.0,1.0,1.0), circle);\n}","name":"Image","description":"","type":"image"}]}