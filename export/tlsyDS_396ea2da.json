{"ver":"0.1","info":{"id":"tlsyDS","date":"1596538673","viewed":43,"name":"Example Strawberry","username":"Zorobay","description":"A simple shader to demonstrate the effects of function composition","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","example","pattern","sinusoidal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 f_mix(vec3 color1, vec3 color2, float a){return color1 * (1. - a) + color2 * a;}\n\nfloat g_pattern(float x, float y, float z, float a){return sin(x*a) * sin(y*a) * sin(z*a);}\n\nvec3 r_render(float x, float y, float z, float theta_0) \n{\n    vec3 cr = vec3(1.0,0.,0.);  // The color red\n    vec3 cg = vec3(0.0, 0.3, 0.0);  // A dark green color\n\treturn f_mix(cr, cg, g_pattern(x,y,z,theta_0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Give our only theta parameter some arbitrary value to be used as the sinus scale\n    float theta_0 = 20.;\n\n\n    // Output to screen\n    vec3 col = r_render(uv.x, uv.y, 1., theta_0);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}