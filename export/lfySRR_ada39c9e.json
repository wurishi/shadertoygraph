{"ver":"0.1","info":{"id":"lfySRR","date":"1714681601","viewed":66,"name":"hypnowheel","username":"ShadedSky","description":"rgb phyllotaxis animation","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["hsv2rgb","radians"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Converts degrees to radians for angle calculations\nfloat degreesToRadians(float degrees) {\n    const float PI = 3.14159265358979323846;\n    return degrees * (PI / 180.0);\n}\n\n// Helper function to convert HSV to RGB\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Basic parameters\n    float scale = 0.2*sin(iTime*0.1);\n    float initialPointSize = 0.01;\n    float zoomSpeed = 100.0; // Restoring original zoom speed for density\n\n    // Normalize coordinates and apply time-based zoom\n    vec2 uv = (fragCoord / iResolution.xy) - 0.5;\n    uv *= iTime * zoomSpeed;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Initialize color vector\n    vec3 color = vec3(0.0);\n\n    // Create the radial pattern with a dynamic point size and sparse color change\n    float maxIterations = max(iTime * 10.0 * zoomSpeed, 8000.0); \n    for (float i = 0.0; i < maxIterations; i++) {\n        float angle = degreesToRadians(137.5) * i;\n        float radius = i * scale;\n        vec2 point = vec2(radius * cos(angle), radius * sin(angle));\n        float pointSize = initialPointSize + i * 0.001;\n\n        // Check if the current point is within the point size radius\n        if (length(uv - point) < pointSize) {\n            float hue = mod(iTime + angle / (2.0 * 3.14159265358979323846 * 10.0), 1.0); // Slower hue change\n            color = hsv2rgb(vec3(hue, 1.0, 1.0)); // Convert hue to RGB\n        }\n    }\n\n    // Output color with full opacity\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}