{"ver":"0.1","info":{"id":"MllSDr","date":"1436038687","viewed":162,"name":"spherical moire","username":"kynd","description":"moire","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["moire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float pi = 3.14159265359;\n\nvec4 qt(vec3 axis, float angle)\n{\n\treturn vec4(axis * sin(angle / 2.0), cos(angle / 2.0));\n}\n\nvec3 qrot(vec4 q, vec3 p)\n{\n\treturn p + 2.0 * cross(cross(p, q.xyz)-q.w*p, q.xyz);\n}\n\nvec3 render(vec3 a, vec3 b)\n{\n    float l = 0.0;\n    const float n = 24.0;\n    \n    for (float i = 0.0; i < n; i ++) {\n        float t = 0.1 *iTime;\n\t\tvec4 q = qt(normalize(vec3(1.0,0.0,1.0)), i / n * pi);\n        vec3 p = a + qrot(q, b);\n        float n0 = sin(p.x * (50.0 + sin(t * 1.12) * 30.0)) * 2.0;\n        float n1 = cos(p.y * (50.0 + sin(t * 1.23) * 30.0)) * 2.0;\n        float n2 = sin(p.z * (50.0 + sin(t * 1.34) * 30.0)) * 2.0;\n        l += (n0 * n1 * n2);\n    }\n    l /= n;\n\treturn vec3(min(1.0, l * 10.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (fragCoord.xy*2.0-iResolution.xy)/iResolution.y;\n\tvec4 q = qt(normalize(vec3(0.0,1.0,1.0)), 0.3 * iTime);\n\tvec3 a = qrot(q, normalize(vec3(p, -2.0)));\n\tvec3 b = qrot(q, vec3(0.0, 0.0, 0.1));\n    fragColor=vec4(render(a, b), 1.0);\n}\n","name":"","description":"","type":"image"}]}