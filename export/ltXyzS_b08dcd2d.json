{"ver":"0.1","info":{"id":"ltXyzS","date":"1505228208","viewed":36035,"name":"Hot and Cold Crustacean","username":"TheGrego","description":"Varied rotations depending on distance from a point. It goes from hot to cold from within the crustacean's core.","likes":23,"published":3,"flags":0,"usePreview":0,"tags":["2d","sin","rotate","hot","cold","crustacean","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n#define rot(a)  mat2( cos(a), sin(a),  -sin(a), cos(a) )\n\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    // set my uv\n    vec2 uv = iResolution.xy;\n    uv = (u+u - vec2(uv.x, 0) ) / uv.y;\n    \n    float T = iTime;\n    \n    // rotate the uv\n    float l = length(uv);\n    uv *= rot( l * 0.5);\n    uv *= uv/l * 4.0;\t\t// detail resolution\n        \n    // set some colors\n    vec3 color;\n    for( int i = 0; i < 3; i++){\n        float v = length( mod(uv, 0.5) - uv.x * 0.25 );\n        uv.y *= ((sin( v * 5.0) ) * 0.5) * ((sin(T - length(uv) * 0.5 ) + M_PI) * 0.4);\n        color[i] = cos(T + pow(length(uv), float(i) * 0.25));\n    }\n\n    vec3 color2 = vec3(pow(uv.y, 1.0) * 0.5);\n    fragColor = vec4( mix(color, color2, length(uv) * 0.5), 1.0);\n}","name":"Image","description":"","type":"image"}]}