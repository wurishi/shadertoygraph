{"ver":"0.1","info":{"id":"4clGR8","date":"1702736076","viewed":60,"name":"Fork [SIG2014]  IAMDEAD 380","username":"IAMDEAD","description":"A circle of color with shape - first shadertoy, this was fun!","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["2d","colors","noob"],"hasliked":0,"parentid":"XdlSDs","parentname":"[SIG2014] - Total Noob"},"renderpass":[{"inputs":[],"outputs":[],"code":"float segments = 0.5;     // на будущее\nfloat radius = 0.3;       // скейл радиуса\nfloat brightnes = 1.0;    // по сути яркость (если можно таковой назвать)\nfloat tail_size = 0.85;   // работает реверсивно, чем больше значение - тем меньше хвост\nfloat snake_color = 2.0;  // 1.0 = red, 2.0 = green, 3.0 = blue; - если harColour по нулям, работать будет как я запланировал \n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec4 screen_res = vec4(iResolution.xy, 1.0 / iResolution.xy);\n    vec2 texcoord = fragCoord * screen_res.zw;\n\n\n\tvec2 p = texcoord;\n    p -= 0.5;\n    p.x *= screen_res.x * screen_res.w;\n\n\n    float tau = 3.1415926535 * 2.0; // Магическая тема\n    float a = atan(p.x, -p.y);\n    float r = length(p) * 0.65;\n    vec2 uv = vec2(a / tau, r);\n    uv.x = 1.0 - uv.x;\n\t\n\t//get the color\n\tfloat xCol = (uv.x - (iTime / 5.0));\n\txCol = mod(xCol, 1.0); // Тут если указать > 1.0 хвост будет с задержкой, если < то хвост таки наоборот будет торопится\n\tvec3 horColour = vec3(0.1, 0.1, 0.1);\n\t\n\tif (snake_color <= 1.0)\n\t\thorColour.r += xCol - tail_size;\n\telse if (snake_color <= 2.0)\n\t\thorColour.g += xCol - tail_size;\n\telse\n\t\thorColour.b += xCol - tail_size;\n\n\n\t// draw color beam\n\tuv = (2.0 * uv) - radius; // Тут если домножить на xCol получится спираль)\n\tfloat beamWidth = ((tail_size * 4.0 + 0.9) * cos(uv.x * clamp(floor(5.0 + 10.0 * cos(4.0)), 0.0, 10.0))) * abs(1.0 / (90.0 / brightnes * uv.y));\n\tfragColor = vec4((beamWidth * horColour), 1.0);\n}","name":"Image","description":"","type":"image"}]}