{"ver":"0.1","info":{"id":"4c2Xzm","date":"1706323779","viewed":68,"name":"Simple Noise Algorithm","username":"AgateDragon","description":"Texture with simple animated noise applied.\nhttps://agatedragon.blog/2024/01/27/shadertoy-simple-noise/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","aspectratio","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://thebookofshaders.com/11/\nfloat Random(in vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalised pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Aspect ratio\n    vec2 st = uv;\n    vec2 aspect = iResolution.xy / min(iResolution.x, iResolution.y);\n    st *= aspect;\n    \n    // Noise generation\n    float r = Random(st + iTime * 0.000001);\n    \n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n    fragColor.rgb = mix(fragColor.rgb, vec3(r), 0.24);\n}","name":"Image","description":"","type":"image"}]}