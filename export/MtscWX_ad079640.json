{"ver":"0.1","info":{"id":"MtscWX","date":"1506746418","viewed":247,"name":"Vasarely - Museum #4","username":"scarletshark","description":"Reproduction of Victor Vasarely's Museum #4 in GLSL (https://goo.gl/P7ozZa). Goal is to faithfully recreate the warping of the circles with few lines of code. Result is close, but does not use the simple geometric illusion for which Vasarely is famous.\n","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","vasarely","fineart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14;\nconst float crispLineWidth = 0.0017;\nconst float scale = 20.5;\nconst int colorCount = 2;\nconst float colorStep = 1. / float(colorCount);\nconst vec4[] colors = vec4[] \n(  \n    vec4(0.),\n    vec4(0.12, 0.29, 0.64, 1.),\n    vec4(0.55, 0.69, 0.87, 1.),\n    vec4(0.58, 0.12, 0.24, 1.),\n    vec4(0.87, 0.58, 0.1, 1.)\n);\n\n#define drawCrispCircle(pos, radius, coord) smoothstep(radius + crispLineWidth * scale, radius, length(coord - (pos)))\n\nfloat circleCurve(float t, float k)\n{\n    if (abs(t) > 1.) return 0.;\n    return pow(cos(pi * t / 2.), k); \n}\n\nvoid warp(inout vec2 space)\n{\n \tvec2 vec = space - vec2(0., sign(space.y) * 10.);\n    float mag = length(vec);\n    \n    if (mag < 9.5)\n    {\n        space -= vec / mag * pi * sin(cos(asin(circleCurve(mag / 10., 0.22))) * pi) * smoothstep(9.5, 8.5, mag);\n    }   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 space = (fragCoord - iResolution.xy / 2.) / iResolution.y * 2.0 * scale;\n    warp(space);\n    \n    \n    \n    vec4 color1, color2, circleColor;\n    color1 = circleColor = colors [0];\n    float ramp = 1.0 - abs(space.y / 10. - sign(space.y));\n    ramp = floor(ramp * 10. + 0.5) / 10.;\n\n    int offset = 0;\n    if(space.y > 0.)\n        offset = colorCount;\n    \n    // HACK: when not in fullscreen, there's a sharp line at y=0\n    if(space.y != 0.)\n        for(int i = 1; i <= colorCount; i++)\n        {\n            float i_f = float(i);\n            float currStep = colorStep * i_f;\n            float prevStep = colorStep * (i_f - 1.0);\n            if (ramp < prevStep || ramp > currStep) continue;\n            if (i != 1) color1 = colors[i + offset - 1];\n            color2 = colors[i + offset];\n            circleColor = mix(color1, color2, (ramp - prevStep) / colorStep);\n        } \n    \n   \tfragColor = mix(vec4(0.27, 0.3, 0.59, 1.), vec4(0), step(1.0, abs(space.x) / 15.));  \n    \n    if (abs(space.x) < 11. && abs(space.y) < 20.5)\n        fragColor = mix(fragColor, circleColor, drawCrispCircle(vec2(0.5), 0.5 - crispLineWidth * scale* 2., fract(vec2(space.x, space.y + 0.5))));\n}","name":"Image","description":"","type":"image"}]}