{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Created by S.Guillitte\n\nconst mat2 m2 = mat2(.8,.6,-.6,.8);\n\nfloat stars(in vec2 p){\n    vec2 z = p;\n    p=floor(p*5.)/5.+0.1;\n\tfloat r = 80.*dot(z-p,z-p);\n    z=p;\n\tfor( int i=0; i< 3; i++ ) \n\t{\t\t\n        z=m2*z*1.1+1.3;\n        z+=15.*sin(z+3.*sin(p.yx));        \n\t}        \t\n\treturn clamp(2.5-length(z),0.,1.)*exp(-r);\n}\n\nfloat noise(in vec2 p){\n\t\n    float res=0.;\n    float f=1.;\n\tfor( int i=0; i< 2; i++ ) \n\t{\t\t\n        p=m2*p*f+4.3;     \n        f*=1.1;\n        res+=(sin(p+sin(p.yx))).x;\n\t}        \t\n\treturn (res/3.);\n}\n\nfloat fbm(in vec2 p){\n\t\n    float res=0.;\n    float f=1.;\n\tfor( int i=0; i< 5; i++ ) \n\t{\n        f*=2.;\n        res+=noise(f*p)/f;\n\t}        \t\n\treturn res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = 15.*(-iResolution.xy+2.0*fragCoord.xy)/iResolution.y;\n\tfloat f = stars(p);\n\tp+=.8*iTime;\t\n\tvec3 col = vec3(f*f*f,f*f*.8,f*.8);\n    f= clamp(fbm(p*.1),0.,1.);\n    if(f>.1)col =vec3(f*f*f,f*f,f);\n    else col = mix(col,vec3(f*f*f,f*f,f),10.*f);\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mlf3WX","date":"1425595382","viewed":1077,"name":"Sky at night","username":"guil","description":"Very cheap clouds and stars","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["2d","cloud","stars"],"hasliked":0,"parentid":"","parentname":""}}