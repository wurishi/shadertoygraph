{"ver":"0.1","info":{"id":"NsByWV","date":"1644067788","viewed":293,"name":"Quadicube","username":"panna_pudi","description":"code is awkward","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["quadtree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = acos(-1.);\nconst float rec = 5.;\n\nmat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat sd_square(vec2 p, vec2 h) {\n    p = abs(p) - h;\n    return length(max(p, 0.)) + min(0., max(p.x, p.y));\n}\n\nfloat shape(vec2 p) {\n    float t = iTime * 2. * PI / rec;\n    p.x += 0.1;\n    p +=  0.16 * vec2(cos(t), sin(t));\n    p *= rot(t);\n\n    float d = sd_square(p, vec2(0.35));\n    d = abs(d);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    vec2 m  = (2.0 * iMouse.xy    - iResolution.xy) / iResolution.y;\n    \n    const int N = 15;\n    vec3 col = vec3(1.);\n    float scale = .2;\n    float borders = 1e9;\n    \n    for (int i = 1; i < N; ++i) {\n        scale *= 2.;\n        \n        vec2 uid = floor(uv * scale) / scale;\n        float csize = 1. / scale;\n        vec2 local_uv = 2. * (uv - uid) * scale - 1.;\n        \n        vec2 q = abs(local_uv) - 0.5;\n        borders = min(borders, abs(max(q.x, q.y) - 0.5) / (1.*scale));\n\n        vec2 d = m - uid;\n        if ((min(d.x,d.y) >0. &&  max(d.x,d.y) < csize) ||\n            shape(uid) < 1.4 * csize) {\n            \n            // if (i == N - 1) {\n            //     col = vec3(0.);\n            // }\n        } else {\n            break;\n        }\n    }  \n    \n    float dw = fwidth(uv).x * 3.;\n    col *= smoothstep(0.,dw, borders);\n    \n    // too much code for a box -3-\n    vec2 b = vec2(1.252, 0.944);\n    col = mix(col, vec3(1.), step(.0, sd_square(uv, b)));\n    float d = sd_square(uv, b);\n    d = 0.01 - abs(d);\n    if ( abs(d) < .01 ) col = vec3(0.); \n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}