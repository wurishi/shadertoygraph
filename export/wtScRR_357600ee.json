{"ver":"0.1","info":{"id":"wtScRR","date":"1593544401","viewed":110,"name":"Yellow Blue Mandelbrot Zoom","username":"milesWaugh","description":"Does anyone know how to create double-precision floats?","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","mandelbrot","zoom","firstshader","mandelbrotset","mandelbrotzoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x-=0.5;\n    uv.y-=0.5;\n    uv.x*=iResolution.x/iResolution.y;\n    float scale = pow(2.0,iTime-(floor(iTime/30.0)*30.0))/5.0;\n    uv.x/=scale;\n    uv.y/=scale;\n\tuv.x+=-0.748376594185829;\n    uv.y+=-0.09461894273757945;\n    float a = uv.x;\n    float b = uv.y;\n    float a2 = a*a; \n    float b2 = b*b;\n    float as = a;\n    int i=0;\n    while(i<1024){\n        if(a2+b2>4.0){\n            break;\n        }\n        a = a2-b2+uv.x;\n        b = 2.0*as*b+uv.y;\n        as = a;\n        a2 = a*a;\n        b2 = b*b;\n        i++;\n    }\n    float incol = sqrt(float(i)-(log2(log2(a2+b2)))+4.0)*2.0;\n    float r = cos(incol)+1.0;\n    float g = cos(incol-0.4)+1.0;\n    b = cos(incol+3.1415926535)+1.0;\n    vec3 col = vec3(r/2.0, g/2.0, (b/4.0)*(b/4.0));\n    if(i>=1024){col = vec3(0);}\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}