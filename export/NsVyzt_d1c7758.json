{"ver":"0.1","info":{"id":"NsVyzt","date":"1655391967","viewed":76,"name":"Window functions","username":"Astherix","description":"8 window functions with graph\n\nChoose a function with your mouse's X position!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["function","functions","window"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\n// Rectangular window\nfloat boxcar(float n, float N) {\n    return 0.999; // 1.0\n}\n\n// Beta-spline/Polynomial windows\nfloat triangle(float n, float N) {\n    float N2 = N / 2.0;\n\n    return 1.0 - abs((n - N2) / N2);\n}\n\nfloat welch(float n, float N) {\n    float N2 = N / 2.0;\n    float c = (n - N2) / N2;\n\n    return 1.0 - (c * c);\n}\n\nfloat sine(float n, float N) {\n    return sin((PI * n) / N);\n}\n\n// Cosine-sum windows\n// General case for Hann and Hamming\nfloat window(float a0, float n, float N) {\n    return a0 - (1.0 - a0) * cos((2.0 * PI * n) / N);\n}\n\nfloat hann(float n, float N) {\n    return window(0.5, n, N);\n}\n\nfloat hamming(float n, float N) {\n    return window(25.0 / 46.0, n, N);\n}\n\nfloat blackman(float n, float N) {\n    float a0 = (1.0 - 0.16) / 2.0;\n    float a1 = 1.0 / 2.0;\n    float a2 = 0.16 / 2.0;\n    \n    return a0 - (a1 * cos((2.0 * PI * n) / N)) + (a2 * cos((4.0 * PI * n) / N));\n}\n\nfloat exact_blackman(float n, float N) {\n    float a0 = 7938.0 / 18608.0;\n    float a1 = 9240.0 / 18608.0;\n    float a2 = 1430.0 / 18608.0;\n    \n    return a0 - (a1 * cos((2.0 * PI * n) / N)) + (a2 * cos((4.0 * PI * n) / N));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float d = iResolution.x / 8.0;\n    int function = int(floor(iMouse.x / d));\n    \n    float w = 0.0;\n    float n = fragCoord.x / iResolution.x;\n    \n    // Choose a function with your mouse's X position\n    if (function == 0) { w = hann(n, 1.0); } \n    if (function == 1) { w = triangle(n, 1.0); }\n    if (function == 2) { w = welch(n, 1.0); }\n    if (function == 3) { w = sine(n, 1.0); }\n    if (function == 4) { w = boxcar(n, 1.0); }\n    if (function == 5) { w = hamming(n, 1.0); }\n    if (function == 6) { w = blackman(n, 1.0); }\n    if (function == 7) { w = exact_blackman(n, 1.0); }\n    \n    // Handle edge\n    if (function == 8) { w = exact_blackman(n, 1.0); }\n    \n    w *= iResolution.y;\n    \n    if (int(w) == int(fragCoord.y)) {\n        fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n    } else {\n        fragColor = vec4(0.15);\n    }\n}","name":"Image","description":"","type":"image"}]}