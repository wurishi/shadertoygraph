{"ver":"0.1","info":{"id":"cdScDG","date":"1688081374","viewed":63,"name":"Changing Chaos game","username":"SnackEater","description":"i wanted to see what it looked like if the shape used in the chaos game, had a dynamically changing number of sides ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","chaos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DIVISOR 2.5\n#define PointSize 0.002\n#define pointCount mod(iTime/2.,8.)\n#define PI 3.141592653589\nvec2 DividedVec(vec2 a,vec2 b, float divisor){\n    vec2 c = vec2((a.x + b.x)/divisor,(a.y + b.y)/divisor);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - .5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 2.;\n    vec3 col;\n    \n    // determine the starting point\n    vec2 SP = vec2(0.,0);\n    vec2 c;\n    \n    //begin chaos game loop\n    for(float i = 0.;i<5000.;i++){\n        \n        //create random points\n            vec2 RandomPoints;\n        \n            float theta = 2. * sin(i * sin(i * sin(i * sin(i * sin(i * sin(i * sin(i)))))));\n            theta *= i;\n            RandomPoints = vec2(cos(theta),sin(theta));\n        \n        //create determined points\n            vec2 points;\n            \n            \n            for(float i = 0.; i<pointCount; i++){\n            float theta = (2. * PI)/pointCount;\n            theta *= i;\n            points = vec2(cos(theta),sin(theta));\n            if(length(uv - points)<0.01){\n            col.b = 1.;\n            }\n        //pick a determined point base off of how far it is from a random point\n             if(length(points - RandomPoints) <.5){\n                c = DividedVec(SP,points,DIVISOR);\n            }\n        }\n        \n        //visualize starting point and c\n        \n        if(length(uv - c)<PointSize ||length(uv - SP) < PointSize) {\n            col.g = 1.;\n        }\n        SP = c;\n    \n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}