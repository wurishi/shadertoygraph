{"ver":"0.1","info":{"id":"4dVBWh","date":"1528620314","viewed":182,"name":"Trip with INREV","username":"Flopine","description":"One of the result of a live coding session did with the lab where I do my thesis : INREV. Thank you guys for the good vibe <3","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","postprocess","livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Code by Flopine\n//Thanks to wsmind, leon, lsdlive, lamogui, XT95 and Coyhot for teaching me! Cookie Collective rulz <3\n\n#define time iTime\n#define ITER 64.\n#define PI 3.141592\n\nvec2 moda(vec2 p, float per)\n{\n    float a = atan(p.y, p.x);\n\tfloat l = length(p);\n\ta = mod(a-per/2.,per)-per/2.;\n\treturn vec2(cos(a),sin(a))*l;\n}\n\nfloat noise(vec2 p)\n{\n    return texture(iChannel0, p*0.6+time*0.2).r;\n}\n\n// iq's palette https://iquilezles.org/articles/palettes\nvec3 palette (float t, vec3 a, vec3 b, vec3 c, vec3 d)\n{return a+b*cos(2.*PI*(c*t+d));}\n\nfloat odile (vec3 p, float d)\n{return dot(p,normalize(sign(p)))-d;}\n\nmat2 rot(float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nfloat cylY(vec3 p, float r, float h)\n{return max(length(p.xz)-r, abs(p.y)-h);}\n\nfloat sablier (vec3 p)\n{\n\tvec3 pp = p;\n\tfloat h = 1.5;\n\tp.y = abs(p.y);\n\tp.y -= h;\n\tfloat c1 = cylY(p, 0.9, 0.1);\n\n    p=pp;\n    p.xz *= rot(p.y);\n    p.xz *= rot(time);\n    p.xz = moda(p.xz, 2.*PI/5.);\n    p.x -= .7;\n    float c2 = cylY(p, 0.1, h);\n\n    p = pp;\n    p.xz *= rot(time);\n    p.xy *= rot(time);\n    float o = odile(p, .3);\n\n    return min(o,min(c1,c2));\n}\n\nfloat prim1(vec3 p)\n{\n    float per = 3.;\n    p.xy *= rot(time);\n    p.xy *= rot(p.z*0.1);\n    p.z = mod(p.z-per/2., per)-per/2.;\n    p.xy = moda(p.xy, 2.*PI/5.);\n    p.x -= 4.;\n    return sablier(p);\n}\n\nfloat g = 0.;\n\nfloat SDF(vec3 p)\n{\n    float pri = prim1(p);\n    p *= exp(-fract(time)*0.2);\n    p.xz *= rot(-time);\n    p.xy *= rot(-time);\n\n    float o = odile(p,1.);\n    float d = min(pri, o);\n    // glow from lsdlive, originally from balkhan : https://www.shadertoy.com/view/4t2yW1\n    g+=0.1/(0.1+d*d);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(fragCoord/iResolution.xy)-1.;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv += noise(uv)*0.2;\n    \n  \tvec3 ro = vec3(0.001,0.001,-10.); vec3 p = ro;\n\tvec3 dir = normalize(vec3(uv*0.5,1.));\n\n    float shad = 0.;\n\n    for (float i = 0.; i < ITER; i++)\n    {\n        float d = SDF(p);\n        if (d<0.001)\n        {\n            shad = i/ITER;\n            break;\n        }\n        p+=d*dir*0.5;\n    }\n\n    float t = length(ro-p);\n\n    vec3 pal = palette((uv.x + uv.y * 0.5),\n    vec3(0.1,0.5,0.1),\n    vec3(0.5),\n    vec3(0.5),\n    vec3(0.,0.5,0.3));\n\n    vec3 c = vec3(shad);\n    c = mix(c,pal, 1.-exp(-0.001*t*t));\n    c+= g*(0.04-(exp(-fract(time*0.2)*10.))*(length(uv)*2.));\n\n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}