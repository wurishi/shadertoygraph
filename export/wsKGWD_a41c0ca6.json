{"ver":"0.1","info":{"id":"wsKGWD","date":"1570218446","viewed":594,"name":"forks on stripes","username":"FabriceNeyret2","description":"Displace the forking nodes with mouse.   press A to show modulation (i.e. phasor)\n\n( click bottom-left to go back to demo-mode )","likes":15,"published":3,"flags":48,"usePreview":0,"tags":["complex","stripes","gabor","short","phasor","fingerprint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/3dK3WW\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, \n         U = u / R.y, \n       //Z = CS( 1e2*U.x ), \n         Z = CS( 1e2*length(U) ), \n        Z0,V; \n    \n    float a = 0.;\n    for(int i=0; i<100; i++) {\n        V  = U - T(i).xy;   \n        a += logZ(V).y * T(i).z;   // adding fork\n      //a += T(i+100).z*3.14*exp(-.5*dot(V,V)/.001)*sin(iTime); // local rotation\n        // Z0 = CS( logZ(V).y * T(i).z ); \n        // Z  = mulZ( Z, Z0);\n   }\n     Z  = mulZ( Z, CS(a));\n    if keyToggle(65) {               // without strip modulation\n       Z = CS(a);  \n       O = vec4( .5+.5 * Z, 0, 1);           // complex to colors\n     //O = sqrt(O.xxxx);  \n    } \n    else {                           // with strip modulation\n        O = vec4( .5+.5 * Z, 0, 1);             // complex to colors\n        O = sqrt(O.xxxx);                       // BW images in sRGB\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// manage nodes location: init, anim, mouse interaction\n\n#define hash3(x)  fract( 1e4* sin( 1e4* (x) * vec3(1,.111,.234) ))\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U -= .5;\n    if (U.y > 0.) return;\n    \n    vec2 R = iResolution.xy,\n         M = iMouse.xy/R.y;\n    \n    if (iFrame==0) {\n        O.xyz = hash3(U.x);                                     // random node pos + rot sign\n        O.xy *= R/R.y; O.z = sign(O.z-.5);\n        return;\n    }\n    \n    O = T(U.x);\n    \n    // for better mouse control, cf https://www.shadertoy.com/view/tsG3zG\n    if (iMouse.z > 0. && length(M-O.xy) < .03 ) O.xy = M;       // mouse moves node\n    \n    if (length(M)<20./R.y) O.xy += CS( iTime + hash3(U.x+.1).z*6.28 ) / R.y; // autodemo animation\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T(i)        texelFetch(iChannel0, ivec2(i,0), 0 )\n\n#define CS(a)       vec2( cos(a), sin(a) )\n#define expZ(z)   ( length(z) * CS(z) )\n#define logZ(z)     vec2( length(z), atan((z).y,(z).x) )\n#define mulZ(a,b) ( mat2(a, -(a).y,(a).x) * (b) )\n\n#define keyToggle(a)  ( texelFetch(iChannel3,ivec2(a,2),0).x > 0.)\n","name":"Common","description":"","type":"common"}]}