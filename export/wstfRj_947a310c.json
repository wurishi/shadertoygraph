{"ver":"0.1","info":{"id":"wstfRj","date":"1605801301","viewed":73,"name":"XtoneEqualTemperamentDrone","username":"JedLindell","description":"X - tone Equal(ish) temperament drone thing... (WIP)","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["fm","drone","gpusound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/**\n * X - tone Equal(ish) temperament drone thing...\n * \n **/\n\nconst int ROOT_PULSE = 10;\n\n//Root frequency\nconst float ROOT_HZ = 240.;\n\n//Delta exponent against the ROOT_HZ\nconst float ROOT_NOTE = 1.;\nconst highp float PI = 3.1415926535897932384626433832795;\nconst int OCTAVE_STEPS = 44;\n\nvoid initScale(inout highp float stuff[OCTAVE_STEPS])\n{\n    for(int i = 0; i < OCTAVE_STEPS; i ++) {\n      stuff[i] = (float(i) + 1.) / float(OCTAVE_STEPS);\n    }\n} \n\nvec2 mainSound( in int samp, float t ) {\n  highp float stuff[OCTAVE_STEPS];\n  initScale(stuff);\n    \n  float freq = ROOT_HZ * ROOT_NOTE * stuff[int(floor((float(OCTAVE_STEPS) * t)/float(ROOT_PULSE))) % OCTAVE_STEPS];\n  float freq2 = freq * 5.;\n    \n  float wierdness = sin(t*freq*PI*2. + sin(t*freq2*PI*2.));\n  \n  return vec2(wierdness);\n}\n\n","name":"Sound","description":"","type":"sound"}]}