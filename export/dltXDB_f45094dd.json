{"ver":"0.1","info":{"id":"dltXDB","date":"1710621453","viewed":18,"name":"smile!_ndm767","username":"ndm767","description":"smile","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["smile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circleSDF(in vec2 pos, in float r){\n    return abs(length(pos) - r);\n}\n\nfloat semiCircleSDF(in vec2 pos, in float r){\n    float ret = length(pos) - r;\n    if(ret > 0.0){\n        return ret;\n    }\n    \n    return 1.0;\n}\n\n\nfloat intersectSDF(in float v1, in float v2){\n    return max(v1, v1);\n}\n\nfloat unionSDF(in float v1, in float v2){\n    return min(v1, v1);\n}\n\nfloat diffSDF(in float v1, in float v2){\n    return max(v1, -v2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.0)/iResolution.xy - 1.0;\n    \n    if(uv.x < 0.0){\n       uv.x = -uv.x;\n    }\n    \n    if(uv.y < 0.5){\n        uv.y = 1.0-uv.y;\n    }\n    \n    uv = fract(uv);\n    \n    float rdist1 = circleSDF(uv, 0.5*abs(sin(iTime*1.0)));\n    float rdist2 = circleSDF(uv, 0.3);\n    float rdist = smoothstep(0.3, 0.2, diffSDF(rdist1, rdist2));\n    \n    float bdist1 = circleSDF(uv, 0.49*abs(sin(iTime*1.0)));\n    float bdist2 = circleSDF(uv, 0.48);\n    float bdist = smoothstep(0.1, 0.15, diffSDF(bdist1, bdist2));\n    \n    \n    float pupil = semiCircleSDF(uv, 0.39*abs(sin(iTime)));\n    bdist *= clamp(0.5, 1.0, 1.0 - pupil);\n    \n    // Output to screen\n    fragColor = vec4(1.0-rdist, 0.0, 1.0-bdist, 1.0);\n}","name":"Image","description":"","type":"image"}]}