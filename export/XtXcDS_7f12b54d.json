{"ver":"0.1","info":{"id":"XtXcDS","date":"1506132928","viewed":1483,"name":"comic book hero","username":"mds2","description":"quick attempt at a toon shader","likes":12,"published":3,"flags":32,"usePreview":1,"tags":["video","toon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const mat3 yuv_2_rgb = mat3(1.0, 1.0, 1.0,\n                            0.0, -0.39465, 2.03211,\n                            1.13983, -0.58060, 0.0);\n\nconst mat3 rgb_2_yuv = mat3(0.299, -0.14713, 0.615,\n                            0.587, -0.28886, -0.51499,\n                            0.114, 0.436, -0.10001);\n\nfloat edge(vec2 uv, float stepsize) {\n\tfloat x = length(\n                     texture(iChannel0, uv - vec2(stepsize, 0.0)).rgb -\n                     texture(iChannel0, uv + vec2(stepsize, 0.0)).rgb);\n    \n\tfloat y = length(\n                     texture(iChannel0, uv - vec2(0.0, stepsize)).rgb -\n                     texture(iChannel0, uv + vec2(0.0, stepsize)).rgb);\n    return (x + y) / stepsize;\n}\n\n\nvec3 color_quantize_yuv(in vec3 color) {\n    const float yuv_step = 0.1;\n \tvec3 yuv = rgb_2_yuv * color;\n    yuv.x = 0.2 + 0.8 * yuv.x;\n    vec3 quantized =\n        vec3(0.1 * (0.2 + round(10.0 * yuv.x)),\n             0.125 * (0.25 * sign(yuv.yz) + round(8.0 * yuv.yz)));\n    return yuv_2_rgb * quantized;\n}\n\nvec3 orangize(in vec3 col) {\n     mat3 blowout = mat3(1.87583893, 0.96308725, 0.,\n       0.96308725, 1.17416107, 0.,\n       0.        , 0.        , 0.5);\n    vec3 cent = vec3(0.47968451, \n                     0.450743, \n                     0.45227517) + 0.2;\n   \n    \n    vec3 dir = blowout * (col - cent);\n    \n    vec3 maxes = (step(vec3(0.0), dir) - col)/dir;\n    \n    float amount = min(maxes.x, min(maxes.y, maxes.z));\n    \n    return col + dir * 0.5 * amount;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float edgesize = 2.0 / min(iResolution.x, iResolution.y);\n    float edge_modulate =\n        smoothstep(30.0, 15.0, 0.4 * edge(uv, edgesize));\n    vec3 color = orangize(color_quantize_yuv(texture(iChannel0, uv).rgb));\n    vec3 line_color = vec3(0.1);\n\tfragColor = vec4(mix(line_color, color, edge_modulate),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 vidcolor = texture(iChannel0, uv).rgb;\n    float greenliness = \n        smoothstep(0.05, 0.15, vidcolor.g - 0.5 * (vidcolor.b + vidcolor.r + max(vidcolor.b, vidcolor.r)));\n\n    vec3 bgcolor = texture(iChannel1, uv).rgb;\n    fragColor = vec4(mix(vidcolor - vec3(0.0, greenliness, 0.0),\n                         bgcolor, greenliness), 1.0);\n    //    fragColor = vec4(vec3(greenliness), 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 u1v = (fragCoord + vec2(-1.0, 0.0))/iResolution.xy;\n    vec2 uv1 = (fragCoord + vec2(0.0, -1.0))/iResolution.xy;\n    vec2 u1v1 = (fragCoord + vec2(-1.0, -1.0))/iResolution.xy;\n    fragColor = 0.25 * (texture(iChannel0, uv) +\n                        texture(iChannel0, u1v) +\n                        texture(iChannel0, uv1) +\n                        texture(iChannel0, u1v1));\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 u1v = (fragCoord + vec2(1.0, 0.0))/iResolution.xy;\n    vec2 uv1 = (fragCoord + vec2(0.0, 1.0))/iResolution.xy;\n    vec2 u1v1 = (fragCoord + vec2(1.0, 1.0))/iResolution.xy;\n    fragColor = 0.25 * (texture(iChannel0, uv) +\n                        texture(iChannel0, u1v) +\n                        texture(iChannel0, uv1) +\n                        texture(iChannel0, u1v1));\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 u1v = (fragCoord + vec2(-1.0, 0.0))/iResolution.xy;\n    vec2 uv1 = (fragCoord + vec2(0.0, -1.0))/iResolution.xy;\n    vec2 u1v1 = (fragCoord + vec2(-1.0, -1.0))/iResolution.xy;\n    fragColor = 0.25 * (texture(iChannel0, uv) +\n                        texture(iChannel0, u1v) +\n                        texture(iChannel0, uv1) +\n                        texture(iChannel0, u1v1));\n}","name":"Buffer D","description":"","type":"buffer"}]}