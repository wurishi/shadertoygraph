{"ver":"0.1","info":{"id":"ft3XR8","date":"1638693001","viewed":243,"name":"Wave propagation in an ellipse","username":"Dev1ati0n","description":"Uses Euler's wave equation to calculate wave propagation.\n\n\nMore info here: wikipedia.org/wiki/Wave_equation","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["wave","waveequation","wavepropagation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if(texture(iChannel1,uv).r==0.){\n        vec2 diff = fragCoord-0.5*iResolution.xy;\n        if(0.51*diff.x*diff.x+diff.y*diff.y<95000.){fragColor = vec4(0.1,0.1,0.9,1.0);}\n        else{fragColor = vec4(0.,0.,0.1,1.0);}\n    }\n    else{\n        fragColor = texture(iChannel0,uv)+0.5;\n        fragColor.rgb *= vec3(0.5,0.5,0.2);\n        fragColor.rgb += vec3(0.1,0.5,0.9);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// The derivative (rate of change) of the wave amplitude\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pixel = 1./iResolution.xy;\n    vec2 uv = fragCoord*pixel;\n    // Fetch values of neighcoring pixels\n    float values[5];\n    values[0] = texture(iChannel1,uv).r;\n    values[1] = texture(iChannel1,uv+vec2(0.0, 1.0)*pixel).r;\n    values[2] = texture(iChannel1,uv+vec2(0.0,-1.0)*pixel).r;\n    values[3] = texture(iChannel1,uv+vec2(1.0, 0.0)*pixel).r;\n    values[4] = texture(iChannel1,uv+vec2(-1.0,0.0)*pixel).r;\n    // Wave Equation: d²u/dt²=c²(d²u/dx²+d²u/dy²)\n    float deriv = values[1]+values[2]+values[3]+values[4]-4.*values[0]; // Calculates d²u/dx²+d²u/dy²\n    float c = texture(iChannel2,uv).r; // Fetch value of c\n    fragColor = vec4(texture(iChannel0,uv).r+timescale*c*c*deriv); // Add c²(d²u/dx²+d²u/dy²) to the previous value\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(timescale*texture(iChannel0,uv)+texture(iChannel1,uv)); // Add the derivative to the previous value\n    // Add disturbance\n    vec2 diff = fragCoord-0.5*iResolution.xy;\n    diff.x += 300.;\n    fragColor += 0.05*sin(.1*float(iFrame))*exp(-0.05*dot(diff,diff));\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// Wave propagation speed\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame>0){fragColor = texture(iChannel0,fragCoord/iResolution.xy); return;} // Reload previous\n    // Draw ellipse\n    vec2 diff = fragCoord-0.5*iResolution.xy;\n    if(0.5*diff.x*diff.x+diff.y*diff.y>90000.){fragColor = vec4(0.);}\n    else{fragColor = vec4(1.);}\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"// Speed of simulation. Higher values are faster, but less accurate and more buggy. \nfloat timescale = 0.5;","name":"Common","description":"","type":"common"}]}