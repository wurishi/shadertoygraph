{"ver":"0.1","info":{"id":"NljSzV","date":"1628109999","viewed":305,"name":"Angle visualization - atan fix","username":"xintrea","description":"Videocard Intel i915 incorrect calculate atan() function. This code sample show how to write custom handmade function for calculate arctan from arcsin.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["angle","circlemotion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float PI=3.1415926535897932384626433832795;\n\n\nfloat arctangens(float a)\n{\n    return asin(a/sqrt(1.0+a*a));\n}\n\n\nfloat getAngle(float x, float y)\n{\n    // For i915 with Linux replace atan() to arctangens()\n    float alpha=atan( abs(y/x) );\n\n    if(x>=0.0 && y>=0.0)\n    {\n        return alpha;\n    }\n\n    if(x<0.0 && y>=0.0)\n    {\n        return PI-alpha;\n    }\n\n    if(x<0.0 && y<0.0)\n    {\n        return PI+alpha;\n    }\n\n    return 2.0*PI-alpha;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    vec3 color = vec3(0.0, 0.0, 0.0);\n\n    float x=sin(iTime);\n    float y=cos(iTime);\n    \n    \n    // Square move by circle\n    float visX=x/2.0+0.5;\n    float visY=y/2.0+0.5;\n\n    if(uv.y>=visY && uv.y<visY+0.01)\n      if(uv.x>=visX && uv.x<visX+0.01)\n        color=vec3( 0.4, 0.4, 1.0 );\n    \n    \n    // Angle visualization\n    float angle=getAngle(x, y)/(2.0*PI);\n    \n    if(uv.y>=0.9 && uv.y<1.0)\n        if(uv.x>=angle && uv.x<(angle+0.01))\n            color=vec3( 0.1, 0.8, 0.8 );    \n\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}