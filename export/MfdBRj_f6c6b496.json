{"ver":"0.1","info":{"id":"MfdBRj","date":"1733296530","viewed":73,"name":"soggy pizza","username":"jackwitherell","description":"december 2024","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["perlinnoise","defaultshader","trianglemask","modulorepeat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// stolen perlin noise\n//https://www.shadertoy.com/view/DsK3W1\n\nvec2 n22 (vec2 p)\n{\n    vec3 a = fract(p.xyx * vec3(123.34, 234.34, 345.65));\n    a += dot(a, a + 34.45);\n    return fract(vec2(a.x * a.y, a.y * a.z));\n}\n\nvec2 get_gradient(vec2 pos)\n{\n    float twoPi = 6.283185;\n    float angle = n22(pos).x * twoPi;\n    return vec2(cos(angle), sin(angle));\n}\n\n\nfloat perlin_noise(vec2 uv, float cells_count)\n{\n    vec2 pos_in_grid = uv * cells_count;\n    vec2 cell_pos_in_grid =  floor(pos_in_grid);\n    vec2 local_pos_in_cell = (pos_in_grid - cell_pos_in_grid);\n    vec2 blend = local_pos_in_cell * local_pos_in_cell * (3.0f - 2.0f * local_pos_in_cell);\n    \n    vec2 left_top = cell_pos_in_grid + vec2(0, 1);\n    vec2 right_top = cell_pos_in_grid + vec2(1, 1);\n    vec2 left_bottom = cell_pos_in_grid + vec2(0, 0);\n    vec2 right_bottom = cell_pos_in_grid + vec2(1, 0);\n    \n    float left_top_dot = dot(pos_in_grid - left_top, get_gradient(left_top));\n    float right_top_dot = dot(pos_in_grid - right_top,  get_gradient(right_top));\n    float left_bottom_dot = dot(pos_in_grid - left_bottom, get_gradient(left_bottom));\n    float right_bottom_dot = dot(pos_in_grid - right_bottom, get_gradient(right_bottom));\n    \n    float noise_value = mix(\n                            mix(left_bottom_dot, right_bottom_dot, blend.x), \n                            mix(left_top_dot, right_top_dot, blend.x), \n                            blend.y);\n   \n    \n    return (0.5 + 0.5 * (noise_value / 0.7));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col += 0.5 + 0.5*cos(iTime+uv.yxy+vec3(0.3,2.7,5.0));\n    col += 0.5 + 0.6*cos(iTime+uv.yyx+vec3(0.5,2.5,5.3));\n    col/=3.0;\n    vec2 scale = vec2(12.0,6.0);\n    float calc = mod(uv.x*scale.x,1.0)-mod(uv.y*scale.y+(3.5*uv.x),1.0);\n    if(calc<0.04||calc>0.96||(calc>0.46&&calc<0.54)){\n        col=vec3(1.0)-col;\n    }\n    else if (perlin_noise(uv, 10.0)>0.55){\n        col -=distance(uv-0.5, vec2(0.0));\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}