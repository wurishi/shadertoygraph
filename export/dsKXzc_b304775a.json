{"ver":"0.1","info":{"id":"dsKXzc","date":"1681413276","viewed":56,"name":"Bezier two tangents","username":"Raistlin_fuego","description":"shaderlearning\n\nIncredible!! https://es.wikipedia.org/wiki/Curva_de_Bézier#Curvas_cúbicas_de_Bézier\n\nThanks too -- > https://www.youtube.com/watch?v=a4zMX6dDVXI","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bezier","lines","curves","shaderlearning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 p, vec2 c){\n    float d = length(p-c);\n    return smoothstep(fwidth(d), 0., d-0.02);\n\n}\n\nfloat Line(vec2 p, vec2 a, vec2 b){\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float t = clamp(dot(pa, ba)/dot(ba, ba), 0., 1.);\n    vec2 c = a + ba*t;\n    float d = length(c-p);\n    return smoothstep(fwidth(d), 0., d-0.002);\n\n}\n\nvec2 Bezier(vec2 P0, vec2 P1, vec2 P2, vec2 P3, vec2 P4, float t){\n\n    vec2 \n        Q0 = mix(P0, P1, t),\n        Q1 = mix(P1, P2, t),\n        Q2 = mix(P2, P3, t),\n        Q3 = mix(P3, P4, t);\n    vec2\n        R0 = mix(Q0, Q1, t),\n        R1 = mix(Q1, Q2, t),\n        R2 = mix(Q2, Q3, t);\n        \n    vec2\n        S0 = mix(R0, R1, t),\n        S1 = mix(R1, R2, t);\n        \n    vec2 L0 = mix(S0, S1, t);\n    \n    return L0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    uv *= 2.;\n    float t = sin(iTime*0.5) * 0.5 + 0.5;\n    float a = smoothstep(10., 0., mod((iTime*0.5), 10.)) * smoothstep(0., 10., mod((iTime*0.5), 10.)); // Lines/Circles ON-Off\n    \n    vec2\n        P0 = vec2(-0.7, -.4)*2.,\n        P1 = (iMouse.xy-0.5*iResolution.xy)/iResolution.y*8.,\n        P2 = vec2(0.2, 0.4)*2.,\n        P3 = vec2(0.9, -.9),\n        P4 = vec2(0.8, 0.3)*2.;\n        \n    vec2 \n        Q0 = mix(P0, P1, t),\n        Q1 = mix(P1, P2, t),\n        Q2 = mix(P2, P3, t),\n        Q3 = mix(P3, P4, t);\n     \n    vec2\n        R0 = mix(Q0, Q1, t),\n        R1 = mix(Q1, Q2, t),\n        R2 = mix(Q2, Q3, t);\n        \n    vec2\n        S0 = mix(R0, R1, t),\n        S1 = mix(R1, R2, t);\n        \n    vec2 L0 = mix(S0, S1, t);\n    \n    col += Circle(uv, P0) * vec3(1, 0, 0);\n    col += Circle(uv, P4) * vec3(1, 0, 0);\n    col += Circle(uv, L0) * vec3(1, 1, 1);\n    \n    //Points\n    col += (Circle(uv, P1) * vec3(1, 0, 0) + Circle(uv, P2) * vec3(1, 0, 0) \n    + Circle(uv, P3) * vec3(1, 0, 0) + Circle(uv, Q0) * vec3(0, 1, 0) +\n    Circle(uv, Q1) * vec3(0, 1, 0) + Circle(uv, Q2) * vec3(0, 1, 0)+\n    Circle(uv, Q3) * vec3(0, 1, 0)+Circle(uv, R0) * vec3(0, 0, 1)+\n    Circle(uv, R1) * vec3(0, 0, 1)+Circle(uv, R2) * vec3(0, 0, 1)+\n    Circle(uv, S0) * vec3(0, 1, 1)+Circle(uv, S1) * vec3(0, 1, 1))*a;\n\n    //Lines\n    col += (Line(uv, P0, P1)+Line(uv, P1, P2)+Line(uv, P2, P3)+\n    Line(uv, P3, P4)+Line(uv, Q0, Q1)+Line(uv, Q1, Q2)+Line(uv, Q2, Q3)+\n    Line(uv, R0, R1)+Line(uv, R1, R2)+Line(uv, S0, S1))*a;\n    \n    int NUM_SEGS = 25;\n    vec2 P;\n    vec2 PP = P0;\n    float l = 0.;\n     for(int i = 1; i<=NUM_SEGS; i++){\n        t = float(i)/float(NUM_SEGS);\n        P = Bezier(P0, P1, P2, P3, P4, float(t));\n        l += max(l, Line(uv, P, PP));\n        PP = P;\n    }\n    col += l;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}