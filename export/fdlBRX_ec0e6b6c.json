{"ver":"0.1","info":{"id":"fdlBRX","date":"1645131965","viewed":145,"name":"Power function graph","username":"ChunderFPV","description":"A simple power function plot.  Use the mouse.  The font doesn't have an Infinity symbol so Inf is labeled as 0... at least until I can fix it.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["math","graph","plot","power","exponent"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// thanks valalalalala for debugging font: https://www.shadertoy.com/view/WtGyWD\nconst int CHARACTERS[14] = int[14](31599,9362,31183,31207,23524,29671,29679,30994,31727,31719,1488,448,2,3640); float digitIsOn( int digit, vec2 id ) { if ( id.x < .0 || id.y < .0 || id.x > 2. || id.y > 4. ) return .0; return floor( mod( float( CHARACTERS[ int( digit ) ] ) / pow( 2., id.x + id.y * 3. ), 2. ) ); } float digitSign( float v, vec2 id ) { return digitIsOn( 10 - int( ( sign( v ) - 1. ) * .5 ), id ); } int digitCount( float v ) { return int( floor( log( max( v, 1. ) ) / log( 10. ) ) ); } float digitFirst( vec2 uv, float scale, float v, int decimalPlaces ) { vec2 id = floor( uv * scale ); if ( .0 < digitSign( v, id ) ) return 1.; v = abs( v ); int digits = digitCount( v ); float power = pow( 10., float( digits ) ); float offset = floor( .1 * scale ); id.x -= offset; float n; for ( int i = 0 ; i < 33 ; i++, id.x -= offset, v -= power * n, power /= 10. ) { n = floor( v / power ); if ( .0 < digitIsOn( int( n ), id ) ) return 1.; if ( i == digits ) { id.x -= offset; if ( .0 < digitIsOn( int( 12 ), id ) ) return 1.; } if ( i >= digits + decimalPlaces ) return .0; } return .0; } float digitFirst( vec2 uv, float scale, float v ) { return digitFirst( uv, scale, v, 3 ); } vec3 digitIn( vec3 color, vec3 fontColor, vec2 uv, float scale, float v ) { float f = digitFirst( uv, scale, v ); return mix( color, fontColor, f ); } vec3 digitIn( vec3 color, vec2 uv, float scale, float v ) { return digitIn( color, vec3(1.), uv, scale, v ); } \n\nfloat scale = 4.8;\nfloat pi = 3.14159265359;\nfloat sm = 0.002; // smoothness\nfloat circ(vec2 uv, float r, float sm) { return smoothstep(0.0, sm, r+sm-abs(length(uv))); }\nfloat donut(vec2 uv, float r, float w) { return smoothstep(0.0, w, w-abs(length(uv)-r)); }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ar = iResolution.x/iResolution.y; // aspect ratio\n    vec2 uv = fragCoord/iResolution.xy; // screen coords\n    vec4 m = iMouse.xyzw/iResolution.xyxy; // mouse coords\n    //uv -= 0.5; m -= 0.5; // center origin\n    uv.x *= ar; m.x *= ar; // apply aspect ratio\n    uv *= scale; m *= scale; // apply scale\n    \n    vec3 col = vec3(0); // background\n    col += smoothstep(1.0-sm*scale, 1.0+sm*scale, cos(uv.x*pi*2.0))*0.5; // x grid\n    col += smoothstep(1.0-sm*scale, 1.0+sm*scale, cos(uv.y*pi*2.0))*0.5; // y grid\n    //col += smoothstep(0.0, sm/2.0, (sm*scale)-abs(uv.x)); // y axis\n    //col += smoothstep(0.0, sm/2.0, (sm*scale)-abs(uv.y)); // x axis\n    //col += donut(vec2(uv.x, uv.y), 1.0, sm/2.0*scale); // unit circle\n    \n    // power graph (exponent curve)\n    float ex = log(abs(m.y))/log(abs(m.x)); // exponent from mouse xy\n    float plot = pow(abs(uv.x), ex); // x^exp=y\n    //plot *= sign(uv.x*m.x*m.y); // mirror to -xy\n    col += mix(col, vec3(0.0, 0.6, 0.6), smoothstep(0.99, 1.01, pow(plot/uv.y, sign(ex))));\n    \n    // text\n    col = digitIn(col, (uv-vec2(m))/scale, 44.0, ex);\n    \n    // mouse cursor\n    col = mix(col, vec3(1), circ(vec2(uv.x-m.x, uv.y-m.y), 0.005*scale, sm*2.0*scale));\n    if (m.z > 0.0) // mouse down\n    {\n        col = mix(col, vec3(1), donut(vec2(uv.x-m.x, uv.y-m.y), 0.05*scale, sm*2.0*scale)*0.8);\n        col = mix(col, vec3(1), donut(vec2(uv.x-m.x, uv.y-m.y), 0.1*scale, sm*2.0*scale)*0.4);\n    }\n    \n    fragColor = vec4(col,1.0); // draw\n}","name":"Image","description":"","type":"image"}]}