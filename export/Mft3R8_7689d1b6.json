{"ver":"0.1","info":{"id":"Mft3R8","date":"1711394727","viewed":56,"name":"Combining offsets x and y Ex.","username":"billrockx","description":"The Book of Shader exercise.\nTry combining an offset on x and y axis to get something like this.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["tbos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float box( vec2 st,  vec2 size){\n    float w =  4.5/iResolution.y;\n    size = 0.5 - size * 0.5;\n    st = smoothstep(0., w, min(st, 1.0 - st) - size );\n    return st.x * st.y;\n}\n\nfloat circle( vec2 st,  float r){\n    float w =  4.5/iResolution.y;\n    r =  sqrt(r)/2.;\n    return smoothstep( w, 0.0, length(st - 0.5) - r );\n}\n\nfloat brickTile(vec2 st, float zoom, int axis){\n    st /= vec2(2.15, 0.65) / 1.5;\n    st *= zoom;\n    \n    bool v = mod(st[1 - axis], 2. ) < 1.0;\n    if( v ) st[axis] ++;\n    \n    //_st.x += sin(u_time);\n    st[axis] += v ? -sin(iTime) : sin(iTime);\n\n    st = fract(st);\n    return box(st, vec2(0.9));\n}\n\nfloat circleTile(vec2 st, float zoom, int axis){\n    st *= zoom;\n    \n    st[axis] += mod(st[1 - axis], 2.0) < 1.0 ? -cos(iTime) : cos(iTime);\n\n    st = fract(st);\n    return circle(st, 0.3);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.y;\n    vec3 color = vec3(circleTile(st, 10.0, int(mod(sin(iTime),2.0))));\n\n    //color = vec3(brickTile(st, 10.0, 0));\n    //color = vec3(brickTile(st, 10.0, 1));\n    color = 1.0 - color;\n\nfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}