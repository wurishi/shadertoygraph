{"ver":"0.1","info":{"id":"7ldGRS","date":"1639365746","viewed":62,"name":"0001 Bargraph","username":"francislarge","description":"\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["playground"],"hasliked":0,"parentid":"NdlXRN","parentname":"000 Playground"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nstruct Rectangle\n{\n    vec2 Position;\n    vec2 Size;\n};\n\nfloat MakeRectangle( inout Rectangle Rec, vec2 uv );\n\nconst int ArraySize = 10;\nvoid AppendArray(inout int Array[ArraySize], int Item, inout int Count );\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 Dimension = vec2(1000);\n    float AspectRatio = iResolution.x/iResolution.y;\n    \n    vec2 Graph = fragCoord / iResolution.xy;\n    Graph.x  = Graph.x * AspectRatio;\n    Graph *= Dimension;\n    \n    //Graph.x -= fract(iTime / 10.0) * 1000.0;\n    \n    //Array\n    \n    int Count = 0;\n    int Numbers[ArraySize];\n    \n    AppendArray( Numbers, 100, Count );\n    AppendArray( Numbers, 500, Count );\n    AppendArray( Numbers, 200, Count );\n    AppendArray( Numbers, 800, Count );\n    AppendArray( Numbers, 900, Count );\n    AppendArray( Numbers, 100, Count );\n    \n    AppendArray( Numbers, 150, Count );\n    AppendArray( Numbers, 400, Count );\n    AppendArray( Numbers, 600, Count );\n    AppendArray( Numbers, 50, Count );\n    AppendArray( Numbers, 750, Count );\n    AppendArray( Numbers, 100, Count );\n    \n    \n    float XSpacing = Dimension.x * AspectRatio  / float(Count);\n    float Inset = 2.0;\n    \n    Rectangle Rectangles[ArraySize];\n    \n    for(int i = 0; i < Count; i++ )\n    {\n        Rectangles[i].Position = vec2(XSpacing * float(i) + XSpacing * 0.5  , 0.0);\n        Rectangles[i].Size     = vec2(XSpacing * 0.5 - Inset, Numbers[i]);\n        \n        //Rectangles[i].Size.y = ( cos(float(i) ) + 1.0 ) *0.5 * 500.0;\n        \n        \n    };\n    \n    float BarGraph = 0.0;\n    for(int i = 0; i < Count; i++ )\n    {\n        BarGraph += MakeRectangle(Rectangles[i], Graph);\n    };\n    \n    \n        \n    \n    \n    fragColor.rgb = vec3( BarGraph );\n}\n\nfloat MakeRectangle( inout Rectangle Rec, vec2 uv )\n{\n   vec2 Rect = abs(-Rec.Position + uv) - Rec.Size;\n   Rect = max(Rect, vec2(0.0) );\n   \n   \n   return 1.0 - sign(Rect.x + Rect.y);\n   \n}\n\nvoid AppendArray(inout int Array[ArraySize], int Item, inout int Count )\n{\n    if(Count < ArraySize )\n    {\n        Array[Count] = Item;\n        Count = Count + 1;\n    };\n}\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}