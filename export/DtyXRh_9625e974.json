{"ver":"0.1","info":{"id":"DtyXRh","date":"1685911667","viewed":73,"name":"wtf is a shader","username":"dopamine_daddy","description":"First ever shader, trying to learn","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["light","psychedelic","loop","trippy","lsd","bright","neon","perfectloop","dmt","dimethyltryptamine","lysergicaciddiethylamide"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.0*fragCoord/iResolution.xy-1.0;\n\n    vec4 lineCoords[25];\n    vec3 lineColors[25];\n\n    // Initialize line coordinates and colors\n    for(int i = 0; i < 25; i++) {\n        float t = float(i) / 25.0; // parameter that varies from 0 to 1\n        float angle = iTime * t + t * 3.1416 * 2.0;\n\n        // Define the initial line (from origin to a point on the unit circle)\n        vec2 startPos = vec2(0,0);\n        vec2 endPos = vec2(cos(t * 3.1416*2.0), sin(t * 3.1416*2.0));\n\n        // Apply rotation\n        mat2 rot = mat2(cos(angle), -sin(angle),\n                        sin(angle), cos(angle));\n        startPos = rot * startPos;\n        endPos = rot * endPos;\n\n        lineCoords[i] = vec4(startPos, endPos);\n        lineColors[i] = vec3(\n            sin((iTime + t)*0.1 * 3.1416*2.0) * 0.5 + 0.5,\n            cos((iTime + t)*0.2 * 3.1416*2.0) * 0.5 + 0.5,\n            sin((iTime + t)*0.3 * 3.1416*2.0) * 0.5 + 0.5\n        );\n    }\n\n    vec3 line_dist_total = vec3(0.0);\n\n    for(int i=0; i<25; i++) {\n        vec2 p1 = lineCoords[i].xy;\n        vec2 p2 = lineCoords[i].zw;\n\n        vec2 v = p2 - p1;\n        vec2 w = uv - p1;\n\n        float c1 = dot(w,v);\n        float c2 = dot(v,v);\n        vec2 pb;\n        if (c1 <= 0.0)\n            pb = p1;\n        else if (c2 <= c1)\n            pb = p2;\n        else\n            pb = p1 + (c1 / c2) * v;\n\n        float line_dist = length(uv - pb);\n        line_dist_total += lineColors[i] * 0.2/(0.01+20.0*line_dist);\n    }\n\n    fragColor = vec4(line_dist_total, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}