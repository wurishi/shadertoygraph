{"ver":"0.1","info":{"id":"wscyRS","date":"1601138550","viewed":71,"name":"Cogs Spinning","username":"mightee_cactus","description":"Having fun with the cog pattern I found here https://thebookofshaders.com/07/\nShader is a mess, and tuned only for certain cog radius.\n\nI'd love if you make a general randomized version of it :)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["cog"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Colors\n#define BG_COLOR    vec3(0.165, 0.125, 0.224)\n//#define COG_COLOR   vec3(0.906, 0.275, 0.6)\n#define COG_COLOR   vec3(0.564, 0.066, 0.690)\n\n// Here are parameters you can safely tune\n// without ruining pattern too much.\n#define SPEED_AUTO  iTime * 0.5\n#define SPEED_MOUSE iMouse.x * 0.005\n#define FIRST_COG   vec2(-0.8,0.35)\n#define COG_STEP    vec2(0.185, 0.122)\n\n\n// Generate cos wave, cut bottom of it, \n// wrap it into a circle by polar coordinates conversion.\n// Originally took it from here  https://thebookofshaders.com/07/\nfloat cog(vec2 origin, vec2 uv, float radius, float timeShift)\n{\n    vec2 pos = origin - uv;\n    float r = length(pos) / radius;\n    float a = atan(pos.y, pos.x) + timeShift;\n    // this is where those tooth are formed\n    float f = smoothstep(-0.3, 0.3, cos(a*8.))*0.08+0.5;\n    \n    return smoothstep(f+0.02, f, r);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy) / iResolution.y;\n    \n    float bigRadius = 0.2;\n    vec2  s         = COG_STEP;\n    float cogMask   = 0.;\n    \n    float bigTime   = 0.;\n    if (iMouse.z > 0.)\n    {\n        bigTime = SPEED_MOUSE;\n    }\n    else\n    {\n    \tbigTime = SPEED_AUTO;    \n    }\n    \n    // This thing is very straight forward:\n    // Draw cog -> shift pos to next cog -> repeat.\n    // Changing sign of s.x and s.y shift moves it \n    // around previous cog.\n    vec2 cur = FIRST_COG;\n    cogMask += cog(cur, uv, bigRadius,  bigTime);\n    cur     += vec2(s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius, -bigTime);\n    cur     += vec2(s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius,  bigTime);\n    cur     += vec2(-s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius, -bigTime);\n    cur     += vec2(-s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius,  bigTime);\n    cur     += vec2(s.x, s.y);\n    //cogMask += cog(cur, uv, bigRadius, -bigTime); // skip cog\n    cur     += vec2(s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius,  bigTime);\n    cur     += vec2(s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius, -bigTime)*2.; // highlight\n    cur     += vec2(s.x, s.y);\n    //cogMask += cog(cur, uv, bigRadius,  bigTime); // skip cog\n    cur     += vec2(-s.x, s.y);\n    //cogMask += cog(cur, uv, bigRadius, -bigTime); // skip cog\n    cur     += vec2(s.x, s.y);\n    cogMask += cog(cur, uv, bigRadius,  bigTime);\n    cur     += vec2(-s.x, s.y);\n    //cogMask += cog(cur, uv, bigRadius, -bigTime); // skip cog\n    cur     += vec2(-s.x, s.y);\n    cogMask += cog(cur, uv, bigRadius,  bigTime);\n    cur     += vec2(s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius, -bigTime)*2.; // highlight\n    cur     += vec2(s.x, s.y);\n    cogMask += cog(cur, uv, bigRadius,  bigTime);\n    cur     += vec2(s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius, -bigTime);\n    cur     += vec2(s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius,  bigTime)*2.; // highlight\n    cur     += vec2(s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius, -bigTime);\n    cur     += vec2(s.x, s.y);\n    cogMask += cog(cur, uv, bigRadius,  bigTime);\n    cur     += vec2(s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius, -bigTime);\n    cur     += vec2(-s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius,  bigTime);\n    cur     += vec2(-s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius, -bigTime);\n    cur     += vec2(-s.x, s.y);\n    cogMask += cog(cur, uv, bigRadius,  bigTime);\n    cur     += vec2(-s.x, -s.y);\n    cogMask += cog(cur, uv, bigRadius, -bigTime);\n    cur     += vec2(-s.x, s.y);\n    cogMask += cog(cur, uv, bigRadius,  bigTime);\n    \n\tfragColor = vec4(mix(BG_COLOR, COG_COLOR, cogMask), 1.0);\n}","name":"Image","description":"","type":"image"}]}