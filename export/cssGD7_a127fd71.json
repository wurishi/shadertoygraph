{"ver":"0.1","info":{"id":"cssGD7","date":"1666237860","viewed":106,"name":"Crafting a nether portal","username":"airepods","description":"Nether portal made by obsidian blocks","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["random","minecraft","portal","obsidian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\n//25387\n\nfloat random (vec2 st, float n) {\n    return fract(sin(dot(st.xy, vec2(15.,50.57748)))* n);\n}\n\n\n\nvec3 draw_rectangle(vec2 st, float width, float height, vec3 color, vec2 pos)\n{\t    \n    // translate rectangle by moving the st space\n    pos = -pos;\n    st+=pos;\n\n    // map offset to rectangle size\n    // i.e 0.1 to 0.8 (0.1 offset from both sides)\n    width = (1.0-width)/2.0;\n    height = (1.0-height)/2.0;\n    \n    vec2 bl = step(vec2(width, height), st);\n    vec2 tr = step(vec2(width, height), 1.0-st);\n    \n    // create rectangle -> white rectangle <1.0, 1.0, 1.0>\n    vec3 shape = vec3(bl.x*bl.y*tr.x*tr.y);\n    return shape*color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x/iResolution.y;\n    \n    vec2 block_uv = uv;\n    vec2 portal_uv = uv;\n    vec2 effect_uv = uv;\n    \n    vec2 texture_portal = floor(portal_uv*20.);\n    vec2 texture_block = floor(block_uv*40.);\n    \n    // pixelation from www.shadertoy.com/view/tlycW1\n    float cellSize = 100.0;\n    effect_uv.x -= mod(effect_uv.x, 1.0 / cellSize); \n\teffect_uv.y -= mod(effect_uv.y, 1.0 / cellSize);\n    \n    float formafinal = sin(effect_uv.x*8.*PI+iTime\n                            +sin(effect_uv.y*2.0*PI+iTime\n                            +sin(effect_uv.x*20.0*PI-iTime\n                            +cos(effect_uv.y*5.0*PI-iTime\n                            +sin(effect_uv.x*2.0*PI-iTime\n                            +cos(effect_uv.y*1.0*PI-iTime)\n                            +sin(effect_uv.x*10.0*PI-iTime))))))*0.5+0.5;\n\n    vec3 color_portal = vec3(random(texture_portal, iTime)*0.3, \n                             random(texture_portal, iTime)*0.1, \n                             random(texture_portal, iTime)*0.5);\n                             \n    vec3 color_block = vec3(random(texture_block, 25387.)*0.3, \n                            random(texture_block, 25387.)*0.3, \n                            random(texture_block, 25387.)*0.3);\n\n       \n       \n    vec3 portal = draw_rectangle(portal_uv, 0.8/aspect, 1.0, vec3(1.0, 1.0, 1.0), vec2(0.0, 0.0));\n    vec3 effect = draw_rectangle(vec2(formafinal), 0.8/aspect, 1.0, vec3(1.0, 1.0, 1.0), vec2(0.0, 0.0));\n    portal*=effect;\n    portal*=color_portal;\n\n    \n    vec3 block;\n    \n    for(int i=0; i<6; i++)\n    {\n        float c = 0.20;\n        c*=float(i);\n        block = draw_rectangle(block_uv, 0.2/aspect, 0.2, vec3(1.0, 1.0, 1.0), vec2(-0.281, -0.5+c));\n        block*=color_block;\n        portal+=block;\n    }\n    \n    for(int i=0; i<6; i++)\n    {\n        float c = 0.20;\n        c*=float(i);\n        block = draw_rectangle(block_uv, 0.2/aspect, 0.2, vec3(1.0, 1.0, 1.0), vec2(0.281, -0.5+c));\n        block*=color_block;\n        portal+=block;\n    }\n    \n    \n    fragColor = vec4(portal, 1.0);\n}","name":"Image","description":"","type":"image"}]}