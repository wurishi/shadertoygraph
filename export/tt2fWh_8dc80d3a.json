{"ver":"0.1","info":{"id":"tt2fWh","date":"1598917205","viewed":327,"name":"The Universe Within - thope","username":"thope","description":"From this tutorial: https://www.youtube.com/watch?v=3CycKKJiwis\n","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["abstract","cells","praticles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// From this tutorial: https://www.youtube.com/watch?v=3CycKKJiwis\n\n#define S(a,b,t) smoothstep(a,b,t)\n#define saturate(t) clamp(t, 0.0, 1.0)\n\nfloat N21(vec2 p)\n{\n    p = fract(p*vec2(233.34,851.73));\n    p += dot(p, p+23.45);\n    return fract(p.x*p.y);\n}\n\nvec2 N22(vec2 p)\n{\n    float n = N21(p);\n    return vec2(n, N21(p+n));\n}\n\nfloat distLine(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float t = saturate(dot(pa, ba)/dot(ba,ba));\n    return length(pa - ba*t);\n}\n\nfloat line(vec2 p, vec2 a, vec2 b)\n{\n    float d = distLine(p,a,b);\n    float m = S(0.02,0.01,d);\n    float d2 = distance(a,b);\n    m *= S(1.2, 0.8, d2)*0.5 + S(0.05,0.03,abs(d2-0.75));\n    return m;\n}\n\nvec2 getPos(vec2 id, vec2 offset)\n{\n    return sin(N22(id+offset)*iTime)*0.4+offset;\n}\n\nfloat layer(vec2 uv)\n{\n    vec2 gv = fract(uv)-0.5;\n    vec2 id = floor(uv);\n    float m = 0.0;\n    \n    // place points\n    vec2 p[9];\n    int i = 0;\n    for(float y = -1.0; y <= 1.0; y++)\n    {\n        for(float x = -1.0; x <= 1.0; x++)\n        {\n            p[i++] = getPos(id, vec2(x,y));\n        }\n    }\n    \n    float t = iTime * 10.0;\n    \n    // draw lines and sparkles\n    for(int i = 0; i < 9; ++i)\n    {\n        m += line(gv, p[i], p[4]);\n        \n        vec2 j = (p[i]-gv)*20.0;\n        float sparkle = 1.0/dot(j,j);\n        m += sparkle * (sin(t+fract(p[i].x)*10.0)*0.5+0.5);\n    }\n    m += line(gv, p[1], p[3]);\n    m += line(gv, p[1], p[5]);\n    m += line(gv, p[7], p[3]);\n    m += line(gv, p[7], p[5]);\n\n\treturn m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\tvec2 mouse = (iMouse.xy / iResolution.xy)-0.5;\n    \n    float t = iTime*0.1;\n    float m = 0.0;\n    \n    float s = sin(t);\n    float c = cos(t);\n    mat2 rot = mat2(c,-s,s,c);\n    uv *= rot;\n    mouse *= rot;\n    \n    for(float i = 0.0; i < 1.0; i += 1.0/4.0)\n    {\n        float z = fract(i+t);\n        float size = mix(10.0, 0.5, z);\n        float fade = S(0.0, 0.5, z)*S(1.0,0.9,z);\n        m += layer(uv*size+i*20.0-mouse)*fade;\n    }\n    \n    vec3 base = sin(5.0*t*vec3(0.345, 0.456, 0.657))*0.4+0.6;\n    vec3 col = vec3(m)*base;\n\n    //if(gv.x>0.48||gv.y>0.48) col.r = 1.0;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}