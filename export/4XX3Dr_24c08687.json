{"ver":"0.1","info":{"id":"4XX3Dr","date":"1707755680","viewed":72,"name":"Sonder Animated","username":"bnog434","description":"Took the cover of the album Sonder by TesseracT and animated it. Planet motion replicates real life with respect to Earth.\n\nTakes approximately 26 minutes to complete the full animation.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","animated","art","album"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//globals\nvec3 DARK_COL_BG = vec3(0.01, 0.06, 0.14);\nvec3 MED_COL_BG = vec3(0.05, 0.1, 0.18);\nvec3 LIGHT_COL_BG = vec3(0.18, 0.04, 0.2);\nvec3 GRAY_COL = vec3(0.51, 0.53, 0.54);\nvec2 SUN_POS = vec2(0., 0.5); //changes origin of sun\nfloat TIME_SCALE = 1.; //changes how fast the animation plays\n\n//shape struct\nstruct Shape{\n    float sd;\n    vec3 col;\n};\n\n//creates timed rotation\nvec2 rot(vec2 origin, float r, float t){\n    vec2 xy;\n    xy.x = (r * sin(iTime * t)) + origin.x;\n    xy.y = (r * -cos(iTime * t)) + origin.y;\n    return xy;\n}\n\n//makes circle\nShape circle(vec2 p, float r, vec2 trans, vec3 col){\n    float sd = length(p - trans) - r;\n    return Shape(sd, col);\n}\n\n//makes blurry circle\nShape blurryCircle(vec2 p, float r, vec2 trans, vec3 col, float blur){\n    float sd = length(p - trans) - r;\n    sd = clamp(sd, -1., 1.);\n    if(sd > -blur && sd < 0.){\n        col = ((col - DARK_COL_BG) * (1. / blur) * -sd) + DARK_COL_BG;\n    }\n    \n    return Shape(sd, col);\n}\n\n//makes ring circle\nShape ringCircle(vec2 p, float r, vec2 trans, vec3 col, float width){\n    float sd = length(p - trans) - r;\n    sd = abs(sd) - width;\n    return Shape(sd, col);\n}\n\n//union operator\nShape opUnion(Shape a, Shape b){\n    if(a.sd < b.sd)\n        return a;\n    return b;\n}\n\n//makes all planet shapes\nShape planets(vec2 p){\n    Shape sun = circle(p, 0.25, SUN_POS, GRAY_COL);\n    Shape mercury = circle(p, 0.012, rot(SUN_POS, 0.32, 4.1476 * TIME_SCALE), GRAY_COL);\n    Shape venus = circle(p, 0.025, rot(SUN_POS, 0.38, 1.6222 * TIME_SCALE), GRAY_COL);\n    Shape earth = circle(p, 0.026, rot(SUN_POS, 0.45, TIME_SCALE), GRAY_COL);\n    Shape mars = circle(p, 0.02, rot(SUN_POS, 0.52, 0.5312 * TIME_SCALE), GRAY_COL);\n    \n    Shape belt = ringCircle(p, 0.6, SUN_POS, GRAY_COL, 0.001);\n    Shape ceres = circle(p, 0.01, rot(SUN_POS, 0.6, 0.2170 * TIME_SCALE), GRAY_COL);\n    \n    Shape jupiter = circle(p, 0.07, rot(SUN_POS, 0.85, 0.0842 * TIME_SCALE), GRAY_COL);\n    Shape saturn = circle(p, 0.06, rot(SUN_POS, 1.05, 0.0339 * TIME_SCALE), GRAY_COL);\n    Shape uranus = circle(p, 0.045, rot(SUN_POS, 1.23, 0.0118 * TIME_SCALE), GRAY_COL);\n    Shape neptune = circle(p, 0.04, rot(SUN_POS, 1.38, 0.0060 * TIME_SCALE), GRAY_COL);\n    Shape pluto = circle(p, 0.01, rot(SUN_POS, 1.83, 0.0040 * TIME_SCALE), GRAY_COL);\n    \n    Shape innerPlanets = opUnion(sun, opUnion(mercury, opUnion(venus, opUnion(earth, mars))));\n    Shape asteroidBelt = opUnion(belt, ceres);\n    Shape outerPlanets = opUnion(jupiter, opUnion(saturn, opUnion(uranus, opUnion(neptune, pluto))));\n    \n    return opUnion(innerPlanets, opUnion(asteroidBelt, outerPlanets));\n}\n\n//makes background\nShape bg(vec2 p){\n    Shape lightBgCirc = blurryCircle(p, 1.2, vec2(-1.5, -0.6), LIGHT_COL_BG, 0.7);\n    Shape medBgCirc = blurryCircle(p, 1., vec2(1.3, -0.9), MED_COL_BG, 0.3);\n    \n    return opUnion(lightBgCirc, medBgCirc);\n}\n\n//main\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //coordinates (adjusted)\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    uv *= 1.; //changes size of the animation, raise to 2 to see Pluto for most of the time.\n    vec3 col = DARK_COL_BG;\n    \n    Shape bgCol = bg(uv);\n    col = mix(col, bgCol.col, smoothstep(0.1 / iResolution.y, 0., bgCol.sd));\n    \n    Shape planets = planets(uv);\n    col = mix(col, planets.col, smoothstep(3. / iResolution.y, 0., planets.sd));\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}