{"ver":"0.1","info":{"id":"tlKSDW","date":"1582785165","viewed":440,"name":"Bloom test for VERAC","username":"BEN1JEN","description":"its a bloom effect, for VERAC the game (hhttps://github.com/BEN1JEN/racing-platformer). I can't remove the iChannel0 input for some reason, so only iChannel1 is used.","likes":5,"published":1,"flags":2,"usePreview":0,"tags":["bloom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nconst float bloomSize = 30.0;\nconst float bloomMultiplyer = 1.0;\nconst float bloomThresh = 0.25;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel colo\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    vec2 pixelSize = 1.0/iResolution.xy;\n    vec4 bloomColour;\n    float bloomLevel;\n    float levelWeight = 0.0;\n    for (float y = -bloomSize/2.0; y < bloomSize/2.0+1.0; y += 1.0) {\n        float j = y > 0.0 ? y : -y;\n        float rowSize = cos(asin(clamp(mod((j+ceil(bloomSize/2.0))/ceil(bloomSize+1.0), 0.5)+0.5, 0.0, 1.0)));\n        for (float x = floor(-bloomSize*rowSize/2.0); x < ceil(bloomSize*rowSize/2.0+1.0); x += 1.0) {\n            vec4 colour = texture(iChannel1, uv+vec2(x, y)*pixelSize);\n            float weight = 1.0/(sqrt(abs(x)+abs(y))+1.0)*sqrt(bloomSize);\n            float level = (colour.r+colour.g+colour.b)/3.0;\n\t\t\tlevel = level*level*level;\n            if (level < bloomThresh) {\n                level = 0.0;\n            }\n            bloomColour = max(bloomColour, colour);\n            bloomLevel += level*weight;\n            levelWeight += weight;\n        }\n    }\n    //bloomColour /= bloomLevel;\n    bloomLevel /= levelWeight;\n    bloomLevel *= bloomMultiplyer;\n    // Output to screen\n    if (uv.x > (iMouse.x+2.0)/iResolution.x) {\n\t    fragColor = texture(iChannel1, uv)*(1.0-bloomLevel)+bloomColour*bloomLevel;\n    } else if (uv.x < (iMouse.x-2.0)/iResolution.x) {\n\t    fragColor = texture(iChannel1, uv);\n    }\n}","name":"Image","description":"","type":"image"}]}