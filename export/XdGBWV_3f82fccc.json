{"ver":"0.1","info":{"id":"XdGBWV","date":"1530425828","viewed":335,"name":"texture gen","username":"MonterMan","description":"texturing experiment","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["texturing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(in vec2 p)\n{\n    p = fract(p * vec2(821.35, 356.17));\n    p += dot(p, p+23.5);\n    return fract(p.x*p.y);\n}\n\nfloat noise(in vec2 p)\n{\n    vec2 ipos = floor(p);\n    vec2 fpos = fract(p);\n    \n    float a = hash(ipos + vec2(0, 0));\n    float b = hash(ipos + vec2(1, 0));\n    float c = hash(ipos + vec2(0, 1));\n    float d = hash(ipos + vec2(1, 1));\n    \n    vec2 t = smoothstep(0.0, 1.0, fpos);\n    return mix(mix(a, b, t.x), mix(c, d, t.x), t.y);\n}\n\nfloat fbm(in vec2 p)\n{\n    p += 1.13;\n    \n    float res = 0.0;\n    float amp = 0.5;\n    float freq = 2.0;\n    for (int i = 0; i < 6; ++i)\n    {\n        res += amp*noise(freq*p);\n        amp *= 0.5;\n        freq *= 2.0;\n    }\n    return res;\n}\n\nvec3 palette(float t)\n{\n    vec3 a = vec3(1, 1, 1);\n    vec3 b = vec3(0, 0.3, 0);\n    vec3 c = vec3(1, 0.7, 0);\n    vec3 d = vec3(1, 0, 0);\n    \n    if (t < 0.333)\n    {\n        return mix(a, b, 3.0*t);\n    }\n    else if (t < 0.666)\n    {\t\n        return mix(b, c, 3.0*(t - 0.3333));\n    }\n    else\n    {\n        return mix(c, d, 3.0*(t - 0.6666));\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float time = iTime;\n    \n    float x = fbm(uv);\n    x = fbm(uv + x - 0.01*time);\n    x = fbm(uv + x + 0.03*time);\n    \n    vec3 col = palette(x);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}