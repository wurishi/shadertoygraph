{"ver":"0.1","info":{"id":"flV3Rh","date":"1700999182","viewed":22,"name":"Wall UV testbed","username":"Raxmo","description":"just a testbed","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["testbed"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 light = vec3(vec2(cos(iTime), sin(iTime * 2.0)) * 2.0, -1.0);\n    \n    vec3 lightdir = normalize(vec3(cos(iTime), sin(2.0 * iTime), 1.0));\n    \n    \n    \n    vec3 norm;\n    \n    norm.x = float(uv.x >= 0.75 && uv.x >= 1.0 - uv.y && uv.x >= uv.y) - float(uv.x <= 0.25 && uv.x <= uv.y && uv.x <= 1.0 - uv.y);\n    norm.y = float(uv.y >= 0.75 && uv.y >= 1.0 - uv.x && uv.y >= uv.x) - float(uv.y <= 0.25 && uv.y <= uv.x && uv.y <= 1.0 - uv.x);\n    norm.z = -1.0;\n    \n    float radius = 0.02;\n    uv = (uv - 0.5) * 2.0;\n    \n    norm.x = smoothstep(min(-abs(uv.y) - radius, -0.5 - radius), min(-abs(uv.y) + radius, -0.5 + radius), uv.x) - 1.0; \n    norm.x += smoothstep(max(abs(uv.y) - radius, 0.5 - radius), max(abs(uv.y) + radius, 0.5 + radius), uv.x);\n    \n    norm.y = smoothstep(min(-abs(uv.x) - radius, -0.5 - radius), min(-abs(uv.x) + radius, -0.5 + radius), uv.y) - 1.0;\n    norm.y += smoothstep(max(abs(uv.x) - radius, 0.5 - radius), max(abs(uv.x) + radius, 0.5 + radius), uv.y);\n    \n    \n    norm = normalize(norm);\n    \n    vec3 pos = vec3(uv, 1.0);\n    vec3 delta = light - pos;\n    \n    float val = dot(normalize(delta), norm);\n    // Output to screen\n    fragColor = vec4(vec3(val), 1.0);\n}","name":"Image","description":"","type":"image"}]}