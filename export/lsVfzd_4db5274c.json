{"ver":"0.1","info":{"id":"lsVfzd","date":"1530109761","viewed":472,"name":"Color fft","username":"OneManBand","description":"Color fft","likes":8,"published":1,"flags":4,"usePreview":0,"tags":["fft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\n// Hat function centered in c.\nfloat hat(float x, float c) {\n\treturn max(1.0-abs(x-c), 0.0);\n}\n\n\nvec3 mix_colors(vec3 c0, vec3 c1, vec3 c2, float f) {\n\treturn c0 * hat(f, 0.0) + c1 * hat(2.0*f, 1.0) + c2 * hat(f, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    //uv.x += (rand(uv*time+i)- 0.5) * 0.01;\n\n    //uv.x = abs(2.0*uv.x-1.0);\n\n\n    // Frequency.\n    float fft = texture(iChannel0, vec2(uv.x*uv.x*uv.x, 0.25)).x;\n    fft = pow(fft, 4.0);\n    //fft = smoothstep(0.4, 1.0, fft);\n    fft *= 5.0;\n\n\n    // Volume.\n    // float vol = texture(iChannel0, vec2(uv.x, 0.75)).x;\n\n    vec3 col = vec3(1.0) * abs(fft);\n    col *= hat(2.0*uv.y, 1.0); // vertically center the plot\n\n    vec3 low  = vec3(1.0, 0.0, 0.0);\n    vec3 mid  = vec3(0.0, 1.0, 0.0);\n    vec3 high = vec3(0.0, 0.0, 1.0);\n    col *= mix_colors(low, mid, high, uv.x*uv.x); // color based on x coordinate (frequency)\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}