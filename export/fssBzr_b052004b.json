{"ver":"0.1","info":{"id":"fssBzr","date":"1644461067","viewed":225,"name":"Night Drive","username":"TheHarmacist","description":"Followed a tutorial by user BigWIngs (Youtube: https://www.youtube.com/channel/UCcAlTqd9zID6aNX3TzwxJXg)","likes":8,"published":1,"flags":64,"usePreview":0,"tags":["night"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4lXSDf","filepath":"https://soundcloud.com/insight-music/andy-leech-the-journey?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/insight-music/andy-leech-the-journey?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a,b,t)\n\nstruct ray\n{\n    vec3 o, d;\n};\n\nray GetRay(vec2 uv, vec3 camPos, vec3 lookat, float zoom)\n{\n    ray a;\n    a.o = camPos;\n    \n    vec3 f = normalize(lookat-camPos);\n    vec3 r = cross(vec3(0,1,0),f);\n    vec3 u = cross(f,r);\n    vec3 c = a.o + f*zoom;\n    vec3 i = c + uv.x * r + uv.y * u;\n    \n    a.d = normalize(i - a.o);\n    \n    return a;\n}\n\nvec3 ClosestPoint(ray r, vec3 p)\n{\n    return r.o+ max(0.0, dot(p-r.o, r.d))*r.d;\n}\n\nfloat DistRay(ray r, vec3 p)\n{\n    return length(p-ClosestPoint(r,p));\n}\n\nfloat N(float t)\n{\n    return fract(sin(t*3456.0)*6547.0);\n}\n\nvec4 N14(float t)\n{\n    return fract(sin\n    (t*vec4(123.0,3456.0,1024.0,6743.0))\n    *vec4(8192.0, 312.0, 1337.0, 5678.0));\n}\n\n\nfloat Bokeh(ray r, vec3 p, float size, float blur)\n{\n   float d = DistRay(r,p);\n   size *= length(p);\n   float c = S(size, size*(1.0-blur), d);\n   c *= mix(0.6, 1.0, S(size*0.8,size,d)); \n   return c;\n}\n\nvec3 StreetLights(ray r, float t)\n{\n   float side = step(r.d.x, 0.0);\n   r.d.x = abs(r.d.x);\n   \n   float s = 1.0/10.0;\n   float m = 0.0;\n   for(float i =0.0;i<1.0;i+=s)\n   {\n       float ti = fract(t+i+side*s*0.5);\n       vec3 p = vec3(2.,2.,100.0-ti*100.0);\n       m += Bokeh(r, p, 0.05, 0.1)*ti*ti*ti;\n   }\n   return vec3(1.0,0.7,0.3)*m;\n}\n\n\nvec3 HeadLights(ray r, float t)\n{\n   t*=1.75;\n   float wi = 0.25;\n   float w2 = wi*1.2;\n   float s = 1.0/30.0;\n   float m = 0.0;\n   for(float i =0.0;i<1.0;i+=s)\n   {\n        float n = N(i);\n        if(n>0.1) \n        {\n            continue;\n        }\n        float ti = fract(t+i);\n        float z = 100.0-ti*100.0;\n        vec3 p = vec3(-1.0,0.15,z);\n        float fade = ti*ti*ti*ti*ti*ti;\n        float focus = S(0.9, 1.0, ti);\n        \n        float size = mix(0.05, 0.03, focus);\n        \n        m += Bokeh(r, vec3(-1.0-wi,0.15,z), size, 0.1)*fade;\n        m += Bokeh(r, vec3(-1.0+wi,0.15,z), size, 0.1)*fade;\n\n        m += Bokeh(r, vec3(-1.0-w2,0.15,z), size, 0.1)*fade;\n        m += Bokeh(r, vec3(-1.0+w2,0.15,z), size, 0.1)*fade;\n        \n        float ref = 0.0;\n        ref += Bokeh(r, vec3(-1.0-w2,-0.15,z), size*2.8, 1.0)*fade;\n        ref += Bokeh(r, vec3(-1.0+w2,-0.15,z), size*2.8, 1.0)*fade;\n        \n        \n        m+=ref*focus;\n        \n   }\n   return vec3(0.9,0.9,1.)*m;\n}\n\nvec3 TailLights(ray r, float t)\n{\n   t*=0.23;\n   float wi = 0.25;\n   float w2 = wi*1.2;\n   float s = 1.0/15.0;\n   float m = 0.0;\n   for(float i =0.0;i<1.0;i+=s)\n   {\n        float n = N(i);//0-1\n        if(n>0.5) \n        {\n            continue;//filter 0 - 0.5;\n        }\n        \n        float lane = step(0.25,n);\n        \n        \n        float ti = fract(t+i);\n        float z = 100.0-ti*100.0;\n        vec3 p = vec3(-1.0,0.15,z);\n        float fade = ti*ti*ti*ti*ti*ti;\n        float focus = S(0.9, 1.0, ti);\n        \n        float size = mix(0.05, 0.03, focus);\n        \n        float laneShift = S(1.0,0.96,ti);\n        float x = 1.5-lane*laneShift;\n        \n        float blink =  step(0.0,sin(t*1000.0))*7.0*lane*step(0.96, ti);\n        \n        m += Bokeh(r, vec3(x-wi,0.15,z), size, 0.1)*fade;\n        m += Bokeh(r, vec3(x+wi,0.15,z), size, 0.1)*fade;\n\n        m += Bokeh(r, vec3(x-w2,0.15,z), size, 0.1)*fade;\n        m += Bokeh(r, vec3(x+w2,0.15,z), size, 0.1)*fade*(1.0+blink);\n        \n        float ref = 0.0;\n        ref += Bokeh(r, vec3(x-w2,-0.15,z), size*3.0, 1.0)*fade;\n        ref += Bokeh(r, vec3(x+w2,-0.15,z), size*3.0, 1.0)*fade*(1.0+blink*0.1);\n        \n        \n        m+=ref*focus;\n        \n   }\n   return vec3(1,0.1,0.03)*m;\n}\n\nvec3 EnvLights(ray r, float t)\n{\n   float side = step(r.d.x, 0.0);\n   r.d.x = abs(r.d.x);\n  \n   float s = 1.0/7.0;\n   vec3 c = vec3(0.0);\n   for(float i =0.0;i<1.0;i+=s)\n   {\n       float ti = fract(t+i+side*s*0.5);\n       vec4 n = N14(i+side*100.0);\n       float fade = ti*ti*ti;\n       float occlusion = sin(ti*15.0*3.1415*n.x)\n       *0.5+0.5;\n       fade = occlusion;\n       float x = mix(2.5, 10.0, n.x); \n       float y = mix(0.1, 1.5, n.y);\n       \n       vec3 p = vec3(x,y,50.0-ti*50.0);\n       vec3 col = n.wzy;\n       c += Bokeh(r, p, 0.05, 0.1)*fade*col*0.25;\n   }\n   return c;\n}\n\nvec2 Rain (vec2 uv, float t)\n{\n    t*=40.0;\n    vec2 a = vec2(3.0,1.0);\n    vec2 st = uv*a;\n    \n    vec2 id = floor(st);\n    st.y+=t*0.21;\n    \n    float n = fract(sin(id.x*625.0)*144.0);\n    float x = fract(sin(id.x*625.0)*144.0);\n    st.y += n;\n    uv.y+= n;\n    id = floor(st);\n    st = fract(st)-0.5;\n    \n    t+=fract(sin(id.x*201.5+id.y*1321.714)*14.5)*6.283;\n    float y = -sin(t+sin(t+sin(t)*0.5))*0.43;\n    vec2 p1 = vec2(0.0, y);\n    vec2 o1 = (st-p1)/a;\n    float d = length(o1);\n    float m1 = S(0.07, 0.0, d);\n    vec2 o2 = (fract(uv*a.x*vec2(1.0,2.0))-0.5)/vec2(1.0,2.0);\n    d = length(o2);\n    float m2 = S(0.3*(0.5-st.y), 0., d)*S(-0.1, 0.1, st.y-p1.y);\n    \n    /*if(st.x>0.46||st.y>0.49)\n    {\n        m1=1.0;\n    }*/\n    return vec2(m1*o1*20.0+m2*o2*25.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n   vec2 mouse = iMouse.xy/iResolution.y;\n   vec3 camPos = vec3(0.5,0.2,0);\n   vec3 lookat = vec3(0.5,0.2,1.0);\n   float t  = iTime*0.05+mouse.x;\n   vec2 rainDistort = Rain(uv*4.0, t)*0.1;\n   rainDistort += Rain(uv*6.0, t)*0.15;\n   rainDistort += Rain(uv*13.0, t)*0.1;\n   //uv multiplier is rainDrop size, use co-primes\n   uv.x += sin(uv.y*40.0)*0.0015; \n   uv.y += sin(uv.x*170.0)*0.002;\n   //Remove comments to add distortion \n   ray r = GetRay(uv-(rainDistort*.75), camPos, lookat, 2.0);\n   //multiplier of rainDistort is rain intensity\n   \n   \n   vec3 col = StreetLights(r, t);\n   col+= HeadLights(r,t);\n   col+= TailLights(r,t);\n   col+= EnvLights(r,t);\n   \n   col+= (r.d.y+0.25)*vec3(0.2,0.1,0.5);\n   //col = vec3(rainDistort,0.);\n   fragColor = vec4(col,1.0);\n   \n}","name":"Image","description":"","type":"image"}]}