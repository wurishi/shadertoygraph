{"ver":"0.1","info":{"id":"ddfSzj","date":"1669267046","viewed":79,"name":"SliceVolumeTexture","username":"Mario8664","description":"VolumeTexture","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["volumetexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n   fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 uvw;\n    ivec3 fragCoord3D;\n    int size;\n    Get3DInfo(fragCoord, iResolution.xy, uvw, fragCoord3D, size);\n    \n    float sdf = 1.0 - distance(uvw, vec3(0.5));\n    sdf = floor(sdf + 0.48);\n    \n    fragColor = vec4(uvw, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"void Get3DInfo(in vec2 fragCoord, in vec2 resolution, out vec3 uvw, out ivec3 fragCoord3D, out int size)\n{\n    size = int(floor(pow(resolution.x * resolution.y, 1.0 / 3.0)));\n    ivec2 iFragCoord = ivec2(floor(fragCoord));\n    ivec2 iResolution = ivec2(floor(resolution));\n    \n    int size2D = size * size;\n    int pixelID = iFragCoord.x + iFragCoord.y * iResolution.x;\n    int tileID = pixelID / size2D;\n    int inTileID = pixelID % size2D;\n    fragCoord3D = ivec3(inTileID % size, inTileID / size, tileID);\n    uvw = vec3(fragCoord3D) / float(size);\n}\n\nvec4 texelFetch3D(in ivec3 fragCoord3D,in sampler2D tex,in int size,in ivec2 resolution)\n{\n    int size2D = size * size;\n    int pixelID = fragCoord3D.z * size2D + fragCoord3D.y * size + fragCoord3D.x;\n    ivec2 pixelID2D = ivec2(pixelID % resolution.x, pixelID / resolution.x);\n    return texelFetch(tex, pixelID2D, 0);\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    if(iFrame == 0)\n    {\n        fragColor = vec4(0.0);\n        return;\n    }\n    vec4 last = fragColor = texture(iChannel1, uv);\n    \n    vec3 uvw;\n    ivec3 fragCoord3D;\n    int size;\n    Get3DInfo(fragCoord, iResolution.xy, uvw, fragCoord3D, size);\n    \n    uv = fragCoord/iResolution.y;\n    float z = 1.0 - fract(iTime * 0.5);\n    if(z < 0.01)\n    {\n        fragColor = vec4(0.0);\n        return;\n    }\n    if(iMouse.z > 0.5)\n    {\n        z = iMouse.x / iResolution.y;\n    }\n    \n    uv *= 2.0;\n    uv -= 0.25 + 0.3 * z;\n    vec3 uvslice = vec3(uv, z);\n    if(uvslice.x < 0.0 || uvslice.y < 0.0 || uvslice.x > 1.0 || uvslice.y > 1.0)\n    {\n        fragColor = last;\n        return;\n    }\n    ivec3 iuvslice = ivec3(floor(uvslice * float(size)));\n\n    vec4 col = texelFetch3D(iuvslice, iChannel0, size, ivec2(iResolution.xy));\n    fragColor = mix(last, col, col.a);\n}","name":"Buffer B","description":"","type":"buffer"}]}