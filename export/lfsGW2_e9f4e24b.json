{"ver":"0.1","info":{"id":"lfsGW2","date":"1703577896","viewed":14,"name":"ValueNoise","username":"Leabemo","description":"A simple test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2dnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float radom(in vec2 i){\n    \n    return fract(sin(dot(i,vec2(12.9898,78.233))) * 43758.5453123);\n\n}\n\nfloat noise (in vec2 uv){\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n    float a = radom(i);    \n    float b = radom(i + vec2(1.0,0.0));\n    float c = radom(i + vec2(0.0,1.0));\n    float d = radom(i + vec2(1.0,1.0));\n    \n    // Smooth Interpolation\n    vec2 u = f*f*(3.-2.*f);\n    \n    float noise = mix(mix(a,b,u.x),mix(c,d,u.x),u.y);\n\n    return noise;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 pos = vec2(uv*5.0+iTime);\n    \n    // Use the noise function\n    float n = noise(pos);\n\n    // Output to screen\n    fragColor = vec4(vec3(n), 1.0);\n}","name":"Image","description":"","type":"image"}]}