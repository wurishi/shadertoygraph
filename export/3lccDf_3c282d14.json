{"ver":"0.1","info":{"id":"3lccDf","date":"1609991333","viewed":302,"name":"Snow Crystal Growth","username":"mherreshoff","description":"Snowflake algorithm from:\nhttps://patarnott.com/pdf/SnowCrystalGrowth.pdf\n\nTweak ALPHA, BETA, and GAMMA in 'Common' to get different snowflakes.","likes":12,"published":1,"flags":32,"usePreview":0,"tags":["snowflake","snow","ca","crystal","growth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define hue(v) ( .6 + .6 * cos( 6.3*(v) + vec4(0,23,21,0) ) )\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    vec2 R = iResolution.xy, uv = (U-.5*R)/R.y;\n\n    vec4 v = texture(iChannel0, mat2(1,0,.5,1.71)*(0.5*uv));\n    if (v.x < BETA) {\n       O = mix(vec4(0), vec4(0,.7,1.,0), 1.-smoothstep(0., BETA, v.x));\n    } else {\n       O = vec4(smoothstep(BETA, 1.,v.x));\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, in vec2 U )\n{\n    vec2 R = iResolution.xy, pw = 1./R, uv = U/R;\n    vec3 o = vec3(1,0,-1);\n#define N(swizzle) texture(iChannel0, uv+pw*o.swizzle)\n    vec4 v = N(yy);\n    vec4[6] n = vec4[6](N(xy), N(xx), N(yx), N(yz), N(zz), N(zy));\n    bool receptive = v.x >= 1.0;\n    for (int i = 0; i < 6; i++) {\n        receptive = receptive || (n[i].x >= 1.0); \n    }\n    O = vec4(v.x, float(receptive), 0, 0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 O, in vec2 U )\n{\n    vec2 R = iResolution.xy, pw = 1./R, uv = U/R;\n    vec3 o = vec3(1,0,-1);\n#define N(swizzle) texture(iChannel0, uv+pw*o.swizzle)\n    vec4 v = N(yy);\n    vec4[6] n = vec4[6](N(xy), N(xx), N(yx), N(yz), N(zz), N(zy));\n    float change;\n    change = (v.y == 1.0) ? GAMMA : -ALPHA*v.x;\n    float nrs = 0.0;\n    for (int i = 0; i < 6; i++) if(n[i].y == 0.0) nrs += n[i].x;\n    change += (nrs/6.0)*ALPHA;\n    O = vec4(v.x + change, 0,0,0);\n    if (iFrame < 10) {\n      O = vec4(BETA,0,0,0);\n      if (floor(U) == vec2(0,0))  O = vec4(1.1,0,0,0);\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define ALPHA 0.9 /* Diffusion rate. */\n#define BETA 0.40 /* Initial water density. */\n#define GAMMA 0.003 /* External condensation. */","name":"Common","description":"","type":"common"}]}