{"ver":"0.1","info":{"id":"3llcRl","date":"1592801003","viewed":97,"name":"2D Fractal","username":"capslpop","description":"This is my first project. The controls are not very good (mouse).","likes":1,"published":1,"flags":16,"usePreview":0,"tags":["fractal","experimental","realtime"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nControlsL:\nUse the mouse to move around\n\nThanks FabriceNeyret2 for the hlep!\n*/\nvec2 C;\nvec2 Z;\nfloat maxIteration = 60.0; //This controls the iterations of the Fractal \nfloat disx = 1.0;\nfloat iterations = 0.0;\nfloat scale = 1.0;\nconst float speed = 15.0; //This is the speed of the zoom in\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    scale = speed/(iTime);\n    C.x = uv.x * scale - ((iMouse.x) / (iResolution.x/2.0) + ((speed/2.0)/iTime)) + 1.0;\n    C.y = uv.y * scale - ((iMouse.y) / (iResolution.y/2.0) + (7.5/iTime)) + 1.0;\n    Z = vec2(0);\n    iterations = 0.0;\n    while ( Z.x < maxIteration && Z.y < maxIteration && iterations < maxIteration)\n    {\n        Z = mat2(Z,-Z.y,Z.x) * Z + C;\n        //Z = mat2(Z,-Z.y,Z.x) * Z * Z.y + C ;\n        iterations++;\n    }\n    \n    // Output to screen\n    fragColor = vec4(iterations / maxIteration, 0.5 / (iterations / maxIteration), C.x * C.y, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}