{"ver":"0.1","info":{"id":"4sdGRr","date":"1447759844","viewed":425,"name":"unicorn crystal puke","username":"nicoptere","description":"one has to start somewhere...","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","cells"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define PI 3.1415926535897932384626433832795\n\nfloat hash(in float n)\n{\n    return fract(sin(n)*43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float time = iTime;\n    \n    //\"squarified\" coordinates \n\n\tvec2 xy = ( 2.* fragCoord -iResolution.xy ) / iResolution.y ;\n\n    //rotating light \n    vec3 lightDir = vec3( sin( time ), 1., cos( time * .5 ) );\n    \n    const float count = 200.;\n    \n    vec3 pp = vec3(0.);\n    float length = 1e10;\n    for( float i = 0.; i < count; i+=1. )\n    {\n        //random cell\n        float an = sin( time * PI * .00001 ) - hash( i ) * PI * 2.;\n        float ra = sqrt( hash( an ) );\n\n    \tvec2 p = vec2( lightDir.x + cos( an ) * ra, lightDir.z + sin( an ) * ra );\n\n        //finds the closest cell center from XY coords\n        float di = distance( xy, p );\n        length = min( length, di );\n        if( length == di )\n        {\n            pp.xy = p;\n            pp.z = i / count * ( xy.y*xy.x );\n        }\n    }\n\n    //shimmy shake\n    fragColor = vec4( pp + vec3( 1.) * ( 1.- max( 0.0, dot( pp, lightDir)) ), 1. );\n\n}","name":"","description":"","type":"image"}]}