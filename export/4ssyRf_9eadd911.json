{"ver":"0.1","info":{"id":"4ssyRf","date":"1489163736","viewed":118,"name":"Checkerboard overlay","username":"battlebottle","description":"my first shader...","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(vec3 p)  // replace this by something better\n{\n    p  = fract( p*0.3183099+.1 );\n\tp *= 17.0;\n    return fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\t\n    return mix(mix(mix( hash(p+vec3(0,0,0)), \n                        hash(p+vec3(1,0,0)),f.x),\n                   mix( hash(p+vec3(0,1,0)), \n                        hash(p+vec3(1,1,0)),f.x),f.y),\n               mix(mix( hash(p+vec3(0,0,1)), \n                        hash(p+vec3(1,0,1)),f.x),\n                   mix( hash(p+vec3(0,1,1)), \n                        hash(p+vec3(1,1,1)),f.x),f.y),f.z);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord ;//+ vec2(sin(iTime / 10.0 + fragCoord.y / 10.0) * 10.0, sin(iTime / 10.0 + fragCoord.x / 10.0) * 10.0);\n    \n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float power = floor(mod(iTime * 0.5, 6.0)) + 4.0;\n    float offset = iTime * 60.0;\n    float valx = floor(mod((coord.x - offset) / pow(2.0, power), 2.0));\n    float valy = floor(mod((coord.y + offset) / pow(2.0, power), 2.0));\n    float val = floor(mod(valx + valy, 2.0))/1.0 + 0.0;\n    \n    vec4 col = vec4(1.0 - uv.x, uv.x, 0.0, 1.0);\n    \n    \n    vec4 noiseval = vec4(noise(vec3(fragCoord * 16.0, 1.0)), noise(vec3(fragCoord * 16.0, 2.0)), noise(vec3(fragCoord * 16.0, 3.0)), 1.0) / 64.0;\n    \n    vec4 video = texture(iChannel0, uv);\n    \n\tfragColor = 1.0 - col * val;\n\tfragColor = 1.0 - col * val + noiseval;\n    fragColor = (video * 0.8) * (1.0 - val) + fragColor * val;\n}","name":"Image","description":"","type":"image"}]}