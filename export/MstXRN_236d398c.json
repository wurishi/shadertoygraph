{"ver":"0.1","info":{"id":"MstXRN","date":"1458100927","viewed":313,"name":"Sound Lesson #1, Sound Effect","username":"hubbe","description":"Boing Sound effect, combining echo, exponential decay and a vibrato.","likes":5,"published":1,"flags":8,"usePreview":0,"tags":["educational"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Just wobble a bit to go with the sound effect.\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float pi = 3.15159265;\n    float a = sin(iTime * 5.0 * pi) * exp(-3.0 * iTime);\n    float s = sin(a);\n    float c = cos(a);\n    uv = mat2(c, s, -s, c) * uv;\n\tfragColor = vec4(uv,0.5+0.5*a,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"// For a given time, return a vec2(left sample, right sample)\nvec2 ding(float t) {\n  float pi = 3.15159265;\n  float frequency = 400.0;\n  float waveTime = pi * 2.0 * frequency * t;\n  // Add vibrato, goes up and down 2.5 times per second.\n  // Vibrato can also be done by adding/multiplying the frequency a sin() call.\n  waveTime += 100.0 * sin(t * 5.0 * pi);\n  \n  // Basic waveform, this one goes on for ever.\n  float samp = sin(waveTime);\n\n  // Exponential decay makes the sound fade out over time  \n  samp *= exp(-3.0 * t);\n    \n  return vec2(samp);\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    // Create an echo-like effect by calling ding() with a few different\n    // time offsets, then multiply down the sounds.\n    return ding(time) +\n           ding(time - 0.2) * 0.3 +\n           ding(time - 0.34) * 0.2 +\n           ding(time - 0.5) * 0.1;\n}","name":"Sound","description":"","type":"sound"}]}