{"ver":"0.1","info":{"id":"4dVXRV","date":"1470700153","viewed":461,"name":"2D Shadows Attempt","username":"jackdavenport","description":"A 2D shadow simulation.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","shadow","spheres","distance","lights"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 lightPos = vec2(0., .35);\n\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat circle(vec2 p, float r, vec2 uv) {\n \n    return length(p-uv)-r;\n    \n}\n\nfloat scene(vec2 uv) {\n    \n   \tfloat dst = circle(vec2(-.25,-.04),.1,uv);\n    dst \t  = smin(dst, circle(vec2(-.12,.14),.1,uv), .125);\n    dst \t  = min(dst, circle(vec2(-.5,-.25),.1,uv));\n    dst \t  = min(dst, circle(vec2(.5,-.25),.1,uv));\n    \n   \treturn dst;\n              \n}\n\nvec3 shade(vec2 uv) {\n \n    float scn = scene(uv);\n    vec3  col = vec3(0.,.5,.5);\n    \n    float s = 1.;\n    if(scn <= 0.) {\n     \n        col = vec3(1., 0., 0.);\n        s += .85;\n        \n    }\n\n    vec2 lv = lightPos - uv;\n    vec2 ld = normalize(lv);\n    float a = length(lv);    \n    \n    float t = 0.;\n    for(int i = 0; i < 128; i++) {\n        if(t > a)\n            break;\n    \tfloat dst = scene(uv+ld*t);\n        t += dst * .85;\n        if(dst < .0001) {\n        \ts -= .85;\n            break;   \n        }\n    }\n    col *= s;\n    //col = vec3(ld,0.);\n    \n    float flare = 1.-smoothstep(0.,.25,distance(uv,lightPos));\n    col += flare;\n    \n    return col;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv    = (fragCoord.xy - iResolution.xy * .5) / iResolution.y;\n    lightPos.x = .75 * sin(iTime);\n    lightPos.y = .35;\n    if(iMouse.z > 0.) {\n        lightPos = 2. * (iMouse.xy / iResolution.xy) - 1.;\n    }\n\tfragColor  = vec4(shade(uv),1.);\n}","name":"Image","description":"","type":"image"}]}