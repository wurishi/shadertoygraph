{"ver":"0.1","info":{"id":"4ldSDH","date":"1479491048","viewed":284,"name":"The Catalyst","username":"Aert","description":"Live animation of the Linkin Park \"Catalyst\" image.","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","linkinpark"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":2,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Artur Kovacs - 2016\n// Licenced under: Creative Commons Attribution 4.0 International License\n\n\n\nfloat distXOffset(float xOffset, vec2 pos)\n{\n    vec2 center = iResolution.xy * 0.5;\n\tfloat r = min(iResolution.x, iResolution.y)*0.5;\n    return distance(vec2(pos.x+xOffset, pos.y), center) / r;\n}\n\nfloat saturate(float x)\n{\n    return clamp(x, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 pos )\n{\n    float t = iTime;\n    vec2 uv = pos / iResolution.xy;\n    \n    vec2 center = iResolution.xy * 0.5;\n\tfloat r = min(iResolution.x, iResolution.y)*0.5;\n    \n    float cDist = distance(pos, center);\n    cDist /= r;\n    \n    float hFreqY = texture(iChannel0, vec2(t*0.5, pos.y*0.02)).x;\n    float lFreq = texture(iChannel1, vec2((pos.x/iResolution.x)*0.5+t*0.1, (pos.y/iResolution.y)*0.2)).x;\n    \n    float hFreqY2 = texture(iChannel0, vec2(t*0.5+0.3, pos.y*0.02)).x;\n    float lFreq2 = texture(iChannel1, vec2((pos.x/iResolution.x)*0.5+t*0.1+0.3, (pos.y/iResolution.y)*0.2)).x;\n    \n    float ripple1 = 1.0-smoothstep(0.8, 0.81, distXOffset(((hFreqY*2.0-1.0)*lFreq)*r*0.2+(lFreq*2.0-1.0)*r*0.2, pos));\n    float mask1 = smoothstep(0.8, 0.81, cDist);\n    \n    float mask2 = 1.0-mask1;\n    float ripple2 = smoothstep(0.8, 0.81, distXOffset( (hFreqY2*2.0-1.0)*lFreq2*r*0.3+(lFreq2*2.0-1.0)*r*0.2, pos));\n    \n    vec2 bgpos = vec2(ceil(t*0.75+sin(t*1.3)))*vec2(1.3, 3.21)+vec2(sin(t*20.1)*0.2, (1.0+cos(t*75.7))*0.2)*0.001;\n    float background = smoothstep(0.5, 0.8, texture(iChannel1, vec2(0, pos.x*2.01)-bgpos*r*0.5).x);\n    background += pow(texture(iChannel2, vec2(pos.x*1.003, pos.y*1.003)-bgpos*r*0.5).x, 2.0);\n    background *= 1.0-step(0.5, texture(iChannel1, vec2(0, uv.y*8.0)-bgpos).x)*pow(texture(iChannel1, vec2(uv.x+0.7, uv.y)-bgpos).x, 2.0);\n    background = saturate(background);\n    background *= pow(texture(iChannel1, vec2(uv.x*0.05+0.5, uv.y*0.05)-bgpos).x, 2.0);\n    background *= pow(texture(iChannel1, vec2(uv.x*0.05, uv.y*0.05)-bgpos).x, 4.0);\n    \n    \n    float grains = step(0.87, pow(cos(uv.x*3.0+t*41.0)*cos(uv.y*2.5+t*-23.0), 8.0)*texture(iChannel1, vec2(t*11.3, t*5.1)+vec2(uv.x*1.0, uv.y*2.0)).x);\n    grains += step(0.87, pow(cos(uv.x*2.5+t*-17.0)*cos(uv.y*3.5+t*-31.0), 8.0)*texture(iChannel1, vec2(t*7.1, t*11.1)+vec2(uv.x*3.0, uv.y*1.0)).x);\n    grains += step(0.89, pow(cos(uv.x*16.4+t*-15.2)*cos(uv.y*12.7+t*-70.2), 2.0)*texture(iChannel1, vec2(t*1.3, t*3.01)+vec2(uv.x*4.3, uv.y*4.2)).x);\n    \n    float shade = smoothstep(0.5, 0.51, cDist);\n    \n    shade = mix(shade, 1.0-shade, min(1.0, ripple1*mask1 + ripple2*mask2 + grains));\n    \n    shade = saturate(shade-background);\n    \n\tfragColor = vec4(vec3(shade*0.9),1.0);\n}\n","name":"Image","description":"","type":"image"}]}