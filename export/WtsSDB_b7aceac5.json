{"ver":"0.1","info":{"id":"WtsSDB","date":"1564139181","viewed":522,"name":"Sprite Animator","username":"BigETI","description":"This shader animates a sprite with a given sprite sheet.","likes":2,"published":3,"flags":64,"usePreview":0,"tags":["sprite","animator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Mts3zX","filepath":"https://soundcloud.com/techno-sound/nyan-cat-song","previewfilepath":"https://soundcloud.com/techno-sound/nyan-cat-song","type":"musicstream","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Animator settings\nconst int spriteSheetChannelIndex = 0;\n\nconst int backgroundChannelIndex = 1;\n\nconst vec3 backgroundColor = vec3(0.0, 52.0 / 255.0, 102.0 / 255.0);\n\nconst vec2 spriteSize = vec2(36.0, 22.0);\n\nconst vec2 spriteOffset = vec2(1.0, 5.0);\n\nconst vec2 spriteSpacing = vec2(4.0, 0.0);\n\nconst int columns = 6;\n\nconst float animationCycleTime = 60.0 / 142.0;\n\nconst int animation[] = int[](0, 1, 2, 3, 4, 5);\n\n// Pre-computed values\nconst float animationDeltaTime = animationCycleTime / float(animation.length());\n\n// Functions\nvec3 alphaBlendChannel(in int channelIndex, in vec2 uv, in vec3 backColor)\n{\n    vec4 color = vec4(backColor, 1.0);\n    switch (channelIndex)\n    {\n        case 0:\n            color = texture(iChannel0, uv);\n            break;\n        case 1:\n            color = texture(iChannel1, uv);\n            break;\n        case 2:\n            color = texture(iChannel2, uv);\n            break;\n        case 3:\n            color = texture(iChannel3, uv);\n            break;\n    }\n    return mix(backColor, color.xyz, color.a);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    int current_frame = animation[int(floor(iTime / animationDeltaTime)) % animation.length()];\n    fragColor = vec4(alphaBlendChannel(spriteSheetChannelIndex, vec2(((uv.x * spriteSize.x) + spriteOffset.x + ((spriteSize.x + spriteSpacing.x) * float(current_frame % columns))) / iChannelResolution[spriteSheetChannelIndex].x, ((uv.y * spriteSize.y) + spriteOffset.y + ((spriteSize.y + spriteSpacing.y) * float(current_frame / columns))) / iChannelResolution[spriteSheetChannelIndex].y), alphaBlendChannel(backgroundChannelIndex, uv, backgroundColor)), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}