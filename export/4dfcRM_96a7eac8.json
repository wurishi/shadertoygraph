{"ver":"0.1","info":{"id":"4dfcRM","date":"1487343851","viewed":106,"name":"Psych√©BlackHole","username":"TromasWideos","description":"I Don't know what to do with the big fat cos","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pbh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 color, in vec2 pixCoords )\n{\n    pixCoords.xy -= iResolution.xy / 2.0;\n    \n\tfloat rayonTerre = iResolution.y / 12.0;\n    \n    float rayonSoleil= iResolution.y / 6.0;\n    \n    /*float distanceTerre = sqrt(pow(pixCoords.x, 2.0) + pow(pixCoords.y, 2.0));\n    \n    \n    vec2 centreTerre =  vec2(rayonTerre - pixCoords.x - iResolution.x / 3.0, rayonTerre - pixCoords.y);\n    \n    \n    vec2 normalizedDistance = centreTerre / distanceTerre;\n    \n    float angleAlpha = (centreTerre.x * normalizedDistance.x) + (centreTerre.y * normalizedDistance.y);\n    */\n\n    vec2 distanceTerre = vec2(sqrt(pow(pixCoords.x, 2.0)), sqrt(pow(pixCoords.y, 2.0)));\n    \n    vec2 lumVector = vec2(sin(iTime),cos(iTime));\n    \n    vec2 centreTerre =  vec2(rayonTerre - pixCoords.x - iResolution.x / 3.0, rayonTerre - pixCoords.y);\n    \n    vec2 normalizedDistance = normalize(distanceTerre);\n    vec2 normalizeLum\t\t= normalize(lumVector);\n    \n    float angleAlpha = (normalizedDistance.x * normalizeLum.x) + (normalizedDistance.y * normalizeLum.y);\n    \n    color = vec4(1.0, 0.4, 0.7, 1.0) * sin(angleAlpha * iTime / 9.0);\n    \n    if (0.0 <= rayonTerre){\n        color = vec4(0.1, 0.3, 0.5, 1.0) * cos(angleAlpha * iTime / 1.0);\n    }\n   \n}","name":"Image","description":"","type":"image"}]}