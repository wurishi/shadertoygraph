{"ver":"0.1","info":{"id":"MXlfWB","date":"1728879052","viewed":32,"name":"Value Noise 2D 0934","username":"Ponjee","description":"Basic Value Noise shader\nValue noise interpolates between each pixel similarly to how texture() in glsl looks.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","value"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481;\n\nvec4 exp_sin_lerp(vec4 a, vec4 b, float t, float s) {\n    //float v1 = 0.0 + (0.5 - 0.0) * (1.0 - pow(1.0 - 2.0 * t, s));\n    //float v2 = 0.5 + (1.0 - 0.5) * pow(2.0 * s - 1.0, s);\n    float v1 = 0.0 + (0.5 - 0.0) * pow(2.0 * t, s);\n    float v2 = 0.5 + (1.0 - 0.5) * (1.0 - pow(2.0 - 2.0 * t, s));\n    return a + (b - a) * ( t < 0.5 ?  v1 : v2);\n}\n\nvec4 get_value_2d(vec2 p) {\n    p -= 0.5;\n    float xmin = floor(p.x);\n    float xmax = ceil(p.x);\n    float ymin = floor(p.y);\n    float ymax = ceil(p.y);\n    \n    vec4 cc1 = texelFetch(iChannel0, ivec2(xmin, ymin), 0);\n    vec4 cc2 = texelFetch(iChannel0, ivec2(xmax, ymin), 0);\n    vec4 cc3 = texelFetch(iChannel0, ivec2(xmin, ymax), 0);\n    vec4 cc4 = texelFetch(iChannel0, ivec2(xmax, ymax), 0);\n    \n    float s = 1.0/(cos(iMouse.z > 0.0 ? ((iMouse.x/iResolution.x)*PI) : iTime)*0.5+0.5);\n    \n    vec4 lx1 = exp_sin_lerp(cc1, cc2, p.x-xmin, s);\n    vec4 lx2 = exp_sin_lerp(cc3, cc4, p.x-xmin, s);\n    \n    vec4 d = exp_sin_lerp(lx1, lx2, p.y-ymin, s);\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-vec2(0.5));\n    uv *= 0.03;\n    \n    float l = 1.0;\n    \n    vec4 value = get_value_2d(uv);\n    fragColor = vec4(value);\n}","name":"Image","description":"","type":"image"}]}