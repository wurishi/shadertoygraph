{"ver":"0.1","info":{"id":"wdcGz2","date":"1568854759","viewed":270,"name":"Seven Segment Display","username":"PyBlend","description":"simple LCD/seven segment display-style counter","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["sevensegmentdisplay"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// numbers = [119, 18, 93, 91, 58, 107, 111, 82, 127, 123]\nvec2 tl = vec2(-.5,  1); // top    left  corner\nvec2 tr = vec2( .5,  1); // top    right corner\nvec2 ml = vec2(-.5,  0); // mid    left  corner\nvec2 mr = vec2( .5,  0); // mid    right corner\nvec2 bl = vec2(-.5, -1); // bottom left  corner\nvec2 br = vec2( .5, -1); // bottom right corner\n\nconst int encoding[10] = int[] (119, 18, 93, 91, 58, 107, 111, 82, 127, 123);\n\nfloat Manhattan( vec2 v )\n{\n    return abs(v.x) + abs(v.y);\n}\n\nfloat Line( vec2 a, vec2 b, vec2 p )\n{\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float t = clamp(dot(pa, ba)/dot(ba,ba), 0.11, .89); // 0.11 and .89 for gaps\n    return smoothstep(.1, .09, Manhattan(pa - ba*t));\n}\n\nint Encode( int n )\n{   \n    n = int(mod(float(n), 10.0));\n    return encoding[n];\n    /*\n\n\tThanks s23b for the help :)\n\n\tswitch(n)\n    {\n    \tcase(0):\n        \treturn 119;\n        case(1):\n        \treturn 18;\n        case(2):\n        \treturn 93;\n        case(3):\n        \treturn 91;\n        case(4):\n        \treturn 58;\n        case(5):\n        \treturn 107;\n        case(6):\n        \treturn 111;\n        case(7):\n        \treturn 82;\n        case(8):\n        \treturn 127;\n        case(9):\n        \treturn 123;\n    }\n    return 119;\n\t*/\n}\n\nfloat SegDisp( int key, vec2 p )\n{\n    float r = 0.0;\n    if ((key & 64) == 64) { r += Line(tl, tr, p);}\n    if ((key & 32) == 32) { r += Line(tl, ml, p);}\n    if ((key & 16) == 16) { r += Line(tr, mr, p);}\n    if ((key & 8 ) == 8 ) { r += Line(ml, mr, p);}\n    if ((key & 4 ) == 4 ) { r += Line(ml, bl, p);}\n    if ((key & 2 ) == 2 ) { r += Line(mr, br, p);}\n    if ((key & 1 ) == 1 ) { r += Line(bl, br, p);}\n    return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n    \n    float d = 0.0;\n    float n = mod(iTime, 1000.0);\n    d += SegDisp(Encode(int(mod(n/100.0, 10.0))), (uv+vec2(.5, 0))*3.0);\n    d += SegDisp(Encode(int(mod(n/10.0 , 10.0))), uv*3.0);\n    d += SegDisp(Encode(int(mod(n/1.0  , 10.0))), (uv-vec2(.5, 0))*3.0);\n\td = smoothstep(-.5, 1.0, d);\n    \n    col = vec3(.8, 0.1, 0.2) * d;\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}