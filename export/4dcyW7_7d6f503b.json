{"ver":"0.1","info":{"id":"4dcyW7","date":"1519250687","viewed":2335,"name":"Retro Sun","username":"FraglessPlayer","description":"Retro sun test effect","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["suneffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define tri(t, scale, shift) ( abs(t * 2. - 1.) - shift ) * (scale)\n\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \tvec2 R = iResolution.xy,\n    uv = ( fragCoord - .5* R ) / R.y + .5;\n    \n    // sun\n    float dist = length(uv-vec2(0.5,0.5));\n    float divisions = 6.0;\n    float divisionsShift= 0.5;\n\t\n    float pattern = tri(fract(( uv.y + 0.5)* 20.0), 2.0/  divisions, divisionsShift)- (-uv.y + 0.26) * 0.85;\n    float sunOutline = smoothstep( 0.0,-0.015, max( dist - 0.315, -pattern)) ;\n   \n    vec3 c = sunOutline * mix(vec3( 4.0, 0.0, 0.2), vec3(1.0, 1.1, 0.0), uv.y);  \n    \n    // glow \n    float glow = max(0.0, 1.0 - dist * 1.25);\n    glow = min(glow * glow * glow, 0.325);\n    c += glow * vec3(1.5, 0.3, (sin(iTime)+ 1.0)) * 1.1;\n\n \n    vec2 ground;\n    \n    vec2 planeuv = uv;\n /* ground in progress\n    planeuv.x =  (planeuv.x - 0.5) * (-planeuv.y) + 0.5;\n    //    planeuv.y *= planeuv.y; \n    \n    planeuv.y += (iTime  ) * 0.13;\n    ground.x = tri(fract(( planeuv.x + 0.5)* 10.0), 1.0/10.0, 0.0);\n    ground.y = tri(fract(( planeuv.y + 0.5)* 10.0), 1.0/10.0, 0.0);     \n    \n    float groud_lines = smin(ground.x,ground.y, 0.015);\n   \tfloat ground_glow = smin(ground.x,ground.y, 0.06);\n    \n    float ground_line_color =  smoothstep( 0.01,-0.01, groud_lines);\n    float ground_color =  smoothstep( 0.08,-0.0, ground_glow);\n    c = vec3(1.5,2,1) * ground_line_color + vec3(0.1,0.2,0.4) *ground_color;*/\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}