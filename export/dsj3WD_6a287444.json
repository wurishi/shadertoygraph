{"ver":"0.1","info":{"id":"dsj3WD","date":"1667638449","viewed":72,"name":"Question 1 Joshua Lim","username":"joshualim007","description":"Starting point for Question 1 - Texture Spin\n\nChangelog:\n-Added rotation matrix\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["texture"],"hasliked":0,"parentid":"4tffR2","parentname":"Question 1 - Texture Spin"},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    // limit rendering to the lower left of the screen\n    const float size = 258.0;    \n    if (fragCoord.x > size || fragCoord.y > size)\n    {\n        fragColor = vec4(0.0);\n        return;\n    }\n    \n    // calculate uv\n\tvec2 uv = fragCoord/size;\n    \n    \n    float cosA = cos(iTime);\n    float sinA = sin(iTime);\n    \n    //create rotation matrix\n    mat2 rotMatrix = mat2(vec2(cosA, -sinA), vec2(sinA, cosA));\n    \n    //offset to center\n    uv -= 0.5;\n    //apply rotation matrix\n    uv = rotMatrix * uv;\n    //restore uv offset\n    uv += 0.5;\n\n    \n    // sample texture\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}