{"ver":"0.1","info":{"id":"dt3yR4","date":"1698933827","viewed":42,"name":"Fractal Polar2D","username":"JAMERES","description":"Fractal Polar2D","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float radii = 0.5;\nfloat sdf(vec2 pos)\n{\n    return length(pos)-radii;\n}\nvec2 polar(vec2 pos)\n{\n    return vec2(length(pos), atan(pos.y/pos.x));\n    \n}\n\n#define mode 0\n\nfloat map(vec2 pos)\n{\n    float dist = 0.0;\n    pos = polar(pos);\n    float f = 1.0;\n    \n    for(int i=0;i<5;i++){\n        \n        \n        f = f*2.0;\n        \n        vec2 mapped = mod(pos/3.0, 1.0/f) * f;\n        \n        if(mode==0){\n            float dist_new = sdf(mapped) * -1.0;\n            dist = max(dist, dist_new);\n        }\n        if(mode==1){\n            float dist_new = sdf(mapped);\n            dist = min(dist, dist_new);\n        }\n        \n    \n    }\n    \n    return dist;\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord)/iResolution.xy;\n    vec2 ndc = uv*2.0 - 1.0;\n    \n\n    // Time varying pixel color\n    vec3 col = vec3(map(ndc));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}