{"ver":"0.1","info":{"id":"NtVGRD","date":"1637312007","viewed":159,"name":"Simple Metal Plates","username":"InvalidString","description":"A grid of overlapping metal plates","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["simple","cheap","metal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Hash without Sine\n// Creative Commons Attribution-ShareAlike 4.0 International Public License\n// Created by David Hoskins.\n// https://www.shadertoy.com/view/4djSRW\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n\nvec3 plate(vec2 id, vec2 uv){\n    vec3 col = vec3(-1);\n    \n    \n    vec2 r = hash22(id);\n    float r2 = hash12(id);\n    \n    vec2 p = uv;\n    \n    p += r2;\n    \n    uv = abs(uv);\n    \n    vec2 dim = vec2(.6,.6) + r * .4;\n\n    if(uv.x < dim.x && uv.y < dim.y){\n        col = mix(vec3(.3, .3, .3), vec3(.7, .7, .7), r2) * 1. + 0.1 * texture(iChannel0, p).x;\n        \n        \n        if(length(uv - dim + vec2(.1)) < .05){\n            col = vec3(.4);\n        }\n        \n    }\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0);\n    \n    vec2 uv = (fragCoord-.5*iResolution.xy) / iResolution.y;\n    uv *= 10.;\n\n    uv += iTime;\n\n\n    vec2 off = floor(uv);\n    \n    float depth = 0.;\n    for(int x = -1; x <= 1; x++){\n        for(int y = -1; y <= 1; y++){\n            vec2 id = off + vec2(x,y);\n            float plateDepth = hash12(id + vec2(.5,.5));\n            vec3 c = plate(id, uv - id);\n            if(c != vec3(-1) && plateDepth > depth){\n                depth = plateDepth;\n                col = c;\n            }\n            \n        }\n    \n    }\n    \n    \n    \n\n\n    \n    \n    \n\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}