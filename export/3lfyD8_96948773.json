{"ver":"0.1","info":{"id":"3lfyD8","date":"1591900330","viewed":88,"name":"Triangle to Teeth To Lotus","username":"tic_is_mad","description":"Testing rotation madness","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["experimental"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nfloat circle(in vec2 _st, in vec2 center, in float _radius)\n{\n    vec2 dist = _st - center;\n    float borderSize = _radius * 0.01;\n    return 1.0 - smoothstep(_radius - borderSize, _radius + borderSize, 4.0 * dot(dist, dist));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n    //st.x *= iResolution.x / iResolution.y;\n    st *= 3.0;\n    st = fract(st);\n    float angle = PI * iTime * 0.4 * st.x;\n    st -= 0.5;\n    st = mat2(cos(angle), -sin(angle), sin(angle), cos(angle)) * st;\n    st += 0.5;\n    // uv = uv * 2.0 - 1.0;\n    vec3 color = vec3(0.0);\n    // color = mix(color, vec3(1.0), circle(uv, vec2(0.5), 1.0));\n    //float d = length(abs(uv) - 0.3);\n    //color = vec3((d * 10.0));\n    \n    int N = 3;\n    st = st * 2.0 - 1.0;\n    float r = TWO_PI / float(N);\n    float a = atan(st.x, st.y) + PI;\n    \n    //float f = abs(cos(a*3.0));\n    //color = vec3(1.0 - smoothstep(f, f+0.02, r));\n    \n  \n    float d = cos(floor(.5+a / r) * r-a)*length(st);\n\n    d = 1.0-smoothstep(.4,.41,d);\n    \n    vec3 bloodColor = vec3(1.0, 0.2 + 0.05 * cos(iTime), 0.25 + 0.05 * sin(iTime));\n    color = mix(color, bloodColor, d);\n               \n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}