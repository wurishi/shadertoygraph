{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Spooky Glow Hexagon Tiles\n    12/13/2024  @byt3_m3chanic\n    \n    Some unpublished shader from last year on my truchet kick, just did some re-work \n    and a fancy glow effect using fragcoords with a chromatic effect\n    \n    original series\n    https://www.shadertoy.com/view/XcKSRc\n    https://www.shadertoy.com/view/McGSzK\n    \n*/\n\n#define COLOR(COORD) texture(iChannel0,(COORD))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n\n\tvec2 uv = fragCoord.xy/iResolution.xy;    \n    vec3 color = COLOR(uv).rgb;\n    // effect sammple\n    vec3 fgclr = vec3(0.);\n    float f = length(uv  - 1.75);\n    fgclr.x = COLOR(uv - vec2(f*0.001, .002)).x;\n    fgclr.y = COLOR(uv + vec2(f*0.001, .000)).y;\n    fgclr.z = COLOR(uv + vec2(f*0.002, .001)).z;\n \n    // mask for effect and mixdown \n    float dt = distance(uv.xy,vec2(.5))*2.15;\n    dt = smoothstep(0.,.95,1.-dt);\n    vec3 C = mix(fgclr,color,dt);//vec3(dt);//\n    // output -gamma correct\n    fragColor = vec4(pow(C, vec3(0.4545)),1.);\n\n}","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Spooky Glow Hexagon Tiles\n    12/13/2024  @byt3_m3chanic\n    \n    Some unpublished shader from last year on my truchet kick, just did some re-work \n    and a fancy glow effect using fragcoords with a chromatic effect\n    \n    original series\n    https://www.shadertoy.com/view/XcKSRc\n    https://www.shadertoy.com/view/McGSzK\n    \n*/\n\n#define R iResolution\n#define T iTime\n#define M iMouse\n\n#define PI          3.14159265\n#define PI2         6.28318530\n\n#define MIN_DIST    1e-3\n#define MAX_DIST    20.\n\n\n// globals\nvec4 FC = vec4(.06,.09,.14,0);\nvec3 hp,hit;\nvec2 ghex;\nmat2 r2;\nfloat speed,shs,ghs,g1,g2,glow=0.,sglow=0.,glow2=0.,sglow2=0.;\n\n// constants\nconst float thrs = .75;\nconst float s4 = .577350, s3 = .288683, s2 = .866025;\nconst vec2 s = vec2(1.732,1);\n    \nfloat hash21(vec2 p) { return fract(sin(dot(p,vec2(26.37,45.93)))*4374.23); }\nmat2 rot(float a){ return mat2(cos(a),sin(a),-sin(a),cos(a)); }\nfloat sdGry(vec3 p, float s, float t, float b) {\n    p *= s;\n    float g = abs(dot(sin(p*1.15), cos(p.zxy))-b)/(s*1.15)-t;\n    return g*.9;\n}\n// @IQ extrude 2D sdf\nfloat opx(in float d, in float z, in float h){\n    vec2 w = vec2( d, abs(z) - h );\n  \treturn min(max(w.x, w.y), 0.) + length(max(w, 0.));\n}\n\n// @Shane tile grid and functions\n// https://www.shadertoy.com/view/4td3zj\nvec4 hexGrid(vec2 uv) {\n    vec4 hC = floor(vec4(uv, uv - vec2(1,.5))/s.xyxy) + .5;\n    vec4 h4 = vec4(uv - hC.xy*s, uv - (hC.zw + .5)*s);\n    return dot(h4.xy, h4.xy) < dot(h4.zw, h4.zw) ? vec4(h4.xy, hC.xy) : vec4(h4.zw, hC.zw + .5);\n}\n\nvec2 map(vec3 pos, float sg) {\n    vec2 res = vec2(1e5,0);\n\n    vec2 uv = pos.xz;\n    vec4 hex = hexGrid(uv/2.25);\n    vec2 id = hex.zw, p = hex.xy;\n\n\tg1 = sdGry(pos*.75, 10.2, .035, .32);\n    g2 = sdGry(pos+4., 15.5, .021, .20);\n    g1 = min(g1,g2);\n    g1 *= .25;\n    \n    float rnd = hash21(id);\n\n    if(rnd<.5) {\n        p  *= r2;\n        p.y = -p.y;\n    } \n\n    vec2 p0 = p - vec2(-s3, .5),\n         p1 = p - vec2( s4,  0),\n         p2 = p - vec2(-s3,-.5);\n\n    vec3 d3 = vec3(length(p0), length(p1), length(p2));\n    vec2 pp = vec2(0);\n\n    if(d3.x>d3.y) pp = p1;\n    if(d3.y>d3.z) pp = p2;\n    if(d3.z>d3.x && d3.y>d3.x) pp = p0;\n\n    float circle = length(pp)-s3;\n    float fw = .7+.2*sin(T*rnd);\n    float gc = fract(rnd*43.27)>.7 ? length(vec3(p.x,(pos.y/2.25)-fw,p.y))-(.125*rnd) : 1e5;\n    \n    rnd = fract(rnd*53.71);\n    if(rnd<.4) {    \n        float c1 = 1e5, c2 = 1e5;\n        circle = length(p.x);\n        circle = min(circle,min(length(p1)-s3,length(p1+vec2(1.155,0))-s3));\n        gc = 1e5; \n    }\n    ghs = rnd;\n   \n    float sw = .3+.12*sin(pos.x*1.45);\n         sw += .3+.12*cos(pos.z*1.35);\n    \n    float wall = abs(circle)-.005;\n    circle = abs(abs(circle)-.04)-.0065;\n    \n    float pat = opx(circle,pos.y-(sw),sw);\n    float bat = opx(wall,pos.y-(sw*1.1),sw*1.1);\n    \n    float tile = max(abs(hex.x)*s2 + abs(hex.y)*.5, abs(hex.y))-.475;\n    float thex = opx(tile+.02,pos.y-.15,2.);\n    ghex = vec2(tile,rnd);\n   \n    pat = max(max(pat,thex),-g1);\n    bat = max(bat,thex);\n    \n    if(gc<res.x) {\n        res = vec2(gc,2.);\n        hit = vec3(p.x,pos.y,p.y);\n    }\n    if(sg==1.) glow+=.00065/(.0025+gc*gc);\n        \n    if(pat<res.x) {\n        res = vec2(pat,1.);\n        hit = vec3(pp.x,pos.y,pp.y);\n    }\n    \n    if(bat<res.x) {\n        //res = vec2(bat,4.);\n        glow2+=.00075/(.00465+bat*bat);\n    }\n    \n    float flr = min(opx(tile,pos.y,.04),pos.y+.01);\n    if(flr<res.x) {\n        res = vec2(flr,3.);\n        hit = pos;\n    }\n    \n    return res;\n}\n\nvec3 normal(vec3 p, float t) {\n    float e = MIN_DIST*t;\n    vec2 h =vec2(1,-1)*.5773;\n    vec3 n = h.xyy * map(p+h.xyy*e,0.).x+\n             h.yyx * map(p+h.yyx*e,0.).x+\n             h.yxy * map(p+h.yxy*e,0.).x+\n             h.xxx * map(p+h.xxx*e,0.).x;\n    return normalize(n);\n}\n\n// @Shane based on the original by @IQ.\nfloat calcAO(in vec3 p, in vec3 n) {\n\tfloat sca = 4., occ = 0.;\n    for( int i=1; i<4; i++ ) {\n        float hr = float(i)*.125/5.;        \n        float dd = map(p + hr*n,0.).x;\n        occ += (hr - dd)*sca;\n        sca *= .9;\n    }\n    return clamp(1.-occ,0.,1.);   \n}\n\nvec4 render(inout vec3 ro, inout vec3 rd, inout vec3 ref, inout float d) {\n\n    vec3 C = FC.rgb;\n    float m = 0.;\n    vec3 p = ro;\n    \n    for(int i=0;i<128;i++) {\n        p = ro + rd * d;\n        vec2 ray = map(p,1.);\n        if(ray.x<MIN_DIST*d||d>MAX_DIST)break;\n        d += i<32?ray.x*.25:ray.x*.85;\n        m  = ray.y;\n    } \n    \n    hp=hit;\n\n    if(d<MAX_DIST)\n    {\n        vec3 n = normal(p,d);\n        vec3 lpos =  vec3(-2.+speed,15,2);\n        vec3 l = normalize(lpos-p);\n\n        float diff = clamp(dot(n,l),0.,1.);\n        vec3 cuv = hp;\n \n        float shdw = 1.;\n        for( float t=.01;t<9.; ) {\n            float h = map(p + l*t,0.).x;\n            if( h<MIN_DIST ) { shdw = 0.; break; }\n            shdw = min(shdw, 12.*h/t);\n            t += h;\n            if( shdw<MIN_DIST || t>10. ) break;\n        }\n        \n        float ao = calcAO(p, n);\n        diff = mix(diff,diff*shdw,.65)*ao;\n        diff *= .5;\n        vec3 h = vec3(1);\n        if(m==1.) {\n            h = max(texture(iChannel0,cuv.zy*.75).rrr,texture(iChannel0,cuv.xy*.75).rrr)*.75;\n            ref = vec3(.3);\n        }\n        if(m==2.) {\n            diff = 1.;\n        }\n        if(m==4.) {\n            h = vec3(0.914,0.510,0.969);\n            ref = vec3(.3);\n        }\n        if(m==3.) {\n            float px = fwidth(p.x);\n            if(ghex.y<.5) cuv.xz*=r2;\n            h = mix(vec3(.02),texture(iChannel1,cuv.xz*1.5).rgb,smoothstep(px,-px,ghex.x));//*vec3(0.824,0.376,0.078)\n            ref = clamp(h+.3,h,vec3(1));\n        }\n\n        C = h * diff;\n\n        ro = p+n*.01;\n        rd = reflect(rd,n);\n    } \n    \n    return vec4(C,1.);\n}\n\nvoid mainImage( out vec4 O, in vec2 F ) {\n\n    r2 = rot(1.04719);\n    speed = T*.3;\n    vec2 uv = (2.*F.xy-R.xy)/max(R.x,R.y);\n\n    vec3 ro = vec3(0,0,6.35);\n    vec3 rd = normalize(vec3(uv, -1));\n    \n    // mouse //\n    float x = M.xy==vec2(0) || M.z<0. ? 0. : -(M.y/R.y*.25-.125)*PI;\n    float y = M.xy==vec2(0) || M.z<0. ? 0. : -(M.x/R.x*2.-1.)*PI;\n    mat2 rx =rot(-.525-x-(.15+.1*cos(T*.03))), ry =rot(-.28-y-(.1+.075*sin(T*.01)));\n    \n    ro.zy*=rx, ro.xz*=ry;\n    rd.zy*=rx, rd.xz*=ry;\n    ro.x += speed;\n\n    vec3 C = vec3(0), ref = vec3(0), fil = vec3(1);\n    \n    float d = 0., a = 0., bounces = 2.;\n    \n    for(float i = 0.; i<bounces; i++) {\n        d =0.;\n        vec4 pass = render(ro, rd, ref, d);\n        C += pass.rgb*fil;\n        fil *= ref;\n        if(i==0.) {\n            a = d, shs = ghs;\n            sglow = glow;\n            sglow2 = glow2;\n        }\n    }\n\n    vec3 clr;\n    float mx = .5+.5*sin(ro.x*.15);\n    // fun effects using fragcoord\n    if(int(F.x)%4 == int(F.y)%4&&sglow2>0.){\n        clr = mix(vec3(sglow2*.4,sglow2*.95,sglow2*.25) , vec3(sglow2*.4,sglow2*.15,sglow2*.95),mx);\n        C = mix(C,clr,clamp(sglow2,.0,.5));\n    }\n    \n    // moar glow\n    clr = mix(vec3(sglow*.9,sglow*.85,sglow*.1) ,vec3(sglow,sglow*.65,sglow*.15),mx);\n    if(int(F.x)%3 != int(F.y)%3&&sglow>0.){\n        clr = mix(vec3(sglow*.9,sglow*.45,sglow*.1) ,vec3(sglow*.65,sglow*.15,sglow),mx);\n    }\n    C = mix(C,clr,clamp(sglow,.0,.5));\n\n    // the bog : bigod 20\n    C = mix(FC.rgb,C,  exp(-.003*a*a*a));\n    \n    O = vec4(C,1);\n}\n","name":"Buffer A","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"XcKSWy","date":"1734186172","viewed":366,"name":"Spooky Glow Hexagon Tiles","username":"byt3_m3chanic","description":"Some unpublished shader from last year on my truchet kick, just did some re-work and a fancy glow effect using fragcoord with a chromatic effect","likes":33,"published":3,"flags":32,"usePreview":1,"tags":["raymarching","hexagon","truchet","tiles"],"hasliked":0,"parentid":"","parentname":""}}