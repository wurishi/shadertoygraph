{"ver":"0.1","info":{"id":"ftdfRr","date":"1662552975","viewed":245,"name":"2d_clickable_smoke_simulation","username":"eugene_black","description":"simulation of the fog spawned from mouse click\n\nCLICK ON THE SCREEN","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["smoke","fogsimulation","smokesimulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 colorTemp(float temp) {\n    vec3 colBase = vec3(1.0, temp, 0.0);\n    return temp*colBase;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 UV = fragCoord.xy;\n    fragColor = Fog(UV);\n    fragColor = vec4(fragColor.xyz + colorTemp(fragColor.w), 1.0) ;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float divergence(vec2 UV) {\n    return -1.0/divergence_coef * (\n          (Dyn(UV + vec2(1,0)).y \n        - Dyn(UV -  vec2(1,0)).y)\n        + (Dyn(UV +  vec2(0,1)).z \n        - Dyn(UV - vec2(0,1)).z)\n    );\n}\n\nfloat pressure_solver(vec2 UV) {\n    return 0.25*(divergence(UV) + \n        + Dyn(UV + vec2(2,0)).r\n        + Dyn(UV - vec2(2,0)).r\n        + Dyn(UV + vec2(0,2)).r\n        + Dyn(UV - vec2(0,2)).r \n    );\n}\n\n\nvec2 iterate_speed(vec2 UV) {\n\n    vec2 u_old = Dyn(UV).yz;\n    vec2 u = Dyn(UV - u_old*dt).yz;\n    \n    float col = Fog(UV).w;\n    \n    u.y += col * temperature_speed*dt;\n    \n    u = u*dissipation;\n        \n    return u;\n}\n\nvec2 compensate_speed_div(vec2 UV) {\n\n    vec2 du =  - vec2(\n          Dyn(UV + vec2(1,0)).r \n        - Dyn(UV - vec2(1,0)).r,\n          Dyn(UV + vec2(0,1)).r \n        - Dyn(UV - vec2(0,1)).r\n    );\n    \n        \n    return du;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 UV = fragCoord.xy;\n    \n    float p = pressure_solver(UV);\n    \n    vec2 u = Dyn(UV).yz;\n    if (iFrame%p_upd_freq == 0){\n        u = iterate_speed(UV);\n        u += compensate_speed_div(UV);\n    }\n        \n    fragColor = vec4(p, u.x, u.y, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 UV = vec2(fragCoord.xy);\n    vec2 u = Dyn(UV).yz;\n    fragColor = Fog(UV - u*dt);\n    fragColor.w = (1.0-temperature_decay)*fragColor.w;\n    \n    vec3 varying_color = vec3(1, 1, 1)*(1.0-color_saturation) + color_saturation*vec3(\n        max(sin(float(iFrame)*color_change_speed), 0.0), \n        max(sin(float(iFrame)*color_change_speed + 2.0*3.141596/3.0), 0.0), \n        max(sin(float(iFrame)*color_change_speed + 4.0*3.141596/3.0), 0.0))/2.0; \n    \n    if(iMouse.z > 0. && length((fragCoord - iMouse.xy)) < cursor_size) {\n        fragColor = vec4(varying_color, 1.0);\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define dt (1.0/60.0)\n#define cursor_size 10.0\n#define source_color vec4(0.5, 0.5, 0.5, 1)\n#define temperature_decay 0.01\n#define temperature_speed 300.0\n#define p_upd_freq 1\n#define dissipation 0.999\n#define divergence_coef 3.0\n#define color_change_speed 0.01\n#define color_saturation 0.5\n\n#define Dyn(uv) texture(iChannel0, (uv)/iResolution.xy)  \n#define Fog(uv) texture(iChannel1, (uv)/iResolution.xy)  ","name":"Common","description":"","type":"common"}]}