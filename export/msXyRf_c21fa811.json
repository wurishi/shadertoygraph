{"ver":"0.1","info":{"id":"msXyRf","date":"1687041867","viewed":57,"name":"fermat spiral colored","username":"ctwm","description":"inspired by https://www.shadertoy.com/view/dsXyR2","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rainbow","fermatspiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n#define GOLDEN_ANGLE 2.39996734783236271464\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    uv = 2.0 * uv - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float theta = atan(uv.y, uv.x) + PI;\n    float r = length(uv);\n    \n    int N = 64;\n    float sqrt_N = sqrt(float(N));\n    float radial_index = floor(r*r*float(N));\n    if (radial_index < float(N))\n    {\n        float dist = 10e31;\n        float neighbor_count = 10.0;\n        for (float i = radial_index - neighbor_count;\n             i <= radial_index + neighbor_count;\n             i += 1.0)\n        {\n            float radius = sqrt(i) / sqrt_N;\n            float angle = i * (GOLDEN_ANGLE + 0.01 * iTime);\n            vec2 fermat_point = radius * vec2(cos(angle), sin(angle));\n            dist = min(dist, length(fermat_point - uv));\n        }\n\n        float hue = radial_index / float(N) + iTime * 0.1; // creates a rainbow effect\n        float saturation = 1.0;\n        float value = 0.0003 / pow(dist, 2.0);\n        \n        vec3 color = hsv2rgb(vec3(hue, saturation, value));\n        \n        fragColor = vec4(color, 1.0);\n    }\n    else\n    {\n        fragColor = vec4(0.0);\n    }\n}\n","name":"Image","description":"","type":"image"}]}