{"ver":"0.1","info":{"id":"WddyDf","date":"1602071658","viewed":68,"name":"Example 15 - mix with gamma","username":"jt","description":"Colors are stored non-linearly. Apply gamma-correction to mix them correctly.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["example"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// see minute physics: computer color is broken (youtube)\n\nvoid mainImage( out vec4 fragColor, in vec2 p )\n{\n    p /= iResolution.xy;\n\n    vec3 Red = vec3(1.0, 0.0, 0.0);\n    vec3 Green = vec3(0.0, 1.0, 0.0);\n    // no need to adjust gamma for red/green: since they contain only zeroes and ones gamma-adjustment would leave them unchanged\n    vec3 Color = mix(Red, Green, p.x);\n    Color = pow(Color, vec3(0.5)); // adjust gamma to get yellow instead of brown-ish color in the middle\n    // The correct factor is not exactly 1/2 but that's easier to remember ;-)\n\n    fragColor = vec4(Color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}