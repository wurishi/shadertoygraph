{"ver":"0.1","info":{"id":"7ldXR2","date":"1639431954","viewed":53,"name":"Circle iso-lines","username":"mghermida18","description":"Iso-lineas de un circulo.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle( in vec2 p , float r ) {\n    return length(p) - r;\n}\n\nfloat map(in vec2 p) {\n    return min(sdCircle(p+vec2(0.7,0.),0.5),sdCircle(p+vec2(-0.7,0.0),0.5));\n}\n\nvec3 render( in vec2 p ) {\n    float res = map(p);\n    res *= 6.0;\n    vec3 col = vec3(0.0);\n    float v1 = fract(res);\n    float v2 = fract(ceil(res)-res);\n    float v3 = min(v1,v2);\n    col = mix(vec3(0.1),vec3(1, 0.71, 0),1.-sqrt(v3));\n    col *= mix(col,vec3(0, 1, 0.92),res/8.0);\n    col = mix(vec3(0.,0.,0.),col, clamp(abs(res*17.0),0.0,1.0));\n    return clamp(col,0.0,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0*(fragCoord)-iResolution.xy)/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = render(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}