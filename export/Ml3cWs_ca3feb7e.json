{"ver":"0.1","info":{"id":"Ml3cWs","date":"1534624451","viewed":2612,"name":"glowing particles","username":"aferriss","description":"Trying a particles system in just one frag shader","likes":29,"published":3,"flags":0,"usePreview":0,"tags":["particles","aa","smoothstep","poof","softedge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int nParticles = 150;\nconst float size = 0.001;\nconst float softness = 150.0;\nconst vec4 bgColor = vec4(0.0,0.0,0.0,1.0);\n\nfloat random (int i){\n return fract(sin(float(i)*43.0)*4790.234);   \n}\n\nfloat softEdge(float edge, float amt){\n    return clamp(1.0 / (clamp(edge, 1.0/amt, 1.0)*amt), 0.,1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 tc = uv;\n    float aspect = iResolution.x / iResolution.y;\n\tuv.x *= aspect;\n    \n    fragColor = bgColor;\n    \n    //vec4 tex = texture(iChannel0, tc);\n    float np = float(nParticles);\n    for(int i = 0; i< nParticles; i++){\n        vec2 tc = uv;\n        \n        float r = random(i);\n        float r2 = random(i+nParticles);\n        float r3 = random(i+nParticles*2);\n \n        tc.x -= sin(iTime*1.125 + r*30.0)*r;\n        tc.y -= cos(iTime*1.125 + r*40.0)*r2*0.5;\n                    \n        float l = length(tc - vec2(aspect*0.5, 0.5));// - r*size;\n        tc -= vec2(aspect*0.5, 0.5)*1.0;\n        tc = tc * 2.0 - 1.0;\n        tc *= 1.0;\n        tc = tc * 0.5 + 0.5;\n        \n        vec4 orb = vec4(r, r2, r3, softEdge(l, softness));\n        orb.rgb *= 1.5; // boost it\n        \n        fragColor = mix(fragColor, orb, orb.a);\n    }\n    //fragColor = mix(tex, fragColor, fragColor.a);\n}","name":"Image","description":"","type":"image"}]}