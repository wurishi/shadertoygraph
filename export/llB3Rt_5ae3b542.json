{"ver":"0.1","info":{"id":"llB3Rt","date":"1431338617","viewed":394,"name":"005 Voronoi Basic","username":"nmarsden","description":"Based on iq's Voronoi Basic https://www.shadertoy.com/view/MslGD8","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Based on iq's Voronoi Basic https://www.shadertoy.com/view/MslGD8\n\nconst float NUM_HORIZONTAL_TILES = 40.0;\nconst float TAU = 6.2831;\n\nvec2 hash( vec2 p ) { p=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))); return fract(sin(p)*18.5453); }\n\n// return distance, and cell id\nvec2 voronoi( in vec2 x )\n{\n    vec2 n = floor( x );\n    vec2 f = fract( x );\n\n\tvec3 m = vec3( 8.0 );\n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n        vec2  g = vec2( float(i), float(j) );\n        vec2  o = hash( n + g );\n        vec2  r = g - f + o;\n\t\tfloat d = dot( r, r );\n        if( d<m.x )\n            m = vec3( d, o );\n    }\n\n    return vec2( sqrt(m.x), m.y+m.z );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy/max(iResolution.x,iResolution.y);\n    \n    // computer voronoi patterm\n    vec2 c = voronoi(NUM_HORIZONTAL_TILES * p);\n\n    // colorize\n    vec3 col = 0.5 + 0.5*cos( c.y * TAU + vec3(0.0,1.0,2.0) );\t\n    \n    // shading\n    col *= clamp(1.0 - 0.2*c.x*c.x,0.0,1.0);\n    \n    fragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}