{"ver":"0.1","info":{"id":"Dl2Szz","date":"1675613796","viewed":178,"name":"mod moire","username":"ChunderFPV","description":"Alternates between 3 tiling moire patterns.  Mouse Y to zoom.","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["grid","moire","cells"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define H(a) (cos(vec3(0,1,2)+(a)*6.3)*.5+.5) // hue\n\nvoid mainImage( out vec4 C, vec2 U )\n{\n    vec2  R = iResolution.xy,\n          u, g, v;\n    float s = 15., // scale\n          t = mod(iTime/60., 1.), // sec per int\n          z = iMouse.y/R.y, // zoom\n          x, y, m;\n    \n    if (z < .1) z = 0.; // snap to 0 when close\n    u = (2.*U-R)/R.y*s/(1.-z); // coords with scale & zoom\n    x = ceil(u.x);\n    y = ceil(u.y);\n    \n    // change mode with time\n    if (t < 1./3.)      m = x*x + y*y; // squared sum\n    else if (t < 2./3.) m = x*x - y*y; // squared difference\n    else                m = x*y;       // product\n    \n    g = abs(fract(u+.5)-.5); // grid squares\n    vec3 c = H(m*t)*min(g.x, g.y); // color\n    \n    v = abs(fract(U/R+.5)-.5)*16.; // vignette\n    c *= sqrt(min(v.x, v.y)); // darken edges & brighten center\n    \n    C = vec4(c+c*c, 1);\n}","name":"Image","description":"","type":"image"}]}