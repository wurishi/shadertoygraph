{"ver":"0.1","info":{"id":"td33Rl","date":"1569082203","viewed":283,"name":"light tiles","username":"Angramme","description":"It started as a vornoi, then I did weird things to it :P","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["light","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float R(vec2 uv){\n \treturn fract(sin(dot(uv ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 R2(vec2 uv){\n    float a = R(uv);\n    return vec2(a, R(vec2(a)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime*2. +8.7;\n    \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    uv *= mix(.8, 1., sin(t*.3)*.5+.5);\n    uv += sin(t) * vec2(.01, .005) + cos(t*.5) * vec2(.02, .005);\n    \n    float a = sin(t*.05)*.5;\n    float c = cos(a);\n    float s = sin(a);\n    mat2 rot = mat2(c, -s, s, c);\n    uv *= rot;\n    \n    //3d illusion\n    float div = (uv.y * mix(2.5, 2., sin(t*.1+cos(t*.2)*.8)*.5+.5) +1.) * 2.;\n    uv /= div;\n    \n   \tfloat size = 25.;\n    vec2 gv = fract(uv*size);\n    vec2 id = floor(uv*size);\n    \n    //float minDist = 999.;\n    vec3 col = vec3(.1);\n    \n    for(float x=-1.; x<2.; x++){\n        for(float y=-1.; y<2.; y++){\n            vec2 id = id +vec2(x,y);\n            vec2 p = id/size + (sin(R2(id)*t)*.5+.5 )/size;\n   \t\t\tfloat d = length(uv - p)*size;\n           \n            \n            //minDist = d < minDist ? d : minDist;\n            float lum = 1.-d/(1.5);\n            col.xz += lum * R2(id);\n        }\n    }\n    \n    col *= mix(1., .3, dot(smoothstep(.1, 0., gv) + smoothstep(.9, 1., gv), vec2(1)));\n    col *= clamp(1.+uv.y, 0., 1.);\n    if(uv.y>.2){\n        col *= 0.;\n    }\n    \n    \n    \n    //vec3 col = vec3(1.-minDist/1.5);\n    //col.x += mix(0., 1., step(.98, gv.x)+step(.98, gv.y));\n     \n\n    // Output to screen\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}