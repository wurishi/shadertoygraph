{"ver":"0.1","info":{"id":"ftXcD2","date":"1648681944","viewed":206,"name":"Colored Logistic Map","username":"dankcatlord","description":"A logistic map with coloring","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hue(float a) {\n    return clamp(abs(mod(6.0 * a + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pd = iResolution.xy / vec2(4.0, 1.0);\n    vec2 uv = fragCoord / pd;\n    \n    vec3 col;\n    float a = 0.5;\n    for (int i = 0; i < 1024; i++) {\n        a = uv.x * a * (1.0 - a);\n        int b = // reverse bit order //\n            (i & 1)    << 9 |\n            (i & 2)    << 7 |\n            (i & 4)    << 5 |\n            (i & 8)    << 3 |\n            (i & 16)   << 1 |\n            (i & 32)   >> 1 |\n            (i & 64)   >> 3 |\n            (i & 128)  >> 5 |\n            (i & 256)  >> 7 |\n            (i & 512) >> 9;\n        float c = float(b) / 1024.0;\n        col += clamp(1.0 - (abs(a - uv.y) * pd.y), 0.0, 1.0) * hue(c);\n    }\n    col /= 512.0;\n\n    fragColor = vec4(sqrt(col), 1.0);\n}","name":"Image","description":"","type":"image"}]}