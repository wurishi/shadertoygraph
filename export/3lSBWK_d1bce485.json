{"ver":"0.1","info":{"id":"3lSBWK","date":"1599799511","viewed":51,"name":"t-3","username":"kukuzhang","description":"t-3","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["t3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 pos,float r, vec2 uv){ // 增加位置参数pos\n   // return step( length(uv-pos), r); // 依照公式,调整代码为 uv-pos\n    float l = length(uv-pos);\n    float w = 1./iResolution.y; // 渐变范围\n    return smoothstep( r+w, r-w, l);\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(isInCircle*uv.y,isInCircle*uv.x,isInCircle*0.5,1.0); \n    \n     fragCoord=(fragCoord-300.)*1e5,\n        fragCoord = tan(fragCoord)+floor(iTime*2.)*1e5,\n        fragColor.yx += fragCoord.x/fragCoord.y*tan(fragCoord+iTime*4.)*.25;\n    \n    fragColor.z +=cos(fragCoord.x);\n    \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    float isInCircle = 0.; \n    float r = 0.05+ (cos(iTime/0.5) + 1.)/10.0; // 半径调小点\n    float seed = 3.0;\n    vec2 pos = vec2(0.3*sin(iTime/0.5),0.2*cos(iTime/0.2)); // 设置圆的位置\n\t\n    vec2 pos1 = vec2(0.8*sin(iTime/0.2),0.01*sin(iTime/0.2)); // 设置圆的位置\n    \n     vec2 pos2 = vec2(0.3*sin(iTime/0.1),0.8*cos(iTime/0.5)); // 设置圆的位置\n    \n    isInCircle = circle(pos,r,uv)+ circle(pos1,r,uv) + circle(pos2,r,uv); // 传入位置参数pos\n    \n    \n\n}","name":"Image","description":"","type":"image"}]}