{"ver":"0.1","info":{"id":"7sKczK","date":"1655224879","viewed":214,"name":"Down the drain","username":"babopicasso","description":"Little effect for draining images.","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["drain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DELAY 0.\n#define SPEED_MULTIPLIER 0.2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float delayTime = pow(max(mod(iTime, 10.) - DELAY, 0.) * SPEED_MULTIPLIER, 5.);\n\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv *= pow(delayTime * 0.1 + 1.0, 5.);\n    \n    float r = length(uv);\n    \n    float phi = atan(uv.y, uv.x) + delayTime / (r * 0.5);\n       \n    vec2 duv = r * vec2(cos(phi), sin(phi)) + 0.5;\n    \n    vec4 c = texture(iChannel0, duv);\n    \n    float m = 1.0;\n    if (duv.x > 1.0 || duv.y > 1.0 || duv.x < 0.0 || duv.y < 0.0) m = 0.0;\n    \n    fragColor = c * m;\n}","name":"Image","description":"","type":"image"}]}