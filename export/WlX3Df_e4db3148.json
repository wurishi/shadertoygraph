{"ver":"0.1","info":{"id":"WlX3Df","date":"1557824391","viewed":442,"name":"LNDF's first shader","username":"LNDF","description":"This is my first shader.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["first"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/(iResolution.xy / 2.0);\n    float x = fragCoord.x;\n    float y = fragCoord.y;\n    if (iResolution.x >= iResolution.y) {\n        x /= iResolution.y;\n        y /= iResolution.y;\n    } else {\n        x /= iResolution.y;\n        y /= iResolution.y;\n    }\n    x *= 1000.0;\n    y *= 1000.0;\n    x = mod(x, 100.0);\n    y = mod(y, 100.0);\n    if (uv.x > 1.0) uv.x = 2.0 - uv.x;\n    if (uv.y > 1.0) uv.y = 2.0 - uv.y;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    if ((x >= 50.0 - ((sin((iTime * 2.0) + uv.x + uv.y) + 1.0) * 25.0) && x <= 50.0 + ((sin((iTime * 2.0) + uv.x + uv.y) + 1.0) * 25.0)) &&\n       (y >= 50.0 - ((sin((iTime * 2.0) + uv.x + uv.y) + 1.0) * 25.0) && y <= 50.0 + ((sin((iTime * 2.0) + uv.x + uv.y) + 1.0) * 25.0))) {\n    \tcol.x = (sin((iTime * (2.0 / 3.0)) + uv.x + uv.y) + 1.0) / 2.0;\n        col.y = (sin((iTime * (2.0 / 3.0)) - 1.0 + uv.x + uv.y) + 1.0) / 2.0;\n        col.z = (sin((iTime * (2.0 / 3.0)) - 2.0 + uv.x + uv.y) + 1.0) / 2.0;\n\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}