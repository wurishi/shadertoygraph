{"ver":"0.1","info":{"id":"XddXWS","date":"1461237148","viewed":722,"name":"MandelbrotFractalRotating","username":"wladaf","description":"Mandelbrot set with animation\nClick on screen to change","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst int maxIt = 100;\nconst int r = 3;\nconst float speed = 0.5;\nfloat radiusX = 0.78;\nfloat radiusY = 0.78;\n\nint Iteration(float x,float y, float cx, float cy, int maxIt, int r)\n{\n    int i = 0;\n    float abs = sqrt(x * x + y * y);\n    \n     for(int j = 0; j < 100; j++)\n    {\n        float k = x;\n        x = x*x - y*y + cx;\n        y = 2.0 * y * k + cy;\n        if(abs >= 2.0)\n        {\n            break;\n        }\n        i++;\n        abs = sqrt(x * x + y * y);\n    }\n    return i;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    radiusX = iMouse.x/iResolution.x;\n    radiusY = iMouse.y/iResolution.y;\n    \n    \n    float zx = 0.0 - radiusX * cos(iTime * speed);\n    float zy = 0.0 + radiusY * sin(iTime * speed);\n    \n    \n    //float zx = 0.0 - 0.78 * cos(iTime * speed);\n    //float zy = 0.0 + 0.78 * sin(iTime * speed);\n    \n    float minSide = min(iResolution.x, iResolution.y);\n    float cx = float((fragCoord.x - iResolution.x/2.0) * float(r)/minSide );\n    float cy = float((fragCoord.y - iResolution.y/2.0) *  float(r)/minSide);\n    //int i = Iteration(zx, zy, cx, cy, maxIt, r);\n    int i = Iteration(cx, cy, zx, zy, maxIt, r);\n    \n    if(i < maxIt)\n    {\n        float col =float(i)/float(maxIt/2);\n        float rc = float(i)/150.0;\n        fragColor = vec4(rc, col, col, 1);\n    }\n    else\n    {\n        fragColor = vec4(0, 0, 0, 1);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}