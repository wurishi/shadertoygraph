{"ver":"0.1","info":{"id":"fsV3Dd","date":"1632420021","viewed":25,"name":"asdasdasdasdasddasdasdasdasd","username":"raymondzheng","description":"asd","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["asd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // const colors\n    vec3 YELLOW = vec3(1.0,0.9,0);\n    vec3 ORANGE = vec3(1.0,0.3,0);\n    \n    // declaring variables\n    float aspectRatio = iResolution.y / iResolution.x;\n    float radius = 0.1;\n    float amplitude = 0.6;\n    float frequency = 0.5;\n    float amplitudeDawn = 0.3;\n    float yModification = 0.25;\n    \n    // fixing circle to screen res\n    uv.y *= aspectRatio;\n    vec2 center = vec2(0.5, (0.5 - yModification)- abs(sin(iTime * frequency) * amplitude));\n    \n    float dist = distance(center, uv);\n    \n\n    vec3 outPut = mix(ORANGE, YELLOW, uv.y);\n    outPut *= abs( 1.0 / sin(iTime * frequency) * amplitudeDawn);\n    float isOutCircle = step(dist, radius);\n    outPut = mix(outPut, YELLOW, isOutCircle);\n\n    // Output to screen\n    fragColor = vec4(outPut,1.0);\n}","name":"Image","description":"","type":"image"}]}