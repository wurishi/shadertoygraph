{"ver":"0.1","info":{"id":"csfSz4","date":"1668533828","viewed":49,"name":"tutorial_01_circle","username":"enzzz","description":"begin with circle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 p, float r, float blur)\n{\n    float d = length(uv - p);\n    return smoothstep(r, r-blur, d);\n}\n\n\nfloat smily(vec2 uv, vec2 p, float size)\n{\n    uv -= p;\n    uv /= size;\n    \n    // make face\n    float face = circle(uv, vec2(0.), 0.4, 0.05);\n    // make eyes\n    face -= circle(uv, vec2(-.13, 0.2), 0.07, 0.01);\n    face -= circle(uv, vec2(.13, 0.2), 0.07, 0.01);\n    face = clamp(face, 0.0, 1.0);\n    \n    // make mouth\n    float mouth = circle(uv, vec2(.0, .0), 0.3, 0.01);\n    mouth -= circle(uv, vec2(.0, .1), .3, .01 );\n    mouth = clamp(mouth, 0.0, 1.0);\n    \n    // put the mouth on the face\n    face -= mouth;\n    return face;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n     \n    float face = smily(uv, vec2(.1, .0), .8);\n    \n    vec3 col = vec3(1., 1., 0.) * face;\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}