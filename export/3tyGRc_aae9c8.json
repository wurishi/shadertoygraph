{"ver":"0.1","info":{"id":"3tyGRc","date":"1579444238","viewed":368,"name":"abelian sandpile model","username":"unnick","description":"click this to make it faster: [url]JAVASCRIPT:H=location.host;E=(H?window:opener).Effect;P=E.prototype;if(!E.P)E.P=P.Paint;P.Paint=function(...A){for(i=0;i<16;i++)E.P.apply(this,A);};if(!H)close();[/url]\nclick the bottom-left corner to clear the screen.","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["2d","fractal","automata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette[4] = vec3[4](\n    vec3(0,0,1),\n    vec3(.5,.7,1),\n    vec3(1,1,0),\n    vec3(.5,0,0)\n);\n\nvoid mainImage(out vec4 col, in vec2 pos) {\n    int state = int(texture(iChannel0, pos/res).x);\n    col = state >= 4 ? vec4(1) : palette[state].xyzz;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 col, in vec2 pos) {\n    #define fetch(a,b) int(texelFetch(iChannel0, ipos+ivec2(a,b), 0).x)\n    ivec2 ipos = ivec2(pos);\n    int state = fetch(0,0);\n    state -= int(state >= 4) * 4;\n    state += int(fetch( 1,  0) >= 4);\n    state += int(fetch( 0,  1) >= 4);\n    state += int(fetch(-1,  0) >= 4);\n    state += int(fetch( 0, -1) >= 4);\n    if(floor(pos) == round(res/2.)) state = 4;\n    if(iMouse.z > .5 && round(iMouse.xy) == floor(pos)) state = 256;\n    if(iMouse.z > .5 && iMouse.x < 30. && iMouse.y < 30.) state = 0;\n    col = vec4(state);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define res iResolution.xy\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 col, in vec2 pos) {\n    #define fetch(a,b) int(texelFetch(iChannel0, ipos+ivec2(a,b), 0).x)\n    ivec2 ipos = ivec2(pos);\n    int state = fetch(0,0);\n    state -= int(state >= 4) * 4;\n    state += int(fetch( 1,  0) >= 4);\n    state += int(fetch( 0,  1) >= 4);\n    state += int(fetch(-1,  0) >= 4);\n    state += int(fetch( 0, -1) >= 4);\n    if(floor(pos) == round(res/2.)) state = 4;\n    \n    \n    col = vec4(state);\n}\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage(out vec4 col, in vec2 pos) {\n    #define fetch(a,b) int(texelFetch(iChannel0, ipos+ivec2(a,b), 0).x)\n    ivec2 ipos = ivec2(pos);\n    int state = fetch(0,0);\n    state -= int(state >= 4) * 4;\n    state += int(fetch( 1,  0) >= 4);\n    state += int(fetch( 0,  1) >= 4);\n    state += int(fetch(-1,  0) >= 4);\n    state += int(fetch( 0, -1) >= 4);\n    if(floor(pos) == round(res/2.)) state = 4;\n    \n    \n    col = vec4(state);\n}\n","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage(out vec4 col, in vec2 pos) {\n    #define fetch(a,b) int(texelFetch(iChannel0, ipos+ivec2(a,b), 0).x)\n    ivec2 ipos = ivec2(pos);\n    int state = fetch(0,0);\n    state -= int(state >= 4) * 4;\n    state += int(fetch( 1,  0) >= 4);\n    state += int(fetch( 0,  1) >= 4);\n    state += int(fetch(-1,  0) >= 4);\n    state += int(fetch( 0, -1) >= 4);\n    if(floor(pos) == round(res/2.)) state = 4;\n    \n    \n    col = vec4(state);\n}\n","name":"Buffer D","description":"","type":"buffer"}]}