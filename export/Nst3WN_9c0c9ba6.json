{"ver":"0.1","info":{"id":"Nst3WN","date":"1629868348","viewed":74,"name":"Colorful Musicircle","username":"uusfiyeyh","description":"Hi!:D Feel free to comment and remix this shader.\n\nControls: Click and drag mouse to move the circle.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["music","colorful","circle","audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 draw = texture(iChannel0,uv);\n    vec4 background = texture(iChannel1, uv);\n    fragColor = vec4(draw.rgb,1.) + (vec4(vec3(background.r),1.) * 0.1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*\nLicense: Creative Commons Attribution-NonCommercial-ShareAlike 3.0.\n*/\n\nfloat distLenght(vec2 A, vec2 B)\n{\n    return sqrt(pow((A.x - B.x),2.) + pow((A.y - B.y),2.));\n}\n\nfloat circle(vec2 fCoord, vec2 location, float radius)\n{\n    if( distLenght(location, fCoord) < radius){\n        return 1.;\n    }\n    else return 0.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    //circle origin\n    vec2 origin = vec2(iMouse.x, iMouse.y);\n    \n    /*\n    * Code based on: https://www.shadertoy.com/view/Mlj3WV\n    */\n    // quantize coordinates\n    const float bands = 5000.0;\n    const float segs = 40.0;\n    vec2 p;\n    p.x = floor(uv.x*bands*.2)/bands;\n    p.y = floor(uv.y*segs*.2)/segs;\n    vec2 p2;\n    p2.x = floor(uv.y*bands)/bands;\n    p2.y = floor(uv.x*segs)/segs;\n    \n    //get audio frequency\n    float freqX = texture(iChannel1, vec2(p.x,0.0)).x;\n    float freqY = texture(iChannel1, vec2(p2.x,0.0)).x;\n    /*\n    * End of \"code based on\"\n    */\n    \n    //circle radius\n    float screenProportion = iResolution.x / iResolution.y;\n    \n    float radius = iResolution.x / screenProportion - max(iMouse.x * pow(sin(freqX * freqY), 0.2), 50.);\n    \n    radius = radius / screenProportion;\n    \n    vec4 result = vec4(col * freqX * freqY ,1.0) * circle(vec2(fragCoord.x, fragCoord.y), origin, radius);\n\n    // Output to screen\n    vec4 draw = texture(iChannel0,uv) * 0.8;\n    fragColor = result + draw;\n}","name":"Buffer A","description":"","type":"buffer"}]}