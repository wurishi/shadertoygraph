{"ver":"0.1","info":{"id":"4sBBWW","date":"1500357879","viewed":200,"name":"Circle Introduction","username":"robsalad","description":"Very simple example of a circle function. You can use just one of the two functions if you only need stroke or fill.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","basics","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smoothFloat(float r, float R) {\n    return (1.0-smoothstep(R-1.0,R+1.0, r));\n}\n\nfloat circleLine(vec2 uv, vec2 center, float radius, float width) {\n    float r = length(uv - center);\n    return smoothFloat(r-width/2.0,radius) - smoothFloat(r+width/2.0,radius);\n}\n\nfloat circleFill(vec2 uv, vec2 center, float radius) {\n    float r = length(uv - center);\n    return smoothFloat(r, radius);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec3 finalColor = vec3(0.0);\n    vec2 uv = fragCoord.xy;\n    vec2 c = iResolution.xy/2.0;\n    \n    float radius = min(iResolution.x, iResolution.y) / 2.5;\n\n    // line\n    vec3 lineColor = vec3(0.3, 0.9, 0.9);\n    float lineAlpha = circleLine(uv, c, radius, 8.0);\n    finalColor += lineColor * lineAlpha;\n    \n    // fill\n    vec3 fillColor = vec3(0.4, 0.4, 0.9);\n    float fillAlpha = (1.0 - lineAlpha) * circleFill(uv, c, radius);\n    finalColor += fillColor * fillAlpha;\n   \n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}