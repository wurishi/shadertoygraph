{"ver":"0.1","info":{"id":"MflGDN","date":"1703099633","viewed":19,"name":"envision_introduction_shadertoy","username":"envision","description":"Introduction to Shadertoy","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["iteration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n\n    return a + b*cos(6.28318*(c*t*d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i<3.0; i++){\n\n\n        uv = fract(uv * 1.5);\n        uv -= 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n\n        d = sin(d*8. + iTime)/8.;\n\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n        \n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}