{"ver":"0.1","info":{"id":"4Xj3WV","date":"1708916367","viewed":97,"name":"post process anti aliasing","username":"Kinkajou81","description":"A simple post process anti aliasing, detail amplification, and denoising shader that uses directional Gaussian blurs along 4 different angles. The only downside to this shader is that it lowers contrast and increases saturation.","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["blur","post","antialiasing","gaussian","screenspace","detailamplification"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Image\n    vec4 tex = texture(iChannel0, uv);\n    vec4 grey = vec4(0.5,0.5,0.5,1.0);\n    \n    // Dir Guassian Blurs\n    vec4 b11 = texture(iChannel0, uv-vec2(1.0,1.0)/iResolution.xy) * 0.0778;\n    vec4 b12 = texture(iChannel0, uv-vec2(0.0,1.0)/iResolution.xy) * 0.1233;\n    vec4 b13 = texture(iChannel0, uv-vec2(1.0,-1.0)/iResolution.xy) * 0.0778 * 2.0;\n    vec4 b14 = texture(iChannel0, uv-vec2(1.0,0.0)/iResolution.xy) * 0.1233;\n    vec4 b15 = texture(iChannel0, uv-vec2(0.0,0.0)/iResolution.xy) * 0.1953 * 2.0;\n    vec4 b16 = texture(iChannel0, uv-vec2(-1.0,0.0)/iResolution.xy) * 0.1233;\n    vec4 b17 = texture(iChannel0, uv-vec2(-1.0,-1.0)/iResolution.xy) * 0.0778 * 2.0;\n    vec4 b18 = texture(iChannel0, uv-vec2(0.0,-1.0)/iResolution.xy) * 0.1233;\n    vec4 b19 = texture(iChannel0, uv-vec2(1.0,-1.0)/iResolution.xy) * 0.0778;\n    vec4 b21 = texture(iChannel0, uv-vec2(1.0,1.0)/iResolution.xy) * 0.0778;\n    vec4 b22 = texture(iChannel0, uv-vec2(0.0,1.0)/iResolution.xy) * 0.1233;\n    vec4 b23 = texture(iChannel0, uv-vec2(1.0,-1.0)/iResolution.xy) * 0.0778;\n    vec4 b24 = texture(iChannel0, uv-vec2(1.0,0.0)/iResolution.xy) * 0.1233 * 2.0;\n    vec4 b25 = texture(iChannel0, uv-vec2(0.0,0.0)/iResolution.xy) * 0.1953 * 2.0;\n    vec4 b26 = texture(iChannel0, uv-vec2(-1.0,0.0)/iResolution.xy) * 0.1233 * 2.0;\n    vec4 b27 = texture(iChannel0, uv-vec2(-1.0,-1.0)/iResolution.xy) * 0.0778;\n    vec4 b28 = texture(iChannel0, uv-vec2(0.0,-1.0)/iResolution.xy) * 0.1233;\n    vec4 b29 = texture(iChannel0, uv-vec2(1.0,-1.0)/iResolution.xy) * 0.0778;\n    vec4 b31 = texture(iChannel0, uv-vec2(1.0,1.0)/iResolution.xy) * 0.0778;\n    vec4 b32 = texture(iChannel0, uv-vec2(0.0,1.0)/iResolution.xy) * 0.1233 * 2.0;\n    vec4 b33 = texture(iChannel0, uv-vec2(1.0,-1.0)/iResolution.xy) * 0.0778;\n    vec4 b34 = texture(iChannel0, uv-vec2(1.0,0.0)/iResolution.xy) * 0.1233;\n    vec4 b35 = texture(iChannel0, uv-vec2(0.0,0.0)/iResolution.xy) * 0.1953 * 2.0;\n    vec4 b36 = texture(iChannel0, uv-vec2(-1.0,0.0)/iResolution.xy) * 0.1233;\n    vec4 b37 = texture(iChannel0, uv-vec2(-1.0,-1.0)/iResolution.xy) * 0.0778;\n    vec4 b38 = texture(iChannel0, uv-vec2(0.0,-1.0)/iResolution.xy) * 0.1233 * 2.0;\n    vec4 b39 = texture(iChannel0, uv-vec2(1.0,-1.0)/iResolution.xy) * 0.0778;\n    vec4 b41 = texture(iChannel0, uv-vec2(1.0,1.0)/iResolution.xy) * 0.0778 * 2.0;\n    vec4 b42 = texture(iChannel0, uv-vec2(0.0,1.0)/iResolution.xy) * 0.1233;\n    vec4 b43 = texture(iChannel0, uv-vec2(1.0,-1.0)/iResolution.xy) * 0.0778;\n    vec4 b44 = texture(iChannel0, uv-vec2(1.0,0.0)/iResolution.xy) * 0.1233;\n    vec4 b45 = texture(iChannel0, uv-vec2(0.0,0.0)/iResolution.xy) * 0.1953 * 2.0;\n    vec4 b46 = texture(iChannel0, uv-vec2(-1.0,0.0)/iResolution.xy) * 0.1233;\n    vec4 b47 = texture(iChannel0, uv-vec2(-1.0,-1.0)/iResolution.xy) * 0.0778;\n    vec4 b48 = texture(iChannel0, uv-vec2(0.0,-1.0)/iResolution.xy) * 0.1233;\n    vec4 b49 = texture(iChannel0, uv-vec2(2.0,-1.0)/iResolution.xy) * 0.0778 * 2.0;\n    \n    // combine blurs\n    float bf = sqrt(pow(dot(grey,b11+b12+b13+b14+b15+b16+b17+b18+b19),2.0) + pow(dot(grey,b21+b22+b23+b24+b25+b26+b27+b28+b29),2.0) + pow(dot(grey,b31+b32+b33+b34+b35+b36+b37+b38+b39),2.0) + pow(dot(grey,b41+b42+b43+b44+b45+b46+b47+b48+b49),2.0));\n    \n\n    // Output to screen w/ Tonemapping\n    fragColor = tex/(bf/5.5547)*(bf/(bf+1.0));\n}","name":"Image","description":"","type":"image"}]}