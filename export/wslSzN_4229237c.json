{"ver":"0.1","info":{"id":"wslSzN","date":"1551661418","viewed":84,"name":"Shapes&LERP HW for EGP-200","username":"fnoogie","description":"LERP and Optimized Shapes HW for EGP-200-01","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Variables for the circle\nvec2 center = vec2 (0.85, 0.5);\nfloat radius = 0.15;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n\n    \n    vec4 backgroundColor = vec4(0.0);\n    vec4 circColor = vec4(1.0, 0.0, 1.0, 0.0);\n    \n    //check if pixel is within the circle and sets alpha accordingly\n    if(length(center-uv) < radius)\n        circColor.a = 1.0;    \n    \n    //combines layers to output\n    vec4 component = mix(backgroundColor, circColor, circColor.a);\n    \n    // Output to screen\n    fragColor = component;\n}","name":"Image","description":"","type":"image"}]}