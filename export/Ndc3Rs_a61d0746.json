{"ver":"0.1","info":{"id":"Ndc3Rs","date":"1630434565","viewed":91,"name":"Crazy Shader","username":"Triphile","description":"On weaker computers, moving the circle underneath bubbles can cause the browser to crash.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["fractal","bubble","pascaltriangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 coord){\n    vec2 rot = coord;\n    float time = iTime;\n    while(time>25.13) time-=25.13;\n    if(time<6.28)\n        rot.y = iResolution.y-coord.y;\n    else if(time<12.57){\n        rot.x = iResolution.x-coord.x;\n        rot.y = iResolution.y-coord.y;\n    }else if(time<18.85)\n        rot.x = iResolution.x-coord.x;\n    return rot;\n}\n\nbool isOdd(vec2 pos){\n    pos=(1.0-cos(iTime))*pos*777.7/iResolution.x;\n    int c = int(pos.x);\n    int r = int(pos.y);\n    if(r==0||c==0) return true;\n    int count = 0;\n    int rCount = 0;\n    int cCount = 0;\n    for(int i=1;i<=r+c;i++){\n        int temp = i;\n        while(temp%2==0){\n            temp/=2;\n            count++;\n        }\n        if(i==r) rCount = count;\n        if(i==c) cCount = count;\n    }\n    return count<=rCount+cCount;\n}\n\nvec3 colorShape(vec2 pos){\n    vec4 terms = vec4(pos.x+pos.y,pos.x-pos.y,pos.x*pos.y,pos.x/pos.y);\n    if(terms.x<0.0) terms.x=-terms.x;\n    while(terms.x<0.00001)terms.x*=1000.0;\n    if(terms.x>=1.0) terms.x-=1.0;\n    if(terms.y<0.0) terms.y=-terms.y;\n    if(terms.z>1.0) terms.z=1.0/terms.z;\n    if(terms.w>1.0) terms.w=1.0/terms.w;\n    vec3 color = vec3(terms.xyz);\n    float control = terms.w;\n    float top = 7.21 * (1.1 + sin(iTime));\n    while(top>7.21) top-=7.21;\n    while(control<top){\n        color.x = color.x * color.x + terms.w;\n        color.y = color.y * color.y + terms.z;\n        color.z = color.z * color.z + terms.y;\n        control = control + terms.x;\n    }\n    if(color.x>1.0) color.x=1.0;\n    if(color.y>1.0) color.y=1.0;\n    if(color.z>1.0) color.z=1.0;\n    return color;\n}\n\nvec2 bubbleMaker(vec2 bubble, vec2 coord, float len){\n    len = iResolution.x/len;\n    while(bubble.y>1.5*iResolution.y) bubble.y-=2.0*iResolution.y;\n    float dis = length(bubble-coord);\n    if(dis<len){\n        coord = bubble + (bubble - coord) * (1.0 - (dis/len));\n    }\n    return coord;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Noise\n    vec2 bub = vec2(0.21+0.1*sin(0.5*iTime),-0.5+iTime/2.0)*iResolution.xy;\n    fragCoord = bubbleMaker(bub,fragCoord,12.8);\n    bub = vec2(0.7+0.07*cos(2.0*iTime),-0.5+iTime/4.0)*iResolution.xy;\n    fragCoord = bubbleMaker(bub,fragCoord,6.4);\n    bub = vec2(0.1428571+0.04*sin(0.2*iTime)*cos(0.9*iTime),-0.5+iTime/3.0)*iResolution.xy;\n    fragCoord = bubbleMaker(bub,fragCoord,6.4);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Background\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    if(isOdd(rotate(fragCoord)))\n        col = vec3(1.0,1.0,0.0);\n    \n    // Shape\n    if(length(fragCoord-iMouse.xy)<iResolution.y/6.4)\n        col = colorShape(uv);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}