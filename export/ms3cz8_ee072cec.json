{"ver":"0.1","info":{"id":"ms3cz8","date":"1694712149","viewed":264,"name":"Through the Neon Tunnel","username":"fouad","description":"Inspired by \"Neon Squircles\" by @kishimisu (2022) - https://www.shadertoy.com/view/mdjXRd","likes":9,"published":3,"flags":0,"usePreview":0,"tags":["tunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \"Neon Squircles\" by @kishimisu (2022) - https://www.shadertoy.com/view/mdjXRd\n   [262 chars]\n   \n   No raymarching this time as I wanted to stay\n   below 300 chars, I tried to reduce the number\n   of instructions to the minimum to avoid having\n   a body with brackets in the for loop.\n   \n   The layout of the code was inspired by @Xor's \n   codegolfing shaders: for(..; ..; O.rgb += *magic*); \n*/\nvoid mainImage(out vec4 O, vec2 F) {\n    vec2 r = iResolution.xy, u = (F+F-r)/r.y;    \n    O.rgb*=0.;\n    for (float i; i<15.; O.rgb +=\n    .0035/(abs(length(u*u)-i*.0275)+.003)                   // shape distance\n    * (sin(i*5.+vec3(0,1,3))+1.)                            // color\n    * smoothstep(.35,.4,abs(abs(mod(iTime,2.)-i*.1)-1.)) // animation\n    ) u*=mat2(cos((iTime+i++)*(i< 2.0 ? .0 :.03)+ vec4(0,33,11,0)));   // rotation\n}","name":"Image","description":"","type":"image"}]}