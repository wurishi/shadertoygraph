{"ver":"0.1","info":{"id":"XtdSD7","date":"1487819209","viewed":1636,"name":"Post process light","username":"Nesvi7","description":"Experiment with fake 2D lights and trying to extract normal maps from camera.","likes":6,"published":3,"flags":34,"usePreview":0,"tags":["normal","conversion","heighmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv.x *= iResolution.x/iResolution.y;\n    vec4 normals = texture(iChannel1,uv);\n    normals = (normals - 0.5)*2.0;\n    vec4 image = texture(iChannel0,uv);\n    vec2 lightPosition = iMouse.xy/iResolution.xy;\n    vec2 directionToLight = normalize(lightPosition-uv);\n    float lightLambert = (dot(directionToLight,normals.xy)+1.0)*0.5;\n    float attenuation = pow(1.0-length(lightPosition-uv),2.0);\n    fragColor = vec4(attenuation*lightLambert);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    const float sstep = 0.015;\n    vec2 normal = vec2(0.0);\n    for( float i = -1.0; i <= 1.0; i++)\n        for( float j = -1.0; j <= 1.0; j++){\n            if( !(i == 0.0 && j==0.0) ){\n         \t\tvec2 dir = normalize(vec2(i,j));\n            \tnormal += dir*(texture(iChannel0,uv).x-texture(iChannel0,uv+vec2(i*sstep,j*sstep)).x);                \n            }\n        }\n    \n    normal /= 8.0;\n   \tnormal = normal*0.5 + vec2(0.5);\n\tfragColor = vec4(normal*1.0,0.0,1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}