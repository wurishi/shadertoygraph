{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"const float sharpen_strength = 0.6;\n\nvec3 blurSample(in vec2 uv, in vec2 xoff, in vec2 yoff)\n{\n    vec3 v11 = texture(iChannel0, uv + xoff).rgb;\n    vec3 v12 = texture(iChannel0, uv + yoff).rgb;\n    vec3 v21 = texture(iChannel0, uv - xoff).rgb;\n    vec3 v22 = texture(iChannel0, uv - yoff).rgb;\n    return (v11 + v12 + v21 + v22 + 2.0 * texture(iChannel0, uv).rgb) * 0.166667;\n}\n\nvec3 edgeStrength(in vec2 uv)\n{\n   \tconst float spread = 0.5;\n \tvec2 offset = vec2(1.0) / iChannelResolution[0].xy;\n    vec2 up    = vec2(0.0, offset.y) * spread;\n    vec2 right = vec2(offset.x, 0.0) * spread;\n    const float frad =  3.0;\n    vec3 v11 = blurSample(uv + up - right, \tright, up);\n    vec3 v12 = blurSample(uv + up, \t\t\tright, up);\n    vec3 v13 = blurSample(uv + up + right, \tright, up);\n    \n    vec3 v21 = blurSample(uv - right, \t\tright, up);\n    vec3 v22 = blurSample(uv, \t\t\t\tright, up);\n    vec3 v23 = blurSample(uv + right, \t\tright, up);\n    \n    vec3 v31 = blurSample(uv - up - right, \tright, up);\n    vec3 v32 = blurSample(uv - up, \t\t\tright, up);\n    vec3 v33 = blurSample(uv - up + right, \tright, up);\n    \n    vec3 laplacian_of_g = v11 * 0.0 + v12 *  1.0 + v13 * 0.0\n        \t\t\t\t+ v21 * 1.0 + v22 * -4.0 + v23 * 1.0\n        \t\t\t\t+ v31 * 0.0 + v32 *  1.0 + v33 * 0.0;\n   \t\t laplacian_of_g = laplacian_of_g * 1.0;\n    return laplacian_of_g.xyz;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    if (uv.x > 0.5)\n    {\n    \tfragColor = vec4(texture(iChannel0, uv).xyz - edgeStrength(uv) * sharpen_strength, 1.0);\n    }\n    else if (uv.x > 0.499)\n    {\n        fragColor = vec4(texture(iChannel0, uv).rgb / vec3(0.5, 0.3, 0.01), 1.0);\n    }\n    else\n    {\n        fragColor = vec4(texture(iChannel0, uv).rgb, 1.0); \n\t}\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4lfGDs","date":"1426085827","viewed":1130,"name":"LoG Sharpening","username":"skurmedel","description":"Example of Laplacian of \"Gaussian\" sharpening. Computes second derivatives through a laplacian operation on a blurred input.\nThe blur (\"gaussian\") is done to lower noise sensitivity. Left is before, right is after.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["filter","sharpening","laplacian"],"hasliked":0,"parentid":"","parentname":""}}