{"ver":"0.1","info":{"id":"MsBcWV","date":"1493816732","viewed":875,"name":"Basic Webcam Effects","username":"splizard","description":"The things you would see in a webcam app.","likes":4,"published":1,"flags":2,"usePreview":0,"tags":["basic","lines","curves","edge","webcam","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 WebCamPixelAt(vec2 pos) {\n    return texture(iChannel0, pos);\n}\n\nvoid mainImage( out vec4 color, in vec2 pos )\n{\n    int time = int(iTime)%25;\n\n    //Polarisation.\n    if (time <= 5) {\n        color = WebCamPixelAt(pos/iResolution.xy);\n        if (int(pos.x) % 2 == 0) {\n            color = WebCamPixelAt(1.-pos/iResolution.xy);\n        }\n        \n    }\n    \n    //Edge Detection.\n    if (time >= 5 && time <= 10) {\n    \tcolor =  WebCamPixelAt(pos/iResolution.xy);\n   \t\tcolor = color - WebCamPixelAt((pos+vec2(1., 1.))/iResolution.xy);\n    \n    }\n    \n    //Art.\n    if (time >= 10 && time <= 12) {\n        color =  WebCamPixelAt( pos/iResolution.xy);\n        color =  WebCamPixelAt( vec2(color.x, color.y));\n    }\n    \n    if (time > 12 && time <= 15) {\n     \tcolor =  WebCamPixelAt( pos/iResolution.xy);\n    \tcolor =  WebCamPixelAt( vec2(color.y, color.x));   \n    }\n    \n    //Normal webcam.\n    if (time >= 20) { \n    \tcolor =  WebCamPixelAt( pos/iResolution.xy);\n    }\n    \n    //Why so serious?\n    if (time > 15 && time <= 20) {\n        color =  WebCamPixelAt((pos+sin(pos.x*25.)*4.)/iResolution.xy);\n    }\n}","name":"Image","description":"","type":"image"}]}