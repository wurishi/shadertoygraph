{"ver":"0.1","info":{"id":"XcsfR7","date":"1723538420","viewed":54,"name":"Moving glow light","username":"mr_vero","description":"Moving glow light","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["light","color","glow","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.x *= iResolution.x / iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n\n    // Parameters for the bubble\n    float speed = 0.2; // Speed of movement\n    float radius = 0.1; // Radius of the bubble\n    float glowIntensity = 0.01; // Intensity of the glow\n\n    // Calculate the moving position of the bubble\n    float bubbleCenter = mod(iTime * speed, 2.0);\n\n    // Calculate the distance from the current pixel to the center of the bubble\n    float dist = distance(uv, vec2(bubbleCenter, 0.5));\n\n    // Create the glow effect based on the distance to the bubble center\n    float glow = radius / dist - glowIntensity;\n\n    // Set the color of the pixel based on the glow effect\n    col = mix(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.5, 1.0), glow);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}