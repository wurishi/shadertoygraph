{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// [2TC 15] Water2D\n// Copyleft {c} 2015 Michael Pohoreski\n// Chars: 260\n//\n// Notes:\n// - If you want to speed up / slow this down, change the contant in `d` iTime*0.2\n//\n// - A \"naive\" water filter is: \n//     #define F cos(x)*cos(y),sin(x)*sin(y)\n//   We use this one:\n//     #define F cos(x-y)*cos(y),sin(x+y)*sin(y)\n// Feel free to post your suggestions!\n//\n// For uber minification,\n// - You can replace:\n//     2.0 / uvResolution.x\n//   With say a hard-coded constant:\n//     0.007\n// Inline the #define\n\n// Minified\n\n// #if 0\n\n#define F cos(x-y)*cos(y),sin(x+y)*sin(y)\nvec2 s(vec2 p){float d=iTime*0.2,x=8.*(p.x+d),y=8.*(p.y+d);return vec2(F);}\nvoid mainImage( out vec4 f, in vec2 w ){vec2 i=iResolution.xy,r=w/i,q=r+2./iResolution.x*(s(r)-s(r+i));q.y=1.-q.y;f=texture(iChannel0,q);}\n\n/* // remove begin '/*'\n#else\n// Cleaned up Source\nconst float speed     = 0.2;                      \nconst float frequency = 8.0;                  \n\nvec2 shift( vec2 p ) {                        \n    float d = iTime*speed;\n    vec2 f = frequency * (p + d);\n    vec2 q = cos( vec2(                        \n       cos(f.x-f.y)*cos(f.y),                       \n       sin(f.x+f.y)*sin(f.y) ) );                   \n    return q;                                  \n}                                             \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {                                 \n    vec2 r = fragCoord.xy / iResolution.xy;                      \n    vec2 p = shift( r );             \n    vec2 q = shift(r + 1.0);                        \n    float amplitude = 2.0 / iResolution.x;   \n    vec2 s = r + amplitude * (p - q);\n    s.y = 1. - s.y; // flip Y axis for ShaderToy\n    fragColor = texture( iChannel0, s );\n}\n#endif \n// */\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mls3DH","date":"1421895155","viewed":5704,"name":"[2TC 15] Water2D","username":"MichaelPohoreski","description":"A simple fake 2D water shader for WebGL","likes":41,"published":1,"flags":0,"usePreview":1,"tags":["2d","uv","animation"],"hasliked":0,"parentid":"","parentname":""}}