{"ver":"0.1","info":{"id":"ldVBRh","date":"1527638276","viewed":208,"name":"Animated Vornoi","username":"kubamaruszczyk1604","description":"Vornoi diagram with  animation.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["animated","vornoi","fx","effects","diagram"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst vec2 Points[9] = vec2[]\n(\n        vec2(-1.3,0.6),vec2(-0.2,0.3), vec2(0.1,0.8),\n        vec2(0.6,0.5), vec2(1.3,-0.2), vec2(0.2,0.4),\n        vec2(0.4,-0.9),vec2(-0.3, -0.9), vec2(-0.5, -0.61)\n);\n\n\nconst vec3 Colors[9] = vec3[]\n(\n        vec3(0.1,0.2,1.0),vec3(1.0,0.3,0.5), vec3(0.0,1.0,0.0),\n        vec3(1.0,0.2,0.0),vec3(1.0,1.0,0.5), vec3(1.0,1.0,0.0),\n        vec3(0.1,0.2,0.0),vec3(0.98,0.5,0.0), vec3(0.0,0.8,0.3)\n);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    /// Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    // Move coords to -1..1 space    \n    uv = uv * 2.0 - 1.0;\n    \n    // aspect ratio\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float s = sin(iTime*0.5);\n    float c = cos(iTime);\n    \n    \n    mat2 rmat = mat2(c,-s,s,c);\n    \n    vec3 colr = vec3(0.0);\n    float lastDist = 100.0;\n    for(int i = 0; i < 9;++i)\n    {\n       vec2 p = rmat*Points[i]+ 0.25*sin(iTime)*vec2(Points[i].x,Points[i].x);\n       float dist = length(uv - p);\n       if(dist<lastDist)\n       {\n           colr = Colors[i]/dist/(5.0+10.0*abs(sin(iTime*0.5)));\n           lastDist = dist;\n           \n           if(dist<0.03) colr = vec3(0.0);\n       }\n    }\n\n    vec3 col = colr+ 0.1*cos(iTime+uv.xyx+vec3(0,12,14));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}