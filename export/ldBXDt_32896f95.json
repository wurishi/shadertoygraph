{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Got the idea from the xscreensaver Intermomentary.\n//   http://www.youtube.com/watch?v=pH-ykepPopw\n\n// Next step: make the 3rd-degree intersections look better?\n\n// FBM code robbed shamelessly from IQ at https://www.shadertoy.com/view/lsl3RH\n\nconst mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat noise( in vec2 p ) {\n\treturn sin(1.5*p.x)*sin(1.5*p.y);\n}\n\nfloat fbm4( vec2 p ) {\n    float f = 0.0;\n    f += 0.5000*(0.5+0.5*noise( p )); p = m*p*2.02;\n    f += 0.2500*(0.5+0.5*noise( p )); p = m*p*2.03;\n    f += 0.1250*(0.5+0.5*noise( p )); p = m*p*2.01;\n    f += 0.0625*(0.5+0.5*noise( p ));\n    return f/0.9375;\n}\n\n\nconst float fuzz = 0.006; // width of intersection testing\nconst int numCirc = 130;\n\nvoid applyCircle(vec2 uv, vec2 c, float r, inout float weight, inout int n)\n{\n    float d = abs(distance(uv, c) - r);\n    if (d < fuzz) {\n        weight += 1.0 - d / fuzz;\n        n++;\n    }\n}\n\n// Given the number and weight of intersections, determine the color.\nvec3 mapcol(float w, int n) {\n    // for n <= 1, do nothing or pale gray.\n    // for n=2, do small golden sparkle.\n    // for n=3, do blue flash\n    w = w / float(n);\n\tif (n < 2) return vec3(0.0);\n    // to see the circles:  if (n < 2) return vec3(0.16 * pow(w, 5.0));\n\telse if (n < 3) return vec3(0.9, 0.8, 0.5)*pow(w, 5.0);\n    else if (n < 4) return vec3(0.9 * pow(w, 5.0), 0.9 * pow(w, 5.0), 1.3 * pow(w, 3.0));\n    else return vec3(1.5, 0.4, 0.4)*pow(w, 5.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat minRes = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / minRes;\n    float t = iTime * 0.02 + 307.0, weight = 0.0;\n    int n = 0;\n    \n    for (int i=0; i < numCirc; i++) {\n        float fi = float(i);\n        float inv = 1.0/(float(i)+4.0);\n        float fiv = fi + inv;\n        vec2 c = vec2(fbm4(vec2(fi, t)) * 2.5 - 1.25,\n                      fbm4(vec2(fi * 0.39 + 97.3, t*0.291 + 15.9)) * 2.0  - 1.0);\n        float r = fbm4(vec2(fi, t*0.5)) * 0.15 - 0.025;\n\t\tapplyCircle(uv, c, r, weight, n);\n    }\n    \n\tfragColor = vec4(mapcol(weight, n)*3.0, 1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldBXDt","date":"1417055866","viewed":473,"name":"Intermomentary Sparkles","username":"huttarl","description":"Lots of moving circles. Show intersections as sparkles. Got the idea from the xscreensaver Intermomentary. Yellow: intersection of 2 circles; blue = 3; red = 4 or more.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["circles","simple"],"hasliked":0,"parentid":"","parentname":""}}