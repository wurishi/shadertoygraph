{"ver":"0.1","info":{"id":"7dffWH","date":"1644786973","viewed":132,"name":"Homography","username":"mbredif","description":"Texture mapping with a 3x3 homograpjhy","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["homography"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 p = vec3(fragCoord.xy / iResolution.xy, 1.);\n    mat3 H = transpose(mat3(\n        1., 0., 0.2,\n        0., 2., 0.,\n        0., 0., 1.));\n    vec3 q = H*p;\n    vec2 uv = q.xy / q.z;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}