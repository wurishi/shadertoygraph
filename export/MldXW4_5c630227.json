{"ver":"0.1","info":{"id":"MldXW4","date":"1479723959","viewed":255,"name":"DOF Spheres","username":"VoidChicken","description":"A repeating sphere map with the depth of field effect. Hold A down to stop moving at the origin point.","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["2d","3d","raymarch","blur","texture","dof","distance","field","hdr","tonemap","repeat","crosshair"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//VoidChicken Creative Commons Attribution-NonCommercial-ShareAlike License 4.0 \nfloat dst(vec2 a) {\n\treturn a.x+a.y;    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 a = texture(iChannel0,uv),b=texture(iChannel1, uv);\n    float lrp = texture(iChannel2, uv).r;\n    vec4 col = mix(a,b,sqrt(lrp));\n    float v = length((uv*2.-1.)*vec2(iResolution.x/iResolution.y,1));\n    if (v<.02) { //Render Crosshair\n    \t  col=mix(col,vec4(1),1.-v/.02);  \n    }\n    col=1.-exp(-col*2.2); //Tonemap\n   \n\tfragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define R iResolution.xy\n\nconst float pi = acos(-1.);\nvec2 uv (vec3 p) {\n\tfloat x = p.x;\n    float y = p.y;\n    float z = p.z;\n    float u = atan(x, z) / (2. * pi) + .5;\n    float v = asin(y) / (pi) + .5;\n    return vec2(u,v);\n}\nvec2 map(vec3 p) {\n    vec3 v = mod(p,13.)-13./2.-vec3(0,4,0);\n\tvec2 sv = vec2(length(v)-2., 0.);\n    vec2 pv = vec2(p.y+2., 1.);\n    return ((sv.x<pv.x)?sv:pv);\n}\nvec3 normal( vec3 x )\n{\n    vec2 e = vec2( .01, 0 );\n    return normalize( vec3( map(x+e.xyy).x - map(x-e.xyy).x,\n                            map(x+e.yxy).x - map(x-e.yxy).x,\n                            map(x+e.yyx).x - map(x-e.yyx).x ) );\n}\nfloat ao(vec3 i) {\n\tvec3 n = normal(i);\n    float t = 0.;\n    for (int j = 0; j < 7; j++) {\n    \tt=abs(t-map(i+n).x);    \n    }\n    return max(t,1.);\n}\n\nmat3 rotate(vec3 axis, float angle)\n{\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat3(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s, \n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c\n           );\n}\nvec3 shade ( vec3 v, float t ) {\n\tvec3 f = vec3(.8);\n    vec2 m = map(v);\n    float mat = m.y;\n    if (mat==1.) {\n    \tfloat val = texture(iChannel0, v.xz/10.).r;\n        f=mix(vec3(.8),vec3(val), 1.-t/150.);\n    } else if (mat==0.) {\n        vec3 n = normal(v);\n         vec2 u=uv(n);\n        vec3 val = texture(iChannel1, u).rgb;\n        f=val;\n    }\n    f=mix(vec3(.8),f,clamp(1.5-t/40.,0.,1.));\n    f*=1.-ao(v)/8.;\n    return f;\n}\nconst float KEY_A     = 65.5/256.0;\nfloat trace ( vec3 o, vec3 d ) {\n\tfloat t = 0.;\n    for (int i = 0; i < 64; ++i) {\n        vec2 m = map(o+d*t);\n        if (t>60.||m.x<.02) break;\n    \tt+=m.x*.9;\n    }\n    return t;\n}\nfloat isKeyPressed(float key)\n{\n\treturn texture( iChannel2, vec2(key, 0.) ).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/R;\n    vec2 ms = iMouse.xy;\n    if (ms==vec2(0)) {\n    \tms=R/2.;    \n    }\n    vec3 o = vec3(0., 1, -7.+iTime*(1.-isKeyPressed(KEY_A)));\n    vec3 d = normalize(vec3((u*2.-1.)*vec2(1,R.y/R.x),1));\n    mat3 rotation = rotate(vec3(0,1,0),pi*2.*(ms.x/R.x-.5)); \n    vec3 cros = cross(vec3(0,1,0), vec3(0,0,1)*rotation);\n    rotation*=rotate(cros,pi*(.5-ms.y/R.y));\n    d*=rotation;\n   \tvec3 f = vec3(.8);\n    float t = trace(o,d);\n   \tvec3 i = o+d*t;\n    if (map(i).x<.2)\n    {\n    \tf=shade(i,t);    \n    }\n    vec3 dfd = vec3(0,0,1);\n    dfd*=rotation;\n    float dof = trace(o, dfd);\n    fragColor = vec4(f,abs(t/60.-dof/60.));\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define RESOLUTION 5.\nvec4 blur ( sampler2D C, vec2 u ) {\n\tvec2 pxl = (1./iResolution.xy);\n    vec4 asp=vec4(0);\n    for (float x = -RESOLUTION; x < RESOLUTION; x++) {\n        for (float y = -RESOLUTION; y < RESOLUTION; y++) {\n        \tvec2 uv = u+pxl*vec2(x,y);\n            asp+=texture(C, uv);\n    \t}\n    }\n    float q = (RESOLUTION*2.);\n    q*=q;\n    asp/=q;\n    return asp;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = blur(iChannel0, fragCoord/iResolution.xy);\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 UV = fragCoord/iResolution.xy;\n    float MS = texture(iChannel1, UV).w;\n    float MR = texture(iChannel0, UV).r;\n    fragColor = vec4(mix(MR, MS, .1));\n}","name":"Buf C","description":"","type":"buffer"}]}