{"ver":"0.1","info":{"id":"ml33zn","date":"1681914013","viewed":69,"name":"Color Brightness Hue shift","username":"izutionix","description":"Comparing ways to get that nice hueshift when changing the brightness of a color.\nMove mouse vertically to change hue and move it horizontally to change input tint brightness.\nTop: exposure (offset hyperbolic),\nBottom: gamma * invertgamma","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["color","gradient","hue","brightness","hueshift"],"hasliked":0,"parentid":"mdVXWd","parentname":"Blue Glow Background"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265358979;\n\n//const vec3 tint = vec3(0.01, 0.25, 0.5); // blue\n//const vec3 tint = vec3(0.75, 0.25, 0.02); // orange\n\nvec3 changeExposure(vec3 col, vec3 b) {\n    b *= col;\n    return b/(b-col+1.);\n}\n\nvec3 changeExposure(vec3 col, float b) {\n    return changeExposure(col, vec3(b));\n}\n\nvec3 exposure01(vec3 c, float x) {\n    return c*x / (c*(2.*x-1.) - x+1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = iTime / 4. + 1.05;\n    float x = 0.5;\n    \n    vec2 mouse = iMouse.xy/iResolution.xy;\n    \n    if (iMouse.xy!=vec2(0)) { // if no mouse\n        t = 2.*mouse.y;\n        x = 1.-mouse.x;\n    }\n    \n    vec3 tint = 0.5+0.5*sin( (t + vec3(-0.5, 0., 0.5))*PI ); // cycle through the rainbow\n    tint = normalize(tint);\n    tint = tint+0.01-tint*0.02; // slight desaturation\n    \n    if (x < 0.5)\n        tint *= 2.*x; // darken input tint\n    else if (x > 0.5)\n        tint += 2.*x-1.-tint*(2.*x-1.); // brighten input tint\n    \n    float gradient = -1.-1./(uv.x-1.);   // map [0, 1] to [0, inf]\n    float gradient_inv = -1.-1./(-uv.x); // map [1, 0] to [0, inf]\n    \n    vec3 col = exposure01(tint, uv.x); // identical to: changeExposure(tint, gradient);\n    \n    //if (uv.y < 0.125)\n    //    col = exp(-gradient_inv * (1.-tint));\n    //else if (uv.y < 0.25)\n    //    col = 1.-exp(-2.*gradient * tint);\n    if (uv.y < 0.5)\n        col = pow(tint, 0.5*vec3(gradient_inv)) * (1.-pow(1.-tint, 2.*vec3(gradient)));\n        //col = -sin( (uv.x + tint)*PI );\n    //else if (uv.y < 0.625)\n    //     col = pow(tint, vec3(gradient_inv));\n    //else if (uv.y < 0.75)\n    //     col = 1.-pow(1.-tint, vec3(gradient));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}