{"ver":"0.1","info":{"id":"WscBz2","date":"1605517159","viewed":271,"name":"cheap sine noise","username":"johan2","description":"cheap sine noise looks detailed because of the twist that is added at each iteration. Twist is animated to show its effect","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["noise","sines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//identity rotated GOLDEN_ANGLE around x, then around y\n#define m3 mat3(-0.73736, 0.45628, 0.49808, 0, -0.73736, 0.67549, 0.67549, 0.49808, 0.54371)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float twist = sin(iTime * 0.3) * 2.;\n    vec2 uv = fragCoord/iResolution.y;\n    vec3 q = vec3(uv * 6.2831, iTime * .2);\n    float a = 1.;\n   \tvec3 c = vec3(0);\n    for(int i = 0; i <8; i++){\n        q = m3 * q; \n        vec3 s = sin( q.zxy / a) * a;\n        q += s * twist;\n        c += s;\n        a *= .75;\n    }\n    fragColor = vec4(c * .17 + .5, 1.);\n}","name":"Image","description":"","type":"image"}]}