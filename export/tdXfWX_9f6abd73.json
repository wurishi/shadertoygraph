{"ver":"0.1","info":{"id":"tdXfWX","date":"1589166371","viewed":95,"name":"LEEWAY","username":"os0450","description":"Day 38: LEEWAY","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["dailycodingchallenge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ss(v) smoothstep(0.01, 0.00, v)\n\nfloat rand(float x) {\n    return fract(sin(x)*233332.32432);\n}\n\nfloat dCircle(vec2 p, float r) {\n    return length(p)-r;\n}\n\nfloat dBox(vec2 p, vec2 s) {\n    p = abs(p);\n    p -= s;\n    return max(p.x, p.y);\n}\n\nfloat dTriangle(vec2 p) {\n    float r3 = sqrt(3.0);\n    p.y -= -r3*0.25;\n    return max(-p.y, p.y+r3*abs(p.x)-r3*0.5);\n}\n\nfloat sigmoid(float x, float a) {\n    return 1.0/(1.0+exp(-a*x));\n}\n\nmat2 rot(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 ip = fragCoord;\n    \n    float asr = iResolution.x/iResolution.y;\n    float pi = acos(-1.0);\n    float tau = acos(-1.0)*2.0;\n    \n    float t = iTime*0.6;\n    float cy = floor(t);\n    float mcy = mod(cy, 3.0);\n    float dcy = mod(floor(t-0.5), 13.0);\n    float ph = fract(t);\n    float dph = fract(t-0.5)+0.5;\n    float sigPh = sigmoid(cos(ph*pi), -30.0);\n    \n    p *= rot(sigmoid(sin(t*0.9), 15.0)*tau);\n    \n    vec2 q = p;\n    q.x = abs(q.x);\n    q.x -= asr*(smoothstep(0.01, 0.99, sigmoid(pow(cos(ph*pi), 2.0), -4.0))*3.0)+0.015;\n    \n    vec2 d;\n    vec2 dc = vec2(dCircle(p, 0.5), dCircle(q, 0.7));\n    vec2 db = vec2(dBox(p, vec2(0.5)), dBox(q, vec2(0.7)));\n    vec2 qq = vec2(q.x, q.y-0.05);\n    vec2 dt = vec2(dTriangle(p), dTriangle(qq*0.71)/0.71);\n    \n    vec2 dFrom, dTo;\n    \n    if(mcy == 0.0) {\n        dFrom = dc;\n        dTo = db;\n    } else if(mcy == 1.0) {\n        dFrom = db;\n        dTo = dt;\n    } else {\n        dFrom = dt;\n        dTo = dc;\n    }\n    d = vec2(mix(dFrom.x, dTo.x, sigPh),\n             max(-q.x, -mix(dFrom.y, dTo.y, sigPh)));\n    \n    vec3 c = mix(vec3(rand(dcy), rand(dcy+2.0), rand(dcy+13.0)),\n                 vec3(rand(dcy+1.0), rand(dcy+2.0+1.0), rand(dcy+13.0+1.0)),\n                 sigmoid(dph, 20.0));\n    c = normalize(c);\n    \n    vec3 col = vec3(0.0);\n    col += sin(length(p))*0.2*c*ss(-d.y);\n    \n    col += ss(d.x)*c*rand(d.x+iTime)*2.0;\n    \n    int ix = int(q.x*40.0);\n    int iy = int(abs(q.y)*40.0);\n    float v = mod(float(ix^iy), (11.0+dcy))/(10.0+dcy);\n    \n    col += ss(d.y)*clamp(v, 0.2, 1.0)*pow(c, vec3(0.2));\n    col += -exp(length(p))*0.1;\n    col = pow(col, vec3(0.5));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}