{"ver":"0.1","info":{"id":"cl3cD2","date":"1699635287","viewed":96,"name":"Circles!!","username":"arifr123","description":"Circles","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - vec2(0, iResolution.y) / 2.) / iResolution.x;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(4,0,2));\n    \n    vec2 guv = uv;\n    \n    float a = sin(0.5 * iTime);\n    \n    uv.x = mix(1. - uv.x, uv.x, 0.5 * (sign(a) + 1.));\n        \n    uv *= exp(0.01 * iTime);\n    \n    float clamped_a = 1. / min(1. / abs(a), 30.) * sign(a);\n    \n    uv.x = -log(uv.x) / clamped_a;\n    uv.y *= (1. / (1. - 1. / exp(clamped_a))) * exp(a * floor(uv.x));\n    \n    \n    \n    //col = vec3(ceil(uv.x) / 10., 0, 0);\n    \n    uv = 2. * (mod(uv + vec2(0, 0.5), 1.) - 0.5);\n    // [-1, 1] X [-1, 1]\n    \n    \n\n    vec2 abs_uv = abs(uv);\n    if(length(abs_uv) < 1.) {\n        col = 0.5 + 0.5*cos(iTime + guv.xyx + vec3(2,0,4));\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}