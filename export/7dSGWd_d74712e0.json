{"ver":"0.1","info":{"id":"7dSGWd","date":"1618099641","viewed":51,"name":"Steven","username":"SnoopethDuckDuck","description":"e","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159;\nconst float pi2 = 1. * pi / 3.;\nconst float pi3 = 2. * pi / 3.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \nfloat t= 0.5 * iTime;\nfloat b = 0.5 + 0.5 * cos(t);\nuv -= 0.5;\n // vec2 uv2 =  vec2(uv.x + 0.75 * cos(t), uv.y + 0.75 * sin(t));\n float taxi = abs(uv.x) + abs(uv.y );\nvec2 dir = uv * (1. +0.1 * tan(10.  * (-  2. * length(uv) * 4. * (1.-b) - b *  taxi))) * length(uv);\nfloat d =  (6. + 80. * b) * length(dir) ;\n\nfloat theta = atan( dir.y,dir.x);\n\nfloat p = cos(cos(theta - t));\nfloat p2 = cos(cos(theta -t + pi2 ));\nfloat p3 = cos(cos(theta - t + pi3));\n\nfloat val =2. -  sqrt(p *p + p2 * p2);\nfloat val2 = 2. -sqrt(p2 * p2 + p3 * p3);\nfloat val3 = 2. -sqrt(p3 * p3 + p * p);\n\n    // Time varying pixel color\n    vec3 col = 1. - 0.9 *vec3(val,val2,val3);\n    vec3 col2 =   mix(vec3(0.2126* col.x + 0.7152 * col.y + 0.0722 * col.z),\n     vec3(step(col.x * val,0.5 + 0.5 * cos(-t - d * cos(d+ t))),\n     step(col.y * val,0.5 + 0.5 * cos(-t - pi2 -d *  cos(d + t + pi2))),\n     step(col.z * val3,0.5 + 0.5 * cos(-t - pi3 - d* cos(d+ t + pi3)))),4. * (1.-d) * d );\n\n    col += sqrt(col * col + col2 * col2);\n  // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}