{"ver":"0.1","info":{"id":"wsVSWc","date":"1575262386","viewed":252,"name":"automata_1 (417c)","username":"balkhan","description":"I wanted to try my hand at golfing, there might be improvements to be made. \nAnyhow, here goes another automata :)\nMouseable.","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["mouse","automata","codegolf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 354 chars, thx to Fabrice Neyret, coyote & blackle\n// it really is a fun exercise \n// I believe it was ~1500 char when I posted it\n// all code is in Common tab\n\nvoid mainImage(out vec4 o, vec2 u) { mi }\n    \n// 375 c\n/*\n#define mainImage(O,u)\t\t\t\t\t\\\n\tif (iFrame%2>0) discard;\t\t\t\\\n\tO += A(u)\n*/\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/*\n* License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n* Created by bal-khan\n*/\n\n/*\nThis code is used by buffB and Image\nwe need to discard 1/2 frames but only in Image\nFabrice selection method checks against texture existance\n*/\n\n// 417 c\n#define A(u) texelFetch(iChannel0, ivec2(u), 0).x\n#define F    for (int k=0; P=vec2(k%3,k/3)-1., k<9; k++ ) if(k!=4)\n#define N    r-=r;  F r += A(v+P)/8.;\n#define mi                                                           \\\n    if ( iChannelResolution[iFrame%2].x < 1. ) discard;              \\\n    o -= o;                                                          \\\n    vec2 r,v,m=u-u,P;                                                \\\n    F { v=u+P; N; k%2 > 0 ?  m = max( m, vec2(A(v), r) * .2 ) : m; } \\\n    v=u; N; r = min( r, A(u) );                                      \\\n    o += min( A(u)*.1 + A((u-iMouse.xy)/.1)                          \\\n              + 1.                                                   \\\n              + .7*( m/.1 +m.x -r/.29 ) \t                         \\\n             , 1.).y;\n\n\n// 344 c, modified appareance a bit\n/*\n#define A(u) texelFetch(iChannel0, ivec2(u), 0).x\n#define F    for (int k=0; P=vec2(k%3,k/3)-1., k<9; k++ ) if(k!=4)\n#define N    r-=r;  F r += A(v+P)/8.;\n#define mi                                                           \\\n    if ( iChannelResolution[iFrame%2].x < 1. ) discard;              \\\n    vec2 r,v,m=u-u,P;                                                \\\n    F { v=u+P; N; k%2 > 0 ?  m = max( m, vec2(A(v), r) * .2 ) : m; } \\\n    v=u; N; r = min( r, A(u) );                                      \\\n    o += min( A(u)*.1 + A((u-iMouse.xy)/.1)                          \\\n              + 1.                                                   \\\n              + .7*( m/.1 +m.x -r/.29 ) \t                         \\\n             , 1.).y;\n*/\n\n// 354c\n/*\n#define A(u) texelFetch(iChannel0, ivec2(u), 0).x//\n#define F    for (int k=0; P=vec2(k%3,k/3)-1., k<9; k++ ) if(k!=4)//\n#define N    r-=r;  F r += A(v+P)/8.//\n#define mainImage(o, u)                                              \\\n    if ( iChannelResolution[iFrame%2].x < 1. ) discard;              \\\n    vec2 r,v,m=u-u,P;                                                \\\n    F { v=u+P; N; k%2 > 0 ?  m = max( m, vec2(A(v), r) * .2 ) : m; } \\\n    v=u; N; r = min( r, A(u) );                                      \\\n    o += min( A(u)*.1 + A((u-iMouse.xy)/.1)                          \\\n              + 1.                                                   \\\n              + 1.5*( m/.1 +m.x -r*3.5 ) / (r+m+1.)\t                 \\\n             , 1.).y\n*/\n\n\n// 365 c\n/*\n#define A(u) texelFetch(iChannel0, ivec2(u), 0).x//\n#define F    for (int k =0; k<9; k==3?k+=2:k++ )//\n#define P    vec2(k%3,k/3)-1.//\n#define N    r-=r;  F r += A(v+P)/8.//\n#define mainImage(o, u)                                      \\\n    if ( iFrame%2 == int(iChannelResolution[1]) ) discard;   \\\n    vec2 r,v,m=u-u;                                          \\\n    F { v=u+P; N; k%2 > 0 ?  m = max( m, vec2(A(u+P), r) * .2 ) : m; } \\\n    v=u; N; r = min( r, A(u) );                              \\\n    o += min( A(u)*.1 + A((u-iMouse.xy)/.1)                  \\\n              + .9                                           \\\n              + 1.5*( m/.1 +m.x -r*3.5 ) / (r+m+1.)\t         \\\n             , 1.).y\n*/\n\n// 375 c\n//#define A(u) texelFetch(iChannel0, ivec2(u), 0).x\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"/*\n* License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n* Created by bal-khan\n*/\n\nvoid mainImage(out vec4 o, vec2 u) { mi }\n\n// 375 c\n/*\n#define F for (int k =0; k<9; k==3?k+=2:k++ ) //\n#define P vec2(k%3,k/3)-1.\n\nfloat r;\nvoid N(vec2 u) { r = .0; F r += A(u+P)/8.;  }\n\n#define mainImage(o, u)                                     \t\\\nF { N(u+P); k%2 > 0 ?  o = max( o, vec4(A(u+P), r,u) * .2 ) : o; } \\\n    N(u); r = min( A(u), r );                                   \\\n    o.x = min(A(u)*.1 + A((u-iMouse.xy)/.1)                     \\\n              + .9                                              \\\n              + 1.5*( o.y/.1 +o.x -r*3.5 ) / (r+o.y+1.)\t        \\\n             , 1.)\n\n// 381 c\n/*\n#define F for (int k =0; k<9; k==3?k+=2:k++ )\n#define P vec2(k%3,k/3)-1.\n\nfloat r;\nvoid N(vec2 u) { r = .0; F r += A(u+P)/8.;}\n\n#define mainImage(o, u)                                     \t\\\n    F k%2 > 0 ? o = max( o, vec4(A(u+P), N(u+P),u) * .2 ) : o;  \\\n    r = min( A(u), N(u) );                                      \\\n    o.x = min(A(u)*.1 + A((u-iMouse.xy)/.1)                     \\\n              + .9                                   \t\t\t\\\n              + 1.5*( o.y/.1 +o.x -r*3.5 ) / (r+o.y+1.)\t        \\\n             , 1.)\n*/\n\n// 392 c \n/*\n\n#define F for (int k =0; k<9; k==3?k+=2:k++ ) // still a win\n#define P vec2(k%3,k/3)-1.                    // still a win\n\nfloat   N(vec2 u) \n{\n    float r = .0;\n    F\n        r += A(u+P)/8.;\n    return r;\n}\n\n//#define N(u, r) r-=r;F r += A(u+P)/8.;\n\n#define mainImage(o, u)                                     \t\\\n    F                                                           \\\n        o.xy = max( o.xy, vec2(A(u+P), N(u+P)) * (k%2 > 0 ? .2 : .05)); \\\n    o.z = min( N( u ), A(u));                                   \\\n    o.x = min(A(u)*.1+A((u-iMouse.xy)/.1)                       \\\n              + .9                                   \t\t\t\\\n              + 1.5*( o.y/.1 +o.x -o.z*3.5 ) / (o.z+o.y+1.)\t    \\\n             , 1.)                                              \\\n\n*/\n\n// Fabrice alternate kernel\n// it take up 12 more chars\n// I guess nothing is free\n/*\nfloat   N(V u) \n{\n    float r = .0;\n    F\n        r += A(u+P)/length(P);\n    return r/6.83;\n}\n*/\n\n//#define N(u) ( 9.*texture(iChannel0, (u)/R, 1.).x - A(u) )/8\n\n// 646c\n/*\n#define mainImage(o, u)                                     \t\\\n    V v =   u /R -.5                                            \\\n          -.3* V( cos(iTime/4.), sin(iTime*.75) );              \\\n    vec3 r;                                                     \\\n    F                                                           \\\n        r.xy = max( r.xy, V(A((u+P)), N(u+P)) * (k%2 == 1 ? .2 : .05));\\\n    r.z = min( N( u ), A(u));                                   \\\n    o = vec4(iFrame < 1)+A(u)/16.                               \\\n       +clamp(A(u)*.1                                           \\\n              + 1.8                                   \t\t\t\\\n              + 3.*( r.y/.1 +r.x -r.z*3.5 ) / (r.z+r.y+1.)\t    \\\n             , -2., 2.)/2.;                                     \\\n    iMouse.z > 0. && length(u/R-iMouse.xy/R) < .1               \\\n    || length(v) < .5*B( R*V(atan(v.x,v.y)/6.28+.5, .75) ) - .2 \\\n        ? o -= .75 : o\n*/\n\n// 751\n/*\nfloat   p;\n\nfloat   N(V u)\n{\n    float r = .0;\n    \n    F // For\n       r += A((u+P))/8.;\n    \n    // I tryed to use mipmap average but something might be eluding me\n    // This is the closest I come to result, and it's not even close\n    // I don't think it's worth it in this particular case, but I was also not\n    // able to get it working\n    //r = texelFetch(iChannel0, ivec2((u)*R), 1).x*9.;\n    //r = r +-1.0*\n    //    texelFetch(iChannel0, ivec2(u*R), 0).x*1.\n    //    ;\n    //r = r/8;\n    \n    \n    return r;\n}\n\nfloat   l(V u)\n{\n    vec3 r;\n    r-=r;\n\n    F\n        r.y = max(r.y, N(u+P) W);\n\n    \t//X=texelFetch(iChannel0, ivec2(u*R)>>2, 2).x;\n    F \t\t\t// --> down to 960 chars\n        r.x = max(r.x, A((u+P)) W); // --> 927\n    r.z = min(N(u), p);\n    return(r.y/.1+r.x-r.z*3.5)/(r.z+r.y+1.);\n}\n\n#define mainImage(o, u)                                     \t\\\n    V\tv = (u-R*.5)/R-.35*V(cos(iTime*.25), sin(iTime*.75));\t\\\n    p = A(u);\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n    o = vec4(iFrame < 1)+p/16.;\t\t\t\t\t\t\t\t\t\\\n    o +=                                                    \t\\\n        clamp(                                              \t\\\n            p*.5                                            \t\\\n            +                                               \t\\\n            .9*(1.-p*.5)                                    \t\\\n            +                                               \t\\\n            1.5*l(u)\t\t\t                    \t\\\n        , -1., 1.);                                         \t\\\n    if (                                                    \t\\\n            (                                               \t\\\n                iMouse.z > 0.                               \t\\\n                &&                                          \t\\\n                length(u/R-iMouse.xy/R)<.1                  \t\\\n            )                                               \t\\\n            ||                                              \t\\\n            (                                               \t\\\n                length(v)                                   \t\\\n                -(-.2+.5*B(R*V(atan(v.x,v.y)/6.28+.5, .75)))  \t\\\n                <.0                                         \t\\\n            )                                               \t\\\n        )                                                   \t\\\n        o -= .75;                                           \t\\\n    o = clamp(o, -1., 1.)                                   \t\\\n            */\n// Clamping might be needed, I don't see a change with my hardware but idk (-18c)\n// this is not shorter because of mouse z conditional\n/*\no.x -= .75*(iMouse.z>.0?1.:0.)*(step(length(u/R-iMouse.xy/R), .05))+\\\n    step(length(v)-(-.2+.5*B(V(atan(v.x,v.y)/6.28+.5, .75))), .0);\\\n*/","name":"Buffer B","description":"","type":"buffer"}]}