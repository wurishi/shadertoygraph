{"ver":"0.1","info":{"id":"XtBBzw","date":"1514995384","viewed":197,"name":"The Beauty of Fractals","username":"hypothete","description":"Click and drag to see the fractal!\n\nA lovely Julia fractal described by the book \"The Beauty of Fractals,\" by H. -.O Peitgen and P. H. Richter\n\nGradient from GPU Gems via https://www.alanzucconi.com/2017/07/15/improving-the-rainbow/\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractals","book","doityourself"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 bump3 (vec3 x) {\n    vec3 y = 1.0 - x * x;\n    y = max(y, vec3(0.0));\n    return y;\n}\n\nfloat saturate(float x) {\n  return max(0.0, min(1.0, x));\n}\n\nvec3 spectral_gems (float w) {\n    return bump3(\n    \tvec3(\n \t\t\t4.0 * (w - 0.75), // Red\n \t\t\t4.0 * (w - 0.5), // Green\n \t\t\t4.0 * (w - 0.25) // Blue\n \t\t)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float xOffset = -0.5 * (iResolution.x - iResolution.y)/iResolution.x;\n\tvec2 uv = fragCoord / iResolution.y + vec2(xOffset, 0);\n    float m = 100.0;\n    float k = 200.0;\n    vec2 pq = 1.0 - 2.0 * iMouse.xy / iResolution.y;\n    if (iMouse.x == 0.0 && iMouse.y == 0.0) {\n        pq = vec2(0.4, 0.15);\n    }\n    vec2 dmin = vec2(-1.5);\n    vec2 dmax = vec2(1.5);\n    vec2 dv = (dmax - dmin)/(pq-vec2(1.0));\n    vec2 dk = dmin - uv * dv;\n    \n    float rv = 0.0;\n    \n    for(float s=0.0; s<k; s+=1.0){\n        dk = vec2(\n        \tdot(dk, vec2(dk.x,-dk.y))+pq.x,\n        \t2.0*dk.x*dk.y+pq.y\n    \t);\n        float rr = dot(dk, dk);\n        if(rr > m){\n        \trv = s/k;\n            break;\n        }\n    }\n\n    rv = mod(10.0 * rv + iTime/5.0, 2.0);\n\tfragColor = vec4(spectral_gems(rv),1.0);\n}","name":"Image","description":"","type":"image"}]}