{"ver":"0.1","info":{"id":"7lXBRr","date":"1650459621","viewed":74,"name":"Circling","username":"nickykit","description":"Mesmerising circles upon circles","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["math","circle","beautiful","satisfying"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool equals(float x, float y, float tol) { return abs(x - y) < tol; }\nfloat vary(float range, float minimum, float offset, float speed) { return (sin(iTime / speed + offset) + 1.0) / 2.0 * range + minimum; }\nfloat vary(float range, float minimum, float offset) { return vary(range, minimum, offset, 1.0); }\n\n\nvec4 circle(float radius, float x, float y, vec2 fragCoord) {\n    float xMid = fragCoord.x - x;\n    float yMid = fragCoord.y - y;\n    float x2 = xMid * xMid;\n    float y2 = yMid * yMid;\n\n    vec4 col = vec4(0.0, 0.0, 0.0, 0.0);\n    float detail = 10.0;\n    for (float i = 0.0; i < detail; i++) {\n        float newRadius = radius - i / detail * radius;\n        if (equals(x2 + y2, vary(newRadius, 0.0, 0.0), vary(detail, vary(5000.0, 100.0, 0.0, 2.0), 0.0))) {\n            col = vec4(vary(1.0, 0.0, i + 0.0), vary(1.0, 0.0, i + 2.0),vary(1.0, 0.0, i + 3.0), 1.0);\n        }\n    }\n    return col;\n}\n\nvec4 backColor(vec2 coord) {\n    float offset = (coord.x / iResolution.x) * (coord.y / iResolution.y);\n\n    return vec4(\n        vary(1.0, 0.0, iTime + offset, 100.0),\n        vary(1.0, 0.0, iTime + offset + 1.0, 100.0),\n        vary(1.0, 0.0, iTime + offset + 2.0, 100.0),\n        1.0\n    );\n}\n\nfloat rand(float x) {\n    return x * 1664525.0 + 1013904223.0;\n}\n\nint rand1(int a)\n{\n    int lim = 1000000;\n    a = (a * 125) % 2796203;\n    return ((a % lim) + 1);\n}\n\nfloat rand1(float a) { return float(rand1(int(a))); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\n    vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\n    vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    float minRes = min(iResolution.x, iResolution.y);\n    float maxRes = max(iResolution.x, iResolution.y);\n    float radius = (maxRes / 2.0) * (maxRes / 2.0);\n    \n    fragColor = backColor(fragCoord);\n    vec4 color;\n    for (float i = 0.0; i < 50.0; i++) {\n        if ((color = circle(radius, vary(1.0, 0.0, sin(i) * i) * iResolution.x, vary(1.0, 0.0, cos(i) * i) * iResolution.y, fragCoord)).w == 1.0) {\n            fragColor = color;\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}