{"ver":"0.1","info":{"id":"4cVXDz","date":"1715082465","viewed":67,"name":"nice loading","username":"salman","description":"loading","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["loading"],"hasliked":0,"parentid":"XcVXDz","parentname":"circle2345ks34534"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\nfloat circle(vec2 uv, vec2 p, float r, float blur) {\n    float d = length(uv-p);\n    float col = smoothstep(r, r-blur, d);\n    return col;\n}\n\n#define _iTime 0.5+0.5*sin(iTime*2.0)\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.00 - iResolution.xy)/iResolution.y;\n\n    \n    float r = 0.4;\n    float r1 = 0.3;\n    float r2 = r1-0.2;\n    \n    //vec2 rxy = vec2(0.0);//vec2(cos(iTime), sin(iTime)) * 0.4;\n    \n    // Time varying pixel color\n    vec3 col = vec3(0.5+0.5*sin(iTime*2.0), 0.5+0.5*sin(iTime*3.0), 0.5+0.5*sin(iTime*4.0));//0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float c = 0.0;\n    \n    int slices = 10;\n\n    \n    for(int i=1; i<=slices; i++) {\n        float angle = (2.0 * PI) / float(slices);\n        \n        r += float(i) * 0.005;\n        \n        vec2 rxy = vec2(cos(angle*float(i)*iTime), sin(angle*float(i)*iTime)) * r;\n        \n        c += circle(uv+rxy, vec2(0.0, 0.0), r1, 0.3);\n        c += circle(uv+rxy, vec2(0.0, 0.0), r2, 0.009);\n    }\n    \n    \n    col *= c;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}