{"ver":"0.1","info":{"id":"mddczn","date":"1694685707","viewed":30,"name":"03 - dots","username":"thomasfriday","description":"My third shader.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["dots","lissajous"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n  uv = uv * 5. + 0.5;\n  \n  vec2 id = floor(uv);\n  vec2 pos = fract(uv) * 2. - 1.;\n  \n  float cx = cos(3.1415 / 2. + iTime * id.x * 0.7); \n  float sy = sin(iTime * id.y * 0.7);\n  vec2 delta = vec2(cx, sy) * 0.7;\n  float x = length(pos + delta);\n    \n  vec3 col = vec3(0);\n  col += smoothstep(1. / iResolution.y, 0., x - 0.2);\n  \n  // display grid\n  //if (pos.x > 0.95 || pos.y > 0.95) col = vec3(1);\n  \n  fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}