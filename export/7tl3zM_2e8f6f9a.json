{"ver":"0.1","info":{"id":"7tl3zM","date":"1660214661","viewed":69,"name":"Life [Expl]","username":"Expletive","description":"dev","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["life"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord)/iResolution.xy;\n    fragColor = texture(iChannel1, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define NEIGH_CHAN iChannel2\n#define SELF_CHAN  iChannel1\n#define INIT_CHAN iChannel3\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n   vec4 cell = texture(SELF_CHAN,fragCoord/iResolution.xy);\n   if ( iMouse.z < 1.0) {\n       \n    /* From https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life :\nAny live cell with fewer than two live neighbors dies, as if by underpopulation.\nAny live cell with two or three live neighbors lives on to the next generation.\nAny live cell with more than three live neighbors dies, as if by overpopulation.\nAny dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\n    */\n      vec4 neighbours = texture(NEIGH_CHAN,fragCoord/iResolution.xy) * 8.0;   \n\n      if (cell.y > 0.5) {\n        // Cell alive\n        if (neighbours.y > 1.1 && neighbours.y < 3.3) {\n           fragColor = vec4(1.0);\n        }\n        else {\n           fragColor = vec4(0.0,0.0,0.0,1.0);\n        }\n      } else {\n        // Cell currently dead\n        if (neighbours.y > 2.5 && neighbours.y < 3.5) {\n            fragColor =  vec4(1.0);\n        } else {\n            fragColor = vec4(0.0);\n        }\n      }\n  } else { \n       fragColor=cell + ( 1.0-step(1.0,abs(distance(fragCoord,iMouse.xy))));\n  }\n\n  if (iFrame < 120) {\n    fragColor = vec4(length(fwidth(step(0.5,texture(INIT_CHAN, fragCoord/iResolution.xy)))));\n  }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SRC_CHAN iChannel1\n\n// This buffer is the neighbour count of buffer B\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 invres = vec2(1.0/iResolution.x,1.0/iResolution.y);\n    vec4  neighCount = texture(SRC_CHAN,(fragCoord+1.0)*invres) + \n   \t\t\t     texture(SRC_CHAN,(fragCoord-1.0)*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(1.0,0.0))*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(1.0,-1.0))*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(0.0,1.0))*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(0.0,-1.0))*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(-1.0,1.0))*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(-1.0,0.0))*invres);\n    fragColor = vec4(neighCount.xyz / 8.0,1.0);\n    //fragColor.xyz = fragColor.yyy;\n\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord)/iResolution.xy;\n    fragColor = texture(iChannel1, uv);\n\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer C","description":"","type":"buffer"}]}