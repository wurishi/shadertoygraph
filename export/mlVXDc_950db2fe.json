{"ver":"0.1","info":{"id":"mlVXDc","date":"1686436832","viewed":27,"name":"raytracing ftw!","username":"JJmartinodev","description":"raytracer","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raytracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.x/iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.x *= aspect;\n\n    vec3 cam = vec3(0,0,-10);\n    float near = cam.z + 5.0;\n\n    Sphere s;\n    Ray r;\n    s.pos = vec3(0,0,0);\n    s.r = 1.0;\n    \n    r.pos = vec3(uv,near);\n    r.dir = cam-r.pos;\n\n    vec3 light = vec3(0,1,0);\n\n    Result res = trace(s,r);\n    fragColor = vec4(0.1);\n    if(res.hit) {\n        vec3 hit = r.dir*res.t;\n        vec3 normal = normalize(s.pos-hit);\n        \n        r.pos = hit + normal;\n        r.dir = light - r.pos;\n        \n        Result b = trace(s,r);\n        if(b.hit) {\n            vec3 bhit = r.dir*b.t;\n            vec3 bnormal = normalize(s.pos-bhit);\n            fragColor = vec4(normalize(bhit).y);\n            return;\n        }\n        return;\n    }\n    fragColor = vec4(0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"struct Ray {\n    vec3 pos;\n    vec3 dir;\n};\n\nstruct Sphere {\n    vec3 pos;\n    float r;\n};\n\nstruct Result {\n    bool hit;\n    float t;\n};\n\nResult trace(Sphere s, Ray r) {\n    Result res;\n    vec3 oc = r.pos - s.pos;\n    float a = dot(r.dir, r.dir);\n    float b = 2.0 * dot(oc, r.dir);\n    float c = dot(oc, oc) - s.r*s.r;\n    float disc = b*b - 4.0*a*c;\n    if(disc < 0.0) {\n       res.hit = false;\n       return res;\n    }\n    res.hit = true;\n    res.t = (-b - sqrt(disc) ) / (2.0*a);\n    return res;\n}","name":"Common","description":"","type":"common"}]}