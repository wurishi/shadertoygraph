{"ver":"0.1","info":{"id":"7lSSRw","date":"1627297051","viewed":51,"name":"Wave Funct Viz","username":"MarcFly","description":"Stemming from a tweet by @pixelsnafuy https://twitter.com/pixelsnafu/status/1419580211591516160?s=20.\nIt's been a couple years since I studied or learned about wave functions and things, so I tried making this as a visualization challenge.\n\nThe ","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["visualization","illusion","sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float k = 50.;\nfloat w = 1.;\nfloat A = .05;\n\nfloat freq1 = 1.62;\nfloat freq2 = 1.6;\n\nfloat pi = acos(-1.);\n\n#define PI 3.14159265358979323846\nfloat shift1 = 0.;\nfloat shift2 = PI/.9;\n\nfloat dist = .02;\n\nfloat wave(in vec2 pos, float height, float time)\n{\n    return  height * sin(w*time + k*pos.x) - pos.y;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(1.);\n\n    vec2 norm_vec = vec2(pi, 1.);\n    vec2 wave1_pos = uv + vec2(0., -.75);\n    float wave1 = wave(wave1_pos * norm_vec*freq1, A, shift1);\n    float abs_wave1 = float(abs(wave1) < dist);\n    \n    vec2 wave2_pos = uv + vec2(0., -.25);\n    float wave2 = wave(wave2_pos * norm_vec*freq2, A, shift2);\n    float abs_wave2 = float(abs(wave2) < dist);\n    \n    col -= vec3(0, abs_wave1, abs_wave1);\n    col -= vec3(0, abs_wave2,abs_wave2);\n    \n    uv.x -= fract(iTime/10.); //mod(iTime/10., 2.);\n    \n    if(fract(uv.x) <= .43)\n        col -= vec3(1. - ceil(sin(200.*uv.x - 5.)-.9));\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}