{"ver":"0.1","info":{"id":"wsdGRX","date":"1569007495","viewed":209,"name":"Waving Abyss","username":"StarikTenger","description":"Waves","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["wavewaves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float x = fragCoord.x/100.0;\n    float phase = iTime;\n\n    float ass = 0.0;\n    float arr[10];\n\n    arr[0] = -0.55;\n    arr[1] = 0.77;\n    arr[2] = 0.15;\n    arr[3] = -0.45;\n    arr[4] = -0.3;\n    arr[5] = 0.42;\n    arr[6] = 0.433;\n    arr[7] = -0.13;\n    arr[8] = 0.55;\n    arr[9] = 0.65;\n\n    for(float i=0.0; i<7.0; i+=1.0){\n    \tfloat k = pow(2.0, i);\n    \tass += sin(iTime + arr[int(i)] * x ) * sin((x+ arr[int(i)] * phase)*k/2.0) / k / 4.0;\n    }\n\n\n    vec3 col = vec3(sin(iTime), distance(vec2(0, 0), fragCoord)/500.0, 0);\n    float val = ass/2.0 + 0.5 - uv.y;\n    float p = 100.0;\n    float p1 = 40.0;\n    if(uv.y < ass/2.0 + 0.5)\n        col = vec3(pow(1.0-val, p), pow(1.0-val, p), pow(1.0-val, 2.0));\n    else {\n        val = -val;\n        col = vec3(pow(1.0-val, p), pow(1.0-val, p), pow(1.0-val, p1));\n    }\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}