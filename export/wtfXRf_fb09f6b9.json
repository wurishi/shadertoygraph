{"ver":"0.1","info":{"id":"wtfXRf","date":"1563717168","viewed":215,"name":"ellipse with feather edge2","username":"gcj2450","description":"two point  draw a ellipse , like photoshop select ellipse with feather edge","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["ellipse","featheredge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//by NJ.Bytework\n\nconst float _EdgeBlur=0.02;\nconst bool _Invert=false;\n//ellipse func from iq.\nfloat ellipse(vec2 center, vec2 uv, float a, float b)\n{\n    center = center - uv;\n    a = 1.0 / a;\n    b = 1.0 / b;\n    return (length(center*vec2(a, b)) - 1.0) / (length(center*vec2(a*a, b*b)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = texture(iChannel0,uv);\n    vec2 p1=vec2(sin(2.0*iTime)*0.5+0.5,cos(1.0*iTime)*0.5+0.5);\n\tvec2 p2=vec2(0.5,0.5);\n    vec2 center= (p1.xy + p2)*0.5;\n    \n    float a = abs(p1.x - p2.x)*0.5;\n    float b = abs(p1.y - p2.y)*0.5;\n    \n    float de1 = ellipse(center,uv, a,b);\n    float edge = smoothstep(de1 - _EdgeBlur, de1 + _EdgeBlur, 0.0);\n    if (_Invert)\n    {\n        fragColor= edge *col;\n    }\n    else\n    {\n        fragColor =(1.0-edge) *col;\n    }\n\n}","name":"Image","description":"","type":"image"}]}