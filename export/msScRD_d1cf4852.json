{"ver":"0.1","info":{"id":"msScRD","date":"1687465956","viewed":71,"name":"mandelbrot set zoom test","username":"DeltaT","description":"looks pretty ugly with no AA","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 2000\n\nvec2 complexSquare(vec2 z) {\n    vec2 z2 = vec2(0);\n    z2.x = z.x*z.x - z.y*z.y;\n    z2.y = 2.*(z.x*z.y);\n    return z2;\n}\n\nvec3 colorMap(float p) {  \n    // https://www.desmos.com/calculator/tox6hpgflr\n    float r = clamp(abs(6.*p-3.)-1., 0., 1.);\n    float g = clamp(-abs(6.*p-2.)+2., 0., 1.);\n    float b = clamp(-abs(6.*p-4.)+2., 0., 1.);\n    \n    return vec3(r, g, b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    \n    float timeZoom = clamp(pow(1.25, iTime-5.), 0., pow(1.25, 40.));\n    vec2 z = vec2(0);\n    vec2 c = vec2(uv.x + 0.37965*timeZoom, uv.y - 0.2287*timeZoom) / timeZoom;\n    vec2 zold = vec2(0);\n    \n    int iter = clamp(int((iTime)*15.), 0, MAX_ITER);\n    const float threshold = 2.;\n    \n    vec3 col = vec3(0);\n    float brightness = 0.;\n    \n    for (int i = 0; i <= iter; i++) {\n        zold = z;\n        z = complexSquare(z) + c;\n        if (length(z) < threshold) {\n            col = vec3(0);\n        } else {\n            brightness = clamp(float(i)/clamp(float(iter), 0., 15.), 0., 1.);\n            col = vec3(colorMap(fract(log(float(i)/25.+1.) + iTime/6.))) * brightness; break;\n        }\n        if ((i != 0 && z == c) || z == zold) { break; }\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}