{"ver":"0.1","info":{"id":"tdKGDw","date":"1702212720","viewed":22,"name":"band test","username":"RayRayB","description":"Made a band, distorted the band, then blurred the band. I don't even recall when I did that","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["aa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Remap01(float a, float b, float t) {\n \treturn (t-a) / (b-a);\n}\n\nfloat Remap(float a, float b, float c, float d, float t) {\n \treturn Remap01(a, b, t) * (d-c)+c;\n}\n\nfloat Band(int v, vec2 uv, float w, float blur, vec2 p) {\n \tfloat r = .0;\n    \n    if(v>0) r = smoothstep(p.x-w, p.x-(w-blur), uv.x) - smoothstep(p.x+w, p.x+w+blur, uv.x);\n    else r = smoothstep(p.y-w, p.y-(w-blur), uv.y) - smoothstep(p.y+w, p.y+w+blur, uv.y);\n    \n    return r;\n}\n\nfloat Cross(vec2 uv, float w, float blurv, float blurh, vec2 p) {\n \tfloat r =.0;\n    \n    r = Band(1, uv, w, blurh, p) + Band(0, uv, w, blurv, p);\n    \n    return r;\n}\n\nfloat Rect(vec2 uv, float h, float w, vec2 p, float blur) {\n\tfloat r = .0;\n    \n    float bh = Band(1, uv, h, blur, p);\n    float bv = Band(0, uv, w, blur, p);\n    \n    r = bv * bh;\n    \n    return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5; // -0.5 >< 0.5\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float t = iTime;\n    vec2 mp = vec2(iMouse.x, iMouse.y);\n    vec2 mpn = mp / iResolution.xy;\n    mpn -= 0.5;\n    mpn.x *= iResolution.x / iResolution.y;\n    \n    float blurv = Remap(-0.5, -0.35, 0.05, 0.01, uv.x);\n    float blurh = Remap(-0.5, -0.35, 0.05, 0.01, uv.y);\n    \n    float x = uv.x;\n    float m = sin(x*8.-iTime)*.1;\n    float y = uv.y-m;\n    \n    float b = Remap(-1., 1., 0.001, 0.9, x); \n    \n    float f = Rect(vec2(x, y), 0.9, 0.1, vec2(0.), b);\n    // Output to screen\n    fragColor = vec4(vec3(f),1.0);\n}","name":"Image","description":"","type":"image"}]}