{"ver":"0.1","info":{"id":"4ddBD4","date":"1525177874","viewed":138,"name":"My Symbol","username":"chao_mu","description":"This is based on my tattoo and personal symbol.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["symbol"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Produce a 1 if the provided value is <= 0, with a small transitional blur\n#define S(v) smoothstep(blur, 0., v)\n\n// Draw (return 1) a circle at the origin with the radius of r. \n#define circle(U, r) S(length(U) - r)\n\n// Draw (return 1) a crescent made from two overlapping circles.\n// The overlap is controlled by the provided offset. The two radiuses are determined by r.\n#define crescent(U, offset, r) circle(U, r) - circle( U - vec2(offset,0), r)\n\n// Draw a line segment of length and width. \n#define segment(U, len, width)  S(abs(U.x) - width) * S(abs(U.y) - len)\n\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat background(vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float timeMultiplier = random(vec2(uv.y)) / 2.;\n    float seed = uv.x + (iTime * timeMultiplier) * 2.;\n    seed = floor(seed);\n    \n    return random(vec2(seed));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1), so that we can\n    // draw around the origin and be at the center.\n    vec2 uv = ( 2.*fragCoord - iResolution.xy ) / iResolution.y;\n\n    // Define a gradient to use at edges that is small relative to the size of the screen\n    // this allows to work on multiple resolutions\n    // This value is used in our macros.\n    float blur = 2./iResolution.y;\n    \n    // Draw on either side of the y axis.\n    uv.x = abs(uv.x);\n    \n    float mask = 0.;\n    mask += crescent(uv - vec2(.37, 0.1),  .18, .4);\n    mask += segment(uv, .75, .075);\n    mask += segment((uv + vec2(0, 0.47)), .075, .35);\n    mask = clamp(mask, 0., 1.);\n    \n    mask += background(fragCoord);\n    \n    // Output to screen\n    fragColor = vec4(vec3(mask),1.0);\n}\n","name":"Image","description":"","type":"image"}]}