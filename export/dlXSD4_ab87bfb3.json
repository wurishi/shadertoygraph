{"ver":"0.1","info":{"id":"dlXSD4","date":"1675121224","viewed":268,"name":"pixilartifier","username":"MadMath123","description":"Want to create easy pixel art? Well, here ya go!!!!","likes":3,"published":1,"flags":2,"usePreview":0,"tags":["pixel","camera","webcam","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define colStepDiff 4.\nvec3 getPos(vec2 uv)\n{\n    return floor(texture(iChannel0, floor(uv * iResolution.xy / colStepDiff) * colStepDiff / iResolution.xy).rgb * 8.) / 8.;\n}\n\nvec3 colorize(vec3 col)\n{\n    float avgCol = (col.r + col.g + col.b) / 3.;\n    if(avgCol < .2) col.b += .1;\n    if(avgCol > .8) col.g += .1;\n    if(abs(col.r - col.g) > .2 && abs(col.g / col.b - 1.) > 1.) col.r = col.g + .2 * sign(col.r - col.g);\n    if(abs(col.b - col.g) > .2 && abs(col.g / col.r - 1.) > 1.) col.b = col.g + .2 * sign(col.b - col.g);\n    return col*.45+.25;\n}\n\nvec3 getCol(vec2 uv)\n{\n    vec3 col = getPos(uv);\n    vec3 stepFactor = vec3(colStepDiff * 2. / iResolution.x, colStepDiff * 2. / iResolution.y, 0.);\n    vec3 colU = getPos(uv + stepFactor.zy);\n    vec3 colD = getPos(uv - stepFactor.zy);\n    vec3 colR = getPos(uv + stepFactor.xz);\n    vec3 colL = getPos(uv - stepFactor.xz);\n    vec3 avgCol = (colU+colR+colD+colL) / 4.;\n    float rDiff = abs(col.r - avgCol.r);\n    float gDiff = abs(col.g - avgCol.g);\n    float bDiff = abs(col.b - avgCol.b);\n    if((rDiff<.3?1:0) + (gDiff<.3?1:0) + (bDiff<.3?1:0) == 1){\n        if(rDiff < .3) col.r = (col.g + col.b) / 3.;\n        if(gDiff < .3) col.g = (col.b + col.r) / 3.;\n        if(bDiff < .3) col.b = (col.g + col.r) / 3.;\n    }\n    return floor((colorize(col) * 6. - colorize(colU) - colorize(colD) - colorize(colR) - colorize(colL)) / 2. * 32.) / 32.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord / iResolution.xy);\n    \n    fragColor = vec4(getCol(uv),1.);\n}","name":"Image","description":"","type":"image"}]}