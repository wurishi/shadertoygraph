{"ver":"0.1","info":{"id":"ftK3DR","date":"1649018400","viewed":104,"name":"rotate_circle","username":"trigun","description":"learn","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rotatecircle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define t iTime\n\nfloat circle(vec2 _uv){\n    float pct = distance(_uv, vec2(0.0));\n    return pct = smoothstep(0.9, pct, 0.8) + _uv.x + _uv.y;\n}\n\nvec3 gear(vec2 _uv){\n    float r = length(_uv)*2.0;\n    float a = atan(_uv.y, _uv.x);\n    float f = smoothstep(-.5,1., cos(a*10.))*0.2+0.5;\n    vec3 gear = vec3(1.-smoothstep(f,f+0.02,r));\n    return gear;\n}\n\nmat2 rotate(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat fLight(vec2 _uv){\n    vec4 f = vec4(0.0);\n    vec2 r = abs(_uv.xy);\n    float s = 0.0;\n    return s = max(r.x,r.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy *2. -1.;\n    float aspect = iResolution.x / iResolution.y;\n    uv.x *= aspect;\n    vec3 col = vec3(0.0);\n    vec3 col2 = vec3(0.0);\n    vec3 col3 = vec3(0.0);\n    vec3 fl = vec3(fLight(uv));\n    \n    uv = rotate(t * PI ) * uv;\n    uv += vec2(0.0);\n    \n    col2 = gear(uv);\n    \n    \n    col3 = vec3(fLight(uv));\n    col3.r = sin(t);\n    col3.g = sin(t);\n    \n    col = vec3(circle(uv)) + col2 + col3;\n    //vec3(fLight(uv));\n    col.r = sin(t) * sqrt(uv.x) + sqrt(uv.y);\n    \n    \n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}