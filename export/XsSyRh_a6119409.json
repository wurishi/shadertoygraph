{"ver":"0.1","info":{"id":"XsSyRh","date":"1490723455","viewed":760,"name":"pattern generator","username":"FabriceNeyret2","description":"NB: comment either 13 or 14 for ternary vs color mode.","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["pattern","permutations"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define N 29.  // 2,3 5,6 10,11 15 17 22,23 29,30 33,34 41 46,47 51 53 55 58,59 66 69 71 82,83 85 87 89 94 101,102 106,107 110 113 115 118 123 131...257\n                 // P P P 2 2  P  2   P 2   P  P 2  2  2   P 2   P 2  P  2  2  P  3  2  P  2  P  2  2  P  2   P  2   2    P   3   P   2   2   2   P ... P\n// NB: if N prime above, is a permutation for all t (black diagonal). Other N above: is a permutation for t=1.\n// see also https://www.desmos.com/calculator/mc3clul4dm\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    float N = floor(2.+2.*mod(iTime,64.));\n\tU = floor(U/2.); //floor(N *U/iResolution.y);\n    vec2 V = floor(U/(N+4.)); U=mod(U,N+4.);                    // tiling\n    float t = V.x + floor(iResolution.x/2./(N+4.))*V.y;         // pattern Id per tile\n             // ceil(mod(iTime*3.,N-1.));\n\tO = U.x<N && U.y<N ?  U = mod(t*U*U*U, N),                  // magic hash (c) Fabrice Neyret\n                          //vec4(U-U.yx,0,0)                    // debug: ternary mode\n                          .5+.5*cos(U.x-U.y+vec4(0,2.1,-2.1,0)) // colors mode\n                       : O-O;\n}","name":"Image","description":"","type":"image"}]}