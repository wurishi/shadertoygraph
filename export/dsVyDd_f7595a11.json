{"ver":"0.1","info":{"id":"dsVyDd","date":"1696767853","viewed":28,"name":"try on Mandelbrot","username":"NaroXo","description":"First try on the Mandelbrot set with the help of the YT channel Coding Train. Coloring is self developed and probably awful.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100.\n#define ZOOM 1.1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 offset = vec2(-.7,0.);\n    \n    uv += offset;\n    uv *= ZOOM;\n    \n    float n = 0.;\n    \n    float a = uv.x;\n    float b = uv.y;\n    \n    while(n<MAX_STEPS){\n        float aa = a*a - b*b;\n        float bb = 2.*a*b;\n        \n        a = aa+uv.x;\n        b = bb+uv.y;\n        if(abs(a+b) > 16.){\n            break;\n        }\n        n+=1.;\n    }\n    float nNormalized = MAX_STEPS/n;\n    float brig = smoothstep(0.,MAX_STEPS,n);\n    \n    vec3 col=vec3(brig*nNormalized,brig,brig*nNormalized);\n    \n    if(n==MAX_STEPS){\n        col=vec3(0.);\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}