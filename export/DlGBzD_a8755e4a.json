{"ver":"0.1","info":{"id":"DlGBzD","date":"1701874605","viewed":6,"name":"Visualização Fibonacci","username":"Sumar","description":"Tentado fazer algo legal com Fibonacci.\n\nNão sei se é melhor com as cores flat.\n\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fibonacci"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 randColor(float i){\n    return fract(cos(vec3(13.32, 38.76, 31.83)*45.14*(i+9.)))+vec3(.1, .0, .2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    uv *= 1. + pow(iTime, 3.);\n    //uv *= 1. + pow(2., iTime);\n    \n    float l2 = 1., l1 = 0., l0;\n    \n    float i;\n    vec2 d;\n    for(i = 0.;i < 100.; i++) {\n        l0 = l2 + l1; \n        float dir = mod(i, 2.);\n        d = uv - vec2(dir,1.-dir)*l1 - l0;\n        \n        if( max(d.x, d.y) < 0. )\n            break;\n                \n        l2 = l1;\n        l1 = l0;\n    }\n    float ld =  length(d)/(l0*1.9);\n    //ld = 0.; // Flat color\n    \n    fragColor = vec4(randColor(i) - (ld*ld*ld),1.);\n}\n\n// Descomenta esse pedaço aqui Macedo\n//\n// void mainImage( out vec4 fragColor, in vec2 fragCoord )\n// {\n//     vec2 uv = fragCoord/iResolution.y;\n//     uv *= 1. + pow(iTime, 3.);\n    \n//     float l2 = 1., l1 = 0., l0;\n    \n//     float n = 0.;\n//     for(int i = 0;i < 50; i++) {\n//         l0 = l2 + l1; \n//         float dir = mod(n, 2.);\n//         vec2 d = uv - vec2(dir,1.-dir)*l1 - l0;\n        \n//         if( max(d.x, d.y) < 0. )\n//             break;\n                \n//         l2 = l1;\n//         l1 = l0;\n//         n++;\n//     }\n    \n//     fragColor = vec4(randColor(n),1.);\n// }","name":"Image","description":"","type":"image"}]}