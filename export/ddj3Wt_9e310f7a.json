{"ver":"0.1","info":{"id":"ddj3Wt","date":"1668363746","viewed":123,"name":"Mipmap Overlap Tracking Test","username":"oneshade","description":"Mipmap experiment.","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["test","tracking","gpmipmap"],"hasliked":0,"parentid":"fdjyzh","parentname":"Mipmap Tracking Test"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(0.0);\n\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float a = length(uv - 0.25 * vec2(cos(iTime), sin(iTime))) - 0.1 * (cos(10.0 * uv.x) + sin(10.0 * uv.y)) - 0.25;\n    float b = length(uv - 0.25 * vec2(2.0 * cos(3.0 * iTime), 0.5 * sin(iTime))) - 0.25;\n    if (a < 0.0) fragColor = vec4(0.0, 1.0, 0.0, 1.0);\n    if (b < 0.0) fragColor = vec4(0.0, 0.0, 1.0, 1.0);\n\n    uv = fragCoord / iResolution.xy;\n    fragColor += texture(iChannel1, uv);\n\n    vec4 bufA = texture(iChannel0, uv, 100.0);\n    vec2 pos = bufA.xy / bufA.w;\n    if (length(uv - pos) < 0.01) fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float weight = length(texture(iChannel0, uv).rgb);\n    fragColor = vec4(uv * weight, 0.0, weight);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float a = length(uv - 0.25 * vec2(cos(iTime), sin(iTime))) - 0.1 * (cos(10.0 * uv.x) + sin(10.0 * uv.y)) - 0.25;\n    float b = length(uv - 0.25 * vec2(2.0 * cos(3.0 * iTime), 0.5 * sin(iTime))) - 0.25;\n    fragColor = vec4(step(max(a, b), 0.0));\n}","name":"Buffer B","description":"","type":"buffer"}]}