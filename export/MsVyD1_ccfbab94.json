{"ver":"0.1","info":{"id":"MsVyD1","date":"1521917921","viewed":137,"name":"A.T.Field...?","username":"g2_xpf","description":"You can draw a n-sided polygon by changing \"split\"(Default: 8).\n(split < 3) might show unexpected result.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["polygon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.141592;\nconst float TWO_PI = PI * 2.;\nconst int split = 8;\n\nfloat getPolygon(vec2 v, int split){\n    float angle = atan(v.y, v.x) - PI / 2. +PI / float(split);\n    float angle2 = mod(angle, TWO_PI / float(split));\n    float r = length(v);\n    float angle3 = PI * (0.5 - 1. / float(split));\n    float len = r * sin(PI - angle3 - angle2) / sin(angle3);\n    if(len < 0.05) return 0.;\n    return max(0., mod(12.*len-iTime, 1.) - 0.3);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord - .5 * iResolution.xy ) / iResolution.x;\n    \n    // Time varying pixel color\n    float diff = getPolygon(uv, split);\n    \n    // Output to screen\n    fragColor = vec4(diff, diff/8., 0.0, 0.4);\n}","name":"Image","description":"","type":"image"}]}