{"ver":"0.1","info":{"id":"NsdyW7","date":"1653545933","viewed":71,"name":"Fibonacci took place","username":"zhangzhuo","description":"draw Fibonacci took place","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nint fblq(int n) {\n    int a=1,b=1,temp;\n    \n    for(int i=0;i<n;i++){\n        temp =a;\n        a=b;\n        b+=temp;\n    }\n    \n    return b;\n}\n\nmat4 bulidTranslate(float x, float y, float z)\n{\n\tmat4 trans = mat4(1.0, 0.0, 0.0, 0.0,\n\t   \t0.0, 1.0, 0.0, 0.0,\n\t\t0.0, 0.0, 1.0, 0.0,\n\t\tx, y, z, 1.0);\n\treturn trans;\n}\n\nmat4 buildRotateZ(float rad)\n{\n\tmat4 zrot = mat4(\n        cos(rad), -sin(rad), 0.0, 0.0,\n\t\tsin(rad), cos(rad), 0.0, 0.0,\n\t\t0.0, 0.0, 1.0,0.0,\n\t\t0.0, 0.0, 0.0, 1.0);\n\treturn zrot;\n}\n\nbool drawC(vec2 f, vec2 p, float r, int xx){\n     if(distance(f, p)<r) {\n       switch(xx) {\n           case 0: return f.x<p.x && f.y>p.y;\n           case 1: return f.x>p.x && f.y>p.y;\n           case 2: return f.x>p.x && f.y<p.y;\n           case 3: return f.x<p.x && f.y<p.y;\n       }\n       return false;\n    }else {\n      return false;\n    }\n}\n\nvec2 pCenter(vec2 currentxy, in vec2 temp) {\n    vec2 p = temp;\n    int xx = 0;\n    for(int i=11;i>0;i--) {\n        float r = float(fblq(i));\n        float r1 = float(fblq(i-1));\n        xx=(xx+1)%4;\n        switch(xx) {\n            case 0:\n              p = vec2(p.x-(r-r1), p.y);\n            break;\n            case 1:\n              p = vec2(p.x, p.y + r-r1);\n            break;\n            case 2:\n              p = vec2(p.x+r-r1, p.y);\n            break;\n            case 3:\n              p = vec2(p.x, p.y-(r-r1));\n            break;\n        }\n    }\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 currentxy = fragCoord/1.0;\n    vec2 uv = currentxy/iResolution.xy;\n    float ratio = iResolution.y/iResolution.x;\n    vec2 p= vec2(iResolution.x/2.0, iResolution.y/2.0);\n    int xx = 0;\n    float deg = mod(iTime,10.0)/10.0 * 360.0;\n    mat4 mrotate = buildRotateZ(deg * 3.141596 / 180.0);\n    mat4 mtrans = bulidTranslate(150.0, 100.0, 0.0);\n    vec2 roateCenter = pCenter(currentxy, p);\n    currentxy = (mrotate  * vec4(currentxy-roateCenter, 0.0,0.0)).xy +roateCenter;\n    for(int i=11;i>0;i--) {\n        float r = float(fblq(i));\n        float r1 = float(fblq(i-1));\n        bool draw = drawC(currentxy, p, r, xx);\n        float cr= float(i)/11.0;\n        if(draw){\n           fragColor = vec4(0.5*cr, 0.5*cr, 0.5*cr, 1.0);\n        }\n        xx=(xx+1)%4;\n        switch(xx) {\n            case 0:\n              p = vec2(p.x-(r-r1), p.y);\n            break;\n            case 1:\n              p = vec2(p.x, p.y + r-r1);\n            break;\n            case 2:\n              p = vec2(p.x+r-r1, p.y);\n            break;\n            case 3:\n              p = vec2(p.x, p.y-(r-r1));\n            break;\n        }\n    }\n}\n\n","name":"Image","description":"","type":"image"}]}