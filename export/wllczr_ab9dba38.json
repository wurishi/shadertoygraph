{"ver":"0.1","info":{"id":"wllczr","date":"1591321107","viewed":69,"name":"Bezier Curve09090","username":"bionicpet","description":"Bezier curves","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float aspect = 640.0 / 360.0;\nconst float halfSizeY = 0.003 * aspect;\nconst float halfSizeX = 0.003;\nconst vec3 black = vec3(0.0, 0.0, 0.0);\nconst vec3 white = vec3(1.0, 1.0, 1.0);\n\n\n\nvec3 line(in vec2 uv, in vec2 p1, in vec2 p2)\n{\n    float m = (p2.y - p1.y) / (p2.x - p1.x);\n    float b = p1.y - m * p1.x;\n    float y = m * uv.x + b;\n    if (y <= (uv.y + halfSizeY) && y >= (uv.y - halfSizeY) && uv.x > p1.x && uv.x < p2.x) return black;\n    return white;\n}\n\nvec3 drawPoint(in vec2 uv, in vec2 point)\n{\n\n    if (uv.x <= (point.x + halfSizeX) && (uv.x >= point.x - halfSizeX) &&\n        uv.y <= (point.y + halfSizeY) && uv.y >= (point.y - halfSizeY))\n    {\n        return vec3(1.0,0.0, 0.0);\n    }\n    \n    return vec3(1.0, 1.0, 1.0);\n}\n\nvec3 bezier(in float t, in vec2 uv, in vec2 p0, in vec2 p1, in vec2 p2)\n{\n    vec2 result = pow((1.0-t),2.0)*p0 + 2.0*(1.0-t)*t*p1 + pow(t, 2.0)*p2;\n    return drawPoint(uv, result.xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 p0 = vec2(0.3, 0.9);\n    vec2 p1 = vec2(iMouse.x / iResolution.x, iMouse.y / iResolution.y);\n    vec2 p2 = vec2(0.7, 0.7); \n\n    vec3 col = vec3(1.0, 1.0, 1.0);\n    \n    col *= drawPoint(uv, p0);\n    col *= drawPoint(uv, p1);\n    col *= drawPoint(uv, p2);\n    col *= line(uv, p0, p1);\n    col *= line(uv, p1, p2);\n    \n    for (float t = 0.0; t <= 1.0; t += 0.01)\n    {\n        col *= bezier(t, uv, p0, p1, p2);\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}