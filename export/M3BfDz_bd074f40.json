{"ver":"0.1","info":{"id":"M3BfDz","date":"1729591536","viewed":66,"name":"D1zzy","username":"Lou051110","description":"referenced code from kishimisu: https://www.shadertoy.com/view/lcs3DH","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// 2D rotation function\nmat2 rot2D(float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\n\nvec3 palette(float t) {\n    return .5+.5*cos(12.28318*(t+vec3(.2,.316,.657)));\n}\n\n\n//sphere\nfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n//cube\nfloat sdBox( vec3 p, vec3 s )\n{\n  vec3 q = abs(p) - s;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\n\n// Scene distance\nfloat map(vec3 p) {\n    p.z += iTime * .5; // Forward movement\n    \n    // Space repetition\n    p.xy = fract(p.xy) - .5;     // spacing\n    p.z =  mod(p.z, .25) - .225; \n    \n    return min (sdSphere(p, .12), sdBox(p, vec3(.1)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2  m = (iMouse.xy * 2. - iResolution.xy) / iResolution.y;\n    \n    // Default circular motion\n    if (iMouse.z <= 0.) m = vec2(cos(iTime*.2), sin(iTime*.2));\n\n    // Initialization\n    vec3 ro = vec3(0, 0, -3);           // ray origin\n    vec3 rd = normalize(vec3(uv, 1));  // ray direction\n    vec3 col = vec3(0);               // final pixel color\n\n    float t = 0.; // total distance travelled\n\n    int i; // Raymarching algorithm\n    for (i = 0; i < 80; i++) {\n        vec3 p = ro + rd * t; // position along the ray\n        \n        p.xy *= rot2D(t*.25 * m.x);     // rotate ray around z-axis\n\n        p.y += cos(t*(m.y+1.)*.6)*.65;  // wiggle ray\n\n        float d = map(p);     // current distance to the scene\n\n        t += d;               // \"march\" the ray\n\n        if (d < .001 || t > 100.) break; // early stop\n    }\n\n    // Coloring\n    col = palette(t*.04 + float(i)*.005) ;\n     \n    fragColor = vec4(col, 1);\n    }\n","name":"Image","description":"","type":"image"}]}