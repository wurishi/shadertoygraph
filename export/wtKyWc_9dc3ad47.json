{"ver":"0.1","info":{"id":"wtKyWc","date":"1611912568","viewed":85,"name":"Tally Hall Good & Evil","username":"tasco","description":"https://en.wikipedia.org/wiki/Good_%26_Evil_(album)","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["tallyhall"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.1415926535897932384626433;\nconst vec2 c = vec2(0.5,0.5);\nconst mat2 mat = mat2(.5,.5,\n\t\t\t\t\t\t-.5,.5);\nconst mat2 negmat = mat2(1.,-1.,\n\t\t\t\t\t\t1.,1.);\nconst vec4 white = vec4(1,1,1,1);\nconst vec4 gray = vec4(.5,.5,.5,1);\nconst vec4 black = vec4(0,0,0,1);\n\nvec4 coordtester(vec2 xy) {\n\tfloat r = .001;\n\tvec2 p1 = vec2(0,0);\n\tvec2 p2 = vec2(1,1);\n\tvec2 diff1 = xy - p1;\n\tvec2 diff2 = xy - p2;\n\tfloat len1 = dot(diff1,diff1);\n\tfloat len2 = dot(diff2,diff2);\n\tif (len1 < r)\n\t{\n\t\treturn black;\n\t}\n\tif (len2 < r) {\n\t\treturn gray;\n\t}\n\treturn white;\n}\n\nvec2 getUV()\n{\n\tbool HeightIsGreater = iResolution.y > iResolution.x;\n\tfloat mindim = HeightIsGreater ? iResolution.x : iResolution.y;\n\tfloat resdiff = HeightIsGreater ? iResolution.y - iResolution.x : iResolution.x - iResolution.y;\n\tvec2 uv = gl_FragCoord.xy/mindim;\n\tif (HeightIsGreater)\n\t{\n\t\tuv.y-=.5*resdiff/( iResolution.x);\n\t}\n\telse\n\t{\n\t\tuv.x-=.5*resdiff/(iResolution.y);\n\t}\n\treturn uv - c;\n}\n\nfloat ptx(float x) {\n\treturn (x / 3733.) - .5;\n}\n\nfloat pty(int y) {\n\treturn ((float(3704 - y)) / 3704.) - .5;\n}\n\nvec2 pt(int x, int y) {\n\treturn vec2(ptx(float(x)),pty(y));\n\t//return vec2( float(x) / 3733., (float(3704 - y)) / 3704.) - c;\n}\n\nvec2 pt(float x, int y) {\n\treturn vec2(ptx(x),pty(y));\n\t//return vec2( x / 3733., (float(3704 - y)) / 3704.) - c;\n}\n\nbool enclose_tlbr(vec2 tl, vec2 br, vec2 uv) {\n\treturn (tl.x < uv.x && uv.x < br.x && tl.y > uv.y && uv.y > br.y);\n}\n\nbool enclose_trbl(vec2 tr, vec2 bl, vec2 uv) {\n\treturn (bl.x < uv.x && uv.x < tr.x && tr.y > uv.y && uv.y > bl.y);\n}\n\nbool above(vec2 p1, vec2 p2, vec2 uv) {\n\tfloat r = (uv.x - p1.x) / (p2.x - p1.x);\n\tfloat h = r * (p2.y - p1.y) + p1.y;\n\treturn uv.y > h;\n}\n\nbool below(vec2 p1, vec2 p2, vec2 uv) {\n\tfloat r = (uv.x - p1.x) / (p2.x - p1.x);\n\tfloat h = r * (p2.y - p1.y) + p1.y;\n\treturn uv.y < h;\n}\n\nbool T(vec2 uv) {\n\tvec2 tlt = pt(400,92);\n\tvec2 brt = pt(602,135);\n\tvec2 tlb = pt(475,135);\n\tvec2 brb = pt(527,340);\n\treturn enclose_tlbr(tlt,brt,uv) || enclose_tlbr(tlb,brb,uv);\n}\n\nbool A(int b, int l, vec2 uv) {\n\tvec2 itl = pt(b, l - 340 + 92);\n\tvec2 ibr = pt(b - 587 + 822,l);\n\tif (!enclose_tlbr(itl,ibr,uv)) return false;\n\tvec2 bll = pt(b,l);\n\tvec2 blr = pt(b-587+642,l);\n\tvec2 brl = pt(b-587+765,l);\n\tvec2 brr = pt(b-587+822,l);\n\tvec2 tl = pt(b-587+675,l-340+92);\n\tvec2 tr = pt(b-587+735,l-340+92);\n\tvec2 it = pt(float(b-587)+704.5,l-340+149);\n\tvec2 mtl = pt(b-587+658,l-340+246);\n\tvec2 mbr = pt(b-587+753,l-340+289);\n\tbool r = true;\n\tr = r && (above(blr,it,uv) && below(bll,tl,uv));\n\tr = r || (above(it,brl,uv) && below(tr,brr,uv));\n\tr = r || enclose_tlbr(mtl,mbr,uv);\n\treturn r;\n}\n\nbool L(int b, int l, vec2 uv) {\n\tvec2 itr = pt(b-853+1029,l-340+92);\n\tvec2 mc = pt(b-853+905,l-340+296);;\n\tvec2 bl = pt(b,l);\n\treturn enclose_trbl(itr,bl,uv) && !enclose_trbl(itr,mc,uv);\n}\n\nbool Y(vec2 uv) {\n\tvec2 tll = pt(1223,92);\n\tif (uv.y > tll.y) return false;\n\tvec2 tlr = pt(1284,92);\n\tvec2 trl = pt(1385,92);\n\tvec2 trr = pt(1444,92);\n\tvec2 itm = pt(1336,200);\n\tvec2 nl = pt(1309,245);\n\tvec2 nr = pt(1361,246);\n\tvec2 bl = pt(1309,340);\n\t//vec2 br = pt(1361,340);\n\tvec2 ibtr = pt(1361,220);\n\tbool r = true;\n\tr = r && (above(tll,nl,uv) && below(tlr,itm,uv));\n\tr = r || (above(nr,trr,uv) && below(itm,trl,uv));\n\tr = r && uv.y > nr.y;\n\tr = r || enclose_trbl(ibtr,bl,uv);\n\treturn r;\n}\n\nbool H(vec2 uv) {\n\tvec2 ltl = pt(2345,93);\n\tvec2 lbr = pt(2397,341);\n\tvec2 mtl = pt(2397,188);\n\tvec2 mbr = pt(2492,231);\n\tvec2 rtl = pt(2492,93);\n\tvec2 rbr = pt(2544,341);\n\treturn enclose_tlbr(ltl,lbr,uv) || enclose_tlbr(mtl,mbr,uv) || enclose_tlbr(rtl,rbr,uv);\n}\n\nbool tally(vec2 uv) {\n\tbool r = false;\n\tr = r || T(uv);\n\tr = r || A(578,340,uv);\n\tr = r || L(853,340,uv);\n\tr = r || L(1063,340,uv);\n\tr = r || Y(uv);\n\treturn r;\n}\n\nbool hall(vec2 uv) {\n\tbool r = false;\n\tr = r || H(uv);\n\tr = r || A(2576,341,uv);\n\tr = r || L(2842,341,uv);\n\tr = r || L(3052,341,uv);\n\treturn r;\n}\n\nbool text(vec2 uv) {\n\tvec2 lowmid = pt(2000,341);\n\tif (uv.y < lowmid.y) return false;\n\tif (uv.x < lowmid.x) {\n\t\treturn tally(uv);\n\t} else {\n\t\treturn hall(uv);\n\t}\n}\n\nbool udtext(vec2 uv) {\n\t//flip y 92 - 341\n\tfloat y92 = pty(92);\n\tfloat y341 = pty(341);\n\tif (y92 > uv.y && uv.y > y341) {\n\t\tuv.y -= y92 + (y341 - y92)/2.;\n\t\tuv.y = -uv.y;\n\t\tuv.y += y92 + (y341 - y92)/2.;\n\t}\n\treturn text(uv);\n}\n\nbool alltext(vec2 uv) {\n\tbool r = false;\n\tr = r || text(uv); //top\n\tr = r || udtext(vec2(abs(uv.y),-uv.x)); //right\n\tr = r || text(vec2(abs(uv.y)-.5,uv.x)); //left\n\tr = r || text(vec2(uv.x,-uv.y)); //bottom\n\treturn r;\n}\n\nbool base(vec2 uv) {\n\tbool filled = uv.x > uv.y;\n\tfilled = filled != -uv.x < uv.y;\n\tfilled = filled != uv.x < 0.;\n\tfilled = filled != uv.y > 0.;\n\tfilled = filled != alltext(uv);\n\treturn filled;\n}\n\nbool inbase(vec2 uv) {\n\t//if (uv.y > .5 || uv.x > .5) return false;\n\t//if (uv.y < -.5 || uv.x < -.5) return false;\n\t//base square, remove later\n\tif (uv.x  + .5 < uv.y) return true;\n\tif (.5 - uv.x < uv.y) return true;\n\tif (uv.x - .5 > uv.y) return true;\n\tif (uv.y + .5 < -uv.x) return true;\n\treturn false;\n}\n\nbool outerbase(vec2 uv) {\n\tif (uv.y > .5 || uv.x > .5) return true;\n\tif (uv.y < -.5 || uv.x < -.5) return true;\n\treturn false;\n}\n\nbool innerbase(vec2 uv) {\n\treturn !outerbase(uv) && !inbase(uv);\n}\n\nbool picture(vec2 uv) {\n\tif (outerbase(uv)) {\n\t\tfor (int r = 0; r < 100; r++) {\n\t\t\tuv *= mat;\n\t\t\tif (!outerbase(uv)) {\n\t\t\t\treturn base(uv);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int r = 0; r < 100; r++) {\n\t\tif (inbase(uv)) {\n\t\t\treturn base(uv);\n\t\t}\n\t\tuv *= negmat;\n\t}\n\treturn false;\n}\n\nvec2 cmul(vec2 ab, vec2 cd) {\n\treturn vec2(ab.x*cd.x - ab.y*cd.y, ab.x*cd.y + ab.y*cd.x);\n}\n\nvec2 cexp(vec2 z) {\n\treturn exp(z.x) * vec2(cos(z.y),sin(z.y));\n}\n\nvec2 clog(vec2 z) {\n\treturn vec2(log(dot(z,z)),atan(z.y,z.x));\n}\n\nvec2 getrot(float time) {\n\tvec2 increment = vec2(-0.34657359028,-0.785398163397);\n\t\t//clog(.5,-.5)\n\treturn cexp(fract(time)*increment);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = getUV();\n\tuv = cmul(uv,getrot(iTime/2.));\n\t//bool base = base(uv) ;\n\t//bool inbase = inbase(uv);\n\t//bool outerbase = outerbase(uv);\n\t//bool innerbase = innerbase(uv);\n\tbool pic = picture(uv);\n\n\tbool filled = pic;\n\tfragColor = filled ? black : white;\t\n\t//gl_FragColor = vec4(bn*10,bn*10,bn*10,1);\n\t//gl_FragColor = coordtester(uv);\n }","name":"Image","description":"","type":"image"}]}