{"ver":"0.1","info":{"id":"ll3XD8","date":"1479257555","viewed":621,"name":"2-pass octablur","username":"casty","description":"Yet another blur trick. Borders are quite sharp and no disk to disk overlapping artefacts. It has, however, in-disk artefacts due to overlapping on the vertical pass. Not having to glue parts with different weights is a plus when it comes to fake bokeh.","likes":14,"published":1,"flags":32,"usePreview":0,"tags":["blur","dof","bokeh","octagon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Eduardo Castineyra - casty/2016\n// Creative Commons Attribution 4.0 International License\n\nvec4 accumW = vec4(0);\nvec4 accum = vec4(0);\n\nfloat factor = 0.;\nfloat bokeh = 0.;\n\nvoid addSample(vec2 uv){\n    vec4 color = texture(iChannel0, uv);\n    vec4 w = 1.0 + color * color * color * bokeh;  /// A little bokeh from my friends\n    accumW += w;\n    accum += color * w;\n\t}\n\t\nvec4 blur(vec2 coord){\n    vec2 start = coord + vec2(0, 3) * factor;\n    \n    for (int i = 0; i < 8; i++){\n        vec2 uv = start + float(i) * vec2(0,-1) * factor;\n        addSample(uv/iResolution.xy);\n    \t}\n    \n    return accum/accumW;\n\t}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfactor = iMouse.y / iResolution.y * 2.0;\n\tbokeh = iMouse.x / iResolution.x * 64.0;\n    \n    \n    fragColor = sqrt(blur(fragCoord));\n\t//fragColor = texture(iChannel1, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Created by Eduardo Castineyra - casty/2016\n// Creative Commons Attribution 4.0 International License\n\nvec4 points(vec2 uv){\n\tvec4 color = vec4(0);\n    color += vec4(step(length(uv - vec2(.5)), 0.002));\n    color += vec4(step(length(uv - vec2(.48)), 0.002));\n    return color;\n\t}\n\nvec4 london(vec2 uv){\n    return pow(texture(iChannel0, uv), vec4(2));\n\t}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = london(uv);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Created by Eduardo Castineyra - casty/2016\n// Creative Commons Attribution 4.0 International License\n\nvec4 accumW = vec4(0);\nvec4 accum = vec4(0);\n\nfloat factor = 0.;\nfloat bokeh = 0.;\n\nvoid addSample(vec2 uv){\n    vec4 color = texture(iChannel0, uv);\n    vec4 w = 1.0 + color * color * color  * bokeh;  /// A little bokeh from my friends\n    accumW += w;\n    accum += color * w;\n\t}\n\t\nvec4 blur(vec2 coord){\n    \n    vec2 start = vec2(0);\n\tvec2 uv = vec2(0);\n    \n    start = coord + vec2(-8, 0) * factor;\n    \n    for (int i = 0; i < 5; i++){\n        uv = start + float(i) * vec2(1,1) * factor;\n        addSample(uv/iResolution.xy);\n    \t}\n\n    start = uv;\n    for (int i = 1; i < 9; i++){\n        uv = start + float(i) * vec2(1,0) * factor;\n        addSample(uv/iResolution.xy);\n    \t}\n\n    start = uv;\n    for (int i = 1; i < 5; i++){\n        uv = start + float(i) * vec2(1,-1) * factor;\n        addSample(uv/iResolution.xy);\n    \t}\n\n    start = uv;\n    for (int i = 1; i < 5; i++){\n        uv = start + float(i) * vec2(-1,-1) * factor;\n        addSample(uv/iResolution.xy);\n    \t}\n\n    start = uv;\n    for (int i = 1; i < 9; i++){\n        uv = start + float(i) * vec2(-1,0) * factor;\n        addSample(uv/iResolution.xy);\n    \t}\n\n    start = uv;\n    for (int i = 1; i < 4; i++){\n        uv = start + float(i) * vec2(-1,1) * factor;\n        addSample(uv/iResolution.xy);\n    \t}\n    \n    return accum / accumW;\n    \n\t}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    factor = iMouse.y / iResolution.y * 2.0;\n    bokeh = iMouse.x / iResolution.x * 64.0;\n\n    vec4 color = blur(fragCoord.xy);\n    fragColor = color;\n}","name":"Buffer B","description":"","type":"buffer"}]}