{"ver":"0.1","info":{"id":"WtsBzf","date":"1597338350","viewed":22317,"name":"Aeriel Flux","username":"iRyanBell","description":"Based on Aeriel Machina https://fractalforums.org/share-a-fractal/22/df-mandelbox-variation/3547\n\nView on Cineshader @ https://www.cineshader.com/view/WtsBzf","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 z0)\n{\n    float T = cos(iTime*0.002)+0.33;\n    float T2 = cos(iTime*0.015)+0.25;\n    vec4 z = vec4(z0,0.05);\n    \n    for (int n = 0; n < 8; n++) {\n        z.xyz=clamp(z.xyz, -T*T2, T*T2)*2.0-z.xyz;\n        z*=(T-0.25)/max(dot(z.xyz, z.xyz), 0.02*(T+T2));\n    }\n    return length(max(abs(z.xyz)-vec3(0.0,1.0,0.0),0.0))/z.w;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float T = sin(iTime*0.05)-1.0;\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec3 rayOri = vec3((uv - 0.5) * vec2(iResolution.x/iResolution.y, 1.0)*(1.0-T)*1024.0, 0.0);\n\tvec3 rayDir = vec3(0.0, 0.0, 0.001);\n\t\n\tfloat depth = 0.0;\n\tvec3 p;\n\t\n\tfor(int i = 0; i < 10; i++) {\n\t\tp = rayOri + rayDir * depth;\n\t\tfloat dist = map(p);\n        depth += dist;\n\t\tif (dist < 1e-7) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n    float c = 1.0-pow(depth*0.0005, 0.75);\n    fragColor = vec4(c*2.0,c*0.125,c*0.125,1.0-depth*0.00001);\n}\n\n/** SHADERDATA\n{\n\t\"title\": \"Aeriel Flux\",\n\t\"description\": \"Intersection plane into a mandelbox-like structure\",\n\t\"model\": \"person\"\n}\n*/","name":"Image","description":"","type":"image"}]}