{"ver":"0.1","info":{"id":"NlyfRm","date":"1664219301","viewed":87,"name":"Triangles XOR mod 23","username":"scudly","description":"Compute triangular coordinates shifted by time.  XOR them together mod 23.  Color to taste.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","triangles","xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 48.*(2.*fragCoord-iResolution.xy)/iResolution.y;\n    int t = int( iDate.w / 3. );\n    ivec3 i = ivec3( sqrt(3.)*uv.x-uv.y, 2.*uv.y+768., -sqrt(3.)*uv.x-uv.y ) + 317*t;\n    float v = float( (i.x ^ i.y ^ i.z ^ 7261*t) % 23 ) / 22.;\n    vec3 col = mix( v*pow(0.5+0.5*cos(6.28*(v+vec3(0.,0.333,0.666)) ), vec3(2.)), vec3(1.), v*v*v);\n    fragColor = vec4(pow(col, vec3(.4545)),1.0);\n}","name":"Image","description":"","type":"image"}]}