{"ver":"0.1","info":{"id":"ftsXzS","date":"1626045370","viewed":178,"name":"[FORK] The mess I am","username":"Orm","description":"a fork of flopines shader.\nhttps://shadertoy.com/view/stfSW7","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["2d","chromaticaberration","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"[TWITCH] The mess I am\" by Flopine. https://shadertoy.com/view/stfSW7\n// 2021-07-11 03:18:46\n\n// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings and FabriceNeyret for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\nvec4 diffract (vec2 uv, float offset)\n{return texture(iChannel0,uv+offset);}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 uu = fragCoord.xy/iResolution.xy;\n  fragColor = texture(iChannel0, uu);\n \n  fragColor += mix(vec4 (\n                      diffract(uu, 0.002).r,\n                      diffract(uu, 0.003).g,\n                      diffract(uu, 0.001).b,\n                      1.\n                    ),vec4(0.),(sin(iTime*0.374)+1.)*.0005)*0.5;\n    fragColor = smoothstep(0.1,1.,pow(4.*fragColor,vec4(.5)));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define colors a2\nconst vec3 a1[] = vec3[](\nvec3(1.000,0.067,0.067),\nvec3(1.000,0.424,0.000),\nvec3(0.886,0.827,0.114),\nvec3(0.541,0.659,0.647),\nvec3(0.592,0.910,1.000)\n);\nconst vec3 a2[] = vec3[](\nvec3(1.0,0.1,0.1),\nvec3(1.0,0.1,1.0),\nvec3(0.1,0.1,1.0),\nvec3(0.1,0.1,1.0),\nvec3(0.1,1.0,1.0),\nvec3(0.1,1.0,0.1)*.7,\nvec3(1.0,1.0,0.1),\nvec3(1.0,0.1,0.1)*0.6\n);\n#define PI acos(-1.)\n#define TAU 6.283185\n#define time (iTime+1700.)\n\n#define circle(u,s) (length(u)-s) \n#define square(u,s) ((max(abs(u.x),abs(u.y)))-s)\n#define hr vec2(1.,sqrt(3.))\n#define hexa(u,s) (max(abs(u.x), dot(abs(u),normalize(hr)))-s)\n\n#define ss(thre, value) smoothstep(thre,thre*1.2, value)\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define hash11(x) fract(sin(x)*124.4)\n\n//  Function from IÃ±igo Quiles\n//  iquilezles.org/articles/functions\nfloat impulse( float k, float x ){\n    float h = k*x;\n    return h*exp(1.0-h);\n}\n\nfloat expStep( float x, float k, float n ){\n    return exp( -k*pow(x,n) );\n}\n\nfloat frame(vec2 uv, float i)\n{ \n  vec2 ga=mod(uv,hr)-hr*.5 , \n  gb=mod(uv-hr*.5,hr)-hr*.5, \n  guv=(dot(ga,ga)<dot(gb,gb))?ga:gb, \n  gid = uv-guv;\n  float rep = TAU/2.;\n  float a = mod(atan(guv.x,guv.y),rep)-rep*.5;\n  guv = vec2(cos(a),sin(a))*length(guv);\n  guv *= rot(PI/6.*floor(length(gid+.1)));\n  float ts= time*.1;\n  return smoothstep(0.0,1.,\n      1.-mod(\n          length(\n              guv*((tan(sin(time*.3)*.8)*4.5)+7.)\n          )-(((i*tan(sin(time*.172))*25.))),\n      (tan(sin(time*.1235)*.9)+1.6)*1.6)\n  );\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n  vec2 uu = fragCoord.xy/iResolution.xy;\n    vec2 m = iMouse.xy/iResolution.xy;\n  \n  float it = 1.+smoothstep(1.,10.,(exp(iTime*.15)))*100.;\n  fragColor = vec4(0.0); \n  for(float i=0.; i<1.; i+=1./it)\n  {\n    float zplane = fract(time*.04+i);\n    float fadeinout = impulse(10.,1.-zplane);\n    float size = mix((sin(time*.259)+1.4)*8.,.01, zplane);\n    float g = expStep(1.-zplane,7.5,1.7)*(float(colors.length()));\n    vec3 gra = mix(colors[int(g)],colors[int(g+1.)],fract(g));\n    vec2 ls= mix(vec2(sin((.742*time)+(i*10.13))*.7,sin((0.9*time)+(i*10.)))*.7,vec2(0.),(sin(time*.1409)+1.)*.5);\n    \n    fragColor += vec4(vec3(frame(m-ls-uv*size,i)*fadeinout*gra)/(it),.0);\n  }\n}","name":"Buffer A","description":"","type":"buffer"}]}