{"ver":"0.1","info":{"id":"MfSBzG","date":"1725073742","viewed":30,"name":"Unreal Overflowing Love","username":"DoctorBirdy","description":"my second shader test, reacts to mouse!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mouse","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//original shader by Doctor Birdy\n\n#define t iTime\n#define res iResolution.xy\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 col = vec3(0.0);\n    float lum;\n    vec2 mouse = iMouse.xy / res; // Normalized mouse position\n    float zoom = t + mouse.x * 10.0; // Use mouse X for zoom speed\n    float rotation = mouse.y * 6.28; // Use mouse Y for rotation\n\n    for (int i = 0; i < 3; i++) {\n        vec2 uv = fragCoord / res;\n        uv = uv * 2.0 - 1.0;\n        uv.x *= res.x / res.y;\n        \n        // Apply rotation\n        float s = sin(rotation), c = cos(rotation);\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\n        \n        vec2 radialOffset = vec2(sin(zoom + length(uv) * 8.0), cos(zoom + length(uv) * 8.0));\n        uv += radialOffset * 0.2;\n        lum = 0.2 / (length(mod(uv * 10.0, 1.0) - 0.5) + 0.01);\n        \n        // Modify this line to introduce color shifting\n        col[i] = lum * abs(sin(zoom + length(uv) * 5.0 + float(i) * 2.094));\n    }\n    \n    // Enhance overall saturation\n    col = pow(col, vec3(0.8));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}