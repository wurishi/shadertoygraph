{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"const float Pi = 3.14159;\nfloat beat = 0.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat ct = iChannelTime[0];\n\tif ((ct > 8.0 && ct < 33.5)\n\t|| (ct > 38.0 && ct < 88.5)\n\t|| (ct > 93.0 && ct < 194.5))\n\t\tbeat = pow(sin(ct*3.1416*3.78+1.9)*0.5+0.5,15.0)*0.1;\n\n\tfloat scale = iResolution.y / 50.0;\n\tfloat ring = 20.0;\n\tfloat radius = iResolution.x*1.0;\n\tfloat gap = scale*.5;\n\tvec2 pos = fragCoord.xy - iResolution.xy*.5;\n\t\n\tfloat d = length(pos);\n\t\n\t// Create the wiggle\n\td += beat*2.0*(sin(pos.y*0.25/scale+iTime*cos(ct))*sin(pos.x*0.25/scale+iTime*.5*cos(ct)))*scale*5.0;\n\t\n\t// Compute the distance to the closest ring\n\tfloat v = mod(d + radius/(ring*2.0), radius/ring);\n\tv = abs(v - radius/(ring*2.0));\n\t\n\tv = clamp(v-gap, 0.0, 1.0);\n\t\n\td /= radius;\n\tvec3 m = fract((d-1.0)*vec3(ring*-.5, -ring, ring*.25)*0.5);\n\t\n\tfragColor = vec4(m*v, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4d23Ww","date":"1389297750","viewed":1405,"name":"Beating Circles","username":"Phoenix72","description":"This example is by Trisomie21. Merged with the beats from sharavsambuu. My first attempt to shaders. :-)","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles","music","beat","glsl","shader"],"hasliked":0,"parentid":"","parentname":""}}