{"ver":"0.1","info":{"id":"sdSSD1","date":"1620121498","viewed":236,"name":"Squared Triangle Pixel Filter","username":"NakedBowman","description":"Squared Triangle Pixel Filter for image","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["triangle","pixel","filter","squared"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n   //setup\n   vec2 uv = fragCoord/iResolution.xy;\n   vec2 triang = uv;\n  \n   triang.x *= iResolution.x/iResolution.y;\n   \n   //Vars to Export\n   float size = 100.;\n   float outline = 0.03;\n   float triangSize = (iResolution.y-iResolution.x)/size;\n   float distorsion = 3.;\n   bool mirror = false;//CHANGES TRIANGULE ANGLE\n   \n   //Get the pixelSize \n   float pixelSize = iResolution.y / triangSize;\n   float onePixelSizeX = pixelSize / iResolution.x;\n   float onePixelSizeY = pixelSize / iResolution.y;\n \n\n   triang*=triangSize;\n   triang = fract(triang);\n   \n      float border = step(outline,triang.y)-step(1.-outline,triang.y);\n      border = (step(outline,triang.x)-step(1.-outline,triang.x))*border;\n     \n\n   \n   float x = onePixelSizeX * floor(uv.x / onePixelSizeX);\n   float y = onePixelSizeY * floor(uv.y / onePixelSizeY);\n   \n   \n   float tx = floor(x *(iResolution.x / pixelSize)+0.5);\n   float ty = floor(y *(iResolution.y / pixelSize)+0.5);\n   \n   \n   if((floor(tx / 2.))*2. == tx){\n       \n       mirror = !mirror;\n   }\n   if((floor(ty / 2.))*2. == ty){\n\n   \n       mirror = !mirror;\n   }\n   \n   float d;\n   if(mirror){\n       border -= step(-outline*1.5,triang.x - triang.y) -  step(outline*1.5,triang.x - triang.y);\n       d = step((0.),(triang.x - triang.y));\n   }\n   else{\n       border -= step(0.5-outline*0.75,(triang.x + triang.y)*0.5) -  step(0.5+outline*0.75,(triang.x + triang.y)*0.5);\n       d = step((0.5),(triang.x + triang.y)*0.5);\n   }\n   float f = 1. - d;\n\n   //Triangle distorsion\n   vec2 top = vec2(x,y+distorsion/iResolution.y);\n   vec2 bot = vec2(x,y);\n\n    \n   //Pick color from pixel\n   vec4 fragColorR= texture(iChannel0, vec2(clamp(top,0.,1.)));\n   vec4 fragColorL = texture(iChannel0, vec2(clamp(bot,0.,1.)));\n   \n   \n   fragColorR *= f*border;\n   fragColorL *= d*border;\n   fragColor = fragColorR + fragColorL;\n\n}\n\n","name":"Image","description":"","type":"image"}]}