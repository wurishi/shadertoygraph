{"ver":"0.1","info":{"id":"X3ByWD","date":"1727255071","viewed":32,"name":"Waves demo","username":"stormyblog","description":"Draw some sine waves interacting, creating a nice movement effect","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["basics","demos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// License CC-BY \n//  \n\nfloat PI = 3.141592;\nfloat[] randos = float[] (10.0, 5.0, -8.0, 3.0, 10.0, -1.0, 2.0, 5.0, 3.0, 5.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Init\n    vec2 uv = fragCoord / iResolution.xy;\n\tvec3 bg_color = vec3(1.0);\n\tvec3 wv_color = vec3(0.0);\n    \n    // Offset & resize\n    uv = -2.5 + 5.0 * uv;\n\t\t\n    // Ten waves\n    for(int i = 0; i < 10; i++) {\n      \n        // Random offset\n        uv.y += randos[i] / 10.0 ;\n        // Sine function\n        uv.y += (0.2 * sin(iTime * float(i) + uv.x + randos[i] * PI ) );\n        // Glow\n        float wv_width = abs(1.0 / (100.0 * uv.y));\n        // Compute final inverse color\n        wv_color += vec3(wv_width * 0.0, wv_width * 0.2, wv_width * 1.0);\n        \n    }\n\t\n    // Output\n\tfragColor = vec4(bg_color - wv_color, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}