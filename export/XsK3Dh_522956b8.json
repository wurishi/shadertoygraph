{"ver":"0.1","info":{"id":"XsK3Dh","date":"1455218708","viewed":112,"name":"uebungdrehung","username":"cardmechanic","description":"abcd","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["abcd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Rechteck {\n    vec2 pos;\n    \n    vec2 width;\n    vec2 height; \n\n    vec4\n    col;\n};\n\n  \n\n#define pi 3.1415926535\n#define t iTime\n\n  \n    \nvec2\n    rotateVec2( in vec2 p_vec, in float p_alpha ) {\n     \n        float\n            c = cos( p_alpha ),\n            s = sin( p_alpha );\n        \n        return vec2( c * p_vec.x - s * p_vec.y, +s * p_vec.x + c * p_vec.y );\n    }\n\nRechteck\n    rotateRect( in Rechteck p_rect, in float p_alpha ) {\n     \n        vec2\n            newWidth  = rotateVec2( p_rect.width, p_alpha ),\n            newHeight = rotateVec2( p_rect.height, p_alpha );\n        \n\t\treturn Rechteck( p_rect.pos, newWidth, newHeight, p_rect.col );\n    }    \n    \n    \n  \n\n    vec4 Hitrechteck (in vec2 p_uv, in Rechteck p_r){\n  \n        vec2 xynew = p_uv - p_r.pos;\n        float\n        x = dot(xynew, p_r.width)/dot(p_r.width, p_r.width),\n        y = dot(xynew, p_r.height)/dot(p_r.height, p_r.height); \n        \n    if (abs(x)>.5 || abs(y) >.5)\n    { \n        return vec4(.0);\n    }\n     if ((x-(abs(cos(t)-tan(.01*t))))*(x+.1)*(x-.2) > abs(.2*y) )\n        return p_r.col;\n    return vec4 (.0);\n   \n} \n\n\n    \nvoid mainImage( out vec4 p_col, in vec2 p_xy ) {\n    float t= iTime;\n    vec2 uv = p_xy / iResolution.xy - 0.5;\n\n    uv = 2.*uv * vec2( iResolution.x/iResolution.y, 1);\n    \n    float\n            alpha = 3.1 * iTime,\n        \tbeta = 0.6* iTime,\n        \tgamma = 7.2* iTime;\n \n    Rechteck \n    R1 = Rechteck( vec2(sin(alpha),cos(beta)), vec2(.2,0.), vec2(0.,.4), vec4( 0.4, .8, 0.3, 1. )),\n    R2 = Rechteck( vec2(-.2,-.4), vec2(.6,0.), vec2(0.,.2), vec4( .6, .9, .4, 1. )),\n    R3 = Rechteck( vec2(-.5,.1), vec2(.9,0.), vec2(0.,.9), vec4( .4, .4, .6, 1. )),\n    R4 = Rechteck( vec2(-.5,.1), vec2(.5,0.), vec2(0.,.5), vec4( .4, .4, .6, 1. ));\n   \n    \n   \n    \n    \n     vec4 col = Hitrechteck ( uv , rotateRect( R1, alpha )) + Hitrechteck ( uv , rotateRect( R2,beta )) + Hitrechteck ( uv , rotateRect( R3,gamma ))-Hitrechteck ( uv , rotateRect( R4, gamma ));\n    \n    \n        if (col.a < .9)\n        p_col = vec4(0.2,.5,.65,1.0);\n      \n    else\n   p_col = col;\n}","name":"Image","description":"","type":"image"}]}