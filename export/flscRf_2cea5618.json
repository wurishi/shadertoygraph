{"ver":"0.1","info":{"id":"flscRf","date":"1648447105","viewed":136,"name":"Hexagonal Game Of Life","username":"uiop","description":"just an attempt","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["hexagon","gol"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //float zoom = 3.+2.*sin(0.5*iTime);\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    //vec2 uv = vec2(\n      //  (0.5 + floor(fragCoord.x/zoom))/iResolution.x,\n       // (0.5 + floor((fragCoord.y-0.5*zoom*mod(floor(fragCoord.x/zoom),2.))/zoom))/iResolution.y\n    //);\n    // Output to screen\n        float zoom = 3.+2.*sin(0.25*iTime);\n\n     vec2 uv = vec2(\n        (0.5 + floor(fragCoord.x/zoom))/iResolution.x,\n        (0.5 + floor((fragCoord.y-0.5*zoom*mod(floor(fragCoord.x/zoom),2.))/zoom))/iResolution.y\n    );\n    //vec2 uv = fragCoord/iResolution.xy;\n    //vec3 col = texture(iChannel1, uv).rgb;\n    vec3 col2 = texture(iChannel0, uv).rgb;\n    //col2 = col2 + 0.9f* col;\n    fragColor = vec4(col2,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int slowLife(ivec2 p) {\n    float n = texelFetch(iChannel0, p, 0).r;\n\n    int sum = 0;\n    for(int i = -1; i < 2; i++){\n        for(int j = -1; j < 1; j++){\n            float r = texelFetch(iChannel0, p+ivec2(i,j+int(p.x%2)), 0).r;\n            if (r == 1.f){\n                sum ++;\n            }\n        }\n    }\n    if(texelFetch(iChannel0, p+ivec2(0,2*int(((1+p.x)%2))-1), 0).r == 1.f){\n        sum ++;\n    }\n    if(n == 1.){\n        if (sum == 4 || sum == 5){\n            return 1;\n        }\n        return 0;\n    }\n    if (sum == 2){\n            return 1;\n    }\n    return 0;\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int FRAMESKIP = 10;\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col;\n    if(iFrame < 10){\n        col = texture(iChannel1, uv);\n        if(col.r > 0.45){\n            col = vec4(1.f,0,0,0);\n        }\n    }else{\n        //col = texelFetch(iChannel0, ivec2(fragCoord),0);\n        if(iFrame% FRAMESKIP == 0){\n        float t = float(slowLife(ivec2(fragCoord)));\n        col = vec4(t,t,t,1);\n        }else{\n        col = texture(iChannel0,uv);\n        if(iFrame/FRAMESKIP % 900 == int(fragCoord.x)){\n            col = vec4(1,1,1,1);\n            }\n        }\n    }\n    \n    fragColor = col;\n    \n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec3 fade(ivec2 p){\n    float sum = 0.;\n    for(int i = -1; i < 2; i++){\n        for(int j = -1; j < 1; j++){\n            sum+= texelFetch(iChannel1, p+ivec2(i,j+int(p.x%2)), 0).r;\n        }\n    }\n    sum += texelFetch(iChannel1, p+ivec2(0,2*int(((1+p.x)%2))-1), 0).r;\n    sum = sum/7.;\n    return vec3(sum,sum*0.3,sum*0.1);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //float zoom = 3.+2.*sin(0.5*iTime);\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    //vec2 uv = vec2(\n    //    (0.5 + floor(fragCoord.x/zoom))/iResolution.x,\n    //    (0.5 + floor((fragCoord.y-0.5*zoom*mod(floor(fragCoord.x/zoom),2.))/zoom))/iResolution.y\n    //);\n    // Output to screen\n    //uv = fragCoord/iResolution.xy;\n    vec2 uv2 = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv2).rgb;\n    vec3 col2 = texture(iChannel1, uv2).rgb;\n    col2 = 0.0 * col2 + col+ 0.9 * fade(ivec2(fragCoord));\n    fragColor = vec4(col2,1.);\n    \n    //fragColor = texture(iChannel0, uv);\n}\n","name":"Buffer B","description":"","type":"buffer"}]}