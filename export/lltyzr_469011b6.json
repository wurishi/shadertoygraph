{"ver":"0.1","info":{"id":"lltyzr","date":"1531383855","viewed":84,"name":"stest","username":"ide","description":"learning shadertoy and test it!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv,vec2 pos,float r,float blur){\n    float d= length(uv -pos);\n\n    float c=smoothstep(r,r-blur,d);\n    return c;\n}\n\nfloat Band(float t,float start,float end,float blur){\n\tfloat step1=smoothstep(start-blur,start+blur,t);\n   \tfloat step2=smoothstep(end+blur,end-blur,t);\n    return step2*step1;\n\n}\nfloat Rect(vec2 uv,float left,float right,float bottom,float top,float blur){\n\tfloat band1=Band(uv.x,left,right,blur);\n    float band2=Band(uv.y,bottom,top,blur);\n    return band1*band2;\n}\n\nfloat smile(vec2 uv,vec2 pos,float size){\n\n    uv-=pos;\n    uv/=size;\t\n    float mask=Circle(uv,vec2(0.0,0.0),0.3,0.01);\n    mask-=Circle(uv,vec2(0.13,0.1),0.07,0.01);\n    mask-=Circle(uv,vec2(-0.13,0.1),0.07,0.01);\n    \n    float mouse=Circle(uv,vec2(0.0,-.02),0.2,0.01);\n    mouse-=Circle(uv,vec2(0.0,.02),0.2,0.01);\n    \n    mouse=max(0.,mouse);\n    mask-=mouse;\n    return mask;\n}\n\nfloat remap01(float a,float b,float t){\n\treturn (t-a)/(b-a);\n}\nfloat remap(float a ,float b,float c,float d,float t){\n\treturn remap01(a,b,t)*(d-c) +c; \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \n\tuv -=0.5;\n    uv.x*=iResolution.x/iResolution.y;\n\t\n    \n\t\n    //float mask=smile(uv,vec2(0.3,0.),0.5);\n    //float mask=Band(uv.x,-.3,.4,.01);\n    \n    float x= uv.x;\n    float y=uv.y;\n    x+=y*.0; //倾斜\n    \n    float m= -(x-.5)*(x+.5);\n    m=m*m*4.;\n    m=sin(x*10.5+iTime*5.)*.1;\n    y-=m;\n    //float mask= Rect(vec2(x,y),-.3+y,.3,-.2,.4,.01);// 梯形 三角形\n    float blur=remap(-.5,.5,0.01,.2,x);\n    float mask= Rect(vec2(x,y),-.5,.5,-.1,.1,blur);\n    vec3 col= vec3(.9,.91,0.);\n    fragColor = vec4(col*mask,1.0);\n}","name":"Image","description":"","type":"image"}]}