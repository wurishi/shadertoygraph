{"ver":"0.1","info":{"id":"mlyBWw","date":"1702133479","viewed":60,"name":"Mandelbrot Image Mapping :)","username":"ShelbyLynn","description":"shelbrot","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["fractal","mandelbrot","image","render","escapetime"],"hasliked":0,"parentid":"DlyfDm","parentname":"shelbfork"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 color = texture (iChannel0, fragCoord / iChannelResolution[0].xy);\n    color /= color.w;\n    color.xyz = pow((color.xyz), 1. / vec3(2.2));\n\tfragColor = color;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const int LIMIT = 1024;\nconst float BAIL = 256.;\nconst float PI = 3.141592653589793;\nint   seed = 1;\nint   rand(void) { seed = seed*0x343fd+0x269ec3; return (seed>>16)&32767; }\nfloat frand(void) { return float(rand())/32767.0; }\nvoid  srand( ivec2 p, int frame, float iTime )\n{\n    int n = frame;\n    n = (n<<13)^n; n=n*(n*n*15731+789221)+1376312589; // by Hugo Elias\n    n += p.y;\n    n = (n<<13)^n; n=n*(n*n*15731+789221)+1376312589;\n    n += p.x;\n    n = (n<<13)^n; n=n*(n*n*15731+789221)+1376312589;\n    seed = n;\n    \n}\nfloat tridist(float f) {\n    float o = f ;\n    float v = o * sqrt(abs(o));\n    v = max(v, -1.f);\n    return v + sign(o);\n\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 imap(vec2 z) {\n    vec2 isize = vec2(1024.,1024.);\n    float zw = mod((atan(z.y,z.x) + PI) / (PI * 2.0) * isize.x * 2.,      isize.x);\n    float zh = mod(log(length(z) / BAIL) / log(BAIL) * isize.y *2., isize.y);\n    return pow(texture(iChannel1, vec2(zw,zh) / isize).xyz,  vec3(2.2)) ;\n}\nvec3 mset(vec2 c) {\n    vec2 z = c;\n    int i = 0;\n    while (i < LIMIT) {\n        if (dot(z,z) > BAIL) break;\n        float x = z.x * z.x - z.y * z.y;\n        z.y = 2. * z.x * z.y + c.y;\n        z.x = x + c.x;\n        i += 1;\n    }\n    if (i == LIMIT) return vec3(0.);\n    return  imap(z);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    srand( ivec2(fragCoord), iFrame, iTime);\n    vec2 offset = vec2(tridist(frand(void)), tridist(frand(void)));\n    vec2 uv = (fragCoord + 0.5 + offset)/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 2.;\n    uv += vec2(-2.25, -1.);\n    vec4 c = vec4(0.);\n    for (int j = 0; j < 1; j++)\n        c += vec4(mset(uv), 1.);\n    if (iTime < 1. && iMouse.z == 0.) \n      c += texture(iChannel0, fragCoord / iResolution.xy);\n    else if (iMouse.z <= 0.)\n      c += texture(iChannel0, fragCoord / iResolution.xy);\n    fragColor = c;\n}","name":"Buffer A","description":"","type":"buffer"}]}