{"ver":"0.1","info":{"id":"3dfyDj","date":"1585546333","viewed":129,"name":"Glitch_R00m","username":"Kapsy","description":"Demo or Die!","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["kapsy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Glitch_Room\" by Kapsy. https://shadertoy.com/view/WstGWl\n// 2020-03-30 05:31:00\n\n#define time iTime\n#define PI 3.145926\nfloat rnd(float t) {\n  return fract(sin(t*564.655)*9865.465);  \n}\n\nmat2 rot(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nfloat smin(float a, float b, float h){\n  float k = clamp((a-b)/h*0.5+0.5,0.0,1.0);\n  return mix(a,b,k)-k*(1.0-k)*h;\n  }\n\nfloat box(vec3 p, vec3 b){\n  \n  vec3 d = abs(p)-b;\n  return length(max(d,0.0))+min(max(d.x,max(d.y,d.z)),0.);\n  }\n  \nfloat move(vec3 p){\n  float t = fract(time);\n  float y = 8.0*t*(1.0-t);\n  return y;\n\n  }\n\nfloat fig(vec3 p){ \n  float c = length(vec3(p.x,p.y-1.9,p.z))-1.;\n  float c2= length(vec3(p.x,p.y+1.9,p.z))-1.;\n  c = min(c,c2);\n  float b = box(vec3(p.x,p.y,p.z*move(p)),vec3(1.));\n  float fff= smin(c, b,0.7);\n  return fff;\n  }\n\nfloat room(vec3 p){\n  p.zy*=rot(0.0);\n  \n  return box(p,vec3(5));\n  }\n  \nint cv = 0;  \n\nfloat fig_2(vec3 p){\n  vec3 pp =p;\n  float s = 6.0;\n  for(int i=0; i<8; i++){\n      p.xz*=rot(0.7);\n      p.xy*=rot(time+float(i));\n      p=abs(p);\n      p.yz-=0.1;\n      s+=float(i);\n    \n    }\n      \n  float f = max(room(pp),fig(vec3(p.x,p.y,p.z))); \n  float box = -box(vec3(pp.x,pp.y+move(pp),pp.z+move(pp)),vec3(9.,5.,16));\n  \n  (f>box)?cv=1:cv=2;\n \n    return f;\n    }\n\nfloat SDF2(vec3 p){\n  vec3 pp =p;\n  float s = 6.0;\n  for(int i=0; i<8; i++){\n      p.xz*=rot(0.7);\n      p.xy*=rot(time+float(i));\n      p=abs(p);\n      p.yz-=0.1;\n      s+=float(i);\n    \n    }\n      \n  float f = fig_2(pp);\n  float box = -box(vec3(pp.x,pp.y+move(pp),pp.z+move(pp)),vec3(9.,5.,16));\n  \n  (f>box)?cv=1:cv=2;\n \n    return box;\n    }\n\n    \n vec3 cam(vec3 ro, vec2 uv, vec3 t, float a){\n     vec3 f=normalize(t-ro);\n     vec3 l=normalize(cross(vec3(0.,1.,0.),f));\n     vec3 u = normalize(cross(f,l));\n     return normalize(f*a+l*-uv.x+u*-uv.y);\n   } \n\nfloat Twist( vec3 p )\n{\n    const float k = 0.7; \n    float c = cos(k*p.y);\n    float s = sin(k*p.y);\n    mat2  m = mat2(c,-s,s,c);\n    vec3  q = vec3(m*p.xz,p.y);\n    \n    return fig_2(q);\n}\n\nfloat SDF(vec3 p){\n    return min(Twist(p),SDF2(p+vec3(atan(p.x*p.y),0.,0.)));\n}\n  \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n  ////////////////////////////////////////////////////\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  vec3 ro = vec3(sin(rnd(time)),tan(rnd(fract(time/4.0))),mix(-5.0,-6.0,sin(time))); vec3 p = ro;\n  vec3 target = vec3(0);\n  //vec3 rd = normalize(vec3(-uv,1));\n  vec3 rd = cam(ro,uv,target,0.5);\n  vec3 col = vec3(0.);\n  float dd = 0.0;\n  float shad = 0.0;\n  for(int i=0; i<100; ++i){\n    //float d = -box(p,vec3(1.,1.,5));\n    float d = SDF(p);\n    if(d<0.001) {shad = float(i)/50.0; break;}\n    if(dd>100.0) {dd=100.0; break;}\n    p+=d*rd;\n    dd+=d;\n    }\nvec3 col2=vec3(1.0-shad)*0.5;\n\nvec2 eps = vec2(0.01,0.);\nvec3 n = normalize(SDF(p)-vec3(SDF(p-eps.xyy),SDF(p-eps.yxy),SDF(p-eps.yyx)));\nvec3 l = normalize(vec3(0,0,1));   \nfloat fog = 1.0-clamp(dd/100.0,1.0,0.0);    \ncol+=dot(n,l)*fog;\nvec3 h = normalize(l-rd);\n   \nif(cv==1) col+=vec3(0.,mix(-0.7,0.7,tan(iTime)),0.)*fog;\n    \nif(cv==2) col+=vec3(0.7,0.0,0.0)*fog+(vec3(0.003,0.0,0.400)*vec3(-0.130,0.100,0.900)+pow(max(0.0,dot(n,h)),5.0)*pow(max(0.0,dot(n,h)),30.0));\ncol = mix(col+col2,col2-col,sin(PI*iTime))*fog;\nfragColor = vec4(pow(col,vec3(0.4545)),1.);\n\n    \n}\n\n\n","name":"Image","description":"","type":"image"}]}