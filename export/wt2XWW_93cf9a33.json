{"ver":"0.1","info":{"id":"wt2XWW","date":"1565931360","viewed":154,"name":"Wave sampling","username":"edo_m18","description":"This is simplest way to create a sampling like wave that using just sin wave.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave","water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float wave = 30.0;\nconst float speed = 10.0;\n\nfloat getHeight(vec2 uv)\n{\n    float len = length(uv);\n    \n    float len1 = length(uv + vec2(0.1));\n    float d1 = sin(len1 * wave - iTime * speed);\n    \n    float len2 = length(uv + vec2(0.4));\n    float d2 = sin(len2 * wave - iTime * speed);\n    \n    float len3 = length(uv + vec2(-0.8));\n    float d3 = sin(len3 * wave  - ( iTime * speed * 0.5) + 1.);\n    \n    return (d1 +d2 + d3) * pow(1.0 - len, 2.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.x;\n    \n\tvec3 col = vec3(0);\n    \n    const float e = 0.01;\n    vec2 shiftX = vec2(e, 0.0);\n    vec2 shiftY = vec2(0.0, e);\n\n    float hX = getHeight(uv + shiftX);\n    float hx = getHeight(uv - shiftX);\n    float hY = getHeight(uv + shiftY);\n    float hy = getHeight(uv - shiftY);\n    \n    float yu = (hX - hx) * 0.5;\n    float yv = (hY - hy) * 0.5;\n    vec3 du = vec3(1.0, yu, 0.0);\n    vec3 dv = vec3(0.0, yv, 1.0);\n    \n    vec3 n = normalize(cross(dv, du));\n    \n    uv.xy += n.xz;\n    \n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}