{"ver":"0.1","info":{"id":"M3tGRf","date":"1717468233","viewed":40,"name":"Trying some-things","username":"Goobert","description":"First shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pallete(float t) {\n    vec3 a = vec3(0.8, 0.5, 0.4);\n    vec3 b = vec3(0.2, 0.4, 0.2);\n    vec3 c = vec3(2.0, 1.0, 1.0);\n    vec3 d = vec3(0.00, 0.25, 0.25);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv_0 = uv;\n    vec3 final_color = vec3(-0.1);\n    \n    for (float i = 0.0; i < 3.0; i++) { \n        uv = fract(uv * 1.7) - 0.5;\n\n        float d = length(uv) * exp(-length(uv_0)) + i*0.05;\n\n        vec3 col = pallete(length(uv_0) + iTime*0.2 + i);\n\n        d = sin(d*8. * cos(iTime)/.8 + iTime/2.)/8.;\n        d = abs(d);\n\n        d = pow(0.01/d, 1.3);\n\n        final_color += col * d;\n    }\n\n    // Output to screen\n    fragColor = vec4(final_color, 1.0);\n}","name":"Image","description":"","type":"image"}]}