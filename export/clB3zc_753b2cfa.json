{"ver":"0.1","info":{"id":"clB3zc","date":"1673599406","viewed":259,"name":"smooth fract / mod / floor","username":"FabriceNeyret2","description":"smooth fract:  tunable, 1 pixel ( for AA ), reference fract.\n\nred: smooth floor    ( picky artifact just do to visualization )","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["interpolation","utils","sfract","sfloor","smoothmod"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define sfract(x)      min( fract(x)/(1.-fwidth(x)), fract(-(x))/fwidth(x) ) // or 1.5*fwidth\n#define smod(x,n)     (sfract((x)/(n))*(n))\n#define sfloor(x)      max( floor(x), x - sfract(x) )\n\n//  ---  variant: tunable smooth cliff \n#define sfractN(x,w)   min( fract(x)/(1.-(w)), fract(-x)/(w) )\n#define smodN(x,n,w)  (sfractN((x)/(n),w)*(n))\n#define sfloorN(x,w)   max( floor(x), x - sfractN(x,w) )\n\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, V,\n         U = 10.* (u/R - .5);\n\n    float y = floor(U.y), x = U.x,                                            // show funcs ( white )\n          v =  y == -2. ? fract( x )\n             : y == 0. ? sfract( x )\n             : y == 2. ? sfractN( x, .05 )\n             : 0.;\n    O = U.x > 0. \n          ? vec4( fract(U.y) < v )\n          : vec4( smoothstep(0., 1.5*fwidth(v), v - fract(U.y) ) );\n       // : vec4( smoothstep( 1.5*fwidth(v), 0., abs(v - fract(U.y) )) );\n \n    v = sfloorN( x, .1 );                                                     // --- show sfloor (red )\n    O.r += smoothstep( 1.5*max(fwidth(U.y),fwidth(v)), 0., abs(v - U.y ) ); \n    \n    V = (10.*(u-.5*R)/R.y) * mat2(cos( .3*iTime+vec4(0,11,33,0)));            // --- exemple ( green )\n    V = sfract( V );\n    if (y<-2. && U.x>0.) O.g = V.x * V.y;\n}","name":"Image","description":"","type":"image"}]}