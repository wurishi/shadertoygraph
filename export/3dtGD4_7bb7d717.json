{"ver":"0.1","info":{"id":"3dtGD4","date":"1568556274","viewed":341,"name":"Banding and gamut distorsions","username":"davidjonsson","description":"On this laptop the gamut shows strongest in green, having the same value a bit in on the right. Red and blue also has gamut but ends earlier. 8-bits per color banding is also visible. ","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["banding","colors","gamut"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This shader is made to detect gamut and banding effects.\n\n// Gamut: The same color is kept a bit in on the right, in order to increase contrast for lower values.\n\n// Banding: Stepwise decrease of color intensity. Most often noticeable with 8 bits per color.\n\nvoid mainImage( out vec4 outImage, vec2 pixelPos ) {\n    pixelPos /= iResolution.xy;\n    vec4 q =   pixelPos.y > 6./7.  ? vec4(pixelPos.x, vec3(0.))\n              : pixelPos.y > 5./7. ? vec4(pixelPos.x, pixelPos.x, vec2(0.))\n              : pixelPos.y > 4./7. ? vec4(0., pixelPos.x, vec2(0.))\n              : pixelPos.y > 3./7. ? vec4(0., pixelPos.x, pixelPos.x, 0.)\n              : pixelPos.y > 2./7. ? vec4(vec2(0.), pixelPos.x, 0.)\n              : pixelPos.y > 1./7. ? vec4(pixelPos.x, 0., pixelPos.x, 0.)\n              :             vec4(pixelPos.x);\n    outImage = vec4(q);\n\n}","name":"Image","description":"","type":"image"}]}