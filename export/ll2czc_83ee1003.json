{"ver":"0.1","info":{"id":"ll2czc","date":"1509648122","viewed":1260,"name":"After Effects / Displacement Map","username":"CoyHot","description":"This shader mimic the After Effects \"Displacement Map\" effect, where a input texture is used to displace another one.","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["aftereffects"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\t--------------------------------\n\tAfter Effects / Displacement Map\n\t--------------------------------\n\n    Mimic the After Effects \"Displacement Map\" effect, where a input texture is used to displace another one.\n    Note :\n\t\t- Input textures are not linerarized !\n\t\t- The natural behaviour of an UV Offest mimic the \"wrap pixels\" option in After Effects\n\n    - Mid-gray: has no effect.\n    - Darker values: push pixel in one direction\n    - Brighter values: push pixel in the other direction\n\n\t==> Change the \"DispStrenght\" to a lower value to reduce the effect\n\n\tFrancois 'CoyHot' Grassard - 2017\n*/\n\n#define DispStrenght 0.75\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 origuv = (fragCoord.xy / iResolution.xy);\n    vec2 uvForP = origuv;\n\tvec2 uv = ((fragCoord.xy / iResolution.xy)-0.5)/vec2(iResolution.y / iResolution.x, 1);\n\n\n    vec3 textDisp = texture(iChannel0, origuv).xyz;    \n    uvForP -= (textDisp[0]-0.5)*sin(iTime*1.0)*DispStrenght;\n    \n    uv.y += sin(((uv.x+iTime)*0.75)*0.75);\n\n    vec3 textCol = texture(iChannel1, uvForP).xyz;\n\n\tvec4 p = vec4(textCol.xyz,1.0);\n\n\tfragColor = p;\n}","name":"Image","description":"","type":"image"}]}