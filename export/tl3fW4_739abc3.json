{"ver":"0.1","info":{"id":"tl3fW4","date":"1619778317","viewed":57,"name":"practice-smile","username":"lowfront","description":"practice, smile","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["smile","mask","practice","comp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fader(float r, float size, float v) {\n  if (v < size) v = 1.; \n  else if (v < r) {\n    v = 1. - (v-(size))/(r-size);\n  }\n  else v = 0.;\n  return v;\n}\n\nfloat Circle(vec2 uv, vec2 p, float r, float blur) {\n  float d = length(uv - p);\n  float c = fader(r, r-blur, d);\n  \n  return c;\n}\n\nfloat Comp(float val) {\n  if (val > 1.) return 1.;\n  else if (val < 0.) return 0.;\n  return val;\n}\n\nvec3 Mask(vec3 colors, float alpha) {\n  return colors * alpha;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec2 p = vec2(0., 0.);\n    float mask = Circle(uv, p, .4, .02);\n    mask -= Circle(uv, vec2(-.15, .12), .085, .01);\n    mask -= Circle(uv, vec2(.15, .12), .085, .01);\n    float mouth = Circle(uv, vec2(.0, -.01), .25, .01);\n    mouth -= Circle(uv, vec2(.0, .06), .27, .01);\n    mouth = Comp(mouth);\n\n    mask -= mouth;\n    \n    \n    \n    vec3 cs = 0.5 + 0.5*cos(iTime + uv.xyx + vec3(0, 2, 4));\n    \n    \n    fragColor = vec4(Mask(cs, mask),1.);\n    // fragColor = vec4(vec3(c), 1.);\n}","name":"Image","description":"","type":"image"}]}