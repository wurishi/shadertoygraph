{"ver":"0.1","info":{"id":"MtBXRm","date":"1442430179","viewed":175,"name":"Voidfull","username":"shezard","description":"Another kaleidoscopic piece","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nconst mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nmat2 rotate(in float theta) {\n    return mat2(\n    \tcos(theta), -sin(theta), sin(theta), cos(theta)\n    );\n}\n\nfloat noise(in vec2 uv) {\n\treturn sin(1.5*uv.x)*sin(1.5*uv.y);\n}\n\nfloat fbm(vec2 uv) {\n    float f = 0.0;\n    f += 0.5000*noise(uv); uv = m*uv*2.02;\n    f += 0.2500*noise(uv); uv = m*uv*2.03;\n    f += 0.1250*noise(uv); uv = m*uv*2.01;\n    f += 0.0625*noise(uv);\n    return f/0.9375;\n}\n\nfloat fbm2(in vec2 uv) {\n   vec2 p = vec2(fbm(uv + vec2(0.0,0.0)),\n                 fbm(uv + vec2(5.2,1.3)));\n\n   return fbm(uv + 4.0*p);\n}\n\nvec2 powX(in vec2 p) {\n  return p + p + p + p;   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // basic setup\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = -1.0 + 2.*uv;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // colors\n    vec3 m1 = vec3(.5, .5, 1.0);\n    vec3 m2 = vec3(.5, 1.0, .5);\n    vec3 m3 = vec3(1.0, .5, .5);\n    \n    // rotation speed\n    float theta = iTime * .1 * length(uv * cos(iTime*.1));\n    \n    vec2 p = uv * rotate(theta * .5);\n    vec2 p2 = uv * rotate(.835 + theta * .25);\n    vec2 p3 = uv * rotate(.4175 + theta * .125);\n    \n    p = abs(p);\n    p2 = abs(p2);\n    p3 = abs(p3);\n    \n   \tvec3 base = vec3(\n        .5 + .5 * cos(iTime)\n    );\n    \n    vec3 c = base +\n        m1 * fbm(\n        powX(p) + iTime + fbm2(p + iTime * .1)\n    ) + m2 * fbm(\n     \tpowX(p2) + iTime + fbm2(p2 + iTime * .1)\n    ) + m3 * fbm(\n     \tpowX(p3) + iTime + fbm2(p3 + iTime * .1)\n    );\n    \n    c = clamp(c, 0.0, 1.0);\n    \n\tfragColor = vec4(c * c * c *c , 1.0);\n}","name":"","description":"","type":"image"}]}