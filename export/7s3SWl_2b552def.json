{"ver":"0.1","info":{"id":"7s3SWl","date":"1634145310","viewed":330,"name":"Physically based rod light","username":"hyperknot","description":"Physically based lightness calculation\nfor a rod light perpendicular to a\nmatte (Lambertian) ground plane, expanding up and down.\ndetails: https://hyperknot.com/blog/area_lights_in_shaders/","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["light","physics","arealight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Physically based lightness calculation\n// for a rod light perpendicular to a\n// matte (Lambertian) ground plane, expanding up and down.\n// details: https://hyperknot.com/blog/area_lights_in_shaders/\n\nfloat rod_light_antideriv(vec2 uv, float i, float h) {\n  return i * uv.x / (dot(uv,uv) + h*h);\n}\n\nfloat rod_light(vec2 uv, float i, float h_top, float h_bottom) {\n  // h_top and h_bottom - the light's top and bottom above the ground\n  // i - light's intensity\n  return rod_light_antideriv(uv, i, h_top) - rod_light_antideriv(uv, i, h_bottom);\n}\n\n\nfloat lin_to_srgb ( float val ) {\n  if( val < 0.0031308 )\n    return val * 12.92;\n  else\n    return 1.055 * pow(val,1.0/2.4) - 0.055;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n\n    float h = pow(sin(iTime/3.), 2.) * 0.1 + 0.002;\n    float v = rod_light(uv, 0.1, h, 0.001);\n    v = lin_to_srgb(v);\n\t\n \tfragColor=vec4(v);\n}","name":"Image","description":"","type":"image"}]}