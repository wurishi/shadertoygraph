{"ver":"0.1","info":{"id":"fldyDl","date":"1663241246","viewed":107,"name":"nose (wip)","username":"ztarby","description":"i think i never update this shader so here u go lol\n\ntexture and buffer test\nnote: is just a test, im still learning, don't take seriously ","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["3d","ugly","uv","rainbow","art","feo","abstcract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 buf = texture(iChannel0 , uv);\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4) * sin(buf.x + uv.y * uv.x)  ) ;\n    \n    vec3 ejem = exp(col)   * length(col);\n    col = col + cos(ejem + col.xyx * 3.0);\n    //col = col / ejem - length(ejem / 5.0) + 0.1;\n    col = length(col) * exp(col) + col;\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 tst = fragCoord/ iResolution.xy;\n    vec4 tex = texture(iChannel0,tst);\n    tst = normalize(tst) * sin(iTime + tst.x - tst.y);\n    vec3 prueba = tst.xyx + 0.5 * tex.xyx;\n    prueba = prueba + dot(prueba,tst.xyx);\n    prueba = sin(prueba * 4.0) / normalize(prueba) - 1.0;\n    fragColor = vec4(prueba,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}