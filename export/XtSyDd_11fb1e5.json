{"ver":"0.1","info":{"id":"XtSyDd","date":"1510519598","viewed":143,"name":"Circle Function","username":"HephaChronos","description":"Learning how to code shaders.  I followed this https://www.youtube.com/watch?v=GgGBR4z8C9o tutorial and made something pretty cool","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, float r, vec2 pos){\n    uv += pos;\n    \n    float d = length(uv);\n    \n    float c = smoothstep(r, r-.02, d);\n    return c;   \n}\n\n#define polar2xy(r,a) ( (r) * vec2( cos(a), sin(a) ) )\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =  ( fragCoord - .5* iResolution.xy ) / iResolution.y;\n    \n\tfloat mask = circle(uv, abs(.9*sin(.3*iTime)), vec2(0,0) );\n    \n    vec3 c = vec3(uv.x+.5, uv.y+.5, 0.5+0.5*sin(iTime));\n    \n    c *= mask;\n    \n    mask = circle( uv, .2, polar2xy( .1, 4.*iTime ) );\n    vec3 c2 = vec3(5., 2.+0.5*sin(2.37*iTime), 1.);\n    c2 *= mask;\n    \n    mask = circle( uv, .1, polar2xy( .1, 4.*iTime) );\n    c2 *= 1.-mask;\n    \n    mask = circle( uv, .1, polar2xy( .45, 4.*iTime ) );\n    c2 += mask;\n    \n    c *= mix(c, c2, .5);\n        \n\tfragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}