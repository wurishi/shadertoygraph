{"ver":"0.1","info":{"id":"sdcyDX","date":"1654358468","viewed":82,"name":"Test Polygon","username":"Boen","description":"test something","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//outer vertices\nconst vec2 a0 = vec2(-0.5, -0.5);\nconst vec2 a1 = vec2(0.4, -0.6);\nconst vec2 a2 = vec2(0.5, 0.2);\nconst vec2 a3 = vec2(0.3, 0.9);\nconst vec2 a4 = vec2(-0.6, 0.6);\n\n//add outer vertex...\n\nconst vec2[] outer = vec2[](a0, a1, a2, a3, a4);\n\n//inner vertices\nconst vec2 b0 = vec2(-0.3, -0.2);\nconst vec2 b1 = vec2(0.2, -0.4);\nconst vec2 b2 = vec2(0.2, 0.3);\nconst vec2 b3 = vec2(-0.2, 0.2);\n\n//add inner vertex...\n\nconst vec2[] inner = vec2[](b0, b1, b2, b3);\n\nfloat DrawOuter(in vec2 p)\n{   \n    const int num = outer.length();\n    \n    float sign = 1.0;\n    \n    for(int i = 0, j = num - 1; i < num; i++)\n    {\n        vec2 edge = outer[j] - outer[i];\n        vec2 target = p - outer[i];\n\n        bvec3 condition = bvec3(p.y >= outer[i].y,\n                          p.y < outer[j].y, \n                          edge.x * target.y > edge.y * target.x);\n\n        if(all(condition) || all(not(condition))) { sign = -sign; }\n\n        j = i;\n    }\n    \n    return sign;\n}\n\nfloat DrawInner(in vec2 p)\n{   \n    const int num = inner.length();\n    \n    float sign = 1.0;\n    \n    for(int i = 0, j = num - 1; i < num; i++)\n    {\n        vec2 edge = inner[j] - inner[i];\n        vec2 target = p - inner[i];\n\n        bvec3 condition = bvec3(p.y >= inner[i].y, \n                           p.y < inner[j].y, \n                           edge.x * target.y > edge.y * target.x);\n\n        if(all(condition) || all(not(condition))) { sign = -sign; }\n        \n        j = i;\n    }\n    \n    return sign;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord / iResolution.xy) * 2.0 - 1.0;\n    \n\tfloat dir = DrawOuter(p) * DrawInner(p);\n\n    vec3 color = (dir > 0.0) ? vec3(0.0, 0.0, 0.0) : vec3(0.9, 0.3, 0.2);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}