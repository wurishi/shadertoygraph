{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define PIby2 6.28318530718\n\nfloat sin_wave(float value, float frequence, float amplitude,vec2 offset)\n{\n    return amplitude*sin((value+offset.x/frequence)*PIby2*frequence)+offset.y;\n}\nfloat square_wave(float value, float frequence, float amplitude,vec2 offset)\n{\n    return sign(sin_wave(value,frequence,amplitude,offset));\n}\nfloat saw_wave(float value, float frequence, float amplitude,vec2 offset)\n{\n    return amplitude*((mod(value+offset.x/frequence,1.0/frequence)*frequence*2.0)-1.0)+offset.y;\n}\nfloat triangle_wave(float value, float frequence, float amplitude,vec2 offset)\n{\n    return abs(saw_wave(value,frequence,amplitude,offset));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 offset = vec2(iTime,0.0);\n    vec2 offset2 = vec2(0.0,iTime);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 colors = vec2(sin_wave(uv.x,1.0,1.0,offset), square_wave(uv.y,1.0,1.0,offset));\n\tfragColor = vec4(colors,0.0,1.0);\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define PIby2 6.28318530718\n\nfloat sin_wave(float value, float frequence, float amplitude,vec2 offset)\n{\n    return amplitude*sin((value+offset.x/frequence)*PIby2*frequence)+offset.y;\n}\nfloat square_wave(float value, float frequence, float amplitude,vec2 offset)\n{\n    return sign(sin_wave(value,frequence,amplitude,offset));\n}\nfloat saw_wave(float value, float frequence, float amplitude,vec2 offset)\n{\n    return amplitude*((mod(value+offset.x/frequence,1.0/frequence)*frequence*2.0)-1.0)+offset.y;\n}\nfloat triangle_wave(float value, float frequence, float amplitude,vec2 offset)\n{\n    return abs(saw_wave(value,frequence,amplitude,offset));\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    return vec2( sin_wave(time,PIby2*440.0,exp(-3.0*time),vec2(0.0)) );\n}","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsBSWd","date":"1417063634","viewed":204,"name":"Simple Wave functions","username":"chapter9","description":"Simple wave functions to create patterns and sounds","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["simple","sound","wave","function"],"hasliked":0,"parentid":"","parentname":""}}