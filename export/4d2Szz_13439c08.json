{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define SQUARES \n#define time iTime\nfloat t;//=100000.0*floor(200.0+100.0*cos(time*0.1));\n \nfloat noise(vec2 p){ float f = sin(p.x)*cos(p.y)*t;return fract(f);}\nvec2 recoord(vec2 p){ return floor(p*10.)/10.;}\n \n\nfloat mylen(vec2 uv){\n#ifdef SQUARES\n\treturn sqrt(pow(abs(uv.x),3.)+pow(abs(uv.y),3.0))*59.;\n#else\n   return length(uv)*8.;\n#endif\n}\n \nfloat fbr(vec2 p){\n    \n\tvec2 f = recoord(p);\n\tvec2 c=vec2(.05)+(f);\n\tfloat r=mylen(c-p);\n\treturn noise(f)-r;\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n t=100000.0*floor(200.0+100.0*cos(time*0.1));\n \tvec2 cst = vec2( cos(.05*time), sin(.05*time) );\n    mat2 rot = 0.5*cst.x*mat2(cst.x, -cst.y, cst.y, cst.x);\n\tvec2 uv= fragCoord.xy *.05;\n\tfloat f = fbr(uv*rot+vec2(time*0.07)+cst);\n  \tfragColor = vec4(f*uv.x,f*uv.y,f,1.);\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"#define PI2 6.2831 \n#define L 0.5\n#define D(v) b+=float(L);if(t>b){x=b;n=float(v);}\n#define P(a,b,c,d,e,f,g,h,k,l,m,n,o,p,r,s) D(a)D(b)D(c)D(d)D(e)D(f)D(g)D(h)D(k)D(l)D(m)D(n)D(o)D(p)D(r)D(s)\n#define tint 0.28\n\nfloat seq( float t,int a,int q,int c,int d ,int e,int f,int g,int h,int k,int l,int m,int n1,int o,int p,int r,int s)\n{\n  float b = 0.0;\n  float n = 0.0;\n  float x = 0.0;\n  t /= tint;\n  P(a,q,c,d,e,f,g,h,k,l,m,n1,o,p,r,s)\n  return n;\n}    \n\n    \n\nfloat FM(float t,float f,float p){\n\n    return sin(f*PI2*t+  // base freq\n                    (3.124+7.14*sin(t/PI2))\n                    *sin(p*f*PI2*t)// FM Modulation\n                   );\n\n}\n\nfloat tri(float t,float f, float p)\n{\n    return abs(fract(t * f) - p)*4.0-1.0;\n}\n\nfloat saw(float t,float f, float p)\n{\n\treturn fract(t * f + p) * 2.0 - 1.0;\n}\n\nfloat sqr(float t,float f, float p)\n{\n    return step(fract(t * f), p)*2.0-1.0;\n}\n\n\nfloat sawmsaw(float t,float f, float p){\n\treturn (fract(t*f)+fract(t*f*p))* 2.0 - 1.0;\n}\n\n\nfloat sinw(float t,float f, float p){\n\treturn sin(t*f*PI2+p);\n}\n\nfloat noise(float t,float f, float p){\n\treturn fract(sin(t*f*PI2)*p*1000.0);\n}\n\n\nfloat decay2(float time,float len,float param){\n\n    float t = (param<.0?len:.0)-mod(time,len);\n    return exp(param * t);\n\n}\n\n// note number to frequency  from https://www.shadertoy.com/view/ldfSW2\nfloat ntof(float n)\n{\n\treturn 440.0 * pow(2.0, (n - 69.0) / 12.0);\n}\n\nfloat osc(int type,float time,float freq,float phase){\n\tif(type == 0)return sinw(time, freq, phase);\n\tif(type == 1)return sqr(time, freq, phase);\n\tif(type == 2)return saw(time, freq, phase);\n\tif(type == 3)return tri(time, freq, phase);\n\tif(type == 4)return sawmsaw(time, freq, phase);\n\tif(type == 5)return FM(time, freq, phase);\n\tif(type == 6)return noise(time, freq, phase);\n    return 0.0;\n}\n\n\n\n\n\nfloat zfilter(float h, float cut, float res,float time)\n{\n    h += fract(time * res);\n\treturn clamp(h * cut+h,-1.,1.);\n}\n\n\nfloat finstrument(int type,float time,float note,float phase,float decay,float notedecay,float cut,float res){\n    float freq = ntof(note);\n    float len = tint*L;\n    float y = osc(type,time,freq,phase);\n\tif(cut!=.0&&res!=.0)\n        y = zfilter(y,cut, res,time);\n        y *= decay2(time,len,decay);\n\treturn y;\n}\n\n\nfloat instrument(int type,float time,int note,int phase,int decay,int notedecay,int cut,int res){\n\tif(note ==0) return .0;\n    \n    float n = float(note);\n    float p = float(phase)/31.0;\n    float d = float(decay-63)/31.0;\n    float n2 = 0.;\n    float c = float(cut)/63.0;\n    float r = float(res)/63.0;\n    \n    return finstrument(type,time,n,p,d * 3.0,n2,c,r);\n}\n\n\n\nvec2 mainSound( in int samp,float time)\n{\n    float t = mod(time,L*16.0*tint);\n    int i = int(floor(mod(time*.7,6.0)));\n    float sc = sin(time*cos(time));\n    float n = seq(t,33,36,40,33,36,40,33,36,40,33,36,40,33,36,40,43);\n    float r = seq(t,93,60,30,70,96,50,00,50,90,40,00,40,93,50,00,50);\n    float y = instrument(5, time,int(floor(n)),30,263,0,int(floor(r*2.0)),2);\n    \t y += instrument(i, time,int(floor(r)),50,363,63,0,0);\n    return vec2( y *.5);\n}","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4d2Szz","date":"1409038073","viewed":553,"name":"Synth test","username":"znsoft333","description":"sound experiments","likes":14,"published":1,"flags":8,"usePreview":0,"tags":["synth","soundtest"],"hasliked":0,"parentid":"","parentname":""}}