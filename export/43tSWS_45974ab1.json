{"ver":"0.1","info":{"id":"43tSWS","date":"1723118176","viewed":35,"name":"timo-Smiley","username":"li379395535","description":"Smiley","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["smiley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n#define sat(x) clamp(x, 0., 1.)\nfloat remap01(float a, float b, float t) {\nreturn sat((t - a) / (b - a));\n}\n\nfloat remap(float a, float b, float c, float d, float t) {\n    return mix(c, d, remap01(a,b,t));\n}\n\nvec2 within(vec2 uv, vec4 rect) {\n    return (uv - rect.xy) / (rect.zw - rect.xy);\n}\n\nvec4 Brow(vec2 uv, float smile) {\n    float offs = mix(.2, 0., smile);\n    \n    uv.y -= offs;\n    \n    float y = uv.y;\n    uv.y -= uv.x*mix(.7,1., smile) - mix(0., .3, smile);\n    uv.x -= mix(-.0, .1, smile);\n    uv -= .5;\n    vec4 col = vec4(.0);\n    \n    float blur = .1;\n    \n    float d1 = length(uv);\n    float s1 = S(.45, .45-blur, d1);\n    float d2 = length(uv - vec2(.07, .14));\n    float s2 = S(.5, .5-blur,d2);\n    \n    float browMask = sat(s1-s2);\n    \n    float colMask = (1. - remap01(0.2,.4,y))*.75;\n    colMask *= S(.6, .9, browMask);\n    colMask *= smile;\n    \n    vec4 browCol = mix(vec4(.4,.2,.2,1.), vec4(.8,.8,.1,1.), colMask);\n    \n    uv.y -= .15 - offs * .5;\n    blur += mix( 0.,.1, smile);\n    d1 = length(uv);\n    s1 = S(.45, .45-blur, d1);\n    d2 = length(uv - vec2(.07, .14));\n    s2 = S(.5, .5-blur,d2);\n    float shadowMask = sat(s1-s2);\n    \n    col = mix(col, vec4(0,0,0,.5), S(.0, 1., shadowMask));\n    \n    col = mix(col, browCol, S(.2,.4, browMask));\n    \n    return col;\n}\n\nvec4 Eye(vec2 uv, float side, vec2 m, float smile) {\n    uv -= 0.5;\n    \n    uv.x *= side;\n    \n    float d= length(uv);\n    vec4 irisCol = vec4(.3,.5,1.,1.);\n    vec4 col = mix(vec4(1.0), irisCol, S(.1, .7, d)*.5);\n    col.a = S(.5,.48, d);\n    col.rgb *= 1. - S(.45, .5, d)*.5 * sat(uv.y-uv.x*side);\n    \n    m.y *= -1.;\n    d = length(uv - m*.3);\n    \n    col.rgb = mix(col.rgb, vec3(0.), S(.3, .28, d));\n    \n    irisCol.rgb *= 1. + S(.3,.05,d);\n    \n    float irisMask = S(.28, .25, d);\n    col.rgb = mix(col.rgb, irisCol.rgb, irisMask);\n    \n    d = length(uv - m*.4);\n    \n    float pupilSize = mix(.4, .16, smile);\n    float pupilMask = S(pupilSize, pupilSize*.9, d);\n    pupilMask *= irisMask;\n    \n    col.rgb = mix(col.rgb, vec3(0.), pupilMask);\n    vec2 offs = vec2(iTime*3. + uv.y * 25., iTime*3. + uv.x * 25.);\n    uv += sin(offs)*.01 * (1.-smile);\n    float highlight = S(.1, .09, length(uv - m*.5 - vec2(-.15, -.15))); // ?\n    highlight += S(.07, .05, length(uv- m*.5 - vec2(.08, .08))); // ?\n    \n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    \n    return col;\n} \nvec4 Mouth(vec2 uv, float smile) {\n    uv -= .5;\n    vec4 col = vec4(.5, .18, .05, 1.);\n    uv.y *=1.5;\n    \n    uv.y += uv.x*uv.x*2.*smile;\n    \n    uv.x *= mix(2., 1.,smile);\n    float d = length(uv);\n    \n    col.a = S(.5, .48, d);\n    \n    vec2 tUv = uv;\n    \n    tUv.y -= (abs(uv.x)*.5 + .1) * (1. - smile);\n    float td = length(tUv-vec2(0,-.6));\n    vec3 toothCol = vec3(1.)*S(.6,.35,d);\n    \n    col.rgb = mix(col.rgb, toothCol, S(.4, .37, td));\n    \n    td = length(uv - vec2(0, .6));\n    col.rgb = mix(col.rgb, vec3(1., .5, .5), S(.5, .2, td));\n    \n    return col;\n}\nvec4 Head(vec2 uv) {\n    vec4 col = vec4(.9, .65, .1, 1.);\n    \n    float d = length(uv);\n    \n    col.a = S(1., .96, d);\n    \n    float edgeShade = remap01(.7, 1., d);\n    \n    edgeShade = pow(edgeShade, 2.);\n    \n    col.rgb *= 1. - edgeShade * .5;\n    \n    col.rgb = mix(col.rgb, vec3(.6, .3, .1), S(.94, .96, d));\n    \n    float highlight = S(.82, .80, d);\n    \n    highlight *= remap(.82, -.1, .75, 0., uv.y);\n    \n    highlight *= S(.36, .37, length(uv - vec2(.41, .16)));\n    \n    col.rgb = mix(col.rgb, vec3(1.), highlight); \n    \n    d = length(uv - vec2(.5, -.4));\n    float cheek = S(.4, .01, d) * .4;\n    cheek *= S(.40, .28, d);\n    col.rgb = mix(col.rgb, vec3(1., .1,.1), cheek);\n    \n    \n    return col;\n}\n\nvec4 Smiley(vec2 uv, vec2 m, float smile) {\n    vec4 col = vec4(.0);\n    \n    float side = sign(uv.x);\n    uv.x = abs(uv.x);\n    \n    vec4 head = Head(uv);\n    \n    vec4 eye = Eye(within(uv, vec4(0.05, .5, .75, -.2)), side, m, smile);\n    \n    vec4 mouth = Mouth(within(uv, vec4(-.6, -.25, .6, -.8)), smile);\n    vec4 brow = Brow(within(uv, vec4(.1, .9, .8, .5)), smile);\n    \n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    col = mix(col, brow, brow.a);\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2. - 1.;\n    float aspect = iResolution.x/iResolution.y;\n    uv.x *= aspect;\n    \n    vec2 m = iMouse.xy/iResolution.xy * 2. - 1.;\n    \n    \n    float smile = cos(iTime)*.5 + .5;\n    \n    uv -= m*.25*(1. - dot(uv, uv));\n    \n    // Output to screen\n    fragColor = Smiley(uv, m, smile);\n}","name":"Image","description":"","type":"image"}]}