{"ver":"0.1","info":{"id":"l33GDr","date":"1716326896","viewed":55,"name":"meowth glitch","username":"jorge2017a2","description":"meowth glitch-incomplete --orejasIzq y orejasDer\n// el minino o gato esta incompleto, falta las orejas, y causa error , todo se descompone\n//The kitten or cat is incomplete, the ears are missing, and it causes an error, \n//everything breaks down\n","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","pokemon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n//meowth glitch\n// el minino o gato esta incompleto, falta las orejas, y causa error , todo se descompone\n//The kitten or cat is incomplete, the ears are missing, and it causes an error, \n//everything breaks down\n\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define S3(d,b) smoothstep(0.5*antialiasing(1.5),0.,d - (b) )\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\n\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,S2( distObj-0.05,0.0)); return colOut;}\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nvec3 DFS(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\n\n\n\nfloat sdTriangleIsosceles( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\n\nfloat cabeza(vec2 p, vec3 colout)\n{\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.62027,0.62162);\nmed=vec2(0.23243,0.17568);\nvec3 col1=vec3(0.98,0.93,0.75);\n\n d1=sdEllipse(p-A,med);\n    return d1;\n}\n\nfloat bigoteizq1(vec2 p)\n{    \nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.29459,0.56622);\nmed=vec2(0.1973,0.10811);\nd1=sdEllipse(p-A,med);\n\nA=vec2(0.29459,0.54541);\nmed=vec2(0.1973,0.10811);\nfloat ang=7.0 * PI / 180.0;\nvec2 pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdEllipse(pr,med);\n\nA=vec2(0.32297,0.65946);\nmed=vec2(0.13243,0.02432);\nfloat d3=sdEllipse(p-A,med);\n\n\ndfin=Sdf_D(d1,d2);\ndfin=Sdf_I(dfin,d3);\n\nreturn dfin;\n}\n\n\nfloat bigoteizq2(vec2 p)\n{vec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.38378,0.41892);\nmed=vec2(0.26216,0.16757);\n d1=sdEllipse(p-A,med);\n\nA=vec2(0.38838,0.37459);\nmed=vec2(0.26216,0.16757);\nfloat ang=10.0 * PI / 180.0;\nvec2 pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdEllipse(pr,med);\n\nA=vec2(0.29324,0.56216);\nmed=vec2(0.14054,0.02703);\n ang=-8.0 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d3=sdEllipse(pr,med);\n\ndfin=Sdf_D(d1,d2);\ndfin=Sdf_I(dfin,d3);\n\n    return dfin;\n}\n\n\nfloat bigoteder1(vec2 p)\n{\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.90,0.59865);\nmed=vec2(0.26757,0.10811);\nfloat ang=-5.0 * PI / 180.0;\nvec2 pr = Rotate(p-A, med/2.0, ang);\n d1=sdEllipse(pr,med);\n\nA=vec2(0.90,0.58243);\nmed=vec2(0.26757,0.1311);\nang=-12.0 * PI / 180.0;\npr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdEllipse(pr,med);\n\nA=vec2(0.905811,0.68649);\nmed=vec2(0.14865,0.03514);\nfloat d3=sdEllipse(p-A,med);\n    \ndfin=Sdf_D(d1,d2);\ndfin=Sdf_I(dfin,d3);\n    return dfin;\n}\n\n\nfloat bigoteder2(vec2 p)\n{\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.88514,0.50405);\nmed=vec2(0.24324,0.11351);\nfloat ang=5.0 * PI / 180.0;\nvec2 pr = Rotate(p-A, med/2.0, ang);\n d1=sdEllipse(pr,med);\n\nA=vec2(0.89054,0.49514);\nmed=vec2(0.24324,0.11351);\nfloat d2=sdEllipse(p-A,med);\n\nA=vec2(0.98784,0.59595);\nmed=vec2(0.16216,0.04865);\nfloat d3=sdEllipse(p-A,med);\n\n    \ndfin=Sdf_D(d1,d2);\ndfin=Sdf_I(dfin,d3);\n    return dfin;\n}\n\n\nfloat peloIzq(vec2 p)\n{\n\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.49595,0.83108);\nmed=vec2(0.06757,0.15676);\nfloat ang=-11. * PI / 180.0;\nvec2 pr = Rotate(p-A, med/2.0, ang);\n d1=sdEllipse(pr,med);\n//colout= DFB(vec3(0.0), colout, d1);\n\nA=vec2(0.48649,0.82162);\nmed=vec2(0.06757,0.15676);\n ang=-5.0 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdEllipse(pr,med);\n\nA=vec2(0.53919,0.84054);\nmed=vec2(0.0473,0.13649);\nfloat d3=sdEllipse(p-A,med);\n\ndfin=Sdf_D(d1,d2);\ndfin=Sdf_I(dfin,d3);\n\n\n    return dfin;\n}\n\n\nfloat peloDer(vec2 p)\n{\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.72297,0.84459);\nmed=vec2(0.04865,0.13243);\nfloat ang=10. * PI / 180.0;\nvec2 pr = Rotate(p-A, med/2.0, ang);\n d1=sdEllipse(pr,med);\n//colout= DFB(vec3(0.0), colout, d1);\n\nA=vec2(0.73108,0.84459);\nmed=vec2(0.03784,0.14324);\n ang=5. * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\n float d2=sdEllipse(pr,med);\n\nA=vec2(0.69595,0.84459);\nmed=vec2(0.03784,0.14324);\nfloat d3=sdEllipse(p-A,med);\n\ndfin=Sdf_D(d1,d2);\ndfin=Sdf_I(dfin,d3);\n\n\n    return dfin;\n}\n\n\nvec3 ojoIzq(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.50135,0.61757);\nmed=vec2(0.06622,0.1027);\n d1=sdEllipse(p-A,med);\n\nA=vec2(0.49865,0.68919);\nmed=vec2(0.07838,0.1027);\nfloat d2=sdEllipse(p-A,med);\n    \n    dfin=Sdf_I(d1,d2);\n    colout= DFB(vec3(1.0), colout,dfin);\n\n    return colout;\n}\n\n\nvec3 OjoDer(vec2 p,vec3 colout)\n{\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.74054,0.61486);\nmed=vec2(0.07027,0.1027);\n d1=sdEllipse(p-A,med);\n\nA=vec2(0.74054,0.68378);\nmed=vec2(0.07838,0.1027);\nfloat d2=sdEllipse(p-A,med);\n\n    dfin=Sdf_I(d1,d2);\n    colout= DFB(vec3(1.0), colout,dfin);\n\n    return colout;\n\n}\n\n\nvec3 PupilaIzq(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.52297,0.65135);\nmed=vec2(0.01081,0.04865);\nd1=sdEllipse(p-A,med);\ncolout= DFS(vec3(0.0), colout, d1);\n    return colout;\n    \n}\n\nvec3 PupilaDer(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.72162,0.6527);\nmed=vec2(0.01081,0.04865);\nd1=sdEllipse(p-A,med);\ncolout= DFS(vec3(0.0), colout, d1);\n\n    return colout;\n    \n}\n\n\nvec3 OrejaIzq(vec2 p, vec3 colout)\n{\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.53514,0.68838);\nmed=vec2(0.08108,0.23784);\nfloat ang=-30.0 * PI / 180.0;\nvec2 pr = Rotate(p-A, med/2.0, ang);\n d1=sdEllipse(pr,med);\n\n\nA=vec2(0.47297,0.68514);\nmed=vec2(0.08108,0.20676);\n ang=-12.0 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdEllipse(pr,med);\n\n\n\nA=vec2(0.62027,0.62162);\nmed=vec2(0.23243,0.17568);\nfloat dcabeza=sdEllipse(p-A,med);\n \n    \n    dfin=Sdf_U(d1,d2);\n    dfin=Sdf_D(dfin,dcabeza);\n    \n    colout=DFB(vec3(0.0),colout, dfin);\n    \n    return colout;\n}\n\n\nvec3 gesto(vec2 uv, vec3 col)\n{\nvec3 C1=vec3(0.0);\nfloat es=7.5;\nvec2 pc1p1=vec2(3.550,4.190)/es;\nvec2 pc1p2=vec2(3.390,4.140)/es;\nvec2 pc1p3=vec2(3.570,4.030)/es;\n\nvec2 pc2p1=vec2(5.740,4.170)/es;\nvec2 pc2p2=vec2(5.820,4.050)/es;\nvec2 pc2p3=vec2(5.720,3.990)/es;\n\nvec2 pc3p1=vec2(3.570,4.040)/es;\nvec2 pc3p2=vec2(4.600,4.080)/es;\nvec2 pc3p3=vec2(5.710,3.990)/es;\n\n\nfloat d1= sdBezier(uv,pc1p1,pc1p2,pc1p3);\nfloat d2= sdBezier(uv,pc2p1,pc2p2,pc2p3);\nfloat d3= sdBezier(uv,pc3p1,pc3p2,pc3p3);\n\n\ncol=DFB(C1,col,d1);\ncol=DFB(C1,col,d2);\ncol=DFB(C1,col,d3);\n\n    return col;\n}\n\nvec3 simbolo(vec2 p, vec3 colout)\n{\n    \nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.62432,0.79054);\nmed=vec2(0.04189,0.09189);\n d1=sdEllipse(p-A,med);\ncolout= DFB(vec3(0.8,0.5,0.01), colout, d1);\n\n    return colout;\n}\n\n\nvec3 gato(vec2 p, vec3 colout)\n{   vec3 ctmp=vec3(0.0);\n    float d0= cabeza(p,colout);\n    \n    float d1=bigoteizq1(p);\n    float d2=bigoteizq2( p);\n    float d3=bigoteder1(p);\n    float d4=bigoteder2(p);\n    float d5=peloIzq(p);\n    float d6=peloDer(p);\n    float dfin;\n    dfin=d0;\n    \n    dfin=Sdf_U(dfin,d1);\n    dfin=Sdf_U(dfin,d2);\n    dfin=Sdf_U(dfin,d3);\n    dfin=Sdf_U(dfin,d4);\n    dfin=Sdf_U(dfin,d5);\n    dfin=Sdf_U(dfin,d6);\n    \n    vec3 colc=vec3(0.98,0.93,0.75);\n    colout= DFB(colc, colout, dfin);\n    \n    colout=ojoIzq(p,colout);\n    colout=OjoDer(p,colout);\n    colout=PupilaIzq(p,colout);\n    colout=PupilaDer(p,colout); \n      \n    //colout=OrejaIzq(p,colout);  //error\n    colout=gesto(p,colout);\n    colout*=1.-simbolo(p,ctmp);  //error no original es directo--> colout=simbolo(p,ctmp);\n    \n    return colout;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    uv-=vec2(-1.2,-1.3);\n    float esc=0.5;\n    uv*=esc;\n    vec2 uv0=uv;\n    \n    ///vec3 col=vec3(1.0)-uv.y*0.5;  //error se altera codigo\n    vec3 col=vec3(1.0);\n   \n    col= gato(uv,col);\n    \n    //col=pow(col,  vec3(0.554545));\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//iq\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\n\nfloat sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}\n\n\n\n\n\n//Quadratic Bezier - exact   (https://www.shadertoy.com/view/MlKcDD)\n\nfloat sdBezier( in vec2 pos, in vec2 A, in vec2 B, in vec2 C )\n{    \n    vec2 a = B - A;\n    vec2 b = A - 2.0*B + C;\n    vec2 c = a * 2.0;\n    vec2 d = A - pos;\n    float kk = 1.0/dot(b,b);\n    float kx = kk * dot(a,b);\n    float ky = kk * (2.0*dot(a,a)+dot(d,b)) / 3.0;\n    float kz = kk * dot(d,a);      \n    float res = 0.0;\n    float p = ky - kx*kx;\n    float p3 = p*p*p;\n    float q = kx*(2.0*kx*kx-3.0*ky) + kz;\n    float h = q*q + 4.0*p3;\n    if( h >= 0.0) \n    { \n        h = sqrt(h);\n        vec2 x = (vec2(h,-h)-q)/2.0;\n        vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));\n        float t = clamp( uv.x+uv.y-kx, 0.0, 1.0 );\n        res = dot2(d + (c + b*t)*t);\n    }\n    else\n    {\n        float z = sqrt(-p);\n        float v = acos( q/(p*z*2.0) ) / 3.0;\n        float m = cos(v);\n        float n = sin(v)*1.732050808;\n        vec3  t = clamp(vec3(m+m,-n-m,n-m)*z-kx,0.0,1.0);\n        res = min( dot2(d+(c+b*t.x)*t.x),\n                   dot2(d+(c+b*t.y)*t.y) );\n        // the third root cannot be the closest\n        // res = min(res,dot2(d+(c+b*t.z)*t.z));\n    }\n    return sqrt( res );\n}\n","name":"Common","description":"","type":"common"}]}