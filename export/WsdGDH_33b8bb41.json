{"ver":"0.1","info":{"id":"WsdGDH","date":"1568492822","viewed":658,"name":"Water Dragon Scales","username":"mathmasterzach","description":"A Simple Effect: Water Dragon Scales\nA quick sketch of an idea I had","likes":15,"published":3,"flags":0,"usePreview":0,"tags":["water","effect","dragon","pseudo3d","short","scales"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Water Dragon Scales\n//classic rand function\n#define R(a) fract(sin(dot(a,vec2(12.9898,78.233)))*43758.5453)\nconst float S=sqrt(2.)/2.;\nvoid mainImage(out vec4 O,in vec2 U){\n    vec2 R=iResolution.xy,\n         p=(U+U-R)/R.y,\n         q=6.*p*mat2(S,S,-S,S),\n         r=fract(q)+vec2(R(U)-.5)/25.,\n    \t d=floor(q)/2.;\n    float h=R(d);\n    vec3 c=normalize(vec3(0.,h,1.));\n    float f=.2*float(r.x>r.y)+.8;\n    float wv=.5*sin(3.*iTime+d.x+d.y);\n    float sd=min(.5*h+3.7+wv-2.*max(r.x,r.y)-1.*(r.x+r.y),1.);\n    O=vec4(sd*f*(c-.2*wv),1.);\n}","name":"Image","description":"","type":"image"}]}