{"ver":"0.1","info":{"id":"wdsXR8","date":"1550622862","viewed":100,"name":"Gyro Cube","username":"cbrpnk","description":"Everyday","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarcher"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\n// Iq's exact box\nfloat box(vec3 p, vec3 b)\n{\n  vec3 d = abs(p) - b;\n  return length(max(d,0.0)) + min(max(d.x,max(d.y,d.z)),0.0);\n}\n\nfloat map(vec3 p)\n{\n    float res = length(p) - .4;\n        for(float i=1.; i<6.; ++i) {\n            p.xz *= rot(iTime*.5);\n            p.yz *= rot(iTime*.5);\n            res = min(res, max(box(p, vec3(i*.8)), -(length(p)-i)));\n        }\n    return res;\n}\n\nfloat march(vec3 ro, vec3 rd)\n{\n    float t = 0.;\n    for(int i=0; i<256; ++i) {\n        float d = map(ro+rd*t);\n        if(d < .001 || t > 100.) break;\n        t += d;\n    }\n    return t*.1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.-iResolution.xy) / iResolution.y;\n    //vec3 cam = vec3(0, -1.8, 2.3);\n    vec3 cam = vec3(0, 0., 8.);\n    vec3 dir = normalize(vec3(uv, -1));\n    //dir.yz *= rot(-.6);\n    int aa = 2;\n    \n    vec3 col = vec3(0.);\n    for(int i=-1; i<1; ++i) {\n        for(int j=-1; j<1; ++j) {\n            float d = march(cam+vec3(.01*float(i), .01*float(j), 0.), dir);\n            vec3 p = cam+dir*d;\n\n            vec2 a = abs(uv);\n            vec3 c = vec3(.2, .1, 1.);\n            if(d < 5.) {\n                c = vec3(1.-d*.5);\n                c.r = floor(d);\n                c.g = fract(d);\n            }\n            col += c;\n        }\n    }\n    col /= 2.;\n\n    // Output to screen\n \tcol *= 1.-length(uv)*.4;\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}