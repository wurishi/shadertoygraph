{"ver":"0.1","info":{"id":"ds3GRf","date":"1677605568","viewed":119,"name":"sound shader buffer test 2023-02","username":"ttg","description":"Sound shader are not allowed to read Buffers since this would not allow anything responsive anyway, as sound is pregenerated.\nIt could have been useful for e.g. one-time sample generation and playback from Sound shader, however.","likes":3,"published":1,"flags":40,"usePreview":0,"tags":["sound","hack"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nIn current Shadertoy version, there seems to be a few frames of Image+buffers\nexecuted before sound starts generating.\n\nThat means some data could be generated first for later reuse by sound shader.\nUnfortunately even if the buffer has generated and Sound shader has it set\nas input (using hacks), the Sound shader does not actually have the texture\nbound by Shadertoy.\n\n*/\n\nvoid mainImage( out vec4 fd, in vec2 fc )\n{\n  fd=texelFetch(iChannel0,ivec2(fc),0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fd, in vec2 fc )\n{\n  fd=texelFetch(iChannel0,ivec2(fc),0);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"\n/*  Buffer input set using:\n    gShaderToy.mEffect.mPasses[2].mInputs[0]=gShaderToy.mEffect.mPasses[0].mInputs[0];\n    (copies iChannel0 input setting from Image)\n*/\n\nvec2 mainSound( int samp, float time )\n{\n    vec4 n=texelFetch(iChannel0,ivec2(samp%256,samp/256),0);\n    // A 440 Hz wave that attenuates quickly overt time\n    return vec2( sin(6.2831*440.0*time)*n.x );\n}\n","name":"Sound","description":"","type":"sound"}]}