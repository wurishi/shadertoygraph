{"ver":"0.1","info":{"id":"Mc3fDM","date":"1733439581","viewed":30,"name":"Learning: Pulsating Circle","username":"TheCreator","description":"A shader which draws a pulsating colored circle at the current mouse click position.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","interactive","circle","animation","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float customSine(float base, float amplitude, float frequency)\n{\n    return 0.5 * amplitude * sin(iTime * 3.1415 * 2.0 * frequency) + amplitude / 2.0 + base;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Get distance between center point of circle and currently processed pixel\n    float dist = sqrt(pow(fragCoord.x - iMouse.x, 2.0) + pow(fragCoord.y - iMouse.y, 2.0));\n    \n    // Animate circle with a sine by decreasing/increasing radius over time\n    float circleRadius = customSine(128.0, 25.0, 0.75);\n    // Define a gradual falloff for the circle's opacity (not a linear falloff since that's lame)\n    float circleOpacity = 1.0 - clamp(pow(dist, 2.0) / pow(circleRadius, 2.0), 0.0, 1.0);\n    \n    vec3 circleColor = vec3(0.1, 0.1, 1.0);\n    vec3 backgroundColor = vec3(0.75, 0.25, 0.0);\n    // Simple lerp between color of the circle and the background\n    vec3 pixelColor = backgroundColor + circleOpacity * (circleColor - backgroundColor);\n    \n    // Done!\n    fragColor = vec4(pixelColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}