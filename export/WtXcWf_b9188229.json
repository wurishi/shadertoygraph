{"ver":"0.1","info":{"id":"WtXcWf","date":"1593205722","viewed":263,"name":"Pride Filter","username":"ChutneyPot","description":"A simple pride filter!\n\nEdit: Added original and philadelphia versions.\nEdit: Added trans flag.","likes":4,"published":1,"flags":2,"usePreview":0,"tags":["simple","webcam","pride"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Pride Filter, June 2020\n// by Tito Morab - ChutneyPot\n// https://www.shadertoy.com/view/WtXcWf\n//--------------------------------------------------------------------------\n#define RED vec3(1.0, 0.0, 0.094)\n#define ORANGE vec3(1.0, 0.647, 0.173)\n#define YELLOW vec3(1.0, 1.0, 0.255)\n#define GREEN vec3(0.0, 0.502, 0.094)\n#define BLUE vec3(0.0, 0.0, 0.976)\n#define VIOLET vec3(0.525, 0.0, 0.490)\n#define BLACK vec3(0.0, 0.0, 0.0)\n#define BROWN vec3(0.447, 0.318, 0.114)\n#define PINK vec3(0.961, 0.392, 0.710)\n#define TURQUOISE vec3(0.286, 0.757, 0.757)\n#define INDIGO vec3(0.278, 0.0, 0.592)\n#define WHITE vec3(1.0, 1.0, 1.0)\n#define TRANS_BLUE vec3(0.357, 0.812, 0.980)\n#define TRANS_PINK vec3(0.961, 0.667, 0.725)\n\n#define BLEND_AMOUNT 0.65\n#define GREYSCALE_WEIGHTS vec3(0.3, 0.59, 0.11)\n\nconst vec3 TRADITIONAL[] = vec3[](RED, ORANGE, YELLOW, GREEN, BLUE, VIOLET);\nconst vec3 ORIGINAL[] = vec3[](PINK, RED, ORANGE, YELLOW, GREEN, TURQUOISE, INDIGO, VIOLET);\nconst vec3 PHILADELPHIA[] = vec3[](BLACK, BROWN, RED, ORANGE, YELLOW, GREEN, BLUE, VIOLET);\nconst vec3 TRANS[] = vec3[](TRANS_BLUE, TRANS_PINK, WHITE, TRANS_PINK, TRANS_BLUE);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 FLAG[] = TRANS;\n    \n    float bandSize = 1.0 / float(FLAG.length());        \n    vec3 pride = WHITE;\n      \n \tfor(int i = 0; i < FLAG.length(); i++)\n    {\n    \tpride = mix(pride, FLAG[i], step(bandSize * float(i), 1.0 - uv.y));  \n    }\n    \n    vec3 feed = texture(iChannel0, uv).xyz;\n    float greyScale = dot(feed, GREYSCALE_WEIGHTS);\n    \n    vec3 col = mix(vec3(greyScale), pride, BLEND_AMOUNT);    \n    //col = pow(col, vec3(0.4545));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}