{"ver":"0.1","info":{"id":"MdKyzw","date":"1521504015","viewed":799,"name":"electric grid","username":"laserdog","description":"Testing an effect for an RTS game i'm working on. Borrowed some ideas from srtuss' digital brain.","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["game"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rand2(in vec2 p)\n{\n\treturn fract(vec2(sin(p.x * 591.32 + p.y * 154.077), cos(p.x * 391.32 + p.y * 49.077)));\n}\n\nfloat voronoi(in vec2 x)\n{\n\tvec2 p = floor(x);\n\tvec2 f = fract(x);\n\tfloat minDistance = 1.;\n    \n\tfor(int j = -1; j <= 1; j ++)\n\t{\n\t\tfor(int i = -1; i <= 1; i ++)\n\t\t{\n\t\t\tvec2 b = vec2(i, j);\n            vec2 rand = .5 + .5 * sin(iTime * 3. + 12. * rand2(p + b));\n\t\t\tvec2 r = vec2(b) - f + rand;\n\t\t\tminDistance = min(minDistance, length(r));\n\t\t}\n\t}\n\treturn minDistance;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        \n\tvec2 uv = fragCoord / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    float val = pow(voronoi(uv * 8.) * 1.25, 7.) * 2.;\n    float gridLineThickness = 2. / iResolution.y;\n    vec2 grid = step(mod(uv, .1), vec2(gridLineThickness));    \n\n    fragColor = vec4(0., val * (grid.x + grid.y), 0., 1.);\n    \n}","name":"Image","description":"","type":"image"}]}