{"ver":"0.1","info":{"id":"Mlt3Df","date":"1472207793","viewed":199,"name":"Simple flashlight","username":"KVADRO","description":"Simple implementation of flashlight effect with texture displacement.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["lightning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float flashlightRange = 0.4;\nconst float rotationSpeed = 0.4;\nconst vec2 rotationOrigin = vec2( 0.5, 0.5 );\n\nvec2 rotateVertex( in vec2 _vertex, in vec2 _origin, in float _angle )\n{\n    vec2 result;\n    \n    result.x = _origin.x + ( _vertex.x - _origin.x ) * cos( _angle ) - ( _vertex.y - _origin.y ) * sin( _angle );\n\tresult.y = _origin.y + ( _vertex.y - _origin.y ) * cos( _angle ) + ( _vertex.x - _origin.x ) * sin( _angle );\n    \n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    float vecLength = length( ( fragCoord / iResolution.yy ) - ( iMouse.xy / iResolution.yy ) );\n    \n    if( vecLength <= flashlightRange )\n    {    \n        vec2 normalizedFragCoord = fragCoord / iResolution.xy;\n        vec2 fragCoord = rotateVertex( normalizedFragCoord, rotationOrigin, rotationSpeed * iTime );\n        \n        fragCoord.x = fragCoord.x + sin( fragCoord.y * 60.0 + iTime * 2.0 ) / 30.0;\n    \tfragColor = texture( iChannel0, fragCoord ) * smoothstep( flashlightRange, 0.0, vecLength ); \n    }\n    else\n    {\n        fragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n    }\n}","name":"Image","description":"","type":"image"}]}