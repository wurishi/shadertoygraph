{"ver":"0.1","info":{"id":"Mdlfzj","date":"1497060392","viewed":105,"name":"Sketch_TriLattice5","username":"cexlearning","description":"TriLattice5ï¼Œcopy from https://github.com/keijiro/ShaderSketches","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["sketch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec2 uv2tri(vec2 uv)\n{\n    float sx = uv.x - uv.y / 2.0; // skewed x\n    float sxf = fract(sx);\n    float offs = step(fract(1.0 - uv.y), sxf);\n    return vec2(floor(sx) * 2.0 + sxf + offs, uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = (fragCoord.xy - iResolution.xy / 2.0) / iResolution.y * 8.0;\n    uv.y += iTime;\n\n    float t = iTime * 0.8;\n    float tc = floor(t);\n    float tp = smoothstep(0.0, 0.8, fract(t));\n\n    vec2 r1 = vec2(floor(uv.y), tc);\n    vec2 r2 = vec2(floor(uv.y), tc + 1.0);\n    float offs = mix(rand(r1), rand(r2), tp);\n\n    uv.x += offs * 8.0;\n\n    vec2 p = uv2tri(uv);\n    float ph = rand(floor(p)) * 6.3 + p.y * 0.2;\n    float c = abs(sin(ph + iTime));\n\n    fragColor = vec4(c, c, c, 1.0);\n}","name":"Image","description":"","type":"image"}]}