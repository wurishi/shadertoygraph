{"ver":"0.1","info":{"id":"lXtSDM","date":"1719162888","viewed":16,"name":"Flow Field Automata 2","username":"GarlicGraphix","description":"Change flow direction with mouse\n\nSpace Bar to reset","likes":0,"published":1,"flags":48,"usePreview":0,"tags":["pink","automata","flowfield"],"hasliked":0,"parentid":"433SRH","parentname":"Automata Flow Field"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9198,78.233)))*\n        43758.5453123);\n}\n\nfloat linearRand(vec2 co) {\n    return (random(co) + random(co + vec2(1.0, 0.0))) / 2.0;\n}\n\nconst float KEY_SP    = 32.5/256.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 m = iMouse.xy/iResolution.xy;\n    \n    float o = iTime*0.1;\n    uv.x += o;\n    m.x += o;\n    \n    vec2 p = 1.0/iResolution.xy;\n    \n    vec2 vr = vec2(0.0);\n    vec2 v = vec2(0.);\n    float tc = 10.;\n    vec2 t = floor(uv*tc);\n    vec4 debugC = vec4(0.);\n    float tw = 0.;\n    for (int i = -1; i < 2; i++) {\n            for (int j = -1; j < 2; j++) {\n                vec2 lt = t + vec2(i, j);\n                vec2 ltuv = lt/tc;\n                float w = clamp(tc*(1.0/tc - length(uv-ltuv)), 0.0, 1.0);\n                vec2 a = vec2(\n                    (random(lt)*2.-1.),\n                    (random(lt*10.0)*2.-1.)\n                );\n                a = normalize(a);\n                a = (a*w);\n                tw += w;\n                v += a;\n                debugC = vec4(v, 0.0, 1.0);\n            }\n        }\n    v /= tw;\n    v += normalize(vec2(m.x-o, m.y)*4.-2.)*2.;\n    v *= length(vec2(m.x-o, m.y)*4.-2.)/2.;\n    fragColor = vec4(v, 0., 1.);\n    //return;\n    v *= 10.;\n    \n    \n        bool xn = false;\n        bool yn = false;\n        if (v.x < 0.) {\n            xn = true;\n            v.x *= -1.;\n        }\n        if (v.y < 0.) {\n            yn = true;\n            v.y *= -1.;\n        }\n        float r = linearRand(uv+iTime);\n        vr.x = floor(r*v.x);\n        r = random(uv+iTime);\n        vr.y = floor(r*v.y);\n        \n        if (xn) {\n            vr.x *= -1.;\n        }\n        if (yn) {\n            vr.y *= -1.;\n        }\n    \n    vec3 b = vec3(0.0);\n    vec2 s = fract(vec2(uv.x - o, uv.y) - vr*p);\n    b += texture(iChannel0, s).rgb;\n    if (iFrame <= 10 || texture( iChannel2, vec2(KEY_SP, 0.5) ).x >= 0.5) {\n        b = vec3(0.0);\n         \n        \n    }\n    float ps = 0.006;\n    s = fract(s*4.0);\n    if (s.x > 0.5-ps && s.x < 0.5+ps && s.y > 0.5-ps && s.y < 0.5+ps) {\n        b = b + 0.5*vec3(t/tc,1.);\n    }\n    fragColor = vec4(b ,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}