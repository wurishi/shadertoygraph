{"ver":"0.1","info":{"id":"DddyzS","date":"1695586688","viewed":120,"name":"Pixel Pulse","username":"yotter","description":"Discovered this cool effect by accident, then added colors. If you set offset to 0, you can see that it's really just zooming out over thin concentric rings","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["beginnerpixelcolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Made from expirimenting while following the legendary kishimisu tutorial:\n// https://www.youtube.com/watch?v=f4s1h2YETNY\n\nfloat normSin(float x) {\n    return (sin(x) + 1.)/2.;\n}\n\nvec4 fadeColor(float i, float t) {\n    float rFactor = 1.;\n    float gFactor = 1.4;\n    float bFactor = 1.3;\n    return vec4(i*normSin(rFactor*t), i*normSin(gFactor*t), i*normSin(bFactor*t), 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float offSet = 10000.;\n    float speed = 0.2;\n    float density = 0.01;\n    \n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    float d = length(uv);\n    \n    float offsetTime = speed * (iTime) + offSet;\n    d = abs(sin(d*offsetTime));\n    d = density / d;\n    fragColor = fadeColor(d, offsetTime);\n}","name":"Image","description":"","type":"image"}]}