{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat cameraPinch = 1.0; // values between 0 - 2, this will modify (pinch) the view \n\tfloat cameraZPinch = 1.0; // \n\tfloat cameraZFactor = 1.0; // 0-1\n\tfloat zoomFactor = 1.0; // large values will create a kaleidoscopic effect!\n\t\t\n\tfloat texCoordUScale = 0.125;\n\tfloat texCoordVScale = 1.0;\n\t\n\tfloat texCoordUMoveSpeed = 0.20;\n\tfloat texCoordVMoveSpeed = -0.125;\n\t\n\tfloat cameraRotationSpeed = 0.5; // 0.0 to switch off rotation (look straight ahead)\n\t\n\tfloat tunnelPinch = 2.0; // 1.0 = round tunnel, change the value to modify the shape\n\t\n\tfloat spikeCount = 5.0;\n\tfloat spikeFactor = sin(iTime) * 0.1;\t// 0.0 to switch off spikes\n\t\n\tvec3 fogColor = vec3(0.0, 0.0, 0.0);\n\tfloat fogPower = 10.0;\n\t\n\tvec2 coord = 2.0 * ((fragCoord.xy / iResolution.xy) - vec2(0.5, 0.5));\n\t\n\tfloat aspectRatio = iResolution.x / iResolution.y;\n\n\tcoord.x *= aspectRatio;\n\tcoord *= zoomFactor;\n\t\n\tcoord = vec2(sign(coord.x) * pow(abs(coord.x), cameraPinch), sign(coord.y) * pow(abs(coord.y), cameraPinch));\n\t\n\t// camera angles\n\tfloat camAng = iTime * cameraRotationSpeed;\n\n\t// camera rotation vectors\n\tvec3 cx = vec3(cos(camAng), 0.0, -sin(camAng));\n\tvec3 cy = vec3(0.0, 1.0, 0.0);\n\tvec3 cz = vec3(sin(camAng), 0.0, cos(camAng));\n\t\n\tmat3 cameraRot = \n\t\tmat3(\n\t\t\tcx.x, cx.y, cx.z,\n\t\t\tcy.x, cy.y, cy.z,\n\t\t\tcz.x, cz.y, cz.z);\n\t\n\tvec3 cameraDir = normalize(vec3(sin(coord.x), sin(coord.y), cos(coord.x) * cos(coord.y)));\n\n\tcameraDir = cameraRot * cameraDir;\n\t\n\tfloat angle = atan(cameraDir.x, cameraDir.y);\n\tcameraDir.z *= 1.0 + sin(angle * spikeCount) * spikeFactor;\n\n\tcameraDir.z = cameraZFactor * sign(cameraDir.z) * pow(abs(cameraDir.z), cameraZPinch);\n\t\n\t\n\tvec3 cameraOrigin = vec3(0.0, 0.0, 0.0);\n\t\t\t\t\t\t  \n\tfloat l = sqrt(pow(cameraDir.x * cameraDir.x, tunnelPinch) + pow(cameraDir.y * cameraDir.y, tunnelPinch));\n\tfloat d = 1.0 / l;\n\t\n\tvec3 hitPos = cameraOrigin + cameraDir * d;\n\t\n\t\t\t\t\t\t  \n\tvec2 uv = vec2(hitPos.z, angle / 3.14159);\n\tuv.x = uv.x * texCoordUScale + iTime * texCoordUMoveSpeed;\n\tuv.y = uv.y * texCoordVScale + iTime * texCoordVMoveSpeed;\n\tvec3 color = texture(iChannel0, uv).rgb;\n\t\n\tfloat alpha = 1.0 - pow(min(1.0, abs(cameraDir.z)), fogPower);\n\t\n\tcolor = fogColor * (1.0 - alpha) + color * alpha;\n\t\n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sX3z7","date":"1365408560","viewed":857,"name":"Tunnel Effect","username":"reiska","description":"tpolm tunnel effect","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["tunnel"],"hasliked":0,"parentid":"","parentname":""}}