{"ver":"0.1","info":{"id":"tstSR8","date":"1571458048","viewed":146,"name":"Configurable Concentric Rings V2","username":"AnGremlin","description":"Parameters are all #defines in the \"common\" tab, go nuts.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["circles","rings","configurable"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    bool wide = iResolution.y >= iResolution.x;\n    \n    float xMid = 0.5;\n    float yMid = 0.5;\n    if(wide)\n    {\n        yMid = (iResolution.y/iResolution.x)/2.0;\n    }\n    else\n    {\n        xMid = (iResolution.x/iResolution.y)/2.0;\n    }\n    \n    //pixel coords where unit square around 0,0 fills middle of texture\n    vec2 xuv = fragCoord/iResolution.yy;\n    if(wide)\n    {\n        xuv = fragCoord/iResolution.xx;\n    }\n    \n    xuv = abs(vec2(xuv.x-xMid,xuv.y-yMid));\n    xuv = 2.0 * xuv;\n    \n    float frequency = floor(min(iResolution.x,iResolution.y) / WIDTH);\n    float radius = length(xuv);\n    radius = radius * pow(radius,-EXPAND);\n    float timeFactor = 0.0;\n    if (PERIOD > 0.0) timeFactor = (1.0-(iTime / (PERIOD*frequency)));\n    if(REVERSE) timeFactor = timeFactor * -1.0;\n    radius = radius + timeFactor;\n    radius = radius * frequency;\n    radius = radius-floor(radius);\n    radius = 2.0*abs(radius-0.5); \n    radius = pow(radius,1.0/HARD);\n    \n    vec3 col = mix(COL_0,COL_1,(radius * CONTRAST) + (1.0-CONTRAST));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define WIDTH 20.0 // width of bands in pixels\n#define PERIOD 1.0 // time per cycle in seconds (Zero for no animation)\n#define CONTRAST 1.0 // [0,1] intensity of effect\n#define HARD 1.5// [NONZERO!] hardness of lines (<1 essentially inverts the pattern)\n#define EXPAND 0.6 // [0,1] rate at which distance between lines increases with distance from center\n#define REVERSE false // boolean, reverse direction\n\n#define COL_0 vec3(0.0,0.0,0.0)\n#define COL_1 vec3(0.5,0.3,1.0)\n","name":"Common","description":"","type":"common"}]}