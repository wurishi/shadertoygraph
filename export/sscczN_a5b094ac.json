{"ver":"0.1","info":{"id":"sscczN","date":"1653070621","viewed":96,"name":"2d smoothstep shaps","username":"SONENEIS","description":"i never know what to say","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","triangle","line","circle","square","rectangle","smoothstep","ellipse","step","theta","shap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor,in vec2 fragCoord){\n  vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n  vec3 col = vec3(0.0);\n  \n  /* Examples */\n  col += circle(uv,abs(sin(time)/5.0),sin(time),vec2(cos(time),sin(time))*0.2);\n  col += ellipse(uv,sin(time),vec2(0.0),abs(vec2(cos(time),sin(time)))*0.4);\n  col += square(uv,0.45,sin(time),vec2(cos(time),sin(time))*0.2);\n  col += rectangle(uv,sin(time),vec2(0.0),abs(vec2(cos(time),sin(time)))*0.4);\n  col += line(uv,0.5,max(sin(time),0.9),vec2(-0.1) + vec2(cos(time),-sin(time))*0.3,vec2(+0.1) + vec2(sin(time),-cos(time-pi))*0.3);\n  col += /*set time to 0.0*/ shapeTheta(uv,0.2,sin(time*2.0),int(time*2.0),vec2(0.0));\n  col += triangle(uv,max(sin(time),0.9),vec2(+0.0,+0.3) * vec2(cos(time),-sin(time)),vec2(-0.3,-0.3) * vec2(sin(time),-cos(time)),vec2(+0.3,-0.3) * vec2(cos(time),-sin(time)));\n\n  col *= vec3(sin(time),cos(time),atan(time));\n  \n  fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define time iTime\n\n#define pi 3.14159265\n#define tau pi * 2.0\n\nfloat circle(vec2 uv,float rad,float blur,vec2 pos){\n\treturn smoothstep(rad,rad*(blur-0.01),length(uv-pos));\n}\nfloat ellipse(vec2 uv,float blur,vec2 pos,vec2 size){\n\treturn smoothstep(1.0,blur-0.01,length((uv/size)-pos));\n}\nfloat square(vec2 uv,float size,float blur,vec2 pos){\n\tfloat sq = 0.0;\n\tsq += smoothstep(size,size*(blur-0.01),length(uv.x-pos.x));\n\tsq *= smoothstep(size,size*(blur-0.01),length(uv.y-pos.y));\n  return sq;\n}\nfloat rectangle(vec2 uv,float blur,vec2 pos,vec2 size){\n\tfloat sq = 0.0;\n\tsq += smoothstep(size.x,size.x*(blur-0.01),length(uv.x-pos.x));\n\tsq *= smoothstep(size.y,size.y*(blur-0.01),length(uv.y-pos.y));\n  return sq;\n}\nfloat line(vec2 uv,float rad,float blur,vec2 p1,vec2 p2){\n  rad = 1.0-rad*0.025;\n  float d1 = distance(p1,p2);\n  float d2 = distance(p1,uv);\n  float segment = distance(mix(p1,p2,clamp(d2/d1,0.0,1.0)),uv);\n  return smoothstep(rad*blur,rad,1.0-segment);\n}\nfloat triangle(vec2 uv,float blur,vec2 v1,vec2 v2,vec2 v3){\n vec2 a1 = v2-v1, a2 = v3-v2, a3 = v1-v3;\n vec2 b1 = uv-v1, b2 = uv-v2, b3 = uv-v3;\n\n vec2 c0 = b1 - a1*clamp(dot(b1,a1)/dot(a1,a1),0.0,1.0);\n vec2 c1 = b2 - a2*clamp(dot(b2,a2)/dot(a2,a2),0.0,1.0);\n vec2 c2 = b3 - a3*clamp(dot(b3,a3)/dot(a3,a3),0.0,1.0);\n\n float s = sign(a1.x*a3.y - a1.y*a3.x);\n vec2 a = min(min(\n   vec2(dot(c0,c0),s*(b1.x*a1.y-b1.y*a1.x)),\n   vec2(dot(c1,c1),s*(b2.x*a2.y-b2.y*a2.x))),\n   vec2(dot(c2,c2),s*(b3.x*a3.y-b3.y*a3.x))\n );\n\n return smoothstep(1.0-blur+1e-3,0.0,-sqrt(a.x)*sign(a.y));\n}\nfloat shapeTheta(vec2 uv,float size,float blur,int num,vec2 pos){\n\tfloat angle = atan(uv.x,uv.y) + pi;\n\tfloat rad = tau / float(num);\n\tfloat tri = cos(floor(0.5 + angle/rad) * rad-angle) * length(uv);\n\treturn smoothstep(size,size*(blur-0.01),tri);\n}\n","name":"Common","description":"","type":"common"}]}