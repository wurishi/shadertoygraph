{"ver":"0.1","info":{"id":"Wdd3D4","date":"1568558393","viewed":97,"name":"carouselShade","username":"foran","description":"carouselShade","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["carouselshade"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define REP(p,r) (mod(p + r/2.,r) - r/2.)\n\nmat2 rot(float a)\n{\n  float ca = cos(a); float sa = sin(a);\n  return mat2(ca,-sa,sa,ca);\n}\n\nfloat idA(vec2 p, float n)\n{\n  return floor((atan(p.y, p.x)) * n / (2. * PI) );\n}\n\nvec2 modA(vec2 p, float n)\n{\n  float a = atan(p.y, p.x);\n  a = mod(a, (2. * PI) / n );\n  return vec2(cos(a), sin(a)) * length(p);\n}\n\nfloat map(vec3 p)\n{\n  float dist = 1000.;\n  float time = iTime + p.z * 2.;\n  p.z += iTime;\n  p.z = REP(p.z, 3.);\n  vec3 cp = p;\n  float a = atan(p.y, p.x);\n  a *= 5.;\n  vec3 dir = normalize(p);\n  p += (dir * sin(a) + cos(a) * vec3(0.,0.,1.)) * .75;\n  float tor = length(vec2(length(p.xy) - 4.,p.z)) - .545 * pow((sin(a + time) * .5 + .45), 2.);\n  dist = min(dist, tor);\n  p = cp;\n  tor = length(vec2(length(p.xy) - 4.,p.z)) - .05;\n  dist = min(dist, tor);\n  return dist;\n}\n\nvec3 lookAt(vec3 ro, vec3 rt, vec2 uv)\n{\n  vec3 fd = normalize(rt - ro);\n  vec3 ri = cross(vec3(0.,1.,0.), fd);\n  vec3 up = cross(fd, ri);\n  return normalize(vec3(fd + ri * uv.x + up * uv.y));\n}\n\nvec3 normal(vec3 p)\n{\n  vec3 n;\n  vec2 eps=vec2(.01,0.);\n  n.x=map(p)-map(p+eps.xyy);\n  n.y=map(p)-map(p+eps.yxy);\n  n.z=map(p)-map(p+eps.yyx);\n  return normalize(n);\n}\n\nvec3 shade(vec3 ro,vec3 rd,vec3 p,vec3 n)//  color\n{\n  vec3 ld=normalize(vec3(.1,1.,-.5));\n  vec3 col=vec3(0.);\n  col=vec3(1.)*max(0.,dot(n,ld))*.943;//                              яркость белого света .3\n  //col += mix(vec3(1.,.7,.1), vec3(.1,1.,.7), rd.x)*length(p-ro)*.05;//  цвет градиента по rd.x\n  col+=mix(vec3(0.0, 0.851, 1.0),vec3(0.7176, 0.0, 1.0),rd.x)*length(p-ro)*.05;//  цвет градиента по rd.x\n  col+=mix(vec3(.7882,.098,.1529),vec3(1.0, 1.0, 1.0),rd.y)*length(p-ro)*.05;//  цвет градиента по rd.y\n  return col;\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n  vec2 uv=vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n  uv-=.5;\n  uv/=vec2(iResolution.y/iResolution.x,1);\n   vec3 ro = vec3(0.,0.,-10.);\n  vec3 sub = vec3(0.,0.,0.);\n  vec3 rd = lookAt(ro, sub, uv);\n  vec3 cp = ro;\n  float st = 0.; float cd = 0.;\n  for(;st < 1.; st += 1. / 128.)\n  {\n    cd = map(cp);\n    if(cd < .01) break;\n    cp += rd * cd * .15;\n  }\n  vec3 n=normal(cp);\n  vec3 col=shade(ro,rd,cp,n);//  цвет градиента и свет\n  vec4 out_color=vec4(1.);\n  out_color = vec4(col,1.)*(1.-st);\n  fragColor=vec4(out_color);\n}","name":"Image","description":"","type":"image"}]}