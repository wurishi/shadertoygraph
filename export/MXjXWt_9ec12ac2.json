{"ver":"0.1","info":{"id":"MXjXWt","date":"1711248736","viewed":107,"name":"pwm͏ (STROBE WARNING)","username":"01000001","description":"Shader is slowed down for seizure safety. every pixel only displays red, green, or blue. No individual pixel can show more than one colour channel at a time, and the pixel can only be fully on or fully off. No discrete values. See shader for instructions\n","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["experiment","thing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Try setting this to a number like 50, and then taking a long exposure photo of the shader for the duration of one or more complete cycles.\n// Setting to 10, you may be able\n\nconst int d = 500;\n// Set this lower. 10 is decent. 50 is good for timelapse demo\n\n\nbool jitter = false;\n// STROBE WARNING - This greatly increases quality of the image if you enable it by flashing random frames.\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    int s = (int(U.x + U.y) + iFrame)%3;\n    vec2 r = iResolution.xy;\n    vec4 tex = texture(iChannel0, U/r);\n    \n    // 87 should be a prime number. Any prime works.\n    int t = d - (iFrame*(jitter?87:1))%d - 1;\n    int x = int(tex.x * float(d));\n    int y = int(tex.y * float(d));\n    int z = int(tex.z * float(d));\n    \n    \n    O = vec4(0);\n\n    switch(s){\n        case 0:\n            O.x = float(x>t);\n            break;\n        case 1:\n            O.y = float(y>t);\n            break;\n        case 2:\n            O.z = float(z>t);\n            break;\n    }\n}","name":"Image","description":"","type":"image"}]}