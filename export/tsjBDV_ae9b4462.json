{"ver":"0.1","info":{"id":"tsjBDV","date":"1590918980","viewed":213,"name":"black flower","username":"sukupaper","description":"First time experimenting multiple translations and rotation to space. I got this \"flowerish\" thing ahah (a kind of fractal maybe (?)).\nI finally kept that with these artefacts because of the aesthetic u.u","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","fractal","flower","abstract","blackhole"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define P 3.1415926535897932384\n\nfloat c(vec3 p, float s) { return length(p) - s; }\nfloat sq(vec3 p, float s, float r) { return length(max(abs(p) - s,0.)) - r; }\n\nmat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c,s,-s,c);\n}\n\nfloat anim1(float x, float s) {\n  x = mod(x,2.) - 1.5;\n  return smoothstep(s,-s,x) - smoothstep(s,-s,x+1.);\n}\n\nfloat t;\nfloat df(vec3 p) {\n    float cc = c(p,.65);\n    \n    p.xz *= rot(t*.05 + .5);\n    p.xy *= rot(-.5);\n    \n    vec3 p2 = p;\n    for(int i = 0; i < 8; i++) {\n        p2.xy *= rot(P*.211);\n        p2 = abs(p2) - .31 + .31*(.5+.5*cos(p2.x*3.));\n        p2.xz *= rot(P*(.5+.5*cos(p2.y*8.)));\n    }\n    float n = 5.;\n    float s1 = c(p,.1);\n    float s2 = sq(p2,.1,.001);\n    float d = mix(s1,s2,anim1(t*.1 + cos(p.y*4.) + 1.2,.15));\n    return max(d,cc);\n}\n\n#define MIN_DIST 1.5\n#define MAX_DIST 8.\n#define MAX_STEPS 500\n#define LIM .0001\nvec3 rm(vec3 c, vec3 r) {\n    vec3 color = vec3(.0);\n    vec3 p = c + r*MIN_DIST;\n    for(int i = 0; i < MAX_STEPS; i++) {\n        float d = df(p);\n        if(d < LIM) return color + float(i)*.015;\n        if(distance(c,p) > MAX_DIST) return color + float(i)*.01;\n        p += d*r;\n    }\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy/iResolution.xy - .5;\n    st.x *= iResolution.x/iResolution.y;\n    t = iTime;\n    \n    vec3 c = vec3(0.,0.,(-2.));\n    vec3 r = normalize(vec3(st,1.288));\n    \n    vec3 color = rm(c,r);\n    color = pow(color*2.1,vec3(1.8)) - pow(length(st)*1.5,3.);\n    color = clamp(color,.05,1.);\n    //color = .05 + smoothstep(.2,.3,color); // bicolour version\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}