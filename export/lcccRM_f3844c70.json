{"ver":"0.1","info":{"id":"lcccRM","date":"1730387717","viewed":60,"name":"Smiley1_devdrx","username":"devdrx","description":"random stuff","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n#define sat(x) clamp(x, 0., 1.)\n\n//smoothstep returns value between 0 and 1\n\nfloat remap01(float a, float b, float t){\n    return sat((t-a)/(b-a));\n}\nfloat remap(float a, float b, float c, float d, float t){\n    return sat((t-a)/(b-a)) * (d-c) + c;\n}\nvec2 within(vec2 uv, vec4 rect){\n    return (uv - rect.xy)/(rect.zw - rect.xy);\n}\nvec4 Eye(vec2 uv){\n    uv -= 0.5;\n    float d = length(uv);\n    vec4 col = vec4(1.);\n    vec4 irisCol = vec4(.3, .5, 1., 1.);\n    col = mix(col, irisCol, S(.1, .7, d)*.5); //eyecircle border shade\n    col.rgb *= 1. - S(.45, .5, d)*.5*sat(-uv.y-uv.x);  //internal depth(see the depth near nose and flatness away from it)\n    col.rgb = mix(col.rgb, vec3(0.), S(.3, .28, d)); //black circle behind iris\n    irisCol.rgb *= 1. + S(.3, .05, d); //iris gradient\n    col.rgb = mix(col.rgb, irisCol.rgb, S(.28, .25, d)); //iris\n    col.rgb = mix(col.rgb, vec3(0.), S(.16, .14, d)); //pupil\n    float highlight = S(.1, .09, length(uv - vec2(-.15,.15))); //bigger highlight\n    highlight += S(.07, .05, length(uv + vec2(-.08,.08))); //smaller highlight\n    col.rgb = mix(col.rgb, vec3(1), highlight); //highlight mix\n    col.a = S(.5, .48, d); //eyecircle\n    return col;\n}\nvec4 Mouth(vec2 uv){\n    uv -= .5;\n    uv.y *= 1.5; //scaling\n    uv.y -= uv.x*uv.x*2.; //mouth curvature\n    vec4 col = vec4(.5, .18, .05, 1.); //mouth color\n    float d = length(uv);\n    col.a = S(.5, .48, d);\n    float td = length(uv-vec2(0., .6)); //teeth circle\n    vec3 toothCol = vec3(1.)*S(.6, .35, d);\n    col.rgb = mix(col.rgb, toothCol, S(.4, .37, td)); //teeth shadow\n    td = length(uv + vec2(0., .5));\n    col.rgb = mix(col.rgb, vec3(1., .5, .5), S(.5, .2 , td)); //tongue\n    return col;\n}\nvec4 Head(vec2 uv){\n    vec4 col = vec4(.9, .65, .1, 1.);\n    float d = length(uv);\n    col.a = S(.5, .49, d);\n    float edgeShade = remap01(.35, .5, d);//shadow range\n    edgeShade *= edgeShade;\n    col.rgb *= 1. - edgeShade*.5;  //shadow on the edges (3d effect)\n    col.rgb = mix(col.rgb, vec3(.6, .3, .1), S(.47, .48, d)); //border\n    float highlight = S(.41, .405, d)*.75; //highlight in a circle of .41 radius \n    highlight *= remap(.41, -.1, .75, 0., uv.y); //from .41 to -1, the highlight should disappear\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    d = length(uv - vec2(.25, -.2)); //circle centered from .25, -.2\n    float cheek = S(.2, .01, d)*.4; //cheek alpha\n    cheek *= S(.17, .16, d); //alpha stepped, edge of cheek blush seen\n    col.rgb = mix(col.rgb, vec3(1., .1, .1), cheek);\n    \n    return col;\n}\nvec4 Smiley(vec2 uv){\n    vec4 col = vec4(0.);\n    uv.x = abs(uv.x);\n    vec4 head = Head(uv);\n    vec4 eye = Eye(within(uv, vec4(.03, -.1, .37, .25)));\n    vec4 mouth = Mouth(within(uv, vec4(-.3, -.4, .3, -.1)));\n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    fragColor = Smiley(uv);\n}","name":"Image","description":"","type":"image"}]}