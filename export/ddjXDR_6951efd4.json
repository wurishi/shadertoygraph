{"ver":"0.1","info":{"id":"ddjXDR","date":"1670173860","viewed":109,"name":"Mandelbrot set, i²=a, ∀a∈[-2;2] ","username":"iluha168","description":"Black and white render","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"-1","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 100\n#define i_sq (2.*sin(iTime))\n\nint mandelbrot(vec2 c){\n    vec2 z = c;\n    int i = 0;\n    while(length(z) <= 2. && i < MAX_ITER){\n        //z = z*z + c;\n        z = vec2(\n            z[0]*z[0]+i_sq*z[1]*z[1],\n            2.*z[0]*z[1]\n        ) + c;\n        i++;\n    }\n    return i;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates\n    //x [-2; 1]\n    //y [-1; 1]\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = uv.x*3. - 2.;\n    uv.y = uv.y*2. - 1.;\n    // Output to screen\n    float col = 1.-float(mandelbrot(uv))/float(MAX_ITER);\n    fragColor.rgb = vec3(col);\n}","name":"Image","description":"","type":"image"}]}