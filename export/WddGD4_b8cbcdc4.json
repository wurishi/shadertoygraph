{"ver":"0.1","info":{"id":"WddGD4","date":"1568559554","viewed":383,"name":"SpikyZoom","username":"dila","description":"Flying through a spiky tunnel","likes":21,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x) {\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat spike(vec3 p, float w) {\n    float len = 0.7;\n    vec3 q = p;\n    p.z = -(abs(p.z) - len);\n    float a = length(p.xy) - p.z * w;\n    return a;\n}\n\nfloat box(vec3 p) {\n    return max(max(abs(p.x) - 0.25, abs(p.y) - 0.5), abs(p.z) - 0.5);\n}\n\nfloat mapmat = 0.0;\n\nfloat map(vec3 p) {\n    mapmat = 0.0;\n    float d = 1000.0;\n    for (int j = -1; j <= 1; ++j) {\n        vec3 q = p;\n        float s = 1.0;\n        float nz = floor(q.z / s) - float(j) / s;\n        q.z = (fract(q.z / s) - 0.5) * s;\n        q.z += float(j) * s;\n        q.xy *= rot(3.141592 * 0.25 * nz);\n        q.xy = abs(q.xy) - 1.5;\n        for (int i = 0; i < 3; ++i) {\n            float b = box(q);\n            if (b < d) {\n                d = b;\n                mapmat = 0.0;\n            }\n            q.xy = abs(q.xy) - 0.25;\n            q.xy *= rot(3.141592 * 0.125);\n            q.yz *= rot(3.141592 * 0.125);\n        }\n        float g = -spike(q.yzx, 0.15);\n        if (g > d) {\n            d = g;\n            mapmat = 0.0;\n        }\n        float k = spike(q.yzx, 0.1);\n        if (k < d) {\n            d = k;\n            mapmat = 1.0;\n        }\n    }\n    return d;\n}\n\nvec3 normal(vec3 p) {\n\tvec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r) {\n  float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        t += map(o + r * t);\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.5));\n    vec3 o = vec3(0.0, 0.0, 0.0);\n    \n    r.xy *= rot(3.141592 * 0.125);\n    r.xz *= rot(sin(iTime * 0.25) * 0.1);\n    \n    o.z += iTime;\n    \n    float t = trace(o, r);\n    float mat = mapmat;\n    vec3 w = o + r * t;\n    vec3 sn = normal(w);\n    float fd = map(w + sn * 1.0);\n    float fade = map(w);\n    fade = 1.0 / (1.0 + fade * fade * 100.0);\n    \n    vec3 ldir = normalize(vec3(0.0, 0.0, sign(sn.z)));\n    vec3 ref = reflect(r, sn);\n    float spec = max(dot(ldir, -ref), 0.0);\n    spec = pow(spec, 2.0);\n    float eye = max(dot(r, -sn), 0.0);\n    \n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    \n    vec3 col1 = vec3(0.25, 0.75, 1.0);\n    vec3 col2 = vec3(1.0, 0.25, 0.1);\n    vec3 col = mix(col1, col2, mat);\n    \n    vec3 fc = col;\n    fc += col1 * vec3(2.0) * abs(sn.z);\n    fc = (fc + spec * col + eye * col + col2 * (1.0 - spec)) * fd * fade * fog;\n\n    fragColor = vec4(fc, 1.0);\n}","name":"Image","description":"","type":"image"}]}