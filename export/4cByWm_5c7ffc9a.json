{"ver":"0.1","info":{"id":"4cByWm","date":"1722385595","viewed":38,"name":"Game of Life (traditional)","username":"Rainforest","description":"reference: https://www.shadertoy.com/view/XstGRf","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["gameoflife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float border = 1.0 / 6.0;\n    vec2 cellPos = fract(fragCoord.xy / 6.0);\n    if (cellPos.x < border || cellPos.x > 1.0 - border || cellPos.y < border || cellPos.y > 1.0 - border) {\n        fragColor = vec4(vec3(0.2), 1.0);\n    }\n    else {\n    fragColor = vec4(0.0, texelFetch(iChannel0, ivec2(fragCoord), 0).x, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float getCell(in ivec2 uv)\n{\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    uv = (uv + r) % r;\n    return (texelFetch(iChannel0, uv, 0).x > 0.5 ) ? 1.0 : 0.0;\n}\n\nfloat random(vec2 uv) {\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat initializeCell(float i, vec2 coord) {\n    vec2 uv = floor(coord / 6.0) * 6.0;\n    return step(fract(sin(i + 1.0) * 138.5453123), random(uv / iResolution.xy));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 uv = ivec2(fragCoord);\n\n    ivec2 offsets[8] = ivec2[](\n        ivec2(-6, -6), ivec2(  0, -6), ivec2( 6, -6),\n        ivec2(-6,  0),                 ivec2( 6,  0),\n        ivec2(-6,  6), ivec2(  0,  6), ivec2( 6,  6)\n    );\n\n    float aliveNeighbors = 0.0;\n    for (int i = 0; i < 8; i++) {\n        ivec2 neighborCoord = uv + offsets[i];\n        aliveNeighbors += getCell(neighborCoord);\n    }\n    \n    float newState = getCell(uv);\n    if (iFrame % 30 == 0) {\n        newState = 0.0;\n        if (getCell(uv) == 1.0) {\n            if (aliveNeighbors == 2.0 || aliveNeighbors == 3.0) {\n                newState = 1.0;\n            }\n        } else {\n            if (aliveNeighbors == 3.0) {\n                newState = 1.0;\n            }\n        }\n        if (iFrame % 1800 == 0) {\n        newState = initializeCell(float(iFrame), fragCoord.xy);\n        }\n    }\n    \n    fragColor = vec4(newState, 0.0, 0.0, 0.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}