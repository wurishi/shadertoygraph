{"ver":"0.1","info":{"id":"Mly3zV","date":"1475522286","viewed":209,"name":"RaySphere","username":"framk","description":"Very simple test to see how easy/hard it is to write a basic ray tracer","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","test","sphere","demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// First real actual ray tracing lesson\n// Need to learn how all this shit actually works\n// Used Iniqo Quilez's wonderful writings on the subject.\n// all the math can be found at\n// https://iquilezles.org/articles/distfunctions\n\n\n#define PI 3.14159265358979323846\n\nvec3 cameraPos = vec3(0.0, 1.0, 3.0);\n\n\nvec4 sph1 = vec4(0.0, 1.0, 0.0, 1.0);\t\t// sphere position\nvec4 sph2 = vec4(0.0, 1.0, 0.0, 1.0);\t\t// sphere2 position\n\n\n// Intersection calculation for the sphere\nfloat iSphere( in vec3 ro, in vec3 rd, in vec4 sph )\n{\n    vec3 oc = ro - sph.xyz;\n\tfloat r = 1.0;\n    float b = 2.0 * dot(oc, rd);\n    float c = dot(oc, oc) - sph.w * sph.w;\n    float h = b * b - 4.0 * c;\n    float t = mix((-b - sqrt(h)) / 2.0, -1.0, float(h < 0.0));\n    return t;\n}\n\n// Normal Calculation for the sphere\nvec3 nSphere( in vec3 pos, in vec4 sph )\n{\n\treturn normalize( pos - sph.xyz );\n}\n\n// Intersect Calculation for the plane\nfloat iPlane(in vec3 ro, in vec3 rd)\n{\n\treturn -ro.y / rd.y;\n}\n\n// Normal calculation for the plane\nvec3 nPlane( in vec3 pos )\n{\n\treturn normalize(pos - vec3(0.0, 1.0, 0.0));\n}\n\nfloat intersect( in vec3 ro, in vec3 rd, out float resT )\n{\n    resT = 1000.0;                // width of the plane\n    float t = -1.0;\n    float tmin = 1.0;\n    float tsph = iSphere( ro, rd, sph1 );    // intersect with sphere 1\t\t\n    float tpla = iPlane( ro, rd );            // intersect with plane 1\n\n    //conditional unrolling\n    t = float(tsph > 0.0);\n    resT = mix(1000.0, tsph, t);\n    \n    float test = float(tpla > 0.0 && tpla < resT);\n    t = mix(t, 2.0, test);\n    resT = mix(resT, tpla, test);\n\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    sph1.x = cos(iTime);\n    sph1.z = sin(iTime);\n    \n    vec3 light = normalize( vec3(0.5)); \t\t\t\t\t\t\t\t\t\t// Light position\n\tvec2 uv = fragCoord.xy / iResolution.xy;\t\t\t\t\t\t\t\t\t// Screen position\n    //color channel uvs\n    \n    //generate a ray with origin ro and direction rd\n    vec3 ro = cameraPos;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ray origin\n    vec3 rd = normalize( vec3( (-1.0 + 2.0 * uv) * vec2(1.78, 1.0), -1.0));\t\t// ray direction\n    //intersect the ray with the 3d scene\n\tfloat t;\n    float id = intersect(ro, rd, t);\n    \n    //Default color\n    vec3 col = vec3(0.6);\n    //Sphere collision\n    if(id > 0.0 && id < 1.5)\n    {\n        vec3 pos = ro + t * rd;\t\t\t\t\t\t\t\t// ray position\n    \tvec3 nor = nSphere( pos, sph1 );\t\t\t\t\t// ray normal\n        float dif = clamp(dot( nor, light ), 0.0, 1.0);\t\t// difference calculation\n        float ao = 0.5 + 0.5 * nor.y;\t\t\t\t\t\t// ambient occlusion\n        vec3 baseCol = vec3(0.9, 0.8, 0.7);\n        col = baseCol * dif * ao + vec3(0.1, 0.2, 0.4) * ao;\n    }\n    //collision with the ground\n    else if( id > 1.5 )\n    {\n        vec3 pos = ro + t * rd;\t\t\t\t\t\t\t\t\t\t// ray position\n        vec3 nor = nPlane( pos );\t\t\t\t\t\t\t\t\t// ray normal \n        float dif = clamp( dot(nor, light), 0.0, 1.0);\t\t\t\t// difference calc\n        float amb = smoothstep(0.0, 1.5 * sph1.w, length(pos.xz - sph1.xz));\n    \tcol = vec3(amb * 0.6);\n    }\n    \n    col = sqrt(col); //softens the color transitions\n\t\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}