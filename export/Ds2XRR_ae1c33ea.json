{"ver":"0.1","info":{"id":"Ds2XRR","date":"1669829950","viewed":785,"name":"Bokehs and Chromatic Aberration","username":"Poisson","description":"Bokeh blur and chromatic aberration. Mouse x to change the aperture, and mouse y to change the focus","likes":38,"published":1,"flags":32,"usePreview":1,"tags":["2d","blur","texture","dof","bokeh","defocus","focus","ca"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// bokeh blur function\n// b is the blur value\nvec4 bokeh(sampler2D sam, vec2 p, float b) {    \n    vec4 col = vec4(0);\n    const int N = 7; // quality\n    \n    for (int i=-N; i<=N; i++)\n    for (int j=-N; j<=N; j++) {\n        vec2 off = vec2(i,j) / float(N); // offset\n\n        if (dot(off, off)<1.) { // inside disk\n            // blurred image\n            col += texture(iChannel0, p + b*off*vec2(9./16.,1));\n        }\n    }\n    return col/col.a;\n}\n\n// more realistic color range\nvec3 ACES(vec3 x) {\n    float a = 2.51;\n    float b =  .03;\n    float c = 2.43;\n    float d =  .59;\n    float e =  .14;\n    return (x*(a*x+b))/(x*(c*x+d)+e);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coordinates\n    vec2 p = fragCoord/iResolution.xy;\n    \n    vec2 off = (p-.5)*.01; // CA offset\n    \n    // blur value\n    float b = (1.-iMouse.x/iResolution.x)*.05*abs(p.y-iMouse.y/iResolution.y);\n    \n    vec3 col = vec3(bokeh(iChannel0, p+off, b).r,\n                    bokeh(iChannel0, p, b).g,\n                    bokeh(iChannel0, p-off, b).b);\n    \n    col = pow(col,vec3(.4545)); // gamma correction\n    col = ACES(col);\n                \n    // vignette\n    col *= .5+.5*clamp(pow(100. *p.x*p.y*(1.-p.x)*(1.-p.y),.1), 0., 1.);\n                \n    // output\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coordinates\n    vec2 p = fragCoord.xy/iResolution.xy;\n    \n    vec3 col = 8.*pow(texture(iChannel0, p),vec4(5)).rgb;\n       \n    // output\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}