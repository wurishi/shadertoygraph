{"ver":"0.1","info":{"id":"wtXyz2","date":"1592499836","viewed":67,"name":"OldSchool something like intro:)","username":"Martynas101","description":"Le-learning graphics programming. I am astonished what u can make now in a couple of hours !","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["oldschool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n\nvec4 drawSphere( vec3 pos, float radius )\n{\n    vec4 color = vec4(0.0, 0.0, 0.0, 1.0);\n    float dist = sdSphere(pos, radius);\n    if (dist < 0.0)\n    {\n\t\tcolor = vec4(0.3, 0.2, 1.0, 1.0);\n    }\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 1.0 - fragCoord/iResolution.xy*2.0;\n    vec2 uvCopy = uv;\n    uv.x += sin(iTime+uv.y*3.0)/5.0;\n    \n    float aspect = iResolution.x / iResolution.y;\n    \n\tint u = int(uv.x * aspect * 4.0*sin(iTime/5.0)*5.0);\n    int v = int(uv.y * 4.0*sin(iTime/5.0)*5.0);\n        \n    vec4 color = vec4(0,0,0,1);\n\tif ( u%2 == 0 && v%2 == 0 )\n    {\n\t    color = vec4(abs(sin(iTime+uvCopy.y)),abs(cos(iTime+uvCopy.x)),0,1);\n    }\n    else\n    {\n        color = vec4(abs(cos(iTime+uvCopy.y)),abs(sin(iTime+uvCopy.x)),0,1);\n    }\n    \n    vec2 sphereUV = uvCopy;\n    float sphereCount = 10.0;\n    float dist = 6.28 / sphereCount;\n    float speed = 0.3;\n    for (int n = 1; n < int(sphereCount+1.0); n++ )\n    {\n\t    float posX = cos(iTime*6.28*speed+dist*float(n)) * 0.5;\n    \tfloat posY = sin(iTime*6.28*speed+dist*float(n)) * 0.5;\n        \n\t    sphereUV.x = uvCopy.x + posX;\n    \tsphereUV.y = uvCopy.y + posY;\n    \n    \tvec4 col = drawSphere( vec3(sphereUV.x*aspect, sphereUV.y, -1.0), 1.03 );\n    \n    \tcolor += col;\n    }\n    \n\n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}