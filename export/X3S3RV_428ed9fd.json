{"ver":"0.1","info":{"id":"X3S3RV","date":"1708613419","viewed":42,"name":"Hello Buffers","username":"DasBooter","description":"Had a hard time wrapping my head around buffers, so I wrote this which is a quite minimal example of how to use buffers to read the previous frame and maintain state. \n\nClick to move the circle","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["buffer","persistentstate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//This method takes aspect ratio into account making the stroke circular\nvec2 scaleByResolution(vec2 toScale) {\n    return toScale / min(iResolution.y, iResolution.x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //set the color of the current pixel to the color in the previous frame ; and dim\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy) * 0.97;\n    \n\n    \n    //get the distance from mouse to pixel, color red if close enough, color yellow if it was already red\n    vec2 uv = scaleByResolution(fragCoord);\n    vec2 m = scaleByResolution(iMouse.xy); \n    if(abs(length(uv - m)) <.1) {\n        //add red to the pixel, if it was already red, and green to make it yellow\n        fragColor += vec4(1.,fragColor.r,0.0,1.0);\n        //clamp the red and green \n        //removing these lines will make the circles last relative to the time the mouse stay on an area\n        fragColor.r = clamp(fragColor.r,0.,1.);\n        fragColor.g = clamp(fragColor.g,0.,1.);\n\n    }\n    \n}\n","name":"Buffer A","description":"","type":"buffer"}]}