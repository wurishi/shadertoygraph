{"ver":"0.1","info":{"id":"lsdGWn","date":"1449087132","viewed":272,"name":"shader txt","username":"gigatron","description":"test from glslsandbox","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["testshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float dfSemiArc(float rma, float rmi, vec2 uv)\n{\n\treturn max(abs(length(uv) - rma) - rmi, uv.x-0.0);\n}\n\nfloat dfQuad(vec2 p0, vec2 p1, vec2 p2, vec2 p3, vec2 uv)\n{\n\tvec2 s0n = normalize((p1 - p0).yx * vec2(-1,1));\n\tvec2 s1n = normalize((p2 - p1).yx * vec2(-1,1));\n\tvec2 s2n = normalize((p3 - p2).yx * vec2(-1,1));\n\tvec2 s3n = normalize((p0 - p3).yx * vec2(-1,1));\n\t\n\treturn max(max(dot(uv-p0,s0n),dot(uv-p1,s1n)), max(dot(uv-p2,s2n),dot(uv-p3,s3n)));\n}\n\nfloat dfRect(vec2 size, vec2 uv)\n{\n\treturn max(max(-uv.x,uv.x - size.x),max(-uv.y,uv.y - size.t));\n}\n\n//--- Letters ---\nvoid G(inout float df, vec2 uv)\n{\n\t\n\tdf = min(df, dfSemiArc(0.5, 0.125, uv));\n\tdf = min(df, dfQuad(vec2(0.000, 0.375), vec2(0.000, 0.625), vec2(0.250, 0.625), vec2(0.125, 0.375), uv));\n\tdf = min(df, dfRect(vec2(0.250, 0.50), uv - vec2(0.0,-0.625)));\n\tdf = min(df, dfQuad(vec2(-0.250,-0.125), vec2(-0.125,0.125), vec2(0.250,0.125), vec2(0.250,-0.125), uv));\t\n}\n\nvoid L(inout float df, vec2 uv)\n{\n\tdf = min(df, dfRect(vec2(0.250, 1.25), uv - vec2(-0.625,-0.625)));\n\tdf = min(df, dfQuad(vec2(-0.375,-0.625), vec2(-0.375,-0.375), vec2(0.250,-0.375), vec2(0.125,-0.625), uv));\t\n}\n\nvoid S(inout float df, vec2 uv)\n{\n\tdf = min(df, dfSemiArc(0.25, 0.125, uv - vec2(-0.250,0.250)));\n\tdf = min(df, dfSemiArc(0.25, 0.125, (uv - vec2(-0.125,-0.25)) * vec2(-1)));\n\tdf = min(df, dfRect(vec2(0.125, 0.250), uv - vec2(-0.250,-0.125)));\n\tdf = min(df, dfQuad(vec2(-0.625,-0.625), vec2(-0.500,-0.375), vec2(-0.125,-0.375), vec2(-0.125,-0.625), uv));\t\n\tdf = min(df, dfQuad(vec2(-0.250,0.375), vec2(-0.250,0.625), vec2(0.250,0.625), vec2(0.125,0.375), uv));\n}\n//---------------\n\n//--- From e#26829.0 ---\nfloat linstep(float x0, float x1, float xn)\n{\n\treturn (xn - x0) / (x1 - x0);\n}\n\n\nvec3 retrograd(float x0, float x1, vec2 uv)\n{\n\tfloat mid = -0.2;// + sin(uv.x*24.0)*0.01;\n\n\tvec3 grad1 = mix(vec3(0.60, 0.90, 1.00), vec3(0.05, 0.05, 0.40), linstep(mid, x1, uv.y));\n\tvec3 grad2 = mix(vec3(1.90, 1.30, 1.00), vec3(0.10, 0.10, 0.00), linstep(x0, mid, uv.y));\n\n\treturn mix(grad2, grad1, smoothstep(mid, mid + 0.008, uv.y));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.*fragCoord.xy / iResolution.xy;\n    vec2 aspect = iResolution.xy/iResolution.y;\n   \n\t\n\tuv = (uv - aspect/2.0)*4.0;\n\n\tfloat dist = 1e6;\n\t\n\tfloat charSpace = 1.125;\n\t\n\tvec2 chuv = uv;\n\tchuv.x += charSpace * 1.5;\n\t\t\n\tG(dist, chuv); chuv.x -= charSpace;\n\tL(dist, chuv); chuv.x -= charSpace;\n\tS(dist, chuv); chuv.x -= charSpace;\n\tL(dist, chuv); chuv.x -= charSpace;\n\t\n\tfloat mask = smoothstep(4.0/iResolution.y,0.00,dist);\n\t\n\tvec3 textcol = retrograd(-0.75,0.50,uv + vec2(0.0,-pow(max(0.0,-dist*0.1),0.5)*0.2));\n\t\n\tvec3 backcol = mix(vec3(0,0,1),vec3(1,0,1),(uv.y/4.0)+0.5) * smoothstep(0.02,0.025,dist);\n\t\n\tvec2 gdef = vec2(uv.x / abs(uv.y),1.0 / (uv.y));\n\tgdef.y = clamp(gdef.y,-1e2,1e2);\n\t\n\tvec2 gpos = vec2(0.0,-iTime);\n\t\n\tgdef += gpos;\n\t\n\tvec2 grep = mod(gdef, vec2(1.0));\n\t\n\tfloat grid = max(abs(grep.x - 0.5),abs(grep.y - 0.5));\n\t\n\tfloat gs = length(gdef-gpos)*0.01;\n\t\n\tbackcol *= mix(smoothstep(0.46-gs,0.48+gs,grid), 1.0, step(0.0,uv.y));\n\t\n\tvec3 color = mix(backcol,textcol,mask);\n       \n    \n    \n    \n\tfragColor = vec4( vec3( color ), 1.0 );\n}","name":"","description":"","type":"image"}]}