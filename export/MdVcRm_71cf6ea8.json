{"ver":"0.1","info":{"id":"MdVcRm","date":"1528795366","viewed":67,"name":"84","username":"GuntherRox","description":"84, practice","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["84"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//For Shapes\n\n#define RADIUS 0.02\n\nbool circle (vec2 uv, vec2 p, float radius)\n{\n    \tfloat dist = sqrt((uv.x - p.x) * (uv.x -p.x) + (uv.y - p.y) * (uv.y - p.y)); \n    \tif (dist < radius) \n            return true;\n    \telse return false; \n    }\n    \nfloat dist_to_line(vec2 p1, vec2 p2, vec2 uv)\n{\n\tfloat a = abs(distance(p1, uv));\n\tfloat b = abs(distance(p2, uv));\n\tfloat c = abs(distance(p1, p2));\n\n\tfloat d = abs(sqrt(c*c + RADIUS*RADIUS));\n    \n\tif (a >= d || b >= d)\t{\n        float dist1 = distance(p1, uv);\n        float dist2 = distance(p2, uv);\n        return min(dist1,dist2);\n\t}\n\n\tfloat p = (a + b + c) * 0.5;\n\n\tfloat h = 2.0 / c * sqrt( p * ( p - a) * ( p - b) * ( p - c));\n    return h;\n}\n\nfloat falloff(float dist)\n{\n    if (dist*1.5 > RADIUS) {\n        return 0.0;\n    } else {\n        return 1.;\n    }\n}   \n    \n\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n  float sinTime = sin(iTime);\n  sinTime += 1.0;\n  sinTime *= 0.5;\n  \n  fragColor = vec4(0.0,0.0,0.0,0.0);\n\n\n\n //Gradient that changes\n\n//Location of The Letter C\n    \n  vec2 uv = fragCoord.xy / iResolution.xy;\n    \n  uv -= (.18,.18);\t\t\t\t//-0.5 < > 0.5\n  uv.x *= iResolution.x/iResolution.y; \n   \n  vec2 center = vec2(0.0, 0.0);\n    \n//NUMBER FOURRRRR  \n    \n    //4 Line\n    \n    vec2 p1 = vec2(.7,.30 + sin(iTime)) * 0.4;\n    vec2 p2 = vec2(.9,.60);\n    float dist1 = dist_to_line(p1, p2, uv);        \n\tfloat i1 = falloff(dist1);\n    \n    //fragColor = vec4(i1,0,1,1); \n\t\n    vec2 p3 = vec2(.9,.12);\n    vec2 p4 = vec2(.9,.60);\n    float dist2 = dist_to_line(p3, p4, uv);        \n\tfloat i2 = falloff(dist2);\n    \n    vec2 p5 = vec2(.9,.3);\n    vec2 p6 = vec2(.7,.3);\n    float dist3 = dist_to_line(p5, p6, uv);        \n\tfloat i3 = falloff(dist3);\n\t\n    fragColor = vec4(i1+ i2+ i3 + sinTime,sinTime,.5,sinTime);\n\n\n //Cloud Location\n     vec2 Cloud = vec2 (0.09, 0.30);\n // Cloud Size\n\tfloat Cloud1  = 0.6 * (1.0);\n // Cloud Color Design\n    bool isInCloud = circle (uv, Cloud, Cloud1);\n    if (isInCloud) fragColor = vec4 (sinTime,sinTime,0.85,sinTime);\n\n  //Number 8 top\n     vec2 Letter8 = vec2 (0.32, 0.52);\n // Number 8 Size\n\tfloat Letter81  = 0.18 * (1.0 - sin(iTime)) * 0.6;\n //Number 8 Color Design\n    bool isInLetter8 = circle (uv, Letter8, Letter81);\n    if (isInLetter8) fragColor = vec4 (0.9,0.3,0.5,0.0);    \n    \n  //Number 8 Cover Up\n     vec2 Letter8C = vec2 (0.32, 0.52);\n // Number 8 Size\n\tfloat Letter81C  = 0.12 * (1.0 - sin(iTime)) * 0.6;\n //Number 8 Color Design\n    bool isInLetter8C = circle (uv, Letter8C, Letter81C);\n    if (isInLetter8C) fragColor = vec4 (sinTime,sinTime,0.85,sinTime);\n ////BOTTOM OF NUMBER 8 //////\n    \n   //Number 8 Bottom\n     vec2 Number8 = vec2 (0.32, 0.15);\n // Number 8 Size\n\tfloat Number81  = 0.18 * (1.0 - sin(iTime)) * 0.6;\n //Number 8 Color Design\n    bool isInNumber8 = circle (uv, Number8, Number81);\n    if (isInNumber8) fragColor = vec4 (0.9,0.3,0.5,0.0);    \n    \n  //Number 8 Cover Up\n     vec2 Number8C = vec2 (0.32, 0.15);\n // Number 8 Size\n\tfloat Number81C  = 0.12 * (1.0 - sin(iTime)) * 0.6;\n //Number 8 Color Design\n   bool isInNumber8C = circle (uv, Number8C, Number81C);\n   if (isInNumber8C) fragColor = vec4 (sinTime,sinTime,0.85,sinTime);\n \n    }\n    ","name":"Image","description":"","type":"image"}]}