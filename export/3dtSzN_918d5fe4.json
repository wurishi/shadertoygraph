{"ver":"0.1","info":{"id":"3dtSzN","date":"1571591594","viewed":203,"name":"Kaleidoscopic Swirls","username":"krakel","description":"Noise, symmetry and lots of domain distortion.\n\nUncomment line 77 for a more dramatic version.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["noise","kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iTime .5*iTime\nfloat hash(in vec3 p)\n{\n\tivec3 q = ivec3(p*5000.);\n    int h = 15*q.x ^ q.y ^ q.z;\n    return fract(713.*sin(float(h)));\n}\n\nfloat noise(in vec3 p)\n{\n    vec3 F = floor(p);\n    vec2 o = vec2(0,1);\n    vec3 f = smoothstep(0.,1.,fract(p));\n    float r1 = mix(hash(F), hash(F+o.yxx), f.x);\n    r1 = mix(r1,mix(hash(F+o.xyx),hash(F+o.yyx), f.x),f.y);\n    float r2 = mix(hash(F+o.xxy), hash(F+o.yxy), f.x);\n    r2 = mix(r2,mix(hash(F+o.xyy),hash(F+o.yyy), f.x),f.y);\n    return mix(r1,r2,f.z);\n}\n\nfloat fbm(in vec3 p)\n{\n    float s = 1.;\n    float a = 1.;\n    float g = 2.;\n    float A = 0.;\n    float r = 0.;\n    for(int i = 0; i<3; i++){\n        r += a*noise(1.2*float(i)+p*s);\n        A += a;\n        a /= g;\n        s *= g;\n    }\n    return r/A;\n}\n\nvec3 fbm3(in vec3 p)\n{\n    return vec3(fbm(p-10.3),fbm(p),fbm(p+10.3));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\n    \n    vec3 col = vec3(0);\n    float t = iTime*.1;\n    \n    t *= (.5+.5*smoothstep(.0,1.,length(uv)));\n    \n    mat2 rot = mat2(cos(t),sin(t),-sin(t),cos(t));\n    \n    uv *=rot;\n    \n    vec2 rad = vec2(atan((uv.y/uv.x)), length(uv));\n    \n    int rf = int(abs(floor(6.*rad.x/3.16)));\n    rad.x = fract(6.*rad.x/3.16);\n    if(rf%2==0) rad.x = 1.-rad.x; \n    rad.x *= 3.16/6.;\n    \n    vec3 p =  vec3(rad.x,16.*rad.y-1.5*iTime,.5*iTime);\n    \n    t = -iTime*.001;\n    mat2 rot2 = mat2(cos(t),sin(t),-sin(t),cos(t));\n    \n    p.xy *= rot2;\n    \n    vec3 q = fbm3(vec3(p.xy,p.z));\n    vec3 r = .5*fbm3(2.*(p+q));\n    vec3 s = .2*fbm3(8.*(p+q+r));\n    \n    col += pow(fbm3(p+s)*fbm(r+.3*s)*3.5,vec3(.8,1.5,1.2));\n    \n    col *= fbm(p)*1.5;\n    \n    //col *= pow(fbm(p+s)*1.5,2.2);\n    \n    col *= 1.+smoothstep(.05,.0,rad.y);\n    \n    float vig = smoothstep(1.,.2,rad.y);\n    col = pow(col, vec3(vig));\n    col *= vig;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}