{"ver":"0.1","info":{"id":"NtGXRc","date":"1641119492","viewed":242,"name":"diamond sd","username":"Carandiru","description":"diamond isometric sdf in buffer B","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["diamond","isometric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LUMA vec3(0.2126f, 0.7152f, 0.0722f)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 color = vec3(0);\n\n    color = textureLod(iChannel0, uv, 0.0f).rgb;\n   \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.0f * uv - 1.0f;\n    uv = vec2(-uv.x-uv.y + iTime * 0.01, uv.x-uv.y);\n    \n    float height = textureLod(iChannel0, uv * 0.125f, 0.0f).r;\n    \n    vec3 color = vec3(0);\n    \n    color = vec3(vec2(uv * 0.5f + 0.5f), height);\n    \n    fragColor = vec4(color, 1.0f);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define scale (1.0f/7.0f)\n#define x_max (5.0f)\n#define y_max (5.0f)\n#define pi (3.14159265358979323846)\n\n// me\nfloat sdIsometricDiamond( in vec2 p )\n{\n    const float k = sqrt(2.5);  // [ 2 : 1 ] psuedo isometric\n    p.x = abs(p.x) - 1.0;\n    p = vec2(p.x-k*p.y,-k*p.x-max(-p.y,p.y))/2.0;\n    p.x -= clamp( p.x, -2.0, 2.0 );\n    return -length(p)*sign(p.y);\n}\n#define sD sdIsometricDiamond\n\n// iq - https://iquilezles.org/articles/distfunctions\nfloat opScale( in vec2 p, in float s )\n{\n    return sD(p/s)*s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv.y *= iResolution.x/iResolution.y;\n    \n    vec4 samp = textureLod(iChannel0, uv, 0.0f);\n    samp.xy = 2.0f * samp.xy - 1.0f;\n    \n    vec2 p = 2.0f * uv - 1.0f;\n    p.y *= iResolution.x/iResolution.y;\n    \n    float d = 0.0f;\n    vec2 offset = vec2(pi*0.65f,pi) + samp.z;\n    \n    vec2 cell = vec2(1);\n    for (cell.y = -y_max; cell.y < y_max; ++cell.y) {\n    \n        for (cell.x = 0.0f; cell.x < x_max; ++cell.x) {\n        \n            vec2 disp = cell * offset * scale;\n            \n            d = min(d, opScale(p + disp, scale));\n            d = min(d, opScale(p - disp, scale));\n        }\n        \n    }\n\n    float hw = 0.5f * fwidth(d);\n    \n    float s = smoothstep(-d, d, hw * 2.0f - 1.0f);\n    \n    vec3 color = vec3(0);\n\n    float a = sin(iTime * samp.z);\n    d *= 10.0f;\n    d = d * a + 1.0f;\n    \n    float h = 0.1f / (d*d);\n    \n    color = vec3(h);\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}