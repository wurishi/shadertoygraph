{"ver":"0.1","info":{"id":"MXlBDs","date":"1729092735","viewed":21,"name":"566 lab04: Damaged VCR","username":"cocokneer","description":"Simulating a damaged VCR playing a video","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;\n    \n    \n    float stripe = fract(0.2f * iTime);\n    stripe += 0.01f * noise(10.f * warpedUv);\n    if (uv.y > (stripe - 0.08f) && uv.y < (stripe + 0.08f))\n    {\n        warpedUv.x += 0.08f * tan(uv.y * 150.f + noise(warpedUv) + sin(iTime * 0.1f) * 50.f);\n    }\n    \n    vec2 offset1 = vec2(-0.005);\n    vec2 offset2 = vec2(0.01);\n    vec2 offset3 = vec2(-0.01);\n    \n    float r0 = texture(iChannel0, uv + offset1).r;\n    float g0 = texture(iChannel0, uv + offset2).g;\n    float b0 = texture(iChannel0, uv + offset3).b;\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n    \n    float distanceToCenter = abs(uv.y - stripe);\n                          \n    vec3 col = mix(vec3(r, g, b), vec3(r0, g0, b0), distanceToCenter/0.18f);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}