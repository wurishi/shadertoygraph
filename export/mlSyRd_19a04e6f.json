{"ver":"0.1","info":{"id":"mlSyRd","date":"1692164674","viewed":21,"name":"gouyu_cs","username":"fan_M","description":"study shadertoy demo","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["study","gouyu"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//------------Function--------------------\nfloat smin(float a,float b,float k)\n{\n    float h = clamp(0.5+0.5*(a-b)/k,0.0,1.0);\n    return mix(a,b,h)-k*h*(1.0-h);\n}\nfloat smax(float a,float b,float k)\n{\n    return -smin(-a,-b,k);\n}\nmat2 rot(float angle)      // 旋转矩阵\n{                      \n    float c = cos(angle);  // [ cost, sint]\n    float s = sin(angle);  // [-sint, cost]\n    return mat2(c,-s,s,c);\n}\n//------------Draw-------------------------\nfloat sdCircle(vec2 uv,float r)\n{\n    return length(uv)-r;\n}\nfloat sdRect(vec2 uv, float r)\n{\n    return max(abs(uv.x),abs(uv.y))-r;\n}\nfloat gouyu(vec2 p,float angle)\n{\n    p *= rot(angle);\n    float w = 1.0 / iResolution.y;\n    float c = sdCircle(p,0.2);\n    float c2 = sdCircle(p - vec2(-0.1,0.0),0.103);\n    float c3 = sdCircle(p-vec2(0.102,0.0),0.099);\n    \n    float s = max(-c2,c);\n    s = max(s,p.y);\n    s=min(s,c3);\n    \n    return smoothstep(w, -w, s);\n}\nfloat gouyu3(vec2 p)\n{\n    p*=1.8;        //缩小绘制比例\n    float g = 0.0;\n    g += gouyu(p-vec2(0.0,0.4),radians(140.));\n    g += gouyu(p-vec2(1.732*0.2,-0.4*0.5),radians(260.));\n    g += gouyu(p-vec2(-1.732*0.2,-0.4*0.5),radians(0.));\n    return g;\n}\nvec3 Scene(vec2 uv)\n{ \n    vec3 col = vec3(1.0);\n    vec3 red = vec3(1.0,0.0,0.0);\n    \n    //背景\n    float w = 1.0 / iResolution.y;\n    float c = sdCircle(uv,0.4);\n    float backGround = smoothstep(w,-w,c);\n    col = mix(col,red,backGround);\n    \n    //中间黑圈\n    float midc = sdCircle(uv,0.08);\n    midc = smoothstep(w,-w,midc);\n    col = mix(col,vec3(0.0),midc);\n\n    //环\n    float ring = abs(sdCircle(uv,0.4))-0.01;\n    float edge = smoothstep(w,-w,ring);\n    col = mix(col,vec3(0.0),edge);\n    \n    //阴影\n    float d = length(uv);\n    float dark = step(d,0.4)*smoothstep(0.32,0.42,d);\n    col = mix(col,vec3(0.0),dark*0.8);\n    \n    //高光\n    d = length(uv-vec2(-0.18,0.15));\n    col = mix(col,vec3(1.0),smoothstep(0.15,0.0,d));\n\n    //勾玉\n    \n    vec2 guv = uv;\n    guv *= rot(iTime*0.2);\n    float g = gouyu3(guv);\n    col = mix(col,vec3(0.0),g);\n    \n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = fragCoord/iResolution.xy;\n   float w = 1.0 / iResolution.y;\n\n   float scale = iResolution.x / iResolution.y;\n   uv -= 0.5;\n   uv.x *= scale;\n   \n   vec3 col = Scene(uv);\n   \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}