{"ver":"0.1","info":{"id":"llsXzn","date":"1434157527","viewed":546,"name":"Triangleshsh","username":"vcazevedo","description":"A simple triangle drawn only with the fragment shader. Uses barycentric coordinates.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Colors\n    vec3 fgColor = vec3(0.741, 0.635, 0.471);\n\tvec3 bgColor = vec3(0.192, 0.329, 0.439);\n    \n    //Triangle barycentric coordinates defined on screen space\n    vec2 t0 = vec2(0.25, 0.25);\n\tvec2 t1 = vec2(0.75, 0.25);\n\tvec2 t2 = vec2(0.50, 0.85);\n    vec2 tCentroid  = (t0 + t1 + t2)/3.0;    \n    //Compute UV coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 v0 = t2 - t0;\n    vec2 v1 = t1 - t0;\n    vec2 v2 = uv - t0;\n\t\n    //Compute barycentric coordinates \n    float dot00 = dot(v0, v0);\n    float dot01 = dot(v0, v1);\n    float dot02 = dot(v0, v2);\n    float dot11 = dot(v1, v1);\n    float dot12 = dot(v1, v2);\n    \n    float invDenom = 1.0/(dot00 * dot11 - dot01 * dot01);\n    float baryX = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    float baryY = (dot00 * dot12 - dot01 * dot02) * invDenom;\n    \n    if((baryX >= 0.0) && (baryY >= 0.0) && (baryX + baryY <= 1.0)) {\n    \tfragColor = vec4(fgColor, 1.0);\n    } else {\n        fragColor = vec4(bgColor, 1.0);\n    }\n}\n\n\n","name":"","description":"","type":"image"}]}