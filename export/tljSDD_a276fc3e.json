{"ver":"0.1","info":{"id":"tljSDD","date":"1565951913","viewed":158,"name":"Offset RGB","username":"davidbachmann","description":"My first shader, offsetting RGB channels","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["rgb","offset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float offset = 0.1;\n\nvec3 offsetRGB(vec2 uv, float i) {\n    return vec3(texture(iChannel0,vec2(uv.x-offset * i,uv.y)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float red = offsetRGB(uv, 0.0).r;\n    float green = offsetRGB(uv, 1.0).g;\n\tfloat blue = offsetRGB(uv, 2.0).b;\n\t\n\tfragColor = vec4(vec3(red, green, blue), 1.0);\n}","name":"Image","description":"","type":"image"}]}