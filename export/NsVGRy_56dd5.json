{"ver":"0.1","info":{"id":"NsVGRy","date":"1631752397","viewed":45,"name":"Fork Humble Cir effieyanfe 955","username":"effieyanfei","description":"A simple circle for further experiments","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"7dy3RG","parentname":"Humble Circle"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n * @author rah, inspired by jonobr1 / http://jonobr1.com/\n */\n\n// Make a vec3 color from rgb values [0, 255]\nvec3 rgb(float r, float g, float b)\n{\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\n/* \n * Output circle colors at given center pos and radius\n */\nvec4 circle(vec2 uv, vec2 center, float radius, vec3 color)\n{\n\tfloat d = length(center - uv) - radius;\n\tfloat t = clamp(d, 0.0, 1.0);\n\treturn vec4(color, 1.0 - t);\n}\n\n\n/* \n * Rotate an input point about some center by angle\n */\nvec2 rotatePoint2d(vec2 uv, vec2 center, float angle)\n{\n    vec2 rotatedPoint = vec2(uv.x - center.x, uv.y - center.y);\n    float newX = cos(angle) * rotatedPoint.x - sin(angle) * rotatedPoint.y;\n    rotatedPoint.y = sin(angle) * rotatedPoint.x + cos(angle) * rotatedPoint.y;\n    rotatedPoint.x = newX;\n    return rotatedPoint;\n}\n\nvec4 pulsingFlower(vec2 fragCoord) {\n    vec2 uv = fragCoord.xy;\n    \n\tvec2 center = iResolution.xy * 0.5;\n    \n    float angle = atan(fragCoord.y - center.y, fragCoord.x - center.x);\n    \n    \n\tfloat radius = 0.25 * iResolution.y;\n    radius += 40.0 * sin(20.0 * angle) * sin(iTime);\n   \n    // Background layer\n\tvec4 layer1 = vec4(rgb(255.0, 255.0, 210.0), 1.0);\n\t\n\t// Circle\n\tvec3 red = rgb(225.0, 50.0, 70.0);\n\tvec4 layer2 = circle(uv, center, radius, red);\n\t\n\t// Blend the two\n\treturn mix(layer1, layer2, layer2.a);\n}\n\nvec4 rotatingFlower(vec2 fragCoord) {\n    vec2 uv = fragCoord.xy;\n    \n\tvec2 center = iResolution.xy * 0.5;\n    \n    float angle = atan(fragCoord.y - center.y, fragCoord.x - center.x);\n    \n    \n\tfloat radius = 0.25 * iResolution.y;\n    angle = angle + 360.0 * sin(iTime * 0.003);\n    radius += 80.0 *(abs(sin(3.0 * angle)) - abs(cos(3.0 * angle))) * sin(iTime);\n    radius += 0.3 * radius * sin(iTime);\n    \n    // Background layer\n\tvec4 layer1 = vec4(rgb(255.0, 255.0, 210.0), 1.0);\n\t\n\t// Circle\n\tvec3 red = rgb(225.0, 50.0, 70.0);\n\tvec4 layer2 = circle(uv, center, radius, red);\n\t\n\t// Blend the two\n\treturn mix(layer1, layer2, layer2.a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    //fragColor = rotatingFlower(fragCoord);\n\t\n    fragColor = pulsingFlower(fragCoord);\n    \n    \n\n}","name":"Image","description":"","type":"image"}]}