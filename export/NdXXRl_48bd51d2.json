{"ver":"0.1","info":{"id":"NdXXRl","date":"1619015470","viewed":188,"name":"u/GDAG05 : sin(x)-cos(y)=sin(xy)","username":"tasulife","description":"Where the difference is zero (eg the test of \"sin(x) - cos(y) == sin(xy)\" returns TRUE) is shaded as 50% gray. and black white are the false values.\nhttps://www.reddit.com/r/generative/comments/muwy6c/sin_x_cos_y_sin_xy_i_think_its_kinda_cool/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["reddit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n \n    // +-15 representation on numberline\n    float numline_ones = 30.0;\n    \n    // pc is \"plot coordinates\"\n    vec2 pc = vec2((uv.x - 0.5) * numline_ones,(uv.y - 0.5) * numline_ones);\n    \n    // Extract xy for readability\n    float x = pc.x;\n    float y = pc.y;\n    \n    // compute boolean using equality operator\n    // Doesn't work because why would the pixel \n\t// sample be EXACTLY on the infinitely thin \"true line\"?\n    // bool pt = sin(x) - cos(y) == sin (x*y);\n    \n    // compute difference using subtraction\n    float pd = (sin(x) - cos(y)) - sin(x*y);\n    \n    // pd range should be a max of\n    // +-3, so we need to shuffle that to 0 to 1.\n    pd = (pd / 6.0) + 0.5; \n\t\n\t// Generate grayscale \n    vec3 col = vec3(pd,pd,pd);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}