{"ver":"0.1","info":{"id":"Ml3XWB","date":"1481397069","viewed":323,"name":"Space Flora","username":"zackpudil","description":"Space Maintenance 2.  Sometimes the sequel is better than the original.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float time() { return  iTime; }\nfloat hash(float n) {\n\treturn fract(sin(n)*43578.5453);\n}\n\nfloat noise(float n) {\n\tfloat p = floor(n);\n\tfloat f = fract(n);\n\tf = f*f*(3.0 - 2.0*f);\n\t\n\treturn mix(hash(p), hash(p + 1.0), f);\n}\n\nfloat formula(vec2 p) {\n  float at = 1.3 + time()*0.05;\n  p = 0.07*p - vec2(0.86*sin(at), 0.7*cos(at));\n  float d = 100.0;\n  \n  for(int i = 0; i < 10; i++) {\n    p = abs(p)/dot(p, p) - vec2(0.5);\n    d = min(d, abs(2.0*p.x)); \n  }\n  \n  return d;\n}\n\nvec3 bump(vec2 p, float e) {\n  vec2 h = vec2(e, 0.0);\n  vec3 g = vec3(\n    formula(p + h.xy) - formula(p - h.xy),\n    formula(p + h.yx) - formula(p - h.yx),\n    -0.3)/e;\n  \n  return g;\n}\n\nfloat lde(vec2 p) {\n    if(iMouse.z <= 0.0) {\n        float c = floor(time());\n        c = 3.14159*noise(time());\n\n        p *= mat2(cos(c), sin(c), -sin(c), cos(c));\n        p.y += 2.0*cos(time());\n    } else {\n        p -= (-iResolution.xy + 2.0*iMouse.xy)/iResolution.y;\n    }\n\treturn length(p) - 0.005;\n}\n\nvec3 light(vec2 p, float d) {\n\tvec2 h = vec2(max(d, 0.3), 0.0);\n\tvec3 l = normalize(vec3(\n\t\tlde(p + h) - lde(p - h),\n\t\tlde(p + h.yx) - lde(p - h.yx),\n\t\t0.3));\n\t\n\treturn -l;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = (-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n\tvec3 col = vec3(0);\n    \n\tvec3 rd = normalize(vec3(p, 1.97));\n\tvec3 sn = normalize(bump(p, 0.01));  \n\tvec3 re = reflect(rd, sn);\n    \n\tfloat dis = lde(p);\n\tvec3 lig = light(p, dis);\n\tfloat att = 1.0/(1.0 + 0.0*dis + 50.0*dis*dis);\n\tcol += att*vec3(0.2, 1.0, 0.3)*clamp(dot(lig, sn), 0.0, 1.0);\n    \n\tcol += 1.0*pow(clamp(dot(-rd, re), 0.0, 1.0), 8.0);\n\tcol *= 3.0*formula(p);\n    \n\tcol = mix(vec3(0.2, 1.0, 0.3), col, smoothstep(0.0, 0.04, lde(p)));\n    \n\tcol = pow(col, vec3(1.0/2.2));\n\tfragColor = vec4(col, 1);\n\n}","name":"Image","description":"","type":"image"}]}