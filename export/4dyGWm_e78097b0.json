{"ver":"0.1","info":{"id":"4dyGWm","date":"1469447785","viewed":1811,"name":"Voronoi cam","username":"aytekaman","description":"Simple voronoi shader that uses webcam image as input.","likes":21,"published":1,"flags":2,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_POINTS 1024\n\n#define SEED 3\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int random = SEED;\n    \n    int a = 1103515245;\n    int c = 12345;\n    int m = 2147483648;\n    \n    vec2 o;\n    \n    float minDist = 10000000.0;\n    \n    for(int i = 0; i < NUM_POINTS; i++)\n    {\n        random = a * random + c;\n        \n        o.x = (float(random) / float(m)) * iResolution.x;\n        \n        random = a * random + c;\n        \n        o.y = (float(random) / float(m)) * iResolution.y;\n        \n        if(distance(fragCoord, o) < minDist)\n        {\n            minDist = distance(fragCoord, o);\n            vec2 uv = o / iResolution.xy;\n            uv.x = 1.0 - uv.x;\n            fragColor = (texture(iChannel0, uv)) * (1.0 - minDist / 200.0);\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}