{"ver":"0.1","info":{"id":"ldSBDG","date":"1501892853","viewed":83,"name":"drawing shapes in shaders","username":"jaman4dbz","description":"fghfgh","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    float px = fragCoord.x / iResolution.x;\n    float py = fragCoord.y / iResolution.y;\n    \n    float width = 0.01;\n    \n    float vBlock = step(width, mod(px, width * 2.0));\n    float hBlock = step(width, mod(py, width * 2.0));\n    \n    vec4 final = vec4(vBlock * hBlock);\n    \n    //add a sin wave\n    float lineWidth = 0.02;\n    float squareWidth = 0.1;\n    float radius = 0.05;\n    vec2 squarePosition = vec2(0.5, 0.5);\n    \n    if(final.r + final.g + final.b < 2.9) {\n        //draw sin wave based on time\n    \tfinal.r = step(-lineWidth, -abs(sin((px * 2.0 * 3.14) + iTime) - ((py * 2.0) - 1.0)));\n\t\t//draw a square between x 0.4 and 0.6 and y 0.4, and 0.6\n        final.g = step(-squareWidth, -abs(px - squarePosition.x))\n            * step(-squareWidth, -abs(py - squarePosition.y));\n        //Note: step is like an if statement, without being an if statement\n       \t//\t\tconditionals make shaders slow, so step is used instead\n        \n        //draw blue near the mouse cursor\n        final.b = step(-radius, -abs(px - iMouse.x / iResolution.x))\n            * step(-radius, -abs(py - iMouse.y / iResolution.y));\n    }\n\tfragColor = final;\n}","name":"Image","description":"","type":"image"}]}