{"ver":"0.1","info":{"id":"tdGSR3","date":"1574564765","viewed":458,"name":"Vitraux","username":"Kali","description":"2D mapping of a 4D fractal using the method described here: https://twitter.com/donaldm38768041/status/1191950149578301440","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 3\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nvec4 fractal(vec2 U) {\n    float m=1e3,t=iTime;\n    U*=.13-sin(t*.2)*.1;\n    U*=rot(sin(t*.1)*3.14);\n    U+=vec2(sin(t),cos(t))*.005*sin(t*.2);\n    vec4 p=vec4(cos(U.x),sin(U.x),cos(U.y),sin(U.y));\n    for (int i=0;i<8;i++) {\n    \tp=abs(p+1.)-abs(p-1.)-p;\n        p=p*1.5/min(1.,dot(p,p))-1.;\n\t\tm=min(m,fract( length(p*2.) -t*.1 ) );\n    }\n    return pow(m,1.7)*normalize(2.+abs(p.xyww))*2.;\n}\n\nvoid mainImage(out vec4 O,vec2 u)\n{\n    vec2 R=iResolution.xy,\n         U=(u-R*.5)/R.y;\n    U*=1.-dot(U,U)/4.;\n    O=vec4(0);\n\tvec2 pix=1./R/float(AA)+max(0.,2.-iTime)*.005;\n    for (int x=-AA;x<AA;x++) \n        for (int y=-AA;y<AA;y++)\n\t\t    O+=fractal(U+vec2(x,y)*pix);\n\n\tO/=float(AA*AA);\n}\n","name":"Image","description":"","type":"image"}]}