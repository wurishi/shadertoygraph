{"ver":"0.1","info":{"id":"tdlcWN","date":"1584838791","viewed":451,"name":"every other pixel is a line","username":"TinyTexel","description":"Oskar St√•lberg's (@OskSta) \"every-other-pixel-is-a-line\"- texture sampling approach.\nhttps://twitter.com/OskSta/status/1241096929490149376","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\n*/\n\nvec2 WarpCoord0(float p, float s)\n{\n    bool c = fract(p * 0.5 - 0.25) < 0.5;\n    \n    if(c) s = 1.0 - s;\n    \n    float p0 = floor(p - 0.5);\n    float l0 =      (p - 0.5) - p0;\n    \n    if(l0 < s)\n    {\n        l0 *= 0.5 / s;\n    }\n    else\n    {\n        p0 += 1.0;\n        l0 = (l0 - s) / (1.0 - s) * 0.5 + 0.5; \n    }\n    \n    if(c) l0 += 1.0;\n\n    l0 = fract(l0 + 0.5);\n    \n    return vec2(p0, l0);\n}\n\nvec2 WarpCoord(vec2 uv, float s)\n{\n    vec2 u = WarpCoord0(uv.x, s);\n    vec2 v = WarpCoord0(uv.y, s);\n    \n    return vec2(u.x + u.y, v.x + v.y);\n}\n\nfloat WarpCoordI0(float p, float s)\n{\n    if(fract(p * 0.5 - 0.25) < 0.5) \n        s = 1.0 - s;\n    \n    float p0 = floor(p - 0.5);\n    float l0 =      (p - 0.5) - p0;\n    \n    if(l0 > s) p0 += 1.0;\n    \n    return p0;\n}\n\nvec2 WarpCoordI(vec2 uv, float s)\n{\n    return vec2(WarpCoordI0(uv.x, s), WarpCoordI0(uv.y, s));\n}\n\n\nvoid mainImage( out vec4 outCol, in vec2 uv0 )\n{\n    vec2 uv = uv0 - 0.5;\n\tvec2 tex = uv0 / iResolution.xy;\n    \n    vec3 col = vec3(0.0);\n    \n    vec2 p = uv0.xy*0.02;\n    \n    float s = 0.25;\n    s = sin(float(iTime))*0.75*0.5+0.5;\n    \n    if(tex.x < 0.5)\n    {\n        vec2 wc = WarpCoord0(p.x, s);\n        \n        if(tex.y < 0.5)\n            col = vec3(wc.x) * 0.1;\n        else\n            col = vec3(wc.y);\n    }\n    else\n    {\n    \tif(tex.y > 0.5)\n    \tcol = textureLod(iChannel0, WarpCoord(p, s)/64.0, 1.0).rgb;\n    \telse\n    \tcol = texelFetch(iChannel0, ivec2(WarpCoordI(p, s)), 0).rgb;\n    }\n    \n\toutCol = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}