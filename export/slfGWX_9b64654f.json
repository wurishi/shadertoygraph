{"ver":"0.1","info":{"id":"slfGWX","date":"1622977486","viewed":339,"name":"Random and Noise shader","username":"sarabase","description":"In this shader we can see the difference between a random texture and a noise texture. Noise: Simplex Noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","random","simplex","shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co) {\n    //Note: fract function return de fractional part of a division and dumps the integer part\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 hash( vec2 p ) {\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t  dot(p,vec2(269.5,183.3)) );\n    //The output must be between 0.0 and 1.0\n\treturn -1.0 + 2.0*fract(sin(p) * 43758.5453123);\n}\n\nfloat noise( in vec2 p ) {\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n\tvec2 i = floor( p + (p.x+p.y) * K1 );\n\n    vec2 a = p - i + (i.x+i.y) * K2;\n    vec2 o = step(a.yx,a.xy);\n    vec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 2.0*K2;\n\n    vec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n\n    return dot( n, vec3(70.0) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    //#define RANDOM\n    #define NOISE\n    float x = 0.;\n    \n#ifdef RANDOM\n    x = rand(fragCoord.xy);\n#endif\n\n#ifdef NOISE\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    x = noise(uv * 16.);\n    x = x * 0.5 + 0.5;\n#endif\n\n    fragColor = vec4(x, x, x, 1.0);\n  \n\n}","name":"Image","description":"","type":"image"}]}