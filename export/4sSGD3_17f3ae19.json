{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\n# define RADIUS_MIN\t50.0\n# define RADIUS_MAX 100.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2\tcenter = vec2(iResolution.x / 2.0, iResolution.y / 2.0);\n\tvec2\tvecPix = center - fragCoord.xy;\n\tvec2\tnormVecPix = normalize(vecPix);\n\tvec2\tnormVecRef = normalize(center - vec2(0.0, center.y));\n\t\n\tfloat\tcosAngle = dot(normVecPix, normVecRef);\n\tfloat\tangle = (degrees(acos(cosAngle)) + 360.0) / 1080.0;\n\tfloat\tvalue = texture(iChannel0, vec2(angle, 0.0)).x;\n\tvalue = value * 100.0;\n\t\n\t\n\tfloat\tvecLength = length(vecPix);\n\n\tif (vecLength > RADIUS_MIN + value && vecLength < RADIUS_MAX + value)\n\t{\n\t\tvec4\tcolor = vec4(1.0);\n\t\tfor (float i = RADIUS_MIN ; i < RADIUS_MAX; i += 1.0)\n\t\t{\n\t\t\tif (vecLength > i + value && vecLength < (i + 1.0) + value)\n\t\t\t{\n\t\t\t\tfloat\tintensity = (i - RADIUS_MIN) / (RADIUS_MAX - RADIUS_MIN);\n\t\t\t\tcolor -= vec4(intensity);\n\t\t\t}\n\t\t}\n\t\tfragColor = color * vec4(0.40, 0.50, 0.90, 0.0);\n\t}\n\telse\n\t\tfragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sSGD3","date":"1394127389","viewed":1258,"name":"Circular music spectrum","username":"Yannshu","description":"Yet another sound visualization.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["sound","spectrum","music","audio"],"hasliked":0,"parentid":"","parentname":""}}