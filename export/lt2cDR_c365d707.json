{"ver":"0.1","info":{"id":"lt2cDR","date":"1508342607","viewed":111,"name":"WavyLine","username":"nhoughto","description":"Sinusoidal Line","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sinline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat frequency = 10.0, epsilon = 0.01, amplitude = 0.4, translation = 0.5, waveSpeed = 2.0;\n\nbool within(float y, float sinX){\n    if(abs(y - sinX) < epsilon){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nvec4 drawLine(vec2 fragCoord){\n    vec4 backGround = vec4(1.0, 1.0, 1.0, 1.0);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    if(within(uv.y, amplitude * sin(waveSpeed * iTime + frequency * uv.x) + translation)){\n        return vec4(0.0, 0.0, 0.0, 1.0);\n    }else{\n      \treturn backGround;   \n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = drawLine(fragCoord);\n}","name":"Image","description":"","type":"image"}]}