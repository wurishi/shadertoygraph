{"ver":"0.1","info":{"id":"NdcfWB","date":"1657087379","viewed":92,"name":"Blurred Image","username":"andrew741","description":"I blur an image by rotating it. I'm wanting to use this on some of my pictures of stars to add cool star trails so I made this to test the idea. The longer it runs the more blurred it is.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["space","stars","image","motion","rotation","graphic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb / texture(iChannel0, uv).w;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159\n\nvec2 Rot(vec2 v, float a)\n{\n    mat2x2 rot = mat2x2(cos(a), -sin(a), sin(a), cos(a));\n    return v * rot;\n}\n\n\nfloat Angle(float m1, float m2)\n{\n    return atan((m2-m1)/(1.+m2*m1));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 tuv = fragCoord.xy/iResolution.xy;\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y * 2.5;\n    float a = iTime / (float(iFrame) / 60. + 1.) + PI*0.5;  // a cooler blur effect\n    a = iTime + PI*0.5;\n    vec3 col = vec3(0.);\n    \n    vec2 l1 = vec2(0.5, 0.5);\n    vec2 l2 = vec2(0.5, -0.5);\n    vec2 l3 = vec2(-0.5, -0.5);\n    vec2 l4 = vec2(-0.5, 0.5);\n    \n    vec2 u1 = vec2(1,1);\n    vec2 u2 = vec2(1,0);\n    vec2 u3 = vec2(0,0);\n    vec2 u4 = vec2(0,1);\n    \n    vec2 uvr = Rot(uv, a);\n    \n    vec2 p1 = Rot(l1, -a);\n    vec2 p2 = Rot(l1, -a + PI*0.5);\n    vec2 p3 = Rot(l1, -a + PI*1.0);\n    vec2 p4 = Rot(l1, -a + PI*1.5);\n    \n    if (uv.x >= -0.5 && uv.x <= 0.5 && uv.y >= -0.5 && uv.y <= 0.5)//(uvr.x > l4.x && uvr.x < l2.x && uvr.y > l3.y && uvr.y < l1.y)\n    {\n        float ra = Angle((uv.y - p2.y) / (uv.x - p2.x), (p1.y - p2.y) / (p1.x - p2.x));\n        float l = length(uv - p2);\n        float h = l * cos(ra);\n        vec2 right = mix(u1, u2, h);\n        //vec2 left = mix(u3, u4, 1.-h);  // wasn't needed\n        \n        h = l * sin(ra);\n        vec2 p = vec2(mix(u2, u3, h).x, right.y);  // mix(right, left, h);  // ened up being redundent\n\n        col = texture(iChannel1, p).rgb;\n        float s = 1.; // clamp(1./(iTime*30.),0.,1.);  // a different blur effect\n        fragColor = vec4(texture(iChannel0, tuv).rgb + col * s, texture(iChannel0, tuv).w + s);\n    }\n    else fragColor = texture(iChannel0, tuv);\n    if (iFrame <= 1) fragColor = vec4(col, 1.);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}