{"ver":"0.1","info":{"id":"MtKcRm","date":"1535601728","viewed":82,"name":"Centred Grey Scale Basis","username":"ngubbins","description":"Basis for use in more complicated visual effects","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["basic","shade","greyscale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dimmerScale = 1.0;\nfloat speed = 0.25;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // initial color\n    vec3 col = vec3(1, 1, 1);\n    \n    // Effect Scale and Time Scale\n    float dimmer = abs(sin(iTime * speed)) * dimmerScale;\n    \n      //need to offset uv to be actual centre\n    uv -= vec2(0.5,0.5);\n    \n    //Dim frags further from centre\n  \tcol = col*( vec3(1,1,1) - (length(vec2(0,0) - uv) * dimmer));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}