{"ver":"0.1","info":{"id":"DltfRB","date":"1701444466","viewed":45,"name":"Tricky blur 1 fetch","username":"remjie","description":"blur in 1 fetch.\nI failed my attempt to make it work for 9 positions.\n\nclic to compare with base texture\n\n--> updated to try 4 fetch at one","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["blur","fast","trick"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// based on IQ trick to alternate texture fetch\n// ( here https://www.shadertoy.com/view/MsdGD2 )\n//\n// It gave a different position at each frame and the human eyes do the rest\n// by blending naturaly ( just like real speed do, in a car for exemple )\n// giving us illution of blur\n\n// ugly if u set it to 1, even @ 165hz\n#define NINETAP 0\n\n// blend 4 pixel at once, so it look like a 3 x 3 box blur\n#define FOURFETCH 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 s;\n    int pos;\n    vec4 co;\n    float range = 1.0; // try 0.5 or even 1.5, trust me its fun\n    float speed = 165.0; // better to match fps\n    \n    #if NINETAP\n    \n    float px[9] = float[9](1.5, 0.5, -0.5, 1.5, 0.5, -0.5, 1.5, 0.5, -0.5);\n    float py[9] = float[9](-0.5, -0.5, -0.5, 0.5, 0.5, 0.5, 1.5, 1.5, 1.5);\n    \n    pos = int(mod(iTime, 9.0/ speed) * speed);\n    \n    s = vec2(px[pos], py[pos]);\n    \n    #else\n    \n    float px[4] = float[4]( -1.0, 1.0, 1.0, -1.0 );\n    float py[4] = float[4]( -1.0, -1.0, 1.0, 1.0 );\n    \n    pos = int(mod(iTime, 4.0/ speed) * speed);\n    \n    s = vec2(px[pos], py[pos]) * range;\n    \n    #endif\n    \n    #if FOURFETCH\n    if( iMouse.z > 0.5 )\n    {\n        co = textureLod( iChannel0, (fragCoord + vec2(px[1], py[2] ) ) / iResolution.xy, 0.0 );\n        co += textureLod( iChannel0, (fragCoord + vec2(px[1], py[1] ) ) / iResolution.xy, 0.0 );\n        co += textureLod( iChannel0, (fragCoord + vec2(px[0], py[2] ) ) / iResolution.xy, 0.0 );\n        co += textureLod( iChannel0, (fragCoord + vec2(px[0], py[1] ) ) / iResolution.xy, 0.0 );\n        co *= 0.25;\n    }\n    else\n    {\n        co = textureLod( iChannel0, (fragCoord + s + vec2(px[1], py[2] ) ) / iResolution.xy, 0.0 );\n        co += textureLod( iChannel0, (fragCoord + s + vec2(px[1], py[1] ) ) / iResolution.xy, 0.0 );\n        co += textureLod( iChannel0, (fragCoord + s + vec2(px[0], py[2] ) ) / iResolution.xy, 0.0 );\n        co += textureLod( iChannel0, (fragCoord + s + vec2(px[0], py[1] ) ) / iResolution.xy, 0.0 );\n        co *= 0.25;\n    }\n    \n    #else\n    if( iMouse.z > 0.5 ) co = textureLod( iChannel0, (fragCoord ) / iResolution.xy, 0.0 );\n    else co = textureLod( iChannel0, (fragCoord + s) / iResolution.xy, 0.0 );\n    \n    #endif\n    \n    fragColor = co;\n}\n","name":"Image","description":"","type":"image"}]}