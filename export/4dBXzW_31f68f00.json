{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// created by dariusz kosz (dars26)\n\nfloat size = 11.0;\nfloat edgeSize = 4.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n\t\n    float dx = 1./size;\n    float dy = dx*ratio*0.9;\n    \n    vec2 coord = vec2(dx*floor(uv.x/dx), dy*floor(uv.y/dy)) + dx/2.0;\n    vec4 noise = texture(iChannel0,coord);\n    \n    vec2 m = vec2(iMouse.x, iMouse.y);\n    float dist = 1.-distance(m/iResolution.xy, coord)*3.5;\n    dist = step(0.6, dist);\n\n    vec4 c_in = vec4(noise.x, noise.y, coord.x, 0.);\n\n\tfloat grad_off = 0.001 * edgeSize + 0.001*dist*10.;\n    float freq = size * 2. * noise.y;\n    float freq_offset = (3.+36.*dist)*iTime * noise.x;\n\tfloat amp = 0.006;\n\tvec4 borderCol = vec4(0.0);\n\tfloat gradient = 0.1;\n\tvec4 col = c_in+vec4(0.4)*dist;\n    vec4 ssm = vec4(1., 1., 1., 1.) * 0.95; // square size \n\n    float sin_v = sin(freq_offset + uv.x*freq)*amp;\n    float verical = sin_v + coord.y;\n    \n    float bottom = verical + dy*0.6 * ssm.x;\n    gradient = smoothstep(bottom - grad_off, bottom, uv.y);\n\tcol = mix(col, borderCol , gradient);\t\t\n\n    float top = verical - dy*0.25 * ssm.y;\n    gradient = smoothstep(top + grad_off, top, uv.y);\n\tcol = mix(col, borderCol , gradient);\n\t\n    float sin_h = sin(freq_offset +uv.y*freq)*amp;\n    float horizontal = sin_h + coord.x;\n    \n    float left = horizontal - dx * 0.45 * ssm.z;\n    gradient = smoothstep(left + grad_off, left, uv.x);\n    col = mix(col, borderCol , gradient);\n\t\n\tfloat right = horizontal + dx * 0.45 * ssm.a;\n    gradient = smoothstep(right - grad_off, right, uv.x);\n    col = mix(col, borderCol , gradient);\n\t\n    \n    //////////////////////////////////////////////\n    // second layer\n\n    vec4 noise2 = texture(iChannel1, coord + iTime*0.009);\n\tc_in = vec4(coord.y, coord.x, noise.z, 0.); \n    \n\tborderCol = col;\n    \n    vec4 c_add = c_in * sin(noise2.x);\n\tcol = mix(c_add+vec4(0.4)*dist, col, 0.62);\n\t\n    ssm = vec4(1., 1., 1., 1.) * 0.79; // square size\n\n    verical = -sin_v + coord.y;\n    bottom = verical + dy*0.6 * ssm.x;\n    gradient = smoothstep(bottom - grad_off, bottom, uv.y);\n\tcol = mix(col, borderCol , gradient);\t\t\n\n    top = verical - dy*0.25 * ssm.y;\n    gradient = smoothstep(top + grad_off, top, uv.y);\n\tcol = mix(col, borderCol , gradient);\n\t\n    horizontal = -sin_h + coord.x;\n    left = horizontal - dx * 0.45 * ssm.z;\n    gradient = smoothstep(left + grad_off, left, uv.x);\n    col = mix(col, borderCol , gradient);\n\t\n\tright = horizontal + dx * 0.45 * ssm.a;\n    gradient = smoothstep(right - grad_off, right, uv.x);\n    col = mix(col, borderCol , gradient);\n    \n    fragColor = col;\n    \n    \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dBXzW","date":"1409306250","viewed":2049,"name":"Squares layer","username":"darkhus","description":"interact with mouse","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}