{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// raymarcher from https://www.shadertoy.com/view/XsB3Rm\n\n// ray marching\nconst int max_iterations = 30;\nconst float stop_threshold = 0.001;\nconst float grad_step = 0.001;\nconst float clip_far = 300.0;\n\n// math\nconst float PI = 3.14159265359;\nconst float DEG_TO_RAD = PI / 180.0;\n\nvec2 sdSegment( vec3 a, vec3 b, vec3 p ) {\n\tvec3 pa = p - a;\n\tvec3 ba = b - a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\t\n\treturn vec2( length( pa - ba*h ), h );\n}\n\n\nfloat smin( float a, float b )\n{\n\t\n\t\n    float k = 0.6;\n\tfloat h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\n\n// camera rotation : pitch, yaw\nmat3 rotationXY( vec2 angle ) {\n\tvec2 c = cos( angle );\n\tvec2 s = sin( angle );\n\t\n\treturn mat3(\n\t\tc.y      ,  0.0, -s.y,\n\t\ts.y * s.x,  c.x,  c.y * s.x,\n\t\ts.y * c.x, -s.x,  c.y * c.x\n\t);\n}\n\n// get distance in the world\nfloat dist_field(vec3 p) {\n    float l = length(floor(p*.33));\n    vec3 u = vec3(0,.5,1.);\n    float s = sin(iTime*2.);\n    float t = 0.04 * length(p);\n    u*=s*2.;\n    p = mod(p, 3.0) - 1.5;\n    p = p * rotationXY(vec2(l*iTime*1.1));\n    vec2 h;\n    h = sdSegment(u.xxy, -u.xxy, p);\n    float d1 = h.x - t;// + h.y * .0;\n    //u*=s;\n    h = sdSegment(u.xyx, -u.xyx, p);\n    float d2 = h.x - t;// + h.y * .0;\n    //u*=s;\n    h = sdSegment(u.yxx, -u.yxx, p);\n    float d3 = h.x - t;// + h.y * .0;\n    return smin(d3, smin(d1, d2));\n}\n// phong shading\nvec3 shading( vec3 v, vec3 n, vec3 eye ) {\n\tvec3 light_pos   = vec3( 100.0 * cos(iTime*0.2), 200.0 * sin(iTime*0.4), 20.0 );\n    float l = length(floor(v*.33));\n\tvec3 light_color = vec3( abs(sin(l * .5 + vec3(1.,3.,5.))) * vec3(1.,.5,1.25) );\n\tvec3 vl = normalize( light_pos - v );\n\tfloat diffuse  = dot( vl, n );\n\tlight_color *= 2.0+diffuse;\n    /*\n    light_color.rgb += 1.1;\n    light_color.b *= length(v) * .015;\n    light_color.rg *= 1.75 - length(v) * .15;\n    light_color.rgb = max(light_color.rgb * length(v) * 0.15, 0.0);\n*/\n    return light_color;\n}\n\n// get gradient in the world\nvec3 gradient( vec3 pos ) {\n\tconst vec3 dx = vec3( grad_step, 0.0, 0.0 );\n\tconst vec3 dy = vec3( 0.0, grad_step, 0.0 );\n\tconst vec3 dz = vec3( 0.0, 0.0, grad_step );\n\treturn normalize (\n\t\tvec3(\n\t\t\tdist_field( pos + dx ) - dist_field( pos - dx ),\n\t\t\tdist_field( pos + dy ) - dist_field( pos - dy ),\n\t\t\tdist_field( pos + dz ) - dist_field( pos - dz )\t\t\t\n\t\t)\n\t);\n}\n\n// ray marching\nfloat ray_marching( vec3 origin, vec3 dir, float start, float end ) {\n\tfloat depth = start;\n\tfor ( int i = 0; i < max_iterations; i++ ) {\n\t\tfloat dist = dist_field( origin + dir * depth );\n\t\tif ( dist < stop_threshold ) {\n\t\t\treturn depth;\n\t\t}\n\t\tdepth += dist;\n\t\tif ( depth >= end) {\n\t\t\treturn end;\n\t\t}\n\t}\n\treturn end;\n}\n\n// get ray direction\nvec3 ray_dir( float fov, vec2 size, vec2 pos ) {\n\tvec2 xy = pos - size * 0.5;\n\n\tfloat cot_half_fov = tan( ( 90.0 - fov * 0.5 ) * DEG_TO_RAD );\t\n\tfloat z = size.y * 0.5 * cot_half_fov;\n\t\n\treturn normalize( vec3( xy, -z ) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// default ray dir\n\tvec3 dir = ray_dir( 35.0, iResolution.xy, fragCoord.xy );\n\t\n\t// default ray origin\n\tvec3 eye = vec3( 0.0, 0.0, 0.0 );\n\n\t// rotate camera\n\tmat3 rot = rotationXY( vec2( iTime * 0.13, iTime * 0.19 ) );\n\tdir = rot * dir;\n\teye = rot * eye;\n\t\n\t// ray marching\n\tfloat depth = ray_marching( eye, dir, 0., clip_far );\n\tif ( depth >= clip_far ) {\n\t\tfragColor = vec4(0.0);\n    } else {\n\t\t// shading\n\t\tvec3 pos = eye + dir * depth;\n\t\tvec3 n = gradient( pos );\n\t\tfragColor = vec4( shading( pos, n, eye ) , 1.0 );\n        fragColor *= 1.0-depth/clip_far * 16.0;\n        //fragColor = vec4(n,1.);\n    }\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4d2XWR","date":"1410897038","viewed":248,"name":"pipe maybe","username":"yonatan","description":"asdasd","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["asdasd"],"hasliked":0,"parentid":"","parentname":""}}