{"ver":"0.1","info":{"id":"Wtd3DN","date":"1576406388","viewed":204,"name":"Cathodique noise","username":"Hatokuro","description":"Shader Noise + Border \ninspired by https://www.shadertoy.com/view/MdcfzH","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noisecathodiquecrt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BORDERSIZE .01\n#define DEFRAND 320.\n\nfloat rand(vec2 valeur)\n{\n    return fract(cos(dot(valeur.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec2 centre = vec2(.5,.5);\n    \n    // Time varying pixel color\n    // Noise\n    vec2 uvm = uv*DEFRAND;\n    vec2 randseed = floor(uvm)*iTime/DEFRAND;\n    vec3 col = vec3(rand(randseed));\n    \n    \n    // Border\n    vec2 degrad = 2.0 * abs(uv-centre);\n    float coldegrad = (1.-degrad.x) * (1.-degrad.y);\n    \n    coldegrad = smoothstep(0.0,BORDERSIZE+0.1,sqrt(coldegrad));\n\n    col *= coldegrad;\n \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}