{"ver":"0.1","info":{"id":"XsKXRm","date":"1463526647","viewed":358,"name":"Bouncing ball - CG","username":"awais2242","description":"Computer Graphics Project.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ball","bounce"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 center = vec2(0.14,0.12);\n\nfloat radius = 0.14;\n\nfloat speed = 1.50;\n\nvec3 rgb(float r,float g,float b){\n    return vec3(r/255.0, g/255.0, b/255.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //speed of ball\n    //lower the value, faster the ball bounce\n    float t = iTime / speed;\n\t\n    //normalizing the values of coordinates\n    vec2 uv = fragCoord.xy / iResolution.y;\n    \n    float aspect = iResolution.x / iResolution.y;\n    \n   \t//uv.x = uv.x * aspect; \n   \t\n    //moving ball horizontally xPos = [0,1]\n\tfloat xPos = mod(t, 2.0);\n    \n    xPos = abs(xPos-1.0) * aspect;\n    \n    vec3 outC = vec3(0.0);\n    \n    center.x += xPos;\n\n    center.y += abs(sin(t * 5.0));\n\n    vec2 dis = uv - center;    \n\n    float dist = length(dis);\n\n    vec3 ballColor = rgb(237.0,144.0,59.0);\n\n    if(dist < radius){\n\n        outC = ballColor;\n\n        //outC = texture(iChannel0, vec2(0.0,1.0)).xyz;\n\n    } else if( dist < radius + 0.003){\n\n        outC = vec3(0.0, 0.0, 0.0);\n    }else{\n        outC = vec3(1.0, 1.0, 1.0);\n        \n     }\n    fragColor = vec4(outC,1.0);\n}","name":"Image","description":"","type":"image"}]}