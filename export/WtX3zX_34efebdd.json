{"ver":"0.1","info":{"id":"WtX3zX","date":"1557048189","viewed":86,"name":"pop up lines ","username":"guowei","description":"floating lines ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["lines","moving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    const float col = 7.0;\n    uv.y *= col;\n    \n    float fractV = fract(uv.y);\n    \n    float counter = abs(cos(iTime))/2.0;\n    \n    float startPoint = 0.0 + counter;\n    float gap = 0.1;\n    \n    float edge = fwidth(uv.y) * 2.0;\n    \n    float startLine = smoothstep(startPoint, startPoint + edge, fractV);\n    float endLine = smoothstep(startPoint + gap, startPoint + gap + edge, fractV);\n    \n    float line = startLine - endLine;\n    \n    vec4 defaultCOlor = vec4(0.0, 0.7, 0.8, 1.0);\n\n    // Output to screen\n    fragColor = vec4(defaultCOlor.xyz * line, 1.0);\n}","name":"Image","description":"","type":"image"}]}