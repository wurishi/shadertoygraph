{"ver":"0.1","info":{"id":"XXc3DH","date":"1716394375","viewed":77,"name":"Geometric Colourful Designs","username":"Malavika","description":"Using sin and cosine palette and designs.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colourful","rangoli","intricate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pallete(float t){\n   vec3 a=vec3(0.500, 0.500, 0.500);\n   vec3 b= vec3(0.400, 0.400, 0.400);\n   vec3 c= vec3(1.000, 1.000, 1.000);\n   vec3 d= vec3(0.278, 1.458, 0.728);\n   return a + b*cos(6.28318*(c*t+d));\n   }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   // Normalized pixel coordinates (from 0 to 1)\n   vec2 uv = fragCoord/iResolution.xy;\n   uv=uv-0.5;\n   uv=uv*2.0;\n   uv=abs(uv);\n   //fixing aspect ratio\n   uv.x=uv.x*iResolution.x/iResolution.y;\n   float uv0=length(uv);\n   vec3 finalcolor = vec3(0.0);\n  \n   //introducing iterations\n   for(float i=0.0;i<3.0;i++){\n  \n       //spatial repetition\n       uv=fract(uv*1.5);\n       uv-=0.5;\n\n\n       //introducing radial distortion\n       float d=length(uv);\n       d=sin(d*8. + i*4.0 + iTime)/8.0;\n       d=abs(d);\n       d=0.03/d;\n\n\n       //color\n       vec3 col=pallete(uv0 +iTime*0.4);\n       finalcolor += col*d;\n  \n   }\n   finalcolor*=vec3(0.2,0.2,0.2);\n  \n   // Output to screen\n   fragColor = vec4(finalcolor,1.0);\n}\n","name":"Image","description":"","type":"image"}]}