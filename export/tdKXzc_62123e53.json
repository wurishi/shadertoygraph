{"ver":"0.1","info":{"id":"tdKXzc","date":"1574675525","viewed":296,"name":"floating colors: red on green","username":"FabriceNeyret2","description":"top: isoluminance colors seem to float    ( assuming your screen gamma is correclty set ;-) ).\nbottom: not isoluminant. \npure green is perceived as twice more luminous than red, which ease the mostly B&W human vision shape segmentation.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["perception","isoluminance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n\n// UIT-R BT 601 def of luma https://fr.wikipedia.org/wiki/Luminance#Matri%C3%A7age\n// Y '= .299  R' + .587  G' + .114  B'\n    \n// choose G=g with same luminance than R=1:\n    float g = .299/.587;     //  ( = .51 )\n    \n// choose R=1, G=gr with same luminance than G=1:  .299 +.587*gr = .587 \n    float gr = 1.- .299/.587; // ( = .49 ) \n//  float gr = iMouse.y/R.y;\n    \n    vec2 R = iResolution.xy;\n    if ( U.x-.5 == floor(R.x/2.) ||  U.y-.5 == floor(R.y/2.) )  { O-=O; return; }\n    U = ( 2.*U - R ) / R.y;\n  //if (U.x*U.y==0.) { O-=O; return; }\n    \n    float m = smoothstep(0.,6./R.y,length(U)-.5);\n    \n    if ( U.y < 0. ) gr = 0., g = 1.;\n    O = U.x < 0.\n       ? mix( vec4(1,gr,0,1), vec4(0,1,0,1), m )\n       : mix( vec4(1,0,0,1), vec4(0,g,0,1), m );\n\n    \n    O = pow( O, vec4(1./2.2) ); // gamma correction\n}","name":"Image","description":"","type":"image"}]}