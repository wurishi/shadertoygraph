{"ver":"0.1","info":{"id":"wlc3DH","date":"1576176441","viewed":127,"name":"My First Raymarched Scene","username":"TheCreator","description":"This is my first raymarched scene I created, following this tutorial: https://www.youtube.com/watch?v=yxNnRSefK94","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","color","first"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 point) {\n    vec3 q = fract(point) * 2.0 - 1.0;\n    \n    return length(q) - 0.3;\n}\n\nfloat trace(vec3 origin, vec3 direction) {\n    float trace = 0.0;\n    \n    for(int i = 0; i < 40; i++) {\n        vec3 intersectPoint = origin + direction * trace;\n        \n        float dist = map(intersectPoint);\n        trace += dist * 0.5;\n    }\n    \n    return trace;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 direction = normalize(vec3(uv, 1.0));\n    float timeMod = iTime * 0.25;\n    direction.xz *= mat2(cos(timeMod), -sin(timeMod), sin(timeMod), cos(timeMod));\n    \n    vec3 origin = vec3(0.0, timeMod * 2.0, timeMod);\n    \n    float trace = trace(origin, direction);\n    \n    float fog = 1.0 / (1.0 + trace * trace * 0.01);\n    vec3 color = vec3((0.5 * cos(timeMod) + 0.5) * fog, (0.5 * cos(2.0 + timeMod) + 0.5) * fog, (0.5 * cos(4.0 + timeMod) + 0.5) * fog);\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}