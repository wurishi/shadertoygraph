{"ver":"0.1","info":{"id":"4lt3Ds","date":"1472487167","viewed":213,"name":"the shape dimension","username":"zardoru","description":"wavy background courtesy of dividing by z\nit was way easier than I thought!","likes":1,"published":1,"flags":96,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"MsjGzK","filepath":"https://soundcloud.com/skylarspence/private-caller","previewfilepath":"https://soundcloud.com/skylarspence/private-caller","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pi = 3.1415;\n\tvec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n    vec2 uva = fragCoord.xy / iResolution.xy - 0.5;\n    uv.x *= 2.;\n    \n    uv /= (cos(uva.y * 2.5 + iTime)) * 0.2 + 0.5 + (sin(uva.x * 2.5 + iTime)) * 0.2;\n    \n    \n    vec2 urot = uv;\n    urot *= abs(sin(iTime)) * 2. + 1.;\n    urot += iTime;\n\n    uv *= 4.5 + sin(iTime);\n    float rt = iTime;\n    mat2 rot = mat2(cos(rt), -sin(rt),\n                   \tsin(rt), cos(rt));\n    \n    uv = rot * uv;\n    \n    \n    float dst = length(uv);\n    float a = (acos(uv.x / dst));\n    \n    float N = floor(5. + sin(iTime * 2.) * 2.);\n    float r = cos(pi / 4.) / cos (a - 2.*pi/N * floor(a*N/(2.*pi) + .5));\n    \n    \n    float checker = texture(iChannel0, fract(urot)).x;\n    float cir = (1.-step(r * 3., dst));\n\tfragColor = vec4( cir, checker, checker, 0.0 );\n    //fragColor = vec4(r);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n    if (uv.x * uv.y < 0.)\n        fragColor = vec4(1.0);\n    else\n        fragColor = vec4(0.0);\n}","name":"Buf A","description":"","type":"buffer"}]}