{"ver":"0.1","info":{"id":"McKcRt","date":"1732269898","viewed":132,"name":"Horus","username":"gebothy","description":"First Shader","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \n   First shader. Followed this tutorial: https://youtu.be/f4s1h2YETNY\n*/\n\n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1., 0.7, 0.5);\n    vec3 d = vec3(0.00, 0.15, 0.30);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract(vec2(uv.y, (cos(uv.x),0.0,1.))) - .5;\n        \n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(uv.x * uv.x + uv.y * uv.y);\n\n        d = sin(d*8. + iTime)/4.;\n        d = abs(d);\n\n        d = pow(0.04 / d, .8);\n\n        d = sin(d * 8.0 + iTime) / 4.0;\n        d = abs(d);\n        d = pow(0.04 / d, .8);\n        d = clamp(d, -1.0, 1.0);\n        finalColor += col * asin(d);\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}