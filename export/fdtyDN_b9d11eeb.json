{"ver":"0.1","info":{"id":"fdtyDN","date":"1653483970","viewed":139,"name":"Tennis field","username":"Flopine","description":"A new truchet experiment :D","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","truchet","hexagonal","tilling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define hr vec2(sqrt(3.),1.)\n\n#define PI acos(-1.)\n#define TAU (2.*PI)\n#define rot(a) mat2(sin(a),cos(a),-sin(a),cos(a))\n\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.07,fwidth(val-thre)))\n#define circle(uv,s) (length(uv)-s)\n\n\nvec4 hexgrid (vec2 uv)\n{\n    vec2 ga=mod(uv,hr)-hr*.5, gb=mod(uv-hr*.5, hr)-hr*.5, \n    guv=dot(ga,ga)<dot(gb,gb)? ga:gb, gid=uv-guv;\n    \n    return vec4(guv,gid);   \n}\n\nfloat csize = 0.8;\nfloat pattern1 (vec2 uv)\n{\n    float d = AAstep(0.02, abs(abs(uv.x)-0.04));\n    uv.y = abs(uv.y)-csize*1.155;\n    return d*AAstep(0.06, abs(circle(uv, csize)));\n}\n\nfloat pattern2 (vec2 uv)\n{\n    float symaxis = step(0., uv.x*sqrt(3.)+uv.y);\n    float d = AAstep(0.06, abs(uv.x-uv.y*sqrt(3.)));\n    vec2 offset = (symaxis>0.5) ? -hr*0.46 : hr*0.463;\n    return d*AAstep(0.06, abs(circle(uv+offset, csize)));\n}\n\nfloat pattern3 (vec2 uv)\n{\n    uv.x = -uv.x;\n    return pattern2(uv);\n}\n\nfloat frame (vec2 uv)\n{\n    uv.y += iTime;\n    vec4 hgrid = hexgrid(uv);\n    // thanks IQ! :D \n    float noise = textureLod(iChannel0, hgrid.zw*0.05,0.0).x*3., pat; \n    vec2 new_uv = hgrid.xy;\n    int inoise = int(noise);\n    \n    if (inoise == 0) pat = pattern1(new_uv);\n    if (inoise == 1) pat = pattern2(new_uv);\n    if (inoise == 2) pat = pattern3(new_uv);\n    \n    return pat;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    uv *= 5.;\n    \n    vec3 col = mix(vec3(1.),vec3(0.5,0.1,0.02),clamp(frame(uv),0.,1.)); \n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}