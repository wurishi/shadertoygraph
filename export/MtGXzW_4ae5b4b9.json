{"ver":"0.1","info":{"id":"MtGXzW","date":"1483198489","viewed":533,"name":"BinEqualizer","username":"levonchic","description":"My attempt to make sound visualizer :/","likes":1,"published":1,"flags":64,"usePreview":0,"tags":["sound","equalizer","soundcloud","greenpoints"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ls2GRK","filepath":"https://soundcloud.com/saadiqahxyadira/my-little-pony-pinkie-pie","previewfilepath":"https://soundcloud.com/saadiqahxyadira/my-little-pony-pinkie-pie","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_POINTS 24              // Number of rows\n#define NUM_BREAKS 24              // Number of columns\n#define RADIUS     4.2             // Circle radius\n#define RADIUS2    RADIUS * RADIUS // Circle radius^2\n#define DIAMETER   RADIUS * 2.0    // Circle diameter\n\n#define PADDING_Y  4.0             // Padding by Y-axis\n#define PADDING_X  24.0            // Padding by X-axis\n\n#define BLACK      3               // Black decoradions (0 = gray, 1 = black, 2 = transparent)\n#define SOUND_MODE 0               // 1 - render wawe, 0 - render frequnces\n#define BACKGROUND 1               // Enable/disable background\n\nvec4 getBackground(vec2 uv) {\n    if(BACKGROUND == 1)\n    \treturn texture(iChannel1, vec2(uv.y / 2.0, uv.x)) - 0.2;\n    else \n        return vec4(0.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Find width of the break\n    float breakWidth = (iResolution.x - PADDING_X) / float(NUM_BREAKS);\n    fragCoord.x -= PADDING_X / 2.0;\n    fragCoord.y -= PADDING_Y / 2.0;\n\t\n    // Find current render column\n    int fragColumn = -1;\n    for(int i = 0; i < NUM_BREAKS; i++) {\n        if(fragCoord.x > breakWidth * (float(i) + .5) - DIAMETER && fragCoord.x < breakWidth * (float(i) + .5) + DIAMETER) {\n            fragColumn = i;\n            break;\n        }\n    }\n    \n    // No column found\n    if(fragColumn == -1) {\n        fragColor = getBackground(uv);\n    \treturn;\n    }\n    \n    // Find height of the break\n    float breakHeight = (iResolution.y - PADDING_Y) / float(NUM_POINTS);\n    \n    // Distance by X-axis to the center of circle\n    float dx2 = fragCoord.x - ((float(fragColumn) + .5) * breakWidth);\n    // Dist^2\n    dx2 *= dx2;\n    \n    // Find current render row (or circle)\n    int fragRow = -1;\n    for(int i = 0; i < NUM_POINTS; i++) {\n        // Determine, it's inside me.. AAAAAAA.. HELP ME.. GET IT OUT.. NOOOOOO...\n        float dy2 = fragCoord.y - ((float(i) + .5) * breakHeight);\n        dy2 *= dy2;\n        if(dx2 + dy2 < RADIUS2) {\n            fragRow = i;\n    \t\tbreak;\n    \t}\n    }\n    \n    // Check if not in circle\n    if(fragRow == -1) {\n        fragColor = getBackground(uv);\n        return;\n    }\n    \n    // Get current sound value for column\n    float pitch = texture(iChannel0, vec2(float(fragColumn) / float(NUM_BREAKS), (SOUND_MODE == 1) ? 1.0 : 0.0)).x;\n    \n\t// Get current circle Y in UV mapping \n    float circleY = (float(fragRow) + .5) * breakHeight;\n    circleY /= iResolution.y;\n    \n    // Render circle if fragged\n    if(circleY < pitch) {\n        if(circleY > .66)\n            fragColor = vec4(1.0, 0.0, 0.0, 0.0);\n        else if(circleY > .33)\n            fragColor = vec4(1.0, 1.0, 0.0, 0.0);\n        else\n            fragColor = vec4(0.0, 1.0, 0.0, 0.0);\n    }\n    \n    // Else render gray dot (or black)\n    else \n        if(BLACK == 1)\n            fragColor = vec4(0.0);\n        else if(BLACK == 2)\n            fragColor = vec4(.34, .34, .34, 1.0);\n        else\n            fragColor = getBackground(uv);\n}","name":"Image","description":"","type":"image"}]}