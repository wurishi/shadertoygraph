{"ver":"0.1","info":{"id":"XXffRN","date":"1728066573","viewed":27,"name":"Basic_Sponge_Fractal","username":"tholzer","description":"A very simple 2d fractal, just mirror, rotate and scale ;)\nChange iteration deep by moving mouse.x  \nand thickness by mouse.y ;-)\nNow drawing circles antialiased.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","sponge","aa","iteration","cirles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\n//---------------------------------------------------------------\n// Shader:  Basic_Sponge_Fractal.glsl     2024-10-04\n//\n// Fork of https://www.shadertoy.com/view/Mss3Wf by PauloFalcao \n//\n// A very simple fractal, just mirror, rotate and scale ;)\n// Change iteration deep by setting mouse.x \n// and thickness by mouse.y ;-)\n// Now drawing circles antialiased.\n//\n//---------------------------------------------------------------\n\nconst int defIterations = 5; //default iterations at start\nconst int maxIterations = 8; //a nice value for fullscreen is 8\n\n//return rotated uv position\nvec2 rot(vec2 uv, float a)\n{  \n  float ca = cos(a), sa = sin(a);\n  return vec2(uv.x*ca - uv.y*sa, \n              uv.y*ca + uv.x*sa);\n}\n\n#define R iResolution\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  // transform with origin at window center\n  vec2 uv = (fragCoord -0.5* R.xy) / R.y;    // y: -0.5 .. 0.5\n\n  //global rotation and zoom\n  uv = rot(uv, iTime*0.1);\n  uv *= sin(iTime)*0.25 + 1.7;\n\t\n  // get iterations and circle size\n  int iterations = defIterations;\n  if (iMouse.x > 0.0) \n    iterations = int((float(maxIterations) * iMouse.x) / R.x);\n  float circleSize = (0.7+iMouse.y / R.y) / (3.0*pow(2.0, float(iterations)));\n\n  //mirror, rotate and scale n times...\n  float s = 0.3;\n  for(int i=0; i<iterations; i++)\n  {\n    uv = abs(uv) - s;\n    uv = rot(uv, iTime*0.5);\n\ts = s/2.3;\n  }\n\t\n  //draw antialiased circle\n  float f = 4.0 / iResolution.x;\n  float c = smoothstep(-f, f, length(uv) - circleSize);\t\n  fragColor = vec4(c,c,c,1.0);\n}\n","name":"Image","description":"","type":"image"}]}