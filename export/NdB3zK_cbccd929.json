{"ver":"0.1","info":{"id":"NdB3zK","date":"1617628175","viewed":987,"name":"[4k] Mesh Odyssey","username":"Kali","description":"Shadertoy version of the 4kb intro by LIA, 2nd place at Revision 2021 online. Code by me, music by uctumi.","likes":59,"published":1,"flags":64,"usePreview":0,"tags":["raymarching","fractal","4k"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MtXXWN","filepath":"https://soundcloud.com/pablo-andrioli/mesh-odyssey-11","previewfilepath":"https://soundcloud.com/pablo-andrioli/mesh-odyssey-11","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//        ___.                       ___            .___ ___________\n// ,___ _\\(   |._____________ __. __\\(__/___. ______\\|_  \\\\          )_. ________,\n// |%%% |     ||            //  |/          |/        /                | %%%%%%%%|\n// |%%% |    _||                |           |        _                 | %%%%%%%%|\n// |'_ _|    \\                 _|          _|        |                 |_ _ `%%%%|\n//  .\\)\\_______________________)|__________)|________|__________________/(/.\n// <------------------------------------------------------------------------diP->>\n//         l a t i t u d e  i n d e p e n d e n t  a s s o c i a t i o n\n// <<---------------------------------------------------------------------------->\n// \n//                                     L.I.A.\n// \n//                                    presents\n// \n//                                 \"Mesh Odyssey\"\n// \n// \n//                             a 4 kilobytes PC intro\n// \n// \n// \n// --------------------------------- Release Info --------------------------------\n// \n// \n//                                  code by: Kali\n//                                  music by: Uctumi\n// \n//    We bring you this time \"Mesh Odyssey\", our latest 4kb intro for Revision\n//    2021 online. Tools used: Leviathan 2.0 / 4klang 3.0\n//    This one's a little encoder killer, so it's better to run it on a nice\n//    PC in order to watch it properly.\n// \n//    Kali wants to thank Barbi, Alejo, Migue and Keyla for their support.\n// \n// \n// ------------------------------------ Members -----------------------------------\n// \n// \n// \n// \n// \n//             Bitnenfer - Foco - Kali - Pixel Syndrome - Riq - Uctumi\n// \n// \n// ----------------------------------- Contact -----------------------------------\n// \n// \n//                          http://liagroup.is-great.org\n// \n// \n// ---------------------------------- Greetings ----------------------------------\n// \n// \n//                      To all fellow demosceners of the world!\n//             Specially: PVM - Hokuto Force - Azop - Christian Kleinhus\n//                           Dipswitch - QOP - JPupper\n// \n// \n// -------------------------------------------------------------------------------\n// \n// \n// \n//                         Signing off... The LIA crusaders\n\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define sm(a,b,c) smoothstep(a,b,c)\n#define iTime iChannelTime[0]\n\n\nfloat it=0., gcol=0.,hcol=0.,tcol=0.,fcol=0.,shcol=0., t, det=.0015, turbo;\nvec3 shdir,shfrom;\n\n\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat sdBoundingBox( vec3 p, vec3 b, float e)\n{\n       p = abs(p  )-b;\n  vec3 q = abs(p+e)-e;\n\n  return sqrt(min(min(dot2(max(vec3(p.x,q.y,q.z),0.0)),\n                      dot2(max(vec3(q.x,p.y,q.z),0.0))),\n                      dot2(max(vec3(q.x,q.y,p.z),0.0)))) \n         +min(0.0,min(min( max(p.x,max(q.y,q.z)),\n                           max(p.y,max(q.z,q.x))),\n                           max(p.z,max(q.x,q.y))));\n}\n\nfloat line( vec2 p, vec2 a, vec2 b)\n{\n  vec2 pa = p - a, ba = b - a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n  return length( pa - ba*h );\n}\n\nfloat logo(vec2 uv) {\n    uv.y+=3.4;\n    uv*=.4;\n    uv.y*=-1.2;\n    float c = line(uv, vec2(-.65,.3), vec2(-.65,-.3));    \n\tc = min(c,line(uv, vec2(-.65,-.3), vec2(-.35,-.3)));\n\tc = min(c,line(uv, vec2(-.15,.3), vec2(-.15,-.3)));\n\tc = min(c,line(uv, vec2(.25,.3), vec2(.05,-.3)));\n\tc = min(c,line(uv, vec2(.3,.3), vec2(.50,-.3)));\n\tc = min(c,line(uv, vec2(.5,-.3), vec2(.2,-.3)));\n    return sm(.06,.05,c);\n}\n\n\nmat3 lookat(vec3 dir, vec3 up) {\n    vec3 r=cross(dir,up);\n    return mat3(r,cross(dir,r),dir);\n}\n\n\nvec3 path(float t) {\n\treturn vec3(sin(t*.25)*1.5,cos(t*.5)+3.+sm(0.,2.,1.+sin(t*.25))*2.,t);\n}\n\nvec3 pathcam(float t) {\n\tvec3 p=path(t);\n    p.x+=sm(0.,2.,1.+sin(t*.5))*(1.+sin(t*.09)) * sm(170.,150.,t);\n    p.y-=.2-sm(55.,70.,t) * 2.5 + (sm(90.,100.,t)-sm(120.,130.,t))*1.5;\n    return p;\n}\n\nfloat ship(vec3 p)\n{\n    float bou=length(p)-.25, ale, tur, cas;\n    if (bou>det+.1) return bou;\n    p=lookat(shdir,vec3(0.,1.,0.))*p;\n    p.z*=-1.;\n    p.xy*=rot(shdir.x*1.7-sm(80.,81.,iTime)*3.1416*2.);\n    vec3 p2 = p;\n    p.z*=.9;\n    p.y*=5.+sm(.05,.1,abs(p.x))*4.;\n    p.x*=1.+sm(0.1,0.,p.z);\n    p.y-=sm(.07,.05,abs(p.x))*.15*sm(0.,-.1,p.z)*sm(-.2,-.1,p.z)*step(0.,p.y)+sm(.05,.1,abs(p.x))*.2*sm(-.15,.1,p.z);\n    p.z-=sm(.1,.22,abs(p.x))*.1;\n    cas=max(length(p)-.2,p.z-.18);\n    p=p2;\n    p.y-=.025;\n    p.z-=.1;\n    p.yz*=rot(-.3);\n    ale = length(max(vec3(0.),abs(p)-vec3(-.00,.03,.09)))-.004;\n    cas=min(cas,ale*2.);\n    p=p2;\n    p.z-=.2;\n    p.z*=.15-step(0.1,turbo)*.1;\n    p.x=abs(p.x)-.025;\n    tur=length(p)-.001+sin(iTime*30.+sign(p2.x))*.001;\n    shcol=.3+sm(.02,.019,abs(p.x-.01))*.4;\n    if (p2.y>0.01&&p2.z<-.01&&abs(p2.x)<.03) shcol=0.01;\n    if (p2.z>0.18&&abs(p2.x)<.05&&p.y<.03) shcol=0.0;\n    tcol=max(tcol,max(0.,.02-tur)/.02);\n    return cas*.4;\n}\n\nfloat de(vec3 pos) {\n    shcol=0.;\n\tfloat tur=length(pos.xy-pathcam(pos.z).xy)-.3,\n        shi=ship(pos-shfrom),\n        sph=length(pos-path(-8.)+vec3(0.,3.,0.))-10.-abs(.5-fract(pos.y*5.))*.1*sm(5.,3.,pos.y),\n        ch=sm(80.,81.,iTime),\n        z = pos.z, d=1000.,o=d,der=1.,sc, l;\n    pos.xy-=path(pos.z).xy;\n    if (iTime<12.) l=logo(pos.xy);\n    mat2 rot1 = rot(z*.05*(1.-ch)+sm(94.5,95.5,iTime)*1.5), rot2 = rot(-ch);\n    pos.y-=1.2;\n    pos.x-=1.;\n    pos.xy=mod(pos.xy+4.5,9.)-4.5;\n    pos.z=mod(pos.z,8.)-4.;\n    vec3 p=pos;\n    for (int i=0; i<7; i++) {\n        p.xy*=rot1;\n        p.yz*=rot2;\n        p.xz=abs(p.xz);\n        p.y+=1.;\n        sc=1.5/clamp(dot(p,p),0.1,1.0);\n\t\tp=p*sc-vec3(2.,1.,3.);\n        der*=sc;\n        float shp=sdBoundingBox(p,vec3(1.,1.,2.),.02)/der;\n        if (shp<d && i>1) {\n            d=shp;\n            it=float(i);\n        }\n        o=min(o,dot(p.xy,p.xy));\n    }\n    d=min(d,length(p.xy)/der-.01);\n    d-=.003*ch;\n    gcol=step(fract(iTime*1.17+it/6.),.15)*6.*(step(26.5,iTime)-step(106.5,iTime));\n    hcol+=pow(fract(pos.z*.2+iTime*.7+p.z*.02),50.)*.2*step(iTime,106.5);\n    fcol=exp(-10.*o)*.7;\n    d=min(d,sph);\n    d=max(d,-tur);\n    d=min(d,shi);\n    if (d==sph) gcol=5.+l*5.; fcol+=l*.5;\n    if (d==shi) gcol=fcol=hcol=0.; else shcol=0.;\n    hcol+=sm(123.,130.,iTime);\n    return d*.85;\n}\n\nvec3 normal(vec3 p) {\n\tvec2 e=vec2(0.,det);\n    return normalize(vec3(de(p+e.yxx),de(p+e.xyx),de(p+e.xxy))-de(p));\n}\n\nvec3 shade(vec3 p, vec3 dir, vec3 n) {\n    return (vec3(.025,.075,.15)+shcol+fcol)*abs(n.x);\n}\n\n\nvec3 march(vec3 from, vec3 dir) {\n\tvec3 p=from, col=vec3(0.), refcol=col;\n    float totdist=0.,d=0.,ref=0.,g=0.,h=hash12(dir.xy*1000.+iTime);\n    for(int i=0; i<100; i++) {\n\t\tp+=dir*d*(.9+h*.2);\n        d=de(p);\n        det*=1.+totdist*.02;\n        if (d<det && shcol>0. && ref<.5)\n        {\n            d=det;\n            vec3 n=normal(p);\n            refcol=shade(p,dir,n);\n            dir=reflect(dir,n);\n            ref=1.;\n        }\n        if (d<det) break;\n        totdist+=d;\n        g+=exp(-.03*totdist)*gcol;\n    }\n    col=mix((.5+sm(12.,15.,iTime)*.5)*vec3(.8,.9,1.),shade(p,dir,normal(p)),exp(-.1*totdist))\n        +pow(g*.012,1.5)*vec3(1.2,.4,.2)+hcol*vec3(.7,.5,1.)*step(61.,iTime);\n    return mix(col,refcol,ref*.85)+tcol*vec3(3.,1.,.5)+(h-.5)*.1;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    t=iTime*1.5-15.+sm(40.,47.,iTime)*10.-sm(107.,120.,iTime)*7.+sm(85.,90.,iTime)*2.;\n    turbo=sm(108.,112.,iTime)*8.;\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n    vec3 from = pathcam(t+.7*sign(iTime-40.5)*sign(58.-iTime)*sign(101.5-iTime)*(1.25-.5*sin(iTime/2.))), \n    to = pathcam(t+.2+turbo), dir = normalize(vec3(uv,.7-sm(5.,0.,iTime)*.2));\n    if (iTime<13.5) from=pathcam(9.5-iTime*.5),uv.y+=.0,from.y-=sm(10.,0.,iTime)*.8;\n    if (abs(iTime-57.5) < 3.5) from = pathcam(82.+sin(iTime*.5));\n    if (abs(iTime-71.) < 3.5 || abs(iTime-91.25) < 3.25) from.x += 5., from.z -=1.;\n    shfrom = pathcam(t+turbo);\n    shdir = normalize(to-shfrom);\n    vec3 adv = normalize(to-from);\n    adv.y*=sign(to.z-from.z);\n    from.x+=shdir.x*.3*step(13.5,iTime);\n    dir.yz*=rot(max(0.,.5-iTime*.07));\n    dir*=lookat(adv,vec3(0.,1.,0.));\n    fragColor = vec4(march(from, dir)*min(1.,iTime*.5),1.0)*(1.-turbo*.15);\n}","name":"Image","description":"","type":"image"}]}