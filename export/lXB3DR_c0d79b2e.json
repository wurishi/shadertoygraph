{"ver":"0.1","info":{"id":"lXB3DR","date":"1708352177","viewed":65,"name":"Trippybt","username":"shadertoyusr","description":"shader from tutorial","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 getColor(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec3 getColorFire(float t) {\n    vec3 a = vec3(0.5, 0.4, 0.25);\n    vec3 b = vec3(0.5, 0.5, 0.666);\n    vec3 c = vec3(0.5, 0.666, 0.8);\n    vec3 d = vec3(0.5, 0.666, 0.8);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    float len = length(uv);\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-len);\n        vec3 col = getColorFire(len + i * 0.4 + iTime * 0.4);\n\n        d = sin(d * 8. + iTime) / 8.;\n        d = abs(d);\n        d = pow(0.01 / d, 1.2);\n        d = smoothstep(0.0, 1.0, d);\n\n        finalColor += col * d;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}