{"ver":"0.1","info":{"id":"3t3yRH","date":"1608437133","viewed":106,"name":"hoeled_grid","username":"hoeled","description":"I saw this: https://www.shadertoy.com/view/wtSfRm\n\nand made this.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define tilesY 4. \n\nfloat Hash21(vec2 p) {\n\tp = fract(p*vec2(123.34, 456.21));\n    p += dot (p, p+45.32);\n    return fract(p.x*p.y);\n}\n\nfloat Square(vec2 uv, float size) {\n\tvec2 s = abs(uv) - vec2(size);\n    float square = length(max(s, .0));\n    square = smoothstep(.001, .0, square);\n    return square;\n}\n\nvec3 Grid(vec2 uv, float aa) {\n    vec3 col = vec3(0.);\n    vec2 gv = fract(uv*1.)-.5;\n    vec2 id = floor(uv);\n    \n    for(int y=0; y<=13; y++) {\n        for(int x=-1; x<=13; x++) {\n            vec2 offset = vec2(x, y);\n        \tfloat n = Hash21(id+offset);         \n            col = vec3(Square(gv, .5-aa)*n*(sin(iTime*.5*n)*.5+.5));\n            col *= smoothstep(1., 0., length(gv))*.4+(sin(iTime*1.4+float(x)*n+float(y)*n)*.04);\n            col += vec3(.07, .0, .09);\n            col *= 1.6;\n        }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv *= tilesY;\n    vec3 col = vec3(0.);\n    float aa = 2. / iResolution.y;\n        \n    vec3 grid = Grid(uv, aa);\n    col += grid;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}