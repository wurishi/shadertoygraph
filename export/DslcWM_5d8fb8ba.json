{"ver":"0.1","info":{"id":"DslcWM","date":"1686862585","viewed":109,"name":"Hex Grid Shenanigans","username":"Goki","description":"Followed The Art of Code's hex tiling tutorial today! Learned a lot and after some playing around I was able to stumble across this cool animation :)\n\nEdit: After messing with it some more I found a bunch of cool patterns and effects and I'm saving all.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["hexagonaltiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hexDist(vec2 p)\n{\n    p = abs(p);\n    return max( dot(p,normalize(vec2(1,1.73))), p.x );\n}\n\nvec4 hexCoords(vec2 uv)\n{\n    vec2 r = vec2(1, 1.73);\n    vec2 h = r*.5;\n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n\n    vec2 gv = length(a)<length(b)?a:b;\n    vec2 id = uv-gv;\n\n    return vec4( gv,id );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    uv *= 10.;\n    \n    vec4 hc = hexCoords(uv);\n    \n    /* // --cool red diagonal swipe across the screen--\n    vec3 col = vec3(0);\n    col.r = 1./(abs(uv.x-uv.y-tan(iTime))*2.5*tan(iTime)+0.95);\n    col -= smoothstep( .01, .05, .5-hexDist(hc.xy) );\n    */        \n    \n    /* // --pulsing wave thingy--\n       // I don't like how long it stays on the yellow but I can't figure out how to change it\n       // Maybe a different approach altogether\n    vec3 col = vec3(.9, .1, .6);\n    col.rg += abs(abs(hc.z*.09)-tan(iTime));\n    */\n    \n    /* // --default neon hex grid--\n    vec3 col = vec3(.5, .2, .1);\n    col *= .1/smoothstep( .01, .45, .5-hexDist(hc.xy) );\n    */\n    \n     // --FAVORITE THING EVER--\n     // Honestly man this one is the most fun of them all\n     // No matter what you change you're gonna get a cool effect\n     // I encourage you to play with the formulas and the numbers ;)\n    vec3 col = vec3(.1, .6, .3); // .3,.1,.1 is cool\n    float d = sin(hexDist(uv)-iTime*1.);\n    col *= d + .5-hexDist(hc.xy); // * instead of + also gives a really neat effect\n    col /= .1*uv.x+uv.y/9.; // this is where all of the fun is at\n    col = abs(.2/col);       // this one makes the cool effect\n        \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}