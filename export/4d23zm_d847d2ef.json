{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// depth from reference point on frustum to camera\nconst float PI = 3.14159;\nconst float FD = 2.1583468527305348600363230610125;\nconst float ROLL_SPEED = 1.0;\nconst float PIT_SPEED = 1.0;\nconst float YAW_SPEED = 1.0;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// the screen's uv in view space\n\tvec3 uv = vec3(fragCoord.xy / iResolution.xx, FD) - vec3(0.5, 0.5 * iResolution.y / iResolution.x, 0.0);\n\t\n\t// swizzle into different coordinate system, so that z is up\n\tuv = uv.xzy;\n\t\n\t// the direction of the ray cast out of the frustum\n\tvec3 rd =\t\t\n\n\t\t\n\t\t\n\t\t// x-axis camera rotation (pitch)\n\t\t\n\t\tmat3(\n\t\t\t1.0, 0.0, \t\t\t\t\t\t\t\t0.0,\n\t\t\t0.0, cos(PIT_SPEED * iTime), \t\t-1.0 * sin(PIT_SPEED * iTime),\n\t\t\t0.0, 1.0 * sin(PIT_SPEED * iTime), 1.0 * cos(PIT_SPEED * iTime)) *\t\t\t\n\t\t\n\t\t\n\t\t// y-axis camera rotation (roll)\n\t\t\n\t\tmat3(\n\t\t\tcos(ROLL_SPEED *iTime),\t\t\t0.0,\t1.0 * sin(ROLL_SPEED * iTime),\n\t\t\t0.0,\t\t\t\t\t\t\t\t\t1.0,\t0.0,\n\t\t\t-1.0 * sin(ROLL_SPEED * iTime),\t0.0,\tcos(ROLL_SPEED * iTime)) *\n\t\t\t\n\t\t\n\t\t// z-axis camera rotation (yaw)\n\t\t\n\t\tmat3(\n\t\t\tcos(YAW_SPEED * iTime), -1.0 * sin(YAW_SPEED * iTime), \t0.0,\n\t\t\tsin(YAW_SPEED * iTime),\tcos(YAW_SPEED * iTime),\t\t\t0.0,\n\t\t\t0.0,\t\t\t\t\t\t\t0.0,\t\t\t\t\t\t\t\t\t1.0) *\t\t\n\t\t\n\t\tuv;\n\t\n\tvec3 pos = uv + vec3(0.0, 0.0, 5.0);\n\t\n\n\tfragColor = rd.z >= 0.0 ? \n\t\tvec4(0.0, 0.0, 1.0, 1.0) :\n\t\ttexture(iChannel0, 0.1 * (pos + rd * (pos.z / rd.z)).xy);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4d23zm","date":"1385351060","viewed":188,"name":"Textured Floor","username":"kp1197","description":"A simple analytic solution to drawing a textured floor... a self-instructional tool.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["simple","analytic"],"hasliked":0,"parentid":"","parentname":""}}