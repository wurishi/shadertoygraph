{"ver":"0.1","info":{"id":"MdcBRn","date":"1523957732","viewed":107,"name":"Bonometaballs","username":"bonofobia","description":"blobbiething","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blobs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//A metaball 'tutorial'\n#define ANIMATION_SPEED_FACTOR 1.0\n    \n#define NUM_BLOBS 10\n#define SPHERE 0\n#define CUBE 1\n#define DIAMOND 2\n#define HLINE 3\n#define VLINE 4\n\nvec4 colorize(float energy)\n{\n    vec3 color=vec3(energy,0,0);\n    if(energy>1.0)\n    {\n        color.x=1.0;\n        color.z=energy-1.0;\n    }\n    if(energy>2.0)\n    {\n        color.x=1.0;\n        color.y=energy-2.0;\n        color.z=1.0;\n    }\n    return vec4(color,1.0);\n}\n\n\nstruct blob {float distribution; float sd;float cd; int type;};   \nblob[] blobs=blob[NUM_BLOBS]\n(\n\tblob(10.0,\t1.57,\t\t3.14,\tSPHERE),\n    blob(15.0,\t3.14, \t\t1.57,\tSPHERE),\n    blob(20.0,\t3.24, \t\t1.77,\tSPHERE),\n    blob(25.0,\t3.34, \t\t1.97,\tSPHERE),\n    blob(30.0,\t3.44, \t\t2.17,\tSPHERE),\n    blob(35.0,\t3.54, \t\t2.37,\tSPHERE),\n    blob(20.0,\t1.05,\t\t0.63,\tCUBE),\n    blob(10.0,\t0.68, \t\t1.05,\tDIAMOND),\n    blob(100.0,\t0.0, \t\t1.0,\tHLINE),\n    blob(100.0,\t2.15, \t\t0.0,\tVLINE)\n    \n);    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord;\n    \n    float energy=0.0;\n    float hx=iResolution.x/2.0;\n    float hy=iResolution.y/2.0;\n    float ratio=iResolution.x;\n    \n    float tt=iTime/(1.0/ANIMATION_SPEED_FACTOR);\n    \n    for(int i=0;i<NUM_BLOBS;i++)\n    {\n        blob b=blobs[i];\n        float radius=ratio/b.distribution;\n        float bx=(hx-radius)*sin(b.sd*tt)+hx;\n        float by=(hy-radius)*cos(b.cd*tt)+hy;\n        switch(b.type)\n        {\n            case SPHERE:\n            \tenergy+=radius/sqrt(pow(uv.x-bx,2.0)+pow(uv.y-by,2.0));\n            \tbreak;\n            case CUBE:\n            \tenergy-=radius/max(abs(uv.x-bx),abs(uv.y-by));\n            \tbreak;\n            case DIAMOND:\n            \tenergy-=radius/(abs(uv.x-bx)+abs(uv.y-by));\n            \tbreak;\n           \tcase HLINE:\n            \tenergy+=radius/abs(uv.y-by);\n            \tbreak; \n           \tcase VLINE:\n            \tenergy+=radius/abs(uv.x-bx);\n            \tbreak;        }\n    }\n    fragColor=colorize(energy);\n}","name":"Image","description":"","type":"image"}]}