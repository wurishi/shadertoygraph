{"ver":"0.1","info":{"id":"3scGWr","date":"1568155083","viewed":139,"name":"SpiralOrder","username":"MrShoor","description":"Example how to convert integer point index to position on a grided spiral","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math","spiral","ordering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SolveSqr(float A, float B, float C){\n    float D = B*B-4.0*A*C;\n    if (D < 0.0) return 0.0;\n    return (-B+sqrt(D))/(2.0*A);\n}\n\nvec2 SpiralPos(uint idx) {\n    if (idx == 0u) return vec2(0.0);\n    idx--;\n    \n    float a0 = 8.0;\n    float d = 8.0;\n    float n = floor( SolveSqr(d, 2.0*a0-d, -2.0*float(idx)) );\n    float loop_pos_idx = float(idx) - (a0 + d*(n-1.0)*0.5)*n;\n    \n    uint edge_idx = uint(loop_pos_idx) / uint(2.0*n+2.0);\n    uint edge_pos_idx = uint(loop_pos_idx) % uint(2.0*n+2.0);\n    \n    vec2 pos = vec2(0.0);\n    vec2 dir = vec2(0.0);\n    switch (edge_idx) {\n        case 0u: {\n            pos = vec2(n+1.0, n+1.0);\n            dir = vec2(-1.0, 0.0);\n            break;\n        }\n        case 1u: {\n            pos = vec2(-n-1.0, n+1.0);\n            dir = vec2(0.0, -1.0);\n            break;\n        }\n        case 2u: {\n            pos = vec2(-n-1.0, -n-1.0);\n            dir = vec2(1.0, 0.0);\n            break;\n        }\n        case 3u: {\n            pos = vec2(n+1.0, -n-1.0);\n            dir = vec2(0.0, 1.0);\n            break;\n        }\n    }\n    return pos + dir*float(edge_pos_idx);\n}\n\nconst float gridScale = 40.0;\nconst float pointSpeed = 10.0;\n\nvec2 PixelToGrid(vec2 pixel) {\n    return round( (pixel-iResolution.xy*0.5)/gridScale );\n}\n\nvec2 GridToPixel(vec2 gridpos) {\n    return gridpos * gridScale + iResolution.xy*0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uint active_idx = uint( fract(iTime*pointSpeed/200.0)*200.0 );\n    vec2 active_cell = SpiralPos(active_idx);\n    \n    vec2 currGrid = PixelToGrid(fragCoord);\n    if ( length(GridToPixel(currGrid)-fragCoord) < gridScale*0.5 ) {\n        if (length(active_cell-currGrid)<0.1) {\n        \tfragColor = vec4(1.0);\n        } else {\n            fragColor = vec4(0.0);\n        }\n        if (length(currGrid - vec2(0.0))<0.1) {\n            fragColor.x = 0.5;\n        }\n    } else {\n        fragColor = vec4(0.2,0.2,0.2,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}