{"ver":"0.1","info":{"id":"Mdd3Rj","date":"1451018664","viewed":260,"name":"not so old tv","username":"Jerdin","description":"not so old tv","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define M_PI (3.1415926535897932384626433832795)\n\nfloat qScanLine (vec2 uv, float n) {\n\treturn abs (sin (uv.y*M_PI*n)) ; \n}\n\n\nvec4 v2DNoiseSample (vec2 gPos) {\n\tvec2 nPos = vec2(\n\t\tmod (gPos.x+iTime*9.66,1.0),\n\t\tmod (gPos.y+iTime*7.77,1.0)\n\t);\t\t\n\treturn texture (iChannel1, nPos);\n}\n\nvec4 v1DNoiseSample (float idx, float s) {\t\n\treturn texture (iChannel1, vec2 (\n\t\tmod (idx, 1.0), \n\t\tmod (iTime*s, 1.0))\n\t);\n}\n\n\nfloat q2DNoiseSample (vec2 gPos) {\n \tvec4 nPnt = v2DNoiseSample (gPos);\n\treturn nPnt.x;\n}\n\nfloat q1DNoiseSample (float idx, float s){\n\tvec4 nPnt = v1DNoiseSample (idx, s);\n\treturn nPnt.x;\n}\n\nvec4 cSignalNoise (vec4 c,float q, vec2 gPos) {\n\treturn c*(1.0 - q) + q*q2DNoiseSample(gPos);\n}\n\n\nvec2 vScanShift (vec2 uv, float q, float dy, float dt) {\n\treturn vec2 (uv.x + q1DNoiseSample (uv.y*dy, dt)*q, uv.y);\n}\n\n\nvec2 vDirShift (vec2 uv, float angle, float q) {\n\tfloat a =(angle/180.0)*M_PI;\n\tvec2 dir = vec2 (sin (a), cos (a));\n\treturn uv + dir*q;\n}\n\nvec4 vRGBWithShift (vec2 uv, float angle, float q) {\n\tvec2 rPos = vDirShift (uv, angle, q);\n\tvec2 gPos = uv;\n\tvec2 bPos = vDirShift (uv, -angle, q);\n\tvec4 rPix = texture (iChannel0, rPos);\n\tvec4 gPix = texture (iChannel0, gPos);\n\tvec4 bPix = texture (iChannel0, bPos);\n\treturn vec4 (rPix.x, gPix.y, bPix.z, 1.0);\n}\n\nvec4 vPowerNoise (vec4 col, vec2 uv, float b, float dt, float w) {\n\tfloat s = q1DNoiseSample (0.0, 0.001)/500.0;\n\tfloat y = mod (iTime * (dt + s) , 1.0);\n\tfloat d = 1.0 - clamp (abs (uv.y - y), 0.0, w)/w;\n\treturn pow (col,vec4(1.0/(1.0 + b*d)) ) ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 cRes = iChannelResolution [0].xy;\n\tvec2 gRes = iResolution.xy;\n\tvec2 gPos = fragCoord.xy / gRes;\t\n\tvec2 cPos = gPos ;\n\tvec4 cCol = vec4(1.0);\n\tvec2 bPos = vec2(1.0);\n\tfloat qNoise = q1DNoiseSample(0.01,0.01);\n\t\n\tcPos = vScanShift (cPos, 0.005, 0.005, 0.005);\t\t\t// snaline shift\n\t\n\tcCol = vRGBWithShift (cPos, 1.0, 0.006); \t\t\t// sample signal color\t\n\tcCol = cSignalNoise (cCol, qNoise * 0.2, gPos);\t\t\t\t// add signal noise\n\tcCol = vPowerNoise (cCol, bPos, 4.0, -0.2, 0.1); \t// power line noize\n//\tcCol = vRGBTint (cCol, vec3 (0.9, 0.7, 1.2), 1.0);\t// gamma tint\n\tcCol = cCol * qScanLine (gPos, 12000.0); \t\t\t\t// add scanlines\n//\tcCol = cCol * qVignete (gPos, 1.48, 10.0); \t\t\t// add edge darkening\n\tfragColor = cCol;\n\t\t\n}","name":"","description":"","type":"image"}]}