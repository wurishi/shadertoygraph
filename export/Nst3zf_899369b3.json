{"ver":"0.1","info":{"id":"Nst3zf","date":"1630384174","viewed":131,"name":"Yet Another Smooth Newton","username":"neurofuzzy","description":"Newton's method fractal smoothed using the method in https://www.chiark.greenend.org.uk/~sgtatham/newton/\nfixed nov 6 2022 to use an integer pow function","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","newton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Messy code, might come back and patch this up so it uses vec2's.\n\nfloat cos01(float x) {\n    return 0.5*(1.0+cos(x));\n}\n\nfloat mypow(float arg1, float arg2){\n    float ret=1.0;\n    for(float i=0.0;i<arg2;i+=1.0){\n        ret*=arg1;\n    }\n    return ret;\n}\n\n//f(z)=z^3-1\nvec2 newton(vec2 z) {\n    return vec2((mypow(z.x,2.0) + 2.0*mypow(z.x,5.0) - mypow(z.y,2.0) + 4.0*mypow(z.x,3.0)*mypow(z.y,2.0) + 2.0*z.x*mypow(z.y,4.0))/(3.0*mypow(mypow(z.x,2.0) + mypow(z.y,2.0),2.0)),\n        (2.0*(-(z.x*z.y) + mypow(z.x,4.0)*z.y + 2.0*mypow(z.x,2.0)*mypow(z.y,3.0) + mypow(z.y,5.0)))/(3.0*mypow(mypow(z.x,2.0) + mypow(z.y,2.0),2.0)));\n}\n\n\n//f(z)=sin(z)\n/*vec2 newton(vec2 z) {\n    return vec2((z.x*cos(2.0*z.x) + z.x*cosh(2.0*z.y) - sin(2.0*z.x))/(cos(2.0*z.x) + cosh(2.0*z.y)),\n        (z.y*cos(2.0*z.x) + z.y*cosh(2.0*z.y) - sinh(2.0*z.y))/(cos(2.0*z.x) + cosh(2.0*z.y)));\n}*/\n\n\n//f(z)=(z^2-1)/(z^2+1)\n/*vec2 newton(vec2 z) {\n    return vec2((z.x + 4.0*mypow(z.x,3.0) - mypow(z.x,5.0) + 4.0*z.x*mypow(z.y,2.0) + 2.0*mypow(z.x,3.0)*mypow(z.y,2.0) + 3.0*z.x*mypow(z.y,4.0))/(4.0*(mypow(z.x,2.0) + mypow(z.y,2.0))),\n        (-z.y + 4.0*mypow(z.x,2.0)*z.y - 3.0*mypow(z.x,4.0)*z.y + 4.0*mypow(z.y,3.0) - 2.0*mypow(z.x,2.0)*mypow(z.y,3.0) + mypow(z.y,5.0))/(4.0*(mypow(z.x,2.0) + mypow(z.y,2.0))));\n}*/\n\n//f(z)=(z^3-1)/(z^3+1)\n/*vec2 newton(vec2 z) {\n    return vec2((mypow(z.x,2.0) + 6.0*mypow(z.x,5.0) - mypow(z.x,8.0) - mypow(z.y,2.0) + 12.0*mypow(z.x,3.0)*mypow(z.y,2.0) + 4.0*mypow(z.x,6.0)*mypow(z.y,2.0) + 6.0*z.x*mypow(z.y,4.0) + 10.0*mypow(z.x,4.0)*mypow(z.y,4.0) + 4.0*mypow(z.x,2.0)*mypow(z.y,6.0) - mypow(z.y,8.0))/(6.0*mypow(mypow(z.x,2.0) + mypow(z.y,2.0),2.0)),\n        (-(z.x*z.y) + 3.0*mypow(z.x,4.0)*z.y - 2.0*mypow(z.x,7.0)*z.y + 6.0*mypow(z.x,2.0)*mypow(z.y,3.0) - 2.0*mypow(z.x,5.0)*mypow(z.y,3.0) + 3.0*mypow(z.y,5.0) + 2.0*mypow(z.x,3.0)*mypow(z.y,5.0) + 2.0*z.x*mypow(z.y,7.0))/(3.0*mypow(mypow(z.x,2.0) + mypow(z.y,2.0),2.0)));\n}*/\n\n//f(z)=E^z-1\n/*\nconst float E=2.718281828459045;\nvec2 newton(vec2 z) {\n    return vec2((z.x*mypow(E,z.x) + cos(z.y) - mypow(E,z.x)*mypow(cos(z.y),2.0) - mypow(E,z.x)*mypow(sin(z.y),2.0))/mypow(E,z.x),\n        (z.y*mypow(E,z.x) - sin(z.y))/mypow(E,z.x));\n}*/\n//f(z)=f[z_] = (z^2 + Sin[z])/(1 + z^2);, nutso function.\n/*\nvec2 newton(vec2 z) {\n    return vec2((2.0*mypow(z.x,3.0) - 2.0*mypow(z.x,5.0) + 2.0*z.x*mypow(z.y,2.0) + 4.0*mypow(z.x,3.0)*mypow(z.y,2.0) + 6.0*z.x*mypow(z.y,4.0) + 3.0*mypow(z.x,2.0)*cos(z.x)*cosh(z.y) + 2.0*mypow(z.x,4.0)*cos(z.x)*cosh(z.y) - mypow(z.x,6.0)*cos(z.x)*cosh(z.y) + mypow(z.y,2.0)*cos(z.x)*cosh(z.y) + 8.0*mypow(z.x,2.0)*mypow(z.y,2.0)*cos(z.x)*cosh(z.y) - mypow(z.x,4.0)*mypow(z.y,2.0)*cos(z.x)*cosh(z.y) - 2.0*mypow(z.y,4.0)*cos(z.x)*cosh(z.y) + mypow(z.x,2.0)*mypow(z.y,4.0)*cos(z.x)*cosh(z.y) + mypow(z.y,6.0)*cos(z.x)*cosh(z.y) + z.x*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + 2.0*mypow(z.x,3.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + mypow(z.x,5.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) - 2.0*z.x*mypow(z.y,2.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + 2.0*mypow(z.x,3.0)*mypow(z.y,2.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + z.x*mypow(z.y,4.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) - 2.0*z.x*cosh(z.y)*sin(z.x) - 8.0*mypow(z.x,3.0)*cosh(z.y)*sin(z.x) + 2.0*mypow(z.x,5.0)*cosh(z.y)*sin(z.x) - 8.0*z.x*mypow(z.y,2.0)*cosh(z.y)*sin(z.x) - 4.0*mypow(z.x,3.0)*mypow(z.y,2.0)*cosh(z.y)*sin(z.x) - 6.0*z.x*mypow(z.y,4.0)*cosh(z.y)*sin(z.x) - cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) - 6.0*mypow(z.x,2.0)*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) - 5.0*mypow(z.x,4.0)*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) + 2.0*mypow(z.y,2.0)*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) - 6.0*mypow(z.x,2.0)*mypow(z.y,2.0)*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) - mypow(z.y,4.0)*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) + 2.0*z.x*mypow(cosh(z.y),2.0)*mypow(sin(z.x),2.0) + 6.0*mypow(z.x,3.0)*mypow(cosh(z.y),2.0)*mypow(sin(z.x),2.0) + 6.0*z.x*mypow(z.y,2.0)*mypow(cosh(z.y),2.0)*mypow(sin(z.x),2.0) - 2.0*z.y*cos(z.x)*sinh(z.y) + 4.0*mypow(z.x,2.0)*z.y*cos(z.x)*sinh(z.y) + 6.0*mypow(z.x,4.0)*z.y*cos(z.x)*sinh(z.y) + 4.0*mypow(z.y,3.0)*cos(z.x)*sinh(z.y) + 4.0*mypow(z.x,2.0)*mypow(z.y,3.0)*cos(z.x)*sinh(z.y) - 2.0*mypow(z.y,5.0)*cos(z.x)*sinh(z.y) + 4.0*z.x*z.y*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 4.0*mypow(z.x,3.0)*z.y*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 4.0*z.x*mypow(z.y,3.0)*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 2.0*z.x*z.y*sin(z.x)*sinh(z.y) + 8.0*mypow(z.x,3.0)*z.y*sin(z.x)*sinh(z.y) + 2.0*mypow(z.x,5.0)*z.y*sin(z.x)*sinh(z.y) + 4.0*mypow(z.x,3.0)*mypow(z.y,3.0)*sin(z.x)*sinh(z.y) + 2.0*z.x*mypow(z.y,5.0)*sin(z.x)*sinh(z.y) + 4.0*z.x*z.y*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) - 4.0*mypow(z.x,3.0)*z.y*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) - 4.0*z.x*mypow(z.y,3.0)*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) + 2.0*z.x*mypow(cos(z.x),2.0)*mypow(sinh(z.y),2.0) + 6.0*mypow(z.x,3.0)*mypow(cos(z.x),2.0)*mypow(sinh(z.y),2.0) + 6.0*z.x*mypow(z.y,2.0)*mypow(cos(z.x),2.0)*mypow(sinh(z.y),2.0) + cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + 6.0*mypow(z.x,2.0)*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + 5.0*mypow(z.x,4.0)*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) - 2.0*mypow(z.y,2.0)*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + 6.0*mypow(z.x,2.0)*mypow(z.y,2.0)*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + mypow(z.y,4.0)*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + z.x*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + 2.0*mypow(z.x,3.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + mypow(z.x,5.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) - 2.0*z.x*mypow(z.y,2.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + 2.0*mypow(z.x,3.0)*mypow(z.y,2.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + z.x*mypow(z.y,4.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0))/(4.0*mypow(z.x,2.0) + 4.0*mypow(z.y,2.0) + 4.0*z.x*cos(z.x)*cosh(z.y) + 4.0*mypow(z.x,3.0)*cos(z.x)*cosh(z.y) + 4.0*z.x*mypow(z.y,2.0)*cos(z.x)*cosh(z.y) + mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + 2.0*mypow(z.x,2.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + mypow(z.x,4.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) - 2.0*mypow(z.y,2.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + 2.0*mypow(z.x,2.0)*mypow(z.y,2.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + mypow(z.y,4.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) - 8.0*mypow(z.x,2.0)*cosh(z.y)*sin(z.x) - 8.0*mypow(z.y,2.0)*cosh(z.y)*sin(z.x) - 4.0*z.x*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) - 4.0*mypow(z.x,3.0)*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) - 4.0*z.x*mypow(z.y,2.0)*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) + 4.0*mypow(z.x,2.0)*mypow(cosh(z.y),2.0)*mypow(sin(z.x),2.0) + 4.0*mypow(z.y,2.0)*mypow(cosh(z.y),2.0)*mypow(sin(z.x),2.0) + 4.0*z.y*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 4.0*mypow(z.x,2.0)*z.y*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 4.0*mypow(z.y,3.0)*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 4.0*z.y*sin(z.x)*sinh(z.y) + 4.0*mypow(z.x,2.0)*z.y*sin(z.x)*sinh(z.y) + 4.0*mypow(z.y,3.0)*sin(z.x)*sinh(z.y) + 4.0*z.y*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) - 4.0*mypow(z.x,2.0)*z.y*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) - 4.0*mypow(z.y,3.0)*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) + 4.0*mypow(z.x,2.0)*mypow(cos(z.x),2.0)*mypow(sinh(z.y),2.0) + 4.0*mypow(z.y,2.0)*mypow(cos(z.x),2.0)*mypow(sinh(z.y),2.0) + 4.0*z.x*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + 4.0*mypow(z.x,3.0)*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + 4.0*z.x*mypow(z.y,2.0)*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + 2.0*mypow(z.x,2.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + mypow(z.x,4.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) - 2.0*mypow(z.y,2.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + 2.0*mypow(z.x,2.0)*mypow(z.y,2.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + mypow(z.y,4.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0)),\n        (2.0*mypow(z.x,2.0)*z.y - 6.0*mypow(z.x,4.0)*z.y + 2.0*mypow(z.y,3.0) - 4.0*mypow(z.x,2.0)*mypow(z.y,3.0) + 2.0*mypow(z.y,5.0) + 2.0*z.x*z.y*cos(z.x)*cosh(z.y) - 2.0*mypow(z.x,5.0)*z.y*cos(z.x)*cosh(z.y) + 8.0*z.x*mypow(z.y,3.0)*cos(z.x)*cosh(z.y) - 4.0*mypow(z.x,3.0)*mypow(z.y,3.0)*cos(z.x)*cosh(z.y) - 2.0*z.x*mypow(z.y,5.0)*cos(z.x)*cosh(z.y) + z.y*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + 2.0*mypow(z.x,2.0)*z.y*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + mypow(z.x,4.0)*z.y*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) - 2.0*mypow(z.y,3.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + 2.0*mypow(z.x,2.0)*mypow(z.y,3.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + mypow(z.y,5.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + 2.0*z.y*cosh(z.y)*sin(z.x) - 8.0*mypow(z.x,2.0)*z.y*cosh(z.y)*sin(z.x) + 6.0*mypow(z.x,4.0)*z.y*cosh(z.y)*sin(z.x) - 8.0*mypow(z.y,3.0)*cosh(z.y)*sin(z.x) + 4.0*mypow(z.x,2.0)*mypow(z.y,3.0)*cosh(z.y)*sin(z.x) - 2.0*mypow(z.y,5.0)*cosh(z.y)*sin(z.x) - 4.0*z.x*z.y*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) - 4.0*mypow(z.x,3.0)*z.y*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) - 4.0*z.x*mypow(z.y,3.0)*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) - 2.0*z.y*mypow(cosh(z.y),2.0)*mypow(sin(z.x),2.0) + 6.0*mypow(z.x,2.0)*z.y*mypow(cosh(z.y),2.0)*mypow(sin(z.x),2.0) + 6.0*mypow(z.y,3.0)*mypow(cosh(z.y),2.0)*mypow(sin(z.x),2.0) - 2.0*z.x*cos(z.x)*sinh(z.y) - 4.0*mypow(z.x,3.0)*cos(z.x)*sinh(z.y) - 2.0*mypow(z.x,5.0)*cos(z.x)*sinh(z.y) - 4.0*z.x*mypow(z.y,2.0)*cos(z.x)*sinh(z.y) + 4.0*mypow(z.x,3.0)*mypow(z.y,2.0)*cos(z.x)*sinh(z.y) + 6.0*z.x*mypow(z.y,4.0)*cos(z.x)*sinh(z.y) - mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 2.0*mypow(z.x,2.0)*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - mypow(z.x,4.0)*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) + 6.0*mypow(z.y,2.0)*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 6.0*mypow(z.x,2.0)*mypow(z.y,2.0)*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 5.0*mypow(z.y,4.0)*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - mypow(z.x,2.0)*sin(z.x)*sinh(z.y) - 2.0*mypow(z.x,4.0)*sin(z.x)*sinh(z.y) - mypow(z.x,6.0)*sin(z.x)*sinh(z.y) - 3.0*mypow(z.y,2.0)*sin(z.x)*sinh(z.y) + 8.0*mypow(z.x,2.0)*mypow(z.y,2.0)*sin(z.x)*sinh(z.y) - mypow(z.x,4.0)*mypow(z.y,2.0)*sin(z.x)*sinh(z.y) + 2.0*mypow(z.y,4.0)*sin(z.x)*sinh(z.y) + mypow(z.x,2.0)*mypow(z.y,4.0)*sin(z.x)*sinh(z.y) + mypow(z.y,6.0)*sin(z.x)*sinh(z.y) - cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) - 2.0*mypow(z.x,2.0)*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) - mypow(z.x,4.0)*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) + 6.0*mypow(z.y,2.0)*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) - 6.0*mypow(z.x,2.0)*mypow(z.y,2.0)*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) - 5.0*mypow(z.y,4.0)*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) - 2.0*z.y*mypow(cos(z.x),2.0)*mypow(sinh(z.y),2.0) + 6.0*mypow(z.x,2.0)*z.y*mypow(cos(z.x),2.0)*mypow(sinh(z.y),2.0) + 6.0*mypow(z.y,3.0)*mypow(cos(z.x),2.0)*mypow(sinh(z.y),2.0) + 4.0*z.x*z.y*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + 4.0*mypow(z.x,3.0)*z.y*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + 4.0*z.x*mypow(z.y,3.0)*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + z.y*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + 2.0*mypow(z.x,2.0)*z.y*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + mypow(z.x,4.0)*z.y*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) - 2.0*mypow(z.y,3.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + 2.0*mypow(z.x,2.0)*mypow(z.y,3.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + mypow(z.y,5.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0))/(4.0*mypow(z.x,2.0) + 4.0*mypow(z.y,2.0) + 4.0*z.x*cos(z.x)*cosh(z.y) + 4.0*mypow(z.x,3.0)*cos(z.x)*cosh(z.y) + 4.0*z.x*mypow(z.y,2.0)*cos(z.x)*cosh(z.y) + mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + 2.0*mypow(z.x,2.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + mypow(z.x,4.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) - 2.0*mypow(z.y,2.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + 2.0*mypow(z.x,2.0)*mypow(z.y,2.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) + mypow(z.y,4.0)*mypow(cos(z.x),2.0)*mypow(cosh(z.y),2.0) - 8.0*mypow(z.x,2.0)*cosh(z.y)*sin(z.x) - 8.0*mypow(z.y,2.0)*cosh(z.y)*sin(z.x) - 4.0*z.x*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) - 4.0*mypow(z.x,3.0)*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) - 4.0*z.x*mypow(z.y,2.0)*cos(z.x)*mypow(cosh(z.y),2.0)*sin(z.x) + 4.0*mypow(z.x,2.0)*mypow(cosh(z.y),2.0)*mypow(sin(z.x),2.0) + 4.0*mypow(z.y,2.0)*mypow(cosh(z.y),2.0)*mypow(sin(z.x),2.0) + 4.0*z.y*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 4.0*mypow(z.x,2.0)*z.y*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 4.0*mypow(z.y,3.0)*mypow(cos(z.x),2.0)*cosh(z.y)*sinh(z.y) - 4.0*z.y*sin(z.x)*sinh(z.y) + 4.0*mypow(z.x,2.0)*z.y*sin(z.x)*sinh(z.y) + 4.0*mypow(z.y,3.0)*sin(z.x)*sinh(z.y) + 4.0*z.y*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) - 4.0*mypow(z.x,2.0)*z.y*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) - 4.0*mypow(z.y,3.0)*cosh(z.y)*mypow(sin(z.x),2.0)*sinh(z.y) + 4.0*mypow(z.x,2.0)*mypow(cos(z.x),2.0)*mypow(sinh(z.y),2.0) + 4.0*mypow(z.y,2.0)*mypow(cos(z.x),2.0)*mypow(sinh(z.y),2.0) + 4.0*z.x*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + 4.0*mypow(z.x,3.0)*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + 4.0*z.x*mypow(z.y,2.0)*cos(z.x)*sin(z.x)*mypow(sinh(z.y),2.0) + mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + 2.0*mypow(z.x,2.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + mypow(z.x,4.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) - 2.0*mypow(z.y,2.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + 2.0*mypow(z.x,2.0)*mypow(z.y,2.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0) + mypow(z.y,4.0)*mypow(sin(z.x),2.0)*mypow(sinh(z.y),2.0)));\n}*/\n\nfloat dist2(vec2 a, vec2 b) {\n    return dot( a-b,a-b );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    const int maxiter=40;\n    const float eps2=0.001;\n    const float scaler=4.;\n    \n    \n    vec2 aold=(fragCoord.xy-iResolution.xy/2.0)*scaler/ iResolution.y;\n    vec2 a=newton(aold);\n    \n    float lastdist2=eps2*5.0;\n    float newdist2=eps2*5.0;\n    float i=0.0;\n    for(;i<float(maxiter) && newdist2>eps2;i++){\n        lastdist2=newdist2;\n        aold=a;\n        a=newton(a);\n        newdist2=dist2(aold,a);\n    }\n    // use this brightness for cell shading\n    // float bright=min(1.0,4.0/i);\n    //shading / brightness method from https://www.chiark.greenend.org.uk/~sgtatham/newton/\n    float d=dist2(aold,a);\n    float bparam=i+(log(eps2)-log(lastdist2))/(log(d)-log(lastdist2));\n    float bright=min(1.0,7.0/bparam);\n \n    \n    fragColor = vec4(bright,bright,bright,1.0)*vec4(cos01(a.x-2.0),cos01(a.y-2.3),cos01(a.x+a.y)*cos01(a.x*a.y),1.0);\n}\n/*\n(*Very stupid and buggy code.Oh well.*)\nf[z_]=z^3-1;\nreim[z_]:=ComplexExpand[{Re[z],Im[z]}];\nnewtonStep[z_]:=reim[z-f[z]/f'[z]];\neqn=Together[newtonStep[a+b I]];\nturnIntoGLSLForm[equation_]:=StringReplace[StringReplace[ToString[CForm[equation]],Table[ToString[n]~~\".\"->ToString[n],{n,100,1,-1}]],Join[{\"Cos\"->\"cos\",\"Sin\"->\"sin\",\"Power\"->\"pow\",\"a\"->\"z.x\",\"b\"->\"z.y\",\"Sinh\"->\"sinh\",\"Cosh\"->\"cosh\"},Table[ToString[n]->ToString[n]<>\".0\",{n,100,1,-1}]]];\nstrout=\"vec2 newton(vec2 z) {\\n    return vec2(\"<>turnIntoGLSLForm[eqn[[1]]]<>\",\\n        \"<>turnIntoGLSLForm[eqn[[2]]]<>\");\\n}\";\nStringReplace[strout,{\"Arg(z.x + Complex(0,1.0)*z.y)\"->\"atan(z.y,z.x)\"}]\n*/","name":"Image","description":"","type":"image"}]}