{"ver":"0.1","info":{"id":"ldtGR2","date":"1451045759","viewed":1179,"name":"ChristmasTree","username":"lovelyH","description":"Christmas Tree.\nInsiprated by other similar shader, but I done it in different way.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","lights"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nfloat getStar( vec2 uv, vec3 star ){\n\tif( 0.0 < star.z )\n\t\treturn 0.0;\n\telse\n\t\treturn 1.0 / (1.0 + 32.0*pow(2.0,-star.z)*length(uv-star.xy/-star.z) );\n}\n\nmat4 getMatrixIdentity(){\n\treturn mat4(\n\t\t1.0, 0.0, 0.0, 0.0,\n\t\t0.0, 1.0, 0.0, 0.0,\n\t\t0.0, 0.0, 1.0, 0.0,\n\t\t0.0, 0.0, 0.0, 1.0\n\t);\n}\n\nmat4 getMatrixTransform( float x, float y, float z ){\n\treturn mat4(\n\t\t1.0, 0.0, 0.0, 0.0,\n\t\t0.0, 1.0, 0.0, 0.0,\n\t\t0.0, 0.0, 1.0, 0.0,\n\t\tx, y, z, 1.0\n\t);\n}\n\nmat4 getMatrixRotX( float l ){\n\tfloat sl= sin(l);\n\tfloat cl= cos(l);\n\treturn mat4(\n\t\t1.0, 0.0, 0.0, 0.0,\n\t\t0.0, cl ,-sl , 0.0,\n\t\t0.0, sl , cl , 0.0,\n\t\t0.0, 0.0, 0.0, 1.0\n\t);\n}\n\nmat4 getMatrixRotZ( float l ){\n\tfloat sl= sin(l);\n\tfloat cl= cos(l);\n\treturn mat4(\n\t\t cl, -sl, 0.0, 0.0,\n\t\t sl,  cl, 0.0 , 0.0,\n\t\t0.0, 0.0, 1.0, 0.0,\n\t\t0.0, 0.0, 0.0, 1.0\n\t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t/// projection & view matrix\n\tmat4 matrix= getMatrixIdentity()\n\t\t* getMatrixTransform( 0.0, 0.0,-2.5 )\n\t\t* getMatrixRotX( 0.4*3.14159 )\n\t\t* getMatrixRotZ( iTime )\n\t\t* getMatrixTransform( 0.0, 0.0,-1.0 )\n\t;\n\t\n\t/// screen coordiances\n\tvec2 uv= fragCoord / iResolution.xy - vec2(0.5,0.5);\n\tuv.x *= iResolution.x / iResolution.y;\n\t\n\t//// retur variable\n\tvec3 r= vec3(0.0,0.0,0.0);\n\t\n\t/// geenrating lights\n\t/// chain\n\tfor( float hh=0.5;hh<2.0;hh+= 0.05){\n\t\tfloat h= 0.5*hh*hh;\n\t\tconst float sch= 2.5;\n\t\tconst float sch2= 4.5;\n\t\tfloat ch= sin(h*sch2+iTime*1.4);\n\t\tr += vec3( ch*ch, 0.1, 1.0-ch*ch) * getStar( uv, (matrix*vec4(sin(sch*3.14159*h)*(1.0-0.5*h),cos(sch*3.14159*h)*(1.0-0.5*h),h,1.0)).xyz );\n\t}\n\t/// tree\n\tfor( float scl= 0.0; scl<2.0;scl+=0.4 ){\n\t\tfloat sscl= sin(scl*3.14159);\n\t\tfloat cscl= cos(scl*3.14159);\n\t\tfor( float h=0.0;h<=2.0;h+= 0.3){\n\t\t\tfloat radius= 0.5*(1.0-0.5*h);\n\t\t\tr += vec3( 0.1, 0.5, 0.1) * getStar( uv, (matrix*vec4( sscl*radius, cscl*radius, h-0.1, 1.0)).xyz );\n\t\t}\n\t}\n\t/// star on top\n\tvec3 starColor= vec3( 0.8, 0.8, 0.1);\n\tr += starColor * getStar( uv, (matrix*vec4( -0.1, 0.0, 1.9, 1.0)).xyz );\n\tr += starColor * getStar( uv, (matrix*vec4(  0.1, 0.0, 1.9, 1.0)).xyz );\n\tr += starColor * getStar( uv, (matrix*vec4( -0.1, 0.0, 2.05, 1.0)).xyz );\n\tr += starColor * getStar( uv, (matrix*vec4(  0.1, 0.0, 2.05, 1.0)).xyz );\n\tr += starColor * getStar( uv, (matrix*vec4(  0.0, 0.0, 2.13, 1.0)).xyz );\n\tr += starColor * getStar( uv, (matrix*vec4(  0.0, 0.0, 2.0, 1.0)).xyz );\n\t\n\t\n\t/// return final color\n\tfragColor = vec4( r, 1.0);\n}\n","name":"","description":"","type":"image"}]}