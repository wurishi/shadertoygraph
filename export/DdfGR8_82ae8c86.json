{"ver":"0.1","info":{"id":"DdfGR8","date":"1667596347","viewed":38,"name":"Mandelbrot123456","username":"tempdeltavalue","description":"temp","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["temp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 transform;\n\nfloat max_iters = 1000.;\n\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvec3 map_color(float i, float r, float c) {\n    float di = i;\n    float zn = sqrt(r + c);\n    float hue = (di + 1. - log(log2(abs(zn))))/max_iters;\n    return hsv2rgb(vec3(hue, 0.8, 1));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iMouse.z > 0.0) { // zoom\n        fragCoord -= iResolution.xy*0.5;\n        fragCoord = fragCoord/400.0 + iMouse.xy;\n    }\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec3 pointCoord = vec3(uv.xy, 1);\n    \n    vec2 cen = 0.5*iResolution.xy/iResolution.x;\n    vec4 m = iMouse / iResolution.x;\n    \n\n    \n    float cx = pointCoord.x;\n    float cy = pointCoord.y;\n    \n    float iter = 0.;\n    float zx = 0.;\n    float zy = 0.;\n    \n    while (iter < max_iters) {\n        float nzx = zx * zx - zy * zy + cx;\n        float nzy = 2. * zx * zy + cy;\n        zx = nzx;\n        zy = nzy;\n        if (zx*zx + zy*zy > 4.0) {\n            break;\n        }\n        iter += 1.;\n    }\n    \n    if (iter == max_iters) {\n        fragColor = vec4(0,0,0, 1.0);\n    } else {\n        fragColor = vec4(map_color(iter, float(zx*zx), float(zy*zy)), 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}