{"ver":"0.1","info":{"id":"tdSGz3","date":"1549485609","viewed":603,"name":"Pixel Sunset","username":"SwaginWagon","description":"This is my first shader. Probably can be simplified. Thought it was cool, so I'm posting it.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["sunset","firstshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat colormap_red(float x) {\n    if (x < 0.7) {\n        return 4.0 * x - 1.5;\n    } else {\n        return -4.0 * x + 4.5;\n    }\n}\n\nfloat colormap_green(float x) {\n    if (x < 0.5) {\n        return 4.0 * x - 0.5;\n    } else {\n        return -4.0 * x + 3.5;\n    }\n}\n\nfloat colormap_blue(float x) {\n    if (x < 0.3) {\n       return 4.0 * x + 0.5;\n    } else {\n       return -4.0 * x + 2.5;\n    }\n}\n\nvec4 colormap(float x) {\n    float r = clamp(colormap_red(x), 0.0, 1.0);\n    float g = clamp(colormap_green(x), 0.0, 1.0);\n    float b = clamp(colormap_blue(x), 0.0, 1.0);\n    return vec4(r, g, b, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy * 1000.0;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\t\n    \n    vec4 color = colormap(float((int(uv.x + 100.0*iTime + 10000.) % int(uv.y + .9*cos(uv.x + 110.*iTime)))%800)/1000.);\n    \n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}