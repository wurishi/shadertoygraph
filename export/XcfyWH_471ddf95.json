{"ver":"0.1","info":{"id":"XcfyWH","date":"1721052152","viewed":35,"name":"nonconforming squares","username":"happyhuxley","description":"There are 32 lines because on a chess set there are 32 white squares and 32 black squares","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","patterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float radius = 0.8;\n    float smoothEdge = 0.01;\n\n    float dist = length(uv);\n\n    float angle = iTime * 0.523598776;\n\n    vec2 rotatedUV = uv;\n    if (dist < radius)\n    {\n        float s = sin(angle);\n        float c = cos(angle);\n        rotatedUV = vec2(c * uv.x - s * uv.y, s * uv.x + c * uv.y);\n    }\n\n    vec2 checker = floor(uv * 10.0);\n    vec2 rotatedChecker = floor(rotatedUV * 10.0);\n    float checkerPattern = mod(rotatedChecker.x + rotatedChecker.y, 2.0);\n\n    float circleEdge = smoothstep(radius - smoothEdge, radius + smoothEdge, dist);\n\n    float pattern = mix(checkerPattern, checkerPattern, circleEdge);\n\n    vec3 color = vec3(pattern);\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}