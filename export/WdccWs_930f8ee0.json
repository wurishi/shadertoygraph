{"ver":"0.1","info":{"id":"WdccWs","date":"1601941482","viewed":264,"name":"1D Perlin Noise 1","username":"Dominexis","description":"1D Perlin noise.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["perlinnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rng( in vec2 pos )\n{\n    return fract(sin( pos.y + pos.x*78.233 )*43758.5453)*2.0 - 1.0;\n}\n\nfloat perlin( in float pos )\n{\n    // Get node values\n    \n    float a = rng( vec2(floor(pos), 1.0) );\n    float b = rng( vec2(ceil( pos), 1.0) );\n    \n    float a_x = rng( vec2(floor(pos), 2.0) );\n    float b_x = rng( vec2(ceil( pos), 2.0) );\n    \n    a += a_x*fract(pos);\n    b += b_x*(fract(pos)-1.0);\n    \n    \n    \n    // Interpolate values\n    \n    return a + (b-a)*smoothstep(0.0,1.0,fract(pos));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Initialize values\n    \n    float chunk_size = 5.0;\n    vec2 uv = fragCoord*chunk_size/iResolution.xy;\n    \n    \n    \n    // Get elevation\n    \n    float elevation = \n          perlin( uv.x + 100.0 )\n        + perlin( uv.x*2.0 + 200.0 )/2.0\n        + perlin( uv.x*4.0 + 300.0 )/4.0\n        + perlin( uv.x*8.0 + 400.0 )/8.0\n        + perlin( uv.x*16.0 + 500.0 )/16.0\n        + perlin( uv.x*32.0 + 600.0 )/32.0\n        + perlin( uv.x*64.0 + 600.0 )/64.0\n        + chunk_size/2.0;\n    \n    \n    \n    // Display noise\n    \n    float pixel = step( uv.y, elevation );\n    fragColor = vec4( pixel, pixel, pixel, 1.0 );\n}","name":"Image","description":"","type":"image"}]}