{"ver":"0.1","info":{"id":"ltlBDN","date":"1511972355","viewed":256,"name":"Moss in a Cup","username":"zackpudil","description":"I don't know how to name things.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","glass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(float x) {\n    return fract(sin(x*343.234334)*393873.3433);\n}\n\nfloat noise(vec2 x) {\n    vec2 f = floor(x);\n    vec2 g = fract(x);\n    \n    float n = f.x + 57.0*f.y;\n    \n    return mix(\n        mix(hash(n), hash(n + 1.0), g.x),\n        mix(hash(n + 57.0), hash(n + 58.0), g.x),\n        g.y);\n}\n\nvec2 rot(vec2 p, float a) {\n    float s = sin(a);\n    float c = cos(a);\n    \n    return mat2(c, s, -s, c)*p;\n}\n\nfloat de(vec2 a) {\n\tvec3 p = vec3(a, 1);\n\t\n\tp.xy += vec2(iTime, 4.0*sin(0.25*iTime));\n    float d = 2.0*noise(p.xy);\n    vec2 c = floor(p.xy + 1.0)/2.0;\n    \n\tp.xy = mod(p.xy + 1.0, 2.0) - 1.0;\n\tp.xy -= 1.0;\n    \n    // ABS box fractal\n\tfor(int i = 0; i < 3; i++) {\n\t\tp.xy = abs(p.xy + 1.0) - 1.0;\n\t\tp /= clamp(dot(p.xy, p.xy), 0.4, 1.0);\n        \n        p.xy = rot(p.xy, 1.2*d);\n\t\tp *= 1.4;\n\t}\n\t\n\treturn (length(p.xz) - 0.26)/p.z;\n}\n\nvec3 bump(vec2 p) {\n\tvec2 h = vec2(0.02, 0.0);\n\treturn normalize(vec3(\n\t\tde(p + h.xy) - de(p - h.xy),\n\t\tde(p + h.yx) - de(p - h.yx),\n\t\t-0.03));\n}\n\nvec3 render(vec2 p) {\n\tvec3 rd = normalize(vec3(p, 1));\n\tvec3 sn = bump(p);\n\t\n\tvec3 re = reflect(rd, sn);\n\t\n    // just need a specular light\n\treturn vec3(pow(clamp(dot(re, sn), 0.0, 1.0), 15.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = (-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n    vec2 q = p;\n    \n    // pillar like deformation\n    p.x *= 1.0 + 0.8*smoothstep(0.8, 4.0, abs(p.x));\n\t\n\tfloat d = de(p);\n\t\n    // light * material.\n\tvec3 col = render(p)\n\t\t*mix(vec3(1), vec3(0.4, 0.8, 2.0), smoothstep(0.97, 1.0, d))\n\t\t*mix(vec3(1.8, 0.6, 0.3), vec3(1), smoothstep(0.97, 1.0, d));\n    \n    // moss like emission.\n    col += texture(iChannel0, 2.0*(p - 0.1*bump(p).xy) + vec2(iTime, 4.0*sin(0.25*iTime))).xyz\n        *vec3(0.5, 2.0, 0.4)*smoothstep(0.99, 1.1, d*d);\n\t\n    // darken edges.\n    col *= 1.0 - smoothstep(0.1, 2.0, abs(q.x));\n    \n    // tone mapping and gamma correction.\n\tcol = 1.0 - exp(-0.5*col);\n\tcol = pow(abs(col), vec3(1.0/2.2));\n\tfragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}