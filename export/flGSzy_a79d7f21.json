{"ver":"0.1","info":{"id":"flGSzy","date":"1640947182","viewed":77,"name":"simple cercle avec aspect ratio","username":"raoul","description":"simple cercle ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy; //0 <> 1\n    float ratio = iResolution.x / iResolution.y; //aspect ratio \n    uv.x *= ratio; \n    \n    //create circle\n    //bounce range 0-1\n    float xPos = mod(iTime, 2.);\n    xPos = abs(xPos -1.) * ratio;\n    \n    vec2 center = vec2(  0.,0.5);\n    center.x += xPos;\n    float d = length(center - uv );  \n    float c = d; \n    //radius \n    c = step(0.2,c);\n    \n    \n    float xxPos = mod(iTime, 3.);\n    xxPos = abs(xxPos - 1.) * ratio;\n    \n    vec2 centerxx = vec2(  0.2,0.5);\n    centerxx.x += xxPos;\n    float dd = length(center - uv );  \n    float cc = dd; \n    //radius \n    cc = step(0.1,cc);\n    \n  \n    \n    \n    // Output to screen\n    fragColor = vec4(vec3(c) + vec3(0.2,0.3,0.8),1.0);\n    fragColor *= vec4(vec3(cc) ,1.0);\n}","name":"Image","description":"","type":"image"}]}