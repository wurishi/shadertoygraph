{"ver":"0.1","info":{"id":"XfGyz3","date":"1732267410","viewed":48,"name":"scattering spectra","username":"OscarSaharoy","description":"This shows how the light spectrum from the sun changes as it travels through the atmosphere. The top is direct light, getting more orange to red like at sunset. The bottom is indirect scattered light, showing the blue glow of the sky.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["spectrum","scattering","cie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 saturate( vec3 v ) {\n    return clamp( v, vec3(0), vec3(1) );\n}\n\nfloat sq( float x ) {\n    return x * x;\n}\n\nfloat ln2( float x ) {\n    return sq(log(x));\n}\n\nvec3 xyz( float l ) {\n    // cie standard observer cmfs from https://jcgt.org/published/0002/02/01/\n    float x = 0.398 * exp( -1250. * ln2(( l + 570.1 ) / 1014.) )\n            + 1.132 * exp( -234. * ln2(( 1338. - l ) / 743.5) );\n    float y = 1.011 * exp( -.5 * sq(( l - 556.1 ) / 46.14) );\n    float z = 2.060 * exp( -32. * ln2(( l - 265.8 ) / 180.4) );\n\n    return vec3( x, y, z );\n}\n\nvec3 xyz2rgb( vec3 xyz ) {\n    mat3 Mi = mat3(\n         3.2404542, -1.5371385, -0.4985314,\n        -0.9692660,  1.8760108,  0.0415560,\n         0.0556434, -0.2040259,  1.0572252\n    );\n    return Mi * xyz;// * vec3(0.05, 067, 0.4);\n}\n\nfloat spectrum( float depth, float wavelength ) {\n    float a = 1e-6;\n    return exp( -depth / ( a * pow(wavelength, 4.) ) );\n}\n\nvec3 scatterLight( vec2 fragCoord ) {\n\n    vec2 uv = ( fragCoord - iResolution.xy * vec2(0., .5) ) / min(iResolution.x, iResolution.y); \n\n    float depth = 500000. * uv.x;\n    \n    vec3 xyzLight = vec3(0);\n    for( float wl = 350.; wl < 800.; wl += 10. ) {\n        xyzLight += spectrum( depth, wl ) * xyz( wl );\n    }\n    \n    vec3 light = saturate(xyz2rgb( xyzLight ) * .7);\n    return uv.y > 0. ? light : (vec3(1) - light);\n}\n\nvec3 postProcess( vec3 light ) {\n    light = pow(light, vec3(1. / 2.2));\n    return light;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec3 light = vec3(0);\n    \n    light += scatterLight(fragCoord);\n    light = postProcess(light);\n    \n    fragColor = vec4( light, 1. );\n}","name":"Image","description":"","type":"image"}]}