{"ver":"0.1","info":{"id":"XlSBRG","date":"1516144050","viewed":78,"name":"Grid Function & \"Following Eye\"","username":"NEANDERTHAL","description":"a handy-dandy grid function and an attempt at pseudo-3D. Click n' Drag!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grid","eye","warp","toolbox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float PI = 3.14159265359;\n\nfloat grid ( in vec2 st, in float major, in float minor )\n{\n    float center = step(distance(vec2(0.0), st), 1.0*min(major, minor));\n    float Milines = step( abs(fract(st.x/minor) * fract(st.y/minor)), .1);\n    float Malines = step( abs(fract(st.x/major) * fract(st.y/major)), .01);\n    return center+Milines*.5+Malines;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 nMouse = ((iMouse.xy/iResolution.yy)*2.0)-1.;\n    nMouse.x -= iResolution.y/iResolution.x*1.38;\n    \n    vec2 nXY = ((fragCoord.xy/iResolution.yy)*2.0)-1.;\n    nXY.x -= iResolution.y/iResolution.x*1.38;\n    vec2 center = vec2(0.0);\n    \n    vec2 nXYp = vec2( nXY.x/cos(-atan(1.*nMouse.x)), nXY.y);\n    \n    float d = distance(center, nXYp);\n    float a = (atan(nXY.y, nXY.x)/PI)*.5+.5;\n    float am = (atan(nMouse.x, nMouse.y)/PI)*.5+.5;\n    vec2 AD = vec2( fract(a+am), d);\n    \n    vec3 wheel = texture(iChannel0, (AD-vec2(.5))*.5).rgb;\n    \n\tfragColor = vec4(vec3( grid(AD, 1.0, 0.1), grid(nXYp, 1.0, 0.1), 0.0) + vec3(wheel.r*.5), 1.0);\n}","name":"Image","description":"","type":"image"}]}