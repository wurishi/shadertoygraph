{"ver":"0.1","info":{"id":"ttyfWR","date":"1614156350","viewed":193,"name":"bits city","username":"sm","description":"something","likes":14,"published":1,"flags":32,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float kDistortionConst = 0.99975;\nvec2 co(vec2 uv)\n{\n  return 0.5-uv*0.49;\n}\n\nvec4 spacepochdist(vec2 UV) {\n  const int N = 32;\n  vec2 uv = 1.0 - 2.0 * UV;\n  vec4 c = vec4(0.0); //vec4(0.0);\n\n  float rf = 0.998;\n  float gf = 1.0/0.998;\n  \n  float f = 1.0/float(N);\n  for(int i = 0; i < N; ++i)\n  {\n    c.x += f*texture(iChannel0, co(gf*uv) ).x;\n    c.y += f*texture(iChannel0, co(uv) ).y;\n    c.z += f*texture(iChannel0, co(rf*uv) ).z;\n\n    rf *= kDistortionConst;\n    gf /= kDistortionConst;\n  }\n\n  float tv = 0.99+0.015*sin(2.0*3.141*25.0*iTime);\n  return vec4( tv*c );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 inp = spacepochdist(uv); \n    fragColor = smoothstep(vec4(-.28, -.19, -.23, -.2), vec4(1.4, 1.2, 1.1, 1.0), inp);\n    float a = (2.35*iResolution.x/iResolution.y - 2.35)*.05;\n    if (uv.y < a || uv.y > 1.-a) {\n        fragColor=vec4(0.);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nmat2 rot(float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, s, -c);\n}\n\nvec4 shootRay(vec3 o, vec3 ray){\n    vec3 p = o + 5.0 * ray;\n    vec4 c = vec4(0.0);\n\n    for (int i = 0; i < 64; i++) {\n        // Step in z direction\n        p += 5.0 * ray;\n        \n        // idk\n        vec2 offset = vec2(0.1,0.2);\n\n        float scale = .5+.5*rand(vec2(float(i), 0.0));\n        vec2 f = (scale*12.1*p.z + 50.0*rot(p.z*.05)*p.xy) * 0.01;\n        float r = rand(offset + floor(f));\n        float a = .2 + 3.3 * rand(5.0*offset + 1.2*floor(((scale*12.1*p.z + 50.0*rot(p.z*.05)*p.xy) * (0.01))));\n        float s = sqrt(a)*2.0 * (exp(-.01*(p.z - o.z)) + 0.);\n        // antialias\n        f = 2.0*fract(f)-1.0;\n        float d = max(abs(f.x),abs(f.y));\n        s *= smoothstep(1.0,1.0-200.0/iResolution.x,d);\n        // splat\n        if (r < 0.0001) {\n            c += s * vec4(0.24, 0.0, 0.24, 1.0);\n        } else if (r < 0.0022) {\n            c += s * vec4(0., 0.24, 0.24, 1.0);\n        } else if (r < 0.00355) { //r < 0.004\n            c += s * .7*vec4(1., .5, .25, 1.0);\n        }\n    }\n\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    fragColor = shootRay(vec3(0.0,0.0,iTime),vec3(uv,0.6) );\n}\n\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"const float BLURSIZE = 32.0;\n\nmat2 rot(float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, s, -c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float cnt = 0.;\n    vec4 c = vec4(0.0);\n    for (float x = -BLURSIZE; x <= BLURSIZE; x+= 0.5) {\n        // \"käänsimme kernelin\"\n        vec2 s = uv + rot(0.785398) * vec2(x, 0.0) / iResolution.xy;\n        c += texture(iChannel0, s);\n        cnt += 1.0;\n    }\n    fragColor = c / cnt;\n}\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"const float BLURSIZE = 32.0;\n\nmat2 rot(float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, s, -c);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float cnt = 0.;\n    vec4 c = vec4(0.0);\n    for (float x = -BLURSIZE; x <= BLURSIZE; x+= 0.5) {\n        vec2 s = uv + rot(0.785398) * vec2(0.0, x) / iResolution.xy;\n        c += texture(iChannel0, s);\n        cnt += 1.0;\n    }\n    fragColor = c / cnt;\n}\n","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 c = .76*texture(iChannel0, uv) + 1.5*texture(iChannel1, uv);\n    vec4 g = c / (vec4(1.0) + c);\n    fragColor = vec4(.01)+smoothstep(vec4(-.05,-.15,-.195,0.), vec4(.4,.6,.8,1.), g);\n}\n","name":"Buffer D","description":"","type":"buffer"}]}