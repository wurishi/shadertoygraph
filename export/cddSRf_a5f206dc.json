{"ver":"0.1","info":{"id":"cddSRf","date":"1680181765","viewed":99,"name":"Radar ,war","username":"benjik42","description":"I've discover an amazing work from ndel, so I decided to challenge myself and try to do it !\nHope you enjoy !","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["radar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI  6.28318530718\n\nvec3 radial_progress(vec2 UV, float VAL,float length_radial)\n{   \n    \n    vec2  origin  = vec2(0.0, 0.0);\n   \n    float \td  \t\t= length(UV);   \n    float \ta \t\t= atan(UV.y, UV.x);  \n   \tfloat\ttheta \t= (a < 0.) ? (a + TWO_PI) / TWO_PI : 2.*a / TWO_PI;\n\tfloat \tb \t\t= atan(UV.y*length_radial, UV.x);  \n   \tfloat\tthetab \t= (b < 0.) ? (b + TWO_PI) / TWO_PI : 2.*b / TWO_PI;\n    float\tbar = 2.*smoothstep(thetab,thetab+1., VAL);\n    bar *= 10.*smoothstep(theta,theta+3., VAL);\n    vec3 \tcolour \t= vec3(bar);\n    \n\treturn \tcolour;\n    \n}\n\n\n\n\nfloat Triangle( in vec2 p )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    p.y = p.y + 1.0/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -4.0, 1.0 );\n    return -length(p)*sign(p.y);\n}\n\nfloat dcircle(vec2 uv, float radius, float th,vec2 c){\n\t\n\tfloat circle = length(uv-c);\n\tfloat circle_a = smoothstep(radius-radius*0.001,radius+radius*0.001,circle);\n\tfloat circle_b = smoothstep(th+radius+radius*0.001,th+radius-radius*0.001,circle);\n\n\tfloat circle_c = min(circle_a,circle_b);\n\treturn circle_c;\n}\nvec3 line(vec2 uv,float angle,float radius_line){\n\n\tuv = mat2(cos(angle),-sin(angle),sin(angle),cos(angle))*uv;\n\tfloat a = smoothstep(0.001,0.0005,abs(uv.x))+smoothstep(0.001,0.0005,abs(uv.y));\n\tvec3 b = vec3(a)-vec3(smoothstep(radius_line-radius_line*0.001,radius_line-radius_line*0.001,length(uv)));\n\treturn b;\n\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.*(.5-fragCoord.xy/iResolution.xy);\n    uv.x /= 9.0/16.0;\n\n\tfloat circle_radius = 0.7;\n\tfloat dist = .25;\n\tfloat angle =.25*PI;\n    float angle2 =.5*PI;\n\tfloat angles =.25*PI*-iTime;\n\tfloat radius_line = 0.705;\n\tfloat timer = mix(.3,.1,sin((iTime/.8))) ;\n\n\tvec3 line = vec3(line(uv,angle,radius_line));\n\n\t\n\t\n\tvec3 lines = vec3(dcircle(uv,circle_radius+dist/3.,0.0019, vec2(0.))); \n\t\n\tvec3 c = vec3(1.-floor(timer+1.-(abs(atan(uv.y,uv.x)/(PI/4.)))));\n\tvec3 c2 = vec3(1.-floor(timer+1.-(abs(atan(uv.y,-uv.x)/(PI/4.)))));\n\n\tlines = min(c2,min(lines,c));\n\n\tvec3 circle = vec3(dcircle(uv,circle_radius-dist,0.004,vec2(0.))); \n\n\tcircle += vec3(dcircle(uv,circle_radius-dist*2.,0.002,vec2(0.)));\n\n\tcircle += vec3(dcircle(uv,circle_radius-dist*2.75,0.002,vec2(0.)));\n\t//line += vec3(line(uv,angle,radius_line));\n\tcircle += vec3(dcircle(uv,circle_radius,0.005,vec2(0.)));\n\n\tvec3 linesv2 = vec3(dcircle(uv,circle_radius+dist,0.009,vec2(0.))-smoothstep(0.0401,0.04,abs(uv.y))); \n\n\tvec3 b = vec3(1.-floor(1.+1.-(abs(atan(uv.x,-uv.y)/(PI/4.)))));\n\tvec3 b2 = vec3(1.-floor(1.+1.-(abs(atan(uv.x,uv.y)/(PI/4.)))));\n\tvec3 b3 = min(b,b2);\n\tlinesv2 = min(b2,min(linesv2,b));\n\n\tcircle = max(linesv2,max(linesv2,max(lines,max(circle,line))));\n\t\n\tvec3 test = vec3(PI+atan(uv.x,uv.y));\n\t\n\tvec3 radar = radial_progress(mat2(cos(angles),-sin(angles),sin(angles),cos(angles))*uv,.5,.1)-vec3(smoothstep(radius_line-radius_line*0.001,radius_line-radius_line*0.001,length(uv)));\n\tcircle *= vec3(0.2353, 0.2745, 0.2745);\n\n    vec3 triangle = vec3(smoothstep(.101,0.1,Triangle(vec2(mat2(cos(angle2),-sin(angle2),sin(angle2),cos(angle2))*uv*50.)+vec2(0.,43.+10.*timer))));\n    triangle += vec3(smoothstep(.101,0.1,Triangle(vec2(mat2(cos(-angle2),-sin(-angle2),sin(-angle2),cos(-angle2))*uv*50.)+vec2(0.,43.+10.*timer))));\n  \n\tcircle = max(triangle,max(radar,circle));\n\n    // Big target\n\tvec3 Dots = vec3(smoothstep(0.006,0.005,length(vec2(uv.x+sin(.4*iTime),uv.y-sin(1.2-iTime)))));\n\tDots += vec3(smoothstep(0.006,0.005,length(vec2(uv.x-sin(-.8*iTime),uv.y-sin(1.2-sqrt(3.)*iTime)))));\n    \n    uv = uv+sin(0.1+iTime)+vec2(0.2*cos(timer/.214*10.),sin(-timer*.1*iTime))/-4.;\n\n    vec3 B_target = vec3(dcircle(uv,.008,0.004,vec2(0.)),vec2(0.));\n\n\tB_target += vec3(fract(5.*sin(iTime))*smoothstep(0.008,0.004,length(uv)),0.,0.);\n    \n\tvec3 C_target = vec3(dcircle(uv*mat2(0.1+fract(-1.+-iTime/2./.4),0.0,0.0,0.1+fract(-1.+-iTime/2./.4)),.008,0.001,vec2(0.)),vec2(0.));\n    \n\t\n\n    circle = max(circle,B_target);\n\n\tcircle = max(circle, C_target);\n\n\tcircle = max(circle,Dots);\n\tfragColor = vec4(circle,1.);\n} ","name":"Image","description":"","type":"image"}]}