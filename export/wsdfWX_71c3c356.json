{"ver":"0.1","info":{"id":"wsdfWX","date":"1606164561","viewed":59,"name":"colideaskope","username":"sanderoneil","description":"spinning","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy/2.)/(iResolution.y*.5);\n\t\n    vec3 col;\n    float k = 10.;\n    \n        float c = 1.;\n        float a = iTime/k;\n\t\tuv=vec2(cos(a)*uv.x-sin(a)*uv.y,\n                sin(a)*uv.x+cos(a)*uv.y);\n        uv*=cos(a);\n        c = flip(c,(uv.x*uv.y > 0.));\n        vec2 u=abs(uv);\n        c = flip(c,(u.y + u.x > 0.));\n        c = flip(c,(u.y - u.x > 0.));\n        c = flip(c,(u.y+u.x < 1.)&&(u.y-u.x < 1.));\n        c = flip(c,(u.x+3.*u.y < 1.)||(u.y+3.*u.x < 1.));\n        c = flip(c,(u.x+u.y/3. < 1.)&&(u.y+u.x/3. < 1.));\n\t\tcol.x+=float(mod(c,2.)==1.);\n    c = 1.;\n     a = iTime/k;\n\t\tuv=vec2(cos(a)*uv.x-sin(a)*uv.y,\n                sin(a)*uv.x+cos(a)*uv.y);\n        uv*=cos(a);\n        c = flip(c,(uv.x*uv.y > 0.));\n      u=abs(uv);\n        c = flip(c,(u.y + u.x > 0.));\n        c = flip(c,(u.y - u.x > 0.));\n        c = flip(c,(u.y+u.x < 1.)&&(u.y-u.x < 1.));\n        c = flip(c,(u.x+3.*u.y < 1.)||(u.y+3.*u.x < 1.));\n        c = flip(c,(u.x+u.y/3. < 1.)&&(u.y+u.x/3. < 1.));\n\t\tcol.y+=float(mod(c,2.)==1.);\n    c = 1.;\n      a = iTime/k;\n\t\tuv=vec2(cos(a)*uv.x-sin(a)*uv.y,\n                sin(a)*uv.x+cos(a)*uv.y);\n        uv*=cos(a);\n        c = flip(c,(uv.x*uv.y > 0.));\n     u=abs(uv);\n        c = flip(c,(u.y + u.x > 0.));\n        c = flip(c,(u.y - u.x > 0.));\n        c = flip(c,(u.y+u.x < 1.)&&(u.y-u.x < 1.));\n        c = flip(c,(u.x+3.*u.y < 1.)||(u.y+3.*u.x < 1.));\n        c = flip(c,(u.x+u.y/3. < 1.)&&(u.y+u.x/3. < 1.));\n\t\tcol.z+=float(mod(c,2.)==1.);\n    //c=((1.-a) * (1.-float(b)) + a * (float(b)))\n    // Time varying pixel color\n    //vec3 col = float(mod(c,2.)==1.) +vec3(0,0,0);//+ 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float flip( float a, bool b)\n{\n\n    return(a + 1. * (float(b)));\n    \n}","name":"Common","description":"","type":"common"}]}