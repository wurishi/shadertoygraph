{"ver":"0.1","info":{"id":"lXX3zs","date":"1707828836","viewed":114,"name":"rainbow designer","username":"svantana","description":"a convenient way of designing a nice looking rainbow","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["chroma","rgb","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float bell(float x, float skew) {\n    float a = abs(x);\n    return 1. / (1. + a*a*(1.+a) * (1. + max(0.0, skew*x*a)));\n}\nfloat thres(float x, float t) {\n    return max(0.,x-t)/(1.-t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 u = fragCoord.xy / iResolution.xy;\n\n    vec3 mid   = vec3( .33,  .50,  .66);\n    vec3 range = vec3( .25,  .18,  .15);\n    vec3 skew  = vec3(-3.50, -.0,  .80);\n    vec3 gain  = vec3(1.00,  .90, 1.00);\n    for (int c = 0; c < 3; c++) {\n        float light = gain[c] * thres(bell((u.x - mid[c])/range[c], skew[c]),.04);\n        float graph = max(0.0, 1. - abs(u.y-.75*light)*100.);\n        fragColor[c] = (u.y > 0.8) ? light : graph;\n    }\n}","name":"Image","description":"","type":"image"}]}