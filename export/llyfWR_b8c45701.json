{"ver":"0.1","info":{"id":"llyfWR","date":"1542200793","viewed":65,"name":"Spinning Julia set","username":"riukhin_","description":"Click and drag from the lower left corner to change spinning amplitudes","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 csqr(in vec2 z) {\n    float nx = z.x*z.x - z.y*z.y;\n    float ny = 2.0*z.x*z.y;\n    return vec2(nx, ny);\n}\n\nvec2 cmul(in vec2 z, in vec2 w) {\n    //(u + vi)(s + ti)\n    //us + uti + vis + viti\n    //us - vt + (ut + vs)i\n    float nx = z.x*w.x - z.y*w.y;\n    float ny = z.x*w.y + z.y*w.x;\n    return vec2(nx, ny);\n}\n\nvec3 fractal(in vec2 p) {\n    vec2 z0 = (p - iResolution.xy*0.5) * 0.003;\n    vec2 c = vec2((iMouse.x * 0.1 + 10.0) * sin(iTime * 1.0), (-iMouse.y * 0.1 + 10.0) * cos(iTime * 1.0)) * 0.05;\n    vec2 z = z0;\n    for(int i = 0; i < 5; i++) {\n        //z0 = x + yi\n        //z1 = z0^2 + c\n        //   = (x + yi)(x + yi) + (cx + cyi)\n        //   = x^2 + 2xyi - y^2 + cx + cyi\n        //   = (x^2 - y^2 + cx) + (2xy + cy)i\n        \n        vec2 z2 = csqr(z);\n        //vec2 z4 = csqr(z2);\n        z = cmul(z2, z);\n        z += c;\n    }\n    \n    //dist(z0, zn)\n    vec2 dz = z - z0;\n    float d0 = pow(dz.x*dz.x + dz.y*dz.y, 0.75);\n    float d1 = pow(dz.x*dz.x + dz.y*dz.y, 0.95);\n    //float d2 = pow(dz.x*dz.x + dz.y*dz.y, 0.01);\n    \n    vec3 col0 = mix(vec3(0.91, 0.41, 0.0), vec3(0.0, 0.7, 0.71), d0) * 0.75;\n    vec3 col1 = mix(vec3(0.6, 0.8, 0.3), vec3(0.4, 0.5, 0.2), d1) * 0.25;\n    return clamp(col0 + col1, 0.0, 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy;// / iResolution.xx;\n    vec4 col = vec4(fractal(uv), 1.0);\n\tfragColor = col;\n    \n}","name":"Image","description":"","type":"image"}]}