{"ver":"0.1","info":{"id":"ftlfzS","date":"1651096602","viewed":77,"name":"Sudoku Grid","username":"djmittens","description":"experimenting with drawing grids","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["nifty"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nfloat step(float a, float b, float x) {\n    return clamp((x - a)/(b - a), 0., 1.);\n}\n\nfloat Grid(float x, float cells, float weight) {\n    return step(weight, 0.01 + weight, abs(cos(cells*x*M_PI)));\n}\n\nfloat Dot(vec2 uv, float x, float y) {\n    return step(.009, .0, length(uv - vec2(x, y)) - 0.02);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float dim = min(iResolution.x, iResolution.y);\n    vec2 uv = (vec2(fragCoord) - iResolution.xy / 2.)/dim;\n\n    vec3 col = vec3(\n        Grid(uv.x, 9., 0.09) *Grid(uv.y, 9., 0.09)\n    );\n   \n    col *=\n        Grid(uv.x, 3., 0.09) * Grid(uv.y, 3., 0.09);\n    \n    col -= step(.5, 0.501, abs(uv.x));\n    \n    col -= Dot(uv, (mod(iTime, 2.)),  (mod(iTime, 2.)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}