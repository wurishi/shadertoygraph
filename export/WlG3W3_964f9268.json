{"ver":"0.1","info":{"id":"WlG3W3","date":"1599663672","viewed":76,"name":"Cos waves","username":"cross","description":"Experiments","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["trigonometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1416\n\nconst float waves = 5.;\n\nfloat wave(float angle, vec2 point) {\n  float cth = cos(angle);\n  float sth = sin(angle);\n  return (cos(cth*point.y - sth*point.x));\n}\n\nfloat triWrap(float v)\n{\n    return abs(mod(v+1.,2.)-1.);\n}\n\nfloat cosWrap(float v)\n{\n \treturn ((1.-cos(v*PI))/2.-0.2)*10./8.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv = vec2(uv.x*iResolution.x/iResolution.y, uv.y);\n    \n    float aTime = -iTime*PI*0.02;\n    float color = 0.;\n    \n    int option = 2;\n    \n    if(option == 1)\n    {\n    \tfor(float i=0.; i<waves; i++)\n    \t{\n    \t\tcolor += 1.-abs(wave(aTime*pow(2.,i), uv*PI*7.));\n    \t}\n    }\n    \n    if(option == 2)\n    {\n    \tfor(float i=0.; i<waves; i++)\n    \t{\n        \tcolor += 1.-abs(wave(aTime*(i+1.), uv*PI*7.));\n    \t}\n        \n    }\n    \n    color = cosWrap(color);\n    vec3 hue = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 fullColor = color * hue;\n    \n    fragColor = vec4(fullColor, 1.);\n}","name":"Image","description":"","type":"image"}]}