{"ver":"0.1","info":{"id":"NlXyRH","date":"1647486527","viewed":128,"name":"Getting values from neighbors","username":"KylBlz","description":"Just having fun with dFdx() and dFdy(). it generates a 2x2 pixel pattern so each neighboring pixel has a unique value [0, 1/3, 2/3, 1], then each pixel gets all neighbors values. It also outputs the average ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["dfdx","dfdy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// get neighboring value using dFdxy\nvec4 getNeighboringValues(in vec2 fragCoord, in float value) {\n    vec2 f = vec2(int(fragCoord.x) & 1, int(fragCoord.y) & 1),\n         d = vec2(dFdx(value), dFdy(value));\n    vec2 q = d * (0.0 - f),\n         i = d * (1.0 - f);\n    return vec4(q.xyx, i.y) + vec4(q.y, i.xyx) + value;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // generate a 2x2 pixel pattern\n    float b = float((int(fragCoord.x) & 1) | (int(fragCoord.y) & 1) << 1) * 0.333;\n    // get neighboring values\n    vec4 n = getNeighboringValues(fragCoord, b);\n    // display the pattern, then each pixel's value\n    int sf = (iFrame >> 6) % 6;\n    if (sf == 0) // pattern\n        fragColor = vec4(vec3(b), 1.0);\n    else if (sf == 1) // pixel 1 - lower left corner (0.000)\n        fragColor = vec4(vec3(n.x), 1.0);\n    else if (sf == 2) // pixel 2 - lower right corner (0.333)\n        fragColor = vec4(vec3(n.y), 1.0);\n    else if (sf == 3) // average all colors (0.5)\n        fragColor = vec4(vec3(dot(n, vec4(0.25))), 1.0);\n    else if (sf == 4) // pixel 3 - upper left corner (0.666)\n        fragColor = vec4(vec3(n.z), 1.0);\n    else if (sf == 5) // pixel 4 - upper right corner (0.999)\n        fragColor = vec4(vec3(n.w), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}