{"ver":"0.1","info":{"id":"NlS3zc","date":"1627294587","viewed":96,"name":"wavefunction 1","username":"smjty","description":"www","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["wave1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n#define N 5.\n\nvec2 rot(vec2 p, float t){\n    return vec2(p.x*cos(t) + p.y*sin(t) , p.y*cos(t) - p.x*sin(t));\n}\n\nfloat saw(float x){\n    float res = 0.;\n    for(float k=1.;k<4.;k+=1.){\n        res += (-2.*mod(k,2.)+1.) * sin(2.*PI*k*x)/k;\n    \n    }\n    return pow(clamp(res/1.5,0.,1.),2.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy  - iResolution.xy/2.0)/iResolution.x*500.0;\n    \n    p = rot(p , PI/2.);\n    vec2 pold = p;\n\n    float col = sign(p.x)\n          ,R = 50.\n          ,lambda = 2.*R*sin(PI/N)/2.\n          ,d = R*cos(PI/N)\n          ,k;\n\n    bool last = false;\n    vec2 dd = rot(vec2(1.,0.) , PI/N); \n\n    for(k=0.;k<2.*N; k+=1.){\n         vec2 dds = rot(dd , 2.*PI/N*k);\n         if(dot(dds,p)>= d){last=true;}\n         else if(last)break;    \n    }\n\n    float ret1 = 0.; \n\n    if(last){\n        vec2 np = rot(vec2(R,0.) , 2.*PI/N*k);\n        float r = length(p-np)/0.5;\n        ret1 = 0.5 + 0.5*cos(r/lambda*4.*PI  - iTime*2.*PI);\n    }\n\n    fragColor = vec4(vec3(ret1),1.0);\n}","name":"Image","description":"","type":"image"}]}