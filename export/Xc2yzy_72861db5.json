{"ver":"0.1","info":{"id":"Xc2yzy","date":"1722527387","viewed":24,"name":"photoshop style gradient map","username":"ioblackshaw","description":"maps an array of colours as a gradient based on a value ranging from 0 to 1, drag the mouse up and down to see smooth gradient or solid gradient\n\nsimilar to the gradient map adjustment in photoshop","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient","gradientmap","multistop"],"hasliked":0,"parentid":"dstSWB","parentname":"dynamic multicolour gradient"},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 normalMouse = iMouse.xy/iResolution.xy;\n    if(iMouse.xy == vec2(0,0)) normalMouse.y = 0.5;\n    vec4 texColor = texture(iChannel0,uv);\n    \n    bool smoothMix = false; // is gradient smooth or not\n    if(uv.y > normalMouse.y){\n        smoothMix = true;\n    }\n    \n    float grd = (texColor.r+texColor.g+texColor.b)/3.; // convert to grayscale (used to determine what colour in the gradient to use)\n\n    vec4 colours[] = vec4[]( // colours in the gradient\n        vec4(0.0784, 0.0667, 0.102, 1.),\n        vec4(0.7333, 0.302, 0.4196, 1.),\n        vec4(1., 1., 1., 1.)\n    );\n    vec4 gradient = colours[0]; // gradient gets put here\n\n    float len = float(colours.length()); // gradient logic\n    for(int i = 0; i < colours.length(); i++){\n        float _step = smoothMix ? (float(i)-0.5)/len : (float(i))/len;\n        float _step2 = smoothMix ? (float(i)+0.5)/len : (float(i))/len;\n\n        gradient = mix(\n            gradient,\n            colours[i],\n            smoothMix ? smoothstep(_step, _step2, grd) : step(_step, grd)\n        );\n    }\n    \n    fragColor = gradient; // draw gradient to screen\n}","name":"Image","description":"","type":"image"}]}