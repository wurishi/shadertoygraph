{"ver":"0.1","info":{"id":"dly3W3","date":"1693264906","viewed":36,"name":"madndelbrot","username":"artefox","description":"madndelbrot","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["madndelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 4.0*fragCoord/iResolution.xx;\n    uv -= vec2(2.0, 2.0*iResolution.y/iResolution.x);\n\n    int recursion_limit = 128;\n    vec2 z = vec2(0.0);\n    vec2 c = uv;\n    \n    int i;\n    for (i = 0; i < recursion_limit; i++) {\n        z = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;\n        if(length(z) > 2.0) {\n            break;\n        }\n    }\n    \n    vec3 color;\n    if (i == recursion_limit) {\n        color = vec3(1.0);\n    } else {\n        color = vec3(float(i)/float(recursion_limit));\n    }\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}