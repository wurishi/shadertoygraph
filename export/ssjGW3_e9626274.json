{"ver":"0.1","info":{"id":"ssjGW3","date":"1618057602","viewed":59,"name":"Mandelbrot Zoom _ PR","username":"p_ritoranta","description":"mandelbrot zoom in black and white","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// kompleksiluku potenssiin 2\nvec2 complex_square(vec2 v){\n    float real = v.x * v.x - v.y * v.y;\n    float imag = 2.0 * v.x * v.y;\n    return vec2(real, imag);\n}\n\n// mandelbrot iteraatio\nvec2 mandelbrot(vec2 z, vec2 c){\n    return complex_square(z) + c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // koordinaattien alustus (videosta \"Shadertoy for absolute beginners\")\n    vec2 uv = fragCoord.xy / iResolution.xy; // 0 <> 1\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 2.0;\n    \n    // tästä eteenpäin: mandelbrot zoom (videosta \"How to make a Mandelbrot Zoom in Godot Shaders\")\n    \n    int iterations = 300; // kuvion tarkkuus, isompi tarkempi\n\n    vec2 z = vec2(0.0); // aloitetaan z=0\n    float z_mag = 0.0; // magnitudi, mitataan tällä kuuluuko mandelbrotin joukkoon\n    vec2 c = uv; // koordinaatti\n    c/=iTime; // zoomataan ajan mukaan\n    c.y += 0.1; // zoomauskohta ylöspäin\n    c.x -= sqrt(0.755*0.755 - 0.1*0.1); //zoomauskohta vasemmalle päin\n    \n    float color=0.0; // lopullinen väri, valkoinen joukossa ja musta ulkopuolella\n\n    for(int i=0; i<iterations; i++){\n        z = mandelbrot(z,c); //uusi z\n        z_mag=sqrt(z.x*z.x + z.y*z.y); //etäisyys, eli kuuluuko joukkoon\n        color++; // harmaan sävyjä joukon ulkopuolella, katso lopullinen väritys\n        \n        if(z_mag >= 2.0){\n            break; // kun ei enää kuulu joukkoon, ei iteroida\n        }\n    }\n\n    // pikselin väritys\n    fragColor = vec4(vec3(color/float(iterations)),1.0);\n}\n","name":"Image","description":"","type":"image"}]}