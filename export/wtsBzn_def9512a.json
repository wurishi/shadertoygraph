{"ver":"0.1","info":{"id":"wtsBzn","date":"1595884508","viewed":187,"name":"Littlewood polynomials 3","username":"rory618","description":"This time drawing it using a Fourier transform. R to reset. Mouse down to show the Fourier transform corresponding to the selected pixel, which is the Fourier transform of the generalized dragon curve at that location.","likes":10,"published":1,"flags":48,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, in vec2 I )\n{\n    if(iMouse.z>0.){\n        vec2 x = (iMouse.xy*2.-R.xy)/R.y*1.6;\n    \tif(length(x)<1.) x /= dot(x,x);\n        vec2 xx = x;\n        vec2 f = (I*2.-R.xy)/R.y*20.;\n        float p = 1.0;\n        for(int i = 0; i < 16; i++){\n        \tp *= cos(dot(xx,f))*2.;\n        \txx = mat2(x,-x.y,x.x)*xx;\n        }\n        O = vec4(log(p*p)/30.+.5);\n    } else {\n        vec4 t = abs(texture(iChannel0, I/R.xy));\n        O = vec4(0);\n        O += vec4(1,.1,0,0) * (log(10.+t.x/t.w)-2.4)/5.;\n        O += vec4(.3,1,.6,0) * (log(10.+t.y/t.w)-2.5)/5.;\n        O += vec4(.1,0,1,0) * (log(10.+t.z/t.w)-3.)/5.;\n        O = pow(O,vec4(.4));\n        if(length(I-R.xy/2.) < R.y/10.) O *= length(I-R.xy/2.)/(R.y/10.);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"int IHash(int a){\n\ta = (a ^ 61) ^ (a >> 16);\n\ta = a + (a << 3);\n\ta = a ^ (a >> 4);\n\ta = a * 0x27d4eb2d;\n\ta = a ^ (a >> 15);\n\treturn a;\n}\n\nfloat Hash(int a){\n\treturn float(IHash(a)) / float(0x7FFFFFFF);\n}\nvec4 rand4(int seed){\n    return vec4(Hash(seed^0x34F85A93),\n                Hash(seed^0x85FB93D5),\n                Hash(seed^0x6253DF84),\n                Hash(seed^0x25FC3625));\n}\nvec3 rand3(int seed){\n    return vec3(Hash(seed^0x348CD593),\n                Hash(seed^0x8593FD5),\n                Hash(seed^0x62A5D384));\n}\nvec2 rand2(int seed){\n    return vec2(Hash(seed^0x348C5F93),\n                Hash(seed^0x8593D5BB));\n}\n\n#define R iResolution\n\n\nvec2 randn(vec2 randuniform){\n    vec2 r = randuniform;\n    r.x = sqrt(-2.*log(1e-9+abs(r.x)));\n    r.y *= 6.28318;\n    r = r.x*vec2(cos(r.y),sin(r.y));\n    return r;\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float specEst(vec2 x, int seed, float r){\n    vec2 xx = x;\n    vec2 f = r*randn(rand2(seed));\n    float acc = 0.0;\n    float p = 1.0;\n    for(int i = 0; i < 16; i++){\n        acc += p;\n        p *= cos(dot(xx,f))*2.;\n        xx = mat2(x,-x.y,x.x)*xx;\n    }\n    return acc;\n}\n\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    O = texture(iChannel0, I/R.xy);\n    vec2 x = (I*2.-R.xy)/R.y*1.6;\n    if(length(x)<1.) x /= dot(x,x);\n    for(int k = 0; k < 200; k++){\n        int seed = 200*2000*2000*iFrame + 200*2000*int(I.x) + 200*int(I.y) + k;\n    \tO.x += specEst(x,seed,1.);\n    \tO.y += specEst(x,seed,9.);\n    \tO.z += specEst(x,seed,60.);\n    \tO.w += 1.;\n    }\n    if(texelFetch(iChannel1, ivec2(82,1),0).x>.5){O*=0.;}\n}","name":"Buffer A","description":"","type":"buffer"}]}