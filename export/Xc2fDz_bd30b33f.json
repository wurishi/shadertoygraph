{"ver":"0.1","info":{"id":"Xc2fDz","date":"1724819987","viewed":31,"name":"aug272024","username":"brendanluu","description":"mousecontroll","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["popart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CIRCLE_COUNT 95\n#define MAIN_CIRCLE_SIZE 0.3\n#define MIN_CIRCLE_SIZE 0.05\n#define MAX_CIRCLE_SIZE 0.2\n\nfloat hash(float n, float seed) { return fract(sin(n) * seed); }\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 baseColor = vec3(12.1, 0.1, 2.0);\n    \n    // Calculate seed based on mouse x-position\n    float seedBase = 753.5453123;\n    float seedRange = 100.0; // Adjust this value to change the range of the seed\n    float mouseSeed = seedBase + (iMouse.x/200.0 / iResolution.x) * seedRange;\n    \n    // Main circle\n    float mainDist = length(uv);\n    float mainCircle = 1.0 - step(MAIN_CIRCLE_SIZE, mainDist);\n    float mainPattern = sin(mainDist / MAIN_CIRCLE_SIZE * 20.0 + iTime) * 0.5 + 0.5;\n    vec3 mainColor = baseColor + mainPattern;\n    vec4 result = vec4(mainColor, mainCircle);\n    \n    // Additional circles\n    for (int i = 0; i < CIRCLE_COUNT; i++) {\n        // Random position\n        vec2 center = vec2(\n            hash(float(i) * 0.123, mouseSeed) * 1.8 - 0.9,\n            hash(float(i) * 0.456, mouseSeed) * 1.8 - 0.9\n        );\n        \n        // Random size\n        float size = mix(MIN_CIRCLE_SIZE, MAX_CIRCLE_SIZE, hash(float(i) * 0.789, mouseSeed));\n        \n        float dist = length(uv - center);\n        float circle = 1.0 - step(size, dist);\n        float pattern = sin(dist / size * 20.0 + iTime) * 0.5 + 0.5;\n        vec3 color = baseColor + pattern;\n        vec4 newCircle = vec4(color, circle);\n        result = mix(result, newCircle, newCircle.a * (1.0 - result.a));\n    }\n    \n    // Mix with black background\n    vec3 finalColor = mix(vec3(0.0), result.rgb, result.a);\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}