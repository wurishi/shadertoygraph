{"ver":"0.1","info":{"id":"3s3BD7","date":"1605204432","viewed":526,"name":"Overlay Photoshop in Shaders","username":"henrmota","description":"Overlay like in photoshop;","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["overlay"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 overlay(vec4 target, vec4 blend) {\n    float gray = dot(target.xyz, vec3(0.21, 0.71, 0.07));\n    \n\treturn (gray > 0.5) ? (1. - (1.-2.*(gray-0.5)) * (1.-blend))\n\t: ((2.*gray) * blend);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float t = cos(iTime) * 0.5 + 0.5;\n    \n    // Time varying pixel color\n    vec4 col = vec4(0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)), 1.0);\n\tvec4 text = texture(iChannel0, uv);\n    \n    vec4 target = text;\n    vec4 blend = col;\n                      \n    // Output to screen\n    fragColor = overlay(target, blend);\n}","name":"Image","description":"","type":"image"}]}