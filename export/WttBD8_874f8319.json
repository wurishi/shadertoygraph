{"ver":"0.1","info":{"id":"WttBD8","date":"1612640871","viewed":129,"name":"Toon Shader","username":"misfit","description":"Applies toon shading to the image in iChannel0. New to shaders to please comment with any advice","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Get base color from image in iChannel0\n    vec3 col = texture(iChannel0, uv).rgb;\n    vec3 c1 = col;\n    \n    \n    \n    // Setup Outlines\n    const vec3 LUMCOEFFS = vec3(0.2125, 0.7154, 0.0721);\n    \n    float resS = iChannelResolution[0].x;\n    float resT = iChannelResolution[0].y;\n    \n    // Get handles to the fragments surrounding current fragment\n    vec2 stp0 = vec2(1./resS);\n    vec2 st0p = vec2(0.,resT);\n    vec2 stpp = vec2(1./resS, 1./resT);\n    vec2 stpm = vec2(1./resS, -1./resT);\n    // Build sobel convolutions\n    float i00 = dot(texture(iChannel0, uv).rgb, LUMCOEFFS);\n    float im1m1 = dot(texture(iChannel0, uv-stpp).rgb, LUMCOEFFS);\n    float ip1p1 = dot(texture(iChannel0, uv+stpp).rgb, LUMCOEFFS);\n    float im1p1 = dot(texture(iChannel0, uv-stpm).rgb, LUMCOEFFS);\n    float ip1m1 = dot(texture(iChannel0, uv+stpm).rgb, LUMCOEFFS);\n        \n    float im10 = dot(texture(iChannel0, uv-stp0).rgb, LUMCOEFFS);\n    float ip10 = dot(texture(iChannel0, uv+stp0).rgb, LUMCOEFFS);\n    float i0m1 = dot(texture(iChannel0, uv-st0p).rgb, LUMCOEFFS);\n    float i0p1 = dot(texture(iChannel0, uv+st0p).rgb, LUMCOEFFS);\n    \n    float h = -1.*im1p1 - 2.*i0p1 - 1.*ip1p1 + 1.*im1m1 + 2.*i0m1 + 1.*ip1m1;\n    float v = -1.*im1m1 - 2.*im10 - 1.*im1p1 + 1.*ip1m1 + 2.*ip10 + 1.*ip1p1;\n    float mag = sqrt(h*h + v*v);\n    \n    float magTol = 0.3125;\n    \n    // Draw outlines\n    if(mag > magTol)\n    {\n        col = vec3(0., 0., 0.);\n    }\n    else\n    {\n        // Quantize the colors\n        float q = 10.;\n        col.rgb *= q;\n        col.rgb += vec3(.5, .5, .5);\n        ivec3 icol = ivec3(col.rgb);\n        col.rgb = vec3(icol) / q;\n    }\n    \n    col = mix(c1, col, sin(fract(iTime*.1) * 2. * 3.14159)*.5 + .5);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}