{"ver":"0.1","info":{"id":"ltjBWD","date":"1515874756","viewed":176,"name":"Moire mandala","username":"huttarl","description":"Following IQ's article on distance estimation, I stumbled upon a pretty cool moire pattern. Best viewed at small scale (NOT full screen). Leave it going long enough, and you get circles, crescents, lines in 16 directions (even 32 and more!), and rhombi.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","moire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/** Following https://iquilezles.org/articles/distance */\n\nfloat f(in vec2 p) {\n\tfloat r = length(p), a = atan(p.y, p.x);\n    float t = pow(iTime, 1.4);\n    return r - 1. + 0.5 * sin(3. * a - t + (2. + t * 0.2) * r * r);\n}\n\n// Naive approach:\nfloat color(in vec2 p) {\n    float v = abs(f(p));\n    float eps = 20. / iResolution.x;\n    return smoothstep(1.0 * eps, 2.0 * eps, v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - iResolution.xy * .5) * .6 / iResolution.xx;\n    float col = color(uv * 10. ); // color(uv * 10.);\n    // Make the black a bit purplish.\n    float b = 1.0 - (1.0 - col) * .8;\n\tfragColor = vec4(b, col, b, 1.0);\n}","name":"Image","description":"","type":"image"}]}