{"ver":"0.1","info":{"id":"NdBBW3","date":"1647183850","viewed":111,"name":"texture into convert B&W","username":"raja_k","description":"Loading a texture and converting that into black and white based.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blackandwhiteloadtexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    //Taking the dynamic screen coordinates into consideration\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    //Grabbing the texture color at the current pixel.\n    vec4 textureColor = texture(iChannel0, uv);\n    \n    vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\n    vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\n    \n    //averaging the pixel value to the color and conditioning\n    float average = (textureColor.r + textureColor.g + textureColor.b)/3.0;\n    \n    if(average <= 0.5) {\n        textureColor = black;\n    }else {\n        textureColor = white;       \n    }\n    \n    // Output to screen\n    fragColor = textureColor;\n}","name":"Image","description":"","type":"image"}]}