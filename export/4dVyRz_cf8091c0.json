{"ver":"0.1","info":{"id":"4dVyRz","date":"1520852006","viewed":304,"name":"Paletted dithering","username":"jfons_","description":"Gameboy-like effect based on https://github.com/hughsk/glsl-dither/blob/master/8x8.glsl","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["gameboy","palette","pixels","dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 color0 = vec4(0.353, 0.224, 0.129, 1);\nconst vec4 color1 = vec4(0.420, 0.549, 0.259, 1);\nconst vec4 color2 = vec4(0.482, 0.776, 0.482, 1);\nconst vec4 color3 = vec4(0.569, 0.918, 0.569, 1);\nconst float pixelSize = 2.0;\n\nfloat luma(vec4 color) {\n  return dot(color.rgb, vec3(0.299, 0.587, 0.114));\n}\n\n// https://github.com/hughsk/glsl-dither/blob/master/8x8.glsl\nfloat dither8x8(vec2 position, float brightness) {\n  int x = int(mod(position.x, 8.0));\n  int y = int(mod(position.y, 8.0));\n  int index = x + y * 8;\n  float limit = 0.0;\n\n  if (x < 8) {\n    if (index == 0) limit = 0.015625;\n    if (index == 1) limit = 0.515625;\n    if (index == 2) limit = 0.140625;\n    if (index == 3) limit = 0.640625;\n    if (index == 4) limit = 0.046875;\n    if (index == 5) limit = 0.546875;\n    if (index == 6) limit = 0.171875;\n    if (index == 7) limit = 0.671875;\n    if (index == 8) limit = 0.765625;\n    if (index == 9) limit = 0.265625;\n    if (index == 10) limit = 0.890625;\n    if (index == 11) limit = 0.390625;\n    if (index == 12) limit = 0.796875;\n    if (index == 13) limit = 0.296875;\n    if (index == 14) limit = 0.921875;\n    if (index == 15) limit = 0.421875;\n    if (index == 16) limit = 0.203125;\n    if (index == 17) limit = 0.703125;\n    if (index == 18) limit = 0.078125;\n    if (index == 19) limit = 0.578125;\n    if (index == 20) limit = 0.234375;\n    if (index == 21) limit = 0.734375;\n    if (index == 22) limit = 0.109375;\n    if (index == 23) limit = 0.609375;\n    if (index == 24) limit = 0.953125;\n    if (index == 25) limit = 0.453125;\n    if (index == 26) limit = 0.828125;\n    if (index == 27) limit = 0.328125;\n    if (index == 28) limit = 0.984375;\n    if (index == 29) limit = 0.484375;\n    if (index == 30) limit = 0.859375;\n    if (index == 31) limit = 0.359375;\n    if (index == 32) limit = 0.0625;\n    if (index == 33) limit = 0.5625;\n    if (index == 34) limit = 0.1875;\n    if (index == 35) limit = 0.6875;\n    if (index == 36) limit = 0.03125;\n    if (index == 37) limit = 0.53125;\n    if (index == 38) limit = 0.15625;\n    if (index == 39) limit = 0.65625;\n    if (index == 40) limit = 0.8125;\n    if (index == 41) limit = 0.3125;\n    if (index == 42) limit = 0.9375;\n    if (index == 43) limit = 0.4375;\n    if (index == 44) limit = 0.78125;\n    if (index == 45) limit = 0.28125;\n    if (index == 46) limit = 0.90625;\n    if (index == 47) limit = 0.40625;\n    if (index == 48) limit = 0.25;\n    if (index == 49) limit = 0.75;\n    if (index == 50) limit = 0.125;\n    if (index == 51) limit = 0.625;\n    if (index == 52) limit = 0.21875;\n    if (index == 53) limit = 0.71875;\n    if (index == 54) limit = 0.09375;\n    if (index == 55) limit = 0.59375;\n    if (index == 56) limit = 1.0;\n    if (index == 57) limit = 0.5;\n    if (index == 58) limit = 0.875;\n    if (index == 59) limit = 0.375;\n    if (index == 60) limit = 0.96875;\n    if (index == 61) limit = 0.46875;\n    if (index == 62) limit = 0.84375;\n    if (index == 63) limit = 0.34375;\n  }\n\n  return brightness < limit ? 0.0 : 1.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    fragCoord = floor(fragCoord/pixelSize) * pixelSize;\n    vec2 uv = fragCoord/iResolution.xy;\n    fragCoord /= pixelSize;\n    \n\tvec4 color = texture(iChannel0, uv);\n \n    if (distance(color.rgb, vec3(0.05,0.64,0.15)) < 0.03) {\n        fragColor = color1;\n        return;\n    }\n    \n\tfloat l = luma(color);\n\t\n\tfloat ll = l * 4.0;\n\tfloat b;\n\t\n\tif (ll <= 1.5) b = ll/1.5;\n\telse if (ll <= 2.5) b = ll-1.5;\n\telse b = (ll-2.5)/1.5;\n\t\n\tfloat d = dither8x8(fragCoord, b);\n\t\n\tif (ll <= 1.5) fragColor = d == 0.0 ? color0 : color1;\n\telse if (ll <= 2.5) fragColor = d == 0.0 ? color1 : color2;\n\telse if (ll <= 3.975) fragColor = d == 0.0 ? color2 : color3;\n\telse fragColor = color3;\n}","name":"Image","description":"","type":"image"}]}