{"ver":"0.1","info":{"id":"MlBGWG","date":"1431816558","viewed":705,"name":"Carved Trees","username":"Kali","description":"Mostly coded with \"Shader Editor\" android app, some time ago. Mouse enabled.","likes":21,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","3dlighting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"//(if mousex+y>0...) \n#define time iTime*.5\n#define resolution iResolution.xy\n\nvec3 ldir;\nfloat ot;\n\nfloat tree(vec2 p) {\n\tp=p*.72+vec2(0.,1.32);\n\tot=1000.;\n\tfor (int i=0; i<28; i++) {\n\t\tfloat l=dot(p,p);\n\t\tot=min(ot,abs(l-.6));\n\t\tp.x=abs(p.x);\n\t\tp=p/l*2.-vec2(.38,.2);\n  \n\t}\n\treturn dot(p,p)*.02;\n}\n\nfloat light(vec2 p) {\n\tvec2 d=vec2(0.,.003);\n\tfloat d1=tree(p-d.xy)-tree(p+d.xy);\n\tfloat d2=tree(p-d.yx)-tree(p+d.yx);\t\n  \tvec3 n1=vec3(0.,d.y,d1);\n  \tvec3 n2=vec3(d.y,0.,d2);\n  \tvec3 n=normalize(cross(n1,n2));\n  \tfloat diff=max(0.,dot(ldir,n))*.6;\n\tvec3 r=reflect(vec3(0.,0.,1.),ldir);\n\tfloat spec=pow(max(0.,dot(r,n)),25.)*.4;\n  \treturn (diff+spec+.15)*max(0.4,1.-tree(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = gl_FragCoord.xy/resolution.xy-.5;\n\tvec2 aspect=vec2(resolution.x/resolution.y,1.);\n    p*=aspect;\n  \tif (iMouse.z>0.) p+=3.*(iMouse.xy/iResolution.xy-.5);\n    p*=1.+sin(time)*.2;\n    float a=2.+cos(time*.3)*.5;\n    mat2 rot=mat2(sin(a),cos(a),-cos(a),sin(a));\n    p*=rot;\n    p+=vec2(sin(time),cos(time))*.2;\n\tvec3 lightpos=vec3(sin(time*3.)*.8,cos(time)*.9,-1.);\n\tlightpos.xy*=aspect*.5;\n\tldir=normalize(vec3(p,-tree(p))+lightpos);\n  \tfloat l=light(p);\n  \tot=max(1.-ot*.7,0.);\n\tvec3 col=l*vec3(ot*ot*1.45,ot*.9,ot*ot*.55);\n\tcol+=pow(max(0.,.2-length(p+lightpos.xy))/.2,3.)*vec3(1.2,1.1,1.);\n\tcol*=pow(max(0.,1.-length(p+lightpos.xy)*.3),2.5);\n\tfragColor = vec4(col+.03, 1.0 );\n}\n\n\n","name":"Image","description":"","type":"image"}]}