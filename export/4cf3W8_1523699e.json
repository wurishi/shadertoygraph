{"ver":"0.1","info":{"id":"4cf3W8","date":"1702980960","viewed":37,"name":"GIMP pixelize","username":"untodesu","description":"GIMP has an effect called pixelize and it seems no one bothered to actually make it into a GLSL shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pixelate","pixelart","pixelize","gimp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BLOCK_WIDTH 8.0\n#define BLOCK_HEIGHT 8.0\n#define SIZE_RATIO_X 0.50\n#define SIZE_RATIO_Y 0.50\n#define BACKGROUND vec4(0.0, 0.0, 0.0, 0.0);\n\nvoid mainImage(out vec4 target, in vec2 pixcoord)\n{\n    vec2 pixel = 1.0 / iResolution.xy; \n    vec2 texcoord = vec2(0.0, 0.0);\n    texcoord.x = BLOCK_WIDTH * pixel.x * floor(pixcoord.x / BLOCK_WIDTH);\n    texcoord.y = BLOCK_HEIGHT * pixel.y * floor(pixcoord.y / BLOCK_HEIGHT);\n\n    float gap_width = BLOCK_WIDTH * (1.0 - SIZE_RATIO_X);\n    float gap_height = BLOCK_HEIGHT * (1.0 - SIZE_RATIO_Y);\n\n    float mod_x = mod(pixcoord.x, BLOCK_WIDTH);\n    float mod_y = mod(pixcoord.y, BLOCK_HEIGHT);\n\n    if((mod_x <= gap_width) || (mod_y <= gap_height)) {\n        // This is the gap between colored blocks\n        target = BACKGROUND;\n    }\n    else {\n        target = vec4(0.0, 0.0, 0.0, 0.0);\n        for(float i = 0.0; i < BLOCK_WIDTH; ++i)\n            for(float j = 0.0; j < BLOCK_HEIGHT; ++j)\n                target += texture(iChannel0, texcoord + pixel * vec2(i, j));\n        target /= BLOCK_WIDTH * BLOCK_HEIGHT;\n    }\n}\n","name":"Image","description":"","type":"image"}]}