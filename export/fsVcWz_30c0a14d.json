{"ver":"0.1","info":{"id":"fsVcWz","date":"1654704802","viewed":79,"name":"(failed) hexagons","username":"AShaderBeginner","description":"well this is interesting, it's 23:11 here and i coded this shader on a phone, i'll try tommorow when i get the calculations right","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shapes","failed"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SQRT_3 1.732051\n#define HALF_SQRT_3 0.66025\n#define INV_SQRT_3 0.5773502\n\nvec2 getCenter(float x, float y, float r){\n    float stretch = mod(y, r * SQRT_3);\n    stretch -= HALF_SQRT_3 * r;\n    stretch = abs(stretch);\n    stretch *= INV_SQRT_3;\n    stretch /= r;\n    stretch += 1.0;\n    float x1 = x / stretch;\n    return vec2((floor(x1 / r) + 0.5) * r * stretch,\n                (floor(y * INV_SQRT_3 / r) + 0.5) * r * SQRT_3);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float r = iResolution.x / 10.0;\n    vec2 cx = getCenter(float(fragCoord.x), float(fragCoord.y), r) / iResolution.xy;\n    fragColor.rgb = vec3(1.0 - distance(cx, vec2(0.5)));\n}","name":"Image","description":"","type":"image"}]}