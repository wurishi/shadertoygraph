{"ver":"0.1","info":{"id":"wt23WW","date":"1559659827","viewed":380,"name":"Distance circle","username":"Imsure1200q_1UWE130","description":"yeah","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["bl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define squv *= iResolution.x/iResolution.y;\n\nfloat map( float a, float a1, float a2, float b1, float b2 ) {\n    return (a - a1) / (a2 - a1) * (b2 - b1) + b1;\n}\n\nfloat dcircle( vec2 p, vec2 o, float r ) {\n    \n    //float rcos = dot(p-o, vec2(1.,0.));\n    \n    //float rd = acos(rcos);\n    \n    vec2 n = normalize(p-o);\n    vec2 nr = n * r;\n    \n    return distance(nr+o, p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mo = iMouse.xy / iResolution.xy;\n    \n    mo.x squv uv.x squv\n\n    // Time varying pixel color\n    ///vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col = vec3(pow(sin(dcircle( uv, vec2(0.5), distance(mo, vec2(0.5) ) )*64.+iTime)/2.+0.5, 0.07));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}