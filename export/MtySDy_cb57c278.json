{"ver":"0.1","info":{"id":"MtySDy","date":"1485667373","viewed":560,"name":"Green-Mandelbrot","username":"Moritz","description":"Zoom into the Mandelbrot Set","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int granularity = 180;\nconst float zoomTimeLength = 25.0;\nconst float maxZoom = 80.0;\nconst float minZoom = 0.0001;\nconst vec2 center = vec2(0.3855, 1.0114);\nconst float speed = zoomTimeLength / (maxZoom / minZoom);\nconst vec3 baseColor = vec3(0.6, 0.9, 0.0);\n\nvec2 complexTimes(vec2 a, vec2 b) {\n    return mat2(a,-a.y,a.x) * b;\n}\n\nint mand(vec2 z0) {\n    vec2 z = z0;\n\n    for (int t = 1; t < granularity; t++) {\n        if (dot(z,z) > 2.0) {\n            return t;\n        }\n        z = complexTimes(z, z) + z0;\n    }\n    \n    return granularity;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float t = mod(iTime, zoomTimeLength);\n    float tf = t / zoomTimeLength;\n    \n    float scale = maxZoom / (t / speed);\n    scale = pow(scale, tf);\n    \n    vec2 coord = (fragCoord / iResolution.xy - 0.5) * 2.0;\n    coord *= scale;\n    coord += center;\n    coord.y *= iResolution.y / iResolution.x;\n    \n    int res = mand(coord);\n    \n    vec3 color = (1.4 - tf) * 2.0 * baseColor * (float(res) / float(granularity));\n\n    if (res == granularity) {\n    \tcolor = vec3(0);;\t\n    }\n    \n\n    //color.x += 1.0 - tf;\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}