{"ver":"0.1","info":{"id":"tsXfWH","date":"1588134997","viewed":116,"name":"2DNoise","username":"Nano98","description":"2d noise","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 uv){\n    return fract(sin(dot(uv.xy,vec2(.9898,78.233)))*43758.5453123);\n}\n\nfloat noise(vec2 uv){\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n    float a = random(i);\n    float b = random(i + vec2(1.,0.));\n    float c = random(i + vec2(0.,1.));\n    float d = random(i + vec2(1.,1.));\n    \n    vec2 u = f*f*(3. - 2. * f);\n    u = smoothstep(0.,1.,f);\n    \n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy * 2. - iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.0);\n    vec2 p = uv;\n    p = abs(p);\n    float noise = noise(uv - vec2(3.*sin(iTime * 0.1),5.*cos(iTime*0.1)));\n\n    float light = 0.05 / abs(uv.y + sin(50. *noise - iTime * 3.));\n\n    col = vec3(light);\n\n    col *= 1. / vec3(dot(0.5 + 0.25*sin(iTime*0.1),0.3 + 0.5 * cos(iTime*0.25)),0.5 + 0.35*cos(iTime*0.75),0.16 + 0.8*sin(iTime*0.13));\n    \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}