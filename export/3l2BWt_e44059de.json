{"ver":"0.1","info":{"id":"3l2BWt","date":"1600373248","viewed":135,"name":"checkerboard2","username":"neur0sys","description":"checkerboard","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\n// Distance between layers\n#define K 4.0\n\n#define K1 1.0\n\n// Speed\n#define S 4.0\n\nfloat ds[20];\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // aspect ratio\n    uv.x *= iResolution.x / iResolution.y;\n\t\n    // [-1, 1]\n    uv = uv * 2.0 - 1.0;\n    \n    // center horizontal\n\tuv.x -= 1.0;\n    \n    float dist = mod(iTime, 20.0) > 10.0 ? K : K1;\n    \n    // move the layers\n    for (int i = 0; i < ds.length(); i++) {\n        ds[i] = (dist - mod(iTime * S, dist)) + float(i) * dist;\n    }\n    \n    // Default\n    fragColor = vec4(vec3(0.0), 1.0);\n    \n    bool drawn = false;\n    \n    float dx = cos(iTime) * 0.1;\n    float dy = sin(iTime) * 0.1;\n    \n    for (int i = 0; i < ds.length(); i++) {\n        float d = ds[i];\n\n        if (drawn) {\n        \tbreak;\n        }\n        \n        float x0 = uv.x;\n        float y0 = uv.y;\n        \n        x0 += d * dx;\n        y0 += d * dy;\n        \n        // change freq for layer\n        float x1 = x0 * d;\n        float y1 = y0 * d;\n\n        // center vertical\n        y1 += M_PI / 2.0;\n\n        int xon = cos(x1) > 0.0 ? 1 : 0;\n        int yon = sin(y1) > 0.0 ? 1 : 0;\n\n        int c = (xon ^ yon);\n\n        if (c != 0) {\n            float c1 = 1.0 - (d / 10.0);\n            \n            fragColor = vec4(vec3(0.0, c1 - 0.25, sin(iTime) * 0.125 + c1), 1.0);\n            \n        \tdrawn = true;\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}