{"ver":"0.1","info":{"id":"XXscDH","date":"1726120780","viewed":59,"name":"andromeda fields","username":"jorunna","description":"efforts of going through an old tutorial by art of code","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["space","stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_LAYERS 7.\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat Star(vec2 uv, float flare) {\n    float d = length(uv);\n    float m = .06/d;\n    //col += m;\n    float rays = max(0., 1. -abs(uv.x*uv.y*1000.));\n    m += rays * flare;\n    uv *= Rot(3.14159/4.);\n    rays = max(0., 1. -abs(uv.x*uv.y*1000.));\n    m += rays*.3*flare;\n    \n    m *= smoothstep(1., .2, d);\n    return m;\n}\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(109.11, 872.17));\n    p += dot(p, p+36.42);\n    return fract(p.x*p.y);\n}\n\nvec3 StarLayer(vec2 uv) {\n    vec3 col = vec3(0);\n\n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    for(int y=-1;y<=1;y++) {\n        for(int x=-1;x<=1;x++) {\n            vec2 offs = vec2(x, y);\n            \n            float n = Hash21(id+offs);\n            float size = fract(n*982.35);\n            float star = Star(gv-offs-vec2(n, fract(n*46.))+.5, smoothstep(.85, 1., size)*.6);\n            \n            vec3 color = sin(vec3(.4, .3, .5)*fract(n*297.2)*iTime)*.5+.5;\n            color = color*vec3(1.+size,.5,1);\n            \n            star *= sin(iTime*3.+n*6.2831)*.5+1.;\n            col += star*size*color;\n        }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 M = (iMouse.xy-iResolution.xy)/iResolution.y;\n    float t = iTime*.01;\n    \n    uv += M*3.;\n    \n    uv *= Rot(t);\n    \n    vec3 col = vec3(0);\n    \n    for(float i=0.; i<1.; i+=1./NUM_LAYERS) {\n        float depth = fract(i+t);\n        \n        float scale = mix(20., .5, depth);\n        float fade = depth*smoothstep(1., .9, depth);\n        col += StarLayer(uv*scale+i*456.1-M)*fade;\n    }\n    \n    //if(gv.x > .48 || gv.y >.48) col.r=1.;\n    fragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}