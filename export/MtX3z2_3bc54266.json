{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"\nfloat gamma = 0.55;\nfloat Cubic (float value) {\n\t\n    // Possibly slightly faster calculation\n    // when compared to Sigmoid\n    \n    if (value < 0.5)\n    {\n        return value * value * value * value * value * 16.0; \n    }\n    \n    value -= 1.0;\n    \n    return value * value * value * value * value * 16.0 + 1.0;\n}\n\nfloat Sigmoid (float x) {\n\n\t//return 1.0 / (1.0 + (exp(-(x * 14.0 - 7.0))));\n    return 1.0 / (1.0 + (exp(-(x - 0.5) * 14.0))); \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    vec4 C = texture(iChannel0, uv);\n   \tvec4 A = C; \n    \n    \tC = vec4(Cubic(C.r), Cubic(C.g),Cubic(C.b), 1.0); \n    \t//C = vec4(Sigmoid(C.r), Sigmoid(C.g),Sigmoid(C.b), 1.0); \n        \n       \tC = pow(C, vec4(gamma)); \n   \n    \n    fragColor = C;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MtX3z2","date":"1423320187","viewed":1964,"name":"Sigmoid Contrast","username":"Loadus","description":"Very simple contrast curve that compresses the dynamic range of the image. This kind of curve is used a lot in post processing and color grading in movies.\n\nWhen applied, all blur and sharpen effects give a more natural response.","likes":33,"published":1,"flags":0,"usePreview":0,"tags":["effect","contrast","film","sigmoid"],"hasliked":0,"parentid":"","parentname":""}}