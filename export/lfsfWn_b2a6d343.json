{"ver":"0.1","info":{"id":"lfsfWn","date":"1723699794","viewed":37,"name":"zhengtongdu_shader02","username":"zhengtongdu","description":"render a triangle","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["learnglsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 A = vec2(iResolution.y / 4.0f, iResolution.y / 4.0f);\n    vec2 B = vec2(iResolution.y * 3.0f / 4.0f, iResolution.y / 4.0f);\n    vec2 C = vec2(iResolution.y * 3.0f / 4.0f, iResolution.y * 3.0f / 4.0f);\n\n    float alpha, beta, gamma;\n    alpha = ((fragCoord.y - B.y) * (C.x - B.x) - (fragCoord.x - B.x) * (C.y - B.y)) * 1.0f / ((A.y - B.y) * (C.x - B.x) - (A.x - B.x) * (C.y - B.y));\n    beta = ((fragCoord.y - C.y) * (A.x - C.x) - (fragCoord.x - C.x) * (A.y - C.y)) * 1.0f / ((B.y - C.y) * (A.x - C.x) - (B.x - C.x) * (A.y - C.y));\n    gamma = 1.0f - alpha;\n    gamma = gamma - beta;\n    if(alpha < 0.0f || beta < 0.0f || gamma < 0.0f)\n        fragColor = vec4(0.0f, 0.0f, 0.0f, 1.0f);\n    else\n        fragColor = vec4(alpha, beta, gamma,1.0);\n}","name":"Image","description":"","type":"image"}]}