{"ver":"0.1","info":{"id":"tdyBRc","date":"1607616974","viewed":57,"name":"Rces_Sphere","username":"Rces","description":"Simple sphere with light source","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 sphere()\n{\t\n\treturn vec4(0, 0, 2, 1);\n}\nvec3 light()\n{\n    float start = 2.3;\n\treturn vec3(sin(iTime+start), 1, 1.0+cos(iTime+start));\n}\nfloat equation(float a, float b, float c)\n{\n\tfloat d = b * b - 4.0 * a * c;\n\tif (d >= 0.0)return (-b - sqrt(d)) / a / 2.0;\n\telse return -1.0;\n}\nvec3 hit(vec3 l, vec4 s)\n{\n\tfloat a = dot(l,l);\n    float b = -2.0*dot(l,s.xyz);\n    float c = dot(s.xyz,s.xyz)-dot(s.w,s.w);\n    float eq = equation(a,b,c);\n    if(eq>=0.0)\n    {\n    \treturn l*eq;\n\t}\n    else return vec3(0.0,0.0,0.0);\n}\nfloat angle(vec3 A,vec3 B)\n{\n\treturn dot(A,B)/length(A)/length(B);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0*fragCoord/vec2(iResolution.y,iResolution.y)-vec2(iResolution.x/iResolution.y,1.0);\n    vec3 A = normalize(vec3(uv,1));\n    vec3 H = hit(A,sphere());\n    vec3 L = normalize(H-light());\n    vec3 N = normalize(H-sphere().xyz);\n    float coef = (length(normalize(H) - reflect(L,N)))/2.0;\n    vec3 col;\n    if(H!=vec3(0.0,0.0,0.0))\n\t\tcol = vec3(coef,coef,coef);\n    else\n    \tcol = vec3(0.0,0.0,0.0);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}