{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const int max_iterations = 255;\n\nvec2 complex_square( vec2 v ) {\n\treturn vec2(\n\t\tv.x * v.x - v.y * v.y,\n\t\tv.x * v.y * 2.0\n\t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy - iResolution.xy * 0.5;\n\tuv *= 2.5 / min( iResolution.x, iResolution.y );\n\t\n\tvec2 c = vec2( 0.37+cos(iTime*1.23462673423)*0.04, sin(iTime*1.43472384234)*0.10+0.50);\n\tvec2 v = uv;\n\tfloat scale = 0.01;\n\t\n\tfloat smoothcolor = exp(-length(v));\n\n\tfor ( int i = 0 ; i < max_iterations; i++ ) {\n\t\tv = c + complex_square( v );\n\t\tsmoothcolor += exp(-length(v));\n\t\tif ( dot( v, v ) > 4.0 ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t/*\nfragColor = 0.4*(1.0+\n\t\t\t\t\t\tvec4( sin(smoothcolor*0.05+iTime*0.63), \n\t\t\t\t\t\t\t sin(smoothcolor*0.04+iTime*0.32), \n\t\t\t\t\t\t\t sin(smoothcolor*0.03+iTime*0.7),1.0));\n*/\n\tfloat r = 0.6+0.4*(sin(smoothcolor*0.1+iTime*0.63));\n\tfloat g = r * r;\n\tfloat b = r * g;\n\tfragColor = vec4(r,g,b,0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XssXDr","date":"1399406269","viewed":2760,"name":"Juliasm","username":"xylifyx","description":"An animating julia set, heavy colored","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","palette","animation"],"hasliked":0,"parentid":"","parentname":""}}