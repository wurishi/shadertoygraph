{"ver":"0.1","info":{"id":"stXcWS","date":"1648619998","viewed":224,"name":"Glowing gems","username":"jarble","description":"Another glowing fractal pattern.","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["fractal","gem","ruby","emerald"],"hasliked":0,"parentid":"flXyDN","parentname":"Painted glass"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nfloat triangle_wave(float a){\n    return abs(fract(a)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 2.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += (iTime+8.)/vec2(2.0,3.0)/t1/12.0;\n    float scale = c1.z;\n    vec2 t2 = vec2(0.);\n    vec2 t3 = vec2(0.);\n    //float s1 = 1.;\n    for(int k = 0; k < 12; k++){\n        vec2 uv1 = uv;\n        uv -= (t2.yx);\n        t2 = triangle_wave(uv.yx+.5,scale).yx/2.;\n        t3 = triangle_wave(uv,scale).yx;      \n        uv.yx = t3-t2/3.;\n        //uv.y *= sign(uv.x);\n        float m1 = uv.x;\n        \n        \n        //More interesting patterns here:\n        //float m1 = (uv.y-uv.x)/(1.-t2.x);\n        //float m1 = (uv.y+uv.x)/2./(1.-t2.x);\n\n        //float m1 = uv.x-uv.y;\n        //float m1 = uv.y-uv.x;\n        //float m1 = uv.x*float(k%2)+uv.y*float((k+1)%2);\n        \n        col.x = max(m1,col.x);\n        col = abs(col.yzx-vec3(col.x*(2.125+.125*4.*triangle_wave((uv.x)*16.+iTime*4.)/8.-t2.y)));\n        uv /= 1.25;\n        //uv -= float(k%3)/2.;\n        //uv -= float(k%3+5)/2.;\n\n        \n        //if(k>3) uv.x += iTime/s1/4.;\n        //s1 *= scale;\n        //uv /= 1.+normalize(t2).x/3.;\n    }\n    fragColor = vec4(col,1.0);   \n}\n","name":"Image","description":"","type":"image"}]}