{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"float anti(float t, float k)\n{\n    float d = 1.0+t*t-t*t*k*k;\n    if (d <= 0.0)\n        return -1.0;\n    float x = (k + sqrt(d))/(1.0 + t*t);\n    if (x < k)\n        return acos(-1.0)-asin(x*t);\n    else\n        return asin(x*t);\n}\n\nfloat sphere(float t, float k)\n{\n    float d = 1.0+t*t-t*t*k*k;\n    if (d <= 0.0)\n        return -1.0;\n    float x = (k - sqrt(d))/(1.0 + t*t);\n    return asin(x*t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy - 0.5*iResolution.xy;\n    float v = iResolution.x;\n    if (v > iResolution.y)\n        v = iResolution.y;\n\tuv /= v;\n    uv *= 2.0;\n    float t = length(uv);\n    float coef = sin(iTime);\n    float k = abs(coef);\n    float len2;\n    if (k < 0.05)\n        k = 0.05;\n    if (coef > 0.0)\n        len2 = sphere(t*k,sqrt(2.0))/sphere(1.0*k,sqrt(2.0));\n    else\n    \tlen2 = anti(t*k*2.0,1.0)/anti(1.0*k*2.0,1.0);\n\tuv = uv * len2 * 0.5 / t;\n\tuv = uv + 0.5;\n\tif (len2 < 0.0 || uv.x < 0. || uv.y < 0. || uv.x > 1. || uv.y > 1.)\n\t{\n\t\tfragColor = vec4(0,0,0,1.0);\n\t\treturn;\n\t}\n\tfragColor = texture(iChannel0,uv);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Md2SRd","date":"1415135889","viewed":543,"name":"Spherize and Antispherize","username":"r57shell","description":"I don't know how to make it simpler.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["spherize","radialdistortion"],"hasliked":0,"parentid":"","parentname":""}}