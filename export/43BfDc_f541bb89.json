{"ver":"0.1","info":{"id":"43BfDc","date":"1730024012","viewed":27,"name":"Mandelbrot - Shadetober24 #26","username":"franke333","description":"Day 26 of shadetober","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shadetober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAXSTEPS 200\n#define OFFSET vec2(-1.005,0.282)\nvec2 fn(vec2 a, vec2 c)\n{\n    return vec2(a.x*a.x-a.y*a.y,2.*a.x*a.y)+c;\n}\n\nbool escaped(vec2 z)\n{\n    return length(z) >= 5.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord -.5*iResolution.xy)/iResolution.x;\n    //TODO better numbers\n    //uv += ;\n    uv = uv * (3./pow(iTime+.0001,2.)) + OFFSET;\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    vec2 z = vec2(0.);\n    for(int i=0;i<MAXSTEPS;i++){\n        z = fn(z,uv);\n        if(escaped(z)){\n            col = mix(vec3(0.),vec3(1.),float(i)/float(MAXSTEPS));\n            break;\n        }\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}