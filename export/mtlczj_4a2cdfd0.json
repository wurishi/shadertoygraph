{"ver":"0.1","info":{"id":"mtlczj","date":"1690970124","viewed":119,"name":"just_sound_round_bar","username":"beetom","description":"implementation of very high performance of music visualizer event on fullscreen mode, no for loop on any set of bar count!","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["soundbar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const lowp float PI = 3.1415926535;\nlowp float hash(lowp vec3 p)  \n{\n    p  = fract( p*0.3183099+.1 );\n    p *= 17.0;\n    return fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\n}\nlowp float noise( in lowp vec3 x )\n{\n    lowp vec3 i = floor(x);\n    lowp vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    \n    return mix(mix(mix( hash(i+vec3(0,0,0)), \n                        hash(i+vec3(1,0,0)),f.x),\n                mix( hash(i+vec3(0,1,0)), \n                        hash(i+vec3(1,1,0)),f.x),f.y),\n            mix(mix( hash(i+vec3(0,0,1)), \n                        hash(i+vec3(1,0,1)),f.x),\n                mix( hash(i+vec3(0,1,1)), \n                        hash(i+vec3(1,1,1)),f.x),f.y),f.z);\n}\n\n\nlowp float sdArc(lowp vec2 p, lowp vec2 o, lowp float iner, lowp float outer, lowp float rays)\n{\n    lowp vec2 c = p - o;\n    lowp float n = length(c);\n    \n    p = p + vec2(.01, 0);\n    lowp float rad = mod(abs(acos((p.x * o.x + p.y * o.y) / (length(p) * length(o)))), PI);\n    rad = (o.y - p.y) < 0. ? rad : 2. * PI - rad;\n    lowp float crad = 2.0 * PI / rays;\n    \n    int i = int(rad / crad);\n    lowp float cd = noise(vec3(sin(iTime * 0.17 * float(i) * 0.3), cos(iTime * 0.07 * float(i)), cos(iTime * 0.09 * float(i) * 0.3)));\n    lowp float len = (outer-iner) * cd;\n    outer = iner + len;\n    \n    \n    lowp float t = float(i) * crad;\n    lowp float d0 = n - iner;\n    lowp float d1 = outer - n;\n    lowp float d2 = crad / 2.0 - abs(t - rad);\n    lowp float d = min(d0, d1);\n    d = min(d, d2);\n    \n    return smoothstep(0.0, 0.01, d);\n}\n\n\nvoid mainImage( out lowp vec4 fragColor, in lowp vec2 fragCoord )\n{\n    lowp vec2 uv = fragCoord/iResolution.xy;\n    uv = (vec2(.5) - uv) / vec2(.5);\n    uv.x *= (iResolution.x  / iResolution.y);\n    lowp float d = 0.f;\n    lowp vec3 col = vec3(.0f);\n    if(d > 0.f)\n        col += vec3(d);\n    lowp vec3 colorIndicator = vec3(1., .4, .7);\n    lowp vec3 colorBg = vec3(.3, .3, .3);\n        \n    d = sdArc(vec2(.0, .0), uv, 0.475, 1.0, 120.0);\n    if(d > 0.f)\n        col += (colorIndicator * d);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}