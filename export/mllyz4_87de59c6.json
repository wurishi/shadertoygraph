{"ver":"0.1","info":{"id":"mllyz4","date":"1690480889","viewed":123,"name":"Matrix clock","username":"DantesPlan","description":"a matrix style watch","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["time","clock","matrix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SHADERTOY\n\n#ifdef SHADERTOY\n#define resolution iResolution\n#define time iTime\n#define date iDate\n#endif\n\n#ifndef SHADERTOY\n#define iResolution resolution\n#define iTime time\n#define iDate date\nuniform vec2 resolution;\nuniform float time;\nuniform vec4 date;\n#endif\n\nuniform float battery;\nuniform vec3 daytime;\n\n#define PI 3.14159265358\n\n#define BLACK vec4(vec3(0.0),1.0)\n#define WHITE vec4(1.0)\n#define CLEAR vec4(0.0)\n\nfloat rand11(float co) { return fract(sin(co*(91.3458)) * 47453.5453); }\n\nfloat rand12(in vec2 uv)\n{\n\treturn fract(sin(dot(floor(uv),vec2(12.9898,78.233)))*45.6789);\n}\n\nvec2 barrelDistortion(vec2 st, float density)\n{\n\tfloat r = (st.x*st.x) + (st.y*st.y);\n\tst *= 3.141592 * density * r + density * r * r;\n\treturn st;\n}\n\nvec4 grid(vec2 uv,float tiles,float thickness,float density)\n{\n\tvec4 layer = CLEAR;\n\tfloat tileSize = (iResolution.y/tiles);\n\tvec2 gl = step(fract(uv.xy/vec2(tileSize))*vec2(tileSize),vec2(thickness))*0.3;\n\tgl = max(gl,step(fract(uv.xy/vec2(tileSize*5.0))*vec2(tileSize*4.0),vec2(thickness)));\n\tfloat gridLine = max(gl.x, gl.y)*density;\n\tlayer = abs(uv.x-0.5)<=(thickness)?vec4(vec3(1.0,0.0,0.0),1.0):abs(uv.y-0.5)<(thickness)?vec4(vec3(0.0,1.0,0.0),1.0):vec4(vec3(1.0),gridLine);\n\t// Center dot\n\tvec2 cd = step(abs(uv-0.5),vec2(tileSize*0.25));\n\tlayer = mix(layer, vec4(vec3(0.0,0.0,1.0),1.0), min(cd.x,cd.y));\n\treturn layer;\n}\n\nfloat sdRect(vec2 st,vec2 pos,vec2 size)\n{\n\treturn max(abs(st.x-pos.x)-size.x,abs(st.y-pos.y)-size.y);\n}\n\nfloat digitFunc(vec2 uv,vec2 pos,vec2 size,float blur,int num)\n{\n\tfloat d=1.0;\n\n\tuv -= pos;\n\tuv /= size;\n\n\tif(num==0)\n\t{\n\t\td = max(sdRect(uv,vec2(0.0),vec2(3.0,5.0)),-sdRect(uv,vec2(0.0),vec2(1.0,3.0)));\n\t}\n\tif(num==1)\n\t{\n\t\td = sdRect(uv,vec2(2.0,0.0),vec2(1.0,5.0));\n\t}\n\tif(num==2)\n\t{\n\t\td = max(sdRect(uv,vec2(0.0,0.0),vec2(3.0,5.0)),-sdRect(uv,vec2(-1.0,2.0),vec2(2.0,1.0)));\n\t\td = max(d,-sdRect(uv,vec2(1.0,-2.0),vec2(2.0,1.0)));\n\t}\n\tif(num==3)\n\t{\n\t\td = max(sdRect(uv,vec2(0.0,0.0),vec2(3.0,5.0)),-sdRect(uv,vec2(-1.0,2.0),vec2(2.0,1.0)));\n\t\td = max(d,-sdRect(uv,vec2(-1.0,-2.0),vec2(2.0,1.0)));\n\t}\n\tif(num==4)\n\t{\n\t\td = max(sdRect(uv,vec2(0.0,0.0),vec2(3.0,5.0)),-sdRect(uv,vec2(0.0,3.0),vec2(1.0,2.0)));\n\t\td = max(d,-sdRect(uv,vec2(-1.0,-3.0),vec2(2.0,2.0)));\n\t}\n\tif(num==5)\n\t{\n\t\td = max(sdRect(uv,vec2(0.0,0.0),vec2(3.0,5.0)),-sdRect(uv,vec2(1.0,2.0),vec2(2.0,1.0)));\n\t\td = max(d,-sdRect(uv,vec2(-1.0,-2.0),vec2(2.0,1.0)));\n\t}\n\tif(num==6)\n\t{\n\t\td = max(sdRect(uv,vec2(0.0,0.0),vec2(3.0,5.0)),-sdRect(uv,vec2(1.0,2.0),vec2(2.0,1.0)));\n\t\td = max(d,-sdRect(uv,vec2(0.0,-2.0),vec2(1.0,1.0)));\n\t}\n\tif(num==7)\n\t{\n\t\td = max(sdRect(uv,vec2(0.0),vec2(3.0,5.0)),-sdRect(uv,vec2(-1.0,-1.0),vec2(2.0,4.0)));\n\t}\n\tif(num==8)\n\t{\n\t\td = max(sdRect(uv,vec2(0.0,0.0),vec2(3.0,5.0)),-sdRect(uv,vec2(0.0,2.0),vec2(1.0,1.0)));\n\t\td = max(d,-sdRect(uv,vec2(0.0,-2.0),vec2(1.0,1.0)));\n\t}\n\tif(num==9)\n\t{\n\t\td = max(sdRect(uv,vec2(0.0,0.0),vec2(3.0,5.0)),-sdRect(uv,vec2(0.0,2.0),vec2(1.0,1.0)));\n\t\td = max(d,-sdRect(uv,vec2(-1.0,-3.0),vec2(2.0,2.0)));\n\t}\n\treturn step(d,0.0);\n}\n\nvec4 drawDigits(vec2 st, vec2 pos, vec2 size, int maxDigits, float value)\n{\n\tvec4 layer=CLEAR;\n\tfloat d=1.0;\n\n\tst -= pos;\n\tst /= size;\n\n\tbool ifNeg = (value < 0.0); value = abs(value);\n\n\tif(maxDigits==1)\n\t{\n\t\td = digitFunc(st,vec2(0.0),vec2(1.0),0.0001,int(mod(value,10.0)));\n\t}\n\tif(maxDigits==2)\n\t{\n\t\td = digitFunc(st,vec2(-4.0,0.0),vec2(1.0),0.0001,int(mod(value/10.0,10.0)));\n\t\td = max(d,digitFunc(st,vec2(4.0,0.0),vec2(1.0),0.0001,int(mod(value,10.0))));\n\t}\n\tif(maxDigits==3)\n\t{\n\t\td = digitFunc(st,vec2(-8.0,0.0),vec2(1.0),0.0001,int(mod(value/100.0,10.0)));\n\t\td = max(d,digitFunc(st,vec2(0.0,0.0),vec2(1.0),0.0001,int(mod(value/10.0,10.0))));\n\t\td = max(d,digitFunc(st,vec2(8.0,0.0),vec2(1.0),0.0001,int(mod(value,10.0))));\n\t}\n\tif(maxDigits==4)\n\t{\n\t\td = digitFunc(st,vec2(-12.0,0.0),vec2(1.0),0.0001,int(mod(value/1000.0,10.0)));\n\t\td = max(d,digitFunc(st,vec2(-4.0,0.0),vec2(1.0),0.0001,int(mod(value/100.0,10.0))));\n\t\td = max(d,digitFunc(st,vec2(4.0,0.0),vec2(1.0),0.0001,int(mod(value/10.0,10.0))));\n\t\td = max(d,digitFunc(st,vec2(12.0,0.0),vec2(1.0),0.0001,int(mod(value,10.0))));\n\t}\n\n\tif(ifNeg)\n\t\td = max(d,smoothstep(0.0001,0.0,sdRect(st,vec2(0.0-(float(maxDigits)*5.0),0.0),vec2(2.0,1.0))) );\n\n\tlayer = ifNeg ? vec4(vec3(1.0,0.0,0.0),step(0.0,d)) : vec4(vec3(1.0),1.0-step(d,0.0));\n\n\treturn layer;\n}\n\nvec4 collon(vec2 uv,vec2 pos,float blur)\n{\n\tfloat c = min(sdRect(uv-pos,vec2(0.0,0.02),vec2(0.008)),sdRect(uv-pos,vec2(0.0,-0.02),vec2(0.008)));\n\treturn vec4(1.0-step(0.0,c));\n}\n\nvec4 rndDigitsTexture(vec2 uv,float rows)\n{\n\tvec2 ipos = floor(uv*rows);\n\tvec2 fpos = fract(uv*rows)-0.5;\n\n\tipos += vec2(0.0,floor(iTime*2.0*rand12(vec2(ipos.x+1.0,0.0))));\n\n\tfloat pct = rand12(ipos);//*(iTime*0.1);\n\tfloat chr = drawDigits(fpos, vec2(0.0)*ipos, vec2(0.08), 1, pct*10.0).a;\n\n    return vec4(step(1.0,chr));\n}\n\nvec4 digitTime(vec2 uv,vec2 pos,float blur)\n{\n\tvec4 layer = CLEAR;\n\tfloat mils,secs,mins,hrs;\n\n\tuv -= pos;\n\tuv *= 0.6;\n\n\tif(abs(uv.x)>0.3 || abs(uv.y)>0.065) return CLEAR;\n\n\t#ifdef SHADERTOY\n\tmils = fract(iDate.w);\n\tsecs = mod(floor(iDate.w),60.0);\n\tsecs = secs<60.0?secs:0.0;\n\tmins = mod(floor(iDate.w/60.0),60.0);\n\thrs = mod(floor(iDate.w/3600.0),24.0);\n\t#else\n\tsecs = mod(daytime.z,60.0);\n\tsecs = (secs<=0.0) ? 59.0 : secs;\n\tmins = mod(daytime.y,60.0);\n\tmins = (mins<=0.0) ? 59.0 : mins;\n\thrs = mod(daytime.x, 24.0);\n\thrs = (hrs<=0.0) ? 23.0 : hrs;\n\t#endif\n\n\tvec4 hours = drawDigits(uv, vec2(-0.21,0.0), vec2(0.0125), 2, hrs);\n\tvec4 minutes = drawDigits(uv, vec2(0.0), vec2(0.0125), 2, mins);\n\tvec4 seconds = drawDigits(uv, vec2(0.21,0.0), vec2(0.0125), 2, secs);\n\tvec4 colonLayer = max(collon(uv,vec2(-0.105,0.0),blur),collon(uv,vec2(0.105,0.0),blur));\n\tcolonLayer.rgb *= (mod(floor(iDate.w), 2.0)<1.0) ? 0.5 : 1.0;\n\n\tvec4 staticNum = drawDigits(uv, vec2(-0.21,0.0), vec2(0.0125), 2, 88.0);\n\tstaticNum = max(staticNum,drawDigits(uv, vec2(0.0), vec2(0.0125), 2, 88.0));\n\tstaticNum = max(staticNum,drawDigits(uv, vec2(0.21,0.0), vec2(0.0125), 2, 88.0));\n\tstaticNum = max(staticNum,colonLayer);\n\tstaticNum = vec4(staticNum.rgb*0.2,staticNum.a);\n\n\tlayer = mix(staticNum, hours, hours.a);\n\tlayer = mix(layer,minutes,minutes.a);\n\tlayer = mix(layer,seconds,seconds.a);\n\n\tlayer = mix(layer,colonLayer,colonLayer.a);\n\n\treturn layer;\n}\n\nvec4 digitDate(vec2 uv,vec2 pos,float blur)\n{\n\tvec4 layer = CLEAR;\n\n\tuv-=pos;\n\tuv*=0.85;\n\n\tif(abs(uv.x)>0.41 || abs(uv.y)>0.065) return CLEAR;\n\n\tfloat day = mod(iDate.z,31.0);\n\tif(day<=0.0) day=1.0;\n\tfloat month = mod(iDate.y,12.0)+1.0;\n\tif(month-1.0<=0.0) month=01.0;\n\tfloat year = mod(iDate.x,9999.0);\n\tif(year<=0.0) year=1900.0;\n\n\tvec4 dayLayer = drawDigits(uv, vec2(-0.31,0.0), vec2(0.0125), 2, day);\n\tvec4 monthLayer = drawDigits(uv, vec2(-0.09,0.0), vec2(0.0125), 2, month);\n\tvec4 yearLayer = drawDigits(uv, vec2(0.225,0.0), vec2(0.0125), 4, year);\n\n\tvec4 staticNum = drawDigits(uv, vec2(-0.31,0.0), vec2(0.0125), 2, 88.0);\n\tstaticNum = max(staticNum,drawDigits(uv, vec2(-0.09,0.0), vec2(0.0125), 2, 88.0));\n\tstaticNum = max(staticNum,drawDigits(uv, vec2(0.225,0.0), vec2(0.0125), 4, 8888.0));\n\tstaticNum = vec4(staticNum.rgb*0.2,staticNum.a);\n\n\tlayer = mix(staticNum,dayLayer,dayLayer.a);\n\tlayer = mix(layer,monthLayer,monthLayer.a);\n\tlayer = mix(layer,yearLayer,yearLayer.a);\n\n\tfloat point=1.0;\n\tpoint = sdRect(uv,vec2(0.017,-0.055),vec2(0.008));\n\tpoint = min(point,sdRect(uv,vec2(-0.2,-0.055),vec2(0.008)));\n\tvec4 pointLayer = vec4(vec3(1.0),step(point,0.0));\n\n\tlayer = mix(layer,pointLayer,pointLayer.a);\n\n\treturn layer;\n}\n\nvec4 digitTimeDate(vec2 uv,vec2 pos,vec2 res,float blur, vec4 color)\n{\n\tvec4 layer=CLEAR;\n\n\tvec4 digitTime = digitTime(uv,pos+vec2(0.0,0.135),blur)*color;\n\tvec4 digitDate = digitDate(uv,pos-vec2(0.0,0.1),blur)*color;\n\n\tlayer = mix(vec4(0.0),digitTime,digitTime.a);\n\tlayer = mix(layer,digitDate,digitDate.a);\n\n\treturn layer;\n}\n\nvec4 progressbar(vec2 uv,vec2 pos,vec2 size)\n{\n\tvec4 layer = CLEAR;\n\tvec2 uv2=uv-pos;\n\n\tuv-=pos;\n\tuv*=size;\n\n\tif(abs(uv.x)>size.x/(size.x*1.99) || abs(uv.y)>size.y/(size.y*19.0)) return CLEAR;\n\n\tfloat rc=0.0,px;\n\tvec4 empty = vec4(1.0,0.0,0.0,1.0);\n\tvec4 full = vec4(0.0,1.0,0.0,1.0);\n\n\tfloat steps=11.0,space=0.05,width,height;\n\n\twidth = 1.0/steps;\n\theight = 0.05;\n\n\tfor(float i=-steps*0.5;i<steps*0.5;i+=1.0)\n\t{\n\t\tpx = (width*0.5)+i*width;\n\t\trc = min(rc, sdRect(uv,vec2(px, 0.0), vec2(width-space,height)));\n\t}\n\trc = 1.0-step(0.0,rc);\n\n\tfloat val = (battery<=0.0) ? sin(iTime)*0.5+0.5 : battery;\n\tfloat progressBlend = (uv.x-val) <= -0.5 ? 1.0 : 0.0;\n\tlayer = mix(empty*rc,full*rc,progressBlend);\n\n\tvec4 percent = drawDigits(uv2, vec2(0.0), vec2(0.01025), 3, val*100.1);\n\n\treturn mix(layer,vec4(vec3(0.1),1.0),percent.a);\n}\n\nvec4 digitalRain(vec2 uv,vec2 res,float rows)\n{\n\tvec4 layer = CLEAR;\n\tfloat density = 0.7;\n\tfloat t = iTime*0.5;\n\n\tfloat tailLen = 5.0;\n\tvec2 pCells = floor(uv * rows);\n\n\tfloat offset = sin(pCells.x * 15.0);\n\tfloat speed =  cos(pCells.x * 3.0) * 0.2 + 0.4;\n\tfloat line = fract(uv.y +  speed * t + offset);\n\tfloat c = clamp(0.9 / pow(line * tailLen, 1.0), 0.0, 1.0);\n\n\tfloat glow = 1.0-(length(fract(uv*rows)-0.5)/0.75);\n\tfloat dt = clamp(rndDigitsTexture(uv,rows).r, 0.0, 1.0)*c;\n\tdt = mix(dt,glow,dt);\n\n\tif(line < 0.01) dt = dt*5.0;\n\n\tlayer = vec4(vec3(0.0,dt,0.0),c*density);\n\n\treturn layer;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy-0.5*resolution.xy)/min(resolution.x,resolution.y)+0.5;\n\tvec2 sluv = uv;\n\n\tfragColor = CLEAR;\n\n\tfloat scaleFactor = 1.0,tpy = 0.0;\n\tbool showGrid = false, android = false;\n\n\tif(resolution.x < resolution.y)\n\t{\n\t\tscaleFactor = 2.0;\n\t\ttpy = 0.0;\n\t}\n\telse\n\t{\n\t\tscaleFactor = 1.0;\n\t\ttpy = android ? 0.625 : 0.73;\n\t}\n\n\tuv += barrelDistortion(uv-0.5,0.03);\n\n\t// add glitches\n\tvec2 glitchOffset = (mod(rand11(iTime)*0.5+1.5, 1.91) >= 1.9) ? vec2(0.0,sin(iTime + uv.y*3.141592)) : vec2(0.0);\n\n\tuv += glitchOffset;\n\n\tfloat vely = 0.25;//(sluv.y>1.0) ? rand12(sluv)*0.5+0.5 : sluv.y;\n\tsluv.y += 1.5*fract((sluv.y*0.5)+iTime*vely)-1.5;\n    //sluv.y += 1.0*sin(iTime*0.75)-0.5;\n\tfloat sLine = smoothstep(0.05,-0.05,abs(sluv.y)-0.0001);\n\tuv = mix(uv,vec2(0.5),(sLine*0.1)*uv.x);\n\n\tfloat tvPixel = smoothstep(1.5, -1.5, length(fract((sluv*160.0))-0.5)-0.25);\n\ttvPixel = pow(tvPixel,2.0);\n\ttvPixel += 0.1 * sin(iTime*160.0);\n\n\tvec4 gridLayer = (showGrid) ? grid(fragCoord-(resolution.xy*0.5),30.0*scaleFactor,1.5,0.5) : vec4(0.0);\n\tvec4 rainLayer = digitalRain(uv,resolution.xy,20.0);\n\tvec4 progressbarLayer = android ? progressbar(uv,vec2(0.5,0.9-tpy),vec2(1.1,0.6)) : CLEAR;\n\tvec4 digitTimeDateLayer = digitTimeDate(uv,vec2(0.5,1.2-tpy),resolution.xy,0.1,vec4(vec3(0.2,1.0,0.2),1.0));\n\n\tfragColor = mix(fragColor,gridLayer,gridLayer.a);\n\tfragColor = mix(fragColor,rainLayer,rainLayer.a);\n\tfragColor = mix(fragColor,progressbarLayer,progressbarLayer.a);\n\tfragColor = mix(fragColor,digitTimeDateLayer,digitTimeDateLayer.a);\n\tfragColor = mix(fragColor,gridLayer,gridLayer.a);\n\n\tfragColor = mix(fragColor, vec4(0.0,1.0,0.0,1.0), tvPixel);\n\tfragColor = mix(fragColor, vec4(0.0,1.0,0.0,1.0), (sLine*0.5));\n\n\t// Vignette\n\tvec2 uv2 = (fragCoord/iResolution.xy) - 0.5;\n\tfloat dist = length(uv2) * 2.0;\n\tfloat vig = 1.0/(dist*dist + 1.0);\n\tfragColor = mix(fragColor, vec4(0.0,0.0,0.0,1.0), 1.0-vig);\n}\n\n#ifndef SHADERTOY\nvoid main(void)\n{\n\tmainImage(gl_FragColor,gl_FragCoord.xy);\n}\n#endif\n","name":"Image","description":"","type":"image"}]}