{"ver":"0.1","info":{"id":"WtByWK","date":"1595330205","viewed":62,"name":"HSV complex plane mapping","username":"CyanMARgh","description":"Example, that shows, how to visualize complex functions.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["hsv","complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.14159265;\nconst vec3 e3 = vec3(1.), z3 = vec3(0.);\nconst vec2 e2 = vec2(1.), z2 = vec2(0.);\n\n//transform to HSV model from RGB\nvec3 hsvTOrgb(float h, float s, float v){\n    float x = mod(h,1.);\n    int H = int(floor(h))%6;\n\n    vec3 rgb=vec3(0.);\n    switch(H){\n        case 0: rgb = vec3(1.,x,0.); break;    //red-yellow\n        case 1: rgb = vec3(1.-x,1.,0.); break; //yellow-green\n        case 2: rgb = vec3(0.,1.,x); break;    //green-cyan\n        case 3: rgb = vec3(0.,1.-x,1); break;  //cyan-blue\n        case 4: rgb = vec3(x,0.,1.); break;    //blye-magenta\n        case 5: rgb = vec3(1.,0.,1.-x); break; //magenta-red\n    }\n    return (e3-(e3-rgb)*s)*v; //applying Saturation(s) and Brightness(v)\n}\nvec3 mapping(vec2 p, int mode){\n    float r = length(p); //distance to center\n    float h = (atan(p.y,p.x))*3./pi + 6.; //scaled angle in [0;6]\n\n    if(mode%2==1)if(mod(r,.5)<.03||mod(h,.5)<.03)return e3;  //polar mesh\n    if(mode/2==1)if(mod(p.x,1.)<.03||mod(p.y,1.)<.03)return z3; //orthogonal mesh\n    return hsvTOrgb(h,r*.5,1.); //just gradient\n}\nvec2 cmc(vec2 a, vec2 b){\n    return vec2(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 r=iResolution.xy;\n    vec2 p = fragCoord/r;\n    p=p*2.-e2;\n    p.x *=r.x/r.y;    \n\n    //function examples\n\n    //p = cmc(p,p);\n    \n    /*vec2 z=p;\n    for(int i=0;i<30;i++){\n        p=cmc(p,p)+z;\n        if(length(p)>4.)break;\n    }*/\n    \n    fragColor = vec4(mapping(p,int(floor(mod(iTime,4.)))),1.);\n}","name":"Image","description":"","type":"image"}]}