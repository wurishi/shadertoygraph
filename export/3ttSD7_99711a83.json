{"ver":"0.1","info":{"id":"3ttSD7","date":"1582105553","viewed":77,"name":"Random Patches","username":"ivalylo","description":"Noise for random patches","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(vec2 co)\n{\n    float a = 12.9898;\n    float b = 78.233;\n    float c = 43758.5453;\n    float dt= dot(co.xy ,vec2(a,b));\n    float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat fractal_noise(vec2 p)\n{\n    float f = 0.0;\n    // add animation\n    //p = p - vec2(1.0, 1.0) * iTime * 0.1;\n    f += 0.5 * noise(p); p = 2.0 * p;\n\tf += 0.3 * noise(p); p = 2.0 * p;\n\tf += 0.2 * noise(p); p = 2.0 * p;\n\t//f += 0.06250 * noise(p); p = 2.0 * p;\n    //f += 0.03125 * noise(p);\n    \n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n\n\tvec2 uv = p*vec2(iResolution.x/iResolution.y,1.0);\n\n    // Time varying pixel color\n    uv *= 16.0;\n    float val = fractal_noise(uv);\n    val = clamp((val - 0.55 - float(int(iTime*10.0) % 40 )*0.01) * 100.0, -0.5, 0.5) + 0.5;\n    vec3 col = vec3(val);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}