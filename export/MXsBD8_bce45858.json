{"ver":"0.1","info":{"id":"MXsBD8","date":"1728340155","viewed":26,"name":"Spectre visualizer","username":"gubebra","description":"Sketch of a music visualizer. I got the idea from seeing https://www.shadertoy.com/view/lfyXzw shader. It was adapted to fit my needs. It probably could be done better.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["music"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SAMPLE = 200.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy / 2.0) / iResolution.y;\n    vec2 t = fragCoord.xy / iResolution.xy * SAMPLE;\n\n    float wave = texelFetch(iChannel0, ivec2(t.x + iTime, 1), 0).x;\n    wave += texelFetch(iChannel0, ivec2(t.y + iTime * 0.5, 1), 0).x;\n    wave = mix(1.0, wave, 0.3);\n    \n    vec3 col = vec3(min(0.015 / abs(length(uv) - 0.3 * wave), 1.2));\n    col *= sin(atan(uv.x, uv.y) + iTime * 3. + vec3(0, 4, 2)) * 0.5 + 0.5;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}