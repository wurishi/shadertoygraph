{"ver":"0.1","info":{"id":"Mc33WX","date":"1712261113","viewed":144,"name":"NotSoGreeeen - 2D Sphere","username":"NotSoGreeeen","description":"A step above my old sphere, this time it doesn't rely on the same tricks as the last one, which just tricked your brain into thinking it was real\n\nAdded a atmosphere effect on a whim, seems to help the illusion as well.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["beginner","sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 circle(vec2 uv, vec3 color) {\n    return vec3(smoothstep(.85, .8, length(uv.xy))) * color; //draw a sphere :P\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y); //align uv to -1, 1 grid, and keep it square, no matter the dimensions of the screen\n    \n    vec3 lightSphere = circle(uv, vec3(.9, .5, .3)); //sphere for main lighting\n    lightSphere *= smoothstep(1., 0., length(uv - .5)) * .4; //turn it into it's light point\n    \n    vec3 midSphere = circle(uv, vec3(.9, .5, .3) / 4.); //mid-distance lighting sphere\n    midSphere *= smoothstep(1., 0., length(uv /3. - .5)) * 6.6; //apply it's lighting values\n    \n    vec3 col = circle(uv, vec3(.9, .5, .3) / 6.); //draw in the darkest sphere\n    col *= texture(iChannel0, uv * 2. + atan(tan(iTime / 10.))).rgb;\n    col *= texture(iChannel0, uv * 2. + atan(tan((iTime + 2.) / 10.))).rgb;\n    col += midSphere + lightSphere; //apply the two lighting passes\n    \n    vec3 color = vec3(smoothstep(1., .8, length(uv.xy))) * vec3(.3, .5, .9) / 8.3;\n    color += col;\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}