{"ver":"0.1","info":{"id":"ml2fzw","date":"1693903090","viewed":46,"name":"Mandelbrot Zoom (1833me)","username":"1833me","description":"First shader :) Mandelbrot Zoom","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","zoom","rgb","hsv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_ITERS = 255;\n\nfloat comp_abs(vec2 p){\n    return sqrt(p.x*p.x + p.y*p.y);\n}\n\nfloat mag2(vec2 p){\n    return p.x*p.x + p.y*p.y;\n}\n// (a+bi)*(a+bi)\n// a^2-b^2+2bi\nvec2 sqr(vec2 p){\n    return vec2(p.x*p.x - p.y*p.y, 2.0*p.x*p.y);\n}\n\nfloat nsmooth(int i, vec2 z){\n    return (float(i)+1.0-log(log(comp_abs(z)))/log(2.0))/float(MAX_ITERS);\n}\n\nfloat mandel(vec2 c){\n    vec2 z = vec2(0.0);\n    for (int i=0;i<=MAX_ITERS;i++){\n        z = sqr(z) + c;\n        if (mag2(z)>=4.0){\n            return nsmooth(i, z);\n        }\n    }\n    return nsmooth(MAX_ITERS, z);\n}\n\nvec3 hsv2rgb(float h, float s, float v){\n    float r;\n    float g;\n    float b;\n    float i = floor(h * 6.0);\n    float f = h * 6.0 - i;\n    float p = b * (1.0 - s);\n    float q = v * (1.0 - f * s);\n    float t = v * (1.0 - (1.0 - f) * v);\n    switch (int(i) % 6) {\n        case 0: r = v, g = t, b=p; break;\n        case 1: r=q,g=v,b=p;break;\n        case 2: r=p,g=v,b=t;break;\n        case 3: r=p,g=q,b=v;break;\n        case 4: r=t,g=p,b=v;break;\n        case 5: r=v,g=p,b=q;break;\n    }\n    return vec3(r, g, b);\n}\n\nvec2 getCenter(float Time){\n    int which = (int(floor(Time))/50)%4;\n    vec2 center;\n    switch (which){\n        case 0: center=vec2(-1.11161, 0.25025); break;\n        case 1: center=vec2(-1.05, -.25); break;\n        case 2: center=vec2(-0.167565,1.04135);break;\n        case 3: center=vec2(-0.76825, 0.10125);break;\n    }\n    return center;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float Time = mod(iTime, 50.0);\n    float width = 1.0 / pow(Time+1.0, Time/25.0);\n    vec2 center = getCenter(iTime);\n    vec2 p = -(width/2.0) + (width * uv);\n    p += center;   \n    float b = mandel(p);\n    vec3 col = hsv2rgb(b, 0.6, 1.0);\n    if (col.x >= 0.99999){\n        col = vec3(0.0);\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}