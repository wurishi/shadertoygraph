{"ver":"0.1","info":{"id":"3stBWn","date":"1604857229","viewed":158,"name":"Waved Julia Animation","username":"IWBTShyGuy","description":"Waved Julia Animation","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float basis0(float t) {\n    return clamp(1.0 - 3.0 * t / 2.0, 0.0, 1.0);\n}\nfloat basis1(float t) {\n    return clamp(3.0 / 2.0 * (t - 1.0) + 1.0, 0.0, 1.0);\n}\n\nvec3 color_vec(float t) {\n\treturn vec3(\n\t\tbasis0(t),\n\t\t1.0 - basis0(t) - basis1(t),\n\t\tbasis1(t)\n\t);\n}\n\nvec3 color_result(vec2 uv) {\n\tfloat u = (cos(iTime) + 1.0) / 2.0;\n\tfloat v = (sin(iTime) + 1.0) / 2.0;\n\tvec3 color0 = (1.0 - u) * (1.0 - v) * color_vec(uv[0]);\n\tvec3 color1 = (1.0 - u) * v * color_vec(1.0 - uv[0]);\n\tvec3 color2 = u * (1.0 - v) * color_vec(uv[1]);\n\tvec3 color3 = u * v * color_vec(uv[1]);\n\treturn color0 + color1 + color2 + color3;\n}\n\nint in_julia(vec2 z, vec2 c) {\n\tfor (int i = 0; i < 100; i++) {\n\t\tz = vec2(\n            z.x * z.x - z.y * z.y + c.x,\n            2.0 * z.x * z.y + c.y\n        );\n\t\tif (length(z) > 10.0) return i;\n\t}\n\treturn 100;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    float asp = iResolution.x / iResolution.y;\n    vec2 centralizer = vec2(0.5 * asp, 0.5);\n    vec2 centralized = uv - centralizer;\n    float displacer = sin(10.0 * (length(centralized) * 5.0 - iTime * 0.63));\n    uv = centralized * (1.0 + 0.1 * displacer) + centralizer;\n\tvec2 z = 3.0 * (uv - centralizer);\n\tvec2 c = 0.625 * vec2(cos(iTime * 1.43), sin(iTime * 1.43));\n\tint k = in_julia(z, c);\n    if (k < 100) {\n        float ratio = float(k) / 10.0;\n        fragColor = vec4(ratio * color_result(uv.yx), 1.0);\n    }\n\telse fragColor = vec4(color_result(uv), 1.0);\n}","name":"Image","description":"","type":"image"}]}