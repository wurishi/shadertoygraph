{"ver":"0.1","info":{"id":"Mfd3D4","date":"1711727433","viewed":87,"name":"P-norm tunel","username":"solquemal","description":"Using https://de.wikipedia.org/wiki/P-Norm ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pnorm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat pnorm(vec2 uv, float p){\n    float d= pow(abs(uv.x),p) +pow(abs(uv.y),p);\n    return pow(d,1./p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy *2.-1.;\n    \n    uv.x *= iResolution.x/iResolution.y;\n    vec3 color = vec3(0.);\n    \n\n    float a =3.14/2.;uv *= mat2(cos(a),sin(a),-sin(a),cos(a));\n    vec2 uv2 = uv;\n\n\n    //Dynamic p values\n    float p = mix(1.,10.,pow(sin(iTime),10.));\n\n    //Re-map coordinates\n    float an = atan(uv.y, uv.x);\n    float r = pnorm(uv,p);\n\n\n    uv = vec2(an / 3.14 , (1./ r));\n    a = iTime*0.2;\n    uv *= mat2(cos(a),sin(a),-sin(a),cos(a));\n    uv = cos(uv+iTime);\n\n    color.r+=cos(uv.y*3.+uv.x)*0.5+0.5;\n    color.g+=sin(uv.y*1.)*0.2+0.2;\n    color.b += cos(uv.y* 8.)*0.4+0.4;\n    color *=.5/abs(cos(dot(color,color)+iTime));\n\n    color *= smoothstep(0.,0.3,pnorm(uv2, p)-0.2);\n    color *= smoothstep(3.14,3.14/2.,abs(atan(uv2.y,uv2.x)));\n\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}