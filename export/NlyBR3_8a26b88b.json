{"ver":"0.1","info":{"id":"NlyBR3","date":"1664888656","viewed":111,"name":"perline noise","username":"seu_yy","description":"noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2(vec2 st)\n{\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\nfloat perline_noise(vec2 uv)\n{\n    vec2 pi = floor(uv);\n    vec2 pf = uv-pi;\n    \n    //vec2 weight = pf*pf*pf*(6.0*pf*pf-15.0*pf+10.0);\n    vec2 weight = pf * pf * (3.0 - 2.0 * pf);\n    \n    return mix(\n        mix(\n            dot(random2(pi),pf),\n            dot(random2(vec2(pi.x+1.0,pi.y)),pf-vec2(1.0,0.0)),\n            weight.x),\n        mix(\n            dot(random2(vec2(pi.x,pi.y+1.0)),pf-vec2(0.0,1.0)),\n            dot(random2(vec2(pi.x+1.0,pi.y+1.0)),pf-vec2(1.0,1.0)),\n            weight.x),\n        weight.y\n    );\n}\n\nfloat turbulence_perline(vec2 uv,int depth,bool flag,bool sine)\n{\n    float scale = 1.0;\n    float amplitude = 1.0;\n    float noise = 0.0;\n    \n    for (int i = 0; i < depth; i++)\n    {\n        if (flag){\n            noise += abs((perline_noise(uv*scale)) * amplitude);\n        }\n        else{\n            noise += (perline_noise(uv*scale) * amplitude);\n        }\n        \n        scale *= 2.0;\n        amplitude /= 2.0;\n    }\n    \n    if (sine)\n    {\n        noise = sin(uv.y*3.0 + noise*6.0);\n    }\n    return noise;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float lattice = 256.0;\n    float frequency = 8.0;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * vec2(iResolution.x/iResolution.y, 1.0);\n    \n    \n    float noise = turbulence_perline(frequency*uv, 8, true, true);\n    float c = noise*0.5 + 0.5;\n    //float c = noise;\n    fragColor = vec4(c,c,c,1.0);\n}\n","name":"Image","description":"","type":"image"}]}