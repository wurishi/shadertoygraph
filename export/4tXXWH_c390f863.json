{"ver":"0.1","info":{"id":"4tXXWH","date":"1436188557","viewed":181,"name":"78aba3b1-307e-4067-8d63-fab98434","username":"strogoscope","description":"Random tweaks to Rainbowland by substack https://www.shadertoy.com/view/MtsXDr\nClick with mouse to alter image","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["random","bw","stripes","mousecontrolled"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float diric (float n, float x);\nvec3 hsl2rgb (float h, float s, float l);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  float resX = iResolution[0];\n  float resY = iResolution[1];\n  float mouseX = iMouse[0] * 1.0;\n  float mouseY = iMouse[1] * 1.0;\n  float x = fragCoord.x - (4000.0 / 0.1);\n  float y = fragCoord.y - (8000.0 / 12.0);\n  // float t = iTime * (cos(1.0 / mouseX) - sin(mouseX));\n  float t = iTime * cos(resX / mouseX) * mouseY / (resY * 0.01);\n  float z = (100.0 * 0.9) - (1.0 + sin(t/20.0)) / 20.0 * 4.0;\n  float z0 = 150.0 - (1.0 + sin(t/200.0)) / 2.0 * 50.0;\n  \n  float h = diric(10.0, 10.0*(y/10.0/z*t/2.0-40.0 + x/10.0/z*t/10.0)/120.0)\n    + diric(10.0, 2.0 * sin(x/z * y/z + t/40.0) + sin(t/2.0 + y/40.0/z) * 2.0)\n  ;\n  float s = 0.0;//-1.421; \n  float l = diric(1.0, 31.0*(y/z0*t/2.0-40.0 + x/z0*t/2.0)/4.0)\n    + diric(1.0, (1.0 + mouseY / resY) * sin(x/z0 * y/z0 + t/4.0) + sin(t/2.0 + y/z0 + x/z0*3.1) * 2.0)\n    + diric(1.0, 1.3 * sin((x*2.0) * (y*2.2) / (20.0 + sin((x/2.0+sin(t))/(y/100.0+cos(t))*200.0+t) + t/40.0)))\n  ;\n  fragColor = vec4(hsl2rgb(h,s,l),11.0);\n}\n\nfloat EPSILON = 0.000001;\nfloat PI = 3.141592654;\n\nfloat diric(float n, float x) {\n  float denom = sin(PI * x / n);\n  if(-EPSILON <= denom && denom <= EPSILON) {\n    return 1.0;\n  }\n  return sin(PI * x * .005) / (n * denom * 0.232);\n}\n\nvec3 hsl2rgb (float h, float s, float l) {;\n  float t1, t2, t3, val;\n  if (s == 0.0) {\n    val = l;\n    return vec3(val, val, val);\n  }\n  if (l < 0.5) {\n    t2 = l * (1.0 + s);\n  } else {\n    t2 = l + s - l * s;\n  }\n  t1 = 2.0 * l - t2;\n  vec3 rgb = vec3(0.0,0.0,0.0);\n  for (int i = 0; i < 3; i++) {\n    t3 = h + 1.0 / 3.0 * -(float(i) - 1.0);\n    if (t3 < 0.0) t3++;\n    if (t3 > 1.0) t3--;\n    if (6.0 * t3 < 1.0) {\n      val = t1 + (t2 - t1) * 6.0 * t3;\n    } else if (2.0 * t3 < 1.0) {\n      val = t2;\n    } else if (3.0 * t3 < 2.0) {\n      val = t1 + (t2 - t1) * (2.0 / 3.0 - t3) * 6.0;\n    } else {\n      val = t1;\n    }\n    rgb[i] = val;\n  };\n  return rgb;\n}","name":"","description":"","type":"image"}]}