{"ver":"0.1","info":{"id":"ftS3zD","date":"1623412128","viewed":659,"name":"Neon curve","username":"SimpleMurad","description":"Neon curve.","likes":21,"published":1,"flags":0,"usePreview":0,"tags":["line","sinusoid","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistancePointToLine(vec2 p, vec2 A, vec2 B)\n{\n        float l2 = distance(A, B);\n        l2 *= l2;\n        if (l2 == 0.0f) \n            return distance(p, A);  \n                                                       \n        float t = max(0.0f, min(1.0f, dot(p - A, B - A) / l2));\n        vec2 projection = A + t * (B - A); \n        return distance(p, projection);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //[-1;1]\n    vec2 uv = fragCoord/(iResolution.xy /2.0)-1.0;\n\tuv.x *= iResolution.x/iResolution.y;\n\n    vec3 col;\n    float dx = 0.1;\n    for (float x = -1.5f-dx; x<=1.5f+dx; x+=dx){\n        vec2 lineA_1 = vec2(x, cos((x+iTime)*4.0f)/5.0f);\n        vec2 lineB_1 = vec2(x+dx, sin((x+iTime+dx)*3.0f)/5.0f);\n        float p = DistancePointToLine(uv, lineA_1, lineB_1);\n        \n        col += vec3(0.01f/p)*vec3(abs((cos(iTime)+1.0)/5.0f),0.2f,0.7f);\n    }\n    \n\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}