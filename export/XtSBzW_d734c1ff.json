{"ver":"0.1","info":{"id":"XtSBzW","date":"1514771283","viewed":337,"name":"Dodecahedron Box","username":"gaz","description":"3D","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","raycast"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI\tradians(180.)\n#define PI2\tPI * 2.0\n\n\nmat3 lookat(vec3 d, vec3 up)\n{\n\tvec3 w = normalize(d),u = normalize(cross(w,up));\n    return (mat3(u,cross(u,w),w));\n}\n\nmat2 rotate(float a)\n{\n\treturn mat2(cos(a), sin(a), -sin(a), cos(a));\t\n}\n\nfloat smin( float a, float b )\n{\n    float k = 0.1;\n\tfloat h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat smax(float a, float b)\n{\n   float k = -0.1;\n\tfloat h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat deA(vec2 p)\n{\n    vec2 v =normalize(vec2(-1,mix(1.0,0.618,abs(sin(iTime)))));\n    p.y = p.y-2.0*smin(0.0,p.y); \n    p.x = abs(p.x)+0.2;\n  \tp -= 2.0 * smin(0.0, dot(p, v)) * v;\n \treturn abs(p.y) - 1.5;\n}\n\nfloat deObj(vec3 p)\n{\n    return smax(smax(deA(p.xy),deA(p.yz)),deA(p.zx));\n}\n\nvec2 sdCapsule( vec3 p, vec3 a, vec3 b)\n{\n\tvec3 pa = p - a, ba = b - a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn vec2(length( pa - ba*h ), h);\n}\n\n#define S vec3(-2.5,2.5,0)\n\nfloat deX(vec3 p)\n{\n    vec2 de = sdCapsule(p,S.xzz,S.yzz);\n    return de.x-0.1;\n}\n\nfloat deY(vec3 p)\n{\n    vec2 de = sdCapsule(p,S.zxz,S.zyz);\n    return de.x-0.1;\n}\n\nfloat deZ(vec3 p)\n{\n    vec2 de = sdCapsule(p,S.zzx,S.zzy);\n    return de.x-0.1;\n}\n\nfloat map(vec3 p)\n{   \n    float de = deObj(p);\n    de = min(de,deX(p));\n\tde = min(de,deY(p));\n\treturn min(de,deZ(p));\t\n}\n\nvec3 calcNormal(in vec3 pos){\n  vec2 e = vec2(1.0, -1.0) * 0.002;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)  );\n}\n\nvec3 doColor(vec3 p){\n\tconst float precis = 0.001;\n    if (deX(p)<precis) return vec3(1,0,0);\n    if (deY(p)<precis) return vec3(0,1,0);\n    if (deZ(p)<precis) return vec3(0,0,1);\n\treturn vec3(1.0, 0.2, 0.2);\n}\n\n\nvec3 hsv(float h, float s, float v)\n{\n  return mix( vec3( 1 ), clamp( ( abs( fract(\n    h + vec3( 3, 2, 1 ) / 3. ) * 6. - 3. ) - 1. ), 0., 1. ), s ) * v;\n}\n\nvec2 fold(in vec2 p, in float s)\n{\n    float a = PI / s - atan(p.x, p.y), n = PI2 / s;\n    return rotate(-floor(a / n) * n)*p;\n}\n\nvec3 rayCastPlane(vec3 ro, vec3 rd, vec3 pos, vec3 nor, vec3 up)\n{\n\tfloat z = dot(pos-ro,nor)/dot(rd,nor);\n    vec3 p=ro+rd*z, a=p-pos, u=normalize(cross(nor,up)),v=normalize(cross(u,nor));\n    return vec3(-dot(a,u),dot(a,v),z);\n}\n\nvec3 bg(vec2 p){\n    vec3 col = vec3(0.15,0.15,0.3)*p.y*p.y;\n    vec2 v =normalize(vec2(-1,mix(1.0,0.618,abs(sin(iTime)))));\n    p-=vec2(1,0.2);\n    p.y = p.y-2.0*smin(0.0,p.y); \n    p.x = abs(p.x);\n   \tp -= 2.0 * smin(0.0, dot(p, v)) * v;\n    p.y = abs(p.y) - 0.3;\n \treturn clamp(col +vec3(0.85,0.9,0.7)*smoothstep(0.08, 0.004, (p.y)),0.,1.);\n}\n\n// https://www.shadertoy.com/view/ltcXzs\nvec4 char(vec2 p, float c) {\n    if (p.x<0.|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureLod( iChannel0, p/16. + fract( floor(vec2(c, 15.999-c/16.)) / 16. ), 0.0);\n}\n\nfloat deChar(vec2 p, float c)\n{\n    vec4 f = char(p.xy * 0.13 + 0.5, c);\n    return smoothstep(0.47, 0.75, f.w);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(0,2,6);\n    ro.xz *=rotate(iTime*0.3);\n    ro.xy *= rotate(iTime);\n    vec3 rd = lookat(-ro,vec3(0,1,0))*normalize(vec3(p, 2));\t\n    vec3 col = bg(p);\n    const float maxd = 100.0, precis = 0.001;\n\tfloat z = 0.0, d;\n \tfor(int i = 0; i < 100; i++)\n  \t{\n    \tz += d = map(ro + rd * z);\n    \tif(d < precis || z > maxd) break;\n  \t}\n    if(d < precis)\n  \t{\n\t  \tvec3 p = ro + rd * z;\n\t \tvec3 nor = calcNormal(p);\n    \tvec3 li = normalize(vec3(1));\n        vec3 bg = col;\n        col = doColor(p);\n        float dif = clamp(dot(nor, li), 0.3, 1.0);\n        float amb = max(0.5 + 0.5 * nor.y, 0.0);\n        float spc = pow(clamp(dot(reflect(normalize(p - ro), nor), li), 0.0, 1.0), 50.0);\n        col *= dif * amb ;\n        col += spc;\n        col = clamp(col,0.0,1.0);\n  \t\tcol = pow(col, vec3(0.8));        \n    }\n\n    vec3 pos;\n    for(int i=0;i<12;i++)\n    {\n      \tpos=vec3(vec2(1,.618)*(vec2(i&1,i>>1&1)*2.-1.),0)*(sin(iTime+sin(iTime*5.))*0.4+1.4);\n     \tpos=vec3(pos[i%3],pos[(i+1)%3],pos[(i+2)%3]);\n     \tvec3 c = rayCastPlane(ro, rd, pos*1.5, pos, -sign(pos.x+pos.y+pos.z)*sign(pos)*pos.zxy);\n        if (c.z<z)\n    \t{\n \t\t\tcol = mix(col, vec3(1), smoothstep(0.05, 0.0,\n            \tdeChar(c.xy*8., floor(float(i)+50.*abs(sin(iTime))))));\n  \t\t\t\n            col = mix(col,hsv(float(i)/12.,0.8,0.8),\n                 smoothstep(0.5*abs(sin(2.*iTime+sin(5.*iTime))),0.,\n                            smoothstep(0.,0.05,abs(length(c.xy)-.7)-0.01))  ) ;\n   \t\t  \tvec2 p = fold(c.xy, 5.0);\n    \t\tp.y -= 1.0;\n\t\t\tcol = mix(col, hsv(0.2, 0.7, 1.0), smoothstep(0.05, 0.0, abs(p.y)));\n\t\t}\n    }\n    fragColor = vec4(col, 1);\n}\n","name":"Image","description":"","type":"image"}]}