{"ver":"0.1","info":{"id":"wsKSRG","date":"1574329064","viewed":588,"name":"Raster/copper bars","username":"antireality","description":"It's 2019. What better way to use insane amounts of GPU power than to recreate some good old Amiga/C64 Raster colour bars?","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["oldschool","amiga","c64"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define barCount 15\n#define borderSize 0.1\n#define speed 1.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float r,g,b;\n    float delay = 0.125;\n    float barWidth = 20.0;\n    \n    float offset = 0.0;\n    float brightness = 0.0;\n    \n    if((uv.y > borderSize) && (uv.y < 1.0 - borderSize))\n    {\n        for(int i=0; i< barCount; i++)\n        {        \n             float yBarPos = (sin((iTime*speed)+offset)*.35)+0.5;\n            offset += delay;\n\n            if(brightness < 0.001)\n                brightness = clamp(1.0-(abs(yBarPos-uv.y)*barWidth),0.0,1.0);\n\n           r = brightness*abs(sin(offset+iTime));\n           g = brightness*abs(cos(offset+iTime));\n           b = brightness*0.25;           \n        }\n    }\n    else\n    {\n        r = g = 0.0;\n        b = 0.25;\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(r,g,b,1.0);\n}","name":"Image","description":"","type":"image"}]}