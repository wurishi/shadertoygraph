{"ver":"0.1","info":{"id":"ssjXRR","date":"1619572436","viewed":204,"name":"raindrops for bukweet","username":"manthrax","description":"raindrops","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["rain","drops"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void FmainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}// Author:\n// Title:\n\n//#ifdef GL_ES\n//precision mediump float;\n//#endif\n\n//uniform vec2 u_resolution;\n//uniform vec2 u_mouse;\n//uniform float u_time;\n//uniform vec2 u_cursor;\n\nfloat s_time;\nvec2 st;\nfloat seed;\nfloat rippleCount = 10.;\nfloat pi = 2.*3.1415926;\nfloat aspect;\nfloat sdf_rect2(vec2 pos,float sz){\n    vec2 v = fract(st-pos+(sz*.5));\n    return 1.-step(sz,max(v.x,v.y));\n}\nvec2 rectuv(vec2 pos,float sz){\n    vec2 v = fract(clamp((st-pos+(sz*.5))/sz,0.,1.));\n    return v;\n}\nfloat rand(){\n    seed+=fract(sin(seed)*123.45);\n    return fract(sin(seed) * 1126.5973);\n}\nfloat ripple(int i){\n\n    float time = (s_time+(float(i)*2.234)/1.);\n    float age = fract(time); \n    time -= age;\n    seed = time;\n    vec2 pos = vec2(rand()*aspect,rand());\n    //float rad=rand()*.001;\n    vec2 ruv =  rectuv(pos,1.*age);\n    float dist = (1.-length((ruv-.5)*2.))*.99;\n    float power = rand();\n    float wav = min(step(.5,dist),((sin(dist*(rippleCount*floor(power+1.))*pi))*.5));\n    wav *= min(step(.5,dist),smoothstep(1.,.0,dist));\n    float fade = min(min(mix(age,.5,.9),smoothstep(age,1.0,.7)),mix(dist,0.1,0.228));\n    fade*=power;\n    return wav*fade;\n}\n\nfloat ripples(){\n    float col=0.;\n    for(int i=0;i<20;i++)\n        col += ripple(i);\n    return col;\n}\nstruct pointLight{\n     vec3 p;\n     vec3 c;\n     vec3 s;\n};\n\nvec3 calcPointLight(in pointLight light,in vec3 normal,in vec3 worldPos){\n    vec3 dir=worldPos-light.p;\n    float ndot = dot(normal,normalize(dir));\n    vec3 ocol = clamp(ndot,0.,1.)*light.c*(1.-clamp(length(dir),.0,1.));\n    ocol = mix(ocol,light.s,smoothstep(ndot,0.132,1.) );\n\treturn ocol;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\nvec2 u_resolution = iResolution.xy;\n\n    st = gl_FragCoord.xy/u_resolution.xy;\n    aspect = u_resolution.x/u_resolution.y;\n    st.x *= aspect;\n\ts_time = iTime*0.724;\n\n    vec3 color = vec3(0.);\n    float state=seed;\n    vec2 st0=st;\n    float r0=ripples();\n    vec2 stp=vec2(0.006,0.0);\n    st=st0+stp;\n    float r1=ripples();\n    st=st0+stp.yx;\n    float r2=ripples();\n    vec3 nml=vec3(r1-r0,r2-r0,0.);\n\tnml.z=1.-length(nml);\n    nml = normalize(nml);\n    \n    vec3 worldPos = vec3(st,0.);\n    vec3 spec = vec3(0.411,0.331,0.555);\n    color+=calcPointLight(pointLight(vec3(0.281,0.177,-0.175),vec3(0.445,0.504,0.900),spec),nml,worldPos);\n    color+=calcPointLight(pointLight(vec3(0.829,0.229,-0.196),vec3(0.176,0.905,0.108),spec),nml,worldPos);\n    color+=calcPointLight(pointLight(vec3(0.239,0.939,-0.105),vec3(1.000,0.748,0.777),spec),nml,worldPos);\n    seed=state;\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}