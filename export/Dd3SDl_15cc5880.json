{"ver":"0.1","info":{"id":"Dd3SDl","date":"1681234614","viewed":59,"name":" rotational symmetry","username":"Acre","description":"I don't know how to cover the color of the circle well.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle( in vec2 p, in float r ) \n{\n    return length(p)-r;\n}\nvec3 poison_apple=vec3(0.635,0.0,0.38);\nvec3 teal_blue=vec3(0.0,0.329,0.533);\nvec3 misty_green=vec3(0.811,0.894,0.819);\nvec3 darkblue_green=vec3(0.0,0.435,0.482);\nvec3 medium_gray=vec3(0.623,0.627,0.627);  \n    \n    \nvec3 layer1()\n{\n    vec3 layer1_col;\n    return layer1_col;\n}\n\nfloat[50] t_x;\nfloat[50] t_y;\nfloat[50] d;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 col,col2;\n    float line;\n    \n    for(int i=0;i<13;i++)\n    {\n        t_x[i]=cos(float(i))*0.4;\n        t_y[i]=sin(float(i))*0.4;\n        d[i]=sdCircle(p+vec2(t_x[i],t_y[i]),0.2);\n        if(i!=50)\n        {\n            col2=(d[i]*d[i+1]>0.0) ? poison_apple : teal_blue;\n        }\n        else\n        {\n            col2=(d[12]*d[0]>0.0) ? poison_apple : teal_blue;\n        }\n        col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d[i])) );\n        //col = mix( col2, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d[i])) );\n    }\n\n    //col=(d[0]*d[1]>0.0) ? vec3(0.9,0.0,0.3) : vec3(0.65,0.85,1.0);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}