{"ver":"0.1","info":{"id":"fl3Xzr","date":"1638570812","viewed":213,"name":"GOT2 - The Landscaping","username":"Arrangemonk","description":"game of life as noise generatior for domain transformation?","likes":5,"published":3,"flags":48,"usePreview":0,"tags":["meh"],"hasliked":0,"parentid":"ft3Szr","parentname":"Game of Distortion"},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 fbm8(sampler2D tex,in vec2 uv)\n{    \nvec3 result = texture(tex,uv).rgb;\nresult += texture(tex,uv*  2.).rgb /  2.;\nresult += texture(tex,uv*  4.).rgb /  4.;\nresult += texture(tex,uv*  8.).rgb /  8.;\nresult += texture(tex,uv* 16.).rgb / 16.;\nresult += texture(tex,uv* 32.).rgb / 32.;\nresult += texture(tex,uv* 64.).rgb / 64.;\nresult += texture(tex,uv* 128.).rgb / 128.;\nreturn result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * .01;\n    \n      vec3 gol = normalize(fbm8(iChannel0,uv));\n\n      \n\n      //fragColor = vec4(gol,1);\n      //fragColor = texture(iChannel1,gol);\n      fragColor = texture(iChannel1,uv*0.1 + 0.25* gol.z *gol.xy);\n  }","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2  fragCoord )\n{\n    ivec2 uv = ivec2(fragCoord);\n\n    if(iFrame < 10 || texelFetch(iChannel2, ivec2(32,0),0).x > 0.){\n    fragColor = texture(iChannel0,fragCoord / iResolution.xy);\n    }\n    else\n    {\n     fragColor = texelFetch(iChannel1,uv,0);\n     \n     ivec3 diff = ivec3(1,0,-1);\n     \n     vec4 sum =  texelFetch(iChannel1,uv + diff.xx,0);\n          sum += texelFetch(iChannel1,uv + diff.xy,0);\n          sum += texelFetch(iChannel1,uv + diff.xz,0);\n          sum += texelFetch(iChannel1,uv + diff.yx,0);\n          sum += texelFetch(iChannel1,uv + diff.yz,0);\n          sum += texelFetch(iChannel1,uv + diff.zx,0);\n          sum += texelFetch(iChannel1,uv + diff.zy,0);\n          sum += texelFetch(iChannel1,uv + diff.zz,0);\n \n     float amount = .01;\n     float minl = 2.;\n     float maxl = 3.;\n     \n     if(sum.x < minl || maxl < sum.x)\n         fragColor.x =  max(0.,fragColor.x -amount);\n     else\n         fragColor.x = min(1.,fragColor.x + amount);\n\n         \n      if(sum.y <minl || maxl < sum.y)\n         fragColor.y =  max(0.,fragColor.y -amount);\n     else\n         fragColor.y = min(1.,fragColor.y + amount);\n\n         \n     if(sum.z < minl ||  maxl < sum.z)\n         fragColor.z =  max(0.,fragColor.z -amount);\n     else\n         fragColor.z = min(1.,fragColor.z + amount);\n\n\n     \n    }\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}