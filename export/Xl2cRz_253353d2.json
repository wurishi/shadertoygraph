{"ver":"0.1","info":{"id":"Xl2cRz","date":"1507207305","viewed":178,"name":"Cutout thingy","username":"csaez","description":"Quick doodle trying to get a cutout/layered look going... just messing around.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","parallax","layers","cutout"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// some constants\n#define speed 2.0\n#define amplitude 0.05\n#define freq 6.0\n#define number_lines 6.0\n#define line_threshold 0.2\n#define fg_color vec4(0.8)\n#define bg_color vec4(0.1, 0.35, 1.0, 1.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    float decay = (0.5 + (1.0 - uv.y));\n    float t = (freq * uv.x) + (sin((smoothstep(0.0, 1.0, uv.y) - iTime) * speed) * decay);\n    uv.y += sin(t) * amplitude;\n\n    float depth = mix(1.0, 0.2, uv.y);\n    float shadow = fract(uv.y * number_lines);\n\n    float outline = smoothstep(-6.0/iResolution.y, 6.0/iResolution.y, line_threshold - shadow)* depth;\n    shadow = mix(0.7, 1.0, shadow) * depth;\n    fragColor = shadow*bg_color + outline*fg_color;\n}","name":"Image","description":"","type":"image"}]}