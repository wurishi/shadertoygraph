{"ver":"0.1","info":{"id":"tds3WN","date":"1546380959","viewed":408,"name":"chessboard: endless zoom","username":"morisil","description":"moving within logarithmic perspective lis weird, looks like endless zoom","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["zoom","endless","loop","checker","perspective","double","chess"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 5.0\n\n#define EDGE_SHARPNESS 20000.0\n\n#define AIR_PERSPECTIVE 2.0\n\nfloat getChessboardLuminance(vec2 point) {\n    float value =\n        (1.0 - pow(sin(point.x), EDGE_SHARPNESS))\n        * sign(cos(point.x));\n    value *=\n        (1.0 - pow(sin(point.y - iTime), EDGE_SHARPNESS))\n        * sign(cos(point.y - iTime));\n    return (value + 1.0) / 2.0;    \n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 pixel = (fragCoord -.5 * iResolution.xy) / iResolution.y;\n    vec2 trans = vec2(pixel.x / pixel.y, log2(abs(pixel.y)));\n    trans *= SCALE;\n    \n\tfloat luminance = getChessboardLuminance(trans);\n\n    // apply air perspective\n    luminance *= abs(pixel.y * 2.0);\n    fragColor = vec4(vec3(luminance),1.0);\n}\n","name":"Image","description":"","type":"image"}]}