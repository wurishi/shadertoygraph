{"ver":"0.1","info":{"id":"MXScWw","date":"1727305292","viewed":11,"name":"Circles Test ","username":"alex_","description":"Colored circles","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    // vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    // uv.x *= iResolution.x / iResolution.y;\n    \n    uv *= 2.;\n    uv = fract(uv);\n    uv -= 0.5;\n    \n    float d = length(uv);\n    \n    vec3 col = vec3(d / 2., d * 0.4, cos(d));\n    \n    //d -= 0.5;\n    d = sin(d * 8. + iTime)/8.;\n    \n    d = abs(d);\n    \n    //d = step(0.02, d);\n    d = smoothstep(0., 0.05, d);\n    \n    \n    //d = sin(d * 100.0);\n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n   \n    col *= d;\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}