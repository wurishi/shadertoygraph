{"ver":"0.1","info":{"id":"7lfGDr","date":"1621964390","viewed":82,"name":"Britney spinning in the jewels","username":"Yfou","description":"A video of Britney spinning in the jewels.\nPart of the Book of Shaders' Patterns chapter's task.\n\nUncomment the line \"//steppedDistance = distanceToGreen;\" to see Britney blended into the jewel.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["video","rotate","britney","tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Line(float pos, float width, vec2 st){\n    st = st + vec2(width/2.);\n    return step(pos,st.x) - step(pos+width,st.x);\n}\n\nvec2 rotate2D(vec2 _st, float _angle){\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )  {\n\tvec2 st = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.0);\n    \n    \n    st *= 3.0;\n    float temp = st.y;\n    st.x *= iResolution.x/iResolution.y;\n\n    float go_backer_y = (step(1.0,mod(iTime,4.0))-0.5)*2.;\n    float go_backer_x = (step(1.0,mod(iTime+1.0,4.0))-0.5)*2.;\n    \n    st.y += step(1., mod(st.x,2.)) * min(mod(iTime,2.),1.)* go_backer_y;\n    st.x += step(1., mod(temp,2.)) * min(mod(iTime+1.0,2.),1.) * go_backer_x;\n    \n    st = fract(st);\n    \n    vec3 lines_arr[4];\n    lines_arr[0] = vec3(Line(1.,0.01,st));\n    lines_arr[1] = vec3(Line(0.000,0.01,st));\n    lines_arr[2] = vec3(Line(1.,0.01,st.yx));\n    lines_arr[3] = vec3(Line(0.0,0.01,st.yx));\n\n    \n\tst = rotate2D(st,3.14 *iTime);\n    color = vec3(st,0.6);\n    \n    vec3 videoBritney = texture(iChannel0, st).xyz;\n    \n\n    \n    for(int i = 0;i<4;i++){\n        color = mix(color,vec3(0.1),lines_arr[i]);\n    }\n    \n    \n    float distanceToGreen = distance(vec3(41.,128.,26.)/255.,videoBritney);\n\n    float steppedDistance = step(0.2,distanceToGreen);\n    //steppedDistance = distanceToGreen;\n    color = mix(color,videoBritney,steppedDistance);\n\n\tfragColor  = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}