{"ver":"0.1","info":{"id":"lXd3RH","date":"1716115751","viewed":246,"name":"Simple super spherical^8 shading","username":"mrange","description":"CC0: Simple super spherical^8\n I wanted super spherical with no ray trace step\n","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["2d","sphere"],"hasliked":0,"parentid":"ctBSDc","parentname":"Simple spherical shading"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// CC0: Simple super spherical^8 shading\n//  I wanted super spherical with no ray trace step\n\n#define TIME        iTime\n#define RESOLUTION  iResolution\n\nvec3 sphere4(vec3 col, vec2 p, float aa, float r, vec3 lightDir) {\n  vec2 p4 = p*p;\n  p4 *= p4;\n  float r8 = r*r;\n  r8 *= r8;\n  r8 *= r8;\n  float z8 = r8-dot(p4, p4);\n  if (z8 > 0.) {\n    float z = pow(z8, 1./8.);\n    vec3 cp = vec3(p, z);\n    vec3 cp2 = cp*cp;\n    vec3 cp7 = cp2*cp2;\n    cp7 *= cp2;\n    cp7 *= cp;\n    vec3 cn = normalize(cp7);\n    float cd= max(dot(lightDir, cn), 0.0);\n    \n    vec3 ccol = col;\n    ccol = cd*cd*vec3(1.0);\n    float d = pow(dot(p4, p4), 1./8.)-r;\n    col = mix(col, ccol, smoothstep(0., -2.*aa, d));\n  }\n  return col;\n}\n\nvec3 effect(vec2 p, vec2 pp) {\n  const vec3 lightDir = normalize(vec3(1.0, 1.5, 2.0));\n  float aa = sqrt(2.)/RESOLUTION.y;\n  vec3 col = vec3(0.025);\n\n  col = sphere4(col, p, aa, 0.75, lightDir);\n  col *= smoothstep(1.5, 0.5, length(pp));\n  col = sqrt(col);\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  vec2 pp =p;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec3 col = vec3(0.05);\n  col = effect(p, pp);\n  fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}