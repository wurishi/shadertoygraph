{"ver":"0.1","info":{"id":"3slGD8","date":"1546023075","viewed":405,"name":"Conjulia (Tricorn julia)","username":"Pork","description":"Conjulia - A tricorn where C is a constant (julia vriant)","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 cmul (vec2 c1, vec2 c2)\n{\n\tfloat a = c1.x;\n\tfloat b = c1.y;\n\tfloat c = c2.x;\n\tfloat d = c2.y;\n\n\treturn vec2 (a * c - b * d, b * c + a * d);\n}\n\nfloat cabs (in vec2 complex)\n{\n\tfloat x = complex.x;\n\tfloat y = complex.y;\n\n\treturn sqrt(x*x + y*y);\n}\n\n//Based on explanation http://www.hiddendimension.com/fractalmath/Divergent_Fractals_Main.html\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 c = fragCoord.xy / iResolution.xy;\n    //scaling real axis to [-2.5, 1.5] and  imaginary axis to  [-1.5, 1.5]\n    c = c * vec2(4.7,3.5) - vec2(2.5, 1.7); \n\n    vec2 z = c;\n    fragColor = vec4(0);\n    \n    int i = 0;\n    for (;i<100;i++)\n    {\n        if (cabs(z) >= 4.) \n        {\n            break;\n        }\n        \n       z.y = -z.y;\n       z = cmul(z, z);\n       z += vec2(sin(iTime)/2.);\n    }\n    fragColor = vec4(i)/100.;\n}","name":"Image","description":"","type":"image"}]}