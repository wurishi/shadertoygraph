{"ver":"0.1","info":{"id":"ddjyzm","date":"1687545022","viewed":86,"name":"mandelbrot set - image","username":"DeltaT","description":"it uses orbit trapping and maps the closest point to the trap to a pixel on an image","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 256\n\nvec2 complexSquare(vec2 z) {\n    vec2 z2 = vec2(0);\n    z2.x = z.x*z.x - z.y*z.y;\n    z2.y = 2.*(z.x*z.y);\n    return z2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 mouse = (iMouse.xy * 2. - iResolution.xy) / iResolution.y;\n    \n    vec2 z = vec2(0);\n    vec2 c = vec2(uv.x-0.4, uv.y) * 1.25;\n    vec2 zold = vec2(0);\n    \n    int iter = clamp(int(iTime*5.), 0, MAX_ITER);\n    //const float threshold = 2.;\n    \n    vec4 col = vec4(vec3(0), 1);\n    \n    float minDist = 0.;\n    vec2 trap = vec2(0);\n    for (int i = 0; i <= iter; i++) {\n        zold = z;\n        z = complexSquare(z) + c;\n        \n        float currentDist = length(z - (vec2(mouse.x-0.4, mouse.y) * 1.25));\n        \n        if (i == 0 || currentDist < minDist) {\n            minDist = currentDist;\n            trap = z;\n        }\n        col = vec4(texture(iChannel0, trap/2.).xyz - fract(minDist)/2., 1) * (length(z)<2. ? -1. : 1.) + (length(z)<2. ? 1. : 0.);\n        if ((i != 0 && z == c) || z == zold) { break; }\n        //if (length(z) > threshold) {\n        //    break;\n        //}\n    }\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}