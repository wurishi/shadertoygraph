{"ver":"0.1","info":{"id":"DsjyWw","date":"1687877426","viewed":53,"name":"first shader first shader","username":"big_man_big_man","description":"first shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette (float t)\n{\n    vec3 a = vec3(-0.172, 0.838, 0.608);\n    vec3 b = vec3(0.478, 0.103, -0.034);\n    vec3 c = vec3(0.338, 1.838, 3.138);\n    vec3 d = vec3(-0.302, 0.858, 0.667);\n    \n    return a + b*cos(6.28318*(c*t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 2.0; i++)\n    {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(length(uv0) * 1.2);\n        vec3 col = palette(length(uv0) + iTime / 5.5 + uv.x * uv.y * sin(iTime / 1.4983) + (5. + cos(iTime / 5.156987)) *2. * cos(uv.y * uv.x *.1));\n\n        d = abs(sin(d * 8. + iTime));\n        d = smoothstep(.1, abs(cos(iTime)) + 1., d);\n        d = 0.3 / d;\n        finalColor += cos(col * 1. / (cos(iTime / 1.256) / 5. + .5)) * d;\n        col = cos(col * 1. / (cos(iTime / 1.256) / 5. + .5)) * d;\n    }  \n    \n    fragColor = vec4(finalColor.x - 2., finalColor.y, sin(finalColor.z / 1.549887 + 2.) * 1.5, 1.0);\n}","name":"Image","description":"","type":"image"}]}