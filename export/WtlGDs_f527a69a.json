{"ver":"0.1","info":{"id":"WtlGDs","date":"1558094291","viewed":433,"name":"李明杰 12wq","username":"leneer","description":"12wq","likes":2,"published":1,"flags":4,"usePreview":0,"tags":["12wq"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Define some options\n    const float stepCount = 64.0;\n\tfloat barWidth = iResolution.x / stepCount;\n\n\t// Set background color\n\tvec3 color = vec3(0.1, 0.1, 0.1);\n\n\t// Draw spectrum bars\n    // Method 1: Directly use a condition\n    /*\n\tif (texture( iChannel0, vec2(floor(fragCoord.x / barWidth)/stepCount,0.25) ).x >= fragCoord.y/iResolution.y)\n\t{\n\t\tcolor = vec3((1.0/stepCount)*floor(fragCoord.x / barWidth),1.0-(1.0/stepCount)*floor(fragCoord.x / barWidth),0.5);\n\t}\n\t*/\n\n    // Method 2: Rewrite the condition to binary multiplication\n    float isInsideBar = step(fragCoord.y/iResolution.y, texture( iChannel0, vec2(floor(fragCoord.x / barWidth)/stepCount,0.25) ).x);\n    color = vec3(1.2) * isInsideBar;\n    color *= vec3((0.6/stepCount)*floor(fragCoord.x / barWidth),0.7-(1.2/stepCount)*floor(fragCoord.x / barWidth),0.5);\n    color = color * 0.90 + 0.1;\n\n    // Set the final fragment color\n\tfragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}