{"ver":"0.1","info":{"id":"3l3XRs","date":"1581504650","viewed":128,"name":"SDF line experiment","username":"halfgold","description":"If you bilinearly interpolate a signed distance function texture and draw the line between the negative and positive area (as you'd do with an sdf font), what curves can you get? This shadertoy explores that.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float tt = iTime * 0.1;\n    float scale = 5.0;\n\tfloat a00=scale * cos(tt);\n    float a01=scale * cos(1.2 * tt);\n\tfloat a10=scale * cos(1.01 * tt);\n    float a11=scale * cos(3.2 * tt);\n    \n    float s = fragCoord.x/iResolution.y - 0.5 * (iResolution.x / iResolution.y - 1.0);\n    float t = fragCoord.y/iResolution.y;\n    \n    float x = 0.0;\n    x += a00 * (1.0-s) * (1.0-t);\n    x += a01 * (1.0-s) * t;\n    x += a10 * s * (1.0 - t);\n    x += a11 * s * t;\n\n    float M = max(max(max(a00, a01), a10), a11);\n    float m = min(min(min(a00, a01), a10), a11);\n    \n    float rx = floor(x + 0.5);\n    float rx2 = floor(x + 1.0);\n    \n    float i = abs(x - rx) < 0.02 ? 1.0 : 0.0;\n    i += abs(x + 0.5 - rx2) < 0.01 ? 0.5 : 0.0;\n\n    if (s < 0.0 || s > 1.0) i = 0.0;\n    \n\tfragColor = vec4(i, i, i ,1.0);\n}","name":"Image","description":"","type":"image"}]}