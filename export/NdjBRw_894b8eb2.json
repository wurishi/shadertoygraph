{"ver":"0.1","info":{"id":"NdjBRw","date":"1645854832","viewed":61,"name":"fuzzy purple ball","username":"jneen","description":"idk man rotation is weird, is this an intel thing?","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["jneen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define T (iTime*1.11)\nmat2 rot(float a) {float s=sin(a),c=cos(a);return mat2(c,s,-s,c);}\n\nfloat tau = radians(360.);\n\n\nint pow_mod(int x, int e, int m) { \n  int y = 1;\n  \n  while (e > 0) {\n    if (e % 2 == 0) {\n      x = (x * x) % m;\n      e /= 2;\n    }\n    else {\n      y = (x * y) % m;\n      e -= 1;\n    }\n  }\n  \n  return y;\n}\n\nfloat draw_pt(vec2 p, float t) {\n    int base = 501;\n    int start = 2;\n    int st = 3;\n\n\n    int amount = int(t);\n    \n    int prev = start * pow_mod(st, amount, base);\n    int next = (prev * st) % base;\n    \n    vec2 one = vec2(1,0);\n    \n    vec2 prev_pt = one*rot(tau * float(prev) / float(base));\n    vec2 next_pt = one*rot(tau * float(next) / float(base));\n    \n    vec2 pt = mix(prev_pt, next_pt, fract(t));\n    \n    return length(p-pt)*10.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv -= .5;\n    uv *= 4.;\n    uv.y *= iResolution.y/iResolution.x;\n    \n    float speed = 2.;\n    uv *= rot(T*speed);\n    \n    float dist = draw_pt(uv, T);\n    dist = min(dist, draw_pt(uv, T+10.1));\n    dist = min(dist, draw_pt(uv, T+20.22));\n    dist = min(dist, draw_pt(uv, T+30.333));\n    dist = min(dist, draw_pt(uv, T+40.24934));\n    dist = min(dist, draw_pt(uv, T+500.24934));\n\n\n\n\n\n\n    vec3 col = vec3(step(1.,dist));\n    //col.g = 1.-(1.-col.g)*length(prev_pt-next_pt);\n\n    if (iFrame > 0) {\n        vec2 samplept = uv;\n        samplept *= rot(speed*(-T+iTimeDelta));\n        samplept.y /= iResolution.y/iResolution.x;\n        samplept /= 4.;\n        samplept += .5;\n\n\n        vec4 prevFrame = texture(iChannel0, samplept);\n        col.rg *= (prevFrame.r+1./500.);\n    }\n\n\n  \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.);\n}\n\n\n","name":"Buffer A","description":"","type":"buffer"}]}