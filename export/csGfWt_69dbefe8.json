{"ver":"0.1","info":{"id":"csGfWt","date":"1698752074","viewed":46,"name":"Rotation matrices","username":"STaghavi","description":"Rotation matrixes","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rotationmatrices"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.y;\n    \n    vec3 p;\n    float i = floor(uv.x * 3.);\n    \n    uv = fract(uv * 3.);\n   \n    \n    uv -= vec2(0.5, 0.5);\n    \n\n    float angle = radians((cos(iTime * 0.2)) * 360.), z = 1.;\n   \n    \n    if( i == 0.) {\n         p = inverse(mat3(1, 0, 0,   0, cos(angle), -sin(angle),   0, 0, z)) * vec3(uv, z);\n         uv = p.xy / p.z + .5;\n    \n    \n    }else if( i == 1.) { \n         p = inverse(mat3(cos(angle), 0, sin(angle),   0, 1, 0, 0, 0, z)) * vec3(uv, z);\n         uv = p.xy / p.z + .5;\n    }else {\n         p = inverse(mat3(cos(angle),-sin(angle), 0,   sin(angle), cos(angle), 0,   0, 0, z)) * vec3(uv, z);\n         uv = p.xy / p.z + .5;\n    }\n     \n    vec3 col = texture(iChannel0, uv ).xyz;\n     if(uv.x > 1.0 || uv.x < 0.0 || uv.y > 1.0 || uv.y < 0.0 ) \n    {\n        col = vec3(.5);\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}