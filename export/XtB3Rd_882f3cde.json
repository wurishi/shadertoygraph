{"ver":"0.1","info":{"id":"XtB3Rd","date":"1431855928","viewed":340,"name":"Interference pattern","username":"mhnewman","description":"Use the mouse to add another source!\nUncomment source 4!\nThere are a lot of knobs to turn including relative amplitude and starting phase angle.","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["2d","wave","interference","pattern","superposition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define frequency 25.0\n\n//\tSource 1\n#define useSource1\n#define source1pos cos(1.0 * t), sin(2.31 * t)\n#define source1amp 2.0\n#define source1phase 0.0\n\n//\tSource 2\n#define useSource2\n#define source2pos cos(1.43 * t), sin(1.17 * t)\n#define source2amp 1.0\n#define source2phase 0.0\n\n//\tSource 3\n#define useSource3\n#define source3pos cos(0.65 * t), sin(0.72 * t)\n#define source3amp 1.0\n#define source3phase 0.5\n\n//\tSource 4\n//#define useSource4\n#define source4pos cos(1.89 * t), sin(0.92 * t)\n#define source4amp 1.0\n#define source4phase 0.25\n\n//\tMouse\n#define mouseAmp 4.0\n#define mousePhase 0.0\n\n//\tSource circles\n#define circleRadius 0.015\n#define circleColor 0.6, 0.0, 0.0\n\n//\tColor scheme\n#define colorGamma 4.0, 1.0, 0.3\n\n\nvec4 addSource(vec4 total, vec2 pos, vec2 sourcePos, float sourceAmp, float sourcePhase) {\n    float dist = distance(pos, sourcePos);\n    float amp = sourceAmp / (dist * dist);\n    float angle = dist * frequency + 6.2831853 * sourcePhase;\n    return vec4(total.xyz + vec3(amp * sin(angle), amp * cos(angle), amp), min(total.w, dist));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float screenHeight = iResolution.y / iResolution.x;\n    float border = 1.0 / iResolution.x;\n\tvec2 pos = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.x;\n    \n    vec2 window = 0.8 * vec2(1.0, screenHeight);\n    \n    float t = iTime;\n    vec4 total = vec4(0.0, 0.0, 0.0, 2.0 * circleRadius);\n    \n    #ifdef useSource1\n    total = addSource(total, pos, window * vec2(source1pos), source1amp, source1phase);\n    #endif\n    \n    #ifdef useSource2\n    total = addSource(total, pos, window * vec2(source2pos), source2amp, source2phase);\n    #endif\n    \n    #ifdef useSource3\n    total = addSource(total, pos, window * vec2(source3pos), source3amp, source3phase);\n    #endif\n    \n    #ifdef useSource4\n    total = addSource(total, pos, window * vec2(source4pos), source4amp, source4phase);\n    #endif\n    \n    if (iMouse.z > 0.0) {\n        vec2 mousePos = vec2((2.0 * iMouse.xy - iResolution.xy) / iResolution.x);\n        total = addSource(total, pos, mousePos, mouseAmp, mousePhase);\n    }\n    \n    vec3 color = vec3(length(total.xy) / total.z);\n    color = pow(color, vec3(colorGamma));\n    \n    float circle = smoothstep(circleRadius + border,  circleRadius - border, total.w);\n    color = mix(color, vec3(circleColor), circle);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"","description":"","type":"image"}]}