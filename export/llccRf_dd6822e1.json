{"ver":"0.1","info":{"id":"llccRf","date":"1533414503","viewed":120,"name":"Trippy Grid","username":"TanayStyle","description":"Waving grid","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sin01(float x) {\n\treturn (sin(x)+1.)/2.;\n}\nfloat cos01(float x) {\n\treturn (cos(x)+1.)/2.;\n}\n\nfloat manDist(vec2 from, vec2 to) {\n    return abs(from.x - to.x) + abs(from.y - to.y);\n}\n\nfloat euclDist(vec2 from, vec2 to) {\n\treturn length(from - to);\n}\n\nvec2 randVec01(vec2 p) {\n    vec3 a = fract(vec3(sin(p.x), cos(p.y), cos(p.x)));\n    a += dot(a, a+ (sin01(iTime) - 1.5));\n    return smoothstep(0., 1., fract(vec2(a.x * a.y, a.y * a.z)));\n}\n\nfloat circ(float t, vec2 uv, vec2 pos, float radius) {\n    //float f01 = cos01(t + uv.x);\n    float f01 =  uv.x * 1.5;// * .5;\n    \n    float dist = f01 * euclDist(uv, pos) + (1. - f01) * manDist(uv, pos);\n    return smoothstep(radius, 0., dist);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Adjust coordinates so 0,0 is in center\n    vec2 uv = (fragCoord - iResolution.xy/2.)/iResolution.xy; \n    float aspectRatio = iResolution.x / iResolution.y;\n\tuv.x *= aspectRatio;\n    \n    // Adjust speed of time\n    float t = iTime * 1.5;\n    \n    // Distort UV coordinates\n    float diff = cos01(t)*1.5 + 1.;\n    uv.xy += vec2(diff * 1., diff * .5);\n    \n    // Create grid\n    float gridSize = 2. * ( ((1.-abs(uv.x*uv.y))/1.5 + 1.) + sin01(t));\n    vec2 gridCoord = floor(uv * gridSize) / gridSize;\n    \n    // Get how far inside a cell we are\n    float cellRadius = .5 / gridSize;\n    vec2 cellCenter = gridCoord + cellRadius;\n    float inGrid = circ(t, uv, cellCenter, cellRadius);\n    float bright = inGrid * (sin01(uv.x + t*2.) + .4);\n    \n    // Color where bright (foreground color)\n    vec3 col = cos(t + uv.x + vec3(1.,0.,2.)) * bright;\n    \n    // Color where not bright (background color)\n    col += .3*(1. - cos(t + uv.x + vec3(.1,1.,2.)))* (1. - bright);\n    \n    // Add subtle flair\n    vec2 pos = randVec01(vec2(inGrid));\n    col.rb -= pos * (1. - uv.x) * sin01(t) * .1;\n    \n    // Output color to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}