{"ver":"0.1","info":{"id":"4sVBDc","date":"1532225510","viewed":277,"name":"audio and stuffff","username":"hmitchell","description":"ojqjoqw","likes":2,"published":1,"flags":6,"usePreview":0,"tags":["fiojafs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWOPI (3.14159 * 2.0)\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = uv * 2.0 - 1.0;\n    float angle = (atan(uv2.y, uv2.x) + 3.14) / TWOPI;\n\tfloat audio = texture(iChannel3, vec2(sin(angle*0.1), 0.)).r;\n\n    uv.x += sin(iTime*1. + uv.y * TWOPI + audio*10.0) * 0.1;\n    \n    // Time varying pixel color\n    float greenColor = texture(iChannel2, uv).g;\n\n    //col = sin(col + length(col)) * 0.5 + 0.5;\n    \n    //col = 1. - col;\n    vec2 redColorUvOffset = vec2(sin(iTime + uv.y*TWOPI)*0.1, 0.);\n    float redColor = texture(iChannel2, uv + redColorUvOffset).r;\n\n    vec2 blueColorUvOffset = vec2(cos(iTime + uv.y*TWOPI)*0.1, 0.);\n    float blueColor = texture(iChannel2, uv + blueColorUvOffset).b;\n\n    vec3 col = vec3(redColor, greenColor, blueColor);\n    \n    col.g = 0.5 - col.g;\n    \n    col.r = 0.7 - col.r;\n    \n    //col = pow(col, vec3(1.15 - audio*2.));\n    //col = vec3(audio);\n    /*\n    col = mix(col, vec3(0.), col.g*1.5); \n    \n    vec3 orange = vec3(0.25, 0., 0.1);\n    \n    col = mix(col, vec3(1.), abs(length(col) - orange)); \n    */\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}