{"ver":"0.1","info":{"id":"NtyBz1","date":"1663993495","viewed":71,"name":"Blue Background","username":"Polanas","description":"Messing around with trushet tiles","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["background"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Length(in vec2 p, in float k)\n{\n\treturn pow(pow(abs(p.x),k)+pow(abs(p.y),k), 1./k);\n}\n\n//from https://www.shadertoy.com/view/Wl2cRc\nfloat Hash21(vec2 p)\n{\n    return fract(sin(p.x *100.+p.y*6551.)*5678.);\n}\n\nmat2 r2(float t)\n{\n\treturn mat2(cos(t), -sin(t),sin(t),cos(t));\n}\n\nvec3 trushet(vec2 uv)\n{\n\tvec2 id = floor(uv);\n   \n    uv = fract(uv);\n    vec2 uv2 = uv;\n \n\tuv -= vec2(.5);\n  \n\tfloat r = Hash21(id);\n    \n\tif (r>.5)\n        uv.x *=-1.;\n\tbool line = uv.x+uv.y > 0.;\n\n    float s = line ? 1. : -1.;\n\n    float size = .02;\n    float blur = -100.;\n  \n    vec3 col = vec3(smoothstep(size-blur, size+blur,abs((Length(uv-vec2(.5*s),1.)-.5))));\n\n   return col;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord.xy-iResolution.xy*.5)/iResolution.y;\n    float time = iTime;\n   \n    uv *=5.;\n    \n    uv += vec2(20.*sin(time/20.), 20.*cos(time/20.))/20.;\n    uv *= r2(length(uv*sin(time)*.5+.5)+time);\n    \n    vec3 col = trushet(uv);\n    col.x *= sin(uv.x+.5+time)*.5+.5;\n    col.y *= sin(uv.y*2.+1.+time)*.5+.5;\n  \n    col = pow(col,vec3(1./2.2));\n\tfragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}