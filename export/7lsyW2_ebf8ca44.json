{"ver":"0.1","info":{"id":"7lsyW2","date":"1649396947","viewed":84,"name":"Wave + Sunset Perspective","username":"vtgco","description":"waves & stuff","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"ss2BRK","parentname":"Wave SD Jersey 2022"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//FBM implementation from https://www.shadertoy.com/view/3sVczG\n\nvec2 hash( vec2 x )  \n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\n// -----------------------------------------------\n\nfloat fbm( in vec2 uv )\n{\n \tuv *= 2.;\n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\tfloat f = 0.;\n    f  = abs(sin(0.5000*noise( uv ))); uv = m*uv;\n\tf += abs(sin(0.2500*noise( uv ))); uv = m*uv;\n\tf += abs(sin(0.1250*noise( uv ))); uv = m*uv;\n\tf += abs(sin(0.0625*noise( uv ))); uv = m*uv;\n\t//f  = 0.5 + 0.5*f;\n    return f;\n}\n\n\n// ORIGINAL COLORS FROM 2020\n// vec3 DARK = vec3(29., 53., 87.)/255.;\n// vec3 LIGHT = vec3(69., 123., 157.)/255.;\n// vec3 SAND_DARK = vec3(224., 159., 62.)/255.;\n// vec3 SAND_LIGHT = vec3(255., 243., 176.)/255.;\n\n\nvec3 DARK = vec3(0., 46., 93.)/255.;\nvec3 LIGHT = vec3(44., 204., 211.)/255.;\nvec3 SKY_ORANGE = vec3(255., 158., 27.)/255.;\nvec3 SKY_PINK = vec3(232., 39., 128.)/255.;\n\n//vec3 SAND_LIGHT = vec3(238., 229., 210.)/255.;\n\n\nvec3 HIGHLIGHT = vec3(184., 204., 234.)/255.;\n\nfloat WATER_EDGE = 0.15; //0.45;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= vec2(0.5,0.5);\n    \n    vec2 uv_copy = uv;\n    uv.x = uv_copy.y;\n    uv.y = uv_copy.x;\n    \n    uv.x /= iResolution.x / iResolution.y;\n    //uv.x *= iResolution.x / iResolution.y;\n    \n    // WATER EDGE becomes x = 0\n    uv.x -= WATER_EDGE;\n    \n    vec3 color = vec3(0.0);\n    \n    vec2 water_persp = uv;\n    water_persp.x = water_persp.x >= 0. ? water_persp.x : 0.8*log(-water_persp.x);\n    \n    \n    vec2 timeDisplaceA = vec2(iTime*0.05,0.);\n    \n    vec2 warped_point_og = water_persp + vec2(fbm(water_persp)*0.3, 0.);\n\n    vec2 warped_point_water = water_persp + vec2(fbm(water_persp + timeDisplaceA)*0.3, 0.);\n\twarped_point_water.x -= cos(iTime)*.1;\n    \n    if (water_persp.x >= 0. && uv.x >= 0.) { \n \n        vec2 warped_point_sky = warped_point_og;\n        warped_point_sky.x *= 2.5;\n        \n        float dist_from_sun = length(warped_point_sky) + fbm(warped_point_sky) * sqrt(length(warped_point_sky));\n        \n        //vec3 curr_dark = mix(SKY_ORANGE, SKY_PINK, smoothstep(0.0, 1.0, dist_from_sun*2.));\n        vec3 curr_dark = SKY_PINK;\n       \n        color = mix(SKY_ORANGE, curr_dark, smoothstep(0.,1., pow(dist_from_sun,1.8)*0.7 + fbm(warped_point_sky))); //fract(dist_from_sun) * (dist_from_sun/4.)));\n        \n        color += vec3(0.005 / pow(length(warped_point_og+vec2(0.0,0.25)),2.));\n        \n        //color += mix(SKY_ORANGE*0.5, curr_dark*0.5, smoothstep(0.0, 0.1, fbm(warped_point_sky)));\n        \n        /*vec3 curr_dark = mix(SKY_PINK, SKY_ORANGE, smoothstep(0.0, 0.6, dist_from_sun));\n        color = mix(SKY_ORANGE, SKY_PINK, smoothstep(0.,1., dist_from_sun)); //* (warped_point_sky.x+1.))\n    \tif (mod(fbm(warped_point_og), 0.01) <= 0.001) {\n        \tcolor -= vec3(fbm(warped_point_og)) * 0.5;\n        }*/\n    \n    } else {\n        // warped_point_water.x /= 0.1 * exp((WATER_EDGE - warped_point_water.x));\n        \n        \n        /*vec3 curr_dark = mix(LIGHT, DARK, smoothstep(0.0, 0.6, (-0.1 - warped_point_water.x) * 3.));\n    \tcolor = mix(curr_dark, LIGHT, smoothstep(0.,0.4,fract(warped_point_water.x * 6.)) * (warped_point_water.x+1.));\n        color += HIGHLIGHT * max(0., smoothstep(0.8,1.,fract(warped_point_water.x * 6.)) * smoothstep(WATER_EDGE-1.,WATER_EDGE,warped_point_water.x) * cos(iTime));\n    \n        color += 0.1 * HIGHLIGHT * length(warped_point_water);\n    \tcolor += vec3(fbm(warped_point_water))*0.5*(cos(iTime)+0.5);\n        \n        if (mod(fbm(warped_point_water), 0.01) <= 0.001)\n        \tcolor += vec3(fbm(warped_point_water)) * 0.5;*/\n            \n        vec3 curr_dark = mix(LIGHT, DARK, smoothstep(0.0, 1.0, (2. + warped_point_water.x) * 0.5));\n        \n    \tcolor = mix(curr_dark, LIGHT, smoothstep(0.,0.4, fract(warped_point_water.x * 6.)) * (-warped_point_water.x));\n        color += HIGHLIGHT * max(0., smoothstep(0.8, 1., fract(warped_point_water.x * 6.)) * smoothstep(-1.,0.,warped_point_water.x) * cos(iTime));\n    \n        color += 0.2 * HIGHLIGHT * length(warped_point_water);\n    \tcolor += vec3(fbm(warped_point_water))*0.5*(cos(iTime)+0.5);\n        \n        if (mod(fbm(warped_point_water), 0.01) <= 0.001)\n        \tcolor += vec3(fbm(warped_point_water)) * 0.5;\n    }\n    \n    //if (abs(mod(warped_point.x, 0.1)) < 0.01 || abs(mod(warped_point.y, 0.1)) < 0.01)\n        //color -= vec3(0.1);\n    \n        \n    fragColor = vec4(color, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}