{"ver":"0.1","info":{"id":"NlKSRw","date":"1640361658","viewed":318,"name":"Simple Spectrum Analyzer","username":"qtiki","description":"Simple spectrum analyzer implementation.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["audio","spectrumanalyzer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGzn","filepath":"/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","previewfilepath":"/media/ap/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 BAR_COLOR = vec3(0.8, 0.2, 0.3);\nconst float BAR_COUNT = 20.0;\nconst float BAR_WIDTH = 0.75;\n\n// first row is frequency data (48Khz/4 in 512 texels, meaning 23 Hz per texel)\nconst float FREQ_COUNT = 512.0;\n\nconst float PI = 3.14159265359;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float barIndex = floor(uv.x * BAR_COUNT);\n    float barHeight = texelFetch(iChannel0, ivec2(barIndex * FREQ_COUNT / BAR_COUNT, 0), 0).r;\n    \n    float horizontal = smoothstep(1.0 - BAR_WIDTH, 1.0 - BAR_WIDTH, abs(sin(uv.x * PI * BAR_COUNT)));\n    float vertical = smoothstep(1.0 - barHeight, 1.0 - barHeight, 1.0 - uv.y);\n    \n    // Output to screen\n    fragColor = vec4(BAR_COLOR * horizontal * vertical, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}