{"ver":"0.1","info":{"id":"stjXDw","date":"1627868838","viewed":245,"name":"stable convergence fun","username":"Carandiru","description":"well it ended up kinda cool. deflection masking!","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["voronoi","bluenoise"],"hasliked":0,"parentid":"NlsXDf","parentname":"animated voro-blue noise"},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Forked from F2-F1 Voronoi by RiceFields\n\n// voro-blue noise animation test\n\n#define SCALE 16.0\n#define SPEED 1.0\n\nvec4 random;\n\nvoid genRandom( vec2 p ) {\n    random = textureLod(iChannel0, (p * iResolution.xy) / (1024.0f * SCALE), 0.0f);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.y;\n    \n    uv *= SCALE;\n    \n    vec2 iuv = floor(uv);\n    vec2 fuv = fract(uv);\n    \n    \n    vec2 mPoint = iuv;\n    float mDist = 1.0f;\n    float mPotential = 0.0f;\n    \n    float charge_here = 0.0f;\n    \n    for(int j=-1; j<=1; ++j) {\n        for(int i=-1; i<=1; ++i) {\n        \n            vec2 neighbour = vec2(float(i), float(j));\n            genRandom(iuv + neighbour);\n            \n            vec2 point = random.xy;\n            float charge_there = random.z * 2.0f - 1.0f;\n                        \n            float potential = abs(charge_there - charge_here);\n            potential = smoothstep(2.0f, 0.0f, potential);\n            \n            // animate\n            point = 0.5f + 0.5f*(sin(SPEED*iTime + 6.2831f*point) + SPEED*iTime * (potential) * (neighbour - fuv));\n            \n            vec2 diff = neighbour + point - fuv;\n                        \n            float distsq = dot(diff, diff); // lenght^2\n            \n            if( distsq < mDist) {\n                mDist = distsq;\n                mPoint = point;\n                mPotential = potential;\n                charge_here = charge_there;\n            }\n        }\n    }\n    \n    mDist = sqrt(mDist);\n   \n    vec3 col = vec3(0.0f);\n    \n    col = mix(vec3(1,0,0), vec3(0,0,1), mPotential);\n    \n    col = col * (1.0f - mDist);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}