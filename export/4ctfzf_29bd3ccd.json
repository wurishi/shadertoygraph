{"ver":"0.1","info":{"id":"4ctfzf","date":"1733341036","viewed":79,"name":"truchet move","username":"nayk","description":"https://www.shadertoy.com/view/4fcBz2 and https://www.shadertoy.com/view/Mf3BRj https://www.shadertoy.com/view/ldBXDD","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//#define b vec4(0, .5, cos(pi / 4.), .5)\n//#define pi acos(-1.)\n\n// fabrice sugestions\n#define e vec4(1./sqrt(2.), .5, -.5, 0)\n#define T mat4x2(e.xwyy, e.wxzy)\n\nfloat sq(vec2 p){\n    p = abs(p) - .5;\n    return max(p.x, p.y);\n}\n\nfloat section(vec2 u, vec2 h, vec2 s) {\n    int i = int(h.x); \n    int j = int(h.y); \n    \n    //mat2 m = inverse(mat2(a[i], b[i], a[j], b[j]));\n    mat2 m = inverse(mat2(T[i], T[j]));\n    \n    //vec4 p4 = 2. * (u.x * a + u.y * b),\n    vec4 p4 = 2. * u * T,\n         id = round(p4);\n    \n    vec2 p = (vec2(id[i], id[j]) - s + .5) * m;\n    \n            //vec4 q = round(p.x * a + p.y * b), \n            vec4 q = round(p * T), \n                 ofs = p4 - q;\n\n            ofs[i] += q[i] - id[i] + s.x;\n            ofs[j] += q[j] - id[j] + s.y;\n        \n    //p = m * vec2(dot(ofs, a), dot(ofs, b)) - .5;\n    p = m * T * ofs - .5;\n    \n    return sq(p);\n}\n\n\nfloat comb(vec2 u, vec2 h){\n    vec2 s = vec2(0, 1);\n    \n    float \n    d =        section(u, h, s.xx);\n    d = min(d, section(u, h, s.xy));\n    d = min(d, section(u, h, s.yx));\n    d = min(d, section(u, h, s.yy));\n    \n    return d;\n}\n\n#define S3(d,b) smoothstep(6./iResolution.y, 0. , d - (b) )\n#define S2(d,b) smoothstep(6./iResolution.y, 0. , d - (b) )\n#define S(d,b) smoothstep(6./iResolution.y, 0. , d - (b) )\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nvec3 DFS(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut;\n  return colOut;\n}\n\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\n\n\n// Function to rotate a 2D point by an angle\nvec2 rotate(vec2 p, float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return vec2(c * p.x - s * p.y, s * p.x + c * p.y);\n}\n\n\nvec3 Fig01(vec2 p, vec3 colout,vec3 colIn)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\n//izq chico\nA=vec2(0.0,0.5);\nr1=0.1833333;\nfloat d11=sdCircle(p-A,r1);\n\n//der chico\nA=vec2(1.0,0.5);\nr1=0.1833333;\nfloat d12=sdCircle(p-A,r1);\n\n//izq grande \nA=vec2(0.0,0.5);\nr1=0.31;\nfloat d13=sdCircle(p-A,r1);\nd13=Sdf_D(d13,d11);\ncolout= DFB(vec3(0.0), colout, d13);\n\n\n//der grande\nA=vec2(1.0,0.5);\nr1=0.31;\nfloat d14=sdCircle(p-A,r1);\nd14=Sdf_D(d14,d12);\ncolout= DFB(vec3(0.0), colout, d14);\n\n\n\n//centro grande\nA=vec2(0.5,1.0);\nr1=0.31;\nfloat d15=sdCircle(p-A,r1);\n\n//centro chico\nA=vec2(0.5,1.0);\nr1=0.1833333;\nfloat d16=sdCircle(p-A,r1);\nd15=Sdf_D(d15,d16);\ncolout= DFB(vec3(0.0), colout, d15);\n\n\n\n//chico izq inferior\nA=vec2(0.0,0.0);\nr1=0.1833333;\nfloat d17=sdCircle(p-A,r1);\n\n//chico der inferior\nA=vec2(1.0,0.0);\nr1=0.1833333;\nfloat d18=sdCircle(p-A,r1);\n\n//grande circulo der\nA=vec2(1.0,0.0);\nr1=0.31;\nfloat d19=sdCircle(p-A,r1);\nd19=Sdf_D(d19,d18);\ncolout= DFB(vec3(0.0), colout, d19);\n\n\n\n///grande circulo izq\nA=vec2(0.0,0.0);\nr1=0.31;\nfloat d110=sdCircle(p-A,r1);\nd110=Sdf_D(d110,d17);\ncolout= DFB(vec3(0.0), colout, d110);\n\n\n//izq\nA=vec2(0.25,0.25);\nmed=vec2(0.05,0.2);\nfloat d111=sdBox(p-A,med);\ncolout= DFB(vec3(0.0), colout, d111);\n\n\n//der\nA=vec2(0.75,0.25);\nmed=vec2(0.06166667,0.25);\nfloat d112=sdBox(p-A,med);\ncolout= DFB(vec3(0.0), colout, d112);\n\n    return colout;\n}\n\n\n\n// Function to generate a random number based on tile position\nfloat random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec3 truchet(vec2 uv, vec3 col, vec3 colIn)\n{    vec2 pos = uv;\n    vec2 tile = floor(uv);\n    pos = fract(uv) ;\n    // Generate a random number to choose \n    float choice = random(tile);\n    float dist = 0.0;\n    float nopc=1.0;\n     float choice2 = random(tile);\n    float ang = (choice2 < 0.5) ? radians(90.0) : radians(-90.0);\n    pos = rotate(pos - 0.5, ang) + 0.5; // RotaciÃ³n con el centro del tile como origen\n\n   col=Fig01(pos,col,colIn); \n    \n    return col;\n}\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\nvec3 palette2( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy; o *= 0.;\n \n       float scale =2.0;\n        vec2 uv =  scale * ( 2. * u - iResolution.xy ) / iResolution.y ;\n        \n        vec2 cPos = -1.0 + 2.0 * u.xy / iResolution.xy;\n    \n    // distance of current pixel from center\n\tfloat cLength = length(cPos);\n\n\t uv -=(cPos/cLength)*cos(cLength*12.0-iTime*4.0) * 0.10;\n          vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n    }\n    u = 3. * (u + u - r) / r.y + iTime*0.;\n       u.x+=cos(iTime);\n          uv.x+=sin(iTime);\n               u.y+=sin(iTime);\n          uv.y+=cos(iTime);\n          \n    vec4 h = vec4(0, 1, 2, 3);\n  vec3 col3=vec3(1.0);\n    col3= truchet(uv,col3, vec3(0.0,0.0,0.0));\n      col3=pow(col3,  vec3(0.554545));  \n    float \n        d =        comb(u, h.xy);\n        d = min(d, comb(u, h.xw));\n        d = min(d, comb(u, h.yz));\n        d = min(d, comb(u, h.zw));\n        //d = min(d, comb(u, h.xz));\n        //d = min(d, comb(u, h.yw));\n\n    o += smoothstep(14. / r.y, 0., d+ palette2(1.).x + .08);\n    o+=vec4(col3*vec3(0,.1,2.2),.1);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}