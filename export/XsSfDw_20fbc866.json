{"ver":"0.1","info":{"id":"XsSfDw","date":"1500655221","viewed":144,"name":"MYST","username":"Bitzawolf","description":"[Unfinished, Demo]\n\nMimics linking sqaures from MYST!\n\nClick a panel and hold the mouse to remain in that world. Lift the mouse button to return to the space\n\nOriginally planned to be a part of the SHA17 event, but discontinued to explore other interests.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","interactive","cubemap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","previewfilepath":"/media/ap/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n * Myst linking without the books. Click a panel to be taken to a new world!\n * \n * Project discontinued to explore more traditional shaders (using 3D meshes and such)\n * \n * @bitzawolf\n * bitzawolf.com\n */\n\nconst int spaceWorld = 0;\nconst int stoneWorld = 1;\nconst int churchWorld = 2;\nconst int forestWorld = 3;\n\nvec2 getUV(vec2 fragCoord)\n{\n    return 2.5 * (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.xx;\n}\n\nvec2 getRotation()\n{\n    float rotX = (iMouse.x / iResolution.x) * 2.0 * 3.14;\n    float rotY = (iMouse.y / iResolution.y) * 3.14;\n    return vec2(rotX, rotY);\n}\n\n/**\n * Returns the 3D vector that makes up where the user is looking based\n * on where their mouse position is.\n */\nvec3 getLookingDirection(vec2 fragCoord, vec2 uv, vec2 rot)\n{\n    vec3 camO = vec3(cos(rot.x), cos(rot.y), sin(rot.x));\n    \n    vec3 camD = normalize(vec3(0)-camO);\n    vec3 camR = normalize(cross(camD, vec3(0, 1, 0)));\n    vec3 camU = cross(camR,camD);\n    \n   \treturn normalize(uv.x * camR + uv.y * camU + camD);\n}\n\nvoid drawLinkToWorld(out vec4 fragColor, vec3 dir, vec2 uv, vec2 rot)\n{\n    vec3 camO = normalize(vec3(cos(rot.x + iTime * .5), cos(rot.y), sin(rot.x + iTime * .5)));\n    vec3 camD = normalize(vec3(0)-camO);\n    vec3 camR = normalize(cross(camD, vec3(0, 1, 0)));\n    vec3 camU = cross(camR,camD);\n   \tvec3 miniWorldDir =  normalize(uv.x * camR + uv.y * camU + camD);\n    \n    if (dir.x > 0.8 && dir.z < 0.2 && dir.z > -0.2)\n        fragColor = texture(iChannel0, miniWorldDir);\n\n    if (dir.z > 0.8 && dir.x < 0.2 && dir.x > -0.2)\n        fragColor = texture(iChannel1, miniWorldDir);\n\n    if (dir.x < -0.8 && dir.z < 0.2 && dir.z > -0.2)\n        fragColor = texture(iChannel2, miniWorldDir);\n\n    if (dir.z < -0.8 && dir.x < 0.2 && dir.x > -0.2)\n        fragColor = .5 - texture(iChannel2, miniWorldDir);\n}\n\n/**\n * Checks to see if the player is clicking on a teleport panel, and if so\n * returns the value of the world they should be in.\n */\nint touchPanel()\n{\n    vec2 click = iMouse.zw / iResolution.xy;\n    \n    if (click.x > 0.09 && click.x < 0.15 &&\n        click.y > 0.45 && click.y < 0.55)\n        return forestWorld;\n    \n    if (click.x > 0.29 && click.x < 0.35 &&\n        click.y > 0.45 && click.y < 0.55)\n        return -1;\n    \n    if (click.x > 0.475 && click.x < 0.525 &&\n        click.y > 0.45 && click.y < 0.55)\n        return stoneWorld;\n    \n    if (click.x > 0.65 && click.x < 0.71 &&\n        click.y > 0.45 && click.y < 0.55)\n        return churchWorld;\n    \n    if (click.x > 0.85 && click.x < 0.91 &&\n        click.y > 0.45 && click.y < 0.55)\n        return forestWorld;\n    \n    return spaceWorld;\n}\n\nvec4 drawSpace(vec3 dir, vec2 uv, vec2 rot)\n{\n    return vec4(.05, .05, .05, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int curWorld = touchPanel();\n    vec2 uv = getUV(fragCoord);\n    vec2 rot = getRotation();\n    vec3 dir = getLookingDirection(fragCoord, uv, rot);\n    \n    if (curWorld == spaceWorld)\n        fragColor = drawSpace(dir, uv, rot);\n    else if (curWorld == stoneWorld)\n    \tfragColor = texture(iChannel0, dir);\n    else if (curWorld == churchWorld)\n        fragColor = texture(iChannel1, dir);\n    else if (curWorld == forestWorld)\n        fragColor = texture(iChannel2, dir);\n    \n    if (curWorld == 0 && dir.y > -0.2 && dir.y < 0.2)\n    {\n        drawLinkToWorld(fragColor, dir, uv, rot);\n    }\n}","name":"Image","description":"","type":"image"}]}