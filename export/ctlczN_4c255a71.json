{"ver":"0.1","info":{"id":"ctlczN","date":"1690479198","viewed":37,"name":"Cosmic Oil","username":"Booter","description":"endlessly fall into flowering cosmic oil","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"dtXyR8","parentname":"Heart of the sea"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\n//http://dev.thi.ng/gradients/\n\n//iquilezles.org/articles/palettes/\n\n//[[0.250 -0.332 -0.392] [0.740 0.638 0.808] [0.668 0.778 1.498] [0.698 0.638 0.808]]\n\nvec3 palette( in float t)\n\n{\n\n   vec3 a = vec3(0.250, -0.332, -0.392);\n\n   vec3 b = vec3(0.740, 0.638, 0.808);\n\n   vec3 c = vec3(0.668, .778, 1.5);\n\n   vec3 d = vec3(0.698, 0.638, 0.808);\n\n   return a + b*cos( 6.28318*(c*t+d) );\n\n}\n\n#define d_split 1.\n\n#define a_split 10.\n\n#define wiggly 300.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n\n{\n\n    // Normalized pixel coordinates (from -1 to 1)\n\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / min(iResolution.y, iResolution.x);\n\n    //angle to center\n\n    float angle =  atan(uv.y, uv.x) / M_PI;\n\n    angle = (angle + 1.) / 2.; // bound to 0 to 2PI\n\n    \n\n    float d = length(uv);\n\n    float d_t = d * d_split * -(sin(25. + iTime * .1) + 2.5);\n\n    float d_inx = floor(d_split * sin(d_t));\n\n    float radial_split = fract(d_split * sin(d_t));\n\n    float t = (sin(iTime) + iTime) / 15.;\n    float zoom = (sin(iTime * .1) + 5.- sqrt(d)) * ( sin(iTime * .1) + 2.) ;\n    float p = (sin(wiggly/zoom) / 5.) - 0.5;\n\n    angle += p * sqrt(d) + t;\n\n    angle = fract(angle * a_split); // create divisions in the gradient\n\n\n    //messing with dithering\n\n    vec2 smallCoord = floor(fragCoord / .5 + sin(iTime));\n\n    if(int(smallCoord.x + smallCoord.y * 3.3 + sin(iTime))  % (abs(int( 5. * d_inx)) + 5) == 0 )\n\n    {\n\n      angle *= .85;\n\n    }\n\n    \n\n//soft edge    \n//    if(d>1.){\n//angle /= pow(sqrt(d - 0.99) * 10.,3.) ;\n//}\n    \n\n    // Output to screen\n\n    fragColor = vec4(palette(angle * radial_split),1.0);\n\n}","name":"Image","description":"","type":"image"}]}