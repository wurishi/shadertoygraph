{"ver":"0.1","info":{"id":"ctsGzN","date":"1671469839","viewed":119,"name":"Basic Plasma","username":"MrSynAckSter","description":"Plasma Shader - I used https://www.shadertoy.com/view/4lsGDl as the starting out point. The divide operation on line 24 gives a cool glitchy effect. I need to alter it to make the camera zoom a bit more. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["plasma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    float c1,c2,cf;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2. + sin(t)*2.; \n    vec3 col; // = vec3(sin(uv.x+t*3.),cos(uv.y+t*3.),iTime*3.);\n    \n    c1 = sin(uv.x*5.+t); \n    \n    c2 = sin(uv.y*5.+t);\n    \n    c2 = sin(5.0*(uv.x*sin(iTime / 2.0) + uv.y*cos(iTime/3.0)) + iTime);\n    \n    //https://www.shadertoy.com/view/4lsGDl partially lifted from here \n    float cx = uv.x + sin(iTime / 5.0)*5.0;\n    float cy = uv.y + sin(iTime / 3.0)*5.0;\n    float c3 = sin(sqrt(100.0*(cx*cx + cy*cy)) + iTime);\n    \n    //cf = c1 + c2 + c3;\n    cf = c1 + c2 / c3;\n    \n    float r,g,b; \n    r = cos(cf*PI);\n    g = sin(cf*PI + 6.0*PI/3.0); \n    b = sin(cf*PI + 4.0*PI/3.0); \n        \n    col = vec3(r,g,b); \n    // Time varying pixel color\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}