{"ver":"0.1","info":{"id":"McX3R4","date":"1702804416","viewed":19,"name":"kiulangvin_test01","username":"kiulangvin","description":"my test shader programs","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec3 finalColor = vec3(0.);\n    // [-1,1]\n    uv= uv*2.0 - 1.0;\n    vec2 uv0 = uv;\n    \n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract(uv* 1.5) -0.5;\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0)+ + i*.4 +iTime*0.4);\n        d = sin(d*8.0 + iTime)/8.0;\n        d=abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n    }\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}