{"ver":"0.1","info":{"id":"wdXBzM","date":"1587992014","viewed":75,"name":"pendulam","username":"bhuwan0000","description":"pendulam motion\nmove the extreme points with mouse","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["oscillation","pendulam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define iR iResolution.xy\n// a great video about this here: https://www.youtube.com/watch?v=keBLKqHEeT8\n\nfloat sweep(vec2 st, vec2 p, float r, float theta)\n{\n    st -= p;\n    float ang = theta>=0.0?radians(90.- theta):radians(-90.-theta);\n    float d1 = smoothstep(r-0.15, r-6./iR.y-0.16, abs(length(st)-r));\n    float ang_c = atan(max(0.,-st.y)/st.x);\n    float d = ang_c<ang?theta>=0.0?0.0:d1:theta<0.0?0.0:d1;\n    return d;\n}\nfloat line(vec2 p1, vec2 p2, vec2 uv, float t) {\n  float a = abs(distance(p1, uv));\n  float b = abs(distance(p2, uv));\n  float c = abs(distance(p1, p2));\n  if ( a >= c || b >=  c ) return 0.0;\n  float p = (a + b + c) * 0.5;\n  float h = 2.0 / c * sqrt( p * ( p - a) * ( p - b) * ( p - c));\n  return mix(1.0, 0.0, smoothstep(0.5 * t, 1.5 * t, h));\n}\n\nfloat ball(vec2 st, vec2 p, float r)\n{\n    return smoothstep(r, r-2./iResolution.y, length(st-p));\n}\n\nvec3 shm(vec2 po, vec2 cent, float ang, float t)\n{\n    float c = ang;\n    float l = length(po-cent);\n    float f = c*sin((t)*sqrt(9.8/l)-PI/2.); //from T = 2PI*sqrt(L/g) but here as a function of angle and time\n    float x = l*sin(f)+cent.x; //calc x and y based on angle\n    float y = -l*cos(f)+cent.y;\n    \n    return vec3(x,y,f);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iR)/iR.y;\n    vec2 mouse = (2.*vec2(iMouse.x, iMouse.y)-iR)/iR.y;\n    vec3 col = vec3(uv,0.0);\n    float t = iTime*2.;  \n\n    vec2 po = mouse; //point from which angle to the center is being measured\n    vec2 cent = vec2(0.0, 0.5); // pendulam center\n    float ang1 = atan((cent.x-po.x)/(cent.y-po.y));\n    vec3 pos = shm(po, cent, ang1, t);\n    \n    float cent_cir = ball(uv,cent,0.05);\n    float p1 = ball(uv, pos.xy, 0.08);//moving ball\n    p1 += ball(vec2(abs(uv.x), uv.y), po, 0.03);\n    float string = line(cent, pos.xy, uv, 0.006);\n\n\t\n    float sweep_cir = sweep(uv, cent, 0.2, pos.z*57.2958);\n    \n    col = vec3(string+p1+sweep_cir+cent_cir);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}