{"ver":"0.1","info":{"id":"3lSBDW","date":"1598897330","viewed":146,"name":"NilLightIntensity","username":"stevejtrettel","description":"Draws the light intensity of Nil geometry in a plane through the Z-Axis","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float rng=10.+50.*(1.+cos(iTime/3.));//sets the size of the display\n    \n    float L=rng*(uv.x-0.5);\n    float z=rng*(uv.y-0.5);\n    z=360./640.*z;\n    \n      \n            \n    //Stuff Needed to compute the intensity\n    float L2=L*L;\n    float r2=L2+z*z;\n    float z4=z*z*z*z;\n    \n    //the denominator of the intensity function factors into two commponents contributing to the brightness\n    float intensityLine=2.*r2*sin(z/2.);\n    float intensityCurve=(L2*z*cos(z/2.)-2.*r2*sin(z/2.));\n   \n    float intensity=abs(z4/(intensityLine*intensityCurve));\n    \n    float cappedIntensity=min(0.25*intensity,1.);\n\n    \n    // Time varying pixel color\n    vec3 blue=1.5*vec3(0.1,0.2,0.35);\n    vec3 orange=vec3(1.,177./255.,64./255.);\n    vec3 yellow=vec3(0.75,0.75,0.35);\n    vec3 mix=(1.-cappedIntensity)*blue+cappedIntensity*orange;\n    \n    \n    //vec4 newColor=vec4(1,1./4.,1./16.,1) *exp(3.*intensity - 1.);\n    vec3 col = pal(0.5*cappedIntensity-0.55, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.10,0.20) );\n       \n    //vec3 col = (0.75+intensity/10.)*mix;\n        //intensity*vec3(1.,1.,0.5);\n       \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}