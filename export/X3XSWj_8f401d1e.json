{"ver":"0.1","info":{"id":"X3XSWj","date":"1722767389","viewed":40,"name":"Pulsating ring sound visualiser","username":"vlk65536","description":"Sound source as microphone until soundcloud works again","likes":0,"published":1,"flags":4,"usePreview":0,"tags":["soundvisualiser"],"hasliked":0,"parentid":"43fSzs","parentname":"Pulsating 4 leaf clover"},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Scale screen to square\n    uv = (uv-0.5)*vec2(iResolution.x/iResolution.y,1.0);\n\n    // Calculate radius from centre of screen to pixel\n    // Intuitively, we shift r so that r=0 is actually at some\n    // radius, achieving a ring effect\n    float r = uv.x*uv.x + uv.y*uv.y - 0.1;\n    \n    // Angle w.r.t centre of screen\n    float a = atan(uv.y,uv.x);\n    \n    \n    float tx = 512.0*(0.5+(a)/(2.0*3.1415));\n    \n    // Map sound level to axis.\n    // Try fragColor = vec4(vec3(w), 1.0) to visualise at end \n    float w = 0.1 + 1.*log(1.0+texelFetch( iChannel0, ivec2(tx,0), 0 ).x);\n    w *= r + 0.5;\n    \n    float base = 1.00*r/w - 0.01;\n    vec3 shift = vec3(base) + vec3(.01,.02,.03)*cos(t);\n    vec3 col = vec3(0.0,0.0,0.0);\n    \n    // Apply gaussian on radius to achieve blur\n    col += exp(-shift*shift*100.) + vec3(w/(10.*r),0.,0.);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}