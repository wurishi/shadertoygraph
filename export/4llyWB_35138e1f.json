{"ver":"0.1","info":{"id":"4llyWB","date":"1506296860","viewed":78,"name":"Layered House (NikB)","username":"NikB","description":"Uses the step function to create a simple house graphic without if statements","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mix","colors","layers","house","step"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Background color\nvec4 Background = vec4(1.0, 1.0, 1.0, 0.0);\n\n//Color, location, and size of the house\nvec4 Color0 =  vec4(0.0, 0.0, 1.0, 0.0);\nvec2 Position0 = vec2(0.5, 0.5);\nvec2 Size0 = vec2(0.75, 0.25);\nfloat isOn0 = 1.0;\n\n//Color, location, and size of the chimney\nvec4 Color1 = vec4(1.0, 0.0, 0.0, 0.0);\nvec2 Position1 = vec2(0.75, 0.75);\nvec2 Size1 = vec2(0.075, 0.1);\nfloat isOn1 = 1.0;\n\n//Color, location, and size of the window\nvec4 Color2 = vec4(1.0, 1.0, 0.0, 0.0);\nvec2 Position2 = vec2(0.25, 0.45);\nvec2 Size2 = vec2(0.15, 0.1);\nfloat isOn2 = 1.0;\n\n//Storage vector for mixed layers\nvec4 Composite;\n\n//Generates the alpha value for a rectangle layer\nfloat makeRectangle(vec2 pos, vec2 size, vec2 uv)\n{\n    float x = 1.0 - step(size.x, length(pos.x - uv.x));\n    float y = 1.0 - step(size.y, length(pos.y - uv.y));\n    \n    return x * y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Calculate the aspect ratio and adjust\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float aspectRatio = iResolution.y / iResolution.x; \n    uv.x /= aspectRatio;\n    \n    //Adjust locations of rectangles\n    Position0.x /= aspectRatio;\n    Position1.x /= aspectRatio;\n    Position2.x /= aspectRatio;\n    \n    //Mix the rectangles onto the composite vector\n    Composite = mix(Background, Color0, isOn0 * makeRectangle(Position0, Size0, uv));\n    Composite = mix(Composite,  Color1, isOn1 * makeRectangle(Position1, Size1, uv));\n    Composite = mix(Composite,  Color2, isOn2 * makeRectangle(Position2, Size2, uv));\n    \n    //Send out the composite vector\n    fragColor = Composite;\n}\n","name":"Image","description":"","type":"image"}]}