{"ver":"0.1","info":{"id":"WsG3Rc","date":"1570620875","viewed":148,"name":"Simple Spiraling","username":"Dusty","description":"Getting my feet wet, first shader.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#include \"e:\\shaders\\common.glsl\"\n// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ \n#define SIZE        iResolution.xy\n#define CENTER      (0.5 * SIZE)\n#define WIDTH\t\t    iResolution.x\n#define HEIGHT\t    iResolution.y\n#define MAJOR\t\t    max(WIDTH, HEIGHT)\n#define MINOR\t\t    min(WIDTH, HEIGHT)\n#define TIME\t\t    iDate.w\n// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ \nvec3 shader(in vec2 coord);\nvoid mainImage(out vec4 c, in vec2 uv) { c = vec4(shader(uv), 1.0); }\n// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nvec3 shader(vec2 uv)\n{ uv = (uv - CENTER) / (0.5 * MAJOR);\n  \n  float a = atan(uv.x, uv.y);\n  float b = abs(2.0 * fract(24.0 * a / tau + 0.5 * TIME) - 1.0);\n  float d = 0.5 + 0.5 * cos(18.0 * tau * length(uv) + a - 3.0 * TIME);\n  vec3 c = spectrum(a + 0.05 * TIME);\n  return c * max(b, d);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// -------------------------------------------------------------------------------------------------------------------\n// Dusty's GLSL library as of October 9th, 2019\n// -------------------------------------------------------------------------------------------------------------------\n\nconst float root2   = 1.41421356237;\nconst float phi     = 1.61803398875;\nconst float e       = 2.71828182846;\nconst float\tpi      = 3.14159265359;\nconst float tau     = 2.0 * pi;\n\n// -------------------------------------------------------------------------------------------------------------------\n\n#define vec1    float\n\nvec1 sstep(float e0, float e1, vec1 x) { return smoothstep(e0, e1, x); }\nvec2 sstep(float e0, float e1, vec2 x) { return smoothstep(e0, e1, x); }\nvec3 sstep(float e0, float e1, vec3 x) { return smoothstep(e0, e1, x); }\nvec4 sstep(float e0, float e1, vec4 x) { return smoothstep(e0, e1, x); }\n\nvec1 isstep(vec1 x) { return 0.5 - sin(asin(1.0-2.0*x)/3.0); }\nvec2 isstep(vec2 x) { return 0.5 - sin(asin(1.0-2.0*x)/3.0); }\nvec3 isstep(vec3 x) { return 0.5 - sin(asin(1.0-2.0*x)/3.0); }\nvec4 isstep(vec4 x) { return 0.5 - sin(asin(1.0-2.0*x)/3.0); }\n\nvec3 spectrum(float x) { return smoothstep(-1.0, 1.0, cos(x + vec3(0.0, 0.3333 * tau, 0.6667 * tau))); }\n","name":"Common","description":"","type":"common"}]}