{"ver":"0.1","info":{"id":"WsfXzf","date":"1569934263","viewed":383,"name":"Scrolltext!","username":"Chosen","description":"Readable text strings. Did this ages ago and wanted to do more but I'm busy with other stuff. Thought I'd publish it now, as is.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["text","ascii","readable","scrolling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPACER _ _ _ _ DOT _ DOT _ DOT _ _ _ _\n\nconst int message[] = int[](\n\tS c r_ o l l t e x_ t BANG _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n    G r_ e e t z_ _ _ S h a_ d e r_ t o y_ _ c o m m u n i t y_ SPACER\n    -2, T h i s _ s h a_ d e r_ _ d e m o n s t r_ a_ t e s _ a_ _ m e t h o d _ f o r_ _ i n c l u d i n g_ _\n    A S C I I _ c o d e s _ s o _ t h e y_ _ a_ r_ e _ e a_ s y_ _ t o _ t y_ p e COMMA _\n    r_ e a_ d _ AMP _ e d i t BANG _ _ _ _ \n    -1, I _ h o p e _ s o m e o n e _ f i n d s _ i t _ u s e f u l BANG SPACER _ _\n    I _ l o v e _ S h a_ d e r_ t o y_ DOT c o m SPACER a_ n d SPACER _ _ _\n    EOL);\n\n// Font metrics\n// Negative letterspacing of .05\n#define CHAR_WIDTH .45\n#define HALF_LINE .42\n\n// Psuedo-random stars\n#define r(x) fract(sin(x * star) * 36.)\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    vec2 nuv = fragCoord / iResolution.xy;\n    float edge = 1.5 / iResolution.y;\n    float textZoom = 4.;\n    vec2 uv = 1.4 * textZoom * (fragCoord - vec2(.25, .5) * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0);\n    int start = 0;\n    int end = start; for(; message[end] != EOL; ++end); // strlen\n    float time = iTime * 1.4;\n    float intro = step(time, 4.);    // Show title for 4s\n    // Horizonal speed of text along curve\n    float scrolloffset = mod((1. - intro) * 2. * time, float(end + 1) * CHAR_WIDTH);\n    // Cycle speed of curve\n    float scrollspeed = scrolloffset + (1.2 - intro) * time;\n    float theta = .5 * uv.x - scrollspeed;    \n    float ypos = uv.y - sin(theta + 5. * intro * time);\n    int mode = 1;\n    vec3 tcol;\n\n    // Starfield - https://www.shadertoy.com/view/ltXXDN\n    for (float star = 0.; star != 123.; ++star)\n        col += smoothstep(edge, 0., length(nuv - fract(vec2(r(star) * (iTime + 100.), r(.456)))));\n\n    // Scrolltext!\n    uv = vec2(uv.x + scrolloffset + (1. - intro ) * .5 * ypos * cos(theta), ypos + HALF_LINE);    \n    if(fract(uv.y) == uv.y // Is there a better way to check 0. < x < 1. ?\n       && uv.x < (scrolloffset + textZoom * iResolution.x / iResolution.y)\n       && uv.x > scrolloffset - CHAR_WIDTH - iResolution.x / iResolution.y)\n   \t{\n        for(int ind = start; ind != end; ++ind){\n            if(uv.x < 0.)\n                break;\n            \n            switch(mode){\n\t\t\t\t// https://www.shadertoy.com/view/ll2cDc\n                case 1: tcol = vec3(.6 + .6 * cos(6.3 * ((uv.y + .5 * sin(.5 * time))) + vec3(0, 23, 21))); break;\n                case 2: tcol = vec3(mod(float(ind), 2.), mod(float(ind), 2.), 1); break;\n            }\n            \n            if(message[ind] >= 0){\n                // https://www.shadertoy.com/view/llySRh\n                if(fract(uv) == uv)\n                    col += mix(vec3(0), tcol,\n                               textureGrad(iChannel0,uv/16.+fract(vec2(message[ind],15-message[ind]/16)/16.),dFdx(uv/16.),dFdy(uv/16.)).x);\n                uv.x -= CHAR_WIDTH;\n            } else {\n                mode = -message[ind];\n            }\n        }\n    }\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// Readable/typeable ASCII codes\n\n// lowercase letters xyzwrgba require underscore suffix\n// if you want to use lowercase single letter identifiers in your code\n//#define LCASE_1CHAR_IDENTS\n// if you also want to use uppercase single letter identifiers\n//#define UCASE_1CHAR_IDENTS\n// if either of these are enabled those characters require postfix underscores for ASCII writing\n\n// ASCII codes\n//////////////\n#define EOL 0\n// Whitespace\n#define _ 32,\n// ! \" # $ % @ ' ( ) * + , - . /\n#define BANG 33,\n#define QUOT 34,\n#define HASH 35,\n#define DOLLAR 36,\n#define PERCENT 37,\n#define AMP 38,\n#define QUOTE 39,\n#define OPEN 40,\n#define CLOSE 41,\n#define STAR 42,\n#define PLUS 43,\n#define COMMA 44,\n#define DASH 45,\n#define DOT 46,\n#define SLASH 47,\n// numbers\n#define ZERO 48,\n#define ONE 49,\n#define TWO 50,\n#define THREE 51,\n#define FOUR 52,\n#define FIVE 53,\n#define SIX 54,\n#define SEVEN 55,\n#define EIGHT 56,\n#define NINE 57,\n// : ; < = > ? @\n#define COLON 58,\n#define SEMICOLON 59,\n#define LT 60,\n#define EQ 61\n#define GT 62,\n#define QUESTION 63,\n#define AT 64,\n// Uppercase alphabet\n#define A_ 65,\n#define B_ 66,\n#define C_ 67,\n#define D_ 68,\n#define E_ 69,\n#define F_ 70,\n#define G_ 71,\n#define H_ 72,\n#define I_ 73,\n#define J_ 74,\n#define K_ 75,\n#define L_ 76,\n#define M_ 77,\n#define N_ 78,\n#define O_ 79,\n#define P_ 80,\n#define Q_ 81,\n#define R_ 82,\n#define S_ 83,\n#define T_ 84,\n#define U_ 85,\n#define V_ 86,\n#define W_ 87,\n#define X_ 88,\n#define Y_ 89,\n#define Z_ 90,\n// Uppercase alphabet without underscore - if enabled\n#ifndef UCASE_1CHAR_IDENTS\n#define A 65,\n#define B 66,\n#define C 67,\n#define D 68,\n#define E 69,\n#define F 70,\n#define G 71,\n#define H 72,\n#define I 73,\n#define J 74,\n#define K 75,\n#define L 76,\n#define M 77,\n#define N 78,\n#define O 79,\n#define P 80,\n#define Q 81,\n#define R 82,\n#define S 83,\n#define T 84,\n#define U 85,\n#define V 86,\n#define W 87,\n#define X 88,\n#define Y 89,\n#define Z 90,\n#endif\n// [ \\ ] ^ _ `\n#define OPENSQ 91,\n#define BACKSLASH 92,\n#define CLOSESQ 93,\n#define HAT 94,\n#define UNDERSCORE 95,\n#define BACKTICK 96,\n// lowercase alphabet\n#define a_ 97,\n#define b_ 98,\n#define c_ 99,\n#define d_ 100,\n#define e_ 101,\n#define f_ 102,\n#define g_ 103,\n#define h_ 104,\n#define i_ 105,\n#define j_ 106,\n#define k_ 107,\n#define l_ 108,\n#define m_ 109,\n#define n_ 110,\n#define o_ 111,\n#define p_ 112,\n#define q_ 113,\n#define r_ 114,\n#define s_ 115,\n#define t_ 116,\n#define u_ 117,\n#define v_ 118,\n#define w_ 119,\n#define x_ 120,\n#define y_ 121,\n#define z_ 122,\n// Uppercase alphabet without underscore - if enabled\n// xyzwrgba not supported\n#ifndef LCASE_1CHAR_IDENTS\n#define c 99,\n#define d 100,\n#define e 101,\n#define f 102,\n#define h 104,\n#define i 105,\n#define j 106,\n#define k 107,\n#define l 108,\n#define m 109,\n#define n 110,\n#define o 111,\n#define p 112,\n#define q 113,\n#define s 115,\n#define t 116,\n#define u 117,\n#define v 118,\n#endif\n// { | } ~\n#define OPENBRACE 123,\n#define BAR 124,\n#define CLOSEBRACE 125,\n#define TILDE 126,\n/////////////////////\n// End of ASCII codes    \n","name":"Common","description":"","type":"common"}]}