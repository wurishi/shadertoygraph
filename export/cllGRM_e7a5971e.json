{"ver":"0.1","info":{"id":"cllGRM","date":"1671499976","viewed":85,"name":" Arc - distance by rad&angles","username":"MrShoor","description":"Distance to an arc by arc radius and start and end angles","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","distance","arc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat cross2d(vec2 a, vec2 b)\n{\n   return a.x * b.y - a.y * b.x;\n}\n\nfloat arcDist(vec2 p, float radius, vec2 angles) {\n  vec2 cs1 = vec2(cos(angles.x), sin(angles.x));\n  vec2 cs2 = vec2(cos(angles.y), sin(angles.y));\n  vec2 pt1 = cs1 * radius;\n  vec2 pt2 = cs2 * radius;\n  vec2 pt1_dir = pt1 - p;\n  vec2 pt2_dir = pt2 - p;\n  float dEnd = sqrt(min(dot(pt1_dir, pt1_dir), dot(pt2_dir, pt2_dir)));\n  float dRad = length(p);\n  if (cross2d(radius * p - pt1 * dRad, pt2 - pt1) > 0.0)\n    return min(abs(radius - dRad), dEnd);\n  return dEnd;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord - iResolution.xy*0.5;\n    \n    float ang_start = 3.14 * sin(iTime*0.5) + 3.14;\n    float ang_end = ang_start + 3.13 * cos(iTime*0.3+2.0) + 3.15;\n    \n    float d = arcDist(p, 250.0, vec2(ang_start, ang_end));\n    \n    d/=2.0;\n    vec3 dist_color = mix(vec3(0.0,0.0,0.3), d<3.14?vec3(1.0) : vec3(0.2,0.5,0.8), (cos(d)+1.0)*0.5);\n    \n    fragColor = vec4(dist_color,1.0);\n}","name":"Image","description":"","type":"image"}]}