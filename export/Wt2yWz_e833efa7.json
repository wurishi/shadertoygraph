{"ver":"0.1","info":{"id":"Wt2yWz","date":"1594134934","viewed":335,"name":"shufflin blur","username":"thefox231","description":"interesting little shader, gets very messy at high amp values\nuse mouse to control amp value","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["blur","texture","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define amp iMouse.x/12.0\n#define PI 3.1415\n#define blur_samples 20\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 edge = (\n       abs(texture(iChannel0, uv) - texture(iChannel0, (fragCoord + vec2(1.0, 0.0))/iResolution.xy)) +\n       abs(texture(iChannel0, uv) - texture(iChannel0, (fragCoord + vec2(0.0, 1.0))/iResolution.xy)) +\n       abs(texture(iChannel0, uv) - texture(iChannel0, (fragCoord + vec2(-1.0, 0.0))/iResolution.xy)) +\n       abs(texture(iChannel0, uv) - texture(iChannel0, (fragCoord + vec2(0.0, -1.0))/iResolution.xy)) +\n       abs(texture(iChannel0, uv) - texture(iChannel0, (fragCoord + vec2(1.0, -1.0))/iResolution.xy)) +\n       abs(texture(iChannel0, uv) - texture(iChannel0, (fragCoord + vec2(-1.0, 1.0))/iResolution.xy)) +\n       abs(texture(iChannel0, uv) - texture(iChannel0, (fragCoord + vec2(1.0, 1.0))/iResolution.xy)) +\n       abs(texture(iChannel0, uv) - texture(iChannel0, (fragCoord + vec2(-1.0, -1.0))/iResolution.xy))\n    ) / 8.0;\n\n    vec3 finalCol = vec3(0.0);\n    \n    for (int i = 0; i < 3; i++) {\n    \tfloat effectAmp = amp * (edge[i] + .1);\n    \n    \tfloat angle = iTime + float(i) + uv.y - uv.x * tan(effectAmp * uv.y);\n    \n    \tvec3 col = vec3(0.0);\n    \n    \tfor (int i = -2; i < blur_samples; i++) {\n        \tfloat blurAmp = effectAmp * (float(i)/float(blur_samples));\n        \t//blurAmp *= float(iFrame % 2) - .5;\n        \n        \tcol = mix(col, texture(iChannel0, uv + vec2(blurAmp * cos(angle), blurAmp * sin(angle))).rgb, float(i) / float(blur_samples));\n    \t}\n        \n    \tfinalCol[i] = col[i];\n    }\n    \n    fragColor = vec4(finalCol,1.0);\n}","name":"Image","description":"","type":"image"}]}