{"ver":"0.1","info":{"id":"Mt3yRN","date":"1531752979","viewed":494,"name":"My First Shader - Pattern","username":"xiaoiver","description":"Just test my first shader. Learn from https://thebookofshaders.com/09/ ","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 tile(vec2 st, float zoom){\n    st *= zoom;\n    return fract(st);\n}\n\nfloat circle(vec2 st, float radius){\n    vec2 pos = vec2(0.5)-st;\n    radius *= 0.75;\n    return 1.-smoothstep(radius-(radius*0.05),radius+(radius*0.05),dot(pos,pos)*3.14);\n}\n\nfloat circlePattern(vec2 st, float radius) {\n    return  circle(st+vec2(0.,-.5), radius)+\n            circle(st+vec2(0.,.5), radius)+\n            circle(st+vec2(-.5,0.), radius)+\n            circle(st+vec2(.5,0.), radius);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n\n    // Time varying pixel color    \n    vec3 color = vec3(0.0);\n\n    vec2 grid1 = tile(uv, 7.0);\n    grid1 = tile(uv + vec2(cos(iTime),sin(iTime))*0.01,7.);\n    color += mix(vec3(0.075,0.114,0.329),vec3(0.973,0.843,0.675),circlePattern(grid1,0.23)-circlePattern(grid1,0.01));\n\n    vec2 grid2 = tile(uv,3.);\n    grid2 = tile(uv + vec2(cos(iTime),sin(iTime))*0.02 ,3.);\n    color = mix(color, vec3(0.761,0.247,0.102), circlePattern(grid2,0.2)) - circlePattern(grid2,0.05),\n    \n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}