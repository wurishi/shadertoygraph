{"ver":"0.1","info":{"id":"43lyzH","date":"1725854062","viewed":183,"name":"A Ripple Across","username":"incre_ment","description":"A variant on some of the recent shaders I've been experimenting with.  Thanks to FN and everyone else for the golf, suggestions, and comments!  I learn a lot from you all. <3","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["domainrepetition","loop","stars","ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A variant on some of the recent shaders I've been experimenting with.  \n// Thanks to FN and everyone else for the golf, suggestions, and comments!  \n// I learn a lot from you all. <3\n\nfloat TAU = 2.*3.14159;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = ( fragCoord - .5* iResolution.xy ) /iResolution.y;\n   vec3 col = vec3(0.);   \n   float tt = fract(.3*iTime);\n   \n   float scale = 78.;\n   vec2 uvStars = uv * scale;\n   vec2 starCell = round(uvStars);\n   uvStars = fract(uvStars - .5) - .5;\n   \n   float minStar = 1E20;\n   \n   float xCutoff = .7;\n   float yCutOff = xCutoff/(iResolution.x/iResolution.y);\n   \n   float nCheck = 3.;\n   for(float i=-nCheck;i<=nCheck;i++)\n   for(float j=-nCheck;j<=nCheck;j++){\n     float r1 = fract(sin(dot(starCell + vec2(i,j), vec2(3.0,12.0)))*15745.7342) * 2. - 1.;\n     float r2 = fract(sin(dot(starCell + vec2(i,j), vec2(7.0,43.0)))*13131.8234) * 2. - 1.;\n     float spark = 0.;\n     vec2 uvCenter = (starCell + vec2(i,j)) / scale;\n     if (abs(uvCenter.x) < xCutoff && abs(uvCenter.y) < yCutOff){\n       vec2 p = uvCenter + vec2(r1/scale,r2/scale); \n       float delta = TAU*(tt - 4.*length(p)) + atan(p.y,p.x);\n       if (r2 > .8) \n         spark = .3 * sin(TAU*(tt+r1));     \n       float ssize = r2 * .2;\n       float r = 2.;\n       float star = length((uvStars - vec2(i,j) - vec2(r*cos(delta),r*sin(delta))) - 1.*vec2(r1,r2)) - ssize+spark;\n       minStar = min(minStar, star);\n     }\n   }\n   float w = 54./iResolution.y;\n   col += smoothstep(w,-w,minStar);\n   fragColor = vec4(col,1.0);\n   \n} ","name":"Image","description":"","type":"image"}]}