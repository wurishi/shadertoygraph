{"ver":"0.1","info":{"id":"llBXW1","date":"1443225347","viewed":150,"name":"Wobbly Experiment","username":"Kosmokleaner","description":"normally you would write a loop to get many xy position from the input function   but here I tried the inverse","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec2 func(float t)\n{\n    float w = t * 3.14159265 *2.0; \n    \n    vec2 main = vec2(sin(w + iTime*0.8),cos(w*3.0));\n    vec2 sec = vec2(sin(w *4.0),cos(w *4.0 + iTime*9.2)) * 0.2;\n        \n    return main+sec;\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 pos = uv * 3.0 - 1.5;\n\n    const int count = 150;\n    \n    float g = 0.0;\n    \n    float rnd = rand(uv);\n\n    for(int i = 0 ; i < count; ++i)\n    {\n        float f = float(i) / float(count) + rnd + iTime * 0.01;\n        \n        vec2 p = func(f);\n\n        float dist = length((pos-p)*vec2(1.6,0.9)) * 20.0;\n\n        float w = max(0.0, exp(-dist*dist)-0.01);\n        \n        g+=w;\n    }\n    \n    \n    \n  \tfragColor = vec4(0,g,0,0);\n        \n//\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}","name":"","description":"","type":"image"}]}