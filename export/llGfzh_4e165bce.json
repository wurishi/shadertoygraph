{"ver":"0.1","info":{"id":"llGfzh","date":"1541875080","viewed":83,"name":"sphere & cube","username":"johnnyblame","description":"awdawdawd","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 rotx(float a) {\n    return mat3(1,0,0,\n                0, cos(a), -sin(a),\n                0, sin(a), cos(a));\n}\n\nmat3 roty(float a) {\n    return mat3(cos(a),0,sin(a),\n                0,1,0,\n                -sin(a),0,cos(a));\n}\n\nmat3 rotz(float a) {\n\treturn mat3(cos(a),-sin(a),0,\n                sin(a),cos(a),0,\n                0,0,1);\n}\n\nvec3 circle(vec2 c, vec2 p, float r) {\n    if (length(p - c) < r)\n        return vec3(1);\n    else\n        return vec3(0);\n}\n\nbool checkSphere(vec3 c, vec3 p, float r) {\n    if (length (p - c) < r) return true;\n    else return false;\n}\n\nbool checkCube(vec3 c, vec3 p, float r, vec3 rot) {\n    vec3 d = p - c;\n    d *= rotz(rot.z);\n    d *= roty(rot.y);\n    d *= rotx(rot.x);\n    if (abs(d.x) < r && abs(d.y) < r && abs(d.z) < r)\n        return true;\n    else\n        return false;\n}\n\nvec3 traceSphere(vec3 n, vec3 c, float r) {\n    const int num_of_iters = 100;\n    const float delta = 0.0066;\n    vec3 v = n;\n    for (int itr = 1; itr < num_of_iters; itr++) {\n        v.z -= delta;\n        if (checkSphere(c, v, r))\n            return vec3(1. - (1./float(num_of_iters) * float(itr)));\n    }\n    return vec3(-1);\n}\n\nvec3 traceCube(vec3 n, vec3 c, float r, vec3 rot) {\n    const int num_of_iters = 120;\n    const float delta = 0.0065;\n    vec3 v = n;\n    for (int itr = 1; itr < num_of_iters; itr++) {\n        v.z -= delta;\n        if (checkCube(c, v, r, rot))\n            return vec3(1. - (1./float(num_of_iters) * float(itr)));\n    }\n    return vec3(-1);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord.xy - iResolution.xy)/iResolution.y;\n  \tvec3 n = vec3(uv.xy, 1.);\n    vec3 col;\n    vec3 c = traceSphere(vec3(0,0,1.5), n, .4);\n    if (c.x != -1.)\n        col = c;\n    float crd = sin(iTime*2.);\n    c = traceCube(vec3(.75,.5,1.45), n, 0.27, vec3(crd));\n    if (c.x != -1.)\n        col = c;\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}