{"ver":"0.1","info":{"id":"XsVfDm","date":"1529715558","viewed":129,"name":"Helix Test","username":"lzjseed","description":"Helix Test","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI2 6.2831852\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float si = sin(iTime * 10.);\n    float co = cos(iTime * 10.);\n    \n    mat2 rot = mat2(co,si,-si,co);\n    \n    vec2 pos = (2.*fragCoord - iResolution.xy ) / iResolution.y;\n\t\n    pos = pos * rot;\n    \n    vec4 col = vec4(0.0);  \n    \n    float a = mod(atan(pos.y,pos.x),PI2);\n    vec2  p = vec2(cos(a),sin(a));\n    \n    float d = dot(p,pos);\n    float dr = 0.04;\n    \n    float l = (d - dr * a) / (dr * PI2);\n    float s = floor(l+0.5);\n    \n    float t = smoothstep(0.0,6./ iResolution.y,abs(s-l)*(dr * PI2));\n    col = mix(vec4(1.),col,t) * step(s,2.); //equal to if (s < 3.)\n    \n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}