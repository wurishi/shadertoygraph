{"ver":"0.1","info":{"id":"3tjfW3","date":"1600013295","viewed":66,"name":"Grid - animated","username":"timuber","description":"Grid","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat IsGridLine(vec2 fragCoord)\n{\n\tvec2 pixelsPerGridSquare = vec2(16.0, 16.0);\n\tvec2 screenPixelCoordinate = fragCoord.xy;\n\tvec2 gridSquareCoords = fract(screenPixelCoordinate / pixelsPerGridSquare);\n\tvec2 gridSquarePixelCoords = gridSquareCoords * pixelsPerGridSquare;\n\tvec2 isGridLine = step(gridSquarePixelCoords, vec2(1.0));\n\treturn max(isGridLine.x, isGridLine.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 vResult = vec3(0.0);\n    \n    float height = 200.0;\n    float speed = 200.0;\n    float startY = mod((iTime * speed), iResolution.y);\n    float endY = mod((startY + height), iResolution.y);\n    \n    float t = smoothstep(endY, endY + 100.0, fragCoord.y);\n    float u = 1.0 - smoothstep(startY, startY + 100.0, fragCoord.y);\n\n\tvResult.g = IsGridLine(fragCoord) * (t + u);\n    \n\tfragColor = vec4(vResult, 1.0);\n}","name":"Image","description":"","type":"image"}]}