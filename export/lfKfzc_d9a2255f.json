{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define PI 3.14159\n\nvec3 colMap(float v) {\n    return vec3(\n        sin(sin(v - 0.8)*PI/4.0),\n        sin(sin(v)*PI/4.0),\n        sin(sin((v + 0.8)))\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float time = iTime * 3.0;\n    vec2 resolution = iResolution.xy;\n    vec2 uv = fragCoord / resolution - 0.5;\n\n    uv.y *= resolution.y / resolution.x;\n    uv *= (-cos(time * 0.22) + 1.3) * 0.4;\n    uv.yx = uv;\n    uv += vec2(0.1, 0.95615);\n\n    vec2 c = uv;\n    vec2 z = c;\n    float len = 0.0;\n    float sum = length(z);\n\n    vec2 gyroscope = vec2(\n        sin(time * 0.58945156489),\n        cos(time * 0.334545642348)\n    );\n\n    for (int i = 0; i < 33 + int(30.0 * (sin(iTime) * 0.5)); i++) {\n        c += (gyroscope.yx - 10.5) * 0.01308 * float(i);\n        vec2 newZ = vec2(-z.y * z.y + z.x * z.x, 2.0 * z.x * z.y) + c;\n        sum += length(newZ - z);\n        z = newZ;\n        len = length(z);\n        if (len > 2.33 + (gyroscope.x + 1.0) + gyroscope.y) break;\n    }\n\n    vec2 dir = z - c;\n    uv.x = mod((atan(dir.y, dir.x) / PI * 0.5 + 0.5) * 6.0 + (time + sin(time) * 46.9), 12.0);\n    uv.y = mod(length(dir * 0.5), 1.0);\n\n    vec3 col = colMap(sum * 0.2 - len * 0.1 + time * 0.1).gbr;\n\n    if (iFrame % 10000 < 500) {\n        fragColor = vec4(col.grb, 1.0);\n    } else {\n        fragColor = vec4(col.brg, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lfKfzc","date":"1734312496","viewed":21,"name":"bubbles or ","username":"erpprog","description":"bubbles","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}