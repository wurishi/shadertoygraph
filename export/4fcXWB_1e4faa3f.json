{"ver":"0.1","info":{"id":"4fcXWB","date":"1714365354","viewed":77,"name":"Screen Shake.","username":"hailrakes","description":"Shake effect for image.\nBased on https://www.shadertoy.com/view/tdSyWz","likes":4,"published":1,"flags":0,"usePreview":1,"tags":["shake"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FactorA vec2(20.0, 20.0)\n#define FactorB vec2(1.0, 1.0)\n#define FactorScale vec2(0.01, 0.01)\n\nfloat hash( float n ) { return fract(sin(n) * 43758.5453123); }\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y * 57.0;\n    return mix(mix(hash(n +  0.0), hash(n +  1.0), f.x),\n               mix(hash(n +  57.0), hash(n + 58.0), f.x), f.y);\n}\n\nfloat octaveNoise(vec2 x, int octaves){\n    float noiseValue = 0.0;\n    float amplitude = 1.0;\n    float frequency = 1.0;\n    for(int i = 0; i < octaves; i++){\n        noiseValue += noise(x * frequency) * amplitude;\n        x *= 2.0;\n        amplitude *= 0.5;\n    }\n    return noiseValue;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uniA = FactorA;\n    vec2 uniB = FactorB;\n    vec2 uniScale = FactorScale;\n\n    vec2 dt = vec2(0.0, 0.0);\n    float noiseValue = octaveNoise(uv * 10.0, 4);\n    dt.x = sin(iTime * uniA.x + uniB.x + noiseValue) * uniScale.x;\n    dt.y = cos(iTime * uniA.y + uniB.y + noiseValue) * uniScale.y;\n\n    float blurFactor = 0.00;\n    vec4 finalColor = texture(iChannel0, uv + dt);\n    for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n            vec2 offset = vec2(i, j) * blurFactor;\n            finalColor += texture(iChannel0, uv + dt + offset);\n        }\n    }\n    \n    finalColor /= 20.0;\n    \n    fragColor = finalColor;\n}\n","name":"Image","description":"","type":"image"}]}