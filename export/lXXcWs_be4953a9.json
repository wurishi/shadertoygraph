{"ver":"0.1","info":{"id":"lXXcWs","date":"1726772032","viewed":35,"name":"Green-Magenta Blur","username":"bogdanmikh","description":"Green-Magenta Blur","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distortion = 0.01;      // the bias of the barrel distortion\nconst float iterations = 20.0;  // how many samples to use for edge blur\nfloat strength = 0.15; // how much edge blur is applied (to obscure the r, g, b separation)\nfloat separation = 0.65;      // how much to separate the r, g and b\n\nbool inRange(float value, float left, float right) {\n    return value >= left && value <= right;\n}\n\nvec4 Aberrate(sampler2D source, vec2 texuv, vec2 squareUv, float amount) {\n    return texture(source, 0.5 + texuv / sqrt(1.0 + amount * dot(texuv, squareUv)));\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    vec2 v_TexCoordOut = fragCoord.xy / iResolution.xy;        \n    vec2 squareUv = v_TexCoordOut - 0.5;\n    vec2 uv = v_TexCoordOut - 0.5;\n  \n    squareUv.x *= 0.3; // change radius\n    squareUv.y *= 0.3; // change radius\n    \n    float powerBlur = 0.2;\n    float saturation = 0.3;\n        \n    vec4 result = vec4(0, 0, 0, 1);\n    \n    for (float i = -iterations; i < iterations; i++) { \n        float aberrateR = Aberrate(iChannel0, uv, squareUv, i * strength + (distortion + separation)).r;\n        float aberrateG = Aberrate(iChannel0, uv, squareUv, i * powerBlur * 0.1).g;\n        float aberrateB = Aberrate(iChannel0, uv, squareUv, i * strength + (distortion - separation)).b;\n        result.r += aberrateR;\n        // green\n        if (inRange(aberrateR, 0., 0.35) && inRange(aberrateG, 0.5, 0.7) && inRange(aberrateB, 0., 0.45) ) {\n           result.g += saturation * 2.;\n        }\n        // Magenta\n        if (inRange(aberrateR, 0.3, 0.4) && inRange(aberrateG, 0.1, 0.25) && inRange(aberrateB, 0.3, 0.5)) {\n           result.r += saturation * 3.;\n           result.b += saturation * 3.;\n        }\n        result.g += aberrateG; \n        result.b += aberrateB;\n    }\n    result.rgb /= iterations * 2.0;\n            \n    fragColor = vec4(result.r, result.g, result.b, result.a);\n\n}","name":"Image","description":"","type":"image"}]}