{"ver":"0.1","info":{"id":"sdS3W3","date":"1618014902","viewed":287,"name":"Volumetric Spotlight","username":"relgukxilef","description":"A volumetric spotlight in fog. Single bounce.\nI wrote this years ago and don't remember how it worked. ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["volumetriclight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nconst float density = 0.5;\nconst float d = 1.0 - density;\nconst float log_d = log(d);\nconst float log2_d = log_d * log_d;\n\nfloat integral(float x, float a, float y) {\n    // approximation of integral of\n    // d^x * (1-d) * d^sqrt((x-a)^2+y^2) / ((x-a)^2+y^2) dx\n    float y2 = y * y;\n    return (\n        atan(\n            (y2 * a * log2_d + y * log_d * (-a + y) + 2.0 * a) /\n            (y * sqrt(y2 * log2_d - 2.0 * y * log_d + 4.0))\n        ) -\n        atan(\n            (y2 * (a - x) * log2_d + y * log_d * (-a + x + y) + 2.0 * (a - x)) /\n            (y * sqrt(y2 * log2_d - 2.0 * y * log_d + 4.0))\n        )\n    ) * density * 2.0 * pow(d, (a + y)) / (\n        y * sqrt(y2 * log2_d - 2.0 * y * log_d + 4.0)\n    );\n}\n\nfloat integral2(float x, float a, float y) {\n    // approximation of integral of\n    // d^x * d^sqrt((x-a)^2+y^2) dx\n    return d * 0.5 * pow(density, (a + y)) * (2.0 * x - 2.0 * a * x * log(density) + x * x * log(density) - ((a - x) * (a - x) * (a - x) * log(density) * (1.0 + y * log(density))) / (3.0 * y));\n}\n\nfloat cone(float x, float y, float cosa) {\n    if (abs(x) > cosa * y) {\n        return 0.0;\n    } else {\n        return sqrt((cosa * y) * (cosa * y) - x * x);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy * vec2(0.5, 1.0)) / iResolution.x;\n\n    float depth = cone(uv.x, -uv.y, 0.5);\n    \n    float light = integral(2.0 + depth, 2.0, length(uv) * 5.0) - integral(2.0 - depth, 2.0, length(uv) * 5.0);\n\n    // Output to screen\n    fragColor = vec4(vec3(light * 100.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}