{"ver":"0.1","info":{"id":"4dsfRn","date":"1494610771","viewed":296,"name":"hexa game of life","username":"FabriceNeyret2","description":"Hexagonal-nodes Conway games of life.  Mouse paint.   Try fullscreen.\nA triangular cell has 6 neighbors. center on + 2 neighbors on: survive. 3 neighbors on: birth (as in regular game).\n\nNot rich enough for interesting things to occurs. see variants.","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["automata","life","conway","short","hexalife","hexlife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 4.\n\nvoid mainImage( out vec4 O, vec2 uv )\n{\n    vec2 U = uv /= SCALE;\n // U *= mat2(1,.5,0,.866);     // 1, 1/2, 0, sqrt(3)/2\n    U *= mat2(1,-.577,0,1.155); // 1, -1/sqrt(3), 0, 2/sqrt(3)\n//  O = texture(iChannel0, U/SCALE/iResolution.xy); \n    \n    U = floor(U);\n    O  = texture(iChannel0, (U+.5)/iResolution.xy) * step(length(uv-U*mat2(1,.5,0,.866)),1.);\n    U.x++;\n    O += texture(iChannel0, (U+.5)/iResolution.xy) * step(length(uv-U*mat2(1,.5,0,.866)),1.);\n    U.y++;\n    O += texture(iChannel0, (U+.5)/iResolution.xy) * step(length(uv-U*mat2(1,.5,0,.866)),1.);\n    U.x--;\n    O += texture(iChannel0, (U+.5)/iResolution.xy) * step(length(uv-U*mat2(1,.5,0,.866)),1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// inspired from https://www.shadertoy.com/view/4dGSWR\n\n#define SCALE 4.\n\n#define T(u,v) + texture(iChannel0, U/R + vec2(u-1,v-1)/R ) \n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    //U = floor(U/64.); O= vec4(mod(U.x+U.y,2.)); return; \n    vec2 R = iResolution.xy,\n         V = U*SCALE* mat2(1,.5,0,.866);\n    O =          T(1, )  T(-, )                              // count life in 6 neighborhood\n          T(,1)          T(-,1)\n          T(,-)  T(1,-)         ;// - 3.;    \n // O =   T(, )  T(1, )  T(-, )                              // count life in 8 neighborhood\n //       T(,1)          T(-,1)\n //       T(,-)  T(1,-)  T(-,-) - 3.;    \n\n    O = vec4(   iFrame < 9&&length(V - .5*R) < 39.           // initial state\n              ||O.x T(1,1).x== 3.                            // 2 neighbors: survive\n              ||O.x == 3.                                    // 3 neighbors: birth\n//            ||(O T(1,1))*O == O-O                          // 2 neighbors:survive 3:birth\n//            ||(O T(1,1))*O == O-O                          // 2 neighbors:survive 3:birth\n              ||(O= iMouse).z > .5&&length(V - O.xy) < 25.   // mouse paint\n             );\n}","name":"Buffer A","description":"","type":"buffer"}]}