{"ver":"0.1","info":{"id":"3lcyDj","date":"1609881822","viewed":46,"name":"Genuary2021 5 - Rotating Truchet","username":"qw","description":"Entry for Day 5 of #Genuary2021 - see https://genuary2021.github.io/\nPrompt of the day: do some code golf ... I think I achieved the exact opposite actually :p\nI was just interested in exploring Truchet patterns instead. Still kinda WIP, I want more chaos","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","truchet","loop","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define cellCount 10.\n#define cellSize 1./cellCount\n#define halfPi 1.5707963\n\n#define rotateCellCycle\n#define rotateCellDuration 1./rotateCellCycle\n\n\nfloat Rand2To1(vec2 id){\n    \n    return fract(sin(id.x*3.23+id.y*54.342)*854.53);\n}\n\n\nvec3 Rand2To3(vec2 id){\n    float r = Rand2To1(id);\n    return vec3( r, fract(r*10.), fract(r*100.));\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat line(in vec2 p, in vec2 a, in vec2 b, in float thick){\n\n    return 1.-smoothstep(thick*.9, thick, sdSegment(p,a,b));\n}\n\nfloat TruchetPattern(vec2 cellCenter){\n\n    float d = cellSize*.5;\n    float sd = cellSize*0.1;//Small distance\n    float td = cellSize*0.01; // tiny distance\n    float thickness = 0.025/cellCount;\n\n    return clamp(\n        line( cellCenter, vec2(sd,sd), vec2(d,sd), thickness)\n        + line( cellCenter, vec2(-sd,-sd), vec2(d,-sd), thickness)\n        + line( cellCenter, vec2(sd,sd), vec2(sd,d), thickness)\n        + line( cellCenter, vec2(-sd,-sd), vec2(-sd,d+sd*cellSize), thickness)\n\n\n        //L\n        + line( cellCenter, vec2(-d,sd), vec2(-d*.5,sd), thickness)\n        + line( cellCenter, vec2(-d,-sd), vec2(-d*.75,-sd), thickness)\n\n        //B\n        + line( cellCenter, vec2(sd,-d), vec2(sd,-d*.5), thickness)\n        + line( cellCenter, vec2(-sd,-d), vec2(-sd,-d*0.75), thickness)\n\n        //Lower Left Shape\n        + line( cellCenter, vec2(-d*.5,sd), vec2(-d*.5,-d*.45), thickness)\n        + line( cellCenter, vec2(sd,-d*.5), vec2(-d*.45,-d*.5), thickness)\n\n        + line( cellCenter, vec2(-d*.75,-sd), vec2(-sd,-d*0.75), thickness)\n\n    ,0.,1.);\n}\n\nfloat DrawPattern(vec2 uv, vec2 id, float pattern){\n    \n    if(length(id) == 0. ){return 0.;}\n    \n    vec2 cellUV = uv - ( (id /cellCount) - (cellSize*0.5));\n    float angle = halfPi * pattern;\n    mat2x2 rot = mat2x2(cos(angle), -sin(angle), sin(angle), cos(angle));\n\n    //Rotate by random * 90 degree rotations\n    cellUV *= rot;\n    \n    //Truchet pattern \n    return TruchetPattern( cellUV);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord -.5*iResolution.xy ) /iResolution.y;\n    uv.x += 0.5;\n    \n    vec2 id = floor(uv*(cellCount));\n    id++;\n    id *= step(0.,id.x-1.) * step(id.x,cellCount);\n    \n    vec3 col = vec3(0);\n    fragColor = vec4(col,1.0);\n    if( id.x == 0. && id.y == 0.){return;} // early exit\n    \n    \n    float randomVal = Rand2To1(id); \n    float freq = 40.;\n    float increasingValue = mod( (randomVal*freq)+ (iTime*0.8) ,freq);\n    float periodicEffectInterval = (mod( increasingValue, freq) -(freq-1.)) ; //Describes a 0 -> 1 fade every 8 seconds, randomly distributed\n    float periodicEffectWhole = floor(increasingValue/freq);\n    float periodicEffectFract = fract(periodicEffectInterval);\n    \n    vec2 patternSeedCurrent = vec2(periodicEffectWhole);\n    vec2 patternSeedNext = vec2(periodicEffectWhole+1.);\n    \n    float randPatternCurrent = floor( Rand2To1(patternSeedCurrent) / 0.25) / 4.;\n    float randPatternNext =  floor( Rand2To1(patternSeedNext) / 0.25) / 4.;\n    float pattern = mix( randPatternCurrent, randPatternNext, clamp(periodicEffectInterval,0.,1.) ) ;\n    col += mix(vec3(.1),vec3(0.5,0.,0.), DrawPattern(uv, id, pattern*4.));\n    \n\n    //Don't colour invalid cells\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}