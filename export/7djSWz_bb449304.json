{"ver":"0.1","info":{"id":"7djSWz","date":"1620057473","viewed":102,"name":"Triangle_rgb","username":"fantasour","description":"triangle","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 barycenter(in vec3 v0, in vec3 v1, in vec3 v2, in vec3 p, in vec3 normal)\n{\n  float area = dot(cross(v1 - v0, v2 - v0), normal);\n\n  if(abs(area) < 0.0001)\n  {\n    return vec3(0.0, 0.0, 0.0);\n  }\n\n  vec3 pv0 = v0 - p;\n  vec3 pv1 = v1 - p;\n  vec3 pv2 = v2 - p;\n\n  vec3 asub = vec3\n  (  dot(cross(pv1, pv2), normal),\n    dot(cross(pv2, pv0), normal),\n    dot(cross(pv0, pv1), normal)\n  );\n  return abs(asub) / vec3(abs(area)).xxx;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 aspect = vec2(iResolution.x / iResolution.y, 1.333);\n  float t = iTime;\n\n    vec3 v0 = vec3(0.0, 0.333, 0.0);\n  vec3 v1 = vec3(0.333, -0.333, 0.0);\n  vec3 v2 = vec3(-0.333, -0.333, 0.0);\n  const vec3 normal = vec3(0.0, 0.0, 1.0);\n\n  vec2 uv = (2.0 * fragCoord.xy / iResolution.xy - 1.0) * aspect;\n\n  vec3 bc = barycenter(v0, v1, v2, vec3(uv, 0.0), normal);\n\n  vec3 color = bc;\n\n  if(bc.x + bc.y + bc.z > 1.00001) // outside of triangle\n  {\n    color = vec3(0.08, 0.1, 0.1);\n  }\n  else                  // inside of triangle\n  {\n    color.r+=color.g*(sin(t)+1.0)/2.0;\n      color.g+=color.b*(sin(t+0.9424778)+1.0)/2.0;\n      color.b+=color.r*(sin(t+1.8849556)+1.0)/2.0;\n  }\n\n  fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}