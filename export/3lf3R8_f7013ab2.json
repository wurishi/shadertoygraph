{"ver":"0.1","info":{"id":"3lf3R8","date":"1555561384","viewed":78,"name":"Heart Beng","username":"batman","description":"For my Beng.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["basic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FLT_MAX 3.402823466e+38\n\nfloat distPoint(vec3 ro, vec3 rd, vec3 p) {\n   return length(cross(p-ro,rd))/length(rd);\n}\n\nfloat distPlanY(vec3 ro, vec3 rd) {\n    if(rd.y > 0.) return FLT_MAX;\n    return -ro.y/ rd.y +.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv =  fragCoord.yx/iResolution.yx;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 ro = vec3(0.,0.,-2);\n    vec3 rd = vec3(uv,0.) - ro; \n    //float p = smoothstep(0.8,0.7,distPlanY(ro, rd));\n    rd.x *= 0.5*iResolution.x / iResolution.y;\n    rd.y *= 1.9;\n    rd.x += -pow(abs(rd.y/1.5), 0.8);\n\n    float sph = distPoint(ro, rd, vec3(0.,0,10.));\n    float sphere = smoothstep(1.6,1.58, sph);\n    vec3 c = sphere* vec3(1.0,0.2,0.2) + (1. - sphere)* vec3(15./255.,.1,51./255.);\n    \n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}