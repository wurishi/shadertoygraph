{"ver":"0.1","info":{"id":"3tcGzs","date":"1577180362","viewed":179,"name":"Radar Power","username":"liutp","description":"能力雷达图","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sdf","radar","poly"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int N = 6;\nconst  float[N] data = float[N](1.0, 0.2, 0.8, 0.4, 1.0, 1.0);\n\nfloat sdPoly( in vec2[N] v, in vec2 p )\n{\n    const int num = v.length();\n    float d = dot(p-v[0],p-v[0]);\n    float s = 1.0;\n    for( int i=0, j=num-1; i<num; j=i, i++ )\n    {\n        // distance\n        vec2 e = v[j] - v[i];\n        vec2 w =    p - v[i];\n        vec2 b = w - e*clamp( dot(w,e)/dot(e,e), 0.0, 1.0 );\n        d = min( d, dot(b,b) );\n\n        // winding number from http://geomalgorithms.com/a03-_inclusion.html\n        bvec3 cond = bvec3( p.y>=v[i].y, p.y<v[j].y, e.x*w.y>e.y*w.x );\n        if( all(cond) || all(not(cond)) ) s*=-1.0;  \n    }\n    \n    return s*sqrt(d);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = (2.0*fragCoord-iResolution.xy)/iResolution.y*1.2;\n    \n    float a = 3.1415926*2.0;\n    a = a /(float(N));\n    \n    vec2[N] poly;\n    for (int i=0;i<N;i++){\n        float fi = float(i);\n    \tpoly[i] = vec2(sin(fi*a), cos(fi*a))*(data[i]);\n    }\n    float d = sdPoly(poly, uv );\n   \t//vec3 gaugec = vec3(.5,.8,.8)*smoothstep(0.11,-0.01,d);\n    vec3 gaugec = vec3(0.0);\n    if(d<0.0){\n    \t//gaugec = gaugec*smoothstep(0.0,0.9,-d);\n        //gaugec = vec3(.9,.2,.1)*smoothstep(-0.1,0.1,d);\n        //gaugec += vec3(.2,.4,.4)*length(uv);\n        //gaugec = texture(iChannel0, uv).rgb;\n        gaugec = texture(iChannel0, uv).rgb*step(0.02,-d)*length(uv);\n        gaugec += vec3(.8,.9,.9)*step(-0.02,d);\n    }else{\n        gaugec = gaugec*0.0;\n    }\n    \n    gaugec +=  vec3(.9,.9,.1)*step(-0.02,-length(uv));\n   \n    \n    fragColor = vec4(gaugec,1.0);\n}","name":"Image","description":"","type":"image"}]}