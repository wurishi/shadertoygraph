{"ver":"0.1","info":{"id":"MtyyDy","date":"1537492054","viewed":118,"name":"Sphere Project- Disco Floor","username":"rlarp","description":"Sphere project (only spheres) inspired by a disco floor. ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sphere","spheres","education","disco","floor","school","homework","discofloor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){\n    return mat2(cos(a), -sin(a),\n                sin(a), cos(a));\n}\n\nfloat sphere(vec3 p, float radius){\n    return length(p)-radius;\n}\n\nfloat map(vec3 p)\n{\n    float radius = 0.25; // or change to 0.1 for carpet like look\n    vec3 q = fract(p*=2.5) * 1.5 - 0.5;\n    \n    return sphere(q, radius);\n}\n\nfloat trace(vec3 origin, vec3 r) \n{\n  float t = 0.2;\n    for (int i = 0; i < 100; ++i) {\n        vec3 p = origin + r * t;\n        float d = map(p);\n        t += d * 0.1;\n        }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = uv *3.-2.; \n    uv.x *= iResolution.y/iResolution.x;\n    \n    vec3 color = vec3((sin(iTime)), 4.0, 1.1);\n    \n   \tfloat FOV = 1.5;\n   \tvec3 ray = normalize(vec3(uv, FOV));\n    \n    // Rotate Y towards Z\n    ray.xy *= rot(iTime*0.2);\n    ///ray.zx *= rot(iTime*0.1);\n    \n    vec3 origin = vec3(0.5, 0.75, 1.0);\n    float t = trace(origin, ray);\n    \n    float expFog = 10. / (t*t*0.1);\n    \n    vec3 fc = vec3(expFog);\n\n    \n    fragColor = vec4(cos(fc+color),5.0);\n    \n\n}\n\n","name":"Image","description":"","type":"image"}]}