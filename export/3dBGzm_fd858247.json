{"ver":"0.1","info":{"id":"3dBGzm","date":"1548386145","viewed":317,"name":"kotak muter muter","username":"sanddroo","description":"muter muter sampe pusing","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["muter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Band (float t, float start, float end, float blur) {\n    float step1 = smoothstep(start - blur, start + blur, t);\n    float step2 = smoothstep( end + blur, end - blur,t );\n    return step1 * step2;\n}\n\nfloat Rectangle (vec2 uv, float blur, float left, float right, float bottom, float top) {\n    float r;\n    r = Band(uv.x, left, right, blur);\n    r *= Band(uv.y, bottom, top, blur);\n    return r;\n}\nfloat Square (vec2 uv, float blur, float point) {\n    return Rectangle(uv, blur, -point, point, -point,point);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = vec3(0.0);\n    vec2 pos;\n    // To move the cross we move the space\n    vec2 translate = vec2(cos(iTime),sin(iTime));\n    uv += translate*0.35;\n\n    // Show the coordinates of the space on the background\n    //col = vec3(uv.x,uv.y,1.0);\n\n    // Add the shape on the foreground\n    pos=vec2(0.9,.5);\n    col += Square(uv-pos, .00001,.1);;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}