{"ver":"0.1","info":{"id":"l33SRS","date":"1721082908","viewed":32,"name":"Abstract geometry green","username":"omelia","description":"Diamond shaped shader.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["abstract","diamond"],"hasliked":0,"parentid":"43cSDn","parentname":"Cheops board"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FREQUENCY 14.0\n#define CONTRAST 0.25\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2  quadmirror = abs((fragCoord-.5*iResolution.xy)/min(iResolution.x, iResolution.y))*(2.0+sin(iTime/3.14));\n    float angle = 0.2*sin(iTime)/0.5*length(quadmirror);\n          quadmirror = atan(quadmirror*1.5) * pow(quadmirror, vec2(sin(iTime)*.2+cos(iTime)/4.0));\n          quadmirror *= mat2(vec2(sin(angle), cos(angle)), vec2(cos(angle), -sin(angle)));\n         \n    float inneroutter  = quadmirror.x + quadmirror.y,\n          horzvert     = quadmirror.x - quadmirror.y,\n          squarecenter = max(quadmirror.x, quadmirror.y);\n    \n    float stripes = pow(fract(\n        (     (inneroutter > 1.0)  ? min(quadmirror.x, quadmirror.y)\n                  // Outter most square\n            : (squarecenter > 0.5) ? horzvert\n                  // Middle, 45 degree square\n            : -sign(horzvert)*inneroutter\n                  // Inner most square\n        ) * FREQUENCY *(0.9/5.0 + 0.2*cos(iTime)*float(atan(quadmirror.x, quadmirror.y)))\n    ), CONTRAST);\n\n    \n    \n    float borders = min(min( abs(squarecenter - 1.0 ),\n                             abs(inneroutter  - 1.0 )),\n                        min( abs(squarecenter - 0.5 ),\n                             max( abs(horzvert), squarecenter - 0.5 )));\n    \n    stripes -= pow(borders, CONTRAST);\n    fragColor = vec4(pow(stripes, 7.0), pow(stripes, 1.3), pow(stripes, 7.0), 1.0);//min(vec3(stripes), cross( vec3(stripes, quadmirror), vec3(sin(iTime), cos(iTime), sin(iTime)) )/length(quadmirror)), 1.0);\n}","name":"Image","description":"","type":"image"}]}