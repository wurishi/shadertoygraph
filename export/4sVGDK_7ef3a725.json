{"ver":"0.1","info":{"id":"4sVGDK","date":"1456473405","viewed":458,"name":"Basic : Sin(z) Newton Fractal","username":"Gijs","description":"The Newton Fractal of sin(z). Use your mouse.","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","complex","newton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int Iterations = 64;\n\nvec2 complexMultiply(vec2 a,vec2 b){\n    return vec2(a.x*b.x-a.y*b.y,a.x*b.y+b.x*a.y);\n}\n\nvec2 complexExponential(vec2 z){\n    return exp(z.x)*vec2(cos(z.y),sin(z.y));\n}\n\nvec2 complexDivide(vec2 a, vec2 b){\n    return mat2(a,a.y,-a.x)*b/dot(b,b);\n}\n\nvec2 function(vec2 z){\n    vec2 iz = complexMultiply(z,vec2(0,1));\n\treturn (complexExponential(iz)-complexExponential(-iz))*.5;\n}\n\nvec2 derivative(vec2 z){\n    vec2 iz = complexMultiply(z,vec2(0,1));\n\treturn (complexExponential(iz)+complexExponential(-iz))*.5;\n}\n\nvec3 rainbow(float t){\n    return sin(t+vec3(0,.33,.66)*6.28)*.5+.5;\n}\n\nvec2 Scale(vec2 p){\n    return (2.*p-iResolution.xy)/iResolution.y*2.;\n}\n\n\nvec2 NewtonsMethod(vec2 z, vec2 a){\n    for(int i=0;i<Iterations;i++){\n        z = z-complexMultiply(a,complexDivide(function(z),derivative(z)));\n    }\n\treturn z;\n}\n\nvec3 NewtonFractal(vec2 z, vec2 a){\n    z = NewtonsMethod(z,a);\n    //Roots of sin(z) are always z=Pi*k+0i\n    return rainbow(z.x/3.14+z.y);\n}\n        \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 mouse = (iMouse.z>0.)?Scale(iMouse.xy):vec2(0,-2.);\n\tfragColor = vec4(NewtonFractal(Scale(fragCoord.xy),mouse),1.0);\n}","name":"Image","description":"","type":"image"}]}