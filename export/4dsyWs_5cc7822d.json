{"ver":"0.1","info":{"id":"4dsyWs","date":"1490364196","viewed":129,"name":"super egg world","username":"halcy","description":"twitter simulator 2017","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["egg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// codapalette\nvec3 palette(float i) {\n\tif(i<4.0) {\n\t\tif(i<2.0) {\n\t\t\tif(i<1.0) return vec3(0.0,0.0,0.0);\n\t\t\telse return vec3(1.0,3.0,31.0);\n\t\t}\n\t\telse {\n\t\t\tif(i<3.0) return vec3(1.0,3.0,53.0);\n\t\t\telse return vec3(28.0,2.0,78.0);\n\t\t}\n\t}\n\telse if(i<8.0) {\n\t\tif(i<6.0) {\n\t\t\tif(i<5.0) return vec3(80.0,2.0,110.0);\n\t\t\telse return vec3(143.0,3.0,133.0);\n\t\t}\n\t\telse {\n\t\t\tif(i<7.0) return vec3(181.0,3.0,103.0);\n\t\t\telse return vec3(229.0,3.0,46.0);\n\t\t}\n\t}\n\telse {\n\t\tif(i<10.0) {\n\t\t\tif(i<9.0) return vec3(252.0,73.0,31.0);\n\t\t\telse return vec3(253.0,173.0,81.0);\n\t\t}\n\t\telse if(i<12.0) {\n\t\t\tif(i<11.0) return vec3(254.0,244.0,139.0);\n\t\t\telse return vec3(239.0,254.0,203.0);\n\t\t}\n\t\telse {\n\t\t\treturn vec3(242.0,255.0,236.0);\n\t\t}\n\t}\n}\n\nvec4 colour(float c) {\n\tc*=12.0;\n\tvec3 col1=palette(c)/256.0;\n\tvec3 col2=palette(c+1.0)/256.0;\n\treturn vec4(mix(col1,col2,c-floor(c)),1.0);\n}\n\n// twitter simulator 2017\nfloat distfunc(vec3 pos) {\n    pos.y += sin(pos.z * 0.1) * 4.0;\n    float sky = pow(abs(pos.x) * -pos.y, 0.5);\n    if(pos.y > 0.0) {\n        return(0.0);\n    }\n\treturn((cos(pos.x) + sin(pos.z) + pos.y - 3.0) + sky);\n}\n\n// iteration shaded ray marcher with some bonus stuff\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    float time=iTime;\n\tvec2 coords=(2.0*fragCoord.xy-iResolution.xy)/max(iResolution.x,iResolution.y);\n\n\tvec3 ray_dir=normalize(vec3(coords,1.0+0.0*sqrt(coords.x*coords.x+coords.y*coords.y)));\n\tvec3 ray_pos=vec3(0, sin(time) * 4.0 - 4.0, -time * 10.0);\n\n\tfloat a=cos(time * 0.1)*10.0;\n\tray_dir=ray_dir*mat3(\n\t\tcos(a),0.0,sin(a),\n\t\t0.0,1.0,0.0,\n\t\t-sin(a),0.0,cos(a)\n\t);\n\n\tfloat i=192.0;\n\tfor(int j=0;j<192;j++)\n\t{\n\t\tfloat dist=distfunc(ray_pos);\n\t\tray_pos+=dist*ray_dir*0.5;\n\n\t\tif(abs(dist)<0.001) { i=float(j); break; }\n\t}\n    \n    float c=i/192.0;\n    c = c < 0.1 ? 0.1 : c;\n    float badving = pow(clamp(1.0 - length(coords) + 0.7, 0.0, 1.0), 0.4);\n    float badlines =  mod(fragCoord.y, 2.0) < 1.0 ? 0.8 : 1.0;\n    vec4 col = colour(1.0 - c) * badving * badlines;\n    float interpval = 1.0 - clamp(length(col) - 0.2, 0.0, 1.0);\n    fragColor = mix(col, colour(texture(iChannel0, ray_dir.xy).x), interpval);\n}  \n ","name":"Image","description":"","type":"image"}]}