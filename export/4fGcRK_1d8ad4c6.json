{"ver":"0.1","info":{"id":"4fGcRK","date":"1732055220","viewed":58,"name":"calm Super Chain","username":"Elsio","description":"https://x.com/kamoshika_vrc/status/1666816100083060741","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["rings","remake","knot","chain","sessions"],"hasliked":0,"parentid":"XcKyRG","parentname":"[SESSIONS Jam] Super Chain"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define h21(p) fract(sin(dot(p, vec2(12.9189, 78.23131))) * 43758.5415123)\n#define rot(a) mat2(cos(a + vec4(0, 3, 1, 0) * PI / 2.))\n#define PI acos(-1.)\n\nvec3 ID;\nfloat N = 5.;\n\nvec3 hsv(float h, float s, float v) {\n    vec3 \n        res = fract(h + vec3(0, 2, 1) / 3.);\n        res = abs(res * 6. - 3.) - 1.;\n        res = clamp(res, 0., 1.);\n        res = res * s - s + 1.;\n        \n    return res * v;\n}\n\nfloat torus(vec3 p, float R, float r) {\n    return length(vec2(p.z, length(p.xy) - R)) - r;\n}\n\nvec3 opU(vec3 d1, vec3 d2) {\n    return d1.x < d2.x ? d1 : d2;\n}\n\nfloat SuperChain(vec3 p) {\n    ID.xz = floor(p.xz / 2.) * 2.;\n    p.xz = mod(p.xz, 2.) - 1.;\n    p.y -= .4;\n    \n    vec2 s = sign(p.xz);\n    ID.y = s.x * s.y;\n    p.xz = abs(p.xz) - .5;\n    \n    float R = .85, a = .4, r = .07;\n    \n    vec4 t1 = vec4(p.xz - .5, p.xz + .5);\n    vec4 t2 = t1 * t1 * a;\n    \n    float d1 = torus(vec3(t1.xy, p.y -(t2.x - t2.y)), R, r);\n    float d2 = torus(vec3(t1.yz, p.y -(t2.y - t2.z)), R, r);\n    float d3 = torus(vec3(t1.zw, p.y -(t2.z - t2.w)), R, r);\n    float d4 = torus(vec3(t1.wx, p.y -(t2.w - t2.x)), R, r);\n    \n    vec3 res = vec3(d1, ID.xz + s);\n    res = opU(res, vec3(d2, ID.xz + vec2(0, s.y)));\n    res = opU(res, vec3(d3, ID.xz));\n    res = opU(res, vec3(d4, ID.xz + vec2(s.x, 0)));\n    \n    ID.xz = res.yz;\n    \n    return res.x;\n}\n\nvec3 logPolar(vec3 p, out float mul) {\n    float L = length(p.xz);\n    float scale = N / PI / sqrt(2.);\n    \n    p.xz = vec2(log(L),  atan(p.z, p.x)); //\n    \n    mul = L / scale;\n    p *= scale;\n    p.y /= L;\n    \n    return p;\n}\n\nfloat map(vec3 p) {\n    float d, mul;\n    p = logPolar(p, mul);\n    \n    float a = iTime * .3, b = 5.;\n    p.xz -= vec2(tanh(sin(a) * 7. - 5.) * 2., tanh(cos(a) * 7. + 5.) * 3.);\n    p.xz += vec2(sin(a / b) * 4., cos(a / b) * 3.);\n    p.xz *= rot(PI / 4.);\n    \n    d = min(p.y, SuperChain(p));\n    \n    // polar id correcion \n    ID.xz -= floor(dot(ID.xz, vec2(.5)) / N) * N;\n    \n    return d * mul;\n}\n\nvec3 normal(vec3 p) {\n    vec2 e = vec2(.01, 0);\n    return normalize(\n               vec3(\n                   map(p + e.xyy) - map(p - e.xyy), \n                   map(p + e.yxy) - map(p - e.yxy), \n                   map(p + e.yyx) - map(p - e.yyx)\n               )\n           );\n}\n\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy;\n    u = 6. * (u - r / 2.) / r.y;\n    o = vec4(0);\n\n    vec3 p = vec3(0, 5, -5),\n         rd = normalize(vec3(u, 11));\n    \n    rd.yz *= rot(-3.14/4.);\n    p.yz *= rot(cos(iTime * 2.3) * .1);\n    p.xz *= rot(sin(iTime * 2.2) * .1);\n\n    float i, d, s;\n    while(i++ < 99.) {\n        s = map(p) * .7;\n        if(abs(s) < .01 || d > 20.) break;\n        p += s * rd;\n        d += s;\n    }\n\n    o = vec4(-p.z * .3);\n    if(p.y > .02){\n        vec3 n = normal(p);\n        vec3 ld = normalize(vec3(2, 5, -5));\n        float diff = max(dot(n, ld), 0.);\n        float spec = pow(max(dot(reflect(ld, n), rd), 0.), 300.);\n        o.rgb = hsv(h21(ID.xz), .8, .7) * .7\n                 + mix(diff, spec, .95) * 5.;\n    }\n}","name":"Image","description":"","type":"image"}]}