{"ver":"0.1","info":{"id":"WdXcWN","date":"1584761937","viewed":101,"name":"RainbowOrb","username":"NY","description":"a","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, s, -s, c);\n}\n\nvec3 hsb2rgb(vec3 c)\n{\n    vec3 rgb = clamp(abs(mod(c.x * 6. + vec3(0. , 4., 2.), 6.) - 3.) - 1., 0., 1. );\n    rgb = rgb * rgb * (3. - 2. * rgb);\n    return c.z * mix(vec3(1.), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv  = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float angle = atan(uv.y, uv.x);\n    float radius =  length(uv);\n    // ラジアン*20.でしてからsinをすることで揺れを作る\n  \tfloat u = sin(angle * 20.) * 0.01;\n    \n    uv = uv * rotate(iTime);\n    angle = atan(uv.y, uv.x);\n\n    \n    // 揺れをなびかせる部分\n    // sinで0〜1にしてuにかけることでu〜-uの範囲を行き来する    \n    u *= abs(sin(iTime * 10.));\n    \n    // 明るさの設定部分　回転させて角度で一部のみ明るさをますように\n\tfloat t = (0.01*  (step(2.,angle) * 1.3 + 1.0))\n        // 描画する範囲\n        / abs(0.5 + u - radius);\n    \n    // 極座標系作成\n    vec3 hsb = vec3(angle,  radius, 1.);   \n    // hsbからrgbに変換\n    vec3 color = hsb2rgb(hsb);\n    color *= t;\n    // Output to screen\n    fragColor = vec4(color,1.); \n}","name":"Image","description":"","type":"image"}]}