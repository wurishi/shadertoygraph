{"ver":"0.1","info":{"id":"7lGfDK","date":"1665238007","viewed":22,"name":"note10_tile2","username":"utopialeo","description":"tile2_note10","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 brickTile(vec2 _uv, float _zoom){\n    _uv *= _zoom;\n    float d = step(1.,mod(_uv.y,2.))*0.5;\n\n    if (d>0.){_uv.x += d * 0.5 -.5*iTime;}\n    else \n    _uv.x += step(1.,mod(_uv.y,2.))*0.5+.5*(iTime);\n\n    return fract(_uv);\n}\n\nfloat box(vec2 _uv, vec2 _size){\n    _size = vec2(0.5)-_size*0.5;\n    vec2 uv = smoothstep(_size,_size+vec2(1e-4),_uv);\n    uv *= smoothstep(_size,_size+vec2(1e-4),vec2(1.)-_uv);\n    return uv.x*uv.y;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv.x /= iResolution.x/iResolution.y;\n    vec3 color = vec3(0.);\n\n    uv /= vec2(2.15,0.65)/1.8;\n\n    uv = brickTile(uv,5.0);\n    color = vec3(box(uv,vec2(0.9)));\n\n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}