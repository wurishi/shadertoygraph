{"ver":"0.1","info":{"id":"DsjyRR","date":"1687358050","viewed":107,"name":"InitiationShader","username":"sklbz","description":"my second shader (much better than the first).","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["fractals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\nvec3 a = vec3(0.600, 0.500, 0.500), b = vec3(0.910, 0.600, 0.600), c = vec3(1.058, 1.000, 1.000), \n        d = vec3(0.190, 0.413, 0.557);\n        return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord* 2.0 - iResolution.xy) / iResolution.y * 1.5;\n    \n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i< 4.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n        \n        float d = length(uv) * exp(-length(uv0));\n    \n        vec3 col = palette(length(uv0) + (i + iTime*0.5)*.4);\n    \n        d = sin(d * 8. + iTime) / 8.;\n        d = abs(d);\n    \n        d = pow(0.015 / d, 1.4);\n    \n        finalColor += col * d;\n    }\n\n    fragColor = vec4( finalColor , 1.0 );\n}","name":"Image","description":"","type":"image"}]}