{"ver":"0.1","info":{"id":"cdG3RV","date":"1678776754","viewed":95,"name":"Simple Noise Transition","username":"Chango","description":"A simple effect for some material transiton ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["transitionnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    \n    float uvr = length(uv-vec2(0.5));\n    float life = fract(0.4*iTime);\n    \n    float scale = 0.2;\n    //make sure when life 1,complete transition\n\tfloat r = life * 0.5*sqrt(2.0)*(1.0+ scale);\n\tfloat dr = scale *pnoise(uv, 10.0, 4, 0.5);\n    //make sure when life 0,no transition\n\tr -= abs(dr);\n    \n    float k=0.0;\n    if(uvr<r)\n    {\n    k =1.0;\n    }\n\n    vec3 col2 = vec3(0.0);\n    \n    col = mix(col, col2,k);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//https://www.shadertoy.com/view/3tcBzH\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat hermite(float t)\n{\n  return t * t * (3.0 - 2.0 * t);\n}\n\nfloat noise(vec2 co, float frequency)\n{\n  vec2 v = vec2(co.x * frequency, co.y * frequency);\n\n  float ix1 = floor(v.x);\n  float iy1 = floor(v.y);\n  float ix2 = floor(v.x + 1.0);\n  float iy2 = floor(v.y + 1.0);\n\n  float fx = hermite(fract(v.x));\n  float fy = hermite(fract(v.y));\n\n  float fade1 = mix(rand(vec2(ix1, iy1)), rand(vec2(ix2, iy1)), fx);\n  float fade2 = mix(rand(vec2(ix1, iy2)), rand(vec2(ix2, iy2)), fx);\n\n  return mix(fade1, fade2, fy);\n}\n\nfloat pnoise(vec2 co, float freq, int steps, float persistence)\n{\n  float value = 0.0;\n  float ampl = 1.0;\n  float sum = 0.0;\n  for(int i=0 ; i<steps ; i++)\n  {\n    sum += ampl;\n    value += noise(co, freq) * ampl;\n    freq *= 2.0;\n    ampl *= persistence;\n  }\n  return value / sum;\n}","name":"Common","description":"","type":"common"}]}