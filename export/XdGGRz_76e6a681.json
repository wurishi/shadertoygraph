{"ver":"0.1","info":{"id":"XdGGRz","date":"1452872320","viewed":293,"name":"Army of Oranges","username":"Emil","description":"First experiment with raymarching. Animated the length of iteration step and got funky blurryness :)","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float map(vec3 p){\n    p.x = mod(p.x, 2.0);\n    p.y = (p.y, 2.0);\n    p.z = mod(p.z, 2.0);\n    return length(p-vec3(1.0,1.0,1.0)) - 0.5;\n}\n\nfloat trace(vec3 o, vec3 r){\n    float t = 0.5;\n    const int maxSteps = 32;\n    for (int i = 0; i < maxSteps; i++){ \n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 1.0*(sin(iTime));\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv*2.0 -1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv, 1.0));\n    \n    vec3 o = vec3(0.0,0.0,-3.0);\n    o.z = 2.6*iTime;\n    \n    \n    float t = trace(o,r);\n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    vec3 fc = vec3(fog);\n    \n\tfragColor = vec4(fc*vec3(2.0,1.0,0.05),1.0);\n}","name":"Image","description":"","type":"image"}]}