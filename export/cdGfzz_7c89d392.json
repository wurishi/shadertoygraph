{"ver":"0.1","info":{"id":"cdGfzz","date":"1697801776","viewed":83,"name":"safe normalize()","username":"iY0Yi","description":"safe normalize function.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["normalize"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define isInf(v) (abs(v)==1./0.)\n#define isNaN(v) (v!=v)\n#define isUndefF1(v) (isInf(v) || isNaN(v))\n#define isUndefF2(v) (isUndefF1(v.x) || isUndefF1(v.y))\n#define isUndefF3(v) (isUndefF1(v.x) || isUndefF1(v.y) || isUndefF1(v.z))\n\n/*\nvec3 safenorm(vec3 v){\n  v = normalize(v);\n  return isUndefF3(v) ? vec3(0) : v;\n}\n//*/\n\nvec3 safenorm(vec3 v){\n    //return (v==vec3(0)||any(isinf(v))||any(isnan(v))) ? vec3(0) : normalize(v);\n    v=normalize(v); return any(isinf(v))||any(isnan(v)) ? vec3(0) : v;\n    //v=normalize(v); return isUndefF3(v) ? vec3(0) : v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n/*    \n#if 1\n    col += safenorm(col*0.);\n#else\n    col += normalize(col*0.);\n#endif\n//*/\n\n    ivec2 I = ivec2(2.*uv);\n    col  += I.x < 1 ? I.y > 0 ? safenorm(col*min(0.,iTime)) : normalize(col*min(0.,iTime))\n                    : I.y > 0 ? safenorm(vec3(0)) : normalize(vec3(0));\n\n    //if( isUndefF3(col) ) col = vec3(1,0,0);\n    //if(any(isnan(vec3(0./0.)))) col = vec3(0,1,0);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}