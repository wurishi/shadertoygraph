{"ver":"0.1","info":{"id":"dstXWN","date":"1679862869","viewed":150,"name":"Color Feast","username":"oemfoe","description":"Some dancing color dots","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["colordots2dfeast"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate(float phi) {\n    return mat2(\n         cos(phi), sin(phi),\n        -sin(phi), cos(phi)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float s = 0.5 + 0.5 * sin(iTime);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = (5. * uv.x * s  + 5. + iTime / 10.);\n    float aspect = iResolution.x / iResolution.y;\n    float div = 10. * s + 2.;\n    vec2 uv0 = uv;\n    uv -= 0.5;\n    uv.x *= aspect;\n    \n    uv0 = uv;\n    uv = rotate(iTime) * uv;\n    uv = (mod(uv, 1./div) * div - 0.5) * 2.;\n    float d = length(uv) - 0.1;\n    \n    \n    vec3 baseColor = sin(vec3(0.234, 0.345, 0.456) * t * 5. * ((uv0.x+t)/20.)) * 0.4 + 0.6;\n    vec3 c = vec3(smoothstep(s, 1., 1.-d));\n    c *= baseColor;\n\n    // Output to screen\n    fragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}