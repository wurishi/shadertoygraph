{"ver":"0.1","info":{"id":"7ljGDy","date":"1624660394","viewed":60,"name":"Naive Vornoi","username":"lukaszk159","description":"Naive implementation of vornoi -study of noise.\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["vornoicellsnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N22(vec2 p)\n{\n    vec3 a  = fract(p.xyx * vec3( 123.34, 234.34, 345.65));\n    a += dot( a, a+ 34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( 2.0 * fragCoord -iResolution.xy) / iResolution.y;\n    \n    //float m = N22(uv).x;\n    float m = 0.0;\n    float t = iTime * 0.2;\n    \n    float minDist = 100.0;\n    \n    for( float i = 0.0; i < 50.0; ++i)\n    {\n        vec2 n = N22(vec2(i));\n        vec2 p = sin (n*t);\n        \n        float d = length( uv - p );\n        m += smoothstep( 0.02, 0.01, d);\n        \n        if ( d < minDist)\n        {\n        minDist = d;\n        }\n        \n    }\n    \n    vec3 col = vec3(minDist);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}