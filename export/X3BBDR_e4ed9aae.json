{"ver":"0.1","info":{"id":"X3BBDR","date":"1729305817","viewed":30,"name":"Excess Speed Illusion","username":"EthanKKuntz","description":"Visual illusion inspired by Akiyoshi. Kinda works out of periphery of vision, needs more tuning","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["illusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define deg2rad (3.14159 / 180.0)\n\nfloat hexRadius = 0.5; \n\nfloat circle(vec2 p, vec2 circlePos, float radius)\n{\n    vec2 v = p - circlePos;\n    float d = length(v);\n    return smoothstep(radius, radius - 0.01, d);\n}\n\nvoid drawHexagon(inout vec3 col, vec2 uv, mat2 rot, vec2 offset, float radius, vec3 hexColor)\n{\n    vec2 pos1 = rot * (radius * vec2(cos(0.0), sin(0.0))) + offset;\n    vec2 pos2 = rot * (radius * vec2(cos(deg2rad * 60.0), sin(deg2rad * 60.0))) + offset;\n    vec2 pos3 = rot * (radius * vec2(cos(deg2rad * 120.0), sin(deg2rad * 120.0))) + offset;\n    vec2 pos4 = rot * (radius * vec2(cos(deg2rad * 180.0), sin(deg2rad * 180.0))) + offset;\n    vec2 pos5 = rot * (radius * vec2(cos(deg2rad * 240.0), sin(deg2rad * 240.0))) + offset;\n    vec2 pos6 = rot * (radius * vec2(cos(deg2rad * 300.0), sin(deg2rad * 300.0))) + offset;\n\n    float circle1 = circle(uv * 3.0, pos1, 0.08);\n    float circle2 = circle(uv * 3.0, pos2, 0.08);\n    float circle3 = circle(uv * 3.0, pos3, 0.08);\n    float circle4 = circle(uv * 3.0, pos4, 0.08);\n    float circle5 = circle(uv * 3.0, pos5, 0.08);\n    float circle6 = circle(uv * 3.0, pos6, 0.08);\n\n    float hexFactor = clamp(circle1 + circle2 + circle3 + circle4 + circle5 + circle6, 0.0, 1.0);\n\n    col = mix(col, hexColor, hexFactor);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = -1.0 + 2.0 * fragCoord.xy / iResolution.y;\n    uv.x -= 0.75;\n\n    vec3 bcol = vec3(0.6, 0.6, 0.6); \n\n    float r = floor((iTime + 1.0 / 20.0) * 10.0) / 20.0;\n    mat2 rot;\n    rot[0] = vec2(cos(r), sin(r));\n    rot[1] = vec2(-sin(r), cos(r));\n\n    float hexSpacing = hexRadius * 2.5;\n    vec2 hexOffset1 = vec2(-0.866 * hexSpacing, hexSpacing * 0.5);\n    vec2 hexOffset2 = vec2(0.866 * hexSpacing, hexSpacing * 0.5);\n    vec2 hexOffset3 = vec2(0.0, -hexSpacing);\n\n    vec3 col = bcol;\n\n    drawHexagon(col, uv, rot, hexOffset1, hexRadius, vec3(1.0, 0.0, 0.0)); \n    drawHexagon(col, uv, rot, hexOffset2, hexRadius, vec3(0.0, 1.0, 0.0)); \n    drawHexagon(col, uv, rot, hexOffset3, hexRadius, vec3(0.0, 0.0, 1.0)); \n\n    float centerHexRadius = hexRadius;\n    float flashPhase = mod(floor(iTime * 10.0), 3.0);\n    vec3 centerHexColor = flashPhase == 0.0 ? vec3(1.0, 0.0, 0.0) : \n                          (flashPhase == 1.0 ? vec3(0.0, 0.0, 1.0) : \n                          vec3(0.0, 1.0, 0.0));\n                          \n    drawHexagon(col, uv, rot, vec2(0.0, 0.0), centerHexRadius, centerHexColor); \n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}