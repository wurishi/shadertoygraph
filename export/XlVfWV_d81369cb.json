{"ver":"0.1","info":{"id":"XlVfWV","date":"1544111195","viewed":185,"name":"simple smoooth line","username":"dilip019","description":"smoooth line","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["line","smoooth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://www.shadertoy.com/view/4ssSRl\n\n#define Pi 3.14159\n#define smooth true\nfloat line( in vec2 a, in vec2 b, in vec2 p )\n{\n\tvec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn length( pa - ba*h );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.yy;\n\tvec2 uv= fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y; \n  //  vec2 center = \n    vec2 q = p;\n\t\n \tfloat var = 0.9 +0.45* cos(0.5*iTime);\n \tfloat var2 = 0.5+ 0.45*sin(0.5*iTime);\n    // background\t\n\tvec3 col = vec3(0.5,0.85,0.9);\n\t\n\t// compute distance to a set of lines\n    float d   = 0.3;\t \n    \n\tvec2 pA = vec2(0.9,0.50); \t\n    vec2 pB = vec2( var, var2 );\t\n      \n   \tfloat h = line( pA, pB, uv );\n\td = min( d, h );\n\n \tif( smooth )\n\t{\n\t\tfloat w = 0.5*fwidth(d); \n\t\tw *= 1.5; // extra blur\n\t\tcol = mix( vec3(0.0,0.0,0.0), col, smoothstep(-w,w,d-0.04) ); // black\n\t\tcol = mix( vec3(1.0,0.6,0.0), col, smoothstep(-w,w,d-0.02) ); // orange\n\t\t\n\t}\n \telse\n\t{\n \t\tif( d<0.04) col = vec3(0.0,0.0,0.0); // black \n\t\tif( d<0.02 ) col = vec3(1.0,0.6,0.0); // orange\n\t}\n\t \t\n \t\n\tfragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}