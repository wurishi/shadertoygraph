{"ver":"0.1","info":{"id":"ltSGWm","date":"1430216868","viewed":272,"name":"php screensaver","username":"FMS_Cat","description":"I have never wrote php\n\nReferences :\nhttps://www.shadertoy.com/view/lts3Df\nhttp://research.microsoft.com/en-us/um/people/hoppe/ravg.pdf","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define t iTime*100.\n#define r iResolution.xy\n#define c fragCoord\n#define V vec2(0.,1.)\n#define cl(i) clamp(i,0.,1.)\n\n// https://www.shadertoy.com/view/lts3Df\n// http://research.microsoft.com/en-us/um/people/hoppe/ravg.pdf\n\nfloat det(vec2 a, vec2 b) { return a.x*b.y-b.x*a.y; }\n\nvec2 closestPointInSegment( vec2 a, vec2 b ) { return a + ( b - a ) * cl( -dot( a, b - a ) / dot( b - a, b - a ) ); }\n\nvec2 getDistanceVector( vec2 b0, vec2 b1, vec2 b2 )\n{\n\t\n    float a = det( b0, b2 );\n    float b=2.0 * det( b1, b0 );\n    float d=2.0 * det( b2, b1 );\n    \n    if( abs( 2.0*a + b + d ) < 100.0 ) { return closestPointInSegment( b0, b2 ); }\n\t\n    float f = b*d - a*a;\n    \n    vec2 d21 = b2 - b1;\n    vec2 d10 = b1 - b0;\n    vec2 d20 = b2 - b0;\n    \n    vec2 gf = 2.0 * ( b * d21 + d * d10 + a * d20 );\n    gf = vec2( gf.y, -gf.x );\n    vec2 pp = -f * gf / dot( gf, gf );\n    vec2 d0p = b0 - pp;\n    float ap = det( d0p, d20 );\n    float bp = 2.0 * det( d10, d0p );\n    \n    float tt = cl( ( ap + bp ) / ( 2.0 * a + b + d ) );\n    return mix( mix( b0, b1, tt ), mix( b1, b2, tt ), tt );\n\n}\n\nfloat approxDistance( vec2 p, vec2 b0, vec2 b1 ) { return length( closestPointInSegment( b0-p, b1-p ) ); }\nfloat approxDistance( vec2 p, vec2 b0, vec2 b1, vec2 b2 ) { return length( getDistanceVector( b0-p, b1-p, b2-p ) ); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec3 col = V.xxx;\n    float size = r.x * 0.15;\n    vec2 center = vec2(\n        size + abs( mod( t, ( r.x - size*2.0 ) * 2.0 ) - ( r.x - size*2.0 ) ),\n        size + abs( mod( t*2.0, ( r.y * 2.0 - size * 2.0 ) * 2.0 ) - ( r.y * 2.0 - size * 2.0 ) )\n    );\n    float seed = ( floor( t / ( r.x - size * 2.0 ) ) + floor( t * 2.0 / ( r.y * 2.0 - size * 2.0 ) ) ) * 4.66;\n    \n    vec3 baseCol = vec3( sin( seed ) * 0.5 + 0.5, sin( seed + 2.0 ) * 0.5 + 0.5, sin( seed + 4.0 ) * 0.5 + 0.5 );\n    \n    col = cl( size - length( c * vec2( 1.0, 2.0 ) - center ) ) * baseCol;\n    \n    float dist = 1E4;\n    \n    dist = min( dist, approxDistance( c - center * vec2( 1.0, 0.5 ), vec2( -0.55, -0.25 )*size, vec2( -0.45, 0.2 )*size ) );\n    dist = min( dist, approxDistance( c - center * vec2( 1.0, 0.5 ), vec2( -0.45, 0.2 )*size, vec2( -0.15, 0.22 )*size, vec2( -0.2, 0.05 )*size ) );\n    dist = min( dist, approxDistance( c - center * vec2( 1.0, 0.5 ), vec2( -0.5, -0.1 )*size, vec2( -0.25, -0.15 )*size, vec2( -0.2, 0.05 )*size ) );\n    \n    dist = min( dist, approxDistance( c - center * vec2( 1.0, 0.5 ), vec2( -0.1, -0.1 )*size, vec2( 0.0, 0.35 )*size ) );\n    dist = min( dist, approxDistance( c - center * vec2( 1.0, 0.5 ), vec2( 0.0, 0.2 )*size, vec2( 0.25, 0.25 )*size, vec2( 0.13, -0.1 )*size ) );\n    \n    dist = min( dist, approxDistance( c - center * vec2( 1.0, 0.5 ), vec2( 0.25, -0.25 )*size, vec2( 0.35, 0.20 )*size ) );\n    dist = min( dist, approxDistance( c - center * vec2( 1.0, 0.5 ), vec2( 0.35, 0.2 )*size, vec2( 0.65, 0.22 )*size, vec2( 0.6, 0.05 )*size ) );\n    dist = min( dist, approxDistance( c - center * vec2( 1.0, 0.5 ), vec2( 0.3, -0.1 )*size, vec2( 0.55, -0.15 )*size, vec2( 0.6, 0.05 )*size ) );\n    \n    col = vec3( cl( col + cl( 7.0 - dist ) ) );\n    col = vec3( cl( col - cl( 5.0 - dist ) ) );\n    \n    fragColor = vec4( col, 1. );\n    \n}","name":"","description":"","type":"image"}]}