{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define SPEED (1.)\n\n// https://gist.github.com/yiwenl/3f804e80d0930e34a0b33359259b556c\nvec2 rotate(in vec2 v, in float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, s, -s, c);\n\treturn m * v;\n}\n\n// Taxicab distance on rotated axes\n// https://en.wikipedia.org/wiki/Taxicab_geometry\nfloat taxi_rot(in vec2 p, in vec2 q, in float r) {\n    vec2 diff = abs(rotate(p - q, r));\n    return diff.x + diff.y;\n}\n\nfloat in_square(in vec2 p, in vec2 q, float angle, float size) {\n    return smoothstep(0., 3. / iResolution.y, taxi_rot(p, q, angle) - size);\n}\n\nvec3 sq(in vec3 current, in vec3 new, in vec2 p, in vec2 q, in float size) {\n    return mix(new, current, in_square(p, q, iTime * size * SPEED, size));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 coord) {\n    vec2 uv = coord/iResolution.x;\n    \n    vec2 c = vec2(0.5, 0.5 * iResolution.y / iResolution.x);\n\n    vec3 col = vec3(0.);\n    for (int i = 81; i > 0; i--) {\n        col = sq(col, vec3(i % 2), uv, c, (float(i) * .01));\n    }\n\n    fragColor = vec4(col, 0.);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XfyfRz","date":"1733671115","viewed":67,"name":"square spiral [mag]","username":"magnet_powered","description":"Spiral made from squares rotating at different rates. Pretty satisfying when it all lines up!","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["spiral","squares"],"hasliked":0,"parentid":"","parentname":""}}