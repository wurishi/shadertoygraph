{"ver":"0.1","info":{"id":"lfKyW3","date":"1732488517","viewed":52,"name":"PointToAngle function","username":"ProfessorPixels","description":"made the function on desmos and then turned it into an artwork.\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["function","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"ProfessorPixels' Template\" by ProfessorPixels. https://shadertoy.com/view/McdcR4\n// 2024-11-24 22:45:34\n\nconst float pi = 2.*acos(-1.);\n//my very own point to angle function (:\n//feel free to use it! Sadly suffers from an atan bug though.\nfloat pointToAngle(vec2 p)\n{\n    return mod(atan(p.x/p.y),pi*.25)+pi*.125*(3.-sign(p.x*p.y)-2.*sign(p.x));\n}\nM\n    F=(F-R*.5)/R.y*2.;\n    O=vec4(.1,.7,.2,1)*max(pow(fract(pointToAngle(F)/pi-iTime),5.),fract(pointToAngle(F)/pi-iTime)*clamp(pow(abs(sin(length(F)*pi*3.)),20.),0.,1.));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define T texture(iChannel0,\n#define M void mainImage(out vec4 O,vec2 F){\n#define N normalize\n#define v2 vec2\n#define v3 vec3\n#define v4 vec4","name":"Common","description":"","type":"common"}]}