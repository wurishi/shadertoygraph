{"ver":"0.1","info":{"id":"wtBBRd","date":"1602023637","viewed":256,"name":"Castlevania type thing","username":"AlexApps99","description":"Emulates the effect seen in action here:\nhttps://www.youtube.com/watch?v=ngoxlS8LEj4","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["castlevania"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 norm(vec2 inp) {\n    vec2 r = 2.0 * inp / iResolution.xy - 1.0;\n    //r.y *= -1.0;\n    return r;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalize coordinates to (-1 ... 1)\n    vec2 uv = norm(fragCoord);\n\n    float s = -sqrt(-pow(uv.y, 2.0)+1.0)+2.0;\n    if (s != 0.0 && s < 1.4) {\n        vec2 coord = uv/s;\n        coord.x += iTime*0.5;\n        coord.y -= iTime*0.25;\n        fragColor = texture(iChannel0, coord)*(4.0/3.0)*(s-0.75);\n    } else {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}