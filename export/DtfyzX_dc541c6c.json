{"ver":"0.1","info":{"id":"DtfyzX","date":"1728143940","viewed":66,"name":"Whirls","username":"StefanPijnacker","description":"Just playing around with some simple SDF stuff. ","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265359\n\nvec2 Rotate(vec2 uv, float angle)\n{\n    float rad = angle * (pi / 180.0);\n    mat2 rot = mat2(cos(rad), sin(rad), -sin(rad), cos(rad));\n    return rot * uv;\n}\n\nvec3 CPallete(float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.745,0.263,0.055);\n    return a + b*cos( 1.5 *(c*t+d) );\n}\n\nfloat circle(vec2 uv, float radius)\n{\n    float d = abs(length(uv) - radius);\n    d = smoothstep(0.0, 0.055, d);\n    d -= smoothstep(-0.1, 0.5, uv.x) - smoothstep(-0.5, 0.1, uv.x);\n    d = 0.3 / d;\n    return d * smoothstep(0.35, 0.8, d);\n    \n} \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime + 477.2;\n    vec2 uv = (fragCoord/iResolution.xy) * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    float a = 0.165;\n    float r = 0.125;\n    vec3 c = CPallete(uv.x * uv.y);\n    \n    uv = Rotate(uv, time * cos(time * 0.22));\n\n    for(int i = 0; i < 15; i++)\n    {\n        r += 0.06;\n        a += circle(uv, r);\n        uv = Rotate(uv, 24. + time * float(i) * 0.8) * cos(time * 0.14) * 1.205;\n    }\n      \n    fragColor = vec4(vec3(a * c), a);\n}","name":"Image","description":"","type":"image"}]}