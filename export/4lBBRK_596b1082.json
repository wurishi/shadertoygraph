{"ver":"0.1","info":{"id":"4lBBRK","date":"1516412626","viewed":2589,"name":"Realtime Pixel Sorting Effect","username":"slerpy","description":"Because of the way this website handles videos, going full screen might break this shader beyond repair.\n\nSpace to reset","likes":45,"published":1,"flags":48,"usePreview":0,"tags":["video","effect","glitch","funky","messy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n\tivec2 uv = ivec2(fragCoord);\n    uv.y = clamp(uv.y, 2, int(iResolution.y) - 2);\n    \n    vec4 c0 = texelFetch(iChannel0, uv + ivec2(0, 1), 0);\n    vec4 c1 = texelFetch(iChannel0, uv,               0);\n    vec4 c2 = texelFetch(iChannel0, uv - ivec2(0, 1), 0);\n    \n    float b0 = dot(c0, vec4(1));\n    float b1 = dot(c1, vec4(1));\n    float b2 = dot(c2, vec4(1));\n    \n    float b_min = min(min(b0, b1), b2);\n    float b_max = max(max(b0, b1), b2);\n    \n    fragColor = c0;\n    \n    if(b1 != b_min && b1 != b_max)\n        fragColor = c1;\n\n    else if(b2 != b_min && b2 != b_max)\n        fragColor = c2;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SPEED 5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int gi = (iFrame >> 1) % (SPEED + 1);\n    \n    int gap = (gi == 0) ? 1\n        \t: (gi == 1) ? 4\n            : (gi == 2) ? 10\n            : (gi == 3) ? 23\n            : (gi == 4) ? 57\n            : (gi == 5) ? 132\n            : (gi == 6) ? 301\n            :             701;\n    \n    int s = (iFrame & 1) ^ ((int(fragCoord.y) / gap) & 1);\n    \n    ivec2 uv1 = ivec2(fragCoord);\n    ivec2 uv2 = uv1 + (ivec2(0, 2*s-1) * gap);\n    \n    if(iFrame < 30 || texelFetch(iChannel2, ivec2(0x20, 0), 0).r > .5 ){\n    \tfragColor = vec4(float(uv1.y) / iResolution.y);\n        return;\n    }\n    \n    vec3 c1 = texelFetch(iChannel1, ivec2(uv1), 0).rgb;\n    vec3 c2 = texelFetch(iChannel1, ivec2(uv2), 0).rgb;\n    \n    float y1 = texelFetch(iChannel0, ivec2(uv1), 0).r;\n    float y2 = texelFetch(iChannel0, ivec2(uv2), 0).r;\n    \n    float b1 = dot(c1, vec3(1));\n    float b2 = dot(c2, vec3(1));\n    \n    int b = int( b1 > b2 ) ^ s;\n    b |= int( b1 == b2 );\n    b |= int( max(y1,y2) >= 1. || min(y1,y2) <= 0. );\n    \n    float yf = bool(b) ? y1 : y2;\n    fragColor = vec4(yf);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / iResolution.xy;\n    uv.y = texelFetch(iChannel0, ivec2(fragCoord), 0).r;\n\tfragColor = texture(iChannel1, uv);\n}","name":"Buffer B","description":"","type":"buffer"}]}