{"ver":"0.1","info":{"id":"4scGWS","date":"1451961017","viewed":222,"name":"Grid Overlay","username":"NemoKradXNA","description":"This shader divides the screen and renders boxes over the scene. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grid","gridoverlay"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Created by Charles Humphrey 05/01/2016\n// Second attempt, playing with shadertoy.\n\nvec4 gridColor = vec4(.5,0,0,1);\nfloat division = .125;\nfloat size = .005;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    fragColor = texture(iChannel0,uv);\n    \n    float maxThickness = division - size;\n    if(uv.x < size || uv.y <size || mod(uv.x,division) >= maxThickness || mod(uv.y,division) >= maxThickness)\n        fragColor += gridColor;    \n    \n}","name":"","description":"","type":"image"}]}