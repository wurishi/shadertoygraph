{"ver":"0.1","info":{"id":"7s3cRB","date":"1653618384","viewed":52,"name":"here u go logan","username":"theo_walton","description":"w","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["w"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int NUM_BALLS = 30;\n\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - vec2(1);\n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    vec3 col = mix(vec3(1.0, 1.0, 0), vec3(1.0, 0.0, 0.0), iTime*0.5);\n\n    vec3 coordinates[NUM_BALLS];\n    for (int i = 0; i < NUM_BALLS; i++) {\n        coordinates[i] = vec3(0, -1, 0);\n    }\n    \n    vec3 vectors[NUM_BALLS];\n    for (int i = 0; i < NUM_BALLS; i++) {\n        vectors[i] = vec3((rand(vec2(i, float(i)+2.42))-0.5), 3.0 * rand(vec2(i, float(i)+3.42)), rand((vec2(i, float(i)+4.42))-0.5));\n    }\n\n    vec3 gravity = vec3(0, -1.4, 0);\n\n    vec3 final_pos[NUM_BALLS];\n    for (int i = 0; i < NUM_BALLS; i++) {\n        final_pos[i] = coordinates[i] + vectors[i] * iTime + gravity * iTime * iTime;\n    }\n\n    float brightness = 0.0;\n    for (int i = 0; i < NUM_BALLS; i++) {\n        float dist = length(final_pos[i].xy - uv);\n        float noise_mod = 1.0 - noise(uv * 10.0 + final_pos[i].xy * 4.0) * 0.6;\n        brightness += max(0.1 - dist, 0.0) * noise_mod;\n    }\n\n    float pow_mod = iTime * 0.5 + 0.2;\n\n    // Output to screen\n    fragColor = vec4(col * pow(brightness, pow_mod), 1.0);\n}","name":"Image","description":"","type":"image"}]}