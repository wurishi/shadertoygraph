{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define PI 3.141592654579\nfloat Vec2Theta(vec2 a,vec2 b)\n{\nif(dot(a,b)>0.0){\n  return asin(0.999*(a.x*b.y-a.y*b.x)/length(a)/length(b));\n }else if(dot(a,b)<0.0 && (-a.x*b.y+a.y*b.x)<0.0){\n return PI-asin(0.999*(a.x*b.y-a.y*b.x)/length(a)/length(b));\n }else if(dot(a,b)<0.0 && (-a.x*b.y+a.y*b.x)>0.0){\n return -PI-asin(0.999*(a.x*b.y-a.y*b.x)/length(a)/length(b));\n }\n \n \n}\n\nfloat Hash11(float p)\n{\n    p = fract(p * 0.1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvec3 Hash31(float p)\n{\n   vec3 p3 = fract(vec3(p) * vec3(0.1031, 0.1030, 0.0973));\n   p3 += dot(p3, p3.yzx+33.33);\n   return fract((p3.xxy+p3.yzz)*p3.zyx); \n}\n\n\nfloat Hold(float x){// 平滑截止，暂时没用到\nreturn log(exp(2.0)+1.0)/2.0-log(exp(-2.0*x+2.0)+1.0)/2.0;\n}\n\nvec4 Blend(vec4 Dest,vec4 Src){\n    return vec4(\n    (Src.r*Src.a+Dest.r*(1.0-Src.a)),\n    (Src.g*Src.a+Dest.g*(1.0-Src.a)),\n    (Src.b*Src.a+Dest.b*(1.0-Src.a)),   \n    (Src.a+Dest.a*(1.0-Src.a)));\n\n}\n\n\nvec3 RGB(float T) {\n\n    float _ = (T - 6500.0) / (6500.0 * T * 2.2);\n    float R = exp(2.05539304255011812e+04 * _);\n    float G = exp(2.63463675111716257e+04 * _);\n    float B = exp(3.30145738821726118e+04 * _);\n    float LmulRate = 1.0 / max(max(R, G), B);\n    R *= LmulRate;\n    G *= LmulRate;\n    B *= LmulRate;\n    return vec3(R, G, B);\n}\n\n\nfloat ContinuousRandom(vec2 Pos,float Multipler){// 随机，用于光晕条纹\nreturn (sin(Multipler*47.0*atan(Pos.y/Pos.x))+sin(Multipler*10.0*atan(Pos.y/Pos.x))+sin(Multipler*sqrt(10.0)*atan(Pos.y/Pos.x))+sin(Multipler*11.0*atan(Pos.y/Pos.x))+sin(Multipler*31.0*atan(Pos.y/Pos.x)));\n}\n\n\nfloat AsterismParallelField(float Dist,float Strength,float Zoom){// 星芒沿线强度\n    float Result=(0.5*cos(Zoom*200.0*Dist*Dist)+0.5)/(cosh(Strength*10.0*Dist)+5.0/(50.0*Dist*Dist+1.0));\n    return Result;\n}\n\n\n\n\nfloat AsterismField(vec2 Pos,float Theta,float Strength,float Zoom){// 一条完整星芒，theta是方向，strength是强度，zoom是缩放，这个缩放只缩放星芒尺寸但不缩放亮度衰减\nfloat vx=dot(Pos,vec2(cos(Theta),sin(Theta)));\nfloat vy=dot(Pos,vec2(cos(Theta+0.5*PI),sin(Theta+0.5*PI)));\nfloat Result=0.0;\nif(abs((200.0+500.0*abs(vx))*vy)<4.0){\n    Result+=(AsterismParallelField(vx,Strength,Zoom)/(cosh((200.0+500.0*abs(vx))*vy)-0.9));\n}\nreturn Result;\n}\n\nfloat AsterismAndBloom(vec2 Pos,float Strength,float Zoom){// 星芒加光晕\nfloat Result=0.5*(AsterismField(Pos,0.0,1.0/smoothstep(0.0,1.0,Strength),Zoom));// 星芒\n\nResult*=Strength;\nResult*=(0.5+0.5*tanh(30.0*(Strength-0.25)));\n\nfloat EquivalentRadius=70.0*length(Pos);\n\nfloat Bloom=0.0;\nif(length(Pos)<0.2*Strength){\n    float HighDistanceStrength=(0.5+0.5*tanh(10.0*(Strength-0.1)));\n    Bloom+=HighDistanceStrength*0.7/(5.0+0.01*exp(+60.0/smoothstep(0.0,1.0,Strength)*(0.75*EquivalentRadius/70.0*1.2)))*  (  (1.0-exp(-0.1*EquivalentRadius*EquivalentRadius/Strength/Strength))*(0.5+0.5*tanh(30.0*(Strength-0.25))  )*(ContinuousRandom(Pos,1.5)/6.0*0.15+ContinuousRandom(Pos,11.4)/6.0*0.05)  +0.9);\n    Bloom+=HighDistanceStrength*10.5/(10.0+exp(+24.0/smoothstep(0.0,1.0,Strength)*((1.5*EquivalentRadius/70.0*1.7)-0.0)))*(  (1.0-exp(-0.1*EquivalentRadius*EquivalentRadius/Strength/Strength))*(0.5+0.5*tanh(30.0*(Strength-0.25))  )*(ContinuousRandom(Pos,1.0)/6.0*0.15+ContinuousRandom(Pos,11.4)/6.0*0.05)  +0.9);\n}\nResult=Bloom+0.4*Result;\nreturn Result;\n}\n\n\n\n\n// 这几个是小星芒和光晕的，因为光晕缩小星芒不变的需要所以改了点参数\nfloat SmallAsterismParallelField(float Dist,float Strength,float Zoom){// 沿线分布\n    float Result=(0.5*cos(Zoom*20.0*Dist*Dist)+0.5)/(cosh(Strength*15.0*Dist)+6.0/(50.0*Dist*Dist+1.0));\n    return Result;\n}\n\n\n\n\nfloat SmallAsterismField(vec2 Pos,float Theta,float Strength,float Zoom){// 沿线以及粗细\nfloat vx=dot(Pos,vec2(cos(Theta),sin(Theta)));\nfloat vy=dot(Pos,vec2(cos(Theta+0.5*PI),sin(Theta+0.5*PI)));\nfloat Result=0.0;\nif(abs(0.5*(200.0+500.0*abs(vx))*vy)<4.0){\n    Result+=(SmallAsterismParallelField(vx,Strength,Zoom)/(cosh(0.5*(200.0+500.0*abs(vx))*vy)-0.9));\n}\nreturn Result;\n}\n\n\n\n\nfloat SmallAsterismAndBloom(vec2 Pos,float Strength,float Zoom){\nfloat Result=0.5*(SmallAsterismField(Pos*(0.5+0.5*tanh(5.0*Strength-1.5)),0.0,1.0/smoothstep(0.0,1.0,Strength),Zoom));// 星芒，此处的(0.5+0.5*tanh(5.0*Strength-2.5))与下方保持一致，使得调整小光晕大小与bright的关系时星芒大小不变\nResult*=1.0/exp(10.0*(0.5-0.5*tanh(5.0*(Strength-0.3))));// 这一行决定了小星芒亮度如何减弱\n\n\nfloat Bloom=0.0;\nif(length(Pos)<0.2*Strength){\n    Bloom+=0.7/(5.0+0.01*exp(+60.0/smoothstep(0.0,1.0,Strength)*length(0.75*Pos*1.2)));\n    Bloom+=10.5/(10.0+exp(+24.0/smoothstep(0.0,1.0,Strength)*(length(1.5*Pos*1.7)-0.0)));\n}\nResult=max(0.7*Result,Bloom)+0.3*Result;\nreturn Result;\n\n}\n\nfloat HaloOutside(vec2 Pos,vec2 Translate,float Strength,float Zoom){\n    Translate*=0.2;\n    Pos+=1.2*Translate;\n    float EquivalentRadius=1.5*Zoom*length(Pos);\n    float Theta=atan(Pos.y/Pos.x);\n    float Result=0.0;\n    if(-0.4+EquivalentRadius<0.2 && -0.4+EquivalentRadius>-0.2){\n    Result+=0.8*pow(cos(Strength-1.0),12.0)*(0.4+0.1*pow(cos(Theta),50.0))*exp(-200.0*(-0.4+EquivalentRadius)*(-0.4+EquivalentRadius)*(1.0-0.5*pow(cos(Theta),4.0)))*((ContinuousRandom(Pos,3.3)/6.0*0.35*((0.8-(0.4+0.3*pow(cos(Theta),50.0)))/0.8))+0.65+0.4*((0.4+0.3*pow(cos(Theta),50.0))));\n    }\n\nreturn 1.5*Result;\n\n\n}\nfloat HaloThin(vec2 Pos,vec2 Translate,float Strength,float Zoom){\n\n    float Result=0.0;\n    Pos+=1.2*Translate;\n    float EquivalentRadius=1.5*length(Pos);\n\n    if(abs(-0.47+EquivalentRadius)<0.02){\n        vec2 PosforThe=Pos-0.2*Translate;\n    float Theta=Vec2Theta(PosforThe,Translate);\n    float ThetaPpposite=Vec2Theta(-PosforThe,Translate);\n    float ThetaStrength=exp(-8.*Theta*Theta)+exp(-24.0*(ThetaPpposite-40.0*Translate.x*Translate.y)*(ThetaPpposite-40.0*Translate.x*Translate.y));\n        Result+=smoothstep(0.0,1.0,   exp(-200.0*length(Translate)*length(Translate))+ exp(-500.0*pow(length(Translate),4.0))*0.7*max(1.0,length(Translate)*length(Translate))*ThetaStrength        )*pow(cos(Strength-1.0),8.0)*(0.6)*exp(-25000.0*(-0.47+EquivalentRadius)*(-0.47+EquivalentRadius))*((ContinuousRandom(Pos,11.4)/6.0*0.2)+0.8);\n    }\nreturn Result;\n\n\n}\nfloat HaloInside(vec2 Pos,vec2 Translate,float Strength,float Zoom){\n    Translate*=0.2;\n    Pos+=0.0*Translate;\n    float EquivalentRadius=1.5*Zoom*length(Pos);\n    float Theta=atan(Pos.y/Pos.x);\n    float Result=0.0;\n    if(-0.4+EquivalentRadius<0.2 && -0.4+EquivalentRadius>-0.2){\n        Result+=3.0*pow(cos(Strength-1.0),12.0)*(0.4+0.3*pow(cos(Theta),30.0))*exp(-200.0*(-0.4+EquivalentRadius)*(-0.4+EquivalentRadius)*(1.0-0.5*pow(cos(Theta),4.0)))*((ContinuousRandom(Pos,3.0)/6.0*0.35*((0.8-(0.4+0.3*pow(cos(Theta),50.0)))/0.8))+0.65+0.4*((0.4+0.3*pow(cos(Theta),50.0))));\n        Result-=3.0*pow(cos(Strength-1.0),12.0)*(0.4+0.3*pow(cos(Theta),100.0))*exp(-200.0*(-0.4+EquivalentRadius)*(-0.4+EquivalentRadius)*(1.0-0.5*pow(cos(Theta),4.0)))*((ContinuousRandom(Pos,3.0)/6.0*0.35*((0.8-(0.4+0.3*pow(cos(Theta),50.0)))/0.8))+0.65+0.4*((0.4+0.3*pow(cos(Theta),50.0))));\n        Result+=0.3*pow(cos(Strength-1.0),12.0)*exp(-200.0*(-0.4+EquivalentRadius)*(-0.4+EquivalentRadius))*((ContinuousRandom(Pos,3.0)/6.0*0.35)+0.65+0.4);\n    }\n    return 0.75*Result;\n\n\n}\n\n\nfloat CicFlarefield(vec2 Pos,float Strength,float Zoom){\n    float EquivalentRadius=Zoom*length(Pos);\n    float Result=max(0.0,exp(-pow(EquivalentRadius,8.0))+0.1*exp(-16.0*(EquivalentRadius-0.9)*(EquivalentRadius-0.9))+0.1*exp(-16.0*(EquivalentRadius+0.9)*(EquivalentRadius+0.9))-0.7*exp(-pow(EquivalentRadius,2.0)));\n    \n    \n    return Result*pow(cos(Strength-1.0),20.0);\n}\nfloat DotFlarefield(vec2 Pos,float Strength,float Zoom){\n    float EquivalentRadius=Zoom*length(Pos);\n    float Result=exp(-pow(EquivalentRadius,2.0));\n    \n    \n    return Result*pow(cos(Strength-1.0),20.0);\n}\n\nvec4 Flarefield(vec2 Pos,vec2 Translate,float Strength){\n    vec4 Result=vec4(0.0);\n\n    if(exp(-0.0002/length(Translate)/length(Translate))>0.15){\n\n           Result=Blend(Result,0.4*vec4(\n        CicFlarefield(Pos+0.47*Translate,Strength,100.0),\n        CicFlarefield(Pos+0.47*Translate,Strength,100.0),\n        CicFlarefield(Pos+0.47*Translate,Strength,100.0),\n        CicFlarefield(Pos+0.47*Translate,Strength,100.0)\n        \n        ));\n    \n        for(float n=-0.35;n<20.0;n+=2.0){\n            if((3.0*Hash11(n*3.14514)+0.3)<2.3 &&\n               (1.0-(3.0*Hash11(n*3.14514)+0.3))*Translate.x<0.6 && (1.0-(3.0*Hash11(n*3.14514)+0.3))*Translate.x>-0.6\n            && (1.0-(3.0*Hash11(n*3.14514)+0.3))*Translate.y<0.6 && (1.0-(3.0*Hash11(n*3.14514)+0.3))*Translate.y>-0.6){\n                \n                float Component=0.7*Hash11(n*1.14514)*CicFlarefield(Pos+(3.0*Hash11(n*3.14514)+0.3)*Translate,Strength,20.0+30.0*Hash11(n*5.14514));\n                \n                Result=Blend(Result,Component*vec4(Hash31(2.145*n)*vec3(0.8,1.2,1.2),1.0));\n            }\n        \n        }\n        for(float n=-0.4;n<10.0;n+=2.0){\n            if(((2.0*Hash11(n*3.14514)+2.3)<2.3 || (2.0*Hash11(n*3.14514)+2.3)>3.8 )&&\n               (1.0-(2.0*Hash11(n*3.14514)+2.3))*Translate.x<0.6 && (1.0-(2.0*Hash11(n*3.14514)+2.3))*Translate.x>-0.6\n            && (1.0-(2.0*Hash11(n*3.14514)+2.3))*Translate.y<0.6 && (1.0-(2.0*Hash11(n*3.14514)+2.3))*Translate.y>-0.6){\n            \n                float Component=0.7*Hash11(n*1.14514)*CicFlarefield(Pos+(2.0*Hash11(n*3.14514)+2.3)*Translate,Strength,20.0+30.0*Hash11(n*5.14514));\n                \n                Result=Blend(Result,Component*vec4(Hash31(2.145*n)*vec3(1.2,0.8,1.2),1.0));\n            }\n            \n        }\n        for(float n=-1.61;n<20.0;n+=2.0){\n            if((3.0*Hash11(n*3.14514)+0.3)<2.3 &&\n               (1.0-(3.0*Hash11(n*3.14514)+0.3))*Translate.x<0.6 && (1.0-(3.0*Hash11(n*3.14514)+0.3))*Translate.x>-0.6\n            && (1.0-(3.0*Hash11(n*3.14514)+0.3))*Translate.y<0.6 && (1.0-(3.0*Hash11(n*3.14514)+0.3))*Translate.y>-0.6){\n                \n                float Component=0.8*Hash11(n*1.14514)*DotFlarefield(Pos+(3.0*Hash11(n*3.14514)+0.3)*Translate,Strength,20.0+100.0*Hash11(n*5.14514));\n                \n                Result=Blend(Result,Component*vec4(0.3+0.7*Hash31(2.145*n)*vec3(0.8,1.2,1.2),1.0));\n            \n            }\n        }\n        for(float n=-1.72;n<10.0;n+=2.0){\n            if(((2.0*Hash11(n*3.14514)+2.0)<2.3 || (2.0*Hash11(n*3.14514)+2.0)>3.8)&&\n               (1.0-(2.0*Hash11(n*3.14514)+2.0))*Translate.x<0.6 && (1.0-(2.0*Hash11(n*3.14514)+2.0))*Translate.x>-0.6\n            && (1.0-(2.0*Hash11(n*3.14514)+2.0))*Translate.y<0.6 && (1.0-(2.0*Hash11(n*3.14514)+2.0))*Translate.y>-0.6){\n              \n                float Component=0.8*Hash11(n*1.14514)*DotFlarefield(Pos+(2.0*Hash11(n*3.14514)+2.0)*Translate,Strength,20.0+100.0*Hash11(n*5.14514));\n                \n                Result=Blend(Result,Component*vec4(0.3+0.7*Hash31(2.145*n)*vec3(1.2,0.8,1.2),1.0));\n                \n            }\n        }\n    }\nreturn exp(-0.0002/length(Translate)/length(Translate))*Result;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\nfloat iTemperature=6500.0;//120.0+10000.0*iMouse.x/iResolution.x;//((0.5+0.5*cos(iTime*sqrt(3.0)))*10000.0+120.0);\n\nfloat iDistance=0.00000000000005;//*pow(10.0,10.*iMouse.y/iResolution.y);// lightyear\nfloat iPower=10000.0;// Sun\nfloat iEquivalentDistance=iDistance*sqrt(10000.0/iPower);\niEquivalentDistance=iEquivalentDistance/(1.0+0.5+0.5*tanh((iEquivalentDistance-200.0)/100.0));\nfloat iBright=(asin(2.0*(0.5-atan(0.8*log(iEquivalentDistance)+2.8)/PI)*(0.5-0.5*tanh(0.3*(log(iEquivalentDistance)-6.0)))-1.0)+0.5*PI)/PI;\n\n    vec2 StarPos;\n    StarPos.x=.5+0.2*sin(0.5*iTime);\n    StarPos.y=.5+0.2*sin(0.5*sqrt(3.)*iTime);\n    \n    \n    StarPos.y=((StarPos.y-0.5)*iResolution.y/iResolution.x)+0.5;\n    vec2 uv =vec2(fragCoord.x+0.5,fragCoord.y)/iResolution.xy;\n    vec2 ScreenPos=vec2(uv.x,((uv.y-0.5)*iResolution.y/iResolution.x)+0.5);\n    vec2 Direction = ScreenPos - StarPos; // 从恒星指向像素\n    vec2 ClipDistortedDirection=Direction*mat2x2(1.0/(1.0+0.5*(StarPos.x-0.5)*(StarPos.x-0.5)),0.0*(StarPos.x-0.5)*(StarPos.y-0.5),-1.3*(StarPos.x-0.5)*(StarPos.y-0.5),1.0);\n    vec2 RotateDistortedDirection=Direction*mat2x2(1.0,0.5*(StarPos.x-0.5)*(StarPos.y-0.5),-0.5*(StarPos.x-0.5)*(StarPos.y-0.5),1.0);\n       \n       \n    vec4 ColorOfAsterismAndBloom=vec4(0.0);   \n    if(iBright>0.05){\n    ColorOfAsterismAndBloom = vec4(// 大星芒光晕\n    min(RGB(iTemperature).r*AsterismAndBloom(ClipDistortedDirection,iBright,1.0 ),1.0),\n    min(RGB(iTemperature).g*AsterismAndBloom(ClipDistortedDirection,iBright,1.1),1.0),\n    min(RGB(iTemperature).b*AsterismAndBloom(ClipDistortedDirection,iBright,1.2),1.0),\n    min(AsterismAndBloom(ClipDistortedDirection,iBright,1.0),1.0)\n    );\n    }\n\n    \n    ClipDistortedDirection=ClipDistortedDirection*3.0;\n    float ComponentOfColorOfSmallAsterismAndBloom=min(SmallAsterismAndBloom(ClipDistortedDirection*(1.0/(0.5+0.5*tanh(5.0*(iBright-0.15)))),iBright,1.0),1.0);// 此处的(0.5+0.5*tanh(5.0*iBright-2.5))与上方保持一致，使得调整小光晕大小与bright的关系时星芒大小不变\n    vec4 ColorOfSmallAsterismAndBloom = vec4(ComponentOfColorOfSmallAsterismAndBloom);// 小星芒光晕\n    float pointStrength=0.0;\n   //if(abs((ClipDistortedDirection.x*iResolution.x))<=1.5 && abs((ClipDistortedDirection.y*iResolution.x))<=1.5){// 星点\n    if(length((ClipDistortedDirection*iResolution.x))<=3.0){   \n       pointStrength=27.0*iBright*exp(-0.5*length((ClipDistortedDirection*iResolution.x)));\n         \n   }  \n      \n    fragColor=vec4(\n    max(1.0*(ColorOfSmallAsterismAndBloom.r+ColorOfAsterismAndBloom.r*(1.0-ColorOfSmallAsterismAndBloom.a)),min((0.6*RGB(iTemperature).r+0.4)*pointStrength,1.0)),\n    max(1.0*(ColorOfSmallAsterismAndBloom.g+ColorOfAsterismAndBloom.g*(1.0-ColorOfSmallAsterismAndBloom.g)),min((0.6*RGB(iTemperature).g+0.4)*pointStrength,1.0)),\n    max(1.0*(ColorOfSmallAsterismAndBloom.b+ColorOfAsterismAndBloom.b*(1.0-ColorOfSmallAsterismAndBloom.b)),min((0.6*RGB(iTemperature).b+0.4)*pointStrength,1.0)),\n    max((ColorOfSmallAsterismAndBloom.a+ColorOfAsterismAndBloom.a*(1.0-ColorOfSmallAsterismAndBloom.a)),    min(                              pointStrength,1.0)))\n    ;\n  \n  \n  \n  if(iBright>0.45){\n   vec4 Halo=vec4(\n   RGB(iTemperature).r*HaloOutside(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.2),\n   RGB(iTemperature).g*HaloOutside(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.1),\n   RGB(iTemperature).b*HaloOutside(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.0),\n   HaloOutside(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.0)\n   );\n    \n   vec4 Haloin=vec4(\n   RGB(iTemperature).r*HaloInside(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.2),\n   RGB(iTemperature).g*HaloInside(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.1),\n   RGB(iTemperature).b*HaloInside(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.0),\n   HaloInside(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.0)\n   );\n   vec4 Halothin=vec4(\n   RGB(iTemperature).r*HaloThin(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.2),\n   RGB(iTemperature).g*HaloThin(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.1),\n   RGB(iTemperature).b*HaloThin(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.0),\n   HaloThin(RotateDistortedDirection,(StarPos-vec2(0.5,0.5)),iBright,1.0)\n   );\n    \n    fragColor=vec4(\n    (Halo.r*Halo.a+fragColor.r*(1.0-Halo.a)),\n    (Halo.g*Halo.a+fragColor.g*(1.0-Halo.a)),\n    (Halo.b*Halo.a+fragColor.b*(1.0-Halo.a)),   \n    (Halo.a+fragColor.a*(1.0-Halo.a))\n    );\n    \n    fragColor=vec4(\n    (Haloin.r*Haloin.a+fragColor.r*(1.0-Haloin.a)),\n    (Haloin.g*Haloin.a+fragColor.g*(1.0-Haloin.a)),\n    (Haloin.b*Haloin.a+fragColor.b*(1.0-Haloin.a)),   \n    (Haloin.a+fragColor.a*(1.0-Haloin.a))\n    );\n    \n    fragColor=vec4(\n    clamp((Halothin.r*Halothin.a+fragColor.r),0.0,1.0),\n    clamp((Halothin.g*Halothin.a+fragColor.g),0.0,1.0),\n    clamp((Halothin.b*Halothin.a+fragColor.b),0.0,1.0),   \n    clamp((Halothin.a+fragColor.a)           ,0.0,1.0) \n    );\n    \n    \n    \n    }\n    if(abs((((ScreenPos.x-0.5)*(-(StarPos-vec2(0.5,0.5))).y+(ScreenPos.y-0.5)*((StarPos-vec2(0.5,0.5))).x)/(length(StarPos-vec2(0.5,0.5)))))<0.06 \n    && iBright>0.6\n    && ((((ScreenPos.x-0.5)*((StarPos-vec2(0.5,0.5))).x+(ScreenPos.y-0.5)*((StarPos-vec2(0.5,0.5))).y)/(length(StarPos-vec2(0.5,0.5)))))<1.0*(0.025+length(StarPos-vec2(0.5,0.5)))){\n    vec4 Flare=Flarefield(Direction,(StarPos-vec2(0.5,0.5)),iBright)*vec4(RGB(iTemperature),1.0);\n    \n    fragColor=vec4(\n    \n    (Flare.r*Flare.a+fragColor.r),\n    (Flare.g*Flare.a+fragColor.g),\n    (Flare.b*Flare.a+fragColor.b),   \n    (Flare.a+fragColor.a)\n    \n    \n    );\n    }\n    \n    \n    \n    \n    \n    //fragColor.r=-log(1.-pow(fragColor.r,2.2));\n    //fragColor.g=-log(1.-pow(fragColor.g,2.2));\n    //fragColor.b=-log(1.-pow(fragColor.b,2.2));\n    //fragColor.a=-log(1.-pow(fragColor.a,2.2));\n    //\n    //\n    //fragColor.r=pow(1.-exp(-fragColor.r),1.0/2.2);\n    //fragColor.g=pow(1.-exp(-fragColor.g),1.0/2.2);\n    //fragColor.b=pow(1.-exp(-fragColor.b),1.0/2.2);\n    //fragColor.a=pow(1.-exp(-fragColor.a),1.0/2.2);\n    \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"X33cR8","date":"1734687638","viewed":231,"name":"星芒","username":"baopinsui","description":"for fun","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["space","stars"],"hasliked":0,"parentid":"","parentname":""}}