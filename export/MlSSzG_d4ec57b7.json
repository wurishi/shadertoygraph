{"ver":"0.1","info":{"id":"MlSSzG","date":"1444512541","viewed":5162,"name":"protoplasm - shorter","username":"FabriceNeyret2","description":"short & simplified version of [url]https://www.shadertoy.com/view/lllSWr[/url]","likes":103,"published":3,"flags":0,"usePreview":1,"tags":["3d","raymarching","short","spheremarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// short & simplified version of https://www.shadertoy.com/view/lllSWr\n\n\nmat4 m = mat4( 0,   1.8,  1.2, 0,  // random 3x3 rotation and /2 scaling ( padded to 4x4 )\n              -1.6,  .7, -1,   0,\n       \t  \t  -1.2, -1,   1.3, 0,\n               0,    0,   0,   0);\n// float m = 2.;                  // shorter but less random\n\n// --- compact Perlin noise\n\n#define N(p)   ( 2.* texture( iChannel0, (p).xy/256. ) - 1. )                      // random value in [-1,1]\nvec4 P(vec4 p) { return N(p*=m/4.)/2. + N(p*=m)/4. + N(p*=m)/8.  + N(p*=m)/16. ;}  // \"Perlin\" value noise\n\n// --- using the base ray-marcher of Trisomie21: https://www.shadertoy.com/view/4tfGRB\n\nvoid mainImage( out vec4 f, vec2 w ) {\n    \n    vec4 p = vec4(w,0,1)/iResolution.yyxy-.5, d,u,t; p.x-=.4;    // init ray. p = position on ray\n    d = p; p.z += 10.;                                           // ray dir d = ray0-vec3(0)\n    float  T=iTime, x=1e9, l;\n    f = vec4(0,.2,0,1);                                          // bg color\n\n    for (float i=1.; i>0.; i-=.01)                               // ray march 100 steps\n        u = .03* floor( p/vec4(8,8,1,1) +3.5 ), t = p, \n\n        // try = instead of += !\n \t\tt +=   P( t+vec4(T,0,0,0) )  *  ( 4.6 - 4.*cos(T/16.) ), // distort space with Perlin noise * waves\n \n        x = max( abs( fract(l=length(t.xyz)) -.5 ) ,  l-7. ),    // distance to oignon layers\n        x<.01 ? f += (1.-f)*.4*i*i, x=.1 : x,                    // hit : blend voxel volor\n                \n        p += d*x;                                                // march ray\n     \n}\n","name":"Image","description":"","type":"image"}]}