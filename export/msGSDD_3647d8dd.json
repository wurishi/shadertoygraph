{"ver":"0.1","info":{"id":"msGSDD","date":"1681115368","viewed":87,"name":"2D (noisy) Motion blur","username":"OSuKaRuXD","description":"a noisy atempt to make a 2D motion blur postprocessing. I'm working with trial and error. I'm still learning. All suggestions are highly appreciated. I somehow will figure out how to smooth the effect.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["2d","video","motionblur","vandame"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n}\n//All the interesting part is in the Buffer A tab ;D","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 px = 1.0/iResolution.xy;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 tex = texture(iChannel0,uv);\n    vec4 tex2 = texture(iChannel0,uv)*(iTime+1.0);\n    vec4 tex3 = texture(iChannel0,uv)*(iTime-1.0);\n\n    //Getting the mask\n    //getting the mask red channel\n    float obt = 2.0;\n    float mask_r = max(dFdx(tex.r / tex2.r),dFdy(tex.r / tex3.r));\n    \n        //now trying to smooth the noise\n    uv -= px;\n    mask_r += mask_r*5.0;\n    uv += px*1.0;\n    mask_r -= mask_r*5.0;\n    uv.x -= px.x*5.0;\n    mask_r += mask_r*5.0;\n    uv.y += px.y*5.0;\n    mask_r -= mask_r*5.0;\n    uv.x += px.x*5.0;\n    mask_r += mask_r*5.0;\n    uv.y -= px.y*5.0;\n    mask_r -= mask_r*5.0;\n    \n    //getting the mask green channel\n    float mask_g = max(dFdx(tex.g / tex2.g),dFdy(tex.g / tex3.g));\n    \n        //now trying to smooth the noise\n    uv -= px;\n    mask_g += mask_g*5.0;\n    uv += px*1.0;\n    mask_g -= mask_g*5.0;\n    uv.x -= px.x*5.0;\n    mask_g += mask_g*5.0;\n    uv.y += px.y*5.0;\n    mask_g -= mask_g*5.0;\n    uv.x += px.x*5.0;\n    mask_g += mask_g*5.0;\n    uv.y -= px.y*5.0;\n    mask_g -= mask_g*5.0;\n    \n    //getting the mask blue channel\n    float mask_b = max(dFdx(tex.b / tex2.b),dFdy(tex.b / tex3.b));\n    \n        //now trying to smooth the noise\n    uv -= px;\n    mask_b += mask_b*5.0;\n    uv += px*1.0;\n    mask_b -= mask_b*5.0;\n    uv.x -= px.x*5.0;\n    mask_b += mask_b*5.0;\n    uv.y += px.y*5.0;\n    mask_b -= mask_b*5.0;\n    uv.x += px.x*5.0;\n    mask_b += mask_b*5.0;\n    uv.y -= px.y*5.0;\n    mask_b -= mask_b*5.0;\n    \n    \n    \n    //mixing it all in one\n    float mask = mix(mask_r,mask_g,mask_b);\n    \n\n    //Making the blur\n\n    if (mask != 0.0)\n    {\n        uv -= 0.5*px;\n        tex2 = texture(iChannel1,uv);\n        uv += px;\n        tex2 += texture(iChannel1,uv);\n        uv.y -= px.y;\n        tex2 += texture(iChannel1,uv);\n        uv.x -= px.x-.0001 *(iTime*.001);\n        uv.y += px.y+.0001 *(iTime*.001);\n        tex2 += texture(iChannel1,uv);\n        tex2 /= 4.0;\n        //tex2 = clamp(tex2*1.0,0.0,1.0);\n        tex = max(mix(tex,tex2,smoothstep(1.0,0.1,mask)),clamp(tex+mask,0.1,1.0));\n        //tex=mask_r;\n     }\n       \n\n       \n\tfragColor = tex;\n}","name":"Buffer A","description":"","type":"buffer"}]}