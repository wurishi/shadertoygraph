{"ver":"0.1","info":{"id":"DtV3zm","date":"1683744624","viewed":48,"name":"SDF subtraction test","username":"maftkd","description":"Testing combining two sdf functions with max instead of min","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Coords relative to frame width - aspect agnostic\n    vec2 uv = fragCoord/iResolution.x;\n    // y needs to be fudged\n    // todo - calculate fudge instead of hardcoding it\n    //      - and then update some magic numbers\n    uv.y+=0.3;\n\n    vec2 p = uv;\n    p.x -= 0.5;\n    p.y -= 0.6;\n    \n    float cir = sdCircle(p, 0.25);\n    \n    p.x -= 0.2 + sin(iTime) * 0.1;\n    float cir2 = sdCircle(p, 0.2);\n    \n    float shape = max(cir, -cir2);\n\n    // Output to screen\n    fragColor = vec4(step(0.,shape), 0, 0,1.0);\n}","name":"Image","description":"","type":"image"}]}