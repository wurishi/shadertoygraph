{"ver":"0.1","info":{"id":"X323Wt","date":"1732597616","viewed":26,"name":"My study of Voronoi Extended","username":"audifax","description":"My study of Voronoi Extended","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1) \n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Number of seed points\n    const int numSeeds = 7;\n    \n    // Array to store seed points\n    vec2 seeds[numSeeds];\n    seeds[0] = vec2(0.1, 0.2);\n    seeds[1] = vec2(0.8, 0.6);\n    seeds[2] = vec2(0.3, 0.7);\n    seeds[3] = vec2(0.6, 0.4);\n    seeds[4] = vec2(0.1, 0.9);\n    seeds[5] = vec2(0.9, 0.9);\n    seeds[6] = vec2(0.9, 0.2);\n    \n    // Initialize variables for closest seed and its distance\n    float minDistance = 1.0;\n    vec2 closestSeed = vec2(0.0);\n    \n    // Iterate through each seed point\n    for (int i = 0; i < numSeeds; i++) {\n        vec2 aSeed = 0.5 + 0.5*sin(iTime + 96.2831*seeds[i]);\n        // Calculate distance between current seed and current pixel\n        float distance = pow(distance(uv, aSeed), 3.);\n        \n        // Update closest seed and its distance if this seed is closer\n        if (distance < minDistance) {\n            minDistance = distance;\n            closestSeed = aSeed;\n        }\n    }\n    \n    // Output color based on closest seed\n    fragColor = vec4(closestSeed, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}