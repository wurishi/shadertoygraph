{"ver":"0.1","info":{"id":"4dSfzR","date":"1499021466","viewed":388,"name":"feel_screen_BA","username":"kloumpt","description":"huh, huh, huh","likes":6,"published":1,"flags":34,"usePreview":0,"tags":["huh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pass_final_tex iChannel0\n\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec4 base_color = texture(pass_final_tex, uv);\n    \n    fragColor = base_color;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define IN_SHADERTOY 1\n\n#ifndef IN_SHADERTOY\n    uniform sampler2D webcam_tex;\n    uniform sampler2D noise_tex;\n\n    uniform sampler2D pass_1_tex;\n    uniform sampler2D pass_2_tex;\n    uniform sampler2D pass_3_tex;\n    uniform sampler2D pass_final_tex;\n\n    uniform vec2 iResolution;\n    uniform float iTime;\n\n    \n\n#else\n\n\t#define webcam_tex iChannel0\n\t#define pass_1_tex iChannel1\n\t//#define pass_final_tex iChannel3\n\n#endif\n\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    #ifndef IN_SHADERTOY\n    vec2 webcam_uv = vec2(1.0) - uv;\n    #else\n    vec2 webcam_uv = uv;\n    #endif\n    vec2 off = 1.0 / iResolution.xy;\n    \n    float edge = 0.0;\n    edge -= 4.0 * length(texture(webcam_tex, webcam_uv).xyz);\n    edge += 1.0 * length(texture(webcam_tex, webcam_uv + vec2(+off.x, 0.0)).xyz);\n    edge += 1.0 * length(texture(webcam_tex, webcam_uv + vec2(-off.x, 0.0)).xyz);\n    edge += 1.0 * length(texture(webcam_tex, webcam_uv + vec2(0.0, +off.y)).xyz);\n    edge += 1.0 * length(texture(webcam_tex, webcam_uv + vec2(0.0, -off.y)).xyz);\n    \n    fragColor = vec4(edge);\n}\n\n\n\n#ifndef IN_SHADERTOY\nvoid main() {\n    mainImage(gl_FragColor, gl_FragCoord.xy);\n}\n#endif\n","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define IN_SHADERTOY 1\n\n#ifndef IN_SHADERTOY\n    uniform sampler2D webcam_tex;\n    uniform sampler2D noise_tex;\n\n  uniform sampler2D pass_1_tex;\n  uniform sampler2D pass_2_tex;\n  uniform sampler2D pass_3_tex;\n  uniform sampler2D pass_final_tex;\n\n  uniform vec2 iResolution;\n  uniform float iTime;\n\n    \n#else\n\n\t#define noise_tex iChannel0\n\t#define pass_1_tex iChannel1\n\t#define pass_2_tex iChannel2\n\t\n#endif\n\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    \n    vec4 base_color = vec4(0.0);\n    vec4 field = texture(pass_1_tex, uv);\n    \n    float intensity = step(0.1, texture(pass_1_tex, uv).r);\n    \n    vec2 off = 1.0 / iResolution.xy;\n    \n    for (float y = -1.0; y <= 1.0; y++) {\n\t    for (float x = -1.0; x <= 1.0; x++) {\n    \n    \t\tintensity += 0.11 * texture(pass_2_tex, uv + vec2(x, y) * off).r;\n        }\n    }\n    base_color = vec4(clamp(intensity, 0., 1.), 0, 0, 0);\n    \n    \n    \n    fragColor = base_color;\n}\n\n\n\n#ifndef IN_SHADERTOY\nvoid main() {\n    mainImage(gl_FragColor, gl_FragCoord.xy);\n}\n#endif\n","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"#define IN_SHADERTOY 1\n\n#ifndef IN_SHADERTOY\n    uniform sampler2D webcam_tex;\n    uniform sampler2D noise_tex;\n\n  uniform sampler2D pass_1_tex;\n  uniform sampler2D pass_2_tex;\n  uniform sampler2D pass_3_tex;\n  uniform sampler2D pass_final_tex;\n\n  uniform vec2 iResolution;\n  uniform float iTime;\n\n    \n#else\n\n\t#define pass_2_tex iChannel0\n\t#define webcam_tex iChannel1\n\n#endif\n\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ) {\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvec3 rgb2hsv(vec3 c) {\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 palettize(vec2 p) {\n    vec3 col;\n    col = pal( p.x, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.33,0.67) );\n    if( p.y>(1.0/7.0) ) col = pal( p.x, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.10,0.20) );\n    if( p.y>(2.0/7.0) ) col = pal( p.x, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.3,0.20,0.20) );\n    if( p.y>(3.0/7.0) ) col = pal( p.x, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,0.5),vec3(0.8,0.90,0.30) );\n    if( p.y>(4.0/7.0) ) col = pal( p.x, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,0.7,0.4),vec3(0.0,0.15,0.20) );\n    if( p.y>(5.0/7.0) ) col = pal( p.x, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(2.0,1.0,0.0),vec3(0.5,0.20,0.25) );\n    if( p.y>(6.0/7.0) ) col = pal( p.x, vec3(0.8,0.5,0.4),vec3(0.2,0.4,0.2),vec3(2.0,1.0,1.0),vec3(0.0,0.25,0.25) );\n    return col;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 base_color = texture(pass_2_tex, uv).rgb;\n    vec3 base_color2 = texture(webcam_tex, vec2(1.0) - uv).rgb;\n    vec3 hsv_color = rgb2hsv(base_color);\n    vec3 hsv_color2 = rgb2hsv(base_color2);\n    \n    vec3 tmp_color = palettize(vec2(cos((base_color.x * 2.0 - iTime) * 3.1415) * 0.5 + 0.5 , mod(iTime/100.0, 1.0)));\n    vec3 hsv_tmp_color = rgb2hsv(tmp_color);\n    base_color = hsv2rgb(vec3(\n        hsv_tmp_color.r,\n        hsv_color.g, \n        hsv_color2.b* 0.1 + hsv_color.b\n    ));\n    \n    \n    \n    fragColor = vec4(base_color, 1.0);\n}\n\n\n\n\n#ifndef IN_SHADERTOY\nvoid main() {\n    mainImage(gl_FragColor, gl_FragCoord.xy);\n}\n#endif\n","name":"Buf C","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"#define IN_SHADERTOY 1\n\n#ifndef IN_SHADERTOY\n    uniform sampler2D webcam_tex;\n    uniform sampler2D noise_tex;\n\n  uniform sampler2D pass_1_tex;\n  uniform sampler2D pass_2_tex;\n  uniform sampler2D pass_3_tex;\n  uniform sampler2D pass_final_tex;\n\n  uniform vec2 iResolution;\n  uniform float iTime;\n\n    \n#else\n\n\t#define pass_3_tex iChannel0\n\t#define pass_2_tex iChannel1\n\n#endif\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec4 base_color = texture(pass_3_tex, uv);\n    \n    fragColor = base_color;\n}\n\n\n\n\n#ifndef IN_SHADERTOY\n\nvoid main() {\n    mainImage(gl_FragColor, gl_FragCoord.xy);\n}\n#endif\n","name":"Buf D","description":"","type":"buffer"}]}