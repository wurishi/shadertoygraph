{"ver":"0.1","info":{"id":"4dBfWV","date":"1502143075","viewed":603,"name":"Laser Beam","username":"AlphaRogue","description":"Sinus waves, looking like circular laser beam.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["waves","sin","cos","sinus","helix","circular","cosinus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI2 1.570796326\n#define MOD .001\n#define FREQ .8\n\nfloat cosinus (float angle, float amplitude) { return cos(angle / FREQ) * amplitude; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 lM = vec2(max(iResolution.x, iResolution.y), min(iResolution.x, iResolution.y));\n\tvec2 pos = ( fragCoord -.5 * lM) / lM.x;\n\n\tfloat advance = pos.x + .5;\n\n\tfloat thickness = MOD / 1.5;\n\tfloat val = iTime * .4 + (advance / MOD) * M_PI2;\n\tfloat size = thickness * 5. * (cosinus(val, 1.) + 2.);\n\n\tpos.x = mod(advance, MOD);\n\tbool isIn = abs(pos.y) - thickness < 0.;\n\tif (distance(pos, vec2(0., sin(val / FREQ) * .05)) < size && (!isIn || cosinus(val, 1.) > .1 * M_PI2)) \n        fragColor = vec4(cosinus(val, -1.), cosinus(val, 1.), .8, 1.);\n\telse if (isIn) {\n\t\tfloat delta = abs(sin(advance - iTime));\n\t\tfragColor = vec4(.2, .1 + .1 * delta, .4 + .3 * delta, 1.);\n\t}\n\telse fragColor = vec4(0.);\n}","name":"Image","description":"","type":"image"}]}