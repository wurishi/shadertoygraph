{"ver":"0.1","info":{"id":"WsXBRn","date":"1587565018","viewed":124,"name":"Polar noise loop","username":"spanditime","description":"Polar noise loop\n\nparameters desc:\nmaxRadius - max radius of the shape\nminRadius - min radius of the shape\nnoiseLoopRadius - basically the sharpness of shape, goes from 0.(circle) to inf\nanimationSpeed - speed of animation, goes from 0.(stop) to inf\n\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","colors","perlin","shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 p){\n    return fract(sin(p.x*102.33+p.y*3623.42)*27827.);\n}\n\nfloat smoothrand(vec2 p){\n    vec2 lv = fract(p);\n    vec2 id = floor(p);\n    \n    lv = lv*lv*(3.-2.*lv);\n    \n    float b = mix(rand(id),rand(id+vec2(1.,0.)),lv.x);\n\tfloat t = mix(rand(id+vec2(0.,1.)),rand(id+vec2(1.,1.)),lv.x);\n    \n    return mix(b,t,lv.y);\n}\n\nfloat noise(vec2 p,uint depth){\n    float c=0.;\n    float amp=1.;\n    float a=0.;\n    for(uint i = 0U;i<=depth;i++){\n        c+=smoothrand(p+vec2(float(i)))*amp;\n        \n        p*=2.*vec2(( (i%2U == 0U)?(-1.):(1.) ),( (i%2U == 0U)?(1.):(-1.) ));\n        a+=amp;\n        amp/=2.;\n    }\n    return c / a;\n}\n\n\n//shape and animation parameters\nfloat maxRadius = 1.;\nfloat minRadius = 0.3;\nfloat noiseLoopRadius = 3.;\nfloat animationSpeed = .5;\n\nfloat noiseLoop(vec2 uv, float t){\n    float len = length(uv);\n\tfloat v = minRadius + noise((uv/len+vec2(t,0.))*noiseLoopRadius,10U)*(maxRadius-minRadius);\n    return smoothstep(v-0.005,v,len);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\t\n    float t=iTime*animationSpeed;\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(t+uv.xyx+vec3(0,2,4));\n    \n    //vec2 bv = uv;\n    //bv*=2./maxRadius;\n    \n    //float len = length(bv);\n    //vec3 shape_col = vec3(noise(vec2(bv.x*bv.x*bv.y*bv.y,len-t),2U),noise(vec2(bv.x*bv.x*bv.y*bv.y+100.,len-t),2U),noise(vec2(bv.x*bv.x*bv.y*bv.y-100.,len-t),2U));\n    \n    col = mix(vec3(0.),col,noiseLoop(uv,t));\n    //col = mix(shape_col,col,noiseLoop(uv/0.95,t));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}