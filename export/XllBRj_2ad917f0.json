{"ver":"0.1","info":{"id":"XllBRj","date":"1512503697","viewed":1047,"name":"Buffer computed points.","username":"patu","description":"My first attempt to calculate values in buffer and use them in Image pass.\n\n\n","likes":26,"published":3,"flags":32,"usePreview":0,"tags":["points","buffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 F, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv.x -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    uv.x += .5;\n    \n\tF *= 0.;\n    \n    for (int y = 0; y < 128; y++) {\n    \tvec4 c = texelFetch(iChannel0, ivec2(0, y), 0);\n        F = mix(F, abs(c.xyzx), smoothstep(0., 1., 1. / length(uv - c.xy) * .015));\n    }    \n}\n\n/* \n\n\thttp://bit.ly/shadertoy-plugin\n \n*/","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float hash12(vec2 p) {\n\tfloat h = dot(p , vec2(127.1,311.7));\t\n    return fract(abs(sin(h)*43758.5453123));\n}\n\nvoid mainImage(out vec4 C, in vec2 fragCoord)\n{\n    C = vec4(-.5);\n    \n    if (int(fragCoord.x) == 0 && int(fragCoord.y) < 128) {        \n\n        // First frame - randomize \n        if (iFrame == 0) {            \n            \n            // initial position\n            C.x = 0.5;\n            C.y = hash12(fragCoord.yx) / 2. -.5;\n            \n            // initial speed vector\n            C.z = hash12(fragCoord.xy * C.xy);\n            C.w = hash12(C.xy * 1000.+ iDate.w * 100.);            \n            \n        \n        // after first frame - move\n        } else {\n            C = texelFetch(iChannel0, ivec2(fragCoord.xy), 0) - .5;  \n\t\t\t\n            C.w -= .2;\n\t\t\t\n            if (abs(C.x) > .5) {\n                C.z = -C.z;\n            }\n\n            if (C.y < -.5) {\n                C.w = -C.w;                \n            }\n            \n            if (C.y > .5) {\n                C.w = -0.1;\n            }\n\t\t\t\n            C.xy += (C.zw) * 0.001;\n            \n    \t\tC += .5;        \n        }\n\t\t\n    }\t\n    \n    \n}","name":"Buffer A","description":"","type":"buffer"}]}