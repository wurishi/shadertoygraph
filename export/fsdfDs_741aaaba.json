{"ver":"0.1","info":{"id":"fsdfDs","date":"1657471099","viewed":82,"name":"Mandelbrot set simple demo","username":"E_mc2","description":"A very simple implementation of Mandelbrot set.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int intN = 20;\nfloat range = 1.2;  // 纵向范围\nfloat rMax = 5.0;  // 判定发散的半径阈值\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 c = (fragCoord+fragCoord-iResolution.xy)/iResolution.y;\n    c *= range;\n\n    vec2 z = vec2(0.0);\n    int i1 = 0;\n    for(;i1<intN;i1++)\n    {\n        z = vec2(z.x*z.x-z.y*z.y, 2.0*z.x*z.y);\n        z += c;\n        if(length(z)>rMax)\n            break;\n    }\n    float f1 = pow(float(i1)/float(intN), 1.2);\n    vec3 col = vec3(2.*f1, 1.*f1, 0.3);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}