{"ver":"0.1","info":{"id":"XlffD8","date":"1511692642","viewed":143,"name":"[WST1] Wroc fractal star","username":"ViynShade","description":"That shader uses property of floats to create fractal structure that consist of hyperbolas.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractalproximityerror"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Title: Wroc fractal star, Author: Kamil Grela\n// This shader is prepared for the first Wroclaw Shader Competition \n// organized by Faculty of Physics and Astronomy, Khronos Chapter and SIggraph Chapter from Wroclaw\n\nvec3 half_of(vec3 col, float phi0, vec2 p){\n    float omg = 3.14/100.0;\n    float phi = atan(p.y/p.x)+phi0;\n    \n    float d = length(0.5*p);\n    \n    float R = 0.4;\n    float dr = (0.3+0.1*sin(phi))*R;\n    \n    float s = 10000.0;\n    float mp = 20.0;\n    \n    R = R*sin(phi*iTime*mp+iTime*omg);\n                     \n    d = 1.0-smoothstep(R-dr, R+dr, d);\n    \n    col *= (1.0-0.4*cos(phi*d*iTime))*cos(phi);\n   \t\n    return col*d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 q = fragCoord.xy / iResolution.xy;\n\tvec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \n\tvec3 col = vec3(0.0,0.0,0.0);\n    col += half_of(vec3(1.0,1.0,0.0), 0.0, p);\n    col += half_of(vec3(1.0,0.0,1.0), 3.14/4.0, p);\n    \n    col *= 1.0/(2.5);\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}