{"ver":"0.1","info":{"id":"ll3SD8","date":"1479247354","viewed":202,"name":"Dornia Straight v0.36 (WIP)","username":"ttoinou","description":"Continuing my font from https://www.shadertoy.com/view/XtcXz4 .\nI bit packed segments coords : I'm using 23 bits of float. I have a complete alphabet with capitals, accents, ponctuation and maths symbols. Optimizing not finished (horrible on compiling!).","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["text","font"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// modified version of \n// https://www.shadertoy.com/view/XdXGRB\n\nvoid _ch4(in float c);\nvoid _ch8(in vec2 a);\nvoid _ch16(in vec3 a);\n\n/*\n * Character design\n */\n\n#define SUBX 5.\n#define SUBY 9.\n#define SUBGRID SUBX * SUBY\n#define SUBPLUS 3.\n#define SUBM  49.\n#define SUBM2 2401.\n#define SUBM3 117649.\n\n#define SUB2(x,y) (1. + 2.*x + 2.*y*SUBX)\n\n#define PACK4(A,B,C,D) (A+SUBM*(B+SUBM*(C+SUBM*D)))\n#define p1(a,b,c,d) PACK4(a,b,c,d)\n#define p2(a,b,c,d,e,f,g,h) vec2(PACK4(a,b,c,d),PACK4(e,f,g,h))\n#define p3(a,b,c,d,e,f,g,h,i,j,k,l) vec3(PACK4(a,b,c,d),PACK4(e,f,g,h),PACK4(i,j,k,l))\n#define p4(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) vec4(PACK4(a,b,c,d),PACK4(e,f,g,h),PACK4(i,j,k,l),PACK4(m,n,o,p))\n\n// Main points\n\n#define A_ SUB2(0.,0.)\n#define B_ SUB2(1.,0.)\n#define C_ SUB2(2.,0.)\n#define D_ SUB2(0.,1.)\n#define E_ SUB2(1.,1.)\n#define F_ SUB2(2.,1.)\n#define G_ SUB2(0.,2.)\n#define H_ SUB2(1.,2.)\n#define I_ SUB2(2.,2.)\n#define J_ SUB2(0.,3.)\n#define K_ SUB2(1.,3.)\n#define L_ SUB2(2.,3.)\n#define M_ SUB2(0.,4.)\n#define N_ SUB2(1.,4.)\n#define O_ SUB2(2.,4.)\n\n// Extra points\n\n#define S_ SUBGRID+1.\n#define T_ SUBGRID+2.\n#define U_ SUBGRID+3.\n\n// Middle points for complicated characters\n\n#define AB_ SUB2(0.5,0.) // for S\n#define AD_ SUB2(0.,0.5) // for S\n#define DH_ SUB2(0.5,1.5) // for (\n#define HJ_ SUB2(0.5,2.5) // for (\n#define FH_ SUB2(1.5,1.5) // for (\n#define HL_ SUB2(1.5,2.5) // for (\n#define BE_ SUB2(1.,0.5) // for ()\n#define KN_ SUB2(1.,3.5) // for ()\n#define EH_ SUB2(1.,1.5) // for {}\n#define EI_ SUB2(1.5,1.5) // for &\n#define HK_ SUB2(1.,2.5) // for {}\n#define KM_ SUB2(.5,3.5) // for comma\n#define GH_ SUB2(0.5,2.) // for Z and {\n#define HI_ SUB2(1.5,2.) // for Z and B and }\n#define BC_ SUB2(1.5,0.) // for B and D\n#define NO_ SUB2(1.5,4.) // for B and D\n#define CF_ SUB2(2.,0.5) // for 4, D\n#define FI_ SUB2(2.,1.5) // for B\n#define DG_ SUB2(0.,1.5) // for S\n#define IL_ SUB2(2.,2.5) // for S, B\n#define LO_ SUB2(2.,3.5) // for S, B, D\n#define JK_ SUB2(0.5,3.)// for ;\n#define GJ_ SUB2(0.,2.5) // for =\n#define HI_ SUB2(1.5,2.) // for *\n#define DE_ SUB2(0.5,1.) // for *\n#define EF_ SUB2(1.5,1.) // for *\n#define MN_ SUB2(0.5,4.) // for !=\n#define BF_ SUB2(1.5,0.5) // for !=\n#define AE_ SUB2(.5,.5) // for %\n#define KO_ SUB2(1.5,3.5) // for %\n#define JM_ SUB2(0.,3.5) // for #\n\n// Small letters\n\n//const vec2 ch_a =vec2(4932900,1746);\n//const vec2 ch_b =vec2(4932900,2010);\n\nconst vec4 c_ab = p4( G_,I_,O_,M_, J_,L_,0.,0.,G_,I_,O_,M_, A_,M_,0.,0. );\n#define _a _ch8(c_ab.xy);\n#define _b _ch8(c_ab.zw);\n\n//const vec3 ch_i = vec3( -1. , p2( D_,D_,0.,M_, G_,0.,0.,0. ) );\nconst vec4 c_ic = vec4( -1. , p2( E_,E_,0.,H_, N_,0.,0.,0. ) , p1( I_,G_,M_,O_ ) );\n#define _c _ch4(c_ic.w);\n#define _i _ch16(c_ic.xyz);\n\nconst vec4 c_de = p4( I_,G_,M_,O_, C_,0.,0.,0., O_,M_,G_,I_, L_,J_,0.,0.  );\n#define _d _ch8(c_de.xy);\n#define _e _ch8(c_de.zw);\n\nconst vec4 c_fg = p4( C_,B_,N_,0., G_,I_,0.,0.,O_,M_,G_,I_, U_,S_,0.,0. );\n#define _f _ch8(c_fg.xy);\n#define _g _ch8(c_fg.zw);\n\nconst vec4 c_hk = p4( G_,I_,O_,0., M_,A_,0.,0.,A_,M_,I_,0., K_,O_,0.,0. );\n#define _h _ch8(c_hk.xy);\n#define _k _ch8(c_hk.zw);\n\nconst vec4 c_jn = vec4( -2. , p2( E_,E_,0.,H_, T_,S_,0.,0. ) , p1( M_,G_,I_,O_ ) );\n#define _j _ch16(c_jn.xyz);\n#define _n _ch4(c_jn.w);\n\nconst vec4 c_ls = vec4( -3. , p1( M_,A_,0.,0.) , p2( I_,G_,J_,L_, O_,M_,0.,0. ) );\n#define _l _ch8(c_ls.xy);\n#define _s _ch8(c_ls.zw);\n\nconst vec4 c_mo = p4( M_,G_,I_,O_, 0.,N_,H_,0.,M_,G_,I_,O_, M_,0.,0.,0. );\n#define _m _ch8(c_mo.xy);\n#define _o _ch8(c_mo.zw);\n\nconst vec4 c_pq = p4( M_,O_,I_,G_, S_,0.,0.,0.,O_,M_,G_,I_, U_,0.,0.,0. );\n#define _p _ch8(c_pq.xy);\n#define _q _ch8(c_pq.zw);\n\nconst vec4 c_tr = vec4( -4. , p2( A_,M_,N_,0., G_,H_,0.,0. ) , p1( M_,G_,I_,0. ) );\n#define _t _ch16(c_tr.xyz);\n#define _r _ch4(c_tr.w);\n\nconst vec4 c_Bu = p4( A_,BC_,CF_,FI_, HI_,IL_,LO_,NO_,  M_,A_,G_,HI_ , G_,M_,O_,I_ );\n#define _B _ch16(c_Bu.xyz);\n#define _u _ch4(c_Bu.w);\n\n//const vec2 ch_v = p2( G_,J_,N_,L_, I_,0.,0.,0. );\n//#define _v _ch8(ch_v);\nconst vec4 c_yvz = p4( G_,M_,O_,0., I_,U_,S_,0.,G_,N_,I_,0.,G_,I_,M_,O_ );\n#define _y _ch8(c_yvz.xy);\n#define _v _ch4(c_yvz.z);\n#define _z _ch4(c_yvz.w);\n\nconst vec4 c_wx = p4( G_,M_,O_,I_, 0.,N_,H_,0.,G_,O_,0.,I_, M_,0.,0.,0. );\n#define _w _ch8(c_wx.xy);\n#define _x _ch8(c_wx.zw);\n\n// Capitals letters\n\n//const vec2 ch_D = p2( A_,B_,F_,L_,  N_,M_,A_,0. );\nconst vec4 c_AD = p4( M_,A_,C_,O_, 0.,G_,I_,0.,A_,BC_,CF_,LO_,  NO_,M_,A_,0. );\n#define _A _ch8(c_AD.xy);\n#define _D _ch8(c_AD.zw);\n\n\n\nconst vec4 c_EF = p4( C_,A_,M_,O_ , 0.,I_,G_,0. , C_,A_,M_,0. , G_,H_,0.,0. );\n#define _E _ch8(c_EF.xy);\n#define _F _ch8(c_EF.zw);\n\nconst vec4 c_GH = p4( C_,A_,M_,O_ , I_,H_,0.,0.,A_,M_,0.,G_ , I_,0.,C_,O_  );\n#define _G _ch8(c_GH.xy);\n#define _H _ch8(c_GH.zw);\n\nconst vec4 c_IJ = p4( A_,C_,0.,B_ , N_,0.,M_,O_,A_,C_,0.,B_ , N_,0.,M_,N_  );\n#define _I _ch8(c_IJ.xy);\n#define _J _ch8(c_IJ.zw);\n\nconst vec4 c_KCL = p4( C_,G_,O_,0. , A_,M_,0.,0. , C_,A_,M_,O_ , A_,M_,O_,0. );\n#define _K _ch8(c_KCL.xy);\n#define _C _ch4(c_KCL.z);\n#define _L _ch4(c_KCL.w);\n\nconst vec4 c_MO = p4( M_,A_,H_,C_ , O_,0.,0.,0.,A_,M_,O_,C_, A_,0.,0.,0. );\n#define _M _ch8(c_MO.xy);\n#define _O _ch8(c_MO.zw);\n\n//const vec2 ch_Q = p2( A_,M_,O_,C_, A_,0.,O_,U_ );\n//const vec2 ch_Q = p2( A_,M_,O_,C_, A_,0.,U_,N_ );\nconst vec4 c_PQ = p4( G_,I_,C_,A_, M_,0.,0.,0.,A_,M_,O_,C_, A_,0.,K_,O_ );\n#define _P _ch8(c_PQ.xy);\n#define _Q _ch8(c_PQ.zw);\n\n//const vec2 ch_R = p2( M_,A_,C_,I_, G_,O_,0.,0. );\n//const vec2 ch_S = p2( C_,A_,DG_,IL_, IL_,O_,M_,0. );\n//const vec2 ch_S = p2( C_,AB_,AD_,DG_, IL_,LO_,NO_,M_ );\nconst vec4 c_RS = p4( M_,A_,C_,I_, G_,0.,GH_,O_,C_,AB_,AD_,D_, L_,LO_,NO_,M_ );\n#define _R _ch8(c_RS.xy);\n#define _S _ch8(c_RS.zw);\n\nconst vec4 c_Tic = p4( A_,C_,0.,B_, N_,0.,0.,0.,D_,B_,F_,0., H_,N_,0.,0. );\n#define _T _ch8(c_Tic.xy);\n#define _icirc _ch8(c_Tic.zw);\n\nconst vec4 c_WX = p4( A_,M_,H_,O_, C_,0.,0.,0. , A_,O_,0.,M_, C_,0.,0.,0. );\n#define _W _ch8(c_WX.xy);\n#define _X _ch8(c_WX.zw);\n\nconst vec4 c_YZ = p4( A_,H_,N_,0., H_,C_,0.,0.,A_,C_,M_,O_, 0.,GH_,HI_,0. );\n#define _Y _ch8(c_YZ.xy);\n#define _Z _ch8(c_YZ.zw);\n\n// Digits\n\nconst vec4 c_01 = p4( A_,C_,O_,M_ , A_, 0. , H_ , H_,D_,B_,N_,0.,M_,O_,0.,0. );\n#define _0 _ch8(c_01.xy);\n#define _1 _ch8(c_01.zw);\n\nconst vec4 c_34 = p4( A_,C_,O_,M_,0.,G_,I_,0.,A_,G_,I_,0.,CF_,O_,0.,0. );\n#define _3 _ch8(c_34.xy);\n#define _4 _ch8(c_34.zw);\n\nconst vec4 c_78 = p4( A_,C_,M_,0.,G_,I_,0.,0.,A_,C_,O_,M_,A_,0.,G_,I_ );\n#define _7 _ch8(c_78.xy);\n#define _8 _ch8(c_78.zw);\n\nconst vec4 c_25 = p4( A_,C_,I_,G_,M_,O_,0.,0.,C_,A_,G_,I_,O_,M_,0.,0. );\n#define _2 _ch8(c_25.xy);\n#define _5 _ch8(c_25.zw);\n\nconst vec4 c_69 = p4( C_,A_,M_,O_,I_,G_,0.,0.,I_,G_,A_,C_,O_,M_,0.,0. );\n#define _6 _ch8(c_69.xy);\n#define _9 _ch8(c_69.zw);\n\n// Misc & Ponctuations & Letter V\n\nconst vec4 c_exclV = vec4( -3. , p3( A_,J_,0.,M_, M_,0.,0.,0.,A_,N_,C_,0.) );\n#define _excl _ch16(c_exclV.xyz);\n#define _V _ch4(c_exclV.w);\n\nconst vec4 c_codo = vec4(-5. , p1(K_,KM_,0.,0.),-5. , p1(K_,K_,0.,0.));\n#define _com _ch8(c_codo.xy);\n#define _dot _ch8(c_codo.zw);\n\nconst vec4 c_qubk = p4( D_,AD_,AB_,BC_, CF_,F_,H_,K_, 0.,N_,N_,0.,A_, O_,0.,0. );\n#define _quest _ch16(c_qubk.xyz);\n#define _back _ch4(c_qubk.w);\n\n//const vec3 ch_ddot = vec3(-2. , p2(KN_,KN_,0.,HK_, HK_,0.,0.,0.));\n//const float ch_apo = p1(AB_, AE_,D_,0.);\nconst vec4 c_ddap = vec4(-2. , p2(EH_,EH_,0.,HK_, HK_,0.,0.,0.),p1(AB_, DE_,0.,0.));\n#define _ddot _ch16(c_ddap.xyz);\n#define _apo _ch4(c_ddap.w);\n\nconst vec4 c_dcosl = vec4(-2. , p2(EH_,EH_,0.,HK_, JK_,0.,0.,0.),p1(C_, M_,0.,0.));\n#define _dcom _ch16(c_dcosl.xyz);\n#define _sla _ch4(c_dcosl.w);\n\nconst vec4 c_bos8 = p4(D_,L_,0.,J_, F_,0.,E_,K_, 0.,G_,I_,0.,C_,B_,N_,O_);\n#define _star8 _ch16(c_bos8.xyz);\n#define _brao _ch4(c_bos8.w);\n\n//const vec3 ch_aster = p3(B_,E_,HI_,0., A_,E_,C_,0., GH_,E_,0.,0.);\n//const vec3 ch_aster = p3(AB_,HI_,0.,BC_, GH_,0.,DE_,EF_, 0.,0.,0.,0.);\nconst vec4 c_asst6 = p4(AD_,FI_,0.,DG_, CF_,0.,B_,H_,DG_,IL_,0.,FI_, GJ_,0.,E_,K_);\n#define _star6 _ch8(c_asst6.xy);\n#define _aster _ch8(c_asst6.zw);\n\nconst vec4 c_udor = vec4(-6. , p3(M_,O_,0.,0.,AB_,MN_,0.,BC_, NO_,0.,0.,0.));\n#define _und _ch8(c_udor.xy);\n#define _or _ch8(c_udor.zw);\n\n\n\nconst vec4 c_htbc = p4(DG_,FI_,0.,GJ_, IL_,0.,BE_,JM_, 0.,CF_,KN_,0.,A_,B_,N_,M_);\n#define _hash _ch16(c_htbc.xyz);\n#define _brac _ch4(c_htbc.w);\n\n\nconst vec4 c_aoeN = vec4( -10. , p2( O_,M_,G_,I_, L_,J_,0.,0. ) , p1(M_,A_,O_,C_)  );\n#define _aoe _ch16(c_aoeN.xyz);\n#define _N _ch4(c_aoeN.w);\n\nconst vec4 c_ccdU = vec4( -11. , p2( F_,D_,J_,L_, 0.,K_,N_,M_ ) , p1(A_,M_,O_,C_) );\n#define _ccd _ch16(c_ccdU.xyz);\n#define _U _ch4(c_ccdU.w);\n\n\n//const vec3 ch_and = p3(O_,D_,AD_,AB_, BC_,CF_,F_,J_, JM_,MN_,N_,IL_);\n//const vec3 ch_and = p3(O_,DG_,D_,AE_, BF_,F_,FI_,J_, JM_,MN_,N_,IL_);\nconst vec4 c_andm = p4(O_,DG_,D_,AE_, BE_,EF_,EI_,J_, JM_,MN_,N_,IL_,G_, I_,0.,0.);\n#define _and _ch16(c_andm.xyz);\n#define _minus _ch4(c_andm.w);\n\n// Quotes & Brackets\n\nconst vec4 c_frq = p4(F_, H_,L_,0., E_,G_,K_,0.,D_, H_,J_,0., E_,I_,K_,0.);\n#define _frqo _ch8(c_frq.xy);\n#define _frqc _ch8(c_frq.zw);\n\nconst vec4 c_qu = p4(AB_, AE_,E_,0., BC_,BF_,F_,0.,AB_, AE_,D_,0., BC_,BF_,E_,0.);\n#define _qo _ch8(c_qu.xy);\n#define _qc _ch8(c_qu.zw);\n\nconst vec4 c_par = p4(C_,BE_,DH_,HJ_, KN_,O_,0.,0.,A_,BE_,FH_,HL_, KN_,M_,0.,0.);\n#define _paro _ch8(c_par.xy);\n#define _parc _ch8(c_par.zw);\n\nconst vec4 c_cur = p4(C_,BE_,EH_,GH_, HK_,KN_,O_,0.,A_,BE_,EH_,HI_, HK_,KN_,M_,0.);\n#define _curo _ch8(c_cur.xy);\n#define _curc _ch8(c_cur.zw);\n\n// Maths\n\nconst vec4 c_equ = p4(AB_, DE_,0.,0., BC_,EF_,0.,0.,DG_,FI_,0.,GJ_, IL_,0.,0.,0.);\n#define _quo _ch8(c_equ.xy);\n#define _eq _ch8(c_equ.zw);\n\n//const vec2 ch_diff = p2(DG_,FI_,0.,GJ_, IL_,0.,F_,J_);\n//const vec2 ch_diff = p2(DG_,FI_,0.,GJ_, IL_,0.,EF_,JK_);\n//const vec2 ch_diff = p2(DG_,FI_,0.,GJ_, IL_,0.,BC_,MN_);\n//const vec2 ch_plus = p2(EH_,HK_,0.,G_, I_,0.,0.,0.);\nconst vec4 c_dipl = p4(DG_,FI_,0.,GJ_, IL_,0.,BF_,KM_,E_,K_,0.,G_, I_,0.,0.,0.);\n#define _diff _ch8(c_dipl.xy);\n#define _plus _ch8(c_dipl.zw);\n\n//const vec2 ch_div = p2(C_,M_,0.,AE_, AE_,0.,KO_,KO_);\n//const vec2 ch_div = p2(CF_,JM_,0.,AD_, AD_,0.,LO_,LO_);\nconst vec4 c_dicr = p4(D_,L_,0.,J_, F_,0.,0.,0.,CF_,JM_,0.,D_, D_,0.,L_,L_);\n#define _cross _ch8(c_dicr.xy);\n#define _div _ch8(c_dicr.zw);\n\nconst vec4 c_prgt = p4(C_,M_,0.,A_, B_,E_,D_,A_, 0.,K_,L_,0.,D_,I_,J_,0.);\n#define _gt _ch4(c_prgt.w);\n\nconst vec4 c_ceci = vec4( -7. , p1(J_,M_,N_,K_) , -9., p1(D_,B_,F_,0.) );\n#define _pcent _ch16(c_prgt.xyz);_ch8(c_ceci.xy);\n#define _circ _ch8(c_ceci.zw);\n\nconst vec4 c_thlt = vec4( -8. , p2(J_,M_,N_,K_, L_,O_,N_,0.) , p1(F_,G_,L_,0.) );\n#define _pthou _ch16(c_prgt.xyz);_ch16(c_thlt.xyz);\n#define _lt _ch4(c_thlt.w);\n\nconst vec4 c_gtlt = p4( D_,I_,J_,0., L_,M_,0.,0. , F_,G_,L_,0., J_,O_,0.,0. );\n#define _gte _ch8(c_gtlt.xy);\n#define _lte _ch8(c_gtlt.zw);\n\n// Accents\n\nconst vec3 ch_dia = vec3(-9., p2(DE_,DE_,0.,EF_, EF_,0.,0.,0.));\n#define _dia _ch16(ch_dia);\n\nconst vec3 ch_idia = vec3( -1. , p2( DE_,DE_,0.,H_, N_,0.,EF_,EF_ ) );\n#define _idia _ch16(ch_idia);\n\n\nconst vec4 c_acc = vec4( -9. , p1( AB_,EF_,0.,0. ) , -9. , p1( BC_,DE_,0.,0. ) );\n#define _agr _ch8(c_acc.xy);\n#define _acu _ch8(c_acc.zw);\n\n\n/*\n * Dornia Straight Font Properties \n */\n\n#define PI 3.14159265359\n\n#define UNPACK1(A) floor(mod(A,SUBM))\n#define UNPACK2(A) floor(mod(A/SUBM,SUBM))\n#define UNPACK3(A) floor(mod(A/SUBM2,SUBM))\n#define UNPACK4(A) floor(A/SUBM3)\n\n#define FONT_SIZE 0.05\n#define FONT_SIZE 0.05\n#define FONT_SPACING 1.\n#define FONT_LENGTH iTime > 2. ? (cos(iTime/2.*PI)*.5+.5)*.15 : 0.\n\n#define STROKEW_REGULAR 0.7 // (vec2(.5,0.).xy).x\n#define STROKEW_BOLD (STROKEW_REGULAR+1.)\n\nfloat font_size = FONT_SIZE;\nfloat font_spacing = FONT_SPACING;\nfloat font_weight = STROKEW_REGULAR;\nfloat font_border = 0.05;\nfloat font_length;\nfloat font_glow_opacity = 1.;\nfloat font_glow_width = 0.4;\nfloat font_aspect = 1.;//(cos(iTime/2.*PI)*.5+.5)*2.;\nfloat font_line_height = 1.;\n\nvec2  font_coord; // current pixel coord in relative space\nvec3  font_cursor;\n// cursor for current char, includes super & sub script\n// cursor.z is current font_size\nvec3  font_cursorChar;\nvec3  font_cursorOrigin; // beginning of a new line\nvec4  font_last_draw;\nvec4  font_draw;\n\nvec4 font_stroke_color = vec4(0.8,0.2,0.1,1.);\nvec4 font_glow_color = vec4(0.2,0.4,0.9,1.);\n\n\n\n/*\n * DorniFont23 Drawing FSM \n */\n\nfloat char_space = 1.;\nfloat vertical_shift = 0.;\n\nvec2 grid(in float L) \n{\n    float x,y;\n    \n    if( L == 0. ){\n        return vec2(0.);\n    } else if( L > SUBGRID ){\n        y = 12.;\n        x = 2.*(L-SUBGRID-1.);\n    } else {\n        x = ( mod(L-1.,SUBX) );\n        y = ( floor((L-1.)/SUBX) );\n    }\n    \n\treturn vec2(\n        x/4. * .228 * font_aspect ,\n        0.350877 - (y+2.*vertical_shift)/12.\n    ) * font_cursorChar.z;\n}\n \n\n\nfloat space_width(){\n    return font_aspect*font_cursorChar.z*3./7.*font_spacing*mix(1.,font_weight,0.2);\n    //return font_aspect*font_cursorChar.z*3./5.*font_spacing;\n}\n\nvoid setScript(int i){\n    if( i == 0 ){\n        // real font space taking into account baseline\n        // and a margin\n        font_cursorChar.z = font_size*9./7. * 6.5/7.;//  *5./7.*1.6  * 6.5/7.;\n    }\n}\n\nfloat count = 0.;\nvoid setCursorChar(){\n\t//font_cursorChar.xy = font_coord.xy;\n\t//font_cursorChar.y -= font_cursor.y;\n    //font_cursorChar.xy = font_coord - vec2( (count++)/3.,0.3) - font_cursor.xy;\n    \n    \n\tfont_cursorChar.xy = font_cursor.xy;\n    \n    // add baseline\n    font_cursorChar.y += font_cursorChar.z*2./5.;\n    \n    // add margin space\n    font_cursorChar.x += font_cursorChar.z/9.;// /28. + font_weight*font_size/8.;\n    //\n    font_cursorChar.x += space_width()*font_cursor.z;\n    \n    font_cursorChar.xy = font_coord - font_cursorChar.xy;\n    \n    //font_cursorChar.z  = font_size*5./7.;\n\t//pos.x = pos.x - font_cursor.x + font_spacing*font_aspect*font_cursor.z;\n\t//pos.x -= max(font_spacing*font_aspect*font_cursor.x - font_cursor.z,0.5);\n\n}\n\nvoid resetFont(vec2 line_beginning){\n\tfont_cursor.xy = line_beginning;\n    font_cursor.z = 0.;\n    font_cursorOrigin = font_cursor;\n    font_draw = vec4(0.);\n    setScript(0);\n    setCursorChar();\n}\n\nfloat distance2ToSegment(vec2 v, vec2 w, vec2 p)\n{\n    w -= v;\n    v -= p;\n    v += clamp( -dot(v, w) / (dot(w,w) + font_length*font_size*.06) , 0. , 1. ) * w;\n   \treturn dot(v,v);\n}\n\nfloat distanceToSegment2(vec2 v, vec2 w, vec2 p)\n{\n    w -= v;\n    v -= p;\n   \treturn length(v + clamp( -dot(v, w) / (dot(w,w) + font_length*font_size*.06) , 0. , 1. ) * w);\n}\n\nvec2 cb(vec2 a,vec2 b){\n    return vec2(max(a.x,b.x), max(a.y,b.y) ); // nice ! but too concentrated\n    //return vec2(max(a.x,b.x), (a.y+b.y) ); // nice ! but too concentrated\n    //return vec2(max(a.x,b.x), ((a.y+b.y)+max(a.y,b.y))/2. ); // perfect!\n}\n\n\n\n#define SegmentsMAX (8)\nfloat segmentsCount;\nvec4 seg1;\nvec4 seg2;\n\nfloat vertexCount; // 0, 1 or 2\nvec2 vertexA;\nvec2 vertexB;\n\nfloat currentDist = -1.;\nfloat currentDistTmp = -1.;\nvec3 nearestCursorChar;\nvec2 nearestA;\nvec2 nearestB;\n\nvoid resetSegments(){\n    currentDist = -1.;\n}\n\n\nvoid pushSegment(){\n    currentDistTmp = distance2ToSegment(vertexA,vertexB,font_cursorChar.xy);\n    if( currentDistTmp < currentDist || currentDist == -1. ){\n        currentDist = currentDistTmp;\n        nearestA = vertexA;\n        nearestB = vertexB;\n        nearestCursorChar = font_cursorChar;\n    }\n}\n\nvoid resetVertex(){\n    vertexCount = 0.;\n}\n\nvoid pushVertex(float v){\n    if( v == 0. ){\n        vertexCount = 0.;\n    } else {\n        \n        if( mod(vertexCount,2.) < 1. ){\n            vertexA = grid(v);\n        } else {\n            vertexB = grid(v);\n        }\n        \n        if( vertexCount > 0. ){\n            pushSegment();\n        }\n        \n        vertexCount++;\n    }\n}\n\nvoid _o4(in float A) \n{\n    pushVertex(UNPACK1(A));\n    pushVertex(UNPACK2(A));\n    pushVertex(UNPACK3(A));\n    pushVertex(UNPACK4(A));\n}\n\nvoid space()\n{\n\tfont_cursor.x += space_width();\n}\n\nvoid newline()\n{\n\tfont_cursor.x = font_cursorOrigin.x;\n\tfont_cursor.y -= font_size*font_line_height*8./5.*.9;\n}\n\nvec4 textOutput()\n{\n    //vec2 r = vec2(sqrt(currentDist)/thickness,0.);\n    vec3 r = vec3(0.,0., distanceToSegment2(nearestA,nearestB,nearestCursorChar.xy)/nearestCursorChar.z);\n    \n    // stroke\n    //r.x = 1. - smoothstep(0., 1., (max(r.x-font_weight/24.,0.))*4./font_border );\n    r.x = 1. - smoothstep(0., 1., (max(r.z-font_weight/24.,0.))*4./font_border );\n    // glow\n    /*\n\tr.y = (1. - font_length)*(1. - font_length)\n        *font_glow_opacity\n        *smoothstep(\n            clamp(1. - font_glow_width,0.,1.),\n            2.5,\n            clamp(1.- r.x,0.,1.))*4.;\n    */\n    //r.y = 1.;\n    r.y = exp(-40.*r.z*r.z);\n    //r.y = exp(-80.*(currentDist)/(thickness*thickness));\n    //r.y = 1. - abs(r.x);\n    //r.y = exp(-1000000.*r.x);\n    \n    return mix(font_glow_color*r.y,font_stroke_color,clamp(r.x,0.,1.));\n    //return mix(font_glow_color*result.y,font_stroke_color,clamp(result.x,0.,1.));\n}\n\nvoid _ch_begin(in float c){\n    font_cursor.z = 0.;\n    char_space = 1.;\n    vertical_shift = 0.;\n    \n    if( c < 0. ){\n        \n        // i\n        if( c == -1. ){\n            //char_space = .375;\n            char_space = .5;\n            font_cursor.z = -0.25;\n        // j\n        } else if( c == -2. ){\n            font_cursor.z = -0.3;\n            char_space = .45;\n        // l\n        } else if( c == -3. ){\n            char_space = .45;\n        // t\n        } else if( c == -4. ){\n            char_space = .75;\n        // dot & comma\n        } else if( c == -5. ){\n            font_cursor.z = -.3;\n            char_space = .4;\n            vertical_shift = 1.;\n        // _\n        } else if( c == -6. ){\n            vertical_shift = .5;\n            font_cursor.z = -.18;\n            char_space = .58;\n        // %\n        } else if( c == -7. ){\n            font_cursor.z = -.68;\n            char_space = .0;\n        // %o\n        } else if( c == -8. ){\n            font_cursor.z = -.68;\n            char_space = .33333;\n        // ^\n        } else if( c == -9. ){\n            font_cursor.z = -1.;\n            char_space = .0;\n        // oe & ae\n        } else if( c == -10. ){\n            font_cursor.z = -.4;\n            char_space = .6;\n        // c cedill\n        } else if( c == -11. ){\n            vertical_shift = 1.;\n        }\n    }\n    \n    setCursorChar();\n    resetVertex();\n    \n    if( c >= 0. ){\n    \t_o4(c);\n    }\n}\n\nvoid _ch_end(){\n\tfont_cursor.x += char_space*space_width();\n}\n\nvoid _ch4(in float c){\n    _ch_begin(c);\n    _ch_end();\n}\n\nvoid _ch8(in vec2 a){\n    _ch_begin(a.x);\n    _o4(a.y);\n    _ch_end();\n}\n\nvoid _ch16(in vec3 a){\n    _ch_begin(a.x);\n    _o4(a.y);\n    _o4(a.z);\n    _ch_end();\n}\n\n#define _bold     font_weight = STROKEW_BOLD;\n#define _reg      font_weight = STROKEW_REGULAR;\n#define textBegin font_last_draw = vec4(0.); resetSegments();\n#define textEnd   font_draw += textOutput(); // font_draw += textOutput(font_last_draw.xy);\n\n#define _sp space();\n#define _nl newline();\n\n\n#define ITERATIONS 1\n\n//-----------------------------------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 coord )\n{\n    font_length = FONT_LENGTH;\n    float di;\n    float angle = 0.4;\n    bool mouse = iMouse.z > .5;\n    fragColor = vec4(0.);\n    \n    \n    //for( int i = 0; i < ITERATIONS ; i++){\n        \n        //di = float(i)/float(ITERATIONS);\n        //font_coord = (coord + 8.*di*vec2(cos(angle),sin(angle)))/iResolution.xy;\n        font_coord = (coord)/iResolution.y;\n            \n        //resetFont(vec3(2.0, .5, 0.));\n    \tfont_line_height = 0.9;\n    \tfont_size = .1;\n        resetFont(vec2(.05, .85));\n    \t//font_glow_color = vec4(0.,0.,1.,1.);\n\n    \n        textBegin\n            \n            \n\t\t   _D _e _agr _s _sp _N _o _e _dia _l _sp _o _u _agr _sp _u _n _sp _z _e _acu _p _h _y _r _sp _h _a _idia _nl\n            _m _e _sp _v _e _circ _t _sp _d _e _sp _g _l _a _ccd _o _n _s _sp _w _u _dia _r _m _i _e _n _s _nl\n            _j _e _sp _d _icirc _n _e _sp _d _apo _e _x _q _u _i _s _sp _r _o _circ _t _i _s _sp _d _e _sp _b _o _aoe _u _f _nl\n          \n            _a _u _sp _k _i _r _sp _a _agr _sp _l _apo _a _y _dia _nl\n            \n            // _d _apo _a _circ _g _e _sp _m _u _circ _r _sp _and _sp _c _a _aoe _t _e _r _a _sp _quest _excl\n            \n            \n            \n            \n            \n            \n            \n        textEnd\n\n        font_stroke_color = mix(font_stroke_color*font_stroke_color,vec4(0.,.4,1.,1.),coord.x/iResolution.x);\n        font_glow_color = vec4(1.,.9,1.,1.);\n\t\t//font_glow_color = vec4(0.,1.,0.,1.);\n    \n        textBegin\n            \n            _nl\n            _sp _sp _D _o _r _n _i _a _und _S _t _r _a _i _g _h _t _sp _sp _paro _v _0 _dot _3 _6 _parc _nl\n            \n            // _a _b  _c _d _e _f _g _h _i _j _k _l _m _n _o _p _q _r _nl\n            \n        \t// _s _t _u _v _w _x _y _z _sp _0 _1 _2 _3 _4 _5 _6 _7 _8 _9 _nl\n            \n            _and _ddot _dcom _excl _quest _paro _brao _curo _curc _brac _parc _eq _diff _plus _minus            \n            _cross _star8 _star6 _aster\n            \n           _div _back _pcent _pthou _sla _or\n            \n           //_apo _a _b _hash _or  _a _circ _e _circ _o _circ _i _icirc _a _dia _e _dia _o _dia _o _l _m _nl\n           // _idia _u _dia _u _circ\n            \n           _gte _lte _gt _lt _frqo _frqc _qo _qc _quo\n        textEnd\n\n        font_glow_color = vec4(1.,0.,0.,1.);\n        //font_glow_color = vec4(0.7);\n        //font_stroke_color = vec4(0.);\n/*\n        textBegin\n        \n    \t\t _A _B _C _D _E _F _G _H _I _J _K _L _M _N _O _P _Q _R _S _nl\n            \n            _T _U _V _W _X _Y _Z _dot _dot _dot\n\n        textEnd\n*/\n        fragColor += font_draw * exp(-di) / pow(float(ITERATIONS),0.5);\n\n        \n            //font_coord = coord/iResolution.xy;\n        //font_coord.y *= iResolution.y/iResolution.x;\n\n        /*\n        font_coord = coord/iResolution.y;\n\n        font_size = .2;// (cos(iTime/2.*PI)*.5+.5)*0.2+0.1;\n\n        font_stroke_color = vec4(1.,.0,0.,1.)*coord.y/iResolution.y;\n        resetFont(vec2(.0, .8));\n\n        textBegin\n\t\t\t\n       \t\t _a _j _3 _bold _4 _5 _reg _7 _nl _l _o _l\n            //_t3\n           //_a _b _c _d _e _g _h _k _m _n _o _p _q _1 _2 _3 _5 _6 _7 _8 _nl\n           //_f _i _a _j _l _r _s _t _u _v _w _x _y _z _9 \n            //_A _B _1 _2 _3 _4 _5 _nl _6 _7 _8 _9 _0 _D\n           // _y _a _j _3 _bold _4 _5 _reg _7 _nl _l _o _l\n\n        textEnd\n\n        fragColor += font_draw;\n        */\n    //}\n    \n    \n\n}\n","name":"Image","description":"","type":"image"}]}