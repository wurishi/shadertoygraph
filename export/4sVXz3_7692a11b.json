{"ver":"0.1","info":{"id":"4sVXz3","date":"1465759968","viewed":285,"name":"Bendy","username":"huwb","description":"shutter time depends on x coord. http://imgur.com/gallery/RG7Kd . found this existing shader afterwards: https://www.shadertoy.com/view/MsG3D1 . thought id post this anyway as the scanline/mouse interaction is kinda interesting","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["rollingshutter","propellor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// yellow line represents sampling of light on the image sensor, from left to right.\n\n// inspired by\n// http://imgur.com/gallery/RG7Kd\n// http://imgur.com/LdpVq5D\n// http://imgur.com/gallery/Lh0YX33\n\n// similar in spirit to heavy https://www.shadertoy.com/view/llB3Rc, where shutter time is\n// advanced as ray travels.\n\n\n#define PI 3.141592654\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.);\n    \n    float hi = 2.5; float wi = hi * iResolution.y/iResolution.x;\n    vec2 uv_01 = fragCoord.xy / iResolution.xy;\n    vec2 uv = (uv_01-.5)*hi; uv.x *= hi/wi;\n    \n    // time\n    float animPeriod = 8.;\n    float runNo = floor(iTime/animPeriod);\n    float time = fract(iTime/animPeriod);\n    if( iMouse.z > 0. ) time = iMouse.x/iResolution.x;\n    \n    float barx = 2.5*wi*(time-.5) * wi;\n    float timex = uv.x/(2.5*wi*wi)+0.5;\n    float t = uv.x < barx ? timex : time;\n    t *= 68.3;\n    \n    // shape\n    float theta = atan(uv.y,uv.x);\n    if( theta < 0. ) theta += 2.*PI;\n    float w = runNo == 0. ? 4. : 1. + floor(10.*abs(sin(341297.*runNo)));\n    float f = pow(.5+.5*sin(w*theta + t + 2.*runNo),2.);\n    float v = length(uv)-f;\n    v = smoothstep(0.075,0.,v);\n    \n    // bg\n    fragColor = vec4(0.2);\n    float gridSz = 30.;\n    fragColor += vec4(max(0.,mod(fragCoord.x,gridSz)-(gridSz-.55))+max(0.,mod(fragCoord.y,gridSz)-(gridSz-.55)));\n    \n    // propellor\n    vec3 propCol = mix( vec3(.3,.6,.35), vec3(v)*.95, smoothstep(0.,0.025,length(uv)-.77) );\n    fragColor.xyz = mix( fragColor.xyz, propCol, v );\n    \n    // time bar\n    float bar = smoothstep(10./iResolution.x,0.,abs(uv.x-barx));\n    fragColor.xyz += vec3(1.,1.,.0)*bar;\n    \n    // vign\n    fragColor *= 1.-dot(uv_01-.5,uv_01-.5);\n}\n","name":"Image","description":"","type":"image"}]}