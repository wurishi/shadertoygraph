{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Created by S.Guillitte\n// Galaxy morphology based on http://iopscience.iop.org/0004-637X/783/2/138/pdf/0004-637X_783_2_138.pdf\n\n\nint windows = 0;\nvec2 m = vec2(2.,6.);\nconst float pi = 3.141592;\n\nconst mat2 m2 = mat2(.8,.6,-.6,.8);\n\n\nfloat noise(in vec2 p){\n\n    float res=0.;\n    float f=2.;\n\tfor( int i=0; i< 4; i++ ) \n\t{\t\t\n        p=m2*p*f+.6;     \n        f*=1.0;\n        res+=sin(p.x+sin(2.*p.y));\n\t}        \t\n\treturn res/4.;\n}\n\n\nfloat fbmabs( vec2 p ) {\n\t\n\tfloat f=1.;   \n\tfloat r = 0.0;\t\n    for(int i = 0;i<8;i++){\t\n\t\tr += abs(noise( p*f ))/f;       \n\t    f *=2.;\n        p-=vec2(-.01,.08)*r;\n\t}\n\treturn r;\n}\n\nfloat fbmstars( vec2 p ) {\n    \n    p=floor(p*50.)/50.;\n\t\n\tfloat f=1.;   \n\tfloat r = 0.0;\t\n    for(int i = 1;i<5;i++){\t\n\t\tr += noise( p*(20.+3.*f) )/f; \n        p*=m2;\n\t    f +=1.;\n        \n\t}\n\treturn pow(r,8.);\n}\n\nfloat fbmdisk( vec2 p ) {\n\t\n\tfloat f=1.;   \n\tfloat r = 0.0;\t\n    for(int i = 1;i<7;i++){\t\n\t\tr += abs(noise( p*(f) ))/f;       \n\t    f +=1.;\n        \n\t}\n\treturn 1./r;\n}\n\n\nfloat fbmdust( vec2 p ) {\n\t\n\tfloat f=1.;   \n\tfloat r = 0.0;\t\n    for(int i = 1;i<7;i++){\t\n\t\tr += 1./abs(noise( p*(f) ))/f;       \n\t    f +=1.;\n        \n\t}\n\treturn pow(1.-1./r,4.);\n}\n\n\nfloat theta(float r, float wb, float wn){\n\treturn atan(exp(1./r)/wb)*2.*wn;\n}\n\nfloat arm(float n, float aw, float wb, float wn,vec2 p){\n    float t = atan(p.y,p.x);\n    float r = length(p);    \n\treturn pow(1.-.15*sin((theta(r,wb,wn)-t)*n),aw)*exp(-r*r)*exp(-.07/r);\n}\n\nvec2 maparm(float n, float aw, float wb, float wn,vec2 p){\n    float t = atan(p.y,p.x);\n    float r = length(p);\n    \n\treturn vec2((theta(r,wb,wn)-t)*n,r);\n}\n\nfloat bulb(vec2 p){\n    float r = exp(-dot(p,p)*1.2);\n    p.y-=.2;\n\treturn r+.5*exp(-dot(p,p)*12.);\n}\n\nfloat map(vec2 p){\n\n    \n    float a= arm(m.x,6.,.7,m.y,p);\n    float d = fbmdust(p);\n    float r = max(a*(.4+.1*arm(m.x+1.,4.,.7,m.y,p*m2))*(.1+.6*d+.4*fbmdisk(p)),bulb(p)*(.7+.2*d+.2*fbmabs(p)));\n    return max(r, a*fbmstars(p*4.));\n}\n\n\nvec2 rotate(in vec2 p, in float t)\n{\n\treturn p * cos(-t) + vec2(p.y, -p.x) * sin(-t);\n}\n\n\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n\tvec2 p = 2.*fragCoord.xy /iResolution.xy-1.;\n    p*=2.;\n\tif(p.y>0.){\n    \tif(p.x>0.)windows =1;\n    \telse    windows =0;}\n    else{\n    \tif(p.x>0.)windows =3;\n        else windows =2;}\n    \n    \n    p = rotate(p,-.02*iTime);\n    \n    if(iMouse.z>0.)m = floor(iMouse.xy/iResolution.xy*10.);\n    m.y*=2.;\n    \n\tfloat r;\n    vec3 light = normalize(vec3(4., 2., -1.));\n\n    float k=1.5*map(p);\n    float b=.3*map(p*m2)+.4;\n    r=.2;\n   \n\tfragColor = clamp(vec4(r*k*k, r*k, k*.5+b*.4, 1.0),0.,1.);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"llSGR1","date":"1426847713","viewed":2378,"name":"Galaxy spirals","username":"guil","description":"Use mouse to modify the number of arms or the winding number \nGalaxy morphology based on http://iopscience.iop.org/0004-637X/783/2/138/pdf/0004-637X_783_2_138.pdf","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["noise","galaxy"],"hasliked":0,"parentid":"","parentname":""}}