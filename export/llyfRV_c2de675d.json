{"ver":"0.1","info":{"id":"llyfRV","date":"1543162765","viewed":80,"name":"Origin ball","username":"mskr","description":"Visualizing the surface of a signed distance sphere in the coordinate origin with the most simple diffuse lighting.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sphere","distance","signed"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// p -> sample point in screen space\n// d <- signed distance to surface of origin ball\n// l <- light intensity\nvoid originball(in vec2 p, out float d, out float l) {\n    float r = .5;\n    vec3 p3 = vec3(p, r-length(p)); // faking the 3rd dimension\n    d = length(p3) - r;\n    l = normalize(p3).y; // equivalent to dot(normal, vec3(0,-1,0)), i.e. light from above\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Coordinate system with origin in center of screen\n    vec2 p = fragCoord/iResolution.y * 2. - vec2(iResolution.x/iResolution.y, 1.);\n    float px = fwidth(p.x);\n\n    // Pixel color\n    float d = 0.;\n    float l = 0.;\n    originball(p, d, l);\n    vec3 col = mix(vec3(l), vec3(0), smoothstep(.0, px, d));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}