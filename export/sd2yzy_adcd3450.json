{"ver":"0.1","info":{"id":"sd2yzy","date":"1643736239","viewed":263,"name":"Stateless Balls","username":"me_123","description":"not physically accurate, but looks nice","likes":13,"published":3,"flags":0,"usePreview":0,"tags":["balls","bounce","physics","timeinvariant"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float t(in float x) { // triangle wave\n    return abs(fract(0.5*x)-0.5)*2.;\n}\nfloat b(in float x) {\n    return 1.-((pow((fract((0.5*x)+0.5)-0.5), 2.0))*4.0);\n}\nfloat hash(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * 0.2324);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    float c = 1.0;\n    if (uv.x > 1.) {\n        return;\n    }\n    for (float i = 0.; i < 10.; i += 1.) {\n        vec2 p = vec2(hash(vec2(i, 0)), hash(vec2(i, 1)));\n        vec2 v = vec2(hash(vec2(i+.1, 0))-0.5, hash(vec2(i+.1, .1))-0.5);\n        c = min(c, length(uv-vec2(t(p.x+v.x*iTime), b(p.y+(v.y-iTime)+v.y)*p.y)));\n    }\n    fragColor = vec4(vec3(c-0.02)*300.,1.0);\n}","name":"Image","description":"","type":"image"}]}