{"ver":"0.1","info":{"id":"fsSSzt","date":"1628333989","viewed":55,"name":"beams3","username":"gweltou","description":"beam mask","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mask"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float beam(vec2 p, float pos, float radius) {\n    return step(abs(p.x-pos), radius);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    int number = 8;\n    float thickness = 0.1;\n    \n    \n    float phase = 0.0;\n    float mask = 0.0;\n    float fraq = 0.0;\n    float fraqStep = 1.0 / float(number);\n    \n    for (int i=0; i<number; i++) {\n        \n        mask += 4.0 * fraqStep * beam(uv,\n                         1.0 * sin(iTime * (1.0 + fraq) - 3.14 * fraq)*0.5 + 0.5,\n                         thickness - thickness * fraq * 0.99\n                         );\n        phase += 0.5 * fraq;\n        fraq += fraqStep;\n    }\n\n    vec3 color = min(1.0, mask) * texture(iChannel0, uv).rgb;\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}