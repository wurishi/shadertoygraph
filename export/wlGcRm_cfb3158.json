{"ver":"0.1","info":{"id":"wlGcRm","date":"1610682562","viewed":73,"name":"Unexpected 3d ribbons","username":"xingyzt","description":"Unexpected 3dness!\nMultiplied lines' horizontal widths by the derivative of the noise that's shifting them about, in an effort to create even thickness. Multiplied too much and now they look quite ribbon-like.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ribbons"],"hasliked":0,"parentid":"tlGyRm","parentname":"Hockney Early Reflections"},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec2 hash2(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nfloat perlin(vec2 p)\n{\n    p *= 4.;\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( hash2( i + vec2(0,0) ), f - vec2(0,0) ), \n                     dot( hash2( i + vec2(1,0) ), f - vec2(1,0) ), u.x),\n                mix( dot( hash2( i + vec2(0,1) ), f - vec2(0,1) ), \n                     dot( hash2( i + vec2(1,1) ), f - vec2(1,1) ), u.x), u.y);\n}\n\nvec2 s(float x){\n    vec2 n = vec2(0.);\n    for(float i = 0.; i<5.; i++){\n        float e = exp(i);\n        n.x += sin(x*e);\n        n.y += e*cos(x*e); // derivative\n    }\n    return n;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    #define aa(U) smoothstep(3./iResolution.x,-3./iResolution.y,U)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/min(iResolution.x,iResolution.y);\n    \n\n    // Time varying pixel color\n    vec3 col = vec3(.5);\n        \n    for(float i = -1.; i<=1.; i+=0.1){\n        vec2 p = uv;\n        vec2 n = s(p.y/4.+i)/10.;\n        p.x += i+n.x;\n        p *= 10.;\n        float r = 0.1*n.y*n.y/10.;\n        col = mix(col,vec3(1),aa(abs(p.x)-r));\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}