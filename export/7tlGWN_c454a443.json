{"ver":"0.1","info":{"id":"7tlGWN","date":"1622140223","viewed":453,"name":"Vapour Candy Machine","username":"evvvvil","description":"Vappour Candy Machine - Trilogy of audio responsive eye candies - ACT 1\nIF AUDIO DOESN'T START:\n// Click on iChannel1's PAUSE button, then press PLAY, then under shader window click REWIND button to be synced\n// OR click anywhere while the page lo\n","likes":13,"published":1,"flags":64,"usePreview":1,"tags":["fft","wave","demoscene","eye","sync","audio","glow","alien","trippy","club","candy","responsive","ninja","tunes","vapour","amon","tobin","synced"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"llfSRf","filepath":"https://soundcloud.com/amon-tobin/big-furry-head-1","previewfilepath":"https://soundcloud.com/amon-tobin/big-furry-head-1","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Vappour Candy Machine - Trilogy of audio responsive eye candies - ACT 1\n\n// IF AUDIO DOESN'T START:\n// Click on iChannel1's PAUSE button, then press PLAY, then under shader window click REWIND button to be synced\n// OR refresh and click anywhere while the page loads.\n\n// CLICK REWIND UNDER THE SHADER VIEW TO BE IN SYNC\n\n// Result of an improvised live coding session on Twitch\n// LIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 8-9pm UK time: \n// https://www.twitch.tv/evvvvil_\n\nvec2 z,v,e=vec2(.00035,-.00035),cageSP;int s; float t,tt,b,tn,bb,g,gg,ggg;\nvec3 ro,bp,pp,op,sp,po,no,al,lp,ld,cageP;float ffBass, ffHigh, ffWhole;\nfloat bo(vec3 p,vec3 r){p=abs(p)-r; return max(max(p.x,p.y),p.z);}\nfloat cx(vec3 p,vec3 r){return max(abs(length(p.yz)-r.x)-r.y,abs(p.x)-r.z/2.);}\nfloat cx2(vec3 p,vec3 r){return max(abs(abs(length(p.yz)-r.x)-r.y*8.)-r.y,abs(p.x)-r.z/2.);}\nfloat cz(vec3 p,vec3 r){return max(abs(length(p.xy)-r.x)-r.y,abs(p.z)-r.z/2.);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nfloat smin( float a, float b, float k ){float h=max(k-abs(a-b),0.0);return min(a, b) - h*h*0.25/k;}\nfloat smax( float d1, float d2, float k ){float h=max(k-abs(-d1-d2),0.0);return max(-d1,d2)+h*h*0.25/k;}\nvec4 texNoise(vec2 uv,sampler2D tex ){ float f = 0.; f+=texture(tex, uv*.125).r*.5; f+=texture(tex,uv*.25).r*.25; //Funciton simulating the perlin noise texture we have in Bonzomatic shader editor, written by yx\n                       f+=texture(tex,uv*.5).r*.125; f+=texture(tex,uv*1.).r*.125; f=pow(f,1.2);return vec4(f*.45+.05);}\nvec2 mp( vec3 p, float ga ){\n  op=p;\n  p.y=abs(p.y)-2.-cos(p.z*.1)*10.;\n  ffWhole = texture( iChannel1, vec2(0.05+abs(p.z)*.01)).r*8.50;\n  float spr=9.+ffBass*3.;\n  vec2 h,t=vec2(.7*cz(p,vec3(1,.2,spr*2.)),6);  \n  pp=p; pp.z=abs(pp.z)-spr;//outter bits\n  t.x=smin(t.x,.8*cz(pp,vec3(1.5,.2,1)),0.5);\n  t.x=smin(t.x,.8*cz(pp,vec3(.7,.1,1.)),2.);  \n  tn=texNoise(p.xz*.1,iChannel0).r;\n  float organic=length(p)-1.5-tn-ffWhole*.25;//Middle sphere  \n  vec3 rp=p;rp.z=abs(abs(rp.z)-1.)-.4;\n  organic=smax(rp.z,.5*organic,.5);\n  t.x=smin(t.x,organic,.4);                       \n  bp=p;bp=abs(bp)-2.-cos(p.z*.5)*2.;\n  t.x=smin(t.x,max(0.5*(length(bp.xy)-.1-ffWhole*.1+tn),abs(p.z)-14.),1.); //Middle splines\n  bp=p;bp=abs(bp)-4.;\n  float glo=max(length(bp.xy),abs(p.z)-12.);\n  bp.xy*=r2(cos(p.z*.1)-tt);  \n  glo=min(glo,max(max(length(cos(bp-vec3(0,0,tt*2.))),length(p.xy+vec2(0,9))-5.),abs(p.z)-18.)); //PARTICLES\n  gg+=0.1/(0.2*glo*glo*(400.-390.*sin(op.x*.5+ffWhole)))*ga;    \n  t.x=min(t.x,glo);  \n  vec3 outCylP=pp;  //OUTTER BITS\n  outCylP.z=abs(outCylP.z)-.25;\n  outCylP.xy*=r2(tt);  \n  float cogDis=clamp(sin(abs(atan(outCylP.x,outCylP.y))*15.),-.5,.5);  \n  h=vec2(cz(outCylP,vec3(2.,.5-.1*cogDis,.3)),3); //Cogs\n  pp=p;pp.xz=abs(pp.xz)-vec2(3.8,3);\n  h.x=min(h.x,cx(pp,vec3(10,1,1.5)));\n  rp=p;rp.z=abs(rp.z)-1.;\n  float sz=min(4.,1.+ffHigh*1.5);\n  float inner=cz(rp,vec3(sz,.4+cogDis*.1,.5)); //INNER BITS\n  inner=max(inner,-(abs(rp.z)-.1));\n  glo=cz(rp,vec3(sz,.1,.05));\n  glo=min(glo,length(abs(rp.xz)-vec2(ffHigh,0)));\n  h.x=min(h.x,glo);\n  g+=0.1/(0.1*glo*glo*200.)*ga;  \n  h.x=.7*min(h.x,inner); //Inner COGS  \n  t=t.x<h.x?t:h;    \n  cageP=p; cageP.xy*=r2(ffHigh+tt);  \n  cageP=abs(cageP)-vec3(1,1,6); //CAGE \n  cageP.xy*=r2(-.6);    \n  cageSP=vec2(abs(atan(cageP.x,cageP.y)),cageP.z);//sphercial cage pos\n  b=clamp(sin(cageSP.x*20.),-.5,.5);\n  bb=clamp(sin(cageP.y*3.1),-.25,.25);\n  h=vec2(bo(cageP,vec3(2,2.-b*.1,1.+b*.1)),5);  \n  glo=h.x+.5;  \n  glo=min(glo,cx2(pp,vec3(10,.02-clamp(sin(p.y*5.),-.25,.25)*.015,1.7)));//yellow ring\n  g+=0.1/(0.1*glo*glo*(200.-190.*sin(p.y*.2-1.5+ffBass*4.)))*ga;  \n  h.x=abs(h.x)-.1;   \n  h.x=max(h.x,-(abs(abs(cageP.z)-.3)-max(.01,.1+b*.06+bb*.2)));\n  h.x=.6*min(h.x,glo);  \n  t=t.x<h.x?t:h;  \n  cageP=op;\n  return t;\n}\nvec2 tr( vec3 ro, vec3 rd )\n{\n  vec2 h,t=vec2(.1);\n  for(int i=0;i<128;i++){\n    h=mp(ro+rd*t.x,1.); if(h.x<.0001||t.x>60.) break;\n    t.x+=h.x;t.y=h.y;\n  } if(t.x>60.) t.y=0.;\n  return t;\n}\n#define a(d) clamp(mp(po+no*d,0.).x/d,0.,1.) \n#define s(d) smoothstep(0.,1.,mp(po+ld*d,0.).x/d)\nfloat camTargetY[6]=float[](0.,0.,9.,10.,9.,5.);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1);\n  tt=0.5*mod(iTime,125.6637);\n  s=int(mod(floor(tt/(60./72.5*4.)),6.));\n  float ss=sin(tt/2.10743),cc=cos(tt/2.10743);\n  vec3 camPos[6]=vec3[](vec3(15,ss*2.,cc*9.),vec3(15,-ss*9.,-cc*2.),vec3(10,9.,-cc*6.),\n                        vec3(ss*2.,2.,ss*9.-6.),vec3(12.,ss*9.,cc*9.),vec3(-5.+15.*ss,7,ss*2.));\n  ro=camPos[s];\n  vec3 cw=normalize(vec3(0,camTargetY[s],0)-ro),cu=normalize(cross(cw,vec3(0,1,0))),cv=normalize(cross(cu,cw)),\n  rd=mat3(cu,cv,cw)*normalize(vec3(uv,.5)),co,fo;\n  ffBass = texture( iChannel1, vec2(0.07) ).r*1.5;\n  ffHigh = texture( iChannel1, vec2(0.4) ).r*2.0;\n  float tex=texNoise(rd.xz*.2,iChannel0).r*2.;\n  float ffMain = texture( iChannel1, vec2(.05+abs(rd.y*.5+tex*.1)*.5)).r*2.50;\n  co=fo=clamp(vec3(.2,.12,.1)-length(uv)*.25-ffMain*.1+tex*.3,0.,1.);\n  lp=ro+vec3(0,2,0);\n  z=tr(ro,rd);t=z.x;\n  if(z.y>0.){\n    po=ro+rd*t;\n    no=normalize(e.xyy*mp(po+e.xyy,0.).x+e.yyx*mp(po+e.yyx,0.).x+e.yxy*mp(po+e.yxy,0.).x+e.xxx*mp(po+e.xxx,0.).x);\n    al=vec3(.0,0.20,.7)*(1.+.5*ceil(abs(sin(cageP.z*15.)-b)-.2));\n    if(z.y<5.)al=vec3(0);\n    if(z.y>5.)al=vec3(.7,.8,.9)*(1.+tn*2.)-tn*ffWhole*.75;\n    ld=normalize(lp-po);\n    float attn=1.0-pow(min(1.0,length(lp-po)/15.),4.0),\n    dif=max(0.,dot(no,ld)),\n    fr=pow(1.+dot(no,rd),4.),\n    sp=pow(max(dot(reflect(-ld,no),-rd),0.),30.);\n    co=mix((sp*.5+al*(a(.1)*a(.3)+.2)*(dif+s(1.)*.3)),fo,min(fr,1.));\n    co=mix(fo,co,exp(-.00002*t*t*t));\n  }\n  co=co+g*.2*vec3(.7,.1,.0)+gg*.2;\n  co=mix(co,co.zyx,length(uv)*.7);\n  fragColor = vec4(pow(co,vec3(.45)),1);\n}","name":"Image","description":"","type":"image"}]}