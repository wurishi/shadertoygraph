{"ver":"0.1","info":{"id":"3lGfDd","date":"1615255681","viewed":79,"name":"shiyuelai的顺时针旋转地球仪","username":"shiyuelai","description":"顺时针旋转地球仪","likes":0,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.1415926;\n\n\nvec4 getRotateColor(vec2 pos)\n{\n    pos.x = mod(pos.x + iTime * 0.25, 2.0);\n    if(pos.x < 1.0)\n    {\n       return texture(iChannel0, pos);\n    }\n    else\n    {\n       return texture(iChannel1, pos - vec2(1.0, 0.0));\n    }\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 center = vec2(0.5, 0.5);\n    if(iResolution.x > iResolution.y)\n    {\n       uv.x = uv.x * iResolution.x / iResolution.y;\n       center.x = 0.5 * iResolution.x / iResolution.y;\n    }\n    else\n    {\n       uv.y = uv.y * iResolution.y / iResolution.x;\n       center.y = 0.5 * iResolution.y / iResolution.x;\n    }\n    \n    vec2 position = uv - center;\n    float radius = length(position);\n    float blur = smoothstep(0.5, 0.3, radius);\n    fragColor = vec4(vec3(0.0), 1.0);\n    if(radius <= 0.5)\n    {\n    \n       // 计算纬度\n       float alpha = asin(position.y / 0.5) / PI + 0.5;\n       // 计算经度\n       float shadowLen = sqrt(0.25 - position.y * position.y);\n       float beta = asin(position.x / shadowLen) / PI + 0.5;\n       //fragColor = getRotateColor(vec2(beta, alpha));\n       \n       fragColor = mix(fragColor, getRotateColor(vec2(beta, alpha)), blur);\n    }\n}","name":"Image","description":"","type":"image"}]}