{"ver":"0.1","info":{"id":"XcXGWX","date":"1703586559","viewed":12,"name":"CircleNoise","username":"Leabemo","description":"noise","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2dnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 radom2(in vec2 i){\n    \n    i = vec2(dot(i,vec2(127.1,311.7)),dot(i,vec2(269.5,183.3)));\n    \n    return fract(sin(i) * (43758.5453123))*2.-1.;\n\n}\n\nfloat noise (in vec2 uv){\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n    float a = dot(radom2(i),f);    \n    float b = dot(radom2(i + vec2(1.0,0.0)),f - vec2(1.0,0.0));\n    float c = dot(radom2(i + vec2(0.0,1.0)),f - vec2(0.0,1.0));\n    float d = dot(radom2(i + vec2(1.0,1.0)),f - vec2(1.0,1.0));\n    \n    // Smooth Interpolation\n    vec2 u = f*f*(3.-2.*f);\n    \n    float noise = mix(mix(a,b,u.x),mix(c,d,u.x),u.y);\n\n    return noise;\n}\n\nvec3 shape(vec2 st, float radius) {\n\tst = vec2(0.5)-st;\n    float r = length(st)*2.0;\n    float a = atan(st.y,st.x);//返回弧度\n    //圆周角的弧度为2pi\n\tfloat m = abs(mod(a+iTime*4.,2.*3.14)-3.14)/3.6;\n\n    float f = radius;\n    m += noise(st+iTime*0.1)*.5;\n    // a *= 1.+abs(atan(u_time*0.2))*.1;\n    // a *= 1.+noise(st+u_time*0.1)*0.1;\n    f += sin(a*50.)*noise(st+iTime*.2)*.1;//*noise(st+u_time*.2)*.1\n    f += (sin(a*20.)*.2*pow(m,2.));\n    vec3 color = vec3(0.);\n    color.r = 1.-smoothstep(f,f+0.007+mod(iTime*0.2,0.1),r);\n    color.g = 1.-smoothstep(f,f+0.007+mod(iTime*0.2,0.3),r);\n    color.b = 1.-smoothstep(f,f+0.007+mod(iTime*0.2,0.3),r);\n    return color;\n}\n\nvec3 shapeBorder(vec2 st, float radius, float width) {\n    return shape(st,radius)-shape(st,radius-width);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 pos = vec2(uv*5.0);\n    \n    // Use the noise function\n    vec3 color = vec3(1.0) * shapeBorder(uv,0.8,0.02);\n    \n    // Output to screen\n    fragColor = vec4(1.-color, 1.0);\n}","name":"Image","description":"","type":"image"}]}