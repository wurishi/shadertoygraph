{"ver":"0.1","info":{"id":"llKcRc","date":"1537216303","viewed":538,"name":"3 circles animation","username":"averyfollett","description":"3 animated circles, could be used as a loading animation","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["circle","animation","material"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 circlePos1 = vec2(0.3,0.5);\nvec2 circlePos2 = vec2(0.5,0.5);\nvec2 circlePos3 = vec2(0.7,0.5);\nfloat radius1 = 0.15;\nfloat radius2 = 0.15;\nfloat radius3 = 0.15;\nvec4 FG1 = vec4(0.301, 0.670, 0.960,1.0);\nvec4 FG2 = vec4(0.129, 0.588, 0.952,1.0);\nvec4 FG3 = vec4(0.090, 0.411, 0.666,1.0);\nvec4 BG = vec4(1.0,1.0,1.0,1.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n vec2 uv = fragCoord.xy / iResolution.xy;\n float aspectRatio = iResolution.y / iResolution.x;\n uv.y = uv.y * aspectRatio;\n \n circlePos1.y = circlePos1.y * aspectRatio;\n circlePos2.y = circlePos2.y * aspectRatio;\n circlePos3.y = circlePos3.y * aspectRatio;\n    \n circlePos1 += sin(iTime) * 0.1;\n radius2 += sin(iTime) * 0.05;\n circlePos3 -= sin(iTime) * 0.1;\n \n fragColor = mix(FG3, BG, smoothstep(radius3 - 2e-3, radius3, length(circlePos3 - uv)));\n fragColor = mix(FG2, fragColor, smoothstep(radius2 - 2e-3, radius2, length(circlePos2 - uv)));\n fragColor = mix(FG1, fragColor, smoothstep(radius1 - 2e-3, radius1, length(circlePos1 - uv)));\n}","name":"Image","description":"","type":"image"}]}