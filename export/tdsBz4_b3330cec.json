{"ver":"0.1","info":{"id":"tdsBz4","date":"1587832126","viewed":633,"name":"Complementary Elements","username":"izutionix","description":"figured out how to use buffers :)\n[url=https://www.shadertoy.com/view/3sfBzM]technically better version[/url]","likes":13,"published":3,"flags":32,"usePreview":0,"tags":["interactive","fire","water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 mouse = (2.*iMouse.xy-iResolution.xy)/iResolution.y;\n    float t = float(iFrame)/60.; //produces less gaps than iTime\n    \n    vec2 orbit = vec2(sin(t),cos(t));\n    \t\n\n    vec2 fuv = 1.25*uv + orbit;\n    vec2 wuv = 1.25*uv - orbit;\n    \n\tif(iMouse == texture(iChannel1, vec2(0.))){}\n    else\n    {\n\t\tfuv = uv - mouse;\n    \twuv = uv + mouse;\n    }\n    \n    vec3 fire = vec3(.7,.2,.1)/vec3(length(fuv));\n    vec3 water = vec3(.1,.2,.7)/vec3(length(wuv));\n    vec3 col = fire + water;\n    \n    //accumulate image\n    vec4 new = vec4(vec3(col*.1), 1.0);\n    vec4 old = texture(iChannel0, fragCoord.xy / iResolution.xy);\n\n    fragColor = mix(old,new,.1);//vec4(max(old,new));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 old = texture(iChannel1, vec2(0.));\n    vec4 new = iMouse;\n    fragColor = mix(old,new,.6);\n}","name":"Buffer B","description":"","type":"buffer"}]}