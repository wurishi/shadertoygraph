{"ver":"0.1","info":{"id":"Mc3czM","date":"1732182746","viewed":41,"name":"substep function plotter","username":"Sergio_2357","description":"Tests several positions to find the closest point of the function to a given pixel to try to make the graph more regular.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["math","functions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat x_size = 10.;\nfloat y_size = 4.;\nfloat x_off = 0.;\nfloat y_off = 0.;\nfloat line_width = 1.5;\nfloat subd = 1000.;\n\nfloat f(float x) {\n    return atan(x)*sin(x*x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 2.;\n    uv -= 1.;\n    \n    float d = 1000.0;\n    for (float i = -1.5*line_width; i <= 1.5*line_width; i += 3.*line_width/subd) {\n        float v = f(x_size*(uv.x+line_width*i/iResolution.x) + x_off) + y_off;\n        v = ((v/y_size)-uv.y)*iResolution.y;\n        float td = v*v+i*i;\n        d = min(d, td);\n    }\n    \n    float tol = line_width;\n    vec3 col = vec3(0.);\n    col = vec3(sqrt(smoothstep(tol*tol, 0.0, d)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}