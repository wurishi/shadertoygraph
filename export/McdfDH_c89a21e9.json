{"ver":"0.1","info":{"id":"McdfDH","date":"1733070817","viewed":20,"name":"hyperbolic remap","username":"0xBAMA","description":"looking at remapping space, something like the graph visualization tool by UCSD https://www.caida.org/catalog/software/walrus/gallery1/\n\nkind of a draft, not very good","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["remapping","hyperbolic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 centerPos = vec2( iTime );\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 8.0f * ( fragCoord / iResolution.xy - vec2( 0.5f ) ) + centerPos;\n    vec3 col = vec3( 0.0f );\n    \n    if ( uv.x - centerPos.x < 0.0f ) { // remapping the UV in something like the style of Cadia's Walrus\n        // (https://www.caida.org/catalog/software/walrus/gallery1/med-gr-l-4.png)\n        float offsetLength = length( uv - centerPos );\n        vec2 normOffset = normalize( uv - centerPos );\n        uv = exp( offsetLength ) * normOffset + centerPos;\n    }\n\n    // do a square ish grid with the uv\n    // if ( sin( uv.y ) < 0.3f || cos( uv.x ) < 0.3f ) {\n    if ( length( floor( uv ) + vec2( 0.5f ) - uv ) < 0.3f ) {\n        // col = vec3( max( sin( uv.y ) - 0.3f, cos( uv.x ) - 0.3f ) );\n        col = vec3( 1.0f );\n    }\n\n    // Output to screen\n    fragColor = vec4( col, 1.0f );\n}","name":"Image","description":"","type":"image"}]}