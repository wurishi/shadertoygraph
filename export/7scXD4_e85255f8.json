{"ver":"0.1","info":{"id":"7scXD4","date":"1633122778","viewed":321,"name":"Area light in 2D","username":"athibaul","description":"The analytical formula for the light intensity from a line of sources. Left: monopole sources. Right: dipole sources.\nDipole sources can be used to simulate an infinite vertical plane.","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["light","area","analytic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    uv = 2.*uv;\n    \n    \n    // ANALYTICAL FORMULAS FOR \"LINE\" LIGHTS ON A PLANE\n    \n    // We consider here a line composed of continuously many light sources,\n    // which each radiate either uniformly in all directions (\"monopoles\"),\n    // or which are somewhat directional (\"dipoles\", more realistic for an area light)\n    \n    // The formulas below are derived by integrating the contribution of each\n    // infinitesimal source along the line.\n    \n    // The line is assumed to be at x=0 and y in [0,1].\n    \n    // Intensity radiated from \"monopole\" sources\n    // The contribution of the light source at (0,t) to the intensity at (x,y)\n    // is assumed to be : \n    // dt / sqrt(x^2 + (y-t)^2)\n    //\n    // In which case we obtain :\n    // \\int_0^1 \\frac{dt}{\\sqrt{x^2 + (y-t)^2}} = \\asinh(\\frac{1-y}{x}) - \\asinh(\\frac{-y}{x})\n    float umax = (1.-uv.y)/uv.x, umin = -uv.y/uv.x;\n    float inten_monopole = asinh(umax) - asinh(umin);\n    \n    // Intensity radiated from \"dipole\" sources\n    // The contribution of the light source is assumed to be :\n    // x * dt / (x^2 + (y-t)^2)^(3/2)\n    // \n    // Then we obtain :\n    // (the brackets in the RHS mean we take the difference of the values at the two given points)\n    // \\int_0^1 \\frac{x dt}{(x^2+(y-t)^2)^{3/2}} = \\frac{1}{x} \\left[ \\frac{u}{\\sqrt{1+u^2}} \\right]_{u_{min}}^{u_{max}}\n    // where u_{min} = -y/x and u_{max} = (1-y)/x.\n    float inten_dipole = (umax/sqrt(1.+umax*umax) - umin/sqrt(1.+umin*umin))/uv.x;\n    \n    \n    \n    float inten = uv.x < 0. ? inten_monopole : inten_dipole;\n    inten = abs(inten) * (0.5+0.2*sin(10.*iTime)+0.1*sin(16.18*iTime));\n    \n    \n    vec3 col = vec3(1.,0.25,0.05) * inten;\n    col = col / (1. + col); // Tone mapping\n    col = sqrt(col); // Gamma\n    \n    col = abs(uv.x) > 0.02 ? col : vec3(0,0,1);\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}