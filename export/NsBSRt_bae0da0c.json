{"ver":"0.1","info":{"id":"NsBSRt","date":"1620750578","viewed":111,"name":"breathing-spirals","username":"ykcwa","description":"spirals","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blackandwhite"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// from https://www.shadertoy.com/view/Mls3R7\nvoid rotate(inout vec2 p,float angle,vec2 rotationOrigin)\n{\n    p -= rotationOrigin;\n    p *= mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n    p += rotationOrigin;\n}\n\n\nfloat stripe(float x, float stripeWidth) {\n  float s = mod(x + 0.5 * stripeWidth, 2.0 * stripeWidth);\n  if (s > stripeWidth) {\n    s = 2.0 * stripeWidth - s;\n  }\n  float smoothness =  4./iResolution.y;\n  return smoothstep(stripeWidth * 0.5, stripeWidth * 0.5 - smoothness, s);\n}\n\nfloat xorBW(float color1, float color2) { \n  return abs(color1 - color2);\n}\n\nfloat spiralColor(vec2 uv, int numStripes, float curveRate) {\n  float r = length(uv);\n  float angle = atan(uv.x, uv.y) + curveRate * r;\n  return stripe(angle, 2.0 * 3.14159 / float(numStripes));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (y from -0.5 to 0.5, x scaled appropriately)\n    vec2 uv = ( fragCoord - .5* iResolution.xy) / iResolution.y;\n\n    int numStripes = 16;\n    float curveRate = 2.0;\n    float rotAngle = cos(iTime / 3.0);\n    \n    vec2 uv1 = vec2(uv.x, uv.y);\n    rotate(uv1, 0.0 * rotAngle, vec2(0));\n\n    vec2 uv2 = vec2(-1.0 * uv.x, uv.y);\n    rotate(uv2, 3.0 * rotAngle, vec2(0));\n\n    float spiral1 = spiralColor(uv1, numStripes, curveRate);\n    float spiral2 = spiralColor(uv2, numStripes, curveRate);\n\n\n    fragColor = vec4(vec3(xorBW(spiral1, spiral2)), 1.0);\n}","name":"Image","description":"","type":"image"}]}