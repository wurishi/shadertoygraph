{"ver":"0.1","info":{"id":"4lXBDH","date":"1511770431","viewed":196,"name":"try sphere","username":"cailuming","description":"sphere remarching, but no visibility test,and I don't know how to make visibility test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3dsphereraymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEP 200.\n#define BIAS 1.1\n\n// just draw a 3d point\nvec4 dawDot(vec3 eyePos,vec3 rayDir,vec3 center,vec4 color){\n    \n \n    float dist=0.;\n    float eyeToCenter=distance(center,eyePos);\n    vec3 detectP=vec3(1);\n    for(float i=0.;i<MAX_STEP;i++){\n       detectP=eyePos+rayDir*(eyeToCenter*(i/MAX_STEP));\n       dist=distance(detectP,center);\n    }\n   \n    dist=0.1/dist;\n    \n    \n    vec4 col=vec4(dist,dist,dist,detectP.z)*color;\n    return col;\n}\n\n// draw a sphere\nvec4 drawSphere(vec3 eyePos,vec3 rayDir,vec3 center,float radius,vec3 lightPos,vec4 color){\n   \n    vec3 detectP=vec3(1.);\n    vec4 col=vec4(0,0,0,0);\n    vec3 sphereNorm=vec3(0,0,0);\n    \n    float eyeToCenter=distance(center,eyePos)-radius+BIAS;\n    float nl=0.;\n    float dist=0.;\n    \n    for(float i=0.;i<MAX_STEP;i++){\n       detectP=eyePos+rayDir*(eyeToCenter*(i/MAX_STEP));\n       dist=distance(detectP,center);\n       if(dist<=radius){        \n           \n            //calculate the norm\n            sphereNorm=normalize(detectP-center);\n            vec3 lightDir=normalize(lightPos-detectP);\n            nl=clamp(dot(lightDir,sphereNorm),0.1,1.);\n            break;\n       }\n    }\n    float fnl=mix(nl,pow(nl,60.),0.4);\n    col=vec4(fnl,fnl,fnl,detectP.z)*color;\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy / iResolution.y;\n    vec2 uvc=2.*uv-vec2(1);\n    vec3 scnPos=vec3(uvc,0);\n    vec3 eyePos=vec3(0,0,-3);\n    float time=iTime;\n    float freq=texture(iChannel0,vec2(vec2(iTime,iTime))).y;\n    vec3 rayDir=normalize(vec3(scnPos-eyePos));\n    vec3 lightPos=vec3(cos(time)*0.6,sin(time)*0.8+freq*0.2,-5.*cos(time)+3.2);\n    vec4 col =vec4(0);\n    \n   \n    vec4 col1=dawDot(eyePos,rayDir,lightPos,vec4(cos(iTime),1,0.3,1));\n    vec4 col2=drawSphere(eyePos,rayDir,eyePos+vec3(0,0,1)*6.,0.5,lightPos,vec4(1,0,0.3,1));\n    vec4 col3=drawSphere(eyePos,rayDir,eyePos+vec3(0.2,0,1)*5.,0.5,lightPos,vec4(.6,cos(iTime),0.3,1));\n    vec4 col4=drawSphere(eyePos,rayDir,eyePos+vec3(0.5,0,1)*5.,0.5,lightPos,vec4(cos(iTime),1,0.3,1));\n    \n    col=col1;\n    \n    if(col2.z<col1.z){\n       col=col2;\n    }\n    if(col3.z<col2.z){\n       col=col3;\n    }\n    if(col4.z<col3.z){\n       col=col4;\n    }\n    \n\tfragColor = vec4(col1+col2+col3+col4);\n}","name":"Image","description":"","type":"image"}]}