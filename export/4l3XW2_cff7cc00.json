{"ver":"0.1","info":{"id":"4l3XW2","date":"1481559842","viewed":153,"name":"Lonely Cloud","username":"Void_Scroll","description":"A cloud that expands and retracts over time. What a lovely sight.\nBear in mind that I am a complete Shadertoy rookie, I'm trying my best !","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","draft","experiment","educational","hypnotic","relaxing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Please enjoy\nvoid mainImage( out vec4 color, in vec2 pixCoords )\n{    \n    // We're going to create 6 circles somewhere on the picture !\n    float centerX = iResolution.x / 2.0;\n    float centerY = iResolution.y / 2.0;\n    float cloudHue = (cos(-iTime / 60.0) * 0.85) + 1.2;\n    float skyHue = (cos(-iTime / 60.0) * 0.75) + 0.3;\n    \n    // A bunch of gibberish - it means the circles are discentered.\n    float cloud1CenterX = centerX + iResolution.x / 9.0 + cos(iTime) * 20.0;\n    float cloud1CenterY = centerY + iResolution.y / 8.0;\n    \n    float cloud2CenterX = centerX + iResolution.x / 11.0 + -cos(iTime) * 20.0;\n    float cloud2CenterY = centerY - iResolution.y / 8.0;\n    \n    float cloud3CenterX = centerX - iResolution.x / 9.0;\n    float cloud3CenterY = centerY + iResolution.y / 8.0 + cos(iTime) * 5.0;\n    \n    float cloud4CenterX = centerX - iResolution.x / 11.0;\n    float cloud4CenterY = centerY - iResolution.y / 8.0 + sin(iTime) * 14.0;\n    \n    float cloud5CenterX = centerX - iResolution.x / 4.0 + sin(iTime) * 4.0;\n    float cloud5CenterY = centerY;\n    \n    float cloud6CenterX = centerX + iResolution.x / 4.0;\n    float cloud6CenterY = centerY - sin(iTime) * 6.0;\n    // End of gibberish\n    \n    // Play with this value to get bigger or smaller circles\n    float cloudRadius = iResolution.x / 6.0;\n    \n    float distance1 = cos(-iTime) * 10.0 + sqrt(pow(pixCoords.x - cloud1CenterX, 2.0) + pow(pixCoords.y - cloud1CenterY, 2.0));\n    float distance2 = cos(-iTime) * 10.0 + sqrt(pow(pixCoords.x - cloud2CenterX, 2.0) + pow(pixCoords.y - cloud2CenterY, 2.0));\n    float distance3 = cos(-iTime) * 10.0 + sqrt(pow(pixCoords.x - cloud3CenterX, 2.0) + pow(pixCoords.y - cloud3CenterY, 2.0));\n    float distance4 = cos(-iTime) * 10.0 + sqrt(pow(pixCoords.x - cloud4CenterX, 2.0) + pow(pixCoords.y - cloud4CenterY, 2.0));\n    float distance5 = cos(-iTime) * 10.0 + sqrt(pow(pixCoords.x - cloud5CenterX, 2.0) + pow(pixCoords.y - cloud4CenterY, 2.0));\n    float distance6 = cos(-iTime) * 10.0 + sqrt(pow(pixCoords.x - cloud6CenterX, 2.0) + pow(pixCoords.y - cloud4CenterY, 2.0));\n    \n\tcolor = vec4(0.00, skyHue - 0.15, skyHue - 0.0, 1.00);\n    if (distance1 < cloudRadius)\n    {\n        color = vec4(cloudHue, cloudHue, cloudHue, 1.00);\n    }\n    if (distance2 < cloudRadius)\n    {\n        color = vec4(cloudHue, cloudHue, cloudHue, 1.00);\n    }\n    if (distance3 < cloudRadius)\n    {\n        color = vec4(cloudHue, cloudHue, cloudHue, 1.00);\n    }\n    if (distance4 < cloudRadius)\n    {\n        color = vec4(cloudHue, cloudHue, cloudHue, 1.00);\n    }\n    if (distance5 < cloudRadius)\n    {\n        color = vec4(cloudHue, cloudHue, cloudHue, 1.00);\n    }\n    if (distance6 < cloudRadius)\n    {\n        color = vec4(cloudHue, cloudHue, cloudHue, 1.00);\n    }\n    \n    // I want to add more clouds in the background that move around.\n    // And stars when nighttime comes that lit up behind the Lonely Cloud\n}","name":"Image","description":"","type":"image"}]}