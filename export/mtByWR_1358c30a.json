{"ver":"0.1","info":{"id":"mtByWR","date":"1691641115","viewed":44,"name":"Mandelbrot Minimum Chars","username":"wyattlukelowery","description":"Mandelbrot with minimum chars but limited by ultimate precision","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nSCREEN COORDS & COLOR\nr=iResolution.xy;O.z++<r.x\nRetrieves coordinates of the sreen and blue gradient\n\nSQUARE\nmat2(-z.y,z.xxy)*z.yx\nComputes [x^2-y^2,2*x*y] (components of z^2)\n\n\nTRANSLATION\n+(F+F-r)/r.y\n+ C (with centered, normalized coords)\n\n\nCONVERGENCE\ndot(z=...,z)<4\nEquivilant of sqrt(z^2)<2\n     \n     \nDISPLAY\nO=+=... \nPixels get whiter w/ higher iterations\n\n*/\n\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec2 z,r=iResolution.xy;O.z++<r.x;)\n        O+=dot(z=mat2(-z.y,z.xxy)*z.yx+(F+F-r)/r.y,z)<4.?.1:.0;\n}\n\n\n\n/*\n//Chars: 136\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec2 z,r=iResolution.xy;O.z++<r.x;)\n        O+=log2(dot(z=mat2(-z.y,z.xxy)*z.yx+(F+F-r)*1.5/r.y,z))<4.?.08+sin(iTime*2.)*.05:.0;\n}\n\n\n/*\n\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec2 z,r=iResolution.xy;O.z++<r.x;)\n        O+=log2(dot(z=cross(vec3(-z.y,z),z.xyx).xy+(F+F-r)*1.5/r.y,z))<4.?.08+sin(iTime*2.)*.05:.0;\n}\n\n\n\n\n/* FINAL STATIC VERSION --- CHARS: 136\n\n//One-liner\nvoid mainImage(out vec4 O,vec2 F){for(vec2 z,r=iResolution.xy;O.z++<r.x;O+=dot(z=cross(vec3(-z.y,z),z.xyx).xy+(F+F-r)/r.y,z)<4.?.1:.0);}\n\n//De-Obfusced\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec2 z,r=iResolution.xy;O.z++<r.x;)\n        O+=dot(z=cross(vec3(-z.y,z),z.xyx).xy+(F+F-r)/r.y,z)<4.?.1:.0;\n}\n\n//Breaks character count but centers & zooms out for pretty shading\nvoid mainImage(out vec4 O,vec2 F){\n    O=vec4(-.1);\n    for(vec2 z,r=iResolution.xy;O.z++<r.x;O+=dot(z=cross(vec3(-z.y,z),z.xyx).xy+(F+F-r)*2./r.y,z)<4.?.1:.0);\n}\n\n\n/*HISTORY -----------------------------------------------------------------------\n\n//136 - Color Change O.z++ to O.x++ or O.y++ changes color\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec2 z,r=iResolution.xy;O.z++<r.x;)\n        O+=dot(z=cross(vec3(-z.y,z),z.xyx).xy+(F+F-r)/r.y,z)<4.?.1:.0;\n}\n\n\n//136 - no improvment but removes arbitrary iteration limit\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec2 z,r=iResolution.xy;O.x++<r.x;)\n        O+=dot(z=cross(vec3(-z.y,z),z.xyx).xy+(F+F-r)/r.y,z)<4.?.1:.0;\n}\n\n//136 and gradient (break thru)\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec2 z,r=iResolution.xy;O.x++<99.;)\n        O+=dot(z=cross(vec3(-z.y,z),z.xyx).xy+(F+F-r)/r.y,z)<4.?.1:.0;\n}\n\n//137 Chars AND gradient.... wow\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec2 z,r=iResolution.xy;O.x++<99.;z=cross(vec3(-z.y,z),z.xyx).xy+(F+F-r)/r.y)\n        O+=dot(z,z)<4.?.1:.0;\n}\n\n//135 Chars but offset... not ideal\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec3 r=iResolution;r.z++<99.;O.xyz=cross(vec3(-O.y,O),O.xyx)+(F.xyy-r)/r.y);\n    O=vec4(dot(O,O)<4.);\n}\n\n//136 Chars - binary shading (ugly)\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec2 z,r=iResolution.xy;O.x++<99.;z=cross(vec3(-z.y,z),z.xyx).xy+(F+F-r)/r.y)\n        O=vec4(dot(z,z)<4.);\n}\n\n//137 Chars\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec2 i,z,r=iResolution.xy;i.x++<99.;)\n        O=vec4(dot(z=cross(vec3(-z.y,z),z.xyx).xy+(F+F-r)/r.y,z)<4.);\n}\n\n\n\n//138 Chars\nvoid mainImage(out vec4 O,vec2 F){\n    for(vec2 i,z,r=iResolution.xy;i.x<99.;i++)\n        O=vec4(dot(z=cross(vec3(-z.y,z),z.xyx).xy+(F+F-r)/r.y,z)<4.);\n}\n\n//138 Chars\nvoid mainImage(out vec4 O,vec2 F){\n    vec3 z,r=iResolution;\n    for(int i;i<99;i++)\n        O=vec4(dot(z=cross(vec3(-z.y,z),z.xyx)+(F.xyy*2.-r)/r.y,z)<4.);\n}\n\n\n\n\n//145 Chars\nvoid mainImage(out vec4 O,vec2 F){\n    vec2 z,r=iResolution.xy;\n    for(int i;i<99;i++)\n        O=vec4(length(z=vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y)+(F*2.-r)/r.y)<2.);\n}\n\n\n\n\n//150 Chars\nvoid mainImage(out vec4 O,vec2 F){\n    vec3 r=iResolution;\n    vec2 z;\n    for(int i;i<99;i++)\n        O = vec4(length(z=vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y)+(F*2.-r.xy)/r.y)<2.);\n}\n\n\n//162 Chars\nvoid mainImage(out vec4 O, vec2 F){\n    vec3 r=iResolution;\n    vec2 z;\n    for(float i;i<99.;i++)\n        if(length(z=vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y)+(F*2.-r.xy)/r.y)<2.)\n             O=vec4(i/99.);\n}\n\n\n//Full Colors and Zoom but more chars\n\n#define s(a) vec2(a.x*a.x-a.y*a.y, 2.*a.x*a.y)\n#define hsl(h) .5-.5*k.www*clamp(k.xxx-abs(fract(h+k.xyz)*4.-2.),-1.,1.)\nconst vec4 k=vec4(3.,2.,1.,9.)/3.;\n\nvoid mainImage( out vec4 O, in vec2 F ){\n\n    float v=exp(iTime*.6);\n    vec3 r = iResolution;\n    vec2 z,p=vec2(-.9002,.2325),u=(F*2.-r.xy)/r.y+p*(v-1.);\n    for(float i,n=99.;i<n;i++)\n        if(length(z=s(z)+u/v)<2.)\n             O=(hsl(i/n)).xyzz;\n}\n\n\n//Better naming and readable and colors!\n//Alternative Focal vec2(-0.749461,exp(1.)/20.);\n\nvoid mainImage( out vec4 O, in vec2 F ){\n\n    float zoom=exp(iTime*.6);\n    vec2 z,focal=vec2(-0.9002,0.2325);\n    vec2 uv=((F*2.-iResolution.xy)/iResolution.y+focal*(zoom-1.))/zoom;\n    \n    for(float i,n=45.;i<n;i++)\n        if(length(z=mult(z,z)+uv)<2.)\n             O=(hsl(i/n)).xyzz;\n}\n*/\n","name":"Image","description":"","type":"image"}]}