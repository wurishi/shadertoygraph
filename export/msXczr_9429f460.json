{"ver":"0.1","info":{"id":"msXczr","date":"1686513709","viewed":92,"name":"Cool party","username":"Wither362","description":"A lighting effect using trigonometry, functions and more.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["lighteffect","colorshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 color = vec3(0.999999, 0.5, 0.99999999);\nconst float lightAmount = 0.05;\nconst vec2 lightPoint = vec2(0.5, 0.5);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = vec4(vec3(\n        color / distance(uv, lightPoint) * vec3(0.5 * abs(cos(iTime) * sin(iTime)) + 0.1,\n        0.4 * abs(sin(iTime) / tan(iTime)) + 0.1,\n        0.05 * abs(cos(iTime * iTime * iTime)) + 0.5))\n      * lightAmount * min(iTime * 0.5, 12.0) * vec3(1.0, 1.0, 1.05), 1.0);\n}","name":"Image","description":"","type":"image"}]}