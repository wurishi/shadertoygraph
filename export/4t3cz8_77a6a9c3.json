{"ver":"0.1","info":{"id":"4t3cz8","date":"1531415681","viewed":142,"name":"Fbm and warp","username":"darkeclipz","description":"(broken on some devices, you should see a circle).\n(best viewed in fullscreen imo)\n\nPlayed around with the fbm function, tutorials from:\n\nhttps://thebookofshaders.com/13/\nhttps://iquilezles.org/articles/warp/warp.htm","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm","warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://thebookofshaders.com/13/\n//https://iquilezles.org/articles/warp\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define OCTAVES 6\nfloat fbm (in vec2 st) {\n    // Initial values\n    float value = 0.0;\n    float amplitude = .5;\n    float frequency = 0.;\n    //\n    // Loop of octaves\n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitude * noise(st);\n        st *= 2.;\n        amplitude *= .5;\n    }\n    return value;\n}\n\nfloat map(vec2 uv, float r) \n{\n\tvec2 c = vec2(0);\n    vec2 d = uv-c;\n    return r / (d.x*d.x + d.y*d.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 R = iResolution.xy;\n    vec2 uv = (2.*fragCoord-R) / R.y;\n    float t = 4000. + iTime;\n    float tcos = cos(t) * .5 + .5;\n\n    vec3 col = vec3(0);\n    float p = 0.05 * abs(fbm( uv + t*0.02));\n    float q = 0.025 * abs(fbm( uv * p*t*0.5 ));\n    float warp = abs(fbm( uv + q*t*.75 ));\n    \n    col = mix(col, vec3(1), (0.05 + 0.025*tcos)*clamp(0.,1., map(uv, 0.5)));\n    col = mix(col, vec3(1), (0.4 + 0.4*tcos)*clamp(0.,1.,map(uv,0.02)));\n    col = mix(col, vec3(1,0,0), 0.7*clamp(0.,1.,(map(uv,0.1))));\n    col = mix(col, vec3(1,.5,.2), 0.75*smoothstep(0.,0.7, clamp(0., warp, warp*map(uv,0.05) )));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}