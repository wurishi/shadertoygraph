{"ver":"0.1","info":{"id":"7tXfDl","date":"1651642344","viewed":106,"name":"Traversable Mandelfeather","username":"Dominexis","description":"Fully traversable Mandelbrot set.\n\nUse the arrow keys to move side to side. Move W and S to zoom in and out respectively. Hit the spacebar to activate the hyper drive!\n\nFeather idea by ronwnor.","likes":3,"published":1,"flags":48,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 cMultiply( in vec2 a, in vec2 b ){\n\treturn vec2( a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x );\n}\nvec2 cInverse( in vec2 a ){\n\treturn a*vec2(1.0, -1.0)/(length(a)*length(a));\n}\nvec2 cDivide( in vec2 a, in vec2 b ){\n\treturn cMultiply( a, cInverse(b) );\n}\nvec2 cLog( in vec2 a ){\n\treturn vec2( log(length(a)), atan(a.y, a.x) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Initialize values\n    \n    vec2 center = texture(iChannel0, vec2(0.0, 0.0)).xy;\n    float zoom = pow(2.0, 1.0 - texture(iChannel0, vec2(0.0, 0.0)).z/5.0);\n    \n    int recursion_limit = 5000;\n    vec2 z = vec2( 0.0, 0.0 );\n    vec2 c = ( 2.0*fragCoord - iResolution.xy )*zoom/iResolution.y + center;\n    \n    \n    \n    // Run iterations\n    int i;\n    for(i = 0; i < recursion_limit; i++) {\n        z = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;\n        if(abs(z.x*cos(iTime) + z.y*sin(iTime)) > 2.0) {\n            break;\n        }\n    }\n    \n    \n    \n    // Assign color\n    vec3 color;\n    float shade;\n    if(i == recursion_limit) {\n        color = vec3(0.0);\n    } else {\n        shade = float(i)*pow(zoom,0.35)/(abs(float(i)*pow(zoom,0.35)) + 1.0);\n        color = shade*vec3(1.0, 0.6666666, 0.0);\n    }\n    if(length(c) > 2.0) {\n        color = vec3(0.0);\n    }\n\n    \n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Initialize values\n    \n    vec2 center = texture(iChannel0, vec2(0.0, 0.0)).xy;\n    \n    float scroll = texture(iChannel0, vec2(0.0, 0.0)).z;\n    float zoom = pow(2.0, 1.0 - scroll/5.0);\n    \n    float center_speed = 0.04;\n    float scroll_speed = 0.06;\n    \n    \n    \n    // Apply center offset\n    \n    vec2 center_offset = vec2( \n        center_speed*( texture( iChannel1, vec2( 39.0/256.0, 0.0 ) ).x )\n      - center_speed*( texture( iChannel1, vec2( 37.0/256.0, 0.0 ) ).x ), \n        center_speed*( texture( iChannel1, vec2( 38.0/256.0, 0.0 ) ).x )\n      - center_speed*( texture( iChannel1, vec2( 40.0/256.0, 0.0 ) ).x ) );\n    \n    center_offset /= ( 1.0 - step( length(center_offset), center_speed ) )*(sqrt(2.0) - 1.0) + 1.0;\n    center += center_offset*zoom*( texture( iChannel1, vec2( 32.0/256.0, 1.0 ) ).x + 1.0);\n    \n    \n    \n    // Apply scroll offset\n    \n    float scroll_offset = \n        scroll_speed*( texture( iChannel1, vec2( 87.0/256.0, 0.0 ) ).x )\n      - scroll_speed*( texture( iChannel1, vec2( 83.0/256.0, 0.0 ) ).x );\n    \n    scroll += scroll_offset*( texture( iChannel1, vec2( 32.0/256.0, 1.0 ) ).x + 1.0);\n    \n    \n    \n\t// Write to buffer\n    \n    fragColor = vec4( center, scroll, 1.0 );\n}","name":"Buffer A","description":"","type":"buffer"}]}