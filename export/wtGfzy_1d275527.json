{"ver":"0.1","info":{"id":"wtGfzy","date":"1614569932","viewed":165,"name":"C_Firework","username":"hyrchao","description":"Inspired by\nhttps://www.shadertoy.com/view/lscGRl\nhttps://www.youtube.com/watch?v=xDxAnguEOn8&ab_channel=TheArtofCode","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fx","particle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nin vec2 fragCoord;\n\n//==============================================================\n\nconst float minpCounts = 150.;\nconst float maxpCounts = 300.;\nconst float minpBrightness = 0.0002;\nconst float maxpBrightness = 0.0008;\nconst float minpShoots = 2.;\nconst float maxpShoots = 10.;\nconst float timeScale = 0.5;\n//=============================================================\n\n// All components are in the range [0â€¦1], including hue.\nvec3 HSV2RGB(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat Curve_Fadeout(float t)\n{\n    return (t -1.) * (t - 1.);\n}\n\nfloat BrightnessCurve_bk(float t)\n{\n    return (t*t*t*t - 2.*t*t*t + t*t) / 0.0625;\n}\n\nfloat BrightnessCurve(float t)\n{\n    return (t*t*t*t - 2.*t*t*t + t*t) / 0.0625;\n}\n\nfloat Rand11(float t)\n{\n    float x = fract(sin(413.3 * t + 1132.6));\n    float rand = x * 2.0 -1.0;\n    return rand;   \n}\n\nvec2 Rand12(float t)\n{\n    float x = fract(sin(223.3 * t + 1132.6));\n    float y = fract(cos(3322.2 * t - 122.1));\n    vec2 rand2 = vec2(x, y) * 2.0 -1.0;\n    return rand2;   \n}\n\nvec2 Rand12_Round_Increase(float t)\n{\n    float a = 2.0 * PI * fract(sin(23.3 * t + 11.23));\n    float r = (1.0 - Curve_Fadeout(fract(cos(322.2 * t + 111.2))));\n    return vec2(r*cos(a), r*sin(a));\n}\n\nvec4 Rand14(float t)\n{\n    float x = fract(sin(123.3 * t + 654.6));\n    float y = fract(cos(89.2 * t - 64.1));\n    float z = fract(sin(203.4 * t - 11.1));\n    float w = fract(cos(168.14 * t - 44.2));\n    return vec4(x, y, z, w);\n}\n\nvec3 RandColor(float t, float brightRange)\n{\n    float h = 0.5 + 0.5*sin(0.5 * t);\n    float s = 0.5 + 0.5*sin(t);\n    float v = 1.0 - brightRange * (0.5 + 0.5 * sin(1.5 *t));\n    return HSV2RGB(vec3(h,s,v));\n}\n\nfloat Firework(vec2 uv, float t, float pc, float pb)\n{\n    float brightness = pb;\n    float dist = brightness / length(uv);\n    float fireworkPattern = 0.0;\n    for (float i = 0.0; i < 1.0; i += 1.0 / pc)\n    {\n        float particle = brightness / length(Rand12_Round_Increase(i + 1.0) * t + uv);\n        float twinkle = cos(22.5 * (t + i)) * 0.5 + 0.5;\n        fireworkPattern += particle * twinkle;\n    }\n    return fireworkPattern * BrightnessCurve(t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates with screen ratio\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y ;\n    float screenRatio = iResolution.x / iResolution.y;\n    float time = iTime * timeScale;\n    float timeline = fract(time);\n    float periodID = floor(time);\n    vec3 col =vec3(0.0);\n\n    // Explore firework for each shoot\n    float shoots = floor(mix(minpShoots, maxpShoots, 0.5 * Rand11(periodID) + 0.5));\n    for (float s = 0.0; s < timeline;  s += 1. / shoots)\n    {\n        float t  = timeline - s;\n        float tfl = floor(t) + periodID;\n        float seed = tfl + s;\n        vec4 rand = Rand14(seed);\n        vec2 uvOffset = rand.xy - 0.5;\n        uvOffset.x *= screenRatio;\n        float fireworkScale = mix(0.2, 0.6,rand.z);\n        float particleCounts = mix(minpCounts , maxpCounts, rand.w);\n        float particleBrightness = mix(maxpBrightness, minpBrightness, Curve_Fadeout((particleCounts - minpCounts)/(maxpCounts - minpCounts)));\n        float fireworkPattern = Firework((uv + uvOffset) / fireworkScale, t, particleCounts, particleBrightness);\n        vec3 fireworkColor = RandColor((rand.z + rand.w) * 10.0 , 0.2);\n        col += fireworkPattern * fireworkColor;\n    }\n\n    // prev shoots\n    periodID -= 1.0;\n    float shoots_prev = floor(mix(minpShoots, maxpShoots, 0.5 * Rand11(periodID) + 0.5));\n    for (float s = 1.0 - 1./shoots_prev; s > timeline; s -= 1. / shoots_prev)\n    {\n        float t  = timeline  + 1.0 - s;\n        float tfl = floor(t) + periodID;\n        float seed = tfl + s;\n        vec4 rand = Rand14(seed);\n        vec2 uvOffset = rand.xy - 0.5;\n        uvOffset.x *= screenRatio;\n        float fireworkScale = mix(0.2, 0.6,rand.z);\n        float particleCounts = mix(minpCounts , maxpCounts, rand.w);\n        float particleBrightness = mix(maxpBrightness, minpBrightness, Curve_Fadeout((particleCounts - minpCounts)/(maxpCounts - minpCounts)));\n        float fireworkPattern = Firework((uv + uvOffset) / fireworkScale, t, particleCounts, particleBrightness);\n        vec3 fireworkColor = RandColor((rand.z + rand.w) * 10.0 , 0.2);\n        col += fireworkPattern * fireworkColor;\n    }\n\n    fragColor = vec4(col, 0.0);\n}","name":"Image","description":"","type":"image"}]}