{"ver":"0.1","info":{"id":"ddByDy","date":"1688108342","viewed":95,"name":"Waves interference","username":"thesage1014","description":"A little test to play with sin(x)/x","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//Source: https://github.com/tobspr/GLSL-Color-Spaces/blob/master/ColorSpaces.inc.glsl\n#ifndef saturate\n#define saturate(v) clamp(v,0.,1.)\n//      clamp(v,0.,1.)\n#endif\nvec3 hue2rgb(float hue){\n\thue=fract(hue);\n\treturn saturate(vec3(\n\t\tabs(hue*6.-3.)-1.,\n\t\t2.-abs(hue*6.-2.),\n\t\t2.-abs(hue*6.-4.)\n\t));\n}\n\n#define XSCALE 100.\n#define YSCALE 1.\n#define PULSES 4\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-.5;\n    float x = uv.x * 1.;\n    float time = sin(iTime*.45)*.5;//mod(iTime*.25,2.);\n    float time2 = sin(iTime*.35)*.8;//mod(iTime*.25,2.);\n    float modtime = 2.-mod(iTime*.45,2.);\n    float modtime2 = 2.-mod(iTime*.35,2.);\n    \n    //float time2 =mod(iTime*.125,2.);\n    x = uv.x - time + .2;\n    float wave = uv.y*YSCALE + sin(x*XSCALE)/(x*XSCALE)*0.4*modtime;\n    x = uv.x + time - .2; \n    float wave2 = uv.y*YSCALE + sin(x*XSCALE)/(x*XSCALE)*0.4*modtime;\n    x = uv.x - time2 + .2;\n    float wave3 = uv.y*YSCALE + sin(x*XSCALE)/(x*XSCALE)*0.4*modtime2;\n    x = uv.x + time2 - .2; \n    float wave4 = uv.y*YSCALE + sin(x*XSCALE)/(x*XSCALE)*0.4*modtime2;\n    \n    float line = smoothstep(1.126,0.01,abs(wave + wave2 + wave3 + wave4));\n    vec3 col = ( hue2rgb(line+.5)*line + line*.5);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}