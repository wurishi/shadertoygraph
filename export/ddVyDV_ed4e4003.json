{"ver":"0.1","info":{"id":"ddVyDV","date":"1696658934","viewed":106,"name":"kishimisu_squares","username":"Lukezin","description":"squares","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["squares"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// distance to box\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 w = abs(p)-b;\n    float g = max(w.x,w.y);\n    return (g>0.0)?length(max(w,0.0)):g;\n}\n\nvec3 palette(float t) \n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    \n    return a + b * cos(6.28318*(c*t*d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coordinates\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv; // keeps track of global center\n    vec3 finalColor = vec3(0.0);\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float px = 2.0/iResolution.y;\n    \n    // vec3 col;\n    \n    // box size\n    vec2 b1 = vec2(0.5,0.5);\n    \n    for (float i = 0.0; i < 3.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = sdBox(uv,b1);\n\n        // vec3 col = palette(d + iTime); // local coloring\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4); // global coloring\n\n        // fragColor = vec4(col, 1.0);\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n        // d = smoothstep(0.0, 0.1, d);\n        d = 0.005 / d;\n        finalColor += col * d;\n        //fragColor = vec4(uv, 0.0, 1.0);\n    }\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}