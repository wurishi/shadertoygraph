{"ver":"0.1","info":{"id":"dscczN","date":"1694783021","viewed":50,"name":"2D Graph Visualizer","username":"twixuss","description":".","likes":3,"published":1,"flags":48,"usePreview":0,"tags":["visualizer","graph","function","plot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 1 to zoom out\n// 2 to zoom in\n// Click & Drag to move camera\n\n\n\n// Edit this:\nfloat f(vec2 p) {\n\n    return mix(\n        squircle(p, 3.0 + sin(iTime * PI)) - 1.0,\n        p.y - sin(sin(p.x)+iTime*2.0),\n        sin(iTime) * 0.5 + 0.5);\n        \n    // Parabola\n    return p.y - p.x*p.x;\n    \n    \n    // Sine\n    return p.y - sin(p.x);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvec2 df(vec2 p) {\n    vec2 o = vec2(1e-3, 0);\n    return (f(p) - vec2(f(p+o.xy), f(p+o.yx)))/o.x;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy*2.0 - 1.0;\n    uv *= pow(2.0, 1.0 + load(L_VIEW).z);\n    uv += load(L_VIEW).xy/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float w = fwidth(uv.y) * 2.0;\n\n    fragColor = vec4(0.1);\n#define line(thick, color, where) fragColor = mix(fragColor, color, smoothstep(w*float(thick), 0.0, abs(where)));\n    line(10,  vec4(0.12),    fract(uv.x*10.0+0.5) - 0.5);\n    line(10,  vec4(0.12),    fract(uv.y*10.0+0.5) - 0.5);\n    line(1,   vec4(0.15),    fract(uv.x+0.5) - 0.5);\n    line(1,   vec4(0.15),    fract(uv.y+0.5) - 0.5);\n    line(0.1, vec4(0.2),     fract(uv.x*0.1+0.5) - 0.5);\n    line(0.1, vec4(0.2),     fract(uv.y*0.1+0.5) - 0.5);\n    line(1,   vec4(0.5,0,0,1), uv.y);\n    line(1,   vec4(0,0.5,0,1), uv.x);\n    line(1,   vec4(1),       f(uv)/length(df(uv)));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define load(uv) texelFetch(iChannel0, ivec2(uv), 0)\n#define L_MOUSE ivec2(0,0)\n#define L_VIEW ivec2(1,0)\n#define kdown(k) (texelFetch(iChannel1, ivec2(k, 1), 0).x > 0.5)\n\n#define K0 48\n#define K1 49\n#define K2 50\n#define K3 51\n#define K4 52\n#define K5 53\n#define K6 54\n#define K7 55\n#define K8 56\n#define K9 57\n#define KB 66\n#define KC 67\n#define KD 68\n#define KE 69\n#define KF 70\n#define KG 71\n#define KH 72\n#define KI 73\n#define KJ 74\n#define KK 75\n#define KL 76\n#define KM 77\n#define KN 78\n#define KO 79\n#define KP 80\n#define KQ 81\n#define KR 82\n#define KS 83\n#define KT 84\n#define KU 85\n#define KV 86\n#define KW 87\n#define KX 88\n#define KY 89\n#define KZ 90\n\n#define PI 3.1415926535897932384626433832795\n#define TAU (PI*2.0)\n\nfloat squircle(vec2 p, float q) {\n    p = abs(p);\n    return pow(pow(p.x, q) + pow(p.y, q), 1.0/q);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 uv = ivec2(fragCoord.xy);\n    \n    \n    if (iFrame == 0) {\n        fragColor = vec4(0);\n        return;\n    }\n    \n    fragColor = load(uv);\n    \n    vec4 oldMouse = load(L_MOUSE);\n    vec4 mouse = iMouse;\n    vec4 view = load(L_VIEW);\n    \n    if (oldMouse.z > 0.0 && mouse.z > 0.0) {\n        view.xy += (oldMouse.xy - mouse.xy)*pow(2.0, 2.0 + load(L_VIEW).z);\n    }\n    \n    view.z += float(kdown(K1));\n    view.z -= float(kdown(K2));\n    \n    if (uv == L_MOUSE) fragColor = mouse;\n    if (uv == L_VIEW) fragColor = view;\n}","name":"Buffer A","description":"","type":"buffer"}]}