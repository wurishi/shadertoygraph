{"ver":"0.1","info":{"id":"tllfR7","date":"1596389918","viewed":172,"name":"sinus0","username":"pohy","description":"sinus0","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["sinus0"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nvec2 rot(vec2 v, float a) {\n\tfloat s = sin(a);\n    float c = cos(a);\n    mat2 m = mat2(c, -s, s, c);\n    return m * v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy * .5 + .5) / iResolution.y;\n\n    // Time varying pixel color\n    vec3 col;// = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float size = .1;\n    vec2 pos = uv - vec2(sin(iTime), cos(iTime)) * .2;\n    pos = rot(pos, PI * sin(iTime));\n    float d = distance(pos, vec2(clamp(pos.x, -size, size), clamp(pos.y, -size, size)));\n    d = smoothstep(.01, .0, d);\n    \n    //col += d;\n    col += texture(iChannel0, pos).rgb * d;\n    //col.rg += uv; \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}