{"ver":"0.1","info":{"id":"Ds23zD","date":"1667324592","viewed":118,"name":"Textured Geometric Series Coords","username":"jt","description":"Geometric series loopless texture coordinates based on [url=https://www.shadertoy.com/view/7dScRG]1/4+1/16+1/64+1/256+...[/url],\nused in [url=https://www.shadertoy.com/view/dd2GRW] Geometric Series Square Tiling[/url].\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["infinite","geometric","textured","loopless","series","sum","telescoping"],"hasliked":0,"parentid":"fd2czy","parentname":"Textured Geometric Series"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/Ds23zD Textured Geometric Series Coords by jt\n// based on https://www.shadertoy.com/view/fd2czy Textured Geometric Series\n// based on https://www.shadertoy.com/view/7dScRG 1/4+1/16+1/64+1/256+...\n\n// tags: infinite, geometric, textured, loopless, series, sum, telescoping\n\n// see https://en.wikipedia.org/wiki/Geometric_series\nvec2 geometric_series_coords(vec2 p, float n)\n{\n    float n1 = n - 1.0;\n    float b = n / n1;\n    vec2 s = floor(log2(p)/log2(b));\n    return fract(p/pow(b,max(s.x,s.y))*n1);\n}\n\nvoid mainImage(out vec4 o, vec2 i)\n{\n    float n = floor((0.5 - 0.5 * cos(iTime)) * 10.0 + 2.0);\n    o = vec4(geometric_series_coords(i,n),0,1);\n}\n\n/*\nvoid mainImage(out vec4 o, vec2 u)\n{\n    vec2 s = floor(log2(u));\n    if(s.x > s.y) return vec4(u/exp2(s.x) - vec2(1,0), 0, 1);\n    if(s.x < s.y) return vec4(u/exp2(s.y) - vec2(0,1), 0, 1);\n    //if(s.x == s.y)\n    return vec4(u/exp2(s.x) - vec2(1,1), 0, 1);\n}\n*/\n","name":"Image","description":"","type":"image"}]}