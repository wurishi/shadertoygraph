{"ver":"0.1","info":{"id":"NdXyW7","date":"1642141592","viewed":202,"name":"2_2_hash1d","username":"tomoe","description":"sample code\nhash function of 1-in and 1-out","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["ch2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint k = 0x456789abu;\nconst uint UINT_MAX = 0xffffffffu;\nuint uhash11(uint n){\n    n ^= (n << 1);\n    n ^= (n >> 1);\n    n *= k;\n    n ^= (n << 1);\n    return n * k;\n}\nfloat hash11(float p){\n    uint n = floatBitsToUint(p);\n    return float(uhash11(n)) / float(UINT_MAX);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    float time = floor(60.0 * iTime);\n    vec2 pos = fragCoord.xy + time;\n    fragColor.rgb = vec3(hash11(pos.x));\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}