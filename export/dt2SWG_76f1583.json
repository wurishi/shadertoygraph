{"ver":"0.1","info":{"id":"dt2SWG","date":"1676539741","viewed":91,"name":"Circles enlarging perfect loop","username":"manji369","description":"rainbow colors zooming to form a loop","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["loop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float time = iTime;\n    vec2 uv = (fragCoord.xy / iResolution.xy) - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    int numCircles = 7;\n    vec3 colors[7];\n    colors[0] = vec3(0.58, 0.0, 0.83); // Violet\n    colors[1] = vec3(0.29, 0.0, 0.51); // Indigo\n    colors[2] = vec3(0.0, 0.0, 1.0); // Blue\n    colors[3] = vec3(0.0, 1.0, 0.0); // Green\n    colors[4] = vec3(1.0, 1.0, 0.0); // Yellow\n    colors[5] = vec3(1.0, 0.5, 0.0); // Orange\n    colors[6] = vec3(1.0, 0.0, 0.0); // Red\n    \n    // Calculate the radius of each circle based on time\n    float scaledTime = time*1.2;\n    float radiusFactor = 1.9;\n    \n    vec3 color = vec3(0.0);\n    \n    float circleRadiusStatic = 1.3;\n    \n    for (int i = 0; i < numCircles; i++) {\n        float r1 = mod(scaledTime, 1.0)*0.1 - 0.1 + 0.1*float(i);\n        float r2 = mod(scaledTime, 1.0)*0.1 + 0.1*float(i);\n        if (length(uv) > r1*radiusFactor && length(uv) < r2*radiusFactor) {\n        int colorIndex = ((numCircles-int(scaledTime)%numCircles)%numCircles + i)%numCircles;\n            color = colors[colorIndex];\n        }\n    }\n   \n    \n    if (length(uv) > circleRadiusStatic) {\n        color = vec3(0.0, 0.0, 0.0);\n    }\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}