{"ver":"0.1","info":{"id":"dscSRr","date":"1679302178","viewed":99,"name":"image cut apart effect","username":"PuddingWang","description":"simple effect, one image been cutted apart","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["simpleeffect","imagecuttedapart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926;\n\n// random function is copyed from shader \"Candy Tunnel\" in Shadertoy\nfloat randomFunc(float n)\n{\n    return fract(sin(n - 78.233) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float maxJitter = 0.06;\n    float duration = 0.4;\n    float colorROffset = 0.01;\n    float colorBOffset = -0.025;\n    \n    float jitterTime = mod(iTime, duration);\n    float amplitude = max(sin(iTime * (PI/duration)), 0.0);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float jitterValue = randomFunc(uv.y * 2.0 - 1.0); // make jitterValue to -1~1\n    bool needJitter = abs(jitterValue) < maxJitter * amplitude;\n    \n    float offsetX = needJitter ? jitterValue : jitterValue *amplitude * 0.006;\n    vec2 offset = vec2(offsetX, 0);\n    \n    vec4 colorR = texture(iChannel0, uv + offset);\n    vec4 colorG = texture(iChannel0, uv - offset);\n    vec4 colorB = texture(iChannel0, uv);\n    vec3 color = vec3(colorR.r, colorG.g, colorB.b);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}