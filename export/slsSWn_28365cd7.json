{"ver":"0.1","info":{"id":"slsSWn","date":"1625494549","viewed":158,"name":"Union Jack Flag - @The_ArtOfCode","username":"ShotgunSeat","description":"A union jack flag based off of the work of Martijn @The_ArtOfCode\n\nIt's not perfectly proportioned but it's my first go at writing something in shadertoy","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["flag","uk","artofcoding","unionjack"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 WHITE = vec3(1);\nvec3 RED = vec3(200, 16, 46)/255.;\nvec3 BLUE = vec3(1, 33, 105)/255.;\n\nfloat PI = 3.1415;\n\nfloat Stripes(vec2 uv, float width) {\n\n    float y = abs(uv.x) - width * 0.5;\n    float w = fwidth(y);\n    float yStripe = smoothstep(-w, w, y);\n    \n    float x = abs(uv.y) - width * iResolution.y/iResolution.x;\n    w = fwidth(x);\n    float xStripe = smoothstep(-w, w, x);\n    \n    return min(yStripe, xStripe);\n}\n\nvec2 RotateUV(vec2 uv, float angle) {\n    return vec2(\n        cos(angle) * uv.x + sin(angle) * uv.y,\n        cos(angle) * uv.y - sin(angle) * uv.x\n    );\n}\n\nvec3 Flag(vec2 uv) {\n    \n    float diagScale = 6./8.;\n    float diagOffset = 0.015;\n    \n    vec2 st = RotateUV(uv, PI/4.);\n\n    vec3 col = mix(WHITE, BLUE, Stripes(st, 0.166*diagScale));\n    col = mix(RED, col, Stripes(st + diagOffset * sign(-uv), 0.05*diagScale)); \n\n    col = mix(WHITE, col, Stripes(uv, 0.166));\n    col = mix(RED, col, Stripes(uv, 0.1)); \n   \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n\n    float t = uv.x*7.-2.*iTime+uv.y*3.;\n    uv.y += sin(t)*.05 * (uv.x + 0.5); //Multiply by uv.x to wave less on the left\n    \n    vec3 col = Flag(uv);\n    \n    col *= mix(1., .7+cos(t)*.3, (uv.x + 0.5)); //mix with uv.x to shade less on the left\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}