{"ver":"0.1","info":{"id":"l3sBW7","date":"1728492525","viewed":25,"name":"Julia 集合","username":"YB","description":"使用蓝紫辅助工具 [url=https://ddzeb.com/julia#+0.26933313,-0.49553290,1.0,0.4,0.0]Julia 集合常数[/url] 生成。","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","antialiasing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\n  DDZEB 原创作品，版权所有\n\n  https://ddzeb.com/julia#+0.26933313,-0.49553290,1.0,0.4,0.0\n  \n  Copyright (C) 2024, DDZEB.COM\n  DDZEB LANDS v1.4.3\n\n*/\n\nvec3 render(vec2 z) {\n  z *= 4.5; // scale the viewport\n  const vec2 c = vec2(+0.26933313, -0.49553290);\n  float l = 4.0; // add brightness\n  for (int i = 0; i < 256; i++) {\n    z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n    if (dot(z, z) > 1e4) break;\n    l += 1.0;\n  }\n  l -= log2(log2(dot(z, z))); // smooth\n  return 0.5 + 0.5 * cos(3.0 + l * 0.15 + vec3(1.0,0.4,0.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  // uvx2\n  vec2 uv = (fragCoord - iResolution.xy * 0.5) / iResolution.x;\n\n  // anti-aliasing\n  #define SIZE 2\n  vec3 col = vec3(0.0);\n  float sub = 2. / iResolution.x / float(SIZE);\n  for (int i = 0; i < SIZE; i++) {\n  for (int j = 0; j < SIZE; j++) {\n    col += render(uv + vec2(i, j) * sub);\n  }}\n  col /= float((SIZE) * (SIZE));\n\n\n  // output to screen\n  fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}