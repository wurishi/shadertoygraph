{"ver":"0.1","info":{"id":"3dXSD7","date":"1551377007","viewed":264,"name":"Recamán Sequence","username":"Chosen","description":"Recamán Sequence\nhttps://oeis.org/A005132\nhttps://www.youtube.com/watch?v=FGC5TdIiT9U","likes":8,"published":1,"flags":8,"usePreview":0,"tags":["plot","sequence","spooky","numberphile","oeis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141593\n#define BG_COL (vec3(244, 242, 232) / 255.)\n#define GRID_COL (vec3(179, 179, 255) / 255.)\n#define LINE_COL (vec3(69, 67, 67) / 255.)\n#define THICK .2\n#define GTHICK .04\n\n#define GDIST(X, GLINE) abs(mod(X + .5, GLINE) - .5) - GTHICK * GLINE * .1\n#define GRIDLINES(GL) if (GTHICK * GL > edge) col = mix(col, GRID_COL, smoothstep(edge, 0., min(GDIST(uv.x, GL), GDIST(uv.y, GL))));\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float t = getPosition(iTime);\n    int stage = int(t) + 1;\n    int maxZoom = 0, prevZoom;\n\tfor(int i = 0; i != stage; ++i){\n\t\tprevZoom = maxZoom;\n        maxZoom = max(recaman[i + 1], maxZoom);\n    }\n    float zoom = max(2., float(prevZoom) + fract(t) * float(maxZoom - prevZoom));\n    float edge = 1.5 * zoom / iResolution.x;\n    vec2 uv = zoom * ((fragCoord - vec2(0, .5) * iResolution.xy) / iResolution.x) - THICK;\n    vec3 col = BG_COL;\n    float radius, r, up = -1., lineSeg, left, right;\n    \n\tGRIDLINES(1.);\n\tGRIDLINES(5.);\n    GRIDLINES(10.);\n    GRIDLINES(20.);\n    GRIDLINES(40.);\n    \n    for(int i = 0; i != stage; ++i, up *= -1.){\n        left = float(min(recaman[i], recaman[i + 1]));\n        right = float(max(recaman[i], recaman[i + 1]));\n    \tradius = .5*(right - left);\n    \tr = distance(uv, vec2(left + radius, 0.));\n    \tlineSeg = smoothstep(edge, 0., radius - .5*THICK - r)\n        \t* smoothstep(edge, 0., -(radius + .5*THICK - r))\n        \t* smoothstep(.5*edge, 0., -up * uv.y);\n        if(i == stage - 1)\n        {\n            lineSeg *= smoothstep(0., -edge, (uv.x - left - radius) * sin(PI * fract(t))\n                                  * (1. - 2.*step(float(recaman[i + 1]), float(recaman[i])))\n                                  + up * uv.y * cos(PI * fract(t)));\n        }\n        col = mix(col, LINE_COL, lineSeg);\n    }\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define TAU 6.283185\n#define C1 32.70\n#define SEMITONE 1.0594631\n#define VOLUME .3\n\n// I would appreciate any suggestions how to make this better. Thanks!\nvec2 mainSound( in int samp,float time)\n{\n    float t = getPosition(time);\n    \n    // Chromatic scale to sound 'Spooky' like Numberphile suggests\n    return vec2(clamp(time, 0., VOLUME) // Initial fade in\n                * (.5 - .5 * cos(TAU * t)) // Smooth note on/off\n                * sin(TAU * time * C1 * pow(SEMITONE, float(recaman[int(t)]))));\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"#define VALUES 140\nconst int recaman[VALUES] = int[VALUES](0, 1, 3, 6, 2, 7, 13, 20, 12, 21, 11, 22, 10, 23, 9,\n                                        24, 8, 25, 43, 62, 42, 63, 41, 18, 42, 17, 43, 16, 44,\n                                        15, 45, 14, 46, 79, 113, 78, 114, 77, 39, 78, 38, 79,\n                                        37, 80, 36, 81, 35, 82, 34, 83, 33, 84, 32, 85, 31, 86,\n                                        30, 87, 29, 88, 28, 89, 27, 90, 26, 91, 157, 224, 156,\n                                        225, 155, 226, 154, 227, 153, 228, 152, 75, 153, 74,\n                                        154, 73, 155, 72, 156, 71, 157, 70, 158, 69, 159, 68,\n                                        160, 67, 161, 66, 162, 65, 163, 64, 164, 265, 367, 264,\n                                        368, 263, 369, 262, 370, 261, 151, 40, 152, 265, 379,\n                                        494, 378, 495, 377, 258, 138, 259, 137, 260, 136, 261,\n                                        135, 262, 134, 5, 135, 4, 136, 259, 403, 268, 132, 269,\n                                        131, 270);\n\nfloat getPosition(float time)\n{\n    return mod(time * 3., float(VALUES - 1));\n}\n","name":"Common","description":"","type":"common"}]}