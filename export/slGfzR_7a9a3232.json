{"ver":"0.1","info":{"id":"slGfzR","date":"1663918368","viewed":54,"name":"Ryan Sierpinski Carpet","username":"rmccampbell7","description":"Sierpinski carpet","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sierpinski_carpet(vec2 p, int depth) {\n    // float d = 0.;\n    float d = length(max(abs(p-.5) - .5, 0.));\n    float s = 1.;\n    for (int i = 0; i < depth; i++) {\n        p = 3.*fract(p);\n        s /= 3.;\n        vec2 dd = .5-abs(p-1.5);\n        d = max(d, min(dd.x, dd.y)*s);\n    }\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy/2.)/iResolution.y*1.2 + .5;\n    float d = sierpinski_carpet(uv, 5);\n    float v = 1.-pow(d*12., .5);\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col*v,1.0);\n}\n","name":"Image","description":"","type":"image"}]}