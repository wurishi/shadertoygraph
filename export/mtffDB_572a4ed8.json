{"ver":"0.1","info":{"id":"mtffDB","date":"1696701254","viewed":71,"name":"Halation","username":"paperjack","description":"my attempt at a halation shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["camera","bloom","glow","halation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 org_col = texture(iChannel0, uv);\n\n    vec4 blur_col = texture(iChannel0, uv);\n\n    float Pi = 6.28318530718; // Pi*2\n    \n    // GAUSSIAN BLUR SETTINGS {{{\n    float Directions = 16.0; // BLUR DIRECTIONS (Default 16.0 - More is better but slower)\n    float Quality = 3.0; // BLUR QUALITY (Default 4.0 - More is better but slower)\n    float Size = 7.0; // BLUR SIZE (Radius)\n    // GAUSSIAN BLUR SETTINGS }}}\n   \n    vec2 Radius = Size/iResolution.xy;\n\n    // Blur calculations\n    for( float d=0.0; d<Pi; d+=Pi/Directions)\n    {\n\t\tfor(float i=1.0/Quality; i<=1.0; i+=1.0/Quality)\n        {\n\t\t\tblur_col += texture( iChannel0, uv+vec2(cos(d),sin(d))*Radius*i);\t\t\n        }\n    }\n    blur_col /= Quality * Directions - 15.0;\n    \n\n    vec3 red_color = vec3(1.0, 0.25, 0.3)*20.0;\n    vec3 green_color = vec3(1.0, 0.7, 0.3)*5.0;\n    float green_contribution = 2.0;\n    float luminosity_contribution = 0.5;\n    float brightness_contribution = 7.0;\n    \n    float lum = pow(dot(vec3(0.30, 0.59, 0.11), blur_col.xyz), luminosity_contribution);\n    float distance_to_white = length(blur_col.rgb * 0.333);\n    float distance_to_green = min(pow(blur_col.g, green_contribution), 1.0);\n    vec3 halation_color = mix(red_color, green_color, distance_to_green);\n    \n    vec4 final = mix(org_col, vec4(halation_color * lum, 1.0), pow(distance_to_white, brightness_contribution));\n    \n    //vec4 final = org_col + vec4(halation_color * lum, 1.0) * pow(distance_to_white, brightness_contribution);\n\n    // Output to screen\n    fragColor = vec4(final.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}