{"ver":"0.1","info":{"id":"ftyXWd","date":"1643463039","viewed":89,"name":"sun retro","username":"raoul","description":"reuse of this shader :\nhttps://www.shadertoy.com/view/Wt33Wf","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sunretro"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p,float r, float blur ){\n    float d = length(uv -p ); \n    float c = smoothstep(r, r-blur, d); \n    return c;\n\n}\n\nfloat sun(vec2 uv, float battery)\n{\n \tfloat val = smoothstep(0.3, 0.29, length(uv));\n \tfloat bloom = smoothstep(0.7, 0.0, length(uv));\n    float cut = 3.0 * sin((uv.y + iTime * 0.2 * (battery + 0.02)) * 100.0) \n\t\t\t\t+ clamp(uv.y * 14.0 + 1.0, -6.0, 6.0);\n    cut = clamp(cut, 0.0, 1.0);\n    return clamp(val * cut, 0.0, 1.0) + bloom * 0.6;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n   \n      vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= .5; //-0.5 <> 0.5\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec2 p = vec2(.0, .0); \n    float val = Circle(uv,p,0.4, .05); \n\n     //float val = //smoothstep(0.3, 0.29, length(uv- 0.2));\n     //float bloom = smoothstep(0.7, 0.0, length(uv-0.2));\n     float battery = 1.0; \n     //float cut = 3.0 * sin((uv.y + iTime * 0.2 * (battery + 0.02)) * 100.0) \n\t\t//\t\t+ clamp(uv.y * 14.0 + 1.0, -6.0, 6.0);\n     float cut = 3.0 * sin((uv.y + iTime * 0.2 * (battery + 0.02)) * 100.0) \n\t\t\t\t+ clamp(uv.y * 14.0 + 1.0, -6.0, 6.0); //<-- crÃ©e une parti fixe en haut\n     cut = clamp(cut, 0.0, 1.0);\n     \n      vec3 c= vec3(1.,1.,0.)* val; \n              \n     \n    // Output to screen\n        fragColor = vec4(vec3(clamp(c * cut, 0.0, 1.0) +vec3(0.21,0.52,0.49) ),1.0);//+\n   \n}","name":"Image","description":"","type":"image"}]}