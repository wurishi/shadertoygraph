{"ver":"0.1","info":{"id":"lsSBWD","date":"1500415581","viewed":312,"name":"Rainbow Particle Visualizer","username":"clintolibre","description":"test at particle visualizer. Inspired by Matthias MÃ¼ller, specifically https://www.youtube.com/watch?v=fpViZkhpPHk ","likes":3,"published":1,"flags":96,"usePreview":0,"tags":["particles","visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    //mirror x\n    if (uv.x < .5) {\n    \tuv.x = 1.05-(uv.x*2.0);\n    } else {\n        uv.x = (uv.x*2.0)-.95;\n    }\n    //streaming out from center (mirror y)\n    if (uv.y > .5) {\n    \tuv.y = uv.y - .5;\n    } else {\n        uv.y = .5-uv.y;\n    }\n    //streaming in from sides\n    //if (uv.y > .5) {\n    //\tuv.y = 1.0-uv.y;\n    //}\n    vec4 vals = texture(iChannel0, uv);\n\tfragColor = vals;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfSDS","filepath":"https://soundcloud.com/smoke-and-mirrors-5/18-warriors","previewfilepath":"https://soundcloud.com/smoke-and-mirrors-5/18-warriors","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Random function from https://www.shadertoy.com/view/4ssXRX\n// note: uniformly distributed, normalized rand, [0;1[\nfloat nrand( vec2 n )\n{\n\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\nfloat gravity( float y ) {\n    y = y-0.002*iResolution.y;\n    if (y < 0.0) {\n    \ty = iResolution.y;\n    }\n\treturn y;\n}\nfloat drift( float x, vec2 fr) {\n    fr.y = fr.y + sin(iTime/8.0);\n    vec4 pfv = texture(iChannel2, fr);\n    x = x+ pfv.x-.2;\n\treturn x;\n}\nvec4 dim( float x, float y, float z) {\n    float da = .001;\n    y = y-da;\n    if (y < 0.0) {\n    \ty = 0.0;\n    }\n    x = x-da;\n    if (x < 0.0) {\n    \tx = 0.0;\n    }\n    z = z-da;\n    if (z < 0.0) {\n    \tz = 0.0;\n    }\n\treturn vec4(x, y ,z, 1.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 offset = vec2(fragCoord.x, fragCoord.y);\n    offset = vec2(offset.x, gravity(offset.y));\n    offset = vec2(drift(offset.x, uv), offset.y);\n    vec2 ouv = offset.xy / iResolution.xy;\n    int tx = int(((uv.x*1.2)-.1)*512.0);\n    int ty = int(uv.y*512.0);\n    float sum = 0.0;\n    //int starter = int(floor(float(tx)/8.0))*8;\n    if (iFrame == 1)\n    {\n        fragColor = vec4(0.0, 0.0, 0.0 , 1.0);\n        return;\n    }\n    vec4 previousFrameValues = texture(iChannel0, ouv);\n\tpreviousFrameValues = dim(previousFrameValues.x, previousFrameValues.y,previousFrameValues.z);\n    //for (int i = 0; i<1;i++) {\n\t//\tsum = sum + texelFetch( iChannel1, ivec2(starter+i,0), 0 ).x;\n    //}\n    //sum =(sum/1.0);\n    float col = texelFetch( iChannel1, ivec2(tx,0), 0 ).x;\n    float use = (uv.x*1.2-.1);\n    if (fragCoord.y < 1.0) {\n        float rando = nrand(vec2(uv.x*iTime, uv.y*iTime))*(.5*col);\n        if (rando > .18) {\n    \t\tpreviousFrameValues = vec4((1.0-use)*col,sin(use*3.14)*col, use*col,1.0);\n        } else {\n        \tpreviousFrameValues = vec4(0.0,0.0, 0.0,1.0);\n        }\n    } else if (fragCoord.y < 1.0) {\n    \tpreviousFrameValues = vec4(0.0,0.0, 0.0,1.0);\n    }\n    fragColor = vec4(previousFrameValues);\n}","name":"Buf A","description":"","type":"buffer"}]}