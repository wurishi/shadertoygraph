{"ver":"0.1","info":{"id":"4cyyWy","date":"1732483426","viewed":33,"name":"sequencer fun","username":"Chickenkiller","description":"playing with sound","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float z = trunc(iTime*8.0);\n    int x = 1 + int(mod(z,8.0));\n\n    // Time varying pixel coglor\n    vec3 col;\n    \n    if (uv.x + 0.1*sin (uv.y* iTime * uv.x) > float(x)/8.0) col = vec3(1,0,0);\n    else col = vec3(0,0,1);\n    \n  \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    \n    float r = trunc(time/16.0);\n    float t = mod(time/1.1,32.0); \n\n    float n[8] = float[](261.0,293.0,329.0,349.0,392.0,440.0,493.0,523.0);\n\n    float z = trunc(t*8.0);\n    int x = int(mod(z,8.0));\n    float f = n[x]+sin(t*10.0*r)*r*10.0;\n    //f = 0.0;\n\n    if (x == 0) \n    {\n        f += sin(t*1234.0)*10000.0; //snare\n    }\n    if (x == 4) \n    {\n        f = sin(t*50.0)*10.0; //bass\n    }\n\n\n    float left = ( sin(6.2831*f*0.8*(mod(t,1.0))) +0.5* sin(6.2831*f*0.1*(mod(t,1.0)))) * exp(-8.0*((t*8.0) - z));\n    float right = (cos(6.2831*f*0.8*(mod(t*1.1,1.0))) +0.5* sin(6.2831*f*0.1*(mod(t,1.0)))) * exp(-6.0*((t*8.0) - z));\n\n\n    return vec2(left,right); //mix\n}\n    ","name":"Sound","description":"","type":"sound"}]}