{"ver":"0.1","info":{"id":"ddGSRc","date":"1681377524","viewed":96,"name":"Twirl and Collapse","username":"SaekiYuu","description":"let's go fucking distort it","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["twirl","collapse","polarcoord"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI     (3.14159265)\n#define TWIRL_SPEED  (1.0)\n#define BOUND (0.25)\n#define COLLAPSE_START (0.15)\n#define COLLAPSE_SPEED (2.0)\n\nvec2 uv2xy(vec2 uv);\nvec2 xy2uv(vec2 xy);\nvoid distort(in float r, in float theta, out float newR, out float newTheta);\nvoid distort1(in float r, in float theta, out float newR, out float newTheta);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float rThreshold = 0.3;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 distortCenterUV = iMouse.xy / iResolution.xy;\n\n    vec2 xy = uv2xy(uv);\n    vec2 origin = uv2xy(distortCenterUV);\n    xy -= origin;\n    float r = length(xy);\n    float theta = atan(xy.y, xy.x);\n\n    distort1(r, theta, r, theta);\n\n    vec2 newXY = vec2(r * cos(theta), r * sin(theta));\n    newXY += origin;\n    vec2 texUV = xy2uv(newXY);\n    \n    vec4 texColor = texture(iChannel0, texUV);\n    \n    fragColor = texColor;\n}\n\nvec2 uv2xy(vec2 uv)\n{\n    return vec2((uv.x - 0.5) * iResolution.x / iResolution.y, uv.y);\n}\n\nvec2 xy2uv(vec2 xy)\n{\n    return vec2(xy.x * iResolution.y / iResolution.x + 0.5, xy.y);\n}\n\nvoid distort(in float r, in float theta, out float newR, out float newTheta)\n{\n    float tt = iTime * TWIRL_SPEED;\n    float tc = 1.0 - exp(-iTime * COLLAPSE_SPEED);\n    float inBound = step(r, BOUND);\n    \n    float maxDTheta = tt;\n    float rCollapse = tc * COLLAPSE_START;\n\n    newR = r + rCollapse * exp(-r / BOUND);\n\n    float k = maxDTheta / (BOUND * BOUND);\n    float dtheta = k * (r - BOUND) * (r - BOUND);\n    newTheta = theta + inBound * dtheta / newR;\n}\n\n// Distort to a bounch of slash\nvoid distort1(in float r, in float theta, out float newR, out float newTheta)\n{\n    float twirlT = iTime * TWIRL_SPEED;\n    float collapseT = twirlT * twirlT;\n\n    float dr = collapseT - r;\n    newR = r + dr * exp(dr) / (1.0 + exp(dr));\n    //r += (k - 1.0) / k;\n    newTheta = 2. / newR * twirlT + theta;\n}","name":"Image","description":"","type":"image"}]}