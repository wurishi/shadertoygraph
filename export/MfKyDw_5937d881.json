{"ver":"0.1","info":{"id":"MfKyDw","date":"1731965210","viewed":64,"name":"Truchet tiles v3","username":"jorge2017a2","description":"Truchet tiles v3","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["truchet","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n///Truchet tiles v3\n\n//--18-nov-2024\n//referencia\n//https:/-iquilezles.org/articles/distfunctions2d\n//https://archive.bridgesmathart.org/2020/bridges2020-191.pdf\n\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define S3(d,b) smoothstep(1.0/antialiasing(0.5),0. , d - (b) )\n\n\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\n\nvec3 DFS(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut;\n  return colOut;\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\n\nvec3 fig01(vec2 p, vec3 colout)\n{\n    \n    \nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(1.013514,1.0);\nr1=0.3108108;\nfloat d11=sdCircle(p-A,r1);\n\n\nA=vec2(0.0,-0.01351351);\nr1=0.3108108;\nfloat d12=sdCircle(p-A,r1);\n\n\n\nA=vec2(0.0,-0.01351351);\nr1=0.6959459;\nfloat d13=sdCircle(p-A,r1);\n\n\nA=vec2(1.013514,1.0);\nr1=0.6959459;\nfloat d14=sdCircle(p-A,r1);\nd14=Sdf_D(d14,d11);\ncolout= DFB(vec3(1.0), colout, d14);\n\n\nd12=Sdf_D(d13,d12);\ncolout= DFB(vec3(1.0), colout, d12);\n\n    return colout;\n}\n\n\nvec3 fig02(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(0.0,0.4932432);\nr1=0.1891892;\nfloat d21=sdCircle(p-A,r1);\ncolout= DFB(vec3(1.0), colout, d21);\n\nA=vec2(1.013514,0.4932432);\nr1=0.1891892;\nfloat d22=sdCircle(p-A,r1);\ncolout= DFB(vec3(1.0), colout, d22);\n\nA=vec2(0.5067568,1.0);\nr1=0.1891892;\nfloat d23=sdCircle(p-A,r1);\ncolout= DFB(vec3(1.0), colout, d23);\n\nA=vec2(0.5067568,-0.01351351);\nr1=0.1891892;\nfloat d24=sdCircle(p-A,r1);\ncolout= DFB(vec3(1.0), colout, d24);\n\n    return colout;\n}\n\n\nvec3 fig03(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(0.50,0.50);\nmed=vec2(0.55,0.55);\nfloat d30=sdBox(p-A,med);\n\n\n\nA=vec2(1.013514,1.0);\nr1=0.3108108;\nfloat d31=sdCircle(p-A,r1);\n\nA=vec2(0.0,1.0);\nr1=0.3108108;\nfloat d32=sdCircle(p-A,r1);\n\nA=vec2(0.0,-0.01351351);\nr1=0.3108108;\nfloat d33=sdCircle(p-A,r1);\n\nA=vec2(1.013514,-0.01351351);\nr1=0.3108108;\nfloat d34=sdCircle(p-A,r1);\n\n\nd30=Sdf_D(d30,d31);\nd30=Sdf_D(d30,d32);\nd30=Sdf_D(d30,d33);\nd30=Sdf_D(d30,d34);\ncolout= DFB(vec3(1.0), colout, d30);\n\n\n    return colout;\n}\n\n\n\nvec3 fig04(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\n\nA=vec2(0.0,-0.01351351);\nr1=0.3108108;\nfloat d41=sdCircle(p-A,r1);\n\nA=vec2(0.0,-0.01351351);\nr1=0.6959459;\nfloat d42=sdCircle(p-A,r1);\nd42=Sdf_D(d42,d41);\ncolout= DFB(vec3(1.0), colout, d42);\n\nA=vec2(0.5067568,1.0);\nr1=0.1891892;\nfloat d43=sdCircle(p-A,r1);\ncolout= DFB(vec3(1.0), colout, d43);\n\nA=vec2(1.013514,0.4932432);\nr1=0.1891892;\nfloat d44=sdCircle(p-A,r1);\ncolout= DFB(vec3(1.0), colout, d44);\n\n    return colout;\n}\n\n\n\nvec3 fig05(vec2 p, vec3 colout)\n{\n    \nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(0.0,0.4932432);\nr1=0.1891892;\nfloat d51=sdCircle(p-A,r1);\ncolout= DFB(vec3(1.0), colout, d51);\n\nA=vec2(1.013514,0.4932432);\nr1=0.1891892;\nfloat d52=sdCircle(p-A,r1);\ncolout= DFB(vec3(1.0), colout, d52);\n\nA=vec2(0.5067568,0.4932432);\nmed=vec2(0.1891892,0.555135);\nfloat d53=sdBox(p-A,med);\ncolout= DFB(vec3(1.0), colout, d53);\n    return colout;\n}\n\nvec3 fig06(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(0.0,0.4932432);\nr1=0.1891892;\nfloat d61=sdCircle(p-A,r1);\ncolout= DFB(vec3(1.0), colout, d61);\n\nA=vec2(0.6621622,0.4932432);\nmed=vec2(0.3513514,0.5135135);\nfloat d62=sdBox(p-A,med);\n\nA=vec2(1.013514,1.0);\nr1=0.3108108;\nfloat d63=sdCircle(p-A,r1);\n\nA=vec2(1.013514,-0.01351351);\nr1=0.3108108;\nfloat d64=sdCircle(p-A,r1);\n\nd62=Sdf_D(d62,d63);\nd62=Sdf_D(d62,d64);\ncolout= DFB(vec3(1.0), colout, d62);\n\n    return colout;\n}\n\n\n\nvec3 hash32(vec2 p) // https://www.shadertoy.com/view/4djSRW Hash without Sine by Dave_Hoskins\n{\n    vec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\n\n\n// Function to generate a random number based on tile position\nfloat random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n\nvec3 truchet(vec2 uv, vec3 col)\n{\n     vec2 pos = uv;\n    vec2 tile = floor(uv);\n    pos = fract(uv) ;\n    \n    \n    // Generate a random number to choose \n    float choice = random(tile);\n    float dist = 0.0;\n    \n    float nopc=6.0;\n    \n     vec3 color=vec3(0.25); \n     \n    //if (3.0*sin(iTime)>0.0)\n//      color = hash32(tile)+0.1;\n    \n           if (choice < 1.0/nopc) {\n        \n      col=fig03(pos,col*color);\n    } else if (choice < 2.0/nopc)\n    {\n        \n        col=fig02(pos,col*color);\n      \n    } else if (choice < 3.0/nopc) {\n    \n     { col=fig01(pos,col*color);    }\n    } else if (choice < 4.0/nopc) {\n      {\n        col=fig04(pos,col*color);\n      }\n    } else if (choice < 5.0/nopc) \n      { col=fig05(pos,col*color);    }\n    else if (choice < 6.0/nopc) \n      { col=fig06(pos,col*color);  }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    vec2 uv0=uv;\n    \n    uv-=vec2(0.0,-0.15);\n    float esc=6.0; //3.0;\n    \n    uv*=esc;\n    uv+=iTime;\n    vec3 col=vec3(0.0);\n    col= truchet(uv,col) ;\n    //col=1.0-col;\n    col=pow(col,  vec3(0.554545));\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}