{"ver":"0.1","info":{"id":"XdVcWW","date":"1522040434","viewed":492,"name":"Confetti Drop","username":"Passion","description":"reference: https://www.youtube.com/watch?v=52TMliAWocY","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = acos(-1.0);\nconst float TwoPI = PI * 2.0;\n\nmat2 r2(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(s, c, -c, s);\n}\nfloat rand (float r){\n    return fract(sin(r*768.65)*7589.89);\n}\nfloat triangle(vec2 uv, float i){\n  // Number of sides of your shape\n  int N = int(i);\n\n  // Angle and radius from the current pixel\n  float a = atan(uv.x,uv.y)+PI;\n  float r = TwoPI/float(N);\n\n  // Shaping function that modulate the distance\n  return cos(floor(.5+a/r)*r-a)*length(uv);\n}\n\nvec3 effect(vec2 uv, float t){\n    t*=2.;\n    uv*=3.5;\n    \n    vec2 a = vec2(3., 1.);\n    vec2 a2 = vec2(1.0, 2.0);\n    \n    vec2 st = vec2(uv*a);\n    vec2 id = floor(st);\n    \n    float n = rand(id.x);  //fract(sin(id.x*714.65)*7426.56);\n    st.y += t*.3;\n    st.y += n;\n\n    id = floor(st);\n    st = fract(st)-.5;\n    \n    t += rand(id.x+id.y)*TwoPI; //fract(sin(id.x*72.45+id.y*1488.88)*765.23)*TwoPI; //6.284;\n    \n    float y = -sin(t+sin(t+sin(t)*.5))*.40;\n    float x = .5* rand(id.y)-.24; //fract(sin(id.y*768.34)*7689.43)-.24;\n    \n    vec2 p1 = vec2(x, y);\n    vec2 p1t = ((st-p1) / a) * r2((-y*2.)+t*.5);\n    float d = triangle(p1t, n*4.+3.);\n    float m1 = smoothstep(.07, .0524, d);\n        \n    if(iMouse.z>0.1)\n        m1 = (st.x > .44 || st.y > .49) ? 1.0 : m1;\n    \n    vec3 rcol = vec3(rand(id.x+id.y),\n                     rand(id.x),\n                     rand(id.y));\n    \n    return mix(vec3(m1), rcol, m1);   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = (fragCoord/iResolution.xy) - .5;\n    vec2 uv = (fragCoord -.5*iResolution.xy) / iResolution.y;\n\n    //uv.x *= iResolution.x / iResolution.y;\n    uv /= 1.3-dot(uv,uv)*.33;\n    float t = iTime;//*.75;\n    uv.x += sin(t/5.)*4.;\n    uv.y -= cos(t/6.)*2.;\n    \n    \n    vec3 col = effect(uv*.8, t*1.8);\n    \n    uv*=r2(1.7);  //+sin(t/4.)\n    col+=effect(uv*1.3, t*1.75);\n    \n    uv*=r2(1.12);\n    uv.x += iTime*.25;\n    col+=effect(uv*1.2, t*1.25);\n    \n    uv*=r2(1.6);\n    uv.x-=iTime*.15;\n    col+=effect(uv*1.7, t*2.);\n    \n    \n    // Output to screen\n    //col = st; //vec3(st,0.0);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}