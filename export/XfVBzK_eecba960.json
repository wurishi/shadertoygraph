{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"vec2 frC(vec3 xyz){\nxyz=mod(xyz,sl);\nfloat myn=xyz.x+xyz.y*sl+xyz.z*sl*sl;\nreturn vec2(mod(myn,R.x),floor(myn/R.x));\n}\n\nfloat dTo(vec3 a, vec3 b){\nfloat v=tex(C0,ivec2(frC(b))).x;\nif(v<.001){return 1.;}\nreturn distance(a,b)-.4*v;}\n\nfloat sdf(vec3 p){\nvec3 anch=floor(p);\nfloat mDis=1.;\nfor(float i=0.;i<2.;i++){\nfor(float j=0.;j<2.;j++){\nfor(float k=0.;k<2.;k++){\nfloat iDis=dTo(p, anch+vec3(i,j,k));\nif(iDis<=0.){return iDis;}\nmDis=min(mDis,iDis);\n}}}\nreturn mDis;\n}\n\ngo{\nO=vec4(0.);\nvec2 uv=(2.*I-R.xy)/R.y;\nvec3 origin = vec3(sl*.5,sl*.5,0.);\nif(mod(origin.x,1.)<.1){origin.x+=.5;}\nvec3 dir=normalize(vec3(uv,1.));\nvec2 N=3.14*M.xy/R.y;\ndir*=mat3(1.,0.,0.,0.,cos(N.y),sin(N.y),0.,-sin(N.y),cos(N.y));\ndir*=mat3(cos(N.x),0.,-sin(N.x),0.,1.,0.,sin(N.x),0.,cos(N.x));\nfloat t=0.;\nfor(int i=0;i<80;i++){\nvec3 r=origin+dir*t;\nfloat d=sdf(r);\nt+=d;\nif(d<.001){break;}\nif(t>sl){break;}\n}\nO=vec4(pow((sl-t)/sl,4.));\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"#define go void mainImage( out vec4 O, in vec2 I )\n#define R iResolution\n#define M iMouse\n#define T iTime\n#define C0 iChannel0\n#define C1 iChannel1\n#define C2 iChannel2\n#define cut(x) clamp(x,0.,1.)\n#define tex(x,y) texelFetch(x,y,0)\n\n#define sl floor(pow(R.x*R.y,1./3.))\n","name":"Common","description":"","type":"common"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"keyboard","id":"4dXGRr","filepath":"/presets/tex00.jpg","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"vec4 we=vec4(-.65,.18,.06,-.125);\n\nfloat act(float x){return abs(x);}\n\nvec3 toC(vec2 xy){\nfloat myn=xy.x+R.x*(xy.y-.5);\nif(myn>sl*sl*sl){return vec3(-1.);}\nreturn floor(vec3(mod(myn,sl),mod(myn,sl*sl)/sl,myn/(sl*sl)));\n}\n\nvec2 frC(vec3 xyz){\nxyz=mod(xyz,sl);\nfloat myn=xyz.x+xyz.y*sl+xyz.z*sl*sl;\nreturn floor(vec2(mod(myn,R.x),myn/R.x));\n}\n\ngo{\nvec3 myC=toC(I);\nif(myC.x<0.){O=vec4(0.);return;}\nif(iFrame<1&&distance(myC,vec3(sl*.5,sl*.5,2.))<1.){O=vec4(1.);return;}\nif(tex(C1,ivec2(32,1)).x!=0.){O=vec4(0.);\nif(distance(myC,vec3(sl*.5,sl*.5,2.))<1.){O=vec4(1.);}\nreturn;\n}\nfloat t=0.;\nfor(float i=-1.;i<=1.;i++){\nfor(float j=-1.;j<=1.;j++){\nfor(float k=-1.;k<=1.;k++){\nfloat v=tex(C0,ivec2(vec2(0.,0.)+frC(vec3(myC.x+i,myC.y+j,myC.z+k)))).x;\nfloat s=abs(i)+abs(j)+abs(k);\nif(s==0.){t+=v*we.x;continue;}\nif(s==1.){t+=v*we.y;continue;}\nif(s==2.){t+=v*we.z;continue;}\nt+=v*we.w;\n}}}\nO=vec4(cut(act(t)));\n}","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":2,"type":"keyboard","id":"4dXGRr","filepath":"/presets/tex00.jpg","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"go{\nif(iFrame<1||tex(C2,ivec2(32,1)).x!=0.){O=tex(C0,ivec2(I));return;}\nO=.1*tex(C0,ivec2(I))+.9*tex(C1,ivec2(I));}","name":"Buffer B","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":true,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"XfVBzK","date":"1734208543","viewed":50,"name":"3D CA with spheres","username":"Boogaloo","description":"A 3D continuous state cellular automaton (a.k.a. coupled map lattice) where each cell is represented by a sphere, with the radius corresponding to its state. Mouse to rotate view, space to restart.\n\nReuploaded because the first version was broken.","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["cellularautomata"],"hasliked":0,"parentid":"XXsBWs","parentname":"3D testing"}}