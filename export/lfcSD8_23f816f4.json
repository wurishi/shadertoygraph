{"ver":"0.1","info":{"id":"lfcSD8","date":"1713847077","viewed":35,"name":"Circle Duality","username":"s_mahdi","description":"Color changing circle, first shadertoy project","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 sdfCircle(vec2 uv, float r, vec3 bgcol, vec3 color, vec2 offset) {\n    float x = uv.x - offset.x;\n    float y = uv.y - offset.y;\n\n    float d = length(vec2(x, y)) - r;\n\n    return d > 0. ? bgcol : color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 col = vec3(0,0,0);\n    \n   vec2 offset = vec2(sin(iTime*2.)*0.3, 0.); \n    \n    vec3 circleCol = vec3(0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0,2,4)));\n    if (uv.x > 0.0)\n        col = sdfCircle(uv, 0.3, vec3(1), circleCol - 0.5, offset);\n    else \n        col = sdfCircle(uv, 0.3, vec3(0), circleCol, offset);\n\n    fragColor = vec4(col, 1);\n}\n","name":"Image","description":"","type":"image"}]}