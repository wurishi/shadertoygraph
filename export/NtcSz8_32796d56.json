{"ver":"0.1","info":{"id":"NtcSz8","date":"1639597929","viewed":87,"name":"Using Random Methods.SV","username":"turtlelover891","description":"My second attempt at making random\n(this time with help) en.wikipedia.org/wiki/List_of_random_number_generators","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//middle square method\nfloat msm(float seed, float r){\n    float l = 0.;\n    float temp = seed;\n    while(temp >= 1.){\n        temp /= 10.;\n        l += 1.;}\n\n    float l2 = l*2.;\n    if((sqrt(10.)*seed) < pow(10., l))l2 -= 1.;\n    float l3 = ceil((l2-l)/2.);\n\n    for(float i=0.;i<r;i++){\n        if(seed == 0.)\n        return 0.;\n        seed *= seed;\n        seed = floor(seed/pow(10., l3))-floor(seed/pow(10., l3+l))*pow(10., l);    \n    }return seed/pow(10., l);\n}\n\n//linear congruential generator\nfloat lcg(float m, float a, float c, float seed, float r){\n    for(float i=0.;i<r;i++){\n        seed = mod(a*seed+c, m);\n    }return seed/m;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord;\n    vec3 col = vec3(0.);\n    \n    float lcgmask = lcg(uv.x, uv.y, 1., t, 100.);\n    float msmmask = msm(uv.x, t);\n    col += mix(lcgmask, msmmask, clamp((uv.y/R.y-.5)*10., 0., 1.));\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}