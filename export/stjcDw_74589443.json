{"ver":"0.1","info":{"id":"stjcDw","date":"1649808832","viewed":176,"name":"FogExplosion","username":"MelisaHot","description":"Fog explosion","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["explosion","fog"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat hash(float n)\n{\n    return fract(sin(n)*33587.6369);\n}\n\nfloat noise(in vec3 x)\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f * f * (3.0 - 2.0 * f);\n \n    float n = p.x + p.y * 57.0 + 113.0 * p.z;\n\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n}\n\nfloat fbm( vec3 p )\n{\n    float f;\n    f  = 0.5000*noise( p ); p = p*2.02;\n    f += 0.2500*noise( p ); p = p*2.03;\n    f += 0.1250*noise( p );\n    return f;\n}\n\nfloat  fog(vec3 p)\n{\n    float d = (2.65 - length(p)) / 2.65;\n    float noise_scaled = fbm(1.2 * (p + vec3(0.0, 0.0, iTime*.8)));\n    return clamp(noise_scaled * 2. * d, 0.0, 1.0);\n}\n\nvec3 fog_colors(vec3 p)\n{\n    float depth = 0.0;\n    vec3 light_pos = vec3(20.0, 10., 10.0);\n    vec3 light_dir = normalize(light_pos - p);\n    vec3 lightColor =vec3(0.96, 0.6, .24);\n    vec3 absColor = vec3(0.00696, 0.002856, 0.003024)*cos(iTime);\n    vec3 volumeColor = 0.045 * vec3(.9, 0.75, 0.3);\n    float k = 0.0;\n    float rd = 0.25;\n    \n    for(int i = 0; i< 10; i++)\n    {\n    \tvec3 sp = p + k * light_dir;\n        float d = fog(sp);\n        depth+= d;\n    \tk+= rd;\n    }\n    \n   vec3 color = lightColor * volumeColor - depth * absColor;\n    return clamp(color, 0., 1.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n\tvec2 uv = ( fragCoord.xy / iResolution.xy ) * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n\n\tvec3 pos = vec3( 0.,0.,-3.);\n\tvec3 dir = normalize( vec3( uv, 1. ) );\n\tvec3 p;\n    float t = 0.0;\n    float depth = 0.0;\n    vec3 col =  vec3(0.165, 0.275, 0.385);\n    float rd =0.125;\n    for(int i = 0; i < 21; i++)\n    {\n        p = pos + dir * t;\n        float d = fog(p);\n        depth += d;\n        vec3 c = fog_colors(p);\n        col += depth * c;\n        t += rd;\n    }\n    \n\tfragColor = vec4(col, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}