{"ver":"0.1","info":{"id":"Dl3Xzn","date":"1684922177","viewed":191,"name":"Charging please wait","username":"skaven","description":"Charging please wait","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["charging"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n    \n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5);\n    uv.x *= iResolution.x / iResolution.y;\n\n    float d = length(uv) + sin(iTime * 2.) * 0.01 - 0.2;\n    for (int i = 0;i < 6;i++) {\n        float fi = float(i);\n        float ltime = iTime * 0.5 + fi * 1.7341;\n        float timePart = fract(ltime);\n        float timeInt = round(ltime);\n        vec2 uv2  = uv + vec2(cos(timeInt), sin(timeInt)) * (0.4 - timePart * 0.4);\n        d = opSmoothUnion(length(uv2) + 0.05, d, 0.03);\n    }\n    \n    d = 1.-smoothstep(0.1,0.108,d);\n\n    // Output to screen\n    fragColor = vec4(d,d,d,1.0);\n}","name":"Image","description":"","type":"image"}]}