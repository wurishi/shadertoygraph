{"ver":"0.1","info":{"id":"XlfcRj","date":"1505392080","viewed":223,"name":"Hex Mesh","username":"isak","description":"Hexagon mesh scaled","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["hexagon","mod","transformation","scaling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Hex frequency\n#define N 16.0\n\n// Constants\n#define pi 3.14159265358979323846\n#define sin_60 0.8660254037844386\n#define rot_90 mat2(0.0, -1.0, 1.0, 0.0)\n\n// Hex directions\n#define hv_1 vec2(1.0, 0.0)\n#define hv_2 vec2(0.5, -sin_60)\n#define hv_3 vec2(0.5,  sin_60)\n\n// Mod directions 90 degrees to Hex directions\n#define mv_1 vec2(0.0, 1.0)\n#define mv_2 vec2(-sin_60, -0.5)\n#define mv_3 vec2( sin_60, -0.5)\n\nfloat d_hexagon(vec2 uv, float a){\n    return length(uv - hv_1*clamp( dot(uv, hv_1), -a, a) \n                     - hv_2*clamp( dot(uv, hv_2), -a, a) \n                     - hv_3*clamp( dot(uv, hv_3), -a, a) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n\tvec2 uv = 2.0*(fragCoord.xy / iResolution.xy) - 1.0;\n    uv.x *= iResolution.x/iResolution.y;    \n    \n    // Global scaling and rotation transformation\n    float p_time = clamp(1.0 - 2.3*sin(iTime/3.0), 0.0, 4.0);\n    float scale_f = abs( N / (p_time + dot(uv,uv)) );\n    uv *= scale_f; // scale_f = 5.0; // Try scale_f = 5.0;\n    float ct = cos(0.2*p_time); float st = sin(0.2*p_time);\n    uv *= mat2(ct, -st, st, ct);\n      \n    // Modding for repeated hexagons\n    uv = + mv_1 * mod(dot(uv, mv_1), 2.0)\n         + mv_2 * mod(dot(uv, mv_2), 2.0) \n         + mv_3 * mod(dot(uv, mv_3), 2.0);\n    \n    //uv*= rot_90; // uncomment to get stars\n    float size = 0.5 + 0.0025*sin(15.0*iTime);\n    float dist = d_hexagon(uv, size);\n\n\t// Final out\n\tfragColor = 2.0*vec4(dist, 0.5, 0,1) * sin(3.0*dist);\n    fragColor *= clamp(N/scale_f,0.0,1.0);  // Supress aliased regions\n}","name":"Image","description":"","type":"image"}]}