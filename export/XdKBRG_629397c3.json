{"ver":"0.1","info":{"id":"XdKBRG","date":"1529345077","viewed":632,"name":"OOoooh, shiny!","username":"Veggiebob","description":"using edge detection to make cool glowies.\nIf you want just normal edge detection, take out the else statement in the mainImage() function.","likes":10,"published":1,"flags":2,"usePreview":0,"tags":["camera","edge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float total (vec4 col){\n    return col.r+col.g+col.b;\n}\nfloat change (vec4 col1, vec4 col2){\n    return length(col1-col2);//abs(col1.r-col2.r)+abs(col1.g-col2.g)+abs(col1.b-col2.b);\n}\nvec4 contrast (vec4 col, float n){\n    return 0.5+(col-0.5)*n;\n}\nbool foundEdge (vec2 uv){\n    vec4 camCol = texture(iChannel0, uv);\n    float d = 0.002;\n    vec4 top = texture(iChannel0, vec2(uv.x, uv.y+d));\n    vec4 bottom = texture(iChannel0, vec2(uv.x, uv.y-d));\n    vec4 right = texture(iChannel0, vec2(uv.x+d, uv.y));\n    vec4 left = texture(iChannel0, vec2(uv.x-d, uv.y));\n    \n    float c = 1.4;\n    camCol = contrast(camCol, c);\n    top = contrast(top, c);\n    bottom = contrast(bottom, c);\n    right = contrast(right, c);\n    left = contrast(left, c);\n    \n    \n    float check = 0.08;\n    if(change(top, camCol)>check||change(bottom, camCol)>check||change(left, camCol)>check||change(right, camCol)>check){\n        return true;\n    } else {\n        return false;\n    }\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float scale = 1.;\n    uv-=0.5;\n    uv.x*=-1.;\n    uv/=scale;\n    uv+=0.5;\n    vec4 col = vec4(0.);\n    if(foundEdge(uv)){\n        col = vec4(1.);\n        float edgesHit = 0.;\n        float dist = 0.002;\n        for(float i = 0.; i<360.; i+=10.){\n            if(foundEdge(vec2(uv.x+cos(i)*dist, uv.y+sin(i)*dist))){\n                edgesHit += 1.;\n            }\n        }\n        if(edgesHit<360./10.*0.3){\n            col = vec4(0.);\n        }\n    } else {\n        float angle = 0.;\n        float dist = 0.;\n        float edgesFound = 0.;\n        for(float i = 0.; i<300.; i+=1.){\n            if(edgesFound>10.||dist>0.05){\n                break;\n            }\n            vec2 pos = vec2(uv.x+cos(angle)*dist, uv.y+sin(angle)*dist);\n            if(foundEdge(pos)){\n                //if(foundEdge(vec2(pos.x+0.002, pos.y))&&foundEdge(vec2(pos.x-0.002, pos.y))){\n                edgesFound += 1.;\n                //}\n            }\n            angle += 30.;\n            if(angle>360.){\n                angle = 0.;\n                dist += 0.005;\n            }\n        }\n        col = vec4(1.-dist*20.);\n    }\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}