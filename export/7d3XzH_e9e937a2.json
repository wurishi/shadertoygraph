{"ver":"0.1","info":{"id":"7d3XzH","date":"1632605887","viewed":187,"name":"Flowers-1","username":"1rosehip","description":"Inspired by this great tutorial: https://www.youtube.com/watch?v=0ifChJ0nJfM\n\nBut I still need to find out how to make the flowers have different colors and how to prevent \"stretching\" of the whole scene.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["flower","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 getRotationMatrix(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n\n    return mat2(c, -s,\n                s, c);\n}\n\n\nvec3 flower(\n        vec2 position, \n        vec2 center, \n        float amplitude, \n        float size, \n        float frequency, \n        float blur, \n        float rotation, \n        vec2 skew,\n        float index) {\n    \n    // by default, flower color will be black, and the background white\n    vec3 color = vec3(1.0);\n    vec2 figure = position - center;\n\n    // draw the vertical line\n    float lineSize = 0.005;\n\n    // 0.1 * sin(5.0 * figure.y) makes the line be \"wavy\"\n    // to flip horizontaly -> - 0.1 * sin(5.0 * figure.y)\n    float verticalLine = smoothstep(lineSize, lineSize + lineSize / 2.0, abs(figure.x + 0.1 * sin(5.0 * figure.y)));\n\n    // remove the 'top' part of the vertical line \n    color *= 1.0 - (1.0 - verticalLine) * (smoothstep(0.1, 0.0, figure.y));\n\n    // animation\n    mat2 mat = getRotationMatrix(iTime * index * 2.5);\n    figure = mat * figure;\n\n    // draw the flower\n    figure += skew;\n    float r = size + amplitude * cos(atan(figure.y, figure.x) * frequency + rotation);\n    color *= smoothstep(r, r + blur, length(figure));\n\n    // apply the colors\n    return color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv = fragCoord / iResolution.y - vec2(0.5, 0.0);\n    \n    // mirror effect\n    // vec2 uv = abs(fragCoord.xy / iResolution.xy - 0.5); \n    \n    // duplicates effect\n    // uv = mod(uv * 12.0, 1.0); \n    \n    // diagonal symmetry\n    // if (uv.x>uv.y) uv = uv.yx;\n    \n    // nice rotation\n    // uv += .1*sin(5.*uv-iTime);\n    \n    // another cool effect :)\n    // uv /= ( .5-dot(uv,uv) );\n\n    vec3 color = mix(vec3(0.1647, 0.8078, 0.3255), vec3(1.0), uv.y);\n\n    // draw all flowers and black and white\n    color     *= flower(uv, vec2(0.5, 0.5),  0.1,  0.1, 10.0, 0.01, 0.0, vec2(0.0), -0.6);\n    color     *= flower(uv, vec2(0.3, 0.9),  0.1,  0.001, 4.0,  0.01, 0.0, vec2(0.0), 0.2);\n    color     *= flower(uv, vec2(0.51, 0.83),  0.01, 0.09, 60.0, 0.01, 0.0, vec2(0.0), 0.3);\n    color     *= flower(uv, vec2(0.1, 0.2),  0.2,  0.1, 7.0,  0.01, 0.0, vec2(0.0), -0.4);\n    color     *= flower(uv, vec2(0.55, 0.1), 0.05, 0.1, 3.0,  0.01, 0.0, vec2(0.0), 0.5);\n    color     *= flower(uv, vec2(0.8, 0.3),  0.05, 0.1, 10.0, 0.01, 0.0, vec2(0.0), -0.6);\n    color     *= flower(uv, vec2(0.15, 0.7), 0.01, 0.1, 10.0, 0.01, 0.0, vec2(0.0), 0.7);\n    color     *= flower(uv, vec2(0.8, 0.8),  0.03, 0.1, 10.0, 0.01, 0.0, vec2(0.0), 0.8);\n\n    // color them\n    color = mix(vec3(1.0, 0.9961, 0.8392), vec3(0.1725, 0.6471, 0.5216), color);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}