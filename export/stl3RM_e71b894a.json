{"ver":"0.1","info":{"id":"stl3RM","date":"1621878521","viewed":187,"name":"lazy infinite zoom","username":"asherville","description":"lazy infinite zoom","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["basic","infinitezoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define speed 0.1\n//#define rotation\n//#define offset\n//#define constantZoomPos vec2(0.5)\n\nmat2 rot(in float r){\nfloat s = sin(r);\nfloat c = cos(r);\nreturn mat2(c,-s,s,c);\n}\n\n//from hash without sine, by Dave_Hoskins\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = fragCoord/iResolution.xy;\n\nvec2 r = iChannelResolution[0].xy;\n\nfloat t = fract(iTime*speed);\nfloat linearTime = t;\nfloat iterations = floor(iTime*speed)+28.0;\n\nvec2 psize = 1.0/r; //pixel size\n\nt = pow(psize.x,t)-(psize.x); // zoom curve\n\n//zoom in on a different location each iteration so the loop is less apparent\n\nvec2 zp0 = hash21(iterations); // current iteration zoom pos\nvec2 zp1 = hash21(iterations+1.0);// next iteration zoom pos\nvec2 zp2 = hash21(iterations+2.0);// next next iteration zoom pos\nvec2 zp3 = hash21(iterations+3.0);// next next next iteration zoom pos\n\nzp0 = floor(zp0*r)/r;\nzp1 = floor(zp1*r)/r;\n\n\nvec2 psize2 = psize*psize;\n\nvec2 zoomPos = zp0+zp1*psize+zp2*psize2+zp3*psize2*psize;\n\n#ifdef constantZoomPos\nzoomPos = constantZoomPos+constantZoomPos*psize+constantZoomPos*psize2;\n#endif\n\nvec2 off = vec2(0.5);\n\n#ifdef offset\noff += vec2(sin(iTime),cos(iTime))*0.5+0.5;\n#endif\n\nuv-= off;    \n\nuv.x *= iResolution.x/iResolution.y;\n\n#ifdef rotation\nuv *= rot(iTime*speed*5.0);   \n#endif\nvec2 p = (uv*(t+psize)+zoomPos)*r;\n\n\n\nvec3 mainTex = texelFetch(iChannel0,ivec2(mod(p,vec2(r))),0).rgb;\nvec3 subTex = texelFetch(iChannel0,ivec2(fract(p)*r),0).rgb;\nvec3 avgCol = texture(iChannel0,uv,100.0).rgb;\n\n//fade to white at the end of the loop to hide transition\nmainTex = mix(mainTex*(1.0/avgCol),vec3(1.0),smoothstep(0.8,1.0,max(linearTime,0.8))); \n\n//start out as the average texture color at the beggining of the loop to reduce aliasing\nsubTex = mix(subTex,avgCol,smoothstep(0.4,1.0,max(1.0-linearTime,0.4)));\n\nvec3 col = subTex*mainTex;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}