{"ver":"0.1","info":{"id":"mtScRh","date":"1691458396","viewed":115,"name":"CRT Shader Effect","username":"zerovolts","description":"CRT","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["crt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 darken(vec4 color) {\n    return vec4(color.xyz * 0.6, color.w);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // simple gaussian blur\n    mat3 kernel = mat3(\n        1.0, 2.0, 1.0,\n        2.0, 4.0, 2.0,\n        1.0, 2.0, 1.0\n    );\n    vec4 color = vec4(0.0);\n    for (int y = -1; y < 2; y++) {\n        for (int x = -1; x < 2; x++) {\n            vec2 coord = fragCoord + vec2(x, y);\n            vec2 texCoord = vec2(\n                int(coord.x / 8.0),\n                int(coord.y / 8.0)\n            );\n            vec2 scanlineCoord = vec2(\n                int(coord.x / 4.0),\n                int(coord.y / 4.0)\n            );\n            vec2 uv = texCoord / iResolution.xy;\n            vec4 texColor = texture(iChannel0, uv);\n            // chromatic abberation\n            vec4 abberation = vec4(\n                texture(iChannel0, uv + vec2(0.001, 0.0)).r,\n                texture(iChannel0, uv).g,\n                texture(iChannel0, uv + vec2(-0.001, 0.0)).b,\n                1.0\n            );\n            // scanlines\n            vec4 scanlines = int(scanlineCoord.y) % 2 == 0\n                ? darken(abberation)\n                : abberation;\n            color += scanlines * kernel[y + 1][x + 1];\n        }\n    }\n    fragColor = vec4((color / 16.0).rgb, 1.0);\n}","name":"Image","description":"","type":"image"}]}