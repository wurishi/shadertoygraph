{"ver":"0.1","info":{"id":"MXlXW4","date":"1710162704","viewed":84,"name":"KifingsTubesTwist VFX","username":"Eboman","description":"Mouse x = FX amount\nMouse y = FX parameter control\nPress key 1 to 6 on keyboard = FX parameter on/off\nFX parameter descriptions in top shader comment","likes":4,"published":1,"flags":16,"usePreview":0,"tags":["vfx","twist","kifings"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n/*\n\nCONTROLS_________________:\n\nMouse x = FX amount\nMouse y = FX parameter control\nPress key 1 to 6 on keyboard = FX parameter on/off\n\nFX parameters:\n1 = Shape amount\n2 = Fold space\n3 = Rotate shapes\n4 = Distance amplify\n5 = Thinner\n6 = Bright lights\n\n\nCREDITS__________________:\n\nBased on the kifings tubes with a twist shader by leon   \nhttps://www.shadertoy.com/view/ssfcR2\n\nRemixed and turned into a video effect by:\nwww.eboman.com\n\n*/\n\n#define uMacro0 (1.001 - (iMouse.x/iResolution.x))\n#define uMacro1 (iMouse.y/iResolution.y) * kp(49) + (0.2 *(1.-kp(49))) \n#define uMacro2 (iMouse.y/iResolution.y) * kp(50) + (0. *(1.-kp(50)))\n#define uMacro3 (iMouse.y/iResolution.y) * kp(51) + (0. *(1.-kp(51)))\n#define uMacro4 (iMouse.y/iResolution.y) * kp(52) + (0.2 *(1.-kp(52)))\n#define uMacro5 (iMouse.y/iResolution.y) * kp(53) + (0. *(1.-kp(53)))\n#define uMacro6 (iMouse.y/iResolution.y) * kp(54) + (0.063246 *(1.-kp(54)))\n//#define uMacro7 ((iMouse.y/iResolution.y) * kp(55) + (0. *(1.-kp(55))))\n//#define uMacro8 (iMouse.y/iResolution.y) * kp(56) + (0. *(1.-kp(56)))\n#define repeat(p,r) (mod(p+r/2.,r)-r/2.)\n\nfloat kp(int k){\n    float kp = texelFetch( iChannel1, ivec2(k,2), 0 ).x;\n    return kp;\n}\n\nfloat smin( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h);\n}\n    \nmat2 rot(float a) { return mat2(cos(a),-sin(a),sin(a),cos(a)); }\n\nfloat map(vec3 p)\n{\n    vec3 pp = p;\n    float dist = 100.;\n    p.z += iTime * .1;\n    float cell = .7;\n    float pz = floor(p.z/cell);\n    p.z = repeat(p.z, cell);\n    p.z *= mix(-1., 1., step(0.5, mod(p.z, 2.))); \n    float d = length(p);\n    float t = iTime * .1;\n    float count = (uMacro1)*6.+1.;\n    float a = 1.*(pow(uMacro4,2.)*25.);\n    for (float i = 0.; i < count; ++i) { \n        p.yz *= rot(t)*(1.-uMacro3)+0.05;\n        p.yx *= rot(t); \n        p = abs(p)-(.05+d*.2)*a*(1.-uMacro2);\n        dist = smin(dist, length(p.xz)-(.01+d*0.1-((uMacro5)/20.))*a, (.01+d*.8)*a);\n        a /= 2.;\n    }\n    return abs(dist)-.0001*(pow(uMacro6, 2.)*250.);\n}\n\nvec4 RayMarch(vec3 pos, vec3 ray, float dist)\n{\n    float i = 0.;\n    for (i = 30.; i > 0.; --i) {\n        float dist = map(pos);\n        if (dist < .0001) break;\n        pos += ray * dist; \n        }\n    return vec4(pos, i);\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coordinate = gl_FragCoord.xy;\n    \n    vec2 pixel = (coordinate - iResolution.xy / 2.) / iResolution.y;\n    vec2 uv = vec2(gl_FragCoord.x / iResolution.x, gl_FragCoord.y / iResolution.y);\n\n    vec3 eye = vec3(0,0,-1.);\n    vec3 ray = normalize(vec3(pixel, 1.5));\n    vec3 pos = eye + ray * .5;\n    float dist = map(pos);\n    \n    vec4 p = RayMarch(pos, ray, dist);\n\n    float shade = p.w/30.;\n\n    vec3 video = texture(iChannel0, mix(uv, vec2(p.x*dist, dist*4.)*4.+0.5, uMacro0)).rgb;\n    \n    float mx = iMouse.x/iResolution.x;\n    float my = pow(iMouse.y/iResolution.y, 0.5);\n\n    vec3 tint = video /.9 + .1 * cos(vec3(.0, .3, .6) * 6.283 + shade * 6. + p.z * 18. + 2.);\n    \n    vec3 tintex = mix(tint, tint*abs(pow(p.z*2., 25.)), 0.);\n    \n    vec4 fc = mix(vec4(video, 1.), vec4(tintex * 1.5 * shade,1.0), pow(uMacro0,5.));\n\n // Interface\n   \n    vec2 uvif = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n    uvif -= 0.5; \n    uvif /= vec2(iResolution.y / iResolution.x, 1);\n    \n    vec3 fcolif = fc.rgb;\n    \n    fcolif = mix( fcolif, vec3(0.,1.,1.), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.45))*15.))*(1.-mx) );\n    fcolif = mix( fcolif, vec3(0.,1.,1.), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.45))*15.-0.3))));\n        \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.38))*15.))*kp(49)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(49)+0.5,1.0*(kp(49)*-1.5)+0.5,1.0*(kp(49)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.38))*15.-0.3))));\n\n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.31))*15.))*kp(50)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(50)+0.5,1.0*(kp(50)*-1.5)+0.5,1.0*(kp(50)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.31))*15.-0.3))));\n        \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.24))*15.))*kp(51)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(51)+0.5,1.0*(kp(51)*-1.5)+0.5,1.0*(kp(51)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.24))*15.-0.3))));\n \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.17))*15.))*kp(52)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(52)+0.5,1.0*(kp(52)*-1.5)+0.5,1.0*(kp(52)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.17))*15.-0.3))));\n        \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.10))*15.))*kp(53)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(53)+0.5,1.0*(kp(53)*-1.5)+0.5,1.0*(kp(53)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.10))*15.-0.3))));\n        \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.03))*15.))*kp(54)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(54)+0.5,1.0*(kp(54)*-1.5)+0.5,1.0*(kp(54)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.03))*15.-0.3))));\n/*         \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,-0.04))*15.))*kp(55)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(55)+0.5,1.0*(kp(55)*-1.5)+0.5,1.0*(kp(55)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,-0.04))*15.-0.3))));\n   \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,-0.11))*15.))*kp(56)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(56)+0.5,1.0*(kp(56)*-1.5)+0.5,1.0*(kp(56)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,-0.11))*15.-0.3))));\n*/        \n\n    // Final output\n    \n    fragColor = vec4(fcolif, 1.);\n\n}\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}