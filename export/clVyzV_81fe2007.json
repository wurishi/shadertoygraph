{"ver":"0.1","info":{"id":"clVyzV","date":"1700440255","viewed":43,"name":"massage_verse","username":"graygoose","description":"kulurs kool","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","trig"],"hasliked":0,"parentid":"ctVyzV","parentname":"massage2"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T iTime\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.1 * iResolution.xy) / iResolution.y;\n\n    vec3 accColor = vec3(0.0);\n    vec3 curColor;\n\n    int iters = 20;\n\n    for (int i = 0; i < iters; i++) {\n        float sign = (i % 2 == 0 ? .1 : -.1); \n        float angFac = 0.1 + 0.05 * length(accColor);\n\n        float angR = sign * T * (.103 + float(i) * angFac);\n        float angG = sign * T * (.203 + float(i) * angFac);\n        float angB = sign * T * (.303 + float(i) * angFac);\n\n        mat2 rotR = mat2(cos(angR), -sin(angR),\n                         sin(angR), cos(angR));\n        mat2 rotG = mat2(cos(angG), -sin(angG),\n                         sin(angG), cos(angG));\n        mat2 rotB = mat2(cos(angB), -sin(angB),\n                         sin(angB), cos(angB));\n\n        vec2 pR = rotR * (uv - 0.5) + 0.5;\n        vec2 pG = rotG * (uv - 0.5) + 0.5;\n        vec2 pB = rotB * (uv - 0.5) + 0.5;\n        \n        float mixR = 0.75 + 0.25 * sin(T + float(i) * 0.1);\n        float mixG = 0.75 + 0.25 * cos(T + float(i) * 0.2);\n        float mixB = 0.75 + 0.25 * sin(T + float(i) * 0.3);\n\n        float freqX = 20.0 + 10.0 * sin(0.5 * T + float(i) * 0.1);\n        float freqY = 50.0 + 25.0 * cos(0.7 * T + float(i) * 0.1);\n\n        float mixF = 0.5 + 0.5 * length(accColor); \n\n        float dist = length(uv - .5);\n        float focalStr = smoothstep(0.0, 0.2, 0.5 - dist);\n\n        curColor.r = mix(0.5 + 0.5 * cos(freqX * pR.x),\n                         0.5 + 0.5 * cos(freqY * pR.y),\n                         mixR) * focalStr;\n        curColor.g = mix(0.5 + 0.5 * cos(freqX * pG.x),\n                         0.5 + 0.5 * cos(freqY * pG.y),\n                         mixG) * focalStr;\n        curColor.b = mix(0.5 + 0.5 * sin(freqX * pB.x),\n                         0.5 + 0.5 * sin(freqY * pB.y),\n                         mixB) * focalStr;\n\n        accColor = mix(accColor, curColor, 0.5 / float(i + 1));\n    }\n\n    accColor = smoothstep(0.0, 1.0, accColor);\n\n    fragColor = vec4(accColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}