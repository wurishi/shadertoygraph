{"ver":"0.1","info":{"id":"3lSfRV","date":"1599298533","viewed":301,"name":"Classic Round Audio Visualizer","username":"Manonox","description":"Wanted to get something close to youtube-style audio visualizers\nKinda messy but still fine","likes":1,"published":3,"flags":64,"usePreview":0,"tags":["music","visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xl2Xz1","filepath":"https://soundcloud.com/schnozz/ch0-p1-it-gets-lonely","previewfilepath":"https://soundcloud.com/schnozz/ch0-p1-it-gets-lonely","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T iTime\n#define R iResolution\n#define P fragCoord\n\n#define PI 3.14159\n#define TAU 6.28318\n\nfloat intensity(in float x)\n{\n    //return pow(x,0.05);\n    if(x<0.2) return pow(max(x/0.2,0.1),0.5);\n    return 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = P.xy/R.xy;\n    float aspect = R.x/R.y;\n\n    vec2 center = vec2(0.5);\n    vec2 rel = uv-center;\n    rel.y = rel.y/aspect;\n    \n    float fftpos = atan(rel.x,-rel.y)/PI+1.;\n    if(fftpos>1.) fftpos = 2.-fftpos;\n    fftpos = pow(fftpos, 1.5);\n    //fftpos *= intensity(fftpos);\n    \n    int samplePoints = 128;\n    float width = 0.03;\n    \n    float fft = 0.;\n    \n    for(int i=0; i<samplePoints; i++){\n        float add = float(i)/float(samplePoints-1) - 0.5;\n        add *= 2.;\n        float rpos = clamp(fftpos+add*width,0.,1.);\n    \tfft += texture(iChannel0, vec2(rpos,0.25)).x;\n    }\n    \n    \n   \tfft /= float(samplePoints);\n    \n    fft *= intensity(fftpos);\n    \n    //float am = float(samplePoints)*0.0001;\n    //fft += texture(iChannel0, vec2(fftpos,0.25)).x*am;\n    //fft /= am+1.;\n    \n    float base = texture(iChannel0, vec2(0,0.1)).x;\n    \n    float dist = length(rel);\n    fft = clamp(fft*(1.4-base*0.2),0.,4.);\n    float mv = pow(fft,8.)*0.2;\n    float radius = 0.1 + base*0.05;\n    \n    float c = (dist-radius-mv*radius/0.1);\n    c = max(c, 0.0);\n    \n    float inner = radius*0.9-dist;\n    inner = max(inner, 0.0);\n    \n    float bright = 1.-c/0.002-inner/0.05;\n    \n    vec3 col = texture(iChannel1, (uv - vec2(0.5)) * (0.8 + base * 0.2) + vec2(0.5)).xyz;\n    \n    bright = clamp(bright,0.,1.);\n    col += vec3(bright * 0.5, bright * 0.5, bright * 0.5) + vec3(pow(fft, 2.0) * 0.3) * (1.0 - inner * 10.0);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}