{"ver":"0.1","info":{"id":"XcXXDX","date":"1705772176","viewed":74,"name":"6 to 10 bit gradient simulation","username":"kinokomushroom","description":"6 to 10 bit gradient simulation on 8 bit display. 9 and 10 bits are achieved by temporal dithering.\n\nMight flicker.\n\nClick image to change gradient brighness for easier colour banding spotting.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["banding","color","gradient","depth","dithering","temporal","10bit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Simulating up to 10 bits on an 8 bit display by temporal dithering\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    \n    float brightness = 1.0;\n    if (sign(iMouse.z) > 0.0)\n    {\n        brightness = iMouse.x / iResolution.x;\n    }\n    \n    float power = 1.0;\n    float gradient_original = pow(brightness * uv.x, power);\n    float range_255 = gradient_original * 255.9999;\n    float fraction = fract(range_255);\n    \n    float final_color = 0.0;\n    if (uv.y <= 1.0 / 5.0)\n    {\n        // 6 bits\n        final_color = floor(gradient_original * 63.9999) / 63.0;\n    }\n    else if (uv.y <= 2.0 / 5.0)\n    {\n        // 7 bits\n        final_color = floor(gradient_original * 127.9999) / 127.0;\n    }\n    else if (uv.y <= 3.0 / 5.0)\n    {\n        // 8 bits\n        final_color = floor(range_255) / 255.0;\n    }\n    else if (uv.y <= 4.0 / 5.0)\n    {\n        // 9 bits\n        int fraction_2 = int(fraction * 2.0);\n        final_color = floor(range_255 + float(iFrame % 2 < fraction_2)) / 255.0;\n    }\n    else\n    {\n        // 10 bits\n        int fraction_4 = int(fraction * 4.0);\n        if (fraction_4 == 2)\n        {\n            final_color = floor(range_255 + float(iFrame % 2 == 0)) / 255.0;\n        }\n        else\n        {\n            final_color = floor(range_255 + float(iFrame % 4 < fraction_4)) / 255.0;\n        }\n    }\n    \n    fragColor = vec4(vec3(final_color),1.0);\n}","name":"Image","description":"","type":"image"}]}