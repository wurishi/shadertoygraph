{"ver":"0.1","info":{"id":"fd3XDj","date":"1633927606","viewed":31,"name":"Fading","username":"beherca","description":"fading","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["fading"],"hasliked":0,"parentid":"ss3XDB","parentname":"Edge  Detect with Dispear"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//please check https://en.wikipedia.org/wiki/Kernel_(image_processing)#Convolution for kernel\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy ;\n    //t = vec4(uv, 0, 1.);\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat3 kernel = mat3(\n    0.0, -1., 0.0,\n    -1., 4.0, -1.,\n    0.0, -1., 0.0\n);\n\n\nvoid mainImage2( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor=texture(iChannel1, fragCoord/iResolution.xy); \n\tfragColor.z=(fragColor.z+fragColor.x)*0.95;\n    \n    if((iFrame==0)||(length(iMouse.xy-fragCoord))<5.0)\n    {\n        fragColor.x=(fract(dot(sin(fragCoord*vec2(157.1,113.7)),\n                               vec2(353.17+iTime,383.093-iTime)))>0.33)?0.0:1.0;\n    }\n    else\n    {\n        \n\t\tvec4 u=vec4(0.0);\n    \tu+=texture(iChannel0,(fragCoord+vec2(-1.0,-1.0))/iResolution.xy); \n    \tu+=texture(iChannel0,(fragCoord+vec2( 0.0,-1.0))/iResolution.xy); \n\t    u+=texture(iChannel0,(fragCoord+vec2( 1.0,-1.0))/iResolution.xy); \n  \t\tu+=texture(iChannel0,(fragCoord+vec2(-1.0, 0.0))/iResolution.xy); \n  \t\tu+=texture(iChannel0,(fragCoord+vec2( 1.0, 0.0))/iResolution.xy); \n\t\tu+=texture(iChannel0,(fragCoord+vec2(-1.0, 1.0))/iResolution.xy); \n    \tu+=texture(iChannel0,(fragCoord+vec2( 0.0, 1.0))/iResolution.xy); \n    \tu+=texture(iChannel0,(fragCoord+vec2( 1.0, 1.0))/iResolution.xy);\n     \tif(u.x==3.0)\n            fragColor.x=1.0;\n        else if(u.x<2.0)\n\t\t\tfragColor.x=0.0;\n        else if(u.x>3.0)\n            fragColor.x=0.0;\n    }\n}\n\n\n\nvoid mainImage1( out vec4 fragColor, in vec2 fragCoord )\n{\n    //fragColor = vec4(1.0,0.0,0.0,1.0);\n        // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.xy*sin(iTime);\n    vec2 uv = fragCoord/iResolution.xy ;\n    fragColor=texture(iChannel1, fragCoord/iResolution.xy); \n\tfragColor.z=(fragColor.z+fragColor.x)*0.95;\n    \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec4 color = vec4(0.0);\n    vec2 texel = 1.0 / iResolution.xy;\n   \n    if((iFrame<30 ||(length(iMouse.xy-fragCoord))<5.0))\n    {\n    \n        for (int y = 0; y < 3; y++)\n            for (int x = 0; x < 3; x++)\n                color += texture(iChannel1, uv + texel * vec2(x - 1, y - 1)) * kernel[x][y];\n    \n        color = vec4(color.r > 1. ? 1. : 0., 0.,0., 1.);\n         \n        \n        fragColor = vec4(color.r*10., 0., 0., color.a);\n        \n        //fragColor.x = color.r > 270. ? 0.1 : 1.;\n        //fragColor.x=(fract(dot(sin(fragCoord*vec2(157.1,113.7)),vec2(353.17+iTime,383.093-iTime)))>0.33)?0.0:1.0;\n    }\n    else\n    { \n        \n        vec4 u=vec4(0.0);\n        u+=texture(iChannel0,(fragCoord+vec2(-1.0,-1.0))/iResolution.xy); \n        u+=texture(iChannel0,(fragCoord+vec2( 0.0,-1.0))/iResolution.xy); \n        u+=texture(iChannel0,(fragCoord+vec2( 1.0,-1.0))/iResolution.xy); \n        u+=texture(iChannel0,(fragCoord+vec2(-1.0, 0.0))/iResolution.xy); \n        u+=texture(iChannel0,(fragCoord+vec2( 1.0, 0.0))/iResolution.xy); \n        u+=texture(iChannel0,(fragCoord+vec2(-1.0, 1.0))/iResolution.xy); \n        u+=texture(iChannel0,(fragCoord+vec2( 0.0, 1.0))/iResolution.xy); \n        u+=texture(iChannel0,(fragCoord+vec2( 1.0, 1.0))/iResolution.xy);\n        \n        if(u.x==3.0)\n            fragColor.x=1.0;\n        else if(u.x<2.0)\n\t\t\tfragColor.x=0.0;\n        else if(u.x>3.0)\n            fragColor.x=0.;\n        \n        \n        fragColor.y = 0.;\n        fragColor.z = 0.;\n    }\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    vec2 uv = fragCoord/iResolution.xy ;\n    vec4 buffer =texture(iChannel0, uv);\n    if((iFrame<30 ||(length(iMouse.xy-fragCoord))<50.0))\n    {\n        fragColor=texture(iChannel2, fragCoord/iResolution.xy);\n        buffer = fragColor;\n    }\n    else\n    { \n        buffer = buffer + vec4(-0.01);\n        fragColor = buffer;\n    }\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}