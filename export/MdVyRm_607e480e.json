{"ver":"0.1","info":{"id":"MdVyRm","date":"1521519652","viewed":106,"name":"Semi infizoom of much fidgetspin","username":"chao_mu","description":"Artistic compromise.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["zoom","spin","kvlt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\n\n// From the book of shaders\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float border = 1.0 - fract(iTime/10.0);\n    if (\n        step(border, uv.x) == 0.0 || step(1.0 - border, uv.x) != 0.0 ||\n        step(border, uv.y) == 0.0 || step(1.0 - border, uv.y) != 0.0\n    ) {\n        uv -= vec2(0.5);\n        uv *= rotate2d(iTime * PI);\n        uv /= 1.0 + (fract(iTime/10.0) * 10.0);\n        uv += vec2(0.5);\n    }\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}