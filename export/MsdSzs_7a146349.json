{"ver":"0.1","info":{"id":"MsdSzs","date":"1461037099","viewed":274,"name":"Conqueror's Map","username":"Passion","description":"Reference: https://www.shadertoy.com/view/XsjSRt","likes":14,"published":1,"flags":32,"usePreview":0,"tags":["2d","fbm","postprocess"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int NUM_SAMPLES = 25;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 buffer = texture(iChannel0,uv);\n    float decay=0.96815;\n    float exposure=0.21;\n    float density=0.926;\n    float weight=0.58767;\n    \n    vec2 tc = uv;\n    vec2 lightPos = iMouse.xy;\n    vec2 deltaTexCoord = tc;\n    \n    deltaTexCoord =  uv+vec2(sin(iTime*.7)*.3,-cos(iTime*.2)*.3)-.5;\n    deltaTexCoord *= 1.0 / float(NUM_SAMPLES)  * density;\n    \n    float illuminationDecay = 1.0;\n    vec4 color =texture(iChannel0, tc.xy);//*0.305104;\n    \n    tc += deltaTexCoord * fract( sin(dot(uv.xy+fract(iTime), \n                                         vec2(12.9898, 78.233)))* 43758.5453 );\n    \n    for(int i=0; i < NUM_SAMPLES; i++)\n    {\n        tc -= deltaTexCoord;\n        vec4 sample = texture(iChannel0, tc)*0.305104;\n        sample *= illuminationDecay * weight;\n        color += sample;\n        illuminationDecay *= decay;\n    }\n    fragColor = color*exposure+(buffer*.55);\n}\n// 2016 Passion\n//Reference: https://www.shadertoy.com/view/XsjSRt","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//https://www.shadertoy.com/view/XsjSRt\n//credit goes to Sinuousity - '2D Fast Clouds'\n//SETTINGS//\nconst float timeScale = 14.0;\nconst float cloudScale = 0.01;\nconst float skyCover = 0.6; //overwritten by mouse x drag\nconst float softness = 0.02;\nconst float brightness = 1.0;\nconst int noiseOctaves = 8;\nconst float curlStrain = 3.0;\n//SETTINGS//\n\nfloat saturate(float num)\n{\n    return clamp(num,0.0,1.0);\n}\n\nfloat noise(vec2 uv)\n{\n    return texture(iChannel0,uv).r;\n}\n\nvec2 rotate(vec2 uv)\n{\n    uv = uv + noise(uv*0.2)*0.005;\n    float rot = curlStrain;\n    float sinRot=sin(rot);\n    float cosRot=cos(rot);\n    mat2 rotMat = mat2(cosRot,-sinRot,sinRot,cosRot);\n    return uv * rotMat;\n}\n\nfloat fbm (vec2 uv)\n{\n    float rot = 1.57;\n    float sinRot=sin(rot);\n    float cosRot=cos(rot);\n    float f = 0.0;\n    float total = 0.0;\n    float mul = 0.5;\n    mat2 rotMat = mat2(cosRot,-sinRot,sinRot,cosRot);\n    \n    for(int i = 0;i < noiseOctaves;i++)\n    {\n        f += noise(uv+iTime*0.00005*timeScale*(1.0-mul))*mul;\n        total += mul;\n        uv *= 3.0;\n        uv=rotate(uv);\n        mul *= 0.5;\n    }\n    return f/total;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//vec2 screenUv = fragCoord.xy/iResolution.xy;\n    vec2 uv = fragCoord.xy/iResolution.xy*cloudScale;\n    uv = uv*2.0-1.0;\n    uv.x*=iResolution.x/iResolution.y;\n    float mouseXAffect = (iMouse.x/iResolution.x);\n    \n    //vec3 sunCol = vec3(1.,.8,.6);\n    vec4 sunCol = vec4(258.0, 208.0, 100.0, 1.0) / 15.0;\n\n    float cover = mouseXAffect*1.1+0.1;\n    if( iMouse.z<=0.0001 ) cover = 0.54;\n    \n    float bright = brightness*(1.8-cover);\n    \n    float color1 = fbm(vec2(uv.x-0.5+iTime*0.00004*timeScale, uv.y));\n    float color2 = fbm(vec2(uv.x, uv.y-10.5+iTime*0.00002*timeScale));\n    float c = color1;\n    float clouds1 = smoothstep(1.0-cover,min((1.0-cover)+softness*2.0,1.0),color1);\n    float clouds2 = smoothstep(1.0-cover,min((1.0-cover)+softness,1.0),color2);\n    \n    float cloudsFormComb = saturate(clouds1+clouds2);\n    \n    vec4 skyCol = vec4(0.6,0.8,1.0,1.0);\n    float cloudCol = saturate(saturate(1.0-pow(color1,1.0)*0.2)*bright);\n    vec4 clouds1Color = vec4(cloudCol*c,cloudCol*c*c,cloudCol*c*c*c,1.0);\n    vec4 clouds2Color = mix(clouds1Color,skyCol,0.25);\n    vec4 cloudColComb = mix(clouds1Color,clouds2Color,saturate(clouds2-clouds1));\n    //reset screen coordinates for light position\n    uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    float lp = length(.5*uv+vec2(sin(iTime*.7)*.3,-cos(iTime*.2)*.3))-.5;\n    //add light to background or sky color\n    skyCol += vec4(-lp)*normalize(sunCol); \n\tfragColor = mix(skyCol,cloudColComb,cloudsFormComb);\n}","name":"Buf A","description":"","type":"buffer"}]}