{"ver":"0.1","info":{"id":"ldfyzf","date":"1489134468","viewed":199,"name":"universal wallpaper","username":"jes5199","description":"sinusoidals of the levels of all three of chromogeometry's relativistic conics","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","wallpaper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float D3DX_SRGB_to_FLOAT(float val)\n{\n    if( val < 0.04045 )\n        val /= 12.92;\n    else\n        val = pow((val + 0.055)/1.055,2.4);\n    return val;\n}\n\nvec3 D3DX_SRGB_to_FLOAT(vec3 val)\n{\n    return vec3(\n        D3DX_SRGB_to_FLOAT(val.r),\n        D3DX_SRGB_to_FLOAT(val.g),\n        D3DX_SRGB_to_FLOAT(val.b)\n    );\n}\n\nfloat signpower(float n, float p){\n    return sign(n) * abs(pow(n,p));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 uv = (fragCoord.xy - (iResolution.xy / 2.0));\n\n    float pi = acos(-1.);\n    float period = exp2(6.) * pi;\n    float x = sin(uv.x / period) * period;\n    float y = sin(uv.y / period) * period;\n    float t = .0001 + iTime  / 20000.;\n\n    float power = 5.;\n    float red   = signpower(sin(( x*x+y*y)*t),power);\n    float green = signpower(sin((2.*x*y ) *t),power);\n    float blue  = signpower(sin(( x*x-y*y)*t),power);\n    //float alpha = (sin(x*y*t*sin(x*t)*sin(y*t))+ 1.)/2.;\n\n\n\tfloat avg = (red + blue + green) / 3.;\n    vec3 gray = vec3(avg, 0, avg) * 0.9;\n    //vec3 rbg = vec3(red/1.5, green/2., blue);\n    vec3 r;\n    float mute = 0.9;\n    if(red > 0.) {\n       r = vec3(red, 0, 0);\n    } else {\n       r = vec3(0, -red, -red) * mute;\n    }\n    vec3 g;\n    if(green > 0.) {\n       g = vec3(0, green, 0);\n    } else {\n       g = vec3(-green, 0, -green) * mute;\n    }\n\n    vec3 b;\n    if(blue > 0.) {\n       b = vec3(0, 0, blue);\n    } else {\n       b = vec3(-blue, -blue, 0) * mute;\n    }\n    \n    vec3 color = max(max(r,g),b);//r+g+b;// * vec3(0.9,0.8,1);\n    \n    color = D3DX_SRGB_to_FLOAT(color);\n\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}