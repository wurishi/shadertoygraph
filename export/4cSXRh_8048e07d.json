{"ver":"0.1","info":{"id":"4cSXRh","date":"1706000015","viewed":174,"name":"USSR Flag - 2nd Term","username":"NewRynVasquez","description":"USSR Flag, Custom made for my CSB midterms project","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ussr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793\n#define TWO_PI 6.283185307179586\n\nvec4 vColor = vec4(1.0, 1.000,0.020,0.020);//0, 0, 1.0\nfloat smoothness = 4.0;\nfloat innerRadius = 0.65;\nfloat outerRadius = 0.9;\nfloat startAngle = 0.1 * TWO_PI;\nfloat endAngle = 1.54 * PI;\n\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n\n}\n\nmat2 scale2d(vec2 value){\n    return mat2(value.x, 0, 0, value.y);\n\n}\n\nfloat rect(vec2 uv, vec2 pos, vec2 size, float borderThickness){\n    pos -= 0.5*size;\n    \n    vec2 b1 = step(pos,uv);\n    float pct = b1.x * b1.y;\n    \n    vec2 tr = 1.0 - step(pos+size, uv);\n    pct *= tr.x * tr.y;\n    \n    return pct;\n\n}\n\nvec4 sickle(in vec2 fragCoord){\n    \n    vec4 fragColor = vec4(0.0); \n    startAngle = clamp(startAngle, 0.0, endAngle);\n    endAngle = clamp(endAngle, startAngle, TWO_PI);\n    \n    float smoothnessMult = 1.0 / length(iResolution);\n    float smoothThresh = smoothness * smoothnessMult;\n    \n    vec2 ciTexCoord0 = fragCoord/ iResolution.y;\n    vec2 centerPos = (ciTexCoord0 * 3.8) - 2.6;\n\t\n\tfloat dist = length(centerPos + .3);\n\tfloat inner = smoothstep(innerRadius, innerRadius + smoothThresh, dist);\n\tfloat outer = smoothstep(outerRadius, outerRadius - smoothThresh, dist);\n\tfloat bandAlpha = inner * outer;\n    \n    float angle = (atan(centerPos.y, centerPos.x) + PI);\n    float startEdge = smoothstep(angle, angle - smoothThresh * 1.0, startAngle);\n    float endEdge = smoothstep(angle, angle + smoothThresh * 1.0, endAngle);\n    float angleAlpha = startEdge * endEdge;\n    \n    fragColor = vec4(vColor.rgb, 1.0) * bandAlpha * angleAlpha;\n    \n    return fragColor;\n\n\n}\n\nvec4 handle(in vec2 fragCoord){\n\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec4 color = vec4(0.0);\n\n    vec2 pos = vec2(0.230,0.40)-uv;\n\n    float r = length(pos)*3.872;\n    float a = atan(pos.y,pos.x) -1.052;\n\n    float f = smoothstep(-1.172,1.104, cos(a*1.920))*0.216+0.116;\n\n    color = vec4( 1.-smoothstep(f,f+0.004,r)) * vec4(0.9, 1.000,0.010,0.029);\n    \n    return color;\n\n}\n\n\nvec4 box(vec2 pos, vec2 size, in vec2 fragCoord, float r, float g, float b) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 pct = vec4(uv.y);\n    \n        \n    float s1 = step(pos.x - (size.x / 2.), uv.x);\n    s1 -= step(pos.x + (size.x / 2.0), uv.x);\n    \n    float s2 = step(pos.y - (size.y / 2.), uv.y);\n    s2 -= step(pos.y + (size.y / 2.0), uv.y);\n    \n    vec4 col = vec4(1.0) * (s1 * s2) * vec4(r, g, b, 0.1);\n     \n    return col;\n}\n\nvec4 sovietStar(in vec2 fragCoord, float radius, float posX, float posY, float rd, float g, float b, float w){\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec4 ss = vec4(1.000,0.139,0.034, 0.0);\n\n    vec2 pos = vec2(posX,posY)-uv;\n\n    float r = length(pos)*radius;\n    float a = atan(pos.y,pos.x) + 0.3;\n\n    float f = abs(cos(a*0.016)*sin(a*2.520))*-0.304+0.596;\n\n    ss = vec4( 1.-smoothstep(f,f+0.02,r)) * vec4(rd, g, b, w);\n\n    return ss;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n     // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    \n    uv.x *= ratio;\n\n    vec2 pos = vec2(0.39 * ratio, 0.55);\n    vec2 pos2 = vec2(0.39 * ratio, 0.838);\n    \n    //1 - Translate to Origin (Back to 0.0 position)\n    uv -= pos;\n    \n    //2 - Rotate Cube\n    uv *= rotate2d(-0.855);\n\n    //3 - Bring Cube Back\n    uv += pos;\n    \n    vec2 posBack = vec2(0.155, 0.9);\n    vec2 size = vec2(1.9, 1.9);\n    vec4 backGround = box(posBack, size, fragCoord, 1.000,0.006,0.092);\n    \n    vec4 color = vec4(rect(uv, pos, vec2(0.08, 0.4515), 0.01)) * vec4(0.995,0.958,0.007, 0.0);\n    vec4 hammerHead = vec4(rect(uv, pos2, vec2(0.25, 0.125), 0.01)) * vec4(0.995,0.958,0.007, 0.0);\n    \n    vec4 ussrStar1 = sovietStar(fragCoord,8.576,0.38,0.895,0.995,0.958,0.007, 0.0);//0.995,0.958,0.007\n    vec4 ussrStar2 = sovietStar(fragCoord,10.576,0.38,0.895,0.002,1.000,0.533, 0.0);//1.000,0.006,0.092\n    \n    vec4 ussrStar = ussrStar1 - ussrStar2;\n    \n    fragColor = sickle(fragCoord) + handle(fragCoord) + color + hammerHead + backGround + ussrStar; //sickle(fragCoord) + handle(fragCoord) + color + hammerHead + backGround\n\n}","name":"Image","description":"","type":"image"}]}