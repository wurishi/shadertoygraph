{"ver":"0.1","info":{"id":"dtyfDc","date":"1702558350","viewed":38,"name":"Polar Using Comments","username":"sarahannstarmer","description":"Polar Coordinates\nArt of Code Tutorial\nhttps://www.youtube.com/watch?v=r1UOB8NVE8I","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// from comment by FabriceNeyret2 and Mojomajor\n//Polar Coordinates\n//Art of Code Tutorial\n//https://www.youtube.com/watch?v=r1UOB8NVE8I\n//https://www.shadertoy.com/view/DlGfWK\n\n// start circle function.\nfloat Circle(vec2 uv,vec2 center, float r, float blur){\nfloat d = length(uv-center);\nfloat c =smoothstep(r, r-blur,d);\nreturn c;\n}// end circle function.\n\nfloat nubPetals = 10.,\n    twist = .8,\n    radius = .7,\n    size = .02,\n    Pi2 = 6.2831;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float l = length(uv);\n    float a = atan(uv.x,uv.y);\n//    vec2 U = vec2(a,l);\ntwist = vec2(a,l).y*twist*sin(iTime);\n\n    float x = fract( ( a/6.28 + .5 + l*twist ) *nubPetals ),\n          c = min(x, 1.-x) *radius + size - l;\n          c+= Circle(uv,vec2 (0.0,0.0), 0.1, 0.01);\n          vec4 o =  vec4( smoothstep( -1.,1., c/fwidth(c) ) ); \n    fragColor = o; \n}","name":"Image","description":"","type":"image"}]}