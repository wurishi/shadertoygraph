{"ver":"0.1","info":{"id":"WslyWn","date":"1584551407","viewed":212,"name":"Mirrored Columns","username":"marlus","description":"Simple photo/video effect. Wonder how to animate from the center...","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","video","mirror","columns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(float low1, float high1, float low2, float high2, float value){\n\tvalue = max(value, low1);\n\tvalue = min(value, high1);\n\treturn low2 + (value - low1) * (high2 - low2) / (high1 - low1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    // num columns\n    float cols = 16. + 8.*cos(iTime);\n\t\n   \t// steps\n\tfloat qx = floor(uv.x * cols) / cols;\n    \n    // texture calculation\n    float fx = mod(2. - map(qx, qx + 1.0/cols, qx + 1.0/cols, qx, uv.x),1.);\n    \n    fragColor = texture(iChannel0, vec2(fx,uv.y));\n}\n\n\n","name":"Image","description":"","type":"image"}]}