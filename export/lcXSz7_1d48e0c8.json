{"ver":"0.1","info":{"id":"lcXSz7","date":"1705060310","viewed":500,"name":"The Lamp is Lava","username":"Kali","description":"Made for Genuary day 12. Click on the buttons to change colors.","likes":56,"published":1,"flags":32,"usePreview":0,"tags":["raymarching","lava","lamp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float max_rad=.05;\nconst float it=80.;\n\n#define time iTime\n\nmat2 rot(float a){\n\tfloat s=sin(a);\n    float c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nfloat hash(vec2 p)\n{\n    p*=1342.;\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n\tmat2 spin=rot(2.39996);\n    vec2 p=vec2(0.,1.);\n    vec3 res=vec3(0.);\n    float rad_step=max_rad/it+hash(uv+mod(time,10.))*.0002;\n\tfloat rad=0.;\n    vec4 col=texture(iChannel0,uv-vec2(0.001,0.));\n    for (float i=0.;i<it; i++) {\n        rad+=rad_step;\n        p*=spin;\n        vec4 col=texture(iChannel0,uv+p*rad);\n        res+=smoothstep(.0,1.,length(col.rgb))*col.rgb*5.;\n    };\n    res/=it;\n    vec2 pp=(uv-.5);\n\tfragColor = vec4(pow(col.rgb*.6+res*.5,vec3(1.3)),1.); \n}\n\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define resolution iResolution\n#define time (iTime+10.)\n#define mouse (iMouse.xy/iResolution.xy-.5)\n\nvec3 pos, from;\nfloat id, gla, botid, tt, mode;\n\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat hash(vec2 p)\n{\n    p*=1000.;\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    float n = mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n    return n-.5;                     \n}\n\nmat2 rot(float a) {\n\tfloat c=cos(a);\n\tfloat s=sin(a);\n\treturn mat2(c,s,-s,c);\n}\n\nfloat topbottom(vec3 p) {\n    vec3 ps=p;\n    ps*=1.+abs(p.y+1.5)*.3;\n    ps.xz*=1.-smoothstep(-4.5,-5.,p.y)*.2;\n    float d=length(ps.xz)-1.8;\n    d=max(d,-abs(p.y)+3.);\n    d=max(d,p.y-4.);\n    d=max(d,-p.y-5.);\n    return d*.7;\n}\n\nfloat glass(vec3 p) {\n    p.xz*=1.+pow(abs(p.y+1.3),2.)*.05;\n    float d=abs(length(p.xz)-1.4);\n    d=max(d,abs(p.y)-3.);\n    return d;\n}\n\nfloat ball(vec3 p, float c) {\n    p*=1.+(noise(p.xy+time*.3+c*1234.)+.5);\n    return length(p)-c;\n}\n\nfloat balls(vec3 p) {\n    float t=time*.1;\n    float a=smoothstep(3.,0.,abs(p.y+.5))*.8+.2;\n    vec3 p1=p;\n    p1.y+=sin(t)*2.5;\n    p1.x+=noise(p.yy*.0+t)*a;\n    p1.z+=noise(p.yy*.0+123.+t)*a;\n    vec3 p2=p;\n    p2.y+=sin(t+1.)*2.5;\n    p2.x+=noise(p.yy*.0+t+12.)*a;\n    p2.z+=noise(p.yy*.0+123.+t+12.)*a;\n    vec3 p3=p;\n    p3.y+=sin(t+2.)*2.5;\n    p3.x+=noise(p.yy*.0+t+12.+85.)*a;\n    p3.z+=noise(p.yy*.0+123.+t+98.)*a;\n    vec3 p4=p;\n    p4.y+=sin(t+3.)*2.5;\n    p4.x+=noise(p.yy*.0+t+12.+285.)*a;\n    p4.z+=noise(p.yy*.0+123.+t+398.)*a;\n    vec3 p5=p;\n    p5.y+=sin(t+4.)*2.5;\n    p5.x+=noise(p.yy*.0+t+12.+1285.)*a;\n    p5.z+=noise(p.yy*.0+123.+t+1398.)*a;\n    float d=ball(p1, .8);\n    d=smin(d,ball(p2, .7),.3);\n    d=smin(d,ball(p3, .6),.3);\n    d=smin(d,ball(p4, .5),.3);\n    d=smin(d,ball(p5, .3),.3);\n    return d;\n}\n\nfloat botones(vec3 p) {\n    p.xz*=rot(-tt*.4);\n    float l=length(p.xz)-1.3;\n    p.y+=3.3;\n    float bot1=length(p.xy)-.1;\n    bot1=max(bot1,l);\n    p.x-=.5;\n    float bot2=length(p.xy)-.1;\n    bot2=max(bot2,l);\n    p.x+=1.;\n    float bot3=length(p.xy)-.1;\n    bot3=max(bot3,l);\n    float d=min(bot1,min(bot2,bot3));\n    if (d==bot1) botid=1.;\n    if (d==bot2) botid=2.;\n    if (d==bot3) botid=3.;\n    return d;\n}\n\nfloat de(vec3 p) {\n    id=0.;\n    gla=max(.01,abs(glass(p)));\n    float bou=length(p.xz)-2.;\n    if (bou>0.) return bou+.1;\n    float bot=botones(p)*2.;\n    p.xz*=rot(time*.2);\n    float tobo=topbottom(p);\n    float ba=balls(p);\n    float d=min(ba,min(tobo,gla));\n    d=min(d,bot);\n    if (d==tobo) id=1.;\n    if (d==bot) id=2.;\n    return d*.5;\n}\n\nvec3 normalg(vec3 p) {\n    vec2 e=vec2(0.,.001);\n    return normalize(vec3(glass(p+e.yxx),glass(p+e.xyx),glass(p+e.xxy))-glass(p));\n}\n\nvec3 normal2(vec3 p) {\n    vec2 e=vec2(0.,.001);\n    return normalize(vec3(de(p+e.yxx),de(p+e.xyx),de(p+e.xxy))-de(p));\n}\n\nvec3 normal(vec3 pos) {\n    vec2 e=vec2(0.,.001);\n    vec3 ev[4];\n\tev[0]=e.yxx;\n\tev[1]=e.xyx;\n\tev[2]=e.xxy;\n\tev[3]=e.xxx-.0000001;\n\t//vec3[4](e.yxx, e.xyx, e.xxy, e.xxx-.000001);\n    vec3 nn = vec3(0);\n    for(int i = 0; i<4; i++){\n        nn += sign(ev[i])*de(pos + ev[i]);\n        if(nn.x<-1e8) break; // Fake break.\n    } \n    return normalize(nn);\n}\n\nvec3 march(vec3 from, vec3 dir) {\n    float d, td=0.;\n    vec3 p; \n    vec3 col=vec3(0.);\n    float paso=0.;\n    vec3 ng;\n    float g=0.;\n    for (int i=0; i<100; i++) {\n        p=from+dir*td;\n        d=de(p);\n        if (gla<.011&&paso<.5) {\n            paso=1.;\n            ng=normalg(p);\n            dir=refract(dir,ng,.98);\n        } \n        if (d<.001||td>50.) break;\n        td+=d;\n        vec3 p2=p;\n        p2.xz*=rot(time*.05);\n        p2=fract(p2+vec3(.3,.4,.5)+vec3(0.,-time*.1,time*.02));\n        for (int i=0; i<5; i++) {\n            p2=abs(p2)/dot(p2,p2)-.8;\n        }\n        g+=dot(p2,p2)*paso*.0006;\n    }\n    vec3 n=normal(p);\n    vec3 c;\n    if (mode==1.) c=vec3(.0,.7,.0);\n    if (mode==2.) c=vec3(.0,.0,.8);\n    if (mode==3.) c=vec3(.8,.0,.0);\n    if (d<.01) {\n        if (id==0.) {\n            float cerca=smoothstep(-1.5,-2.5,p.y);\n            col+=max(.4+.4*cerca,smoothstep(-1.7,1.,-n.y))*c;\n            vec3 ref=reflect(normalize(vec3(0.,1.,-1.)),dir);\n            col+=pow(max(0.,dot(ref,-n)),50.)*.5*(1.-cerca);\n        }\n        if (id==1.) {\n            col=vec3(.5);\n            col*=.65-max(0.,dot(-dir,n));\n            if (paso==1.&&p.y<0.) col=paso*c*smoothstep(1.5,.5,length(p.xz))+exp(-3.*length(p.xz))*.35;\n            if (paso==1.&&p.y>0.) col=paso*c*.7;\n        }\n        if (id==2.) {\n            if (botid==1.) col=vec3(.3,1.,.3)*(mode==1.?1.5:.5);\n            if (botid==2.) col=vec3(.2,.3,1.)*(mode==2.?1.5:.5);\n            if (botid==3.) col=vec3(1.,.3,.2)*(mode==3.?1.5:.5);\n            col*=max(0.4,-n.z);\n        }\n    } else {\n        col=c*-dir.y*.7;\n        col+=smoothstep(.45,.5,abs(.5-fract(dir.y*20.)))*.7*fract(dir.x+time*.1+dir.y*5.)*normalize(c+.5);\n    }\n    col=mix(col,normalize(c+.5)*.5,paso*.4);\n    col+=g*normalize(c+.5);\n    vec3 ref=reflect(dir,ng);\n    col+=pow(max(0.,dot(normalize(vec3(-2.,.2,1.)),ref)),100.)*.3;\n    return col;\n}\n\nvec3 cam(vec2 uv) {\n    vec3 dir = normalize(vec3(uv, 1.));\n    vec3 col=march(from, dir);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float a = texture(iChannel0,vec2(0.5,0.)).a;\n    a=max(.1,a);\n    if (a==.1) mode = 1.;\n    if (a==.2) mode = 2.;\n    if (a==.3) mode = 3.;\n    vec2 uv=fragCoord/iResolution.xy-.5;\n    if (abs(uv.x)>.3) {\n    fragColor=vec4(0.);\n    return;\n    }\n    vec2 m=mouse;\n    m.x*=iResolution.x/iResolution.y;\n    float t=sin(time*.2);\n    tt=(smoothstep(-.7,.7,t)-.5)*2.;\n    from = vec3((-tt+1.)*.3,(tt-1.)*.6,-9.-tt*3.);\n    vec3 dir = normalize(vec3(m, 1.));\n    vec3 p=from;\n    float d, td=0.;\n    for (int i=0; i<100; i++) {\n        d=botones(p);\n        p+=dir*d;\n        if (d<.001||td>100.) break;\n        td+=d;\n    }\n    float mo=0.;\n    if (d<.1) {\n        mo=botid;\n    }\n    uv.x*=iResolution.x/iResolution.y;\n    vec3 col=cam(uv);\n    col-=(hash(uv+time)-.5)*.15;\n    //col.rb*=rot(vTexCoord.y*.3);\n    if (iMouse.z>0.) {\n        if (mo==1.) a=.1;\n        if (mo==2.) a=.2;\n        if (mo==3.) a=.3;\n    } else {\n        a=texture(iChannel0,vec2(0.5,0.)).a;\n    }\n    fragColor = vec4(min(vec3(1.),col),a);\n}\n\n","name":"Buffer A","description":"","type":"buffer"}]}