{"ver":"0.1","info":{"id":"ssfSR7","date":"1618501250","viewed":55,"name":"Lines Bounce","username":"NakedBowman","description":"Lines bounce","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bounce"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plot(vec2 uv, float pct, float i){\nreturn step(pct - abs(cos(iTime)* 0.1), uv.y) - step(pct + i * 0.01, uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n\n    vec3 color = vec3(1);\n  \n    //float x = pow(cos(dist * uv.x / 2.f), 8.0);\n    //float x = 1.0 - pow(uv.x,2.f);\n     //x = pow(cos(3.14 * uv.x / 2.f), 1.0); \n    \n    vec3 colorA = vec3(0.149,0.441,0.912);\n    vec3 colorB = vec3(0.990,0.233,0.224);\n    vec3 colorC = vec3(0.590,0.233,0.124);\n    \n    \n    float x = abs(sin(iTime + uv.x));\n\n   \n    for(float i = 0.; i < 3.; i++)\n    {\n        float x = abs(sin(iTime + uv.x + i * 0.3 ));\n        float pct = plot(uv,x, i);\n        \n        color = (1. - pct) * color + pct* vec3(mix(colorB, colorA, x)); \n        // color = (1.0-=pct)*color+=pct*vec3(mix(colorB, colorA, x));\n    }\n    \n    //color = ( 1.f - pct) * color + pct*vec3(mix(colorB, colorA, x)); \n    \n    color = vec3(1.) - color + vec3(mix(colorC, colorA, x));\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}