{"ver":"0.1","info":{"id":"l3sXW7","date":"1709781975","viewed":131,"name":"Dancing Line","username":"ukmgob","description":"A group of dancing line.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MI 7        // max iteration\n#define LW 12.0     // line width\n#define LI 1.2      // line indensity\n#define AS 0.5      // animation speed\n#define BI 1.0      // background indensity\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tfloat time = iTime * .05; // slow the time\n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n\tvec2 p = uv;\n\tvec2 i = p;\n\tfloat bi = BI;\n\n\tfor (int n = 0; n < MI; n++) {\n\t\tfloat t = time * float(n) * AS;\n\t\ti = p + vec2(cos(t - i.x) + sin(t + i.y),\n                     sin(t - i.y) + cos(t + i.x));\n\t\tbi += length(vec2(\n\t\t\t\tp.x / (sin(i.x + t) / LI),\n\t\t\t\tp.y / (cos(i.y + t) / LI)));\n\t}\n\n\tbi /= float(MI);\n    bi /= LW;\n\n\tvec3 color = vec3(bi);\n\tvec3 color_base = vec3(0.0, 0.2, 0.5);\n\tcolor = clamp(color_base + color, 0.0, 1.0);\n\tfragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}