{"ver":"0.1","info":{"id":"4sdBRr","date":"1523957564","viewed":229,"name":"TriangleArea","username":"JennySchub","description":"circular area of differently sized triangles","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["triangles","backbuffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Output to screen\n    fragColor = vec4(vec3(texture(iChannel0, uv)),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\nvec3 resolution = iResolution;\n    float mx = max( resolution.x, resolution.y );\n    vec2 uv = gl_FragCoord.xy/resolution.xy;\n    uv.x*=resolution.x/resolution.y;\n    float size = .08*resolution.y;\n    float lineInt= 0.;\n    float areaInt=1.;\n    float poiSize =.568;\n    int pointerCount=4;\n    for(int p=0;p<pointerCount;p++){\n        int i=p;\n        vec2 a =vec2(.5+.5*cos(1.+iTime*float(i+1)*.2),\n                     .5+.5*cos(iTime*float(i+2)*.2) )*iResolution.xy;\n        //areaInt+=max(0.,poiSize-distance(gl_FragCoord.xy,a)/(mx*poiSize));\n        //areaInt *= .7+max(0.,exp(-pow(length(a-fragCoord)*.005,2.)));\n        areaInt *= 1.5-smoothstep(-0.,1.,length(a-fragCoord)*0.001);\n    }\n    areaInt = clamp(areaInt, 0.,.96);\n    float sined = cos((uv.x+uv.y/sqrt(3.))*size)+1.1;\n    float sined2 = cos((-uv.x+uv.y/sqrt(3.))*size)+1.1;\n    float sined3 = cos((uv.y/sqrt(3.))*size*2.)+1.1;\n  \tfloat stepFrom =0.1;\n    float stepTo = .15;\n  \tsined=smoothstep(stepFrom,stepTo,sined-areaInt*2.);\n  \tsined2=smoothstep(stepFrom,stepTo,sined2-areaInt*2.);\n  \tsined3=smoothstep(stepFrom,stepTo,sined3-areaInt*2.);\n  \tvec3 col=vec3(0.);\n  //float sined2 = cos((-uv.x+uv.y)*size);\n  //float sined3 = cos((uv.y)*size*2.);\n  //areaInt=1.;\n  //float col = sined>lineW || sined2>lineW||sined3>lineW?lineInt:areaInt;\n  //float last = texture(iChannel0,gl_FragCoord.xy/resolution.xy).r;\n  //col = mix(last, col, .81);\n    col += sined2+sined+sined3;\n    \n    fragColor = vec4(1.-col,1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}