{"ver":"0.1","info":{"id":"Xs2fDD","date":"1500487353","viewed":114,"name":"Simple smooth hegaxon primitive","username":"etale_cohomology","description":"Fork of Fabrice's https://www.shadertoy.com/view/4scXWS","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple","math","tutorial","distance","field","fabrice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of Fabrice's https://www.shadertoy.com/view/4scXWS\n// A simple smooth hexagon primitive\n\n#define HEXAGON_SIZE .8\n\nfloat sdf_hexagon(in vec2 uv, in float size, in vec2 center){\n\tvec2 hexagon_vec = smoothstep(.51, .49, abs(uv - center) * mat2(1, 0, .5, .87) / size);\n\treturn min(hexagon_vec.x, hexagon_vec.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\tvec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;  // The Fabrice map!\n    uv = mat2(cos(iTime), -sin(iTime), sin(iTime), cos(iTime)) * uv;\n\n    float hexagon_size   = HEXAGON_SIZE;\n    vec2  hexagon_center = .4 * vec2(2.*cos(iTime), sin(iTime));\n    float hexagon = sdf_hexagon(uv, hexagon_size, hexagon_center);\n\n    fragColor.rgb = vec3(hexagon);\n}\n","name":"Image","description":"","type":"image"}]}