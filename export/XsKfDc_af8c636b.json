{"ver":"0.1","info":{"id":"XsKfDc","date":"1530843260","viewed":586,"name":"Mandelcam","username":"dahart","description":"Mandelcam: using the Mandelbrot set for distortion mapping","likes":6,"published":1,"flags":2,"usePreview":0,"tags":["mandelbrot","distortion","complex","mapping","symmetry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 Cpow(vec2 z, float n) {\n    float r = length(z);\n    float t = atan(z.y, z.x);\n    float nt = n * t;\n    return pow(r, n) * vec2(cos(nt), sin(nt));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.);\n    float margin = .5 * (iResolution.x - iResolution.y);\n\tvec2 uv = 1.*(fragCoord.xy - vec2(1.,0.)*margin) / iResolution.yy;\n    //if (uv.x < .01 || uv.x > .99) return;\n    //if (uv.y < .01 || uv.y > .99) return;\n    \n    uv = 2. * uv - 1.;\n    uv.x -= .5;\n\n    vec2 suv = vec2(0.);\n    for (int i = 0; i < 9; i++) {\n    \tsuv = Cpow(suv, 2.) + uv;\n    }\n    \n    suv = (1. + suv) / 2.;\n    fragColor = texture(iChannel0, suv);\n}\n","name":"Image","description":"","type":"image"}]}