{"ver":"0.1","info":{"id":"ddtfD4","date":"1697189686","viewed":79,"name":"Circular Aurora Borealis","username":"daumann","description":"abstract aurora borealis as might be seen from space","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["aurora","borealis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.2831853071\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 center = vec2(0.5, 0.5);\n\n    // Calculate the distance from the current fragment to the center\n    float distanceToCenter = distance(uv, center) * 1.8  + sin((iTime * 0.05) * TAU) * .075 + cos((iTime * 0.05) * TAU) * .045;\n\n    float v = distanceToCenter;\n\n    // Modify the effect based on the circular position\n    v = 1.0 - abs(v * 2.0 - 1.0);\n    v = pow(v, 4.0 + sin((iTime * 0.3 + v * 0.25) * TAU) * 0.75);\n\n\n    vec3 color = vec3(0.0);\n    \n    float x = (1.0 - uv.x * 0.75);\n    float y = 1.00 - abs(uv.y * 2.0 - 1.0 + sin((iTime * 0.13 + v * 0.25) * TAU));\n    color += vec3(x * 0.5, y, x) * v;\n    \n    fragColor.rgb = color;\n    fragColor.a = .2;\n    \n}","name":"Image","description":"","type":"image"}]}