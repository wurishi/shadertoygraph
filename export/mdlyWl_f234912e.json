{"ver":"0.1","info":{"id":"mdlyWl","date":"1702666060","viewed":15,"name":"sdf test2","username":"mw_frac","description":"test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette ( float t )\n{\n    vec3 a = vec3(0.778, -1.612, 0.108);\n    vec3 b = vec3(-0.082, -0.422, -0.422);\n    vec3 c = vec3(2.043, 3.173, 0.138);\n    vec3 d = vec3(2.075, 2.409, 2.742);\n    \n    return a + b*cos(6.28318*(c*t*d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float timeScale = 0.1;\n    float angle = iTime * timeScale;\n    float iter = 4.0;\n    float amp = 2.75;\n    vec2 normalizedCoord0 = fragCoord / iResolution.xy * 2.0 - 1.0;\n    for (float i = 0.0; i <iter; i += 1.0)\n    {\n        normalizedCoord0 = abs(normalizedCoord0);\n        normalizedCoord0 -= 0.3;\n        normalizedCoord0 *= 1.75;\n        normalizedCoord0 *= mat2(-cos(angle), -sin(angle), sin(angle), -cos(angle));\n    }\n    \n    vec2 normalizedCoord1 = fragCoord / iResolution.xy * 4.0 - 2.0;\n    for (float i = 0.0; i <1.0; i += 1.0)\n    {\n        normalizedCoord1 = abs(normalizedCoord1);\n        //normalizedCoord1 += 0.3;\n        normalizedCoord1 *= 2.;\n        normalizedCoord1 *= mat2(-cos(angle), -sin(angle), sin(angle), -cos(angle));\n    }\n    float d = length(normalizedCoord0);\n    d = sin((d*amp) + iTime * 2.0);\n    d += length(normalizedCoord1);\n    d = sin((d*amp) - iTime * 2.0);\n    vec3 col = palette(length(normalizedCoord0) + length(normalizedCoord1));\n    col *= d;\n    \n   fragColor = vec4(col, 1.0);\n   //fragColor = vec4(d,d,d, 1.0); \n}","name":"Image","description":"","type":"image"}]}