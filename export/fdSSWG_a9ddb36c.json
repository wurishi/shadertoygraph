{"ver":"0.1","info":{"id":"fdSSWG","date":"1620862515","viewed":324,"name":"Animated Random Population","username":"pyBlob","description":"Beautiful random noise caused by mutations in growing cells.\n\nclick+drag: punch holes\nR: reset","likes":14,"published":3,"flags":48,"usePreview":0,"tags":["mouse","random","cellular","automaton"],"hasliked":0,"parentid":"wsdXDM","parentname":"Random Population"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    if (fragColor != vec4(0))\n    {\n        fragColor.x = .5 + .5 * sin(fragColor.x * 3. + iTime * .2 + fragColor.w * -1e-3 - .3);\n        fragColor.y = .5 + .5 * sin(fragColor.y * 3. + iTime * .2 + fragColor.w * -7e-3 + .5);\n        fragColor.z = .5 + .5 * sin(fragColor.z * 3. + iTime * .2 + fragColor.w * -3e-3 + .9);\n        fragColor.w = 1.;\n    }\n    if (iMouse.z >= .0)\n    \tif (length(fragCoord - abs(iMouse.zw)) < length(iMouse.xy - abs(iMouse.zw)))\n    \t\tfragColor = mix(fragColor, vec4(.3), .5);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// https://www.shadertoy.com/view/4djSRW\nvec4 hash43(vec3 p)\n{\n\tvec4 p4 = fract(vec4(p.xyzx)  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\nvoid test(inout vec4 id, ivec2 x)\n{\n    if (x == ivec2(0))\n        return;\n    if (id != vec4(0))\n        return;\n    vec4 next = texelFetch(iChannel0, x, 0);\n    if (next == vec4(0))\n        return;\n    vec3 pos = vec3(x,iTime);\n    vec4 blob = hash43(pos);\n    if (blob.w > 3e-1)\n        return;\n    vec3 delta = .1 * (blob.xyz - .5);\n    id = vec4(next.xyz + delta, next.w + 1.);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    if (iFrame == 0 || texelFetch(iChannel1, ivec2(82, 1), 0).x>0.)\n    {\n        ivec2 xy = ivec2(fragCoord.xy) - ivec2(iResolution.xy/2.);\n        fragColor = vec4(0);\n        if (xy == ivec2(0,0))\n            fragColor = vec4(0, 0, 0, 1e-3);\n        return;\n    }\n    ivec2 x = ivec2(fragCoord);\n    if (x == ivec2(0))\n    {\n        fragColor = iMouse;\n        return;\n    }\n    vec4 id = texelFetch(iChannel0, x, 0);\n    test(id, x+ivec2(0, 1));\n    test(id, x+ivec2(1, 0));\n    test(id, x-ivec2(0, 1));\n    test(id, x-ivec2(1, 0));\n    fragColor = id;\n    vec4 lastMouse = texelFetch(iChannel0, ivec2(0), 0);\n    if (lastMouse.z >= .0 && iMouse.z < .0)\n        if (length(fragCoord - abs(lastMouse.zw)) < length(lastMouse.xy - abs(lastMouse.zw)))\n            fragColor = vec4(0);\n}","name":"Buffer A","description":"","type":"buffer"}]}