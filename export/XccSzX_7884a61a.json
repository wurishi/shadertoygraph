{"ver":"0.1","info":{"id":"XccSzX","date":"1714244017","viewed":91,"name":"Pixel Lights","username":"zhizhoid","description":"-","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["pixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = (floor(uv * PIXEL_RES) + 0.5) / PIXEL_RES;\n    \n    ivec2 bayerPos = ivec2(mod(uv * PIXEL_RES, 2.));\n    \n    float m = BAYER2[bayerPos.x][bayerPos.y]/4. - 0.5;\n    \n    vec4 light = texture(iChannel0, uv);\n    \n    //Luminosity\n    light.a += m * NOISE_FACTOR;\n    light.a = quantize(light.a, LUM_COL_COUNT);\n    \n    // Background image\n    vec3 bg = texture(iChannel1, uv).rrr;\n//    bg = floor(bg*(4. - 1.) + 0.5)/(4. - 1.);\n    bg = quantize(bg, 4.);\n    bg *= vec3(0.6, 0.5, 0.4);\n    \n    vec3 col = bg * light.a * light.rgb;\n\n    fragColor = vec4(col, 1.);\n    \n    //fragColor = light;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float lum(float distToLight, float outRad)\n{\n    return clamp((outRad - distToLight) / outRad, 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord/iResolution.yy;\n    \n    //uv = (floor(uv * pixelRes.yy) + .5) / pixelRes.yy;\n    \n    fragColor = vec4(0.);\n\n    vec2 lightPos0 = iMouse.xy/iResolution.yy;\n    float lum0 = lum(distance(uv, lightPos0), 0.35);\n    fragColor.a += lum0;\n    float colMult0 = quantize(lum0, COL_COL_COUNT);\n    fragColor.rgb += vec3(0.8, 0.8, 1.0) * colMult0;\n\n    \n    vec2 lightPos1 = vec2(0.35, 0.45);\n    float lum1 = lum(distance(uv, lightPos1), 0.75);\n    fragColor.a += lum1;\n    float colMult1 = quantize(lum1, COL_COL_COUNT);\n    fragColor.rgb += vec3(1., 0.6, 0.) * colMult1;\n    \n    fragColor = clamp(fragColor, 0., 1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const vec2 PIXEL_RES = vec2(160, 90);\n\nconst float NOISE_FACTOR = 0.25;\nconst float LUM_COL_COUNT = 2.;\nconst float COL_COL_COUNT = 4.;\n\nconst mat2 BAYER2 =\n    mat2(\n        0, 2,\n        3, 1\n        );\n        \nfloat quantize(float x, float colCount)\n{\n    return floor(x*(colCount - 1.) + 0.5)/(colCount - 1.);\n}\n\nvec3 quantize(vec3 x, float colCount)\n{\n    return floor(x*(colCount - 1.) + 0.5)/(colCount - 1.);\n}","name":"Common","description":"","type":"common"}]}