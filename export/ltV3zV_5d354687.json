{"ver":"0.1","info":{"id":"ltV3zV","date":"1475742293","viewed":280,"name":"Galactic spirals","username":"A2K","description":"draft","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["procedural","galaxy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\n\n\nfloat spiral(in vec2 uvIn, float M) \n{\n    vec2 uv = uvIn * 2.0 - 1.0;\n    \n    float radius = length(uv * 2.0);\n    \n\tfloat angle = pow((atan(uv.x, uv.y) + PI) / PI / 2.0, M);\n    \n    float spiral = 1.0 - pow(abs(radius - pow(angle, 0.5)), 0.25);\n    \t\n    float angle2 = pow((atan(uv.x, uv.y) + PI * 3.0) / PI / 2.0, M);\n    \n    float p1 = spiral * angle;\n    float p2 = 1.0 - pow(abs(radius - pow(angle2, 0.5)), 0.25);\n    \n    return abs(p1 * pow(1.0 - angle / PI, 2.0))/radius + abs(p2 * pow(1.0 - angle2 / PI, 2.0))/radius;    \n}\n\nvec2 rotate(vec2 v, float a) \n{\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    fragColor.g = spiral(uv, 2.0);\n\n    fragColor.g = max(fragColor.g, spiral((rotate(uv * 2.0 - 1.0, PI) + 1.0) * 0.5, 2.0));\n\n    fragColor.g = max(fragColor.g, spiral((rotate(uv * 2.0 - 1.0, PI * 1.35) + 1.0) * 0.5, 2.0)*0.65);\n\n    fragColor.g = max(fragColor.g, spiral((rotate(uv * 2.0 - 1.0, PI * -1.45) + 1.0) * 0.5, 2.0)*0.75);\n\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}