{"ver":"0.1","info":{"id":"4d3GDB","date":"1451940323","viewed":603,"name":"Motion highlights on video","username":"Andre","description":"Test to do motion detection on video, because two different inputs on the Buf A and Image tab won't run in sync i used interlacing in Buf A with a line averaged and every second line less averaged video.","likes":3,"published":1,"flags":34,"usePreview":0,"tags":["motion","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float m = mod(fragCoord.y,2.0);\n    uv.y -= m / iResolution.y;\n    fragColor = texture(iChannel0, uv);\n    vec4 tex1 = texture(iChannel1, uv);\n    float d = distance(tex1.rgb,fragColor.rgb);\n    fragColor *= 0.1;\n    d = pow(d,0.7);\n    fragColor.rgb = mix(fragColor.rgb,tex1.rgb,d);\n    //fragColor = tex1 * (0.1 + 0.9 * smoothstep(0.2, 0.35, distance(tex1, tex2)));\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame<10) {\n        fragColor = vec4(0.0);\n        return;\n    }\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 tex1 = texture(iChannel0, uv);\n    vec4 tex2 = texture(iChannel1, uv);\n    \n    float px = 1.0/iChannelResolution[0].x;\n    float py = 1.0/iChannelResolution[0].y;\n        \n    // Buffer blurring\n    //tex1 = vec4(0.0);\n    //for (float x = -px; x<=px; x += px) {\n    //\tfor (float y = -py; y<=py; y += py) {\n    //\t\ttex1 += texture(iChannel0, uv + vec2(px,py));\n\t//    }\n    //}\n    //tex1/=200.0;\n    \n    fragColor = tex1 * .99\n              + tex2 * .01;\n}\n","name":"Buf A","description":"","type":"buffer"}]}