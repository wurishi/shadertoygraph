{"ver":"0.1","info":{"id":"ctGBzG","date":"1702341921","viewed":15,"name":"Pink dream fraction","username":"Buchibuchi","description":"Tutorial + GPT promting","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["densityflowcolours"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.2, sin(t) * 0.5 + 0.5);\n    vec3 b = vec3(0.5, cos(t) * 0.4 + 0.5, 0.8);\n    vec3 c = vec3(1.0, sin(t) * 0.6 + 0.4, cos(t) * 1.0 + 0.5);\n    vec3 d = vec3(sin(t) * 0.333 + 0.333, 0.333, cos(t) * 0.667 + 0.333);\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\n// Función para crear una espiral en un centro dado\nvec3 spiralAtCenter(vec2 uv, vec2 center, float time) {\n    vec3 color = vec3(0.0);\n    vec2 offsetUv = uv - center;\n    float r = length(offsetUv);\n    float angle = atan(offsetUv.y, offsetUv.x);\n    float spiral = cos(angle * 10.0 + time * 20.0 - r * 10.0);\n    color = palette(spiral + time);\n    return color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / iResolution.y;\n    vec3 finalColor = vec3(0.0);\n    float slowTime = iTime * 0.1;\n\n    // Crear múltiples núcleos de espirales\n    int numSpirals = 5;\n    for (int i = 0; i < numSpirals; i++) {\n        float angle = float(i) * 6.28318 / float(numSpirals) + slowTime;\n        vec2 center = vec2(sin(angle), cos(angle)) * 0.25;\n        finalColor += spiralAtCenter(uv, center, slowTime);\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}