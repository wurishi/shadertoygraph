{"ver":"0.1","info":{"id":"DdySRc","date":"1681357063","viewed":148,"name":"julia_sphere","username":"graygoose","description":"uh, yeah uh - I'll fix it. sure i will.","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["fractal","julia","pathtrace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TAU 6.283185307179586\n#define MAX_ITERS 150.\n#define SPHERE_EPS .00001\n\nvec3 sphereMapping(vec3 dir) {\n  float t_off = 0.01*cos(iTime*0.15);\n  vec2 uv = vec2(atan(dir.z, dir.x+t_off), asin(dir.y));\n  uv /= TAU;\n  uv += .5;\n  \n  float t = iTime * 0.5;\n  vec2 c = vec2(-cos(t) * cos(t), sin(t) * cos(t));\n\n  vec2 z = vec2(0.0, 0.0);\n  float iter;\n  for (iter=0.; iter < MAX_ITERS; iter++) {\n    vec2 newZ = dot(z, z) + c;\n    if (dot(newZ, newZ) > 4.0) break;\n    z = newZ;\n  }\n\n  float displacement = iter / float(MAX_ITERS);\n  vec3 normal = normalize(dir);\n  vec3 perturbation = displacement * normal;\n  \n  float maxDisplacement = .01 * length(normal);\n  perturbation *= min(0.0, maxDisplacement / length(perturbation));\n  \n  return texture(iChannel0, uv).rgb + perturbation;\n}\n\nvoid mainImage(out vec4 O, in vec2 U) {\n  vec2 z = ( 2.0 * U - iResolution.xy ) / iResolution.y;\n  \n  float t = iTime * 0.5;\n  vec2 c = vec2(-cos(t) * cos(t), sin(t) * cos(t));\n  \n  vec3 rayDir = normalize(vec3(z, -1.0));\n  vec3 rayPos = vec3(0.0, 0.0, 1.25);\n  \n\n  float dist = 0.0;\n  vec3 color = vec3(0.0);\n  for (int i = 0; i < 100; i++) {\n    vec3 pos = rayPos + dist * rayDir;\n    vec3 normal = normalize(pos);\n    float d = length(pos) - 1.0 + 0.2 * length(sphereMapping(normal));    \n    if (d < SPHERE_EPS) {\n      color = sphereMapping(normal);\n    }\n    dist += d;\n    if (dist > 10.0) break;\n  }\n\n  O = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159265359\n#define MAX_ITERS 150\n\nvoid mainImage(out vec4 O, in vec2 U) {\n  vec2 z = ( 2.*U - iResolution.xy ) / iResolution.y;\n  \n  float t = iTime * .2;\n  \n  vec2 c = vec2(-cos(t)*cos(t), sin(t)*cos(t));\n  \n  O = vec4(0);\n  int i=0;\n  for (; i < MAX_ITERS && dot(z,z) < 4.; i++) \n    z = mat2(z,-z.y,z.x) * z + c;\n  \n  if (i < MAX_ITERS) {\n    float t = float(i)/float(MAX_ITERS);\n    vec3 color = vec3(t-z.x, cos(z.y-c.x)*sin(z.x-c.y), t+z.y);\n    color = 0.5 + 0.5*sin(PI*(color-t));\n    O = vec4(color, 1.0);\n  }\n}\n","name":"Buffer A","description":"","type":"buffer"}]}