{"ver":"0.1","info":{"id":"cslfWl","date":"1689283014","viewed":35,"name":"Probably Too Much","username":"Wheat","description":"Iterated repetition of the spiral","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Repeating Laser Spirals 2.0\" by Wheat. https://shadertoy.com/view/dsfBDB\n// 2023-07-13 20:28:55\n\n// Fork of \"Colorful Glowing Spinning Spiral\" by Wheat. https://shadertoy.com/view/mdXBDB\n// 2023-07-12 00:21:57\n\n// Fork of \"Glowing Spinning Spiral\" by Wheat. https://shadertoy.com/view/mdXfWB\n// 2023-07-11 23:58:55\n\n// Fork of \"Spinning Spiral\" by Wheat. https://shadertoy.com/view/msfBWB\n// 2023-07-11 23:47:00\n\n// Fork of \"Shrinking Circles 2\" by Wheat. https://shadertoy.com/view/msffDS\n// 2023-07-11 23:10:32\n\n// cosine based palette. from Inigo Quilez\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(2.0, 1.0, 0.0);\n    vec3 d = vec3(.5,.2,.25);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // set scale; sizes to y resolution\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    // Copy uv before modification w/ fract()\n    vec2 uv0 = vec2(uv);\n    vec3 finalColor = vec3(0.0);\n    \n    float tightness = 1.6;\n    float speed = .05;\n    float sufficientlyLargeFloat = 100000.;\n    float numPins = 8.0; // keep even\n    float thickness = 75.0 * smoothstep(-0.5,1.0,length(uv));\n    \n    for(float i = 0.0; i < 9.0; i++) {\n        \n        speed *= 1.2;\n    \n        // makes the screen repeat\n        uv = fract(uv * 1.2) - 0.5;\n\n        // color variation by location in individual spiral\n        vec3 col = palette(length(uv0)/2.0 + iTime/5.0\n        + length(uv)/1.5);\n\n        // find points a certain distance from circle w/ .5 radius\n            // float d = lengt h(uv);\n            // d = sin(d * 8.0 + iTime) / 8.0;\n            // d = abs(d);\n\n        // make a spiral (angle from x-axis: atan(y/x))\n        // makes distance from center, angle from x-axis,\n        // and time factors\n        float d = length(uv)\n            + atan(uv.y / uv.x) / tightness\n            + iTime * speed\n            + sufficientlyLargeFloat;\n        // makes it repeat\n        d = sin(d*numPins)/thickness;\n        d = abs(d);\n\n        d = .0006/d;\n\n        finalColor += col * d;\n    }\n\n    // Output to screen\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}