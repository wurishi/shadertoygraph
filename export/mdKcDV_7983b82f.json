{"ver":"0.1","info":{"id":"mdKcDV","date":"1696649558","viewed":50,"name":"for-loop and smoothstep","username":"michael8090","description":"there is an issue related to smoothstep and for-loop on metal angle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["issue"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// the issue is reproducible for angle of metal backend\n// and there're two conditions met at the same time to trigger it:\n//   1. the edge0 and edge1 is the same in smoothstep\n//   2. there is a for-loop \nfloat isInsideCurve(float x, float y) {\n    float y0 = sin(x);\n    float delta = abs(y0-y);\n\n    float threshold = 0.01;\n    // here if edge1 is a little bigger than edge0, i.e. `1.000001 * threshold`, the issue goes away too\n    return (1.0 - smoothstep(threshold, 1.000000 * threshold, delta));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 squareSize = 1.0/iResolution.xy;\n    \n    float x = uv.x * 100.0 + 0.1*iTime;\n    float y = uv.y * 2.0 - 1.0;\n    \n    float strength = 0.0;\n    \n    // the code below triggers the issue\n    for (int i = 0; i < 1; i++) {\n        strength += isInsideCurve(x, y); \n    }\n    \n    // the code below doesn't trigger the issue\n    // strength += isInsideCurve(x, y);\n   \n    \n    vec3 col = vec3(1.0);\n    \n    col *= strength;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}