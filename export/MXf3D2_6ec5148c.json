{"ver":"0.1","info":{"id":"MXf3D2","date":"1708094084","viewed":46,"name":"Bubble Trouble","username":"JoeyBamboozles","description":"A cool 2d shader that brings your water to life!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["joeybamboozles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalization\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time-dependent periodic value\n    float t = 0.5 + 0.5*sin(iTime);\n\n    // Background Color\n    vec3 background = vec3(0.5, 0.7, 0.9);\n\n    // Bubble framework\n    float bubbleRadius = 0.03;\n    float bubbleAmount = 20.0;\n    float popRadius = 0.05; \n\n    for(float i = 0.0; i < bubbleAmount; ++i)\n    {\n        // Random positioning for the bubbles as well as a vertical loop\n        vec2 bubblePosition = vec2(\n            fract(sin(i)*43758.5453),\n            mod(fract(cos(i)*23741.2643) + mod(iTime/4.0, 1.0), 1.0) \n        );\n\n        // Distance to bubble\n        float distanceToBubble = length(uv - bubblePosition);\n\n        // Bubble Creation\n        if(distanceToBubble < bubbleRadius)\n        {\n            float bubbleIntensity = 1.0 - distanceToBubble / bubbleRadius;\n            vec3 bubbleColor = vec3(bubbleIntensity);\n            background += bubbleColor;\n        }\n\n        // Makes bubbles pop when they reache the top of the screen (1.0 on the y-axis)\n        if(bubblePosition.y > 1.0 - bubbleRadius && distanceToBubble < popRadius)\n        {\n            float popIntensity = smoothstep(2.0 - popRadius, 1.0, distanceToBubble / popRadius);\n            vec3 popColor = vec3(popIntensity);\n            background += popColor;\n        }\n    }\n\n    // Final Color\n    fragColor = vec4(background,1.0);\n}","name":"Image","description":"","type":"image"}]}