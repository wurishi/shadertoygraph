{"ver":"0.1","info":{"id":"mt3Xz7","date":"1685390153","viewed":64,"name":"circles_1","username":"felipelm","description":"abstract","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat deg2rad(float degrees)\n{\n    return (PI/180.) * degrees;\n}\n\nvec2 offsetPos(float offsetDeg)\n{\n   float disp = iTime * 2.;\n   //float disp = 0.;\n   float dist = (sin(iTime*0.5)*0.5 + 0.5)*0.2;\n   //float dist = 0.02;\n   return vec2(cos(deg2rad(offsetDeg + disp)),sin(deg2rad(offsetDeg+ disp)))*dist;\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy) - vec2(0.5);\n    float r = iResolution.x / iResolution.y;\n    uv.x *= r;\n\n    vec3 col = vec3(1.);\n    //float scale = (sin(3.1415)/2. + 0.5)*50.;\n    //float scale = 0.05*(sin(iTime*5.)/2. +0.5)+0.5;\n    //float scale = 0.05;\n    float scale = 1.5;\n    float disp = iTime * 25.;\n    vec2 posA = offsetPos(0.);\n    vec2 posB = offsetPos(120.);\n    vec2 posC = offsetPos(240.);\n    for(int i=0;i<5;++i)\n    {\n        float a = float(i);\n        float red =   sin(1./length(uv+offsetPos(0.   +a*60.*iTime))*scale + iTime*1.0);\n        float green = sin(1./length(uv+offsetPos(120. +a*60.*iTime))*scale + iTime*1.0);\n        float blue =  sin(1./length(uv+offsetPos(240. +a*60.*iTime))*scale + iTime*1.0);\n        if(mod(a,2.) == 0.)\n        {\n            col*= vec3(red,green,blue);\n        }\n        else\n        {\n            col/= vec3(red,green,blue);\n        }\n        \n    }\n    // Output to screen\n    //fragColor = vec4(sin(fract(col*5.)),1.0);\n    //fragColor = vec4(fract(length(uv)*10.0)*col,1.0);\n    //fragColor = vec4(fract(length(uv*(5. + sin(iTime*5.))))*col,1.0);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}