{"ver":"0.1","info":{"id":"csXfR7","date":"1711244213","viewed":25,"name":"1:shader","username":"bigphoob","description":"Figuring stuff out.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Zooms into the bottom left corner of the screen and creates an orbit effect.\n    uv = fract(sin(iTime + 0.5) * uv);\n    \n    // Centers the origin in the center of the screen.\n    uv -= 0.5;\n    \n    // Fixes aspect ratio.\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Inner circle pulse. The inside of the circle is black and the outside is white.\n    float pulse = smoothstep(abs(0.3 * sin(iTime)), 0.3, length(uv));\n    \n    // Outer circle pulse. The inside of the circle is white and the outside is black.\n    float outerPulse = smoothstep(abs(0.5 * sin(iTime)), 0.0, length(uv));\n\n    // Together this creates an eclipse like illusion.\n    vec3 col = vec3(1.0) * pulse * outerPulse;\n\n    // These if statements cause the shader to cycle between four different colors.\n    if (sin(iTime) > 0.0) col.x *= 0.2; \n    if (sin(iTime) < 0.0) col.y *= 0.4; \n    if (sin(0.5 * iTime) < 0.0) col.z *= 0.2;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}