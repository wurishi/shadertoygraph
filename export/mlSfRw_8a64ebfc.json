{"ver":"0.1","info":{"id":"mlSfRw","date":"1693864929","viewed":36,"name":"neon swoosh","username":"troye","description":"A fun little attack swoosh","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["neon","attack","swoosh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pallete(float t){\n    vec3 a=vec3(0.660,0.560,0.680);\n    vec3 b=vec3(0.718,0.438,0.720);\n    vec3 c=vec3(0.520,0.800,0.520);\n    vec3 d=vec3(-0.430,-0.397,-0.083);\n    return a+b*cos(6.28318*(c*t+d));\n}\n\n//Modified from https://iquilezles.org/articles/distfunctions2d/\nfloat sdPentagon( in vec2 p, in float r )\n{\n    vec3 k = vec3(0.809016994,0.597785252,0.826542528);\n    p.x = abs(p.x);\n    p -= .85*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    p -= vec2(clamp(p.x,-r*k.z,r*k.z),r);    \n    return length(p)*sign(p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    uv.y+=1.5;\n    uv.y-=mod(iTime,4.0);\n    \n    float sd=sdPentagon(uv,0.5);\n    sd=abs(sd);\n    \n    float result=sd;\n    \n    float resultCore=0.05/(smoothstep(0.0,1.0,result));\n    float modulate=(abs(sin(iTime*4.0)/20.0))+0.01;\n    float resultTrail=clamp(0.5,1.0,modulate/(smoothstep(0.0,1.0,result)));\n\n\n    vec3 colMain=pallete(0.0)*resultCore;\n    vec3 colTrail=pallete(10.0)*resultTrail;\n    // Time varying pixel color\n    //vec3 col = colMain+colTrail;\n    vec3 col = colMain+colTrail;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}