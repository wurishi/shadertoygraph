{"ver":"0.1","info":{"id":"McVSR1","date":"1714851331","viewed":27,"name":"BoxRayMarchDemo","username":"Teomik","description":":)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["boxusingraymayrch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.  \n#define SURF_DIST .01\n//dot because of float and integer\n float sdBox (vec3 p, vec3 s){   //box\n return length(max(abs(p)-s,0.));\n }\n \nfloat GetDist(vec3 p) {\n float planeDist = p.y;\n float bd = sdBox(p-vec3(-2.,.75,5.),vec3(.5)); //box distance\n \n float d = min(bd,planeDist); \n d = min(d,bd);\n return d;\n }\nfloat RayMarch(vec3 ro,vec3 rd){ // raymarching\n  float dO =0.;\n  for(int i=0;i<MAX_STEPS;i++){\n  vec3 p = ro +rd*dO;\n  float ds = GetDist(p);\n  dO+=ds;\n  if(dO>MAX_DIST || ds<SURF_DIST) break;\n  }\n  return dO;\n}\nvec3 GetNormal(vec3 p){  //light\n float d = GetDist(p);\n vec2 e = vec2 (.01,0.);\n vec3 n = d - vec3(\n GetDist(p-e.xyy),\n GetDist(p-e.yxy),\n GetDist (p-e.yyx));\n return normalize (n);\n}\n float GetLight (vec3 p){  //light\n vec3 lightPos = vec3 (0,5,6);\n lightPos.xz+= vec2(sin(iTime),cos(iTime))*2.;\n vec3 l =normalize(lightPos-p);\n vec3 n = GetNormal(p);\n  float dif = clamp(dot(n,l), 0.,1.);  // n-normal, l-light //clamp - hold the values\n  float d = RayMarch(p+n*SURF_DIST*2.,l);   //shadow\n  if(d<length(lightPos-p)) dif*=.1;   //shadow\n return dif;\n \n }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y; //middle\n\n    // Time varying pixel color\n    vec3 col =vec3(0);\n    vec3 ro = vec3 (0,1,0);\n    vec3 rd =normalize(vec3(uv.x,uv.y,1)); //check by deleting the normalize function (NORMALIZE MEANS THAT A LENGTH IS SETTING TO 1); \n    float d = RayMarch(ro,rd);\n    vec3 p =ro + rd*d;\n    float dif = GetLight(p);\n    d/=9.;\n    col = vec3(dif);\n    \n   \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}