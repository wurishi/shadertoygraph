{"ver":"0.1","info":{"id":"flV3Rc","date":"1638100941","viewed":93,"name":"Simple Psychedelic Visualizer","username":"gimulnautti","description":"Some mapped cosine lines and a divide with audio sync","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simple","psychedelic","visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","previewfilepath":"/media/ap/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define freq(f) texture(iChannel0, vec2(f, 0.25)).x * 0.8\n#define wave(f) texture(iChannel0, vec2(f, 0.75)).x\n\n// Fast enough to go fullscreen on almost anything!\n// WIP just make it better :D \n// @Gimulnautti\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2( 0.5, 0.5 );\n    \n    vec2 uv1 = uv / dot( uv, uv * (freq( 100 )) );\n    float line1 = cos( uv1.x + freq(50) * 10.0 + iTime );\n\n    vec2 uv2 = uv / dot( uv, uv * (freq( 1000 ) + 0.1 + sin(iTime/2.0)) );\n    float line2 = cos( uv2.y + freq(2000) * 2.0 - iTime * 20.0 );\n    \n    vec2 uv3 = uv / dot( uv, uv * (freq( 4000 )) );\n    float line3 = cos( uv3.y + uv3.x + freq(10000) * 2.0 - iTime * 10.0 );\n\n    // Time varying pixel color\n    vec3 col1 = 0.5 + 0.5*cos(iTime+freq(50)*4.0+uv.xyx+vec3(0,2,4));\n    vec3 col2 = vec3( line2, line3, line1 );\n\n    // Output to screen\n    fragColor = vec4(col1 + col2,1.0);\n}","name":"Image","description":"","type":"image"}]}