{"ver":"0.1","info":{"id":"ltVSzd","date":"1485520318","viewed":685,"name":"Slices transition effect","username":"andras","description":"Smooth transition effect between 2 separate textures. ","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["simple","effect","transition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float seed = 265.5;\nconst float rotAngle = 0.2;\nconst float sliceCount = 5.0;\n\nfloat random (in vec2 st) { \n    return fract(sin(dot(st.xy,\n                         vec2(12.9798,78.323)))* \n        43758.5453234);\n}\n\nmat2 rot2m(float a){\n\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\t\n\treturn mat2(c, -s, s, c);\n}\n\nfloat slices(in vec2 p, float count){\n\tp *= rot2m(rotAngle);\n\t\n\n\tfloat x = p.x * count;\n\t\n\tfloat v = random( vec2(floor(x)) + seed * count * 0.5 );\n\t\n\treturn v;\n}\n\nfloat randomSlices(in vec2 p){\n\t\n\tfloat s1 = 1.0, s2 = 0.0;\n\t\n\tfor(float i = 1.0; i < sliceCount; ++i){\n\t\t\t\t\n\t\tfloat t = slices(p, 2.0 * i);\n\t\t\n\t\ts1 = min(s1, t);\n\t\ts2 = max(s2, t);\n\t}\n\t\t\n\treturn (s1 + s2) * 0.5;\n   \n}\n\nvec4 pic(float v, vec2 uv, vec2 sp){\n    \n    float m1 = (v + 1.0);\n    m1 = 1.0 / pow(m1, 0.25);\n    \n    float m2 = (2.0 - v);\n    m2 = 1.0 / pow(m2, 0.25);\n    \n    vec2 uv1 = (uv - sp) * m1 + sp;\n    vec2 uv2 = (uv - sp) * m2 + sp;\n    \n    vec4 colA = texture( iChannel0, fract(uv1) );\n    vec4 colB = texture( iChannel1, fract(uv2) );\n    \n    return mix(colA, colB, v);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float v = randomSlices(uv);\n    \n    float b = smoothstep(0.0, v, sin(iTime * 0.7));\n    \n    vec2 sp = vec2(v, random(vec2(v) ) ) * 0.5;\n    \n\tfragColor = pic(b, uv, sp );\n    //fragColor = vec4(b);\n}","name":"Image","description":"","type":"image"}]}