{"ver":"0.1","info":{"id":"fstyzH","date":"1653032177","viewed":147,"name":"Grey-yellow Recursion","username":"sinvec","description":"Some simple geometric pattern :)","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n#define s(v,l) smoothstep(l/R.y,0.,v)\n#define sdw(p,v) smoothstep(-p,p,v)\n\n// sdf for line segment\nfloat lnsg(vec2 p, vec2 a, vec2 b)\n{\n    vec2 ba = b-a, pa = p-a;\n    float h = clamp(dot(pa,ba)/dot(ba,ba), 0., 1.);\n    return length(pa-h*ba);\n}\n\nvoid mainImage( out vec4 O, in vec2 E )\n{\n    vec2 u = (E - R.xy * .5) / R.y;\n    float a = .5, ha = a / 2.,  // the outer side of the frame and its half\n          b = a / (2. * sqrt(2.) + 4.), // frame thickness\n          outl = 999., area; // distance to the edge of the frame and to the frame itself\n    vec3 col = vec3(.9), col1 = col; // background color\n    for (float j = 0.; j < 4.; j++) { // 4 times\n        for (float i = 0.; i < 8.; i++) { // 8 pieces of one frame\n            area = 999.; // init distance for frame inner area\n            // 5 vertices of one frame piece\n            vec2 p1 = vec2(-ha,ha-2.*b), \n                 p2 = vec2(-ha,ha),\n                 p3 = vec2(0.,ha),\n                 p4 = vec2(b,ha-b),\n                 p5 = vec2(-ha+b,ha-b);\n            // distance to frame edges\n            outl = min(outl,min(lnsg(u,p1,p2),lnsg(u,p2,p3)));\n            area = min(outl,lnsg(u,p3,p4));\n            outl = min(outl,min(lnsg(u,p4,p5),lnsg(u,p5,p1)));\n            area = min(outl, area);\n            // extra vars for distance calculation\n            float tl = -u.y+ha,\n                  ll = -u.x-tl-b*sqrt(2.),\n                  rl = tl-u.x,\n                  bl = -tl+b,\n                  vl = u.x+ha;\n            // distance to frame inner area\n            area *= sign(3.-sign(ll)-sign(tl)-sign(vl))\n                  * sign(4.-sign(-ll)-sign(tl)-sign(bl)-sign(rl));\n            // coloring\n            col = mix(col, mix(vec3(.75),vec3(.9, .9, .6),mod(i+j, 2.)) * .92  \n                   * mix(1.,sdw(.04,rl),sdw(.02,vl-b))     // shadow 1\n                   * mix(1.,sdw(.04,ll),sdw(.02,-bl)*sdw(.02,-vl+b)), // shadow 2\n                  s(area, .01));\n            // rotating each piece 45 degrees\n            u *= mat2(cos(.785),sin(.785),-sin(.785),cos(.785));\n        }\n        u /= .5;\n    }\n    col = mix(col, col1*.8, s(outl-.00001, 1.5));\n    O = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}