{"ver":"0.1","info":{"id":"ltjSWz","date":"1443012288","viewed":124,"name":"Phong TP1","username":"Lihouf","description":"Phong","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["phong"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = gl_FragCoord.xy / iResolution.xy;\n    uv.x=uv.x*(16.0/9.0);\n    /////////////////////////////////////\n    //DECLARATION\n    /////////////////////////////////////\n    //position de la pamÃ©ra\n\tvec3 camera = vec3(0.0, 0.0, -2.0);\n    \n\tvec3 direction = normalize(vec3(uv.x*1.5,uv.y*1.5, 1.0));\n    \n    //Point actuel \n    vec3 point=camera;\n    \n    //Position de la lumiÃ¨re\n    vec3 lumiere=vec3(2.0,2.0,-2.0);\n    \n    //IntensitÃ© et couleur de la lumiÃ¨re ambiante Compris entre 0 et 1\n    vec3 ambiant=vec3(0.01,0.01,0.2);\n    \n    //Position de la sphÃ¨re\n    vec3 centreSphere=vec3(1.5,1.5,1.0);\n    \n    //Couleur de fond\n    fragColor = vec4(1.0,1.0,1.0,1.0);\n    \n    //Sol\n    vec3 sol= vec3(0.0,-2.0,0.0);\n    \n    //MUR\n    vec3 mur = vec3(0.0,0.0,2.0);\n    //Raymarching\n    for(int i=1;i<20000;i++)\n    {\n        //DÃ©calage raymarching\n        point=point+direction*0.02;\n        \n        \n        //Si l'on se situe\n        if(distance(point,centreSphere)<=0.5){\n            //Normal de la surface N\n          \tvec3 normalSurface = normalize(point-vec3(1.0,1.0,1.0));\n            //Normal de la lumiÃ¨re L\n            vec3 normLumiere = normalize(lumiere-point);\n            //Normal de la camÃ©ra V\n            vec3 normVue = normalize(camera-point);\n            \n            //RÃ©flection R\n         \tvec3 R = 2.0*max(dot(normalSurface,normLumiere),0.0)*normalSurface-normLumiere;\n\t\t\t\n            //IntensitÃ© de la lumiÃ¨re diffuse\n            float diffuse=max(dot(normalSurface,normLumiere),0.0);\n            \n            //IntensitÃ© de la lumiÃ¨re spÃ©culaire\n            float speculaire=pow(max(dot(R,normVue),0.0),64.0);\n\t\t\t\n            \n            float res=diffuse+speculaire;\n            \n            //Couleur de la shpÃ¨re\n            \n            fragColor = vec4(ambiant.x+res,ambiant.y+res,ambiant.z+res,1.0);\n            break;\n        }\n        //if(distance(point,vec3(point.x,point.y,mur.z))<=0.2 )\n        else if(distance(point.z,mur.z)<=0.02)\n        {\n            fragColor = vec4(0.0,0.0,0.5,1.0);\n            break;\n        }\n        else if(point.y<0.005)\n        {\n            fragColor = vec4(0.5,0.0,0.0,1.0);\n            break;\n        }\n       \n    }\n}","name":"Image","description":"","type":"image"}]}