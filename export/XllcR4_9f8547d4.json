{"ver":"0.1","info":{"id":"XllcR4","date":"1503718193","viewed":6892,"name":"Neon Rings","username":"cpdt","description":"Another visualizer based on parts of https://www.shadertoy.com/view/Xtfcz4. The song is in Buffer A's iChannel0 - try different ones and see how they do!","likes":44,"published":1,"flags":96,"usePreview":0,"tags":["procedural","2d","rings","visualizer","smoke","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 inColor = texture(iChannel0, fragCoord / iResolution.xy).rgb;\n    \n    inColor = pow(inColor, vec3(1.1, 1.2, 1.0));\n    \n    // gamma correct\n    inColor = pow(inColor, vec3(1. / 2.2));\n    \n    fragColor = vec4(inColor, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfSDX","filepath":"https://soundcloud.com/fm84/jupiter-album","previewfilepath":"https://soundcloud.com/fm84/jupiter-album","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159265359\n#define saturate(x) clamp(x, 0., 1.)\n\n// change this to 0.05 for more rings, 0.2 for less rings\n// more rings = more \"responsiveness\", but is slower\n#define ITERATION_SIZE 0.1\n\nvec3 genColor(vec2 centeredP, float multiplier) {\n    vec3 circleColor = vec3(0.);\n    \n    vec3 circleMin1 = vec3(0.1, 0.1, 1.);\n    vec3 circleMin2 = vec3(1., 0.1, 1.);\n    vec3 circleMax1 = vec3(1., 1., 0.1);\n    vec3 circleMax2 = vec3(1., 0.1, 0.1);\n    \n    for (float i = 0.; i <= 1.; i += ITERATION_SIZE) {\n        float circleMaxSize = (200. + 1000. * i) * multiplier;\n        float circleAmt = pow(texture(iChannel0, vec2(i, 0)).r, 2.);\n        float circlePos = circleAmt * circleMaxSize;\n        float circleDist = saturate(1. - abs(length(centeredP) - circlePos) / (800. * multiplier));\n        \n        vec3 circleMinColor = mix(circleMin1, circleMin2, i);\n        vec3 circleMaxColor = mix(circleMax1, circleMax2, i);\n        circleColor = mix(circleColor, mix(circleMinColor, circleMaxColor, pow(circleAmt, 2.)) * pow(circleDist, 99.) * (1. - i * 0.9) * circlePos, circleAmt * 0.9);\n    }\n    \n    vec3 finalColor = circleColor / 20.;\n    return finalColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 centeredP = fragCoord - iResolution.xy / 2.;\n    vec2 originalCP = centeredP;\n    float multiplier = iResolution.x / 1200.;\n    \n    float currentOffset = 500. * pow(texture(iChannel0, vec2(0, 0)).r, 2.);\n    \n    float amountMult = 0.2 + currentOffset / 1000.;\n    vec3 finalColor = genColor(centeredP + vec2(currentOffset * multiplier, 0), multiplier) * amountMult;\n    finalColor += genColor(centeredP, multiplier) * amountMult;\n    finalColor += genColor(centeredP - vec2(currentOffset * multiplier, 0), multiplier) * amountMult;\n    \n    vec2 samplePos = iResolution.xy / 2. + originalCP * 0.999;\n    \n    vec3 mixedColor = finalColor * 0.3 + texture(iChannel1, samplePos / iResolution.xy).rgb * 0.97;\n    \n    fragColor = vec4(mixedColor, 1);\n}","name":"Buf A","description":"","type":"buffer"}]}