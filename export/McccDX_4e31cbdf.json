{"ver":"0.1","info":{"id":"McccDX","date":"1731256330","viewed":82,"name":"Tocando Fondo","username":"Sergeindamix","description":"Arrastrado a la miseria","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["tunnel"],"hasliked":0,"parentid":"lssGDn","parentname":"Pseudo 3D Tunnel"},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// by nikos papadopoulos, 4rknova / 2013\n// WTFPL\n\n// Notes\n// p: Screen coordinates in [-a,a]x[-1,1] space (aspect corrected).\n// t: The texture uv coordinates.\n//\t  u: The angle between the positive x axis and p.\n//\t  v: The inverse distance of p from the axis origin.\n// s: Scrolling offset to create the illusion of movement.\n// z: Texture uv scale factor.\n// m: Brightness scale factor.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Coordenadas normalizadas de la pantalla\n    vec2 p = (2.0 * fragCoord.xy / iResolution.xy - 1.0) * vec2(iResolution.x / iResolution.y, 1.0);\n\n    // Coordenadas polares: ángulo y distancia\n    vec2 t = vec2(atan(p.x, p.y) / 3.1416, 1.0 / length(p));\n\n    // Movimiento de zancada hacia adelante con pausa\n    float strideEffect = max(0.0, sin(iTime * 1.5)) * 0.1; // Movimiento hacia adelante sin retroceso\n    float accumulatedDisplacement = iTime * 0.2 + strideEffect; // Desplazamiento acumulativo solo hacia adelante\n\n    // Vector de desplazamiento solo en la dirección y\n    vec2 s = vec2(0.0, accumulatedDisplacement);\n\n    // Escala para profundidad y factor de oscurecimiento según distancia\n    vec2 z = vec2(2.0, 1.0);\n    float m = t.y + 0.3;\n\n\n\n\n\tfragColor = vec4(texture(iChannel0, t * z + s).xyz / m, 1);\n}","name":"Image","description":"","type":"image"}]}