{"ver":"0.1","info":{"id":"tlBSzV","date":"1566502228","viewed":652,"name":"Solar System z09xx","username":"anclin","description":"TODO:\n- add color\n- add texture\n- add shading to planets\n- tweak stars","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["solarsystem"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define E 2.7182818284\n#define S01(t) sin(t) * .5 + .5\n#define C01(t) cos(t) * .5 + .5\n#define S(a,b,t)  mix(a, b, S01(t))\n#define C(a,b,t)  mix(a, b, C01(t))\n#define BPM 131.\n#define BPS BPM/60.\n\nfloat N11(float n)\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat N21(vec2 p){\n    p = fract(p*vec2(23.45, 78.92));\n    p += dot(p, p+1.4125);\n    return fract(p.x*p.y);\n}\n\nvec2 N22(vec2 p){\n    float n = N21(p);\n    return vec2(n, N21(p+n));\n}\n\nfloat lineDF(vec2 a, vec2 b, vec2 p) {\n    vec2 ap = p-a;\n    vec2 ab = b-a;\n    float t = clamp(dot(ap,ab)/dot(ab,ab),0.,1.);\n    vec2 c = a+t*ab;\n    return length(p-c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float t = iTime*.02;\n    float t1 = t*PI2;\n    float t2 = t*5.;\n\tfloat t3 = t*15.;\n    \n\tfloat scale = mix(5.,2.,cos(t*5.));\n    float aa = scale / iResolution.y;\n    \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv *= scale;\n    \n    vec2 uvOffs = vec2(cos(t3),sin(t3)*2.)*.2;\n    uv += uvOffs;\n    \n    float tilt = .5;//mix(.4, .7, sin(t2)*.5+.5);\n    \n    float l = length(uv*vec2(1.,(1./tilt)));\n    l = l;\n    float id = floor(l+.5);\n    float n = N21(vec2(id));\n\tfloat a = t1*n / id + n*PI2;\n\t\n    \n    // sun\n    vec2 sunPos = uv-vec2(0);\n    float sun = length(sunPos)-.5;\n    float sr = .1;\n\tsun = smoothstep(sr,sr-aa,sun);\n    float sunMask = step(1.5,l);\n    \n    // planets\n\tfloat size = mix(.05,.1,n);\n    vec2 p = vec2(cos(a*PI2),sin(a*PI2)*tilt) * id;\n    float planets = length(p-uv)-size;\n\tplanets = smoothstep(0.,0.-aa,planets);\n    \n    \n    // orbits\n\tfloat orbit = sin(l*PI2+PI/2.)*.5+.5;\n    float al = fract(atan(uv.x,uv.y*(1./tilt))/PI2+.75+a);\n    orbit = smoothstep(1.-aa,1., orbit);\n    orbit *= mix(.03,.3,smoothstep(.3,.0,al));\n    \n    // stars\n    float scale2 = iResolution.y/20./scale;\n    vec2 gv = fract(uv*scale2)-.5;\n    vec2 id2 = floor(uv*scale2);\n    vec2 n2 = N22(id2);\n    vec2 sp = sin(n2*PI2)*.7;\n    float stars = length(gv-sp);\n    float ss = .5;\n    stars = clamp(1./stars*.005, 0., 1.);\n    stars *= mix(.8,1.,sin(n2.x*PI2+t*5000.*pow(n2.x,10.))*.5+.5);\n    \n    \n    // comp\n    float m = sun + (planets + orbit) * sunMask + stars;\n    vec3 col = vec3(m);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}