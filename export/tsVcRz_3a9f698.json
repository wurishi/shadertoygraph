{"ver":"0.1","info":{"id":"tsVcRz","date":"1602233192","viewed":286,"name":"Levels fade out","username":"Extinction_HD","description":"Implementation of fade out between multiple levels","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fade"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 heights = vec3(min(iMouse.y / iResolution.y, 0.6), 0.6, 0.8);\n    \n    const vec3 strengths = vec3(0.66, 0.3, 0.0);\n    \n    float localHeight = uv.y;\n    \n    int currentLevel = int(\n        step(heights[0], localHeight) + \n        step(heights[1], localHeight) + \n        step(heights[2], localHeight));\n    \n    float currentHeight = heights[currentLevel];\n    \n    const float fadeOut = 0.4;\n    float boundaryFactor = smoothstep(currentHeight - fadeOut, currentHeight, localHeight);\n    \n    int nextLevel = int(\n        step(heights[0] - fadeOut, localHeight) + \n        step(heights[1] - fadeOut, localHeight) + \n        step(heights[2] - fadeOut, localHeight));\n    \n    float currentStrength = currentLevel > 0 ? strengths[currentLevel - 1] : 1.0;\n    float nextStrength = nextLevel > 0 ? strengths[nextLevel - 1] : 1.0;\n    \n    float transientStrength = nextStrength;\n    for (int midLevel = nextLevel - 1; midLevel > currentLevel; --midLevel)\n    {\n        float midHeight = heights[midLevel];\n        float transientFactor = smoothstep(midHeight - fadeOut, midHeight, localHeight);\n        float midStrength = strengths[midLevel - 1];\n        transientStrength = mix(midStrength, transientStrength, transientFactor);\n    }\n    \n    float resultStrength = mix(currentStrength, transientStrength, boundaryFactor);\n    \n    fragColor = vec4(vec3(resultStrength), 1.0);\n}","name":"Image","description":"","type":"image"}]}