{"ver":"0.1","info":{"id":"MXBXRK","date":"1710786494","viewed":132,"name":"Fork Strobe lig rehmankk36 449","username":"rehmankk360","description":"Click and drag to move the light\ninspired by this guy: \nhttps://www.shadertoy.com/view/fsjGDh","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["mouse","light","strobe","trail"],"hasliked":0,"parentid":"MXjXWD","parentname":"Strobe light trail"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Calculate color variations over time using sine function\n    float t = iTime * 1.;\n    vec3 colorVariation = vec3(sin(t), cos(t + 1.), cos(t + 2.));\n    \n    // Sample texture\n    vec3 texColor = texture(iChannel0, fragCoord.xy/iResolution.xy).xyz;\n    \n    // Apply color variations to the sampled texture color\n    vec3 finalColor = texColor * colorVariation;\n    \n     \n     vec2 st = fragCoord.xy/iResolution.xy*4.;\n     \n    vec3 color = vec3(colorVariation);\n\n    vec2 q = vec2(0.);\n    q.x = fbm( st + 0.00*iTime);\n    q.y = fbm( st + vec2(1.0));\n\n    vec2 r = vec2(0.);\n    r.x = fbm( st + 1.0*q + vec2(1.7,9.2)+ 0.15*iTime * 2. );\n    r.y = fbm( st + 1.0*q + vec2(8.3,2.8)+ 0.126*iTime * 3.);\n\n    float f = fbm(st+r);\n\n    color = mix(vec3(0.101961,0.619608,0.666667),\n                vec3(0.666667,0.666667,0.498039),\n                \n                clamp((f*f)*4.0,0.0,1.0));\n\n    color = mix(color,\n                vec3(0,0,0.164706),\n                clamp(length(q),0.0,1.0));\n\n    color = mix(color,\n                vec3(0.666667,1,1),\n                clamp(length(r.x),0.0,1.0));\n                \n     color = mix(color, texColor,  vec3(sin(t), cos(t + 1.), cos(t + 2.)));\n     \n \n     \n    \n    fragColor = vec4((f*f*f+.6*f*f+.5*f)*color , 4.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 mouse = iMouse.xy;\n    // if mouse not detected do something\n    if(mouse.x <= 0.) mouse = vec2( iResolution.x * (sin(iTime)+1.)/2., iResolution.y/2.);\n    \n    vec2 tuv = fragCoord.xy/iResolution.xy;\n    \n    vec3 c = vec3(.3/length((fragCoord.xy - mouse.xy) / iResolution.y));\n    vec3 fb = texture(iChannel0, tuv).xyz;\n    \n    c = mix(c, fb, 0.9);\n    \n    fragColor = vec4(c, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}