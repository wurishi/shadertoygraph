{"ver":"0.1","info":{"id":"cd2BRG","date":"1689841506","viewed":164,"name":"Liquid Colors","username":"Quentin765","description":"Offset by color + Motion Blur + noise + contrast + saturation)","likes":0,"published":3,"flags":34,"usePreview":0,"tags":["psychedelic","webcam","configurable"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Instructions & Code in Buffer A\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0,fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*\nINSTRUCTIONS:\n\niChannel0 is the image/video input - you can click it to change it.\nI strong recomend webcam, but you can also try out any of the textures or videos.\n\nThere are a number of settings - any float that is set to a single value\nThe range of acceptable values in the comment\nTo apply the configuratiuon just press the play arrow in the bottom left of the edit area\n\nYou can make the configurations change with time by using the varrible iTime\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 lastFrame = texture(iChannel2,uv);\n    \n    float rootThree = pow(3., 0.5);\n    \n    float offsetAmount = 0.15;//+sin(iTime*10.)*0.2;  // any number, 0 is no effect & negative is backwards\n    \n    //triangle math to convert rgb into xy directions\n    vec2 offset = vec2(\n        rootThree*float(lastFrame.x-lastFrame.z),\n        lastFrame.y*2.-lastFrame.x-lastFrame.z\n        ) / 6.;\n\n    vec2 newUv = uv + offsetAmount*offset;\n    \n    vec4 frameInputOffseted = texture(iChannel0, newUv);\n    vec4 lastFrameOffseted = texture(iChannel2, newUv);\n    float noiseInput = iTime+uv.x*3.1536+uv.y*129.735902957;\n    vec4 noise = texture(iChannel1,vec2(noiseInput,noiseInput*256.));\n    \n    float noiseContrast = 3.; //>=1\n    \n    noise = vec4(pow(noise.x,noiseContrast),pow(noise.y,noiseContrast),pow(noise.z,noiseContrast),0.);\n    \n    float saturateAmount = 0.04; //0<x<=0.5\n    float constrastAmount = 0.04; //0<x<=0.5\n    float primary = 2. + (1. + constrastAmount*2.)/saturateAmount;\n    float bias = constrastAmount/saturateAmount;\n    \n    vec4 lastFrameOffsetedConstrast = vec4(\n         lastFrameOffseted.x*primary - lastFrameOffseted.y - lastFrameOffseted.z - bias,\n        -lastFrameOffseted.x + lastFrameOffseted.y*primary - lastFrameOffseted.z - bias,\n        -lastFrameOffseted.x - lastFrameOffseted.y + lastFrameOffseted.z*primary - bias,\n        0.\n    )*saturateAmount;\n    \n    float motionBlurAmount = 0.85; //0<=x<=1\n    float noiseAmount = 0.05; //0<=x<=0.5\n    float addin = 0.0; // only cause my math vvv is not perfect\n    addin += 2.*noiseAmount*(.5-1./(1.+noiseContrast));\n    \n    // Output to screen\n    fragColor = frameInputOffseted*(1.-motionBlurAmount-noiseAmount) + lastFrameOffsetedConstrast*(motionBlurAmount-noiseAmount) + noise*noiseAmount*2. + addin;\n}","name":"Buffer A","description":"","type":"buffer"}]}