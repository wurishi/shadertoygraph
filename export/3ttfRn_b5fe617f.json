{"ver":"0.1","info":{"id":"3ttfRn","date":"1612103321","viewed":68,"name":"boolean,polarmod","username":"kithy","description":"sphere,box,boolean,intersect,polarmod","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sphere","box","intersect","boolean","polarmod"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 lightDir=vec3(-0.57,0.57,0.57);\n\n\nfloat distFuncCube(vec3 p){\n\tvec3 q=abs(p);\n\treturn length(max(q-vec3(1.0,0.1,0.5),0.0));\n}\n\nfloat distFuncSphere(vec3 p){\n\tfloat s=0.5;\n\treturn length(p)-s;\n}\n\n\nvec2 pmod(vec2 p,float n){\n\tfloat np=3.141592*2.0/n;\n\tfloat r=atan(p.x,p.y)-0.5*np;\n\tr=mod(r,np)-0.5*np;\n\treturn length(p)*vec2(cos(r),sin(r));\n}\n\n\nfloat distFunc(vec3 p){\n\tp.xy=pmod(p.xy,6.0);\n\tp=mod(p,0.8)-0.4;\n\tfloat d3=distFuncCube(p);\n\tfloat d4=distFuncSphere(p);\n\n\t//return(d3);\n\t//return(d4);\n\n\t//return min(d3,d4);//OR\n\n\t//return max(d3,d4);//AND\n\n\treturn max(d3,-d4);\n\t\n\t//return max(-d3,d4);\n\n}\n\n\nvec3 genNormal(vec3 p){\n\tfloat d=0.0001;\n\treturn normalize(vec3(\n\t\tdistFunc(p+vec3(d,0.0,0.0))-distFunc(p+vec3(-d,0.0,0.0)),\n\t\tdistFunc(p+vec3(0.0,d,0.0))-distFunc(p+vec3(0.0,-d,0.0)),\n\t\tdistFunc(p+vec3(0.0,0.0,d))-distFunc(p+vec3(0.0,0.0,-d))\n\t\t));\n}\n\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 p=(2.0*fragCoord.xy-iResolution.xy)/min(iResolution.x,iResolution.y);\n\n\n\tfloat radius=0.0;\n\tfloat phi=iTime*0.2;\n\t\n\n\tvec3 cPos=vec3(0.0,0.0,3.0-iTime*0.5);\n\tvec3 cDir=vec3(0.0,0.0,-1.0);\n\tvec3 cUp=vec3(0.0,1.0,0.0);\n\tvec3 cSide=cross(cDir,cUp);\n\tfloat targetDepth=1.0;\n\n\tvec3 ray=normalize(cSide*p.x+cUp*p.y+cDir*targetDepth);\n\n\tfloat tmp,dist;\n\ttmp=0.0;\n\tvec3 dPos=cPos;\n\n\tfloat emission=0.0;\n\n\tfor(int i=0;i<48;i++){\n\t\tdist=distFunc(dPos);\n\t\ttmp+=dist;\n\t\tdPos=cPos+tmp*ray;\n\t\temission+=exp(abs(dist)*-0.2);\n\t}\n\n\tvec3 color;\n\n\tif(abs(dist)<0.001){\n\t\tvec3 normal=genNormal(dPos);\n\t\tfloat diff=clamp(dot(lightDir,normal),0.1,1.0);\n\t\tcolor=0.02*emission*vec3(1.0,sin(iTime),1.0)*diff;\n\t}else{\n\t\tcolor=vec3(0.0);\n\t}\n\tfragColor=vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}