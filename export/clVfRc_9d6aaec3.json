{"ver":"0.1","info":{"id":"clVfRc","date":"1702336564","viewed":31,"name":"Pixelated blur ","username":"Rahiche","description":"A pixelated blur like: ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blur","pixelation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pixelSize = 10.0; \nconst float radius = 5.0; \nconst int samples = 10; \n\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pixelatedUV = floor(uv * iResolution.xy / pixelSize) * pixelSize / iResolution.xy;\n\n    vec3 col = vec3(0.0);\n    for(int x = -samples/2; x <= samples/2; x++)\n    {\n        for(int y = -samples/2; y <= samples/2; y++)\n        {\n            vec2 samplePos = pixelatedUV + vec2(x, y) * (radius / iResolution.xy);\n            \n            col += pow(texture(iChannel0, samplePos).rgb, vec3(2.2));\n        }\n    }\n\n    col /= float((samples + 1) * (samples + 1));\n\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}