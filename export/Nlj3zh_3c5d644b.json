{"ver":"0.1","info":{"id":"Nlj3zh","date":"1623352891","viewed":153,"name":"some_bunch_of_circles","username":"skaplun","description":"just a cartoon explosion","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA (10./iResolution.x)\n\nconst float PI = acos(-1.);\nconst float HPI = PI * .5;\nvec4 img(vec2 uv, float time){\n    vec4 res = vec4(0.);\n    \n    {\n        vec2 pol = vec2(length(uv), atan(uv.x, uv.y));\n        float n = floor((pol.y * 15.)/PI);\n        pol.y = mod(pol.y * 15., PI)/PI;\n        pol.y = 2. * pol.y - 1.;\n        pol.y *= pol.x * PI;\n        pol.x *= 20.;\n        \n        vec4 h = hash41(n * .17);\n        float s = (.25 + h.y * .5) * smoothstep(.25, .3, time) * smoothstep(.55, .5, time);\n        \n        float start = 40. * smoothstep(.3, .5, time) * (2. - h.x);\n        float end = 40. * smoothstep(.3, .4, time) * (2. - h.x);\n        float width = (end - start)/2.;\n        float mid = start + width;\n        float v = mix(smoothstep(s + AA, s, abs(pol.y)),\n                      max(smoothstep(s + AA, s, distance(vec2(start, 0.), pol)),\n                          smoothstep(s + AA, s, distance(vec2(end, 0.), pol))),\n                      step(width, distance(pol.x, mid)));\n        res = mix(res, vec4(hsv2rgb(vec3(1. + (h.w * .2 - .1), smoothstep(.6, .4, time), 1.)), 1.), v * step(0., uv.y));\n    }\n    \n    for(int i=0; i<12; i++){\n        vec4 hash = hash41(float(i));\n        \n        vec3 color = hsv2rgb(vec3(time * .2 + (hash.x * .1 - .05), 1., 1.));\n        \n        float startTime = hash.x * .2;\n        float size = smoothstep(startTime, startTime + .1, time) * (.5 + hash.z * .25)\n                   * smoothstep(.65 - startTime, .6 - startTime, time);\n        float ang = hash.y * PI - HPI;\n        float rad = .3 + smoothstep(.3, .4, time) * (2. - hash.x) * .6;\n        vec2 pos = vec2(rad * sin(ang), rad * cos(ang));\n        vec4 clr = vec4(color, smoothstep(.01, 0., distance(uv, pos) - size));\n        \n        \n        size = smoothstep(startTime + .2, startTime + .3, time) * (.5 + hash.z * .25);\n        rad = smoothstep(startTime + .35, startTime + .4, time) * (2. - hash.x) * .75;\n        pos = vec2(rad * sin(ang), rad * cos(ang));\n        clr = mix(vec4(clr.rbg, 0.), clr, smoothstep(0., .01, distance(uv, pos) - size));\n        \n        res = mix(res, clr, clr.a);\n    }\n    \n    return res;\n}\n\nconst float ANIMATION_DURATION = 1.;\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = (2. * fragCoord.xy - iResolution.xy)/iResolution.y;\n    float time = mod(iTime, ANIMATION_DURATION)/ANIMATION_DURATION;\n    vec4 res = mix(vec4(0.847,0.561,1.000,1.), vec4(0.380,1.000,0.565,1.), smoothstep(-1., -.5, uv.y));\n    vec4 expl = img(uv * 2. + vec2(0., 1.), time);\n    fragColor = mix(res, expl, expl.a);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define HASHSCALE1 .1031\nfloat hash11(float p){\n        vec3 p3  = fract(vec3(p) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat hash11n(float p){\n    return hash11(p) * 2. - 1.;\n}\n\n#define HASHSCALE3 vec3(.1031, .1030, .0973)\nvec3 hash31(float p){\n   vec3 p3 = fract(vec3(p) * HASHSCALE3);\n   p3 += dot(p3, p3.yzx+19.19);\n   return fract((p3.xxy+p3.yzz)*p3.zyx); \n}\n\n#define HASHSCALE4 vec4(.1031, .1030, .0973, .1099)\nvec4 hash41(float p){\n        vec4 p4 = fract(vec4(p) * HASHSCALE4);\n    p4 += dot(p4, p4.wzxy+19.19);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n    \n}\n\nvec3 hsv2rgb(in vec3 c){\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}","name":"Common","description":"","type":"common"}]}