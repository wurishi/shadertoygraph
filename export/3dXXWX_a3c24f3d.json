{"ver":"0.1","info":{"id":"3dXXWX","date":"1552286213","viewed":108,"name":"metaball merge color","username":"kuma720","description":"metaball","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["metaball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdf(vec3 p,out vec3 col) {\n    \n    float len = 9999.;\n    vec3 lightDir = normalize(vec3(-0.4,1.,-1.));\n\n    //ball-center\n    float t1 = iTime * .9;\n    float t2 = iTime * 1.5;\n    vec3 center[4] = vec3[](\n        vec3( 0. , -0.25 , 0. ),\n    \tvec3( sin(t1) * .4 , -0.2 , cos(t1) * .12 ),\n    \tvec3( 0.12 , -0.2 + cos(t2) * .4 , sin(t2) * .2 ),\n    \tvec3( -0.12 , -0.2 + cos(t1) * .4 , sin(t1) * .2 )\n    );\n        \n    \n    //ball-color\n    vec3 ballcol[4] = vec3[](\n        vec3(0.,1.,0.),\n    \tvec3(0.,0.,1.),\n    \tvec3(1.,0.,0.),\n    \tvec3(1.,1.,1.)\n    );\n    \n    //meta-ball\n    float k = .3;\n    for ( int I=0 ; I<4 ; ++I ) {\n        \n        vec3 C = center[I];\n        float res = length( p - C ) - .07;\n        float h = clamp( 0.5 + 0.5*(res-len)/k, 0.0, 1.0 );\n        float k2 = - k*h*(1.0-h);\n        float len2 = mix( res, len, h ) + k2;\n        if ( len2 < len ) {\n            len = len2;\n            \n            vec3 normal = normalize( p - C );\n            float lp = dot(normal,lightDir) + .1;\n            vec3 tmpcol = ballcol[I] * lp;\n            col = mix( tmpcol , col , h ) + k2; \n        }\n        \n    }\n    \n    return len;\n}\n\n\n#define LOOP 10\nvec4 render( vec2 uv ) {\n    \n    //camera\n    vec3 eye = vec3( uv , -10. );\n    vec3 target = vec3(0.,0.,99999.);\n    vec3 dir = normalize( target - eye );\n    \n    //ray-march\n    vec3 col = vec3(0.,0.,0.);\n    vec3 p = eye;\n\tfor(int I=0;I<LOOP;++I) {\n        float l = sdf( p, col );\n\t    if( l < 0.01 ) {\n            return vec4(col,1.);\n  \t\t}\n        p += dir * l;\n    }\n\t\n    //sky-color\n    return vec4( 0.3,0.6,0.85, 1. );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = fragCoord /iResolution.x - vec2(0.5, 0.5);\n   fragColor = render( uv );\n}\n\n","name":"Image","description":"","type":"image"}]}