{"ver":"0.1","info":{"id":"l3ySRh","date":"1731030623","viewed":41,"name":"smoothed value noise culegamer","username":"CuleGamer","description":"wow this code sucks","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float steps = 16.;\nvoid mainImage(out vec4 O, in vec2 I)\n{\n    vec2 uv = 5. * (2.*I - iResolution.xy)/iResolution.y;\n    float val, sinT, cosT;\n    float seed = -0.1;\n    vec2 uvN = uv;\n    for(float i = 1.; i <= steps; i++)\n    {\n        seed = fract(seed);\n        seed *= seed;\n        seed += 0.1;\n        uvN *= 2.;\n        uvN += 1e4 * i;\n        cosT = cos(seed);\n        sinT = sin(seed);\n        uvN *= mat2(cosT, -sinT, sinT, cosT);\n        val += noise(uvN) * pow(0.5, i);\n    }\n    O = vec4(val);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat interpolate1(float a, float b, float t)\n{\n    return (-0.5 * cos(3.14159 * t) + 0.5) * (b - a) + a;\n}\nfloat interpolate4(vec4 v, vec2 p)\n{\n    return interpolate1(interpolate1(v.x, v.y, p.x), interpolate1(v.z, v.w, p.x), p.y);\n}\n\nfloat noise(vec2 uv)\n{\n    vec4 hash;\n    vec2 uvFloor = floor(uv);\n    hash.x = hash12(uvFloor + vec2(0, 0));\n    hash.y = hash12(uvFloor + vec2(1, 0));\n    hash.z = hash12(uvFloor + vec2(0, 1));\n    hash.w = hash12(uvFloor + vec2(1, 1));\n    return interpolate4(hash, uv - uvFloor);\n}","name":"Common","description":"","type":"common"}]}