{"ver":"0.1","info":{"id":"MsfGDX","date":"1434381511","viewed":588,"name":"Sorting Network SIMD","username":"Antonalog","description":"sorting with simd ops\nwritten ages ago, killed the shader compiler, didn't publish... hey it's my lucky day?","likes":26,"published":1,"flags":0,"usePreview":0,"tags":["sorting","simd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//looks like 64 is too much for windows and rather slow on Mac\n#define SORT_SIZE\t16\n\nvec4 sort[SORT_SIZE/4];\nvec4 end[SORT_SIZE/4];\n\nvec4 shadow_sort[SORT_SIZE/4];\nvec4 shadow_end[SORT_SIZE/4];\n\nvoid Sort();\nvoid ShadowSort();\n\n#define pi 3.1415927\n\nvec3 RotX(vec3 p, float t) {\n\tfloat c = cos(t); float s = sin(t);\n\treturn vec3(p.x,\n\t\t\t\tp.y*c+p.z*s,\n\t\t\t\t-p.y*s+p.z*c);\n}\n\nvec3 RotY(vec3 p, float t) {\n\tfloat c = cos(t); float s = sin(t);\n\treturn vec3(p.x*c+p.z*s,\n\t\t\t\tp.y,\n\t\t\t\t-p.x*s+p.z*c);\n}\n\nvec3 RotZ(vec3 p, float t) {\n\tfloat c = cos(t); float s = sin(t);\n\treturn vec3(p.x*c+p.y*s,\n\t\t\t\t-p.x*s+p.y*c,\n\t\t\t\tp.z);\n}\n\nbvec4 RayVs4AABBs(in vec3 p, in vec3 inv_dir,\n\t\t\t\t  in vec4 lo_x, in vec4 lo_y, in vec4 lo_z,\n\t\t\t\t  in vec4 hi_x, in vec4 hi_y, in vec4 hi_z,\n\t\t\t\t  out vec4 start, out vec4 end )\n{\t\n\tvec4 lo_id_x = ( lo_x - p.x ) * inv_dir.x;\n\tvec4 lo_id_y = ( lo_y - p.y ) * inv_dir.y;\n\tvec4 lo_id_z = ( lo_z - p.z ) * inv_dir.z;\n\t\n\tvec4 hi_id_x = ( hi_x - p.x ) * inv_dir.x;\n\tvec4 hi_id_y = ( hi_y - p.y ) * inv_dir.y;\n\tvec4 hi_id_z = ( hi_z - p.z ) * inv_dir.z;\n\n\tvec4 maxi_x = max( hi_id_x, lo_id_x );\n\tvec4 maxi_y = max( hi_id_y, lo_id_y );\n\tvec4 maxi_z = max( hi_id_z, lo_id_z );\n\t\n\tvec4 mini_x = min( hi_id_x, lo_id_x );\n\tvec4 mini_y = min( hi_id_y, lo_id_y );\n\tvec4 mini_z = min( hi_id_z, lo_id_z );\n\n\tstart = max( max( mini_x, vec4(0.) ), max( mini_y, mini_z ) );\n\tend = min( maxi_x, min( maxi_y, maxi_z ) );\n\t\t\n\treturn greaterThan(end-start,vec4(.00001));\n}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nvoid MakeViewRay(out vec3 eye, out vec3 ray, in vec2 fragCoord)\n{\n\tvec2 ooR = 1./iResolution.xy;\n    vec2 q = fragCoord.xy * ooR;\n    vec2 p =  2.*q -1.;\n    p.x *= iResolution.x * ooR.y;\n\t\n    vec3 lookAt = vec3(0.,0.,0.);\n\tfloat t = iTime*0.1;\n//\tt=0.;\n\tt = mod(t,1.);\n//\tif (t < 1.)\n\t{\n\t\teye = vec3(-10.,5.,-10)*5.;\n\t\teye = RotY(eye,smoothstep(0.,1.,t)*2.*pi);\n\t\n\t}\n#if 0\t\n\telse if (t < 2.)\n\t{\n\t\tt -= 1.;\n\t\tfloat s = smoothstep(0.,1.,t);\n\t\teye = vec3(50.+s*10.,90.*(1.-s*0.5),50.);\n\t\tlookAt = vec3(5.,0.,-10.);\t\t\n\t}\n\telse\n\t{\n\t\tt -= 2.;\n\t\tfloat s = smoothstep(0.,1.,t);\n\t\teye = vec3(-10.*(s*2.-1.),60. - s*30. ,-25.);\n\t\tlookAt = vec3(-20.*s,s,s*10.);\n\t}\n#endif\n\t\n    // camera frame\n    vec3 fo = normalize(lookAt-eye);\n    vec3 ri = normalize(vec3(fo.z, 0., -fo.x ));\n    vec3 up = normalize(cross(fo,ri));\n     \n    float fov = .25;\n\t\n    ray = normalize(fo + fov*p.x*ri + fov*p.y*up);\n}\n\nvec3 rayP, rayD, invRayD;\n\nvec4 minT = vec4(1e10);\n//vec4\nvoid Test(\tin vec4 min_x, in vec4 min_y, in vec4 min_z,\n\t\t\tin vec4 max_x, in vec4 max_y, in vec4 max_z,\n\t\t \tout vec4 s, out vec4 e )\n{\n\tvec4 box_start, box_end;\n\tbvec4 bound_test = RayVs4AABBs(rayP, invRayD, min_x, min_y, min_z,\n\t\t\t\t\t\t\t\t   max_x, max_y, max_z, box_start, box_end);\n#if 0\t\n\tvec4 v = vec4(bound_test);\n\ts = mix(vec4(1e10), box_start,v);\n\te = mix(vec4(1e10), box_end,v);\n#else\t\n\ts.x = bound_test.x ? box_start.x : 1e10;\n\ts.y = bound_test.y ? box_start.y : 1e10;\n\ts.z = bound_test.z ? box_start.z : 1e10;\n\ts.w = bound_test.w ? box_start.w : 1e10;\n\n\te.x = bound_test.x ? box_end.x : 1e10;\n\te.y = bound_test.y ? box_end.y : 1e10;\n\te.z = bound_test.z ? box_end.z : 1e10;\n\te.w = bound_test.w ? box_end.w : 1e10;\t\n#endif\t\n}\n\t\n\nvec4 UnpackNormal(vec3 p)\n{\t\n\tvec3 c = abs(p-ceil(p));\n\tvec3 f = abs(p-floor(p));\n\t\n\tfloat cm = max(c.x,max(c.y,c.z));\t\n\tfloat fm = max(f.x,max(f.y,f.z));\n\t\n\tfloat mm = 1.0-max(cm,fm);\n\t\t\n\tfloat s = cm > fm ? 1. : -1.;\n\tvec3 m = cm > fm ? c : f;\n\t\tif (m.x > m.y)\n\t\t{\n\t\t\tif (m.x > m.z) return vec4(s,0.,0.,mm);\n\t\t\t\t\t\t   return vec4(0.,0.,s,mm);\t\t\n\t\t}\n\t\t\tif (m.y > m.z) return vec4(0.,s,0.,mm);\n\t\t\t\t\t\t   return vec4(0.,0.,s,mm);\t\n}\n\t\t\t\nvec3 DecodeColor(float x)\n{\n//\treturn vec3(1.);\n\tfloat t = 0.0001;\n\tif (x < t)\n\t\treturn pow(vec3(245./255.,205./255.,47./255.),vec3(2.2));  //yellow\n\telse if (x < 2.*t)\n\t\treturn pow(vec3(196./255.,40./255.,27./255.),vec3(2.2)); //red\n\telse if (x < 3.*t)\n\t\treturn pow(vec3(161./255.,165./255.,162./255.),vec3(2.2)); //gray\n\telse if (x < 4.*t)\t\t\n\t\treturn pow(vec3(13./255.,105./255.,171./255.),vec3(2.2));  //blue\n//\telse\n\t\treturn pow(vec3(40./255.,127./255.,70./255.),vec3(2.2));  //green\n\t\n}\n\nvec3 lightDir=normalize(vec3(2.,4.,-1.));\n\n//vec3 lightDir=RotY(normalize(vec3(2.,4.,-1.)),iTime);\n\nfloat shlick(vec3 N, vec3 V)\n{\n\tfloat f = dot(-V,N);\n\tf = 1.0-f;\t\n\tfloat ff = f;\n\tf *= f;\t\t//2\n\tf *= f;\t\t//4\n    f *= ff;\t//5\n\tfloat r0 = 0.09;\n\tf = r0 + (1.0-r0)*f;\n\treturn f;\n}\n\nvec3 Light(vec3 p, vec4 nc, vec3 shadow, vec3 V)\n{\n\tvec3 n = nc.xyz;\n\t\t\n\tvec3 m = DecodeColor(nc.w);\n\t\n\t\n\tvec3 c = pow(texture(iChannel1,n).xyz,vec3(2.2))*.5 + 0.5; //*0.7+0.1;\n\t\n\tc *= shadow;\n#if 1\t\n\tvec3 na = abs(n);\n\tvec2 uv = na.x < na.y ? p.xz : p.xy;\n\tuv  = na.z < na.x ? p.yz : uv;\n\tc *= pow(texture(iChannel2,uv*.01).xyz,vec3(2.2)) + .25;\n#endif\n\t\n\tc *= m;\n\t\n#if 1\t\n\tV=-V;\n\t\n\tfloat f = shlick(n,V);\t\n\tvec3 refV = reflect(V,n);\n\tvec3 ref = f*texture(iChannel1,refV).xyz*.01; \t\n\tc += ref * m;\n#endif\n\t\n\treturn c;\n}\n\n\nvec3 Transmittance(vec3 color, float T)\n{\n\treturn -log(color)/T;\n}\n\nvec3 Filter(float thick, vec3 trans)\n{\n\tfloat conc = 0.35;\n\treturn exp( -trans * conc * thick );\n}\n\n#if 1\nvoid LotsOfBoxes();\nvoid ShadowBoxes();\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 viewP, viewD;\n\tMakeViewRay(viewP, viewD, fragCoord);\n\t\n\tfloat primary_ao=1.;\n\n\trayP=viewP;\n\trayD=viewD;\n\t\n\tinvRayD=1./rayD;\n\n\t//find all intersections\n\tLotsOfBoxes();\n\t\n\t//sort them \n\tSort();\n\t\n\t//shade and blend\n\tvec3 bg=pow(texture(iChannel1,viewD).xyz,vec3(2.2))*2.;\n\t\n\trayD=lightDir;\t\n\tinvRayD=1./rayD;\n\t\n\tfloat T = 2.;// sin(iTime)*0.5+0.5;\n\t\n\tvec3 accum = vec3(0);\n\tvec3 filter_col = vec3(1.1);\n\tfor (int i=0; i<SORT_SIZE/4; i++)\n\t{\n\t\tfor (int v=0; v<4; v++) {\n\t\tfloat t = sort[i][v];\n\t\tif (t < 1e5)\n\t\t{\t\t\t\t\n\t\t\tvec3 p = viewP+t*viewD;\n\t\t\tvec4 n = UnpackNormal(p);\n\t\t\n\t\t\trayP=p+n.xyz*0.01;\n\t\t\tvec3 shadow_color = vec3(3.0);\n#if 1\n\t\t\t//find all intersections\n\t\t\tShadowBoxes();\t\t\n\t\t\t//sort them \n\t//?\t\tShadowSort();\n\t\t\tfor (int j=0; j<SORT_SIZE/4; j++)\n\t\t\t{\n\t\t\t\tfor (int w=0; w<4; w++) {\n\t\t\t\tfloat t = shadow_sort[j][w];\n\t\t\t\tfloat e = shadow_end[j][w];\n\t\t\t\tif (0. < t && t < 1e5)\n\t\t\t\t{\t\n\t\t\t\t\tt = max(t,0.);\n\t\t\t\t\tfloat thickness = max(e-t,0.);\n\t\t\t\t\t\n\t\t\t\t\tvec3 p = rayP+t*rayD;\n\t\t\t\t\tvec4 n = UnpackNormal(p);\n\t\t\t\t\tvec3 trans = Transmittance(DecodeColor(n.w),T);\n\t\t\t\t\tshadow_color *= Filter(thickness,trans);\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n#endif\t\t\t\n\t\t\tvec3 c = Light(p,n,shadow_color, viewD);\n\t\t\t\n\t\t\t//A*a + (1-a)*B\n\t\t\t\n\t\t\tfloat e = end[i][v];\n\t\t\tfloat thickness = max(e-t,0.);\n\t\t\t\n\t\t\taccum += c * filter_col;\n\t\t\t\n\t\t\tvec3 trans = Transmittance(DecodeColor(n.w),T);\n\t\t\tfilter_col *= Filter(thickness,trans);\n\t\t\t\n\t\t\t//and the back face!\n\t\t\tp = viewP+e*viewD;\n\t\t\tn = UnpackNormal(p);\n\t\t\tc = Light(p,n,shadow_color, viewD); //wrong shadow term but whatever!\n\t\t\t\n\t\t\taccum += c * filter_col;\n//\t\t\tfloat a=clamp( thickness, 0., 1.)*.75;\n//\t\t\taccum = c*a+(1.-a)*accum;\n\t\t} //fi\n\t\t} //for v\t\n\t}\n\taccum += bg * filter_col;\n\t\n\tfragColor = vec4(pow(accum,vec3(1./2.2)),1.);\t\n}\n\n\n//#define BOXES(F,s,e) F(vec4(-21.000050,2.999750,-6.000450,-29.000050),vec4(-12.000050,-13.000250,0.999550,4.999950),vec4(-8.000050,-1.000250,-6.000450,-10.000050),vec4(15.000050,10.000250,-2.999550,27.000050),vec4(-2.999950,23.000250,9.000450,7.000050),vec4(-1.999950,8.000250,26.000450,-7.999950) ,s[0],s[1],s[2],s[3],e[0],e[1],e[2],e[3]); /*0*/F(vec4(-0.000350,-11.000350,-2.000250,6.999950),vec4(3.999650,7.999650,-3.000250,-0.000050),vec4(3.999650,-7.000350,1.999750,-11.000050),vec4(2.000350,-6.999650,1.000250,10.000050),vec4(12.000350,10.000350,0.000250,4.000050),vec4(9.000350,-0.999650,9.000250,-6.999950) ,s[4],s[5],s[6],s[7],e[4],e[5],e[6],e[7]); /*1*/F(vec4(-11.000050,-19.000050,-9.000150,2.999850),vec4(-2.000050,-13.000050,-11.000150,6.999850),vec4(-2.000050,7.999950,-0.000150,-6.000150),vec4(-6.999950,0.000050,-3.999850,8.000150),vec4(0.000050,-5.999950,-5.999850,10.000150),vec4(10.000050,9.000050,4.000150,-1.999850) ,s[8],s[9],s[10],s[11],e[8],e[9],e[10],e[11]); /*2*/F(vec4(-7.000150,-1.000250,-13.000250,1.999750),vec4(-2.000150,1.999750,0.999750,0.999750),vec4(-6.000150,-2.000250,-4.000250,-8.000250),vec4(21.000150,0.000250,-6.999750,6.000250),vec4(0.000150,14.000250,4.000250,3.000250),vec4(-3.999850,2.000250,10.000250,-5.999750) ,s[12],s[13],s[14],s[15],e[12],e[13],e[14],e[15]); /*3*/\n//#define BOXES(F,s,e) F(vec4(-20.000150,-8.000050,-10.000150,-37.000450),vec4(-12.000150,-7.000050,5.999850,-2.000450),vec4(-20.000150,5.999950,-15.000150,-6.000450),vec4(20.000150,0.000050,-6.999850,26.000450),vec4(-7.999850,6.000050,10.000150,3.000450),vec4(20.000150,14.000050,-0.999850,0.000450) ,s[0],s[1],s[2],s[3],e[0],e[1],e[2],e[3]); /*0*/F(vec4(5.999950,-5.000150,-22.000150,-9.000350),vec4(5.999950,6.999850,-7.000150,1.999650),vec4(7.999950,-33.000150,-2.000150,2.999650),vec4(14.000050,1.000150,17.000150,-6.999650),vec4(12.000050,8.000150,-4.999850,18.000350),vec4(9.000050,16.000150,4.000150,5.000350) ,s[4],s[5],s[6],s[7],e[4],e[5],e[6],e[7]); /*1*/F(vec4(1.999650,-31.000250,4.999550,-13.000150),vec4(7.999650,-6.000250,2.999550,-3.000150),vec4(-11.000350,-12.000250,-11.000450,0.999850),vec4(4.000350,15.000250,10.000450,-5.999850),vec4(10.000350,-2.999750,17.000450,-0.999850),vec4(3.000350,-7.999750,-6.999550,3.000150) ,s[8],s[9],s[10],s[11],e[8],e[9],e[10],e[11]); /*2*/F(vec4(-40.000450,5.999550,3.999550,-16.000250),vec4(-2.000450,0.999550,-1.000450,-4.000250),vec4(-10.000450,6.999550,3.999550,-4.000250),vec4(25.000450,9.000450,10.000450,7.000250),vec4(2.000450,2.000450,6.000450,-2.999750),vec4(-8.999550,9.000450,6.000450,-0.999750) ,s[12],s[13],s[14],s[15],e[12],e[13],e[14],e[15]); /*3*/\n#define BOXES(F,s,e) F(vec4(-20.000250,-9.000050,4.999850,-13.000250),vec4(-12.000250,-6.000050,-4.000150,8.999750),vec4(-20.000250,-0.000050,-29.000150,3.999750),vec4(20.000250,-4.999950,13.000150,20.000250),vec4(-7.999750,21.000050,4.000150,10.000250),vec4(20.000250,2.000050,13.000150,11.000250) ,s[0],e[0]); /*0*/F(vec4(-2.000450,5.999650,-1.000050,-11.000450),vec4(2.999550,4.999650,0.999950,1.999550),vec4(-0.000450,-19.000350,-6.000050,4.999550),vec4(3.000450,8.000350,2.000050,-4.999550),vec4(6.000450,8.000350,2.000050,5.000450),vec4(5.000450,30.000350,-0.999950,10.000450) ,s[1],e[1]); /*1*/F(vec4(-1.000350,-20.000050,-8.000350,0.999950),vec4(-3.000350,4.999950,-6.000350,-7.000050),vec4(-9.000350,-6.000050,-10.000350,-23.000050),vec4(1.000350,4.000050,-4.999650,7.000050),vec4(0.000350,6.000050,14.000350,-5.999950),vec4(5.000350,-2.999950,-7.999650,38.000050) ,s[2],e[2]); /*2*/F(vec4(-14.000250,-5.000150,-3.000450,1.999950),vec4(-5.000250,-7.000150,6.999550,-5.000050),vec4(5.999750,-6.000150,-16.000450,-4.000050),vec4(-0.999750,-1.999850,5.000450,3.000050),vec4(1.000250,4.000150,13.000450,-3.999950),vec4(10.000250,-1.999850,-3.999550,1.000050) ,s[3],e[3]); /*3*/\n\nvoid LotsOfBoxes()\n{\n\tBOXES(Test,sort,end)\n}\n\nvoid ShadowBoxes()\n{\n\tBOXES(Test,shadow_sort,shadow_end)\n}\n\n\n#endif\n\n//http://www.vldb.org/pvldb/1/1454171.pdf\n\n/*\nsort 4 lots of 4 numbers\n[[0,1],[2,3]]\n[[0,2],[1,3]]\n[[1,2]]\n*/\nvoid sort4(inout vec4 _0,inout vec4 _1,inout vec4 _2,inout vec4 _3)\n{\n\tvec4 L01 = min(_0,_1); vec4 H01 = max(_0,_1); vec4 L23 = min(_2,_3); vec4 H23 = max(_2,_3);\n\t_0 = L01; _1 = H01; _2 = L23; _3 = H23;\n\tvec4 L02 = min(_0,_2); vec4 H02 = max(_0,_2); vec4 L13 = min(_1,_3); vec4 H13 = max(_1,_3);\n\t_0 = L02; _2 = H02; _1 = L13; _3 = H13;\n\tvec4 L12 = min(_1,_2); vec4 H12 = max(_1,_2);\n\t_1 = L12; _2 = H12;\n\t//10 instr to sort 4x 4 numbers\n\n\t//transpose:\n\tvec4 a = vec4(_0.x,_1.x,_2.x,_3.x);\n\tvec4 b = vec4(_0.y,_1.y,_2.y,_3.y);\n\tvec4 c = vec4(_0.z,_1.z,_2.z,_3.z);\n\tvec4 d = vec4(_0.w,_1.w,_2.w,_3.w);\n\t_0=a;\n\t_1=b;\n\t_2=c;\n\t_3=d; \n}\n\t\t  \nvoid bitonic_merge(inout vec4 a, inout vec4 x) \n{\t\n\tx = x.wzyx;\t//a ascending, x descending\n\tvec4 L = min(a,x); \tvec4 H = max(a,x);\n\n\tvec4 A = vec4(L.xy,H.xy); vec4 B = vec4(L.zw, H.zw);\n\tvec4 L2 = min(A, B);  vec4 H2 = max(A, B);  \n\n\tA = vec4(L2.x, H2.x, L2.z, H2.z);\n\tB = vec4(L2.y, H2.y, L2.w,H2.w);\n \n\tvec4 L3 = min(A,B); vec4 H3 = max(A,B);\n\ta = vec4(L3.x,H3.x,L3.y,H3.y);  x = vec4(L3.z,H3.z,L3.w,H3.w); \n\t\n\t//6x\n}\n\n//two sorted sequences of 8 into 16\nvoid bitonic_merge(inout vec4 a, inout vec4 b, inout vec4 y, inout vec4 x)\n{\n\tvec4 Lax = min(a,x); vec4 Hax = max(a,x);\n\tvec4 Lby = min(b,y); vec4 Hby = max(b,y);\n\n\tbitonic_merge(Lax,Lby);\t\tbitonic_merge(Hax,Hby);\n\ta = Lax; b = Lby; \t\t\ty = Hax; x = Hby;\n\t\n\t//4x + 2*6x\n}\n\n#define SORT16(a,b,c,d) sort4(a,b,c,d); bitonic_merge(a,b); bitonic_merge(c,d); bitonic_merge(a,b,c,d);\n//#define SORT16(a,b,c,d) sort4(a,b,c,d); bitonic_merge(a,b); bitonic_merge(c,d); bitonic_merge(a,b,c,d); bitonic_merge(a,b); bitonic_merge(c,d);\nvoid Sort()\n{\n\tSORT16(sort[0],sort[1],sort[2],sort[3]);\n\tSORT16(end[0],end[1],end[2],end[3]);\n}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nvoid ShadowSort()\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n{\n\tSORT16(shadow_sort[0],shadow_sort[1],shadow_sort[2],shadow_sort[3]);\n\tSORT16(shadow_end[0],shadow_end[1],shadow_end[2],shadow_end[3]);\t\t\n}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ","name":"","description":"","type":"image"}]}