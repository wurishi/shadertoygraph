{"ver":"0.1","info":{"id":"lsKGDz","date":"1454111034","viewed":426,"name":"Amorphous Rainbow Blob(s)","username":"brejep","description":"Ray marched blob. Copied from iq live coding. http://on-demand.gputechconf.com/gtc/2014/video/S4550-shadertoy-fragment-shader.mp4. I added the rainbow palette.","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["proceduralraymarchblob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nvec3 a = vec3(0.5, 0.5, 0.5);\nvec3 b = vec3(0.5, 0.5, 0.5);\nvec3 c = vec3(1.0, 1.0, 1.0);\nvec3 d = vec3(0.0, 0.33, 0.67);\n\nvec3 palette(in float val, vec3 u, vec3 v, vec3 w, vec3 x) {\n    return u + v * cos( 6.28318531 * (w * (val + x)));\n}\n\nfloat map(in vec3 p) {\n    vec3 q = mod(p+2.0, 4.0) - 2.0;\n\tfloat d0 = length(q) - 1.0;\n    d0 += 0.1 * sin(10.0 * p.x) * sin(10.0 * p.y + 10.0 * iTime) * sin(10.0 * p.z);\n    float d1 = p.y + 1.0;\n    \n    float k = 1.225;\n    float h = clamp(0.5 + 0.5 * (d0 - d1)/k, 0.0, 1.0);\n    return mix(d0, d1, h) - k * h * (1.0 -h);\n}\n\nvec3 calcNormal( in vec3 p ) {\n    vec2 e = vec2(0.0001, 0.0);\n    \n\treturn normalize( vec3( \n        map(p+e.xyy) - map(p-e.xyy),\n        map(p+e.yxy) - map(p-e.yxy),\n        map(p+e.yyx) - map(p-e.yyx)\n    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.0*fragCoord.xy-iResolution.xy) / iResolution.y;\n    \n    vec3 rayOrigin = vec3(0.0, 0.0, 2.0);\n    vec3 rayDirection = normalize(vec3(uv, -1.0));\n    \n    vec3 col = vec3(0.22);\n    \n    float h = 1.0;\n    float t = 0.0;\n    float tmax = 20.0;\n    \n    for(int i = 0; i<100; i++) {\n        if(h < 0.0001 || t > tmax) { break; }\n     \th = map(rayOrigin + t * rayDirection);\n        t += h;\n    }\n    \n    vec3 lig = vec3(0.5773);\n    if(t < tmax) {\n        vec3 pos = rayOrigin + t * rayDirection;\n        vec3 norm = calcNormal(pos);\n        col = vec3(0.98); // background colour\n        // lighting\n        col = palette(t, vec3(0.5), vec3(0.5), vec3(1.0), vec3(0.0, 0.33, 0.67)) * clamp(dot(norm, lig), 0.0, 1.0);\n        col += vec3(0.2, 0.3, 0.4) * clamp(norm.y, 0.0, 1.0);\n       \tcol += vec3(1.0, 0.7, 0.2) * clamp(1.0 + dot(rayDirection, norm), 0.0, 1.0);\n        col *= 0.8;\n        //fog\n        col *= exp(-0.1 * t);\n    }\n    \n\tfragColor = vec4(col, 1.0);\n}","name":"","description":"","type":"image"}]}