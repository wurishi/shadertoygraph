{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float sine(float value)\n{\n    return (sin(value) + 1.0) / 2.0;\n}\n\nconst int amount = 8;\n\nvec3 getPixel(vec2 pos)\n{\n    vec3 mix = vec3(0.0, 0.0, 0.0);\n    \n    for (int i = 0; i < amount; i++)\n    {\n        float lx = sin(iTime * 1.43 + float(i) * 5.43) * 665.0;\n        float ly = sin(iTime * 1.76 + float(i) * 7.34) * 454.0;\n        float lgx = iResolution.x / 2.0 - pos.x - lx;\n        float lgy = iResolution.y / 2.0 - pos.y - ly;\n        float mul = (1.0 - (lgx * lgx + lgy * lgy) / (200000.0 + sin(iTime * 0.35 + float(i) * 324.0) * 40000.0));\n        if (mul > 0.0) mix += vec3(sine(float(i) * 2.43 + 0.42), sine(float(i) * 4.24 + 1.54), sine(float(i) * 5.82 + 1.43)) * mul;\n    }\n    \n    return mix;\n}\n\nvec4 mixVec4(vec4 vf, vec4 vt, float mix)\n{\n    if (mix < 0.0) mix = 0.0;\n   \tif (mix > 1.0) mix = 1.0;\n    \n    return vec4(vf.r + (vt.r - vf.r) * mix, \n                vf.g + (vt.g - vf.g) * mix, \n                vf.b + (vt.b - vf.b) * mix, \n                vf.a + (vt.a - vf.a) * mix);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 ps = vec2(fragCoord.x, iResolution.y - 1.0 - fragCoord.y);\n    \n    float height = 240.0 + sin(iTime + ps.x / 200.0) * 200.0 + sin(iTime + ps.x / 100.0) * 100.0 + sin(iTime + ps.x / 20.0) * 4.0;\n    \n    vec2 dist = ps;\n    vec2 light = ps;\n    \n    if (ps.y >= height + 7.0)\n    {\n        dist.x += sin(dist.y / 80.0 + iTime) * 48.0;\n        dist.y += sin(dist.x / 80.0 + iTime) * 48.0;\n        light.x += sin(light.y / 40.0 + iTime) * 24.0;\n        light.y += sin(light.x / 40.0 + iTime) * 24.0;\n    }\n    \n\tfragColor = vec4(getPixel(dist), 1.0);\n    \n    if (ps.y >= height)\n    {\n        float sm = ((ps.y - height) / 1.5);\n        if (sm > 1.0) sm = 1.0;\n        \n        float f = 0.75 - ((ps.y - height - 7.0) / 600.0);\n        if (f < 0.25) f = 0.25;\n        \n        fragColor = mixVec4(fragColor, vec4(0.5, 0.9, 1.0, 1.0), f * sm);\n        \n        f = mod((ps.x - ps.y) / 100.0, 1.0);\n        \n        float inten = 0.5 + sin((ps.x - ps.y) / 40.0) * 0.25 + sin((ps.x - ps.y) / 74.0) * 0.125;\n        \n        fragColor = mixVec4(fragColor, vec4(1.0, 1.0, 1.0, 1.0), \n                                (1.0 - ((light.y - height - 600.0) / (213.0 + sin(light.x / 124.0) * 47.0))) * \n                                ((sin(light.x / 63.0) + 1.0) / 2.0) * ((sin(iTime + sin(light.x / 52.0)) + 1.0) / 2.0)\n                           * inten * 0.25 * sm);\n        \n        fragColor = mixVec4(fragColor, vec4(1.0, 0.95, 0.9, 1.0), \n                                (1.0 - ((light.y - height - 7.0) / (200.0 + sin(light.x / 100.0) * 50.0))) * \n                                ((sin(light.x / 76.0) + 1.0) / 2.0) * ((sin(iTime + sin(light.x / 46.0)) + 1.0) / 2.0)\n                           * (f > inten ? 1.0 : 0.0) * sm);\n        \n        if (ps.y >= height && ps.y < height + 8.0)\n        {\n            fragColor = mixVec4(fragColor, vec4(0.75, 0.9, 1.0, 1.0), (1.0 - (ps.y - height) / 10.0) * sm);\n            fragColor = mixVec4(fragColor, vec4(1.0, 1.0, 1.0, 1.0), (1.0 - (ps.y - height) / 10.0) * sm * sine(ps.x / 30.0 + ps.y / 4.0));\n        }\n    }\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lts3DX","date":"1425875404","viewed":216,"name":"Lights + Water","username":"felixisdev","description":"my lights shader combined with my water shader with some extra waves","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["wavelightwater"],"hasliked":0,"parentid":"","parentname":""}}