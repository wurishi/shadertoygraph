{"ver":"0.1","info":{"id":"7lKfWw","date":"1664723882","viewed":199,"name":"Hyperbolic Visu","username":"rubioh","description":"test","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["abstract","hyperbolic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define saturate(v) clamp(v,0.,1.)\n\nfloat cross_(vec2 a, vec2 b){\n    return a.y*b.x-a.x*b.y;\n}\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\nvec3 hsv2rgb(vec3 c){\n\tvec4 K=vec4(1.,2./3.,1./3.,3.);\n\treturn c.z*mix(K.xxx,saturate(abs(fract(c.x+K.xyz)*6.-K.w)-K.x),c.y);\n}\n\n\nvec4 make_square_cell(vec2 coord, vec2 index){\n\n    vec2 centered_coord = coord-.5;\n    float length_ = max(abs(centered_coord.x), abs(centered_coord.y));\n    float radius = .2;\n    \n    \n    float square = max(abs(centered_coord).x, abs(centered_coord).y);\n    square = 1.-smoothstep(0., 0.02, square-radius);\n    \n    vec3 HSV = vec3(cos(iTime/4.)*.5+.5, 1., 1.);\n    vec3 col = hsv2rgb(HSV);\n\n    vec3 col_square = col*square;\n    \n    return vec4(col, square);    \n}\n\n\n\nmat2 rotation_matrix(float angle){\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n   \n    vec2 uv = fragCoord/iResolution.xy;\n   \n    uv -= .5;\n    mat2 rot = rotation_matrix(iTime/5.);\n    uv = rot*uv;\n\n\n\n    float N = 5.;\n    \n\n    \n    uv *= vec2(N, N)*vec2(N, N);\n    uv = sqrt(abs(uv));\n    \n    \n    float mask = sqrt(length(uv.x))*sqrt(length(uv.y));\n    \n    rot = rotation_matrix(iTime/3.);\n    uv = rot*uv;\n    \n    float t = mod(iTime+1.3333, 4.);\n    float line = smoothstep(t-.05, t+.05, length(uv.x))*\n                 (1.-smoothstep(t-.05, t+.05, length(uv.x)));\n  \n    t = mod(iTime, 6.);\n    line += smoothstep(t-0.1-1.5, t-1.5, length(uv.x))*\n                 (1.-smoothstep(t, t+.01, length(uv.x)));\n  \n    t = mod(iTime+ 2.6666, 4.);\n    line += smoothstep(t-.05, t+.05, length(uv.x))*\n                 (1.-smoothstep(t-.05, t+.05, length(uv.x)));\n  \n            \n    \n    //uv = sqrt(abs(uv));\n\n    // Time varying pixel color\n    \n    vec4 col = make_square_cell(fract(2.*uv), floor(2.*uv));\n    \n    vec3 col_line = vec3(1., 1., 1.)*line*(1.-col.w);\n    // Output to screen\n    fragColor = vec4(1.-col.rgb+vec3(1.-mask)*1.+col_line, 1.0);\n}","name":"Image","description":"","type":"image"}]}