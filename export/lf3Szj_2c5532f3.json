{"ver":"0.1","info":{"id":"lf3Szj","date":"1730038549","viewed":17,"name":"ggcdddv","username":"max_render_in_shadertoy","description":"g","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float function(float x) {\n    return sin(x)*sin(iTime);\n}\n\nfloat check(vec2 A, vec2 B, vec2 cord) {\n    vec2 a = B - A;\n    vec2 b = cord - A;\n    vec2 c = cord - B;\n    float f = (a.x * b.x + a.y * b.y) / length(a);\n    if (f >= 0.0 && c.x * a.x + c.y * a.y <= 0.0) {return sqrt(abs(length(b)*length(b) - f*f));}\n    if (f < 0.0) {return length(cord - A);}\n    if (c.x * a.x + c.y * a.y > 0.0) {return length(cord - B);}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 cord = vec2(fragCoord.x * 2.0 / iResolution.y - iResolution.x / iResolution.y, fragCoord.y * 2.0 / iResolution.y - 1.0);\n    float dx = 2.0 / iResolution.y;\n   \n    float a = 1.0;\n\n    dx = dx * a;\n    \n    float x = cord.x * a;\n    float y = cord.y * a;\n    cord = cord*a;\n    \n    float l = 1.5;\n    float M = check(vec2(x, function(x)), vec2(x + dx, function(x + dx)), cord);\n    \n    for (int i = -int(l); i < int(l); i++) {\n        float j = float(i);\n        M = min(M, check(vec2(x + j * dx, function(x + j * dx)), vec2(x + dx + j * dx, function(x + dx + j * dx)), cord));\n    }\n    \n    float si = 1.0;\n    vec3 color = vec3(0, 0, 0);\n    M = M / dx;\n    if (M < l && M >= l - si) {color = vec3(1, 1, 1) * (1.0 - (M - l + si) / si);}\n    if (M < l - si) {color = vec3(1, 1, 1);}\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}