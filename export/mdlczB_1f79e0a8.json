{"ver":"0.1","info":{"id":"mdlczB","date":"1686995138","viewed":170,"name":"distance from sinusoids","username":"Tygrak","description":"distance from sinusoids, just messing with stuff :)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","function","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float funkyFunc(vec2 uv, int va, float iScale, float x1, float x2, float x3) {\n    float res = sin(uv.x*(6.0*float(va)+4.0)-iTime*4.0)*0.4*(0.5);\n    res = res*(uv.x+0.4*iScale+pow(uv.x, 2.0)*iScale);\n    res += 0.5;\n    return res;\n}\n\nfloat funcDist(vec2 uv, float func) {\n    float funcDist = abs(uv.y-func);\n    funcDist = 1.0-pow(funcDist, 0.05);\n    return funcDist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.0);\n    \n    vec3 color1 = vec3(0.5, 0.6, 0.90);\n    vec3 color2 = vec3(0.2, 0.41, 0.14);\n    vec3 color3 = vec3(0.09, 0.51, 0.64);\n    vec3 color4 = vec3(0.05, 0.21, 0.14);\n    \n    vec3 bgColor = vec3(0.2, 0.6, 0.05);\n    \n    for (int va = 0; va < 3; va++) {\n        for (int i = 0; i < 64; i++) {\n            float iScale = float(i)/64.0;\n            float pMod = float(i*va)*100.0;\n            float emissiveStrength = 0.01;\n            vec3 c1 = palette(float(va)/6.0+uv.x, color1, color2, color3, color4);\n            vec3 c2 = palette(float(va)/6.0+uv.x, color1, color2, color3, color4);\n            vec3 c3 = palette(float(va)/6.0+1.0-uv.x, color1, color2, color3, color4);\n            vec3 c4 = palette(float(va)/6.0+1.0-uv.x, color1, color2, color3, color4);\n            col += funcDist(uv, funkyFunc(uv, va, iScale, 3.0*pMod, 11.0*pMod, 37.0*pMod))*c1*emissiveStrength;\n            vec2 yuv = vec2(uv.x, 1.0-uv.y);\n            col += funcDist(yuv, funkyFunc(yuv, va, iScale, 2.0*pMod, 7.0*pMod, 17.0*pMod))*c2*emissiveStrength;\n            vec2 xuv = vec2(1.0-uv.x, 1.0-uv.y);\n            col += funcDist(xuv, funkyFunc(xuv, va, iScale, 3.0*pMod, 11.0*pMod, 37.0*pMod))*c3*emissiveStrength;\n            vec2 xyuv = vec2(1.0-uv.x, 1.0-uv.y);\n            col += funcDist(xyuv, funkyFunc(xyuv, va, iScale, 2.0*pMod, 7.0*pMod, 17.0*pMod))*c4*emissiveStrength;\n        }\n    }\n    \n    vec2 nuv = uv+vec2(iTime*0.00, 0);\n    vec3 bg = vec3(rand(uv)*pow(abs(uv.y-0.5), 2.0))*0.5;\n    bg += vec3(cnoise(nuv*50.1)*pow(abs(uv.y-0.5), 2.0));\n    bg += vec3(cnoise(nuv*100.1)*pow(abs(uv.y-0.5), 2.0));\n    bg += vec3(cnoise(nuv*200.1)*pow(abs(uv.y-0.5), 2.0));\n    bg += vec3(cnoise(nuv*400.1)*pow(abs(uv.y-0.5), 2.0));\n    bg *= pow(abs(uv.y-0.5), 2.0);\n    bg = 0.125+bg*0.75;\n    bg *= bgColor;\n    vec3 result = col+bg;\n    //result = palette(uv.x, color1, color2, color3, color4);\n\n    // Output to screen\n    fragColor = vec4(result, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float rand(vec2 c){\n\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n// cosine based palette, 4 vec3 params\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\n//\tClassic Perlin 2D Noise \n//\tby Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec2 fade(vec2 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec2 P){\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\n  Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\n  vec4 ix = Pi.xzxz;\n  vec4 iy = Pi.yyww;\n  vec4 fx = Pf.xzxz;\n  vec4 fy = Pf.yyww;\n  vec4 i = permute(permute(ix) + iy);\n  vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\n  vec4 gy = abs(gx) - 0.5;\n  vec4 tx = floor(gx + 0.5);\n  gx = gx - tx;\n  vec2 g00 = vec2(gx.x,gy.x);\n  vec2 g10 = vec2(gx.y,gy.y);\n  vec2 g01 = vec2(gx.z,gy.z);\n  vec2 g11 = vec2(gx.w,gy.w);\n  vec4 norm = 1.79284291400159 - 0.85373472095314 * \n    vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\n  g00 *= norm.x;\n  g01 *= norm.y;\n  g10 *= norm.z;\n  g11 *= norm.w;\n  float n00 = dot(g00, vec2(fx.x, fy.x));\n  float n10 = dot(g10, vec2(fx.y, fy.y));\n  float n01 = dot(g01, vec2(fx.z, fy.z));\n  float n11 = dot(g11, vec2(fx.w, fy.w));\n  vec2 fade_xy = fade(Pf.xy);\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\n  return 2.3 * n_xy;\n}","name":"Common","description":"","type":"common"}]}