{"ver":"0.1","info":{"id":"ddB3W3","date":"1668231959","viewed":103,"name":"Living Circuit Board","username":"murf","description":"\nR to reset.","likes":7,"published":1,"flags":48,"usePreview":0,"tags":["digital"],"hasliked":0,"parentid":"DsB3D3","parentname":"Cyber Snakes"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    fragColor = vec4(0.,max(col.g,col.r),0.,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nvec3 colOn = vec3(1.0,0.0,0.0);\nvec3 colOff = vec3(0.0);\nconst float pSigAm = 300.; \n\nfloat rand(vec2 c){\n\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 p, float freq ){\n\tfloat unit = iResolution.x/freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(M_PI*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\nfloat pNoise(vec2 p, int res){\n\tfloat persistance = .5;\n\tfloat n = 0.;\n\tfloat normK = 0.;\n\tfloat f = 4.;\n\tfloat amp = 1.;\n\tint iCount = 0;\n\tfor (int i = 0; i<50; i++){\n\t\tn+=amp*noise(p, f);\n\t\tf*=2.;\n\t\tnormK+=amp;\n\t\tamp*=persistance;\n\t\tif (iCount == res) break;\n\t\tiCount++;\n\t}\n\tfloat nf = n/normK;\n\treturn nf*nf*nf*nf;\n}\n\nfloat hash13(vec3 p3) \n{\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nivec2 snap2axis(vec2 dir)\n{\n    if(abs(dir.x) > abs(dir.y))    \n        return dir.x < 0.0 ? ivec2(-1.0,0.0) : ivec2(1.0,0.0);\n    else\n        return dir.y < 0.0 ? ivec2(0.0,-1.0) : ivec2(0.0,1.0);    \n}\n\nvec2 total_dir(vec2 seed)\n{\n    vec2 total;\n    int i=8;\n    for(; i<=64; i+=8)\n    {\n        float hash = 2.0*M_PI*hash13(vec3(ivec2(seed/vec2(i)),(iFrame+500)/i));\n        vec2 randDir = vec2(cos(hash),sin(hash));\n        total += randDir;\n    }\n    \n    total/=vec2(float(i)/8.);\n    total = vec2(snap2axis(total));\n    return total;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 seed = fragCoord;\n    vec4 last = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    //hasFood, patrolSig, foodSig, isActive\n    vec4 state = vec4(last.x,last.y-1.0/pSigAm,last.z-1.0/pSigAm,0.0);\n    \n    if(iFrame==0 || keyPressed(82,iChannel1) > 0.5)\n    {\n        uvec2 V = uvec2(fragCoord);\n        float h = hash13(vec3(fragCoord,iFrame));\n        if(h>0.999) state = vec4(0,1,0,1);\n        h = pNoise(seed, 0);\n        if(h<0.005) state = vec4(1,0,0,0);\n    }\n    else\n    {\n        for(float i=0.0; i<2.0; i+=0.5)\n        {\n            ivec2 off = ivec2(cos(i*M_PI),sin(i*M_PI));\n            ivec2 nseed = ivec2(fragCoord)+off;\n            vec4 neibr = texelFetch(iChannel0, nseed, 0);\n            if(neibr.w > 0.5)\n            {\n                vec2 randDir = total_dir(vec2(nseed));\n                if(last.x==1.) randDir=vec2(-off); //food is priority\n                if(off==-ivec2(randDir))\n                {\n                    state = vec4(last.x,1,0,1);\n                    if(last.x==1.) state = vec4(1,0,1,1);\n                    break;\n                }\n            }\n        }     \n    }\n    \n    fragColor = vec4(state);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float keyPressed(int keyCode, sampler2D ch) \n{ return texture(ch, vec2((float(keyCode) + 0.5) / 256., .5/3.)).r; }","name":"Common","description":"","type":"common"}]}