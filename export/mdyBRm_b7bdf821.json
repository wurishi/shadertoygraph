{"ver":"0.1","info":{"id":"mdyBRm","date":"1698662511","viewed":106,"name":"Aurora Bubble","username":"INCHMAN1900","description":"Simulating 2D noise using 1D noise","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define res iResolution.xy\n\nfloat random(float x) {\n    return fract(sin(754.213+x*3597.623)*954.23);\n}\n\nfloat noise(float x) {\n    float i=floor(x);\n    float f=fract(x);\n    return mix(random(i),random(i+1.),smoothstep(0.,1.,f));\n}\n\nvec3 bubble(vec2 uv) {\n    float a = atan(uv.y,uv.x);\n    float n=sin(a)*a*uv.y*2.;\n    float r=noise(n+iTime)*.1+.6;\n    float c=noise(n+iTime*.2);\n    vec3 col = vec3(smoothstep(r+.002,r,length(uv)));\n    col*=vec3(c,.7,c*.7+.6);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-res)/res.y;\n    fragColor = vec4(bubble(uv),1.);\n}","name":"Image","description":"","type":"image"}]}