{"ver":"0.1","info":{"id":"Mc2BRw","date":"1726766161","viewed":128,"name":" Volumetric Fur Ball hlsl","username":"oleg304","description":"from https://www.shadertoy.com/view/dtXGzH","likes":7,"published":1,"flags":0,"usePreview":1,"tags":["3d","raymarching","sss","ray","volume","raycasting","color","volumetric","raymarcher","hair","scattering","fur","atmosphere","rayleigh","scatter"],"hasliked":0,"parentid":"dtXGzH","parentname":"Volumetric Fur Balls (445 chars)"},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Forked https://www.shadertoy.com/view/dtXGzH\n\n// HLSL -> GLSL\n#define float2   vec2\n#define float3   vec3\n#define float4   vec4\n#define lerp     mix\n#define atan2    atan\n#define frac     fract\n#define fmod     mod\n#define ddx     dFdx\n#define ddy     dFdy\n#define float2x2 mat2   \n#define float3x3 mat3\n#define mul(a, b) a*b \n#define SamplerState float\n#define Texture2D float\n#define Texture2DSample(iChannel0, texSampl, uv) texture(iChannel0, uv)\n// float3 rg = Texture2DSample(tex, texSampl, uv);\n#define ddx dFdx\n#define ddy dFdy\n#define saturate(oo) clamp(oo, 0.0, 1.0)\n// static const int constArray[4] = { 1, 2, 3, 4 };\n//----------------------------------------------\n//struct Func {\n\nfloat f(float3 p) {\n    return max(0., 1.1-length(p)-.1*\n    texture(iChannel0\n    // Texture2DSample(tex, texSampl\n    ,p.xy).r-.04*sin(sin(4.*p.x)+15.*p.y+6.*iTime));\n}\n\nfloat4 res (float2 p, float time, float amp, Texture2D tex0, SamplerState ts){   \n   // iTime = time, amplitude = amp; tex = tex0; texSampl = ts;   \n    float3 d = float3((p-float2(.8,.5))-.0,1.), o=d*2.-float3(0.,0.,3.),\n        a=float3(1.,1.,1.)*4., grad =float3(.6,.9,.8);\n    float4  c=float4(0.,0.,0.,1.);\n    float z =0., z0;    \n    for (int i=0; i<32; i++){ \n        a*=grad; o+=d*.05;\n        z0 =f(o); z+=z0; // alpha\n        c.rgb+=a*(1.-z0/3.)*max(.0,(z0-f(o+.07)));\n        }\n   c = sqrt(c/(.7+c));\n   c.a =clamp(0.,1.,sqrt(z/(.5+z)));\n   return float4(c); \n}\n\n//float iTime, amplitude; Texture2D tex; SamplerState texSampl; }; Func f; return f.res(tc, t0, amp, tex, texSampler);\n\n//// HLSL -> ShaderToy\nvoid mainImage(out float4 fragColor, in float2 fragCoord) {    \n    float2 uv\t= fragCoord.xy / iResolution.y;\n    Texture2D tex;\n    fragColor = vec4(res(uv, iTime, 140., tex, 1.));\n}\n","name":"Image","description":"","type":"image"}]}