{"ver":"0.1","info":{"id":"mtsfzf","date":"1693307987","viewed":127,"name":"SampleSphere ByMrRice","username":"MrRice","description":"一个简单的小球demo，还未完善，算半成品吧","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["3d","sphere"],"hasliked":0,"parentid":"-1","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//作者：MRRice\n//github:https://github.com/soBigRice\n//喜欢图形的小伙伴认识一下吧\n\n\n\n//开始计算法线，normal\nvec3 computerNormal(vec3 position,vec3 center){\nvec3 normalColor=normalize(position-center);\nreturn normalColor;\n}\n\n//开始计算光照\n\n\n\n\n//开始创建小球球\nvec3 createSphere(vec2 uvs,vec3 center,float radius){\nvec2 uv=uvs*center.x;\n   float val=distance(center.yz,uv);\n   vec3 outColor=vec3(0.);\n   if(val<=radius){\n   //开始计算到屏幕的距离（假设屏幕距离是1）\n   float sDis=sqrt(radius*radius-val*val);\n   vec3 position=vec3(sDis+center.x,uv.x,uv.y);\n   vec3 normal=computerNormal(position,vec3(center));\n   outColor=normal;\n \n  } \n   return outColor;\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=vec2(0.5);\n    uv.x*=iResolution.x/iResolution.y;\n    //uv*=2.;//uv缩放一下\n    \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col;\n\n    float tDis=cos(iTime*2.)*6.;\n    //计算中心点\n    for(int a=0;a<4;a++){\n     if(col==vec3(0.)){\n     col+= createSphere(uv,vec3(3.+float(a)/2.,sin(iTime)/tDis*float(a),cos(iTime)/tDis*float(a)),0.4);\n     }\n    }\n\n   \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}