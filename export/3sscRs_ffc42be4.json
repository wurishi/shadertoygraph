{"ver":"0.1","info":{"id":"3sscRs","date":"1585460420","viewed":873,"name":"Caustic study","username":"profhua","description":"trying to understand how it work","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["caustic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//***trying to understand the shader form Dave_Hoskins \n//***https://www.shadertoy.com/view/MdKXDm\n\n//***rewrite this in a more nature way\n//***remove the sine part to solve temporal scale problem\n\n#define scale 1.2\n\nvoid mainImage(out vec4 fragcolor, vec2 uv)\n{\n    \n    //***imaging an axis-aligned plane in space\n    float t = iTime;\n    mat3 rot = mat3(-2,-1,2, 3,-2,1, 1,2,2);\n\tvec3 pos = vec3(uv+t*1e2,t*2e2);\n    \n    float dist = 1.;\n    \n    //***rotate the plane&&calc distance to cell center then get minimum of three\n    float s[3] = float[3](.32,.28,.26);\n    for(int i = 0;i<3;i++)\n    {\n    \tpos *= rot*s[i];\n    \tdist = min(dist,length(.5-fract(pos/2e2*scale)));\n    }\n    \n\n    fragcolor = pow((dist), 7.)*25.+vec4(0,.35,.5,1.);\n    \n    //***debug uv\n   \t//k = vec4(fract(pos/2e2),1.);\n    \n    \n}\n ","name":"Image","description":"","type":"image"}]}