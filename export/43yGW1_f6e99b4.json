{"ver":"0.1","info":{"id":"43yGW1","date":"1717570140","viewed":63,"name":"colorful spinner","username":"brainexe","description":"Shader made for CMPM 130","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nfloat line(vec2 A, vec2 B, vec2 C) {\n\tvec2 AB = B - A;\n    vec2 AC = C - A;\n\n    float t = dot(AC, AB) / dot(AB, AB);\n    t = min(1.0, max(0.0, t));\n    \n    vec2 Q = A + t*AB;\n    \n    float dist = length(Q - C);\n    return smoothstep(-0.01, -1.0*dist, -0.012) + smoothstep(0.0, dist, 0.012);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 C = vec2(fragCoord.x - 0.5*iResolution.x, fragCoord.y - 0.5*iResolution.y) / iResolution.y;\n\n    vec3 color = vec3(0.0);\n    \n    for (int i = 0; i < 20; i++) {\n        float r = 0.8;\n        float ang = float(i)*0.1*PI;\n        vec2 dir = vec2(cos(ang), sin(ang))*r;\n        float t = float(i)*0.1*PI;\n        vec3 col = vec3(sin(t)*0.5 + 0.5, sin(t + PI*0.5)*0.5 + 0.5, sin(t + PI)*0.5 + 0.5);\n        \n        vec2 A = dir*0.5;\n        vec2 B = vec2(0.0);\n        \n        color += line(A, B, C) * col * 4.0 * pow(1.0 - distance(fragCoord, iMouse.xy)/iResolution.y, 4.0);\n    }\n\n    fragColor = vec4(1.0-exp2(-1.0*vec3(color)), 1.0);\n}","name":"Image","description":"","type":"image"}]}