{"ver":"0.1","info":{"id":"NtcyWn","date":"1659519537","viewed":341,"name":"Smooth Radial progress bar","username":"garmede","description":"just Radial Progress bar","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["radial","progressbar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define THICKNESS 0.05\n#define RADIUS 0.4\n#define AA (1.0 / iResolution.y)\n\nfloat DrawCircle(vec2 uv, vec2 p, float r)\n{\n    uv += p;\n    return smoothstep(r+AA, r-AA, length(uv));\n}\n\nvec2 RotationUV(vec2 uv, float d)\n{\n    float s = sin(d);\n    float c = cos(d);\n    mat2 rotMatrix = mat2(c, -s, s, c);\n    return uv * rotMatrix;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //float aspect = iResolution.x / iResolution.y;\n    //vec2 uv = fragCoord/iResolution.xy;\n    //uv -= 0.5;\n    //uv.x *= aspect;\n    \n    //float outCircle = DrawCircle(uv, vec2(0,0), RADIUS + THICKNESS);\n    //float innerCircle = DrawCircle(uv, vec2(0,0), RADIUS - THICKNESS);\n    //float circle = outCircle - innerCircle;\n    \n    // Thanks to FabriceNeyret2\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float circle = smoothstep(RADIUS+AA, RADIUS-AA, abs(length(uv) - RADIUS) + RADIUS - THICKNESS);\n    float radial = (atan(uv.x, -uv.y) / 3.14159265359 * 0.5) + 0.5;\n    float time = iTime / (3.14159265359 * 2.0);\n    radial += time;\n    circle *= step(fract(radial), fract(time));\n    \n    circle = max(circle, DrawCircle(uv, vec2(0,-RADIUS), THICKNESS));\n    circle = max(circle, DrawCircle(RotationUV(uv, iTime), vec2(0,-RADIUS), THICKNESS));\n\n    fragColor = vec4(circle, circle, circle, 1.0);\n}","name":"Image","description":"","type":"image"}]}