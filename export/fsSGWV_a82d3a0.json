{"ver":"0.1","info":{"id":"fsSGWV","date":"1617933059","viewed":77,"name":"Shading Example","username":"lumic","description":"Simple playground to try out DF based shading","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["educational"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\n\nvec2 squareFrame(vec2 screenSize, vec2 coord) {\n  vec2 position = 2.0 * (coord.xy / screenSize.xy) - 1.0;\n  position.x *= screenSize.x / screenSize.y;\n  return position;\n}\n\nfloat distanceToCircle(vec2 p, vec2 center, float r)\n{\n    return length(p - center) - r;\n}\n\nfloat distanceToBox(vec2 p, vec2 bottomLeft, vec2 topRight)\n{\n    vec2 center = 0.5 * (bottomLeft + topRight);\n    vec2 extents = 0.5 * (topRight - bottomLeft);\n    vec2 d = abs(p -  center) - extents;\n    return length(max(d, vec2(0, 0))) + min(max(d.x, d.y), 0.0);\n}\n\nfloat distanceToMandelbrot( in vec2 c )\n{\n    c.x =  -abs(c.x);\n        c.y =  -abs(c.y);\n\n\n    // iterate\n    float di =  1.0;\n    vec2 z  = vec2(0.0);\n    float m2 = 0.0;\n    vec2 dz = vec2(0.0);\n    for( int i=0; i<300; i++ )\n    {\n        if( m2>1024.0 ) { di=0.0; break; }\n\n\t\t// Z' -> 2·Z·Z' + 1\n        dz = 2.0*vec2(z.x*dz.x-z.y*dz.y, z.x*dz.y + z.y*dz.x) + vec2(1.0,0.0);\n\t\t\t\n        // Z -> Z² + c\t\t\t\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n\t\t\t\n        m2 = dot(z,z);\n    }\n\n    // TODO share links for fractal coloring schemes\n    // distance\t\n\t// d(c) = |Z|·log|Z|/|Z'|\n\tfloat d = 0.5*sqrt(dot(z,z)/dot(dz,dz))*log(dot(z,z));\n    if( di>0.5 ) d=0.0;\n\t\n    return d;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = squareFrame(iResolution.xy, fragCoord);\n  \n  float d;\n\n  vec2 p = (uv - vec2(0.6, 0.0)) * 1.0f;\n\n  // d = distanceToCircle(uv, vec2(0,0), 0.4);\n  d = distanceToMandelbrot(p);\n  // d = distanceToBox(...)\n\n  \n  // Thresholding, gradients, etc\n  vec4 col = vec4(1.0,1.0,1.0,1.0);\n  if (d < 0.0001) { col = vec4(cos(d * 100.0),0,0,0); }\n  if (d > 0.04) { col = vec4(0,sin(d * 100.0),0,0); }\n\n\n  fragColor = col;\n}","name":"Image","description":"","type":"image"}]}