{"ver":"0.1","info":{"id":"M3lfRH","date":"1728295008","viewed":27,"name":"single pass sand","username":"noobdawn","description":"test","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool getCurrentSand(in vec2 fragCoord)\n{\n    if (fragCoord.y < 0.0)\n        return true;\n    if (fragCoord.y >= iResolution.y)\n        return false;\n    if ((fragCoord.x < 0.0) || (fragCoord.x >= iResolution.x))\n        return true;\n    return isSand(texture(iChannel0, fragCoord/iResolution.xy));\n}\n\nfloat sampleCurrentSand(in vec2 fragCoord)\n{\n    if (fragCoord.y < 0.0)\n        return 1.0;\n    if (fragCoord.y >= iResolution.y)\n        return 0.0;\n    if ((fragCoord.x < 0.0) || (fragCoord.x >= iResolution.x))\n        return 1.0;\n    return textureLod(iChannel0, fragCoord/iResolution.xy, 3.0).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    bool sand = getCurrentSand(fragCoord);\n    if (sand)\n    {\n        // 采样周围5x5的区域，计算法线\n        vec3 normal = vec3(0.0, 0.0, 0.0);\n        for (int i = -2; i <= 2; i++)\n        {\n            for (int j = -2; j <= 2; j++)\n            {\n                vec2 offset = vec2(i, j) * 4.0;\n                float neighborSand = sampleCurrentSand(fragCoord + offset);\n                normal.x += offset.x * neighborSand;\n                normal.y += offset.y * neighborSand;\n            }\n        }\n        normal.xy /= 120.0;\n        normal.z = 1.0 - sqrt(dot(normal.xy, normal.xy));\n        fragColor = vec4(mix(darkColor, lightColor, dot(normal, lightDir)), 1.0);\n    }\n    else\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define BLOCK_SIZE 25.0\n#define PIXEL_SIZE 4.0\n\nvec4 backgroundColor = vec4(0.0, 0.0, 0.0, 1.0);\nvec4 sandColor = vec4(1.0, 1.0, 1.0, 1.0);\nvec3 lightDir = normalize(vec3(0.3, -0.7, 0.1));\nvec3 lightColor = vec3(1.0, 1.0, 0.1);\nvec3 darkColor = vec3(0.2, 0.2, 0.2);\n\n\nbool isSand(in vec4 color)\n{\n    return color.x == 1.0;\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    bool sand = false;\n    \n    // 产生砂砾\n    vec2 mousePos = iMouse.xy;\n    // 按下鼠标开始生成\n    if (iMouse.z > 0.0)\n    {\n        vec2 d = abs(mousePos - fragCoord);\n        if ((d.x <= BLOCK_SIZE) && (d.y <= BLOCK_SIZE))\n            sand = true;\n    }\n\n    // 合并历史帧中的砂砾\n    bool historySand = isSand(texture(iChannel0, fragCoord/iResolution.xy));\n    if (historySand)\n        sand = true;\n\n    // 按下C键清空所有\n\n    fragColor = sand ? sandColor : backgroundColor;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"bool getCurrentSand(in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 color = texture(iChannel0, uv);\n    return isSand(color);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = backgroundColor;\n    bool sand = getCurrentSand(fragCoord);\n    if (!sand)\n    {\n        // 如果上一格是砂砾，当前格也是砂砾\n        vec2 up = fragCoord + vec2(0.0, 1.0);\n        bool upSand = getCurrentSand(up);\n        // 考虑是否触及边界\n        if (up.y >= iResolution.y)\n            upSand = false;\n        if (upSand)\n            sand = true;\n    }\n    else\n    {\n        // 如果下一格是空白，当前格也是空白\n        vec2 down = fragCoord + vec2(0.0, -1.0);\n        bool downSand = getCurrentSand(down);\n        // 考虑是否触及边界\n        if (down.y < 0.0)\n            downSand = true;\n        if (!downSand)\n            sand = false;\n    }\n\n    fragColor = sand ? sandColor : backgroundColor;\n\n    // 第一帧清空整个Buffer\n    if (iFrame == 0)\n        fragColor = backgroundColor;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"bool getCurrentSand(in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 color = texture(iChannel0, uv);\n    return isSand(color);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = backgroundColor;\n    bool sand = getCurrentSand(fragCoord);\n    float odd = iFrame % 2 == 0 ? 1.0 : -1.0;\n    if (!sand)\n    {\n        // 查看左上角和左侧是否有砂砾\n        vec2 upSide = fragCoord + vec2(odd, 1.0);\n        vec2 left = fragCoord + vec2(odd, 0.0);\n        bool upSideSand = getCurrentSand(upSide);\n        bool leftSand = getCurrentSand(left);\n        // 考虑是否触及边界\n        if (left.y >= iResolution.y)\n            leftSand = false;\n        if ((upSide.y >= iResolution.y) || (upSide.x < 0.0) || (upSide.x >= iResolution.x) || (upSide.y < 0.0))\n            upSideSand = false;\n        // 当左上角和右侧都有砂砾时，当前格也是砂砾\n        if (upSideSand && leftSand)\n            sand = true;\n    }\n    else\n    {\n        vec2 down = fragCoord + vec2(0.0, -1.0);\n        vec2 downSide = fragCoord + vec2(-odd, -1.0);\n        bool downSand = getCurrentSand(down);\n        bool downSideSand = getCurrentSand(downSide);\n        // 考虑是否触及边界\n        if (down.y < 0.0)\n            downSand = false;\n        if ((downSide.y < 0.0) || (downSide.x < 0.0) || (downSide.x >= iResolution.x) || (downSide.y >= iResolution.y))\n            downSideSand = true;\n        if (downSand && !downSideSand)\n            sand = false;\n    }\n    fragColor = sand ? sandColor : backgroundColor;\n    if (iFrame == 0)\n        fragColor = backgroundColor;\n}","name":"Buffer C","description":"","type":"buffer"}]}