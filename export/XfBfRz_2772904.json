{"ver":"0.1","info":{"id":"XfBfRz","date":"1724539309","viewed":43,"name":"random julia set thing idk","username":"tsa4","description":"implementation of the code from this site: https://geometricolor.wordpress.com/2013/02/28/fractal-surprise-from-complex-function-iteration/  FREE TO COPY AS THIS ISNT MINE","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","juliaset","ranbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define ITER 40\n#define RSQMAX 100.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    float range = 1.2;\n    float c = 0.4 - 0.002 * iTime;\n    \n    vec2 z = uv * (2.0 * range);\n    float phiKor = 0.0;\n    vec2 dz = vec2(1.0, 0.0);\n    \n    for (int k = 0; k < ITER; k++) {\n        if (dot(z, z) > RSQMAX) break;\n        \n        phiKor += atan(z.y, z.x);\n        \n       \n        dz = 2.0 * vec2(z.x * dz.x - z.y * dz.y, z.x * dz.y + z.y * dz.x);\n        \n        \n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n    }\n    \n    float phi = atan(z.y, z.x) - phiKor;\n    phi = 0.5 * phi / PI;\n    phi = (phi - floor(phi)) * 2.0 * PI;\n    \n    vec3 col = vec3(phi / PI * 0.5, 1.0, 1.0);\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(col.xxx + K.xyz) * 6.0 - K.www);\n    fragColor = vec4(col.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), col.y), 1.0);\n}","name":"Image","description":"","type":"image"}]}