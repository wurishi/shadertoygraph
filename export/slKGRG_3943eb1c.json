{"ver":"0.1","info":{"id":"slKGRG","date":"1648625624","viewed":230,"name":"elder vortex","username":"Carandiru","description":"non-scientific vortex","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["flowmap"],"hasliked":0,"parentid":"ftG3RG","parentname":"Flowmap test"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = textureLod(iChannel0, uv, 0.0f).rgb;\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define ITERATIONS 5.0f\n\n\nconst float FLOW_DISTANCE = 0.25;\nconst float FLOW_SPEED = 0.618;\n\n// https://www.shadertoy.com/view/WlfXRN\nvec3 inferno(float t) {\n\n    const vec3 c0 = vec3(0.0002189403691192265, 0.001651004631001012, -0.01948089843709184);\n    const vec3 c1 = vec3(0.1065134194856116, 0.5639564367884091, 3.932712388889277);\n    const vec3 c2 = vec3(11.60249308247187, -3.972853965665698, -15.9423941062914);\n    const vec3 c3 = vec3(-41.70399613139459, 17.43639888205313, 44.35414519872813);\n    const vec3 c4 = vec3(77.162935699427, -33.40235894210092, -81.80730925738993);\n    const vec3 c5 = vec3(-71.31942824499214, 32.62606426397723, 73.20951985803202);\n    const vec3 c6 = vec3(25.13112622477341, -12.24266895238567, -23.07032500287172);\n\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n//THETA is the golden angle in radians: 2 * PI * ( 1 - 1 / PHI )\n#define THETA 2.399963229728653 \n\nvec2 spiralPosition(float i, float n)\n{\n    float angle = i * THETA; \n    float radius = i / n;\n    return vec2( radius * cos( angle ), radius * sin( angle ) );\n}\n\nvec2 flowmap(in vec3 iv, in vec2 uv, in float bn)\n{\n    vec2 dir = uv - spiralPosition(iv.x - bn * iv.z, iv.y) - 0.5f;\n\n    return normalize(dir);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float bn = textureLod(iChannel1, fragCoord / 1024.0f, 0.0f).r;\n    \n    const float c0 = ITERATIONS;\n    float n0 = length(iChannelResolution[0].xy) * c0;\n    float in0 = 1.0f / n0;\n    \n    float s0 = 0.0f;\n    float t = iTime + 160.0f;\n    \n    for ( float i = 0.0f; i < c0; ++i) {\n    \n        vec2 flow = flowmap(vec3(t + i, n0, in0), uv, bn);\n\n        float phase = (((3.0f))*FLOW_SPEED + 0.5);\n\n        vec2 f1 = flow * phase * FLOW_DISTANCE;\n   \n        float s1 = texture(iChannel0, uv + f1).x;\n        \n        float d1 = distance(uv - 0.5, flow);\n        \n        s0 += s1*d1;\n    }\n    \n    s0 = s0/c0;\n    \n    vec3 col = inferno(s0*s0)*s0;\n    col += inferno(s0*s0*s0);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}