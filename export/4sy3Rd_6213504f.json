{"ver":"0.1","info":{"id":"4sy3Rd","date":"1455768998","viewed":180,"name":"mandelbrot turbo test","username":"asneakyfatcat","description":"Just a simple implementation of the mandelbrot set with orbit maps to color","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","orbit","plane","complex","trap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // zoom coordinate from iq's 2tweet zoom\n    vec2 R = iResolution.xy,uv =vec2(-.745,.186)+ 3.*(fragCoord/R.y-.5)*pow(.002,1.+cos(.1*iTime));\n    vec2 z = vec2(0.);\n    vec4 col = vec4(0.);\n    int trap=0;\n    \n    // step through the radical mandelbrot set\n    // vec2 z holds a+bi\n    // trap holds orbit trap count\n    // c is point at uv\n    // z gets set to vec2 equiv equiv of (a+bi)^2 + c\n    for(int i = 0; i < 512; i++){\n        if(dot(z,z)>100.){trap = i;break;}\n        z = mat2(z,-z.y,z.x)*z + uv;\n    }\n\tfloat orb = sqrt(float(trap))/64.;\n    fragColor = (orb!=0. ? 1.-orb*vec4(9.,5.,3.,0.):vec4(0.));\n}","name":"Image","description":"","type":"image"}]}