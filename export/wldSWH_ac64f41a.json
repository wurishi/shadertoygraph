{"ver":"0.1","info":{"id":"wldSWH","date":"1580894197","viewed":21545,"name":"Coming Alive II","username":"NinaFranziska","description":"static but alive, mesmerizing and alienating","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy;\n\n   uv -= vec2(0.5,0.5); //we make the whole thing black\n   uv *= 2.0; //we remap the coordinates to become between -1 and 1\n float distance = length(uv);\n   float angle = atan(uv.y,uv.x);\n    \n   float color = sin(angle+distance*10.0)*cos(angle+distance*iTime - iTime)*6.0;\n\n   fragColor = vec4(color, color, color, color); \n}\n\n\n//trippy 1\n  /* float distance = sin(length(uv));\n   float angle = atan(uv.y,uv.x);\n    \n   float color = sin(angle+distance*10.0)*cos(angle+distance*iTime)*6.0;\n   fragColor = color*vec4(1.0, 1.0, 1.0, 1.0); \n\n//real beautiful trippy\n  float distance = length(uv);\n   float angle = atan(uv.y,uv.x);\n    \n   float color = sin(angle+distance*10.0)*cos(angle+distance*iTime)*6.0;\n   fragColor = color*vec4(1.0, 1.0, 1.0, 1.0); \n\n\n//trippy variation (using *iTime-iTime) (for instagram)\n    \n   float color = sin(angle+distance*10.0)*cos(angle+distance*iTime - iTime)*6.0;\n   fragColor = vec4(color, color, color, 1.0); \n\n//crazy trippy (when multiplying time with a high number - you get many cycles/arms\n   float distance = length(uv);\n   float angle = atan(uv.y,uv.x);\n    \n   float color = sin(angle+distance*20.0*iTime)*cos(angle+distance*iTime)*6.0;\n   fragColor = color*vec4(1.0, 1.0, 1.0, 1.0);\n}\n\n\n//trippy in colours\n   float color = sin(angle+distance*10.0)*cos(angle+distance*iTime - iTime)*6.0;\n\tfloat color2 =  sin(angle+distance*10.0*iTime)\n   fragColor = vec4(color, color2, 1.0, 1.0); \n\n//trippy in rainbow colours\n    float color = sin(angle+distance*10.0)*cos(angle+distance*iTime - iTime)*6.0;\n\tfloat color2 =  sin(angle+distance*10.0+iTime)*cos(angle+distance*iTime - iTime);\n    float color3 =  sin(angle+distance*10.0+iTime)*cos(angle+distance*iTime)*3.0;\n   fragColor = vec4(color, color2, color3, 1.0); \n\n*/","name":"Image","description":"","type":"image"}]}