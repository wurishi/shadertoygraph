{"ver":"0.1","info":{"id":"7sjXRy","date":"1620513922","viewed":68,"name":"Circular Animated Julia Set","username":"wetzecam","description":"Julia Set defined by: Z_n+1 = Z_n^2 + C;   where C is allowed to be any complex number... The animation sweeps C around the circle of radius 1.1 in the complex plane.\n\nEscape time is used to determine the coloring scheme... ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SerpinskiEscapeTime(vec2 u){\n    float numits=65.0;\n    float R = 200.0;\n    float n;\n    \n    for(n=0.0;n<numits;n++){\n        if (u.y>0.5){\n            u.x = 2.0*u.x;\n            u.y = 2.0*u.y-1.0;\n        }\n        else if (u.x>0.5 && u.y <= 0.5){\n            u.x = 2.0*u.x-1.0;\n            u.y = u.y;\n        }\n        else{\n            u.y = 2.0*u.y;\n            u.x = 2.0*u.x;\n        }\n        \n        if(length(u)>R){ return n; }\n    }\n    \n    return n;\n}\n\nfloat JuliaEscapeTime(vec2 u, vec2 seed){\n    float numits=1005.0;\n    float R = 2.0;\n    float n;\n \n     for(n=0.0;n<numits;n++){\n        float tmpx = u.x;\n        float tmpy = u.y;\n        \n        u.x = tmpx*tmpx - tmpy*tmpy + seed.x;\n        u.y = 2.0*tmpx*tmpy + seed.y;\n        \n        if(length(u)>R){ return n; }\n    }\n    \n    return n;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.0*(fragCoord/iResolution.xy) - vec2(1.0,1.0);\n    \n    vec2 Cval = 1.1*vec2(cos(iTime),sin(iTime));\n    \n    float escapeTime = JuliaEscapeTime(uv,Cval);\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*vec3(cos(escapeTime*2.0),0.0,0.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}