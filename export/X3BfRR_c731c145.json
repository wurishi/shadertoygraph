{"ver":"0.1","info":{"id":"X3BfRR","date":"1729093446","viewed":12,"name":"CIS566-lab4-03","username":"wangrp","description":"homegirl needs a rainbow!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["nyan"],"hasliked":0,"parentid":"stGBDR","parentname":"naked nyan"},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rainbowTail(vec2 uv, float time) {\n    // Generate rainbow colors based on the x position\n    float rainbowPos = fract(uv.x - time * 0.2);  // Time-based movement for trailing effect\n    \n    // Map rainbowPos to colors (red, orange, yellow, green, blue, purple)\n    vec3 color;\n    if (rainbowPos < 0.16) color = vec3(1.0, 0.0, 0.0);  // Red\n    else if (rainbowPos < 0.32) color = vec3(1.0, 0.5, 0.0);  // Orange\n    else if (rainbowPos < 0.48) color = vec3(1.0, 1.0, 0.0);  // Yellow\n    else if (rainbowPos < 0.64) color = vec3(0.0, 1.0, 0.0);  // Green\n    else if (rainbowPos < 0.80) color = vec3(0.0, 0.0, 1.0);  // Blue\n    else color = vec3(0.5, 0.0, 1.0);  // Purple\n    \n    // Apply transparency to simulate fading tail\n    float fade = smoothstep(0.0, 0.3, uv.x);  // Tail fades over distance\n    return mix(color, vec3(0.0), fade);  // Fade the color towards black\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates based on iResolution.y for aspect ratio correction\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    vec2 realUV = fragCoord.xy / iResolution.xy;\n    \n    // Scale and translate UV coordinates\n    uv *= 2.;\n    uv -= vec2(2.5, 0.5);\n    uv = clamp(uv, 0., 1.);\n\t\n    // Frame calculation for Nyan Cat animation\n\tfloat frame = floor(mod(iTime * 10.0, 6.0));\n\n    // Width of one frame in the sprite sheet\n\tfloat nyanWidthUV = 40.0 / 256.0;\n\tuv.x = (uv.x + frame) * nyanWidthUV;\n    \n    // Apply vertical sinusoidal movement\n    uv.y += sin(iTime * 5.0) * 0.18;\n    \n    // Fetch the texture color for Nyan Cat\n\tvec4 nyan = texture(iChannel0, uv);\n\tvec3 col = nyan.xyz;\n    \n    if(nyan.w == 0.0){\n        // Generate and display the rainbow tail\n        vec3 rainbow = rainbowTail(realUV, iTime);\n        fragColor = vec4(rainbow, 1.0);\n    }\n    else{\n        fragColor = vec4(col, 1.0);\n    }\n}\n","name":"Image","description":"","type":"image"}]}