{"ver":"0.1","info":{"id":"Mc2BRd","date":"1725393195","viewed":37,"name":"sep32024","username":"brendanluu","description":"zen silence, thinking better","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["popart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.027,0.494,0.690);\n    vec3 b = vec3(0.333,0.169,0.263);\n    vec3 c = vec3(0.310,0.012,0.216);\n    vec3 d = vec3(0.416,0.165,0.165);\n    \n    return a + b*cos(6.28318*(c*t-d) );\n}\n\nfloat vignette(vec2 uv, float radius, float softness) {\n    float d = length(uv);\n    float v = smoothstep(radius, radius - softness, d);\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    float d = length(uv);\n    vec3 col = palette(iTime / 3.0);\n    d = sin(d * 3.0 + (iTime) / 4.0) / 8.0;\n    d = abs(d);\n    d = 0.09 / d;\n    finalColor += col / d;\n \n    // Apply vignette\n    float vig = vignette(uv, 0.95, 0.85);\n    finalColor *= vec3(vig);\n    \n    // Convert to grayscale while preserving luminance\n    float luminance = dot(finalColor, vec3(0.299, 0.587, 0.114));\n    \n    fragColor = vec4(vec3(luminance), 1.0);\n}","name":"Image","description":"","type":"image"}]}