{"ver":"0.1","info":{"id":"MXSfzD","date":"1729244690","viewed":21,"name":"marvin-learn01","username":"marvin","description":"marvin-learn01","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["marvinlearn01"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float N21(vec2 p) {\n    return fract( sin(p.x * 10. + p.y * 6774.) * 7647. );\n}\n\nfloat SmoothNoise (vec2 uv) {\n    vec2 lv = fract( uv );\n    vec2 id = floor( uv );\n    \n    lv = lv * lv * ( 3. - 2.*lv );\n    \n    float bl = N21( id );\n    float br = N21( id + vec2(1, 0) );\n    float b = mix( bl, br, lv.x );\n    \n    float tl = N21( id + vec2(0, 1) );\n    float tr = N21( id + vec2(1, 1) );\n    float t = mix( tl, tr, lv.x );\n    \n    float c = mix( b, t, lv.y );\n\n    return c;\n}\n\nfloat SmoothNoise2 (vec2 uv) {\n    float c = SmoothNoise( uv * 4. );\n    c += SmoothNoise( uv * 8. ) * .5;\n    c += SmoothNoise( uv * 16. ) * .25;\n    c += SmoothNoise( uv * 32. ) * .125;\n    c += SmoothNoise( uv * 64. ) * .0625;\n    c += SmoothNoise( uv * 128. ) * .03125;\n    \n    return c / 2.;\n}\n\nfloat SmoothNoise3(vec2 uv, int maxOctaves) {\n    float c = 0.0;\n    float amplitude = 1.0;\n    float frequency = 4.0;\n\n    for (int i = 0; i < maxOctaves; i++) {\n        c += SmoothNoise(uv * frequency) * amplitude;\n        frequency *= 2.0;  // 每次倍增频率\n        amplitude *= 0.5;  // 每次减半振幅\n    }\n\n    return c / 2.0;  // 归一化处理\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    uv += iTime*.1;\n\n    float c = SmoothNoise3( uv, 4 );\n\n    vec3 col = vec3( c );    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}