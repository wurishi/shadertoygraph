{"ver":"0.1","info":{"id":"dsKXWV","date":"1681657947","viewed":126,"name":"deform image","username":"kilika","description":"deform,image","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["deform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Input image\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 inputColor = texture(iChannel0, uv);\n\n    // Subdivision parameters\n    float numDivisions = 10.0;\n    float divisionStrength = 0.05;\n\n    // Deform the image based on mouse position\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    vec2 delta = (uv - mouse) * numDivisions;\n    delta *= 1.0 - pow(length(delta), 2.0) * divisionStrength;\n\n    // Apply the subdivided deformation\n    for (float i = 1.0; i <= numDivisions; i++) {\n        float t = i / numDivisions;\n        vec2 p = fract(delta + vec2(t, t));\n        inputColor = mix(inputColor, texture(iChannel0, p), 0.8);\n    }\n\n    // Output the final color\n    fragColor = inputColor;\n}\n","name":"Image","description":"","type":"image"}]}