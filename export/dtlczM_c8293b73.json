{"ver":"0.1","info":{"id":"dtlczM","date":"1690545168","viewed":79,"name":"shaped dynamic glow","username":"Sirox","description":"practicing making shaders","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["color","glow","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t )\n{\n\n    return vec3(0.638, 0.188, 0.318) + vec3(-0.312, 0.458, 0.428) * cos( 6.28318 * (vec3(2.138, 1.448, 1.) * t + vec3(0., 0.333, 0.667) ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 suv = uv;\n    vec3 res = vec3(0.);\n    for (float i = 0.; i < 2.; i++) {\n        uv = fract(uv * 1.6) - .5;\n        float slen = length(uv) * exp((cos(length(suv) * 3.14) - 0.52839382840284));\n        slen = dot(vec2(slen), vec2(-1.729493, -0.13935));\n        float len = abs(sin(slen * 8. + iTime)) * 2.0;\n        len = .04 / len;\n        res += palette(slen + iTime) * len * 12.;\n    }\n    fragColor = vec4(res, 1.);\n}","name":"Image","description":"","type":"image"}]}