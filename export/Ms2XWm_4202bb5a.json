{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define MAX_ITERATIONS 200\nvec4 getColor(int i)\n{\n    float current = float(i);\n    float maximum = float(MAX_ITERATIONS);\n    float ratio = current/maximum;\n    //return vec4(1.0-ratio); //Gray\n    return 1.0-vec4(0.5+0.5*sin(ratio*5.0),0.5+0.5*cos(ratio*80.0),0.5+0.5*sin(ratio*10.5),0.0); //Trippy\n}\n\nvec2 multiplyComplex(vec2 a, vec2 b)\n{\n    return vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = 1.0/exp(iTime*0.5);\n    vec2 zoomPoint = vec2(2.56422,0.0) + ((-1.0+2.0*iMouse.xy/iResolution.xy)*zoom);\n    vec2 center = -1.0+2.0*vec2(iResolution.x/iResolution.y/2.0,0.5) - zoomPoint;\n\tvec2 c = -1.0+2.0*(fragCoord.xy / iResolution.yy) - zoomPoint;    \n    if(distance(center,c) < 0.01)\n    {\n        fragColor = vec4(1.0,0.0,0.0,1.0);\n        return;\n    }\n    c = (c-center)*zoom + center;\n    vec2 z = vec2(0.0);\n    for(int i = 0; i < MAX_ITERATIONS;++i)\n    {\n        z = multiplyComplex(z,z)+c;\n        float zLength = length(z);\n        if(zLength > 2.0)\n        {\n            fragColor = getColor(i);\n            return;\n        }\n    }\n    fragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Ms2XWm","date":"1412889061","viewed":199,"name":"Mandelbrot Set Zoom","username":"Xytor","description":"Zooming the mandelbrot set until floating point precision limits are reached!\nExplore the surrounding area with the mouse.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","zoom"],"hasliked":0,"parentid":"","parentname":""}}