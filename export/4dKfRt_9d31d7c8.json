{"ver":"0.1","info":{"id":"4dKfRt","date":"1529996071","viewed":247,"name":"low-bit Vs Dither Vs True Color","username":"ned_b","description":"I was looking to add a retro aesthetic to my games, and was astonished to see how well dithering actually makes 4-bit color look like the true color, so I decided to share. This is my first ever published shader :). Thanks IQ for the great website!!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["threshold","dither","dithering","comparison","bayer","ordered"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float bitDepth = 1.333;//4 bit color (this is bits per-color)\n    const float numColors = pow(2.0, bitDepth);\n    const mat4 bayer = mat4(\n    \t0., 8., 2., 10.,\n        12., 4., 14., 6.,\n        3., 11., 1., 9.,\n        15., 7., 13., 5.\n    );\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float bayerVal = bayer[int(mod(fragCoord.x, 4.))][int(mod(fragCoord.y, 4.))];\n    \n    vec3 col = texture(iChannel0, uv).xyz;\n    \n    if(uv.x > 0.333 && uv.x < 2.*0.333){\n    \tcol = col + bayerVal * (1. / (16. * numColors));\n    \tcol = floor(col * numColors) / numColors;\n    }else if(uv.x < 0.333){\n    \tcol = floor(col * numColors) / numColors;\n    }\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}