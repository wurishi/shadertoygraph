{"ver":"0.1","info":{"id":"DtlcW4","date":"1690749845","viewed":163,"name":"skybox template","username":"01000001","description":"A template with which to develop skyboxes. z up.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["utility","skybox","tool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159;\n\nvec3 skybox(vec3 v)\n{\n    float a = 20.;\n    return pow(vec3(sin(v.x*a), sin(v.y*a), sin(v.z*a))*sin(v.x*a)*sin(v.y*a)*sin(v.z*a), vec3(2));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 mv = (2.*iMouse.xy-iResolution.xy)/iResolution.y;\n\n    float z = mv.y*pi*0.5;\n    vec3 camDir = normalize(vec3(sin(mv.x)*cos(z), cos(mv.x)*cos(z), sin(z)));\n    vec3 r = normalize(cross(camDir, vec3(0, 0, 1)));\n    vec3 u = normalize(cross(r, camDir));\n    vec3 v = normalize(camDir + r * uv.x + u * uv.y);\n    vec3 col = skybox(v);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}