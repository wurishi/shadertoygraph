{"ver":"0.1","info":{"id":"4lcXDf","date":"1481777806","viewed":336,"name":"Multilinear Interpolation","username":"Dodecaplex","description":"Click to explore the interior planes of a very colorful tesseract.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["trilinear","interpolation","bilinear","multilinear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// use tetralinear  to interpolate through RGB\n// use tetralinear2 for approximate sRGB\n#define INTERPOLATE tetralinear2\n\n// decrease count to see isolines\n#define BAND_COUNT 256.0\n\nfloat mix2(float a, float b, float t) {\n    a*=a; b*=b;\n\treturn sqrt(mix(a,b,t));   \n}\n\nvec3 bilinear(vec3 a, vec3 b, vec3 c, vec3 d, vec2 t) {\n    return vec3(\n    \tmix(mix(a.r, b.r, t.x), mix(c.r, d.r, t.x), t.y),\n        mix(mix(a.g, b.g, t.x), mix(c.g, d.g, t.x), t.y),\n        mix(mix(a.b, b.b, t.x), mix(c.b, d.b, t.x), t.y)\n    );\n}\n\nvec3 bilinear2(vec3 a, vec3 b, vec3 c, vec3 d, vec2 t) {\n    return vec3(\n    \tmix2(mix2(a.r, b.r, t.x), mix2(c.r, d.r, t.x), t.y),\n        mix2(mix2(a.g, b.g, t.x), mix2(c.g, d.g, t.x), t.y),\n        mix2(mix2(a.b, b.b, t.x), mix2(c.b, d.b, t.x), t.y)\n    );\n}\n\nvec3 trilinear(\n    vec3 u0, vec3 u1, vec3 u2, vec3 u3,\n    vec3 u4, vec3 u5, vec3 u6, vec3 u7,\n    vec3 t\n) {\n\treturn mix(bilinear(u0, u1, u2, u3, t.xy), bilinear(u4, u5, u6, u7, t.xy), t.z);\n}\n\nvec3 tetralinear(\n    vec3 u0, vec3 u1, vec3 u2, vec3 u3,\n    vec3 u4, vec3 u5, vec3 u6, vec3 u7,\n    vec3 u8, vec3 u9, vec3 ua, vec3 ub,\n    vec3 uc, vec3 ud, vec3 ue, vec3 uf,\n    vec4 t\n) {\n    return bilinear(bilinear(u0, u1, u2, u3, t.xy), bilinear(u4, u5, u6, u7, t.xy),\n                    bilinear(u8, u9, ua, ub, t.xy), bilinear(uc, ud, ue, uf, t.xy), t.zw);\n}\n\nvec3 tetralinear2(\n    vec3 u0, vec3 u1, vec3 u2, vec3 u3,\n    vec3 u4, vec3 u5, vec3 u6, vec3 u7,\n    vec3 u8, vec3 u9, vec3 ua, vec3 ub,\n    vec3 uc, vec3 ud, vec3 ue, vec3 uf,\n    vec4 t\n) {\n    return bilinear2(bilinear2(u0, u1, u2, u3, t.xy), bilinear2(u4, u5, u6, u7, t.xy),\n                    bilinear2(u8, u9, ua, ub, t.xy), bilinear2(uc, ud, ue, uf, t.xy), t.zw);\n}\n\nfloat cos2(float x) {\n    float c = cos(x);\n    return c*c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Bottom Left - xy\n    vec3 pal0 = vec3(0.0, 0.0, 0.0);\n    vec3 pal1 = vec3(0.0, 1.0, 0.0);\n    vec3 pal2 = vec3(1.0, 0.0, 0.0);\n    vec3 pal3 = vec3(0.0, 0.0, 1.0);\n    \n    // Bottom Right - xz\n    vec3 pal4 = vec3(cos2(2.275*t), cos2(1.166*t), cos2(4.641*t));\n    vec3 pal5 = vec3(cos2(1.483*t), cos2(3.364*t), cos2(1.742*t));\n    vec3 pal6 = vec3(cos2(2.083*t), cos2(2.935*t), cos2(2.354*t));\n    vec3 pal7 = vec3(cos2(4.236*t), cos2(3.751*t), cos2(3.136*t));\n    \n    // Top Left - yz\n    vec3 pal8 = vec3(cos2(0.509*t), cos2(0.597*t), cos2(0.823*t));\n    vec3 pal9 = vec3(cos2(0.439*t), cos2(0.829*t), cos2(0.023*t));\n    vec3 pala = vec3(cos2(0.787*t), cos2(0.664*t), cos2(0.535*t));\n    vec3 palb = vec3(cos2(0.264*t), cos2(0.696*t), cos2(0.146*t));\n    \n    // Top Right - zw\n    vec3 palc = 0.25 * vec3(cos2(0.275*t), cos2(0.166*t), cos2(0.641*t));\n    vec3 pald = 0.25 * vec3(cos2(0.483*t), cos2(0.364*t), cos2(0.742*t));\n    vec3 pale = 0.25 * vec3(cos2(0.083*t), cos2(0.935*t), cos2(0.354*t));\n    vec3 palf = 0.25 * vec3(cos2(0.236*t), cos2(0.751*t), cos2(0.136*t));\n    \n    fragColor = vec4(\n        INTERPOLATE(\n            pal0, pal1, pal2, pal3,\n            pal4, pal5, pal6, pal7,\n            pal8, pal9, pala, palb,\n            palc, pald, pale, palf,\n            vec4(uv.xy, iMouse.xy/iResolution.xy)\n        ), 1.0\n    );\n    \n    fragColor = floor(fragColor * BAND_COUNT) / BAND_COUNT;\n}","name":"Image","description":"","type":"image"}]}