{"ver":"0.1","info":{"id":"DddyD2","date":"1695513241","viewed":18,"name":"Cloud Shadows(pixelated)","username":"GoodName","description":"Shadow of a cloud passing above; pixilation scale should optimally be even. ","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["experimental"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pixle = 100.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    float pixelScale = iResolution.x/pixle;\n\n    vec4 col = texture(iChannel1, vec2((floor(fragCoord.x/pixelScale)*pixelScale)/iResolution.x, \n        (floor(fragCoord.y/pixelScale)*pixelScale)/iResolution.y));        \n        \n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int CLOUDS = 5;\n\nvec4 cloudPartitians(vec2 pos[CLOUDS], float radius[CLOUDS], vec2 pixle)\n{\n    float darkness = 0.; \n    //sqrt(pow(pixle.x - pos.x, 2.) + pow(pixle.y - pos.y, 2.)) / radius;\n    float a = 0.;\n    \n    \n    for (int i = 0; i < CLOUDS; i+=1)\n    {\n        if (sqrt(pow(pixle.x - pos[i].x, 2.) + pow(pixle.y - pos[i].y, 2.)) <= radius[i])\n        {\n            a += .05;\n            darkness += (((sqrt(pow(pixle.x - pos[i].x, 2.) + pow(pixle.y - pos[i].y, 2.)) / radius[i]) * -1.) + 1.);\n        }\n    }\n    \n    if (darkness > .5)\n    {\n        darkness = .5;\n    }\n    if (darkness == 0.)\n    {\n        return vec4(.05, .8, .2, 1);\n    }\n    \n    darkness = (darkness * -1.) + 1.;\n    \n    return vec4(darkness * .05, darkness * .8, darkness * .2, .01);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    float cloudRadius[CLOUDS];\n    vec2 cloudPositions[CLOUDS];\n    \n    cloudRadius[0] = 78.;\n    cloudRadius[1] = 78.;\n    cloudRadius[2] = 78.;\n    cloudRadius[3] = 78.;\n    cloudRadius[4] = 100.;\n    cloudPositions[0] = vec2(iResolution.x/2., iResolution.y/2.);\n    cloudPositions[1] = vec2(iResolution.x/2. + 70., iResolution.y/2. + 20.);\n    cloudPositions[2] = vec2(iResolution.x/2. + 60., iResolution.y/2. - 50.);\n    cloudPositions[3] = vec2(iResolution.x/2. + 140., iResolution.y/2. - 40.);\n    cloudPositions[4] = vec2(iResolution.x/2. + 160., iResolution.y/2. + 20.);\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    for (int i = 0; i < CLOUDS; i+=1)\n    {\n        cloudPositions[i] = vec2(cloudPositions[i].x - (iTime * 10.), cloudPositions[i].y + (iTime * 6.));\n    }\n    \n    fragColor = cloudPartitians(cloudPositions, cloudRadius, fragCoord);\n}","name":"Buffer A","description":"","type":"buffer"}]}