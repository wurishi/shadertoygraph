{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define FARCLIP    55.0\n\n#define MARCHSTEPS 60\n#define SHSTEPS    30\n#define SHPOWER    1.5\n\n#define MAT1       1.0\n\n#define CLD1 iTime*0.35\n#define CLD2 iTime*0.15\n\n/***********************************************/\n\nfloat hash(float n) { \n\treturn fract(sin(n)*43758.5453123); \n}\n\nfloat noise3(vec3 x) {\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0 + p.z*113.0;\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n}\n\n/***********************************************/\nvec2 DE(vec3 p) {\n    vec2 t=vec2( (p.y+4.0-texture(iChannel0,p.xz*0.002).x*5.0- texture(iChannel0,p.xz*0.03).x*0.2 )*0.5, 1.0);\n    \n    float g=p.y+2.4;\n    if (t.x>g) t.x=g;\n    \n    return t;\n}\n\n/***********************************************/\n\nvoid DEcloudsPWR(vec3 p, float t, inout float cpwr) {\n    float c= -p.y-1.0-noise3(p*1.9+CLD1)*0.4;\n    if (c>t) cpwr=c-t;\n}\n\nvec4 DEclouds(vec3 p, vec3 lig) {\n    float c=-p.y-1.0-noise3(p*1.3+CLD1)*0.6;\n        vec4 clr =vec4( mix( vec3(0.1,0.1,0.1), vec3(0.8,0.9,1.0), c*0.5 ), clamp(c,0.0,1.0));\n        float ww=-p.y-1.0-noise3(p*1.5+0.6*lig+CLD2)*0.8;\n\t    float dif =  clamp((clr.w - ww)/0.6, 0.0, 1.0 );\n        vec3 brdf = 0.9+ vec3(0.6, 0.5, 0.4)*dif;  \n\tclr.xyz *= brdf;\n    clr.w*=0.35;\n    clr.xyz*=clr.w;\n    return clr;\n}\n\n/***********************************************/\nvec3 normal(vec3 p) {\n\tvec3 e=vec3(0.01,-0.01,0.0);\n\treturn normalize( vec3(\te.xyy*DE(p+e.xyy).x +\te.yyx*DE(p+e.yyx).x +\te.yxy*DE(p+e.yxy).x +\te.xxx*DE(p+e.xxx).x));\n}\n/***********************************************/\nfloat calcSh( vec3 ro, vec3 rd, float s, float e, float k ) {\n\tfloat res = 1.0;\n    for( int i=0; i<SHSTEPS; i++ ) {\n    \tif( s>e ) break;\n        float h = DE( ro + rd*s ).x;\n        res = min( res, k*h/s );\n    \ts += 0.02*SHPOWER;\n    }\n    return clamp( res, 0.0, 1.0 );\n}\n\n/***********************************************\nvoid rot( inout vec3 p, vec3 r) {\n\tfloat sa=sin(r.y); float sb=sin(r.x); float sc=sin(r.z);\n\tfloat ca=cos(r.y); float cb=cos(r.x); float cc=cos(r.z);\n\tp*=mat3( cb*cc, cc*sa*sb-ca*sc, ca*cc*sb+sa*sc,\tcb*sc, ca*cc+sa*sb*sc, -cc*sa+ca*sb*sc,\t-sb, cb*sa, ca*cb );\n}\n\n/***********************************************/\n#define sun normalize(vec3(-0.4,0.15,1.0))\n\nvec3 sky(vec3 rd){\n    float sa=max(dot(rd,sun),0.0);\n    float v=pow(0.9-max(rd.y+0.1,0.0),12.0);\n    vec3 s=mix(vec3(0.8,0.6,0.3),vec3(0.1,0.1,0.1),v);\n        s=s+vec3(0.7,0.2,0.0)*sa*sa*0.5;\n        s=s+vec3(1.0,2.0,1.0)*min(pow(sa,650.0)*1.5,0.3);\n    return clamp(s,0.0,1.0);\n}\n/***********************************************/\nvec3 fog(vec3 color, vec3 fcolor, float depth, float density){\n\tconst float e = 2.71828182845904523536028747135266249;\n\tfloat f = pow(e, -pow(depth*density, 2.0));\n\treturn mix(fcolor, color, f);\n}\n\n/***********************************************/\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    p.x *= iResolution.x/iResolution.y;\t\n\tvec3 ta = vec3(0.0, 0.0, 0.0);\n\tvec3 ro =vec3(0.0, 1.3, -5.0);\n    vec3 lig=vec3(0.0,1.0,1.0);\n\nta.z+=iTime*2.5;\nro.z+=iTime*2.5;\n\t\n/*\tvec2 mp=iMouse.xy/iResolution.xy;\n\trot(ro,vec3(mp.x,mp.y,0.0));\n\trot(lig,vec3(mp.x,mp.y,0.0));\t*/\n\n\tvec3 cf = normalize( ta - ro );\n    vec3 cr = normalize( cross(cf,vec3(0.0,1.0,0.0) ) );\n    vec3 cu = normalize( cross(cr,cf));\n\tvec3 rd = normalize( p.x*cr + p.y*cu + 2.5*cf );\n\n\tvec4 clds=vec4(0.0);\n\tfloat cpwr=0.0;\n\t\n\t//march terrain ...\n\tvec2 r=vec2(0.0);\t\n\tfloat d=0.0;\n\tvec3 ww;\n\tfor(int i=0; i<MARCHSTEPS; i++) {\n\t\tww=ro+rd*d;\n\t\tr=DE(ww);\n    \tDEcloudsPWR(ww,r.x,cpwr);\n        if( abs(r.x)<0.0 || r.x>FARCLIP ) break;\n        d+=r.x;\n\t}\n    r.x=d;\n    \n    //march clouds ...\n    float t=0.0;\n    for(int i=0; i<MARCHSTEPS; i++) {\n\t\tvec3 p=ro+rd*t;\n\t\tclds+=DEclouds(p,lig)*(1.0 - clds.w);\n\t\tt+=0.6;\n\t}\n\n\t//colors ... \n\t\n    vec3 col=sky(rd);\n\n\tif( r.x<FARCLIP ) {\n            vec3 nor=normal(ww);\n        \tfloat amb= 1.0;\t\t\n        \tfloat dif= clamp(dot(nor, lig), 0.0,1.0);\n        \tfloat bac= clamp(dot(nor,-lig), 0.0,1.0);\n        \tfloat sh= calcSh(ww, lig, 0.01, 2.0, 4.0);\n\n    \t\tif (r.y==MAT1) ww=vec3(1.3)* texture(iChannel1, ww.xz*0.2).xyz;\n    \t    ww *= 0.5*amb + 0.4*dif*sh + 0.05*bac;\n    \t    \n\t\t   //faking sunlight like a big boy here\n    \t   vec3 colf=mix(col*0.8,ww, clamp(abs(nor.z*1.8), 0.0,1.0));     \n    \t   \n           colf = mix( colf, clds.xyz, clamp(cpwr,0.0,1.0) );\n\n           col=fog(colf, col, r.x, 0.03);\n\t} else {\n\t    //clouds top\n\t    ro.z-=iTime*100.0;\n\t    float sd=dot(rd,sun);\n\t    float t = clamp( pow(1.0-0.5*rd.y, 8.0), 0.0,1.0);\n\t    clds=vec4(0.0);\n\t        for (int i=0; i<MARCHSTEPS; i++) {\n                float c = (float(i-MARCHSTEPS)*2.0+3.0-ro.y) / rd.y;\n                vec3 cpos = ro + rd*c;\n                     cpos*=vec3(0.007,0.025,0.0062);\n                float a = smoothstep(0.0, 1.0, noise3( cpos ))*0.8; \n                vec3 lc = mix(vec3( 0.8, 0.8, 0.9 ), vec3( 0.1,0.1,0.1 ), a); \n                a=(1.0-clds.w)*a; \n                clds += vec4(lc*a, a); \n                if (clds.w>0.9) break;\n            }\n            \n            clds.rgb /= clds.w+0.001;\n            col=mix( col, clds.rgb , clds.w*(1.0-t) );            \n\t} \n\n\tfragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsXSzH","date":"1396633680","viewed":2532,"name":"A bad day","username":"avix","description":"Everything is fake...","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["procedural","3d","raymarch"],"hasliked":0,"parentid":"","parentname":""}}