{"ver":"0.1","info":{"id":"4ttSWr","date":"1479019858","viewed":276,"name":"bp Metaball","username":"blackpolygon","description":"Moving meatballs with sauce","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["noise","blur","metaball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: blackpolygon\n// Title: Metaball and noise\n\n//Basen on the example by patriciogv\n\n\nfloat random (in vec2 st) { \n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))* \n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) + \n            (c - a)* u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n\nfloat smoothen(float d1, float d2) {\n    float k = 0.836;\n    return -log(exp(-k * d1) + exp(-k * d2)) / k;\n}\n\n\n#define OCTAVES 6\nfloat fbm (in vec2 st) {\n    // Initial values\n    float value = 0.0;\n    float amplitud = 0.524;\n    float frequency = 0.;\n    //\n    // Loop of octaves\n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitud * noise(st);\n        st *= 2.;\n        amplitud *= .5;\n    }\n    return value;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/min(iResolution.x,iResolution.y);\n    st.x -= 0.35;\n    \n    float x = st.x;\n    float y = st.y;\n    vec3 color = vec3(st.y*0.492,-0.079,0.760);\n    \n    st -= 0.5;\n    color += fbm(st*(0.5+sin(iTime)*0.2)*5.964);\n    st = rotate2d( sin(iTime/2.)*3.14 ) * st;\n    st += vec2(0.5);\n    \n    vec2 p0 = vec2(cos(iTime) * 0.3 + 0.5, 0.5);\n    vec2 p1 = vec2(-cos(iTime) * 0.3 + 0.5, 0.5);\n    float d = smoothen(distance(st, p0) * 5.0, distance(st, p1) * 5.0);\n\tfloat ae = 5.0 / iResolution.y;\n    vec3 mask = 1.0-vec3(smoothstep(0.9, (0.5+sin(iTime)*0.5)*0.776+ae, d));\n    \n    vec3 bgColor = vec3(1.100,0.2+y,0.5+abs(sin(iTime)*0.5));\n    \n\tvec3 finalcolor = (bgColor*1.0-mask) + color*0.2;\n    \n    \n    fragColor = vec4(finalcolor,1);\n}","name":"Image","description":"","type":"image"}]}