{"ver":"0.1","info":{"id":"3lVBz3","date":"1614773048","viewed":134,"name":"AlienRoom","username":"lechuga","description":"LechugaFeliz :D\n\nZozo <3","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise","reflection","demoscene","kifs","electric","lechuga"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n* Esta wea la hizo lechuga yera licenced.\n*/\n\n#define rot(a) mat2(cos(a), sin(a),-sin(a), cos(a))\n\nfloat rand(float x){\n  return fract(sin(x*345.345)*454.345345);\n}\nfloat rand3(vec3 p){\n  return fract(sin(dot(p, p.yzx*324.2344))*2342.234);\n}\nvec3 rand33(vec3 p){\n  return fract(sin(p*6234.324)*567.5675);\n}\n\n\n\nfloat c (float t, float s){\n  t/=s;\n  return mix(rand(floor(t)), rand(floor(t+1.)), pow(smoothstep(0., 1., fract(t)),10.));\n}\nfloat sb(vec3 p, vec3 s){\n  p = abs(p)-s;\n  return max(max(p.y, p.z), p.x);\n}\nfloat smin(float a, float b, float k){\n  float h = max(k-abs(a-b), 0.)/k;\n  return min(a, b)-pow(h, 3.)*k*(1.0/6.0);\n}\nbool hitGround = false, hitCages = false;\nconst float rep = 100.;\nfloat glowe, glowrep;\nfloat map(vec3 p, float time){\n  p.xz *= rot(time);\n  p.xy*= rot(cos(time));\n  p.z += sin(cos(time)*.5-.5)*60.5-.5;\n  vec3 p1 = p;\n  float tt = (c(time*40., 60.5)*4.);\n  float scene = mod(time,3.);\n  float sf = 5.;\n  if(scene <= 1.) sf = 3.;\n  else if(scene <= 2.) sf = 4.;\n  else if(scene <= 3.) sf = 7.;\n  for(float i  =0.;i < sf; i++){\n    p1.xz *= rot(cos(tt*.3523)*2.);\n    p1.yz *= rot(tt*.345);\n    p1 = abs(p1)-i-tt*4.;\n    p1-=i*.1;\n  }\n  \n  float r = sin(tt+p1.x*.435345)*sin(tt+p1.y*.234234)*sin(tt+p1.z*.123123);\n  float d = sb(p1,vec3(5.+r*.5-.5));\n  \n  p1 +=mod(time*60., 40.);\n  float dd = sb(p1, vec3(10.+r*.5-.5));\n  float e1 = length(p)-10.-r*3.;\n  glowe += 4./(1.+e1*e1*e1);\n  \n  vec3 p2 = p;\n  float id = rand3(floor(p2/rep-.5));\n  p2 /= 2.;\n  p2.y += time*40.;\n  p2 = (fract(p2/rep-.5)-.5)*rep;\n  float e2 = length(p2.xz)-.3-id;\n  glowrep += 10./(4.+e2*e2);\n  \n  float sb2 = sb(p2, vec3(4.5));\n  \n  \n  float pisos =  1.-abs(p.y)+(99.+sin(p.y+tt+time*2.)*sin(p.x+tt+time*4.)*sin(p.z+time)-3.)*.5;\n  hitGround = pisos < 0.5;\n  float cage = 1.-sb(p, vec3(210.));\n  hitCages = cage < 0.5;\n  d = min(d, cage);\n  d = min(d, sb2);\n  d = min(dd, d);\n  d = smin(d, e2, 10.);\n  d = min(d, pisos);\n  d = smin(e1, d, 5.);\n  return d;\n}\nvec3 nm(vec3 p, float t){\n  const vec2 e = vec2(0.01, 0.);\n  return map(p, t)-normalize(vec3(map(p-e.xyy,t), map(p-e.yxy,t), map(p-e.yyx,t)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod(iTime, 10.)*.88;\n    vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n\tuv -= 0.5;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n  float tt = c(time*200., 100.)*.25;\n  time -= rand(uv.y)*tt*.25;\n  vec3 s = vec3(0.00001, .000001, -100.), r = normalize(vec3(-uv, 1.));\n  \n  vec3 p = s;\n  vec3 col = vec3(0.);\n  const float MAX = 64.;\n  float i = 0.;\n  float dd;\n  const float alfa = 1.;\n  for(; i < MAX; i++){\n    //p += rand(time)*.001;\n \n    float d = map(p, time);\n    if(abs(d) < 0.001){\n      //d = 0.0000001;\n      if(hitGround ){\n        vec3 n = nm(p,time);\n        r = refract(r, n, .001)*alfa;\n        d -= 100.;\n      }\n      else\n        break;\n    }\n    p+=d*r;\n    dd += 200./(10.+d*d*d);\n  }\n  \n  vec3 n = nm(p,time);\n  float ld = clamp(dot(n, r), 0., 1.);\n  col -= ld;\n  \n  vec3 baseColor = 1.-vec3(0.234, .56, 0.145);\n  float dao = .88;\n  float ao = clamp(map(p+n*dao, time), 0., 1.);\n  float fres = pow(16.-ld,.5)*.4;\n  float fog = 4.-max(length(p-s)/400., 0.);\n  col += dd*baseColor*.01;\n  col += glowe * baseColor-vec3(1.,0.345345, .345345);\n  col += (mix(vec3(fres), vec3(ao), glowrep * baseColor*.75));\n  \n  vec2 uv2 = p.xy;\n  {\n    uv2 *= 5.;\n    vec2 gid =fract( max(uv2, uv2.yx)+time*20.);\n    col *= vec3(gid, 1.)*vec3(0., 1., 1.)*.5;\n  }\n  col = pow(col, vec3(3.))*vec3(0.5734, 1., 1.)*.5;\n  //col.yz = smoothstep(0., 1., col.yz)*.35;\n  vec3 a = rand33(col/(1.+length(uv.yx)));\n  vec3 b = rand33(col/(1.+length(uv)));\n  vec3 c = pow(smoothstep(vec3(0.), vec3(1.), fract(col)), vec3(20.));\n  col *= mix(a, b, c);\n  col = smoothstep(0., 1., col)*1.-length(uv)*1.09;\n  //col = mix(rand33(floor(col), rand33(floor(col+1), smoothstep(0., 1., fract(col)))));\n  \n  col *= ao * fres * fog;//end\n    fragColor = sqrt(vec4(col,1.0));\n}","name":"Image","description":"","type":"image"}]}