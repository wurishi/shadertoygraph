{"ver":"0.1","info":{"id":"3tf3zn","date":"1555421133","viewed":196,"name":"Chromatic Abberation-","username":"mxr233","description":"a simple Chromatic Abberation test.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["chromaticabberation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    // Time varying pixel color\n   \tif(uv.y<0.5&&uv.y>0.49)\n    {\n        fragColor=vec4(1,1,1,1);\n        return;\n    }\n    vec2 offset=vec2(0.01+0.01*sin(iTime),0.01+0.01*sin(iTime));\n    vec3 rgb=texture(iChannel0,uv).rgb;\n\tfloat r=texture(iChannel0,uv-offset).r;\n    float g=texture(iChannel0,uv).g;\n    float b=texture(iChannel0,uv+offset).b;\n    // Output to screen\n    if(uv.y>0.5)\n    \tfragColor = vec4(r,g,b,1.0);\n    else\n        fragColor=vec4(rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}