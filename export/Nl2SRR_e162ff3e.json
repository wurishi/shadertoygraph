{"ver":"0.1","info":{"id":"Nl2SRR","date":"1626922509","viewed":100,"name":"Fractal Curve","username":"oneshade","description":"[url=https://en.wikipedia.org/wiki/L%C3%A9vy_C_curve]https://en.wikipedia.org/wiki/L%C3%A9vy_C_curve[/url]\nNot quite.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["fractal","curve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Utilities\n#define drawSDF(dist, col) color = mix(color, col, smoothstep(unit, 0.0, dist))\n\n// SDFs\nfloat sdLine(in vec2 p, in vec2 a, in vec2 b) {\n    vec2 pa = p - a, ba = b - a;\n    return length(pa - ba * clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 center = 0.5 * iResolution.xy;\n    vec2 mouse = (iMouse.xy - center) / iResolution.y * 4.0;\n    vec2 uv = (fragCoord - center) / iResolution.y + vec2(0.0, 0.5);\n    float unit = 2.0 / iResolution.y;\n    vec3 color = vec3(1.0);\n\n    float scale = 1.0;\n    float a = 3.1415 / 4.0;//u = sqrt(0.5); // = cos(π/4) = sin(π/4)\n    float c = cos(a), s = sin(a);\n    for (int i=0; i < int(iTime) % 50; i++) {\n        uv.x = abs(uv.x);\n        uv.x -= 0.5;\n        uv *= mat2(c, -s, s, c);//vec2(uv.x - uv.y, uv.x + uv.y) * u;\n        uv.x += 0.5;\n        uv *= 2.0;\n        scale *= 2.0;\n    }\n\n    drawSDF(sdLine(uv, vec2(-0.5, 0.0), vec2(0.5, 0.0)) / scale - 0.001, vec3(0.0));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}