{"ver":"0.1","info":{"id":"7dsyR4","date":"1641809374","viewed":82,"name":"simple Julia set","username":"p0ancf_36","description":"simple Julia set","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iterations_count 30\n#define scale 4\n\nconst vec4 BLACK = vec4(0, 0, 0, 1);\nconst vec4 WHITE = vec4(255, 255, 255, 1);\n\nfloat sqrLength(vec2 v);\nvec2 complexSqr(vec2 z);\nvec3 hsv2rgb(vec3 c);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float r = sin(iTime / 10.0) * cos(iTime / 2.0) * 3.0 + 0.1;\n\n    vec2 c = vec2(sin(iTime) * r, cos(iTime) * r);\n    // vec2 c = vec2(-2, 1);\n    vec2 z = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * float(scale);\n    \n    int i = 0;\n    for (; i < iterations_count; i++) {\n        z = complexSqr(z) + c;\n        if (sqrLength(z) > 4.0) { break; }\n    }\n    if (i >= iterations_count - 1) {\n        fragColor = BLACK;\n        return;\n    }\n    \n    float progress = float(i) / float(iterations_count);\n    fragColor = vec4(hsv2rgb(vec3(progress, .75, 1)), 1);\n}\n\nfloat sqrLength(vec2 v) { return v.x*v.x + v.y*v.y; }\nvec2 complexSqr(vec2 z) {\n    return vec2(\n        (z.x*z.x - z.y*z.y),\n        (2.0 * z.x * z.y)\n    );\n}\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}","name":"Image","description":"","type":"image"}]}