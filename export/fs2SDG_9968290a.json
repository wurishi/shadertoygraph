{"ver":"0.1","info":{"id":"fs2SDG","date":"1620925851","viewed":324,"name":"Particles fire and smoke","username":"Shcherbakov","description":"Sample from stream: https://youtu.be/yS3V8zrpb4E","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["fire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n    \n    \n    uv = (fragCoord - iResolution.xy * 0.5)/iResolution.y;\n    uv *= 2.0;\n    \n    vec3 fireColors[5];\n    fireColors[0] = vec3(255,0,0) / 255.0;\n    fireColors[1] = vec3(255,90,0) / 255.0;\n    fireColors[2] = vec3(255,154,0) / 255.0;\n    fireColors[3] = vec3(255,206,0) / 255.0;\n    fireColors[4] = vec3(255,232,8) / 255.0;\n    \n    for (int i = 0; i < 800; ++i) {\n        vec4 partData = texelFetch(iChannel1, ivec2(i, 0), 0);\n        const float RADIUS = 0.25;\n        float dist = lengthSq(partData.xy - uv);\n        if (dist < RADIUS * RADIUS) {\n            float fade = pow(1.0 - sqrt(dist) / RADIUS, 4.0);\n            int stage = int(clamp(partData.z * 5.0, 0.0, 4.9999));\n            vec2 partUV = (uv - partData.xy) / RADIUS * 0.5 + 0.5;\n            vec4 fog = texture(iChannel2, partUV * 0.5 + vec2(i % 2, i / 2 % 2) * 0.5);\n            fragColor.rgb = mix(fragColor.rgb, fog.rgb * 0.7, fog.a);\n        }\n    }\n    \n    if (abs(uv.x) > 0.75) {\n        return;\n    }\n    for (int i = 0; i < 800; ++i) {\n        for (int j = 1; j < 2; ++j) {\n            vec4 partData = texelFetch(iChannel1, ivec2(i, j), 0);\n            const float RADIUS = 0.05;\n            float dist = lengthSq(partData.xy - uv);\n            if (dist < RADIUS * RADIUS) {\n                float fade = pow(1.0 - sqrt(dist) / RADIUS, 4.0);\n                int stage = int(clamp(partData.z * 5.0, 0.0, 4.9999));\n                fragColor.rgb += fade * fireColors[stage] * pow(1.0 - partData.w, 1.0);\n            }\n        }\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float random(vec2 uv)\n{\n    return fract(sin(dot(uv,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat lengthSq(vec2 v) {\n    return dot(v, v);\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float randVal = random(fragCoord);\n    float randVal2 = random(fragCoord.yx);\n\n    if (int(fragCoord.y) == 0) {\n        vec2 dir = vec2(\n            random(vec2(fragCoord.x, fragCoord.x * fragCoord.x)),\n            random(vec2(fragCoord.x + 7.0, fragCoord.x + 137.0)));\n        dir.x -= 0.5;\n        dir.x *= 0.5;\n        dir.y += 0.75;\n        dir = normalize(dir);\n        fragColor.xy = vec2(0, -2.0) + fract(iTime * 0.2 + randVal2) * dir * 3.5;\n        return;\n    }\n\n\n    fragColor.x = randVal - 0.5;\n    fragColor.w = fract(iTime + randVal2);\n    fragColor.y = fragColor.w * random(vec2(fragCoord.x, 15.0));\n    fragColor.z = mix(fragColor.y, random(vec2(fragCoord.x, 351.0)), 0.2);\n    fragColor.x += sin(iTime * (1.0 + random(vec2(fragCoord.x, 759.0)))) * 0.2 * fragColor.y;\n    fragColor.y -= 1.0;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 offset = ceil(uv * 2.0);\n    uv = fract(uv * 2.0);\n    int layers = 8;\n    \n    for (int i = 0; i < layers; ++i) { \n        fragColor += texture(iChannel0, uv * 0.125 / float(1 << i) + offset * 0.5).xxxx;\n    }\n    fragColor /= float(layers);\n    fragColor.a += 0.75;\n    fragColor.a *= 1.0 - length(uv * 2.0 - 1.0);\n    fragColor.a = clamp(fragColor.a, 0.0, 1.0);\n    //fragColor.a = pow(fragColor., 3.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}