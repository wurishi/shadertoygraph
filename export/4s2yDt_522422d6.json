{"ver":"0.1","info":{"id":"4s2yDt","date":"1494380108","viewed":534,"name":"Fire Plant","username":"leon","description":"Experimenting shapes and colors","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// training for modeling shapes\n// using koltes code as base https://www.shadertoy.com/view/XdByD3\n// using iq articles\n// using Mercury library\n// using Sam Hocevar stackoverflow answer\n#define PI 3.14159\n#define TAU PI*2.\n#define t iTime\nstruct Info { float dist; vec4 color; };\nInfo info;\nmat2 rz2 (float a) { float c=cos(a),s=sin(a); return mat2(c,s,-s,c); }\nfloat lfo (float o, float s) { return .5+.5*sin(t*s+o); }\nfloat sphere (vec3 p, float r) { return length(p)-r; }\nfloat cyl (vec2 p, float r) { return length(p)-r; }\nfloat cyli (vec3 p, float r, float h) { return max(length(p.xz)-r, abs(p.y)-h); }\nfloat iso (vec3 p, float r) { return dot(p,normalize(sign(p)))-r; }\nfloat cube (vec3 p, vec3 r) { return length(max(abs(p)-r,0.)); }\nfloat scol (float a, float b, float r) { return clamp(.5+.5*(b-a)/r,0.,1.); }\nfloat smin (float a, float b, float r) { float h = scol(a,b,r); return mix(b,a,h)-r*h*(1.-h); }\nvec3 hsv2rgb(vec3 c)\n{\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 moda (vec2 p, float c) {\n    float ca = TAU/c;\n    float a = atan(p.y,p.x)+ca*.5;\n    float ci = floor(a/ca);\n    a = mod(a,ca)-ca*.5;\n    return vec3(vec2(cos(a),sin(a))*length(p), ci);\n}\n\nfloat leaf (vec3 p, float radius, float cycle, float index, vec2 scale) {\n    p.xz *= rz2(index*.5);\n    p.xz *= scale+lfo(index*5.,1.);\n    p.y -= sin(p.z*1.5)*.3;\n    p.z -= radius;\n    p.y -= sin(abs(p.x)*3.)*.1;\n    p.y = mod(p.y,cycle)-cycle*.5;\n    return cyli(p, radius, 0.01);\n}\n\nvec3 torsade (vec3 p, float offset, float scale) {\n    p.xz *= rz2(t+offset);\n    float a = p.y * scale;\n    p.xz -= vec2(cos(a),sin(a));\n    return p;\n}\n\nfloat map (vec3 p) {\n    \n    float wave1 = lfo(p.y*.2,1.);\n    vec3 pball = p;\n    vec3 pk = p;\n    \n    p.yz *= rz2(sin(t*.5)*.5);\n    p.xz *= rz2(t*.3);\n    \n    vec3 mosaic = moda(p.xz, 7.);\n    mosaic.z *= 5.;\n    float torsadeScale = (0.1 + lfo(mosaic.z,0.)) * wave1;\n    p.xz = mosaic.xy;\n    p.x -= 8.- 4.*wave1;\n    //float cyclem = 5.;\n    //p.x = mod(p.x-t, cyclem)-cyclem*.5;\n    \n    // leaves\n    float radius = 1.*wave1;\n    float cycle = 1.;\n    float index = 0.;\n    vec2 scale = vec2(1.2,.75);\n    float offset = mosaic.z;\n    index = floor(p.y/cycle) + mosaic.z;\n   \tvec3 pleaves = torsade(p,offset, torsadeScale)+vec3(0,.5,0);\n    float leaf1 = leaf(pleaves, radius, cycle, index, scale);\n    float leaf2 = leaf(pleaves, radius, cycle, index+4., scale);\n    float leaf3 = leaf(pleaves, radius, cycle, index+8., scale);\n    float leaves = min(leaf1, min(leaf2, leaf3));\n    \n    // rod\n    vec3 p2 = torsade(p,offset, torsadeScale);\n    float rod = cyl(p2.xz, .05+.05*lfo(p.y*4.,0.));\n    \n    // ball\n    float cycleb = 1.9;\n    float cycled = 1.55;\n    float speedb = 1.;\n    float indexb = floor((pball.y+t*speedb)/cycleb);\n    pball.y = mod(pball.y+t*speedb, cycleb)-cycleb*.5;\n    pball.xz *= rz2(pball.y*.6);\n    vec3 pdots = mod(pball,cycled)-cycled*.5;\n    float ball = cyl(pball.xz, .5+5.*(1.-wave1));\n    ball = mix(max(ball, -sphere(pdots, 1.)), ball, smoothstep(.0,0.5,wave1));\n    ball = max(ball, -cyl(pball.xz, 5.*(1.-wave1)));\n    \n    // red ball\n    float redb = cyl(pball.xz, 4.*(1.-wave1));\n    \n    // iso\n    vec3 mosab = moda(pball.xz, 15.);\n    pball.xz = mosab.xy;\n    pball.x -= 4.*(1.-wave1);\n    pball.xy *= rz2(t*.3+indexb);\n    pball.yz *= rz2(t*.6+indexb*5.);\n    pball.xz *= rz2(t*.9+indexb*10.);\n    pball.y = mod(pball.y+t*5., cycleb)-cycleb*.5;\n    float iso1 = iso(pball, 0.75*(1.-wave1));\n    iso1 = max(-iso1, redb);\n    \n    // colors\n    vec4 red = vec4(hsv2rgb(vec3(.0,.9,1.)),1);\n    vec4 green = vec4(hsv2rgb(vec3(.25,.7,.8)),1);\n    vec4 green2 = vec4(hsv2rgb(vec3(.25,.5,.3)),1);\n    vec4 blue = vec4(hsv2rgb(vec3(.5,.3,.9)),1);\n    vec4 orange = vec4(hsv2rgb(vec3(.12,.5,.8)),1);\n    info.color = mix(green2, green, scol(leaves, rod, .1));\n    \n    float scene = smin(leaves, rod, .1);\n    info.color = mix(info.color, orange, scol(ball, scene, .1));\n    \n    scene = min(scene, ball);\n    info.color = mix(info.color, red, scol(iso1, scene, .1));\n    scene = min(scene, iso1);\n    \n    return scene;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(uv,-15.-5.*lfo(0.,0.3))+vec3(0,.5,0), rd = vec3(uv,1), mp = ro;\n    int ri = 0;\n    for (int i=0;i<50;++i) {\n        ri = i;\n        float md = map(mp);\n        if (md < 0.01) {\n            break;\n        }\n        mp += rd*md*.5;\n    }\n    float l = length(mp);\n    \n    float r = float(ri)/50.;\n\tfragColor = info.color;\n    fragColor *= 1.-r;\n}","name":"Image","description":"","type":"image"}]}