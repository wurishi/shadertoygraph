{"ver":"0.1","info":{"id":"WlcfWf","date":"1613549838","viewed":67,"name":"Exercise: Basic Truchet Tiling","username":"endymion","description":"Big props to *BigWIngs* for their instructional videos: https://www.youtube.com/watch?v=2R7h76GoIJM","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["truchet","tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n * Pseudo-random with 2d vector input\n * @src https://thebookofshaders.com/10/\n * @param coordinate {vec2}\n * @return {float}\n */\nfloat random(vec2 coordinate) {\n    return fract(\n        sin(dot(\n            coordinate,\n            vec2(12.9898, 78.233)\n        )) \n    * 43758.5453123);\n}\n\n/**\n * @main\n * @src https://www.youtube.com/watch?v=2R7h76GoIJM\n */\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    // Zoom;\n    float scale = 25. + 24. * sin(iTime);\n    uv *= scale; \n    \n    // Tiles from -.5 to .5\n    vec2 gv = fract(uv) - .5;\n    \n    // Rotate\n    vec2 id = floor(uv);\n    float r = random(id);\n    if (r < .5) gv.x *= -1.;\n    \n    // Curves\n    float sgn = sign(gv.x + gv.y);\n    sgn = sgn == 0. ? 1. : sgn;\n    float dist = abs(abs(gv.x + gv.y) - .5);\n    dist = length(gv - sgn * .5) - .5;\n    float width = 0.002 * scale;\n    dist = smoothstep(scale/iResolution.y, -scale/iResolution.y, abs(dist) - width);\n    \n    // Color\n    vec3 col = vec3(0);\n    col += dist;\n    \n    // Tile border\n    //if (gv.x > .48 || gv.y > .48) col.r = 1;\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}