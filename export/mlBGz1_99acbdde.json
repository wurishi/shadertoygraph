{"ver":"0.1","info":{"id":"mlBGz1","date":"1672844146","viewed":157,"name":"Genuary2023 jan.4","username":"z0rg","description":"https://genuary.art/ Intersections","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["genuary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 cuv = (fragCoord.xy-.5*iResolution.xy)/iResolution.xx;\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).xyz;\n    col += texture(iChannel0, vec2(-1.,-1.)*uv).xyz;\n    col += texture(iChannel0, uv*vec2(1.,2.)).xxx*vec3(1.000,0.102,0.369);\n        col += texture(iChannel0, vec2(.5,-2.)*uv.yx-vec2(.75,0.)).xyz;\n    col *= 200.;\n\n    col = mix(vec3(0.05), vec3(1.), sat(col));\n    vec2 grid = sin(cuv*100.)-.99;\n    col += vec3(1.)*sat(min(grid.x, grid.y)*50.)*.5;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy-.5*iResolution.xy)/iResolution.xx;\n\n    vec3 col = vec3(0.0);\n    float t = iTime*1.;\n    vec2 pos = uv - vec2(sin(t*.25), sin(t)*.5)*.25;\n    float shape = length(pos)-0.001;\n    float sharp = iResolution.x;\n    col = mix(col, vec3(1.), 1.-sat(shape*sharp));\n    col = mix(col, texture(iChannel0, fragCoord.xy/iResolution.xy).xyz*1., .99);\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n#define sat(a) clamp(a, 0., 1.)","name":"Common","description":"","type":"common"}]}