{"ver":"0.1","info":{"id":"Md3yWn","date":"1518405970","viewed":144,"name":"Sushi. SHARI.","username":"gyabo","description":"TDF2015 seminar Make Sushi With Raymarching livecoding(20min) template.\nNO NETA. ONLY SHARI ;-)\nWe recruited the SUSHINETA on the day of the seminar and live-coded it.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarchingsushi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define ITE_MAX      50\n#define DIST_COEFF   1.00\n#define DIST_MIN     0.01\n#define DIST_MAX     1000.0\n\n#define ID_NONE      0.0\n#define ID_TABLE     1.0\n#define ID_GETA      2.0\n#define ID_SHARI     3.0\n\n#define ID_NETA1     4.0\n#define ID_NETA2     4.0\n\n\nvec2 rot(vec2 p, float a) {\n\treturn vec2(\n\t\tp.x * cos(a) - p.y * sin(a), \n\t\tp.x * sin(a) + p.y * cos(a));\n\t\t\n}\n\nfloat box(vec3 pos, vec3 scale, float r) {\n\t\n\treturn length(max(abs(pos) - scale , 0.0)) - r;\n}\n\nvoid geta(vec3 p, out float id, out float t) {\n\t//p.xz = rot(p.xz, time + p.z);\n\tfloat w  = DIST_MAX;\n\tvec3 tp  = p;\n\tvec3 mp  = p;\n\tt = 0.1 + dot(p, vec3(0, 1, 0));\n\tid = ID_TABLE;\n\n\t//GETA\n\tmp.y += 0.0;\n\ttp = mp + vec3(0, 0, 0);\n\tw = box(tp, vec3(0.5, 0.01, 0.2), 0.001);\n\tif(w < t) id = ID_GETA;\n\tt = min(t, w);\n\t\n\ttp = mp + vec3(0.3, 0.1, 0);\n\tw = box(tp, vec3(0.07, 0.1, 0.2), 0.001);\n\tif(w < t) id = ID_GETA;\n\tt = min(t, w);\n\n\ttp = mp + vec3(-0.3, 0.1, 0);\n\tw = box(tp, vec3(0.07, 0.1, 0.2), 0.001);\n\tif(w < t) id = ID_GETA;\n\tt = min(t, w);\n\n\t//SHARI\n\ttp = mp + vec3(-0.2, -0.04, 0);\n\tw = length(max(abs(tp) - vec3(0.05, 0.0005, 0.002) * 1.6 , 0.0)) - 0.05;\n\tif(w < t) id = ID_SHARI;\n\tt = min(t, w);\n\n\ttp = mp + vec3(0.2, -0.04, 0);\n\tw = length(max(abs(tp) - vec3(0.05, 0.005, 0.002) * 1.6 , 0.0)) - 0.05;\n\tif(w < t) id = ID_SHARI;\n\tt = min(t, w);\n\n}\n\n\n\nfloat map(vec3 p, out float id) {\n\tfloat t  = DIST_MAX;\n\tp.xz = mod(p.xz, 1.4) - .7; \n\t//p = mod(p, 2.0) - 1.0; \n\tgeta(p, id, t);\n\treturn t;\n}\n\n// 乱数生成\nfloat rnd(vec2 p){\n    return fract(sin(dot(p ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\nvec4 gentex(vec3 ip, float id) {\n\tif(id == ID_TABLE) return vec4(5,3,2,1) * 0.4;\n    if(id == ID_SHARI) return vec4(3.0);\n\tif(id == ID_GETA)  return vec4(rnd(ip.xy * 0.0002)) * vec4(5,3,2,1) * 0.4;\n\tif(id == ID_NETA1) return vec4(rnd(ip.xy * 0.002)) * vec4(5,3,2,1) * 0.4;\n\treturn vec4(1.0);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    \n    vec2 uv      = ( gl_FragCoord.xy / iResolution.xy ) * 2.0 - 1.0;\n\tfloat aspect = iResolution.x / iResolution.y;\n\tvec3  dir    = normalize(vec3(uv * vec2(aspect, 1.0), 1.0));\n\tdir.yz = rot(dir.yz, 0.7);\n    float kmk = fract(time * 0.5);\n    float imk =  (time - kmk ) + smoothstep(0.25, 0.75, kmk);\n\tvec3 pos     = vec3(0.7 + imk, 1.5 + cos(imk), 0.1);\n\tfloat t      = 0.0;\n\tfloat id     = ID_NONE;\n\tfor(int i = 0 ; i < ITE_MAX; i++) {\n\t\tfloat ttemp = map(t * dir + pos, id);\n\t\tif(ttemp < DIST_MIN) break;\n\t\tt += ttemp * DIST_COEFF;\n\t}\n\tvec3 ip = pos + dir * t;\n\n\n\tvec3 color = gentex(ip, id).xyz * abs(min(0.9, map(ip.xyz + 0.1, id))) + vec3(t * 0.02);\n\tif(id == ID_SHARI) fragColor *= vec4(4.0);\n    color = pow(color, vec3(1.0 / 2.2));\n\tcolor *= (1.0 - dot(uv * 0.5, uv));\n\tfragColor = vec4(color, 1.0) + abs(sin(imk)) * vec4(1,1,3,1) * 0.05;\n\n}","name":"Image","description":"","type":"image"}]}