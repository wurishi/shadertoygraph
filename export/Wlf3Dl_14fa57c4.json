{"ver":"0.1","info":{"id":"Wlf3Dl","date":"1584983028","viewed":146,"name":"Airy disk","username":"tpfto","description":"Fraunhoffer diffraction of a circular aperture","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","optics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// some constants\n#define PI 3.14159265359\n\n// XY range of the display.\n#define DISP_SCALE 10.0 \n\n// rescaling function\n\nfloat rescale(float x, vec2 range)\n{\n\t  float a = range.x, b = range.y;\n      return (x - a)/(b - a);\n}\n\n// custom colormap\n\nvec3 heated( float t )\n{\n\t return vec3(min(0.1068 + 1.564 * t, 1.0), 1.053 * t - 0.03926, 0.1245 + t * (2.8877 + t * (7.366 * t - 9.2542)));\n}\n\n// evaluate jinc function (http://mathworld.wolfram.com/JincFunction.html)\n// using the midpoint rule; https://doi.org/10.1002/sapm1955341298\n\n#define sinc(x) ((abs(x) < 0.25) ? ((1.0 - (7.0/60.0) * x * x)/(1.0 + 0.05 * x * x)) : (sin(x)/x))\n\nfloat jinc(float x)\n{\n\tint m = 12;\n    float s = 0.0, mm = float(m);\n    float h = 0.5 * PI/mm;\n    \n    for (int k = 0; k < m; k++)\n    {\n        float st = sin(h * (float(k) + 0.5));\n        s += (sinc(x * st) * st * st)/mm;\n    }\n    \n    return s;\n}\n\n// Airy disk function\n\nfloat airyDisk(vec2 p)\n{\n      float jr = jinc(PI * length(p));\n        \n      return -log(1.0e-4 + jr * jr);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        vec2 aspect = iResolution.xy / iResolution.y;\n        vec2 uv = ( fragCoord.xy / iResolution.y ) - 0.5 * aspect;\n        uv *= DISP_SCALE;\n        \n        fragColor.rgb = heated(rescale(airyDisk(uv), vec2(3.0, 10.0)));\n\n        fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}