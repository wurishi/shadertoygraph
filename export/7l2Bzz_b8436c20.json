{"ver":"0.1","info":{"id":"7l2Bzz","date":"1651741743","viewed":262,"name":"Retro GB","username":"quentopp","description":"Fragment shader that pixelates and solarizes images or videos and makes them monochrome with a tint","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["retro","pixel","gameboy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define VERSION 0\n\nfloat pixelSize = 8.;\nfloat gradations = 8.;\nvec4 tint = vec4(0.8,1,0.8,1);\n\n/*\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (VERSION == 0) {\n        // Normalized pixel coordinates (from 0 to 1)\n        vec2 uv = floor(fragCoord / pixelSize) * pixelSize / iResolution.xy;\n\n        // Time varying pixel color\n        vec4 col = pow(texture(iChannel0, uv), 2.2);\n    \n        // 0.299 R + 0.587 G + 0.114 B\n        float lum = (0.299*col.x + 0.587*col.y + 0.114*col.z);\n        float adjustedLum = floor(lum * gradations) / gradations; \n    \n        // Output to screen\n        fragColor = pow(vec4(1, 1, 1, 1) * adjustedLum * tint, 1.0/2.2);\n    } else {\n        fragCoord = floor(fragCoord / pixelSize) * pixelSize / iResolution.xy;\n        fragColor = tint * floor( dot( texture(iChannel0, fragCoord), vec4( 0.299, 0.587, 0.114, 0) ) * gradations) / gradations;\n    }\n}\n*/\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = floor(U / 8.) * 8. / iResolution.xy;\n    O = vec4(.8,1,.8,1)\n      * round( dot( texture(iChannel0, U),vec4(.2126,.7152,.0722,0) ) * 8.) / 8.;\n}","name":"Image","description":"","type":"image"}]}