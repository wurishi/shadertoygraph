{"ver":"0.1","info":{"id":"lfKXDW","date":"1715216714","viewed":48,"name":"domain repition experiment","username":"thom7918","description":"Experienting with the ideas  inspired by the very cool article by Inigo Quilez: https://iquilezles.org/articles/sdfrepetition/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat circle_sdf(vec2 p, float r){\n    return length(p) - r;\n}\n\nvec2 repeated(vec2 p){\n    p = p - floor(p +0.5);\n    return p;\n}\n\nfloat hash( float n ) { return fract(sin(n)*43758.5453123); }\n\nmat2 rotate(float a){\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = (2.*fragCoord - iResolution.xy)/iResolution.y;\n    vec3 color = vec3(0.0);\n    \n    float radius = -0.05 + 0.1*sin(0.05*iTime);\n    \n    vec2 p = 4.*st;\n    float id = hash(p.x);;\n   \n    p = rotate((iTime)*0.4 + sin(p.y*p.x))*p; \n    vec2 c = repeated(p);\n    color = vec3(smoothstep(0.5,-0.2,circle_sdf(c, radius)))*p.y*p.x;\n    float m =(p.x*p.y);\n    //color.bg*= m*0.2;\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}\n\n\n\n  \n","name":"Image","description":"","type":"image"}]}