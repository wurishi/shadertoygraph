{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"const int NUM_SHAPES = 29;\nconst float R = 1.0;\nconst float R_MAGNETIC = R * 0.85;\nconst float R_POLE = R_MAGNETIC * 0.1;\nconst vec2 pole = vec2(0.0, R_MAGNETIC*0.5);\nconst float SHAPE_TO_ANGLE = 3.1415 / float(NUM_SHAPES+1);\nconst float EPSILON = 1e-6;\n#define EPSILON_SMOOTH (3.0 / iResolution.x)\n\nfloat cross2(vec2 a, vec2 b) {\n    return a.x * b.y - a.y * b.x;\n}\nfloat triangle(vec2 p, vec2 a, vec2 b, vec2 c) {\n    float ret;\n    ret = cross2(normalize(b-a),p-a);\n    ret = max(ret,cross2(normalize(c-b),p-b));\n    ret = max(ret,cross2(normalize(a-c),p-c));\n    return clamp(smoothstep(0.0,EPSILON_SMOOTH,-ret),0.0,1.0);\n}\nfloat circle(vec2 p, vec2 c, float r) {\n    float ret = 1.0 - length(p-c) + r;\n    return clamp(smoothstep(1.0-EPSILON_SMOOTH,1.0,ret),0.0,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\t \n    // initial circle   \n    float sum = circle(uv,vec2(0.0,0.0),R);\n        \n    // magnetic field shape\n    for(int i = 1; i <= NUM_SHAPES; i++) {\n        float a = float(i) * SHAPE_TO_ANGLE;\n        vec2 c = vec2(sin(a),cos(a));\n        sum += triangle(uv, pole,-pole,-c*R_MAGNETIC);\n        sum += triangle(uv,-pole, pole, c*R_MAGNETIC);\n    }   \n        \n    // checkerize\n    float f = fract(max(sum-EPSILON,0.0));    \n    float c = mod(floor(max(sum-EPSILON,0.0)),2.0);    \n    sum = mix(f,1.0-f,step(0.1,c));\n        \n    // poles\n    sum = mix(sum,1.0,circle(uv,pole,R_POLE)+circle(uv,-pole,R_POLE));\n    \n    // color\n    vec3 col = mix(vec3(0.475,0.482,0.263),vec3(0.9453125,0.953125,0.8125),sum);    \n    \n    float noize = texture(iChannel0,uv*0.5).x + texture(iChannel0,uv*0.704).x;\n    col *= 1.0 - noize * (1.0-col.x) * 0.5;    \n    noize = texture(iChannel0,vec2(atan(uv.y/uv.x) * 0.1,length(uv))).x;\n    col *= 1.0 - noize * col.x * 0.2;\n    \n    // print it to field!\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdBXz1","date":"1408721136","viewed":828,"name":"Crop circle","username":"TDM","description":"shader version of one of crop circle. more: http://www.cropcircleconnector.com/anasazi/time2012w.html","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["circle","field","geometry","crop","aliens","magnetic","message"],"hasliked":0,"parentid":"","parentname":""}}