{"ver":"0.1","info":{"id":"4cySzh","date":"1714750005","viewed":79,"name":"Dropping paint","username":"HalbFettKaese","description":"An implementation of https://people.csail.mit.edu/jaffer/Marbling/Dropping-Paint\nintroduced by this coding train video: https://youtu.be/p7IGZTjC008?si=jdBkmtabavfUmWli","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["water","paint","marbling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// hash from https://www.shadertoy.com/view/4djSRW\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy + p3.yxx)*p3.zyx);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float R = 0.05;\n    \n    vec2 uv = fragCoord / iResolution.xx;\n    vec2 M = iMouse.xy / iResolution.xx;\n    bool mouseDown = iMouse.z > 0. && iMouse.w > 0.;\n    float new_circle = smoothstep(R + 0.001, R, length(uv - M));\n    if (mouseDown) {\n        uv = M + (uv - M) * sqrt(1. - R*R/dot(uv-M,uv-M));\n    }\n    vec3 col = texture(iChannel0, uv * iResolution.xx/iResolution.xy).rgb;\n    if (clamp(uv, 0., 1.) != uv) col = vec3(0);\n    if (mouseDown)\n        col = mix(col, hash33(vec3(M, iTime)), new_circle);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}