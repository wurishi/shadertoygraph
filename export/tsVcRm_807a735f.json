{"ver":"0.1","info":{"id":"tsVcRm","date":"1602525069","viewed":124,"name":"Endless fall","username":"fsynth","description":"Trying to add some depth to oldschool plane deformation stuff","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["2d","deformation","plane"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n\tvec2 cuv = uv * 2.0 - 1.0;\n\t\n\tvec2 tuv = cuv;\n\t\n\ttuv.x = abs(0.5 / tuv.x);\n\ttuv.y *= max(tuv.x, 0.75);\n\n\ttuv.y += iTime * 0.175;\n    \n\tvec4 depth = vec4(pow(abs(cuv.x / cuv.y), 0.25 * (1.+abs(cuv.y)))) * pow(abs(cuv.x), 0.05);\n\t\n    vec4 col = texture(iChannel0, vec2(tuv.x, tuv.y)) * depth;\n    col += texture(iChannel0, vec2(tuv.y / 2., tuv.x*2.0)) * depth;\n\n\tfragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const uint k = 1103515245U;\n\nvec3 hash( uvec3 x )\n{\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    uvec3 p1 = uvec3(round(fragCoord * 2.)/2., 0.);\n    float d1 = hash(p1).x;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 col = vec3(round(uv.y *2. -1. + d1));\n    \n    uvec3 p = uvec3(fragCoord, col);\n    float d = 1. + hash(p).x;\n    \n    col *= vec3(round(mod(uv.x, 1.0 / 2.) * 2.)) / (d * 2.);\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}