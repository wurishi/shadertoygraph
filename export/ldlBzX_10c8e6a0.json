{"ver":"0.1","info":{"id":"ldlBzX","date":"1497338155","viewed":94,"name":"yarf","username":"Sheado","description":"Practicing tiling.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient","tiling","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate2d(in vec2 st, float _angle){\n    st -= .5;\n    mat2 m = mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n    st = m * st;\n    st += .5;\n    return st;\n}\n\nvoid practice( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv = rotate2d(uv,sin(iTime));\n    uv *= 5.;\t\t\t\t// tile count\n\n    float delta = step(1.,mod(uv.y,2.)) * cos(iTime);\n    uv.x += delta;\n    if( delta == 0. )\n        uv.x += cos(iTime);\n    delta = step(1.,mod(uv.x,2.)) * sin(iTime);\n    uv.y += delta;\n    if( delta == 0. )\n        uv.y += -sin(iTime);\n\n    uv = fract(uv);\t\t\t// fract - to tile\n    \n    vec2 center = vec2(uv.x,uv.y)-.5;\n\tfloat dist = distance(center,vec2(0.));\n    float feather = .6+sin(iTime)*.2;\n    dist = smoothstep(feather, 1.0, 1.0 - dist);\t\t\t\t\t\t\t\t\t// for a smooth gradient\n    \n    fragColor += vec4(0.,dist,feather,1.);    \n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    practice(fragColor, fragCoord);\n}","name":"Image","description":"","type":"image"}]}