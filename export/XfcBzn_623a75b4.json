{"ver":"0.1","info":{"id":"XfcBzn","date":"1732772228","viewed":55,"name":"UV Texture Reflection 0916","username":"Ponjee","description":"Reflected point on line: https://www.desmos.com/calculator/kod4dlleb5\nReflected rotation on line: https://www.desmos.com/calculator/fadugdjcku","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","reflection","texture","reflect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481;\n\nconst vec2 floor_pos = vec2( 0.2,-0.5 );\nconst vec2 floor_dir = normalize(vec2( 0.25,3.75 ));\nconst vec2 dim = vec2( 1.5,1.0 );\nconst float shininess = 0.4;\n\nvec2 rotate(vec2 p, float a) {\n    return vec2(\n        p.x*cos(a) - p.y*sin(a), \n        p.x*sin(a) + p.y*cos(a)\n    );\n}\n\nvec2 segment( in vec2 p, in vec2 a, in vec2 b ) {\n    vec2 ab = b-a, ap = p-a;\n    return a + ab * ( dot(ap,ab)/dot(ab,ab) );\n}\n\nfloat atan2(in float x, in float y)\n{\n    float pi = PI;\n    return atan(y/x)+(x<0.0?pi:0.0)+(y<0.0?(x>=0.0?2.0*pi:0.0):0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Ranged pixel coordinates (from -1 to 1)\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    uv *= 3.0;\n    \n    // Distance to the floor\n    float df = dot(uv-floor_pos,floor_dir);\n    \n    // Fade factor\n    float ff = clamp((df*shininess)+1.0,0.0,1.0);\n    \n    // uv displacment\n    vec2 disp = vec2(-sin(iTime)*0.25,-cos(iTime)*0.5+0.6)*2.0;\n    // uv rotation\n    float rot = iTime/10.0;\n    \n    // Reflection\n    if (df < 0.0) {\n    // https://www.desmos.com/calculator/c2vwtvuie1\n    // reflected uv\n    vec2 s = segment(disp,floor_pos,floor_pos-vec2(floor_dir.y,-floor_dir.x));\n    vec2 o = s-disp+s;\n    uv -= o;\n    uv = vec2(-uv.x,uv.y);\n    // https://www.desmos.com/calculator/lz6yuuwtux\n    uv = rotate(uv,atan2(s.x-o.x,s.y-o.y)+atan2(s.x-disp.x,s.y-disp.y)+rot+PI);\n    } else {\n    // normal uv\n    uv -= disp;\n    uv = rotate(uv,rot);\n    }\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    uv /= dim;\n    uv = uv*0.5+0.5;\n    // Clamp uv from 0 to 1\n    if ( uv.x>1.0||uv.x<0.0||uv.y>1.0||uv.y<0.0 ) { uv = vec2(-1.0); }\n    \n    // Texture sampling\n    vec4 col = (uv.x<0.0?vec4(0.0):texture(iChannel0, uv));\n    // Reflective surface appearence\n    col *= ff*ff*ff;\n    col = mix(col,vec4(1.0),clamp(( df<0.0?pow(20.0,df):pow(max(0.0,1.0-df),200.0) ),0.0,1.0));\n    \n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}