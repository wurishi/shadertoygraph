{"ver":"0.1","info":{"id":"dlf3DX","date":"1672532957","viewed":113,"name":"Glass Bricks","username":"blurryroots","description":"Watching a movie through glass bricks.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","distortion","sin","distance","repeat"],"hasliked":0,"parentid":"DtXGWf","parentname":"The sin of tan and friends."},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n#define F fragCoord\n\nconst float pi = 355. / 113.;\nconst float halfpi = 0.5 * pi;\nconst float phi = 0.5 * (1. + sqrt (5.));\nconst float phi0 = phi - 1.;\nconst float phi0i = 1. - phi0;\n\nfloat psin (float t) {\n    return 0.5 * (1. + sin (pi * t - halfpi));\n}\nvec2 psin (vec2 t) {\n    return 0.5 * (1. + sin (pi * t - halfpi));\n}\nfloat pcos (float t) {\n    return 0.5 * (1. + cos (pi * t));\n}\nvec2 pcos (vec2 t) {\n    return 0.5 * (1. + cos (pi * t));\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    float t = iTime;\n    float r = R.x / R.y;\n    vec2 uv = fragCoord / R.xy;\n    vec2 uvn = (fragCoord - 0.5 * R.xy)\n        / max (R.x, R.y)\n        ;\n       \n    vec2 zuv = 9.7 * r * uvn;\n    float l = 0.;\n    l = mix (l, (0.4) * length (zuv - tan (zuv)), 0.5);\n    \n    float s = smoothstep (phi*phi * r, -1.0 * r, l);\n    s =  pow (s, .4);\n    \n    vec2 tuv = mix (uvn, vec2 (s), 0.2);\n    vec3 color = vec3 (0.5, 0.0, 0.5);\n    color =  (0. + s) * texture (iChannel0, 1. * uv).rgb;\n    color += (1. - s) * texture (iChannel1, 9. * tuv).rgb;\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}