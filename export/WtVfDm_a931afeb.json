{"ver":"0.1","info":{"id":"WtVfDm","date":"1614488743","viewed":93,"name":"SpiralExperiment - 2 Polygon ","username":"Learner_CC","description":"Learn from aiekick's Penta Spiral : https://www.shadertoy.com/view/WdV3R3","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2dspiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define corner 6.0\nconst vec3 diffColor = vec3(0.5, 0.8, 1.0);\nconst vec3 specColor = vec3(0.7, 0.8, 0.8);\nconst vec3 baseColor = vec3(0.2,0.5,0.8);\n\nfloat spire(vec2 p, float num) {\n    float a = atan(p.y, p.x);\n    float l = log(length(p)) * 16.0 - iTime * 2.0;\n\n    return sin(cos(a * num) * 0.5 + a + l) * 0.5 + 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    vec3 rd = normalize(vec3(uv, 1.0));\n    \n    float rotTime = 0.1 * iTime;\n    uv *= mat2(cos(rotTime), sin(rotTime), -sin(rotTime), cos(rotTime));\n\n    float a = atan(uv.y, uv.x) * 4.0 + iTime;\n    vec3 lp = vec3(cos(a), sin(a), -1);\n    float e = 1./ iResolution.y;\n    \n    float f = spire(uv, corner);\n    float fx = (spire(uv - vec2(e, 0.0), corner) - f);\n    float fy = (spire(uv - vec2(0.0, e), corner) - f);\n    \n    vec3 n = normalize(vec3(fx, fy, -1.));\n    vec3 ld = lp - vec3(uv, 0.0);\n    \n    float len = max(length(ld), 0.01);\n    ld /= len;\n    float atten = (f * f) / len;\n\n\tfloat diff = max(dot(n, ld), 0.);  \n    float spec = pow(max(dot( reflect(-ld, n), -rd), 0.), 2.); \n\n\n    vec3 color =  baseColor * vec3(2.0 * f * f- f);\n    color = smoothstep(0.05, 0.75, pow(color * color, specColor));\n    color = (color * 2.0 + diff * diffColor + spec) * atten;\n    \n    fragColor = vec4(sqrt(color), 1.0);\n}","name":"Image","description":"","type":"image"}]}