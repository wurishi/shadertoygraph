{"ver":"0.1","info":{"id":"mtBcDd","date":"1692441238","viewed":219,"name":"Noise Splash Zoom","username":"leon","description":"zoo-min","likes":18,"published":3,"flags":0,"usePreview":0,"tags":["zoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Noise Splash Zoom\n// by Leon Denise\n// 2023/08/19\n\n#define R iResolution.xy\n#define ss(a,b,t) smoothstep(a,b,t)\nfloat gyroid (vec3 seed) { return dot(sin(seed),cos(seed.yzx)); }\n\nfloat fbm (vec3 seed)\n{\n    float result = 0., a = .5;\n    for (int i = 0; i < 5; ++i, a /= 2.) {\n        seed.z += result*.5;\n        result += abs(gyroid(seed/a)*a);\n    }\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-R/2.)/R.y;\n    float d = length(p);\n    p = normalize(p) * log(length(p)*.5);\n    p = vec2(atan(p.y, p.x), length(p)*.5+iTime*.5);\n    float shades = 6.;\n    float shape = ss(.9, .5, fbm(vec3(p*.5, 0.)));\n    float shade = ceil(shape*shades)/shades;\n    vec3 color = vec3(shade)*ss(2., .0, d);\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}