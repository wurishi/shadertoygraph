{"ver":"0.1","info":{"id":"ddcczS","date":"1695174579","viewed":55,"name":"[apathyhill] CRT Filter WIP","username":"apathyhill","description":".","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["crt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 PIXEL_SIZE = vec2(16.0, 9.0) * 8.0;\nconst vec2 COLOR_MASK = vec2(1.0, 0.5);\n\nvec2 Fisheye(vec2 uv) {\n    return uv;\n}\n\nvec3 CRT(vec2 uv) {\n    vec3 color;\n    \n    // Scale pixels\n    uv *= PIXEL_SIZE;\n    \n    // Offset even pixels\n    if (mod(uv.y, 2.0) >= 1.0) { uv.x += 1.5; } \n    \n    // UV info\n    vec2 id = floor(uv) / PIXEL_SIZE;\n    vec2 fr = fract(uv) * 2.0 - 1.0;\n    float index = mod(uv.x, 3.0);\n    \n    // Get texture\n    color = texture(iChannel0, id).rgb;\n    \n    // Color grating\n    if (index < 1.0)      { color *= COLOR_MASK.xyy; }\n    else if (index < 2.0) { color *= COLOR_MASK.yxy; }\n    else if (index < 3.0) { color *= COLOR_MASK.yyx; }\n    \n    // Add bulb shape\n    color *= smoothstep(1.0, 0.75, dot(fr, fr));\n    \n    \n    return color;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 color = CRT(Fisheye(uv));\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}