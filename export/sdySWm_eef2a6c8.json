{"ver":"0.1","info":{"id":"sdySWm","date":"1634738671","viewed":83,"name":"Mie phase","username":"BadBadDog","description":"Mie phase function based on Henyey-Greenstein solution","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n#define PI 3.141592\n\nfloat smoothx( float v1, float v2 )\n{\n    float dif = clamp( (v1-v2) / 0.2, 0.0, 1.0 );\n    return mix( v2, v1, dif );\n}\n\nfloat HGS( float g, float light_dot, float col )\n{\n\tfloat gw = 0.26;\n\tfloat gb = 0.90;\n\tfloat gg = -0.9995;\n    float wkf = pow(light_dot, 2.0) * (1.0-col);\n\tfloat wide = 0.5 - (1.0 * PI * pow(-0.6 + gw * light_dot, 4.0) ) ;\n\tfloat fogbow = (1.0 - gb * gb) / (9.0 * PI * max( pow( -0.32 - gb * light_dot, 2.0), pow( wkf + 0.58 + gb * light_dot, 1.4)) ) ;\n\tfloat glory = (1.0 - gg * gg) / (4.0 * PI * pow(1.0 - gg * light_dot,2.0));\n\tfloat hg = (1.0 - g * g) / ( pow( 1.0 + g*g - 2.0*g*light_dot, 1.5 ) * 4.0 * PI );\n\treturn 0.05 + max( max( fogbow, glory ), max( wide, hg ) ) - (1.0-col);\n}\n\n\nfloat Check( float val, float uv )\n{\n    return float( floor(val*1000.0)>floor(uv*1000.0)-2.0 && floor(val*1000.0)<floor(uv*1000.0)+2.0 );\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 texture_coordinate = fragCoord/iResolution.xy;\n\n\n\tvec3 tcolor = vec3(0);\n\tif( floor(texture_coordinate.y*100.0)==20.0 ) tcolor.b = 0.3; \n\tif( floor(texture_coordinate.y*100.0)==40.0 ) tcolor.b = 0.3; \n\tif( floor(texture_coordinate.y*100.0)==60.0 ) tcolor.b = 0.3; \n\tif( floor(texture_coordinate.y*100.0)==80.0 ) tcolor.b = 0.3; \n\tif( floor(texture_coordinate.x*100.0)==55.0 ) tcolor.g = 0.1; \n\tif( floor(texture_coordinate.x*100.0)==77.0 ) tcolor.g = 0.1; \n\n\t// phase check\n\ttcolor = max( tcolor, vec3( Check( HGS( 0.7, 1.0-texture_coordinate.x*2.0, 1.00 ) , texture_coordinate.y ), 0.0, 0.0 ) ) ;\n\ttcolor = max( tcolor, vec3( 0.0, Check( HGS( 0.7, 1.0-texture_coordinate.x*2.0, 0.995 ) , texture_coordinate.y ), 0.0 ) ) ;\n\ttcolor = max( tcolor, vec3( 0.0, 0.0, Check( HGS( 0.7, 1.0-texture_coordinate.x*2.0, 0.97 ) , texture_coordinate.y ) ) ) ;\n\n\n\n\n    // Output to screen\n    fragColor = vec4(tcolor,1.0);\n}","name":"Image","description":"","type":"image"}]}