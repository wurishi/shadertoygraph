{"ver":"0.1","info":{"id":"dllXDs","date":"1675560116","viewed":88,"name":"PSP XMB Menu (WIP)","username":"Ned_","description":"A WIP recreation of the PSP's menu background","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["psp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \n\n +~ Todo: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+\n |                                                              |\n |  - Create function to smoothly interpolate the offsets       |\n |  - Add Wave 1 Offsets                                        | \n |  - Add color gradients                                       |\n |  - Add smooth edges (with the secret-sauce-brighter-thingy)  |\n |                                                              |\n +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+\n \n*/\n\nfloat sinNoise(float speed, float offset, float strength) {\n    return sin((iTime * speed) + offset) * strength;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Control variables\n    float height = 0.3;\n    float width = 6.0;\n    float flatness = 7.0;\n    float speed = 0.3;\n    \n    // Wave 2 Offsets\n    float heightOffset = sinNoise(0.2, 1.0, 0.015);\n    float flatnessOffset = sinNoise(0.3, 1.0, 1.0);\n    \n    float widthOffset = sinNoise(0.1, 1.0, 0.2);\n    float horizontalOffset = sinNoise(0.15, 1.0, 0.5);\n    \n    // Color settings\n    vec3 backgroundColor = vec3(0.1, 0.2, 0.75);\n    vec3 wave1Color = vec3(0.2, 0.65, 0.8);\n    vec3 overlapColor = vec3(0.3, 0.75, 1.0);\n\n    \n    bool isInWave1 = \n    (uv.y < height + sin(uv.x * width + iTime * speed) / flatness);\n    \n    bool isInWave2 =\n    (uv.y <\n    (height + heightOffset)\n    + sin(uv.x * (width + widthOffset)\n    + (iTime + horizontalOffset) * speed)\n    / (flatness + flatnessOffset));\n    \n    \n    vec3 col;\n    \n    if(isInWave1 && isInWave2)\n    {\n        col = overlapColor;\n    }\n    else if(isInWave1 || isInWave2)\n    {\n        col = wave1Color;\n    }\n    else\n    {\n        col = backgroundColor;\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}