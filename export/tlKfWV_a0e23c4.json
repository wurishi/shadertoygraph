{"ver":"0.1","info":{"id":"tlKfWV","date":"1615123662","viewed":60,"name":"spherical geometry","username":"Aratelnar","description":"equidistant azimuthal projection of spherical geometry","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["geometry","spherical","elliptic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 toPolar(vec2 o)\n{\n    return vec2(length(o), acos(o.x/length(o))*sign(o.y));\n}\n\nvec2 toLinear(vec2 o)\n{\n    return vec2(o.x*cos(o.y), o.x*sin(o.y));\n}\n\nvec2 dist(vec2 r, vec2 o)\n{\n    vec2 res;\n    res.x = acos(cos(r.x)*cos(o.x)+sin(r.x)*sin(o.x)*cos(r.y-o.y));\n    res.y = acos((cos(r.x) - cos(res.x)*cos(o.x))/sin(res.x)/sin(o.x));\n    res.y = o.y + res.y;\n    return res;\n}\n\nfloat line(vec2 p, vec2 o, vec2 n)\n{    \n    vec2 d = dist(p, o);\n    \n    return cos(d.y-n.y);\n}\n\nfloat square(vec2 p)\n{\n    vec2 o = vec2(0.,radians(0.));\n    \n    \n    vec2 v1 = dist(vec2(1,radians(0.  )),o);\n    vec2 v2 = dist(vec2(1,radians(90. )),o);\n    vec2 v3 = dist(vec2(1,radians(180.)),o);\n    vec2 v4 = dist(vec2(1,radians(270.)),o);\n    \n    float l1 = line(p,vec2(1,radians(0.  )+iTime),vec2(0,radians(180.)+iTime));\n    float l2 = line(p,vec2(1,radians(90. )+iTime),vec2(0,radians(270.)+iTime));\n    float l3 = line(p,vec2(1,radians(180.)+iTime),vec2(0,radians(0.  )+iTime));\n    float l4 = line(p,vec2(1,radians(270.)+iTime),vec2(0,radians(90. )+iTime));\n    return max(max(max(l1,l2),l3),l4);\n}\n\nfloat circle(vec2 p)\n{\n    vec2 o = vec2(radians(70.), iTime);\n    return dist(p,o).x-radians(90.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv *= 12.;\n    uv *= iResolution.xy/iResolution.x;\n    uv = toPolar(uv);\n    // Time varying pixel color\n    vec3 col = vec3(1,1,1);\n    \n    if(square(uv) < 0.) col *= vec3(.25,0,.5);\n    //col *= line(uv);\n    if(uv.x > radians(180.)) col = vec3(0.5);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}