{"ver":"0.1","info":{"id":"XscyDs","date":"1520933393","viewed":1848,"name":"Glitchy pixel sorting","username":"udart","description":"Crazy glitchy effect\nFrom https://www.shadertoy.com/view/XlGXzw","likes":18,"published":3,"flags":48,"usePreview":0,"tags":["pixelsorting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord.xy / iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"bool reset() {\n    return texture(iChannel3, vec2(32.5/256.0, 0.5) ).x > 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 texel = 1. / iResolution.xy*3.0;\n    \n    float step_y = texel.y;\n    vec2 s  = vec2(0.0, -step_y);\n    vec2 n  = vec2(0.0); //vec2(0.0, step_y);\n\n    vec4 im_n =  texture(iChannel0, uv+n);\n    vec4 im =    texture(iChannel0, uv);\n    vec4 im_s =  texture(iChannel0, uv+s);\n    \n    vec4 source = texture(iChannel1, uv);\n    float sourceLum = dot(source, vec4(0.299, 0.587, 0.114, 0.));\n    \n    vec4 bright = vec4(0.0);\n    if (sourceLum > 0.5)\n        bright = source;\n    \n    // use luminance for sorting\n    float len_n = dot(im_n, vec4(0.299, 0.587, 0.114, 0.));\n    float len = dot(im, vec4(0.299, 0.587, 0.114, 0.));\n    float len_s = dot(im_s, vec4(0.299, 0.587, 0.114, 0.));\n    \n    if(int(mod(float(iFrame) + fragCoord.y, 2.0)) == 0) {\n        if ((len_s > len)) { \n            im = im_s;    \n        }\n    } else {\n        if ((len_n < len)) { \n            im = im_n;    \n        }   \n    }\n\n    vec4 col = vec4(1.0);\n    \n    // blend with image\n    if(iFrame<1 || reset()) {\n        fragColor = texture(iChannel1, uv);\n    } else {\n\t    //fragColor = (texture(iChannel1, uv)*5. + im * 94. ) / 100.;\n        col = (bright*5. + im * 94. ) / 100.;\n        //It's here the crazy stuff happens\n        fragColor = mix(source*2.,col,col.a*2.);\n    }\n    \n}","name":"Buf A","description":"","type":"buffer"}]}