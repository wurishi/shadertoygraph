{"ver":"0.1","info":{"id":"3s33W8","date":"1568282329","viewed":329,"name":"Triangularity","username":"gls9102","description":"Another adaptation of my shader, http://glslsandbox.com/e#56734.2","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["triangle","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// v1.1\n\nvec3 hsv2rgb(vec3 c) //some formula copied from the internet\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.rrr + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.rrr, clamp(p - K.rrr, 0.0, 1.0), c.y);\n}\n\nvec2 ran22(vec2 uv) {\n\treturn fract(sin(vec2(uv.x*3.2,uv.y*21.5+uv.x/3.0))*120919.4+0.6);\n}\n\nfloat triangle(vec2 uv) {\n\tvec2 pat = uv;\n\tfloat b = 1.0;\n\tpat.y *= b/2.0;\n\tpat.x = fract(uv.x+floor(uv.y*b)*0.5) < 0.5 ? -pat.x : pat.x;\n\tif ( fract(pat.x+pat.y) > 0.5 ) {\n\t\tvec2 off = ran22(floor( vec2(uv.x+fract(floor(uv.y*b)/2.0),uv.y*b))*vec2(1.12,2.02))*2.0-1.0;\n\t\treturn length(floor( vec2(uv.x+fract(floor(uv.y*b)/2.0),uv.y*b) )-vec2(fract(floor(uv.y*b)/2.0),0.0)-off);\n\t} else {\n\t\tvec2 off = ran22(floor( vec2(uv.x+fract(floor(uv.y*b+1.0)/2.0),uv.y*b))*vec2(4.011,15.32))*2.0-1.0;\n\t\treturn length(floor( vec2(uv.x+fract(floor(uv.y*b+1.0)/2.0),uv.y*b) )-vec2(fract(floor(uv.y*b+1.0)/2.0),-b/2.0)-off);\n\t}\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = (fragCoord.xy/iResolution.x);\n\tuv -= vec2(1.0,iResolution.y/iResolution.x)/2.0;\n\tuv *= 30.0;\n\tfloat col = max(sin(triangle(uv)/3.0-iTime*3.0),0.0);\n\n\tfragColor = vec4(hsv2rgb(vec3(iTime/8.0,1.0-col/3.0,col)),1.0);\n}","name":"Image","description":"","type":"image"}]}