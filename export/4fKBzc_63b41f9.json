{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":1,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec3 color = texture(iChannel1, uv).rgb;\n\n    // Render each square with its color\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"video","id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define UPDATE_INTERVAL_SECS 0.5\n#define FLASH (mod(iTime,4.) < 2.)\n\n// Random number generator function\nfloat random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(floor(iTime / UPDATE_INTERVAL_SECS) + 12.9898, 78.233))) * 43758.5453123);\n}\n\n// Generate a random color based on UV coordinates\nvec3 randomColor(vec2 st) {\n    return vec3(random(st), random(st + vec2(1.0, 0.0)), random(st + vec2(0.0, 1.0)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv0 = fragCoord / iResolution.xy;\n    vec2 uv = uv0 * vec2(iResolution.x/iResolution.y, 1.);\n    float gridSize = 60.0;\n\n    // Calculate the current grid cell coordinates\n    vec2 gridUv = floor(uv * gridSize);\n\n    // sample previous frame\n    vec4 previousColor = texture(iChannel1, uv0);\n\n    // only update sometimes\n    float frameRate = 60.0; // TODO: prolly iFrameRate (somehow)\n    bool shouldUpdate = mod(float(iFrame), UPDATE_INTERVAL_SECS * frameRate) == 0.;\n    vec3 color = shouldUpdate ? randomColor(gridUv) : previousColor.rgb;\n\n    if (FLASH || shouldUpdate) {\n        vec4 tex = texture(iChannel0, floor(uv0*gridSize) / gridSize);\n        color -= tex.rgb / 3.0;\n    }\n\n    // Set the final fragment color\n    fragColor = vec4(color, 1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"4fKBzc","date":"1734372616","viewed":24,"name":"zipzoop colorfx","username":"bombblob","description":"experimenting with buffer sampling and ","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["colors","hiddenimage"],"hasliked":0,"parentid":"","parentname":""}}