{"ver":"0.1","info":{"id":"ctGGRR","date":"1683384169","viewed":39,"name":"CairoTile","username":"darkdivan","description":"based on https://www.youtube.com/watch?v=51LwM2R_e_o&ab_channel=TheArtofCode","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cairotile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 5.1\n\n\nfloat Hash21(vec2 p){\n    p = fract(p*vec2(12234.234, 234.4) );\n    p += dot(p, p+213.42);\n    return fract(p.x*p.y);\n}\n\nvec3 Cairo(vec2 uv, float k) {\n\n    vec2 id = floor(uv);\n    float check = mod(id.x+id.y, 2.0); // 0 or 1\n    uv = fract(uv)-0.5;\n \n    vec2 p = abs(uv);\n \n    if (check==1.0) p = p.yx;\n \n    \n    //float k = mouse.y*2.0; // 0-1\n    float a = (k*0.5+0.5)*3.1415;\n    vec2 n = vec2(sin(a), cos(a));\n    float d = dot(p1-0.5, n); // slanted line\n    \n    if (d*(check-0.5)<0.)\n        id.x += sign(uv.x)*0.5;\n    else\n        id.y += sign(uv.y)*0.5;\n    \n    d = min(d, p.x); // straight line\n    d = max(d, -p.y); // straight line\n    d = abs(d);\n    d = min(d, dot(p-0.5, vec2(n.y, -n.x) ));\n    \n    return vec3(id, d);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n\n\n    //vec3 grid = vec3(0);\n    vec3 col = vec3(0);\n    uv *= SCALE;\n    \n    \n\n    \n    vec3 c = Cairo(uv, mouse.y);\n    vec2 id = c.xy;\n    float d = c.z;\n\n    col += d ;\n    \n    float r = Hash21(id);\n    \n    \n    \n    col *= 1.0 + sin(r*6.283185+iTime);\n    \n    col += smoothstep(0.1/SCALE, 1.0/SCALE *0.1000, c.z-0.001);\n    \n\n    \n    //if ( max(p.x, p.y)>0.49 ) col.xy += vec2( 0.6, 0.0);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}