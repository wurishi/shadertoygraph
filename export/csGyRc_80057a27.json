{"ver":"0.1","info":{"id":"csGyRc","date":"1696686014","viewed":24,"name":"Raymarching de Boucatcheow","username":"litchi","description":"On fait de la 3D en rigoulant","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3dtest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p)\n{\n    float radius = 1.;\n    vec3 spos = vec3(0.,0.,0.);\n    return distance(p, spos)-radius;\n}\n\nvec3 getNorm(vec3 p, float d)\n{\n    vec2 e = vec2(0.01, 0.);\n    return normalize(vec3(d) -\n    vec3(map(p-e.xyy), map(p-e.yxy), map(p-e.yyx)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.xx;\n\n    float d = length(uv);\n    d -= 0.5;\n\n    vec3 col = vec3(0.9, 0.4, 0.4);\n    \n    vec3 camPos = vec3(0., 0., -5.);\n    \n    vec3 viewDir = normalize(vec3(uv.x, uv.y,1));\n    \n    \n    vec3 p = camPos;\n    vec3 spos = vec3(0., 0., 0.);\n    float radius = 1.0;\n   \n    for (int i = 0; i < 128; ++i)\n    {\n        float dist = map(p);\n        if (dist < 0.001)\n        {\n           col = vec3(1.,.3,.4);\n           vec3 n = normalize(p);\n           col = n*.5+.5;\n           break;\n        }\n        p = p + viewDir * dist;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}