{"ver":"0.1","info":{"id":"NllcDB","date":"1648655130","viewed":196,"name":"Very Simple Squares","username":"SnoopethDuckDuck","description":"Simple example using this equation:\nhttps://www.desmos.com/calculator/rrkc02de7q\n\nYou can also smoothstep it","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["e"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159\n#define thc(a,b) tanh(a*cos(b))/tanh(a)\n\nfloat sdBox( in vec2 p, in vec2 b ) {\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat fn(float t, float a) {\n    float f = 2. * abs(fract(t) - 0.5);\n    return (clamp(f, 1. - a, a) + a - 1.) / (2. * a - 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;    \n    uv *= 2.;\n    \n    // Width of squares\n    float a = 0.25 + 0.125 * thc(2., -iTime);\n    \n    // Alters trajectory of square\n    float h = 0.675 + 0.075 * thc(2., -iTime);\n    \n    // Trajectory of square\n    float t = 0.25 * iTime;\n    vec2 p = vec2(fn(t, h), fn(t + 0.25, h))-0.5;\n    \n    //Draw squares\n    float k = 2. / iResolution.y;\n    float s = smoothstep(-k, k, 0.02 - abs(-sdBox(uv - p,   vec2(0.8 * a)) + 0.2 * a));\n         s += smoothstep(-k, k, 0.02 - abs(-sdBox(uv, 0.8 * vec2(0.5 - a)) + 0.2 * (0.5 - a)));\n    \n    vec3 col = vec3(s) + 0.2;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}