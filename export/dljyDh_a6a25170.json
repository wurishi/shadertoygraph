{"ver":"0.1","info":{"id":"dljyDh","date":"1691772464","viewed":53,"name":"Truchet_RGB","username":"zyz414275148","description":"https://www.youtube.com/watch?v=pmS-F6RJhAk","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nfloat Length(vec2 p, float k)\n{\n    p = abs(p);\n    return pow(pow(p.x, k) + pow(p.y, k), 1./k);\n}\n\nfloat Hash21(vec2 p)\n{\n    p = fract(p * vec2(195.746, 342.895));\n    p += dot(p, p + 218.327);\n    return fract(p.x * p.y);\n}\n\nfloat Truchet(vec2 p, float powK, float thickness, float pattern)\n{\n    vec2 id = floor(p);\n    p = fract(p) - .5;\n    \n    float d = 0.;\n    float result = 1.;\n    \n    if(Hash21(id) < .5) p.x *= -1.;\n    \n    float s = p.x > -p.y ? 1. : -1.;\n    \n    vec2 cp = p - vec2(.5, .5) * s; // Center position\n    float centerDist = Length(cp, powK);\n    \n    float w = .005; // Blur\n    float edgeDist = abs(centerDist - .5) - thickness;\n    result *= smoothstep(w, -w, edgeDist);\n    \n    float arcT = atan(cp.x, cp.y);\n    result *= smoothstep(-.3, .8, sin(PI * .5 + arcT * 2.) *.5 + .5);\n    \n    float check = mod(id.x + id.y, 2.) * 2. - 1.;\n    result *= 1. + sin(check * arcT * 30. + edgeDist * 100. - iTime * 5.) * .3 * pattern;\n    \n    // if(p.x > .49 || p.y > .49) col += 1.;\n    \n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord -.5*iResolution.xy ) / iResolution.y;\n\n    float cd = Length(uv, 1.5);\n    float w = mix(0.1, .007, smoothstep(0.01, 0.6, cd));\n    \n    uv *= 1.8 * (sin(iTime) + 2.);\n\n    uv += vec2(.5) * (vec2(iTime) - iMouse.xy * 5. / iResolution.xy);    \n\n    float t1 = Truchet(uv, 2., w, 1.);\n    float t2 = Truchet(uv + .5, 1., .08 - w * .5, .0);\n    float t3 = Truchet(uv - .25, 3., .03, .5) * sin(iTime + cd * 15.);\n    \n    vec3 col = t1 * vec3(1., .8, .8) + \n               (t2 > t1 ? vec3(.8, 1., .8) : vec3(0.)) +\n               t3 * vec3(.8, .8, 1.);\n\n    // Output to screen\n    fragColor = vec4(col.rgb, 1.0);\n}","name":"Image","description":"","type":"image"}]}