{"ver":"0.1","info":{"id":"ms2SWD","date":"1670344539","viewed":60,"name":"Green circle hole","username":"Dragon3DGraff","description":"circle with a hole","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["pulse","mouse","circle"],"hasliked":0,"parentid":"DsSSWz","parentname":"Green circle"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 circleWithPlus(vec2 uv, float r, vec3 color) {\n#define size 0.035\n#define scale 4.0\n    if (uv.y < scale*size &&\n        uv.y > size &&\n        uv.x > -size &&\n        uv.x < size) {\n            return vec4(0.0);\n    }\n    \n    if (uv.x > -scale*size &&\n        uv.x < scale*size &&\n        uv.y < size &&\n        uv.y > -size ) {\n            return vec4(0.0);\n    }\n    \n     if (uv.y > -scale*size &&\n         uv.y < -size &&\n         uv.x > -size &&\n         uv.x < size) {\n            return vec4(0.0);\n    }\n    \n    float d = length(uv);\n    vec4 col = vec4(vec3(color), 1.);\n    col.a = smoothstep(r, r - .005, d);\n    \n    return col;\n}\n\nvec4 circle(vec2 uv, float r, vec3 color) {\n    float d = length(uv);\n    vec4 col = vec4(vec3(color), 1.);\n    col.a = smoothstep(r, r - .005, d);\n    \n    return col;\n}\n\nvec4 background(vec2 uv, vec3 color){\n    return  texture(iChannel0, uv + 0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 location = iMouse.xy;\n    vec2 m = iMouse.xy / iResolution.xy;\n         m -= .5;\n    \n         uv -= 0.5;\n         uv.x *= iResolution.x/iResolution.y;\n         m.x *= iResolution.x/iResolution.y;\n    if(iMouse.x == 0.0 && iMouse.y == 0.0) uv = uv; else uv = uv - m;\n    \n    vec4 col = vec4(0.);\n    col = mix(col, background(uv, vec3(0.8, .8, .650)), 1.0);\n       \n        vec4 circle1 = circleWithPlus(uv, 0.3, vec3(.19, .55, .1));\n             col = mix(col, circle1, circle1.a);\n        \n        vec4 circle2 = circle(uv, 0.03+sin(iTime)*0.015, vec3(.9, .25, .1));\n             col = mix(col, circle2, circle2.a);\n\n    fragColor =vec4(col);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}