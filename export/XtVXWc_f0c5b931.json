{"ver":"0.1","info":{"id":"XtVXWc","date":"1486219003","viewed":198,"name":"Sunset in Paradise","username":"MrFlamey","description":"My version of Iq's neat palm tree tutorial explaining how to make shapes with mathematical functions. Just starting to learn shader programming.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    vec2 q = p - vec2(0.35, 0.7);\n    float t = iTime;\n    \n    // base sky color\n    vec3 col = mix(vec3(1.0, 0.2, 0.0), vec3(1.0, 0.6, 0.0), sqrt(p.y));\n    \n    // sun\n    float r = 0.175;\n    vec2 sp = vec2(p.x, p.y * (iResolution.y / iResolution.x)) - vec2(0.7 + 0.004 * sin(p.y * 80.0 + t * 4.0), 0.25);\n    col += 1.0 * (1.0 - smoothstep(r, r + 0.05, length(sp)));\n    \n    // canopy\n    r = 0.2 + 0.1 * cos(3.3 + atan(q.y,q.x) * 9.0 + 20.0*q.x);\n    col *= smoothstep(r, r + 0.04, length(q));\n    \n    // trunk\n    r = 0.01 + 0.025 * (1.0 - p.y);\n    r += 0.002 * cos(q.y * 100.0);\n    r += exp(-30.0 * p.y);\n    col *= 1.0 - (1.0 - smoothstep(r, r + 0.01, abs(q.x - 0.2 * sin(2.0 * q.y)))) * (1.0 - smoothstep(0.01, 0.01, q.y));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}