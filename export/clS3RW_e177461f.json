{"ver":"0.1","info":{"id":"clS3RW","date":"1672910551","viewed":136,"name":"3 Color Noise","username":"sugrca","description":"study of noise shader like \"3Color blend\" node in Unreal Engine. \n\nreferences I used for this one.\nhttps://www.shadertoy.com/view/XsVSDz\nhttps://www.shadertoy.com/view/wdyBzK","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n //Mouse controll for B channel\n    vec2 MousePosi = iMouse.xy / iResolution.xy;\n    \n    float MouseCoordX = MousePosi.x + iTime * 0.2;\n    float MouseCoordY = MousePosi.y - iTime * 0.2;\n    \n //Main component of the noise \n    //define coordinate\n    vec2 coords1 = vec2(fragCoord.xy / iResolution.xy);\n    vec2 coords2 = coords1;\n    \n    //Core\n    float Speed = 0.1;\n    float TPower = 0.05;\n    coords2.x = coords2.x + iTime * Speed;\n    float TMod = texture(iChannel0, coords2).x * TPower;\n    float TModB = texture(iChannel1, coords2).x * 0.7;\n    //Make oords\n    vec2 coordsR = vec2(coords1.x + TMod, coords1.y - TMod);\n    vec2 coordsG = vec2(coords1.x - TMod, coords1.y + TMod);\n    vec2 coordsB = vec2(MouseCoordX + TModB, MouseCoordY + TModB);\n    \n //Color value of each channel\n    float ColorR = vec4(texture(iChannel0, coordsR)).x; \n    float ColorG = vec4(texture(iChannel0, coordsG)).x; \n    float ColorB = vec4(texture(iChannel1, coordsB)).x; \n\n //Final color output\n    fragColor = vec4(ColorR, ColorG, ColorB, 1.0);\n    \n    //↓debug for B channel↓\n    //fragColor = vec4(0.0, 0.0, ColorB, 1.0);\n}","name":"Image","description":"","type":"image"}]}