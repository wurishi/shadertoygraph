{"ver":"0.1","info":{"id":"4cXXW8","date":"1705176959","viewed":63,"name":"nastia 2","username":"vjblind","description":"liquide","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["liquide"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":" \nfloat nsize = 1.0;\nvec3 lightColor = vec3(.0,8.0,10.0);\n\n\nfloat N21(vec2 p) {\n\treturn fract(sin(p.x*123.+p.y*3456.)*3524.);\n}\n\nvec2 N22(vec2 p) {\n\treturn vec2(N21(p), N21(p-324.));\n}\n\n\n\n\n\nfloat metaNoiseRaw(vec2 uv, float density)\n{\n     \n     \n    float celID=0.0;\n    float  m= 0.0;\n    float mind=10.04;  \n    float mask=10.04;\n\n    for(float i=0.;i<150.;i++){\n  \n    \n    vec2 n=N22(vec2(i));\n        vec2 p=sin(n*iTime/3.);\n    float d =length(uv-p); \n        m+=smoothstep(1.3,-2.495,d);  \n   float dd=d-2.;\n       // d*=dd*.8;  \n        if(d>m) {mind= d/3.;\n             \n                 celID=i;  }\n    }\n    // Time varying pixel color\n    vec3 col = vec3(mind);\n    return pow(mind, 2.1);\n \n} \nvec2 map(vec2 uv)\n{ \n \n \n    return vec2(smoothstep(10.10, 0.040+2.,  \n                                 metaNoiseRaw(uv, 0.07)*30.),10.);\n \n                                 \n}\n\nvec3 calculateNormals(in vec2 p,float s){\n   \n     \n    vec2 e=vec2(nsize*s/iResolution.x,.0) ;\nreturn normalize(vec3 (map(p+e.xy).x-map(p-e.xy).x  ,\n                       map(p+e.yx).x-map(p-e.yx).x  ,\n \t\t\t\t\t  .010));\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n;\n    // Time varying pixel color\n    vec3 col = vec3( metaNoiseRaw(uv, 3.));\n //   col*=-col/col*-3.5;\n    // Output to screen\n    \n   vec3 n = calculateNormals(uv*1., 10.1);  \n        vec3 lDir = normalize(vec3(-1.0,1.0,0.0));\n    float l = max(.42, dot(n.xyz, lDir));\n    \n    \n           \n    vec4 tex = texture(iChannel0, uv + n.xx );\n    vec3 col1 = mix(tex.xyz*l*2., tex.xyz*1.0, min(metaNoiseRaw(uv, 3.),.8));\n    \n  // col= mix(tex.xyz, col,1.- col);  \n  //col1+=0.1-n*l;\n  //  col1 = vec3(min(metaNoiseRaw(uv, 3.),10.));\n    fragColor = vec4(col1,1.0);\n}","name":"Image","description":"","type":"image"}]}