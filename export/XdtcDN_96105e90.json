{"ver":"0.1","info":{"id":"XdtcDN","date":"1687381665","viewed":67,"name":"boids","username":"teriyaki","description":"based on boids by craig reynolds","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["flocking"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision highp float;\n#endif\n\n#define      PI 3.141592653589793238462643383279502884 // mm pie\n#define     TAU 6.283185307179586476925286766559005768 // pi * 2\n#define HALF_PI 1.570796326794896619231321691639751442 // pi / 2\n\nvec3 hsv2rgb(vec3 c) {\n  vec3 rgb = clamp(abs(mod(c.x*6.+vec3(0.,4.,2.),6.)-3.)-1.,0.,1.);\n  rgb = rgb * rgb * (3. - 2. * rgb);\n  return c.z * mix(vec3(1.), rgb, c.y);\n}\n\nmat2 rotate(float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nfloat poly(int sides, vec2 uv, vec2 pos, vec2 stretch, float rad, float angle) {\n    uv -= pos;\n    uv *= rotate(angle);\n    uv *= stretch;\n    float r = TAU / float(sides);\n\tfloat a = atan(uv.x, uv.y) + PI;\n    float d = cos(floor(a/r + .5) * r-a) * length(uv);\n    float s = 2. / iResolution.y;\n\treturn smoothstep(rad + s, rad - s, d);\n}\n\nvec4 boid(vec2 uv, vec2 pos, vec2 vel) {\n    float radius = 25. / iResolution.y;\n    float angle = atan(vel.x, vel.y);\n    vec2 stretch = vec2(1., .666);\n    float m = poly(3, uv, pos, stretch, radius, angle);\n    m -= poly(3, uv, pos, stretch, radius * .666, angle);\n    vec3 col = hsv2rgb(vec3(length(vel), 1., 1.));\n    return vec4(col, 1.) * m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord.xy - iResolution.xy) / iResolution.y;\n    vec4 tx = texture(iChannel0, vec2(.0, .0));\n    vec4 b0 = boid(uv, tx.rg, tx.ba);\n    tx = texture(iChannel0, vec2(.5, .0));\n    vec4 b1 = boid(uv, tx.rg, tx.ba);\n    tx = texture(iChannel0, vec2(1., .0));\n    vec4 b2 = boid(uv, tx.rg, tx.ba);\n    fragColor = b0 + b1 + b2;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// red: position.x\n    // green: position.y\n    // blue: velocity.x\n    // alpha: velocity.y\n    \n    vec4[] initial_boids = vec4[] (\n        vec4(\n        \tsin(iTime)*.25,\n        \tcos(iTime)*.25,\n        \tsin(iTime)*-.15,\n        \tcos(iTime)*.35\n        ),\n        vec4(\n        \tsin(iTime)*-.25,\n        \tcos(iTime)*-.25,\n        \tsin(iTime)*.15,\n        \tcos(iTime)*-.35\n        ),\n        vec4(\n        \tsin(iTime)*-.5,\n        \tsin(iTime)*.5,\n        \tsin(iTime)*.5,\n        \tsin(iTime)*.5\n        )\n    );\n    \n    float count = 3.;\n    vec2 st = fragCoord.xy / iResolution.xy;\n    int index = int(st.x * count);\n    vec4 tx = texture(iChannel0, fragCoord);\n    fragColor = initial_boids[index];\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4[] initial_boids = vec4[] (\n        vec4(0.),\n        vec4(0.),\n        vec4(0.)\n    );\n    \n    float count = 3.;\n    vec2 st = fragCoord.xy / iResolution.xy;\n    int index = int(st.x * count);\n    vec4 tx = texture(iChannel0, fragCoord);\n    fragColor = tx;\n}","name":"Buffer B","description":"","type":"buffer"}]}