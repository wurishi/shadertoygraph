{"ver":"0.1","info":{"id":"7lyGWm","date":"1643646682","viewed":104,"name":"Playground 2d rotate huntnight","username":"HuntNight1337","description":"Playground 3d huntnight","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(float radius, vec2 uv, vec2 cPos)\n{\n    vec2 localPos = uv - cPos;\n    float t = (length(localPos) - radius);\n    t = smoothstep(0.0, 1.0, t);\n    return 1.0 - t;\n}\nfloat rect(vec2 size, vec2 uv, vec2 cPos)\n{\n    vec2 localPos = uv - cPos;\n    vec2 d = abs(localPos) - size;\n    float t = max(d.x, d.y);\n    t = step(0.0001, t);\n    return 1.0 - t;\n}\nfloat rectRounded(vec2 size, vec2 uv, vec2 cPos)\n{\n    float radius = min(size.x, size.y) / 4.0;\n    vec2 localPos = uv - cPos;\n    vec2 fromRect = abs(localPos) - size;\n    float t = length(max(fromRect, vec2(0.0))) - radius;\n    t = min(max(fromRect.x, fromRect.y), t);\n    t = smoothstep(0.0, 1.0, t);\n    \n    return 1.0 - t;\n}\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragCoord -= iResolution.xy / 2.0;\n    fragCoord = rotate2d(sin(iTime * 0.5) * 3.14) * fragCoord;\n    fragCoord += iResolution.xy / 2.0;\n    vec3 bgCol = vec3(uv.x, uv.y, uv.y);\n    //vec3 bgCol = vec3(1.0, 1.0, 1.0);\n    vec3 fgCol = vec3(0.2, 0.4, 0.5);\n    //float figure = Circle(iResolution.y / 4.0, fragCoord, iResolution.xy / 2.0);\n    //float figure = rect(vec2(iResolution.y / 4.0), fragCoord, iResolution.xy / 2.0);\n    float figure = rectRounded(vec2(iResolution.y / 4.0), fragCoord, iResolution.xy / 2.0);\n    fragColor = mix(vec4(bgCol, 1.0), vec4(fgCol, 1.0), figure);\n}","name":"Image","description":"","type":"image"}]}