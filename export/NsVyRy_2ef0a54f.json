{"ver":"0.1","info":{"id":"NsVyRy","date":"1655136370","viewed":175,"name":"Toon landscape 2d","username":"opexu","description":"simple toon landscape 2d from scratch","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","landscape","toon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\n#define t iTime\n\nvec2 polar(vec2 p){\n    return vec2(\n        atan(p.y, p.x),\n        sqrt(p.x*p.x+p.y*p.y)\n    );\n}\n\nfloat sun(vec2 uv){\n    const float SUN_RAYS = 12.;\n    uv += vec2(.7, -.35);\n    vec2 p = polar(uv);\n    float s = 1.-smoothstep(.1, .15, length(p.y));\n    float r = smoothstep(.5,.7,sin((p.x+t*0.1)*SUN_RAYS));\n    r *= smoothstep(.9, .3, p.y);\n    return clamp(s+r,.0, 1.);\n}\n\nfloat background(vec2 uv){\n    return uv.y;\n}\n\nvec2 ground(vec2 uv){\n    float p = uv.y + sin(uv.x*4.)/8.+sin(uv.x+0.5*8.)/16.+sin(uv.x*16.)/32.;\n    //p = clamp(.0,1.,p);\n    float hor = 1.-smoothstep(.2, .25, p);\n    hor = hor-p-0.4;\n    //hor = clamp(hor,.0,1.);\n    \n    float outline = abs(hor);\n    outline = 1.-smoothstep(.25,.35, outline);\n    //outline = clamp(outline,.0,1.);\n    \n    return vec2(hor, outline);\n}\n\nvec3 trees(vec2 uv){\n    float ps = sin(uv.x*4.)/8.+sin(uv.x*sin(t*.15)+0.5*8.)/16.+sin(uv.x*sin(t*.1)*16.)/32.+0.5;\n    float pf = max(fract(uv.x*12.), fract(-uv.x*12.));\n    float p = uv.y + ps*ps*ps*pf + 0.3;\n    float tree = 1.-smoothstep(.75, .8, p);\n    tree = clamp(tree,.0, 1.);\n    \n    float gradTree = min(tree, uv.y*2.);\n    gradTree = clamp(gradTree,.0, 1.);\n    \n    float outline = abs(tree)-0.1;\n    outline = max(tree, 1.-outline);\n    outline = smoothstep(.8,.9, outline);\n    outline = clamp(outline,.0,1.);\n    \n    return vec3(tree, gradTree, outline);\n}\n\nvec3 mountains(vec2 uv){\n    float skew = uv.y*sin(t*1.)*0.05;\n    \n    mat2 mat = mat2(\n        1.0,0.0,\n        skew,1.0);\n    uv = mat*uv;\n    \n    uv -= vec2(7.15, 0.2);\n    uv *= vec2(.4,4.0);\n    \n    float ms = sin(uv.x*8.)/8.+sin(uv.x*8.)/8.+sin(uv.x*16.)/16.-0.4;\n    float mf = max(fract(uv.x*10.), fract(-uv.x*10.))*8.;\n    float p = uv.y + ms*ms*ms*mf;\n    //p = smoothstep(uv.y*2.,uv.y/2., uv.y);\n    float mount = 1.-smoothstep(.45, .55, p);\n    mount = clamp(mount,.0, 1.);\n    \n    float gradMount = min(mount, uv.y/2.5);\n    gradMount = clamp(gradMount,.0,1.);\n    \n    float outline = abs(mount)-0.05;\n    outline = max(mount, 1.-outline);\n    outline = smoothstep(.85,.95, outline);\n    outline = clamp(outline,.0,1.);\n    \n    return vec3(mount, gradMount, outline);\n}\n\nvec3 box(vec2 uv){\n    vec2 size = vec2(4.,2.7);\n    vec2 pos = vec2(-2.8,-.2);\n    \n    vec2 uv1 = uv*size+pos;\n    vec2 lb = smoothstep(0.,.1, uv1);\n    vec2 tr = smoothstep(1.,.9, uv1);\n    float soft = lb.x*lb.y*tr.x*tr.y;\n    \n    vec2 uv2 = uv*size*vec2(1., 0.7)+pos+vec2(.0,.27);\n    vec2 lb2 = smoothstep(0.,.1, uv2);\n    vec2 tr2 = smoothstep(1.,.9, uv2);\n    float hard = lb2.x*lb2.y*tr2.x*tr2.y;\n    hard = step(0.9, hard);\n    \n    float outline = max(soft, 1.-soft);\n    outline = smoothstep(.9,.91, outline);\n    outline = max(outline, hard);\n    \n    soft = hard*smoothstep(.05, 1.,uv2.y);\n    \n    return vec3(soft, hard, outline);\n}\n\nvec3 roof(vec2 uv){\n    vec2 size = vec2(2.7, 5.1);\n    vec2 pos = vec2(-0.87,-1.07);\n    \n    vec2 uv0 = (uv-vec2(.5,.0))*vec2(1.,.5);\n    uv0 = uv0*size+pos;\n    vec2 uv1 = 1.-(uv0+vec2(.0,.03));\n    vec2 uv2 = abs(uv0)-vec2(.0,.4);\n    float b = smoothstep(1.,.9, uv1.y);\n    float tr = smoothstep(.1,.0, uv2.x+uv2.y);\n    float soft = min(tr, b);\n    \n    float hard = step(0.9, soft);\n    \n    float outline = max(soft, 1.-soft);\n    outline = smoothstep(.9,.91, outline);\n    \n    return vec3(soft, hard, outline);\n}\n\nvec3 house(vec2 uv){\n    float skew = uv.y*sin(t*3.)*0.1;\n    \n    mat2 mat = mat2(\n        1.1,0.0,\n        skew,1.1);\n    uv = mat*uv;\n    vec3 b = box(uv);\n    vec3 r = roof(uv);\n    \n    float soft = max(b.x, r.x);\n    float hard = max(b.y, r.y);\n    hard = min(hard, smoothstep(.07,.2, uv.y)); \n    float outline = min(b.z,r.z);\n    \n    return vec3(soft, hard, outline);\n}\nvec3 scene(vec2 uv, float aspect){\n    float bg = background(uv);\n    vec2 gr = ground(uv);\n    vec3 tr = trees(uv);\n    vec3 mo = mountains(uv);\n    vec3 h = house(uv);\n    float s = sun((uv-vec2(.5))*vec2(aspect, 1.));\n    \n    float grMask = clamp(1.-gr.x,.0,1.);\n    float grMaskHard = step(.9,grMask);\n    \n    vec3 col = mix(vec3(.0,0.1137,0.1411), vec3(.0,0.8313,1.), bg); // background\n    \n    float mountMask = min(mo.x, grMaskHard);\n    vec3 mountColor = mix(vec3(1.,.0,.0), vec3(1.,1.,.0), mo.y)*mountMask;\n    col *= 1.-mountMask;\n    col += mountColor; // mountains\n    \n    float treeMask = min(tr.x, grMaskHard);\n    float treeColorMask = min(treeMask, tr.y);\n    vec3 treeColor = mix(vec3(0.,0.25,0.22),vec3(.0,1.,0.73), treeColorMask)*treeMask;\n    col *= 1.-treeMask;\n    col += treeColor; // trees\n    \n    vec3 grColor = mix(vec3(0.,1.,.0), vec3(.0,.0,.0), 1.-grMask)*(1.-grMaskHard);\n    col *= grMask;\n    col += grColor; // ground\n    \n    vec3 hColor = mix(vec3(1.0,1.0,.4),vec3(.1,.8,.2), 1.-h.x)*h.y;\n    col *= 1.-h.y;\n    col += hColor; // house\n    \n    s = min(s,grMaskHard);\n    col *= 1.-s;\n    col += s*vec3(1., 1., .50); // sun\n    \n    col *= max(mo.z, treeMask); // mountains outline\n    col *= max(1.-gr.y, h.y); // ground outline\n    col *= max(tr.z, h.y); // trees outline\n    col *= h.z; // house outline\n    \n    //col = vec3(h.y);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    \n    vec3 col = scene(uv, aspect);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}