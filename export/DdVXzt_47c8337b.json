{"ver":"0.1","info":{"id":"DdVXzt","date":"1681469783","viewed":161,"name":"interior mapping(2d)","username":"z1lfromhell","description":"study interior mapping ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","previewfilepath":"/media/ap/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","type":"cubemap","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    vec2 uv = (fragCoord)/iResolution.xy*2.-1. ;\n\n    vec3 uvfake = vec3(uv,-1.);\n\n    vec3 depth =vec3(1.,1., 1./1.);\n    \n    vec3 camerapos = vec3(0.,-0.3,1.);\n\n    vec3 cameravector = normalize(camerapos- uvfake  )*vec3(-1.,-1.,1.)*depth;\n\n    vec3 t =1./ cameravector;\n\n    vec3 k = abs(t) - uvfake*t;\n    \n    vec3 lightvector = normalize(vec3(1,0.3,1.));\n\n    float kmin = min(min(k.x,k.y),k.z);\n\n    vec3 cubeuv = kmin * cameravector + uvfake;\n    \n    vec3 cubemapuv = vec3(cubeuv.x,cubeuv.y,cubeuv.z);\n\n    vec3 rgbmask = vec3(0.);\n\n    if(abs(cubeuv.r)>=1.-0.0001)\n    {\n    rgbmask.r = 1.;\n    }\n    if(abs(cubeuv.g)>=1.-0.0001)\n    {\n    rgbmask.g = 1.;\n    }\n    if(abs(cubeuv.b)>=1.-0.0001)\n    {\n    rgbmask.b = 1.;\n    }\n\n\n    vec2 resample = fract(((cubeuv.xy)+1.)/2.*rgbmask.b + ((cubeuv.zy)+1.)/2.*rgbmask.r*(1./depth.z) + ((cubeuv.xz)+1.)/2.*rgbmask.g*(1.,1./depth.z));\n\n    float line = (smoothstep(0.9,1.,abs(resample*2.-1.)).x + smoothstep(0.9,1.,abs(resample*2.-1.)).y);\n    \n    vec3 linenormal = normalize(vec3( vec2(dFdx(line) , dFdy(line))*1. ,1));\n   \n    float linelightingmodel = dot(lightvector,linenormal);\n    \n    vec3 reflectcube = vec3(texture(iChannel1,cubemapuv,0.)).rgb;\n    \n    vec3 color = reflectcube/3.+(vec3(texture(iChannel0,resample*1.,0.).rgb) * linelightingmodel)* sqrt(((cubeuv.b+1.))) ;\n    \n\n    \n    fragColor = vec4(color , 1.);\n\n    //fragColor = vec4(vec3(resample ,0.),1.0);\n}","name":"Image","description":"","type":"image"}]}