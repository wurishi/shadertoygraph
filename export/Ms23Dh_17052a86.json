{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Copyright Johan Maasing 2013\n// This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n#define NUM_OCTAVES 5\nfloat getIntensity(vec2 uv) {\n\treturn 1.0 - clamp(distance(uv, vec2(0.5, 0.5)), 0.0, 1.0) ;\n}\n\t\t\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 world = fragCoord.xy / iResolution.xy;\n\t// Simulate we are moving\n\tworld.x = world.x + iTime/12.0 ;\n\tworld.y = world.y + sin(mod(iTime, 6.28)) / 4.0 ;\n\t\n\tfloat colorComp = 0.0 ;\n\tfor (int octave=1; octave<=NUM_OCTAVES; octave++) {\t\n\t\tvec2 uv = mod(world*(5.0*float(octave)), 1.0) ;\n\t\tcolorComp += getIntensity(uv) ;\n\t}\n\t\n\tcolorComp = colorComp / float(NUM_OCTAVES);\n\t\n\tfloat red = clamp(colorComp, 0.0, 1.0)/2.0 ;\n\tfloat green = clamp(colorComp, 0.0, 1.0)/2.0 ;\n\tfloat blue = clamp(colorComp, 0.0, 1.0)/1.6 ;\n\tfragColor = vec4(red,green,blue,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Ms23Dh","date":"1387486361","viewed":219,"name":"Simple 2D distance checkeboard","username":"jmaasing","description":"Simple use of distance function to generate a checkerboard pattern","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","texturegenerator"],"hasliked":0,"parentid":"","parentname":""}}