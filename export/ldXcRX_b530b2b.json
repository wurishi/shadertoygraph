{"ver":"0.1","info":{"id":"ldXcRX","date":"1489063406","viewed":143,"name":"Cubic Bezier","username":"rhino1181","description":"Basic Bezier curve","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 Rect(vec2 uv, vec2 pos, float width, float height, vec4 color, out bool isThis)\n{\n    if((uv.x > (pos.x - (width / 2.0))) && (uv.x < (pos.x + (width / 2.0))) &&\n       (uv.y > (pos.y - (height / 2.0))) && (uv.y < (pos.y + (height / 2.0))))\n    {\n        isThis = true;\n        return color;\n    }\n    \n    return vec4(0.0);\n}\n\nbool MouseCheck(vec2 pos, float width, float height)\n{\n    if((iMouse.x > (pos.x - (width / 2.0))) && (iMouse.x < (pos.x + (width / 2.0))) &&\n       (iMouse.y > (pos.y - (height / 2.0))) && (iMouse.y < (pos.y + (height / 2.0))))\n    {\n        return true;\n    }\n    \n    return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy;\n    \n    vec2 posOne = vec2(20.0, 20.0);  \n    vec2 posTwo = vec2(iResolution.x / 5.0, iResolution.y - 20.0);\n    vec2 posThree = vec2(iResolution.x / 1.2, iResolution.y - 20.0);\n    vec2 posFour = vec2(iResolution.x - 20.0, 20.0);\n\n    //if(MouseCheck(posOne, 50.0, 50.0))\n    //\tposOne = iMouse.xy;\n    \n    vec4 curveColor = vec4(0.437,1.0,0.687,1.0);\n    vec4 mainNodeColor = vec4(1.0,0.216,0.292,1.0);\n    vec4 secondNodeColor = vec4(0.294,0.558,1.0,1.0);\n    \n    vec2 lerpPosOne = vec2(mix(posOne, posTwo, 0.5+0.5*(sin(iTime))));\n    vec2 lerpPosTwo = vec2(mix(posTwo, posThree, 0.5+0.5*(sin(iTime))));\n    vec2 lerpPosThree = vec2(mix(posThree, posFour, 0.5+0.5*(sin(iTime))));\n    vec2 lerpPosFour = vec2(mix(lerpPosOne, lerpPosTwo, 0.5+0.5*(sin(iTime))));\n    vec2 lerpPosFive = vec2(mix(lerpPosTwo, lerpPosThree, 0.5+0.5*(sin(iTime))));\n    vec2 lerpPosSix = vec2(mix(lerpPosFour, lerpPosFive, 0.5+0.5*(sin(iTime))));\n    \n    vec4 final = vec4(0.0);\n    \n    bool checker = false;\n    vec4 layerOne = Rect(uv, posOne, 50.0, 50.0, vec4(1.0), checker);\n    if(checker)\n        final = layerOne;\n    \n    checker = false;\n    vec4 layerTwo = Rect(uv, posTwo, 50.0, 50.0, vec4(1.0), checker);\n\tif(checker)\n        final = layerTwo;\n    \n    checker = false;\n    vec4 layerThree = Rect(uv, posThree, 50.0, 50.0, vec4(1.0), checker);\n\tif(checker)\n        final = layerThree;\n    \n    checker = false;\n    vec4 layerFour = Rect(uv, posFour, 50.0, 50.0, vec4(1.0), checker);\n\tif(checker)\n        final = layerFour;\n \n    checker = false;\n    vec4 layerFive = Rect(uv, lerpPosOne, 10.0, 10.0, mainNodeColor, checker);\n\tif(checker)\n        final = layerFive;\n    \n    checker = false;\n    vec4 layerSix = Rect(uv, lerpPosTwo, 10.0, 10.0, mainNodeColor, checker);\n\tif(checker)\n        final = layerSix;\n    \n    checker = false;\n    vec4 layerSeven = Rect(uv, lerpPosThree, 10.0, 10.0, mainNodeColor, checker);\n\tif(checker)\n        final = layerSeven;\n    \n    checker = false;\n    vec4 layerEight = Rect(uv, lerpPosFour, 10.0, 10.0, secondNodeColor, checker);\n\tif(checker)\n        final = layerEight;\n    \n    checker = false;\n    vec4 layerNine = Rect(uv, lerpPosFive, 10.0, 10.0, secondNodeColor, checker);\n\tif(checker)\n        final = layerNine;\n    \n    checker = false;\n    vec4 layerTen = Rect(uv, lerpPosSix, 30.0, 30.0, curveColor, checker);\n\tif(checker)\n        final = layerTen;\n\n    \n    fragColor = final;\n}","name":"Image","description":"","type":"image"}]}