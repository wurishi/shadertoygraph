{"ver":"0.1","info":{"id":"7d3czX","date":"1664044395","viewed":54,"name":"FBM Motion With Value Noise ","username":"rge15","description":"Practice with Value Noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm","value"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14156295358979 \n\nfloat N21(in vec2 p)\n{\n    p = 50.*fract( p * PI);\n    p = 50.*fract((p+vec2(0.24342,709.23))/PI);\n\n    return -1. + 2.*fract((p.x*p.y));\n}\n\nfloat valueNoise( in vec2 p)\n{\n    vec2 f = fract(p);\n    vec2 i = floor(p);\n    \n    vec2 func = f*f*(3.-2.*f);\n    \n    float a = N21( i + vec2(0.,0.));\n    float b = N21( i + vec2(1.,0.));\n    float c = N21( i + vec2(0.,1.));\n    float d = N21( i + vec2(1.,1.));\n    \n    return a + (b - a) * func.x + (c - a) * func.y + (a - b - c + d) * func.x * func.y;   \n}\n\nfloat FBMvalue( in vec2 p, in float h)\n{\n    int numOct = 1;\n    float G = exp2(-h);\n    float v = 0.;\n    float f = 1.;\n    float a = 1.;\n    \n    for(int i = 0; i < numOct; i++)\n    {\n        v += a * valueNoise( f * p );\n        f *= 2.;\n        a *= G;\n    }\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n\n    \n    float p = 0.5 + 0.5 * FBMvalue( 10. * uv + iTime*1.3 , 1.);\n    \n\n    // Output to screen\n    fragColor = vec4(vec3(p),1.0);\n}","name":"Image","description":"","type":"image"}]}