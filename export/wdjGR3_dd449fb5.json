{"ver":"0.1","info":{"id":"wdjGR3","date":"1549958121","viewed":233,"name":"Factor iResolution","username":"rory618","description":"Can we go smaller?\nTake extra care with that loop, you don't want to compile an infinite loop and lose unsaved work\nRules are find a factor of iResolution close to it's root and draw a pixel perfect checkerboard.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["factor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define mainImage( O, I )                           \\\n    vec2 R = iResolution.xy, S = ceil(sqrt(R)), l;  \\\n    while(R-R != (l = sign(mod(R,S)))) S+=l;        \\\n    S = R*sin(3.14*I/S); O += S.x*S.y\n\n\n\n\n//-12ch by Fabrice\n/*\n#define mainImage( O, I )                           \\\n    vec2 R = iResolution.xy, S = ceil(sqrt(R)), l;  \\\n    for(; R-R != (l = sign(mod(R,S))); S+=l );      \\\n    S = mod(I/S,2.)-1.;                             \\\n    O += 1e9* S.x*S.y\n*/\n    \n/*\n//140ch\n#define mainImage( O, I ) \\\nvec2 R = iResolution.xy, S = ceil(sqrt(R)), l; \\\nfor(; l-l!=(l = sign(fract(R/S)));S+=l ); \\\nS = fract(I/S/2.)-.5; \\\nO = vec4(sign(S.x*S.y));\n\n*/\n\n/*\n#define mainImage( O, I )                           \\\nvec2 R = iResolution.xy, S = ceil(sqrt(R)), l;  \\\nwhile(  bool(l = sign(mod(R,S)))) S+=l;      \\\nS = ceil(I/S) ; O += mod(S.x+S.y,2.)\n*/","name":"Image","description":"","type":"image"}]}