{"ver":"0.1","info":{"id":"7tjSRK","date":"1628117573","viewed":357,"name":"Eyes of Sauron","username":"Smake","description":"next step with left eye of Sauron  - glasses of Sauron )","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["eye","organic","parametric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// started from Trisomie21's \"Ball Of Fire\" https://www.shadertoy.com/view/lsf3RH\n// \n\nfloat snoise(vec3 uv, float res)\n{\n\tvec3 s = vec3(1e0, 1e1, 1e2);\n\tuv *= res;\n\tvec3 uv0 = floor(mod(uv, res))*s;\n\tvec3 uv1 = floor(mod(uv+vec3(1.), res))*s;\n\t\n\tvec3 f = fract(uv); f = f*f*(3.0-2.0*f);\n\n\tvec4 v = vec4(uv0.x+uv0.y+uv0.z, uv1.x+uv0.y+uv0.z,\n\t\t      \t  uv0.x+uv1.y+uv0.z, uv1.x+uv1.y+uv0.z);\n\n\tvec4 r = fract(sin(v*1e-1)*1e3);\n\tfloat r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\t\n\tr = fract(sin((v + uv1.z - uv0.z)*1e-1)*1e3);\n\tfloat r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\t\n\treturn mix(r0, r1, f.z)*2.-1.7;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\t\n    //vec2 p = -.5 + fragCoord.xy / iResolution.xy;\n    vec2 pL,pR;\n    pL.x = -1.4 + 2.*fragCoord.x / iResolution.x;  //-.5: -1.5 - shift x\n    pL.y = -1. + 2.*fragCoord.y / iResolution.y;\n\tpR.x = .6 - 2.*fragCoord.x / iResolution.x;  //-.5: shift, - mirror\n    pR.y = -1. + 2.*fragCoord.y / iResolution.y;\n    \n    fragColor -=fragColor;\n    \n    float colorL =2.5 - (2.5*length(2.*pL));\n\tvec3 coordL = vec3(atan(pL.x+.5,pL.y)/6.3, length(pL)*.4, .5);\n\tfor(int i = 1; i <= 7; i++)\t{\n\t\tfloat power = pow(2.0, float(i));\n\t\tcolorL += (1.5 / power) * snoise(coordL + vec3(0.,-iTime*.01, iTime*.01), power*20.);\n\t}\n    if (fragCoord.x>iResolution.x/2.)\n    fragColor = vec4( colorL, pow(max(colorL,0.),2.)*0.4, pow(max(colorL,0.),3.)*0.15 , 1.0);\n\n    float colorR =2.5 - (2.5*length(2.*pR));\n\tvec3 coordR = vec3(atan(pR.x+.5,pR.y)/6.3, length(pR)*.4, .5);\n\tfor(int i = 1; i <= 7; i++)\t{\n\t\tfloat power = pow(2.0, float(i));\n\t\tcolorR += (1.5 / power) * snoise(coordR + vec3(0.,-iTime*.01, iTime*.01), power*20.);\n\t}\n     if (fragCoord.x<iResolution.x/2.)\n   fragColor += vec4( colorR, pow(max(colorR,0.),2.)*0.4, pow(max(colorR,0.),3.)*0.15 , 1.0);\n\n\n}\n","name":"Image","description":"","type":"image"}]}