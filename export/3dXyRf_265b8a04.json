{"ver":"0.1","info":{"id":"3dXyRf","date":"1585209146","viewed":57,"name":"_Mandelbrot","username":"RumyHumy","description":"Simple mandelbrot visualisation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrotfractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float time, i_max, i_real, k, tmp, colv, colue;\nvec2 val, com;\nvec3 col;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.xy;\n \t// Set position\n    val.x = uv.x*1.4-0.7;\n    val.y = uv.y*1.4;\n    vec2 com = vec2(0.0,0.0);\n    // Draw\n    i_max = min((sin(iTime*1.5)+1.)/2.*40.+1.,500.);\n\tfor (int i = 0; float(i) < i_max; i++)\n    {\n        tmp = com.x*com.x-com.y*com.y;\n        com.y = 2.0*com.x*com.y;\n        com.x = tmp;\n        com+=val;\n        k = length(com);\n        i_real = float(i);\n        if (k >= 2.0) { break; }\n    }\n    colv = i_real/i_max;\n    colue = (sin(iTime*1.5)+1.)/2.;\n    col = colv*vec3(1.+0.9*colue,1.6,1.9);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}