{"ver":"0.1","info":{"id":"WsjczW","date":"1586211911","viewed":191,"name":"Layers of Shapes","username":"Passion","description":"Layers of shapes. Click to see grid","likes":7,"published":1,"flags":64,"usePreview":0,"tags":["2d","spiral","layers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4lBGD1","filepath":"https://soundcloud.com/k-maaz-ali/deadmau5-october","previewfilepath":"https://soundcloud.com/k-maaz-ali/deadmau5-october","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Layers of Shapes\n// Timothy Michael Walsh\n// 2020\n\n#define NUM_LAYERS 7.0\n#define PI acos(-1.0)\n#define PI_2 PI*2.0\n\nmat2 rot(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(s,-c,c,s);\n}\n\nfloat rnd(vec2 uv){\n    return fract(sin(uv.x+uv.y*7876.78)*97687.78);   //-iTime/800.\n}\n\nfloat pattern(vec2 uv, inout vec4 rColor, inout float grd){\n    \n    uv*=0.75;\n    \n    vec2 id = floor(uv);\n    float rr = fract(sin(id.y*768.67)*7868.89)*1.3;\n    uv.x += rr;\n    //uv.x += (rr > .49) ? sin(3.0*iTime*fract(rr*rr)) : sin(3.0*-iTime*rr);\n    \n    id = floor(uv);\n    vec2 gv = fract(uv)-.5;\n    grd = step(.468,gv.x) + step(.468,gv.y);\n    \n    \n    float rand =  fract(sin(id.x+id.y * 768.65) *7868.78);\n    float rand2 = fract(sin(id.x * 768.65) *7868.78);\n    \n    float spin = rand<.49 ? -1.0 : 1.0;\n    \n    gv *= rot(spin*fract(rand+rand+14.8)*iTime*5.0);\n    \n    //rColor += vec4(rand2, fract(id.x*76.56), fract(rand2+rand2), rand2);\n    rColor = vec4(rnd(id), rnd(id+234.56), rnd(id*67.67), rnd(id));\n    \n    rand *= 4.0;\n    rand += 3.0;\n    \n    int num = int(rand); // 3;\n    float angle = atan(gv.x,gv.y)+PI;\n    float radius = PI_2/float(num);\n    float shape = cos(floor(.5+angle/radius) * radius - angle) * length(gv);\n        \n    shape = smoothstep(.13,.1, shape);\n    return shape;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * (fragCoord/iResolution.xy-.5));\n    uv.x *= iResolution.x / iResolution.y;\n    vec2 id = floor(uv);\n\tvec4 rColor = vec4(0.0);\n    vec4 col = vec4(0.0);\n    float grd = 0.0;\n    float uvy = uv.y;\n        \n    for(float i = 0.0; i<1.; i+=1.0/NUM_LAYERS){\n        float depth = fract(i+(iTime*.35));\n        float scale = mix(25., .15, depth);\n        uv *= rot(fract(sin(i))+sin(iTime*.5)*2.);\n        float d = pattern(uv*scale+i*564., rColor, grd);\n        float fade = (depth*smoothstep(.3,.99,depth));\n        //col += mix(col, rColor, d)*fade;  //pattern(uv)  vec4(r, r1, r2, 1.0)\n        col += rColor*d*fade;\n        col.rgb += iMouse.z>0.1 ? grd*fade : 0.0;\n    }\n\t\n    fragColor = col;   //vec4(col,1.0)*pattern(uv);\n    fragColor = (abs(uvy)<.95) ? fragColor : vec4(1.0);\n    \n}\n","name":"Image","description":"","type":"image"}]}