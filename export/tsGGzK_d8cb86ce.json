{"ver":"0.1","info":{"id":"tsGGzK","date":"1571572498","viewed":142,"name":"Linetrap","username":"Kitesurf_m8s","description":"with simple random supersampling","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["ffvfgdsg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = sqrt(texelFetch(iChannel0,ivec2(fragCoord),0));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"# define N 1\n\n# define zoom 10.\n# define pos vec2(-0.65,0.456)\n\n\nfloat rand( vec2 n ){\n\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\nfloat tri(vec2 n){\n    return rand(n)+rand(0.386*n-20.)-1.;\n}\nfloat gau(vec2 n){\n    return 0.5*(tri(n)+tri(0.916*n+10.));\n}\n\n\nvec2 sq(vec2 a){\n    return vec2( a.x*a.x-a.y*a.y , 2.*a.x*a.y );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    //vec2 M = (vec2(313.,221.)-0.5*vec2(800.,450.))/vec2(800.,450.).y;\n    vec2 M = (vec2(313.+10.,259.)-0.5*vec2(800.,450.))/vec2(800.,450.).y;\n    //vec2 M = (iMouse.xy-0.5*iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(0.);\n    \n    for(int k = 0;k < N;k++){   \n        //vec2 uv = 0.5*(fragCoord-0.5*iResolution.xy)/iResolution.y + 0.25*vec2(-iResolution.x,-iResolution.y)/iResolution.y;\n        vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n        \n        \n        uv = cos(0.7)*uv+sin(0.7)*vec2(-uv.y,uv.x);\n        \n        uv.x+=rand(uv+iTime+float(k))/iResolution.y;\n        uv.y+=rand(uv.yx+iTime-float(k))/iResolution.y; \n        \n        uv/=zoom;\n        uv+=pos;\n        \n\n        vec2 a = uv;\n        vec2 c = uv;\n        \n        float d = 1e5;\n\t\t\n        float d2 = 0.;\n        \n        for(int i = 0;i<1600;i++){\n            a = sq(a) + c;\n            \n            d = min(d, abs(length(a-M)-0.5));\n            \n            d2 = float(i);\n            \n            if(dot(a,a)>100.) break;\n        }\n        \n        col += (1.-(sin(d2/300.)+d2/1000.)*vec3(0.5,0.6,0.8))*50.*(vec3(d))/float(N);\n\t\n    }\n    float w = (1./(1.+float(iFrame)));\n    //w = 0.1;\n    // Output to screen\n    fragColor = vec4(col,1.0)*w+texelFetch(iChannel0,ivec2(fragCoord),0)*(1.-w);\n}","name":"Buffer A","description":"","type":"buffer"}]}