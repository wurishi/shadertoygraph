{"ver":"0.1","info":{"id":"cdGyW3","date":"1696653860","viewed":28,"name":"Test shader V1234","username":"FreddyBL123","description":"Sample test shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["example"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.00, 0.33, 0.67);\n\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Define the initial zoom factor and its rate of change\n    float initialZoomFactor = 0.6;\n    float zoomRate = 0.01;\n    \n    // Calculate the zoom center\n    vec2 zoomCenter = vec2(0.0, 0.0);\n    \n    // Calculate the zoomed-in uv coordinates\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    // Calculate the current zoom factor based on time\n    float zoomFactor = initialZoomFactor + zoomRate * iTime;\n    \n    uv = (uv - zoomCenter) / zoomFactor + zoomCenter;\n    \n    vec2 uv0 = uv;\n    vec3 finalCol = vec3(0.0);\n   \n     float distance = length(uv);\n     \n     if(distance > sin(10. * iTime))\n     {\n        for(float i = 0.; i < max(iTime, 6.0); i++) {\n            uv = fract(uv * 2.0) - 0.5;\n            float d = length(uv);\n            vec3 col = palette(length(uv0) + iTime);\n            float f = 4.;\n            float p = cos(d * f + iTime * 0.4) / f;\n            p = abs(p);\n            p *= p;\n            p = 0.0008 / p;\n            finalCol += col * p;\n        }\n     }\n     else{\n     for(float i = 0.; i < 2. ; i++) {\n            uv = fract(uv * 1.0) - 0.5;\n            float d = length(uv);\n            vec3 col = palette(length(uv0) + iTime);\n            float f = 4.;\n            float p = cos(d * f + iTime * 0.4) / f;\n            p = abs(p);\n            p *= p;\n            p = 0.0008 / p;\n            finalCol += col * p;\n        }\n     }\n    fragColor = vec4(finalCol, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}