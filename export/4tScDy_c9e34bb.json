{"ver":"0.1","info":{"id":"4tScDy","date":"1509933296","viewed":148,"name":"demo_04","username":"jzllove9","description":"依旧是从threejs扒过来的shader，但是做了部分更改","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n* learn from :\n*\n* threejs example - webgl_shader2\n*\n* https://www.shadertoy.com/user/candycat\n*\n* sorry for my poor Artistic attainments o(╥﹏╥)o\n*\n*/\n\n//#define NOT_MIX_EDG\n\nconst float smoothLevel = 0.03;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //uv = -1.0 + 2.0 * uv; //会变形\n\tvec2 uv = ( 2. * fragCoord.xy - iResolution.xy) / min(iResolution.y, iResolution.x);    \n    \n    vec3 bgColor =  vec3( 1.0 ) * ( 1.0 - 0.3 * length(uv) );\n    \n    float a = atan( uv.y, uv.x ); //当前像素所在弧度\n    float r = sqrt( dot( uv, uv ) ); //模长\n    \n    //把他们扭成一个根据时间变化的圆形区域\n    uv.x = cos( a ) / clamp(r, .5, 1.);\n    uv.y = sin( a ) / clamp(r, .5, 1.);\n    uv += iTime * 0.05;\n    \n    //偷来的颜色变化函数 ^_^\n    float color = 1.0;\n    color += sin(uv.x * cos(iTime/15.) * 80.) + cos(uv.y * cos(iTime/15.) * 10.);\n    color += sin( uv.y * sin( iTime / 10.0 ) * 40.0 ) + cos( uv.x * sin( iTime / 25.0 ) * 40.0 );\n    color += sin( uv.x * sin( iTime / 5.0 ) * 10.0 ) + sin( uv.y * sin( iTime / 35.0 ) * 80.0 );\n    color *= sin( iTime / 10.0 ) * 0.5;\n      \n    //输出\n    #ifdef NOT_MIX_EDG\n    \n\t//这种方式输出边界会有锯齿\n    fragColor = vec4(bgColor, 1.0);\n\tif( r <= 1.0 ){\n   \t \tfragColor = vec4(vec3(color, color * 0.5, sin(color + iTime/3.) * .75), 1.);\n    }\n    \n\t#else\n    \n    //通过mix + smoothstep混合边界\n    vec3 _color = mix( bgColor, vec3(color, color * .5, sin(color + iTime/3.) ), smoothstep(-smoothLevel, smoothLevel, 1.0 - r ) );\n    fragColor = vec4(_color, 1.0);\n    \n    #endif    \n}","name":"Image","description":"","type":"image"}]}