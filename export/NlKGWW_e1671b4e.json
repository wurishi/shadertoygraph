{"ver":"0.1","info":{"id":"NlKGWW","date":"1700951016","viewed":87,"name":"simple_color_flow","username":"skaplun","description":"simple fbm effect","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SMOOTH (5./max(iResolution.x, iResolution.y))\n#define LINE_TH .0005\n\nvec3 hsv2rgb(vec3 c) {\n    const vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat fbm(float x, float time){\n    float amplitude = 1.;\n    float frequency = 1.;\n    float y = sin(x * frequency);\n    float t = 0.01*(-time*130.0);\n    y += sin(x*frequency*2.1 + t)*4.5;\n    y += sin(x*frequency*1.72 + t*1.121)*4.0;\n    y += sin(x*frequency*2.221 + t*0.437)*5.0;\n    y += sin(x*frequency*3.1122+ t*4.269)*2.5;\n    y *= amplitude*0.06;\n    return y;\n}\n\nvec3 makeClr(vec2 fragCoord){\n    vec2 uv = (2. * fragCoord - iResolution.xy)/iResolution.y;\n    vec3 c = vec3(.2);\n    \n    for(float i=0.; i<50.; i++){\n        float n = fbm(uv.x - iTime + i * .01, iTime + i * .025);\n        c = mix(c, hsv2rgb(vec3(i/150. + iTime * .1, 1., 1.)), smoothstep(LINE_TH + SMOOTH, LINE_TH, distance(n * max(i * .025, .5), uv.y)));\n    }\n    \n    return c;\n}\n\n#define AA 2\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    fragColor = vec4(0.);\n    for(int y = 0; y < AA; ++y)\n        for(int x = 0; x < AA; ++x){\n            fragColor.rgb += clamp(makeClr(fragCoord + vec2(x, y) / float(AA)), 0., 1.);\n        }\n    \n    fragColor.rgb /= float(AA * AA);\n}","name":"Image","description":"","type":"image"}]}