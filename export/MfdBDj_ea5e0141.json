{"ver":"0.1","info":{"id":"MfdBDj","date":"1733507928","viewed":201,"name":" Phased Array","username":"wyatt","description":"A phased array detecting a rectangular and spherical object","likes":22,"published":3,"flags":32,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"Main {\n\n    Q = sin(-2.+vec4(1,2,3,4)+length(A(U).xy)/float(iFrame));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define Main void mainImage(out vec4 Q, in vec2 U)\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nfloat box( vec2 p, vec2 b )\n{\n  vec2 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,q.y),0.0);\n}\nvec4 hash(vec4 p4)\n{\n    p4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float source (vec2 p) {\n\n    return box(p-vec2(.05,.5)*R,vec2(1,.2*R.y));\n\n}\nfloat map (vec2 p) {\n\n    return min(length(p-vec2(.5,.6)*R)-.05*R.y,box((p-vec2(.8,.5)*R)*ei(.5),vec2(.1*R.y,.05*R.y)));\n\n}\nvec2 normal (vec2 p) {\n\n    return normalize(vec2(\n        map(p+vec2(1,0))-map(p-vec2(1,0)),\n        map(p+vec2(0,1))-map(p-vec2(0,1))\n    ));\n\n}\nMain {\n\n    Q = A(U);\n    for(float k = 0.; k < 3.; k++) {\n    vec2 p = U+hash(vec4(U,iFrame,k)).xy;\n    vec2 d = normalize(hash(vec4(U,iFrame,iTime)).xy*2.-1.);\n    float l = 0.;\n    for (float i = 0.; i < 250.; i++) {\n        float s = source(p);\n        float m = min(s,map(p));\n        p += d*max(abs(m),.01);\n        l += abs(m)*(m>0.?.25:.5);\n        if (m < .1) {\n            if (hash(vec4(U,i,iFrame)).x<0.1) d = reflect(d,normal(p));\n            else d = normalize(d-.01*normal(p));\n            p += .1*d;\n        }\n        if (s < .1) {\n            Q += 5.*vec4(cos(l),sin(l),0,1);\n            break;\n        }\n        if (m > 2.*R.x) break;\n    \n    }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}