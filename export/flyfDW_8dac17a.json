{"ver":"0.1","info":{"id":"flyfDW","date":"1664471237","viewed":46,"name":"note02_grid","username":"utopialeo","description":"grid","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 Grid(in vec2 uv)\n{\n    vec3 color = vec3(0.);\n    vec2 fraction = 1. - 2.* abs(fract(uv) - 0.5);\n    if(abs(uv.x) <= fwidth(uv.x)){\n        color.g = 1.;\n    } else if (abs(uv.y) <= fwidth(uv.y)){\n        color.r = 1.;\n    } else if (fraction.x < 2.*fwidth(uv.x) || fraction.y < 2.*fwidth(uv.y)){\n        color = vec3(1.);\n    }\nreturn color;\n}\n\n//float segment(in vec2 p, in vec2 a, in vec2 b, in float w){\n\n//}\n\n//float plot(in vec2 uv, float pct){\n  // return smoothstep(pct-0.02, pct, uv.y)- smoothstep(pct, pct+0.02,uv.y);\n//}\n\nvec2 fixUV(in vec2 c){\n    return 3.*(2.*c- iResolution.xy)/ min(iResolution.x, iResolution.y);\n    //return c/iResolution.xy;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fixUV(fragCoord);\n    vec3 color = Grid(uv);\n    //float y = step(0.5, uv.x);\n    //color = vec3(y);\n\n    //plot a line\n    //float pct = plot(uv,y);\n    //color =(1.-pct)*color + pct*vec3(0.,1.,0.);\n\n    //color += vec3(abs(sin(iTime)), abs(cos(iTime)),abs(sin(iTime)));\n    fragColor = vec4(color,1.);\n\n}","name":"Image","description":"","type":"image"}]}