{"ver":"0.1","info":{"id":"3dVczK","date":"1603247052","viewed":245,"name":"Koch Snowflake Kaleidoscope","username":"oneshade","description":"I watched The Art of Code's video on KIFS fractals and made this.","likes":13,"published":3,"flags":0,"usePreview":0,"tags":["kaleidoscope","snowflake","koch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 color = vec3(0.0);\n    uv *= 1.25;\n\n    uv.x = abs(uv.x);\n    uv.y -= 0.28867513459;\n    vec2 n = vec2(sin(2.61799387799), cos(2.61799387799));\n    uv -= n * max(0.0, dot(uv - vec2(0.5, 0.0), n)) * 2.0;\n\n    n = vec2(sin(2.09439510239), cos(2.09439510239));\n    float scale = 1.0;\n    uv.x += 0.5;\n    for (int iters=0; iters < 10; iters++) {\n        uv *= 3.0;\n        scale *= 3.0;\n        uv.x -= 1.5;\n\n        uv.x = abs(uv.x);\n        uv.x -= 0.5;\n        uv -= n * min(0.0, dot(uv, n)) * 2.0;\n    }\n\n    color = texture(iChannel0, (uv / scale) * 2.0 + iTime * 0.05).rgb;\n    //float distLine = length(uv - vec2(clamp(uv.x, -1.0, 1.0), 0.0));\n    //color = vec3(smoothstep(1.0 / iResolution.y, 0.0, distLine / scale));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}