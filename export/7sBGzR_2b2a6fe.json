{"ver":"0.1","info":{"id":"7sBGzR","date":"1616809070","viewed":1234,"name":"Grid Lines 2D","username":"lumic","description":"Simple grid shader with major/minor lines.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAJOR_INTERVAL 0.25\n#define INTERVAL_DIVISIONS 4.0\n\n#define MAJOR_INTENSITY 0.9\n#define MINOR_INTENSITY 0.3\n\n#define PI 3.141592653589793238f\n\nfloat grid(float x) {\n  // TODO make line width zoom-independent\n  float major = smoothstep(0.995, 1.0, cos(x * (2. * PI) / MAJOR_INTERVAL)) * MAJOR_INTENSITY;\n  float minor = smoothstep(0.97, 1.0, cos(x * (2. * PI) * INTERVAL_DIVISIONS / MAJOR_INTERVAL)) * MINOR_INTENSITY;\n  return max(major, minor);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Vertically normalized pixel coordinates (from 0 to 1 on vertical only)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = vec3(0.2);\n    \n    float xCol = grid(uv.x);\n    float yCol = grid(uv.y);\n    \n    col = col + max(xCol, yCol);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}