{"ver":"0.1","info":{"id":"lXVSDG","date":"1720459793","viewed":50,"name":"Trippy flower","username":"Thatman","description":"My first shader. Hello, shader world.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sinewavesaroundcircle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nconst float PI=3.14159;\nconst float TWOPI=6.28318;\n\nvec3 palette(float t){\n    vec3 a=vec3(.2039,.2,.502);\n    vec3 b=vec3(.5,.2,.2);\n    vec3 c=vec3(1.,1.,1.);\n    vec3 d=vec3(0.,.33,.67);\n    return a+b*cos(TWOPI*(c*t+d));\n}\n\n// Function to calculate the radius of a circle with multiple sine waves on it\nfloat calculateRadius(float theta,float time,int numWaves,float amplitude,float baseRadius,float frequency){\n    float radius=baseRadius;\n    \n    for(int i=0;i<10;i++){\n        if(i>numWaves)break;\n        radius+=amplitude*sin(theta*frequency+time*2.);\n        amplitude*=.5;// Decrease amplitude for the next wave\n        frequency*=2.;// Increase frequency for the next wave\n    }\n    \n    return radius;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv=(fragCoord*2.-iResolution.xy)/iResolution.y;//bg\n    vec2 uv0=uv;//store the original coords\n    vec2 uv1=uv0;//big flower\n\n    //---background---\n    uv.x=fract(.3/uv0.y*1.+(.1*sin(iTime)))-.5;//make the image repeat and move\n    uv.y=fract(uv0.x*1.+(.1*cos(iTime)))-.5;\n    \n    float theta=atan(uv.y,uv.x);//polar coord\n    int numWaves=15;// Number of waves to add\n    float r=calculateRadius(theta,iTime,numWaves,.01,.1,5.);\n    vec2 warpedUv=vec2(cos(theta),sin(theta))*r;//flower coords in cartasian\n    float dist=length(uv-warpedUv);//size of flower\n    float circle=.357/pow(dist,.7);//edge width+brightness\n    vec3 color=palette(r);\n    vec3 bgColor=vec3(color.rbb*.15*circle);\n    bgColor=clamp(bgColor,.03,1.2);//removes some artifacts\n    //---background---\n    \n    //---big flower---\n    uv1.x+=sin(iTime*.88)*cos(uv0.y+iTime*1.02)*.45;//move in weird circles\n    uv1.y+=cos(iTime*.93)*sin(uv0.x+iTime)*.45;\n    \n    theta=atan(uv1.y,uv1.x);//polar coord\n    numWaves=5;// Number of waves to add\n    r=calculateRadius(theta-(9.2*sin(iTime*.1)),iTime,numWaves,.1,.6,5.);\n    warpedUv=vec2(cos(theta),sin(theta))*r;//flower coords in cartasian\n    dist=length(uv1-warpedUv*.7);//size of flower\n    circle=.357/pow(dist,.8);//edge width+brightness\n    color=palette(r);\n    vec3 flowerColor=vec3(color.bgb*.15*circle);\n    //---big flower---\n    \n    //---circle inside big flower---\n    theta=atan(uv1.y,uv1.x);\n    numWaves=0;// Number of waves to add\n    r=calculateRadius(theta-(9.2*sin(iTime*.1)),iTime,numWaves,.1,.2,1.);\n    warpedUv=vec2(cos(theta),sin(theta))*r;//flower coords in cartasian\n    dist=length(uv1-warpedUv*.7);//size of circle\n    circle=.01357/pow(dist/4.,1.2);//edge width+brightness\n    color=palette(r);\n    vec3 circleColor=vec3(color.rgb*.15*circle);\n    //---circle inside big flower---\n    \n    //---horizon---\n    color=vec3(smoothstep(.0,.45,-uv0.y));//dark stripe in the middle\n    color+=vec3(smoothstep(.0,.45,uv0.y));\n    vec3 horizonColor=vec3(color);\n    //---horizon---\n    \n    //---sine wave---\n    color=palette(uv0.y);\n    color*=vec3(smoothstep(.45,.0,-uv1.y)+.1);//add spooky colors\n    color*=vec3(smoothstep(.45,.0,uv1.y)+.1);\n    vec3 sineColor=vec3(color);\n    //---sine wave---\n    \n    vec3 finalColor=\n    bgColor\n    *(horizonColor+.03)\n    *sineColor\n    +flowerColor\n    +circleColor;\n    \n    fragColor=vec4(finalColor,1.);\n}\n","name":"Image","description":"","type":"image"}]}