{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float dist(vec2 p1, vec2 p2) {\n\tfloat dx = p2.x - p1.x;\n\tfloat dy = p2.y - p1.y;\n\treturn sqrt(dx * dx + dy * dy);\t\n}\n\nfloat dotp(vec2 p1, vec2 p2) {\n\treturn p1.x * p2.x + p1.y * p2.y;\t\n}\n\nfloat getR(float h, float w) {\n\treturn pow(cos(h*6.283185307179586476925286766559)*0.5+0.5,w);\n}\n\nfloat getG(float h, float w) {\n\treturn pow(cos((h+1.0/3.0)*6.283185307179586476925286766559)*0.5+0.5,w);\n}\n\nfloat getB(float h, float w) {\n\treturn pow(cos((h+2.0/3.0)*6.283185307179586476925286766559)*0.5+0.5,w);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat t = iTime;\n\tvec2 a = vec2(0.5,0.5);\n\tvec2 b = vec2(0.25,0.625);\n\tvec2 c = vec2(0.75,0.625);\n\t\n\tfloat d = cos(dist(uv,a)*17.0)+ cos(dist(uv,b)*15.0+t*0.2) + cos(dist(uv,c)*13.0+t*0.3);\n\tfloat q = cos(dist(uv-a,c)*4.3+dist(uv,b)*4.0+t*0.5)*2.0+2.2;\n\n\tfragColor = vec4(getR(d,q), getG(d,q), getB(d,q), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sX3D7","date":"1371553053","viewed":234,"name":"Trippy #2","username":"bildramer","description":"Now even more colorful!","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","trippy","lsd"],"hasliked":0,"parentid":"","parentname":""}}