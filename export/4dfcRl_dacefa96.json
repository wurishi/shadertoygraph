{"ver":"0.1","info":{"id":"4dfcRl","date":"1489286909","viewed":277,"name":"Keys and data","username":"william_ml_leslie","description":"My first shader!  Shows some scrolling data next to a keyboard.\n\nI've got a whole bunch to learn so any advice would be really handy.  I'm not sure why the texelFetch didn't work.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","firstshader","piano"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NKEYS 61.0\n#define C_COLOUR vec4(.5, .6, .0, 1.)\n#define NATURAL_COLOUR vec4(1., 1., 1.,1.0);\n\nvoid renderData( out vec4 fragColor, in vec2 fragCoord, in float key, in float keyCls, in vec2 uv, in bool accidental) {\n#if 1\n        float rate = 20. / iChannelResolution[1].x;\n        float idx = iTime * rate + uv.x / iChannelResolution[1].x;\n        vec4 val = texture(iChannel1, vec2(fract(idx), uv.y));\n        fragColor = vec4(accidental ? 0. : .9, val.g, keyCls == 0. ? 0. : 1., 1.);\n#else\n        float idx = iTime * 20. + fragCoord.x;\n        ivec2 coords = ivec2(floor(mod(idx, iChannelResolution[1].x)), key);\n        vec4 val = texelFetch(iChannel1, coords, 0);\n\t    fragColor = vec4(accidental ? 0. : .9, val.g, 1., 1.);\n#endif\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float key = uv.y * NKEYS;\n    float keyCls = floor(mod(key, 12.0));\n    bool accidental = keyCls == 1.0 || keyCls == 3.0 || keyCls == 6.0 || keyCls == 8.0 || keyCls == 10.0;\n    bool prev_is_also_natural = keyCls == 0. || keyCls == 5.;\n    bool firstPixel = ((fragCoord.y - 1.) / iResolution.y * NKEYS) < floor(key);\n    bool middlePixel = ((fragCoord.y - 1.) / iResolution.y * NKEYS * 2.) < floor(key * 2.);\n    \n    if (uv.x > 0.1) {\n        if (firstPixel) {\n            if (prev_is_also_natural) {\n                fragColor = vec4(.7, 0., 0., 0.);\n            } else {\n                fragColor = vec4(.5, .5, .5, 0.);\n            }\n        } else {\n            renderData(fragColor, fragCoord, key, keyCls, uv, accidental);\n        }\n    } else if (prev_is_also_natural && firstPixel) {\n        fragColor = vec4(0., 0., 0., 0.);\n    } else if (accidental && uv.x < 0.08) {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    } else if (accidental && middlePixel && !firstPixel) {\n        fragColor = vec4(0., 0., 0., 0.);\n    } else if (keyCls == 0.) {\n        fragColor = C_COLOUR;\n    } else if (keyCls == 1.) {\n        if (key - floor(key) < 0.5) {\n            fragColor =  C_COLOUR;\n        } else {\n            fragColor = NATURAL_COLOUR;\n        }\n    } else  {\n        fragColor = NATURAL_COLOUR;\n    }\n}","name":"Image","description":"","type":"image"}]}