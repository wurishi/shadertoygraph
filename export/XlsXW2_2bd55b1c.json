{"ver":"0.1","info":{"id":"XlsXW2","date":"1439837468","viewed":452,"name":"Superformula (2D)","username":"mech4rhork","description":"testing Johan Gielis' superformula\n\nhttp://paulbourke.net/geometry/supershape/","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","superformula","supershape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// -----------------------------------------------------------------------------------\n// based on \"Superformula test\" by mickdermack @ https://www.shadertoy.com/view/MdXXDB\n// -----------------------------------------------------------------------------------\n\n#define zoom \t\t2.\n#define THICKNESS \t4.*zoom\n//#define PI \t\t\t3.14\n\n#define FILL\n#define ANIM\n\nfloat sf2d( float m, float a, float b, float n1, float n2, float n3, float phi ) {\n    return pow( pow( abs(cos(m*phi/4.)/a), n2 ) + pow( abs(sin(m*phi/4.)/b), n3 ), -.1/n1 );\n}\n\nvoid mainImage( out vec4 o, in vec2 uv ) {\n\tvec2 R = iResolution.xy,\n         p = (2.*uv - R)/R.y,\n         m = iMouse.xy / R;\n    \n    p *= zoom + 2.*(1.- m.y);\n    \n    vec4 time = 1. + iTime*vec4( 1./8., 1./2., 1, 2 );    \n\t#ifdef ANIM\n    vec4 t = .5 + .5*sin( vec4(time.z, 2.*time.z, time.w, 2.*time.w) );\n\t#else\n    vec4 t = vec4(0);\n\t#endif\n    \n    // parameters\n    float m0 = 1. + 6.*t.w + 33.*m.x,\n          a  = 1. + 8.*t.w,\n          b  = 1. + 3.*t.y,\n   \t      n1 = 1. + .9*t.x,\n          n2 = .1 + 9.*t.z,\n          n3 = .1 + 7.*t.y + 10.*m.x,\n        \n          // superformula\n          rd = length(p) - sf2d( m0, a, b, n1, n2, n3, atan(p.y/p.x) ); // (radius of the current point) - (r from the formula)\n          \n    o = vec4(step( .01*THICKNESS, abs(rd) ));\n    #ifdef FILL\n    o *= mix( pow(rd,2.1) * vec4( uv/R, .7+.3*sin(time.w) ,0), vec4(1), smoothstep(.0,.01,rd) );\n    #endif\n}","name":"","description":"","type":"image"}]}