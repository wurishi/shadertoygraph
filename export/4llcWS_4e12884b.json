{"ver":"0.1","info":{"id":"4llcWS","date":"1506265376","viewed":487,"name":"random shifting blocks","username":"Tuxic","description":"it's been a while since I did some GLSL","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["2d","random","pseudorandom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*(43758.5453 + iTime));\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  float gridSize = 8.;\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv *= rotate2d(iTime / 10. * 3.14);\n  uv *= max(1., abs(cos(iTime / 5.)) * 3.);\n  uv += vec2(cos(iTime / 2.), sin(iTime / 4.));\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  uv.x += step(1., mod(uv.y * gridSize, 2.)) * (iTime / 3.) * step(0., cos(iTime));\n  uv.y += step(1., mod(uv.x * gridSize, 2.)) * (iTime / 3.) * step(0., sin(iTime));\n\n  vec2 fpos = fract(uv);\n  fpos.y = -fpos.y;\n  uv *= gridSize;\n\n  vec2 gridPosition = floor(random2(floor(uv)) * gridSize) / gridSize;\n\n  vec4 color = vec4(abs(sin(iTime)), gridPosition, 1) * 0.5 + 0.5;\n\n  fragColor = color;\n}","name":"Image","description":"","type":"image"}]}