{"ver":"0.1","info":{"id":"wsGGW1","date":"1570085487","viewed":329,"name":"shadetober #02 (mindless)","username":"percentcer","description":"Inktober, but with shaders","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["inktober","shadertober","shadetober","inktober2019"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float centerdist = distance(uv, vec2(.5, .5));\n    vec3 col = vec3(0.0, 0.0, 1.0/centerdist);\n    \n    vec2 erratic = vec2(1.+sin(iTime * 3.), 1.+cos(iTime * 137.)/4.);\n    vec2 erraticuv = (uv)*(erratic);\n\n    vec4 s1 = texture(iChannel0, erraticuv+vec2(0, sin(iTime)));\n    vec4 s2 = texture(iChannel0, erraticuv+vec2(cos(iTime), 0));\n    \n    // Output to screen\n    fragColor = s1.r * s2.r * vec4(col,1.0) * texture(iChannel0, erraticuv+sin(iTime)).r ;\n}","name":"Image","description":"","type":"image"}]}