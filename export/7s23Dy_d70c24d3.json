{"ver":"0.1","info":{"id":"7s23Dy","date":"1617919214","viewed":62,"name":"Distance Metrics","username":"uzpei","description":"Shader demonstrating various distance metrics: Euclidean, Chebyshev, Manhattan, Minkowski","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["manhattan","minkowski","euclidean","chebyshev"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float r_chebyshev = max(abs(uv.x), abs(uv.y));\n    float r_euclidean = length(uv);\n    float r_manhattan = abs(uv.x) + abs(uv.y);\n    \n    float n = 8.0;\n    float r_minkowski_n = pow(pow(uv.x, n) + pow(uv.y, n), 1.0 / n);\n\n    float r = 0.0;\n    if (max(uv.x, uv.y) < 0.0) {\n        r = r_euclidean; // bottom left\n    }\n    else if (uv.x < 0.0) { \n        r = r_chebyshev; // top left\n    }\n    else if (uv.y < 0.0) { \n        r = r_manhattan; // bottom right\n    }\n    else {\n        r = r_minkowski_n; // top right\n    }\n    \n    r *= float(r < 0.4); // cut before the edge so that we can appreciate the profile of each metric \n\n\tfragColor = vec4(vec3(sqrt(r)), 1.0); // sqrt to increase brightness\n}","name":"Image","description":"","type":"image"}]}