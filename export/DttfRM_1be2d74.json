{"ver":"0.1","info":{"id":"DttfRM","date":"1701090370","viewed":38,"name":"Cosmic Color Dance","username":"wwwww","description":"C2 D","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["color","dance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f(vec3 p) {\n    float a, l, t, i;\n    for (; ++i < 40.;) {\n        float m = dot(p, p);\n\n        // 新しい変換を適用\n        p = sin(p) / m + .3 * vec3(cos(iTime/3.), sin(iTime/3.), cos(iTime/3.)).xxx - .4;\n        \n        // 重み付けの変更\n        float w = exp(-.15 * i);\n        a += w * exp(-7.5 * pow(abs(m - l), 2.1));\n        t += w, l = m;\n    }\n    \n    // 結果の計算式の変更\n    return max(0.5, 2.1 * a / t - .6);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 finalColor = vec3(0.0);\n    float time = iTime * 0.2;\n\n    for (float i = 0.0; i < 4.0; i++) {\n       \n\n        vec3 p = vec3(uv, 0.0); // 2D座標を3D座標に変換\n        p = abs(p) / dot(p, p) + .4 * vec2(cos(iTime/4.), sin(iTime/4.)).xxy - .5;\n\n        vec4 col1 = pow(vec4(f(p)), vec4(1,2,3,0));\n        vec4 col2 = pow(vec4(f(p*2.5)), vec4(3,2,1,0));\n\n        finalColor += mix(finalColor, col1.xyz * col2.xyz, 0.5); // カラーミックス\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}