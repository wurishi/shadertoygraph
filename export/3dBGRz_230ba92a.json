{"ver":"0.1","info":{"id":"3dBGRz","date":"1547896012","viewed":135,"name":"Snow Transmission Gradient","username":"TinyTexel","description":".","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rsqrt inversesqrt\n#define If(cond, resT, resF) mix(resF, resT, cond)\n\nvec3 sRGB_NonlinearEncode(vec3 rgb)\n{\n    return If(greaterThan(rgb, vec3(0.0031308)), pow(rgb, vec3(1.0/2.4)) * 1.055 - 0.055, rgb * 12.92);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // single scattering albedo of snow; \n    // computed using \"Parameterization of single-scattering properties of snow\" (https://www.the-cryosphere.net/9/1277/2015/)\n    // unsing ice ior from \"Optical constants of ice from the ultraviolet to the microwave: A revised compilation\" (https://atmos.washington.edu/ice_optical_constants/Warren_and_Brandt_2008.pdf)\n    vec3 a_ss = vec3(0.9999952, 0.9999990, 0.99999999);// wavelengths: (635ym, 545ym, 435ym) grain size r_vp: 200ym\n    vec3 col = pow(a_ss, vec3(uv.x * 2.0e6));// 0 - 2 million absorption events\n\n    fragColor = vec4(sRGB_NonlinearEncode(col), 1.0);\n}","name":"Image","description":"","type":"image"}]}