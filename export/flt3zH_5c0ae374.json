{"ver":"0.1","info":{"id":"flt3zH","date":"1635721624","viewed":161,"name":"Voronoi Electric Cells","username":"AriesTiger","description":"A testing of the voronoi pattern. This was a learning project based on https://www.youtube.com/watch?v=l-07BXzNdPw. Also got some inspiration from https://www.shadertoy.com/view/4sl3Dr by srtuss for the color mapping and the chebyshev distance variant.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N22(vec2 p)\n{\n    vec3 a = fract(p.xyx*vec3(363.42, 524.87, 239.66));\n    a += dot(a, a+34.51);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    uv *= iResolution.y / iResolution.x;\n    \n    //initializations\n    float m = 0.;\n    float t = iTime*.3 + 100.;\n    \n    float minD = 100.;\n    \n    for(float i=0.; i<200.; i++)\n    {\n        vec2 n = N22(vec2(i));\n        vec2 p = sin(n*t + 245.66);\n        \n        //Euclidean Metric\n        float d = length(uv-p);\n        \n        //Chebyshev Distance\n        vec2 v = p-uv;\n        //float d = max(abs(v.x), abs(v.y));\n        \n        m+= smoothstep(1., .01, d);\n        \n        if(d < minD)\n        {\n            minD =d;\n        }\n    }\n    \n    // Time varying pixel color\n    vec3 mV3 = vec3(minD);\n    vec3 col = mV3*vec3(.4, 0., .1) + vec3(.4*mV3.x, .4*mV3.y, .7*mV3.z);\n    \n    vec3 cexp = texture(iChannel0, uv * 0.001).xyz * 3.0 + texture(iChannel0, uv * 0.001).xyz;\n\t\n\tcol = col*vec3(pow(m, cexp.x), pow(m, cexp.y), pow(m, cexp.z)) * 2.0;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}