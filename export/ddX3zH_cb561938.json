{"ver":"0.1","info":{"id":"ddX3zH","date":"1665648305","viewed":52,"name":"ssssdwf","username":"Kolya142","description":"l","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["l"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float convert(float n) {\n    return ((n*3.)*(sin(n)))+((n/2.)*(1.-cos(n)));\n}\nvec3 map(float col, vec3 p1, vec3 p2) {\n    float c = clamp(col, 0., 1.);\n    return p1*(1.-c)+p2*c;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float n = uv.x*uv.y+iTime;\n    \n    // Loop\n    for (int i=0;i<2;i++) {\n        n = convert(n);\n    }\n\n    // Time varying pixel color\n    vec3 col = map(n, vec3(1., .2, 1.), vec3(.4, .4, 1.));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}