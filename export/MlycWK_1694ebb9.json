{"ver":"0.1","info":{"id":"MlycWK","date":"1537735065","viewed":131,"name":"Glitched Moire","username":"eScape","description":"test","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t// Remap\n    vec2 p = uv-vec2(0.5);\n\n    // Compensate for aspect ratio\n    p.x *=iResolution.x/iResolution.y;    \n    \n    float radius = 0.5;\n    float r = radius+(0.2*cos(atan(p.y,p.x)*float(iFrame)));\n    //float r = radius+(0.2*cos(atan(p.y,p.x)*.5));\n    \n    r -= (0.1*sin((iTime*2.0)+atan(p.y,p.x)*10.0));\n\tvec4 col = vec4(1.0);\n    float sm =abs( 0.5*cos(iTime+atan(p.y,p.x)));\n\tsm=.5;\n    col.rgb *= smoothstep(r,r-sm,length(p));\n    vec4 tex =  texture(iChannel0, uv * 0.3);\n    col -=tex;\n    \n    // Output to screen\n    fragColor = vec4(vec3(col),0.5);\n}","name":"Image","description":"","type":"image"}]}