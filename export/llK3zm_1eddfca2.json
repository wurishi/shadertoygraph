{"ver":"0.1","info":{"id":"llK3zm","date":"1474105366","viewed":94,"name":"raymarching-16091601","username":"francisco","description":"First shader to render raymarching\nadded a line with radious r actually it is a cylinder","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float line(vec3 p,vec3 po,vec3 n){\n    n=normalize(n);\n    vec3 dp=po-p;\n    vec3 prj_dp=dot(n,dp)*n;\n    vec3 d=dp-prj_dp;\n    return length(d);\n}\nfloat cylinder(vec3 p,vec3 po,vec3 n,float r){\n    return line(p,po,n)-r;\n}\nfloat map(vec3 p){\n    vec3 q=fract(p)*2.0-1.0;\n    float dl=cylinder(p,vec3(1,0,0),vec3(1,1,0),0.2);\n    return min(dl,length(p)-0.25);\n}\nfloat trace(vec3 o,vec3 r){\n    float t=0.0;\n    for(int i=0;i<32;i++){\n        vec3 p=o+r*t;\n        float d=map(p);\n        t+=d*0.5;\n    }\n    return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv=uv*2.0-1.0;\n    uv.x*=iResolution.x/iResolution.y;\n    vec3 r=normalize(vec3(uv,1.0));\n    float the=iTime;\n    r.xz*=mat2(cos(the),-sin(the),sin(the),cos(the));\n    vec3 o=vec3(0.0,0.0,-3);\n    float t=trace(o,r);\n    float fog=1.0/(1.0+t*t*0.1);\n    vec3 fc=vec3(fog);\n\tfragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}