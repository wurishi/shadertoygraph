{"ver":"0.1","info":{"id":"flycDK","date":"1662186099","viewed":82,"name":"FBM Noise Fractal 01","username":"spenceryonce","description":"Credits go to iq and his amazing articles for teaching me wizard knowledge.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","noise","fbm","iq","hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793238\n\nfloat hash(vec3 p)\n{\n    p  = 50.0*fract( p*0.3183099 + vec3(0.71,0.113,0.419));\n    return -1.0+2.0*fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\n}\n\n\n// return value noise (in x) and its derivatives (in yzw)\nvec4 noised( in vec3 x )\n{\n    vec3 i = floor(x);\n    vec3 w = fract(x);\n    \n#if 1\n    // quintic interpolation\n    vec3 u = w*w*w*(w*(w*6.0-15.0)+10.0);\n    vec3 du = 30.0*w*w*(w*(w-2.0)+1.0);\n#else\n    // cubic interpolation\n    vec3 u = w*w*(3.0-2.0*w);\n    vec3 du = 6.0*w*(1.0-w);\n#endif    \n    \n    \n    float a = hash(i+vec3(0.0,0.0,0.0));\n    float b = hash(i+vec3(1.0,0.0,0.0));\n    float c = hash(i+vec3(0.0,1.0,0.0));\n    float d = hash(i+vec3(1.0,1.0,0.0));\n    float e = hash(i+vec3(0.0,0.0,1.0));\n\tfloat f = hash(i+vec3(1.0,0.0,1.0));\n    float g = hash(i+vec3(0.0,1.0,1.0));\n    float h = hash(i+vec3(1.0,1.0,1.0));\n\t\n    float k0 =   a;\n    float k1 =   b - a;\n    float k2 =   c - a;\n    float k3 =   e - a;\n    float k4 =   a - b - c + d;\n    float k5 =   a - c - e + g;\n    float k6 =   a - b - e + f;\n    float k7 = - a + b + c - d + e - f - g + h;\n\n    return vec4( k0 + k1*u.x + k2*u.y + k3*u.z + k4*u.x*u.y + k5*u.y*u.z + k6*u.z*u.x + k7*u.x*u.y*u.z, \n                 du * vec3( k1 + k4*u.y + k6*u.z + k7*u.y*u.z,\n                            k2 + k5*u.z + k4*u.x + k7*u.z*u.x,\n                            k3 + k6*u.x + k5*u.y + k7*u.x*u.y ) );\n}\n\nfloat fbm( in vec3 x )\n{\n    float v = 0.0;\n    float a = 0.5;\n    vec3 shift = vec3(100);\n    // Rotate to reduce axial bias\n    mat3 rot = mat3( 0.00,  0.80,  0.60, \n                    -0.80,  0.36, -0.48, \n                    -0.60, -0.48,  0.64 );\n    for( int i=0; i<5; i++ )\n    {\n        v += a*noised(x).x;\n        x = rot*x*2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = 7.*(fragCoord.xy/iResolution.xy)*2.0-1.0;\n\n    st += vec2(-5.9,-5.0);\n\n    float angle = 0.2 + iTime * 0.2;\n\n    for(int i = 0; i < 10; i++) {\n        st = abs(st);\n        st -= 0.5;\n        st *= 1.1;\n        st *= mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n        st += 0.5;\n    }\n\n\n    vec3 color = vec3(0.6039, 0.698, 0.8784);\n\n    color += noised(vec3(st, cos(iTime))).y;\n    color += noised(vec3(st, sin(iTime))).z;\n\n    color += fbm(vec3(st, iTime*0.2));\n\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}