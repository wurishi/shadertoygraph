{"ver":"0.1","info":{"id":"fsc3RX","date":"1630288559","viewed":76,"name":"learning-the drive home","username":"luoruchong","description":"learning-the drive home","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n\nstruct ray { vec3 o, d; };\n\nray GetRay(vec2 uv, vec3 ro, vec3 lookat, float zoom)\n{\n    ray a;\n    a.o = ro;\n    vec3 f = normalize(lookat-ro);\n    vec3 r = cross(vec3(0., 1., 0.), f);\n    vec3 u = cross(f, r);\n    \n    vec3 c = ro+f*zoom;\n    vec3 i = c+uv.x*r+uv.y*u;\n    \n    a.d = normalize(i-ro);\n    \n    return a;\n}\n\nvec3 ClosestPoint(ray r, vec3 p)\n{\n    return r.o+max(0., dot(p-r.o, r.d))*r.d;\n}\n\nfloat DistRay(ray r, vec3 p)\n{\n    return length(p-ClosestPoint(r, p));\n}\n\nfloat Bokeh(ray r, vec3 p, float size, float blur)\n{\n    float d = DistRay(r, p);\n    size *= length(p);\n    float c = S(size, size*(1.-blur), d);\n    c *= mix(.6, 1., S(size*.8, size, d));\n    return c;\n}\n\nvec3 Streetlights(ray r, float t)\n{\n    float side = step(r.d.x, 0.);\n    r.d.x = abs(r.d.x);\n    float s = 1./10.;\n    float m = 0.;\n    for(float i; i<1.; i+=s)\n    {\n        float ti = fract(t+i+side*s*.5);\n        vec3 p = vec3(2., 2., 100.-ti*100.);\n        m += Bokeh(r, p, .05, .1)*ti*ti*ti;\n    }\n    \n    return vec3(1., .7, .3)*m;\n}\n\nfloat N(float t)\n{\n    return fract(sin(t*3456.)*6547.);\n}\n\nvec3 Headlights(ray r, float t)\n{\n    t *= 2.;\n\n    float w1 = .25;\n    float w2 = w1*1.2;\n    \n    float s = 1./30.;\n    float m = 0.;\n    for(float i; i<1.; i+=s)\n    {\n        float n = N(i);\n        if(n>.1) continue;\n    \n        float ti = fract(t+i);\n        float z = 100.-ti*100.;\n        float fade = ti*ti*ti*ti*ti;\n        float focus = S(.9, 1., ti);\n        \n        float size = mix(.05, .03, focus);\n        float x = 1.5;\n        \n        m += Bokeh(r, vec3(x-w1, .15, z), size, .1)*fade;\n        m += Bokeh(r, vec3(x+w1, .15, z), size, .1)*fade;\n        \n        m += Bokeh(r, vec3(x-w2, .15, z), size, .1)*fade;\n        m += Bokeh(r, vec3(x+w2, .15, z), size, .1)*fade;\n        \n        float ref = 0.;\n        ref += Bokeh(r, vec3(x-w2, -.15, z), size*3., 1.)*fade;\n        ref += Bokeh(r, vec3(x+w2, -.15, z), size*3., 1.)*fade;\n        \n        m += ref*focus;\n    }\n    \n    return vec3(1., .1, .1)*m;\n}\n\nvec3 Taillights(ray r, float t)\n{\n    t *= .25;\n\n    float w1 = .25;\n    float w2 = w1*1.2;\n    \n    float s = 1./30.;\n    float m = 0.;\n    for(float i; i<1.; i+=s)\n    {\n        float n = N(i);\n        if(n>.5) continue;\n    \n        float ti = fract(t+i);\n        float z = 100.-ti*100.;\n        float fade = ti*ti*ti*ti*ti;\n        float focus = S(.9, 1., ti);\n        \n        float size = mix(.05, .03, focus);\n        \n        m += Bokeh(r, vec3(-1.-w1, .15, z), size, .1)*fade;\n        m += Bokeh(r, vec3(-1.+w1, .15, z), size, .1)*fade;\n        \n        m += Bokeh(r, vec3(-1.-w2, .15, z), size, .1)*fade;\n        m += Bokeh(r, vec3(-1.+w2, .15, z), size, .1)*fade;\n        \n        float ref = 0.;\n        ref += Bokeh(r, vec3(-1.-w2, -.15, z), size*3., 1.)*fade;\n        ref += Bokeh(r, vec3(-1.+w2, -.15, z), size*3., 1.)*fade;\n        \n        m += ref*focus;\n    }\n    \n    return vec3(.9, .9, 1.)*m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 m = iMouse.xy/iResolution.xy;\n    \n    vec3 camPos = vec3(.5, 0.2, 0.);\n    vec3 lookat = vec3(.5, 0.2, 1.);\n\n    ray r = GetRay(uv, camPos, lookat, 2.);\n    \n    float t = iTime*.1+m.x;\n    \n    vec3 col = Streetlights(r, t);\n    col += Headlights(r, t);\n    col += Taillights(r, t);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}