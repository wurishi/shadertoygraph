{"ver":"0.1","info":{"id":"XtVSWV","date":"1485975892","viewed":92,"name":"cartoon wave 2","username":"bolloxim","description":"more meh","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wave","meh","toon","icon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Andi Smithers \n// wave effect using curves\n\n#define C(x)   a*cos(x-t) \n#define S(x)   a*sin(x-t)\n#define X0(x,xx)  x-C(xx)\n\nfloat trochoid(float x, float t, float a) \n{\n    return S(X0(x,X0(x,X0(x,X0(x,X0(x,x))))));\n}\n\n#define plot(Y) o += smoothstep(40.0/R.y, 0.0, abs(Y-uv.y))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // uniforms\n    float borderSize = 0.05;\n    float antiAliasSize = 0.03;\n    vec4 borderColor = vec4(1.0,1.0,0.95, 1);\n    vec4 centreColor = vec4(0.1,0.5,0.9,1);\n    float t = iTime;\n\n    vec2 shadowVec = vec2(-0.01, 0.05);\n    float scaleBox = 1.2;\n\n    // convert UV into normalized coord\n    vec2 iuv = fragCoord.xy / iResolution.xy;\n\tvec2 uv = fragCoord.xy / iResolution.y;\n\tuv.y+=0.3;\n    \n    float wave = trochoid(uv.x*8.0, 0.0, sin(t))*0.05;\n  //  float alpha2 = clamp(1.0-abs(mod(sin(t)+uv.x*1.5, 3.142)-1.57)*1.3, 0.0, 1.0);\n    float alpha3 = smoothstep(0.0, 0.7, 1.0-abs(iuv.x*2.0-1.0));\n    float alpha = smoothstep(10.0/iResolution.y, 0.0, abs(wave-uv.y+0.5));\n    float alpha2 = uv.y>0.6 ? 1.0 : max(uv.y*5.0 -2.0, 0.0);\n //   float wave = abs(sin(iuv.x + rounding ) - iuv.y*32.0+16.0);\n //   wave = clamp(1.0-wave, 0.0, 1.0);\n    \n    // blend against a background texture - because shadeoy\n    vec4 background = vec4(0.2,0.5,1.0,1.0);\n    vec4 color = vec4(1.0, 1.0, 1.0, clamp(alpha*40.0, 0.0, 1.0)*alpha2*alpha3);\n        \n    // and set the final color \n    fragColor = (color*color.a) + background*(1.0-color.a);\n}","name":"Image","description":"","type":"image"}]}