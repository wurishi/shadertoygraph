{"ver":"0.1","info":{"id":"4fVyDG","date":"1732329258","viewed":17,"name":"Nerearen Pro 4.0 (L)","username":"Buchibuchi","description":"Pinky heart","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["heartpinky"],"hasliked":0,"parentid":"XfGyRV","parentname":"Nerearen Bihotza"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalizamos las coordenadas de píxel\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0; // Centrar las coordenadas en (0,0)\n    uv.x *= iResolution.x / iResolution.y; // Ajuste de aspecto\n\n    // Tiempo animado para el latido\n    float pulse = 0.1 + 0.02 * sin(iTime * 4.0); // Reducimos el tamaño y añadimos un latido más evidente\n\n    // Definimos colores base\n    vec3 bgColor = vec3(0.00, 1.0, 0.63); // Verde claro del fondo\n\n    // Colores dinámicos que cambian con el tiempo\n    float fade = 0.5 + 0.5 * sin(iTime * 0.8); // Oscila entre 0.0 y 1.0\n    vec3 heartColor = mix(bgColor, vec3(1.0, 0.0, 0.53), fade); // Mezclamos gradualmente entre el fondo y el rosa\n\n    vec3 color = vec3(0.0); // Fondo negro o sin importancia ya que estará cubierto por los corazones\n\n    // Cantidad de corazones adicionales\n    float numHearts = 8.0; // Menos corazones, pero distribuidos para cubrir la pantalla\n    vec3 colors[2];\n    colors[0] = vec3(1.0, 0.0, 0.53);  // Rosa (como el corazón principal)\n    colors[1] = vec3(0.00, 1.0, 0.63); // Verde claro\n\n    // Dibujamos los corazones adicionales, alternando entre rosa y verde\n    for (float i = numHearts; i > 0.0; i--) {\n        float scale = (0.1 + i * 0.3) * (1. + 0.05 * sin(iTime * 4.0)); // Aumentamos el valor de escala para que los corazones estén más separados\n        vec2 scaledUV = uv / scale;\n\n        // Añadimos un componente de variación en el grosor\n        float thickness = 0.005 + 0.0002 * sin(iTime * .0 + i); // Oscilación del grosor con un pequeño desfase por cada corazón\n\n        // Cálculo del corazón usando la fórmula\n        float x = scaledUV.x;\n        float y = scaledUV.y;\n        float echoHeart = pow(pow(x, 2.0) + y * y - (1.0 + thickness), 3.0) - x * x * pow(y, 3.0); // Variamos el grosor del corazón\n\n        // Definimos bordes claros para los corazones\n        float echoEdge = echoHeart <= 0.0 ? 1.0 : 0.0;\n\n        // Seleccionamos el color para cada corazón basado en el índice alternando entre rosa y verde\n        vec3 echoColor = colors[int(mod(i, 2.0))];\n\n        // Mezclamos los colores de los corazones\n        color = mix(color, echoColor, echoEdge);\n    }\n\n    // Finalmente, dibujamos el corazón principal sobre todo lo demás con un tamaño muy variable y animado\n    float scaleFactor = 1.7 + 4.0 * sin(iTime * 0.7); // Varía entre 0.5 y 3.5 para un rango amplio de tamaño\n    vec2 scaledUVMain = uv / scaleFactor; // Aplic6mos el factor de escala al corazón principal\n    \n    // Cálculo del corazón principal\n    float heart = pow(pow(scaledUVMain.x, 2.0) + scaledUVMain.y * scaledUVMain.y - 1.0, 3.0) - scaledUVMain.x * scaledUVMain.x * pow(scaledUVMain.y, 3.0);\n    float edge = heart <= 0.0 ? 1.0 : 0.0;\n\n    // Mezclamos el corazón principal con el fondo\n    color = mix(color, heartColor, edge * 0.9); // Mezclamos con menor opacidad para destacar menos\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}