{"ver":"0.1","info":{"id":"tsyGWR","date":"1569971724","viewed":182,"name":"Inktober #1: Rings","username":"Wraithan","description":"Playing with stuff for inktober","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rings","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float H21(vec2 p) {\n    vec3 h = fract(p.xyx * vec3(141.212, 373.184, 107.63));\n    h *= dot(h, vec3(p, 1848.177));\n    return fract(h.x + (h.y * h.z));\n}\n\nvec2 rotate2d(vec2 p, float theta) {\n    return p * mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n}\n\n\n// https://github.com/hughsk/glsl-hsv2rgb/blob/master/index.glsl\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // -1.0 <> 1.0\n    vec2 uv = (fragCoord - iResolution.xy * 0.5)/iResolution.y;\n    \n    float gridScalar = 30.0;\n    \n    uv *= gridScalar;\n    \n    uv += gridScalar * 3.0;\n    \n    uv = rotate2d(uv, 3.14159 * -0.25);\n\n    \n    vec2 id = floor(uv);\n    vec2 st = fract(uv) - 0.5;\n    \n    \n    float d = length(st);\n    \n    vec3 col = hsv2rgb(vec3(H21(id) * d, 0.5, 1.0));\n    \n    float radius = sin(iTime * H21(id) * 5.0) * 0.22 + 0.22;\n    float border = 0.09;\n    \n    \n    float inner = smoothstep(radius - border, radius, d);\n    float outer = smoothstep(radius, radius + border, d);\n\n    \n  \tfloat mask = inner - outer;\n    col *= mask;\n    \n    //col.b = smoothstep(0.09, 0.07, d);\n    //col = vec3(H21(uv));\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}