{"ver":"0.1","info":{"id":"fdS3z3","date":"1623748454","viewed":71,"name":"Swirly Goo","username":"jellejanwil","description":"https://www.dgp.toronto.edu/public_user/stam/reality/Research/pdf/GDC03.pdf","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    //normalized coordinates.\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 t = texture(iChannel0, uv);\n    // Output to screen\n    fragColor = vec4(hsv2rgb(vec3(t.x,1.0,1.0)), 1.0);\n    //fragColor = t;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*\nBuffer containing the densities of the fluid\n*/\n\n// Diffusion factor\n#define DIFF 12.0\n#define K 20\n#define SINK 0.0001\n\n\nfloat diffuse(vec2 fragCoord, float density) {\n    // Diffusion (unstable variant)\n    vec2 uvl = vec2(fragCoord.x - 1.0,fragCoord.y) / iResolution.xy;\n    vec2 uvr = vec2(fragCoord.x + 1.0,fragCoord.y) / iResolution.xy;\n    vec2 uvt = vec2(fragCoord.x,fragCoord.y + 1.0) / iResolution.xy;\n    vec2 uvb = vec2(fragCoord.x,fragCoord.y - 1.0) / iResolution.xy;\n    float a = DIFF * iTimeDelta;\n    return density + a * (texture(iChannel0, uvl).x + texture(iChannel0, uvr).x + texture(iChannel0, uvt).x + texture(iChannel0, uvb).x - 4.0 * density);\n}\n\nfloat advect(vec2 fragCoord, float density) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 v = texture(iChannel1, uv).xy;\n \n    // advection particle coordinate\n    vec2 a_uv = (fragCoord + v) / iResolution.xy;\n    return texture(iChannel0, a_uv).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float density = texture(iChannel0, uv).x;\n\n    density = advect(fragCoord, density);\n    \n        \n    // Add source\n    if (length(fragCoord - iMouse.xy) < 16.0 && iMouse.z > 0.0){\n        density = density += 0.5;\n    }\n    \n    density = clamp(diffuse(fragCoord, density), 0.0, 0.8);\n    fragColor = vec4(density, 1.0, 1.0, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"//https://gist.github.com/yiwenl/745bfea7f04c456e0101\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Velocity Field\n#define C vec2(0.5, 0.5) \n\n#define DIFF 4.0\n#define STRENGTH 2.0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //normalized position\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n\n    \n    if (iFrame == 0) {\n        // Initialize vector field\n        vec2 d = C - uv;\n        vec2 s = 1.0 - (d / (iResolution.xy * 0.5));\n        vec2 p = normalize(d);\n        vec2 o = vec2(p.y,-p.x) * s * STRENGTH;\n        fragColor = vec4(o,0.0,0.0);\n    }\n}","name":"Buffer B","description":"","type":"buffer"}]}