{"ver":"0.1","info":{"id":"3ttXWX","date":"1581854686","viewed":272,"name":"Kitty Spiral âš™","username":"HaleyHalcyon","description":"nyan","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float nyan(float theta)\n{\n    float mimi = min(\n        1.0, 2.5 * abs(pow(abs(theta), 0.6) - 0.75) + 0.15\n    );\n    return 1. + 1. * mimi;\n}\n\nfloat zigzag(float x) {\n    return 1. - abs(1. - 2. * fract(x));\n}\n\nfloat fn(float x)\n{\n    float zig = zigzag(x);\n    return smoothstep(0., fwidth(zig), zig - 0.7);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float PI = 3.14159265;\n    float t = fract(iTime);\n    const vec3 color1 = vec3(1.0, 0.5, 0.7);\n    const vec3 color2 = vec3(1.0, 0.8, 0.3);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n\tuv -= vec2(iResolution.x / scale, iResolution.y / scale) / 2.;\n    uv *= 2.0;\n    \n    float distRaw = uv.x * uv.x + uv.y * uv.y;\n    float angle = atan(uv.x, uv.y);\n    float distance = log(distRaw);\n    float distNyan = log(distRaw * nyan(angle));\n    \n   \n    float c1 = fn(distance * 0.3 + t + angle * 1.5 / PI + PI);\n    float c2 = fn(distNyan * 1. + t * -2. + PI);\n\n    // Output to screen\n    fragColor = vec4(\n\t\tc1 * color1[0] + c2 * color2[0],\n\t\tc1 * color1[1] + c2 * color2[1],\n\t\tc1 * color1[2] + c2 * color2[2],\n        1\n    );\n}","name":"Image","description":"","type":"image"}]}