{"ver":"0.1","info":{"id":"XlBfDm","date":"1515945825","viewed":198,"name":"cantor set morph","username":"unnick","description":"a thing i made because i was bored as usual.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","kifs","de"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define phi 1.618\n#define tau 6.283\n\nconst vec3[] palette = vec3[](\n    vec3(1.0, 1.0, 1.0),\n    vec3(0.0, 0.5, 1.0),\n    vec3(0.0, 0.5, 1.0),\n    vec3(1.0, 1.0, 0.0),\n    vec3(0.0, 0.0, 0.0)\n);\nconst float palettescale = 10.0;\n\nmat2 createrotmat(float a){\n    float s = sin(a);\n\tfloat c = cos(a);\n\treturn mat2(c, -s, s, c);\n}\n\nvec3 getcolor(float dist){\n    dist = pow(dist, 0.05);\n    dist *= palettescale;\n    int idx1 = int(mod(dist      , float(palette.length())));\n    int idx2 = int(mod(dist + 1.0, float(palette.length())));\n    return mix(palette[idx1], palette[idx2], mod(dist, 1.0));\n}\n\nfloat de(vec2 pos){\n    int iters = 10;\n    float mul = phi*sqrt(2.0);\n    mat2 rot = createrotmat((sin(iTime*tau/4.0)/2.0+0.5)*tau/8.0);\n    for(int i = 0; i < iters; i++){\n        pos *= rot;\n        pos = abs(pos);\n        //uncomment the line below for a more trippy morph\n        //if(pos.x-pos.y<0.0) pos = pos.yx;\n        pos = pos*mul-1.0;\n    }\n    return length(pos) / pow(mul, float(iters));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pos = (fragCoord.xy - iResolution.xy / 2.0) / min(iResolution.x, iResolution.y) * 2.0;\n    pos *= 1.1;\n\tfragColor = vec4(getcolor(de(pos)), 1.0);\n}","name":"Image","description":"","type":"image"}]}