{"ver":"0.1","info":{"id":"NdBSz3","date":"1620651493","viewed":117,"name":"SDF Blending / Pulsing Heart","username":"eliottmoret","description":"SDF blending, Heart","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["heart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dot2( in vec2 v ) { return dot(v,v); }\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdEquilateralTriangle( in vec2 p )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    p.y = p.y + 1.0/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nfloat sdPentagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(0.809016994,0.587785252,0.726542528);\n    p.x = abs(p.x);\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n    p -= vec2(clamp(p.x,-r*k.z,r*k.z),r);    \n    return length(p)*sign(p.y);\n}\n\nfloat sdHeart( in vec2 p )\n{\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n\nfloat mix3(in float f1, in float f2, in float f3, in float t)\n{\n    float f12 = mix(f1, f2, pow(t, .5));\n    float f23 = mix(f2, f3, pow(t, 1./.5));\n    return mix(f12, f23, t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    uv*= 2.;\n    \n    vec2 UV = fract(uv*15.);\n    float dots = sdCircle(UV-.5, .25);\n    dots = smoothstep(0.1,0.-0.1,dots);\n    //dots = smoothstep(0.1,0.-0.1,dots);\n    \n    //shapes\n    float tri = sdEquilateralTriangle(uv*1. * vec2(1.,-1.) + vec2(0.,0.3));\n    float heart = sdHeart(uv*1.+vec2(0.0, 0.5));\n    float penta = sdPentagon(uv*vec2(1.,1.), 0.25);\n    float circle = sdCircle( uv, 1. );\n\n    float interp = sin(iTime*1.)*.5+.5;\n    \n    //float shape = mix3(tri, heart, penta, interp);\n    //float shape = mix(heart, circle, pow(interp, 2.));\n    float shape = heart;\n    \n    float lines = fract(shape*0.5 - iTime*0.5);\n    lines = step(lines, 0.05);\n    shape = smoothstep(.03,.025,shape);\n      \n    shape = max(shape, lines);\n    shape = mix(0.0, dots, shape);\n    \n    shape = clamp(shape, 0.0,1.0);\n\n    \n    vec3 col = vec3(shape);\n    \n    vec3 color1 = vec3(0.5,0.1,0.7);\n    vec3 color2 = vec3(0.9,0.2,0.5);\n    \n    col = mix(color1, color2, col);\n\n\n    //col = vec3(uv, 0);\n    // Output to screen\n    fragColor = vec4(col*1.3,1.0);\n}","name":"Image","description":"","type":"image"}]}