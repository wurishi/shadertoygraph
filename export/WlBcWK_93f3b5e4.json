{"ver":"0.1","info":{"id":"WlBcWK","date":"1595333243","viewed":103,"name":"Avatar nations symbols","username":"Balas","description":"The symbols of the four nations in the avatar world","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 water, fire, earth, air;\n\nconst vec2 squaredUV = vec2(1.6, 1);\n\nconst vec3 earth1 = vec3(20./255., 150.0/255.0, 30./255.);\nconst vec3 earth2 = vec3(250.0/255.0, 250.0/255.0, 120.0/255.0);\n\nconst vec3 air1 = vec3(254./255., 231.0/255.0, 143./255.);\nconst vec3 air2 = vec3(210.0/255.0, 105.0/255.0, 88.0/255.0);\n\nconst vec3 water1 = vec3(0./255., 0.0/255.0, 88./255.);\nconst vec3 water2 = vec3(0.0/255.0, 122.0/255.0, 190.0/255.0);\n\nconst vec3 fire1 = vec3(200./255., 20.0/255.0, 20./255.);\nconst vec3 fire2 = vec3(20.0/255.0, 20.0/255.0, 20.0/255.0);\n\nconst float airSpiralSize = .45;\nconst float airSpiralSize2 = .7;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 centeredUV = squaredUV* (uv+vec2(-0.5, -0.5));\n\tvec3 ring, smallO, bigO;\n    //earth\n    \n    bigO = smoothstep(0.49, 0.53, (vec3(distance(vec2(0), vec2(1.05)*squaredUV*(uv+vec2(-.5, -0.5))))));\n    smallO = smoothstep(0.47, 0.52, (vec3(distance(vec2(0), vec2(1.15)*squaredUV*(uv+vec2(-0.5, -0.5))))));\n\n    ring = (vec3(1)-bigO)*smallO;\n    ring.r=ring.g=ring.b=ring.r+pow(ring.r, 10.);\n    \n    float outterSqr = 0.14f;\n    float innerSqr = 0.022f;\n        \n    vec3 sqr=vec3(1); \n    \n    \n    float a = atan(centeredUV.x, centeredUV.y)+3.1416;\n    float r = 3.1416*2./4.;\n    sqr = 1.-smoothstep(0.16, .17, vec3(cos(floor(.5+a/r)*r-a)*length(centeredUV)));\n    sqr -= 1.-smoothstep(0.13, .14, vec3(cos(floor(.5+a/r)*r-a)*length(centeredUV)));\n    \n    float earthDraw=(1./1.-(dot(.5-ring, .5-ring)*1.)+sqr.r);\n    earthDraw=max(0., min(1., pow(earthDraw+0.1, 5.)));\n    \n    earth = mix(earth1, earth2, earthDraw);\n    earth-=(bigO.r)*(length(vec2(.5)*centeredUV));\n\t\n    \n    //air\n    \n    vec2 airUV = squaredUV* (uv+vec2(-0.5, -0.5));\n    \n    #define airRot (-iTime*25.+210.) * 2.*3.1416 / 360.\n    vec2 uvA = (airUV+vec2(0.035, -0.04))*(sin(iTime*0.1)*3.+35.) *mat2(cos(airRot), sin(airRot), -sin(airRot), cos(airRot));\n    vec2 uvo = vec2(length(uvA)*cos(length(uvA)*airSpiralSize), length(uvA*vec2(0.9)*1.+(sin(iTime*0.2)*0.4))\n                    *sin(length(uvA)*airSpiralSize));\n    uvo+=uvA; \n    uvo*=1.-length(vec2(sin(iTime))*centeredUV);\n    \n    \n    #define airRot2 airRot+(60. * 2.*3.1416 / 360.)\n    uvA = (airUV+vec2(0.035, -0.04))*(sin(iTime*0.1)*3.+35.)*mat2(cos(airRot2), sin(airRot2), -sin(airRot2), cos(airRot2));\n\tvec2 uvo2 = vec2(length(uvA)*cos(length(uvA)*airSpiralSize2), length(uvA*vec2(0.9)*1.+(cos(iTime*0.2)*0.4))\n                     *sin(length(uvA)*airSpiralSize2));\n    uvo2+=uvA;    \n    uvo2*=1.-length(vec2(cos(iTime))*centeredUV);\n   \n    \n    \n    float spirals = vec3(1./dot(1.-ring, 1.-ring) + (1.5*length(airUV))*(1.-smallO)*(1./dot(uvo, uvo) + (1./dot(uvo2, uvo2)))).r;\n    spirals=max(0., min(1., pow(spirals, 3.)))+(1.-length(centeredUV))*bigO.r;\n    air = mix(air1, air2, clamp(0., 1.3,spirals));\n    \n   \n    //water    \n    \n    float innerMoonCirc = 1.-smoothstep(0.685, .695, 1. -length(centeredUV+vec2(-0.115, 0)));\n    float moon = smoothstep(0.6, .61, 1.-length(centeredUV)) \n        *  innerMoonCirc;\n    moon=max(moon, 0.);\n    \n    float waves = \n        smoothstep(0.5, 1., 1.-abs(40.*centeredUV.y-sin(centeredUV.x*25.-iTime))) +\n        smoothstep(0.5, 1., 1.-abs(40.*centeredUV.y+4.5-sin(centeredUV.x*25.-iTime+0.5))) +\n        smoothstep(0.5, 1., 1.-abs(40.*centeredUV.y+9.-sin(centeredUV.x*25.-iTime)));\n    waves=max(waves, 0.);\n    \n    float waterDraw = vec3(1./dot(1.-ring, 1.-ring) + moon + (1.-innerMoonCirc)*waves).r;\n    waterDraw+=(1.-length(centeredUV*vec2(1.75)))*bigO.r;\n    water = mix(water1, water2, clamp(0., 1.3,waterDraw));\n   \n    \n    //fire\n    a = atan(centeredUV.x, centeredUV.y)+3.1416;\n    r = 3.1416*2./4.;\n    \n    fire = vec3(0.);\n    float fireDraw = \n        smoothstep(0.7, .71, 1.-length(vec2(.9, 1.1)*centeredUV+vec2(0., 0.15))) -        \n        smoothstep(0.9, .91, 1.-length(vec2(.69, .59)*centeredUV+vec2(0.08, 0.006)))  -\n        smoothstep(0.9, .91, 1.-length(vec2(.69, .59)*centeredUV+vec2(-0.08, 0.006))) -\n        smoothstep(0.9, .91, 1.-length(vec2(.47, 1.)*centeredUV+vec2(0., 0.095)));\n    fireDraw = max(fireDraw, 0.);\n    \n    vec2 flameUV = vec2(.55, 1.5)*centeredUV+vec2(0.003, -0.625);\n        flameUV.x *= (1./flameUV.y-0.5)*.43;\n     r = length(flameUV)*2.0;\n     a = atan(flameUV.y,flameUV.x);\n    float f=cos(a*3.+4.75);\n    float flame = ( 1.-smoothstep(f,f+0.02,r) )*(1.-(flameUV.y+0.001)*5000.);\n    flame=max(0., flame);\n    \n    vec2 flameUV2 = vec2(1., 1.)*centeredUV+vec2(0.22, -0.2);\n        flameUV2.x *= (1./flameUV2.y-0.5)*0.5;\n    \t\n    \t#define leftFlameRot 40. * 2.*3.1416 / 360.\n    \tflameUV2*=mat2(cos(leftFlameRot), sin(leftFlameRot), -sin(leftFlameRot), cos(leftFlameRot));\n    \tflameUV2.x += smoothstep(0., 1., length(centeredUV*.6));\n    \tflameUV2.y += smoothstep(0., 1., length(centeredUV*.6));\n    \n     r = length(flameUV2)*2.0;\n     a = atan(flameUV2.y,flameUV2.x);\n     f=cos(a*3.+4.75);\n    \n    float flame2 = ( 1.-smoothstep(f,f+0.02,r) )*(1.-(flameUV2.y+0.001)*5000.);        \n    flame2 = min(1., max(flame2, 0.));\n    flame2*=1.-round(length(centeredUV+vec2(-0.17, -0.1)));\n    \n    \tflameUV2 = vec2(-1., 1.)*centeredUV+vec2(0.22, -0.2);\n        flameUV2.x *= (1./flameUV2.y-0.5)*0.5;\n    \t\n    \t#define leftFlameRot 40. * 2.*3.1416 / 360.\n    \tflameUV2*=mat2(cos(leftFlameRot), sin(leftFlameRot), -sin(leftFlameRot), cos(leftFlameRot));\n    \tflameUV2.x += smoothstep(0., 1., length(centeredUV*.6));\n    \tflameUV2.y += smoothstep(0., 1., length(centeredUV*.6));\n    \n     r = length(flameUV2)*2.0;\n     a = atan(flameUV2.y,flameUV2.x);\n     f=cos(a*3.+4.75);\n    \n    float flame3 = ( 1.-smoothstep(f,f+0.02,r) )*(1.-(flameUV2.y+0.001)*5000.);        \n    flame3 = min(1., max(flame3, 0.));\n    flame3*=1.-round(length(centeredUV+vec2(0.17, -0.1)));\n    \n    fireDraw+=\n        smoothstep(0.9, .905, 1.-length(vec2(.69, .37)*centeredUV+vec2(0., -0.015)))+flame+flame2+flame3\n        +ring.r;\n    \n    \n    fireDraw = min(1., max(fireDraw, 0.));\n    fireDraw*=smoothstep(0.07, .082, length(vec2(1., 1.)*centeredUV+vec2(-0.07, 0.11)));    \n    \n    fireDraw=1./dot(1./fireDraw, 1./fireDraw);\n    fireDraw+=(1.-length(centeredUV))*(bigO.r);\n    \n    fire = mix(fire1, fire2, fireDraw);\n    \n   \n    \n    float change = mod(iTime*0.25, 8.);        \n    vec3 color;\n    if(change<1.)    \t\n        color = mix(air, water, change);\n    else if(change>1. && change<2.)\n        color = water;\n    else if(change>2. && change<3.)\n        color = mix(water, earth, change-2.);\n    else if(change>3. && change<4.)\n        color = earth;\n    else if(change>4. && change<5.)        \n        color = mix(earth, fire, change-4.);\n    else if(change>5. && change<6.)\n        color = fire;\n    else if(change>6. && change<7.)\n        color = mix(fire, air, change-6.);\n    else \n        color = air;\n        \n      \n    \n    // Output to screen\n    fragColor.rgb = vec3(color);\n}","name":"Image","description":"","type":"image"}]}