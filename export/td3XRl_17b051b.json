{"ver":"0.1","info":{"id":"td3XRl","date":"1572584385","viewed":69,"name":"GPR-200-01-CheckerBoard","username":"CIvan","description":"A simple checkerboard using layers.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n*   Created by Carter Ivancic \n*   11/1/19\n*/\n\n//Variables that control the size of the checkerboard\nint xDimension = 11;\nint yDimension = 7;\n\n//Create alternating tiles\nvec4 altTile(vec2 tile)\n{\n    vec4 whiteLayer = vec4(1.0);\n    vec4 blackLayer = vec4(0.0);\n\t\n\tfloat index = 0.0;\n\t\n\tindex = mod(floor(tile.x) + floor(tile.y),2.0);\n    \n    //Determine if even or odd\n\tif(index == 0.0)\n\t{\n\t\t//see through to white\n\t\tblackLayer.a = 0.0;\n\t}\n\telse \n\t{\n\t\t//black appears on top\n\t\tblackLayer.a = 1.0;\n\t}\n    return mix(whiteLayer, blackLayer, blackLayer.a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = fragCoord/iResolution.xy;\n\n\tuv.x *= float(xDimension);\n    uv.y *= float(yDimension);\n    \n\t// Output to screen\n\tfragColor = altTile(uv);\n}","name":"Image","description":"","type":"image"}]}