{"ver":"0.1","info":{"id":"csX3z7","date":"1669184253","viewed":112,"name":"front the line + Anti aliasing","username":"tacos_au_chili","description":" a line direction sensor for a line anti aliasing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lineantialiasing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 mask(vec4 down,vec4 up){\n    vec3 tr = mix(down.rgb,up.rgb,up.a);\n    return vec4(tr,down.a);\n}\nfloat lineDir(vec2 a,vec2 b,vec2 v){\n    return dot(normalize(a-b),vec2(v.y-b.y,b.x-v.x));\n}\nvec3 point(vec3 surf,vec2 pos,vec3 col,vec2 v,float r){\n    return mask(vec4(surf,0),vec4(col,smoothstep(r+1.0,r-1.0,distance(v,pos)))).xyz;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n    vec2 res = iResolution.xy;\n    float h = iResolution.y;\n\n    //0.5 + 0.5*cos(iTime+(uv/res).xyx+vec3(0,2,4));\n    \n    float val = lineDir(iMouse.xy,res/2.0,uv);\n    vec3 col;\n    col = mask(vec4(col,0),vec4(0,1,1,smoothstep(1.0,-1.0,val))).xyz;\n    \n    col = point(col,res/2.0,vec3(1,0,1),uv,h/20.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}