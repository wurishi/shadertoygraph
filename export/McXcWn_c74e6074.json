{"ver":"0.1","info":{"id":"McXcWn","date":"1721089141","viewed":62,"name":"iamres clock1","username":"iamres","description":"iamres1","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["iamres1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi acos(-1.)\nfloat rect(in vec2 st, in vec2 size) {\n\tsize = 0.25 - size;\n    vec2 uv = step(size, st * (1.0 - st));\n\treturn uv.x * uv.y; }\n    \nvec2 RotateUV(vec2 uv, float rotation) {\n    return vec2(sin(rotation) * uv.y + cos(rotation) * uv.x, sin(rotation) * uv.x - cos(rotation) * uv.y); }\n    \nfloat Line(vec2 uv, vec2 a, vec2 b) {\n\tvec2 uva = uv - a, ba = b - a;\n    float t = clamp(dot(uva, ba)/dot(ba, ba), 0.0, 1.0);\n    vec2 c = a + ba * t;\n    float d = length(c - uv);\n\treturn min(1.0, 0.001/d); }\n    \nfloat Line1(vec2 uv, vec2 a, vec2 b) {\n\tvec2 uva = uv - a, ba = b - a;\n    float t = clamp(dot(uva, ba)/dot(ba, ba), 0.0, 1.0);\n    vec2 c = a + ba * t;\n    float d = length(c - uv);\n\treturn min(1.0, 0.003/d); }\n    \nfloat Line2(vec2 uv, vec2 a, vec2 b) {\n\tvec2 uva = uv - a, ba = b - a;\n    float t = clamp(dot(uva, ba)/dot(ba, ba), 0.0, 1.0);\n    vec2 c = a + ba * t;\n    float d = length(c - uv);\n\treturn min(1.0, 0.005/d); }\n    \nfloat Line3(vec2 uv, vec2 a, vec2 b) {\n\tvec2 uva = uv - a, ba = b - a;\n    float t = clamp(dot(uva, ba)/dot(ba, ba), 0.0, 1.0);\n    vec2 c = a + ba * t;\n    float d = length(c - uv);\n\treturn min(1.0, 0.004/d); }\n    \nfloat Line4(vec2 uv, vec2 a, vec2 b) {\n\tvec2 uva = uv - a, ba = b - a;\n    float t = clamp(dot(uva, ba)/dot(ba, ba), 0.0, 1.0);\n    vec2 c = a + ba * t;\n    float d = length(c - uv);\n\treturn min(1.0, 0.002/d); }\n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.x;\n\n    vec3 col = vec3(0.12, 0.12, 0.12);\n    \n    \n    \n    col = mix(col, vec3(0.1, 0.1, 0.1) + uv.y + uv.x, smoothstep(0.0, 1., uv.y ));\n\n    \n    col = mix(col, vec3(0.0), smoothstep(0.98, 1.0, min(0.27/abs(length(uv)), 1.0)));\n    \n    \n    \n    col += smoothstep(0.99, 1.0, min(0.26/abs(length(uv)), 1.0))* vec3(1.);\n    \n    \n    col = mix(col, vec3(0.9, 0.9, 0.9)*0.8, smoothstep(0.0, 1.5, min(0.017/abs(length(uv + 0.02)), 1.0)));\n    \n    col = mix(col, vec3(0.98, 0.9, 0.9)*0.8, smoothstep(0.0, 1.5, Line1(RotateUV(uv + 0.02, -2.*pi/60. * mod(iDate.w,60.)), vec2(0.0,0.05), vec2(0.0, -0.225))));\n    \n    col = mix(col, vec3(0.9, 0.9, 0.9)*0.8, smoothstep(0.0, 1.5, Line3(RotateUV(uv + 0.02, -2.*pi/60. * mod(iDate.w/60.,60.)), vec2(0.0,0.0), vec2(0.0, -0.18))));\n    \n    col = mix(col, vec3(0.9, 0.9, 0.9)*0.8, smoothstep(0.0, 1.5, Line2(RotateUV(uv + 0.02, -2.*pi/12. * iDate.w/3600.), vec2(0.0,0.0), vec2(0.0, -0.1))));\n    \n    for (int i = 0; i<=60; i++) {\n        float rotation = -pi * float(i)/float(60) * 2.;\n        vec2 RotP2 = uv;\n        RotP2 = RotateUV(uv, rotation);\n        float dt = smoothstep(0.5, 1., Line(RotP2, vec2(0.0,0.24), vec2(0.0, 0.255)));\n        col = mix(col, vec3(1.0, 1.0, 1.0)*0.15, dt); }\n        \n     for (int i = 0; i<=12; i++) {\n        float rotation = -pi * float(i)/float(12) * 2.;\n        vec2 RotP2 = uv;\n        RotP2 = RotateUV(uv, rotation);\n        float dt = smoothstep(0.5, 1., Line4(RotP2, vec2(0.0,0.22), vec2(0.0, 0.255)));\n        col = mix(col, vec3(1.0, 1.0, 1.0)*0.15, dt); }\n    \n    col -= smoothstep(0.9, 1., min(0.017/abs(length(uv)), 1.0));\n    \n    col = mix(col, vec3(0.0, 0.0, 0.0), smoothstep(0.9, 1., Line2(RotateUV(uv, -2.*pi/12. * iDate.w/3600.), vec2(0.0,0.0), vec2(0.0, -0.1))));\n    \n    col = mix(col, vec3(0.0, 0.0, 0.0), smoothstep(0.9, 1., Line3(RotateUV(uv, -2.*pi/60. * mod(iDate.w/60.,60.)), vec2(0.0,0.0), vec2(0.0, -0.18))));\n    \n    col = mix(col, vec3(0.5, 0.0, 0.0), smoothstep(0.9, 1., Line1(RotateUV(uv, -2.*pi/60. * mod(iDate.w,60.)), vec2(0.0,0.05), vec2(0.0, -0.24))));\n    \n    \n    \n    \n    \n    \n    \n    //col = mix(col, vec3(0.7, 0.0, 0.0), smoothstep(0.9, 1., rect(RotateUV(uv, -2.*pi/60. * mod(iDate.w,60.))+vec2(0.5, 0.57), vec2(0.00001,0.025))));\n    \n    \n    \n    col = mix(col, vec3(0.5), smoothstep(0.9, 1., min(0.012/abs(length(uv)), 1.0)));\n    col -= smoothstep(0.5, 1., min(0.001/abs(length(uv)-0.013), 1.0));\n    \n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}