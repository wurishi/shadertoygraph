{"ver":"0.1","info":{"id":"dtVBRc","date":"1702350663","viewed":23,"name":"I followed that one tutorial","username":"Jomambo","description":"now im happy","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28318530\n\nvec3 palette (float t, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return a + b * cos(TWO_PI * (c * t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; i ++) {\n        uv = fract(uv * 1.6) - 0.5;\n\n        float distance = length(uv) * exp(-length(uv0));\n        vec3 color = palette(length(uv0) + i*.4 + iTime/3.0, vec3(0.3, 0.3, 0.3), vec3(0.1, 0.6, 0.1), vec3(0.5, 0.01, 0.5), vec3(0.0, 0.3, 0.8));\n\n        distance = cos(distance * 6.50 - iTime*.2)/8.;\n        distance = abs(distance);\n        distance = pow(.01/ distance, 2.0);\n\n        finalColor += color * distance;\n    }\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}