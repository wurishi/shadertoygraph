{"ver":"0.1","info":{"id":"4slBWl","date":"1498820778","viewed":247,"name":"Vinyl Suface","username":"c0de4","description":"ヴヴヴ","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["2d","vinyl","suface"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// thanks to: https://wgld.org/\n\n#define time iTime\n#define mouse iMouse\n#define resolution iResolution\n\nfloat random (in vec2 st) { \n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233))) \n                * 43758.5453123);\n}\n\n// The MIT License\n// Copyright © 2013 Inigo Quilez\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n    \n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( random( i + vec2(0.0,0.0) ), \n                     random( i + vec2(1.0,0.0) ), u.x),\n                mix( random( i + vec2(0.0,1.0) ), \n                     random( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n  vec2 p = ( fragCoord.xy * 2.0 - resolution.xy ) / min(resolution.x, resolution.y);\n\n  float color = 0.0;\n  \n  for(float i = 0.; i < 4.; i++) {\n    float j = i + 1.0;\n    p += vec2(noise(p+j)-cos(time*.5)+noise(vec2(time))*.1, noise(p*j)-sin(time*j) * .01 );\n    vec2 q = vec2(noise(vec2(p+j)) );\n    float a = length(p-q);\n    color += .02/length(p-a);\n  }\n\n  fragColor = vec4( vec3( color ), 1.0 );\n\n}\n\n","name":"Image","description":"","type":"image"}]}