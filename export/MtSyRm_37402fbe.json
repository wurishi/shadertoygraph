{"ver":"0.1","info":{"id":"MtSyRm","date":"1507884686","viewed":619,"name":"Apollonian Shane Formula Test","username":"aiekick","description":"this formula is used in [url=https://www.shadertoy.com/view/4d2BW1][SH17A] Apollonian Structure[/url] by shane.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["apollonian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float shape(vec2 p)\n{\n\treturn mix(\n        length(p),\n\t\tmax(abs(p.x),abs(p.y)), \n        (sin(iTime)*.5+.5)*.7);\n}\n\nmat2 rot(float a)\n{\n\tfloat c = cos(a);\n\tfloat s = sin(a);\n\treturn mat2(c,-s,s,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 g = fragCoord.xy;\n\tvec2 si = iResolution.xy;\n\tvec2 p = (g-si*.5)/si.y;\n\t\n\tfloat s = 1., k;\n\n\tfor (int i=0;i<12;i++)\n\t{\n\t\tp = mod(p-1., 2.) - 1.;\n\t\tk = 1./pow(shape(p),2.);\n\t\tp *= k;\n\t\ts *= k;\n\t\tp *= rot(iTime * 0.5);\n\t}\n\t\t\n\tfloat c = length(p)/s - 0.001; \n\t\n\tvec3 col = vec3(0);\n\t\n\tcol = step(vec3(0), vec3(c));\n\t\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}