{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define M_PI 3.14159265358979323846\n#define M_TAU 6.2831853071795862\n#define ITERS 20\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 thph = (fragCoord.xy / iResolution.xy - 0.5) * M_PI;\n\tthph.x *= iResolution.x / iResolution.y;\n\tthph.x += iTime / 60.0 * M_TAU;\n\tvec3 xyz = vec3(cos(thph.x) * cos(thph.y), sin(thph.x) * cos(thph.y), sin(thph.y));\n\tvec3 c0 = vec3(1.0, 0.0, 0.0), c1 = vec3(1.0, 1.0, 1.0);\n\t\n\tvec2 mr = iMouse.xy / iResolution.xy * vec2(M_TAU, M_PI);\n\txyz.xz = vec2(dot(xyz.xz, vec2(cos(mr.y), sin(mr.y))), dot(xyz.xz, vec2(-sin(mr.y), cos(mr.y))));\n\txyz.yz = vec2(dot(xyz.yz, vec2(cos(mr.x), sin(mr.x))), dot(xyz.yz, vec2(-sin(mr.x), cos(mr.x))));\n\t\n\tfor (int i = 0; i < ITERS; ++i) {\n\t\tvec3 t = c0;\n\t\tif (xyz.x * xyz.y * xyz.z > 0.0) {\n\t\t\tc0 = c1;\n\t\t} else {\n\t\t\tc0 = (c0 + 2.0 * c1) / 3.0;\n\t\t}\n\t\tc1 = t;\n\t\txyz = fract(xyz) * 2.0 - 1.0;\n\t}\n\t\n\tfragColor = vec4(c1, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsXXW4","date":"1400971665","viewed":172,"name":"Checker Ball Skin","username":"jld","description":"Based on my first (and only) attempt at POV-Ray Golf, with recursively macro-expanded nested checkerboard textures applied to a sphere.  Here, the sphere is unwrapped.  Drag to rotate.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mouse","uv"],"hasliked":0,"parentid":"","parentname":""}}