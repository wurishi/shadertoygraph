{"ver":"0.1","info":{"id":"XfccRr","date":"1730134975","viewed":21,"name":"Green thingy","username":"sladix","description":"My first try with raymarching, I think I understood some of the concepts. But there are still many blurry areas","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","palette","noob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// The mighty IQ functions\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\nfloat sdTorus( vec3 p, vec2 t )\n{\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat smin(float a, float b, float k) {\n    float h = max(k-abs(a-b),0.0)/k;\n    return min(a,b)-h*h*h*k*(1./6.);\n}\n\nvec3 palette(float t) {\n    return .5+.5*cos(6.28318*(t+vec3(.33,0.66,.33)));\n}\n// Main scene\nfloat map(vec3 p) {\n    vec3 o = p;\n    vec3 bs = vec3(3,0.5,0.1);\n    vec3 boxPos = vec3(0,0,2.+cos(iTime));\n    \n    float left = sdBox(o+vec3(3.5,0,0)+boxPos, bs);\n    float right = sdBox(o-vec3(3.5,0,0)+boxPos, bs);\n    \n    p.z += iTime*.5;\n    p.z = mod(p.z, 0.5) - 0.25;\n    \n    p.yz *= rot(1.57);\n    \n    float torus = sdTorus(p, vec2(0.5,0.1));\n    return smin(torus, min(left,right), 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy * 2. - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    // init\n    vec3 ro = vec3(0,0,-3.);\n    vec3 rd = normalize(vec3(uv, 1));\n    vec3 col = vec3(0);\n    \n    float t = 0.;\n    \n    // ray march\n    int i;\n    for (i = 0; i < 80; i++) {\n        vec3 p = ro + rd * t;\n        p.xy *= rot(iTime*0.4);\n    \n        float d = map(p);\n    \n        t += d;\n        \n        if (d < 0.001 || t > 100.) break;\n    }\n    \n    // Otherwise there is a weird noise in the background, it's ugly, idk what I'm doing, please forgive me\n    if (t*0.2 < 1.) {\n        col = palette(t*0.05+(float(i)/80.)*0.5);\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}