{"ver":"0.1","info":{"id":"3lcBzj","date":"1615356990","viewed":40,"name":"Bouncing Boxes","username":"elindie","description":"Quick 2d test","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float offset = 2.0;\n    float frequency = 11.0;\n    float intensity = 0.6;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime + uv.xyx + vec3(0,2,4)) * 0.6;\n    \n    float g1 = sin(abs(uv.y * offset) * frequency);\n    float g2 = sin(abs(uv.x * offset) * frequency);\n    float g3 = max(g1, g2);\n    \n    float timeBounce = 5.0 + sin(iTime) * 1.0;\n    \n    float pulse = cos(uv.x) * sin(g3 * frequency * timeBounce) * intensity;\n    \n    vec3 col2 = vec3(pulse, pulse, pulse);  \n    \n\n    // Output to screen\n    fragColor = vec4(min(col.xyz, col2.xyz), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}