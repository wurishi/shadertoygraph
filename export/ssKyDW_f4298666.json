{"ver":"0.1","info":{"id":"ssKyDW","date":"1654893501","viewed":208,"name":"Mosaic flower tiles","username":"jarble","description":"Another interesting series of mosaic patterns.","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["fractal","flower","mosaic"],"hasliked":0,"parentid":"7syyDR","parentname":"Web of Lights"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define animate\n\n#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 4.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n    float offset = 0.;\n    float offset1 = iTime/1000.;\n    float t4 = floor((iTime/8.+uv.x));\n\n    for(int i=0;i<2;i++)\n    {\n        vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);\n        for(int k = 0; k < 4; k++){\n        \n            uv += (t2.yx)/scale;\n            t2 = triangle_wave(uv.yx-.5,scale);\n            //t2.y -= float(i)/8.;\n            #ifdef animate\n            float num = 3.+float(k+i);\n            t2 += t4/num;\n            #endif\n            t3 = triangle_wave(uv,scale);\n            //t3 -= float(k)/3.;\n            uv.yx = (t2-t3)/(scale);\n            col.x = min(((uv.y-uv.x)+col.x),col.x)/sqrt(3.);\n            col = (col.yzx+vec3(col.x))/sqrt(3.);\n        }\n        \n    }\n    fragColor = vec4(-vec3(col*3.),1.0);\n}\n","name":"Image","description":"","type":"image"}]}