{"ver":"0.1","info":{"id":"WtV3D3","date":"1580122623","viewed":742,"name":"2d ripples","username":"mba105","description":"based on Hugo Elias' article here: https://web.archive.org/web/20160116150939/http://freespace.virgin.net/hugo.elias/graphics/x_water.htm\n\nsimilar to: https://www.shadertoy.com/view/WdVXDt , but with reflections at the edges","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["ripples","water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 color, in vec2 coord)\n{\n    if (iFrame % 2 == 1)\n        color = vec4(vec3(texture(iChannel0, coord / iResolution.xy).r * 0.5 + 0.5), 1.0);\n    else\n        color = vec4(vec3(texture(iChannel1, coord / iResolution.xy).r * 0.5 + 0.5), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage(out vec4 color, in vec2 coord)\n{\n    if (iFrame == 0)\n    {\n        color = vec4(vec3(0.0), 1.0);\n        return;\n    }\n    \n    ivec2 p = ivec2(coord);\n    \n    if (iFrame % 2 == 1)\n    {\n    \tcolor = texelFetch(iChannel0, p, 0);\n        return;\n    }\n    \n    ivec2 res = ivec2(iResolution.xy);\n    vec2 mouse = vec2(iMouse.xy);\n    \n    float h = process(iChannel1, iChannel0, res, mouse, p);\n    \n    color = vec4(h, 0.0, 0.0, 1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nvoid mainImage(out vec4 color, in vec2 coord)\n{\n    if (iFrame == 0)\n    {\n        color = vec4(vec3(0.0), 1.0);\n        return;\n    }\n    \n    ivec2 p = ivec2(coord);\n    \n    if (iFrame % 2 == 0)\n    {\n    \tcolor = texelFetch(iChannel1, p, 0);\n        return;\n    }\n    \n    ivec2 res = ivec2(iResolution.xy);\n    vec2 mouse = vec2(iMouse.xy);\n    \n    float h = process(iChannel0, iChannel1, res, mouse, p);\n    \n    color = vec4(h, 0.0, 0.0, 1.0);\n}\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\nfloat read(sampler2D tex, ivec2 res, ivec2 coord, ivec2 offset, vec2 mouse)\n{\n    ivec2 r = res;\n    ivec2 c = coord + offset;\n    \n    // is there a better way to mirror the coordinates? :(\n    if (c.x < 0)\n        c.x = -c.x;\n    else if (c.x > r.x)\n        c.x = r.x - (c.x - r.x);\n        \n    if (c.y < 0)\n        c.y = -c.y;\n    else if (c.y > r.y)\n        c.y = r.y - (c.y - r.y);\n    \n    // is there a way to tell if the mouse is down or not? it seems to get stuck :(\n    float ui = clamp(1.0 - length(vec2(c) - mouse.xy) / 5.0, 0.0, 1.0);\n    float h = texelFetch(tex, c, 0).r;\n    \n    return h + ui;\n}\n\nfloat process(sampler2D bufferIn, sampler2D bufferOut, ivec2 res, vec2 mouse, ivec2 p)\n{\n    float l = read(bufferIn, res, p, ivec2(-1,  0), mouse);\n    float r = read(bufferIn, res, p, ivec2( 1,  0), mouse);\n    float u = read(bufferIn, res, p, ivec2( 0, -1), mouse);\n    float d = read(bufferIn, res, p, ivec2( 0,  1), mouse);\n    \n    float c = read(bufferOut, res, p, ivec2(0), mouse);\n    \n    float damp = 0.98;\n    \n    return ((l + r + u + d) / 2.0 - c) * damp;\n}","name":"Common","description":"","type":"common"}]}