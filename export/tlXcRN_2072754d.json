{"ver":"0.1","info":{"id":"tlXcRN","date":"1591542767","viewed":176,"name":"ao[spaz] âš™","username":"HaleyHalcyon","description":"a","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smootherstep(float edge0, float edge1, float x) {\n  // Scale, and clamp x to 0..1 range\n  x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n  // Evaluate polynomial\n  return x * x * x * (x * (x * 6. - 15.) + 10.);\n}\n\nfloat softsquare(float x) {\n    float x2 = abs(2. * fract(x) - 1.);\n    return smoothstep(0.1, 0.9, x2);\n}\n\nvec3 gradient(float x, float y) {\n    const float _2PI3 = 2.094395102393193;\n    float g1 = softsquare(x);\n    float g2 = softsquare(x - 0.3);\n    vec3 blend = (vec3(sin(y), sin(y + _2PI3), sin(y - _2PI3)) + 1.) * 0.5;\n    return blend * g2 + (1. - blend) * g1;\n}\n\nfloat spikes(float x) {\n    x = 1. - abs(sin(x));\n    return x * x;\n}\n\nfloat time2(float x) {\n    return cos(smoothstep(0.92, 1.0, fract(x)) * 3.14159265);\n}\n\nfloat time3(float x) {\n    return smootherstep(0.92, 0.93, fract(x))\n        //* (1.0 - smootherstep(0.99, 1.0, fract(x)))\n        ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float FastPeriod = 8.3;\n    \n    float time = floor(iTime * 60.) / 60.;\n    const float PI = 3.14159265;\n    const float speed = 4.;\n    float hue = fract(time / 12.) * 2. * PI;\n    float flash = (24. * time) * time3(time / FastPeriod)  * PI;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = distance(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n\tuv -= vec2(iResolution.x / scale, iResolution.y / scale) / 2.;\n    uv *= 2.0;\n    \n    float dist = log(uv.x*uv.x+uv.y*uv.y + 0.05) * 1.1;\n    float angle = atan(uv.y, uv.x);\n    float spokes = 8.5;\n    \n    vec3 color = gradient(\n        dist +\n        (0.3 + 0.1 * time3(time / FastPeriod)) * spikes(\n            angle * spokes\n            + sin(time / 32.)\n        ) +\n        fract(time / -24.)\n        -16. * time2(time / FastPeriod)\n    , hue + flash);\n\n    // Output to screen\n    fragColor = vec4(\n        color,\n        1\n    );\n}","name":"Image","description":"","type":"image"}]}