{"ver":"0.1","info":{"id":"dt2SDm","date":"1676225006","viewed":119,"name":"Hexagonal Bokeh [googl4] fork","username":"LVutner","description":"A tiny attempt to improve the performance. It was a trivial thing, yet i didn't see it in original. \nDoesn't implement CoC.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["bokeh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Final blur\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 rcp_resolution = 1.0 / iResolution.xy;\n    \n    vec2 uv = fragCoord.xy * rcp_resolution;\n\n    vec2 direction_0 = rcp_resolution * vec2(cos(angle - PI / 6.0), sin(angle - PI / 6.0));\n    vec2 direction_1 = rcp_resolution * vec2(cos(angle - 5.0 * PI / 6.0), sin(angle - 5.0 * PI / 6.0));\n\n    vec4 color_a = BlurTexture(iChannel0, uv, direction_0);\n    vec4 color_b = BlurTexture(iChannel1, uv, direction_1);\n    \n    vec3 color = (color_a.xyz + color_b.xyz) / 3.0; //3.0 is here because in buffer C we added blurs together.\n    color = pow(color, vec3(1.0 / 2.2));\n   \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define PI 3.14\n#define NUM_SAMPLES 8\n#define angle mix(PI / 2.0, PI / 4.0, fragCoord.y / iResolution.x) //Fake rotation\n\nvec4 BlurTexture(sampler2D tex, vec2 uv, vec2 direction)\n{\n    uv += direction * 1.0; //Pixel * 2\n\n    vec4 accum = vec4(0.0);\n\n    for (int i = 0; i < NUM_SAMPLES; i++)\n    {\n        vec4 color = textureLod(tex, uv + direction * float(i*2), 0.0);\n\n        accum += color;\n    }\n  \n    return accum * (1.0 / accum.w);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Draw image\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = texture(iChannel0, fragCoord.xy / iResolution.xy).xyz;\n    color = pow(color, vec3(2.2));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//Vertical blur \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 rcp_resolution = 1.0 / iResolution.xy;\n    \n    vec2 uv = fragCoord.xy * rcp_resolution;\n\n    vec2 direction = rcp_resolution * vec2(cos(angle + PI / 2.0), sin(angle + PI / 2.0));\n\n    vec4 color = BlurTexture(iChannel0, uv, direction);\n\n    fragColor = color;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"//Diagonal+vertical blur\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 rcp_resolution = 1.0 / iResolution.xy;\n    \n    vec2 uv = fragCoord.xy * rcp_resolution;\n\n    vec2 direction = rcp_resolution * vec2(cos(angle - PI / 6.0), sin(angle - PI / 6.0));\n\n    vec4 color_a = BlurTexture(iChannel0, uv, direction);\n    vec4 color_b = texture(iChannel1, uv);\n    \n    fragColor = vec4(color_a.xyz + color_b.xyz, 1.0);\n}","name":"Buffer C","description":"","type":"buffer"}]}