{"ver":"0.1","info":{"id":"cslGzj","date":"1666437429","viewed":90,"name":"Kuwahara Filter, KS","username":"stormsc1","description":"Kuwahara Filter","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["kuwahara"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// texture is in iChannel0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 mean[4] = vec3[4](\n        vec3(0.0f, 0.0f, 0.0f),\n        vec3(0.0f, 0.0f, 0.0f),\n        vec3(0.0f, 0.0f, 0.0f),\n        vec3(0.0f, 0.0f, 0.0f)\n    );\n    \n\n    vec3 sigma[4] = vec3[4](\n        vec3(0.0f, 0.0f, 0.0f),\n        vec3(0.0f, 0.0f, 0.0f),\n        vec3(0.0f, 0.0f, 0.0f),\n        vec3(0.0f, 0.0f, 0.0f)\n    );\n    \n    int radius = 5;\n    \n    vec2 offsets[4] = vec2[4](\n        vec2(-radius, -radius),\n        vec2(-radius, 0),\n        vec2(0, -radius),\n        vec2(0, 0)\n    );\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // for every region\n    for(int i = 0; i < 4; ++i)\n    {\n        // sample x axis\n        for (int j = 0; j <= radius; ++j)\n        {\n            // sample y axis\n            for (int k = 0; k <= radius; ++k)\n            {\n                vec2 pos = vec2(j, k) + offsets[i];\n                vec2 uvpos = uv + pos/iResolution.xy;\n            \n                vec4 col = texture(iChannel0, uvpos);\n                \n                mean[i] += col.xyz;\n                sigma[i] += col.xyz * col.xyz; \n            }\n        }\n    \n    }\n    \n    float n = pow(float(radius + 1), 2.0f);\n\n    // calculate standard deviation\n    float sigma_f;\n    float min = 1.0;\n    for(int i = 0; i < 4; ++i)\n    {\n        mean[i] /= n;\n        sigma[i] = abs(sigma[i] / n - mean[i] * mean[i]);\n        sigma_f = sigma[i].b + sigma[i].y + sigma[i].z;\n        if(sigma_f < min)\n        {\n            min = sigma_f;\n            fragColor = vec4(mean[i], 1.0f);\n        }\n    }\n\n\n}","name":"Image","description":"","type":"image"}]}