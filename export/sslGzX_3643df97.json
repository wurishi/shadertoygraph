{"ver":"0.1","info":{"id":"sslGzX","date":"1631838088","viewed":67,"name":" First Shader ","username":"personalizedrefrigerator","description":"A very simple shader, my first on Shadertoy, made a while ago, but just made public.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getCol(vec2 uv)\n{\n    float sinY = sin(uv.y * 10.0);\n    vec2 pos = vec2(cos(uv.x * 10.0) + sinY * sinY * sinY, uv.x / uv.y + cos(iMouse.x / (iMouse.y + 0.001))) * uv.x;\n    float z = tan(pos.x/tan(pos.y + 0.001) - sin(iTime)) * sin(cos(pos.y / (pos.x + 0.001) / cos(pos.x)) - iTime);\n    \n    return 0.5 * sin(z) + 0.5 + 0.1/tan(uv.x * uv.y);\n}\n\nfloat getBlurredCol(vec2 uv)\n{\n    float result = 0.0;\n    float divBy = 0.0;\n    float BLUR_SIZE = 0.03 * (1.0 + sin(uv.x * uv.y * 0.8 - 0.3));\n    float BLUR_STEP = 0.015 * (0.7 + 0.5 * sin(uv.x / uv.y));\n    \n    for (float x = -BLUR_SIZE; x < BLUR_SIZE; x+=BLUR_STEP) \n    {\n        for (float y = -BLUR_SIZE; y < BLUR_SIZE; y+=BLUR_STEP)\n        {\n            result += getCol(uv + vec2(x, y));\n            divBy++;\n        }\n    }\n    \n    return result / divBy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = 0.9 + tan(iTime * 0.2);\n    float scaleFactor = 1.0 / iResolution.x;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = scaleFactor * (fragCoord - iMouse.xy) * zoom * vec2(1.0, -1.0);\n    float z = getBlurredCol(uv);\n    vec3 col = vec3(sin(1.0 / z) / 4.0 + 0.1, 0.5 * z, z);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}