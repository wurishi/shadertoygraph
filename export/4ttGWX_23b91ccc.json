{"ver":"0.1","info":{"id":"4ttGWX","date":"1472158711","viewed":171,"name":"Sacred Circles","username":"coil","description":"Fooling around a bit, first shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LineWidth  1.\n#define rotRadius 0.\n#define rotSpeed 0.5\n#define oscSpeed 1.\n#define pi 3.1415\n#define ringFreq 5.\n#define intensity 0.3\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.y;\n    \n    float t = iTime;\n    \n    fragColor = vec4(0.);\n    \n    //mat4(0,1,-1,0)\n    //vec2 P1 = vec2(0.75,0.5) , P2 = vec2(rotRadius*sin(rotSpeed*t)+0.*sin(oscSpeed*t), rotRadius*cos(oscSpeed*t)+0.2*sin(rotSpeed*t)) + P1, P3 = mat2(0,1,-1,0)*(P1-P2) + (P1+P2)/2.;\n    vec2 P1 = vec2(0.75,0.5) , P2 = vec2(0.1*t, rotRadius*cos(oscSpeed*t)+0.2*sin(rotSpeed*t)) + P1, P3 = mat2(0,1,-1,0)*(P1-P2) + (P1+P2)/2.;\n    \n    float P1r = length(P1 - uv), P2r = length(P2 - uv), P3r = length(P3-uv), PointDist = length(P1-P2);\n    \n    fragColor += vec4(0.05, 0. , 0., 1.0) * abs(0.5*tan( + ringFreq*pi*(1.-abs(PointDist-P1r ))/LineWidth) + 0.1);\n    fragColor += vec4(abs(sin(t)),0.0, 0., 1.0) * abs(0.5*sin(0.5*pi + 2.*ringFreq*pi*(1.-abs(PointDist-P1r ))/LineWidth) + 0.1);\n\n    \n    fragColor += vec4(0.0, 0.05, 0.0, 1.0) * abs(0.5*tan( + ringFreq*pi*(1.-abs(PointDist-P2r ))/LineWidth) + 0.1);\n\tfragColor += vec4(0.1, abs(sin(t)), 0.0, 1.0) * abs(0.5*sin(0.5*pi + 2.*ringFreq*pi*(1.-abs(PointDist-P2r ))/LineWidth) + 0.1);\n       \n    \n    fragColor += vec4(0.0, 0.0, 0.05, 1.0) * abs(0.5*tan( + ringFreq*pi*(1.-abs(PointDist-P3r ))/LineWidth) + 0.1);\n  \tfragColor += vec4(0.0, 0.0, abs(sin(t)), 1.0) * abs(0.5*sin(0.5*pi + 2.*ringFreq*pi*(1.-abs(PointDist-P3r ))/LineWidth) + 0.1);\n   \n\t   \n}\n\n//add si","name":"Image","description":"","type":"image"}]}