{"ver":"0.1","info":{"id":"Wt2fR1","date":"1598325128","viewed":80,"name":"色散","username":"hanyeah","description":"色散","likes":3,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getColor(float f){\n    f = mod(f, 6.0);\n    return float[](1.0, 2.0 - f, 0.0, 0.0, f - 4.0, 1.0)[int(f)];\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    col.r= 0.0;\n    col.g = 0.0;\n    col.b = 0.0;\n    \n    float x0 = 0.5;\n    float y0 = 0.5;\n    \n    float sc = 0.01;\n    for(float i = 0.0; i < 100.0; i=i+1.0){\n    \ty0 = 0.5 - (i - 5.0) * 0.001;\n        \n        float angle = atan(uv.y - y0,uv.x - x0);\n        if(angle < 0.5 && angle > -0.5){\n        \tfloat f = (angle + 0.5) * 6.0;\n            vec3 rgb = sc * vec3(getColor(f),getColor(f + 2.0),getColor(f + 4.0));\n            col = 1.0 - (1.0 - col) * (1.0 - rgb);\n        }\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}