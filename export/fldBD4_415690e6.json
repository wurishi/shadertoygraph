{"ver":"0.1","info":{"id":"fldBD4","date":"1663100227","viewed":53,"name":"Fork Haladó Gra","username":"reka","description":"Ora","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cg"],"hasliked":0,"parentid":"sl3BDN","parentname":"Haladó Grafika 01 2022 ősz"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 cmult(vec2 z, vec2 w)\n{\n    return vec2(z.x*w.x - z.y*w.y, z.x*w.y + z.y*w.x);\n}\n\nvec2 cdiv(vec2 z, vec2 w)\n{\n    return vec2(dot(z,w) / dot(w,w), (z.y*w.x - z.x * w.y)/ dot(w,w));\n}\n  \n\nvec2 f2(vec2 z)\n{\n    return cmult(cmult(z,z),z) - cmult(z,z) + z - vec2(1,0);\n}\n\nvec2 f2d(vec2 z)\n{\n    return 3.*cmult(z,z) - 2.*z + vec2(1,0);\n}\n\n\nfloat f(float a, float b)\n{\n    return 0.*a*b*b + a*a + b*b - 0.25;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 uv = fragCoord/iResolution.x*4.-vec2(1,1);\n   \n    \n    // Time varying pixel color\n    vec3 col = vec3(0,0,0); //0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float a = uv.x;\n    float b = uv.y;\n    \n    float max_iter = 10.;\n    float iter = 0.;\n    float iter_step = 1./max_iter;\n    float eps = 0.001;\n    \n    vec2 z = vec2(a,b);\n \n    while (iter < 1.)\n    {\n        z -=  cdiv(f2(z),f2d(z));\n        iter += iter_step;\n        if ((length(z - vec2(1,0)) < eps) || (length(z - vec2(0,1)) < eps) || (length(z - vec2(0,-1)) < eps))\n            break;\n    }\n    \n    \n    if (length(z - vec2(1,0)) < eps)\n        col = vec3(iter,0,0);\n    \n    \n    if (length(z - vec2(0,1)) < eps)\n        col = vec3(0,iter,0);\n        \n    \n    if (length(z - vec2(0,-1)) < eps)\n        col = vec3(0,0,iter);\n        \n       \n    \n    //if(length(z)<0.1)\n       // col = vec3(1.0);\n        \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}