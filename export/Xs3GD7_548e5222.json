{"ver":"0.1","info":{"id":"Xs3GD7","date":"1449934367","viewed":165,"name":"004.2[F] Wooden texture (noise)","username":"pawsiem","description":"Just for fun, wooden texture:)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","texture","wooden"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"//@Shane\nfloat sFract(float x)\n{\n\nx = fract(x);\n// The last term is a smoothing factor, of sorts.\nreturn min(x, x*(1.-x)*12.);\n\n}\nvec2 hash( vec2 p ) {                       // rand in [-1,1]\n    p = vec2( dot(p,vec2(127.1,311.7)),\n              dot(p,vec2(269.5,183.3)) );\n    return -1. + 2.*fract(sin(p+20.)*53758.5453123);\n}\n\nfloat noise( in vec2 p ) {\n    vec2 i = floor(p), f = fract(p);\n    vec2 u = f*f*(3.-2.*f);\n    return mix( mix( dot( hash( i + vec2(0.,0.) ), f - vec2(0.,0.) ), \n                     dot( hash( i + vec2(1.,0.) ), f - vec2(1.,0.) ), u.x),\n                mix( dot( hash( i + vec2(0.,1.) ), f - vec2(0.,1.) ), \n                     dot( hash( i + vec2(1.,1.) ), f - vec2(1.,1.) ), u.x), u.y);\n}\nvec4 wood(float x){\n    vec3 color = vec3(0.439, 0.200, 0.);\n    float m =mod(x,3.5);\n    float wood = sFract(pow(m-1.8,2.))+0.26;\n    return m<0.1?vec4(0.03):vec4(color-vec3(0.157, 0.102, 0.075)*wood,1.);\n}\nvoid mainImage( out vec4 o, in vec2 p )\n{\n\tp=p/iResolution.xy*10.+iMouse.xy/5.;\n    p.x+=iTime/2.;\n    o=wood(p.y+noise(p)/1.8);\n}","name":"","description":"","type":"image"}]}