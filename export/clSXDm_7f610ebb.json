{"ver":"0.1","info":{"id":"clSXDm","date":"1676136807","viewed":70,"name":"sdf shapes play","username":"DesM","description":"sdf","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define UV_ORIGIN .7\n\n#define ZOOM .9\n#define SPEED 15.0\n\nconst float PI = 3.14;\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\n\n\n\nfloat CircDist(vec2 p){\n    float c = length(p);\n    return c;\n\n}\nfloat HexDist(vec2 p){\n    p=abs(p);\n    \n    float c = dot(p, normalize(vec2(1,1.732050)));\n    c = max(c, p.x);\n    \n    return c;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y ;\n   \n     uv *= rotationMatrix( SPEED * iTime ) * ZOOM;\n    \n    \n    vec3 col = vec3(1.0);\n    \n    float circ = smoothstep (.5,.35, CircDist(uv));\n    \n    float hex = smoothstep (.3,.295,HexDist(uv));\n    \n    //col*=circ;\n    col*=mix(circ,hex,0.5);\n    \n    \n  \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}