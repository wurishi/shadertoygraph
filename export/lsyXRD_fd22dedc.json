{"ver":"0.1","info":{"id":"lsyXRD","date":"1463162836","viewed":501,"name":"Superformula 2D ","username":"unbird","description":"Application of https://en.wikipedia.org/wiki/Superformula with slight distortion.\n","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","distortion","superformula","superellipse","lam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://en.wikipedia.org/wiki/Superformula\n\nfloat super(float phi, float a, float b, float m, float n1, float n2, float n3)\n{    \n    return 1.0 / pow(pow(abs(cos(m*phi/4.0))/a, n2) + pow(abs(sin(m*phi/4.0))/b, n3), 1.0 / n1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv *= 1.5;\n    uv.x *= iResolution.x / iResolution.y;        \n    float d1 = sin(2.0*(uv.x+iTime)) + sin(2.0*(uv.y+iTime));\n    uv.x += 0.1 * d1;\n    uv.y += 0.1 * d1;\n    float phi = atan(uv.y, uv.x);\n\tfloat r = length(uv);\n\t\n\t// distort r    \n    float fade = (0.5+0.5*sin(iTime));\n    float distort = 0.5*sin(2.0*phi) + 0.3 * sin(5.0*phi);\n\t//r += fade * 0.2 * distort;\n    float m = sin(iTime*0.2) * 5.0 + 6.0;\n    float n1 = sin(iTime*0.3+1.0) * 5.0 + 6.0;\n    float n2 = sin(iTime*0.4+2.0) * 5.0 + 6.0;\n    float n3 = sin(iTime*0.5+3.0) * 5.0 + 6.0;\n    //float c = super(phi, 1.0, 1.0,11.0, 6.0, 10.0,5.0) - r;\n    float c = super(phi, 1.0, 1.0,m,n1,n2,n3) - r;\n    // AA        \n    c = c / fwidth(c);        \n    fragColor = vec4(c,c,c,1);        \n}","name":"Image","description":"","type":"image"}]}