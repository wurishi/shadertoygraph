{"ver":"0.1","info":{"id":"lltXD4","date":"1479739901","viewed":2431,"name":"Ripple noise","username":"Mr_F","description":"Wavy noise experiments","likes":43,"published":1,"flags":0,"usePreview":1,"tags":["noise","wave","water","normalmap","heightmap","bump","ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float hardness = 0.1;\nconst int iterations = 4;\nconst float speed = 1.5;\nconst float intensity = 1.0;\n\n// Slow, but more octaves\n#define COMPLEX\n\n//#define TILED\n\n\n// Hash function from https://www.shadertoy.com/view/4djSRW\n#define HASHSCALE4 vec4(1031, .1030, .0973, .1099)\nvec4 hash43(vec3 p)\n{\n    vec4 p4 = fract(vec4(p.xyzx)  * HASHSCALE4);\n    p4 += dot(p4, p4.wzxy+19.19);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nfloat drip(vec2 uv, vec2 pos, float age, float scale, float cells) {\n    vec2 vD = vec2 (uv - pos);\n    float fD = sqrt(dot (vD, vD)) * 2.0 * (cells/16.0);\n    float fDa = 10.0 * fD;\n    float freq = 300.0 * scale;\n    return    max (0.0, 1.0 - fDa*fDa)\n            * sin ((fD*freq - age*40.0*(scale*2.0-1.0))*hardness);\n}\n\n// Based on texture bombing: http://http.developer.nvidia.com/GPUGems/gpugems_ch20.html\nfloat drops(vec2 uv, float cells) {\n    float height = 0.0;\n    vec2 cell = floor(uv * cells);\n    for(int iter=0; iter<iterations; iter++) {\n        for(int i = -1; i <= 1; i++) {\n          for(int j = -1; j <= 1; j++) {\n            vec2 cell_t = cell + vec2(i, j);\n            vec2 uv_t = uv;\n #ifdef TILED\n              // could be simplified...\n              if (cell_t.x<0.0) {\n                  cell_t.x += cells;\n                  uv_t.x += 1.0;\n              } else if (cell_t.x>cells-1.0) {\n                  cell_t.x -= cells;\n                  uv_t.x -= 1.0;\n              }\n              \n              if (cell_t.y<0.0) {\n                  cell_t.y += cells;\n                  uv_t.y += 1.0;\n              } else if (cell_t.y>cells-1.0) {\n                  cell_t.y -= cells;\n                  uv_t.y -= 1.0;\n              }\n #endif\n            vec4 rnd_t = hash43(vec3(cell_t, float(iter)));\n            vec2 pos_t = (cell_t+rnd_t.xy)/cells;\n            float age_t = (iTime*speed + rnd_t.z);\n            float scale_t = rnd_t.w;\n            height += drip(uv_t, pos_t, age_t, scale_t, cells);\n          }\n        }\n    }\n    return height;\n}\n\nfloat heightmap(vec2 uv) {\n    float height = 0.0;\n #ifdef COMPLEX\n    height += drops(uv, 32.0);\n    height += drops(uv, 16.0);\n    height += drops(uv, 8.0);\n    height += drops(uv, 4.0);\n    height += drops(uv, 2.0);\n    height /= 8.0;\n #else\n    height += drops(uv, 8.0);\n    height += drops(uv, 4.0);\n    height /= 5.0;\n #endif\n    return height * intensity;\n}\n\nvec2 dudvmap(vec2 uv) {\n    const float eps = 0.01;\n    vec2 offset = vec2(eps, 0.0);\n    return vec2(\n        heightmap(uv+offset.xy) - heightmap(uv-offset.xy),\n        heightmap(uv+offset.yx) - heightmap(uv-offset.yx)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n #ifdef TILED\n    // Tile UVs 2x2 for demonstration\n    uv *= 2.0;\n    uv = fract(uv);\n #endif\n    \n    float height = heightmap(uv);\n\tvec2 dudv = dudvmap(uv);\n    vec3 normal = normalize( vec3(dudv, sqrt(max(1.0-dot(dudv,dudv),0.0))) );\n    \n    if (fragCoord.x < iResolution.x*0.33) {\n    \tfragColor = vec4(height*0.5+0.5);\n    } else if (fragCoord.x < iResolution.x*0.66) {\n        fragColor = vec4(normal*0.5+0.5, 1);\n    } else {    \n    \tfragColor = texture(iChannel0, uv + dudv*0.125);\n    }\n}\n","name":"Image","description":"","type":"image"}]}