{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"float sphere(vec3 ray, vec3 dir, vec3 center, float radius, vec3 rgb, inout vec3 col, inout vec3 nml, float dist)\n{\n\tvec3 rc = ray-center;\n\tfloat c = dot(rc, rc) - (radius*radius);\n\tfloat b = dot(dir, rc);\n\tfloat d = b*b - c;\n\tfloat t = -b - sqrt(abs(d));\n\tif (min(t,d) > 0.0 && t < dist) {\n\t\tnml = normalize(center - (ray+dir*t));\n\t\tcol = rgb*2.0;\n\t\treturn t;\n\t}\n\treturn dist;\n}\n\nvec3 background(float t, vec3 rd)\n{\n\tvec3 light = normalize(vec3(sin(t), 0.6, cos(t)));\n\tfloat sun = max(0.0, dot(rd, light));\n\tfloat sky = max(0.0, dot(rd, vec3(0.0, 1.0, 0.0)));\n\tfloat ground = max(0.0, -dot(rd, vec3(0.0, 1.0, 0.0)));\n\treturn \n\t\t(pow(sun, 256.0)+0.2*pow(sun, 2.0))*vec3(1.0, 1.6, 2.0) +\n\t\tpow(ground, 0.5)*vec3(0.6, 0.5, 0.4) +\n\t\tpow(sky, 1.0)*vec3(0.5, 0.6, 0.7);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-1.0 + 2.0*fragCoord.xy / iResolution.xy) * \n\t\tvec2(iResolution.x/iResolution.y, 1.0);\n\tvec3 ro = vec3(uv*8.0, -5.0);\n\tvec3 rd = normalize(vec3(uv*0.3, 1.0));\n\t// grid cell for uv\n\tvec2 tuv = floor(uv * 16.0);\n\tfloat dist = 1e5;\n\tvec3 nml;\n\tvec3 scol = vec3(1.0);\n\tfor (int k=0; k<3; k++) {\n\tfor (int i=0; i<3; i++) {\n\t\tfor (int j=0; j<3; j++) {\n\t\t\tvec2 off = vec2(float(i-1), float(j-1));\n\t\t\tvec2 tuvOff = tuv + off;\n\t\t\tvec4 tex = texture(iChannel0, tuvOff/32.0, -100.0);\n\t\t\tvec3 p = vec3(uv*8.0, -5.0) + normalize(vec3(tuvOff*0.3 / 16.0, 1.0))*16.0+float(k-1)*0.05 + 0.3*(tex.rgb-0.5);\n\t\t\tp.x += 0.05*sin(tex.r * 8.0 + iTime);\n\t\t\tp.y += 0.05*cos(tex.r * 8.0 + iTime);\n\t\t\tdist = sphere(ro, rd, p, 0.01+0.13*tex.b*(0.6+0.5*sin(float(k)+3.0*iTime+tex.g*8.0)), tex.rgb, scol, nml, dist);\n\t\t}\n\t}\n\t}\n\tvec3 bgCol = background(iTime, rd);\n\tif (dist < 1e5) {\n\t\trd = reflect(rd, nml);\n\t}\n\tvec3 col = background(iTime, rd) * vec3(0.9, 0.8, 1.0);\n\tfragColor = vec4( mix(bgCol, scol*col, step(dist, 1e5)), 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsBGDw","date":"1389267087","viewed":391,"name":"Color blobs","username":"kig","description":"Raytracing many spheres, try fullscreen.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","grid"],"hasliked":0,"parentid":"","parentname":""}}