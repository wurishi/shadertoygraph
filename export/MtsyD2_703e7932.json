{"ver":"0.1","info":{"id":"MtsyD2","date":"1506532827","viewed":104,"name":"radialGradient_jb","username":"JacobB","description":"temp","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["temp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//draw circle using smoothstep\n\nfloat gradient = 0.3;\n\nfloat circleRad = 0.1;\n\nvec2 circleCoord = vec2(0.5, 0.3);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n\n\n\nvec2 uv = fragCoord.xy / iResolution.xy;\n\nuv.y = uv.y * iResolution.y / iResolution.x; \n\nvec4 color1 = vec4(0.0, 0.0, 1.0, 1.0);\n  \n//i'm pretty sure there's a better way to do this, but can't remember.\ncolor1.g = smoothstep(length(circleCoord-uv),circleRad,0.2);\ncolor1.g = abs(step(length(circleCoord-uv),circleRad)-1.0)*color1.g;\n\nfragColor = color1;//mix (backgroundColor, color1, color1.a);\n\n}","name":"Image","description":"","type":"image"}]}