{"ver":"0.1","info":{"id":"NdSGRG","date":"1617540776","viewed":282,"name":"Julia Set Basic","username":"kithy","description":"Julia set,fractal,complex plane","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","juliaset","complexplane"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITR 100\n#define PI 3.1415926\n\nfloat julia(vec2 uv){\n\tint j;\n\tfor(int i=0;i<ITR;i++){\n\t\tj++;\n\t\tvec2 c=vec2(-0.345,0.654);\n\t\tvec2 d=vec2(iTime*0.005,0.0);\n\t\tuv=vec2(uv.x*uv.x-uv.y*uv.y,2.0*uv.x*uv.y)+c+d;\n\t\tif(length(uv)>float(ITR)){\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn float(j)/float(ITR);\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n\tuv*=abs(sin(iTime*0.2));\n\tfloat f=julia(uv);\n\n\tfragColor=vec4(vec3(f),1.0);\n}","name":"Image","description":"","type":"image"}]}