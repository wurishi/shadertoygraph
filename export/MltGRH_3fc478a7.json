{"ver":"0.1","info":{"id":"MltGRH","date":"1468146279","viewed":262,"name":"[SH16A] just rtrace dat spheres!","username":"pyBlob","description":"based on: https://www.shadertoy.com/view/Xl33R4\nplane drop shadow, lighting: https://www.shadertoy.com/view/Xlc3zn\n\nFINALLY DIT IT: raytracer in <777!\n\nremove ray marching ... done\nremove depth test ... done\nremove shadow call ... done\nremove sky ... done","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raytrace","challenge","sizecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define U normalize\n#define D vec3\n\n#define L(A) A A A A A \n//#define trace(A) A o=C;d=E;P=1.; A\n\n/*\n#define M(A,B)\n\tif (A>0.) {\n\t\tt = o+(A)*d;\n\t\tD c = mod(t,2.) - 1.;\n\t\tB\n\t}\n*/\n#define M(A,B) if(A>0.){t = o+(A)*d;D c = mod(t,2.)-1.;B}\n\nvoid mainImage( out vec4 f, vec2 e )\n{\n\tD V = D(0,1,0),\n\t  C = D(.851, 2, -2.8767),\n\t  o = U(-.2 * V - C),\n\t  d = U(cross(o,V)),\n\t  t = iResolution,\n      F = V,\n      n = V,\n\t  L = U( D(-.6, .7, -.5) );\n    \n\tD E = d = U(mat3(d,cross(d,o),o) * D(e - .5*t.xy, t.y));\n    o = C;\n    \n    float z, b;\n    \n    int s = 1;\n    \n    M(\n        -o.y/d.y,\n        F =  D(\n        \tc.x * c.z > .0 ?\n        \t.8 :\n        \ttexture( iChannel0, .1 * t.xz ).x\n        )\n        * smoothstep( .0, .5, length((t-clamp(ceil(t-.5),-1.,1.)).xz) );\n        \n        o=t;\n        d=L;\n\t);\n    \n    for (int P=0 ; P<2 ; P++ )\n    {\n    \tD q, Q = D(-2,0,2);\n        L(\n            L(\n                z = 12. + 1.*Q.z + 5.*Q.x;\n                Q.y = .4 - .15*mod(z,2.);\n                q=o-Q;\n                b = dot(q, d);\n                M(\n                    -b - sqrt( b*b - dot(q, q) + Q.y*Q.y ),\n                    s = P;\n                    if(P>0)\n                    {\n                    \tF = V + V + D( 3, -8, 6 ) * floor( z*.5 ) / 50.;\n                    \tn = U(t-Q);\n                    }\n                );\n                Q.x++;\n            )\n            Q-=D(5,0,1);\n        )\n        o=C, d=E;\n    }\n    \n    f.yxz = sqrt(\n        // Shadow and N dot L term\n        D(s) * max(0., dot( n, L )) *\n             \t( \n        \t\t\t// directional\n                    F * D(.51,.6,.33) \n                    // specular\n                  \t+ pow( max( 0., dot( reflect( E, n ), L ) ), 16. ) \n                )\n        // Ambient / sky\n        + F * ++n.y * D( 7, 5, 10 ) / 80. );          \n}\n","name":"Image","description":"","type":"image"}]}