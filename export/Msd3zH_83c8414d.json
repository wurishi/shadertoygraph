{"ver":"0.1","info":{"id":"Msd3zH","date":"1448228338","viewed":313,"name":"Inverted circle grid","username":"RenoM","description":"right screen is left screen after circle inversion of origin 0,0\nnow i just wait for fabrice to optimize my code ;)","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["circleinversionfractal2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define TAU 6.283185\n#define A(a) if(a>.25)a=.5-a;\n#define B(a,b) sqrt(max(.0,1.-a*length(uv-vec2(b))))\n\nvec2 rot(vec2 uv,float theta)\n{\n    vec2 t=sin(vec2(1.57, 0) + theta);\n    return uv*mat2(t,-t.y,t.x);\n}\n\nvec3 image(vec2 uv,bool inv,out float d)\n{\n    uv.x*=iResolution.x/iResolution.y;\n    d=length(uv);\n    uv/=4.5*sin(iTime)+5.5;\n    uv=rot(uv,mod(iTime,TAU));\n    if(inv)\n        uv*=pow(.4/length(uv),2.);\n    uv=mod(abs(uv),.5);\n    A(uv.x) A(uv.y)\n    return vec3(B(4.,.0)+B(1./(sqrt(0.125)-.25),.25));\n}\n\nvoid mainImage(out vec4 C,in vec2 U)\n{\n    vec2 uv=2.*U/iResolution.xy-1.;\n    float d;\n    // split screen\n    C.xyz=uv.x<.0?image(2.*uv+vec2(1,0),false,d):image(uv-vec2(.5,0),true,d)*min(d,1.);\n    // full screen\n    \t// before inversion\n    //C.xyz=image(2.*uv,false,d);\n    \t// after inversion\n    //C.xyz=image(uv,true,d)*min(d,1.);\n}","name":"Image","description":"","type":"image"}]}