{"ver":"0.1","info":{"id":"ssdGzX","date":"1630409855","viewed":190,"name":"procedural walk","username":"madware","description":"Simple walking","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["procedural","animation","walk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float movement_speed = 4.7;\n\nconst vec2 legs_origin = vec2(0.885, 0.06);\nconst float legs_radius = 0.068;\nconst float legs_height_clamp = 0.01;\n\nconst vec2 pelvis_origin_initial = vec2(0.7105, 0.637);\nconst float upper_knee_length = 0.32;\nconst float lower_knee_length = 0.32;\n\nconst float torso_height = 0.35;\nconst float neck_height = 0.13;\nconst float shoulder_length = 0.22;\nconst float forearm_length = 0.21;\n\nfloat circle(in vec2 uv, in vec2 p, in float rad)\n{\n    float linear_eps = 1.0 / iResolution.x;\n    vec2 puv = uv - p;\n    return smoothstep(rad + linear_eps, rad - linear_eps, length(puv));\n}\n\nfloat sd_segment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat line(in vec2 uv, in vec2 p1, in vec2 p2, in float rad)\n{\n    float linear_eps = 1.0 / iResolution.x;\n    return smoothstep(rad + linear_eps, rad - linear_eps, sd_segment(uv, p1, p2));\n}\n\nvec2 rotate(in vec2 v, in float theta)\n{\n    vec2 sincos = vec2(sin(theta), cos(theta));\n    mat2x2 rot = mat2x2(\n        sincos.y, sincos.x,\n        -sincos.x, sincos.y\n    );\n    return rot * v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n    \n    vec3 col = vec3(0.5, 0.5, 0.5);\n    \n    float l1 = lower_knee_length;\n    float l2 = upper_knee_length;\n    \n    vec2 k2 = vec2(l1*l1 - l2*l2);\n    \n    vec2 sincos = vec2(\n        sin(iTime * movement_speed), \n        cos(iTime * movement_speed)\n    );\n    vec2 sincos2 = vec2(\n        sin(iTime * movement_speed * 2.0),\n        cos(iTime * movement_speed * 2.0)\n    );\n    \n    vec2 fwd_v = normalize(vec2(-0.47, -1.0)) * (l1 + l2);\n    \n    \n    float shoulder_angle_left = -sincos.x / 7.0;\n    float forearm_angle_left = shoulder_angle_left + shoulder_angle_left;\n    float shoulder_angle_right = sincos.x / 7.0;\n    float forearm_angle_right = shoulder_angle_right + shoulder_angle_right;\n    \n    vec2 pelvis_origin = pelvis_origin_initial;\n    \n    vec2 v_left = legs_origin + sincos.xy * legs_radius;\n    vec2 v_right = legs_origin - sincos.xy * legs_radius;\n    \n    v_left = mix(v_left, pelvis_origin + fwd_v, (1.0 - sincos.x) / 2.0);\n    v_left.y = max(legs_height_clamp, v_left.y);\n    \n    \n    v_right = mix(v_right, pelvis_origin + fwd_v, (sincos.x + 1.0) / 2.0);\n    v_right.y = max(legs_height_clamp, v_right.y);\n    \n    pelvis_origin += \n        vec2(\n            sincos2.x * 0.001, \n            sincos2.y * 0.008\n        );\n    \n    vec2 dir_left = v_left - pelvis_origin;\n    vec2 dir_right = v_right - pelvis_origin;\n    \n    vec2 k1 = vec2(\n        length(dir_left),\n        length(dir_right)\n    );\n    \n    dir_left = normalize(dir_left);\n    dir_right = normalize(dir_right);\n    \n    \n    if (k1.x > l1 + l2) {\n        pelvis_origin = v_left - dir_left * (l1 + l1);\n        k1.x = l1 + l1;\n        k1.y = length(v_right - pelvis_origin);\n    }\n    \n    if (k1.y > l1 + l2) {\n        pelvis_origin = v_right - dir_right * (l1 + l1);\n        k1.y = l1 + l1;\n        k1.x = length(v_left - pelvis_origin);\n    }\n    \n    vec2 torso = pelvis_origin + vec2(0.0, torso_height);\n \n    vec2 neck = torso \n        + vec2(0.0, neck_height)\n        + vec2(\n            sincos2.x * 0.001, \n            sincos2.y * 0.001\n        );\n        \n    vec2 elbow_left = torso +\n        rotate(vec2(0.0, -shoulder_length), shoulder_angle_left);\n    vec2 palm_left = elbow_left +\n        rotate(vec2(0.0, -forearm_length), forearm_angle_left);\n    vec2 elbow_right = torso +\n        rotate(vec2(0.0, -shoulder_length), shoulder_angle_right);\n    vec2 palm_right = elbow_right +\n        rotate(vec2(0.0, -forearm_length), forearm_angle_right);\n  \n    vec2 d = (k1*k1 - k2) / (2.0 * k1);\n    vec2 cos_a = d / l2;\n    vec2 a = acos(cos_a);\n    \n    mat2x2 rot_left = mat2x2(\n        cos_a.x, sin(a.x),\n        -sin(a.x), cos_a.x\n    );\n    mat2x2 rot_right = mat2x2(\n        cos_a.y, sin(a.y),\n        -sin(a.y), cos_a.y\n    );\n    \n    vec2 knee_left = (rot_left * dir_left) * l2 + pelvis_origin;\n    vec2 knee_right = (rot_right * dir_right) * l2 + pelvis_origin;\n    \n    neck /= 2.2;\n    torso /= 2.2;\n    pelvis_origin /= 2.2;\n    knee_left /= 2.2;\n    knee_right /= 2.2;\n    v_left /= 2.2;\n    v_right /= 2.2;\n    elbow_left /= 2.2;\n    elbow_right /= 2.2;\n    palm_left /= 2.2;\n    palm_right /= 2.2;\n    \n    col = mix(\n        col, vec3(0.8, 0.8, 0.8), \n        line(uv, torso, neck, 0.002)\n    );\n    \n    col = mix(\n        col, vec3(0.8, 0.8, 0.8), \n        line(uv, pelvis_origin, torso, 0.002)\n    );\n    \n    col = mix(\n        col, vec3(0.8, 0.8, 0.8), \n        line(uv, pelvis_origin, knee_left, 0.002)\n    );\n    col = mix(\n        col, vec3(0.8, 0.8, 0.8), \n        line(uv, knee_left, v_left, 0.002)\n    );\n    \n    col = mix(\n        col, vec3(0.8, 0.8, 0.8), \n        line(uv, pelvis_origin, knee_right, 0.002)\n    );\n    col = mix(\n        col, vec3(0.8, 0.8, 0.8), \n        line(uv, knee_right, v_right, 0.002)\n    );\n    \n    col = mix(\n        col, vec3(0.8, 0.8, 0.8), \n        line(uv, torso, elbow_left, 0.002)\n    );\n    col = mix(\n        col, vec3(0.8, 0.8, 0.8), \n        line(uv, elbow_left, palm_left, 0.002)\n    );\n    col = mix(\n        col, vec3(0.8, 0.8, 0.8), \n        line(uv, torso, elbow_right, 0.002)\n    );\n    col = mix(\n        col, vec3(0.8, 0.8, 0.8), \n        line(uv, elbow_right, palm_right, 0.002)\n    );\n    \n    col = mix(col, vec3(1.0, 1.0, 1.0), circle(uv, neck, 0.04));\n    \n    col = mix(col, vec3(1.0, 1.0, 1.0), circle(uv, pelvis_origin, 0.01));\n    col = mix(col, vec3(1.0, 1.0, 1.0), circle(uv, torso, 0.01));\n    \n    col = mix(col, vec3(0.88, 0.4, 0.47), circle(uv, knee_left, 0.005));\n    col = mix(col, vec3(0.47, 0.4, 0.88), circle(uv, knee_right, 0.005));\n    \n    col = mix(col, vec3(0.88, 0.4, 0.47), circle(uv, elbow_left, 0.005));\n    col = mix(col, vec3(0.47, 0.4, 0.88), circle(uv, elbow_right, 0.005));\n    \n    col = mix(col, vec3(0.88, 0.4, 0.47), circle(uv, palm_left, 0.005));\n    col = mix(col, vec3(0.47, 0.4, 0.88), circle(uv, palm_right, 0.005));\n    \n    col = mix(col, vec3(0.88, 0.4, 0.47), circle(uv, v_left, 0.005));\n    col = mix(col, vec3(0.47, 0.4, 0.88), circle(uv, v_right, 0.005));\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}