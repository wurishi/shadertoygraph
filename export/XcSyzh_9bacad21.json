{"ver":"0.1","info":{"id":"XcSyzh","date":"1721877699","viewed":31,"name":"HW8_Noise lava","username":"EurekaChen","description":"Noise lava","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pow3(vec3 p, float m)\n{\n    return vec3(pow(p.x, m), pow(p.y, m), pow(p.z, m));\n}\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = (2.0*fragCoord-iResolution.xy) / iResolution.y ;\n    uv = uv *rotate2d(sin(iTime / 1.5) / 4.0) * 2. - vec2(0., 1.8);\n    vec3 col = vec3(0.7 + 0.2 * uv.y, 0.4 + 0.1 * sin(uv.x / 3.) * sin(iTime) + 0.2 * uv.y, 0.0);\n\n    for(int i = 0; i < 3; i++) \n\t\tcol += texture(iChannel0, uv * rotate2d(3. / exp(uv.y + 4.) * noise(uv + iTime ))+ float(i)).rgb;\n\n    fragColor = vec4(pow3(col * 0.6, 5.0), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//noise from iq\n//ref: https://www.shadertoy.com/view/XdXGW8\n\nvec2 grad( ivec2 z )  // replace this anything that returns a random vector\n{\n    // 2D to 1D  (feel free to replace by some other)\n    int n = z.x+z.y*11111;\n\n    // Hugo Elias hash (feel free to replace by another one)\n    n = (n<<13)^n;\n    n = (n*(n*n*15731+789221)+1376312589)>>16;\n\n    // Perlin style vectors\n    n &= 7;\n    vec2 gr = vec2(n&1,n>>1)*2.0-1.0;\n    return ( n>=6 ) ? vec2(0.0,gr.x) : \n           ( n>=4 ) ? vec2(gr.x,0.0) :\n                              gr;                            \n}\n\nfloat noise( in vec2 p )\n{\n    ivec2 i = ivec2(floor( p ));\n     vec2 f =       fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f); // feel free to replace by a quintic smoothstep instead\n\n    return mix( mix( dot( grad( i+ivec2(0,0) ), f-vec2(0.0,0.0) ), \n                     dot( grad( i+ivec2(1,0) ), f-vec2(1.0,0.0) ), u.x),\n                mix( dot( grad( i+ivec2(0,1) ), f-vec2(0.0,1.0) ), \n                     dot( grad( i+ivec2(1,1) ), f-vec2(1.0,1.0) ), u.x), u.y);\n}","name":"Common","description":"","type":"common"}]}