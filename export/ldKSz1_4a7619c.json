{"ver":"0.1","info":{"id":"ldKSz1","date":"1463000437","viewed":185,"name":"randomized tiles","username":"jmickle","description":"To randomize a set of tiles on a material to break up repetition\n\ni'm still very new to shaders so probably some glaring issues in here. hash11 function from https://www.shadertoy.com/view/4djSRW","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["random","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float sep = 8.;\nconst float tileSizeX = 1./sep;\nconst float tileSizeY = 1./sep;\nconst int basic = 0;\nconst float seed = 1.12;\n\nfloat hash11(float p)\n{\n    p += seed;\n\tvec3 p3  = fract(vec3(p) * .1031);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec4 getTileUV( vec2 tile, vec2 pos )\n{\n    tile = floor(tile);\n    pos.x = mod(pos.x,tileSizeX) + (tile.x * tileSizeX);\n    pos.y = mod(pos.y,tileSizeY) + (tile.y * tileSizeY);\n    return texture(iChannel0, pos);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    if (basic == 1) {\n    \tfragColor = texture(iChannel1, uv);\n    } else {\n        float a = hash11(floor((uv.x) * sep)) * sep;\n        float b = hash11(floor((uv.y) * sep)) * sep;\n\t\tfragColor = getTileUV( vec2(a,b) ,uv);\n    }\n}","name":"Image","description":"","type":"image"}]}