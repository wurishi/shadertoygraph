{"ver":"0.1","info":{"id":"Xcs3zS","date":"1703196000","viewed":36,"name":"that awful pixel filter","username":"riversonmosier","description":"that crap pixel smoothing filter like those emulators got\n\nthanks to the vs ourple guy V3.1 update for inspiring this: https://www.youtube.com/watch?v=VqRcwmZ6434\nspeakin of, flixel-compatible version: https://file.garden/ZFsDwShvAk-Bo1L1/HD.frag","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pixel","smooth","smoothing","emulator","retros"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int poop = 1; //range of pixels to check (aka HDness\nfloat kidnapchildrenandeatthem = 0.01; //threshold of how surrounding colors have to change the current one\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pixelsize = 1./iResolution.xy;\n\n    // Time varying pixel color? WRONG. iChannel0\n    vec4 col = texture(iChannel0,uv);\n\n    const int size = (1+(poop*2))*(1+(poop*2)); //grid of pixels to sample (poop=1 is 3x3, poop=2 is 5x5, poop=3 is 7x7, and so on and so on and so forth and so forth.)\n    vec3 colors[size]; //the colors in question\n\n    int i = 0;  // The index for the array\n    for(int x = -poop; x <= poop; x++) {\n        for(int y = -poop; y <= poop; y++) {\n            vec2 point = vec2(x,y) * pixelsize;\n            vec4 tex = texture(iChannel0, uv+point);\n            colors[i] = tex.rgb;  // store the color in the array\n            i++;\n        }\n    }\n\n    vec3 mostCommonColor = colors[0];  // most common color\n    int maxCount = 0;   //how common it is\n\n    // loop over the colors\n    for(int i = 0; i < size; i++) {\n        int count = 0;  //how common the current color is\n\n        //loop over list of colors once more to count current color\n        for(int j = 0; j < size; j++) {\n            if(length(colors[i] - colors[j]) < kidnapchildrenandeatthem) {  //if they're similar enough\n                count++;\n            }\n        }\n\n        // If the current color is more common than the most common color\n        if(count > maxCount) {\n            maxCount = count;\n            mostCommonColor = colors[i];\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(mostCommonColor, 1.);\n}","name":"Image","description":"","type":"image"}]}