{"ver":"0.1","info":{"id":"WtB3W1","date":"1559277035","viewed":149,"name":"Bouncy Spring ","username":"mosaic","description":"Simple Plot function borrowed from https://thebookofshaders.com/05/\n\n\nBonus: stretch the spring with the mouse :)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat plot(vec2 st, float b){\n  return  smoothstep( b-0.02, b, st.y) -\n          smoothstep( b, b+0.02, st.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n       \n    // Normalized pixel coordinates (from 0 to 1)\n    \n    vec2 uv = fragCoord/iResolution.x;\n    vec4 m = iMouse / iResolution.xxxx;\n \n\tfloat pct = 0.2;\n    float y = uv.x;\n    \n    if (m.z > 0.){\n       pct += plot(uv,((sin(y*30.*sin(1.-m.x))/10.)+0.3))+0.3*uv.y*2.;\n    }  else     {\n       pct += plot(uv,((sin(y*30.*sin(iTime))/10.)+0.3))+0.3*uv.y*2.;\n         \n     }\n    \n    \n    // Output to screen\n    fragColor = vec4(pct+.0,pct+.0,pct+.6,1.0)*vec4(0.95,0.5,0.,0.)+vec4(0.2,0.2,0.5,0.);\n}","name":"Image","description":"","type":"image"}]}