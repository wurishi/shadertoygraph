{"ver":"0.1","info":{"id":"7sBGRh","date":"1616921117","viewed":66,"name":"regularSimplexNoise","username":"lonelywaiting","description":"simplex noise","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// result interval: -1 ~ 1\nvec2 gradientHash(in vec2 p)\n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    p = p*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( p.x*p.y*(p.x+p.y)) );\n}\n\n// result interval: -1 ~ 1\nfloat SimplexNoise(in vec2 pos)\n{\n    float skewFactor = (pos.x + pos.y) * (sqrt(3.0) - 1.0) / 2.0;\n    vec2 simplexPos = vec2(pos.x + skewFactor, pos.y + skewFactor);\n    \n    vec2 floor_pos = floor(simplexPos);\n    vec2 frac_pos  = fract(simplexPos);\n    \n    vec2 p = vec2(0.0, 0.0);\n    \n    if(frac_pos.x >= frac_pos.y)\n    {\n        p = vec2(1.0, 0.0);\n    }\n    else\n    {\n        p = vec2(0.0, 1.0);\n    }\n    \n    vec2 g0 = gradientHash(floor_pos);\n    vec2 g1 = gradientHash(floor_pos + p);\n    vec2 g2 = gradientHash(floor_pos + vec2(1.0, 1.0));\n    \n    float G = (3.0 - sqrt(3.0)) / 6.0;\n    vec2 d0 = pos - floor_pos + (floor_pos.x + floor_pos.y) * G;\n    vec2 d1 = d0 - p + G;\n    vec2 d2 = d0 - 1.0 + 2.0 * G;\n    \n    float d = pow(max(0.0, 0.5 - dot(d0, d0)), 4.0) * dot(d0, g0);\n    d += pow(max(0.0, 0.5 - dot(d1, d1)), 4.0) * dot(d1, g1);\n    d += pow(max(0.0, 0.5 - dot(d2, d2)), 4.0) * dot(d2, g2);\n    \n    // scale interval to -1 ~ 1\n    return 70.0 * d;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord.xy / iResolution.y;\n    // scale interval to 0~1\n    float n = 0.5 + 0.5 * SimplexNoise(8.0 * pos);\n    fragColor = vec4(n,n,n,1.0);\n}","name":"Image","description":"","type":"image"}]}