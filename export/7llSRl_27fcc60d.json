{"ver":"0.1","info":{"id":"7llSRl","date":"1626357234","viewed":60,"name":"SED4906 - Mandelbrot Set","username":"sed4906","description":"Renders the Mandelbrot set.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 mandelbrot( vec2 c )\n{\n    int tries = 0;\n    vec2 z = vec2(0.0, 0.0);\n    float i;\n    for (i = 0.0; i < 1.0; i += 0.005) {\n        z = vec2(\n            z.x * z.x - z.y * z.y + c.x,\n            z.y * z.x + z.x * z.y + c.y\n        );\n\n        if (length(z) > 4.0) {\n            break;\n        }\n    }\n\n    return vec3(i);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col =  mandelbrot(vec2((uv.x-0.5)*4.0,((uv.y-0.5)/ar)*4.0));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}