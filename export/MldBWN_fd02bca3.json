{"ver":"0.1","info":{"id":"MldBWN","date":"1539716874","viewed":410,"name":"Ascii Ripple","username":"Toster","description":"Water ripple simulation in asciiart.\n\nuse mouse","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["simulation","water","ascii","wodawgrach"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat character(float n, vec2 p)\n{\n\tp = floor(p*vec2(4.0, -4.0) + 2.5);\n\tif (clamp(p.x, 0.0, 4.0) == p.x && clamp(p.y, 0.0, 4.0) == p.y)\n\t{\n\t\tif (int(mod(n/exp2(p.x + 5.0*p.y), 2.0)) == 1) return 1.0;\n\t}\t\n\treturn 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 q = fragCoord.xy/(iResolution.xy);\n\n    vec4 c = vec4(0.,0.,0.,1.);\n    \n    fragColor = vec4(texture(iChannel0, q).r,texture(iChannel0, q).r,texture(iChannel0, q).r,1.);\n\t\n    //Making it Ascii\n    vec3 col = vec3(fragColor.x);;\n    vec2 uv = fragCoord.xy;\n    float gray = col.x;\n\t\n\tfloat n =  4096.0;             // .\n\tif (gray > 0.2) n = 65600.0;    // :\n\tif (gray > 0.3) n = 332772.0;   // *\n\tif (gray > 0.4) n = 15255086.0; // o \n\tif (gray > 0.5) n = 23385164.0; // &\n\tif (gray > 0.6) n = 15252014.0; // 8\n\tif (gray > 0.7) n = 13199452.0; // @\n\tif (gray > 0.8) n = 11512810.0; // #\n\t\n\tvec2 p = mod(uv/4.0, 2.0) - vec2(1.0);\n\tif (iMouse.z > 0.5)\tcol = gray*vec3(character(n, p));\n\telse col = col*character(n, p);\n\t\n\tfragColor = vec4(0.,col.x,0., 1.0);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define depth 35.\n#define velPropagation 5.5\n#define dampening .98\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 pixelToUV = vec2(velPropagation)/iResolution.xy;\n   vec3 e = vec3(pixelToUV,0.);\n   vec2 q = fragCoord.xy/iResolution.xy;\n   \n   vec4 c = texture(iChannel0, q);\n   \n   float p11 = c.y;\n   \n   //getting adjacent pixels\n   float p10 = texture(iChannel0, q-e.zy).x;\n   float p01 = texture(iChannel0, q-e.xz).x;\n   float p21 = texture(iChannel0, q+e.xz).x;\n   float p12 = texture(iChannel0, q+e.zy).x;\n   \n   float d = ((p10 + p01 + p21 + p12 - 2.) - (p11-.5)*2.);\n   \n    if (iMouse.z > 0.) \n   {\n      // Mouse interaction:\n      d+= 1.;\n      d *= smoothstep(.1,depth,length(iMouse.xy - fragCoord.xy));\n      d-= 1.;\n \n   }\n   d *= dampening; \n    \n   d = d*.5 + .5;\n   \n   // Put previous state as \"y\":\n   fragColor = vec4(d, c.x, 0, 0);\n    \n    // clear the buffer at iFrame < 2\n    if(iFrame < 2){\n        fragColor = vec4(.5);\n   }\n}","name":"Buffer A","description":"","type":"buffer"}]}