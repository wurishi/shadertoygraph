{"ver":"0.1","info":{"id":"lcVGRD","date":"1712506596","viewed":61,"name":"Green circle gradient","username":"AgateDragon","description":"Green circle gradient\nhttps://agatedragon.blog/2024/04/07/shadertoy-circle-gradient/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf","circle","gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Gradient colours\nconst vec3 COL1 = vec3(0.06, 0.4, 0.07);\nconst vec3 COL2 = vec3(0.68, 0.85, 0.68);\n\n// Edge smoothing\nconst float SMOOTHING = 128.0;\n\nfloat Circle(vec2 pos, float radius)\n{\n    return length(pos) - radius;\n}\n\nvoid mainImage(out vec4 fragColour, in vec2 fragCoord)\n{\n    // Calculate aspect ratio\n    float aspect = 1.0 / min(iResolution.x, iResolution.y);\n    \n    // Aspect ratio corrected UV coordinates\n    vec2 uv = fragCoord * aspect;\n    \n    // Position\n    vec2 pos = uv;\n    pos -= aspect * iResolution.xy / 2.0;\n    \n    // Animate the circle radius\n    float t = sin(iTime) * 0.5 + 0.5;\n    float radius = mix(0.0, 0.6, t);\n    \n    // Create circle\n    float c = Circle(pos, radius);\n    \n    // Edge smoothing\n    float s = SMOOTHING * aspect;\n    c = smoothstep(s, -s, c);\n    \n    // Mix\n    fragColour.rgb = mix(COL1, COL2, c) * c;\n    \n    // Alpha\n    fragColour.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}