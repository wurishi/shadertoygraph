{"ver":"0.1","info":{"id":"fllBzH","date":"1650545491","viewed":171,"name":"Water rippling","username":"Pasindut","description":"Water ripple with refraction and diffuse shading","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["water","ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\n\nvec3 lightDirection = normalize(vec3(0.5, 0.5, 1.0));\nfloat nAir = 1.003;\nfloat nWater = 1.333;\nvec3 up = vec3(0.0, 0.0, 1.0);\n\nvec4 water(float value) {\n    vec3 col = vec3(0.8, 0.8, 1.0) * (0.1 * value);\n\n    return vec4(col, 0.3);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 bb = (fragCoord - (iResolution.xy/2.0)) / iResolution.y;\n    \n    float lambda1 = 7.0;\n    \n    float temp = lambda1 * (pow(bb.x, 2.0) + pow(bb.y, 2.0)) - 1.5 * iTime;\n    \n    float f = cos(temp) + 5.0;\n    vec3 gx = vec3(1.0, 0.0, -sin(temp) * 2.0 * lambda1 * bb.x);\n    vec3 gy = vec3(0.0, 1.0, -sin(temp) * 2.0 * lambda1 * bb.y);\n    \n    vec3 nVec = normalize(cross(gx, gy));\n    if (dot(nVec, up) < 0.0) {\n        nVec = -1.0 * nVec;\n    }\n \n    \n    float diffuseCoeff = max(dot(nVec, lightDirection), 0.0);\n    \n    \n    float alpha = acos(dot(up, nVec));\n    float beta = asin(nAir * sin(alpha) / nWater);\n    float gamma = alpha - beta;\n    float dd = f * tan(gamma);\n    float m = f * tan(alpha);\n    vec2 nHorizontal = -nVec.xy;\n    vec2 coords = bb - dd * nHorizontal / m;\n\n    vec4 waterColor = water(diffuseCoeff);\n    \n    float ss = 0.0;\n    if (f > 5.0) {\n        ss = 1.0;\n    }\n    \n    vec4 some = texture(iChannel0, coords);\n    \n    vec3 other = vec3(diffuseCoeff);\n\n    // Output to screen\n    fragColor = some + waterColor;\n    // fragColor = vec4(other, 1.0);\n}","name":"Image","description":"","type":"image"}]}