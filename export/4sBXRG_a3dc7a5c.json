{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const float ROTATIONS_PER_SECOND = 1.0/60.0; //1 minute\n\n\nfloat toRadians(float degrees) {\n    return degrees*(3.1415/180.0);\n}\n\nbool isHandleFragment(vec2 frag){\n    vec2 middle = vec2(iResolution.x/2.0, iResolution.y/2.0);\n    float x = -cos(toRadians(mod(iTime, 360.0)) * 360.0 * ROTATIONS_PER_SECOND);\n    float y = sin(toRadians(mod(iTime, 360.0)) * 360.0 * ROTATIONS_PER_SECOND);\n    vec2 clockHand = vec2(x, y);\n    \n    float handleAngleDiff = dot(clockHand, middle - vec2(frag.x, frag.y));\n    bool angleOK = handleAngleDiff < 1.0 && handleAngleDiff > -1.0;\n    \n    bool correctSideOfHandle = //Can only handle 60 second clock\n        sign((frag - middle).x) == sign(30.0 - mod(iTime,60.0));\n    \t//add y check to fix glitch on 0 and 30 seconds\n    \n    return angleOK && correctSideOfHandle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    if(isHandleFragment(vec2(fragCoord))){\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        return;\n    }\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sBXRG","date":"1412972153","viewed":178,"name":"Simple clock","username":"Waterflames","description":"Simple hand based 60 second clock.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","time","clock"],"hasliked":0,"parentid":"","parentname":""}}