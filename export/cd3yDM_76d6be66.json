{"ver":"0.1","info":{"id":"cd3yDM","date":"1695106667","viewed":40,"name":"onopko music wave","username":"onopko","description":"music wave","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave","music","line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n     \n    int tx = int(uv.x*512.0);   \n    float wave = texelFetch( iChannel0, ivec2(tx,1), 0 ).x;\n    \n       uv.x += (iTime / 10. ) ;\n       uv.y += sin(uv.x * 10.) / 10. * (cos( wave ) / sin( wave ));\n       float line = smoothstep(0.5, 0.5, uv.y) - smoothstep(0.51, 0.52, uv.y);\n    // Time varying pixel color\n   \n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col* line,1.0);\n}","name":"Image","description":"","type":"image"}]}