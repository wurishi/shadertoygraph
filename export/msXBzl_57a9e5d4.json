{"ver":"0.1","info":{"id":"msXBzl","date":"1725449642","viewed":22,"name":"3:shader","username":"bigphoob","description":"shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalization...\n    vec2 uv = fragCoord / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Perceived position of the effect.\n    float position = iTime * 4.0;\n    \n    // Colors for different elements within the shader.\n    vec4 orbCol = vec4(uv.y + 0.8, 0.0, 0.0, 1.0);\n    vec4 sineCol = vec4(0.0, 0.5, uv.x, 1.0);\n    vec4 sineCol2 = vec4(0.0, -uv.x + 0.5, 0.0, 1.0);\n    vec4 defaultCol = vec4(0.0, -uv.x - 0.6, uv.x - 0.6, 1.0);\n    vec4 col = defaultCol;\n    \n    // Midulation for width and speed of the sine waves.\n    float sineModulation = sin(iTime) * 4.0;\n    float widthModulation = abs(sin(iTime) * 0.02) + 0.03;\n    \n    // Create one sine wave.\n    if(uv.y < (sin((uv.x * sineModulation) + position) / 4.0) + widthModulation) col = sineCol;\n    if(uv.y < (sin((uv.x * sineModulation) + position) / 4.0) - widthModulation) col = defaultCol;\n    \n    // Create a second sine wave displaced from the original.\n    if((col != sineCol)) {\n    \n        if(uv.y < (sin((uv.x * sineModulation - PI) + position) / 4.0) + widthModulation) col = sineCol2;\n        if(uv.y < (sin((uv.x * sineModulation - PI) + position) / 4.0) - widthModulation) col = defaultCol;\n    };\n    \n    // Radius of the circle.\n    float radius = (sin(iTime + 3.14159) / 20.0) + 0.16;\n    \n    // Boolean used to determine if circle should be created at given coord.\n    bool makeCircle = false;\n    if(length(uv) < radius) makeCircle = true;\n    \n    // Modulation out of phase with the sine waves which shifts the layer of the created circle.\n    float layer = cos(position);\n    \n    if(layer < 0.0) {\n    \n        // Circle is created on top of everything else in the shader.\n        if(makeCircle) col = orbCol;\n    }\n    else {\n    \n        // Circle is created if the coord is not part of the sine waves.\n        if(makeCircle && (col != sineCol) && (col != sineCol2)) col = orbCol;\n    };\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}