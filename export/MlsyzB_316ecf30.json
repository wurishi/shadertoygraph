{"ver":"0.1","info":{"id":"MlsyzB","date":"1505380602","viewed":670,"name":"Rippling Distortion","username":"ackleyrc","description":"Shader to create a rippling distortion effect. Try uncommenting the extra distort statements -- 2 & 3 I think are especially nice.","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["2d","waves","distortion","ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ----- math constants -----\nconst float PI = 3.14159265359;\nconst float TAU = 6.28318530718;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    \n    vec4 color = texture(iChannel0, uv + 0.5);\n    \n    uv.x *= iResolution.x/iResolution.y;\n    float d = length(uv);\n    uv.x *= iResolution.y/iResolution.x;\n    \n    float speed = 0.25; // + (iTime * 0.02); // womp-womp\n    float radius = speed * iTime;\n    float thickness = 0.1; // + (iTime * 0.02); // womp-womp\n    \n    float blend = smoothstep(radius-thickness, radius-thickness-0.05, d);\n    float distort = cos(((d-(radius-thickness))/thickness)*(PI/2.0));\n    \n    // Try adding any of these for some extra flavor\n    // distort /= cos(distort); \t\t\t// 1\n    // distort /= distort * cos(distort);\t// 2\n    // distort /= sin(distort);\t\t\t\t// 3\n    // distort /= distort * sin(distort);\t// 4\n    // distort += distort;\t\t\t\t\t// 5\n    \n    color = mix(color, texture(iChannel0, (uv * distort) + 0.5), blend);\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}