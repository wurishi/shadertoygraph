{"ver":"0.1","info":{"id":"WlsyDr","date":"1591843564","viewed":64,"name":"Inverting colors","username":"disambiguator","description":".","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["inverting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.141592;\n#define R iResolution.xy\nconst float w = 0.2;\n\nfloat circ(vec2 pos, vec2 midpoint) {\n  return smoothstep(.4-1./R.y, .4+1./R.y, length(pos - midpoint));\n}\n\nfloat striping(vec2 pos) {\n    return smoothstep(-1./R.y, 1./R.y, abs(mod(pos.x + pos.y,w)-w/2.)-w/4.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 pos = ( 2.* fragCoord - iResolution.xy ) /iResolution.y;\n    float c1 = circ(pos, vec2(0.4, 0.4));\n    float c2 = circ(pos, vec2(0.1, 0.4));\n    \n    float c3 = circ(pos, vec2(sin(iTime/3.)*2.,sin(iTime/3. * 3.) * 3.));\n    \n    float color = mod(1. + c1 + c2 + c3 + striping(pos), 2.);\n      \n    // Output to screen\n    fragColor = vec4(color);\n\n\n}","name":"Image","description":"","type":"image"}]}