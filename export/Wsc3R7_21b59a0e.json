{"ver":"0.1","info":{"id":"Wsc3R7","date":"1568042185","viewed":889,"name":"differential scroll - rainbow","username":"FabriceNeyret2","description":"( \"spectral\" variant of [url]https://shadertoy.com/view/3sc3zM[/url] )\nyou can play with mouse.\n\nuncomment buffA:20 for puffy variant","likes":37,"published":3,"flags":32,"usePreview":1,"tags":["rainbow","scroll","spectral","buffers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of https://shadertoy.com/view/3sc3zM\n\nvoid mainImage( out vec4 O, vec2 U ) { O = sqrt(T(U,)); } // sqrt approx 2sRGB","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//#define T(U) texelFetch(iChannel0, ivec2(U), 0)\n  #define T(U,l) texture( iChannel0, (U)/iResolution.xy, l+0. ) // use this one for fractionnal offsets","name":"Common","description":"","type":"common"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy,\n         M = iMouse.xy;\n   O-=O; //O = T(U+vec2(0,1));\n    \n  // --- vertical scroll at different speed in 6 \"spectral\" bands \n               //    speed   lod      gain\n    O.r  += T(U+vec2(0,1   ), 1. ).r;\n    O.rg += T(U+vec2(0,1.25), 1.5).rg *.5;\n    O.g  += T(U+vec2(0,1.5) , 2. ).g ;\n    O.gb += T(U+vec2(0,1.75), 2.5).gb *.5;\n    O.b  += T(U+vec2(0,2   ), 3. ).b;\n    O.br += T(U+vec2(0,1.5 ), 3. ).br *.5;\n    O *= 1./2.;\n    \n  // --- draw\n    if (length(M)<30.) M = R* vec2( .6+.4*sin(iTime), .7 ); \n    vec4 d = vec4( smoothstep( 1.5, 0., length(M-U)-R.y/100. ) );\n  //d *= texture(iChannel1,.3*U/R); // uncomment for puffy variant\n  //d *= .5+.5*sin(.1*U.x);\n    \n    O += d;\n  //O.a = max(O.r,max(O.g,O.b)); O += (1.-O.a) * d;  // true blend\n}","name":"Buffer A","description":"","type":"buffer"}]}