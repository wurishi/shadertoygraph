{"ver":"0.1","info":{"id":"NllyRS","date":"1648206362","viewed":97,"name":"Rectangle-ish weight","username":"BitOfGold","description":"I use this to generate a weight to mix between shadow map cascades. Between a distance weight and a rectangle weight. Smooth, but also maximum area use.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rectangle","weight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rectishWeight(vec2 pos) {\n    vec2 posn = 2.0*abs((0.5)-pos);\n    float l = max(posn.x, posn.y);\n    float d = length(posn);\n    l = mix(d, l, clamp(l*l, 0., 1.));\n    return l;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n\n    // Output to screen\n    float w = rectishWeight(uv);\n    float t = 0.95;\n    float w2 = smoothstep(t, 1.0, w);\n    fragColor = vec4(vec3(w2),1.0);\n}","name":"Image","description":"","type":"image"}]}