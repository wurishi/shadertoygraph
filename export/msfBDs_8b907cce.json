{"ver":"0.1","info":{"id":"msfBDs","date":"1715013411","viewed":27,"name":"MyFirstShaderFinal","username":"hstein","description":"This is my first shader art, inspired by the tutorial from https://www.youtube.com/watch?v=f4s1h2YETNY&list=WL&index=1\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"ddXfDl","parentname":"ForkMyFirstShader1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\n\n// cosine based palette, 4 vec3 params\nvec3 palette(float t)\n{\n    vec3 a = vec3(0.588, 0.488, 0.588);\n    vec3 b = vec3(0.570, 0.538, 0.358);\n    vec3 c = vec3(0.700, 1.000, 0.318);\n    vec3 d = vec3(0.320, 0.000, 0.138);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat repeatingCircle(vec2 uv, float nbRep)\n{\n    float d = length(uv);\n    float c = sin(d * nbRep * TWO_PI - PI/2. + iTime);\n    //return c;\n    return c * 0.5 + 0.5; // return a value between 0 and 1\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Clip space coordinates (from -1 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    //uv.x *= iResolution.x/iResolution.y;\n    vec2 uv0 = uv;\n    \n    \n    float nbCells = 2.;\n    vec3 finalColor = vec3(0.);\n    float offset = 1.; // offset to apply (in clip space coordinate)\n    \n    for(float i = 0.; i < 3.; i++)\n    {\n        // Offset the center of the pattern (kind of like \"translating the camera\" over the texture)\n        uv += offset/nbCells;\n\n        // Split the screen in nbCells\n        uv = uv * 0.5 + 0.5; // value in [0, 1]\n        uv = mod(uv, 1./nbCells); // split the screen\n        uv = uv * nbCells * 2.0 - 1.0; // value in clip space again\n\n        // Color palette according to the distance to the center\n        vec3 col = palette(length(uv0) + iTime *.4);\n\n        // Glowing circles inside each cell\n        float c = repeatingCircle(uv, 1.); // value between 0 and 1\n        c = 0.01/c + 0.05; // glowing effect\n        finalColor += col * c;\n    }\n    \n    fragColor = vec4(finalColor, 1.);\n}","name":"Image","description":"","type":"image"}]}