{"ver":"0.1","info":{"id":"WdKBDt","date":"1608238039","viewed":165,"name":"Fake sphere (projection)","username":"darkeclipz","description":"A fake sphere where the points of the sphere are created by projecting a plane from a unit cube onto a sphere.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define pi 3.14159\n\nvec3 shade(vec3 p, vec3 n, vec3 v, vec3 light) {\n\n    // calculate texture uv\n    float theta = atan(p.y, p.x+1e-15);\n    float r = sqrt(dot(p,p));\n    float phi = acos(p.z/r);\n    vec2 tuv = vec2(theta / (2.*pi), phi/pi);\n    \n    // shade with blinn-phong\n    vec3 l = normalize(p - light);\n    vec3 h = normalize(v + l);\n    vec3 m_spec = vec3(1.0);\n    vec3 s_spec = vec3(255., 254., 222.)/255.;\n    float m_gsl = 1.8;\n    vec3 c_spec = (m_spec * s_spec) * pow(max(-dot(n, h), 0.), m_gsl);\n    vec3 m_diff = texture(iChannel0, tuv).xyz*.3;\n    vec3 s_diff = vec3(0.2);\n    vec3 c_diff = (s_diff * m_diff) * max(-dot(n, l), 0.);\n    vec3 g_amb = m_diff;\n    \n    return c_spec + c_diff + g_amb;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord-R)/R.y;\n    \n    // project a plane from unit cube onto the sphere\n    vec2 plane = 2.0*uv;\n    vec3 p = vec3(plane, 0.5);\n    vec3 ps = p / length(p);\n    \n    // shade\n    vec3 col = vec3(0);\n    col = shade(p, p, vec3(0.,0,0.5), vec3(1.75,1.75,8.1));\n    \n    // cut\n    col *= smoothstep(1., .98, length(plane)-0.5);\n    \n    // apply some shadow on edges\n    col *= smoothstep(1.0, 0.0, length(plane)-0.88);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}