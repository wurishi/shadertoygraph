{"ver":"0.1","info":{"id":"X3lyWX","date":"1726730152","viewed":10,"name":"cascading shimmer","username":"Danacrius","description":"Developed based on Kishimisu Shader Art Coding Introduction : \nhttps://youtu.be/f4s1h2YETNY","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1) and fix aspect ratio\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    //Original distace to center of canvas\n    vec2 uv0 = uv;\n    vec3 finalcol;\n    \n    for (float i = 0.0; i<1.0; i++){\n        uv = fract(uv * 2.) - 0.5;\n        float d = length(uv) * exp(+length(uv0));\n        d = sin(d*8.0 - iTime)/20.0;\n        //d = sin(d*8.0 - iTime)/6.0;\n        d = abs(d);\n        d = 0.03 / d;\n        //d = pow(0.03 / d, 0.1);\n\n        // Time varying pixel color\n        // using  uv0 to break local gradient repitition\n        vec3 col = 0.5 + 0.8*cos(iTime+length(uv0)+vec3(0,2,4));\n\n      //col += d - 1.2;\n        finalcol = col + d - 1.2;\n    }\n    \n    // Output to screen\n    fragColor = vec4(finalcol,1.0);\n}","name":"Image","description":"","type":"image"}]}