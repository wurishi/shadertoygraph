{"ver":"0.1","info":{"id":"7sXyRl","date":"1642512501","viewed":93,"name":"moving pixel grid","username":"venomflop","description":"Me learning: a simple moving pixel grid","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["pixelgridmoving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float nsin(float n) {\n    return sin(n) * .5 + .5;\n}\n\nfloat rnd21(vec2 p) {\n    p = fract(p * vec2(233.34, 851.73));\n    p += dot (p, p + 23.45) ;\n    return fract(p.x * p.y);\n}\n\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // normalize\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // grid uv\n    float gridSize = 80.;\n    float aspect = iResolution.y / iResolution.x;\n    vec2 gUv = vec2(uv.x * gridSize, uv.y * (gridSize * aspect));\n    \n    // move grid\n    gUv.x += iTime;\n    \n    // grid id\n    vec2 id = floor(gUv);\n    float rndById = rnd21(id);\n    \n    \n    // pixel fade\n    vec3 col = vec3(0.8, 0.1, 0.4);\n    col *= nsin((iTime * 1.) * rndById);\n\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}