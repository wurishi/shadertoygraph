{"ver":"0.1","info":{"id":"tlVXzz","date":"1582124180","viewed":102,"name":"Colour Slick","username":"abw","description":"Variation of a plasma cloud","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["plasma","hsv","sinwave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// based on code here: https://www.bidouille.org/prog/plasma\n\n#define PI 3.14159\n\nvec3 hsv2rgb(in vec3 c)\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // adjust these values for different effects\n    vec2 scale = vec2(5.0, 7.0);\n    \n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    vec2 c = uv * scale - scale / 2.0;\n    float v = sin(c.x+ iTime*2.0) + sin((c.y + iTime)*1.6) + sin((c.x + c.y + iTime)*1.2);\n    c += scale/2.0 * vec2(sin(iTime/3.0), cos(iTime/2.0));\n    v += sin(sqrt(uv.x*uv.x + uv.y*uv.y+1.0)+iTime) / 2.0;\n    v = v / 2.0;\n      \n   \tfloat hue = fract(0.5 + sin(iTime/4.0) * 0.5 + (sin(PI*v/12.0) + cos(PI*v/12.0)) * 0.5);\n    float white = fract(hue*2.0);\n    float black = fract((hue + 0.25)*6.0);\n    white = white * white * white * white;\n    black = black * black * black * black;\n    vec3 col = hsv2rgb(vec3(hue, 1.0 - white, 1.0 - black * 0.6));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}