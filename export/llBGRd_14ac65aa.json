{"ver":"0.1","info":{"id":"llBGRd","date":"1431375913","viewed":619,"name":"EvilSeed","username":"dila","description":"I discovered this rust effect and had to put it to good use.","likes":27,"published":1,"flags":0,"usePreview":0,"tags":["escape","blades","rust"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"const float pi = 3.14159;\n\nmat3 xrot(float t)\n{\n    return mat3(1.0, 0.0, 0.0,\n                0.0, cos(t), -sin(t),\n                0.0, sin(t), cos(t));\n}\n\nmat3 yrot(float t)\n{\n    return mat3(cos(t), 0.0, -sin(t),\n                0.0, 1.0, 0.0,\n                sin(t), 0.0, cos(t));\n}\n\nmat3 zrot(float t)\n{\n    return mat3(cos(t), -sin(t), 0.0,\n                sin(t), cos(t), 0.0,\n                0.0, 0.0, 1.0);\n}\n\nfloat btime = 1.0;\nfloat bspeed = 10.0;\n\nfloat map(vec3 pos)\n{\n    float dir = 1.0;\n    vec3 id = floor(pos);\n    pos.y += sin(iTime+id.x*10.0+id.z*10.0);\n    pos = fract(pos) * 2.0 - 1.0;\n    pos *= yrot(iTime*btime*4.0*dir);\n    float s = length(pos.xz);\n    float k = atan(pos.z, pos.x);\n    float mr = 0.9;\n    float r = mix(0.8, 1.0, 0.5 + 0.5 * sin(s/mr*dir*bspeed+k*10.0));\n    float p = mr * r;\n    float e = 1.0 - s/p;\n    vec3 c = vec3(pos.x, clamp(pos.y,-0.02*e, 0.02*e), pos.z);\n\treturn min(max(length(c-pos), s-p), s-0.1);\n}\n\nvec3 normal(vec3 p)\n{\n    vec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n \tfloat t = 0.0;\n    for (int i = 0; i < 16; ++i) {\n     \tvec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nfloat pshade(vec3 p)\n{\n    vec3 id = floor(p);\n    p.y += sin(iTime+id.x*10.0+id.z*10.0);\n    p = fract(p) * 2.0 - 1.0;\n    p *= yrot(iTime*btime*4.0+length(p.xz)*4.0);\n    p += id;\n\tfloat ac = texture(iChannel0, vec2(p.y,p.z)).x;\n    float bc = texture(iChannel0, vec2(p.x,p.z)).x;\n    float cc = texture(iChannel0, vec2(p.x,p.y)).x;\n    float s = ((ac + bc + cc) / 3.0) * 2.0 - 1.0;\n    return s;\n}\n\nvec4 surf(vec3 r, vec3 w, vec3 sn, float t)\n{\n    float prod = max(dot(sn,-r), 0.0);\n    float off = 0.5 + 0.5 * sin(pshade(w)*pi*5.0);\n    float ao = map(w) * 20.0;\n    float fog = prod / (1.0 + t * t + off + ao);\n    return vec4(vec3(fog),off);\n}\n\nvec3 shade(vec3 r, float time)\n{\n    r *= xrot(iTime) * zrot(time);\n    \n    vec3 o = vec3(0.0, 0.0, 0.0);\n    o.z += time;\n    \n    float t = trace(o, r);\n    vec3 w = o + r * t;\n    vec3 sn = normal(w);\n    \n    vec4 ac = surf(r, w, sn, t);\n    \n    vec3 from = vec3(0.8, 0.2, 0.1);\n    vec3 to = vec3(1.0, 1.0, 1.0);\n    \n    float fx = 1.0 - ac.w;\n    \n    vec3 mixed = ac.xyz * mix(from, to, fx);\n    \n    return mixed;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.0 - dot(uv,uv) * 0.33));\n\n    btime = 2.0;\n    bspeed = 10.0;\n    vec3 sa = shade(r, iTime);\n    \n    float of = 0.01;\n    \n    btime = 4.0;\n    bspeed = 20.0;\n    vec3 sb = shade(r, iTime+of);\n\n    btime = 6.0;\n    bspeed = 20.0;\n    vec3 sc = shade(r, iTime+of*2.0);\n    \n    vec3 f = sa * 0.2 + sb * 0.5 + sc * 0.3;\n    \n\tfragColor = vec4(f,1.0);\n}","name":"","description":"","type":"image"}]}