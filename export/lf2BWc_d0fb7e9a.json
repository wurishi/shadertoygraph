{"ver":"0.1","info":{"id":"lf2BWc","date":"1725612302","viewed":19,"name":"Plot2D lync","username":"Lync","description":"2D画线","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["functions","graphing","maths"],"hasliked":0,"parentid":"4cBBW3","parentname":"2D Implicit Function Grapher"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float line(float value, float t, float s)\n{\n    return smoothstep(-(t + s)*0.5, -t*0.5, value) - smoothstep(t*0.5, (t + s)*0.5, value);\n}\n\nvoid renderImplicitFunction(inout vec3 colour, float impl, vec2 grad, vec3 lineColour)\n{\n    float distToGraph = abs(impl) / length(grad);\n    float shadow = line(distToGraph, 0.0, 0.35);\n    float graph = line(distToGraph, 0.04, 0.04);\n    //colour = mix(colour, vec3(0.0, 0.0, 0.0), shadow * 0.2);\n    colour = mix(colour, lineColour, graph);\n}\n\nfloat func(float x, float y)\n{\n    return x*x - 12.*x*y - y*y - 5.;\n    //return y - x*x * (1.0 + 0.1*cos(iTime*4.0));\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 gridsize = vec2(4.0);\n    vec2 uv = (2.0*fragCoord - iResolution.xy) / iResolution.y;\n    vec2 coord = uv * gridsize;\n    float h = 0.001;\n    vec3 colour = vec3(0.0, 0.0, 0.0);\n    float grid = mod(floor(coord.x) + floor(coord.y), 2.0);\n    colour = mix(colour, vec3(0.36, 0.37, 0.38), grid);\n    colour = mix(colour, vec3(0.51, 0.52, 0.53), line(uv.x, 0.01, 0.01));\n    colour = mix(colour, vec3(0.51, 0.52, 0.53), line(uv.y, 0.01, 0.01));\n    float impl = 0.0;\n    vec2 grad = vec2(0.0);\n    \n    impl = func(coord.x, coord.y);\n    grad = vec2(\n        func(coord.x + h, coord.y) - func(coord.x - h, coord.y),\n        func(coord.x, coord.y + h) - func(coord.x, coord.y - h)\n    ) / (0.5*h);\n    renderImplicitFunction(colour, impl, grad, vec3(1.0, 1.0, 0.0));\n   \n    fragColor = vec4(impl,1.,1., 1.0);\n    //fragColor = vec4(grad,1., 1.0);\n}\n","name":"Image","description":"","type":"image"}]}