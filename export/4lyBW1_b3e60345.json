{"ver":"0.1","info":{"id":"4lyBW1","date":"1542300581","viewed":771,"name":"Shaded Fluid","username":"aiekick","description":"Shaded Fluid. click with mouse for reset screen\n\nbased on the work of wyatt and guil","likes":30,"published":3,"flags":32,"usePreview":0,"tags":["fluid","shaded"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define tex(g) texture(iChannel0, (g)/iResolution.xy)\n\nvoid mainImage( out vec4 fragColor, in vec2 g )\n{   \t\n\tfragColor = 0.5+0.5*sin(tex(g).w * vec4(7.7,6.0,3.9,1));\n    \n    float cc = tex(g).w;\n    float cc2 = tex(g-1.).w;\n    fragColor = vec4(1)*cc*cc*0.8;\n    fragColor += vec4(.5, .8, 1,1)*max(cc2*cc2*cc2 - cc*cc*cc, 0.0)*iResolution.y*.2;\n    \n    fragColor = fragColor * 0.5 + 0.5 * texture(iChannel1, tex(g).zw/iResolution.xy*100.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define tex(g) texture(iChannel0, (g)/iResolution.xy)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 s = iResolution.xy;\n\tvec2 g = fragCoord;\n\tvec4 a = tex(g+vec2(1,0));\n\tvec4 b = tex(g+vec2(0,1));\n\tvec4 c = tex(g+vec2(-1,0));\n\tvec4 d = tex(g+vec2(0,-1));\n\tfragColor = tex(g-tex(g).xy);\n\tvec2 gp = vec2(a.z-c.z,b.z-d.z);\n\tfragColor.xyz = vec3(\n\t\tfragColor.x + gp.x,\n\t\tfragColor.y + gp.y,\n\t\t0.25 * (a.z + b.z + c.z + d.z) - 0.05 * (c.x - a.x + d.y - b.y));\n    fragColor.w += fragColor.z * 0.1;\n\tif (iFrame < 1 || iMouse.z > 0.) fragColor = vec4(0);\n\tif (g.x < 1. || g.y < 1. || g.x > s.x - 1. || g.y > s.y - 1.) fragColor.xy *= 0.;\n\tfor (int i=0;i<count;i++)\n\t{\n\t\tfloat a = 6.28318 * float(i)/float(count);\n\t\tvec2 dir = vec2(cos(a),sin(a));\n\t\tvec2 p = s * 0.5 - dir * radius * min(s.x,s.y);\n\t\temit(p, dir);\n\t}\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define tex(g) texture(iChannel0, (g)/iResolution.xy)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 s = iResolution.xy;\n\tvec2 g = fragCoord;\n\tvec4 a = tex(g+vec2(1,0));\n\tvec4 b = tex(g+vec2(0,1));\n\tvec4 c = tex(g+vec2(-1,0));\n\tvec4 d = tex(g+vec2(0,-1));\n\tfragColor = tex(g-tex(g).xy);\n\tvec2 gp = vec2(a.z-c.z,b.z-d.z);\n\tfragColor.xyz = vec3(\n\t\tfragColor.x + gp.x,\n\t\tfragColor.y + gp.y,\n\t\t0.25 * (a.z + b.z + c.z + d.z) - 0.05 * (c.x - a.x + d.y - b.y));\n\tif (iFrame < 1) fragColor = vec4(0);\n\tif (g.x < 1. || g.y < 1. || g.x > s.x - 1. || g.y > s.y - 1.) fragColor.xy *= 0.;\n\tfor (int i=0;i<count;i++)\n\t{\n\t\tfloat a = 6.28318 * float(i)/float(count);\n\t\tvec2 dir = vec2(cos(a),sin(a));\n\t\tvec2 p = s * 0.5 - dir * radius * min(s.x,s.y);\n\t\temit(p, dir);\n\t}\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"#define tex(g) texture(iChannel0, (g)/iResolution.xy)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 s = iResolution.xy;\n\tvec2 g = fragCoord;\n\tvec4 a = tex(g+vec2(1,0));\n\tvec4 b = tex(g+vec2(0,1));\n\tvec4 c = tex(g+vec2(-1,0));\n\tvec4 d = tex(g+vec2(0,-1));\n\tfragColor = tex(g-tex(g).xy);\n\tvec2 gp = vec2(a.z-c.z,b.z-d.z);\n\tfragColor.xyz = vec3(\n\t\tfragColor.x + gp.x,\n\t\tfragColor.y + gp.y,\n\t\t0.25 * (a.z + b.z + c.z + d.z) - 0.05 * (c.x - a.x + d.y - b.y));\n\tif (iFrame < 1) fragColor = vec4(0);\n\tif (g.x < 1. || g.y < 1. || g.x > s.x - 1. || g.y > s.y - 1.) fragColor.xy *= 0.;\n\tfor (int i=0;i<count;i++)\n\t{\n\t\tfloat a = 6.28318 * float(i)/float(count);\n\t\tvec2 dir = vec2(cos(a),sin(a));\n\t\tvec2 p = s * 0.5 - dir * radius * min(s.x,s.y);\n\t\temit(p, dir);\n\t}\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"#define tex(g) texture(iChannel0, (g)/iResolution.xy)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 s = iResolution.xy;\n\tvec2 g = fragCoord;\n\tvec4 a = tex(g+vec2(1,0));\n\tvec4 b = tex(g+vec2(0,1));\n\tvec4 c = tex(g+vec2(-1,0));\n\tvec4 d = tex(g+vec2(0,-1));\n\tfragColor = tex(g-tex(g).xy);\n\tvec2 gp = vec2(a.z-c.z,b.z-d.z);\n\tfragColor.xyz = vec3(\n\t\tfragColor.x + gp.x,\n\t\tfragColor.y + gp.y,\n\t\t0.25 * (a.z + b.z + c.z + d.z) - 0.05 * (c.x - a.x + d.y - b.y));\n\tif (iFrame < 1) fragColor = vec4(0);\n\tif (g.x < 1. || g.y < 1. || g.x > s.x - 1. || g.y > s.y - 1.) fragColor.xy *= 0.;\n\tfor (int i=0;i<count;i++)\n\t{\n\t\tfloat a = 6.28318 * float(i)/float(count);\n\t\tvec2 dir = vec2(cos(a),sin(a));\n\t\tvec2 p = s * 0.5 - dir * radius * min(s.x,s.y);\n\t\temit(p, dir);\n\t}\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define count 4\n#define radius 0.43\n#define emitSize 1.0\n#define force 1.0\n#define constraint 0.01\n#define effect 1.0\n#define emit(v,s) if (length(g-(v)) < emitSize) fragColor.xy = fragColor.xy * (1.0 - force) + force * (s), fragColor.w = 1.0\n\n","name":"Common","description":"","type":"common"}]}