{"ver":"0.1","info":{"id":"WdVcRz","date":"1602142746","viewed":397,"name":"Paint Swarm","username":"Plento","description":"An experiment where particles sorta go around eachother when they get too close","likes":9,"published":3,"flags":32,"usePreview":0,"tags":["2d","particles","snake","paint","buffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Plento\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec2 uv = u/R;\n    uv.y+=iTime*.1;\n    vec3 col = texture(iChannel0, uv).xyz;\n    vec3 gl = texture(iChannel0, .0001*hash22(u+iTime)+uv, 6.0).xyz;\n\t\n    gl = gl*gl*gl*5.5;\n    col += gl;\n    \n    col = 1.-exp(-col);\n    f = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 f, in vec2 u ){\n    ivec2 iu = ivec2(u);\n    vec4 bA = ch(iChannel0, u);\n    \n    if(iu.x < nParticles && iu.y == 0)\n    {\n        for(int i = 0; i < nParticles; i++)\n    \t{\n            if(i != iu.x)\n            {\n        \t\tvec4 pA = ch(iChannel0, vec2(i,0.));\t \n                vec4 pC = ch(iChannel1, vec2(i,0.));\n                vec2 ref = reflect(bA.zw, normalize(bA.xy - pA.xy));\n                float d = length(bA.xy - pA.xy);\n                bA.zw += 0.7* ref * exp(-d*0.025);\n            }\n            \n        }\n        \n        bA.xy += bA.zw;\n        \n        bA.zw = clamp(bA.zw, -0.7, 0.7);\n        \n    \tif(iFrame < 5 ){\n            bA.zw = (2.*hash22(vec2(345.*u.x+iDate.w, 2123.21))-1.) * 0.8;\n        \tbA.xy = hash22(u + iDate.w)*R.xy;\n    \t}\n    }\n    else discard;\n    \n    bA.zw = sign(bA.zw)*max(bA.zw, 0.2);\n    \n    bA.xy = mod(bA.xy, R);\n    bA.xy = clamp(bA.xy, vec2(0), R);\n    f = bA;\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define m vec2(R.x/R.y*(iMouse.x/R.x-.5),iMouse.y/R.y-.5)\n#define ss(a, b, t) smoothstep(a, b, t)\n#define ch(chan, p) texelFetch(chan, ivec2(p), 0)\n#define R iResolution.xy\n\nconst int nParticles = 200; \n\nvec2 hash22(vec2 p){\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec4 bA = ch(iChannel0, u);\n    vec3 bB = ch(iChannel1, u).xyz;\n    \n    for(int i = 0; i < nParticles; i++){\n     \tfloat d = length(u - ch(iChannel0, vec2(i,0.)).xy);\t   \n        bB = mix(.5+.35*cos(vec3(2.3, 1.5,5.5)*float(i)), bB, step(R.y*0.012, d));\n    }\n    \n    bB *= 0.9884;\n    \n    if(iFrame < 5)\n        bB = vec3(0);\n    \n    f = vec4(bB, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}