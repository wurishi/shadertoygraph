{"ver":"0.1","info":{"id":"XlBSzm","date":"1442345113","viewed":307,"name":"Voidless","username":"shezard","description":"A simple test on pseudo kaleidoscopic scene","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nconst mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nmat2 rotate(in float theta) {\n    return mat2(\n    \tcos(theta), -sin(theta), sin(theta), cos(theta)\n    );\n}\n\nfloat noise(in vec2 uv) {\n\treturn sin(1.5*uv.x)*sin(1.5*uv.y);\n}\n\nfloat fbm(vec2 uv) {\n    float f = 0.0;\n    f += 0.5000*noise(uv); uv = m*uv*2.02;\n    f += 0.2500*noise(uv); uv = m*uv*2.03;\n    f += 0.1250*noise(uv); uv = m*uv*2.01;\n    f += 0.0625*noise(uv);\n    return f/0.9375;\n}\n\nfloat fbm2(in vec2 uv) {\n   vec2 p = vec2(fbm(uv + vec2(0.0,0.0)),\n                 fbm(uv + vec2(5.2,1.3)));\n\n   return fbm(uv + 4.0*p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv = -1.0 + 2.*uv;\n    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    \n    float h = length((.5 + .5*cos(uv+vec2(\n        iTime, .0\n    ))));\n    \n    vec3 m = vec3(\n        .75 + .25 * sin(iTime),\n        1.0 + uv.y * (.75 + .25 * cos(iTime)),\n        1.0 * noise(uv + vec2(.0, iTime * 2.0))\n    );\n    \n    float theta = iTime * .8;\n    \n    vec2 p = uv * rotate(theta);\n    \n    p = abs(p);\n    vec3 c = h * m * (fbm2(\n        p + iTime * .6\n    ) + fbm2(\n        2.0 * p + iTime * .3\n    ));\n    \n    c = clamp(c, 0.0, 1.0);\n    \n\tfragColor = vec4(c*c, 1.0);\n}","name":"","description":"","type":"image"}]}