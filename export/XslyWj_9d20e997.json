{"ver":"0.1","info":{"id":"XslyWj","date":"1489927577","viewed":109,"name":"TestGLSL","username":"ArtDov","description":"NewShader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["caustic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p){\n    vec3 q = fract(p)*2.0 - 1.0;\n return length(q) - 0.1;   \n}\nfloat trace(vec3 o, vec3 r){\n    float t = 0.0;\n    for (int i = 0; i < 32; i++){\n        vec3 p = o + r * t;\n       float d = map(p);\n        t += d * 0.35;\n    }\n    return t;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n    float speedl = 1.0;\n    float time = speedl*iTime;\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= 2.0*iResolution.x/ iResolution.y;\n    float scaleUV = 0.5;\n    uv /= scaleUV;\n    vec3 r = normalize(vec3(uv,1.0));\n    float teta = iTime/10.0;\n    \n    r.xz *= mat2(cos(teta), -sin(teta), sin(teta), cos(teta));\n    r.yz *= mat2(cos(teta), sin(teta), -sin(teta), cos(teta));\n    r.xy *= mat2(cos(teta), -sin(teta), sin(teta), cos(teta));\n    \n    r.x += 0.05; r.y += 0.05; r.z -= 0.1;\n   \n\n    vec3 o = vec3(0.0, 0.0, time);\n    float t = trace(o,r);\n    float fog = 1.0/(0.5 + t*t*0.1);\n    vec3 fc = vec3(fog);\n    vec3 blueColor = vec3(0.0,0.5,0.8);\n    fc = fc + blueColor/1.5;\n    vec4 tex0 = texture(iChannel0, uv); \n    vec3 h = vec3( trace(tex0.rgb,r));\n    fc * blueColor;\n    \n    fragColor = vec4(fc*blueColor,1.0);\n}","name":"Image","description":"","type":"image"}]}