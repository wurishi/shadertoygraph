{"ver":"0.1","info":{"id":"dlVXWK","date":"1686509219","viewed":24,"name":"3chanel variable itime","username":"davidmachadosf","description":"test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["animationmath"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pot  =   10.;\nconst float freq =   50.;\nconst float scale = 100.;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = scale*iTime*(fragCoord/iResolution.xy - .5);\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    \n    x = x/y;\n    y = y/x;\n    \n\n    // Time varying pixel color\n    //vec3 col = vec3(.5,.2,.8);\n    \n    //plot (1-(1-sin( 10*(x+y) * x)^100) * (1-sin(10* (x+y) * y)^100))\n    \n    float valxy3 = \n        1. -\n         pow(1.-cos( freq+(uv.x/uv.y) * uv.x/iTime),1./pot) * \n         pow(1.-cos( freq/(uv.y*uv.x) * iTime*uv.y),pot*pot);\n    \n         \n    // plot (1-(1-sin( 1/(x+y) * x)^100) * (1-sin(1/ (x+y) * y)^100))  \n    float valxy2 = \n        1. -\n         pow(1.-sin( freq/(uv.x+uv.y) * uv.x),pot) * \n         pow(1.-sin( freq*(uv.y/uv.x) * uv.y),pot);\n    \n    \n    // (1-(1-sin( (3/((x^2+y^2)^.5)) * x)^10) * \n    //    (1-sin( (3/((x^2+y^2)^.5)) * y)^10))\n    \n    \n    float valxy1 = \n        1. -\n         (1.-pow(abs(sin(10.*freq/x)),pot)) * \n         (1.-pow(abs(cos(10.*y/freq)),pot));\n    \n         \n    vec3 col = vec3(valxy1, .2*valxy3, valxy2);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}