{"ver":"0.1","info":{"id":"4tS3W3","date":"1432811566","viewed":3495,"name":"Pulse waves - Visualiser","username":"uNiversal","description":"A simpler multiple waveform type visualiser based on Waves Remix by: ADOB\n\nMade to work with Kodi Shadertoy https://github.com/topfs2/visualization.shadertoy","likes":23,"published":3,"flags":0,"usePreview":0,"tags":["2d","audio","visualiser"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","previewfilepath":"/media/ap/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"/*\nPulse waves - Visualiser - https://www.shadertoy.com/view/4tS3W3\nBased on Waves Remix by: ADOB - 10th April, 2015 https://www.shadertoy.com/view/4ljGD1\nPulse waves by: uNiversal - 28th May, 2015\nCreative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n*/\n\nfloat squared(float value) { return value * value; }\n\nfloat getAmp(float frequency) { return texture(iChannel0, vec2(frequency / 512.0, 0)).x; }\n\nfloat getWeight(float f) {\n    return (+ getAmp(f-2.0) + getAmp(f-1.0) + getAmp(f+2.0) + getAmp(f+1.0) + getAmp(f)) / 5.0; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uvTrue = fragCoord.xy / iResolution.xy;\n    vec2 uv = -1.0 + 2.0 * uvTrue;\n\n    float lineIntensity;\n    float glowWidth;\n    vec3 color = vec3(0.0);\n\n    for(float i = 0.0; i < 5.0; ++i) {\n\n        uv.y += (0.3 * sin(uv.y + i - 5.0 - iTime * 0.0));\n        float Y = uv.y + getWeight((i) * 20.0) *\n            (texture(iChannel0, vec2(uvTrue.x, 1)).x - 0.5);\n        lineIntensity = 0.5 + squared(0.6 * abs(mod(uvTrue.x + i / 4.3 + iTime,2.0) - 1.0));\n        glowWidth = abs(lineIntensity / (150.0 * Y));\n        color += vec3(glowWidth * (1.5 + sin(iTime * 0.13)),\n                      glowWidth * (1.5 - sin(iTime * 0.23)),\n                      glowWidth * (1.5 - cos(iTime * 0.19)));\n    }    \n\n    fragColor = vec4(color, 1.0);\n}","name":"","description":"","type":"image"}]}