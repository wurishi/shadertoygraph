{"ver":"0.1","info":{"id":"ltsBWM","date":"1512128821","viewed":241,"name":"MovingLines-Test","username":"taepras","description":"just an experiment on fragment shaders","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["curves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float line(vec2 uv, float height, float width, float blurSize, float oscilationSpeed, float oscilationDistance, float oscilationShift)\n{\n    float period = 1.0 / width;\n    float phaseShift = oscilationDistance * cos(iTime * oscilationSpeed + oscilationShift);\n\tfloat fx = height * cos(uv.x * period + phaseShift);\n    float df = (uv.y - fx);\n    if (df > 0.1) {\n\t\tdf = 0.0;\n    }\n    return clamp(blurSize * df, 0.0, 1.0);\n}\n\nfloat sinNorm(float x)\n{\n    return (x + 1.0) * 0.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uvCentered = uv - vec2(0.5);\n    uvCentered.x *= iResolution.x / iResolution.y;\n    uvCentered.y += 0.33;\n    float line1 = line(uvCentered, 0.05, 0.33, 4.0, 1.0, 1.5, 0.0);\n    float line2 = line(uvCentered, 0.07, 0.3, 4.0, 0.8967, 1.0, 1.532);\n    float line3 = line(uvCentered, 0.08, 0.5, 4.0, 0.4243, -3.0, 0.158);\n    float v = line1 + line2 + line3;\n    fragColor = mix(\n        vec4(uv, sinNorm(sin(iTime)),1.0),\n        vec4(1.0, 1.0, 1.0, 1.0),\n        sinNorm(v)\n        );        \n}","name":"Image","description":"","type":"image"}]}