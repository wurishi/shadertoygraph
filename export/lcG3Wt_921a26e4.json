{"ver":"0.1","info":{"id":"lcG3Wt","date":"1713409788","viewed":294,"name":"Kaleidoscope Bao01","username":"SamOrantin","description":"Kaleidoscope","likes":22,"published":3,"flags":0,"usePreview":0,"tags":["kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n#define orbs 20.\n\nvec2 kale(vec2 uv, vec2 offset, float sides) {\n  float angle = atan(uv.y, uv.x);\n  angle = ((angle / PI) + 1.0) * 0.5;\n  angle = mod(angle, 1.0 / sides) * sides;\n  angle = -abs(2.0 * angle - 1.0) + 1.0;\n  angle = angle;\n  float y = length(uv);\n  angle = angle * (y);\n  return vec2(angle, y) - offset;\n}\n\nvec4 orb(vec2 uv, float size, vec2 position, vec3 color, float contrast) {\n  return pow(vec4(size / length(uv + position) * color, 1.), vec4(contrast));\n}\n\nmat2 rotate(float angle) {\n  return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = 23.09 * (2. * fragCoord - iResolution.xy) / iResolution.y;\n  float dist = length(uv);\n  fragColor = vec4(0.);\n  uv *= rotate(iTime / 20.);\n  uv = kale(uv, vec2(6.97), 8.);\n  uv *= rotate(iTime / 5.);\n  for (float i = 0.; i < orbs; i++) {\n    uv.x += 0.57 * sin(0.3 * uv.y + iTime);\n    uv.y -= 0.63 * cos(0.53 * uv.x + iTime);\n    float t = i * PI / orbs * 2.;\n    float x = 4.02 * tan(t + iTime / 10.);\n    float y = 4.02 * cos(t - iTime / 30.);\n    vec2 position = vec2(x, y);\n    vec3 color = vec3(0.,0.3,0.8) * 0.25 + 0.25;\n    fragColor += orb(uv, 1.39, position, color, 1.37);\n  }\n}","name":"Image","description":"","type":"image"}]}