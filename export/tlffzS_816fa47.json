{"ver":"0.1","info":{"id":"tlffzS","date":"1597007524","viewed":506,"name":"Brute Force Box Filter","username":"GregRostami","description":"Brute force anti-aliasing using a box-filter.\nEnjoy in Full-Screen!\nHere's the golfed version of this shader:\n[url]https://www.shadertoy.com/view/tlsBzS[/url]","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["2d","supersampling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Brute Force Box Filter - Each pixel is super sampled 256 times!\n// This shader has been optimized for speed.\n// The golfed version of this shader has been optimized for size.\n// If you know about implementing a Gausian filter in Shadertoy, please help!\n\nvoid mainImage(out vec4 O,vec2 U)\n{\n    O-=O;\n    vec2 R = iResolution.xy, u, a = (U - .5*R)/R.y;\n        \n    float A = 16.,   //The A variable determines the level of Anti-Aliasing\n          s = 1./A,\n          t = .3 * iTime,\n          x, y;\n    \n        for (y=0.; y < 1.; y += s)\n            for (x=0.; x < 1.; x += s)\n                u = a + vec2(x,y)/R.y,\n                \n                u /= dot(u,u),\n                O += max( u=fract(3.*u + t), u.x-u ).y;\n            \n        O /= A*A;\n}","name":"Image","description":"","type":"image"}]}