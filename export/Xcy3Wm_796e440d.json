{"ver":"0.1","info":{"id":"Xcy3Wm","date":"1712832098","viewed":52,"name":"2d rotate&translate&scale matrix","username":"yufengjie","description":"2d下的balabalabala","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","rotate","scale","translate","beginer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sdBox(in vec2 p, in vec2 b) {\n  vec2 d = abs(p) - b;\n  return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\n\nmat3 rotate(float angle) {\n  angle = -angle;\n  return mat3(\n    cos(angle), -sin(angle), 0.,\n    sin(angle),  cos(angle), 0.,\n     0., 0., 1.\n  );\n}\nmat3 translate(vec2 t) {\n  t = -t;\n  return mat3(\n    1.,0.,t.x,\n    0.,1.,t.y,\n    0.,0.,1.\n  );\n}\nmat3 scale(vec2 s) {\n  s = 1./s;\n  return mat3(\n    s.x, 0., 0.,\n    0., s.y, 0.,\n    0., 0.,  1.\n  );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = fragCoord.xy / iResolution.y;\n  float ixy = iResolution.x / iResolution.y;\n  vec3 c_fin = vec3(0.);\n  float pix = 1. / iResolution.y;\n\n  mat3 mat_r = rotate(iTime);\n  mat3 mat_t = translate(vec2(0.5 * ixy, 0.5));\n  \n  float sx = 0.5 + sin(iTime) * 0.5 + 0.5;\n  float sy = 0.5 + sin(iTime*2.) * 0.5 + 0.5;\n  mat3 mat_s = scale(vec2(sx,sy));\n\n  vec3 uv2 = vec3(uv, 1.) * mat_t * mat_s;\n\n  float box = sdBox(uv2.xy, vec2(0.5, 0.1));\n  box = smoothstep(10.*pix, 0., abs(box));\n  c_fin += box;\n\n  fragColor = vec4(c_fin, 1.);\n}\n","name":"Image","description":"","type":"image"}]}