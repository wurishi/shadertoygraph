{"ver":"0.1","info":{"id":"sty3zh","date":"1637139895","viewed":52,"name":"MindyTensy","username":"sk7725","description":"Tensyfluid shader used for Mindustry's mod, BetaMindy. This explains the wall of defines and also the messed up uv, made to better suit the game and api rather than shadertoy.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mindustry"],"hasliked":0,"parentid":"flcGWB","parentname":"MindyCryo"},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define HIGHP\n\n//shades of tensy\n#define S1 vec3(53.0, 93.0, 83.0) / 100.0\n#define S2 vec3(77.0, 99.0, 96.0) / 100.0\n#define S3 vec3(33.0, 66.0, 55.0) / 100.0\n#define NSCALE 200.0 / 2.0\n\n#define u_texture iChannel0\n#define u_noise iChannel1\n\n#define u_campos iMouse.xy\n#define u_resolution iResolution.xy\n#define u_time iTime * 60.0\n\n#define v_texCoords vec2(fragCoord / 6000.0)\n#define texture2D texture\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 c = v_texCoords.xy;\n    vec2 coords = vec2(c.x * u_resolution.x + u_campos.x, c.y * u_resolution.y + u_campos.y);\n\n    float btime = u_time / 5000.0;\n    float wave = abs(sin(coords.x * 1.1 + coords.y) + 0.99 * cos(0.5 * coords.x) + 0.35 * sin(3.0 * coords.y)) / 30.0;\n    float noise = wave + (texture2D(u_noise, (coords) / NSCALE + vec2(btime) * vec2(-0.2, 0.8)).r + texture2D(u_noise, (coords) / NSCALE + vec2(btime * 1.1) * vec2(0.8, -1.0)).r) / 2.0;\n    vec4 color = texture2D(u_texture, c);\n    noise = mod(noise + u_time / 1000.0, 1.0);\n\n    if(noise > 0.6 && noise < 0.7){\n        color.rgb = S3;\n    }else if(noise > 0.76){\n        color.rgb = S2;\n    }else if (noise > 0.49){\n        color.rgb = S1;\n    }\n\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}