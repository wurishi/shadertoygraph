{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":2,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Fork of \"Metal 3D test\" by wyatt. https://shadertoy.com/view/X3dczn\n// 2024-12-20 00:33:41\n\nvoid mainImage(out vec4 Q, in vec2 U) {\n    R = iResolution.xy;\n    if (iFrame%4>0) discard;\n    vec3 p = vec3(.5*R3.xy,-2.*R3.x);\n    vec3 d = normalize(vec3(2.*(U-.5*R)/R.y,9));\n    p -= .5*R3;\n    p.yz *= ei(-.08);\n    d.yz *= ei(-.08);\n    if (iMouse.z>0.) {\n    p.yz *= ei(-iMouse.y/R.x);\n    d.yz *= ei(-iMouse.y/R.x);\n    p.xz *= ei(iMouse.x/R.x*6.2);\n    d.xz *= ei(iMouse.x/R.x*6.2);\n    } else {\n    p.xz *= ei(-.5+.2*sin(.2*iTime));\n    d.xz *= ei(-.5+.2*sin(.2*iTime));\n    }\n    p += .5*R3;\n    p += d*1.001*cube(p,d,vec3(0),R3);\n    \n    vec3 no = vec3(0);\n    vec3 nd = vec3(0);\n    Q = vec4(0,0,0,0);\n    float e = 1.;\n    for (float i = 0.; i < 220.; i++) {\n    \n        if (length(p-clamp(p,vec3(0),R3))>0.) break;\n        float k = 1e9;\n        vec3 col = vec3(0);\n        for (float x = -1.; x <= 1.; x++)\n        for (float y = -1.; y <= 1.; y++)\n        for (float z = -1.; z <= 1.; z++)\n        {\n            vec3 w = floor(p)+vec3(x,y,z);\n            if (length(w-clamp(w,vec3(0),R3))>1e-3) continue;\n            vec4 c = C(w);\n            for (int o = 0; o < 4; o++) {\n                if (c[o] < 0.)break;\n                vec4 a = B(d3(c[o]));\n                float j = sphere(p-a.xyz,d,.75).x;\n                if (j > 0. && j < k) {\n                    k = j;\n                    vec3 no = normalize(p+d*j-a.xyz);\n                    col = e*(.5-.5*no.zzz)*(.9+.1*sin(c[o]+vec3(1,2,3)));\n                    \n                    nd = reflect(d,no);\n                }\n             }\n        }\n        if (k > 10.) {\n            float c = cube(fract(p),d,vec3(0),vec3(1));\n            c = clamp(c,.01,4.);\n            p += d*1.01*c;\n        } else {\n            Q.xyz += col;\n            p += d*k;\n            d = nd; \n            \n            e *= .4;\n             if (e < .3) break;\n            \n        }\n    }\n    Q = 1.-Q;\n   \n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"// 3D utilities \n#define N 10.\nvec2 R;\nvec3 vel (vec3 v) {return v*inversesqrt(1.+dot(v,v));}\n//  [ [0,R/N]; [0,N*N]  ] < -- > [0,R]\n#define Main void mainImage (out vec4 Q, in vec2 _U) {R = iResolution.xy;vec3 U = d3(floor(_U));\n#define A(U) s3d(iChannel0,U)\n#define B(U) s3d(iChannel1,U)\n#define C(U) s3d(iChannel2,U)\n#define D(U) s3d(iChannel3,U)\n#define R3 vec3(floor(R/N),N*N)\nvec4 hash(vec4 p4) {\n    p4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nbool building (vec3 U) {\n    vec3 u = abs(U-vec3(.7,.5,.5)*R3);\n    vec3 v = abs(U-vec3(.3,.5,.5)*R3);\n    return (max(u.x,max(u.y,u.z))<.2*R3.y)||(max(v.x,max(v.y,v.z))<.2*R3.y);\n}\nbool cell (vec3 u) {\n    return u.x>=0.&&u.y>=0.&&u.z>=0.&&u.x<1.&&u.y<1.&&u.z<1.;\n}\nfloat d1 (vec3 U) {\n    U = floor(U);\n    return U.x+U.y*R3.x+U.z*R3.x*R3.y;\n}\nvec3 d3 (float i) {\n    return vec3(mod(i,R3.x) , mod(floor(i/R3.x),R3.y), floor(i/R3.x/R3.y));\n}\nvec2 d2 (vec3 U) {\n    U = mod(U,R3);\n    float i = d1(U);\n    return vec2(mod(i,R.x),floor(i/R.x));\n}\nvec3 d3 (vec2 u) {\n    u = floor(u);\n    float i = u.x+u.y*R.x;\n\treturn d3(i);\n}\n\nvec4 s3d (sampler2D T,vec3 U) {\n    return texelFetch(T,ivec2(d2(floor(U))),0);\n}\nfloat absmin(float a, float b) {\n    if (a<0.||(b>0.&&b<a)) return b;\n    else return a;\n}\nvec2 sphere (vec3 oc, vec3 direction, float sphereRadius) {\n    float a = dot(direction, direction);\n    float b = 2.0 * dot(oc, direction);\n    float c = dot(oc, oc) - sphereRadius * sphereRadius;\n    float discriminant = b * b - 4.0 * a * c;\n    if (discriminant <= 0.0) return vec2(-1); \n    float t1 = (-b - sqrt(discriminant)) / (2.0 * a);\n    float t2 = (-b + sqrt(discriminant)) / (2.0 * a);\n    return vec2(t1, t2); \n}\n\nfloat cube(vec3 p, vec3 d, vec3 lo, vec3 hi) {\n    vec3 tLo = (lo - p) / d;\n    vec3 tHi = (hi - p) / d;\n    vec3 tMin = min(tLo, tHi);\n    vec3 tMax = max(tLo, tHi);\n    float tEntry = max(tMin.x, max(tMin.y, tMin.z));\n    float tExit = min(tMax.x, min(tMax.y, tMax.z));\n    if (tEntry > tExit || tExit < 0.0) return -1.0; \n    return tEntry > 0.0 ? tEntry : tExit;\n}","name":"Common","description":"","type":"common"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":2,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// velocity buffer\nMain \n    if (!building(U)) discard;\n    Q = B(U);\n    vec4 V = A(U);\n    vec3 f = vec3(0,-1e-5,0);\n    for (int x=-3;x<=3;x++)\n    for (int y=-3;y<=3;y++) \n    for (int z=-3;z<=3;z++) {\n       vec4 c = C(floor(Q.xyz)+vec3(x,y,z));\n       for (int k = 0; k < 4; k++) if (c[k]>0.) {\n            vec3 u = d3(c[k]);\n            vec4 q = B(u);\n            vec4 v = A(u);\n            vec3 r = q.xyz-Q.xyz;\n            float l = length(r);\n            if (l>0.)\n            f -= .1*(6.*r/l*exp(-2.*l*l)-r/l*exp(-2.*l)) + .001*(v.xyz-V.xyz)*r/l*exp(-.5*l);\n            \n        } else break;\n        \n    \n    }\n    if (length(f)>1.) f = normalize(f);\n    V.xyz += f;\n    \n    \n    \n    if (R3.x-Q.x<2.) V.x -= 2.-R3.x+Q.x;\n    if (R3.y-Q.y<2.) V.y -= 2.-R3.y+Q.y;\n    if (R3.z-Q.z<2.) V.z -= 2.-R3.z+Q.z;\n    \n    if (Q.x<2.) V.x += 2.-Q.x;\n    if (Q.y<2.) V.y += 2.-Q.y;\n    if (Q.z<2.) V.z += 2.-Q.z;\n    \n    \n    if (iFrame < 1) {\n    \n        V = vec4(-.01*sign(U.x-.5*R3.x),0,0,0);\n        \n    }\n    \n   \n    \n    Q = V;\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":2,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":3,"type":"buffer","id":"XdfGR8","filepath":"/media/previz/buffer03.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// velocity buffer\nMain \n\n    if (!building(U)) discard;\n    Q = B(U);\n    vec4 V = A(U);\n    \n    Q += (V-D(U))+V*inversesqrt(1.+dot(V,V));\n    \n    if (iFrame < 1) {\n    \n        Q = vec4(floor(U)+.5,1);\n        \n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"4sXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":2,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// tracking buffer\nMain \n    Q = vec4(-1);\n    int i = 0;\n    for (int x=-1;x<=1;x++)\n    for (int y=-1;y<=1;y++) \n    for (int z=-1;z<=1;z++) {\n       vec4 c = C(U+vec3(x,y,z));\n       for (int k = 0; k < 4; k++) if (c[k]>0.) {\n           vec3 u = d3(c[k]);\n           vec4 a = B(u);\n           if (cell(a.xyz-U))\n               Q[i++] = c[k];\n           if (i>3) break;\n       }\n       if (i>3) break;\n    }\n    \n    \n    \n        \n    if (iFrame < 1) {\n        Q = vec4(-1);\n        if (building(U)) {\n            Q.x = d1(U);\n        }\n    }\n    \n    \n}","name":"Buffer C","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XdfGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// velocity buffer\nMain \n    if (!building(U)) discard;\n    Q = A(U);\n}","name":"Buffer D","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"4XtcRr","date":"1734654981","viewed":216,"name":"Metal 3D","username":"wyatt","description":"3D molecular sim of metal molecules","likes":16,"published":3,"flags":32,"usePreview":0,"tags":["3d","fluid","physics","vorticity"],"hasliked":0,"parentid":"","parentname":""}}