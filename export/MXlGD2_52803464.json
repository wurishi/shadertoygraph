{"ver":"0.1","info":{"id":"MXlGD2","date":"1707955802","viewed":171,"name":"Portal - Blue and Orange","username":"Gfscalco","description":" A simple portal made out of an ellipsis and particles with trails","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["particles","learning","portal","trail","blueportal","orangeportal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author @gfscalco - 2024\n// A simple portal made out of an ellipsis and particles with trails\n\n#define PI 3.14159265359\n#define PORTAL_ORANGE vec3(1.000,0.5,0.000)\n#define PORTAL_BLUE vec3(0.0,0.5,1.0)\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\nfloat randi(in float i){\n    return fract(sin(i)*59687.98871);\n}\n\n\nvec2 particlePosition (in float radius,in vec2 offset,in float t)\n{\n\tvec2 pos;\n    t *= 1.0;\n    pos.y = offset.x + radius*cos(2.*t);\n    pos.x = offset.y + 0.8*radius*sin(t)*cos(t);\n    return pos;\n}\n\n//functions that creates a circle of radius _radius\nfloat circle(in vec2 _st, in float _radius, vec2 _pos){\n    vec2 l = _st-_pos;\n    return 1.-smoothstep(_radius-(_radius*0.9),\n                         _radius+(_radius*0.9),\n                         dot(l,l)*4.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = vec4(0, 0, 0, 1.0); \n    vec3 portal_color = PORTAL_BLUE;\n    if (mod(iTime,10.0) < 5.0){\n        portal_color = PORTAL_ORANGE;\n    }else{\n        portal_color = PORTAL_BLUE;\n    }  \n    \n    //Coordinates for the background ellipsis\n    vec2 ellipsis_uv = uv;\n    float ellipsis_x_scale = 2.5;\n    \n    ellipsis_uv = scale(vec2(ellipsis_x_scale,1.0)) * ellipsis_uv;\n    float ellipsisIn = circle(ellipsis_uv, 0.35, vec2(0.5*ellipsis_x_scale,0.5));\n    float ellipsisOut = circle(ellipsis_uv, 0.55, vec2(0.5*ellipsis_x_scale,0.5));\n    \n    //Particles detail\n    int trail_length = 100; \n    float particle_size = 0.003; \n    int particle_number = 35;\n    //Minimum distance between particles before applying randi\n    float offset_step = 1.*(PI/float(particle_number));\n    float particle_speed = 1.0;   \n\n    //Outter for is for the creation of each particle\n    for (int i = 0; i < particle_number; i++){        \n        float time_offset = float(i)*offset_step;      //Time offset for the difference in the path of the particle\n        float radius_offset = 0.1*randi(float(i)-0.1); //Aplying randomness to the distance between particles\n        float speed_offset = 30.0*radius_offset;       //Inner particles are faster\n        //Inner for is for the creation of the trail\n        for (int h = trail_length; h > 0; h--)\n        {\n            vec2 leftDot = particlePosition(-0.40 +radius_offset, vec2(0.5, 0.5), time_offset + (particle_speed+speed_offset)*iTime - (0.005 * float(h))); \n            float d = distance(leftDot, uv);\n            if (d < (particle_size))\n            {\n                fragColor = vec4(portal_color, 1.0) - 0.1-float(h)/float(trail_length);   \n            }\n\n        }\n    }\n    \n    //Painting the background ellipsis behind the particles      \n    fragColor.xyz += vec3(ellipsisOut-ellipsisIn)*portal_color; \n\n}","name":"Image","description":"","type":"image"}]}