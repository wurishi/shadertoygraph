{"ver":"0.1","info":{"id":"7sdBRM","date":"1656263002","viewed":91,"name":"Plasma in a square","username":"Shcherbakov","description":"Implementation is described here: https://habr.com/ru/post/657591/","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["plasma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    int colorIdx = int(texelFetch(iChannel1, ivec2(fragCoord), 0).x);\n    //if (texelFetch(iChannel1, ivec2(fragCoord), 0).y != 0.0)\n    fragColor = texelFetch(iChannel0, ivec2(colorIdx, 0), 0);\n\n    // Output to screen\n    //fragColor = texelFetch(iChannel0, ivec2(fragCoord.xy), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor.rgb = hsv2rgb(vec3(uv.x * 3.0, 1.0, 1.0));\n    fragColor.rgb *= vec3(sin(2.0 * uv.x * 3.14 * 2.0 + 3.14 * 1.5) * 0.5 + 0.5);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float lenSqr(vec2 v)\n{\n    return dot(v, v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy) / iResolution.xy;\n    int inited = int(texelFetch(iChannel0, ivec2(fragCoord), 0).y);\n    float previousIdx = texelFetch(iChannel0, ivec2(fragCoord), 0).x;\n    float radius = 0.1;\n    for (int i = 0; i < 5; ++i)\n    {\n        vec2 pos = texelFetch(iChannel1, ivec2(i, 0), 0).xy;\n\n        float len = min(\n            min(length(uv - pos), length(uv - fract(pos))),\n            min(length(uv - vec2(pos.x, fract(pos.y))), length(uv - vec2(fract(pos.x), pos.y))));\n        if (len < radius)\n        {\n            previousIdx += (1.0 - len / radius) * 2.0;\n            if (previousIdx > 800.0)\n                previousIdx -= 800.0;\n            inited = 1;\n        }\n    }\n    fragColor.x = previousIdx - 0.03;\n    fragColor.y = float(inited);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (fragCoord.x > 5.0 || fragCoord.y > 1.0)\n        return;\n    int idx = int(fragCoord.x);\n    vec2 pos = texelFetch(iChannel1, ivec2(idx, 0), 0).xy;\n    vec2 vel = texture(iChannel0, vec2(iTime * 0.1, (float(idx) + 0.5) / 1024.0)).xy * 2.0 - 1.0;\n    pos += vel * iTimeDelta * 2.0;\n    //pos = clamp(pos, vec2(-0.5), vec2(0.5));\n    fragColor.xy = pos;\n}","name":"Buffer C","description":"","type":"buffer"}]}