{"ver":"0.1","info":{"id":"MljXDt","date":"1450646894","viewed":844,"name":"Aimee's real kaleidoscope","username":"aimeemarks","description":"This kaleidoscope uses equilateral triangles.","likes":17,"published":1,"flags":2,"usePreview":0,"tags":["reflection","kaleidoscope","webcam","rotation","colourising"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec2 refl(vec2 p,vec2 o,vec2 n)\n{\n\treturn 2.0*o+2.0*n*dot(p-o,n)-p;\n}\n\nvec2 rot(vec2 p, vec2 o, float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n\treturn o + mat2(c, -s, s, c) * (p - o);\n}\n\n\nvoid mainImage( out vec4 col, in vec2 coo )\n{\n\tfloat l = sqrt(4.0/3.0);\n    vec2 uv = (coo - iResolution.xy*0.5)/min(iResolution.x,iResolution.y);\n    uv = uv*4.0;\n    uv.y = abs(fract((uv.y-1.0)*0.5)*2.0-1.0);\n    uv.x = fract(uv.x/l/3.0)*l*3.0;\n    if(uv.y < 2.0*uv.x/l) uv = refl(uv, vec2(0), vec2(0.5, sqrt(0.75)));\n    if(uv.y > 1.0) uv = refl(uv, vec2(0.0, 1.0), vec2(1.0, 0.0));\n    if(uv.y < -2.0*uv.x/l) uv = refl(uv, vec2(0), vec2(-0.5, sqrt(0.75)));\n    if(uv.y < 2.0*uv.x/l) uv = refl(uv, vec2(0), vec2(0.5, sqrt(0.75)));\n    if(uv.y > 1.0) uv = refl(uv, vec2(0.0, 1.0), vec2(1.0, 0.0));\n    if(uv.y < -2.0*uv.x/l) uv = refl(uv, vec2(0), vec2(-0.5, sqrt(0.75)));\n    uv.x = -uv.x*iChannelResolution[0].y/iChannelResolution[0].x + 0.5;\n    uv = rot(uv, vec2(0.5), iTime);\n    vec3 c = texture(iChannel0, uv).rgb;\n    c = floor(c*5.0)*0.25;\n\tcol = vec4(c, 1.0);\n    \n}\n\n","name":"","description":"","type":"image"}]}