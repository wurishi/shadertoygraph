{"ver":"0.1","info":{"id":"dtBfRW","date":"1707292892","viewed":82,"name":"acid trig layers","username":"akr51","description":"layers of trig functions and rotations","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.141592653589793\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= (iResolution.x / iResolution.y);\n    \n    vec3 color = vec3(0.0);\n    \n    float accumul = 0.0;\n    float num = 0.0;\n    uv.x = abs(uv.x);\n    \n    uv = vec2(length(uv), clamp(atan(uv.y, uv.x), -2.0 * PI, PI * 2.0));\n    \n    float t = iTime * 0.1;\n    \n    for (float i = 0.0; i < 7.0; ++i)\n    {\n      \n        accumul += 0.25 * sin(t);\n        num += 1.0;\n        \n        float ampl = 1.0 + (accumul / num);\n        \n        uv.x = (sin(uv.x + i * 0.1) + uv.x) * ampl;\n        uv.y = (sin(uv.y + i * 0.1) + uv.y) * ampl;\n\n        vec2 ruv = uv;\n        vec2 guv = uv;\n        vec2 buv = uv;\n\n        float rtoffseta = 0.1 + 0.1 * sin(accumul * 5.0);\n        float rtoffsetb = 0.01 + 0.01 * i;\n        ruv.x += t;\n        ruv = vec2(cos(ruv.x + i * 5.0) * cos(rtoffseta), ruv.y * sin(rtoffsetb));\n\n        float redfreq = 5.0;\n        float redphase = cos(guv.y + accumul);\n\n        color.r += sin((ruv.x - ruv.y * i) * redfreq) + redphase;\n\n        // green\n        float gtoffseta = 0.1;\n        float gtoffsetb = 0.02;\n        guv = vec2(guv.x * cos(gtoffseta), guv.y * sin(gtoffsetb * pow(sin(uv.x), 2.0)));\n\n        float greenfreq = 5.0;\n        float greenphase = sin(buv.x) + cos(sin(accumul));\n\n        color.g += sin((cos(guv.x) - sin(guv.y) + t * 0.5) * greenfreq) + greenphase;\n\n        // blue\n        float btoffseta = 0.1 + sin(accumul) * 0.01;\n        float btoffsetb = 0.02;\n        buv = vec2(cos(buv.x) * cos(accumul + btoffseta), buv.y * sin(accumul + btoffsetb));\n\n        float bluefreq = 5.0 ;\n        float bluephase = 0.5 * cos(accumul + 5.5) * 5.0;\n\n        color.b += sin((buv.x - buv.y + t + i * 4.0) * bluefreq) + bluephase;\n        \n        uv = uv * 2.2;\n        uv.x = cos(uv.x + iTime * 0.5);\n        uv.y = sin(uv.y + iTime * 0.5);\n        uv = vec2(length(uv) * 2.0, atan(uv.y, uv.x));\n\n    \n    }\n    \n    \n    \n    color.r = sin(iTime) / color.r + sin(color.g + iTime);\n    color.g = cos(iTime * 0.2) / color.b + sin(color.r + iTime * 0.5);\n    color.b = tan(iTime) / color.g + cos(color.b + iTime * 0.25);\n    \n    \n    color.r = 0.5 / pow(color.r, 5.0);\n    color.g = 0.5 / pow(color.g, 3.0);\n    color.b = 0.5 / pow(color.b, 5.0);\n    \n    color /= 100.0;\n    \n    fragColor = vec4(color, 1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}