{"ver":"0.1","info":{"id":"ddGfDW","date":"1698222257","viewed":36,"name":"Polar MV visualizer","username":"akr51","description":"How do I make it pulse so that the channel isn't a function of uv.x but pulsates with the amplitude (bass frequences better) of the waveform? It is playing sin the moment...  ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["polarcoords"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= (iResolution.x / iResolution.y);\n    \n    vec3 color = vec3(0.0);\n    vec2 pc = vec2(0.0);\n    \n    // How to poll amplitude from wav channel so\n    // that smooth pulsing instead of sharp and too fast?\n    float iterations = abs(sin(iTime)) * 19.0; \n    \n    for (float i = 0.0; i < iterations; ++i)\n    {\n\n        pc = vec2(length(uv), atan(uv.y, uv.x));\n        float isc = 2.0;\n        pc = vec2(pc.x + cos(i * isc), pc.y + sin(i * isc));\n    \n        float r = sin(cos(pc.y * 2.0 + cos(i * iTime * 0.5) + iTime * 0.3) + iTime);\n        float g = sin(sin(pc.y * 2.0 + sin(i * iTime * 0.75) + iTime * 0.4) + iTime * 0.4);\n        float b = cos(cos(pc.y * 1.0 + cos(i) + iTime * 0.1));\n        color += vec3(1.0 - smoothstep(r,  r + 0.2, pc.x), \n                      1.0 - smoothstep(g,  g + 0.2, pc.x), \n                      1.0 - smoothstep(b,  b + 0.2, pc.x)) / iterations;\n    }\n    \n    color.r = fract(color.r * 3.0 + iTime * 0.02);\n    color.g = fract(color.g * 3.0 + iTime * 0.03);\n    color.b = fract(color.b * 3.0 + iTime * 0.05);\n    \n    float bri = 0.7;\n    \n    color.r = (pow(sin(color.r * 3.0 + iTime), 7.0)) * bri;\n    color.g = (pow(sin(color.g * 5.0), 7.0)) * bri;\n    color.b = (pow(sin(color.b * 7.0), 9.0)) * bri;\n    \n    \n    fragColor = vec4(color, 1.0);\n    \n}\n","name":"Image","description":"","type":"image"}]}