{"ver":"0.1","info":{"id":"mscXDX","date":"1680503538","viewed":147,"name":"2d Shockwave","username":"Avendor","description":"2d shockwave effect","likes":10,"published":1,"flags":0,"usePreview":1,"tags":["shockwave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Separate variables for wave parameters\nfloat waveMagnitude = 10.0;\nfloat falloffPower = 0.8;\nfloat waveThickness = 0.1;\nfloat effectIntensity = 40.0;\nfloat innerRadius = 0.05;\nfloat compressionAmount = 0.2;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float offset = (iTime- floor(iTime))/iTime;\n    float CurrentTime = (iTime)*(offset);    \n\n\n    float ratio = iResolution.y/iResolution.x;\n\n    vec2 WaveCentre = vec2(0.5, 0.5);\n    WaveCentre.y *= ratio; \n\n    vec2 texCoord = fragCoord.xy / iResolution.xy;      \n    texCoord.y *= ratio;    \n    float Dist = distance(texCoord, WaveCentre);\n\n\n    if ((Dist <= ((CurrentTime) + (waveThickness))) && \n        (Dist >= ((CurrentTime) - (waveThickness)))) \n    {\n        float Diff = (Dist - CurrentTime); \n        float ScaleDiff = (1.0 - pow(abs(Diff * waveMagnitude), falloffPower)); \n        float DiffTime = (Diff  * ScaleDiff);\n\n        vec2 DiffTexCoord = normalize(texCoord - WaveCentre);         \n\n        // Apply compression in inner circle\n        if (Dist <= innerRadius) {\n            float compression = (1.0 - Dist / innerRadius) * compressionAmount;\n            texCoord -= DiffTexCoord * compression;\n        } else {\n            texCoord += ((DiffTexCoord * DiffTime) / (CurrentTime * Dist * effectIntensity));\n        }\n\n        // Sample the texture only once\n        vec4 Color = texture(iChannel0, texCoord);\n\n        //Blow out the color and reduce the effect over time\n        Color += (Color * ScaleDiff) / (CurrentTime * Dist * effectIntensity);\n\n        fragColor = Color; \n    } \n    else {\n        fragColor = texture(iChannel0, texCoord);\n    }\n}","name":"Image","description":"","type":"image"}]}