{"ver":"0.1","info":{"id":"wlKGz3","date":"1581081191","viewed":289,"name":"von kock fractal","username":"DolfinShark","description":"creating the von kock snowflake fractal","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    \n    float angle = (iTime * 0.2) / 3.1416;\n    angle = (angle - round(angle)) * 3.1416;\n    angle = 3.1416 / -6.;\n    \n    uv.x += .5;\n    float scale = 1.;\n    for(int i = 0; i < 25; i++) {\n        scale *= 3.;\n        uv *= 3.;\n        uv.x -= 1.5;\n        \n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        \n        //angle += cos(iTime * 0.05) * 6.2832;\n        //angle *= 2. * sin(iTime * 0.1);\n   \n        vec2 n = vec2(cos(angle), sin(angle));\n        uv -= 2. * n * min(0., dot(uv, n));\n    }\n    \n    float d = length(uv - vec2(clamp(uv.x, -1., 1.), 0.));\n    \n    \n    \n    d = smoothstep(1. / iResolution.y, 0., d / scale);\n    fragColor = vec4(d, d, d, 1.);\n}","name":"Image","description":"","type":"image"}]}