{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Basic sobel filter implementation\n// Jeroen Baert - jeroen.baert@cs.kuleuven.be\n// \n// www.forceflow.be\n\n\n// Use these parameters to fiddle with settings\nfloat step = 1.0;\n\nfloat intensity(in vec4 color){\n\treturn sqrt((color.x*color.x)+(color.y*color.y)+(color.z*color.z));\n}\n\nvec3 sobel(float stepx, float stepy, vec2 center){\n\t// get samples around pixel\n    float tleft = intensity(texture(iChannel0,center + vec2(-stepx,stepy)));\n    float left = intensity(texture(iChannel0,center + vec2(-stepx,0)));\n    float bleft = intensity(texture(iChannel0,center + vec2(-stepx,-stepy)));\n    float top = intensity(texture(iChannel0,center + vec2(0,stepy)));\n    float bottom = intensity(texture(iChannel0,center + vec2(0,-stepy)));\n    float tright = intensity(texture(iChannel0,center + vec2(stepx,stepy)));\n    float right = intensity(texture(iChannel0,center + vec2(stepx,0)));\n    float bright = intensity(texture(iChannel0,center + vec2(stepx,-stepy)));\n \n\t// Sobel masks (see http://en.wikipedia.org/wiki/Sobel_operator)\n\t//        1 0 -1     -1 -2 -1\n\t//    X = 2 0 -2  Y = 0  0  0\n\t//        1 0 -1      1  2  1\n\t\n\t// You could also use Scharr operator:\n\t//        3 0 -3        3 10   3\n\t//    X = 10 0 -10  Y = 0  0   0\n\t//        3 0 -3        -3 -10 -3\n \n    float x = tleft + 2.0*left + bleft - tright - 2.0*right - bright;\n    float y = -tleft - 2.0*top - tright + bleft + 2.0 * bottom + bright;\n    float color = sqrt((x*x) + (y*y));\n    return vec3(color,color,color);\n }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 color = texture(iChannel0, uv.xy);\n\tfragColor.xyz = sobel(step/iResolution[0], step/iResolution[1], uv);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xdf3Rf","date":"1376667761","viewed":7868,"name":"Sobel Filter","username":"Forceflow","description":"Based on http://en.wikipedia.org/wiki/Sobel_operator, can be used for edge detection.\nA very basic example to start other work from (and also my first submission to shadertoy ;) )","likes":69,"published":1,"flags":0,"usePreview":0,"tags":["abasicsobelfiltershader"],"hasliked":0,"parentid":"","parentname":""}}