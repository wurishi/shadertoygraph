{"ver":"0.1","info":{"id":"7ljGRW","date":"1623455237","viewed":86,"name":"Fork Ether jumpsplat1 188","username":"jumpsplat120","description":"A wild distance field in its natural habitat.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","fast","cheap","short"],"hasliked":0,"parentid":"MsjSW3","parentname":"Ether"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Ether by nimitz 2014 (twitter: @stormoid)\n// https://www.shadertoy.com/view/MsjSW3\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n// Contact the author for other licensing options\n\nmat2 m(float a){float c=cos(a), s=sin(a);return mat2(c,-s,s,c);}\n\nfloat map(vec3 p, float t){\n    p.xz *= m(t * 0.01);\n    p.xy *= m(t * 0.03);\n    vec3 q = p * 2. + t;\n    return length(p+vec3(sin(t*0.1)))*log(length(p)+1.) + sin(q.x+sin(q.z+sin(q.y)))*0.5 - 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float t = iTime * 0.05;\n\tvec2 p = fragCoord.xy/iResolution.y - vec2(1,.65);\n    vec3 cl = vec3(0.);\n    float d = 4.5;\n    for(int i=0; i <= 5; i++)\t{\n\t\tvec3 p = vec3(0,iMouse.y / 400.0, iMouse.x / 400.0 * 3.0) + normalize(vec3(p, -1.0)) * d;\n        float rz = map(p, t);\n\t\tfloat f =  clamp((rz - map(p+.1, t))*0.5, -.1, 1. );\n        vec3 l = vec3(0.1,0.3,.4) + vec3(5., 2.5, 3.5)*f;\n        cl = cl*l + smoothstep(iMouse.x / 800.0 * 2.5, .0, rz)*.7*l;\n\t\td += rz;\n\t}\n    fragColor = vec4(cl, 1.);\n}","name":"Image","description":"","type":"image"}]}