{"ver":"0.1","info":{"id":"wdjGDh","date":"1548773804","viewed":486,"name":"Radial FFT audio","username":"declension","description":"Simple but... entrancing?","likes":6,"published":1,"flags":64,"usePreview":0,"tags":["audio","techno","soundcloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"lllGDr","filepath":"https://soundcloud.com/bangingtechno-sets/banging-techno-sets-064","previewfilepath":"https://soundcloud.com/bangingtechno-sets/banging-techno-sets-064","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;   \n       \n    // It's not, at all, but it'll do for now.\n    float bass = 0.2 + 4. * log(texture(iChannel0, vec2(0.02, 0.0)).r \n                                + texture(iChannel0, vec2(0.03, 0.0)).r);\n\n    float d = length(uv) * 1.5;\n    vec4 audio = texture(iChannel0, vec2(d * (sin(iTime / 5.)  + 1.25) * 0.1, 0.0));\n\n    float amp = audio.r / 2.5;                   \n    fragColor = vec4(\n        smoothstep(0.0, d, amp) * bass,\n    \tsmoothstep(0.0, d, amp * 0.8) * (sin(iTime / 2.) + 1.) * 0.5 * bass,\n    \tsmoothstep(0.0, d, amp * 0.5) * (cos(iTime / 2.001) + 1.) * 0.25 * bass,\n   \t\t1.0\n    ); \n}","name":"Image","description":"","type":"image"}]}