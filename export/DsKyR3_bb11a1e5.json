{"ver":"0.1","info":{"id":"DsKyR3","date":"1696387247","viewed":41,"name":"floatBitsToUint bug?","username":"j91000","description":"For some reason I'm getting a different result when I encapsulate floatBitsToUint and uintBitsToFloat than when i call them directly. What's going on? Are my argument/ and return types wrong??? I'm stumped","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test","bug","issue"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat bitAt(uint p,float coord){\n    uint index=uint(coord*32.);\n    uint mask=1u<<index;\n    return float((mask&p)>>index);\n}\n\nfloat u2f(uint p){\nreturn uintBitsToFloat(p);\n}\nuint f2u(float p){\nreturn floatBitsToUint(p);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    //convert 633u to float and back\n    uint cap=f2u(u2f(633u));\n    \n    //convert 633u to float and back without using f2u or u2f\n    uint nocap=floatBitsToUint(uintBitsToFloat(633u));\n    float color=0.;\n    \n    \n    if(uv.y<.5){\n    color=bitAt(cap,uv.x); //display bit pattern of u2f/f2u on bottom\n    }\n    else{\n    color=bitAt(nocap,uv.x);\n    }\n    fragColor = vec4(color);\n}","name":"Image","description":"","type":"image"}]}