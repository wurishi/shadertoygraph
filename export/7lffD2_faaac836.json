{"ver":"0.1","info":{"id":"7lffD2","date":"1651491923","viewed":242,"name":"Direct cubic bezier distance","username":"gleboneloner","description":"Direct numerical approximation of the distance from point to a cubic bezier curve.\nProbably completely unsuitable for practical use.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","bezier","cubic","numeric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//   How it works:\n//\n//   1) for given parametric curve:\n//\n//         c(t)=[x(t),y(t)]   ( where x(t) and y(t) are rational functions )\n//\n//      and point:\n//\n//         p = [u,v]\n//\n//      we need to find out what is the smallest radius of the circle\n//      centered at the point <p> that this circle needs to\n//      touch the curve <c>, but not intersect it.\n//\n//      the radius of this circle is the distance from point <p> to curve <c>.\n//\n//   2) curve <c> touches circle centered at point <p>\n//      with radius <R> when polynomial intersection equation:\n//\n//         (x(t)-u)^2 + (y(t)-v)^2 - R^2 = 0   (1)\n//\n//      have multiple root.\n//\n//   3) polynomial equation have multiple root when its discriminant is zero.\n//\n//   4) the discriminant of (1), in turn, is also a polynomial in R.\n//\n//   5) find the smallest root of this polynomial, which is the desired\n//      minimum distance from point <p> to curve <c>.\n\n///////////////////////////\n\n//   I think that this method have big problem:\n//   coefficients of final equation is very, very big or very small.\n//   Visual artifacts are observed when working with both float and double (GLSL 460 double).\n//   If you know how to avoid this problem please let me know.\n\n///////////////////////////\n\nfloat cubic ( vec2 a, vec2 b, vec2 c, vec2 d, vec2 uv ) {\n\n    vec2 S1 = 3.0*(b-c)-a+d;\n    vec2 S2 = 3.0*(c+a-b-b);\n    vec2 S3 = 3.0*(b-a);\n    vec2 S4 = a-uv;\n\n    float U1 = 1.0*dot(S1,S1);\n    float U2 = 2.0*dot(S1,S2);\n    float U3 = 2.0*dot(S1,S3) + 1.0*dot(S2,S2);\n    float U4 = 2.0*dot(S1,S4) + 2.0*dot(S2,S3);\n    float U5 = 2.0*dot(S2,S4) + 1.0*dot(S3,S3);\n    float U6 = 2.0*dot(S3,S4);\n    float U7 = 1.0*dot(S4,S4);\n\n    float U15 = U1*U1*U1*U1*U1, U14 = U1*U1*U1*U1, U13 = U1*U1*U1, U22 = U2*U2, U42 = U4*U4, U12 = U1*U1, U23 = U2*U2*U2, U33 = U3*U3*U3, U32 = U3*U3, U24 = U2*U2*U2*U2, U26 = U2*U2*U2*U2*U2*U2, U72 = U7*U7, U62 = U6*U6, U25 = U2*U2*U2*U2*U2, U53 = U5*U5*U5, U52 = U5*U5, U34 = U3*U3*U3*U3, U44 = U4*U4*U4*U4, U43 = U4*U4*U4, U36 = U3*U3*U3*U3*U3*U3, U35 = U3*U3*U3*U3*U3, U73 = U7*U7*U7, U63 = U6*U6*U6, U54 = U5*U5*U5*U5, U46 = U4*U4*U4*U4*U4*U4, U45 = U4*U4*U4*U4*U4, U74 = U7*U7*U7*U7, U64 = U6*U6*U6*U6, U56 = U5*U5*U5*U5*U5*U5, U55 = U5*U5*U5*U5*U5, U75 = U7*U7*U7*U7*U7, U66 = U6*U6*U6*U6*U6*U6, U65 = U6*U6*U6*U6*U6;\n\n    float H1 = -46656.0*U15;\n    float H2 = 233280.0*U15*U7-38880.0*U14*U2*U6-62208.0*U14*U3*U5+32400.0*U13*U22*U5-34992.0*U14*U42+77760.0*U13*U2*U3*U4-27000.0*U12*U23*U4+13824.0*U13*U33-43200.0*U12*U22*U32+22500.0*U1*U24*U3-3125.0*U26;\n    float H3 = -466560.0*U15*U72+155520.0*U14*U2*U6*U7+248832.0*U14*U3*U5*U7-129600.0*U13*U22*U5*U7+139968.0*U14*U42*U7-311040.0*U13*U2*U3*U4*U7+108000.0*U12*U23*U4*U7-55296.0*U13*U33*U7+172800.0*U12*U22*U32*U7-90000.0*U1*U24*U3*U7+12500.0*U26*U7-32400.0*U14*U3*U62+540.0*U13*U22*U62-77760.0*U14*U4*U5*U6+31968.0*U13*U2*U3*U5*U6-1800.0*U12*U23*U5*U6+15552.0*U13*U2*U42*U6+46656.0*U13*U32*U4*U6-31320.0*U12*U22*U3*U4*U6+2250.0*U1*U24*U4*U6-21888.0*U12*U2*U33*U6+15600.0*U1*U23*U32*U6-2500.0*U25*U3*U6-13824.0*U14*U53+46656.0*U13*U2*U4*U52-17280.0*U13*U32*U52-6480.0*U12*U22*U3*U52+1500.0*U1*U24*U52+3888.0*U13*U3*U42*U5-27540.0*U12*U22*U42*U5-3456.0*U12*U2*U32*U4*U5+19800.0*U1*U23*U3*U4*U5-3750.0*U25*U4*U5+9216.0*U12*U34*U5-10560.0*U1*U22*U33*U5+2000.0*U24*U32*U5-8748.0*U13*U44+21384.0*U12*U2*U3*U43-1350.0*U1*U23*U43-8640.0*U12*U33*U42-9720.0*U1*U22*U32*U42+2250.0*U24*U3*U42+6912.0*U1*U2*U34*U4-1600.0*U23*U33*U4-1024.0*U1*U36+256.0*U22*U35;\n    float H4 = 466560.0*U15*U73-233280.0*U14*U2*U6*U72-373248.0*U14*U3*U5*U72+194400.0*U13*U22*U5*U72-209952.0*U14*U42*U72+466560.0*U13*U2*U3*U4*U72-162000.0*U12*U23*U4*U72+82944.0*U13*U33*U72-259200.0*U12*U22*U32*U72+135000.0*U1*U24*U3*U72-18750.0*U26*U72+97200.0*U14*U3*U62*U7-1620.0*U13*U22*U62*U7+233280.0*U14*U4*U5*U6*U7-95904.0*U13*U2*U3*U5*U6*U7+5400.0*U12*U23*U5*U6*U7-46656.0*U13*U2*U42*U6*U7-139968.0*U13*U32*U4*U6*U7+93960.0*U12*U22*U3*U4*U6*U7-6750.0*U1*U24*U4*U6*U7+65664.0*U12*U2*U33*U6*U7-46800.0*U1*U23*U32*U6*U7+7500.0*U25*U3*U6*U7+41472.0*U14*U53*U7-139968.0*U13*U2*U4*U52*U7+51840.0*U13*U32*U52*U7+19440.0*U12*U22*U3*U52*U7-4500.0*U1*U24*U52*U7-11664.0*U13*U3*U42*U5*U7+82620.0*U12*U22*U42*U5*U7+10368.0*U12*U2*U32*U4*U5*U7-59400.0*U1*U23*U3*U4*U5*U7+11250.0*U25*U4*U5*U7-27648.0*U12*U34*U5*U7+31680.0*U1*U22*U33*U5*U7-6000.0*U24*U32*U5*U7+26244.0*U13*U44*U7-64152.0*U12*U2*U3*U43*U7+4050.0*U1*U23*U43*U7+25920.0*U12*U33*U42*U7+29160.0*U1*U22*U32*U42*U7-6750.0*U24*U3*U42*U7-20736.0*U1*U2*U34*U4*U7+4800.0*U23*U33*U4*U7+3072.0*U1*U36*U7-768.0*U22*U35*U7-27000.0*U14*U4*U63+1800.0*U13*U2*U3*U63-410.0*U12*U23*U63-43200.0*U14*U52*U62+31320.0*U13*U2*U4*U5*U62+6480.0*U13*U32*U5*U62-8748.0*U12*U22*U3*U5*U62+1700.0*U1*U24*U5*U62+27540.0*U13*U3*U42*U62-15417.0*U12*U22*U42*U62-16632.0*U12*U2*U32*U4*U62+12330.0*U1*U23*U3*U4*U62-2000.0*U25*U4*U62+192.0*U12*U34*U62-248.0*U1*U22*U33*U62+50.0*U24*U32*U62+21888.0*U13*U2*U53*U6+3456.0*U13*U3*U4*U52*U6-16632.0*U12*U22*U4*U52*U6-15264.0*U12*U2*U32*U52*U6+13040.0*U1*U23*U3*U52*U6-2250.0*U25*U52*U6-21384.0*U13*U43*U5*U6+22896.0*U12*U2*U3*U42*U5*U6-1980.0*U1*U23*U42*U5*U6+5760.0*U12*U33*U4*U5*U6-10152.0*U1*U22*U32*U4*U5*U6+2050.0*U24*U3*U4*U5*U6+640.0*U1*U2*U34*U5*U6-160.0*U23*U33*U5*U6+6318.0*U12*U2*U44*U6-5832.0*U12*U32*U43*U6-3942.0*U1*U22*U3*U43*U6+900.0*U24*U43*U6+4464.0*U1*U2*U33*U42*U6-1020.0*U23*U32*U42*U6-768.0*U1*U35*U4*U6+192.0*U22*U34*U4*U6-9216.0*U13*U3*U54+192.0*U12*U22*U54+8640.0*U13*U42*U53+5760.0*U12*U2*U3*U4*U53+120.0*U1*U23*U4*U53+4352.0*U12*U33*U53-4816.0*U1*U22*U32*U53+900.0*U24*U3*U53-5832.0*U12*U2*U43*U52-8208.0*U12*U32*U42*U52+4536.0*U1*U22*U3*U42*U52-825.0*U24*U42*U52+2496.0*U1*U2*U33*U4*U52-560.0*U23*U32*U4*U52-512.0*U1*U35*U52+128.0*U22*U34*U52+4860.0*U12*U3*U44*U5-162.0*U1*U22*U44*U5-2808.0*U1*U2*U32*U43*U5+630.0*U23*U3*U43*U5+576.0*U1*U34*U42*U5-144.0*U22*U33*U42*U5-729.0*U12*U46+486.0*U1*U2*U3*U45-108.0*U23*U45-108.0*U1*U33*U44+27.0*U22*U32*U44;\n    float H5 = -233280.0*U15*U74+155520.0*U14*U2*U6*U73+248832.0*U14*U3*U5*U73-129600.0*U13*U22*U5*U73+139968.0*U14*U42*U73-311040.0*U13*U2*U3*U4*U73+108000.0*U12*U23*U4*U73-55296.0*U13*U33*U73+172800.0*U12*U22*U32*U73-90000.0*U1*U24*U3*U73+12500.0*U26*U73-97200.0*U14*U3*U62*U72+1620.0*U13*U22*U62*U72-233280.0*U14*U4*U5*U6*U72+95904.0*U13*U2*U3*U5*U6*U72-5400.0*U12*U23*U5*U6*U72+46656.0*U13*U2*U42*U6*U72+139968.0*U13*U32*U4*U6*U72-93960.0*U12*U22*U3*U4*U6*U72+6750.0*U1*U24*U4*U6*U72-65664.0*U12*U2*U33*U6*U72+46800.0*U1*U23*U32*U6*U72-7500.0*U25*U3*U6*U72-41472.0*U14*U53*U72+139968.0*U13*U2*U4*U52*U72-51840.0*U13*U32*U52*U72-19440.0*U12*U22*U3*U52*U72+4500.0*U1*U24*U52*U72+11664.0*U13*U3*U42*U5*U72-82620.0*U12*U22*U42*U5*U72-10368.0*U12*U2*U32*U4*U5*U72+59400.0*U1*U23*U3*U4*U5*U72-11250.0*U25*U4*U5*U72+27648.0*U12*U34*U5*U72-31680.0*U1*U22*U33*U5*U72+6000.0*U24*U32*U5*U72-26244.0*U13*U44*U72+64152.0*U12*U2*U3*U43*U72-4050.0*U1*U23*U43*U72-25920.0*U12*U33*U42*U72-29160.0*U1*U22*U32*U42*U72+6750.0*U24*U3*U42*U72+20736.0*U1*U2*U34*U4*U72-4800.0*U23*U33*U4*U72-3072.0*U1*U36*U72+768.0*U22*U35*U72+54000.0*U14*U4*U63*U7-3600.0*U13*U2*U3*U63*U7+820.0*U12*U23*U63*U7+86400.0*U14*U52*U62*U7-62640.0*U13*U2*U4*U5*U62*U7-12960.0*U13*U32*U5*U62*U7+17496.0*U12*U22*U3*U5*U62*U7-3400.0*U1*U24*U5*U62*U7-55080.0*U13*U3*U42*U62*U7+30834.0*U12*U22*U42*U62*U7+33264.0*U12*U2*U32*U4*U62*U7-24660.0*U1*U23*U3*U4*U62*U7+4000.0*U25*U4*U62*U7-384.0*U12*U34*U62*U7+496.0*U1*U22*U33*U62*U7-100.0*U24*U32*U62*U7-43776.0*U13*U2*U53*U6*U7-6912.0*U13*U3*U4*U52*U6*U7+33264.0*U12*U22*U4*U52*U6*U7+30528.0*U12*U2*U32*U52*U6*U7-26080.0*U1*U23*U3*U52*U6*U7+4500.0*U25*U52*U6*U7+42768.0*U13*U43*U5*U6*U7-45792.0*U12*U2*U3*U42*U5*U6*U7+3960.0*U1*U23*U42*U5*U6*U7-11520.0*U12*U33*U4*U5*U6*U7+20304.0*U1*U22*U32*U4*U5*U6*U7-4100.0*U24*U3*U4*U5*U6*U7-1280.0*U1*U2*U34*U5*U6*U7+320.0*U23*U33*U5*U6*U7-12636.0*U12*U2*U44*U6*U7+11664.0*U12*U32*U43*U6*U7+7884.0*U1*U22*U3*U43*U6*U7-1800.0*U24*U43*U6*U7-8928.0*U1*U2*U33*U42*U6*U7+2040.0*U23*U32*U42*U6*U7+1536.0*U1*U35*U4*U6*U7-384.0*U22*U34*U4*U6*U7+18432.0*U13*U3*U54*U7-384.0*U12*U22*U54*U7-17280.0*U13*U42*U53*U7-11520.0*U12*U2*U3*U4*U53*U7-240.0*U1*U23*U4*U53*U7-8704.0*U12*U33*U53*U7+9632.0*U1*U22*U32*U53*U7-1800.0*U24*U3*U53*U7+11664.0*U12*U2*U43*U52*U7+16416.0*U12*U32*U42*U52*U7-9072.0*U1*U22*U3*U42*U52*U7+1650.0*U24*U42*U52*U7-4992.0*U1*U2*U33*U4*U52*U7+1120.0*U23*U32*U4*U52*U7+1024.0*U1*U35*U52*U7-256.0*U22*U34*U52*U7-9720.0*U12*U3*U44*U5*U7+324.0*U1*U22*U44*U5*U7+5616.0*U1*U2*U32*U43*U5*U7-1260.0*U23*U3*U43*U5*U7-1152.0*U1*U34*U42*U5*U7+288.0*U22*U33*U42*U5*U7+1458.0*U12*U46*U7-972.0*U1*U2*U3*U45*U7+216.0*U23*U45*U7+216.0*U1*U33*U44*U7-54.0*U22*U32*U44*U7-22500.0*U14*U5*U64+2250.0*U13*U2*U4*U64+1500.0*U13*U32*U64-1700.0*U12*U22*U3*U64+320.0*U1*U24*U64+15600.0*U13*U2*U52*U63+19800.0*U13*U3*U4*U5*U63-12330.0*U12*U22*U4*U5*U63-13040.0*U12*U2*U32*U5*U63+9768.0*U1*U23*U3*U5*U63-1600.0*U25*U5*U63-1350.0*U13*U43*U63+1980.0*U12*U2*U3*U42*U63-208.0*U1*U23*U42*U63-120.0*U12*U33*U4*U63-682.0*U1*U22*U32*U4*U63+160.0*U24*U3*U4*U63+144.0*U1*U2*U34*U63-36.0*U23*U33*U63-10560.0*U13*U3*U53*U62+248.0*U12*U22*U53*U62-9720.0*U13*U42*U52*U62+10152.0*U12*U2*U3*U4*U52*U62-682.0*U1*U23*U4*U52*U62+4816.0*U12*U33*U52*U62-5428.0*U1*U22*U32*U52*U62+1020.0*U24*U3*U52*U62+3942.0*U12*U2*U43*U5*U62-4536.0*U12*U32*U42*U5*U62-2412.0*U1*U22*U3*U42*U5*U62+560.0*U24*U42*U5*U62+3272.0*U1*U2*U33*U4*U5*U62-746.0*U23*U32*U4*U5*U62-576.0*U1*U35*U5*U62+144.0*U22*U34*U5*U62+162.0*U12*U3*U44*U62-108.0*U1*U2*U32*U43*U62+24.0*U23*U3*U43*U62+24.0*U1*U34*U42*U62-6.0*U22*U33*U42*U62+6912.0*U13*U4*U54*U6-640.0*U12*U2*U3*U54*U6+144.0*U1*U23*U54*U6-4464.0*U12*U2*U42*U53*U6-2496.0*U12*U32*U4*U53*U6+3272.0*U1*U22*U3*U4*U53*U6-630.0*U24*U4*U53*U6-96.0*U1*U2*U33*U53*U6+24.0*U23*U32*U53*U6+2808.0*U12*U3*U43*U52*U6-108.0*U1*U22*U43*U52*U6-1584.0*U1*U2*U32*U42*U52*U6+356.0*U23*U3*U42*U52*U6+320.0*U1*U34*U4*U52*U6-80.0*U22*U33*U4*U52*U6-486.0*U12*U45*U5*U6+324.0*U1*U2*U3*U44*U5*U6-72.0*U23*U44*U5*U6-72.0*U1*U33*U43*U5*U6+18.0*U22*U32*U43*U5*U6-1024.0*U13*U56+768.0*U12*U2*U4*U55+512.0*U12*U32*U55-576.0*U1*U22*U3*U55+108.0*U24*U55-576.0*U12*U3*U42*U54+24.0*U1*U22*U42*U54+320.0*U1*U2*U32*U4*U54-72.0*U23*U3*U4*U54-64.0*U1*U34*U54+16.0*U22*U33*U54+108.0*U12*U44*U53-72.0*U1*U2*U3*U43*U53+16.0*U23*U43*U53+16.0*U1*U33*U42*U53-4.0*U22*U32*U42*U53;\n    float H6 = 46656.0*U15*U75-38880.0*U14*U2*U6*U74-62208.0*U14*U3*U5*U74+32400.0*U13*U22*U5*U74-34992.0*U14*U42*U74+77760.0*U13*U2*U3*U4*U74-27000.0*U12*U23*U4*U74+13824.0*U13*U33*U74-43200.0*U12*U22*U32*U74+22500.0*U1*U24*U3*U74-3125.0*U26*U74+32400.0*U14*U3*U62*U73-540.0*U13*U22*U62*U73+77760.0*U14*U4*U5*U6*U73-31968.0*U13*U2*U3*U5*U6*U73+1800.0*U12*U23*U5*U6*U73-15552.0*U13*U2*U42*U6*U73-46656.0*U13*U32*U4*U6*U73+31320.0*U12*U22*U3*U4*U6*U73-2250.0*U1*U24*U4*U6*U73+21888.0*U12*U2*U33*U6*U73-15600.0*U1*U23*U32*U6*U73+2500.0*U25*U3*U6*U73+13824.0*U14*U53*U73-46656.0*U13*U2*U4*U52*U73+17280.0*U13*U32*U52*U73+6480.0*U12*U22*U3*U52*U73-1500.0*U1*U24*U52*U73-3888.0*U13*U3*U42*U5*U73+27540.0*U12*U22*U42*U5*U73+3456.0*U12*U2*U32*U4*U5*U73-19800.0*U1*U23*U3*U4*U5*U73+3750.0*U25*U4*U5*U73-9216.0*U12*U34*U5*U73+10560.0*U1*U22*U33*U5*U73-2000.0*U24*U32*U5*U73+8748.0*U13*U44*U73-21384.0*U12*U2*U3*U43*U73+1350.0*U1*U23*U43*U73+8640.0*U12*U33*U42*U73+9720.0*U1*U22*U32*U42*U73-2250.0*U24*U3*U42*U73-6912.0*U1*U2*U34*U4*U73+1600.0*U23*U33*U4*U73+1024.0*U1*U36*U73-256.0*U22*U35*U73-27000.0*U14*U4*U63*U72+1800.0*U13*U2*U3*U63*U72-410.0*U12*U23*U63*U72-43200.0*U14*U52*U62*U72+31320.0*U13*U2*U4*U5*U62*U72+6480.0*U13*U32*U5*U62*U72-8748.0*U12*U22*U3*U5*U62*U72+1700.0*U1*U24*U5*U62*U72+27540.0*U13*U3*U42*U62*U72-15417.0*U12*U22*U42*U62*U72-16632.0*U12*U2*U32*U4*U62*U72+12330.0*U1*U23*U3*U4*U62*U72-2000.0*U25*U4*U62*U72+192.0*U12*U34*U62*U72-248.0*U1*U22*U33*U62*U72+50.0*U24*U32*U62*U72+21888.0*U13*U2*U53*U6*U72+3456.0*U13*U3*U4*U52*U6*U72-16632.0*U12*U22*U4*U52*U6*U72-15264.0*U12*U2*U32*U52*U6*U72+13040.0*U1*U23*U3*U52*U6*U72-2250.0*U25*U52*U6*U72-21384.0*U13*U43*U5*U6*U72+22896.0*U12*U2*U3*U42*U5*U6*U72-1980.0*U1*U23*U42*U5*U6*U72+5760.0*U12*U33*U4*U5*U6*U72-10152.0*U1*U22*U32*U4*U5*U6*U72+2050.0*U24*U3*U4*U5*U6*U72+640.0*U1*U2*U34*U5*U6*U72-160.0*U23*U33*U5*U6*U72+6318.0*U12*U2*U44*U6*U72-5832.0*U12*U32*U43*U6*U72-3942.0*U1*U22*U3*U43*U6*U72+900.0*U24*U43*U6*U72+4464.0*U1*U2*U33*U42*U6*U72-1020.0*U23*U32*U42*U6*U72-768.0*U1*U35*U4*U6*U72+192.0*U22*U34*U4*U6*U72-9216.0*U13*U3*U54*U72+192.0*U12*U22*U54*U72+8640.0*U13*U42*U53*U72+5760.0*U12*U2*U3*U4*U53*U72+120.0*U1*U23*U4*U53*U72+4352.0*U12*U33*U53*U72-4816.0*U1*U22*U32*U53*U72+900.0*U24*U3*U53*U72-5832.0*U12*U2*U43*U52*U72-8208.0*U12*U32*U42*U52*U72+4536.0*U1*U22*U3*U42*U52*U72-825.0*U24*U42*U52*U72+2496.0*U1*U2*U33*U4*U52*U72-560.0*U23*U32*U4*U52*U72-512.0*U1*U35*U52*U72+128.0*U22*U34*U52*U72+4860.0*U12*U3*U44*U5*U72-162.0*U1*U22*U44*U5*U72-2808.0*U1*U2*U32*U43*U5*U72+630.0*U23*U3*U43*U5*U72+576.0*U1*U34*U42*U5*U72-144.0*U22*U33*U42*U5*U72-729.0*U12*U46*U72+486.0*U1*U2*U3*U45*U72-108.0*U23*U45*U72-108.0*U1*U33*U44*U72+27.0*U22*U32*U44*U72+22500.0*U14*U5*U64*U7-2250.0*U13*U2*U4*U64*U7-1500.0*U13*U32*U64*U7+1700.0*U12*U22*U3*U64*U7-320.0*U1*U24*U64*U7-15600.0*U13*U2*U52*U63*U7-19800.0*U13*U3*U4*U5*U63*U7+12330.0*U12*U22*U4*U5*U63*U7+13040.0*U12*U2*U32*U5*U63*U7-9768.0*U1*U23*U3*U5*U63*U7+1600.0*U25*U5*U63*U7+1350.0*U13*U43*U63*U7-1980.0*U12*U2*U3*U42*U63*U7+208.0*U1*U23*U42*U63*U7+120.0*U12*U33*U4*U63*U7+682.0*U1*U22*U32*U4*U63*U7-160.0*U24*U3*U4*U63*U7-144.0*U1*U2*U34*U63*U7+36.0*U23*U33*U63*U7+10560.0*U13*U3*U53*U62*U7-248.0*U12*U22*U53*U62*U7+9720.0*U13*U42*U52*U62*U7-10152.0*U12*U2*U3*U4*U52*U62*U7+682.0*U1*U23*U4*U52*U62*U7-4816.0*U12*U33*U52*U62*U7+5428.0*U1*U22*U32*U52*U62*U7-1020.0*U24*U3*U52*U62*U7-3942.0*U12*U2*U43*U5*U62*U7+4536.0*U12*U32*U42*U5*U62*U7+2412.0*U1*U22*U3*U42*U5*U62*U7-560.0*U24*U42*U5*U62*U7-3272.0*U1*U2*U33*U4*U5*U62*U7+746.0*U23*U32*U4*U5*U62*U7+576.0*U1*U35*U5*U62*U7-144.0*U22*U34*U5*U62*U7-162.0*U12*U3*U44*U62*U7+108.0*U1*U2*U32*U43*U62*U7-24.0*U23*U3*U43*U62*U7-24.0*U1*U34*U42*U62*U7+6.0*U22*U33*U42*U62*U7-6912.0*U13*U4*U54*U6*U7+640.0*U12*U2*U3*U54*U6*U7-144.0*U1*U23*U54*U6*U7+4464.0*U12*U2*U42*U53*U6*U7+2496.0*U12*U32*U4*U53*U6*U7-3272.0*U1*U22*U3*U4*U53*U6*U7+630.0*U24*U4*U53*U6*U7+96.0*U1*U2*U33*U53*U6*U7-24.0*U23*U32*U53*U6*U7-2808.0*U12*U3*U43*U52*U6*U7+108.0*U1*U22*U43*U52*U6*U7+1584.0*U1*U2*U32*U42*U52*U6*U7-356.0*U23*U3*U42*U52*U6*U7-320.0*U1*U34*U4*U52*U6*U7+80.0*U22*U33*U4*U52*U6*U7+486.0*U12*U45*U5*U6*U7-324.0*U1*U2*U3*U44*U5*U6*U7+72.0*U23*U44*U5*U6*U7+72.0*U1*U33*U43*U5*U6*U7-18.0*U22*U32*U43*U5*U6*U7+1024.0*U13*U56*U7-768.0*U12*U2*U4*U55*U7-512.0*U12*U32*U55*U7+576.0*U1*U22*U3*U55*U7-108.0*U24*U55*U7+576.0*U12*U3*U42*U54*U7-24.0*U1*U22*U42*U54*U7-320.0*U1*U2*U32*U4*U54*U7+72.0*U23*U3*U4*U54*U7+64.0*U1*U34*U54*U7-16.0*U22*U33*U54*U7-108.0*U12*U44*U53*U7+72.0*U1*U2*U3*U43*U53*U7-16.0*U23*U43*U53*U7-16.0*U1*U33*U42*U53*U7+4.0*U22*U32*U42*U53*U7-3125.0*U14*U66+2500.0*U13*U2*U5*U65+3750.0*U13*U3*U4*U65-2000.0*U12*U22*U4*U65-2250.0*U12*U2*U32*U65+1600.0*U1*U23*U3*U65-256.0*U25*U65-2000.0*U13*U3*U52*U64+50.0*U12*U22*U52*U64-2250.0*U13*U42*U5*U64+2050.0*U12*U2*U3*U4*U5*U64-160.0*U1*U23*U4*U5*U64+900.0*U12*U33*U5*U64-1020.0*U1*U22*U32*U5*U64+192.0*U24*U3*U5*U64+900.0*U12*U2*U43*U64-825.0*U12*U32*U42*U64-560.0*U1*U22*U3*U42*U64+128.0*U24*U42*U64+630.0*U1*U2*U33*U4*U64-144.0*U23*U32*U4*U64-108.0*U1*U35*U64+27.0*U22*U34*U64+1600.0*U13*U4*U53*U63-160.0*U12*U2*U3*U53*U63+36.0*U1*U23*U53*U63-1020.0*U12*U2*U42*U52*U63-560.0*U12*U32*U4*U52*U63+746.0*U1*U22*U3*U4*U52*U63-144.0*U24*U4*U52*U63-24.0*U1*U2*U33*U52*U63+6.0*U23*U32*U52*U63+630.0*U12*U3*U43*U5*U63-24.0*U1*U22*U43*U5*U63-356.0*U1*U2*U32*U42*U5*U63+80.0*U23*U3*U42*U5*U63+72.0*U1*U34*U4*U5*U63-18.0*U22*U33*U4*U5*U63-108.0*U12*U45*U63+72.0*U1*U2*U3*U44*U63-16.0*U23*U44*U63-16.0*U1*U33*U43*U63+4.0*U22*U32*U43*U63-256.0*U13*U55*U62+192.0*U12*U2*U4*U54*U62+128.0*U12*U32*U54*U62-144.0*U1*U22*U3*U54*U62+27.0*U24*U54*U62-144.0*U12*U3*U42*U53*U62+6.0*U1*U22*U42*U53*U62+80.0*U1*U2*U32*U4*U53*U62-18.0*U23*U3*U4*U53*U62-16.0*U1*U34*U53*U62+4.0*U22*U33*U53*U62+27.0*U12*U44*U52*U62-18.0*U1*U2*U3*U43*U52*U62+4.0*U23*U43*U52*U62+4.0*U1*U33*U42*U52*U62-U22*U32*U42*U52*U62;\n\n    float n = 0.0;\n\n    for ( int i = 0; i < 20; i += 1 ) {\n\n        float F1 = n*(n*(n*(n*(H1*n+H2)+H3)+H4)+H5)+H6;\n        float F2 = n*(n*(n*(5.0*H1*n+4.0*H2)+3.0*H3)+2.0*H4)+H5;\n\n        n = n - F1/F2;\n\n    }\n\n    return sqrt(n);\n\n}\n\nvoid mainImage ( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec2 a = vec2( iResolution.x*0.5, iResolution.y*0.2 );\n    vec2 b = vec2( iResolution.x*0.33, iResolution.y*0.25 );\n    vec2 c = iMouse.xy;\n    vec2 d = vec2( iResolution.x*0.5, iResolution.y*0.73 );\n    vec2 uv = fragCoord;\n    \n    if ( iMouse.z == 0.0 ) c = vec2( iResolution.x*0.2, iResolution.y*0.6 );\n\n    float R = 100.0;\n\n \tfloat n = cubic( a/R, b/R, c/R, d/R, uv/R ) * R;\n    \n    vec4 color = mix( vec4(0.4,0.6,0.8,1), vec4(0.6,0.2,0.3,1), step( 0.0, cos(n/1.2) ) );\n\n    color = color * min(abs(cos(n/1.2)*1.2),1.0) * (1.4-1.2/exp(n/40.0));\n    \n    color = mix( vec4(1), color, smoothstep( 0.0, 1.8, n ) );\n    \n    color = clamp( color, 0.0, 1.0 );\n    \n    color = mix( vec4(0,0,0,1), color, smoothstep( 7.5, 8.5, min(distance(a,uv),distance(d,uv)) ) );\n    color = mix( vec4(0.2,0.8,0.7,1.0), color, smoothstep( 5.5, 6.5, min(distance(a,uv),distance(d,uv)) ) );\n    color = mix( vec4(0,0,0,1), color, smoothstep( 7.5, 8.5, min(distance(b,uv),distance(c,uv)) ) );\n    color = mix( vec4(1.0,0.7,0.2,1.0), color, smoothstep( 5.5, 6.5, min(distance(b,uv),distance(c,uv)) ) );\n    \n    fragColor = color;\n    \n}","name":"Image","description":"","type":"image"}]}