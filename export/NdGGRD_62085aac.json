{"ver":"0.1","info":{"id":"NdGGRD","date":"1631142682","viewed":68,"name":"Scaling 2D Matrice with Circles","username":"xXx_T0SHIII_xXx","description":"Learning about Matrices and Scaling. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","circle","scaling","matrice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Matrice for scale 2D\nmat2 Scale2D(vec2 scale)\n{\n    return mat2(scale.x,0.0,\n                             0.0,scale.y);\n}\n\n//Circle Function\nfloat Circle(vec2 uv, float r)\n{\n    vec2 pos = uv - vec2(.5);\n    float c = length(pos);\n    return smoothstep(r,r+1.5/iResolution.y,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    //Visualize UV\n    vec3 col =vec3(uv,0.);\n    //Scale UV by float\n    uv*= 4.;\n    //Create Grid\n    uv= fract(uv);\n    //move uv to vec2(0,0)\n    uv-=vec2(.5);\n    //Scale uv with Scaling Matrice\n    uv = Scale2D(vec2(sin(iTime)))*uv;\n    //move back to center\n    uv+= vec2(.5);\n   \n   //Visualize Circles\n    col = vec3(Circle(uv,.2));\n    \n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}