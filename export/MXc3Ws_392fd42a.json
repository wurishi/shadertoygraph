{"ver":"0.1","info":{"id":"MXc3Ws","date":"1717126670","viewed":79,"name":"Simple Gaussian Blur by Drake","username":"Drake","description":"Beginner's work","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["gaussian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\nfloat normal_distribution(float uv,float r,float m){\n    float a = 1.0 / (r * sqrt(2. * PI));\n    float expv = (uv - m) * (uv - m) / (2. * r * r) * -1.;\n    return exp(expv) * a;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ){\n    \n    float radius = (sin(iTime) + 1.) * 20.;\n    vec4 color;\n    float sump;\n    for(float i = -radius;i < radius * 2.;i+= 1.){\n        for(float j = -radius;j < radius * 2.;j+= 1.){\n            float n = distance(vec2(i,j) + fragCoord,fragCoord);\n            float p = normal_distribution(n,radius,0.);\n            vec2 tuv = (vec2(i,j) + fragCoord) / iResolution.xy;\n            color +=  texture(iChannel0,tuv) * p;\n            sump += p;\n        }\n    }\n    fragColor = color / sump;\n}","name":"Image","description":"","type":"image"}]}