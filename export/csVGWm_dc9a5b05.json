{"ver":"0.1","info":{"id":"csVGWm","date":"1678654750","viewed":117,"name":"Weekly shader 1 : Sea of Data","username":"LoganOracio","description":"My eyes burn\nIt had to be processed into a separate buffer otherwise the compiler simplifies and it doesn't do the intresting stuff","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["float"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1., 2. / 3., 1. / 3., 3.);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6. - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0., 1.), c.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy);\n    float test = texture(iChannel0,uv).x;\n    test = pow(mod(abs(test/SEED-smp/1e6-iTime/1e13)*1e13,1.),2.);\n    \n    fragColor = vec4(hsv2rgb(vec3(fwidth(test)/5.+.5,test,test)),1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy);\n    float test =(smp/1e6+iTime/1e13)*SEED;\n    \n    fragColor = vec4(test);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define SEED 1e19\n#define smp abs(exp(abs(.01*(uv.x-.5)+uv.y-0.5)*.1)*10.0-iTime*1e-7)","name":"Common","description":"","type":"common"}]}