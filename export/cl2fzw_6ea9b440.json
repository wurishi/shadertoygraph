{"ver":"0.1","info":{"id":"cl2fzw","date":"1693890934","viewed":40,"name":"MyTriangle_20230905","username":"littledev0617","description":"tritritriangle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\nfloat dTriangle(vec2 p)\n{\n    p.y += 0.1;\n    float theta = asin(p.y/length(p));\n    if(theta >= 0. && theta <= PI/2. || theta >= -PI/6. && theta <= 0.)\n        return (((p.x >= 0.) ? 1. : -1.) * sqrt(3.)*p.x+p.y)/2.;\n    else\n        return -p.y;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pos = (uv - 0.5) *2.;\n    \n    pos.x *= iResolution.x/iResolution.y;\n\n    \n    //float d = pos.y/length(pos);\n    float d = dTriangle(pos);\n    \n    float x = 10.*d - 5.*iTime;\n\n    d = sin(x);\n    \n    d = abs(d);\n    \n    //d = step(0.5,d);\n    //d = 0.01 / d;\n       \n       \n    vec3 l[3];\n    l[0] = vec3(1,0,0);\n    l[1] = vec3(0,1,0);\n    l[2] = vec3(0,0,1);\n    // Time varying pixel color\n    vec3 col = step(0.9, d) == 1. ? l[int(abs(x)/PI) % 3] : vec3(0,0,0);\n    \n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}