{"ver":"0.1","info":{"id":"dtjyz1","date":"1691496935","viewed":33,"name":"Draw Horizontal Ellipse","username":"Leslie","description":"Not SDF!!!\nUse Width and Height to draw Horizontal Ellipse.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 clrDist(float dist)\n{\n    vec3 col = dist>0.0 ? vec3(0.9,0.6,0.3) : vec3(0.65,0.85,1.0);\n    col *= 1. - exp(-6.*abs(dist));\n    col *= 1. + 0.2*sin(150.*abs(dist));\n    col = mix(col, vec3(1.), smoothstep(0.01, 0., abs(dist)));\n    return col;\n}\n\nfloat drawEllipse(vec2 p, vec2 wh){\n    wh.xy = wh.x<wh.y ? wh.yx : wh.xy; // keep width >= height\n    float l = sqrt(wh.x*wh.x - wh.y*wh.y);\n    return length(p-vec2(l/2., 0.)) + length(p-vec2(-l/2., 0.)) - wh.x;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 res = iResolution.xy/scale;\n\n    vec2 p = (2.*fragCoord-iResolution.xy)/scale;\n    vec2 wh = vec2((1.+sin(iTime))*res.x, (1.+cos(iTime))*res.y);\n\n    float dist = drawEllipse(p, wh);\n    fragColor = vec4(clrDist(dist), 1.);\n}\n","name":"Image","description":"","type":"image"}]}