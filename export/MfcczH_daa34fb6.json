{"ver":"0.1","info":{"id":"MfcczH","date":"1730246330","viewed":85,"name":"Exact 255-Gon Algebra","username":"rikr","description":"I never did an elementary construction of a 255-gon before so I gave it a try and made it into shader code... Made By Rik Riesmeijer - No Rights Reserved. License: CC0, Released To The Public Domain.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["cycle","circle","ring","edge","tower","dots","sqrt","coloring","algebra","compass","cyclic","construct","heptadecagon","surd","extensions","255"],"hasliked":0,"parentid":"Mf3cR8","parentname":"Exact Heptadecagon Algebra"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Exact 255-Gon Algebra.\n// Made By Rik Riesmeijer - No Rights Reserved.\n// License: CC0, Released To The Public Domain.\n\n// One color for each point of the 255-gon.\nvec4 cl001 = vec4(0.51, 0.27, 0.44, 1);\nvec4 cl002 = vec4(0.50, 0.99, 0.74, 1);\nvec4 cl003 = vec4(0.58, 0.28, 0.62, 1);\nvec4 cl004 = vec4(0.84, 0.45, 0.75, 1);\nvec4 cl005 = vec4(0.71, 0.97, 0.71, 1);\nvec4 cl006 = vec4(0.51, 0.35, 0.72, 1);\nvec4 cl007 = vec4(0.67, 0.46, 0.91, 1);\nvec4 cl008 = vec4(0.34, 0.42, 0.73, 1);\nvec4 cl009 = vec4(0.32, 0.62, 0.61, 1);\nvec4 cl010 = vec4(0.96, 0.18, 0.15, 1);\nvec4 cl011 = vec4(0.57, 0.46, 0.21, 1);\nvec4 cl012 = vec4(0.28, 0.79, 0.32, 1);\nvec4 cl013 = vec4(0.27, 0.29, 0.35, 1);\nvec4 cl014 = vec4(0.94, 0.93, 0.61, 1);\nvec4 cl015 = vec4(0.12, 0.13, 0.43, 1);\nvec4 cl016 = vec4(0.84, 0.31, 0.71, 1);\nvec4 cl017 = vec4(0.93, 0.38, 0.87, 1);\nvec4 cl018 = vec4(0.24, 0.92, 0.97, 1);\nvec4 cl019 = vec4(0.67, 0.89, 0.93, 1);\nvec4 cl020 = vec4(0.31, 0.89, 0.68, 1);\nvec4 cl021 = vec4(0.86, 0.75, 0.60, 1);\nvec4 cl022 = vec4(0.52, 0.28, 0.56, 1);\nvec4 cl023 = vec4(0.50, 0.42, 0.14, 1);\nvec4 cl024 = vec4(0.68, 0.96, 0.55, 1);\nvec4 cl025 = vec4(0.60, 0.79, 0.80, 1);\nvec4 cl026 = vec4(0.60, 0.76, 0.61, 1);\nvec4 cl027 = vec4(0.13, 0.48, 0.19, 1);\nvec4 cl028 = vec4(0.33, 0.64, 0.74, 1);\nvec4 cl029 = vec4(0.46, 0.60, 0.26, 1);\nvec4 cl030 = vec4(0.96, 0.81, 0.38, 1);\nvec4 cl031 = vec4(0.34, 0.49, 0.66, 1);\nvec4 cl032 = vec4(0.83, 0.57, 0.38, 1);\nvec4 cl033 = vec4(0.18, 0.22, 0.79, 1);\nvec4 cl034 = vec4(0.81, 0.73, 0.75, 1);\nvec4 cl035 = vec4(0.59, 0.58, 0.34, 1);\nvec4 cl036 = vec4(0.40, 0.37, 0.66, 1);\nvec4 cl037 = vec4(0.93, 0.76, 0.81, 1);\nvec4 cl038 = vec4(0.45, 0.24, 0.92, 1);\nvec4 cl039 = vec4(0.70, 0.79, 0.57, 1);\nvec4 cl040 = vec4(0.13, 0.67, 0.52, 1);\nvec4 cl041 = vec4(0.56, 0.70, 0.81, 1);\nvec4 cl042 = vec4(0.16, 0.45, 0.27, 1);\nvec4 cl043 = vec4(0.85, 0.14, 0.81, 1);\nvec4 cl044 = vec4(0.92, 0.90, 0.80, 1);\nvec4 cl045 = vec4(0.31, 0.44, 0.26, 1);\nvec4 cl046 = vec4(0.20, 0.67, 0.51, 1);\nvec4 cl047 = vec4(0.17, 0.97, 0.77, 1);\nvec4 cl048 = vec4(0.57, 0.43, 0.43, 1);\nvec4 cl049 = vec4(0.15, 0.99, 0.89, 1);\nvec4 cl050 = vec4(0.48, 0.21, 0.58, 1);\nvec4 cl051 = vec4(0.42, 0.26, 0.66, 1);\nvec4 cl052 = vec4(0.80, 0.43, 0.18, 1);\nvec4 cl053 = vec4(0.10, 0.21, 0.52, 1);\nvec4 cl054 = vec4(0.45, 0.50, 0.69, 1);\nvec4 cl055 = vec4(0.94, 0.27, 0.48, 1);\nvec4 cl056 = vec4(0.13, 0.65, 0.91, 1);\nvec4 cl057 = vec4(0.12, 0.60, 0.41, 1);\nvec4 cl058 = vec4(0.66, 0.24, 0.50, 1);\nvec4 cl059 = vec4(0.16, 0.91, 0.88, 1);\nvec4 cl060 = vec4(0.79, 0.58, 0.14, 1);\nvec4 cl061 = vec4(0.11, 0.64, 0.63, 1);\nvec4 cl062 = vec4(0.29, 0.58, 0.48, 1);\nvec4 cl063 = vec4(0.70, 0.18, 0.47, 1);\nvec4 cl064 = vec4(0.27, 0.48, 0.53, 1);\nvec4 cl065 = vec4(0.88, 0.83, 0.87, 1);\nvec4 cl066 = vec4(0.91, 0.10, 0.57, 1);\nvec4 cl067 = vec4(0.53, 0.74, 0.99, 1);\nvec4 cl068 = vec4(0.66, 0.45, 0.91, 1);\nvec4 cl069 = vec4(0.90, 0.39, 0.59, 1);\nvec4 cl070 = vec4(0.66, 0.38, 0.73, 1);\nvec4 cl071 = vec4(0.24, 0.38, 0.94, 1);\nvec4 cl072 = vec4(0.39, 0.59, 0.42, 1);\nvec4 cl073 = vec4(0.55, 0.65, 0.43, 1);\nvec4 cl074 = vec4(0.43, 0.23, 0.67, 1);\nvec4 cl075 = vec4(0.74, 0.63, 0.78, 1);\nvec4 cl076 = vec4(0.10, 0.58, 0.58, 1);\nvec4 cl077 = vec4(0.70, 0.96, 0.48, 1);\nvec4 cl078 = vec4(0.81, 0.69, 0.18, 1);\nvec4 cl079 = vec4(0.29, 0.77, 0.52, 1);\nvec4 cl080 = vec4(0.52, 0.98, 0.62, 1);\nvec4 cl081 = vec4(0.18, 0.69, 0.20, 1);\nvec4 cl082 = vec4(0.57, 0.48, 0.81, 1);\nvec4 cl083 = vec4(0.25, 0.38, 0.86, 1);\nvec4 cl084 = vec4(0.91, 0.12, 0.34, 1);\nvec4 cl085 = vec4(0.72, 0.85, 0.88, 1);\nvec4 cl086 = vec4(0.66, 0.92, 0.36, 1);\nvec4 cl087 = vec4(0.75, 0.93, 0.89, 1);\nvec4 cl088 = vec4(0.82, 0.94, 0.76, 1);\nvec4 cl089 = vec4(0.21, 0.58, 0.72, 1);\nvec4 cl090 = vec4(0.31, 0.41, 0.39, 1);\nvec4 cl091 = vec4(0.57, 0.46, 0.92, 1);\nvec4 cl092 = vec4(0.99, 0.45, 0.12, 1);\nvec4 cl093 = vec4(0.90, 0.90, 0.43, 1);\nvec4 cl094 = vec4(0.59, 0.51, 0.28, 1);\nvec4 cl095 = vec4(0.91, 0.79, 0.55, 1);\nvec4 cl096 = vec4(0.53, 0.62, 0.65, 1);\nvec4 cl097 = vec4(0.72, 0.35, 0.98, 1);\nvec4 cl098 = vec4(0.26, 0.97, 0.97, 1);\nvec4 cl099 = vec4(0.32, 0.72, 0.39, 1);\nvec4 cl100 = vec4(0.94, 0.81, 0.99, 1);\nvec4 cl101 = vec4(0.96, 0.19, 0.38, 1);\nvec4 cl102 = vec4(0.82, 0.15, 0.35, 1);\nvec4 cl103 = vec4(0.24, 0.89, 0.71, 1);\nvec4 cl104 = vec4(0.72, 0.95, 0.70, 1);\nvec4 cl105 = vec4(0.38, 0.73, 0.39, 1);\nvec4 cl106 = vec4(0.13, 0.89, 0.86, 1);\nvec4 cl107 = vec4(0.47, 0.29, 0.59, 1);\nvec4 cl108 = vec4(0.77, 0.76, 0.89, 1);\nvec4 cl109 = vec4(0.23, 0.75, 0.67, 1);\nvec4 cl110 = vec4(0.86, 0.36, 0.95, 1);\nvec4 cl111 = vec4(0.18, 0.92, 0.45, 1);\nvec4 cl112 = vec4(0.94, 0.34, 0.11, 1);\nvec4 cl113 = vec4(0.96, 0.71, 0.36, 1);\nvec4 cl114 = vec4(0.33, 0.93, 0.65, 1);\nvec4 cl115 = vec4(0.55, 0.83, 0.22, 1);\nvec4 cl116 = vec4(0.18, 0.42, 0.75, 1);\nvec4 cl117 = vec4(0.93, 0.46, 0.71, 1);\nvec4 cl118 = vec4(0.38, 0.76, 0.92, 1);\nvec4 cl119 = vec4(0.41, 0.14, 0.76, 1);\nvec4 cl120 = vec4(0.72, 0.29, 0.11, 1);\nvec4 cl121 = vec4(0.55, 0.30, 0.23, 1);\nvec4 cl122 = vec4(0.36, 0.84, 0.69, 1);\nvec4 cl123 = vec4(0.22, 0.79, 0.73, 1);\nvec4 cl124 = vec4(0.54, 0.64, 0.90, 1);\nvec4 cl125 = vec4(0.75, 0.49, 0.56, 1);\nvec4 cl126 = vec4(0.43, 0.74, 0.42, 1);\nvec4 cl127 = vec4(0.18, 0.78, 0.77, 1);\nvec4 cl128 = vec4(0.15, 0.58, 0.21, 1);\nvec4 cl129 = vec4(0.42, 0.35, 0.27, 1);\nvec4 cl130 = vec4(0.14, 0.54, 0.94, 1);\nvec4 cl131 = vec4(0.94, 0.54, 0.82, 1);\nvec4 cl132 = vec4(0.99, 0.53, 0.90, 1);\nvec4 cl133 = vec4(0.27, 0.47, 0.58, 1);\nvec4 cl134 = vec4(0.87, 0.53, 0.60, 1);\nvec4 cl135 = vec4(0.63, 0.68, 0.12, 1);\nvec4 cl136 = vec4(0.45, 0.52, 0.30, 1);\nvec4 cl137 = vec4(0.63, 0.77, 0.42, 1);\nvec4 cl138 = vec4(0.59, 0.27, 0.25, 1);\nvec4 cl139 = vec4(0.23, 0.44, 0.53, 1);\nvec4 cl140 = vec4(0.12, 0.21, 0.61, 1);\nvec4 cl141 = vec4(0.53, 0.82, 0.55, 1);\nvec4 cl142 = vec4(0.63, 0.55, 0.81, 1);\nvec4 cl143 = vec4(0.42, 0.62, 0.42, 1);\nvec4 cl144 = vec4(0.66, 0.24, 0.80, 1);\nvec4 cl145 = vec4(0.27, 0.90, 0.13, 1);\nvec4 cl146 = vec4(0.24, 0.60, 0.20, 1);\nvec4 cl147 = vec4(0.65, 0.63, 0.11, 1);\nvec4 cl148 = vec4(0.30, 0.96, 0.87, 1);\nvec4 cl149 = vec4(0.95, 0.50, 0.60, 1);\nvec4 cl150 = vec4(0.24, 0.95, 0.34, 1);\nvec4 cl151 = vec4(0.39, 0.65, 0.36, 1);\nvec4 cl152 = vec4(0.14, 0.78, 0.32, 1);\nvec4 cl153 = vec4(0.11, 0.66, 0.98, 1);\nvec4 cl154 = vec4(0.13, 0.11, 0.24, 1);\nvec4 cl155 = vec4(0.38, 0.34, 0.69, 1);\nvec4 cl156 = vec4(0.32, 0.20, 0.97, 1);\nvec4 cl157 = vec4(0.20, 0.46, 0.20, 1);\nvec4 cl158 = vec4(0.87, 0.50, 0.75, 1);\nvec4 cl159 = vec4(0.46, 0.87, 0.83, 1);\nvec4 cl160 = vec4(0.88, 0.64, 0.79, 1);\nvec4 cl161 = vec4(0.62, 0.86, 0.55, 1);\nvec4 cl162 = vec4(0.77, 0.67, 0.84, 1);\nvec4 cl163 = vec4(0.25, 0.77, 0.59, 1);\nvec4 cl164 = vec4(0.78, 0.53, 0.90, 1);\nvec4 cl165 = vec4(0.72, 0.32, 0.43, 1);\nvec4 cl166 = vec4(0.36, 0.57, 0.41, 1);\nvec4 cl167 = vec4(0.35, 0.45, 0.14, 1);\nvec4 cl168 = vec4(0.80, 0.92, 0.26, 1);\nvec4 cl169 = vec4(0.90, 0.86, 0.41, 1);\nvec4 cl170 = vec4(0.91, 0.31, 0.87, 1);\nvec4 cl171 = vec4(0.13, 0.20, 0.10, 1);\nvec4 cl172 = vec4(0.84, 0.48, 0.83, 1);\nvec4 cl173 = vec4(0.90, 0.71, 0.42, 1);\nvec4 cl174 = vec4(0.69, 0.40, 0.83, 1);\nvec4 cl175 = vec4(0.68, 0.38, 0.95, 1);\nvec4 cl176 = vec4(0.57, 0.57, 0.40, 1);\nvec4 cl177 = vec4(0.58, 0.59, 0.63, 1);\nvec4 cl178 = vec4(0.80, 0.17, 0.84, 1);\nvec4 cl179 = vec4(0.97, 0.78, 0.63, 1);\nvec4 cl180 = vec4(0.47, 0.11, 0.90, 1);\nvec4 cl181 = vec4(0.70, 0.28, 0.43, 1);\nvec4 cl182 = vec4(0.34, 0.65, 0.70, 1);\nvec4 cl183 = vec4(0.71, 0.94, 0.65, 1);\nvec4 cl184 = vec4(0.56, 0.52, 0.20, 1);\nvec4 cl185 = vec4(0.23, 0.95, 0.46, 1);\nvec4 cl186 = vec4(0.96, 0.16, 0.97, 1);\nvec4 cl187 = vec4(0.76, 0.47, 0.97, 1);\nvec4 cl188 = vec4(0.61, 0.29, 0.31, 1);\nvec4 cl189 = vec4(0.36, 0.72, 0.17, 1);\nvec4 cl190 = vec4(0.42, 0.37, 0.76, 1);\nvec4 cl191 = vec4(0.75, 0.21, 0.43, 1);\nvec4 cl192 = vec4(0.19, 0.29, 0.75, 1);\nvec4 cl193 = vec4(0.89, 0.32, 0.76, 1);\nvec4 cl194 = vec4(0.75, 0.93, 0.52, 1);\nvec4 cl195 = vec4(0.84, 0.44, 0.94, 1);\nvec4 cl196 = vec4(0.62, 0.47, 0.69, 1);\nvec4 cl197 = vec4(0.42, 0.93, 0.97, 1);\nvec4 cl198 = vec4(0.63, 0.21, 0.35, 1);\nvec4 cl199 = vec4(0.87, 0.88, 0.95, 1);\nvec4 cl200 = vec4(0.78, 0.73, 0.12, 1);\nvec4 cl201 = vec4(0.94, 0.41, 0.71, 1);\nvec4 cl202 = vec4(0.25, 0.49, 0.15, 1);\nvec4 cl203 = vec4(0.81, 0.60, 0.16, 1);\nvec4 cl204 = vec4(0.84, 0.95, 0.23, 1);\nvec4 cl205 = vec4(0.10, 0.38, 0.59, 1);\nvec4 cl206 = vec4(0.31, 0.53, 0.54, 1);\nvec4 cl207 = vec4(0.27, 0.84, 0.76, 1);\nvec4 cl208 = vec4(0.23, 0.16, 0.65, 1);\nvec4 cl209 = vec4(0.42, 0.28, 0.51, 1);\nvec4 cl210 = vec4(0.40, 0.23, 0.91, 1);\nvec4 cl211 = vec4(0.65, 0.25, 0.12, 1);\nvec4 cl212 = vec4(0.42, 0.81, 0.17, 1);\nvec4 cl213 = vec4(0.94, 0.18, 0.52, 1);\nvec4 cl214 = vec4(0.93, 0.46, 0.83, 1);\nvec4 cl215 = vec4(0.60, 0.53, 0.75, 1);\nvec4 cl216 = vec4(0.12, 0.48, 0.80, 1);\nvec4 cl217 = vec4(0.37, 0.92, 0.42, 1);\nvec4 cl218 = vec4(0.15, 0.39, 0.81, 1);\nvec4 cl219 = vec4(0.70, 0.38, 0.75, 1);\nvec4 cl220 = vec4(0.20, 0.67, 0.79, 1);\nvec4 cl221 = vec4(0.80, 0.35, 0.13, 1);\nvec4 cl222 = vec4(0.64, 0.31, 0.20, 1);\nvec4 cl223 = vec4(0.94, 0.18, 0.75, 1);\nvec4 cl224 = vec4(0.39, 0.42, 0.55, 1);\nvec4 cl225 = vec4(0.74, 0.41, 0.73, 1);\nvec4 cl226 = vec4(0.59, 0.25, 0.98, 1);\nvec4 cl227 = vec4(0.52, 0.67, 0.99, 1);\nvec4 cl228 = vec4(0.46, 0.11, 0.47, 1);\nvec4 cl229 = vec4(0.87, 0.31, 0.39, 1);\nvec4 cl230 = vec4(0.20, 0.13, 0.24, 1);\nvec4 cl231 = vec4(0.91, 0.57, 0.65, 1);\nvec4 cl232 = vec4(0.53, 0.33, 0.62, 1);\nvec4 cl233 = vec4(0.94, 0.31, 0.92, 1);\nvec4 cl234 = vec4(0.19, 0.70, 0.68, 1);\nvec4 cl235 = vec4(0.47, 0.44, 0.95, 1);\nvec4 cl236 = vec4(0.76, 0.28, 0.50, 1);\nvec4 cl237 = vec4(0.87, 0.97, 0.34, 1);\nvec4 cl238 = vec4(0.63, 0.81, 0.83, 1);\nvec4 cl239 = vec4(0.46, 0.33, 0.20, 1);\nvec4 cl240 = vec4(0.41, 0.49, 0.70, 1);\nvec4 cl241 = vec4(0.24, 0.82, 0.69, 1);\nvec4 cl242 = vec4(0.43, 0.41, 0.54, 1);\nvec4 cl243 = vec4(0.58, 0.62, 0.40, 1);\nvec4 cl244 = vec4(0.15, 0.35, 0.19, 1);\nvec4 cl245 = vec4(0.43, 0.92, 0.48, 1);\nvec4 cl246 = vec4(0.97, 0.94, 0.68, 1);\nvec4 cl247 = vec4(0.11, 0.54, 0.63, 1);\nvec4 cl248 = vec4(0.15, 0.45, 0.12, 1);\nvec4 cl249 = vec4(0.96, 0.58, 0.69, 1);\nvec4 cl250 = vec4(0.62, 0.69, 0.45, 1);\nvec4 cl251 = vec4(0.39, 0.24, 0.85, 1);\nvec4 cl252 = vec4(0.10, 0.35, 0.48, 1);\nvec4 cl253 = vec4(0.68, 0.70, 0.71, 1);\nvec4 cl254 = vec4(0.73, 0.82, 0.92, 1);\nvec4 cl255 = vec4(0.72, 0.77, 0.50, 1);\n\n// Euclidean norm based distance function.\nfloat dist(vec2 x, vec2 y) {\n    return length(x - y);\n}\n\n// Shaping function for color blending.\nfloat smst(float x) {\n    return smoothstep(0.019, 0.008, x);\n}\n\n// Complex matrix representation.\nmat2 complex(vec2 v) {\n    return mat2(v.x, -v.y, v.y, v.x);\n}\n\n// Main shader function.\nvoid mainImage(out vec4 y, vec2 z) {\n    // Initialize color to black.\n    y = vec4(0.2);\n    \n    // Normalizing screen coordinate scale.\n    z = z - 0.5 * iResolution.xy;\n    z = 2.3 * z / iResolution.yy;\n    \n    // All of the numbers we will need.\n    const float s01 =  inversesqrt(12.8);\n    const float s02 = -s01;\n    const float s03 =  inversesqrt(3.20);\n    const float s04 = -s03;\n    const float s05 =  sqrt(0.0439453125);\n    const float s06 = -s05;\n    const float s07 =  sqrt(0.46875 + s05);\n    const float s08 = -s07;\n    const float s09 =  sqrt(0.46875 + s06);\n    const float s10 = -s09;\n    const float s00 = -0.5000000;\n    const float s11 =  0.1250000;\n    const float s12 = -0.1250000;\n    const float s13 =  0.2500000;\n    const float s14 = -0.2500000;\n    const float sru =  1.0000000;\n    const float ur  =  1.0000000;\n    const float A   = -1.0000000;\n    const float S   =  16.000000;\n    const float B   =  17.000000;\n    const float C   =  34.000000;\n    const float D   =  68.000000;\n    const float E   =  2448.0000;\n    const float F   =  2720.0000;\n    const float G   =  6284288.0;\n    \n    // First layer of extension tower.\n    float a = D + sqrt(E);\n    float b = D - sqrt(E);\n    float c = F + sqrt(G);\n    float d = F - sqrt(G);\n    float e = A + sqrt(B);\n    float f = A - sqrt(B);\n    float g = C + sqrt(D);\n    float h = C - sqrt(D);\n    \n    // Second layer of extension tower.\n    float i = a + sqrt(c);\n    float j = a - sqrt(c);\n    float k = b + sqrt(d);\n    float l = b - sqrt(d);\n    float m = e + sqrt(h);\n    float n = e - sqrt(h);\n    float o = f + sqrt(g);\n    float p = f - sqrt(g);\n    \n    // Third layer of extension tower.\n    float q = n - sqrt(i);\n    float r = m + sqrt(j);\n    float s = p - sqrt(l);\n    float t = n + sqrt(i);\n    float u = p + sqrt(l);\n    float v = o + sqrt(k);\n    float w = o - sqrt(k);\n    float x = m - sqrt(j);\n    \n    // Making values unitary.\n    float qn = q / S;\n    float rn = r / S;\n    float sn = s / S;\n    float tn = t / S;\n    float un = u / S;\n    float vn = v / S;\n    float wn = w / S;\n    float xn = x / S;\n    \n    // Difference of x squared and radius squared.\n    float qq = qn * -qn + ur;\n    float rr = rn * -rn + ur;\n    float ss = sn * -sn + ur;\n    float tt = tn * -tn + ur;\n    float uu = un * -un + ur;\n    float vv = vn * -vn + ur;\n    float ww = wn * -wn + ur;\n    float xx = xn * -xn + ur;\n    \n    // Unitary y coordinates for each x coordinate.\n    float qm = sqrt(qq);\n    float rm = sqrt(rr);\n    float sm = sqrt(ss);\n    float tm = sqrt(tt);\n    float um = sqrt(uu);\n    float vm = sqrt(vv);\n    float wm = sqrt(ww);\n    float xm = sqrt(xx);\n    \n    // Corner points of the heptadecagon.\n    vec2 qp = vec2(qn,  qm);\n    vec2 rp = vec2(rn,  rm);\n    vec2 sp = vec2(sn,  sm);\n    vec2 tp = vec2(tn,  tm);\n    vec2 up = vec2(un,  um);\n    vec2 vp = vec2(vn,  vm);\n    vec2 wp = vec2(wn,  wm);\n    vec2 xp = vec2(xn,  xm);\n    vec2 qc = vec2(qn, -qm);\n    vec2 rc = vec2(rn, -rm);\n    vec2 sc = vec2(sn, -sm);\n    vec2 tc = vec2(tn, -tm);\n    vec2 uc = vec2(un, -um);\n    vec2 vc = vec2(vn, -vm);\n    vec2 wc = vec2(wn, -wm);\n    vec2 xc = vec2(xn, -xm);\n    vec2 ru = vec2(ur, A-A);\n    \n    // Rotational matrices for each point.\n    mat2 M01 = complex(qp);\n    mat2 M02 = complex(rp);\n    mat2 M03 = complex(sp);\n    mat2 M04 = complex(tp);\n    mat2 M05 = complex(up);\n    mat2 M06 = complex(vp);\n    mat2 M07 = complex(wp);\n    mat2 M08 = complex(xp);\n    mat2 M09 = complex(qc);\n    mat2 M10 = complex(rc);\n    mat2 M11 = complex(sc);\n    mat2 M12 = complex(tc);\n    mat2 M13 = complex(uc);\n    mat2 M14 = complex(vc);\n    mat2 M15 = complex(wc);\n    mat2 M16 = complex(xc);\n    mat2 M17 = complex(ru);\n    \n    // Combined surds for x coordinates.\n    float x01 = sru;\n    float x02 = s01 + s09 + s11;\n    float x03 = s01 + s09 + s12;\n    float x04 = s03 + s14;\n    float x05 = s01 + s10 + s11;\n    float x06 = s00;\n    float x07 = s04 + s14;\n    float x08 = s02 + s08 + s11;\n    float x09 = s02 + s08 + s11;\n    float x10 = s04 + s14;\n    float x11 = s00;\n    float x12 = s01 + s10 + s11;\n    float x13 = s03 + s14;\n    float x14 = s01 + s09 + s12;\n    float x15 = s01 + s09 + s11;\n    \n    // Unit radius induced y coordinates.\n    float y01 =  sqrt(x01 * -x01 + ur);\n    float y02 =  sqrt(x02 * -x02 + ur);\n    float y03 =  sqrt(x03 * -x03 + ur);\n    float y04 =  sqrt(x04 * -x04 + ur);\n    float y05 =  sqrt(x05 * -x05 + ur);\n    float y06 =  sqrt(x06 * -x06 + ur);\n    float y07 =  sqrt(x07 * -x07 + ur);\n    float y08 =  sqrt(x08 * -x08 + ur);\n    float y09 = -sqrt(x09 * -x09 + ur);\n    float y10 = -sqrt(x10 * -x10 + ur);\n    float y11 = -sqrt(x11 * -x11 + ur);\n    float y12 = -sqrt(x12 * -x12 + ur);\n    float y13 = -sqrt(x13 * -x13 + ur);\n    float y14 = -sqrt(x14 * -x14 + ur);\n    float y15 = -sqrt(x15 * -x15 + ur);\n    \n    // Combined first batch of points.\n    vec2 p001 = M01 * vec2(x01, y01);\n    vec2 p002 = M01 * vec2(x02, y02);\n    vec2 p003 = M01 * vec2(x03, y03);\n    vec2 p004 = M01 * vec2(x04, y04);\n    vec2 p005 = M01 * vec2(x05, y05);\n    vec2 p006 = M01 * vec2(x06, y06);\n    vec2 p007 = M01 * vec2(x07, y07);\n    vec2 p008 = M01 * vec2(x08, y08);\n    vec2 p009 = M01 * vec2(x09, y09);\n    vec2 p010 = M01 * vec2(x10, y10);\n    vec2 p011 = M01 * vec2(x11, y11);\n    vec2 p012 = M01 * vec2(x12, y12);\n    vec2 p013 = M01 * vec2(x13, y13);\n    vec2 p014 = M01 * vec2(x14, y14);\n    vec2 p015 = M01 * vec2(x15, y15);\n    \n    // Combined second batch of points.\n    vec2 p016 = M02 * vec2(x01, y01);\n    vec2 p017 = M02 * vec2(x02, y02);\n    vec2 p018 = M02 * vec2(x03, y03);\n    vec2 p019 = M02 * vec2(x04, y04);\n    vec2 p020 = M02 * vec2(x05, y05);\n    vec2 p021 = M02 * vec2(x06, y06);\n    vec2 p022 = M02 * vec2(x07, y07);\n    vec2 p023 = M02 * vec2(x08, y08);\n    vec2 p024 = M02 * vec2(x09, y09);\n    vec2 p025 = M02 * vec2(x10, y10);\n    vec2 p026 = M02 * vec2(x11, y11);\n    vec2 p027 = M02 * vec2(x12, y12);\n    vec2 p028 = M02 * vec2(x13, y13);\n    vec2 p029 = M02 * vec2(x14, y14);\n    vec2 p030 = M02 * vec2(x15, y15);\n    \n    // Combined third batch of points.\n    vec2 p031 = M03 * vec2(x01, y01);\n    vec2 p032 = M03 * vec2(x02, y02);\n    vec2 p033 = M03 * vec2(x03, y03);\n    vec2 p034 = M03 * vec2(x04, y04);\n    vec2 p035 = M03 * vec2(x05, y05);\n    vec2 p036 = M03 * vec2(x06, y06);\n    vec2 p037 = M03 * vec2(x07, y07);\n    vec2 p038 = M03 * vec2(x08, y08);\n    vec2 p039 = M03 * vec2(x09, y09);\n    vec2 p040 = M03 * vec2(x10, y10);\n    vec2 p041 = M03 * vec2(x11, y11);\n    vec2 p042 = M03 * vec2(x12, y12);\n    vec2 p043 = M03 * vec2(x13, y13);\n    vec2 p044 = M03 * vec2(x14, y14);\n    vec2 p045 = M03 * vec2(x15, y15);\n    \n    // Combined fourth batch of points.\n    vec2 p046 = M04 * vec2(x01, y01);\n    vec2 p047 = M04 * vec2(x02, y02);\n    vec2 p048 = M04 * vec2(x03, y03);\n    vec2 p049 = M04 * vec2(x04, y04);\n    vec2 p050 = M04 * vec2(x05, y05);\n    vec2 p051 = M04 * vec2(x06, y06);\n    vec2 p052 = M04 * vec2(x07, y07);\n    vec2 p053 = M04 * vec2(x08, y08);\n    vec2 p054 = M04 * vec2(x09, y09);\n    vec2 p055 = M04 * vec2(x10, y10);\n    vec2 p056 = M04 * vec2(x11, y11);\n    vec2 p057 = M04 * vec2(x12, y12);\n    vec2 p058 = M04 * vec2(x13, y13);\n    vec2 p059 = M04 * vec2(x14, y14);\n    vec2 p060 = M04 * vec2(x15, y15);\n    \n    // Combined fifth batch of points.\n    vec2 p061 = M05 * vec2(x01, y01);\n    vec2 p062 = M05 * vec2(x02, y02);\n    vec2 p063 = M05 * vec2(x03, y03);\n    vec2 p064 = M05 * vec2(x04, y04);\n    vec2 p065 = M05 * vec2(x05, y05);\n    vec2 p066 = M05 * vec2(x06, y06);\n    vec2 p067 = M05 * vec2(x07, y07);\n    vec2 p068 = M05 * vec2(x08, y08);\n    vec2 p069 = M05 * vec2(x09, y09);\n    vec2 p070 = M05 * vec2(x10, y10);\n    vec2 p071 = M05 * vec2(x11, y11);\n    vec2 p072 = M05 * vec2(x12, y12);\n    vec2 p073 = M05 * vec2(x13, y13);\n    vec2 p074 = M05 * vec2(x14, y14);\n    vec2 p075 = M05 * vec2(x15, y15);\n    \n    // Combined sixth batch of points.\n    vec2 p076 = M06 * vec2(x01, y01);\n    vec2 p077 = M06 * vec2(x02, y02);\n    vec2 p078 = M06 * vec2(x03, y03);\n    vec2 p079 = M06 * vec2(x04, y04);\n    vec2 p080 = M06 * vec2(x05, y05);\n    vec2 p081 = M06 * vec2(x06, y06);\n    vec2 p082 = M06 * vec2(x07, y07);\n    vec2 p083 = M06 * vec2(x08, y08);\n    vec2 p084 = M06 * vec2(x09, y09);\n    vec2 p085 = M06 * vec2(x10, y10);\n    vec2 p086 = M06 * vec2(x11, y11);\n    vec2 p087 = M06 * vec2(x12, y12);\n    vec2 p088 = M06 * vec2(x13, y13);\n    vec2 p089 = M06 * vec2(x14, y14);\n    vec2 p090 = M06 * vec2(x15, y15);\n    \n    // Combined seventh batch of points.\n    vec2 p091 = M07 * vec2(x01, y01);\n    vec2 p092 = M07 * vec2(x02, y02);\n    vec2 p093 = M07 * vec2(x03, y03);\n    vec2 p094 = M07 * vec2(x04, y04);\n    vec2 p095 = M07 * vec2(x05, y05);\n    vec2 p096 = M07 * vec2(x06, y06);\n    vec2 p097 = M07 * vec2(x07, y07);\n    vec2 p098 = M07 * vec2(x08, y08);\n    vec2 p099 = M07 * vec2(x09, y09);\n    vec2 p100 = M07 * vec2(x10, y10);\n    vec2 p101 = M07 * vec2(x11, y11);\n    vec2 p102 = M07 * vec2(x12, y12);\n    vec2 p103 = M07 * vec2(x13, y13);\n    vec2 p104 = M07 * vec2(x14, y14);\n    vec2 p105 = M07 * vec2(x15, y15);\n    \n    // Combined eighth batch of points.\n    vec2 p106 = M08 * vec2(x01, y01);\n    vec2 p107 = M08 * vec2(x02, y02);\n    vec2 p108 = M08 * vec2(x03, y03);\n    vec2 p109 = M08 * vec2(x04, y04);\n    vec2 p110 = M08 * vec2(x05, y05);\n    vec2 p111 = M08 * vec2(x06, y06);\n    vec2 p112 = M08 * vec2(x07, y07);\n    vec2 p113 = M08 * vec2(x08, y08);\n    vec2 p114 = M08 * vec2(x09, y09);\n    vec2 p115 = M08 * vec2(x10, y10);\n    vec2 p116 = M08 * vec2(x11, y11);\n    vec2 p117 = M08 * vec2(x12, y12);\n    vec2 p118 = M08 * vec2(x13, y13);\n    vec2 p119 = M08 * vec2(x14, y14);\n    vec2 p120 = M08 * vec2(x15, y15);\n    \n    // Combined ninth batch of points.\n    vec2 p121 = M09 * vec2(x01, y01);\n    vec2 p122 = M09 * vec2(x02, y02);\n    vec2 p123 = M09 * vec2(x03, y03);\n    vec2 p124 = M09 * vec2(x04, y04);\n    vec2 p125 = M09 * vec2(x05, y05);\n    vec2 p126 = M09 * vec2(x06, y06);\n    vec2 p127 = M09 * vec2(x07, y07);\n    vec2 p128 = M09 * vec2(x08, y08);\n    vec2 p129 = M09 * vec2(x09, y09);\n    vec2 p130 = M09 * vec2(x10, y10);\n    vec2 p131 = M09 * vec2(x11, y11);\n    vec2 p132 = M09 * vec2(x12, y12);\n    vec2 p133 = M09 * vec2(x13, y13);\n    vec2 p134 = M09 * vec2(x14, y14);\n    vec2 p135 = M09 * vec2(x15, y15);\n    \n    // Combined tenth batch of points.\n    vec2 p136 = M10 * vec2(x01, y01);\n    vec2 p137 = M10 * vec2(x02, y02);\n    vec2 p138 = M10 * vec2(x03, y03);\n    vec2 p139 = M10 * vec2(x04, y04);\n    vec2 p140 = M10 * vec2(x05, y05);\n    vec2 p141 = M10 * vec2(x06, y06);\n    vec2 p142 = M10 * vec2(x07, y07);\n    vec2 p143 = M10 * vec2(x08, y08);\n    vec2 p144 = M10 * vec2(x09, y09);\n    vec2 p145 = M10 * vec2(x10, y10);\n    vec2 p146 = M10 * vec2(x11, y11);\n    vec2 p147 = M10 * vec2(x12, y12);\n    vec2 p148 = M10 * vec2(x13, y13);\n    vec2 p149 = M10 * vec2(x14, y14);\n    vec2 p150 = M10 * vec2(x15, y15);\n    \n    // Combined eleventh batch of points.\n    vec2 p151 = M11 * vec2(x01, y01);\n    vec2 p152 = M11 * vec2(x02, y02);\n    vec2 p153 = M11 * vec2(x03, y03);\n    vec2 p154 = M11 * vec2(x04, y04);\n    vec2 p155 = M11 * vec2(x05, y05);\n    vec2 p156 = M11 * vec2(x06, y06);\n    vec2 p157 = M11 * vec2(x07, y07);\n    vec2 p158 = M11 * vec2(x08, y08);\n    vec2 p159 = M11 * vec2(x09, y09);\n    vec2 p160 = M11 * vec2(x10, y10);\n    vec2 p161 = M11 * vec2(x11, y11);\n    vec2 p162 = M11 * vec2(x12, y12);\n    vec2 p163 = M11 * vec2(x13, y13);\n    vec2 p164 = M11 * vec2(x14, y14);\n    vec2 p165 = M11 * vec2(x15, y15);\n   \n    // Combined point batch twelve.\n    vec2 p166 = M12 * vec2(x01, y01);\n    vec2 p167 = M12 * vec2(x02, y02);\n    vec2 p168 = M12 * vec2(x03, y03);\n    vec2 p169 = M12 * vec2(x04, y04);\n    vec2 p170 = M12 * vec2(x05, y05);\n    vec2 p171 = M12 * vec2(x06, y06);\n    vec2 p172 = M12 * vec2(x07, y07);\n    vec2 p173 = M12 * vec2(x08, y08);\n    vec2 p174 = M12 * vec2(x09, y09);\n    vec2 p175 = M12 * vec2(x10, y10);\n    vec2 p176 = M12 * vec2(x11, y11);\n    vec2 p177 = M12 * vec2(x12, y12);\n    vec2 p178 = M12 * vec2(x13, y13);\n    vec2 p179 = M12 * vec2(x14, y14);\n    vec2 p180 = M12 * vec2(x15, y15);\n   \n    // Combined thirteenth batch of points.\n    vec2 p181 = M13 * vec2(x01, y01);\n    vec2 p182 = M13 * vec2(x02, y02);\n    vec2 p183 = M13 * vec2(x03, y03);\n    vec2 p184 = M13 * vec2(x04, y04);\n    vec2 p185 = M13 * vec2(x05, y05);\n    vec2 p186 = M13 * vec2(x06, y06);\n    vec2 p187 = M13 * vec2(x07, y07);\n    vec2 p188 = M13 * vec2(x08, y08);\n    vec2 p189 = M13 * vec2(x09, y09);\n    vec2 p190 = M13 * vec2(x10, y10);\n    vec2 p191 = M13 * vec2(x11, y11);\n    vec2 p192 = M13 * vec2(x12, y12);\n    vec2 p193 = M13 * vec2(x13, y13);\n    vec2 p194 = M13 * vec2(x14, y14);\n    vec2 p195 = M13 * vec2(x15, y15);\n    \n    // Combined fourteenth batch of points.\n    vec2 p196 = M14 * vec2(x01, y01);\n    vec2 p197 = M14 * vec2(x02, y02);\n    vec2 p198 = M14 * vec2(x03, y03);\n    vec2 p199 = M14 * vec2(x04, y04);\n    vec2 p200 = M14 * vec2(x05, y05);\n    vec2 p201 = M14 * vec2(x06, y06);\n    vec2 p202 = M14 * vec2(x07, y07);\n    vec2 p203 = M14 * vec2(x08, y08);\n    vec2 p204 = M14 * vec2(x09, y09);\n    vec2 p205 = M14 * vec2(x10, y10);\n    vec2 p206 = M14 * vec2(x11, y11);\n    vec2 p207 = M14 * vec2(x12, y12);\n    vec2 p208 = M14 * vec2(x13, y13);\n    vec2 p209 = M14 * vec2(x14, y14);\n    vec2 p210 = M14 * vec2(x15, y15);\n    \n    // Combined fifteenth batch of points.\n    vec2 p211 = M15 * vec2(x01, y01);\n    vec2 p212 = M15 * vec2(x02, y02);\n    vec2 p213 = M15 * vec2(x03, y03);\n    vec2 p214 = M15 * vec2(x04, y04);\n    vec2 p215 = M15 * vec2(x05, y05);\n    vec2 p216 = M15 * vec2(x06, y06);\n    vec2 p217 = M15 * vec2(x07, y07);\n    vec2 p218 = M15 * vec2(x08, y08);\n    vec2 p219 = M15 * vec2(x09, y09);\n    vec2 p220 = M15 * vec2(x10, y10);\n    vec2 p221 = M15 * vec2(x11, y11);\n    vec2 p222 = M15 * vec2(x12, y12);\n    vec2 p223 = M15 * vec2(x13, y13);\n    vec2 p224 = M15 * vec2(x14, y14);\n    vec2 p225 = M15 * vec2(x15, y15);\n    \n    // Combined sixteenth batch of points.\n    vec2 p226 = M16 * vec2(x01, y01);\n    vec2 p227 = M16 * vec2(x02, y02);\n    vec2 p228 = M16 * vec2(x03, y03);\n    vec2 p229 = M16 * vec2(x04, y04);\n    vec2 p230 = M16 * vec2(x05, y05);\n    vec2 p231 = M16 * vec2(x06, y06);\n    vec2 p232 = M16 * vec2(x07, y07);\n    vec2 p233 = M16 * vec2(x08, y08);\n    vec2 p234 = M16 * vec2(x09, y09);\n    vec2 p235 = M16 * vec2(x10, y10);\n    vec2 p236 = M16 * vec2(x11, y11);\n    vec2 p237 = M16 * vec2(x12, y12);\n    vec2 p238 = M16 * vec2(x13, y13);\n    vec2 p239 = M16 * vec2(x14, y14);\n    vec2 p240 = M16 * vec2(x15, y15);\n    \n    // Combined seventeenth batch of points.\n    vec2 p241 = M17 * vec2(x01, y01);\n    vec2 p242 = M17 * vec2(x02, y02);\n    vec2 p243 = M17 * vec2(x03, y03);\n    vec2 p244 = M17 * vec2(x04, y04);\n    vec2 p245 = M17 * vec2(x05, y05);\n    vec2 p246 = M17 * vec2(x06, y06);\n    vec2 p247 = M17 * vec2(x07, y07);\n    vec2 p248 = M17 * vec2(x08, y08);\n    vec2 p249 = M17 * vec2(x09, y09);\n    vec2 p250 = M17 * vec2(x10, y10);\n    vec2 p251 = M17 * vec2(x11, y11);\n    vec2 p252 = M17 * vec2(x12, y12);\n    vec2 p253 = M17 * vec2(x13, y13);\n    vec2 p254 = M17 * vec2(x14, y14);\n    vec2 p255 = M17 * vec2(x15, y15);\n    \n    // Calculate screen distance to each point.\n    float d001 = dist(z, p001);\n    float d002 = dist(z, p002);\n    float d003 = dist(z, p003);\n    float d004 = dist(z, p004);\n    float d005 = dist(z, p005);\n    float d006 = dist(z, p006);\n    float d007 = dist(z, p007);\n    float d008 = dist(z, p008);\n    float d009 = dist(z, p009);\n    float d010 = dist(z, p010);\n    float d011 = dist(z, p011);\n    float d012 = dist(z, p012);\n    float d013 = dist(z, p013);\n    float d014 = dist(z, p014);\n    float d015 = dist(z, p015);\n    \n    float d016 = dist(z, p016);\n    float d017 = dist(z, p017);\n    float d018 = dist(z, p018);\n    float d019 = dist(z, p019);\n    float d020 = dist(z, p020);\n    float d021 = dist(z, p021);\n    float d022 = dist(z, p022);\n    float d023 = dist(z, p023);\n    float d024 = dist(z, p024);\n    float d025 = dist(z, p025);\n    float d026 = dist(z, p026);\n    float d027 = dist(z, p027);\n    float d028 = dist(z, p028);\n    float d029 = dist(z, p029);\n    float d030 = dist(z, p030);\n\n    float d031 = dist(z, p031);\n    float d032 = dist(z, p032);\n    float d033 = dist(z, p033);\n    float d034 = dist(z, p034);\n    float d035 = dist(z, p035);\n    float d036 = dist(z, p036);\n    float d037 = dist(z, p037);\n    float d038 = dist(z, p038);\n    float d039 = dist(z, p039);\n    float d040 = dist(z, p040);\n    float d041 = dist(z, p041);\n    float d042 = dist(z, p042);\n    float d043 = dist(z, p043);\n    float d044 = dist(z, p044);\n    float d045 = dist(z, p045);\n\n    float d046 = dist(z, p046);\n    float d047 = dist(z, p047);\n    float d048 = dist(z, p048);\n    float d049 = dist(z, p049);\n    float d050 = dist(z, p050);\n    float d051 = dist(z, p051);\n    float d052 = dist(z, p052);\n    float d053 = dist(z, p053);\n    float d054 = dist(z, p054);\n    float d055 = dist(z, p055);\n    float d056 = dist(z, p056);\n    float d057 = dist(z, p057);\n    float d058 = dist(z, p058);\n    float d059 = dist(z, p059);\n    float d060 = dist(z, p060);\n\n    float d061 = dist(z, p061);\n    float d062 = dist(z, p062);\n    float d063 = dist(z, p063);\n    float d064 = dist(z, p064);\n    float d065 = dist(z, p065);\n    float d066 = dist(z, p066);\n    float d067 = dist(z, p067);\n    float d068 = dist(z, p068);\n    float d069 = dist(z, p069);\n    float d070 = dist(z, p070);\n    float d071 = dist(z, p071);\n    float d072 = dist(z, p072);\n    float d073 = dist(z, p073);\n    float d074 = dist(z, p074);\n    float d075 = dist(z, p075);\n\n    float d076 = dist(z, p076);\n    float d077 = dist(z, p077);\n    float d078 = dist(z, p078);\n    float d079 = dist(z, p079);\n    float d080 = dist(z, p080);\n    float d081 = dist(z, p081);\n    float d082 = dist(z, p082);\n    float d083 = dist(z, p083);\n    float d084 = dist(z, p084);\n    float d085 = dist(z, p085);\n    float d086 = dist(z, p086);\n    float d087 = dist(z, p087);\n    float d088 = dist(z, p088);\n    float d089 = dist(z, p089);\n    float d090 = dist(z, p090);\n\n    float d091 = dist(z, p091);\n    float d092 = dist(z, p092);\n    float d093 = dist(z, p093);\n    float d094 = dist(z, p094);\n    float d095 = dist(z, p095);\n    float d096 = dist(z, p096);\n    float d097 = dist(z, p097);\n    float d098 = dist(z, p098);\n    float d099 = dist(z, p099);\n    float d100 = dist(z, p100);\n    float d101 = dist(z, p101);\n    float d102 = dist(z, p102);\n    float d103 = dist(z, p103);\n    float d104 = dist(z, p104);\n    float d105 = dist(z, p105);\n\n    float d106 = dist(z, p106);\n    float d107 = dist(z, p107);\n    float d108 = dist(z, p108);\n    float d109 = dist(z, p109);\n    float d110 = dist(z, p110);\n    float d111 = dist(z, p111);\n    float d112 = dist(z, p112);\n    float d113 = dist(z, p113);\n    float d114 = dist(z, p114);\n    float d115 = dist(z, p115);\n    float d116 = dist(z, p116);\n    float d117 = dist(z, p117);\n    float d118 = dist(z, p118);\n    float d119 = dist(z, p119);\n    float d120 = dist(z, p120);\n\n    float d121 = dist(z, p121);\n    float d122 = dist(z, p122);\n    float d123 = dist(z, p123);\n    float d124 = dist(z, p124);\n    float d125 = dist(z, p125);\n    float d126 = dist(z, p126);\n    float d127 = dist(z, p127);\n    float d128 = dist(z, p128);\n    float d129 = dist(z, p129);\n    float d130 = dist(z, p130);\n    float d131 = dist(z, p131);\n    float d132 = dist(z, p132);\n    float d133 = dist(z, p133);\n    float d134 = dist(z, p134);\n    float d135 = dist(z, p135);\n\n    float d136 = dist(z, p136);\n    float d137 = dist(z, p137);\n    float d138 = dist(z, p138);\n    float d139 = dist(z, p139);\n    float d140 = dist(z, p140);\n    float d141 = dist(z, p141);\n    float d142 = dist(z, p142);\n    float d143 = dist(z, p143);\n    float d144 = dist(z, p144);\n    float d145 = dist(z, p145);\n    float d146 = dist(z, p146);\n    float d147 = dist(z, p147);\n    float d148 = dist(z, p148);\n    float d149 = dist(z, p149);\n    float d150 = dist(z, p150);\n\n    float d151 = dist(z, p151);\n    float d152 = dist(z, p152);\n    float d153 = dist(z, p153);\n    float d154 = dist(z, p154);\n    float d155 = dist(z, p155);\n    float d156 = dist(z, p156);\n    float d157 = dist(z, p157);\n    float d158 = dist(z, p158);\n    float d159 = dist(z, p159);\n    float d160 = dist(z, p160);\n    float d161 = dist(z, p161);\n    float d162 = dist(z, p162);\n    float d163 = dist(z, p163);\n    float d164 = dist(z, p164);\n    float d165 = dist(z, p165);\n\n    float d166 = dist(z, p166);\n    float d167 = dist(z, p167);\n    float d168 = dist(z, p168);\n    float d169 = dist(z, p169);\n    float d170 = dist(z, p170);\n    float d171 = dist(z, p171);\n    float d172 = dist(z, p172);\n    float d173 = dist(z, p173);\n    float d174 = dist(z, p174);\n    float d175 = dist(z, p175);\n    float d176 = dist(z, p176);\n    float d177 = dist(z, p177);\n    float d178 = dist(z, p178);\n    float d179 = dist(z, p179);\n    float d180 = dist(z, p180);\n\n    float d181 = dist(z, p181);\n    float d182 = dist(z, p182);\n    float d183 = dist(z, p183);\n    float d184 = dist(z, p184);\n    float d185 = dist(z, p185);\n    float d186 = dist(z, p186);\n    float d187 = dist(z, p187);\n    float d188 = dist(z, p188);\n    float d189 = dist(z, p189);\n    float d190 = dist(z, p190);\n    float d191 = dist(z, p191);\n    float d192 = dist(z, p192);\n    float d193 = dist(z, p193);\n    float d194 = dist(z, p194);\n    float d195 = dist(z, p195);\n\n    float d196 = dist(z, p196);\n    float d197 = dist(z, p197);\n    float d198 = dist(z, p198);\n    float d199 = dist(z, p199);\n    float d200 = dist(z, p200);\n    float d201 = dist(z, p201);\n    float d202 = dist(z, p202);\n    float d203 = dist(z, p203);\n    float d204 = dist(z, p204);\n    float d205 = dist(z, p205);\n    float d206 = dist(z, p206);\n    float d207 = dist(z, p207);\n    float d208 = dist(z, p208);\n    float d209 = dist(z, p209);\n    float d210 = dist(z, p210);\n\n    float d211 = dist(z, p211);\n    float d212 = dist(z, p212);\n    float d213 = dist(z, p213);\n    float d214 = dist(z, p214);\n    float d215 = dist(z, p215);\n    float d216 = dist(z, p216);\n    float d217 = dist(z, p217);\n    float d218 = dist(z, p218);\n    float d219 = dist(z, p219);\n    float d220 = dist(z, p220);\n    float d221 = dist(z, p221);\n    float d222 = dist(z, p222);\n    float d223 = dist(z, p223);\n    float d224 = dist(z, p224);\n    float d225 = dist(z, p225);\n\n    float d226 = dist(z, p226);\n    float d227 = dist(z, p227);\n    float d228 = dist(z, p228);\n    float d229 = dist(z, p229);\n    float d230 = dist(z, p230);\n    float d231 = dist(z, p231);\n    float d232 = dist(z, p232);\n    float d233 = dist(z, p233);\n    float d234 = dist(z, p234);\n    float d235 = dist(z, p235);\n    float d236 = dist(z, p236);\n    float d237 = dist(z, p237);\n    float d238 = dist(z, p238);\n    float d239 = dist(z, p239);\n    float d240 = dist(z, p240);\n\n    float d241 = dist(z, p241);\n    float d242 = dist(z, p242);\n    float d243 = dist(z, p243);\n    float d244 = dist(z, p244);\n    float d245 = dist(z, p245);\n    float d246 = dist(z, p246);\n    float d247 = dist(z, p247);\n    float d248 = dist(z, p248);\n    float d249 = dist(z, p249);\n    float d250 = dist(z, p250);\n    float d251 = dist(z, p251);\n    float d252 = dist(z, p252);\n    float d253 = dist(z, p253);\n    float d254 = dist(z, p254);\n    float d255 = dist(z, p255);\n    \n    // Color the canvas.\n    y = smst(d001) * cl001 + y;\n    y = smst(d002) * cl002 + y;\n    y = smst(d003) * cl003 + y;\n    y = smst(d004) * cl004 + y;\n    y = smst(d005) * cl005 + y;\n    y = smst(d006) * cl006 + y;\n    y = smst(d007) * cl007 + y;\n    y = smst(d008) * cl008 + y;\n    y = smst(d009) * cl009 + y;\n    y = smst(d010) * cl010 + y;\n    y = smst(d011) * cl011 + y;\n    y = smst(d012) * cl012 + y;\n    y = smst(d013) * cl013 + y;\n    y = smst(d014) * cl014 + y;\n    y = smst(d015) * cl015 + y;\n\n    y = smst(d016) * cl016 + y;\n    y = smst(d017) * cl017 + y;\n    y = smst(d018) * cl018 + y;\n    y = smst(d019) * cl019 + y;\n    y = smst(d020) * cl020 + y;\n    y = smst(d021) * cl021 + y;\n    y = smst(d022) * cl022 + y;\n    y = smst(d023) * cl023 + y;\n    y = smst(d024) * cl024 + y;\n    y = smst(d025) * cl025 + y;\n    y = smst(d026) * cl026 + y;\n    y = smst(d027) * cl027 + y;\n    y = smst(d028) * cl028 + y;\n    y = smst(d029) * cl029 + y;\n    y = smst(d030) * cl030 + y;\n\n    y = smst(d031) * cl031 + y;\n    y = smst(d032) * cl032 + y;\n    y = smst(d033) * cl033 + y;\n    y = smst(d034) * cl034 + y;\n    y = smst(d035) * cl035 + y;\n    y = smst(d036) * cl036 + y;\n    y = smst(d037) * cl037 + y;\n    y = smst(d038) * cl038 + y;\n    y = smst(d039) * cl039 + y;\n    y = smst(d040) * cl040 + y;\n    y = smst(d041) * cl041 + y;\n    y = smst(d042) * cl042 + y;\n    y = smst(d043) * cl043 + y;\n    y = smst(d044) * cl044 + y;\n    y = smst(d045) * cl045 + y;\n\n    y = smst(d046) * cl046 + y;\n    y = smst(d047) * cl047 + y;\n    y = smst(d048) * cl048 + y;\n    y = smst(d049) * cl049 + y;\n    y = smst(d050) * cl050 + y;\n    y = smst(d051) * cl051 + y;\n    y = smst(d052) * cl052 + y;\n    y = smst(d053) * cl053 + y;\n    y = smst(d054) * cl054 + y;\n    y = smst(d055) * cl055 + y;\n    y = smst(d056) * cl056 + y;\n    y = smst(d057) * cl057 + y;\n    y = smst(d058) * cl058 + y;\n    y = smst(d059) * cl059 + y;\n    y = smst(d060) * cl060 + y;\n\n    y = smst(d061) * cl061 + y;\n    y = smst(d062) * cl062 + y;\n    y = smst(d063) * cl063 + y;\n    y = smst(d064) * cl064 + y;\n    y = smst(d065) * cl065 + y;\n    y = smst(d066) * cl066 + y;\n    y = smst(d067) * cl067 + y;\n    y = smst(d068) * cl068 + y;\n    y = smst(d069) * cl069 + y;\n    y = smst(d070) * cl070 + y;\n    y = smst(d071) * cl071 + y;\n    y = smst(d072) * cl072 + y;\n    y = smst(d073) * cl073 + y;\n    y = smst(d074) * cl074 + y;\n    y = smst(d075) * cl075 + y;\n\n    y = smst(d076) * cl076 + y;\n    y = smst(d077) * cl077 + y;\n    y = smst(d078) * cl078 + y;\n    y = smst(d079) * cl079 + y;\n    y = smst(d080) * cl080 + y;\n    y = smst(d081) * cl081 + y;\n    y = smst(d082) * cl082 + y;\n    y = smst(d083) * cl083 + y;\n    y = smst(d084) * cl084 + y;\n    y = smst(d085) * cl085 + y;\n    y = smst(d086) * cl086 + y;\n    y = smst(d087) * cl087 + y;\n    y = smst(d088) * cl088 + y;\n    y = smst(d089) * cl089 + y;\n    y = smst(d090) * cl090 + y;\n\n    y = smst(d091) * cl091 + y;\n    y = smst(d092) * cl092 + y;\n    y = smst(d093) * cl093 + y;\n    y = smst(d094) * cl094 + y;\n    y = smst(d095) * cl095 + y;\n    y = smst(d096) * cl096 + y;\n    y = smst(d097) * cl097 + y;\n    y = smst(d098) * cl098 + y;\n    y = smst(d099) * cl099 + y;\n    y = smst(d100) * cl100 + y;\n    y = smst(d101) * cl101 + y;\n    y = smst(d102) * cl102 + y;\n    y = smst(d103) * cl103 + y;\n    y = smst(d104) * cl104 + y;\n    y = smst(d105) * cl105 + y;\n\n    y = smst(d106) * cl106 + y;\n    y = smst(d107) * cl107 + y;\n    y = smst(d108) * cl108 + y;\n    y = smst(d109) * cl109 + y;\n    y = smst(d110) * cl110 + y;\n    y = smst(d111) * cl111 + y;\n    y = smst(d112) * cl112 + y;\n    y = smst(d113) * cl113 + y;\n    y = smst(d114) * cl114 + y;\n    y = smst(d115) * cl115 + y;\n    y = smst(d116) * cl116 + y;\n    y = smst(d117) * cl117 + y;\n    y = smst(d118) * cl118 + y;\n    y = smst(d119) * cl119 + y;\n    y = smst(d120) * cl120 + y;\n\n    y = smst(d121) * cl121 + y;\n    y = smst(d122) * cl122 + y;\n    y = smst(d123) * cl123 + y;\n    y = smst(d124) * cl124 + y;\n    y = smst(d125) * cl125 + y;\n    y = smst(d126) * cl126 + y;\n    y = smst(d127) * cl127 + y;\n    y = smst(d128) * cl128 + y;\n    y = smst(d129) * cl129 + y;\n    y = smst(d130) * cl130 + y;\n    y = smst(d131) * cl131 + y;\n    y = smst(d132) * cl132 + y;\n    y = smst(d133) * cl133 + y;\n    y = smst(d134) * cl134 + y;\n    y = smst(d135) * cl135 + y;\n\n    y = smst(d136) * cl136 + y;\n    y = smst(d137) * cl137 + y;\n    y = smst(d138) * cl138 + y;\n    y = smst(d139) * cl139 + y;\n    y = smst(d140) * cl140 + y;\n    y = smst(d141) * cl141 + y;\n    y = smst(d142) * cl142 + y;\n    y = smst(d143) * cl143 + y;\n    y = smst(d144) * cl144 + y;\n    y = smst(d145) * cl145 + y;\n    y = smst(d146) * cl146 + y;\n    y = smst(d147) * cl147 + y;\n    y = smst(d148) * cl148 + y;\n    y = smst(d149) * cl149 + y;\n    y = smst(d150) * cl150 + y;\n\n    y = smst(d151) * cl151 + y;\n    y = smst(d152) * cl152 + y;\n    y = smst(d153) * cl153 + y;\n    y = smst(d154) * cl154 + y;\n    y = smst(d155) * cl155 + y;\n    y = smst(d156) * cl156 + y;\n    y = smst(d157) * cl157 + y;\n    y = smst(d158) * cl158 + y;\n    y = smst(d159) * cl159 + y;\n    y = smst(d160) * cl160 + y;\n    y = smst(d161) * cl161 + y;\n    y = smst(d162) * cl162 + y;\n    y = smst(d163) * cl163 + y;\n    y = smst(d164) * cl164 + y;\n    y = smst(d165) * cl165 + y;\n\n    y = smst(d166) * cl166 + y;\n    y = smst(d167) * cl167 + y;\n    y = smst(d168) * cl168 + y;\n    y = smst(d169) * cl169 + y;\n    y = smst(d170) * cl170 + y;\n    y = smst(d171) * cl171 + y;\n    y = smst(d172) * cl172 + y;\n    y = smst(d173) * cl173 + y;\n    y = smst(d174) * cl174 + y;\n    y = smst(d175) * cl175 + y;\n    y = smst(d176) * cl176 + y;\n    y = smst(d177) * cl177 + y;\n    y = smst(d178) * cl178 + y;\n    y = smst(d179) * cl179 + y;\n    y = smst(d180) * cl180 + y;\n\n    y = smst(d181) * cl181 + y;\n    y = smst(d182) * cl182 + y;\n    y = smst(d183) * cl183 + y;\n    y = smst(d184) * cl184 + y;\n    y = smst(d185) * cl185 + y;\n    y = smst(d186) * cl186 + y;\n    y = smst(d187) * cl187 + y;\n    y = smst(d188) * cl188 + y;\n    y = smst(d189) * cl189 + y;\n    y = smst(d190) * cl190 + y;\n    y = smst(d191) * cl191 + y;\n    y = smst(d192) * cl192 + y;\n    y = smst(d193) * cl193 + y;\n    y = smst(d194) * cl194 + y;\n    y = smst(d195) * cl195 + y;\n\n    y = smst(d196) * cl196 + y;\n    y = smst(d197) * cl197 + y;\n    y = smst(d198) * cl198 + y;\n    y = smst(d199) * cl199 + y;\n    y = smst(d200) * cl200 + y;\n    y = smst(d201) * cl201 + y;\n    y = smst(d202) * cl202 + y;\n    y = smst(d203) * cl203 + y;\n    y = smst(d204) * cl204 + y;\n    y = smst(d205) * cl205 + y;\n    y = smst(d206) * cl206 + y;\n    y = smst(d207) * cl207 + y;\n    y = smst(d208) * cl208 + y;\n    y = smst(d209) * cl209 + y;\n    y = smst(d210) * cl210 + y;\n\n    y = smst(d211) * cl211 + y;\n    y = smst(d212) * cl212 + y;\n    y = smst(d213) * cl213 + y;\n    y = smst(d214) * cl214 + y;\n    y = smst(d215) * cl215 + y;\n    y = smst(d216) * cl216 + y;\n    y = smst(d217) * cl217 + y;\n    y = smst(d218) * cl218 + y;\n    y = smst(d219) * cl219 + y;\n    y = smst(d220) * cl220 + y;\n    y = smst(d221) * cl221 + y;\n    y = smst(d222) * cl222 + y;\n    y = smst(d223) * cl223 + y;\n    y = smst(d224) * cl224 + y;\n    y = smst(d225) * cl225 + y;\n\n    y = smst(d226) * cl226 + y;\n    y = smst(d227) * cl227 + y;\n    y = smst(d228) * cl228 + y;\n    y = smst(d229) * cl229 + y;\n    y = smst(d230) * cl230 + y;\n    y = smst(d231) * cl231 + y;\n    y = smst(d232) * cl232 + y;\n    y = smst(d233) * cl233 + y;\n    y = smst(d234) * cl234 + y;\n    y = smst(d235) * cl235 + y;\n    y = smst(d236) * cl236 + y;\n    y = smst(d237) * cl237 + y;\n    y = smst(d238) * cl238 + y;\n    y = smst(d239) * cl239 + y;\n    y = smst(d240) * cl240 + y;\n\n    y = smst(d241) * cl241 + y;\n    y = smst(d242) * cl242 + y;\n    y = smst(d243) * cl243 + y;\n    y = smst(d244) * cl244 + y;\n    y = smst(d245) * cl245 + y;\n    y = smst(d246) * cl246 + y;\n    y = smst(d247) * cl247 + y;\n    y = smst(d248) * cl248 + y;\n    y = smst(d249) * cl249 + y;\n    y = smst(d250) * cl250 + y;\n    y = smst(d251) * cl251 + y;\n    y = smst(d252) * cl252 + y;\n    y = smst(d253) * cl253 + y;\n    y = smst(d254) * cl254 + y;\n    y = smst(d255) * cl255 + y;\n    \n    // Clamp final result.\n    y = min(max(y, 0.0), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}