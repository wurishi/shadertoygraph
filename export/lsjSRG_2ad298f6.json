{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Ref: http://adrianboeing.blogspot.in/2011/02/sphere-effect-in-webgl.html\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // clamp pixel posiiton in [-1,1]\n    vec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    \n    // aspect ratio correction \n    p.x = p.x * iResolution.x/iResolution.y;\n    \n    // This generates a circle from a re-arrangment of the circle equation (simplified for unit circle):\n\t// xÂ²+yÂ²=1\n\t// yÂ²=1-xÂ²\n\t// y=sqrt(1-xÂ²)\n    float radiusSq = dot(p,p);\n    \n    // devide bt radiusSq is perspective devide\n    float f =(1.0 - sqrt(1.0 - radiusSq))/radiusSq; \n  \n    // as always i really dont understand how above maths is translated in texture coordinates :(\n    vec2 uv;\n    uv.x = p.x*f + iTime;\n    uv.y = p.y*f - iTime;\n\tfragColor = vec4(texture(iChannel0,uv).xyz, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsjSRG","date":"1413370103","viewed":204,"name":"SphereEffect","username":"abhi_bansal","description":"SphereEffect","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","sphere"],"hasliked":0,"parentid":"","parentname":""}}