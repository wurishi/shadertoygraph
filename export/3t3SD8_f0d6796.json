{"ver":"0.1","info":{"id":"3t3SD8","date":"1634830750","viewed":68,"name":"Circle Rectangle Line Play","username":"crewce","description":"Circle - rectangle - line play","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPS 0.07\n#define PI 3.1415926535\n\nfloat distLine(vec2 point, vec2 a, vec2 b) {\n    vec2 pa = point - a;\n    vec2 pb = b - a;\n    float t = dot(pa, pb) / dot(pb, pb);\n    t = clamp(t, 0.0, 1.0);\n    return distance(pa, t * pb);\n}\n\nvec3 line(vec2 point, vec2 a, vec2 b, float thickness, vec3 color) {\n    float dist = distLine(point, a, b);\n    return (1.0 - step(thickness, dist)) * color;\n}\n\nvec3 circle(vec2 point, vec2 center, float r, float thickness, vec3 fillColor, vec3 strokeColor) {\n\tfloat d = length(point - center);\n    float inner = step(r - thickness, d);\n    float outter = step(d, r);\n\tvec3 color = (1.0 - inner) * fillColor + inner * outter * strokeColor;\n\treturn color;\n}\n\nvec3 rectangle(vec2 point, vec2 center, vec2 size, float thickness, vec3 fillColor, vec3 strokeColor) {\n    vec2 po = abs(point - center);\n    vec2 mo = min(max(po, vec2(0.0)), size);\n    vec2 ed = vec2(1.0) - step(size, mo) * step(size - vec2(thickness), mo);\n    vec2 st = vec2(1.0) - step(size - vec2(thickness), mo);\n    return st.x * st.y * fillColor + ed.x * ed.y * strokeColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    uv *= mat2(cos(iTime), sin(iTime), -sin(iTime), cos(iTime));\n    \n    float dist = length(uv);\n      \n    float ang = atan(uv.y,uv.x);\n    float angMapVal = floor(ang / (2.*PI) * 100.);\n    float m1 = mod(angMapVal, 5.0);\n    float m2 = sin(ang * 40.0) * 4.0;\n    float m = mix(m1, m2, mod(iTime, 12.));\n    float modif = EPS + m * 0.010;\n    \n    float r = modif + 0.25 + sin(iTime) * 0.25;\n    float big = smoothstep(r, r - EPS, dist); // * step(r - EPS, dist);\n    \n    // generate final color\n    vec3 col = vec3(1.0, 0.1, 0.7) * big;\n    col += line(uv, vec2(-0.7,  0.3), vec2(0.7, 0.0), 0.0025, vec3(0.9, 0.0, 0.0));\n    col += line(uv, vec2(-0.7,  0.0), vec2(0.7, 0.3), 0.0025, vec3(0.9, 0.0, 0.0));\n    col += line(uv, vec2( 0.0, -0.3), vec2(0.0, 0.4), 0.0025, vec3(0.9, 0.0, 0.0));\n    col += line(uv, vec2(-0.7,  0.1), vec2(0.7, 0.1), 0.0025, vec3(0.9, 0.0, 0.0));\n    col += line(uv, vec2(-0.6, -0.4), vec2(0.2, 0.4), 0.0025, vec3(0.9, 0.0, 0.0));\n    col += line(uv, vec2( 0.4, -0.4), vec2(0.2, 0.4), 0.0025, vec3(0.9, 0.0, 0.0));\n    col += circle(uv, vec2(0.), 0.3, 0.07, vec3(0.0, 0.8, 0.0), vec3(0.0, 0.0, 0.7));\n    col += rectangle(uv, vec2(0.5, 0.3), vec2(0.15, 0.15), 0.05, vec3(0.9, 0.0, 0.0), vec3(0.9, 0.4, 0.2));\n    col += rectangle(uv, vec2(-0.5, -0.4), vec2(0.1, 0.1), 0.03, vec3(1.0, 0.0, 0.4), vec3(0.5, 0.4, 0.2));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}