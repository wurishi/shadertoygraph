{"ver":"0.1","info":{"id":"MtBcDR","date":"1508180788","viewed":223,"name":"Sound Synthesis: Trumpet","username":"jt","description":"A simple trumpet sound, based on smooth sawtooth ([url]https://www.shadertoy.com/view/llByWR[/url]).","likes":5,"published":1,"flags":8,"usePreview":0,"tags":["soundsynthesis","trumpet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// \"sound-in\" message from https://www.shadertoy.com/view/MtyXRW by Fabrice Neyret\n// --- access to the image of ascii code c\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): texture( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.))\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureLod( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), \\\n//                                                                               log2(length(fwidth(U/16.*iResolution.xy))) )\n  #define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);C(111);C(117);C(110);C(100);C(32);C(105);C(110); // message \"Sound in\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //  if (iResolution.y<200.) to display only in the icon \n    if (iResolution.y<2000.) {float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);if(c>=0.){fragColor=vec4(c);return;}}\n\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}\n\n/*\n#define plot(Y) o += smoothstep(40./R.y, 0., abs(Y-U.y))\n#define plot_r(Y) o.r += smoothstep(40./R.y, 0., abs(Y-U.y))\n#define plot_g(Y) o.g += smoothstep(40./R.y, 0., abs(Y-U.y))\n\n#define pi 3.1415926\n\nfloat sigmoid(float x)\n{\n    return 1.0 / (1.0 + exp(-x));\n}\n\nfloat smoothed_sawtooth(float d, float x)\n{\n    return (1.0 - 2.0 * acos(d * -cos(x / 2.0)) / pi) * (2.0 *  atan(sin(x / 2.0) / (1.0 - d)) / pi);\n}\n\nfloat trumpet(float t, float f)\n{\n    return smoothed_sawtooth(0.05 + 0.95 * sigmoid(t * 10.0), f * t);\n}\n\nfloat scale(float n)\n{\n    return mod(floor(n) * 7.0, 12.0);\n}\n\nvoid mainImage( out vec4 o, in vec2 U )\n{\n    float T = mod(iTime / 2.0, 4.0);\n    float t = mod(iTime, 2.0);\n    vec2 R = iResolution.xy;\n\n    U = 10.* (2.*U-R)/R.y;\n    o -= o;\n    \n    float f = pow(2.0, scale(T)/12.0);\n    plot(trumpet(t - U.x, f * 2.0 * pi * 440.0 / 4.0));\n    //plot(plucked_string(2.0 * pi * 440.0 * mod(t, 5.0) - U.x) + 0.0);\n    \n    //plot(  sin(t - U.x) + 0.);\n \n    o.b += .2;\n}\n*/\n    ","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// Simple Trumpet sound - 2017 by JT\n\n#define pi 3.1415926\n\nfloat sigmoid(float x)\n{\n    return 1.0 / (1.0 + exp(-x));\n}\n\nfloat smoothed_sawtooth(float d, float x)\n{\n    return (1.0 - 2.0 * acos(d * -cos(x / 2.0)) / pi) * (2.0 *  atan(sin(x / 2.0) / (1.0 - d)) / pi);\n}\n\nfloat trumpet(float t, float f)\n{\n    // Sound starts with sine which turns into (smoothed) sawtooth.\n    return smoothed_sawtooth(0.95 * sigmoid(t * 10.0), f * t);\n}\n\nfloat scale(float n)\n{\n    return mod(floor(n) * 7.0, 12.0);\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    float t = mod(time, 2.0);\n    //float d = 0.5 + 0.499 * sin(time);\n    //return vec2(smoothed_sawtooth(.001, 2.0 * pi * 440.0 * time));\n    //return vec2(smoothed_sawtooth(0.00 + 0.95 * sigmoid(t * 10.0), 2.0 * pi * 440.0 * t));\n    //return 0.25 * vec2(trumpet(t, 2.0 * pi * 440.0 / 4.0));\n    ////float f = pow(2.0, mix(0.0, 7.0, step(1.0, t)) / 12.0);\n    float f = pow(2.0, scale(mod(time / 2.0, 4.0))/12.0);\n    return 0.25 * vec2(trumpet(t, f * 2.0 * pi * 440.0 / 4.0));\n}\n","name":"Sound","description":"","type":"sound"}]}