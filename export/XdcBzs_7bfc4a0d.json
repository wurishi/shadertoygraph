{"ver":"0.1","info":{"id":"XdcBzs","date":"1526303033","viewed":1493,"name":"House Quake","username":"Del","description":"Screen Shake (vertex shader really)","likes":11,"published":3,"flags":0,"usePreview":1,"tags":["shake","quake"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat random (in vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat noise(in vec2 st)\n{\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\n#define octaves 3\nfloat fbm(in vec2 p)\n{\n    float value = 0.0;\n    float freq = 1.13;\n    float amp = 0.57;    \n    for (int i = 0; i < octaves; i++)\n    {\n        value += amp * (noise((p - vec2(1.0)) * freq));\n        freq *= 1.61;\n        amp *= 0.47;\n    }\n    return value;\n}\n\nfloat pat(in vec2 p)\n{\n    float time = iTime*0.75;\n    vec2 aPos = vec2(sin(time * 0.035), sin(time * 0.05)) * 3.;\n    vec2 aScale = vec2(3.25);\n    float a = fbm(p * aScale + aPos);\n    vec2 bPos = vec2(sin(time * 0.09), sin(time * 0.11)) * 1.2;\n    vec2 bScale = vec2(0.75);\n    float b = fbm((p + a) * bScale + bPos);\n    vec2 cPos = vec2(-0.6, -0.5) + vec2(sin(-time * 0.01), sin(time * 0.1)) * 1.9;\n    vec2 cScale = vec2(1.25);\n    float c = fbm((p + b) * cScale + cPos);\n    return c;\n}\n\nvec2 Shake(float maxshake, float mag)\n{\n    float speed = 20.0*mag;\n    float shakescale = maxshake * mag;\n    \n    float time = iTime*speed;\t\t\t// speed of shake\n    \n    vec2 p1 = vec2(0.25,0.25);\n    vec2 p2 = vec2(0.75,0.75);\n    p1 += time;\n    p2 += time;\n    \n    // random shake is just too violent...\n    //float val1 = random(p1);\n    //float val2 = random(p2);\n    \n    float val1 = pat(p1);\n    float val2 = pat(p2);\n    val1 = clamp(val1,0.0,1.0);\n    val2 = clamp(val2,0.0,1.0);\n    \n    return vec2(val1*shakescale,val2*shakescale);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float maxshake = 0.05;\t\t\t\t// max shake amount\n    float mag = 0.5+sin(iTime)*0.5;\t\t// shake magnitude...\n\n    // *temp* , We will calc shakexy once in the vertex shader...\n    vec2 shakexy = Shake(maxshake,mag);\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv *= 1.0-(maxshake*mag);\n    vec3 col = texture(iChannel0, uv + shakexy).xyz;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}