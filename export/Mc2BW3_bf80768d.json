{"ver":"0.1","info":{"id":"Mc2BW3","date":"1725742502","viewed":57,"name":"Cosmic clock 10","username":"ChunderFPV","description":"Yes, another one.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["blur","clock","spiral","fractions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":2,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// digit display from https://www.shadertoy.com/view/stlSzM\n#define bcd(i) (i/10*6+i)\n#define digit(u,i) texture(iChannel2, (u)/16.+vec2(float(i)/16., .75)).x\n#define draw_digit(c,u,i) if(abs(u).x < .5 && abs(u).y < .5) c += (1.-c)*digit(u+.5, i)\n#define draw_bcd(c,u,i,b) if (b) draw_digit(c, u, (i&0xf0)>>4); draw_digit(c, u-vec2(.5,0),(i&0xf))\n\n// draw time: coords, offset, size\nfloat dt(vec2 u, vec2 o, float s)\n{\n    u -= o; // offset\n    u /= s; // size\n    float c = 0.,\n          t = iDate.w;\n    ivec2 d = ivec2(mod(t/36e2, 12.), mod(t/60., 60.)); // hour, min\n    if (d.x == 0) d.x = 12; // change 0 to 12\n    u.x += .85;\n    draw_bcd(c, u, bcd(d.x), (d.x > 9)); // 1st & 3rd digits\n    u.x -= .85;\n    draw_digit(c, u, 10); // colon\n    u.x -= .35;\n    draw_bcd(c, u, bcd(d.y), true); // 2nd & 4th digits\n    return c;\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    C = texture(iChannel0, U/R, .5) + texture(iChannel1, U/R)*(1.-BS)\n      + dt(U/R, vec2(.08, .95), .06) * .3; // digit display\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define BS .97  // blur strength","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define H(a) (cos(radians( vec3(-40, 0, 40) )+(a)*6.2832)*.5+.5)  // hue\n#define P exp(-length((u-p)/w)) * k  // points\n\nvoid mainImage(out vec4 C, in vec2 U)\n{\n    vec3 c = vec3(0), s1 = c, s2 = c, k;\n    \n    vec2 r = R-mod(R, 4.),  // hack to prevent line from polar transform\n         u = (U - r/2.)/r.y,\n         o = u, w, p;\n    \n    float t = mod(iDate.w/36e2, 12.);  // 12 hours of minutes\n    if (t < 1.) t += 12.;  // change 0 to 12\n    \n    float s = 2e3,  // scale\n          f = 2.5,  // frame scale (warp radius)\n          l = 30.,  // detail loop\n          n = 5. - 10.*iMouse.y/R.y,  // exponent\n          a1 = t*s,          // spiral 1 rotation\n          a2 = sqrt(a1*2.),  // spiral 2 rotation\n          q = length(o*f),\n          i = 0., x, y;\n    \n    u *= pow(s, n)*f;  // apply zoom\n    u = vec2( length(u), atan(u.x, u.y)/6.2832 );  // polar transform \n    u.x = pow(u.x, 1./n);   // stretch x (radial)\n    w = fwidth(u)*max(R.y/1e3, .5);  // point size\n    \n    for (; i++<l;)  // detail loop\n        p.x = round((u.x-i)/l)*l+i,  // segment x & skip rows\n        x = p.x/t,                   // used for color & shading\n        y = p.x*t-a1,                // y speed (angular)\n        k = H(x),                    // color\n        k *= cos(x*6.2832)*.4+.6,    // darken reds\n        p.y = round(u.y-y)+y,        // segment y\n        s1 = max(s1, P),             // spiral 1\n        y = sqrt(p.x*t*2.)-a2,       // new y speed\n        p.y = round(u.y-y)+y,        // segment y again\n        s2 = max(s2, P);             // spiral 2\n    \n    c += s2*1.6 + s1*(1.-sqrt(min(q, 1./q)));\n    c += .04 * H(c-u.y*2e2) * pow(H(q), vec3(10));  // halo\n    \n    u = abs(U*2.-R)/R;\n    c *= min(5.-max(u.x, u.y)*5., 1.); // vignette\n    \n    C = vec4(c + c*c, 1);  \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define B(s) texture(iChannel1, mix(U/R, vec2(.5), s))*BS + texture(iChannel0, U/R)\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    C = max( B(-.005), B(.005) );  // blur in and out\n}","name":"Buffer B","description":"","type":"buffer"}]}