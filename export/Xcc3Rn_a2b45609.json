{"ver":"0.1","info":{"id":"Xcc3Rn","date":"1711276617","viewed":71,"name":"3 Eggs","username":"tholzer","description":"Examine the shadows of 3 unpainted eggs.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rays","egg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Fork of \"Egg\" by Lanza. https://shadertoy.com/view/lsXSWf\n// 2024-03-24 10:32:15\n\n/* Just 3 unpainted eggs */\n\n#define EPS \t0.001\n#define MAX_I \t50\n\nfloat egg(vec3 p, float r)\n{\n  return length(p) - r * 1.7 * cos(p.y + 1.36);\n}\n\nfloat scene(vec3 p)\n{\n  float d =    egg(p, 0.5);\n  d =    min(d,egg(p + vec3(-0.7,0,0), 0.5));\n  return min(d,egg(p + vec3(+0.7,0,0), 0.5));\n}\n\nfloat shade(vec3 n, vec3 rd)\n{\n  vec3 light = vec3(2.0, -2.0, 5.0);\n  vec3 ld = normalize(light);\n  \n  float intensity = dot(n, -ld);\n  return intensity;\n}\n\n// get normal of a point\nvec3 normal(vec3 p)\n{\n  vec2 n = vec2(EPS, 0.0);\n  return normalize(vec3(\n    scene(p + n.xyy) - scene(p - n.xyy),\n    scene(p + n.yxy) - scene(p - n.yxy),\n    scene(p + n.yyx) - scene(p - n.yyx)));\n}\n\nvec3 march(vec3 ro, vec3 rd) \n{\n  float t = scene(ro);\n  for(int i = 0; i < MAX_I; i++)\n  {\n    vec3 p\t= ro + rd * t;\n    float d\t= scene(p);\n    t += d;\n    if(d < EPS)\n    {\n      float l = shade(normal(p), rd);\n      return vec3(1.0, 0.95, 0.95) * l * 0.7 + vec3(1.0, 0.8, 0.8) * 0.3;\n    }\n  }\n  return vec3(0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  // coord system adjust\n  vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.x;\n  vec3 cam = vec3(0.0,  0.0, -1.5 +0.1*sin(iTime));\n  vec3 ctg = vec3(0.0, -0.3, 0.0);\n  vec3 up  = vec3(0.0, -1.0, 0.0);\n  vec3 dir = normalize(ctg - cam);\n  vec3 right = normalize(cross(up, dir));\n  up = normalize(cross(right, dir));\n  vec3 rd = normalize(dir + uv.x * right + uv.y * up);\n    \n  vec3 ce = march(cam, rd);\n  if(ce == vec3(0.0))\n    ce = vec3(0.1, 0.5, 0.3);   // bgColor\n  // vignettage du fond vert.\n  ce = ce * cos(length(uv + vec2(0.0, 0.3)));\n  fragColor = vec4(ce, 1);\n}","name":"Image","description":"","type":"image"}]}