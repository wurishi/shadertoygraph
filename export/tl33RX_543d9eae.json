{"ver":"0.1","info":{"id":"tl33RX","date":"1577035788","viewed":52,"name":"heart_test1231","username":"krone128","description":"adad","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["my"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    vec2 center = iResolution.xy / 2.;\n    vec2 radius = vec2(100., 200.);\n    float theta = iTime;\n    \n    vec2 offset = vec2(0, abs(fragCoord.x - center.x)) * 0.5;\n    //offset = vec2(offset.x * cos(theta) - offset.y * sin(theta), offset.x * sin(theta) + offset.y * cos(theta));\n    \n    vec2 fc = fragCoord - center;\n    fc -= offset;\n\n    vec3 col = vec3(0);\n    \n    float ellips = pow(fc.x*cos(theta) + fc.y * sin(theta),2.)\n    /pow(radius.x,2.)\n    +\n    pow(fc.x*sin(theta)-fc.y*cos(theta), 2.)\n    /pow(radius.y,2.);\n    \n    if(ellips < 1.)\n    {\n        col = vec3(0.5,0,0);\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec4 someFunction( vec4 a, float b )\n{\n    return a+b;\n}","name":"Common","description":"","type":"common"}]}