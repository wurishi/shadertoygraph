{"ver":"0.1","info":{"id":"4tjBDt","date":"1517581141","viewed":130,"name":"Voronoi Ã  la libnoise","username":"aforemny","description":"The implementation is the same as libnoise's implementation of Voronoi noise (restricted to 2D).","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","libnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int X_NOISE_GEN = 1619;\nconst int Y_NOISE_GEN = 31337;\nconst int Z_NOISE_GEN = 6971;\nconst int SEED_NOISE_GEN = 1013;\n\nint IntValueNoise3D( int x, int y, int z, int seed) {\n    int n = (\n          X_NOISE_GEN * x\n        + Y_NOISE_GEN * y\n        + Z_NOISE_GEN * z\n        + SEED_NOISE_GEN * seed)\n        & 0x7fffffff;\n    n = (n >> 13) ^ n;\n    return (n * (n * n * 60493 + 19990303) + 1376312589) & 0x7fffffff;\n}\n\nfloat ValueNoise3D( int x, int y, int z, int seed ) {\n    return 1.0 - (float(IntValueNoise3D(x, y, z, seed)) / 1073741824.0);\n}\n\nfloat Voronoi(vec2 u) {\n\n    int x = (u.x > 0.0? int(u.x): int(u.x) - 1);\n    int y = (u.y > 0.0? int(u.y): int(u.y) - 1);\n    \n    float minDist = 46340.0;\n    vec2 candidate = vec2(0);\n    \n    for (int yCur = y - 2; yCur <= y + 2; yCur++) {\n        for (int xCur = x - 2; xCur <= x  + 2; xCur++) {\n            vec2 pos = vec2(\n                float(xCur) + ValueNoise3D(xCur, yCur, 0, 0),\n                float(yCur) + ValueNoise3D(xCur, yCur, 0, 1)\n            );\n                \n            float dist = length(pos - u);        \n            if (dist < minDist) {\n                minDist = dist;\n                candidate = pos;\n            }\n        }\n    }\n       \n    return ValueNoise3D(int(floor(candidate.x)), int(floor(candidate.y)), 0, 1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / vec2(20.0);\n    vec3 col = vec3(Voronoi(uv) + 1.0 / 2.0);    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}