{"ver":"0.1","info":{"id":"4dXyRj","date":"1488829299","viewed":483,"name":"skydome algorithm","username":"andrewww1","description":"Algorithm for doing skydomes, though without a proper sky dome texture.\nDrag the mouse to look around.\nCheck top of code for instructions on using actual skydome textures.\n\nI feel dizzy.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["texture","sky","hack","skydome","custom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nTo load textures off your computer goto:\nhttps://github.com/andrewhills/ShadertoyCustomTextures\n\nand follow the instructions to create a javascript bookmark, and then run the bookmark while viewing this shadertoy.\n\nThen drag and drop one of the links below onto 'texture preview slot0'.\n\nhttps://dl.dropboxusercontent.com/s/wwalm01vhgsoh2n/ClearDuskThinAtmosphere.png?dl=0\nhttps://dl.dropboxusercontent.com/s/z5q69525qd7by17/SunsetFair.png?dl=0\n\nSome skydome textures (warning last two are not pow2 which doesn't work on some machines):\n\nhttps://dl.dropboxusercontent.com/s/2er2lcsuccrmz21/sky_povray.jpg?dl=0\nhttps://dl.dropboxusercontent.com/s/1twry80orsniw5h/sky_twighlight.jpg?dl=0\n*/\n\nbool collidePlane(vec3 P,vec3 V,vec4 plane, out float t) {    \n    float NPd=dot(plane.xyz,P)+plane.w;\n    float NV=dot(plane.xyz,V);\n    t=-NPd/NV;\n    //P not below/on, V not parallel/away\n    return (NPd>0.0 && NV<0.0);\n}\n \nvec3 calcPrimaryRay(vec2 screen,float fovy,float aspect) {\n    float d=1.0/tan(fovy/2.0);\n    vec3 v=vec3(screen.x*aspect,screen.y,-d);\n    v=normalize(v);\n    return v;  \n}\n\nmat3 lookRot(float yaw,float pitch) {\n    vec2 s=vec2(sin(pitch),sin(yaw));\n    vec2 c=vec2(cos(pitch),cos(yaw));\n    return mat3(c.y,0.0,-s.y,s.y*s.x,c.x,c.y*s.x,s.y*c.x,-s.x,c.y*c.x);\n}\n\n#define PI 3.14159265359\n\t\nfloat atan2(float y,float x) {\n\t\n    if(x>0.0) {\n        return atan(y/x);\n    } else if(y>0.0) {\n        return PI/2.0-atan(x/y);\n    } else if(y<0.0) {\n        return -PI/2.0 -atan(x/y);\n    } else if(x<0.0) {\n        return atan(y/x)+PI;\n    }\n\n    return 0.0;\n}\n\n//from github.com/tunabrain/tungsten/blob/master/src/core/primitives/Skydome.cpp\n\nvec2 dirToDomeUv(vec3 d) {\n\tvec2 uv=vec2(atan2(d.z,d.x)/(2.0*PI)+0.5,acos(-d.y)/PI);\n\tuv.y=uv.y*2.0-1.0;\n\t//uv.y=clamp(uv.y,0.0,1.0);\n    return uv;\n}\n\nvec3 render(vec3 ro,vec3 rd) {\n    vec3 col;\n    float t;\n    vec3 planeNor=vec3(0.0,1.0,0.0);\n    \n    if(collidePlane(ro,rd,vec4(planeNor,0.0),t)) {\n        vec3 colPt=ro+rd*t;  \n        vec2 d=colPt.xz;\n        d.x +=sin(length(d)*0.5+iTime*0.25)*8.0;\n       \n        vec2 v=(d*0.15);\n        vec3 newEye=normalize(colPt-vec3(v.x,ro.y,v.y));\n        vec3 R = reflect(newEye, planeNor);\n\t\tvec2 skyUv=dirToDomeUv(R);\n\t\tcol=texture(iChannel0, skyUv).rgb*0.95;//(skyUv.y<0.0)?vec3(0.0):\n    } else {\n\t\tvec2 skyUv=dirToDomeUv(rd);\n\t\tcol=texture(iChannel0, skyUv).rgb;//(skyUv.y<0.0)?vec3(0.0):\n    }\n\t\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float fovy=0.7854;\n    float aspect=iResolution.x/iResolution.y;    \n    \n    float aa=(cos(iTime*0.3)*0.5+0.5)*0.5+0.2;\n    vec2 ms=(iMouse.xy==vec2(0.0))?vec2(iTime*0.2,aa):(iMouse.xy/iResolution.xy)*2.0-1.0;\n\n    mat3 viewRot=lookRot(ms.x*-3.0,ms.y*1.7);\n\n    vec2 scr=(fragCoord/iResolution.xy)*2.0-1.0;\n    vec3 ro=vec3(0.0,10.0,0.0);\n    vec3 rd=normalize(viewRot*calcPrimaryRay(scr,fovy,aspect));\n    vec3 col=render(ro,rd);\n  \n    col=mix(col,vec3(1.0),step(abs(floor(length(abs(fragCoord-iMouse.xy-0.5)-vec2(3.0)))-2.0),0.0)); //squares\n    \n    fragColor=vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}