{"ver":"0.1","info":{"id":"cdSSRV","date":"1670508849","viewed":129,"name":"gold bruteforce","username":"ianertson","description":"bruteforces golden ratio values from noise","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","gold"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GOLD 1.618034005\n#define RAND_MAX 53921\n\n\nfloat gold(float x) {\n    float diff = abs(x - GOLD);\n    \n    return clamp(1.0 - diff / GOLD, 0.0, 1.0);\n}\n\nfloat gold_r(float x, float y) {\n    float ma = max(x, y);\n    float mi = min(x, y);\n    float r = (ma + mi) / ma;  //min(x, y) / max(x, y);\n    return gold(r);\n}\n\n\nfloat noise0(vec2 co, float seed) {\n\n    float d = float(int(seed) % RAND_MAX) / float(RAND_MAX);\n    float a = fract(cos(d) * dot(co, vec2(1.09228, 1.61803)));\n    return fract(cos(a) * dot(co, vec2(d, a)));\n}\n\nfloat noise1(vec2 co, float seed) {\n    float a = noise0(co, seed);\n    float b = noise0(co, seed+16.0);\n    \n    return gold_r(a*seed, b*seed);\n}\n\nfloat noise2(vec2 co, float seed) {\n    float a = noise1(co, seed);\n    float b = noise1(co, seed+32.0);\n    float c = noise1(floor(co*16.0), seed+64.0);\n    \n    return fract(cos(c) * dot(co, vec2(a, b)));\n}\n\nfloat noise3(vec2 co, float freq, float seed) {\n    vec2 lv = fract(co*freq);\n    vec2 id = floor(co*freq);\n    \n    float bl = noise2(id, seed);\n    float br = noise2(id + vec2(1, 0), seed);\n    float b = mix(bl, br, lv.x);\n    \n    float tl = noise2(id+vec2(0, 1), seed);\n    float tr = noise2(id+vec2(1, 1), seed);\n    float t = mix(tl, tr, lv.x);\n    \n    return mix(b, t, lv.y);\n}\n\nfloat noise4(vec2 co, float freq, float seed) {\n    float a = noise3(co, freq, seed);\n    float b = noise3(co, freq, seed+8.0);\n    float c = noise3(co, freq, seed+16.0);\n    \n    \n    float x = mix(a, c, gold_r(a, c));\n    float y = mix(b, c, gold_r(b, c));\n    \n    float z = mix(co.x, x, gold_r(co.x, x));\n    float w = mix(co.y, y, gold_r(co.y, y));\n    \n    return noise3(vec2(z, w), freq, seed);\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float T = 1000.0 + iTime;\n\n    uv += vec2(cos(T*0.05), sin(iTime*0.05));\n    // Time varying pixel color\n    \n   \n    \n    float zoom = clamp(0.6 + (1.6 * cos(T*0.5)), 0.6, 0.9);\n    \n    float r = noise4(uv, 100.5 * zoom, 2918.0 * sin(T*0.01));\n    float g = noise4(uv, 100.5 * zoom, 1113.0 * tan(T*0.01));\n    float b = noise4(uv, 100.5 * zoom, 9731.0 * cos(T*0.01));\n    \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}