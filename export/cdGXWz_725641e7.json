{"ver":"0.1","info":{"id":"cdGXWz","date":"1680959247","viewed":102,"name":"Moire Fractal","username":"izutionix","description":"it remembers the motion of your mouse?\nstarted as an attempt to create a sampling pattern based on how you can iteratively stack box blurs to get gaussian blur\n(btw for some reason it looks different on Mac)","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["boxblur","feedback","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float value = texture(iChannel0, uv).r;\n    vec3 col = vec3(value);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float brushSize = 10.;\nint Scaling = 2;\n\nint oldMipLevel = 0; // 0 makes the pixels accumulate\n\n\nfloat getNeighbors(ivec2 P, int R) {\n    if(R%2!=0) R++; // +1 if uneven\n    \n    float num = 0.;\n    int D = R; // diameter\n    R /= 2; // radius\n    \n    for (int y=-1; y<=1; y+=2) {\n        for (int x=-1; x<=1; x+=2) {\n            if (x==0 && y==0) continue; // ignore current pixel\n            num += texelFetch(iChannel0, P + ivec2(x*R, y*R), 0).r;\n        }\n    }\n    return num;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 RES = ivec2(iResolution.xy);\n    ivec2 UV = ivec2(fragCoord) - RES/2;\n    int R = min(RES.x, RES.y); // range\n    float next = 0.;\n    \n    if(iFrame<=1 && (max(abs(UV).x,abs(UV).y) <= R/24) )\n        next = 1.; // initialize\n    else {\n        next = getNeighbors(UV*Scaling + RES/2, R); // + RES/2 is to center the coordinates\n    }\n    \n // draw with mouse\n    if(distance(iMouse.xy, fragCoord) < brushSize)\n        if (iMouse.z > .0)\n            next = 1.;\n    \n    if (iTime>1.5) oldMipLevel = 1; // stop accumulating\n    float old = texelFetch(iChannel0, UV + RES/2, oldMipLevel).r;\n    fragColor = vec4(old+next, 0., 0., 1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}