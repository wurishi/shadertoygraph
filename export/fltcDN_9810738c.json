{"ver":"0.1","info":{"id":"fltcDN","date":"1659993216","viewed":85,"name":"autogen 32","username":"asynth","description":"Generated by a program written in Rust.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = noise(uv, vec2(1.3086503, 0.09685868), 0.772975);\n\tvec3 a2 = vec3(0.0139, 0.4893, 0.0891);\n\tvec3 a3 = noise(uv, vec2(0.73738265, 2.8403778), 0.905215);\n\tvec3 a4 = sin(pthresh(0.0811, a1, a2, max(a3, vec3(atan(uv.y, uv.x))))*3.5162 + 0.7054 + iTime*0.2230);\n\treturn bi(a4);\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = well(node_1(uv)*2.1900 + 0.4122 + iTime*0.1386);\n\treturn a1;\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = reflect_4(uv);\n\treturn abs(node_2(uv));\n}\n\nvec3 node_4(vec2 uv) {\n\tuv = circ_inv(uv, vec2(0.2676, 0.5344), 0.4458);\n\tvec3 a1 = mix2(uv, vec3(0.0747, 0.6217, 0.5713), vec3(0.7065, 0.9701, 0.9669), vec3(0.9108, 0.9980, 0.0684), vec3(0.6285, 0.8611, 0.4013));\n\tvec3 a2 = well(a1*5.1412 + 0.9087 + iTime*0.3928);\n\tvec3 a3 = sin(vec3(uv.y)*3.9793 + 0.4380 + iTime*0.2087);\n\tvec3 a4 = tri(a3*1.8760 + 0.8266 + iTime*0.2704);\n\treturn max(a2, a4);\n}\n\nvec3 node_5(vec2 uv) {\n\tuv = (mat2(-0.7345,0.7804,1.1735,0.8711)*(uv-vec2(-0.9274,-0.8235)+vec2(-0.9274,-0.8235)));\n\tvec3 a1 = vec3(0.4559, 0.0864, 0.2540);\n\treturn a1;\n}\n\nvec3 node_6(vec2 uv) {\n\tuv = circ_inv(uv, vec2(0.1986, -0.4403), 0.3309);\n\tvec3 a1 = vec3(0.9500, 0.2709, 0.4384);\n\tvec3 a2 = sin(max(a1, vec3(length(uv)))*4.5583 + 0.8859 + iTime*0.0864);\n\treturn (-mod(quant(vec3(uv.x), node_5(uv)), a2));\n}\n\nvec3 node_7(vec2 uv) {\n\tuv = repeat_4(uv, 0.1653);\n\tvec3 a1 = mix2(uv, vec3(0.3811, 0.5055, 0.6953), vec3(0.1951, 0.6119, 0.7049), vec3(0.2821, 0.4006, 0.4538), vec3(0.5143, 0.0296, 0.7814));\n\tvec3 a2 = tri(vec3(atan(uv.y, uv.x))*2.7002 + 0.9405 + iTime*0.1893);\n\tvec3 a3 = noise(uv, vec2(2.361907, 0.9025663), 0.150811);\n\tvec3 a4 = noise(uv, vec2(0.14956872, 2.9136367), 0.829007);\n\tvec3 a5 = well(sigmoid((a3 / a4))*1.4759 + 0.6325 + iTime*0.2751);\n\tvec3 a6 = tri(vec3(length(uv))*4.7755 + 0.8318 + iTime*0.3901);\n\treturn uni((bi((uni((vec3(atan(uv.y, uv.x)) - bi(vec3(uv.x)))) - (uni((-a1)) + vec3(length(uv))))) / max(mod(a2, a5), a6)));\n}\n\nvec3 node_8(vec2 uv) {\n\tuv = (mat2(-1.0070,1.1564,-0.9298,-1.4087)*(uv-vec2(-0.9705,0.0906)+vec2(-0.9705,0.0906)));\n\tvec3 a1 = mix2(uv, vec3(0.2277, 0.7579, 0.7959), vec3(0.2149, 0.6166, 0.6751), vec3(0.0472, 0.6047, 0.4817), vec3(0.2014, 0.7640, 0.0943));\n\treturn a1;\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = reflect_2(uv);\n\treturn node_8(uv);\n}\n\nvec3 node_10(vec2 uv) {\n\tuv = (mat2(1.0730,0.8873,-0.8941,-0.8935)*(uv-vec2(0.1730,-0.5424)+vec2(0.1730,-0.5424)));\n\tvec3 a1 = noise(uv, vec2(0.11112849, 0.33069032), 0.203419);\n\tvec3 a2 = tri(((node_9(uv) - vec3(atan(uv.y, uv.x))) / a1)*4.0108 + 0.0771 + iTime*0.1910);\n\tvec3 a3 = tri(quant(a2, vec3(length(uv)))*2.9482 + 0.8779 + iTime*0.3638);\n\treturn bi(bi(a3));\n}\n\nvec3 node_11(vec2 uv) {\n\tuv = (mat2(0.7836,-1.1290,1.3049,0.8084)*(uv-vec2(0.1069,-0.5692)+vec2(0.1069,-0.5692)));\n\treturn vec3(uv.y);\n}\n\nvec3 node_12(vec2 uv) {\n\tuv = (mat2(1.1406,-0.7733,-1.2301,-1.2442)*(uv-vec2(-0.8969,-0.7993)+vec2(-0.8969,-0.7993)));\n\tvec3 a1 = noise(uv, vec2(1.680486, 0.8544729), 0.889715);\n\tvec3 a2 = vec3(0.0077, 0.9742, 0.6019);\n\tvec3 a3 = vec3(0.3140, 0.7960, 0.1871);\n\treturn pthresh(0.1467, vec3(length(uv)), mix(vec3(length(uv)), sq(vec3(atan(uv.y, uv.x))), a1), pthresh(0.9930, vec3(length(uv)), a2, (a3 * node_11(uv))));\n}\n\nvec3 node_13(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = vec3(0.2940, 0.9640, 0.0594);\n\tvec3 a2 = noise(uv, vec2(2.5353706, 3.3656836), 0.262111);\n\treturn bi(min(vec3(uv.x), mix(vec3(uv.x), quant(vec3(uv.x), a1), a2)));\n}\n\nvec3 node_14(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.4527, -0.4373), 0.3410);\n\treturn uni(node_13(uv));\n}\n\nvec3 node_15(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = mix2(uv, vec3(0.0610, 0.9410, 0.3742), vec3(0.6627, 0.1464, 0.5415), vec3(0.0158, 0.9193, 0.6788), vec3(0.4284, 0.7248, 0.7736));\n\treturn (-a1);\n}\n\nvec3 node_16(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.2388, -0.3589), 0.4991);\n\treturn node_15(uv);\n}\n\nvec3 node_17(vec2 uv) {\n\tuv = circ_inv(uv, vec2(0.2533, -0.1959), 0.3245);\n\treturn (vec3(uv.x) / node_16(uv));\n}\n\nvec3 node_18(vec2 uv) {\n\tuv = (mat2(-1.3848,-0.9747,-0.7143,-0.9297)*(uv-vec2(0.7984,-0.8996)+vec2(0.7984,-0.8996)));\n\treturn bi(node_17(uv));\n}\n\nvec3 node_19(vec2 uv) {\n\tuv = reflect_4(uv);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_20(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = noise(uv, vec2(2.4443777, 2.5154147), 0.993579);\n\treturn pthresh(0.8319, vec3(length(uv)), vec3(uv.x), a1);\n}\n\nvec3 node_21(vec2 uv) {\n\tuv = reflect_3(uv);\n\tvec3 a1 = tri(node_7(uv)*4.7568 + 0.8846 + iTime*0.3070);\n\tvec3 a2 = vec3(0.3265, 0.4078, 0.7001);\n\tvec3 a3 = well(vec3(uv.y)*3.9713 + 0.5684 + iTime*0.3138);\n\tvec3 a4 = tri(abs(node_20(uv))*2.7384 + 0.9174 + iTime*0.2758);\n\tvec3 a5 = sin(a4*5.6307 + 0.3813 + iTime*0.3892);\n\treturn pthresh(0.4304, bi(((a1 * (-node_10(uv))) * node_12(uv))), min((max(a2, vec3(uv.x)) * quant(vec3(uv.y), a3)), sq(((uni((abs(node_14(uv)) / min(vec3(uv.x), vec3(uv.y)))) * node_18(uv)) + node_19(uv)))), a5);\n}\n\nvec3 node_22(vec2 uv) {\n\tuv = repeat_4(uv, 0.4397);\n\tvec3 a1 = sin(bi(node_3(uv))*1.0082 + 0.2709 + iTime*0.3994);\n\tvec3 a2 = vec3(0.4709, 0.9005, 0.2005);\n\tvec3 a3 = tri(vec3(atan(uv.y, uv.x))*4.2214 + 0.5652 + iTime*0.3947);\n\tvec3 a4 = vec3(0.3899, 0.5848, 0.2086);\n\tvec3 a5 = vec3(0.1249, 0.1262, 0.6051);\n\tvec3 a6 = well(min((abs(a1) / (node_4(uv) * uni(quant(mix((-a2), vec3(uv.x), mod(mix(vec3(atan(uv.y, uv.x)), a3, a4), a5)), (vec3(uv.y) / vec3(atan(uv.y, uv.x))))))), uni(node_6(uv)))*2.8183 + 0.3101 + iTime*0.2170);\n\tvec3 a7 = tri(mod(a6, (-node_21(uv)))*2.8746 + 0.1810 + iTime*0.2057);\n\treturn a7;\n}\n\nvec3 node_23(vec2 uv) {\n\tuv = reflect_4(uv);\n\treturn node_22(uv);\n}\n\nvec3 node_24(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.5857, -0.5303), 0.1605);\n\tvec3 a1 = noise(uv, vec2(3.2601085, 1.6563677), 0.407173);\n\treturn a1;\n}\n\nvec3 node_25(vec2 uv) {\n\tuv = repeat_3(uv, 0.6468);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_26(vec2 uv) {\n\tuv = (mat2(-1.2139,-0.9905,-0.8896,-0.7965)*(uv-vec2(0.6371,0.3084)+vec2(0.6371,0.3084)));\n\treturn node_25(uv);\n}\n\nvec3 node_27(vec2 uv) {\n\tuv = repeat_2(uv, 0.6397);\n\treturn sigmoid(node_26(uv));\n}\n\nvec3 node_28(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.5005, -0.5354), 0.2267);\n\tvec3 a1 = noise(uv, vec2(1.3534445, 2.4728155), 0.007340);\n\treturn sq((a1 - node_27(uv)));\n}\n\nvec3 node_29(vec2 uv) {\n\tuv = repeat_2(uv, 0.3263);\n\tvec3 a1 = well(vec3(length(uv))*1.1229 + 0.4014 + iTime*0.1453);\n\treturn (min(min(abs(node_24(uv)), node_28(uv)), max(a1, vec3(length(uv)))) * (vec3(atan(uv.y, uv.x)) * vec3(atan(uv.y, uv.x))));\n}\n\nvec3 node_30(vec2 uv) {\n\tuv = reflect_4(uv);\n\tvec3 a1 = sin(node_29(uv)*4.5289 + 0.1554 + iTime*0.1625);\n\treturn quant(node_23(uv), a1);\n}\n\nvec3 top(vec2 uv) {\n\treturn node_30(uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}