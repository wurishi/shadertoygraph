{"ver":"0.1","info":{"id":"NsjcDh","date":"1643436067","viewed":322,"name":"sound waterfall","username":"tomviolin","description":"Sound as a waterfall","likes":3,"published":3,"flags":36,"usePreview":0,"tags":["musicvisualization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n     fragColor = texture(iChannel0,vec2(exp(uv.x*.68)-1.,1.0-sqrt(1.0-uv.y)));\n     \n }","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define speed 6.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    if (uv.y > (iResolution.y-speed)/iResolution.y) {\n\n\n\n        float sound=texture(iChannel0,vec2(uv.x,0.25)).r;\n\n        //float signal=abs(sound-(uv.y))<5./iResolution.y?0.5:0.0;\n\n\n\n         fragColor = vec4(hsv2rgb(vec3(uv.x*0.5,1.,sound*(uv.x+0.5))),1.0);\n     } else {\n         fragColor = texture(iChannel1, vec2(uv.x,uv.y+speed/iResolution.y));\n     }\n}","name":"Buffer A","description":"","type":"buffer"}]}