{"ver":"0.1","info":{"id":"ldlfRf","date":"1497385576","viewed":1063,"name":"Simple Cel Shading","username":"Qendolin","description":"Just a simple cel shader that I wrote. \nThe result isn't perfect but good enougth for the simplicity of the shader.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["postprocessing","celshading"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SHADES 4\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n    \n    //Calculating the brightness of the fragment (Actually it is the average color but that works fine too)\n    float brightness = (fragColor.r + fragColor.g + fragColor.g) / 3.; \n    //Calculating the shade \n\tfloat shade = floor(brightness * float(SHADES));\n    //Calculating the brightness of the shade\n\tfloat brighnessOfShade = shade / float(SHADES);\n\t//Calculating the brightness difference\n\tfloat factor = brightness / brighnessOfShade;\n\t//Applying the brightness difference\n\tfragColor.rgb /= vec3(factor);\n}\n\t//Example:\n\n\t//color = 0.6, 05, 0.7\n\t//shades = 4 (0, 0.25, 0.5, 0.75)\n\n\t//brightness:\t0.6 + 0.5 + 0.7 = 1.8\n\t//\t\t\t  \t1.8 / 3 = 0.6\n\t//\n\t//shade:\t\t0.6 * 4 = 2.4\n\t//\t\t\t\tfloor(2.4) = 2 (The third shade)\n\t//\n\t//brightness of shade:\n\t//\t\t\t\t2 / 4 = 0.5\n\t//\n\t//calculationg the brightness difference as a factor:\n\t//\t\t\t\t0.6 / 0.5 = 1.2\n\t//\n\t//applying the brightness difference:\n\t//\t\t\t\tvec3(0.6, 0.5, 0.7) / vec3(1.2, 1.2, 1.2) = vec3(0.6 / 1.2, 0.5 / 1.2, 0.7 / 1.2) =\n\t//\t\t\t\t= vec3(0.5, 0.4166666, 0.5833333)\n\t//\n\t//testing if it worked:\n\t//\tbrightness:\t(0.5 + 0.4166666 + 0.5833333) / 3 = 0.5\n\t//\t0.5 = 0.5 => worked\n\t//\n\t//optimal result:\n\t//\t\t\t\tvec3(0.6, 0.5, 0.7) => vec3(0.5, 0.4, 0.6)","name":"Image","description":"","type":"image"}]}