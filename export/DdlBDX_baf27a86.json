{"ver":"0.1","info":{"id":"DdlBDX","date":"1689232244","viewed":60,"name":"barycentric dithering","username":"dud31","description":"dithering schema using barycentric coordinates","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["dither"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat deter(vec2 a, vec2 b) { return a.x*b.y - a.y*b.x; }\nvec3 bary(vec2 a, vec2 b, vec2 c, vec2 p) {\n    float ar = deter(b - a, c - a);\n    float w = deter(b - a, p - a) / ar;\n    float v = deter(a - c, p - c) / ar;\n    vec3 s = vec3(1.0 - v - w, v, w);\n    return s;\n}\n\nvec2 rot(vec2 v, float th) {\n    return vec2(v.x*cos(th) - v.y*sin(th), v.x*sin(th) + v.y*cos(th));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n    \n\tvec2 v_a = vec2(1.5,1.0)*cos(iTime + vec2(0.0,1.0) + 0.0 );\n\tvec2 v_b = vec2(1.5,1.0)*cos(iTime + vec2(0.0,1.0) + 1.5 );\n\tvec2 v_c = vec2(1.5,1.0)*cos(iTime + vec2(0.0,1.0) + 3.0 );   \n\n    vec3 col_a = vec3(1,0,0);\n    vec3 col_b = vec3(0,1,0);\n    vec3 col_c = vec3(0,0,1);\n\n    vec3 col_abc[] = vec3[3](col_a, col_b, col_c);\n\n    vec3 q = bary(v_a, v_b, v_c, p);\n        \n    float rnd = rand(p);\n    \n    int index = (4 + int(sign(q.x - rnd)) + int(sign(q.x + q.y - rnd))) % 3;\n    \n    //col = q.x * col_a + q.y * col_b + q.z * col_c; //lerp\n    vec3 col = col_abc[index];\n    \n    float a =  sign((1.0 + sign(q.x)) * (1.0 + sign(q.y)) * (1.0 + sign(q.z)));\n    col = col * a;\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}