{"ver":"0.1","info":{"id":"X32yzD","date":"1727050902","viewed":24,"name":"Waving square grid","username":"dunishaaa","description":"Testing a square sdf and domain repetitinon","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf","sin","domainrep"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\nfloat sdPoint(vec2 p, float r)\n{\n    return length(p) - r;\n}\nfloat h21(vec2 p) {\n  return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 OGuv = uv;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    float zoom = 10.;\n    vec2 luv = fract(uv*zoom)-.5;\n    vec2 lid = floor(uv*zoom);\n    vec3 col = vec3(0.);\n    float rsd = .35 * (.5+sin(lid.x +iTime*2.)*.5);\n    float circ = sdPoint(luv, rsd);\n    float rect = sdBox(luv, vec2(rsd));\n    col+= 1.-mix(circ, rect, OGuv.x);\n    col *= vec3(.6, .2, .5);\n    //col+=rect;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}