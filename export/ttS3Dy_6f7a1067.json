{"ver":"0.1","info":{"id":"ttS3Dy","date":"1560924160","viewed":160,"name":"Voronoi Diagram in L1-L2","username":"pavleeto","description":"Can we build Voronoi diagram using shaders? definitely!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int COUNT = 4; \nvec2 positions[COUNT];\nvec3 colors[COUNT];\n\nvoid initPoints()\n{\n    positions[0] = vec2(0.1, 0.1);\n    positions[1] = vec2(0.2, 0.4);\n    positions[2] = vec2(0.6, 0.2);\n    positions[3] = vec2(0.9, 0.9);\n    \n    colors[0] = vec3(1.0, 0.0, 0.0);\n    colors[1] = vec3(0.0, 1.0, 0.0);\n    colors[2] = vec3(1.0, 1.0, 0.0);\n    colors[3] = vec3(0.0, 0.0, 1.0);\n}\n\nfloat dist(vec2 a, vec2 b)\n{\n    vec2 delta = abs(a-b);\n    \n    float n = sin(iTime)*0.5 + 1.5;\n    return pow(pow(delta.x, n) + pow(delta.y, n), 1.0/n);\n}\n\nvec3 voronoi(vec2 uv)\n{\n    int index = 0;\n    float minDist = dist(uv, positions[0]);\n    \n    for (int i=1; i<COUNT; ++i)\n    {\n        float cand = dist(uv, positions[i]);\n        if (cand < minDist) {\n            minDist = cand;\n            index = i;\n        }\n    }\n    \n    return colors[index];\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    initPoints();\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 color = voronoi(uv);\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}