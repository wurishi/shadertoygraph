{"ver":"0.1","info":{"id":"ttKfRR","date":"1613779780","viewed":180,"name":"Glitchy fractal thing (sound)","username":"athibaul","description":"Initially this was supposed to represent some kind of mold growth, but I guess I'm too tired.","likes":8,"published":1,"flags":8,"usePreview":0,"tags":["3d","sdf","shading","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 map(vec3 p)\n{\n    float d = length(p) - 1.;\n    vec3 n = normalize(p);\n    \n    vec3 q = p;\n    float sc = 1.0;\n    float scaling = 0.5;\n    for(int i=0; i<5; i++)\n    {\n        // Add sphere centered at a nearby point\n        float subdiv = 3.;\n        vec3 c = round(subdiv*normalize(q)) / subdiv;\n        q = q - c;\n        sc *= scaling;\n        float d2 = length(q)/sc - 1.;\n        if(d2 < d)\n        {\n            d = d2;\n            n = normalize(q);\n        }\n        //q /= scaling;\n        q *= scaling;\n    }\n    return vec4(d,n);\n}\n\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    vec2 uv = (U*2.-iResolution.xy)/iResolution.y * 0.8;\n    \n    float time = mod(iTime, 16.);\n    time = max(time-0.25,0.);\n    float th = time * (0.3 + exp(time-12.));\n    vec3 ro = vec3(cos(th),sin(th),0.2) * 5.;\n    vec3 camFwd = normalize(vec3(0) - ro);\n    vec3 camRight = cross(camFwd, vec3(0,0,1));\n    vec3 camUp = cross(camRight, camFwd);\n    vec3 rd = normalize(camFwd + uv.x*camRight + uv.y*camUp);\n    \n    \n    float t=0.;\n    vec4 dn;\n    float T_MAX = 100.;\n    float i;\n    for(i=0.; i<256.; i++)\n    {\n        dn = map(ro+t*rd);\n        if(dn.x<0.001 || t >= T_MAX) break;\n        t += dn.x;\n    }\n    \n    vec3 p = ro+t*rd;\n    vec3 n = dn.yzw;\n    vec3 col = sin(vec3(1.,2.,3.)*p + time * 2.)*0.5+0.5;\n    //vec3 col = 0.5+0.5*n;\n    vec3 rrd = reflect(rd, n);\n    float fre = 0.5;\n    //col = mix(col, pow(textureLod(iChannel0, rrd.xzy, 0.).rgb,vec3(2.2)), fre);\n    \n    vec3 h = normalize(n - rd);\n    float th2 = th + sin(2.*time) * 0.5;\n    vec3 ldir = normalize(vec3(cos(th2),sin(th2),0.5*cos(0.618*2.*time)));\n    vec3 spec = vec3(1.) * pow(clamp(dot(h,ldir),0.,1.), 30.);\n    col += spec;\n    col *= exp(-i*0.1);\n    \n    \n    if(time < 0.25)\n        col.rgb = 1.-col.gbr;\n    \n    O.rgb = sqrt(col);\n      \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n#define TAU (2.*3.1415926535)\n#define Saw(f,m) 2.*fract((f)*t+(m)/TAU) - 1.\n#define Sin(f,m) sin(TAU*(f)*t + (m))\n\n#define dist(v) (v)/(1.+abs(v))\n\nfloat padSound(float f, float t)\n{\n    float env = smoothstep(0.,1.,t) * smoothstep(8.,7.,t) * (1. + 0.1*sin(2.*t));\n    float sig = Sin(f, env*Sin(f+1., env*Sin(f-0.8,0.)));\n    return sig * env;\n}\n\nvec2 pan(float x)\n{\n    return normalize(vec2(0.5-0.5*x,0.5+0.5*x));\n}\n\nvec2 mainSound( int samp, float time )\n{\n    float t = mod(time,8.);\n    float i = floor(time * 8.);\n    \n    float f0 = 55.;\n    \n    float gain = 1.+exp(mod(time,16.) - 10.);\n    gain *= smoothstep(0.,2.,mod(time, 16.));\n    \n    float bmod = (1.+3.*exp(-5.*mod(t,0.5)))*(1.+0.01*gain);\n    float bass = Sin(2.*f0,Sin(f0+1.,Sin(f0-0.8,0.)*bmod)*bmod) * (0.8 + 0.5*exp(-5.*mod(t,0.5)));\n    bass = dist(bass*gain);\n    \n    float vibEnv = 1.0;\n    float fs = 440.;\n    fs *= mod(i,2.) == 1. ? 1.2 : 1.;\n    fs *= mod(i,3.) == 2. ? 1.5 : 1.;\n    fs *= mod(i,5.) >= 3. ? 0.556 : 1.;\n    fs *= mod(i,7.) >= 5. ? 0.5 : 1.;\n    vec2 synth = Sin(fs,Sin(5.,0.)*vibEnv) + Saw(fs+vec2(1.62,-1.),0.);\n    synth = dist(synth * gain);\n    \n    \n    vec2 pad = vec2(0);\n    pad += padSound(220.,t) * pan(-0.5);\n    pad += padSound(264.,t)*0.5 * pan(-0.3);\n    pad += padSound(330.,t)*0.8 * pan(0.5);\n    pad += padSound(385.,t)*0.3 * pan(0.3);\n    //pad = atan(0.33*pad*gain)*3.;\n    \n    float click = Saw(5000.,Sin(3090.16,0.)*10.);\n    float t16 = mod(time,16.);\n    click *= (step(t16,0.05) + step(0.25,t16)*step(t16,0.30));\n    click += 0.3*Sin(5000.,Sin(618.,0.)*4.) * step(t16,0.25);\n    \n    vec2 v = vec2(0.);\n    v += bass*0.07;\n    v += synth*0.06;\n    v += pad * 0.03;\n    if(click != 0.)\n        v = vec2(click * 0.15);\n    \n    return v;\n}","name":"Sound","description":"","type":"sound"}]}