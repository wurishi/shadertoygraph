{"ver":"0.1","info":{"id":"MlGSRz","date":"1487499903","viewed":240,"name":"Shape Noise","username":"gaz","description":"noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// rewrote 2018/02/01\nvec3  hsv(float h,float s,float v)\n{\n    return((clamp(abs(fract(h+vec3(0,2,1)/3.)*6.-3.)-1.,0.,1.)-1.)*s+1.)*v;\n}\n\nmat2 rotate(float a)\n{\n\treturn mat2(cos(a), sin(a), -sin(a), cos(a));\t\n}\n\nfloat hash(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat de(in vec2 p)\n{\n    float de1 = length(p)-0.1;\n    float a = radians(72.);    \n    p *= rotate(floor(0.5 - atan(p.x, p.y) /a) *a);\n    float de2 = p.y + abs(p.x) * 2.5- 0.3;\n    return mix(de1, de2, sin(iTime*0.5 +sin(iTime))*0.5+0.5);\n}\n\nfloat noise( in vec2 p)\n{\n    float t = iTime*0.5;\n    p += sin(t + sin(3.0*t +sin(6.0*t +sin(12.0*t))));\n    vec2 i = floor(p);\n    float n = dot(i,vec2(1,9))+ floor(t);\n    return mix(hash(n),hash(n+1.0),smoothstep(0.0,1.0,fract(t))) * smoothstep(0.9,0.1,de(fract(p)-0.5));\n}\n\nfloat fbm( vec2 p)\n{\n    float t = iTime*0.02;\n    float n=0.0;\n    for (int i=1;i<5;i++){\n        p *= rotate(t);t*=2.0;\n        n += noise(p)/pow(2.0,float(i)); p*=2.0;\n    }\n    return n;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*gl_FragCoord.xy-iResolution.xy) / iResolution.y;\n    p *= 1.5/(1.5-pow(p.y-2.5, 2.)); // perspective    \n    float t = floor(iTime*0.5);\n    p += vec2(cos(2.*t+3.0*cos(3.0*t)),sin(2.*t+3.0*sin(3.*t))) * 1.0;\n    p = mix(vec2(inversesqrt(length(p)) * 5., atan(p.x, p.y)*3.), p, step(0.0,sin(iTime*0.3+2.*sin(iTime*0.5))));\n\tvec3 col = hsv(iTime*0.1,0.3,0.5) ;\n \tcol += smoothstep(0.3, 0.8, fbm(2.0*p + fbm(8.0*p + fbm(32.0*p ))));\n    col += hsv(fract(iTime*0.1),0.8,1.0)*vec3(1,0.15,0)      *smoothstep(0.5, 0.8, fbm(p.yx*3.0));\n    col += vec3(0.8,0.3,0.1)*min(1.0,fwidth(col.x*5.0)*0.5);\n    vec2 q = gl_FragCoord.xy / iResolution.xy;\n    col *= 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y);\n    col = pow(col, vec3(1.5));\n    fragColor = vec4(col,1);\n}\n\n\n\n\n/*\nvec3 hsv(in float h, in float s, in float v)\n{\n  return mix(vec3(1),clamp((abs(fract(h+vec3(3,2,1)/3.)*6.-3.)-1.),0.,1.),s)*v;\n}\n    \nmat2 rotate(float a)\n{\n\treturn mat2(cos(a), sin(a), -sin(a), cos(a));\t\n}\n\nfloat hash( float n ) { return fract(sin(n)+iTime*2.0); }\n\nfloat noise( in vec2 x )\n{\n    float t = iTime*0.2;\n   // x += sin(t + sin(3.0*t +sin(6.0*t)));\n    x+=t;\n    vec2 p = floor(x);\n    return fract(sin(p.x + p.y*9.));\n}\n\nfloat fbm( vec2 p)\n{\n    mat2 m = rotate(iTime*0.02);\n    float n=0.0;\n    for (int i=1;i<5;i++){\n        //n += noise(p)/pow(2.0,float(i)); p *= m*2.0*sign(float(i)); \n        n += noise(p)/exp2(float(i)); p *= m*2.0; \n    }\n    return n;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col;\n    float time = iTime;\n\tvec2 q = fragCoord.xy / iResolution.xy;\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy) / iResolution.y;\n    \n    //p *= 1.5/(1.5-pow(p.y-2.5, 1.5)); // pars\n    vec2 pp =p;\n    p *= 1.5 * pow(sin(smoothstep(0.0,20.0,mod(time,23.)) * radians(90.0)), 0.3);\n    \n    float t = floor(time*0.01);\n    p += vec2(cos(2.*t+3.0*cos(3.0*t)),sin(2.*t+3.0*sin(3.*t))) * 2.0;\n    \n    p = mix(vec2(inversesqrt(length(p)) * 5., atan(p.x, p.y)*3.), p, step(0.5,fract(time*0.3)));\n\tcol = vec3(0.15);//hsv(fract(time*0.1),0.3,0.5) ;\n\t//col += vec3(0.8,0.5,0.1)*smoothstep(0.5, 0.8, fbm(p.yx*3.0));\n\tcol += smoothstep(0.5, 0.8, fbm(2.0*p + fbm(sin(time*3.0)*p + fbm(32.0*p ))));\n    //col *= min(0.9,1.4-length(q*2.-1.));\n    col *= 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y);\n    \n    //col += vec3(0.8,0.5,0.1)*smoothstep(0.5, 0.8, fbm(pp.yx*.5));\n    \n    fragColor = vec4(col,1.0);\n}\n*/","name":"Image","description":"","type":"image"}]}