{"ver":"0.1","info":{"id":"lffSzr","date":"1704848875","viewed":46,"name":"circlessdf","username":"drdavis65","description":":)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool intersectCircle(vec2 fragCoord, vec2 center, float radius)\n{\n    // Adjust fragCoord for aspect ratio\n    vec2 adjustedCoord = fragCoord;\n    adjustedCoord.x *= iResolution.x / iResolution.y; // Adjust x coordinate\n\n    float d = sqrt((center.x - adjustedCoord.x) * (center.x - adjustedCoord.x) + \n                   (center.y - adjustedCoord.y) * (center.y - adjustedCoord.y));\n    return d < radius;\n}\n\nfloat triangleWave(float time, float period, float amplitude) {\n    // Normalize time to the period\n    float normalizedTime = mod(time, period) / period;\n    \n    float wave = abs(2.0 * normalizedTime - 1.0);\n    \n    return wave * amplitude;\n}\n\nfloat sawWave(float time, float period, float amplitude) {\n    \n    float normalizedTime = mod(time, period) / period;\n    \n    \n    return 2.5 * normalizedTime * amplitude - 1.25;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    float deal = triangleWave(iTime, 10.0, 1.0);\n    float saw = sawWave(iTime, 10.0, 1.0);\n    \n    vec2 circleCenter = vec2(0.5 * iResolution.x / iResolution.y + saw, 0.5);\n    vec2 velocity = vec2(dFdx(saw), 0.0);\n\n    vec3 color = vec3(deal);\n\n    float echoInterval = 2.0;\n    float timeSinceLastEcho = mod(iTime, echoInterval);\n    float maxEchoRadius = 0.25;\n    float echoRadius = mix(maxEchoRadius, 0.0, timeSinceLastEcho / echoInterval);\n    \n\n    for(float i = 1.0; i < 6.0; i++) {\n        vec2 echoCenter = vec2(circleCenter.x - .2 * i, circleCenter.y);\n        if (intersectCircle(uv, echoCenter, echoRadius / (i + 0.25))) {\n            float echoIntensity = 1.0 - timeSinceLastEcho / echoInterval;\n            color = mix(color, vec3(1.0 - echoIntensity), 0.5);\n        }\n    \n    }\n    for(float i = 1.0; i < 6.0; i++) {\n        vec2 echoCenter = vec2(circleCenter.x + .2 * i, circleCenter.y);\n        if (intersectCircle(uv, echoCenter, echoRadius / (i + 0.25))) {\n            float echoIntensity = 1.0 - timeSinceLastEcho / echoInterval;\n            color = mix(color, vec3(1.0 - echoIntensity), 0.5);\n        }\n    \n    }\n    \n    if (intersectCircle(uv, circleCenter, 0.25)) {\n        fragColor = vec4(1.0 - deal, 1.0 - deal, 1.0 - deal, 1.0);\n    } else {\n        fragColor = vec4(color, 1.0);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}