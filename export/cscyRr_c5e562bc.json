{"ver":"0.1","info":{"id":"cscyRr","date":"1694647014","viewed":26,"name":"Megaphone Rave","username":"8mcgraw","description":"Enjoy a nice dance party with a spinning megaphone as the main attraction. Feel dizzy? We've spiked the air so everything will always be moving for everyone involved. (Not recommended for children or the elderly.)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["schoolproject"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//from: https://iquilezles.org/articles/distfunctions/\n\n//Cone - exact\n\nfloat sdCone( vec3 p, vec2 c, float h )\n{\n  // c is the sin/cos of the angle, h is height\n  // Alternatively pass q instead of (c,h),\n  // which is the point at the base in 2D\n  vec2 q = h*vec2(c.x/c.y,-1.0);\n    \n  vec2 w = vec2( length(p.xz), p.y );\n  vec2 a = w - q*clamp( dot(w,q)/dot(q,q), 0.0, 1.0 );\n  vec2 b = w - q*vec2( clamp( w.x/q.x, 0.0, 1.0 ), 1.0 );\n  float k = sign( q.y );\n  float d = min(dot( a, a ),dot(b, b));\n  float s = max( k*(w.x*q.y-w.y*q.x),k*(w.y-q.y)  );\n  return sqrt(d)*sign(s);\n}\n\n//from: https://iquilezles.org/articles/distfunctions/\n//Box - exact \n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\n//checker from Landon but modified\nvec3 checker(vec2 Pos){\n Pos = floor(Pos);\n return vec3(mod(Pos.x + mod(Pos.y, 5.0), 5.0));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float s = sin(iTime);\n    float c = cos(iTime);\n    mat3 rotX = mat3(\n        1.0, 0.0, 0.0,\n        0.0, c,   s,\n        0.0, -s,  c\n    );\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // background\n    vec3 col = vec3(sin(iTime),cos(iTime*1.9),tan(iTime*3.1));\n    col = mix(col, checker((fragCoord.xy /3.2)+sin(iTime)), .2);\n    col = mix(col, vec3(texture(iChannel0, uv.xy).rrr), .6);\n    \n    //create ray\n    vec3 rayPt = vec3(uv.xy, 0);\n    vec3 rayPtdx = vec3(uv.x+0.0000001, uv.y, 0);\n    vec3 rayPtdy = vec3(uv.x, uv.y+0.0000001, 0);\n    vec3 rayDir = vec3(0,0,1);\n    \n    float t = 0.0, tdx = 0.0, tdy = 0.0; //ray marching\n    \n    //define Cone properties\n    float coneHeight = 0.4;\n    vec2 coneAngle = vec2(0.1,0.2);\n    vec3 conePos = vec3(0.5,0.5,5.0);\n    \n    //define Box properties\n    vec3 boxDims = vec3(0.2,0.2,0.2);\n    vec3 boxPos = vec3(0.5,0.5,5.0);\n    \n    //calculate a points along the ray\n    for (int i = 0; i < 100; i++){\n        vec3 pos = rayPt + rayDir * t;\n        vec3 posdx = rayPtdx + rayDir * tdx;\n        vec3 posdy = rayPtdy + rayDir * tdy;\n        \n        float dist = min(sdCone(rotX *( pos - conePos), coneAngle, coneHeight),sdBox( rotX * (pos - boxPos), boxDims));\n        float distdx = min(sdCone(rotX *(posdx - conePos), coneAngle, coneHeight),sdBox( rotX * (posdx - boxPos), boxDims));\n        float distdy = min(sdCone(rotX *(posdy - conePos), coneAngle, coneHeight),sdBox( rotX * (posdy - boxPos), boxDims));\n        \n        \n        if(dist < 0.01 && distdx < 0.01 && distdy < 0.01){\n            vec3 lightDir = rayDir;\n            vec3 color = vec3(0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)));\n            col = color*dot(-lightDir, normalize(cross(posdy - pos, posdx - pos)));\n            col = mix(col,checker(fragCoord.xy /(50.0*sin(iTime)) + vec2(iTime)),.2);\n            //col=normalize(pos-conePos);\n            //col = normalize(cross(posdy - pos, posdx - pos));\n            //col.z = -col.z;\n            break;\n        } \n        t = t + dist;\n        tdx = tdx + distdx;\n        tdy = tdy + distdy;\n    }\n    vec3 foreground = mix(vec3(texture(iChannel2, uv.xy*sin(iTime*0.05))),vec3(texture(iChannel1, uv.xy*cos(iTime*0.05)).rrr),.5);\n    foreground = mix(foreground,vec3(texture(iChannel3, uv.xy*tan(iTime*0.05)).rrr),.2);\n    col = mix(col, foreground, .5);\n    \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}