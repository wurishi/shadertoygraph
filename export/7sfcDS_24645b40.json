{"ver":"0.1","info":{"id":"7sfcDS","date":"1642610719","viewed":159,"name":"Piecewise Cosine Interpolation","username":"bignobody","description":"Testing out what I learned from the latest Art of Code video on piecewise Cosine and Linear interpolation","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["interpolation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141597\n\nfloat lagr(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d)\n{\n    return (a.y * (uv.x-b.x)*(uv.x-c.x)*(uv.x-d.x)) / ((a.x-b.x)*(a.x-c.x)*(a.x-d.x));\n}\n\nfloat pwlin(vec2 uv, vec2 a, vec2 b)\n{\n    return (uv.x-a.x)*(b.y-a.y)/(b.x-a.x)+a.y;\n}\n\nfloat pwcos(vec2 uv, vec2 a, vec2 b)\n{\n  return (cos((uv.x - a.x)/(b.x-a.x)*PI)-1.0)*0.5*(a.y-b.y)+a.y;\n}\n\n\nfloat spot(vec2 uv, vec2 p, float b)\n{\n    return smoothstep(0.2,0.02,length(uv-p) / b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ((fragCoord - 0.5 * iResolution.xy)/iResolution.y) * 2.0;\n\n    vec3 col = vec3(0.0);\n    float t = iTime * 0.2;\n    \n    // define some moving points\n    vec2 p0 = vec2(-0.82,0.033) + vec2(0.2*sin(iTime),0.4 * cos(iTime)) ;\n    vec2 p1 = vec2(-0.2,0.1) + vec2(0.3*cos(iTime),0.3 * sin(t));\n    vec2 p2 = vec2(0.3,-0.13)+ vec2(0.12*sin(t),0.3 * cos(iTime));\n    vec2 p3 = vec2(0.8,0.3)+ vec2(0.22*cos(t),0.34 * sin(t));\n    \n    // lagrange interpolation\n    float l0 = lagr(uv,p0,p1,p2,p3);\n    float l1 = lagr(uv,p1,p0,p2,p3);\n    float l2 = lagr(uv,p2,p1,p0,p3);\n    float l3 = lagr(uv,p3,p1,p2,p0);\n\n    float lgr = l0+l1+l2+l3;\n\n    // piecewise cosine interpolation\n    float c0 = pwcos(uv,p0,p1);\n    float c1 = pwcos(uv,p1,p2);\n    float c2 = pwcos(uv,p2,p3);\n\n    // piecewise linear interpolation\n    float i0 = pwlin(uv,p0,p1);\n    float i1 = pwlin(uv,p1,p2);\n    float i2 = pwlin(uv,p2,p3);\n    \n    // draw the points\n    col += spot(uv,p0,0.06);\n    col += spot(uv,p1,0.06);\n    col += spot(uv,p2,0.06);\n    col += spot(uv,p3,0.06);\n    \n    // show the lagrange curve through all points\n    col +=  smoothstep(0.01,0.003,(abs(uv.y-lgr)))*0.6;\n    \n    // show the piecewise cosine interpolation\n    col.r += ((float(uv.x < p1.x)) * smoothstep(0.01,0.003,(abs(uv.y-c0)))) * (uv.x-p0.x+0.5);\n    col.r += ((float(uv.x > p1.x && uv.x < p2.x)) * smoothstep(0.01,0.003,(abs(uv.y-c1)))) ;\n    col.r += ((float(uv.x > p2.x)) * smoothstep(0.01,0.003,(abs(uv.y-c2)))) * (p3.x+0.5-uv.x);\n\n    // show the piecewise linear interpolation\n    col.g += ((float(uv.x < p1.x)) * smoothstep(0.01,0.003,(abs(uv.y-i0))))* (uv.x-p0.x+0.5);\n    col.g += ((float(uv.x > p1.x && uv.x < p2.x)) * smoothstep(0.01,0.003,(abs(uv.y-i1)))) ;\n    col.g += ((float(uv.x > p2.x)) * smoothstep(0.01,0.003,(abs(uv.y-i2)))) * (p3.x+0.5-uv.x);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}