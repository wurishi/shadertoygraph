{"ver":"0.1","info":{"id":"XsfcWf","date":"1490188463","viewed":117,"name":"RocketToMouse","username":"NCSylvia","description":"Rocket moves to mouse location","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2drocket"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map (vec3 p) {\n    \n    vec3 q = fract(p) * 2.0 - 1.0;\n        \n    return length(q) - 0.25;\n    \n}\n\nfloat trace(vec3 o, vec3 r) {\n    float t = 0.0;\n    for(int i = 0; i < 32; ++i) {\n       vec3 p = o+r*t;\n        float d = map(p);\n        t += d*0.5;\n    }\n    return t;\n}\n\n\nvec4 createRocket(vec2 pos, vec2 uv) {\n    \n   \n   vec4 col = mix(vec4(0.), vec4(1.), smoothstep(pos.x-0.035, pos.x, uv.x)); \n    col.rgb = mix(vec3(0.), col.rgb, smoothstep(pos.x+0.035, pos.x, uv.x));\n   \n   return col;\n    \n}\n\nvec4 createRocketTop(vec2 pos, vec2 uv) {\n    \n    vec2 p0 = vec2(pos.x - 0.03, pos.y);\n    vec2 p1 = vec2(pos.x + 0.03, pos.y);\n    vec2 p2 = vec2(pos.x, pos.y+0.1);\n    vec4 col = mix(vec4(0.12, 0.02, 0.20, 1), vec4(0,0,0, 1), length(pos));\n    \n    float area = 0.5 *(-p1.y*p2.x + p0.y*(-p1.x + p2.x) + p0.x*(p1.y - p2.y) + p1.x*p2.y);\n    \n    float s = 1.0/(2.0*area)*(p0.y*p2.x - p0.x*p2.y + (p2.y - p0.y)*uv.x + (p0.x - p2.x)*uv.y);\n    float t = 1.0/(2.0*area)*(p0.x*p1.y - p0.y*p1.x + (p0.y - p1.y)*uv.x + (p1.x - p0.x)*uv.y); \n    if(s > 0.0 && t > 0.0 && 1.0-s-t > 0.0) {\n        \n       //col = vec4(1,0,0,1);\n       col = mix(vec4(0.), vec4(0.87,0.04,0,1), smoothstep(pos.x-0.035, pos.x, uv.x)); \n    col.rgb = mix(vec3(0.), col.rgb, smoothstep(pos.x+0.035, pos.x, uv.x)); \n    }\n    else {\n        col = mix(vec4(0.), vec4(0.01,0.4,0.7,1), smoothstep(pos.x-0.035, pos.x, uv.x)); \n    col.rgb = mix(vec3(0.), col.rgb, smoothstep(pos.x+0.035, pos.x, uv.x)); \n    }\n     return col;\n    \n    \n}\n\n\nvec4 createRocketFire(vec2 pos, vec2 uv, float time) {\n    \n    vec2 p0 = vec2(pos.x - 0.025, pos.y);\n    vec2 p1 = vec2(pos.x + 0.025, pos.y);\n    vec2 p2 = vec2(pos.x, pos.y-0.1);\n    vec4 col = vec4(0,0,0,1); \n    \n    float area = 0.5 *(-p1.y*p2.x + p0.y*(-p1.x + p2.x) + p0.x*(p1.y - p2.y) + p1.x*p2.y);\n    \n    float s = 1.0/(2.0*area)*(p0.y*p2.x - p0.x*p2.y + (p2.y - p0.y)*uv.x + (p0.x - p2.x)*uv.y);\n    float t = 1.0/(2.0*area)*(p0.x*p1.y - p0.y*p1.x + (p0.y - p1.y)*uv.x + (p1.x - p0.x)*uv.y);              \n    //vec4 col = mix(vec4(0.12, 0.02, 0.20, 1), vec4(0,0,0, 1), length(pos));\n    if(s > 0.0 && t > 0.0 && 1.0-s-t > 0.0) {\n    \tif(pos.y - (0.3*abs(sin(time))) < uv.y && 0.3*abs(sin(time)) > 0.1) {\n        \tcol = mix(vec4(0.87,0.04,0,1), vec4(.87, 0.34, 0.03, 1), smoothstep(pos.y-0.1, pos.y, uv.y));\n        \tcol.rgb = mix(vec3(0.), col.rgb, smoothstep(pos.x-0.025, pos.x, uv.x)); \n        \tcol.rgb = mix(vec3(0.), col.rgb, smoothstep(pos.x+0.025, pos.x, uv.x));\n       \t}\n    \telse if(pos.y - (0.2*abs(sin(time))) < uv.y && 0.2*abs(sin(time)) < 0.07) {\n        \tcol = mix(vec4(0.87,0.04,0,1), vec4(.87, 0.34, 0.03, 1), length(uv)*4.0);\n        \tcol.rgb = mix(vec3(0.), col.rgb, smoothstep(pos.x-0.025, pos.x, uv.x)); \n        \tcol.rgb = mix(vec3(0.), col.rgb, smoothstep(pos.x+0.025, pos.x, uv.x));\n    \t}\n        \n      \n    }\n    else {\n        discard;\n        //col = mix(vec4(1), vec4(0.78,0.12,0.11,1), smoothstep(pos.x-0.04, pos.x, uv.x)); \n    //col.rgb = mix(vec3(1), col.rgb, smoothstep(pos.x+0.04, pos.x, uv.x));\n    \n    }\n    \n    return col;\n    \n    \n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    \n    vec2 pos =  vec2(0,-0.20);\n    vec4 col = vec4(0,0,0,0);\n    \n    float time = iTime;\n    \n    \n    pos = iMouse.xy / iResolution.xy-0.5; \n    float angle = 0.2;\n    //pos.x =   cos(angle)*pos.x + sin(angle)*pos.y;\n\t//pos.y = - sin(angle)*pos.x + cos(angle)*pos.y;\n    \n    col = mix(vec4(0.12, 0.02, 0.20, 1), vec4(0,0,0, 1), length(pos));\n    \n    \n    \n    if(uv.x < pos.x+0.03 && uv.x > pos.x-0.03 && pos.y-0.2 < uv.y && pos.y > uv.y) {      \n       col = createRocket(pos, uv);\n    }\n    else if(uv.x < pos.x+0.03 && uv.x > pos.x-0.03 && pos.y < uv.y && pos.y+0.1 > uv.y) {      \n       col = createRocketTop(pos, uv);\n    }\n    else if(uv.x < pos.x+0.025 && uv.x > pos.x-0.025 && pos.y-0.3 < uv.y && pos.y-0.2 > uv.y) {      \n       col = createRocketFire(pos-vec2(0,0.2), uv, time);\n    }\n    else {\n    uv = uv*2.0-1.0;\n    uv.x = iResolution.x/iResolution.y;\n    vec3 r = normalize(vec3(uv, 1.0));\n    //float time = iTime;\n    vec3 o = vec3(0.0,time*4.0,0.0);\n    float t = trace(o,r);\n    float fog = 1.0/ (1.0 + t * t * 0.1);\n    vec3 fc =  vec3(fog);\n    \n    col = vec4(fc, 2.0);\n    \n    }\n    \n    \n    \n\tfragColor = col;\n}","name":"Image","description":"","type":"image"}]}