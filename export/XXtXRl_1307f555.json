{"ver":"0.1","info":{"id":"XXtXRl","date":"1719412011","viewed":45,"name":"babby's first pong","username":"whut","description":"Something I made for glslsandbox, ported to Shadertoy. Not interactive.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","pong"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float triWave(float t) {\n\treturn abs(mod(t / 2.0, 2.0) - 1.0)-0.5;\n}\n\nbool inRange(float x, float a, float b) {\n\treturn x > min(a,b) && x < max(a,b);\n}\n\nbool inVectorRange(vec2 p, vec2 center, vec2 halfsize) {\n\treturn inRange(p.x, center.x - halfsize.x, center.x + halfsize.x) &&\n\t       inRange(p.y, center.y - halfsize.y, center.y + halfsize.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float ballSize = 0.025;\n\tfloat ballRange = 0.8;\n\tvec2 paddleSize = vec2(0.0125, 0.1);\n    \n    vec2 position = ( fragCoord.xy / iResolution.xy ) - vec2(0.5, 0.5);\n    position.x *= iResolution.x / iResolution.y;\n    \n    vec2 ballPos = vec2(triWave(iTime)*ballRange, triWave(iTime*0.725)*(1.0 - ballSize));\n\t\n\tfloat inter1 = 1.0 - (ballPos.x/ballRange + 0.5);\n\tvec2 paddle1 = vec2(-0.45 + ballSize, clamp(mix(0.0, ballPos.y, 0.25 + 0.75 * inter1), -0.5 + paddleSize.y, 0.5 - paddleSize.y));\n\t\n\tfloat inter2 = ballPos.x/ballRange + 0.5;\n\tvec2 paddle2 = vec2(0.45 - ballSize, clamp(mix(0.0, ballPos.y, 0.25 + 0.75 * inter2), -0.5 + paddleSize.y, 0.5 - paddleSize.y));\n\n\tfloat color = 0.0;\n\tcolor = (\n\t\tlength(position - ballPos) < ballSize || // ball\n\t\tinVectorRange(position, paddle1, paddleSize) || // paddle left\n\t\tinVectorRange(position, paddle2, paddleSize)) // paddle right\n\t\t? 1.0 : 0.0;\n\n\tfragColor = vec4( color, color, color, 1.0 );\n}","name":"Image","description":"","type":"image"}]}