{"ver":"0.1","info":{"id":"X333Df","date":"1717062525","viewed":142,"name":"Pixel Grass Grid","username":"Mario8664","description":"Pixel Grass Grid","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 10.0\n#define STEP 4.0\n#define GRASSPIECE 0.95\n#define UPP 0.125\n#define SPEED 0.4\n#define STR 0.2\n\n#define FLOWER 0.995\n\nfloat hash2to1(vec2 p)\n{\n    vec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat hash3to1(vec3 p3)\n{\n    p3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.zyx + 31.32);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat FlowerCenter(vec2 uv)\n{\n    vec2 pixUV = floor(uv / UPP) * UPP;\n    return ceil(hash2to1(pixUV) - FLOWER);\n}\n\nfloat FlowerNeighbor(vec2 uv)\n{\n    vec2 pixUV = floor(uv / UPP) * UPP;\n    vec2 offset = vec2(0, UPP);\n    return max(FlowerCenter(uv + offset.xy), max(FlowerCenter(uv - offset.xy), \n    max(FlowerCenter(uv + offset.yx), FlowerCenter(uv - offset.yx))));\n}\n\n\nfloat FlowerShadow(vec2 uv)\n{\n    vec2 pixUV = floor(uv / UPP) * UPP;\n    vec3 offset = vec3(-UPP, UPP, 0);\n    return max(FlowerCenter(uv + offset.zy * 2.0), \n    max(FlowerCenter(uv + offset.yy), FlowerCenter(uv + offset.xy)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    \n    uv = uv * SCALE;\n    \n    uv.y += iTime * 1.0;\n    \n    vec2 subuv = fract(uv);\n    vec2 coord = floor(uv);\n    float noiseForTime = hash2to1(coord) + floor((subuv.x - 0.5) / UPP) * UPP;\n    \n    float sinTime = floor(sin(iTime * SPEED + noiseForTime) * STR / UPP) * UPP;\n    float subuvx = floor((subuv.x + sinTime) / UPP) * UPP;\n    float noiseForBottom = hash3to1(vec3(coord, subuvx));\n    \n    float isBottomPixel = 1.0 - max(ceil(noiseForBottom - 0.3), step(UPP, subuv.y));\n    \n    coord.y -= isBottomPixel;\n    \n    vec2 grassPieceUV = vec2(uv.x + sinTime, uv.y * 0.5);\n    float noiseForGrassPiece = ceil(hash2to1(floor(grassPieceUV / UPP) * UPP) - GRASSPIECE);\n    noiseForGrassPiece = noiseForGrassPiece * (noiseForGrassPiece * 2.0 - 1.0) * 0.25;\n    \n    float noise = hash2to1(coord) + noiseForGrassPiece;\n    \n    float gray = ceil(noise * STEP) / STEP;\n    \n    vec3 c1= vec3(0.3, 0.5, 0.3);\n    vec3 c2= vec3(0.6, 0.7, 0.2);\n\n    vec3 col = mix(c1, c2, gray);\n    \n    float flowerNeighbor = FlowerNeighbor(uv);\n    col = mix(col, vec3(1.0, 0.95, 0.9), flowerNeighbor);\n    \n    float flower = FlowerCenter(uv);\n    col = mix(col, vec3(1.0, 0.9, 0.0), flower);\n    \n    float flowerShadow = FlowerShadow(uv);\n    col = mix(col, col - 0.15, flowerShadow);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}