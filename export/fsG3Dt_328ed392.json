{"ver":"0.1","info":{"id":"fsG3Dt","date":"1632374875","viewed":89,"name":"IK-2joints","username":"yunhai","description":"\ndrag your mouse to set red point","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["ik"],"hasliked":0,"parentid":"NljGRV","parentname":"MathLab"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float firstSeg=5.;\nconst float secondSeg=4.;\n//---------------------Lines-------------------\nconst float HLW=.05;//half line width\nconst float MSI=2.;//mesh space interval\nfloat lineSeg(vec2 uv,vec2 start,vec2 end)\n{\n    vec2 sp=uv-start;\n    vec2 se=end-start;\n    vec2 closp=clamp(dot(sp,se)/dot(se,se),0.,1.)*se+start;\n    return SL(length(uv-closp));\n}\nfloat line(vec2 uv,vec2 ori,vec2 dir)\n{\n    vec2 sp=uv-ori;\n    vec2 closp=dot(sp,dir)*dir+ori;\n    return SL(length(uv-closp));\n}\n//----------------------------------------------\nvec3 cartesian(vec2 uv)\n{\n    vec3 col=vec3(0.);\n    float msp=MSI;\n    float lhlw=HLW/2.;//local HLW\n    vec3 mesh=vec3(SS(lhlw,lhlw-.005,abs(uv.x-round(uv.x/msp)*msp)));\n    mesh+=vec3(SS(lhlw,lhlw-.005,abs(uv.y-round(uv.y/msp)*msp)));\n    col+=mesh*.5;\n    col=mix(col,vec3(0.,1.,0.),line(uv,vec2(0.),vec2(1.,0.)));\n    col=mix(col,vec3(0.,1.,0.),line(uv,vec2(0.),vec2(0.,1.)));\n    return col;\n}\nvec3 palette(float t)//Color Palette\n{\n    t*=1.732;\n    return vec3(.5)+vec3(.5)*cos(2.*PI*(vec3(.71,.31,.21)*t+vec3(.2,.4,.6)));\n}\n//-------------------experiment-----------------\nfloat cosineLaw(float edgeA,float edgeB,float faceEdge)\n{\n    float c=( edgeA*edgeA+edgeB*edgeB-faceEdge*faceEdge)/(2.*edgeA*edgeB);\n    if(c<-1.||c>1.) return 0.;\n    return acos(c);\n}\nvoid mainImage( out vec4 O, in vec2 C )\n{\n    vec2 uv=(C-.5*iR)*PIXW;\n    \n    float x=uv.x,y=uv.y,t=iTime;\n    O.rgb=cartesian(uv);  \n    \n    \n    vec2 freepos=vec2(4)+vec2(cos(t),sin(t))*2.;\n    bool isFree=iM.x<20.||iM.x>(iR.x-20.)||iM.y<20.||iM.y>(iR.y-20.);\n    vec2 pos=isFree?freepos:(iM.xy-.5*iR)*PIXW;\n    if(isFree)\n        O.rgb=mix(O.rgb,vec3(1,1,0),SS(2.,2.-PIXW,length(uv-vec2(4)))*\n                                SS(1.9,1.9+PIXW,length(uv-vec2(4))));//free trail\n    //Inverse Kinematics\n    vec2 hip,knee,ankle;//aka.ABC\n    float leg1=firstSeg,leg2=secondSeg;\n    hip=vec2(0);\n    ankle=pos;\n    vec2 ac=ankle-hip;\n    float angleA=cosineLaw(leg1,length(ac),leg2);\n    float base=atan(ac.y,ac.x);base+=angleA;//\"+\" means anti-clockwise\n    vec2 ab=vec2(cos(base),sin(base))*leg1;\n    knee=hip+ab;\n    ankle=knee+normalize(ac-ab)*leg2;\n    //draw arm\n    O.rgb=mix(O.rgb,vec3(1),lineSeg(uv,vec2(hip),vec2(knee)));\n    O.rgb=mix(O.rgb,vec3(1),lineSeg(uv,vec2(knee),vec2(ankle)));\n    O.rgb=mix(O.rgb,vec3(0,1,0),SS(.3,.3-PIXW,length(uv-hip)));\n    O.rgb=mix(O.rgb,vec3(0),SS(.2,.2-PIXW,length(uv-hip)));\n    O.rgb=mix(O.rgb,vec3(0,1,0),SS(.3,.1-PIXW,length(uv-hip)));\n    O.rgb=mix(O.rgb,vec3(0,1,0),SS(.3,.3-PIXW,length(uv-knee)));\n    O.rgb=mix(O.rgb,vec3(0),SS(.2,.2-PIXW,length(uv-knee)));\n    O.rgb=mix(O.rgb,vec3(0,1,0),SS(.3,.1-PIXW,length(uv-knee)));\n    O.rgb=mix(O.rgb,vec3(1,0,0),SS(.3,.3-PIXW,length(uv-ankle)));\n    O.rgb=mix(O.rgb,vec3(0),SS(.2,.2-PIXW,length(uv-ankle)));\n    O.rgb=mix(O.rgb,vec3(1,0,0),SS(.3,.1-PIXW,length(uv-ankle)));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define iR iResolution.xy\n#define iM iMouse\n#define PIXW (30./iR.x)\n#define SS(a,b,t) smoothstep(a,b,t)\n#define SL(d) smoothstep(HLW+PIXW,HLW-PIXW,d)\nconst float PI=3.14159265;\n","name":"Common","description":"","type":"common"}]}