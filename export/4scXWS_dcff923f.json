{"ver":"0.1","info":{"id":"4scXWS","date":"1461073255","viewed":2346,"name":"shortest hexagon (88 chars)","username":"FabriceNeyret2","description":"103 in aliased version, 130 in antialiased version.\nWill you find shorter ? :-)  ( same shape, scalable).\n[update]: 88 :-D","likes":35,"published":3,"flags":0,"usePreview":0,"tags":["hexagon","flare"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy, U = abs(u+u - R);\n    O = vec4 ( U.x < min( .5*R ,R - U*1.7 ).y ); }\n        \n\n                \n/**\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = abs(U+U - (O.xy=iResolution.xy)) / O.y;\n    O = vec4 ( U.x < .5 && U.x + U.y*1.7 < 1. );                     // 103 aliased - Greg idea\n  //O = vec4(max (U.x, U.x*.5+U.y*.87 ) < .5);                       // 107 aliased - Fab\n    \n  //U = smoothstep(.51,.5,U*mat2(1,0,.5,.87)); O += min(U.x,U.y) -O; // 130 smooth\n  //U *= mat2(2,0,1,1.7); U=1./U/U/U/U; O += min(U.x,U.y) -O;        // 122 blurry\n  //U *= mat2(2,0,1,1.7); O += 1./max(U.x,U.y) -O;                   // 112 blurry2\n  // see also a more stary version here: https://www.shadertoy.com/view/Md3SDS\n    \n  //O += sin(1e2*max(U.x, U.x*.5+U.y*.87))-O;                        // 110 concentric\n}\n/**/\n\n\n\n\n/**     // --- rotating flares version  by Shane // 157\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = abs( (U+U - (O.xy=iResolution.xy))/O.y \n             * mat2(O.zw = sin(vec2(0, 1.57) + iDate.w), -O.w, O.z)\n           )* mat2(2,0,1,1.7); \n    O += 1./max(U.x,U.y) -O; \n}\n/**/\n","name":"Image","description":"","type":"image"}]}