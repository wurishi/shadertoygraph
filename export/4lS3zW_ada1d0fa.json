{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"//Example to make textures of the channels using the texture.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //iTime renamed to another name\n    //You don't need to put this but I like better to write with 'time' instead of 'iTime'.\n    float time = iTime;\n    \n    //Get screen position\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //Make texture with iChannel0\n    //Fract makes a \"warp\" pattern for the texture.\n    //Videos doesn't have warp pattern.\n    //The time moves the texture.\n    //Before it was:\n    //vec4 tex = texture(iChannel0,fract(uv.x+(time/5.0)));\n    //Now I added vec2 so you can move which X and Y position you want.\n    vec4 tex = texture(iChannel0,vec2(fract(uv.x+(time/5.0)),fract(uv.y+(time/12.0))));\n    \n    //iChannel1 texture\n    vec4 pic = texture(iChannel1,uv);\n    \n    //Output colors\n    //Mix two textures, mix(tex1,tex2,opacity)\n\tfragColor = vec4(mix(tex.rgb,pic.rgb,0.5),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4lS3zW","date":"1427117182","viewed":3815,"name":"Texture example.","username":"anastadunbar","description":"This is an texture example, and how to use them.","likes":7,"published":1,"flags":0,"usePreview":1,"tags":["2d","basic","tutorial","easy"],"hasliked":0,"parentid":"","parentname":""}}