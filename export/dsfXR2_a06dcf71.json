{"ver":"0.1","info":{"id":"dsfXR2","date":"1669297730","viewed":252,"name":"falling_sand","username":"zengliyuan","description":"falling sand simulation\n\nmouse :  sand or water\nS + mouse : sand\nW + drag : water\nG + mouse   : steam\nF + mouse : seed\nE + mouse : eraser\nB + mouse : wall","likes":15,"published":1,"flags":48,"usePreview":0,"tags":["fallingsand"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 idx = ivec2(fragCoord*scale);\n    float data = GetData(ch0,idx);\n    float rand = hash(uint(idx.x+idx.y*int(iResolution.x)));\n    vec4 gas = vec4(vec3(.4,.5,.6)*data*100.,1);\n    vec4 water = vec4(.1,data,.8, 1);\n    vec4 sand = vec4(vec3(.9,.8,.3)*data,1);\n    vec4 wall = vec4(vec3(.44,.45,.45)*(1.+data-1.7),1);\n    vec4 plant = (data<.999)?vec4(.35f+.1*rand,-(data-.99)*20.+.6+.07*rand,.3,1):((data>.9998)? vec4(.85,.85,.2,1):vec4(.9,.4,.3,1));\n    fragColor = (data<.1&&data>.0) ?\n                (data<.01?gas:water) :\n                (data<.99?sand:(data<1.5?plant:wall));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define GetData(ch,idx) (texelFetch(ch,idx,0).r)\n#define ch0 iChannel0\n#define ch1 iChannel1\n\nconst float scale = .125; // 1/8;\n\nconst int KEY_B = 66; //wall\nconst int KEY_E = 69; //eraser\nconst int KEY_F = 70; //seed\nconst int KEY_G = 71; //steam\nconst int KEY_S = 83; //sand\nconst int KEY_W = 87; //water\n\nbool boundary(ivec2 idx, ivec2 size)\n{\n    return any(lessThan(idx,ivec2(1,1)))||any(greaterThan(idx,(size-ivec2(2,2))));\n}\n\nvec4 save_data(ivec2 off,vec4 data)\n{\n    return vec4(data[off.x|(off.y<<1)],0,0,0);\n}\n\n//hash from https://www.shadertoy.com/view/3sd3Rs\nfloat hash( uint n ) \n{   // integer hash copied from Hugo Eliasf\n\tn = (n<<13U)^n; \n    n = n*(n*n*15731U+789221U)+1376312589U;\n    return float(n&uvec3(0x0fffffffU))/float(0x0fffffff);\n}\n\nvec4 simulation(sampler2D ch,ivec2 idx,int time,ivec2 size, int s)\n{\n    const ivec2 off[2] = ivec2[2](ivec2(0,0),ivec2(-1,-1));\n    ivec2 idx2 = (idx+off[s])/2*2-off[s];\n    ivec2 off2 = idx-idx2;\n    float c = boundary(idx2,size)?2.:GetData(ch,idx2);\n    idx = idx2+ivec2(1,0);\n    float r = boundary(idx,size)?2.:GetData(ch,idx);\n    idx = idx2+ivec2(0,1);\n    float u = boundary(idx,size)?2.:GetData(ch,idx);\n    idx = idx2+ivec2(1,1);\n    float ru = boundary(idx,size)?2.:GetData(ch,idx);\n    float tmp;\n    \n    #define Swap2(x,y) tmp=x; x=y; y=tmp;\n    #define Swap3(x,y,z) tmp=x; x=y; y=z; z=tmp;\n\n    float a = hash(uint((time%10000)*size.x*size.y+idx2.x+idx2.y*size.x));\n    \n    if(a<.5)\n    {\n        Swap2(c,r);\n        Swap2(u,ru);\n    }\n    \n    //sand\n    if(u>.1&&u<=1.)\n    {\n        if (c<.1) \n        {\n            Swap2(c,u);\n        } \n        else if (r<.1&&c<=.99&&ru<.1/*&&c>.3 gravel*/)\n        {\n            Swap3(u, r, c);\n        }\n    }\n    if(ru>.1&&ru<=1.)\n    {\n        if (r<.1) \n        {\n            Swap2(ru,r);\n        } \n        else if (c<.1&&r<=.99&&u<.1 /*&&r>.15 stone*/)\n        {\n            Swap3(ru, c, r);\n        }\n    }\n\n    //water\n    if(u>=.01&&u<.1)\n    {\n        if (c<.01)\n        {\n            Swap2(c,u);\n        } \n        else if (r<.01&&u<.01)\n        {\n            Swap2(u, r);\n        }\n        else if(ru<.01)\n        {\n            Swap2(u,ru);\n        }\n    }\n    else if(c>=.01&&c<.1&&r<.01)\n    {\n        Swap2(c,r);\n    }\n    if(ru>=.01&&ru<.1)\n    {\n        if (r<.01)\n        {\n            Swap2(ru,r);\n        }\n        else if (c<.01&&ru<.01)\n        {\n            Swap2(ru, c);\n        }\n        else if(u<.01)\n        {\n            Swap2(u,ru);\n        }\n    }\n    \n    //grass\n    if(c==.99&&(u>=.99||r>=.99||ru>=.99))\n    {\n        c=.0;\n    }\n    if(u==.99&&c>.1&&c<=.99)\n    {\n        u=.9901;\n    }\n    if(c==.9901&&(u>=.01&&u<.1||r>=.01&&r<.1||ru>=.01&&ru<.1))\n    {\n        c=.991;\n    }\n    if(u==.99&&(c<.1||c>=996.))\n    {\n        u=.0;\n    }\n    if(c>.9905&&c<1.5)\n    {\n        if(c<.996&&u<.1)\n        {\n            u=min(c+.007*a,1.-1e-20);\n            if(ru<.1) ru =.9901;\n            c=.996;\n        }\n        if(c>.996&&u>=.99)\n        {\n            u=.0;\n        }\n    }\n    \n    if(a<.5)\n    {\n        Swap2(c,r);\n        Swap2(u,ru);\n    }\n    \n    //steam\n    if(c<.01&&r<.01&&u<.01&&ru<.01)\n    {\n        float rho = c+r+u+ru;\n        if(rho>.0)\n        {\n            vec2 v = c*vec2(1,1)+r*vec2(-1,1)+u*vec2(1,-1)+ru*vec2(-1,-1)+vec2(0,0.01);\n            v = clamp(v,-.5,.5);\n            Swap2(c,ru);\n            Swap2(r,u);\n            c = -.2*c+.6*rho*(.5-v.x-v.y);\n            r = -.2*r+.6*rho*(.5+v.x-v.y);\n            u = -.2*u+.6*rho*(.5-v.x+v.y);\n            ru = -.2*ru+.6*rho*(.5+v.x+v.y);\n        }\n    }\n    else if(!(c>=.01&&ru>=.01||r>=.01&&u>=.01))\n    {\n        float n = step(c,.01)+step(r,.01)+step(u,.01)+step(ru,.01);\n        float rs = c*step(c,.01)+r*step(r,.01)+u*step(u,.01)+ru*step(ru,.01);\n        float a = rs*(1./(n+1e-20));\n        c = c<.01?a:c;\n        r = r<.01?a:r;\n        u = u<.01?a:u;\n        ru = ru<.01?a:ru;\n    }\n    \n    #define U(x) (x>=2.?0.:x)\n    return save_data(off2,vec4(U(c),U(r),U(u),U(ru)));\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 idx = ivec2(fragCoord);\n    ivec2 size = ivec2(iResolution.xy*scale);\n    float sand = GetData(ch1, ivec2(KEY_S,0));\n    float steam = GetData(ch1, ivec2(KEY_G,0));\n    float seed = GetData(ch1, ivec2(KEY_F,0));\n    float water = GetData(ch1, ivec2(KEY_W,0));\n    float eraser = GetData(ch1, ivec2(KEY_E,0));\n    float wall = GetData(ch1, ivec2(KEY_B,0));\n    float r = hash(uint(idx.x+idx.y*size.x));\n    fragColor = ((iMouse.z>.0)&&(length(iMouse.xy*scale-fragCoord)<8.*scale*(steam>.0?6.:(seed>.0?.6:(eraser>.0?5.:1.)))))?\n    (vec4((steam>.0)?(.005):((seed>.0)?(.99):((water>.0)?(.02):((eraser>.0)?(.0):((wall>.0)?(1.9-r*.4):((sand>.0)?(.1+float(iFrame%450)/600.+r*.1):(\n    (.01+float(iFrame%525)/600.+r*.1))))))),0,0,0)):\n    (simulation(ch0,idx,iFrame,size,0));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 idx = ivec2(fragCoord);\n    ivec2 size = ivec2(iResolution.xy*scale);\n    fragColor = simulation(ch0,idx,iFrame,size,1);\n}","name":"Buffer B","description":"","type":"buffer"}]}