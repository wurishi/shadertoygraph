{"ver":"0.1","info":{"id":"ld3cWH","date":"1518639421","viewed":171,"name":"glsl-test #3","username":"saidwho12","description":"test","likes":4,"published":1,"flags":2,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sum3(in mat3 m) {\n\tvec3 v = m[0] + m[1] + m[2];\n    return v.x + v.y + v.z;\n}\n\nfloat lumi(in vec4 c) {\n\treturn sqrt(.299*c.x*c.x + .587*c.y*c.y + .114*c.z*c.z);\n}\n\nvec2 sobel(in vec2 uv, in vec2 t) {\n    float tleft = lumi(texture(iChannel0,uv + vec2(-t.x,t.y)));\n    float left = lumi(texture(iChannel0,uv + vec2(-t.x,0)));\n    float bleft = lumi(texture(iChannel0,uv + vec2(-t.x,-t.y)));\n    float top = lumi(texture(iChannel0,uv + vec2(0,t.y)));\n    float bottom = lumi(texture(iChannel0,uv + vec2(0,-t.y)));\n    float tright = lumi(texture(iChannel0,uv + vec2(t.x,t.y)));\n    float right = lumi(texture(iChannel0,uv + vec2(t.x,0)));\n    float bright = lumi(texture(iChannel0,uv + vec2(t.x,-t.y)));\n    float gx = tleft + 2.*left + bleft - tright - 2.*right - bright;\n    float gy = -tleft - 2.*top - tright + bleft + 2. * bottom + bright;\n    return vec2(gx, gy);\n}\n\nstruct light {\n\tvec3 o, ambient, diffuse, specular;\n    float power;\n};\nstruct material {\n\tvec3 ambient, diffuse, specular;\n    float shininess;\n};\n\nvec3 phong(in material m0, in light l0, in vec3 V, in vec3 N, in vec3 L, in float d) {\n    vec3 ambient = m0.ambient*l0.ambient;\n    vec3 diffuse = m0.diffuse*l0.diffuse*dot(N,L);\n    vec3 specular = m0.specular*l0.specular*pow(dot(reflect(N, L), V), m0.shininess);\n    return (ambient+diffuse+specular)*l0.power/d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 t = 1./iResolution.xy;\n    float aspect = iResolution.y/iResolution.x;\n    uv.y*= aspect;\n    vec3 p = vec3(uv, 0);\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    mouse.y*= aspect;\n\n    material m0 = material(vec3(.2,.1,0), vec3(.56, .43, .2), vec3(.765, .63,.2), 1.);\n    light l0 = light(vec3(mouse, .2), vec3(.3, .25, .01), \n                     vec3(.675, .5, .23), \n                     vec3(.876, .500, .6), .2);\n    \n    vec3 V = vec3(0,0,-1);\n   \n\tvec2 s = sobel(uv, t);\n    float g = sqrt(s.x*s.x + s.y*s.y);\n    vec3 N = normalize(vec3(s.x, s.y, 1.));\n    \n    vec3 l0dir = p-l0.o;\n    float d = length(l0dir);\n    vec3 L = normalize(l0dir);\n    vec3 col = phong(m0, l0, V, N, -L, d);\n    float gamma = 2.2;\n    \n    if (iMouse.z > 0.5)\n        fragColor = vec4(s.y,s.y,s.y,1);//pow(col,1./vec3(gamma)), 1);\n    else\n        fragColor = vec4(s.x,s.x,s.x,1);//pow(col,1./vec3(gamma)), 1);\n        \n    fragColor = vec4(N*.5+.5,1);//pow(col,1./vec3(gamma)), 1);\n   fragColor.rgb = col;\n}","name":"Image","description":"","type":"image"}]}