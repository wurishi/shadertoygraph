{"ver":"0.1","info":{"id":"3tsGD2","date":"1557737515","viewed":158,"name":"red waves","username":"takumifukasawa","description":"red waves","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["wave","sin","red"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//-----------------------------------------------------\n// noise from: https://thebookofshaders.com/12/\n//-----------------------------------------------------\n\n// 2D Random\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n//-----------------------------------------------------\n// end\n//-----------------------------------------------------\n\nfloat wave(vec2 st, float c) {\n    float f = smoothstep(c - .02, c, st.y) * smoothstep(c, c + .02, st.y);\n\treturn 1. - clamp(f, 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - .5;\n    \n    vec3 col = vec3(0.);\n    \n    float wave1 = wave(\n        uv + vec2(0., -.5 + noise(uv * 5. + iTime) * .08),\n        sin((uv.x + iTime * .2) * 20.) * .05\n    );\n    float wave2 = wave(\n        uv + vec2(0., -.4 + noise(uv * 5. + iTime) * .08),\n        sin((uv.x + iTime * .2) * 21.) * .05\n    );\n    float wave3 = wave(\n        uv + vec2(0., -.3 + noise(uv * 5. + iTime) * .08),\n        sin((uv.x + iTime * .2) * 22.) * .05\n    );\n    float wave4 = wave(\n        uv + vec2(0., -.2 + noise(uv * 5. + iTime) * .08),\n        sin((uv.x + iTime * .2) * 23.) * .05\n    );\n    float wave5 = wave(\n        uv + vec2(0., -.1 + noise(uv * 5. + iTime) * .08),\n        sin((uv.x + iTime * .2) * 24.) * .05\n    );\n    float wave6 = wave(\n        uv + vec2(0., 0. + noise(uv * 5. + iTime) * .08),\n        sin((uv.x + iTime * .2) * 25.) * .05\n    );\n    float wave7 = wave(\n        uv + vec2(0., .1 + noise(uv * 5. + iTime) * .08),\n        sin((uv.x + iTime * .2) * 26.) * .05\n    );\n    float wave8 = wave(\n        uv + vec2(0., .2 + noise(uv * 5. + iTime) * .08),\n        sin((uv.x + iTime * .2) * 27.) * .05\n    );\n    float wave9 = wave(\n        uv + vec2(0., .3 + noise(uv * 5. + iTime) * .08),\n        sin((uv.x + iTime * .2) * 28.) * .05\n    );\n    float wave10 = wave(\n        uv + vec2(0., .4 + noise(uv * 5. + iTime) * .08),\n        sin((uv.x + iTime * .2) * 29.) * .05\n    );\n\n    col = mix(col, vec3(1., 0., 0.) * .1, wave1);\n    col = mix(col, vec3(1., 0., 0.) * .2, wave2);\n    col = mix(col, vec3(1., 0., 0.) * .3, wave3);\n    col = mix(col, vec3(1., 0., 0.) * .4, wave4);\n    col = mix(col, vec3(1., 0., 0.) * .5, wave5);\n    col = mix(col, vec3(1., 0., 0.) * .6, wave6);\n    col = mix(col, vec3(1., 0., 0.) * .7, wave7);\n    col = mix(col, vec3(1., 0., 0.) * .8, wave8);\n    col = mix(col, vec3(1., 0., 0.) * .9, wave9);\n    col = mix(col, vec3(1., 0., 0.) * 1., wave10);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}