{"ver":"0.1","info":{"id":"NdBBzG","date":"1646481629","viewed":117,"name":"circle spinning along lines","username":"HalbFettKaese","description":"I made this shader after having seen the thumbnail of this video:\nhttps://youtu.be/snHKEpCv0Hk","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["circle","numberphile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BLUR 1./iResolution.y\n#define PI 3.14159\n\nconst float outerRadius = 0.4;\nconst float r = 0.02;\nconst float n = 16.0;\n\nvec3 hueToColor(float hue)\n{\n    // Regular hsv with s, v = 1\n    vec3 p = abs(fract(hue + vec3(3, 2, 1)/3.0) * 6.0 - 3.0) - 1.0;\n    \n    // Snap to more \"natural\" looking colors\n    float extreme = 1.4;\n    return clamp(extreme * (p - .5) + .5, 0.0, 1.0);\n}\n\nvoid circle( inout vec4 col, vec3 circleCol, vec2 uv, vec2 pos ) {\n    col = mix(col, vec4(circleCol, 1), smoothstep(BLUR, -BLUR, distance(uv, pos) - r));\n}\n\nvoid line( inout vec4 col, vec3 lineCol, vec2 uv, vec2 dir ) {\n    float lineDist = abs(dot(uv, vec2(dir.y, -dir.x)))/length(dir);\n    float s = length(uv) - outerRadius;\n    lineDist = max(lineDist, lineDist + sign(s)*s*s);\n    col.rgb = mix(mix(col.rgb, lineCol, smoothstep(BLUR, -BLUR, lineDist - r*.1)), col.rgb, col.a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.yy;\n    \n    vec3 background = mix(vec3(1), vec3(0), smoothstep(0.0, 1.0, length(uv) - outerRadius));\n    \n    vec4 col = vec4(background, 0);\n    \n    for (float i = 0.0; i < n; i += 1.0) {\n        float t = PI * i/n;\n        vec2 dst = outerRadius * vec2(cos(t), sin(t));\n        vec3 circleCol = hueToColor(0.5*iTime/PI + i/n);\n        circle(col, circleCol, uv, dst * sin(t + iTime));\n        line(col, vec3(1.0 - 3.0/n), uv, dst);\n    \n    }\n\n    // Output to screen\n    fragColor = vec4(col.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}