{"ver":"0.1","info":{"id":"XtdXzS","date":"1480362399","viewed":134,"name":"Rolling Distortion","username":"bradleygriffith","description":"Simple rolling distortion","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["line","distort"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float when_gt(float x, float y) {\n  return max(sign(x - y), 0.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = vec2(1.0) / iResolution.xy;\n    \n    float stepDistance = 8.0 * p.y;\n    float speed = 1.0;\n    float progress = fract(iTime * speed);\n    \n    vec2 thresholdCenter = vec2(0.5, (1.0 - progress));\n    float slope = 0.1;\n    float threshold = (slope * (uv.x - thresholdCenter.x)) + (thresholdCenter.y);\n\t\n    uv.x += (stepDistance * when_gt(uv.y, threshold)); // Shift\n\tuv.x -= (stepDistance * progress); // Slowly scroll to right\n    \n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}