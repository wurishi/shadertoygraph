{"ver":"0.1","info":{"id":"sdjXRt","date":"1620852280","viewed":68,"name":"Simple Orbit","username":"see_plus_plus","description":"My first attempt at shading. This should be two masses orbiting their barycenter...","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["space","gravity"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Draw a fuzzy sphere centered in point 'c', of radius 'r' and color 'color'.\n * 'pos' is the current position, while \n */\nvoid fuzzySphere(in vec2 c, in vec2 pos, in float r, in vec3 color, out vec4 fragColor)\n{\n    vec2 relPos = pos - c;\n    float r2 = dot(relPos, relPos);\n    float R = r*r;\n    if (r2 < R)\n    {\n        color *= vec3(1.0 - r2/R, 1.0 - r2/R, 1.0 - r2/R);\n        fragColor = vec4(color.x, color.y, color.z, 1.0);\n    }\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord/iResolution.yy - 0.5 * iResolution.xy/iResolution.y;\n    \n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 blue = vec3(0.0, 0.0, 1.0);\n    \n    vec2 c1 = texture(iChannel0, vec2(0.0, 0.0)).xy;\n    vec2 c2 = texture(iChannel0, vec2(0.75, 0.0)).xy;\n    \n    fragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    fuzzySphere(c1, pos, 0.1, red, fragColor);\n    fuzzySphere(c2, pos, 0.03, blue, fragColor);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float threshold = 0.5;\n    float massRatio = 0.01;\n    \n    if (iFrame == 1)\n    {\n        if (fragCoord.x <= threshold)\n            // Initial position and velocity for mass 1\n            fragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        else\n            // Initial position and velocity for mass 2\n            fragColor = vec4(0.5, 0.0, 0.0, 1.2);\n    }\n    else\n    {\n        vec4 data1 = texture(iChannel0, vec2(0.0, 0.0));\n        vec4 data2 = texture(iChannel0, vec2(0.75, 0.0));\n        \n        vec2 p1 = data1.xy;\n        vec2 v1 = data1.zw;\n        \n        vec2 p2 = data2.xy;\n        vec2 v2 = data2.zw;\n        \n        vec2 barycenter = p1*(1.0-massRatio) + p2*massRatio;\n        p1 -= barycenter;\n        p2 -= barycenter;\n        \n        vec2 r = p1 - p2;\n        vec2 dv1 = -iTimeDelta/dot(r, r)*normalize(r)*massRatio;\n        vec2 dv2 = iTimeDelta/dot(r, r)*normalize(r);\n        \n        \n        v1 += dv1;\n        p1 += v1 * iTimeDelta;\n        \n        v2 += dv2;\n        p2 += v2 * iTimeDelta;\n        \n        if (fragCoord.x <= threshold)\n            fragColor = vec4(p1, v1);\n        else\n            fragColor = vec4(p2, v2);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}