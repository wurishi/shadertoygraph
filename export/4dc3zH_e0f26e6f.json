{"ver":"0.1","info":{"id":"4dc3zH","date":"1447957154","viewed":2178,"name":"Demo : Shadertoy Music Channel","username":"Gijs","description":"For pedagocical purposes. (what you are seeing is the fourier transformation of music projected on a piano)\n(Drums are not supposed to be projected on a piano)\n(Works best with pure instruments)\n(Use microfone and whistle a song!)","likes":48,"published":1,"flags":0,"usePreview":0,"tags":["music","demo","texture2d","soundcloud","information"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float Piano_height = .1;\n\n//Post-processing options\nconst float Sharpness = 15.;\n\n//Blue Key : 261.6 Hz (Key 40,                Middle C)\n//Red  Key : 440   Hz (Key 49, First  A after Middle C)\n\nconst float ATone     = 0.0370;       //so 0.0370 texture space is 440Hz(found by trial-and-error)\nconst float Semitone  = 1.05946309436;//12 notes between an octave, octave is 2, so a semitone is 2^(1/12)\n\nfloat KeyToFrequency(int n){\n    return pow(Semitone,float(n-49))*440.;\n}\n\nfloat FrequencyToTexture(float Frequency){\n    return Frequency/440.*ATone;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\t\tvec2 Scaled     = fragCoord.xy/iResolution.xy;\n    \n    //Piano\n        int   Key       = 1+int(Scaled.x*87.);//1 to 88 (full piano)\n        int   Note      = Key%12;//A to G(Octave)\n\n    //Sound\n        float Frequency = KeyToFrequency(Key);\n        float Amplitude = texture(iChannel0,vec2(FrequencyToTexture(Frequency),.25)).x;\n        float Intensity = Amplitude*Amplitude*2.;\n        float Perceived = log(1. + Intensity)*.3;\n    \n    //Music Visualization\n      //vec3  Color     = vec3(Amplitude/(Scaled.y-Piano_height));\n      //vec3  Color     = vec3(.01/abs(Scaled.y-Piano_height-Amplitude));\n        vec3  Color     = vec3(1)*smoothstep(0.01,0.,Scaled.y-Piano_height-Perceived);\n      //vec3  Color     = vec3(Amplitude);\n      //vec3  Color     = vec3(Amplitude-Scaled.y+Piano_height);\n    \n    //Piano Drawing\n        if(Scaled.y<Piano_height){\n            //white keys\n            Color = vec3(1);\n\n            //black keys\n            if(Note==0||Note==2||Note==5||Note==7||Note==10){\n                Color = vec3(.1);\n            }\n\n            //special keys\n            if(Key==40) Color = vec3(.5, .5, 1.);\n            if(Key==49) Color = vec3(1., .5, .5);\n        }\n\n    \n\tfragColor = vec4(Color,1);\n}","name":"Image","description":"","type":"image"}]}