{"ver":"0.1","info":{"id":"Nstyzr","date":"1652972580","viewed":73,"name":"Perlin Noise Jerry Jerry","username":"OrangeLazer","description":"Rungus mugris","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sus","sussy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat sserp (float a0, float a1, float w) {\n    return (a1 - a0) * ((w * (w * 6.0 - 15.0) + 10.0) * w * w * w) + a0;\n}\n\nfloat lerp (float a, float b, float x) {\n    return (1. - x) * a + x * b;\n}\n\nfloat genNoise(vec2 uv) {\n\n    vec2 TL = floor(uv);\n    vec2 TR = vec2(ceil(uv.x), floor(uv.y));\n    vec2 BL = vec2(floor(uv.x), ceil(uv.y));\n    vec2 BR = ceil(uv);\n    \n    vec2 gradTL = vec2( cos(random(TL) * 6.283), sin(random(TL) * 6.283) );\n    vec2 toTL = vec2( uv.x  - TL.x, uv.y - TL.y );\n    vec2 gradTR = vec2( cos(random(TR) * 6.283), sin(random(TR) * 6.283) );\n    vec2 toTR = vec2( uv.x  - TR.x, uv.y - TR.y );\n    \n    vec2 gradBL = vec2( cos(random(BL) * 6.283), sin(random(BL) * 6.283) );\n    vec2 toBL = vec2( uv.x  - BL.x, uv.y - BL.y );\n    vec2 gradBR = vec2( cos(random(BR) * 6.283), sin(random(BR) * 6.283) );\n    vec2 toBR = vec2( uv.x  - BR.x, uv.y - BR.y );\n    \n    float t = sserp(dot(gradTL,toTL),dot(gradTR,toTR),fract(uv).x); \n    float b = sserp(dot(gradBL,toBL),dot(gradBR,toBR),fract(uv).x);\n    return sserp(t,b,fract(uv).y) + 0.5;\n}\n\nvec2 rotate(vec2 uv, float theta, float scale) {\n    return (uv - scale/2.) * mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n}\n\nfloat fbm(vec2 uv, int octaves) {\n    float sum = 0.;\n    float contribution = 0.5;\n    float scale = 1.;\n    for (int i = 0; i < octaves; i++) {\n        sum += genNoise(uv*scale) * contribution;\n        scale *= 2.;\n        contribution *= 0.5;\n        uv = rotate(uv, 1.2, scale);\n    }\n    return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= 10.;\n    uv = rotate(uv, iTime/20., 10.);\n    vec3 col = vec3( fbm(uv, 10) );\n   \n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}