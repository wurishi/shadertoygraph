{"ver":"0.1","info":{"id":"WlscRj","date":"1592495840","viewed":241,"name":"Tracing My Path","username":"lams3","description":"Having fun with path tracing.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["pathtracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Ray {\n\tvec3 origin;\n    vec3 direction;\n};\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // The ray starts at the camera position (the origin)\n    vec3 rayPosition = vec3(0.0f, 0.0f, 0.0f);\n     \n    // calculate coordinates of the ray target on the imaginary pixel plane.\n    // -1 to +1 on x,y axis. 1 unit away on the z axis\n    vec3 rayTarget = vec3((fragCoord/iResolution.xy) * 2.0f - 1.0f, 1.0f);\n     \n    // calculate a normalized vector for the ray direction.\n    // it's pointing from the ray position to the ray target.\n    vec3 rayDir = normalize(rayTarget - rayPosition);\n \t\n    Ray ray = Ray(rayPosition, rayDir);\n    \n    // show the ray direction\n    fragColor = vec4(rayDir, 1.0f);\n}","name":"Image","description":"","type":"image"}]}