{"ver":"0.1","info":{"id":"3dcXzS","date":"1572219798","viewed":480,"name":"Pointillism","username":"ankd","description":"pointillism effect shader.\n- BufA ... input video\n- BufB ... draw pointillism (main part!)\n- Image ... line up BufA and BufB","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["effect","pointillism"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tPointillism\n\tauthor - ankd\n\tdate - 20191028\n\n\t- BufA ... input video\n\t- BufB ... draw pointillism (main part!)\n\t- Image(this view) ... line up BufA and BufB\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.);\n\n    vec2 st = uv;\n    if(uv.x < 0.5) {\n        st = st*2.-vec2(0., 0.5);\n\t\tcol = texture(iChannel0, st).rgb;\n    } else {\n        st = (st*2.-1.)+vec2(0., 0.5);\n\t\tcol = texture(iChannel1, st).rgb;\n    }\n    col *= step(0.25, uv.y) - step(0.75, uv.y);\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float t = mod(iTime, 40.);\n    vec3 col = \n        t<10. ? texture(iChannel0, uv).rgb :\n        t<20. ? texture(iChannel1, uv).rgb :\n        t<30. ? texture(iChannel2, uv).rgb : texture(iChannel3, uv).rgb;\n    col = texture(iChannel3, uv).rgb;\n    //col = vec3(usin(uv.x*PI+iTime));\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define ENABLE_DOT_RANDOMIZE\n#define SQUARE_SIZE_MAX 8.\n\n\n#define PI 3.14159265359\n\nfloat hash(in vec2 v) { return fract(sin(dot(v, vec2(12.9898, 78.233)))*43237.5234); }\n\n#define R_LUMINANCE 0.298912\n#define G_LUMINANCE 0.586611\n#define B_LUMINANCE 0.114478\nfloat gray(in vec3 c) { return dot(c, vec3(R_LUMINANCE, G_LUMINANCE, B_LUMINANCE)); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // get color and calc gray-scale\n\tvec3 col = texture(iChannel0, uv).rgb;\n    float g = gray(col);\n\n\tfloat v = clamp(g, 0., 1.);// 0-1\n    v = pow(v, 0.4545);\n    \n    float point = 0.;\n    float s = 0.;\n    if(0.<v) {\n        // calc square size\n        s = v<1. ? (1.-v)*SQUARE_SIZE_MAX : 1.;\n\n        // pointillism\n        vec2 xy = fragCoord.xy;\n#ifdef ENABLE_DOT_RANDOMIZE\n        vec2 invRes = 1. / iResolution.xy;\n        vec2 id = iResolution.xy * (uv*invRes)/invRes;\n        xy += (s * hash(id));\n#endif\n\n        point = step(mod(xy.x, s), 1.) * step(mod(xy.y, s), 1.);\n    }\n\n\t// calc output color\n    //col = vec3(v);\n    //col = vec3(s / SQUARE_SIZE_MAX);\n    col = vec3(point);\n    //col *= point;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}