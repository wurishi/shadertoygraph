{"ver":"0.1","info":{"id":"clyBzw","date":"1701963339","viewed":4,"name":"Failed voronoi inside truchet","username":"aphim481","description":"Attempt to put a voronoi insde a truchet","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N22(vec2 p){\n    vec3 a = fract(p.xyx*vec3(322.234, 937.32, 454.382));\n    a += dot(a, a+69.21);\n    return fract(vec2(a.x*a.z, a.y*a.x));\n}\n/*\n    p = fract(p*vec2(421.23, 942.012));\n    p += dot(p, p+832.201);\n\n    return fract(p.y*p.x * .2120 );\n*/\nfloat N21(vec2 p){\n\n    vec2 a = fract(p*vec2(213.231, 421.01));\n    a += dot(a, a+38.292302);\n    return fract(a.x*a.y);\n\n}\n\nstruct Truchet{\n    vec2 uv;\n    vec3 col;\n};\n\nfloat Length(vec2 p1, float k){\n    p1 = abs(p1);\n    return pow(pow(p1.x, k) + pow(p1.y, k), 1./k);\n}\nvec3 voronoi(vec2 uv, float size){\n    float t = iTime;\n    uv*=size;\n    vec2 gv = fract(uv)-.5;\n    vec2 gId = floor(uv);\n    vec2 minId = vec2(0);\n    float minDist = 100.;\n    for(float y = -1.; y < 2.; y++){\n        for(float x = -1.; x < 2.; x++){\n            vec2 offs = vec2(x, y);\n            vec2 n = N22(gId + offs);\n            vec2 p = offs+sin(n*t*3.)*.9;\n            float d = Length(gv - p, 2.);\n            if(d < minDist){\n                minDist = d;\n                minId =  vec2(gId+offs);\n            }\n        }\n    }\n    vec3 col = vec3(minDist);\n//    if(gv.x > .46 || gv.y > .46) col = vec3(1., 0., 0.);\n    \n     \n    return col;\n}\n\nTruchet truchet(vec2 uv, float edges, float width, float size, vec3 col){\n    uv *= size;\n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    float n = N21(id);\n\n    if(n < .5){\n        gv.x*=-1.;\n    }\n\n//    float d = abs(abs(gv.x+gv.y) -.5);\n    float r = .5;\n    float val = sign(gv.x + gv.y + .00001) * .5;\n    vec2 cUv = gv - val; \n    float d = Length(cUv, edges);\n    float mask =smoothstep(0.01,-0.01 , abs(d - r)-width);\n    float angle = atan(cUv.x, cUv.y);\n    float x = fract(angle/1.57);\n    float y = (d-(r-width))/(2.*width);\n    y = abs(y-.5) * 2.;\n\n    col *= vec3(mask);\n    //if(gv.x > .49 || gv.y > .49) col = vec3(1.);\n\n\n    return Truchet(vec2(x,y), col);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 col= vec3(0.);\n    vec2 gv = fract(uv);\n//    col += voronoi(uv, 10.)*.3;\n //   col += voronoi(uv+.5, 15.)*.2;\n  //  col += voronoi(uv-.5, 10.)*.4;\n    //float vor = voronoi(uv, 40.);\n    //vec3 vor = voronoi(t1.uv/10., 20.);\n    float edges = ((sin(t/2.)/3.) + 1.5) * (sin(t*1.4)/2. + .85);\n    vec3 vor = voronoi(uv, 100.);\n    Truchet t1 = truchet(uv,edges, 0.12, 10., vec3(1.));\n    //Truchet t2 = truchet(uv+.075, 1.7, 0.04, 6., vec3(0., 0., 1.));\n    col += t1.col;\n    col *= vor; \n    col.rb *= t1.uv;\n\n    //col += t2.col;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}