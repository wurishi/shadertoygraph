{"ver":"0.1","info":{"id":"4fdXW8","date":"1713870264","viewed":123,"name":"draw a convolution kernel","username":"jonasfrey","description":"this is an experiment to see how a convolution kernal behaves, you can draw the kernal on the left side\nleft click to draw a positive weight, hold down spacebar to draw a negative weight\n","likes":2,"published":3,"flags":48,"usePreview":0,"tags":["mouse","draw","buffer","learn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Draw with mouse [antialiased]\" by avin. https://shadertoy.com/view/wlKfDm\n// 2024-04-23 10:23:30\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{          \n\n    vec2 o_trn = fragCoord.xy;\n    vec2 o_trn_nor = o_trn / iResolution.xy;\n    vec4 o_col_sum = vec4(0.);\n    \n    vec2 o_scl_krnl = vec2(18.);\n    vec2 o_scl_krnl_half = floor(o_scl_krnl/2.);\n    float n_sum_weight = 0.;\n   for(float n_x = 0.; n_x < o_scl_krnl.x; n_x+=1.){\n        for(float n_y = 0.; n_y < o_scl_krnl.y; n_y+=1.){\n            vec2 o_trn_krnl = vec2(n_x, n_y);\n            vec2 o_trn_krnl2 = o_trn_krnl-o_scl_krnl_half;\n            vec2 o_trn_krnl_nor = o_trn_krnl / o_scl_krnl;\n            vec4 o_weight = texture(iChannel0, o_trn_krnl_nor*vec2(0.5, 1.));\n            float n_w = o_weight.r -  o_weight.g;\n            n_sum_weight += n_w;\n            o_col_sum\n                +=\n                texture(\n                    iChannel1,\n                    (o_trn+o_trn_krnl2.xy)/iResolution.xy\n                )*n_w;\n        }\n    }\n    o_col_sum /= n_sum_weight;\n    fragColor = texture(iChannel0, o_trn/iResolution.xy);\n    if(o_trn_nor.x > .5){\n        fragColor = o_col_sum;\n    }\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define keyToggle(ascii)  ( texelFetch(iChannel2,ivec2(ascii,2),0).x > 0.)\n#define keyClick(ascii)   ( texelFetch(iChannel2,ivec2(ascii,1),0).x > 0.)\n#define keyDown(ascii)    ( texelFetch(iChannel2,ivec2(ascii,0),0).x > 0.)\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ouv = (fragCoord.xy)/iResolution.y;\n       \n    vec2 pos1 = iMouse.xy/iResolution.y;\n    vec4 prevMouse = texture(iChannel1, ouv).rgba;\n    vec2 pos2 = prevMouse.rg;\n       \n    vec3 backCol = texture(iChannel0, fragCoord/iResolution.xy).rgb;\n                \n    float d = 0.;\n    vec3 o_col = vec3(0.);\n    float n = 1.-length(pos1-ouv)*3.;\n    if(prevMouse.w > 0.){\n        o_col = vec3(n, 0., 0.);\n    }  \n    float n_key_spacebar = 32.;\n    if(keyDown(n_key_spacebar)){\n        o_col = vec3(0., n,0.);\n    }\n    \n    // vec3 col = backCol + vec3(d);\n    \n    vec3 col = max(backCol, o_col );\n    \n    fragColor = vec4(col, 1.);    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(iMouse.xy/iResolution.y,1.0,iMouse.z);    \n}","name":"Buffer B","description":"","type":"buffer"}]}