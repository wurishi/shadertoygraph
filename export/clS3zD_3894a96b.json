{"ver":"0.1","info":{"id":"clS3zD","date":"1672921902","viewed":68,"name":"Color Experiment","username":"anAccount","description":"An experiment of my last shadertoy using help from Dave Hoskin to make some color!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["beginner","noob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/(iResolution.xx)*fragCoord*0.1;\n    \n    // Rotation angle (in radians)\n    float angle = iTime;\n    \n    // Rotation matrix\n    float idgjo = clamp(tan(0.0),1.0,1.4);\n    mat2 rotationMatrix = mat2(0.000001, cos(angle/1.9), tan(0.8), tan(idgjo));\n    \n    // Rotate the pixel coordinates\n    uv = rotationMatrix * uv;\n    \n    \n    \n    //experimentinggggg\n    float forexp3 = vec3(cos(iTime+uv.yxy+vec3(1,2,3))).x;\n    float experiment = mod(fragCoord.y,1.0);\n    float experiment2 = mod(fragCoord.y,0.3);\n    float experiment3 = mod(forexp3, fragCoord.x);\n    \n    //Color\n    //col.y = cos(fragCoord.y-iTime);\n    // 0.5 + 0.5*cos(iTime+uv.xyx+vec3(1,2,3));\n    //col.x = mix(vec3(0.0,0.0,0.0),vec3(0.0,0.0,0.0),experiment).r; //the .r can be any letter for some reason\n    //col.z = mix(experiment, experiment2, 0.1);\n    //col.y = vec3(experiment3,0.0,0.0).r;\n    \n    \n    // Time varying\n    vec3 col = -cos(uv.yyy+iTime*2.0+-sin(uv.yyy))*(.87);\n    col.x = -cos(experiment3/200.0+col.z);\n    col.y = -cos(col.x*1.0);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}