{"ver":"0.1","info":{"id":"XftyRr","date":"1730168281","viewed":125,"name":"Super configurable progress bar ","username":"gabrieloc","description":"just drop the progressBar function into your shader to make progress","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["progress","ui"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdRoundedBox(vec2 p, vec2 b, float r) {\n  vec2 d = (abs(p) - b) + r;\n  return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - r;\n}\n\nfloat progressBar(\n  float aspectRatio,\n  float lineWidth,\n  float progress,\n  float segments,\n  float strokeAlpha,\n  float trackAlpha,\n  vec2 uv\n) {\n  float OutAlpha = 0.0;\n\n  segments = max(1.0, floor(segments));\n\n  float smoothing = fwidth(uv.x) * segments;\n  vec2 sar = vec2(1.0, segments / aspectRatio);\n  float lw = lineWidth * smoothing;\n  float rounding = min(0.5 - lw, sar.y * 0.5 - lw);\n\n  float sdf = sdRoundedBox(\n    (vec2(fract(uv.x * segments), uv.y) - 0.5) * sar,\n    sar * 0.5 - lw,\n    rounding\n  );\n  float stroke = smoothstep(lw * 0.5 + smoothing, lw * 0.5, abs(sdf + smoothing)) * strokeAlpha;\n  float track = smoothstep(lw * 2.0, lw * 2.0 + smoothing, -sdf - smoothing);\n  OutAlpha = max(OutAlpha, track * trackAlpha);\n  OutAlpha = max(OutAlpha, stroke);\n\n  vec2 offset = vec2(progress, 1.0);\n  float minWidth = ((rounding + lw) * 2.0) / segments + floor(progress * segments) / segments;\n  offset.x = max(offset.x, minWidth);\n  float bar = sdRoundedBox(\n    (uv - 0.5 * offset) * sar * vec2(segments, 1.0),\n    (sar * 0.5 * offset) * vec2(segments, 1.0) - lw,\n    rounding\n  );\n  bar = smoothstep(lw * 2.0, lw * 2.0 + smoothing, -bar);\n  bar *= track;\n  OutAlpha = max(OutAlpha, bar);\n\n  return OutAlpha;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  float count = mix(10.0, 30.0, sin(iTime*0.5) * 0.5 + 0.5);\n  vec2 uv = fragCoord / iResolution.xy;\n  uv = (uv - 0.5) * vec2(1, iResolution.y / iResolution.x) + 0.5;\n  float aspectRatio = count;\n\n  float col = progressBar(\n    aspectRatio,\n    mix(1.0, 5.0, sin(iTime) * 0.5 + 0.5), // line width\n    sin((iTime + floor(uv.y * count) / count) * 6.28) * 0.5 + 0.5, // progress\n    ceil(sin(iTime) * 10.0), // segments\n    sin(iTime) * 0.5 + 0.5, // stroke alpha\n    mix(0.0, 0.5, sin(iTime * 2.0) * 0.5 + 0.5), // track alpha\n    fract(uv * vec2(1.0, aspectRatio))\n  );\n  fragColor = vec4(col, col, col, 1);\n}","name":"Image","description":"","type":"image"}]}