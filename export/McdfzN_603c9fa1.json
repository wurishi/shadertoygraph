{"ver":"0.1","info":{"id":"McdfzN","date":"1732807404","viewed":92,"name":"Eclipse II","username":"Kamenev","description":"Blood Moon","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["procedural"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fbm(vec2 p) {\n    return 0.5000 * texture(iChannel1, p * 1.00).x +\n           0.2500 * texture(iChannel1, p * 2.02).x +\n           0.1250 * texture(iChannel1, p * 4.03).x +\n           0.0625 * texture(iChannel1, p * 8.04).x;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float time = mod(iTime, 60.0);\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 i = p;\n\n    vec2 mouse = iMouse.z == 0.0 ? vec2(0.0, 0.0) : (iMouse.xy / iResolution.xy) * 2.0 - 1.0;\n    mouse.y = -mouse.y; \n    float angle = mouse.x * 3.14159; \n    float tilt = mouse.y * 0.5;      \n    float co = cos(angle);\n    float si = sin(angle);\n    mat2 rotation = mat2(co, -si, si, co);\n    p = rotation * p;\n    p.y += tilt;\n\n    // Terreno\n    vec2 q = vec2(p.x, 1.0) / p.y;\n    q.y -= 0.9 * time;\n    vec2 off = texture(iChannel0, 0.1 * q * vec2(1.0, 2.0) - vec2(0.0, 0.007 * iTime)).xy;\n    q += 0.4 * (-1.0 + 2.0 * off);\n    vec3 col = vec3(0.8, 0.7, 0.5) * sqrt(texture(iChannel0, 0.05 * q * vec2(1.0, 4.0) + vec2(0.0, 0.01 * iTime)).zyx);\n    float re = 1.0 - smoothstep(0.0, 0.7, abs(p.x - 0.6) - abs(p.y) * 0.5 + 0.2);\n    col += vec3(1.0, 0.8, 0.5) * re * 0.2 * (0.1 + 0.9 * off.y) * 5.0 * (1.0 - col.x);\n\n    // Céu\n    vec3 sky = vec3(0.8, 0.4, 0.1); \n    float f = fbm(0.002 * vec2(p.x, 1.0) / p.y);\n    vec3 cloud = vec3(0.3, 0.4, 0.5) * 0.7 * (1.0 - 0.85 * smoothstep(0.4, 1.0, f));\n    sky = mix(sky, cloud, 0.95 * smoothstep(0.4, 0.6, f));\n    sky = mix(sky, vec3(0.33, 0.34, 0.35), pow(1.0 - max(0.0, p.y), 2.0));\n    col = mix(col, sky, smoothstep(0.0, 0.1, p.y));\n\n    // Horizonte\n    col += 0.1 * pow(clamp(1.0 - abs(p.y), 0.0, 1.0), 9.0);\n\n    // Lua\n    float d = length(p - vec2(0.6, 0.5));\n    vec3 moon = vec3(0.9, 0.2, 0.1) * (1.0 - 0.1 * smoothstep(0.2, 0.5, f)); \n    col += 0.8 * moon * exp(-4.0 * d) * vec3(1.1, 0.9, 0.8);\n    col += 0.2 * moon * exp(-2.0 * d);\n    moon *= 0.85 + 0.15 * smoothstep(0.25, 0.7, fbm(0.05 * p + 0.3));\n    col = mix(col, moon, 1.0 - smoothstep(0.2, 0.22, d));\n\n    // Pós-processamento\n    col = pow(1.4 * col, vec3(1.5, 1.2, 1.0));\n    col *= clamp(1.0 - 0.3 * length(i), 0.0, 1.0);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}