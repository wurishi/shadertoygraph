{"ver":"0.1","info":{"id":"ttSBRy","date":"1660642148","viewed":142,"name":"Abstract Pond","username":"resontone","description":"Water grass with fish","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["bokeh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TWO_PI = 6.28318530718;\nconst float PI = 3.14159265359 ;\n\n\n//Approximate median blur. \nvec4 medianBlur(vec2 uv, sampler2D inputTex, vec2 pixelSize,  vec2 basePixelSize, float radius,\n               float angle_start, float angle_step)\n{\n    if(radius < pixelSize.x || radius < pixelSize.y)\n    {\n     \treturn(texture(inputTex, uv));\n    } else\n    {\n        vec4 outputCol = vec4(0.);\n        \n        int num_iterations = 50;\n        float angle = angle_start;\n        float temp_radius = 0.;\n        for(int i = 0; i < num_iterations; i++)\n        {\n            temp_radius = float(i)*radius/float(num_iterations);\n            angle += PI*angle_step*(iTime+30.);\n            vec2 samplePos = uv + vec2(temp_radius*sin(angle),temp_radius*cos(angle));\n            vec4 colourAtPos = texture(inputTex, samplePos);\n\n            outputCol = max(outputCol, colourAtPos);\n        }\n\n\n    \treturn(clamp(outputCol*1.25, vec4(0.), vec4(1.)));\n    }\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n\n    \n\n    vec2 basePixelSize = vec2(1./iResolution.x, 1./iResolution.y);\n    //Restrict precision as radius increases\n    float radius = 0.25;//+iTime*0.025;\n    \n    vec2 pixelSize = basePixelSize;\n    \n \t\n    vec4 color = texture(iChannel0, uv); \n\n   \n    vec4 medianBlurred = medianBlur( uv, iChannel0, pixelSize, pixelSize,  radius, iTime,\n                                   atan(abs(uv.x), uv.y+0.5)*0.025);\n\n    // Output to screen\n    fragColor =  medianBlurred;\n}","name":"Image","description":"","type":"image"}]}