{"ver":"0.1","info":{"id":"Nl3cz7","date":"1659443240","viewed":404,"name":"Lonely Bubbles","username":"Hyeve","description":"I wanted to get more use out of my fbm water and make something with it more of the focus. I was hoping to do more complex underwater geometry, but unfortunately the fbm utterly kills the performance of my reflections/refractions, so bubbles it was.","likes":21,"published":1,"flags":32,"usePreview":0,"tags":["3d","raymarching","transparency","water","bubbles","reflections"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n#define DTR 0.01745329\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define vmin(a, b) (a.x < b.x ? a : b)\n\nvec2 uv=vec2(0);\nvec3 cp,cn,cr,ss,oc,gl=vec3(0),vb,ro,rd,so,ld;\nvec4 fc=vec4(0),cc=vec4(0);\nfloat tt,cd,sd,md,io,oa,td=0.,li;\nint es=0,ec=0,fi=1;\n\nfloat smin(float a, float b, float k){float h=clamp(0.5+0.5*(b-a)/k,0.,1.);return mix(b,a,h)-k*h*(1.-h);}\n\nfloat snoise(float a)\n{\t\n\treturn sin(a) + cos(a*0.5) * sin(a * 2.);\n}\n\nfloat fbm(float x, float h, float n, float o)\n{    \n    vec2 g = vec2(2,exp2(-h));\n\t\tvec3 f = vec3(1,1,0);\n\t\tx -= o * 0.5;\n    for(float i=0.; i<n; i++){f=vec3(f.xy*g,f.z+f.y*snoise(f.x*x+o));}\n    return f.z;\n}\n\nfloat surface(float s, vec3 p, vec3 o)\n{\n\ts -= fbm(p.z * 0.5 + sin(p.x*0.5), 2., 3., o.x)*o.z+0.5;\n\ts -= fbm(p.x * 0.5 + cos(p.z*0.5), 2., 3., o.y)*o.z+0.5;\n\ts -= fbm(p.y * 0.5 + sin(p.x*0.5+p.z*0.5), 2., 3., o.x)*o.z+0.5;\n\treturn abs(s * 0.7) - 0.001;\n}\n\n\nfloat mp(vec3 p)\n{\t\t\n\t\tvec3 pp = p;\n\t\n\t\tvec3 an = vec3(tt,tt*0.5,0.1);\n\t\n\t\tsd = p.y - 2.;\n\t\n\t\tfloat fl = surface(sd, p, an);\n\t\tsd=fl;\n\t\n\t\tp.z += 20.;\n\t\tp.z = mod(p.z, 100.) - 50.;\n\t\tp += vec3(1,3,0);\n\t\n\t\tfloat bubble = surface(length(p + vec3(-sin(tt*0.2), cos(tt*0.4+5.), cos(sin(tt)))) - 1., p, an);\n\t\tbubble = smin(bubble, surface(length(p + vec3(sin(tt*0.1)*5. - 10., cos(tt*0.1)*8.+5., -cos(sin(tt-0.3)*2.)+7.)) - 2., p, an), 0.3);\n\t\tbubble = smin(bubble, surface(length(p + vec3(cos(tt*0.2)*6. + 15., -sin(tt*0.1+4.)*6.+3., cos(sin(tt-0.3)*4.)-7.)) - 3., p, an), 0.3);\n\t\tbubble = smin(bubble, surface(length(p + vec3(sin(tt*0.2)*7., -cos(tt)+5., cos(tt*0.1) * 5. + 15.)) - 1.5, p, an), 0.3);\n\t\tbubble = smin(bubble, surface(length(p + vec3(cos(tt*0.1)*5., sin(tt*0.5)*5.+2., sin(tt*0.2) * 15. + 8.)) - 1.5, p, an), 0.3);\n\n\t\tsd = min(sd, bubble);\n\n\t\tsd=abs(sd)-0.001;\n\t\t\n\t\tif(sd<0.05)\n\t\t{\t\n\t\t\tio=fl<sd+0.01?-1.0:1.5;\n\t\t\toc=vec3(0.5);\n\t\t\toa=0.3;\n\t\t\tss=vec3(0,0,0.3);\n\t\t\tec=2;\t\n\n\t\t}\n\t\treturn sd;\n}\n\nvoid nm()\n{\n\tmat3 k=mat3(cp,cp,cp)-mat3(.001);\n\tcn=normalize(mp(cp) - vec3(mp(k[0]),mp(k[1]),mp(k[2])));\n}\n\nvoid shtr(){fi=0;so=cp+cn*0.05;md=64.;for(li=cd=0.;cd<64.;li++,cd+=mp(cp=ro+cn*0.05-ld*cd)){if(sd<md&&sd<cd)md=sd;if(sd<0.001||li>64.)break;}fi=1;}\nvoid tr(){for(li=cd=0.;cd<128.;){li++;cd+=mp(cp=ro+rd*cd);td+=sd;if(sd<0.0001||li>256.)break;}cp-=rd*0.005;nm();}\n\nvoid px(vec3 rd)\n{\n  vec3 bg=cc.rgb=vec3(0.1,0.65,1.)-pow(length(uv),1.5);\n\tif(cd<128.){cc.a=oa;ld=normalize(cp-vec3(0,70,100));\n\tfloat df=max(dot(cn,-ld),0.7),sp=max(1.-length(cross(rd+ld,cn)),0.)*(1.2-oa),\n\tfo = exp(-pow(0.015*td,2.)),ao=1.-clamp(mp(cp+cn*.1)/.1,0.,1.);\n\tvec3 fr=pow(1.-abs(dot(rd,-cn)),3.)*mix(cc.rgb,oc,1.);\n  cc.rgb=(oc*df+fr+sp+ss)-ao*0.2;\n\tshtr();float sh=(1.-clamp(md/0.05,0.,1.));cc.rgb-=sh*0.;\n\tcc.rgb = mix(bg, cc.rgb, fo);}\n\telse cc.a=1.;cc.rgb+=gl;\n\tcc.rgb*=max(max(cc.r,max(cc.g,cc.b)),1.);\n}\n\nvoid render(vec2 frag, vec2 res, float time, out vec4 col)\n{\n  uv=vec2(frag.x/res.x,frag.y/res.y);\n  uv-=0.5;uv/=vec2(res.y/res.x,1);\n\t\n\ttt=mod(time, 100.);\n\t\n  ro=vec3(0,0,-10);\n  rd = normalize(vec3(uv, 1));    \n\t\n\tfor(int i=0;i<5;i++)\n  {\n\t\ttr();ro=cp-cn*(io<0.?-0.01:0.01);\n\t\tcr=refract(rd,cn,i%2==0?1./io:io);\n    if((length(cr)==0.&&es<=0)||io<0.)\n\t\t{i++;cr=reflect(rd,cn);es=(io<0.?es:ec);}\n\t\tpx(rd);if(max(es,0)%3==0) rd=cr;\n\t\tes--;fc=fc+vec4(cc.rgb*cc.a,cc.a)*(1.-fc.a);\n\t\tif(fc.a>=1.)break;\n  }\n  col=fc/fc.a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(mod(float(iFrame), 60./FPS) == 1.) render(fragCoord.xy,iResolution.xy,iTime,fragColor);\n    else fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define FPS 30.","name":"Common","description":"","type":"common"}]}