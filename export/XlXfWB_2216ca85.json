{"ver":"0.1","info":{"id":"XlXfWB","date":"1515592542","viewed":107,"name":"Diagramme de Vorono√Ø","username":"Simeon","description":"Chaque cellule renferme un seul germe, et forme l'ensemble des points du plan plus proches de ce germe que tout les autres.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["vorono"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Exercice 1\n\n#define N 16\n\nconst vec2 seeds[N] = vec2[N](\n        vec2(0.4909341896813397, 0.4411746394781988),\n    vec2(0.023154839562741336, 0.17453086278158236),\n    vec2(0.4841522693269965, 0.566070925522041),\n    vec2(0.39165764187457586, 0.12374604727664873),\n    vec2(0.7726363620311325, 0.41753793108197124),\n    vec2(0.651474705367743, 0.9012706783934031),\n    vec2(0.7172594834128126, 0.6992439157131215),\n    vec2(0.6369908499350231, 0.403893605352875),\n    vec2(0.20219708523685043, 0.8013496272762997),\n    vec2(0.7359940436246087, 0.9237896276228532),\n    vec2(0.6719571609504648, 0.21766983688845654),\n    vec2(0.2676653539495685, 0.24183482432901404),\n    vec2(0.6407698999474316, 0.1195283734310354),\n    vec2(0.6142020832181427, 0.28915743038251074),\n    vec2(0.9146517764852312, 0.8606885421207415),\n    vec2(0.48668109320352837, 0.6866997169699516)\n);\n\nconst vec3 colors[N] = vec3[N](\n    vec3(117, 161, 108),\n    vec3(69, 25, 40),\n    vec3(122, 2, 205),\n    vec3(145, 154, 155),\n    vec3(52, 180, 64),\n    vec3(13, 18, 208),\n    vec3(161, 17, 7),\n    vec3(86, 250, 30),\n    vec3(254, 69, 219),\n    vec3(164, 202, 26),\n    vec3(198, 159, 123),\n    vec3(193, 248, 189),\n    vec3(248, 62, 243),\n    vec3(43, 117, 41),\n    vec3(53, 31, 140),\n    vec3(106, 120, 162)\n) ;\n\nfloat cond;\nconst float radius = 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0,0,0,1);\n    float distmin = 999999.0;\n    vec2 current;\n    for(int i=0; i<N; i++)\n    {\n        current = seeds[i] * iResolution.xy;\n        float curDist = distance(fragCoord.xy, current);\n        if (curDist < distmin)\n        {\n        \tdistmin = curDist;\n            cond = float(distance(current, fragCoord) <= radius);\n        \tfragColor = mix(vec4(colors[i]/255.0,1.0), vec4(0,0,0,1.0), cond);\n        }\n    }    \n}","name":"Image","description":"","type":"image"}]}