{"ver":"0.1","info":{"id":"43dXzl","date":"1719413784","viewed":64,"name":"shiny tiles","username":"whut","description":"Something I made for glslsandbox and ported to Shadertoy.\n\nClick the mouse to move the light around. You can also tweak SCALE to modify the tile size and CORNER to modify how \"round\" the tiles are.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["light","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\n#define SCALE 8.\n#define CORNER 16.\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 realPos = ( fragCoord.xy / iResolution.xy) - 0.5;\n    realPos.x *= iResolution.x / iResolution.y;\n    vec2 pos = realPos * SCALE;\n    \n    vec2 mouse = iMouse.xy / iResolution.xy - 0.5;\n    mouse.x *= iResolution.x / iResolution.y;\n\t\n\tvec3 light = vec3(realPos - mouse, 1.);\n\n\tvec3 normal = normalize(vec3(-tan(pos.x * PI), -tan(pos.y * PI), CORNER));\n\t\n\tfloat bright = dot(normal, normalize(light));\n\tbright = pow(bright, 1.);\n\t//bright *= step(length(position), 1.);\n\t\n\tvec3 color = hsv2rgb(vec3((floor(pos.x + 0.5) + iTime)/SCALE, 1., 1.)) * bright;\n\t\n\tvec3 heif = normalize(light);\n\t\n\tvec3 spec = vec3(pow(dot(heif, normal), 96.));\n\t\n\tcolor += spec;\n\n\t//fragColor = vec4( vec3( color, color * 0.5, sin( color + time / 3.0 ) * 0.75 ), 1.0 );\n\tfragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}