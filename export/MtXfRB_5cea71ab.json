{"ver":"0.1","info":{"id":"MtXfRB","date":"1512282827","viewed":179,"name":"Purple Goo","username":"harrisonvanderbyl","description":"Some Goo","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["goo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FOV 1.0\nfloat random (in vec3 _st) {\n    return fract(sin(dot(_st.xyz,\n                         vec3(12.9898,78.233,82.19)))*\n        43758.5453123);\n}\nfloat noise (in vec3 _st) {\n    vec3 i = floor(_st);\n    vec3 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0,0.0));\n    float c = random(i + vec3(0.0, 1.0,0.0));\n    float d = random(i + vec3(1.0, 1.0,0.0));\n\n    float e = random(i + vec3(0.0, 0.0,1.0));\n    float g = random(i + vec3(1.0, 0.0,1.0));\n    float h = random(i + vec3(0.0, 1.0,1.0));\n    float j = random(i + vec3(1.0, 1.0,1.0));\n    f = (1.0-cos(f*3.1415))/2.0;\n   // f = pow(abs(f-0.5)*2.0,vec3(2.0,2.0,2.0))*0.5*sign(f-0.5)+0.5;\n   // f = (1.0-cos(clamp(f*2.0,0.0,1.0)*3.1415))/4.0+(1.0-cos(clamp(f*2.0-1.0,0.0,1.0)*3.1415))/4.0;\n    \n    // float a1 = mix(a, b, u.x) \n     //       (c - a)* u.y * (1.0 - u.x) +\n     //(d - b) * u.x * u.y;\n     float a1 = mix(a,b,f.x);\n     float a2 = mix(c,d,f.x);\n     float a3 = mix(e,g,f.x);\n     float a4 = mix(h,j,f.x);\n\n     float a5 = mix(a1,a2,f.y);\n     float a6 = mix(a3,a4,f.y);\n\n\n    return mix(a5,a6,f.z);\n}\n\nfloat fbm ( in vec3 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec3 shift = vec3(100.0,22.5,44.0);\n    float r = 1.0;\n    for (int i = 0; i < 4; ++i){\n        v += a * noise(_st);\n        r += a;\n        _st =  shift + _st*2.0;\n        _st = (sin(r)*_st+cos(r)*_st);\n        a *= 0.5;\n    }\n    return v;\n}\nvec4 getint(vec3 cam,vec3 ray,vec3 pos,vec3 norm){\n    float d = dot(pos-cam,norm)/dot(ray,norm);\n    \n    vec3 posa = ray* d;\n    return vec4(posa,sign(d)*0.5+0.5);\n    \n    }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy-0.5;\n    \n    vec2 look = (iMouse.xy-iMouse.zw)/iResolution.xy*3.1415*2.0+3.1415;\n    look=mix(vec2(3.1415),look,float(iMouse.z>0.0&&iMouse.w>0.0));\n    look.y=look.y*0.5+3.1415/2.0+3.4415;\n    look.x = -look.x + 3.1415;\n    \n    //xy = mouse when clickdown\n    //zw = mouse when clickfirst\n    vec3 screen = vec3(0.0);//\n    screen.x = uv.x;\n    screen.y = -sin(look.y)*FOV+cos(look.y)*uv.y*(iResolution.y/iResolution.x);\n    screen.z = cos(look.y)*FOV+sin(look.y)*uv.y*(iResolution.y/iResolution.x);\n   float temp = screen.x;\n    screen.x = cos(look.x)*screen.x+sin(look.x)*screen.z;\n    \n    screen.z = -sin(look.x)*temp+cos(look.x)*screen.z;\n    \n    \n   \n    vec3 ray = normalize(screen);\n    vec3 y = vec3(0.0,0.0,0.0);\n    vec3 pass = vec3(100.0);\n    vec3 ye = vec3(0.0);\n    float b = 0.0;\n    for(float i = 0.0;i<1.0;i+=0.01){\n        vec4 pos = getint(vec3(0.0,0.0,0.0),ray,vec3(0.0,-2.0+i,0.0),vec3(0.0,1.0,0.0));\n        vec3 ac = vec3(pos.x,iTime,pos.z);\n        float thy = fbm(ac);\n        bool is =thy>i&&thy<i+0.1;\n        \n        \n       // ref = i;\n        if((pos.w==1.0)&&(length(pos.xyz)<length(pass.xyz))&&(is)){y=vec3(1.0);pass=pos.xyz;b=i;ye = ac;}\n    }\n    vec3 post = vec3(pass.x,fbm(ye),pass.z);\n    vec3 aa = vec3(pass.x+0.1,fbm(ye+vec3(0.1,0.0,0.0)),pass.z);\n    vec3 ab = vec3(pass.x,fbm(ye+vec3(0.0,0.0,0.1)),pass.z+0.1);\n    vec3 norma = (normalize(cross(post-aa , post-ab)));\n    float res = pow(max(dot(reflect(ray,norma),vec3(0.0,1.0,0.0)),0.0),100.0);\n    float ref = dot(norma,vec3(0.0,-1.0,0.0));\n    fragColor = vec4(y*ref+res,1.0)*vec4(0.6,0.5,0.8,1.0);//texture(iChannel0,pass.xz);\n    \n}","name":"Image","description":"","type":"image"}]}