{"ver":"0.1","info":{"id":"ltjSDd","date":"1447497369","viewed":556,"name":"Smooth Lines","username":"snolot","description":"Try to get lines with smooth edges","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["lines","aa","smooth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"mat2 rotate(vec2 p, float theta){\n\treturn mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    float Frequency = 16.;\n    float V = 3.;\n    \n\tvec2 uv = -1.+ 2. *(fragCoord.xy / iResolution.xy);\n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv *= rotate(uv, iTime*.1);\n    float sawtooth \t= fract(uv.y * Frequency);\n    float triangle \t= abs(2.0 * sawtooth - 1.0);\n    float dp \t\t= length(vec2(dFdx(uv.x), dFdy(uv.y)));\n    float edge \t\t= dp * Frequency * 2.0;\n    float square \t= smoothstep(0.5 - edge, 0.5 + edge, triangle);\n    \n\tfragColor \t\t= vec4(vec3(square),1.0);\n}","name":"","description":"","type":"image"}]}