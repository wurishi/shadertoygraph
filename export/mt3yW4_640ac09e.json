{"ver":"0.1","info":{"id":"mt3yW4","date":"1699196804","viewed":57,"name":"Fleeting circles","username":"Jare","description":"Trying to do something tiled and relaxing for codevember'23.\nI've never seen it make a circle anywhere, may be some property of the numbers used.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","tiled"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// I have no idea what I'm trying to do but something tiled\n// For codevember'23\n// by Jare (https://github.com/TheJare/)\n\nfloat pow2(float a) { return a*a; }\nfloat scurve(float t) { return t * t * (3.0f - 2.0f * t); }\n\n#define BAND_POWER 63.0  // lower values make it thicker, e.g. 13 is neat\n#define COLORS vec4(0,0,0,0) // other vectors can look nice\n//#define COLORS vec4(fuv.x-center.x, -fuv.x+center.x-fuv.y+center.y, fuv.y-center.y,0)*1.2\n\n// Throw some primes and get some bits to select one pseudorandom, animated, deterministic\n// corner (0 or 1, 0 or 1) in each tile\nint  vr(vec2 v, int t) { return int(v.x*5507.f) + int(v.y*6967.f) + t*7789; }\nvec2 cr(int a) { return vec2(ivec2((a & 2048) != 0, (a & 16384) != 0)); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float dim = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord/dim*8.f;\n\n    // Tile space and time\n    vec2 fuv = fract(uv);\n    vec2 cuv = floor(uv);\n    int gt = int(floor(iTime/2.f));\n    float ft = min(fract(iTime/2.f)*2.f, 1.f);\n    \n    // an animated center point moves between the corners over time\n    vec2 c0 = cr(vr(cuv, gt));\n    vec2 c1 = cr(vr(cuv, gt+1));\n    vec2 center = mix(c0, c1, scurve(ft));\n    // render a circle around that center\n    float d = distance(center, fuv);\n    float f = pow(sin(d*3.141592), BAND_POWER)*2.0;\n\n    fragColor = COLORS + vec4(f,f,f,1);\n}","name":"Image","description":"","type":"image"}]}