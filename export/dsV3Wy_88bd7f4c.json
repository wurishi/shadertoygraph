{"ver":"0.1","info":{"id":"dsV3Wy","date":"1679022887","viewed":88,"name":"Norb","username":"omx3gen","description":"Its a norb. Duh.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","orb","relax"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float time = iTime * 0.2;\n    \n    float t = pow(time, 0.5);\n    float p = pow(10.0, fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453));\n    \n    vec3 color = vec3(\n        0.3 + 0.3 * cos(2.0 + t + p),\n        0.3 + 0.3 * cos(1.0 + t + p),\n        0.3 + 0.3 * cos(0.5 + t + p)\n    );\n    \n    vec2 coord = uv * 0.5;\n    coord *= 2.2;\n    float r = length(coord);\n    float angle = atan(coord.y, coord.x);\n    float orbit = sin(r * 2.0 - time * 3.0) * 0.3 + 0.3;\n    float dist = pow(1.0 - r, 2.0);\n    dist = pow(dist, 10.0) * orbit;\n    \n    vec2 shape = vec2(cos(angle) * dist, sin(angle) * dist);\n    vec3 shapeColor = vec3(\n        0.5 + 0.5 * sin(shape.x + time * 2.0),\n        0.5 + 0.5 * sin(shape.y + time * 2.0),\n        0.5 + 0.5 * cos(shape.x * shape.y + time * 2.0)\n    );\n    \n    vec3 finalColor = mix(color, shapeColor, .2);\n    \n    finalColor = mix(finalColor, vec3(1.0, 1.0, 1.0), pow(r, 8.0));\n    \n    vec3 backgroundColor = vec3(0.0); // Set the background color to black\n    \n    // Use a smoothstep function to create a gradient effect that fades into the background\n    float smoothstepValue = smoothstep(1.0, 1.02, r);\n    finalColor = mix(finalColor, backgroundColor, smoothstepValue);\n    \n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}