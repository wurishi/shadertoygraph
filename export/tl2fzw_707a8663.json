{"ver":"0.1","info":{"id":"tl2fzw","date":"1598607509","viewed":211,"name":"Battle stage","username":"gaz","description":"ftactal","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define hash(n) fract(sin(n*234.567+123.34))\n\nfloat Scale;\nfloat g=.0;\nfloat map(vec3 p){\n    float de=10.;\n    p.z-=iTime*1.5;\n    float seed=dot(floor((p.xz+4.)/8.),vec2(123.12,234.56));   \n    p.xz=mod(p.xz-4.,8.)-4.;\n    p=abs(p)-2.;\n    if(p.x<p.z)p.xz=p.zx;\n\tif(p.y<p.z)p.yz=p.zy;\n \tif(p.x<p.y)p.xy=p.yx;\n\tfloat scale=-5.+hash(seed)*.5;\n\tfloat mr2=.45+hash(seed+123.)*.05;\n\tfloat off=1.3+hash(seed+456.)*.1;\n\tfloat s=3.;\n\tvec3  p0 = p;\n\tfor (int i=0; i<9; i++){\n    \tp=1.-abs(p-1.);\n    \tfloat k=clamp(mr2*max(1.2/dot(p,p),1.),0.,1.);\n    \tp=p*scale*k+p0*off;\n        s=s*abs(scale)*k+off;\n        if(i==2){\n            float d=length(hash(seed+147.)<.5?p.xz:p.xy)/s-.001;\n            g += 1./max(1e-4,d*d*7e5); // Distance glow by balkhan\n        }\n\t}\n    Scale=log2(s);\n\treturn length(hash(seed+147.)>.5?p.xz:p.xy)/s-.001;\n}\n\nvec3 calcNormal(vec3 pos){\n  vec2 e = vec2(1,-1) * 0.002;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)\n  );\n}\n\nfloat march(vec3 ro, vec3 rd, float near, float far)\n{\n    float t=near,d;\n    for(int i=0;i<80;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if (d<0.001) return t;\n        if (t>=far) return far;\n    }\n    return far;\n}\n\nfloat calcShadow(vec3 light, vec3 ld, float len){\n\tfloat depth = march(light,ld,0.0,len);\t\n\treturn step(len - depth, 0.01);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord* 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(sin(iTime*.3+.3*sin(iTime*.2)),7,8);\n    vec3 ta = vec3(0,0,0);\n    vec3 w = normalize(ta-ro);\n    vec3 u = normalize(cross(w,normalize(vec3(0.3*sin(iTime*.1),1,0))));\n    vec3 rd = mat3(u,cross(u,w),w)*normalize(vec3(uv,2));\n    vec3 bg = vec3(0.03,0.03,0.08);\n    vec3 col = bg;\n\tconst float maxd = 80.0;\n    float t = march(ro,rd,0.0,maxd);\n    if(t<maxd)\n    {\n        vec3 p=ro+rd*t;\n        col=cos(vec3(1,3,6)+Scale*50.)*0.5+0.5;\n        col*=1.8;\n        vec3 n = calcNormal(p);      \n\t\tvec3 lightPos=vec3(20);\n    \tvec3 li = lightPos - p;\n\t\tfloat len = length( li );\n\t\tli /= len;\n\t\tfloat dif = clamp(dot(n, li), 0.5, 1.0);\n        float sha = calcShadow( lightPos, -li, len );\n        col *= max(sha*dif, 0.4);\n        float rimd = pow(clamp(1.0 - dot(reflect(-li, n), -rd), 0.0, 1.0), 2.5);\n\t\tfloat frn = rimd+2.2*(1.0-rimd);\n    \tcol *= frn*0.9;\n        col *= max(0.5+0.5*n.y, 0.0);\n        col *= exp2(-2.*pow(max(0.0, 1.0-map(p+n*0.3)/0.3),2.0));\n        col += vec3(0.5,0.4,0.9)*pow(clamp(dot(reflect(rd, n), li), 0.0, 1.0), 50.0);\n        col += vec3(0.7,0.3,0.1)*g*(1.5);\n        col = mix(bg,col,exp(-t*t*.002));\n        col = clamp(col,0.,1.);\n        \n    }\n    fragColor.xyz = col;\n}","name":"Image","description":"","type":"image"}]}