{"ver":"0.1","info":{"id":"WtjGRc","date":"1560537760","viewed":3899,"name":"Paper scroll","username":"Ping2_0","description":"Made with paper, scissors and a little thread.\nSoundcloud music : Jamal Green - Equilinox game music","likes":131,"published":1,"flags":64,"usePreview":1,"tags":["2d","paper","cutting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4ll3zj","filepath":"https://soundcloud.com/jamalgreenmusic/wonderful-waltz?in=jamalgreenmusic/sets/equilinox-full-soundtrack","previewfilepath":"https://soundcloud.com/jamalgreenmusic/wonderful-waltz?in=jamalgreenmusic/sets/equilinox-full-soundtrack","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n * Ping 2.0 14/06/2019\n * \n * TODO : \tCloud rocking\n**/\nconst vec3 c0 = vec3(.042,0.530,0.159);\nconst vec3 c1 = vec3(.142,0.630,0.259);\nconst vec3 c2 = vec3(0.242,0.730, 0.359);\nconst vec3 c3 = vec3(0.342,0.830,0.459);\nconst vec3 c4 = vec3(0.442,0.930,0.559);\n\nconst vec3 c5 =vec3(1);\nconst vec3 c6 = vec3(0.95, 0.95 ,1.0);\nconst vec3 c7 = vec3(0.9, 0.9,1.0);\n//const vec3 c8 = vec3(0.85, 0.85 ,1.0);\n//const vec3 c9 = vec3(0.8,0.85, 0.95);\n\n// min dist 2 circles (or ellipsis)\n#define GRND1 min(length(fract(op)*vec2(1, 3) - vec2(0.5,0.18)) - 0.3,     length(fract(op+vec2(0.5, 0))*vec2(1, 2) - vec2(0.5,0.09)) - 0.35)\n#define GRND2 min(length(fract(op)*vec2(1.2, 2.5) - vec2(0.5,0.45)) - 0.4, length(fract(op+vec2(0.65, 0))*vec2(1, 1.4) - vec2(0.5,0.25)) - 0.35)\n#define GRND3 min(length(fract(op)-vec2(0.5,0.3))-0.35, length(fract(op+vec2(0.5, 0))-vec2(0.5,0.25))-0.3)\n#define GRND4 min(length(fract(op)-vec2(0.5,0.1))-0.3, length(fract(op+vec2(0.5, 0))-vec2(0.5,0.1))-0.4)\n#define GRND5 min(length(fract(op)-vec2(0.5,0.2))-0.5, length(fract(op+vec2(0.5, 0))-vec2(0.5,0.2))-0.5)\n\n#define txc(c, n, f) c*n + (1.0125-n)*texture(iChannel0, op*f).r\n\nvec3 ground(in vec2 u, in vec3 c, in float shadow_pos)\n{\n\tif(u.y<0.4)\n\t{\n\t\tconst float b = 0.005; //blur\n\t\tvec2 op = u*2.0;\n\t\top.x += iTime*0.05;\n\t\tc=mix(c, txc(c0, 0.98, vec2(2.5,2.5)), smoothstep(b*5.0, -b*5.0, GRND5));\n\n\t\top = vec2(u.x*3.0 + iTime*0.1 - shadow_pos, u.y*3.0-0.5);\n\t\tc=mix(c, c*0.75, smoothstep(b*30.0, -b*30.0, GRND4));\n\t\top.x += shadow_pos;\n\t\tc=mix(c, txc(c1, 0.98, vec2(1.33,1.33)), smoothstep(b*3.0, -b*3.0, GRND4));\n\n\t\top = vec2(u.x*4.0 + iTime*0.2 - shadow_pos, u.y*3.0-0.2);\n\t\tc=mix(c, c*0.9, smoothstep(b*10.0, -b*10.0, GRND3));\n\t\top.x += shadow_pos;\n\t\tc=mix(c, txc(c2, 0.98, vec2(0.75, 1.0)), smoothstep(b*0.5, -b*0.5, GRND3));\n\t\t\n\t\top = vec2(u.x*5.0 + iTime*0.4 - shadow_pos, u.y*2.0);\n\t\tc=mix(c, c*0.82, smoothstep(b*20.0, -b*20.0, GRND2));\n\t\top.x += shadow_pos;\n\t\tc=mix(c, txc(c3, 0.98, vec2(0.4,1.0)), smoothstep(b*3.0, -b*3.0, GRND2));\n\t\t\n\t\top = vec2(u.x*8.0 + iTime -shadow_pos, u.y*2.0+0.02);\n\t\tc=mix(c, c*0.75, smoothstep(b*30.0, -b*30.0, GRND1));\n\t\top += vec2(shadow_pos, -0.02);\n        c=mix(c, txc(c4, 0.96, vec2(0.5, 1.0)), smoothstep(b*5.0, -b*5.0, GRND1));\t\t\n\t}\t\n\treturn c;\n}\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdLine( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvec3 cloud(in vec2 u, in vec2 p, in float iscale,in vec3 c, const in vec3 cloud_color, in vec2 shadow_pos, in float shadow_factor, in float blur, in float shadow_blur)\n{\n\tu *= iscale;\n\tp *= iscale;\n    \n    // thread shadow\n\tc=mix(c, c*.95, smoothstep(shadow_blur*0.2, -shadow_blur*0.2, sdLine(u, p+vec2(shadow_pos.x,0.07), vec2(p.x + shadow_pos.x, iscale))));\n    \n    // cloud shadow\n\tvec2 st = u - p -shadow_pos ;\n\tfloat d = length(st) - 0.07;\n\td = min(d, length((st  -vec2(0.06, 0))) - 0.055);\n\td = min(d, length((st  +vec2(0.06, 0))) - 0.055);\n\tc=mix(c, c*shadow_factor, smoothstep(shadow_blur, -shadow_blur, d));\n\t\n    // cloud\n\tst += shadow_pos;\n\td = length(st) - 0.07;\n\td = min(d, length((st  -vec2(0.06, 0))) - 0.055);\n\td = min(d, length((st  +vec2(0.06, 0))) - 0.055);\n    vec2 op = st; \n\tc=mix(c, cloud_color*0.98 + (1.0-0.98)*texture(iChannel0, st*2.5).r, smoothstep(blur, -blur, d));\n\t\n    // thread\n\tc=mix(c, cloud_color*0.65, smoothstep(blur / (iscale*iscale), -(blur*0.5)/(iscale*iscale), sdLine(u, p + vec2(0,0.065), vec2(p.x, iscale))));\n\treturn c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= 4.0/3.0; // dev in 4/3 screen\n    \n    // beautiful sky\n\tfloat d = length(uv-vec2(0.25,0.5)); // -0.5;\n   \tvec3 c = mix(vec3(.4,0.4,.8), vec3(0.55,0.8,0.8), smoothstep(1.7, 0., d));\n\n    // gorgeous ground\n\tfloat shadow_pos =  - smoothstep(1.0, 0.0, uv.x)*0.06 - 0.1 ;\n\tc = ground(uv, c, shadow_pos);\n\t\n    // wonderful clouds\n\tvec2 np = vec2(1.4-fract((iTime+50.0)*0.005) *1.5 , 0.8);\n\tc = cloud(uv, np, 2.0, c, c7, vec2(shadow_pos, -0.1)*0.2, 0.8,  0.01, 0.03);\n\t\n\tnp = vec2(1.4-fract((iTime)*0.0055) *1.5 , 0.75+ sin(iTime*0.1)*0.01); // x : -1 1\n\tc = cloud(uv, np, 2.0, c, c7, vec2(shadow_pos, -0.1)*0.2, 0.8,  0.01, 0.03);\n\n    np = vec2(1.4-fract((iTime + 100.0)*0.0045) *1.5 , 0.8+ sin(0.5+iTime*0.01)*0.02); // x : -1 1\n    c = cloud(uv, np, 2.0, c, c7, vec2(shadow_pos, -0.1)*0.2, 0.8,  0.01, 0.03);\n\n     np = vec2(1.4-fract((iTime + 0.75)*0.0045) *1.5 , 0.88+ sin(0.75+iTime*0.01)*0.03); // x : -1 1\n    c = cloud(uv, np, 2.0, c, c7, vec2(shadow_pos, -0.1)*0.2, 0.8,  0.01, 0.03);\n\n    \n\tnp = vec2(1.41-fract((iTime+75.0)*0.007) *1.5 , 0.88+ sin(iTime*0.05)*0.01); // x : -1 1\n\tc = cloud(uv, np, 1.5, c, c6, vec2(shadow_pos, -0.1)*0.2, 0.8,  0.005, 0.04);\n\n   \tnp = vec2(1.41-fract((iTime+50.0)*0.0071) *1.5 , 0.85+ sin(0.5+iTime*0.042)*0.0095); // x : -1 1\n\tc = cloud(uv, np, 1.5, c, c6, vec2(shadow_pos, -0.1)*0.2, 0.8,  0.005, 0.04);\n\n   \tnp = vec2(1.41-fract((iTime+35.0)*0.0067) *1.5 , 0.82+ sin(0.9+iTime*0.035)*0.012); // x : -1 1\n\tc = cloud(uv, np, 1.5, c, c6, vec2(shadow_pos, -0.1)*0.2, 0.8,  0.005, 0.04);\n\n    \n\tnp = vec2(1.50-fract(iTime*0.011) *1.75 , 0.85 + sin(iTime*0.2)*0.025); // x : -1 1\n\tc = cloud(uv , np, 1.0, c, c5, vec2(shadow_pos, -0.1)*0.2, 0.8,  0.002, 0.04);\n\n   \tnp = vec2(1.50-fract((iTime+50.0)*0.01) *1.75 , 0.85 + sin(1.5+iTime*0.08)*0.0125); // x : -1 1\n\tc = cloud(uv , np, 1.0, c, c5, vec2(shadow_pos, -0.1)*0.2, 0.8,  0.002, 0.04);\n\n   \tnp = vec2(1.50-fract((iTime+35.0)*0.009) *1.75 , 0.8 + sin(0.5+iTime*0.05)*0.025); // x : -1 1\n\tc = cloud(uv , np, 1.0, c, c5, vec2(shadow_pos, -0.1)*0.2, 0.8,  0.002, 0.04);\n\n    \n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}