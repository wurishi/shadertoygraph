{"ver":"0.1","info":{"id":"4fd3Rl","date":"1712021905","viewed":33,"name":"box grid","username":"Cloudy","description":"amazed i got this done lol","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["hard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 blue = vec4(0.0, 0.0, 1.0, 1.0);\nconst vec4 green = vec4(0.0, 1.0, 0.0, 1.0);\n\nvec4 fromLinear(vec4 linearRGB)\n{\n    bvec4 cutoff = lessThan(linearRGB, vec4(0.0031308));\n    vec4 higher = vec4(1.055) * pow(linearRGB, vec4(1.0 / 2.4)) - vec4(0.055);\n    vec4 lower = linearRGB * vec4(12.92);\n\n    return mix(higher, lower, cutoff);\n}\n\nvec4 toLinear(vec4 sRGB)\n{\n    bvec4 cutoff = lessThan(sRGB, vec4(0.04045));\n    vec4 higher = pow((sRGB + vec4(0.055)) / vec4(1.055), vec4(2.4));\n    vec4 lower = sRGB / vec4(12.92);\n\n    return mix(higher, lower, cutoff);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 from = vec2(0.0, 0.0);\n    vec2 to = iResolution.xy;\n    vec2 gradVec = to - from;\n    float value = dot(fragCoord.xy - from, gradVec) / dot(gradVec, gradVec);\n    value = clamp(value, 0.0, 1.0);\n\n    vec4 gradientColor = fromLinear(mix(toLinear(green), toLinear(blue), value)); // Reverse the gradient colors\n    \n    // Drawing lines\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float lineWidth = 0.01; // Adjust line thickness\n    float verticalLineIndex = floor(uv.x * 16.0); // Change 16.0 to control the number of vertical lines\n    float horizontalLineIndex = floor(uv.y * 16.0); // Change 16.0 to control the number of horizontal lines\n    \n    if (abs(uv.x - (verticalLineIndex / 16.0)) < lineWidth || abs(uv.y - (horizontalLineIndex / 16.0)) < lineWidth) {\n        fragColor = gradientColor; // Gradient color for the lines\n    } else {\n        fragColor = vec4(1.0); // White color\n    }\n}\n","name":"Image","description":"","type":"image"}]}