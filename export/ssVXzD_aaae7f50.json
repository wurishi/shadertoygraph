{"ver":"0.1","info":{"id":"ssVXzD","date":"1634369385","viewed":369,"name":"RimLight","username":"zhengxiangkui","description":"rim light","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MarchLength 255.\n#define MaxDepth 100.\nfloat getDist(vec3 pos) {\n    return length(pos) - 1.;\n}\n\nvec3 getNormal(vec3 pos) {\n    float d = getDist(pos);\n    vec2 e = vec2(.001, 0);\n    \n    vec3 n = d - vec3(\n        getDist(pos-e.xyy),\n        getDist(pos-e.yxy),\n        getDist(pos-e.yyx));\n    \n    return normalize(n);\n}\n\nfloat rayMarch(vec3 origin, vec3 dir) {\n    vec3 pos = origin;\n    float depth = 0.;\n    for(float i = 0.; i <= MarchLength; i++) {\n        float dis = getDist(pos);\n        depth += dis;\n        if(dis <= .01 || depth > MaxDepth) {\n            break;\n        }\n        pos = pos + dis * dir;\n    }\n    return depth;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2. -1.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 camPos = vec3(0, 0, 3);\n    vec3 rayDir = vec3(uv, -1.);\n    float dis = rayMarch(camPos, normalize(rayDir));\n    vec3 lightPos = vec3(0, 5, 13);\n    if(dis < MaxDepth) {\n        vec3 pos = camPos + rayDir * dis;\n        vec3 viewDir = normalize(camPos - pos);\n        vec3 lightDir = normalize(lightPos);\n        vec3 normal = getNormal(pos);\n        float diffuseF = clamp(dot(lightDir, normal), 0., 1.0);\n        float rimF = pow(1. - clamp(dot(viewDir, normal), 0., 1.), clamp(sin(iTime * 10.) * 10., 1., 10.));\n        fragColor = vec4(diffuseF) +  smoothstep(vec4(1.000,0.000,0.882,0.), vec4(1.000,1.000,1.000,1), vec4(rimF));\n        return;\n    }\n    // Background\n    fragColor = vec4(0.);\n}","name":"Image","description":"","type":"image"}]}