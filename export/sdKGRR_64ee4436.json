{"ver":"0.1","info":{"id":"sdKGRR","date":"1631241480","viewed":70,"name":"twisty star rose (const colors)","username":"HaleyHalcyon","description":"a","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"wsBBz3","parentname":"twisty star rose"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265;\nconst float PI_2 = PI / 2.;\n\nfloat fold(float x) {\n    return abs(mod(x, 2.0) - 1.0);\n}\n\nfloat foldPlus(float x) {\n    return log(0.5 + fold(x));\n}\n\nfloat smoothThres(float x, float strength) {\n    return smoothstep(0.5 - strength, 0.5 + strength, x);\n}\n\nfloat smoothFold(float x, float strength) {\n    return smoothThres(fold(x), strength);\n}\n\nvec3 colMap(float x, vec3 a, vec3 b) {\n    return a * (1.0 - x) + b * x;\n}\n\nfloat star(float angle, float d, float roundness) {\n    return foldPlus(angle * 10.) + d * roundness;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime / 8.);\n    \n    // Normalized pixel coordinates\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n\tuv -= iResolution.xy / scale / 2.;\n    uv *= 2.;\n    float dist = log(uv.x*uv.x+uv.y*uv.y); // not real distance, but useful for log spirals\n    float angle = t - atan(uv.x, -uv.y) / PI / 2.;\n    float angleLayer = t / 5.;\n    float offsetLayer = t * 3.;\n    float spaceLayer = 0.5;\n    vec3 colA = vec3(1.0, 0.0, 0.6);\n    vec3 colB = vec3(0.1, 0.5, 1.0);\n    vec3 colC = vec3(1.0, 0.8, 0.0);\n    vec3 col = vec3(fold(t * 16.));\n    \n    if (dist >= -8.) {\n        for (float iRing = 0.; iRing < 25.; iRing += 1.) {\n            if (star(angle - (iRing * angleLayer), dist, 1.1) < spaceLayer * (iRing - offsetLayer) - 7.){\n                switch (int(iRing) % 3) {\n                    case 0:\n                        col = colA;\n                        break;\n                    case 1:\n                        col = colB;\n                        break;\n                    case 2:\n                        col = colC;\n                }\n                break;\n            }\n        }\n    }\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}