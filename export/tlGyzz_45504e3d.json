{"ver":"0.1","info":{"id":"tlGyzz","date":"1610326585","viewed":133,"name":"Pastel Dream Triangle","username":"Reynolds","description":"playing around with buffers","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["triangle","buffer","pastel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = texture(iChannel0, uv);\n\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 colA = texture(iChannel0, uv);\n    \n    float s = 0.0025;\n    vec4 col1 = texture(iChannel1, uv);\n    vec4 col2 = texture(iChannel1, uv + vec2(s, 0.0));\n    vec4 col3 = texture(iChannel1, uv + vec2(0.0, s));\n    vec4 col4 = texture(iChannel1, uv + vec2(-s, 0.0));\n    vec4 col5 = texture(iChannel1, uv + vec2(0.0, -s));\n    \n    fragColor = mix(colA, 0.25*(col2 + col3 + col4 + col5), colA.w);\n    \n    //fragColor.w = max(1.0, fragColor.w - 0.005);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"            \n vec3[5] Ds = vec3[5](vec3(153.0, 138.0, 211.0)/255.0,\n vec3(228.0, 148.0, 211.0)/255.0,\n vec3(205.0, 241.0, 175.0)/255.0,\n vec3(135.0, 220.0, 195.0)/255.0,\n vec3(136.0, 187.0, 228.0)/255.0);\n\n\nvec4 sdSegment(vec2 p, vec2 a, vec2 b, int i)\n{\n    vec2 pa = p-a, ba = b-a;\n    float A = dot(pa,ba)/dot(ba,ba);\n    float h = clamp( A, 0.0, 1.0 );\n    \n    vec3 coords;\n    float tt = fract(iTime/2.0);\n    int q = int(floor(iTime/2.0));\n    int r = q + 1;\n    \n    coords = mix(Ds[(i + q) % 5], Ds[(i + r) % 5], tt);\n    float B = dot(pa, normalize(ba)) / length(ba);\n    if(B < 0.05 || B > 0.95 || mod(tt,0.5) > 0.45) {\n        coords = vec3(0.0);\n    }\n    return vec4(length( pa - ba*h), coords);\n}\n\nvec4 minA(vec4 d, vec4 e) {\n    float a = float(d.x < e.x);\n    return vec4(min(d.x, e.x), mix(d.yzw, e.yzw, 1.0-a));\n}\n\nvec4 sdScene(vec2 p) {\n    vec2 M = vec2(0.5) + 0.375*vec2(cos(iTime*0.5), sin(iTime*0.7));\n    float spinTime = iTime *0.3;\n    vec2 A = M + 0.125*vec2(cos(spinTime), sin(spinTime));\n    vec2 B = M + 0.125*vec2(cos(spinTime + 1.0/3.0*6.28), sin(spinTime + 1.0/3.0*6.28));\n    vec2 C = M + 0.125*vec2(cos(spinTime + 2.0/3.0*6.28), sin(spinTime + 2.0/3.0*6.28));\n\n    vec4 d = sdSegment(p, A, B, 0);\n    d = minA(d, sdSegment(p, B, C, 1));\n    d = minA(d, sdSegment(p, C, A, 2));\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,0.0,1.0);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 d = sdScene(uv);\n    if(d.x < 0.01) {\n        fragColor = vec4(d.yzw, 0.0);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}