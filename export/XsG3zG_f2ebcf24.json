{"ver":"0.1","info":{"id":"XsG3zG","date":"1454960859","viewed":275,"name":"Wavelength Light","username":"TylerGlaiel","description":"wavelength light","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 lightcolor_traditional = vec3(1, 1, 1);\n\nvec3 lightcolor_wave_1 = vec3(1, 1, 0);\nvec3 lightcolor_wave_2 = vec3(0, 1, 1);\nvec3 lightcolor_wave_3 = vec3(1, 0, 1);\n\nvec3 wavelength_light(vec3 color_in, vec3 light_wavelength){\n    float lightamount = dot(color_in, light_wavelength) / (length(light_wavelength));\n    return light_wavelength * lightamount;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 texcolor = texture(iChannel0, uv).rgb;\n    \n    vec3 outcolor = vec3(0,0,0);\n    \n    if(uv.x > .5){ // multiply based light\n        texcolor *= lightcolor_traditional;\n        outcolor = texcolor;\n    \n    \n    } else { // wavelength based light\n        outcolor += wavelength_light(texcolor, lightcolor_wave_1);\n        outcolor += wavelength_light(texcolor, lightcolor_wave_2);\n        outcolor += wavelength_light(texcolor, lightcolor_wave_3);\n        outcolor *= .33;\n    }\n    \n    fragColor = vec4(outcolor, 1);\n}","name":"Image","description":"","type":"image"}]}