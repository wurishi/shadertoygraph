{"ver":"0.1","info":{"id":"cl3yzr","date":"1698808325","viewed":63,"name":"Defender Terrain","username":"iznax","description":"Quick little defend-ish scrolling terrain simulation\n\nNew semi Playable version\nhttps://www.shadertoy.com/view/ml3cRH","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["terrain","arcade","defender"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Spd = .1425;\n\nfloat rand(float z)\n{\n    return fract(abs(sin(z * 6.9898)));\n}\n\nvec3 human(vec2 w, vec3 col)\n{\n    float p = rand(iTime*Spd*.925+w.x);\n    float dy = w.y - .1;\n    if (dy > 0. && dy < .07 && p > .998)\n    {\n        if (dy < .03 && p > .9998) return vec3(1.,.6,.3);\n        if (dy < .02) return vec3(0); // non-leg\n        if (dy > .05) return p > .9991 ? vec3(.2,1,0) : vec3(0);\n        return vec3(.9,.3,.8); // body\n    }\n    return col;\n}\n\nvec3 stars(vec2 w, vec3 col)\n{\n    if (w.y > .3)\n    {\n        float y = w.y * 50.;\n        if (sin(y) > .9 && sin(iTime*.5 + w.x*2. + w.y*43100.) > .9999995) return vec3(1);\n    }\n    return col;\n}\n\nvec3 ship(vec2 w, vec2 pos, vec3 col)\n{\n    float g = .9 + sin(iTime*95.)*.1;\n    vec3 RGB = vec3(1,g,g);\n    if (length((w-pos)*vec2(1,2.)) < .03) return RGB;\n    if (length((w-pos+vec2(.018,-.0135))*vec2(1.75,1)) < .02) return RGB;\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    col = col * pow(uv.y,4.);\n\n    float scale = 64.;\n    float a = iTime + uv.x*7.;\n    float elev = sin(a+cos(a)*1.205-sin(a*4.)*cos(a))*.1+.2+sin(a*17.)*.01;\n    float uy = floor(uv.y*scale)/scale;\n    if (abs(uy-elev) < .007)\n    {\n        col = vec3(1.,.4,0);\n    }\n\n    vec2 pos = vec2(.5+sin(iTime)*.1,.5+sin(iTime*.3)*.15);\n    col = ship(uv,pos,col);\n    col = stars(uv,human(uv,col));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}