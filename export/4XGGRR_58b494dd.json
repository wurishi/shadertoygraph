{"ver":"0.1","info":{"id":"4XGGRR","date":"1717165175","viewed":122,"name":"hypnotized","username":"jzimm","description":"simple stuff","likes":5,"published":3,"flags":4,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 tripspace(vec2 uv)\n{\n    vec2 trpuv = uv;\n    float osc = sin(iTime / 5.);\n    float fractals = (50. + osc * 25.);\n    return (trpuv + sin(trpuv * fractals) * 0.25); \n}\n\nvec3 mktrippycol(vec2 uv)\n{\n    float rad = length(tripspace(uv)) * 1.9;\n    vec3 outercol = 0.5 + 0.5 * cos(iTime * 1.2 - rad + vec3(0,2,4));\n    vec3 innercol = 0.5 + 0.5 * cos(iTime * 2.0 + rad + vec3(0,2,4));\n    float colorflip = smoothstep(0., 1., abs(1.2 - rad) / 0.5);\n    return mix(innercol, outercol, colorflip);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 aspect = vec2(iResolution.x / iResolution.y, 1.);\n    vec2 xy = fragCoord/iResolution.xy;\n    vec2 uv = (xy * 2. - 1.) * aspect;\n    \n    vec2 fft = textureLod(iChannel0, xy, 0.0 ).xx;\n    \n    uv -= 0.2;\n\n    \n    fragColor = vec4(mktrippycol(uv + fft), 1.0);\n}","name":"Image","description":"","type":"image"}]}