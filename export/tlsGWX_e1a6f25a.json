{"ver":"0.1","info":{"id":"tlsGWX","date":"1557935617","viewed":78,"name":"shader test001","username":"yexuaiann","description":"shader test","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 DrawCircle(in vec2 xy,in vec2 _uv)\n{\n    vec2 uv = _uv/iResolution.xy;\n    uv=abs(uv-xy)*vec2(iResolution.x/iResolution.y,1);\n    float circle=1.0-pow((length(uv)*15.0),0.5);\n    float r=circle*abs(fract(circle+iTime)-0.5);\n    float g=circle*abs(fract(circle-0.333+iTime)-0.5);\n    float b=circle*abs(fract(circle-0.666+iTime)-0.5);\n    \n    return vec3(r,g,b)*5.0+vec3(pow(circle*1.5,5.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   // vec2 myMouse=iMouse.xy/iResolution.xy;\n    \n   // if(myMouse.x+myMouse.y<0.01)\n      //  myMouse=vec2(0.5);\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n   // vec3 color=texture(iChannel0,uv).xyz;\n    //vec3 col=DrawCircle(myMouse,fragCoord);\n     \n\n    // Output to screen\n   // fragColor = vec4(col,1.0);\n    \n    //fragColor = texture(iChannel0,uv)+vec4(col,0.0);\n    fragColor = texture(iChannel0,uv);\n    \n    \n    \n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float f =1.0;\nfloat num=0.0;\nfloat checker=0.0;\nvec3 col;\nvec4 BA=vec4(.0,.0,.0,.0);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 myMouse=iMouse.xy/iResolution.xy;\n    \n\n     BA=texture(iChannel0,uv);\n    \n/*\n    if (iMouse.z>0.0 && length(myMouse-BA.xy)>0.1)\n    {\n    \tnum=fract(BA.w+0.1);\n    \n    \n        float checkerCount=10.0;\n        float checkerOffset=1.0/checkerCount;\n        float ff=num*10.0*checkerOffset;\n        //num=BA.b+0.1;\n\n        checker = ff<uv.x && uv.x<ff+checkerOffset ? 1.0:0.0 ;\n       // vec3 col=vec3(checker)*vec3(myMouse.x,myMouse.y,num);\n       // vec3 col=vec3(checker,checker,num);\n\n         col=vec3(myMouse.x,myMouse.y,1.0)*checker+BA.rgb;\n\t}\n    */\n    /*\n    if(length(myMouse-BA.xy)>0.01)\n    {\n       num=fract(BA.w+0.1);\n       float checkerCount=10.0;\n       float checkerOffset=1.0/checkerCount;\n       float ff=num*10.0*checkerOffset;\n       //num=BA.b+0.1;\n       checker = ff<uv.x && uv.x<ff+checkerOffset ? 1.0:0.0 ;\n        \n       col=vec3(myMouse.x,myMouse.y,0.0)*checker; \n    }\n    else\n    {\n        col=BA.rgb; \n    }\n*/\n    \tvec4 _mouseBA=texture(iChannel0,vec2(BA.w,0.1));\n    \tnum=BA.w;\n       float checkerCount=10.0;\n       float checkerOffset=1.0/checkerCount;\n       float ff=num*10.0*checkerOffset;\n    \t\n       //num=BA.b+0.01;\n       checker = ff<uv.x && uv.x<ff+checkerOffset ? 1.0:0.0 ;\n\t if(iMouse.z > 0.0 && length(_mouseBA.xy-myMouse)>0.1)\n    {\n        num=fract(BA.w+0.1);\n      BA.rgb = mix(BA.rgb,vec3(myMouse.x,myMouse.y,0.0),checker);\n    }\n    // Output to screen\n    fragColor = vec4(BA.rgb,num);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}