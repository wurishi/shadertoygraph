{"ver":"0.1","info":{"id":"DdBSDm","date":"1670363620","viewed":112,"name":"Simple mandelbrot 03","username":"fpiaggio","description":"First mandelbrot animated with colours","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float MAX = 128.0;\nvec3 hash(float m){\n    float x = fract(sin(m) * 5625.246);\n    float y = fract(sin(m+x) * 2216.486);\n    float z = fract(sin(x+y) * 8276.352);\n    return vec3(x,y,z);\n}\nfloat drawMandelbrot(vec2 uv){\n    vec2 c = 2.0 * uv - vec2(0.0, 0.0);\n    c = c / pow(mod(iTime*0.3, 6.), 5.6) - vec2(0.65, 0.45);\n    vec2 z = vec2(0.0);\n    float iter = 0.0;\n    \n    for(float i; i < MAX; i++){\n        z = vec2(z.x * z.x - z.y * z.y,\n                 2.0 * z.x * z.y) + c;\n        if(dot(z,z) > 5.0) return iter / MAX;\n        iter++;\n    }\n    \n    return 1.;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord -.5*iResolution.xy )/iResolution.y;\n    vec3 col = vec3(0.0);\n    \n    float m = drawMandelbrot(uv);\n    \n    col = pow(col, vec3(.25));\n    col += hash(m);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}