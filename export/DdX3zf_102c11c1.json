{"ver":"0.1","info":{"id":"DdX3zf","date":"1666522097","viewed":264,"name":"Simple Neon Light","username":"pizzahollandaise","description":"A simple shader simulating a neon light like in Apple's iPhone 13 Pro Wallpaper","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["2d","light","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Convert to uv\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Start and ending points of the neon light\n    vec2 a = vec2(0.2, 0.4) + sin(iTime) * vec2(0.2, 0.4);\n    vec2 b = vec2(0.7, 0.6) + sin(iTime) * vec2(0.1, -0.2);\n    \n    // Calculates the angle around the current pixel that is illuminated by the neon light \n    float light = acos(dot(normalize(a - uv), normalize(b - uv))) / PI;\n\n    // Output to screen with gamma correction\n    vec3 col = pow(light, 0.7) * vec3(1, 1, 1);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}