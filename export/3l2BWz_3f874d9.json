{"ver":"0.1","info":{"id":"3l2BWz","date":"1598684267","viewed":147,"name":"Red Julia","username":"DaleyPaley","description":"Yet another Julia fractal.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 2\n\n#define product(a,b) vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x)\n#define divide(a,b) vec2(((a.x*b.x+a.y*b.y)/(b.x*b.x+b.y*b.y)),((a.y*b.x-a.x*b.y)/(b.x*b.x+b.y*b.y)))\n\nvec2 calcDist(vec2 Z0,vec2 C)\n{\n\tvec2 dC = vec2(1,0);\n    vec2 Z = Z0;\n\tvec2 dZ = dC;\n    float dotZ = 0.0;\n    int i=0;\n    for(; i<256; ++i)\n    {\n        dZ = product(Z,dZ)*2.0 + dC;\n        Z = product(Z,Z) + C;\n        dotZ = dot(Z,Z);\n        if(dotZ>1024.0) break;\n    }\n\n    if(i>=256) return vec2(-1.0,0);\n\n\tvec2 u = normalize(divide(Z,dZ));\n\tvec2 v = normalize(vec2(4,1));\n\tfloat h2 = 5.0;\n\tfloat diff = clamp((dot(u,v)+h2) / (1.2+h2), 0.0, 1.0);\n\n    float d = float(i) + 1.0 - log(log(length(Z))) / log(2.0);\n    d = 1.0 - d / 600.0;\n    d = pow(d,1.5);\n    return vec2(d,diff);\n}\n\nvec3 colour(float d)\n{\n return pow(vec3(d),vec3(0.5,5.0,5.0));\n//\treturn vec3(pow(smoothstep(0.0,1.0,d),1.5), pow(d,5.0), pow(d,5.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float ang = 5.5;\n    float scl = 0.5;\n    float sa = sin(ang)*scl*2.0, ca = cos(ang)*scl*2.0;\n    float aspect = iResolution.x/iResolution.y;\n    mat2 m = mat2(ca*aspect,sa*aspect,-sa,ca);\n    vec3 col = vec3(0.0);\n    vec2 C = vec2(-0.05+sin(iTime*1.37)*0.01,0.6805+cos(iTime)*0.01);\n    for(int y=0; y<AA; y++)\n    {\n        for(int x=0; x<AA; x++)\n        {\n            vec2 offset = (vec2(x,y)+0.5)/float(AA);\n            vec2 p = (uv + offset/vec2(iResolution.x,iResolution.y))*2.0-1.0;\n            vec2 Z0 = m*p;\n            vec2 d = calcDist(Z0,C);\n            if(d.x>=0.0) col += colour(d.x) * d.y;\n        }\n    }\n    fragColor = vec4(col/float(AA*AA), 1);\n}","name":"Image","description":"","type":"image"}]}