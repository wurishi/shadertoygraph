{"ver":"0.1","info":{"id":"lfBSWd","date":"1706974120","viewed":260,"name":"Shader practice: sins and sStep","username":"TheHarmacist","description":"Shader practice, Cloning shader Discoteq 2 https://www.shadertoy.com/view/DtXfDr","likes":16,"published":3,"flags":0,"usePreview":0,"tags":["practice","sinusoidal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Line(vec2 uv, float speed, float height)\n{\n    float wave = sin(uv.x*height+iTime*(1.5 + speed)) //actual wave\n                 *smoothstep(1., 0., abs(uv.x))*0.45; //amplitude ramp \n    \n    float line = smoothstep(0.1* //creates the line \n                 smoothstep(0., 1., abs(uv.x))+0.016, 0.0015, abs(uv.y+wave))* //modulating thickness\n                 smoothstep(1.1, .5, abs(uv.x)); //value fade\n                 \n    return line; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv*2.0 -1.0;\n    float value= 0.;\n    for(float i = 0.; i<=6.; i+=1.0)\n    {\n        value+= Line(uv, i*0.1, i+4.0)*(1.1-(i*0.15));\n    }\n            \n    vec3 col = vec3(value*mix(vec3(0.6,0.4, 0.45), vec3(0.05, 0.18, 0.6), abs(uv.x)));\n    col+= 0.1;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}