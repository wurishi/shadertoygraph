{"ver":"0.1","info":{"id":"mldGWH","date":"1682380696","viewed":70,"name":"1970","username":"youknowwho","description":"1970","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["1970"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Set up the resolution\n    vec2 resolution = iResolution.xy;\n    vec2 uv = sin(resolution/fragCoord) ;\n\n    // Calculate the time variable\n    float time = iTime*0.3;\n\n    // Set the center\n    vec2 center = vec2(0.25, 0.5*iTime);\n\n    // Calculate the radial angle\n    float angle = atan(uv.y + cos(center.y), uv.x - center.x);\n    float distanceToCenter = length(uv - center);\n    \n    // Calculate the wave pattern\n    float wave = sin(distanceToCenter * 10.0 - time * 10.0);\n    \n    // Set the color channels\n    float r = ((angle * 3.0 - sin(time)) + 1.0) * 0.5;\n    float g = (sin(angle * 5.0 - time) + 1.0) * 0.5;\n    float b = (sin(angle * 9.0 - time) + 1.0) * 0.5;\n    \n    // Combine color channels and wave pattern\n    vec3 color = vec3(r, g, b)* wave  ;\n\n    // Output the final color\n    fragColor = vec4(atan(time-angle), cos(time+angle), angle*sin(time), 0.0)-vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}