{"ver":"0.1","info":{"id":"MdKBWd","date":"1531148024","viewed":226,"name":"complex exponentiation","username":"stduhpf","description":"multibrot extended to complex exponentiation (z1^z2)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["multibrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 toPol(vec2 a){\n return vec2(length(a),atan(a.y,a.x));\n}\nvec2 toAlg(vec2 a){\n return a.x*vec2(cos(a.y),sin(a.y));\n}\n\nvec2 cpow(vec2 a, vec2 b){\n \ta= toPol(a);\n    return toAlg(vec2(pow(a.x,b.x)*exp(-b.y*a.y),b.y*log(a.x)+b.x*a.y));\n}\n\n\n\nvoid mainImage( out vec4 O, vec2 I )\n{\n\tI= 2.*(2.*I- iResolution.xy)/iResolution.x;\n\tvec2 c = I\n        ,z = c;\n    float dmin=(1e6);\n    vec2 p = iMouse.x>0.? 8.*(2.*iMouse.xy- iResolution.xy)/iResolution.x:toAlg(vec2(2,iTime*.5));\n    for(int i =-1;i++<128;)\n    {\n     z=cpow(z,p)+c;\n\t dmin=min(dmin, length(z));\n    }\n\n    O = vec4(dmin);\n}","name":"Image","description":"","type":"image"}]}