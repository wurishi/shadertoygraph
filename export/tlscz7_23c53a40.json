{"ver":"0.1","info":{"id":"tlscz7","date":"1591757246","viewed":309,"name":"inward spikes and slow rotation","username":"HaleyHalcyon","description":"brdb","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["crrhr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smootherstep(float edge0, float edge1, float x) {\n  // Scale, and clamp x to 0..1 range\n  x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n  // Evaluate polynomial\n  return x * x * x * (x * (x * 6. - 15.) + 10.);\n}\n\nfloat softsquare(float x) {\n    float x2 = abs(2. * fract(x) - 1.);\n    return smoothstep(0.1, 0.9, x2);\n}\n\nfloat trapezoid(float x) {\n    x = fract(x);\n    if (x < 0.25) {\n        return 4.0 * x;\n    } else if (x < 0.5) {\n        return 1.;\n    } else if (x < 0.75) {\n        return -4.0 * x + 3.0;\n    } else {\n        return 0.;\n    }\n}\n\nvec3 gradient(float y) {\n    vec3 x = trapezoid(y) * vec3(1.0, 0.0, 0.0)\n           + trapezoid(y - 0.25) * vec3(0.0, 1.0, 1.0);\n    return x;\n}\n\nfloat spikes(float x) {\n    x = 1. - abs(sin(x));\n    return x * x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float time = fract(iTime / 12.);\n    const float PI = 3.14159265;\n    float hue = time * 2. * PI;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = distance(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n\tuv -= vec2(iResolution.x / scale, iResolution.y / scale) / 2.;\n    uv *= 2.0;\n    \n    float dist = log(uv.x*uv.x+uv.y*uv.y + 0.10) * 1.25;\n    float angle = atan(uv.y, uv.x);\n    const float spokes = float(17) / 2.;\n    const float spokes2 = float(55) / 2.;\n    \n    float s1 = spikes(angle * spokes - time * 2. * PI);\n    float s2 = spikes(angle * spokes2 + time * 2. * PI);\n    float und = sin(angle + time * 2. * PI + 0.5 * dist);\n    \n    vec3 color = gradient(\n        dist\n        + (0.3 + 0.1 * sin(2. * time * PI)) * s1\n        + (0.025 * (2. + sin(2. * time * PI + angle))) * s2\n        + 0.15 * und\n    );\n    // Output to screen\n    fragColor = vec4(\n        color,\n        1\n    );\n}","name":"Image","description":"","type":"image"}]}