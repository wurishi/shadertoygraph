{"ver":"0.1","info":{"id":"fsGBD1","date":"1658074336","viewed":212,"name":"LOADING minimal","username":"manu210404","description":"I tried my best to recreate this amazing post on r/loadingicon:\n[url]https://www.reddit.com/r/loadingicon/comments/ets3a9/everything_is_awesome_about_this_loading_animation/[/url]\n","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["loading","arc","loadinganimation"],"hasliked":0,"parentid":"NdKfDR","parentname":"LOADING"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define Q a *= 3.14159;\\\n          vec2 s=vec2(sin(a),cos(a));\n\n\nfloat A( vec2 p, float a) // By iq: https://www.shadertoy.com/view/wl23RK\n{\n    Q\n    p.x = abs(p.x);\n    return ((s.y*p.x>s.x*p.y) ? length(p-s*.7) : \n                                  abs(length(p)-.7)) - .13;\n}\n\nmat2 D( float a ) // rotation matrix\n{\n    Q\n    return mat2( s.y,-s.x,s.x,s.y );\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 r = iResolution.xy, p = (2.*U - r)/r.y;\n    \n    \n    float T = iTime*3., \n          d = A( p*D(1.-.125*floor(T)),.4375 ), // distance to longest arc\n          i;\n    \n    for (i = 0.; i < 1.; i+=.5)\n        d = min( A( p*D(mix( -.5,.625, fract(T/2.+i) ) -.125*T ), .0625), d ); // distance to shorter arcs (\"pellets\")\n\n    O = vec4(smoothstep( .01,.0,d));\n}","name":"Image","description":"","type":"image"}]}