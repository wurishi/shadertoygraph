{"ver":"0.1","info":{"id":"MtBSWy","date":"1446204262","viewed":557,"name":"GlowingStick","username":"schwenk","description":"This demo should realise a very simple GI-Model","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","illumination","glowing","linesegment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const float PI = 3.14159265359;\n\nfloat angle_trunc(float a)\n{\n    for( int i = 0; i < 32; i++)\n    {\n        if( a >= 0.0 )\n            break;\n        else\n        \ta += PI * 2.0;\n    }\n    return a;\n}\n\nvec4 translate(vec2 translation,vec4 lineSeg)\n{\n    return vec4(lineSeg.r-translation.x,lineSeg.g-translation.y,lineSeg.b-translation.x,lineSeg.a-translation.y);\n}\n\nfloat lineSegToBrightness(vec4 lineSeg)\n{\n    float alpha = atan(lineSeg.g,lineSeg.r);\n    float beta =  atan(lineSeg.a,lineSeg.b);\n    \n    float bright = angle_trunc(alpha - beta);\n    if(bright > PI) bright = angle_trunc(beta - alpha);\n   \n    return (bright/PI);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 lineSegment = vec4(0.5,0.5,0.5+0.5*sin(iTime/10.0),0.5+0.5*cos(iTime/10.0));\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float bright = lineSegToBrightness(translate(uv,lineSegment));\n    \n    \n\tfragColor = vec4(bright,bright,bright,1.0);\n}","name":"","description":"","type":"image"}]}