{"ver":"0.1","info":{"id":"mlKSR1","date":"1685947528","viewed":96,"name":"Shader Art Coding intro remix","username":"DENFOR","description":"2023.06.05     kishimisu created","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*   kishimisu created   https://www.shadertoy.com/view/mtyGWy\n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}\n */\n\n////////////////////////////////////////\n//////////////////////////////////////// Remix DENFOR\n\n// cosine based palette, 4 vec3 params\nvec3 palette( float t )\n{\n    vec3 a = vec3(0.728, 0.490, 0.638);\n    vec3 b = vec3(0.295, -0.874, 0.265);\n    vec3 c = vec3(2.719, 0.910, 1.245);\n    vec3 d = vec3(0.495, 0.625, 0.623);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n///////////////////////////////\nfloat SmoothMin (float a, float b, float r)\n{\n  float h = clamp (0.5 + 0.5 * (b - a) / r, 0., 1.);\n  return mix (b, a, h) - r * h * (1. - h);\n}\n////////////////////////////////\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n   vec2 uv0 = sin(uv-0.5*sin(iTime));    // line 14 change\n   vec3 finalColor = vec3(0.0);\n   \n   for(float i = 0.0; i < 5.0; i++) {\n   \n    uv = fract(uv * 1.5) - 0.5;\n                                          // line 20 change\n    float d = length(uv0) * exp(-length(uv /**.02*/));\n\n    vec3 col = palette(length(uv0) + i*.4 + iTime*0.05);\n\n    d = sin(d*6. + iTime * 2.0)/6.;\n    d =/* abs*/(2.*d*d*d-1.5*d-0.15);      // line 25 change\n\n    d -= 0.04975 / d;                     // line 27 change\n  //  d = SmoothMin(0.,0.15, d) ;\n    \n    finalColor += col * d;\n\n   }\n   \n   \n   fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}