{"ver":"0.1","info":{"id":"lc2yWV","date":"1723154683","viewed":45,"name":"Alternative Heart - distance 2D","username":"oramy","description":"Inspired by @iqâ€™s heart shape here : https://www.shadertoy.com/view/3tyBzV\n\nDistance to a curvier heart shape. Correct interior and exterior euclidean distances\n\n\n\nI guess it could be optimized a little bit.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","heart","curvy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Coloring from IQ.\n\nconst float M_SQRT2 = 1.41421356237309504880168872420969808;\nconst float M_SQRT1_2 = 0.707106781186547524400844362104849039;\n\nfloat sdHeart( in vec2 p, float r)\n{\n    p.x = abs(p.x);\n    p.y += r;\n    \n    float r2 = r * M_SQRT2;\n    \n    float s = length(p - vec2(0, r2))\n        * max(sign(p.y - r2),\n              sign(p.y + p.x - r - r2));\n    float t = length(p - vec2(r, r2)) - r;\n    \n    float u = min(s, t);\n    float v = - length(p + vec2(0, r)) * sign(p.y + p.x + r);\n   \n    return max(max(u, v), (p.x - p.y - r) * M_SQRT1_2);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coordinates\n    vec2 p = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n\n    float r = mix(.2, .3,(sin(iTime )+1.)/2.);\n    float d = sdHeart(p, r);\n    \n    // coloring\n    vec3 col = (d>0.0) ? vec3(0.9,0.6,0.3) : vec3(0.65,0.85,1.0);\n    col *= 1.0 - exp(-6.0*abs(d));\n\tcol *= 1.0 + 0.2*cos(128.0*abs(d));\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) );\n\n    if( iMouse.z>0.001 )\n    {\n        d = sdHeart(m, r);\n        col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, abs(length(p-m)-abs(d))-0.0025));\n        col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, length(p-m)-0.015));\n    }\n    \n    // output\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}