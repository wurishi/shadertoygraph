{"ver":"0.1","info":{"id":"mtGSzD","date":"1686088508","viewed":47,"name":"Repeating SD Hearts","username":"f90","description":"My variation on this tutorial: https://www.youtube.com/watch?v=f4s1h2YETNY","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dot2( in vec2 v ) { return dot(v,v); }\n\n// cosine based palette, 4 vec3 params\nvec3 palette( in float t)\n{\n    vec3 a = vec3(0.658, 0.538, 0.688);\n    vec3 b = vec3(-0.001, 0.097, 0.019);\n    vec3 c = vec3(1.725, 3.649, 5.116);\n    vec3 d = vec3(2.05, 2.797, 0.247);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdHeart( in vec2 p )\n{\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n        \n    return sqrt(min(dot2(p-vec2(0.00,1.00)), dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = (fragCoord.xy * 2.0 -iResolution.xy) / iResolution.y;    \n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 2.0; i++)\n    {\n        uv *= 2.;\n        uv = fract(uv);\n        uv -= 0.5;\n\n        uv.y += 0.45;\n        uv0.y += 0.65;\n\n        float d =  sin(sdHeart(uv * 1.4) * 4.5 - iTime) / 4.0;\n        vec3 col = palette(sdHeart(uv0) - (iTime * 0.5)  + ((sin(iTime) * 0.1 + .1)));\n\n\n        d = abs(d);\n\n        d = 0.05 / d; // inverse function to produce glow\n\n        d = pow(d, 1.2);\n\n        finalColor += col * d;\n    \n    }\n    \n    \n    \n    fragColor = vec4(finalColor ,1.0);\n}","name":"Image","description":"","type":"image"}]}