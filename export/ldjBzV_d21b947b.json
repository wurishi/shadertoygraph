{"ver":"0.1","info":{"id":"ldjBzV","date":"1501293642","viewed":173,"name":"3D Cube Objects","username":"dhygns","description":"it's a first attempt in shaderToy.\nthis project is a very simple rayMarching example.\ni hope that it help you understand about rayMarching.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","cube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define STEPDETAIL 0.025\n\nstruct Cam {\n    vec3 pos;\n    vec3 dir;\n};\n\nvec2 aspectRatio(in vec2 st) {\n    return 2.0 * (st - 0.5) * iResolution.xy / max(iResolution.x, iResolution.y);\n}\n\nfloat cube(in vec3 pos, in vec3 spc) {\n    vec3 psc = spc - pos;\n    return \n        smoothstep(-0.28, -0.25, psc.x) *\n        smoothstep( 0.28,  0.25, psc.x) *\n        smoothstep(-0.28, -0.25, psc.y) *\n\t\tsmoothstep( 0.28,  0.25, psc.y) * \n\t\tsmoothstep(-0.18, -0.15, psc.z) * \n\t\tsmoothstep( 0.18,  0.15, psc.z) ;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 st = aspectRatio(uv);\n    \n    \n    //Camera Control\n    Cam camera;\n    camera.pos = vec3(0.0, 0.0, -2.0);\t//set position\n    camera.dir = vec3((st) * 1.1, 1.0); //set direction in this pixel coord.\n \n    //camera rotating\n    float radian = iTime * 0.3;\n   \tcamera.pos.xz *= mat2(cos( radian), sin( radian), -sin( radian), cos( radian));\n    camera.dir.xz *= mat2(cos( radian), sin( radian), -sin( radian), cos( radian));\n    \n    \n    //raycasting by depth \n    float e = 0.0;\n    for(float stepf = 0.0; stepf < 3.0; stepf+= STEPDETAIL){\n        vec3 spc = camera.pos + camera.dir * stepf;\n        \n        e += cube(vec3( 0.0,  0.0,  0.0), spc); // cube1\n        e += cube(vec3( 0.5,  0.0, -1.0), spc); // cube2\n        e += cube(vec3( 1.0,  0.2,  0.0), spc); // cube3\n        e += cube(vec3( 0.2,  0.8,  0.0), spc); // cube4\n        if(e > 1.0) break;\n        \n        \n\n    }\n \n\tfragColor = vec4(e, e, e, 1.0);\n}","name":"Image","description":"","type":"image"}]}