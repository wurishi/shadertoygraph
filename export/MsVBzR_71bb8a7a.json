{"ver":"0.1","info":{"id":"MsVBzR","date":"1527521720","viewed":580,"name":"rain night2","username":"greenbird10","description":"a deep deep dream..","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["noise","rain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//by greenbird10\n#define S(a, b, c) smoothstep(a,b,c)\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n// Value Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/lsf3WH\nfloat noise(vec2 st) {\n\tvec2 i = floor(st);\n\tvec2 f = fract(st);\n\n\tvec2 u = f*f*(3.0-2.0*f);\n\n\treturn mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n\t\t\t\tdot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n\t\t\tmix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n\t\t\t\tdot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat fbm(vec2 n) {\n\tfloat total = 0.0, amplitude = 1.0;\n\tfor (int i = 0; i < 5; i++) \n\t{\n\t\ttotal += noise(n) * amplitude; \n\t\tn += n;\n\t\tamplitude *= 0.5; \n\t}\n\treturn total;\n} \n\nfloat dis(vec2 a){\n\treturn sqrt(a.x * a.x + a.y * a.y);\n}\n\n//raindrop reference https://www.shadertoy.com/view/MdfBRX\n//\"The Drive Home\" by BigWIngs \nvec2 Rain(vec2 uv, float t){    \n    t *= 40.;\n    vec2 a = vec2(10., 4.);\n    vec2 id = floor(uv * a);\n        \n    vec2 st = uv * a;\n    st.y += t*.2;\n    st.y += fract(sin(id.x*123.6)*24.1);\n    id = floor(st);  // correct the id\n    st = fract(st) - 0.5;\n    \n    float size = fract(sin(id.x*113.6+id.y)*214.1)*.01+.005;\n    \n    float xoff = fract(sin(id.x*13.6)*214.1)*0.6 - 0.3;\n    t += fract(sin(id.x*14.35 + id.y*233.1)*2434.1) * 3.14159 * 2.;\n    vec2 p = vec2(xoff,\n                  -sin(t + sin(t + sin(t)*.5))*.4);\n    vec2 o1 = (st-p) / a;\n    float d = length(o1);\n\n    float col = S(size, 0.005 ,d);\n//    if(st.x > 0.46 || st.y > 0.49) col = 1.;\n    \n    a = vec2(10., 8.);\n    vec2 st2 = uv * a;\n    st2 = fract(st2) - 0.5; \n    st2.x -= xoff;\n    vec2 o2 = st2 / a;\n    d = length(o2);\n    float col2 = S(size*(1. - st.y), 0. ,d) * step(0., st.y-p.y);\n    \n\treturn vec2(col*o1*40. + col2*o2*40.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//  vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 st = fragCoord.xy/iResolution.xy;\n\tst -= 0.5;\n\tst.x *= iResolution.x/iResolution.y;\n//\tvec2 uv = st;\n\n\tvec2 _st = st*4. - floor(st*4.);\n    \n    float u_time = iTime;\n\t\n\tfloat _rain =  // noise to make rain trace\n 0.8*noise(vec2(st.x*16.+u_time/16., st.y*11.+u_time/2.))  \n+0.4*noise(vec2(st.x*16. + u_time/1000., st.y*4. + u_time/1.))  //range\n+2.6*noise((vec2(st.x/2.+u_time/4000., st.y/16.+u_time/20.))*20.)\n*noise(st);  \n    st -= sqrt(clamp(_rain, 0.1, 1. )) * .3; //simulate refraction\n\n//\tvec3 rain = vec3(_rain);\n    \n    vec2 randomrain = Rain(st, u_time*.05);  // new st\n\tst -= randomrain;  //off\n\n\n\tfloat t = u_time/5.;\n\tvec3 window = vec3(.05, .05, .15);\n\twindow = mix(window, vec3(.9, .9, 1.), \n\t\t\tS(sin(t)*.2+.5, 0., \n\t\t\tlength(st-vec2(sin(t)*.5, 0.)))\n\t\t\t*.8);  //flashlight\n\n\twindow = mix(window, vec3(1., .1, .1),\n\t\t\tS(.01, .002, length(st+0.3))\n\t\t\t* step(0., sin(t*50.)));  //red light\n\t\t\t\n\tfragColor = vec4(\n//\t\tclamp(rain, 0.1, 1.) * .3\n//\t\trandomdrop*0.5\n\t\twindow\n//\t\tvec3(randomrain.x, randomrain.y, 0.)\n\t\t, \n\t\t1.0); \n\n}","name":"Image","description":"","type":"image"}]}