{"ver":"0.1","info":{"id":"wltfWs","date":"1613716415","viewed":78,"name":"Sand Paper","username":"treize","description":"Sand Paper","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \tvec2 p = (fragCoord* 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\tvec3 sand;\n    float line;\n    Sand(p,vec2(5.0),10.0,vec3(1.0,0.7,0.4),sand,line);\n    vec3 color;\n    color=sand;\n    //color=vec3(line);\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float random_seed2(vec2 uv)\n{\n\treturn fract(sin(dot(uv.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\nfloat ValueNoise(vec2 uv)\n{\n\tvec2 i = floor(uv);\n\tvec2 f = fract(uv);\n\tf = f * f * (3.0 - 2.0 * f);\n\tfloat r0 = random_seed2(i);\n\tfloat r1 = random_seed2(i + vec2(1.0, 0.0));\n\tfloat r2 = random_seed2(i+vec2(0.0, 1.0));\n\tfloat r3 = random_seed2(i + vec2(1.0, 1.0));\n\tfloat bottomOfGrid =mix(r0, r1, f.x);\n\tfloat topOfGrid = mix(r2, r3, f.x);\n\tfloat t = mix(bottomOfGrid, topOfGrid, f.y);\n\treturn t;\n}\nfloat FBM24(vec2 uv, float amplitude, float frequency)\n{\n\tfloat result = 0.;\n\tfloat amplitude2 = amplitude;\n\tfloat frequency2 = frequency;\n\tfor (int i = 0; i < 4; i++)\n\t{\n        result += ValueNoise(uv * frequency2) * amplitude2;\n\t\tamplitude2 *= 0.5;\n\t\tfrequency2 *= 2.0;\n\t}\n\treturn result;\n}\nfloat DomainWarp(vec2 p, float G,int loop)\n{\n    float val = 0.0;\n    for (int i = 0; i < loop; i++)\n    {\n        vec2 dir = vec2(sin(G * val), cos(G * val));\n        val = FBM24(p + dir,1.0,1.0);\n    }\n    return val;\n}\nvoid Sand(vec2 UV,vec2 UVScale,float Scale,vec3 FilterColor,out vec3 Out,out float Line)\n{\n    vec2 p=UV*UVScale;\n    float noise=DomainWarp(p, 3.0,7);\n    float value=1.0+cos(noise*Scale)/2.0;\n    float value2=1.0+tan(noise*Scale)/ 2.0;\n    vec3 sand=FilterColor*value;\n    Out=sand;;\n\n    Line=pow(clamp(value2,0.0,1.0)*2.4,4.0);\n}","name":"Common","description":"","type":"common"}]}