{"ver":"0.1","info":{"id":"sslSR8","date":"1618273507","viewed":301,"name":"inverse pointify image","username":"lomateron","description":"mouse click to paint\nkey A to reset image\nkey S to clean image\nthe effects of pontifying can be inverted, this creates bluring\nthen a transition between pontifying-bluring can be made\nthis transition variable is taken from the same image its convoluting","likes":2,"published":3,"flags":48,"usePreview":0,"tags":["convolution","paint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//based on https://www.shadertoy.com/view/fdsSRr\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,u);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    float keyA  = texture( iChannel1, vec2(65.5/256.,.25) ).x;\n    float keyS  = texture( iChannel1, vec2(83.5/256.,.25) ).x;\n\n    float z = 1.;//kernel convolution size\n    float t = z*2.+1.;\n          t = 1./(t*t-1.);\n    vec4 b0 = abs(A(u+vec2(0,0)));\n    vec4 b = vec4(0);\n    for(float i = -z; i<z+.5;++i){\n    for(float j = -z; j<z+.5;++j){\n      vec4 s = vec4(0);\n      for(float i2 = -z; i2<z+.5;++i2){\n      for(float j2 = -z; j2<z+.5;++j2){\n      s += abs(A(u+vec2(i,j)+vec2(i2,j2)));\n      }}\n      if(s.x==0.)s.x = 1.;\n      if(s.y==0.)s.y = 1.;\n      if(s.z==0.)s.z = 1.;\n      if(s.w==0.)s.w = 1.;\n      s = b0/s;\n      s = mix(s,(1.-s)*t,min(abs(A(u+vec2(i,j))),1.));\n      b += s*A(u+vec2(i,j));\n    }}\n    vec4 a = b;\n    if(keyA!=0.)a = texture( iChannel2, u/iResolution.xy);\n    if(keyS!=0.)a = vec4(0);\n    if(iFrame==0)a = sin(u.xy*.03+sin(u.yx*.03)).xyyy*.3+.3;\n    if(iMouse.z>0.||iFrame==0)\n    {\n        vec2 m1 = 2.*(u-iMouse.xy)/iResolution.y;\n        a += .1/exp(dot(m1,m1)*111.);\n    }\n    fragColor = a;\n}","name":"Buffer A","description":"","type":"buffer"}]}