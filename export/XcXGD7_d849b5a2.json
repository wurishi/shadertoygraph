{"ver":"0.1","info":{"id":"XcXGD7","date":"1703108782","viewed":23,"name":"Horizontal grayscale interpolate","username":"vitasa","description":"horizontal lines","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["lines","grayscale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smoot(float x) {\n    return -2.0*x*x*x+3.0*x*x;\n}\nfloat lerp(float a, float b, float t) {\n    return a+(b-a)*t;\n}\nfloat frac(float x) {\n    return x-floor(x);\n}\nfloat random(vec2 uv) {\n    return frac(sin(dot(uv,vec2(12.9898,78.233)))*43758.5453123);\n}\nfloat noise(float x) {\n    float xInEdge = floor(x);\n    \n    float anchor0 = random(vec2(xInEdge,0));\n    float anchor1 = random(vec2(xInEdge+1.0,0));\n    \n    return lerp(anchor0,anchor1,smoot(frac(x)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(noise(uv.y*iResolution.x/20.0));\n}","name":"Image","description":"","type":"image"}]}