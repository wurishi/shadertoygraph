{"ver":"0.1","info":{"id":"3sjBDh","date":"1589940361","viewed":249,"name":"color study","username":"stduhpf","description":"studying how colorspaces work so i stop being stupid\nleft: XYZ-SRGB spectrum difference\nright : sRGB-XYZ spectrum difference","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colorspace","spectralrendering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 linearToSRGB(vec3 linear){\n    return mix(\n        linear * 12.92,\n        pow(linear, vec3(1./2.4) ) * 1.055 - .055,\n        step( .0031308, linear )\n    );\n}\nvec3 srgbToLinear(vec3 srgb){\n    return mix(\n        srgb / 12.92,\n        pow(.947867 * srgb + .0521327, vec3(2.4) ),\n        step( .04045, srgb )\n    );\n}\n\n\n\nvec3 xyYtoXYZ(vec3 xyY){\n    return vec3(xyY.x*xyY.z/xyY.y, xyY.z, (1.-xyY.x-xyY.y)*xyY.z/xyY.y);\n}\n\nvec3 XYZtoxyY(vec3 XYZ){\n    float s = dot(XYZ,vec3(1.));\n    return vec3(XYZ.xy/s,XYZ.y);\n}\n\nconst mat3 sRGBmat = mat3(3.2406 ,-0.9689,0.0557 ,\n                          -1.5372,1.8758 ,-0.2040,\n                          -0.4986,0.0415 ,1.0570 );\nconst mat3 sRGBmatInv = mat3(0.4124,0.2126,0.0193,\n                             0.3576,0.7152,0.1192,\n                             0.1805,0.0722,0.9505);\n\nconst mat3 cRGBmat = mat3(0.41847   ,-0.091169,0.00092090,\n                          -0.15866  ,0.25243  ,-0.0025498,\n                          -0.082835 ,0.015708 ,0.17860   );\nconst mat3 cRGBmatInv = mat3(2.7689,1.    ,0.      ,\n                             1.7517,4.5907,0.056508,\n                             1.1302,0.0601,5.5943  );\n\nconst mat3 rec2020mat = mat3( 1.654001072327064,-0.491962367727270,0.012823156180904,\n  \t\t\t\t\t\t\t -0.328582439150225, 1.224807649257926,-0.031926845969885,\n  \t\t\t\t\t\t\t -0.235295745486861, 0.008763367829582, 0.696316140136240);\n\nconst mat3 rec2020matInv = mat3(0.657021262353320,0.263902442109458,0.000000698474365,\n                                0.181988445346400,0.889285361222104,0.037423246412350,\n                                0.219727028026240,0.077984673908997,1.435658536478509);\n\nconst mat3 lowmat = mat3(4.676069275708541,-1.355340336859568,-0.343392231214305,\n                          -2.776565148174218,2.338468515524017,-1.138156950151501,\n                          -0.702417457071294,-0.238453212389776,4.430411203248263);\nconst mat3 lowmatInv = mat3(0.3524,0.2126,0.08193,\n                             0.4576,0.7152,0.2192,\n                             0.0805,0.0722,.2505);\n\nconst mat3 linsRGB2rec2020 = mat3(0.508498879219063,7.149744544518886e-04,-0.014531283587229,\n                           \t   \t  0.296721021771517,0.803820685906905,0.109308963621570,\n                               \t  0.031782878191668,0.006517710499047,0.658351876756886);\n\nconst mat3 rec20202linsRGB = mat3(1.965066666697664 ,-0.002102387643990,0.043722440585856 ,\n                                  -0.713441332134416,1.246498953170958 ,-0.222708755337426,\n                                  -0.087803304716027,-0.012238894834515,1.519038619766569 );\n\nconst mat3 sRGB2cust = mat3(0.459948689438523,0.487503161496537,0.308936806856135,\n                        1.101525882302790,1.326330267248322,0.948972794836465,\n                        1.142282121705257,0.972197437403970,2.386717475045308);\nconst mat3 cust2sRGB = mat3(15.881055316759070,-6.111620993518249,0.374371724126280,\n                             -10.939346494458402,5.273947646023810,-0.680962903808598,\n                             -3.144670876144256,0.776747574210547,0.517192451815031);\n\n\nfloat gaussian(float x,float al, float mu, float s1, float s2){\n    float y = x-mu;\n    y/=y<0.?s1:s2;\n    return al*exp(-y*y*.5);\n}\n\nvec3 lambdatoXYZ(float wl){\n    return vec3( gaussian(wl, 1.056, 599.8, 37.9, 31.0)+gaussian(wl, 0.362, 442.0, 16.0, 26.7)+ gaussian(wl, -0.065, 501.1, 20.4, 26.2)\n                ,gaussian(wl, 0.821, 568.8, 46.9, 40.5)+gaussian(wl, 0.286, 530.9, 16.3, 31.1)\n                ,gaussian(wl, 1.217, 437.0, 11.8, 36.0)+gaussian(wl, 0.681, 459.0, 26.0, 13.8));\n}\n\nfloat red(float wl){\n    float a = 0.;\n    float b1 = wl-435.;\n    a+=exp2(-b1*b1*.004)*.27;\n    float b2 = wl-601.;\n\ta+=exp2(-b2*b2*(1.-sign(b2)*.4)*.001)*2.5;\n    return a;\n}\n\nfloat green(float wl){\n    float a = 0.;\n    float b1 = wl-540.;\n    a+=exp2(-b1*b1*.0008)*1.5;\n    return a;\n}\n\nfloat blue(float wl){\n    float a = 0.;\n    float b1 = wl-450.;\n    a+=exp2(-b1*b1*.0015)*1.9;\n    return a;\n}\n\nvec3 lambdatosRGB(float wl){\n    return vec3(red(wl),green(wl),blue(wl));\n}\n\n\nfloat dfSeg( vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat blackbody(float wl, float T){\n    float h = 6.62607004e-34; // Planck constant\n    float k = 1.38064852e-23; // Boltzmann constant\n    float c = 299792458.;// Speed of light\n   \twl*=1e-9;\n    return  2.*h*(c*c)/(wl*wl*wl*wl*wl*(exp(h*c/(T*wl*k))-1.));\n}\n\nvec3 bbXYZ(float T){\n    int samples = 25;\n    float mi = 300.,ma = 800.;\n    float st = (ma-mi)/float(samples);\n    vec3 ret = vec3(0);\n    vec3 tmp = vec3(0);\n    for(float l = mi ; l < ma ; l += st){\n    \tvec3 XYZ = lambdatoXYZ(l);\n        float bb = blackbody(l,T);\n        XYZ*=bb;\n        ret+=st*(XYZ+tmp)/2.;\n        tmp = XYZ;\n    }\n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float mRes = min(iResolution.x,iResolution.y);\n    vec2 off = mRes==iResolution.x?vec2(0,1.-iResolution.y/iResolution.x)*.5:vec2(1.-iResolution.x/iResolution.y,0)*.5;\n\n    vec2 uv = fragCoord/mRes+off;\n\t\n    float luninance = sRGBmatInv[2].y; \n    //lumiance of pure blue pixel on srgb screen\n        \n    vec3 redCorner = vec3(.637,.326,luninance);\n    vec3 greenCorner = vec3(.296,.600,luninance);\n    vec3 blueCorner = vec3(.148,.059,luninance);\n    \n    vec3 xyY = vec3(uv,luninance);\n    vec3 XYZ = xyYtoXYZ(xyY);\n        \n    vec3 lsRGB = sRGBmat*XYZ;\n    \n    vec3 sRGB = linearToSRGB(lsRGB/max(max(lsRGB.r,lsRGB.g),lsRGB.b));\n    \n    vec3 cieRGB = cRGBmat*XYZ;\n    \n\tvec3 rec2020 = rec2020mat*XYZ;\n    \n    vec3 desat = 0.*rec2020==fract(rec2020)?.1+.8*clamp(lsRGB,0.,1.):clamp(lsRGB,0.,1.);\n    \n    vec3 col = lsRGB==fract(lsRGB)?sRGB:linearToSRGB(desat);\n\n    {\n        vec2 p = vec2(1./3.);\n        if(distance(uv,p)<2./mRes)col=vec3(1.);\n    }\n    {\n        vec2 lp = redCorner.xy;\n        for(float T = 0.;T<20000.;T+=500.){\n            vec3  XYZ = bbXYZ(T);\n            vec3 xyY = XYZtoxyY(XYZ);\n            vec2 p = xyY.xy;\n            xyY.z=.95;\n            if(dfSeg(uv,p,lp)<2./mRes)col=linearToSRGB(sRGBmat*xyYtoXYZ(xyY));\n            lp = p;\n        }\n    }\n\t\n    {\n    vec2 pxy = vec2(-1.);\n    vec2 lpxy = vec2(-1.);\n    for(float wl=300.;wl<=800.;wl+=2.5){\n        vec3 XYZ = lambdatoXYZ(wl);\n        vec3 xyY = XYZtoxyY(XYZ);\n        if(pxy.x>0. && dfSeg(uv,xyY.xy,pxy)<2./mRes){\n            col=linearToSRGB(sRGBmat*XYZ);\n            break;\n        }\n        pxy = xyY.xy;\n        \n        vec3 lRGB = lambdatosRGB(wl);\n        vec3 lXYZ = (sRGBmatInv)*lRGB;\n        vec3 lxyY = XYZtoxyY(lXYZ);\n        if(lpxy.x>0. && dfSeg(uv,lxyY.xy,lpxy)<2./mRes){\n            col=linearToSRGB(lRGB);\n            break;\n        }\n        lpxy = lxyY.xy;\n    }\n    }\n\n    \n    {\n    float wl = 200.+fract(iTime*.04)*700.;\n    vec3 XYZ = lambdatoXYZ(wl);\n    vec3 xyY = XYZtoxyY(XYZ);\n    vec3 lRGB = lambdatosRGB(wl);\n    vec3 lXYZ = (sRGBmatInv)*lRGB;\n    vec3 lxyY = XYZtoxyY(lXYZ);\n    if(dfSeg(uv,lxyY.xy,xyY.xy)<1./mRes){\n        col=linearToSRGB(lRGB);\n    }\n    vec3 xyY2 = XYZtoxyY(sRGBmatInv*clamp(sRGBmat*XYZ,0.,1.));\n    if(dfSeg(uv,xyY2.xy,xyY.xy)<1./mRes){\n        col=vec3(1);\n    }\n     \n    if(uv!=fract(uv))\n        col=1.*sign(uv.x)*(clamp(linearToSRGB(lRGB),0.,1.)-clamp(linearToSRGB(sRGBmat*XYZ),0.,1.));\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}