{"ver":"0.1","info":{"id":"WtsSD2","date":"1564359196","viewed":437,"name":"Flash of Rainbow","username":"ShaderPrankster","description":"Building further on dithering. Loads more colors!\n\nUpdated some hours later to use better dithering function!","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dither8x8(vec2 position, float brightness) {  \n  float limit = texture(iChannel0, position / iChannelResolution[0].xy).r;\n\n  return brightness < limit ? 0.0 : 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 texCol = vec3(cos(iTime + uv.y), sin(iTime + uv.y), sin(iTime));\n    vec3 col = texCol * dither8x8(fragCoord, dot(texCol, vec3(0.299, 0.587, 0.114)));\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}