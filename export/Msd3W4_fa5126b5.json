{"ver":"0.1","info":{"id":"Msd3W4","date":"1449767009","viewed":174,"name":"LinearTimer","username":"jt","description":"A simple linear timer visualization for use as UI-element (e.g. in computer-games).","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["visualization","linear","ui","short","timer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Linear Timer - 2015 by JT\n// A simple linear timer visualization for use as UI-element (e.g. in computer-games).\n/*\nvoid mainImage( out vec4 C, vec2 I ) // 142chars version by 834144373 with slightly different colors\n{\n    C -= C;\n    C.gb = (I /= iResolution.xy) \n        * (1.-smoothstep(.1,.1,abs(I.y-.5)))\n        * smoothstep(0., 5e-3, fract(iDate.w*.1) - I.x);\n}\n*/\n// Thanks to FabriceNeyret2 for optimizations!\nvoid mainImage( out vec4 C, vec2 I )\n{\n    I /= iResolution.xy;\n    C = vec4(0,I.x,1.-I.x,1) * (1.-smoothstep(.09,.1,abs(I.y-.5))) * smoothstep(0., 5e-3, fract(iDate.w*.1) - I.x);\n}\n\n/*\nvoid mainImage( out vec4 C, vec2 I )\n{\n    vec2 R = iResolution.xy;\n\tI = (I+I-R)/R.y;\n    I = vec2(fract(atan(I.y, I.x)/6.28),length(I));\n    if(I.y > .8 && I.y < 1. && I.x < fract(iDate.w/10.))\n        C = vec4(0,I.x,1.-I.x,1);\n    else\n        C = vec4(0);\n}\n*/\n","name":"","description":"","type":"image"}]}