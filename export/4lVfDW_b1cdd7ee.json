{"ver":"0.1","info":{"id":"4lVfDW","date":"1546313658","viewed":145,"name":"Mandelbrot Set Visualization","username":"WB","description":"The obligatory mandelbrot set, everyone has to render it eventually. No interpolation, just quick and dirty.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iterations 256\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 center = vec2(0.90001,0.269995);\n    float scale = iMouse.x/iResolution.x;//1.0/iTime * 10.0;\n    \n    float t = exp(-mod(iTime*0.5, 12.5));\n    scale = t;\n        \n    vec2 uv = fragCoord/iResolution.xy;\n    uv = (2.0 * uv.xy) - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    float cosT = cos(iTime * 0.2);\n    float sinT = sin(iTime * 0.2);\n    mat2 rot = mat2(cosT, -sinT,\n                    sinT, cosT);\n    uv *= rot;\n    \n    vec2 z,c;\n    \n    c.x = (uv.x-0.5) * scale - center.x;\n    \n    c.y = (uv.y-0.5) * scale - center.y;\n    \n    z = c;\n    \n    int i;\n    for (i = 0; i < iterations; i++)\n    {\n        float x = (z.x * z.x - z.y * z.y) + c.x;\n        float y = (z.y * z.x + z.x * z.y) + c.y;\n        \n        //If magnitude exceeds 2 it is guaranteed to diverge to infinity\n        if ((x*x + y*y) > 4.0)\n            break;\n        \n        z.x = x;\n        z.y = y;\n    }\n    \n    vec3 col = (i == iterations) ? vec3(0.0) : mix(vec3(0.2,0.2,0.5), vec3(0.9,0.5,0.4),float(i)/75.0);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}