{"ver":"0.1","info":{"id":"wly3Wt","date":"1580150215","viewed":118,"name":"Shiny Star","username":"zheck","description":"https://www.youtube.com/watch?v=rvDo9LvfoVE","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["artofcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14\nfloat zoom = 2.0;\nfloat lightBrightness = 0.03;\n\nmat2 rotationMatrix(float angle)\n{\n    angle *= PI / 180.0;\n \tfloat s=sin(angle), c=cos(angle);\n    return mat2(c, -s, s, c);\n}\n\n// Returns a UV where the origin (0,0) is the offset\nvec2 adjustUVSpace(vec2 uv, float offset)\n{\n    return (uv-offset*iResolution.xy)/iResolution.y;\n}\n\n// Scales UV to create the effect of a zoom\nvec2 zoomUV(vec2 uv, float zoomDistance)\n{\n \treturn uv * zoomDistance;   \n}\n\nfloat star(vec2 uv, float flare)\n{\n    // Creates an asymptote of light\n    float d = length(uv);\n    float m = lightBrightness/d;\n    \n    // Creates the criss flare effect\n    float lightRays = max(0.0, 1.0-abs(uv.x*uv.y*flare*2.0));\n    m += lightRays;\n    // Rotate for the cross flare\n    uv *= rotationMatrix(45.0);\n    lightRays = max(0.0, 1.0-abs(uv.x*uv.y*flare*2.0));\n    m += lightRays;\n    \n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = adjustUVSpace(fragCoord, 0.5);\n    uv = zoomUV(uv, zoom);\n    \n    // Background to black\n    vec4 col = vec4(0);\n\n    col += star(uv, 1000.0);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}