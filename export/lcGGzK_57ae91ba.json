{"ver":"0.1","info":{"id":"lcGGzK","date":"1712965266","viewed":761,"name":"Hell Diving","username":"leon","description":"hot pixels","likes":59,"published":3,"flags":0,"usePreview":1,"tags":["short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// alternative of Cloud Diving\n// https://www.shadertoy.com/view/lcVGzz\n\nfloat gyroid (vec3 p) { return dot(cos(p),sin(p.yzx)); }\n\nfloat fbm(vec3 p)\n{\n    float result = 0.;\n    float a = .5;\n    for (float i = 0.; i < 9.; ++i)\n    {\n        p.z += (result+iTime)*.1;\n        result += abs(gyroid(p/a)*a);\n        a /= 1.5;\n    }\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 ray = normalize(vec3(uv,.5));\n    vec3 blu = texture(iChannel0, fragCoord/1024.).rgb;\n    \n    vec3 e = vec3(.1*blu.y*vec2(iResolution.x/iResolution.y), 0.);\n    #define T(u) fbm(ray+u)\n    vec3 normal = normalize(T(0.)-vec3(T(e.xzz),T(e.zyz),1.));\n    vec3 color = 0.2 + 1. * cos(vec3(1,2,3)*5.5 + normal.y);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}