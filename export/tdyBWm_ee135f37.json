{"ver":"0.1","info":{"id":"tdyBWm","date":"1607365662","viewed":71,"name":"Space Filling Pattern2","username":"ArunJangir","description":"1st Shader","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){ return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y; // Normalized pixel coordinates (from 0 to 1)\n    vec3 col = vec3(0.);\n    uv.x= 0.5*sin(1.*cos(uv.x+0.2)-3.14/2.);\n uv.y= 0.5*sin(cos(uv.y)-3.14/2.);//   uv.x* = 10.*sin(uv.x*2.);\n   // uv.y = 20.*tan(uv.y*2.);\n    uv *= (6.*iTime-2.0);\n    //uv -= 6.;\n    vec2 id = floor(uv); \n    float num = rand(id);\n    \n    vec2 gv = fract(uv)-0.5;\n    if(num<0.5)\n        gv.x*=-1.;\n    float mask = smoothstep(0.2, 0.,abs(abs(gv.x+gv.y)-0.5));\n    col += mask;\n    \n    // mask = 15.*sin(gv.x*gv.y);\n    //col+=mask;\n    //uv.x *=2.;\n    fragColor = vec4(col,0.);\n}\n\n","name":"Image","description":"","type":"image"}]}