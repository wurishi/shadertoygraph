{"ver":"0.1","info":{"id":"ltlfRX","date":"1512743688","viewed":317,"name":"Non-uniform anisotropic blur","username":"Ultraviolet","description":"Click to move the focus point.\nSwap radX and radY line 49/50 for a different anisotropy direction.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n\tvec2 p = uv*2.-1.;\n    p.y /= iResolution.x/iResolution.y;\n    \n    vec2 m = (iMouse.xy/iResolution.xy*2.-1.)*vec2(1.0, iResolution.y/iResolution.x);\n    \n    if(length(iMouse.xy) < 10.0)\n        m = vec2(cos(iTime), 0.);\n    p -= m;\n    \n    vec3 col = vec3(0.);\n    \n    float count = 0.0;\n    float radX  = (length(p)*20.)+1.;\n    float radY  = (length(p)*2.)+1.;\n    float alpha = 1.0;\n    \n    for(float i=-radX; i<radX; i+=1.)\n    for(float j=-radY; j<radY; j+=1.)\n    {\n        float l2 = i*i/radX/radX+j*j/radY/radY;\n        if(l2<1.)\n        {\n            float w = 1.0 - sqrt(l2);\n            //w = 1.0;\n            vec2 disp = normalize(p)*i/iResolution.x + normalize(vec2(-p.y, p.x))*j/iResolution.y;\n    \t\tcol += w*texture(iChannel0, uv+disp).rgb;\n        \tcount += w;\n        }\n    }\n    \n    col /= count;\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}