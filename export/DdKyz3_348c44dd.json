{"ver":"0.1","info":{"id":"DdKyz3","date":"1696393157","viewed":59,"name":"would you","username":"Swifter","description":"or not","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["real"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat pointToAngle(vec2 point)\n{\n    return (atan(point.y, point.x) + PI) / (PI * 2.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.y/iResolution.x;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv *= 2.;\n    uv.x /= aspect;\n    \n    float angle = pointToAngle(uv);\n    float dist = length(uv);\n    vec3 col = vec3(1);\n    \n    float circAngle = mod(angle + length(uv) * 0.2 + sin(iTime * 0.2) * dist * 0.3, 1.);\n    dist *= (1. + sin(circAngle * PI * 6.) * 0.3 * cos(iTime * 0.2));\n    \n    \n    col *= 1. - pow(1. - (cos(dist * 30. + iTime * 5.)), 0.2);\n    col *= smoothstep(0.2, 1., cos(pow(dist, 0.4) * 10. + iTime * 5.));\n    col *= 10.;\n    \n    vec2 mouse = iMouse.xy/iResolution.xy;\n    mouse -= 0.5;\n    mouse *= 2.;\n    mouse.x /= aspect;\n    \n    float destAngle = pointToAngle(mouse) + 0.5;\n    float wrap = min(min(abs(destAngle - angle), abs(destAngle - angle + 1.)), abs(destAngle - angle - 1.));\n    wrap *= 2.;\n    wrap = pow(wrap, 7.);\n    col *= wrap;\n    col += wrap;\n    \n    col *= palette(uv.x * 0.3 + iTime + dist * 0.4, vec3(0.5), vec3(0.5), vec3(1), vec3(0, 0.33, 0.67 + iTime + uv * 0.1));\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}