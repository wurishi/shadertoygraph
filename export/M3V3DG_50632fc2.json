{"ver":"0.1","info":{"id":"M3V3DG","date":"1718188546","viewed":105,"name":"Watch Til End","username":"ShadeWhizz","description":"2D Fractal, look at it go\nInitial credit goes to Mr Radian628\nI hunted high and low for these parameters\nDecrease angle with iteration depth is awesome for some reason","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"43VGRc","parentname":"sik fraktal 2"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float channel(vec2 ndc, float t) {\n    float angle = t * 0.05;\n    float phase = atan(ndc.y, ndc.x);\n    float mag = length(ndc);\n    for (float i = 0.0; i < 64.0; i += 1.0) {\n        ndc = abs(ndc);\n        // ndc = ndc.yx;\n        ndc -= 6.0;\n        ndc *= 1.06;\n        ndc = abs(ndc);\n        ndc *= rotmat(angle/(1.0+i));\n   }\n   return length(ndc);\n}\n\nvec3 image(vec2 uv) {\n    float x = channel(uv, iTime);\n    float h = 10.0*iTime + 360.0*x;\n    h = mod(h, 360.0);\n    vec3 col = hsvToRgb(vec3(h, 1.0, 1.0));\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ndc = fragCoord / iResolution.xy * 2.0 - 1.0;\n   fragColor = vec4(\n       vec3(image(ndc)),\n       1.0\n   );\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define TAU 6.28318530718\n\nmat2 rotmat(float angle) {\n    float cosAngle = cos(angle);\n    float sinAngle = sin(angle);\n\n    return mat2(\n        cosAngle, -sinAngle,\n        sinAngle,  cosAngle\n    );\n}\n\nvec3 hsvToRgb(vec3 hsv) {\n    float c = hsv.y * hsv.z;\n    float x = c * (1.0 - abs(mod(hsv.x / 60.0, 2.0) - 1.0));\n    float m = hsv.z - c;\n    \n    vec3 rgb;\n    if (hsv.x < 60.0) {\n        rgb = vec3(c, x, 0.0);\n    } else if (hsv.x < 120.0) {\n        rgb = vec3(x, c, 0.0);\n    } else if (hsv.x < 180.0) {\n        rgb = vec3(0.0, c, x);\n    } else if (hsv.x < 240.0) {\n        rgb = vec3(0.0, x, c);\n    } else if (hsv.x < 300.0) {\n        rgb = vec3(x, 0.0, c);\n    } else {\n        rgb = vec3(c, 0.0, x);\n    }\n    \n    return rgb + vec3(m);\n}","name":"Common","description":"","type":"common"}]}