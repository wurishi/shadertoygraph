{"ver":"0.1","info":{"id":"ldcfR7","date":"1524493089","viewed":540,"name":"Simple Kawase - Jittered","username":"wsmind","description":"Simple two-pass Kawase with jittering to hide the artifacts.","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["blur","kawase"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    \n    vec2 jitter = vec2(rand(uv), rand(uv + 0.47));\n    vec2 offset = jitter * 0.04 * vec2(iResolution.x / iResolution.y, 1.0);\n    col += texture(iChannel0, uv + offset * vec2(1.0, 1.0)).rgb;\n    col += texture(iChannel0, uv + offset * vec2(-1.0, 1.0)).rgb;\n    col += texture(iChannel0, uv + offset * vec2(-1.0, -1.0)).rgb;\n    col += texture(iChannel0, uv + offset * vec2(1.0, -1.0)).rgb;\n    \n    col *= 0.25;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    \n    vec2 jitter = vec2(rand(uv), rand(uv + 0.47));\n    vec2 offset = jitter * 0.04 * vec2(iResolution.x / iResolution.y, 1.0);\n    col += texture(iChannel0, uv + offset * vec2(1.0, 1.0)).rgb;\n    col += texture(iChannel0, uv + offset * vec2(-1.0, 1.0)).rgb;\n    col += texture(iChannel0, uv + offset * vec2(-1.0, -1.0)).rgb;\n    col += texture(iChannel0, uv + offset * vec2(1.0, -1.0)).rgb;\n    \n    col *= 0.25;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}