{"ver":"0.1","info":{"id":"llscW4","date":"1504897324","viewed":146,"name":"Concentric Sawtooth Gradients","username":"FlexMonkey","description":"A little homage to Zach Lieberman's work :)\n\nBest in Chrome. \n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles","sawtooth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tSimon Gladman | September 2017\n*/\n\nconst float stepWidth = 25.0; \n\nstruct HeightColorPair {\n    vec3 color;\n    float height; \n};\n    \nHeightColorPair sawtoothGradient(vec2 uv, vec2 offset, vec3 color) {\n    float len = length(uv - offset); \n    float value = len * stepWidth ;\n    value = smoothstep(0.0, 1.0, abs(mod(value, 1.0))) * 0.5; \n    value += 0.5;\n    value *= 1.0 - pow(len, 0.4);\n    \n    float height = 1.0 - floor(len * stepWidth) / stepWidth;\n    \n    return HeightColorPair(value * color, height); \n}\n\nHeightColorPair topHeightColor(HeightColorPair a, HeightColorPair b) {\n    HeightColorPair result = a;\n    \n    if (b.height > a.height) {\n     \tresult = b;   \n    }\n    \n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n\tvec2 uv = (fragCoord.xy / iResolution.xy) - 0.5;\n    \n    float aRadius = (sin(iTime * 0.5) * 0.25) + 0.25; \n\tHeightColorPair a = sawtoothGradient(uv, \n                                         vec2(cos(iTime) * aRadius, \n                                              sin(iTime) * aRadius),\n                                         vec3(1.0, 1.0, 0.0));\n    \n    float bRadius = (sin(iTime * 0.75) * 0.1) + 0.4; \n    HeightColorPair b = sawtoothGradient(uv, \n                                         vec2(sin(iTime * 0.3) * bRadius, \n                                              cos(iTime * 0.3) * bRadius),\n                                         vec3(0.0, 1.0, 1.0));\n    \n    float cRadius = (cos(iTime * 0.25) * 0.3) + 0.1; \n    HeightColorPair c = sawtoothGradient(uv, \n                                         vec2(sin(iTime * 0.7) * cRadius, \n                                              cos(iTime * 0.7) * cRadius),\n                                         vec3(1.0, 0.0, 1.0));\n    \n    vec3 color = topHeightColor(topHeightColor(a, b), c).color;  \n    \n    fragColor = vec4(color ,1.0);\n}","name":"Image","description":"","type":"image"}]}