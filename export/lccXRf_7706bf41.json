{"ver":"0.1","info":{"id":"lccXRf","date":"1719237559","viewed":77,"name":"spring www","username":"shadertoyjiang","description":"Spring\nUnexpected error results","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["spring"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define computer 1\n\n\nfloat dln(in vec3 a, in vec3 b, in vec3 p){b-=a; p-=a;float h = clamp(dot(p,b)/dot(b,b), 0., 1.);return length(p - b * h);}\n\n#define M(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define PI    3.14159265358979\n#define PI2   6.28318530717957\n\nvec2 ms,mt;\nfloat tuo(vec3 pos)\n{\n        \n        pos.x*=.75;\n        pos.xy *= M(PI/4.);\n        vec3 p,q,\n             nx = normalize(vec3(-1,1,0)),\n             ny = normalize(vec3(1,1,0)),\n             nz = vec3(0,0,1),\n             g = vec3(0,.5,0),\n             xyz,ggg;\n        float d, md = 1e8, xr = .2,alf, x,y, cy, n = 5., \n              jie = 1.5;\n        p = pos-round(pos); p.z = pos.z;\n        if(dot(p.xy, ny.xy)<0.) p.xy=-p.xy;//   p.xy=-p.xy;    \n        xyz = vec3(dot(p, nx), dot(p, ny), dot(p, nz));\n        \n        for(int i;i++<2;)\n        { \n                ggg = vec3(dot(g, nx), dot(g, ny), dot(g, nz));\n                \n                alf = atan(xyz.z, xyz.x)/PI2+.5;\n                if( (xyz.y)*n<jie) \n                {\n                        cy = (floor(xyz.y * n)+alf);   \n                        x = length(xyz.xz)-xr;\n                        float m = 1e8;\n                        for(float i=-1.;i<2.;i++)\n                                y = xyz.y - (cy + i)/n,\n                                m = min(m, length(vec2(x,y)));\n                        m = max(abs(xyz.y)-jie, m);\n                        md = min(md, m);\n                }\n                //else\n                {\n                        cy = ( (jie)+alf);   \n                        vec3 cys = vec3(xr*cos(cy*PI2), jie/n, xr*sin(cy*PI2)); // 中心\n                        md = min(md, dln(cys, ggg, xyz));\n                }\n                //nx=-nx, nz=-nz;\n                xyz.xz *= -1.;\n        }\n        return md-xr*.1;\n}\n\n\n\nfloat m(vec3 p)\n{\n        //float t = iTime; p.xy *= M(t*.3); p.yz *= M(t); // \n        float t = iTime;\n        vec3 s = iMouse.xyz, R = iResolution;\n        if(length(s.xy)<3.)\n        {\n                p.xy *= M(t * .3);\n                p.yz *= M(t     );\n                //p.xz *= M(t * .6);\n        }\n        else\n        {\n                #if computer \n                if(s.z>0.)\n                #endif\n                {\n                        p.xz *= M(-ms.x * 3.14  * R.x/R.y);\n                        p.yz *= M(-ms.y * 3.14           );\n                        \n                        \n                        //vec3 x,y,z;\n                        \n                        \n                        //y = vec3(ms-mt,0);\n                        //z = vec3(0,0,-1);\n                        //x = normalize(cross(y,z));\n                        \n                        // \n                        //p *= rot3(x, length(y)*3.14/2.);\n                        \n                        \n                        \n                        \n                }\n        }\n        return tuo(p);\n}\n\nvoid mainImage(out vec4 O, vec2 v)\n{\n        O = vec4(0);\n        vec2 R = iResolution.xy,\n             u = (v + v +.1- R) / R.y;\n        ms =(iMouse.xy*2.+.1-R)/R.y;\n        mt = (texture(iChannel0, vec2(1)).yw *2.+.1-R)/R.y;\n        vec3 o, \n             r = normalize(vec3(u, 1)),\n             e,\n             n, s;\n        float d = e.y = 1e-3,t,i;\n        o.z = -3.;\n        O.xy -= 500.* exp(-280.*length(u-ms));\n        for(;i < 100. && t < 20. && d >=e.y ;i++)\n                t += d = m(o += r * d * .5) ; \n        if(i >= 100. || t > 20.){O += .5; return;}\n        n = normalize(  vec3(m(o+e.yxx),m(o+e),m(o+e.xxy)) - d );\n        s = vec3(-1,2,-3) * .27;\n        O += .5 + .5 * dot(n, s);\n        \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// 2024-6-25\n#define T(u) texture(iChannel0,u)\nmat3 rot3(vec3 n, float a)\n{\n        //n = normalize(n);\n        return mat3(n*n.x,n*n.y, n*n.z)*(1.-cos(a)) +\n               mat3(0,-n.z,n.yz,0,-n.xy,n.x,0)*sin(a) +\n               mat3(cos(a));\n}\n","name":"Common","description":"","type":"common"}]}