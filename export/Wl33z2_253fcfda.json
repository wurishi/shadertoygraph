{"ver":"0.1","info":{"id":"Wl33z2","date":"1576915163","viewed":115,"name":"Nested Circles 2d","username":"yp3y5akh0v","description":"Nested Circles","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N 80.\n#define L 20.\n#define PI radians(180.)\n#define s(n, k) (n / sqrt(k))\n#define t iTime\n\nfloat getCircles(vec2 uv, float i, float attempt, float flip) {\n    float a = 2. * PI * (i + 1.) / s(N, attempt);\n    float offset = 0.5 - mix(0., 0.45, (attempt + 1.) / L);\n    float r = 0.0003 - mix(0., 0.0002, (attempt + 1.) / L);\n    float x0 = (offset + r) * cos(a - offset * flip * t);\n    float y0 = (offset + r) * sin(a + offset * flip * t);        \n    float d = length(uv - vec2(x0, y0));         \n    float q = r / d;\n    return q;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0.);\n    float s = 1.;\n    \n    for (float k = 1.; k < L; k++) {\n        for (float i = 0.; i < N; i++) {\n            if (i >= s(N, k)) break;\n            float q = getCircles(uv, i, k, s=-s);\n            col += vec3(q);\n        }    \n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}