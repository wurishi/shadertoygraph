{"ver":"0.1","info":{"id":"dlcXzH","date":"1685018607","viewed":85,"name":"submarines radar","username":"bolex","description":"interface of old school sub-marin radar","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["radar","green","ship"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n    sin(_angle),cos(_angle));\n}\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n    0.0,_scale.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 vUv = fragCoord/iResolution.xy;\n    vUv = vec2(vUv.x, vUv.y * (iResolution.y / iResolution.x));\n    vUv *= 2.;\n    vUv.x -= 0.5;\n    vUv.y -= 0.05;\n\n    \n    vec2 st = vUv;\n    st -= vec2(0.5);\n    st *= rotate2d(-iTime * 1.2);\n    st += vec2(0.5);\n    float strength = 0.;\n    strength = atan(st.y - 0.5, st.x - 0.5);\n    strength /= PI * 2.;\n    float visualstrength = (strength * 3.) - 0.2;\n    float hiddenStrength = strength - 0.1;\n    float dot1 = step(0.01, distance(vec2(vUv.x, vUv.y - 0.25), vec2(0.5)));\n    float dot2 = step(0.01, distance(vec2(vUv.x - 0.1, vUv.y + 0.2), vec2(0.5)));\n    float dot3 = step(0.01, distance(vec2(vUv.x + 0.3, vUv.y - 0.3), vec2(0.5)));\n    float dot4 = step(0.01, distance(vec2(vUv.x + 0.3, vUv.y - 0.3), vec2(0.5)));\n    hiddenStrength -= dot1 * dot2 * dot3;\n    visualstrength -= step(0.5, distance(st, vec2(0.5)));\n    float render = visualstrength + hiddenStrength;\n    fragColor = vec4(vec3(0., render, 0.), 1.);\n}","name":"Image","description":"","type":"image"}]}