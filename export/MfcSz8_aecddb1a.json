{"ver":"0.1","info":{"id":"MfcSz8","date":"1713551874","viewed":49,"name":"Strobing","username":"AndreCorrea","description":"SImple ray marching","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float MAX_RANGE = 100.0f;\nfloat STEP_SIZE = 0.1f;\nfloat THRESHOLD = 0.0001f;\n\n\n\nfloat sdf(vec3 pos) //recebe posicao do raio e retorna distancia Ã  esfera\n{\n    float r = 0.3f;\n    float aspectRatio = iResolution.x / iResolution.y;\n    vec3 center = vec3(0.5,0.5,20.0);\n    center.x *= aspectRatio;\n    return length(pos - center)-r; \n}\n\nvec3 sdfColor(vec3 pos)\n{\n    return vec3(1.0,0.0,0.0);\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspectRatio = iResolution.x / iResolution.y;\n    uv.x *= aspectRatio;\n    \n    vec3 ro = vec3(uv.x,uv.y,0.0);\n    vec3 rd = vec3(0.0,0.0,1.0f);\n    vec3 col = vec3(0.0,0.0,0.0);\n    \n    for(float i = 0.0f; i*STEP_SIZE < MAX_RANGE; i++)\n    {\n        ro += rd*STEP_SIZE;\n      \n        vec3 worldPos = ro + rd * i * STEP_SIZE; // Convert ro to world coordinates\n        if (sdf(worldPos) < THRESHOLD) {\n            vec3 sdfCol = sdfColor(worldPos);\n            col = sdfCol;\n            break;\n        }\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}