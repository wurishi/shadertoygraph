{"ver":"0.1","info":{"id":"Xl2XzG","date":"1444643248","viewed":108,"name":"09","username":"anilord","description":"09","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["09"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat distanceTo(float x, float y, float centerX, float centerY) {\n\tfloat deltaX = x - centerX;\n    float deltaY = y - centerY;\n    return sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\nvoid mainImage( out vec4 color, in vec2 pixCoords )\n{\n    float zoom = (iResolution.x / 10.0);// * (1.0 + 0.2 * cos(2.0 * iTime));\n    float cameraX = 5.0;  // + 4.0 * cos(iTime);\n    float cameraY = 2.0; // + 4.0 * sin(iTime * 1.1);\n    \n    float x = (pixCoords.x / zoom) - cameraX;\n    float y = (pixCoords.y / zoom) - cameraY;\n\n    float lineSemiWidth = 0.05;\n    \n    if (abs(x) < lineSemiWidth || abs(y)<lineSemiWidth) {\n\t\tcolor = vec4(1.0, 0.0, 0.0, 1.0);\n        return;\n    }\n    \n    \n    if (mod(x, 1.0) < lineSemiWidth || mod(y, 1.0) < lineSemiWidth) {\n\t\tcolor = vec4(0.5, 0.5, 0.5, 1.0);\n        return;\n    }\n    \n    float PI = 3.1415;\n    float hauteurMoyenne = 0.0;\n    float amplitude = .5;\n    float phase = iTime * 1.5;\n    float periode = 1.0;\n    float fx = hauteurMoyenne + cos(x * 2.0 * PI/ periode + phase) * amplitude;\n    \n    if (y < fx) {\n        color = vec4(0.0, 0.0, 1.0, 1.0);\n        return;\n    }\n    \n    float fx2 = 1.0 + cos(2.5 * (x + iTime)) * 0.3;\n    \n    if (y < fx2) {\n        color = vec4(0.6, 0.6, 1.0, 1.0);\n        return;\n    }\n\t\n    /*float radius = 0.3 + 0.2 * rand(vec2(floor(x), floor(y)));// * cos(3.0 * iTime + x + y);\n    radius *= 0.8 + 0.3 * cos(10.0 * rand(vec2(floor(x), floor(y))) * iTime);\n    float distance = distanceTo(mod(x, 1.0), mod(y, 1.0), 0.5, 0.5);\n    if (distance < radius) {\n        color = vec4(cos(20.0 * distance / radius), 0.5, 1.0, 1.0);\n        return;\n    }*/\n    \n    //float light = (cos(y * 3.0 + 6.0 * iTime) + 1.0) * 0.5;\n    //color = vec4(0.8, light, light * (0.5 + 0.5 * cos(x * 30.0)), 1.0);\n    color = vec4(1.0);\n}","name":"","description":"","type":"image"}]}