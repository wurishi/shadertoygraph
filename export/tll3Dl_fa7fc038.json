{"ver":"0.1","info":{"id":"tll3Dl","date":"1558128467","viewed":70,"name":"mandelbrot_zoom_test","username":"Noahiscool13","description":"basic Mandelbrot zoom.\nmy first glsl shader!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int mandel(float x0, float y0, int its){\n    float x = 0.0;\n    float y = 0.0;\n    float x_tmp;\n    \n    int it = 0;\n    while (x*x+y*y<4.0 && it<its){\n        x_tmp = x*x-y*y+x0;\n        y = 2.0*x*y+y0;\n        x = x_tmp;\n        it++;\n    }\n    return it;\n}\n\nvec3 setup(vec2 uv, int its){\n    float x = uv.x;\n    float y = uv.y;\n    \n    x = x*3.5-2.5;\n    y = y*2.0-1.0;\n    \n    vec2 center = vec2(-0.7615720,-0.0847596);\n    float time_bias = tanh(min(31.0,iTime)/5.0);\n    \n\tx = time_bias*center.x+(1.0-time_bias)*x;\n    y = time_bias*center.y+(1.0-time_bias)*y;\n    \n    int res = mandel(x, y, its);\n    if (res==its) {\n        return vec3(0.6,0.2,0.2);\n    }\n    //float col_r = (float(res%51))/255.0;\n    //float col_g = (float(res%255))/255.0;\n    float col_g = (sin(float(res/3))+1.0)/2.0;\n    float col_b = (sin(float(res/37))+1.0)/2.0;\n    //float col_b = (float((res/9)%255))/255.0;\n    return vec3(0,col_g,col_b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = setup(uv, 1000);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}