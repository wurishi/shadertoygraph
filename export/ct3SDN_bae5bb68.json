{"ver":"0.1","info":{"id":"ct3SDN","date":"1685390188","viewed":167,"name":"Terrain Proximity Blending","username":"Assossa","description":"Inspired by https://simonschreibt.de/gat/deus-ex-alpha-terrain/\n\nDrag to orbit the camera.\nCheck the \"Common\" tab to edit settings.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["3d","raymarching","terrain","postprocessing","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/Ms2SD1\nvec3 getSkyColor(vec3 e) {\n    e.y = max(e.y,0.);\n    return vec3(pow(.9-e.y,4.), .9-e.y, .6+(.9-e.y)*.4);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 camPos = getCamPos(iMouse.xy / iResolution.xy);\n    vec3 camDir = getCamDir(fragCoord, camPos, iResolution.xy);\n    \n    vec4 terrainData = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    vec4 objectData = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    vec4 worldData = mix(\n        objectData,\n        terrainData,\n        smoothstep(\n            terrainData.w - TERRAIN_BLEND_DISTANCE,\n            terrainData.w,\n            objectData.w\n        )\n    );\n    \n    vec3 skyColor = getSkyColor(camDir);\n    \n    fragColor = vec4(mix(\n        worldData.rgb,\n        skyColor,\n        smoothstep(\n            VIEW_DISTANCE - FOG_THICKNESS,\n            VIEW_DISTANCE,\n            worldData.w\n        )\n    ), 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define TERRAIN_BLEND_DISTANCE 0.25\n\n#define TERRAIN_TEXTURE_SCALE 2.0\n#define TERRAIN_HEIGHT_TEXTURE_SCALE 8.0\n#define TERRAIN_HEIGHT_SCALE 0.35\n\n#define TERRAIN_SCROLL_SPEED 0.1\n#define TERRAIN_ITERATIONS 64\n\n#define BOX_SPIN_SPEED 0.5\n#define OBJECT_ITERATIONS 64\n\n#define VIEW_DISTANCE 12.0\n#define FOG_THICKNESS 4.0\n\n#define NORMAL_EPSILON 0.01\n\nmat3 viewMatrix(vec3 eye, vec3 center, vec3 up) {\n    vec3 f = normalize(center - eye);\n    vec3 s = normalize(cross(f, up));\n    vec3 u = cross(s, f);\n    return mat3(s, u, f);\n}\n\nvec3 getCamPos(vec2 mouse) {\n    return vec3(\n        cos(mouse.x * 6.2832) * 3.0,\n        mouse.y * 2.0 + 0.5,\n        sin(mouse.x * 6.2832) * 3.0\n    );\n}\n\nvec3 getCamDir(vec2 fragCoord, vec3 camPos, vec2 iResolution) {\n    vec2 uv = (2. * fragCoord - iResolution) / iResolution.y;\n\n    vec3 lookAt = vec3(0);\n    return viewMatrix(camPos, lookAt, vec3(0, 1, 0))\n        * normalize(vec3(uv, 1));\n}\n\nvec3 getLightDir() {\n    return normalize(vec3(-0.25, 1, -1));\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float sceneSDF(vec3 p) {\n    return p.y\n        + texture(\n            iChannel1,\n            (p.xz + vec2(0.0, iTime * TERRAIN_SCROLL_SPEED))\n                / TERRAIN_HEIGHT_TEXTURE_SCALE\n        ).x * TERRAIN_HEIGHT_SCALE\n        + (1.0 - TERRAIN_HEIGHT_SCALE * 0.5);\n}\n\nvec3 sceneNormal(vec3 p) {\n    vec2 e = vec2(NORMAL_EPSILON, 0);\n    return normalize(vec3(\n        sceneSDF(p + e.xyy) - sceneSDF(p - e.xyy),\n        sceneSDF(p + e.yxy) - sceneSDF(p - e.yxy),\n        sceneSDF(p + e.yyx) - sceneSDF(p - e.yyx)\n    ));\n}\n\nfloat raymarch(vec3 p, vec3 d) {\n    float dist = 0.0;\n    \n    for(int i = 0; i < TERRAIN_ITERATIONS; i++) {\n        dist += sceneSDF(p + d * dist);\n    }\n    \n    return dist;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 camPos = getCamPos(iMouse.xy / iResolution.xy);\n    vec3 camDir = getCamDir(fragCoord, camPos, iResolution.xy);\n    \n    float hitDist = raymarch(camPos, camDir);\n    vec3 hitPos = camPos + camDir * hitDist;\n    \n    fragColor = vec4(\n        texture(\n            iChannel0,\n            (hitPos.xz + vec2(0.0, iTime * TERRAIN_SCROLL_SPEED))\n                / TERRAIN_TEXTURE_SCALE\n        ).rgb,\n        hitDist\n    );\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// https://iquilezles.org/articles/distfunctions/\nfloat sdBox(vec3 p, vec3 b) {\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat sceneSDF(vec3 p) {\n    float time = iTime * BOX_SPIN_SPEED;\n    vec3 boxPos = vec3(cos(time), -0.5, sin(time));\n    boxPos.xz *= 1.2;\n    \n    vec3 pBox = p - boxPos;\n    pBox *= viewMatrix(\n        boxPos,\n        vec3(0.0, boxPos.y, 0.0),\n        vec3(0, 1, 0)\n    );\n\n    return min(\n        length(p - vec3(0.0, -0.5, 0.0)) - 1.0,\n        sdBox(pBox, vec3(0.5))\n    );\n}\n\nvec3 sceneNormal(vec3 p) {\n    vec2 e = vec2(NORMAL_EPSILON, 0);\n    return normalize(vec3(\n        sceneSDF(p + e.xyy) - sceneSDF(p - e.xyy),\n        sceneSDF(p + e.yxy) - sceneSDF(p - e.yxy),\n        sceneSDF(p + e.yyx) - sceneSDF(p - e.yyx)\n    ));\n}\n\nfloat raymarch(vec3 p, vec3 d) {\n    float dist = 0.0;\n    \n    for(int i = 0; i < OBJECT_ITERATIONS; i++) {\n        dist += sceneSDF(p + d * dist);\n    }\n    \n    return dist;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 camPos = getCamPos(iMouse.xy / iResolution.xy);\n    vec3 camDir = getCamDir(fragCoord, camPos, iResolution.xy);\n    \n    float hitDist = raymarch(camPos, camDir);\n    vec3 hitPos = camPos + camDir * hitDist;\n    vec3 hitNml = sceneNormal(hitPos);\n    \n    vec3 lightDir = getLightDir();\n    float diffuse = dot(lightDir, hitNml) * 0.5 + 0.5;\n    if (isnan(diffuse)) diffuse = 0.0;\n    \n    fragColor = vec4(\n        vec3(diffuse),\n        hitDist\n    );\n}","name":"Buffer B","description":"","type":"buffer"}]}