{"ver":"0.1","info":{"id":"4ltSzj","date":"1480597389","viewed":236,"name":"Rotating pixels","username":"pixartist","description":"Space: Clear\nR: reset\nMouse: paint","likes":8,"published":1,"flags":48,"usePreview":0,"tags":["rotatingpixels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159265359;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n    float angle = atan(col.y, col.x) / pi;\n    \n\tfragColor = vec4(angle,abs(col.b) * 3.0,  -angle , 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float pi = 3.14159265359;\nconst int r = 1;\nconst int r2 = r*r;\nconst float drag = 0.001;\nconst float nbStrength = 0.1;\nint kA=65,kB=66,kC=67,kD=68,kE=69,kF=70,kG=71,kH=72,kI=73,kJ=74,kK=75,kL=76,kM=77,kN=78,kO=79,kP=80,kQ=81,kR=82,kS=83,kT=84,kU=85,kV=86,kW=87,kX=88,kY=89,kZ=90;\nint k0=48,k1=49,k2=50,k3=51,k4=52,k5=53,k6=54,k7=55,k8=56,k9=57;\nint kSpace=32,kLeft=37,kUp=38,kRight=39,kDown=40,kCtrl=17;\n\n#define rd(x,y) texture(iChannel0, mod((fragCoord + vec2(x,y)) / iResolution.xy, vec2(1.0)))\nbool readKey(int key)\n{\n\tfloat keyVal = texture( iChannel3, vec2( (float(key)+.5)/256.0, .25 ) ).x;\n\treturn keyVal > 0.0;\n}\nfloat dNorm(float a)\n{\n    if(a < -pi)\n        a += 2.0 * pi;\n    if(a > pi)\n        a -= 2.0 * pi;\n    return a;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec3 dSelf = texture(iChannel0, uv).xyz;\n    float c = 0.0;\n    vec2 avg = vec2(0);\n    for(int x = -r; x <= r; x++)\n    {\n        for(int y = -r; y <= r; y++)\n        {\n            if((x!=0||y!=0)&&x*y<=r2)\n            {\n                avg += rd(x,y).xy;\n                c++;\n            }\n        }\n    }\n    avg /= c;\n    float angleMe = atan(dSelf.y, dSelf.x);\n    float angleAvg = atan(avg.y, avg.x);\n    float delta = dNorm(angleAvg - angleMe);\n    dSelf.b += delta * nbStrength * (abs(dSelf.b) + 1.0);\n\n    \n    if(iMouse.z > 0.0)\n    {\n        vec2 dMouse = normalize(iMouse.xy - fragCoord);\n        float angleMouse = atan(dMouse.y, dMouse.x);\n        delta = dNorm(angleMouse - angleMe);\n        dSelf.b += 1.0 * (delta / (1.0 + distance(fragCoord, iMouse.xy)));\n            \n    }\n    dSelf.b *= 1.0 - min(0.5, abs((drag*dSelf.b)));\n    angleMe += dSelf.b;\n    fragColor = vec4(cos(angleMe), sin(angleMe),dSelf.b,1.0);\n    if(readKey(kSpace))\n    {\n        fragColor = vec4(0.0);\n    }\n    if(iFrame < 10 || readKey(kR))\n    {\n        fragColor = texture(iChannel1, uv);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}