{"ver":"0.1","info":{"id":"mtdyW8","date":"1699155565","viewed":35,"name":"circles frac test","username":"SVWDesigner","description":"testing frac function and other things i learned from: \nhttps://www.youtube.com/watch?v=f4s1h2YETNY&t=907s","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["test","circles","frac","kishimisu"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0* fragCoord-iResolution.xy)/iResolution.y;\n    vec2 uvx = uv;\n    uv*=2.0;\n    uv-=0.5;\n    vec3 col = vec3(1,1,1);\n\n    \n    \n    for (float i = 0.0; i<3.0; i++){\n    uv= fract(uv*2.0)-0.5;\n\n\n    float le = length(uv);\n    le = abs(sin(le*8.0 + iTime*1.33));\n    le = smoothstep(0.0,6.0,le);\n    le = 0.01/le;\n    col*=0.8;\n    col += vec3(0.15, 0.0, 0.2);\n    col *= 0.5;\n    col += vec3(le,le,le) *0.5;\n    }\n    float le = length(uvx);\n    le = abs(sin(le*100.0 + iTime*10.0));\n    le = smoothstep(0.0,5.0,le);\n    le = 0.0025/le;\n    le = 0.5 + le*0.4;\n    col*= le;\n\n    col *=col.x;\n    col*=0.8;\n    col += vec3(0.15, 0.0, 0.2);\n    col *= 0.5;\n    col += vec3(le,le,le) *0.5;\n    if (col.x>0.8)\n    {\n    col.x=1.0;\n    col.z=0.9;\n    }\n    float dist = length(uvx);\n    dist = smoothstep(0.0,1.3,dist);\n    dist = 1.0-dist-0.125;\n    col *= dist;\n    dist = length(uvx);\n    col.x += dist*0.15;\n    col.z += dist*0.1;\n    \n    col.y = 0.01/col.y;\n    col.z = col.z*0.96 +0.05;\n    col.x *= length(uvx);\n    \n    float outer = smoothstep(1.42, 1.95, length(uvx));\n    outer = 1.0 - outer;\n    col *= outer;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}