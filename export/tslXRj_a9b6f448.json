{"ver":"0.1","info":{"id":"tslXRj","date":"1551711186","viewed":772,"name":"Raytracing Line Segment 3D","username":"bloxard","description":"The shortest distance between a ray and a line segment in 3D is calculated once, rather than calculating\nthe distance between a point and 3D line segment multiple times while stepping forward.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["distance","analytical","capsule","linesegment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Copyright Per Bloksgaard, 2019 - https://perbloksgaard.dk\n// The shortest distance between a ray and a line segment in 3D is calculated once, rather than calculating\n// the distance between a point and 3D line segment multiple times while stepping forward.\n\nfloat RayLineSegmentDistance(vec3 rP, vec3 rD, vec3 lS, vec3 lE)\n{\n\tfloat bL = length(lE-lS);\n\tvec3 bD = (lE-lS)/bL;\n\tvec3 tD = lS-rP;\n\tfloat aDb = dot(rD,bD);\n\tfloat aDt = dot(rD,tD);\n\tfloat bDt = dot(bD,tD);\n\tfloat u = (aDt-bDt*aDb)/(1.-aDb*aDb);\n\tfloat v = max(min(u*aDb-bDt,bL),0.);\n\tu = max(min(v*aDb+aDt,1e6),0.);\n\treturn length((rP+rD*u)-(lS+bD*v));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 s = (-iResolution.xy+2.*gl_FragCoord.xy)/iResolution.y;\n\tvec3 vCamPos = vec3(cos(iTime)*1.6,0.0,sin(iTime)*1.6);\n\tvec3 vCamTarget = vec3(cos(-iTime*0.21)*0.1,cos(iTime*0.12)*0.1,sin(iTime*0.15)*0.1);;\n\tvec3 vCamForward = normalize(vCamTarget-vCamPos);\n\tvec3 vCamRight = normalize(cross(vCamForward,vec3(0.,1.,0.)));\n\tvec3 vCamUp = normalize(cross(vCamRight,vCamForward));\n\tvec3 vRayDir = normalize(s.x*vCamRight+s.y*vCamUp+vCamForward*0.5);\n\n\tvec3 so = vec3(cos(0.174-iTime*0.747),sin(-0.33+iTime* 1.176),0.213+cos(0.3+iTime*1.713));\n\tvec3 sd = vec3(sin(0.433-iTime*1.723),cos(0.172+iTime*-1.331),0.635+sin(0.9-iTime*0.534));\n\t\n\tfloat dist = RayLineSegmentDistance(vCamPos, vRayDir, so, sd);\n\tfragColor = vec4(vec3(1.-dist*3.5),1.);\n}","name":"Image","description":"","type":"image"}]}