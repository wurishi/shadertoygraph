{"ver":"0.1","info":{"id":"XsKSRG","date":"1465001127","viewed":525,"name":"Playstation 2 game startup","username":"anastadunbar","description":"Because why not?","likes":7,"published":1,"flags":8,"usePreview":0,"tags":["2d","test","sound","playstation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793238462643383279\n#define clamps(x) clamp(x,0.,1.)\nfloat rand(vec2 c){ return fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453); }\nfloat noise(vec2 p, float freq ){\n    float unit = 0.3/freq;\n    vec2 ij = floor(p/unit);\n    vec2 xy = mod(p,unit)/unit;\n    xy = .5*(1.-cos(PI*xy));\n    float a = rand((ij+vec2(0.,0.)));\n    float b = rand((ij+vec2(1.,0.)));\n    float c = rand((ij+vec2(0.,1.)));\n    float d = rand((ij+vec2(1.,1.)));\n    float x1 = mix(a, b, xy.x);\n    float x2 = mix(c, d, xy.x);\n    return mix(x1, x2, xy.y);\n}\nfloat s = 15.35; //Channel 2 seed\nvec2 perlinNoise(vec2 p){\n    vec2 n = vec2(0); //Out\n    float f = 4.; //Freq\n    float a = 1.; //Amp\n    float s = 1.; //Summation\n    const int L = 2;\n    for (int i = 0; i<L; i++){\n        n+=vec2(noise(p,f),noise(p+s,f))*a;\n        f*=1.5;\n        a*=.45;\n        s+=a;\n    }\n    return n/s;\n}\nfloat chessDist(vec2 uv) {\n    return max(abs(uv.x),abs(uv.y));\n}\nfloat triangleDist(vec2 p) {\n\treturn max(abs(p*sqrt(3.)).x+p.y,-p.y);\n}\nvec3 drawing(vec2 uv) {\n    float d = length(uv-vec2(0.5,0.))-.2;\n    d = min(d,chessDist(uv-vec2(0.,0.))-.2);\n    d = min(d,triangleDist(uv+vec2(0.5,0.))-.2);\n    return vec3(1.-clamps(d*200.));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (fragCoord.xy/iResolution.xy)-.5;\n\tuv.x /= iResolution.y/iResolution.x;\n    float time = iTime;\n    float l = min(1.,(time*1.8)-1.); //Lerping\n    vec3 o = vec3(0.); //Out\n    const float L = 10.;\n    if (l<1.) {\n        for(float i=0.;i<L;i++){\n            o += pow(drawing(mix(mix(perlinNoise(uv)-.5,uv,0.5),uv,min(1.,l+(i/(L*4.)))))*l,mix(vec3((i/L)*2.,.8,0.2),vec3(1.),clamps(l)))*(4.-(l*3.))*l;\n            if(l>0.){o += drawing(mix(uv*4.,uv,l+(perlinNoise(uv)*(i/(L*4.)))))*(1.-clamps(l))*pow(clamps(l),.5);}\n        }\n        o /= L;\n        o = mix(o*vec3(1.,1.2,1.5),o,clamps(1.-l));\n    }else{\n        o += drawing(uv);\n    }\n\tfragColor = vec4(o*clamps(4.-time),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"#define PI 3.141592653589793238462643383279\n#define clamps(x) clamp(x,0.,1.)\nfloat pow2(float x,float u) {\n    return pow(abs(x),u)*sign(x);\n}\nvec2 mainSound( in int samp, float time ) {\n    time -= .6;\n    vec2 s = vec2(0);\n    const float l = 5.;\n\tfor (float i=0.;i<l;i++) {\n\t\ts.x += pow2(sin(PI*time*(951.-(i*239.3))),3.+sin(time*5.*i))*clamps(1.-abs((time*10.)-(i*0.54)));\n        s.y += pow2(sin(PI*time*(949.-(i*239.6))),3.+sin(time*8.*i))*clamps(1.-abs((time*10.)-(i*0.57)));\n\t}\n    return vec2(s/l)*float(time<2.);\n}","name":"Sound","description":"","type":"sound"}]}