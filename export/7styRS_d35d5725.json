{"ver":"0.1","info":{"id":"7styRS","date":"1723599434","viewed":40,"name":"Pico8 Cam Smoooooth","username":"Farbs","description":"Like the c64 one but for pico8\nAdded motion blur for those of us with terrible webcams.","likes":1,"published":1,"flags":34,"usePreview":0,"tags":["retro","filter","palette","webcam","pico8"],"hasliked":0,"parentid":"3syBRz","parentname":"Pico8 Cam"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float resolution = 320.0;\nfloat ditherness = 0.5;\n\nvec3 palette[16] = vec3[16](vec3(0.0,0.0,0.0), vec3(0.113725490196,0.16862745098,0.325490196078), vec3(0.494117647059,0.145098039216,0.325490196078), vec3(0.0,0.529411764706,0.317647058824), vec3(0.670588235294,0.321568627451,0.211764705882), vec3(0.372549019608,0.341176470588,0.309803921569), vec3(0.760784313725,0.764705882353,0.780392156863), vec3(1.0,0.945098039216,0.909803921569), vec3(1.0,0.0,0.301960784314), vec3(1.0,0.639215686275,0.0), vec3(1.0,0.925490196078,0.152941176471), vec3(0.0,0.894117647059,0.211764705882), vec3(0.160784313725,0.678431372549,1.0), vec3(0.513725490196,0.462745098039,0.611764705882), vec3(1.0,0.466666666667,0.658823529412), vec3(1.0,0.8,0.666666666667));\nvec3 pal( vec3 col, vec2 fragCoord )\n{\n    // find nearest two\n    float distA=1000.0;\n    float distB=1000.0;\n    vec3 a;\n    vec3 b;\n    int indexA = 0;\n    int indexB = 0;\n    for(int i=0;i<palette.length();i++)\n    {\n        float testDist = dot(abs(palette[i]-col),vec3(1.0,1.0,1.0));\n        if( testDist < distA )\n        {\n            distB = distA;\n            b = a;\n            indexB = indexA;\n            distA = testDist;\n            a = palette[i];\n            indexA = i;\n        }\n        else if( testDist < distB )\n        {\n            distB = testDist;\n            b = palette[i];\n            indexB = i;\n        }\n\t}\n    \n    // solid colour if target is fair bit further from B than from A\n    b = distA * (1.0 + ditherness) < distB ? a : b;\n\n    // stipple, ordered by index\n    return (mod(fragCoord.x,2.0) == mod(fragCoord.y,2.0)) == ( indexA < indexB ) ? a : b;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = floor(iResolution.x/resolution);\n    fragCoord=floor(fragCoord/scale);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // sample\n    vec3 col = texture(iChannel0,uv*scale).rgb * 2.0;\n    \n    // saturate it a bunch\n    // (comment some of these out if you want to tone it down)\n    //col *= col+0.5;\n    //col *= col+0.5;\n    //col *= col;\n    col = -2.0 * col * col * col + 3.0 * col * col * col;\n    col = min( max( col, 0.0 ), 1.0 );\n\n    // Palettize\n    col = pal(col, fragCoord);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = mix( texture(iChannel0, fragCoord / iResolution.xy), texture(iChannel1, fragCoord / iResolution.xy), 0.1 );\n\n}","name":"Buffer A","description":"","type":"buffer"}]}