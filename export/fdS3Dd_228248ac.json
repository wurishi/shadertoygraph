{"ver":"0.1","info":{"id":"fdS3Dd","date":"1618086763","viewed":71,"name":"Colourful spiral rotation","username":"Agneseion","description":"Just programmed something before going to bed. Not very inspired and my laptop doesn't want LINE_COUNT to be much higher than this (need to try with higher values on an actual GPU)...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["zoom","spiral","color","hypnotic","colour","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LINE_COUNT 512\n#define TWO_PI 6.28318530718\n#define PI 3.1459\n\nbool overlapsLine(float radius, float angle, int lineIndex)\n{\n    float angleAtTime = mod(radius + iTime + float(lineIndex), TWO_PI) - PI;\n    \n    radius /= 1.1 + cos(iTime * radius + angle + float(lineIndex));\n    \n    return (angleAtTime > angle - 0.0005 / radius && angleAtTime < angle + 0.0005 / radius);\n}\n\nvec3 getLineTint(int lineIndex)\n{\n    float p = float(LINE_COUNT * lineIndex) + iTime + float(lineIndex) / float(LINE_COUNT);\n    return .5 + .5 * sin(vec3(p, p + TWO_PI / 3.0, p + PI / 3.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float r = length(uv - .5) * (1.0 + sin(iTime));\n    float a = atan(uv.y - .5, uv.x - .5);\n\n    float linesIntersected = 0.0;\n\n    vec3 tintSum = vec3(0.0);\n    for (int i = 0; i < LINE_COUNT; i++)\n    {\n        if (overlapsLine(r, a, i))\n        {\n            tintSum += getLineTint(i);\n            linesIntersected += 1.0;\n        }\n    }\n\n    fragColor = vec4(tintSum / linesIntersected, 1.0);\n}","name":"Image","description":"","type":"image"}]}