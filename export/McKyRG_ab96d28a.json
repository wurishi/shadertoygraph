{"ver":"0.1","info":{"id":"McKyRG","date":"1732039571","viewed":25,"name":"Assignment 2.2 Triangles","username":"MocheFromage","description":"one triangle","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 u_vertices[3] = vec2[3](\n        vec2(0.2, 0.3),\n        vec2(0.3, 0.8),\n        vec2(0.7, 0.5)\n    );\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 color;\n    bool inside = true;\n    // Time varying pixel color\n    for(int i = 0; i < 3; i++){\n        vec2 v0 = u_vertices[i];\n        vec2 v1 = u_vertices[i < 2 ? (i+1) : 0];\n        float e = (uv.x - v0.x) * (v1.y - v0.y) - (uv.y - v0.y) * (v1.x - v0.x);\n        inside = inside && (e > 0.0);\n        color[i] = 5.0*e;\n    } \n\n    // Output to screen\n    fragColor = vec4(inside ? color : vec3(0.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}