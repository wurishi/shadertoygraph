{"ver":"0.1","info":{"id":"llt3Dj","date":"1471807499","viewed":883,"name":"BassCube","username":"hopskotchrainbow","description":"This features a pretty cool rotating cube thingy.","likes":4,"published":3,"flags":96,"usePreview":0,"tags":["volumetric","projection","visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CUBE_FOV 1.4\n#define CUBE_DIST 4.0\n#define CUBE_VOL 0.005\n#define WAVE_AMPLI 1.4\n#define BOX_SIZE 0.4\n#define MAX_DIST 4.2\n\nvoid rotateXY(inout vec2 vec, float angle) {\n    float rad = radians(angle);\n    vec2 res = vec2(vec.x*cos(rad)+vec.y*sin(rad),vec.x*sin(rad)-vec.y*cos(rad));\n    vec = res;\n}\nvoid rotateUV(inout vec3 vec, vec2 angle) {\n    rotateXY(vec.zy, angle.x);\n    rotateXY(vec.xz, angle.y);\n}\n\nfloat projectVolumetric(vec2 uv, inout vec4 backing) {\n    vec3 point = vec3(0.,0.,0.);\n    vec2 uvh = uv-0.5;\n    uvh *= 2.;\n    float volume = 0.;\n    vec3 increment = vec3(uvh/CUBE_FOV,1.);\n    increment = normalize(increment);\n    vec3 nrel = point;\n    float gi = 0.;\n    backing = vec4(0.,0.,0.,1.);\n    for (float i=0.; i<=MAX_DIST;i+=0.02) {\n        vec3 prel = point-vec3(0.,0.,CUBE_DIST);\n        rotateUV(prel, vec2(16.+iTime*24.,24.));\n        vec2 wc = prel.xy-0.5;\n        wc /= BOX_SIZE;\n        float rang = atan(prel.x,prel.y)/radians(360.);\n        float fdist = length(prel.xy);\n        vec4 ewave = texture(iChannel0,wc);\n        vec4 hwave = texture(iChannel0,vec2(rang,fdist/2.));\n        float en = BOX_SIZE+ewave.r*WAVE_AMPLI;\n        if (prel.x > -en && prel.x < en && prel.y > -en && prel.y < en && prel.z > -en && prel.z < en) {\n            volume += 0.0072;\n            nrel = prel;\n            gi = i;\n        }\n        point += increment*0.02;\n    }\n    volume = clamp(volume,0.,1.);\n    return volume;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 color = vec4(0.,0.,0.,1.);\n    float proj = projectVolumetric(uv,color);\n    vec4 n = texture(iChannel2,uv);\n    vec4 huvz = texture(iChannel0, vec2(uv.x,0.));\n    vec2 huv = uv+vec2(0,huvz.r);\n\tfragColor = vec4(mix(color.rgb,n.rgb,proj),1.0);\n    if (abs(huv.y-1.) <= 0.002) {\n        fragColor = vec4(1.,1.,1.,1.);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"MdjGzh","filepath":"https://soundcloud.com/blue-comet/geometrical-dominator-by-waterflame-full","previewfilepath":"https://soundcloud.com/blue-comet/geometrical-dominator-by-waterflame-full","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec2 pixsize = 1.0/iResolution.xy;\n    vec4 shiftc = texture(iChannel1,vec2(uv.x,uv.y-pixsize.y));\n    vec4 wavef = texture(iChannel0,vec2(uv.x,0.25));\n    fragColor = shiftc;\n    if (fragCoord.y <= 1.) {\n        fragColor = wavef;\n    }\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec2 coord = fragCoord.xy-iResolution.xy/2.;\n    coord /= max(iResolution.x,iResolution.y);\n    float maxAngle = radians(360.);\n    vec2 polar = vec2(atan(coord.x,coord.y)/maxAngle+0.5,length(coord));\n    vec2 apolar = vec2(cos(coord.x)/maxAngle,sin(coord.y)/maxAngle);\n    vec4 cl = texture(iChannel0,polar);\n    fragColor = vec4(cl.r,1.-cl.r,1.-cl.r,1.0);\n}","name":"Buf B","description":"","type":"buffer"}]}