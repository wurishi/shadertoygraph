{"ver":"0.1","info":{"id":"ltKyWG","date":"1537564996","viewed":149,"name":"Uncoiling","username":"PianiGiani","description":"This is my very first shader code.  Possibly not the most efficient code but - hey!, I'm still learning.  ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["lines","spirograph","coils"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n#define DST 0.001\n#define WD 1.5\n#define STP 5.\n#define RES 500.\n\nfloat Dline(vec2 p, vec2 a, vec2 b) {\n\t// line drawing function from BigWings\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float t = clamp(dot(pa,ba)/dot(ba,ba), 0.0, 1.1);\n    return length(pa-ba*t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    float va = (cos(iTime/6.)+.5)*20.;\n    float shape = 3.+(cos(iTime/35.)*2.);\n    \n    float col=0.0;\n    float i=0.0;\n    for(int i2=0;i2<1000;i2++)\n    {\n        i+=shape;\n        if (i >= 100.) {break;}\n        float r=va;\n        float rr=120.;\n        float p=va;\n        float ii=i+shape;\n    \tvec2 myA = vec2((r+rr)*cos(i)+p*cos(r+rr)*i/r,(r+rr)*sin(i)+p*sin(r+rr)*i/r);\n    \tvec2 myB = vec2((r+rr)*cos(ii)+p*cos(r+rr)*ii/r,(r+rr)*sin(ii)+p*sin(r+rr)*ii/r);\n    \n    \tfloat d = Dline(uv, myA/RES, myB/RES);\n   \t \tfloat m = S(WD/200., (WD/200.)-(0.02-(i/9000.)), d)*WD;\n    \tcol = max(m,col);\t\n    }\n    fragColor = vec4(vec3(col*(cos(iTime/15.)/2.+1.2),col*(sin(iTime/23.)/2.+1.2), col*(sin(iTime/10.)/2.+1.2)),1.0);\n}","name":"Image","description":"","type":"image"}]}