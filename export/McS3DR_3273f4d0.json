{"ver":"0.1","info":{"id":"McS3DR","date":"1704214465","viewed":25,"name":"Rita's 1st rectangle: color cycl","username":"ritaturk","description":"me learning from scratch here","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cyclingrectangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 point, float angle) {\n    float cosA = cos(angle);\n    float sinA = sin(angle);\n    \n    return vec2( point.x * cosA - point.y * sinA,\n                 point.x * sinA + point.y * cosA);\n}\n\nfloat Band(float t, float start, float end, float blur) {\n\n\n    vec2 op = vec2(start, end); // Point to be rotated\n\n    float step1 = smoothstep(op.x-blur, op.x+blur, t);\n    float step2 = smoothstep(op.y+blur, op.y-blur, t);\n    \n    return step1*step2;\n}\n    \nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur) {\n\n    float rotationAngle = radians(iTime*180.);  // Angle in radians\n    vec2 rp = rotate(uv, rotationAngle);\n    float band1 = Band(rp.x, left, right, blur);\n    float band2 = Band(rp.y, bottom, top, blur);\n   \n    return (band1*band2);\n }\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    float t = iTime;\n    \n    vec3 col = vec3(0.);\n   \n    float mask = 0.0;\n   \n   \n   float x = (uv.x);\n    float m = sin(t+x*8.0)*.1;\n    \n   float y = uv.y-m;\n   \n\n    \n   mask = Rect(vec2(x, y), -.5, .5, -.1, .1, .08);\n     //col = vec3(1., 1., 1.)*mask; \n  \n    col = vec3(0.7 + 0.5*cos(iTime+uv.xyx+vec3(0,4,8)))*mask; //Time varying pixel color\n           \n    // Output the color\n    fragColor = vec4(col, 1.0);\n }","name":"Image","description":"","type":"image"}]}