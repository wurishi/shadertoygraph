{"ver":"0.1","info":{"id":"7dGfW1","date":"1658084092","viewed":119,"name":"Multi braids","username":"rodgzilla","description":"Formula for n strand braids, with n being odd, If n is even some collision appear.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["braids"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time 1. * iTime\n#define ZPOS time\n\nfloat PI = acos(-1.);\n\n\nfloat cyl(vec3 p, vec3 c){\n  return length(p.xy - c.xy) - c.z;\n}\n\n\nfloat braid(vec3 p, float m, float r, float n, float xm, float ym) {\n    float d = 10.;\n    vec3 p1 = p;\n    vec3 p2 = p;\n    vec3 p3 = p;\n\n\n    for (float i = 0.; i < n; i += 1.) {\n        vec3 pl = p;\n        pl.z += (i * 2. * PI) / (m * n);\n        pl.x += xm * sin(pl.z * m);\n        pl.y += ym * sin(pl.z * m * (n - 1.));\n        \n        d = min(d, cyl(pl, vec3(0, 0, r)));\n    }\n\n    return d;\n}\n\n\nfloat map(vec3 p) {\n    float d = 1000.;\n\n    d = min(d, braid(p.xyz - vec3(0, -1, 0), 0.2 , .014, 13., .95, 0.2));\n    \n    return d;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n\n  vec3 col = vec3(0);\n  vec3 ro = vec3(0, 0., ZPOS);\n  vec3 rd = normalize(vec3(uv.x, uv.y, 1.));\n\n  float d = 0.;\n  vec3 glow = vec3(0);\n\n  for (int i = 0; i < 100; i++) {\n    vec3 p = ro + d * rd;\n    float ds = map(p);\n    \n    if (ds < 0.01 || ds > 50.) {\n      break;\n    }\n    d += ds * 1.;\n  }\n  \n  vec3 p = ro + d * rd;\n  vec2 e = vec2(0.01, 0);\n  vec3 n = normalize(map(p) - \n    vec3(\n      map(p - e.xyy),\n      map(p - e.yxy),\n      map(p - e.yyx)\n    )\n  );\n\n  vec3 lp = ro;\n  vec3 tl = lp - p;\n  vec3 tln = normalize(tl);\n  float dif = dot(tln, n);\n  \n  col = vec3(dif);\n  fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}