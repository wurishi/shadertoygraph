{"ver":"0.1","info":{"id":"4t3Gzs","date":"1470783257","viewed":148,"name":"Basic rotating circle","username":"plafone","description":"Spinning circle usefull for loading screen or similar","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","circle","rotate","ui"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 circle(vec2 uv, vec2 pos, float rad, vec3 color) {\n\tfloat d = length(pos - uv) - rad;\n\tfloat t = clamp(d, 0.0, 1.0);\n    return vec4(color, 1.0 - t);\n}\n\nvec3 rgb(float r, float g, float b) {\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Parameters\n    vec3 backCol = rgb(133.0, 224.0, 224.0);\n    vec3 backCirCol = rgb(0.0, 75.0, 102.0);\n    vec3 rotCirCol = rgb(204.0, 255.0, 0.0);\n    \n\tfloat radiusRotM = 0.04;\n    float radiusBackM = 0.2;\n\n   \tvec2 uv = fragCoord.xy;\n\tfloat radiusRot = radiusRotM * iResolution.y;\n    float radiusBack = radiusBackM * iResolution.y;\n    \n    //Play around with this magic numbers to achieve a different rotation\n    float c=cos(iTime * 5.0 + cos(iTime * 5.0)*.5) * 90.0;\n    float s=sin(iTime * 5.0 + cos(iTime * 5.0)*.5) * 90.0;\n    vec2 center = iResolution.xy * 0.5;\n    vec2 centerRot = center + vec2(s, c); //clockwise\n    \n    // Background\n\tvec4 back = vec4(backCol, 0.0);\n\t\n\t// Circles\n\tvec4 rotCircle = circle(uv, centerRot, radiusRot, rotCirCol);\n    vec4 backCircle = circle(uv, center, radiusBack, backCirCol);\n\t\n    vec4 circleColor = mix(back, backCircle, backCircle.a);\n\tfragColor = mix(circleColor, rotCircle, rotCircle.a);\n}","name":"Image","description":"","type":"image"}]}