{"ver":"0.1","info":{"id":"3dXcRr","date":"1583949116","viewed":113,"name":"Water spiral #2","username":"Koztar","description":"Water spiral #2","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\nfloat sphere(vec3 p, float t)\n{   \n\treturn length(p)-t;\n}\n\nfloat trace (vec3 o,vec3 r)\n{\n    float t = mix(1.0,3.0,sin(time*0.5));\n    for(int i=0;i<100;i++)\n    {\n        vec3 p = o+r*t;\n        vec3 q = fract(p)*2.0 -1.0;\n        float d = sphere(q-vec3(0,0,0),0.75);\n\n        t+=d*0.5;\n    }\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n    uv-= 0.5;\n    uv/= vec2(iResolution.y/iResolution.x,1.0);\n\t\n    float u = length(uv);\n\tfloat a = atan(iResolution.y, iResolution.x);\n\tfloat v = sin(10.0*(sqrt(u)-0.02*a-0.3*time));\n    \n    vec3 r = normalize(vec3(uv,0.1));\n    float tt = time*0.5;\n    r.xy *= mat2(cos(v),sin(v),-sin(v),cos(v)); \n    vec3 o = vec3(0,0,tt);\n\n    float t = trace(o,r);\n\n    float fog = 0.5/(1.0+t*t*1.0); \n    fragColor = vec4(vec3(fog+vec3(0,0,0.3)),1.0);\n}","name":"Image","description":"","type":"image"}]}