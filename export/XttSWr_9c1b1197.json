{"ver":"0.1","info":{"id":"XttSWr","date":"1479019407","viewed":159,"name":"bp Rotation","username":"blackpolygon","description":"Grid of circles that zooms in and rotate ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["zoom","patterns","loop","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: blackpolygon\n// Title: Rotation\n\n#define PI 3.14159265359\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat circle(in vec2 _st, in float _radius, in float sinut){\n    vec2 l = _st-vec2(0.5);\n    return 1.-smoothstep(_radius-((_radius) * sinut),\n                         _radius+(_radius   *1.716),\n                         dot(l,l)*4.912);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/min(iResolution.x,iResolution.y);\n    st.x -= 0.35;\n    \n    float sinut = sin(iTime);\n    vec3 color = vec3(st.x,abs(sinut),st.y);\n    \n    st -= vec2(0.5);\n    st = rotate2d( sin(iTime/3.)*PI) * st;\n\t\n    float yy = iResolution.x/5000. * floor(sinut*200.);\n    st *= yy;   \n    st = fract(st); \n\n    float ww = circle(st,0.8, sinut);\n    color *= vec3(ww);\n    \n    \t \n\tfragColor = vec4(color,1);\n}","name":"Image","description":"","type":"image"}]}