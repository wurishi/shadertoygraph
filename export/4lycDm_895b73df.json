{"ver":"0.1","info":{"id":"4lycDm","date":"1536462930","viewed":149,"name":"Practice#1","username":"lambmeow","description":"idk what this is","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope","polar","practice","killme"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv *= 2.;\n     uv.x += sin(uv.y  / 100. + time ) ;\n    vec2 pos = vec2(0.5)-uv;\nfloat r = length(pos)*2.0;\nfloat a = atan(pos.y,pos.x);\n    vec3 res= vec3(0.);\n    for(int i = 0; i < 3; i++){\n    float c = r * sin(a - time+ float(i)); \n    float x = (r - c * sin(uv.x * a / c -time ));\n    float y = fract(c - x + float(i) -time/10.) * 10. - 3.7;\n    res += 1./vec3(tan(y + time), atan(c-y + x), x);\n    }   \n\tfragColor = vec4(res, 1.0);\n}","name":"Image","description":"","type":"image"}]}