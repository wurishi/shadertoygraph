{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define PI\t3.14159265359\n#define PI2\t( PI * 2.0 )\n\nvec2 rotate( in vec2 p, in float t )\n{\n\treturn p * cos( -t ) + vec2( p.y, -p.x ) * sin( -t );\n}   \n\nvec3 rotateX( in vec3 p, in float t )\n{\n    p.yz = rotate( p.yz, t );\n    return p;\n}\n\nvec3 rotateY( in vec3 p, in float t )\n{\n    p.zx = rotate( p.zx, t );\n    return p;\n}\n\nvec3 rotateZ( in vec3 p, in float t )\n{\n\tp.xy = rotate( p.xy, t );\n    return p;\n}\n\nstruct Mesh\n{\n    vec3 a;\n    vec3 b;\n    vec3 c;\n};\n\nconst float sepT = 8.0;\nconst float sepR = 10.0;\nconst float radT = 0.2;\nconst float radR = 0.5;\nconst float thetaT = PI2 / sepT;\nconst float thetaR = PI2 / sepR;\n\nMesh genTorus( in int idx )\n{\n    float i = float( idx );\n    float iT0 = mod( i, sepT );\n    float iR0 = floor( i / sepT );\n    float iT1 = iT0 + 1.0;\n    float iR1 = iR0 + 1.0;\n    float rad0 = radR + radT * cos( iT0 * thetaT );\n    float rad1 = radR + radT * cos( iT1 * thetaT );\n    float sin0 = sin( iR0 * thetaR );\n    float sin1 = sin( iR1 * thetaR );\n    float cos0 = cos( iR0 * thetaR );\n    float cos1 = cos( iR1 * thetaR );    \n    float h0 = radT * sin( iT0 * thetaT );\n    float h1 = radT * sin( iT1 * thetaT );    \n    //vec3 v0 = vec3( rad0 * sin0, h0, rad0 * cos0 );\n    vec3 v1 = vec3( rad1 * sin0, h1, rad1 * cos0 );\n    vec3 v2 = vec3( rad0 * sin1, h0, rad0 * cos1 );\n    vec3 v3 = vec3( rad1 * sin1, h1, rad1 * cos1 );\n    //if (idx < int( sepT * sepR ) ) return Mesh( v0, v1, v2 );\n    return Mesh( v3, v2, v1 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = ( 2.0 * fragCoord.xy - iResolution.xy ) / iResolution.y;\n    vec3 rd = normalize( vec3( p, -1.5 ) );\n\tvec3 ro = vec3( 0.0, -0.15, 0.8 + 0.1 * sin( iTime * 0.5 ) );\n    vec3 light = normalize( vec3( 0.5, 0.8, 3.0 ) );\n    float theta;\n\ttheta = -0.7;\n\tro = rotateX( ro, theta );\n\trd = rotateX( rd, theta );       \n    light = rotateX( light, theta );    \n\ttheta = 0.2 * sin( iTime * 0.3 );\n\tro = rotateZ( ro, theta );\n\trd = rotateZ( rd, theta );       \n    light = rotateZ( light, theta );    \n\ttheta = -iTime * 0.8;\n\tro = rotateY( ro, theta );\n\trd = rotateY( rd, theta );       \n    light = rotateY( light, theta );    \n        \n    vec3 col = vec3( 0.2, 0.2, 1.0 ) * ( 0.5 + 0.3 * p.y );\n\n    vec3 far =  ro + rd * 10.0;\n    vec3 nor;\n    float z = 2.0;\n    for (int i = 0; i <int( sepT * sepR ); i++ )\n   \t{\n\t\tMesh m = genTorus( i );\n        vec3 n = cross( m.c - m.a, m.b - m.a );\n\t    float a = dot( ro - m.a, n );\n   \t\tfloat b = dot( far - m.a, n );\n        if ( a * b < 0.0 )\n        {\n    \t\tfloat t = abs( a ) / ( abs( a ) + abs( b ) );\n\t\t\tvec3 p = ro + ( far - ro ) * t;\n            if ( dot( cross( m.b - m.a, n ), p - m.a ) > 0.0 ) \n            if ( dot( cross( m.c - m.b, n ), p - m.b ) > 0.0 ) \n            if ( dot( cross( m.a - m.c, n ), p - m.c ) > 0.0 )\n        \t{\n            \tif ( z > t )\n                {\n                  \tz = t;\n                    nor = normalize( n );\n                }\n            }                                \n        }            \n    }\n    if (z < 2.0)\n    {     \n    \tcol = vec3( 1.0, 0.5 + 0.2 * sin( iTime * 1.5 ), 0.2 );\n        if ( dot( nor, -rd ) < 0.0 )\n            col = vec3( 0.5 + 0.5 * sin( iTime ), 1.0, 0.5 + 0.5 * sin( iTime ) );\n        float br = abs( dot( nor, light ) );\n       \tbr = clamp( ( br + 0.5 ) * 0.7, 0.3, 1.0 );        \n        float fog = min( 1.0, 0.01 / z / z );       \n       \tcol *= br * fog;\n    }\n    fragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldSXD1","date":"1411481733","viewed":255,"name":"Torusã€€Fan","username":"gaz","description":"3d","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d","polygon"],"hasliked":0,"parentid":"","parentname":""}}