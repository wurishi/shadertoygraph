{"ver":"0.1","info":{"id":"Xs2cDz","date":"1491662763","viewed":1427,"name":"Simple Parallax effect","username":"robobo1221","description":"Just a simple parallax shader i made. Hope you like it!","likes":12,"published":3,"flags":0,"usePreview":1,"tags":["simple","parallax","effect","shader","shaders","robobo1221"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float steps = 128.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 texcoord = fragCoord.xy - iResolution.xy*0.5;\n\t\n\tvec3 color;\n    \n\tfor ( int i = 0; i < int(steps); i++ )\n\t{\n\t\t\n\t\tfloat depth = float(i) / steps;\n\t\tvec2 uv = texcoord;\n\t\t\n\t\tuv = uv / iResolution.y;\n        uv = uv * depth;\n\t\t\n\t\tcolor = vec3(texture(iChannel0, uv).r);\n\t\t\n\t\tif ( 1.0-dot(color, vec3(0.33333)) < depth)\n\t\t{\n\t\t\tbreak;\n        }\n\t}\n\t\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}