{"ver":"0.1","info":{"id":"4l2Xzd","date":"1445956359","viewed":816,"name":"Cyclotomic Trapezoids","username":"tomkh","description":"Non-periodic tiling based on cyclomatic trapezoids, derivation: [url]http://polycu.be/edit/?h=6j5zt6[/url]","likes":35,"published":1,"flags":0,"usePreview":0,"tags":["tiling","hierarchical","aperiodic","cyclotomic","trapezoids"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Non-periodic tiling based on cyclomatic trapezoids\n// (procedural texture and distance field)\n// by Tom @2015\n\n// Derivation: \n//    http://polycu.be/edit/?h=6j5zt6\n\n// Original shader:\n//    http://polycu.be/edit/?h=o8VzY5\n\n// Background:\n//   The tiling is derived from volume-preserving\n//   substitution rules able to produce non-periodic\n//   tilings.\n\n// For more info visit tilings encyclopedia:\n//   https://tilings.math.uni-bielefeld.de/substitution/cyclotomic-trapezoids-7-fold/\n\n#define REC0(nx,ny,nd) n=vec3(nx,ny,nd);d=dot(n.xy,q)-n.z;if(d<0.){\n#define REC1 }else{\n#define END }\n#define LEAF0(nx,ny,nd,type,tile) REC0(nx,ny,nd) c=type; c2=tile; m=u2t[tile];\n#define LEAF1(type,tile) REC1 c=type; c2=tile; m=u2t[tile];\n\n#define P 6\n#define N 5\n#define DIST(type,size) for(int i=0; i<size; ++i) { vec3 n = edge[type*N+i]; sd = min(sd, dot(n.xy,q)-n.z); }\n\nmat3 u2t[53];\nvec3 edge[P*N];\n\nvoid init()\n{\n// Prototile transformation tables\nu2t[0] = mat3(2.801937736,0,0,0,2.801937736,0,0,0,1);\nu2t[1] = mat3(-2.801937736,1e-9,0,-1e-9,-2.801937736,0,1.900968867,-3.947402529,1);\nu2t[2] = mat3(2.801937735,-1e-9,0,1e-9,2.801937735,0,-0.900968867,3.947402527,1);\nu2t[3] = mat3(-2.801937736,0,0,0,2.801937736,0,2.801937735,0,1);\nu2t[4] = mat3(2.801937736,0,0,0,2.801937736,0,0,0,1);\nu2t[5] = mat3(2.52445867,-1.215715222,0,1.215715222,2.52445867,0,0.500000001,2.190643134,1);\nu2t[6] = mat3(2.52445867,1.215715223,0,1.215715223,-2.52445867,0,1.400968869,-6.138045662,1);\nu2t[7] = mat3(-2.52445867,1.215715222,0,-1.215715222,-2.52445867,0,1.400968868,-6.138045662,1);\nu2t[8] = mat3(-0.623489802,-2.731687307,0,2.731687307,-0.623489802,0,2.024458669,0.974927912,1);\nu2t[9] = mat3(-2.524458669,-1.215715221,0,-1.215715221,2.524458669,0,2.301937736,2.190643133,1);\nu2t[10] = mat3(-2.524458669,-1.215715221,0,-1.215715221,2.524458669,0,1.900968868,3.947402527,1);\nu2t[11] = mat3(-0.623489802,2.731687307,0,-2.731687307,-0.623489802,0,0.5,-2.190643134,1);\nu2t[12] = mat3(2.801937736,1e-9,0,-1e-9,2.801937736,0,-0.222520934,0.974927911,1);\nu2t[13] = mat3(2.801937735,1e-9,0,-1e-9,2.801937735,0,-0.623489802,2.731687306,1);\nu2t[14] = mat3(-0.623489802,2.731687307,0,-2.731687307,-0.623489802,0,0.900968868,-3.947402529,1);\nu2t[15] = mat3(-2.52445867,-1.215715222,0,1.215715222,-2.52445867,0,5.04891734,0,1);\nu2t[16] = mat3(-2.524458669,1.215715222,0,1.215715222,2.524458669,0,4.048917339,-1e-9,1);\nu2t[17] = mat3(-2.524458669,-1.215715222,0,1.215715222,-2.524458669,0,5.449886207,-1.756759394,1);\nu2t[18] = mat3(2.801937735,-1e-9,0,-1e-9,-2.801937735,0,-1.123489802,-4.922330439,1);\nu2t[19] = mat3(-0.623489802,-2.731687306,0,-2.731687306,0.623489802,0,-2.524458669,3.165571045,1);\nu2t[20] = mat3(2.52445867,1.215715221,0,1.215715221,-2.52445867,0,0.5,-2.190643134,1);\nu2t[21] = mat3(-2.52445867,-1.215715222,0,-1.215715222,2.52445867,0,0.5,2.190643134,1);\nu2t[22] = mat3(2.52445867,1.215715223,0,1.215715223,-2.52445867,0,1.400968869,-6.138045662,1);\nu2t[23] = mat3(-2.52445867,1.215715222,0,-1.215715222,-2.52445867,0,1.400968868,-6.138045662,1);\nu2t[24] = mat3(0.623489802,-2.731687307,0,-2.731687307,-0.623489802,0,-0.222520934,0.974927912,1);\nu2t[25] = mat3(0.623489802,-2.731687306,0,-2.731687306,-0.623489802,0,-0.623489802,2.731687306,1);\nu2t[26] = mat3(2.52445867,-1.215715222,0,1.215715222,2.52445867,0,-0.5,2.190643134,1);\nu2t[27] = mat3(-2.801937736,-1e-9,0,-1e-9,2.801937736,0,4.826396405,0.974927913,1);\nu2t[28] = mat3(2.52445867,-1.215715222,0,1.215715222,2.52445867,0,-0.900968868,3.947402529,1);\nu2t[29] = mat3(-2.801937736,0,0,0,2.801937736,0,4.425427538,2.731687307,1);\nu2t[30] = mat3(0.623489802,2.731687307,0,2.731687307,-0.623489802,0,1.400968868,-1.756759395,1);\nu2t[31] = mat3(-2.801937736,-1e-9,0,-1e-9,2.801937736,0,2.801937736,1e-9,1);\nu2t[32] = mat3(-2.801937736,1e-9,0,-1e-9,-2.801937736,0,3.301937736,-2.190643134,1);\nu2t[33] = mat3(2.52445867,1.215715221,0,-1.215715221,2.52445867,0,-0.222520934,0.974927913,1);\nu2t[34] = mat3(-2.52445867,1.215715221,0,1.215715221,2.52445867,0,3.02445867,0.974927913,1);\nu2t[35] = mat3(-2.801937736,1e-9,0,-1e-9,-2.801937736,0,3.702906604,-3.947402529,1);\nu2t[36] = mat3(2.52445867,1.21571522,0,-1.21571522,2.52445867,0,-0.623489802,2.731687307,1);\nu2t[37] = mat3(2.52445867,-1.21571522,0,-1.21571522,-2.52445867,0,-1.123489802,-4.922330441,1);\nu2t[38] = mat3(2.801937735,-1e-9,0,1e-9,2.801937735,0,-0.900968868,3.947402528,1);\nu2t[39] = mat3(0.623489802,-2.731687306,0,-2.731687306,-0.623489802,0,-4.271438273,0.974927913,1);\nu2t[40] = mat3(-2.801937736,0,0,0,-2.801937736,0,0.5,-2.190643134,1);\nu2t[41] = mat3(2.52445867,-1.215715221,0,-1.215715221,-2.52445867,0,0.5,-2.190643134,1);\nu2t[42] = mat3(2.801937736,0,0,0,2.801937736,0,0,0,1);\nu2t[43] = mat3(-2.801937736,0,0,0,2.801937736,0,2.801937735,0,1);\nu2t[44] = mat3(-2.801937736,0,0,0,-2.801937736,0,3.301937735,-2.190643134,1);\nu2t[45] = mat3(-2.801937736,0,0,0,-2.801937736,0,0.900968868,-3.947402529,1);\nu2t[46] = mat3(2.52445867,-1.215715222,0,-1.215715222,-2.52445867,0,0.900968868,-3.947402529,1);\nu2t[47] = mat3(2.801937736,0,0,0,-2.801937736,0,-0.900968868,-3.947402529,1);\nu2t[48] = mat3(-2.801937736,0,0,0,-2.801937736,0,3.702906604,-3.947402529,1);\nu2t[49] = mat3(0.623489802,2.731687308,0,2.731687308,-0.623489802,0,5.449886208,-1.756759395,1);\nu2t[50] = mat3(0.623489801,2.731687307,0,2.731687307,-0.623489801,0,5.04891734,1e-9,1);\nu2t[51] = mat3(2.801937737,0,0,0,2.801937737,0,-0.900968868,3.947402529,1);\nu2t[52] = mat3(0.623489802,-2.731687308,0,-2.731687308,-0.623489802,0,-4.271438274,0.974927912,1);\nedge[0] = vec3(0,-1,0);\nedge[1] = vec3(0.974927912,0.222520934,0);\nedge[2] = vec3(-0.974927912,0.222520934,-0.974927912);\nedge[5] = vec3(0,-1,0);\nedge[6] = vec3(0.974927912,0.222520934,0);\nedge[7] = vec3(-0.433883739,0.900968868,-2.190643134);\nedge[8] = vec3(-0.974927912,-0.222520934,-0.974927912);\nedge[10] = vec3(0,-1,0);\nedge[11] = vec3(0.974927912,0.222520934,0);\nedge[12] = vec3(0,1,-1.756759395);\nedge[13] = vec3(-0.974927912,0.222520934,-1.756759395);\nedge[15] = vec3(0,-1,0);\nedge[16] = vec3(0.974927912,0.222520934,0);\nedge[17] = vec3(-0.433883739,0.900968868,-2.190643134);\nedge[18] = vec3(-0.974927912,0.222520934,-1.756759394);\nedge[20] = vec3(0,-1,0);\nedge[21] = vec3(0.974927912,-0.222520934,0);\nedge[22] = vec3(0.433883739,0.900968868,-1.756759395);\nedge[23] = vec3(-0.433883739,0.900968868,-2.190643134);\nedge[24] = vec3(-0.974927912,-0.222520934,-0.974927912);\nedge[25] = vec3(0,-1,0);\nedge[26] = vec3(0.781831483,-0.623489802,0);\nedge[27] = vec3(0.433883739,0.900968868,-1.756759395);\nedge[28] = vec3(-0.433883739,0.900968868,-2.190643134);\nedge[29] = vec3(-0.974927912,-0.222520934,-0.974927912);\n}\n\nfloat get_dist(int c,vec2 q) \n{\n   float sd = 1.;\n   if (c<4) {\n      if (c<2) {\n         if (c==0) { DIST(0,3) }\n         else { DIST(1,4) }\n      } else {\n         if (c==2) { DIST(2,4) }\n         else { DIST(3,4) }\n      }\n   } else {\n      if (c==4) { DIST(4,5) }\n      else { DIST(5,5) }\n   }\n   return sd;\n}\n\nfloat get_dist2(int c,vec2 q)\n{\n   float sd = get_dist(c,q);\n   return min(sd,.05)*2.+min(sd,.2)*4.; //smoothstep(0.,1.,sd);\n}\n\nvec3 rgb(int r,int g,int b) {\n   const float f = 1./255.;\n   return vec3(float(r)*f,float(g)*f,float(b)*f);\n}\n\nvec3 get_color(int c)\n{\n   // TODO: auto-generate this\n   float sd = 1.;\n   if (c<4) {\n      if (c<2) {\n         if (c==0) return rgb(252,145,43);\n         else return rgb(255,205,102);\n      } else {\n         if (c==2) return rgb(56,56,108);\n         else return rgb(189,201,228);\n      }\n   } else {\n      if (c==4) return rgb(107,115,163);\n      else return rgb(106,106,106);\n   }\n   return vec3(0);\n}\n\nvec3 shade(int c,vec2 q,vec2 q0,mat3 m2)\n{\n   float sd = get_dist2(c,q);\n   vec3 base = get_color(c);\n   base -= texture(iChannel0,q0*.01*iResolution.y).xyz*.1; //add some grain-effect\n\n   base *= sd; //min(1.,sd*1.4);\n   const float eps = .0001;\n   vec3 norm = normalize(vec3(\n       get_dist2(c,vec2(m2*vec3(q0.x+eps,q0.y,1)))\n      - get_dist2(c,vec2(m2*vec3(q0.x-eps,q0.y,1))),\n       eps*2.,\n       get_dist2(c,vec2(m2*vec3(q0.x,q0.y+eps,1)))\n      - get_dist2(c,vec2(m2*vec3(q0.x,q0.y-eps,1)))));\n   base += max(0.,dot(norm,normalize(vec3(.1,.1,.5))))*.2;\n   return base;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   init();\n\n   vec2 q, q0;\n\n   vec3 n;\n   int c2;\n   float d;\n   vec3 last_iter_color;\n   mat3 m, m2 = mat3(1);\n    \n   int c = 2; // starting prototile\n   \n   float f_iterations = (iMouse.z > 0.0) ? iMouse.y*6./iResolution.y+1. : 4.;\n   int iterations = int(ceil(f_iterations));\n   f_iterations = fract(f_iterations);\n   if (f_iterations==0.) f_iterations=1.;\n\n   // Transform to tile space\n   float scale = .5/iResolution.y;\n   q0 = (fragCoord - iResolution.xy*.5)*vec2(scale,-scale);\n   q0 += vec2(.9,-.7);\n\n   // Animate panning:\n   float anim = (iMouse.z > 0.0) ? 0. : iTime;\n   q0 += vec2(cos(anim*.4),sin(anim*.3))*.1;\n   \n   q = q0;\n\n//-----------------------------------------------------------\n// Tiling code automatically (partially) generated\n\nfor(int it=0; it<6; ++it) {\nif (it >= iterations) break;\nif (c < 4) {\nif (c < 2) {\nif (c == 0) {\n// prototile 0\nREC0(0.974927912,0.222520934,0.347947743)\n LEAF0(0.433883739,-0.900968868,0.781831482,1,0)\n REC1\n  LEAF0(0,-1,1.408811651,4,1)\n  LEAF1(0,2)\n  END\n END\nREC1\n LEAF0(0.433883739,0.900968868,-0.347947744,4,1)\n LEAF1(3,3)\n END\nEND\n} else {\n// prototile 1\nREC0(0.781831482,0.623489802,0)\n REC0(0.781831482,0.623489802,-0.347947744)\n  LEAF0(0,-1,1.408811651,4,5)\n  LEAF1(3,6)\n  END\n REC1\n  LEAF0(0.433883739,-0.900968868,0.781831482,1,4)\n  REC1\n   LEAF0(0.781831483,-0.623489802,1.408811651,4,5)\n   LEAF1(1,7)\n   END\n  END\n END\nREC1\n REC0(0.433883739,-0.900968868,0.781831482)\n  LEAF0(0.974927912,0.222520934,0.347947743,1,4)\n  LEAF1(2,8)\n  END\n REC1\n  LEAF0(0.433883739,-0.900968868,1.408811651,2,9)\n  LEAF1(0,10)\n  END\n END\nEND\n}\n} else {\nif (c == 2) {\n// prototile 2\nREC0(0,-1,0.974927912)\n REC0(-0.433883739,-0.900968868,0)\n  LEAF0(0.974927912,-0.222520934,0.781831482,1,11)\n  REC1\n   LEAF0(0.974927912,-0.222520934,1.408811651,2,14)\n   LEAF1(1,15)\n   END\n  END\n REC1\n  REC0(0.974927912,-0.222520934,0.781831482)\n   LEAF0(0,-1,0.347947743,1,11)\n   LEAF1(2,12)\n   END\n  REC1\n   LEAF0(0.781831482,-0.623489802,1.408811651,2,16)\n   LEAF1(2,17)\n   END\n  END\n END\nREC1\n REC0(-0.433883739,-0.900968868,0.626980169)\n  LEAF0(0.781831482,-0.623489802,1.408811651,2,16)\n  LEAF1(2,17)\n  END\n REC1\n  LEAF0(0.974927912,-0.222520934,0.781831482,0,13)\n  REC1\n   LEAF0(0.974927912,-0.222520934,1.129779226,1,18)\n   LEAF1(2,19)\n   END\n  END\n END\nEND\n} else {\n// prototile 3\nREC0(0.433883739,-0.900968868,1.408811651)\n REC0(0.433883739,-0.900968868,0.781831482)\n  LEAF0(0.974927912,0.222520934,0.347947743,1,20)\n  REC1\n   LEAF0(0.974927912,0.222520934,0.974927912,2,24)\n   LEAF1(1,25)\n   END\n  END\n REC1\n  REC0(0.974927912,0.222520934,0.974927912)\n   LEAF0(0.781831482,0.623489802,0,4,21)\n   LEAF1(2,26)\n   END\n  REC1\n   LEAF0(0,-1,0.347947743,1,25)\n   LEAF1(2,27)\n   END\n  END\n END\nREC1\n REC0(0.781831483,0.623489802,0)\n  REC0(0.781831483,-0.623489802,1.408811651)\n   LEAF0(0,-1,1.408811651,4,21)\n   LEAF1(1,22)\n   END\n  REC1\n   LEAF0(0.974927912,0.222520934,0.347947743,1,22)\n   LEAF1(3,23)\n   END\n  END\n REC1\n  LEAF0(0,-1,0.974927912,2,27)\n  REC1\n   LEAF0(0.974927912,0.222520934,0.974927912,0,28)\n   LEAF1(0,29)\n   END\n  END\n END\nEND\n}\n}\n} else {\nif (c == 4) {\n// prototile 4\nREC0(-0.433883739,-0.900968868,0.974927912)\n REC0(-0.433883739,-0.900968868,0.347947743)\n  REC0(0.974927912,-0.222520934,0.974927912)\n   LEAF0(0.974927912,-0.222520934,0.626980169,2,30)\n   LEAF1(1,31)\n   END\n  REC1\n   LEAF0(0,-1,0.781831483,0,32)\n   LEAF1(2,35)\n   END\n  END\n REC1\n  REC0(0.974927912,-0.222520934,0.974927912)\n   LEAF0(0.781831483,-0.623489802,0.781831483,2,33)\n   LEAF1(4,34)\n   END\n  REC1\n   LEAF0(0,-1,1.408811651,2,35)\n   LEAF1(2,39)\n   END\n  END\n END\nREC1\n REC0(-0.781831482,-0.623489802,0.626980169)\n  LEAF0(0,-1,1.408811651,4,34)\n  REC1\n   LEAF0(0.974927912,0.222520934,0.347947744,5,38)\n   LEAF1(2,39)\n   END\n  END\n REC1\n  LEAF0(0.781831483,-0.623489802,0.781831483,0,36)\n  REC1\n   LEAF0(0.781831483,-0.623489802,1.129779226,1,37)\n   LEAF1(5,38)\n   END\n  END\n END\nEND\n} else {\n// prototile 5\nREC0(0,-1,0.781831482)\n REC0(-0.433883739,-0.900968868,0.347947743)\n  REC0(0.974927912,0.222520934,0)\n   LEAF0(-0.974927912,0.222520934,0,0,40)\n   LEAF1(0,41)\n   END\n  REC1\n   LEAF0(0.974927912,-0.222520934,0.626980169,3,42)\n   REC1\n    LEAF0(0.974927912,-0.222520934,0.974927912,1,43)\n    LEAF1(0,44)\n    END\n   END\n  END\n REC1\n  REC0(0.974927912,0.222520934,0)\n   LEAF0(-0.974927912,0.222520934,0,0,40)\n   REC1\n    LEAF0(-0.433883739,-0.900968868,0.781831482,0,41)\n    LEAF1(2,46)\n    END\n   END\n  REC1\n   LEAF0(0.433883739,-0.900968868,0.781831482,3,42)\n   LEAF1(4,47)\n   END\n  END\n END\nREC1\n REC0(0,-1,1.408811651)\n  REC0(0.974927912,0.222520934,0)\n   LEAF0(-0.974927912,0.222520934,0,2,45)\n   REC1\n    LEAF0(-0.433883739,-0.900968868,1.408811651,2,46)\n    LEAF1(1,50)\n    END\n   END\n  REC1\n   LEAF0(0.974927912,-0.222520934,0.974927912,4,47)\n   LEAF1(2,48)\n   END\n  END\n REC1\n  REC0(0.974927912,-0.222520934,0.626980169)\n   LEAF0(-0.974927912,0.222520934,0,2,49)\n   LEAF1(1,50)\n   END\n  REC1\n   LEAF0(0.974927912,0.222520934,0.347947743,4,51)\n   LEAF1(2,52)\n   END\n  END\n END\nEND\n}\n}\n// Transform to prototile\nm2 = m * m2;\nq = vec2(m * vec3(q,1));\nif (it == iterations-2 && f_iterations < .997) {\n   last_iter_color = shade(c,q,q0,m2);\n}\n}\n//-----------------------------------------------------------\n\n   vec3 base = shade(c,q,q0,m2);\n   base = mix(last_iter_color, base, f_iterations);\n   base = pow(base,vec3(.7));\n   fragColor = vec4(base,1.);\n}\n","name":"Image","description":"","type":"image"}]}