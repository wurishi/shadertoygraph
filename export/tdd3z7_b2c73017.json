{"ver":"0.1","info":{"id":"tdd3z7","date":"1568137581","viewed":91,"name":"Spinning lines","username":"trianglPixl","description":"I kinda took it a bit far.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["line","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float edgeLength = 0.35;\nconst float edgeHalfLength = edgeLength / 2.0;\nconst float edgeThickness = 0.10;\n\nconst float scale = 0.005;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // never mind\n    \n    float angle = 3.141 / 4.0;\n    angle *= sin(iTime) * sin(iTime * 0.1) * 10.0;\n    float scaleTime = scale * (sin(iTime * 1.841252) * 0.35 + 1.0);\n    \n    vec2 uv = fragCoord;\n    uv -= vec2(iResolution.y);\n    uv *= scaleTime;\n    uv += vec2(sin(iTime), cos(iTime)) * 3.0 * sin(iTime * 0.25);\n    uv = vec2(uv.x * cos(angle) - uv.y * sin(angle),\n              uv.x * sin(angle) + uv.y * cos(angle));\n    \n    vec2 lineCoord = uv;\n    lineCoord.y /= 0.5;\n    lineCoord.x += 0.5 * floor(lineCoord.y);\n    lineCoord = fract(lineCoord) - vec2(0.5);\n    lineCoord.y *= 0.5;\n    \n    float coordDotLine = clamp(dot(lineCoord, vec2(1.0, 0.0)), -edgeHalfLength, edgeHalfLength);\n    float lineValue = distance(lineCoord, vec2(coordDotLine, 0.0));\n    lineValue = smoothstep(edgeThickness, edgeThickness - scale, lineValue);\n    \n    lineValue = clamp(lineValue + 0.5, 0.0, 1.0);\n    \n    vec3 color = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    color = mix(vec3(0.6), color, lineValue);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}