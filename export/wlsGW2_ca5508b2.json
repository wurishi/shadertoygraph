{"ver":"0.1","info":{"id":"wlsGW2","date":"1557766967","viewed":94,"name":"barycentric basketWeaving","username":"ollj","description":"barycenbtric weaves are tricky:\nbeta version is:\nhttps://www.shadertoy.com/view/tllGD2\nchild is:\nhttps://www.shadertoy.com/view/tlsGD2","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["hex","wallpapergroup","weave","p2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//self (weave beta): https://www.shadertoy.com/view/wlsGW2\n//root             : https://www.shadertoy.com/view/ttX3Dj\n\n//#define ViewZoom mix(64.,.1,iMouse.y/iResolution.y)\n#define ViewZoom 18.\n\n#define dd(a) dot(a,a)\n\n\n#define aV(a) aA(a)*ViewZoom*.5\n\n#define fra(u)(u-.5*iResolution.xy)*ViewZoom/iResolution.y//usually first function of mainImage(),not typecast.\n\n#define oz vec3(1,0,-1)\n#define r2s(r)mat2(sin(r+oz.xyyz*asin(1.)))\n//testable in https://www.shadertoy.com/view/MtKGWD\n\n//mat2 r2(float a){return mat2(cos(a),sin(a),-cos(a),sin(a));}\n\n//carthesian to barycentric\nvec3 c2b(vec2 u,vec2 a,vec2 b,vec2 c//there are more elegant versions of this with inverse() of the right matrix.\n){u-=c;b.y-=c.y;a.x-=c.x;c.x-=b.x;b.x=b.y*a.x+c.x*(a.y-c.y)//determinant\n ;vec3 r=vec3(ad(u*vec2(b.y,c.x)),ad(u*vec2(c.y-a.y,a.x)),0);r.z=ad(r.xy);r/=b.x;r.z=1.-r.z ;return r;}\n//barycentric to carthesian, carthesian is weighted average of barycentrics. \nvec2 b2c(vec3 l,vec2 a,vec2 b,vec2 c){//Barycentric2Carthesian\n ;return vec2(ad(vec3(a.x,b.x,c.x)*l),ad(vec3(a.y,b.y,c.y)*l))\n //;mat3 m=matrixCompMult(transpose(mat3(a,0,b,0,c,0)),mat3(l,l,0,0,0));return vec2(suv(m[0]),suv(m[1]))\n ;} \n\nbool isIt(float a){if (  mod(a,7.)==3.)return false;return true;\n;}\n\nvec3 TileIdMod6(vec3 b //input is barycentric TileID\n){\n ;vec3 m=fract(floor(b)/2.)*2.\n ;vec3 n=floor(2.-mod(b,3.))//fract((b-1.)/3.)*3.\n ;vec3 v=floor(2.-mod(b+1.,3.))\n ;vec3 w=floor(2.-mod(b+2.,3.))\n ;b=floor(b)\n \n     ;vec4 mimaX=vec4( mi(v.yz)//named by the component that is NOT being compared\n                     , mi(w.yz)\n                     ,-ma(v.yz)\n                     ,-ma(w.yz))\n \n         \n ;float x0=1.-m.x  //1-.m] [mx] has a period of 2.\n     /*\n ;if(b.x!=0.)x0=0.\n ;if(mimaX.w//mi(v.yz)\n     <0.)x0=0.    \n*/\n     //mi,mi,ma,ma,mi,ma, lacks periodicity\n     //v ,w ,v ,w ,w ,v , lacks periodicity\n     //what sick vec6 crossover is this?\n     //mi(w) appears 2x.\n     //ma(v) appears 2x\n     //so its a vec4, but an odd one!\n     //wwell, lets group them by dupes\n     //ok its a stride, and the .x is likely not needed at all\n     //yes, confirmed .x==.w\n ;vec3 B=mod(b,3.)\n //;vec3 xx=vec3(0)\n \n ;mat3 xx=mat3(0)\n //;vec3 x14_=vec3(m.x,1.-m.x,0) \n //;vec3 x52_=vec3(m.x,1.-m.x,0)\n //;vec3 x36_=vec3(m.x,1.-m.x,0) \n //;if(B.x!=2.||mimaX.y<0.)x14_=vec3(0)\n //;if(B.x!=1.||mimaX.z<0.)x52_=vec3(0)\n //;if(B.x!=0.||mimaX.w<0.)x36_=vec3(0)  \n ;vec2 x14_=mix(vec2(m.x,1.-m.x),vec2(0),float(B.x!=2.||mimaX.y<0.))\n ;vec2 x52_=mix(vec2(m.x,1.-m.x),vec2(0),float(B.x!=1.||mimaX.z<0.))\n ;vec2 x36_=mix(vec2(m.x,1.-m.x),vec2(0),float(B.x!=0.||mimaX.w<0.))\n\n ;x0=ad(x14_)+ad(x52_)+ad(x36_)\n\n  /**/\n  \n  \n ;float y=n.y    \n     /*\n ;if(b.y>=1.)y=0.\n ;if(b.y<-1.)y=0./**/\n ;float z=n.z\n     /*\n ;if(b.z>=1.)z=0.\n ;if(b.z<-1.)z=0.\n     /*\n ;if(b.y>=1.)x=0.\n ;if(b.z<=-1.)x=0.\n     \n ;float y=1.//m.y-n.y*n.z*n.x.\n ;if(b.z>=1.5)y=0.\n ;if(b.x<=-1.5)y=0.\n     \n ;float z=1.//m.z-n.y*n.z*n.x     \n ;if(b.x>=1.)z=0.\n ;if(b.y<=-2.)z=0./**/\n ;//if(n.y<.5&&n.z<.5)x=1.-x\n ;//if(n.x<.5&&n.z<.5)y=1.-y\n ;//if(n.x<.5&&n.y<.5)z=1.-z\n ;return vec3(x0,y,z)\n ;}//output is float([0,1,2,3,4,5])\n\nvoid mainImage( out vec4 o, vec2 u\n){vec3 r=iResolution\n ;vec2 m=fra(iMouse.xy)\n ;u=fra(u) //(u-r.xy/2.)/r.y\n ;vec3 c=vec3(0,1,0)\n #if 0\n ;m.y=1.\n #endif\n ;vec2 n=vec2(sqrt(3.),1.-m.y)*.5\n ;vec3 b=c2b(u,vec2(0),vec2(0,1),n)\n ;if(u.x<m.x){\n  ;b.xz=b2c(b,vec2(0),vec2(0,1),n)\n  ;b.y=0.;}\n \n\n ;if(u.y<-.20*ViewZoom){//lower screen shows UV space\n  ;vec3 tU=fract(b)\n  ;if(dd(tU)>1.)tU=1.-tU\n  ;c=tU\n  ;vec2 center=vec2(.5,sqrt(3.)/6.)\n  ;c.xz=b2c(tU,vec2(0),vec2(0,1),n)\n  #if 0\n  ;c.y=length(c.zx-center)\n  ;c.y=abs(c.y-aA(2.)*9.)\n  ;c.y=smoothstep(aA(2.),-aA(2.),c.y-aV(2.))\n  #else\n  ;vec2 K=(vec2(1,4)+u5(vec2(.5,2)*cs(iTime*8.)))//wiggly j-shape proportions\n  ;c.y=smoothFf(c.xz-center.yx,K)\n  #endif\n ;}else{//upper screen shows tileTD \n  ;vec3 tID=floor(b)//triangleID (barycentric)\n  ;//c=floor(b)\n  #if 0\n  ;tID=fract(tID/2.)*2.\n  #else\n  ;tID=vec3(TileIdMod6(b))//fract(tID/2.)*2.\n  //;tID=fract(tID*mix(2./1.,1./32.,cos(iTime*.2)*.5+.5))\n  #endif\n  ;c=tID\n  ;}\n ;o=vec4(c,1)\n ;}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define pi acos(-1.)\n//float TAU=6.28318530718;\n\n#define dd(a) dot(a,a)\n\n#define aA(z) (z/min(iResolution.x,iResolution.y))\n\n\n\n#define fra(u)(u-.5*iResolution.xy)*ViewZoom/iResolution.y//usually first function of mainImage(),not typecast.\n\n#define sat(x)clamp(x,0.,1.)\n#define dd(a)dot(a,a)\n#define ss(a,u)smoothstep(a,-a,u)\n#define v0 float\n#define v1 vec2\n#define v2 vec3\n#define v3 vec4\nv0 ad(v3 a){return dot(v3(1),a);}\nv0 ad(v2 a){return dot(v2(1),a);}\nv0 ad(v1 a){return a.x+a.y;}//aka suv()\nv0 ma(v1 a){return max(a.y,a.x);}\nv0 ma(v2 a){return max(a.z,ma(a.xy));}\nv0 ma(v3 a){return max(ma(a.zw),ma(a.xy));}\nv0 mu(v1 a){return a.x*a.y;}\nv0 su(v1 a){return a.x-a.y;}\nv0 sq2(v0 a){return a*a;}\n#define mi(a)-ma(-a)\n\n#define mStretch(u,m).5*(sign(u)*m-u)*((sign(abs(u)-m))+1.)\n\n//vec2 c2p(vec2 u){return vec2(length(u),atan(u.y,u.x));}\n//vec2 p2c(vec2 u){return cs(u.y)*u.x;}\nvec2 cs(vec2 a){return vec2(cos(a.x),sin(a.y));}\nvec2 cs(float a){return vec2(cos(a),sin(a));}\nmat2 r2(float a){vec2 s=cs(a);return mat2(s,-s.y,s.x);}\n\n#define mad(a,b,c)((a)*(b)+(c))\n#define ab012(a,b)mad(vec3(0,1,2),b,a)\n#define c11(a,b)clamp(a/b,-1.,1.)*b\n\n#define rs3 sqrt(3.)\n#define rs5 sqrt(5.)\n#define u2(a)((a)*2.-1.)\n#define u3(a)((a)*2.+1.)\n#define u4(a)((a)*.5-.5)\n#define u5(a)((a)*.5+.5)\n#define phi u4(rs5)\n#define Phi u5(rs5)\n//(reciprocal) [skewConstant] arithmetic:   [rs*]==[reciprocal square of *]\n// ske==.36602540378;//==sqrt(3.)*.5-.5\n#define   ske u4(rs3)\n//reSke=.21132486540;//==(sqrt(3.)*.5-.5)/sqrt(3.)==.5-.5/sqrt(3.)\n#define reSke u4(rs3)/rs3\n//enter [0.366025] or [.2113248654] in search engines and be amazed by peoplewho use values without knowing them\nvec2   skew(vec2 u){return u+ad(u)*ske;}\nvec2 unskew(vec2 u){return u-ad(u)*reSke;}\n\n\n#define doublestretch\nfloat jj(vec2 u,vec2 m){u+=m*.5//parametric j-shape m sets limb lengths.\n ;if(!(u.y-1.>0.||u.x+1.<0.))return abs(length(u-vec2(-1,1))-2.)//<-bottom right curve;\n ;m=abs(m)\n ;vec2 b=vec2(u.x-1.,mStretch((u.y-1.),m.y))//<-top right straight has priority\n ;u.y+=1.\n #ifdef doublestretch\n  ;u.x=mStretch(u.x,(m.x+1.));//bottom left straight STRETCH is optional here\n #else\n  ;u.x+=1.\n #endif \n ;vec2 c=u*sign(u.x+u.y+2.001)//<-bottom left straight,includes uncanny reflection\n ;u.y=sign(u.y-1.)+1.\n ;c=.5*u.y*(b+c)-c//c=mix(c,b,sign(u.y-1.)*.5+.5)\n ;return length(c);}\n\nfloat ff(vec2 u,vec2 m//parametric f-shape m sets limb lengths.\n){vec2 v=u\n ;v.x=abs(abs(v.x-.75)-1.)+1.//-.2\n ;//v.x/=2.\n ;//u.x=abs(u.x+2.)\n ;float a=length(v-m+vec2(0,4))\n ;return min(a,jj(-u,m))\n ;}\n\n\nfloat smoothFf(vec2 U,vec2 K){\n ;return smoothstep(.1,-.1,abs(ff(U*19.,K)-.6)-.3);}\n","name":"Common","description":"","type":"common"}]}