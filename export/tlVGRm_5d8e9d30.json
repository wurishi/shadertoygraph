{"ver":"0.1","info":{"id":"tlVGRm","date":"1578583782","viewed":85,"name":"Simple Octagons","username":"NicRule","description":"Octagons with contributions from \"FabriceNeyret2.\"","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["octagons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //\t\tscale coordinates to be square\n    vec2 uv = ( fragCoord* 2. - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    vec3 col;\n    float ww;\n    vec2 m = fract(uv*5.);\n    vec2 d = fract(uv*5.+0.5);\n\n        //\t\tfirst attempt\n        ww = float(m.x > .9 || m.y > .9 || abs(m.x+m.y-.9) > .6 || abs(m.x-m.y) > .6);\n    \t\n        //\t\tnot octagons but interesting\n        ww = length(            \n            max(1.-abs(sin(uv*10.))*10.,0.) + \n            max(1.-abs(sin(uv*mat2(10,10,-10,10)))*10.,0.)\n        );\n    \n    //\t\tthe code that actually draws octagons\n\tww = length(\n        max(1.0-abs(m-.5)*100.+2.,0.) +\n        max(abs(d.x+vec2(d.y-1.,-d.y))*100.-65.,0.)\n    );\n\n    col = vec3(ww);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}