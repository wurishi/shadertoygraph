{"ver":"0.1","info":{"id":"4sGcWR","date":"1521542804","viewed":161,"name":"局部平移","username":"q6823287","description":"translate","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["translate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 warpPositionToUse(vec2 center, vec2 current, float r, float R, float ratio, vec2 t)\n{\n    vec2 currentToUse = vec2(current.x, current.y * ratio + 0.5 - 0.5 * ratio);\n    vec2 centerToUse  = vec2(center.x, center.y * ratio + 0.5 - 0.5 * ratio);\n    vec2 tToUse = vec2(t.x, t.y / ratio);\n    \n    vec2  p \t= current;\n    float L_c  \t= distance(currentToUse, centerToUse);\n    float L_e_c = distance(currentToUse - t, centerToUse);\n    \n    float x \t= currentToUse.x;\n    float y \t= currentToUse.y;\n    float tx \t= t.x;\n    float ty\t= t.y;\n    \n    float ax = x - R * tx / (R - r) - centerToUse.x;\n    float ay = y - R * ty / (R - r) - centerToUse.y;\n    \n    float bx = tx / (R - r);\n    float by = ty / (R - r);\n    \n    float A = bx * bx + by * by - 1.0;\n    float B = 2.0 * (ax * bx + ay * by);\n    float C = ax * ax + ay * ay;\n    float G = sqrt(B * B - 4.0 * A * C);\n    \n    float d = (-B + G) / (2.0 * A);\n    \n    if (d < r)\n    {\n        d = (-B - G) / (2.0 * A);\n    }\n        \n    \n    float delta = 1.0;\n    \n    if (L_e_c < r)\n    {\n        p = current - tToUse;\n    }\n    else if (L_c < R)\n    {\n        p = p - ((R - d) / (R - r)) * tToUse;  \n    }\n    \n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.y / iResolution.x;\n    //ratio = 1.0;\n    \n    float r \t= 0.10;\n    float R     = 0.25;\n    vec2 center = vec2(0.5);\n    vec2 t \t\t= vec2(0.1 * sin(iTime), 0.1 * sin(iTime));\n    \n    vec2 currentToUse = vec2(uv.x, uv.y * ratio + 0.5 - 0.5 * ratio);\n    vec2 centerToUse  = vec2(center.x, center.y * ratio + 0.5 - 0.5 * ratio);\n    \n    vec2 p = warpPositionToUse(center, uv, r, R, ratio, t);\n    \n    if (abs(distance(currentToUse, centerToUse) - R) <= 0.001 || abs(distance(currentToUse - t, centerToUse) - r) < 0.001)\n    {\n        // 添加边框\n        fragColor = vec4(1.0);\n    }\n    else\n    {\n    \tfragColor = texture(iChannel0, p);\n    }\n    \n    //fragColor = texture(iChannel0, p);\n}","name":"Image","description":"","type":"image"}]}