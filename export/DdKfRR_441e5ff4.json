{"ver":"0.1","info":{"id":"DdKfRR","date":"1697825836","viewed":55,"name":"chaos function test","username":"hackercat","description":"stole like 99% of this code from\nhttps://www.shadertoy.com/view/3sKSWc\ngoing to try to make my own implementation of it later","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["graphfunctionchaos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// stolen from https://www.shadertoy.com/view/3sKSWc\n\n// Lifted from:https://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\nfloat DistanceToLineSegment(vec2 p0, vec2 p1, vec2 p)\n{\n    float distanceP0 = length(p0 - p);\n    float distanceP1 = length(p1 - p);\n    \n    float l2 =pow(length(p0 - p1), 2.);\n    float t = max(0., min(1., dot(p - p0, p1 - p0) / l2));\n    vec2 projection = p0 + t * (p1 - p0); \n    float distanceToProjection = length(projection - p);\n    \n    return min(min(distanceP0, distanceP1), distanceToProjection);\n}\n\nfloat Function(float r)\n{\n    float x = 0.5;\n    \n    for (int i = 0; i < int(mod(iTime * 1000.0, 100.0)) + 2000; i++) {\n        x = r * x * (1.0 - x);\n    }\n    \n    return x;\n}\n\nfloat DistanceToFunction(vec2 p, float xDelta)\n{\n    float result = 100.;\n    \n    for (float i = -3.; i < 3.; i += 1.)\n    {\n        vec2 q = p;\n        q.x += xDelta * i;\n        \n        vec2 p0 = vec2(q.x, Function(q.x));\n    \tvec2 p1 = vec2(q.x + xDelta, Function(q.x + xDelta));\n        result = min(result, DistanceToLineSegment(p0, p1, p));\n    }\n\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.y;\n    uv.x *= 2.0;\n    uv.x += (iResolution.x / iResolution.y) / 2.0;\n\n    float distanceToPlot = DistanceToFunction(uv, 1. / iResolution.x);\n    float intensity = smoothstep(0., 1., 1. - distanceToPlot * 1. * iResolution.y);\n    intensity = pow(intensity,1./2.2);\n    \n    vec3 col = vec3(intensity);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}