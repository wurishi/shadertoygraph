{"ver":"0.1","info":{"id":"NsdSW2","date":"1633983261","viewed":49,"name":"Fork ray marchi malie77 175","username":"malie77","description":"mixing two sdfs","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"WsGGR3","parentname":"ray marching with sdf"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SDSphere(vec3 pos, vec3 center)\n{\n    float size = sin(iTime) * 0.2+0.2;\n    \n    \n    return length(pos - center)-size;\n}\n\nfloat SDBox(vec3 pos, vec3 center)\n{\n    float size = 0.1;\n    \n    vec3 off = pos - center;\n    vec3 abs_off = abs(off);\n    if ( abs_off.x > abs_off.y && abs_off.x > abs_off.z )\n    {\n        return abs_off.x - size;\n    }\n    else if (abs_off.y > abs_off.z )\n    {\n       \n        return abs_off.y - size;\n    }\n    else\n    {\n       \n        return abs_off.z - size;\n    }\n   \n   \n}\n\nfloat SDStuff(vec3 pos, vec3 center)\n{\n        float d= SDBox(pos, center);\n        float d2= SDSphere(pos, center);\n        // d = max(d,-d2);\n        float a = sin(iTime*0.2)*0.8+0.5;\n        d = a * d + (1.0-a) * d2;\n    return d;\n}\n\nmat3x3 LookAt( vec3 src, vec3 target, vec3 up)\n{\n    vec3 forward = normalize(target-src);\n    vec3 right = cross(forward, up);\n    up = cross(right, forward);\n    return mat3x3(normalize(right), normalize(up), normalize(forward));\n}\n\n\nvec3 March( vec3 start, vec3 dir, int iters, out vec3 pos, out vec3 n, out float traveled)\n{\n     \n    traveled = 0.;\n    vec3 p = start;\n\n    for ( int i=0; i < iters; i++ )\n    {\n\n       \n       float d = SDStuff(p, floor(p)+0.5);\n       \n        pos = p;\n       float dist = length(pos);\n       // dir += vec3(-0.001*sin(dist*dist*0.01),0.002*cos(dist*dist),0.0021);\n     \tif (d <=0.00001)\n        {\n            //calcuate gradient of sdf to get normal\n            float delta = 0.00001;\n            float dx = SDStuff(p+vec3(delta,0.,0.),floor(p+vec3(delta,0.,0.))+0.5) - d;\n            float dy = SDStuff(p+vec3(0.,delta,0.),floor(p+vec3(0.,delta,0.))+0.5) - d;\n            float dz = SDStuff(p+vec3(0.,0.,delta),floor(p+vec3(0.,0.,delta))+0.5) - d;        \t\n            n = normalize(vec3(dx,dy,dz));\n            return vec3(1.,1.,1.);\n        }\n        \n        p += dir * d;\n        traveled += d;\n    }\n    \n    return vec3(0,0,0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{       \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mousePos = iMouse.xy == vec2(0,0) ? vec2(7,8) : iMouse.xy / iResolution.xy;\n    \n\n\t//vec3 viewdir = normalize(vec3(0.,0.,-1.));\n    vec3 cam = vec3(4.,4.,4.);\n    float near = 0.1;\n    float fov = 60.0;\n    float aspect = iResolution.y/iResolution.x;\n    float w = 2.*near/sqrt(3.);\n    float h = aspect*w;\n    \n\tvec3 vlt = vec3(-w/2., h/2., near) ;\n    vec3 vrb = vec3(w/2., -h/2., near) ;\n        \n    float theta = mousePos.x*3.14;\n    float phi = -mousePos.y*3.14;\n    \n    vec3 rayDir= vec3(mix(vlt.x, vrb.x, uv.x),mix(vlt.y, vrb.y, uv.y),near);\n    rayDir = normalize(rayDir);\n   cam = vec3(cos(theta)*sin(phi),\n               cos(phi),\n               sin(theta)*sin(phi))*5.;\n    mat3x3 rot = LookAt(cam,vec3(0.,0.,0.), vec3(0.,1.,0.));\n    rayDir = rot*rayDir;\n    vec3 pos;\n    vec3 n;\n    float traveled;\n    vec3 ret = March(cam, rayDir,400,pos, n,traveled); \n\n    \n\n    // n = normalize(cross(dFdx(pos), dFdy(pos)));\n    \n    //ret = rayDir;\n    //float NoL = dot(n, normalize(-pos));\n    //fragColor = vec4(NoL,NoL,NoL,1.);\n    fragColor = vec4((n+1.)/2.*ret,1)*pow(length(traveled),-0.8);\n}\n","name":"Image","description":"","type":"image"}]}