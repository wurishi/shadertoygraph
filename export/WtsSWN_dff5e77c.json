{"ver":"0.1","info":{"id":"WtsSWN","date":"1567423646","viewed":708,"name":"Shader Showdown Rev-19 Qualifier","username":"evvvvil","description":"Winning shader made at Revision 2019 Shader Showdown \"World championships\" qualifying round against LJ.\nLive coded on stage in 25 minutes.\nVideo of the battle: https://www.youtube.com/watch?v=YKtvYAn-v2Y","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["demoscene","abstract","glow","vortex","revision","live","battle","shadershowdown","gloss","industrial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Winning shader made at Revision 2019 Shader Showdown \"world championships\",\n// Qualifying round against LJ. Video of the battle: https://www.youtube.com/watch?v=YKtvYAn-v2Y\n\n// The \"Shader Showdown\" is a demoscene live-coding shader battle competition.\n// 2 coders battle for 25 minutes making a shader on stage. No google, no cheat sheets.\n// The audience votes for the winner by making noise or by voting on their phone.\n\n// \"Coughin' to a coffin, might as well scoff the pork, then.\" - MF DOOM\n\n// Comments have been commented, due to the general lack of sense of humour in the post-graduatosphere.\n\nvec2 s,e=vec2(.00035,-.00035);float t,tt,g,b,bb,bs;vec3 np;\nfloat bo(vec3 p,vec3 r){vec3 q=abs(p)-r;return max(max(q.x,q.y),q.z);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));} \nvec2 fb(vec3 p)\n{\n  vec2 h,t=vec2(bo(abs(p)-vec3(2,0,0),vec3(.6,10,.5)),3);\n  h=vec2(bo(abs(p)-vec3(2,0,0),vec3(.4,10,.7)),5);\n  t=t.x<h.x?t:h;\n  h=vec2(bo(abs(p)-vec3(2.7,0,0),vec3(.1,10,.1)),6);\n  g+=0.1/(.1+h.x*h.x*20.);  t=t.x<h.x?t:h;\n  h=vec2(bo(abs(abs(p)-vec3(0,1,0))-vec3(0,.5,0),vec3(2,.3,.3)),6);\n  t=t.x<h.x?t:h;\n  h=vec2(bo(p+4.,vec3(20,.6,.5)),6);\n  t=t.x<h.x?t:h;\n  h=vec2(bo(p+4.,vec3(20.2,.4,.7)),3);\n  t=t.x<h.x?t:h;\n  h=vec2(bo(p+1.,vec3(5.+5.*(.5+sin(tt-1.57)*.5),.2,.2)),3);\n  t=t.x<h.x?t:h;\n  t.x*=.6;\n  return t;\n}\nvec2 mp( vec3 p )\n{\n  bb=sin(p.y*.5)*.5;  \n  b=sin(p.y*.1-tt*.5);\n  p.xz*=r2(sin(p.y*.1+tt)*.3);\n  np=p;\n  np.y=mod(np.y+tt*10.,20.)-10.;\n  for(int i=0;i<8;i++){\n    np=abs(np)-vec3(2.-b,4.+bs*3.,2.-b+bs);\n    np.xz*=r2(.8-4.*bs);\n  }\n  np.x-=5.;\n  vec2 h,t=fb(np);\n  h=vec2(length(cos(bb-np*.5)-0.1),6);\n  g+=0.1/(.1+h.x*h.x*200.);\n  t=t.x<h.x?t:h;\n  p.y=0.;\n  h=vec2(length(p)-1.5+bb,6);\n  g+=0.1/(.1+h.x*h.x);\n  t=t.x<h.x?t:h;\n  h=vec2(bo(abs(np*.5)-9.,vec3(1.2-b,10,1.+b)),5);\n  t=t.x<h.x?t:h;\n  h=vec2(bo(abs(np*.5)-9.,vec3(1.4-b,10,.1)),6);\n  g+=0.1/(.1+h.x*h.x*100.);\n  t=(t.x<h.x)?t:h;\n  return t;\n}\nvec2 tr( vec3 ro, vec3 rd )\n{\n  vec2 h,t=vec2(0.1);\n  for(int i=0;i<128;i++){\n    h=mp(ro+rd*t.x);\n      if(h.x<.0001||t.x>120.) break;      \n      t.x+=h.x;t.y=h.y;\n  } if(t.x>120.) t.x=0.;\n  return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(gl_FragCoord.x / iResolution.x, gl_FragCoord.y / iResolution.y);\n    uv -= 0.5;uv /= vec2(iResolution.y / iResolution.x, 1);    \n    tt=mod(iTime,62.83);\n  \tbs=clamp(sin(-tt*.5),-.25,.25)+.25;\n    vec3 ro=vec3(7,-1,sin(tt*.5)*60.),\n    cw=normalize(vec3(0)-ro),\n    cu=normalize(cross(cw,vec3(0,1,sin(tt)*2.))),\n    cv=normalize(cross(cu,cw)),\n    rd=mat3(cu,cv,cw)*normalize(vec3(uv,0.5)),co,fo,\n    ld=normalize(vec3(0.1,0.5,.1));\n    co=fo=vec3(.1,.5,.6)-rd.y*.5;\n    s=tr(ro,rd);t=s.x;\n    if(t>0.){\n        vec3 po=ro+rd*t,no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x),\n        al=vec3(1,0.5,0.);\n        if(s.y<5.) al=vec3(0);\n        if(s.y>5.) al=vec3(1);\n        float dif=max(0.,dot(no,ld)),\n\t\tspo=exp2(10.*texture(iChannel0,vec2(np.y,dot(np.xz,vec2(0.7)))/vec2(30,10)).r),\n        fr=pow(1.+dot(no,rd),4.),\n        aor=t/50.,ao=exp2(-2.*pow(max(0.,1.-mp(po+no*aor).x/aor),2.)),\n        sss=smoothstep(0.,1.,mp(po+ld*0.4).x/0.4),\n        sp=pow(max(dot(reflect(-ld,no),-rd),0.),spo);\n        co=mix(sp+al*(.8*ao+0.2)*(dif+sss),fo,min(fr,.5));\n    }\n    fragColor = vec4(pow(mix(co,fo,1.-exp(-.000003*t*t*t))+g*.3,vec3(0.45)),1);\n}","name":"Image","description":"","type":"image"}]}