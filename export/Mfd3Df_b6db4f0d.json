{"ver":"0.1","info":{"id":"Mfd3Df","date":"1712234279","viewed":109,"name":"Greetings, Team210","username":"nr4","description":"This shader draws the logo of the demogroup \"Team210\".\n\nMore logos: https://www.shadertoy.com/playlist/NX3yzf","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["sdf","demoscene","logo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \n * Team210 Logo SDF Â© 2024 by Alexander \"NR4/Team210\" Kraus <nr4@z10.info>\n * is licensed under CC BY-NC-SA 4.0. To view a copy of this license, visit\n * http://creativecommons.org/licenses/by-nc-sa/4.0/\n */\n\nfloat dbox2(vec2 x, vec2 b) {\n    vec2 g = abs(x) - b;\n    // Good for most use cases, and smaller:\n    // return max(g.x, g.y);\n    return length(max(g, vec2(0))) + min(max(g.x, g.y), 0.);\n}\n\nfloat d210(vec2 uv) {\n    float a = dbox2(abs(abs(abs(uv) - vec2(1, 0)) - vec2(1, 0)), vec2(.8));\n    return min(\n        min(\n            min(\n                min(\n                    min(\n                        min(\n                            max(a, -a - .3),\n                            dbox2(uv - vec2(2, 0), vec2(.1, .3))\n                        ),\n                        dbox2(abs(uv - vec2(2, -.45)) - vec2(.6, .05), vec2(.2, .3))\n                    ),\n                    dbox2(abs(uv) - vec2(.45, 0), vec2(.35, .8))\n                ),\n                dbox2(uv + vec2(0, .2), vec2(.8, .1))\n            ),\n            dbox2(uv + vec2(2, 0) + .2 * sign(uv.y) * vec2(1, -1), vec2(.5, .1))\n        ),\n        dbox2(uv + vec2(2., .45), vec2(.3, .35))\n    );\n}\n\n// Paint with antialiasing\nfloat sm(in float d)\n{\n    return smoothstep(1.5/iResolution.y, -1.5/iResolution.y, d);\n}\n\nfloat scene(vec2 uv) {\n    return d210(uv);\n}\n\nvec3 cmap_outside(float t) {\n    return vec3(0.06,0.12,0.12)\n        +t*(vec3(1.04,-3.88,-5.84)\n        +t*(vec3(22.06,45.29,69.99)\n        +t*(vec3(-106.79,-170.24,-293.90)\n        +t*(vec3(214.67,321.12,582.27)\n        +t*(vec3(-203.05,-294.29,-536.21)\n        +t*(vec3(72.12,101.99,183.68)\n    ))))));\n}\n\nvec3 cmap_inside(float t) {\n    return vec3(0.07,0.15,0.22)\n        +t*(vec3(4.25,-1.51,-3.61)\n        +t*(vec3(-49.91,22.00,72.90)\n        +t*(vec3(239.80,-54.73,-326.10)\n        +t*(vec3(-474.63,43.62,612.04)\n        +t*(vec3(410.21,-2.05,-521.96)\n        +t*(vec3(-129.64,-7.42,166.70)\n    ))))));\n}\n\n/* Based on iq's SDF drawing code, but changed. */\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    float scale = 4.;\n    float px = 1. / iResolution.y;\n    vec2 uv = scale * (fragCoord - .5 * iResolution.xy) * px;\n    vec2 mouse = scale * (iMouse.xy - .5 * iResolution.xy) * px;\n    \n    float d = scene(uv) / scale;\n    \n    float smd = (1. - exp2(-12. * abs(d))) * (.5 + .2 * cos(150. * d));\n    vec3 col = mix(cmap_outside(smd), cmap_inside(smd), .5 - .5 * sign(d));\n\tcol = mix(col, vec3(1), sm(abs(d) - px));\n    \n    d = scene(mouse);\n    float l = length(uv - mouse);\n    col = mix(col, vec3(1), sm(abs(l - abs(d)) / scale - px));\n    col = mix(col, vec3(1), sm(l / scale - 3.*px));\n \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}