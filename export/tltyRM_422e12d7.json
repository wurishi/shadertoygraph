{"ver":"0.1","info":{"id":"tltyRM","date":"1608717360","viewed":270,"name":"Rain drops on ground improved","username":"tyron","description":"Copied from https://www.shadertoy.com/view/wt2yW3\n\nRemoved some unnecessary calculations, added intensity parameter","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rain","drops"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Forked from https://www.shadertoy.com/view/wt2yW3\n\nvec2 hash3( vec2 p )\n{\n    vec2 q = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n    return fract(sin(q)*43758.5453);\n}\n\nfloat noise(in vec2 x)\n{\n    float intensity = 0.4;\n\n    x *= intensity;\n\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\n\n    float va = 0.0;\n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n        vec2 g = vec2( float(i),float(j) );\n        vec2 o = hash3(p + g);\n        vec2 r = ((g - f) + o.xy) / intensity;\n        float d = sqrt(dot(r,r));\n\n        float a = max(cos(d - iTime * 2. + (o.x + o.y) * 5.0), 0.);\n        a = smoothstep(0.99, 0.999, a);\n\n        float ripple = mix(a, 0., d);\n        va += max(ripple, 0.);\n    }\n\n    return va;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    // for concentric circles\n    // uv.y/=2.;\n\n\tfloat f = noise( 12.0*uv);\n\tfragColor = vec4( f,f,f, 1.0 );\n    \n    // Or as normal\n    //vec3 normal = vec3(-dFdx(f), -dFdy(f), 0.5) + 0.5;\n\t//fragColor = vec4( normal, 1.0 );\n}","name":"Image","description":"","type":"image"}]}