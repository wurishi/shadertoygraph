{"ver":"0.1","info":{"id":"WlXSzM","date":"1562336009","viewed":85,"name":"grid --example-v1","username":"jorge2017a1","description":"grid --example-v1","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author @patriciogv - 2015 - patriciogonzalezvivo.com  //\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nvec2 skew (vec2 st) {\n    vec2 r = vec2(0.0);\n    r.x = 1.1547*st.x;\n    r.y = st.y+0.5*r.x;\n    return r;\n}\n\nvec3 simplexGrid (vec2 st) {\n    vec3 xyz = vec3(0.0);\n\n    vec2 p = fract(skew(st));\n    if (p.x > p.y) {\n        xyz.xy = 1.0-vec2(p.x,p.y-p.x);\n        xyz.z = p.y;\n    } else {\n        xyz.yz = 1.0-vec2(p.x-p.y,p.y);\n        xyz.x = p.x;\n    }\n\n    return fract(xyz);\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec2 st;\n    \n    st=uv/2.0;\n    \n    vec3 color = vec3(0.0);\n\n    // Scale the space to see the grid\n    st *= 10.;\n\n    // Show the 2D grid\n    color.rg = fract(st);\n\n    // Skew the 2D grid\n    // color.rg = fract(skew(st));\n\n    // Subdivide the grid into to equilateral triangles\n     //color = simplexGrid(st);\n\n    fragColor = vec4(color,1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}