{"ver":"0.1","info":{"id":"4sSBRm","date":"1499946682","viewed":2781,"name":"[SH17A] 2tweet fluid","username":"flockaroo","description":"well... its 3 tweets, but the actual fluid algorithm is 2 tweets only.\nguess it wont qualify for the competition then, but i thought i'd post it anyway.\nfor real 2tweet in total fluid see: https://www.shadertoy.com/view/Xd2BWz","likes":74,"published":3,"flags":32,"usePreview":0,"tags":["fluid","cfd","sh17a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// created by florian berger (flockaroo) - 2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// 2tweet fluid\n\nvoid mainImage(out vec4 c,vec2 f)\n{\n    // with only this line and texelFetch also in BufA count goes down to 310 chars total\n    // but color satures after a while, and noisy then\n    //c=texelFetch(iChannel0,ivec2(f),0);\n    \n    c=sin(texture(iChannel0,f/iResolution.xy).xyxy*5.);\n    //c+=c.yxyx;\n    c-=c-length(fwidth(c.xy));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// created by florian berger (flockaroo) - 2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// 2tweet fluid\n\n// down to 261 chars - thx to Fabrice!\n// down to 247 chars - thx to Fabrice!  --f doesnt work on my system\n\n// try bigger numbers than 40 in line 15 for bigger vortices\n\n#define C(x) texture(iChannel0,(f+x)/iResolution.xy).xy\n//#define C(x) texelFetch(iChannel0,ivec2(f+x),0).xy\n\n// -1 char: 11 is roughly 1.75pi so perfect -pi/4 substitute (instead of 1.6)\n// -9 char: if S is chosen wisely the the difference between x and y is roughly (n+.5)*pi\n#define L(b) for(float a=0.;a<5.;a++) { b=sin((iTime+a)/.1+S);\n// -8 char: still works but less quality\n//#define L(b) for(float a=0.;a<5.;a++) { b=sin(a/.1+S);\n\nvoid mainImage(out vec4 c, vec2 f)\n{\n    // magic numbers: S.x-S.y must be roughly (n+.5)*pi, so we can use it as phase shift above\n    vec2 p,q,v,S=vec2(27,-28);\n    // v auto initializes to 0 on my system (might not work on some other platforms)\n    //v-=v;\n    L(p)\n        L(q)\n            v+=p*dot(C((p+q).yx*S),q);\n        }\n    }\n    c.xy=C(v)+.1/(f-1.);\n}\n","name":"Buf A","description":"","type":"buffer"}]}