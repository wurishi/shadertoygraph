{"ver":"0.1","info":{"id":"XdfBWl","date":"1498660497","viewed":263,"name":"Sphere basket","username":"gaz","description":"3d","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","bump","cutout"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 rotate(in vec3 axis, in float theta)\n{\n  axis = normalize(axis);\n  float x = axis.x, y = axis.y, z = axis.z, s = sin(theta), c = cos(theta), o = 1.0-c;\n  return mat3(\n    o*x*x+c,o*x*y+z*s,o*z*x-y*s,\n    o*x*y-z*s,o*y*y+c,o*y*z+x*s,\n    o*z*x+y*s,o*y*z-x*s,o*z*z+c\n    );\n}\n\nmat3 lookat(in vec3 eye, in vec3 target)\n{\n\tvec3 w = normalize(eye-target);\n\tvec3 u = normalize(cross(w,vec3(0.0,1.0,0.0)));\n\tvec3 v = normalize(cross(u,w));\n    return mat3(u,v,w);\n}\n\n// https://www.shadertoy.com/view/MtsGWH\nvec4 boxmap(sampler2D sam, in vec3 p, in vec3 n)\n{\n    vec3 m = pow(abs(n), vec3(8));\n\tvec4 x = textureLod(sam, p.yz, 0.0);\n\tvec4 y = textureLod(sam, p.zx, 0.0);\n\tvec4 z = textureLod(sam, p.xy, 0.0);\n\treturn (x*m.x + y*m.y + z*m.z)/(m.x+m.y+m.z);\n}\n\nfloat map(in vec3 p)\n{  \n    float de = abs(length(p) - 2.0) - 0.01;    \n    return max(de, -de - boxmap(iChannel0, p * 0.1, p).x + 0.4) +\n        boxmap(iChannel0, p * 0.5, p).x * 0.01;\n}\n\nvec3 calcNormal(in vec3 pos){\n  vec2 e = vec2(1.0, -1.0) * 0.002;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)\n  );\n}\n\nvec3 doColor(vec3 p){\n    return boxmap(iChannel0, p * 0.5 , p).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(0, 0, 5);\n    vec3 rd = normalize(vec3(p, -2));\n    \n    vec3 ta = vec3(0);\n    ro = rotate(vec3(1),-mod(iTime*0.3, 6.283)) * ro;\n    rd = lookat(ro,ta) * rd;\n\n    vec3 col = mix(\n        vec3(0.3, 0.9, 0.8),\n        vec3(0.7, 0.5, 0.2),\n        smoothstep(0.3, 2.5, length(p))\n    );\n\tconst float maxd = 10.0, precis = 0.001;\n\tfloat t = 0.0, d;\n \tfor(int i = 0; i < 64; i++)\n  \t{\n    \tt += d = map(ro + rd * t);\n    \tif(d < precis || t > maxd) break;\n  \t}\n  \tif(d < precis)\n  \t{\n\t  \tvec3 p = ro + rd * t;\n\t \tvec3 nor = calcNormal(p);\n    \tvec3 li = normalize(vec3(1));\n        col = doColor(p);\n        float dif = clamp(dot(nor, li), 0.3, 1.0);\n        float amb = max(0.5 + 0.5 * nor.y, 0.0);\n        float spc = pow(clamp(dot(reflect(normalize(p - ro), nor), li), 0.0, 1.0), 30.0);\n        col *= dif * amb ;\n        col += spc;\n        col = clamp(col,0.0,1.0);\n  \t\tcol = pow(col, vec3(0.6));        \n    }\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}