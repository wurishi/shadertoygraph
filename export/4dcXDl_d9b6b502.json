{"ver":"0.1","info":{"id":"4dcXDl","date":"1461977604","viewed":882,"name":"Gilmore Stripes","username":"airtight","description":"Playing with Andy Gilmore style color palette","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["palette","stripes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159;\nconst float numStripes = 16.0;\n\n//convert HSV to RGB\nvec3 hsv2rgb(vec3 c){\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 gilmoreCol(float x){\n    \n     //stepped hue\n     x = floor(x*numStripes)/numStripes;\n    \n     //offset hue to put red in middle\n    //flip it and reverse it\n    float hue = fract((1.0 - x) - 0.45);\n    \n    //saturation is higher for warmer colors\n    float sat = 0.3 + sin(x*PI)*0.5;\n    \n    //brightness higher in middle\n    float bri = (smoothstep(0.,0.6, x) - smoothstep(0.6,1.0,x))*.6 + 0.3;\n   \n    //darker\n    bri *= 0.85;\n    \n    return vec3(hue, sat,bri);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //stripes\n    float x = uv.x;\n    x = fract( x  +  iTime/10. );\n   \n    //rings\n    vec2 p =(fragCoord.xy-.5*iResolution.xy)/min(iResolution.x,iResolution.y);\n    x = distance(p , vec2(0)); \n    x = fract( x  +  iTime/10. );\n    \n    vec3 hsv = gilmoreCol(x);\n    \n    //vertical brightness gradient\n    hsv.z -= fract( uv.y  )/2.;\n    \n    //add in gradient stripes\n    //th-th-thats all folks\n    float stripes = 1. - fract(x*numStripes);\n    hsv.z = mix(hsv.z,stripes,0.03); \n    \n    vec3 col = hsv2rgb(hsv);\n  \tfragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}