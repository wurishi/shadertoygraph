{"ver":"0.1","info":{"id":"lflSW2","date":"1705763514","viewed":46,"name":"saw on one of frum's vid","username":"jy483752","description":"rrrrrreeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n(tthis is my pokemon battle cry if i was a grass type pokemon)\n(yes i have different cries for other types)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["filter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.2831853071\n#define SLICES 12.\n#define t iTime*0.1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // unstretched coords & (0, 0) in center\n    vec2 uv = fragCoord/iResolution.y; \n    uv -= vec2(iResolution.x/iResolution.y, 1.)*.5;\n    \n    // here goes the shinanigans\n    float angle = atan(uv.y, uv.x)/TAU;\n    float angle_i = floor(angle*SLICES);\n    vec2 distorted = uv*(\n        snoise(vec2(t, angle_i*300.))\n        /2.+.5\n    );\n    float leftSide  = snoise(vec2(mod(angle_i+1., 12.)*300., t));\n    float rightSide = snoise(vec2(mod(angle_i,    12.)*300., t));\n    \n    // ayo how to make pie edge flat?\n    float edge = mix(rightSide, leftSide, fract(angle*SLICES));\n    edge = .2+(edge/2.+.5)*.4;\n    \n    uv = mix(distorted, uv, step(edge, length(uv)));\n\n    // put it back to the normalized space that textureLod uses\n    uv += vec2(iResolution.x/iResolution.y, 1.)*.5;\n    uv.x /= iResolution.x/iResolution.y;\n    \n    // output\n    fragColor = vec4(textureLod(iChannel0, uv, 0.0).rgb,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\n\n// Simplex 2D noise\n//\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}","name":"Common","description":"","type":"common"}]}