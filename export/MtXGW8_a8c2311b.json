{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"vec2 rotate(in vec2 p, in float t)\n{\n\treturn p*cos(-t)+vec2(p.y, -p.x)*sin(-t);\n}\n\nfloat sdTorus(in vec3 p, in vec2 t)\n{\n\tvec2 q = vec2(length(p.xz)-t.x, p.y);\n\treturn length(q)-t.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p2 = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.05);\n    const float steps = 30.0;\n    float pe = 3.0;\n\tfor(float i = 0.0; i < steps; i++)\n\t{\n        float r = i/steps;\n        float z = -1.0+2.0*r*r;\n        z *= 3.0;\n        float s = pe/(pe+z);\n        vec3 p3 = vec3(p2*s, z);\n    \tp3.zx = rotate(p3.zx, iTime*0.521);\n    \tp3.yz = rotate(p3.yz, iTime*0.632);\n        p3.x += 0.45;\n        float de = sdTorus(p3,\n            vec2(\n                0.7*cos(iTime*1.678)+1.2,\n           \t\t0.35*(sin(iTime*1.234)+1.0)));\n        de = smoothstep(0.08,0.0,de);\n        if (de > 0.0 && de < 0.5)\n        {\n    \t\tcol = vec3(r*0.5+0.5, 1.0-r, r*(sin(iTime*1.987)*2.0-1.0))*(1.0-de*2.0);\n        }\n    }\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MtXGW8","date":"1421414003","viewed":259,"name":"Torus beat","username":"gaz","description":"Outlines of sliced torus.\nhttps://www.shadertoy.com/view/XtX3WH","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["parallax"],"hasliked":0,"parentid":"","parentname":""}}