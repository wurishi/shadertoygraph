{"ver":"0.1","info":{"id":"ds2yRR","date":"1687370900","viewed":64,"name":"mandelbrot set - orbit trap","username":"DeltaT","description":"experimenting with orbit trap colouring algorithm\nclick and drag to change trap position","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","orbittrap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 250\n\nvec2 complexSquare(vec2 z) {\n    vec2 z2 = vec2(0);\n    z2.x = z.x*z.x - z.y*z.y;\n    z2.y = 2.*(z.x*z.y);\n    return z2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 mouse = (iMouse.xy * 2. - iResolution.xy) / iResolution.y;\n    \n    vec2 z = vec2(0);\n    vec2 c = vec2(uv.x-0.4, uv.y) * 1.25;\n    \n    int iter = clamp(int(iTime*15.), 0, MAX_ITER);\n    //const float threshold = 2.;\n    \n    vec3 col = vec3(0);\n    \n    float minDist = 0.;\n    for (int i = 0; i <= iter; i++) {\n        z = complexSquare(z) + c;\n        \n        float currentDist = length(z - (vec2(mouse.x-0.4, mouse.y) * 1.25));\n        \n        if (i == 0 || currentDist < minDist) {\n            minDist = currentDist;\n        }\n        \n        col = length(z) < 2. ? vec3(0) : vec3(fract(minDist + iTime/15.));\n        \n        //if (length(z) > threshold) {\n        //    break;\n        //}\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}