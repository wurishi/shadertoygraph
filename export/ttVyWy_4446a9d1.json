{"ver":"0.1","info":{"id":"ttVyWy","date":"1611712615","viewed":50,"name":"Little Julia Set Fractal Thing","username":"BRNMan","description":"Just creates julia set fractals wherever you click","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["juliaset","fractals","mandlebrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 mul(vec2 a, vec2 b) {\n    return vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 iMouseUV = iMouse.xy/iResolution.xy;\n\n    float x_min = -1.0;\n    float x_scale = 2.0;\n    \n    float y_min = -1.0;\n    float y_scale = 2.0;\n    \n    float time = iTime;\n   \n    vec2 C = vec2(uv.x*x_scale + x_min, uv.y*y_scale + y_min);\n    vec2 Z = C;\n    C = vec2(iMouseUV.x*x_scale + sin(time) + x_min, iMouseUV.y*y_scale + y_min);\n    \n    int i = 0;\n    int max_iter = 40;\n    while(i < max_iter && abs(Z.x) + abs(Z.y) < 2.0) {\n        Z = mul(Z,Z) + C;\n        i++;\n    }\n    \n    float gradient = float(i)*1.0/float(max_iter);\n    // Output to screen\n    fragColor = vec4(0.0, 1.0 - gradient, 1.0 - gradient ,1.0);\n}","name":"Image","description":"","type":"image"}]}