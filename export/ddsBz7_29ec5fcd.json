{"ver":"0.1","info":{"id":"ddsBz7","date":"1688591712","viewed":94,"name":"GoombasOrderedDithering","username":"Goomba00","description":"Applies ordered dithering","likes":4,"published":1,"flags":0,"usePreview":1,"tags":["dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const mat4x4 thresholdMap = (mat4x4(0., .5, .125, .625, \n                                .75, .25, .875, .375,\n                                .1875,.6875,.0625,.5625,\n                                .9375,.4375,.8125, .3125));\n                                \n                                \n// Looks better when firstColor is light\nconst vec3 firstColor = vec3(0.804,0.788,0.596);\nconst vec3 secondColor = vec3(0.220,0.220,0.220);\n\n\nvec3 closest(vec3 col, float v)\n{\n    float t = (col.r + col.g + col.b) / (3.0);\n    \n    if(v < t){\n        return firstColor;\n    }\n    return secondColor;   \n   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Keep at 4 or break\n    int ditherSize = 4;\n    // Typically -1.0 to 1.0\n    float brightness = -.05;\n\n    vec3 c = texture(iChannel0,fragCoord/iResolution.xy).rgb;\n    \n    int x = int(fragCoord.x) % ditherSize;\n    int y = int(fragCoord.y) % ditherSize;\n    \n    // Get nearest palette color using threshold map to apply pattern\n    vec3 t = closest(c + thresholdMap[x][y] - .5 + brightness, .5);\n    \n    fragColor = vec4(t,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}