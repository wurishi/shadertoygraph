{"ver":"0.1","info":{"id":"DtSBz1","date":"1693738804","viewed":38,"name":"Simple 2D Metaball Experiment","username":"kryzp4","description":"2D Metaball Shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","metaballs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 r1(float t)\n{\n    return vec2(0.5 * sin(t), 0.0);\n}\n\nvec2 r2(float t)\n{\n    return vec2(0.0, 0.5 * sin(t - 0.5));\n}\n\nvec3 gradient(float d)\n{\n    float outline = 0.1;\n    float threshold = 0.5;\n    if (d > (threshold - outline) && d < threshold)\n        return vec3(135, 187, 162)/255.;\n    return (d > threshold) ? vec3(201, 228, 202)/255. : vec3(54, 73, 88)/255.;\n}\n\nfloat ball(vec2 x, vec2 p, float falloff)\n{\n    float d = length(x - p);\n    return exp(-1.0 / falloff * d * d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5*iResolution.xy) / iResolution.y;\n    float dist = 0.0;\n    \n    vec2 p1 = r1(iTime);\n    dist += ball(uv, p1, 0.025);\n   \n    vec2 p2 = r2(iTime);\n    dist += ball(uv, p2, 0.025 + 0.002*sin(3.0*iTime));\n    \n    vec2 pmouse = (iMouse.xy - 0.5*iResolution.xy) / iResolution.y;\n    dist += ball(uv, pmouse, 0.05);\n    \n    vec3 col = gradient(dist);\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}