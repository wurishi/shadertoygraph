{"ver":"0.1","info":{"id":"fsKXRz","date":"1634264111","viewed":87,"name":"turnipGod's Basic Mandelbrot","username":"turnipGod","description":"Testing out shadertoy for the first time.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.y/iResolution.x;\n    vec2 uv = fragCoord/iResolution.xy;\n    float height = 1.8;\n            \n    uv.x *= 2.47;\n    uv.y *= height * 2.0;\n        \n    uv.x -= 2.0;\n    uv.y -= height;\n        \n    uv.y *= aspect;\n        \n    float x0 = uv.x;\n    float y0 = uv.y;\n    float x = 0.0;\n    float y = 0.0;\n    float temp_x;\n    float iteration = 0.0;\n    float max_iter = 1000.0;\n    while (x*x + y*y <= 4.0 && iteration < max_iter) {\n        temp_x = x*x - y*y + x0;\n        y = 2.0*x*y + y0;\n        x = temp_x;\n        iteration++;\n    }\n    float depth = iteration/max_iter * 30.0;\n    fragColor = vec4(depth, depth, depth, 1.0);\n}","name":"Image","description":"","type":"image"}]}