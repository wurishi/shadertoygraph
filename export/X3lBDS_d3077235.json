{"ver":"0.1","info":{"id":"X3lBDS","date":"1728846059","viewed":37,"name":"Easy random","username":"Mustard","description":"random test by u and v. ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv *= 4.0f;\n    const int pointNumber = 256;\n    float[pointNumber] randomfloat;\n    float scale = 48.0f;\n    int[pointNumber] random_x;\n    int[pointNumber] random_y;\n    \n    for(int i = 0; i < pointNumber; i++){\n        randomfloat[i] = rand();\n    }\n    \n    // Init an array.\n    for(int i = 0; i < pointNumber; i++){\n        random_x[i] = i;\n    }\n    \n    for(int i = 0; i < pointNumber; i++){\n        random_y[i] = i;\n    }\n    \n    // Random permutate the array.\n    for(int i = 0; i < pointNumber; i++){\n        int temp = random_x[i];\n        random_x[int(rand() * float(i))];\n        temp = random_y[i];\n        random_y[int(rand() * float(i))];\n    }\n    \n    int i = int((uv.x * scale)) & 255;\n    int j = int((uv.y * scale)) & 255;\n    \n    // Random by x:\n    float val = randomfloat[i];\n    \n    // Random by x and y:\n    //float val = randomfloat[i ^ j];\n    \n    vec3 col = vec3(val,val,val);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const ivec2 FS_ADDR = ivec2(0.0);\n\nconst vec4 fs_stt = vec4(1.0);\n\nuint seed = 0u;\n\nvoid setSeed(uint s) {\n    seed = s;\n}\n\nuint hash(uint s) {\n    s ^= 2747636419u;\n    s *= 2654435769u;\n    s ^= s >> 16;\n    s *= 2654435769u;\n    s ^= s >> 16;\n    s *= 2654435769u;\n    return s;\n}\n\nuint randI() {\n    seed = hash(seed);\n    return seed;\n}\n\nfloat rand() {\n    uint rn = randI();\n    rn %= 1000000000u;\n    float rs = float(rn);\n    rs /= 1000000000.0;\n    return rs;\n}\n\n#define setNSeed() setSeed(uint(iResolution.x*fragCoord.y+fragCoord.x + float(hash(uint(iTime*1000.0))%1000u)))\n","name":"Common","description":"","type":"common"}]}