{"ver":"0.1","info":{"id":"XXjXzD","date":"1716631256","viewed":59,"name":"Cluade","username":"omansounds","description":"First Shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["trippyflowycolors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float time = iTime * 0.5;\n    \n    // Distortion effect\n    uv += vec2(sin(uv.y * 10.0 + time * 2.0) * 0.2, cos(uv.x * 8.0 + time * 1.5) * 0.3);\n    \n    // Radial gradient\n    float radial = length(uv) * 0.5;\n    vec3 col = vec3(radial, radial * 0.5, radial * 0.8);\n    \n    // Fractal pattern\n    float scale = 3.0;\n    for (int i = 0; i < 5; i++) {\n        col += vec3(0.5, 0.7, 0.9) / scale * sin(scale * uv.x + time) * cos(scale * uv.y + time);\n        scale *= 10.8;\n    }\n    \n    // Additional layer with twisting effect\n    vec2 twist = uv * vec2(0.7, 1.3) + vec2(0.5);\n    float layer2 = sin(twist.x * 10.0) * cos(twist.y * 8.0);\n    col += vec3(layer2 * 0.5);\n    \n    // Distortion effect\n    uv += vec2(sin(uv.x * 12.0 + time * 0.1) * 0.1, cos(uv.y * 10.0 + time * 2.5) * 0.15);\n    \n    // Fractal pattern variation\n    scale = 2.0;\n    for (int i = 0; i < 4; i++) {\n        col += vec3(0.8, 0.4, 0.2) / scale * sin(scale * uv.x + time * 2.0) * cos(scale * uv.y + time * 1.5);\n        scale *= 2.2;\n    }\n    \n    // Post-processing\n    // col *= smoothstep(0.5, 0.7, 1.0); // Pulsating effect\n    col = clamp(col, 0.0, 1.0); // Clamping colors\n    col = col * col * (3.0 - 2.0 * col); // Contrast adjustment\n    col *= vec3(1.0, 0.8, 0.7); // Color tint\n    col = pow(col, vec3(0.8)); // Gamma correction\n    \n    // Black background\n    //vec2 blackBorder = max(abs(uv) - vec2(0.9), 0.0);\n    //float blackBorderFactor = min(min(blackBorder.x, blackBorder.y), 1.0);\n    //col = mix(col, vec3(0.0), blackBorderFactor);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}