{"ver":"0.1","info":{"id":"Mf3XW8","date":"1713843351","viewed":161,"name":"Sound Of Silence v2","username":"jorge2017a2","description":"Sound Of Silence v2","likes":11,"published":1,"flags":8,"usePreview":0,"tags":["2d","sound","soundofsilencev2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n//Sound Of Silence v2\n//---12-abril-2024\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(4.0*antialiasing(1.5),0.,d - (b) )\n#define S3(d,b) smoothstep(12.0/antialiasing(0.5),0. , d - (b) )\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\nvec3 D2(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S2( distObj,0.0)); return colOut; }\n\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\n\n\nvec3 suelo(vec2 p, vec3 colout)\n{   float fx=0.01*sin(p.x*20.0);\n    float d1=fx+1.15+p.y;\n    d1=abs(d1)-1.7;\n    colout=D2(vec3(0.2,0.75,0.2)-p.y-0.1,colout,d1);\n    return colout;\n}\n\n\n\nvec3 montes(vec2 p, vec3 colout)\n{//Mountains\n    ///https://www.shadertoy.com/view/MfyGW1\n    float y = abs(fract(p.x*5.0)-0.5)*0.1;\n    y+=abs(fract(p.x*12.0)-0.5)*0.05+0.75;\n    y+=sin(p.x*8.0)*0.05;\n    y+=sin(p.x*15.0)*0.02;\n    y+=0.01;\n    float m1 = smoothstep(y-0.003,y+0.003,p.y);\n    colout = mix(vec3(0.4,0.2,0.1),colout,m1);\n    return colout;\n}\n\nvec3 hacerPato(vec2 p, vec3 colout)\n{ float dif;vec2 A,B,med;\n\n//cabeza\nfloat r1=0.21;\n    vec2 pos=vec2(0.93,3.56);\n    float d1= sdCircle(p-pos,r1);\n    colout= DrawFigBorde(vec3(0.7,0.6,0.2),colout, d1 );\n    \n//ojo izq    \nfloat r2=0.07;\n pos=vec2(0.77,3.63);\nfloat d2= sdCircle(p-pos,r2);\n\n//ojos\nfloat r3=0.06;\n pos=vec2(0.84,3.63);\nfloat d3= sdCircle(p-pos,r3);\n\nfloat r4=0.26;\n pos=vec2(0.91,2.67);\nfloat d4= sdCircle(p-pos,r4);\n\n//rodilla izq\nfloat r5=0.07;\npos=vec2(0.91,2.41);\nfloat d5= sdCircle(p-pos,r5);\ncolout= DrawFigBorde(vec3(0.7,0.6,0.2),colout, d5);\n\n//rodilla\nfloat r6=0.07;\npos=vec2(1.1,2.4);\nfloat d6= sdCircle(p-pos,r6);\ncolout= DrawFigBorde(vec3(0.7,0.6,0.2),colout, d6);\n\n\n//inferior circulo der diferencia\nfloat r7=0.2;\npos=vec2(1.18,3.06);\nfloat d7= sdCircle(p-pos,r7);\ncolout= DrawFigBorde(vec3(0.7,0.6,0.2),colout, d5);\n\n//pansa\nfloat r8=0.38;\n pos=vec2(1.01,2.76);\nfloat d8= sdCircle(p-pos,r8);\n dif= differenceSDF(d8, d7);\ncolout= DrawFigBorde(vec3(0.7,0.6,0.2),colout, dif);\n\n\n//cuello\nfloat r9=0.46;\npos=vec2(0.39,3.25);\nfloat d9= sdCircle(p-pos,r9);\n dif=differenceSDF(d8, d7);\n dif= differenceSDF(dif, d9);\n\n//cuello\nfloat r7a=0.2;\npos=vec2(0.9,3.26);\nfloat d7a= sdCircle(p-pos,r7a);\ndif=differenceSDF(d7a,d7);\ndif=differenceSDF(dif,d9);\n\n//cuello\nfloat r10=0.4;\n pos=vec2(1.35,3.18);\nfloat d10= sdCircle(p-pos,r10);\ndif=differenceSDF(dif,d10);\ndif=unionSDF(dif, d1);  //union con cabeza\ncolout= DrawFigBorde(vec3(0.7,0.6,0.2),colout, dif);\n\n///ojos izq y der\ncolout= DrawFigBorde(vec3(1.0),colout, d2);\ncolout= DrawFigBorde(vec3(1.0),colout, d3);\n\n\nA=vec2(0.92,-0.67+2.93);\nmed=vec2(0.03,0.1);\nfloat d11=sdBox(p-A,med);\ncolout= DrawFigBorde(vec3(0.5),colout, d11);\n\nA=vec2(1.1,-0.68+2.93);\nmed=vec2(0.03,0.1);\nfloat d12=sdBox(p-A,med);\ncolout= DrawFigBorde(vec3(0.5),colout, d12);\n\n\n///----inicia boca\n\n//para boca\nA=vec2(0.61,0.51+2.95);\nr1=0.2;\nfloat d16a=sdCircle(p-A,r1);\n\nA=vec2(0.6,0.71+3.0);\nr1=0.29;\nfloat d13=sdCircle(p-A,r1);\n\nA=vec2(0.59,0.84+3.0);\nr1=0.29;\nfloat d14=sdCircle(p-A,r1);\ndif=differenceSDF(d13,d14);\ndif=intersectSDF(dif,d16a);\n\n\nA=vec2(0.46,0.51+3.0);\nr1=0.06;\nfloat d15=sdCircle(p-A,r1);\ndif=unionSDF(dif,d15);\ncolout= DrawFigBorde(vec3(0.5),colout, dif);\n    return colout;\n\n    \n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    uv-=vec2(0.15,-1.0);\n    float esc=2.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    float t=iTime;\n    vec3 col=vec3(0.5,0.5,1.0); \n    col= montes((uv-vec2(0.0,1.5))*0.45,col);\n    col=suelo((uv-vec2(0.0,-0.3))*0.25, col);\n    col= hacerPato(uv-vec2(0.0,-1.5),col);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//Referencia de sonido \n//IQ,AeroShark333\n\n//Modificado por Jorge2017a2---jorgefp\n//referencia video\n//https://www.youtube.com/....\n//Disturbed _ Simon & Garfunkel - The Sound of Silence EASY Piano Tutorial\n\n#define PI acos(-1.)\n#define PIH (PI*.5)\n#define TAU (PI*2.)\n#define TWO_PI 6.2831\n#define DD(a,b) n=(s>=a)? vec2(a,b):n;\n#define D3(a,b,c) n3=(s>=a && s<=c)? vec3(a,b,c):n3;\n\nconst float ttotal=40.0; //32.0;//15.5*2.0;\nconst float pi = 3.1415927;\nconst float tau = 6.283185;\n\n//https://www.shadertoy.com/view/ss3cDN\n// Created by AeroShark333\nfloat squareWave750( float f, float x)\n{ return (min(1.0, floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 3.0 ))); }\n\nfloat squareWave500( float f, float x)\n{ return (floor( 2.0 * floor( f * x ) - floor( 2.0 * f * x ) + 1.0 )); }\n\nfloat squareWave250( float f, float x)\n{ return (max(0.0, floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 1.0 ))); }\n\nvec2 squareWave250( vec2 f, float x)\n{ return (max(vec2(0.0), floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 1.0 ))); }\n\nfloat triangleWave500( float q, float x)\n{ float f = 1.0-2.0*abs(0.5-mod(q*x,1.0));  return (f); }\n\nfloat triangleWave250( float q, float x)\n{ float f = max(0.0,1.0-2.0*abs(0.5-2.0*mod(q*x,1.0))); return (f); }\n\nfloat convertBassFreq (float f)\n{ return (f/2.0); }\n\nfloat  sawf(float t , float freq)\n{  return fract(t * freq) - 0.5; }\n\nfloat wave1( float x, float dxdt, in vec2 v, float t , float w)\n{   float f2;\n    float sampleX=0.0;\n    float f=w;\n    sampleX =squareWave250(f,t)*triangleWave250(f,t) *exp(-2.5*t);\n    f2=(sampleX+sawf(t,f));\n    float fx=f2*1.5;\n    return fx;\n}\n\nfloat SoundIq(float time)\n{ ///referencia de notas musicales... iq \n  time = mod( time+1.0, ttotal);\n // tune\n  float tempo = 0.5;\n  float s = time*tempo;\n vec3 n3=vec3(0.0);\n \n  D3(0.000,38.0,0.125) D3(0.125,38.0,0.250) D3(0.250,41.0,0.375) D3(0.375,41.0,0.500) D3(0.500,45.0,0.625) D3(0.625,45.0,0.750)\n D3(0.750,24.0,1.750) D3(0.750,43.0,1.750) D3(1.750,31.0,2.750) D3(1.875,36.0,2.000) D3(2.000,36.0,2.125) D3(2.125,36.0,2.250)\n D3(2.250,40.0,2.375) D3(2.375,40.0,2.500) D3(2.500,43.0,2.625) D3(2.625,43.0,2.750) D3(2.750,26.0,3.750) D3(2.750,41.0,3.750)\n D3(3.750,33.0,4.250) D3(3.875,41.0,4.000) D3(4.000,41.0,4.125) D3(4.125,41.0,4.250) D3(4.250,29.0,4.500) D3(4.250,45.0,4.375)\n D3(4.375,45.0,4.500) D3(4.500,33.0,4.750) D3(4.500,48.0,4.625) D3(4.625,48.0,4.750) D3(4.750,34.0,5.000) D3(4.750,50.0,5.000)\n D3(5.000,33.0,6.000) D3(5.000,48.0,5.500) D3(5.750,41.0,5.875) D3(5.875,41.0,6.000) D3(6.000,29.0,6.250) D3(6.000,45.0,6.125)\n D3(6.125,45.0,6.250) D3(6.250,33.0,6.500) D3(6.250,48.0,6.375) D3(6.375,48.0,6.500) D3(6.500,34.0,7.000) D3(6.500,50.0,7.000)\n D3(7.000,33.0,8.000) D3(7.000,48.0,7.500) D3(7.750,41.0,7.875) D3(7.875,41.0,8.000) D3(8.000,34.0,9.000) D3(8.000,50.0,8.125)\n D3(8.125,50.0,8.750) D3(8.750,50.0,8.875) D3(8.875,52.0,9.000) D3(9.000,34.0,10.000) D3(9.000,53.0,9.125) D3(9.000,53.0,9.125)\n D3(9.125,53.0,9.500) D3(9.500,52.0,9.625) D3(9.625,50.0,10.000) D3(10.000,33.0,11.000) D3(10.000,48.0,10.750) D3(10.750,50.0,10.875)\n D3(10.875,48.0,11.000) D3(11.000,26.0,12.000) D3(11.000,45.0,12.000) D3(12.000,29.0,12.500) D3(12.125,41.0,12.250) D3(12.250,41.0,12.375)\n D3(12.375,41.0,12.500) D3(12.500,28.0,13.500) D3(12.500,48.0,13.250) D3(13.375,40.0,13.500) D3(13.500,26.0,14.500) D3(13.500,41.0,13.625)\n D3(13.625,38.0,14.500) D3(14.500,26.0,15.500) D3(14.625,38.0,14.750) D3(14.750,38.0,14.875) D3(14.875,38.0,15.000) D3(15.000,41.0,15.125)\n D3(15.125,41.0,15.250) D3(15.250,45.0,15.375) D3(15.375,45.0,15.500) D3(15.500,24.0,16.500) D3(15.500,43.0,16.500) D3(16.500,24.0,17.500)\n D3(16.750,36.0,16.875) D3(16.875,36.0,17.000) D3(17.000,40.0,17.125) D3(17.125,40.0,17.250) D3(17.250,43.0,17.375) D3(17.375,43.0,17.500)\n D3(17.500,26.0,18.500) D3(17.500,41.0,18.500) D3(18.500,26.0,19.500) D3(18.750,41.0,18.875) D3(18.875,41.0,19.000) D3(19.000,45.0,19.125)\n D3(19.125,45.0,19.250) D3(19.250,48.0,19.375) D3(19.375,48.0,19.500)\n \n \n  // lower one octave\n  n3.y -=12.; //12 notas\n  //n3.y +=12.; //12 notas\n      \n  // compute note frequency and time  \n  float f = 440.0*pow( 2.0, float(n3.y-69.)/12.0 );\n  float t = time - float(n3.x)/tempo;\n  if( n3.x==0.0 ) return 0.0;\n\n  // prepare wave parameters\n  float w = tau*f;\n  float dwdt = w/iSampleRate; // derivative\n    \n  // mix between bandlimited and raw saw waves  \n  vec2 v = smoothstep(-0.2,0.2,sin(t*vec2(1.0,0.5)) );\n  // build instrument\n  \n  float f1,y;\n  f1=wave1(w*t,1.00*dwdt,v,t,w);\n  \n  y=f1;\n  \n  \n  float wf  = 0.4*f1;\n  y=f1*wf;\n  //float offset=n3.x+n3.z;\n  float offset=n3.x;\n   y*=exp(-1.0/n3.z * (t -offset) );\nreturn y;\n}\n\nvec2 mainSound( in int samp, float time )\n{ float t1=mod(time, ttotal);\n  float y= SoundIq(t1)*0.5;\n  return vec2(y);\n}   \n\n","name":"Sound","description":"","type":"sound"}]}