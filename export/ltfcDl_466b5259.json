{"ver":"0.1","info":{"id":"ltfcDl","date":"1507037760","viewed":200,"name":"Hexatrip","username":"iapafoto","description":"inspired by https://www.shadertoy.com/view/MlXyDl","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["hexa","bipolar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Simple hexa distance by lomateron [simple hexagonal tiles] https://www.shadertoy.com/view/MlXyDl \n// Bouncy cam from Virgil [Rhodium] https://www.shadertoy.com/view/llK3Dy\n\n// Total antialiasing = AA*AA\n#define AA 8.\n\n\nvec2 Bipolar(vec2 p, float t) {\n    float s = sin(t),c = cos(t);\n    p *= mat2(c,-s,s,c)*(1.5+1.1*sin(t*.9));  \n    float d = .5*dot(p,p), b = .5+d;\n \treturn vec2(atan(p.y, .5-d), .5*log((b+p.x) / (b-p.x)));\n}\n\n// Simple hexa distance by lomateron (https://www.shadertoy.com/view/MlXyDl)\nfloat Hexa( vec2 u ) {\n    vec2 s = vec2(1,1.73),\n     a = mod(u     ,s)*2.-s,\n     b = mod(u+s*.5,s)*2.-s;\n\treturn .5*min(dot(a,a),dot(b,b));\n}\n        \n// Bouncing cam by Virgil (https://www.shadertoy.com/view/llK3Dy)\nfloat bounce(float t) {\n    return fract(.05*(t-1.))<.05?fract(-t)*0.1*sin(45.*t):0.;\n}\n\n\nvoid mainImage( out vec4 O, in vec2 pos ) {\n    float t = iTime,\n          e = bounce(t); \n    vec3 color, col = vec3(0);\n    \n    for (float i=0.; i<AA; i++) { // loop for antialiasing and displacement blur\n    for (float j=0.; j<AA; j++) {\n        t+=1./(30.*AA*AA);  // + displacement blur\n        vec2 p = .1*e+1.5*(pos+vec2(i*e*100.,j)/AA)/iResolution.y-1.;\n\t    p = Bipolar(p, 3.+2.*cos(.21*t));\n        color = abs(p.xyy);\n    \tfloat d = Hexa(9.23*p.xy+iTime), // hexa distance\n              k = .2+.2*cos(t*.5),\n              a = smoothstep(k,.3+k, d),\n              b = smoothstep(.01,.02, mod(d+.1, .2)-.1),\n              c = exp(-.55*abs(3.*cos(.2*t)-p.y)); // switch effect first term give the thickness   \n\t\tcol += mix(color-2.*a, .5*color*b, c) / (1.+10.*abs(p.y));\n    }}\n    \n    col/=AA*AA;\n    O = vec4(1.1*pow(col,vec3(.4)), 1.);\n    \n}","name":"Image","description":"","type":"image"}]}