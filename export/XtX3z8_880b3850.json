{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float f1(float x)\n{\n    return 2.0 / x * sin(iTime);//pow(x,4.0) - 5.0*pow(x * sin(iTime),2.0) + cos(iTime);\n}\n\nfloat f2(float x)\n{\n    return pow(x,4.0) - 5.0*pow(x * sin(iTime),2.0) + cos(iTime);\n}\n\nbool queryFunc(vec2 ref, float func)\n{\n   return (ref.y < func + 0.1 && ref.y > func - 0.1 - abs(dFdx(func)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) // OKAY FINE I went overboard. Sorry. But isn't it pretty?\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    float v = smoothstep(1.05, 0.4, length(uv - 0.5));\n    \n    vec2 ref = uv;\n    ref *= 20.0;\n    ref.x -= 10.0;\n    ref.y -= 10.0;\n    \n    float func1 = f1(ref.x);\n    float func2 = f2(ref.x);\n    \n    if(queryFunc(ref, func1)  || \n       queryFunc(ref, -func1) || \n       queryFunc(ref, func2)  || \n       queryFunc(ref, -func2) || \n       (abs(ref.x) <= 0.02)   || \n       (abs(ref.y) <= 0.03))\n\t\tfragColor = vec4(vec3(0.0), 1.0) * v;\n\telse\n        fragColor = vec4(1.0) * v;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XtX3z8","date":"1418265394","viewed":225,"name":"Graphing Things","username":"Slyth","description":"Testing out graphing functions. I know why the banding occurs, it's obvious. But I'm really tired and need to go to sleep so does anyone have any suggestions on how to fix it? Changing 0.2 produces other artifacts you can see for yourself. Fun stuff.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","graph"],"hasliked":0,"parentid":"","parentname":""}}