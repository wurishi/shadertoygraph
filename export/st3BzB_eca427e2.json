{"ver":"0.1","info":{"id":"st3BzB","date":"1722704707","viewed":7,"name":"TBOS_Patterns4","username":"nako","description":"The Book of Shades\nhttps://thebookofshaders.com/09/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float drawLine(vec2 p1, vec2 p2, vec2 st){\n    float dist1 = distance(p1, p2);\n    float dist2 = distance(p1, st);\n    if(dist1+0.03 < dist2){\n        return 1.0;\n    }\n    vec2 onLine = p1 + (p2-p1)*(dist2/dist1);\n    return smoothstep(0.03, 0.06, distance(onLine, st));\n}\nfloat drawFrame(vec2 st){\n    float top = drawLine(vec2(-0.1, 1.), vec2(.5, 1.), st);\n    float left = drawLine(vec2(1., -0.1), vec2(1., .5), st);\n    float line = drawLine(vec2(.5, 1.), vec2(1., .5), st);\n    return top*left*line;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    \n    st -= vec2(0.5*iResolution.x/iResolution.y, 0.5);\n    st *= vec2(sin(iTime)*0.5+0.5);\n    \n    float N = 5.0;\n    st *= N;\n    st = fract(st);\n    st = abs(st*2. -1.0);\n    \n    float d = drawFrame(st);\n    vec3 col = vec3(d);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}