{"ver":"0.1","info":{"id":"mdycDG","date":"1696531098","viewed":36,"name":"Swiss Cheese Bubbles","username":"iznax","description":"experimenting with a grid of randomly sized circles that animate","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circles","grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 noise(float p)\n{\n    return vec2(sin(p*43151.37),sin(p*20935.81));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float GX = 2.*9.;\n    float GY = 2.*6.;\n    float gridx = floor(uv.x * GX);\n    float gridy = floor(uv.y * GY);\n\n    // Time varying pixel color\n    vec3 col = 0.15 + 0.5*cos(iTime+uv.xyx+vec3(1.5*gridx,2,4));\n\n    float key = gridx * 100. + gridy;;// + floor(iTime*0.5);\n    \n    float gridSizeX = 1.0/GX;\n    float gridSizeY = 1.0/GY;\n    vec2 offset = noise(key) * gridSizeX * 0.1;\n    offset.x += sin(iTime*.3+gridx+gridy)*.01;\n    vec2 center = vec2(gridx + 0.5, gridy + 0.5) * vec2(gridSizeX,gridSizeY);\n\n    float radius = min(gridSizeX,gridSizeY)*0.45 - length(offset);\n    \n    vec2 gpos = center + offset;\n    vec2 circle = gpos * iResolution.xy;\n\n    // Output to screen\n    float dist = length(fragCoord - circle);\n    if (dist < radius*500.)\n    {\n        fragColor = vec4(col,1.0);\n        return;\n    }\n    else\n    {\n        fragColor = vec4(1.0,0.8,0.,1.0);\n        //if (int(gridx) == int(mod(iTime*4.,GX))) fragColor = vec4(0.95);\n        //if (int(gridy) == int(mod(iTime,6.))) fragColor = vec4(0.95,0.95,0.75,1.0);\n    }\n    \n    //if (length(uv - vec2(0.50,0.50)) < 0.01) fragColor = vec4(1,0,0,1);\n    //if (length(uv - vec2(0.50,0.95)) < 0.01) fragColor = vec4(1,0,0,1);\n    //if (length(uv - vec2(0.05,0.95)) < 0.01) fragColor = vec4(1,0,0,1);\n    //if (length(uv - vec2(0.95,0.95)) < 0.01) fragColor = vec4(1,0,0,1);\n    \n    //if (circle.x > 700.) fragColor = vec4(0);\n}","name":"Image","description":"","type":"image"}]}