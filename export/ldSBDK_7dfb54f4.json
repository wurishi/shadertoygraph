{"ver":"0.1","info":{"id":"ldSBDK","date":"1502185864","viewed":193,"name":"Ball in a Room","username":"slerpy","description":"A ball in a room with a lot of reflections","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["reflection","simple","raytracer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318530718\n\n#define FAR 25.\n#define ITER 128\n#define QUA .001\n#define NORK 5e-4\n\n#define REF 0.56\n#define RITER 16\n#define RRFB .001\n\n#define BRG 0.83\n\nfloat map(vec3 p)\n{\n    float d = FAR;\n\td = min(d, length(p-vec3(0.75,vec2(.0)))-1.);\t// center ball\n\td = min(d, 5. - abs(p.x));\t\t\t\t\t\t// left & right wall\n\td = min(d, 3. - abs(p.y - 2.));\t\t\t\t\t// floor & ceil\n\td = min(d, 5. - abs(p.z));\t\t\t\t\t\t// front & back wall\n\treturn d;\n}\n\nvec3 normal(vec3 p, float k)\n{\n\tvec2 e = vec2(.0,k);\n\treturn normalize(vec3(\n\t\tmap(p) - map(p - e.yxx),\n\t\tmap(p) - map(p - e.xyx),\n\t\tmap(p) - map(p - e.xxy)\n\t));\n}\n\nfloat tracer(vec3 ro, vec3 rd)\n{    \n    float t = .0, d;\n    for(int i=0; i < ITER; i++){        \n        d = map(ro + rd*t);\n        if (d < QUA*t || t > FAR) break;\n        t += d;\n    } \n    return t + QUA;\n}\n\nfloat hard_shadow(vec3 sp, vec3 lp, int iter)\n{   \n\tvec3 p, ld = normalize(sp - lp);\n\n\tfloat t = .0;\n\tfor(int i = 0; i < iter; i++)\n\t{\n\t\tp = lp + ld * t;\n\t\tfloat m = map(p);\n\t\tif (m < .0 || t > FAR) break;\n\t\tt += m;\n\t}\n\n\treturn max(1. - distance(p, sp), 0.);\n}\n\nvec3 color(vec3 sp, vec3 sn)\n{   \n    vec3 lp = vec3(-1, 1, -2);\n\tvec3 ld = normalize(lp - sp);\n    \n    float diff = max(dot(sn,ld),0.);\n    float shd = hard_shadow(sp, lp, 30);\n    \n    vec3 col = (sn.xyz+1.)/2.;\n    return col * diff * shd;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    if(fract((iTime-5.)/20.) < 0.5) uv.x *= -1.0;\n    \n\tvec3 ro = vec3(abs(10. - mod(iTime-5.,20.)) - 5., .0, -3.);\n    vec3 rd = normalize(vec3(uv,2.));\n    \n    float t = tracer(ro,rd);\n\tvec3 sp = ro + rd*t;\n\tvec3 sn = normal(sp,NORK);\n    \n    vec3 col = color(sp, sn);\n    \n    for(int i=0; i<RITER; i++)\n    {\n        if(t > FAR) break;\n            \n        rd = normalize(reflect(rd, sn));\n        ro = sp + rd * RRFB;\n        \n        t = tracer(ro, rd);\n        \n        sp = ro + rd * (t - RRFB);\n\t\tsn = normal(sp,NORK);\n    \n        col += color(sp, sn) * pow(REF, float(i) + 1.);\n    }\n    \n\tfragColor = BRG * vec4(col,1.);\n}\n","name":"Image","description":"","type":"image"}]}