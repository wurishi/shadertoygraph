{"ver":"0.1","info":{"id":"lsGGWR","date":"1453931331","viewed":131,"name":"not my balls","username":"dysposin","description":"to the walls.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["balls","but","still"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float mirror(float c, float origo){\n    c = origo + origo - c;\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy; // circle's uv\n    vec2 uv2 = fragCoord.xy / iResolution.xy; // texColor's uv\n    uv.x = uv.x*(iResolution.x/iResolution.y); // fix the image ratio\n    \n    float rad = .2; // radius of the circle\n    vec2 pos = vec2(.5*(iResolution.x/iResolution.y), .5); // position of the circle\n    \n    float dist = length(pos - uv) - rad; // calculate the circle\n    \n    \n    if (dist < rad){ // if the pixel is inside the circle, rotate it\n        uv2.y = mirror(uv2.y, .5);\n\n    }\n    vec4 texColor = texture(iChannel0,uv2);\n    fragColor = texColor;\n\n}","name":"Image","description":"","type":"image"}]}