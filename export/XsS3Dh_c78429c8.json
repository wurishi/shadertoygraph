{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define CONTOURS\n//#define MOTION\nconst float EPSILON = 0.3;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 mouse_uv = iMouse.xy / iResolution.xy;\n\t\n\tfloat aspect = iResolution.y / iResolution.x;\n\tuv.x /= aspect;\n\tmouse_uv /= aspect;\n\tfloat R = 0.8;\n\tfloat R2 = 0.035;\n\tfloat c = 1.0;\n\n\t\n\tfloat intensities = 0.0;\n\tconst float length = 1.0;\n\tfor (float t_x = 0.0; t_x <= length; t_x+= 0.2) {\n\t\tfor (float t_y = 0.0; t_y <= length; t_y+= 0.2) {\n\t\t\n\t\t\tfloat offset = t_x / aspect;\n\t\t\n\t\t\tfloat sq_x = (uv.x - offset) * (uv.x - offset);\n\t\t\tfloat sq_y = (uv.y - t_y) * (uv.y - t_y);\n\t\t\t\n\t\t\tfloat motion = 0.65;\n#ifdef MOTION\n\t\t\tmotion +=  abs(sin(iTime / 3.0));\n#else\n\t\t\tmotion += .1;\n#endif\n\t\t\t\n\t\t\tfloat intensity = (R2 * motion) / sqrt(sq_x + sq_y);\n\t\t\t\n\t\t\tintensities += intensity;\n\t\t}\n\t}\n\t\n\tfloat sq_x_black = (uv.x - mouse_uv.x) * (uv.x - mouse_uv.x);\n\tfloat sq_y_black = (uv.y - mouse_uv.y) * (uv.y - mouse_uv.y);\n\tfloat intensity_black = (-R / 4.0) / sqrt(sq_x_black + sq_y_black);\n\n\tintensities += intensity_black;\n\t\n#ifdef CONTOURS \t\n\tif(false == (intensities > c - EPSILON && intensities < c + EPSILON)) {\n\t\tintensities = 0.0;\n\t}\n#endif\n\t\n\tfragColor = vec4(0.0, 0.4 * intensities, 0.4 * intensities, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsS3Dh","date":"1386889597","viewed":200,"name":"Isocontours","username":"mich","description":"Click and move the mouse for some interaction.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["isocontour"],"hasliked":0,"parentid":"","parentname":""}}