{"ver":"0.1","info":{"id":"DltczN","date":"1698955850","viewed":25,"name":"flipper dist plot","username":"melissaran","description":"248b question","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["distancefield","sdf","rectangle","distance","box","rect","rounded","primitive"],"hasliked":0,"parentid":"ml3yzH","parentname":"ball and rotating flipper"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 text(in vec2 fragCoord)\n{\n    vec2 position = (2.0 * iMouse.xy - iResolution.xy) / iResolution.y;\n\n    vec3 vColour = vec3(0);\n    vec2 vFontSize = vec2(8.0, 15.0);\n    float fDigits;\n    float fDecimalPlaces;\n    \n    vColour = mix( vColour, vec3(1.0, 0.0, 1.0), PrintValue( (fragCoord - vec2(184.0, 5.0)) / vFontSize, mod(iDate.w / (60.0 * 60.0), 12.0), 2.0, 0.0));\n\tvColour = mix( vColour, vec3(1.0, 0.0, 1.0), PrintValue( (fragCoord - vec2(184.0 + 24.0, 5.0)) / vFontSize, mod(iDate.w / 60.0, 60.0), 2.0, 0.0));\n\tvColour = mix( vColour, vec3(1.0, 0.0, 1.0), PrintValue( (fragCoord - vec2(184.0 + 48.0, 5.0)) / vFontSize, mod(iDate.w, 60.0), 2.0, 0.0));\n    \n    // Print Shader Time\n\tvec2 vPixelCoord1 = vec2(96.0, 5.0);\n\tfloat fValue1 = iTime;\n\tfDigits = 6.0;\n\tfloat fIsDigit1 = PrintValue( (fragCoord - vPixelCoord1) / vFontSize, fValue1, fDigits, fDecimalPlaces);\n\tvColour = mix( vColour, vec3(0.0, 1.0, 1.0), fIsDigit1);\n    \n    if(iMouse.x > 0.0)\n\t{\n\t\t// Print Mouse X\n\t\tvec2 vPixelCoord2 = iMouse.xy + vec2(-52.0, 6.0);\n\t\t//float fValue2 = iMouse.x / iResolution.x;\n        float fValue2 = position.x;\n\t\tfDigits = 1.0;\n\t\tfDecimalPlaces = 3.0;\n\t\tfloat fIsDigit2 = PrintValue( (fragCoord - vPixelCoord2) / vFontSize, fValue2, fDigits, fDecimalPlaces);\n\t\tvColour = mix( vColour, vec3(0.0, 1.0, 0.0), fIsDigit2);\n\t\t\n\t\t// Print Mouse Y\n\t\tvec2 vPixelCoord3 = iMouse.xy + vec2(0.0, 6.0);\n\t\t//float fValue3 = iMouse.y / iResolution.y;\n        float fValue3 = position.y;\n\n\t\tfDigits = 1.0;\n\t\tfloat fIsDigit3 = PrintValue( (fragCoord - vPixelCoord3) / vFontSize, fValue3, fDigits, fDecimalPlaces);\n\t\tvColour = mix( vColour, vec3(0.0, 1.0, 0.0), fIsDigit3);\n\t}\n\n    return vec4(vColour, 1);\n}\n\n\n\nvec2 rotatevec(in vec2 p, in float r, in float t){\n    float x = cos(r*t)*p.x + sin(r*t)*p.y;\n    float y = -sin(r*t)*p.x + cos(r*t)*p.y;\n    return vec2(x,y);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 position = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n    float t = position.x;\n    \n    float x = 0.51+21.*t;\n    float y = 5.-0.12*t;\n    \n    vec2 boxdim = vec2(10.,2.);\n   \n    //float d = sdBox(vec2(x,y), boxdim);\n    float d = sdBox(rotatevec(vec2(x,y),3.14/3.,t), boxdim);\n    \n    float scale = 0.1;\n    \n    if(position.y<d*scale){\n        fragColor = vec4(1.,1.,1.,1.);\n    }else{\n        fragColor = vec4(0.,0.,0.,1.);\n    }\n    \n    if(d<=0. || abs(position.y)<0.002){\n        fragColor = mix(fragColor,vec4(1.,0.,0.,1.),0.5);\n    }\n    \n    fragColor = mix(fragColor, text(fragCoord),0.5);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float DigitBin( const int x )\n{\n    return x==0?480599.0:x==1?139810.0:x==2?476951.0:x==3?476999.0:x==4?350020.0:x==5?464711.0:x==6?464727.0:x==7?476228.0:x==8?481111.0:x==9?481095.0:0.0;\n}\n\nfloat PrintValue( vec2 vStringCoords, float fValue, float fMaxDigits, float fDecimalPlaces )\n{       \n    if ((vStringCoords.y < 0.0) || (vStringCoords.y >= 1.0)) return 0.0;\n    \n    bool bNeg = ( fValue < 0.0 );\n\tfValue = abs(fValue);\n    \n\tfloat fLog10Value = log2(abs(fValue)) / log2(10.0);\n\tfloat fBiggestIndex = max(floor(fLog10Value), 0.0);\n\tfloat fDigitIndex = fMaxDigits - floor(vStringCoords.x);\n\tfloat fCharBin = 0.0;\n\tif(fDigitIndex > (-fDecimalPlaces - 1.01)) {\n\t\tif(fDigitIndex > fBiggestIndex) {\n\t\t\tif((bNeg) && (fDigitIndex < (fBiggestIndex+1.5))) fCharBin = 1792.0;\n\t\t} else {\t\t\n\t\t\tif(fDigitIndex == -1.0) {\n\t\t\t\tif(fDecimalPlaces > 0.0) fCharBin = 2.0;\n\t\t\t} else {\n                float fReducedRangeValue = fValue;\n                if(fDigitIndex < 0.0) { fReducedRangeValue = fract( fValue ); fDigitIndex += 1.0; }\n\t\t\t\tfloat fDigitValue = (abs(fReducedRangeValue / (pow(10.0, fDigitIndex))));\n                fCharBin = DigitBin(int(floor(mod(fDigitValue, 10.0))));\n\t\t\t}\n        }\n\t}\n    return floor(mod((fCharBin / pow(2.0, floor(fract(vStringCoords.x) * 4.0) + (floor(vStringCoords.y * 5.0) * 4.0))), 2.0));\n}\n\n\n","name":"Common","description":"","type":"common"}]}