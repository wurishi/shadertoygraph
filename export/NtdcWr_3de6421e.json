{"ver":"0.1","info":{"id":"NtdcWr","date":"1659599888","viewed":65,"name":"ring-sina-shader","username":"asyncoder","description":"how to use smoothstep function in your shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["smoothstep"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// d参数接受一个距离量，d0参数在指定距离的等距线附近绘制，\n// w参数表示绘制宽度, smth个参数是平滑比率。\nfloat stroke(float d, float d0, float w, float smth) {\n  float th = 0.5 * w;\n  smth = smth * w;\n  float start = d0 - th;\n  float end = d0 + th; \n  return smoothstep(start, start + smth, d) - smoothstep(end - smth, end, d);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float ratio = iResolution.x / iResolution.y;\n    \n    uv.x *= ratio;\n    \n    \n    float r = 0.2;\n    \n    vec2 center = vec2( 0.5 * ratio , 0.5);\n    \n    float  d  = length(uv - center);\n    \n    \n    float c  = smoothstep(d - 0.015, d, r) - smoothstep(d, d +  0.015, 0.18);\n    \n    float d1 = stroke(d, r, 0.03, 0.015);\n    \n    float d2 = stroke(uv.y - 4.0 * (uv.x - 0.5) * (uv.x - 0.5), 0.0, 0.02, 0.1);\n    \n    float d3 = stroke(uv.y * 2.0 - 1.0, sin(uv.x * 6.0 * 3.1415926538), 0.1, 0.1);\n\n\n    \n    \n    // Output to screen\n    fragColor = vec4(d1+d3, 1.0,1.0,1.0);\n}","name":"Image","description":"","type":"image"}]}