{"ver":"0.1","info":{"id":"NlGSRc","date":"1641096452","viewed":101,"name":"Hex Grid Study","username":"allllll3n","description":"Hex Study followed tutorial by Youtube channel The Art Of Code:https://www.youtube.com/watch?v=VmrIDyYiJBA","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 col1=vec3(0.831,0.518,0.408);\nvec3 col2=vec3(0.451,0.345,0.282);\nvec3 col3=vec3(0.647,0.18,0.294);\n\nfloat HexDist(vec2 p){\n    p=abs(p);\n    float c=dot(p,normalize(vec2(1.f,1.73f)));\n    c=max(c,p.x);\n    return c;\n}\n\nvec4 HexCoords(vec2 uv){\n    \n    vec2 ratio=vec2(1.f,1.73f);\n    vec2 halfRatio=ratio*.5f;\n   \n    \n    vec2 a=mod(uv,ratio)-halfRatio;\n    vec2 b=mod(uv-halfRatio,ratio)-halfRatio;\n    \n    vec2 gv;\n    if(length(a)<length(b)){\n        gv=a;\n    }else{\n        gv=b;\n    }\n    \n    float x=atan(gv.x,gv.y);\n    float y=.5f-HexDist(gv);\n    vec2 id=uv-gv;\n    return vec4(x,y,id.x,id.y);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5f*iResolution.xy)/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col=vec3(0.0f);\n\n    uv*=10.f;\n\n    \n    vec4 hc=HexCoords(uv);\n    //float c=smoothstep(0.1f,0.1f,hc.y*.8f*sin(hc.z*hc.w*iTime*0.5f));\n    float c=smoothstep(0.01f,0.025f,hc.y*.8f);//hex grid viz;\n    float d=step(hc.y,0.1f);\n    float e=step(hc.y,0.3f)-d;\n    float f=1.-step(hc.y,0.3f);\n    col+=d*col1;\n    col+=e*col2;\n    col+=f*col3;\n    //col+=step(HexDist(uv),.2f);\n    //col+=sin(HexDist(uv)*10.+iTime);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}