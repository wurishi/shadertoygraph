{"ver":"0.1","info":{"id":"7ld3Ds","date":"1637011911","viewed":128,"name":"The Head","username":"rmmcal","description":"The Head","likes":16,"published":1,"flags":32,"usePreview":0,"tags":["gray","art","head"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/////////////////////////////////////////////////////////////\n//                ...  The Head ...                      ////\n/////////////////////////////////////////////////////////////\n// Brasil/Amazonas/Manaus\n// Created by Rodrigo Cal (twitter: @rmmcal)\n// - Published: 2021/11\n// https://www.shadertoy.com/view/7ld3Ds\n//\n/////////////////////////////////////////////////////////////\n\n\nfloat gray(vec4 c){\n    return length(c.rgb);\n}\n\n\nvec3 mapTx (vec2 uv , float gs){\n\n    float nl = 60.+ uv.x*150.0*(cos(uv.x*4.0)*.5+.5);\n    float nw = 5.;\n    float f1 = cos(uv.x*100.0)*.2 +(- mod(uv.y*nl,1.0)*50.+25.5)*nw/nl;\n    vec3 c = vec3(abs(f1)+.2);\n    float g = -gs*.8+1.2;\n    c = mix(c, vec3(g), g);\n    return c;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 ar =  vec2(1., iResolution.y/iResolution.x);\n    \n    vec2 p = (uv - .5)*1.0 * ar;\n    vec2 uvp = uv * ar;\n\n    float b = iResolution.x/5. ;\n    float s = .5;\n    float f = 0.;\n  \n    vec4 tx =  ( texture(iChannel0,  ((floor(p*b)/(b))/ar  +.5 )) );\n    float g = length ( tx );\n  \n    f = smoothstep(s-0.1,s, (length(fract(p*b)*s-s/2.0) + g*s/2.)) ;\n    \n    vec3 c = vec3(f);\n  \n    \n    fragColor = vec4(c,1.0);\n \n   \n    tx = texture(iChannel0, uv,0.);\n    float gs = gray(clamp(tx, 0., 1.0));\n    \n    c = mapTx(uv, gs);\n    if (gs<.95)\n    fragColor = vec4(vec3(c.x,c.x,c.x+.1),1.0);\n   \n    g = -gs*.8+1.2;\n    c = mix(c, vec3(g), g);\n    if (gs<.6)\n        fragColor *= vec4(vec3(c.x,c.x+.1,c.x),1.0);\n\n    fragColor *= gs+.5;\n   \n   \n    // inspired: https://www.shadertoy.com/view/MdX3Dr\n    vec4 d = vec4(1.0 / iResolution.xy,0.,0.);\n    g = 0.0;\n    float base = gray(texture(iChannel0, uv ));\n    g = max(g, abs( base - gray(texture(iChannel0, uv + d.xz)) ) );\n    g = max(g, abs( base - gray(texture(iChannel0, uv - d.xz)) ) );\n    g = max(g, abs( base - gray(texture(iChannel0, uv + d.zy)) ) );\n    g = max(g, abs( base - gray(texture(iChannel0, uv - d.zy)) ) );\n    g = (g+.5)*1.5-.5;\n     \n     \n    fragColor *= vec4(1.0-g);\n    fragColor = clamp(fragColor,0.,1.0);\n    fragColor = mix(fragColor,tx, sin(iTime*.25-2.));\n \n\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//  https://www.shadertoy.com/view/MljBDG\n\nvec2 mapTexture (vec2 uv, float r, float i, float s){\n    vec2 U = uv, V;\n    V = floor(U);\n    U.x=abs(mod(U.x, 2.)+i);\n    if (mod(V.y,2.0)==0.0) U*=-1.;\n    U = fract(U)-.5;\n    vec2 a = cos( (r) * max(0.,.5-length(U)) - vec2(33,0) );\n    U.y = dot(a , U);\n    return  smoothstep(-s,s,U/fwidth(U));\n    \n}\n////////////////////////////////\n\n//https://iquilezles.org/articles/distfunctions\nfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n \n\n/////////////////////////////////////////////////////////////\n\nconst float pi = 3.1415926;\nconst float pi2 = 2.*pi;\nconst float rad = pi/180.;\nfloat rnd ;\n\nmat2 rotate(float x){\n    float c = cos(x);\n    float s = sin(x);\n    return mat2(c,s,-s,c);\n}\n  \nvec4 v(float v){\n    return vec4(v, 0.,0.,0.);\n}\nvec4 v(float v, float v2){\n    return vec4(v, v2, 0.,0.);\n}\n\nvec4 vmin(vec4 v1, vec4 v2){\n    return v1.x < v2.x ? v1 : v2;\n}\n\nvec4 vmin(vec4 v1, float v2){\n    return v1.x < v2 ? v1 : v(v2);\n}\n\nvec4 vmin(vec4 v1, float v2, float v3){\n    return v1.x < v2 ? v1 : v(v2,v3);\n}\n\n\nvec4 vminS( vec4 d1, float d2, float k, float id ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1.x)/k, 0.0, 1.0 );\n    return v( mix( d2, d1.x, h ) - k*h*(1.0-h),    h >= .55 ? d1.y : id ); \n}\n\nvec4 vmaxS( vec4 d2, float d1, float k, float id ) {\n    float h = clamp( 0.5 - 0.5*(d2.x+d1)/k, 0.0, 1.0 );\n    return v( mix( d2.x, -d1, h ) + k*h*(1.0-h), d2.y ); \n}\n\nvec4 vminI( vec4 d2, float d1, float k, float id ) {\n    float h = clamp( 0.5 - 0.5*(d2.x-d1)/k, 0.0, 1.0 );\n    return v( mix( d2.x, d1, h ) + k*h*(1.0-h) , d2.y );\n}\n\nvec4 dist(vec3 p)\n{\n    vec4 d = v(1.0);\n    vec2 ps = ((p.xy+vec2(3., 2.)))/1.0;\n    float f = .1;\n    d = min(d, .1);\n\n    float wave = cos(cos(p.x*11.01) + cos((p.y+.5)*11.01)+ cos((p.x*.5+.5)*11.01) + iTime)*.03;\n    d = vmin(d, 1.- p.z + wave, 0.0);\n    \n    /**/\n    d = vminS(d, sdSphere(  p-vec3(0.,0.,.0),     .2 ), .01, 1.0);\n    d = vminS(d, sdSphere(  p-vec3(0.,0.,0.2),   0.2 ), .3, 1.0);\n    d = vminS(d, sdSphere(  p-vec3(0.17,0.,0.38),  0.09 ), .1, 1.0);\n    d = vminS(d, sdSphere(  p-vec3(0.3,0.,0.2), 0.02 ), .1, 1.0);\n    \n    \n     p.x+=0.01;\n    vec3 pn = p*(vec3(1.0,sign(p.y)*.5,1));\n    \n    // eye h\n    d = vmaxS(d, sdSphere(  pn-vec3(0.25,0.05,0.1), 0.03 ), .03, 1.0);\n    \n    // eyebrow\n    d = vminS(d, sdSphere(  pn-vec3(0.20,0.05,0.05+abs(-p.y*p.y-.1)-.12), 0.03 ), .05, 1.0);\n\n    // nose h up\n    d = vmaxS(d, sdSphere(  pn-vec3(0.34,0.01,0.15), 0.01 ), .05, 1.0);\n    \n    // nose up f\n    d = vmaxS(d, sdSphere(  pn-vec3(0.3,0.05,0.15), 0.02 ), .03, 1.0);\n    \n    // nose base\n    d = vmaxS(d, sdSphere(  pn-vec3(0.3,0.04,0.2), 0.02 ), .04, 1.0);\n    \n    // nose 2 part\n    d = vminS(d, sdSphere(  p*(vec3(1.0,sign(p.y),1))-vec3(0.3,0.03,0.22), 0.01 ), .02, 1.0);\n  \n    // nose front\n    d = vminS(d, sdSphere(  p-vec3(0.33,0.0,0.22), 0.01 ), .04, 1.0);\n  \n    // nose in\n    d = vmaxS(d, sdSphere(  p*(vec3(1.0,sign(p.y)*.5,1))-vec3(0.31,0.014,0.25), 0.014 ), .0, 1.0);\n  \n  \n    p.x-=0.014;\n    \n    // eye\n    d = vminS(d, sdSphere(  p*(vec3(1.0,sign(p.y),1))-vec3(0.19,0.09,0.1), 0.05 ), .00, 2.0);\n    d = vminS(d, sdSphere(  p*(vec3(1.0,sign(p.y),1))-vec3(0.215,0.091,0.1), 0.03 ), .00, 3.0);\n    d = vmaxS(d, sdSphere(  p*(vec3(1.0,sign(p.y),1))-vec3(0.24,0.09,0.1), 0.009 ), .00, 2.0);\n   \n    d = vminS(d, sdSphere(  p*(vec3(1.0,sign(p.y),8))-vec3(0.20,0.09,0.6-.1*sin(abs(p.y)*23.0)), 0.05 ), .00, 3.0);\n    d = vminS(d, sdSphere(  p*(vec3(1.0,sign(p.y),4))-vec3(0.20,0.09,0.15-.05*sin(abs(p.y)*33.0-pi*.5)), 0.08 ), .00, 3.0);\n   \n    \n    // ear\n     d = vminS(d, sdSphere(  p*(vec3(1.0,sign(p.y)*2.0,1))-vec3(0.0,0.5,0.1), 0.05 ), .00, 3.0);\n   \n \n    // mouth part 1\n    d = vmaxS(d, sdSphere(  p*(vec3(1.0,sign(p.y)*.01,1))-vec3(0.29,0.05,0.31-.1*sin(p.x*12.0)), 0.07 ), .00, 1.0);\n   \n     // cheek\n    d = vminS(d, sdSphere(  p*(vec3(1.0,sign(p.y),1))-vec3(0.18,0.10,0.22), 0.01 ), .15, 1.0);\n\n    // mouth part 2\n    vec3 boc = vec3(0.20,0.,0.31-.1*sin(p.x*12.0));\n    d = vmaxS(d, sdSphere(  p-boc, 0.07 ), .00, 1.0);\n \n    vec3 p1 = p;\n    float k = 64.0;\n    p1.y =  mod((p.y+.5)*k,1.)/k -1./(k*2.0) ;\n    \n    // tooth\n    d = vminS(d, max(sdSphere(  p-boc, 0.07 ),  sdSphere(  p1-vec3(0.25, 0.00, 0.28), 0.01 )  ), .00, 2.0);\n    d = vminS(d, max(sdSphere(  p-boc-vec3(0.,0.,0.), 0.07 ),  sdSphere(  p1-vec3(0.245, 0.00, 0.335), 0.01 )  ), .00, 2.0);\n  \n    // hair\n    d = vminS(d, max(-d.x, sdSphere(  p*vec3(1,1,1.4)-vec3(0.0,0.08,-0.05), 0.20 )), .01, 4.0);\n    d = vminS(d, max(-d.x, sdSphere(  p*vec3(1,1,1.4)-vec3(0.0,0.0,-0.05), 0.25 )), .01, 4.0);\n \n    return d;\n}\n\nvec3 getNormal(vec3 p)\n{\n    vec2 d = vec2(0., 0.01);\n    float x = dist(p-d.yxx).x;\n    float y = dist(p-d.xyx).x;\n    float z = dist(p-d.xxy).x;\n    return normalize(vec3(x,y,z)-dist(p).x);\n}\n\nvec3 hsv2rgb(float v){\n\treturn abs(fract(v + vec3(3, 2, 1) / 3.) - .5) * 6. - 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pc = (uv-.5)*vec2(1, iResolution.y/iResolution.x);\n\n    vec3 p = vec3(0.);\n    \n    float sr = 2.+cos(iTime);\n\n    float a = iTime*.05 * (max(-1.0,cos(iTime*.25))* .005+.995 );\n    a =  (cos(iTime*.25));\n    vec2 mouse = iMouse.xy/iResolution.x;\n \n    p = vec3(sr*cos(a)-.0,sr*sin(a), 0.2-2.0*mouse.y);\n    vec3 d = normalize(vec3(pc,1.0));\n    d.yz *= rotate(pi/2.0 - mouse.y*.5 - mouse.y*(+1.3 -sr*.38));\n    d.xy *= rotate(-a+pi*3./2.0);\n\n    vec3 c=vec3(0.0);\n    float t = 0.;\n    float pd = 1e19;\n    vec4 hit;\n    vec4 hitn;\n    vec3 cadd;\n    vec3 cadd2;\n    float caddm = 1.; \n    for (int i = 0 ; i < 120; i++)\n    {\n        hit = dist(p);           // current \n        //hitn = dist(p+ d*hit.x); // next \n        float h=hit.x; \n        //float h2=hitn.x;\n        //h = (h+h2)/2.0;\n\n        //float y = h*h/(2.0*pd);\n        //float k = sqrt(h*h-y*y);\n        //pd = h;\n        //h = min(h, h/max(0.0, t-y));\n\n        if (h < 0.001)\n         break;\n        t+=h*(t+0.03);\n        \n        if (t>5.0)\n         break;\n        \n        \n        p += d*h;\n        cadd += vec3(1,.5,.25)*h;\n        \n        caddm = min(caddm, h);\n        cadd2 += vec3(1,.5,.25)/caddm;;\n    }\n    vec3 pn = getNormal(p);\n    c += pn.z*.0;\n \n  \n   \n    if (hit.y==0.0) { \n        uv = 8.*fragCoord/iResolution.y;\n        uv.x+= iTime*floor(uv.y)*.5;\n        c += (normalize(pn-vec3(0.,0., .7)).z)*mapTexture(p.xy*2.0,10.0,1.0,1.0).y;\n    }\n   \n    if (hit.y==1.0) {\n  \n        c = (-pn.xxx)*vec3(0.99,0.81,0.70); \n    }\n    if (hit.y==2.0) {\n       \n        c = (-pn.xxx); \n    }\n    if (hit.y==3.0) {\n       \n        c = (-pn.xxx)*1.*(vec3(0.5,0.3,0.2)*.75+.25); \n    }\n    if (hit.y==4.0) {\n       \n        c = (-pn.xxx)*1.*(vec3(0.5,0.3,0.2)*.75+.25); \n        c *= .75+.25*cos(p.y*200.0 + 100.0*(  (atan(pn.x, pn.z))));\n    }\n   \n   \n    if (t>5.){\n        uv = (log(sr+1.5))*10.10*(fragCoord/iResolution.x-vec2(.5,.25));\n        uv.x+= floor(uv.y)*.2;\n        c = vec3(mapTexture(uv.xy*2.0,10.0,-1.0,1.0).y)*.3;\n    }\n    \n    fragColor = vec4(c,1.0);\n    \n    \n    if (hit.y==0.0) {\n      \n    }\n   \n}","name":"Buffer A","description":"","type":"buffer"}]}