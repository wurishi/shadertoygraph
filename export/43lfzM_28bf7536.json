{"ver":"0.1","info":{"id":"43lfzM","date":"1728189266","viewed":32,"name":"AR?","username":"JonasPK","description":"audio","likes":0,"published":1,"flags":36,"usePreview":0,"tags":["audio"],"hasliked":0,"parentid":"MXfyWf","parentname":"BearLake2"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define DAMPENING 0.9995\n#define BLACK vec4(0.0, 0.0, 0.0, 1.0)\n#define MID_LEVEL vec4(0.5, 0.5, 0.0, 1.0)\n#define SOUND_SPEED 1.0\n#define SOUND_LEVEL 4.0\n#define NOISE_LEVEL 0.00\n#define DISH_SIZE 1.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 center = iResolution.xy*0.5;\n    float dist = distance(fragCoord, center)/(iResolution.y*0.5);\n    dist /= DISH_SIZE;\n    \n    \n    /*\n    if(dist >= 0.98) {\n        fragColor = BLACK;\n        return;\n    }\n    */\n    if(iFrame <= 10) {\n        fragColor = MID_LEVEL;\n        return;\n    }\n    vec2 pixelSize = vec2(1.0)/iResolution.xy;\n\n    float current = 0.0;\n    float prev = texture(iChannel0, uv).r;\n    float prev_prev = texture(iChannel0,uv).g;\n    \n    if(dist <= SOUND_SPEED) {\n        float audioSample = texture(iChannel1, vec2(dist/SOUND_SPEED, 0.75)).r;\n        audioSample -= 0.5;\n        audioSample *= SOUND_LEVEL;\n        current += audioSample;\n    }\n\n    current += \n        texture(iChannel0,vec2(uv.x+pixelSize.x,uv.y)).r - 0.5 +\n        texture(iChannel0,vec2(uv.x-pixelSize.x,uv.y)).r - 0.5 +\n        texture(iChannel0,vec2(uv.x,uv.y+pixelSize.y)).r - 0.5 +\n        texture(iChannel0,vec2(uv.x,uv.y-pixelSize.y)).r - 0.5 +\n        texture(iChannel0,vec2(uv.x+pixelSize.x,uv.y+pixelSize.y)).r - 0.5 +\n        texture(iChannel0,vec2(uv.x-pixelSize.x,uv.y+pixelSize.y)).r - 0.5 +\n        texture(iChannel0,vec2(uv.x+pixelSize.x,uv.y-pixelSize.y)).r - 0.5 +\n        texture(iChannel0,vec2(uv.x-pixelSize.x,uv.y-pixelSize.y)).r - 0.5;\n\n\n    current *= 0.25;\n    \n    current -= prev_prev - 0.5;\n    \n    current *= DAMPENING;\n    \n    current += (texture(iChannel2, uv).r - 0.5)*NOISE_LEVEL;\n    \n    current += 0.5;\n    fragColor = vec4(current,prev,prev_prev,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"#define BLACK vec4(0.0, 0.0, 0.0, 1.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 center = iResolution.xy*0.5;\n    float dist = distance(fragCoord, center)/(iResolution.y*0.5);\n    \n    if(dist >= 0.98) {\n        fragColor = BLACK;\n        return;\n    }\n\n    float audioSample = texture(iChannel1, vec2(dist, 0.75)).r;\n    \n    fragColor = vec4(audioSample,0.0,0.0,1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}