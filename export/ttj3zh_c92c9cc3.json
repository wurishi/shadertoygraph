{"ver":"0.1","info":{"id":"ttj3zh","date":"1575745500","viewed":176,"name":"FIre","username":"Anskiere","description":"fire","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 yellow = vec3(1,1,0);\nconst vec3 orange = vec3(1,0.6,0);\nconst vec3 red = vec3(1,0,0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n    float x = (1.-uv.y);\n    x = pow(x, 4.);\n    float g = (abs(uv.x - 0.5));\n    g = smoothstep(0., 1., pow(g * 1., 0.5)) * 1.6 + 0.5;\n    \n    uv *= 10.;\n    uv.y -= iTime*4.;\n    \n    float y = noise(uv) * g;\n\tfloat l1 = step(y,x) - step(y,x-0.2);\n    float l2 = step(y, x - 0.2) - step(y, x - 0.4);\n    vec3 col = mix(yellow, red, l1);\n    col = mix(col, orange, l2);\n    \n    fragColor = vec4(col * step(y,x), 1);\n    //fragColor = vec4(x);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float mySmooth(float x)\n{\n    return x*x*(3. - 2.*x);\n}\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy + 100. ,vec2(13.9898, 71.233))) * 49.5453);\n}\n\n\nfloat perlin(vec2 uv)\n{\n\tvec2 ij = floor(uv);\n    \n    float g1 = rand(ij + vec2(0, 0));\n    float g2 = rand(ij + vec2(1, 0));\n    float g3 = rand(ij + vec2(0, 1));\n    float g4 = rand(ij + vec2(1, 1));\n    \n    vec2 luv = fract(uv);\n    luv = smoothstep(0., 1., luv);\n    \n    float g12 = mix(g1, g2, luv.x);\n    float g34 = mix(g3, g4, luv.x);\n    \n    float g1234 = mix(g12, g34, luv.y);\n    \n    return g1234;\n}\n\nfloat noise(vec2 uv)\n{\n    float result = 0.;\n    for (int i = 0; i < 5; i++)\n    {\n        float p = pow(2., float(i));\n        \n        result += perlin((uv) * p) / p;\n    }\n    return result * 0.5;\n}","name":"Common","description":"","type":"common"}]}