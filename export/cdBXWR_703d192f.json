{"ver":"0.1","info":{"id":"cdBXWR","date":"1670105023","viewed":124,"name":"Noise-ChatGPT","username":"Desdby","description":"This shader was written by chatgpt. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","whitenoise","chatgpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n// Genera un valor aleatorio en la coordenada especificada\nfloat random(vec2 coord)\n{\n    // Utiliza la coordenada como semilla para el generador de números aleatorios\n    return fract(sin(dot(coord, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n\n// Genera un valor de ruido blanco en una coordenada 2D\nfloat noise(vec2 coord)\n{\n    // Obtiene el entero más cercano a la coordenada\n    vec2 iCoord = floor(coord);\n\n    // Genera un valor aleatorio para cada punto de la grilla\n    vec2 fCoord = fract(coord);\n    float value00 = random(iCoord);\n    float value01 = random(iCoord + vec2(0.1, 1.0));\n    float value10 = random(iCoord + vec2(1.0, 0.5));\n    float value11 = random(iCoord + vec2(1.0, 1.0));\n\n    // Interpola linealmente los valores aleatorios para obtener el valor de ruido en la coordenada especificada\n    float value0 = mix(value00, value01, fCoord.y);\n    float value1 = mix(value10, value11, fCoord.y);\n    return mix(value0, value1, fCoord.x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    vec2 iResolution = vec2(400.0,400.0);\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 color = vec3(random(uv+sin(iTime))*(1.5+cos(iTime)));\n    fragColor = vec4(color, 1.0);\n}\n\n\n\n/*\n\nInput: Genera un código en glsl shadertoy que dibuje ruido blanco \n\noutput:\n\nAquí tienes un código en GLSL que dibuja ruido blanco en Shadertoy:\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 color = vec3(noise(uv));\n    fragColor = vec4(color, 1.0);\n}\n\n\nPara utilizar este código en Shadertoy, debes copiar y pegar el código en el editor de código y luego hacer clic en el botón \"Run\" para ver el resultado.\n\nNota: este código utiliza la función noise() de GLSL para generar el ruido blanco. Si deseas obtener más información sobre cómo utilizar esta función, puedes consultar la documentación de GLSL en la página web de la Khronos Group (https://www.khronos.org/registry/OpenGL/specs/gl/GLSLangSpec.4.60.pdf).\n\n\nInput: implementa la función noise del código anterior\n\n\nOutput:\n// Genera un valor de ruido blanco en una coordenada 2D\nfloat noise(vec2 coord)\n{\n    // Obtiene el entero más cercano a la coordenada\n    vec2 iCoord = floor(coord);\n\n    // Genera un valor aleatorio para cada punto de la grilla\n    vec2 fCoord = fract(coord);\n    float value00 = random(iCoord);\n    float value01 = random(iCoord + vec2(0.0, 1.0));\n    float value10 = random(iCoord + vec2(1.0, 0.0));\n    float value11 = random(iCoord + vec2(1.0, 1.0));\n\n    // Interpola linealmente los valores aleatorios para obtener el valor de ruido en la coordenada especificada\n    float value0 = mix(value00, value01, fCoord.y);\n    float value1 = mix(value10, value11, fCoord.y);\n    return mix(value0, value1, fCoord.x);\n}\n\n// Genera un valor aleatorio en la coordenada especificada\nfloat random(vec2 coord)\n{\n    // Utiliza la coordenada como semilla para el generador de números aleatorios\n    return fract(sin(dot(coord, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nPuedes utilizar esta función en tu código GLSL para generar ruido blanco en cualquier coordenada 2D. Para utilizarla, simplemente debes llamar a la función noise() y pasarle la coordenada 2D en la que deseas generar el ruido, como se muestra en el ejemplo siguiente:\n\nvec2 coord = vec2(0.25, 0.75);\nfloat whiteNoiseValue = noise(coord);\n\n\n*/","name":"Image","description":"","type":"image"}]}