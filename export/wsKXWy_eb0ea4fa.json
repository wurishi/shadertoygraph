{"ver":"0.1","info":{"id":"wsKXWy","date":"1574927548","viewed":199,"name":"AntiBall","username":"SugarRushLux","description":"Black and white ocean scene","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["procedural"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash21(vec2 p)\n{\n\tp = fract(p*vec2(234.34, 1311.12));\n    p += dot(p, p+211.42);  \n    return fract(p.x*p.y);\n}\n\n\nvec3 bubbles(vec2 uv)\n{\n    vec3 col = vec3(0.0);\n    uv *= 100.0;\n\n    vec2 gv = fract(uv);  \n    vec2 id = floor(uv);\n\n    uv += iTime;\n\n    float n = Hash21(id);\n\n    if(n < 0.01)\n    {\n    \treturn col = vec3(smoothstep(0.6, 0.60000001, length(gv - 0.5) * -1.0 + 1.0));\n\n    }\n\n}\n\n\nfloat circle(vec2 uv, float r)\n{\n\treturn smoothstep(r, r-0.00001, length(uv));\n}\n\n\n#define PI 3.14159265\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //UV and ST Coords\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 st = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\t\n    \n    \n    \n    //Warping ST Coords\n    st *= -2.0;\n    st.x += iTime*0.2;\n    float bounce = iTime*0.2;\n    \n    float cd;\n    float freq = 2.0;\n    float wind;\n    \n    st.y *= 10.0;\n    st.y += cos(st.x * (PI * freq))*-1.0;\n    \n    //Creating Ocean\n    if(st.y < 0.0) cd = 1.0;\n    //Creating Wind\n    st.y += 3.0;\n    if(st.y > 1.0 && st.y < 1.11) wind = 1.0;\n    wind *= cos(uv.x * 3.2 + 0.1 + iTime);\n    st.y += 2.0;\n    uv.x += 2.0;\n    if(st.y > 1.0 && st.y < 1.1) wind += 1.0;\n    wind *= cos(uv.x * 4.3 + 0.1 + iTime)*2.0;\n    st.y += 2.0;\n    uv.x += 3.0;\n    if(st.y > 1.0 && st.y < 1.09) wind += 1.0;\n    wind *= cos(uv.x * 5.1 + 0.1 + iTime)*4.0;\n    st.y += 2.0;\n    uv.x += 4.0;\n    if(st.y > 1.0 && st.y < 1.08) wind += 1.0;\n    wind *= cos(uv.x * 2.6 + 0.1 + iTime)*6.0;\n    \n   \n    uv.x -= 9.0;\n    \n    \n    //Creating Bubbles\n    vec3 bubble = \n    \t bubbles(vec2(uv.y + (cos(bounce * freq * PI) * 0.02 + 0.6), uv.x));\n    \n    //FloatingBall\n \tuv *= 22.0;\n    uv.y += cos(bounce * freq * PI);\n    float c = circle(uv, 1.0);\n    \n    //Masking\n    vec3 wave = vec3(cd);\n    vec3 ballT = clamp(vec3((wave * -1.0 + 1.0 / c)*-1.0 + 1.0), 0., 1.);\n    vec3 ballB = clamp(vec3(c - cd), 0., 1.);\n    bubble = vec3(clamp(bubble.x + wave.x, 0.0, 1.0));\n    \n    vec3 col = vec3(bubble - ballT + ballB - vec3(wind));\n\n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}