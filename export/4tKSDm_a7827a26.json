{"ver":"0.1","info":{"id":"4tKSDm","date":"1484655807","viewed":858,"name":"Halftoning sphere","username":"miloyip","description":"Mouse drag to rotate.","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["halftone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265359;\nmat3 rot;\n    \nmat3 rotationXY(vec2 angle) {\n\tvec2 c = cos(angle);\n\tvec2 s = sin(angle);\n\treturn mat3(\n\t\tc.y, 0.0, -s.y,\n\t\ts.y * s.x, c.x, c.y * s.x,\n\t\ts.y * c.x, -s.x, c.y * c.x\n\t);\n}\n\nvec4 sampling(vec2 p) {\n    if (length(p) <= 1.0) {\n        vec3 n = rot * vec3(p, sqrt(1.0 - dot(p, p)));\n        vec2 s = vec2(acos(n.z), atan(n.y, n.x)) / PI;\n        vec2 uv = fract(s * vec2(30.0, 30.0));\n        float r = ceil(s.x * 30.0) / 45.0;\n        return length(uv - 0.5) < r ? vec4(1, 1, 1, 1) : vec4(0, 0, 0, 1);\n    }\n    else\n        return vec4(1, 1, 1, 1);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 p = (fragCoord.xy / iResolution.xy - 0.5) * vec2(2.0 * iResolution.x / iResolution.y, 2.0);\n    rot = rotationXY(vec2(iMouse.yx / iResolution.yx) * vec2(PI, -2.0 * PI) + vec2(PI * -0.5, PI * 0.5));\n    vec4 sum = vec4(0.0);\n    for (int x = -2; x <= 2; x++)\n        for (int y = -2; y <= 2; y++)\n            sum += sampling(p + vec2(x, y) / (2.0 * iResolution.xx));\n    fragColor = sum / 25.0;\n}\n/*\nvoid mainImage1(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 p = (fragCoord.xy / iResolution.xy - 0.5) * vec2(2.0 * iResolution.x / iResolution.y, 2.0);\n    if (length(p) <= 1.0)\n        fragColor = vec4(0, 0, 0, 1);\n    else\n        fragColor = vec4(1, 1, 1, 1);\n}\n\nvoid mainImage2(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 p = (fragCoord.xy / iResolution.xy - 0.5) * vec2(2.0 * iResolution.x / iResolution.y, 2.0);\n    if (length(p) <= 1.0) {\n        vec3 n = vec3(p, sqrt(1.0 - dot(p, p)));\n        fragColor = vec4(n * 0.5 + 0.5, 1);\n    }\n    else\n        fragColor = vec4(1, 1, 1, 1);\n}\n\nvoid mainImage3(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 p = (fragCoord.xy / iResolution.xy - 0.5) * vec2(2.0 * iResolution.x / iResolution.y, 2.0);\n    if (length(p) <= 1.0) {\n        vec3 n = vec3(p, sqrt(1.0 - dot(p, p)));\n        vec2 s = vec2(acos(n.z), atan(n.y, n.x)) / PI;\n        fragColor = vec4(s * 0.5 + 0.5, 0, 1);\n    }\n    else\n        fragColor = vec4(1, 1, 1, 1);\n}\n\nvoid mainImage5(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 p = (fragCoord.xy / iResolution.xy - 0.5) * vec2(2.0 * iResolution.x / iResolution.y, 2.0);\n    if (length(p) <= 1.0) {\n        vec3 n = vec3(p, sqrt(1.0 - dot(p, p)));\n        vec2 s = vec2(acos(n.z), atan(n.y, n.x)) / PI;\n        vec2 uv = fract(s * vec2(30.0, 30.0));\n        fragColor = vec4(uv, 0, 1);\n    }\n    else\n        fragColor = vec4(1, 1, 1, 1);\n}\n\nvoid mainImage6(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 p = (fragCoord.xy / iResolution.xy - 0.5) * vec2(2.0 * iResolution.x / iResolution.y, 2.0);\n    if (length(p) <= 1.0) {\n        vec3 n = vec3(p, sqrt(1.0 - dot(p, p)));\n        vec2 s = vec2(acos(n.z), atan(n.y, n.x)) / PI;\n        vec2 uv = fract(s * vec2(30.0, 30.0));\n        float r = 0.4;\n        fragColor = length(uv - 0.5) < r ? vec4(1, 1, 1, 1) : vec4(0, 0, 0, 1);\n    }\n    else\n        fragColor = vec4(1, 1, 1, 1);\n}\n\nvoid mainImage7(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 p = (fragCoord.xy / iResolution.xy - 0.5) * vec2(2.0 * iResolution.x / iResolution.y, 2.0);\n    if (length(p) <= 1.0) {\n        vec3 n = vec3(p, sqrt(1.0 - dot(p, p)));\n        vec2 s = vec2(acos(n.z), atan(n.y, n.x)) / PI;\n        vec2 uv = fract(s * vec2(30.0, 30.0));\n        float r = ceil(s.x * 30.0) / 45.0;\n        fragColor = length(uv - 0.5) < r ? vec4(1, 1, 1, 1) : vec4(0, 0, 0, 1);\n    }\n    else\n        fragColor = vec4(1, 1, 1, 1);\n}\n*/","name":"Image","description":"","type":"image"}]}