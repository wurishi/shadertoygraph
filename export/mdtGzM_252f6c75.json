{"ver":"0.1","info":{"id":"mdtGzM","date":"1677098614","viewed":95,"name":"Fork hex crysta sleeplessm 814","username":"sleeplessmonk","description":"WIP \n","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["3d","hexagon","tile"],"hasliked":0,"parentid":"ct2SWw","parentname":"hex crystal"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define H(a) (cos(radians(vec3(100, 140, 190))-((a)*6.2832))*.5+.5) // hue pallete\n#define RT(a) mat2(cos(m.a*1.571+vec4(0,-1.571,1.571,0))) // rotate\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec3  c = vec3(0), \n          o = vec3(1 ,1.732, 1),\n          u, v, a, b;\n    vec2  R = iResolution.xy,\n          m = iMouse.xy/R*4.-2.,\n          uv = (U-.5*R)/R.y; // 2d coords\n    float t = iTime/5.,\n          tr = smoothstep(0., 1., sin(t)*.6+.5),\n          s = tr*4.+2., // scale\n          h;\n    if (iMouse.z < 1.)\n        m = vec2(sin(t/2.)*.6, sin(t)*.4); // rotate with time\n    mat2  pitch = RT(y),\n          yaw = RT(x);\n    for (float i = .1; i < 1.; i+=.1)\n    {\n        u = normalize(vec3(uv, .7*sqrt(i)))*s; // 3d coords\n        u.yz *= pitch;\n        u.xz *= yaw;\n        \n        // add distortion\n        u.xy += sin(uv.yx*20.0+t)*0.1;\n        u.xz += sin(uv.yx*30.0+t)*0.2;\n        u.yz += sin(uv.yx*10.0+t)*0.15;\n        \n        // simple hexagonal tiles by lomateron https://www.shadertoy.com/view/MlXyDl\n        a = mod(u, o)*2.-o;\n        b = mod(u+o*.5, o)*2.-o;\n        h = min(dot(a, a), dot(b, b))*.5;\n        \n        v = h*h*H(i-t/5.);\n        float k = 1.2-max(i, tr-i); // increase contrast\n        c += v*k;\n    }\n    // add more color\n    c *= vec3(1.0, 0.8, 1.2);\n    c = pow(c, vec3(2.5)) * 0.5 + 0.05;\n    C = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}]}