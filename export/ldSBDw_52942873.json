{"ver":"0.1","info":{"id":"ldSBDw","date":"1500632918","viewed":201,"name":"D3sp4c1t0 !!!11!!11!1","username":"CorgiLord","description":"based on www.shadertoy.com/view/XdXGRB\nawesome chiptune : soundcloud.com/ddstrainers/despacito-8bit-by-vinheteiro","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["pls","despacito","jpp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MdXXDS","filepath":"https://soundcloud.com/ddstrainers/despacito-8bit-by-vinheteiro","previewfilepath":"https://soundcloud.com/ddstrainers/despacito-8bit-by-vinheteiro","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 coord;\n\n#define font_size 20. \n#define font_spacing .068\n#define STROKEWIDTH 0.05\n#define PI 3.14159265359\n\n\n#define A_ vec2(0.,0.)\n#define B_ vec2(1.,0.)\n#define C_ vec2(2.,0.)\n\n#define D_ vec2(0.,1.)\n#define E_ vec2(1.,1.)\n#define F_ vec2(2.,1.)\n\n#define G_ vec2(0.,2.)\n#define H_ vec2(1.,2.)\n#define I_ vec2(2.,2.)\n\n#define J_ vec2(0.,3.)\n#define K_ vec2(1.,3.)\n#define L_ vec2(2.,3.)\n\n#define M_ vec2(0.,4.)\n#define N_ vec2(1.,4.)\n#define O_ vec2(2.,4.)\n\n#define P_ vec2(0.,5.)\n#define Q_ vec2(1.,5.)\n#define R_ vec2(1.,5.)\n\n#define S_ vec2(0.,6.)\n#define T_ vec2(1.,6.)\n#define U_ vec2(2.0,6.)\n\n#define A(p) t(G_,I_,p) + t(I_,O_,p) + t(O_,M_, p) + t(M_,J_,p) + t(J_,L_,p)\n#define C(p) t(I_,G_,p) + t(G_,M_,p) + t(M_,O_,p) \n#define D(p) t(C_,O_,p) + t(O_,M_,p) + t(M_,G_,p) + t(G_,I_,p)\n#define E(p) t(O_,M_,p) + t(M_,G_,p) + t(G_,I_,p) + t(I_,L_,p) + t(L_,J_,p)\n#define I(p) t(E_,E_,p) + t(H_,N_,p) \n#define O(p) t(G_,I_,p) + t(I_,O_,p) + t(O_,M_, p) + t(M_,G_,p)\n#define P(p) t(S_,G_,p) + t(G_,I_,p) + t(I_,O_,p) + t(O_,M_, p)\n#define S(p) t(I_,G_,p) + t(G_,J_,p) + t(J_,L_,p) + t(L_,O_,p) + t(O_,M_,p)\n#define T(p) t(B_,N_,p) + t(N_,O_,p) + t(G_,I_,p)\n#define STOP(p) t(B_,B_,p)\n#define FLY1(p) t(H_,F_,p) \n#define FLY1b(p)+ t(H_,D_,p)\n#define FLY2(p) t(H_,L_,p)\n#define FLY2b(p) t(H_,J_,p)\n#define SMOKE(p) t(vec2(0,0),vec2(2,0),p) + t(vec2(2,0),vec2(2,2),p)+ t(vec2(2,2),vec2(0,2),p)+ t(vec2(0,2),vec2(0,4),p)+ t(vec2(0,4),vec2(2,4),p)+ t(vec2(2,4),vec2(2,6),p)+ t(vec2(2,6),vec2(0,6),p)+ t(vec2(0,6),vec2(0,8),p)+ t(vec2(0,8),vec2(1.5,8.2),p)+ t(vec2(1.5,8.2),vec2(1,9),p)+ t(vec2(1,9),vec2(1,10),p)\n#define POOP(p) t(vec2(8,0),vec2(12,-1),p) + t(vec2(10,-0.5),vec2(12,-3),p)+ t(vec2(14,1.5),vec2(12,-3),p)+ t(vec2(14,1.5),vec2(8,0),p)+ t(vec2(6,1.5),vec2(8,0),p)+ t(vec2(6,1.5),vec2(5,3),p)+ t(vec2(15,1.25),vec2(5,3),p)+ t(vec2(15,1.25),vec2(16,3),p)+ t(vec2(15,5.5),vec2(16,3),p)+ t(vec2(15,5.5),vec2(4,5.5),p)+ t(vec2(3,4.),vec2(4,5.5),p)+ t(vec2(3,4.),vec2(5.,2.8),p)\n\n\nvec2 caret_origin = vec2(1.0, .93);\nvec2 caret;\n\n//-----------------------------------------------------------------------------------\nfloat minimum_distance(vec2 v, vec2 w, vec2 p)\n{\t// Return minimum distance between line segment vw and point p\n  \tfloat l2 = (v.x - w.x)*(v.x - w.x) + (v.y - w.y)*(v.y - w.y); //length_squared(v, w);  // i.e. |w-v|^2 -  avoid a sqrt\n  \tif (l2 == 0.0) {\n\t\treturn distance(p, v);   // v == w case\n\t}\n\t\n\t// Consider the line extending the segment, parameterized as v + t (w - v).\n  \t// We find projection of point p onto the line.  It falls where t = [(p-v) . (w-v)] / |w-v|^2\n  \tfloat t = dot(p - v, w - v) / l2;\n  \tif(t < 0.0) {\n\t\t// Beyond the 'v' end of the segment\n\t\treturn distance(p, v);\n\t} else if (t > 1.0) {\n\t\treturn distance(p, w);  // Beyond the 'w' end of the segment\n\t}\n  \tvec2 projection = v + t * (w - v);  // Projection falls on the segment\n\treturn distance(p, projection);\n}\n\n//-----------------------------------------------------------------------------------\nfloat textColor(vec2 from, vec2 to, vec2 p)\n{\n\tp *= font_size;\n\tfloat inkNess = 0., nearLine, corner;\n\tnearLine = minimum_distance(from,to,p); // basic distance from segment, thanks http://glsl.heroku.com/e#6140.0\n\tinkNess += smoothstep(0., 1., 1.- 14.*(nearLine - STROKEWIDTH)); // ugly still\n\tinkNess += smoothstep(0., 2.5, 1.- (nearLine  + 10. * STROKEWIDTH)); // glow\n\treturn inkNess;\n}\n\n//-----------------------------------------------------------------------------------\nvec2 grid(vec2 letterspace) \n{\n\treturn ( vec2( (letterspace.x / 2.) * .65 , 1.0-((letterspace.y / 2.) * .95) ));\n}\n\n//-----------------------------------------------------------------------------------\nfloat count = 0.0;\nfloat gtime;\nfloat mult = 1.;\nfloat t(vec2 from, vec2 to, vec2 p) \n{\n\tcount += mult;\n\tif (count > gtime*20.0) return 0.0;\n\treturn textColor(grid(from), grid(to), p);\n}\n\n//-----------------------------------------------------------------------------------\nvec2 r()\n{\n\tvec2 pos = coord.xy/iResolution.xy;\n\tpos.y -= caret.y;\n\tpos.x -= font_spacing*caret.x;\n\treturn pos;\n}\n\n//-----------------------------------------------------------------------------------\nvoid add(float o)\n{\n\tcaret.x += o;\n}\n\n//-----------------------------------------------------------------------------------\nvoid space()\n{\n\tcaret.x += 1.5;\n}\n\n//-----------------------------------------------------------------------------------\nvoid newline()\n{\n\tcaret.x = caret_origin.x;\n\tcaret.y -= .108;\n}\n//-----------------------------------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod(iTime, 9000.0);\n    gtime = time;\n\n\tfloat d = 0.;\n\tvec3 col = vec3(0.1, .07+0.07*(.5+sin(fragCoord.y*3.14159*1.1+time*2.0)) + sin(fragCoord.y*.01+time+2.5)*0.05, 0.1);\n    \n    coord = fragCoord;\n\t\n\tcaret = caret_origin;\n\n\tmult = 5.5;\n    \n\td += D(r());\n    newline();\n    d += E(r()); \n    newline();\n    d += S(r());\n   newline(); \n    d += P(r());\n    newline();\n    d += A(r());\n    newline();\n    d += C(r());  \n    newline();\n    d += I(r());\n    newline();\n    d += T(r());\n    newline();\n    d += O(r());\n    \n\n    caret = caret_origin; \n    caret.y -= .550;\n    caret.x += 10.75; \n    d+= FLY1(r())+FLY1b(r());\n    \n    caret = caret_origin; \n    caret.y -= .150;\n    caret.x += 8.75; \n    d+= FLY1(r())+FLY1b(r());\n    \n    caret = caret_origin; \n    caret.y -= .650;\n    caret.x += 1.75;\n    d+= FLY1(r())+FLY1b(r());\n    \n    caret = caret_origin; \n    caret.y -= .10;\n    caret.x += 4.;\n    d+= FLY1(r())+FLY1b(r());\n    \n    caret = caret_origin; \n    caret.y -= .525;\n    caret.x += 4.75;\n    d+= SMOKE(r());\n    \n    caret = caret_origin; \n    caret.y -= .300;\n    caret.x += 6.5;\n    d+= SMOKE(r());\n    \n    caret = caret_origin; \n    caret.y -= .450;\n    caret.x += 8.2;\n    d+= SMOKE(r());\n    \n    caret = caret_origin; \n    caret.y -= .750;\n    caret.x += 4.55;\n    \n    d+= POOP(r());\n    \n    mult = .4;\n    \n    //----------cleanflies\n    caret = caret_origin; \n    caret.y -= .550;\n    caret.x += 10.75; \n    d-= FLY1(r())+FLY1b(r());\n    \n    caret = caret_origin; \n    caret.y -= .150;\n    caret.x += 8.75; \n    d-= FLY1(r())+FLY1b(r());\n    \n    caret = caret_origin; \n    caret.y -= .650;\n    caret.x += 1.75;\n    d-= FLY1(r())+FLY1b(r());\n    \n    caret = caret_origin; \n    caret.y -= .10;\n    caret.x += 4.;\n    d-= FLY1(r())+FLY1b(r());\n    \n    //---------anim1A\n    \n    float anim = step(.5,sin(time*10.));\n    \n    caret = caret_origin; \n    caret.y -= .550;\n    caret.x += 10.75; \n    d+= anim*FLY1(r());\n    \n    caret = caret_origin; \n    caret.y -= .150;\n    caret.x += 8.75; \n    d+= anim*FLY1(r());\n    \n    caret = caret_origin; \n    caret.y -= .650;\n    caret.x += 1.75;\n    d+= anim*FLY1(r());\n    \n    caret = caret_origin; \n    caret.y -= .10;\n    caret.x += 4.;\n    d+= anim*FLY1(r());\n\t\n    //---------anim1B\n    caret = caret_origin; \n    caret.y -= .550;\n    caret.x += 10.75; \n    d+= anim*FLY1b(r());\n    \n    caret = caret_origin; \n    caret.y -= .150;\n    caret.x += 8.75; \n    d+= anim*FLY1b(r());\n    \n    caret = caret_origin; \n    caret.y -= .650;\n    caret.x += 1.75;\n    d+= anim*FLY1b(r());\n    \n    caret = caret_origin; \n    caret.y -= .10;\n    caret.x += 4.;\n    d+= anim*FLY1b(r());\n    \n    //---------anim2A\n    \n    float anim2 = step(.5,sin(time*10.+10.));\n    \n    caret = caret_origin; \n    caret.y -= .525;\n    caret.x += 10.75; \n    d+= anim2*FLY2(r());\n    \n    caret = caret_origin; \n    caret.y -= .1250;\n    caret.x += 8.75; \n    d+= anim2*FLY2(r());\n    \n    caret = caret_origin; \n    caret.y -= .6250;\n    caret.x += 1.75;\n    d+= anim2*FLY2(r());\n    \n    caret = caret_origin; \n    caret.y -= .0750;\n    caret.x += 4.;\n    d+= anim2*FLY2(r());\n\t\n    //---------anim2B\n    caret = caret_origin; \n    caret.y -= .5250;\n    caret.x += 10.75; \n    d+= anim2*FLY2b(r());\n    \n    caret = caret_origin; \n    caret.y -= .1250;\n    caret.x += 8.75; \n    d+= anim2*FLY2b(r());\n    \n    caret = caret_origin; \n    caret.y -= .6250;\n    caret.x += 1.75;\n    d+= anim2*FLY2b(r());\n    \n      caret = caret_origin; \n    caret.y -= .0750;\n    caret.x += 4.;\n    d+= anim2*FLY2b(r());\n    \n    \n\td = clamp(d*2.* (.75+sin(fragCoord.x*PI*.8-time*8.3)*.8), .08, 0.80);\n      \n    col += vec3(d*.7, d, d*.2);\n\tvec2 xy = fragCoord.xy / iResolution.xy;\n\tcol *= vec3(.8, .1, .0) + 0.5*pow(100.0*xy.x*xy.y*(1.0-xy.x)*(1.0-xy.y), .8 );\t\n    fragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}