{"ver":"0.1","info":{"id":"XslBzr","date":"1494653401","viewed":83,"name":"everyday 004/100","username":"kalin","description":"everyday 4/100","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["everyday"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdsphere(vec3 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat map(vec3 p)\n{\n    return max(\n        sdsphere(p - vec3(0.05, 0.0, 0.0), 0.94),\n        sdsphere(p + vec3(0.05, 0.0, 0.0), 0.94)\n    );\n}\n\nfloat march(vec3 ro, vec3 rd)\n{\n\tfloat t = 0.0;\n    for(int i = 0; i < 32; ++i)\n    {\n        vec3 p = ro + rd * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvec3 ray(vec2 ro, vec3 rd)\n{\n\tvec3 up = vec3(0,1,0);\n    vec3 right = cross(rd, up);\n    return rd + right * ro.x + up * ro.y;\n}\n\n//vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n//vec3 ro = vec3(0, 0, 3);\n//vec3 rd = normalize(vec3(p, -1.5));\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv = uv * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    vec3 lookat = vec3(0, 0, 1.0);\n    \n    vec3 ro = vec3(0.25 * sin(iTime), 0.0, -1.0);\n    vec3 rd = ray(ro.xy, lookat - normalize(vec3(uv, 1.0)));\n    float t = march(ro, rd);\n    \n\tfragColor = vec4(t, 0.4, 0.7, 1.0);\n    fragColor.y *= sin(iTime * 0.2);\n    fragColor.x += sin(iTime * 0.6) * 0.1;\n\n}","name":"Image","description":"","type":"image"}]}