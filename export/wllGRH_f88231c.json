{"ver":"0.1","info":{"id":"wllGRH","date":"1555696260","viewed":106,"name":"Mandelbrot Set - Learning","username":"Tezza48","description":"Just a learning thing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define JULIA\n#define SMOOTHFRACT\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.y /= iResolution.x / iResolution.y;\n\t\n    vec2 fuv = uv;\n    \n    #ifndef JULIA\n    fuv.x -= 0.25;\n    #endif\n    \n    fuv *= 1.5;\n    \n    vec2 z;\n    vec2 c;\n    \n    #ifdef JULIA\n    if (iMouse.z < 0.0)\n    {\n        z = vec2(0);\n    \tc = fuv;   \n    }\n    else\n    {\n    \tz = fuv;\n    \tc = iMouse.xy / iResolution.xy * 2.0 - 1.0;\n    }\n    #else\n    z = vec2(0);\n    c = fuv;\n    #endif\n    \n    float i;\n    float zdz;\n    for (i = 0.0; i < 20.0; i++)\n    {\n\t\tz= vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        zdz = dot(z, z);\n        if (zdz > 4.0)\n            break;\n    }\n    \n    #ifdef SMOOTHFRACT\n    float log2=0.69314718056;\n    float L = log(zdz)/2.0;\n    float nu = log(L/log2)/log2;\n    i+=1.0-nu;\n    #endif\n    \n    float dist = float(i) / 20.0;\n    \n    fragColor = vec4(min(1.0 - dist, 1.0 - length(uv) + 0.1));\n}","name":"Image","description":"","type":"image"}]}