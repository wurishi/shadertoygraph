{"ver":"0.1","info":{"id":"lfBXW3","date":"1711113078","viewed":41,"name":"Cold Color Ring","username":"Smiley98","description":"Sanic","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ring"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    float radius = sin(iTime) * 0.25 + 0.75;\n    float thickness = 0.1;\n    \n    // 0 towards centre, 1 towards edges\n    float d = length(uv);\n    \n    // remap from [0, 1] to [-0.5, 0.5] (makes black centre larger)\n    d -= radius;\n    \n    // [-0.5, 0.5] -> [0.0, 0.5]\n    d = abs(d);\n    \n    // Cut-off everything with a distance less than 0.1 (makes a solid ring)\n    d = step(thickness, d);\n    \n    // Same as above, but a smooth blend instead of a cutoff\n    //d = smoothstep(0.0, 0.1, d);\n    \n    vec2 uv0 = uv * 0.5 + 0.5;\n    vec3 a = vec3(uv0.xy, 1.0);\n    vec3 b = vec3(uv0.yx, 1.0);\n    \n    vec3 color = mix(a, b, d);\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}