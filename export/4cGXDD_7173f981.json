{"ver":"0.1","info":{"id":"4cGXDD","date":"1715164255","viewed":80,"name":"Stars for mum,","username":"CreatorsLight","description":"removed birthday count for privacy","likes":5,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Thanks to:\n//https://www.shadertoy.com/view/stVBRR \n//https://www.shadertoy.com/view/llySRh\n\n//////////////////code I made use of//////////////////////\n/////////////////   Not my own   ////////////////////////\n#define C(c) fragColor+= char(U,64+c).xxxx ; U.x-=.5\n\n#define LF (U.y++)\n#define CR (U.x = (( uv.x - position.x)*64.0/FontSize))\n#define NL (CR,LF)\n\nvec4 char(vec2 p, int c) \n{\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn texture( iChannel0, p/16. + fract( vec2(c, 15-c/16) / 16. ));\n}\n////////////////////////////////////////////////////\n\nfloat star(float scale, vec2 uv, float bright,float shiftx, float shifty) {\n    uv /= scale;\n    uv = vec2(uv.x +shiftx, uv.y +shifty);\n    float star = smoothstep(0.998,1.,1.-3.*abs(5.*uv.x*uv.y)) +bright;\n    star = smoothstep(0.1, .9, star);\n    \n    star *= 1./(30.*length((uv)));\n    return star;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord - iResolution.xy)/iResolution.y;\n    if(iTime/5. <2.){\n        uv = ((2.*fragCoord - iResolution.xy)/iResolution.y)*(5./(iTime/2.));\n    }\n    //////////Font///////////////////\n    vec2 uv0 = uv;\n    float FontSize = 20.;\n    vec2 position = vec2(-1.7,1.0 - FontSize / 64.0);\n    vec2 U = ( uv0 - position)*64.0/FontSize;\n    float timeshift = iTime/4. +50.;\n    vec3 col = vec3(0.);\n    /////////////////////////////////\n    for(float i =0.0; i <6.; i+=0.1){\n        // adds stars\n        // makes the stars move chaotically by combining streched and shifted functions\n        col += vec3(i/15.,i/20., i/50.) * 8.*star((cos(i+ 0.2) +sin(50.+(i*timeshift)/20.)),uv, i*cos(i*sin(i*123.14)), i*sin(4123.2 *i ) - i*sin(timeshift/5.) , i*cos(15.151*i +i) - sin(timeshift/5.)); \n    }\n    vec4 test = texture(iChannel0,uv,1.);\n    // Output to screen///////////\n    fragColor = vec4(col*1.5,1.0);\n    ////////////////////////////\n    //////////////////////////////////////\n    /// Modified from used shaders///////\n    /////////////////////////////////////\n    NL;\n    NL;\n    C(-32);C(8);C(1);C(16);C(16);C(25);C(-32); C(36);C(36);C(52);C(40); C(-32);C(2);C(9);C(18);C(20);C(8);C(4);C(1);C(25);\n    position = vec2(-0.5,1.0 - FontSize / 64.0);\n    NL;\n    C(-32);C(13);C(21);C(13); C(-31);\n    ////////////////////////////////////\n    \n    \n}","name":"Image","description":"","type":"image"}]}