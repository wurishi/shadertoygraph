{"ver":"0.1","info":{"id":"lXffRf","date":"1728693899","viewed":29,"name":"learning_experiment_6","username":"austinoxyz","description":"learning experiment 6\n\nhttps://iquilezles.org/articles/sdfrepetition/\n\ngot lost somewhere in the artistic endeavour, but kind of figured it out!\n\nsubtitle: octogon puddle","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["experiment","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time (iTime)\n#define res (iResolution)\n#define mouse (iMouse)\n\nmat2 rot2D(float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvec3 palette(float t)\n{\n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    return a + b * cos(6.28318*(c*t+d));\n}\n\nfloat sdOctogon(in vec2 p, in float r)\n{\n    const vec3 k = vec3(-0.9238795325, 0.3826834323, 0.4142135623 );\n    p = abs(p);\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y)*1.2;\n}\n\n// repeat space every s units\nfloat map(vec2 p, float s) \n{\n    vec2 id = round(p/s);\n    vec2 o = sign(p - s*id);\n    float d = 1e20;\n    for (int j=0; j<2; j++)\n        for (int i=0; i<2; i++) \n        {\n            vec2 rid = id + vec2(i,j)*o;\n            vec2 r = p - s*rid;\n            \n            // animation stuff on size of octogon\n            float n = mod(1.5*time - length(p), 4.);\n            if (rid.x != 0. && rid.y != 0.)\n                r *= .7*pow(length(rid) + 1.,.5);\n            float s = .15 + .052*cos(20.*n)*exp(-1.5*abs(1.-log(pow(n,2.))))*(exp(-length(p)));\n            \n            d = min(d, sdOctogon(r, s));\n        }\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - res.xy) / res.y;\n    uv *= 2.;\n    \n    float d = map(uv, .5);\n        \n    // from iq: stylization of inside/outside shapes\n    vec3 col = (d>0.0) ? vec3(0.9,0.6,0.3) : vec3(0.65,0.85,1.0);\n\tcol *= 1.0 - exp(-5.0*abs(d));\n\tcol *= 0.7 + 0.5*cos(180.0*d);\n\tcol = mix(col, vec3(1.0), 1.0-smoothstep(0.0,0.015,abs(d)));\n    \n    // apply palette on radial gradient and add contrast\n    col *= palette(.05*length(uv));\n    col = smoothstep(.085, .22, col);\n\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}