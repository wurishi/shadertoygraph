{"ver":"0.1","info":{"id":"wlySWG","date":"1583458921","viewed":144,"name":"mandala1 flash [spaz]","username":"HaleyHalcyon","description":"like a drug trip","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fn2(float x)\n{\n    x = mod(x + 1.0, 2.0) - 1.0;\n    float n = x * x * x;\n\treturn (8. * n - 4. * x) * 3.14159265;\n}\n\nfloat fn(float x)\n{\n    float n = abs(sin(x));\n    return max((n - 0.5) * 1.5, 0.);\n}\n\nfloat vignette(float v, float d)\n{\n    return v * (0.8 - 0.7 * d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float PI = 3.14159265;\n    const float PI_3 = PI / 3.;\n    const float speed = 0.4;\n    float hue = fract(iTime / 2.) * PI;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n\tuv -= vec2(iResolution.x / scale, iResolution.y / scale) / 2.;\n    uv *= 2.0;\n    \n    //float distance = length(uv);\n    //float distance = pow(sqrt(uv.x*uv.x+uv.y*uv.y), 1./3.);\n    float distance = log(uv.x*uv.x+uv.y*uv.y) / 2.;\n    float angle = atan(uv.y, uv.x);\n    \n    // Time varying pixel color\n    // spiral 1\n    float c1 = vignette(fn(distance * 3.0 + angle * 3.0 + fn2(iTime * speed) + PI), distance);\n    // spiral 2\n    float c2 = vignette(fn(distance * 3.0 - angle * 3.0 + fn2((iTime * speed) + 2. / 3.) + PI), distance);\n    // rings \n    float c3 = vignette(fn(angle * 16.0 + sin(iTime) * 8.0 - iTime * 0.5) * 0.5\n             + fn(distance * 8.0 + fn2((iTime * speed) + 4. / 3.) * 0.5), distance);\n    \n    // Flashing\n    const float flashIntvl = 1.2;\n    const float flashStrength = 1.5;\n    const float flashSudden = flashStrength / flashIntvl * 4.0;\n    float f1 = max(0., flashStrength - mod(iTime, flashIntvl) * flashSudden);\n    float f2 = max(0., flashStrength - mod(iTime + flashIntvl * 1.0/3.0, flashIntvl) * flashSudden);\n    float f3 = max(0., flashStrength - mod(iTime + flashIntvl * 2.0/3.0, flashIntvl) * flashSudden);\n\tc1 += f1; c2 += f2; c3 += f3;\n\n    // Output to screen\n    fragColor = vec4(\n        abs(c1 * sin(hue))        + abs(c2 * -sin(hue + PI_3)) + abs(c3 * -sin(hue - PI_3)),\n        abs(c1 * sin(hue + PI_3)) + abs(c2 * -sin(hue - PI_3)) + abs(c3 * -sin(hue)),\n        abs(c1 * sin(hue - PI_3)) + abs(c2 * -sin(hue))        + abs(c3 * -sin(hue + PI_3)),\n        1\n    );\n}","name":"Image","description":"","type":"image"}]}