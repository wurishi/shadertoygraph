{"ver":"0.1","info":{"id":"WlXGWl","date":"1558095418","viewed":174,"name":"Into the Belly of a Magic Whale","username":"Peregrine","description":"My very first shadertoy.\nA big thanks to Koltes and Ponk from the Cookie Collective for their nice raymarching workshop!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","organic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotation(float a) {\n\tfloat c = cos(a);\n    float s = sin(a);\n    return mat2(c,s,-s,c);\n}\n\n\nfloat torus(in vec3 p, in vec2 t) {\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\nfloat cylinder(in vec3 p, float radius) {\n\treturn length(p.xz) - radius;\n}\n\n\nfloat map(vec3 pos) {\n    pos.xy *= rotation(pos.z*.2 + sin(pos.z*10.+iTime*5.)*.05);\n    pos.z += iTime * .9;\n    \n    float size = 2.;\n    pos = mod(pos,size)-size/2.;\n    \n    float radius = .5;\n    float geometry = torus(pos,vec2(1.,.1*abs(sin(iTime*0.7))+.5));\n    geometry = min(geometry,cylinder(pos.yzx,.05));\n    return geometry;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pos = fragCoord/iResolution.xy;\n    pos = pos * 2. - 1.;\n    pos.x *= iResolution.x/iResolution.y;\n\n    vec3 eye = vec3(0.,0.,-2.);\n    vec3 ray = normalize(vec3(pos,1.));\n    float shade = 0.;\n    for(int i=0; i<20; ++i) {\n        float dist = map(eye);\n        if (dist < 0.001) {\n            shade = 1.-float(i)/20.;\n            break;\n        }\n        eye+=ray*dist;\n    }\n    \n    \n    fragColor = vec4(sin(eye.z)*shade,shade,.5,1.);\n}","name":"Image","description":"","type":"image"}]}