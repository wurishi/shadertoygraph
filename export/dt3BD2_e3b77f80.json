{"ver":"0.1","info":{"id":"dt3BD2","date":"1701604575","viewed":14,"name":"don't know","username":"anmol","description":"something something I made","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["somethingsomething"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy * 2.0) - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    // vec2 col = 0.5 * length(uv) *  sin(iTime * -uv.xy);\n    // vec2 col = length(uv * sin(iTime * 2.0)) * tan(uv.yx * iTime);\n    vec2 col = fract(sin(uv.xy * iTime * 0.5) * cos(uv.yx * iTime * 0.5)) * length(uv);\n    for(float i = 0.0; i < 2.0; i++){\n        col += abs(length(uv) * i  / iTime);\n    }\n    fragColor = vec4(col,0.0,1.0);\n}","name":"Image","description":"","type":"image"}]}