{"ver":"0.1","info":{"id":"7tVXR1","date":"1640210722","viewed":278,"name":"twisty shiny","username":"pema99","description":"a","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"NtKXzh","parentname":"twisty thing xd"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor.r = texture(iChannel0, fragCoord.xy / iResolution.xy).r;\n    fragColor.gb = texture(iChannel0, fragCoord.xy / iResolution.xy + vec2(0.011, 0.)).gb;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sfGzn","filepath":"/media/a/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","previewfilepath":"/media/ap/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI (22.0/7.0)\n\nfloat sdBox( vec3 p, vec3 b )\n{\n    vec3 q = abs(p) - b;\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat smin( float d1, float d2, float k )\n{\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h);\n}\n\nmat2 rot(float r)\n{\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\n\nfloat ball(vec3 p)\n{\n    // scale\n    float scale = cos(iTime*3.)*0.2+1.0;\n    p *= scale;   \n\n    // twist\n    float twist = sin(iTime*3.);\n    p.xz *= rot(mix(0., p.y*6., twist));\n    \n    // rot cube\n    p.xz *= rot(iTime);\n    p.xy *= rot(1.);\n   \n    // bulge\n    float bulge = cos(iTime*3.);\n    p += bulge*(0.07*(sin(p.x*p.y*p.z*200.)*0.5+0.5));\n    \n    // bloat\n    float bloat = sin(iTime*6.)*0.5+0.5;\n    return mix(sdBox(p, vec3(0.4)), length(p)-0.65, bloat);\n}\n\nfloat map(vec3 p)\n{\n    vec3 c = vec3(3.);\n    vec3 q = p;\n    //vec3 q = mod(p+0.5*c,c)-0.5*c;\n    float d = ball(q);\n    return d;\n}\n\nvec2 march(vec3 ro, vec3 rd)\n{\n    float t = 0.;\n    vec3 p = ro;\n    int i = 0;\n    for (; i < 100; i++)\n    {\n        float dist = map(p)*0.6;\n        if (dist < 0.001) break;\n        t += dist;\n        p = ro + t * rd;\n    }\n    return vec2(t, i);\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 o = vec2(0.001, 0.);\n    return normalize(vec3(\n        map(p + o.xyy) - map(p - o.xyy),\n        map(p + o.yxy) - map(p - o.yxy),\n        map(p + o.yyx) - map(p - o.yyx)\n    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.0 * ((fragCoord/iResolution.xy) - 0.5);\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 col = vec3(0.);\n    for (int i = 0; i < 2; i++)\n    {\n        for (int j = 0; j < 2; j++)\n        {\n            vec3 ro = vec3(0., 0., -3.);\n            vec3 rd = normalize(vec3(uv + vec2(float(i)*0.5+0.25, float(j)*0.5+0.25)*0.006, 0.) - ro);\n            ro.xz *= rot(iTime*0.3);\n            rd.xz *= rot(iTime*0.3);\n\n            vec2 res = march(ro, rd);\n            float dist = res.x;\n            float iters = res.y;\n\n            if (dist < 10.)\n            {\n                col.rgb += texture(iChannel0, reflect(rd, normal(ro + dist * rd))).rgb*0.25;\n                //col += (normal(ro + dist * rd) * 0.5 + 0.5) * 0.25;\n            }\n            else\n            {\n                col.rgb += texture(iChannel0, rd).rgb*0.25;\n            }\n        }\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}