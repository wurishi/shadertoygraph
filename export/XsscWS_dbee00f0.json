{"ver":"0.1","info":{"id":"XsscWS","date":"1489655706","viewed":578,"name":"simple grid","username":"Netgfx","description":"a simple grid","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grid","lines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 highlight = vec4(0.0, 1.0, 0.0, 0.5);\nconst vec2 numCells = vec2(16.0); // how many cells in a grid\nconst vec2 borderRatioBase = vec2(0.1, 0.1); // how much of the cell is border (0 to 1)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Can be pre-computed\n    float aspectRatio = iResolution.y / iResolution.x;\n    vec2 borderRatio = borderRatioBase * vec2(aspectRatio, 1.0);\n    vec2 gridScale = numCells + borderRatio;\n    \n    //Can pre-compute: mouse position relative to grid cell\n    vec2 mouseOnGrid = (iMouse.xy / iResolution.xy) * gridScale;\n    vec4 mouseBounds = vec4(floor(mouseOnGrid), ceil(mouseOnGrid));\n    vec2 mouseIsInGridCell = step(borderRatio, fract(mouseOnGrid));\n    \n    //Passed as texture coordinate\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n    \n    //Anything that can be below grid\n    vec4 texel = vec4(vec3(0.0), 0.1);//texture(iChannel0, uv);\n    \n    vec2 pixelOnGrid = uv * gridScale;\n    vec2 pixelOffsetInGridCell = fract(pixelOnGrid);\n    vec2 gridLine = 1.0 - step(borderRatio, pixelOffsetInGridCell);\n    float alpha = clamp(gridLine.x + gridLine.y, 0.0, 1.0);\n    \n    //Sample texture instead of grid color\n    vec4 gridTexel = vec4(0.24, 0.1, 0.7, 1.0);//texture(iChannel1, uv);\n    \n    //Check if current pixel belongs to mouse mocus cell\n    vec2 mouseFocus = step(mouseBounds.xy, pixelOnGrid) - step(mouseBounds.zw, pixelOnGrid);\n    float hasHighlight = min(mouseIsInGridCell.x, mouseIsInGridCell.y) * min(mouseFocus.x, mouseFocus.y);\n    //texel = mix(texel, vec4(highlight.rgb, 1.0), highlight.a * hasHighlight);\n    \n    fragColor = mix(texel, gridTexel, alpha);\n}","name":"Image","description":"","type":"image"}]}