{"ver":"0.1","info":{"id":"DdlXz4","date":"1668578154","viewed":86,"name":"Spiral dipole","username":"KingHashish","description":"spirals","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math","complex"],"hasliked":0,"parentid":"mdXXzN","parentname":"Radiation"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323\n#define hue(v) ( .6 + .6 * cos( 2.*PI*(v) + vec3(0,-2.*PI/3.,2.*PI/3.)))\n#define ZOOM 250.\n\n#define cmul(z1, z2) (mat2(z1, -z1.y, z1.x)*z2)\n#define cdiv(z1, z2) (z1*mat2(z2, -z2.y, z2.x)/dot(z2, z2))\n\n\n\nvec2 clog(vec2 z)\n{\n    vec2 w;\n    \n    w.x = 0.5*log(z.x*z.x + z.y*z.y);\n    w.y = atan(z.y, z.x);\n    \n    return w;\n}\n\nvec3 hrgb(vec2 w)\n{\n    vec3 c, cc;\n    float mm;\n    float p;\n    \n    float m = length(w);\n    float a = (PI + atan(w.y, -w.x))/(2.0*PI);\n    \n    m = log(1. + 100.*m);\n    \n    //cc = 0.;\n    //cc.r =  0.5 - 0.5*sin(2.0*PI*a - PI/2.0 + a*m*100.);\n   //cc.g = (0.5 + 0.5*sin(2.0*PI*a*1.5 - PI/2.0 + a*m*100.));// * float(a < 0.66);\n    //cc.b = (0.5 + 0.5*sin(2.0*PI*a*1.5 + PI/2.0 + a*m*100.));// * float(a > 0.33);\n    \n    cc.r = 0.5 - 0.5*sin(2.0*PI*a - PI/2.0 + m*5.4 + 2.*iTime);\n    cc.g = 0.5 - 0.5*sin(2.0*PI*a - PI/2.0 + m*5.4 + 2.*iTime);\n    cc.b = 0.;\n    \n    \n    //cc -= 0.1*m;\n    //c = 0.5*(hue(a) + cc);\n    c = cc;\n    \n    //mm = fract(m);\n    //p = fract(mod(a, 1.0/16.0));\n     \n    //c -= 0.15*mm + 1.5*p;\n    \n    //if (/*length(w) + .05 > 1. &&*/\n    //    (fract(w.x) < .05 || fract(-w.x) < .05 ||\n    //     fract(w.y) < .05 || fract(-w.y) < .05)) c -= 0.5;\n    \n    return c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 z, w, w1, w2, w3, w4;\n    \n    z = fragCoord - iResolution.xy/2.;\n    \n    \n    //if (iMouse.xy != vec2(0., 0.)) //to center at origin\n    //    z -= iMouse.xy - iResolution.xy/2.;\n    \n    \n    z /= ZOOM; //zoom\n\n\n    w = z - vec2(0, -0.5);\n    \n    if (iMouse.xy != vec2(0., 0.))\n        w = z - (iMouse.xy - iResolution.xy/2.)/ZOOM;\n    w = cdiv(w, (z - vec2(-0.0,0.)));\n    \n        \n    \n    //w = cdiv(w, (z-vec2(1.,0.)));\n    \n\n    \n   //w = z;            \n    \n    fragColor = vec4(hrgb(w), 1.0);\n    \n\n/*\n    w1 = clog( z + vec2(-.25,-.25)/ZOOM );\n    w2 = clog( z + vec2(-.25, .25)/ZOOM );\n    w3 = clog( z + vec2( .25,-.25)/ZOOM );\n    w4 = clog( z + vec2( .25, .25)/ZOOM );\n    \n    \n    fragColor = vec4(0.25*(hrgb(w1) + hrgb(w2) + hrgb(w3) + hrgb(w4)), 1.0);\n    */\n}","name":"Image","description":"","type":"image"}]}