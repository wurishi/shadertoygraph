{"ver":"0.1","info":{"id":"4d2cDD","date":"1492198911","viewed":143,"name":"Audio Visualisation","username":"CormackAli","description":"Simple audio visualisation based on an existing shader (learning)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sound","wave","audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid disk(vec2 r, vec2 center, float radius, vec3 color, inout vec3 pixel)\n{\n\tif(length(r-center) < radius)\n    {\n    \tpixel = color;   \n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Convert coordinates to uniform centered system\n\tvec2 uv = 2.0 * vec2(fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    vec3 bgColor = vec3(0.2);\n    vec3 col1 = vec3(0);\n    \n    \n    \n    float fft = texture(iChannel0, vec2(uv.y, 0.075)).x;\n    float wave = texture(iChannel0, vec2(uv.x, .0075)).x;\n    //vec3 col = vec3( fft, 4.0*fft*(1.0-fft), 1.0-fft ) * fft;\n    \n    //col += 1.0 - smoothstep(0.0,0.15, abs(wave - uv.y));\n    //fragColor = vec4(col, 1.0);\n    \n    vec3 pixel = vec3(fft, fft, fft);\n    \n    disk(uv, vec2(0,0), fft, col1, pixel);\n    \n    fragColor = vec4(pixel, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}