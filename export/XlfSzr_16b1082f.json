{"ver":"0.1","info":{"id":"XlfSzr","date":"1433958646","viewed":1509,"name":"Broken Pixelsort","username":"vladstorm","description":"try it with webcamera ","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["distort","glitch","black","pixelsort"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//by Vladimir Storm\n//https://twitter.com/vladstorm_\n\n#define SFT 5.\n\nvec3 prev(vec2 p) {\n    \n    if( p.x>=iResolution.x || p.y>=iResolution.y) \treturn vec3(1.);\n    if( p.x<0. || p.y<0.) \t\t\t\t\t\t\treturn vec3(0.);    \n    return texture(iChannel0, (p+.5)/iResolution.xy).rgb;    \n    \n}\n//    return texture(iChannel0,vec2((p.x+.5)/iResolution.x, (p.y+.5)/iResolution.y)).rgb;\n\nbool odd(float x) { return (mod(x, 2.0) < 1.0); }\nfloat cv(vec3 c){ return c.r+c.g+c.b; } //color value\n\nvec3 compare(vec3 c1, vec3 c2, int c){\n  if(c==1) return (cv(c1) < cv(c2)) ? c1: c2*.5;\n  else     return (cv(c1) > cv(c2)) ? c1: c2*.5;\n}\n\nvec3 sort0(vec2 p, int c){\n  vec3 c1 = prev(p), c2 = prev(p +vec2( (c==1)?SFT:-SFT, 0.) );\n  return compare(c1, c2, c);      \n}\nvec3 sort1(vec2 p, int c){\n  vec3 c1 = sort0(p,c), c2 = sort0(p+vec2( (c==1)?SFT:-SFT, 0.) , c);\n  return compare(c1, c2, c);      \n}\nvec3 sort2(vec2 p, int c){\n  vec3 c1 = sort1(p,c), c2 = sort1(p+vec2( (c==1)?SFT:-SFT, 0.) , c);\n  return compare(c1, c2, c);      \n}\nvec3 sort3(vec2 p, int c){\n  vec3 c1 = sort2(p,c), c2 = sort2(p+vec2( (c==1)?SFT:-SFT, 0.) , c);\n  return compare(c1, c2, c);      \n}\n// vec3 sort4(vec2 p, int c){\n//   vec3 c1 = sort3(p,c), c2 = sort3(p+vec2( (c==1)?SFT:-SFT, 0.) , c);\n//   return compare(c1, c2, c);      \n// }\n// vec3 sort5(vec2 p, int c){\n//   vec3 c1 = sort4(p,c), c2 = sort4(p+vec2( (c==1)?SFT:-SFT, 0.) , c);\n//   return compare(c1, c2, c);      \n// }\n// vec3 sort6(vec2 p, int c){\n//   vec3 c1 = sort5(p,c), c2 = sort5(p+vec2( (c==1)?SFT:-SFT, 0.) , c);\n//   return compare(c1, c2, c);      \n// }\n// vec3 sort7(vec2 p, int c){\n//   vec3 c1 = sort6(p,c), c2 = sort6(p+vec2( (c==1)?SFT:-SFT, 0.) , c);\n//   return compare(c1, c2, c);      \n// }\n// vec3 sort8(vec2 p, int c){\n//   vec3 c1 = sort7(p,c), c2 = sort7(p+vec2( (c==1)?SFT:-SFT, 0.) , c);\n//   return compare(c1, c2, c);      \n// }\n// vec3 sort9(vec2 p, int c){\n//   vec3 c1 = sort8(p,c), c2 = sort8(p+vec2( (c==1)?SFT:-SFT, 0.) , c);\n//   return compare(c1, c2, c);      \n// }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    vec2 p = vec2(floor(fragCoord.x),floor(fragCoord.y)); //vec2 p = fragCoord.xy;\n    int cnd = ( odd(p.x) ^^ odd(iTime*50.) )? 1: 0;//condition\n    vec3 c = sort3(p, cnd);\n    fragColor = vec4(c, 1.0);\n}\n\n\n\n//float hash(float x) {\n//   return fract(sin(dot(vec2(x,x) ,vec2(12.9898,78.233))) * 43758.5453);\n// }\n\n// float hash2(vec2 p){\n//     return fract(sin(dot(p,vec2(127.1,311.7))) * 43758.5453123);\n// }\n\n// float gray(vec3 c){\n//     return (c.r+c.g+c.b)/3.;\n// }\n\n// vec3 gray3(vec3 c){\n//     return vec3(gray(c));\n// }\n\n// float bm_diff(float color_top, float color_bottom){\n//     return abs( color_top - color_bottom );\n// }\n\n// //max... ?\n// vec3 bm(vec3 c1, vec3 c2){\n//     return ( gray(c1) > gray(c2) ) ? c1 : c2 ;\n// }\n\n\n\n// vec3 dry(vec2 p) {\n\n//     return texture(iChannel0, \n//                      vec2((p.x+.5)/iResolution.x, \n//                           (p.y+.5)/iResolution.y)\n//                     ).rgb;\n// }","name":"","description":"","type":"image"}]}