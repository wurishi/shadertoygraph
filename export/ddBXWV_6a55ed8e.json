{"ver":"0.1","info":{"id":"ddBXWV","date":"1670888584","viewed":106,"name":"Blur + Shift (EPILEPSY WARNING)","username":"4LT","description":"Blurs image and shifts brightness up a small amount each frame, turning white pixels black.  Click the frame when it's near-white to introduce \"noise\".","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["noise","blur","epilepsy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 color = texture(iChannel0, uv);\n\n    fragColor = color;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 sampleBlur(vec2 fragCoord) {\n    vec3 uv1 = vec3(fragCoord.xy / iChannelResolution[0].xy, 1.0);\n    \n    vec3 uv2 = vec3((fragCoord.xy + vec2(1.0, 0.0)) / iChannelResolution[0].xy, 0.67);\n    vec3 uv3 = vec3((fragCoord.xy + vec2(-1.0, 0.0)) / iChannelResolution[0].xy, 0.67);\n    vec3 uv4 = vec3((fragCoord.xy + vec2(0.0, 1.0)) / iChannelResolution[0].xy, 0.67);\n    vec3 uv5 = vec3((fragCoord.xy + vec2(0.0, -1.0)) / iChannelResolution[0].xy, 0.67);\n    \n    vec3 uv6 = vec3((fragCoord.xy + vec2(1.0, 1.0)) / iChannelResolution[0].xy, 0.2);\n    vec3 uv7 = vec3((fragCoord.xy + vec2(-1.0, 1.0)) / iChannelResolution[0].xy, 0.2);\n    vec3 uv8 = vec3((fragCoord.xy + vec2(-1.0, 1.0)) / iChannelResolution[0].xy, 0.2);\n    vec3 uv9 = vec3((fragCoord.xy + vec2(1.0, -1.0)) / iChannelResolution[0].xy, 0.2);\n    \n    float sum = uv1.z + uv2.z + uv3.z + uv4.z + uv5.z + uv6.z + uv7.z + uv9.z;\n    \n    vec4 s1 = texture(iChannel0, uv1.xy);\n    vec4 s2 = texture(iChannel0, uv2.xy);\n    vec4 s3 = texture(iChannel0, uv3.xy);\n    vec4 s4 = texture(iChannel0, uv4.xy);\n    vec4 s5 = texture(iChannel0, uv5.xy);\n    vec4 s6 = texture(iChannel0, uv6.xy);\n    vec4 s7 = texture(iChannel0, uv7.xy);\n    vec4 s8 = texture(iChannel0, uv8.xy);\n    vec4 s9 = texture(iChannel0, uv9.xy);\n    \n    return (s1 * uv1.z\n        + s2 * uv2.z\n        + s3 * uv3.z\n        + s4 * uv4.z\n        + s5 * uv5.z\n        + s6 * uv6.z\n        + s7 * uv7.z\n        + s8 * uv8.z\n        + s9 * uv9.z) / sum;    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float delta = 0.0001;\n\n    vec4 in_color = sampleBlur(fragCoord.xy);\n    vec4 color = in_color + vec4(delta, delta, delta, 0.0);\n    \n    if (color.x >= 1.0) {\n        color = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n    \n    if (iMouse.z > 0.0) {\n        vec2 dMouse = iMouse.xy - fragCoord.xy;\n        if (dMouse.x > -0.5 && dMouse.x <= 0.5 && dMouse.y > -0.5 && dMouse.y <= 0.5) {\n            color = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n    \n    fragColor = color;\n}","name":"Buffer A","description":"","type":"buffer"}]}