{"ver":"0.1","info":{"id":"cd2BDW","date":"1689728461","viewed":135,"name":"Test Arno","username":"frosty_arno","description":"test","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle_distance(vec2 point, float radius){\n    return length(point) - radius;\n}\n\n\nvoid mainImage( out vec4 frag_color, in vec2 frag_coord ){\n\n    vec2 uv = (frag_coord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 final_color = vec3(0.0);\n    \n    vec2 fract_uv = uv * 2.;\n    \n    for (int i = 0; i < 11; i++){\n        fract_uv = fract(fract_uv);\n        fract_uv -= 0.5;\n\n        float circle = circle_distance(fract_uv, 0.5) * exp(-length(uv));\n        circle = sin(circle * 8. - iTime) / 8.;\n        circle = abs(circle);\n        circle = smoothstep(0., 0.05, circle);\n        circle = 0.01 / circle;\n        final_color += circle;\n    }\n    \n    frag_color = vec4(final_color, 1);\n    \n}","name":"Image","description":"","type":"image"}]}