{"ver":"0.1","info":{"id":"3tsBDj","date":"1597760245","viewed":157,"name":"stargazer","username":"inbisibler","description":"circle orbit, and use random function","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circleorbit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rd(float x){\n\treturn fract(sin(x)*50000.0);\n}\n\nfloat cc(float radius,vec2 center, vec2 pos, float b){\n\tfloat color = pow(radius/length(pos-center),b);    \n    return color;\n}\n\nvec2 rot(vec2 p, float th){\n\treturn vec2(p.x*cos(th)-p.y*sin(th),p.x*sin(th)+p.y*cos(th));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy - iResolution.xy/2.)/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float th = 0.05*iTime;\n    vec2 p = vec2( uv.x*cos(th)-uv.y*sin(th), uv.x*sin(th)+uv.y*cos(th));\n    \n    float b = 0.;\n\tfor(float i = 0.0; i < 2000.0; i++){\n        b += cc(0.002*rd(i)*abs(sin(10.*rd(i+0.3)*th+rd(i+0.1)))+0.0005,vec2(rd(i+0.1),rd(i+0.2))*2.-1.,p,2.);\n    }\n    \n    for(float i = 0.0; i < 20.;i++){\n\t\tfloat r = 1.5*fract(-0.02*iTime*rd(i*0.03)+rd(i*0.02));\n        float th = 0.1*iTime*rd(i*0.04)+rd(i+0.03)*3.14*4.;\n        vec2 pc = rot(vec2(r,0.),th);\n    \tb += cc(0.03*fract(length(pc)/1.5),pc,uv,3.); \n    \n    }\n    \n    col = vec3(3.)*b;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}