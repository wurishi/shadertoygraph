{"ver":"0.1","info":{"id":"tst3DH","date":"1568495938","viewed":177,"name":"raining","username":"Netgfx","description":"from https://www.shadertoy.com/view/4sKfDz","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat rand(float Seed){\n    \n    return fract(sin(Seed*4124213.)*37523.);\n}\n\n/*float rand(vec2 Seed){\n    \n    //return fract(sin(dot(Seed.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    return fract(sin(vec2(dot(Seed.xy*1.0,vec2(127.1,311.7)),dot(Seed.xy*1.0,vec2(269.5,183.3))))*43758.5453);\n}\n*/\n\nfloat rand(vec2 co)\n{\n    float a = 12.9898;\n    float b = 78.233;\n    float c = 43758.5453;\n    float dt= dot(co.xy ,vec2(a,b));\n    float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\nfloat randInRange(float id, vec2 range){\n    \n    id = rand(id);\n    return range.x + id * (range.y-range.x);\n}\n\n\nvoid AddPannedGrid( inout vec4 FragCol, vec2 uv, vec4 GridColor,\n                   vec2 panningSpeedRange, float gridSize, float seedDiff){\n    \n\n    float verticalStretch = (6.5);\n    vec2 st = uv;\n    \n    // This value tells you the index of the columns and rows. You might have \n    // to recalculate it if you pan something\n    vec2 gridID = floor ( vec2(uv.x*rand(seedDiff) * gridSize, uv.y *verticalStretch));\n    \n    \n    // Paning the texture\n    \n    uv.y+= rand(gridID.x+0. + seedDiff)+randInRange(gridID.x+seedDiff, panningSpeedRange)*iTime;\n    \n    // divide the uv so that it creates the grid\n    uv = fract ( vec2(uv.x*rand(cos(3.14)) * gridSize , uv.y *verticalStretch));\n   \n    \n    // Shading the grids\n    float diagonal = smoothstep(0., 0.05, uv.y - uv.x*.1*st.y);\n\n    vec3 temp = vec3((1.-uv.x)*pow((1.0-uv.y)*1.1,4.))*diagonal;\n    \n    \n    // Applying the alpha and the fin color addtiv on top\n    FragCol.xyz += GridColor.a * GridColor.xyz*temp;\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Compensating for aspect ration\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec4 finalColor = vec4(0.);\n    \n    // Adding the efect Additiv\n\tAddPannedGrid(finalColor, uv, vec4(0.1,0.7,1.,0.7), vec2(1.1,.4), 100., 9.);\n    //AddPannedGrid(finalColor, uv, vec4(0.0,0.7,1.,0.9), vec2(.1,.7), 100.,2.0);\n    AddPannedGrid(finalColor, uv, vec4(0.5,0.7,1.,0.5), vec2(.5,.9), 90.,1.50);\n    \n    // Output to screen\n    fragColor = finalColor;\n}","name":"Image","description":"","type":"image"}]}