{"ver":"0.1","info":{"id":"wsfyzj","date":"1585258373","viewed":61,"name":"RayCasting","username":"RumyHumy","description":"Simple reaycasting visualisation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raycasting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITERATIONS 500\nvec4 spheres[1];\nvec3 pos, sphpos, spd, l, n, light;\nfloat dis, dif, real_i;\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Screen\n    vec2 scr = fragCoord/iResolution.xy*2.-1.;\n    // Positions\n    spheres[0] = vec4(0.,0.,3.,.9);\n    light = vec3(1.+sin(iTime*3.),5.,.5);\n    // Ray\n    vec3 col = vec3(0.8,0.9,0.9);\n    pos = vec3(scr.x,scr.y,0);\n    spd = vec3(scr.x,scr.y,1);\n    for (int i = 0; i < ITERATIONS; i++)\n    {\n        sphpos = vec3(spheres[0].x, spheres[0].y, spheres[0].z);\n    \tdis = length(pos-sphpos)-spheres[0].w;\n        if (dis < spheres[0].w)\n        {\n            l = normalize(light-pos);\n    \t\tn = pos;\n            dif = clamp(dot(n, l)*0.5+0.9, 0.0, 1.0);\n            col = dif*vec3(2.0,1.2,1.2);\n            break;\n        }\n        pos += spd*dis;\n        pos = max(min(pos,iTime/2.),-iTime/2.);\n    }\n    fragColor = vec4(col,0.0);\n}","name":"Image","description":"","type":"image"}]}