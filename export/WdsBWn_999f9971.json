{"ver":"0.1","info":{"id":"WdsBWn","date":"1588063515","viewed":284,"name":"Lazy Cave Thingie","username":"khoba","description":"-","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["raytracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define OUTLINE_THRESHOLD 0.003\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 offsetX = vec2(1. / iResolution.x, 0.);\n    vec2 offsetY = vec2(0., 1. / iResolution.y);\n    \n    vec3 col = texture(iChannel0, uv).xyz;\n    vec3 colU = texture(iChannel0, uv + offsetY).xyz;\n    vec3 colD = texture(iChannel0, uv - offsetY).xyz;\n    vec3 colR = texture(iChannel0, uv + offsetX).xyz;\n    vec3 colL = texture(iChannel0, uv - offsetX).xyz;\n    \n    float diff = max(abs(BW(colU) - BW(colD)), abs(BW(colR)  - BW(colL)));\n    \n    vec3 outputCol = diff > OUTLINE_THRESHOLD ? col * col * col * col: vec3(1, 1., 95.);\n\t\n    fragColor = vec4(outputCol, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define STEP \t\t0.0001\n#define MAX_DIST\t0.1\n#define MIN_DIST    0.0\n#define THRESHOLD   0.03\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 cuv = (uv - .5) * 2.;\n    \n    vec3 pos = vec3(0., 0., iTime * 0.01);\n    vec3 ray = normalize(vec3(cuv, 1.))\n        * rotationZ(cos(iTime * 0.52) * 0.25)\n        * rotationX(sin(iTime * 0.3) * 0.74);\n    \n    float dist = 1.;\n    for(float d = MIN_DIST; d < MAX_DIST; d += STEP) {\n        vec3 samplePos = pos + ray * d;\n        vec3 xy = texture(iChannel0, samplePos.xy).xyz;\n        vec3 yz = texture(iChannel0, samplePos.zy).xyz;\n        if(BW(xy) * BW(yz) > THRESHOLD) {\n            dist = d / (MAX_DIST - MIN_DIST);\n            break;\n        }\n    }\n\t\n    fragColor = vec4(dist, dist, dist, 1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define BW(v) (v.x * .28 + v.y * .6 + v.z * .12)\n\nmat3 rotationY(in float a) {\n    return mat3(cos(a), 0., sin(a),\n               \t0., 1., 0.,\n               -sin(a), 0., cos(a));\n}\n\nmat3 rotationX(in float a) {\n\treturn mat3(1., 0., 0.,\n               \t0.,\tcos(a), sin(a),\n               \t0., -sin(a), cos(a));\n}\n\nmat3 rotationZ(in float a) {\n\treturn mat3(cos(a), sin(a), 0.,\n               \t-sin(a), cos(a), 0.,\n               \t0., 0., 1.);\n}","name":"Common","description":"","type":"common"}]}