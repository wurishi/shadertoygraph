{"ver":"0.1","info":{"id":"DslGD2","date":"1666821281","viewed":57,"name":"Half-Commission","username":"cafour","description":"Half-generated, half-commissioned.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["artgorithm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float inv(float x)\n{\n    if (x == 0.0f) {\n        return 0.0f;\n    }\n    return 1.0f/x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord - (iResolution.xy / 2.0);\n    uv = uv / min(iResolution.x, iResolution.y); // prevents stretching\n    uv = uv * 1.5;\n    float x = uv.x;\n    float y = uv.y;\n   \n    // NB: the formulas for first_half and second_half been for the most part generated by QuantizeThemAll\n    float first_half = sin(sin(inv(x)))\n        + inv(x)\n        + sin(iTime) * x\n        + x;\n    float second_half =\n        inv(\n            sin(\n                inv(\n                    inv(\n                        inv(x)\n                        )\n                    +\n                    sin(\n                        sin(\n                            inv(y)*cos(iTime)\n                            )\n                        )*x*y\n                    )\n                )\n            )\n        *\n        inv(\n            sin(\n                inv(\n                    sin(y)\n                    )*x*x+inv(y)\n                )*sin(iTime)\n                + inv(inv(x)*y)\n                + sin(y)*sin(iTime)\n                    *inv(inv(sin(x)))\n                    *inv(x*x+y*y)\n            )\n        *\n        inv(x);\n\n    float qta = clamp(first_half + second_half, 0.0, 1.0);\n    float pulse = (sin(iTime) + 1.0) * 0.5;\n    vec3 col = qta * vec3(mix(0.4, 0.8, pulse), 0.0, 0.0)\n        // the \"oily\" details\n        + vec3(0.05 * sin(second_half));\n    \n    float wibbly = -log(abs(second_half) + 2.0) * 0.06;\n    float wobbly = (log(abs(second_half) + 0.001)) * 0.03;\n    float circle = clamp(abs(x*x + y*y) + wibbly + wobbly, 0.0, 1.0);\n    if (circle > 0.22)\n    {\n        float background = exp(circle * 12.0);\n        col = mix(col, vec3(background), background + 0.5);\n        col = vec3(second_half) + vec3(background);\n    }\n    \n    /*float non_wobbly_circle = clamp(abs(x*x + y*y), 0.0, 1.0);\n    if (non_wobbly_circle > 0.3 && length(col) < 3.0)\n    {\n        col = vec3(0);\n    }*/\n    \n    \n    // the square\n    /*float square_border = mix(0.02, 0.04, sin(iTime) + 1.0);\n    if (abs(x) < square_border && abs(y) < square_border)\n    {\n        col = vec3(pulse);\n    }*/\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}