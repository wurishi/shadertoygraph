{"ver":"0.1","info":{"id":"MtXBDs","date":"1513896373","viewed":5341,"name":"ImageGlitcher","username":"airtight","description":"GLSL version of ImageGlitcher: https://www.airtightinteractive.com/demos/js/imageglitcher/","likes":76,"published":1,"flags":0,"usePreview":0,"tags":["imageglitcher"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//2D (returns 0 - 1)\nfloat random2d(vec2 n) { \n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat randomRange (in vec2 seed, in float min, in float max) {\n\t\treturn min + random2d(seed) * (max - min);\n}\n\n// return 1 if v inside 1d range\nfloat insideRange(float v, float bottom, float top) {\n   return step(bottom, v) - step(top, v);\n}\n\n//inputs\nfloat AMT = 0.2; //0 - 1 glitch amount\nfloat SPEED = 0.6; //0 - 1 speed\n   \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float time = floor(iTime * SPEED * 60.0);    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //copy orig\n    vec3 outCol = texture(iChannel0, uv).rgb;\n    \n    //randomly offset slices horizontally\n    float maxOffset = AMT/2.0;\n    for (float i = 0.0; i < 10.0 * AMT; i += 1.0) {\n        float sliceY = random2d(vec2(time , 2345.0 + float(i)));\n        float sliceH = random2d(vec2(time , 9035.0 + float(i))) * 0.25;\n        float hOffset = randomRange(vec2(time , 9625.0 + float(i)), -maxOffset, maxOffset);\n        vec2 uvOff = uv;\n        uvOff.x += hOffset;\n        if (insideRange(uv.y, sliceY, fract(sliceY+sliceH)) == 1.0 ){\n        \toutCol = texture(iChannel0, uvOff).rgb;\n        }\n    }\n    \n    //do slight offset on one entire channel\n    float maxColOffset = AMT/6.0;\n    float rnd = random2d(vec2(time , 9545.0));\n    vec2 colOffset = vec2(randomRange(vec2(time , 9545.0),-maxColOffset,maxColOffset), \n                       randomRange(vec2(time , 7205.0),-maxColOffset,maxColOffset));\n    if (rnd < 0.33){\n        outCol.r = texture(iChannel0, uv + colOffset).r;\n        \n    }else if (rnd < 0.66){\n        outCol.g = texture(iChannel0, uv + colOffset).g;\n        \n    } else{\n        outCol.b = texture(iChannel0, uv + colOffset).b;  \n    }\n       \n\tfragColor = vec4(outCol,1.0);\n}","name":"Image","description":"","type":"image"}]}