{"ver":"0.1","info":{"id":"ws2yWh","date":"1586567681","viewed":89,"name":"Kaleidoscope 2 ","username":"Robinsong","description":"more changes to my Kaleidoscope shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float r = .1*iTime;\n    \n   \tuv.x = mix(-30.0, 30.0, uv.x);\n\tuv.y = mix(-30.0, 30.0, uv.y);\n\n    uv.x = uv.x*cos(r)*10.5 + uv.y*sin(r)*10.5;\n    uv.y = uv.x*sin(r)*10.5 + uv.y*cos(r)*10.5;\n    \n    \n    float th = atan(uv.y, uv.x);\n\tfloat k = pow(length(uv), .9);\n\tfloat f = 3.14159 / 20.;\n\n\tth = abs(mod(th + f/4.0, f) - f/2.0) / (1.0 + k);\n\tth = sin(th * 100.);\n    uv = vec2(cos(th), sin(th)) * k * .08;\n    \n       \n    vec2 q = uv - vec2(sin(iTime*.1)*1.,cos(iTime*.1)*1.);\n\n    vec3 col = 0.1 + 0.1*(q.xyx+vec3(0,2,4));\n\t \n    float n = sin(iTime*1.1)*.1+1.;\n    float m = sin(iTime*.8)*.1+1.;\n        \n    col.x = smoothstep(sin(col.x*100.)*1.,(sin(iTime*1.)*1.),n);\n    col.y = smoothstep(cos(col.y*100.)*1.,(cos(iTime*1.)*1.),m);\n    \n    \n    // Output to screen    \n\t\n\tfragColor = vec4(col,1.0);    \n\n        \n}","name":"Image","description":"","type":"image"}]}