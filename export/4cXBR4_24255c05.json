{"ver":"0.1","info":{"id":"4cXBR4","date":"1723400240","viewed":50,"name":"Kaleidoscope Galaxy","username":"GarlicGraphix","description":"Kaleidoscope\n\nMove mouse x axis to rotate\nMove mouse y axis to move light","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159;\nfloat TAU = 6.28318;\n\nmat2 rot2D(float angle) \n{\n    float c = cos(angle);\n    float s = sin(angle);\n    \n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    uv -= iResolution.xy*0.5/iResolution.y;\n    \n    // Kaleidoscope\n    vec2 r = vec2(1., 0.);\n    r *= rot2D(iMouse.x*TAU/iResolution.x);\n    float m = 15.;\n    float t = TAU/m;\n    float c = r.y/r.x;\n    \n    float a = acos(dot(normalize(uv), r));\n    if (dot(normalize(uv), r*rot2D(PI/2.)) > 0.) {\n        a = TAU - a;\n    }\n    uv *= rot2D(t*floor(a/t));\n    \n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n    // Light\n    col *= 1.-abs(length(uv)*1.5-iMouse.y/iResolution.y*1.5);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}