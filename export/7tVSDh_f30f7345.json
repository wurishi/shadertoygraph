{"ver":"0.1","info":{"id":"7tVSDh","date":"1640627893","viewed":1202,"name":"Little Fibonacci Sphere","username":"Xor","description":"A cute little Fibonacci sphere. It's a bit like my little [url=https://www.shadertoy.com/view/7lKSzw]Christmas tree shader[/url], but I rewrote it from scratch and used a slightly different approach.","likes":52,"published":1,"flags":0,"usePreview":0,"tags":["glow","golf","twotweet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//twigl: https://t.co/Eqa9WrS2Yg\n//tweet: https://twitter.com/XorDev/status/1475524322785640455\n\n//Thanks to Fabrice for some tricks and ideas.\nvoid mainImage( out vec4 O, vec2 I)\n{\n    //Clear base color.\n    O-=O;\n    \n    //Iterate though 400 points and add them to the output color.\n    for(float i=-1.; i<1.; i+=6e-3)\n    {\n        vec2 r = iResolution.xy, //A shortened resolution variable, because we use it twice.\n        p = cos(i*4e2+iTime+vec2(0,11))*sqrt(1.-i*i);  //Rotate and scale xy coordinates.\n        O += (cos(i+vec4(0,2,4,6))+1.)*(1.-p.y) /      //Color and brightness.\n        dot(p=(I+I-r)/r.y+vec2(p.x,i)/(p.y+2.),p)/3e4; //Project light point.\n    }\n}\n\n// Original (230 chars):\n/*\nvoid mainImage( out vec4 O, vec2 I)\n{\n    vec2 r = iResolution.xy, //A shortened resolution variable, because we use it twice.\n    u = I+I-r,               //Centered pixel coornates.\n    p,c;                     //Rotated point and 2D point coordinates.\n    \n    O-=O; //Clear base color.\n    //Iterate though 400 points and add them to the output color.\n    for(float a,i;i++<4e2; O += (cos(i+vec4(0,2,4,0))+1.)/dot(c,c)*(1.-p.y)/3e4)\n        a = i/2e2-1.,                                  //Signed value from -1 to 1.\n        p = cos(i*2.4+iTime+vec2(0,11))*sqrt(1.-a*a),  //Rotate and scale xy coordinates.\n        c = u/r.y+vec2(p.x,a)/(p.y+2.);                //Project into 3D.\n}\n*/","name":"Image","description":"","type":"image"}]}