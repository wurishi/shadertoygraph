{"ver":"0.1","info":{"id":"DdXBzN","date":"1688498793","viewed":248,"name":"Xpose Flag","username":"misol101","description":"Attempt at making a flag like in the Amiga demo Xpose by Silents.\n\nNote: you need high fps or things will look weird","likes":7,"published":3,"flags":96,"usePreview":0,"tags":["line","amiga","flag","draw","silents","reproduction","xpose"],"hasliked":0,"parentid":"mslfzn","parentname":"Xpose Flag Fail"},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"lsc3W8","filepath":"https://soundcloud.com/tracker-m/jesper-kyd-ministry","previewfilepath":"https://soundcloud.com/tracker-m/jesper-kyd-ministry","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 hist = texelFetch( iChannel1, ivec2(fragCoord), 0 );\n    float val = (hist.x + hist.y + hist.z) * (0.54/3.);\n    \n    vec2 center = 0.5 * iResolution.xy;\n    vec2 uv = (fragCoord - center) / iResolution.y;\n    float blue = abs(uv.y) < 0.43 ? 0.15 : 0.;\n    float white = blue>0. && abs(uv.y) > 0.427 && abs(uv.x)<0.85 ? 1. : 0.;\n    \n    fragColor = vec4( white+val*0.95, white+val*0.95, white+blue+val, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Line draw function from https://www.shadertoy.com/view/4ljfRD by Loeizd\n\nfloat drawLine (vec2 p1, vec2 p2, vec2 uv, float width)\n{\n    p1=(p1-0.5)*0.7;p2=(p2-0.5)*0.7;uv=(uv-0.5)*0.7;\n\n    float r = 0.;\n    float one_px = 1. / iResolution.x; //not really one px\n    \n    // get dist between points\n    float d = distance(p1, p2);\n    \n    // get dist between current pixel and p1\n    float duv = distance(p1, uv);\n\n    //if point is on line, according to dist, it should match current uv \n    r = 1.-floor(1.-(width*one_px)+distance (mix(p1, p2, clamp(duv/d, 0., 1.)),  uv));\n        \n    return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float time = iTime * 1.5;\n\n    if (abs(uv.y-0.5) > 0.425) { fragColor=vec4(0.); return; }; // we don't draw here\n\n    const float xmstep = 0.4;\n    const float ymstep = 0.36;\n    const float xmul = 0.08;\n    const float ymul = 0.14;\n\n    const float xstart = 0.155;\n    const float ystart = 0.25;\n    \n    const float xsegments = 14.;\n    const float ysegments = 9.;\n\n    const float xstep = (1.01-xstart*2.) / (xsegments - 1.);\n    const float ystep = (0.98-ystart*2.) / (ysegments - 1.);\n\n    float tm=time*0.275;\n    vec2 cp = vec2(xstart, ystart);\n    \n    const float xtmul = 2.;\n    const float ytmul = 2.1;\n    \n    const float linesize = 0.8;\n    \n    float lines= 0.;\n    for (float y=0.; y<ysegments; y+=1.) {\n        float stx = xmstep+time*xtmul+ymstep*y;\n        float sty = xmstep+time*ytmul+ymstep*(y+1.);\n        vec2 lastp= vec2(-1.);\n        for (float x=0.; x<xsegments; x+=1.) {\n            vec2 p1 = vec2(cp.x+sin(stx)*xmul,cp.y+cos(sty+tm)*ymul);\n            if (lastp.x >= 0.) lines += drawLine(lastp, p1, uv, linesize);\n            if (y < ysegments - 1.) lines += drawLine(p1, vec2(cp.x+sin(stx+ymstep)*xmul, cp.y+ystep+cos(sty+ymstep+tm)*ymul), uv, linesize);\n\n            lastp = p1;\n            cp.x += xstep;\n            stx += xmstep;\n            sty += xmstep;\n        }\n        cp = vec2(xstart, cp.y + ystep);\n    }\n\n    fragColor = vec4(clamp(lines, 0.,1.));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 O, vec2 F) {\n    int index = iFrame % 3;\n    vec4 curr = texelFetch(iChannel0, ivec2(F), 0);\n    curr[index] = texelFetch(iChannel1, ivec2(F) ,0).x;\n    O = curr;\n}\n","name":"Buffer B","description":"","type":"buffer"}]}