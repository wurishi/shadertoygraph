{"ver":"0.1","info":{"id":"dljGzh","date":"1702026171","viewed":33,"name":"SImpleCellular Automata.","username":"lienthealien","description":"SImpleCellular Automata.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["automata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 texCoord = vec2(fragCoord.xy) - (vec2(iResolution.xy*0.5) ); \n//Change Zoom\ntexCoord /= 16.0 *(vec2(iMouse.x + 0.3));\ntexCoord += vec2(iResolution.xy * 0.5);\n\nvec4 texelValue= texelFetch(iChannel0, ivec2(texCoord), 0);\n fragColor = texelValue;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Gameoflife code\nbool checkColor(vec4 pixel){\nbool hasColor= false;\n    if(pixel.r>0.0){\n        hasColor=true;\n    }\n    else if(pixel.g>0.0){\n        hasColor=true;\n    }\n    else if(pixel.b>0.0){\n        hasColor=true;\n    }\n    else{\n     hasColor=false;\n    }\nreturn hasColor;\n}\n\nint getNeighbors(ivec2 p){\n  int num = 0;\n  \n  for(int y=-1; y<=1;y++){\n    for(int x=-1; x<=1;x++){\n     if(x == 0 && y == 0) continue;\n     vec4 coordColor = texelFetch(iChannel1, p + ivec2(x,y),0); \n     num += checkColor(coordColor) ? 1 :0;\n    }\n  }\n  return num;\n  \n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =  fragCoord.xy /(iResolution.xy);\n    vec3 newcol;\n    vec4 col;\n \n if(iFrame < 20){\n     col = texture(iChannel0, uv);\n     newcol = col.rgb;\n    }else{\n     vec4 currentCoords = texelFetch(iChannel1,ivec2(fragCoord),0);\n     \n     bool alive =checkColor(currentCoords);\n     int num = getNeighbors(ivec2(fragCoord));\n     int next = 0;\n     //good old conway\n     newcol = vec3(0);\n     if (alive && (num == 2 ))\n     {\n       next = 1;\n       newcol.r=0.5;newcol.b=0.2;\n     }\n     else if (alive && (num == 3))\n     {\n       next = 1;\n       newcol.r=0.5;newcol.b=0.6;\n     }\n     else if(!alive && num == 3){\n       next= 1;\n       newcol.r=0.0;newcol.b=1.0;\n     }\n     //beyond conway\n     /* else if(alive && num == 6){\n       next= 0;\n       newcol.r=0.4;newcol.g=abs(sin(iTime*2.0));\n     }*/\n     /*\n     Just XOR ing around. \n     else if ((alive && !(num == 5)) || (!alive && (num == 5))){\n        //else if(alive && num == 6){\n       next= 1;\n       newcol.r=1.0;newcol.g=0.6;newcol.b=0.0;\n     }*/\n     \n     else{\n       next = 0;\n     }\n    \n     \n     col = vec4(newcol,1.0);\n    }\n    \n     fragColor = col;\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\n//Create a simple square to intialize the screen\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n   vec3 color = vec3(0.0);\n   vec2 uv = (fragCoord.xy) / iResolution.xy - 0.5;\n   uv*=64.0;\n   \n    if (abs(uv.x) < 1.0 && abs(uv.y) < 0.1) {\n    // Set the output color to red\n    fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n  } else {\n    // Set the output color to black\n    fragColor = vec4(0.0);\n  }\n    \n}\n","name":"Buffer B","description":"","type":"buffer"}]}