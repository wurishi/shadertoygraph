{"ver":"0.1","info":{"id":"Mly3zm","date":"1473837906","viewed":422,"name":"Game of Life","username":"tiusic","description":"Conway's Game of Life, with 2 seeds running a more chaotic rule moving in a figure 8, and a nice output shader. Click to draw, space to clear.","likes":13,"published":1,"flags":48,"usePreview":0,"tags":["gameoflife","cellularautomata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    //if (dot(texture(iChannel1, fragCoord / iResolution.xy), vec4(1.0, 1.0, 1.0, 1.0)) > 0.5) {\n    if (texture(iChannel1, fragCoord / iResolution.xy).r > 0.5) {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    } else {\n    \tfragColor = texture(iChannel0, fragCoord / iResolution.xy);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define MOUSE_RADIUS 6.0\n#define SEED_RADIUS 4.0\n\nvec4 get(vec2 p) {\n    return texture(iChannel0, mod(p / iResolution.xy, 1.0));\n}\n\nfloat getn(vec2 p) {\n    return get(p + vec2( 1,  -1)).r + get(p + vec2( 1,  0)).r + get(p + vec2( 1, 1)).r +\n        get(p + vec2(-1, -1)).r + get(p + vec2(-1,  0)).r + get(p + vec2(-1,  1)).r +\n        get(p + vec2( 0, -1)).r + get(p + vec2( 0,  1)).r;\n}\n\nfloat runConway(float c, float n) {\n    return float(c > 0.5 ? n > 1.5 && n < 3.5 : n > 2.5 && n < 3.5);\n}\n\nfloat runChaos(float c, float n) {\n    return mod(n + c + 1.0, 2.0);\n}\n\nvec4 seed() {\n    vec2 p = iResolution.xy * vec2(0.5 + 0.1 * sin(0.1 * iTime), 0.5 + 0.1 * sin(0.2 * iTime));\n    return vec4(p, iResolution.xy - p);\n}\n\nvec4 run(vec2 p) {\n    if (texture(iChannel1, vec2(32.5 / 256.0, 0.5)).x > 0.5) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n    }\n    float c = get(p).r;\n    float n = getn(p);\n    vec4 s = seed();\n    if ((distance(p, s.xy) < SEED_RADIUS) || (distance(p, s.zw) < SEED_RADIUS) ||\n        (iMouse.z > 0.5 && distance(p, iMouse.xy) < MOUSE_RADIUS)) {\n        c = runChaos(c, n);\n    } else {\n        c = runConway(c, n);\n    }\n    return vec4(c, get(p).rgb);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tfragColor = run(fragCoord);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec3 get(vec2 p) {\n    return texture(iChannel1, mod(p / iResolution.xy, 1.0)).rgb;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 n = texture(iChannel0, fragCoord / iResolution.xy).bgr;\n    vec3 o = get(fragCoord) +\n        0.125 * (\n            get(fragCoord + vec2(-1,  0)) + get(fragCoord + vec2( 0, -1)) +\n            get(fragCoord + vec2( 0,  1)) + get(fragCoord + vec2( 1,  0))) +\n        0.0625 * (\n            get(fragCoord + vec2(-1, -1)) + get(fragCoord + vec2(-1,  1)) +\n        \tget(fragCoord + vec2( 1, -1)) + get(fragCoord + vec2( 1,  1)));\n    fragColor = vec4((vec3(0.05, 0.8, 3.0) * n + vec3(1.565, 1.5, 1.4) * o) / 2.75, 1.0).rgba;\n}","name":"Buf B","description":"","type":"buffer"}]}