{"ver":"0.1","info":{"id":"cdGcWy","date":"1696712985","viewed":56,"name":" rotational core","username":"Acre","description":"For some reason, I sense depth.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = acos(-1.0);\nconst float pi2 = pi*2.;\n\nfloat sdEquilateralTriangle(in vec2 p, in float r )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p=vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nfloat sdPentagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(0.809016994,0.587785252,0.726542528);\n    p.x = abs(p.x);\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n    p -= vec2(clamp(p.x,-r*k.z,r*k.z),r);    \n    return length(p)*sign(p.y);\n}\nmat2 rotate2d(float angle)\n{\n\treturn mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n}\nvec2 PolarMod(vec2 p, float r)\n{\n    float a =  atan(p.x, p.y) + pi/r;\n    float n = pi2 / r;\n    a = floor(a/n)*n;\n    return p*rotate2d(-a);\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    float AA=3.0/min(iResolution.x, iResolution.y);\n    vec3 col;\n    float d;\n    vec2 t_p;\n    for(float i=0.0;i<60.0;i++)\n    {\n        t_p=vec2(cos(iTime/pi),sin(iTime/pi))*0.003*i;\n        \n        if(mod(i,2.0)==0.)\n        {\n            d=sdEquilateralTriangle(PolarMod(p,i*3.)*rotate2d(iTime/i*5.)+t_p,0.05*i);\n        }\n        else\n        {\n            d=sdPentagon(PolarMod(p,i*2.)*rotate2d(-iTime/i*5.)+t_p,0.04*i);\n        }\n        col=(d>0.0&&mod(i,5.0)==0.) ? vec3(0.35,0.74,0.9) : col;\n        col=(d>0.0&&mod(i,5.0)==1.) ? vec3(1.0,0.85,0.24) : col;\n        col=(d>0.0&&mod(i,5.0)==2.) ? vec3(0.3)           : col;\n        col=(d>0.0&&mod(i,5.0)==3.) ? vec3(0.0)           : col;\n        col=(d>0.0&&mod(i,5.0)==4.) ? vec3(0.76,0.89,0.89): col;\n    }\n   \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}