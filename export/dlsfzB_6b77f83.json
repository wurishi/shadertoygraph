{"ver":"0.1","info":{"id":"dlsfzB","date":"1693150921","viewed":71,"name":"Underwater shader.","username":"xzripper1","description":"Underwater shader.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["water","underwater","shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    float frequency = 11.0;\n\n    float amplitude = 0.009;\n\n    float speed = 1.5;\n\n    float waveX = amplitude * sin(uv.y * frequency + iTime * speed);\n    float waveY = amplitude * cos(uv.x * frequency + iTime * speed);\n\n    vec3 textureColor = texture(iChannel0, vec2(uv.x + waveX, uv.y + waveY)).rgb;\n\n    fragColor = vec4(mix(textureColor, textureColor * vec3(0.0, 0.5, 0.91), 0.5), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}