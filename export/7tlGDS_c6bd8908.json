{"ver":"0.1","info":{"id":"7tlGDS","date":"1622764286","viewed":90,"name":"Smoothstep edge0 > x > edge1","username":"trashy","description":"Is edge0 > x > edge1 legit?\n\nhttps://github.com/patriciogonzalezvivo/thebookofshaders/issues/344\nhttps://www.khronos.org/registry/OpenGL-Refpages/gl4/html/smoothstep.xhtml\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["smoothstep"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n\n    //edge0 < x < edge1\n    vec3 top = vec3(smoothstep(0.0, 1.0, st.x));\n    \n    //inverted: edge0 > x > edge1\n    vec3 middle = vec3(smoothstep(1.0, 0.0, st.x));\n    \n    //almost same as 1.0 - edge0 < x edge1 \n    //(i had a case in the HSB example where it wasn't interchangeable by a tiny fraction)\n    vec3 bottom = (1.0 - vec3(smoothstep(0.0, 1.0, st.x)));\n    \n    //chop thirds\n    top *= step(0.66, st.y);\n    middle *= (step(0.33, st.y) - step(0.65, st.y));\n    bottom *= step(st.y, 0.32);\n\n    // Output to screen\n    fragColor = vec4(top + middle + bottom,1.0);\n}","name":"Image","description":"","type":"image"}]}