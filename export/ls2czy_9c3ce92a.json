{"ver":"0.1","info":{"id":"ls2czy","date":"1492682272","viewed":164,"name":"Red Tunnel","username":"slerpy","description":"A tunnel with a terrible raytracer","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d","tunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool col(vec3 ray)\n{\n    bool s0 = max(abs(ray.x),2.*abs(ray.y)) > .2;\n    bool s1 = length(ray.xz-vec2(0.15*sign(ray.x),round(ray.z*5.)/5.)) < .01;\n    bool s2 = fract(ray.z) < 0.2;\n    return s0 || s1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    \n    float d;\n    for(d=.1;d<2.;d+=.0001) {\n        vec3 ray = vec3(uv,1.)*d;\n        ray.x -= (d*d)/4.;\n        ray.z += iTime/8.;\n        if(col(ray))break;\n    }\n    \n\tfragColor = vec4(1.-d/2.);\n    if(fract(d+iTime/8.)<.5)\n    \tfragColor.gb -= vec2(1.);\n}","name":"Image","description":"","type":"image"}]}