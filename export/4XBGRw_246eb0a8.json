{"ver":"0.1","info":{"id":"4XBGRw","date":"1708279433","viewed":30,"name":"GAME1004 Shader #3","username":"calebm3167","description":"Raymarching","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.30,0.20,0.20);\n    \n    return a + b*cos(6.28318*(c*t+d));\n}\n\nfloat smin(float a, float b, float k){\n    float h = max(k-abs(a-b), 0.0)/k;\n    return  min(a,b) - h*h*h*k*(1.0/6.0);\n}\n\nfloat sdSphere(vec3 p, float s){\n    return length(p) - s;\n}\n\nfloat sdBox(vec3 p, vec3 b){\n    vec3 q = abs(p) - b;\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat map(vec3 p)\n{\nvec3 spherePos = vec3(sin(iTime)*3., 0, 0);\nfloat sphere = sdSphere(p - spherePos, 1.);\n\n\nfloat box = sdBox(p * 3., vec3(.75)) / 3.;\n\nfloat ground = p.y + 1.;\n\nreturn smin(ground, smin(sphere, box, 2.), 1.);\n\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n   vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n  \n  vec3 ro = vec3(0, 0, -3); \n   vec3 rd = normalize(vec3(uv, 1)); \n   vec3 col = vec3(0); \n   \n   \n   float t = 0.; \n   \n   \n   for (int i = 0; i < 80; i++)\n  { \n   vec3 p = ro + rd * t; \n   \n   float d = map(p); \n   \n   t += d; \n   \n   if (d < .001 || t > 100.) break;\n  }\n  \n   col = palette(t*.04);\n  \n   fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}