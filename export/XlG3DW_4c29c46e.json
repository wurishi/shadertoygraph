{"ver":"0.1","info":{"id":"XlG3DW","date":"1474544286","viewed":2923,"name":"correct video aspect ratio","username":"FabriceNeyret2","description":"Video textures are not square, and do not really fit the window proportions (which anyway depends on icon, medium, fullscreen mode, not to speak of smartphones).\nHere is how to normalize correctly the texture coordinates.","likes":16,"published":3,"flags":0,"usePreview":0,"tags":["aspectratio","video","texture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O,  vec2 U )\n{\n    vec2 margin = vec2(10),\n         Sres = iResolution.xy -2.*margin,\n         Tres = iChannelResolution[0].xy,\n         ratio = Sres/Tres;\n    \n    U -= margin;\n    \n    // centering the blank part in case of rectangle fit\n    U -= .5*Tres*max(vec2(ratio.x-ratio.y,ratio.y-ratio.x),0.);\n    \n  //U /= Tres*ratio.y;               // fit height, keep ratio\n  //U /= Tres*ratio.x;               // fit width, keep ratio\n    U /= Tres*min(ratio.x,ratio.y);  // fit rectangle,  keep ratio\n    U *= 1.;                         // zoom out factor \n    \n\tO = fract(U)==U \n        ? texture(iChannel0, U)\n        : O-O;\n}","name":"Image","description":"","type":"image"}]}