{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"/*\n\tAndor Salga\n\tMay 2014\n*/\n#define res iResolution.xy\nconst float speed = 22.;\nconst float Count = 10.;\n\n// hash functions from https://www.shadertoy.com/view/4sjGD1\nfloat hash(float x)\n{\n    return fract(sin(x) * 43758.5453) * 2.0 - 1.0;\n}\nvec2 hashPosition(float x)\n{\n\treturn vec2(\n\t\tfloor(hash(x) * 3.0) * 32.0 + 16.0,\n\t\tfloor(hash(x * 1.1) * 2.0) * 32.0 + 16.0\n\t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat time = iTime * speed;\n\tfloat falloff =  1.3;\n\tvec3 metaBalls[int(Count)];\n\tfloat d = 0.;\n\tvec2 screen;\n\tfloat c = 0.;\n\t\n\tfor(float i = .0; i < Count; i++){\n\t\tvec2 pos = hashPosition(i) + vec2(time * (1. + i));\n\t\t\n\t\tscreen = floor(mod(pos/res, 2.));\n\t\n\t\t// remap 0..1 to -1 to 1 to avoid branching in next line.\n\t\tvec2 dir = screen * 2. - 1.;\n\t\tvec2 finalPos = vec2(res * (vec2(1.) - screen) + dir * mod(pos, res));\n\t\t\n        int idx = int(i);\n\t\tmetaBalls[idx] = vec3(finalPos, abs(i));\n\t\tmetaBalls[idx].z = res.y / 100. * i * .5;\n\t\t\n\t\td = metaBalls[idx].z / distance(metaBalls[idx].xy , fragCoord.xy);\n\t\tc += pow(d, falloff);\n\t}\n\t\n\tfragColor = vec4(vec3(.0,c,.15), 1);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dB3Dc","date":"1399120041","viewed":2109,"name":"Simple Metaballs","username":"asalga","description":"simple metaballs","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["metaballs"],"hasliked":0,"parentid":"","parentname":""}}