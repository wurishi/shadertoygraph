{"ver":"0.1","info":{"id":"lX2Szd","date":"1710970654","viewed":86,"name":"fireworks !","username":"Moustave","description":"a shader I made a couple years ago","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["fireworks","pixelart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(float val){\n    return fract(sin(dot(vec2(val,1), vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n\n\nfloat distSqr(vec2 a,vec2 b, int type){\n    switch (type) {\n    case 0:\n        //euclidian\n        return((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n    case 1:\n        //manhattan\n        return pow(abs(a.x-b.x)+abs(a.y-b.y),2.);\n        break;\n    case 2:\n        //the other one\n        return pow(max(abs(a.x-b.x),abs(a.y-b.y)),2.);\n    }\n}\n\n\nfloat distSqr(vec2 a,vec2 b)\n{\n    return distSqr(a,b,0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec3 c3;\n    float pixelFactor = 4.;\n    vec2 pos = ( round(fragCoord.xy/pixelFactor)*pixelFactor / iResolution.xy );\n    \n    //pos = round(pos*iResolution.xy)/iResolution.xy;\n    float xfactor=iResolution.x/iResolution.y;\n    pos[0]*=xfactor;\n    \n    float x=pos[0];\n    float y=pos[1];\n    float size;\n    float expTime =0.06;\n    float ballSize = 10000.;\n    float expSize = 2.;\n    \n\n    expSize*= 0.01;\n\n    float period = 1.;\n    float tsp = float(int(iTime/period));\n    float prevTsp = float(int(iTime/period)-1);\n    float t = (mod(iTime,period))/period;\n\n    if(t<1.-expTime){\n        c3 = vec3(0.9,0.8,0.4)*(0.8+0.1*cos(iTime*2.));\n        size=1./ballSize;\n    }\n    else\n    {\n        c3 = vec3(0.9,0.8,0.6)*(0.8+0.1*cos(iTime*2.));\n        size=(expSize)*(1.-t)*(1./expTime);\n    }\n\n    vec2 ranPoint=vec2(0.2+0.6*noise(tsp)*xfactor,0.4+0.4*noise(tsp));\n    vec2 prevRanPoint=vec2(0.2+0.6*noise(prevTsp)*xfactor,0.4+0.4*noise(prevTsp));\n    vec2 pPos;\n    float angle;\n    float distP;\n    float dist2;\n\n    //SETTINGS\n    float pSize=0.0001;\n    float eSize=0.3;\n    const int numParticles=100;\n    float seedAdd=1.;\n    \n    \n    vec3 c2 = vec3(0.99,0.6,0.4)*(0.8+0.1*cos(iTime*2.));\n    for(int i=0; i<numParticles; ++i){\n        angle=6.29*noise(tsp+seedAdd*float(i));\n        distP=0.05+eSize*noise(noise(tsp)+seedAdd*float(i));\n        pPos = vec2((xfactor/2.-(prevRanPoint.x-xfactor/2.)*0.2)+(prevRanPoint.x-xfactor/2.)+t*distP*cos(angle),prevRanPoint.y+t*distP*sin(angle)-0.05*t);\n\n        if(distSqr(pPos,pos,1)<pSize){\n            dist2 += 1.-pow(t,10.);\n        }\n    }\n\n\n\n\n    ranPoint.y*=pow(t,0.3);\n    ranPoint.x=(xfactor/2.-(ranPoint.x-xfactor/2.)*0.2)+(ranPoint.x-xfactor/2.)*t;\n    float dist = step(distSqr(vec2(x,y),ranPoint),size);\n\n\n\n\n\n\n\n    vec3 color = c3*dist*pow((1.+t),1.5)+c2*dist2;\n\n\n\n    fragColor = vec4( color, 1.0 );\n\n}\n","name":"Image","description":"","type":"image"}]}