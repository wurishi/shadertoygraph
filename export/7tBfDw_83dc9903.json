{"ver":"0.1","info":{"id":"7tBfDw","date":"1670171386","viewed":42,"name":"moving colormaps","username":"ChGrenier","description":"moving colormaps decomposed by RGB channel","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colormap","plot","channel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14\n\nfloat courbe(float a, float b, float c, float d, float x){\n    return a + b*cos(2.*PI * (d + c*x));\n}\n\n\n\nfloat plot(float f_x, float y, float thickness){\n    float val = f_x - y;\n    \n    bool cond = val > -thickness && val < thickness;\n    float col = cond ? 1. : 0.;\n    \n    return col;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float a = 0.5;\n    float b = 0.5;\n    float c = 1.0;\n    vec3 d = vec3(0., 0.33, 0.67) + vec3(0.13, -0.09, 0.24)*iTime;\n    \n    float R = courbe(a, b, c, d.x, uv.x);\n    float G = courbe(a, b, c, d.y, uv.x);\n    float B = courbe(a, b, c, d.z, uv.x);\n    \n\n    // Output to screen\n    if(uv.y>.75){\n        fragColor = vec4(R, 0., 0., 1.0);\n        fragColor += 0.6*plot(R, 4.*(uv.y-.75), 0.02);\n    }\n    else if(uv.y>.5){\n        fragColor = vec4(0., G, 0., 1.0);\n        fragColor += 0.6*plot(G, 4.*(uv.y-.5), 0.02);\n    }\n    else if(uv.y>.25){\n        fragColor = vec4(0., 0., B, 1.0);\n        fragColor += 0.6*plot(B, 4.*(uv.y-.25), 0.02);\n    }\n    else{\n        fragColor = vec4(R, G, B, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}