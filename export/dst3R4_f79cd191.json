{"ver":"0.1","info":{"id":"dst3R4","date":"1677059056","viewed":110,"name":"Square Stitch","username":"jeffpeck","description":"Spirals of squares form a pattern.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["pattern","squares","spirals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14\n#define ITERATIONS 60\n\nprecision mediump float;\n\nuniform vec2 u_resolution;\n\n// https://iquilezles.org/articles/distfunctions2d/\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n// https://thebookofshaders.com/08/\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat segSquare( in vec2 p) {\n    float d = 1.;\n    d = min(d, sdSegment(p, vec2(-.5, -.5), vec2(.5, -.5)));\n    d = min(d, sdSegment(p, vec2(.5, -.5), vec2(.5, .5)));\n    d = min(d, sdSegment(p, vec2(.5, .5), vec2(-.5, .5)));\n    d = min(d, sdSegment(p, vec2(-.5, .5), vec2(-.5, -.5)));\n\n    return d;\n}\n\nfloat spiralSquare( in vec2 p, in float angleInc) {\n    float angle = 0.;\n    float scale = 1.;\n    mat2 m;\n    float d = 1.;\n    \n    for (int i = 0; i < ITERATIONS; i++) {\n        m = rotate2d(angle);\n        d = min(d, segSquare(m * p * scale));\n        angle += angleInc;\n        scale *= (1. + tan(abs(angleInc)));\n    }\n\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy / iResolution.y;\n\n    float angleInc = PI / 70.;\n    float numRows = 4.;\n\n    float evenColumns = sign(mod(floor(st.y * numRows), 2.));\n    float squareDirection = sign(mod(floor(st.x * numRows) + evenColumns, 2.) - .5);\n    float d = spiralSquare(\n        numRows * (mod(st, 1./numRows) - .5/numRows),\n        squareDirection * angleInc * (2. * sin(iTime * .3) + 2.)\n    );\n\n    vec3 black = vec3(0.);\n    vec3 white = vec3(1.);\n    vec3 color = mix(white, black, smoothstep(0., .006 * numRows, d));\n\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}