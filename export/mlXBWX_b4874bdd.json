{"ver":"0.1","info":{"id":"mlXBWX","date":"1700049376","viewed":46,"name":"VHS distort","username":"kusma","description":"Much distort.\n\nThis doesn't work right here on Shadertoy, because it uses textureLod, but videos don't have mipmaps. Oh well.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["distort"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 vhs_noise(vec2 uv, float time, float colorize)\n{\n    vec2 dist = uv;\n   \n    float tear_offset = uv.y + pow(uv.x - 0.5, 2.) * (uv.y - 0.5) * 0.5;\n    float tear = tan(tear_offset - time);\n\n#if 0\n    tear += tan(tear_offset - time * 0.2 + 0.2) * 0.5;\n    tear += tan(tear_offset - time * 0.2) * 0.75;\n    tear += tan(tear_offset - time * 0.2 + PI / 2.) * 0.75;\n#endif\n\n    float hnoise = texture(iChannel1, uv.yy * 0.5 + time * 10.).r * 0.1;\n    hnoise = (hnoise - 0.5) * 0.75;\n    hnoise = hnoise * 0.5 + hnoise * min(abs(tear) * 0.1, 1.);\n   \n    tear += hnoise * 2.5 * tear;\n    dist.x += tear / 40.0;\n   \n    float noise_amt = abs(tear) * 0.1;\n    noise_amt = clamp(noise_amt + 0.2, 0.0, 1.0);\n\n    float blur = max(abs(tear) - 0.5, 0.) * 2.0;\n\n    vec3 c = textureLod(iChannel0, dist, 1.0 + blur).rgb;\n    float noise = (texture(iChannel1, uv * 2. + time * 8.).r - 0.05) * 6. * hnoise * hnoise;\n\n    float sep = 0.01 + noise * 0.005;\n    sep = 0.02;\n    sep += tear * 0.001;\n\n    vec3 l = vec3(0.0);\n    vec3 r = vec3(0.0);\n    const int iters = 4;\n    for (int i = 0; i < iters; ++i) {\n        float lod = blur + 4.0 + float(i) * 0.5;\n        l += textureLod(iChannel0, vec2(dist.x - sep, uv.y), lod).rgb;\n        r += textureLod(iChannel0, vec2(dist.x + sep, uv.y), lod).rgb;\n    }\n\n    float scale = 1.0 / float(iters - 1);\n    l *= scale;\n    r *= scale;\n\n    // smudge colors\n    c = c.ggg + vec3(l.r - l.g, 0, r.b - r.g) * colorize;\n\n    c = mix(c, vec3(noise), noise_amt);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(vhs_noise(uv, iTime, 3.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}