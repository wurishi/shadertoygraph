{"ver":"0.1","info":{"id":"tsBBz3","date":"1590498149","viewed":354,"name":"Hello Gradient - TBOS 2.0","username":"stungeye","description":"Chapter 2 - The Book of Shaders - Hello World\n\n","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["simple","gradient","tbos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Working Through The Book of Shaders\n// Chapter 02 - Hello World - https://thebookofshaders.com/02/\n// 2.0 Hello Gradient\n\n// FUNCTION: gradient\n//\n// Color gradient based on a 2D coordinate.\n// Takes a vec2 (x, y) coordinate. Returns a vec4 (r, g, b, a) color.\nvec4 gradient(vec2 coord) {\n    // Normalized pixel coordinates (from 0 to 1) using the image \n    // dimensions pulled from vec2 iResolution.\n    vec2 uv = coord / iResolution.xy;\n  \n    // Return vec4 (r, g, b, a) with red gradated by the pixel's x coord.\n    // Green, blue, and alpha are kept constant.\n\treturn vec4(uv.x, 0.364, 0.499, 1.0);\n    \n    // Or, involve both the x and y axis:\n    // return vec4(uv.x, uv.y, 0.499, 1.0);\n}\n\n// FUNCTION: mainImage\n//\n// Function is automatically executed. Here it assigns a color to every pixel.\nvoid mainImage(\n    \t\t\tout vec4 fragColor, // Output (r, g, b, a) pixel color \n\t\t\t\tin vec2 fragCoord   // Input (x, y) image coordinate\n\t\t\t  ) {\n    \n    // Set the color of each pixel to a gradient based its coordinates.\n    fragColor = gradient(fragCoord);\n}\n\n\n// Stung Eye 2020 - Unlicense - https://unlicense.org\n// This is free and unencumbered software released into the public domain.","name":"Image","description":"","type":"image"}]}