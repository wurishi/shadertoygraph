{"ver":"0.1","info":{"id":"Xl2cRc","date":"1509567297","viewed":77,"name":"Tutorial 4: Struct y funciones","username":"aaecheve","description":"Tutorial 4 CC7615","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","cc7615"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Podemos definir estructuras para modelar tiops de datos más complejos\n\nstruct Circle {\n  vec2 position;\n  float radius;\n  vec4 color;\n};\n    \n//Es posible definir funciones auxiliares también\nbool testCircle(Circle c, vec2 pixelCoords)\n{\n  return distance(c.position,pixelCoords) < c.radius;\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tCircle c1 = Circle(vec2(0.5,0.5), 0.2, vec4(1.0,0.0,0.0,1.0)); \n    fragColor = vec4(1.0);  \n    if(testCircle(c1, uv))\n        fragColor = c1.color;\n}","name":"Image","description":"","type":"image"}]}