{"ver":"0.1","info":{"id":"DldGzX","date":"1682862304","viewed":184,"name":"funky rings","username":"vanilin","description":"inspired by https://www.shadertoy.com/view/ms3XWl","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["glow","loop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \"Synergy\" by @kishimisu (2023) - https://www.shadertoy.com/view/ms3XWl \n\n   A 31-seconds seamless loop directed by trigonometry\n*/\n\nvoid mainImage(out vec4 O, vec2 F) {\n    vec2   g  = iResolution.xy,\n           o  = (F+F-g)/g.y/.7; \n    float  l  = 0., \n           f  = iTime*.05-2.;\n    O = vec4(0.0);\n    \n    //a bit messy but yeah :)\n    for (O.xyz = vec3(0.2, 0.05, 0.15); l < 55.; l++) {\n    \n        float group = mod(l, 10.) / 10.;\n        float transition = fract(-iTime * 0.2 + group); \n        float depth = pow(transition, 0.5);\n        vec2 offset = vec2(cos(l*f * 0.2), sin(l+f));\n        float fade = smoothstep(0.5, 0.3, abs(0.5 - transition));\n        vec2 p = o * (mod(l, 5.) + 1.) * depth + offset;\n        float s = .08 + (1.0 - transition) * 0.4 * step(1., 1. / abs(mod(l, 40.)));\n        float a = mod(atan(p.y, p.x) + iTime * (step(20., l) - 0.5), 3.14);\n        float d = length(p) + 0.005 * sin(10. * a + iTime + l);\n        O += clamp(fade * pow(.005, 1.0 - 0.2 * (sin(iTime + l) * 0.5 + 0.5)) * transition/abs(d - s)*(cos(l+ length(o) * 3. +vec4(0,1,2,0))+1.), 0.0, 1.0);\n       \n    }\n}","name":"Image","description":"","type":"image"}]}