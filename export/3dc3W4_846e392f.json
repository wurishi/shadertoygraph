{"ver":"0.1","info":{"id":"3dc3W4","date":"1570222394","viewed":448,"name":"Larva","username":"asis5528","description":"Cartoon...Replace AA 1 to AA 2 @ line 1 for 2x antialiasing...","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["sdf","cartoon","larva"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//By Sergio\n#define AA 1\nfloat sdElipsoid(vec3 pos,vec3 rad){\n\tfloat k0 = length(pos/rad);\n    float k1 = length(pos/rad/rad);\n\treturn k0*(k0-1.0)/k1;\n}\n\nfloat sdRoundBox( vec3 p, vec3 b, float r )\n{\n  vec3 d = abs(p) - b;\n  return length(max(d,0.0)) - r\n         + min(max(d.x,max(d.y,d.z)),0.0); \n}\n\nfloat sdCappedCylinder( vec3 p, float h, float r )\n{\n  vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(h,r);\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n    vec3 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - r;\n}\nfloat sdTriPrism( vec3 p, vec2 h )\n{\n    vec3 q = abs(p);\n    return max(q.z-h.y,max(q.x*0.866025+p.y*0.5,-p.y)-h.x*0.5);\n}\n\nfloat det( vec2 a, vec2 b ) { return a.x*b.y-b.x*a.y; }\nvec3 getClosest( vec2 b0, vec2 b1, vec2 b2 ) \n{\n    float a =     det(b0,b2);\n    float b = 2.0*det(b1,b0);\n    float d = 2.0*det(b2,b1);\n    float f = b*d - a*a;\n    vec2  d21 = b2-b1;\n    vec2  d10 = b1-b0;\n    vec2  d20 = b2-b0;\n    vec2  gf = 2.0*(b*d21+d*d10+a*d20); gf = vec2(gf.y,-gf.x);\n    vec2  pp = -f*gf/dot(gf,gf);\n    vec2  d0p = b0-pp;\n    float ap = det(d0p,d20);\n    float bp = 2.0*det(d10,d0p);\n    float t = clamp( (ap+bp)/(2.0*a+b+d), 0.0 ,1.0 );\n    return vec3( mix(mix(b0,b1,t), mix(b1,b2,t),t), t );\n}\n\nvec4 sdBezier( vec3 a, vec3 b, vec3 c, vec3 p )\n{\n\tvec3 w = normalize( cross( c-b, a-b ) );\n\tvec3 u = normalize( c-b );\n\tvec3 v =          ( cross( w, u ) );\n\n\tvec2 a2 = vec2( dot(a-b,u), dot(a-b,v) );\n\tvec2 b2 = vec2( 0.0 );\n\tvec2 c2 = vec2( dot(c-b,u), dot(c-b,v) );\n\tvec3 p3 = vec3( dot(p-b,u), dot(p-b,v), dot(p-b,w) );\n\n\tvec3 cp = getClosest( a2-p3.xy, b2-p3.xy, c2-p3.xy );\n\n\treturn vec4( sqrt(dot(cp.xy,cp.xy)+p3.z*p3.z), cp.z, length(cp.xy), p3.z );\n}\n\n\nfloat sdSphere(vec3 pos,float rad){\n\treturn length(pos)-rad;\n}\nfloat smin( float a, float b, float k )\n{\n    float h = max( k-abs(a-b), 0.0 )/k;\n    return min( a, b ) - h*h*k*(1.0/4.0);\n}\n\nfloat smax( float d1, float d2, float k ) {\n    float h = clamp( 0.5 - 0.5*(d2+d1)/k, 0.0, 1.0 );\n    return mix( d2, -d1, h ) + k*h*(1.0-h); }\n\nfloat sdRoundedCylinder( vec3 p, float ra, float rb, float h )\n{\n    vec2 d = vec2( length(p.xz)-2.0*ra+rb, abs(p.y) - h );\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0)) - rb;\n}\nvec2 smallLarva(vec3 p){\n\n    float rad = 0.25+abs(p.y/7.+0.01);\n    vec3 q =p;\n    \n    \n    //BODY\n\tfloat d1 = sdElipsoid(q,vec3(rad,0.4,rad-0.03));\n    float m;\n    \n    float k;\n \n\n \n    //HEAD\n    \n    vec3 hp = p;\n    \n    hp.y+=sin(hp.x*34.)*0.01;\n    hp.y+=sin((hp.x+0.95)*5.)*0.16;\n  \n    //hp.x-=hp.z*hp.z*k;\n    float head = sdRoundBox(hp-vec3(0.0,0.15,0.08),vec3(0.15,0.005,0.07),0.001);\n    d1=smin(head,d1,0.1);\n    float at = sdElipsoid(p-vec3(0.0,0.4,0.08),vec3(0.009,0.1,0.009));\n    at = min(at,sdElipsoid(p-vec3(0.1,0.34,0.08),vec3(0.009,0.1,0.009)));\n    at = min(at,sdElipsoid(p-vec3(-0.1,0.34,0.08),vec3(0.009,0.1,0.009)));\n    d1 = smin(d1,at,0.01);\n    \n    //MOUTH\n    vec3 cp = p;\n    float a;\n    a= 1.5708;\n    cp.zy*=mat2(cos(a),sin(a),-sin(a),cos(a));\n    cp.x*=0.6;\n    cp.z*=0.8;\n \tfloat c = sdRoundedCylinder(cp-vec3(0,-0.1,0.1),0.02,0.01,0.2);\n    cp.x*=0.5;\n    float c1 = sdRoundedCylinder(cp-vec3(0,-0.1,0.14),0.02,0.4,0.2);\n    \n    c = max(-c1,c);\n   \n    if(-c>d1){\n    m = 3.5;\n    }\n    else{\n    m =1.5;\n    }\n    d1 = smax(c,d1,0.007);\n   \n    //EYE\n    float k1 = mix(1.,1.,(sign(q.x)+1.)/2.);\n    q.x = abs(q.x);\n    float eye = sdElipsoid(q-vec3(0.08,0.2,0.17),vec3(0.084,0.074,0.064)*k1);\n    /*\n    q = qc;\n    q-=vec3(0.00,0.17,0.162);\n  \n    q.x=abs(q.x);\n    q.y-=pow(q.x-0.08,2.)*1.2;\n    .x-=0.08;\n    float eyecap = sdRoundedCylinder(q,0.04,0.02,0.001);\n    float em = 2.5;\n    if(eyecap<eye) em = 1.5;\n   \n    eye = smin(eye,eyecap,0.02); */\n    if(eye<d1){\n    \tm = 2.5;\n    }\n   \n    d1 = smin(eye,d1,0.01);\n    \n    //TEETH\n    vec3 tp = p;\n   \ttp.y-=tp.x*tp.x*12.2;\n    tp.x=abs(tp.x);\n    float teeth = sdRoundBox(tp-vec3(0.0,0.12,0.21),vec3(0.02,0.005,0.002)/1.4,0.01);\n    tp = p;\n    tp.x+=0.035;\n   \ttp.y-=tp.x*tp.x*12.2;\n    tp.x=abs(tp.x+0.01);\n    teeth = min(sdRoundBox(tp-vec3(-0.0,0.12,0.21),vec3(0.02,0.005,0.002)/1.4,0.01),teeth);\n    tp = p;\n    tp.x-=0.035;\n   \ttp.y-=tp.x*tp.x*12.2;\n    teeth = min(sdRoundBox(tp-vec3(-0.0,0.12,0.21),vec3(0.02,0.005,0.002)/1.4,0.01),teeth);\n    if(teeth<d1){\n    m = 4.5;\n    }\n    \n    d1 =min(d1,teeth);\n    \n    //TONGUE\n    vec3 top = p;\n   \ttop -=vec3(0.0,-0.035,0.3);\n    \n    float tx = 0.06;\n    tx+=(p.z+0.2);\n    tx/=12.2;\n    a=-1.1;\n    top.yz=mat2(cos(a),sin(a),-sin(a),cos(a))*top.yz;\n    top.y+=top.z*top.z*1.;\n\n    float tongue = sdElipsoid(top,vec3(tx,0.02,0.15));\n    float t2 = sdElipsoid(p-vec3(0.,0.07,0.2),vec3(0.04,0.02,0.04));\n    tongue = smin(tongue,t2,0.03);\n    if(tongue<d1) m = 11.5;\n    d1=min(tongue,d1);\n    \n\n    \n    \n    return vec2(d1,m);\n\n\n\n\n}\n\nvec2 BigLarva(vec3 p){\n\t\n    vec3 mp = p;\n    p.x-=0.7;\n    vec3 gp = p;\n    float m = 5.5;\n    float rad = 0.35-((p.y)/10.);\n    vec3 q =p-vec3(0.0,0.3,0.0);\n\tfloat d1 = sdElipsoid(q,vec3(rad,0.7,rad-0.03));\n    float d2 = sdSphere(q-vec3(0.0,0.5,-0.1),0.17);\n    d1 =smin(d2,d1,0.2);\n   \tfloat a =0.27;\n    q-=vec3(-0.02,0.4,0.17);\n \tq.yz=mat2(cos(a),sin(a),-sin(a),cos(a))*q.yz;\n\n    \n    //HEAD\n    \n    vec3 hp = p;\n    hp.z+=0.07;\n    hp.y-=0.66;\n    hp.y+=sin(hp.x*24.-0.4)*0.03;\n    hp.y+=sin((hp.x+0.95)*5.)*0.16;\n  \tfloat head = sdRoundBox(hp-vec3(0.0,0.15,0.08),vec3(0.15,0.005,0.07),0.001);\n    d1=smin(head,d1,0.1);\n    \n    \n    \n    //HOLE\n    a = -0.2;\n    p.y-=0.44;\n    p.z-=0.224;\n    p.yz=mat2(sin(a),cos(a),-cos(a),sin(a))*p.yz;\n    p.x=abs(p.x);\n    p.x-=0.07;\n    float hole = sdRoundedCylinder(p,0.024,0.02,0.02);\n    \n    \n    \n    //EYE\n    float eye = sdElipsoid(q-vec3(0.07,0.1,0.01),vec3(0.075,0.094,0.06));\n    eye = min(eye,sdElipsoid(q-vec3(-0.07,0.1,0.),vec3(0.075,0.094,0.06)));\n    if(eye<d1){\n    m = 6.5;\n    }\n    d1=smin(eye,d1,0.04);\n    d1=min(d1,hole);\n    p.x-=0.01;\n    float h2 = sdCappedCylinder(p,0.028,0.156);\n    if(-h2>d1){\n    m = 3.5;\n    }\n   \n   \td1=max(-h2,d1);\n    \n    //MOUTH\n    mp-=vec3(0.7,0.2,0.3);\n    a = 3.14159;\n    mp.xy=mat2(cos(a),sin(a),-sin(a),cos(a))*mp.xy;\n    float mouth = sdTriPrism(mp,vec2(0.09,0.22));\n    \n    if(-mouth>d1){\n    m = 3.5;\n    }\n    \n    \n    \n    d1=smax(mouth,d1,0.01);\n    float cx = 0.03+mp.y*mp.y+0.1;\n    cx/=7.4;\n    a = -0.55;\n    mp.x-=0.0;\n    mp.y+=0.01;\n    mp.z+=0.015;\n   \n    mp.xy=mat2(cos(a),sin(a),-sin(a),cos(a))*mp.xy;\n    \n    float cm = sdElipsoid(mp-vec3(0.05,0.0,0.0),vec3(cx,0.08,0.02));\n    a = 0.55*2.;\n    mp.xy=mat2(cos(a),sin(a),-sin(a),cos(a))*mp.xy;\n    cm = smin(cm,sdElipsoid(mp-vec3(-0.05,0.0,0.0),vec3(cx,0.08,0.02)),0.05);\n  \n    d1=smin(cm,d1,0.01);\n    \n    //HEAD ANTENNA\n  \ta=2.3;\n\n    gp -= vec3(-0.1,0.3,-0.1);\n  \tvec4 b = sdBezier( vec3(0.0,0.6,-0.0), vec3(-0.1,0.7,-0.1), vec3(-0.2,0.5,-0.15), gp );\n    float at = b.x;\n    at -= 0.03 - 0.025*b.y;\n    at=smin(at,sdSphere(gp-vec3(-0.2,0.5,-0.15),0.03),0.01);\n    d1=smin(at,d1,0.03);\n    return vec2(d1,m);\n\n}\nvec2 rock(vec3 p){\n    float x = p.x-0.7-1.4;\n    float m = 7.5;\n    vec3 q = p;\n\tp.y+=x*x*0.1;\n    //SMALL ROCK\n\tfloat roc = sdRoundBox(p-vec3(1.2+1.4,-0.35,0.1),vec3(0.2,0.04,0.07)*3.,0.2);\n    //BIG ROCK\n    float ro = sdRoundBox(vec3(q.x+0.4,-0.3+q.y+sin(q.x*5.)*(0.01+(q.x*q.z)/53.),q.z)-vec3(-0.8,-0.1,-2.8),vec3(0.2,0.04,0.07)*10.,0.2)-0.5;\n    \n    float roc1 = sdElipsoid(q-vec3(-0.5,-0.6,0.2),vec3(0.2,0.08,0.09)*4.5);\n    float dis = texture( iChannel3, 0.4*p.xy ).x+texture( iChannel2, 7.0*p.zx).x*1.5;\n    dis += texture( iChannel3, 0.4*p.zy ).x+texture( iChannel2, 7.0*p.zy ).x*1.5;\n \n    roc -= 0.005*dis*0.2;\n    ro -= 0.005*dis*0.03;\n    if(ro<roc) m = 9.5;\n    roc=min(ro,roc);\n    if(roc1<roc) m = 8.5;\n   \troc1=min(roc,roc1);\n    return vec2(roc1,m);\n\n}\nvec2 wheat(vec3 p){\n\tvec3 q =p;\n\n    q-=vec3(2.3,-0.8,-0.3);\n    \n    vec4 b = sdBezier( vec3(0.0,0.6,-0.0), vec3(-0.0,1.3,0.0), vec3(-0.7/1.1,1.9,-0.0)/1.05, q )+0.001;\n    float at = b.x;\n    at -= 0.03 - 0.025*b.y;\n    \n    q = p-vec3(1.8,0.85,-0.3);\n   \t\n    float a =(3.14159-1.4);\n \n    q.xy=mat2(cos(a),sin(a),-sin(a),cos(a))*q.xy;\n    q.x-=q.y*q.y*1.8;\n    \n    float off = (0.005+(q.y+0.1)/15.)*0.4;\n \n    vec3 r  = q;\n    float wh = sdElipsoid(q,vec3(off,0.025,off)*3.);\n    q=p-vec3(1.87,0.9,-0.3);\n   \n    a = -a-1.14;\n    q.xy=mat2(cos(a),sin(a),-sin(a),cos(a))*q.xy;\n    q.x+=q.y*q.y*1.8;\n    off = (0.005+(q.y+0.1)/15.)*0.4;\n  \n    vec3 l  = q;\n    wh = min(wh,sdElipsoid(q,vec3(off,0.025,off)*3.));\n    \n    \n    \n    wh = min(wh,sdElipsoid(r+vec3(0.05,0.05,0.0),vec3(off,0.025,off)*2.5));\n    \n    wh = min(wh,sdElipsoid(l+vec3(-0.05,0.05,0.0),vec3(off,0.025,off)*2.5));\n    wh = min(wh,sdElipsoid(r+vec3(0.05,0.05,0.0)*1.8,vec3(off,0.025,off)*2.3));\n    \n    wh = min(wh,sdElipsoid(l+vec3(-0.05,0.03,0.0)*1.8,vec3(off,0.025,off)*2.3));\n    \n    at = min(wh,at);\n    return vec2(at,10.5);;\n\n\n}\n\nvec2 map(vec3 p){\n    \n    float ground = p.y+0.35;\n    float m  = 0.5;\n    vec2 r = rock(p);\n    if(r.x<ground) m = r.y;\n    ground = min(ground ,r.x);\n    vec2 w = wheat(p);\n    if(w.x<ground) m = w.y;\n    ground = min(w.x,ground);\n    vec2 slarva = smallLarva(p);\n    vec2 blarva = BigLarva(p);\n    if(blarva.x<slarva.x){\n        slarva = blarva;\n    }\n \n    return ground<slarva.x ? vec2(ground,m):slarva; \n}\n\nvec2 ray(vec3 ro,vec3 rd){\n\n\tfloat t;\n    vec2 h;\n    vec3 p;\n    for(int i=0;i<200;i++){\n    \tp = ro+rd*t;\n        h= map(p);\n        if(h.x<0.0001) break;\n        t+=h.x;\n        if(t>20.) break;\n    \n    }\n    if(t>20.) t = -1.;\n    return vec2(t,h.y);\n\n\n}\n\nfloat softshadow( in vec3 ro, in vec3 rd, float mint, float maxt, float k )\n{\n    float res = 1.0;\n    float ph = 1e20;\n    for( float t=mint; t<maxt; )\n    {\n        float h = map(ro + rd*t).x;\n        if( h<0.001 )\n            return 0.0;\n        float y = h*h/(2.0*ph);\n        float d = sqrt(h*h-y*y);\n        res = min( res, k*d/max(0.0,t-y) );\n        ph = h;\n        t += h;\n    }\n    return res;\n}\n\nfloat calcOcclusion( in vec3 pos, in vec3 nor )\n{\n\tfloat occ = 0.0;\n    float sca = 1.0;\n    for( int i=0; i<5; i++ )\n    {\n        float h = 0.01 + 0.11*float(i)/4.0;\n        vec3 opos = pos + h*nor;\n        float d = map( opos ).x;\n        occ += (h-d)*sca;\n        sca *= 0.95;\n        \n    }\n    return clamp( 1.0 - 2.0*occ, 0.0, 1.0 );\n}\n\nvec3 calcNorm(vec3 p){\n\tconst float eps = 0.0001;\n    vec4 n = vec4(0.0);\n    for( int i=min(iFrame,0); i<4; i++ )\n    {\n        vec4 s = vec4(p, 0.0);\n        s[i] += eps;\n        n[i] = map(s.xyz).x;\n    }\n    return normalize(n.xyz-n.w);\n}\n\nvec3 render(vec3 ro,vec3 rd){\n\tvec2 t = ray(ro,rd);\n    vec3 sk=vec3(1.-rd.y,1.-rd.y,1.);\n   \n    vec3 col = sk;\n    \n    \n    if(t.x>0.0){\n        \n        vec3 p = ro+rd*t.x;\n        vec3 n = calcNorm(p);\n        \n        //float an = iTime;\n        \n        vec3 sun = vec3(-0.6,0.7,-0.4);\n        vec3 sky = vec3(0.0,1.,0.0);\n       \n        float occ = calcOcclusion(p,n);\n        float dif = dot(n,sun);\n        \n        float skydif = clamp(0.5+0.5*dot(n,vec3(0.0,1.0,0.0)),0.0,1.0);\n        \n        float grodif = clamp(dot(n,vec3(0.0,-1.0,0.0)),0.0,1.0);\n        //TONGUE\n        if(t.y>11.){\n             \n           vec3 r = reflect(-sun,n);\n           vec3 spec = pow(max(0.0,dot(r,-rd)),28.)*vec3(1.);\n           col = vec3(1.,0.6,0.7)*occ*0.8;\n           col += dot(rd+sun,n)*0.1;\n           col+=sk*skydif*0.1*(1.+dot(rd+sun,n));\n           col+=vec3(0.9,0.6,0.5)*grodif;\n           col+=spec;\n        \n        }\n        //WHEAT\n        else if(t.y>10.){\n          \n           col = vec3(1.,0.8,0.)*occ*0.9*(clamp(dif/1.7,0.,1.)+1.);\n           \n           col/=1.;\n            \n           col+=(1.+dot(rd,n)*2.)*0.2;\n           col+=sk*skydif*0.1*(1.+dot(rd+sun,n));\n           col+=vec3(0.9,0.6,0.5)*grodif;\n           col*=1.5+dot(rd,n);\n       \n         \n        \n        \n        }\n        \n        //BIG ROCK\n        else if(t.y>9.){\n        \tcol = vec3(0.8,0.4,0.15);\n            vec3 r = reflect(-sun,n);\n           \tvec3 spec = pow(max(0.0,dot(r,-rd)),28.)*vec3(1.);\n            \n          \tfloat shad = softshadow(p+n*0.001,sun,0.001,2.,64.);\n            col = texture(iChannel3,p.xy).rgb*vec3(0.8,0.4,0.15)*occ*0.9*(clamp(dif/1.7,0.,1.)+1.);\n            col*=1.+shad/3.;\n           \tcol/=1.;\n            col/=1.1;\n            col += 0.2+dot(rd+sun,n)*0.2;\n            col*=1.2;\n           \tcol+=sk*skydif*0.1;\n            col+=vec3(0.9,0.6,0.5)*grodif;\n         \n        \n        \n        }\n        //SMALL ROCK\n        \n        else if(t.y>8.){\n        \tcol = vec3(0.8,0.4,0.15);\n            vec3 r = reflect(-sun,n);\n           \tvec3 spec = pow(max(0.0,dot(r,-rd)),28.)*vec3(1.);\n            \n         \n            col =vec3(0.5)*occ*0.9*(clamp(dif/1.7,0.,1.)+1.);\n           \n            col/=1.1;\n         \n           \tcol+=(1.+dot(rd,n)*2.)*0.2;\n            col+=sk*skydif*0.1*(1.+dot(rd+sun,n));\n            col+=vec3(0.9,0.6,0.5)*grodif;\n            col+=spec*0.2;\n        \n        }\n        //Shiny ROCK\n        else if (t.y>7.){\n        \tcol = vec3(0.8,0.4,0.15);\n            vec3 r = reflect(-sun,n);\n           \tvec3 spec = pow(max(0.0,dot(r,-rd)),28.)*vec3(1.);\n            \n         \n            col = vec3(0.8,0.4,0.15)*occ*0.9*(clamp(dif/1.7,0.,1.)+1.);\n           \n            col/=1.1;\n         \n           \tcol+=(1.+dot(rd,n)*2.)*0.2;\n            col+=sk*skydif*0.1*(1.+dot(rd+sun,n));\n            col+=vec3(0.9,0.6,0.5)*grodif;\n            col+=spec;\n        \n        }\n        //BIG LARVA'S EYE\n        \n        else if(t.y>6.){\n            p.x-=0.676;\n            float lid =step(length(vec2(abs(p.x),p.y)-vec2(0.052,0.8)),0.03);;\n            float lid1 =step(length(vec2(abs(p.x),p.y)-vec2(0.052,0.8)),0.047);;\n            p.x-=0.026;\n           \tp.y-=0.02;\n            float spec =step(length(vec2((p.x),p.y)-(vec2(0.052,0.8))),0.007);;\n            spec +=step(length(vec2((p.x),p.y)-(vec2(-0.052,0.8))),0.007);;\n        \tvec3 d = vec3(0.6);\n         \n            vec3 ref = reflect(rd,n);\n            float fac = ( lid1+lid);\n            col = d;\n            col-=clamp(lid,0.,1.);\n            col = clamp(lid1-lid,0.,1.)*vec3(0.8,.55,0.)*0.6+col*(1.-(lid1-lid));\n            col+=texture(iChannel0,ref).xyz*fac*0.35;\n            col = clamp(col,vec3(0.),vec3(1.));\n            col += dot(-rd*1.2,n)/2.1;\n            col += dot(rd+sun,n)*0.6;\n            col+=spec/1.5;\n            \n            col*=1.4;\n        \n        \n        }\n        \n        //BIG LARVA'S BODY\n        else if(t.y>5.){\n            vec3 mat = vec3(smoothstep(0.16,0.07,p.y)-smoothstep(-0.05,-0.1,p.y));\n            mat += vec3(smoothstep(-0.15,-0.2,p.y)-smoothstep(-0.25,-0.3,p.y));\n            vec2 sp = p.xy;\n            sp -=vec2(0.72,0.41);\n            sp.x=abs(sp.x);\n            mat+=vec3(smoothstep(0.1,0.02,length(sp-vec2(0.17,0.0))))/1.3;\n           \n            col = vec3(1.,0.8,0.)*occ*0.9*(clamp(dif/1.7,0.,1.)+1.);\n           \n            col/=1.1;\n          \n            col=mix(col,vec3(0.88,0.35,0.01)/1.2,clamp(mat.x,0.,1.));\n\n           \tcol+=(1.+dot(rd,n)*2.)*0.2;\n            col+=sk*skydif*0.1*(1.+dot(rd+sun,n));\n            col+=vec3(0.9,0.6,0.5)*grodif;\n     \n         \n        \n        \n        }\n        \n        \n        //SMALL LARVA'S TEETH\n        else if(t.y>4.){\n        \tcol = vec3(1.);\n       \t \tcol += dot(-rd*1.2,n)/2.1;\n        \tcol += dot(rd+sun,n)*0.6;\n            \n        }\n        else if(t.y>3.0){\n            \n        \tcol = vec3(0.0);\n        }\n        \n        //SMALL LARVA'S EYE\n        else if(t.y>2.0){\n            float lid =step(length(vec2(abs(p.x),p.y)-vec2(0.08,0.22)),0.03);;\n            float lid1 =step(length(vec2(abs(p.x),p.y)-vec2(0.08,0.225)),0.047);;\n             \n            float spec =step(length(vec2((p.x),p.y)-(vec2(0.1,0.245))),0.003);;\n            spec +=step(length(vec2((p.x),p.y)-(vec2(-0.05,0.245))),0.003);;\n        \tvec3 d = vec3(0.6);\n             \n            vec3 ref = reflect(rd,n);\n            float fac = ( lid1+lid);\n            col = d;\n            col-=clamp(lid,0.,1.);\n            col = clamp(lid1-lid,0.,1.)*vec3(1.,0.,0.)*0.6+col*(1.-(lid1-lid));\n            col+=texture(iChannel0,ref).xyz*fac*0.35;\n            col = clamp(col,vec3(0.),vec3(1.));\n            col += dot(-rd*1.2,n)/2.1;\n            col += dot(rd+sun,n)*0.6;\n            col+=spec/1.5;\n            \n            col*=1.4;\n            //col+=lid1*vec3(1.,0.,0.);\n            \n        }\n        \n        //SMALL LARVA BODY\n        else if(t.y>1.0){\n            \n            vec3 r = reflect(-sun,n);\n           \tvec3 spec = pow(max(0.0,dot(r,-rd)),28.)*vec3(1.);\n            vec3 mat = vec3(smoothstep(0.1,0.05,p.y)-smoothstep(-0.05,-0.1,p.y));\n            mat += vec3(smoothstep(-0.15,-0.2,p.y)-smoothstep(-0.25,-0.3,p.y));\n           \n         \n            col = vec3(1.,0.,0.)*occ*0.9;\n            \n            col=mix(col,vec3(1.,0.75,0.01)/1.2,clamp(mat.x,0.,1.));\n  \n            col += dot(rd+sun,n)*0.5;\n            col+=sk*skydif*0.5;\n            col+=vec3(0.9,0.6,0.5)*grodif;\n            col+=spec;\n          \n        \n       \n            \n            \n        \n        }\n        \t//GROUND\n           else if(t.y>0.0){\n            \tfloat shad = softshadow(p+n*0.001,sun,0.001,2.,64.);\n               col = vec3(0.7,0.5,0.3)*0.6*shad;\n               col += dot(rd+sun,n);\n               col+=sk*skydif*0.1;\n             \n          \n           }\n        \n    \n    }\n\n\n\n\treturn col;\n\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    #if AA<2\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n   \n\t\t\tfloat an_x = 10.*-iMouse.x/iResolution.x;\n   \t\t\tfloat an_y = 10.*-iMouse.y/iResolution.y;\n   \t\t\t//an_x=0.;\n   \t\t\tan_x+=sin(iTime/20.)/5.-0.45;\n    \t\tvec3 ta = vec3(0.7,0.7,0.2);\n    \t\tfloat off =2.2;\n     \t\tvec3 ro = ta+vec3(sin(an_x)*off,-0.3,cos(an_x)*off);\n     \n    \t\tvec3 ww = normalize(ta-ro);\n    \t\n    \t\tvec3 uu = normalize(cross(ww,vec3(0.0,1.0,0.0)));\n                   \n    \t\tvec3 vv = normalize(cross(uu,ww));\n                   \n                   \n          \n    \n    \n    \t\tvec3 rd = normalize(uv.x*uu+uv.y*vv+1.5*ww);\n    \n    \n    vec3 col = render(ro,rd);\n   #else\n\n    vec3 col = vec3(0.);\n    \tfor( int m=0; m<AA; m++ )\n        for( int n=0; n<AA; n++ )\n        {\n         vec2 rr = vec2( float(m), float(n) ) / float(AA);\n            vec2 uv = (2.*(fragCoord+rr)-iResolution.xy)/iResolution.y;\n   \n\t\t\tfloat an_x = 10.*-iMouse.x/iResolution.x;\n   \t\t\tfloat an_y = 10.*-iMouse.y/iResolution.y;\n   \t\t\t//an_x=0.;\n   \t\t\tan_x+=sin(iTime/20.)/5.-0.45;\n    \t\tvec3 ta = vec3(0.7,0.7,0.2);\n    \t\tfloat off =2.2;\n     \t\tvec3 ro = ta+vec3(sin(an_x)*off,-0.3,cos(an_x)*off);\n     \n    \t\tvec3 ww = normalize(ta-ro);\n    \t\n    \t\tvec3 uu = normalize(cross(ww,vec3(0.0,1.0,0.0)));\n                   \n    \t\tvec3 vv = normalize(cross(uu,ww));\n                   \n                   \n          \n    \n    \n    \t\tvec3 rd = normalize(uv.x*uu+uv.y*vv+1.5*ww);\n    \n     col+= render(ro,rd);\n        \n        }\n    col /= float(AA*AA);\n    #endif\n   \n    \n    \n\n   \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}