{"ver":"0.1","info":{"id":"3stcRS","date":"1601166826","viewed":127,"name":"fork- kernkraft 400","username":"jorge2017a1","description":"fork- kernkraft 400","likes":7,"published":1,"flags":8,"usePreview":0,"tags":["forkkernkraft400"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);C(111);C(117);C(110);C(100);C(32);C(105);C(110);C(115);C(105);C(100);C(101); // message \"Sound inside\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\n\n\n\n\n\n// On a Clear Day You Can See Forever\n// -gman\n\n\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\n// Perlin simplex noise\nfloat snoise(vec2 v) {\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n\t\t\t-0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t+ i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 position = abs(( fragCoord.xy / iResolution.xy ) * 2.0 - 1.0);\n\tfloat t = iTime * -0.5;\n        vec2 m = log(position) + vec2(t, t);\n\tfloat size = 4.0;\n\tfloat b = max(m.x, m.y) * size;\n\tfloat n = floor(b) / (size * 0.5);\n\tvec3 c = vec3(snoise(vec2(n, 0.5)),\n\t              snoise(vec2(n, 0.0)),\n\t              snoise(vec2(n, 1.0))) * 0.5 + 0.5;\n\n\n\tfloat a = step(mod(b, 1.0), 0.80);\n\tc = c * a;\n    \n    if (iResolution.y<2000.)\n    {\n        float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);\n        if(c>=0.)\n        {\n            fragColor=vec4(c);\n            return;\n        }\n    }\n    \n    \n\tfragColor = vec4(c, 1);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//https://www.shadertoy.com/view/llBSzK\n///kernkraft 400\n//Creado por mememaestro en 2015-10-15 \n///modificado por JorgeFloresP.--27/sep/2020\n\n\nconst float trt = 1.0594630943592952645;\nconst float bpm = 140.0;\n\nfloat note2freq(float note) {\n    return 440.0 * pow(trt,note);\n}\n\nfloat sawWave(float time, float freq, float amp) {\n \t   return mod(time,1.0/freq)*freq*amp;\n}\n\nvec2 bassSynth(float time, float tempo) {\n    float m = floor(mod(tempo/2.0,8.0)); //minim number\n    float note = floor(mod(tempo*2.0,2.0)) * 12.0 - 35.0 +\n        float(m >= 4.0  && m < 6.0) * (5.0 + (m-4.0) * 2.0) ;\n    return vec2(sawWave(time, note2freq(note), exp(-0.0*mod(tempo, 0.5))));\n}\n\nvec2 leadSynth(float time, float tempo)\n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 6.0) || \n        (q > 8.0 && q < 17.0) ||\n    \tq == 20.0 || q == 22.0 || q == 23.0);\n    float note = -11.0 + //melody\n        \n        float(q<13.0) * floor(0.9 +  2.1 * (mod(q-1.0,4.0))) + \n        float(q>=13.0 ) * (21.0-q) + \n        float(q==15.0 ) * (-3.0) +\n        float(q>=20.0 ) * (2.0) +\n        float(q==22.0 ) * (6.0);  \n    return vec2(sawWave(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5))),\n                sawWave(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5))));\n}\n\n\nvec2 kickSynth(float time, float tempo)\n{\n    const float dist = 3.0;\n    tempo = mod(tempo,1.0); \n    return vec2(clamp(sin(pow((tempo+0.2)*0.0001,-0.5))*exp(-3.0*tempo),-(1.0/dist),(1.0/dist)) * dist);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\nvec2 leadSynthModv2(float time, float tempo)\n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 6.0) || \n        (q > 8.0 && q < 17.0) ||\n    \tq == 20.0 || q == 22.0 || q == 23.0);\n    float note = 5.0 + //melody\n        \n        float(q<13.0) * floor(0.9 +  2.1 * (mod(q-1.0,4.0))) + \n        float(q>=13.0 ) * (21.0-q) + \n        float(q==15.0 ) * (-3.0) +\n        float(q>=20.0 ) * (2.0) +\n        float(q==22.0 ) * (6.0);  \n    return vec2(sawWave(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5))),\n                sawWave(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5))));\n}\n\n\nvec2 leadSynthPar(float time, float tempo, float pnote)\n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 6.0) || \n        (q > 8.0 && q < 17.0) ||\n    \tq == 20.0 || q == 22.0 || q == 23.0);\n    float note = pnote + //melody\n        \n        float(q<13.0) * floor(0.9 +  2.1 * (mod(q-1.0,4.0))) + \n        float(q>=13.0 ) * (21.0-q) + \n        float(q==15.0 ) * (-3.0) +\n        float(q>=20.0 ) * (2.0) +\n        float(q==22.0 ) * (6.0);  \n    return vec2(sawWave(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5))),\n                sawWave(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5))));\n}\n\n\n\nvec2 clapSynth(float time, float tempo) {\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number;\n    float b = floor(q/8.0);//bar number\n    float qb = mod(q,8.0); //quaver in bar;\n    float ampMask = float((qb >= 2.0 && qb < 4.0) || (qb >= 6.0 && qb < 7.0)\n                         || (b == 3.0 && (qb == 1.0 || qb >= 5.0))); \n    tempo = mod(tempo*4.0 ,2.0);\n    return vec2(rand(vec2(time+1.2,tempo+6.1)) * ampMask * exp(-1.5*tempo),\n                rand(vec2(time+2.1,tempo+1.6)) * ampMask * exp(-1.5*tempo));\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    float t = time;\n    float tempo = t * (bpm/60.0);\n    \n    vec2 bass,lead,kick,clap;\n        \n    if (t<6.0)\n        {\n    \t bass = bassSynth(t,tempo) * 0.30; //mixing here\n         lead = leadSynth(t*1.005,tempo) * 0.333;\n        }\n   \telse\n    {\n    \t bass = bassSynth(t,tempo) * 0.30; //mixing here\n    \t lead = leadSynth(t*1.005,tempo) * 0.333;\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n    }\n    \n    \n    \n    ///---Nuevo\n    if (t>30.0 && t<45.0)\n        {\n    \t bass = bassSynth(t,tempo) * 0.30; //mixing here\n         lead = leadSynth(t*1.5,tempo) * 0.333;\n         \n        }\n   \telse if(t>45.0 && t<55.0)\n        \n        ///nuevo\n         lead= leadSynthModv2(t*1.4,tempo)*0.3232-bass;\n        \n    else if(t>55.0 && t<75.0)\n    {\n    \t bass = bassSynth(t,tempo) * 0.30; //mixing here\n    \t lead = leadSynth(t*1.6,tempo) * 0.433;\n    \t kick = kickSynth(t,tempo) * 0.433;\n    \t clap = clapSynth(t,tempo) * 0.433;\n    }\n    \n    else if(t>75.0 && t<80.0)\n    {\n        lead= leadSynthModv2(t*1.4,tempo)*0.3232;\n        //kick = kickSynth(t,tempo) * 0.433-bass-lead;\n        kick = kickSynth(t,tempo) * 0.433-bass;\n    }\n    \n    \n    else if(t>80.0 && t<96.0)\n    {\n       lead= leadSynthPar(t*1.4,tempo*1.0/0.96,5.0)*0.3232;\n       bass = bassSynth(t,tempo) * 0.30;\n    }\n    \n    \n    \n    vec2 synths = bass + lead; //sidechain\n    synths *= min(mod(tempo,1.0)+0.4,1.0);\n    \n    return synths + kick + clap;\n}","name":"Sound","description":"","type":"sound"}]}