{"ver":"0.1","info":{"id":"fly3zR","date":"1637019054","viewed":184,"name":"Citruchet","username":"Flopine","description":"A fresh truchet of lime, lemon, orange and grapefruit  :3","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["2d","truchet","citrus","lime"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define TAU (2.*PI)\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.07,fwidth(val-thre)))\n#define circle(uv,r) (length(uv)-r)\n#define hash21(x) fract(sin(dot(x,vec2(12.4,21.1)))*364.5)\n\n#define anim ((PI/2.)*(floor(iTime)+pow(fract(iTime),10.)))\n\n\nvec3 palette (float uv, vec2 id)\n{\n    uv = floor(uv*2.)/2.;\n    uv += sin(anim);\n    \n    float randoid = hash21(id*0.1);\n    \n    if (randoid < 1./3.) return mix(vec3(255,163,113)/255., vec3(255,220,111)/255., clamp(uv, 0., 1.));\n    if (randoid >= 1./3. && randoid < 2./3.) return mix(vec3(255,250,130)/255., vec3(196,242,133)/255., clamp(uv, 0., 1.));\n    if (randoid >= 2./3.) return mix(vec3(149,250,128)/255., vec3(114,230,100)/255., clamp(uv, 0., 1.));\n}\n\nvoid moda (inout vec2 p, float rep)\n{\n    float per = TAU/rep;\n    float a = mod(atan(p.y,p.x)-per*.5,per)-per*.5;\n    p = vec2(cos(a),sin(a))*length(p);\n}\n\nvec2 gid;\nvec4 tile (vec2 uv)\n{\n    vec2 tuv = uv-sign(uv.x+uv.y+0.001)*.5;\n    float angle = atan(abs(tuv.y), tuv.x);\n    vec2 ruv = abs(uv)-.5;\n    \n    float ti = AAstep(0.05,abs(circle(tuv,0.5)));\n    ti *= AAstep(0.03,abs(circle(ruv,0.4)));\n    ti *= AAstep(0.01,circle(ruv, 0.33));\n    \n    moda(ruv,8.);\n    float section = AAstep(0.015, abs(ruv.y));\n    section = max(AAstep(0.01,circle(ruv, 0.33)),section);\n    ti += 1.-section;\n\n    vec3 color = clamp( palette(angle/(PI/2.), gid)*(1.-ti) + vec3(0.99)*ti, 0., 1. ); \n    color *= AAstep(0.01,abs(abs(circle(tuv,0.5))-0.05));\n    \n    return vec4(color,ti);\n    \n}\n\nvoid grid (inout vec2 uv)\n{\n    gid = floor(uv);\n    vec2 g = fract(uv)-.5;\n    if(hash21(gid*0.1+anim*0.00001)<0.5) g.x*=-1.;\n    uv = g; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    uv *= 2.;\n    grid(uv);\n    vec3 col = tile(uv).xyz;\n    fragColor = vec4(pow(col,vec3(1.3)),1.0);\n}","name":"Image","description":"","type":"image"}]}