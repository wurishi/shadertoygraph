{"ver":"0.1","info":{"id":"3d2cz3","date":"1587068919","viewed":195,"name":"retrobloomwavey","username":"kpo","description":"nah","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float wave(vec2 uv, vec2 coords, float height, float frequency)\n{\n    float argument = coords.x + frequency * uv.x;\n    float normalizedSine = height * sin(argument);\n    \n\tfloat col = 1.0 - smoothstep(-2.0,2.0, ((uv.y - coords.y) -normalizedSine)*iResolution.y);\n    col *= uv.y + 2.0;\n    \n    return col;\n}\n\nfloat sun(vec2 uv, vec2 center, float radius, float bloom)\n{\n    float dist = distance(uv, center);\n\tfloat circle = 1.0 - smoothstep(-3.0,3.0, (dist-radius)*iResolution.y);\n    \n    uv.y -= 0.;\n    float visible = 1.0 - step(sin(uv.y * 40.0 + 5.0 * iTime) + 2.7 * uv.y - 0.3, 0.5);\n    visible *= (uv.y + 0.5);\n    return visible * circle + (1.0 - dist + bloom);\n}\n\nvec4 draw(vec4 inputImage, float mask, vec4 color)\n{\n\tinputImage += mask * color;\n    return inputImage;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\t\n    vec4 image = vec4(0.0, 0.0, 0.0, 0.0);\n    \n    float animatedValue = iTime + 0.3 * sin(iTime);\n    float speed = 2.0;\n    image = draw(image, wave(uv, vec2(animatedValue * speed ,-0.2), 0.04, 7.0), vec4(0.1, 0.2, 0.3, 0.0));\n    image = draw(image, wave(uv, vec2(animatedValue * speed * 1.3 ,-0.4), 0.07, 6.0), vec4(0.1, 0.2, 0.3, 0.0));\n    image = draw(image, wave(uv, vec2(animatedValue * speed * 1.5 ,-0.7), 0.1, 5.0), vec4(0.1, 0.2, 0.3, 0.0));\n    image = draw(image, sun(uv, vec2(0.0, 0.4), 0.55, 0.3), vec4(1.0, 85.0/255.0, 0.0, 0.0));\n    \n    // Output to screen\n    fragColor = vec4(image);\n}","name":"Image","description":"","type":"image"}]}