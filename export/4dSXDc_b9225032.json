{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define saturate(i) ( clamp( i, 0.0, 1.0 ) )\n\nvec2 hash( vec2 p )\n{\n\treturn -1.0 + 2.0 * fract( sin ( \n       \t\t\t\t\t\t   vec2( dot( p, vec2( 127.1, 311.7 ) ),\n\t\t\t  \t\t\t\t\t     dot( p, vec2( 269.5, 183.3 ) ) ) ) * 43758.5453123 );\n}\n\nvec2 n4rand2( vec2 n )\n{\n\tfloat t = floor( iTime * 24.0 );\n\tvec2 nrnd0 = hash( n + 0.07*t );\n\tvec2 nrnd1 = hash( n + 0.11*t );\t\n\tvec2 nrnd2 = hash( n + 0.13*t );\n\tvec2 nrnd3 = hash( n + 0.17*t );\n    \n\treturn (nrnd0+nrnd1+nrnd2+nrnd3) / vec2( 4.0 );\n}\n\nfloat n4rand( vec2 n )\n{\n    vec2 nrndf = n4rand2( n );\n\treturn ( nrndf.x + nrndf.y ) * 0.5;\n}\n\nfloat smin( float a, float b, float k )\n{\n    a = pow( a, k ); b = pow( b, k );\n    return pow( (a*b)/(a+b), 1.0/k );\n}\n\nfloat doMask( vec2 uv, float radius, float luminance, float pixelWidth )\n{\n    vec2 fractuv = fract( uv ) - 0.5;\n\tfloat fractlength = length( fractuv );// max( abs( fractuv.x ), abs( fractuv.y ) );\n    float pixelMaskRaw = 1.0 - saturate( fractlength );\n    float pixelCircle = smoothstep( radius, radius + pixelWidth, pixelMaskRaw );\n    float pixelMask = ( luminance * 0.005 + pixelCircle ) * pixelMaskRaw; // \"Bloom\"\n    \n    return pixelCircle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat aspect = iResolution.x / iResolution.y;\n    float scale = 75.0;\n    const int samples = 2;\n    const float fSamples = float( samples * samples * 2 * 2 );\n    const float oneoverfSamples = 1.0 / fSamples;\n    const vec3 luminanceSeed = vec3( 0.2126, 0.7152, 0.0722 );\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 correctedUV = vec2( uv.x * aspect, uv.y );\n    vec2 scaledUV = correctedUV * scale;\n    vec2 pixelUV = fract( scaledUV );\n    vec2 edgeUV = fract( uv );\n    \n   \tvec2 sampleUV = ceil( scaledUV ) / vec2( scale );\n\tsampleUV.x /= aspect;\n    \n    float sample1d = 0.0;\n    for( int x = -samples; x < samples; x++ )\n    {\n    \tfor( int y = -samples; y < samples; y++ )\n        {\n            vec2 subSampleUV = sampleUV;\n            subSampleUV += ( ( aspect ) / ( scale * fSamples ) ) * vec2( float( x ), float( y ) );\n    \t\tsample1d += pow( texture( iChannel0, subSampleUV ).g, 2.2 );\n        }\n    }\n    sample1d *= oneoverfSamples;\n    sample1d = 1.0 - sample1d;\n\n    float luminance = sample1d;\n\n    //\n    \n    vec2 random = n4rand2( floor( scaledUV ) );\n    \n    float pixelRadius = ( luminance + ( ( random.x + random.y ) * 0.025 ) ) * 0.5;\n    pixelRadius = 1.0 - pixelRadius;//saturate( pow( pixelRadius, 2.2 ) );\n    \n    vec2 offset = fwidth( scaledUV ) / float( samples );\n    \n    float mask = 1.0;\n    for( int x = -samples; x < samples; x++ )\n    {\n    \tfor( int y = -samples; y < samples; y++ )\n        {\n            mask -= doMask( 0.025 * random + ( scaledUV + vec2( x, y ) * offset ), pixelRadius, \n                            luminance, max( offset.x, offset.y ) ) * oneoverfSamples;\n        }\n    }\n    \n    //\n    \n    float edgeMaskX;\n    edgeMaskX  = 1.0 - edgeUV.x;\n    edgeMaskX *=       edgeUV.x;\n    \n    float edgeMaskY;\n    edgeMaskY  = 1.0 - edgeUV.y;\n    edgeMaskY *=       edgeUV.y;\n\n    float edgeMask = smin( edgeMaskX, edgeMaskY, 4.0 );\n    \n    edgeMask = pow( edgeMask, mix( 0.333, 2.25, edgeMask ) );\n    edgeMask *= 4.0;\n    edgeMask = min( 1.0, edgeMask );\n    \n    float final = mask * edgeMask;\n\tfragColor = vec4( vec3( pow( mask, 1.0 / 2.2 ) ), 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dSXDc","date":"1416367028","viewed":236,"name":"Stippling (Black on White)","username":"Orihaus","description":" ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}