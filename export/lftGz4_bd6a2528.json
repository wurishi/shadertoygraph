{"ver":"0.1","info":{"id":"lftGz4","date":"1711463611","viewed":59,"name":"Circular Progress, Vertical","username":"dunyakilavuz","description":"Can be used as an opacity map for circular progress bars.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["clock","progress","smooth","circular","bar","opacitymap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535897932384626433832795;\nconst float radius = 0.5f;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 center = iResolution.xy * 0.5;     // Center of the progress bar\n    float radius = min(iResolution.x, iResolution.y) * radius;     // Radius of the progress bar\n    float progress = mod(iTime, 1.0);     // Progress value (0.0 to 1.0)\n    float distance = length(fragCoord - center);     // Distance from the fragment to the center\n    float color = 1.0f - smoothstep(radius * 0.99, radius, distance);\n\n    float yProgress = 1.0f -(fragCoord.y / iResolution.y);\n    float yColor = 1.0f;\n    \n    if(yProgress < progress)\n        yColor = 0.0f;\n        \n    \n    fragColor = vec4(color * yColor);\n}","name":"Image","description":"","type":"image"}]}