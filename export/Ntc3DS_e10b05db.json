{"ver":"0.1","info":{"id":"Ntc3DS","date":"1636596617","viewed":92,"name":"FresnelEffect","username":"YDOG","description":"Fresnel Effect on Raytrace Sphere","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fresnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphereIntersect(vec3 ray, vec3 dir, vec3 center, float radius)\n{\n vec3 rc = ray-center;\n float c = dot(rc, rc) - (radius*radius);\n float b = dot(dir, rc);\n float d = b*b - c;\n float t = -b - sqrt(abs(d));\n float st = step(0.0, min(t,d));\n return mix(-1.0, t, st);\n}\n\n\n//-------------\nvec3 SphereCenter = vec3(0.0,0.0,10.0);\nfloat SphereRadius = 5.0;\n\nvec3 CameraCenter = vec3(0.0,0.0, -3.0);\nfloat imagePlaneDist = 1.0;\n\nvec3 lightPos = vec3(10.0, 5.0, -1.0);\nvec3 backgroundColor = vec3(0.1);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n \n //Ray starts at camera center\n vec3 rayOrigin = CameraCenter;\n //Ray moves towards current pixel on image plane\n vec3 imagePlanePixel = vec3(uv.x,uv.y,CameraCenter.z + imagePlaneDist);\n \n //Calculate ray\n vec3 rayDirection = normalize(imagePlanePixel - rayOrigin);\n\n//Intersect ray with sphere\n float t = sphereIntersect(rayOrigin, rayDirection, SphereCenter, SphereRadius);\n \n //hitpoint\n vec3 hitPoint = rayOrigin + rayDirection * t;\n\n  t = clamp(t, 0.0, 1.0);\n  \n  vec3 col;\n  if (t == 0.0f) {\n     col = backgroundColor;\n  } else {\n    vec3 normal = normalize(hitPoint - SphereCenter);\n  \n    //The percentage this point is looking towards the light (lamberts law)\n    float lightLambert = max(dot(normal, normalize(lightPos - hitPoint)) , 0.0); \n\n    vec3 sphereColor = vec3(1.0,0.1,0.1);\n    vec3 ambient = vec3(0.3);    \n  \n    float fresnel = pow(clamp(1. - dot(normal, -rayDirection), 0., 1.), 5.);\n    vec3 rimColor = vec3(1,1,1);\n  \n    col = sphereColor * t * (ambient + lightLambert) + (fresnel * rimColor); // add the fresnel contribution\n  }\n  \n  fragColor = vec4(col, 1.0f);\n}\n\n\n","name":"Image","description":"","type":"image"}]}