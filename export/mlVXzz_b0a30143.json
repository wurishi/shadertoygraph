{"ver":"0.1","info":{"id":"mlVXzz","date":"1685910545","viewed":27,"name":"purple jewelry","username":"xxpittip","description":"First attempt using Shadertoy. Very loosely based on a tutorial by kishimisu: https://www.youtube.com/watch?v=f4s1h2YETNY","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.0 - iResolution.xy)/iResolution.y;\n    vec2 uv0 = uv;\n    float d0 = length(uv0);\n    vec3 finalcol = vec3(0.0);\n    vec3 col = vec3(0.);\n    float iiTime = 0.6*iTime;\n    for (float i = 1.0; i < 5.0; i++) {\n        uv = abs(fract(uv*(1.+.5*abs(sin(.9*iiTime))))-0.5);\n        float d = length(uv);\n        float c = abs(cos(4.*d0+2.*(uv.x+uv.y)));\n        c *= 0.75+0.25*sin(d+iiTime*i);\n        c = clamp(pow(0.10/c, 1.75), 0.0, 1.0);\n        \n        finalcol += palette(c+iiTime*i+4.*d0)*c*(0.5+0.5*cos(10.*d));\n    }\n    fragColor = vec4(finalcol.x, pow(finalcol.y+.1, 2.), finalcol.z, 1.0);\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// cosine based palette, 4 vec3 params\nvec3 palette( in float t)\n{\n    vec3 a = vec3(1.200, 0.500, 1.500);\n    vec3 b = vec3(0.500, 0.250, 0.500);\n    vec3 c = vec3(1.500, 2.000, 4.000);\n    vec3 d = vec3(3.000, 1.000, 0.000);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n","name":"Common","description":"","type":"common"}]}