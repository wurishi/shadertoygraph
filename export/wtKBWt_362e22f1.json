{"ver":"0.1","info":{"id":"wtKBWt","date":"1616419581","viewed":158,"name":"infrared wave generator IR NEC","username":"oO0","description":"generate audio sound wave with IR NEC code without carry frequency. \nUsage: go to Sound tab, change address and message. Can copy to Image tab to visualize.","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["generator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float tone(float t, float hz) {\n    return sin(t * 2.0 * 3.14159265359 * hz);\n}\nfloat signalStart=0.;\n#define D(t,dt,b)  if(t>signalStart) v=float(b); signalStart+=float(dt)/1000.;\n#define pulse 0.5625\n#define one 1.25-pulse\n#define zero 2.25-pulse\n#define l   D(t,pulse,1)D(t,one,0)\n#define o   D(t,pulse,1)D(t,zero,0)\n#define end D(t,pulse,1)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // bg\n    vec3 col = cos(iTime)/5.+uv.y+vec3(1.,0.,0.004);\n\n\nfloat v;\nfloat t=uv.x/4.;\n//-----delimiter for easy find\n  D(t,33.,tone(t, 555.)) //same as if(t>1.) v=tone(t, 300.0);\n  D(t,33,0) \n//-----header\n  D(t,9,1)\n  D(t,4.5,0)\n//-----addr\n  l o l l l l l l\n  o l o o o o o o //inversed\n//-----msg\n  o o o o l l l l\n  l l l l o o o o //inversed\n  \n  end\n//-----delimiter for easy find\n    D(t,33,0) \n    D(t,33.,tone(t, 88.))\n\n\n if(uv.y<0.33) col.g=1.;\n else\n if(uv.y>0.66) col.g=0.;\n else col.g=v;\n\n fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float tone(float t, float hz) {\n    return sin(t * 2.0 * 3.14159265359 * hz);\n}\n\nfloat signalStart=0.;\n#define D(t,dt,b)  if(t>signalStart) v=float(b); signalStart+=float(dt)/1000.;\n#define pulse 0.5625\n#define one 1.25-pulse\n#define zero 2.25-pulse\n#define l   D(t,pulse,1)D(t,one,0)\n#define o   D(t,pulse,1)D(t,zero,0)\n#define end D(t,pulse,1)\nvec2 mainSound( in int samp,float t) {\nfloat v;\n\n//-----delimiter for easy find\n  D(t,500.,tone(t, 444.)) //same as if(t>1.) v=tone(t, 300.0);\n  D(t,300,0) \n//-----header\nD(t,25,1)\nD(t,20,0)\n  D(t,9,1)\n  D(t,4.5,0)\n//-----addr\n  l o l l l l l l //0xF906\n  o l o o o o o o //inversed\n//-----msg\n  l l l l o o l o //0x8\n  o o o o l l o l //inversed\n  \nend\n//-----delimiter for easy find\nD(t,40,0)\nD(t,10,1)\n    D(t,200,0) \n    D(t,500.,tone(t, 77.))\n\n    //other chennel inverted\n    return vec2(v, -v)*0.8; //attenuation to make sure it's not clipping\n}","name":"Sound","description":"","type":"sound"}]}