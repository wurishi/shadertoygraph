{"ver":"0.1","info":{"id":"lfGGD1","date":"1712690240","viewed":38,"name":"Random Noise Coin Flipper","username":"anAccount","description":"100x100 grid of random coin flips.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","random","flip","coin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n\n// Random function\nfloat random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nvec4 renderScene() {\n    vec2 st = gl_FragCoord.xy / iResolution.xy;\n    \n    // Grid cell size\n    vec2 cellSize = vec2(1.0) / 100.0;\n    \n    // Grid cell index\n    vec2 cellIndex = floor(st / cellSize);\n    \n    // Progress (0 to 1)\n    //float progress = fract(iTime);\n    \n    // Flip a coin for the first cell\n    float coin = step(random(cellIndex*iTime), 0.5);\n    \n    // Shade the cell based on coin flip and progress\n    vec3 cellColor = mix(vec3(0.00, 0.0, 0.0), vec3(1.0, 1.0, 1.0), coin);\n\n    return vec4(cellColor, 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = renderScene();\n}","name":"Image","description":"","type":"image"}]}