{"ver":"0.1","info":{"id":"3sKBDD","date":"1607173495","viewed":50,"name":"mandelbrot set test","username":"lewismills2k","description":"mandelbrot set fractal","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["t3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 hsv2rgb(vec3 c) \n{\n    vec3 rgb = clamp(abs(mod(c.x*6.+vec3(0.,4.,2.),6.)-3.)-1.,0.,1.);\n    rgb = rgb * rgb * (3.0 - 2.0 * rgb);\n    vec3 color = c.z * mix(vec3(1.0), rgb, c.y);\n    return vec4(color,1);\n}\n\nvec4 colormap(int i)\n{\n    if(i == 256)\n        return vec4(0,0,0,1);\n    \n    vec3 hsv = vec3(float(i)/256.0, 1, 1);\n    return hsv2rgb(hsv);\n}\n\nvec4 MandelbrotColor( float x0, float y0 )\n{\n    float x=0.0,y=0.0,xnew,ynew;\n    int i;\n    int imax = 256;\n    for (i=0;i<imax;i++) {\n      xnew = x * x - y * y + x0;\n      ynew = 2.0 * x * y + y0;\n      if (xnew*xnew + ynew*ynew > 4.0)\n         break;\n      x = xnew;\n      y = ynew;\n   }\n   return colormap(i);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -=  vec2(0.5, 0.5);\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //ZOOM IN\n    float fac = pow(10.0,-iTime*0.2); //ever shrinking window centered around 0\n    uv *= fac;\n    uv += vec2(-0.761574,-0.0847596);\n    \n    fragColor = MandelbrotColor(uv.x, uv.y);\n}","name":"Image","description":"","type":"image"}]}