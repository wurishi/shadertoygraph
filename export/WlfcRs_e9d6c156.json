{"ver":"0.1","info":{"id":"WlfcRs","date":"1592768752","viewed":192,"name":"spinning head","username":"louis_C","description":"playing with an old sdf head made a while ago","likes":3,"published":1,"flags":40,"usePreview":0,"tags":["raymarching","sound","pathtracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n   \n    fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"struct scene{float dist;int em;float re;vec3 col;};\nfloat se = 0.0;\nfloat rd() {return (fract(sin( (se += 1.0)) * 43758.5453));}\nfloat rd(float t){return fract(sin(dot(floor(t),95.265))*7845.236);}\nfloat no(float t){return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nfloat sph (vec3 p, float r){return length(p)-r;}\nmat2 rotate(float a) {\n    float c = cos(a);\n    float s = sin(a);\nreturn mat2(c,-s,s,c   );}\nfloat smin (float a,float b,float k){float h = clamp (0.5+0.5*(b-a)/k,0.0,1.0);\nreturn mix (b,a,h)-k*h*(1.0-h);}\nfloat smax (float a,float b,float k){float h = clamp (0.5+0.5*(b-a)/k,0.0,1.0);\nreturn mix (a,b,h)-k*h*(h);}\nfloat sbox( vec3 p, vec3 b, float r ){return length(max(abs(p)-b,0.0))-r;}\nfloat cy( vec3 p, vec2 h ,float r){vec2 d = abs(vec2(length(p.xz),p.y)) - h;\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0))-r;}\nfloat hex( vec3 p, vec2 h){vec3 q = abs(p);\n  return max(q.x-h.y,max((q.z*0.866025+q.y*0.5),q.y)-h.x);}\nvec3 rdv(){\n    float theta = rd() * (6.283);\n    float z = rd() * 2.0 - 1.0;\n    float a = sqrt(1.0 - z * z);\n    vec3 v = vec3(a * cos(theta), a * sin(theta), z);\n    return v * sqrt(rd());}\nmat2 rot(float r){float c = cos(r);float s = sin(r);return mat2(c, s, -s, c);}\nfloat box(vec3 p, vec3 s){vec3 d = abs(p) - s;\nreturn length(max(d, 0.0)) + min(max(d.x, max(d.y, d.z)), 0.0);}\nscene opOR(in scene a, in scene b){\n    if (a.dist < b.dist){return a;}\n    return b;}\nscene map(vec3 c){\n    //c +=vec3(0.,0.,-30.);\n    vec3 p = c*0.25;\n     \n    vec3 pa = c*0.25;\n    float bar = mix(1.,-1.,step(0.,p.x));\n    float s1 = sph ((p*vec3(1.,1.,0.9))+vec3(0.,0.3,-0.1),2.);\n    float a = mix(-1.,1.,step(0.,p.x))*0.3;\n    float ba =distance(vec2(a,1.4),mix(vec2(a,p.y),p.xy,mix(step(a,p.x),step(p.x,a),step(p.x,0.))));\n    vec3 p1 = p+vec3(0.,0.,clamp(smoothstep(0.7,0.15,ba)*0.1\n     -mix(0.,smoothstep(0.15,0.,length(p.x))*0.05,step(p.y,1.3)),0.,1.)\n                     -smoothstep(0.3,0.,distance(vec2(0.,1.75),p.xy*vec2(0.6,1.)))*0.05+\n                     smoothstep(0.4,0.,distance(vec2(0.,2.1),p.xy*vec2(0.6,1.)))*0.05);\n    float s2 = cy((p1+vec3(0.,-0.8,0.3)+vec3(0.,0.,(1.-smoothstep(0.,2.,distance(0.8,p.y)))*0.3))\n    *vec3(mix(1.,2.,smoothstep(1.,4.,p.y)),1.,1.),vec2(0.5,1.3),1.);\n    float s2b = box(p+vec3(0.,0.,mix(1.,1.7,clamp(p.y,-2.,2.5))),vec3(2.,2.2,1.5+smoothstep(2.,0.,distance(p.x,0.))));\n    float s2c = smax(s2,s2b,0.1);\n    float s3 = smin(s1,s2c,0.3);\n    float s4 = box(p,vec3(1.2-((smoothstep(1.,0.,distance(p.z,-0.9))*-p.y)*0.001)+smoothstep(1.5,0.,distance(p.z,0.5))*0.25,2.,2.));\n    float s5 = smax(s3,s4,0.3); \n\t vec3 p2 = p1*vec3(1.,mix(0.2,4.,clamp(distance(p1.z,mix(-2.4,-2.2,smoothstep(1.,0.8,distance(p.y,1.)))),0.,1.)),1.)+vec3(0.,0.,2.18)\n         +vec3(0.,0.,(smoothstep(0.6,0.,distance(0.,p.x)))*0.6)+vec3(0.,smoothstep(1.5,1.,distance(p.x,0.))*0.3*\n                        smoothstep(0.5,0.,distance(p.y,-0.2)),0.);\n    p2.zy*=rotate(0.7);\n    float s6 = hex(p2,vec2(0.8,2.));\n    float s7 = max(s5,-s6-0.1);\n    float s8 = sbox(p1+vec3(0.,mix(0.,-0.1,1.-smoothstep(-2.3,-2.6,p1.z))\n                            +smoothstep(0.15,0.,distance(0.,p.x))*smoothstep(0.5,0.,distance(p.z,-2.2))*-0.1*step(0.,p.y)\n                            ,mix(0.9,1.35,smoothstep(-1.,1.,distance(p.y,0.0)))+smoothstep(0.4,0.,distance(p.y,-0.55))*0.25)\n    *vec3(1.,1.,mix(0.78,1.05,distance(p.y,-0.7)))+vec3(0.,0.,(1.-smoothstep(0.,2.,distance(0.,p.x)))*0.7),\n                    \n    vec3(mix(1.,mix(0.01,0.3,smoothstep(-2.25,-1.4,p.z+p.y*0.5))\n    *mix(.5,1.8,smoothstep(0.4,0.,distance(0.25,p.y)))*mix(1.,3.,smoothstep(0.3,0.,distance(0.7,p.y)))\n    *mix(1.,mix(1.3,0.3,smoothstep(-1.9,-1.6,p1.z+p.y*0.5)),smoothstep(0.3,0.,distance(0.7,p.y)))\n             ,1.-smoothstep(-0.15,-0.8,p.y)),0.7,0.2),0.03);\n    float s9 = smin(s7,s8,0.1);\n    vec3 p3 = (p+vec3(0.,0.1,(smoothstep(3.,0.,distance(0.,p.x)))*0.5)+vec3(0.,-1.5,1.9))\n        *vec3(1.5,mix(0.6,2.,smoothstep(0.3,1.,distance(p.x,0.))),0.6)+vec3(0.,mix(-0.01,0.,clamp(distance(p.x*9.,0.),0.,1.)),0.)\n        +vec3(0.,-0.05+smoothstep(0.7,0.5,distance(p.x,0.))*0.05,0.);\n    p3.zy *=rotate(0.6);\n    float s10 = sbox(p3,vec3(1.,0.05,0.1),0.05);\n    float s11 = max(-s10,s9-0.01);\n    vec3 p4 = (p+vec3(bar*0.7,0.1,1.4));     \n    p4.zy*=rotate(0.6);\n    p4.zx*=rotate(bar*-0.28);\n    p4.xy*=rotate(bar*0.2);\n    p4+=+mix(vec3(0.,smoothstep(0.2,0.5,distance(-0.8,p.x))*-0.37+smoothstep(1.2,0.,distance(-1.6,p.x))*-0.2\n                  ,smoothstep(0.4,0.,distance(-0.8,p.x))*clamp(distance(-0.2,p.y),0.,1.)*0.3),\n             vec3(0.,smoothstep(0.2,0.5,distance(0.8,p.x))*-0.37+smoothstep(1.,0.,distance(1.7,p.x))*-0.5\n                  ,smoothstep(0.4,0.,distance(0.8,p.x))*clamp(distance(-0.2,p.y),0.,1.)*0.3),step(0.,p.x));\n    float s12 = sbox(p4,vec3(0.43,0.3,0.3),0.01);\n    float s13 = smin(s11,s12,0.03);\n    vec3 p5 = p+vec3(bar*0.78,-0.1,1.8);\n     //p5.zy*=rotate(0.6);\n    p5.zx*=rotate(bar*-0.25);\n    p5.xy*=rotate(bar*0.1);\n    p5+=vec3(0.,distance(p5.x,bar*0.32)*0.15,0.);\n    float s14 = sbox(p5,vec3(0.32,clamp(distance(p5.x,bar*0.32)*mix(0.,20.,smoothstep(0.2,0.,distance(-0.1,p5.y))),0.,1.)\n     *clamp(distance(p5.x,bar*-0.32)*7.,0.,1.)\n     *distance(0.2,p5.z),0.2),0.01);\n    float s15 = max(s13,-s14);\n    vec3 p6 = (pa+vec3(bar*0.75,0.1,1.68))*vec3(0.85,1.,1.)+vec3(0.,distance(p.x,0.)*-0.1,distance(p.x,0.)*-0.3);\n\t//p6+=vec3(0.,0.,smoothstep(0.16,0.1,distance(pa.xy,vec2(bar*-0.712,0.)))*0.02-smoothstep(0.07,0.03,distance(pa.xy,vec2(bar*-0.7,0.01)))*0.1);\n    vec3 p7 = p+vec3(bar*1.68,-0.4,0.1);\n    p7.zx*=rotate(bar*0.6);\n    p7.zy*=rotate(-0.4);\n    p7+=vec3(smoothstep(0.6,0.,distance(p7.y,0.1))*bar*0.05,0.,0.);\n    float s18 = sbox(p7,vec3(0.0,mix(0.55,0.2,smoothstep(mix(0.4,0.8,smoothstep(1.,0.,distance(p7.y,-0.5))),0.,\n    distance(p7.z,-.5))),0.2+smoothstep(1.,0.,distance(p7.y,-0.1))*0.3*step(0.,p7.z)),0.08);\n    float s19 = smin(s15,s18,0.1);\n    float s20 = sbox(p+vec3(0.,0.6,mix(2.,2.59,smoothstep(2.,0.,distance(p.x,0.)))),vec3(1.5,0.3,0.3),0.1);\n    float s21 = max(s19,-s20);\n    vec3 p8 =p7+vec3(bar*0.1,(smoothstep(0.4,0.,distance(p7.z,0.))*-0.1)+0.1,-0.16\n                     +smoothstep(0.18,0.,distance(p.y,0.5))*step(p.z,0.)*0.15);\n    p8.zx*=rotate(bar*-0.3);\n    p8.zy*=rotate(0.1);\n    p8+=vec3(0.,smoothstep(0.15,0.,distance(-0.05,p.z))*0.1*step(0.,p8.y),0.);\n    float s22 = sbox(p8,vec3(0.,0.25,0.1*smoothstep(0.8,0.,distance(p.y,0.3))),0.15);\n    float s23 = max(s21,-s22);\n    vec3 p9 =p+vec3(bar*1.7,0.,0.);\n    p9.zy*=rotate(-0.7);\n    p9.zx*=rotate(bar*0.5);\n    p9.yx*=rotate(bar*-0.3);\n    p9+=vec3(0.,-0.05+smoothstep(0.,0.3,distance(p9.z,0.25))*-0.15,-0.28);\n    float s24 = sbox(p9,vec3(0.,.1,.25),0.07);\n    float s25 = min(s23,s24);\n        float s16 = sph(p6,0.3);\n    float s17 = min(s25,s16);\n\n    scene tet = scene (s17,0,2.,vec3(0.5,0.1,0.1));\n    scene wat = scene (length(c+vec3(10.,20.,20.))-10.,1,1.,vec3(20.));\n    scene scene = opOR(tet, wat);\n  \n    return scene;\n}\nvec3 norm(vec3 p){vec2 e=vec2(0,0.01);return normalize(map(p).dist \n\t\t-vec3(map(p-e.yxx).dist,map(p-e.xyx).dist,map(p - e.xxy).dist));}\n\nscene raymarch(in vec3 ro, in vec3 rd){\n    float t = 0.0;\n    scene sceneOutput = scene(50.,  0, 1.2, vec3(0.03));\n    for (int i = 0; i < 64; ++i){\n        scene sce = map(ro + rd * t);\n        if (sce.dist < 0.01){\n            sceneOutput = scene(t, sce.em,sce.re,sce.col);\n            break;}\n        t += sce.dist;\n        if (t > 60.){break;}\n    }\n    return sceneOutput;}\n\nvec4 raytrace(in vec2 uv){\n    float time = iTime;\n    vec3 ro = vec3(uv, -30.);  \n    vec3 rd = normalize(vec3(uv, 2.8));\n     ro.xz*=rot(time);\n     rd.xz*=rot(time);\n    ro.xy*=rot(time);\n     rd.xy*=rot(time);\n    vec3 color = vec3(0.0);\n    vec3 mco = vec3(0.0);\n    float atten = 1.0;\n    float depth = 0.;\n    float bounces = 1.0;\n    for (int i = 0; i <=2; ++i)\n    {\n        scene sce = raymarch(ro, rd);\n        if (i == 0) depth =  sce.dist;\n        if (sce.em == 0)\n        {\n        \tvec3 p = ro + rd * sce.dist;\n            vec3 n = norm(p);           \n            rd = n + rdv() * sce.re;\n            ro = p + rd * 0.1;\n            mco += (sce.col) * atten;\n            bounces += 1.0; \n            atten *= 0.5;\n        }\n        else\n        { color = mix(sce.col, mco * sce.col, max(0.0, float(i)));\n         break;}\n\n    } \n    return vec4(color/bounces,depth);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uc = fragCoord.xy / iResolution.xy;\n    float time = iTime;\n    se = (iResolution.y * fragCoord.x / iResolution.x + fragCoord.y / iResolution.y);\n    se += time;\n    vec2 uv = (fragCoord.xy / iResolution.xy * 2.0 - 1.0) ;\n    uv.x *= iResolution.x/iResolution.y;\n    vec4 color = raytrace(uv );\n    vec4 prevColor = texture(iChannel0, fragCoord.xy / iResolution.xy);\n    /*float frames = 1.0 / float(iFrame + 1);\n    if (iFrame > 1)\n        color.rgb = mix(prevColor.rgb, color.rgb, frames);*/\n    vec3 col = max(color.xyz,texture(iChannel0,uc).xyz*0.8);\n    fragColor = vec4(col,1.);\n    \n}\n\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float rd(float t){return fract(sin(dot(floor(t),45.236))*7845.236);}\n#define pi  3.14159265\nfloat no(float t){return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nfloat no2(float t){return mix(rd(t),rd(t+1.),smoothstep(0.4,0.6,fract(t)));}\nfloat it(float t){float r=0.;float a=0.5;for(int i=0;i<5;i++){\n    r+=no(t/a)*a;a*=0.5;}return r;}\nfloat hash(float x){return fract(sin(x) * 897612.531);}\nfloat voc(float t, float f, float ft,float t2){float x = fract(t * f) / f;\nfloat a=(sin(x*6.5*ft)*.4+sin(x*13.*ft)+sin(x*24.*ft)*.2);\nfloat e=(sin(x*4.*ft)*.4+sin(x*22.*ft)+sin(x*25.*ft)*.2); \nfloat o=(sin(x*5.*ft)*.4+sin(x*10.*ft)+sin(x*25.*ft)*.2);\nfloat t1 = fract(t2*0.1);\nfloat tm = mix(0.1,0.5,t1);\nfloat tru = fract(t2*0.2)*11.;\nfloat ru = smoothstep(0.5,1.5,distance(4.,tru));\nru *= smoothstep(0.,1.,distance(8.5,tru));\nru *= smoothstep(0.,0.8,distance(10.,tru));                                               \nfloat c1 = mix(o,a,ru);\n   return c1* min(x * 1000., 1.) * exp(x * -200.);}\nvec2 inst2(float t, float var,float t2){\n    vec2 v = vec2(0., 0.);\n    for(int i = 0; i < 16; ++i){\n        float h = float(i);\n       \tfloat m = voc(t + h / 3., 50. + pow(2.01, (h - 8.) * .2), var,t2);\n        float pan = hash(h);\n        v.x += m * pan;\n        v.y += m * (1. - pan);\n    }\n    return v * .1;\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    float tt = fract(time*0.2);\n    float tru = tt*11.;\n    float ru = smoothstep(-0.5,1.5,distance(4.,tru));\n\tru *= smoothstep(-0.2,1.2,distance(8.5,tru));\n\tru *= smoothstep(0.,1.,distance(10.,tru));\n    float cre = smoothstep(0.,0.25,tt)*pow(smoothstep(1.,0.25,tt),0.5);\n    float va = (mix(50.,100.,ru)+cre*25.)*mix(0.8,1.2,it(time*0.1));\n    vec2 v1 = inst2(time,va,time);\n    float t1 = mix(sin(time*800.),sin(time*400.),\n                   smoothstep(-0.1,0.1,sin(pow(fract(time*0.2)*6.28,2.))))*0.2;\n    \n    return vec2( clamp(v1,-1.,1.) );\n}","name":"Sound","description":"","type":"sound"}]}