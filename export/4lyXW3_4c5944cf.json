{"ver":"0.1","info":{"id":"4lyXW3","date":"1486074281","viewed":186,"name":"For Facebook guy","username":"gilesruscoe","description":"RGB offset","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circlergb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Resolution stuffs\n\tvec2 uv = fragCoord.xy / min(iResolution.x,iResolution.y);\n    uv.x -= 0.4;\n    //offset UV's to the centered\n    vec2 uvCent = uv * 2.0 - 1.0;\n    float Pi = 3.141592;\n    //basically a circle (length(uvCent), but with added wave using sin(radians + time)\n    //Use different wave for each colour channel to create colour shift effect\n    //This could be anything, not just a sinwave, like a scrolling texture for example.\n    float circleR = step(length(uvCent + sin(iTime + atan(uvCent.y, uvCent.x) * 19.97) * 0.013), 0.9);\n    float circleG = step(length(uvCent + sin(iTime - atan(uvCent.y, uvCent.x) * 26.23) * 0.031), 0.9);\n    float circleB = step(length(uvCent + sin(iTime + atan(uvCent.y, uvCent.x) * 22.62) * 0.0552), 0.9);\n    //return comped circles and invert it (for black circle on white bg)\n    vec4 RGBCircle = vec4(1.0) - vec4(circleR, circleG, circleB, 1.0); \n\tfragColor = RGBCircle;\n}","name":"Image","description":"","type":"image"}]}