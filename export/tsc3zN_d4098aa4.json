{"ver":"0.1","info":{"id":"tsc3zN","date":"1567941376","viewed":79,"name":"Electrifying IDA","username":"Dubko","description":"She's fresh, she's so fresh...","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","name","eletric","ida"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 div(vec2 a, vec2 b)\n{\n    return vec2(a.x/b.x, a.y/b.y);\n}\nfloat distToLine(vec2 uv, vec2 a, vec2 b)\n{\n    float d = abs(dot(div((uv-b), b-a),vec2(1.0,-1.0)));\n    vec2 diff = normalize(b-a);\n    mat2 m = mat2(diff.x,diff.y, -diff.y, diff.x);\n    vec2 p = (uv-a)*m;\n    p /= (length(b-a));\n    bool isOutOfLine = !(p.x > 0.0 && p.x < 1.0);\n    bool isOnLine = (p.x > 0.0 && p.x < 1.0);\n    \n    return 1.0/(exp(2.0*abs(p.y))-1.0)*(float(isOnLine));\n}\n\nfloat ida(vec2 uv)\n{\n    uv += vec2(0.5);\n    float mul = 0.01;\n    \n    float i = distToLine(uv, vec2(0.0), vec2(0.0,1.0));\n    float d = max(distToLine(uv, vec2(0.2,0.0), vec2(0.2,1.0))\n        \t, max(distToLine(uv, vec2(0.2,0.0), vec2(0.4,0.5))\n        \t, distToLine(uv, vec2(0.2,1.0), vec2(0.4,0.5))));\n    float a = max(distToLine(uv, vec2(0.6,0.0), vec2(0.8,1.0))\n            , distToLine(uv, vec2(1.0,0.0), vec2(0.8,1.0)));\n        \n    return max(mul*i, max(mul*d,mul*a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n   \n    uv -= vec2(0.5); \n    \n    float scale = tan((sin(iTime)+1.5)*0.5)*4.0;\n    uv *= scale;\n    vec2 uvBG = uv;\n    // Note: modulate UV.x using sinus and time\n    // Note: looks really cool\n    uvBG.x += 0.05*sin(iTime*30.0*uvBG.y);\n\n    // Time varying pixel color\n\tvec3 col = vec3(0.0);\n    //col.x = 0.01*distToLine(uv, vec2(0.2,0.2), vec2(0.2,0.5));\n    \n    col.x = ida(uv);\n    col.x += 0.1*ida(uvBG);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}