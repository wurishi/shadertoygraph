{"ver":"0.1","info":{"id":"DdlcDB","date":"1687175868","viewed":47,"name":"Fork Psychedeli djangounet 314","username":"djangounet","description":"Super colorful. Dutch color scheme goes boom!","likes":1,"published":1,"flags":16,"usePreview":0,"tags":["2d","plasma","colorful","psychedelic","weird","acid","dutchcolorscheme","rainbows"],"hasliked":0,"parentid":"MdsXDM","parentname":"Psychedelix"},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = ((fragCoord * 2.0 - iResolution.xy) / iResolution.y);\n    vec2 pos = (uv.xy);\n    vec2 cir = ((pos.xy * pos.xy + sin(uv.x*18.0+iTime) / 25.0 * sin(uv.y*7.0+iTime*1.5) / 1.0)+uv.x*sin(iTime)/16.0+uv.y*sin(iTime*1.2)/16.0);\n    float circles = (sqrt(abs(cir.x+cir.y*0.5)*5.0)*5.0);\n    \n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n\n        d = sin(d * 8.0 + iTime) / 8.0;\n        d = abs(d);\n        d = pow(0.01 / d, 1.2);\n\n        vec3 color = palette(length(uv0) + i*0.4 + iTime*.5);\n\n        finalColor += color * d;\n\n    }\n    \n\n\n    // Output to screen\n    fragColor = vec4(finalColor, 1.0) + vec4(sin(circles*1.25+2.0),abs(sin(circles*1.0-1.0)-sin(circles)),abs(sin(circles)*1.0), 1.0) / (cos(iTime) * 0.4 + 1.4);\n}","name":"Image","description":"","type":"image"}]}