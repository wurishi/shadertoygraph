{"ver":"0.1","info":{"id":"NdBczV","date":"1664501332","viewed":169,"name":"dark matter optics","username":"Carandiru","description":"dark matter optics - if too dark your gamma on your monitor might be a bit low.\n\n// edge of glass\n// edge of galaxy","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["orbit","pulsars"],"hasliked":0,"parentid":"-1","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":3,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// dark matter optics - if too dark your gamma on your monitor might be a bit low.\n\n// edge of glass\n// edge of galaxy\n\n#define luma vec3(0.2126f, 0.7152f, 0.0722f)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 offset = 64.0f * 1.0f / iResolution.xy;\n    \n    vec3 s0 = textureLod(iChannel0, uv, 0.0f).rgb;\n    vec3 s1 = textureLod(iChannel1, uv, 0.0f).rgb;\n    vec4 v = textureLod(iChannel2, uv, 0.0f);\n    v.xyz = normalize(v.xyz * 2.0f - 1.0f);\n    \n    vec3 normal0 = normalize(s0.xyz * 2.0f - 1.0f);\n    vec3 normal1 = normalize(s1.xyz * 2.0f - 1.0f);\n    \n    vec3 l = normalize(vec3(1.0f, 1.0f, -1.0f));\n    float l0 = 0.0f, l1 = 0.0f;\n    float dp = 1.0f;\n    \n    dp = abs(dot(normal0, v.xyz));\n    l0 += textureLod(iChannel0, uv + normalize(normal0.xy) * offset, 0.0f).a * dp;\n    l0 += textureLod(iChannel0, uv + normalize(normal0.yz) * offset, 0.0f).a * dp;\n    l0 += textureLod(iChannel0, uv + normalize(normal0.zx) * offset, 0.0f).a * dp;\n    \n    dp = abs(dot(normal1, v.xyz));\n    l1 += textureLod(iChannel1, uv + normalize(normal1.xy) * offset, 0.0f).a * dp;\n    l1 += textureLod(iChannel1, uv + normalize(normal1.yz) * offset, 0.0f).a * dp;\n    l1 += textureLod(iChannel1, uv + normalize(normal1.zx) * offset, 0.0f).a * dp;\n        \n    vec3 color0 = vec3(0.125,0.,1.) * l0;\n    vec3 color1 = vec3(0.125,0.,1.) * l1;\n    \n    vec3 color = vec3(0);\n    \n    //color = color0 + color1;\n    color = mix(color0, color1, v.a) + color * color + color * color * color + color * color * color * color + color * color * color * color * color;\n    color = color * 2.0f;\n    \n    float bn = textureLod(iChannel0, fragCoord / 1024.0f, 0.0f).r * (17.0f / 255.0f);\n    \n    color = pow(color, vec3(1.0f/2.2f));\n    \n    float ll = dot(color, luma);\n    \n    color = mix(color - bn, color + bn, ll);\n    \n    fragColor = vec4(color, 1.0f);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nconst float balls = 64.0f;\nfloat i = 0.0f;\nfloat t = 0.0f;\n\nfloat DistLine(vec3 ro, vec3 rd, vec3 p) {\n\treturn length(cross(p-ro, rd))/length(rd);\n}\n\nfloat map(in vec3 ro, in vec3 rd, in vec3 p)\n{\n    p += radius * i * vec3(cos(speed*t+pi*i), 0., -sin(-speed*t+pi*i));\n    \n    return DistLine(ro, rd, p - ro);\n}\n\nvec3 computeNormal(in vec3 ro, in vec3 rd, in vec3 uvw, in float dt)\n{\n\tvec4 offset = vec4(vec3(dt), 0.0f);\n\n\tvec3 gradient;\t\n\t\n\tgradient.x = map(ro, rd, uvw + offset.xww) - map(ro, rd, uvw - offset.xww);\n\tgradient.y = map(ro, rd, uvw + offset.wyw) - map(ro, rd, uvw - offset.wyw);\n\tgradient.z = map(ro, rd, uvw + offset.wwz) - map(ro, rd, uvw - offset.wwz);\n\n\treturn( normalize(gradient) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    t = iTime;\n    \n    vec3 ro = zoom*vec3(0., 0.5 - (7.0), -10. - (7.0));\n    vec3 rd = zoom*vec3(uv.x, uv.y, 0.)-ro;\n    rd = normalize(rd);\n    \n    float dt = golden_ratio_zero * 2.95f;\n    ro += rd * textureLod(iChannel1, fragCoord/1024.0f, 0.0f).r * dt;\n    \n    float d = 1e9f;\n    vec3 normal = vec3(0);\n    vec3 q = ro;\n    \n    for (i = golden_ratio ; i < balls; i += dt) {\n    \n       d = min(d, map(ro, rd, q));\n       normal = normalize(normal + computeNormal(ro, rd, q, dt));\n       \n       q += rd * dt;\n    }\n    d = abs(d);\n    \n    uv = fragCoord/iResolution.xy;\n    \n    float s1 = pow(.05/(d+0.), 0.5);\n    \n    float s3 = textureLod(iChannel0, uv, 0.0f).a;\n\n    s1 = s1 + (1.0f - exp(-s3))*s1;\n    \n    fragColor = vec4(normal * 0.5f + 0.5f,s1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nconst float balls = 64.0f;\nfloat i = 0.0f;\nfloat t = 0.0f;\n\nfloat DistLine(vec3 ro, vec3 rd, vec3 p) {\n\treturn length(cross(p-ro, rd))/length(rd);\n}\n\nfloat map(in vec3 ro, in vec3 rd, in vec3 p)\n{\n    p += radius * i * vec3(cos(speed*t+pi*i), 0., -sin(-speed*t+pi*i));\n    \n    return DistLine(ro, rd, p - ro);\n}\n\nvec3 computeNormal(in vec3 ro, in vec3 rd, in vec3 uvw, in float dt)\n{\n\tvec4 offset = vec4(vec3(dt), 0.0f);\n\n\tvec3 gradient;\t\n\t\n\tgradient.x = map(ro, rd, uvw + offset.xww) - map(ro, rd, uvw - offset.xww);\n\tgradient.y = map(ro, rd, uvw + offset.wyw) - map(ro, rd, uvw - offset.wyw);\n\tgradient.z = map(ro, rd, uvw + offset.wwz) - map(ro, rd, uvw - offset.wwz);\n\n\treturn( normalize(gradient) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    t = 1.0f/interval;\n    t = iTime + t;\n    \n    vec3 ro = zoom*vec3(0., 0.5 - (7.0), -10. - (7.0));\n    vec3 rd = zoom*vec3(uv.x, uv.y, 0.)-ro;\n    rd = normalize(rd);\n    \n    float dt = golden_ratio_zero * 2.95f;\n    ro += rd * textureLod(iChannel1, fragCoord/1024.0f, 0.0f).r * dt;\n    \n    float d = 1e9f;\n    vec3 normal = vec3(0);\n    vec3 q = ro;\n    \n    for (i = golden_ratio ; i < balls; i += dt) {\n    \n       d = min(d, map(ro, rd, q));\n       normal = normalize(normal + computeNormal(ro, rd, q, dt));\n       \n       q += rd * dt;\n    }\n    d = abs(d);\n    \n    uv = fragCoord/iResolution.xy;\n    \n    float s1 = pow(.05/(d+0.), 0.5);\n    \n    float s3 = textureLod(iChannel0, uv, 0.0f).a;\n\n    s1 = s1 + (1.0f - exp(-s3))*s1;\n    \n    fragColor = vec4(normal * 0.5f + 0.5f,s1);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define pi (3.14159265358979323846)\n#define golden_ratio (1.61803398874989484820)\n#define golden_ratio_zero (0.61803398874989484820)\n#define zoom 20.0f\n#define radius (0.5f)\n#define speed (0.12f)\n#define interval (3.0f)\n\n// polynomial smooth mins:\n// BEST - C2 (2nd Order) Derivative Continuity - cubic smin: from iq!\nfloat smin( in float a, in float b, in float k )\n{\n    float h = max( k-abs(a-b), 0.0f )/k;\n    return min( a, b ) - h*h*h*k*(1.0f/6.0f);\n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 s0 = textureLod(iChannel0, uv, 0.0f).xyz;\n    vec3 s1 = textureLod(iChannel1, uv, 0.0f).xyz;\n    \n    s0 = normalize(s0 * 2.0f - 1.0f);\n    s1 = normalize(s1 * 2.0f - 1.0f);\n    \n    vec3 v = normalize(s1 - s0);\n    \n    fragColor = vec4((v) * 0.5f + 0.5f,length(s1 - s0));\n}","name":"Buffer C","description":"","type":"buffer"}]}