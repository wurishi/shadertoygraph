{"ver":"0.1","info":{"id":"NdXyRS","date":"1642218210","viewed":191,"name":"Video color tiles","username":"CWBudde1","description":"Cut out tiles from a video and color the tiles in certain colors","likes":5,"published":1,"flags":2,"usePreview":0,"tags":["video","color","red","blue","blend","webcam","tile","rect","rounded"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 red = vec3(0.894,0.118,0.039);\nvec3 lightblue = vec3(0.384,0.725,0.914);\nvec3 blue = vec3(0.10,0.4,0.8);\n\nfloat RoundBox(vec2 p, float a) {\n p.x = p.x;\n p = abs(mod(p, vec2(3.1, 2.3)) - vec2(1.8, 1.5)) - vec2(1.1, 0.6);\n return smoothstep(0., 0.01, length(max(p, 0.)) - 0.1);\n}\n\nvoid mainImage(out vec4 oFragColor, in vec2 iFragCoord) {\n  vec2 uv = iFragCoord.xy / iResolution.xy;\n  vec3 col = texture(iChannel0, vec2(1.0-uv.x, uv.y)).xyz;\n  float g = 0.2126 * col.r + 0.7152 * col.g + 0.0722 * col.b;\n  g = 0.25 + 0.75 * pow(g, 1. / 3.0);\n\n  vec2 p = (2.*iFragCoord) / iResolution.y;\n  float r = 1.0 - RoundBox(p + 0.13 * iTime, 1.0);\n  float b = 1.0 - RoundBox(p + vec2(-0.1 * iTime, 0.5 + 0.1 * iTime), 1.0);\n  vec3 c = 1.0 - (r * (1.0 - g * red) + b * (1.0 - g * lightblue));\n  c = mix(c, blue, g * clamp((r + b) - 1.0, 0., 1.));\n\n  oFragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}