{"ver":"0.1","info":{"id":"NdSBDm","date":"1646373585","viewed":108,"name":"iridescence2","username":"xmonkee2","description":"Going for an oil on water effect","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["iridescence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define t iTime\n\n/*\nThe basic idea is \n1. Make concentric gradients\n2. Swirl it around\n\nThe concentric gradient is made by using\nthe distance from the origin to sample the texture\n\nThe swirling is done by transforming the coordiantes\nThis happens before the sampling though\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize\n    vec2 p = fragCoord/R;\n    // Origin at center\n    p -= 0.5;\n    // Fix aspect ratio\n    p.x *= R.x/R.y;\n    \n    vec2 q = p;\n    // Swirl it around \n    // (comment this out to see untransformed image)\n    q.x += sin(p.y*5.+t);\n    q.y += cos(p.x*5.+t);\n    \n    // Sample texture radially\n    float r = length(q);\n    vec4 col = texture(iChannel0, vec2(r/10.,.4));\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}