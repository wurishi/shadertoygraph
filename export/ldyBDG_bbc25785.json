{"ver":"0.1","info":{"id":"ldyBDG","date":"1530200430","viewed":131,"name":"Zebra Grid","username":"vjyourself","description":"Zebra shifting grid","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grid","zebra"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float ds(in float st, in float l0, in float l2){\n  float l1 = (l0+l2)*0.5;\n  return  smoothstep( l0, l1, st ) - smoothstep( l1, l2, st );\n}\n\nvec2 transUV(in vec2 uv){\n    vec2 uvt = uv;\n    uvt.x+=sin(uvt.x*26.0+iTime*0.6)*0.02;\n    uvt.y+=sin(uvt.y*22.0+iTime*0.6)*0.02;\n    return uvt;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying gradient\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\t//col = fract((uv.x+uv.y)*100.0) < 0.5 ? vec3(1.0,1.0,1.0) : vec3(0.0,0.0,0.0);\n    \n    // Grid\n    vec2 uvt = transUV(uv);\n    \n  \n   \tfloat zebra = ds(fract((uvt.x+uvt.y)*20.0),0.0,0.8);\n    vec3 colZebra = vec3(zebra);\n    \n    float countX=20.0;\n    float countY=12.0;\n    float width = 0.1;\n    float frakX =fract(uvt.x*countX);\n    float frakY =fract(uvt.y*countY);\n    float gridX = ds(frakX,0.0,width);\n    float gridY = ds(frakY,0.0,width);\n    \n    vec3 finalCol = col*zebra + vec3(gridX*0.3)+ vec3(gridY*0.3);\n    \n    // Output to screen\n    fragColor = vec4(finalCol,1.0);\n}","name":"Image","description":"","type":"image"}]}