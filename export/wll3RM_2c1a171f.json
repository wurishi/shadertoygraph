{"ver":"0.1","info":{"id":"wll3RM","date":"1555942913","viewed":376,"name":"experimental warping","username":"nils","description":"Based around the idea of offsetting the uv based on the pixel color and repeating that process. Can result in very different effects based on settings.","likes":4,"published":1,"flags":2,"usePreview":0,"tags":["warping","experimental","webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TAU = 6.3;\n\nfloat lerp(float a, float b, float ratio) {\n   \treturn a * (1.0 - ratio) + b * ratio;\n}\n\nfloat varyValue(float minValue, float maxValue, float factor1, float factor2) {\n\tfloat v = (0.5 + sin(factor1 * iTime) * 0.25 + sin(factor2 * iTime) * 0.25);\n    return minValue + v * (maxValue - minValue);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col;\n    \n    // settings\n    float timeScale = 0.5;\n    float stepSize = varyValue(0.01, 2., 1., 2.); //1.5;\n    int steps = int(varyValue(2.0, 4.0, 3., 5.));\n    float colorDistortion = varyValue(0.1, 5.0, .2, .1);//;3.0;\n    float greenFactor = varyValue(0.0, 2.0, .5, .7);\n    float wavyness = varyValue(0.0, 1.0, .1, .2);\n    \n    // step through image to find color\n    for(int i = 0; i < steps; i++) {  \n        col = texture(iChannel0, uv).rgb;\n        col = sqrt(col); \n        col = col * colorDistortion;\n     \tfloat d = (col.r + uv.x * wavyness + uv.y * wavyness + iTime * timeScale) * TAU;\n        uv = uv + vec2(cos(d), sin(d)) * lerp(col.g, 0.05, greenFactor) * stepSize;\n    }\n    \n    col = col / colorDistortion;\n    //col = vec3(1.0) - col;\n    \n    // contrast and brightness\n    col = col * 1.4 + 0.1;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}