{"ver":"0.1","info":{"id":"ltByzh","date":"1507573001","viewed":120,"name":"Reveal_Assignment","username":"matt_aquino0802","description":"One of my class assignments. The objective was to create a texture, blur it, and then \"reveal\" another texture, which was sharpened. The size of the reveal is adjustable, and there are a few different filters that can be applied.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["kernels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Reveal Shader: Hold down Left Mouse Button to move circle\n\n// change this value to change the circle size\nfloat mouseRadius = 0.1;\n\n// choices can be between 1 and 6\n/*\n\t1. Blur\n\t2. Sharpen\n\t3. Edge Detection\n\t4. Emboss\n\t5. Bottom Sobel\n\t6. No Filter\n*/\nint choice1 = 1;\nint choice2 = 5;\n\nmat3 blur = mat3(\n    0.111, 0.111, 0.111,\n    0.111, 0.111, 0.111,\n    0.111, 0.111, 0.111\n);\n\nmat3 sharpen = mat3(\n    0, -1, 0,\n    -1, 5, -1,\n    0, -1, 0\n);\n\nmat3 edgeDetection = mat3(\n    -1, -1, -1,\n    -1,  9, -1,\n    -1, -1, -1\n);\n\nmat3 emboss = mat3(\n    -2, -1,  0,\n    -1,  1,  1,\n     0,  1,  2\n);\n\nmat3 bottomSobel = mat3(\n    -1, -2, -1,\n     0,  0,  0,\n     1,  2,  1\n    \n);\n\nmat3 noFilter = mat3(\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0\n);   \n\nvec3 sample1(const int x, const int y, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n    uv = (uv + vec2(x,y)) / iChannelResolution[0].xy;\n    return texture(iChannel0, uv).xyz;\n    \n}\n\nvec3 filter1(in vec2 fragCoord, mat3 kernel)\n{\n    int row = -1;\n    int col = -1;\n    \n    vec3 sum = vec3(0.0);\n    \n    for (int i = 0; i < 3; i++)\n    {\n        for (int j = 0; j < 3; j++)\n        {\n            sum += sample1(row, col, fragCoord) * kernel[i][j];\n            col++;\n        }\n        row++;\n    }\n    \n    return sum;\n}\n\nvec3 sample2(const int x, const int y, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n    uv = (uv + vec2(x,y)) / iChannelResolution[0].xy;\n    return texture(iChannel1, uv).xyz;\n    \n}\n\nvec3 filter2(in vec2 fragCoord, mat3 kernel)\n{\n    int row = -1;\n    int col = -1;\n    vec3 sum = vec3(0.0);\n    \n    for (int i = 0; i < 3; i++)\n    {\n        for (int j = 0; j < 3; j++)\n        {\n            sum += sample2(row, col, fragCoord) * kernel[i][j];\n            col++;\n        }\n        row++;\n    }\n    \n    return sum;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y *= iResolution.y / iResolution.x;\n    \n    vec2 mousePos = iMouse.xy / iResolution.xy;\n    mousePos.y *= iResolution.y / iResolution.x;\n    \n  \n    float edge = step(length(mousePos - uv), mouseRadius);\n    vec2 fc = fragCoord.xy;\n    vec3 cf, cf2;\n    \n    // create the filter for the first texture\n    if (choice1 == 1)\n        cf = filter1(fc, blur);\n    if (choice1 == 2)\n        cf = filter1(fc, sharpen);\n    if (choice1 == 3)\n        cf = filter1(fc, edgeDetection);\n    if (choice1 == 4)\n        cf = filter1(fc, emboss);\n    if (choice1 == 5)\n        cf = filter1(fc, bottomSobel);\n    if (choice1 == 6)\n        cf = filter1(fc, noFilter);\n    \n    // create the filter for the second texture\n \tif (choice2 == 1)\n        cf2 = filter2(fc, blur);\n    if (choice2 == 2)\n        cf2 = filter2(fc, sharpen);\n    if (choice2 == 3)\n        cf2 = filter2(fc, edgeDetection);\n    if (choice2 == 4)\n        cf2 = filter2(fc, emboss);\n    if (choice2 == 5)\n        cf2 = filter2(fc, bottomSobel);\n    if (choice2 == 6)\n        cf2 = filter2(fc, noFilter);\n   \n    vec4 topTexture = vec4(cf, 1.0);\n    vec4 reveal = vec4(cf2, 1.0) * edge;\n   \n    vec4 Composite = mix(topTexture, reveal, reveal.a);\n    fragColor = Composite;\n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}