{"ver":"0.1","info":{"id":"mdlBW8","date":"1688700134","viewed":44,"name":"EncroachingDawn","username":"mammonmachine","description":"repeating water dawn","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 colorA = vec3(0.0824, 0.5843, 0.7373);\nvec3 colorB = vec3(0.9333, 0.9529, 0.7922);\n#ifndef PI\n#define PI 3.141592653589793\n#endif\n\n\nfloat easeOutQuint(in float x){\nreturn 1.0 - pow(1.0 - x, 5.0);\n}\n\n\nfloat backInOut(float t) {\n  float f = t < 0.5\n    ? 2.0 * t\n    : 1.0 - (2.0 * t - 1.0);\n\n  float g = pow(f, 3.0) - f * sin(f * PI);\n\n  return t < 0.5\n    ? 0.5 * g\n    : 0.5 * (1.0 - g) + 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n {\n    vec2 st = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.0);\n\n\n    float pct = backInOut(st.y) + ((sin(iTime)/5.)) + backInOut(st.x) + (sin(iTime)/1.) ;\n    pct = fract(pct);\n    // Mix uses pct (a value from 0-1) to\n    // mix the two colors\n    color = mix(colorA, colorB, pct);\n\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}