{"ver":"0.1","info":{"id":"MdVSDz","date":"1463934961","viewed":327,"name":"Particle Test","username":"Ape","description":"test","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["particles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float NUM_PARTICLES = 50.0;\n\nfloat lerp(float a, float b, float w) {\n    return a*w + b*(1.0 - w);\n}\n\nvec4 getParticleLight(float particle, vec2 coord) {\n    float factor = particle / NUM_PARTICLES;\n\n    float red = 1.3*sin(0.05*iTime);\n    float blue = 1.3*cos(0.05*iTime);\n    vec4 color = (0.02 / NUM_PARTICLES) * factor\n        * vec4(0.5 + lerp(red*red, 0.5, factor), 1.0,\n               0.5 + lerp(blue*blue, 0.5, factor), 1.0);\n\n    float scale = 0.05 + 0.4 * factor\n        * (0.8 - 0.3*cos(iTime) - 0.1*cos(2.0*iTime));\n\n    vec2 location = scale * vec2(\n        cos((3.0 + 5.2 * factor) * iTime),\n        sin((3.2 + 5.0 * factor) * iTime)\n    );\n\n    vec2 diff = location - coord;\n    float r2 = (diff.x*diff.x + diff.y*diff.y);\n    return color / r2;\n}\n\nvec2 normalizeCoord(vec2 fragCoord) {\n    float scale = min(iResolution.x, iResolution.y);\n\n    return vec2((fragCoord.x - iResolution.x/2.0) / scale,\n                (fragCoord.y - iResolution.y/2.0) / scale);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 coord = normalizeCoord(fragCoord);\n    fragColor = vec4(0.0, 0.0, 0.0, 0.0);\n\n    for (float i = 1.0; i <= NUM_PARTICLES; ++i) {\n        fragColor += getParticleLight(i, coord);\n    }\n}","name":"Image","description":"","type":"image"}]}