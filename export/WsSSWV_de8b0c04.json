{"ver":"0.1","info":{"id":"WsSSWV","date":"1554911450","viewed":121,"name":"evankh_Dithering","username":"evankh","description":"Basic ordered dithering.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float threshold[] = float[](0.0, 0.75, 0.25, 0.5);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    int x = int(fragCoord.x) & 0x1;\n    int y = int(fragCoord.y) & 0x1;\n    vec4 s = texture(iChannel0, uv);\n    \n    // Black & white\n    //float v = dot(normalize(vec4(0.3, 0.8, 0.15, 0.0)), s);\n    //float f = step(threshold[2 * y + x], v);\n    //vec3 col = vec3(f);\n    \n    // 8-color\n    vec3 col = step(1.-threshold[2 * y + x], s.xyz);\n\n    // Time varying pixel color\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}