{"ver":"0.1","info":{"id":"ctSBzw","date":"1693857158","viewed":59,"name":"book of shaders introduction","username":"joo","description":"how can i make this look cool","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cross"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265359\n\nmat2 rotate2d(float _angle){\n\nreturn mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\nfloat box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat crossy(in vec2 _st, float _size){\n    return  box(_st, vec2(_size,_size/4.)) +\n            box(_st, vec2(_size/4.,_size));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5* iResolution.xy ) / iResolution.y;\n    vec3 color = vec3(0.0);\n\n    uv = scale( vec2(tan(iTime*0.2)+3.0) ) * uv;\n    uv += rotate2d( sin(iTime*2.)*PI ) * uv;\n    \n    color += vec3(crossy(uv,1.8));\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}