{"ver":"0.1","info":{"id":"4dGGWm","date":"1454673855","viewed":157,"name":"NAryTree","username":"jt","description":"A n-ary tree.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["narytree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// N-Ary Tree - written 2015 by Jakob Thomsen\n\n/*\n// my original version\n#define levels 3.\n\nvec2 NAryTreeSubDiv2(vec2 v, float n)\n{\n    v.y *= levels;\n    float y = floor(v.y);\n    float z = fract(v.y);\n    //v.x -= .5;\n    v.x *= pow(n, y);\n    //v.x *= mix(1., n, z);\n    //v.x *= n;\n    //v.x += .5;\n    v = fract(v);\n    return v;\n}\n\nvoid mainImage( out vec4 o, vec2 U )\n{\n    U /= iResolution.xy;\n    //float n = 7.;\n    float n = 2. * mod(floor(iTime), 8.) + 1.;\n    //float m = fract(n * 2.) / 2.;\n    float r = fract(U.y * levels);\n    float s = pow(n, floor(U.y * levels)) / 2.;\n    U = NAryTreeSubDiv2(U, n);\n    o = vec4(1);\n    //o -= o;\n    //o.xy += U;\n    //if(abs(U.x - .5) / r <= .5)\n    o *= 1. - step(abs(U.x - .5) / r, .5) * (1. - smoothstep(.0, n*s/100., r*abs(fract((U.x - 0.5) * n / r) - .0)));\n    //U.x =  n * abs(U.x - .5);\n    //o += smoothstep(.0, .1, abs(fract(U.x*5.) - U.y)/s);\n    //o += smoothstep(.0, .1, abs(U.x - U.y)/s);\n}\n*/\n\n#define levels 3.\n\n// Improved version by FabriceNeyret2\nvoid mainImage( out vec4 o, vec2 U )\n{\n    U /= iResolution.xy; \n    U.y *= levels;\n    \n    float n = mod(ceil(iDate.w), 8.) + 1.,\n          r = fract(U.y), // original (linear) form\n          //r = .5-.5*cos(fract(U.y)*3.1415926), // another sine-tree :)\n          //r = pow(fract(U.y),.5), // suggested by FN2\n          s = pow(n, floor(U.y)),\n          x = fract(U.x*s) - .5 ;\n\n    //o = vec4( abs(x/r) > .5 ? 1. : smoothstep(0.,n*s/4e2, r*abs( fract( x*n/r + n/2. ) - .5))); // simple but with gaps\n    float xx = x*n/r + n/2. ,\n    ss = n*s/r / 4e2 ;\n    o = vec4( min(1., abs( (abs(x/r) > .5 ? xx : fract(xx) ) - .5) / ss )); // FN2's \"pretty printing\" solution by redrawing\n}\n","name":"Image","description":"","type":"image"}]}