{"ver":"0.1","info":{"id":"3sXGW2","date":"1547478284","viewed":245,"name":"Hurtful Love - Reuploaded","username":"ReavenTehDerg","description":"I had to delete my previous account.So im reuploading this here.Even though i removed this shader, webpage still says this shader exist.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colorful","heart","multiscene"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(float value, float t)\n{\n    return value / 1.0 * t;\n}\nfloat map2(float value, float fromSource, float toSource, float fromTarget, float toTarget)\n{\n    return (value - fromSource) / (toSource - fromSource) * (toTarget - fromTarget) + fromTarget;\n}\nfloat N21(vec2 p)\n{\n    p = fract(p * vec2(8356.655414, 645.8778));\n    p += dot(p, p + 72.724);\n    return fract(p.x * p.y);\n}\nvec2 N22(vec2 p)\n{\n    float x = N21(p);\n    float y = N21(p + x);\n    return vec2(x, y);\n}\nvec2 GetPos(vec2 id)\n{\n    vec2 n = N22(id) * iTime;\n    return sin(n) * .4;\n}\nvec3 HeartScene(vec2 uv, vec3 color)\n{    \n    float beat = abs(sin(iTime * 0.3));\n    uv.x *= map2(sin(iTime * 0.6), -1.0, 1.0, 0.7, 1.5);\n    uv.y *= map2(cos(iTime * 0.7), -1.0, 1.0, 1.0, 1.1);\n    uv.y -= sqrt(abs(uv.x * 0.7)) * 0.5;\n    \n    float c = smoothstep(0.3, map(beat, .29), length(uv));\n    if(c > 0.0) color += c;\n\n    return color;\n}\nvec3 DepressionScene(vec2 uv)\n{\n\n    vec3 color = vec3(1.0);\n    color = vec3(uv.x + sin(iTime)) * vec3(0.2, 0.6, 0.9);\n    color *= HeartScene(uv, color);\n    color *= mod(gl_FragCoord.x * gl_FragCoord.y, 2.0);\n    return color;\n}\nfloat GenerateFlake(vec2 uv)\n{\n    uv *= 4.0;\n    uv.y += iTime / 2.;\n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    //if(gv.x > 0.49 || gv.y > 0.49) color = vec3(1, 0, 0);\n\n    \n    vec2 p = GetPos(id);\n    float d = length(gv - p);\n    float flake = smoothstep(0.1, 0.0, d) / (d * 100.);\n    return flake;\n}\nvec3 RotatingGradientBG(vec2 uv, vec3 color)\n{\n    float cosTime = cos(iTime);\n    float sinTime = sin(iTime);\n    vec2 rotUV = uv * mat2(cosTime, -sinTime, sinTime, cosTime);\n    color *= vec3(rotUV, 0.8);\n    return color;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y * 2.;\n\n    vec3 color = vec3(1.0);\n    float fade = clamp(5.0 * sin(iTime * 0.4), -1.0, 1.0);\n\n    if(fade >= 0.0)\n    {\n        color *= RotatingGradientBG(uv, color);\n        color *= HeartScene(uv, color);\n        color += GenerateFlake(uv);\n        color = color * abs(fade);\n    }\n    if(fade < 0.0)\n    {\n        color = DepressionScene(uv);\n        color = color * abs(fade);\n    }\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}