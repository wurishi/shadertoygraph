{"ver":"0.1","info":{"id":"dslfWM","date":"1689068174","viewed":82,"name":"Lovesick (interactive)","username":"PhiVape","description":"Use your mouse to change the color!!\nTop = pink, white, blue\nBottom = red, pink\nRight = rainbow\nLeft = blue, brown\n\nMade by me!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","interactive","psychedelic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dot2( in vec2 v ) { return dot(v,v); }\nfloat sdHeart( in vec2 p ) {\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec3 palette1( float t ) {\n\n    vec3 a = vec3(3.138, 0.460, 0.770);\n    vec3 b = vec3(0.000, 0.370, 0.190);\n    vec3 c = vec3(1.108, 1.180, 2.380);\n    vec3 d = vec3(0.000, 0.003, 0.007);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\nvec3 palette2( float t ) {\n\n    vec3 a = vec3(0.870, 1.129, 1.097);\n    vec3 b = vec3(0.877, 0.575, 0.271);\n    vec3 c = vec3(0.578, 1.260, 1.530);\n    vec3 d = vec3(0.298, 2.284, 1.392);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\nvec3 palette3( float t ) {\n\n    vec3 a = vec3(0.550, 0.580, 0.550);\n    vec3 b = vec3(0.500, 0.500, 0.500);\n    vec3 c = vec3(2.025, 2.025, 2.025);\n    vec3 d = vec3(0.110, 0.333, 0.577);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\nvec3 palette4( float t ) {\n\n    vec3 a = vec3(0.718, 0.768, 0.548);\n    vec3 b = vec3(0.515, 0.550, 0.550);\n    vec3 c = vec3(1.120, 1.120, 1.120);\n    vec3 d = vec3(0.000, 0.333, 0.667);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    float M_PI = 3.1415926535897932384626433832795;\n    float my = iMouse.y/iResolution.y;\n    float mx = iMouse.x/iResolution.x;\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    \n    //rotating and moving space\n    uv.xy += vec2(3.*sin(iTime/10.), 3.*sin(iTime/10.));\n    uv = uv * rotate2d((iTime)/6.);\n    \n    //moving bands vertically, direction based on x\n    uv.y += 2.*(1./3.)*((mod(floor(uv.x*2.), 2.)*2.-1.)*iTime/10.);\n    //moving bands horizontally, direction based on y\n    uv.x += 3.*(1./2.)*(mod(floor(uv.y*2.), 2.)*2.-1.)*iTime/10.;\n    //duplicating space\n    float evencol = mod(floor(2.*uv.x), 2.)*2.-1.;\n    float evenrow = mod(floor(2.*uv.y), 2.)*2.-1.;\n    uv.x = fract((evenrow*2.*(uv.x)))/(0.5)-1.;\n    uv.y = fract((evencol*2.*(uv.y)))/(0.5)-1.;\n    \n    //color gradient based on heart\n    float d = sdHeart(uv.xy-vec2(0.,-0.6));\n    d = d * 2.;\n    d = sqrt(abs(d));\n    d = d + 0.1*iTime;\n    float a = 3.;\n    float f = fract(d);\n    d = floor(a*d)/a;\n    d += pow(f,1.5);\n    \n    //coloring\n    vec3 col1 = palette1(0.5*iTime+d); //red pink\n    vec3 col2 = palette2(0.5*iTime+d); // pink white blue\n    vec3 col3 = palette3(0.5*iTime+d); //blue brown \n    vec3 col4 = palette4(0.5*iTime+d); //total rainbow\n    float my_s = 2.*my-0.5;\n    float mx_s = 2.*mx-0.5;\n    vec3 col1_5 = mix(col1, col2, smoothstep(0., 1., my_s));\n    vec3 col3_5 = mix(col3, col4, smoothstep(0., 1., mx_s));\n    my = abs(my-0.5);\n    mx = abs(mx-0.5);\n    vec3 col = mix(col1_5, col3_5, smoothstep(0., 1., 2.*mx/(my+mx)-0.5));\n    //darken\n    vec3 black = vec3(sin(iTime)*0.5+0.5, 0.1,cos(0.5*iTime)*0.5+0.5);\n    col = mix(col, black, 0.2);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}