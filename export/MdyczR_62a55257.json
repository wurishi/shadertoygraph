{"ver":"0.1","info":{"id":"MdyczR","date":"1520786160","viewed":115,"name":"Mandelbrot generator","username":"JakubJ","description":"Generates mandelbrot set for my homework","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 ds_convert(float a)\n{\n    vec2 z;\n    z.x = a;\n    z.y = 0.0;\n    return z;\n}\n\nvec2 ds_add (vec2 dsa, vec2 dsb)\n{\n    vec2 dsc;\n    float t1, t2, e;\n\n    t1 = dsa.x + dsb.x;\n    e = t1 - dsa.x;\n    t2 = ((dsb.x - e) + (dsa.x - (t1 - e))) + dsa.y + dsb.y;\n\n    dsc.x = t1 + t2;\n    dsc.y = t2 - (dsc.x - t1);\n    return dsc;\n}\nvec2 ds_mul (vec2 dsa, vec2 dsb)\n{\n    vec2 dsc;\n    float c11, c21, c2, e, t1, t2;\n    float a1, a2, b1, b2, cona, conb, split = 8193.;\n\n    cona = dsa.x * split;\n    conb = dsb.x * split;\n    a1 = cona - (cona - dsa.x);\n    b1 = conb - (conb - dsb.x);\n    a2 = dsa.x - a1;\n    b2 = dsb.x - b1;\n\n    c11 = dsa.x * dsb.x;\n    c21 = a2 * b2 + (a2 * b1 + (a1 * b2 + (a1 * b1 - c11)));\n\n    c2 = dsa.x * dsb.y + dsa.y * dsb.x;\n\n    t1 = c11 + c2;\n    e = t1 - c11;\n    t2 = dsa.y * dsb.y + ((c2 - e) + (c11 - (t1 - e))) + c21;\n\n    dsc.x = t1 + t2;\n    dsc.y = t2 - (dsc.x - t1);\n\n    return dsc;\n}\n\nvec2 ds_sub (vec2 dsa, vec2 dsb)\n{\nvec2 dsc;\nfloat e, t1, t2;\n\n t1 = dsa.x - dsb.x;\n e = t1 - dsa.x;\n t2 = ((-dsb.x - e) + (dsa.x - (t1 - e))) + dsa.y - dsb.y;\n\n dsc.x = t1 + t2;\n dsc.y = t2 - (dsc.x - t1);\n return dsc;\n}\n\nfloat ds_compare(vec2 dsa, vec2 dsb)\n{\n if (dsa.x < dsb.x) return -1.;\n else if (dsa.x == dsb.x) \n\t{\n\tif (dsa.y < dsb.y) return -1.;\n\telse if (dsa.y == dsb.y) return 0.;\n\telse return 1.;\n\t}\n else return 1.;\n}\n\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 mandelbrot(vec2 rl, vec2 im, int degree) {\n    vec2 zrl = vec2(0.0, 0.0);\n    vec2 zim = vec2(0.0, 0.0);\n\n    for (int i = 0; i < degree; i++) \n    {\n        vec2 tmp = zrl;\n        zrl = ds_add(ds_sub(ds_mul(zrl, zrl), ds_mul(zim, zim)), rl);\n        zim = ds_add(ds_mul(ds_convert(2.0), ds_mul(tmp, zim)), im);\n        \n        if (ds_compare(ds_add(ds_mul(zrl, zrl), ds_mul(zim, zim)), ds_convert(4.0)) > 0.0) {\n        \treturn vec3(hsv2rgb(vec3(float(i)/30.0, 1.0, 1.0)));\n        }\n    }\n    return vec3(0.0, 0.0, 0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 scale = vec2(1.0/pow((iTime+10.0)/10.0, (iTime+10.0)/10.0), 1.0/pow((iTime+10.0)/10.0, (iTime+10.0)/10.0));\n    vec2 offset = vec2(-0.7, 0.35);\n    \n\tvec2 uvx = ds_add(ds_mul(ds_mul(ds_add(ds_convert(fragCoord.x/iResolution.x), ds_convert(-0.5)), ds_convert(1.6)), ds_convert(scale.x)), ds_convert(offset.x));\n    vec2 uvy = ds_add(ds_mul(ds_mul(ds_add(ds_convert(fragCoord.y/iResolution.y), ds_convert(-0.5)), ds_convert(0.9)), ds_convert(scale.y)), ds_convert(offset.y));\n\n    fragColor = vec4(mandelbrot(uvx, uvy, 1000),1.0);\n}","name":"Image","description":"","type":"image"}]}