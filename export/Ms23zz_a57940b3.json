{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float min_dist(vec2 v, vec2 w, vec2 p)\n{\n    float t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) /\n                    ((w.x - v.x) * (w.x - v.x) + (w.y - v.y) * (w.y - v.y));\n    if (t < 0.0)\n        return distance(p, v);\n    else if (t > 1.0)\n        return distance(p, w);\n    vec2 op = v + t * (w - v);\n    return distance(p, op);\n}\n\nfloat rand(float _seed)\n{\n    return fract(sin(_seed+137.0) * 43758.5453);\n}\n\nfloat ll3(vec2 p1, vec2 p2, vec2 uv)\n{\n\tvec2 plast;\n\t\t\n\tfloat mind = 1000000.0;\n\t\n\tplast = p1;\n\t\n\tfloat seed = rand(floor(iTime*40.0));\n\t\n\tfor (int i=0; i < 2; i++)\n\t{\n\t\tfloat tt = float(i+1) / 3.0;\n\t\t\n\t\tvec2 pt = p1 + ((p2 - p1) * tt);\n\t\tfloat a = rand(seed) * 3.141592 * 2.0;\n\t\tvec2 pn = pt + vec2(cos(a), sin(a)) * rand(seed) / ((abs(tt-0.5)+1.0)*90.0);\n\t\t\n\t\tfloat d = min_dist(plast, pn, uv);\n\t\tif (d < mind)\n\t\t\tmind = d;\n\t\t\n\t\tplast = pn;\n\t\tseed = rand(seed);\n\t}\n\t\n\tfloat d = min_dist(plast, p2, uv);\n\tif (d < mind)\n\t\treturn d * 3.0;\n\telse\n\t\treturn mind * 5.0;\n}\n\n\nfloat ll2(vec2 p1, vec2 p2, vec2 uv)\n{\n\tvec2 plast;\n\t\t\n\tfloat mind = 1000000.0;\n\t\n\tplast = p1;\n\t\n\tfloat seed = rand(floor(iTime*15.0));\n\t\n\tfor (int i=0; i < 3; i++)\n\t{\n\t\tfloat tt = float(i+1) / 4.0;\n\t\t\n\t\tvec2 pt = p1 + ((p2 - p1) * tt);\n\t\tfloat a = rand(seed) * 3.141592 * 2.0;\n\t\tvec2 pn = pt + vec2(cos(a), sin(a)) * rand(seed) / ((abs(tt-0.5)+1.0)*30.0);\n\t\t\n\t\tfloat d = min_dist(plast, pn, uv);\n\t\tif (d < mind)\n\t\t\tmind = d;\n\n\t\tvec2 pn2 = pn + vec2(cos(a), sin(a)) * rand(seed) / ((abs(tt-0.5)+1.0)*rand(seed)*30.0);\n\t\td = ll3(pn, pn2, uv);\n\t\tif (d < mind)\n\t\t\tmind = d;\n\t\t\n\t\tplast = pn;\n\t\tseed = rand(seed);\n\t}\n\t\n\tfloat d = min_dist(plast, p2, uv);\n\tif (d < mind)\n\t\treturn d * 3.0;\n\telse\n\t\treturn mind * 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / max(iResolution.x, iResolution.y);\n\tvec2 p1 = vec2(0.1, 0.3),\n\t\t plast,\n\t\t p2 = vec2(0.9, 0.3);\n\t\t\n\tfloat mind = 1000000.0;\n\t\n\tplast = p1;\n\t\n\tfloat seed = rand(floor(iTime*10.0));\n\t\n\tfor (int i=0; i < 14; i++)\n\t{\n\t\tfloat tt = float(i+1) / 15.0;\n\t\t\n\t\tvec2 pt = p1 + ((p2 - p1) * tt);\n\t\tfloat a = rand(seed) * 3.141592 * 2.0;\n\t\tvec2 pn = pt + vec2(cos(a), sin(a)) * rand(seed) / ((abs(tt-0.5)+1.0)*9.0);\n\t\t\n\t\tfloat d = min_dist(plast, pn, uv);\n\t\tif (d < mind)\n\t\t\tmind = d;\n\t\t\n\t\tvec2 pn2 = pn + vec2(cos(a), sin(a)) * rand(seed) / ((abs(tt-0.5)+1.0)*rand(seed)*6.0);\n\t\td = ll2(pn, pn2, uv);\n\t\tif (d < mind)\n\t\t\tmind = d;\n\t\t\n\t\tplast = pn;\n\t\tseed = rand(seed);\n\t}\n\t\n\tfloat d = min_dist(plast, p2, uv);\n\tif (d < mind)\n\t\tmind = d;\n\t\n\tmind *= 10.0;\n\tmind += 1.0;\n\tmind = 1.0 / (mind*mind*mind*mind);\n\n\tfragColor = vec4(1.0, 1.0, 1.0, 1.0) * mind;\n\tfragColor.r *= mind;\n\tfragColor.g *= mind;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Ms23zz","date":"1383114110","viewed":591,"name":"2D lightning test","username":"chadams","description":"testing lightning","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["lightning2d"],"hasliked":0,"parentid":"","parentname":""}}