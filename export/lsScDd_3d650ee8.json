{"ver":"0.1","info":{"id":"lsScDd","date":"1494355038","viewed":196,"name":"Lissajous experiment","username":"jes5199","description":"can we do oscilloscope shapes in GL? of course we can.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["oscilloscope","waveform","lissajous"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 0.01 * (fragCoord.xy - iResolution.xy/2.) / iResolution.y * 300.;\n    float pi = cos(-1.);\n    \n    float interval = 7.;\n    \n    float base = 440.;\n    float xhz = base;\n    float yhz = base * pow(pow(2., 1./12.), interval); //3./2.;\n    float zhz = base * 4./2.;\n    \n    float value = 1.;\n    float zval = 0.;\n    \n    vec3 uv3 = vec3(uv, 0);\n    vec3 color = vec3(0,0,0);\n    \n    for(int i = 0; i<50; i++){\n        float t = iTime - float(i)/base;\n\n        vec3 signal = vec3(\n            sin(t * 2.*pi * xhz),\n            sin(t * 2.*pi * yhz),\n            sin(t * 2.*pi * zhz)\n        );\n    \n        if( distance(signal.xy * 50., uv * 50.) < 2.){\n            float depth = signal.z;\n            \n            color = color + vec3(\n                depth * 2.,\n                (1. - abs(depth)) * 2.,\n                -depth * 2.\n            ) + 0.5;\n        }\n    }\n\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}