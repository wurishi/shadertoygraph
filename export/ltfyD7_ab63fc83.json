{"ver":"0.1","info":{"id":"ltfyD7","date":"1505062529","viewed":3292,"name":"Power City","username":"fizzer","description":"Uses hybrid distance field raymarching and uniform grid traversal. Drag mouse to rotate the view.","likes":84,"published":1,"flags":0,"usePreview":0,"tags":["voxel","city","power"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float box(vec3 p,vec3 o,vec3 s)\n{\n    p=abs(p-o)-s;\n    return max(p.x,max(p.y,p.z));\n}\n\nfloat hash(float n)\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise(vec3 p)\n{\n    return hash(p.x + p.y*57.0 + p.z*117.);\n}\n\nfloat noise(vec2 p)\n{\n    return hash(p.x + p.y*57.0);\n}\n\nfloat valnoise(vec2 p)\n{\n    vec2 c=floor(p);\n    vec2 f=smoothstep(0.,1.,fract(p));\n    return mix (mix(noise(c+vec2(0,0)), noise(c+vec2(1,0)), f.x),\n                mix(noise(c+vec2(0,1)), noise(c+vec2(1,1)), f.x), f.y);\n}\n\nfloat dist(vec3 p)\n{\n    float d=1e3;\n\n    vec3 p2=p;\n    float s=1.;\n    for(int i=0;i<4;++i)\n    {\n        p2.xz=abs(p2.xz);   \n        float cl=max(max(p2.x,p2.z),dot(p2.xz,normalize(vec2(1))));\n        float r=20.;\n        cl=min(cl-r+1.,max(box(vec3(p2.x,mod(p2.y,10.)-5.,p2.z),vec3(0),vec3(r,6.,r)),cl-r));\n        cl=max(cl,p2.y-50.+float(i)*80.);\n        if(i==3)cl=max(cl,p.y+25.);\n        cl/=s;\n        if(i==2)cl=max(cl,dot(p.yz-vec2(0,25),normalize(vec2(1))));\n        d=min(d,cl);\n        p2*=2.;\n        p2.xz=mod(p2.xz,100.)-50.;\n        s*=2.;\n    }\n\n    p2=abs(p-vec3(74,0,-35));\n    float cl=max(max(p2.x,p2.z),dot(p2.xz,normalize(vec2(1))))-6.;\n    d=min(d,cl);\n\n    p2=p;\n\n    d=min(d,distance(p,vec3(0,50,0))-14.);\n\n    {\n        vec3 p2=p;\n        p2.xz=mod(p2.xz,10.)-5.;\n        p2.xz=abs(p2.xz);\n        d=min(d,p.y+52.+max(p2.x,p2.z));\n    }\n\n    {\n        vec3 p2=p;\n        p2.xz=mod(p2.xz,80.)-40.;\n        p2.xz=abs(p2.xz);\n        d=min(d,p.y+41.+max(p2.x,p2.z));\n    }\n\n    d=min(d,max(p.y+15.,p.z+60.));\n\n    d=min(d,max(box(p,vec3(0,-70,0),vec3(31)), -box(p,vec3(0,-25,0),vec3(20))));\n\n    d=min(d,box(p,vec3(0,30,19),vec3(15,9,2)));\n\n    d=max(d,box(p,vec3(0),vec3(85,64,67)));\n\n\n    p2=p;\n    for(int i=0;i<4;++i)\n    {\n        vec3 p3=p2;\n        p2.y-=cos(float(i)*9.)*23.;\n        p3.xz=min(p3.xz,1.);\n        float rr=distance(p3.xz,normalize(p3.xz)*27.)-5.;\n        d=min(d,max(rr,abs(p3.y)-2.));\n        p2.xz=p2.zx*vec2(1,-1);\n    }\n\n    d=max(d,box(p,vec3(0),vec3(85,64,67)+40.));\n\n\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 t = fragCoord.xy / iResolution.xy-.5;\n\tt.x*=iResolution.x/iResolution.y;\n    t*=1.4;\n    \n    vec3 fog=vec3(.5,.5,1);\n\n    vec2 p=t.xy;\n    vec2 ot=t;\n\n    vec3 backg=vec3(0.75,1,.75)/3.*exp(-length(ot.xy)/2.);\n\n    vec3 ro=vec3(0,-20,380.);\n    vec3 rd=vec3(p,-3.);\n\n\n    {\n        float ang=0.3-iMouse.y/iResolution.y*.5;\n        ro.yz*=mat2(cos(ang),sin(ang),-sin(ang),cos(ang));\n        rd.yz*=mat2(cos(ang),sin(ang),-sin(ang),cos(ang));\n    }\n\n\n    {\n        float ang=0.6-iMouse.x/iResolution.x*.5;\n        ro.xz*=mat2(cos(ang),sin(ang),-sin(ang),cos(ang));\n        rd.xz*=mat2(cos(ang),sin(ang),-sin(ang),cos(ang));\n    }\n\n    ro+=rd*90.;\n\n    vec3 co=ro;\n    rd=normalize(rd);\n    vec3 ord=rd;\n\n    vec3 f=vec3(1.),a=vec3(0.);\n    float s=1.;\n    vec3 n;\n    for(int j=0;j<6;++j)\n    {\n        vec3 oro=ro;\n\n        float t=0.;\n        for(int i=0;i<20;++i)\n        {\n            ro=oro+rd*t;\n            float d=dist(ro);\n            if(d<1.-4.)\n            {\n                break;\n            }\n            t+=d;\n        }\n        if(t>200.)\n        {\n            fragColor.rgb=backg;\n            fragColor.rgb+=noise(gl_FragCoord.xy)/200.;\n\n            return;\n        }\n\n\n\n        oro=ro;\n        vec3 c=floor(ro);\n        vec3 ts=(c+max(vec3(0.),sign(rd))-ro)/rd;\n\n        for(int i=0;i<25;++i)\n        {\n            n=step(ts,ts.yzx)*step(ts,ts.zxy);\n            c+=sign(rd)*n;\n            float d=dist(c);\n            vec3 dd=sign(rd)/rd*n;\n            if(d<-1.7)\n            {\n                ro=oro+rd*min(ts.x,min(ts.y,ts.z));\n                break;\n            }\n            ts+=dd;\n        }\n        ro=oro+rd*min(ts.x,min(ts.y,ts.z));\n    }\n\n    float fogstrength=.0001;\n    vec3 ld=normalize(vec3(6,-2,1.4));\n    float sh=1.;\n    {\n        ro-=rd*1e-5;\n        vec3 oro=ro;\n        vec3 rd=ld;\n        vec3 c=floor(ro);\n        vec3 ts=(c+max(vec3(0.),sign(rd))-ro)/rd,n;\n\n        for(int i=0;i<4;++i)\n        {\n            n=step(ts,ts.yzx)*step(ts,ts.zxy);\n            c+=sign(rd)*n;\n            float d=dist(c);\n            vec3 dd=sign(rd)/rd*n;\n            if(d<-1.7)\n            {\n                sh=0.;\n                break;\n            }\n            ts+=dd;\n        }\n    }\n\n    vec3 rp=floor(ro);\n    fragColor.rgb=exp(-(rp.y+68.)/8.)*vec3(.5,1.,1.)*2.*mix(.8,1.,.5+.5*cos(iTime*17.));\n\n    fragColor.rgb+=((.75+.25*dot(n*-sign(rd),ld)))*mix(.5,1.,sh)*.01;\n\n    fragColor.rgb+=smoothstep(.96,.97,abs(cos(rp.x)*cos(rp.y+5.)*cos(rp.z)));\n    fragColor.rgb+=.1*smoothstep(.96,.97,abs(cos(rp.x*8.)*cos(rp.y+5.)*cos(rp.z*9.)));\n\n    float g=mod(rp.x+floor(rp.y/20.)*4.,40.);\n    fragColor.rgb+=.01*step(abs(mod(rp.y,20.)-clamp(min(g,40.-g),10.,15.)),.5);\n\n    if(length(rp.xz)<18.5)\n        fragColor.rgb+=.003;\n\n    fragColor.rgb+=(1.-smoothstep(0.,10.,distance(rp,vec3(0.,50.,0.))-14.))*vec3(.5,1,1)*.03;\n    fragColor.rgb+=(1.-smoothstep(0.,1.,distance(rp,vec3(0.,50.,0.))-14.))*vec3(.5,1,1)*.5*clamp((rp.y-50.)/50.,0.,1.);\n\n    if(rp.y>60.)\n        fragColor.rgb+=.2;\n\n    if(rp.y<-45.)\n        fragColor.rgb+=step(.9,noise(rp))*.1;\n\n    {\n        float sd=box(rp,vec3(0,30,19),vec3(15,8,2));\n        if(sd<0.)\n            fragColor.rgb*=.1;\n    }\n\n    vec3 screencolor=vec3(1,1,.7);\n    {\n        float sd=box(rp,vec3(0,30,19),vec3(12,6,2));\n        vec3 rp2=rp-vec3(0,30,19);\n        if(sd<0.)\n            fragColor.rgb+=.5*step(1.,abs(mod(rp2.y-cos(rp2.x/1.5+iTime)*2.,5.)))*screencolor;\n    }\n\n    fragColor.rgb+=mix(.8,1.,.5+.5*cos(iTime*7.))*screencolor*10./pow(distance(rp,vec3(0,30,15)),2.)*smoothstep(0.,16.,rp.z-17.);\n\n\n    float fogamount=exp(-distance(ro,co)*fogstrength/3.);\n    fragColor.rgb=mix(vec3(.5,1,.5),fragColor.rgb,fogamount);\n\n    fragColor.rgb=sqrt(fragColor.rgb)*1.5;\n\n    fragColor.rgb=mix(fragColor.rgb,backg,smoothstep(105.,125.,length(rp.xz)));\n\n    fragColor.rgb+=noise(gl_FragCoord.xy)/200.;\n\n}","name":"Image","description":"","type":"image"}]}