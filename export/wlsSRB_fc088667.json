{"ver":"0.1","info":{"id":"wlsSRB","date":"1573726376","viewed":313,"name":"Lush hsv2rgb","username":"vegardno","description":"My personal take on hsv2rgb() with less sharp transitions at the secondary colours","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["colors","gradient","rgb","rainbow","hsv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float gamma = 2.2;\n\n// https://github.com/hughsk/glsl-hsv2rgb/blob/master/index.glsl\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(3. / 3., 2. / 3., 1. / 3., 3.);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6. - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 hsv2rgb2(vec3 c, float k) {\n    vec4 K = vec4(3. / 3., 2. / 3., 1. / 3., 3.);\n    vec3 p = smoothstep(0. + k, 1. - k,\n        .5 + .5 * cos((c.xxx + K.xyz) * radians(360.)));\n    return c.z * mix(K.xxx, p, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 1.2 * (fragCoord / iResolution.y) - vec2(.5, .1);\n\n    //uv.x = round(uv.x * 8.) / 8.;\n\n    vec3 col0 = pow( hsv2rgb(vec3(.6 * uv.x, 1., 1.)), vec3(gamma) );\n    vec3 col1 = pow( hsv2rgb2(vec3(.6 * uv.x, 1., 1.), .07), vec3(gamma) );\n\n    vec3 col = mix(col0, col1, smoothstep(.4, .6, .5 + .5 * sin(3. * iTime)));\n\n\tcol = pow( col, vec3(1. / gamma) );\n    \n    if (uv.y > .5) {\n\t\tfragColor = vec4(col, 1.);\n    } else {\n\t    fragColor = vec4(smoothstep(6. / iResolution.y, -0., abs(2.4 * uv.y - col)), 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}