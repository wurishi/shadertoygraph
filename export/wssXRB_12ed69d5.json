{"ver":"0.1","info":{"id":"wssXRB","date":"1551614490","viewed":88,"name":"Raymarching Mod test","username":"Terah","description":"Raymarching experiments","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 tunnel(vec3 p){\n  vec3 off=vec3(0);\n  off.x += sin(p.z*0.1)*1.7;\n  off.y += sin(p.z*0.05)*2.3;\n  return off;\n}\n\nmat2 rot(float a) {\n  float ca=cos(a);\n  float sa=sin(a);\n  return mat2(ca,sa,-sa,ca);\n}\n\nfloat sph(vec3 p, float r) {\n    return length(p)-r;\n}\n\n\nfloat box(vec3 p, vec3 b) {\n    vec3 d = abs(p) - b;\n  \treturn length(max(d,0.0)) + min(max(d.x,max(d.y,d.z)),0.0) - 0.05; \n}\n\nfloat N(float t) {\n \treturn fract(2375.*sin(7523.*t));   \n}\n\nfloat NP(float t) {\n \treturn N(t)*6.28;\n}\n\nfloat map(vec3 p) {\n    \n    vec3 r = vec3(9.0);\n    vec3 p1 = mod(p, r) - 0.5*r;\n    vec3 p2 = p-p1;\n    \n    float t1 = 0.5*iTime;\n\n    //p1.xz *= rot(2.3*p2.x + t1);\n    p1.xy *= rot(3.7*p2.y + t1);\n    //p1.xz *= rot(5.1*p2.z + t1);\n    p1.xz *= rot(NP(p2.x) + t1);\n    //p1.yx *= rot(NP(p2.y) + t1);\n    p1.xz *= rot(NP(p2.z) + t1);\n    float b = box(p1, vec3(1));\n    \n    float s = sph(p1 - vec3(0,0,0), 1.2);  \n\n    return max(-s, b);\n}\n\nvec3 norm(vec3 p) {\n\tvec2 o=vec2(0.002, 0.0);\n    return normalize(vec3(\n        map(p+o.xyy)-map(p-o.xyy),\n        map(p+o.yxy)-map(p-o.yxy),\n        map(p+o.yyx)-map(p-o.yyx)\n    ));\n}\n\nvec3 march(vec3 s, vec3 r) {\n      \n    float d=0.0;\n    int i=0;\n    vec3 p=s;\n    \n    for (; i<100; ++i) {             \n        d = map(p);   \n        if (abs(d)<0.001) {\n            break;\n        }       \n        p+=d*r;\n    }        \n    \n    vec3 col = vec3(0);\n    float li = 2.0;\n    \n    vec3 n = norm(p);\n    vec3 l = normalize(vec3(1,1,-1));\n    float lb = max(0.0,dot(n,l));\n    col += lb * vec3(0.8,0.2,0) * li;\n    \n    vec3 h = normalize(l + -r);\n    float sa = max(dot(h, n), 0.0);\n    float sp = pow(sa, 10.0);\n    if (lb>0.0) {\n        col += sp * vec3(0.5,0.5,1);\n    }\n\n    float fog = 1.0-float(i)/100.0;\n\tcol = mix(vec3(0.05, 0.05, 0.1), col, fog);\n    \n    return col;\n    \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  \tuv -= 0.5;\n  \tuv /= vec2(iResolution.y / iResolution.x, 1);\n    \n    vec3 ro = vec3(14, 0, iTime*10.0);\n    ro += 0.7*tunnel(ro);\n    vec3 rd = normalize(vec3(uv, 0.7));\n\n    \n    vec3 col = march(ro, rd);\n\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}