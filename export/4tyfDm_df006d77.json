{"ver":"0.1","info":{"id":"4tyfDm","date":"1542714257","viewed":1395,"name":"marble test texture v2","username":"dalerank","description":"based on https://www.shadertoy.com/view/XdByD1","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["texture","marble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// based on https://www.shadertoy.com/view/XdByD1\n\nvec2 csqr( vec2 a )  { return vec2( a.x*a.x - a.y*a.y, 2.*a.x*a.y  ); }\n\nvec2 iSphere( in vec3 ro, in vec3 rd, in vec4 sph )//from iq\n{\n\tvec3 oc = ro;// - sph.xyz;\n\tfloat b = dot( oc, rd );\n\tfloat c = dot( oc, oc ) - sph.w*sph.w;\n\tfloat h = 1.0; //b*b - c;\n\treturn vec2(-b-h, -b+h );\n}\n\nfloat map(in vec3 p, vec2 sctime) {\n\t\n\tfloat res = 0.;\n\t\n    vec3 c = p;\n    c.xy = c.xy * sctime.x + vec2(c.y, c.x) * sctime.y;\n\tfor (int i = 0; i < 10; ++i) \n    {\n        p =.7*abs(p)/dot(p,p) -.7;\n        p.yz= csqr(p.yz);\n        p=p.zxy;\n        res += exp(-19. * abs(dot(p,c)));        \n\t}\n\treturn res/2.;\n}\n\nvec3 raymarch( in vec3 ro, vec3 rd, vec2 tminmax , vec2 sctime)\n{\n    //tminmax += vec2(1.,1.) * sin( iTime * 1.3)*3.0;\n   \tvec3 one3 = vec3(1.,1.,1.);\n    vec3 t = one3 * tminmax.x;\n    \n    vec3 dt = vec3(.07, 0.02, 0.05);\n    vec3 col= vec3(0.);\n    vec3 c = one3 * 0.;\n    for( int i=0; i<64; i++ )\n\t{\n     \tvec3 s = vec3(2.0, 3.0, 4.0);   \n        t+=dt*exp(-s*c);\n        vec3 a = step(t,one3*tminmax.y);\n        vec3 pos = ro+t*rd;\n        \n        c.x = map(ro+t.x*rd, sctime);\n        c.y = map(ro+t.y*rd, sctime);\n        c.z = map(ro+t.z*rd, sctime);               \n        \n        col = mix(col, .99*col+ .08*c*c*c, a);\n    }\n    \n    vec3 c0 = vec3(0.4,0.3,0.99);\n    vec3 c1 = vec3(0.9,0.7,0.0);\n    vec3 c2 = vec3(0.9,0.1,0.2);\n    return c0 * col.x + c1 * col.y + c2 * col.z;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat time = iTime;\n    vec2 q = fragCoord.xy / iResolution.xy;\n    vec2 p = -1.0 + 2.0 * q;\n    p.x *= iResolution.x/iResolution.y;\n    vec2 m = vec2(0.);\n\n    vec3 ro = vec3(6.);\n    vec3 ta = vec3( 0.0 , 0.0, 0.0 );\n    vec3 ww = normalize( ta - ro );\n    vec3 uu = normalize( cross(ww,vec3(0.0,1.0,0.0) ) );\n    vec3 vv = normalize( cross(uu,ww));\n    vec3 rd = normalize( p.x*uu + p.y*vv + 4.0*ww );\n\n    \n    vec2 tmm = iSphere( ro, rd, vec4(0.,0.,0.,2.) );\n\n\t// raymarch\n    vec3 col = raymarch(ro,rd,tmm, vec2(sin(iTime), cos(iTime)));\n    \t\n\t// shade    \n    col =  .5 *(log(1.+col));\n    col = clamp(col,0.,1.);\n    fragColor = vec4( col, 1.0 );\n\n}\n","name":"Image","description":"","type":"image"}]}