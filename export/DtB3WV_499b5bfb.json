{"ver":"0.1","info":{"id":"DtB3WV","date":"1673900140","viewed":202,"name":"0 lake","username":"hgn","description":"simple shader to make my company logo","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Dithering algorithm is Alex Vlachos's\n\n#define RING_MIN 0.2\n#define RING_MAX 0.27\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2  uv     = fragCoord / iResolution.xy;\n   float ratio  = iResolution.x / iResolution.y;\n   float dither = fract(dot(vec2(171.0,231.0),fragCoord.xy)/71.0)-0.5;\n\n   uv   -= vec2( 0.5 );\n   uv.x *= ratio;\n   uv.y *= 0.75;\n\n   vec4  sines    = sin( (iTime + uv.y*80.0) * vec4(1.1,2.0234,3.73,2.444) );\n   float gradient = min( uv.y, 0.0 );\n   float offset   = sines.x*sines.y*sines.z*sines.w*gradient;\n   \n   uv   += vec2( offset, 0.0 );\n   \n   float dist = dot( uv, uv );\n   float ring = step( RING_MIN*RING_MIN, dist ) * step( dist, RING_MAX*RING_MAX );\n   \n   ring = max( 0.0, ring + gradient * 3.0 );\n   ring = step( 0.5, ring*ring + dither ) * 0.8 + 0.2;\n\n   fragColor = vec4( vec3(ring), 1.0 );\n}","name":"Image","description":"","type":"image"}]}