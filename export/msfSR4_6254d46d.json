{"ver":"0.1","info":{"id":"msfSR4","date":"1695140912","viewed":47,"name":"voronoi g2","username":"gavroche","description":"voronoi after the tuto of the book of shaders","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["voronoi","skull"],"hasliked":0,"parentid":"DsfXRN","parentname":"Fork voronoi ga rubioh 957"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14\n\n\n\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec3 palette( in float t)\n{\n    vec3 a = vec3(0.2, 0.2, 1.);\n    vec3 b = vec3(0.7, 0.7, 0.7);\n    vec3 c = vec3(1., 1., 1.);\n    vec3 d = vec3(0.3, 0.1, 0.8);\n    \n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2.*fragCoord.xy - iResolution.xy ) / iResolution.y;\n    //uv *= iTime;\n    //float on_tempo = mod(iTime/4.,1.);\n    uv = uv*1.*rotate2d(PI/8.*iTime);\n    vec2 uv2 = uv;\n    uv = abs(uv);\n    \n    vec3 col = vec3(0.);\n    //col+=random(floor(uv));\n    \n    float nb_voro = 15.;\n    \n    for (float i=0.; i<nb_voro; i++){\n         //uv*=rotate2d((-2.*mod(i,2.)+1.)*i*PI/nb_voro);\n         float voro = texture(iChannel0, uv/2.*(i/4.)).x;\n         col += (nb_voro-i)/nb_voro*pow(voro, 6.)*palette(iTime/nb_voro + i/nb_voro);\n   }\n    \n\n    col = 0.9*col;//+5.*col*min(crane(uv2,col),0.1);\n    \n    \n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14\nvec2 random (vec2 st) {\n    return vec2(fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123),fract(cos(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123));\n}\n\nfloat length_(vec2 uv, vec2 st, float N){\n    \n    return pow(pow(abs(uv.x-st.x), N) + pow(abs(uv.y-st.y), N), 1./N);\n}\n\nfloat voronoi(vec2 uv){\n    float min_dist = 100.;\n    float dist = 0.;\n    for(float i =-1.;i<2.;i++){\n        for(float j =-1.;j<2.;j++){\n            vec2 point_random = random(floor(uv)+vec2(i,j));\n            point_random=0.5+0.5*sin(iTime+point_random*124.15);\n            dist = length_(fract(uv), vec2(i,j)+point_random,3.);\n            if (dist<min_dist){\n                min_dist = dist;\n            }\n        }\n    }\n    return min_dist;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2.*fragCoord.xy - iResolution.xy ) / iResolution.y;\n    //float on_tempo = mod(iTime/4.,1.);\n    \n    float d = (voronoi(uv*4.));\n    \n\n    fragColor = vec4(d, 0., 0. ,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}