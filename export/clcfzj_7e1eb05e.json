{"ver":"0.1","info":{"id":"clcfzj","date":"1701394258","viewed":25,"name":"RGB Color Filtering","username":"nextrix","description":"color filter idk","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["color","rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// uv\n#define POWER 2.\n#define ALPHA 1.\n#define ITER 8.\n#define SPEED 0.5\n#define TIMEOFFSET 0.\n#define TIME iTime*SPEED+TIMEOFFSET\n\n// color\n#define RGBPOWER 0.0\n#define RGBSPEED 1.5\n#define RGB (0.5 + 0.5 * cos((iTime*RGBSPEED)+uv.xyxy+vec4(0,2,4,1)) * RGBPOWER)\n#define COLOR vec4(1.,1.,1.,1.) * RGB\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 tex = texture(iChannel0, uv.xy);\n\tvec4 col = (tex);\n\t\n\tcol = mod(col + TIME, 4.0);\n\tcol = floor(col*ITER);\n\tcol = mod(col,2.);\n\ttex = mix(tex, mix(mod(col,2.)*col * pow(POWER, sqrt(POWER*POWER)), col, 0.5), POWER);\n    \n    \n\tfragColor= vec4(tex.rgba * vec4(COLOR)) * ALPHA;\n}","name":"Image","description":"","type":"image"}]}