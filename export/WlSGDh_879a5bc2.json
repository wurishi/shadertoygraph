{"ver":"0.1","info":{"id":"WlSGDh","date":"1569698293","viewed":218,"name":"inference jani","username":"janiorca","description":"A very long time ago one of the amiga demo effects was creating an inference pattern bby rapidly moving two bitplanes with concentric circles. This is the glsl equivalent of that. and my first shadertoy submission","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["tests"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define num_circles 4\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n\n    vec2 sc = vec2( 0.5, 0.5*iResolution.y/iResolution.x );\n\n    for( int idx=0; idx<num_circles; idx++ ) \n    {\n        vec2 center = vec2(sin( iTime*(float(idx)*0.132+0.1672 ) )*(0.146+0.0132*float(idx)),\n                                sin( iTime+ iTime*(float(idx)*0.1822+0.221))*(0.1131+0.0112*float(idx)) ) + sc;\n\n        float dist = distance( center, uv );\n        vec3 col = vec3( sin( 100.0*dist ), sin( 110.0*dist ), sin( 120.0*dist ) );\n        col *= max( 0.0, (1.0-dist*3.0) );\n        fragColor += vec4( col, 0.0 );\n    }    \n}\n    ","name":"Image","description":"","type":"image"}]}