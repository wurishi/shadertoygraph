{"ver":"0.1","info":{"id":"clXfRn","date":"1692474354","viewed":124,"name":"Pretty test","username":"essexshade","description":"Kishimisu tutorial: https://www.youtube.com/watch?v=f4s1h2YETNY","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["fractal","sdf","tutorial","intro","repetition","code","youtube","tuto","creative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cosine based palette, 4 vec3 params\nvec3 palette( float t){\nvec3 a = vec3(0.5, 0.5, 0.5);\nvec3 b = vec3(0.5, 0.5, 0.5);\nvec3 c = vec3(1.0, 1.0, 1.0);\nvec3 d = vec3(0.263, 0.416, 0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 4.0; i++)\n              \n    {uv = fract(uv * 1.5) -0.5;\n    \n    float d = length(uv) * exp(-length(uv0));\n    \n    vec3 col = palette(length(uv0) + (i * 0.4) + iTime * 0.4);\n    \n    d = sin(d*8. + iTime)/8.;\n    \n    d = abs(d);    \n    \n    d = pow(0.01 / d, 1.2);\n    \n    finalColor += col * d;}\n    \n    fragColor = vec4(finalColor, 1.);\n}","name":"Image","description":"","type":"image"}]}