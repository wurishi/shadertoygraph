{"ver":"0.1","info":{"id":"MdGBRG","date":"1529248572","viewed":84,"name":"Simple SIN","username":"yohanip","description":"A simple shader learning step","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simple","sin","learn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    float mid = iResolution.y / 2.0;\n    \n    float x = (fragCoord.x + iTime*180.0) / iResolution.x;\n    \n    // value\n    float v = sin(radians(x * 540.0));\n    \n    // Yl = 1 - Y / mid;\n    // Y/mid + Yl = 1 => Y = (1-Yl) * mid;\n           \n    // true coordinate\n    float Yt = (1.0 - v) * mid;\n    float a = 0.0;\n    \n    if (fragCoord.y >= Yt-1.0 && fragCoord.y <=Yt+1.0) {\n        a = 1.0;\n    }\n        \n    fragColor = vec4(a, a, a, 1.0);\n}","name":"Image","description":"","type":"image"}]}