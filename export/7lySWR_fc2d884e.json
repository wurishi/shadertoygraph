{"ver":"0.1","info":{"id":"7lySWR","date":"1640551145","viewed":418,"name":"Matrix Screen - EM","username":"eliottmoret","description":"Matrix Screen effect","likes":18,"published":1,"flags":32,"usePreview":0,"tags":["screen","rain","matrix","letter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Curve borders\n    uv = (uv - 0.5) * 2.0;\n\tuv *= 1.1;\t\n\tuv.x *= 1.0 + pow((abs(uv.y) / 5.0), 2.0);\n\tuv.y *= 1.0 + pow((abs(uv.x) / 4.0), 2.0);\n\tuv  = (uv / 2.0) + 0.5;\n\tuv =  uv *0.92 + 0.04;\n    \n    vec4 fcol = texture(iChannel0, uv);\n    \n    //Chromatic Aberration\n    vec2 nuv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float d = length(nuv);\n    nuv*=(d+2.0)*0.002;\n    fcol.r = texture(iChannel0, uv+nuv).r;\n    fcol.b = texture(iChannel0, uv-nuv).b;\n    \n    float lines = sin(uv.y*300.+iTime*-10.)*.5+.5;\n    lines = smoothstep(0.5,1.0,lines)*.5+.5;\n    fcol.rgb *= vec3(lines);\n    \n    //Shine\n    float c = smoothstep(0.5,0.0,length((uv-vec2(0.2,0.7))*vec2(1.1,1.)));\n    fcol.rgb += vec3(pow(c,5.)*.3);\n   \n    fragColor = fcol;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define SIZE 32.\n\n#define BLUR 10.\n#define BLURRADIUS 1.\n#define BLURSTRENGTH 1.5\n\nvec2 random2(vec2 uv)\n{\n    return vec2(\n    fract(sin(uv.x*123.45 + uv.y*912.42)*432.21),\n    fract(sin(uv.y*567.89 + uv.x*251.53)*987.65));\n}\n\nfloat random(float a)\n{\n    return fract(sin(a*123.45)*432.21);\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; //ScreenUV\n    vec2 nuv = (fragCoord-.5*iResolution.xy)/iResolution.y; //Normalized\n    \n    float offset = random(floor(nuv.x*SIZE)); //Scrolling offset\n    float scroll = floor(0.3*iTime*SIZE)/SIZE;\n    \n    vec2 cellid = random2(floor(nuv*SIZE)+iTime*0.000001);//Character id\n    \n    nuv = fract(nuv*SIZE);\n    nuv = nuv*.8+.1;\n    vec2 char = round(cellid*16.);\n    vec2 celluv = (nuv+char)/16.;//Character cell coordinate\n    \n    vec3 col = texture(iChannel0, celluv).rrr;\n    if(col.r<0.2)col.rgb=vec3(0.);//Remove ugly border\n    \n    col *= step(0.6,1.-fract(uv.y+offset+scroll));\n    float bg = smoothstep(0.99, 0., col.r);\n    \n    float white = smoothstep(fract(uv.y+offset+scroll), .0,.001*SIZE);\n    col = mix(col, vec3(0.,1.,0.1), white*col.r);\n    col = mix(col, vec3(.05), bg);\n    \n    \n    float vignette = smoothstep(abs(uv.x-.5), 0.55, 0.5)\n                * smoothstep(abs(uv.y-.5), 0.55, 0.5);\n    col *= vignette;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv;\n    vec4 fcol;\n    \n    for(float i=-BLUR/2.;i<BLUR/2.;i++)\n    {\n        for(float j=-BLUR/2.;j<BLUR/2.;j++)\n        {\n            vec2 uv = (fragCoord+vec2(i,j)*BLURRADIUS)/iResolution.xy;\n            fcol += texture(iChannel0, uv);\n        }\n    }    \n    fcol = fcol/BLUR/BLUR*BLURSTRENGTH;\n    uv = fragCoord/iResolution.xy;\n    fcol += texture(iChannel0, uv);\n    \n fragColor = fcol;\n}","name":"Buffer B","description":"","type":"buffer"}]}