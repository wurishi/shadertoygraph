{"ver":"0.1","info":{"id":"tldcRH","date":"1608546163","viewed":259,"name":"in the night","username":"Ric3cir121","description":"Simple ray tracer with samples","likes":0,"published":3,"flags":48,"usePreview":0,"tags":["raytracing","raytracing","noise","distancefunction","cube","light","sphere","distance","night","estimator","reflect","stone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define get(c) texture(iChannel1,vec2(c*2,0.)/iResolution.xy)\n\n#define PI 3.1415926535\n\n// ----------------------------------------------------\n// Random functions\n\n#define hash12(c) (fract(sin(vec2(c,sin(c*1000.)*1000.)*1000.)*1000.))\n#define rand31(c) (fract(sin(c.x*c.y*c.z/10000.)*1000.))\n#define smoothstep(a,b,c) mix(a,b,((sin(clamp(c,0.,1.)*2.-1.)+1.)/2.))\nfloat hash31(vec3 c){\n    c = mod(c,1000.);\n    vec3 r = floor(c);\n    \n    float _00 = smoothstep(rand31(vec3(r.x   ,r.y   ,r.z   )),rand31(vec3(r.x   ,r.y   ,r.z+1.)),fract(c.z));\n    float _01 = smoothstep(rand31(vec3(r.x   ,r.y+1.,r.z   )),rand31(vec3(r.x   ,r.y+1.,r.z+1.)),fract(c.z));\n    float _10 = smoothstep(rand31(vec3(r.x+1.,r.y   ,r.z   )),rand31(vec3(r.x+1.,r.y   ,r.z+1.)),fract(c.z));\n    float _11 = smoothstep(rand31(vec3(r.x+1.,r.y+1.,r.z   )),rand31(vec3(r.x+1.,r.y+1.,r.z+1.)),fract(c.z));\n\n\treturn smoothstep(smoothstep(_00,_01,fract(c.y)),smoothstep(_10,_11,fract(c.y)),fract(c.x));\n}\n\n// ----------------------------------------------------\n// Distance estimator\n\n#define fmax(a,b) (a.x>b.x?a:b)\n#define fmin(a,b) (a.x<b.x?a:b)\n#define cube(p1,p2,size,color) vec4(max(max(abs(p1.x-p2.x),abs(p1.y-p2.y)),abs(p1.z-p2.z))-size/2.,color)\n#define sphere(p1,p2,size,color) vec4(length(p1-p2)-size/2.,color)\nfloat capsule(vec3 p1,vec3 p2,vec3 p3,float size){vec3 fr = p3 - p2;return length((p1-p2)-fr*clamp(dot((p1-p2),fr)/dot(fr,fr),0.0,1.0))-size/2.;}\nvec4 de(vec3 c){\n    vec4 ret0 = fmin(fmin(fmin(vec4(((length(fract(c.xz*5.)-.5)/2.\n    +length((texture(iChannel3,c.xz/2.,0.)\n    *texture(iChannel3,c.xz/2.*1.4872,0.)).xyz))/15.+c.y+1.+(hash31(c*10000.)/50000.))/1.5,vec3(0.2))\n    ,fmin(vec4(c.y+1.024+texture(iChannel2,c.xz,0.).x/100.,vec3(.7)),\n    vec4(c.y+1.02+texture(iChannel2,c.xz/10.,0.).x/30.,vec3(.3,.7,.3))\n    )),\n    sphere(c,vec3(-1,2,0),1.,vec3(6,6,2))\n    ),\n    vec4(capsule(c,vec3(-1,-1,0),vec3(-1,2,0),0.2)+(hash31(c*10000.)/5000.),vec3(.8))\n    );\n    //+(hash31(c*100.)/500.);\n\treturn ret0;\n}\n\n// ----------------------------------------------------\n// March function\n\nfloat getp(vec4 m,vec3 p){\n\treturn length(m.xyz-p)/500.+0.0001; // raymarching epsilon increase while marching\n}\n\nvec4 DoMarch(vec3 Position,vec3 Camera){\n\tfloat Iteration = 0.;\n    vec3 Marcher = vec3(0);\n    float Distance = 10.;\n    \n    while(length(Marcher) <= 100. && Iteration <= 500. && Distance >= getp(Marcher.xyzz,vec3(0))){\n    \tDistance = de(Position+Marcher).x+getp(Marcher.xyzz,vec3(0));\n        Marcher += Distance*Camera;\n        Iteration++;\n    }\n    return vec4(Position+Marcher,Iteration);\n}\n\nvec3 getnormal(vec3 n){\n    vec2 e = vec2(1.0,-1.0)*(n.y<0.002-1.?.00001:.00001);\n    return normalize(e.xyy*de(n+e.xyy).x+e.yyx*de(n+e.yyx).x+e.yxy*de(n+e.yxy).x+e.xxx*de(n+e.xxx).x);\n}\n\nvec4 getcolor(vec4 m,vec3 p){\n    return vec4((length(m.xyz-p)>100.||m.w>=500.?vec3(.2):de(m.xyz).yzw),!(length(de(m.xyz).yzw)>=pow(3.,0.5)));\n}\n\n// ----------------------------------------------------\n// Main\n\n#define rotate(c,p) (vec3(vec2(cos(p)*c.x+sin(p)*c.z,sin(p)*c.x-cos(p)*c.z),c.y).xzy)\n\nvoid mn(out vec4 o,vec2 u){\n    vec4 Color = vec4(1);\n    vec3 Normal;\n    float Precision;\n    vec2 Looking = get(2).xy+vec2(1.3,0);\n    vec3 Camera = rotate(rotate(normalize(vec3((u-iResolution.xy/2.)/iResolution.yy,1.)).yxz,-Looking.y).yxz,Looking.x);\n\tvec3 Position = -rotate(rotate(normalize(vec3(0,0,1)).yxz,-Looking.y).yxz,Looking.x)*5.;\n    if(Position.y < 0.)Position.y = 0.;\n    vec4 March = DoMarch(Position,Camera);\n    Color *= getcolor(March,Position);\n\n    if(get(2).z == 0.)\n    for(int i = 0; i < 100;i++){\n        if(length(March.xyz-Position)>100.||March.w >= 500. || Color.w != 1.)break;\n        Precision = getp(March,Position)*2.;\n        Position = March.xyz;\n        Normal = getnormal(Position-Camera*Precision);\n    \tCamera = reflect(Camera,Normal);\n    \tMarch = DoMarch(Position+Normal*Precision,Camera);\n        Color *= getcolor(March,Position);\n    }\n    o = vec4(Color.xyz,1.);\n\n}\n\nvoid mainImage(out vec4 o,vec2 u){\n    vec2 uv = u/iResolution.xy;\n    o = vec4(0.);\n    vec4 O = vec4(0.);\n\tint a = 1;\n    for(int i = 0; i<a; i++){\n        O = vec4(0);\n        mn(O,u+hash12(0.3*u.x*u.y*PI*(float(i)+mod(iTime,10.))));\n        o += O;\n    }\n    o /= float(a);\n    \n    if(get(2).z == 0. && get(4).z == 0.)\n    o = texture(iChannel0,uv)*(1.-(1./get(5)))+o/get(5);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define storable(c,u) (round(u.x/2.) == float(c) && u.y < 1.)\n#define get(c) texture(iChannel0,vec2(c*2,0.)/iResolution.xy)\n#define store(c,d,u,o) if(storable(c,u))o=d\n\nvoid mainImage(out vec4 o,vec2 u){\n    vec2 r = iResolution.xy;\n    vec2 uv = u/r;\n    o = texture(iChannel0,uv);\n    \n    vec4 Mouse = get(2);\n    if(iMouse.z > 0.){\n        if(Mouse.z == 0.){\n            Mouse.zw = iMouse.xy/100.;\n        }else{\n            Mouse.xy -= iMouse.xy/100.-Mouse.zw;\n            Mouse.zw = iMouse.xy/100.;\n        }\n    } else {\n        Mouse.z = 0.;\n    }\n    store(2,Mouse,u,o);\n\n    if(get(2).z == 0. && get(4).z == 0.){\n        store(5,get(5)+1.,u,o);\n    }else{\n        store(5,vec4(1.),u,o);\n    }\n\n    store(4,vec4(r,r==get(4).xy?0:1,0),u,o);\n}","name":"Buffer B","description":"","type":"buffer"}]}