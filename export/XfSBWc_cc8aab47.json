{"ver":"0.1","info":{"id":"XfSBWc","date":"1725555843","viewed":75,"name":"Diffraction effect ","username":"bogdanmikh","description":"Diffraction effect ","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["diffraction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define mouseX iMouse.x / iResolution.x\n\nfloat func(in vec2 uv, float d, float o){\n    return 1.0-smoothstep(0.0, d, distance(uv.x, 0.3 + abs(sin(mouseX)) + sin(o+uv.y * 3.0) * 0.3));\n}\n\nvec4 diffractionF(vec2 uv, float o) {\n float d = 0.05+abs(sin(o*0.2))*0.25 * distance(uv.y+0.5, 0.0);\n return vec4(func(uv+vec2(d*0.25, 0.0), d, o), 0.0, 0.0, 1.0) +\n        vec4(0.0, func(uv-vec2(0.015, 0.005), d, o), 0.0, 1.0) + \n        vec4(0.0, 0.0, func(uv-vec2(d*0.5, 0.015), d, o), 1.0);   \n}\n\nfloat rand(vec2 n) {\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p) {\n    vec2 ip = floor(p);\n    vec2 u = fract(p);\n    u = u * u * (3.0 - 2.0 * u);\n\n    float res = mix(\n        mix(rand(ip), rand(ip + vec2(1.0, 0.0)), u.x),\n        mix(rand(ip + vec2(0.0, 1.0)), rand(ip + vec2(1.0, 1.0)), u.x), u.y\n    );\n    return res * res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 color = texture(iChannel0, uv);\n    float speed = 0.6;\n    \n    float p = noise(uv * 5.0);\n    \n    vec4 diffraction = diffractionF(uv, sin(iTime) * speed)*0.5 + \n       diffractionF(uv, iTime * 2.0 * speed)*0.5 + \n       diffractionF(uv + vec2(0.3, 0.0), iTime * speed) * 0.5;\n       \n       \n  fragColor = diffraction * 0.5 * p + color;\n        \n}\n","name":"Image","description":"","type":"image"}]}