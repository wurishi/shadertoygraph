{"ver":"0.1","info":{"id":"NstfD2","date":"1657234789","viewed":125,"name":"UV displacement test with sphere","username":"MrHAX00","description":"my first uv displacement test very cool","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["yes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define pi 3.14159\n#define Circle(uv, Pos, Radius, Blur) smoothstep(Radius + Blur, Radius - Blur, length(uv - Pos))\nvec2 UnitVec(float Angle)\n{\n    return vec2(sin(Angle * pi), cos(Angle * pi));\n}\n\n\nvec2 MapSpaceTo(vec2 uv, vec2 Pos, vec2 Size)\n{\n    return (uv - Pos) / Size;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - .5 * iResolution.xy)/iResolution.y;\n    uv = abs(uv);\n    \n    vec2 Size = vec2(.5 + cos(iTime) * .5);\n    vec2 Displacement = UnitVec(.25) * (vec2(1.) - Size) * .5;\n    \n    float Sum = 0.;\n    for (int i = 1; i <= 25; i++) {\n        uv = MapSpaceTo(uv, Displacement, Size);\n        Sum = Circle(uv, vec2(0.), .5, .001) - Sum;\n    }\n    vec3 col = vec3(Sum);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}