{"ver":"0.1","info":{"id":"Dss3zM","date":"1665918214","viewed":60,"name":"Hypno spirals","username":"Balocre","description":"Some fun effect I found toying around with spirals","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI2 6.283186\n#define N 7.\n#define A 7.\n#define R 0.3\n\n//----------------------------------------------------------------------------//\n\nmat2 makeRotMat2d(float angle)\n{\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nfloat dSpiralMulti(in vec2 p, float n, float a)\n{\n    /* \n       n : number of spirals\n       a : compression, i.e. how fast spirals wrap around center per unit\n    */\n    float thetaN = atan(p.x, p.y)/PI2 + .5; // normalized angle from center\n    float d = length(p);                    // distance from center\n    \n    // return abs(fract(n*thetaN + a*d) - 0.5); // some kind of distance\n                                                // beteween 0 an 0.5\n    return fract(n*thetaN + a*d); // not really a distance, represents the\n                                  // distance of the point from the\n                                  // closest innermost spiral point\n}\n\n// from : https://iquilezles.org/articles/distfunctions2d/\nfloat sdCircle(in vec2 p, in float r)\n{\n    return length(p) - r;\n}\n\nfloat hypno(in vec2 p, in float r, in vec2 centerPos, float t)\n{\n    p -= centerPos; // to change the center of the figure\n    vec2 p_rot = makeRotMat2d(iTime)*p;\n    \n    float dSpi = dSpiralMulti(p_rot, N, A);\n    float h = (dSpi - 0.5) * sdCircle(p, r); // the -0.5 gives the nice \n                                             // \"propagation\" effect\n\n    // need to invert value to have white on black effect\n    return 1.-smoothstep(.4,\n                        .6, \n                        h+t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n    \n    float t = mod(iTime,2.0);\n\n    vec3 col = vec3(hypno(p, R, vec2(0.), t));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}