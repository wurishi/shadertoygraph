{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Get pixel colour from iChannel0\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define PI 3.14159\n#define E 2.71828\nfloat lineSegment( vec2 a, vec2 b, vec2 p, float w ) {\n    vec2 ba = b - a;\n    vec2 pa = p - a;\n\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    vec2 cp = a + h * ba;\n\n    float d = length(p - cp);\n\n    return 1.-smoothstep(0., w, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 tuv = fragCoord/iResolution.xy;\n    \n    float timeScale = 3.;\n    float t = iTime * timeScale;\n    float pt = t - iTimeDelta * timeScale;\n    vec2 curve = vec2(0.);\n    vec2 prevCurve = vec2(0.);\n    \n    curve.x = sin(t)*(pow(E, cos(t)) - 2.*cos(4.*t) - pow(sin(t/12.), 5.));\n    curve.y = cos(t)*(pow(E, cos(t)) - 2.*cos(4.*t) - pow(sin(t/12.), 5.));\n    \n    prevCurve.x = sin(pt)*(pow(E, cos(pt)) - 2.*cos(4.*pt) - pow(sin(pt/12.), 5.));\n    prevCurve.y = cos(pt)*(pow(E, cos(pt)) - 2.*cos(4.*pt) - pow(sin(pt/12.), 5.));\n    \n    vec2 warp = vec2(sin(iTime), sin(iTime))*0.01;\n    curve *= 0.1;\n    prevCurve *= 0.1;\n    \n    vec2 translation = iResolution.xy/2./iResolution.y;\n    curve += translation;\n    prevCurve += translation;\n    \n    float l = lineSegment(curve, prevCurve, uv, 0.004);\n    vec3 col;\n    if (l > 0.) {\n        col = (0.5 + 0.5 * cos(iTime + vec3(0.0, 2.0, 4.0)));\n    } else {\n        col = texture(iChannel0, tuv).rgb*0.999;\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"vec2 warpCoords(vec2 texCoord, float angle) {\n    // Center the texture coordinates for proper rotation\n    vec2 centeredCoord = texCoord - 0.5;\n\n    vec2 rotatedCoord = centeredCoord;\n    rotatedCoord *= 1. + centeredCoord.x * sin(iTime);\n    rotatedCoord *= 1. + centeredCoord.y*cos(iTime)*0.25;\n\n    // Return to original coordinate space\n    return rotatedCoord + 0.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Get pixel colour from iChannel0\n    vec3 col = texture(iChannel0, warpCoords(uv, iTime)).rgb;\n    vec2 trans = vec2(sin(iTime) + .5, cos(iTime) + .5);\n    uv -= trans;\n    uv *= .99;\n    uv += trans;\n\n    vec3 texCol = texture(iChannel1, uv).rgb*0.999;\n    col = mix(texCol, col, length(col));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"MfVfzz","date":"1733730349","viewed":48,"name":"Flight of the Butterfly","username":"GarlicGraphix","description":"Playing with Butterfly Curves","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["curve","butterflycurve"],"hasliked":0,"parentid":"","parentname":""}}