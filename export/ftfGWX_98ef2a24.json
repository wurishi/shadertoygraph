{"ver":"0.1","info":{"id":"ftfGWX","date":"1622927588","viewed":129,"name":"Refraction 1","username":"tekt","description":"based on https://www.youtube.com/watch?v=NCpaaLkmXI8","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","refraction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","previewfilepath":"/media/ap/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on https://www.youtube.com/watch?v=NCpaaLkmXI8\n\n\n\n// Forked from \"RayMarching starting point\" by BigWIngs. https://shadertoy.com/view/WtGXDD\n\n#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST .001\n\n#define S smoothstep\n#define T iTime\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid pR(inout vec2 p, float a) {\n\tp = cos(a)*p + sin(a)*vec2(p.y, -p.x);\n}\n\nfloat sdBox(vec3 p, vec3 s) {\n    p = abs(p)-s;\n\treturn length(max(p, 0.))+min(max(p.x, max(p.y, p.z)), 0.);\n}\n\n\nfloat GetDist(vec3 p) {\npR(p.xy, 1.123);\n\n    for (int i = 0; i <3; i++) {\n        p.xz = abs(p.xz);\n        \n        pR(p.xy, 0.8*sin(iTime * 0.1));\n//        p.x += 0.1;\n        \n        pR(p.xz, 0.6*sin(0.2 + iTime * 0.5));\n        p = abs(p);\n    }\n\n\n    float d = sdBox(p, vec3(1.1));\n    \n    return d;\n}\n\nfloat RayMarch(vec3 ro, vec3 rd, float side) {\n\tfloat dO=0.;\n    \n    for(int i=0; i<MAX_STEPS; i++) {\n    \tvec3 p = ro + rd*dO;\n        float dS = GetDist(p) * side;\n        dO += dS;\n        if(dO>MAX_DIST || abs(dS)<SURF_DIST) break;\n    }\n    \n    return dO;\n}\n\nvec3 GetNormal(vec3 p) {\n\tfloat d = GetDist(p);\n    vec2 e = vec2(.001, 0);\n    \n    vec3 n = d - vec3(\n        GetDist(p-e.xyy),\n        GetDist(p-e.yxy),\n        GetDist(p-e.yyx));\n    \n    return normalize(n);\n}\n\nvec3 GetRayDir(vec2 uv, vec3 p, vec3 l, float z) {\n    vec3 f = normalize(l-p),\n        r = normalize(cross(vec3(0,1,0), f)),\n        u = cross(f,r),\n        c = f*z,\n        i = c + uv.x*r + uv.y*u,\n        d = normalize(i);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec2 m = iMouse.xy/iResolution.xy;\n\n    vec3 ro = vec3(0, 3, -3);\n    ro.yz *= Rot(-m.y*3.14+1.);\n    ro.xz *= Rot(-m.x*6.2831);\n    \n    pR(ro.xz, iTime*0.2);\n    pR(ro.xy, -0.3);\n    \n    vec3 rd = GetRayDir(uv, ro, vec3(0,0.,0), 1.);\n    vec3 col = texture(iChannel0, rd).rgb;\n   \n    float d = RayMarch(ro, rd, 1.0); // outside of object\n\nfloat IOR = 1.45; // higher= denser\n    if(d<MAX_DIST) {\n        vec3 p = ro + rd * d;\n        vec3 n = GetNormal(p);\n        vec3 reflDir = reflect(rd, n); // reflected dir\n        \n        // when going from less dense to more dense, need to use inverse of IOR\n        vec3 rayDirIn = refract(rd, n, 1.0/IOR); // refracted dir\n        \n        vec3 pEnter = p - n*SURF_DIST*3.;// arbitrary multiplier to make it a little bigger\n        float dInside = RayMarch(pEnter, rayDirIn, -1.); // inside the object\n        \n        vec3 pExit = pEnter + rayDirIn * dInside; // 3d position of exit\n        vec3 nExit = -GetNormal(pExit);\n        \n        vec3 rayDirOut = refract(rayDirIn, nExit, IOR);\n        // dot product with self is like length() but without sqrt(), which is good enough to check for 0\n        if (dot(rayDirOut, rayDirOut) == 0.) {\n            rayDirOut = reflect(rayDirIn, nExit);\n        }\n\n//        float dif = dot(n, normalize(vec3(1,2,3)))*.5+.5;\n//        col = vec3(dif);\n        vec3 reflTex = texture(iChannel0, rayDirOut).rgb;\n        col = reflTex;\n    }\n    \n    col = pow(col, vec3(.4545));\t// gamma correction\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}