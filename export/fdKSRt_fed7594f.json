{"ver":"0.1","info":{"id":"fdKSRt","date":"1635120681","viewed":110,"name":"46/49","username":"tono","description":"46/49","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["49"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat pi = acos(-1.);\nvec3 pp;\nfloat tt;\nfloat rand(vec3 p)\n{\n    p  = fract( p*0.3183099+.1 );\n\tp *= 17.0;\n    return fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\n}\nvec2 map(vec3 p)\n{\n    float o = 10.;\n    float id = 0.;\n    \n    o = length(p) - 1.7;\n    \n    vec2 d = floor(p.xz);\n    p.x += d.y/2.;\n    d = floor(p.xz);\n    p.xz = mod(p.xz,1.)-.5;\n    float t = iTime*13.;\n    t = floor(t) + pow(fract(t),3.);\n    float h = sin(t * pi * 2.)*.5+.5;\n    //t = iTime*15.;\n    \n    //p.x += d.y/2.;\n    pp = p;\n    d.x += floor((rand(vec3(d,1.)+floor(t) )-.5)*12.);\n    d.y += floor((rand(vec3(d.yx,-1.)+floor(t) )-.5)*12.);\n    float th = 1.-step(.9,length(d));\n    h *= th/2.;\n    tt =t;\n    p.y -= h;\n    p = abs(p)-clamp((p.y+.2)/5. ,0.,.1)-vec3(.4,.2,.4);\n    //p.y += h;\n    o = max(p.x,max(p.y,p.z));\n    o = max(o,-(length(pp + vec3(0.,1.9+h ,0.))-1.8) );\n    return vec2(o,id);\n}\n\nvec2 march(vec3 cp , vec3 rd)\n{\n    float depth = 0.;\n    for(int i = 0 ; i< 99 ; i++)\n    {\n        vec3 rp = cp + rd * depth;\n        vec2 d = map(rp);\n        if(abs(d.x) < 0.01)\n        {\n            return vec2(depth,d.y);\n        }\n        depth += d.x;\n    }\n    return vec2(-depth , 0.);\n\n}\n\n\nfloat noise(vec3 p)\n{\n    vec3 fp = floor(p);\n\tvec3 fs = fract(p);\n    vec3 sf = vec3(1.,0.,0.);\n    \n    float a = rand(fp);\n    float b = rand(fp + sf);\n    float c = rand(fp + sf.yxz);\n    float d = rand(fp + sf.xxz);\n    float e = rand(fp + sf.yyx);\n    float f = rand(fp + sf.xyx);\n    float g = rand(fp + sf.yxx);\n    float h = rand(fp + sf.xxx);\n    \n    vec3 u = smoothstep(0.,1.,fs);\n  //  u = pow(fs,vec3(3.));\n    \n    return mix(mix(\n        \t\tmix(a,b,u.x),\n        \t\tmix(c,d,u.x),u.y),\n               mix(\n                mix(e,f,u.x),\n                mix(g,h,u.x),u.y),u.z\n            );\n}\nfloat str(vec3 p,vec3 op)\n{\n    p = vec3(p.xz,1.).xzy;\n\tfloat o = noise(p*7.4 + noise(p*10.1+ tt + noise(p*1.3 )));\n    return step(.8 * clamp(1.- (length(op.xz))*2.4,0.,1.),o );\n    //return step(length(op),.3);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\tvec3 cp = vec3(0.,-15.,-6.);\n    vec3 target = vec3(0.,2.,0.);\n    \n    vec3 col = vec3(0.);\n    \n    vec3 cd = normalize(vec3(target - cp));\n    vec3 cs = normalize(cross(cd , vec3(0.,1.,0.)));\n    vec3 cu = normalize(cross(cd,cs));\n    \n    float fov = 2.5;\n    \n    vec3 rd = normalize(cd * fov + cs * p.x + cu * p.y);\n    \n    vec2 d = march(cp,rd);\n    if( d.x > 0.)\n    {\n        vec2 e = vec2(0.,0.01);\n        vec3 pos = cp + rd * d.x;\n        vec3 N = normalize(map(pos).x - vec3(map(pos - e.xyy).x , map(pos - e.yxy).x,map(pos - e.yyx).x));\n        col = N;\n        vec3 sun = normalize(vec3(2.,4.,8.));\n        //sun.xz *= rot(iTime);\n        float diff = max(0.,dot(-sun,N));\n        diff = mix(diff , 1.,.1);\n        float sp = max(0.,dot(rd,reflect(N,sun)));\n        sp = pow(sp,56.6) * 1.;\n        vec3 mat = str(pos,pp) * vec3(1.);\n        col = sp * mat + diff * mat;\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}