{"ver":"0.1","info":{"id":"wlB3WW","date":"1559598059","viewed":238,"name":"Shape migration","username":"mosaic","description":"Adjustment of circle position via \"for loop\".\nThe layering and transparency creates some interesting shapes. \nIt was a bit annoying to centre. \nDoes this kind of effect have a name? ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(in vec2 _st, in float _radius){\n    vec2 dist = _st-vec2(0.5);\n\treturn 1.-smoothstep(_radius-(_radius*0.01),\n                         _radius+(_radius*0.01),\n                         dot(dist,dist)*4.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = (fragCoord/2.0  - 0.1 * iResolution.xy) / iResolution.y+0.35;\n \n    //background gradient colour\n    float pct = 1.8-st.y*1.6;\n     \n    //the loop repeats 50 times, so there are 50 circles drawn in total\n    for(int i=0; i<50;i++){\n        //change i to float so I can multiply by it\n        float i_float = float(i);\n        //here the circle function is called. The location of each circle is \n        //adjusted by the sin of the time value.\n        //The 50 circles are in different positions because the incremented i_float \n        //value is used:\n    \tpct += circle(st+(0.2*sin(iTime/3.-i_float*st.yx)),0.001)*st.y*1.5;\n    }\n \n\tpct=pct-1.;\n\n    // Output to screen, adjust colour\n    fragColor = vec4(pct+.1,pct+.1,pct,1.0)*vec4(0.9,0.,0.,0.)+vec4(0.,0.0,0.3,0.);\n}","name":"Image","description":"","type":"image"}]}