{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//This is the smallest i could get ray marcher to be\n//This ray marcher is 18 lines of code and 399 (Its under 400! :P) characters (whitespace and newline characters dont count).\n//Note the small amount of blur in the distance as well as the fact that there is no if statement in the loop.\n//I didnt found any way of removing it without adding more characters (new line characters dont count).\n//This also reduces performance alot. Still you can get ~60 fps (with some lagspikes) 1080p with 96 steps\n//---Aaro PerÃ¤maa\n#define ti iTime\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n\tvec3 d = normalize(vec3(uv, 1));\n\tfloat t = 0.0;\n\tfor(int i=0; i < 96; i+=1){\n\t\tvec3 p = d * t;\n\t\tp.z += ti * 10.0;\n\t\tp = vec3(p.x * cos(ti) - p.y * sin(ti), p.x * sin(ti) + p.y * cos(ti), p.z);\n\t\tp = mod(p, 10.0) - 0.5 * 10.0;\n\t\tvec2 q = vec2(length(p.xz) - 2.0, p.y);\n\t\tfloat d = min(distance(p, vec3(0)) - 1.3, length(q) - 0.2);\n\t\tt+=d;\n\t}\n\tfragColor = vec4(1.0 / t * 7.5);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdfXWl","date":"1407764749","viewed":201,"name":"Tiny Ray marcher","username":"Aaro","description":"Little testing of my own skills on what is the smallest (least characters) ray marcher that i could make (that has decent scene, not just a one sphere). This is what i came up with. I know, it has horrible performance, but i couldn't get it faster.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["ray","distance","tiny","march","fields"],"hasliked":0,"parentid":"","parentname":""}}