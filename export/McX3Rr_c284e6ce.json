{"ver":"0.1","info":{"id":"McX3Rr","date":"1702678165","viewed":38,"name":"hexa estudo 2 - hive distance","username":"Elsio","description":"j","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["hexagonal","sting","honey","mel","abelha"],"hasliked":0,"parentid":"clVBzd","parentname":"hexa estudo 1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define hex .866\n\nvec2 nearestHexCell(vec2 p) {\n    p /= vec2(hex, 1);\n    vec2 h = floor(p);\n    \n    h += mod(h + vec2(0, step(2., mod(h.x + 1., 4.))), 2.);\n    if (dot(abs(p - h), vec2(3, 2)) > 4.) {\n        h += sign(p - h) * vec2(2, 1);\n    }\n    \n    return h * vec2(hex, 1);\n}\n\n\nfloat hexDist(vec2 p) {\n    p -= nearestHexCell(p);\n    p = abs(p);\n    return max(dot(p, vec2(hex, .5)), p.y) - 1.;\n}\n\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 R = iResolution.xy,\n         m = 9. * (iMouse.xy - .5 * R) / R.y,\n         p = 9. * (u         - .5 * R) / R.y;\n        \n    float d = hexDist(p),\n          px = 18. / R.y, \n          x = smoothstep(px, .0, abs(d)); \n\n    o = vec4(9, 6, 3, 0) * .1; \n    o *= 1. - exp2(-12. * abs(d));\n    o *= .7 + .2 * cos(50. * d);\n    \n    d = hexDist(m);\n    \n    o.gb *= smoothstep(.0, .01, length(p - m) - abs(d));\n    o += x - o * x;\n}","name":"Image","description":"","type":"image"}]}