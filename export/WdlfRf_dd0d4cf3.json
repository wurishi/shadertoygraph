{"ver":"0.1","info":{"id":"WdlfRf","date":"1588767222","viewed":52,"name":"SDF_2Dline","username":"sakiCunha","description":"https://www.shadertoy.com/view/3tdSDj\nhttps://www.youtube.com/watch?v=PMltMdi1Wzg&list=PL0EpikNmjs2CYUMePMGh3IjjP4tQlYqji&index=1\n\nhttps://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sign.xhtml","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SDF_2Dline( vec2 A, vec2 B, float roundness,vec2 p)\n{\n    // three vector\n    vec2 pA = A - p;\n    vec2 pB = B - p;\n    vec2 BA = A - B;\n    \n    // project pA to AB\n    float proj = dot(pA,BA)/length(BA);\n    // compare with the length of AB\n    proj /= length(BA);\n    // map to 0~1\n    //--* proj > 1.0 and proj < 0.0 means the distance to the line is the length of pA or pB\n    proj = clamp(proj,0.0,1.0);\n    return length(pA - proj * BA) - roundness;\n}\n\nconst vec2 _pointA = vec2(-0.5,0.0);\nconst vec2 _pointB = vec2(0.5,0.0);\nconst float _roundness = 0.1;\n\nconst vec3 _col = vec3(0.1,0.4,0.7);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord - iResolution.xy)/iResolution.y;\n    \n    float d_line = SDF_2Dline(_pointA,_pointB,_roundness,uv);\n    \n    vec3 col = vec3(1.0) - _col*sign(d_line);\n    col *= 1.0 - exp(-3.0*abs(d_line));\n    col *= cos(120.0*d_line);\n    col = mix( col, vec3(1.0),1.0-smoothstep(0.0,0.015,abs(d_line)) );\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}