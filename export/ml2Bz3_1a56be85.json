{"ver":"0.1","info":{"id":"ml2Bz3","date":"1694342165","viewed":50,"name":"my first shader - tutorial","username":"guarazero","description":"this is the first shader I ever make :D this was fun, on to new inventions","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//original from https://www.youtube.com/watch?v=f4s1h2YETNY&t=1s\n\nvec3 palette(in float t){\n    vec3 a = vec3(0.558, 0.388, 0.558);\n    vec3 b = vec3(0.588, 0.248, 0.198);\n    vec3 c = vec3(1.338, 1.168, 2.083);\n    vec3 d = vec3(1.337, 1.032, 1.365);\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    //saving first circle color loop to play on background\n    vec2 uv0 = uv;\n    // save this to render after for loop\n    vec3 finalcol = vec3(0.0);\n    for(float i = 0.0; i < 2.0; i++){\n        //fract repeats the pattern\n        uv = fract(uv*2.0) - 0.5;\n        // circle with flair\n        float d = length(uv)*exp(-length(uv0));\n        // cosine palette function with coefficients, by inigo quilez\n        vec3 col = palette(length(uv0*.3)+0.4*iTime);\n        d = sin(d*8. + iTime)/8.;\n        //d-=0.25;\n        d = abs(d);\n        d=0.03/d;\n        //d = smoothstep(0.1, 0.15, d);\n        // Time varying pixel color\n        //vec2 col = 0.5 + 0.5*cos(iTime+uv.xy+vec2(5,0));\n\n        finalcol += col*d;\n    }\n    \n    // Output to screen\n    fragColor = vec4(finalcol, 1.0);\n}","name":"Image","description":"","type":"image"}]}