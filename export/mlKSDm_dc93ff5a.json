{"ver":"0.1","info":{"id":"mlKSDm","date":"1686149157","viewed":256,"name":"Symmetric Moving Neon Shader","username":"madmadi","description":"Inspired by kishimisu's youtube video: https://www.youtube.com/watch?v=f4s1h2YETNY\nRepository: https://github.com/madmadi/symmetric-moving-neon-shader","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["moving","pattern","neon","symmetric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.428, 1.0, 1.0);\n    vec3 d = vec3(0.618, 0.333, 0.667);\n    \n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec2 uvo = uv;\n    vec3 finalColor = vec3(0.);\n\n    uv.y += iTime * .2;\n    \n    for (float i = 0.; i < 3.; i++) {\n        uv = fract(uv * 1.5) - .5;\n\n        float d = length(uv) * exp(-length(uvo));\n\n        vec3 color = palette(length(uvo) + i * .5 + iTime * .3);\n\n        d = sin(d * 10. + iTime) / 10.;\n        d = abs(d);\n\n        d = pow(.01 / d, 1.3);\n\n        finalColor += color * d;\n    } \n\n    fragColor = vec4(finalColor, 1);\n}","name":"Image","description":"","type":"image"}]}