{"ver":"0.1","info":{"id":"7dS3Rz","date":"1616814881","viewed":102,"name":"Gear 2D using circle modificatio","username":"lumic","description":"Simple gear shape by modifying a circle SDF","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","gear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RINNER 0.65\n#define ROUTER 0.7\n#define REPITITION 12.0\n\nfloat sdCircle(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat sdModulatedCircle(vec2 p, float radius)\n{\n    float repeat = REPITITION + floor(cos(iTime) * 5.0);\n\n    // Circle is centered at origin, convert to polar coordinates\n    float r = length(p);\n    float angle = atan(p.y, p.x);\n    \n    float bump = smoothstep(0.25, 1.5, cos(angle * repeat + iTime) + 1.0) * 0.125;\n\n    return r - (radius + bump);\n}\n\nfloat sdSubtract(float d1, float d2 ) {\n    return max(-d1,d2);\n}\n\nfloat sdCombine( float d1, float d2 ) {\n    return min(d1,d2);\n}\n\nfloat gear(vec2 p) {\n\tfloat d1 = sdCircle(p, RINNER);\n\tfloat d2 = sdModulatedCircle(p, ROUTER);\n    \n    return sdSubtract(d1, d2);\n}\n\nfloat ring(vec2 p) {\n\tfloat d1 = sdCircle(p, RINNER - 0.1);\n    return abs(d1) - 0.05;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float zoom  = 2.0;\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y * zoom;\n    \n    float d = gear(p);\n    d = sdCombine(d, ring(p));\n    \n    // SDF Coloring based on https://www.shadertoy.com/view/3ltSW2\n    \n    float sgn = sign(d);\n    \n    col = col - sign(d) * vec3(0.1,0.4,0.7);\n    col *= 1.0 - exp(-1.75 * abs(d));\n\tcol *= 0.8 + 0.2 * smoothstep(0.0, 2.0, cos(50.0*d) + 1.0);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) );\n    \n    if (sgn > 0.0) {\n        col += smoothstep(1.75, 2.0, cos(100.0 * d) + 1.0);\n    } else {\n        col += 0.95;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}