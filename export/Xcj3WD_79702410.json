{"ver":"0.1","info":{"id":"Xcj3WD","date":"1704232956","viewed":33,"name":"Image Gradient (directional)","username":"calebxcaleb","description":"Taking directional gradients of the image","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvL = (fragCoord + vec2(-1, 0))/iResolution.xy;\n    vec2 uvLU = (fragCoord + vec2(-1, -1))/iResolution.xy;\n    vec2 uvLD = (fragCoord + vec2(-1, 1))/iResolution.xy;\n    vec2 uvR = (fragCoord + vec2(1, 0))/iResolution.xy;\n    vec2 uvRU = (fragCoord + vec2(1, -1))/iResolution.xy;\n    vec2 uvRD = (fragCoord + vec2(1, 1))/iResolution.xy;\n    vec2 uvU = (fragCoord + vec2(0, -1))/iResolution.xy;\n    vec2 uvD = (fragCoord + vec2(0, 1))/iResolution.xy;\n    \n    vec4 tex = texture(iChannel0, uv);\n    vec4 texL = texture(iChannel0, uvL);\n    vec4 texLU = texture(iChannel0, uvLU);\n    vec4 texLD = texture(iChannel0, uvLD);\n    vec4 texR = texture(iChannel0, uvR);\n    vec4 texRU = texture(iChannel0, uvRU);\n    vec4 texRD = texture(iChannel0, uvRD);\n    vec4 texU = texture(iChannel0, uvU);\n    vec4 texD = texture(iChannel0, uvD);\n\n    float val = (tex.x + tex.y + tex.z) / 3.0;\n    float valL = (texL.x + texL.y + texL.z) / 3.0;\n    float valLU = (texLU.x + texLU.y + texLU.z) / 3.0;\n    float valLD = (texLD.x + texLD.y + texLD.z) / 3.0;\n    float valR = (texR.x + texR.y + texR.z) / 3.0;\n    float valRU = (texRU.x + texRU.y + texRU.z) / 3.0;\n    float valRD = (texRD.x + texRD.y + texRD.z) / 3.0;\n    float valU = (texU.x + texU.y + texU.z) / 3.0;\n    float valD = (texD.x + texD.y + texD.z) / 3.0;\n\n    float dx = (abs(valR + valRU + valRD) - abs(valL + valLU + valLD));\n    float dy = (abs(valD + valLD + valRD) - abs(valU + valLU + valRU));\n    float gr = sqrt(pow(dx, 2.) + pow(dy, 2.));\n\n\n    if(uv.x < 0.333){\n        fragColor = vec4(dx, dx, dx, 1.0);\n    } else if(uv.x < 0.666){ \n        fragColor = vec4(dy, dy, dy, 1.0);\n    } else {\n        fragColor = vec4(vec3(gr), 1.0);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}