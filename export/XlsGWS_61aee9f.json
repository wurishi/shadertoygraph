{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Created by S.Guillitte\n\n\nfloat hash(float x)\n{\n\treturn fract(21654.6512 * sin(385.51 * x));\n}\nfloat hash( in vec2 p ) \n{\n    return fract(sin(p.x*15.32+p.y*35.78) * 43758.23);\n}\n\nvec2 hash2(vec2 p)\n{\n\treturn vec2(hash(p*.754),hash(1.5743*p.yx+4.5891))-.5;\n}\n\nvec2 hash2b(vec2 p)\n{\n\treturn vec2(hash(p*.754),hash(1.5743*p+4.5476351));\n}\nvec2 add = vec2(1.0, 0.0);\n\nvec2 noise2(vec2 x)\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    \n    vec2 res = mix(mix( hash2(p),          hash2(p + add.xy),f.x),\n                    mix( hash2(p + add.yx), hash2(p + add.xx),f.x),f.y);\n    return res;\n}\n\nvec2 fbm2(vec2 x)\n{\n    vec2 r = vec2(0.0);\n    float a = 1.0;\n    \n    for (int i = 0; i < 8; i++)\n    {\n        r += abs(noise2(x)+.5 )* a;\n        x *= 2.;\n        a *= .5;\n    }\n     \n    return r;\n}\n\nmat2 m2;\n\nvec2 fbm3(vec2 x)\n{\n    vec2 r = vec2(0.0);\n    float a = 1.;\n    \n    for (int i = 0; i < 6; i++)\n    {\n        r += m2*noise2((x+r)/a)*a; \n        r=-.8*abs(r);\n        a*=1.7;\n    }     \n    return r;\n}\n\nvec3 storm(vec2 x)\n{\n    float t = .5*iTime;\n    float st = sin(t), ct = cos(t);\n    m2 = mat2(ct,st,-st,ct);\n    x=fbm3(x+0.5*iTime)+2.;\n    x*=.35;\n        \n    float c = length(x);\n    c=c*c*c;\n    vec3 col=vec3(0.6-.1*x.x,0.7,0.8-.1*x.y)*c*x.y;   \n    return clamp(col,0.,1.);\n}\n\n\n\nfloat dseg( vec2 ba, vec2 pa )\n{\n\t\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), -0.2, 1. );\t\n\treturn length( pa - ba*h );\n}\n\nfloat arc(vec2 x,vec2 p, vec2 dir)\n{\n    vec2 r = p;\n    float d=10.;\n    for (int i = 0; i < 5; i++)\n    {\n        vec2 s= noise2(r+iTime)+dir;\n        d=min(d,dseg(s,x-r));\n        r +=s;      \n    }\n    return d*3.;\n    \n}\n\n\n\nfloat thunderbolt(vec2 x,vec2 tgt)\n{\n    vec2 r = tgt;\n    float d=1000.;\n    float dist=length(tgt-x);\n     \n    for (int i = 0; i < 19; i++)\n    {\n        if(r.y>x.y+.5)break;\n        vec2 s= (noise2(r+iTime)+vec2(0.,.7))*2.;\n        dist = dseg(s,x-r);\n        d=min(d,dist);\n        \n        r +=s;\n        if(i-(i/5)*5==0){\n            if(i-(i/10)*10==0)d=min(d,arc(x,r,vec2(.3,.5)));\n            else d=min(d,arc(x,r,vec2(-.3,.5)));\n        }\n    }\n    return exp(-5.*d)+.2*exp(-1.*dist);\n   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n\t\n\tvec2 p = 2.*fragCoord.xy/iResolution.yy-1.;\n    vec2 d;\n    vec2 tgt = vec2(1., -8.);\n    float c=0.;\n    vec3 col;\n    if(p.y>=0.)\n        col=storm((5.*p+.2)*p.y+.7*iTime)*p.y+2.5*(1.-(fbm2((p+.2)*p.y+.1*iTime)).x)*p.y*vec3(.4,.5,1.);\n\telse \n    {c = 2.*(1.-(fbm2(p+.2+.1*iTime)).x)*p.y*p.y;\n     col = c*vec3(.3,.5,1.);}\n    \n    \n    float t = hash(floor(5.*iTime));\n    tgt+=8.*hash2b(tgt+t);\n    if(hash(t+2.3)>.8)\n\t {\n\t\tc= thunderbolt(p*10.+2.*fbm2(5.*p),tgt);\t\n\t\tcol+=clamp(1.7*vec3(0.8,.7,.9)*c,0.,1.);\t\n\t}\n    \n\tfragColor = vec4(col, 0.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XlsGWS","date":"1424816406","viewed":1301,"name":"Stormy flight 2","username":"guil","description":"Improved version of my lightning bolt effect","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise"],"hasliked":0,"parentid":"","parentname":""}}