{"ver":"0.1","info":{"id":"NddyWn","date":"1653309888","viewed":72,"name":"overlayscr4sunrays","username":"Moloko","description":"asgqg","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["asfdfg"],"hasliked":0,"parentid":"ftSfWd","parentname":"overlayscreenbok2"},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\n//Screen\nvec3 screen(vec3 base, vec3 bl_layer){\n    return base + bl_layer - base * bl_layer;\n}\n\nvec2 rotate2D(vec2 _st, float _angle){\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\nvec2 scale2D(vec2 _st, vec2 _scale){\n    _st -= 0.5;\n    _st = mat2(_scale.x,0.0,\n               0.0,_scale.y) * _st;\n    _st += 0.5;\n    return _st;\n         \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    \n    vec4 tex0 = texture(iChannel0, uv);\n    \n    \n    \n    vec2 st = uv - 0.5;\n    st = rotate2D(scale2D(st, vec2(0.85 + 0.35*sin(iTime))), iTime/8.);\n    vec4 tex1 = texture (iChannel1, st);\n    tex1 *= step(0., st.x)*step(0., st.y);\n    tex1 *= step(0., 1.0-st.x)*step(0., 1.0-st.y);\n    \n    st = uv-0.5;\n    st = rotate2D(scale2D(st, vec2(0.45+ 0.015*sin((iTime)))), sin((iTime/64.))*PI);\n    vec4 tex2 = texture (iChannel2, st);\n    tex2 *= step(0., st.x)*step(0., st.y);\n    tex2 *= step(0., 1.0-st.x)*step(0., 1.0-st.y);\n    \n    st = uv;\n    st = rotate2D(scale2D(st, vec2(0.45+ 0.015*sin((iTime)))), sin((iTime/64.))*PI);\n    vec4 tex2a = texture (iChannel2, st);\n    tex2a *= step(0., st.x)*step(0., st.y);\n    tex2a *= step(0., 1.0-st.x)*step(0., 1.0-st.y);\n    \n    st = uv - 0.5;\n    st = rotate2D(scale2D(st, vec2(0.35 + 0.05*sin(iTime*4.))), 0.35*sin(iTime/10.)*PI);\n    vec4 tex3 = texture (iChannel3, st);\n    tex3 *= step(0., st.x)*step(0., st.y);\n    tex3 *= step(0., 1.0-st.x)*step(0., 1.0-st.y);\n    \n    vec3 color = screen(screen(screen(tex1.rgb, (0.65+0.35*sin(iTime*2.21))*tex2.rgb), tex3.rgb), (0.85+0.3*sin(iTime))*tex2a.rgb);\n\n    \n    fragColor = vec4(screen(tex0.rgb, color), 1.0);\n}","name":"Image","description":"","type":"image"}]}