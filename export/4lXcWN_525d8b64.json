{"ver":"0.1","info":{"id":"4lXcWN","date":"1533478312","viewed":131,"name":"Visualizer 2","username":"bytearray","description":"looks kinda trippy","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["music"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord / iResolution.xy);\n    \n\tfragColor = texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n#define N 10.\n\nfloat interpolate(vec2 pos)\n{\n    float a = texelFetch(iChannel0, ivec2(pos), 0).x;\n    float b = texelFetch(iChannel0, ivec2(pos)+ivec2(1, 0), 0).x;\n    return mix(a, b, fract(pos.x));\n}\n\nvec4 lastLayer(vec2 uv)\n{\n    uv += vec2(sin(length((uv-vec2(.5))) + iTime/15.), sin(length(uv*15.-vec2(.5)) + iTime/1.5)) * .01;\n    \n    if(uv.y < 0. || uv .y > 1. || uv.x < 0. || uv.x > 1.) return vec4(0);\n    return texture(iChannel1, uv) * 0.9;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.x / iResolution.y, fragCoord.y / iResolution.y) - vec2(.5);\n    uv.x += (1. - iResolution.x / iResolution.y) / 2.;\n    \n    fragColor = lastLayer(fragCoord / iResolution.xy);\n    \n    vec2 rad = vec2(length(uv), atan(uv.x, uv.y));\n    vec2 rad2 = rad;\n    \n    rad.y  = mod(rad.y - iTime, PI*2./N);\n    rad2.y = mod(rad2.y + iTime, PI*2.);\n    \n   \tfloat tx = 512. * rad.x;\n    float tya = 512. * mod((rad2.y + PI*0.) / (PI*4.), PI*2.);\n    float tyb = 512. * mod((rad2.y + PI*2.) / (PI*4.), PI*2.);\n    \n   \t// first row is frequency data (48Khz/4 in 512 texels, meaning 23 Hz per texel)\n\tfloat freqa = interpolate(vec2(tya,0));\n    float freqb = interpolate(vec2(tyb,0)); \n    // second row is the sound wave, one texel is one mono sample\n    float wave = interpolate(vec2(tx,1));\n    \n    float w = .0025/rad.x;\n    if(rad.y > wave - w && rad.y < wave + w)\n    {\n        fragColor = vec4(1., 0., 0., 1.);\n    }\n    if(\n        rad.x > freqa*.7 && rad.x < freqa*.7 + 0.005 ||\n        rad.x > freqb*.7 && rad.x < freqb*.7 + 0.005\n    ){\n        fragColor = vec4(0., 1., 0., 1.);\n    }\n}\n","name":"Buffer A","description":"","type":"buffer"}]}