{"ver":"0.1","info":{"id":"7sKGD3","date":"1632473477","viewed":336,"name":"Line Mesh Pulsate","username":"vlader08","description":"desc","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["line","mesh","connected"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n\nfloat N21(vec2 p) {\n\n    p = fract(p * vec2(233.34, 851.73));\n    p += dot(p, p + 23.45);\n    \n    return fract(p.x * p.y);\n}\n\nvec2 N22(vec2 p) {\n\n    float n = N21(p);\n    \n    return vec2(n, N21(p+n));\n}\n\nvec2 GetPos(vec2 id, vec2 off) {\n\n    vec2 n = N22(id + off) * iTime;\n    \n    return off + sin(n) * .4;\n}\n\nfloat DistLine(vec2 p, vec2 a, vec2 b) {\n\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    \n    float t = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n    \n    return length(pa - ba * t);\n}\n\nfloat Line(vec2 p, vec2 a, vec2 b) {\n    \n    float d = DistLine(p, a, b);\n    float m = S(.03, .01, d);\n    float d2 = length(a-b);\n    m *= S(1.2, .8, d2) * .5 + S(.05, .03, abs(d2 - .75));\n    return m;\n}\n\nfloat Layer(vec2 uv) {\n    float m = 0.;\n\n    vec2 gv = fract(uv) - .5;\n    vec2 id = floor(uv);\n    \n    vec2 p[9];\n    \n    int i = 0;\n    for(float y = -1.; y <= 1.; y++) {\n        for(float x = -1.; x <= 1.; x++) {\n            p[i++] = GetPos(id, vec2(x, y));\n        }\n    }\n    \n    float t = iTime*10.;\n    \n    for(int i = 0; i < 9; i++) {\n        m += Line(gv, p[4], p[i]);\n        \n        vec2 j = (p[i]-gv) * 20.;\n        float sparkle = 1./dot(j, j);\n       \n        float x_ = fract(p[i].x);\n        \n        m += sparkle * (sin(t + x_ * 10.0) * 0.5 + 0.5);\n    }\n    \n    m += Line(gv, p[1], p[3]);\n    m += Line(gv, p[1], p[5]);\n    m += Line(gv, p[5], p[7]);\n    m += Line(gv, p[7], p[3]);\n    \n    return m;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    vec2 mouse = (iMouse.xy / iResolution.xy) - .5;\n\n    float gradient = uv.y;\n\n    float m = 0.;\n    float t = iTime * .1;\n    float s = sin(t);\n    float c = cos(t);\n    \n    mat2 rot = mat2(c, -s, s, c);\n    \n    uv *= rot;\n    mouse *= rot;\n    \n    for(float i = 0.; i < 1.; i += 1./4.) {\n        float z = fract(i+t);\n        float size = mix(10., .5, z);\n        \n        float fade = S(0., .5, z) * S(1., .8, z);\n        \n        m += Layer(uv * size + i * 20. - mouse) * fade ; // * ((i+1.) * 0.2)\n    }\n    \n    vec3 base = sin(t * 25. * vec3(.345, .456, .657)) * .4 + .6;\n    \n    vec3 col = m * base;\n    \n    col -= gradient * base;\n    \n    fragColor = vec4(col,1.0);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}