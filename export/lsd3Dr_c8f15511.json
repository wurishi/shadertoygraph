{"ver":"0.1","info":{"id":"lsd3Dr","date":"1449154506","viewed":156,"name":"[Test]Â Bounce 2","username":"Ultraviolet","description":"pong !","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bouncingball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nvoid BoxReflect(inout float p, in float bbmin, in float bbmax)\n{    \n    \n    p =  bbmax-(abs(bbmax-mod( p - bbmin, (bbmax-bbmin)*2.) - bbmin));\n    return;\n    \n    \n    p = bbmin + mod(p-bbmin, 2.0*(bbmax - bbmin));\n    if(p > bbmax)\n    \tp = bbmax - (p - bbmax);\n    \n}\n\nvoid BoxReflect(inout vec2 p, in vec2 bbmin, in vec2 bbmax)\n{\n    BoxReflect(p.x, bbmin.x, bbmax.x);\n    BoxReflect(p.y, bbmin.y, bbmax.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float radius = 0.1;\n    float ratio = iResolution.x/iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    \n    vec2 speed = normalize(vec2(1.0, sqrt(2.0))) * 0.5;\n    vec2 p0 = vec2(0.5, 0.5) + iTime*speed;\n    \n    BoxReflect(p0, vec2(radius), vec2(ratio-radius,1.0-radius));\n    \n    float d = length(uv-p0);\n    float dd = 0.0;\n    if(d < radius)\n        dd = 1.0;\n    \n\tfragColor = vec4(vec3(dd, 0.0, 0.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}