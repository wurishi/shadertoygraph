{"ver":"0.1","info":{"id":"WsyyD1","date":"1607801278","viewed":130,"name":"1st Assembly MS october2020","username":"MonsieurSoleil","description":"Shaderbattle","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["shaderbattle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n#define mod01 floor(mod(time * 2.0, 4.0))\n#define mod02 floor(mod(time * 1.0, 4.0))\nfloat gg = 0.0;\n\nmat2 rot(float a)\n{\n \tfloat ca = cos(a);\n    float sa = sin(a);\n    \n    return mat2(ca,sa,-sa, ca);\n}\n\nstruct matter\n{\n \tfloat m;\n    int type;\n    bool reflected;\n};\n    \nfloat box(vec3 p, vec3 s)\n{\n \tp = abs(p) -s;\n    return max(p.x, max(p.y, p.z));\n}\n\nfloat rnd(vec2 a)\n{\n \treturn fract(dot( sin(a * 452.1365 + a.yx * 452.1236), vec2(423.6548)));   \n}\n\n\nfloat rnd(float a)\n{\n \treturn fract(sin(a * 452.1365) * 423.6548);   \n}\n\nfloat opSmoot(float a, float b, float k)\n{\n \tfloat h = clamp(0.5 - 0.5 * (b-a) /k, 0.0, 1.0);\n    \n    return mix(b, a, h) + k *h *(1.0-h);\n}\n\nvoid map(inout matter mat, vec3 p)\n{\n \tfloat mat01, mat02, mat03;\n    vec3 p01 = p, p02 = p, p03 = p, p04 = p, p05 = p;\n    \n    p01.xz *= rot(iTime * 0.25);\n    p01.yz *= rot(iTime * 0.15);\n    \n    mat02 = -box(p01, vec3(2.0 + 0.35 * mod01));\n    \n    float rep01 = 0.60;\n    float rep02 = 0.20;\n    \n    float id = rnd((floor(abs(p.xz) / rep01 - 0.5) - 0.5) * rep01 * 16.2) * 2.0;\n    \n    //p03.xz = (fract(abs(p.xz) / rep01 - 0.5) - 0.5) * rep01;\n    //p05.yz *= rot(iTime * 0.5);\n    p04 = (fract(abs(p05) / rep02 - 0.5) - 0.5) * rep02;\n    p04.yz *= rot(iTime * 0.5);\n    p04.xz *= rot(iTime * 0.25);\n    \n   vec2 scale = vec2(0.15, 0.5) * rot(iTime * 0.2);\n    \n    p03.xz = (fract(abs(p.xz) / rep01 - 0.5) - 0.5) * rep01;\n    \n    p03.yz *= rot(iTime * 0.35);\n    p03.xz *= rot(iTime * 0.05);\n    p03.xy *= rot(iTime * 0.25);\n    \n    \n    mat03 = box(p03 + vec3(0.02 * mod02 * id, 0.0, -0.02 * mod01 * id), vec3(0.2, 0.2 + 0.10 * mod01 * id, 0.2));\n    mat03 = opSmoot(box(p04, vec3(0.05, 0.01 + abs(sin(iTime * 0.15)) * 0.5, 0.05)) , mat03, 0.15);\n        \n    mat02 = min(mat02, mat03);\n    \n    if(mat02 < 0.01)\n    {\n     \tmat.type= 1;   \n    }\n    \n    if(mat.reflected)\n    {\n        p02.xz *= rot(-iTime * 0.25);\n        p02.yz *= rot(iTime * 0.55);\n        \n        mat01 = box(p02, vec3(0.05, 125.0, 0.05));\n     \tgg += 0.15/(0.05+abs(mat01));   \n    }\n    \n    mat.m = mat02;\n}\n\nvec3 normals(vec3 p)\n{\n \tvec2 uv = vec2(0.01, 0.0);\n    \n    matter m01, m02, m03, m04;\n    \n    map(m01, p);\n    map(m02, p - uv.xyy);\n    map(m03, p - uv.yxy);\n    map(m04, p - uv.yyx);\n    \n    return normalize(m01.m - vec3(m02.m, m03.m, m04.m));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv /= vec2(iResolution.y/iResolution.x, 1.0);\n\n    vec3 o = vec3(2.0 * cos(iTime * 0.2), 0.75, 2.0 * sin(iTime * 0.2)), t = vec3(0.0);\n    vec3 fr = normalize(t-o);\n    vec3 ri = normalize(cross(vec3(0.0, 1.0, 0.0), fr));\n    vec3 up = normalize(cross(fr, ri));\n    vec3 dir = normalize(fr + uv.x * ri + uv.y * up);\n    vec3 p = o + dir * 0.75;\n    \n    matter mat;\n    float d;\n    \n    \n    \n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    \n    for(int i = 0; i < 150; ++i)\n    {\n     \tmap(mat, p);\n        \n        col += gg * 0.00025 * vec3(1.0, 0.65, 0.75);\n        \n        if(mat.m < 0.01)\n        {\n         \tif(mat.type == 1)\n            {\n             vec3 n = normals(p);\n                dir = reflect(dir, -n);\n                mat.m = 0.25;\n                mat.type = 0;\n                mat.reflected = true;\n                \n            }\n        }\n        \n        \n        \n        p += mat.m * dir * 0.55;\n        d += mat.m * 0.55;\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}