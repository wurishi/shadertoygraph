{"ver":"0.1","info":{"id":"tlfyDl","date":"1593393981","viewed":69,"name":"raycasting using simple camera","username":"IXshader","description":"virtual camera to shoot rays from","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simplecamera"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14153265\n\n\n\n\n\n\n\n\n\n//explained in newbie codes 1\n//this one is simplified as per iq's notes\nbool iSphere(vec3 ro , vec3 rd, vec4 spr)\n{\n    vec3 rc = ro - spr.xyz;\n    float b = dot(rc,rd);\n    float c = dot(rc,rc) - spr.w*spr.w;\n    \n    float d = b*b - c;\n    \n    if( d > 0.0)\n    {\n\t  return true;\n    }\n\telse\n    {\n\t  return false;\n    }\n\n}\n\n\n//simple camera\nvoid cam(out vec3 ro , out vec3 rd, in vec2 uv)\n{\n \n    //A virtual camera\n   \t//vetical fiel of view angle in radian\n    float fov = 45.0 * PI/180.0;\n    \n    //near clipping plane\n    float znear = -1.0;\n    //virtual plane size\n    float side = -2.0 * tan(fov/2.0);\n \n    ro = vec3(0.0,0.0,1.0);\n    \n    //this point lies on the virtual image plane\n    //neg y because we want to switch y axis from bot to top\n    //scaling from window coordinate system to screen coordinate system\n    \n    vec3 point = vec3(znear * (uv.x)*side , -znear*(uv.y)*side, znear);\n    \n    rd = normalize(point - ro);\n}\n\n\n//rayOrigin = ro\n//rayDirection = rd\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5);\n    \n\tuv.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = vec3(1.0);\n   \tvec3 ro ,rd;\n    cam(ro,rd,uv);\n    \t\n    \n    if(iSphere(ro,rd,vec4(0.0,0.0,-3.0,0.5)))\n       {\n           col = mix(vec3(1.0,0.0,0.0),vec3(1.0,1.0,0.0),2.0*uv.y);\n           \n       }\n    else\n       {\n           col = mix(vec3(0.0,0.0,0.1),vec3(1.0),1.5*dot(uv,uv));\n       }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}