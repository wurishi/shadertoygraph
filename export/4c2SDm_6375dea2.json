{"ver":"0.1","info":{"id":"4c2SDm","date":"1708369025","viewed":23,"name":"Juggling Orbits","username":"drdavis65","description":"Scrumdidly","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(in vec2 u, in float r)\n{\n    return length(u) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float r = (sin(iTime)+1.0)*.05+0.1;\n    \n    float d = circle(uv, r);\n    float d1 = circle(uv+vec2(sin(iTime),cos(iTime)), 1.0-r);\n    float d2 = circle(uv+vec2(sin(iTime + 1.0-r),cos(.5*iTime + 1.0)), r);\n    // Time varying pixel color\n    vec3 col = (d>0.0) ? vec3(.5,.0,1.0) : vec3(0.0,0.0,0.0);\n    col = (d1>0.0) ? col : vec3(1.0);\n    col = (d2>0.0) ? col : vec3(1.0,0,1.0);\n    col = (d1<=0.0 && d2<=0.0) ? vec3(1.0,0.25*sin(iTime/3.0)+0.75,0.0) : col;\n    for(float i = 0.0; i<3.0; i++)\n    {\n        float d3 = circle(uv+vec2(sin(-4.0*iTime + 3.14/1.5 * i + 3.14/6.0),cos(-4.0*iTime+ 3.14/1.5* i + 3.14/6.0)),r);\n        col = (d3>0.0) ? col : vec3(.25*(i+1.0),0.0,.25*(i+1.0));\n       \n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}