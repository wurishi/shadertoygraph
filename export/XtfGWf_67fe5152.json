{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - vec2(0.5,0.5);\n    //Aspect ratio correction\n    uv.x *= iResolution.x/iResolution.y;\n      \n    //Calculate the angle from the center.\n    float angle = atan(uv.y,uv.x) + iTime;\n    \n    //Calculate the radius from the center.\n    float radius = sqrt(uv.x*uv.x + uv.y * uv.y);\n   \n    //Apply a sin operation to produce rings.\n    float radialIntensity = pow(sin(radius * 32.0) * 0.5 + 0.5, 2.0) * radius;\n    \n    //Apply a sin opreation to produce bands\n    float angleIntensity = pow(sin(angle*32.0) * 0.5 + 0.5, 2.0);\n    \n    //Multiply the masks together\n    float intensity = radialIntensity*angleIntensity;\n    \n    //Create a base color\n    vec3 color = vec3(0.0,0.0,0.15);\n    //Construct a new Vec3 using the same number for each component.\n    color+=vec3(intensity);\n    //Set the final color. Note, a vec3 is used for the first 3 components.\n    fragColor = vec4(color, 1.0);\n    \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XtfGWf","date":"1425504558","viewed":1143,"name":"SimpleDots2","username":"Kyle273","description":"A second version of SimpleDots for www.ibreakdownshaders.blogspot.com. Now with motion!\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""}}