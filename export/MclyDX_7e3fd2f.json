{"ver":"0.1","info":{"id":"MclyDX","date":"1721707598","viewed":57,"name":"jul222024 [strobe warning]","username":"brendanluu","description":"bruh","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["popart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.439, 0.420, 0.420);\n    vec3 b = vec3(0.322, 0.318, 0.322);\n    vec3 c = vec3(0.447, 0.431, 0.443);\n    vec3 d = vec3(0.000, 0.000, 0.000);\n    \n    return a + b * cos(1.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Adjust the uv.x coordinate to introduce the glitch effect\n    uv.x *= iResolution.x / iResolution.y;\n    uv.x *= 1. + .5 * (iResolution.x / iResolution.y);\n\n    // Rotate the UV coordinates\n    float angle = iTime;\n    float s = sin(angle);\n    float c = cos(angle);\n    mat2 rotation = mat2(c, -s, s, c);\n   // uv = rotation * (uv - 100.0) + 0.5;\n\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 1.0; i += 0.1) {\n        uv = fract(uv * 0.1);\n        float d = length(uv);\n        vec3 col = palette(iTime /.00000000000001 + length(uv0));\n        d = sin(d * 8.0 + (iTime+30.0) * 100000.0) / 5.0;\n        d = abs(d);\n        d = .001 / d;\n        finalColor += col * d;\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}