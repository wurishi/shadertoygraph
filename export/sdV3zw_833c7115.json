{"ver":"0.1","info":{"id":"sdV3zw","date":"1631290534","viewed":56,"name":"Spinning cross","username":"Sabouh","description":"Just two lines spinning","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rotation","cross","spinning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265f;\nconst vec2 center = vec2(0.5,0.5); // center of rotation\n\n\n//Increase rotationSpeed value to spin faster\nvec2 applyRotation(vec2 coord, vec2 center, float rotationSpeed)\n{\n    float X = coord.x - center.x;\n    float Y = coord.y - center.y;\n    float angle = iTime * rotationSpeed;\n    float rotX = X * cos(angle) - Y * sin(angle) + center.x;\n    float rotY = X * sin(angle) + Y * cos(angle) + center.y;\n    return vec2(rotX,rotY);\n}\n\nbool IsOnHorizontalLine(vec2 coord)\n{\n    float lineLength = 0.2;\n    float minLimit =  center.x - lineLength/2.0;\n    float maxLimit =  center.x + lineLength/2.0;\n    float lineThickness =  2.0/iResolution.y ;\n    coord = applyRotation(coord, center, 3.0);\n    return coord.x > minLimit && coord.x < maxLimit \n        && coord.y > center.y - lineThickness && coord.y < center.y + lineThickness;\n}\n\nbool IsOnVerticalLine(vec2 coord)\n{\n    float lineLength = 0.5;\n    float minLimit =  center.y - lineLength/2.0;\n    float maxLimit =  center.y + lineLength/2.0;\n    float lineThickness = 2.0/iResolution.x ;\n    coord = applyRotation(coord, center, 1.0);\n    return coord.x > center.x - lineThickness  && coord.x < center.x + lineThickness\n        && coord.y > minLimit && coord.y < maxLimit;\n}\n\nvec3 resColor( in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if( IsOnHorizontalLine(uv) || IsOnVerticalLine(uv)){\n        return vec3(0.,0.,0.); // lines color\n    }else {\n        return  0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)); // background color\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = vec4(resColor(fragCoord),1.0);\n}","name":"Image","description":"","type":"image"}]}