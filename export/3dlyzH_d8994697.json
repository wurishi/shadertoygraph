{"ver":"0.1","info":{"id":"3dlyzH","date":"1584221432","viewed":46,"name":"Lab10_CPE471","username":"chxiao","description":"alternative","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cpe471"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 col;\n//approximate the normal of a cone at the given location with the specified radius\nvec3 myCone(vec2 inP, vec2 pos, float rad) {\n\tfloat d = length(pos - inP) - rad;\n    if (d<0.0)\n\t\treturn vec3(inP.x-pos.x, inP.y-pos.y, clamp(rad+d, 0.0, rad)); \n    else\n\t\treturn vec3(0.0);\n}\n\nvec3 reset(vec3 cone, vec3 color){\n    vec3 LV = vec3(1,1.5,1);\n    vec3 sNorm = normalize(cone) ;\n    vec3 light = normalize(LV);\n    vec3 normal = normalize(sNorm);\n    float ambient = clamp(0.5 + 0.5 * sNorm.y, 0.0, 1.0);\n    float diff = clamp(dot(normal,light),0.0, 1.0);\n    vec3 lightDir = normalize(vec3(0.0, 4.0, 5.0));\n    vec3 eye = vec3(0.0, 1.0, 2.0);\n    col = ambient * color; \n    col += diff * color;\n   \treturn col;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){ \n   \t\n    vec3 green = vec3(0.1, 0.9, 0.1);\n    vec3 red = vec3(0.9,0.1,0.1);\n    vec3 yellow = vec3(0.9,0.9,0.1);\n\n    vec3 lcone = myCone(fragCoord.xy, vec2(iResolution.x*0.50, iResolution.y*0.50), 100.0);\n   // col = reset(cone, yellow);\n    if(lcone != vec3(0.0)){\n        col= reset(lcone, green);\n    }\n    vec3 mcone = myCone(fragCoord.xy, vec2(iResolution.x*0.65, iResolution.y*0.35), 40.0);\n    if(mcone != vec3(0.0)){\n       col= reset(mcone, yellow);\n    } \n    vec3 cone = myCone(fragCoord.xy, vec2(iResolution.x*0.25, iResolution.y*0.75), 50.0);\n    if(cone != vec3(0.0)){\n        col = reset(cone, red);\n    }\n\n\n    fragColor = vec4(col, 1.0);\n   // fragColor = vec4(sNorm.x, sNorm.y, sNorm.z, 1.0); \n}\n\n\n\n","name":"Image","description":"","type":"image"}]}