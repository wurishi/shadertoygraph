{"ver":"0.1","info":{"id":"3dlXzr","date":"1550498936","viewed":72,"name":"Wwavves","username":"Confession","description":"Trippy looking animation with overlapping and rotating squares","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ROTATE_SPEED 0.1\n#define WAVE_FREQUENCY 0.16\n#define SQUARE_SIZE 0.1\n#define WAVE_SPEED 9.0\n#define MIN_SQUARE_SIZE 0.1\n#define DELTA_SIZE 2.0\n#define FIRST_COLOR vec3(1.0)\n#define SECOND_COLOR vec3(1.0)\n#define OVERLAP_AREA 3.0\n#define TIME_SPEED 0.1\n\nfloat sqare(vec2 p, vec2 uv, float s, float a)\n{\nvec2 f = vec2(cos(a), sin(a));\nvec2 r = vec2(f.y, -f.x);\nvec2 rp = uv - p;\nreturn smoothstep(s, s*0.9999, max(max(max(dot(rp, f), -dot(rp, f)), dot(rp, r)), -dot(rp, r)));\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime * TIME_SPEED;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv*=2.0;\n    uv-=vec2(1.0);\n    uv.x *= iResolution.x/iResolution.y;\n    vec2 luv = mod(uv/SQUARE_SIZE, 1.0);\n    vec2 id;\n    vec3 col;\n    float br = 0.;\n\n    for(float i = -OVERLAP_AREA; i <= OVERLAP_AREA; i++)\n    {\n    for(float j = -OVERLAP_AREA; j <= OVERLAP_AREA; j++)\n    {\n    id = floor(uv/SQUARE_SIZE+vec2(i, j))*WAVE_FREQUENCY;\n    br = br + sqare(vec2(0.5)+vec2(i,j),luv,(sin(-t*WAVE_SPEED+length(id))/2.0+0.5)*DELTA_SIZE+MIN_SQUARE_SIZE, t*ROTATE_SPEED);\n    }\n    }\n    id = floor(uv/SQUARE_SIZE)*WAVE_FREQUENCY;\n    col = vec3(mod(br, 2.0));\n    col *= mix(FIRST_COLOR, SECOND_COLOR, mod(pow(sin(-t+length(uv/SQUARE_SIZE*WAVE_FREQUENCY)), 2.0), 1.0));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}