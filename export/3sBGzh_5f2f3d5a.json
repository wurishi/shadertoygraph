{"ver":"0.1","info":{"id":"3sBGzh","date":"1548069865","viewed":240,"name":"Toto 134554135","username":"theepicsnail","description":"https://www.youtube.com/watch?v=FTQbiNvZqaY","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["rains","africa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1416\n#define MAX_DIST 1000.0\n#define EPS 0.001\n#define ITR 100.0\nvec2 delta = vec2(.01,0);\nvec3 lastCell = vec3(0);\n\nvec2 rotate(vec2 v, float angle) {return cos(angle)*v+sin(angle)*vec2(v.y,-v.x);}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 rand2(vec2 co){\n    return fract(sin(vec2(dot(co.xy ,vec2(12.9898,78.233)),dot(co.yx,vec2(13.1898,73.231)))) * 43758.5453);\n}\n\nfloat rand3(vec3 co){\n    return fract(sin(dot(co.xyz ,vec3(12.9898,78.233, 49.566))) * 43758.5453);\n}\n\nmat3 lookat(vec3 fw){\n\tfw=normalize(fw);vec3 rt=normalize(cross(fw,vec3(0.0,1.0,0.0)));return mat3(rt,cross(rt,fw),fw);\n}\n\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat sdVerticalCapsule( vec3 p, float h, float r )\n{\n    p.y -= clamp( p.y, 0.0, h );\n    return length( p ) - r;\n}\n\nint best_id;\nfloat best_distance;\nvec3 best_pos;\nvoid update(int i, vec3 pos, float d) {\n    if(d>best_distance) return;\n    best_pos = pos;\n    best_distance = d;\n    best_id = i;\n}\n\n\nfloat SDF(vec3 ro, vec3 rd) {\n    best_distance= 100.0;\n    update(0, ro, ro.y);\n    \n    float r = rand(floor(ro.xz/10.0-.5));\n    ro.xz = fract(ro.xz/10.0-.5)*10.0-5.0;\n    \n    //d = min(d, length(ro.xz)-.1);\n    \n    for(float len = 1.0; len > 0.0 ; len -= .1) {\n        ro.xz = rotate(ro.xz, 1.4);\n        update(1,ro, sdVerticalCapsule(ro, len, .1));\n        ro.x = abs(ro.x);\n        ro -= vec3(0.0,len,0);\n        ro = reflect(ro, normalize(vec3(rotate(vec2(0,1),1.7+ r*.1 + sin(iTime*3.0)*.01), 0)));\n        update(1,ro, sdVerticalCapsule(ro, len, .1));\n        //d = min(d, sdVerticalCapsule(reflect(ro, normalize(vec3(1.0,.1,0))), 1.0, .1));\n        //d = min(d, sdVerticalCapsule(reflect(ro, normalize(vec3(-1.0,.1,0))), 1.0, .1));\n    }\n    \n    update(2,ro, length(ro)-.2);\n    \n    return best_distance;\n}\n\n\nvec3 EstNormal(vec3 ro, vec3 rd) {\n    float cx = SDF(ro+delta.xyy, rd)-SDF(ro-delta.xyy, rd);\n    float cy = SDF(ro+delta.yxy, rd)-SDF(ro-delta.yxy, rd);\n    float cz = SDF(ro+delta.yyx, rd)-SDF(ro-delta.yyx, rd);\n    return normalize(vec3(cx,cy,cz));\n}\n\nvec3 scene(vec3 ro, vec3 rd, vec2 uv) {\n    vec3 p = ro;\n    float t;\n    float d;\n    float i = 0.0;\n    float c = 1.0;\n    vec3 pos;\n    for(; i < ITR ; i++) {\n    \tt += d = SDF(pos=ro+rd*t,rd);\n        c = min(d,c);\n        if(t > MAX_DIST || d < EPS) break;\n    }\n   \tvec3 cell = lastCell;\n    vec3 normal = EstNormal(pos, rd);\n    \n    \n    //vec3 color = hsv2rgb(vec3(rand(vec2(float(best_id),0.0)),1,1));\n    vec3 color=vec3(1,0,1);\n    if(i < ITR) \n    switch(best_id){\n        case 0: color=vec3(.2,.5,.1)*(1.0+rand(floor(pos.xz*10.0))); break;\n        case 1: color=vec3(.2,.1,.0)*(1.0+rand3(floor(best_pos*20.0))); break;\n        case 2: color=vec3(.1,.2,.1)*(1.0+rand3(floor(best_pos*100.0))); break;\n    }\n    color *= 10.0;\n    return color*dot(normal,-rd)/(t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat tim=iTime;\n\tvec2 uv=fragCoord.xy/iResolution.xy;\n\ttim*=0.5;\n\t\n    \n    vec3 ro = vec3(0,1,0);\n    ro.xy = rotate(ro.xy, sin(iTime)*.3);\n    ro.z = -7.0;\n    //ro.xz = rotate(ro.xz, iTime);\n    ro.x += 5.0;\n    ro.y += 1.0;\n    ro.z += iTime;\n    float lr = sin(iTime*0.618*0.7)*.2;\n    float ud = sin(iTime*1.618*0.6)*.1;\n\tvec3 rd=lookat(vec3(\n        0, sin(iTime)*.2+3.0, 0\n    )-ro)*normalize(vec3((fragCoord.xy-0.5*iResolution.xy)/iResolution.y,1.0));\n    \n    \n\tvec3 color=scene(ro,rd,fragCoord.xy);\n\tcolor=clamp(color,0.0,min(tim,1.0));\n    \n    fragColor = vec4(color,1.0);\n    \n    fragColor.b += .3*rand(vec2(fragCoord.x, iTime));\n}\n","name":"Image","description":"","type":"image"}]}