{"ver":"0.1","info":{"id":"MdGfRm","date":"1528034413","viewed":447,"name":"Audio Reactive Roses","username":"lnae","description":"Trying to figure out how to use the audio input :)","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["2d","audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    float bass = texture(iChannel0, vec2(0.0, 0.25)).x;\n        \n    bass = bass * bass;\n    \n    uv *= 4.0;\n    \n    float time = 0.5 * iTime;\n    float angle = atan(uv.y, uv.x) + 2.0 * sin(PI * time);\n    float radius = length(uv);\n    \n    float wave = texture(iChannel0, vec2(abs(atan(uv.y, uv.x) / (2.0 * PI)), 0.75)).x;\n    \n    float n = mod(floor(time + 4.0), 10.0);\n    float d = mod(floor(time / 10.0 + 5.0), 10.0) + 1.0;  \n    float k = n / d;\n    float offset = sin(2.6 * sin(1.9 * sin(PI * time)));\n    \n    offset += bass;\n    \n    vec3 colorOffset = vec3(offset) + vec3(0.5, 0.25, 0.25) * (wave - 0.5);\n\n    vec3 res = vec3(10000.0);    \n    for(float i = 0.0; i < d; i++){\n    \tangle += 2.0 * PI;\n        res = min(res, abs(radius - ( cos(k * angle) + colorOffset)));\n        res = min(res, abs(-radius - (cos(k * (angle + PI)) + colorOffset)));\n    }\n    \n    res = (bass + 0.5) * smoothstep(0.05, 0.0, res);\n    \n    fragColor = vec4(res,1.0);\n}","name":"Image","description":"","type":"image"}]}