{"ver":"0.1","info":{"id":"dsl3DB","date":"1666773461","viewed":87,"name":"VoronoiNoise_1","username":"kenshin","description":"VoronoiNoise","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoinoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N22(vec2 p) {\n    vec3 a = fract(p.xyx * vec3(123.34, 234.34, 345.65));\n    a += dot(a, a + 34.45);\n    return fract(vec2(a.x * a.y, a.y * a.z));\n}\n\nfloat VoronoiNoise1(vec2 uv) {\n    float m = 0.;\n    float minDist = 100.;\n    float t = iTime * 0.2;\n    for(float i = 0.; i < 200.; i++) {\n        vec2 n = N22(vec2(i));\n        vec2 p = sin(n * t);\n        float d = length(p - uv);\n        m += smoothstep(.02, .01, d);\n        if(d < minDist) minDist = d;\n    }\n    return minDist;\n}\n\nvec2 VoronoiNoise2(vec2 uv) {\n    uv *= 30.;\n    vec2 gv = fract(uv) - .5;\n    vec2 id = floor(uv);\n    float t = iTime;\n    float minDist = 100.;\n    vec2 cellIndex = vec2(0.);\n    for(float y = -1.; y <= 1.; y ++) {\n        for(float x = -1.; x <= 1.; x ++) {\n            vec2 offs = vec2(x, y);\n            vec2 n = N22(offs + id);\n            vec2 p = offs + sin(n * t) * .5;\n            float d = length(gv - p);\n            if(d < minDist) {\n                minDist = d;\n                cellIndex = id + offs;\n            }\n        }\n    }\n    return vec2(minDist, cellIndex);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.);\n    \n    vec2 d = VoronoiNoise2(uv);\n    \n    col = vec3(d.x);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}