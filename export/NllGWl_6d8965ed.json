{"ver":"0.1","info":{"id":"NllGWl","date":"1623099665","viewed":68,"name":"regular hexagon #8","username":"zonu","description":"For study.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 画面の中心\n    vec2 center = iResolution.xy * 0.5;\n    \n    // ピクセルの座標\n    vec2 pixel = fragCoord.xy;\n    \n    // 正六角形の高さ\n    float height = 0.7 * iResolution.y;\n    \n    // √3\n    float sqrt3 = sqrt(3.0);\n    \n    // 正六角形の幅\n    float width = height * (2.0 / sqrt3);\n    \n    // centerを原点としたピクセル座標\n    vec2 diff = pixel - center;\n    \n    //  正六角形の各辺の内側か判定\n    float insideA = step(diff.x + diff.y / sqrt3, width / 2.0);\n    float insideB = step(-diff.x + diff.y / sqrt3, width / 2.0);\n    float insideC = step(pixel.y, center.y + height / 2.0);\n    float insideD = step(diff.x - diff.y / sqrt3, width / 2.0);\n    float insideE = step(-diff.x - diff.y / sqrt3, width / 2.0);\n    float insideF = step(center.y - height / 2.0, pixel.y);\n    \n    //  正六角形内かを判定\n    float inside = insideA * insideB * insideC * insideD * insideE * insideF;\n    \n    // ピクセルの色を設定\n    fragColor = vec4(inside, inside, inside, 1.0);\n}","name":"Image","description":"","type":"image"}]}