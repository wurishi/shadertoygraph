{"ver":"0.1","info":{"id":"ttByWt","date":"1595667839","viewed":563,"name":"Sky, Sun, Simple Lens flare","username":"devugspe","description":"This Shader Code made By Me and Open Source, so you can Use this Code without Credit ^_^ ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["simple","sun","sky","minecraft","shader","scattering","lensflare","lensflare","atmosphere","mcpe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n//  By Dimas Adiyaksa (Developer of Unreal Graphic Shader PE)\n\n//uniform vec2 iResolution;\n//uniform vec2 iMouse;\n//uniform float TIME;\n\n//#define time iTime\n//#define resolution iResolution\n#define saturate(x) clamp(x, 0., 1.)\n//#define gl_FragCoord fragCoord\n\nvec4 lensflare(vec2 uv, vec2 uvm){\n\tuv *= length(uv);\n\tfloat l1 = saturate (pow(1. -  length(uv - .5 * uvm), 7.))*.5;\n\n\tvec4 lensf = l1 * vec4(1, 0, 1, .3);\nreturn lensf;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.x *= iResolution.x / iResolution.y;\n\n\tvec2 mm = iMouse.xy /  iResolution.xy;\n\tmm.x *= iResolution.x / iResolution.y;\n\n\t// Sky\n\tvec4 sky = mix(vec4(.1, .3, .8, 1), vec4(.3, .7, 1, 1), uv.y);\n\n  if(mm.y == .0){\n\tmm += sin(iTime * .1);}\n\tfloat lp = length(uv - mm);\n\tfloat round = saturate(pow(1. - lp * 4., 10.));\n\tfloat gp = saturate(pow(1. - lp * 1., 6.));\n\n\t// Glare\n\tvec4 glare = vec4(.6, .2, .6, .01) * gp;\n\n\t// Sun\n\tvec4 sun = vec4(1) * round;\n\tsun += glare;\n\tsun += lensflare (uv, mm);\n\n\tfragColor = sky + sun;\n}\n","name":"Image","description":"","type":"image"}]}