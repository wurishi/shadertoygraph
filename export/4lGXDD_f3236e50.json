{"ver":"0.1","info":{"id":"4lGXDD","date":"1484308888","viewed":509,"name":"Smallest Enclosing Circle","username":"phi16","description":"drag to make a circle","likes":17,"published":1,"flags":32,"usePreview":1,"tags":["2d","game"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int read(int p,int q){\n    return int(texture(iChannel0,(vec2(p,q)+0.5)/iResolution.xy).x*255.);\n}\n\nvec4 SampleFontTex(vec2 uv) // https://www.shadertoy.com/view/llcXRl\n{\n    vec2 fl = floor(uv + 0.5);\n    uv = fl + fract(uv+0.5)-0.5;\n    return texture(iChannel1, (uv+0.5)*(1.0/16.0), -100.0) + vec4(0.0, 0.0, 0.0, 0.000000001);\n}\n\nint modN(int x,int y){\n    return int(mod(float(x),float(y))+0.5);\n}\n\nbool checkOK(float x,float y,float r){\n    bool ok = true;\n    for(int i=0;i<10;i++){\n        float px = float(read(0,i))/256.0;\n        float py = float(read(1,i))/256.0;\n        if(length(vec2(px,py) - vec2(x,y)) > r){\n            ok = false;\n        }\n    }\n    return ok;\n}\n\nvoid renderChar(int x,int y, vec2 pos, float size, vec3 color, inout vec4 fragColor, vec2 fragCoord){\n    vec2 p = (fragCoord - pos) / size;\n    if(abs(p.x) < 0.5 && abs(p.y) < 0.5){\n        float po = SampleFontTex(p+vec2(float(x),float(y))).a;\n        //fragColor.xyz = mix(fragColor.xyz,color,po);\n        if(abs(po-0.5) < 0.005){\n            fragColor.xyz = mix(fragColor.xyz,color,smoothstep(0.505,0.495,po));\n        }else if(po < 0.5){\n            fragColor.xyz = color;\n        }\n    }\n}\n#define renderC(x,y,p,s,c) renderChar(x,y,p,s,c,fragColor,fragCoord)\n\nvoid renderPercentage(int sn, vec2 pos, float size, vec3 color, inout vec4 fragColor, vec2 fragCoord){\n    if(sn < 10){\n        renderC(modN(sn,10),12,pos,size,color);pos.x += size/2.;\n        renderC(5,13,pos,size,color);pos.x += size/2.;\n    }else if(sn < 100){\n        renderC(modN(sn/10,10),12,pos,size,color);pos.x += size/2.;\n        renderC(modN(sn,10),12,pos,size,color);pos.x += size/2.;\n        renderC(5,13,pos,size,color);pos.x += size/2.;\n    }else{\n        renderC(modN(sn/100,10),12,pos,size,color);pos.x += size/2.;\n        renderC(modN(sn/10,10),12,pos,size,color);pos.x += size/2.;\n        renderC(modN(sn,10),12,pos,size,color);pos.x += size/2.;\n        renderC(5,13,pos,size,color);pos.x += size/2.;\n    }\n}\n#define renderP(n,p,s,c) renderPercentage(n,p,s,c,fragColor,fragCoord)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pos = (fragCoord.xy-vec2((iResolution.x-iResolution.y*0.8)/2.,iResolution.y*0.1))/iResolution.y/0.8;\n    fragColor = vec4(0,0,0,0);\n    for(int i=0;i<10;i++){\n        float px = float(read(0,i))/256.0;\n        float py = float(read(1,i))/256.0;\n        vec2 cur = vec2(px,py);\n        if(length(pos-cur)<0.5/(iResolution.y*0.8))fragColor = vec4(0.5,0.5,0,1);\n    }\n    float en = -1.;\n    for(int i=0;i<10;i++){\n        float px = float(read(0,i))/256.0;\n        float py = float(read(1,i))/256.0;\n        float qx = float(read(0,modN(i+1,10)))/256.0;\n        float qy = float(read(1,modN(i+1,10)))/256.0;\n        if(qy < py){\n            float t = px;\n            px = qx;\n            qx = t;\n            float u = py;\n            py = qy;\n            qy = u;\n        }\n        if(py <= pos.y && pos.y < qy){\n            float y1 = pos.y - py, y2 = qy - pos.y;\n            float x = mix(px,qx,y1/(y1+y2));\n            if(x <= pos.x){\n                en *= -1.;\n            }\n        }\n    }\n    if(en > 0.){\n        fragColor = vec4(0.5,0.5,0,1);\n    }\n    if(read(2,0)==1){\n        float mx = float(read(2,1))/256.0;\n        float my = float(read(2,2))/256.0;\n        vec2 mc = vec2(mx,my);\n\t\tvec2 mp = (iMouse.xy-vec2((iResolution.x-iResolution.y*0.8)/2.,iResolution.y*0.1))/iResolution.y/0.8;\n        float mr = length(mc - mp);\n        if(length(pos - mc) < mr){\n            if(!checkOK(mx,my,mr)){\n                fragColor.x += 0.5;\n            }else{\n                fragColor.yz += 0.5;\n            }\n        }\n    }else if(read(2,0)==2){\n        float mx = float(read(2,1))/256.0;\n        float my = float(read(2,2))/256.0;\n        float mw = float(read(2,3))/256.0;\n        float mz = float(read(2,4))/256.0;\n        vec2 mc = vec2(mx,my);\n\t\tvec2 mp = vec2(mw,mz);\n        float mr = length(mc - mp);\n        if(length(pos - mc) < mr){\n            fragColor.xyz += 0.5;\n        }\n        \n        float t = float(read(3,3))/60.0;\n        t = t*t*(3.-2.*t);\n        float cx = float(read(3,0))/256.0;\n        float cy = float(read(3,1))/256.0;\n        float cr = float(read(3,2))/256.0;\n        cx = mix(mx,cx,t);\n        cy = mix(my,cy,t);\n        cr = mix(mr,cr,t);\n        if(length(pos - vec2(cx,cy)) < cr){\n            fragColor.xyz += 0.2;\n        }\n        float score = float(read(3,4));\n        score = mix(100.,score,t);\n        int sn = int(score+0.5);\n        renderP(sn,vec2(50,iResolution.y-50.),100.,vec3(1,1,0));\n    }\n    float poSize = 30.*iResolution.x/800.;\n    int turn = read(2,10);\n    int sum = 0;\n    for(int i=0;i<10;i++){\n        int score = read(10,i);\n        float d;\n        if(score < 10)d = 0.0;\n        else if(score < 100)d = poSize/2.;\n        else d = poSize;\n        vec3 col = turn<=i?vec3(0.6):score>=95?vec3(1,1,0):vec3(0.9);\n        renderP(score,vec2(iResolution.x-40.-d,iResolution.y-poSize-float(i)*poSize),poSize,col);\n        sum += score;\n    }\n    if(true){\n        float sd;\n        if(sum < 10)sd = 0.0;\n        else if(sum < 100)sd = 25.;\n        else if(sum < 1000)sd = 50.;\n        else sd = 75.;\n\n        float t = float(read(4,0))/40.;\n        float tt = 1.-pow(2.,-t*10.);\n        vec2 pos1 = vec2(iResolution.x-55.-sd,iResolution.y-poSize*11.-20.);\n\t\tvec2 pos2 = iResolution.xy/2.-vec2((sd/25.+1.)*300./4.,0);\n        pos = mix(pos1,pos2,tt);\n        float size = mix(50.,300.,tt);\n        vec2 coord = fragCoord;\n        vec2 orig = mix(vec2(iResolution.x-55.-sd,iResolution.y-350.),iResolution.xy/2.,tt);\n        coord -= orig;\n        float a = mix(0.,3.1415926535/8.,tt);\n        float c = cos(a);\n        float s = sin(a);\n        coord = coord * mat2(c,s,-s,c);\n        coord += orig;\n        \n        renderPercentage(sum,pos,size,vec3(1,1,0),fragColor,coord);\n        \n        \n        float pI = iResolution.x*0.1 / 40.;\n        float pX = 40.;\n        float pY = mix(iResolution.y*1.2,iResolution.y*0.8,t*t*(3.-2.*t));\n        float pS = 80.;\n        vec3 pC = vec3(1,0.8,0);\n        renderC(2,10,vec2(pX*pI,pY),pS,pC);pI++;\n        renderC(5,9,vec2(pX*pI,pY),pS,pC);pI++;\n        renderC(3,8,vec2(pX*pI,pY),pS,pC);pI++;\n        renderC(5,8,vec2(pX*pI,pY),pS,pC);pI++;\n        renderC(12,9,vec2(pX*pI,pY),pS,pC);pI++;\n        renderC(4,8,vec2(pX*pI,pY),pS,pC);pI++;\n    }\n    \n    if(read(2,0)!=3)renderC(2,14,vec2(iResolution.x-30.-poSize*5./3.,iResolution.y-poSize-float(turn)*poSize),poSize*5./3.,vec3(0.5));\n\n    float textI = 2.;\n    float textX = iResolution.x/52.;\n    float textY = iResolution.y*0.06;\n    float textS = iResolution.x*30./800.;\n    vec3 textC = vec3(1,1,1);\n    renderC(4,10,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(2,8,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(9,8,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(0,13,vec2(textX*textI,textY),textS,textC);textI++;\n    \n    renderC(4,8,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(15,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(0,13,vec2(textX*textI,textY),textS,textC);textI++;\n    \n    renderC(13,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(1,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(11,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(5,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(0,13,vec2(textX*textI,textY),textS,textC);textI++;\n    \n    renderC(1,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(0,13,vec2(textX*textI,textY),textS,textC);textI++;\n    \n    renderC(3,8,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(13,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(1,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(12,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(12,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(0,13,vec2(textX*textI,textY),textS,textC);textI++;\n    \n    renderC(5,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(14,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(3,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(12,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(15,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(3,8,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(9,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(14,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(7,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(0,13,vec2(textX*textI,textY),textS,textC);textI++;\n    \n    renderC(3,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(9,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(2,8,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(3,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(12,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(5,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(0,13,vec2(textX*textI,textY),textS,textC);textI++;\n    \n    renderC(1,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(3,8,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(0,13,vec2(textX*textI,textY),textS,textC);textI++;\n    \n    renderC(0,8,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(15,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(3,8,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(3,8,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(9,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(2,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(12,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(5,9,vec2(textX*textI,textY),textS,textC);textI++;\n    renderC(1,13,vec2(textX*textI,textY),textS,textC);textI++;\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int read(int p,int q){\n    return int(texture(iChannel0,(vec2(p,q)+0.5)/iResolution.xy).x*255.);\n}\nvoid writeF(int p,int q,int s,inout vec4 fragColor,in ivec2 fragC){\n    if(ivec2(p,q)==fragC)fragColor = vec4(float(s)/255.,0.,0,1);\n}\n#define write(p,q,s) writeF(p,q,s,fragColor,fragC)\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nint random(vec2 co,int N){\n    return int(mod(rand(co)*10000.,float(N)));\n}\n\nbool checkOK(float x,float y,float r){\n    bool ok = true;\n    for(int i=0;i<10;i++){\n        float px = float(read(0,i))/256.0;\n        float py = float(read(1,i))/256.0;\n        if(length(vec2(px,py) - vec2(x,y)) > r){\n            ok = false;\n        }\n    }\n    return ok;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(fragCoord.x>11. || fragCoord.y>11.)discard;\n    fragColor = texture(iChannel0,fragCoord/iResolution.xy);\n    ivec2 fragC = ivec2(fragCoord);\n    if(iFrame==0){\n    \tfragColor = vec4(0);\n        for(int i=0;i<10;i++){\n            float posR = pow(rand(vec2(iTime,i)),1.);\n            float posA = rand(vec2(iTime+1.,i))*2.*3.1415926535;\n            float posX = posR * cos(posA) *0.5+0.5;\n            float posY = posR * sin(posA) *0.5+0.5;\n            write(0,i,int(posX*256.0));\n            write(1,i,int(posY*256.0));\n        }\n        write(2,0,0); // State\n    }else{\n\t    int state = read(2,0);\n        if(state == -1){\n            if(iMouse.z < 0.){\n                write(2,0,0);\n            }\n        }else if(state == 0){ // default\n            if(iMouse.z > 0.){\n\t\t\t\tvec2 pos = (iMouse.xy-vec2((iResolution.x-iResolution.y*0.8)/2.,iResolution.y*0.1))/iResolution.y/0.8;\n\t\t\t\twrite(2,0,1);\n                write(2,1,int(pos.x*256.0));\n                write(2,2,int(pos.y*256.0));\n            }\n        }else if(state == 1){ // drag\n            if(iMouse.z < 0.){\n                float mx = float(read(2,1))/256.0;\n                float my = float(read(2,2))/256.0;\n                vec2 mc = vec2(mx,my);\n                vec2 mp = (iMouse.xy-vec2((iResolution.x-iResolution.y*0.8)/2.,iResolution.y*0.1))/iResolution.y/0.8;\n                float mr = length(mc - mp);\n                if(checkOK(mx,my,mr)){\n                    write(2,0,2);\n                    write(2,3,int(mp.x*256.0));\n                    write(2,4,int(mp.y*256.0));\n                    float px=0.5,py=0.5,pr=1.0;\n                    for(int i=0;i<10;i++){\n                        float x1 = float(read(0,i))/256.0;\n                        float y1 = float(read(1,i))/256.0;\n                        for(int j=0;j<10;j++){if(i!=j){\n                            float x2 = float(read(0,j))/256.0;\n                            float y2 = float(read(1,j))/256.0;\n                            for(int k=0;k<10;k++){if(j!=k){\n                                // http://geom.web.fc2.com/geometry/circle-3points.html\n                                float x3 = float(read(0,k))/256.0;\n                                float y3 = float(read(1,k))/256.0;\n                                float d1 = x1*x1+y1*y1;\n                                float d2 = x2*x2+y2*y2;\n                                float d3 = x3*x3+y3*y3;\n                                float u = 0.5 / (x1*y2-x2*y1+x2*y3-x3*y2+x3*y1-x1*y3);\n                                float a = u*(d1*y2-d2*y1+d2*y3-d3*y2+d3*y1-d1*y3);\n                                float b = u*(x1*d2-x2*d1+x2*d3-x3*d2+x3*d1-x1*d3);\n                               \tfloat r = length(vec2(a,b) - vec2(x1,y1));\n                                \n                                if(checkOK(a,b,r) && r < pr){\n                                    px = a;\n                                    py = b;\n                                    pr = r;\n                                }\n                            }}\n                            \n                            float ca = (x1+x2)/2.;\n                            float cb = (y1+y2)/2.;\n                            float cr = length(vec2(ca,cb) - vec2(x1,y1));\n                            if(checkOK(ca,cb,cr) && cr < pr){\n                                px = ca;\n                                py = cb;\n                                pr = cr;\n                            }\n                        }}\n                    }\n                    write(3,0,int(px*256.0));\n                    write(3,1,int(py*256.0));\n                    write(3,2,int(pr*256.0)+1);\n                    write(3,3,0);\n                    write(3,4,int(pr*pr/mr/mr*100.0+0.5));\n                    write(3,5,0);\n                }else{\n                    write(2,0,0);\n                }\n            }\n        }else if(state==2){\n            int time = read(3,3);\n            if(time < 60)write(3,3,time+1);\n            if(iMouse.z > 0.){\n                if(time < 60){\n                    write(3,3,60);\n\t\t\t\t\twrite(3,5,1);             \n                }else if(read(3,5)==0){\n                    write(10,read(2,10),read(3,4));\n                    int turn = read(2,10);\n                    if(turn < 9){\n\t                    for(int i=0;i<10;i++){\n                            float posR = pow(rand(vec2(iTime,i)),1.);\n                            float posA = rand(vec2(iTime+1.,i))*2.*3.1415926535;\n                            float posX = posR * cos(posA) *0.5+0.5;\n                            float posY = posR * sin(posA) *0.5+0.5;\n                            write(0,i,int(posX*256.0));\n                            write(1,i,int(posY*256.0));\n                        }\n                        write(2,0,-1);\n                        write(2,10,read(2,10)+1);\n                    }else{\n                        write(2,0,3);\n                        write(2,10,10);\n                        write(4,0,0);\n                        write(4,1,-1);\n                    }\n                }\n            }else write(3,5,0);\n        }else if(state==3){\n            int time = read(4,0);\n            if(time < 40)write(4,0,time+1);\n            if(iMouse.z > 0.){\n                if(time < 40 && read(4,1)==0){\n                    write(4,0,40);\n                    write(4,1,1);\n                }else if(read(4,1)==0){\n                    fragColor = vec4(0);\n                    for(int i=0;i<10;i++){\n                        float posR = pow(rand(vec2(iTime,i)),1.);\n                        float posA = rand(vec2(iTime+1.,i))*2.*3.1415926535;\n                        float posX = posR * cos(posA) *0.5+0.5;\n                        float posY = posR * sin(posA) *0.5+0.5;\n                        write(0,i,int(posX*256.0));\n                        write(1,i,int(posY*256.0));\n                    }\n                    write(2,0,-1);\n                }\n            }else write(4,1,0);\n        }\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}