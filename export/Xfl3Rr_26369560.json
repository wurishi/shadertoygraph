{"ver":"0.1","info":{"id":"Xfl3Rr","date":"1705267096","viewed":52,"name":"Shader Test - Shwow","username":"Shwow","description":"Shader test from a youtube vid.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","first"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sdCircle( in vec2 p, in float r ) \n{\n    return length(p)-r;\n}\n\nvec3 palette(float t){\n\n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(1,1,1);\n    vec3 d = vec3(1.308,-0.802,-0.072);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.);\n    \n    vec3 chroma, col;\n    \n    for( float i = 0.0; i < 3.0; i++){\n        uv = fract(uv*1.5) - 0.5;\n    \n    float displacement = 0.00;\n    \n    chroma.x = sdCircle(vec2(uv.x+displacement,uv.y+displacement), 0.);\n    chroma.y = sdCircle(vec2(uv.x-displacement,uv.y-displacement), 0.);\n    chroma.z = sdCircle(uv, 0.);\n    \n    chroma *= exp(-length(uv0));\n    \n    col = palette(length(uv0) + i*0.3 - iTime * 0.4);\n\n    chroma = sin(chroma * 8. + iTime)/8.;\n    chroma = abs(chroma);\n    //chroma = smoothstep(0.0, 0.12, chroma);\n    \n    chroma = vec3(pow(0.01/ chroma.x, 0.7));\n    \n    finalColor += col * chroma;\n    }\n    \n    \n    \n\n    fragColor = vec4(finalColor,1.0);\n}\n","name":"Image","description":"","type":"image"}]}