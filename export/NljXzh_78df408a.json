{"ver":"0.1","info":{"id":"NljXzh","date":"1627079826","viewed":115,"name":"shaderjam - DJ-Shader party","username":"Exca","description":"Jamming for the dj party hosted by Monsieur Soleil. \nGround looks a bit off due to no perlin noise texture.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shaderjam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fft = 0.0;\nfloat fftS = 0.0;\nfloat fftI = 0.0;\nfloat beat = 0.0;\nfloat beatStep = 0.0;\nvec3 cam = vec3(0.0);\nvec3 camdir = vec3(0.0);\nfloat bm=0.0;\n\nvec3 rotate( vec3 p, float x, float y, float z)\n{\n  mat3 rotx = mat3( 1.0, 0.0, 0.0, 0.0, cos(x), -sin(x), 0.0, sin(x), cos(x));\n  mat3 roty = mat3( cos(y), 0.0, sin(y), 0.0, 1.0, 0.0, -sin(y), 0.0, cos(y));\n  mat3 rotz = mat3( cos(z), -sin(z), 0.0, sin(z), cos(z), 0.0, 0.0, 0.0, 1.0);\n  return rotx*roty*rotz*p;\n}\n\n\nvec3 getcam(vec3 cam, vec3 target, vec2 uv, float fov)\n{\n  vec3 forward = normalize(target-cam);\n  vec3 right = normalize(cross(vec3(0,1,0), forward));\n  vec3 up = normalize(cross(forward, right));\n  \n  return normalize( forward*fov + right *uv.x + up*uv.y);\n}\n\nfloat sphere(vec3 p, float r)\n{\n  return length(p)-r;\n}\n\nfloat roundcube( vec3 p, vec3 b, float r)\n{\n  vec3 d = abs(p)-b;\n  return min(max(d.x, max(d.y, d.z)), 0.0)+length(max(d,0.0))-r;\n}\n\n\nfloat ground( vec3 p, float h)\n{\n  return p.y - h;\n}\n\nfloat U(float a, float b){\n  return min(a,b);\n}\n\nvec3 map( vec3 p)\n{\n  \n  vec3 cp = cam+camdir*5.0;\n    \n  vec3 rp = rotate(p-cp,fftI*3.,fftI*1.0,0.0);\n  rp*= 1.0+beatStep*smoothstep(0.0,0.015,fftS);\n  float s = 9999.0;\n  if(bm< 4.0)\n  {\n  s = roundcube(rotate(rp, smoothstep(0.0, 0.25,beatStep)*3.14,0.0, 0.0),vec3(1.0),0.2);\n  s = U(s,roundcube(rp-vec3(2.5, 0.0, 0.0),vec3(0.5),0.2));\n  s = U(s,roundcube(rp+vec3(2.5, 0.0, 0.0),vec3(0.5),0.2));\n  s = U(s,roundcube(rp-vec3(0.0, 0.0, 2.5),vec3(0.5),0.2));\n  s = U(s,roundcube(rp+vec3(0.0, 0.0, 2.5),vec3(0.5),0.2));\n  }\n  else\n  {\n  s = sphere(rotate(rp, smoothstep(0.0, 0.25,beatStep)*3.14,0.0, 0.0),1.5);\n  s = U(s,sphere(rp-vec3(2.5, 0.0, 0.0),0.5+fftS*5.0));\n  s = U(s,sphere(rp+vec3(2.5, 0.0, 0.0),0.5+fftS*5.0));\n  s = U(s,sphere(rp-vec3(0.0, 0.0, 2.5),0.5+fftS*5.0));\n  s = U(s,sphere(rp+vec3(0.0, 0.0, 2.5),0.5+fftS*5.0));  \n  }\n  \n  p.z-=sin(fftI*0.35)*50.0;\n  p.x-=cos(-fftI*0.15)*50.0;\n  \n  \n  float h = texture( iChannel0, p.xz*0.025+fftI*0.1).r*2.0+texture( iChannel0,0.2*fftI+ p.xz*0.025+0.78).r*0.75;\n  float hLrg = smoothstep( 0.1, 0.5, texture( iChannel0, p.xz*0.01).r)*0.25;\n  float hMnt = smoothstep(0.45, 0.95,texture( iChannel0, p.xz*0.01).r)*255.*fftS*10.;\n  \n  h += hLrg + hMnt;\n  h*=0.5;\n  float ho = h;\n  h = max(0.6, h);\n  \n  float g = ground(p, h);\n  return vec3(U(s,g),h,ho);\n}\n\nvec3 march( vec3 cam, vec3 rd, out vec3 p, out float t, out int steps) \n{\n  t = 1.5;\n  for(int i = 0; i < 100; i++)\n  {\n    steps = i;\n    p = cam + rd*t;\n    vec3 r = map(p);\n    t += r.x*0.75;\n    if(r.x < 0.01) return r;\n    if(t > 50.0) {\n      t = 50.0;\n      return vec3(-1.0);\n    }\n  }\n  return vec3(-1.0);\n}\n\nvec3 normal( vec3 p )\n{\n  vec3 c = map(p);\n  vec2 e = vec2(0.1, 0.0);\n  return normalize(vec3(\n    map(p+e.xyy).x,\n    map(p+e.yxy).x,\n    map(p+e.yyx).x\n  )-c.x);\n}\n\nfloat light( vec3 p, vec3 l, vec3 n)\n{\n  return max(0.0, dot( n, normalize(l-p)));\n}\n\nfloat time;\n\nvec3 calc(vec2 uv )\n{\n  vec3 bgCol = vec3( 0.5, 0.5, 1.05);\n  vec3 sun = vec3( 10,10,10);\n  \n\tvec3 col = vec3(0.0);\n  \n  time = iTime*0.25;\n  \n  cam = vec3( sin(time) ,12.0+cos(time)*5.5,2);\n  vec3 target = vec3(0,cam.y-(3.25+sin(time)*3.25),0);\n  float fov = 0.6+sin(time)*0.3;\n  vec3 rd = getcam(cam, target, uv, fov);\n  \n  camdir = normalize(target - cam);\n  \n  vec3 p = cam;\n  float t = 0.0;\n  int steps = 0;\n  vec3 mat = march( cam, rd, p, t, steps);\n  \n  vec3 n = normal(p);\n  bgCol *=0.5+ min(0.05,fftS) * abs( smoothstep(0.5,1.0,sin( t*1.2+fftI*50. )))*150.8*min(1.0,p.y) * smoothstep(80., 30., t)*0.8;\n  \n  if(mat.y < -0.5){\n    //bg\n    col = bgCol;\n  }\n  else if(mat.y < 50.5)\n  {\n    \n    float id = floor(p.x)+floor(p.z);\n    \n    if(mat.z < 0.6)\n    {\n      col =vec3(0.2, 0.25,0.85)*(mat.z);\n    }\n    else if( mat.z < 1.2)\n    {\n      col = mix( vec3( 0.2, 0.4,0.3), vec3( 0.4,0.4,0.3), (mat.z-0.6)/0.6);\n    }\n    else\n      col = mix( vec3( 0.4,0.4,0.3), vec3(1.0), (mat.z-1.2)/0.6);\n    \n    if(t < 1.0)\n    {\n      col = mix( vec3( 1.0, 0.0, 0.0)*col, col, smoothstep(3.0, 5.5, t));\n    }\n    \n    col = col*light(p, sun, n);\n    \n  }\n  \n  col =mix(col, bgCol*0.4, smoothstep( 5.0, 50.0, t));\n  \n  col*=2.0;\n  return col;\n}\nvec2 barrel( vec2 uv, float k)\n{\n  float rd = length(uv);\n  float ru = rd*(1.0+k*rd*rd);\n  uv/=rd;\n  uv*=ru;\n  return uv;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  vec2 ouv = uv;\n\tuv -= 0.5;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n\n  fft = texture(iChannel1, vec2(ouv.x, 0.0)).r/255.;\n  fftS = texture(iChannel1,vec2(0.2,0.0)).r/125.;\n  fftI = texture(iChannel1, vec2(0.1,0.0)).r/155.+iTime;\n  beat = floor(iTime*1.43);\n  beatStep = fract( iTime*2.0);\n  bm = mod(beat/4.0, 8.0);\n  \n  \n  vec3 col = calc(uv);\n  \n  col += calc( barrel(uv*1.2,10.5))*min(1.0,smoothstep(0.0, 0.05,fftS)*2.0);\n  col += calc( barrel(uv*1.5,-fftS*1024.0))*min(1.0,smoothstep(0.0, 0.02,fftS)*5.0);\n  \n  \n  \n  col*=0.95;\n  col=mix(col, smoothstep(vec3(0.0), vec3(1.0),col), beatStep);\n  //col += (previousR+previousRR)*smoothstep(0.0, 1.0,15.*fftS)*0.25;\n  \n  col = clamp( col, vec3(0.0), vec3(1.0));\n  \n  if(bm < 4.0)\n  {\n  col = vec3(1.0)-col;\n  col.rgb = col.gbr;\n  }\n  \n  \n\tfragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}