{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define ITER 30.0\n#define DEPTH 2.0\n#define TX_SC 0.02\n\nvec3 rx(vec3 v, float a) { return vec3(v.x,v.y*cos(a)+v.z*sin(a),v.z*cos(a)-v.y*sin(a)); }\n\nvec3 is(vec3 p, vec3 d, float y) { return vec3(p.x-(d.x/d.y*(p.y-y)),y,p.z-(d.z/d.y*(p.y-y))); }\n\nvec3 cr(float f) {\n    float i;\n    vec3 g = vec3(0.,0.,0.), b = vec3(0.2,0.15,0.1), r = vec3(0.8,0.2,0.1),\n        y = vec3(0.95,0.85,0.), w = vec3(1.,1.,1.);\n    if (f<0.3) { i=f/0.3;\n        return vec3(g.r+(b.r-g.r)*i,g.g+(b.g-g.g)*i,g.b+(b.b-g.b)*i); }\n    else if (f<0.7) { i=(f-0.3)/0.4;\n        return vec3(b.r+(r.r-b.r)*i,b.g+(r.g-b.g)*i,b.b+(r.b-b.b)*i); }\n    else if (f<0.9) { i=(f-0.7)/0.2;\n        return vec3(r.r+(y.r-r.r)*i,r.g+(y.g-r.g)*i,r.b+(y.b-r.b)*i); }\n    else { i=(f-0.9)/0.1;\n        return vec3(y.r+(w.r-y.r)*i,y.g+(w.g-y.g)*i,y.b+(w.b-y.b)*i); }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 co = vec4(fragCoord.xy, iResolution.xy), t;\n    vec3 sc = mix(vec3(0.8,0.2,0.1),vec3(0.2,0.1,0.05),co.y/co.w*3.-2.),\n    rp = vec3(5.,10.,iTime*15.), oc=vec3(0.,0.,0.), p,\n    rd = rx(vec3((co.z/co.w)*-0.5+co.x/co.w, -0.5+co.y/co.w, 2.),-0.1);\n    \n    if (rd.y < 0.)\n    {\n        for (float i=-DEPTH; i<=.0; i+=(DEPTH/(ITER-1.)))\n        {\n            p = is(rp, rd, i);\n        \tt = texture(iChannel0, vec2(p.x*TX_SC,p.z*TX_SC/5.));\n            float h = (t.r+t.g+t.b)/3.;\n            if ((-DEPTH - i) / -DEPTH < 1.001-h) oc = cr(h);\n        }\n        fragColor = vec4(mix(oc,sc,pow(clamp(max(distance(p,rp)-20.,0.)/800.,0.,1.),0.7)),1.);\n    }\n    else fragColor = vec4(sc,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdBXDV","date":"1417192408","viewed":4698,"name":"Molten rock","username":"khron","description":"Drawing layers of parallel planes with height coming from a texture and color coming from a gradient based on height.","likes":33,"published":1,"flags":0,"usePreview":1,"tags":["3d","parallax"],"hasliked":0,"parentid":"","parentname":""}}