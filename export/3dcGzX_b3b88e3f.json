{"ver":"0.1","info":{"id":"3dcGzX","date":"1568926097","viewed":80,"name":"Nyan diamonds","username":"gakido7domo","description":"Just nyan cat with a scolling, pulsating, gradient-filled diamonds grid on the background, also the filling on his bread is chroma-keyed within tolerance.\nMy first shadertoy project ever, took me about 4 hours.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient","animation","nyancat","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*   \n\nWARNING: INTENSE USAGE OF MODULUS OPERATOR IN THIS SHADER!\n\t\tto users not on web: please set iChannel0 sampler to the 6-frame Nyan Cat texture \n\t\tfound in the ShaderToy Website.\n\n*/\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv=vec2(uv.x,uv.y+(sin(iTime)*0.1+1.0));\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    \n    float gval = 0.2*(pow(uv.x,2.0));\t//intensity of gradient covering diamonds\n\tvec3 coordcol = vec3(0.2,1.0,0.0)*gval;\t//apply gradient to diamonds\n    vec3 backcolor= vec3(0.8,0.76,0.8);\t//diamonds base color\n    vec3 finalgrad=vec3(1.0,1.0,1.0);\t//area not covered by diamonds is this color\n    \n    float dsize=0.05;\n    //float dduty=dsize*0.42+((sin(5.0*iTime)+0.2)*0.006);\n    float dduty=dsize*(0.6+(sin(5.0*iTime)*0.07)); //pulsate diamond size with sine wave\n    float scrollSpeedx=0.02;\n    float scrollSpeedy=-0.008;\n    \n    //translate the pixel to the left, loop around to diamond tile size.\n    vec2 ri=vec2(mod(uv.x+(iTime*scrollSpeedx),dsize),mod(uv.y+(iTime*scrollSpeedy),dsize));\n   \n    \n    //CREAM OF THE CROP: draw white stripes on regular intervals \n    #define diamondPatts ((mod(ri.x+ri.y,dsize)<dduty && mod(ri.x-ri.y,dsize)<dduty))\n    \n    \n    \n    if(diamondPatts){\n    \tfinalgrad=(coordcol+backcolor);\n    }\n    /*Animate nyan cat by fitting different parts of the texture on screen.\n\t\tsequence is as follows:\n\t\t0.16*uv.x\t-> each frame takes 0.16 screen width, so scale u coordinate this much.\n\t\t(mod(10.0*iTime,6.0)) -> remainder of (*time in 10ths of a second*)/6\n\t\tfloor(*previous result*) -> constrains the previous result to integers\n\t\t0.1565\t* (*previous result*)\t->\toffsets the u coordinate by this much.\n    */\n    vec4 texcol = texture(iChannel0,vec2(0.16*uv.x+(0.1565*floor(mod(10.0*iTime,6.0))), uv.y));\n    \n    \n    \n    // Output to screen\n    \n    \n    //ALPHA TEST for the nyan cat texture\n    if(texcol.a>0.5){\n        vec4 cdiff=abs(texcol-vec4(1.0,0.6,1.0,1.0));//chroma key for pink in bread\n        if( (cdiff.x+cdiff.y+cdiff.z) < 0.1){//test for chroma key with +-10% tolerance\n        \t//mix nread with background.\n            fragColor=texcol*vec4(finalgrad.y,finalgrad.z,finalgrad.x,1.0);\n        }\n        else{\t//any other color goes straight through.\n        \tfragColor=texcol;\n        }\n    }\n    \n    //if fetched texel is transparent, show only pixel from diamond.\n    else{\t\t\n    fragColor = vec4(finalgrad,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}