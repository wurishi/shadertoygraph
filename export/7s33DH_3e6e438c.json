{"ver":"0.1","info":{"id":"7s33DH","date":"1629688954","viewed":109,"name":"BÃ©zier Curve","username":"wylm","description":"It's base on https://www.shadertoy.com/view/tlKcRm.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["beziercurve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define E 2.718281828459\n\nfloat CubicBezier(float x, vec4 u) {\n    return u.x*pow(1.-x,3.)+3.*u.y*pow(1.-x,2.)*x+3.*u.z*pow(1.-x,2.)*pow(x,2.)+u.w*pow(x,3.);\n}\n\nfloat move(){\n    return pow(E, -5. * pow(fract(iTime),2.));\n}\n\nvec3 shade(vec4 res )\n{\n    float ra = length(res.yz);\n    float an = atan(res.y,res.z) + 2.0*iTime;\n    float pa = sin(3.0*an);\n\n    vec3 cola = 0.5 + 0.5*sin( (res.w/32.0)*3.5 + vec3(0.0,1.0,2.0) );\n    \n    vec3 col = vec3(0.0);\n    col += cola*0.4*(1.0-smoothstep( 0.90, 1.00, ra) );\n    col += cola*1.0*(1.0-smoothstep( 0.00, 0.03, abs(ra-0.8)))*(0.5+0.5*pa);\n    col += cola*1.0*(1.0-smoothstep( 0.00, 0.20, abs(ra-0.8)))*(0.5+0.5*pa);\n    col += cola*0.5*(1.0-smoothstep( 0.05, 0.10, abs(ra-0.5)))*(0.5+0.5*pa);\n    col += cola*0.7*(1.0-smoothstep( 0.00, 0.30, abs(ra-0.5)))*(0.5+0.5*pa);\n\n    return col*0.3;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv.y *= 2.;\n    \n    vec4 bezierU = vec4(0., 1., 0., 1.);\n    uv.y -= CubicBezier(clamp(uv.x, 0.0, 1.), bezierU);\n\n    vec3 col = vec3(0.5);\n    col += smoothstep(0.03, 0.02, distance(uv.y, 0.5) * 2.)  \n            * smoothstep(0., 0.1, 1. - distance(uv.x, 0.5) * 2.) \n            * smoothstep(0.5, 0., distance(1. - uv.x, move()) * 2. );\n\n    fragColor = vec4(1.0/(1.0+col),1.);\n}","name":"Image","description":"","type":"image"}]}