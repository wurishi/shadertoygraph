{"ver":"0.1","info":{"id":"ftsXD4","date":"1625711588","viewed":153,"name":"An Indian Flag","username":"Bhavesh_s_","description":"this is an Indian flag, inspired from bigwings US flag shader tutorial.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["flag","india","indian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    \"An Indian flag\"\n    Created as a learning initiative of shader development.\n    This is inspired from the US flag created by BigWIngs (https://www.shadertoy.com/view/flsXRM)\n*/\n\n#define PI 3.14159265359\n\nvec3 safron = vec3(255.0,153.0,51.0)/255.0;\nvec3 white = vec3(1);\nvec3 green = vec3(19.0,136.0,8.0)/255.0;\nvec3 navyBlue = vec3(0,0,128.0)/255.0;\n\nfloat circle(vec2 uv, float r){\n    float d = length(uv);\n    return smoothstep(d-0.003,d,r);\n}\n\n// Ashoka Chakra in the center of the flag\nfloat Chakra(vec2 uv,float radius){\n    float bCircle = circle(uv,radius+0.02);\n\tfloat cCircle = circle(uv,0.03);\n    float iCircle = circle(uv,radius);\n    iCircle -= cCircle;\n    \n\tfloat count = 24.0;\n    float div = (count)*0.25;\n    \n    for(float i=0.0; i < 24.0; i += 1.0){\n        float turn = i / count;\n        float offset = ((1.0/count)/2.0);\n        float theta = (turn + offset) * (2.0 * PI);\n        vec2 p = vec2(sin(theta),cos(theta)) * radius;\n        float c = circle(uv-p,radius*0.04);\n        \n        float alfa = ((1.0 / count) * (i - div) * (2.0 * PI));\n        float shift = 0.07;\n        float a = alfa + shift;\n        float b = alfa - shift;\n        float angle = (turn) * (2.0 * PI);\n        p = vec2(sin(angle),cos(angle)) * (radius*(0.50));\n        float d1 = dot(uv - p,vec2(sin(a),cos(a)));\n        float d2 = dot(uv - p,-vec2(sin(b),cos(b)));\n        float d3 = dot(uv - p,-vec2(sin(a),cos(a)));\n        float d4 = dot(uv - p,vec2(sin(b),cos(b)));\n        \n        float d = max(max(d1,d2),max(d3,d4))-0.002;\n        iCircle -= smoothstep(0.003,0.0,d);\n        iCircle -= min(iCircle,c);\n    }\n\n    return bCircle - iCircle ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float aspectRatio = iResolution.x/iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= aspectRatio;\n    \n    float t = uv.x*4.-1.5* iTime + uv.y * 6.;\n    uv.y += 0.02;\n    uv.y += sin(t) * 0.01;\n\n    uv.y *= 2.9;\n\n\tvec3 color = vec3(0);\n    white = step(1.0,uv.y)*white;\n    green= step(0.0,uv.y)*green;\n    safron = step(2.0,uv.y)*safron;\n\n\n\tif(uv.y<3.0){color = safron;}\n    if(uv.y<2.0){color=white;}\n    if(uv.y<1.0){color=green;}\n    \n    uv.y /= 3.0;\n    uv -= vec2(aspectRatio/2.0,0.5);\n    color -= (vec3(Chakra(uv,0.12)) * (white - navyBlue));\n    \n    \n    color *= 0.7 - cos(t) * 0.3;\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}