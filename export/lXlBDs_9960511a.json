{"ver":"0.1","info":{"id":"lXlBDs","date":"1729427787","viewed":83,"name":"Fork Damaged VC Hanting 611","username":"Hanting","description":"Simulating a damaged VCR playing a video","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;\n    \n    vec2 offset1 = vec2(0.);\n    vec2 offset2 = vec2(0.);\n    vec2 offset3 = vec2(0.);\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                          \n    vec3 col = vec3(r, g, b);\n    \n    ///////////////////////////////////////////////\n\n    uv = uv + vec2(sin(iTime) * 0.01f, cos(iTime) * 0.024f);\n    \n    float ux = cos(uv.y * 800.0f) * 0.35f;\n    float uvx = step(uv.y + cos(iTime)*0.35f, 0.75f) * step(0.6f, uv.y + cos(iTime)*0.35f);\n    uv = vec2((1.0f - uvx) * uv.x + uvx * (ux +uv.x), uv.y);\n\n    vec2 ruv = vec2(uv.x - 0.006f, uv.y);\n    vec2 guv = vec2(uv.x + 0.006f, uv.y);\n    vec2 buv = vec2(uv.x, uv.y + 0.02f);\n    \n    vec4 rc = texture(iChannel0, ruv);\n    vec4 gc = texture(iChannel0, guv);\n    vec4 bc = texture(iChannel0, buv);\n    \n    float rtot = (rc.x + rc.y + rc.z) * 0.33333f;\n    float gtot = (gc.x + gc.y + gc.z) * 0.33333f;\n    float btot = (bc.x + bc.y + bc.z) * 0.33333f;\n    col = vec3(rtot, gtot, btot);\n    \n\n    ///////////////////////////////////////////////\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}