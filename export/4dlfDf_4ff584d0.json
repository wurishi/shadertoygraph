{"ver":"0.1","info":{"id":"4dlfDf","date":"1498579056","viewed":181,"name":"Just a Mandelbrot","username":"DJDoomz","description":"Now with broken periodicity checking","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define maxIter 1000.\n#define pi 3.14159\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    fragColor -= fragColor;\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = (uv-.5)*4.;\n    uv.y/=iResolution.x/iResolution.y;\n    \n    float s = sin(t/5.), c = cos(t/5.);\n    uv *=mat2(c,s,s,-c);\n    \n    float zoom = pow(2.,8.*sin(t/8.-.5*pi)+8.);\n    \n    uv /= zoom;\n    \n    uv.x -= .7;\n    uv.y -= 0.3501;\n    \n    float Iter = 0.;\n    \n    float p=sqrt( (uv.x-.25) * (uv.x-.25) + uv.y*uv.y);\n    if(uv.x < p-2.*(p*p)+.25 || (uv.x+1.)*(uv.x+1.)+uv.y*uv.y < 1./16.)Iter = maxIter; //copied from wikipedia, skips over main bulb\n    \n    vec2 comp = uv;\n    vec2 tempcomp = vec2(0.);\n    \n    for(float i = 0.0; i < maxIter; i++)\n    {\n        tempcomp = vec2(comp.x*comp.x-comp.y*comp.y, 2.*(comp.x*comp.y))+uv;\n        Iter += (tempcomp.x > comp.x-0.005 && tempcomp.x < comp.x+0.005) ? maxIter : 1.;\n        comp = tempcomp;\n        if(length(comp) > 4. || Iter > maxIter) break;\n    }\n    \n    if(Iter<maxIter) Iter=5.*Iter-500.;\n   \n    fragColor.xyz += abs(sin(Iter/maxIter*pi));\n    \n}","name":"Image","description":"","type":"image"}]}