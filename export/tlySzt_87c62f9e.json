{"ver":"0.1","info":{"id":"tlySzt","date":"1583348395","viewed":176,"name":"Rotating squares tunnel","username":"ilyaev","description":"Squares tunnel with some lights. Use mouse to change rotation angle.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["shapes","rotation","layers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\n#define PI 3.14159265359\n#define NUM_SQUARES 16.\n\nmat2 rotate2d(float angle) {\n    float c = cos(angle);\n    float s = sin(angle);\n    return mat2(c, -s, s, c);\n}\n\nfloat getRect(vec2 uv, float size, float scale) {\n    float d = distance(uv, vec2(clamp(-size, size, uv.x), clamp(-size,size, uv.y)));\n    return step(0.001 * scale, d) - step(0.01 * scale,d);\n}\n\nfloat getDot(vec2 uv, vec2 center) {\n    return smoothstep(.0, .35,.012/distance(uv, center)/10.);\n}\n\nfloat getBorder(vec2 uv, float size) {\n    float col = 0.;\n    col += getDot(uv, vec2(size));\n    col += getDot(uv, vec2(-size));\n    col += getDot(uv, vec2(size,-size));\n    col += getDot(uv, vec2(-size,size));\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    vec3 col = vec3(0.);\n\n\n    for(float i = 0. ; i < 1. ; i += 1./NUM_SQUARES) {\n        float shift = fract(iTime*6.)/NUM_SQUARES;\n        \n        float scale = mix(.1, 1. + sin(iTime)*0.5, i - shift);\n        \n        float fade = 1. - float(i);\n        \n        vec2 nuv = uv * scale * rotate2d((i - shift) * (mouse.x * PI*2.));\n        \n        float color = getRect(nuv, 0.1, scale) * fade;\n        \n        col += color * sin(vec3(0.9, 0.1, 0.9) + i*PI);\n        \n        vec3 borderColor = sin(vec3(0.9,0.3,0.9) + i*PI + iTime) + 0.5;\n        col += borderColor * getBorder(nuv, 0.1) * fade;\n    }\n\n\n\n    fragColor = vec4(col, 1.0) ;\n}","name":"Image","description":"","type":"image"}]}