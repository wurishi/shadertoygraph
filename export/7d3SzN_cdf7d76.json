{"ver":"0.1","info":{"id":"7d3SzN","date":"1633785449","viewed":95,"name":"triple rotate","username":"HaleyHalcyon","description":"fast","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"wlySWG","parentname":"mandala1 flash [spaz]"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fn2(float x)\n{\n    x = (fract(x) - 0.5) * 2.;\n    float n = x * x * x;\n\treturn n * 6. - x * 4.;\n}\n\nfloat fn(float x)\n{\n    float n = smoothstep(0.3, 0.301, abs(fract(x / 2.)-0.5));\n    return n;\n}\n\nfloat awawa(float x) {\n    x = fract(x * 3.);\n    x = abs(x - 0.5);\n    return 1. - 0.1 * smoothstep(0., 0.5, x);\n    \n}\n\nvec3 vignette(vec3 v, float d)\n{\n    return v * max(0., 1. - d * d * d);\n}\n\nvec3 hue2color(float hue) {\n    hue = fract(hue - 0.1666667) * 6.;\n    vec3 col = vec3(\n        smoothstep(0.0, 1.0, hue) - smoothstep(3.0, 4.0, hue),\n        smoothstep(2.0, 3.0, hue) - smoothstep(5.0, 6.0, hue),\n        smoothstep(4.0, 5.0, hue) - smoothstep(1.0, 2.0, hue) + 1.0\n    );\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float PI = 3.14159265;\n    const float PI_3 = PI / 3.;\n    const float speed = 1. / 4.;\n    float time = fract(floor(25. * iTime) / 25. * speed);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n\tuv -= vec2(iResolution.x / scale, iResolution.y / scale) / 2.;\n    uv *= 2.0;\n    \n    float distLin = length(uv) * 0.5;\n    //float distance = pow(sqrt(uv.x*uv.x+uv.y*uv.y), 1./3.);\n    float distance = log(uv.x*uv.x+uv.y*uv.y);\n    float angle = atan(uv.y, uv.x) / PI;\n    \n    // Time varying pixel color\n    // spiral 1\n    float c1 = fn(distance * 0.5 + angle * 3.0 + 2.0 * fn2(time));\n    // spiral 2\n    float c2 = fn(distance * 0.5 - angle * 3.0 + 2.0 * fn2((time) + 2. / 3.));\n    // rings \n    float c3 = fn(distance * 0.7 + fn2(time + 4. / 3.) * 2.);\n    \n    // Flashing\n    const float flashIntvl = 0.2;\n    const float flashStrength = 1.0;\n    const float flashSudden = flashStrength / flashIntvl * 6.0;\n    float f1 = max(0., flashStrength - mod(time                       , flashIntvl) * flashSudden);\n    float f2 = max(0., flashStrength - mod(time + flashIntvl * 1.0/3.0, flashIntvl) * flashSudden);\n    float f3 = max(0., flashStrength - mod(time + flashIntvl * 2.0/3.0, flashIntvl) * flashSudden);\n    //c1 += f1; c2 += f2; c3 += f3;\n\n    \n\n    // Output to screen\n    fragColor = vec4(\n        vignette(\n        min(vec3(1.0), awawa(time) * vec3(\n            c1 * hue2color(time) + \n            c2 * hue2color(time + 2. / 3.) + \n            c3 * hue2color(time + 1. / 3.)\n        ))\n        , distLin - 0.2),\n        1\n    );\n}","name":"Image","description":"","type":"image"}]}