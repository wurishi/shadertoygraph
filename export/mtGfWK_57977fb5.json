{"ver":"0.1","info":{"id":"mtGfWK","date":"1702482465","viewed":55,"name":"sec to star poly 2","username":"ChunderFPV","description":"Regular or star polygon from fraction & polar transformed secant waves.  This one is loopless due to the lines not crossing.  Mouse x to transform between polar & cartesian.  vec2 f describes the type of poly.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["waves","star","polar","polygon","transform","loopless","secant"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// polygon (coords, fraction, line size)\nfloat P(vec2 u, vec2 f, float w)\n{\n    float p = 6.2832, // pi*2\n          a = (mod(f.x/f.y+.5, 1.)-.5)*p, // arc\n          s = f.y/p, // segmentation ratio\n          b = (fract(u.x*s+.5)-.5)/s, // segment x\n          r = cos(a/2.); // inradius\n   return min(1., w/abs(r/cos((fract(b/a)-.5)*a)-u.y));\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec3 c = vec3(0, .05, .1);\n    vec2 R = iResolution.xy,\n         m = iMouse.xy/R,\n         u = (U-R/2.)/R.y*4., // screen coords\n         f = vec2(2, 5), // fraction\n         g;\n    if (m.x > .8 || m.x < .2) m.x = round(m.x); // snap mouse near screen edges\n    u = m.x*u + (1.-m.x)*vec2(atan(u.x, u.y), length(u)); // polar transform\n    g = min(vec2(1), fwidth(u)/abs(u-round(u))); // form grid\n    c += max(g.x, g.y) * .2; // draw grid\n    c.rg += P(u, f, .03); // draw poly\n    C = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}]}