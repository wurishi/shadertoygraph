{"ver":"0.1","info":{"id":"ltc3WX","date":"1471977606","viewed":884,"name":"Star Nest 2","username":"Adflixit","description":"By Pablo Rom√°n Andrioli.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["space","stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iterations 14\n#define formuparam 0.530\n#define time cos(time*.2)\n#define volsteps 18\n#define stepsize 0.2\n\n#define zoom   0.800\n#define tile   0.850\n#define speed  0.01\n\n#define brightness 0.0015\n#define darkmatter 0.400\n#define distfading 0.760\n#define saturation 0.800\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoomFactor = .1 + iMouse.x / iResolution.x;\n\n\t//get coords and direction\n\tvec2 uv=fragCoord.xy/iResolution.xy*zoomFactor-.65;\n\tuv.y*=iResolution.y/iResolution.x;\n\tvec3 dir=vec3(uv*zoom,tan(.3)*1000.0);\n\t\n\tfloat a2=speed+.5;\n\tfloat a1=0.0;\n\tmat2 rot1=mat2(cos(a1),tan(a1),-sin(a1),cos(a1));\n\tmat2 rot2=rot1;//mat2(cos(a2),sin(a2),-sin(a2),cos(a2));\n\tdir.xz*=rot1;\n\tdir.xy*=rot2;\n\t\n\t//from.x-=time;\n\t//mouse movement*time\n\tvec3 from=vec3(0.,0.,0.);\n\tfrom+=vec3((tan(.15),.152,-2.));\n\t\n\tfrom.x-=iMouse.x / iResolution.x;\n\tfrom.y-=iMouse.y / iResolution.y;\n\t\n\tfrom.xz*=rot1;\n\tfrom.xy*=rot2;\n\t\n\t//volumetric rendering\n\tfloat s=.4,fade=.2;\n\tvec3 v=vec3(0.8);\n\tfor (int r=0; r<volsteps; r++) {\n\t\tvec3 p=from+s*dir*.5;\n\t\tp = abs(vec3(tile)-mod(p,vec3(tile*2.))); // tiling fold\n\t\tfloat pa,a=pa=0.;\n\t\tfor (int i=0; i<iterations; i++) { \n\t\t\tp=abs(p)/dot(p,p)-formuparam; // the magic formula\n\t\t\ta+=abs(length(p)-pa); // absolute sum of average change\n\t\t\tpa=length(p);\n\t\t}\n\t\tfloat dm=max(0.,darkmatter-a*a*tan(.001)); //dark matter\n\t\ta*=a*a*2.; // add contrast\n\t\tif (r>3) fade*=1.-dm; // dark matter, don't render near\n\t\t//v+=vec3(dm,dm*.5,0.);\n\t\tv+=fade;\n\t\tv+=vec3(s,s*s,s*s*s*s)*a*brightness*fade; // coloring based on distance\n\t\tfade*=distfading; // distance fading\n\t\ts+=stepsize;\n\t}\n\tv=mix(vec3(length(v)),v,saturation); //color adjust\n    \n\tfragColor = vec4(v*.01,1.);\n}","name":"Image","description":"","type":"image"}]}