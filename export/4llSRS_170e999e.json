{"ver":"0.1","info":{"id":"4llSRS","date":"1447335058","viewed":211,"name":"Vogel MetaBloom","username":"jayjayjay","description":"Exploring fibonacci numbers through the vogel distribution\n\nhttps://en.wikipedia.org/wiki/Fibonacci_number","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["vogeldistribution"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define GA 2.39996322972865332\n\n#define N 50\n#define C sin(TIME)*1.3\n\n#define TIME iTime/5.\n\n#define RADIUS (C*.2)\n#define MIN_ZOOM 25.\n#define MAX_ZOOM 30.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5; //center the normal vector\n\n    uv *= MIN_ZOOM + ( sin(TIME) * (MAX_ZOOM-MIN_ZOOM) ); //zooming\n    \n    float m = 0.;\n    \n    for(int i=1;i<N;i++){\n        \n    \tfloat r = C * sqrt(float(i));\n        float theta = (2.0*PI*float(i))/(GA*GA);\n        \n        theta += TIME;\n        \n        vec2 pos = vec2(r*cos(theta),r*sin(theta));\n\n        //metaball, scaled by i/N\n        m+= RADIUS / dot(uv-pos,uv-pos) * float(i)/float(N);\n        \n    }\n    float u = (C+1.)/2.;\n    //fragColor = vec4(.5,.5,.5,1.0)+(m);\n    fragColor = vec4(-m/10.0,1.0,1.0,1.0)+(u)*(1.-m);\n    \n}","name":"Image","description":"","type":"image"}]}