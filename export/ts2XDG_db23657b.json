{"ver":"0.1","info":{"id":"ts2XDG","date":"1554889805","viewed":924,"name":"8bit pixel camera","username":"avin","description":"Super simple example how to make low quality pixel cam","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["pixel","zx","pixelart","8bit","atari","lowquality"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PIXEL_FACTOR = 100.; // Lower num - bigger pixels\nconst float COLOR_FACTOR = 2.;   // Higher num - higher colors quality\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{                  \n    // Reduce pixels            \n    vec2 size = PIXEL_FACTOR * iResolution.xy/iResolution.x;\n    vec2 uv = floor( fragCoord/iResolution.xy * size) / size;   \n                 \n    vec3 col = texture(iChannel0, uv).xyz;     \n    \n    // Reduce colors\n    col = floor(col * COLOR_FACTOR) / COLOR_FACTOR;    \n   \n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}