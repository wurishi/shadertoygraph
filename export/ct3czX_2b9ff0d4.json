{"ver":"0.1","info":{"id":"ct3czX","date":"1699457487","viewed":363,"name":"xor 3d","username":"Virgill","description":"Fooling around with integer logic and buffers","likes":25,"published":3,"flags":96,"usePreview":0,"tags":["3d","xor","feedback","sierpinski","integer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fooling around with integer logic and buffers\n// I always wonder how much beauty lies in simple integer math\n\n// Thx to Fabrice Neyret for reducing the code size of my mess <3\n\n// Music done with 4klang\n\n\nM   O =  (1.-U.y) * O * vec4(.8,1,.9,0)\n        +.1 - .1 * fract( 1e4* sin( dot(U*iTime, R-71.))); // noise\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Mdc3z2","filepath":"https://soundcloud.com/virgill/4klang-the-scientist","previewfilepath":"https://soundcloud.com/virgill/4klang-the-scientist","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"M   uvec2 I = uvec2( ( int(u.y) - iFrame ) *8 , u *4. ); \n    uint  a = ( I.x-I.y&I.x+I.y ) / uint( 7.+ iTime/6. );\n    a = ( int(u.y) & 1 ) > 0 \n          ? a |= uint( (1.01*O.y-.04) *256. )\n          : a ^= uint(       O.y      *256. );    \n    O = vec4( a & 255u )/256.;\n}\n\n  ","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define M                                        \\\nvoid mainImage( out vec4 O, vec2 u ) {           \\\n        u.y++;                                   \\\n        vec2 R = iResolution.xy, U = u / R;      \\\n        O = texture(iChannel0, U );","name":"Common","description":"","type":"common"}]}