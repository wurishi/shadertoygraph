{"ver":"0.1","info":{"id":"ldK3RK","date":"1455411017","viewed":228,"name":"Magnetic Field Strength (Dipole)","username":"rgb","description":"simulation of a magnetic dipole (2 point charges).","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","field","dipole","magnetic","strength"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// http://www.nist.gov/data/nsrds/NSRDS-NBS-10.pdf for mu\nconst float u = 0.2;\n\n// dot product is the cos(theta).\n// LHR , thumb=|, index=X, middle=Y\n// x,y plane orientation\n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Dipole charges.\n    const vec2 pCharge = vec2(0.45) + vec2(0.5, 1.0) / 15.0;\n    const vec2 nCharge = vec2(0.45) + vec2(0.5, 0.0) / 15.0;\n    vec2 npDir = nCharge-pCharge;\n    \n    // Dipole attributes.\n    vec2 O = (nCharge+pCharge)/2.0;\n    float l = length(nCharge-pCharge);\n    \n    // Point on the screen.\n\tvec2 P = fragCoord.xy / iResolution.xy;\n    vec2 rDir = P-O;\n    float r = length(rDir);\n    \n    // Look on the side.\n    float theta = acos(abs(dot(rDir, npDir)));\n    float limBy = 3.0 * ( u / (r*r*r) ) * sin(theta) * cos(theta);\n    \n    // Looking down\n    float cos2theta = 0.5 - (0.5 * cos(2.0 * theta));\n    float limBz = ( u / (r*r*r) ) * ( (3.0 * cos2theta) - 1.0 );\n    //limBz /= 10.0;\n\n\tfragColor = vec4(limBz * limBy, limBz * limBy, limBz * limBy, 1.0);\n}","name":"Image","description":"","type":"image"}]}