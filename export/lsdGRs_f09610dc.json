{"ver":"0.1","info":{"id":"lsdGRs","date":"1452958062","viewed":1608,"name":"Spanish Flag Simulation","username":"ciberxtrem","description":"Detailed Spanish Flag.","likes":44,"published":3,"flags":0,"usePreview":1,"tags":["2d","3d","flag","wind","spanish","2ddistancefield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Spanish Flag simulation\n// 3D Flag modelling inspired by the flag of TekF: https://www.shadertoy.com/view/ldX3DX\n\nconst float MIN_DF = 0.01;\nconst float PI = 3.1415;\nconst float HPI = PI * 0.5;\n\nconst vec3 yellowBright = vec3(0.996, 0.937, 0.062); \nconst vec3 yellow = yellowBright*0.7; \nconst vec3 red = vec3(0.99, 0.0, 0.0);\nconst vec3 blue = vec3(0.015, 0.125, 0.803);\nconst vec3 gray = vec3(0.85);\nconst vec3 green = vec3(0.031, 0.607, 0.160);\nconst vec3 pink = vec3(0.921, 0.360, 0.831);\n\nfloat t = 0.0;\nvec3 flagPos = vec3(2.2, 4.0, 15.0);\nvec3 posterPos = vec3(-10.0, -1., 15.0);\nvec3 moonPos = vec3(00., 150., 500.);\n\n// **** Noise 2D\nfloat hash1(vec2 p){ return fract( sin(length(p)) * 43758.5453 ); }\n\nfloat noise(vec2 p)\n{\n    vec2 i = floor(p);\n\tvec2 f = fract(p); \n\tf *= f * (3.0-2.0*f);\n\n    return mix(\n\t\t\tmix(hash1(i + vec2(0.,0.)), hash1(i + vec2(1.,0.)),f.x),\n\t\t\tmix(hash1(i + vec2(0.,1.)), hash1(i + vec2(1.,1.)),f.x),\n\t\t\tf.y);\n}\n\nfloat fbmWave(vec2 p, float time)\n{\t\n\tfloat f = 0.;\n                                            p.x -= time;\n\tf += 0.50000 * noise(p); p *= 1.18; p.x -= -time*1.05;\n\tf += 0.25000 * noise(p); p *= 1.25; p.x -= time*1.48; p.y -= time*0.55;\n\tf += 0.12500 * noise(p); p *= 1.39; p.x -= -time*2.11; p.y -= -time*0.71;\n\t//f += 0.06250 * noise(p); p *= 1.52; p.x -= time*2.23; p.y -= time*0.91;\n\t//f += 0.03125 * noise(p);\n\t\n\t//f /= 0.96875;\n    f /= 0.87500;\n\treturn f;\n}\n\nvec4 MapFlag(vec3 p)\n{\n    vec2 flagSize = vec2(10.0, 7.0)*1.2;\n    \n    vec3 pivot = vec3(-flagSize.x, 0.0, 0.);\n    vec3 q = p-pivot;\n    float rad = 0.5 + cos(t*0.30+noise(vec2(t*0.5))*0.3 )*0.75;\n    \n    q = vec3( cos(rad)*q.x + sin(rad)*q.z, q.y, cos(rad)*q.z - sin(rad)*q.x );\n    p = q+pivot;\n    \n    // Waves\n    float h = (fbmWave((p.xy+vec2(699.0, 375.0))*0.18, t*2.0)*2.-1.)*2.50;\n    float waveScale = smoothstep(0.0, flagSize.x*0.4, abs(p.x+flagSize.x));\n    h = mix(0.0, h, waveScale);\n    float d = (h - p.z) *0.5;\n    \n    float displacementScale = smoothstep(0.0, flagSize.x*1.5, abs(p.x+flagSize.x));\n    float displacementY = displacementScale*(0.5+0.5*sin(p.x*0.01))*3.;\n    \n    // cut the flag\n    d = max(d, abs(p.x)-flagSize.x);\n    d = max(d, abs(p.y+displacementY)-flagSize.y);\n    d = max(d, p.z-h);\n    \n    // left wave\n    d = max(d, -(p.x+flagSize.x) + cos(p.y*0.18)*0.6 + fbmWave(p.yx*0.5+vec2(t), t)*0.4 );\n    \n    return vec4(d, 2., (p.xy+vec2(0., displacementY))/1.2);\n}\n\nfloat dCylinder(vec3 p, vec2 rh)\n{\n    return max(length(p.xz)-rh.x, abs(p.y)-rh.y);\n}\n\nvec4 MapPoster(vec3 p)\n{\n    // Base\n    vec2 rh = vec2(0.28, 14.);\n    vec2 res = vec2(dCylinder(p, rh), 1.);\n    res.x -= mix(0., 0.5, smoothstep(0., 40., -p.y+rh.y ));\n    res.x -= sin(p.y*0.5)*sin(p.x*2.)*0.05;\n    \n    // Details\n    float detail = dCylinder(p-vec3(0., 14., 0.), vec2(0.4, 0.4));\n    detail = min(detail,  dCylinder(p-vec3(0., -4.0, 0.), vec2(0.6, 0.4)));\n    res.x = min(res.x, detail);\n    return vec4(res, 0.0, 0.0);\n}\n\nvec4 DFScene(vec3 p)\n{\n    vec4 res = MapFlag(p-flagPos);\n    \n    vec4 res2 = MapPoster(p-posterPos);\n    if(res2.x < res.x) { res = res2; }\n    \n    return res;\n}\n\nvec3 CalcNormal(vec3 p)\n{\n    vec2 ep = vec2(0.001, 0.0);\n    return normalize(vec3(\n        DFScene(p+ep.xyy).x-DFScene(p-ep.xyy).x,\n        DFScene(p+ep.yxy).x-DFScene(p-ep.yxy).x,\n        DFScene(p+ep.yyx).x-DFScene(p-ep.yyx).x\n        ));\n}\n\nvec4 Intersect(vec3 ro, vec3 rd, float tmin, float tmax)\n{\n    float t = tmin;\n    vec4 h = vec4(1.0, 0.0, 0.0, 0.0);\n    \n    for(int i = 0; i < 60; ++i)\n    {\n        h = DFScene(ro + rd*t);\n        if(h.x < MIN_DF || h.x > tmax)\n        {\n            break;\n        }\n        t += h.x;\n    }\n    \n    if(h.x > 0.4)\n    {\n        h.y = 0.0;\n    }\n    h.x = t;\n    \n    return h;\n}\n\n// 2D distance functions\n// From iquilez\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nvec2 dSegment(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float h = clamp(dot(pa, ba)/dot(ba, ba), 0., 1.);\n    \n    return vec2(length(pa - ba*h), h);\n}\n//----\n\nfloat distRectangle2D(vec2 p, float w, float h)\n{\n    return max(abs(p.x)-w, abs(p.y)-h);\n}\n\nfloat distRectangleRound2D(vec2 p, vec2 b, float r)\n{\n    return length(max(abs(p)-b, 0.))-r;\n}\n\nfloat distDiagonal(vec2 p, float r, float l)\n{\n    return max(abs(p.x-p.y)-r, length(p.xy)-l);\n}\n\nfloat distRectangleOval2D(vec2 p, float w, float h)\n{\n    return max(max(abs(p.x)-w, abs(p.y)-h), min(length(p)-min(w, h), -p.y));\n}\n\nfloat distCircle2D(vec2 p, float r)\n{\n    return length(p)-r;\n}\n\nfloat distCurve2D(vec2 p, float l, float r, float speed, float amp, float offset)\n{\n    return max( abs(p.x-sin(p.y*speed+offset)*amp)-r, abs(p.y)-l );\n}\n\nvec2 rotate2D(vec2 p, float rad)\n{\n    float c = cos(rad); float s = sin(rad);\n    return vec2(p.x*c+p.y*s, p.y*c-p.x*s);\n}\n\nfloat dLetterP2D(vec2 p)\n{\n    vec2 q = (p - vec2(0.15, 0.405)) * vec2(0.65, 1.);\n    float d = max(max(length(q) - 0.56, -q.x-0.18), -(length(q) - 0.30));\n    \n    q = p - vec2(0., -0.02);\n    d = min(d, max(abs(q.x) - 0.15, abs(q.y)-0.98));\n    return d;\n}\n\nfloat dLetterL2D(vec2 p)\n{\n    float d = max(abs(p.x)-0.15, abs(p.y+0.02)-0.98);\n    \n    vec2 q = p - vec2(0.5, -0.90);\n    d = min(d, max(abs(q.x)-0.5, abs(q.y-0.0)-0.10));\n    return d;\n}\nfloat dLetterU2D(vec2 p)\n{\n    vec2 q = vec2(p.x, p.y+1.08);\n    return max(min(abs(q.y-q.x*2.5)-0.25, abs(q.y+q.x*2.5)-0.50), abs(p.y+0.02)-0.98);\n}\n\nfloat dLetterS2D(vec2 p)\n{   \n    float sy = abs(cos(p.y*1.558));\n    \n    vec2 q = (p - vec2(0.20, 0.55))*vec2(1.0, 1.30);\n    float d = abs(length(q) - (0.60*0.5+0.5*sy))-0.25;\n    q = p - vec2(0.35, 0.35);\n    d = max(d, -(q.y-q.x*1.0));\n    \n    q = (p - vec2(-0.30, -0.60))*vec2(1., 1.30);\n    float d2 = min(d, abs(length(q) -(0.60*0.5+0.5*sy))-0.25);\n    q = p - vec2(-0.70, -0.70);\n    d2 = max(d2, -(-q.y+q.x*1.0));\n    d = min(d, d2);\n    \n    return d;\n}\n\nfloat dLetterT2D(vec2 p)\n{\n    float d = max(abs(p.x)-0.20, abs(p.y+0.02)-0.98);\n    vec2 q = p - vec2(0.0, 0.80);\n    d = min(d, max(abs(q.x)-0.8, abs(q.y+0.0)-0.15));\n    return d;\n}\n\nfloat dLetterR2D(vec2 p)\n{\n    return max(min(dLetterP2D(p), max(abs(-p.y-p.x)-0.20, -p.x)), abs(p.y)-1.0);\n}\n\nfloat dLetterA2D(vec2 p)\n{\n    vec2 q = vec2(p.x*1.4, p.y+1.08);\n    return min(max(min(abs(q.y-(q.x+1.2)*1.8)-0.25, abs(q.y+(q.x-1.2)*1.8)-0.50), abs(p.y+0.02)-0.98), max(abs(p.x)-0.75, abs(p.y+0.3)-0.1));\n}\n\nfloat dFlower(vec2 p)\n{\n    float d = distCircle2D(p*vec2(2.25, 0.95), 0.15);\n    \n    p -= vec2(-0.05, -0.06);\n    p = rotate2D(p, PI*0.15);\n    d = min(d, distCircle2D(p*vec2(3.5, 1.), 0.15));\n    \n    p = rotate2D(p, -PI*0.30);\n    p -= vec2(0.1, 0.06);\n    d = min(d, distCircle2D(p*vec2(3.5, 1.), 0.15));\n    \n    return d;\n}\n\nfloat dDiamant(vec2 p)\n{\n    float d = distRectangle2D(p, 0.1, 0.05);\n    d = min(d, length(p-vec2(-0.11, 0.)) - 0.05);\n    d = min(d, length(p-vec2(+0.11, 0.)) - 0.05);\n    \n    return d;\n}\n\nfloat dLisFlower(vec2 q)\n{\n    vec2 q2 = q;\n    float d = distCircle2D((q2)*vec2(1.0 + pow(1.+ max(0., abs(q2.y) - 0.06), 12.0), 1.0), 0.13);\n    \n    q2 = q-vec2(0., -0.20);\n    float d2 = distCircle2D((q2)*vec2(1.0 + pow(1.+ max(0., abs(q2.y) - 0.06), 12.0), 1.0), 0.13);\n    d2 += step(0., sin(q2.y*120.));\n    d = min(d, d2);\n\n    q2 = q - vec2(0.0, -0.12);\n    q2.y -= cos(q2.x*20.+PI)*0.06;\n    q2.x = abs(q2.x);\n    q2.x -= 0.1;\n    d = min(d, distCircle2D((q2)*vec2(1.0, 1.0 + pow(1.+ max(0., abs(q2.x) - 0.06), 16.0)), 0.13));\n    \n    return d;\n}\n\nvec3 TexCrown(vec3 color, vec2 p, float mode)\n{\n    vec2 q, q2, q3;\n    float d, d2, d3;\n    vec3 color2;\n    \n    // Bottom\n    q = p-vec2(0., -0.8); q *= vec2(0.15, 1.5);\n    d = distCircle2D(q, 0.20);\n    \n    vec3 redLines = red;\n    redLines = mix(mix(vec3(0.), redLines, smoothstep(0.03, 0.035, mod(p.x, 0.08) )), red, smoothstep(0., 0.13, q.x+0.05));\n    color = mix(redLines, color, smoothstep(0., 0.01, d));\n    \n    d = abs(d)-0.020 + length(pow(abs(q), vec2(0.1, 1.0)))*0.01;\n    color = mix(yellow, color, smoothstep(0., 0.01, d));\n    d = abs(d)-0.001;\n    color = mix(vec3(0.), color, smoothstep(0., 0.01, d));\n\n    // Main\n    q = p-vec2(0., -0.55);\n    d = distRectangle2D(q, 2.0, 0.15);\n    d2 = 0.8-pow(abs(q.x), 2.)*0.17;\n    d2 += (abs(sin(q.x*3.2))*0.12);\n    d2 = mix(0., d2, smoothstep(0., 0.01, q.y));\n    d -= d2;\n    float dCutLateral = 0.96-smoothstep(-0.20, 0.20, q.y-abs(q.x) +1.5);\n    d3 = mix(d, 1., dCutLateral); // contains distance field for the main red color\n    color = mix(red, color, smoothstep(0., 0.01, d3));\n    color = mix(vec3(0.), color, smoothstep(0., 0.01, abs(d3)-0.005));\n    \n    // Ring\n    q2 = q - vec2(0., -0.50);\n    q2.y -= abs(cos(q2.x*0.5))*0.5;\n    d = distRectangle2D(q2, 1.46, 0.13); d += cos(abs(q2.y)*20.)*0.04;\n    color = mix(yellow, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.01, abs(d)-0.002));\n    \n    d = distRectangle2D(q2, 1.46, 0.085); d += cos(abs(q2.y)*20.)*0.04;\n    color = mix(yellow, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.001, abs(d)-0.004));\n    \n    // Ring details\n    q3 = q2;\n    q3.x = mod(q3.x, 0.75) - 0.375;\n    d = max(d3, length(q3) - 0.05);\n    color = mix(vec3(1.), color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.001, abs(d)-0.004));\n    \n    q3 = q2;\n    q3.x = mod(q3.x+0.7, 1.40) - 0.70;\n    d = max(dCutLateral-0.55, dDiamant(q3));\n    color = mix(red, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.001, abs(d)-0.004));\n    \n    q3 = q2;\n    q3.x = mod(q3.x+0.0, 1.40) - 0.70;\n    d = max(d3, dDiamant(q3));\n    color = mix(green, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.001, abs(d)-0.004));\n    \n    // Top arcs (*)\n    q2 = q - vec2(0., 0.5); \n    q2.x = abs(q2.x);\n    float r = 0.1 + 0.9*dot( normalize(q2*vec2(1., 2.0)), normalize(vec2(1.0, 1.0)) );\n    r *= 1.2;\n    \n    q3 = q2 - vec2(0.08, 0.);\n    d = max(abs(length(q3) - r)-0.08, -q3.y-q3.x*0.01+0.10);\n    \n    // Mode 0\n    vec3 colorMode0 = color;\n    colorMode0 = mix(yellow, colorMode0, smoothstep(0., 0.01, d));\n    colorMode0 = mix(vec3(0.), colorMode0, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    d = max(abs(length(q3-vec2(0.08, 0.1)) - r)-0.05, -q3.y-q3.x*0.01+0.10);\n    float at = cos( atan(q3.y, q3.x)*40. );\n    d += smoothstep(0.0, 1., at )*0.5;\n    colorMode0 = mix(vec3(1.), colorMode0, smoothstep(0., 0.01, d));\n    colorMode0 = mix(vec3(0.), colorMode0, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    r *= 0.8;\n    q3 = q2 - vec2(1.18, -0.2);\n    d = max(abs(length(q3) - r)-0.08, -q3.y-q3.x*2.0+0.8);\n    colorMode0 = mix(yellow, colorMode0, smoothstep(0., 0.01, d));\n    colorMode0 = mix(vec3(0.), colorMode0, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    d = max(abs(length(q3-vec2(0.08, 0.1)) - r)-0.05, -q3.y-q3.x*2.0+0.8);\n    at = cos( atan(q3.y, q3.x)*40. );\n    d += smoothstep(0.0, 1., at )*0.5;\n    colorMode0 = mix(vec3(1.), colorMode0, smoothstep(0., 0.01, d));\n    colorMode0 = mix(vec3(0.), colorMode0, smoothstep(0., 0.001, abs(d)-0.01));\n    color = mix(colorMode0, color, step(0.5, mode));\n    \n    // Mode 1\n    vec3 colorMode1 = color;\n    q2 = rotate2D(q2, -q2.x*0.2);\n    vec2 seg = dSegment(q2, vec2(0.6, 0.6), vec2(0., -0.2));\n    d = seg.x -0.15;\n    d = max(d, d3);\n    vec3 colTemp = mix(vec3(0.), yellow, smoothstep(-0.16, -0.12, d));\n    colorMode1 = mix(colTemp, colorMode1, smoothstep(0., 0.01, d));\n    colorMode1 = mix(vec3(0.), colorMode1, smoothstep(0., 0.001, abs(d)-0.01));\n    color = mix(colorMode1, color, step(mode, 0.5));\n    \n    // Top decorations\n    q2 = q - vec2(0., 1.20);\n    q2.xy *= 1.3;\n    d = distRectangle2D(q2, 0.20, 0.4);\n    d = smin(d, distCircle2D(q2-vec2(0., 0.40), 0.10), 0.15);\n    d = smin(d, distRectangle2D(rotate2D(q2-vec2(0., -0.32), PI*0.25), 0.20, 0.20), 0.15);\n    color = mix(yellow, color, smoothstep(0., 0.01, d));\n    color2 = mix(mix(color, vec3(0.), smoothstep(-0.080, -0.060, d)), yellow, smoothstep(-0.060, 0.0, d));\n    color = mix(color2, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.01, abs(d)-0.005));\n    q3 = q2; q3.y = abs(q3.y);\n    q3.y = mod(q3.y, 0.21);\n    d = length(q3-vec2(0., 0.1))-0.12;\n    d = max(d, abs(q2.y)-0.45); d += abs(q2.y+0.5)*0.08;\n    color = mix(vec3(1.), color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.01, abs(d)-0.005));\n    \n    // Upper details of ring\n    q2 = q - vec2(0., -0.38);\n    q2.y -= abs(cos(q2.x*0.5))*0.6;\n    q2.x *= 0.9;\n    float height = (0.5+0.5*smoothstep(0.75, 1., abs(0.75+0.25*cos(q2.x*8.))))*0.25;\n    d = abs( ( 1.-abs(sin(q2.x*8.2)) )*height - q2.y)-0.05;\n    d = max(d, d3);\n    color = mix(yellow, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    // White dots\n    q2 = q - vec2(0., -0.05);\n    q2.y -= abs(cos(q2.x*0.5))*0.5;\n    q2.x = mod(q2.x, 0.85)-0.425;\n    d = max(d3, length(q2*vec2(1.2, 0.8))-0.065);\n    color = mix(vec3(1.), color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    // Flower\n    q2 = q - vec2(0., 0.15);\n    q2.y -= abs(cos(q2.x*0.5))*0.5;\n    q2.x = mod(q2.x-0.42, 0.85)-0.425;\n    \n    q3 = q2-vec2(0., 0.05);\n    d = dFlower(q3);\n    \n    q3 = q2-vec2(0., -0.130);\n    q3.x = abs(q3.x);\n    q3 -= vec2(0.20, 0.);\n    d = max(dCutLateral, min(d, dFlower(rotate2D(q3, -HPI))));\n    color = mix(yellow, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    // red cercle\n    d = max(d3, length(q2-vec2(0., -0.15)) - 0.08);\n    color = mix(red, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    // Top Circle and cross\n    // Circle\n    q2 = q - vec2(0., 1.75);\n    d = length(q2) - 0.18;\n    color = mix(blue, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    // Cross\n    d = distRectangle2D(q2, 0.20, 0.05);\n    d = min(d, distRectangle2D(q2-vec2(0., 0.24), 0.05, 0.21));\n    d = min(d, distRectangle2D(q2-vec2(0., 0.32), 0.16, 0.05));\n    color = mix(yellow, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    return color;\n}\n\nfloat dChain(vec2 q2, float showCenterCircle, float cutCenterCircle, float showLateralCircles)\n{\n    float w = 0.035, h = 0.6;\n    float d = max(length(q2.x)-w, length(q2.y)-h);\n    \n    vec2 q3 = q2;\n    q3.y = mod(q3.y, 0.65) - 0.325;\n    float w2 = 0.09, h2 = 0.1;\n    d = min(d, max(length(q3.x)-w2, length(q3.y)-h2));\n    \n    float w3 = 0.04, h3 = 0.05;\n    d = max(d, -max(length(q3.x)-w3, length(q3.y)-h3));\n    \n    // Center circle\n    d = mix(min(d, length(q2)-h2), d, step(showCenterCircle, 0.5));\n    d = mix(max(d, -(length(q2)-h3)), d, step(cutCenterCircle, 0.5));\n    \n    // Lateral cicles\n    q3 = q2;\n    q3.y = mod(q3.y, 1.3) - 0.65;\n    d = mix(min(d, length(q3) - 0.1), d, step(showLateralCircles, 0.5));\n    \n    d = max(d, length(q2.y)-0.8);\n    \n    return d;\n}\n\nfloat dNail(vec2 p)\n{\n    float d = (p.y-0.2) - (p.x + 0.5);\n    d = max(d, (p.y-0.2) + (p.x - 0.5));\n    d = max(d, -(p.y+0.));\n    d = max(d, abs(p.x) - 0.60);\n   \n    return d;\n}\n\nfloat TexLeg(vec2 p, inout vec3 col)\n{\n    vec2 q;\n    \n    q = p;\n    vec2 seg = dSegment(q, vec2(-0.15, 0.0), vec2(0.15, -0.0));\n    float d = seg.x-0.15 + seg.y*0.01;\n    \n    // detail\n    q -= vec2(-0.28, -0.05); q.y -= -cos(q.x*20.+2.0)*0.04;\n    float d2 = max(abs(pow((sin(q.y*80.-1.5)), 1.0)*0.030-q.x)-0.06, abs(q.y)-0.12);\n    d = min(d, d2);\n    \n    q = p;\n    seg = dSegment(q, vec2(-0.15, -0.15), vec2(-0.1, -0.35));\n    d2 = seg.x-0.060 - seg.y*0.01;\n    d = smin(d, d2, 0.05);\n    \n    seg = dSegment(q, vec2(-0.30, -0.35), vec2(-0.15, -0.35));\n    d2 = seg.x-0.077 + seg.y*0.01;\n    d = smin(d, d2, 0.05);\n    col = mix(pink, col, smoothstep(0., 0.01, d));\n    \n    q = p; q -= vec2(-0.35, -0.35); q = rotate2D(q, 1.07);\n    q.x += cos(q.y*7.+2.0)*0.05;\n    q *= vec2(9., 3.);\n    \n    d2 = dNail(q);\n    d = min(d, d2);\n    col = mix(pink, col, smoothstep(0., 0.01, d2));\n    col = mix(red, col, smoothstep(0., 0.01, max(d2, -q.y+0.4)));\n    \n    q = p; q -= vec2(-0.35, -0.35); q = rotate2D(q, 2.);\n    q.x += cos(q.y*7.+2.0)*0.05;\n    q *= vec2(9., 3.);\n    \n    d2 = dNail(q);\n    d = min(d, d2);\n    col = mix(pink, col, smoothstep(0., 0.01, d2));\n    col = mix(red, col, smoothstep(0., 0.01, max(d2, -q.y+0.4)));\n    \n    q = p; q -= vec2(-0.35, -0.35); q = rotate2D(q, 2.9);\n    q.x += cos(q.y*7.+2.0)*0.05;\n    q *= vec2(9., 3.);\n    \n    d2 = dNail(q);\n    d = min(d, d2);\n    col = mix(pink, col, smoothstep(0., 0.01, d2));\n    col = mix(red, col, smoothstep(0., 0.01, max(d2, -q.y+0.4)));\n    \n    return d;\n}\n\nfloat TexHand(vec2 p, inout vec3 col)\n{\n    vec2 q = p;\n       \n    vec2 seg = dSegment(q, vec2(0.30, -0.2), vec2(-0.30, -0.35));\n    float d = seg.x-0.125 + seg.y*0.05;\n    \n    col = mix(pink, col, smoothstep(0., 0.01, d));\n    \n    // detail\n    q -= vec2(-0.08, -0.35); q.x -= -cos(q.y*20.+2.0)*0.04;\n    float d2 = max(abs(pow((sin(q.x*80.-1.5)), 1.0)*0.030-q.y)-0.06, abs(q.x)-0.12);\n    d = min(d, d2);\n    \n    q = p; q -= vec2(-0.35, -0.40); q = rotate2D(q, 1.07);\n    q.x += cos(q.y*7.+2.0)*0.05;\n    q *= vec2(9., 3.);\n    d2 = dNail(q);\n    d = min(d, d2);\n    col = mix(pink, col, smoothstep(0., 0.01, d));\n    col = mix(red, col, smoothstep(0., 0.01, max(d2, -q.y+0.4)));\n    \n    q = p; q -= vec2(-0.35, -0.40); q = rotate2D(q, 2.);\n    q.x += cos(q.y*7.+2.0)*0.05;\n    q *= vec2(9., 3.);\n    \n    d2 = dNail(q);\n    d = min(d, d2);\n    col = mix(pink, col, smoothstep(0., 0.01, d2));\n    col = mix(red, col, smoothstep(0., 0.01, max(d2, -q.y+0.4)));\n    \n    q = p; q -= vec2(-0.35, -0.40); q = rotate2D(q, 2.9);\n    q.x += cos(q.y*7.+2.0)*0.05;\n    q *= vec2(9., 3.);\n    \n    d2 = dNail(q);\n    d = min(d, d2);\n    col = mix(pink, col, smoothstep(0., 0.01, d2));\n    col = mix(red, col, smoothstep(0., 0.01, max(d2, -q.y+0.4)));\n    \n    return d;\n}\n\nfloat TexTail(vec2 q2, inout vec3 col)\n{\n    //Tail\n    vec2 q3 = rotate2D(q2, HPI*0.0);\n    q3 = q3-vec2(0.5, 0.2);\n    float d2 = distCurve2D(q3, 0.5, 0.06, 6., 0.1, PI);\n    d2 += max(sin(q3.y*2. +0.0)*0.04, 0.);\n    float d = d2;\n    \n    // Nail\n    q3 = q3-vec2(0.0, 0.60);\n    q3.x += cos(q3.y*10.+0.8)*0.05;\n    \n    d2 = max(distRectangle2D(q3, 0.08, 0.35), -q3.y-0.22);\n    d2 += pow(1.+abs(q3.y+0.0), 6.)*0.018;\n    \n    q3 = rotate2D(q3-vec2(0., -0.05), 0.6);\n    float d3 = max(distRectangle2D(q3, 0.08, 0.35), -q3.y-0.1);\n    d3 += pow(1.+abs(q3.y+0.0), 6.)*0.018;\n    d2 = min(d2, d3);\n    \n    q3 = rotate2D(q3-vec2(0., -0.05), -1.2);\n    d3 = max(distRectangle2D(q3, 0.08, 0.35), -q3.y-0.08);\n    d3 += pow(1.+abs(q3.y+0.0), 6.)*0.018;\n    d2 = min(d2, d3);\n    \n    return min(d, d2);\n}\n\nvec3 TexLeon(vec2 p, vec3 col)\n{\n    vec2 q = p - vec2(0., -0.2);\n    \n    // Legs\n    float d = TexLeg(q, col);\n    col = mix(vec3(0.), col, smoothstep(0., 0.001, abs(d)-0.02));\n    \n    // Body\n    vec2 a = vec2(0.25, 0.0);\n    vec2 b = vec2(0.12, 0.2);\n    vec2 ba = b-a;\n\n    vec2 seg = dSegment(q, a, b);\n    d = seg.x-0.15 - seg.y*0.05;\n    \n    seg = dSegment(q, b+ba*0.1, b+ba*1.0);\n    d = min(d, seg.x-0.2 - seg.y*0.05);\n    \n    col = mix(pink, col, smoothstep(0., 0.01, d));\n    col = mix(vec3(0.), col, smoothstep(0., 0.001, abs(d)-0.02));\n    \n    d = min(d, TexLeg(rotate2D(q-vec2(0.25, -0.15), 1.3), col));\n    col = mix(vec3(0.), col, smoothstep(0., 0.001, abs(d)-0.02));\n    \n    float dTail = TexTail(rotate2D(q-vec2(-0.05, 0.40), -0.35), col);\n    col = mix(pink, col, smoothstep(0., 0.01, dTail));\n    d = min(d, dTail);\n    col = mix(vec3(0.), col, smoothstep(0., 0.001, abs(d)-0.02));\n    \n    // Hands\n    d = min(d, TexHand(rotate2D(q-vec2(-0.3, 0.8), -0.8), col));\n    col = mix(vec3(0.), col, smoothstep(0., 0.001, abs(d)-0.02));\n    \n    d = min(d, TexHand(q-vec2(-0.5, 0.5), col));\n    col = mix(vec3(0.), col, smoothstep(0., 0.001, abs(d)-0.02));\n    \n    // Head\n    p = rotate2D(p-vec2(-0.35, 0.10), -0.5);\n    q = p - vec2(0., 0.6);\n    q.x *= 1.25;\n    d = length(q) - 0.4;\n    q = rotate2D(q, -q.y*0.3-q.x*0.8);\n    float d2 = pow(0.5+0.5*(pow(abs(sin(atan(q.y, q.x)*8.)), 1.5)), 1.8)*1.5;\n    d = mix(d-d2*0.1, d, smoothstep(0., 0.1, (q.y-0.15)-(q.x)*0.5));\n    \n    // Nose\n    q = p - vec2(0., 0.6);\n    seg = dSegment(q, vec2(-0.35, 0.165), vec2(-0.0, 0.3));\n    d2 = seg.x-0.05 - seg.y*0.00;\n    float d3 = max(d2, q.x+0.35);\n    d = min(d, d2);\n    \n    // Mouth hole\n    q = p - vec2(0., 0.6);\n    q.x *= 1.5;\n    seg = dSegment(q, vec2(-0.6, 0.00), vec2(-0.35, 0.06));\n    d2 = seg.x-0.095 + seg.y*0.005;\n    d = max(d, -d2);\n    \n    col = mix(pink, col, smoothstep(0., 0.01, d));\n    col = mix(vec3(0.), col, smoothstep(0., 0.01, d3));\n    col = mix(vec3(0.), col, smoothstep(0., 0.001, abs(d)-0.025));\n    \n    // Eyes\n    q = p - vec2(-0.15, 0.85);\n    seg = dSegment(q, vec2(-0.03, 0.0), vec2(0.03, -0.));\n    d = seg.x-0.015 + seg.y*0.008;\n    col = mix(vec3(0.), col, smoothstep(0., 0.01, d));\n    \n    // Tonge\n    q = p - vec2(-0.38, 0.65);\n    d = abs(cos(q.x*12.+3.5)*0.05-q.y) - (0.01 + abs(sin(q.x-0.18))*0.1 );\n    d = max(max(d, abs(q.x)-0.20), (q.y-0.08)-(q.x*0.5));\n    col = mix(red, col, smoothstep(0., 0.01, d));\n    col = mix(vec3(0.), col, smoothstep(0., 0.001, abs(d)-0.015));\n    \n    // Crown\n    q = p - vec2(0., 0.99);\n    vec2 q2 = q * vec2(12., 3.);\n    q2 *= vec2(1.8, 2.); q2.x = mod(q2.x, 1.0) - 0.5;\n    q2 = rotate2D(q2, -floor(q.x*8.0) * 0.25);\n    d = dNail(q2);\n    d = max(d, abs(q.x)-0.18);\n    col = mix(mix(yellow, yellow*0.2, step(0.20, hash1(q))), col, smoothstep(0., 0.01, d));\n    \n    q2 = q - vec2(0., 0.00);\n    q2 = rotate2D(q2, -q2.x*0.5);\n    d2 = max(abs(q2.x)-0.18, abs(q2.y)-0.04);\n    \n    col = mix(mix(yellow, yellow*0.2, step(0.7, hash1(q))), col, smoothstep(0., 0.01, d2));\n    col = mix(vec3(0.), col, smoothstep(0., 0.001, abs(d)-0.005));\n    \n    return col;\n}\n\nvec3 TexFlag(vec3 p, vec2 uv)\n{   \n    vec2 q, q2, q3, q4;\n    float d, d2, d3, d4;\n    \n    vec3 color = yellowBright;\n    color = mix(color, red, smoothstep(0., 0.08, abs(uv.y)-3.8));\n    \n    // Squares\n    q = uv - vec2(-3.0, -1.0);\n    vec2 squareSize = vec2(1.0, 1.05);\n    \n    float dSquares = distRectangle2D(q-vec2(0., 0.40), squareSize.x*2., squareSize.y*2.-0.40);\n    dSquares = min(dSquares, distCircle2D((q-vec2(0, 0.95-squareSize.y*2.))*vec2(1., 1.66), squareSize.x*2.));\n    color = mix(gray, color, smoothstep(0., 0.01, dSquares));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(dSquares)-0.02));\n    \n    // Left Up Square\n    q2 = q-vec2(-squareSize.x, squareSize.y);\n    d = max(dSquares, distRectangle2D(q2, squareSize.x, squareSize.y));\n    color = mix(red, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d)-0.01));\n    \n    // Castile\n    q3 = q2 - vec2(0., -0.65); \n    d = distRectangle2D(q3, 0.60, 0.15);\n    \n    q3 = q2 - vec2(0., -0.25); \n    d = min(d, distRectangle2D(q3, 0.43, 0.3));\n    \n    q3 = q2 - vec2(0., 0.2); \n    d = min(d, distRectangle2D(q3, 0.55, 0.15));\n    \n    q3 = q2 - vec2(0., 0.4);\n    d2 = min(distRectangle2D(q3-vec2(0.025, 0.1), 0.05, 0.25), distRectangle2D(q3-vec2(0.025, 0.40), 0.18, 0.10));\n    q3.x = mod(q3.x-0.01, 0.15) - 0.075; d2 += mix(0., 1., 1.-step(0.0, abs(q3.x)-0.025)) * step(0.43, q3.y);\n    d = min(d, d2);\n    \n    q3 = q2 - vec2(0., 0.4);\n    q3.x = abs(q3.x);\n    d2 = min( distRectangle2D(q3-vec2(0.35, 0.), 0.05, 0.1), distRectangle2D(q3-vec2(0.35, 0.15), 0.18, 0.1));\n    q3.x = mod(q3.x-0.01, 0.15) - 0.075; d2 += mix(0., 1., 1.-step(0.0, abs(q3.x)-0.025)) * step(0.20, q3.y);\n    d = min(d, d2);\n    \n    q3 = q2 - vec2(0., 0.4);\n    q3.x = abs(q3.x);\n\n    q3 = q2;\n    q3 = mod(q3+vec2(0.01, 0.), vec2(0.15, 0.075)) - vec2(0.075, 0.0475);\n    d2 = distRectangleRound2D(q3, vec2(0.05, 0.0225), 0.005);\n    vec3 col2 = mix(yellow, vec3(0.), smoothstep(0., 0.001, d2));\n    color = mix(col2, color, smoothstep(0., 0.001, d));\n    color = mix(vec3(0.), color, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    // Windows\n    q3 = q2 - vec2(0., 0.4);\n    q3.x = abs(q3.x);\n    d = max(dSquares, distRectangleOval2D(rotate2D(q3-vec2(0., -1.0), PI), 0.14, 0.21));\n    color = mix(blue, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d)-0.01));\n    \n    d = max(dSquares, distRectangleOval2D(rotate2D(q3-vec2(0.23, -0.5), PI), 0.10, 0.21));\n    color = mix(blue, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d)-0.01));\n\n    // Right Up Square\n    q2 = q-vec2(squareSize.x, squareSize.y);\n    d = max(dSquares, distRectangle2D(q2, squareSize.x, squareSize.y));\n    color = mix(gray, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d)-0.01));\n    \n\tcolor = TexLeon((q2-vec2(0.1, -0.1))*vec2(1.1, 1.1), color);\n    \n    // Left bottom Square\n    q2 = q-vec2(-squareSize.x, -squareSize.y);\n    d = max(dSquares, distRectangleOval2D(q2, squareSize.x, squareSize.y));\n    color = mix(vec3(0.996, 0.937, 0.062), color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d)-0.03));\n    // Aragon Flag bars\n    float rep = mod(abs(q2.x+10.), 0.45);\n    color = mix(mix(yellow, red, step(0.22, rep)), color, step(0., d));\n    color = mix(mix(vec3(0.), color, step(0.02, abs(rep-0.22))), color, step(0., d));\n    color = mix(mix(vec3(0.), color, step(0.02, abs(rep-0.45))), color, step(0., d));\n    \n    // Right Bottom Square\n    q2 = q-vec2(squareSize.x, -squareSize.y);\n    d = max(dSquares, distRectangleOval2D(q2, squareSize.x, squareSize.y));\n    color = mix(red, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d)-0.01));\n    \n    // Navarre\n    q2 = q-vec2(squareSize.x, -squareSize.y);\n    \n    // Chains\n    q3 = q2;\n    q3.x = abs(q3.x); \n    d = dChain(q3-vec2(0.65, 0.15), 1., 1., 0.);\n    \n    q3 = q2;\n    d = min(d, dChain(rotate2D(q3-vec2(0.0, 0.85), HPI), 1., 0., 1.));\n    \n    q3 = q2;\n    d = min(d, dChain(rotate2D(q3-vec2(0.0, 0.15), HPI), 1., 1., 0.));\n    \n    d = min(d, max(dChain((q3-vec2(0.0, 0.10))*vec2(1., 0.75), 0., 0., 0. ), q3.y-0.8));\n    \n    d = min(d, dChain( rotate2D((q3-vec2(0.0, 0.15)), PI*0.25) * vec2(1., 0.72), 0., 0., 0. ));\n    d = min(d, dChain( rotate2D((q3-vec2(0.0, 0.15)), -PI*0.25) * vec2(1., 0.72), 0., 0., 0. ));\n    \n    q3 = rotate2D(q3-vec2(0.0, -0.48), HPI);\n    q3.x -= min(-cos(abs(q3.y)*2.5)*0.25, 0.);\n    d = min(d, dChain(q3, 1., 0., 1.));\n    \n    color = mix(yellow, color, smoothstep(0., 0.01, d));\n    \n    // Green dot\n    d = length(q2-vec2(0., 0.15)) - 0.1;\n    color = mix(green, color, smoothstep(0., 0.01, d));\n    \n    // Center Circle\n    d = distCircle2D(q*vec2(1., 0.8), 0.63);\n    color = mix(red, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d)-0.01));\n    d = distCircle2D(q*vec2(1., 0.78), 0.45);\n    color = mix(vec3(0.015, 0.125, 0.803), color, smoothstep(0., 0.01, d));\n    \n    // Lis Flower\n    d = dLisFlower((q-vec2(0., -0.15))*vec2(1.3, 1.));\n    \n    q2 = q; q2.x = abs(q2.x);\n    d = min(d, dLisFlower((q2-vec2(0.20, 0.25))*vec2(1.3, 1.)));\n    \n    color = mix(yellow, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    // Down Flower\n    q2 = q - vec2(0., -2.08); \n    q2.y -= sin(q2.x*3.-HPI)*0.08;\n    q2.x = abs(q2.x);\n    \n    // Leafs\n    q3 = q2-vec2(0.3, -0.04);\n    d = distCircle2D(q3*vec2(1., 2.0 + pow(1.+ max(abs(q3.x)-0.05, 0.), 5.)), 0.08) -0.2;\n    color = mix(green, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    // Branch\n    q2 = q - vec2(-0.04, -2.18); \n    q2.x -= cos(q2.y*10.)*0.04;\n    d = distRectangle2D(q2, 0.020, 0.13);\n    color = mix(green*0.2, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.001, abs(d)-0.01));\n   \n    // Grenade yellow part\n    q2 = q - vec2(0.0, -1.92); \n    d = distCircle2D(q2*vec2(1., 1.2), 0.23);\n    d = min(d, distRectangle2D(q2-vec2(0., 0.135), 0.10, 0.1) + sin(q2.x*70.)*0.04);\n    color = mix(yellow, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.001, abs(d)-0.01));\n    \n    // Grenade Red part\n    q2 = q - vec2(0.0, -1.92); \n    d = distCircle2D(q2*vec2(1.25 + pow(1.+ max(abs(q2.y)-0.05, 0.), 10.)*0.5, 1.), 0.15);\n    color = mix(red, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d)-0.006));\n    \n    // Pillars\n    // Left And Right Pillar\n    q2 = abs(q-vec2(0., 0.1)) - vec2(3.0, -0.);\n    \n    d = distRectangle2D(q2, 0.30, 1.35);\n    color = mix(gray, color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.005, abs(d)-0.008));\n    \n    d = distRectangle2D(q2-vec2(-0.06, 0.), 0.24, 1.35);\n    color = mix(vec3(0.0), color, smoothstep(0., 0.009, abs(d)-0.008));\n    \n    d = distRectangle2D(q2-vec2(-0.09, 0.), 0.20, 1.35);\n    color = mix(vec3(0.0), color, smoothstep(0., 0.009, abs(d)-0.008));\n    \n    // Pillar details Bevel\n    q2.y += 0.25;\n    q3 = q2 - vec2(0., 1.68);\n    d = dSegment(q3, vec2(-0.30, 0.), vec2(0.30, 0.)).x - 0.04;\n    color = mix(vec3(0.803, 0.588, 0.015), color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.001, abs(d)-0.008));\n    \n    q3 = q3 - vec2(0., 0.09);\n    d2 = distRectangle2D(q3, 0.31, 0.050);\n    q3.x = abs(q3.x);\n    d2 = max(d2, -(length(q3-vec2(0.34, 0.))-0.05));\n    color = mix(vec3(0.803, 0.588, 0.015), color, smoothstep(0., 0.01, d2));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.001, abs(d2)-0.006));\n    \n    q3 = q2 - vec2(0., 1.86);\n    d = dSegment(q3, vec2(-0.29, 0.), vec2(0.29, 0.)).x - 0.03;\n    color = mix(vec3(0.803, 0.588, 0.015), color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.001, abs(d)-0.005));\n    \n    q3 = q2 - vec2(0., 2.045);\n    d2 = distRectangle2D(q3, 0.45, 0.15);\n    q3.x = abs(q3.x);\n    color = mix(vec3(0.803, 0.588, 0.015), color, smoothstep(0., 0.01, d2));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.001, abs(d2)-0.006));\n    \n    // Pillar details Bottom\n    q2 = vec2(abs(q.x), q.y) - vec2(2.90, -0.30);\n    q3 = q2 - vec2(0.1, -1.9);\n    d = distRectangle2D(q3, 0.65, 0.30);\n    if(d <= 0.)\n    {\n        float rep = mod(abs(q3.y+10.18) + cos(q3.x*8.)*0.05, 0.25);\n        color = mix(color, mix(color, mix(color, blue, step(0.128, rep)), step(-0.33, q3.y)), step(q3.y, 0.35));\n    }\n    \n    color = TexCrown(color, (vec2(q2.xy)-vec2(0.1, 2.7)) * 3.0, step(q.x, 0.));\n    \n    // Ribbon\n    // Part 2\n    q2 = vec2(abs(q.x), q.y);\n    q2.y -= 0.90;\n    d3 = -q2.y+(q2.x-4.2)*2.0 + cos(q2.y*4.+0.)*0.15;\n    \n    q4 = q2 - vec2(2.3, -0.85);\n    d4 = q4.y-(q4.x)*3.0 - cos(q4.y*6. - 1.6)*0.3;\n\n    d = max(max(abs(sin(q2.x*(0.51) + 3.55)*0.8-q2.y)-0.18, d3), -(q2.x-2.1));\n    d = max(d, -max(-(q2.x-2.7), (q2.x-3.3)) );\n    d = max(d, d4);\n    color = mix(vec3(1.0, 0., 0.), color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d)-0.01));\n    \n    // Part 4\n    q3 = q2 - vec2(4.0, -0.4);\n    d2 = max(abs(sin(q3.y*2.6 + 2.2)*0.5-q3.x)-0.16, d4);\n    \n    float dCutPart34Left = (sin((q3.y+0.1)*1.48)-(q3.x-0.55));\n    float dCutPart34Right = q3.x-0.03 -q3.y*0.2;\n    d2 = max(d2, dCutPart34Left);\n    d2 = max(d2, dCutPart34Right);\n    d2 = max(d2, q3.y);\n    \n    color = mix(vec3(1.0, 0., 0.), color, smoothstep(0., 0.01, d2));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d2)-0.01));\n    \n    // Part 3\n    q3 = q2 - vec2(3.2, 2.3);\n    d2 = max(abs(sin(q3.y*2.0 + 3.8)*1.6-q3.x)-0.52, d4);\n    d2 = max(d2, max(q3.y+2.5, -q3.y-4.5));\n    d2 = max(d2, d3-1.0);\n    d2 = max(d2, dCutPart34Right);\n    \n    color = mix(vec3(1.0, 0., 0.), color, smoothstep(0., 0.01, d2));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d2)-0.01));\n    \n    // Part 1\n    q2.y -= -1.6;\n    d = max(max(abs(sin(q2.x*(0.5) + 0.3)*1.5-q2.y)-0.22, -(q2.x-2.)), d3);\n    color = mix(vec3(1.0, 0., 0.), color, smoothstep(0., 0.01, d));\n    color = mix(vec3(0.0), color, smoothstep(0., 0.01, abs(d)-0.01));\n    \n    // Crown\n    q2 = q - vec2(0.0, 3.0);\n    color = TexCrown(color, q2, 0.);\n    \n    // Letters\n    q2 = q-vec2(-3.5, 0.65); q2 *= 5.5;\n    q2.y -= sin(q2.x*0.40 - 0.25)*1.0;\n    \n    d = dLetterP2D(q2-vec2(0.8, 0.)*1.45);\n    d = min(d, dLetterL2D((q2-vec2(2.8, 0.))*1.2));\n    d = min(d, dLetterU2D((q2-vec2(4.5, -0.0))*1.2));\n    d = min(d, dLetterS2D((q2-vec2(6.2, -0.0))*1.2));\n        \n    q2 = q-vec2(2.40, 0.64); q2 *= 5.5;\n    q2.y -= cos(q2.x*0.35-0.5)*1.;\n    d = min(d, dLetterU2D(q2*1.2));\n    d = min(d, dLetterL2D((q2-vec2(1.5, 0.))*1.2));\n    d = min(d, dLetterT2D((q2-vec2(3.25, 0.))*1.2));\n    d = min(d, dLetterR2D((q2-vec2(4.6, 0.))*1.2));\n    d = min(d, dLetterA2D((q2-vec2(6.5, 0.))*1.4));\n    \n    color = mix(yellowBright, color, smoothstep(0., 0.01, d));\n\n    return color;\n}\n\nvec3 Sky(vec3 dir)\n{\n    dir.y += sin(dir.x*12. +t*2.)*0.01 * (1.-smoothstep(0., 1., dir.y));\n    \n    // terrain\n    vec3 col = mix(vec3(0.015, 0.545, 0.521)*0.1, vec3(0.305, 0.713, 0.913), 1.-exp(dir.y*2.5));\n    \n    // Sky\n    vec3 colSky = mix(vec3(0.921, 0.831, 0.321), vec3(0.321, 0.454, 0.921), pow(dir.y, 1./1.));\n    colSky = mix(colSky, vec3(0.321, 0.027, 0.854), smoothstep(0.0, 1., pow(dir.y, 1.5/1.)));\n    col = mix(col, colSky, step(0., dir.y));\n\n    // Skyline\n    col = mix(vec3(0.921, 0.509, 0.321), col, smoothstep(0., 0.50, pow(abs(dir.y), 0.4)) );\n    col = mix(vec3(0.921, 0.611, 0.321), col, smoothstep(0., 0.50, pow(abs(dir.y), 0.3)) );\n    \n    // Sun\n    float sunFactor = max(0., dot(dir, normalize(vec3(0.75, 0.5, 1.))));\n    vec3 sunCol = vec3(0.921, 0.878, 0.321);\n    col = mix(col, col+sunCol, pow(sunFactor, 350.));\n    col = mix(col, col+sunCol*0.5, pow(sunFactor, 150.));\n    col = mix(col, col+sunCol*0.5, pow(sunFactor, 50.));\n    \n    vec2 skyPos = dir.xy * (50./dir.z);\n    vec3 rayCol0 = vec3(0.921, 0.741, 0.321);\n    vec3 rayCol1 = vec3(0.909, 0.231, 0.701);\n    vec3 rayCol2 = vec3(0.909, 0.345, 0.231);\n    skyPos = skyPos-vec2(35., 25.);\n    \n    float at = atan(skyPos.y, skyPos.x);\n    \n    float d = 0.5+0.5*sin(at*6. + t*3.); \n    col = mix(col, col+sunCol*0.07, d);\n    \n    d = 0.5+0.5*sin(0.75+at*12. + 0.3 - t*2.);\n    col = mix(col, col+rayCol0*0.08, d);\n    \n    d = 0.5+0.5*sin(0.50+at*18. + 0.5 + t*1.);\n    col = mix(col, col+rayCol1*0.09, d);\n    \n    d = 0.5+0.5*sin(0.25+at*24. + 0.7 - t*0.5);\n    col = mix(col, col+rayCol2*0.10, d);\n    \n    return col;\n}\n\n// mat (specPow, specInt, reflection, translucency)\nvec3 Texturize(vec3 p, vec2 uv, vec3 rd, float id, vec3 color, inout vec4 mat)\n{\n    if(id < 0.5){}\n    else if(id < 1.5)\n    {\n        color = vec3(0.8, 0.8, 1.); mat.xyzw = vec4(100.0, 0.5, 0.5, 0.15);\n    }\n    else if(id < 2.5)\n    {\n        color = TexFlag(p, uv); mat.xyzw = vec4(5.0, 0.2, 0.5, 0.35);\n    }\n    \n    return color;\n}\n\nvec3 Shade(vec3 p, vec3 color, vec4 mat, vec3 n, vec3 view, vec3 lpos, vec3 lcolor)\n{\n    vec3 l = normalize(lpos - p);\n    \n    float diff = max(dot(n, l), 0.0);\n    \n    vec3 halfv = normalize((l+view)*0.5);\n    float spec = pow(max(dot(n, halfv), 0.0), mat.x) * mat.y;\n    \n    float fresnel = dot(view, n);\n    \n    color = (color*(0.02+diff*(0.98)) + vec3(1.)*spec)*lcolor;\n    vec3 refl = -view+2.*dot(view, n)*n;\n    \n    color = mix(color, Sky(refl), pow(max(1.-fresnel, 0.), 0.9)*mat.z);\n    color = mix(color, Sky(-view), pow(max(fresnel, 0.), 0.9)*mat.w);\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    t = iTime*1.0;\n    \n\tvec2 uv = (fragCoord.xy*2.0 -iResolution.xy) / iResolution.yy;\n    \n    vec2 mouse = (iMouse.xy/iResolution.xy) *2.0 -1.0 ;\n    \n    vec3 ro = vec3(0.0, 0.0, 0.0);\n    vec3 tar = vec3(0.16 + min(max(mouse.x, -0.1), 0.1), 0.30 + min(max(mouse.y, -0.1), 0.1), 1.);\n    \n    vec3 z = normalize(tar - ro);\n    vec3 r = normalize(cross(vec3(0., 1., 0.), z));\n    vec3 u = normalize(cross(z, r));\n    \n    float scale = tan(28.*3.1415/180.0);\n    vec3 rd = normalize(z + uv.x*scale*r + uv.y*scale*u);\n    \n    vec4 res = Intersect(ro, rd, 0.1, 999.0);\n    vec3 p = ro + rd*res.x;\n    vec4 mat = vec4(0.);\n    vec3 col = Sky(rd);\n    col = Texturize(p, res.zw, rd, res.y, col, mat);\n    if(res.y > 0.)\n    {\n    \tvec3 n = CalcNormal(p);\n        col = Shade(p, col, mat, n, -rd, vec3(moonPos.x, moonPos.y, -moonPos.z), vec3(1.0, 1.0, 1.0)*1.0);\n    }\n    \n    // Vignette\n    col = mix(col, vec3(0.874, 0.870, 0.643), smoothstep(1.25, 2.5, pow(length(uv*vec2(0.7, 1.0)*1.0), 1.8) ) );\n    \n    // Gamma correction\n    col = pow(col, vec3(1./2.2));\n    \n    fragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}