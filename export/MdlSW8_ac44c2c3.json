{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define PI \t\t\t\t\t3.14159265359\n#define EPSILON\t\t\t\t0.01\n#define FOV \t\t\t\t60.0\n#define MAX_STEPS   \t\t300\n#define MAX_OCCLUSION_STEPS 3\n#define MAX_SHADOW_STEPS \t300\n#define MAX_DIST\t\t\t1000.0\n#define MIN_DIST    \t\tEPSILON\n#define MIN_STEP\t\t\tEPSILON\n#define MAX_STEP\t\t\t10.0\n\n#define THETA\t\t\t\t1.5\n#define ATTENUATION\t\t\t0.125\n#define DIFFUSE\t\t\t\t1.0\n#define SPECULAR\t\t\t8.0\n#define AMBIENT\t\t\t\t0.0125\n#define OCCLUSION\t\t\t1.0\n#define SHADOW\t\t\t\t1.0\n#define GLOSS\t\t\t\t25.0\n#define SHADOW\t\t\t\t1.0\n#define SHADOW_SOFT\t\t \t16.0\n#define CONE_FACTOR\t\t\t64.0\n\nmat3 rotate_x (float fi) {\n\tfloat cfi = cos (fi);\n\tfloat sfi = sin (fi);\n\treturn mat3 (\n\t\tvec3 (1.0, 0.0, 0.0),\n\t\tvec3 (0.0, cfi, -sfi),\n\t\tvec3 (0.0, sfi, cfi)\n\t);\n}\n\nmat3 rotate_y (float fi) {\n\tfloat cfi = cos (fi);\n\tfloat sfi = sin (fi);\n\treturn mat3 (\n\t\tvec3 (cfi, 0.0, sfi),\n\t\tvec3 (0.0, 1.0, 0.0),\n\t\tvec3 (-sfi, 0.0, cfi)\n\t);\n}\n\nmat3 rotate_z (float fi) {\n\tfloat cfi = cos (fi);\n\tfloat sfi = sin (fi);\n\treturn mat3 (\n\t\tvec3 (cfi, -sfi, 0.0),\n\t\tvec3 (sfi, cfi, 0.0),\n\t\tvec3 (0.0, 0.0, 1.0)\n\t);\n}\n\nvec4 fTexture3D (sampler2D t, vec3 pt, vec3 pn, float scale) {\n\treturn \n\t\ttexture  (t, pt.yz*scale)*abs (pn.x) +\n\t\ttexture  (t, pt.xz*scale)*abs (pn.y) +\n\t\ttexture  (t, pt.xy*scale)*abs (pn.z);\n}\n\nstruct Sphere {\n\tvec3 o;\n\tfloat r;\t\n};\n\nstruct Plane {\n\tvec3 n;\n\tfloat d;\t\n};\n\t\nstruct Box {\n\tvec3 o;\n\tvec3 b;\n};\n\nfloat fGetSDistance (vec3 p, Sphere s) {\n\tvec3 v = p - s.o;\n\tfloat d = length (v) - s.r;\n\tif (d <= EPSILON) {\n\t\td += fTexture3D (iChannel0, v, normalize (v), 0.25).r * 0.04; \n\t}\n\treturn d;\n}\n\nfloat fGetPDistance (vec3 p, Plane s) {\t\n\tfloat d = dot (s.n,p) + s.d;\n\tif (d <= EPSILON) {\n\t\td += fTexture3D (iChannel0, p, s.n, 0.25).r * 0.04; \n\t}\n\treturn d;\n}\n\nfloat fGetBDistance (vec3 p, Box box) {\t\n\tp.y = mod (p.y, box.b.y); \n\tvec3 p0 = p - box.o;\n \tvec3 d = abs(p0) - box.b;\n\tfloat d0 = min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n\tif (d0 <= EPSILON) {\n\t\td0 += fTexture3D (iChannel0, p, normalize (p0), 0.25).r * 0.04; \n\t}\n  \treturn d0;\t\n}\n\nfloat fGetDistanceScene (vec3 p) {\n\treturn \n\t\tmin (\n\t\tfGetSDistance (p, Sphere(vec3 (0.0, 1.0, 0.0), 1.0)),\n\t\tmin (\n\t\tfGetPDistance (p, Plane(vec3 (0.0, 1.0, 0.0), -0.0)),\n\t\tfGetBDistance (p, Box(vec3 (1.0, 1.0, 2.0), vec3 (1.0, 3.0, 1.0)))));\n}\n\n\nvec3 fGetNormal (vec3 p) {\n\tfloat d = fGetDistanceScene (p);\n\treturn normalize (vec3 (\n\t\tfGetDistanceScene (p - vec3 (EPSILON, 0.0, 0.0)) - d,\n\t\tfGetDistanceScene (p - vec3 (0.0, EPSILON, 0.0)) - d,\n\t\tfGetDistanceScene (p - vec3 (0.0, 0.0, EPSILON)) - d));\n}\n\nfloat fRayMarch (vec3 ro, vec3 rd) {\n\tfloat d = 0.0;\n\tfloat h = 0.0;\n\tfor (int i = 0;i < MAX_STEPS;++i){ \n\t\th = fGetDistanceScene (ro + rd*d);\n\t\td += clamp (h, MIN_STEP, MAX_STEP);\n\t\tif (h < EPSILON || d >= MAX_DIST) \n\t\t\treturn d;\n\t}\n\treturn MAX_DIST;\n}\n\nfloat fShadowMarch (vec3 org, vec3 dir, float k){\n    float res = 1.0;\n\tfloat t = EPSILON*32.0;\n    for (int i =0; i < MAX_SHADOW_STEPS; ++i){\n        float h = fGetDistanceScene (org + dir*t);\n        if (h <= EPSILON)\n            return 0.0;\n        res = min (res, k*h/t);\n        t += h;//clamp (h, MIN_STEP, MAX_STEP);\n\t\tif (t >= MAX_DIST)\n\t\t\treturn res;\n    }\n    return res;\n}\n\n\nfloat fSampleOcclusion (vec3 pnt, vec3 nml) {\n\tfloat ao = 0.0;\n\tfloat di = 1.0 / float (MAX_OCCLUSION_STEPS);\n\tfor (float i = 0.0; i < float(MAX_OCCLUSION_STEPS); i += 1.0) {\n\t\tfloat d = i * di;\n\t\tao += (1.0/exp2 (i))*(d - fGetDistanceScene (pnt - nml*d));\n\t}\n\treturn 1.0 - OCCLUSION * ao;\n}\n\n\nvec4 fComputeLighting (vec3 p, vec3 n, vec3 rd, vec3 lo, vec3 pd) {\n\tvec3 lv = -(lo - p);\n\tvec3 ld = normalize (lv);\n\tvec3 ref = reflect (-ld, n);\n\tfloat pindiff   = pow (1.05*max (0.0, dot (ld, pd)),CONE_FACTOR);\n\tfloat diffuse \t= DIFFUSE * max (0.0, dot (ld, n));\n\tfloat specular \t= SPECULAR * (diffuse > 0.0 ? pow (max (0.0, dot (rd, ref)),GLOSS) : 0.0);\n\tfloat attenuate = 1.0/(1.0 + ATTENUATION*pow (length (lv),2.0));\n\tfloat ambient  \t= AMBIENT ;\n\tfloat shadow  \t= (1.0 - SHADOW) + SHADOW*fShadowMarch (p, -ld, SHADOW_SOFT);\n\tfloat occlusion = (1.0 - OCCLUSION) + OCCLUSION*fSampleOcclusion (p, n);\n\treturn vec4 (1.0)*((diffuse + specular)*attenuate*shadow*pindiff + ambient*occlusion);\n}\n\nvec4 fMaterial (vec3 p, vec3 n) {\n\treturn fTexture3D (iChannel0, p, n, 0.25);\t\t\n}\n\nvec4 fComputePixel (vec2 uv, float time) {\n\tuv *= tan (radians (FOV)/2.0) ;\n\tmat3 rcamy = rotate_y (iTime*PI/16.0);\t\t\n\tmat3 rlity = rotate_y (sin (iTime*PI/10.0)*PI);\n\t\n\tvec3 up = vec3 (0.0, 1.0, 0.0) ;\n\tvec3 fw = vec3 (0.0, 0.0, 1.0) * rcamy;\n\tvec3 rt = cross (fw, up);\n\t\n\tvec3 ro = vec3 (0.0, 2.0, -10.0) * rcamy ;\n\tvec3 rd = normalize (fw + up*uv.y + rt*uv.x);\n\t\n\tfloat d = fRayMarch (ro, rd);\n\tvec3 pt = ro + rd*d;\n\tvec3 pn = fGetNormal (pt);\n\t\n\tvec3 lo = vec3 (0.0, 5.0, 5.0) * rlity;\n\tvec3 pd = -normalize (vec3 (0.0, 0.3, 1.0)) * rlity;\n\t\n\tvec4 cl = mix (fMaterial (pt, pn) * fComputeLighting (pt, pn, rd, lo, pd), vec4 (0.0), smoothstep (0.0, 30.0, d));\n\treturn cl ;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n\tfragColor = pow (fComputePixel (\n\t\t(2.0 * fragCoord.xy - iResolution.xy) / \n\t\tmin (iResolution.x, iResolution.y),\n\t\tiTime\n\t), vec4 (1.0/2.2)) ;\n\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdlSW8","date":"1400355733","viewed":241,"name":"Pin light simulation","username":"Coldberg","description":"pin light","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pinlight"],"hasliked":0,"parentid":"","parentname":""}}