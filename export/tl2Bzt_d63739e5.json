{"ver":"0.1","info":{"id":"tl2Bzt","date":"1599652211","viewed":193,"name":"green waves","username":"psrar","description":" sangwhan's modified work","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["wave","playstation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 C = vec3(0.0, 0.2, 0.25);\nfloat GWM = 1.75;\nfloat TM = 0.25;\n\nfloat getAmp(float frequency) {\n    return texture(iChannel0, vec2(frequency / 512.0, 0)).x;\n}\n\nfloat getWeight(float f) {\n    return (getAmp(f - 2.0) + getAmp(f - 1.0) + \\\n            getAmp(f + 2.0) + getAmp(f + 1.0) + \\\n            getAmp(f)) / 5.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec3 backdrop = mix(C, C, C);\n\tvec2 uvTrue = fragCoord.xy / iResolution.xy;\n    vec2 uv = 2.0 * uvTrue - 1.0 - sin(iTime * 0.2) * 0.5;\n    \n\tfloat li;\n    float gw;\n    float ts;\n    vec3 color = vec3(0.0);\n    \n\tfor(float i = 0.0; i < 5.0; i++) {\n\t\tuv.y += (0.2 * sin(uv.x + i / 8.0 - iTime * 0.2));\n        float Y = uv.y + getWeight(pow(i, 1.0) * 20.0) * (texture(iChannel0, vec2(uvTrue.x, 1)).x - 0.5);\n        li = 0.2 + pow(1.0 * abs(mod(uvTrue.x + i / 1.1 + iTime,2.0) - 1.0), 2.0);\n\t\tgw = abs(li / (160.0 * Y));\n        \n        ts = gw * (GWM + sin(iTime * TM));\n\t\tcolor += vec3(ts, ts, ts);\n\t}\t\n\n\tfragColor = vec4(color + backdrop, 0.5);\n}","name":"Image","description":"","type":"image"}]}