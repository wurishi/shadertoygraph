{"ver":"0.1","info":{"id":"tdj3Rh","date":"1548184328","viewed":104,"name":"Untitled 2","username":"valler","description":"untitled","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["untitled"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/XlXcW4\n\n  const uint k = 1103515245U;  // GLIB C\n//const uint k = 134775813U;   // Delphi and Turbo Pascal\n//const uint k = 20170906U;    // Today's date (use three days ago's dateif you want a prime)\n//const uint k = 1664525U;     // Numerical Recipes\nvec3 hash( uvec3 x )\n{\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n}\n\nvec3 f (vec2 uv)\n{\n    vec2 ab = uv;\n\tfloat t = 2.24;\n    vec2 st = smoothstep(0.,5.,abs(fract(t)-.5))+fract(t+3.*uv+sin(4.*uv.yx));\n    float c = cos(t);\n    float s = sin(t);\n    mat2 m = mat2(c,-s,s,c);\n    for (int i = 0; i<3; ++i) uv = m*vec2(sin(2.*uv.x),cos(1.5*uv.y));\n    uv = uv*st*st;\n    vec3 n = normalize(vec3(uv,.05));\n    vec3 l = normalize(vec3(0.1*sin(t),0.1*cos(t),1));\n    float d = max(0.,dot(n,l));\n    vec3 r = hash(uvec3(d*15.,d*15.,112));\n    ab = fract(5.*ab)-vec2(.5);\n    c = r.x; s = r.y;\n    ab *= mat2(c,s,-s,c);\n    ab = 1.-step(.25,vec2(distance(vec2(0), ab)));\n    return ab.x*r;\n}\n\nvoid mainImage( out vec4 fragColor, vec2 fragCoord )\n{\n   \tvec2 a = (fragCoord-.5*iResolution.xy)/iResolution.x;\n    vec2 d = vec2(1.5/iResolution.x,0);\n    vec3 c = (f(a) + f(a+d) + f(a+d.yx) + f(a-d) + f(a-d.yx) +\n             f(a+d.xx) + f(a+d.yy) + f(a-d.xx) + f(a-d.yy))/9.;\n\n    fragColor = vec4(sqrt(smoothstep(0.,1.,c)),1);\n}","name":"Image","description":"","type":"image"}]}