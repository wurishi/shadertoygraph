{"ver":"0.1","info":{"id":"7tGyzc","date":"1662374936","viewed":230,"name":"Blur Music visualisation","username":"zxdrtyhn","description":"modified from https://www.shadertoy.com/view/ldf3W8","likes":5,"published":1,"flags":64,"usePreview":0,"tags":["spectrum","music","audio","visualisation"],"hasliked":0,"parentid":"ldX3D8","parentname":"cloned: rainbow spectrum"},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Mss3z7","filepath":"https://soundcloud.com/paperfunk-recordings/encode-aught-item-remix","previewfilepath":"https://soundcloud.com/paperfunk-recordings/encode-aught-item-remix","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"float bump(float x) {\n\treturn abs(x) > 1.0 ? 0.0 : 1.0 - x * x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 UV = (fragCoord.xy / iResolution.xy);\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n\tvec4 back = texture(iChannel1, uv);\n    \n\tfloat c = 3.0;\n\tvec3 color = texture(iChannel1, uv).rgb;\n\tcolor.x = bump(c * (uv.x - 0.75));\n\tcolor.y = bump(c * (uv.x - 0.5));\n\tcolor.z = bump(c * (uv.x - 0.25));\n\t\n\n\tfloat line = abs(0.01 / abs(0.5-uv.y) );\n\tuv.y = abs( uv.y - 0.5 );\n\t\n\tvec4 soundWave =  texture( iChannel0, vec2(abs(0.5-uv.x)+0.005, uv.y) ).rrrr;\n\tcolor *= line * (1.0 - 2.0 * abs( 0.5 - uv.xxx ) + pow( soundWave.y, 10.0 ) * 30.0 );\n\t\n    \n    float Pi = 6.28318530718; // Pi*2\n    // GAUSSIAN BLUR SETTINGS {{{\n    float Directions = 16.0; // BLUR DIRECTIONS (Default 16.0 - More is better but slower)\n    float Quality = 4.0; // BLUR QUALITY (Default 4.0 - More is better but slower)\n    float Size = 8.0; // BLUR SIZE (Radius)\n    // GAUSSIAN BLUR SETTINGS }}}\n   \n    vec2 Radius = Size/iResolution.xy;\n    \n   \n    vec4 Color = vec4(color, 0.0);\n    //color += back.rgb * 0.5; \n    \n    for( float d=0.0; d<Pi; d+=Pi/Directions)\n    {\n\t\tfor(float i=1.0/Quality; i<=1.0; i+=1.0/Quality)\n        {\n\t\t\tback += texture( iChannel1, UV+vec2(cos(d),sin(d))*Radius*i);\t\t\n        }\n    }\n    back /= Quality * Directions;\n    \n\tfragColor = back + Color;\n}","name":"Image","description":"","type":"image"}]}