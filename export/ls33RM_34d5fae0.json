{"ver":"0.1","info":{"id":"ls33RM","date":"1448553675","viewed":1135,"name":"FastLightning","username":"jt","description":"A fast function generating a branching lightning pattern.\nSee [url]https://www.shadertoy.com/view/Mst3Rr[/url] for use in a \"thunderstorm\".","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["lightning","binarytree","fastbranchingfunction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Lightning (based on a binary tree) written 2015-11-18 by Jakob Thomsen\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// Lighting based on binary-tree https://www.shadertoy.com/view/lljXW3\n/*\nvec2 BinaryTreeSubDiv2(vec2 v)\n{\n    v *= exp2(ceil(-log2(v.y)));\n    v.x *= .5;\n    return fract(v);\n}\n*/\nvec2 BinaryTreeSubDiv2(vec2 v)\n{\n    v.x *= .5;\n    return fract(v * exp2(ceil(-log2(v.y))));\n}\n\n// iq's hash function from https://www.shadertoy.com/view/MslGD8\n//vec2 hash( vec2 p ) { p=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))); return fract(sin(p)*18.5453); }\n// adjusted for single input\n//vec2 hash(float q) { vec2 p = vec2(q); p=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))); return fract(sin(p)*18.5453); }\n// XXX should be equivalent to original but produces different results XXX\nvec2 hash(float p) // simplified for single input\n{\n    return fract(sin(p * vec2(438.8, 452.8)) * 18.5453);\n}\n\nvoid mainImage( out vec4 o, in vec2 U )\n{\n    U /= iResolution.xy;\n    //U.x *= iResolution.x / iResolution.y;\n    vec4 rnd0 = texture(iChannel1, U + iTime * .1);\n    vec4 rnd1 = texture(iChannel1, .1 * U + iTime * .1);\n    vec2 V = BinaryTreeSubDiv2(U * vec2(1., .75) + .1 * vec2(2. * rnd1.x - 1., 0.));\n    //float trigger = clamp(10.*pow(hash(iTime).x, 5.)-9.,0.,1.);\n    float trigger = 10.*pow(hash(iTime).x, 5.)-9.;\n    trigger = max(trigger, 1.0 - smoothstep(0.0, 0.125, abs(iTime - 10.))); // force lightning for icon at 10s\n    //o = vec4(4. * trigger * clamp(rnd1.y*(1. - smoothstep(0., .15 * rnd0.x, abs(4. * abs(V.x -.5) - (1. - V.y)))), 0., 1.));\n    o = vec4(4. * trigger * (rnd1.y*(1. - smoothstep(0., .15 * rnd0.x, abs(4. * abs(V.x -.5) - (1. - V.y))))));\n}\n","name":"","description":"","type":"image"}]}