{"ver":"0.1","info":{"id":"MslfW7","date":"1611009353","viewed":87,"name":"Breathing Canvas ðŸ”Š","username":"blurryroots","description":"breath in, breath out","likes":0,"published":1,"flags":8,"usePreview":0,"tags":["breating"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FREQ 0.6\n\n// === icon message: \"sound in\". link: https://www.shadertoy.com/view/MtyXRW\n\nfloat message(vec2 uv) { // to alter in the icon\n    uv-=vec2(1.,10.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456/bit; // 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112/bit; // 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872/bit; // 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i/2));\n}\n\n// https://stackoverflow.com/a/4275343/949561\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat octaves(vec2 p, float k) {\n    float a = 0.5;\n    float b = a / 2.0;\n    float c = b / 2.0;\n    float d = c / 2.0;\n    \n    float value = 0.0;\n    value += a * rand(p * k); p *= 2.01;\n    value += b * rand(p * k); p *= 2.02;\n    value += c * rand(p * k); p *= 2.01;\n    value += d * rand(p * k); p *= 2.04;\n    value /= (a + b + c + d);\n    \n    return value;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    if (iResolution.y<2000.) {float c=message(fragCoord.xy/8.);if(c>=0.){fragColor=vec4(c);return;}}  \n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    //vec2 p = vec2(uv.x * iResolution.x / iResolution.y, uv.y);\n    vec2 p = uv;\n    //vec2 q = 2.0 * p - 1.0;\n    vec2 q = p - vec2(0.5, 0.5);\n    \n    float phi = ((1.0 + sqrt(5.0)) / 2.0) - 1.0;    \n    float noise = octaves(q * iTime, 5.0);\n    \n    vec4 baseColor;\n    //if(length(q) < 0.1) {\n    //\tbaseColor = vec4(1.0, phi, 1.0 - phi, 1.0) + abs(q.x / 0.2) * abs(cos(FREQ * iTime));\n    //}\n    //else {\n        baseColor = vec4(0.1) + abs(q.x) * abs(cos(FREQ * iTime));\n        baseColor *= noise;\n    //}\n    \n    fragColor = baseColor;\n    \n    // letterbox\n    fragColor *= (1.0 - smoothstep(0.38, 0.38001, length(q.y)));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define FREQ 0.6\n\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat octaves(vec2 p, float k) {\n    float a = 0.5;\n    float b = a / 2.0;\n    float c = b / 2.0;\n    float d = c / 2.0;\n    \n    float value = 0.0;\n    value += a * rand(p * k); p *= 2.01;\n    value += b * rand(p * k); p *= 2.02;\n    value += c * rand(p * k); p *= 2.01;\n    value += d * rand(p * k); p *= 2.04;\n    value /= (a + b + c + d);\n    \n    return value;\n}\n\nvec2 mainSound( in int samp, float time ) {\n    float noise = octaves(vec2(cos (time)), 10.0);\n    return vec2((1.0 - noise) * abs(sin(FREQ*time)) + (noise * abs(cos(FREQ*time))));\n}","name":"Sound","description":"","type":"sound"}]}