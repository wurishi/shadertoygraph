{"ver":"0.1","info":{"id":"Ds2fDW","date":"1694568682","viewed":46,"name":"Wave(swirl)_2D_Demonstrate","username":"willis","description":"Wave(swirl)_2D_Demonstrate","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nmat2 rot(float a){\n    float c = cos(a), s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nvec2 waveDeformer(vec2 p, float ang, float wavelen, float falloff){\n    return vec2(0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n    vec2 mouse = (2.0 * iMouse.xy - iResolution.xy)/ iResolution.y;\n    \n    //default auto mouse move\n    if(iMouse.xy == vec2(0.)){\n        float ract = iResolution.x / iResolution.y;\n        float t = fract(iTime * 0.3) * 2.0 - 1.;\n        mouse = vec2(t * ract, -t);\n    }\n    vec2 p = uv;\n\n    float m = smoothstep(0.005, 0., abs(p.y));\n    float s = length(uv - mouse) - 0.01;\n    m = smoothstep(0.03, 0.02, s);\n    \n    //wave deformer\n    float ang = 1.0 * PI;\n    float wavelen = 1.0;\n    float falloff = 2.0;\n\n    p -= mouse;\n    \n    float dis = length(mouse - uv);\n    \n    dis = smoothstep(wavelen, 0.0, dis);\n    dis = pow(dis, falloff);\n    ang *= dis;\n    p *= rot(ang);\n\n    p += mouse;\n    \n    \n    // draw line\n    //float line = smoothstep(0.005, 0.004, abs(p.y));\n    float line = smoothstep(1.5,0., abs(p.y)/fwidth(p.y));   //Thanks @FabriceNeyret2\n    \n    vec3 col = vec3(0.);\n    col += m * vec3(0.99, 0.1, 0.2);\n    //if(line > 0.) col += vec3(0.01, .98, 0.1); \n    col += line * vec3(0.01, .98, 0.1); \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}