{"ver":"0.1","info":{"id":"7stBWH","date":"1656437847","viewed":62,"name":"saymynamevova","username":"shadersgoodopgl","description":"vavavavaavav","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["vava"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    bool ellipse(vec2 p, vec2 c, float r, float a, float b)\n    {\n        float scaleY = iResolution.y / iResolution.x;\n         float x = (p.x - c.x),\n               y = (p.y - c.y);\n         return  (x * x)/(a * a) +  (y * y)/(b * b) * (scaleY * scaleY) < r*r; \n    }\n\n                    float calculate(vec2 a, vec2 b, vec2 p)\n                    {\n                        return (p.x - a.x) * (b.y - a.y) - (p.y-a.y) * (b.x - a.x);\n                    }\n\n                bool isOnOneSide(vec2 a, vec2 b, vec2 c, vec2 p) \n                {\n                    return calculate(a, b, c) * calculate(a, b, p) >= 0.;\n                }\n\n        bool triangle(vec2 a, vec2 b, vec2 c, vec2 p)\n        {\n            return  isOnOneSide(a, b, c, p) && isOnOneSide(b, c, a, p) && isOnOneSide(c, a, b, p);\n        }\n    \n    bool rectangle(vec2 a, vec2 b, vec2 c, vec2 d, vec2 p)\n    {\n        return triangle(a, b, c, p) || triangle(a, b, d, p) || triangle(a, c, d, p) || triangle(b, c, d, p);\n    }\n    struct Ellipse \n    {\n      vec2 center;\n      float radius;\n      vec3 color;\n      float a;\n      float b;\n    };\n    struct Triangle\n    {\n      vec2 a;\n      vec2 b;\n      vec2 c;\n      vec3 color;\n    };\n    struct Rectangle\n    {\n      vec2 a;\n      vec2 b;\n      vec2 c;\n      vec2 d;\n      vec3 color;\n    };\n      Rectangle re[] = Rectangle[] \n      (\n          // В\n          Rectangle(vec2(-0.47, 0.4), vec2(-.47, .2), vec2(-0.46, 0.4), vec2(-0.46, .2), vec3(0., 0., 0.)),\n          // Л\n          Rectangle(vec2(-0.39, 0.4), vec2(-.42, .2), vec2(-0.4, 0.4), vec2(-0.41, .2), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.39, 0.4), vec2(-.38, .2), vec2(-0.4, 0.4), vec2(-.37, .2), vec3(0., 0., 0.)),\n          // A\n          Rectangle(vec2(-0.32, 0.4), vec2(-.35, .2), vec2(-0.33, 0.4), vec2(-0.34, .2), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.312, 0.25), vec2(-.312, .24), vec2(-0.34, 0.25), vec2(-0.34, .24), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.32, 0.4), vec2(-.31, .2), vec2(-0.33, 0.4), vec2(-.3, .2), vec3(0., 0., 0.)),\n          // Д\n          Rectangle(vec2(-0.28, 0.25), vec2(-.28, .2), vec2(-0.27, 0.25), vec2(-0.27, .2), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.28, 0.25), vec2(-.28, .24), vec2(-0.2, 0.25), vec2(-0.2, .24), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.21, 0.25), vec2(-.21, .2), vec2(-0.2, 0.25), vec2(-0.2, .2), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.22, 0.25), vec2(-.22, .4), vec2(-0.21, 0.25), vec2(-0.21, .4), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.27, 0.25), vec2(-.27, .4), vec2(-0.26, 0.25), vec2(-0.26, .4), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.27, 0.38), vec2(-.27, .4), vec2(-0.21, 0.38), vec2(-0.21, .4), vec3(0., 0., 0.)),\n          // И\n          Rectangle(vec2(-0.17, 0.4), vec2(-.17, .2), vec2(-0.18, 0.4), vec2(-0.18, .2), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.12, 0.4), vec2(-.12, .36), vec2(-0.17, 0.23), vec2(-0.17, .2), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.11, 0.4), vec2(-.11, .2), vec2(-0.12, 0.4), vec2(-0.12, .2), vec3(0., 0., 0.)),\n          // М\n          Rectangle(vec2(-0.09, 0.4), vec2(-.09, .2), vec2(-0.08, 0.4), vec2(-0.08, .2), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.02, 0.4), vec2(-.02, .36), vec2(-0.05, 0.3), vec2(-0.05, .26), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.08, 0.4), vec2(-.08, .36), vec2(-0.05, 0.3), vec2(-0.05, .26), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.01, 0.4), vec2(-.01, .2), vec2(-0.02, 0.4), vec2(-0.02, .2), vec3(0., 0., 0.)),\n          // И\n          Rectangle(vec2(0.01, 0.4), vec2(0.01, .2), vec2(0.02, 0.4), vec2(0.02, .2), vec3(0., 0., 0.)),\n          Rectangle(vec2(0.07, 0.4), vec2(0.07, .36), vec2(0.02, 0.23), vec2(0.02, .2), vec3(0., 0., 0.)),\n          Rectangle(vec2(0.08, 0.4), vec2(0.08, .2), vec2(0.07, 0.4), vec2(0.07, .2), vec3(0., 0., 0.)),\n          // Р\n          Rectangle(vec2(0.1, 0.4), vec2(0.1, .2), vec2(0.11, 0.4), vec2(0.11, .2), vec3(0., 0., 0.)),\n          // Ш\n          Rectangle(vec2(-0.47, 0.1), vec2(-.47, -.1), vec2(-0.46, -0.1), vec2(-0.46, .1), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.44, 0.1), vec2(-.44, -.1), vec2(-0.43, -0.1), vec2(-0.43, .1), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.41, 0.1), vec2(-.41, -.1), vec2(-0.4, -0.1), vec2(-0.4, .1), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.4, -0.085), vec2(-.4, -.1), vec2(-0.46, -0.1), vec2(-0.46, -0.085), vec3(0., 0., 0.)),\n          // И\n          Rectangle(vec2(-0.38, 0.1), vec2(-.38, -.1), vec2(-0.37, -0.1), vec2(-0.37, .1), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.37, -.07), vec2(-.37, -.1), vec2(-0.32, 0.07), vec2(-0.32, .1), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.32, .1), vec2(-0.32, -0.1), vec2(-0.31, -0.1), vec2(-0.31, .1), vec3(0., 0., 0.)),\n          // М\n          Rectangle(vec2(-0.29, 0.1), vec2(-.28, -.1), vec2(-0.29, -0.1), vec2(-0.28, .1), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.21, 0.1), vec2(-.21, .07), vec2(-0.245, 0.02), vec2(-0.245, -.01), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.28, 0.1), vec2(-.28, .07), vec2(-0.245, 0.02), vec2(-0.245, -.01), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.21, 0.1), vec2(-.21, -.1), vec2(-0.2, -0.1), vec2(-0.2, .1), vec3(0., 0., 0.)),\n          // Ч\n          Rectangle(vec2(-0.17, 0.1), vec2(-.17, .0), vec2(-0.18, 0.1), vec2(-0.18, .0), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.17, 0.02), vec2(-.17, .0), vec2(-0.12, 0.02), vec2(-0.12, .0), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.11, 0.1), vec2(-.11, -.1), vec2(-0.12, -0.1), vec2(-0.12, .1), vec3(0., 0., 0.)),\n          // Е\n          Rectangle(vec2(-0.09, 0.1), vec2(-.09, -.1), vec2(-0.08, -0.1), vec2(-0.08, .1), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.01, 0.1), vec2(-.01, 0.08), vec2(-0.09, 0.08), vec2(-0.09, .1), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.01, 0.0), vec2(-.01, 0.02), vec2(-0.09, 0.02), vec2(-0.09, .0), vec3(0., 0., 0.)),\n          Rectangle(vec2(-0.01, -.08), vec2(-.01, -0.1), vec2(-0.09, -0.1), vec2(-0.09, -.08), vec3(0., 0., 0.)),\n          // Н\n          Rectangle(vec2(0.01, 0.1), vec2(0.01, -.1), vec2(0.02, -0.1), vec2(0.02, .1), vec3(0., 0., 0.)),\n          Rectangle(vec2(0.01, 0.0), vec2(.01, 0.02), vec2(0.08, 0.02), vec2(0.08, .0), vec3(0., 0., 0.)),\n          Rectangle(vec2(0.08, 0.1), vec2(0.08, -.1), vec2(0.07, -0.1), vec2(0.07, .1), vec3(0., 0., 0.)),\n          // К\n          Rectangle(vec2(0.1, 0.1), vec2(0.1, -.1), vec2(0.11, -0.1), vec2(0.11, .1), vec3(0., 0., 0.)),\n          Rectangle(vec2(0.11, 0.0), vec2(.11, 0.02), vec2(0.15, 0.1), vec2(0.14, .1), vec3(0., 0., 0.)),\n          Rectangle(vec2(0.11, 0.0), vec2(.11, 0.02), vec2(0.15, -0.1), vec2(0.14, -.1), vec3(0., 0., 0.))\n          \n      );\n      Ellipse ep[] = Ellipse[]\n      (\n          Ellipse(vec2(-0.47, 0.35), 0.03, vec3(0.0, 0.0, 0.0), 1.0, 1.0),\n          Ellipse(vec2(-0.455, 0.35), 0.01, vec3(1.0, 1.0, 1.0), 0.5, 1.2),\n          Ellipse(vec2(-0.47, 0.25), 0.03, vec3(0.0, 0.0, 0.0), 1.0, 1.0),\n          Ellipse(vec2(-0.455, 0.25), 0.01, vec3(1.0, 1.0, 1.0), 0.5, 1.2),\n          Ellipse(vec2(0.11, 0.35), 0.03, vec3(0.0, 0.0, 0.0), 1.0, 1.0),\n          Ellipse(vec2(0.12, 0.35), 0.02, vec3(1.0, 1.0, 1.0), 0.5, 0.7),\n          Ellipse(vec2(0.2, 0.), 0.06, vec3(.0, .0, .0), 0.5, 1.0),\n          Ellipse(vec2(0.2, 0.), 0.04, vec3(1.0, 1.0, 1.0), 0.5, 1.0)\n      );\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 crd = fragCoord/iResolution.xy;\n     crd = crd - vec2(0.5);\n      float x = crd.x;\n      float y = crd.y;\n    fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n      for(int i = 0; i < re.length(); i++)\n          if(rectangle(re[i].a, re[i].b, re[i].c, re[i].d, vec2(x,y)))\n              fragColor = vec4(re[i].color, 1.0);\n      for(int i = 0; i < ep.length(); i++)     \n          if(ellipse(vec2(x,y), ep[i].center, ep[i].radius, ep[i].a, ep[i].b))\n              fragColor = vec4(ep[i].color, 1.0);\n      if(rectangle(vec2(-0.47, 0.6), vec2(-.47, .1), vec2(-0.5, 0.6), vec2(-0.5, .1), vec2(x,y)))\n          fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n      if(rectangle(vec2(0.1, 0.4), vec2(0.1, .2), vec2(0.08, 0.4), vec2(0.08, .2), vec2(x,y)))\n          fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}