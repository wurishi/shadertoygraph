{"ver":"0.1","info":{"id":"4tBGzc","date":"1430754624","viewed":282,"name":"JUST US TIMER","username":"yasuo","description":"Inspiration of KITH and TSP.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["kith"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\t\t#define NEAR 0.1\n\t\t#define FAR 100.\n\t\t#define ITER 128\n\t\t#define pi 3.14159265\n\n\t\t#define CHAR_DOT 10\n\t\t#define CHAR_J  1\n\t\t#define CHAR_U  2\n\t\t#define CHAR_S  3\n\t\t#define CHAR_T  4\n\t\t#define CHAR_K  5\n\t\t#define CHAR_I  6\n\t\t#define CHAR_H  7\n\n\t\tfloat getHrs(){return mod(floor(iTime/3600.),24.);}\n\t\tfloat getMns(){return mod(floor(iTime/60.),60.);}\n\t\tfloat getScs(){return mod(floor(iTime),60.);}\n\n\t\tfloat sdBox( vec3 p, vec3 b )\n\t\t{\n\t\t\tvec3 d = abs(p) - b;\n\t\t\treturn min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n\t\t}\n\n\t\tvec4 mapCube( vec3 pos, vec3 size, vec3 cl)\n\t\t{\n\t\t\tfloat dist = sdBox(pos , size);\n\t\t\treturn vec4(cl, dist );\n\t\t}\n\n\t\tvec4 combine(vec4 val1, vec4 val2 )\n\t\t{\n\t\t\tif ( val1.w < val2.w ) return val1;\n\t\t\treturn val2;\n\t\t}\n\n\t\tmat4 matRotateY(float rad)\n\t\t{\n\t\t\treturn mat4( cos(rad),0,-sin(rad),0,\n\t\t\t\t\t\t 0,       1,        0,0,\n\t\t\t\t\t\t sin(rad),0, cos(rad),0,\n\t\t\t\t\t\t 0,       0,        0,1);\n\t\t}\n\n\t\tvec4 renderDot(vec4 pos, int num, vec3 translate, float size)\n\t\t{\n\t\t\tvec4 val1 = mapCube(pos.xyz + vec3( 0.0, -size*2.0, 0 )+translate, vec3(size,size,size), vec3( 3, 3, 3));\n\t\t\tvec4 val2 = mapCube(pos.xyz + vec3( 0.0, size*2.0, 0 )+translate, vec3(size,size,size), vec3( 3, 3, 3));\n\t\t\treturn combine( val1, val2);\n\t\t}\n\n\t\tvec4 renderJ(vec4 pos, int num, vec3 translate, float size)\n\t\t{\n\t\t\tvec4 val1 = mapCube(pos.xyz + vec3( -size*2.0, 0, 0 )+translate, vec3(size,size*5.0,size), vec3( 3, 3, 3));\n\t\t\tvec4 val2 = mapCube(pos.xyz + vec3( 0, size*4.0, 0 )+translate, vec3(size,size,size), vec3( 3, 3, 3));\n\t\t\tvec4 val3 = mapCube(pos.xyz + vec3( size*2.0, 3.0, 0 )+translate, vec3(size,size*2.0,size), vec3( 3, 3, 3));\n\t\t\tvec4 val4 = combine ( val1, val2 );\n\t\t\treturn combine( val3, val4);\n\t\t}\n\n\t\tvec4 renderU(vec4 pos, int num, vec3 translate, float size)\n\t\t{\n\t\t\tvec4 val1 = mapCube(pos.xyz + vec3( size*2.0, 0, 0 )+translate, vec3(size,size*5.0,size), vec3( 3, 3, 3));\n\t\t\tvec4 val2 = mapCube(pos.xyz + vec3( -size*2.0, 0, 0 )+translate, vec3(size,size*5.0,size), vec3( 3, 3, 3));\n\t\t\tvec4 val3 = mapCube(pos.xyz + vec3( 0, size*4.0, 0 )+translate, vec3(size,size,size), vec3( 3, 3, 3));\n\t\t\t\n\t\t\tvec4 val4 = combine ( val1, val2 );\n\t\t\t\n\t\t\treturn combine( val3, val4);\n\t\t}\n\n\t\tvec4 renderS(vec4 pos, int num, vec3 translate, float size)\n\t\t{\n\t\t\tvec4 val1 = mapCube(pos.xyz + vec3( -size*2.0, 2.0, 0 )+translate, vec3(size,size,size), vec3( 3, 3, 3));\n\t\t\tvec4 val2 = mapCube(pos.xyz + vec3( size*2.0, -2.0, 0 )+translate, vec3(size,size,size), vec3( 3, 3, 3));\n\t\t\tvec4 val3 = mapCube(pos.xyz + vec3( 1.0, size*4.0, 0 )+translate, vec3(size*2.0,size,size), vec3( 3, 3, 3));\n\t\t\tvec4 val4 = mapCube(pos.xyz + vec3( -1.0, -size*4.0, 0 )+translate, vec3(size*2.0,size,size), vec3( 3, 3, 3));\n\t\t\tvec4 val5 = mapCube(pos.xyz + vec3( 0, 0, 0 )+translate, vec3(size,size,size), vec3( 3, 3, 3));\n\t\t\tvec4 val6 = combine ( val1, val2 );\n\t\t\tvec4 val7 = combine ( val3, val4 );\n\t\t\tvec4 val8 = combine ( val5, val6 );\n\t\t\treturn combine( val7, val8);\n\t\t}\n\n\t\tvec4 renderT(vec4 pos, int num, vec3 translate, float size)\n\t\t{\n\t\t\tvec4 val1 = mapCube(pos.xyz + vec3( 0, 0, 0 )+translate, vec3(size,size*5.0,size), vec3( 3, 3, 3));\n\t\t\tvec4 val2 = mapCube(pos.xyz + vec3( 0, -size*4.0, 0 )+translate, vec3(size*3.0,size,size), vec3( 3, 3, 3));\n\t\t\treturn combine( val1, val2);\n\t\t}\n\n\t\tvec4 renderK(vec4 pos, int num, vec3 translate, float size)\n\t\t{\n\t\t\tvec4 val1 = mapCube(pos.xyz + vec3( size*2.0, 0, 0 )+translate, vec3(size,size*5.0,size), vec3( 3, 3, 3));\n\t\t\tvec4 val2 = mapCube(pos.xyz + vec3( 0.0, 0.0, 0.0 )+translate, vec3(size,size,size), vec3( 3, 3, 3));\n\t\t\tvec4 val3 = mapCube(pos.xyz + vec3( -size*2.0, -3.0, 0 )+translate, vec3(size,size*2.0,size), vec3( 3, 3, 3));\n\t\t\tvec4 val4 = mapCube(pos.xyz + vec3( -size*2.0, 3.0, 0 )+translate, vec3(size,size*2.0,size), vec3( 3, 3, 3));\n\t\t\tvec4 val5 = combine ( val1, val2 );\n\t\t\tvec4 val6 = combine ( val3, val4 );\n\t\t\treturn combine( val5, val6);\n\t\t}\n\n\t\tvec4 renderI(vec4 pos, int num, vec3 translate, float size)\n\t\t{\n\t\t\tvec4 val1 = mapCube(pos.xyz + vec3( 0, 0, 0 )+translate, vec3(size,size*5.0,size), vec3( 3, 3, 3));\n\t\t\treturn val1;\n\t\t}\n\n\t\tvec4 renderH(vec4 pos, int num, vec3 translate, float size)\n\t\t{\n\t\t\tvec4 val1 = mapCube(pos.xyz + vec3( size*2.0, 0, 0 )+translate, vec3(size,size*5.0,size), vec3( 3, 3, 3));\n\t\t\tvec4 val2 = mapCube(pos.xyz + vec3( -size*2.0, 0, 0 )+translate, vec3(size,size*5.0,size), vec3( 3, 3, 3));\n\t\t\tvec4 val3 = mapCube(pos.xyz + vec3( 0, 0, 0 )+translate, vec3(size,size,size), vec3( 3, 3, 3));\n\t\t\t\n\t\t\tvec4 val4 = combine ( val1, val2 );\n\t\t\treturn combine( val3, val4);\n\t\t}\n\n\t\tvec4 renderChar(vec4 pos, int num, vec3 translate)\n\t\t{\n\t\t\tfloat size = 1.0;\n\t\t\tvec4 res = vec4(0);\n\t\t\tif(num == CHAR_J) \t    { res = renderJ(pos,num,translate,size); } \n\t\t\telse if(num == CHAR_U)  { res = renderU(pos,num,translate,size); }\n\t\t\telse if(num == CHAR_S)  { res = renderS(pos,num,translate,size); }\n\t\t\telse if(num == CHAR_T)  { res = renderT(pos,num,translate,size); }\n\t\t\telse if(num == CHAR_K)  { res = renderK(pos,num,translate,size); }\n\t\t\telse if(num == CHAR_I)  { res = renderI(pos,num,translate,size); }\n\t\t\telse if(num == CHAR_H)  { res = renderH(pos,num,translate,size); }\t\n\n\t\t\treturn res;\n\t\t}\n\n\t\tvec4 map( vec3 pos, mat4 m)\n\t\t{\n\t\t\tvec4 q = vec4(pos+vec3(0,0,-50.0),1.0)*m;\n\t\t\t\n\t\t\tint num = int(mod(iTime,10.));\n\t\t\tif(num != 8 && num != 9 && num != 0){\n\t\t\t\tq.x = mod(q.x, 10.0)-5.0;\n\t\t\t\tq.y = mod(q.y, 16.0)-8.0;\n\t\t\t\t//q.z = mod(q.z, 16.0)-8.0;\n\t\t\t}\n\n\t\t\tvec4 digit;\n\t\t\tint char0;\n\t\t\tint char1;\n\t\t\tint char2;\n\t\t\tint char3;\n\t\t\tif(num == 8 ) {\n\t\t\t\tchar0 = CHAR_T;\n\t\t\t\tchar1 = CHAR_S;\n\t\t\t\tchar2 = CHAR_U;\n\t\t\t\tchar3 = CHAR_J;\n\t\t\t} else if(num == 9) {\n\t\t\t\tchar0 = CHAR_S;\n\t\t\t\tchar1 = CHAR_U;\n\t\t\t} else if(num == 0) {\n\t\t\t\tchar0 = CHAR_H;\n\t\t\t\tchar1 = CHAR_T;\n\t\t\t\tchar2 = CHAR_I;\n\t\t\t\tchar3 = CHAR_K;\n\t\t\t}\n\n\t\t\tif(num == 8 || num == 0) {\n\t\t\t\t// JU:ST\n\t\t\t\tvec4 num1 = renderChar(q,char0,vec3(-15,0,0));\n\t\t\t\tvec4 num2 = renderChar(q,char1,vec3(-5,0,0));\n\t\t\t\tvec4 num3 = renderChar(q,char2,vec3(5,0,0));\n\t\t\t\tvec4 num4 = renderChar(q,char3,vec3(15,0,0));\n\n\t\t\t\tvec4 num5 = combine(num1, num2);\n\t\t\t\tvec4 num6 = combine(num3, num4);\n\t\t\t\treturn combine(num5, num6);\n\t\t\t} if(num == 9) {\n\t\t\t\tvec4 num1 = renderChar(q,char0,vec3(-5,0,0));\n\t\t\t\tvec4 num2 = renderChar(q,char1,vec3(5,0,0));\n\t\t\t\treturn combine(num1, num2);\n\t\t\t} else {\n\t\t\t\tdigit = renderChar(q,num,vec3(0,0,0));\n\t\t\t}\n\n\t\t\treturn digit;\n\t\t}\n\t\t\n\t\tvec2 rot(vec2 p, float a) {\n\t\t\treturn vec2(\n\t\t\t\tcos(a) * p.x - sin(a) * p.y,\n\t\t\t\tsin(a) * p.x + cos(a) * p.y);\n\t\t}\n\n\t\tvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n\t\t\tvec2 position = ( fragCoord.xy / iResolution.xy );\n\t\t\tposition -= .5;\n\t\t\t//if(abs(position.y) > 0.40) discard;\n\t\t\tvec3 dir = vec3(position, -1.0 );\n\t\t\tdir = normalize(dir);\n\n         \tfloat aspect = iResolution.x / iResolution.y;\n         \tdir = normalize(vec3(position * vec2(aspect, 1.0), 1.0));\n\t\t \tdir.yz = rot(dir.yz, 0.1);\n\n\t\t\tvec3 pos = vec3(0.0, 5.0, 15.0);\n\n\t\t\tmat4 m;\n\t\t\tint sec = int(mod(iTime,10.));\n\t\t\tif(sec != 8 && sec != 9 && sec != 0){\n\t\t\t\tfloat dir = 1.0;\n\t\t\t\tif(sec > 4) {\n\t\t\t\t\tdir = -1.0;\n\t\t\t\t}\n\t\t\t\tm = matRotateY(iTime*0.2*dir);\n\t\t\t} else {\n\t\t\t\tpos = vec3(0.0, 5.0, 10.0+mod(iTime,15.));\n\t\t\t\tm = matRotateY(0.);\n\t\t\t}\n\n\t\t\tvec4 result;\n\t\t\tfor (int i =0; i < ITER; i++)\n\t\t\t{\n\t\t\t\tresult = map( pos, m);\n\t\t\t\tif (result.w < NEAR || result.w > FAR) break;\n\t\t\t\tpos += result.w * dir;\n\t\t\t}\n\n\t\t\tvec3 col = map(pos, m).xyz;\n\t\t\tif ( pos.z> 100. )\n\t\t\t{\n\t\t\t\t// background effect\n\t\t\t\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\t\t\tcol = vec3(uv.x+sin(iTime*0.7),0.1,0.3);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvec3 lightPos = vec3(20.0, 20.0, 20.0 );\n\t\t\t\tvec3 light2Pos = normalize( lightPos - pos);\n\t\t\t\tvec3 eps = vec3( .1, .01, .0 );\n\t\t\t\tvec3 n = vec3( result.w - map( pos - eps.xyy , m).w,\n\t\t\t\t\t       result.w - map( pos - eps.yxy , m).w,\n\t\t\t\t\t       result.w - map( pos - eps.yyx , m).w );\n\t\t\t\tn = normalize(n);\n\t\t\t\t\t\t\n\t\t\t\tfloat lambert = max(.0, dot( n, light2Pos));\n\t\t\t\tcol *= vec3(lambert);\n\t\t\t\t\n\t\t\t\tvec3 h = normalize( -dir + light2Pos);\n\t\t\t\tfloat spec = max( 0., dot( n, h ) );\n\t\t\t\tcol += vec3(pow( spec, 16.)) ;\n\t\t\t}\n\t\t\tfragColor = vec4( col, 1.0);\n\t\t}","name":"","description":"","type":"image"}]}