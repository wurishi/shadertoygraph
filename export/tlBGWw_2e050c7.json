{"ver":"0.1","info":{"id":"tlBGWw","date":"1559759292","viewed":721,"name":"Submarine radar","username":"avin","description":"motionblur experiment","likes":9,"published":3,"flags":32,"usePreview":0,"tags":["motionblur","radar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SF 1./min(iResolution.x,iResolution.y)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 ouv = fragCoord/iResolution.xy;\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;    \n        \n    vec3 activeCol= texture(iChannel0, ouv).rgb;\n    \n    float l = length(uv);\n    \n    float m = 0.;\n    \n    float i = .1*round(l/.1);\n    m += smoothstep(SF*2., 0., abs(i-l));            \n\n    m += smoothstep(SF, 0., abs(SF-uv.x));   \n    m += smoothstep(SF, 0., abs(SF-uv.y));    \n    \n    vec3 col = activeCol + vec3(0, 0.25, 0.) * m;\n    col *= step(l, .51);\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SF 1./min(iResolution.x,iResolution.y)\n\nmat2 rot(float a){\n\tfloat ca = cos(a);\n    float sa = sin(a);\n    return mat2(ca,-sa,sa,ca);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n    vec2 ouv = fragCoord/iResolution.xy;\n    \n    vec3 pPoses[6] = vec3[6](\n        vec3(.25, .25, .05),\n        vec3(-.15, .13, .08),\n        vec3(.12, -.20, .1),\n        vec3(.28, -.30, .13),\n        vec3(.05, .3, .18),\n        vec3(-.3, -.3, .3)\n    );\n    \n    float p = 0.;\n    for(int i=0; i<6; i++){\n        vec3 pd = pPoses[i];\n    \tp += smoothstep(pd.z, .0, length(uv - pd.xy));\n    }        \n    \n    uv *= rot(iTime*2.);\n            \n    float m = smoothstep(.025, 0., abs(uv.y)) * smoothstep(0., .1, uv.x) * smoothstep(.51, .49, uv.x);       \n    \n    vec3 backCol = texture(iChannel0, ouv).rgb*(p >0. ? min(.9+p*.1, 0.99) : .9);\n    \n    vec3 col = mix(backCol, vec3(0, 1., 0.), m);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}