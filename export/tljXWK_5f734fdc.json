{"ver":"0.1","info":{"id":"tljXWK","date":"1567170715","viewed":305,"name":"LiveCodingPractice010(1hour)","username":"Hirai_worthless","description":"FiberSpace","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat PI = 3.14159265;\nmat2 genRot(float a){\n\treturn mat2(cos(a),-sin(a),sin(a),cos(a));\n}\nvec2 pmod(vec2 p,float count){\n\tp *= genRot(PI/count);\n\tfloat at = atan(p.y/p.x);\n\tfloat r = length(p);\n\tat = mod(at,2. * PI / count);\n\tp = vec2(r * cos(at),r * sin(at));\n\tp *= genRot(-PI/count);\n\treturn p;\n}\nfloat map(vec3 p){\n\tvec3 q = p;\n\tp.xy *= genRot(p.z/4.);\n\tp = (fract(p/1.5 + 0.5) - 0.5) * 1.5;\n\tp.xy = pmod(p.xy,8.);\n\tfloat string = length(p.xy - vec2(0.25 + 0.05 * sin(q.z + iTime * PI),0.)) - .01 + 0.005 * sin(q.z);\n\tfloat sphere = length(p - vec3(0.25 + 0.05 * sin(q.z + iTime * PI),0.,0.)) - .03;\n\tstring = min(string,sphere);\n\treturn string;\n}\nvec3 getNormal(vec3 p){\n\tvec3 x = dFdx(p);\n\tvec3 y = dFdy(p);\n\treturn normalize(cross(x,y));\n}\nvec4 trace(vec3 o,vec3 r){\n\tfloat t = 0.;\n\tvec3 p;\n\tfor(int i = 0; i < 128; i++){\n\t\tp = o + r * t;\n\t\tfloat d = map(p);\n\t\tt += d * 0.75;\n\t}\n\tvec3 n = getNormal(p);\n\treturn vec4(n,t);\n}\n\nvec3 cam(){\n\tvec3 c = vec3(0.,0.,-1.5);\n\tc += vec3(.5 * sin(iTime/2.),.5 * cos(iTime/2.),iTime * 2.);\n\treturn c;\n}\nvec3 ray(vec2 uv,float z){\n\tvec3 r = normalize(vec3(uv,z));\n\tr.xz *= genRot(PI / 8.);\n\tr.xy *= genRot(-iTime/4.);\n\t//r.xz *= genRot(time/8.);\n\t//r.yz *= genRot(time/8.);\n\treturn r;\n}\n\nvec3 getColor(vec3 o, vec3 r, vec4 d){\n\tvec3 light = normalize(vec3(r.xy,0.));\n\tvec3 p = o + r * d.w;\n\tvec3 n = d.xyz;\n\tfloat a = dot(n,r);\n\tvec3 cc = (vec3(sin(p.x),sin(p.y),sin(p.z)) * 0.5 + 0.5);\n\tvec3 bc = vec3(1.-a);\n\tcc = fract(p.z / 1.5) < 0.9 && fract((p.z/2. - iTime * 4.) / 8.) < 0.95  ? vec3(0.) : cc;\n\tbc += cc * 2.;\n\tfloat t = d.w;\n\tfloat fog = 1./(1. + t * t * 0.05);\n\treturn mix(bc,vec3(0.),1. - fog);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n\tvec2 uv = ( fragCoord.xy * 2. - iResolution.xy) / iResolution.y ;\n\tvec3 c = cam();\n\tvec3 r = ray(uv,1.5);\n\tvec4 d = trace(c,r);\n\tvec3 color = getColor(c,r,d);\n\n\tfragColor = vec4( color, 1.0 );\n\n}","name":"Image","description":"","type":"image"}]}