{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"webcam","id":"4sf3zn","filepath":"/presets/webcam.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    /////////////////////////\n    \n    float ratio = 4.5 * (sin(5. * iTime)+1.5)/2.;\n    \n    /////////////////////////\n    \n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 col;\n    \n    mat3 sobelX = mat3(-2.0, -3.0, -2.0,\n                        0.0,  0.0,  0.0,\n                        2.0,  3.0,  2.0);\n    \n    mat3 sobelY = mat3(-2.0,  0.0,  2.0,\n                       -3.0,  0.0,  3.0,\n                       -2.0,  0.0,  2.0);\n    \n    vec3 sumX = vec3(0.0);\n    vec3 sumY = vec3(0.0);\n    \n    for(int i = -1; i <= 1; i++) {\n        for(int j = -1; j <= 1; j++) {\n            float x = (fragCoord.x + float(i))/iResolution.x;\t\n    \t\tfloat y =  (fragCoord.y + float(j))/iResolution.y;\n            \n            sumX += texture(iChannel0, vec2(x, y)).xyz * float(sobelX[1+i][1+j]);\n            sumY += texture(iChannel0, vec2(x, y)).xyz * float(sobelY[1+i][1+j]);\n        }\n    }\n    col = abs(sumX) + abs(sumY);\n    col *= ratio;\n    // col = smoothstep(0., 1., col);\n    \n    \n\tfragColor.xyz = col;\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":true,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"3dKcR3","date":"1734012723","viewed":19,"name":"Comic.No.4","username":"avartation","description":"aha","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["diub"],"hasliked":0,"parentid":"","parentname":""}}