{"ver":"0.1","info":{"id":"XfBBzc","date":"1725243598","viewed":18,"name":"sh-02","username":"Valinor","description":"Experimental shader 2 - face 1","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["basic","experimental"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur) {\n\n    float d = length(uv - p);\n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n}\n\nfloat Face(vec2 uv, vec2 p, float size) {\n\n    uv -= p; // translate coordinate system\n    uv /= size; // scale\n\n    // make a circle \n    float mask = Circle(uv, vec2(.0, -.0), .4, .01);\n\n    \n    // circle out of original\n    mask += Circle(uv, vec2(-.5, -.2), .1, .01);\n    \n    // in (face start)\n    //eyes\n    mask -= Circle(uv, vec2(.2, .15), .1, .01);\n    mask -= Circle(uv, vec2(-.2, .15), .1, .01);\n    // nouse\n    mask -= Circle(uv, vec2(.0, -.07), .07, .01);\n    // mouth\n    float mouth = Circle(uv, vec2(0.), .3, .02);\n    mouth -= Circle(uv, vec2(.0, .1), .3, .02);\n    mask -= mouth;\n    \n    return mask;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // 0 left - 1 right\n    // fragColor = vec4(0., uv.x,0.,1.0);\n    \n    // 0 bottom - 1 top\n    // fragColor = vec4(0., 0., uv.y,1.0);\n\n    // green leftTop - red rightBottom\n    \n    // uv on center\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // create a color\n    vec3 color = vec3(0.);\n    \n    float mask = Face(uv, vec2(0.), .5);\n    \n    // includes the circle\n    color = vec3(1., 0., 1.) * mask;\n    // color = vec3(mouth);\n\n\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(vec3(mask),1.0);\n}","name":"Image","description":"","type":"image"}]}