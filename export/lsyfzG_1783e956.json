{"ver":"0.1","info":{"id":"lsyfzG","date":"1529266326","viewed":137,"name":"Making text yay!","username":"Veggiebob","description":"Gets the text from that one texture that looks weird. Moves with mouse. I'm using a really inefficient method to do it. Anyone know a better way?","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mouse","text"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const bool colorful = false;//gets some color this way.\n\n/** THE LETTERS MWAHAHAHAHAHA **/\n\n//A to Z is (1, 11) to (10, 10)\nconst vec2 _A = vec2(1, 11);\nconst vec2 _B = vec2(2, 11);\nconst vec2 _C = vec2(3, 11);\nconst vec2 _D = vec2(4, 11);\nconst vec2 _E = vec2(5, 11);\nconst vec2 _F = vec2(6, 11);\nconst vec2 _G = vec2(7, 11);\nconst vec2 _H = vec2(8, 11);\nconst vec2 _I = vec2(9, 11);\nconst vec2 _J = vec2(10,11);\nconst vec2 _K = vec2(11,11);\nconst vec2 _L = vec2(12,11);\nconst vec2 _M = vec2(13,11);\nconst vec2 _N = vec2(14,11);\nconst vec2 _O = vec2(15,11);\n                           //anyone know a better way to do this? I'm getting tired :(\nconst vec2 _P = vec2(0, 10);\nconst vec2 _Q = vec2(1, 10);\nconst vec2 _R = vec2(2, 10);\nconst vec2 _S = vec2(3, 10);\nconst vec2 _T = vec2(4, 10);\nconst vec2 _U = vec2(5, 10);\nconst vec2 _V = vec2(6, 10);\nconst vec2 _W = vec2(7, 10);\nconst vec2 _X = vec2(8, 10);\nconst vec2 _Y = vec2(9, 10);\nconst vec2 _Z = vec2(10,10);\n\n//a to z is (1, 9) to (10, 8)\nconst vec2 _a = vec2(1, 9);\nconst vec2 _b = vec2(2, 9);\nconst vec2 _c = vec2(3, 9);\nconst vec2 _d = vec2(4, 9);\nconst vec2 _e = vec2(5, 9);\nconst vec2 _f = vec2(6, 9);\nconst vec2 _g = vec2(7, 9);\nconst vec2 _h = vec2(8, 9);\nconst vec2 _i = vec2(9, 9);\nconst vec2 _j = vec2(10,9);\nconst vec2 _k = vec2(11,9);\nconst vec2 _l = vec2(12,9);\nconst vec2 _m = vec2(13,9);\nconst vec2 _n = vec2(14,9);\nconst vec2 _o = vec2(15,9);\n                             //ugh\nconst vec2 _p = vec2(0, 8);\nconst vec2 _q = vec2(1, 8);\nconst vec2 _r = vec2(2, 8);\nconst vec2 _s = vec2(3, 8);\nconst vec2 _t = vec2(4, 8);\nconst vec2 _u = vec2(5, 8);\nconst vec2 _v = vec2(6, 8);\nconst vec2 _w = vec2(7, 8);\nconst vec2 _x = vec2(8, 8);\nconst vec2 _y = vec2(9, 8);\nconst vec2 _z = vec2(10,8);\n\n\n//punctuation\nconst vec2 _space = vec2(15, 8);\nconst vec2 _exclam = vec2(1, 13);//       !\nconst vec2 _quote = vec2(2, 13);//        \"\nconst vec2 _apostrophe = vec2(7, 13);//   '\nconst vec2 _open_paren = vec2(8, 13);//   (\nconst vec2 _close_paren = vec2(9, 13);//  )\n\n//other symbols\nconst vec2 _multiply = vec2(10, 13);// *\nconst vec2 _and = vec2(6, 13);//       &\nconst vec2 _at = vec2(0, 11);//        @\nconst vec2 _money = vec2(4, 13);//     $\nconst vec2 _percent = vec2(5, 13);//   %\nconst vec2 _hashtag = vec2(3, 13);//   #\nconst vec2 _filled_triangle_left = vec2(2, 15);\nconst vec2 _filled_triangle_right = vec2(5, 15);\n\n\nconst int letters = 12;\nconst vec2 [letters] word = vec2 [letters] (_H, _e, _l, _l, _o, _space, _W, _o, _r, _l, _d, _exclam);\n\nbool text (vec4 box, vec2 character, vec2 uv){\n    if(texture(iChannel0, (vec2((uv.x-box.x)/box.z, (uv.y-box.y)/box.w)+character)/16.).r>0.4&&uv.x>box.x&&uv.y>box.y&&uv.x<box.x+box.z&&uv.y<box.y+box.w){\n        //this if statement checks these things:\n        //in box?\n        //hitting a letter and not a blue/green spot?\n        return true;\n    } else {\n        return false;\n    }\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // setup coordinates of all the stuff\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 oldCoord = uv;\n    vec2 mouse = iMouse.xy/iResolution.xy; // 0 to 1\n    if(iMouse.xy==vec2(0.)){\n        mouse = vec2(0.5);\n    }\n    mouse -= 0.5;\n    uv-=0.5;//-0.5 to -0.5\n    float aspect = iResolution.x/iResolution.y;\n    uv.x *= aspect;//fix aspect ratio\n    uv *= 0.4/8.*float(letters);//scale up to size of message\n    \n    //move the coordinates\n    uv-=mouse;\n    //uv.y+=sin(uv.x*100.+iTime*2.)*0.005;//make cool squigglyness\n    //uv.x+=sin(uv.y*100.+iTime*2.)*0.005;//(optional:)\n    \n    //setup the parts for the words\n    //By the way, each letter has a pretty big border, so it moves less than the box size.\n    vec3 col = vec3(0.); // set col as black\n    vec2 box = vec2(0.2, 0.2);//size of each letter\n    vec2 move = vec2(box.x*0.44, 0.0);//amount to move to place each new letter\n    vec2 stamp = vec2(-move.x*float(letters)/2.-box.x*0.28, -box.y/2.);//where to \"stamp\" the letter\n    \n    if(abs(uv.x)<0.005||abs(uv.y)<0.005){\n        col = vec3(0.3, 0.3, 0); // draw axes behind the letters\n    }\n    \n    //make all of the letters from word[]\n    for(int i = 0; i<letters; i++){\n        \n        //each letter is like this\n        if(text(vec4(stamp, box), word[i], uv)){\n            if(colorful){\n                vec4 newBox = vec4(stamp, box);\n            \tcol = texture(iChannel0, (vec2((uv.x-newBox.x)/newBox.z, (uv.y-newBox.y)/newBox.w)+word[i])/16.).rgb;\n            } else {\n                col = vec3(1.);\n            }\n        }\n        stamp+=move;\n        //just do all of that for each letter that you want.\n    }\n    //col = texture(iChannel0, oldCoord).rgb;//just for reference\n\tfragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}