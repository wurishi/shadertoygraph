{"ver":"0.1","info":{"id":"McK3DK","date":"1713304628","viewed":69,"name":"hypnotic ink","username":"ivyntoy","description":"thingy","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["hypnotic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n\n\n\n\n        float triNumX = 80.0; //Number on screen\n    float triNumY = 45.0;\n    \n    float triW = iResolution.x/triNumX; //Width\n    float triH = iResolution.y/triNumY; //Height\n\n    \n    \n    vec2 uv = fragCoord/iResolution.xy; //Normalised fragcoords\n    float TriCoordY = floor(uv.y * triNumY);\n    float TriCoordX = floor(uv.x * triNumX);\n    \n    float YWithinTriangle = fragCoord.y - (TriCoordY * triH);\n    float XWithinTriangle = fragCoord.x - (TriCoordX * triW);\n    \n    //bool TriangleOrientation = YWithinTriangle > abs(0.5*(triW - 2.0 * XWithinTriangle));\n    float TriangleFrontOrBack = -10000.;\n    \n    if(YWithinTriangle > XWithinTriangle * 2.0) TriangleFrontOrBack = -1.;\n    else if(YWithinTriangle < XWithinTriangle * 2.) {\n        if(2.*XWithinTriangle + YWithinTriangle > 2.0 * triW ) TriangleFrontOrBack = 1.;\n        else if(2.*XWithinTriangle + YWithinTriangle < 2. * triW ) TriangleFrontOrBack = 0.;\n        }\n    \n    float NewTriCoordX;\n    NewTriCoordX = (2. * TriCoordX) + TriangleFrontOrBack;\n    float NewtriW = triW/2.0;\n    \n    vec2 newFragCoord = vec2(NewTriCoordX * NewtriW, TriCoordY * triH);\n    //vec2 newUV = newFragCoord/iResolution.xy;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    vec2 uv =  (2.0 * newFragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n   \n   float y = abs(uv.y) * 2.2;\n   float x = abs(uv.x) * 2.2;\n   \n    for(float i = 1.0; i < 5.0; i++){\n    y -= i * 0.2 / i * \n      sin(-x * i * i + iTime * 0.9);// * \n      x -= i * 0.2 / i * \n      sin(-y *i * i + iTime * 0.9);// * \n  }\n  \n  float combined = sqrt(pow(x, 2.0) + pow(y, 2.0));\n  combined = combined/2.5;\n    \n   vec3 col;\n   col.r  = mix(0.0, 1.0, 1.0-combined);\n   col.g = mix(0.0, 0.87, 1.0-combined);\n   col.b = mix(0.0, 0.8, 1.0-combined);\n  \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}