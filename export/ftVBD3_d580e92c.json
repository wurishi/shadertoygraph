{"ver":"0.1","info":{"id":"ftVBD3","date":"1665373349","viewed":85,"name":"C_Game_of_Life","username":"hyrchao","description":"conway game of life\nhttps://www.youtube.com/watch?v=xh61Ol2X4GA&ab_channel=TheArtofCode","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["fx"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 col = vec4(0.0, 0.0, 0.0, 1.0);\n\n    col.rgb = texture(iChannel0, uv).rgb;\n    //col.rgb = texelFetch(iChannel0, ivec2(fragCoord),0).rgb;\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int GetNeighbors(vec2 gridCoord)\n{\n    int num = 0;\n    int gridSize = int(GRIDSIZE);\n    for(int x = -1; x <= 1; x++)\n    {\n        for(int y = -1; y <= 1; y++)\n        {\n            if(x == 0 && y == 0)\n                continue;\n            num += texelFetch(iChannel0, ivec2(gridCoord) + ivec2(x , y) * gridSize, 0).r > 0.5 ? 1 : 0;\n        }\n    }\n\n\n    return num;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 gridCoord = GetGridCoord(fragCoord);\n    vec2 gv = gridCoord /iResolution.xy;\n    vec4 col = vec4(0.0, 0.0, 0.0, 1.0);\n\n    if(iFrame < 10)\n    {\n        // Initialize pattern\n        col.rgb = texture(iChannel1, gv).rrr;\n    }\n    else if(iFrame % int(60.0 * UPDATETIME) == 0)\n    {\n        bool alive = texelFetch(iChannel0, ivec2(gridCoord), 0).r > 0.5;\n        int num = GetNeighbors(gridCoord);\n        float val = 0.0;\n        if((alive && num == 2) || num == 3)\n            val = 1.0;\n        else\n            val = 0.0;    \n        col.rgb = vec3(val);\n    }\n    else\n        col.rgb = texelFetch(iChannel0, ivec2(gridCoord), 0).rrr;\n        \n    // Adding val by mouse input\n    float input_val = step(length(iMouse.xy - fragCoord.xy) , BRUSHSIZE);\n    col.rgb = clamp(col.rgb + vec3(input_val), 0.0, 1.0);\n\n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define UPDATETIME 0.1\n#define GRIDSIZE 10.0\n#define BRUSHSIZE 10.0\nvec2 GetGridCoord(vec2 fragCoord)\n{\n    return GRIDSIZE * floor(fragCoord/GRIDSIZE);\n}","name":"Common","description":"","type":"common"}]}