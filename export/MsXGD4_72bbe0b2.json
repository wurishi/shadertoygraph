{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"float scanline(vec2 uv) {\n\treturn sin(iResolution.y * uv.y * 0.7 - iTime * 10.0);\n}\n\nfloat slowscan(vec2 uv) {\n\treturn sin(iResolution.y * uv.y * 0.02 + iTime * 6.0);\n}\n\nvec2 colorShift(vec2 uv) {\n\treturn vec2(\n\t\tuv.x,\n\t\tuv.y + sin(iTime)*0.02\n\t);\n}\n\nfloat noise(vec2 uv) {\n\treturn clamp(texture(iChannel1, uv.xy + iTime*6.0).r +\n\t\ttexture(iChannel1, uv.xy - iTime*4.0).g, 0.96, 1.0);\n}\n\n// from https://www.shadertoy.com/view/4sf3Dr\n// Thanks, Jasper\nvec2 crt(vec2 coord, float bend)\n{\n\t// put in symmetrical coords\n\tcoord = (coord - 0.5) * 2.0;\n\n\tcoord *= 0.5;\t\n\t\n\t// deform coords\n\tcoord.x *= 1.0 + pow((abs(coord.y) / bend), 2.0);\n\tcoord.y *= 1.0 + pow((abs(coord.x) / bend), 2.0);\n\n\t// transform back to 0.0 - 1.0 space\n\tcoord  = (coord / 1.0) + 0.5;\n\n\treturn coord;\n}\n\nvec2 colorshift(vec2 uv, float amount, float rand) {\n\t\n\treturn vec2(\n\t\tuv.x,\n\t\tuv.y + amount * rand // * sin(uv.y * iResolution.y * 0.12 + iTime)\n\t);\n}\n\nvec2 scandistort(vec2 uv) {\n\tfloat scan1 = clamp(cos(uv.y * 2.0 + iTime), 0.0, 1.0);\n\tfloat scan2 = clamp(cos(uv.y * 2.0 + iTime + 4.0) * 10.0, 0.0, 1.0) ;\n\tfloat amount = scan1 * scan2 * uv.x; \n\t\n\tuv.x -= 0.05 * mix(texture(iChannel1, vec2(uv.x, amount)).r * amount, amount, 0.9);\n\n\treturn uv;\n\t \n}\n\nfloat vignette(vec2 uv) {\n\tuv = (uv - 0.5) * 0.98;\n\treturn clamp(pow(cos(uv.x * 3.1415), 1.2) * pow(cos(uv.y * 3.1415), 1.2) * 50.0, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 sd_uv = scandistort(uv);\n\tvec2 crt_uv = crt(sd_uv, 2.0);\n\t\n\tvec4 color;\n\t\n\t//float rand_r = sin(iTime * 3.0 + sin(iTime)) * sin(iTime * 0.2);\n\t//float rand_g = clamp(sin(iTime * 1.52 * uv.y + sin(iTime)) * sin(iTime* 1.2), 0.0, 1.0);\n\tvec4 rand = texture(iChannel1, vec2(iTime * 0.01, iTime * 0.02));\n\t\n\tcolor.r = texture(iChannel0, crt(colorshift(sd_uv, 0.025, rand.r), 2.0)).r;\n\tcolor.g = texture(iChannel0, crt(colorshift(sd_uv, 0.01, rand.g), 2.0)).g;\n\tcolor.b = texture(iChannel0, crt(colorshift(sd_uv, 0.024, rand.b), 2.0)).b;\t\n\t\t\n\tvec4 scanline_color = vec4(scanline(crt_uv));\n\tvec4 slowscan_color = vec4(slowscan(crt_uv));\n\t\n\tfragColor = mix(color, mix(scanline_color, slowscan_color, 0.5), 0.05) *\n\t\tvignette(uv) *\n\t\tnoise(uv);\n\n\t//fragColor = vec4(vignette(uv));\n\t//vec2 scan_dist = scandistort(uv);\n\t//fragColor = vec4(scan_dist.x, scan_dist.y,0.0, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsXGD4","date":"1370068131","viewed":4444,"name":"Dirty old CRT","username":"Klowner","description":"Attempting to make a CRT type effect.\n\nThanks to Jasper for the crt UV distort function https://www.shadertoy.com/view/4sf3Dr","likes":52,"published":1,"flags":0,"usePreview":0,"tags":["2d","crt"],"hasliked":0,"parentid":"","parentname":""}}