{"ver":"0.1","info":{"id":"WdB3RV","date":"1549308597","viewed":122,"name":"Negative Tester","username":"xangadix","description":"nothing to see here","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.141592654;\n#pragma parameter SCANLINE_BASE_BRIGHTNESS \"Scanline Base Brightness\" 0.60 0.0 1.0 0.01;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;     \n\tvec3 col = texture( iChannel1, uv ).rgb;\n    \n    int sw = 12;\n    \n    if ( sw == 12 ) {\n       col.r + col.g + col.b > 0.1? col.rgb = vec3( 1.0, 1.0, 1.0 ) : col.rgb = vec3( 0.0, 0.0, 0.0 ); \n       //col.g + col.g + col.g > 1.5? col.g = 1.0 : ;\n       //col.b + col.b + col.b > 1.5? col.b = 1.0 : ;  \n    }\n    \n    if ( sw == 1 ) {\n        // negative 1, my set\n        // ( 1.-src.r, 1.-src.g, 1.-src.b, src.a );\n    \tcol.rgb = ( col.rgb * -1.) + 1.;\n    }\n\n    \n    if ( sw == 2 ) {\n    \t// suggested, from the interwubs\n        //col.rgb = vec3(1.0 - col.r, 1.0 - col.g,1.0 - col.b);\n        // same same, but raunchy, maybe use for paint?\n        col.rgb = vec3(1./col.r-4.0, 1./col.g-4.0, 1./col.b-4.0);\n    }\n    \n    if ( sw == 3 ) {        \n        vec3 orig = col.rgb;\n        vec3 bw = col.rgb = vec3( col.r + col.g + col.b ) / 3.; // black/white\n        vec3 nega = ( bw.rgb * -1.) + 1.;              // negative\n        col.rgb = vec3(\n            ( (orig.r/2.) + (nega.r) ),\n            ( (orig.g/2.) + (nega.g) ),\n            ( (orig.b/2.) + (nega.b) ) \n        );        \n    }\n    \n    if ( sw == 8 ) {\n        vec3 lum = vec3(0.1, 0.587, 0.114);\n    \tfloat bw = dot( col.rgb, lum);\n        col = vec3(bw, bw, bw);\n    }\n    \n    if ( sw == 9 ) {\n        //col = col/0.4 - 0.5;\n        //col.rgb = vec3( 1./col.r-1.0, 1./col.g-1.0, 1./col.b-1.0);\n        //col.rgb = ( col.rgb * -1.) + 1.;\n        col.rgb = 1. / ( col.rgb * 10. );\n        col.rgb = ( col.rgb * -1.) + 1.;\n    }\n    \n    \n    if ( sw == 4 ) {\n        col.rgb = vec3( col.g + col.b / 2., col.r + col.b / 2., col.r + col.b / 2. ); \n    }\n    \n    // if ( currentcoloreffect == 2  ) return vec4( 1.-src.r, 1.-src.g, 1.-src.b, src.a );                                                                  // negtive 1\n  \t// if ( currentcoloreffect == 3  ) return vec4( 1./src.r-1.0, 1./src.g-1.0, 1./src.b-1.0, src.a );                                                      // negtive 2\n  \t// if ( currentcoloreffect == 4  ) return vec4( 1./src.r-2.0, 1./src.g-2.0, 1./src.b-2.0, src.a );     \n    // vec4(1.0 - textureColor.r,1.0 -textureColor.g,1.0 -textureColor.b,1)\n    // vec4(1.0 - color.r, 1.0 - color.g, 1.0 - color.b, color.a);\n    // // Invert the colors by outputting 1.0 minus the source texture's color\n    // FragColor = vec4(1.0 - color.rgb, 1.0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}