{"ver":"0.1","info":{"id":"tsf3D7","date":"1643007990","viewed":208,"name":"Perlin Noise 2D-Wood","username":"eoviya","description":"no desc :)","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["wood"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float modValue = 512.0;\n\nfloat permute(float x)\n{\n    float t = ((x * 67.0) + 71.0) * x;\n\treturn mod(t, modValue);\n}\n\nfloat shift(float value)\n{\n    return fract(value * (1.0 / 73.0)) * 2.0 - 1.0;\n}\n\nfloat rand(vec2 c)\n{\n    return shift(permute(permute(c.x) + c.y));\n}\n\nfloat valueNoise(vec2 c)\n{\n    vec2 p = floor(c);\n    vec2 f = fract(c);\n    \n    vec2 i00 = mod(p, modValue);\n    vec2 i01 = mod(p + vec2(0.0f, 1.0f), modValue);\n    vec2 i10 = mod(p + vec2(1.0f, 0.0f), modValue);\n    vec2 i11 = mod(p + vec2(1.0f, 1.0f), modValue);\n    \n    float f00 = rand(i00);\n    float f01 = rand(i01);\n    float f10 = rand(i10);\n    float f11 = rand(i11);\n    \n    vec2 t = f * f * (3.0 - 2.0 * f);\n    return mix(mix(f00, f10, t.x), mix(f01, f11, t.x), t.y);\n}\n\nfloat height(vec2 c)\n{\n    return (valueNoise(c) + mod(c.x, modValue));\n}\n    \nconst float plankWidth = 0.2f;\nconst float plankLength = 1.2f;\nconst float randOffset = 5.0f;\nconst float rings = 8.0f;\nconst float ringWidth = 0.2f;\nconst float edgeWidth = 0.02f;\nconst float edgeLength = 0.02f;\nconst float colorOffset = 0.15f;\n    \nconst vec3 color1 = vec3(0.76, 0.54, 0.26);\nconst vec3 color2 = vec3(0.88, 0.72, 0.5);\nconst vec3 edgeColor = vec3(0.35, 0.18, 0.07);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    fragCoord.y += iTime * 100.0f;\n\tvec2 uv = fragCoord / iResolution.yy;\n    uv = mod(uv, 512.0f);\n    \n    float plank = floor(uv.x / plankWidth);\n    float start = mix(0.0f, rand(plank * vec2(12.345, 67.89)), randOffset);\n    float item = floor(uv.y / plankLength + start);\n    \n    float h = fract(height(uv / vec2(plankWidth, plankLength) + item) * rings);\n    float val = 1.0f - pow(h, 1.0f / ringWidth);\n    \n    vec3 color = mix(color1, color2, val);\n    float darkness = mix(1.0, rand(vec2(mod(plank * 12.345, modValue), mod(item * 67.89, modValue))), colorOffset);\n    \n    float line = step(plankLength * edgeWidth, fract(uv.x / plankWidth)) *\n        step(plankWidth * edgeLength, fract(uv.y / plankLength + start));\n    \n    vec3 lineColor = edgeColor * step(line, 0.0f);\n\tfragColor = vec4(color * darkness * line + lineColor, 1.0f);\n}","name":"Image","description":"","type":"image"}]}