{"ver":"0.1","info":{"id":"ttXczX","date":"1593091692","viewed":260,"name":"Flower Speaker","username":"coposuke","description":"SoundCloud does not load properly for the first open.\nLooks like a stove.","likes":7,"published":1,"flags":64,"usePreview":0,"tags":["training","soundcloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"ltj3R3","filepath":"https://soundcloud.com/copocopo-sub/ppun2qgzygag","previewfilepath":"https://soundcloud.com/copocopo-sub/ppun2qgzygag","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI (3.14159265357989)\n#define TAU (PI * 2.0)\n\n\nvec3 hsv2rgb(vec3 c)\n{\n\treturn c.b * ((clamp( abs( fract(c.r + vec3(0,2,1) / 3.0) * 6.0 - 3.0) - 1.0, 0.0, 1.0) - 1.0) * c.g + 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uvSound = fragCoord.xy / iResolution.xy;\n\tvec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec2 uvCircle = vec2(\n    \t(atan(-uv.y, -uv.x) + PI) / TAU,\n    \tlength(uv) * 1.5\n    );\n    \n    const float CircleOffset = -0.5;\n    const float CircleLevel = 5.5;\n    float circleType = floor(uvCircle.y * CircleLevel + CircleOffset);\n\n    int colorType = 0;\n    float colorDepth = 0.0;\n\n    if (circleType < 20.0)\n    {\n        for(float i=0.0; i<6.0; i++)\n        {\n            if(circleType - i < 9.0)\n            {\n                vec2 fftUV = vec2(uvCircle.x, 0.0);\n                float fft1 = texture( iChannel0, fftUV ).x;\n                float fft2 = texture( iChannel0, vec2(1.0 - fftUV.x, fftUV.y) ).x;\n                float fft = fract(uvCircle.y * CircleLevel + CircleOffset);\n                if( fft + i < fft1 * fft2 * mix(1.0, 50.0, (circleType - i) / 20.0) )\n                {\n                    colorType = int(circleType) - int(i);\n                    colorDepth = smoothstep(0.0, 1.0, fft + i);\n                }\n            }\n        }\n    }\n    \n    \n\tvec3 col = vec3(0);\n\n    float t = PI * float(colorType) / 20.0 + fract(iTime * 0.1);\n    col += float(1 < colorType && colorType < 10) * hsv2rgb(vec3(fract(t), 1.75 - colorDepth, colorDepth));\n    \n    if(uvCircle.y < 0.5)\n    {\n    \tcol = mix(col, vec3(0.2, 0.16, 0.15), smoothstep(0.3, 0.45, uvCircle.y) * smoothstep(0.5, 0.45, uvCircle.y));\n    }\n\n    float wave = texture( iChannel0, vec2(uvSound.x * 0.25, 1.0) ).x;\n\tcol += smoothstep(0.002, 0.001, abs(uvSound.y - wave)) * vec3(1.0, 1.0, 0.0);\n    \n\tfragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}