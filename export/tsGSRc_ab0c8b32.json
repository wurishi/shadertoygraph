{"ver":"0.1","info":{"id":"tsGSRc","date":"1574588530","viewed":82,"name":"trippy rainbow 2","username":"sklappal","description":"rainbow","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 center = vec2(0.5) + vec2(cos(iTime)*0.2, sin(iTime)*0.2);\n    \n    vec2 spher = center - uv;\n    \n    float dist = length(spher);\n    float angle = (atan(spher.x, spher.y) + M_PI) / ( 2.0 * M_PI);\n    angle += iTime + dist*(2.0*sin(0.1*iTime));\n    \n\n    // Output to screen\n    fragColor = vec4(hsl2rgb(vec3(angle, 0.8, 0.5)),1.0);\n}","name":"Image","description":"","type":"image"}]}