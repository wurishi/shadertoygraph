{"ver":"0.1","info":{"id":"MtySz1","date":"1482803146","viewed":317,"name":"hhhzzzsss Orbit Traps","username":"hhhzzzsss","description":"This is a combination of two orbit traps on a mandelbrot set. One is based on a line, and the other is based on a point. The line and the point is constantly changing, resulting in the animation shown.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","orbit","orbittraps","trap","pickover","stalk","pickoverstalks"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iterations 200\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat calctrap(vec2 z) {\n    vec2 center = 0.3*vec2(sin(0.82342*iTime+2.254), sin(0.41423*iTime+331.234));\n    vec2 direction = normalize(vec2(sin(0.794875*iTime+3.2534), sin(1.0985734*iTime+5.253)));\n\tfloat stalk1 = abs(dot( z - center, direction ));\n    float stalk2 = abs(dot( z - center, vec2(direction.y,-direction.x) ));\n    float stalk = min(stalk1, stalk2);\n    \n    center = 0.3*vec2(sin(1.7509*iTime+23.423), sin(2.41423*iTime+623.724));\n    float point = length(z-center)/3.0;\n\t\n    return min(point,stalk);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 2.0*uv-1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 1.3;\n    \n    vec2 z = uv;\n    vec2 c = uv;\n    float trap = calctrap(z);\n    for (int i = 0; i < iterations; ++i) {\n        //if (dot(z,z) > 4.0) break;\n        z = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;\n        trap = min(trap, calctrap(z));\n    }\n\tfragColor = vec4(hsv2rgb(vec3(1.0/(1.0+trap*50.0) - 0.3,1.0,1.0)),1.0);\n    \n}","name":"Image","description":"","type":"image"}]}