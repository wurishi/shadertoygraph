{"ver":"0.1","info":{"id":"3tGfDW","date":"1614300896","viewed":168,"name":"Beam steering around the corner","username":"rory618","description":"Click and hold the mouse to steer the beam, done by simulating each wave source separately and combining them with phase shifts so that all waves are in phase where the mouse is located. Wait a bit for the waves to propagate, or use the speedup plugin.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["waves","simulation","array","rf","phased"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, in vec2 I )\n{\n    O = vec4(0);\n    vec2 u = (I-vec2(iResolution.x-iResolution.y,0)/2.)/iResolution.y*512.;\n    vec2 m = (iMouse.xy-vec2(iResolution.x-iResolution.y,0)/2.)/iResolution.y*512.;\n    vec2[24] cc;\n    \n    for(int i = 0; i < 6*4; i++){\n    \n        \n    \n        vec4 t = texture(iChannel0, XYFaceToRayDir(ivec3(u,i/4) + ivec3((i%2)*512,((i/2)%2)*512,0) ));\n        vec4 m = texture(iChannel0, XYFaceToRayDir(ivec3(m,i/4) + ivec3((i%2)*512,((i/2)%2)*512,0) ));\n        \n        if(length(m.xy)==0. || iMouse.z<=0.){\n            O.xy += t.xy;\n        } else {\n            vec2 cc = normalize(m.xy);\n            O.xy += t.xy*mat2(cc,-cc.y,cc.x);\n        }\n    }\n    O = vec4(pow(length(O),.2));\n    if(u.x<0.){\n        /*float t = I.y;\n        vec4 tx = texture(iChannel1,vec2(t,0)/iResolution.xy);\n        \n        O.x = float(tx.x*50.>I.x-60.);\n        O.y = float(tx.y*50.>I.x-60.);\n        O.z = float(length(tx)*2000.>I.x+1900.);*/\n        O*=0.;\n    }\n    if(u.x>512.){\n        O*=0.;\n    }\n    /*\n    float size = texture(iChannel1, vec2(0)).x;\n    \n    \n    \n    vec3 rayDir = NetXYToRayDir((I)/size*1024.);\n    \n    \n    if(rayDir==vec3(0)){\n        O = vec4(0);\n    } else {\n    \tO = texture(iChannel0, rayDir);\n    }*/\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n\nvec3 XYFaceToRayDir(ivec3 p){\n    vec2 x = vec2(p-512) + 0.5;\n           if (p.z==0){     return vec3( 512,-x.y,-x.x);\n    } else if (p.z==1){     return vec3( x.x, 512, x.y);\n    } else if (p.z==2){     return vec3( x.x,-x.y, 512);\n    } else if (p.z==3){     return vec3(-512,-x.y, x.x);\n    } else if (p.z==4){     return vec3( x.x,-512,-x.y);\n    } else if (p.z==5){     return vec3(-x.x,-x.y,-512);\n    } else return vec3(0);\n}\nivec3 RayDirToXYFace(vec3 dir){\n    \n    if        (dir.x>max(abs(dir.y),abs(dir.z))){\n        dir /= dir.x/512.;\n        return ivec3(-dir.z+512., -dir.y+512., 0);\n    } else if (dir.y>max(abs(dir.z),abs(dir.x))){\n        dir /= dir.y/512.;\n        return ivec3(dir.x+512., dir.z+512.,1);\n    } else if (dir.z>max(abs(dir.x),abs(dir.y))){\n        dir /= dir.z/512.;\n        return ivec3(dir.x+512.,-dir.y+512.,2);\n    } else if (-dir.x>max(abs(dir.y),abs(dir.z))){\n        dir /=-dir.x/512.;\n        return ivec3(dir.z+512.,-dir.y+512.,3);\n    } else if (-dir.y>max(abs(dir.z),abs(dir.x))){\n        dir /=-dir.y/512.;\n        return ivec3(dir.x+512.,-dir.z+512.,4);\n    } else if (-dir.z>max(abs(dir.x),abs(dir.y))){\n        dir /=-dir.z/512.;\n        return ivec3(-dir.x+512.,-dir.y+512.,5);\n    } else return ivec3(0,0,-1);\n}\nvec3 NetXYToRayDir(vec2 p){\n    vec2 major = floor(p/1024.);\n    vec2 minor = 1024.-mod(p,vec2(1024.));\n    \n    int face=-1;\n    if(major==vec2(0,1)){         face = 0;    \n    } else if(major==vec2(1,1)){  face = 2;    \n    } else if(major==vec2(2,1)){  face = 3;    \n    } else if(major==vec2(3,1)){  face = 5;    \n    } else if(major==vec2(1,0)){  face = 4;    \n    } else if(major==vec2(1,2)){  face = 1;\n    }\n    vec2 xy = minor - .5;\n    return XYFaceToRayDir(ivec3(xy,face));\n}\nvec2 RayDirToNetXY(vec3 rayDir){\n    ivec3 XYFace = RayDirToXYFace(rayDir);\n    if(XYFace.z==0){         return 1024.-vec2(XYFace.xy) + vec2(0,1)*1024.;\n    } else if(XYFace.z==1){  return 1024.-vec2(XYFace.xy) + vec2(1,2)*1024.;\n    } else if(XYFace.z==2){  return 1024.-vec2(XYFace.xy) + vec2(1,1)*1024.;\n    } else if(XYFace.z==3){  return 1024.-vec2(XYFace.xy) + vec2(2,1)*1024.;\n    } else if(XYFace.z==4){  return 1024.-vec2(XYFace.xy) + vec2(1,0)*1024.;\n    } else if(XYFace.z==5){  return 1024.-vec2(XYFace.xy) + vec2(3,1)*1024.;\n    } else return vec2(0);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dX3Rr","channel":0}],"code":"\nfloat A = 0.12;\nfloat B = 0.049;\n\nvoid mainCubemap( out vec4 O, in vec2 fragCoord, in vec3 rayOri, in vec3 rayDir )\n{\n\n    O = texture(iChannel0, rayDir);\n    ivec3 XYFace = RayDirToXYFace(rayDir);\n    vec4 U = texture(iChannel0, XYFaceToRayDir( ivec3((XYFace.xy/512)*512,0) + ivec3(XYFace.x%512,(XYFace.y + 1)%512,XYFace.z) ));\n    vec4 D = texture(iChannel0, XYFaceToRayDir( ivec3((XYFace.xy/512)*512,0) + ivec3(XYFace.x%512,(XYFace.y - 1)%512,XYFace.z) ));\n    vec4 L = texture(iChannel0, XYFaceToRayDir( ivec3((XYFace.xy/512)*512,0) + ivec3((XYFace.x - 1)%512,XYFace.y%512,XYFace.z) ));\n    vec4 R = texture(iChannel0, XYFaceToRayDir( ivec3((XYFace.xy/512)*512,0) + ivec3((XYFace.x + 1)%512,XYFace.y%512,XYFace.z) ));\n    \n    \n    int i = XYFace.z*4;\n    if(XYFace.x > 512) i++;\n    if(XYFace.y > 512) i+=2;\n    \n    if (XYFace.x%512 == 7 && XYFace.y%512 == 48 + 8 * (i)){\n        O.xy = vec2(cos(float(iFrame)/20.), sin(float(iFrame)/20.));\n    }\n    if (XYFace.x%512 <256 && (XYFace.y%512)/4 == 64){\n        O.x /= 1.+24.*fract(sin(float(XYFace.y))*123123.)+fract(sin(float(XYFace.x))*123123.);\n        O.y *= 0.9;\n    }\n    \n    O.y += (U.x-O.x)*A;\n    O.y += (D.x-O.x)*A;\n    O.y += (L.x-O.x)*A;\n    O.y += (R.x-O.x)*A;\n    O.x += O.y*B;\n    \n    \n    \n    if ((XYFace.x%512)/4 == 0 || (XYFace.y%512)/4 == 0){\n        O.x /= 1.+24.*fract(sin(float(XYFace.y))*123123.)+fract(sin(float(XYFace.x))*123123.);\n        O.y *= 0.9;\n    }\n    \n    \n    //fragColor = U + L + D + R)/4.;\n    \n    \n    \n    \n    /*\n\n\n    float size = texture(iChannel1, vec2(0)).x;\n    \n    vec2 mouseXY = iMouse.xy/size*1024.;\n    vec2 netXY = RayDirToNetXY(rayDir);\n    float l = length(mouseXY-netXY);\n    \n    vec3 col = 0.5 + 0.5*rayDir;\n\n    fragColor = vec4(col,1.0);\n    \n    ivec3 XYFace = RayDirToXYFace(rayDir);\n    float d0 = float(abs(XYFace.x-XYFace.y/2))/40.;\n    float d1 = float(abs(fragCoord.x/2.-fragCoord.y))/40.;\n    fragColor = mix(fragColor,vec4(1),max(0.,1.-d0));\n    fragColor = mix(fragColor,vec4(0),max(0.,1.-d1));\n    fragColor = mix(fragColor,vec4(0.5),max(0.,1.-l/100.));*/\n}","name":"Cube A","description":"","type":"cubemap"},{"inputs":[{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Calculate size in pixels of one cubemap face when drawn onto the screen\n\nvoid mainImage( out vec4 O, in vec2 fragCoord )\n{\n    vec2 mv = (iMouse.xy-vec2(iResolution.x-iResolution.y,0)/2.)/iResolution.y*512.;\n    \n    \n    \n    for(int i = 0; i < 6*4; i++){\n        vec4 m = texture(iChannel0, XYFaceToRayDir(ivec3(mv,i/4) + ivec3((i%2)*512,((i/2)%2)*512,0) ));\n        \n       // if(length(m.xy)==0.){\n            O.xy += m.xy;\n        //} else {\n        //    vec2 cc = normalize(m.xy);\n        //    O.xy += m.xy*mat2(cc,-cc.y,cc.x);\n        //}\n    }\n    if(fragCoord.x>1.){\n        O = texture(iChannel1, (fragCoord.xy-vec2(1,0))/iResolution.xy);\n    }\n    \n    \n}","name":"Buffer A","description":"","type":"buffer"}]}