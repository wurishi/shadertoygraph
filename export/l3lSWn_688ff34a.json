{"ver":"0.1","info":{"id":"l3lSWn","date":"1709377142","viewed":70,"name":"Ghost-like Energy Ripple","username":"JAMERES","description":"Ghost-like Energy Ripple","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ghost","ripple","energy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float diffuse_seconds = 0.55;\nconst float cutoff_radii = 0.33;\nconst float wave_length = 0.53/2.0;\n\nconst float PI = 3.1415926;\nfloat sdf_main(vec2 pos)\n{\n    float diffuse_velocity = 0.13/diffuse_seconds;\n    return length(pos) - diffuse_velocity*(iTime+sin(iTime*PI)/PI);\n}\n \nfloat polar_noise(float angle)\n{\n    float fbm0 = 2.5;\n    float fbm1 = 1.0*sin(angle*5.0);\n    float fbm2 = 0.335*sin(angle*10.0);\n    float fbm3 = 0.225*sin(angle*20.0+5.0*sin(iTime));\n    float fbm4 = 0.025*sin(angle*40.0);\n    return fbm0+fbm1+fbm2+fbm3+fbm4;\n}\nfloat polar(vec2 ndc)\n{\n    float tmp = atan(ndc.y/ndc.x);\n    if(tmp<0.0){\n        return PI+tmp;\n    }else{\n        return tmp;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 ndc = (fragCoord - iResolution.xy/2.0)/iResolution.xx;\n    float angle = polar(ndc);\n    \n    float sdf = sdf_main(ndc)+polar_noise(angle)*0.002;\n    \n    float looped_value = mod(sdf*(1.0/wave_length),1.0);\n    \n    float sharp_value = pow(looped_value,8.0);\n   \n    float vague_value = pow(looped_value,1.5);\n    \n    float cutoff = 1.0 - pow(length(ndc)*(1.0/cutoff_radii),3.0);\n    \n    if(sdf<0.0){\n        vec3 sharp_edge = vec3(0.9,looped_value*0.6,0.9)*sharp_value*polar_noise(angle);\n        vec3 vague_tail = vec3(0.9,looped_value*0.6,0.9)*vague_value;\n        fragColor = vec4((2.0*sharp_edge+1.6*vague_tail)*cutoff*pow(length(ndc), 1.0), 1.0);\n    }else{\n        fragColor = vec4(vec3(0.0),1.0);\n    }\n    //fragColor = vec4(vec3(cutoff),1.0);\n}","name":"Image","description":"","type":"image"}]}