{"ver":"0.1","info":{"id":"wdlfDX","date":"1589211340","viewed":333,"name":"infinite stairs - helix 1d2","username":"FabriceNeyret2","description":".","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","sdf","spiral","helix","short","helicoid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/tdlfWX\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float T = iTime, t=1.,a;\n    vec3  q = iResolution,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),        // ray direction\n          p = 30./q;                              // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 )\n        q = p.xzy - vec3(0,0,T),\n        t = abs(length(q.xy)-6.)-2.,              // bounding hollow cylinder\n        a = atan(q.y,q.x) - .3*T,\n        t = max(t, abs(fract(a*24./6.283+.6)-.3)*6.283/24. -.05),\n        t = max(t, sin(a-floor(q.z*4.)/4.*1.047 )),  // helix: stairs side\n        t = max(t, sin(a-q.z*1.047+3.) ),            // helix: roof side\n        p += t*D;                                 // step forward = dist to obj\n}\n","name":"Image","description":"","type":"image"}]}