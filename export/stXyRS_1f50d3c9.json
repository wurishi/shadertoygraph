{"ver":"0.1","info":{"id":"stXyRS","date":"1648174628","viewed":121,"name":"jyy","username":"natnatnat","description":"FÃ¼r Cintia =P","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["sun","triangle","circle","snake","square","moon","eclipse","j","cross","yang","yin"],"hasliked":0,"parentid":"ftyXWy","parentname":"j2d"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\nconst float PI = 3.14;\nconst float e = 2.71;\n\nconst float R0 = e/PI;\n\nconst vec4 background = vec4(0., 0., 0., 1.);\n\nvec2 rotZ(vec2 point, float angle) {\n    float c = cos(angle);\n    float s = sin(angle);\n    vec2 finalPoint = mat2(c, -s, s, c) * point;\n    return finalPoint;\n}\n\nvec3 drawCircle(vec2 uv, float R, float angle) {\n    uv = rotZ(uv, angle);\n    float yy = min(exp(-(2. * R * uv.x - R/2. * sin((PI/R) * uv.y) * cos(iTime + PI))/0.05), 1.);\n    float mask = 1. - step(R, length(uv));\n    float r = exp((-(abs(length(uv) - R)) + 0.01)/0.05);\n    return vec3(yy * mask + r);\n}\n\nvec4 draw(vec2 uv, float R, float angle, bool enableGradX) {\n    float r = length(uv);\n\n    vec2 pointC = vec2(R * cos(angle), R * sin(angle));\n    vec2 pointA = vec2(-R, 0.);\n    vec2 pointB = vec2(R, 0.);\n\n    vec3 c = drawCircle(uv, R, angle);\n    vec3 sq = background.rgb;\n    \n    if (enableGradX) {\n        sq = vec3(sin(uv.x) * sin(angle + PI/2.)/2.);\n    }\n\n    vec3 sn = vec3(exp(-abs(distance(uv, pointC)) * 10.));\n\n    vec2 uv1 = rotZ(vec2(uv.x + pointA.x, uv.y), angle/2.);\n    vec3 l1 = vec3(exp(-abs(uv1.x) * 100.));\n    vec2 uv2 = rotZ(vec2(uv.x + pointB.x, uv.y), (angle - PI)/2.);\n    vec3 l2 = vec3(exp(-abs(uv2.x) * 100.));\n    vec3 l3 = vec3(exp(-abs(uv.y) * 100.));\n\n    return vec4(c, 1.) + vec4(sq, 1.) +\n        vec4(sn, 1.) + vec4(l1, 1.) + vec4(l2, 1.)\n        + vec4(l3, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n\n    float angle = iTime * e/PI + PI/2.;\n    fragColor = draw(uv, R0, angle, true);\n}","name":"Image","description":"","type":"image"}]}