{"ver":"0.1","info":{"id":"MsKfz3","date":"1529870057","viewed":646,"name":"Pixelation Shader","username":"luka712","description":"Simple pixelation shader.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pixelation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float onePixelSizeX = 1.0 / iResolution.x;\n    float onePixelSizeY = 1.0 / iResolution.y;\n    \n    float cellSizeX =  4.0 * onePixelSizeX;\n    float cellSizeY = 4.0 * onePixelSizeY;\n    \n    float x = cellSizeX * floor(uv.x / cellSizeX);\n    float y = cellSizeY * floor(uv.y / cellSizeY);\n   \n     \n    // Output to screen\n    fragColor = texture(iChannel0, vec2(x,y));\n}","name":"Image","description":"","type":"image"}]}