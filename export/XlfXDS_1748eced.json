{"ver":"0.1","info":{"id":"XlfXDS","date":"1439233064","viewed":247,"name":"Crosshatch Circles","username":"umarniz","description":"Based on the 7000 circles piece by Hamid Naderi Yeganeh\n\nhttp://blogs.scientificamerican.com/symbiartic/mathematically-precise-crosshatching/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circlescrosshatch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nfloat circleOutline(in vec2 uv, in vec2 pos, in float radius, in float thickness)\n{\n    float circle = length(pos-uv)-radius;\n    float circleEdge = abs(circle);\n    return step(circleEdge, thickness);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-iResolution.xy + 2.* fragCoord.xy) / iResolution.xy;\n\n    float PI = 3.14159265359;\n\n    vec4 color = vec4(0.,0., 0., 0.);\n    \n    for (float k=0.;k<7000.;k+=1.)\n    {\n        // Define Circle\n        float x = (cos(38.*PI*k/7000.));\n        x = x*x*x;\n        float y = sin(36.*PI*k/7000.);\n        \n        vec2 orig = vec2(x,y)*0.7;\n        float radius = pow(sin(2.*PI*k/7000.), 2.)/3.;\n        float thickness = 0.003;;\n\n\n        // Create Circle\n        float circle = circleOutline(uv, orig, radius, thickness);\n        circle *= 0.03;\n\n        color += vec4(circle,circle,circle,1.0);\n\n    }\n\n    fragColor = color;\n}","name":"","description":"","type":"image"}]}