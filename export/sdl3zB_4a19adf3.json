{"ver":"0.1","info":{"id":"sdl3zB","date":"1616187366","viewed":229,"name":"Simple Julia Set V4","username":"tungster24","description":"a simple shader for the julia set.\nv3 adds shading","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal","julia","juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord/iResolution.xy;\n    vec3 res = iResolution;\n    vec4 m = iMouse;\n    float x = ((p.x-(res.x/2.0)/res.x*0.9+0.125))*2.0;\n    float y = (p.y-(res.y/2.0)/res.y)*2.0;\n    int iter = 0;\n    while (iter < 100) {\n        if (x * x + y * y >= 4.0) {break;}\n        float y1 = (2.0 * (x * y)) + 2.0*(m.y/res.y-res.x/1414.0);\n        float x1 = (x * x) - (y * y) + 2.0*(m.x/res.x-1.0);\n        x = x1;\n        y = y1;\n        if (x * x + y * y <= 4.0) {iter += 1;};\n        };\n        \n    float r = 0.0; \n    if ((x * x) + (y * y) <= 4.0) {r = 1.0;} else {r = float(iter)/20.0;};\n    fragColor = vec4(r,r,r,1.0);\n}","name":"Image","description":"","type":"image"}]}