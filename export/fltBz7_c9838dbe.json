{"ver":"0.1","info":{"id":"fltBz7","date":"1662845761","viewed":83,"name":"Spiraling 6","username":"91isprime","description":"An analog clock. ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["spirals"],"hasliked":0,"parentid":"Wt33zn","parentname":"spiraling 5"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float D_MAX = 5.0;\nconst float f = 1.0 / 60.0 / 60.0 / 12.0;\nconst float R_VOID = 20.0; //60.0;\nconst float PI = 3.14159265;\n\nconst vec4 BLACK = vec4(0,0,0,0);\nconst vec4 WHITE = vec4(1,1,1,0);\nconst vec4 GRAY = vec4(1,1,1,0) * .6;\nconst vec4 RED = vec4(1,0,0,0);\nconst vec4 GREEN = vec4(0,1,0,0);\nconst vec4 BLUE = vec4(0,0,1,0);\n\nvec4 alpha_blend(vec4 top, vec4 bottom, float alpha){\n    return mix(bottom,top,alpha);\n}\n\nfloat sdf_to_alpha(float d){\n    return clamp(-d,0.0,1.0);\n}\n\nfloat point_sdf(float t, vec2 xy0, float r_interest){\n    // t is time of day in uh radians\n    //PI/2.0 - ... rotate clockwise from pi/2\n    float theta = PI/2.0 - t * 2.0 * PI * f * r_interest;\n    vec2 xy = (r_interest + R_VOID) * vec2(cos(theta), sin(theta));\n    return length(xy-xy0)-D_MAX;\n}\n\nfloat hand(float t, float r_interest, vec2 xy0, float thickness, float height){\n    \n    float angle = t * 2.0 * PI * f * r_interest;\n    float back_height = 0.2 * height;\n    //rotate xy0 angle by angle\n    float r = length(xy0);\n    float theta = atan(xy0.y, xy0.x) + angle;\n    vec2 xy1 = r * vec2(cos(theta), sin(theta));\n    //bounding box sdf\n    float dx = abs(xy1.x)-thickness/2.0;\n    float dy = max(xy1.y-height,-xy1.y-back_height);\n    float sdf = max(dx,dy);\n    return sdf_to_alpha(sdf);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float r_max = min(iResolution.x, iResolution.y)/2.0;\n    vec2 xy0 = (fragCoord - iResolution.xy/2.0); // -w/2 to w/2\n    float r_int = max(round(length(xy0)) - R_VOID, 1.0);\n    float t = iDate.w;\n    float d_nearest = D_MAX;\n    \n    for(float i = -D_MAX; i<=D_MAX; i++){\n        float r = max(r_int+i, 1.0);\n        float dist = point_sdf(t, xy0, r);\n        d_nearest = min(d_nearest, dist);\n    }\n    float points_alpha = sdf_to_alpha(d_nearest);\n    \n    // points, hours, minutes, secondd. bottom to top\n    fragColor = alpha_blend(GRAY, WHITE, points_alpha);\n    fragColor = alpha_blend(BLACK, fragColor, hand(t,      1.0,       xy0, D_MAX*2.0, r_max*.9));\n    fragColor = alpha_blend(BLACK, fragColor, hand(t,      12.0,      xy0, D_MAX,  r_max*.7));\n    t = floor(t); // comment out for smooth seconds hand\n    fragColor = alpha_blend(RED, fragColor, hand(t, 12.0*60.0, xy0, D_MAX/2.0,  r_max*.8));\n    fragColor = alpha_blend(BLACK, fragColor, sdf_to_alpha(length(xy0)-1.5*D_MAX));\n}","name":"Image","description":"","type":"image"}]}