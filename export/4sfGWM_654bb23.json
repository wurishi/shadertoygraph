{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"cubemap","id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\nvec2 cs(float t) {\n\treturn vec2((pow(1.0+sin(t*3.11), 1.3)-.5) * (0.2 + 0.2*cos(t*2.31)), \n\t(pow(1.0+sin(t*4.0), 1.5)-.5) * (0.2 + 0.2*sin(t*1.4)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 uv2 = fragCoord.xy / iResolution.x;\n\tvec2 texc = fragCoord.xy / iResolution.y;\n\t\n\tfloat quant = 18.0;\n\tfloat tq = floor(iChannelTime[0]*quant)/quant;\n\tfloat rang = (tq)*0.1;\n\tmat2 rotation = mat2(cos(rang), sin(rang),\n\t\t\t   \t\t\t -sin(rang), cos(rang));\n\t\n\tvec2 coord = uv;\n\tvec3 dir = vec3((uv-vec2(0.5, 0.2))*3.0, -1.0);\n\tdir.xy += cs(tq)*0.1;\n\t\n\tdir.xz = rotation*dir.xz;\n\t\n\tvec4 bg = texture(iChannel1, dir);\n\t\n\tvec3 col = vec3(0.0);\n\tfloat glow = 0.0;\n\tvec2 e = vec2(0.1, 0.1) * 0.04;\t\n\tfloat gx = 0.0, gy = 0.0;\n\tfloat push = 5.0;\n\t\n\tgx += texture(iChannel0, uv + vec2(-e.x, 0)).r * 1.0 * push;\n\tgx += texture(iChannel0, uv + vec2(e.x, 0)).r * -1.0 * push;\n\tgy += texture(iChannel0, uv + vec2(0, -e.x)).r * 1.0 * push;\n\tgy += texture(iChannel0, uv + vec2(0, e.x)).r * -1.0 * push;\n\t\n\tfloat bg_sob = 0.0;\n\tbg_sob += texture(iChannel1, dir + vec3(vec2(-e.x, 0), 0.0)).r * 1.0 * push;\n\tbg_sob += texture(iChannel1, dir + vec3(vec2(e.x, 0), 0.0)).r * -1.0 * push;\n\tbg_sob += texture(iChannel1, dir + vec3(vec2(0, -e.x), 0.0)).r * 1.0 * push;\n\tbg_sob += texture(iChannel1, dir + vec3(vec2(0, e.x), 0.0)).r * -1.0 * push;\n\n\tglow = gx + gy;\n\tglow = max(-0.1, glow-0.1);\n\t\n\tfloat ang = atan(gy, gx);\n\tvec2 surface_dir = vec2(cos(ang), sin(ang));\n\tfloat lit = dot(surface_dir, vec2(-1.0))/2.0 + 0.5;\n\t\n\tfloat bg_mix = bg_sob * pow(length(uv2-vec2(0.5, 0.25)), 2.0)*3.0;\n\tcol = vec3(1.0, 0.4, 0.0) * (glow+pow(bg_mix, 2.0));\n\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sfGWM","date":"1371344321","viewed":461,"name":"sobel background","username":"cce","description":"add a hint of a rotating background to the chrome video","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sobel","video"],"hasliked":0,"parentid":"","parentname":""}}