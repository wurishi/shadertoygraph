{"ver":"0.1","info":{"id":"DltGzX","date":"1682859878","viewed":223,"name":"Truchet donut","username":"Bleuje","description":"My first truchet, inspired by leon and flopine.","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","truchet","donut"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// by @etiennejcb\n// using donut distortion from leon: https://www.shadertoy.com/view/XlfBR7\n// inspired by flopine\n\nfloat t;\n\nfloat R = 1.2;\nfloat r = 0.4;\nfloat L = 0.145;\n\nvec2 localUV;\nfloat glow = 0.;\nfloat type1;\nfloat type2;\nfloat i1,i2;\nfloat h;\n\nfloat map(vec3 p)\n{\n    float dist = 12345.;\n    \n    p.xy *= rot(0.4*t);\n    p.yz *= rot(0.65*t+PI/2.);\n\n    // donut distortion from leon : https://www.shadertoy.com/view/XlfBR7\n    vec3 pDonut = p;\n    pDonut.xz = displaceLoop(pDonut.xz, R);\n    pDonut.z *= R;\n    pDonut.xzy = pDonut.xyz;\n    \n    p = pDonut;\n    \n    p.xz *= rot(0.7*t);\n    \n    float repetitionLength = 0.314;\n    i1 = floor(p.y/repetitionLength);\n    p.y = repeat(p.y, repetitionLength);\n    \n    float cnt = 10.;\n    i2 = amodIndex(p.xz,cnt);\n    amod(p.xz,cnt);\n    p.x -= r;\n    \n    float q = 0.22*t-(0.082*i1+0.12*mod(i2,2.0)+0.015*i2)+12345.;\n    float qMod2 = mod(q,2.);\n    \n    float fp = 5.;\n    float rotIndex = floor(qMod2);\n    float r = ease(clamp(fp*qMod2-fp*rotIndex,0.,1.),2.2)+rotIndex;\n    p.xz *= rot(r*PI);\n    \n    float l1 = L;\n    float l2 = L;\n    dist = min(dist,sdBox(p,vec3(0.02,l1,l2))-0.013);\n\n    type1 = (p.x>=0.?0.:1.);\n    float qMod4 = mod(q+1.+type1,4.);\n    type2 = qMod4>1.5?1.:0.;\n    \n    localUV = p.yz/vec2(l1,l2);\n    h = p.x;\n    \n    glow += 0.003/(0.2+pow(0.01*abs(dist),0.5));\n    \n    return dist;\n}\n\n// NuSan\n// https://www.shadertoy.com/view/3sBGzV\nvec3 getNormal(vec3 p) {\n\tvec2 off=vec2(0.001,0);\n\treturn normalize(map(p)-vec3(map(p-off.xyy), map(p-off.yxy), map(p-off.yyx)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 a = fragCoord.xy / iResolution.xy;\n\tvec2 uv = (a - .5) * iResolution.xx / iResolution.yx;\n    \n    vec3 ro=vec3(uv*3.5,-10.), rd=vec3(0.,0.,1.);\n    \n    t = iTime;\n\n\tvec3 p;\n\tfloat res;\n\tfloat d = 0.;\n    bool hit = false;\n    vec3 nrml;\n    \n    float q;\n    \n    // raymarching loop\n\tfor (q = 0.; q < 1.; q += 1.0/44.0) {\n\t\tp = ro + rd*d;\n\t\tres = map(p);\n\t\tif (res<.001)\n        {\n            hit = true;\n            nrml = getNormal(p);\n            break;\n        }\n        d += res*0.8;\n\t}\n\n    \n    vec3 col = vec3(1.)-vec3(0.2)*length(uv);\n    float patternColorMix = 0.;\n    float otherMixer = 0.;\n    \n    if(hit)\n    {\n        // truchet pattern...\n        \n        if(type1==0.)\n            localUV *= rot(PI/2.*(i1+i2));\n        if(type2==0.)\n            localUV *= rot(PI/2.*float(randomInt(0,4,int(i1),int(i2))));\n        \n        float A = 4.2;\n        float B = 3.7;\n        \n        float pattern0 = sin(PI*clamp(A*length(localUV-vec2(1.))-B,0.,1.));\n        float pattern1 = sin(PI*clamp(A*length(localUV-vec2(-1.))-B,0.,1.));\n        \n        float pattern= min(1.,pattern0+pattern1);\n\n        glow += pattern;\n        patternColorMix += pattern*0.66;\n        // uncomment for a variant, quite glitchy\n        // otherMixer += max(0.,1.0-30.*abs(h));\n    }\n    \n    // color experiments...\n    \n    col = mix(col,vec3(0.4,0.65,1.),glow);\n    col = mix(col,vec3(0.6,0.6,0.8),otherMixer);\n    \n    float light = 0.7+0.2*dot(nrml,vec3(4.*sin(0.2*t+3.),1.*sin(0.3*t+2.),2.*sin(0.4*t)));\n    \n    vec3 blueColor = mix(vec3(0.4,0.3,1.0),vec3(1.,1.,1.),clamp(1.5*light,0.,1.2));\n    vec3 redColor = mix(vec3(1.2,0.3,0.4),vec3(1.,1.,1.),clamp(1.2-1.1*light,0.,1.0));\n    \n    col = mix(col,type1==0.?blueColor:redColor,patternColorMix);\n\n\tfragColor = vec4(col.xyz, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float PI = 3.141592;\n#define TAU (2.*PI)\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nint randomInt(int minVal, int maxVal, int seed1, int seed2) {\n    vec2 seeds = vec2(float(seed1), float(seed2));\n    float randomFloat = rand(seeds);\n    int range = maxVal - minVal + 1;\n    return int(floor(randomFloat * float(range))) + minVal;\n}\n\nmat2 rot(float a)\n{\n    float c = cos(a), s = sin(a);\n    return mat2(c,-s,s,c);\n}\n\n// from Inigo Quilez\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\n// from https://www.shadertoy.com/view/XlfBR7\nvec2 displaceLoop (vec2 p, float r)\n{\n    return vec2(length(p.xy)-r, atan(p.y,p.x));\n}\n\n// from https://www.shadertoy.com/view/XlfBR7\nfloat amod (inout vec2 p, float count)\n{\n    float an = TAU/count;\n    float a = atan(p.y,p.x)+an/2.;\n    float c = floor(a/an);\n    c = mix(c,abs(c),step(count*.5,abs(c)));\n    a = mod(a,an)-an/2.;\n    p.xy = vec2(cos(a),sin(a))*length(p);\n    return c;\n}\n\n// from https://www.shadertoy.com/view/XlfBR7\nfloat amodIndex (vec2 p, float count)\n{\n    float an = TAU/count;\n    float a = atan(p.y,p.x)+an/2.;\n    float c = floor(a/an);\n    c = mix(c,abs(c),step(count*.5,abs(c)));\n    return c;\n}\n\n// from https://www.shadertoy.com/view/XlfBR7\nfloat repeat (float v, float c){return mod(v,c)-c/2.; }\nvec2 repeat (vec2 v, vec2 c) { return mod(v,c)-c/2.; }\nvec3 repeat (vec3 v, float c) { return mod(v,c)-c/2.; }\n\nfloat ease(float p, float g) {\n  if (p < 0.5) \n    return 0.5 * pow(2.*p, g);\n  else\n    return 1. - 0.5 * pow(2.*(1. - p), g);\n}","name":"Common","description":"","type":"common"}]}