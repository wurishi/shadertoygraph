{"ver":"0.1","info":{"id":"432yRw","date":"1727100777","viewed":15,"name":"Parascope View","username":"int_45h","description":"A simple shader I made to mimic the look and feel of looking through a parascope","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["e"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// from https://iquilezles.org/articles/distfunctions2d/\nfloat sd_rounded_box(vec2 p, vec2 b, vec4 r)\n{\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\nvec2 distort_uv(vec2 u, float amount)\n{\n    u -= .5;\n    float d2 = dot(u,u);\n    u = u*(1.+amount*d2);\n    u += .5;\n    return u;\n}\n\n#define SAMPLES 4\nvec4 get_color(vec2 uv, vec2 d, float k)\n{\n    vec3 col = vec3(0);\n    for (int i=0; i<SAMPLES; i++)\n    {\n        col += vec3(\n            texture(iChannel0, uv+k*d*float(i)).r,\n            texture(iChannel0, uv).g,\n            texture(iChannel0, uv-k*d*float(i)).b\n        );\n    }\n    col /= float(SAMPLES);\n    return vec4(col, 1.);\n}\n\nfloat get_mask(vec2 uv)\n{\n    float m = sd_rounded_box(uv-.5, vec2(-.04), vec4(-.3));\n    m = smoothstep(0.45, .55, m);\n    m = min(max(m,0.),1.);\n    return 1.-m;\n}\n\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    vec2 uv = U/iResolution.xy;\n    const float k = .001;\n    const float a = -.5;\n    \n    float m = get_mask(uv);\n    vec2 dm = (vec2(\n        get_mask(uv + vec2(k,0)) - m,\n        get_mask(uv + vec2(0,k)) - m\n    ));\n    //dm = smoothstep(vec2(0.), vec2(1.), dm);\n    \n    uv = distort_uv(uv, a);\n    vec2 duv = distort_uv(uv+k, a)-uv;\n    \n    O = m*get_color(uv + .5*dm + .1*vec2(sin(iTime), cos(iTime)), dm, .3);\n    //O = vec4(abs(dm)*(1.-m), 0., 1.);\n}","name":"Image","description":"","type":"image"}]}