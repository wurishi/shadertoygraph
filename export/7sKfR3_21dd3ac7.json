{"ver":"0.1","info":{"id":"7sKfR3","date":"1658615769","viewed":80,"name":"boxes falling","username":"CanadianWarship","description":"test of for loops and fractional phase shift","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["red"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\nvec2 c = fragCoord.xy - iResolution.xy / 2. ; // [+-iRes.x/2] x [+-iRes.y/2]\nfloat dist = sqrt( dot(c,c) ); // [0 ~ inf]\nfloat pi = 3.141592;\nfloat ang = atan( c.y , c.x ); // [-pi ~ pi]\ndist = pow(dist,0.5);\n\nfloat bg = floor(sin(11.*ang)+0.)+1.;\nbg = clamp(bg, 0.,1.);\nfloat allboxes=0., box, f;\nfor(int i = 1; i < 12;i ++ ){\n    f = float(i);\n    box = 0.;\n    if( (cos( (ang-0.15) +f*pi/5.5) ) > 0.95 ) box = 1.; // hack to make this work\n    box = clamp(box,0.,1.);\n    // box = abs(box);\n    box *= smoothstep(floor(sin(dist*0.5 + iTime + 4.*fract(f/2.6))),0.0,1.); //other hack to make this work\n    allboxes += box;\n}\n\nfragColor = vec4( bg-allboxes , 0.0 , 0.0 , 1.0);\n}","name":"Image","description":"","type":"image"}]}