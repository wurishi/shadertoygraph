{"ver":"0.1","info":{"id":"ll3BDB","date":"1540844630","viewed":1145,"name":"weird and trippy","username":"levonchic","description":"trippy colored something, lol","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// MIT License (c) bitrate16\n#define A_CH   0.25\n#define B_CH   0.75\n#define R_SC   32.0\n#define PERIOD 2.0\n#define PI     3.14159265358979323846\n\nfloat polarCurve(float angle) {\n    return sin(angle * 16.0);\n}\n\nvec4 polarFrag(float angle, float radius, float ch_a, float ch_b) {\n    float rads = sin(radius - iTime * 3.0);\n    float radm = radius * rads;\n    float polc = polarCurve(angle + 0.2 * iTime * sign(radm));\n    float frag = abs(radm) * abs(polc);\n    \n    return frag * vec4(abs(sin(exp(sin(iTime * 1.5)))) * 0.43, abs(sin(exp(sin(iTime * 2.13)))) * abs(cos(rads)) * sign(polc), abs(sin(0.4 * exp(sin(iTime * 0.87)))) * sign(radm) * cos(sin(polc)), 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Constants\n    float MAX_RADIUS = min(iResolution.x, iResolution.y) / R_SC;\n    \n    // Get radius\n    vec2  radvec = fragCoord.xy - iResolution.xy / 2.0;\n    float radius = length(radvec);\n \t\n    // Get rotation angle [0.0 - 1.0]\n    float angle  = atan(radvec.y / radvec.x) / (PI * PERIOD) + 0.25;\n    if(radvec.x <= 0.0)\n        angle += 0.5;\n    #ifdef MIRROR\n    \tif(radvec.x <= 0.0)\n            angle = 1.0 - angle;\n    #endif\n    \n    float channel_a;\n    float channel_b;\n#ifdef yeah_now_this_code_will_fetch_a_texture_but_who_cares_lol\n    #ifndef SWAP\n    \tchannel_a = texture(iChannel0, vec2(angle, A_CH)).x;\n    \tchannel_b = texture(iChannel0, vec2(angle, B_CH)).x;\n    #else\n    \tchannel_b = texture(iChannel0, vec2(angle, A_CH)).x;\n    \tchannel_a = texture(iChannel0, vec2(angle, B_CH)).x;\n    #endif\n#endif\n    \n    radius /= MAX_RADIUS;\n    angle *= PI;\n    fragColor = polarFrag(angle, radius, channel_a, channel_b);\n}","name":"Image","description":"","type":"image"}]}