{"ver":"0.1","info":{"id":"MlG3RV","date":"1475512053","viewed":741,"name":"Sierpiński triangle animation","username":"piotrekli","description":"Sierpiński triangle animation. Press space to reset.","likes":0,"published":3,"flags":48,"usePreview":0,"tags":["2d","sierpinski","backbuffer","sierpiski"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define LERP(A,B,T) ((A)+((B)-(A))*(1.0-(T)))\n\n// function from http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\nfloat segmentDistance(vec2 v, vec2 w, vec2 p)\n{\n    float l2 = dot(w-v, w-v);\n    if (l2 == 0.0) return distance(p, v);\n    float t = max(0.0, min(1.0, dot(p-v, w-v)/l2));\n    vec2 projection = v + t*(w-v);\n    return distance(p, projection);\n}\n\nvec3 vertex(vec2 p, vec3 vxys)\n{\n   //if (dot(p-vxy, p-vxy)<0.00001) return vec3(1.0);\n   vec2 pos = LERP(p, vxys.xy, vxys.z);\n   if (pos.x < 0.0 || pos.y < 0.0 || pos.x > 1.0 || pos.y > 1.0) return vec3(0.0);\n   return texture(iChannel1, pos).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (texture(iChannel3, vec2(0.126953125, 0.5)).x > 0.5) {fragColor = vec4(0.0); return;}\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tvec3 oldCol = clamp(texture(iChannel0, uv).xyz, 0.0, 1.0);\n    vec3 newCol = vec3(0.0);\n    const vec3 v1 = vec3(0.1, 0.1, 2.0), v2 = vec3(0.9, 0.1, 2.0), v3 = vec3(0.5, 0.9, 2.0);\n    newCol += vertex(uv, v1)*vec3(1.5,0.5,0.5);\n    newCol += vertex(uv, v2)*vec3(0.5,1.5,0.5);\n    newCol += vertex(uv, v3)*vec3(0.5,0.5,1.5);\n    float md = 4.0/length(iResolution.xy);\n    if (segmentDistance(v1.xy, v2.xy, uv) < md) newCol = vec3(1.0);\n    if (segmentDistance(v2.xy, v3.xy, uv) < md) newCol = vec3(1.0);\n    if (segmentDistance(v3.xy, v1.xy, uv) < md) newCol = vec3(1.0);\n    fragColor = vec4(mix(newCol*2.0, oldCol, 0.99), 1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}