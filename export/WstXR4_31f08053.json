{"ver":"0.1","info":{"id":"WstXR4","date":"1571597883","viewed":285,"name":"Behind Closed Eyelids","username":"Saturos","description":"A MÃ¶bius transform of a simple fractal pattern with some parameter variation. Watch in full screen!","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["fractal","eye","trippy","pattern","transform","geometric","moebius","phosphene","visuals","closed","hypnagogic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 background = vec4(0,.5-distance(uv,vec2(.5)),0,0);\n    \n    vec2 z = (2.*fragCoord - iResolution.xy) / iResolution.xy;\n    z = moebius_transform(z, vec2(iTime*5e-2), vec2(.1), vec2(1e-3), vec2(0.));\n   \n    ivec2 tc = ivec2(mod(z, iChannelResolution[0].xy));\n    fragColor = background + texelFetch(iChannel0, tc, 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec2 moebius_transform(vec2 z, vec2 a, vec2 b, vec2 c, vec2 d) {\n    float alpha = a.x*z.x - a.y*z.y + b.x;\n    float beta  = a.x*z.y + a.y*z.x + b.y;\n    float gamma = c.x*z.x - c.y*z.y + d.x;\n    float delta = c.x*z.y + c.y*z.x + d.y;\n    \n    return vec2(alpha*gamma + beta*delta, beta*gamma - alpha*delta)\n    \t\t \t/ (gamma*gamma + delta*delta);\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    float ssin = .5*(sin(iTime*.5)+1.);\n    float ssinCb = ssin*ssin*ssin;\n    vec3 col = vec3(0.);\n    vec3 newCol = hsv2rgb(vec3(iTime*.1,1.,.5));\n    int depth = 5;\n    vec2 p = uv;\n    float s = 1.;\n    float sMin = pow(.5, float(depth));\n    float st = .0;\n    \n    while (true) {\n        p = abs(p - (s*=.5));\n        float thr = .05*(.5*ssinCb + s);\n        newCol -= hsv2rgb(vec3(0.,.025,.075));\n        \n        float dx = abs(p.x - .5*s);\n        if (dx < thr && p.y < .5*s) {\n            col = mix(newCol, col, smoothstep(st, thr, dx));\n        }\n        if (p.y < thr && p.x < .5*s) {\n            col = mix(newCol, col, smoothstep(st, thr, p.y));\n        }\n        if (s <= sMin) {\n            s *= .5;\n            if (dx < thr && p.y >= s && p.y < s + thr) {\n            \tcol = mix(newCol, col, smoothstep(st, thr, distance(vec2(s),p)));\n        \t}\n            break;\n        }\n    }\n    fragColor = vec4(col,1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}