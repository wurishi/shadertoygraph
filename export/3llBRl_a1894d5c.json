{"ver":"0.1","info":{"id":"3llBRl","date":"1597459558","viewed":138,"name":"Conformal Mapping","username":"kylehovey","description":"A really basic test of conformal mapping using GLSL","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mapping","conformal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 c_cartesian_to_polar(vec2 complex) {\n    return vec2(\n        length(complex),\n        atan(complex.y, complex.x)\n    );\n}\n\nvec2 c_polar_to_cartesian(float magnitude, float angle) {\n    return magnitude * vec2(cos(angle), sin(angle));\n}\n\nvec2 c_exp(vec2 complex) {\n    return c_polar_to_cartesian(exp(complex.x), complex.y);\n}\n\nvec2 c_log(vec2 complex) {\n    vec2 polar = c_cartesian_to_polar(complex);\n    \n    return vec2(log(polar.x), polar.y);\n}\n\nvec2 c_mult(vec2 a, vec2 b) {\n    return vec2(\n        a.x * b.x - a.y * b.y,\n        a.x * b.y + a.y * b.x\n    );\n}\n\nvec2 c_pow(vec2 a, vec2 b) {\n    return c_exp(c_mult(b, c_log(a)));\n}\n\nvec2 c_inverse(vec2 complex) {\n    vec2 polar = c_cartesian_to_polar(complex);\n\n    return c_polar_to_cartesian(1.0 / polar.x, -polar.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 xy = (2.0 * fragCoord - iResolution.xy) / iResolution.xy;\n    vec2 offset = vec2(iTime, 0.0);\n\n    fragColor = texture(iChannel0, c_exp(xy * 3.0) + c_pow(xy, vec2(5.0 * (sin(iTime) + 1.0) / 3.0 + 1.0, 0.0)) * 3.0 + offset);\n}","name":"Image","description":"","type":"image"}]}