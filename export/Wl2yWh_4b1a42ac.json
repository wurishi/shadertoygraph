{"ver":"0.1","info":{"id":"Wl2yWh","date":"1594297550","viewed":75,"name":"incoming taunt","username":"RomaNPE","description":"Animated segments for incoming taunt animation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["segment","aniamted"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distance_to_line_segment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 ba = b-a;\n    vec2 pa = p-a;\n    float h =clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0 );\n    return length(pa - h * ba);\n}\n\nvec3 pal(float progress) {\n\treturn mix(vec3(0.0, 0.0, 1.0), vec3(1.0, 0.0, 0.0), progress);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 sa = vec2(-1.0, 0.0);\n    vec2 sb = vec2(0.2, 0.1);\n    vec2 sc = vec2(-0.2, -0.1);\n    vec2 sd = vec2(1.0, 0.0);\n    \n    vec2 se = vec2(-0.9, 0.01);\n    vec2 sf = vec2(-0.85, 0.06);\n    \n    vec2 sg = vec2(-0.9, -0.02);\n    vec2 sh = vec2(-0.85, -0.06);\n        \n    float progress = sin(iTime * 0.2);\n    \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.yy;\n    float line_radius = mix(0.025, 0.01, uv.x  + 1.0 );\n    \n   \tvec2 a = sd;\n    vec2 b = sd;\n    vec2 c = sd;\n    vec2 d = sd;\n    \n        c = mix(sd, sc, smoothstep(0.0, 0.2, progress));\n    \tb = c;\n        a = c;\n   \n    if (progress >= 0.2) {\n     \tb = mix(sc, sb, smoothstep(0.2, 0.4, progress));\n        d = mix(sd, sc, smoothstep(0.22, 0.42, progress));\n        a = b;\n        c = sc;\n    }\n    \n    if (progress >= 0.4) {\n     \ta = mix(sb, sa, smoothstep(0.4, 0.6, progress));\n        b = sb;\n        c = mix (sc, sb, smoothstep(0.42, 0.62, progress));\n        d = mix(sd, c, smoothstep(0.22, 0.42, progress));\n    }\n    \n    if (progress >= 0.6) {\n        a = sa;\n        b = mix(sb, sa, smoothstep(0.62, 0.82, progress));\n        c = mix (sc, b, smoothstep(0.42, 0.62, progress));\n        d = b;\n    }\t\n    \n    float dist0 = distance_to_line_segment(uv, a, b);\n    float dist1 = distance_to_line_segment(uv, b, c);\n    float dist2 = distance_to_line_segment(uv, c, d);\n    \n    // combine distances\n    float dist = min(min(dist0, dist1), dist2);\n    \n    if (progress >= 0.9) {\n         line_radius = 0.004;\n     \ta = se;\n        b = mix(se, sf, smoothstep(0.9, 0.95, progress));\n        c = sg;\n        d = mix(sg, sh, smoothstep(0.9, 0.95, progress));\n        \n        dist1 = distance_to_line_segment(uv, a, b);\n    \tdist2 = distance_to_line_segment(uv, c, d);\n    \n    \tdist = min(dist1, dist2);\n    }\n    \n    if (progress >= 0.95) {\n       \n     \ta = mix(se, sf, smoothstep(0.95, 1.0, progress));\n        b = sf;\n        c = mix(sg, sh, smoothstep(0.95, 1.0, progress));\n        d = sh;\n        \n        dist1 = distance_to_line_segment(uv, a, b);\n    \tdist2 = distance_to_line_segment(uv, c, d);\n    \n    \tdist = min(dist1, dist2);\n    }\n   \n    \n    // get antialiased line segments from distance\n    float brightness = smoothstep(line_radius + 0.015, line_radius, dist);\n    \n    vec3 baseColor = pal(sin(iTime * 0.2));\n    vec3 result = mix(vec3(0.0), baseColor, brightness);\n    \n    fragColor = vec4(result, 1.0);\n}","name":"Image","description":"","type":"image"}]}