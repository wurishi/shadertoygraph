{"ver":"0.1","info":{"id":"WdfXzn","date":"1550390404","viewed":91,"name":"5901 - Skaczące kafelki","username":"heliosbeatz","description":"Praca zaliczeniowa","likes":2,"published":1,"flags":64,"usePreview":0,"tags":["jumpingtiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"llsGWH","filepath":"https://soundcloud.com/heliosbeatz/joyful_journey_2","previewfilepath":"https://soundcloud.com/heliosbeatz/joyful_journey_2","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \nautor Bernard M\nnr albumu 5901 \nProsty shader \"skaczący\" w rytm muzyki.\nPrzy pracy inspirowałem się projektami:\n\thttps://www.shadertoy.com/view/Wd23D3\n\thttps://www.shadertoy.com/view/4tyXWV\n\thttps://www.shadertoy.com/view/XlBBDt\njak również dokumentacją: \n\thttps://www.khronos.org/registry/OpenGL/specs/es/3.0/GLSL_ES_Specification_3.00.pdf\nkorzystałem również z kalkulatora graficznego Desmos:\n\thttps://www.desmos.com/calculator\njako tło dźwiękowe wykorzystałem swój stary utwór \"joyful_journey\"\n\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //definicja zmiennych:\n    float s = (texture(iChannel0, vec2(0.1, 0.0)).x); //float s oparta o parametry dzwieku z kanału 0\n    float t = iTime/2.; // float t - bieżący czas w sekundach podzielony przez 2\n    vec3 plytka =  vec3(8,2,4); // definicja pojedynczej plytki\n    vec3 kolor1 = vec3(s/2.,0,0); // definicja koloru 1 - odcień czerwieni zależny od parametru s\n\tvec3 kolor2 = vec3(.0,s,0);  // definicja koloru 2 - odcień zieleni zależny od parametru s\n\n    \n    // standardowa normalizacja wspołrzędnych oraz proporcji\n    vec2 uv = (fragCoord/iResolution.xy);\n\tuv.x *= iResolution.x / iResolution.y;\n    uv+= pow(sin(t),3.)+s; // funkcje matematyczne operujące na zmiennych s oraz t\n\tuv *= abs(sin(t)+2.);  \n    \n\n\t// kolorowanie pojedynczej płytki\n    plytka = mix(kolor1, kolor2,.1); \n    plytka.b += abs(1.05-length(fract(uv+s)));\n\n    // wyjście na ekran\n    fragColor = vec4(plytka,1.0);\n}","name":"Image","description":"","type":"image"}]}