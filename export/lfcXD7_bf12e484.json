{"ver":"0.1","info":{"id":"lfcXD7","date":"1714001567","viewed":90,"name":"CMYK Dot Shading","username":"JoeyTheGreat","description":"the idea is to look like spider-man: into the spider-verse","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["shading"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float max3(vec3 v)\n{\n    return max(max(v.x, v.y), v.z);\n}\n\nfloat brightness(vec3 v)\n{\n    return (v.x + v.y + v.z) / 3.0;\n}\n\nfloat deg2rad = 3.141 / 180.0;\n\nvec4 rgb2cmyk(vec3 rgb)\n{\n    float k = 1.0 - max3(rgb);\n    return vec4((1.0 - rgb - k) / (1.0 - k), k);\n}\n\nvec3 cmyk2rgb(vec4 cmyk)\n{\n    return (1.0 - cmyk.xyz) * (1.0 - cmyk.w);\n}\n\nvec3 getPixel(vec2 pos)\n{\n    return texture(iChannel0, pos).xyz;\n}\n\nvec2 rotSpace(vec2 pos, float rot)\n{\n    return vec2((cos(rot) * pos.x) + (sin(rot) * pos.y), (cos(rot) * pos.y) - (sin(rot) * pos.x));\n}\n\nbool renderDot(vec2 pixel, float fill, float dotSize, float gridRot)\n{\n    vec2 pos = rotSpace(pixel, gridRot);\n    return pow(2.0 * mod((pos.x / dotSize), 1.0) - 1.0, 2.0) + pow(2.0 * mod((pos.y / dotSize), 1.0) - 1.0, 2.0) <= 2.0 * fill;\n}\n\nfloat getFill(vec2 pos, float size, float rot, int color)\n{\n    vec4 cmykSum = vec4(0);\n    float pixelCount = 0.0;\n    for (int i = -int(size / 2.0); i <= int(size / 2.0); i++)\n    {\n        for (int j = -int(size / 2.0); j <= int(size / 2.0); j++)\n        {\n            cmykSum += rgb2cmyk(getPixel((pos + rotSpace(vec2(i, j), rot)) / iResolution.xy));\n            pixelCount ++;\n        }\n    }\n    cmykSum /= pixelCount;\n    return cmykSum[color];\n}\n\nvoid mainImage( out vec4 outColor, in vec2 pos )\n{\n    vec2 xy = pos/iResolution.xy;\n    vec3 camera = getPixel(xy);\n    vec4 gridRot = vec4(10.0, 25.0, 45.0, 75.0) * deg2rad;\n    float gridRes = 80.0;\n    float dotSize = iResolution.y / gridRes;\n    \n    \n    vec4 cmyk = vec4(0);\n    for (int i = 0; i < 4; i++)\n    {\n        float fill = getFill(pos, dotSize, gridRot[i], i);\n        if (renderDot(pos, fill, dotSize, gridRot[i]))\n        {\n            if (i == 3)\n            {\n                if (max3(cmyk.xyz) > 0.0)\n                    cmyk[i] += 0.75;\n                else\n                    cmyk[i] += 1.0;\n            }\n            else\n                cmyk[i] += 1.0;\n        }\n    }\n    \n   vec3 rgb = cmyk2rgb(cmyk);\n    \n    outColor = vec4(rgb, 0);\n}","name":"Image","description":"","type":"image"}]}