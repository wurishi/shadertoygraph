{"ver":"0.1","info":{"id":"7lKSRy","date":"1640947039","viewed":65,"name":"binos1233321","username":"JuanDeager","description":"binocular effect demo","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["effect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distanceFromScope(vec2 scope, vec2 uv)\n{\n    float d = distance(uv, scope);\n    return smoothstep(0.3, 0.20, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    uv.x *= aspect;\n    \n    float center = .5 * aspect;\n    vec2 scope1 = vec2(center - 0.22, 0.5);\n    vec2 scope2 = vec2(center + 0.22, 0.5);\n    \n    //float d = max(distanceFromScope(scope1, uv), distanceFromScope(scope2, uv));\n    float d = smoothstep(0.2, 0.5, distanceFromScope(scope1, uv) + distanceFromScope(scope2, uv));\n    fragColor = pow(vec4(d,d,d, 1.0f), vec4(1. / 2.2));\n}","name":"Image","description":"","type":"image"}]}