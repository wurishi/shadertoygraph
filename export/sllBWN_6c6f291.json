{"ver":"0.1","info":{"id":"sllBWN","date":"1650925201","viewed":44,"name":"Australian Indigenous Flag.","username":"beastnuts","description":"An easy first shader to learn.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simple","flag","australian","indigenous"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Distort uv.y with sine wave based on time\n    float t = uv.x*7. - 2.*iTime + uv.y*3.;   \n    uv.y += sin(t)*0.03;\n    \n    //Center the circle\n    uv -=.5;\n    //Make the circle round\n    uv.x*=iResolution.x/iResolution.y;\n    \n    //Final Colour. Defaults to 0.0(black).\n    vec4 fC;\n   \n    //If this pixel is in the bottom half of the screen, colour it red.\n    if(uv.y<0.0) fC=vec4(1.0,0.0,0.0,1.0);\n    \n    //Calculate the distance of this pixel to the center.\n    float d = length(uv);\n    //If this pixel is closer that .25 to the center, colour it yellow.\n    if (d < .25) fC = vec4(1.0,1.0,0.0,1.0);  \n    \n    //add shadows to image with cosine of t\n    fC *= .8 + cos(t)*0.25;\n    \n    // Output Final Colour to screen\n    fragColor = fC;\n}","name":"Image","description":"","type":"image"}]}