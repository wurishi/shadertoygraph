{"ver":"0.1","info":{"id":"stc3zN","date":"1635781760","viewed":86,"name":"The Simplest 3D Camera","username":"tkasch","description":"Made by this awesome tutorial  thttps://youtu.be/PBxuVlp7nuM","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 p)\n{\n    return length(cross(p-ro, rd)/length(rd));\n}\n\nfloat DrawPoint(vec3 ro, vec3 rd, vec3 p)\n{\n   float d = DistLine(ro, rd, p);    \n    d =  smoothstep(0.06, 0.05, d);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; // 0 <> 1\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float t = iTime;  \n    \n    vec3 ro = vec3(3.0 * sin(t), 2.0, -3.0*cos(t));\n    \n    \n    vec3 lookat = vec3(0.5);\n    float zoom = 1.0;\n    \n    vec3 f = normalize(lookat - ro);\n    vec3 r = cross(vec3(0.0, 1.0, 0.0), f);\n    vec3 u = cross(f, r);\n    \n    vec3 c = ro + f*zoom;\n    vec3 i = c + uv.x*r + uv.y*u;\n    \n    vec3 rd = i - ro;\n    \n  \n    \n    float d = 0.0;\n    d += DrawPoint(ro, rd, vec3(0.0, 0.0, 0.0)); \n    d += DrawPoint(ro, rd, vec3(0.0, 0.0, 1.0)); \n    d += DrawPoint(ro, rd, vec3(0.0, 1.0, 0.0)); \n    d += DrawPoint(ro, rd, vec3(0.0, 1.0, 1.0)); \n    d += DrawPoint(ro, rd, vec3(1.0, 0.0, 0.0)); \n    d += DrawPoint(ro, rd, vec3(1.0, 0.0, 1.0)); \n    d += DrawPoint(ro, rd, vec3(1.0, 1.0, 0.0)); \n    d += DrawPoint(ro, rd, vec3(1.0, 1.0, 1.0));\n    \n    fragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}