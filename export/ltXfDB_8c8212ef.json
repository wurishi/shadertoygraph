{"ver":"0.1","info":{"id":"ltXfDB","date":"1513142042","viewed":257,"name":"Rock Paper Scissors","username":"adrien_dl","description":"Found this https://www.gamedev.net/blogs/entry/2249737-another-cellular-automaton-video/ and wanted to try it on shadertoy!\nkeep pressed the key a (red) s (green) or d (blue) while sliding the mouse to use different color\nSpacebar to reset","likes":7,"published":1,"flags":48,"usePreview":0,"tags":["automata","life"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    ivec2 ij=ivec2(floor(fragCoord));\n\n\tfragColor = vec4(10.*texelFetch(iChannel0,ij,0).rgb,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define getK(i,j) texelFetch(iChannel1,ivec2(i,j),0).x\n#define getC(i,j) texelFetch(iChannel0,ivec2(U)+ivec2(i,j),0)\n\nbool test(int i, inout vec4 O, vec4 n) \n{ if(O[i] > 0.) \n    if(n[(i+1)%3]>0. && O[i]<1.) \n        O[i] += 0.1; \n    else if(n[(i+2)%3]>0.) \n    { \n        O[i] -= 0.1; \n        if(O[i]==0.) \n            O[(i+2)%3] = 0.1; \n    } \n return O[i] > 0.; \n}\n\nint rand(float n, vec2 co){\n    return int(n*fract(sin(dot(co ,vec2(12.9898,78.233))) * 43758.5453));\n}\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    vec2 uv=U/iResolution.xy;\n\n    if(iFrame==0)\n    {\n        O-=O;\n        O[rand(3.,uv)]++;\n        return;\n    }\n    if(getK(32,1)>0.)\n    {\n     \t//O=vec4(vec3(0.),1.);\n        return;\n    }\n    int r=rand(8.,uv+iTime);\n    if ( r == 4 ) r = 8; ivec2 kl = ivec2( r%3-1, r/3-1 );\n    \n    O=getC(0,0);\n    vec4 n=getC(kl.x,kl.y);\n    \n     if(! test(0,O,n) ) \n         if(! test(1,O,n) ) \n             if(! test(2,O,n) ) \n                 if(n.r>.1) \n                     O.r = n.r-0.1; \n                 else if(n.g>.1) \n                     O.g = n.g-0.1; \n                 else if(n.b>.1) \n                     O.b = n.b-0.1;\n    \n    if( iMouse.z > 0. && length( iMouse.xy - U ) < .1*iResolution.y )\n    {\n       \tif     ( getK(68,0) > 0.) O=vec4(0.,0.,1.,1.);\n        else if( getK(83,0) > 0.) O=vec4(0.,1.,0.,1.);\n        else if( getK(65,0) > 0.) O=vec4(1.,0.,0.,1.);\n        else                   O -= O;\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}