{"ver":"0.1","info":{"id":"ldccWn","date":"1518417863","viewed":115,"name":"Mandelbrot MoveZoom WASD+UP+DOWN","username":"RaifZK","description":"Mandelbrot MoveZoom Move(W+A+S+D)  Zoom(KeyUp+KeyDown)","likes":0,"published":1,"flags":48,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{ \nvec2 texture_uv=fragCoord.xy/iResolution.xy; \nvec3 Z = texture(iChannel0, texture_uv).xyz; \nfragColor = vec4(Z,1); \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//v2\nconst float KEY_SPACE = 32.5/256.0; \nconst float KEY_LEFT = 37.5/256.0; \nconst float KEY_UP = 38.5/256.0; \nconst float KEY_RIGHT = 39.5/256.0; \nconst float KEY_DOWN = 40.5/256.0; \nconst float KEY_W = 87.5/256.0; \nconst float KEY_S = 83.5/256.0; \nconst float KEY_A = 65.5/256.0; \nconst float KEY_D = 68.5/256.0; \n\nconst float KEY_PLUS = 44.5/256.0; \nconst float KEY_MINUS = 45.5/256.0; \n\n\n\n\n\nvoid mainImage( out vec4 f, in vec2 pixel_coord ){ \n\nbool ZF=true; \n\n\nif (iFrame==1) \n{ \nif (pixel_coord.x<2. && pixel_coord.y<2.) \n{ f=vec4(-2.5, 1.0, -1.5, 1.5); return; } \n} \n\n\n\n\nfloat n = 0.; \nfloat scale = 3.0; \nint iterations = 500; \nfloat PROC_SDVIG=0.075; \nfloat PROC_SDVIG_MV=0.01; \nfloat PROC_SDVIG_MVT=0.0075;\n\nvec2 c; \nvec2 Channe_uv=vec2(1.0,1.0)/iResolution.xy; \nvec4 Channe_value=texture(iChannel0,Channe_uv); \n\nfloat B_X1=Channe_value.x; \nfloat B_X2=Channe_value.y; \nfloat B_Y1=Channe_value.z; \nfloat B_Y2=Channe_value.w; \n\nfloat KX=abs(B_X1-B_X2)/iResolution.x; \nfloat KY=abs(B_Y1-B_Y2)/iResolution.y; \nc.x=B_X1+KX*(pixel_coord.x); \nc.y=B_Y1+KY*(pixel_coord.y); \n\nbool Z=false; \n\n\nif (Z==false && iMouse.z>0.) \n{ \nZ=true; \nfloat QS_X=abs(B_X1-B_X2)*PROC_SDVIG; \nfloat QS_Y=abs(B_Y1-B_Y2)*PROC_SDVIG_MV; \nif (iMouse.x <= iResolution.x*0.5) { QS_X=-QS_X; } \nif (iMouse.y <= iResolution.y*0.5) { QS_Y=-QS_Y; } \nB_X1+=QS_X; \nB_X2+=QS_X; \nB_Y1+=QS_Y; \nB_Y2+=QS_Y; \n\nKX=abs(B_X1-B_X2)/iResolution.x; \nKY=abs(B_Y1-B_Y2)/iResolution.y; \nc.x=B_X1+KX*(pixel_coord.x); \nc.y=B_Y1+KY*(pixel_coord.y); \n} \n\nfloat pressSpace = texture(iChannel1, vec2(KEY_UP ,0.25) ).x; \nif (Z==false && pressSpace>0.5) \n{ \nZ=true; \n\nfloat QS_X=abs(B_X1-B_X2)*PROC_SDVIG*0.5; \nfloat QS_Y=abs(B_Y1-B_Y2)*PROC_SDVIG*0.5; \n\nB_X1+=QS_X; \nB_X2-=QS_X; \nB_Y1+=QS_Y; \nB_Y2-=QS_Y; \n} \n\npressSpace = texture(iChannel1, vec2(KEY_DOWN ,0.25) ).x; \nif (Z==false && pressSpace>0.5) \n{ \nZ=true; \n\nfloat QS_X=abs(B_X1-B_X2)*PROC_SDVIG*0.5; \nfloat QS_Y=abs(B_Y1-B_Y2)*PROC_SDVIG*0.5; \n\nB_X1-=QS_X; \nB_X2+=QS_X; \nB_Y1-=QS_Y; \nB_Y2+=QS_Y; \n} \n\npressSpace = texture(iChannel1, vec2(KEY_A ,0.25) ).x; \nif (Z==false && pressSpace>0.5) \n{ \nZ=true; \nfloat QS=abs(B_X1-B_X2)*PROC_SDVIG_MVT; \nB_X1-=QS; \nB_X2-=QS; \n} \n\npressSpace = texture(iChannel1, vec2(KEY_D ,0.25) ).x; \nif (Z==false && pressSpace>0.5) \n{ \nZ=true; \nfloat QS=abs(B_X1-B_X2)*PROC_SDVIG_MVT; \nB_X1+=QS; \nB_X2+=QS; \n} \n\npressSpace = texture(iChannel1, vec2(KEY_W ,0.25) ).x; \nif (Z==false && pressSpace>0.5) \n{ \nZ=true; \nfloat QS=abs(B_Y1-B_Y2)*PROC_SDVIG_MVT; \nB_Y1+=QS; \nB_Y2+=QS; \n} \n\npressSpace = texture(iChannel1, vec2(KEY_S ,0.25) ).x; \nif (Z==false && pressSpace>0.5) \n{ \nZ=true; \nfloat QS=abs(B_Y1-B_Y2)*PROC_SDVIG_MVT; \nB_Y1-=QS; \nB_Y2-=QS; \n} \n\n\nif (Z==true) \n{ \nKX=abs(B_X1-B_X2)/iResolution.x; \nKY=abs(B_Y1-B_Y2)/iResolution.y; \nc.x=B_X1+KX*(pixel_coord.x); \nc.y=B_Y1+KY*(pixel_coord.y); \n} \n\n\n\nvec2 z = c*n; \nfor( int i = 0; i<iterations; i++ ) \n{ \nz = mat2(z,-z.y,z.x)*z + c; //v1// z = vec2( z.x*z.x - z.y*z.y, 2.*z.x*z.y ) + c; \nif( length(z)>16.0) break;  //v1// if( length(z)>2.0) break; \nn++; \n} \nvec4 tone = vec4(12,20,27,0); \nf = .5 + .5*cos( tone + .06*(n - log2(log2(dot(z,z)))) ); \n\n\n\nif (pixel_coord.x<=2. && pixel_coord.y<=2.) \n{f=vec4(B_X1,B_X2,B_Y1,B_Y2); return;} \n\n\n}","name":"Buf A","description":"","type":"buffer"}]}