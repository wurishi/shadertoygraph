{"ver":"0.1","info":{"id":"tltfRH","date":"1612276728","viewed":94,"name":"Rotating torus with trace","username":"nolibab","description":"A rotating torus with a dynamically receding trace","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["sdf","torus","rotating","trace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tfragColor = texture(iChannel0, fragCoord.xy / iResolution.xy);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define EPS 0.001\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\nfloat sdLink(vec3 p, float le, float r1, float r2) {\n\tvec3 q = vec3(p.x, max(abs(p.y) - le, 0.0), p.z);\n\treturn length(vec2(length(q.xy) - r1, q.z)) - r2;\n}\n\nfloat map(vec3 p) {\n\tp.xy *= rot(iTime * 0.7);\n//\tp.yz *= rot(radians(30.0));\n\tp.zx *= rot(iTime * 0.5);\n\treturn sdLink(p, 2.0, 1.0, 0.5);\n}\n\nvec3 getNormal(vec3 p) {\n\tconst vec2 eps = vec2(EPS, 0);\n\tfloat d = map(p);\n\treturn normalize(vec3(\n\t\tmap(p + eps.stt) - d,\n\t\tmap(p + eps.tst) - d,\n\t\tmap(p + eps.tts) - d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec3 rd = normalize(vec3((fragCoord.xy - iResolution.xy * 0.5) / iResolution.y, 1.));\n\tvec3 ro = vec3(0, 0, -8);\n\tvec3 light = normalize(vec3(1, 2, -3));\n\tvec3 color = texture(iChannel0, (fragCoord.xy+10.*vec2(sin(iTime/5.),cos(iTime/7.))) / iResolution.xy).rgb;\n\tfloat dist = 0.0;\n\n\tfor (int i = 0; i < 50; i++) {\n\t\tvec3 p = ro + rd * dist;\n\t\tfloat d = map(p);\n\t\tif (d < EPS) {\n\t\t\tcolor = vec3(1,1,2) * max(dot(light, getNormal(p)), 0.1);\n\t\t\tbreak;\n\t\t}\n\t\tdist += d;\n\t\tif (dist > 20.0) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfragColor = vec4(color, 1);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}