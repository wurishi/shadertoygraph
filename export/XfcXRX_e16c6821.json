{"ver":"0.1","info":{"id":"XfcXRX","date":"1714203995","viewed":56,"name":"Radar12","username":"Tonz","description":"radar","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["radar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323\n\nvec3 bgColor = vec3(0.0,1.0,0.0);\nint numConcentrics = 5;\nfloat concentricRadius = 0.05;\nfloat radius = 0.95;\nfloat spinSpeed = 0.05;\nfloat tailLength = 10.0;\n\nint gridCells = 9;\nfloat gridLineWidth = 0.056;\n\nfloat getAngle(vec2 coord){\n    float angle = atan(coord.y, coord.x);\n    if (angle < 0.0)\n        angle += 2.0 * PI;\n    return angle;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x -= 0.2; \n    uv.x *= (iResolution.x /iResolution.y);\n    \n    vec2 uvGrid =  fract((uv + 0.5) * float(gridCells));\n    uvGrid = abs(uvGrid * 2.0 - 1.0);\n    uvGrid = step(1.0 - gridLineWidth,uvGrid);\n    \n    \n    vec2 uvCirc = uv * 2.0 - 1.0;\n    float dst = length(uvCirc);\n    \n    float dstCon = (dst / radius) * float(numConcentrics);\n    dstCon = fract(dstCon);\n    dstCon = abs(dstCon * 2.0 - 1.0);\n    dstCon = step(1.0 - concentricRadius / radius,dstCon);\n    \n    float bgMask = 1.0 - step(radius,dst);\n    \n    float angle = getAngle(uvCirc);\n    angle = -angle / (2.0 * PI);\n   \n    \n    angle = fract(angle - iTime * spinSpeed);\n    angle = pow(angle,tailLength);\n   \n   \n    vec3 concentrics = bgColor * dstCon  * 0.5;\n    vec3 spinner =  angle * bgColor *0.8;\n    vec3 grid = bgColor * clamp((uvGrid.x + uvGrid.y),0.0,1.0) * 0.15;\n    \n    \n   \n    fragColor = vec4(spinner + clamp(grid + concentrics,0.0,0.5),1.0) * bgMask;    \n    //fragColor = vec4(grid,1.0);\n\n}","name":"Image","description":"","type":"image"}]}