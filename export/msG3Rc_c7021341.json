{"ver":"0.1","info":{"id":"msG3Rc","date":"1678873556","viewed":337,"name":"Modsurfer - Travolta Track","username":"GraphXDoses","description":"Modsurfer is the predecessor of guitar hero, launched back in 1992 for Amiga PC. Unfortunately it didnt got the attention it deserved.\n\nInspired by: [url]https://www.youtube.com/watch?v=M0CrP8GzqLc&ab_channel=djnest[/url]\n\nControls: A / D | Left / Right","likes":17,"published":1,"flags":112,"usePreview":0,"tags":["game","amiga","fake3d","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a)     mat2(cos(a), -sin(a), sin(a), cos(a))\n#define get(i)     texelFetch(iChannel0, ivec2(i,0), 0)\n#define spike(x,d) clamp(-(x/d)+1., 0., 1.)\n#define TILE(i)    get(i).w\n\nfloat txt=0., sc=56.25, n=-8.5;\nint CHR[] = int[23](0xE8C22E,0xE8C62E,0x11CD671,0x1E8C63E,0x11DD6B1,0x1E8FA51,0x118C62E,\n                      0x1E8FA10,0x1F21084,0x1F2109F,0x19D1173,4,0xE9D72E,0xCA109F,0xE8991F,\n                      0xE89A2E,0x14A7C84,0x1F8783E,0xF87A2E,0x1F08884,0xE8BA2E,0xE8BC2E,0);\n\nvoid glf(int i, V2 o)\n{\n    V2 u;\n    o=(o*sc*V2(-1,1))+.5; u=o;\n    o = floor(fract(o)*5.);\n    int px = int(floor(o).x + floor(o).y*5.);\n\n    txt += float((CHR[i]>>px)&1)*min(BLK(0.,1.,floor(u.x)), BLK(0.,1.,floor(u.y)));\n}\n\nvoid dec(float v, out int m,\n                  out int d,\n                  out int e,\n                  out int f)\n{\n    m = int((fract(v)*10.)+1e-4)+12;\n    d = int(fract(v/10.)*10.)+12;\n    e = int(fract(v/1e2)*10.);\n    f = int(fract(v/1e3)*10.);\n    \n    e = min(e+22*int(e == 0 && f == 0)+12, 22);\n    f = min(f+22*int(f == 0)+12, 22);\n}\n\n#define Z(i) glf(i,II-V2(n*(1.2/sc),0))\n#define C(i) Z(i); n+=1.;\n#define D(i) Z(i); n-=1.;\n\nfloat GetTile(float ops, float uu)\n{\n    float val = TILE(mod(ops-1.,16.)+3.);\n    return clamp(floor(ops) * BLK(val-1., val, (uu+.33)*4.5), 0., 1.);\n}\n\nvoid mainImage( out V4 O, V2 U )\n{\n    int m = 12,d = m,e = 22,f = e;\n    float\n    I = clamp(get(0).y-get(0).x, -1., 1. )*min(1., get(0).z),\n    ios =-.15*(get(1).x/DD), T = get(1).w;\n    V2 p = (U-R*.5) / R.y, G, II=p;\n\n    // PSEUDO-3D BALL //\n    p+=V2(get(1).x,.28);\n    p*= rot(I*radians(60.))*18.;\n    float\n    c = pets(0., length(p*.5)-.5),\n    s = sqrt(abs(.8-dot(p,p)*.5));\n    p = floor((p/s)-V2(0,1)*T);\n    s = mod(p.x+p.y, 2.);\n    \n    // PERSPECTIVE (KIND OF) //\n    G = (U-R*V2(.5,.0)) / R.y;\n    G.x/=2.35-G.y*2.7;\n    \n    float\n    uu  = G.x+ios,                  // LATERAL MOTION //\n    ops = (2./-log(G.y+.12))+T-1.5; // FORWARD MOTION //\n    \n    G.x = fract(uu*5.)-.5;\n    \n    // INTERLANE STRIPES //\n    float L = abs(dot(G, V2(1,0)))\n             -mix(.075, .025*mod(floor(ops), 2.), BLK(-.2,.2,uu));\n             \n    L = mix(1., mix(1., L, BLK(-.33,.33, uu)), pets(.75, G.y));\n\n    // LANE'S FRAMING //\n    O = mix(V4(0), V4(0,0,1.-floor((G.y+.2)*10.)/10., 1),\n            min(\n                min(pets(.55, abs(II.x)), 1.-(BLK(-.3,.3, uu))),\n                pets(.75, G.y)\n                )\n            );\n            \n    \n    // VERTICAL HIT INDICATOR \"SPIKE METER\" //\n    O = mix(O, V4(1,0,1,1)\n                *clamp(.55*BLK(-.2,.2, uu)+step(0.,\n                               spike(((float(iFrame)-get(1).y)/60.), .5)\n                               -dot(G*V2(1,(1./.75)),V2(0,1))),\n                        .2, .55),\n                pets(0.,L)*pets(.55, abs(II.x)));\n                \n    // LANE'S THICKERS EDGES //\n    float PAD = BLK(-.33,.33, uu)*pets(.75, G.y)*pets(.55, abs(II.x))\n                *BLK(.2, .8, fract((uu+.5)*5.));\n    \n    float RELPOS = ceil(((ios*(1./.15))+1.)-.5);\n    float JK = PAD*BLK(get(1).w-2.,get(1).w,floor(ops)) * BLK(RELPOS-1.,RELPOS,(uu*5.)+.45);\n    O = mix(O, V4(1, .62, .22, 1)*clamp(pets(.5,JK),.15,1.), PAD*GetTile(ops,uu));\n\n    O = mix(mix(O, V4(1), c), V4(1,0,0,1), s*c);\n    \n    // TRACK'S TITLE //\n    II.y-=.3;\n    C(0)C(1)C(2)C(3)C(1)C(4) C(22) C(0)C(1)C(5)C(5)C(6)C(7)C(8)C(9)C(1)C(2)\n    n+=13.;\n\n    // SCORE //\n    dec(get(2).w*.1,m,d,e,f);\n    D(10)D(m)D(11)D(d)D(e)D(f)\n    II.y+=.3;\n    \n    // MODSURFER LOGO //\n    O = mix(O, V4(.83, .71, .88, 1), txt);\n    V2 q = R/texelFetch(iChannel0, ivec2(2,0), 0).xy;\n    V4 Tex = texture(iChannel0, (U/R)/q)*step(.0, II.y);\n    O = mix(O, Tex, step(.05, length(Tex)));\n    \n    // FADE IN & FADE OUT //\n    O = mix(V4(0), O,\n            ss(1., 2., iTime)\n            -ss(TRK_T-2., TRK_T-1., get(0).w)\n            +ss(TRK_T-1., TRK_T-0., get(0).w)\n        );\n    \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define TRK_T      345.76\n#define ss(s,e,v)  smoothstep(s,e,v)\n#define R          iResolution.xy\n#define pets(c,v)  (1.-step(c,v))\n#define DD         .09\n#define BLK(l,u,v) (step(l,v)*pets(u,v))\n#define V2         vec2\n#define V4         vec4","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ltjSWd","filepath":"https://soundcloud.com/mod-662197179/travolta-track?si=05080f441a304ef2976d48f994f74522&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/mod-662197179/travolta-track?si=05080f441a304ef2976d48f994f74522&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define KEY(v)   step(1., texelFetch(iChannel0, ivec2(v,0), 0).x)\n#define STATE(v) mix(-1., 1., KEY(v))\n#define get(v)   texelFetch(iChannel1, ivec2(v), 0)\n#define getI(i)  get(V2(i,0))\n#define T        getI(0).w\n#define RESET(v) v *= pets(TRK_T-1., iChannelTime[2])\n#define Hx       6.\n#define SPD (\\\n                1.3\\\n                -ss(75.,76.,T)*.8\\\n                -(ss(96.,97.,T)*.2) \\\n                +(ss(100.,101.,T)*.3) \\\n                +(ss(142.,143.,T)*.4) \\\n                +(ss(264.,264.5,T)*.5) \\\n                -(ss(321.,322.,T)*.7) \\\n                +ss(336.,340.,T)*.5\\\n            )\n\n// (0 - 62)   : 63  * 16(packs of 2 bits) == 1008 bits > 1000 (minimum samples needed).\n// (63 - 176) : 114 * 32(singular bits)   == 3648 bits describing if tiles hold or not\n//             the next sample. (exceding the estimated maximum of 3552 tiles to be traveled)\n\n#define XX 0x11111111\n\nint HITS[] = int[](0xA99EAEE7,0xA69EFBA7,0x6EAADA95,0xB7B6B9D6,0x95AFFE99,0xAFEABF66,\n\t\t\t\t\t 0x99B6EE5E,0xA7EFB97A,0xA7EDFFAE,0xAAD56AEA,0xAB55AAEA,0xB695EAFF,\n\t\t\t\t\t 0xAAEAB995,0xEA55A9FF,0xEEEFDAA9,0xAA5A9AAB,0xBA9EAA9A,0x6BEEEA69,\n\t\t\t\t\t 0xD6EF5EA6,0xE9A7AEB9,0x666ABA9A,0x996ABAD6,0xA6576DB9,0xBABA9A79,\n\t\t\t\t\t 0xBBBFA97A,0x99DBAE69,0xEA79669F,0xA9E5669D,0xDA7ADF6D,0x6B9969FA,\n\t\t\t\t\t 0xAE5969DE,0xFDAEEAD6,0x697AF9A9,0x7ABE6A97,0xAAF9AAA5,0xEDBAA99A,\n\t\t\t\t\t 0xA9EAAE6E,0xA6AE5BA6,0xAEA65A6A,0xB9FE6A6B,0xA9A5A6EB,0xFBAAE965,\n\t\t\t\t\t 0xAAFA595A,0xAFE9655A,0xADE65ADA,0xFBEB9E99,0xBABDADBA,0x69E6AEE9,\n\t\t\t\t\t 0xA9E6B66A,0x9555BBBA,0x9AE6B6A6,0x99AFAFA5,0xAFAAE9A6,0xFAABE9A9,\n\t\t\t\t\t 0xBEB76596,0x9AEEA9AF,0xAAF9A9AB,0xF6F65A9B,0xFFB9AA69,0xA5A76FA5,\n\t\t\t\t\t 0xAAFF556A,0xAAAAAAAA,0xAAAA0000,\n                      \n                                                       0,0x00290884,0x44088488,4,0xA4402109,0x20221220,\n                    0x42122042,0x04204442,0x42222444,0x02002402,0x02481000,0x88040000,\n                    0x097FFF88,0x88904440,0x90842090,0x84412108,0x82408842,0x41108441,\n                    0x10822488,0x91248892,0x49109249,0x08004910,0x92492488,0x92492492,\n                    0x49249249,0x24924924,0x92484210,0x84210842,0x12492492,0x49249240,\n                    0x004AA055,0x0AA14AA5,0x02511111,XX,XX,XX,\n                    XX,XX,XX,XX,XX,XX,\n                    XX,0x11111111,0x11111111,0x11111111,0x11111111,0x11111111,\n                    0x11111111,0x11111111,0x11111111,0x11111111,0x11111111,0x11111111,\n                    0x11111111,0x11111111,0x11111111,0x11111111,0x11111111,0x11111111,\n                    0x11111111,0x11111111,0x11111111,0x11111111,0x11111111,0x11111111,\n                    0x11111111,0x11111111,0x11111111,0x11111111,0x11111111,0x11111111,\n                    0x11111111,0x11111111,0x11111111,0x11111111,0x11111111,0x11111111,\n                    0x11111111,0x11111112,0x48924924,0x92492492,0x49249249,0x24924924,\n                    0x92492492,0x49249249,0x24924924,0x92492492,0x49249249,0x24924924,\n                    0x92492492,0x49249249,0x24924924,0x92492492,0x49249249,0x24924924,\n                    0x92492492,0x49249249,0x24924924,0x92492492,0x49249249,0x24924924,\n                    0x92492492,0x49249249,0x24924924,0x92492492,0x49249249,0x24924924,\n                    0x92555555,0x55555555,0x55555555,0x55555555,0x5557F000,0);\n\nV2 S = V2(.45, .12);\n\nfloat sdLine(V2 p, V2 a, V2 b, float w)\n{ V2 pa = p-a, ba = b-a, n1 = normalize(ba), n2=n1.yx*V2(1,-1);\n  return max(abs(dot(pa-ba*.5,n2))-w*.75, abs(dot(pa-ba*.5,n1))-length(ba)/2.); }\n  \nfloat sdRBox(V2 p, V2 b, V4 r )\n{\n    r.xy = (p.x>0.) ? r.xy : r.zw;\n    r.x  = (p.y>0.) ? r.x  : r.y;\n    V2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.) + length(max(q,0.)) - r.x;\n}\n\nvoid Title(V2 G, out float glf, int N)\n{\n    #define BIT(i) float((reg[N]>>i)&1)\n    int reg[] = int[9](1,5,4,8,1,0,0,2,0);\n    \n    G = mix(G, V2(abs(G.x),G.y), BIT(0));\n    G = mix(G, V2(G.x,abs(G.y)), BIT(1));\n    float hj = BIT(2), flp = BIT(3); V4 w = V4(S.yy*2.,0,0),\n    J = V4(0,S.x-S.y*.75, -.5, .5);\n\n    // Border Gaps\n    #define _B glf = max(glf, -min(BLK(-.45,.45,G.y), BLK(-.45, .45, G.x)))\n\n    // CHAR    | M O D S U R F E R\n    // ID      | 0 1 2 3 4 5 6 7 8\n    \n    // BITS:\n    // mirrorX | 1 1 0 0 1 0 0 0 0\n    // mirrorY | 0 0 0 0 0 0 0 1 0\n    // hj      | 0 1 1 0 0 0 0 0 0\n    // flp     | 0 0 0 1 0 0 0 0 0\n    \n    // DECIMAL | 1 5 4 8 1 0 0 2 0\n\n    // M\n    glf = min(sdLine(G, J.yz, J.yw, S.y),\n              sdLine(G, V2(0, -.5), V2(S.x-.075,.5), S.y));\n    if(N == 0) { _B; return; }\n    \n    // S\n    glf = -min( sdLine(G-V2(0,(w+.076)*.51), J.zx+J.yx*.6, J.wx, S.y*.75),\n            -sdRBox(G-V2(0,(w+.076)*.55), V2(S.x-.01, w+.025), V4(w.x,8.,w.xx)*.85) );\n    G = mix(G, G*V2(-1), BIT(3));\n    glf = min(glf, -min( sdLine(G-V2(0,(w+.076)*.5), J.zx+J.yx*.6, J.wx, S.y*.75),\n            -sdRBox(G-V2(0,(w+.076)*.55), V2(S.x-.01, w+.025), V4(w.x,8.,w.x,w.x*.75)*.85) ) );\n    if(N == 3) { _B; return; }\n    \n    // O\n    // D\n    // U\n    glf = -min(-sdRBox(V2(G.x, G.y*pets(hj,G.y)), V2(S.x), w),\n           sdRBox(V2(G.x, G.y*pets(hj,G.y)), V2(S.x)-V2(S.y*1.2,S.y*1.8), V4(0)) );\n    if(N > 0 && N < 5) { _B; return; }\n    \n    // R\n    glf = -min( -min( min(sdRBox(G-V2(0,(w+.076)*.5), V2(S.x-.01, w+.05), V4(w)),\n            sdLine(G, -J.yz, -J.yw, S.y*.9) ), sdLine(G, J.xx, J.wz-V2(.065), S.y*.9) ),\n            sdRBox(G-V2(0,(w+.076)*.5), V2(.45-.165, .065), V4(0)) );\n    \n    if(N == 5 || N == 8) { _B; return; }\n    \n    // F\n    // E\n    glf = min( min(sdLine(G, J.zy+J.yx*.55, J.wy, S.y*1.5),\n            sdLine(G, J.zx+J.yx*.55, J.wx*V2(.6,1), S.y)),\n                sdLine(G, -J.yz, -J.yw, S.y*.9) );\n    if(N == 6 || N == 7) { _B; return; }\n}\n\nvoid mainImage( out V4 O, V2 U )\n{\n    int id = int((U.x + U.y*R.x) - floor(R.x/2.)), k, x, sup;\n    sup = 15-(int(getI(19).w-getI(1).w) % 16);\n    k  = (int(getI(19).w+float(sup)) % 16)+3;\n    x  = int(((-getI(1).x*4.)+.5)*3.)+1;\n    float bmp = step(.5, float(int(getI(k).y) == x));\n    \n    if(id == 0)\n    {\n        O = V4(clamp((STATE(65)/5.)+getI(0).x, 0., 1.),\n             clamp((STATE(68)/5.)+getI(0).y, 0., 1.),\n             clamp(SPD, .0, 2.),\n             iChannelTime[2]\n            );\n        \n        RESET(O.xy);\n    } else if(id == 1) {\n        O = V4( clamp( ( (KEY(65)-KEY(68))*(getI(0).z/90.) )\n                    +getI(1).x, -DD, DD),\n                mix(\n                    getI(1).y,\n                    float(iFrame), bmp\n                ),\n                float(iChannelTime[2] > getI(0).w),\n                ((1./60.)*10.*getI(0).z)\n                +getI(1).w);\n        \n        RESET(O);\n    } else if(id == 2){\n        if(iFrame == 0)\n        {\n            O = V4(R,0,0);\n        } else {\n            O = get(U);\n            float baa = getI(19).w, btop = step(.5, baa-O.z) * bmp;\n            O.z = mix(O.z, baa, step(.5, baa-O.z));\n            O.w += btop;\n            \n            RESET(O.zw);\n        }\n    } else if(id > 2 && id < 19){\n        k  = (16+sup-id+int(getI(19).w)) % 16 < 15 ? id : 19;\n        O = V4( getI(k).y );\n    } else if(id == 19){\n        if(iFrame == 0) O = V4(0);\n        O = getI(id);\n        float raa = floor(getI(1).w), stop = step(.5, raa-O.z) * step(.5, getI(1).z);\n        O.w += stop;\n        \n        int y = int(O.w);\n        O.z = mix(O.z, raa, step(.5, raa-O.z));\n        float ck = step(.5, float( (HITS[63+(y/32)] >> 31 - (y % 32)) & 1 ) );\n        O.x += ck * stop;\n        \n        int u = int(O.x)-1; // LAST CHANGE!\n        O.y = float((HITS[u/16] >> (30 - ((2*u)%32))) & 3) * step(.5, O.x) * ck * getI(1).z;\n        \n        RESET(O);\n    } else {\n        float g = clamp(float(iFrame)/Hx, 0., 1.), L ,W, glf;\n        V2 G = (U-R*V2(.5,.0)) / R.y, P, Q, dim;\n        G-=V2(-.01,.405+(Hx/R.y)*g);\n        Q=G; G.x/=1.52-G.y*1.5;\n\n        G*=V2(1, 1./-log(G.y-.25))*8.;\n        G-=V2(.5,2);\n        \n        P = floor(G);\n        G = fract(G)-.5;\n    \n        L = BLK(0., 1., P.y)*pets(.75,Q.y),\n        W = BLK(-5., 4., P.x);\n        \n        Title(G,glf,int(P.x+5.));\n\n        G*=L;\n\n        O = get(U);\n        if(iFrame <= int(Hx))\n        {\n            O = mix(O, mix(V4(.3, .16, .39, 1), V4(.69, .32, .78, 1), step(1., g)),\n                    pets(0., glf)*L*W\n                );\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}