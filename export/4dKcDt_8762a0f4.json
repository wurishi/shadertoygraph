{"ver":"0.1","info":{"id":"4dKcDt","date":"1523834130","viewed":360,"name":"Gallows","username":"dila","description":"Attempt at creating some atmosphere.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","previewfilepath":"/media/ap/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x) {\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat mat = 0.0;\n\nfloat bridge(vec3 p) {\n    p.y += 2.0;\n    float k = 1.9;\n    float id = floor(p.z / k + 0.5);\n    vec3 q = abs(p);\n    float z = abs((fract(p.z * k) - 0.5) / k);\n    return max(q.y - 0.1, max(q.x - 2.0, z - 0.24));\n}\n\nfloat grid(vec3 p) {\n    p.y -= 2.3;\n    vec3 f = (fract(p / 2.5) - 0.5) * 2.5;\n    float h = max(abs(p.y), abs(f.z)) - 0.125;\n    float g = max(abs(f.x) - 0.4, abs(p.y) - 0.15);\n    return min(h, g);\n}\n\nfloat swing(vec3 p) {\n    float h = 3.3;\n    float k = floor(p.z / 4.0);\n    p.y -= h + 2.0;\n    p.xy *= rot(sin(iTime * 2.0 + k * 2.0) * 0.13);\n    p.y += h;\n    float z = (fract(p.z / 4.0) - 0.5) * 4.0;\n    vec3 q = abs(vec3(p.x, p.y, z));\n    float r = max(q.x - 0.1, max(q.y - h, q.z - 0.1));\n    float b = max(q.x - 0.3, max(abs(p.y + h), q.z)) - 0.2;\n    float c = max(abs(p.y - h), q.z) - 0.1;\n    float e = max(q.x - 0.5, max(abs(p.y + h), q.z)) - 0.15;\n    return min(r, min(b, min(c, e)));\n}\n\nfloat walls(vec3 p) {\n    vec3 a = abs(p);\n  \tfloat w = 4.0 - a.x;\n    float q = abs(p.x) - 1.0;\n    float g = grid(vec3(p.y, q, p.z));\n    return min(w, g);\n}\n\nfloat map(vec3 p) {\n    mat = 0.0;\n    float b = bridge(p);\n    float w = walls(p);\n    float g = grid(p);\n    float s = swing(p);\n    float d = min(g, min(b, w));\n    if (s < d) {\n        mat = 1.0;\n        d = s;\n    }\n    return d;\n}\n\nvec3 normal(vec3 p)\n{\n  vec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r) {\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        t += map(o + r * t);\n    }\n    return t;\n}\n\nvec3 tex(vec3 p) {\n    vec3 ta = texture(iChannel0, p.yz).xyz;\n    vec3 tb = texture(iChannel0, p.xz).xyz;\n    vec3 tc = texture(iChannel0, p.xy).xyz;\n    return (ta * ta + tb * tb + tc * tc) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 r = normalize(vec3(uv, 0.8));\n    vec3 o = vec3(2.3, -0.5, iTime);\n    \n    r.xz *= rot(-0.5);\n    //r.xy *= rot(sin(iTime) * 0.05);\n\n    float t = trace(o, r);\n    float wm = mat;\n    vec3 w = o + r * t;\n    vec3 sn = normal(w);\n    float fd = exp(-map(w) * 10.0);\n    float aoc = fd * map(w + sn * 1.3);\n\n    vec3 lpos = vec3(0.0, 14.0, iTime - 2.0);\n    vec3 ldir = w - lpos;\n    float ldist = length(ldir);\n    ldir /= ldist;\n    float lt = trace(w + sn * 0.1, -ldir);\n    float s = max(sign(lt - ldist), 0.0);\n    s = mix(0.1, 3.0, s);\n    float sl = max(dot(sn, -ldir), 0.0);\n    s *= sl / (1.0 + ldist * ldist * 0.01);\n\n    vec3 lit = vec3(0.0, 0.5, 1.0) * s;\n    lit += vec3(0.0, 0.3, 2.5) * max(sn.y, 0.0) * s;\n    lit += vec3(0.5, 0.5, 0.0) * max(abs(sn.x), 0.0) * s;\n    lit += vec3(1.0, 1.0, 0.0) * s * s;\n    \n    vec3 te = tex(w);\n    \n    vec3 ref = reflect(r, sn);\n    vec3 cm = texture(iChannel1, ref).xyz;\n    cm *= exp(-max(w.y * 2.0, 0.0));\n  \tcm *= max(dot(-ldir, sn), 0.0);\n\n    float fog = 1.0 / (1.0 + t * t * 0.01);\n    vec3 fc = mix(te, cm, wm) * lit * fog * aoc;\n    fc *= exp(-max(w.y * 0.25, 0.0));\n\n    fragColor = vec4(sqrt(fc), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}