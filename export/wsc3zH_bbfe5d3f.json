{"ver":"0.1","info":{"id":"wsc3zH","date":"1567767086","viewed":226,"name":"Heart-beat","username":"shaderKing","description":"Heartbeat","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["heartbeat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Bisous from Leon\n\n// Music from:\n// https://soundcloud.com/steelcitydancediscs/a-ghettohousedrummachine\n\n// heart function from:\n// https://www.desmos.com/calculator/lncpsghko4\n\n// text\n#define grid 16.\n#define cell 1./16.\nconst int kA=177,kB=178,kC=179,kD=180,kE=181,kF=182,kG=183,kH=184,kI=185,kJ=186,kK=187;\nconst int kL=188,kM=189,kN=190,kO=191,kP=160,kQ=161,kR=162,kS=163,kT=164,kU=165,kV=166;\nconst int kW=167,kX=168,kY=169,kZ=170,kSpace=80;\n\nvec2 getSymbol (int key)\n{\n\treturn vec2(mod(float(key),grid),floor(float(key)/grid));\n}\n\nvec2 getLetterUV (vec2 target, vec2 offset)\n{\n    vec2 uvLetter = target;\n    uvLetter.x = uvLetter.x * 0.45 + 0.017;\n    uvLetter += offset / grid;\n    float crop = step(target.x, cell) * step(target.y, cell);\n    crop *= step(0., target.x) * step(0., target.y);\n    return uvLetter * crop;\n}\n\nfloat getText (vec2 target)\n{\n    int symbols[] = int[] ( kB,kI,kS,kO,kU,kS );\n    int count = symbols.length();\n    vec2 space = vec2(0.5,1);\n    vec2 textUV = vec2(0);\n    for (int i = 0; i < count; ++i) {\n        vec2 offset = vec2(i,0)/grid;\n        offset.x -= float(count)/grid/2.;\n        offset.y -= cell/2.;\n    \ttextUV += getLetterUV(target - offset, getSymbol(symbols[i]));\n    }\n    return texture(iChannel3, textUV).r;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Common stuff\n    vec3 color = vec3(0);\n    float time = iTime;\n    const float pi = 3.14159;\n    const float pi2 = 3.14159 * 2.;\n    float aspect = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 uvViewport = uv * 2. - 1.;\n    uvViewport.x *= aspect;\n    \n    // Displace UV\n    vec2 uvHeart = uvViewport * 2.;\n    uvHeart.x *= 0.9;\n    uvHeart += vec2(0.0, 0.25);\n    float a = pi2 * texture(iChannel0, uvViewport+vec2(0.1,0.2)*time).r;\n    a += pi2 * texture(iChannel0, uvViewport+vec2(-0.15,-0.08)*time).r;\n    a += time;\n    vec2 offset = vec2(cos(a), sin(a)) * 0.03;\n    uvHeart += offset;\n    uvHeart.y -= abs(sin(uv.x)*0.2);\n    \n    // Heart from: https://www.desmos.com/calculator/lncpsghko4\n    float thinHeart = 0.02;\n\tfloat plotter = (thinHeart/(pow(uvHeart.x,2.)*pow(uvHeart.y,3.)-(pow(pow(uvHeart.x,2.)+pow(uvHeart.y,2.)-1.,3.))));\n    float signP = sign(plotter);\n    plotter += smoothstep(0.0, 0.2, plotter);\n    plotter = abs(plotter);\n    \n    // Polar coordinates\n    float angle = atan(uvViewport.y, uvViewport.x) * 3.;\n    float radius = (length(uvViewport) - 0.5);\n    vec2 uvPolar = vec2(angle, radius);\n    uvPolar.x = mod(abs(sin(uvPolar.x)),1.);\n    uvPolar.y = uvPolar.y * 2. - 0.5;\n    \n    // Sound FFT\n    float thinSignal = 0.1;\n    plotter += -(thinSignal/(texture(iChannel2, uvPolar).r-uvPolar.y));\n    float signP2 = sign(plotter);\n    plotter = abs(plotter);\n    \n    // Background\n    float thinBack = 0.2;\n    uvPolar = vec2(angle, radius);\n    uvPolar.x *= 60.0;\n    uvPolar.y = (uvPolar.y-0.5) * 1.;\n    float fadeCenter = clamp(length(uvViewport)*2.-2.,0.,1.);\n    plotter += fadeCenter * clamp(abs(thinBack/(sin(uvPolar.x)-uvPolar.y)),0.,1.);\n    \n    // Colors\n    vec3 red = vec3(0.5,0.2,0.2);    \n    vec3 blue = vec3(0.1,0.2,0.5);  \n    vec3 yellow = vec3(0.9,0.6,0.2);\n    vec3 gray = vec3(0.2,0.2,0.25);\n    vec3 colorP = mix(red, gray, 1.-clamp(signP,0.,1.));\n    colorP = mix(colorP, yellow, 1.-clamp(signP2,0.,1.));\n    color = mix(color, colorP, plotter);\n    \n    // Text\n    vec2 uvText = uvViewport;\n    uvText.x *= 3.;\n    uvText *= 0.12;\n    uvText.x += sin(uvHeart.y*2.+time)*0.08;\n    uvText.y += sin(uvHeart.x*4.+time)*0.01;\n    color = mix(color, vec3(1.), getText(uvText));\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}