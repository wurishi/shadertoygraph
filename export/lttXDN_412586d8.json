{"ver":"0.1","info":{"id":"lttXDN","date":"1479768751","viewed":136,"name":"color wheel","username":"polyrhythm","description":"exploring color and step stuff","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28318530718\n\n\n\nvec3 hsb2rgb(in vec3 c) {\n\tvec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0),\n\t\t\t\t\t\t\t 6.0) - 3.0) - 1.0,\n\t\t\t\t\t 0.0,\n\t\t\t\t\t 1.0);\n\trgb = rgb * rgb * (3.0 - 2.0 * rgb);\n\n\treturn c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float aspect = iResolution.x/iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv -= 0.5;\n    uv.x *= aspect;\n\n\tvec2 pos = vec2(0.0, sin(cos(iTime))) * 0.25;\n\tvec3 colour = vec3(0.0);\n\tfloat wheelSize = abs(sin(iTime)) * 0.04 + 0.3;\n\n\tvec2 toCenter = vec2(pos) - uv;\n\tfloat angle = atan(toCenter.y, toCenter.x);\n\tfloat radius = length(toCenter) * 2.0 * (1.0 / wheelSize);\n\n\tfloat shading;\n\tfloat hue = (angle / TWO_PI) + iTime * 0.1;\n\tif (uv.y > 0.0) {\n\t\tshading = 1.0 - length(toCenter) * 4.0 + length(toCenter);\n\t} else {\n\t\tshading = 1.0;\n\t\tradius = length(toCenter) - 1.0;\n\t\thue = 0.0;\n\t}\n\n\tcolour = hsb2rgb(vec3(hue,\n\t\t\t\t\t\t  radius,\n\t\t\t\t\t\t  shading));\n\n\tif (length(toCenter) >= wheelSize) {\n\t\tcolour = mix(vec3(1.0) - vec3(step(0.0, uv.y)),\n\t\t\t\t\t vec3(step(0.0, uv.y)),\n\t\t\t\t\t smoothstep(0.0, 1.0, length(toCenter) * 2.5 - wheelSize));\n\t}\n\n\tif (uv.y < 0.0) {\n\t\tcolour -= 1.75 * vec3(smoothstep(1.0, 0.0, abs(uv.y)));\n\t}\n\n\tfragColor = vec4(colour, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}