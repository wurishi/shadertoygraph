{"ver":"0.1","info":{"id":"NdyGD1","date":"1631418027","viewed":111,"name":"Spinny Frenzy","username":"xXx_T0SHIII_xXx","description":"Just something interesting I made using what I've learned from Tutorials and articles. \n\nHuge thank you to everyone who comments helpful tips and advice on my projects. It really means alot to learn for you guys and I really appreciate it! ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simple","colorful","animated","trippy","looping","satisfying"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589\n\nfloat Xor(float a, float b)\n{\n    return a*(1.-b)+b*(1.-a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n//Control Variables\nfloat t = iTime;\nfloat tiling = 4.;\nfloat tiles = 4.;\nfloat r = .3;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    //Rotation variables\n    float A = PI*t/10.;\n    float e = cos(A);\n    float u = sin(A);\n    \n    //Rotate uv using rotation matrice\n    uv *= mat2(e,-u,u,e);\n    \n    //scale uv\n    vec2 bv = uv*tiling;\n    \n    //create grid\n    vec2 gv = fract(bv)-.5;\n    \n    //make ids\n    vec2 id = floor(bv);\n    vec2 id2 = fract(id/(tiles))-.5;\n    \n    //Make Circles\n    float d = length(uv);\n    float d2 = length(gv);\n    float d3 = length(id);\n    \n    //Smooth Circles\n    float c = smoothstep(r,r-1.5/iResolution.y,d);\n    float c2 = smoothstep(r,r-1.5/iResolution.y,d2);\n    float q = 0.;\n    \n    //Take in account circles adjacent to each other for overlapping\n    for(float y=-1.;y<=1.;y++)\n    {\n        for(float x=-1.;x<=1.;x++)\n        {\n            vec2 offs = vec2(x,y);\n            float d5 = length(gv - offs);\n            float d4 = length(id2+offs)*.3;\n            \n            r =  mix(.3,1.5,sin(t-d4)*.5+.5); \n            q =Xor(q, smoothstep(r,r-1.5/iResolution.y,d5));\n            \n        }\n    }\n    \n    \n    \n\n   //Visualize\n    vec3 col = vec3(0.);\n    col += q;\n    col.r *= sin(t-d)*2.;\n    col.g *= cos(t+d2)*3.;\n    col.b *= cos(col.r*col.g)*.5+.5;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}