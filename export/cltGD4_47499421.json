{"ver":"0.1","info":{"id":"cltGD4","date":"1682614354","viewed":62,"name":" rotational symmetry 3-2","username":"Acre","description":"I see a 3d torus.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iTime (iTime/2.0)\nconst float pi = acos(-1.0);\nfloat sdCircle( in vec2 p, in float r ) \n{\n    return length(p)-r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    float AA=3.0/min(iResolution.x, iResolution.y);\n    vec3 col=vec3(0.0);\n    float d=0.0;\n    for(float i=0.0;i<36.0;i++)\n    {\n        vec2 t_p=vec2(cos(i*iTime/pi)*cos(iTime/pi),sin(i*iTime/pi)*sin(iTime/pi));\n        d=sdCircle(p+t_p,0.2);\n\n        col = mix( col, vec3(1.0), smoothstep(AA,0.0,abs(d)));\n    }\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}