{"ver":"0.1","info":{"id":"3lSGDV","date":"1561128872","viewed":266,"name":"Phantom balls","username":"edo_m18","description":"Phantom balls","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["phantom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///\n/// This post cloned from below created by kaneta.\n///  https://www.shadertoy.com/view/wl2GWG\n///\n/// Also Phantom Mode by aiekick\n/// https://www.shadertoy.com/view/MtScWW\n\n#define repeat(p, span) mod(p, span) - (0.5 * span)\n\nmat3 camera(vec3 ro, vec3 ta)\n{\n    vec3 up = normalize(vec3(0, 1, 0));\n    vec3 cw = normalize(ta - ro);\n    vec3 cu = normalize(cross(cw, up));\n    vec3 cv = normalize(cross(cu, cw));\n    return mat3(cu, cv, cw);\n}\n\nfloat sdSphere(vec3 p, float r)\n{\n    float s = r + fbm(p * 2.0 + iTime);\n    return length(p) - s;\n}\n\nfloat map(vec3 p)\n{\n    p = repeat(p + 2., 4.0);\n    return sdSphere(p, 0.8);\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.0001, 0);\n    float d = map(p);\n    vec3 n = d - vec3(\n        map(p - e.xyy),\n        map(p - e.yxy),\n        map(p - e.yyx));\n    return normalize(n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n\tvec3 col = vec3(0);\n    \n    vec3 ro = vec3(sin(iTime * 0.2), 1. + sin(iTime) * 0.2, iTime);\n    vec3 ta = vec3(0, 1., iTime + 1.);\n    \n    vec3 ray = camera(ro, ta) * normalize(vec3(uv, 2.5));\n    \n    vec3 p;\n    \n    float d = 0., t = 0.01;\n    float ac = 0.;\n    \n    for (int i = 0; i < 64; i++)\n    {\n        p = ro + ray * t;\n        \n        d = map(p);\n        \n        // Phantom Mode\n        d = max(abs(d), 0.02);\n        \n        ac += exp(-d * 3.);\n        t += d;\n    }\n    \n    col = vec3(ac * 0.01);\n    \n    vec3 fog = vec3(0.5, 0.8, 1.5) * t * 0.05;\n    col *= fog;\n    \n    float fog2 = t * 0.015;\n    col += fog2;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"mat3 m = mat3( 0.00,  0.80,  0.60,\n                         -0.80,  0.36, -0.48,\n                         -0.60, -0.48,  0.64);\n\nfloat hash(float n)\n{\n    return fract(sin(n) * 43758.5453);\n}\n\nfloat noise(in vec3 x)\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    \n    f = f * f * (3.0 - 2.0 * f);\n    \n    float n = p.x + p.y * 57.0 + 113.0 * p.z;\n    \n    float res = mix(mix(mix(hash(n +   0.0), hash(n +   1.0), f.x),\n                                  mix(hash(n +  57.0), hash(n +   58.0), f.x), f.y),\n                            mix(mix(hash(n + 113.0), hash(n + 114.0), f.x),\n                                   mix(hash(n + 170.0), hash(n + 171.0), f.x), f.y), f.z);\n    return res;\n}\n\nfloat fbm(vec3 p)\n{\n    float f;\n    f   = 0.5000 * noise(p); p = m * p * 2.02;\n    f += 0.2500 * noise(p); p = m * p * 2.03;\n    f += 0.1250 * noise(p);\n    return f;\n}","name":"Common","description":"","type":"common"}]}