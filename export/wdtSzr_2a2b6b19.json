{"ver":"0.1","info":{"id":"wdtSzr","date":"1571357252","viewed":186,"name":"rotation experiment","username":"sobriquet","description":"experimenting with rotation (practice for the Book of Shaders tutorial).","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["abstract","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n/* This shader is an experiment inspired by Edna Andrade's\n   artwork Yellow Bounce:\n\nhttps://woodmereartmuseum.org/explore-online/collection/yellow-bounce\n\nHolding down the mouse button toggles on the colors.\n\nIt's still under development and probably needs some additional tweaking.\n\nThe visual pattern in Yellow Bounce can be mathematically reconstructed\nin GeoGebra.\n\nhttps://www.geogebra.org/m/vdhzp8jg\n\n*/\n\n#define PI 3.14159265\n#define C  0.35355339\n#define y1 vec3(1.,207./255.,0.)\n#define g1 vec3(0.,159./255.,63./255.)\n#define b1 vec3(91./255.,159./255.,1.)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aa = 0.005 * (2000./max(iResolution.x,iResolution.y));\n    vec2 uv = 9.*fragCoord/iResolution.xy;\n    float h = (iResolution.x/(iResolution.y/9.));\n    \n    uv.x /= iResolution.y/iResolution.x;\n\tuv = fract(uv);    \n    uv.xy -= vec2(.5);\n\n    float f1 = (floor((fragCoord.x/(iResolution.x/h))));\n    float f2 = (floor((fragCoord.y/(iResolution.y/9.))));\n\n    float f3 = atan((f2-4.5)/4.5, (f1-(h/2.))/(h/2.));\n    \n    float fa = (floor(((f1+f2)-1.)/2.)+1.)*(PI/6.) + floor((f1+f2)/2.)*(PI/3.);\n\n    float ax = PI/3. - fa + PI*sin(iTime+f3);\n\n    uv = mat2(cos(ax),-sin(ax),sin(ax),cos(ax))*uv;\n\n    float d = length(uv.xy);\n    \n    vec3 col = vec3(0.);\n    \n    col += ((smoothstep(0.5-(aa*(4./3.)),0.5+(aa*(4./3.)),(uv.y+.5))*b1\n            *smoothstep(C+aa, C-aa, d))\n           +(smoothstep(0.5+(aa*(4./3.)),0.5-(aa*(4./3.)),(uv.y+.5))*g1\n            *smoothstep(C+aa, C-aa, d))\n            +smoothstep(C-aa, C+aa, d)*y1)*(float(iMouse.z>0.))\n          +((smoothstep(0.5-(aa*(4./3.)),0.5+(aa*(4./3.)),(uv.y+.5))\n            *smoothstep(C+aa, C-aa, d))\n            +smoothstep(C-aa, C+aa, d)/2.)*(1.-float(iMouse.z>0.));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}