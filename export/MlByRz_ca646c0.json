{"ver":"0.1","info":{"id":"MlByRz","date":"1507141816","viewed":144,"name":"Horizontal Only Box Blur","username":"RagingHibiscus","description":"RubyBlur!!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["horizontalboxblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColour, in vec2 fragCoord )\n{\n    int samples = 2;\n    float blurStrength = 0.02f;\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 blurredColour = vec3(0);\n\t\t\n\tfor (int i = 0; i < samples * 2; i++) {\n\t\tfor (int j = 0; j < samples * 2; j++) {\n\t\t\tblurredColour += texture(iChannel0, uv + vec2(i, 0) * (blurStrength/float(samples))).xyz\n\t\t\t\t / pow(float(samples) * 2., 2.);\n\t\t}\n    }\n\t\n\tfragColour = vec4(blurredColour, 1.0);\n}","name":"Image","description":"","type":"image"}]}