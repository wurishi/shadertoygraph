{"ver":"0.1","info":{"id":"43j3WW","date":"1708457027","viewed":48,"name":"tryout02","username":"nameless1","description":"bubblejump ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bubble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 coordinateSquare(in vec2 startPoint)\n    {\n        return vec2(\n                startPoint.x * startPoint.x -startPoint.y*startPoint.y,\n                2.0*startPoint.x*startPoint.y\n        );\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 coordinate = fragCoord/iResolution.x;\n    \n    float scale = 4.0;\n    coordinate *=scale;\n    \n    coordinate += vec2(-2.3,-1.1);\n    \n    int maxIterations = 256;\n    \n    vec2 startPoint = vec2(0.3,0.1);\n    \n    for (int i=0; i < maxIterations; i ++)\n    {\n        vec2 oldstartPoint = startPoint;\n        startPoint = coordinateSquare(coordinate) + coordinate + coordinateSquare(coordinate- sin(iTime)*cos(iTime)*cos(iTime))+coordinateSquare(coordinate+sin(iTime)* cos(iTime)*sin(iTime)) ;\n        \n        \n        if(dot(startPoint,startPoint) > 20.0) {\n            float brightness = float(i) / float(maxIterations);\n            //vec3 weights = vec3(i+10,i+10,i+35);\n            //fragColor = vec4(vec3(brightness)*weights,1.0);\n            fragColor = vec4(0.3,0.0,0.3,0.7);\n            break;\n        } else {\n            // Time varying pixel color\n            vec3 col = 0.1 + 0.3*sin(iTime+coordinate.xyx+vec3(3,1,5));\n            fragColor = vec4(col,0.5);\n            //fragColor = vec4(0.0,0.0,0.0,1.0);\n        }\n    }\n\n\n}","name":"Image","description":"","type":"image"}]}