{"ver":"0.1","info":{"id":"4ttfRN","date":"1538835121","viewed":567,"name":"MattC's Linear Gradient Shader","username":"mchiasson","description":"Multi-step linear gradient. ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["gradient","linear","html5"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n * This shader genrates the same exact output than the following HTML5 code: \n *\n *     var ctx = document.getElementById('canvas').getContext('2d');\n *\n *     var lin = ctx.createLinearGradient(50,10,300,75);\n *     lin.addColorStop(0, 'red');\n *     lin.addColorStop(0.33, 'yellow');\n *     lin.addColorStop(0.66, 'lime');\n *     lin.addColorStop(1.0, 'blue');\n *\n *     ctx.fillStyle = lin;\n *     ctx.fillRect(0, 0, 800, 600);\n *\n * https://codepen.io/mchiasson/pen/gBwXEP\n *\n * Enjoy!\n *\n **/\n\n\n// Hardcoded 4 Color Stops as a demonstration.\nvec4 color0 = vec4(1,0,0,1);\nvec4 color1 = vec4(1,1,0,1);\nvec4 color2 = vec4(0,1,0,1);\nvec4 color3 = vec4(0,0,1,1);\nfloat colorStop0 = 0.0;\nfloat colorStop1 = 0.33;\nfloat colorStop2 = 0.66;\nfloat colorStop3 = 1.0;\n    \n// Starting and ending points\nfloat sx = 50.0;\nfloat sy = 10.0;\nfloat ex = 300.0;\nfloat ey = 75.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 start = vec2(sx, iResolution.y - sy);\n    vec2 end = vec2(ex, iResolution.y - ey);\n\n    vec2 dt = end - start;\n    vec2 pt = fragCoord - start;\n    float t = dot(pt, dt)/ dot(dt, dt);\n\n    vec4 color;\n    color = mix(color0, color1, clamp((t - colorStop0)/(colorStop1 - colorStop0), 0.0, 1.0));\n    color = mix(color,  color2, clamp((t - colorStop1)/(colorStop2 - colorStop1), 0.0, 1.0));\n    color = mix(color,  color3, clamp((t - colorStop2)/(colorStop3 - colorStop2), 0.0, 1.0));\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}