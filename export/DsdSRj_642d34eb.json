{"ver":"0.1","info":{"id":"DsdSRj","date":"1680101373","viewed":100,"name":"Pixel Grid","username":"ragekit","description":"Attempt at creating a pixel perfect grid of points using only float uvs","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grid","pixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 GridId2d(vec2 x,float count){\n    vec2 a = floor(x*count);\n    return a;\n}\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nbool allEquals(float a,float b,float c,float d){\n    return a == b && b== c && c ==d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = rotateUV(uv,iTime*.1);\n    uv.x += sin(iTime*.5)*.1;\n    float count = 50.0;\n    \n    vec2 dx = dFdx(uv);\n    vec2 dy = dFdy(uv);\n    \n    vec2 a = uv;\n    vec2 b = a + dx;\n    vec2 c = a + dy;\n    vec2 d = a + dx + dy;\n    \n    vec2 aid = GridId2d(a,count);\n    vec2 bid = GridId2d(b,count);\n    vec2 cid = GridId2d(c,count);\n    vec2 did = GridId2d(d,count);\n    \n    bool horiz = allEquals(aid.x,bid.x,cid.x,did.x);\n    bool vert = allEquals(aid.y,bid.y,cid.y,did.y);\n    \n    \n    \n    vec3 col = vec3(1,1,1);\n    if(!horiz && !vert){\n        col = vec3(0,0,0);\n    }\n  \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}