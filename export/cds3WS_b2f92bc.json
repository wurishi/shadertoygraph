{"ver":"0.1","info":{"id":"cds3WS","date":"1666730654","viewed":102,"name":"cyberpunk watch","username":"timmaffett","description":"1024 cyberpunk shader https://www.shadertoy.com/view/csX3DB \nmorphed into a watch","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["noise","effect","cyberpunk"],"hasliked":0,"parentid":"csX3DB","parentname":"cyberpunk 1024"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWELVE_HOUR_CLOCK     1\n\n// segment function modified from https://www.shadertoy.com/view/MdfGzf\nfloat segment(vec2 uv, bool On)\n{\n\tif (!On) return 0.0;\n\tfloat seg = (1.0-smoothstep(0.08,0.09+float(On)*0.02,abs(uv.x)))*\n\t\t\t    (1.0-smoothstep(0.46,0.47+float(On)*0.02,abs(uv.y)+abs(uv.x)));\n\tif (On) seg *= (1.0-length(uv*vec2(3.8,0.9)));//-sin(iTime*25.0*6.26)*0.04;\n\telse seg *= -(0.05+length(uv*vec2(0.2,0.1)));\n\treturn seg;\n}\n\n// sevenSegment function modified from https://www.shadertoy.com/view/MdfGzf\nfloat sevenSegment(vec2 uv,int num)\n{\n\tfloat seg= 0.0;\n    seg += segment(uv.yx+vec2(-1.0, 0.0),num!=-1 && num!=1 && num!=4                    );\n\tseg += segment(uv.xy+vec2(-0.5,-0.5),num!=-1 && num!=1 && num!=2 && num!=3 && num!=7);\n\tseg += segment(uv.xy+vec2( 0.5,-0.5),num!=-1 && num!=5 && num!=6                    );\n   \tseg += segment(uv.yx+vec2( 0.0, 0.0),num!=-1 && num!=0 && num!=1 && num!=7          );\n\tseg += segment(uv.xy+vec2(-0.5, 0.5),num==0 || num==2 || num==6 || num==8           );\n\tseg += segment(uv.xy+vec2( 0.5, 0.5),num!=-1 && num!=2                              );\n    seg += segment(uv.yx+vec2( 1.0, 0.0),num!=-1 && num!=1 && num!=4 && num!=7          );\n\t\n\treturn seg;\n}\n\n// showNum function modified from https://www.shadertoy.com/view/MdfGzf\nfloat showNum(vec2 uv,int nr)\n{\n\tif (abs(uv.x)>1.5 || abs(uv.y)>1.2) return 0.0;\n\tfloat seg= 0.0;\n\tif (uv.x>0.0){\n\t\tnr /= 10;\n\t\tseg += sevenSegment(uv+vec2(-0.75,0.0),nr);\n\t} else seg += sevenSegment(uv+vec2( 0.75,0.0),int(mod(float(nr),10.0)));\n\treturn seg;\n}\n\n// display colon\nfloat showColon(vec2 uv)\n{\n    uv.y -= 0.5;\n\tfloat seg = (1.0-smoothstep(0.08,0.09+0.02,abs(uv.x)))*\n\t\t\t    (1.0-smoothstep(0.16,0.17+0.02,abs(uv.y)+abs(uv.x)));\n\tseg *= (1.0-length(uv*vec2(3.8,0.9)));//-sin(iTime*25.0*6.26)*0.04;\n\n    uv.y += 1.0;\n\tfloat seg2 = (1.0-smoothstep(0.08,0.09+0.02,abs(uv.x)))*\n\t\t\t    (1.0-smoothstep(0.17,0.17+0.02,abs(uv.y)+abs(uv.x)));\n\tseg2 *= (1.0-length(uv*vec2(3.8,0.9)));//-sin(iTime*25.0*6.26)*0.04;\n\n\treturn seg + seg2;\n}\n\n\n// hash function copy from https://www.shadertoy.com/view/4djSRW\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 colorPalette(float t, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return a + b * cos(2.*3.1415926*(c*t+d));\n}\n\nfloat noise(vec2 pos) {\n    vec2 i = floor(pos);\n    vec2 f = fract(pos);\n    \n    float a = hash12(i);\n    float b = hash12(i + vec2(1, 0));\n    float c = hash12(i + vec2(0, 1));\n    float d = hash12(i + vec2(1, 1));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(a, b, u.x), mix(c, d, u.x), u.y);\n}\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  // Test outside the circle to look like round watch\n  vec2 uvTest = (gl_FragCoord.xy-.5*iResolution.xy)/iResolution.y;\n\n  float absX = uvTest.x*uvTest.x;\n  float absY = uvTest.y*uvTest.y;\n  if(sqrt(absX + absY) >0.49) {\n    if(sqrt(absX + absY)<0.50) \n      fragColor = vec4( 0.5 + 0.5*cos(iTime+uvTest.xyx+vec3(0,2,4)), 1.0);\n    else\n      fragColor = vec4(0.);\n    return;\n  }\n  // end make round\n  \n\tvec2 uv = ((fragCoord.xy-0.5*iResolution.xy) / iResolution.y) * 1.7;\n    vec3 color0 = 0.1 + 0.2*cos(iTime*2.+uv.xyx+vec3(0,2,4));\n\n\tuv *= vec2(-4, 4);\n\tuv.x += uv.y/12.0*sin(iTime*2.);\n    uv = rotate2d(noise((uv + vec2(iTime*.5)) * 2.5 + .5) * .2) * uv;\n\n\n    int hour = int(iDate.w/3600.);\n#if TWELVE_HOUR_CLOCK\n    if( hour > 12 ) hour -= 12;\n    if( hour == 0 ) hour = 12;\n#endif\n    int minute = int(mod(iDate.w/60.,60.));\n \n    //noblickcolonfloat sec = iDate.w;\n    //noblickcolonbool evenSec = floor(float(floor(sec/2.0)) * 2.0) == floor(sec);\n\n\n    // minute\n    uv.x += 1.7;\n\tfloat seg = 0.0;\n\tseg += showNum(uv,minute);\n    \n    //noblickcolon if(evenSec) {\n    uv.x -= 1.7;\n    seg += showColon(uv);\n    uv.x += 1.7;\n    //noblinkcolon}\n    \n    // hour\n    uv.x -= 3.4;\n    seg += showNum(uv,hour );\n    \n    vec3 color1 = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    vec3 finalColor = vec3(0);\n    finalColor = colorPalette(uv.x*.1 + iTime*.5, vec3(.5), vec3(.5), vec3(1.), vec3(0, .33, .67));\n\tfinalColor *= seg;\n    finalColor = smoothstep(color1, finalColor, 1. - vec3(seg));\n    finalColor += smoothstep(0.8, 0.9, 1. - seg) * color0;\n\n\tfragColor = vec4(finalColor,1.0);\n\t\n}","name":"Image","description":"","type":"image"}]}