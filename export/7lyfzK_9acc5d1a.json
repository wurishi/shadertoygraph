{"ver":"0.1","info":{"id":"7lyfzK","date":"1664826846","viewed":223,"name":"Squaring the Torus","username":"jt","description":"Implementation of Ian Gambini's \"181 x 181 simple perfect squared square torus of order 24\" - see [url=http://www.squaring.net/sq/spt/st/st.html]squared tori[/url]. More sources in comments.\nCodegolf [url=https://www.shadertoy.com/view/stGBzd]here[/url].\n","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["simple","torus","torus","square","tileable","order","24","perfect","squared","squaring","181","gambini"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/7lyfzK Squaring the Torus by jt\n// implementation of \"a 181 x 181 simple perfect squared (square) torus of order 24\"\n// as described in http://www.squaring.net/sq/spt/st/st.html Squared Tori\n\n// This pattern was found by Ian Gambini, see PHD thesis \"Quant aux carrés carrelés\"\n// http://pageperso.lif.univ-mrs.fr/~alain.colmerauer/ArchivesPublications/Gambini/carres.pdf\n// (the link is broken but it is still accessible via the internet archive).\n\n// Youtube video about that topic: https://www.youtube.com/watch?v=NoRjwZomUK0 Squared Squares - Numberphile\n// (also interestingly these square configurations are apparently related to electrical networks:\n//  \"Determinants and Current Flows In Electric Networks\" by Brooks, Smith, Stone, Tutte in Discrete Mathematics 100, (1992) 291-301 )\n\n// BTW. as I understand there is exactly one similar pattern in 3d, unfortunately not too interesting:\n// it consists just of two cubes (full-sized and a half-sized).\n// A picture can be found on page 228 in \"On filling space with different integer cubes\" by R.J.M Dawson,\n// (Journal of Combinatorial Theory, Series A, Volume 36, Issue 2, March 1984, Pages 221-229)\n\n// More complex cube-tilings seem to be impossible:\n// \"On the impossibility of packing space with different cubes\" by R.J.M Dawson\n// (Journal of Combinatorial Theory, Series A, Volume 48, Issue 2, July 1988, Pages 174-188)\n\n// See also: https://en.wikipedia.org/wiki/Squaring_the_square\n\n// tags: simple, torus, torus, square, tileable, order, 24, perfect, squared, squaring, 181, gambini\n\nvec3 square(vec2 p, int s, vec3 c)\n{\n    //p = p % 181; // NOTE: if something breaks on windows its probably the % operator.\n    p -= 181.0*floor(p/181.0);\n    \n    ivec2 i = ivec2(p);\n\n    if(i.x > s || i.y > s)\n        return vec3(1);\n    if(i.x == 0 || i.x == s || i.y == 0 || i.y == s)\n        return vec3(0);\n    \n    return c;\n}\n\nvoid mainImage( out vec4 o, in vec2 i )\n{\n    i -= iMouse.xy;\n\n    vec3 c = vec3(1);\n    \n    c *= square(i - vec2(93, 75), 2, vec3(170, 229, 160)/255.0);\n    c *= square(i - vec2(95, 98), 3, vec3(229, 160, 181)/255.0);\n    c *= square(i - vec2(93, 45), 5, vec3(160, 229, 104)/255.0);\n    c *= square(i - vec2(61, 77), 10, vec3(229, 181, 160)/255.0);\n    c *= square(i - vec2(19, 87), 11, vec3(160, 188, 229)/255.0);\n    c *= square(i - vec2(166, 49), 15, vec3(160, 229, 167)/255.0);\n    c *= square(i - vec2(165, 33), 16, vec3(160, 217, 229)/255.0);\n    c *= square(i - vec2(148, 33), 17, vec3(160, 229, 188)/255.0);\n    c *= square(i - vec2(0, 45), 19, vec3(224, 229, 160)/255.0);\n    c *= square(i - vec2(95, 75), 23, vec3(229, 160, 214)/255.0);\n    c *= square(i - vec2(71, 77), 24, vec3(190, 160, 229)/255.0);\n    c *= square(i - vec2(93, 50), 25, vec3(229, 197, 160)/255.0);\n    c *= square(i - vec2(71, 101), 27, vec3(186, 229, 160)/255.0);\n    c *= square(i - vec2(0, 98), 30, vec3(207, 229, 160)/255.0);\n    c *= square(i - vec2(61, 45), 32, vec3(160, 184, 229)/255.0);\n    c *= square(i - vec2(-15, 64), 34, vec3(228, 160, 229)/255.0);\n    c *= square(i - vec2(148, 0), 33, vec3(209, 218, 160)/255.0);\n    c *= square(i - vec2(30, 87), 41, vec3(229, 160, 197)/255.0);\n    c *= square(i - vec2(19, 45), 42, vec3(160, 229, 221)/255.0);\n    c *= square(i - vec2(118, 50), 48, vec3(229, 160, 164)/255.0);\n    c *= square(i - vec2(98, 0), 50, vec3(160, 200, 229)/255.0);\n    c *= square(i - vec2(98, 98), 83, vec3(174, 160, 229)/255.0);\n    c *= square(i - vec2(0,-53), 98, vec3(229, 164, 160)/255.0);\n\n    o = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}