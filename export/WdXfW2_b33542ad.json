{"ver":"0.1","info":{"id":"WdXfW2","date":"1589140989","viewed":84,"name":"Shi**y wave","username":"omegasbk","description":"Super basic and really bad looking wave :) ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AMPLITUDE 0.14\n#define M_PI 3.1415926535897932384626433832795\n#define FREQUENCY 1.\n#define WAVE_LENGTH 0.19\n#define PHASE 2. * M_PI\n#define THICKNESS 0.03\n\nfloat hash( vec2 p ) \n{\n\tfloat h = dot(p,vec2(127.1,311.7));\t\n    return fract(sin(h)*43758.5453123);\n}\n\nfloat noise(in vec2 p) \n{\n    vec2 i = floor(p);\n    vec2 f = fract(p);\t\n\tvec2 u = f * f * (3.-2.*f);\n    return -1.0 + 1.0 * mix(mix(hash(i + vec2(0.0,0.0)), \n                     \t\t\thash(i + vec2(1.0,0.0)), u.x),\n                \t\t\tmix(hash(i + vec2(0.0,1.0)), \n                    \t\t\thash(i + vec2(1.0,2.0)), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float phase = PHASE + uv.x / WAVE_LENGTH / (noise(uv) * 0.4);    \n    \n    float x = mod(iTime, iResolution.x) * uv.x;\n      \n    //vec3 col = vec3(sin(x), sin(x), sin(x));\n    \n   \tfloat waveValue = AMPLITUDE * sin(2. * M_PI * FREQUENCY * iTime + phase);\n\n    vec3 col = texture(iChannel0, uv + vec2(waveValue/30., 0.)).rgb;\n \tcol += vec3(waveValue).x;    \n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}