{"ver":"0.1","info":{"id":"flcSz4","date":"1638803171","viewed":183,"name":"Jellyfish <3","username":"lechuga","description":"^^","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","random","fish"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TEX 1 // cambiar a 0 para desactivar la textura\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define pi acos(-1.)\nfloat t;\n\nfloat[10] acum;\n\n// https://www.shadertoy.com/view/3tcGDs\n// Alkama <3\nfloat noise(vec2 p){\n  return .211*texture(iChannel0, sin(t*.45)+t*.56+p*.05).r + \n        .641625*texture(iChannel0, cos(-t*.65)-t*.45+p*.05).r +\n        .519*texture(iChannel0, sin(t*.7)+t*.1+p*.06).r;\n}\n#define h(d) fract(sin(d*56.6)*67.)\nfloat c(float t){\n  return mix(h(floor(t)),h(floor(t+1.)),pow(smoothstep(0., 1., fract(t)), 20.));\n}\nfloat tt;\nfloat st(vec3 p, vec2 s){return length(vec2(length(p.xy)-s.x, p.z))-s.y;}\nfloat sb(vec3 p, vec3 s){\n  p=abs(p)-s;\n  return length(max(p,0.)) + min(0.,max(max(p.x, p.y),p.z)) - 4.;\n  }\nfloat smin(float a, float b, float k){\n  float h= max(0., k-abs(a-b));\n  return min(a,b)-h*h*k*.25;\n}\n\nvec2 m1(vec3 p){\n  float ss = sin(tt+p.y*.45);\n  mat2 aa2= rot(radians(pi*24.));\n  p.xy *= aa2;\n  vec3 p1=p;\n  vec2 dt=vec2(1.),dh;\n  mat2 aa  = rot(p1.y*.0471+t);\n  p1.xz*=aa;\n  p1=abs(abs(p1)-2.)-1.-sin(tt+p.y*.41)*.5;\n  p-=vec3(0., 4., 0.);\n  dt = vec2(length(p)-sin(p.y*.15+tt)*4.455-15.5-ss*.25, 0.);\n  acum[0]+=.1/(.1+dt.x*dt.x);\n  dh = vec2(length(p1.xz)-3.-ss, 1.);\n  dt.x = max(dt.x,-(length(p-vec3(0., -15., 0.))-15.-ss));\n  dh.x = p.y > dh.x ? p.y : dh.x;\n  dh.x = smin(dh.x, dt.x,1.);\n  return vec2(dh.x,0.);\n}\nvec2 m2(vec3 p){\n  \n  vec3 p1=p;\n  #if TEX == 1\n      float fl = 20.+p1.y+noise(p.xz);\n  #else\n      float fl = 20.+p1.y;\n  #endif\n  vec2 dt,dh=m1(p);\n  dt = vec2(fl, 1.);\n  \n  vec3 p2 = p;\n  p2.y -= 50.;\n  p2.x -= tt*5.;\n  float ss = 20.;\n  vec2 gid = (floor(p2.xz/ss-.5));\n  p2.xz = (fract(p2.xz/ss-.5)-.5)*ss;\n  float a = fract(sin(dot(gid, gid.yx*vec2(22.5,30.22))*52.));\n  p2.yz*=rot(pi*a*.65);\n  p2.yz*=rot(a-3.458*pi*.56);\n  p2.xy*=rot(a+2.7656*pi*.657);\n  p2.xz*=rot(a+2.6715*pi*.56);\n  float cc = sb(p2, vec3(3.)*a*a+10.);\n  vec3 p3 = p;\n  p3.x-=tt*5.;\n  p3.xz=(fract(p3.xz/ss-.5)-.5)*ss;\n  p3-=vec3(0.,42.,0.);\n  p3.xz*=rot(.454);\n  float cc2 = length(p3+vec3(0., 3., 0.))-8.;\n  dt.x = min(cc, dt.x);\n  dt.x = max(.1-cc2, dt.x);\n  dt.x *= .55;\n  return dh.x < dt.x ? dh:dt;\n}\n\nvec2 m3(vec3 p){\n  vec2 dt,dh=m2(p);\n  vec2 ss = vec2(120.,70.);\n  p.xz=p.xz-70.;\n  p.xz -= tt*7.;\n  p.xz=(fract(p.xz/ss-.5)-.5)*ss;\n  p.xy *= rot(2.5);\n  dt=vec2(length(p.xz)-10.,3.);\n  dt.x = max(dt.x, p.y-1.);\n  acum[1] += .35/(5.+dt.x*dt.x);\n  return dh;\n}\n\nvec2 m(vec3 p){\n  vec2 dt,dh=m3(p);\n  p.yz = abs(p.yz)-1.;\n  p.x -= sin(p.x*.45+t*20.);\n  p.xz *= rot(-1.);\n  p.x -= 0.5;\n  p.y -= 5.;\n  p.yx *= rot(p.z*.245);\n  p.y += sin(p.z*.145+t*10.)*2.25-1.25;\n  p.x += sin(p.z*.167+t*10.)*2.12-1.12;\n  \n  p.xy = abs(p.xy)-2.;\n  \n  dt = vec2(length(p.xy)-.1,4.);\n  acum[2] += .1/(.1+dt.x*dt.x);\n  dt.x*=.55;\n  dh.x = smin(dt.x,dh.x,.25);\n  return dh;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  t= mod(iTime, 100.)*.75;\n  tt= c(t)+t*8.;\n\t\n  vec2 uv = ((fragCoord/iResolution.xy)-0.5) / vec2(iResolution.y / iResolution.x, 1);\n  uv*=2.;\n  float ph = .135+.135;\n  uv.y -= cos(sin(t*.45+uv.x*.645)*2.25-.25+t*.245)*ph + sin(cos(t*.25+uv.y*.435)*2.25-.25+t*.256)*ph;\n  vec3 s = vec3(0.01, 10.01,-80.);\n  mat2 aa = rot(sin(t*.125)*pi*2.);\n  s.xz*=aa;\n  vec3 p = s;\n  vec3 cz = normalize(vec3(0.,-1.,0.)-s);\n  vec3 cx = normalize(cross(cz,vec3(0., -1., 0.)));\n  vec3 cy = normalize(cross(cx,cz));\n  vec3 r = mat3(cx,cy,cz)*normalize(vec3(uv, 1.));\n  vec3 co = vec3(0.144);\n  vec2 dt,dh,e=vec2(.01,0.);\n  float i;\n  vec3 n, l = normalize(vec3(-1., -2.,-3.));\n  l.xz *= aa;\n  for(i = 0.;i < 64.; i++){\n    dt = m(p);\n    dh.x = dt.x;\n    if(abs(dh.x) < .001){\n      n = normalize(m(p).x - vec3(m(p-e.xyy).x, m(p-e.yxy).x,m(p-e.yyx).x));\n      float dif = max(0., dot(l, n));\n      float sp = pow(max(.0,dot(reflect(-l,n), -r)), 50.);\n      float fr = pow(1.+dot(l,n),4.);\n      co = vec3(dif + sp )*min(.45,fr);\n      if(dt.y == 0.){\n          r=reflect(r, n)*.1;\n          p+=5.;\n      }\n      if(dt.y == 1. ){\n          r=refract(r, n,.65)*.11;\n          p+=20.;\n      }\n    }\n    if(dh.y > 150.) break;\n    dh.y += dh.x;\n    p+=dh.x*r;\n  }\n  vec3 COL_M = vec3(0.434)*.025;\n  vec3 COL_L = vec3(0.3, 0.0853, 0.75)*2.;\n  vec3 COL_LL = vec3(.1, .1, .73);\n  \n  co += acum[0]*COL_M*.31;\n  co += acum[1]*COL_L*.91;\n  co += acum[2]*COL_LL;\n  co += pow((i/100.),.4545)*vec3(0.34,0.1,0.96)*.63595;\n  co = pow(co, vec3(.453434));\n  \n  co *= 1.-max(0., length(p-s)/40.)*(1.-vec3(.34, .15, 0.75)*.86);\n\tfragColor = sqrt(vec4(co, 1.));\n}","name":"Image","description":"","type":"image"}]}