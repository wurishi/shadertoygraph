{"ver":"0.1","info":{"id":"dtSyWw","date":"1691830386","viewed":142,"name":"Body outline","username":"ricvolpe","description":"A shader creating the outline of a body","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["outline","svg","body"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created using Shadertoy-SVG: https://zduny.github.io/shadertoy-svg/\n// For better performance, consider using buffers, see example: https://www.shadertoy.com/view/7lKGzR\n\nconst vec2 positions[] = vec2[](vec2(0.0129, -0.1936), vec2(0.0328, -0.3632), vec2(0.0492, -0.4630), vec2(0.0601, -0.5271), vec2(0.0544, -0.5860), vec2(0.0513, -0.6519), vec2(0.0562, -0.7037), vec2(0.0583, -0.7840), vec2(0.0466, -0.8392), vec2(0.0355, -0.9046), vec2(0.0179, -0.9641), vec2(0.0173, -0.9940), vec2(0.0279, -0.9999), vec2(0.0436, -0.9972), vec2(0.0552, -0.9988), vec2(0.0665, -0.9951), vec2(0.0765, -0.9974), vec2(0.0899, -0.9940), vec2(0.1021, -0.9946), vec2(0.1166, -0.9884), vec2(0.1237, -0.9880), vec2(0.1283, -0.9861), vec2(0.1350, -0.9816), vec2(0.1350, -0.9600), vec2(0.1208, -0.9193), vec2(0.1130, -0.8617), vec2(0.1216, -0.8074), vec2(0.1435, -0.7413), vec2(0.1679, -0.6520), vec2(0.1757, -0.5897), vec2(0.1696, -0.5407), vec2(0.1581, -0.5048), vec2(0.1555, -0.4887), vec2(0.1603, -0.4594), vec2(0.1631, -0.3875), vec2(0.1795, -0.3004), vec2(0.2007, -0.1479), vec2(0.2099, -0.0486), vec2(0.2006, 0.0246), vec2(0.1761, 0.1111), vec2(0.1643, 0.1891), vec2(0.1710, 0.3331), vec2(0.1867, 0.3313), vec2(0.1954, 0.2731), vec2(0.1969, 0.2363), vec2(0.2110, 0.1802), vec2(0.2405, 0.1114), vec2(0.2669, 0.0639), vec2(0.2853, 0.0183), vec2(0.2870, -0.0019), vec2(0.2852, -0.0270), vec2(0.2849, -0.0357), vec2(0.2856, -0.0533), vec2(0.2866, -0.0647), vec2(0.2891, -0.0871), vec2(0.2885, -0.1334), vec2(0.2940, -0.1518), vec2(0.3023, -0.1426), vec2(0.3126, -0.1058), vec2(0.3139, -0.1121), vec2(0.3146, -0.1524), vec2(0.3216, -0.1733), vec2(0.3272, -0.1750), vec2(0.3327, -0.1662), vec2(0.3361, -0.1150), vec2(0.3406, -0.0959), vec2(0.3454, -0.1401), vec2(0.3529, -0.1724), vec2(0.3595, -0.1779), vec2(0.3670, -0.1624), vec2(0.3651, -0.1068), vec2(0.3740, -0.1226), vec2(0.3871, -0.1466), vec2(0.3961, -0.1520), vec2(0.4019, -0.1461), vec2(0.3984, -0.1226), vec2(0.3846, -0.0805), vec2(0.3772, -0.0497), vec2(0.3919, -0.0709), vec2(0.4119, -0.0872), vec2(0.4199, -0.0828), vec2(0.4169, -0.0618), vec2(0.3924, -0.0176), vec2(0.3639, 0.0207), vec2(0.3468, 0.0451), vec2(0.3367, 0.0768), vec2(0.3300, 0.1290), vec2(0.3249, 0.1883), vec2(0.3111, 0.2416), vec2(0.2974, 0.2689), vec2(0.2821, 0.3169), vec2(0.2716, 0.3790), vec2(0.2701, 0.4016), vec2(0.2697, 0.4457), vec2(0.2692, 0.5049), vec2(0.2688, 0.5490), vec2(0.2616, 0.5923), vec2(0.2346, 0.6394), vec2(0.1893, 0.6649), vec2(0.1489, 0.6719), vec2(0.1109, 0.6844), vec2(0.0862, 0.7011), vec2(0.0746, 0.7274), vec2(0.0744, 0.7704), vec2(0.0849, 0.7899), vec2(0.0945, 0.8161), vec2(0.1091, 0.8359), vec2(0.1148, 0.8567), vec2(0.1110, 0.8649), vec2(0.1025, 0.8670), vec2(0.1003, 0.8719), vec2(0.1019, 0.8944), vec2(0.0975, 0.9296), vec2(0.0779, 0.9663), vec2(0.0247, 0.9971), vec2(0.0057, 1.0000), vec2(-0.0056, 1.0000), vec2(-0.0247, 0.9972), vec2(-0.0778, 0.9663), vec2(-0.0975, 0.9296), vec2(-0.1019, 0.8944), vec2(-0.1003, 0.8720), vec2(-0.1026, 0.8670), vec2(-0.1110, 0.8649), vec2(-0.1148, 0.8568), vec2(-0.1091, 0.8359), vec2(-0.0945, 0.8161), vec2(-0.0849, 0.7899), vec2(-0.0744, 0.7704), vec2(-0.0746, 0.7274), vec2(-0.0862, 0.7011), vec2(-0.1109, 0.6844), vec2(-0.1489, 0.6720), vec2(-0.1893, 0.6650), vec2(-0.2347, 0.6394), vec2(-0.2616, 0.5923), vec2(-0.2688, 0.5491), vec2(-0.2692, 0.5050), vec2(-0.2697, 0.4457), vec2(-0.2702, 0.4016), vec2(-0.2716, 0.3790), vec2(-0.2821, 0.3169), vec2(-0.2974, 0.2690), vec2(-0.3112, 0.2416), vec2(-0.3249, 0.1883), vec2(-0.3300, 0.1291), vec2(-0.3367, 0.0769), vec2(-0.3468, 0.0452), vec2(-0.3638, 0.0208), vec2(-0.3925, -0.0175), vec2(-0.4170, -0.0617), vec2(-0.4199, -0.0827), vec2(-0.4119, -0.0872), vec2(-0.3919, -0.0709), vec2(-0.3772, -0.0497), vec2(-0.3845, -0.0804), vec2(-0.3984, -0.1225), vec2(-0.4019, -0.1460), vec2(-0.3961, -0.1519), vec2(-0.3871, -0.1466), vec2(-0.3739, -0.1225), vec2(-0.3652, -0.1067), vec2(-0.3669, -0.1623), vec2(-0.3594, -0.1779), vec2(-0.3528, -0.1724), vec2(-0.3453, -0.1401), vec2(-0.3405, -0.0959), vec2(-0.3360, -0.1150), vec2(-0.3327, -0.1662), vec2(-0.3272, -0.1750), vec2(-0.3216, -0.1733), vec2(-0.3146, -0.1524), vec2(-0.3138, -0.1121), vec2(-0.3126, -0.1057), vec2(-0.3023, -0.1425), vec2(-0.2939, -0.1518), vec2(-0.2884, -0.1334), vec2(-0.2890, -0.0870), vec2(-0.2865, -0.0646), vec2(-0.2855, -0.0532), vec2(-0.2848, -0.0357), vec2(-0.2850, -0.0269), vec2(-0.2869, -0.0019), vec2(-0.2852, 0.0183), vec2(-0.2668, 0.0639), vec2(-0.2404, 0.1114), vec2(-0.2110, 0.1802), vec2(-0.1969, 0.2363), vec2(-0.1954, 0.2731), vec2(-0.1866, 0.3313), vec2(-0.1710, 0.3331), vec2(-0.1642, 0.1891), vec2(-0.1759, 0.1111), vec2(-0.2005, 0.0247), vec2(-0.2098, -0.0485), vec2(-0.2006, -0.1480), vec2(-0.1794, -0.3004), vec2(-0.1630, -0.3874), vec2(-0.1602, -0.4593), vec2(-0.1554, -0.4887), vec2(-0.1580, -0.5048), vec2(-0.1695, -0.5407), vec2(-0.1756, -0.5897), vec2(-0.1678, -0.6520), vec2(-0.1434, -0.7413), vec2(-0.1214, -0.8074), vec2(-0.1128, -0.8616), vec2(-0.1206, -0.9193), vec2(-0.1348, -0.9600), vec2(-0.1348, -0.9816), vec2(-0.1282, -0.9861), vec2(-0.1236, -0.9880), vec2(-0.1164, -0.9884), vec2(-0.1019, -0.9946), vec2(-0.0897, -0.9940), vec2(-0.0764, -0.9973), vec2(-0.0664, -0.9951), vec2(-0.0551, -0.9988), vec2(-0.0435, -0.9972), vec2(-0.0278, -1.0000), vec2(-0.0171, -0.9940), vec2(-0.0177, -0.9641), vec2(-0.0353, -0.9046), vec2(-0.0464, -0.8392), vec2(-0.0581, -0.7839), vec2(-0.0560, -0.7036), vec2(-0.0511, -0.6518), vec2(-0.0542, -0.5859), vec2(-0.0600, -0.5271), vec2(-0.0491, -0.4630), vec2(-0.0326, -0.3632), vec2(-0.0127, -0.1936), vec2(-0.0090, -0.1442), vec2(-0.0023, -0.1465), vec2(0.0040, -0.1465), vec2(0.0099, -0.1442), vec2(-0.4148, -0.0876), vec2(-0.3946, -0.1106), vec2(-0.3890, -0.1485), vec2(-0.3769, -0.0464), vec2(-0.3732, 0.0089), vec2(-0.3641, -0.0944), vec2(-0.3633, -0.1769), vec2(-0.3417, 0.0553), vec2(-0.3413, -0.0980), vec2(-0.3339, -0.1605), vec2(-0.3290, 0.1394), vec2(-0.3184, -0.1681), vec2(-0.3142, -0.0974), vec2(-0.3082, 0.2480), vec2(-0.2955, -0.1509), vec2(-0.2892, -0.0969), vec2(-0.2873, 0.0097), vec2(-0.2856, -0.0572), vec2(-0.2846, -0.0317), vec2(-0.2702, 0.3947), vec2(-0.2687, 0.5560), vec2(-0.2493, 0.0945), vec2(-0.2083, -0.0844), vec2(-0.1956, 0.2626), vec2(-0.1764, 0.6668), vec2(-0.1733, 0.3620), vec2(-0.1681, 0.1319), vec2(-0.1673, -0.3579), vec2(-0.1621, -0.5169), vec2(-0.1569, -0.4825), vec2(-0.1286, -0.9854), vec2(-0.1241, -0.8004), vec2(-0.1187, -0.9864), vec2(-0.1152, -0.9073), vec2(-0.1074, 0.8660), vec2(-0.1005, 0.8731), vec2(-0.0956, 0.8211), vec2(-0.0919, -0.9925), vec2(-0.0831, 0.7055), vec2(-0.0757, 0.7783), vec2(-0.0680, -0.9936), vec2(-0.0592, -0.5533), vec2(-0.0532, -0.6787), vec2(-0.0522, -0.8162), vec2(-0.0463, -0.9956), vec2(-0.0433, -0.4341), vec2(-0.0333, -0.9182), vec2(-0.0194, -0.9946), vec2(-0.0105, -0.1436), vec2(-0.0081, 1.0000), vec2(-0.0007, -0.1471), vec2(0.0082, 1.0000), vec2(0.0107, -0.1437), vec2(0.0196, -0.9947), vec2(0.0335, -0.9182), vec2(0.0435, -0.4341), vec2(0.0464, -0.9956), vec2(0.0524, -0.8162), vec2(0.0534, -0.6788), vec2(0.0594, -0.5534), vec2(0.0681, -0.9937), vec2(0.0757, 0.7783), vec2(0.0831, 0.7054), vec2(0.0921, -0.9926), vec2(0.0956, 0.8211), vec2(0.1005, 0.8731), vec2(0.1073, 0.8660), vec2(0.1154, -0.9074), vec2(0.1188, -0.9865), vec2(0.1242, -0.8004), vec2(0.1287, -0.9854), vec2(0.1569, -0.4825), vec2(0.1621, -0.5169), vec2(0.1673, -0.3580), vec2(0.1682, 0.1319), vec2(0.1734, 0.3619), vec2(0.1765, 0.6668), vec2(0.1956, 0.2626), vec2(0.2083, -0.0844), vec2(0.2494, 0.0945), vec2(0.2687, 0.5560), vec2(0.2702, 0.3947), vec2(0.2847, -0.0317), vec2(0.2858, -0.0572), vec2(0.2874, 0.0097), vec2(0.2893, -0.0969), vec2(0.2956, -0.1509), vec2(0.3082, 0.2479), vec2(0.3143, -0.0974), vec2(0.3184, -0.1681), vec2(0.3291, 0.1394), vec2(0.3340, -0.1606), vec2(0.3414, -0.0980), vec2(0.3417, 0.0553), vec2(0.3634, -0.1769), vec2(0.3641, -0.0944), vec2(0.3732, 0.0088), vec2(0.3768, -0.0464), vec2(0.3890, -0.1485), vec2(0.3947, -0.1106), vec2(0.4147, -0.0877));\nconst ivec3 triangles[335] = ivec3[335](ivec3(0, 35, 1), ivec3(0, 36, 35), ivec3(0, 288, 36), ivec3(1, 34, 291), ivec3(1, 35, 309), ivec3(1, 309, 34), ivec3(2, 32, 3), ivec3(2, 33, 307), ivec3(2, 291, 33), ivec3(2, 307, 32), ivec3(3, 31, 308), ivec3(3, 32, 31), ivec3(3, 308, 295), ivec3(4, 28, 5), ivec3(4, 29, 28), ivec3(4, 295, 29), ivec3(5, 28, 294), ivec3(6, 27, 7), ivec3(6, 28, 27), ivec3(6, 294, 28), ivec3(7, 26, 293), ivec3(7, 27, 305), ivec3(7, 305, 26), ivec3(8, 25, 9), ivec3(8, 293, 25), ivec3(9, 25, 303), ivec3(9, 303, 290), ivec3(10, 13, 289), ivec3(10, 289, 11), ivec3(10, 290, 296), ivec3(10, 292, 13), ivec3(10, 296, 292), ivec3(12, 289, 13), ivec3(14, 292, 15), ivec3(15, 292, 296), ivec3(16, 296, 17), ivec3(17, 296, 299), ivec3(18, 299, 19), ivec3(19, 299, 304), ivec3(20, 304, 306), ivec3(20, 306, 21), ivec3(22, 306, 23), ivec3(23, 299, 24), ivec3(23, 304, 299), ivec3(23, 306, 304), ivec3(24, 290, 303), ivec3(24, 296, 290), ivec3(24, 299, 296), ivec3(25, 293, 26), ivec3(29, 295, 30), ivec3(30, 295, 308), ivec3(33, 291, 34), ivec3(36, 288, 314), ivec3(37, 288, 38), ivec3(37, 314, 288), ivec3(38, 288, 39), ivec3(39, 192, 262), ivec3(39, 262, 310), ivec3(39, 284, 192), ivec3(39, 288, 284), ivec3(40, 190, 41), ivec3(40, 191, 190), ivec3(40, 262, 191), ivec3(40, 310, 262), ivec3(41, 190, 261), ivec3(41, 261, 311), ivec3(42, 90, 43), ivec3(42, 91, 90), ivec3(42, 311, 91), ivec3(43, 89, 313), ivec3(43, 90, 89), ivec3(44, 89, 323), ivec3(44, 313, 89), ivec3(44, 323, 45), ivec3(45, 87, 46), ivec3(45, 88, 87), ivec3(45, 323, 88), ivec3(46, 86, 315), ivec3(46, 87, 326), ivec3(46, 326, 86), ivec3(47, 85, 329), ivec3(47, 86, 85), ivec3(47, 315, 86), ivec3(47, 329, 48), ivec3(48, 84, 320), ivec3(48, 329, 84), ivec3(49, 83, 332), ivec3(49, 320, 83), ivec3(49, 332, 50), ivec3(50, 51, 318), ivec3(50, 332, 333), ivec3(50, 333, 51), ivec3(51, 333, 52), ivec3(52, 65, 319), ivec3(52, 333, 65), ivec3(53, 65, 324), ivec3(53, 319, 65), ivec3(53, 324, 54), ivec3(54, 324, 321), ivec3(55, 57, 322), ivec3(55, 58, 57), ivec3(55, 321, 58), ivec3(55, 322, 56), ivec3(58, 321, 324), ivec3(59, 64, 60), ivec3(59, 324, 64), ivec3(60, 64, 327), ivec3(60, 327, 325), ivec3(61, 63, 62), ivec3(61, 325, 63), ivec3(63, 325, 327), ivec3(64, 324, 65), ivec3(65, 77, 331), ivec3(65, 331, 328), ivec3(65, 333, 77), ivec3(66, 69, 67), ivec3(66, 70, 69), ivec3(66, 328, 70), ivec3(67, 69, 330), ivec3(67, 330, 68), ivec3(70, 328, 331), ivec3(71, 75, 72), ivec3(71, 331, 335), ivec3(71, 335, 75), ivec3(72, 74, 334), ivec3(72, 75, 74), ivec3(73, 334, 74), ivec3(76, 331, 77), ivec3(76, 335, 331), ivec3(78, 81, 79), ivec3(78, 333, 81), ivec3(79, 80, 336), ivec3(79, 81, 80), ivec3(81, 333, 82), ivec3(82, 333, 332), ivec3(83, 320, 84), ivec3(91, 311, 317), ivec3(92, 311, 93), ivec3(92, 317, 311), ivec3(93, 311, 94), ivec3(94, 99, 95), ivec3(94, 311, 99), ivec3(95, 99, 312), ivec3(95, 312, 316), ivec3(96, 312, 97), ivec3(96, 316, 312), ivec3(97, 312, 98), ivec3(99, 311, 100), ivec3(100, 131, 101), ivec3(100, 261, 131), ivec3(100, 311, 261), ivec3(101, 130, 298), ivec3(101, 131, 130), ivec3(102, 129, 103), ivec3(102, 274, 129), ivec3(102, 298, 274), ivec3(103, 128, 297), ivec3(103, 129, 128), ivec3(104, 297, 105), ivec3(105, 297, 300), ivec3(106, 109, 107), ivec3(106, 300, 109), ivec3(107, 109, 302), ivec3(107, 302, 108), ivec3(109, 300, 110), ivec3(110, 121, 271), ivec3(110, 271, 301), ivec3(110, 272, 121), ivec3(110, 300, 272), ivec3(111, 114, 112), ivec3(111, 115, 114), ivec3(111, 116, 115), ivec3(111, 120, 116), ivec3(111, 271, 120), ivec3(111, 301, 271), ivec3(112, 114, 113), ivec3(114, 115, 287), ivec3(116, 117, 285), ivec3(116, 120, 117), ivec3(117, 119, 118), ivec3(117, 120, 119), ivec3(121, 272, 122), ivec3(122, 124, 270), ivec3(122, 125, 124), ivec3(122, 272, 125), ivec3(123, 270, 124), ivec3(126, 272, 275), ivec3(126, 275, 127), ivec3(128, 275, 297), ivec3(130, 274, 298), ivec3(131, 261, 132), ivec3(132, 136, 260), ivec3(132, 137, 136), ivec3(132, 261, 137), ivec3(133, 260, 134), ivec3(134, 260, 135), ivec3(135, 260, 256), ivec3(136, 256, 260), ivec3(137, 261, 138), ivec3(138, 261, 139), ivec3(139, 261, 255), ivec3(140, 189, 141), ivec3(140, 255, 261), ivec3(140, 261, 189), ivec3(141, 188, 142), ivec3(141, 189, 188), ivec3(142, 187, 249), ivec3(142, 188, 259), ivec3(142, 259, 187), ivec3(143, 186, 144), ivec3(143, 249, 186), ivec3(144, 185, 246), ivec3(144, 186, 185), ivec3(145, 184, 146), ivec3(145, 185, 257), ivec3(145, 246, 185), ivec3(145, 257, 184), ivec3(146, 184, 243), ivec3(147, 183, 252), ivec3(147, 243, 183), ivec3(147, 252, 148), ivec3(148, 182, 240), ivec3(148, 252, 182), ivec3(149, 239, 150), ivec3(149, 240, 239), ivec3(150, 152, 151), ivec3(150, 153, 152), ivec3(150, 239, 153), ivec3(151, 152, 236), ivec3(154, 166, 241), ivec3(154, 239, 166), ivec3(154, 241, 155), ivec3(155, 241, 237), ivec3(156, 159, 157), ivec3(156, 160, 159), ivec3(156, 237, 160), ivec3(157, 159, 238), ivec3(157, 238, 158), ivec3(160, 237, 241), ivec3(161, 165, 162), ivec3(161, 241, 244), ivec3(161, 244, 165), ivec3(162, 164, 242), ivec3(162, 165, 164), ivec3(163, 242, 164), ivec3(166, 178, 248), ivec3(166, 179, 253), ivec3(166, 239, 179), ivec3(166, 244, 241), ivec3(166, 248, 167), ivec3(166, 253, 178), ivec3(167, 171, 245), ivec3(167, 172, 171), ivec3(167, 248, 172), ivec3(168, 170, 169), ivec3(168, 245, 247), ivec3(168, 247, 170), ivec3(171, 247, 245), ivec3(173, 176, 174), ivec3(173, 248, 251), ivec3(173, 251, 176), ivec3(174, 176, 250), ivec3(175, 250, 176), ivec3(177, 248, 178), ivec3(177, 251, 248), ivec3(179, 239, 180), ivec3(180, 181, 254), ivec3(180, 239, 181), ivec3(181, 239, 240), ivec3(181, 240, 182), ivec3(183, 243, 184), ivec3(186, 249, 187), ivec3(192, 284, 193), ivec3(193, 284, 194), ivec3(194, 284, 258), ivec3(195, 231, 196), ivec3(195, 258, 284), ivec3(195, 284, 231), ivec3(196, 230, 263), ivec3(196, 231, 230), ivec3(197, 230, 281), ivec3(197, 263, 230), ivec3(197, 281, 198), ivec3(198, 229, 265), ivec3(198, 281, 229), ivec3(199, 228, 200), ivec3(199, 229, 228), ivec3(199, 265, 229), ivec3(200, 228, 264), ivec3(201, 264, 277), ivec3(201, 277, 202), ivec3(202, 227, 203), ivec3(202, 277, 227), ivec3(203, 225, 204), ivec3(203, 226, 278), ivec3(203, 227, 226), ivec3(203, 278, 225), ivec3(204, 224, 267), ivec3(204, 225, 224), ivec3(205, 224, 279), ivec3(205, 267, 224), ivec3(205, 279, 206), ivec3(206, 222, 269), ivec3(206, 223, 222), ivec3(206, 279, 223), ivec3(207, 269, 282), ivec3(207, 273, 208), ivec3(207, 276, 273), ivec3(207, 282, 276), ivec3(208, 266, 209), ivec3(208, 268, 266), ivec3(208, 273, 268), ivec3(210, 266, 211), ivec3(211, 266, 268), ivec3(212, 268, 273), ivec3(212, 273, 213), ivec3(214, 273, 276), ivec3(214, 276, 215), ivec3(216, 276, 280), ivec3(216, 280, 217), ivec3(218, 221, 283), ivec3(218, 280, 221), ivec3(218, 283, 219), ivec3(220, 283, 221), ivec3(221, 276, 282), ivec3(221, 280, 276), ivec3(222, 282, 269), ivec3(228, 277, 264), ivec3(232, 284, 288), ivec3(232, 288, 233), ivec3(233, 234, 286), ivec3(233, 235, 234), ivec3(233, 288, 235), ivec3(272, 300, 275), ivec3(275, 300, 297));\nconst int len = triangles.length();\n\nbool sameSide( vec3 p1, vec3 p2, vec3 a, vec3 b ) {\n    vec3 cp1 = cross(b-a, p1-a);\n    vec3 cp2 = cross(b-a, p2-a);\n      \n    return dot(cp1, cp2) >= 0.0;\n}\n\nbool pointInTriangle( vec3 p, vec3 a, vec3 b, vec3 c ) {\n    return sameSide(p, a, b, c) && sameSide(p, b, a, c) && sameSide(p, c, a, b);\n}\n\nbool inPath( vec2 p ) {\n    for (int i=0; i<len; i++) {\n        ivec3 triangle = triangles[i];\n        vec3 a = vec3(positions[triangle[0]], 0.0);\n        vec3 b = vec3(positions[triangle[1]], 0.0);\n        vec3 c = vec3(positions[triangle[2]], 0.0);\n  \n        if (pointInTriangle(vec3(p, 0.0), a, b, c)) {\n            return true;\n        }\n    }\n  \n    return false;\n}\n      \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    fragColor = vec4(1.0);\n    vec2 uv = ( 2.* fragCoord -iResolution.xy ) / iResolution.y;\n\n    if (inPath(uv)) {\n        fragColor = vec4(0.0);\n    }\n}","name":"Image","description":"","type":"image"}]}