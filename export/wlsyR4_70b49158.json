{"ver":"0.1","info":{"id":"wlsyR4","date":"1591575305","viewed":78,"name":"tripole","username":"darkfox","description":"triangle like poles.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// tripole.\n// https://www.openprocessing.org/sketch/838265\n\n// constants.\nconst float PI = 3.14159;\nconst float RADIUS = 0.4;\nconst float ROTATION_SPEED = 0.6;\nconst float SCALE = 6.0;\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n  float t = iTime * ROTATION_SPEED;\n  vec2 p = fragCoord.xy;\n  float minLen = min(iResolution.x, iResolution.y);\n  vec2 p0 = iResolution.xy * 0.5 + RADIUS * minLen * vec2(cos(t), sin(t));\n  vec2 p1 = iResolution.xy * 0.5 + RADIUS * minLen * vec2(cos(t + (2.0 * PI) / 3.0), sin(t + (2.0 * PI) / 3.0));\n  vec2 p2 = iResolution.xy * 0.5 + RADIUS * minLen * vec2(cos(t + (4.0 * PI) / 3.0), sin(t + (4.0 * PI) / 3.0));\n  // geometric mean(three)\n  float d_mean = pow(distance(p, p0) * distance(p, p1) * distance(p, p2), 0.333333) / max(iResolution.x, iResolution.y);\n  float check = smoothstep(0.0, 1.0, mod(d_mean * 256.0 + iTime * 12.0, SCALE) / SCALE);\n  // turquoise blue.\n  fragColor = vec4(vec3(0.25, 0.88, 0.81) * check, 1.0);\n}","name":"Image","description":"","type":"image"}]}