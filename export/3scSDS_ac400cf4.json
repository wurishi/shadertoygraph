{"ver":"0.1","info":{"id":"3scSDS","date":"1572718514","viewed":211,"name":"ShaderTober - Catch","username":"Flopine","description":"A small doodle with inktober's theme \"Catch\"","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","noise","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, Coyhot, Alkama and YX for teaching me\n// Thanks LJ for giving me the love of shadercoding :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n#define ITER 100.\n#define PI 3.141592\n\nfloat hash21 (vec2 x)\n{return fract(sin(dot(vec2(42.1, 48.4),x))*1245.5);}\n\nvec2 moda (vec2 p, float per)\n{\n    float a = atan(p.y,p.x);\n    float l = length(p);\n    a = mod(a,per)-per*0.5;\n    return vec2(cos(a),sin(a))*l;\n}\n\nmat2 rot (float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat cyl(vec2 p, float r)\n{return length(p)-r;}\n\n// iq's formula https://iquilezles.org/articles/distfunctions\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n    vec3 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - r;\n}\n\nfloat g1 = 0.;\nfloat gem (vec3 p)\n{\n    p.y += sin(iTime)*2.-1.5;\n    p.yz *= rot(iTime);\n    p.xy *= rot(iTime);\n    float d = dot(p,normalize(sign(p)))-.8;\n    g1 += 0.1/(0.1+d*d);\n    return d;\n}\n\nfloat prim1(vec3 p)\n{return sdCapsule(p, vec3(0.,-3.,0.), vec3(0.,3.,0.), 1.4+p.y*0.3);}\n\nfloat cocoon(vec3 p)\n{\n     p.z += texture(iChannel0, p.yx*0.04*sin(length(p.xy)-iTime)).r*length(p)*0.5;\n    p.xy *= rot(p.z*0.3);\n    vec3 pp = p;\n    p.x += sin(p.y*0.5);\n    p.y += 1.;\n    float cap = prim1(p);\n    \n    p.xz *= rot(iTime);\n    p.xz *= rot(p.y*0.5);\n    p.xz = moda(p.xz, 2.*PI/3.);\n   \tp.x -= (2.-abs(p.y-1.)*0.1);\n    float branch1 = cyl(p.xz, 0.4);\n    \n    p = pp;\n\n    p.xy *= rot(PI/3.);\n    p.xz *= rot(iTime*0.2);\n    p.xz *= rot(p.y*0.4);\n    p.xz = moda(p.xz, 2.*PI/2.);\n   \tp.x -= (1.+abs(p.y)*0.1);\n    float branch2 = cyl(p.xz, 0.3+abs(p.y)*0.03);\n    \n    p = pp;\n\n    p.xy *= rot(-PI/3.);\n    p.xz *= rot(iTime*0.2);\n    p.xz *= rot(p.y*0.4);\n    p.xz = moda(p.xz, 2.*PI/2.);\n   \tp.x -= (1.+abs(p.y)*0.1);\n    float branch3 = cyl(p.xz, 0.1+abs(p.y)*0.03);\n    \n    return smin(branch3,smin(branch2,smin(cap,branch1,.5), .5),.5);\n}\n\nfloat SDF (vec3 p)\n{\n\treturn min(gem(p),cocoon(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    float dither = hash21(uv);\n    \n    vec3 ro = vec3(0.001,0.001,-8.),\n        p = ro,\n        rd = normalize(vec3(uv,1.)),\n        col = vec3(0.);\n    \n    float shad = 0.;\n    bool hit = false;\n    \n    for (float i=0.; i<ITER; i++)\n    {\n        float d = SDF(p);\n        if (d<0.001)\n        {\n            hit = true;\n            shad = i/ITER;\n            // phantom mode from lsdlive \n\t\t\t// https://www.shadertoy.com/view/XsGfDD\n            d = max(abs(d),0.2);\n        }\n        d *= 0.2+dither*0.2;\n        p += d*rd;\n        \n    }\n    \n    if (hit)\n    {col = vec3(1.-shad);}\n\n    col += g1*vec3(clamp(length(uv),0.,1.),0.1,0.6)*0.3;\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}