{"ver":"0.1","info":{"id":"3dffzM","date":"1587853938","viewed":938,"name":"Flashlight Shader","username":"statsuuu","description":"A shader that mimics the behaviour of flashlights. Click anywhere.","likes":2,"published":1,"flags":0,"usePreview":1,"tags":["light","flashlight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float exposure = 3.;\nconst float AOE = 10.;\n\nvec2 MouseXY()\n{\n    return iMouse.xy / iResolution.xy; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 mouse = MouseXY();\n    \n    float d = distance(uv, mouse);\n    d = exp(-(d * AOE)) * exposure;\n    \n    fragColor = vec4(vec3(0.f) ,1.0);\n    \n    fragColor.rgb += texture(iChannel0, uv).rgb * d;\n}","name":"Image","description":"","type":"image"}]}