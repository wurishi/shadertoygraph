{"ver":"0.1","info":{"id":"MdXyWM","date":"1488421330","viewed":182,"name":"Simple Fractal Formula","username":"roddh","description":"Fractal iteration formula based on Kali's article.\nhttp://www.fractalforums.com/new-theories-and-research/very-simple-formula-for-fractal-patterns\nColoring:  iq's color palette generator + cosine orbit trap\nMove mouse to change pattern/iteration input\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","simple","variations"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n#define MAX 128\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.0 * fragCoord.xy / iResolution.xy;   \n    uv -= 1.0;         // -0.5 <> 0.5\n    uv *= vec2(2.0,1.15);\n    \n    vec2 mouse = iMouse.xy / iResolution.xy;\n    mouse -= 0.5;\n    \n    float t = (iTime+16.)/10.;\n\n\tvec2 c = vec2(-0.5*sin(t),-0.5*cos(t));\n    c = vec2(mouse.x, mouse.y);\n\tfloat f = 1e20;\n    float m = 0.0;\n    float escape = 0.0;\n\tfor( int i=0; i<MAX; i++ ) \n\t{\n\t\tescape = float(i);\n        uv=abs(uv);\n        // uv.y=abs(uv.y);\n        m=dot(uv,uv);\n        uv = uv/m+c;\n  \t\t// f = min( f, fract(m) + m/32.0 );\n        f = min( f, pow(cos(uv.x/1.0),0.55));\n        if( m >(100.0)) break;\n\t}\n\n\tf = 0.0-log(f)/10.0;   // Orbit Trap\n\tvec3 fragColor1 = vec3(f,0.45-f,0.0);\n    \n    escape /= float(MAX);  // Escape Value\n    vec3 fragColor2 = pal( escape, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(2.0,1.0,0.0),vec3(0.5,0.20,0.25) );\n\n    vec3 col = mix(fragColor1,fragColor2,0.55);\n    // Increase contrast alpha(color-0.5)+0.5+beta\n    col = 1.45*(col-0.5) + 0.50;\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}