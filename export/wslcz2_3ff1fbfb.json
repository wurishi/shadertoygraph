{"ver":"0.1","info":{"id":"wslcz2","date":"1585189376","viewed":142,"name":"Truchet Hills","username":"gls9102","description":"Weird looking shader that uses waves, truchet tiles, and iterations to make this 3D-like effect.\n\nIt may not be the fastest code but hey, it still works.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["wave","truchet","depth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// v1.0.1\n\n#define PI 3.1415\n#define ITERATIONS 25.\n\nfloat ran21(vec2 uv) {\n    return fract(cos(dot(cos(uv.x*uv.y)-32.2,tan(uv.x/uv.y)-23.5)*1322.24)*432122.62);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\n    vec2 uvb = uv;\n\n    vec3 col = vec3(0);\n    for(float i=1.;i<=ITERATIONS;i++) {\n        float cur = i/ITERATIONS;\n        uv = uvb;\n        uv *= 10.0-cur*1.1;\n        uv.y += iTime*0.6;\n    \n        vec2 gv = fract(uv)-.5;\n        vec2 id = floor(uv);\n    \n        gv.x *= (ran21(id)>.5) ? -1. : 1.;\n        vec2 ruv = gv-sign(gv.x+gv.y+.001)*.5;\n        float tile = smoothstep(.01,-.01,abs(length(ruv)-.5)-.1);\n        float rot = atan(ruv.x,ruv.y)/PI;\n    \n        float mul = mod(id.x+id.y,2.)==1. ? -1. : 1.;\n        float h = smoothstep(cur-.1,cur,sin((rot*4.*mul+iTime)*PI)*.25+.75);\n        \n        col = max(col,h*tile*cur);\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}