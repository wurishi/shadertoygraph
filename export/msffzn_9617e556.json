{"ver":"0.1","info":{"id":"msffzn","date":"1688502176","viewed":38,"name":"Rush Hour","username":"Loronso","description":"A modification of https://www.shadertoy.com/view/ldBXz3\n\nWanted to resemble city cars as seen from above :)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define time iTime*0.5\n#define TILE_SIZE_X 1.\n#define TILE_SIZE_Y 1.\n#define ZOOM 70.\n\n#define x_degrees 1.\n#define y_degrees 0.\n\n//Checks if point p is inside grid\nfloat grid(vec2 p) {\n  vec2 orient = normalize(vec2(x_degrees, y_degrees));\n  vec2 perp = vec2(orient.y, -orient.x);\n  float x_bands = floor(TILE_SIZE_X * dot(p, orient));\n  float y_bands = floor(TILE_SIZE_Y * dot(p, perp));\n  float g = mod(x_bands+y_bands, 2.0);\n  \n  return g;\n}\n\n\nvec2 rand_vector(float seed)\n{\n    return vec2(fract(sin(537.3 * (seed + 0.5)) ) , fract(sin(523.7 * (seed + 0.25)) ));\n}\n\n\n#define samp 30.\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy;  \n  vec2 sample_point = (fragCoord.xy / ZOOM) + time * normalize(vec2(x_degrees, y_degrees));\n  vec2 q = (fragCoord.xy - (iResolution.xy / 2.)) / iResolution.x ;\n  vec4 c = vec4(grid(sample_point));\n  \n  vec4 inside_color  = vec4(vec3(0.), 1);\n  vec4 outside_color = vec4(vec3(1.), 1);\n \n  vec4 color = c * inside_color + (1.0 - c) * outside_color;\n  \n  if (q.x + 0.1 * q.y > 100.) {\n    fragColor = color;\n  }\n  else {\n    vec4 cc = vec4(0.0);\n    \n    float radius = length(q) * 100.;\n    \n    for (float t = -samp; t <= samp; t++) {\n      float percent = t / samp;\n      float weight = 1.0 - abs(percent);\n\t  float u = t/100.;\n      vec2 dir = rand_vector(u);\n      dir = normalize(dir) * 0.01;\n      float skew = percent * radius;\n      vec4 samplev = vec4(\n          grid(vec2(0.03,0.) + sample_point + dir * skew),\n          grid(radius * vec2(-0.005,0.00) + sample_point + dir * skew),\n          grid(radius * vec2(-0.007,0.00) + sample_point + dir * skew),\n          1.0);\n      cc += samplev * weight;\n    }\n    \n    fragColor = cc;\n  }\n  \n}\n","name":"Image","description":"","type":"image"}]}