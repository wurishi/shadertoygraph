{"ver":"0.1","info":{"id":"ddj3WK","date":"1668162036","viewed":229,"name":"derivative of textures","username":"FabriceNeyret2","description":"...or is it the precision of the texture unit interpolation ?\n\ntop: derivative of the 8bit texture\nbottom: derivative of the float (same) texture ( note also the behavior on borders - see fullscreen ).\n\ntry alternate patterns in buffA. \n","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["dfdx","dfdy","precision","fwidth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{\n    vec2 U = u / iResolution.xy;\n    float scale = 1024.;\n    O =  U.y>.5 ? texture(iChannel0,u/scale   )   // top: 8bits texture\n                : texture(iChannel1,U/scale*8.);  // bottom: float (same) texture\n    O =.5+100.*dFdx( O.xxxx ); // scale/8\n    \n    if ( int(u.y)*2 == int(iResolution.y) ) O = vec4(1,0,0,1); // red separator\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{\n    O = texelFetch( iChannel0, ivec2(u), 0 );\n // O = vec4( .5* mod(u.x+u.y,2.));  // variant: pure checker\n // O = vec4( .5*mod(u.x-.5,2.));    // variant: alternate bars\n}","name":"Buffer A","description":"","type":"buffer"}]}