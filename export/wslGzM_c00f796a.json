{"ver":"0.1","info":{"id":"wslGzM","date":"1545523377","viewed":105,"name":"sinusland","username":"oo_miguel","description":"Welcome to the Land of Sinusoids.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["procedural","raymarching","sinus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS  50\n#define MAX_DIST   65.\n#define SURF_DIST .05\n\nfloat sinus_plane(vec3 p, vec4 n){\n  return  dot(p,n.xyz) + n.w + \n          0.3 * sin(5.*p.x) + 0.6 * sin(p.x+iTime*3.) +\n      \t  0.1 * sin(5.*p.y) + 1.  * sin(p.z+iTime*9.);\n}\n\nfloat scene(vec3 p){\n  return min(sinus_plane(p,vec4(0.,1.,0.,3.)),sinus_plane(p,vec4(0.,-0.3,0.,3.)));\n}\n\nfloat march(vec3 ro, vec3 rd){\n\tfloat dO=0.;\n    for(int i=0; i<MAX_STEPS; i++) {\n    \tvec3 p = ro + rd*dO;\n        float dS = scene(p);\n        dO += dS;\n        if(dS<SURF_DIST)break;\n        if(dO>MAX_DIST)return MAX_DIST+1.;\n    }\n    return dO;\n}\n\nvec3 normal(vec3 p){\n\tfloat d = scene(p);\n    vec2  e = vec2(.01, 0);\n    vec3  n = d - vec3(scene(p-e.xyy),scene(p-e.yxy),scene(p-e.yyx));\n    return normalize(n);\n}\n\nfloat light(vec3 p) {\n    vec3 pos = vec3(3, 4, 1);\n    vec3 l = normalize(pos-p);\n    vec3 n = normal(p);\n    return clamp(dot(n, l), 0., 1.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(sin(iTime), 1.+1.4*sin(0.3*iTime), 0);\n    vec3 rd = normalize(vec3(uv.x+0.15*sin(0.25*iTime), uv.y+0.1+0.05*sin(iTime), 1.));\n    float d = march(ro, rd);\n    vec3  p = ro + rd * d;\n    float l = light(p);\n    \n    if(d>MAX_DIST)fragColor=vec4(vec3(.8),1.);\n    else if(p.y<0.1)fragColor = vec4(vec3(d/80.,d/80.,l),1.);\n    else fragColor=vec4(vec3(l,d/80.,d/80.),1.);\n}","name":"Image","description":"","type":"image"}]}