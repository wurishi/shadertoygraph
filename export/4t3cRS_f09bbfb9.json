{"ver":"0.1","info":{"id":"4t3cRS","date":"1532949276","viewed":117,"name":"thickness","username":"Torumu106","description":"thickness test","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["thickness"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\nfloat map(vec3 p){\n    //float d = length(p-vec3(0.0,0.0,1.0)) - 0.25;\n    float d = sdBox(p - vec3(0.0,0.0,0.2), vec3(0.4,0.4,0.4));\n\treturn d;\n}\nfloat trace(vec3 o, vec3 r){\n\tfloat t = 0.0;\n    for(int i = 0; i < 32; ++i){\n    \tvec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\nvec4 bgcolor(vec2 uv){\n    vec2 r = 2.0 * vec2(uv.x - 0.5, uv.y - 0.5);\n    r.x *= iResolution.x / iResolution.y;\n    vec3 ret = vec3(1.0, 1.0, 1.0);\n    float sqrt3 = 1.73205;\n    r *= 2.5;\n    \n    float the = 0.0 + iTime * 0.3;\n    r.xy *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    vec2 r1 = abs(r);\n    r1.y += 1.0 * r1.x / sqrt3;\n    if(r1.x <= 0.5 *  sqrt3 && r1.y  <= 1.0){\n    \tret = vec3(1.0);\n    }\n    vec2 r2 = abs(r - vec2(sqrt3 * 0.5, -1.5));\n    r2.y += 1.0 * r2.x / sqrt3;\n    if(r2.x <= 0.5 *  sqrt3 && r2.y  <= 1.0){\n    \tret = vec3(1.0, 0.0, 0.0);\n    }\n    vec2 r3 = abs(r - vec2(sqrt3 * 0.5, 1.5));\n    r3.y += 1.0 * r3.x / sqrt3;\n    if(r3.x <= 0.5 *  sqrt3 && r3.y  <= 1.0){\n    \tret = vec3(0.0, 1.0, 0.0);\n    }\n    vec2 r4 = abs(r - vec2(sqrt3, 0.0));\n    r4.y += 1.0 * r4.x / sqrt3;\n    if(r4.x <= 0.5 *  sqrt3 && r4.y  <= 1.0){\n    \tret = vec3(1.0, 1.0, 0.0);\n    }\n    vec2 r5 = abs(r - vec2(-sqrt3, 0.0));\n    r5.y += 1.0 * r5.x / sqrt3;\n    if(r5.x <= 0.5 *  sqrt3 && r5.y  <= 1.0){\n    \tret = vec3(0.0, 0.0, 1.0);\n    }\n    vec2 r6 = abs(r - vec2(-sqrt3 * 0.5, 1.5));\n    r6.y += 1.0 * r6.x / sqrt3;\n    if(r6.x <= 0.5 *  sqrt3 && r6.y  <= 1.0){\n    \tret = vec3(0.0, 1.0, 1.0);\n    }\n    vec2 r7 = abs(r - vec2(-sqrt3 * 0.5, -1.5));\n    r7.y += 1.0 * r7.x / sqrt3;\n    if(r7.x <= 0.5 *  sqrt3 && r7.y  <= 1.0){\n    \tret = vec3(1.0, 0.0, 1.0);\n    }\n    \n\treturn vec4(ret,1.0);\n}\nvec4 col = vec4(1.0,1.0,1.0,1.0);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 uv1 = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv, 1.0));\n    \n    float the = iTime * 0.25;\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    vec3 o = vec3(-1.0* sin(-the), 0.0, -1.0 * cos(-the));\n    float t = trace(o, r);\n    float thick = trace(o+r*10.0, -r);\n    thick = 10.0 - t - thick;\n    thick=max(thick,0.0);\n    if(thick==0.0) thick = -0.5;\n    thick += 0.5;\n    float fog = pow(0.3,thick);\n    col = bgcolor(uv1);\n    col = vec4(1.0,1.0,1.0,1.0);\n    vec4 fc = col * fog;\n\tfragColor = vec4(fc);\n}","name":"Image","description":"","type":"image"}]}