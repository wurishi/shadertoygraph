{"ver":"0.1","info":{"id":"lsV3Wh","date":"1454338013","viewed":239,"name":"2dlight","username":"AntonLobanov","description":"2dlight","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2dlight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec4 HEIGHT_VECTOR = vec4(1.0/3.0, 1.0/3.0, 1.0/3.0, 0.0);\nfloat bumpStrength = 1.0;\nfloat diffuseFactor = 2.0;\nvec4 diffuseMaterial = vec4(1.0, 0.0, 0.0, 1.0);\nfloat diffuseStrength = 1.0;\nfloat specularFactor = 50.0;\nvec4 specularMaterial = vec4(1.0, 1.0, 1.0, 1.0);\nfloat specularStrength = 1.0;\n\nfloat getHeight(sampler2D channel, vec2 offset) \n{\n\treturn dot(texture(channel, offset), HEIGHT_VECTOR);\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 step = vec2(1.0, 1.0) / iResolution.xy;\n    vec2 uv = fragCoord.xy * step;\n    \n    // normal generation\n    float upHeight = getHeight(iChannel1, uv + vec2(0, -step.y));\n\tfloat bottomHeight = getHeight(iChannel1, uv + vec2(0, step.y));\n\tfloat leftHeight = getHeight(iChannel1,  uv + vec2(-step.x, 0));\n\tfloat rightHeight = getHeight(iChannel1, uv + vec2(step.x, 0));\n\tfloat dx = (rightHeight - leftHeight) * bumpStrength;\n\tfloat dy = (bottomHeight - upHeight) * bumpStrength;\n\tfloat dz = sqrt(1.0 - dx*dx - dy*dy);\t\n\tvec3 normal = vec3(dx,dy,dz);\n    \n    // light pos calculation\t\n    vec2 pos = vec2((sin(iTime) + 1.0) * 0.5, (sin(iTime*2.0) + 1.0) * 0.5);\n    if(iMouse.z > 0.) pos = iMouse.xy * step;\n    \n    // light calculation\n    vec3 light = normalize(vec3(pos - uv, 1.0));\n    float shininess = log2(max(dot(normal, light), 0.0));\n    vec4 diffuse = diffuseMaterial * diffuseStrength * exp2(shininess * diffuseFactor);\n    vec4 specular = specularMaterial * specularStrength * exp2(shininess* specularFactor);\n\tfragColor = texture(iChannel0, uv) * diffuse + specular;\n}","name":"","description":"","type":"image"}]}