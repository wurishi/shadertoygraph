{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"vec2 cCis(float r);\nvec2 cCish(float r);\n\n/* PROPERTIES */\n\nfloat cArg(vec2 c);\nfloat cAbs(vec2 c);\nfloat cRe(vec2 c);\nfloat cIm(vec2 c);\n\n/* OPERATIONS */\n\nvec2 cConj(vec2 c);\nvec2 cNeg(vec2 c);\nvec2 cInv(vec2 c);\nvec2 cExp(vec2 c);\nvec2 cLog(vec2 c); // principal value\nvec2 cSin(vec2 c);\nvec2 cCos(vec2 c);\n\nvec2 cAdd(vec2 a, vec2 b);\nvec2 cSub(vec2 a, vec2 b);\nvec2 cMul(vec2 a, vec2 b);\nvec2 cDiv(vec2 a, vec2 b);\n\n/* IMPLEMENTATION */\n\nvec2 cCis(float r)\n{\n  return vec2( cos(r), sin(r) );\n}\n\nvec2 cCish(float r)\n{\n  vec2 e = vec2( exp(r), exp(-r) );\n  return vec2(e.x + e.y, e.x - e.y);\n}\n\nfloat cArg(vec2 c)\n{\n  return atan(c.y, c.x);\n}\n\nfloat cAbs(vec2 c)\n{\n  return length(c);\n}\n\nfloat cRe(vec2 c)\n{\n  return c.x;\n}\n\nfloat cIm(vec2 c)\n{\n  return c.y;\n}\n\nvec2 cConj(vec2 c)\n{\n  return vec2(c.x, -c.y);\n}\n\nvec2 cNeg(vec2 c)\n{\n  return -c;\n}\n\nvec2 cInv(vec2 c)\n{\n  return cConj(c) / dot(c, c);\n}\n\nvec2 cExp(vec2 c)\n{\n  return exp(c.x) * cCis(c.y);\n}\n\nvec2 cLog(vec2 c)\n{\n  return vec2( log( cAbs(c) ), cArg(c) );\n}\n\nvec2 cSin(vec2 c)\n{\n  // NOTE: component-wise multiplication\n  return vec2( sin(c.x), cos(c.x) ) * cCish(c.y);\n}\n\nvec2 cCos(vec2 c)\n{\n  // NOTE: component-wise multiplication\n  return vec2( cos(c.x), -sin(c.x) ) * cCish(c.y);\n}\n\nvec2 cAdd(vec2 a, vec2 b)\n{\n  return a + b;\n}\n\nvec2 cSub(vec2 a, vec2 b)\n{\n  return a - b;\n}\n\nvec2 cMul(vec2 a, vec2 b)\n{\n  return vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\n}\n\nvec2 cDiv(vec2 a, vec2 b)\n{\n  return cMul(a, cInv(b));\n}\n\nvec2 cart2pol(vec2 v)\n{\n    return vec2(v.r*cos(v.g),v.r*sin(v.g));\n}\n\nvec2 pol2cart(vec2 v)\n{\n    float l = sqrt(v.x*v.x + v.y*v.y);\n    return vec2(l,v.g/l);  \n}\n\n\n// å®žéªŒç»„åˆå„ç§ä¸åŒçš„æ˜ å°„æ–¹å¼\nvec2 complexMapping_0(vec2 uv)\n{\n     vec2 uv2 = cInv(pol2cart(uv));\n    vec2 uv3 = cMul(uv2,uv2);\n    return uv3;\n}\n\nvec2 complexMapping_1(vec2 uv)\n{\n    vec2 uv2 = uv;\n    for(int i=0;i<3;i++)\n    {\n        uv2 = cart2pol(cSin(uv2));   \n    }\n    \n    return uv2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv0 = fragCoord.xy / iResolution.xy;\n    vec2 uv1 = 3.5*(uv0-vec2(0.5));\n    \n    // é€šè¿‡å¤æ•°è¿ç®—ï¼Œå¾—åˆ°å„ç§ä¸åŒçš„çº¹ç†æ˜ å°„æ–¹å¼\n    vec2 uv2 = complexMapping_0(uv1);\n    \n    uv2 = (pol2cart(uv1));\n    \n    \n    // ç”¨å¤æ•°è¿ç®—å¾—åˆ°çš„çº¹ç†æ˜ å°„æ¥å¯¹çº¹æ ·è¿›è¡Œå–æ ·\n    vec4 C = texture(iChannel1,uv2);\n    vec4 C2 = texture(iChannel0,uv0+C.xy);\n    \n\tfragColor = C2;    \n    \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4lfGWn","date":"1421323997","viewed":301,"name":"testComplexTF","username":"magicbrush","description":"testComplexTF","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["testcomplextf"],"hasliked":0,"parentid":"","parentname":""}}