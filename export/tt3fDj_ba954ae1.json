{"ver":"0.1","info":{"id":"tt3fDj","date":"1613442352","viewed":143,"name":"2D Axis Alignment","username":"oneshade","description":"Alignment with a 2D axis. Change the axis with the mouse.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","axis","orthonormal","basis","axisalign"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// up is the upwards vector, must be normalized\nvec2 axisAlign(in vec2 p, in vec2 up) {\n    return p * mat2(up.y, -up.x, up);\n}\n\nfloat sdDisc(in vec2 p, in float r) {\n    return length(p) - r;\n}\n\nfloat sdBox(in vec2 p, in vec2 s) {\n    return length(p - clamp(p, -s, s)) + min(0.0, max(abs(p.x) - s.x, abs(p.y) - s.y));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 center = 0.5 * iResolution.xy;\n    vec2 mouse = (iMouse.xy - center) / iResolution.y;\n    vec2 uv = (fragCoord - center) / iResolution.y;\n    float unit = 2.0 / iResolution.y;\n    float time = iTime * 2.0;\n\n    float l = length(mouse);\n    vec2 p = axisAlign(uv, mouse / l);\n    float d = min(sdBox(p, vec2(0.05, l)), min(sdDisc(p - vec2(0.35, 0.0), 0.05), sdDisc(p - vec2(0.0, l + 0.25), 0.05)));\n\n    // Nice colors from iq\n    vec3 color = 1.0 - sign(d) * vec3(0.1, 0.4, 0.7);\n\tcolor *= 1.0 - exp(-4.0 * abs(d));\n\tcolor *= 0.8 + 0.2 * cos(140.0 * d);\n\tcolor = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 0.015, abs(d)));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}