{"ver":"0.1","info":{"id":"4ctyz8","date":"1730257032","viewed":98,"name":"FDB","username":"tancredi","description":"Test about videosynth/feedback","likes":0,"published":1,"flags":34,"usePreview":0,"tags":["feedbackvideosynth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    //fragColor = vec4(col,1.0);\n    vec4 fC = texture(iChannel0, uv).rgba;\n    fragColor = fC;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 r(float a,vec2 v) {\n   vec2 sc = vec2(cos(a),sin(a));\n   return vec2(dot(sc,v),dot(vec2(-sc.y,sc.x),v));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 p = vec2(iResolution.x/iResolution.y*.5,.5);\n    vec2 uv = fragCoord/iResolution.xy;\n    //vec2 ruv = uv-p;\n    //vec2 c = ruv*ruv;\n    //fragColor.a = 1.;\n    //fragColor.rgb = 1. * (1.+sin(iTime))/(sqrt(c.x+c.y)) * vec3(0.0,0.0,1.0);\n    vec2 c = r(sin(iTime*0.1),vec2(0.5,0.5));\n    uv = uv - c;\n    float a = .31 + 0.9*log(sin(0.01*iTime));\n    uv *= 1. + .01*sin(iTime);\n    uv = r(a,uv) + c;\n    vec4 fC = smoothstep(texture(iChannel0, uv).grba,texture(iChannel1, uv).rbga,vec4(.45+.1*sin(.001*iTime)));\n    \n    //fC.x*=abs(tan(fC.y));\n    \n    fragColor = fC;\n}","name":"Buffer A","description":"","type":"buffer"}]}