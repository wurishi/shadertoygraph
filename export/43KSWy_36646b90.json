{"ver":"0.1","info":{"id":"43KSWy","date":"1720446352","viewed":66,"name":"waving spinning fractal","username":"zemi","description":"waving","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractaliteration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//inspired by kishimisu\n\n\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.315, 0.426, 0.537);\n\n    return a + b*sin( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n\n    // 判断当前像素所在的象限\n    bool topLeft = (fragCoord.x < iResolution.x / 2.0) && (fragCoord.y >= iResolution.y / 2.0);\n    bool topRight = (fragCoord.x >= iResolution.x / 2.0) && (fragCoord.y >= iResolution.y / 2.0);\n    bool bottomLeft = (fragCoord.x < iResolution.x / 2.0) && (fragCoord.y < iResolution.y / 2.0);\n    bool bottomRight = (fragCoord.x >= iResolution.x / 2.0) && (fragCoord.y < iResolution.y / 2.0);\n\n    // 旋转角度和方向\n    float angle = iTime * 0.5;\n    if (topRight || bottomLeft) {\n        angle = -angle;\n    }\n\n    float cosA = cos(angle);\n    float sinA = sin(angle);\n\n    // 旋转矩阵应用到UV坐标\n    uv = vec2(\n        uv0.x * cosA - uv0.y * sinA,\n        uv0.x * sinA + uv0.y * cosA\n    );\n\n    vec3 finalColor = vec3(0.0);\n\n    for (float i = 0.0; i < 8.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i * 0.4 + iTime * 0.4);\n\n        d = cos(d * 8.0 + iTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.001 / d, 1.0);\n\n        finalColor += col * d;\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}