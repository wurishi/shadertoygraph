{"ver":"0.1","info":{"id":"lltczB","date":"1533105124","viewed":94,"name":"patterns-001","username":"zwwgggbest","description":"patterns-001","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["patterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653\n\nvec2 rotate2D(vec2 _uv, float _angle) \n{\n\tmat2 rotate = mat2(cos(_angle), -sin(_angle),\n        \t\t   sin(_angle), cos(_angle));\n    \n    _uv -= .5;\n    _uv = rotate * _uv;\n    _uv += .5;\n    \n    return _uv;\n}\n\nfloat box(vec2 _uv, vec2 _size, float _smoothEdge)\n{\t\n\t_size = vec2(.5) - _size * .5;\n    float aa = _smoothEdge * .5;\n    vec2 ret = smoothstep(_size, _size + vec2(aa), _uv);\n    ret *= smoothstep(_size, _size + vec2(aa), 1. - _uv);\n    return ret.x*ret.y;\n}\n\nfloat patterns1(vec2 _uv, vec2 _size, float _smoothEdge, float cnt)\n{\n\t_uv *= cnt;\n    _uv = fract(_uv);\n    _uv = rotate2D(_uv, PI * .25);\n    \n    return box(_uv, _size, _smoothEdge);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n  \tcol = vec3(patterns1(uv, vec2(.7), .01, 5.));\n  \tcol += vec3(patterns1(uv, vec2(.7), .01, 10.));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}