{"ver":"0.1","info":{"id":"XcfBWM","date":"1724940945","viewed":17,"name":"Sun being born","username":"cairei123","description":"Sol","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["flag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvc = (2.0*fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    //uvc -= vec2(0.5, 0.25);\n    \n    float speed = 4.0; //Speed the wave moves through the screen\n    float size = 0.05;//Max size the wave reaches\n    float waveLength = 10.0; //How wide each wave is\n\n    //Moves wave pixels up and down\n    float wave = speed*iTime+waveLength*uv.x;\n    float offset = size*cos(wave); \n    uv.y-=offset;\n    uvc.y-=offset;\n    \n    vec2 displacedFragCoord = uv * iResolution.xy;\n    if(length(uvc) < 0.4){\n        fragColor = vec4(0.73725490196, 0., 0.17647058823,0);\n    }\n    else{\n        fragColor = vec4(1);\n    }\n    \n    if (uv.y <= size || uv.y > 1.0 - size){\n    fragColor = vec4(0,0,0,1);\n    }\n    \n    \n    //Shadow\n    if (cos(wave) < 0.0){\n    fragColor.xyz=fragColor.xyz*(1.0+ cos(wave) * 0.25);\n    }\n}","name":"Image","description":"","type":"image"}]}