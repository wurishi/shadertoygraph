{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"/*by musk License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\tDraws 40 layers of antialiased circle patterns. \n\tUse mouse to set alpha, size, distribution. \n\tTest it with different images, videos, webcams.\n\n\tInspired by the processing example\n\n*/\n\n//2D texture based 3 component 1D, 2D, 3D noise\nvec3 noise(float p){return texture(iChannel0,vec2(p/iChannelResolution[0].x,.0)).xyz;}\nvec3 noise(vec2 p){return texture(iChannel0,p/iChannelResolution[0].xy).xyz;}\nvec3 noise(vec3 p){float m = mod(p.z,1.0);float s = p.z-m; float sprev = s-1.0;if (mod(s,2.0)==1.0) { s--; sprev++; m = 1.0-m; };return mix(texture(iChannel0,p.xy/iChannelResolution[0].xy+noise(sprev).yz).xyz,texture(iChannel0,p.xy/iChannelResolution[0].xy+noise(s).yz).xyz,m);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\t//uv.y*=-1.0;\n\tvec2 mouse = iMouse.xy/ iResolution.xy;\n\t\n\t//vec3 color = texture(iChannel1,uv).xyz;\n\tvec3 color = vec3(1.0);\n\t\n\tfloat var_size = 1.0;\n\tfloat var_alpha = .4;\n\tfloat var_distr = 1.0;\n\t\n\tif (iMouse.w>.5)\n\t{\n\t\tvar_size = mouse.x - mod(mouse.x,.1)+.01;\n\t\tvar_size *= 3.0;\n\t\tvar_distr = mod(mouse.x,.1)*30.0;\n\t\tvar_distr -= mod(var_distr,1.0);\n\t\tvar_distr -= .75;\n\t\tvar_size*=2.0;\n\t\tvar_alpha = mouse.y;\n\t}\n\t\n\tfor (float q=.0; q<1.0; q+=.01)\n\t{\n\t\tfloat i = q;\n\t\tvec2 size = vec2(1.00-pow(i,var_distr)*.97) * var_size;\n\t\tsize.x *= iResolution.y/iResolution.x;\n\t\t\n\t\tvec2 m = mod(uv+noise(q).yz*24.0,size);\n\t\tvec2 s = uv-m;\n\t\t\n\t\tvec2 offs = (.2+.6*noise(s*1466.1550+vec2(iTime*.1)).xy);\n\t\tvec2 p = m/size - offs;\n\t\tvec3 sample_color = texture(iChannel1,s + .5*size).xyz;\n\t\t\n\t\tfloat alpha = 1.0-(length(p)-.2)*iResolution.y*length(size)*.5;\n\t\talpha = min(var_alpha,max(.0,alpha));\n\t\tcolor = mix(color,sample_color,alpha);\n\t\t\n\t}\n\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ls23DG","date":"1393090260","viewed":1661,"name":"Pointillize Filter","username":"mu6k","description":"Draws 40 layers of antialiased circle patterns. Use mouse to set alpha, size, distribution. Test it with different images, videos, webcams.","likes":50,"published":1,"flags":0,"usePreview":0,"tags":["2d","circle"],"hasliked":0,"parentid":"","parentname":""}}