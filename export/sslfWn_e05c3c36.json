{"ver":"0.1","info":{"id":"sslfWn","date":"1644736955","viewed":230,"name":"Rainbow panels","username":"jarble","description":"Another triangle-wave fractal pattern.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["fractal","knot","lace"],"hasliked":0,"parentid":"slKGWw","parentname":"Fractal knots"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//change these constants to get different patterns!\n#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n    //return abs(fract((a+c1.xy)*scale+iTime/500.)-.5); //morphing\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);  \n    float t1 = 4.;\n    vec2 uv = (fragCoord-iResolution.xy)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n    float offset = 0.;\n    float offset1 = iTime/1000.;\n        vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);\n        //float scale = scale+col.x/16.;\n        for(int k = 0; k < 12; k++){\n            \n            //uv /= -scale-col.x;\n            uv /= -scale;\n            uv -= offset + (t2.yx)/(scale);\n            //uv -= offset + (t2.yx)/(scale+length(col));\n            \n            //uv -= (t2.yx)/(scale+t3);\n            //uv -= (t2.yx)/(scale+col.x);\n            t2 = triangle_wave(uv.yx-.5,scale);\n            //t2 = triangle_wave(uv.yx-.5+float(i),scale);\n            \n            t3 = triangle_wave(-uv,scale);\n            \n            uv.yx = (t2+t3)/scale;\n            //offset -= col.x/16.;\n            //offset += offset1;\n            col.x = abs(uv.x+uv.x-col.x);\n            col = col.yzx;\n        }\n\n    fragColor = vec4(col,1.0);   \n}\n","name":"Image","description":"","type":"image"}]}