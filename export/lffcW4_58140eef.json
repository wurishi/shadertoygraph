{"ver":"0.1","info":{"id":"lffcW4","date":"1721807270","viewed":31,"name":"rain test zhang","username":"Mr_Tie","description":"learned from Mr.BigWIngs","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rainsss"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nstruct ray{\nvec3 o;\nvec3 d;\n};\nray getRay(vec2 uv,vec3 campos,vec3 lookat,float zoom){\n    ray a;\n    a.o = campos;\n    vec3 f = normalize(lookat-campos);\n    vec3 r = cross(vec3(0.,1.,0.),f);\n    vec3 u = cross(f,r);\n    vec3 c = a.o+f*zoom;\n    vec3 i = c+uv.x*r+uv.y*u;\n    a.d = normalize(i-a.o);\n    return a;\n}\n\n//获取ray上离点p最近的点\nvec3 closestPoint(ray r,vec3 p){\n    return r.o+max(0.,dot(p-r.o,r.d))*r.d;\n}\nfloat DistRay(ray r,vec3 p){\n    return length(p-closestPoint(r,p));\n}\nfloat DistLine(ray r,vec3 p){\n    return length(cross(p-r.o,r.d))/length(r.d);\n}\nfloat DrawPoint(ray r,vec3 p,float size,float blur){\n    //求p到当前片元的距离\n    float d = DistLine(r,p);\n    //p点距离小于0.07显示白色，大于0.08显示黑色\n    d = smoothstep(0.2,0.07,d);\n    return d;\n}\n//散景效果\nfloat Bokeh(ray r,vec3 p,float size,float blur){\n    float d = DistRay(r,p);\n    float c = smoothstep(size,size*(1.-blur),d);\n    c*=mix(.6,1.,smoothstep(size*.8,size,d));\n    return c;\n}\nvec3 streetLights(ray r,float t)\n{\n    vec3 col=vec3(.5);\n    return col;\n}\n\nvec2 Rain(vec2 uv,float t){\n    //uv*=3.;\n    t*=3.;\n    vec2 a = vec2(3.,1.);\n    vec2 st = uv*a;\n    vec2 id = floor(st);\n    st.y+=t*.3;\n    \n    //添加单元格偏移\n    float n = fract(sin(id.x)*873.344*768.43);\n    st.y+=n;\n    uv.y+=n;\n    id = floor(st);\n    st = fract(st)-.5;\n    \n    //时间偏移\n    t+=fract(sin(id.x*78.34+id.y*251.563)*786.34)*6.283;\n    \n    float y = -sin(t+sin(t+sin(t)*.5))*0.4;\n    vec2 p = vec2(0.,y);\n    vec2 o1 = (st- p)/a;\n    float d = length(o1);\n    float m1 = smoothstep(0.06,0.01,d);\n    \n    vec2 scale = vec2(1.,2.);\n    vec2 o2 = (fract(uv*a.x*scale)-.5)/scale;\n    d = length(o2);\n    float m2 = smoothstep(.15*(.5-st.y),.0,d)*smoothstep(0.,.1,st.y-p.y);\n    //if( st.x>.46 || st.y>.49) m1=1.;\n    //return vec2(o1);//vector from current frag to p\n    return vec2(m1*o1*30.+m2*o2*30.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 m = iMouse.xy/iResolution.xy;\n    float t = iTime*0.5+m.x;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n    uv.x*=iResolution.x/iResolution.y;\n    \n    //vec3 campos = vec3(0.,0.,1.);\n    //vec3 lookat = vec3(0.5);\n    \n    float edge = 1.0;\n    float par = 3.14159;\n    vec3 campos = vec3(0.,3.,-3.);//(-5.*sin(t),3.,5.*cos(t*3.));\n    vec3 lookat = vec3(.5);\n    vec2 rainSort = Rain(uv*5.,t)*.05;\n    rainSort+=Rain(uv*15.,t)*.15;\n    uv.x += sin(uv.y*70.)*0.005;\n    uv.y += sin(uv.x*170.)*0.005;\n    ray r = getRay(uv+rainSort*.5,campos,lookat,1.);\n    // Output to screen\n    vec3 col = vec3(.0);//streetLights(a,t);\n    \n    float c = Bokeh(r,vec3(0.0,0.0,0.),.3,.1);\n    float c1 = Bokeh(r,vec3(0.,0.,edge),.3,.1);\n    float c2 = Bokeh(r,vec3(0.,0.+edge,0.),.3,.1);\n    float c3 = Bokeh(r,vec3(0.,0.+edge,0.+edge),.3,.1);\n    float c4 = Bokeh(r,vec3(0.+edge,0.,0.),.3,.1);\n    float c5 = Bokeh(r,vec3(0.+edge,0.,0.+edge),.3,.1);\n    float c6 = Bokeh(r,vec3(0.+edge,0.+edge,0.),.3,.1);\n    float c7 = Bokeh(r,vec3(0.+edge,0.+edge,0.+edge),.3,.1);\n    \n    c += DrawPoint(r,vec3(0.0,0.0,0.),.3,.1);\n    c1 += DrawPoint(r,vec3(0.,0.,edge),.3,.1);\n    c2 += DrawPoint(r,vec3(0.,0.+edge,0.),.3,.1);\n    c3 += DrawPoint(r,vec3(0.,0.+edge,0.+edge),.3,.1);\n    c4 += DrawPoint(r,vec3(0.+edge,0.,0.),.3,.1);\n    c5 += DrawPoint(r,vec3(0.+edge,0.,0.+edge),.3,.1);\n    c6 += DrawPoint(r,vec3(0.+edge,0.+edge,0.),.3,.1);\n    c7 += DrawPoint(r,vec3(0.+edge,0.+edge,0.+edge),.3,.1);\n    vec3 whiteCol = vec3(1.);\n    vec3 redCol = vec3(1.,0.,0.);\n    vec3 blueCol = vec3(0.,0.,1.);\n    vec3 yellowCol = vec3(1.,1.,0.);\n    col += (c+c1) * whiteCol;\n    col += (c2+c3) * redCol;\n    col += (c4+c5) * blueCol;\n    col += (c6+c7) * yellowCol;\n    col += (r.d.y+.55)*vec3(.6,.5,.9);\n    //fragColor = vec4(rainSort*30.0*1.,0.,1.);\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}