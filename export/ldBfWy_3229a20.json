{"ver":"0.1","info":{"id":"ldBfWy","date":"1502308180","viewed":110,"name":"Effect: Flower","username":"Blueberry","description":"Effect drafting","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["prototyping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nint sintab(int i) {\n\treturn int(128.0 + 125.0 * sin(float(i * 2 + 1) * 3.14159265358979 / 256.0));\n}\n\nint dither2(ivec2 p) {\n\treturn (p.y & 1) + (((p.x ^ p.y) & 1) << 1);\n}\n\nint dither4(ivec2 p) {\n    return dither2(p) * 4 + dither2(p / 2);\n}\n\n\nint colors1[6] = int[6](0, 6, 14, 3, 13, 1);\nint colors2[6] = int[6](0, 9, 4, 10, 7, 1);\n\nint image(ivec2 p) {\n\tint x = p.x / 8;\n    int y = p.y / 8;\n\tint xp = p.x - x * 8;\n\tint yp = p.y - y * 8;\n\n    float fx = float(x) - 19.5;\n\tfloat fy = float(y) - 12.5;\n\tfloat a = (atan(fx, fy) / acos(-1.0) + 1.0) * 0.5;\n\tfloat r = length(vec2(fx, fy));\n\n\tint ai = int(a*128.0 + 0.5) & 127;\n\tint ri = int(r*2.0 + 0.5);\n\n\tint t = int(iTime * 50.0) + 1024;\n\n\t//int v = sintab(t / 2) / 2 - ri + sintab((ai + t) * 8) * sintab(t / 4) / 4096;\n\tint v = sintab(t / 8 + 64) / 2 + sintab(t * 7 / 8 + 64) * 5 / 16 + sintab(ai*6 - t) / 16 + sintab(ai*10 + t*3) / 16 - ri - 20;\n    \n    int index = (v/2 + dither4(p)) / 16;\n\treturn (t & 2048) == 0 ? colors1[index] : colors2[index];\n}\n\nint border(ivec2 p) {\n\treturn 0;\n}\n\nint effect(ivec2 p) {\n    if (p.x >= 0 && p.x < 320 && p.y >= 0 && p.y < 200) {\n        return image(p);\n    } else {\n        return border(p);\n    }\n}\n\n// Colodore PAL Palette\nivec3 palette_rgb[16] = ivec3[16](\n\tivec3(0x00, 0x00, 0x00), //  0: Black\n\tivec3(0xFF, 0xFF, 0xFF), //  1: White\n\tivec3(0x96, 0x28, 0x2e), //  2: Red\n\tivec3(0x5b, 0xd6, 0xce), //  3: Cyan\n\tivec3(0x9f, 0x2d, 0xad), //  4: Purple\n\tivec3(0x41, 0xb9, 0x36), //  5: Green\n\tivec3(0x27, 0x24, 0xc4), //  6: Blue\n\tivec3(0xef, 0xf3, 0x47), //  7: Yellow\n\tivec3(0x9f, 0x48, 0x15), //  8: Orange\n\tivec3(0x5e, 0x35, 0x00), //  9: Brown\n\tivec3(0xda, 0x5f, 0x66), // 10: Light Red\n\tivec3(0x47, 0x47, 0x47), // 11: Dark Gray\n\tivec3(0x78, 0x78, 0x78), // 12: Medium Gray\n\tivec3(0x91, 0xff, 0x84), // 13: Light Green\n\tivec3(0x68, 0x64, 0xff), // 14: Light Blue\n\tivec3(0xae, 0xae, 0xae)  // 15: Light Gray\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Compute pixel coordinate\n    ivec2 ires = ivec2(iResolution);\n    int scale = ires.y / 225;\n    ivec2 border = (ires / scale - ivec2(320,200)) / 2;\n\tvec2 coord = vec2(fragCoord.x, iResolution.y - fragCoord.y);\n    ivec2 p = ivec2(coord / float(scale)) - border;\n\n    // Run effect and select color\n    vec3 c = vec3(palette_rgb[effect(p) & 15]) / 255.0;\n\n    // Adjust saturation with mouse\n    float g = dot(c, vec3(0.3,0.6,0.1));\n\tc = mix(c, vec3(g), iMouse.x/iResolution.x);\n\n    fragColor = vec4(c,1.0);\n}\n","name":"Image","description":"","type":"image"}]}