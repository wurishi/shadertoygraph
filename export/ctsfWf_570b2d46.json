{"ver":"0.1","info":{"id":"ctsfWf","date":"1693548313","viewed":42,"name":"automatism2-drawing picture","username":"pik","description":"simulation\nreference:https://www.shadertoy.com/view/4l2cWD\nClick some points!","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["simulation"],"hasliked":0,"parentid":"DlXBDB","parentname":"automatism"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pix=vec2(1./iResolution.xy);\n    vec2 c=texture(iChannel0,fragCoord*pix).zw;\n    vec3 col=vec3(mod(c.x*111.,7.)/7.,mod(c.x*29.,5.)/5.,mod(c.x*19.,6.)/6.)*c.y;\n    col=pow(col,vec3(1./2.2));\n    fragColor=vec4(col,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Click some points!\n\n#define cs 2.\n#define sn 1.\n\nvec2 pix;\n\nconst float fade=0.5;//fade rate\nconst vec2 branch=vec2(40.,25.);//x:length of line,y:branch timing\nconst float dl=1.;//rate of de/increase length of branch\nconst float th=0.9;//threshold of branch\nconst float et=50.;//end time\n\nfloat turn(float i){\n    return mod(i,6.);\n}\n\nvoid trail(vec2 Coord,float id,vec2 dir,inout vec4 T,inout int Count){\n    vec2 coloredCoord=Coord+dir;\n    vec4 _S=texture(iChannel0,coloredCoord*pix);\n    if(_S.x>0. && iTime<et){\n        float _Sid=turn(id+2.);\n        if(_S.x>branch.y){\n            if(abs(_Sid-_S.y)<0.5){\n                T=vec4(_S.x-1.,_S.y,_S.z,1.);\n                Count++;\n            }\n        }\n        else{\n            float left=turn(_S.y+floor(iTime));\n            float right=turn(_S.y+floor(iTime)+step(th,sin(Coord.x+Coord.y)*step(iTime,et*0.8)));\n            float L=_S.z-dl*sin(iTime*5.);\n            if(abs(_Sid-left)<0.5){\n                T=vec4(L,left,L,1.);\n                Count++;\n            }\n            else if(abs(_Sid-right)<0.5){\n                T=vec4(L,right,L,1.);\n                Count++;\n            }\n        }\n    }\n}\n\nfloat detect(vec2 Coord){\n    float l=length(texture(iChannel1,Coord*pix).rgb);\n    return length(vec2(dFdx(l),dFdy(l)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(fragCoord.x>iResolution.x-1. || fragCoord.y>iResolution.y-1. || fragCoord.x<1. || fragCoord.y<1.)discard;\n    pix=vec2(1./iResolution.xy);\n    vec4 S=texture(iChannel0,fragCoord*pix);\n    if(S.x==0. && iTime<et+20.){\n        vec4 T=S;\n        int Count=0;\n        \n        trail(fragCoord,0.,vec2(0.,1.),T,Count);\n        trail(fragCoord,1.,vec2(-cs,sn),T,Count);\n        trail(fragCoord,2.,vec2(-cs,-sn),T,Count);\n        trail(fragCoord,3.,vec2(0,-1.),T,Count);\n        trail(fragCoord,4.,vec2(cs,-sn),T,Count);\n        trail(fragCoord,5.,vec2(cs,sn),T,Count);\n        \n        if(Count==1)S=T;\n    }\n    else{\n        S.x=0.;\n    }\n    //FADE\n    float d=detect(fragCoord);\n    if(S.w>0. && d<0.1){\n        S.w-=fade*iTimeDelta;\n        if(S.w<0.){\n            S=vec4(0.);\n        }\n    }\n    ////MOUSE\n    if(iMouse.z>0.){\n        vec2 point=iMouse.xy+0.5-fragCoord;\n        if(dot(point,point)<0.05){\n            S=vec4(branch.x,turn(floor(iTime*397.)),branch.x,1.);\n        }\n    }\n    fragColor=S;\n}","name":"Buffer A","description":"","type":"buffer"}]}