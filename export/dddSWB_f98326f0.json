{"ver":"0.1","info":{"id":"dddSWB","date":"1680444961","viewed":134,"name":"interpolating two points","username":"jonasfrey","description":"interpolation","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["points"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 o_fc_nor = (fragCoord.xy - iResolution.xy*.5)/ iResolution.y;\n    float n1 = length(o_fc_nor - vec2(-0.2,0.));\n    float n2 = length(o_fc_nor - vec2(0.2,0.));\n    float n_factor = (sin(iTime)*0.5+.5);\n    float n = \n        (1.-n_factor)*n1 + \n        n_factor * n2;\n    float nss = smoothstep(0.2, 0.21, n);\n    fragColor = vec4(\n        nss\n    );\n    if(o_fc_nor.y < 0.){\n\n        fragColor = vec4(\n            n1, \n            0., \n            n2, \n            1.\n        );\n    }\n    float n1d = smoothstep(0.011, 0.01 , n1);\n    fragColor += vec4(n1d, 0., 0., 1.);\n    float n2d = smoothstep(0.011, 0.01 , n2);\n    fragColor += vec4(n2d, 0., 0., 1.);\n}","name":"Image","description":"","type":"image"}]}