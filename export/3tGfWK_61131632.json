{"ver":"0.1","info":{"id":"3tGfWK","date":"1615017815","viewed":68,"name":"Truchet Circles","username":"RiceFields","description":"Truchet  Tiles","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// deterministic random\nfloat random(vec2 uv) {\n    return fract(sin(dot(uv, vec2(74, 100.0f)) * 0.00005f*(iTime+82.0f)));\n}\n\n// Anti-alias smoothstep\nfloat aastep(float threshold, float value) {\n    // coz using fwidth introduces seams due to discontinuity by fract\n    float afwidth = 10.0f/iResolution.y;\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\n}\n\nfloat stroke(float f, float size, float width) {\n    return aastep(size, f+width*0.5f) - aastep(size, f-width*0.5f);\n}\n\nvec2 truchetPattern(vec2 uv) {\n    vec2 ipos = floor(uv); // index of each tile\n    vec2 fpos = uv - ipos; // uv of each tile, introduces discontinuity to uv\n    float ran = random(ipos); // random based on tile\n    \n    // sub-divide for truchet tiles\n    float index = fract((ran-0.5f)*2.0f);\n    // modify tex_coord for each sub-cell\n    if(index > 0.75) {\n        fpos = vec2(1.0f) - fpos;\n    } else if (index > 0.5) {\n        fpos = vec2(1.0f-fpos.x, fpos.y);\n    } else if(index > 0.25) {\n        fpos = 1.0f-vec2(1.0f-fpos.x, fpos.y);\n    }\n    return fpos;\n}\n\nfloat SDFCircle(vec2 uv) {\n    return length(uv-0.5f);\n}\n\nvec3 drawTile(vec2 uv) {\n    return vec3(stroke(SDFCircle(uv+0.5f), 0.5f, 0.05f)) + vec3(stroke(SDFCircle(uv-0.5f), 0.5f, 0.05f));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    uv *= 10.0f; // tile\n    \n    vec2 tile = truchetPattern(uv);\n    \n    vec3 col = drawTile(tile);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}