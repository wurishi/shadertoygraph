{"ver":"0.1","info":{"id":"l323zz","date":"1708155142","viewed":101,"name":"basic grid + rotozoom","username":"caps","description":"My first shader! I hate the AA but it looked worse without it I think.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid","first","rotozoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random1(vec2 st) {return fract(sin(dot(st.xy, vec2(12354.948, 78.2533))) * 38.54531);}\n\n/* Gotta be a btter way to do this? */\nvec4 add_colour(vec2 uv)\n{\n\tvec3 c;\n\tfloat t = iTime / 20.;\n\tint i = int(random1(uv) * 8.);\n\tif (i == 0) c = vec3(.8, .2, .3);\n\telse if (i == 1) c = vec3(.9, .4, .2);\n\telse if (i == 2) c = vec3(.9, .6, .3);\n\telse if (i == 3) c = vec3(.9, .8, .5);\n\telse if (i == 4) c = vec3(.2, .9, 1);\n\telse if (i == 5) c = vec3(.2, .6, 1);\n\telse if (i == 6) c = vec3(.9, .2, 1);\n\telse c = vec3(1, .2, .6);\n\n\treturn vec4(c / (.98545 + fract(sin(dot(uv + vec2(t), vec2(2.5, 1.5))) * 2.2)), 1);\n}\n\nvec4 grid(vec2 uv)\n{\n    //translate + rotate + zoom\n\tfloat t = iTime / 4.;\n\tuv += sin(iTime);\n\tuv = vec2(uv.x * cos(t) + uv.y * sin(t), uv.x * -sin(t) + uv.y * cos(t));\n\tuv *= (2. + sin(iTime * 2.)) / 2.;\n    //make the grid\n\tvec2 fpos = fract(uv),\n        square_size = smoothstep(.9, 1., abs(fpos * 2. - 1.)); //super basic aa\n\tfloat result = square_size.x + square_size.y;\n\tvec2 dist = fpos - vec2(.5);\n    //grid lines\n\tvec4 col = vec4(0.) - result;\n    //fill the squares\n\tif (length(dist) < .6) col += add_colour(floor(uv)) - result;\n\tif (length(dist) < 1.2) col *= 1.5 - (length(dist) - .6) / .6;\n\treturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = grid((fragCoord.xy - .5 * iResolution.xy) / iResolution.y * 10.);\n}","name":"Image","description":"","type":"image"}]}