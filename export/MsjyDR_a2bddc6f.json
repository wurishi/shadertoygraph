{"ver":"0.1","info":{"id":"MsjyDR","date":"1491692114","viewed":308,"name":"Collatz Flow","username":"metabog","description":"Using collatz formula to draw some cool particles. ","likes":11,"published":1,"flags":32,"usePreview":0,"tags":["collatzconjecture","dynamicalsystems"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.x/iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 rval = texture(iChannel1,uv);\n    \n    //Film grain: https://www.shadertoy.com/view/4sXSWs\n    float x = (uv.x + 4.0 ) * (uv.y + 4.0 ) * (iTime * 10.0);\n\tvec4 grain = vec4(mod((mod(x, 13.0) + 1.0) * (mod(x, 123.0) + 1.0), 0.01)-0.005) * 8.0;\n    \n\tfragColor = rval+grain;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"bool iseven(int number) { return number%2==0;}\n\nconst int numcollatz = 128;\nconst float scaling = 0.9; //affects speed\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    int index = int(iResolution.x*(fragCoord.y) + fragCoord.x) - int(iResolution.x);\n\n    vec4 prev = texture(iChannel0,fragCoord / iResolution.xy);\n    if(iFrame%20000==0) prev = vec4(0.5,0.5,float(index*128+10),3.14f*2.0f*(float(index)/float(numcollatz)));\n    \n    vec4 new_data = vec4(0.25);\n    \n    if(index<numcollatz)\n    {\n        float angle = prev.w;\n        vec2 pos = prev.xy;\n        int number = int(prev.z);\n        if(number!=1)\n        {\n        \tif(iseven(number))\n        \t{\n                number = number/2;\n                angle +=  0.1*scaling;\n        \t}\n        \telse \n        \t{   \n        \t  \tnumber = number*3 + 1;\n                angle -= 0.11*scaling;\n       \t\t}\n        }\n        \n        pos+=vec2(cos(angle),sin(angle))*0.0009f*scaling;\n    \tnew_data = vec4(pos,float(number),angle);\n    }\n    \n    fragColor = new_data;\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat circled(float len, float rad) {\n\tfloat d = len - rad;\n\treturn d;\n}\n\nfloat smin( float a, float b, float k )\n{\n    float res = exp( -k*a ) + exp( -k*b );\n    return -log( res )/k;\n}\n\nconst int numcollatz = 128;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 prev = texture(iChannel1,(fragCoord) / iResolution.xy)*0.95;\n\t//vec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    float func = 1000.0;\n    \n    if(iFrame%20000==0) prev = vec4(0.0,0.0,0.0,0.0);\n    vec4 outp = vec4(1.0);\n    for(int i =0; i<numcollatz;i++)\n    {        \n        int x = i%int(iResolution.x);\n        int y = i/int(iResolution.x);\n        \n        vec3 col = hsv2rgb(vec3(float(i)/128.0f, 0.3f,1.0f));\n        \n        vec4 rval = texture(iChannel0,vec2(float(x),float(y)) / iResolution.xy);\n        vec2 pos = (rval.xy - vec2(0.5,0.5))* iResolution.y*2.0 + iResolution.xy*0.5f;\n        float radius = 7.0;\n        float len = length(pos-fragCoord);       \n        func = smin(func,circled(len, 5.0),0.06);\n        \n        if(len<radius) \n           prev+= vec4(col,1.0f)*0.035*clamp(iTime*0.1,0.0f,1.0f);\n    }\n    \n    outp = vec4(1.0)*(1.0-func);\n    prev+=outp*0.0006;\n    \n    fragColor = prev;\n}","name":"Buf B","description":"","type":"buffer"}]}