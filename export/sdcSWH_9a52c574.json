{"ver":"0.1","info":{"id":"sdcSWH","date":"1633022838","viewed":48,"name":"Waves - 1","username":"1rosehip","description":"Waves","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define NUM_LAYERS 4.0\n\n/**\n * create a rotation matrix for the given angle in radians\n */\nmat2 getRotationMatrix(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n\n    return mat2(c, -s,\n                s, c);\n}\n\n/**\n * random that returns float in range [0.0, 1.0]\n */\nfloat random(vec2 pos) {\n    pos = fract(pos * vec2(123.34, 456.21));\n    pos += dot(pos, pos + 45.32);\n    return fract(pos.x * pos.y);\n}\n\n/**\n * scale a range [min,max] to [a,b]\n * f(x) = (b-a)*(x - min)/(max - min) + a\n */\nfloat convertRange(float minimal, float maximal, float a, float b, float x){\n    return (b-a)*(x - minimal)/(maximal - minimal) + a;\n}\n\n/**\n * draw a wave\n */\nfloat createWave(vec2 uv, float width, float dir, float depth) {\n\n    float soft = 0.1;\n\n    float anim = convertRange(-1.0, 1.0, 0.3, 1.0, sin(iTime));\n\n    float anim2 = convertRange(-1.0, 1.0, -0.9 * depth, 0.9 * depth, cos(iTime));\n\n    uv.x = dir * cos(uv.y * 3.14 + anim2) + sin(uv.x * 3.14) * anim;\n\n    // draw a centered vertical line\n    float drop = smoothstep(0.5 + width, 0.5 + width + soft, uv.x) + smoothstep(uv.x, uv.x + soft, 0.5 - width);\n\n    // make it white\n    return 1.0 - drop;\n}\n\nvec3 createLayer(vec2 uv, float dir, float depth){\n    \n    vec3 result = vec3(0);\n\n    // create multiple copies of the screen\n    vec2 copies = fract(uv);\n    vec2 index = floor(uv);\n\n    // create a wave\n    float wave = createWave(copies, 0.005 + depth / 10.0, dir, depth);\n\n    // create a random color\n    float rnd = random(index);\n    vec3 randomColor = sin(vec3(0.2, 0.3, 0.9) * fract(rnd * 2345.2));\n    \n    // set the color\n    result = mix(result, randomColor, wave);\n\n    return result;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalize coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    float linearMoveSpeed = 0.2;\n\n    // set background color\n    vec3 color = mix(vec3(0.0627, 0.2235, 0.6745), vec3(0.5608, 0.5608, 0.5608), sqrt(uv.y));\n\n    // rotate the rain ;)\n    mat2 matr = getRotationMatrix(10.0 * 3.14 / 180.0);\n    uv = (matr * (uv - 0.5)) + 0.5;\n\n    for(float i=0.0; i<1.0; i += 1.0 / NUM_LAYERS) {\n        float depth = fract(i);\n\n        // make depth in the required range\n        float scale = mix(15.0, 5.0, depth);\n\n        // create one level\n        float dir = mod(depth, 2.0) == 0.0 ? -1.0 : 1.0;\n        vec3 layer = createLayer((uv + depth) * scale + sin(iTime * linearMoveSpeed * depth) , dir, depth);\n        color = mix(color, vec3(1.0, 1.0, 1.0), layer);\n    }\n\n    fragColor = vec4(color, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}