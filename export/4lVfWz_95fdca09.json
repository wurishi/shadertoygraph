{"ver":"0.1","info":{"id":"4lVfWz","date":"1542232381","viewed":68,"name":"Simple Spiral Test","username":"jangxx","description":"Basic spiral (port from another project)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI2 6.28318530718\n\nbool equals(float val, float check, float tolerance) {\n    if (val + tolerance > check && val - tolerance < check) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nbool equalsMod(float val, float check, float tolerance, float modulo) {\n    if (mod(mod(val, modulo) - check, modulo) < tolerance) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float aspect = iResolution.x / iResolution.y;\n    \n    const vec2 centerOffset = vec2(0,0);\n    const float speed = 5.0;\n    const float lineThickness = 0.5 * PI2;\n\n    vec2 pos = (uv * 2.0) - vec2(1, 1);\n    pos -= centerOffset;\n\t\n    pos.x *= aspect;\n    \n    float radius = length(pos);\n    float angle = acos(pos.y / radius);\n    if (pos.x <= 0.0) {\n        angle = (PI2) - angle;\n    }\n\n    angle = mod(angle + iTime * speed, PI2);\n\n    float r = radius * 10.0 * PI2;\n\n    if (equalsMod(r, angle, lineThickness, PI2)) {\n        fragColor = vec4(1,1,1,1);\n    } else {\n        fragColor = vec4(0,0,0,1);\n    }\n}","name":"Image","description":"","type":"image"}]}