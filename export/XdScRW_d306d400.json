{"ver":"0.1","info":{"id":"XdScRW","date":"1493670068","viewed":218,"name":"TexturedSphere","username":"bytewave","description":"TexturedSphere","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["texturedsphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3zn","filepath":"/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","previewfilepath":"/media/ap/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 normalFromTexture(vec2 uv, sampler2D sam , float filterSize)\n{\n    vec3 Center = texture(sam,uv).xyz;\n    vec3 Right = texture(sam,uv + vec2(filterSize,0.)).xyz;\n    vec3 Up = texture(sam,uv + vec2(0.,filterSize)).xyz;\n    \n    float valueCenter = (Center.x + Center.y + Center.z) * 0.33333333333;\n    float valueRight = (Right.x + Right.y + Right.z) * 0.33333333333;\n    float valueUp = (Up.x + Up.y + Up.z) * 0.33333333333;\n    \n    vec3 PosCenter = vec3(uv,valueCenter);\n    vec3 PosRight = vec3(uv + vec2(filterSize,0.),valueRight );\n    vec3 PosUp = vec3(uv+ vec2(0.,filterSize),valueUp);\n    \n    \n    vec3 X = normalize(PosRight - PosCenter);\n    vec3 Y = normalize(PosUp - PosCenter);\n    vec3 Z = cross(X,Y);\n    \n    return normalize( Z + vec3(0.,0.,.25));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float screenRation = iResolution.x / iResolution.y;\n    uv -= 0.5;\n    uv *= 2.;\n        \n    uv.x *= screenRation;\n\n    float sphere = 1. - length(uv);\n    sphere = sqrt(sphere);\n    \n    vec3 norm = normalize(vec3(uv/2.,sqrt(sphere) ));\n    \n    vec3 Pos = norm;\n    \n    vec2 uvSphere = norm.xy + vec2(iTime * 0.1,0.);\n    vec4 tex = texture(iChannel0,uvSphere);\n    \n    vec3 normalMap = normalFromTexture(uvSphere,iChannel0,-0.003);\n    \n    \n    vec3 posLight = vec3(sin(iTime),cos(iTime),1.) * 5.;    \n    vec3 LightDir =  normalize( posLight - Pos);\n    \n    float NormalMapLevel = 0.15;\n    vec3 NormalCompo = mix(norm , norm - normalMap,NormalMapLevel);\n    \n    float Lambert = dot(LightDir,normalize(NormalCompo));\n    \n    vec3 halfWay = normalize(LightDir + vec3(0.,0.,1.));\n    \n    vec4 spec = pow(dot(halfWay,normalize(NormalCompo)),20.) * vec4(1.);\n    \n    \n    \n    \n    float fresnell = 1. - norm.z;\n    vec4 reflection = texture(iChannel1,normalize(NormalCompo)) ;        \n    spec *= reflection;\n    vec4 albedo = tex;\n    float reflectivity = 2. * fresnell;\n    \n    float Metalicness = .25;\n    reflection = mix(reflection,reflection * albedo,Metalicness);\n    \n    \n    \n\tfragColor = mix(albedo,reflection ,clamp(reflectivity,0.,1. )) * Lambert + spec;   \n}","name":"Image","description":"","type":"image"}]}