{"ver":"0.1","info":{"id":"XXXfzj","date":"1728583804","viewed":51,"name":"fire v0.1","username":"rdinit","description":"simple fire animation using sin and cos","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  // Normalized pixel coordinates (from 0 to 1)\n  vec2 uv = fragCoord / iResolution.xy;\n\n  float r = 0.0;\n  float g = 0.0;\n  float b = 0.0;\n\n  float x = uv.x;\n  float y = uv.y;\n\n  float[] widths = float[](11.0, 7.0, 4.0, 14.0, 12.0, 9.0, 10.0);\n  float[] heights = float[](4.0, 3.0, 6.0, 3.0, 4.0, 6.0, 4.0);\n\n  float[] x_offsets = float[](0.5, 0.55, 0.45, 0.4, 0.52, 0.57, 0.48);\n  float[] y_offsets = float[](0.1, 0.0, -0.2, 0.0, 0.1, 0.0, 0.1);\n\n  float[] speeds = float[](6.0, 8.0, 4.0, 10.0, 4.0, 5.0, 6.0);\n\n  float[] powk1s = float[](0.05, 0.06, 0.08, 0.06, 0.03, 0.02, 0.03);\n  float[] powk2s = float[](-0.07, -0.06, -0.08, -0.07, -0.04, -0.04, -0.05);\n\n  float[] l_speeds = float[](0.4, 0.5, 1.5, 1.6, 1.2, 0.3, 0.4);\n  float[] l_sizes = float[](1.1, 1.3, 1.2, 0.8, 0.8, 1.2, 1.1);\n\n  for (int i = 0; i < 7; ++i) {\n    float width = widths[i];\n    float height = heights[i];\n\n    float x_offset = x_offsets[i];\n    float y_offset = y_offsets[i];\n\n    float speed = speeds[i];\n\n    float powk1 = powk1s[i];\n    float powk2 = powk2s[i];\n\n    float l_speed = l_speeds[i];\n    float l_size = l_sizes[i];\n\n    float xw = (x - x_offset) * width;\n    float yh = (y - y_offset) * height;\n\n    float lborder =\n        sin(l_size * yh - l_speed * speed * iTime) + powk1 * (yh * yh);\n    float rborder = cos(yh - speed * iTime) + powk2 * (yh * yh);\n\n    if ((xw > lborder) && (xw < rborder)) {\n      r = 1.0;\n      float center = 0.5 * (lborder + rborder);\n      g = 1.0 - 1.2 * abs(smoothstep(lborder, rborder, xw) - 0.5) -\n          smoothstep(0.1, 0.6, y);\n    }\n  }\n\n  vec3 col = vec3(r, g, b);\n\n  // Output to screen\n  fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}