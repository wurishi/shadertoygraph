{"ver":"0.1","info":{"id":"WtdcW2","date":"1609943262","viewed":99,"name":"fractal webcam","username":"regis","description":"fractal","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define webcam\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    vec2 m = iMouse.xy/iResolution.xy;\n    float zoom = pow(5., -m.x*10.);\n    \n    vec2 uv = (fragCoord.xy-.5*iResolution.xy) / iResolution.y;\n    uv *= 1.0;\n    vec3 c = vec3(uv, 1.0)*zoom*1.;\n    c+= vec3(.1, .2681, .2681);\n                         \n    \n    vec3 z = vec3(0.);\n    float iter = 0.;\n    \n    \n    const float max_iter = 200.;\n    \n    for(float i = 0.; i < max_iter; i++){\n        //z = vec2(z.x*z.x - 4.0*z.y*z.y, 4.*z.x*z.y)+c;\n        z = vec3(z.x * z.x - z.y * z.y, 2.*z.x*z.y + 2.*z.y*z.z, 2.0*z.x*z.z + z.z * z.z)+c;\n        if(length(z) > 2.)break;\n                \n        iter++;\n    \n    }\n    \n    float f = iter/max_iter;\n    \n    vec3 col = vec3(f);\n    \n    #ifdef webcam\n    if(f > 0.5){\n        uv+=0.5;\n        col = texture(iChannel0, uv).rgb;\n    }\n    #endif\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}