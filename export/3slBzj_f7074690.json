{"ver":"0.1","info":{"id":"3slBzj","date":"1588622577","viewed":164,"name":"diffusion-shader","username":"1337_shader","description":"diffusion","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["diffusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 normal(vec2 uv){\n    vec3 delta = vec3(1./iResolution.xy, 0.);\n    float du = texture(iChannel0, uv + delta.xz).x - texture(iChannel0, uv - delta.xz).x;\n    float dv = texture(iChannel0, uv + delta.zy).x - texture(iChannel0, uv - delta.zy).x;\n    return normalize(vec3(du,dv,1.));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    \n    vec4 data = texture(iChannel0,uv);\n    \n    \n    float c = data.x-data.y;\n    vec3 col = vec3(c);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\n\n\nfloat laplaceA(ivec2 pos) {\n  float sumA = 0.0;\n  sumA += texelFetch(iChannel0,pos,0).x * -1.;\n  sumA += texelFetch(iChannel0,pos-ivec2(1,0),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos+ivec2(1,0),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos+ivec2(0, 1),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos-ivec2(0, 1),0).x * 0.2;\n  sumA += texelFetch(iChannel0, pos-ivec2( 1, 1),0).x * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2(1,- 1),0).x * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2( 1, 1),0).x  * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2(-1, +1),0).x * 0.05;\n  return sumA;\n}\n\nfloat laplaceB(ivec2 pos) {\n   float sumB = 0.0;\n  sumB += texelFetch(iChannel0,pos,0).y * -1.;\n  sumB += texelFetch(iChannel0,pos-ivec2(1,0),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos+ivec2(1,0),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos+ivec2(0, 1),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos-ivec2(0, 1),0).y * 0.2;\n  sumB += texelFetch(iChannel0, pos-ivec2( 1, 1),0).y * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2(1,- 1),0).y * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2( 1, 1),0).y  * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2(-1, +1),0).y * 0.05;\n  return sumB;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 coord = ivec2(fragCoord);\n    vec2 uv = UV;\n\n    float dA = 1.0;\n\tfloat dB = 0.5;\n\tfloat feed = F;\n\tfloat kill = K;\n\n    \n    \n    float a = texelFetch(iChannel0,coord,0).x;\n    float b = texelFetch(iChannel0,coord,0).y;\n\n     if(iFrame == 0)\n      {\n          a = 1.0f;\n          b = step(.01,length(uv-0.5))<1. ? 1. : 0.;\n      }\n    \t\n    \n    vec2 next = vec2(0);\n    next.x = a +\n        (dA * laplaceA(coord)) -\n        (a * b * b) +\n        (feed * (1.0 - a));\n      next.y = b +\n        (dB * laplaceB(coord)) +\n        (a * b * b) -\n        ((kill + feed) * b);\n    \n\n      next = clamp(next,0.0f,1.0f);\n     \n    \n    \n    fragColor=vec4(next,0,1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\n\n\n\nfloat laplaceA(ivec2 pos) {\n  float sumA = 0.0;\n  sumA += texelFetch(iChannel0,pos,0).x * -1.;\n  sumA += texelFetch(iChannel0,pos-ivec2(1,0),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos+ivec2(1,0),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos+ivec2(0, 1),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos-ivec2(0, 1),0).x * 0.2;\n  sumA += texelFetch(iChannel0, pos-ivec2( 1, 1),0).x * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2(1,- 1),0).x * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2( 1, 1),0).x  * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2(-1, +1),0).x * 0.05;\n  return sumA;\n}\n\nfloat laplaceB(ivec2 pos) {\n   float sumB = 0.0;\n  sumB += texelFetch(iChannel0,pos,0).y * -1.;\n  sumB += texelFetch(iChannel0,pos-ivec2(1,0),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos+ivec2(1,0),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos+ivec2(0, 1),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos-ivec2(0, 1),0).y * 0.2;\n  sumB += texelFetch(iChannel0, pos-ivec2( 1, 1),0).y * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2(1,- 1),0).y * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2( 1, 1),0).y  * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2(-1, +1),0).y * 0.05;\n  return sumB;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 coord = ivec2(fragCoord);\n    vec2 uv = UV;\n\n\n\tfloat dA = 1.0;\n\tfloat dB = 0.5;\n\tfloat feed = F;\n\tfloat kill = K;\n\n    \n    \n    float a = texelFetch(iChannel0,coord,0).x;\n    float b = texelFetch(iChannel0,coord,0).y;\n\n   \n    \t\n    \n    vec2 next = vec2(0);\n    next.x = a +\n        (dA * laplaceA(coord)) -\n        (a * b * b) +\n        (feed * (1.0 - a));\n      next.y = b +\n        (dB * laplaceB(coord)) +\n        (a * b * b) -\n        ((kill + feed) * b);\n    \n\n      next = clamp(next,0.0f,1.0f);\n     \n    \n    \n    fragColor=vec4(next,0,1);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"\n\n\n\nfloat laplaceA(ivec2 pos) {\n  float sumA = 0.0;\n  sumA += texelFetch(iChannel0,pos,0).x * -1.;\n  sumA += texelFetch(iChannel0,pos-ivec2(1,0),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos+ivec2(1,0),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos+ivec2(0, 1),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos-ivec2(0, 1),0).x * 0.2;\n  sumA += texelFetch(iChannel0, pos-ivec2( 1, 1),0).x * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2(1,- 1),0).x * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2( 1, 1),0).x  * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2(-1, +1),0).x * 0.05;\n  return sumA;\n}\n\nfloat laplaceB(ivec2 pos) {\n   float sumB = 0.0;\n  sumB += texelFetch(iChannel0,pos,0).y * -1.;\n  sumB += texelFetch(iChannel0,pos-ivec2(1,0),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos+ivec2(1,0),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos+ivec2(0, 1),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos-ivec2(0, 1),0).y * 0.2;\n  sumB += texelFetch(iChannel0, pos-ivec2( 1, 1),0).y * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2(1,- 1),0).y * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2( 1, 1),0).y  * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2(-1, +1),0).y * 0.05;\n  return sumB;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 coord = ivec2(fragCoord);\n    vec2 uv = UV;\n\n\n    float dA = 1.0;\n\tfloat dB = 0.5;\n\tfloat feed = F;\n\tfloat kill = K;\n\n    \n    \n    float a = texelFetch(iChannel0,coord,0).x;\n    float b = texelFetch(iChannel0,coord,0).y;\n\n   \n    \t\n    \n    vec2 next = vec2(0);\n    next.x = a +\n        (dA * laplaceA(coord)) -\n        (a * b * b) +\n        (feed * (1.0 - a));\n      next.y = b +\n        (dB * laplaceB(coord)) +\n        (a * b * b) -\n        ((kill + feed) * b);\n    \n\n      next = clamp(next,0.0f,1.0f);\n     \n    \n    \n    fragColor=vec4(next,0,1);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"\n\n\n\nfloat laplaceA(ivec2 pos) {\n  float sumA = 0.0;\n  sumA += texelFetch(iChannel0,pos,0).x * -1.;\n  sumA += texelFetch(iChannel0,pos-ivec2(1,0),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos+ivec2(1,0),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos+ivec2(0, 1),0).x * 0.2;\n  sumA += texelFetch(iChannel0,pos-ivec2(0, 1),0).x * 0.2;\n  sumA += texelFetch(iChannel0, pos-ivec2( 1, 1),0).x * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2(1,- 1),0).x * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2( 1, 1),0).x  * 0.05;\n  sumA += texelFetch(iChannel0, pos+ivec2(-1, +1),0).x * 0.05;\n  return sumA;\n}\n\nfloat laplaceB(ivec2 pos) {\n   float sumB = 0.0;\n  sumB += texelFetch(iChannel0,pos,0).y * -1.;\n  sumB += texelFetch(iChannel0,pos-ivec2(1,0),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos+ivec2(1,0),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos+ivec2(0, 1),0).y * 0.2;\n  sumB += texelFetch(iChannel0,pos-ivec2(0, 1),0).y * 0.2;\n  sumB += texelFetch(iChannel0, pos-ivec2( 1, 1),0).y * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2(1,- 1),0).y * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2( 1, 1),0).y  * 0.05;\n  sumB += texelFetch(iChannel0, pos+ivec2(-1, +1),0).y * 0.05;\n  return sumB;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 coord = ivec2(fragCoord);\n    vec2 uv = UV;\n\n\n    float dA = 1.0;\n\tfloat dB = 0.5;\n\tfloat feed = F;\n\tfloat kill = K;\n\n    \n    \n    float a = texelFetch(iChannel0,coord,0).x;\n    float b = texelFetch(iChannel0,coord,0).y;\n\n   \n    \t\n    \n    vec2 next = vec2(0);\n    next.x = a +\n        (dA * laplaceA(coord)) -\n        (a * b * b) +\n        (feed * (1.0 - a));\n      next.y = b +\n        (dB * laplaceB(coord)) +\n        (a * b * b) -\n        ((kill + feed) * b);\n    \n\n      next = clamp(next,0.0f,1.0f);\n     \n    \n    \n    fragColor=vec4(next,0,1);\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define MODE 0\n\n\n#if MODE==0\n\n#define F uv.y*0.05\n#define K uv.x*0.05+0.025\n\n#elif MODE==1\n\n#define F 0.0367\n#define K 0.0649\n\n#elif MODE==2\n#define F 0.02\n#define K 0.047\n#elif MODE==3\n#define F 0.0660\n#define K 0.0652\n#endif\n\n\n#define UV (fragCoord/iResolution.xy)","name":"Common","description":"","type":"common"}]}