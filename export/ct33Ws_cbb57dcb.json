{"ver":"0.1","info":{"id":"ct33Ws","date":"1683299270","viewed":61,"name":"Warp vision","username":"gabrieloc","description":"Alien eyeball for our upcoming strategy game chaotic era","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cornea = .1;\nfloat speed = .5;\nfloat warp = 30.;\n\nfloat random(in vec2 st) {\n  return fract(sin(dot(st.xy,\n  vec2(12.9898, 78.233))) *\n  43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise(in vec2 st) {\n  vec2 i = floor(st);\n  vec2 f = fract(st);\n\n  // Four corners in 2D of a tile\n  float a = random(i);\n  float b = random(i + vec2(1.0, 0.0));\n  float c = random(i + vec2(0.0, 1.0));\n  float d = random(i + vec2(1.0, 1.0));\n\n  vec2 u = f * f * (3.0 - 2.0 * f);\n\n  return mix(a, b, u.x) +\n  (c - a) * u.y * (1.0 - u.x) +\n  (d - b) * u.x * u.y;\n}\n\nfloat fbm(in vec2 st, in int octaves, in float lacunarity, in float gain) {\n  // Initial values\n  float value = 0.0;\n  float amplitude = 0.5;\n  float frequency = 0.;\n  \n  // Loop of octaves\n  for (int i = 0; i < octaves; i++) {\n    value += amplitude * noise(st);\n    st *= lacunarity;\n    amplitude *= gain;\n  }\n  return value;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord / iResolution.xy;\n  uv.x = 0.5 - abs(uv.x - 0.5);\n  uv = (uv - 0.5) * vec2(iResolution.x / iResolution.y, 1) + 0.5;\n\n  float d = smoothstep(1., 0., length(uv - .5) * 2.);\n  float t = fract(iTime * speed);\n  float r = 0.;\n\n  r += smoothstep(1., 0., mix(\n    fbm(((uv - .5) * warp * d * (1. + t) + .5), 6, 2., .2),\n    fbm(((uv - .5) * warp * d * t + .5), 6, 2., .2),\n    t\n  ));\n  r -= smoothstep(cornea + .3, cornea, length(uv - .5) * 2.);\n  fragColor = vec4(r, r, r, 1);\n}","name":"Image","description":"","type":"image"}]}