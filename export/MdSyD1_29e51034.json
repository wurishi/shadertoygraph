{"ver":"0.1","info":{"id":"MdSyD1","date":"1491901586","viewed":1116,"name":"glowing","username":"qu1795","description":"a simple example for glowing texture outline. your comments are welcome, -_^","likes":12,"published":3,"flags":0,"usePreview":0,"tags":["effect","glowing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float radius = 10.0;\nconst vec3 glowColor = vec3(0.9, 0.2, 0.0);\n\nfloat coefficient()\n{\n\tfloat v = mod(iTime, 3.0);\n    if(v > 1.5)\n        v = 3.0 - v;\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 unit = 1.0 / iResolution.xy;\n    vec4 texel = texture(iChannel0, uv);\n    vec4 finalColor = vec4(0.0);\n    float density = 0.0;\n\n   \tif(texel.a >= 1.0)\n    {\n        finalColor = vec4(texel.rgb, 1.0);\n    }\n    else\n    {\n        for(int i = 0; i < int(radius); ++i)\n        {\n            density += texture(iChannel0, vec2(uv.x + unit.x * float(i), uv.y + unit.y * float(i))).a;\n            density += texture(iChannel0, vec2(uv.x - unit.x * float(i), uv.y + unit.y * float(i))).a;\n            density += texture(iChannel0, vec2(uv.x - unit.x * float(i), uv.y - unit.y * float(i))).a;\n            density += texture(iChannel0, vec2(uv.x + unit.x * float(i), uv.y - unit.y * float(i))).a;\n\n            //density += texture(iChannel0, vec2(uv.x - unit.x * i, uv.y)).a;\n            //density += texture(iChannel0, vec2(uv.x + unit.x * i, uv.y)).a;\n            //density += texture(iChannel0, vec2(uv.x, uv.y - unit.y * i)).a;\n            //density += texture(iChannel0, vec2(uv.x, uv.y + unit.y * i)).a;\n\n        }\n        finalColor = vec4(glowColor * density / radius * coefficient(), 1.0);\n        finalColor += vec4(texel.rgb * texel.a, texel.a);\n    }\n\tfragColor = finalColor;\n}\n","name":"Image","description":"","type":"image"}]}