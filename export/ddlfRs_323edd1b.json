{"ver":"0.1","info":{"id":"ddlfRs","date":"1689087868","viewed":60,"name":"Layering","username":"pik","description":"pik","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S smoothstep\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\nvec3 transform(vec3 p,float angle){\n    p.xz*=rot(angle*0.5);\n    p.xy*=rot(angle*0.7);\n    return p;\n}\n\nvec4 noiseball(vec3 ro,vec3 rd,vec3 pos,float angle,float r){\n    vec4 col=vec4(0.);\n    float t=dot(pos-ro,rd);\n    vec3 p=ro+rd*t;\n    float y=length(pos-p);\n    if(y<r){\n        float x=sqrt(r-y);\n        vec3 pF=ro+rd*(t-x)-pos;\n        pF=transform(pF,angle);\n        vec2 uvF=vec2(atan(pF.x,pF.z),pF.y);\n        float f=fbm_flow_perlin(uvF,iTime*8.);\n        vec4 front=vec4(vec3(f),S(0.4,0.8,f))*S(0.8,0.6,abs(uvF.y));\n        vec3 pB=ro+rd*(t+x)-pos;//back intersection\n        pB=transform(pB,angle);\n        vec2 uvB=vec2(atan(pB.x,pB.z),pB.y);\n        float b=fbm_flow_perlin(uvB,iTime*8.);\n        vec4 back=vec4(vec3(b),S(0.4,0.8,b))*S(0.8,0.6,abs(uvB.y));\n        col=mix(back,front,front.a);\n        \n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    vec2 M=iMouse.xy/iResolution.xy-0.5;\n    vec3 bg=vec3(0.2,0.2,0.7)*fbm_perlin_ridge(uv*2.)*mix(vec3(0.3,0.9,0.3),vec3(0.9,0.2,0.9),valuenoise(uv*2.));\n    vec4 col = vec4(bg,0.);\n    for(float i=0.1;i<=1.;i+=0.1){\n        vec3 ro=vec3(0.,0.,-2.);\n        vec3 rd=normalize(vec3(uv,1.));\n        vec4 noise=noiseball(ro,rd,vec3(0.),(iTime*i+i*10.)*sign(sin(i*50.)),i);\n        noise.rgb*=vec3(hash(vec2(i*8.,iTime*0.0001)),hash(vec2(4.,i*3.)),hash(vec2(i,i*10.)));\n        col=+mix(col,noise,noise.a);\n    }\n    col=pow(col,vec4(0.4545));\n\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define div 10.\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\nvec2 po(vec2 p)\n{\n    return vec2(length(p),atan(p.y,p.x));\n}\n\nvec2 va(vec2 q)\n{\n    return vec2(q.x*cos(q.y),q.y*sin(q.y));\n}\n\n\nfloat mix3(float l1,float l2, float l3,vec2 a)\n{\n    return l1*min(1.-a.x,1.-a.y)+l2*min(a.x,a.y)+l3*max(a.x-a.y,a.y-a.x);\n}\n\nfloat hash(vec2 p)\n{\n    return fract(sin(dot(p,vec2(78.398,12.862)))*38057.12);//[0,+1]\n}\n\nvec2 hash2(vec2 p)\n{\n    p=vec2(dot(p,vec2(78.3979,13.397)),dot(p,vec2(219.233,79.247)));\n    return 2.*fract(sin(p)*38807.12)-1.;//[-1,+1]\n}\n\nfloat blocknoise(vec2 p)\n{\n    p*=div;\n    vec2 i=floor(p);\n    return hash(i);\n}\n\nfloat valuenoise(vec2 p)\n{\n    p*=div;\n    vec2 i=floor(p);\n    vec2 f=p-i;\n    //vec2 u=f*f*(3.-2.*f);\n    vec2 u=f*f*f*(6.*f*f-15.*f+10.);\n    float v00=hash(i+vec2(0.,0.));\n    float v10=hash(i+vec2(1.,0.));\n    float v01=hash(i+vec2(0.,1.));\n    float v11=hash(i+vec2(1.,1.));\n    return mix(mix(v00,v10,u.x),mix(v01,v11,u.x),u.y);\n}\n\nfloat perlinnoise(vec2 p)\n{\n    p*=div;\n    vec2 i=floor(p);\n    vec2 f=p-i;\n    //vec2 u=f*f*(3.-2.*f);\n    vec2 u=f*f*f*(6.*f*f-15.*f+10.);\n    float v00=dot(hash2(i+vec2(0.,0.)),f-vec2(0.,0.));\n    float v10=dot(hash2(i+vec2(1.,0.)),f-vec2(1.,0.));\n    float v01=dot(hash2(i+vec2(0.,1.)),f-vec2(0.,1.));\n    float v11=dot(hash2(i+vec2(1.,1.)),f-vec2(1.,1.));\n    float t=mix(mix(v00,v10,u.x),mix(v01,v11,u.x),u.y);\n    return t*0.5+0.5;\n}\n\nfloat simplexnoise(vec2 p)\n{\n    p*=div;\n    p.x=p.x*1.1547;//1.1547=2/sqrt(3)\n    p.y=p.x*0.5+p.y;\n    vec2 i=floor(p);\n    vec2 f=p-i;\n    vec2 s=vec2(step(f.y,f.x),1.-step(f.y,f.x));\n    vec2 u=f*f*f*(6.*f*f-15.*f+10.);\n    float v00=dot(hash2(i+vec2(0.,0.)),f-vec2(0.,0.));\n    float v11=dot(hash2(i+vec2(1.,1.)),f-vec2(1.,1.));\n    float v10=dot(hash2(i+s),f-s);\n    float t=mix3(v00,v11,v10,u);\n    return 0.5*t+0.5;\n}\n\nfloat fbm_value(vec2 p)\n{\n    float r=0.;\n    float w=0.5;\n    for(int i=0;i<4;i++)\n    {\n        r+=w*valuenoise(p);\n        p*=2.0;\n        w*=0.5;\n    }\n    return r;\n}\n\nfloat fbm_perlin(vec2 p)\n{\n    float r=0.;\n    float w=0.5;\n    for(int i=0;i<4;i++)\n    {\n        r+=w*perlinnoise(p);\n        p*=2.0;\n        w*=0.5;\n    }\n    return r;\n}\n\nfloat fbm_simplex(vec2 p)\n{\n    float r=0.;\n    float w=0.5;\n    for(int i=0;i<4;i++)\n    {\n        r+=w*simplexnoise(p);\n        p*=2.0;\n        w*=0.5;\n    }\n    return r;\n}\n\nfloat fbm_perlin_turb(vec2 p)\n{\n    float r=0.;\n    float w=0.5;\n    for(int i=0;i<4;i++)\n    {\n        r+=w*abs(2.*perlinnoise(p)-1.);\n        p*=2.;\n        w*=0.5;\n    }\n    return r+0.2;\n}\n\nfloat fbm_perlin_ridge(vec2 p)\n{\n    float r=0.;\n    float w=0.5;\n    for(int i=0;i<4;i++)\n    {\n        r+=w*(0.8-abs(2.*perlinnoise(p)-1.))*(0.8-abs(2.*perlinnoise(p)-1.));\n        p*=2.;\n        w*=0.5;\n    }\n    return r+0.2;\n}\n\nfloat fbm_flow_perlin(vec2 p,float t)\n{\n    p += 0.03*sin( vec2(0.27,0.23)*t+ length(p)*vec2(4.1,4.3));\n    p*=0.5;\n    vec2 k=vec2(fbm_perlin(p),fbm_perlin(p+vec2(2.,4.5)));\n    //k +=0.1*iTime;//sin( vec2(0.12,0.14)*iTime + length(k));\n    k*=0.6;\n    vec2 l=vec2(fbm_perlin(k),fbm_perlin(k+vec2(2.,8.5)));\n    return 1.-dot(l,l);\n}\n\n\n","name":"Common","description":"","type":"common"}]}