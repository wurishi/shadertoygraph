{"ver":"0.1","info":{"id":"mlKSWh","date":"1686073493","viewed":144,"name":"Parametric Patterns","username":"noobcsf","description":"Having fun with patterns.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["patterns","colorful","motion","mesmerizing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float saturate(float value) { return max(0., min(value, 1.)); }\nvec4 saturate(vec4 value) { return max(vec4(0), min(value, vec4(1))); }\n\nvec4 col(vec2 uv) {\n  // float t = sin(iTime * 0.17 + length(uv) * 3.0)*2.0;\n  float t = sin(iTime * 0.17/2.0 + length(uv) * sin(iTime * 0.5) * 3.0)*4.0;\n  uv *=  2.5 + cos(iTime * 1.0) * 1.0;\n  uv *= 2.0;\n  uv = vec2(cos(t)*uv.x - sin(t) * uv.y, sin(t) * uv.x + cos(t) * uv.y);\n  float r = 0.3 + sin(iTime*2.0)*0.01;\n  float len = 0.;\n  float guv = saturate(1.0 - length(uv * (sin(iTime)) / 2.5));\n  guv = pow(guv, 0.7);\n  for(float i = 0.; i < 4.0; i++) {\n    uv = fract(uv* (sin(iTime * 0.12) * 0.5 + 1.5));\n    uv.x -= 0.5;\n    uv.y -= 0.5;\n    uv *= guv;\n    float l = fract(length(uv * 3.0) + iTime*0.5);\n    float f = smoothstep(0.5 - r, 0.5, l) - smoothstep(0.5, 0.5 + r, l);\n    len += f/3.0;\n  }\n\n  vec3 c1 = vec3(0.9, 1.0, 0.0);\n  vec3 c2 = vec3(0.0, 0.9, 0.9);\n  vec3 c3 = vec3(1.0, 0.9, 1.0);\n\n  vec3 c = mix(c1, c2, abs(sin(length(( uv * 3.0)) + iTime * 3.0)));\n\n  float k = smoothstep(0.8, 1.0, len);\n  vec3 color = mix(vec3(len/2.0) * c, c3, k);\n  return saturate(color.xyzx) * pow(guv, 0.1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 cFrag = gl_FragCoord.xy;\n  cFrag.y = iResolution.y - cFrag.y;\n  vec2 uv = cFrag / iResolution.x;\n  uv -= vec2(0.5, 0.5 * iResolution.y/iResolution.x);\n  uv/=0.5;\n\n  vec2 uv2 = uv - normalize(uv)*0.025;\n  vec2 uv3 = uv - normalize(uv)*0.050;\n\n  vec4 c1 = col(uv);\n  vec4 c2 = col(uv2);\n  vec4 c3 = col(uv3);\n  float k = pow(length(uv), 0.0);\n  float r1 = c2.r * k;\n  float r2 = c3.r * k;\n  fragColor = c1 + vec4(r1, 0.0, r2, 0.0);\n  fragColor -= pow(length(uv), 9.0)*0.2;\n  fragColor = saturate(fragColor);\n  fragColor.x= pow(fragColor.x, 0.9);\n  fragColor.y= pow(fragColor.y, 0.9);\n  fragColor.z= pow(fragColor.z, 0.9);\n}\n","name":"Image","description":"","type":"image"}]}