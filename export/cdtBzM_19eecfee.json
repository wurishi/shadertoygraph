{"ver":"0.1","info":{"id":"cdtBzM","date":"1696978440","viewed":39,"name":"pixelated fractal","username":"SnackEater","description":"yay","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["fractal","pixelated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 r = vec2(iResolution.xy);\n    vec2 uv = fragCoord/iResolution.xy;\n      \n       \n    \n    fragColor = vec4(texture(iChannel0,uv));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float customMap(float value, float start1, float stop1, float start2, float stop2) {\n    // Calculate the percentage (0.0 to 1.0) of the value in the first range\n    float normalizedValue = (value - start1) / (stop1 - start1);\n    \n    // Map the normalized value to the second range\n    return start2 + normalizedValue * (stop2 - start2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 bufResolution = ivec2(1920, 1080);\n\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n   \n    float speed = .2;\n    float r = 2./(pow((2. + iTime) * speed,(2. + iTime) * speed));\n    uv /= pow((1. + iTime * speed),(1. + iTime * speed));\n    vec3 col = vec3(1,1,1);\n     float a = iTime * .1;\n    uv *= mat2(cos(a),-sin(a),sin(a),cos(a));\n    uv.y -= .324931;\n    uv.x -= -.006372;\n   \n   \n    uv *= 2.;\n    vec2 z = uv;\n    vec2 c =  uv;\n    float I = 100.;\n    float I2 = 200.;\n    float iterations = 4000.;\n    float l = iterations;\n    \n    for(float i = 0.;i<iterations;i++){\n   \n    l --;\n    I --;\n    I2--;\n        z = vec2(z.x * z.x -z.y * z.y,2. * z.x * z.y) + c;\n        if(abs(length(z)) < 2.){\n       \n        col.rb=  vec2(l/iterations);\n        col.g = I/100.;\n        col.gb = vec2(I2/200.);\n         col.rb = vec2(i/iterations);\n        }\n       \n    }\n    \n       \n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}