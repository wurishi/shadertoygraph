{"ver":"0.1","info":{"id":"WlyyDz","date":"1610762982","viewed":228,"name":"fBm example","username":"hayama","description":"The Hurst exponent H is moving between 0 and 1\nLeft: Perlin noise base\nRight: value noise base","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["bd202101"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uvec3 k = uvec3(0x456789abu, 0x6789ab45u, 0x89ab4567u);\nconst uint max32 = 0xffffffffu;\nvec2 fragCoord_;\nvec2[8] gtable2 = vec2[](   //0.92387953 = cos(pi/8), 0.38268343 = cos(pi/8)\n    vec2(0.92387953, 0.38268343),\n    vec2(0.38268343, 0.92387953),\n    vec2(-0.92387953, 0.38268343),\n    vec2(-0.38268343, 0.92387953),\n    vec2(0.92387953, -0.38268343),\n    vec2(0.38268343, -0.92387953),\n    vec2(-0.92387953, -0.38268343),\n    vec2(-0.38268343, -0.92387953)\n);\nuint hash11u(uint n) {\n    n ^= (n << 24);\n    n ^= (n >> 1);\n    n ^= (n << 1);\n    return n * k.x;\n}\nvec2 hash22(vec2 p) {\n        uint n = hash11u(hash11u(uint(p.x)) + uint(p.y));\n        n = n >> 29;\n        n = n % 8u;\n        return gtable2[n];\n}\nfloat pnoise21(vec2 p) {\n    vec2 f = fract(p);\n    vec2 g00 = hash22(p);\n    vec2 g01 = hash22(p + vec2(0.0, 1.0));\n    vec2 g10 = hash22(p + vec2(1.0, 0.0));\n    vec2 g11 = hash22(p + vec2(1.0, 1.0));\n    float v00 = dot(g00, f);\n    float v01 = dot(g01, f - vec2(0.0, 1.0));\n    float v10 = dot(g10, f - vec2(1.0, 0.0));\n    float v11 = dot(g11, f - vec2(1.0, 1.0));\n    f = f * f * f * (10.0 - 15.0 * f + 6.0 * f * f); \n    float v = mix(mix(v00, v10, f.x), mix(v01, v11, f.x), f.y);\n    return 0.5 * v;\n}\n\nfloat hash21(vec2 p) {\n    uint n = hash11u(uint(p.x)) + uint(p.y);\n    return float(hash11u(n)) / float(max32);\n}\nfloat vnoise21(vec2 p) {\n    vec2 i = floor(p);\n    float v00 = hash21(i);\n    float v01 = hash21(i + vec2(0.0, 1.0));\n    float v10 = hash21(i + vec2(1.0, 0.0));\n    float v11 = hash21(i + vec2(1.0, 1.0));\n    vec2 f = fract(p);\n    f = f * f * (3.0 -2.0 * f); \n    return mix(mix(v00, v10, f.x), mix(v01, v11, f.x), f.y) - 0.5;\n}\n\nfloat fbm21(vec2 p, float G){\n    float val = 0.0;\n    float amp = 1.0;\n    float freq = 1.0;\n    for (int i = 0; i < 4; i++){\n        if (fragCoord_.x < 0.5 * iResolution.x){\n            val += amp * pnoise21(freq * p);\n        } else{\n            val += amp * vnoise21(freq * p);\n        }\n        amp *= G;\n        freq *= 2.01;\n    }\n    return val;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    fragCoord_ = fragCoord;\n    vec2 pos = fragCoord.xy/min(iResolution.x, iResolution.y);\n    pos *= 20.0;\n    pos += iTime;\n    float G = abs(mod(0.2 * iTime, 1.0) - 0.5) + 0.5;\n    float v = 0.5 * fbm21(pos, G) + 0.5;\n    fragColor = vec4(vec3(v), 1.0);\n}","name":"Image","description":"","type":"image"}]}