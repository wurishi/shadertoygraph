{"ver":"0.1","info":{"id":"lcB3zK","date":"1704404756","viewed":32,"name":"Kai macht Mandelbrot","username":"Dalmador","description":"My first real shader. Color palette generated with http://dev.thi.ng/gradients/\n ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.448,0.500,0.500);\n    vec3 b = vec3(0.468,0.500,0.500);\n    vec3 c = vec3(-0.812,0.500,0.333);\n    vec3 d = vec3(-0.112,0.500,0.667);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    // uv = zoom(uv, 1., 100., 1., 10.);\n    uv /= pow(1.3, iTime);\n    uv += vec2( -0.561, -0.6);\n    vec2 z = uv;\n    vec2 oz;\n    vec3 col = vec3(0.);\n    float iterations = 100.;\n    for (float i = 0.; i < iterations; i++) {\n        oz = z;\n        z.x = uv.x + z.x * z.x - z.y * z.y;\n        z.y = uv.y + 2. * oz.y * oz.x;\n        if (length(z) > 100.) {\n            col = palette(i/iterations);\n            break;\n        }\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}