{"ver":"0.1","info":{"id":"ldGSR1","date":"1462796639","viewed":469,"name":"Edge Blend","username":"udart","description":"Blending the edges of a texture to make it more seamless","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["edge","blend","fade"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 fade = vec2 (0.2, 0.2);\n\nvec4 textureFade(sampler2D tex, vec2 uv, vec2 fadeWidth) {\n    vec2 offsetuv = uv*vec2(1.0-fadeWidth.x, 1.0 - fadeWidth.y);\n    \n    vec2 scaling = 1.0 - fadeWidth;\n    float hBlend = clamp((uv.y-scaling.y)/fadeWidth.y,0.0,1.0); \n    float vBlend = clamp((uv.x-scaling.x)/fadeWidth.x, 0.0, 1.0);\n    \n    float q1Blend = hBlend * (1.0-vBlend);\n    vec2 q1Sample;\n    q1Sample.x = fract(offsetuv.x + fadeWidth.x);\n    q1Sample.y = fract(offsetuv.y + (fadeWidth.y * 2.0));\n    vec4 tex1 = texture(tex, q1Sample); \n    vec4 q1Col = q1Blend * tex1;\n\n    float q2Blend = hBlend * vBlend;\n    vec2 q2Sample;\n    q2Sample.x = fract(offsetuv.x + (fadeWidth.x * 2.0));\n    q2Sample.y = fract(offsetuv.y + (fadeWidth.y * 2.0));\n    vec4 tex2 = texture(tex, q2Sample);\n    vec4 q2Col = q2Blend * tex2;\n \n    float q3Blend = (1.0-hBlend) * (1.0 - vBlend);\n    vec2 q3Sample;\n    q3Sample.x = fract(offsetuv.x + fadeWidth.x);\n    q3Sample.y = fract(offsetuv.y + fadeWidth.y);\n    vec4 tex3 = texture(tex, q3Sample);\n\tvec4 q3Col = q3Blend * tex3;\n    \n    float q4Blend = (1.0-hBlend) * vBlend;\n    vec2 q4Sample;\n    q4Sample.x = fract(offsetuv.x + (fadeWidth.x * 2.0));\n    q4Sample.y = fract(offsetuv.y + fadeWidth.y);\n    vec4 tex4 = texture(tex, q4Sample);\n\tvec4 q4Col = q4Blend * tex4;\n    \n    return q1Col + q2Col + q3Col + q4Col;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = textureFade(iChannel0, uv, fade);\n}\n   ","name":"Image","description":"","type":"image"}]}