{"ver":"0.1","info":{"id":"tljfWD","date":"1598998151","viewed":142,"name":"Montecarlo Multisampler","username":"milesWaugh","description":"Demo for monte-carlo multisampling (restarting to time=0 will reset the samples)","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["demo","montecarlo","multisample"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 random(vec3 pos){\n    //Fract returns the fractional part (so fract(x) = x-floor(x))\n    float x = fract(sin(dot(pos, vec3(64.25375463, 23.27536534, 86.29678483))) * 59482.7542);\n    float y = fract(sin(dot(pos, vec3(86.28594852, 34.58198637, 25.58228349))) * 95837.9672);\n    return vec2(x, y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy/2.0)/iResolution.y;\n    uv += (random(vec3(uv.x, uv.y, iTime))-0.5)/iResolution.xy;\n    vec3 p = vec3(uv.x*(-1.0/uv.y),-1.0,-1.0/uv.y);\n    float col = 0.0;\n    if(uv.y<0.0){\n        if(p.x-floor(p.x)<0.5&&p.z-floor(p.z)<0.5){\n            col = 1.0;\n        }\n        if(p.x-floor(p.x)>0.5&&p.z-floor(p.z)>0.5){\n            col = 1.0;\n        }\n    }\n    uv = fragCoord/iResolution.xy;\n    //Multisamples \"col\"\n    fragColor = vec4(vec3(col),1.0)/float(iFrame+1)+texture(iChannel0, uv)*(1.0-1.0/float(iFrame+1));\n}","name":"Buffer A","description":"","type":"buffer"}]}