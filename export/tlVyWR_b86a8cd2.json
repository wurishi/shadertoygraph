{"ver":"0.1","info":{"id":"tlVyWR","date":"1610832441","viewed":69,"name":"Beginner Mix expanded line","username":"raoul","description":"Simple line expand.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define TUTORIAL 2\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    \n    \n#if TUTORIAL == 1    //le drapeau\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col = vec3(1.0,0.0,0.0); \n    //comme les coordonnées sont normalisé alors le max est a 1 \n    float tier = 1. / 3.; \n    \n    if(uv.x < tier){\n        col.x = 0.; \n    }\n    \n    if(tier < uv.x && uv.x < (tier * 2.)){\n     col.x = 1.; \n     col.y = 1.; \n     col.z = 1.; \n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n #elif TUTORIAL == 2    //la ligne\n     vec2 uv = fragCoord/iResolution.xy;\n     vec3 col = vec3(0.); \n     \n     //c est cette limite qui s'incremente \n     float limita = abs(mod(0.50 * iTime, 1.0)) + 0.1;\n     \n     if(limita < 0.5){\n     limita = 0.48;\n     }\n     \n     float limitb = 0.47; \n     step(0.1, limitb); \n     \n     \n     if( uv.y < limita && uv.y> limitb)\n     {\n         col = vec3(0.8,0.2,mod(0.1 * iTime, 1.0));\n     }\n     \n     fragColor = vec4(col,1.0);\n     \n #endif\n}","name":"Image","description":"","type":"image"}]}