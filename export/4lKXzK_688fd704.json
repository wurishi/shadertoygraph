{"ver":"0.1","info":{"id":"4lKXzK","date":"1485039708","viewed":198,"name":"Circular Permutations artwork","username":"matrefeytontias","description":"A quick little program I put together to generate an artwork for the metal song I wrote. The image I kept is at 6.65 seconds. You can hear the song on my SoundCloud : https://soundcloud.com/matrefeytontias/circular-permutations","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","distancebased"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RADIUS 0.3\n#define THICKNESS 0.01\n\nvec2 centers[3];\nvec2 amplitudes[3];\n\nvec4 line(vec2 uv, vec2 p1, vec2 p2, vec4 c1, vec4 c2)\n{\n    vec4 r = mix(c1, c2, distance(uv, p1) / distance(p1, p2));\n    vec2 u = normalize(p2 - p1);\n    float d = distance(uv, dot(uv, u) * u);\n    return r * exp(-abs(d - THICKNESS) * 10.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    centers[0] = vec2(0.); centers[1]= vec2(-0.8, -0.4); centers[2] = vec2(0.4, 0.1);\n    amplitudes[0] = vec2(0.2, 0.5); amplitudes[1] = vec2(0.3, 0.4); amplitudes[2] = vec2(0.1, 0.7);\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2. - 1.;\n\tuv.y *= iResolution.y / iResolution.x;\n    \n    vec4 color = vec4(0.);\n    \n    for(int i = 0; i < 3; i++)\n    {\n        int ni = (i + 1) * ((i + 1 < 3) ? 1 : 0);\n        vec4 c = vec4(0., 0., 0., 1.);\n        c[i] = 1.;\n        vec4 nc = vec4(0., 0., 0., 1.);\n        nc[(i + 1) * ((i < 3) ? 1 : 0)] = 1.;\n        vec2 circle = vec2(cos(iTime * (float(i) / 2. + 1.)) * amplitudes[i].x,\n                                    sin(iTime * (float(i) / 2. + 1.)) * amplitudes[i].y);\n\t\tcolor += c * exp(-abs(distance(uv, circle - centers[i]) - RADIUS) * 10.);\n        color += line(uv, centers[i], centers[(i + 1) * ((i + 1 < 3) ? 1 : 0)], c, nc);\n    }\n    \n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}