{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// 定义圆半径\n#define r 0.5\n\n// UV 修复：以视口最短的边为基准，将UV控制在[-1,1]范围内，长边会超出这个范围\nvec2 fixUV(vec2 fragCoord)\n{\n     return (2.0*fragCoord.xy - iResolution.xy)/min(iResolution.x, iResolution.y); \n}\n\n// 圆的sdf\nfloat SDFCirlce(vec2 p)\n{\n    return length(p) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fixUV(fragCoord);\n    \n    // 绘制 2D Circle\n    float dis = SDFCirlce(uv);\n    \n    // 设置颜色\n    vec3 backColor = vec3(0.9,0.6,0.3);\n    vec3 circleColor = vec3(0.65,0.85,1.0);\n    \n    // 设置圆内圆外颜色\n    vec3 color = (dis>0.0) ? backColor : circleColor;\n    // 混合渐变：越靠近圆边界越黑，里边界越远越白\n    color *= (1. - exp(-6. * abs(dis)));\n    \n    // 绘制等高线：使用周期函数绘制\n    color *= 0.8 + 0.2*cos(150.0*dis);\n\n    // 绘制圆的描边\n    color = mix( color, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(dis)) );\n    \n\n    fragColor = vec4(color, 1.0);\n     \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lfyBR1","date":"1733816254","viewed":90,"name":"SDFCircle_Test","username":"familyshadertoy000","description":"SDFCircle_Test","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["sdfcircle"],"hasliked":0,"parentid":"","parentname":""}}