{"ver":"0.1","info":{"id":"tld3z7","date":"1575978280","viewed":132,"name":"Shear Matrix Multiplication","username":"Pepperized","description":"A basic test for transforming images with matrix multiplication.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["beginner","basics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float timeFract = fract(iTime/ 10.);\n    float pi = 3.147;\n    float timesmoothed = sin(timeFract * 2. * pi);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    float x = uv.x + (timesmoothed * uv.y);\n    float y = uv.y;\n    \n    // Time varying pixel color\n    vec4 col = texture(iChannel0, vec2(x, y));\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}