{"ver":"0.1","info":{"id":"Xt3SDX","date":"1481728081","viewed":148,"name":"Fun with Multiplication Table","username":"Teurkidosh","description":"Thx to plancien for debugging","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["multiplication"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\n\n//this one impacts the number of ligns draw\nconst float modulo = 200.0;\n//this one impacts the shape\nfloat table = 2.0;\n\nvoid traceSegment(out vec4 color, in vec2 pixCoords, in vec2 pointA, in vec2 pointB)\n{\n    float xMax = max(pointA.x,pointB.x);\n    float xMin = min(pointA.x,pointB.x);\n    \n    float a = (pointB - pointA).y / (pointB - pointA).x;\n    if(pixCoords.x > xMin && pixCoords.x < xMax)\n    {\n        float b = pointA.y - pointA.x * a;\n        if(int(pixCoords.y) == int(a * pixCoords.x + b)){\n        \tcolor = vec4(0.0,0.0,0.0,1.0);\n        }\n    }\n}\n\nvoid traceCircle(out vec4 color, in vec2 pixCoords, in vec2 center, in float radius)\n{\n    if(int(sqrt(pow(pixCoords.x - center.x,2.0) + pow(pixCoords.y - center.y,2.0))) == int(radius))\n    {\n        color = vec4(0.0,0.0,0.0,1.0);\n    }\n}\n\nvoid traceCircleMultiplicationTablePoints(out vec4 color, in vec2 pixCoords, in vec2 center, in float radius)\n{\n   \tfloat lTable = iTime/3.0;\n    float lTableInter = iMouse.y/2.0;\n    for(float i = 1.0; i<=modulo; i += 1.0)\n    {\n        float angleTable = (2.0*PI/modulo)*i;\n        //for a fixed shape, replace lTable with table\n        //for interactivity replace lTable with lTableInter\n        float angleMultiple = (2.0*PI/modulo)*i*lTable;\n        \n        vec2 pointTable    = vec2(cos(angleTable)*radius,    sin(angleTable)*radius)    + center;\n        vec2 pointMultiple = vec2(cos(angleMultiple)*radius, sin(angleMultiple)*radius) + center;\n        \n     \ttraceSegment(color, pixCoords, pointTable, pointMultiple);\n       \n    }\n}\n\nvoid mainImage( out vec4 color, in vec2 pixCoords)\n{\n   \tcolor = vec4(1.0,1.0,1.0,1.0);\n   \n    traceCircle(color, pixCoords, vec2(iResolution.x/2.0, iResolution.y/2.0), iResolution.y/2.1);\n    traceCircleMultiplicationTablePoints(color, pixCoords, vec2(iResolution.x/2.0, iResolution.y/2.0), iResolution.y/2.1);\n    \n}","name":"Image","description":"","type":"image"}]}