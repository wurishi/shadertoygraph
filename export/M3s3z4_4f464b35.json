{"ver":"0.1","info":{"id":"M3s3z4","date":"1707230334","viewed":116,"name":"Green capsule fractal","username":"lsdrfrx","description":"It's my first shader. Looks pretty weird, but I think it's cool tho'","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdUnevenCapsule( vec2 p, float r1, float r2, float h )\n{\n    p.x = abs(p.x);\n    float b = (r1-r2)/h;\n    float a = sqrt(1.0-b*b);\n    float k = dot(p,vec2(-b,a));\n    if( k < 0.0 ) return length(p) - r1;\n    if( k > a*h ) return length(p-vec2(0.0,h)) - r2;\n    return dot(p, vec2(a,b) ) - r1;\n}\n\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.377, 1.671, 1.195);\n    vec3 b = vec3(0.243, 1.329, 0.351);\n    vec3 c = vec3(0.107, 0.424, 0.225);\n    vec3 d = vec3(0.169, 0.026, 0.166);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor;\n    \n    for (float i=0.; i<3.; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = sdUnevenCapsule(uv, 3., 2., 1.) * exp2(-length(uv0));\n        vec3 col = palette(-length(uv0) * i/.5 - iTime / 3.);\n\n        d = sin(d * 8.0 - iTime) / 15.0;\n        d = abs(d);\n        d = smoothstep(0.0, abs(0.05 - length(uv) / 20.), d);\n\n        d = pow(0.07 / d, 1.3);\n\n        col *= d;\n        finalColor += col;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}