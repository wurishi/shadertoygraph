{"ver":"0.1","info":{"id":"lcc3zS","date":"1711818042","viewed":40,"name":"power rainbow","username":"JeffJeff","description":"Nothing important, just me fiddling around with HUE and angles :)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hue"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141518\n#define TAU PI*2.0\n\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv *= 3.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec2 center = uv;\n    float dist = length(center);\n    \n    float hue = atan(center.y, center.x) / (TAU) + iTime*0.2;\n    float sat = dist;\n    \n    vec3 color = hsb2rgb(vec3(hue, sat, 1.0));\n    \n    color += pow(dist, 25.0) * smoothstep(1.1, 1.0, dist);\n    \n    fragColor = vec4(vec3(color), 1.0);\n}","name":"Image","description":"","type":"image"}]}