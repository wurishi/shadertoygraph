{"ver":"0.1","info":{"id":"slX3W2","date":"1622850772","viewed":407,"name":"Graph Plot","username":"carlosbaraza","description":"Plotting a graph with AA","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["plot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\nfloat lineWidth = 0.01;\nfloat DELTA = 0.005;\n\nfloat plot(vec2 uv, vec2 p, vec2 pDelta){\n  vec2 delta = pDelta - p;\n  float cosPhi = delta.x / length(delta); //cos(atan(delta.y, delta.x));\n  float height = lineWidth / 2.0 / cosPhi;\n  return abs(uv.y - p.y) - height;\n}\n\n\nfloat f(float x) {\n   float a = sin(x * 20.0 + iTime) * .5;\n   a += sin(x * 24.0 + iTime * 3.5) * .5;\n   a *= .3;\n   return a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1.0 to 1.0)\n    vec2 uv = (fragCoord/iResolution.xy - .5) * 2.0;\n\n    vec2 p = vec2(uv.x, f(uv.x));\n    vec2 pDelta = vec2(uv.x + DELTA, f(uv.x + DELTA));\n\n    float d = plot(uv, p, pDelta);\n    vec3 col = smoothstep(0.0, 0.01, d) * vec3(1.0, 1.0, 1.0); \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}