{"ver":"0.1","info":{"id":"Dlf3RN","date":"1683542883","viewed":406,"name":"Yet Another VHS Effect","username":"TheJinxedArtist","description":"A VHS effect I made on my phone. Btw i just have all of these shaders that Ive had stored and too scared to upload so imma just do the ones I think are quite good.","likes":12,"published":1,"flags":32,"usePreview":1,"tags":["vhs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 CA(sampler2D tex, vec2 uv)\n{\n    float strength = 0.01;\n    float r = texture(tex, uv + vec2(0.0, strength)).r;\n    float g = texture(tex, uv).g;\n    float b = texture(tex, uv + vec2(0.0, -strength)).b;\n    vec3 final = vec3(r,g,b);\n    return final;\n}\n\nvec3 Sharpen(sampler2D tex, vec2 uv)\n{\n    float strength = 0.0075;\n    vec3 tl = CA(tex, uv + vec2(-strength, strength)).rgb;\n    vec3 tm = CA(tex, uv + vec2(0.0, strength)).rgb;\n    vec3 tr = CA(tex, uv + vec2(strength, strength)).rgb;\n    vec3 ml = CA(tex, uv + vec2(-strength, 0.0)).rgb;\n    vec3 mr = CA(tex, uv + vec2(strength, 0.0)).rgb;\n    vec3 bl = CA(tex, uv + vec2(-strength, -strength)).rgb;\n    vec3 bm = CA(tex, uv + vec2(0.0, -strength)).rgb;\n    vec3 br = CA(tex, uv + vec2(strength, -strength)).rgb;\n    vec3 final = (tl+tm+tr+ml+mr+bl+bm+br)/8.0;\n    final = mix(texture(tex, uv).rgb, final, -2.0);\n    return final;\n}\n\nvec3 Blur(sampler2D tex, vec2 uv)\n{\n    float strength = 0.0025;\n    vec3 tl = Sharpen(tex, uv + vec2(-strength, strength)).rgb;\n    vec3 tm = Sharpen(tex, uv + vec2(0.0, strength)).rgb;\n    vec3 tr = Sharpen(tex, uv + vec2(strength, strength)).rgb;\n    vec3 ml = Sharpen(tex, uv + vec2(-strength, 0.0)).rgb;\n    vec3 mr = Sharpen(tex, uv + vec2(strength, 0.0)).rgb;\n    vec3 bl = Sharpen(tex, uv + vec2(-strength, -strength)).rgb;\n    vec3 bm = Sharpen(tex, uv + vec2(0.0, -strength)).rgb;\n    vec3 br = Sharpen(tex, uv + vec2(strength, -strength)).rgb;\n    vec3 final = (tl+tm+tr+ml+mr+bl+bm+br)/8.0;\n    return final;\n}\n\nvec2 DistortUV(vec2 uv)\n{\n    float offs = texture(iChannel1, vec2(iTime, uv.y * 0.5)).r;\n    offs -= 0.5;\n    offs *= 2.0;\n    offs *= 0.0025;\n    uv.x += offs;\n    return uv;\n}\n\nvec3 ColourCorrect(vec3 col)\n{\n    col += 0.1;\n    col = clamp(col, vec3(0.0), vec3(1.0));\n    col = pow(col, vec3(0.8));\n    col /= 1.5;\n    col = clamp(col, vec3(0.0), vec3(1.0));\n    return col;\n}\n\nvec3 Finalize(vec3 col, vec2 uv)\n{\n    float bars = texture(iChannel1, vec2(iTime, uv.y * 0.1)).g;\n    col += vec3(bars) * vec3(0.05, 0.01, 0.005);\n    float n = texture(iChannel1, uv * 0.45 + (iTime * texture(iChannel1, vec2(iTime)).r)).b;\n    n *= 0.05;\n    return (col * n) + col / 1.1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = DistortUV(uv);\n    \n    vec3 colour = Blur(iChannel0, uv);\n    colour = ColourCorrect(colour);\n    colour = Finalize(colour, uv);\n    \n    fragColor = vec4(colour, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 col = texture(iChannel0, uv);\n    float bar = abs(uv.x - 0.5);\n    bar = step(bar, 0.425);\n    col *= bar;\n    \n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"}]}