{"ver":"0.1","info":{"id":"wl2yRD","date":"1593890174","viewed":876,"name":"Color Warp","username":"yozic","description":"Inspired by https://www.shadertoy.com/view/MsyGRm","likes":27,"published":3,"flags":0,"usePreview":0,"tags":["colorful","psychedelic","trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define WARP true\n#define BALLS 10.\n#define CONTRAST 3\n#define GLOW .1\n#define ORB_SIZE 0.492519\n#define PI 3.14159265359\n\nvec2 kale(vec2 uv, vec2 offset, float splits) {\n  float angle = atan(uv.y, uv.x);\n  angle = ((angle / PI) + 1.0) * 0.5;\n  angle = mod(angle, 1.0 / splits) * splits;\n  angle = -abs(2.0 * angle - 1.0) + 1.0;\n  float y = length(uv);\n  angle = angle * (y);\n  return vec2(angle, y) - offset;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = 2. * fragCoord/iResolution.xy - 1.;\n  uv.x *= iResolution.x / iResolution.y;\n  uv *= 2.2;\n  fragColor = vec4(0.);\n  float dist = distance(uv, vec2(0.));\n  uv = WARP ? uv * kale(uv, vec2(0.), 2.) : uv;\n  for (float i = 0.; i < BALLS; i++) {\n    float t = iTime/2. - i * PI / BALLS * cos(iTime / max(i, 0.0001));\n    vec2 p = vec2(cos(t), sin(t)) / sin(i / BALLS * PI / dist + iTime);\n    vec3 c = cos(vec3(0, 5, -5) * PI * 2. / PI + PI * (iTime / (i+1.) / 5.)) * (GLOW) + (GLOW);\n    fragColor += vec4(vec3(dist * .35 / length(uv - p * ORB_SIZE) * c), 1.0);\n  }\n  fragColor.xyz = pow(fragColor.xyz, vec3(CONTRAST));\n}\n","name":"Image","description":"","type":"image"}]}