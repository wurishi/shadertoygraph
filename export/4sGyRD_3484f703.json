{"ver":"0.1","info":{"id":"4sGyRD","date":"1521135578","viewed":129,"name":"sin approximation","username":"BattleAngelAlita","description":"sin approximation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float background(vec2 uv, float scale)\n{\n\tfloat bg = 0.0;\n\tif (abs(uv.x) < scale / iResolution.x || abs(uv.y) < scale / iResolution.y)\n\t{\n\t\tbg = 0.0;\n\t}\n\telse\n\t{\n\t\tvec2 grid = step(mod(uv, vec2(2.0, 2.0)), vec2(1.0, 1.0));\n\n\t\tif (grid.x == grid.y) bg = 0.3;\n\t\telse bg = 0.4;\n\t}\nreturn bg;\n}\n\nfloat Curve(float x, float y)\n{\n    float curve = x - y;\nreturn 1.0 - smoothstep(0.0, fwidth(curve), abs(curve));\n}\n\nconst float pi  =  3.1415926535897932384626433832795;\nconst float pi2 =  6.283185307179586476925286766559;\nconst float b   =  1.2732395447351626861510701069801;\t//  4 / pi\nconst float c   = -0.4052847345693510857755178528389;\t// -4 / pi^2\nfloat sin_coarse(float x)\n{\n\tx = mod(x, pi2) - pi;\n    float s = b * x + c * x * abs(x); // mul mul mad, abs is free\nreturn -s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tuv = uv * 2.0 - 1.0; uv = uv * pi2;\n    uv.y *= iResolution.y / iResolution.x;\n    \n    float x = uv.x; float y = uv.y;\n\n    float cSin   = Curve(sin(x), uv.y);\n    float cSin_a = Curve(sin_coarse(x), y);\n    float diff   = Curve(sin(x) - sin_coarse(x), y);\n        \n    fragColor = vec4(background(uv, 8.0));\n    fragColor = fragColor * (1.0 - cSin)   + vec4(cSin);\n    fragColor = fragColor * (1.0 - cSin_a) + vec4(0.0, cSin_a, 0.0, 1.0);\n    fragColor = fragColor * (1.0 - diff)   + vec4(diff, 0.0, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}