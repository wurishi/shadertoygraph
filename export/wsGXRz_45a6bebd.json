{"ver":"0.1","info":{"id":"wsGXRz","date":"1573225887","viewed":242,"name":"binary subdivision","username":"novogrammer","description":"binary subdivision like binary search","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["noise","binary","subdivision"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRr","filepath":"/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","previewfilepath":"/media/ap/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getValue(vec2 pos){\n    return texture(iChannel0,vec3(pos/20.,iTime*0.01)).r;\n}\n\n#define LOOP 5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //from -1 to 1\n    vec2 pos=( 2.*fragCoord - iResolution.xy )/iResolution.y;\n    \n    vec3 col=vec3(0.);\n    vec3 paintColor=vec3(1./float(LOOP+1));\n    for(int i=0;i<=LOOP;i++){\n        float s=(2./iResolution.y)*float(1<<(LOOP-i));\n        vec2 tilePos=floor(pos/s)*s;\n        float value0=getValue(tilePos+vec2(0.,0.));\n        float value1=getValue(tilePos+vec2(s,0.));\n        float value2=getValue(tilePos+vec2(0.,s));\n        float value3=getValue(tilePos+vec2(s,s));\n\n        float minValue=min(min(value0,value1),min(value2,value3));\n        float maxValue=max(max(value0,value1),max(value2,value3));\n        if(minValue<.5 &&.5<maxValue){\n            col+=paintColor;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}