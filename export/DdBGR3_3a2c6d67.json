{"ver":"0.1","info":{"id":"DdBGR3","date":"1667912238","viewed":44,"name":"Smoothstep on y","username":"HenryTourraine","description":"S function","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["s"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv*=2.;\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(uv.xyx+vec3(0,2,4));\n    \n    //la fonction\n    float t = smoothstep(0., 1., uv.y);\n    if(uv.x > t-0.01 && uv.x < t+0.01){\n        col = vec3(0.);\n    }\n    \n    \n   //quarillage espacÃ© de 1 \n   float step = 0.9;\n   if(mod(uv.x, step+0.1) < step+0.1 && mod(uv.x, step+0.1) > step+0.09){\n       col = vec3(0.);\n   }\n   \n   if(mod(uv.y, step+0.1) < step+0.1 && mod(uv.y, step+0.1) > step+0.09){\n       col = vec3(0.);\n   }\n   //\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}