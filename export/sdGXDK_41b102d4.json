{"ver":"0.1","info":{"id":"sdGXDK","date":"1635285005","viewed":345,"name":"Golden Dance","username":"Flopine","description":"Doodled in dah train to Strasbourg :D Finally finished it","likes":31,"published":1,"flags":0,"usePreview":0,"tags":["2d","raymarching","animation","knot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n// Based on BigWings tuts ~ https://youtu.be/2dzJZx0yngg\n\n\n#define PI acos(-1.)\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\n#define circle(uv,s) (length(uv)-s)\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.07,fwidth(val-thre)))\n\n\nvoid mo(inout vec2 p, vec2 d)\n{\n  p=abs(p)-d;\n  if(p.y>p.x)p=p.yx;\n}\n\nfloat box2d (vec2 p, float c)\n{\n  vec2 q = abs(p)-c;\n  return min(0.,max(q.x,q.y))+length(max(q,0.));\n}\n\nfloat tore (vec3 p, vec2 r)\n{\n  vec2 q = vec2(length(p.xz)-r.y,p.y);\n  float a = atan(p.z,p.x);\n\n  q *= rot(a*2.);\n  mo(q,vec2(.2,.4));\n\n  return box2d(q,r.x*(sin(a+iTime*2.)/(2.*PI)))-0.02;\n}\n\nfloat SDF (vec3 p)\n{\n  p.yz *= rot(-atan(1./sqrt(2.)));\n  p.xz *= rot(PI/4.);\n\n  float d = tore(p,vec2(.7,1.5));\n  return d;\n}\n\nvec3 gn (vec3 p)\n{\n  vec2 eps=vec2(0.001,0.);\n  return normalize(SDF(p)-vec3(SDF(p-eps.xyy),SDF(p-eps.yxy),SDF(p-eps.yyx)));\n}\n\nfloat background (vec2 uv)\n{\n    float offset=(uv.x<0.)?-.5:.5;\n    uv.x = abs(uv.x)-1.;\n    float f = AAstep(0.008,abs(uv.x));\n    f *= AAstep(0.005,abs(circle(uv+vec2(0.,offset),0.45))*abs(circle(uv-vec2(0.,offset),0.25)));\n    return 1.-clamp(f,0.,1.);\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) \n{\n  vec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n \n  vec3 ro=vec3(uv*2.,-40.),rd=vec3(0.,0.,1.),p=ro,c=vec3(background(uv)),l=vec3(1.,2.,-2.);\n\n  bool hit = false;\n  for(float i=0.;i<100.;i++)\n  {\n    float d = SDF(p);\n    if (d<0.001)\n    {hit=true;break;}\n    p += d*rd*.6;\n  }\n\n  if (hit)\n  {\n    vec3 n = gn(p);\n    float light = max(dot(n,normalize(l)),0.);\n    c = mix(vec3(.3,0.,0.),vec3(1.,.9,0.),light);\n    float spec = pow(dot(n,normalize(l-rd)),8.);\n    c += spec*vec3(0.99,0.8,0.7);\n  }\n  \n  fragColor = vec4(sqrt(clamp(c,.0,1.)), 1.0);\n}","name":"Image","description":"","type":"image"}]}