{"ver":"0.1","info":{"id":"4lffzM","date":"1511298600","viewed":543,"name":"Stupid Simple Xor Roller:(0.0.1)","username":"Chris_M_Thomasson","description":"Here is a little highly crude experiment using xor. It scrolls to the right, and tries to build some new structures wrt colors in the existing xor fractal landscape. Epilepsy warning! It can strobe. Sorry.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["fractal","triangle","experiment","xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Chris M. Thomasson's Stupid Simple Xor Roller. ;^)\n// version: pre-alpha 0.0.1\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{ \n    vec2 uv = fragCoord.xy / iResolution.xy; \n\n    int x = int(fragCoord.x); \n    int y = int(fragCoord.y); \n\n    int xy_xor = (x + iFrame) ^ (y);\n    float s = .01 + abs(sin(iTime * .01)) * (abs(cos(iTime * sin(iTime * .05) * .001) * .01));\n    \n    float cr = mod(float(xy_xor) * 1.1 * s, 1.0);\n\tfloat cg = mod(float(xy_xor) * abs(sin(iTime * 0.01)) * 1.234 * s, 1.0);\n    float cb = mod(float(xy_xor) * 2.253 * s, 1.0);\n    \n    fragColor = vec4(cr, cg, cb, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}