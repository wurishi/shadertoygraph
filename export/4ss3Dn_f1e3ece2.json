{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"cubemap","id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"struct ray\n{\n\tvec3 pos;\n\tvec3 dir;\n\tint mat_id;\n};\n\t\nstruct surface\n{\n\tvec3 pos;\n\tvec3 n;\n\t\n\tvec4 ambi;\n\tvec4 diff;\n\tvec4 spec;\n\tfloat shiny;\n\t\n\tvec4 refl;\n};\n\nstruct light\n{\n\tvec3 pos;\n\tvec3 dir;\n\tvec3 att;\n\t\n\tvec4 diff;\n\tvec4 spec;\n};\n\n\t\n///////////\n// Variables\n//////////\n\t\n\nconst int march_iter = 45;\nconst float march_dist = 0.007;\nconst float march_bias = 0.99;\n\nconst int max_reflects = 2;\n\nconst int num_lights = 2;\nconst float ao_bias = 0.2;\nconst float n_eps = 0.01;\nconst float shadow_eps = 0.01;\n\t\n///////////\n// Material and light properties\n///////////\n\nvoid getlight (in int i, out light l)\n{\n    vec2 mouse = (iMouse.xy/iResolution.xy-vec2(0.5,0.5))*vec2(iResolution.x/iResolution.y,1);\n\n\tif (i == 0)\n\t{\n\t\tl.pos = vec3 (mouse,0.5);\n\t\tl.dir = vec3(0.1,0,-1);\n\t\tl.att = vec3(0.1,1,1);\n\t\t\n\t\tconst vec4 color = vec4 (0.4,0.0,0.0,1.0);\n\t\tl.diff = 0.7*color;\n\t\tl.spec = 0.3*color;\n\t\t\n\t}\n\telse if (i == 1)\n\t{\n\t\tl.pos = vec3 (0.5,0.1,-1);\n\t\tl.dir = vec3(0.1,0,-1);\n\t\tl.att = vec3(0.1,1,1);\n\t\t\n\t\tvec4 color = vec4(0.0,0.2*sin(iTime)+0.2,0.2*cos(iTime)+0.2,1.0);\n\t\tl.diff = 0.5*color;\n\t\tl.spec = 0.3*color;\n\t}\n\telse\n\t{\n\t\t//blank light\n\t}\n}\n\n///////////\n// Scene\n///////////\n\n\n// Copy-pasta'd\nvec2 scene (in vec3 pos)\n{\n\tvec3 z = pos;\n\tfloat dr = 1.0;\n\tfloat r = 0.0;\n\tfor (int i = 0; i < 10 ; i++) {\n\t\tr = length(z);\n\t\tif (r>2.0) break;\n\t\t\n\t\t// convert to polar coordinates\n\t\tfloat theta = acos(z.z/r);\n\t\tfloat phi = atan(z.y,z.x);\n\t\tfloat Power = smoothstep(0.0, 1.0, iTime/20.0)*6.0+2.0;\n\t\t\n\t\tdr =  pow( r, Power-1.0)*Power*dr + 1.0;\n\t\t// scale and rotate the point\n\t\tfloat zr = pow( r,Power);\n\t\ttheta = theta*Power;\n\t\tphi = phi*Power;\n\t\t\n\t\t// convert back to cartesian coordinates\n\t\tz = zr*vec3(sin(theta)*cos(phi), sin(phi)*sin(theta), cos(theta));\n\t\tz+=pos;\n\t}\n\treturn vec2(0.5*log(r)*r/dr,0);\n}\n\n///////////\n\nvec3 toViewDir (in vec3 pos)\n{\n\tfloat r = iTime/10.0;\n\tpos.xz = vec2(cos(r)*pos.x-sin(r)*pos.z, sin(r)*pos.x+cos(r)*pos.z);\n\treturn pos;\n}\n\nvec3 toView (in vec3 pos)\n{\n\tfloat r = iTime/10.0;\n\tpos+=vec3(0,0,-2.5);\n\tpos.xz = vec2(cos(r)*pos.x-sin(r)*pos.z, sin(r)*pos.x+cos(r)*pos.z);\n\treturn pos;\n}\n\nvec4 background (in ray r)\n{\n\treturn texture(iChannel0,toViewDir(r.dir));\n}\n\n///////////\n// Raymarching\n///////////\n\nvec2 dE (in vec3 pos)\n{\n\treturn scene(toView(pos));\n}\n\nbool raymarch (inout ray r)\n{\n\tfloat dist = 0.0;\n\tbool hit = false;\n\tfor(int i=0; i<march_iter; i++)\n\t{\n\t\tvec2 res = dE(r.pos+r.dir*dist);\n\t\tdist += res.x;\n\t\tif (res.x<=march_dist)\n\t\t{\n\t\t\tr.pos += r.dir*dist*pow(march_bias,1.0+1.0/dist);\n\t\t\tr.mat_id = int(res.y);\n\t\t\thit = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn hit;\n}\n\nvoid rayreflect (surface s, inout ray r)\n{\n\tr.dir = reflect(r.dir,s.n);\n}\n\n///////////\n// Lighting\n///////////\n\nbool inshadow(in surface s, in light l)\n{\n\tray r;\n\tr.pos = s.pos;\n\t\n\tr.dir = l.pos-s.pos;\n\tfloat dist = length(r.dir);\n\tr.dir = normalize(r.dir);\n\n\treturn raymarch(r) && length(r.pos-s.pos)<dist;\n}\n\nfloat getao (in surface s)\n{\n\treturn clamp(dE(s.pos+s.n*ao_bias).x/ao_bias, 0.0, 1.0);\n}\n\nvec4 blinnphong (in surface s, in light l)\n{\n\tvec3 s2v = normalize(-s.pos);\n\tvec3 s2l = l.pos-s.pos;\n\tfloat d = length(s2l);\n\ts2l = normalize(s2l);\n\t\n\tvec4 diff = s.diff*l.diff\n\t\t*max(0.0,dot(s2l,s.n));\n\tvec4 spec = s.spec*l.spec*\n\t\tpow(max(0.0,dot(s2v,-reflect(s2l,s.n))),s.shiny);\n\t\n\tfloat att = dot(vec3(d*d,d,1.0),l.att);\n\tfloat falloff = max(0.0,dot(s2l,l.dir));\n\t\n\treturn (diff+spec)*falloff/att;\n}\n\nvec4 blinnphong (in surface s)\n{\n\tvec4 total = s.ambi*getao(s);\n\tfor (int i=0; i<num_lights; i++)\n\t{\n\t\tlight l;\n\t\tgetlight(i,l);\n\t\tif(!inshadow(s,l))\n\t\t{\n\t\t\ttotal+=blinnphong(s,l);\n\t\t}\n\t}\n\treturn total;\n}\n\nvec3 getnormal (in vec3 pos)\n{\n\tvec2 e = vec2 (n_eps, 0);\n\treturn normalize(vec3(\n\t\tdE(pos+e.xyy).x-dE(pos-e.xyy).x,\n\t\tdE(pos+e.yxy).x-dE(pos-e.yxy).x,\n\t\tdE(pos+e.yyx).x-dE(pos-e.yyx).x));\n\t//return normalize\n\t//\t( dE(pos+e.xyy).x * e.xyy\n\t//\t+ dE(pos+e.yxy).x * e.yxy\n\t//\t+ dE(pos+e.yyx).x * e.yyx\n\t//\t+ dE(pos+e.xxx).x * e.xxx);\n}\n\nvoid getsurface (in ray r, out surface s)\n{\n\ts.pos = r.pos;\n\ts.n = getnormal(r.pos);\n\tconst vec4 color = vec4(1,1,1,1);\n\t\ts.ambi = 0.2*color;\n\t\ts.diff = color;\n\t\ts.spec = color;\n\t\ts.shiny = 10.0;\n\t\t\n\t\ts.refl = 0.2*color;\n}\n\nvec4 render(in ray r)\n{\n\tvec4 refl = vec4(1,1,1,1);\n\tvec4 total = vec4(0,0,0,0);\n\t\n\tfor(int i=0; i<=max_reflects; i++)\n\t{\n\t\tbool hit = raymarch(r);\n\t\t\n\t\tif(hit)\n\t\t{\n\t\t\tsurface s;\n\t\t\tgetsurface(r, s);\n\t\t\ttotal += refl*blinnphong(s);\n\t\t\trefl *= s.refl;\n\t\t\trayreflect(s, r);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttotal += refl*background(r);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn total;\n}\n\nvec3 getDir (vec2 fragCoord)\n{\n\tvec2 loc = fragCoord.xy/iResolution.xy - vec2(0.5,0.5);\n\tloc.x *= iResolution.x/iResolution.y;\n\tfloat dist = 1.0;\n\treturn vec3(loc,dist);\t\n}\n\nvec4 render(vec2 fragCoord)\n{\n\tray r;\n\tr.pos = vec3(0,0,0);\n\tr.dir = getDir(fragCoord);\n\treturn render(r);\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = render(fragCoord);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4ss3Dn","date":"1367594135","viewed":668,"name":"Mandlebulb Evolution","username":"reuben364","description":"Messing around","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","mandlebulb"],"hasliked":0,"parentid":"","parentname":""}}