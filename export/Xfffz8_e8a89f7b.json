{"ver":"0.1","info":{"id":"Xfffz8","date":"1723303543","viewed":59,"name":"inverse sqrt taylor series","username":"janpitokiala","description":"explodes outside of -1 to 1 range","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["approximation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float func(float x) {\n  return inversesqrt(x+1.);\n}\nfloat func2(float x) {\n  float mul = 1.;\n  float sum = 1.;\n  for(float i=1.;i<=100.;i++) {\n    mul *= -(2.*i-1.)*x/(2.*i);\n    sum += mul;\n  }\n  return sum;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    float y = func(uv.x-.7)-.5;\n    vec3 col = vec3((0.005-distance(uv.y,y))*iResolution.y);\n    float y2 = func2(uv.x-.7)-.5;\n    col.rg = vec2((0.005-distance(uv.y,y2))*iResolution.y);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}