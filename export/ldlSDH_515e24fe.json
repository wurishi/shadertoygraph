{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"//#define DOF_EFFECT\n//uncomment to enable DOF (actually works faster!)\n\nmat3 rot(vec3 v, float angle)\n{\n\tfloat c = cos(angle);\n\tfloat s = sin(angle);\n\t\n\treturn mat3(c + (1.0 - c) * v.x * v.x, (1.0 - c) * v.x * v.y - s * v.z, (1.0 - c) * v.x * v.z + s * v.y,\n\t\t(1.0 - c) * v.x * v.y + s * v.z, c + (1.0 - c) * v.y * v.y, (1.0 - c) * v.y * v.z - s * v.x,\n\t\t(1.0 - c) * v.x * v.z - s * v.y, (1.0 - c) * v.y * v.z + s * v.x, c + (1.0 - c) * v.z * v.z\n\t\t);\n}\n\nvec2 f=vec2(0.5,2.);\n\nfloat surfkifs(vec3 p,float sca) {\n\tfloat time = iTime*1.2;\n\tvec2 c=vec2(1.,1.);\n\tconst int iter=24;\n\tfloat sc=1.16+sca*.025;\n\tvec3 j=vec3(-1,-1,-1.5);\n\t//vec3 rotv=normalize(vec3(0.2,-0.2,-1)+.2*vec3(sin(time),-sin(time),cos(time)));\n\tvec3 rotv=normalize(vec3(-0.08+sin(time)*.02,-0.2,-.5));\n\tfloat rota=radians(50.);\n\tmat3 rotm=rot(normalize(rotv),rota);\n\tp.z=abs(p.z)-4.;\n\tfor (int i=0; i<iter; i++) {\n\t\tp.xy=abs(p.xy+f.xy)-f.xy;\n\t\tp*=rotm;\n\t\tp*=sc;\n\t\tp+=j;\n\t\t\n\t}\n\treturn length(p)*pow(sc,float(-iter));\n}\n\nfloat nucleo(vec3 p, float s) {\n\tfloat d=1000.;\n\tfor (float n=0.; n<10.; n++) {\n\t\tfloat t=mod((iTime+n)*2.,4000.);\n\t\tvec4 r=texture(iChannel1,vec2(floor(t/64.),mod(t,64.))/64.);\n\t\td=min(d,length(p+(r.xyz-vec3(.5))*s*.7)-s*(.2+r.w*.3));\n\t}\n\treturn d;\n}\n\n\nfloat sampleMusic()\n{\n\treturn (\n\t\ttexture( iChannel0, vec2( 0.01, 0.15 ) ).x + \n\t\ttexture( iChannel0, vec2( 0.07, 0.15 ) ).x + \n\t\ttexture( iChannel0, vec2( 0.15, 0.15 ) ).x + \n\t\ttexture( iChannel0, vec2( 0.30, 0.15 ) ).x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat sca=.5+sampleMusic();\n\tfloat time = iTime*.9;\n\tvec2 coord = fragCoord.xy / iResolution.xy *2. - vec2(1.);\n\tcoord.y *= iResolution.y / iResolution.x;\n\tfloat dist=29.+sin(time*2.)*5.;\n\tvec3 target = vec3(-f,0);\n\tvec3 from = target+dist*normalize(vec3(sin(time),cos(time),.5+sin(time)));\n\tvec3 up=vec3(1,sin(time)*.5,1);\n    vec3 edir = normalize(target - from);\n    vec3 udir = normalize(up-dot(edir,up)*edir);\n    vec3 rdir = normalize(cross(edir,udir));\n\tfloat fov=1.1*sin(iTime * 0.1)+sca*.09;\n\tvec3 dir=normalize((coord.x*rdir+coord.y*udir)*fov+edir);\n\tvec3 p=from;\n\tfloat steps;\n\tfloat totdist;\n\tfloat intens=1.;\n\tfloat maxdist=dist+15.;\n\tvec3 col=vec3(0.);\n\tfor (int r=0; r<110; r++) {\n\t\tfloat d1=surfkifs(p,sca);\n\t\tfloat d2=nucleo(p+vec3(f,0),max(5.,sca*3.));\n\t\tfloat d=min(d1,d2);\n\t\t#ifdef DOF_EFFECT\n\t\t\ttotdist+=max(max(0.5-time*0.5,0.02*pow(totdist*.06,3.)),abs(d));\n\t\t#else\n\t\t\ttotdist+=max(max(0.5-time*0.5,0.03),abs(d));\n\t\t#endif\n\t\tif (totdist>maxdist) break;\n\t\tp=from+totdist*dir;\n\t\tsteps++;\n\t\tintens=max(0.,maxdist-totdist+3.)/maxdist;\n\t\tcol+=(d==d1?vec3(2.1*sin(iTime),.2*sin(iTime),1)*pow(intens,2.5):vec3(1.3*sin(iTime),0.2,.1*sin(iTime))*(.05+sca*.2)*intens);\n\t}\n\tcol=col*0.035+vec3(.5)*(max(0.,length(coord)-.6));\n\tfragColor = vec4(col,1.0);\t\n\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldlSDH","date":"1425873766","viewed":337,"name":"DancingVirii","username":"entropynine","description":"Dancin virii","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["audio","virii","dance"],"hasliked":0,"parentid":"","parentname":""}}