{"ver":"0.1","info":{"id":"XccyWX","date":"1733112883","viewed":43,"name":"Spiral Loading Icon","username":"jeremythedrawer","description":"1st of a loading icon collection","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["pulse","spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Ripple(vec2 uv, float scale, float speed)\n{\n    uv *= scale;\n    \n    float radius = length(uv.xy);\n    float rippleUv = radius + iTime * speed;\n    float v = sin(rippleUv);\n    float pixelSize = fwidth(v);\n    float finalRipple = smoothstep(0.5f - pixelSize, 0.5 + pixelSize, v);\n    return finalRipple;\n}\n\nfloat Pulse (vec2 uv, float speed, float magnitude)\n{   \n    float radius = length(uv.xy);\n    float pulse = radius + (cos(iTime * speed) * sin(iTime * speed)) * magnitude;\n    return pulse;\n}\n\nfloat Spiral (vec2 uv, float scale, float speed)\n{\n    uv *= scale;\n    \n    float time = atan(uv.y, uv.x) - iTime * speed;\n    \n    float radius = length(uv.xy) * 2.0f;\n    float spiralUv = radius + -time;\n    float pulse = Pulse(uv, 0.5f, 10.0f) - 5.0f;\n    float v = sin(spiralUv);\n    float pixelSize = fwidth(v);\n    float finalSpiral = smoothstep(pulse - pixelSize, pulse + pixelSize, v);\n    return finalSpiral;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float squareRes = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 centredUv = vec2((fragCoord.x/squareRes) - (iResolution.x * 0.5/iResolution.y), (fragCoord.y/squareRes) - 0.5);\n    \n    float scale = 12.0f;\n    float speed = 1.0;\n    float magnitude = 1.5f;\n    \n    float ripple = Ripple(centredUv, scale * 10.0f, speed);\n    float spiral = Spiral(centredUv, scale * 2.0f, speed * -2.0f);\n    float pulse = Pulse(centredUv, speed * 2.0f, magnitude);\n    \n    vec3 rippleVec3 = vec3(ripple);\n    vec3 spiralVec3 = vec3(spiral);\n    vec3 pulseColors = mix(vec3(1,0,0),vec3(0,0,1), pulse);\n    \n    vec3 finalColor = spiralVec3 * pulseColors * rippleVec3;\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}