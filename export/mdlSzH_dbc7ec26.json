{"ver":"0.1","info":{"id":"mdlSzH","date":"1668524824","viewed":252,"name":"Simple image manipulation","username":"motus_art","description":"Learning from GLSL shader course by SimonDev https://simondev.teachable.com/p/glsl-shaders-from-scratch","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["image"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat inverseLerp(float v, float minValue, float maxValue) {\n  return (v - minValue) / (maxValue - minValue);\n}\n\nfloat remap(float v, float inMin, float inMax, float outMin, float outMax) {\n  float t = inverseLerp(v, inMin, inMax);\n  return mix(outMin, outMax, t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Vignette\n    vec3 col = texture(iChannel0, uv).xyz;\n    vec2 vignetteCoords = fract(uv * vec2(1.0, 1.0));\n    float v1 = smoothstep(0.5, 0.2, abs(vignetteCoords.x - 0.5));\n    float v2 = smoothstep(0.5, 0.2, abs(vignetteCoords.y - 0.5));\n    float vignetteAmount = v1 * v2;\n    vignetteAmount = pow(vignetteAmount, 0.45);\n    vignetteAmount = remap(vignetteAmount, 0.0, 1.0, 0.5, 1.0);\n    //col *= vignetteAmount;\n    \n    \n    // Pixelation\n    vec2 dims = vec2(32.0, 16.0);\n    vec2 texUV = floor(uv * dims) / dims;\n    vec3 pixelated = texture(iChannel0, texUV).xyz;\n    //col = pixelated;\n    \n    \n    // Ripples\n    float distToCenter = length(uv - 0.5);\n    float d = sin(distToCenter * 50.0 - iTime * 2.0);\n    vec2 dir = normalize(uv - 0.5);\n    vec2 rippleCoords = uv + d * dir * 0.06;\n    col = texture(iChannel0, rippleCoords).xyz;\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}