{"ver":"0.1","info":{"id":"NdXXW2","date":"1619210487","viewed":111,"name":"noise glitch test","username":"reaxt","description":"im messing about","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nfloat rand(vec2 c){\n\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise1(vec2 p, float freq ){\n\tfloat unit = iResolution.x/freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(PI*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\nfloat pNoise1(vec2 p, int res){\n\tfloat persistance = .5;\n\tfloat n = 0.;\n\tfloat normK = 0.;\n\tfloat f = 4.;\n\tfloat amp = 1.;\n\tint iCount = 0;\n\tfor (int i = 0; i<50; i++){\n\t\tn+=amp*noise1(p, f);\n\t\tf*=2.;\n\t\tnormK+=amp;\n\t\tamp*=persistance;\n\t\tif (iCount == res) break;\n\t\tiCount++;\n\t}\n\tfloat nf = n/normK;\n\treturn nf*nf*nf*nf;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n\n\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 video = texture(iChannel0, uv);\n\n    // Time varying pixel color\n    float r = video.x;\n    float g = video.y;\n    float b = video.z;\n    float a = video.w;\n    float overlayIntensity = 1.;\n    //col channels\n    float rmagnitude = -0.1;\n    float gmagnitude = 0.2;\n    float bmagnitude = 0.5;\n    float noise = noise1(vec2(iFrame,1), 1.);\n    \n    rmagnitude = rmagnitude;\n    r = texture(iChannel0, uv+rmagnitude+(rand(uv+iTime)/5.*(rand(vec2(iTime,iTimeDelta))/5.))).x;\n    \n    gmagnitude = gmagnitude;\n    g = texture(iChannel0, uv+gmagnitude+(rand(uv+iTime)/-2.*(rand(vec2(iTime,iTimeDelta))/-2.))).y;\n    \n    bmagnitude = bmagnitude;\n    b = texture(iChannel0, uv+bmagnitude+(rand(uv+iTime)/0.)).z;\n    vec4 glitch = vec4(r*overlayIntensity, g*overlayIntensity, b*overlayIntensity, a*overlayIntensity);\n    // Output to screen\n    fragColor = video * glitch;\n}","name":"Image","description":"","type":"image"}]}