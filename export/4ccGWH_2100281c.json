{"ver":"0.1","info":{"id":"4ccGWH","date":"1711599374","viewed":79,"name":"vcr-with-glitch","username":"jonnycat","description":"not my shader i just ported it to shadertoy ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["vcr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    float onOff(float a, float b, float c)\n    {\n        return step(c, sin(iTime + a*cos(iTime*b)));\n    }\n\n    float ramp(float y, float start, float end)\n    {\n        float inside = step(start,y) - step(end,y);\n        float fact = (y-start)/(end-start)*inside;\n        return (1.-fact) * inside;\n\n    }\n\n    vec4 getVideo(vec2 uv)\n      {\n        vec2 look = uv;\n            float window = 1./(1.+20.*(look.y-mod(iTime/4.,1.))*(look.y-mod(iTime/4.,1.)));\n            look.x = look.x + (sin(look.y*10. + iTime)/50.*onOff(4.,4.,.3)*(1.+cos(iTime*80.))*window)*(0.1*2.);\n            float vShift = 0.4*onOff(2.,3.,.9)*(sin(iTime)*sin(iTime*20.) +\n                                                 (0.5 + 0.1*sin(iTime*200.)*cos(iTime)));\n            look.y = mod(look.y + vShift*0.1, 1.);\n        \n        vec4 video = texture(iChannel0,look);\n\n        return video;\n      }\n\n    vec2 screenDistort(vec2 uv)\n    {\n        uv = (uv - 0.5) * 2.0;\n        uv *= 1.1;\n        uv.x *= 1.0 + pow((abs(uv.y) / 5.0), 2.0);\n        uv.y *= 1.0 + pow((abs(uv.x) / 4.0), 2.0);\n        uv  = (uv / 2.0) + 0.5;\n        uv =  uv *0.92 + 0.04;\n        return uv;\n      \n        return uv;\n    }\n    float random(vec2 uv)\n    {\n        return fract(sin(dot(uv, vec2(15.5151, 42.2561))) * 12341.14122 * sin(iTime * 0.03));\n    }\n    float noise(vec2 uv)\n    {\n        vec2 i = floor(uv);\n        vec2 f = fract(uv);\n\n        float a = random(i);\n        float b = random(i + vec2(1.,0.));\n        float c = random(i + vec2(0., 1.));\n        float d = random(i + vec2(1.));\n\n        vec2 u = smoothstep(0., 1., f);\n\n        return mix(a,b, u.x) + (c - a) * u.y * (1. - u.x) + (d - b) * u.x * u.y;\n\n    }\n\n\n    vec2 scandistort(vec2 uv) {\n        float scan1 = clamp(cos(uv.y * 2.0 + iTime), 0.0, 1.0);\n        float scan2 = clamp(cos(uv.y * 2.0 + iTime + 4.0) * 10.0, 0.0, 1.0) ;\n        float amount = scan1 * scan2 * uv.x;\n\n        //uv.x -= 0.05 * mix(texture2D(noiseTex, vec2(uv.x, amount)).r * amount, amount, 0.9);\n\n        return uv;\n\n    }\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        vec2 uv = fragCoord/iResolution.xy;\n      vec2 curUV = screenDistort(uv);\n        uv = scandistort(curUV);\n        vec4 video = getVideo(uv);\n      float vigAmt = 1.0;\n      float x =  0.;\n\n\n      video.r = getVideo(vec2(x+uv.x+0.001,uv.y+0.001)).x+0.05;\n      video.g = getVideo(vec2(x+uv.x+0.000,uv.y-0.002)).y+0.05;\n      video.b = getVideo(vec2(x+uv.x-0.002,uv.y+0.000)).z+0.05;\n      video.r += 0.08*getVideo(0.75*vec2(x+0.025, -0.027)+vec2(uv.x+0.001,uv.y+0.001)).x;\n      video.g += 0.05*getVideo(0.75*vec2(x+-0.022, -0.02)+vec2(uv.x+0.000,uv.y-0.002)).y;\n      video.b += 0.08*getVideo(0.75*vec2(x+-0.02, -0.018)+vec2(uv.x-0.002,uv.y+0.000)).z;\n\n      video = clamp(video*0.6+0.4*video*video*1.0,0.0,1.0);\n          vigAmt = 3.+.3*sin(iTime + 5.*cos(iTime*5.));\n\n        float vignette = (1.-vigAmt*(uv.y-.5)*(uv.y-.5))*(1.-vigAmt*(uv.x-.5)*(uv.x-.5));\n\n         video *= vignette;\n\n\n      fragColor = mix(video,vec4(noise(uv * 75.)),.05);\n\n      if(curUV.x<0. || curUV.x>1. || curUV.y<0. || curUV.y>1.){\n        fragColor = vec4(0.,0.,0.,0.);\n      }\n\n    }","name":"Image","description":"","type":"image"}]}