{"ver":"0.1","info":{"id":"3tjSDw","date":"1566087916","viewed":852,"name":"Basic Spectrograph","username":"snerp","description":"working with converting audio into visuals","likes":4,"published":3,"flags":64,"usePreview":0,"tags":["audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xll3zl","filepath":"https://soundcloud.com/snerp/dont-ever-go","previewfilepath":"https://soundcloud.com/snerp/dont-ever-go","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // get normalized uv\n    float aspect = iResolution.x/iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy * vec2(1.0,aspect);\n\t// mirror and adjust to log scale\n    uv.x = pow(uv.x * 2.0 - 1.0, 2.0);\n\t// color based on timing + screen pos\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));    \n\t// modulate by the audio track\n    // the texture lookup seems to return a spectrograph\n    // where the uv x controls the frequency and the y controls the panning\n    // but the panning is weird because it's joint stereo, so it's really\n    // center + difference or something like that.\n    // so this will show you what's centered at the bottom, \n    // and then the stereo spread at the top\n    // the spread/difference is so smooth and blurry \n    // because of stereo reverb I think\n    vec3 modulatedColor = col * texture(iChannel0, uv).x;\n    fragColor = vec4(modulatedColor,1.0);\n}","name":"Image","description":"","type":"image"}]}