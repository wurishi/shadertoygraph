{"ver":"0.1","info":{"id":"NlKSR1","date":"1640179350","viewed":131,"name":"rectangle box shadow","username":"likolu","description":"refer blog: http://madebyevan.com/shaders/fast-rounded-rectangle-shadows/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["boxshadow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 erf(vec4 x) {\n   vec4 s = sign(x), a = abs(x);\n   x = 1.0 + (0.278393 + (0.230389 + 0.078108 * (a * a)) * a) * a;\n   x *= x;\n   return s - s / (x * x);\n}\n\n// Return the mask for the shadow of a box from lower to upper\nfloat boxShadow(vec2 lower, vec2 upper, vec2 point, float sigma) {\n  vec4 query = vec4(point - lower, point - upper);\n  vec4 integral = 0.5 + 0.5 * erf(query * (sqrt(0.5) / sigma));\n  return (integral.z - integral.x) * (integral.w - integral.y);\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy, c = ( 2.*fragCoord - R ) / R.y;\n    vec4 backColor = vec4(0.0, 0.1, 0.8, 1.);\n    \n    vec4 boxColor = vec4(1.,1.,1.,1.);\n    \n    vec4 rect = vec4(200.0,200.0, 700.0, 500.0);\n    \n    float mask = boxShadow(rect.xy, rect.zw, fragCoord , 30.0);\n    \n    \n\tfragColor = mask * backColor;\n    \n} ","name":"Image","description":"","type":"image"}]}