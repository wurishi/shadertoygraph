{"ver":"0.1","info":{"id":"3dK3zt","date":"1570760593","viewed":468,"name":"Ghastly Visualizer","username":"AnnoidJohnny","description":"https://soundcloud.com/kiseff/oceansmirk2\n\n----\n\nTiny screaming man enjoys the tunes you put in.","likes":5,"published":1,"flags":64,"usePreview":0,"tags":["music","visualizer","halloween"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"MljGzz","filepath":"https://soundcloud.com/kiseff/oceansmirk2","previewfilepath":"https://soundcloud.com/kiseff/oceansmirk2","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float audio = texture(iChannel1, vec2(0.,0.0)).r;\n    \n    mat2 distortion1 = mat2(cos(iTime + distance(uv, vec2(0.5,0.5))*5.), sin(iTime + distance(uv, vec2(0.5,0.5))*5.), -sin(iTime + distance(uv, vec2(0.5,0.5))*5.), cos(iTime + distance(uv, vec2(0.5,0.5))*5.));\n    mat2 distortion2 = mat2(cos(-iTime + distance(uv, vec2(0.5,0.5))), sin(-iTime + distance(uv, vec2(0.5,0.5))), -sin(-iTime + distance(uv, vec2(0.5,0.5))), cos(-iTime + distance(uv, vec2(0.5,0.5))*2.));\n    \n    float factorial = clamp(abs(pow(audio,8.)*2.),0.,1.);\n    \n    // Time varying pixel color\n    vec3 col = 0.65*(texture(iChannel0, (uv - vec2(0.5,0.5)) * distortion1 * distortion2 * (vec2(1.,1.)+vec2(sin(iTime + audio*5.), sin(iTime + audio*5.))*0.3)).ggg * vec3(0.,factorial,0.5) * texture(iChannel2, uv * distortion1).rrr);\n\n    bool checkA = distance(fragCoord.xy + vec2(cos(iTime*2.)*60., sin(iTime*2.)*30.), vec2(iResolution.x*0.5 + cos(iTime*10. + fragCoord.y*0.1)*5.,iResolution.y*0.5  + cos(iTime*10. + fragCoord.y*0.1)*5.)) < 75.0 + pow(audio,3.)*40.;\n    bool checkB = \n        (distance(fragCoord.xy + vec2(cos(iTime*2.)*60., sin(iTime*2.)*30.), iResolution.xy*0.5 - vec2(40. + cos(-iTime*6.) * 15.,-20. + sin(-iTime*6.)*15.)) < 20. + pow(audio,6.)*10.)\n        || \n        (distance(fragCoord.xy + vec2(cos(iTime*2.)*60., sin(iTime*2.)*30.), iResolution.xy*0.5 + vec2(40. - cos(-iTime*6.) * 15.,20. - sin(-iTime*6.)*15.)) < 20. + pow(audio,6.)*10.)\n        ||\n        (distance(fragCoord.xy + vec2(cos(iTime*2.)*60., sin(iTime*2.)*30.), iResolution.xy*0.5 - vec2(0. + cos(-iTime*6.) * 15.,20. + sin(-iTime*6.)*15.)) < 10. + pow(audio,6.)*10.);\n    \n    bool checkC = !(distance(fragCoord.xy + vec2(cos(iTime*2.)*60., sin(iTime*2.)*30.), vec2(iResolution.x*0.5 + cos(iTime*10. + fragCoord.y*0.1)*5.,iResolution.y*0.5  + cos(iTime*10. + fragCoord.y*0.1)*5.)) < 70.0 + pow(audio,3.)*40.);\n    bool checkD = \n        !(distance(fragCoord.xy + vec2(cos(iTime*2.)*60., sin(iTime*2.)*30.), iResolution.xy*0.5 - vec2(40. + cos(-iTime*6.) * 15.,-20. + sin(-iTime*6.)*15.)) < 15. + pow(audio,6.)*10.) \n        && \n        !(distance(fragCoord.xy + vec2(cos(iTime*2.)*60., sin(iTime*2.)*30.), iResolution.xy*0.5 + vec2(40. - cos(-iTime*6.) * 15.,20. - sin(-iTime*6.)*15.)) < 15. + pow(audio,6.)*10.)\n        &&\n        !(distance(fragCoord.xy + vec2(cos(iTime*2.)*60., sin(iTime*2.)*30.), iResolution.xy*0.5 - vec2(0. + cos(-iTime*6.) * 15.,20. + sin(-iTime*6.)*15.)) < 5. + pow(audio,6.)*10.);\n    \n    if((checkA && checkC))\n    { \n        col += abs(vec3(cos(iTime + 1. + uv.x),0.,sin(iTime + 0.4 + uv.y))) * 2. * texture(iChannel3, uv*distortion1).rgb;\n    }\n\n    if((checkB && checkD))\n    { \n        col += abs(vec3(cos(iTime + 1. + uv.x),0.,sin(iTime + 0.4 + uv.y))) * 2. * texture(iChannel3, uv*distortion1).rgb;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}