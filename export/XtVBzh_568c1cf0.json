{"ver":"0.1","info":{"id":"XtVBzh","date":"1541800584","viewed":173,"name":"Screen Transition Chachipiruli","username":"Adcto","description":"transition between 2 targets, using 1 gradient texture to animate and an extra effect on the border","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["transition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 lerp(vec4 a, vec4 b, float w)\n{\n  return a + w*(b-a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Effect duration shoud be an uniform param\n    float effect_duration_s = 2.0;\n    \n    // Current interpolation based on time\n\tfloat interpolation = mod(iTime,effect_duration_s) / effect_duration_s;\n    \n    // Color from the texture\n    vec4 col = texture( iChannel0,uv );\n\t\n \t// Alpha from the gradient color (red in this case) based on the effect current time\n    float current_alpha = max((texture( iChannel1, uv ).r) , interpolation);\n    \n    // Any way to don't do the if? Any * 0 or 1?\n    if(interpolation < current_alpha)\n    {\n        //Color from the next image \n    \tcol = texture( iChannel2, uv );\n        \n        // Texture effect percent should be an uniform param\n        float texture_effect_percent = 0.05;\n        \n        if(current_alpha - interpolation < texture_effect_percent)\n        {\n            //Color from the border effect\n            vec4 color_effect = texture( iChannel3, uv );\n  \t\t\t//col = color_effect ;\n\n            //probando cosikas tt\n            float distance_interpolation = (current_alpha - interpolation)/texture_effect_percent;\n            vec4 new_col =  lerp ( color_effect,col ,distance_interpolation) ;\n  \t\t\tcol = new_col ;\n\n            //col =  lerp ( new_col, col, interpolation);\n            //col.a = distance_interpolation * interpolation;\n        }\n    }\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}