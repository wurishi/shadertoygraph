{"ver":"0.1","info":{"id":"X3fXW7","date":"1709633929","viewed":259,"name":"Rain Ripples 2D","username":"Fab48","description":"a surface rain shader","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["ripples","rain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Use as you will.\n//Based on : https://www.shadertoy.com/view/llj3Dz\n\n#define RIPPLES_COUNT 20.\n#define RIPPLES_SCALE 5.\n#define RIPPLES_SPEED 0.7\n\n#define WaveParams vec3(20.0, 2.0, 0.5)\n\nvec2 hash22(vec2 p){\n    return 2. * fract(sin(vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3))))*43758.5453) -1.;\n}\n\nfloat Ripple(vec2 uv,float index, float scale){\n\n    uv=fract(uv)*scale+index*127.33;\n    \n    //uv.x+=iTime*0.2;\n    uv.y+=iMouse.y*0.01;\n    \n    float t =iTime*RIPPLES_SPEED;  \n        \n    vec2 tile = floor(uv);\n    vec2 fr = fract(uv);\n    vec2 noise =hash22(tile);\n    \n    float CurrentTime = fract(t+noise.x) ;\n    \n    noise = hash22(tile+floor((t+noise.x)));;\n    \n    vec2 WaveCentre = vec2(0.5,0.5)+ noise *0.3 ;\n     \n\tfloat Dist =distance(fract(uv) , WaveCentre)*(5.+WaveParams.z*noise.x);  \n  \n    float Diff = (Dist - CurrentTime); \n    \n    float ScaleDiff = (1.0 - pow(3.*abs(Diff * WaveParams.x), WaveParams.y)); \n    ScaleDiff = max(ScaleDiff,  (1. - pow(abs((Dist - 1.5*CurrentTime) * WaveParams.x), WaveParams.y))); \n    \n\n    return clamp( ( ScaleDiff) / ( (CurrentTime) * Dist * 40.0) , 0.0, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float ratio = iResolution.y/iResolution.x;\n    \n    vec2 uv = fragCoord/ iResolution.xy;\n    uv.y *= ratio; \n    \n    float col = 0.;\n    \n    for(float i = 0.; i<=RIPPLES_COUNT; i++)\n    {\n        col += Ripple(uv,i*0.1,RIPPLES_SCALE);   \n    }\n    \n    fragColor = vec4(col);\n   \n}","name":"Image","description":"","type":"image"}]}