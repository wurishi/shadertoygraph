{"ver":"0.1","info":{"id":"wdsfR8","date":"1587703517","viewed":55,"name":"square movement","username":"blepfo","description":"Squares","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["basic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author:\n// Title:\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nfloat square(\n\tvec2 uv,\n    float r,\n    float blur\n) {\n    vec2 dist = abs(uv - vec2(0.5));\n    float d = max(dist.x, dist.y);\n    return smoothstep(r-blur, r+blur, d);\n}\n\nmat2 rotate2d(float theta) {\n    return mat2(cos(theta), -sin(theta),\n                sin(theta), cos(theta));\n}\n\nfloat unitImpulse(\n\tfloat x,\n    float edge\n) {\n    return step(edge, x) - step(edge+1., x);\n}\n\nfloat realMod(\n\tfloat x, \n    float n\n) {\n    return floor(mod(x, n));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    float tileScale = 11.000;\n    vec2 scaledUv = uv*tileScale;\n    vec2 tileIdxs = floor(scaledUv);\n    // Repeat [0,0]x[1,1]\n    vec2 fractUv = fract(scaledUv);\n\t\n    float staticTime = iTime;\n    // 4 move periods - hpos, vpos, hneg, vneg\n    float timePeriod = realMod(staticTime, 4.);\n    float moveHoriz =\n        // period 0 - hpos\n        unitImpulse(timePeriod, 0.)\n        // period 2 - hneg\n        + unitImpulse(timePeriod, 2.);\n    float moveVert = \n    \t// period 1 - vpos\n        unitImpulse(timePeriod, 1.)\n        // period 3 - vneg\n        + unitImpulse(timePeriod, 3.);\n    // If even == 1, if odd == -1\n    float horizontalSign = 2.*realMod(tileIdxs.y, 2.) - 1.;\n    float verticalSign = 2.*realMod(tileIdxs.x, 2.) - 1.;\n    vec2 rowColTranslate = vec2(\n        // (which row* which period)\n    \t(horizontalSign*moveHoriz)*staticTime,\n        (verticalSign*moveVert)*staticTime\n    );\n    vec2 movedCoords = fractUv + rowColTranslate;\n    \n    //st.x *= u_resolution.x/u_resolution.y;\n\tvec2 finalCoords = fract(movedCoords);\n    float s = 1. - square(finalCoords, 0.312, 0.02);\n    \n    vec3 squareColor = vec3(1.000,0.855,0.608);\n    vec3 color = vec3(0.510,0.263,0.134);\n    color = mix(color, squareColor, s);\n\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}