{"ver":"0.1","info":{"id":"XtjSzw","date":"1442470167","viewed":499,"name":"Waving circles","username":"vamoss","description":"Studying shaders, trying to achieve this image:\nhttp://beesandbombs.tumblr.com/image/121790476454","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["circles","waving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Shader by Vamoss\n// 17/09/2015\n// Reference image\n// http://beesandbombs.tumblr.com/image/121790476454\n\n#define TWO_PI 6.28318530718\n\n//  Function from IÃ±igo Quiles \n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0, \n                     0.0, \n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec3 getColor(in float angle){\n \t// Map the angle (-PI to PI) to the Hue (from 0 to 1)\n    return hsb2rgb(vec3(angle,1.0,1.0));   \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    \n    float radius = 0.3;\n    \n    //tile\n    vec2 frequency = vec2(22.0, 12.0);\n    vec2 index = floor(frequency * st)/frequency;\n    float centerDist = 1.0-length(index-0.5);\n    vec2 nearest = 2.0 * fract(frequency * st) - 1.0;\n    \n    //movement\n    float velocity = 5.0;\n    nearest.x += cos(iTime * velocity + centerDist * TWO_PI)*(1.0-radius);\n    nearest.y += sin(iTime * velocity + centerDist * TWO_PI)*(1.0-radius);\n    \n    //circle\n    float dist = length(nearest);\n    float circle = step(radius, dist);\n    \n    //colors\n    vec3 bgColor = vec3(0.0, 0.0, 0.0);\n    \n    float colorAngle = iTime + centerDist * 2.0;\n    vec3 circleColor = getColor(colorAngle);\n    \n    vec3 color = mix(circleColor, bgColor, circle);\n    \n    fragColor = vec4(color, 1.0);\n    //fragColor = vec4(vec3(centerDist), 1.0);\n}","name":"","description":"","type":"image"}]}