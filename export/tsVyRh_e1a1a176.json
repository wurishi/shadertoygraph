{"ver":"0.1","info":{"id":"tsVyRh","date":"1602244129","viewed":111,"name":"Example 25 - RGB-HSV conversion","username":"jt","description":"Comvert from rgb to hsv and back.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rgb","hsv","colorspace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://en.wikipedia.org/wiki/HSL_and_HSV\n\nvec3 RGBtoHSV(vec3 rgb)\n{\n    // Hue: red = 0/6, yellow = 1/6, green = 2/6,\n    //      cyan = 3/6, blue = 4/6, magenta = 5/6\n    vec3 hsv;\n    float cmax = max(rgb.r, max(rgb.g, rgb.b));\n    float cmin = min(rgb.r, min(rgb.g, rgb.b));\n    \n    hsv.z = cmax; // value\n\n    float chroma = cmax - cmin;\n    //if(chroma != 0.0)\n    {\n        hsv.y = chroma / cmax; // saturation\n\n        //if(cmax == rgb.r)\n        if(rgb.r > rgb.g && rgb.r > rgb.b)\n        {\n            hsv.x = (0.0 + (rgb.g - rgb.b) / chroma) / 6.0; // hue\n        }\n        //else if(cmax == rgb.m_Green)\n        else if(rgb.g > rgb.b)\n        {\n            hsv.x = (2.0 + (rgb.b - rgb.r) / chroma) / 6.0; // hue\n        }\n        else\n        {\n            hsv.x = (4.0 + (rgb.r - rgb.g) / chroma) / 6.0; // hue\n        }\n\n        // Make sure hue is in range [0..1]\n        hsv.x = fract(hsv.x);\n    }\n    //else\n    //{\n    //    hsv.x = 0.0; // rnd();\n    //}\n    return hsv;\n}\n\nvec3 HSVtoRGB(in vec3 c) // thanks to iq for this much more compact version!\n{\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 c = texture(iChannel0, uv).rgb;\n    c = RGBtoHSV(c);\n    c.y *= 0.5 - 0.5 * cos(iTime);\n    c = HSVtoRGB(c);\n\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}