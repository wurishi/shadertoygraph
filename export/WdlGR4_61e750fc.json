{"ver":"0.1","info":{"id":"WdlGR4","date":"1545172705","viewed":116,"name":"LH Cylinder flower","username":"andrzej","description":"Mapping cylinder texture into pentagon","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math","flower","coordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846264338327950288419716939937510582097494459230781640628\n\nvoid text(out float weight, in vec2 coord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = coord;\n    vec3 col = vec3(1.0, 0.0, 0.0);\n    // NOTE: big value used instead of 5.0 here creates pretty nice pattern\n    vec4 texcolor = vec4(col * abs(sin(uv.x * 5.0 * 3.14159)), 1.0);\n\n\tvec2 breakout = vec2(uv.x*5.0, uv.y);\n    float time = -clamp(sin(iTime) * sin(iTime), 0.05, 1.0);\n    float subtract = breakout.g - (texcolor.r*time); \n\n\tvec2 result= vec2(breakout.r, subtract);\n\tfloat oneminus = 1.0 - result.g;\n\tweight = 4.0 * smoothstep(0.2, 1.0, oneminus);\n}\n\nvoid toCircleCoord(out vec2 circleCoord, in vec2 uv, in float scale)\n{              \n    vec2 center = vec2(0.5, 0.5);\n    vec2 direction = vec2(1.0, 0.0);\n    vec2 normalizedPointCoord = normalize(uv - center);\n    float pointAngle = acos(dot(direction, normalizedPointCoord)) / (2.0 * PI);\n    float dist = distance(center, uv);\n    vec4 color = vec4(0.0);\n    circleCoord = vec2(pointAngle, scale * dist);\n}\n\nvoid mixColors(out vec4 color, in vec4 color1, in float weight1, in vec4 color2, in float weight2)\n{\n    color = color1 * weight1 * color2.z * weight2 + color2 * weight2;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n \tvec2 uv = fragCoord/iResolution.y;\n\n    // settings\n    float scale1 = 2.0;\n    vec4 color1 = vec4(0.0, 0.3, 0.5, 1.0);\n        \n    float scale2 = 2.6;\n    vec4 color2 = vec4(0.7, 0.0, 0.5, 1.0);\n    \n    // drawing\n\tvec2 circleCoord1 = vec2(0.0);\n    toCircleCoord(circleCoord1, uv, scale1);\n    float weight1 = 0.0;\n    text(weight1, circleCoord1);\n    \n    vec2 circleCoord2 = vec2(0.0);\n    toCircleCoord(circleCoord2, uv, scale2);\n    float weight2 = 0.0;\n    text(weight2, circleCoord2);\n\n    vec4 outColor = vec4(0.0);\n    mixColors(outColor, color1, weight1, color2, weight2);\n    fragColor = outColor;\n}","name":"Image","description":"","type":"image"}]}