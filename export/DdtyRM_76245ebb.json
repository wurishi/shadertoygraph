{"ver":"0.1","info":{"id":"DdtyRM","date":"1694853065","viewed":204,"name":"Simple God Rays Effect","username":"alphardex","description":"A simple god rays effect.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["noise","godrays"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://github.com/MaxBittker/glsl-voronoi-noise/blob/master/2d.glsl\nconst mat2 myt=mat2(.12121212,.13131313,-.13131313,.12121212);\nconst vec2 mys=vec2(1e4,1e6);\n\nvec2 rhash(vec2 uv){\n    uv*=myt;\n    uv*=mys;\n    return fract(fract(uv/mys)*uv);\n}\n\nvec3 hash(vec3 p){\n    return fract(sin(vec3(dot(p,vec3(1.,57.,113.)),\n    dot(p,vec3(57.,113.,1.)),\n    dot(p,vec3(113.,1.,57.))))*\n43758.5453);\n}\n\nfloat voronoi2d(const in vec2 point){\nvec2 p=floor(point);\nvec2 f=fract(point);\nfloat res=0.;\nfor(int j=-1;j<=1;j++){\n    for(int i=-1;i<=1;i++){\n        vec2 b=vec2(i,j);\n        vec2 r=vec2(b)-f+rhash(p+b);\n        res+=1./pow(dot(r,r),8.);\n    }\n}\nreturn pow(1./res,.0625);\n}\n\nvec2 cart2polar(vec2 uv){\nfloat phi=atan(uv.y,uv.x);\nfloat r=length(uv);\nreturn vec2(phi,r);\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\nvec2 uv=fragCoord/iResolution.xy;\n\nvec2 p=uv;\np.x*=iResolution.x/iResolution.y;\n\nuv=(uv-.5)*2.;\nuv.x*=iResolution.x/iResolution.y;\n\nvec3 col=vec3(0.);\n// float noise=voronoi2d(uv*3.);\n// col=vec3(noise);\n\nuv.y-=2.;\nuv/=50.;\nuv=cart2polar(uv);\ncol=vec3(uv.x);\n\nfloat n1=voronoi2d((vec2(uv.x,0.)+.04*iTime)*10.);\ncol=vec3(n1);\nfloat n2=voronoi2d((vec2(.1,uv.x)+.04*iTime*1.5)*10.);\ncol=vec3(n2);\nfloat n3=min(n1,n2);\ncol=vec3(n3);\n\n// col=vec3(1.);\nfloat mask=smoothstep(.15,.86,p.y);\nfloat alpha=n3*mask*.8;\n\ncol=mix(vec3(0.,.412,.580),vec3(1.),alpha);\n\nfragColor=vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}