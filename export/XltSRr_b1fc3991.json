{"ver":"0.1","info":{"id":"XltSRr","date":"1477862483","viewed":357,"name":"Circos","username":"dila","description":"Many nested cylinders with transparent panels. Inspired by tube 256b by baze.","likes":22,"published":1,"flags":0,"usePreview":1,"tags":["raymarchtunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float trad = 1.0;\nfloat tdz = 0.0;\n\nfloat map(vec3 p)\n{\n    tdz = p.z;\n    return trad - length(p.xy);\n}\n\nvec3 normal(vec3 p)\n{\n\tvec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        t += map(o + r * t);\n    }\n    return t;\n}\n\nvec3 textex(sampler2D channel, vec3 p)\n{\n    vec3 ta = texture(channel, vec2(p.y,p.z)).xyz;\n    vec3 tb = texture(channel, vec2(p.x,p.z)).xyz;\n    vec3 tc = texture(channel, vec2(p.x,p.y)).xyz;\n    return (ta*ta + tb*tb + tc*tc) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv = uv * 2.0 - 1.0;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 o = vec3(0.0, 0.0, 10.0 + iTime);\n    vec3 r = normalize(vec3(uv, 1.0));\n    \n    float rt = iTime * 0.5;\n    r.xz *= mat2(cos(rt), sin(rt), -sin(rt), cos(rt));\n    \n    float fa = 3.14158 * 0.25;\n    r.xy *= mat2(cos(fa), sin(fa), -sin(fa), cos(fa));\n    \n    vec3 rc = vec3(0.0);\n    float bn = 1.0;\n    \n    for (int i = 0; i < 8; ++i) {\n        float ni = float(i) / 8.0;\n    \n        trad = mix(0.25, 10.0, ni);\n        vec3 to = o + vec3(0.0, 0.0, ni);\n        float t = trace(to, r);\n        vec3 w = to + r * t;\n\n        float c = floor(mix(2.0, 8.0, ni));\n\n        float rad = fract(w.z * c);\n        float frad = floor(tdz * c);\n        float th = atan(w.y, w.x) + frad;\n        th = th / 3.14159 * 0.5 + 0.5;\n        th += 0.05 * iTime * cos(frad * 3.14159);\n\n        vec3 ac = vec3(1.0);\n        ac /= (1.0 + t * t * 0.1);\n        \n        vec3 tw = w * vec3(1.0, 1.0, 1.0);\n        float tt = th * frad;\n        tw.xy *= mat2(cos(tt), -sin(tt), sin(tt), cos(tt));\n\t\tvec3 cm = textex(iChannel0, tw);\n        \n        vec3 sn = normal(w);\n\n        float td = fract(th * c);\n        float tdn = mix(0.8, 0.95, ni);\n        float bin = max(sign(tdn - td), 0.0);\n        float bk = 1.0 / (1.0 + td * max(tdn - td, 0.0) * 200.0);\n        \n        float edge = 0.5;\n\t\tfloat ain = max(sign(edge - rad), 0.0);\n        float ak = 1.0 / (1.0 + rad * max(edge - rad, 0.0) * 100.0);\n        \n        float mask = ain * bin;\n        vec3 fullc = ac * cm;\n        vec3 alphc = ac * cm * 0.125;\n        \n        rc += mix(fullc, alphc, ak + bk) * bn * mask;\n        bn = min(bn * (1.0 - mask), ak + bk);\n    }\n    \n\tfragColor = vec4(sqrt(rc), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}