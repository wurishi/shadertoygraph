{"ver":"0.1","info":{"id":"mdcBRr","date":"1696791496","viewed":36,"name":"shader caveman art","username":"mo","description":"learning","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["zug"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 Rectangle(vec2 uv, vec2 pos, vec2 size, float blur, vec3 color) {\n\n    float left = smoothstep(pos.x - blur, pos.x + blur, uv.x);\n    float bottom = smoothstep(pos.y - blur, pos.y + blur, uv.y);\n    float right = smoothstep(pos.x + size.x + blur, pos.x + size.x - blur, uv.x);\n    float top = smoothstep(pos.y + size.y + blur, pos.y + size.y - blur, uv.y);\n    return left * bottom * right * top * color;\n}\n\n\nvec3 Circle(vec2 uv, vec2 position, float radius, float blur, vec3 col)\n{\n    float aspect_ratio = iResolution.x / iResolution.y;\n    vec2 corrected_uv = vec2(uv.x*aspect_ratio, uv.y);\n    vec2 corrected_position = vec2(position.x * aspect_ratio, position.y);\n    vec2 distance = corrected_uv - corrected_position;\n    float length_of_distance = length(distance);\n    float shape = smoothstep(radius, radius-blur, length_of_distance);\n    return col * shape;\n}\n\nvec3 ClampC(vec3 c)\n{\n    return vec3(clamp(c, vec3(0.,0.,0.), vec3(1.,1.,1.)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 result = vec3(0.0);\n\n    \n    uv.x += clamp(sin(iTime*2.),-.2,0.2);\n    uv.y += clamp(cos(iTime*8.),-.0,0.2);\n    \n    \n    vec3 hat = Rectangle(uv, vec2(0.3, 0.77), vec2(0.4, 0.1), 0.01, vec3(0., abs(sin(1. * iTime)), 0.));\n    vec3 hat3 = Rectangle(uv, vec2(0.3, 0.77), vec2(0.4, 0.1), 0.01, vec3(0., abs(cos(1. * iTime)), 0.));\n    vec3 hat2 = Rectangle(uv, vec2(0.4, 0.87), vec2(0.2, 0.1), 0.01, vec3(abs(sin(1. * 2.*iTime)), 1., 0.));\n    \n    vec3 face = Circle(uv, vec2(0.5,0.5), 0.3, 0.03, vec3(abs(sin(iTime * 1.0)),.5,0.0));\n    \n    vec3 inner_face = Circle(uv, vec2(0.5,0.5), 0.2, 0.03, vec3(1.,1.,1.));\n    vec3 smile_circle = Circle(uv, vec2(0.5,0.55), 0.2, 0.03, vec3(1.,0.0,0.));\n    \n    vec3 eye_hole = Circle(uv, vec2(0.5,0.6), 0.1, 0.03, vec3(cos(0.5 * iTime),1.0,1.0));\n    vec3 cornea = Circle(uv, vec2(0.5,0.6), 0.05, 0.01, vec3(cos(1.0 * iTime * 2.),0.,0.));\n    vec3 iris_hole = Circle(uv, vec2(0.5,0.6), 0.025, 0.01, vec3(1.0,1.0,1.0));\n    vec3 iris = Circle(uv, vec2(0.5,0.6), 0.025, 0.02, vec3(cos(1.0 * iTime * 20.),0.0,0.0));\n    \n    result = ClampC(result + face);\n    result = ClampC(result - inner_face);\n    result = ClampC(result + smile_circle);\n    result = ClampC(result - eye_hole);\n    result = ClampC(result + cornea);\n    result = ClampC(result - iris_hole);\n    result = ClampC(result + iris);\n    result = ClampC(result + hat);\n    result = ClampC(result + hat3);\n    result = ClampC(result + hat2);\n\n    // Output to screen\n    fragColor = vec4(result,1.0);\n}","name":"Image","description":"","type":"image"}]}