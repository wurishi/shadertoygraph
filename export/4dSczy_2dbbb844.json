{"ver":"0.1","info":{"id":"4dSczy","date":"1496343430","viewed":904,"name":"SDF Alpha texture","username":"culdevu","description":"Using an image SDF as an alpha texture. Unfortunately, I don't really know enough about SDFs to be able to actually get an improvement over just using an alpha texture, but apparently that's a thing you can do","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["3d","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGzn","filepath":"/media/a/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","previewfilepath":"/media/ap/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","type":"cubemap","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rayPlane(vec3 ray, vec3 pos, vec3 norm)\n{\n    return dot(pos, norm) / dot(ray, norm);\n}\n\nvoid pR(inout vec2 p, float a) {\n\tp = cos(a)*p + sin(a)*vec2(p.y, -p.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 final = vec3(0);\n    \n    // set up and transform camera\n    vec3 camera = vec3(0, 0, 4);\n    vec3 screenPos = vec3(fragCoord / iResolution.y, 3) - vec3(iResolution.x / iResolution.y / 2., 0.5, 0);\n    \n    float camAngle = 6.28 * iMouse.x / iResolution.x;\n    pR(camera.xz, camAngle);\n    pR(screenPos.xz, camAngle);\n    \n    vec3 ray = normalize(screenPos - camera);\n    \n    // set up local coords of the plane\n    vec3 norm = vec3(0, 0, -1);\n    vec3 up = vec3(0, 1, 0);\n    vec3 right = vec3(1, 0, 0);\n    float angle = iTime / 1.;\n    \n    pR(norm.xz, angle);\n    pR(right.xz, angle);\n    \n    // ray trace\n    float t = -1.;\n    float r = rayPlane(ray, vec3(0, 0, 0) - camera, norm);\n    vec3 pos = camera + r * ray;\n    float x = dot(pos, right);\n    if (-1. < x && x < 1. &&\n        -1. < pos.y && pos.y < 1.)\n        t = r;\n    \n    float alpha = 0.;\n    vec3 planeFinal = vec3(1,1,1);\n    vec3 background = texture(iChannel1, ray).xyz;\n    \n    if (t > 0.0)\n    {\n        vec2 uv = vec2(x, pos.y);\n        uv.y *= -1.;\n        int c = 211;\n        vec2 u = vec2( c % 16, 15-c / 16 )/16.;\n        u += uv / 8.;\n\n        const float smoothing = 1. / 32.;\n        float s = texture(iChannel0, u).w;\n        alpha = smoothstep(0.5 - smoothing, 0.5 + smoothing, s);\n        \n        // color the square\n        vec3 r = reflect(ray, norm);\n        planeFinal = texture(iChannel2, r).xyz + 0.3*texture(iChannel3, uv).xyz;\n    }\n    \n    final = mix(background, planeFinal, alpha);\n    \n    fragColor = vec4(final, 1.0);\n}","name":"Image","description":"","type":"image"}]}