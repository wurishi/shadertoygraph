{"ver":"0.1","info":{"id":"4fjGzR","date":"1703752656","viewed":25,"name":"phind: test2 ","username":"AIFunnyTests","description":"prompt: interactive animation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractals","ai","3dfractals","phind"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Interactive 3D Mandelbulb fractal\n#define MAX_ITER 32\n#define DISTANCE_EPSILON 0.001\n#define PI 3.14159265359\n\n// The Mandelbulb SDF\nfloat mandelbulb(vec3 p) {\n   vec3 z = p;\n   float dr = 1.0;\n   float r = 0.0;\n   for (int i = 0; i < MAX_ITER; i++) {\n       r = length(z);\n       if (r > 2.0) break;\n       \n       float theta = acos(z.z / r);\n       float phi = atan(z.y, z.x);\n       dr = pow(r, 7.0) * 7.0 * dr + 1.0;\n\n       float zr = pow(r, 6.0) * cos(theta * 6.0);\n       float zi = pow(r, 6.0) * sin(theta * 6.0);\n       float zx = zr * cos(phi * 6.0) - zi * sin(phi * 6.0);\n       float zy = zr * sin(phi * 6.0) + zi * cos(phi * 6.0);\n       z = vec3(zx, zy, zr - zi);\n       z = z + p;\n   }\n   return 0.5 * log(r) * r / dr;\n}\n\n// Ray marching\nvec3 rayMarch(vec3 ro, vec3 rd) {\n   vec3 p = ro;\n   for (int i = 0; i < 64; i++) {\n       float d = mandelbulb(p);\n       if (d < DISTANCE_EPSILON) return p;\n       p += d * rd;\n   }\n   return p;\n}\n\n// Main Image\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n   vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n   vec3 ro = vec3(3.0 * cos(iTime), 2.0, 3.0 * sin(iTime));\n   vec3 ta = vec3(0.0, 0.0, 0.0);\n   vec3 z = normalize(ta - ro);\n   vec3 up = vec3(0.0, 1.0, 0.0);\n   vec3 x = normalize(cross(z, up));\n   vec3 y = normalize(cross(x, z));\n   vec3 rd = normalize(x * uv.x + y * uv.y + z);\n   vec3 p = rayMarch(ro, rd);\n   float color = mandelbulb(p);\n   fragColor = vec4(vec3(color), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}