{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float mainSound( in int samp,float time)\n{\n    float saw = 2.*fract(440.*time)-1.;\n    \n    float sine = sin(6.283185*440.*time);\n    \n    float pyr = 2.*abs(saw)-1.;\n    \n    float square = clamp(floor(saw*20.),-1.,1.);\n    \n    float r = mix(sine,saw,clamp(sin(time),0.,1.));\n    \n    r = mix(r,pyr,clamp(sin(time-3.14),0.,1.));\n    \n    r = mix(r,square,clamp(sin(time-4.7123),0.,1.));\n    \n    return r;\n}\n\nint samp;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = vec2(.03141592,6.)*(fragCoord.xy - iResolution.xy/2.) / iResolution.x;\n    float s = uv.x+iTime;\n    s = mainSound(samp,s);\n    s = clamp(floor(s/uv.y),0.,1.);\n\tfragColor = vec4(s,s,s,1.0);\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"vec2 mainSound( in int samp,float time)\n{\n    float saw = 2.*fract(440.*time)-1.;\n    \n    float sine = sin(6.283185*440.*time);\n    \n    float pyr = 2.*abs(saw)-1.;\n    \n    float square = clamp(floor(saw*20.),-1.,1.);\n    \n    float r = mix(sine,saw,clamp(sin(time),0.,1.));\n    \n    r = mix(r,pyr,clamp(sin(time-3.14),0.,1.));\n    \n    r = mix(r,square,clamp(sin(time-4.7123),0.,1.));\n    \n    return vec2(r);\n}","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ltX3zs","date":"1424294699","viewed":1543,"name":"basic sounds","username":"dzira","description":"I have a better idea of how sounds work now so I made some basic waveforms: sine, saw, pyramid, square","likes":11,"published":3,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""}}