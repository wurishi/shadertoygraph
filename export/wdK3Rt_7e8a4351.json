{"ver":"0.1","info":{"id":"wdK3Rt","date":"1570780933","viewed":329,"name":"conic sections from spotlight","username":"matthen","description":"circles, ellipses, parabolas and hyperbolas are created by shining a light on a plane","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    vec3 col;\n\n \n\tvec3 camera = vec3(0., 0, -1.);\n    vec3 screen = vec3(uv.x, uv.y, 0.);\n    vec3 ray = normalize(screen - camera);\n    \n    float numSteps = 5. / (ray.z);\n    vec3 planePoint = screen + ray * numSteps;\n\n    \n    // move a torch around in some swirly way.\n    vec3 torch = vec3(\n        2. * sin(iTime), \n        0.2 * cos(iTime),\n        4.+.99 * sin(iTime)\n    );\n    vec3 torchDir = normalize(\n        vec3(-7. * sin(iTime),\n             cos(.618 * iTime),\n             .5 + .49 * cos(2. * iTime)\n            )\n    );\n    \n    col +=  smoothstep(0.9, 1.0, dot(normalize(planePoint - torch), torchDir));\n    \n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}