{"ver":"0.1","info":{"id":"3dyGDm","date":"1570260282","viewed":404,"name":"shadetober #04 (freeze)","username":"percentcer","description":"Inktober, but with shaders","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["inktober","shadertober","shadetober","inktober2019"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define OCTAVES 16\nfloat fbm (in vec2 uv) {\n    // Initial values\n    float value = 0.1;\n    float amplitude = sin(iTime)/2. * .1 + .5;\n    float frequency = 10.;\n    //\n    // Loop of octaves\n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitude * texture(iChannel0, uv).r;\n        uv *= 2.;\n        amplitude *= .5;\n    }\n    return value;\n}\n\n#define PI 3.141\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 distortion = texture(iChannel1, uv);\n    uv.x += sin(distortion.r);\n    uv.x *= iResolution.x / iResolution.y;\n    float fractime = fract(iTime / 10.);\n    vec2 pos = uv - vec2(0.5);\n    pos.y -= 1.;\n    pos.y += fractime*2.;\n    pos.x += -1.+sin(iTime);\n\n    vec3 col = 1.05 + 0.5*atan(vec3(0.,uv.x,uv.y) * vec3(1., .4, 10.) * PI);\n    col*=fbm(uv);\n    \n    float rad = length(pos) * 2.0;\n    float a = atan(pos.y, pos.x);\n    float f= cos(a * fractime * 10.) * sin(a *  11.);\n    vec3 inside = 1. - vec3(step(f, rad));\n    \n    // Output to screen\n    fragColor = vec4(col, 1.) + vec4(inside, 1.);\n}","name":"Image","description":"","type":"image"}]}