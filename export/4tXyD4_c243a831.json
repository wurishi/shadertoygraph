{"ver":"0.1","info":{"id":"4tXyD4","date":"1504750582","viewed":267,"name":"hsb2rgb","username":"sgoal","description":"hsb2rgb","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["hsb2rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Native 0\n\n#define _local_main_ void main()\n#define _shadertoy_main_ void mainImage( out vec4 fragColor, in vec2 fragCoord ) \n#define u_resolution iResolution\n\n#if Native == 1\n    #define Main() _local_main_\n    #define fragColor gl_FragColor\n    #define fragCoord gl_FragCood\n    #define iTime iGlobalTime\n#else\n    #define Main() _shadertoy_main_\n    #define gl_FragColor fragColor\n    #define gl_FragCood fragCoord\n    #define iGlobalTime iTime\n#endif \n\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define TWO_PI 6.28318530718\n#define PI 3.141592653\n\n//  Function from IÃ±igo Quiles \n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0, \n                     0.0, \n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nMain(){\n    vec2 st = 2.0*vec2(gl_FragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n    vec3 color = vec3(0.0);\n\n    // Use polar coordinates instead of cartesian\n    vec2 toCenter = vec2(0)-st*0.5;\n    float angle = atan(toCenter.y,toCenter.x*sin(PI*iTime));\n    float radius = length(toCenter);\n  \t\n    // Map the angle (-PI to PI) to the Hue (from 0 to 1)\n    // and the Saturation to the radius\n    //color = vec3(angle/TWO_PI+0.5,radius,1.0);\n    color = mix(hsb2rgb(vec3((angle/TWO_PI)+0.5,radius*3.0,1.0)),vec3(0.996,0.933,1.000),\n                smoothstep(.49,.5,radius));\n\n    gl_FragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}