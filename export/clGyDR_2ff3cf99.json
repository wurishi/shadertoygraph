{"ver":"0.1","info":{"id":"clGyDR","date":"1700074208","viewed":40,"name":"Drop blending ","username":"oleg304","description":"Drop blending by angle\nshape https://www.shadertoy.com/view/MdB3zK\nblending https://www.shadertoy.com/view/dtVczm","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["blending","drop"],"hasliked":0,"parentid":"MdB3zK","parentname":"Segment"},"renderpass":[{"inputs":[],"outputs":[],"code":"// shape https://www.shadertoy.com/view/MdB3zK\nvec2 rotate(vec2 v, float alpha){\n\tfloat vx = v.x*cos(alpha)-v.y*sin(alpha);\n\tfloat vy = v.x*sin(alpha)+v.y*cos(alpha);\n\tv.x = vx; v.y = vy;\n\treturn v;\n}\nfloat expDrop(vec2 p1, vec2 p2, vec2 p, float thickness){\n\tfloat d = 1.; p -= p1;\n\tvec2 l = p2-p1;\t\t\n\tfloat angle = -atan(l.y,l.x);\n\tp = rotate(p,angle);\n\tfloat llv = length(l);\n\tif(p.x<0.)\td = .06*length(p);\n\telse if(p.x<llv){d = exp(10.*(p.x-.05))*(llv/(llv-p.x)*.1)*abs(p.y);}\n\treturn thickness/d;\n}\n\n// A simple way to bend 2D space https://www.shadertoy.com/view/dtVczm\nvec2 bend(vec2 p, float a){\n    if(abs(a)<.001) return p;  // if perfectly straight    \n    float ra = .5/a;p.x -= ra;    \n    vec2 sc = vec2(sin(a),cos(a));\n    vec2 q = p - 2.*sc*max(0.,dot(sc,p));    \n    float s = sign(a);\n    return vec2( (p.y>0.) ? ra-s*length(q)        : sign(-s*p.x)*(q.x+ra),\n                 (p.y>0.) ? ra*atan(s*p.y,-s*p.x) : (s*p.x<0.)?p.y:1.-p.y );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 p = fragCoord.xy/iResolution.xx - vec2(.5,.5*iResolution.y/iResolution.x);\n    \n//    float angle = 3.14; \n    float angle = sin(iTime)*2.7;\n    p = bend(p+vec2(.0,.1),angle)/3.;\n    \n\tvec2 p1 = vec2(.0,.05);\n    vec2 p2 = vec2(.0,-.03);\t\n\tfloat thickness = .0035;\n\tfloat d = clamp(expDrop(p1,p2,p,thickness),0.,3.);\n\tfragColor = d*vec4(.0,.1,.35,1.);\n}","name":"Image","description":"","type":"image"}]}