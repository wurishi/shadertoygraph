{"ver":"0.1","info":{"id":"MsGcDV","date":"1561495435","viewed":276,"name":"Voronoi Grid","username":"olano","description":"Demonstrate how jittered points on a grid make Voronoi noise","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","noise","worley","pcg3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float gridsize = 50.;\n\nconst float linewidth = 2.;\nconst vec3 linecolor = vec3(0,1,0);\n\nconst float spotwidth = 10.;\nconst vec3 spotcolor = vec3(1,0,0);\n\nvec3 hash(ivec3 p) {\n    uvec3 v = uvec3(p);\n    v = v * 1664525u + 1013904223u;\n    v.x += v.y*v.z; v.y += v.z*v.x; v.z += v.x*v.y;\n    v.x += v.y*v.z; v.y += v.z*v.x; v.z += v.x*v.y;\n    return vec3(v >> 16u) / float(0xffff);\n}\n\n// w-pixel wide filtered line at d=0\n// use as color = mix(color, edgecolor, fline(d));\nfloat fline(float d, float w) {\n    float dpix = d / fwidth(d);\n    float lo = 0.5*w - 1., hi = 0.5*w + 1.;\n    return smoothstep(hi, lo, dpix) - smoothstep(-lo, -hi, dpix);\n}\n\n// filtered edge at d=w pixels\n// use as color = mix(color, edgecolor, fedge(d)\nfloat fedge(float d, float w) {\n    float dpix = d * gridsize;\n    float lo = 0.5*w - 1., hi = 0.5*w + 1.;\n    return smoothstep(hi, lo, dpix);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = vec3(0);\n    \n    // tile coordinates, and coordinate within the tile\n    vec2 uv = fragCoord / gridsize;\n    \n    vec2 cell;\n    float vnoise = 10.;\n    for(cell.x = floor(uv.x - 1.5); cell.x <= floor(uv.x + 2.5); ++cell.x) {\n        for(cell.y = floor(uv.y - 1.5); cell.y <= floor(uv.y + 2.5); ++cell.y) {\n            vec2 pt = cell + hash(ivec3(cell,0)).xy;\n            float dist = length(uv - pt);\n            if (dist < vnoise) vnoise = dist;\n        }\n    }\n    color = vec3(vnoise);\n    \n    // spot for point in this tile\n    vec2 pt = hash(ivec3(uv,0)).xy;\n    float dist = length(fract(uv) - pt);\n    color = mix(color, spotcolor, fedge(dist, spotwidth));\n    \n    // grid\n    vec2 fuv = abs(fract(uv + 0.5) - 0.5);\n    color = mix(color, linecolor, fline(fuv.x, linewidth));\n    color = mix(color, linecolor, fline(fuv.y, linewidth));\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}