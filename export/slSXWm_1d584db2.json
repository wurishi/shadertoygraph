{"ver":"0.1","info":{"id":"slSXWm","date":"1627805199","viewed":297,"name":"autocannibalism [FLASHY]","username":"ENDESGA","description":".......\nForked from scry's beautiful code~","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"WdySDm","parentname":"Branching things"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define res iResolution.xy\nvoid mainImage( out vec4 col, in vec2 pos )\n{\n    vec2 uv = pos/res;\n    \n    col = vec4(texture(iChannel0,uv).rgb - (texture(iChannel0,uv*uv*(uv+.5)).rgb * 2.),1.);\n    //if (pow(length(uv.xy-1.725)*.001,.25)*1000.>length(pos * cos(iTime)))  else\n    if (int(floor(length(uv.xyxy * col) * 7.777)) % 7 == 1) col *= 7.777; else\n    \n    \n    {\n        col = (col*col)+col;\n        col = vec4(col.rgb * vec3(col.b+col.g),1.);\n        col = vec4(vec3((col.r+col.g+col.b)/3.)/length(col),1.) * 4.;\n        col = ((col*col)+col)*vec4(.5,0.,.125,1.);\n        col = clamp(col * col,0.,1.);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define T(x,y) texture(iChannel0, tv+vec2(x,y)).rgb\n#define S(x,y) texture(iChannel1, tv+vec2(x,y)).rgb\n//#define iTime (iTime)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = -1. + 2. * uv;\n    vec2 R = iResolution.xy;\n    vec2 tv = fragCoord/iResolution.xy;;\n    vec2 px = vec2(1./R.x,1./R.y)*2.;\n    vec3 c = T(0.,0.);\n    px *= (1.-c.r)*(1.-c.r)*2.;\n    vec2 fc = fragCoord.xy;\n    vec3 col = vec3(0.);\n    vec3 u = T(0,px.y);\n    vec3 d = T(0.,-px.y);\n    vec3 l = T(px.x,0.);\n    vec3 r = T(-px.x,0.);\n\n    vec3 udlr = (u+d+l+r)/4.;\n    if (tv.x < .05 || tv.y < .05 || tv.x > 0.95 || tv.y > 0.95) {\n        col.r = sin(uv.x+uv.y+iTime*0.1)*.5+0.15;\n    }\n    if (u.r > d.r || d.r > u.r) {\n        col.b = ((u.r-d.r))*(sin(cos(iTime*777.7)*777.7)*7777.7*pow(length(S(uv.x,uv.y) * 2.17),2.))*.02;\n    }\n    if (l.r > r.r || l.r > r.r) {\n        col.g = ((l.r-r.r))*(2000.);\n    }\n    vec3 c2 = T((col.b)*px.x,(col.g)*px.y);\n\n    col.r += c2.r*0.997;\n    col.r *= 0.99;\n    if (col.r > 1.) {\n    \tcol.r = 1.;\n    }\n\n    //col.r = mix(col.r,c.r,0.1);\n    fragColor = vec4(col, 1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}