{"ver":"0.1","info":{"id":"4fX3Dj","date":"1703507356","viewed":65,"name":"letterpress & cruchets","username":"lijiyong","description":"letterpress meet cruchet\n \n \n \nmerry christmas","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["cruchet","letterpress"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// https://www.shadertoy.com/view/ls3GWS\n// FXAA code from: http://www.geeks3d.com/20110405/fxaa-fast-approximate-anti-aliasing-demo-glsl-opengl-test-radeon-geforce/3/\n// https://developer.download.nvidia.com/assets/gamedev/files/sdk/11/FXAA_WhitePaper.pdf\n\n#define FXAA_SPAN_MAX 8.0\n#define FXAA_REDUCE_MUL   (1.0/FXAA_SPAN_MAX)\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_SUBPIX_SHIFT (1.0/4.0)\n\nvec3 FxaaPixelShader( vec4 uv, sampler2D tex, vec2 rcpFrame) {\n    \n    vec3 rgbNW = m(tex, uv.zw).xyz;\n    vec3 rgbNE = m(tex, uv.zw + vec2(1,0)*rcpFrame.xy).xyz;\n    vec3 rgbSW = m(tex, uv.zw + vec2(0,1)*rcpFrame.xy).xyz;\n    vec3 rgbSE = m(tex, uv.zw + vec2(1,1)*rcpFrame.xy).xyz;\n    vec3 rgbM  = m(tex, uv.xy).xyz;\n\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max(\n        (lumaNW + lumaNE + lumaSW + lumaSE) * (0.25 * FXAA_REDUCE_MUL),\n        FXAA_REDUCE_MIN);\n    float rcpDirMin = 1.0/(min(abs(dir.x), abs(dir.y)) + dirReduce);\n    \n    dir = min(vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\n          max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n          dir * rcpDirMin)) * rcpFrame.xy;\n\n    vec3 rgbA = (1.0/2.0) * (\n        m(tex, uv.xy + dir * (1.0/3.0 - 0.5)).xyz +\n        m(tex, uv.xy + dir * (2.0/3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * (1.0/2.0) + (1.0/4.0) * (\n        m(tex, uv.xy + dir * (0.0/3.0 - 0.5)).xyz +\n        m(tex, uv.xy + dir * (3.0/3.0 - 0.5)).xyz);\n    \n    float lumaB = dot(rgbB, luma);\n\n    if((lumaB < lumaMin) || (lumaB > lumaMax)) return rgbA;\n    \n    return rgbB; \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 rcpFrame = .25 / iResolution.xy;\n  \tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 col = m( iChannel0, uv ).rgb;\n    \n    fragColor = vec4( col, 1. );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nfloat smin (float a, float b, float r)\n{\n    float h = clamp(.5+.5*(b-a)/r,0.,1.);\n    return mix(b, a, h) - r*h*(1.-h);\n}\n\nfloat smax(float a, float b, float k) {\n    return -smin(-a, -b, k);\n}\n\nfloat hash( vec2 p ){\n    return fract( dot( p.yxx * .1234, fract( p.yxx ) + 1.456 ) * 123.456 );\n}\n\nvoid up( inout vec3 p, vec2 t ){\n\n    p.xy = mod( p.xy + .1, .2 ) - .1;\n    p.xy *= rot( round( hash( t.xy * t.yx ) ) * PI * .5 );\n    float a = S(0.,1., S(.5,0., abs( fract(sl( iTime ) * .5 ) - .5 ) )) * PI * .5; // dir\n    p.xy *= rot( a * round( hash( abs( t - 2. ) ) ) );\n    p.z -= S(0.,1., S(.5, 0., abs( fract(sl( iTime ) * 1. ) - .5 ) )) * round( hash( abs( t - 2. ) ) ) * .03;\n    \n}\n\nfloat ty( vec3 p ){\n    \n    \n    up( p, round( p.xy / -vec2( .2 ) ) );\n\n    return smax(\n        smax(\n            abs( p.x ) - .1,\n            abs( p.z ) - .1,\n            .01\n        ),\n        abs( p.y ) - .1,\n        .01\n    );\n}\n\nfloat ring( vec3 p ){\n    \n    up( p, round( p.xy / -vec2( .2 ) ) );\n\n    p.z += .1;\n    p.xy -= sign( p.x + p.y ) * .1;\n\n\n    vec2 q = vec2( length( p.xy ) - .1, p.z );\n    \n    return -k(\n        max(\n            length(q) - .003,\n            abs( p.z ) - .001\n        )\n    );\n}\n\nfloat df( vec3 p ){\n    \n    return smax(\n        ty( p ),\n        ring( p ),\n        .005\n    );\n}\n\nvec3 l(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * 5e-4) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * 5e-4));\n}\n\nfloat L( vec3 p, vec3 ca, vec3 r, float q ){\n    return v( pow( dot( l( p ), normalize( normalize( ca ) - r ) ), q ) );\n}\n\nfloat C( vec2 u ){\n    u -= sign( u.x + u.y ) * .1;\n    return length( u ) - .1;\n}\n\nvec3 screen( vec3 s, vec3 d )\n{\n\treturn s + d - s * d;\n}\n\nvec3 trace( vec2 u ){\n    vec3 c, p, o = vec3( 0., 0., -1. ), r = vec3( u, 1. );\n    float t, d, i;\n    for( ; i < 40.; i++ )\n        p = o + r * t,\n        p.yz *= rot( PI * .12 ),\n        p.y -= fract( iTime * .02 ) * 5.,\n        p.y = mod( p.y + 2.5, 5. ) - 2.5,\n        d = df( p ) * ( p.y > 0. ? .6667 : .5556 ),\n        t += d;\n    \n    if( d < 1e-3 ){\n        \n        vec2 tp2 = round( p.xy / -vec2( .2 ) );\n        \n        c = mix(\n            c,\n            vec3( .1, .2, .8 ) * .15,\n            round( mod( dot( tp2.x, tp2.y ), 2. ) )\n        );\n        \n        c = mix(\n            c,\n            vec3( .96, .1, .1 ) * .15,\n            round( hash( abs( tp2 - vec2( 5., 25. ) ) ) )\n        );\n        \n        c = mix(\n            c,\n            vec3( 0.63, 0.96, 0.14 ) * .15,\n            round( hash( abs( tp2 - vec2( 15., 20. ) ) ) )\n        );\n        \n        if( df(p) == ty(p) ){\n        \n            c = screen( c, max( -l(p).z, 0. ) * m( iChannel1, p.xy * 2. ).rgb * .1 );\n        }\n        \n        float f = ( 1. - ( p.y / 2. + .5 ) );\n        \n        vec3 lg = vec3( -.1, .5, -1. );\n        lg.x += cos( iTime * .3 ) * 1.2;\n        lg.y += sin( iTime * .3 ) * 1.5;\n        float dd = v( dot( l( p ), lg ) );\n        \n        c += L( p, lg, r, 120. ) * dd * vec3( .1, .2, .8 ) * .8;\n\n        lg = vec3( .2, .2, -1. );\n        lg.x += cos( iTime * .2 ) * 1.2;\n        lg.y += sin( iTime * .2 ) * 1.5;\n        dd = v( dot( l( p ), lg ) );\n        c += L( p, lg, r, 100. ) * dd * vec3( .96, .1, .1 ) * .8;\n       \n        lg = vec3( -.2, -.5, -1. );\n        lg.x += cos( iTime * .15 ) * 1.2;\n        lg.y += sin( iTime * .15 ) * 1.5;\n        dd = v( dot( l( p ), lg ) );\n        c += L( p, lg, r, 80. ) * dd * vec3( 0.63, 0.96, 0.14 ) * .8;\n        \n        \n        lg = vec3( 0., .5, -1. );\n        dd = v( dot( l( p ), lg ) );\n        c += L( p, lg, r, 10. ) * dd * .5;\n        \n        \n        if( df( p ) != ty(p) ){\n            c -= .1;\n            c += m( iChannel0, p.xy * .1 ).rgb * .1;\n        } \n        \n    }\n    \n    return c;\n}\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    \n    vec3 c;\n    \n    for( float i = 0.; i < 2.; i++ )\n        c += trace( ( ( V - ( i - 1. ) * .5 ) * 2. - I.xy ) / R );\n    \n    c /= 2.;\n\n    U = c.rgbr;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define I iResolution\n#define k( p ) min( min( abs(p-.03), abs(p+.03) ), abs(p) )\n#define R min( I.x, I.y )\n#define PI 3.1415926\n#define rot( a ) mat2( cos( a + vec4( 0, 11, 33, 0 ) ) )\n#define v( a ) clamp( a, 0., 1. )\n#define sl( a ) S( .1, .9, sin( a * .5 ) / .5 )\n#define S smoothstep\n#define m texture","name":"Common","description":"","type":"common"}]}