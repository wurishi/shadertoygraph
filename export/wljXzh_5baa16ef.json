{"ver":"0.1","info":{"id":"wljXzh","date":"1565096422","viewed":348,"name":"190806_gummycube","username":"omeometo","description":"something\n\nreplacing abs functions appearing in fold operations by \"soft\" abs x->sqrt(x*x+a) gives a kind of smoothing effect.","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["ifs","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float t){\n\treturn mat2(cos(t), sin(t), -sin(t), cos(t));\n}\n\nfloat dist(in vec3 pos){\n    vec3 p=pos;\n    vec3 a=0.14*vec3(cos(iTime));\n    float c=0.2*pow(0.01, smoothstep(0.6, -0.6, cos(iTime*0.7)));\n        \n    for(int k=0;k<10;k++){\n        p=sqrt(p*p+c)-0.5;\n\t\tp.xy*=rot(a.z);\n        p.yz*=rot(a.x);\n        p.zx*=rot(a.y);\n    }\n    return length(p)-0.45;\n}\n\nvoid getColor(out vec4 fragColor, in vec3 pos, in vec3 ray){\n    vec3 bg=vec3(0.0, 0.0, 0.05);\n    vec3 solid=vec3(1.0, 0.5, 0.55);\n\tfragColor=vec4(bg, 1.0);\n    float t=0.;\n    float dprev=1.0;\n    for(int i=0;i<200;i++){\n\t\tfloat d=dist(pos);\n        pos += d*ray;\n        t += d;\n        if(t>1e3)return;\n        if(d<1e-3){\n\t\t\tfloat u=1.0-d/dprev;\n            u+=0.5;\n            fragColor=vec4(solid*u, 1.0);\n            return;\n        }\n        dprev=d;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n\t\n    vec3 pos = vec3(40.0*cos(iTime*1.1), 15.0, 40.0*sin(iTime*1.1));\n    vec3 eye = -normalize(pos);\n    vec3 up = vec3(0.0, 1.0, 0.0);\n    up-=dot(up, eye)*eye;\n    up=normalize(up);\n    vec3 right = cross(eye, up);\n    float angle=0.3;\n    vec3 ray = eye + (uv.x*right+uv.y*up) * angle;\n    ray = normalize(ray);\n    \n    getColor(fragColor, pos, ray);\n}","name":"Image","description":"","type":"image"}]}