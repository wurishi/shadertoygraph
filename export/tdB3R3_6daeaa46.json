{"ver":"0.1","info":{"id":"tdB3R3","date":"1549534398","viewed":111,"name":"SwitchingUniverses","username":"DirtyShaderMan","description":"Just a random project.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat BlackHole(float speed,float radius,float blur,vec2 uv,vec2 p)\n{   \n    vec2 d;\n    d.x = uv.x - p.x;\n    d.y = uv.y - p.y;\n    vec2 st = vec2(atan(d.x,d.y),length(d));\n    d = vec2(st.x/6.2831 + iTime/4.0 + 0.5 + st.y,st.y);\n    float x = d.x * speed;\n    float m = min(fract(x),fract(1.0-x));\n    float c = smoothstep(radius,radius-blur,m * 0.1 + 0.2 - d.y);\n    return c;\n}\n\n\nfloat rand(vec2 uv)\n {\n     return fract(sin( dot(uv.xyx ,vec3(12.9898,78.233,45.5432) )) * 43758.5453);\n }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    uv *= 10.0;\n    vec2 gv = fract(uv) - 0.5;\n    vec3 gcl = sin(iTime * 5.0 * vec3(0.345,0.456,0.567)) * 0.4 + 0.6;\n    float d = length(gv);\n\n    \n    float a = smoothstep(0.3,0.28,d * 8.0 * sin(iTime) * uv.x);\n   \n    float b = BlackHole(0.1,0.002,1.0,uv * rand(uv) * sin(iTime),vec2(0.2,0.0));\n    float c = BlackHole(0.1,0.002,1.0,uv * rand(uv) * sin(iTime),vec2(0.6,0.0));\n    vec4 color = a * vec4(-uv.x * iTime,uv.x * iTime,uv.x * iTime, 1.0 * iTime);\n    vec4 color1 = b * vec4(1.0,1.0,1.0, 1.0 * iTime);\n    vec4 color2 = c * vec4(1.0,1.0,1.0, 1.0);\n    color.rgb += uv.x * gcl;\n    fragColor = vec4(color * color1 + color2);\n}","name":"Image","description":"","type":"image"}]}