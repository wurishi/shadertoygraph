{"ver":"0.1","info":{"id":"4c33Rf","date":"1711942636","viewed":112,"name":"Simple plasma thing","username":"akr51","description":"Just playing around the idea is you plug in separate values in to length, can do this recursively to create infinite trig plasma sort of effects ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["plasma","trig"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 palette(float t) \n{\n\t\n\tvec3 a = vec3(0.2, 0.5, 0.5);\n\tvec3 b = vec3(0.2, 0.5, 0.4);\n\tvec3 c = vec3(1.0, 1.0, 1.0);\n\tvec3 d = vec3(0.00, 0.633, 2.966);\n\t\n\treturn a + b * cos(6.281318 * (c * t * d));\n\t\n}\n\n\n\nvoid mainImage( out vec4 c, in vec2 u)\n{\n    vec2 r = iResolution.xy, uv = (u + u - r) / r.y;\n\n    uv.x += sin(iTime * 0.1);\n    uv.y += cos(iTime * 0.1);\n    \n    float fd = sin(uv.x * uv.y * 4.1 + iTime);\n    float gd = cos(uv.x * 4.0 + iTime);\n    float zd = cos((uv.x + uv.y * 5.4 + iTime) * 1.01 + iTime);\n    \n    float f = tan(length(vec3(fd, gd, zd)));\n    float g = sin((uv.x + uv.y + iTime) * 5.0 + iTime);\n    float z = cos((uv.x * uv.y + iTime) * 6.0 + iTime);\n    \n    float d = length(vec3(f, g, z) * sin(uv.y * 2.0 - iTime) * 0.5 + 0.5); \n    \n    c = vec4(vec3(d) * palette(iTime * 0.1 + (uv.x + uv.y + iTime) * 0.1), 1.0);\n}","name":"Image","description":"","type":"image"}]}