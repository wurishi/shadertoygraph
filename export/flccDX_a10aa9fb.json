{"ver":"0.1","info":{"id":"flccDX","date":"1660622866","viewed":61,"name":"My-first-shader-001: Circle","username":"jcponcemath","description":"My-first-shader with the tutorial from The Art of Code https://youtu.be/u5HAYVHsasc","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    /* Method 1: From tutorial in YT\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    uv -= 0.5; // Move to the centre\n    \n    //Multiply by aspect ratio \n    uv.x *= iResolution.x/iResolution.y;\n    */\n    \n    //Method 2: Suggested by Fabrice Neyret\n    \n    vec2 uv = ( fragCoord -.5* iResolution.xy ) / iResolution.y;\n\n    float d = length(uv); // Distance function built-in\n    float r = 0.3;\n    \n    float c = smoothstep(r, r-0.005, d);\n    \n    //if(d<.3) c = 1.; else c = 0.0;\n    \n    // Output to screen\n    fragColor = vec4(vec3(c), 1.0);\n}","name":"Image","description":"","type":"image"}]}