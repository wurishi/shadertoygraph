{"ver":"0.1","info":{"id":"mt2SRD","date":"1675786356","viewed":105,"name":"Parametric curve testing","username":"mkundera","description":"Testing stuff using basic structure provided by nurof3n.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["parametric","cycloid"],"hasliked":0,"parentid":"WtG3Ww","parentname":"Cycloid"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float r = 0.5;\nconst float pi = 3.141592;\n\nvec2 cycloid(float t) {\n\treturn vec2( r*(cos(t) + cos(4.2*t)), r*(sin(t) + sin(4.2*t)));    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0*pi*r * (2.0 * fragCoord - iResolution.xy)/iResolution.x;\n\n    float dist = 0.05;\n    float x = iTime * 3.0;\n    float tpos = mod(x,16.0*pi); //4.0*pi*r*sin(x*0.25) + pi;// = mod( (x - 2.0*mod(x, 4.0*pi) * step(4.0*pi, mod(x, 8.0*pi))), 4.0*pi ) - pi;\n    for(float t = 0.; t < tpos; t += 0.01) {\n        vec2 point = cycloid(t);\n        dist = min(dist, length(point - uv));\n    }\n    \n    vec3 color = mix(vec3(1.0), vec3(1.0, 0.0, 0.0), smoothstep(0.01, 0.0, dist));    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}