{"ver":"0.1","info":{"id":"wt2yRR","date":"1593612673","viewed":291,"name":"Radial Uv Shader","username":"loni852","description":"Radial Uv Shader Map","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["uv","uv","radial","uvmap","radialuv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(vec2 uv)\n{\n\treturn texture(iChannel1,uv).r;\n}\n\nfloat fbm4( vec2 p )\n{\n    float f = 0.0;\n    f += 0.5000*noise( p ); p = p*2.02;\n    f += 0.2500*noise( p ); p = p*2.03;\n    f += 0.1250*noise( p ); p = p*2.01;\n    f += 0.0425*noise( p );\n    return f/0.9375;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    float maxLength = distance( 0.5, 0.0);\n    \n    uv.x -= 0.5;\n    uv.y -= 0.5;\n    \n    float r = distance(uv,vec2(0.0,0.0))/maxLength;\n    \n    float angle = atan(uv.x, uv.y) / 3.1416;\n    \n    \n    \n    \n    vec2 newuv = vec2(r,angle);\n    \n    //Untouched Radial UV\n    vec2 rounduv = vec2(r,angle);\n    rounduv *= 0.5;\n    rounduv += 0.5;\n    //Offset to match 0 to 1\n    rounduv.x -= 0.3;\n    \n    \n    //MOVE AROUND AND DISTORTION\n    newuv.x -= iTime*0.1;\n    vec2 zoominguv = vec2(r,angle);\n    zoominguv.x += iTime*0.1;\n    newuv.y += (iTime*0.05) + (fbm4(zoominguv)*0.05);\n    vec4 textures = texture(iChannel0,newuv);\n    \n    \n    //Point Showcasing UV Mapping (UVY MAPS TO RADIAL AND UVX TO DISTANCE FROM CENTER)\n    vec2 point = vec2(0.3,(sin(iTime)*0.5)+0.5);\n    textures.r += smoothstep(distance(point,rounduv)-0.01,distance(point,rounduv),0.01);\n    \n    \n    vec3 col = textures.rgb;\n    \n    col = vec3(r,angle,0.0);\n    \n\n    // Output to screen\n    fragColor =  vec4(0.1) + textures;\n}","name":"Image","description":"","type":"image"}]}