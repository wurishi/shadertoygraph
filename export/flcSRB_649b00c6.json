{"ver":"0.1","info":{"id":"flcSRB","date":"1639299094","viewed":826,"name":"TDF2021 ShaderShowdown Quarter","username":"phi16","description":"1\n\n[url]https://youtu.be/2s9KfMn1J9M?t=12324[/url]","likes":19,"published":1,"flags":32,"usePreview":0,"tags":["shadershowdown"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 quad(vec3 o, vec3 d, float a1, float a2) {\n  o.xz *= mat2(cos(a1),-sin(a1),sin(a1),cos(a1));\n  d.xz *= mat2(cos(a1),-sin(a1),sin(a1),cos(a1));\n  o.yz *= mat2(cos(a2),-sin(a2),sin(a2),cos(a2));\n  d.yz *= mat2(cos(a2),-sin(a2),sin(a2),cos(a2));\n  float t = -o.z / d.z;\n  vec3 c = o+t*d;\n  return vec3(c.xy, t);\n}\n\nfloat rand(vec2 p) {\n  return fract(sin(dot(p,vec2(1,1.001)))*10000.);\n}\n\nfloat ti = 0.;\n\nfloat box(vec3 p, vec3 s) {\n  vec3 q = abs(p) - s;\n  return length(max(q,vec3(0))) + min(max(q.x,max(q.y,q.z)), 0.);\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nti = iTime;\n\tvec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  vec2 ouv = uv;\n\tuv -= 0.5;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n  vec3 c = vec3(0);\n  float a = 0.;\n  \n  vec3 o = vec3(0,0,-5);\n  vec3 d = vec3(uv,1);\n  a = ti*0.1;\n  o.xz *= mat2(cos(a),-sin(a),sin(a),cos(a));\n  d.xz *= mat2(cos(a),-sin(a),sin(a),cos(a));\n  \n  for(int j=0;j<20;j++) {\n    float lo = tanh(sin(ti*2.5)*10.)+1.;\n    lo += tanh(cos(ti*2.5)*10.)+1.;\n    float dex = uv.x * 1000.0  * (1.+rand(vec2(j,1)));\n    float dey  =uv.y * 1000.*(1.+rand(vec2(j,0)));\n    if(fract(ti) < 0.5) dex = dey = 0.;\n    vec3 p = quad(o-vec3(0,0,float(j-10)*0.3),d,float(j)*lo*0.1+dex,float(j)*lo*0.4+dey);\n    vec3 pp = o+p.z*d;\n    float d4 = 10000.;\n    for(int i=0;i<8;i++) {\n      vec3 ce = vec3(rand(vec2(i,0)), rand(vec2(i,1)), rand(vec2(i,2))) - 0.5;\n      ce *= 1.;\n      float s = 1.;\n      vec3 p2 = pp + ce;\n      p2 = mod(pp + ce + s/2.,vec3(s)) - s/2.;\n      p2.xz *= mat2(cos(a),-sin(a),sin(a),cos(a));\n      p2.yz *= mat2(cos(a),-sin(a),sin(a),cos(a));\n      float dd = box(p2, vec3(0.2+rand(vec2(floor(ti),0))*0.1));\n      d4 = min(max(dd,-d4), max(-dd,d4));\n    }\n    float f = box(pp, vec3(1.));\n    d4 = max(d4, -f);\n    vec3 pr = pp;\n    pr = mod(pr + 0.5 + ti, 1.) - 0.5;\n    float f2 = box(pr, vec3(0.2));\n    d4 = max(d4, -f2);\n    vec3 cc = cos(vec3(0,2,4)+float(j)*0.2+ti)*0.5+0.5;\n    cc += exp(-max(f,0.)*20.)*2.;\n    cc += exp(-max(f2,0.)*20.)*1.;\n    cc /= pow(length(pp),2.);\n    c += smoothstep(0.1, -0.1, d4) * 0.1 * cc;\n    c += smoothstep(0.01, -0.01, abs(d4)-0.03) * 0.4 * cc;\n  }\n  \n  vec3 u = vec3(0);\n  for(int k=0;k<12;k++) {\n    float a = rand(vec2(k,0) + uv*1000.+ti) * 6.;\n    float r = rand(vec2(k,1) + uv*1000.+ti)*(1.-cos(length(uv)*2.))*0.2;\n    vec2 d = vec2(cos(a),sin(a)) * r;\n    u += texture(iChannel0, ouv + d).rgb;\n  }\n  u /= 12.;\n  c = mix(c,u,0.7);\n    \n  fragColor = vec4(c,1);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}