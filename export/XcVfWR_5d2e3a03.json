{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// number of wave sources\n#define N_SRC 4 \n\n// wavelength (in uv coords)\n#define LAMBDA 0.008 \n\n// size of dots that mark epicenters (in uv coords)\n#define MARKER_SIZE 0.01 \n\n// timestep (~ propagation speed)\n#define DT 4. \n\n// use hues? (false = b&w)\n#define HSV false\n\n// if HSV, use rainbow colors?\n#define RAINBOW true\n\n\n#define TAU 6.283185307\n#define SIXTY_DEG 1.047197551\n\nfloat fake_rand(float s1, float s2) {\n    return fract(sin(dot(vec2(s1,s2),vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat fl_mod(float a, float b) {\n    return a - b * floor(a/b);\n}\n\nvec2 rand_uv(int seed) {\n    float fseed = float(seed);\n    return vec2(fake_rand(0.231,fseed),fake_rand(fseed, 0.788));\n}\n\nvec4 hsv2rgb(float h, float s, float v) {\n    float h_norm = fl_mod(h,TAU);\n    float c = v * s;\n    float m = v - c;\n    float j = h_norm/SIXTY_DEG;\n    float x = c * (1. - abs(fl_mod(j,2.) - 1.));\n    int r = int(floor(j));\n    return m + vec4[] (\n        vec4(c,x,0,0),\n        vec4(x,c,0,0),\n        vec4(0,c,x,0),\n        vec4(0,x,c,0),\n        vec4(x,0,c,0),\n        vec4(c,0,x,0)\n    )[r];\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 stretched_uv = uv * vec2(iResolution.x/iResolution.y,1.);\n    \n    vec2[N_SRC] srcs;\n    for (int i = 0; i < N_SRC; i++) srcs[i] = rand_uv(i);\n    \n    bool near = false;\n    float norm = HSV && RAINBOW ? 1. : (2. * float(N_SRC));\n    float total_dist = 0.;\n    for (int i = 0; i < N_SRC; i++) {\n        float d = distance(srcs[i],stretched_uv);\n        total_dist += (sin(d / LAMBDA - DT * iTime) + 1.) / norm;\n        if (d < MARKER_SIZE) {\n            near = true;\n            break;\n        }\n    }\n  \n    vec4 col = HSV ? hsv2rgb(total_dist, 1., 1.) : vec4(total_dist);\n    fragColor = near ? vec4(1,0,0,0) : col;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XcVfWR","date":"1733960299","viewed":44,"name":"wave-emitters","username":"wxllbxrr","description":"Waves n' that. With multiple wave sources, you can see the points where they interfere to create standing waves. Very cool.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["waves","interference","hsv"],"hasliked":0,"parentid":"","parentname":""}}