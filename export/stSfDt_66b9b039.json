{"ver":"0.1","info":{"id":"stSfDt","date":"1652900952","viewed":190,"name":"Sine Animation","username":"Wabrion","description":"A very typical animation","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["sin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DRAW_GRID 01\n#define DRAW_TRI 01\n#define DRAW_POLAR_GRID 0\n\n#define R    1.0\n#define ZOOM 5.0\n#define GLOW(r, d, i) pow(r/(d), i)\n#define RX 1.0 / min(iResolution.x, iResolution.y)\n#define CIRCLE(r, p) length(p) - abs(r)\n\nmat2 rot2D(float angle, float clock) {\n\n    float c = cos(angle);\n    float s = sin(angle);\n\n    return mat2(\n        c, clock*s,\n        -clock*s, c\n    );\n\n}\n\nfloat plot(float p, float t) {                                                                  \n                                                                                                                                        \n    return 1.0 - smoothstep(t - RX * 1.5, t + RX * 1.5, p);\n\n}\n\nfloat gridp(float x, float t) {\n\n    float k = 0.5;\n    float f = fract(x);\n    \n    return smoothstep(k - t, k, f) * (1.0 - smoothstep(k, k + t, f));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy - 0.5;\n    float aspect = iResolution.x / iResolution.y;\n    \n    uv.x *= aspect;\n    uv *= ZOOM;\n\n    float t = -1.25*iTime;\n\n    float pos = -0.1;\n\n    /* -- Sin Wave -- */\n    vec2 s = uv + vec2(pos + aspect, 0.0);\n    float cMid = step(1.1, s.x);\n\n    s.y += sin(s.x + 2.04 + t);\n\n    /* -------------- */\n\n    /* --- Circle --- */\n    float cpos = 0.75;\n    vec2 cc = uv + vec2(cpos + aspect, 0.0); // circle center\n\n    vec2 rcc = cc * rot2D(t, 1.0); // rotated Circle Center\n    vec2 dr  = rcc + vec2(-R, 0);  // Dot\n\n    float len = step( abs(rcc.x), R );\n    float side = step( 0.0, rcc.x*R );\n\n    float diam = step( abs(cc.x), R );\n    /* -------------- */\n\n    /* --- Line ----- */\n    float lpos = -1.2;\n    vec2 l = uv + vec2(lpos + aspect, 0.0);\n\n    float p = l.x + (-lpos + cpos) - cos(t);\n\n    //float crop = step(-R*R, -dot(cc, cc)) + step(-1.0, -abs(cc.y)) * step(-1.7, -cc.x) * step(0.0, cc.x);\n    //float siz = step(-1.0, dr.x);\n\n    l.y -= sin(t);\n\n    float len1 = step( 0.0, abs(l.x) );\n    float side1 = step( 0.0, -p*l.x );\n\n    /* -------------- */\n\n    vec3 col = vec3(0);\n\n#if DRAW_POLAR_GRID\n\n    //#define PI_OVER_12 0.261799\n    \n    // Polar Grid\n    vec2 polarGrid = vec2(\n        fract(2.0*length(cc)),\n        fract(atan(cc.y, cc.x) / 6.283185 * 20.0)\n    );\n\n    float cgrid = step(-1.1, -s.x);\n\n    col = mix(\n        col,\n        vec3(0.25),\n        max(plot(polarGrid.x, 0.025),\n        plot(abs(cc.x), 0.01) +\n        plot(abs(cc.y), 0.01) + \n        plot(abs(polarGrid.y), 0.04)) * cgrid\n    );\n\n#endif\n\n#if DRAW_GRID\n\n    vec2 grid = fract(1.25*cc + vec2(t, 0));\n\n    // Grid\n    col = mix(\n        col,\n        vec3(0.25),\n        max(gridp(grid.x, 0.03), gridp(grid.y, 0.03)) * cMid\n    );\n\n#endif\n\n    // Sine wave\n    col = mix(\n        col,\n        1.0 + vec3(1.0, 0.0, 0.5),\n        GLOW(0.0085, abs(s.y), 0.7) * cMid\n    );\n\n    // Circle\n    col = mix(\n        col,\n        vec3(0.0157, 0.4275, 0.8431),\n        GLOW(0.02, abs( CIRCLE(R, cc) ), 0.8)\n    );\n\n    // Radius\n    col = mix(\n        col,\n        vec3(1),\n        GLOW(0.01, abs(rcc.y), 1.4) * len * side\n    );\n\n#if DRAW_TRI\n\n    float cropMidC = step(-sin(t), l.y) * step(0.0, -l.y) + step(sin(t), -l.y) * step(0.0, l.y);\n\n    // Triangle\n    col = mix(\n        col,\n        vec3(1),\n        GLOW(0.01, abs(p), 1.4) * cropMidC\n    );\n\n    // Dot in the Diameter\n    col = mix(\n        col,\n        vec3(1),\n        plot( CIRCLE(0.04, cc - vec2(cos(t), 0)), 0.01 )\n    );\n\n#endif\n\n    /* Dot in the center */\n    col = mix(\n        col,\n        vec3(1),\n        plot( CIRCLE(0.04, cc), 0.01 )\n    );\n    /* --------------------- */\n\n    // Line\n    col = mix(\n        col,\n        vec3(1),\n        GLOW(0.01, abs(l.y), 1.4) * len1 * side1\n    );\n\n    /* Dot in the circunference */\n    col = mix(\n        col,\n        vec3(0.0157, 0.4275, 0.8431),\n        GLOW(0.008, CIRCLE(0.05, dr), 1.0)\n    );\n\n    col = mix(\n        col,\n        vec3(1),\n        plot( CIRCLE(0.05, dr), 0.01 )\n    );\n    /* ------------------------- */\n\n    //Separetor\n    col = mix(\n        col,\n        vec3(1),\n        GLOW(0.01, abs(l.x), 0.9)\n    );\n\n    /* Dot in the separator */\n    float a = CIRCLE(0.05, l);\n\n    col = mix(\n        col,\n        vec3(1.0, 0.0, 0.5),\n        GLOW(0.0085, a, 1.0)\n    );\n\n    col = mix(\n        col,\n        vec3(1),\n        plot( a, 0.01 )\n    );\n    /* -------------------- */\n\n#if DRAW_TRI\n\n    // Diameter\n    col = mix(\n        col,\n        vec3(1),\n        GLOW(0.01, abs(cc.y), 1.4) * diam\n    );\n    \n    // Dots\n    col = mix(\n        col,\n        vec3(1),\n        plot( CIRCLE(0.04, cc + vec2(R, 0)), 0.01 ) +\n        plot( CIRCLE(0.04, cc - vec2(R, 0)), 0.01 )\n    );\n\n#endif\n\n    fragColor = vec4(col, 1);\n}\n","name":"Image","description":"","type":"image"}]}