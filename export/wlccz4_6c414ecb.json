{"ver":"0.1","info":{"id":"wlccz4","date":"1608677689","viewed":60,"name":"learning_process_3","username":"lossushi","description":"Piet Mondrian - - (1939)\nfrom https://thebookofshaders.com/07/","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define OFFSET 0.001\n\nvec3 drawRect(vec3 colorStart, vec3 colorEnd, vec4 exWhy){\n    float b = 0.0;\n    float blockX = smoothstep(b-OFFSET,b,exWhy.x)-smoothstep(b,b+OFFSET,exWhy.y);\n    float blockY = smoothstep(b-OFFSET,b,exWhy.z)-smoothstep(b,b+OFFSET,exWhy.w);\n    return mix(colorStart, colorEnd, blockX * blockY);\n}\n\nvec3 drawLine(vec3 colorIn, vec3 colorOut, float value, float width){\n    float line = smoothstep(width, width + OFFSET, abs(value));\n    return mix(colorIn, colorOut, line);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord.xy / iResolution.xy;\n    // background color\n    vec3 color = vec3(.93);\n    \n    vec2 dim = vec2(13.3, 15.5);\n    // approximate new width of the painting \n    float WoC = iResolution.y / (dim.y / dim.x);\n    float outOfFrame = (WoC / 2.0) / iResolution.x;\n    \n    // wall and canvas (the one to paint on, not the hmtl element)\n    color = drawRect(color, vec3(1.), vec4(st.x-outOfFrame, st.x-1.+outOfFrame, st.y, st.y-1.));\n    // the three colored rectangles\n    color = drawRect(color, vec3(1.,0.,0.), vec4(st.x-outOfFrame, st.x-0.34, st.y-0.7, st.y-1.0));\n    color = drawRect(color, vec3(1.,1.,0.), vec4(st.x-0.74, st.x-1.+outOfFrame, st.y-0.7, st.y-1.0));\n    color = drawRect(color, vec3(0.,0.,1.), vec4(st.x-0.647, st.x-1.+outOfFrame, st.y-0., st.y-0.085));\n    \n    float widthX = 0.007;\n    float widthY = 0.0135;\n    // vertical full lines\n    color = drawLine(vec3(0.), color, st.x - 0.345, widthX);\n    color = drawLine(vec3(0.), color, st.x - 0.732, widthX);\n    color = drawLine(vec3(0.), color, st.x - 0.64, widthX);\n    // vertical broken line\n    float vbl = 1.0 - (1.0 - smoothstep(widthX, widthX + OFFSET, abs(st.x-0.28))) * (smoothstep(0.0, OFFSET, st.y-.686));\n    color = mix(vec3(0.), color, vbl);\n    // horizontal \"full\" lines\n    float start = 0.84;\n    color = drawRect(color, vec3(0.), vec4(st.x-outOfFrame, st.x-1.+outOfFrame, st.y-start, st.y-(start+widthY*2.)));\n    start = 0.674;\n    color = drawRect(color, vec3(0), vec4(st.x-outOfFrame, st.x-1.+outOfFrame, st.y-start, st.y-(start+widthY*2.)));\n    // horizontal broken line\n    start = 0.086;\n    color = drawRect(color, vec3(0.), vec4(st.x-0.345, st.x-1.+outOfFrame, st.y-start, st.y-(start+widthY*2.)));\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}