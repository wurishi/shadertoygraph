{"ver":"0.1","info":{"id":"ssjBRy","date":"1646593104","viewed":93,"name":"Field lines","username":"wxy_equation","description":"using stream function and image method to approximate field lines of a line charge in a rectangular tube.\n\nI love laplacian","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["bl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 laplacian = mat3(\n-1, -1, -1,\n-1,  8, -1, \n-1, -1, -1\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float value = 0.0;\n    float p;\n    \n    for(int i=-1; i<=1; i++) {\n    for(int j=-1; j<=1; j++) {\n        p = texelFetch(iChannel0, ivec2(fragCoord)+ivec2(i, j), 0).x;\n        p *= laplacian[i+1][j+1];\n        \n        value += p;\n    }}\n   \n    fragColor = vec4(value, value, value, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nfloat angle(vec2 r) {\n//calculate angle of the vector\n    float len = length(r);\n    float angle = acos(r.x/len);\n    angle = r.y<0.0 ? -angle : angle;\n    return angle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float q = 1.0;      //charge\n    float lines = 10.0; //number of lines\n    int order = 5;      //approximation order\n    \n    //method of image\n    vec2 r, p;\n    float value = 0.0;\n    for(int i=-order; i<=order; i++) {\n    for(int j=-order; j<=order; j++) {\n\n        p = -2.0*mod(vec2(i, j), vec2(2.0))+1.0;\n        r = 2.0*ceil(vec2(i, j)/2.0)*iResolution.xy;\n        r += iMouse.xy*p;\n        \n        value += p.x*p.y*q*angle(fragCoord-r);\n    }}\n    \n    //produce stripe for the Image pass\n    fragColor = vec4(M_PI*lines*abs(mod(value+iTime/5.0, M_PI/lines)));\n}","name":"Buffer A","description":"","type":"buffer"}]}