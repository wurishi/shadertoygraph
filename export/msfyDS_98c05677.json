{"ver":"0.1","info":{"id":"msfyDS","date":"1687420095","viewed":111,"name":"Rotating grid raymarcher","username":"seven_dc","description":"grid rotate\noriginal from tweet: //https://twitter.com/sxolastikos/status/1670366749580206081?s=20","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["gridrotate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://twitter.com/sxolastikos/status/1670366749580206081?s=20\n\nmat2 Rotate(float a) {\n  float s = sin(a);\n  float c = cos(a);\n  return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 color;\n\n    float i,j,d=.2,e, t = iTime;\n    \n    for(i=0.;i < 64. && d>0.00002; i++){\n        vec3 point = vec3((fragCoord.xy-.5*iResolution.xy)/iResolution.y,1)*e;\n        point.z -= 4.5;\n        //point.x -= 2.5;\n        point.y -= 2.5;\n        \n        fract(t*.2) < .5 ? point.xy *= Rotate(t*.2) : point.xz *= Rotate(t*.2);\n        \n        \n        for(j=0.;j<16.;j++) \n            point = abs(abs(point-.3))-.03, // thicness\n            d = max(min(point.x-.05, point.y), point.z), // distance function\n            d -= dot(point,point)/5000.;\n            e += d;\n    }\n        \n    color += vec4(.5,e*.6,2.,1) * 4./i;\n    \n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}