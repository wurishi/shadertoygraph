{"ver":"0.1","info":{"id":"sldyWN","date":"1659910397","viewed":107,"name":"Advection 02","username":"Rugged","description":"playing around","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = texture(iChannel0, uv);\n    \n    \n    \n    fragColor = col;//vec4(pow(length(col), 2.) / 60.);\n    //vec4(dot(normalize(col.xy), normalize(uv - vec2(0.5))));//vec4(1./length(col));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float hash3(vec2 xy){\n    xy = mod(xy, .19);\n    float h = dot(xy.yyx,vec3(.013, 27.15, 2027.3));\n    h *= h;\n    h *= fract(h);\n    \n    return fract(h);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec2 uvc = uv - vec2(0.5);\n    \n    vec4 col = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    if(iFrame == 0){\n        col = normalize(vec4(-uvc.y, uvc.x, 0., 0.));\n    }\n    else if(distance(uvc, vec2(0.)) < 1.) {\n        \n        vec4 u = texelFetch(iChannel0, ivec2(fragCoord), 0);\n        vec4 uf = texelFetch(iChannel0, ivec2(fragCoord + u.xy), 0);\n        vec4 ub = texelFetch(iChannel0, ivec2(fragCoord - u.xy), 0);\n        \n        vec4 ud = u - ub;\n        \n        u = -ud * iTimeDelta * 30.;\n        \n        col += u;\n        \n        float r = hash3(vec2(iTime, hash3(vec2(sqrt(iTime), iTime))));\n        vec2 spoutLoc = vec2(cos(10.* iTime), sin(10. * iTime));\n        \n        //make droplets around the edges\n        if(abs(dot(vec2(1., 0.), spoutLoc)) > 0.5){\n            spoutLoc = 0.495 * vec2(sign(spoutLoc.x), spoutLoc.y);\n        }\n        else{\n            spoutLoc = 0.495 * vec2(spoutLoc.x, sign(spoutLoc.y));\n\n        }\n        \n        float colAdd = 0.0005;\n        \n        if(iMouse.z > 0.){\n            vec2 muv = iMouse.xy / iResolution.xy;\n            \n            colAdd = 0.0005;\n            \n            muv -= vec2(0.5);\n            \n            spoutLoc = muv;//r * normalize(vec2(muv - uvc));\n            \n            \n            \n        }\n        \n        \n        col += normalize(vec4(-spoutLoc + uvc, 0., 0.)) * (.2 / (distance(uvc, spoutLoc) + .001)) * iTimeDelta;\n        \n        //gravity\n        if(true){\n            //col.y += -1. * iTimeDelta * 1.;\n\n        }\n        \n        //spoutLoc = vec2((2. * r) - 1., 0.5);\n        \n        //add vortex bits\n        col += normalize(vec4(-uvc + (0.5 * vec2(-uvc.y, uvc.x)), 0., 0.)) * iTimeDelta;//normalize(vec4(-spoutLoc + uvc, 0., 0.)) * (.2 / (distance(uvc, spoutLoc) + .001)) * iTimeDelta;\n        \n        col *= .996;\n        \n        if(floor(fragCoord.x) == floor(iResolution.x) - 1.){\n            col.z = 0.;\n        }\n        \n        col.z *= 1. / .996;\n        col.z += colAdd * (20. / (distance(uvc, spoutLoc) + .001)) * iTimeDelta;\n    }\n    \n    \n    \n    fragColor = col;\n}","name":"Buffer B","description":"","type":"buffer"}]}