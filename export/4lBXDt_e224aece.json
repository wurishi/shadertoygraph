{"ver":"0.1","info":{"id":"4lBXDt","date":"1447167870","viewed":14470,"name":"Balloons","username":"candycat","description":"Draw some balloons. Uncomment line 70 to see  singing balloons. thanks @FabriceNeyret2!","likes":114,"published":1,"flags":0,"usePreview":1,"tags":["metaball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define amplitude 0.1\n#define BackgroundColor vec4(0.957, 0.925, 0.773, 1.0)\n#define EdgeColor vec4(0.2, 0.2, 0.2, 1.0)\n#define BlueColor vec4(0.384, 0.667, 0.655, 1.0)\n#define PurpleColor vec4(0.761, 0.706, 0.835, 1.0)\n#define YellowColor vec4(0.961, 0.753, 0.196, 1.0)\n#define GreenColor vec4(0.624, 0.796, 0.361, 1.0)\n#define OrangeColor vec4(0.953, 0.482, 0.318, 1.0)\n#define RedColor vec4(0.886, 0.557, 0.616, 1.0)\n\nfloat noise2d(vec2 p) {\n\tfloat t = texture(iChannel0, p).x;\n\tt += 0.5 * texture(iChannel0, p * 2.0).x;\n\tt += 0.25 * texture(iChannel0, p * 4.0).x;\n\treturn t / 1.75;\n}\n\nfloat line(vec2 p, vec2 p0, vec2 p1, float width) {\n    vec2 dir0 = p1 - p0;\n    vec2 dir1 = p - p0;\n    float h = clamp(dot(dir1, dir0)/dot(dir0, dir0), 0.0, 1.0);\n    float d = (length(dir1 - dir0 * h) - width * 0.5);\n    return d;\n}\n\nvec4 drawline(vec2 p, vec2 p0, vec2 p1, float width) {   \t\t\n    float d = line(p, p0, p1, width);\n    d += noise2d(p * vec2(0.2)) * 0.005;\n    float w = fwidth(d) * 1.0;\n    \n    return vec4(EdgeColor.rgb, 1.-smoothstep(-w, w, d));\n}\n\nfloat metaball(vec2 p, float r) {\n\treturn r / dot(p, p);\n}\n\nvec4 balloon(vec2 pos, vec2 start, vec2 end, float radius, vec4 color) {\n    // Draw line\n    vec2 linePos = pos;\n    linePos.x *= (1.0 + sin(noise2d(pos * 0.005) * pos.y * 8.) * 0.05);\n    vec4 line = drawline(linePos, \n                         start * (1.0 + vec2(cos(iTime * 1.4), sin(iTime * 2.4)) * 0.4 * amplitude), \n                         end, 0.015);\n    \n    vec2 c0 = start * (1.0 + vec2(cos(iTime * 1.4), sin(iTime * 2.4)) * 0.57 * amplitude);\n    vec2 c1 = start * (1.0 + vec2(cos(iTime * 1.4), sin(iTime * 1.9)) * 0.49 * amplitude);\n    vec2 c2 = start * (1.0 + vec2(sin(iTime * 1.9), cos(iTime * 2.4)) * 0.46 * amplitude);\n\t\t\t\n\tfloat r = metaball(pos - c0, radius*1.1) *\n\t\t \t\tmetaball(pos - c1, radius*1.3) *\n\t\t\t\tmetaball(pos - c2, radius*0.9);\n    \n    vec2 boundary = vec2(0.4, 0.5);\n\tvec4 c = vec4(0);\n\t\t\t\n\tvec4 egdeColor = EdgeColor;\n\tvec4 blobColor = color;\n    \n\tr += noise2d(pos * vec2(0.05)) * 0.15;\n    \n    if (r < boundary.x) {\n\t\tc = egdeColor;\n\t\tc.a = 0.0;\n\t} else if (r < boundary.y) {\n\t\tc = egdeColor;\n\t\tc.a = 1.0;\n    } else {\n        c = blobColor;\n        //c = mix(blobColor,texture(iChannel1,.5+(pos-c2)*3.),.5+.5*cos(10.*start.x+iTime));\n        c.a = 1.0;\n    }\n    \n    // Blur the edges\n    float w = 0.05;\n\tif (r > boundary.x - w && r < boundary.x) {\n\t\tc = mix(line, egdeColor, smoothstep(-w, 0.0, r - boundary.x));\n        c.a = mix(0.0, 1.0, smoothstep(-w, 0.0, r - boundary.x));\n\t}\n\tif (r > boundary.y - w && r < boundary.y + w) {\n\t\tc.rgb = mix(egdeColor.rgb, blobColor.rgb, smoothstep(-w, w, r - boundary.y));\n\t}\n    \n    c.rgb += noise2d(pos * 0.1) * 0.1;\n    \n    c.rgb = mix(line.rgb, c.rgb, c.a);\n    c.a = max(line.a, c.a);\n    \n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.yy;\n    vec2 p = (2.0*fragCoord.xy-iResolution.xy)/min(iResolution.y,iResolution.x); \n    \n    if (iMouse.z > 0.0) {\n        uv.y -= (iMouse.y/iResolution.y - 0.5)*0.3;\n    }\n\t\n    float width = iResolution.x/iResolution.y; \n\n    fragColor = BackgroundColor;\n    \n    float end = -0.1;\n    \n    // First level\n    vec4 c = balloon(uv, vec2(width * 0.5, 0.9), vec2(width*0.5, end), 0.013, BlueColor);\n    fragColor.rgb = mix(fragColor.rgb, c.rgb, c.a);\n    \n    // Second level\n    c = balloon(uv, vec2(width*0.4, 0.75), vec2(width*0.5, end), 0.015, PurpleColor);\n    fragColor.rgb = mix(fragColor.rgb, c.rgb, c.a);\n    \n    c = balloon(uv, vec2(width*0.6, 0.7), vec2(width*0.5, end), 0.015, YellowColor);\n    fragColor.rgb = mix(fragColor.rgb, c.rgb, c.a);\n    \n    // Third level\n    c = balloon(uv, vec2(width*0.25, 0.67), vec2(width*0.5, end), 0.013, GreenColor);\n    fragColor.rgb = mix(fragColor.rgb, c.rgb, c.a);\n    \n    c = balloon(uv, vec2(width*0.7, 0.63), vec2(width*0.5, end), 0.013, OrangeColor);\n    fragColor.rgb = mix(fragColor.rgb, c.rgb, c.a);\n    \n    // Fourth level\n    c = balloon(uv, vec2(width*0.38, 0.35), vec2(width*0.5, end), 0.011, RedColor);\n    fragColor.rgb = mix(fragColor.rgb, c.rgb, c.a);\n    \n    c = balloon(uv, vec2(width * 0.2, 0.45), vec2(width*0.5, end), 0.014, BlueColor);\n    fragColor.rgb = mix(fragColor.rgb, c.rgb, c.a);\n    \n    c = balloon(uv, vec2(width*0.73, 0.32), vec2(width*0.5, end), 0.012, YellowColor);\n    fragColor.rgb = mix(fragColor.rgb, c.rgb, c.a);\n    \n    c = balloon(uv, vec2(width*0.55, 0.4), vec2(width*0.5, end), 0.013, GreenColor);\n    fragColor.rgb = mix(fragColor.rgb, c.rgb, c.a);\n    \n    fragColor.rgb = fragColor.rgb*(1.0-0.15*length(p));\n    fragColor.rgb = pow(fragColor.rgb, vec3(1.0/1.8));\n}\n\n\n","name":"","description":"","type":"image"}]}