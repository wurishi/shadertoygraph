{"ver":"0.1","info":{"id":"NttSRr","date":"1643685307","viewed":192,"name":"Image dithering effects","username":"lllcz","description":"Image dithering effects","likes":5,"published":3,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float scale = 6.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //划分网格\n    vec2 id = floor(uv * scale);\n    \n    vec2 offs = vec2(sin(uv.x * scale + sin(iTime * 3.) * 20. + id.x * 0.2),\n                     sin(uv.y * scale + sin(iTime * 3.) * 20. + id.y * 0.2));\n                     \n    offs *= 0.01;\n    \n    uv.xy += offs;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}