{"ver":"0.1","info":{"id":"Ws2GRt","date":"1549719811","viewed":109,"name":"Cartoon sea and sun","username":"sm2392","description":" Use the mouse to alter the hue.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["2d","sea","sun","cartoon","rgb","hsv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Wave(vec2 uv, float amplitude, float frequency,float h)\n{\n    return smoothstep (0.0,0.016,h+sin(frequency*uv.x)*amplitude - uv.y);\n   \n}\n\nfloat Circle(float radius, vec2 pos, vec2 uv)\n{\n    return max(0.001,pow(1.0-length((pos-uv)-radius),16.0)*6.0);\n    \n}\n\nfloat Saw(float x)\n{\n    return x- floor(abs(x));\n}\n\n// rgb2hsv() and hsv2rgb() are borrowed from:\n// https://gamedev.stackexchange.com/questions/59797/glsl-shader-change-hue-saturation-brightness/59879\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n     vec3 mx = vec3(1.0,0.43,0.93);\n    float x = uv.x;\n    float y = uv.y;\n    float irt = -1.85-Saw(iTime*0.05)*3.0;\n    mat2 m= mat2(cos(irt),sin(irt),sin(irt),-cos(irt));\n    vec2 sunPos = vec2(1.0,0.2) + vec2(0.0,0.9)*m;\n    float time = iTime*0.56;\n    uv.x -=time*0.12;\n    float w1 = Wave(uv, 0.071,15.0,0.4+sin(time*0.5)*0.05 );\n    uv.x +time*0.1;\n    float w2 = Wave(uv, 0.07,20.0,0.35+sin(time)*0.05 );\n    uv.x -=time*0.1;\n    float w3 = Wave(uv, 0.04+ sin(time)*0.01,30.0,0.25+sin(time*0.3)*0.02 );\n     uv.x +=time*0.38;\n    float w4 = Wave(uv, 0.04+ sin(-time*0.67)*0.01,30.0,0.0985+sin(time*0.3)*0.005 );\n    float c = Circle(0.13,sunPos,vec2(x*iResolution.x/iResolution.y,y));\n    \n    //vec3 col = mix(vec3(0.1,0.4,0.9),vec3(0.73,0.95,0.98),pow(x,0.5));\n    float sunPeriod = pow(length(vec2(x*iResolution.x/iResolution.y,y)-sunPos+vec2(0.1,0.1)),0.86)*0.53;\n    vec3 col = mix(mx,vec3(0.1,0.41,0.52),sunPeriod );\n    col= col* float(1.0-c)+vec3(0.999,0.3+clamp(0.0,0.7,sunPos.y),0.01)*c;\n     col += texture(iChannel0,vec2(x,y)).xyz*0.2;\n    col= col* float(1.0-w1)+vec3(0.51,0.31,0.99)*w1;\n    col= col* float(1.0-w2)+vec3(0.35,0.47,0.99)*0.7*w2;\n    col= col* float(1.0-w3)+vec3(0.31,0.41,0.9)*w3;\n    col= col* float(1.0-w4)+vec3(0.1,0.58,0.9)*0.7*w4;\n    col*=  max(0.2,sunPos.y);\n    col*=vec3(1.40,1.20,1.0);\n    col = rgb2hsv(col);\n    col.x -= 0.01+iMouse.x/iResolution.x; \n    col.y += 0.542; \n    //col.z *=0.9;\n    col = hsv2rgb(col);\n    \n    col = pow(col,vec3(1.3));\n    col *= 1.4;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//This part was borrowed from:  https://www.shadertoy.com/view/WdjGRc\n\n\n//Parameters\n#define SPEED 0.07\n\n\n\nvec3 Effect(float speed, vec2 uv, float time)\n{\n\n    float t = time*speed;\n    float rt =0.01*sin(t*0.45);\n   \n    mat2 m1 = mat2(cos(rt),-sin(rt),-sin(rt),cos(rt));\n    vec2 uva=uv*m1;\n    float irt = 0.005* cos(t*0.05);\n    mat2 m2 = mat2(sin(irt),cos(irt),-cos(irt),sin(irt));\n\tfor(int i=1;i<20;i+=1)\n\t{\t\n\t\tfloat it = float(i);\n        uva*=(m2);\n        uva.y+=-1.0+(0.6/it) * cos(t + it*uva.x + 0.5*it)\n            *float(mod(it,2.0)==0.0);\n\t\tuva.x+=1.0+(0.5/it) * cos(t + it*uva.y + 0.5*(it+15.0));\n      \n        \n\t}\n    //Intensity range from 0 to n;\n    float n = 0.5;\n    float r = n + n * sin(4.0*uva.x+t);\n    float gb = n + n * sin(3.0*uva.y);\n\treturn vec3(r,gb*0.8*r,gb*r);\n}\t\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    mouse = 2.0 * mouse - 1.0;\n    mouse.x *= iResolution.x/iResolution.y;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.0 * uv - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n      \n    uv *= (0.9 + 0.1*sin(iTime*0.01));\n    uv.y-=iTime*0.13;\n  \n\tvec3 col = Effect(SPEED,uv,iTime);\n    col+= Effect(SPEED,uv*3.0,2.0*iTime+10.0)*0.3;\n\n\tfragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}