{"ver":"0.1","info":{"id":"wdSXRz","date":"1552664511","viewed":6417,"name":"Perfect Sphere Mapping","username":"paniq","description":"Mapping a square texture to a sphere in a way that produces no poles and forms a ring in UV space. Hairy ball theorem: BUSTED!","likes":40,"published":3,"flags":0,"usePreview":0,"tags":["sphere","mapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 rotate13(\n    \n    vec2  lrf, \n    float guvf) {\n\tfloat vf  = cos(guvf); \n    float n   = sin(guvf);\n    mat2  wbxr = mat2(vf,n,n,-vf);\n    \n    return lrf * wbxr;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= 2.2;\n    vec2 m = (iMouse.xy / iResolution.xy) - 0.5;\n    bool clicked = iMouse.z > 0.5;\n    if (length(uv) > 1.0) {\n    \tfragColor = vec4(0.0,0.0,0.0,1.0);\n        return;\n    }\n    uv = mix(uv,normalize(uv)*(2.0*asin(length(uv)) / 3.1415926),0.5);\n    vec3 n = vec3(uv, sqrt(1.0 - uv.x*uv.x - uv.y*uv.y));\n    uv = normalize(uv)*(2.0*asin(length(uv)) / 3.1415926);\n    \n    float phase = iTime * 0.33;\n    float phase2 = -m.y * 4.0;\n    \n    vec3 lightvec = vec3(1.0,1.0,0.0);\n    if (clicked) {\n\t    lightvec.yz = rotate13(lightvec.yz, phase2 * 0.5 * 3.1415926);\n\t\tuv.y += phase2;\n    } else {\n    \tlightvec.xz = rotate13(lightvec.xz, phase * 0.5 * 3.1415926);\n    \tuv.x += phase;\n    }\n\n    float lit = mix(1.0, max(0.0, dot(n, normalize(lightvec))), 0.98);\n    \n    lit += 0.3*pow(1.0 - max(0.0, n.z), 2.0);\n    \n    lit = sqrt(lit);\n   \n    \n    uv *= 2.0;\n    vec3 color = texture(iChannel0,uv * 0.5 + 0.5).rrr;\n    vec3 fields = texture(iChannel1,uv).rrr * 1.2;\n    if (mod(uv.x, 8.0) > 4.0) {\n        fields.r = 0.0;\n    }\n    if (mod(uv.y, 8.0) > 4.0) {\n        fields.g = 0.0;\n    }\n    color = lit * mix(color, fields, 0.5);\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}