{"ver":"0.1","info":{"id":"sdfyzf","date":"1642439381","viewed":270,"name":"Tetrahedron 4","username":"FabriceNeyret2","description":"mouse controls camera","likes":12,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","tetrahedra","short","pseudoapollonians"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/fsXczf\n\n#define rot(a)       mat2(cos(a+vec4(0,11,33,0)))             // rotation                  \n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9.; \n    vec3  R = iResolution,\n          D = normalize(vec3(U+U, -3.5*R.y) - R),             // ray direction\n          p = 7./R, q,A,                                      // marching point along ray \n          M = iMouse.z > 0. ? iMouse.xyz/R -.5: vec3(20,8,0)/1e2*cos(iTime+vec3(0,11,0)); // auto thumbnail\n     \n    for (O=vec4(1); O.x > 0. && t > .01; O-=.01)\n        q = p,\n        q.yz *= rot(.5-6.*M.y),                               // rotations\n        q.xz *= rot(2.-6.*M.x),\n        A = sign(q),                                          // symmetry: to closest axis\n#define D(x,y,z) dot(q,vec3(x,y,z))\n        t = min(t, ( max(max(D(1,1,-1),D(1,-1,1)),max(D(-1,1,1),D(-1,-1,-1))) - 1. ) / 1.73 ), // variant of spalmer's tet\n        t = max(t, 1.  - length(q) ),                         // hollow sphere\n        t = max(t, .34 - length(q-.67*A) ),                   // hollow spheres #2\n        t = max(t, .12 - length(q-.89*A) ),                   // hollow spheres #3\n     \n       p += t*D;                                              // step forward = dist to obj          \n    O *= O*O; O*=O*O;                                         // contrast\n}","name":"Image","description":"","type":"image"}]}