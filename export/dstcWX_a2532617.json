{"ver":"0.1","info":{"id":"dstcWX","date":"1695666291","viewed":104,"name":"flubbery","username":"pb","description":"more flubber","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","volumetric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define tt iTime \nmat2 rot(float an) { float cc=cos(an),ss=sin(an); return mat2(cc,ss,-ss,cc); }\nvec3 F(vec3 p) {\n  vec4 q = vec4(p,1), jc = q; q.xz *= rot(tt/5.);\n  for (float i=0.;i<11.;i++){   \n#define C(x) x = x>1. ? x=2.-x : (x<-1. ? -2.-x : x)\n#define D(x) x /= dot(x,x)  \n    C(q.x); C(q.y); C(q.z); C(q.w);  //4d Mandelbox (but not really)\n    D(q.xyz); D(q.yzw); D(q.zwx);\n    q.xyz*=.8; q.yzw*=.9; q.zwx*=1.3;\n    q.xy *= rot(-p.z*p.z); \n    q += jc;   \n  } return q.xyz;    \n}\n#define SM(x) max( -x*.2, min(0.,x*sin(tt/2.)))\nvec3 march( vec3 ro, vec3 rd) {\n  vec3 p = ro, color = vec3(0);\n  for (float i=0.; i<3.; i++) {\n    vec3 cx = F(ro+i*.6*rd*(1.- SM(4.) ));\n    cx = 1. - exp(-cx*cx);\n    color += cx*cx * exp(-i*i/1.8*(1.+SM(2.)));\n  } return color; \n}\nvoid mainImage0( out vec4 O, in vec2 U ) {\n  U = (2.*U - iResolution.xy) / iResolution.y * 2.; \n  vec3 rd = normalize( vec3(U, 2) ), ro = vec3(0,0, -4.-SM(.5) );\n  rd.xy  *= rot(tt/5.);     \n  O = vec4( pow(march( ro, rd ),vec3(.45)), 1);\n}\n\n//aa by FabriceNeyret2 - makes a difference\nvoid mainImage(out vec4 O, vec2 U) {\n    mainImage0(O,U);\n    if ( fwidth(length(O)) > .01 ) {  // difference threshold between neighbor pixels\n        vec4 o;\n        for (int k=0; k < 9; k+= k==3?2:1 )\n          { mainImage0(o,U+vec2(k%3-1,k/3-1)/3.); O += o; }\n        O /= 9.;\n      //O.r++;                        // uncomment to see where the oversampling occurs\n    }\n}\n","name":"Image","description":"","type":"image"}]}