{"ver":"0.1","info":{"id":"7sffRf","date":"1645126600","viewed":105,"name":"circles and functions","username":"singoltone","description":"circles and functions","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circlefunctio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    float a = tan(iTime*.2)+sin(iTime*.2);\n    float s = sin(a);\n    float c = cos(a);\n    \n    uv *= mat2(c, -s, s, c);\n    uv *= 10.;\n    \n    float t = iTime;\n    vec2 i_uv = floor(uv);\n    vec2 f_uv = fract(uv)-.5;\n    \n    float d = 0.;\n    float radius = 0.4;\n    float blur = 0.01;\n    \n    for(float y=-1.; y<=1.; y++) {\n        for(float x=-1.; x<=1.; x++) {\n            vec2 offset = vec2(x,y);\n            float l = length(f_uv-offset);\n            float dist = length(uv+offset);\n\n            float a = mix(-1., 1., sin(t*.2)*.5+.5);\n            float b = mix(-1., 1., cos(t*.2)*.5+.5);\n            radius = mix(a,b, tan(t+dist)*.15+.5);\n            \n            d += smoothstep(radius+blur, radius, l);\n        }\n    }\n    \n    // Time varying pixel color\n    vec3 col = vec3(0.);\n\n    col += mod(d,2.8);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}