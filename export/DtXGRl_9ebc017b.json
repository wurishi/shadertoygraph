{"ver":"0.1","info":{"id":"DtXGRl","date":"1672433549","viewed":170,"name":"oil crystals","username":"nickbrick","description":"Crossing a noise texture with itself over a varying amount and distribution of nearby points to showcase the various behaviors. This system is very prone to blacking out so a few extra steps were needed to improve stability.","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define TAU 6.283185307179586476925286766559\n#define STEPS (sin(iTime * 0.5) * 4.0 + 5.0)\n#define R 0.001\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    if (iFrame < 1){ fragColor = texture(iChannel0, uv); return; }\n    \n    vec3 sum = vec3(1.3);\n    for (float a = 0.0; a < TAU; a += TAU / STEPS)\n        sum += cross(sum.rgb, texture(iChannel1, uv + vec2(R * sin(a), R * cos(a))).rgb);\n    sum = cross(sum, vec3(0.6));\n    sum = max(sum, vec3(0.0));\n    fragColor = vec4(sum / STEPS, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}