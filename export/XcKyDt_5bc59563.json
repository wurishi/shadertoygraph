{"ver":"0.1","info":{"id":"XcKyDt","date":"1732558861","viewed":29,"name":"A Kind of Collatz Fractal","username":"kallaballa","description":"A simple visualization of the collatz which turned out to be a fractal.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","collatzconjecture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Â© shadertoys@viel-zu.org \n//Based upon https://www.shadertoy.com/view/XdVyDh\n// License: AGPL\n\n\n#define MAX_COUNT 200\nconst float PI = radians(180.0);\n\nint CollatzInt (int x)\n{\n    for (int k = 0; k < MAX_COUNT; k++) {\n        if ((x & 1) == 0) \n            x /= 2;\n        else\n            x = 3 * x + 1;\n\n        if (x <= 2)\n            return k;\n    }\n    return MAX_COUNT;\n}\n\nvec3 HSB2RGB(float h, float s, float b)\n{\n    return b*(1.0-s)+(b-b*(1.0-s))*clamp(abs(abs(6.0*(h-vec3(0,1,2)/3.0))-3.0)-1.0,0.0,1.0); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pi = radians(180.0);\n    vec2 uv = (((fragCoord.xy / iResolution.xy) * 2. - 2.0) * (iTime)  + iTime);\n    vec2 pl = uv;\n    pl.x = (sin(uv.x) * uv.x);\n    pl.y = (cos(uv.y) * uv.y);\n    float d = iTime * length(pl);\n    float cv = float(CollatzInt(int(d))) / 200.;\n\n    vec3 col = HSB2RGB(cv, 1.0, 1.0);\n\n    // gamma        \n    col = sqrt( col );\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}