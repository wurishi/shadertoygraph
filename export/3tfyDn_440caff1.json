{"ver":"0.1","info":{"id":"3tfyDn","date":"1591804820","viewed":334,"name":"Shadertoy tutorial demofox","username":"demofox","description":"This is the final state of the tutorial in this video:\nhttps://www.youtube.com/watch?v=1DLxaQD0YXM","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspectRatio = iResolution.y / iResolution.x;\n    \n    // calculate pixel as a percent\n\tvec2 percent = fragCoord/iResolution.xy;\n    percent -= vec2(0.5f, 0.5f);\n    percent.x /= aspectRatio;\n\n    // get the circle instance grid cell\n    vec2 instanceCell = floor(percent / 0.3f);\n    \n    // repeat the circle\n    percent = mod(percent, 0.3f);\n    \n    // calculate radius\n    float radiusPercent = (((sin(instanceCell.x * 100.0f) + cos(instanceCell.y * 537.0f)) + 2.0f) / 4.0f);\n    float radius = mix(0.05, 0.12, radiusPercent);\n    \n    // calculate color\n    vec3 color = vec3(\n        mod(abs(instanceCell.x) * 1043.0f, 10.0) / 10.0f,\n        mod(abs(instanceCell.y) * 1043.0f, 10.0) / 10.0f,\n        mod(abs(instanceCell.x*instanceCell.y + 3.0f) * 1043.0f, 10.0) / 10.0f\n    );\n    \n    // calculate distance of pixel from circle\n    float dist = length(percent - vec2(0.15, 0.15)) - radius;\n\n    // calculate shade of circle based on distance & smooth it out for anti aliasing.\n    float shade = smoothstep(0.0f, 0.005f, dist);\n    \n    // make the actual color\n    color = mix(color, vec3(1.0f, 1.0f, 1.0f), shade);\n    \n    // output final color\n\tfragColor = vec4(color, 1.0f);    \n}","name":"Image","description":"","type":"image"}]}