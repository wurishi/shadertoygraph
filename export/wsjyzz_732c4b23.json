{"ver":"0.1","info":{"id":"wsjyzz","date":"1586019262","viewed":221,"name":"Watermelon Steven","username":"Flopine","description":"I've been obsessed with Steven Universe those past few months, I wanted to make a tribute to this AWESOME show. Coded mostly during a Twitch strem, you can rewatch all of them here: https://www.twitch.tv/flopine\nComment line 16 to use the mouse","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","modeling","watermelon","npr","stevenuniverse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, Coyhot, Alkama and YX for teaching me\n// Thanks LJ for giving me the love of shadercoding :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n#define ITER 64.\n#define PI 3.141592\n#define TAU (2.*PI)\n#define time iTime\n#define mousepos (-1.+2.*(iMouse.xy / iResolution.xy))\n\n// Comment this line to toggle mouse rotation\n// you'll be able to see steven from every angle! \n#define ANIMATED\n\nmat2 rot (float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nvoid mo (inout vec2 p ,vec2 d)\n{\n    p = abs(p)-d;\n    if (p.y>p.x) p = p.yx;\n}\n\nfloat cyl (vec3 p, float r, float h)\n{return max(length(p.xy)-r,abs(p.z)-h);}\n\n/////////////////////////////////////////////////\n// iq's website : https://iquilezles.org/articles/distfunctions\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat capsule( vec3 p, vec3 a, vec3 b, float r )\n{\n    vec3 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - r;\n}\n\nfloat ellipse( vec3 p, vec3 r )\n{\n    float k0 = length(p/r);\n    float k1 = length(p/(r*r));\n    return k0*(k0-1.0)/k1;\n}\n////////////////////////////////////////////////////\n\nfloat head (vec3 p)\n{\n    p.y -= 0.85;\n    float sphe = ellipse(p+vec3(0.,0.2,.2),vec3(0.4,0.25,0.4));\n    float rx = (p.y > 0.)? 0.45 : 0.45 -sin(p.y)*0.4;  \n    return smin(ellipse(p , vec3(rx,0.5,0.5)),sphe, 0.2);\n}\n\nfloat hair (vec3 p)\n{\n    p.y -= 0.9;\n    vec3 pp = p;\n    p.yz *= rot(TAU/6.);\n    mo(p.xz, vec2(0.18));\n    p.x -= 0.22;\n    float s1 = length(p)-0.2;\n\n    p = pp;\n    p.z -= 0.2;\n    p.yz *= rot(TAU/5.);\n    mo(p.xz, vec2(0.17,0.25));\n    float s2 = length(p)-0.28;\n\n    p = pp;\n    p.z -= 0.35;\n    p.x = abs(p.x)-0.1;\n    float s3 = length(p)-0.25;\n    return min(min(s2,s3),s1);\n}\n\nfloat eyes (vec3 p)\n{\n    p.y -= 0.9;\n    p.z += 0.48;\n    p.x = abs(p.x)-0.12;\n    return ellipse(p,vec3(0.05,0.08,0.05));\n}\n\nfloat belly (vec3 p)\n{\n    return ellipse(p-vec3(0.,0.,0.03), vec3(0.6,0.67,0.55));\n}\n\nfloat legs (vec3 p)\n{\n    float feet_position = 0.9;\n    float r = (p.y>-feet_position) ? 0.2 : 0.2-sin(p.y+feet_position)*0.3;\n    p.y += 0.6;\n    p.x = abs(p.x)-.28;\n\n    return cyl(p.xzy, r, 0.4);\n}\n\nfloat arms (vec3 p)\n{\n    p.x = abs(p.x) - 0.24;\n    float thumb = capsule(p,vec3(0.37,-.0,-0.25),vec3(0.37,-0.13,-0.38), 0.05);\n    p.x += sin(p.y*3.+5.)*0.2;\n    return smin(thumb,capsule(p, vec3(0.18,.3,0.05), vec3(.25,-0.12,-0.2), 0.17),0.05);\n}\n\nfloat ey, bo;\nvec3 new_p;\nfloat SDF (vec3 p)\n{\n    p.y += 0.15;\n    #ifdef ANIMATED\n    \tp.xz *= rot(time);\n    #else\n    \tp.xz *= rot(PI*mousepos.x);\n    \tp.yz *= rot(PI*mousepos.y);\n    #endif\n    new_p = p;\n    ey = eyes(p);\n    bo = min(smin(belly(p),legs(p),0.05),smin(smin(head(p),hair(p),0.08),arms(p),0.15));\n    return min(ey,bo);\n}\n\nvec3 steven_color (vec2 uv)\n{\n    uv.x = abs(uv.x)-PI/5.;\n    vec2 guv = fract(uv)-0.5;\n    vec2 id = floor(uv)-0.5;\n    float mask = step(abs(guv.x),0.25+sin((uv.y+id.x)*15.)*0.05);\n    return mix (vec3(0.8,0.9,0.8),vec3(0.2,0.8,0.5), mask);\n}\n\n///////////////////////////////////////////////////\n// PIXEL SPIRIT DECK CODE \n// https://patriciogonzalezvivo.github.io/PixelSpiritDeck/\nfloat starSDF2(vec2 uv, int V, float s) \n{\n    vec2 st = uv;\n    float a = atan(st.y, st.x) / TAU;\n    float seg = a * float(V);\n    a = ((floor(seg) + 0.5)/float(V) + mix(s, -s, step(.5, fract(seg)))) * TAU;\n    return abs(dot(vec2(cos(a), sin(a)), st));\n}\nfloat fill(float x, float size) \n{\n    return 1. - smoothstep(size,size*1.05, x);\n}\n///////////////////////////////////////////////////\n\nvec3 background (vec2 uv)\n{\n    uv.y -= 0.07;\n    uv *= rot(-PI/10.);\n\n    float a = atan(uv.y,uv.x);\n    a = mod(a,TAU/5.)-(TAU/5.)*0.5;\n    uv = vec2(cos(a),sin(a)) * length(uv);\n    uv.x += 0.05;\n    float mask = fill(starSDF2(uv, 5, 0.1),0.13);\n    return mix(vec3(0.9,0.25,0.45),vec3(0.9,0.8,0.),mask);\n}\n\nvec3 getnorm (vec3 p)\n{\n    vec2 eps = vec2(0.001,0.);\n    return normalize(SDF(p)-vec3(SDF(p-eps.xyy),SDF(p-eps.yxy),SDF(p-eps.yyx)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n    uv -= 0.5;\n    uv /= vec2(iResolution.y / iResolution.x, 1);\n\n    vec3 ro = vec3(0.,0.2,-3.3),\n        rd = normalize(vec3(uv,1.)),\n        p = ro,\n        col = background(uv);\n\n    float d,shad = 0.;\n    bool hit = false;\n\n    for (float i=0.; i<ITER; i++)\n    {\n        d = SDF(p);\n        if (d<0.001)\n        {\n            hit = true;\n            shad = i/ITER;\n            break;\n        }\n        p += d*rd*0.85;\n    }\n\n    if (hit)\n    {\n        if (d == ey)\n        {\n            col = vec3(0.);\n        }\n        else if (d == bo)\n        {\n\n            col = steven_color (vec2(atan(new_p.z,new_p.x), new_p.y));     \n        }\n\n        vec3 norm = abs(getnorm(p));\n        col  *= vec3(smoothstep(0.4,0.45,norm.z));\n    }\n\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}