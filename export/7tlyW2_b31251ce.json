{"ver":"0.1","info":{"id":"7tlyW2","date":"1648926903","viewed":119,"name":"Simple vector field visualizer","username":"akoylasar","description":"A simple vector field visualizer.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["vectorfield","calculus","multivariable","vectorfieldvisualization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2022-2022 Fouad Valadbeigi (akoylasar@gmail.com).\n\n#define RES 16.\n\n// Modify this.\nvec2 field(vec2 p) {\n    return vec2(mix(-p.y, p.x, sin(iTime)), mix(p.x, -p.y, cos(iTime)));\n}\n\n\nvec3 drawArrow(vec2 p, vec2 c, vec2 n) {\n    float R0 = 1. / RES;\n\n    // base (red point)\n    float d0 = distance(p, c);\n    vec4 base = mix(vec4(1., 0., 0., 1.), vec4(0.), smoothstep(.12 * R0, .219 * R0, d0));\n    \n    // body\n    vec3 q = vec3(p - c, 0.); vec3 m = vec3(n, 0.);\n    float d1 = length(cross(q, m));\n    float cosTheta = dot(normalize(q), m);\n    \n    float angleCutoff = step(0., cosTheta);\n    float radCutoff = 1. - smoothstep(.8 * R0, .9 * R0, length(q));\n    vec3 body = mix(vec3(.5), vec3(0.), smoothstep(.1 * R0, .2 * R0, d1)) * angleCutoff * radCutoff;\n\n    return mix(base.rgb, body, 1. - base.a);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float ar = iResolution.y / iResolution.x; \n    vec2 g = fragCoord / iResolution.xy * vec2(1., ar);\n    mat3 m = mat3(2.,  0.,   0.,\n                  0.,  2.,   0.,\n                  -1., -ar,  1.);\n                  \n    vec3 p = m * vec3(g, 1.);\n    vec3 c = m * vec3(floor(g * RES) / RES + .5 / RES, 1.);\n    vec2 n = normalize(field(c.xy));\n    \n    vec3 col = drawArrow(p.xy, c.xy, n);\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}