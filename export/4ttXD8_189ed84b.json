{"ver":"0.1","info":{"id":"4ttXD8","date":"1479316347","viewed":174,"name":"Water effect - jr97","username":"jorovipe97","description":"Aprendiendo a hacer un efecto de agua","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["wave","efectoagua","distorcion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    //uv.y += cos(uv.x) * cos(iTime);\n    //uv.y += uv.x;\n    float xVel = 1.;\n    float xVelMouse = iMouse.y / iResolution.y;\n    // La maxima amplitud de la onda.\n   \tfloat maxAmplitude = 1./25.; // -> 0.04\n    \n    // Onda amplitud moviendose\n    /*\n    uv.y += (cos(uv.x*25.)*maxAmplitude) * cos(iTime*xVel);\n    uv.x += (sin(uv.y*25.)*maxAmplitude) * sin(iTime*xVel);\n    */\n    \n    vec4 mask =  texture(iChannel2, uv.xy);\n    if (mask.r == 1.0)\n    {\n        float X = uv.y*25. + iTime;\n        float Y = uv.x*25. + iTime;        \n        uv.x += cos(X-Y)*maxAmplitude * cos(X);\n        uv.y += sin(X+Y)*maxAmplitude * cos(Y);\n    }\n    \n    vec4 color = texture(iChannel1, uv.xy);\n\tfragColor = color;\n    //fragColor = mask;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = gl_FragCoord.xy / iResolution.xy;\n    \n    \n    vec4 color = vec4(0.0,0.0,0.,1.0);\n    if (uv.y < 0.5)\n    {\n    \tcolor.r = 1.;\n    }\n    \n    fragColor = color;\n}","name":"Buf A","description":"","type":"buffer"}]}