{"ver":"0.1","info":{"id":"3ttGDr","date":"1576051881","viewed":155,"name":"Procedural Five-Point Star","username":"bluebean","description":"五角星","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","fivepointstar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 FivePointStar(vec2 p, vec2 center, float rmin, float rmax, vec3 starColor)\n{\n    float npoints = 5.0;\n    float starAngle = 2.0*3.1415926/npoints;//72度\n    vec3 p0 = rmax*vec3(cos(starAngle/2.0),sin(starAngle/2.0),0.0);\n    vec3 p1 = rmin*vec3(cos(0.0),sin(0.0),0.0);\n    vec3 d = p1-p0;\n    p -= center;\n    float r = sqrt(p.x*p.x+p.y*p.y);\n    float angle = atan(p.y,p.x)+3.1415926-0.28;\n    //根据对称性，每个着色点是否在五角星内可归约为在在某个角(72度)的范围，像素是否其内部\n    //a成为着色点在角中的特征值\n    float a = mod(angle,starAngle)/starAngle;\n    if(a>=0.5)//每个角根据中心到角点的连线对称，因此计算一半就够了\n        a = 1.0-a;\n    vec3 d1 = r*vec3(cos(a*starAngle),sin(a*starAngle),0) - p0;\n    //因此，对于在这个范围内的点，点在五角星内，当且仅当d1在d的右侧\n    float in_out = smoothstep(0.0,0.01,cross(d,d1).z);\n    vec3 col = mix(starColor, vec3(0.8,0.1,0.1),in_out);\n    return col;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    p.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = FivePointStar(p,vec2(0.0,0.0),0.25,0.7,vec3(1.0,0.9,0.0));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}