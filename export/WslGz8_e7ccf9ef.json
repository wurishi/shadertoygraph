{"ver":"0.1","info":{"id":"WslGz8","date":"1544950184","viewed":93,"name":"Frozen Julia Set","username":"Tony_The_Magnificent","description":"If you have lags, you can switch member prcsn from 4096 to 512, and color computation respectively (code, which have w=15 to code, that have w=7, this important, because they have different precomputed constants for full color pallette).","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","math","pretty"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int prcsn = 4096;\t\t// Just comment this var, and uncomment var below (don't forget switch colors)\n    //const int prcsn = 512;\n    const float scale = 3.0;\t// This variable needed for scaling fractal, \n    \t\t\t\t\t\t\t// the smaller it, the bigger set(but it's don't zoom, just stretch)\n    vec2 c = vec2(0.7885*cos(iTime/2.0), 0.7885*sin(iTime/2.0));\n    float R = (1.0 + sqrt(1.0 + 4.0 * length(c)))/2.0;\n    vec2 z = vec2((fragCoord - 0.5*iResolution.xy)/iResolution.y * scale);\n    int i = 0;\n    while(i < prcsn)\n    {\n        if(dot(z,z) > R*R)\n        \tbreak;\n        z = mat2(z, -z.y, z.x)*z + c;\n        i++;\n    }\n    vec3 C = vec3((ivec3(i)>>ivec3(0,4,8))&15)/15.0;\t// Comment this and uncomment string below respectively\n    //vec3 C = vec3((ivec3(i)>>ivec3(0,3,6))&7)/7.0;\n    fragColor = vec4(C.r, C.r+C.g, C.r+C.g+C.b, 1.0);\n}","name":"Image","description":"","type":"image"}]}