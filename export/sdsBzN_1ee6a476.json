{"ver":"0.1","info":{"id":"sdsBzN","date":"1644589375","viewed":163,"name":"The Lost Vikings (4bit)","username":"zproxy","description":"pixelart","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\nconst float zoom = 4.0;\n\n\nvoid vikings( inout vec4 fragColor, in vec2 fragCoord, in int xoffset )\n{\n// { cw = 256, Width = 259, Height = 32 }\nint cw = 256;\n// { cw = 256, Width = 256, Height = 32 }\nuint xy[] = uint[](\n 0x00000000u,  0x00000010u,  0x00000010u,  0x00000000u,  0x00000000u,  0x00000001u,  0x11100000u,  0x00000000u,  0x00000000u,  0x00000010u,  0x00001000u,  0x00000000u,  0x00000000u,  0x00001000u,  0x00001000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x10000010u,  0x00000000u,  0x00000000u,  0x00000000u,  0x11110000u,  0x00000000u,  0x00000000u,  0x00000001u,  0x00000001u,  0x00000000u,  0x00000000u,  0x00000100u,  0x00000010u,  0x00000000u,\n 0x00000000u,  0x00000020u,  0x00000020u,  0x00000000u,  0x00000000u,  0x00000002u,  0x22200000u,  0x00000000u,  0x00000000u,  0x00000020u,  0x00002000u,  0x00000000u,  0x00000000u,  0x00002000u,  0x00002000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x20000020u,  0x00000000u,  0x00000000u,  0x00000000u,  0x22220000u,  0x00000000u,  0x00000000u,  0x00000002u,  0x00000002u,  0x00000000u,  0x00000000u,  0x00000200u,  0x00000020u,  0x00000000u,\n 0x00000000u,  0x00000130u,  0x00000011u,  0x00000000u,  0x00000000u,  0x00000013u,  0x11100000u,  0x00000000u,  0x00000000u,  0x00000210u,  0x00003100u,  0x00000000u,  0x00000000u,  0x00032000u,  0x00003100u,  0x00000000u,  0x00000000u,  0x00000002u,  0x10000031u,  0x00000000u,  0x00000000u,  0x00000001u,  0x31110000u,  0x00000000u,  0x00000000u,  0x00000013u,  0x00000001u,  0x10000000u,  0x00000000u,  0x00001300u,  0x00000011u,  0x00000000u,\n 0x00000000u,  0x00000230u,  0x02223312u,  0x00000000u,  0x00000000u,  0x00000023u,  0x22233000u,  0x00000000u,  0x00000000u,  0x00000212u,  0x33213200u,  0x00000000u,  0x00000000u,  0x00032123u,  0x33213200u,  0x00000000u,  0x00000000u,  0x00000002u,  0x12332132u,  0x00000000u,  0x00000000u,  0x00000002u,  0x32223300u,  0x00000000u,  0x00000000u,  0x00000023u,  0x00222331u,  0x20000000u,  0x00000000u,  0x00002300u,  0x22233012u,  0x00000000u,\n 0x00000000u,  0x00000331u,  0x21441331u,  0x00000000u,  0x00000000u,  0x00000133u,  0x14413300u,  0x00000000u,  0x00000000u,  0x00000123u,  0x32123300u,  0x00000000u,  0x00000000u,  0x00021233u,  0x32123300u,  0x00000000u,  0x00000000u,  0x00000001u,  0x23321233u,  0x00000000u,  0x00000000u,  0x00000013u,  0x31441330u,  0x00000000u,  0x00000000u,  0x00000033u,  0x12144133u,  0x10000000u,  0x00000000u,  0x50003312u,  0x14413321u,  0x60000000u,\n 0x00000000u,  0x05000233u,  0x11764132u,  0x00000000u,  0x00000000u,  0x00001123u,  0x17641330u,  0x00000000u,  0x00000000u,  0x00000233u,  0x21233200u,  0x00000000u,  0x00000000u,  0x00002333u,  0x21233200u,  0x00000000u,  0x00000000u,  0x00000002u,  0x33212332u,  0x00000000u,  0x00000000u,  0x00000112u,  0x31764133u,  0x00000000u,  0x00000000u,  0x00000023u,  0x31176413u,  0x20000000u,  0x00000000u,  0x60002331u,  0x17641326u,  0x48000000u,\n 0x00000000u,  0x06000123u,  0x16986481u,  0xaa900000u,  0x00000000u,  0x00001112u,  0x6986488au,  0xa9900000u,  0x00000000u,  0x00001233u,  0x111321aau,  0x90000000u,  0x00000000u,  0x00012331u,  0x11132190u,  0x00000000u,  0x00000000u,  0x00000012u,  0x33111321u,  0xaa900000u,  0x00000000u,  0x00000111u,  0x26986488u,  0xaa990000u,  0x00000000u,  0x00000012u,  0x31698648u,  0x1aa90000u,  0x00000400u,  0x56001231u,  0x6986481au,  0xa9000000u,\n 0x00000040u,  0x05606655u,  0x6a933b89u,  0xacc90000u,  0x00000055u,  0x05644556u,  0xa933b89au,  0xcc990000u,  0x00000000u,  0x00001111u,  0x5644939cu,  0xc9000000u,  0x00000000u,  0x05611115u,  0x644499c9u,  0x00000000u,  0x00000000u,  0x04000011u,  0x11564493u,  0x9cc90000u,  0x00000005u,  0x50564455u,  0x6a933b89u,  0xacc99000u,  0x00000000u,  0x00600605u,  0x56a933b8u,  0x9acc9000u,  0x00000540u,  0x06600556u,  0xa933b89au,  0xcc900000u,\n 0x00000054u,  0x00645664u,  0x9c9228acu,  0xccca0000u,  0x00000006u,  0x46456649u,  0xc9228accu,  0xccaa0000u,  0x00000000u,  0x60566445u,  0x466992a9u,  0xca000000u,  0x00000056u,  0x56564454u,  0x66699aacu,  0x00000000u,  0x00000060u,  0x00605664u,  0x45466992u,  0xa9ca0000u,  0x00000000u,  0x64645664u,  0x9c9228acu,  0xcccaa000u,  0x00000000u,  0x05565566u,  0x49c9228au,  0xcccca000u,  0x00006004u,  0x44566649u,  0xc9228accu,  0xcca00000u,\n 0x00000600u,  0x44446445u,  0x9cca99cau,  0xcca90000u,  0x00000556u,  0x55664459u,  0xcca99cacu,  0xca990000u,  0x00000065u,  0x56646566u,  0x649cca9cu,  0x99000000u,  0x00005545u,  0x64665666u,  0x45cca9c9u,  0x90000000u,  0x00006004u,  0x65566465u,  0x66649ccau,  0x9c990000u,  0x00000055u,  0x65566445u,  0x9cca99cau,  0xcca99000u,  0x00000005u,  0x66556644u,  0x59cca99cu,  0xacca9000u,  0x00000646u,  0x54664459u,  0xcca99cacu,  0xca900000u,\n 0x00000064u,  0x6546466bu,  0xa8ac6445u,  0x999ca900u,  0x00000005u,  0x464466dau,  0x8acc6449u,  0x99cca900u,  0x00000054u,  0x64466446u,  0x45a8acc5u,  0x46980000u,  0x00560646u,  0x46644464u,  0x55cacc94u,  0x68000000u,  0x00000400u,  0x54644664u,  0x4645a8acu,  0xc5469800u,  0x00000000u,  0x5464466bu,  0xa8acc644u,  0x999cca90u,  0x00000500u,  0x05464466u,  0xba8ac644u,  0x5999ca90u,  0x00000554u,  0x644466a8u,  0xac644655u,  0x99c90000u,\n 0x00000056u,  0x46654deeu,  0xda9c4469u,  0xacccca00u,  0x00005546u,  0x64d445e8u,  0xa9cc446au,  0xccccca00u,  0x00000564u,  0x46545664u,  0x6889acc6u,  0x44aa0000u,  0x00505654u,  0x55556656u,  0x989cccc4u,  0x4a000000u,  0x00000564u,  0x64465456u,  0x646889acu,  0xc644aa00u,  0x00000554u,  0x664d4459u,  0x8a9cc446u,  0xaccccca0u,  0x00000056u,  0x46000deeu,  0xd8a9c446u,  0x9acccca0u,  0x00000056u,  0x6464458au,  0x9c4469acu,  0xccca0000u,\n 0x00000005u,  0x655d6effu,  0xeccc44a8u,  0xcccca900u,  0x00000660u,  0x6fe6fff8u,  0xaccc448cu,  0xcccca900u,  0x00000045u,  0x44644446u,  0x8889ccccu,  0x44a90000u,  0x00050456u,  0xede46466u,  0xaa9cccc6u,  0x49000000u,  0x00000000u,  0x45446444u,  0x468889ccu,  0xcc44a900u,  0x00000066u,  0x06df6ff9u,  0x8accc448u,  0xccccca90u,  0x00000000u,  0x000d9effu,  0xeaccc44au,  0x8cccca90u,  0x00000000u,  0x00069a9fu,  0xf844a8ccu,  0xcca90000u,\n 0x00000000u,  0x00dd9fffu,  0xfccc469cu,  0xca998000u,  0x00056605u,  0xfededfd8u,  0xcccc46ccu,  0xa9988800u,  0x00000654u,  0x454446a9u,  0xaaa8acccu,  0x64000000u,  0x000040ffu,  0xfddfffa4u,  0x9a8cccc5u,  0x40000000u,  0x00000564u,  0x54454446u,  0x998aa8acu,  0xcc640000u,  0x00005660u,  0x5ddefffau,  0x8cccc46cu,  0xca998880u,  0x00000000u,  0x60d8afffu,  0xfcccc469u,  0xcca99800u,  0x00000000u,  0x0de9aaffu,  0xff469ccau,  0x99800000u,\n 0x00000000u,  0x00d89dfeu,  0xdccc459cu,  0xcccaa000u,  0x00000005u,  0xeddff988u,  0xaccc45ccu,  0xcca99000u,  0x00000054u,  0x554568aau,  0xc9aa9cccu,  0x54800000u,  0x00060defu,  0xdfedfe49u,  0x89a9ccc6u,  0x48000000u,  0x00000000u,  0x5455456au,  0x9989aa9cu,  0xcc548000u,  0x00000000u,  0x5effdedau,  0x8accc45cu,  0xccca9900u,  0x00000000u,  0x0de9aefeu,  0xdaccc459u,  0xccccaa00u,  0x00000000u,  0xded9aaefu,  0xff459cccu,  0xcaa00000u,\n 0x00000000u,  0x00d98fdfu,  0xfacc46acu,  0xcccca000u,  0x00000000u,  0xdfedd898u,  0x8acc46ccu,  0xcccaa000u,  0x00000045u,  0xf6f6889au,  0x989aaaccu,  0x64980000u,  0x00050eefu,  0xdefedb6au,  0x88aaacc4u,  0x48000000u,  0x00000056u,  0x45e6f68au,  0xa9a89aaau,  0xcc649800u,  0x0000000du,  0xeefffd8au,  0xa8acc46cu,  0xccccaa00u,  0x00000000u,  0xded8adefu,  0xf8acc46au,  0xccccca00u,  0x0000005du,  0xed99a9deu,  0xfd46acccu,  0xcca00000u,\n 0x00000000u,  0x00b98eefu,  0xf8ac64acu,  0xcccca000u,  0x00000000u,  0x0dffedbbu,  0xb8ac64ccu,  0xcccaa000u,  0x0000004fu,  0xe6d5bb88u,  0x8089aaacu,  0x46980000u,  0x00000effu,  0xd859885au,  0xa89aaac4u,  0x68000000u,  0x00000000u,  0x0de6f598u,  0xaa9089aau,  0xac469800u,  0x0000000du,  0xffedbb89u,  0xa98ac64cu,  0xccccaa00u,  0x00000000u,  0xeedb9fdfu,  0xe98ac64au,  0xccccca00u,  0x0000000eu,  0xfd8a99efu,  0xdf64acccu,  0xcca00000u,\n 0x00000000u,  0xa9bbbdfeu,  0xd888a49au,  0xccca9000u,  0x00000000u,  0x88dffed1u,  0x3388a4acu,  0xcca99000u,  0x0000004fu,  0x5e5898aau,  0x90089aaau,  0x49880000u,  0x0000055eu,  0xb8329888u,  0x8889a984u,  0x88000000u,  0x00000000u,  0x0f5d5899u,  0x8800089au,  0xaa498800u,  0x00000000u,  0xeffedbb8u,  0x88088a4au,  0xccca9900u,  0x00000000u,  0xed88bfeeu,  0xd9088a49u,  0xaccca900u,  0x000000deu,  0xdbbbbbefu,  0xef849accu,  0xca900000u,\n 0x0000009au,  0x9aa99fefu,  0xeb008489u,  0xaaa90000u,  0x00000008u,  0x89daccc3u,  0x1100849au,  0xaa990000u,  0x0000005fu,  0x5d5613deu,  0xed0089a8u,  0x48800000u,  0x00004ea5u,  0xcc21bbbbu,  0xbb088886u,  0x00000000u,  0x00000000u,  0x0f5f56bbu,  0xbb000089u,  0xa8488000u,  0x0000000bu,  0xaeffedbbu,  0x13300849u,  0xaaa99000u,  0x0000000au,  0xdaaaafefu,  0xfd000848u,  0x9aaa9000u,  0x00000aadu,  0x8aaa8bdfu,  0xfdd489aau,  0xa9000000u,\n 0x00000099u,  0xadeed9deu,  0xfe000600u,  0x00000000u,  0x00000009u,  0x119ccca2u,  0x33333333u,  0x33331100u,  0x00000006u,  0xacc531efu,  0xffed0000u,  0x60000000u,  0x000019ccu,  0xca233333u,  0x33333160u,  0x00000000u,  0x00000000u,  0x06feb513u,  0xaa000000u,  0x00600000u,  0x0000000au,  0xdedeacccu,  0x31100066u,  0x00000000u,  0x000009a9u,  0xadeedaefu,  0xffd00160u,  0x00000000u,  0x0000a9a8u,  0xaddda9beu,  0xffe60000u,  0x00000000u,\n 0x00000099u,  0xaeffe98du,  0xffe01500u,  0x00000000u,  0x00000001u,  0x329ccc91u,  0x33333333u,  0x33333310u,  0x00000115u,  0xccca2333u,  0x33333333u,  0x51000000u,  0x000139ccu,  0xc9133333u,  0x33333331u,  0x00000000u,  0x00000000u,  0x05accc31u,  0xedaa0000u,  0x00500000u,  0x0000000au,  0xe119cccau,  0x23333333u,  0x33333110u,  0x000009aau,  0xaeffeabeu,  0xffacca50u,  0x00000000u,  0x0000aa9cu,  0xdeffda88u,  0xeff50001u,  0x30000000u,\n 0x0000009au,  0xdfffea89u,  0xdacca100u,  0x00000000u,  0x0000000au,  0x119acca2u,  0x22222222u,  0x22221100u,  0x00001329u,  0xccc91333u,  0x33333333u,  0x33310000u,  0x000019acu,  0xca222222u,  0x22222100u,  0x00000000u,  0x00000001u,  0x19ccca23u,  0x33333333u,  0x33310000u,  0x00000b89u,  0x1329ccc9u,  0x13333333u,  0x33333331u,  0x00000999u,  0xdeffeaa1u,  0xe9cccc23u,  0x33332210u,  0x0009999cu,  0xeffffa89u,  0xdefcccc9u,  0x10000000u,\n 0x089a9888u,  0xefffea1du,  0x9cccc233u,  0x33322100u,  0x00000008u,  0x9a99acc3u,  0x1ee00000u,  0x00000000u,  0x00000119u,  0xacca2222u,  0x22222222u,  0x21000000u,  0x0000009au,  0xcc21adefu,  0xfffe9a90u,  0x00000000u,  0x00b89813u,  0x29ccc913u,  0x33333333u,  0x33333100u,  0x000000b8u,  0xe119accau,  0x22222222u,  0x22222110u,  0x00000099u,  0xdfffeb13u,  0x29cccc13u,  0x33333321u,  0x0000999du,  0xeffffa89u,  0xed1acccau,  0x23332210u,\n 0x0089a989u,  0xfffe0132u,  0x9cccc133u,  0x33333210u,  0x0000000du,  0x89a98991u,  0x3dd00000u,  0x00000000u,  0x0000000du,  0x9acc3100u,  0x088a8800u,  0x00000000u,  0x00000088u,  0x8832dddeu,  0xffffe990u,  0x00000000u,  0x008b8981u,  0x19acca22u,  0x22222222u,  0x22210000u,  0x00000b98u,  0xdeff9accu,  0x31dd0000u,  0x00000000u,  0x00000000u,  0xefffd001u,  0x19accc22u,  0x22221110u,  0x0000000eu,  0xffffdb9du,  0xe132cccau,  0x13333321u,\n 0x08a999a9u,  0xffe00011u,  0x9accc222u,  0x22211100u,  0x00000008u,  0xa99a9aa0u,  0x00000000u,  0x00000000u,  0x00000088u,  0xeed01300u,  0x00899890u,  0x00000000u,  0x000008bdu,  0xed0000ddu,  0xddefea90u,  0x89c00000u,  0x0bbb8889u,  0x8d9acc31u,  0xeeff9900u,  0x00000000u,  0x0000008au,  0xbdffedddu,  0x13300000u,  0x00000000u,  0x00000000u,  0xeffe0000u,  0x009aca19u,  0xbb98b000u,  0x0000098eu,  0xfffd000du,  0xde11accau,  0x22221110u,\n 0x009ca988u,  0xfe000000u,  0x89aca100u,  0x00000000u,  0x00000008u,  0x9ca99000u,  0x00000000u,  0x00000000u,  0x0000009bu,  0x8d000000u,  0x00988a88u,  0xa9800000u,  0x00008a8bu,  0xed000000u,  0x0999a008u,  0xaa900000u,  0x08bba98bu,  0xbdddd013u,  0x99dd9000u,  0x00000000u,  0x0000ba98u,  0xb8eeddd0u,  0x00000000u,  0x00000000u,  0x00000009u,  0x9ffd0000u,  0x00000138u,  0x89989b00u,  0x0000989au,  0xffd00000u,  0x0d8ccacau,  0x19980000u,\n 0x8ca9a889u,  0x00000000u,  0xb88b1300u,  0x00000000u,  0x0000008cu,  0xa9a88000u,  0x00000000u,  0x00000000u,  0x00000889u,  0x88000000u,  0x0008999au,  0xa9a80000u,  0x00898988u,  0xd0000000u,  0x0899c909u,  0x9cc00000u,  0x0ba989bbu,  0x8ddd0008u,  0x99890000u,  0x00000000u,  0x000008bbu,  0x89989900u,  0x00000000u,  0x00000000u,  0x0000000au,  0x9a900000u,  0x00000898u,  0x98ba9800u,  0x0009a8a9u,  0xa9000000u,  0x00b88a81u,  0x38aa0000u,\n 0x098a8000u,  0x00000000u,  0xbb9bb000u,  0x00000000u,  0x00000009u,  0x8a8b8800u,  0x00000000u,  0x00000000u,  0x000099b8u,  0x8b000000u,  0x0009a9a9u,  0x8ca90000u,  0x00a9988bu,  0x00000000u,  0x00c8988au,  0x89c00000u,  0x8b8b9b00u,  0x00000008u,  0x8a880000u,  0x00000000u,  0x0000aa8bu,  0x88a88800u,  0x00000000u,  0x00000000u,  0x00000099u,  0x88800000u,  0x00000988u,  0xa98a8a00u,  0x00098888u,  0x90000000u,  0x000ab8bbu,  0x9b8a0000u,\n 0xcc990000u,  0x00000000u,  0xb888998bu,  0x00000000u,  0x000000ccu,  0x99cb9880u,  0x00000000u,  0x00000000u,  0x00099a88u,  0xb0000000u,  0x000a99cau,  0x9c9c0000u,  0x009a98bbu,  0x00000000u,  0x00a9a9acu,  0xa9800000u,  0xbaa88000u,  0x00000008u,  0x999aa980u,  0x00000000u,  0x0000899bu,  0x8999aa98u,  0x80000000u,  0x00000000u,  0x00000a98u,  0xaa890000u,  0x0000b8b9u,  0x8a000000u,  0x0098aa89u,  0x00000000u,  0x00098989u,  0xa98b0000u,\n 0x9aa80000u,  0x00000000u,  0x89898989u,  0xb0000000u,  0x0000009au,  0x9ab98988u,  0x00000000u,  0x00000000u,  0x0009a9b8u,  0x80000000u,  0x00898a9cu,  0x00000000u,  0x00bbb888u,  0xb0000000u,  0x000c999au,  0x99000000u,  0xb899b000u,  0x00000009u,  0xa9a9a9a8u,  0x00000000u,  0x0000a8bbu,  0x9a9a9a9au,  0x88000000u,  0x00000000u,  0x00000989u,  0x9a9a8000u,  0x00000000u,  0x00000000u,  0x00899a9au,  0x80000000u,  0x0000a888u,  0x98800000u,\n 0xc9800000u,  0x00000000u,  0x988a9ba9u,  0x80000000u,  0x000000c9u,  0xab98b899u,  0x00000000u,  0x00000000u,  0x000bbbbau,  0x98000000u,  0x00000000u,  0x00000000u,  0x000bbb8au,  0x80000000u,  0x000098a9u,  0xc0000000u,  0x0a8b0000u,  0x0000000au,  0x99ca8ca9u,  0x00000000u,  0x00000000u,  0xa99ca8cau,  0x99000000u,  0x00000000u,  0x0000008au,  0x8ca9a000u,  0x00000000u,  0x00000000u,  0x008a8ca9u,  0xa0000000u,  0x000008b9u,  0x8a000000u,\n 0x00000000u,  0x0000000bu,  0x8b98a8a8u,  0xa0000000u,  0x000000bbu,  0xb8a89a88u,  0x00000000u,  0x00000000u,  0x0008bbbbu,  0xa8000000u,  0x00000000u,  0x00000000u,  0x0008bbb8u,  0x90000000u,  0x0000a998u,  0x00000000u,  0x00000000u,  0x00000089u,  0x8a9c9c9cu,  0x00000000u,  0x00000008u,  0x98a9c9c9u,  0xcc000000u,  0x00000000u,  0x0000009cu,  0x9c9c9000u,  0x00000000u,  0x00000000u,  0x0a9c9c9cu,  0x90000000u,  0x00000988u,  0xb0000000u\n);\nvec3 pal[] = vec3[](\nvec3(0.41,0.00,0.60), vec3(0.50,0.50,0.50), vec3(0.75,0.75,0.75), vec3(0.97,0.97,0.97)\n, vec3(0.97,0.97,0.00), vec3(0.53,0.53,0.00), vec3(0.72,0.72,0.00), vec3(0.25,0.25,0.25)\n, vec3(0.44,0.22,0.00), vec3(0.60,0.35,0.09), vec3(0.78,0.47,0.25), vec3(0.00,0.00,0.00)\n, vec3(0.97,0.66,0.44), vec3(0.00,0.47,0.00), vec3(0.00,0.72,0.00), vec3(0.00,0.97,0.00)\n);\n\n\n\n\n\n\n\n\n\n\n  int zy = int(floor((iResolution.y - fragCoord.y -46.0) / zoom)) ;\n        // make it repeat...\n        //% (xy.length() / 12);\n        \n \n    if (zy < 0)\n        return;\n   if (zy >= (xy.length() / (cw/8)))\n    return ;\n    \n    int zx = (int((fragCoord.x -0.0 ) / zoom)  + xoffset)\n            % (32 * 8) // magic\n;\n    \n    if (zx < 0)\n        return  ;\n    \n    if (zx >= (8 * (cw/8)))\n    return ;\n    \n    int i = (zx % (8 * xy.length())) / 8;\n    \n    if (zy > 0)\n    {\n        i += (cw/8) * zy;\n    }\n       \n    int x = 7 - (zx % 8); // fixup lsb \n    \n    int ii = int ((xy[i] >> (4 * x)) & (0xfu ));\n        \n    if (ii>0) \n\n        fragColor.rgb = pal[ii] ;\n        \n                \n//                fragColor.rgb =     fragColor.gbr;\n//fragColor.rgb =     fragColor.brg;\n//fragColor.rgb =     fragColor.grb;\n\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfragColor.rgb = vec3(0);\n\n    int xoffset = 8 + int(iTime * 20.0); // how fast do we move?\n    int voffset = 32 * int(iTime * 8.0);\n\n// tiled the whole strip. whatof fullscreen?\nint vx = min( -32 + int(iTime * 20.0) ,40 * 1);// have him come from offscreen?\nint vxc = (int((fragCoord.x -0.0 ) / zoom)   ) - vx;\nif (vxc < 32 * 1)\nif (vxc >= 32 * 0) // lets pretend we only want the 1. element?\n    vikings(fragColor,fragCoord, voffset - vx);\n    \n// { cw = 16, Width = 16, Height = 16 }\nint cw = 16;\nuint xy[] = uint[](\n 0x00000100u,  0x11001000u,\n 0x11111111u,  0x11111111u,\n 0x22222222u,  0x22222222u,\n 0x33333333u,  0x33333333u,\n 0x44444333u,  0x33555555u,\n 0x43333336u,  0x10555555u,\n 0x54322332u,  0x61055555u,\n 0x55432333u,  0x26105555u,\n 0x55543223u,  0x33610555u,\n 0x55554323u,  0x33261055u,\n 0x55555433u,  0x22326105u,\n 0x55555543u,  0x32222310u,\n 0x00000162u,  0x32232261u,\n 0x22222222u,  0x22222222u,\n 0x33333333u,  0x33333333u,\n 0x44444444u,  0x44444444u\n);\nvec3 pal[] = vec3[](\nvec3(0.31,0.31,0.97), vec3(0.25,0.25,0.82), vec3(0.13,0.16,0.47), vec3(0.09,0.09,0.31)\n, vec3(0.03,0.03,0.19), vec3(0.00,0.00,0.00), vec3(0.19,0.19,0.63));\n\n\n\n  //int zy = int(floor((iResolution.y - fragCoord.y -46.0) / zoom)) ;\n  int zy = int(floor((iResolution.y - fragCoord.y -46.0  ) / zoom))- 32 ;\n  \n        // make it repeat...\n        //% (xy.length() / 12);\n \n    if (zy < 0)\n        return;\n   if (zy >= (xy.length() / (cw/8)))\n    return ;\n    \n   // int xoffset = 8 + int(iTime * 20.0);\n    int zx =  ( (int((fragCoord.x -000.0 ) / zoom) ) + xoffset)\n        //% (xy.length() /32) ;\n        % (xy.length() / 2) \n        ;\n    \n    if (zx < 0)\n        return  ;\n    \n    if (zx >= (8 * (cw/8)))\n    return ;\n    \n    int i = (zx % (8 * xy.length())) / 8;\n    \n    if (zy > 0)\n    {\n        i += (cw/8) * zy;\n    }\n       \n    int x = 7 - (zx % 8); // fixup lsb \n    \n    int ii = int ((xy[i] >> (4 * x)) & (0xfu ));\n        \n    //if (ii>0) // shades of black? reorder pal?\n\n        fragColor.rgb = pal[ii] ;\n    \n    \n        //fragColor.rgb =     fragColor.gbr;\n                //fragColor.rgb =     fragColor.rbg;\n\n}\n","name":"Image","description":"","type":"image"}]}