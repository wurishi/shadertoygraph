{"ver":"0.1","info":{"id":"XlXBRn","date":"1519609118","viewed":99,"name":"raymarching1-trl","username":"ruolan","description":"raymarching followed by tutorial","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p)\n{\n    vec3 q = fract(p)*2.-1.;\n    return length(q)-0.25;\n}\n\nfloat trace(vec3 origin, vec3 ray)\n{\n    float t=0.;\n    for(int i=0; i<32; i++){\n        vec3 p = origin + t*ray;\n        float d=map(p);\n        t += d*0.5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv*2. -1.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ray = normalize(vec3(uv,1.));\n    ray.xz *= mat2(cos(iTime), -sin(iTime), sin(iTime),cos(iTime));\n    \n    //vec3 ori = vec3(0.,0.,-3.);\n    vec3 ori = vec3(0.,0.,iTime);\n    float t = trace(ori, ray);\n    \n    float fog = 1.0/(1.0+t*t*0.1);\n    \n    vec3 color = vec3(fog);\n    \n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}