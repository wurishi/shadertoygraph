{"ver":"0.1","info":{"id":"dttSzM","date":"1685217219","viewed":79,"name":"Point grid to number spiral","username":"ChunderFPV","description":"A grid of points move in the direction of Y at the speed of X.\nMouse Y to zoom.\nMouse X to polar transform into a number spiral which visually describes the denominator of t.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["example","grid","tutorial","spiral","number","polar","cells","points","transform","barebones"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 C, in vec2 U)\n{\n    vec3 c = vec3(0);\n    vec2 R = iResolution.xy,\n         m = (iMouse.xy-.5*R)/R.y*2.,\n         u = (U-.5*R)/R.y*20./(1.-m.y), // cartesian coords with scale and zoom\n         p = vec2(length(u), atan(u.x, -u.y)/6.2832); // polar transformed coords\n    float t = iTime/5.,\n          tm = (iMouse.z > 1.) ? m.x: sin(t*2.), // transform multiplier\n          tr = smoothstep(-1., 1., tm); // smooth transform\n    u = u*(1.-tr)+p*tr; // transform\n    float s = t*round(u.x); // point speed\n    //s = sqrt(t*round(abs(u.x))*2.)*sign(u.x); // alternate\n    c += min(4., 1./length((fract(u-vec2(0, s)+.5)-.5)/fwidth(u)/1.5)); // point grid\n    c /= sqrt(max(1., abs(u.x))); // darken towards inf\n    C = vec4(c+c*c, 1);\n}","name":"Image","description":"","type":"image"}]}