{"ver":"0.1","info":{"id":"MfsXD8","date":"1705234606","viewed":43,"name":"First Fractal Shadertoy ","username":"MathTechCoach","description":"Tutorial","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float angle = iTime*0.01+1.0;\n    vec2 normalizedCoord = fragCoord / iResolution.xy * 2.5 - 1.0;\n\n    //vec2 normalizedCoord = fragCoord / iResolution.xy;\n    //fragColor = vec4(normalizedCoord.x,normalizedCoord.y,0.0,1.0);\n    //fragColor = vec4(normalizedCoord,0.0,1.0);\n    //fragColor = vec4(length(normalizedCoord),length(normalizedCoord),length(normalizedCoord),1.0);\n    for (float i = 0.0; i<200.0; i+=1.0){\n        normalizedCoord = abs(normalizedCoord);\n        normalizedCoord -= 0.25;\n        normalizedCoord *= 1.1;\n        normalizedCoord *= mat2(\n            cos(angle),-sin(angle),\n            sin(angle),cos(angle)\n            );\n    }\n    fragColor = vec4(length(normalizedCoord),\n    length(normalizedCoord + vec2(0.7,-0.1)),\n    length(normalizedCoord + vec2(-0.5,0.1)),\n    1.0);\n }\n   ","name":"Image","description":"","type":"image"}]}