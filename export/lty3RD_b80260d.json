{"ver":"0.1","info":{"id":"lty3RD","date":"1473495140","viewed":181,"name":"Static","username":"akst","description":"trying to simulate a static television","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tv","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec4 vertical_shadow(in vec4 target, float amount, float darken) {\n    vec4 result = target;\n    result = (target + amount) / (amount + 1.0);\n    result *= target * (((1.0 / darken) + amount) / 2.0);\n    return result;\n}\n\n\nfloat sicos(float i) {\n    vec2 j = vec2(i, i);\n    return fract(sin(dot(j ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\nvec2 tv_distort(in vec2 pos, int splits) {\n    float time = iTime * 5.0;\n    float distort = 0.05;\n    vec2 pos_map = pos / iResolution.xy;\n    \n        \n    float percent = 1.0 / float(splits);\n    float cur_dist = sicos(time) * distort;\n    float cut = pos_map.x > 0.5\n        ? percent + cur_dist\n        : percent - cur_dist;\n    \n    float screen_slice\n        = 1.0 / min(float(splits), ceil(pos_map.x / cut));\n    float x_flux = abs(sicos(time)) * screen_slice;\n    \n    float shift_percent = distort * 10.0;\n    float origin_percent = 1.0 - shift_percent;\n    float portion_cut    = ( (shift_percent  * x_flux)\n                + (origin_percent * screen_slice));\n    \n    \n    pos_map.x = portion_cut;\n    \n    return pos_map;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float minLight = 0.7;\n    float time = iTime * 1.0;\n    vec2 pos = fragCoord.xy;\n    vec2 pos_map = tv_distort(pos, 5);\n    \n        \n    vec4 chan1 = texture(iChannel0, pos_map);\n    \n    float red = pos.x / iResolution.x;\n    fragColor = chan1;\n    \n    fragColor *= (minLight + abs(sin(time) * sicos(time))) / 2.0;\n    \n    float y_off = (pos.y / iResolution.y);\n    float w_off_a = y_off * abs(sicos(time * 0.3));\n    float w_off_b = y_off * abs(cos(time * 0.5));\n    float w_off = (w_off_a * 0.1) \n                + (w_off_b * 0.3)\n                + (y_off   * 0.6);\n    //\n    w_off = w_off * 1.5;\n    //\n    fragColor = vertical_shadow(fragColor, w_off, 0.35);\n    fragColor = vertical_shadow(fragColor, 1.0 -  w_off, 0.15);\n    fragColor.a = 1.0;\n}\n\n","name":"Image","description":"","type":"image"}]}