{"ver":"0.1","info":{"id":"3lSSDR","date":"1565518203","viewed":101,"name":"breakegg_03rotate_rect","username":"breakegg","description":"rotate","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["rotate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rect(float left,float right, float top, float bottom, vec2 uv){\n    float blur=1./iResolution.y;\n    float c = 1.;\n    c = smoothstep(left-blur,left+blur,uv.x);\n    c *= smoothstep(right+blur,right-blur,uv.x);\n    c *= smoothstep(top-blur,top+blur,uv.y);\n    c *= smoothstep(bottom+blur,bottom-blur,uv.y);\n    return c;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy-0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    float ang = iTime/2.;\n\t// uv=vec2(cos(ang)*uv.x+(-sin(ang)*uv.y),sin(ang)*uv.x+(cos(ang)*uv.y));\n    // 旋转矩阵\n\tmat2x2 rot = mat2x2(vec2(cos(ang),-sin(ang)),vec2(sin(ang),cos(ang)));\n    uv *= rot;\n    \n    float m = rect(-0.1,0.1,-0.1,0.1,uv);\n    vec3 col = vec3(1.,1.,1.)*m;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}