{"ver":"0.1","info":{"id":"43VSRD","date":"1719888688","viewed":37,"name":"HW1_Scintillatting Grid","username":"EurekaChen","description":"Scintillatting grid (classic illusion)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","illusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle ( in vec2 p, in float r)\n{\n    return length(p)-r;\n}\nfloat sdSquare ( in vec2 p, in float a )\n{\n    return max(abs(p.y),abs(p.x))-(a/2.0);\n}\nfloat sdGrid(in vec2 p, in float a)\n{\n    return sdSquare(abs(fract(p)-0.5), a);\n}\nfloat sdCircleGrid(in vec2 p, in float a)\n{\n    return sdCircle(abs(fract(p)-0.5)-0.5, a);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n\t// Normalized coordinates, ripped from Inigo Quilez\n\tvec2 uv = fragCoord/iResolution.xy;\n    uv-=0.5; // Centering\n    uv*=5.0; //Scaling\n    uv.x*=iResolution.x/iResolution.y; // Projecting\n\n    vec3 background = vec3(1,1,1);\n    vec3 block = vec3(step(0.0,sdGrid(uv, 0.8)));\n    vec3 circle = 1.0-vec3(step(0.0,sdCircleGrid(uv, 0.1)))*vec3(0.5);\n\tfragColor = vec4(circle*block, 1);\n}","name":"Image","description":"","type":"image"}]}