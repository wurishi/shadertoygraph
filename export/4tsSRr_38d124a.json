{"ver":"0.1","info":{"id":"4tsSRr","date":"1434099597","viewed":418,"name":"Hinge - distance 2D","username":"ajs15822","description":"Signed distance to a 2D hinge (triangle with one side open). Just a quick modification of iq's 2D triangle SDF.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","distance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\n// signed distance to hinge, based on iq's 2d tri SDF\nfloat sdTriangle( in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p )\n{\n\tvec2 e0 = p1 - p0;\n\tvec2 e1 = p2 - p1;\n\tvec2 e2 = p0 - p2;\n\n\tvec2 v0 = p - p0;\n\tvec2 v1 = p - p1;\n\tvec2 v2 = p - p2;\n\n\tvec2 pq0 = v0;\n\tvec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n\tvec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    \n    vec2 d = min( min( vec2( dot( pq0, pq0 ), 1.0 ),\n                       vec2( dot( pq1, pq1 ), v1.x*e1.y-v1.y*e1.x )),\n                       vec2( dot( pq2, pq2 ), v2.x*e2.y-v2.y*e2.x ));\n\n\treturn -sqrt(d.x)*sign(d.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n\tvec2 v1 = cos( iTime + vec2(0.0,1.57) + 0.0 );\n\tvec2 v2 = cos( iTime + vec2(0.0,1.57) + 2.0 );\n\tvec2 v3 = cos( iTime + vec2(0.0,1.57) + 4.0 );\n\n\tfloat d = sdTriangle( v1, v2, v3, p );\n\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-2.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(120.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.02,abs(d)) );\n\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}