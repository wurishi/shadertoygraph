{"ver":"0.1","info":{"id":"ftjczG","date":"1649863388","viewed":147,"name":"Tiles [340 chars]","username":"Xor","description":"I made a pretty mistake while creating my [url=https://www.shadertoy.com/view/Nljyzh]Truchet Blobs[/url] shader. Thought I should share it here.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Based on: shadertoy.com/view/Nljyzh\n//<512 Chars playlist: shadertoy.com/playlist/N3SyzR\n\nvoid mainImage( out vec4 O, vec2 P)\n{\n    O*=0.;\n    for(int n=0; n++<9;)\n    {\n        //Resolution for scaling\n        vec2 p = P+vec2(n%3,n/3)/3.,\n        r = iResolution.xy,\n        //Cell coordinates\n        c = ceil(p=p*mat2(cos(iTime*.1+vec4(0,33,11,0)))/r.y*6.-iTime),\n        //Signed vec2\n        s = sign(texture(iChannel0,c/2e2).rg-.5),\n        //fractional-cell coordinates (-0.5 to +0.5)\n        f = (c-p-.5)*s,\n        //Truchet distance * checkerboard * sign flips\n        i = (length(f-.5-ceil(f.x+f.y))-.5)*(mod(c.x+c.y,2.)-.5)*s*s.y;\n        //Color and shading\n        O += (.5+cos((p*.4+i+i).x+vec4(6,O-O)) * clamp(r*i,-.5,.5).x)/9.;\n    }\n}\n\n/*\n//Original without AA 286 chars:\nvoid mainImage( out vec4 O, vec2 p)\n{\n    //Resolution for scaling\n    vec2 r = iResolution.xy,\n    //Cell coordinates\n    c = ceil(p=p*mat2(cos(iTime*.1+vec4(0,33,11,0)))/r.y*6.-iTime),\n    //Signed vec2\n    s = sign(texture(iChannel0,c/2e2).rg-.5),\n    //fractional-cell coordinates (-0.5 to +0.5)\n    f = (c-p-.5)*s,\n    //Truchet distance * checkerboard * sign flips\n    i = (length(f-.5-ceil(f.x+f.y))-.5)*(mod(c.x+c.y,2.)-.5)*s*s.y;\n    //Color and shading\n    O = .5+cos((p*.4+i+i).x+vec4(6,O-O)) * clamp(r*i,-.5,.5).x;\n}\n*/","name":"Image","description":"","type":"image"}]}