{"ver":"0.1","info":{"id":"XfKyzG","date":"1732024411","viewed":33,"name":"Plotted waves","username":"knotaiBEAR","description":"Inigo Quillez's plot function added together by an offset  multiplied by  a fraction of PI;","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","lines","sin","cos","plot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define colX vec3(1.0,0.5,0.55)\n#define colY vec3(0.55,1.0,0.5)\n#define colC vec3(0.5,0.55,1.0)\n#define colR vec3(1.0,1.0,0.0)\n#define pi 3.1415\n\n\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.y) -\n          smoothstep( pct, pct+0.02, st.y);\n}\nvec3 draw(float pct, float y, vec3 c){\n\treturn (1.0-pct)*vec3(y)+pct*c;\n}\nint wrapi(int v, int v_min, int v_max){\n\tint range = v_max-v_min;\n\treturn range == 0 ? v_min : v_min + ((((v-v_min)%range)+range)%range);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Aspect adjusted pixel coordinates.\n    vec2 UV = (fragCoord.xy-iResolution.xy*0.5)/iResolution.y;\n\tvec2 st = uv*2.0-1.0;\n\tfloat uvx = st.x+(iTime/8.0);\n\tfloat uvy = st.y;//+(TIME/8.0);\n\tfloat X = 0.0;\n\tfloat PCT2;\n\tvec3 C;\n\tint chan = 0;\n\tfor (int i = 1; i <= 32; i++){\n\t\tfloat m = float(i)*(sqrt(pi+sin(iTime/32.0)));\n\t\tX = sin(m+uvy);\n\t\tX *= cos(m*uvy);\n\t\t//X *= sin(m*uvx);\n\t\tX *= cos(m*uvx);\n\t\tPCT2 = plot(st.yx,X);\n\t\tC[chan] += PCT2 *m;\n\t\tchan = wrapi(chan + 1, 0, 3);\n\t}\n    // Output to screen\n    fragColor = vec4(C,1.0);\n}","name":"Image","description":"","type":"image"}]}