{"ver":"0.1","info":{"id":"DsjcRR","date":"1687449833","viewed":97,"name":"Ethereal Whirls of Luminescence","username":"skaplun","description":"Don't try to understand the math, it can physically hurt you.\nName was given by ChatGPT","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LINE_W 1./max(iResolution.x, iResolution.y)\n\nconst float PI = acos(-1.);\nconst float TWO_PI = PI * 2.0;\nconst float STEPS = 8.;\nconst float ANG_DIFF = TWO_PI/STEPS;\nconst float CIR_RAD = 0.1;\nconst float TIME_SCALER = 4.;\n\nfloat easeOutSine(float x) {\n    return sin((x * PI) / 2.);\n}\n\nvec3 hsv2rgb(in vec3 c){\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord.xy - iResolution.xy)/iResolution.y * 1.1;\n    \n    float interval = TWO_PI * (STEPS);\n    float scaledTime = iTime * TIME_SCALER;\n    float intervalN = floor(scaledTime/interval) + 2.;\n    float time = mod(scaledTime, interval);\n    vec3 totalColor = vec3(0.0);\n    \n    float lastStart = (STEPS - 1.0) * ANG_DIFF * 0.5 + (STEPS - 1.) * PI;\n    for(float i=0., j=STEPS-1.; i<STEPS; i++, j--) {\n        float startTime = i * ANG_DIFF * .5;\n        float endTime = lastStart + TWO_PI + j * PI - j * ANG_DIFF * 0.5;\n        float s = sin(time - startTime);\n        vec2 cntr = vec2(0.0, (abs(s)) * sign(s));\n        float a = startTime;\n        mat2 m = mat2(cos(a), -sin(a), sin(a), cos(a));\n        cntr *= m;\n        \n        float start = startTime + i * PI;\n        float rad = CIR_RAD * pow(clamp(time - start, 0.0, 1.0), 2.) * pow(1.0 - clamp(time - endTime, 0., 1.), 4.);\n        \n        vec3 circClr = hsv2rgb(vec3(fract((startTime + intervalN * 37.17) * 0.1), 1.0, 1.0)) * step(startTime * 1.5, time);\n        float circleColor = LINE_W * 25. / abs(distance(uv, cntr) - rad);\n        \n        float lineColor = 0.0;\n        {\n            float even = sign(mod(i, 2.) - 0.5);\n            vec2 rotUV = vec2(uv.x * even, uv.y * -even) * m;\n            float end = pow(1.0 - clamp(time - endTime, 0., 1.), 8.);\n            float head = 0.9 * clamp(time - start, 0.0, 1.0);\n            float tail = 0.9 * clamp(time - start - PI, 0.0, 1.0);\n            lineColor = LINE_W * end * (atan((rotUV.y + tail)/rotUV.x) - atan((rotUV.y - head)/rotUV.x)) / rotUV.x;\n        }\n        \n        totalColor += circClr * max(circleColor, lineColor);\n    }\n    \n    fragColor = vec4(totalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}