{"ver":"0.1","info":{"id":"X3sSzn","date":"1709087849","viewed":103,"name":"Simple Ripple Shader With sin","username":"Shader_Noob2023","description":"Simple Rippe","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float ratio = iResolution.x/iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv *= 2.0;\n    uv.x *= ratio;\n    \n   \n\n    float amp = 2.5;// Amplitude\n    float freq = 10.0;// FrequÃªncia\n    float vel = 2.0;// Velocidade\n    \n    \n \n    \n    float time = iTime;\n    float offset = fract(time * vel) * 2.0 * 3.14159; // Use 2*pi para obter um ciclo completo\n    \n    \n    float d = length(uv*2.0);\n     \n    d = amp*sin(d* freq - offset)*(max(0.,1.0-d));\n    \n\n    // Output to screen\n    fragColor = vec4(d, d, d, 1.0);\n}","name":"Image","description":"","type":"image"}]}