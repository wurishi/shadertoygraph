{"ver":"0.1","info":{"id":"wlj3zz","date":"1558445874","viewed":76,"name":"dange ","username":"MODer","description":"ervbe","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n#define tex0 iChannel0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col;\n    float size;\n    vec3 uv;\n    float mouse;\n    float n;\n    float gr;\n    vec2 texUv;\n    float t;\n    \n    \n    t = 0.;\n    mouse = iMouse.x/iResolution.x;\n    size = 10.;\n    uv = vec3(floor(fragCoord.xy/size-(0.5*size))+(0.5*size), t)*size;\n    texUv = (fract(fragCoord.xy/size-(0.5*size))+(0.5*size));\n    gr = mouse;\n    \n    \n    \n    n = g(uv, gr);\n    /**/\n    n *= \n        g(uv+vec3(1.,1. ,0.), gr)*\n        g(uv+vec3(1.,-1.,0.), gr)*\n        g(uv+vec3(-1.,1.,0.), gr);\n        //*g(uv+vec2(-1.,-1.), gr, t);\n    \n    \n    \n    \n    \n    \n    col = texture(tex0, texUv)*n;\n    \n    \n    \n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\nfloat n(vec3 uv){return fract(sin(uv.x*124.2+uv.y*2374.73+uv.z*2374.46344)*8667.673);}\nfloat no2(vec3 uv, float m){\n    \n    vec3 id = floor(uv.xyz*m);\n    vec3 ud = fract(uv.xyz*m); \n    \n    ud = smoothstep(0.,1.,ud);\n    \n    float x = mix(n(id+vec3(0)), n(id+vec3(1,0,0)), ud.x);\n    float y = mix(n(id+vec3(0,1,0)), n(id+vec3(1,1,0)), ud.x);\n    \n    float x2 = mix(n(id+vec3(0,0,1)), n(id+vec3(1,0,1)), ud.x);\n    float y2 = mix(n(id+vec3(0,1,1)), n(id+vec3(1,1,1)), ud.x);\n    \n    \n    return mix(mix(x,y,ud.y),mix(x2,y2,ud.y),ud.z);}\n\n\nfloat Noise(vec3 uv, float m, int count){\n    float c = no2(uv,m)/2.;\n    if(count >= 1){c += no2(uv,m*2.)/4.;}\n    if(count >= 2){c += no2(uv,m*4.)/8.;}\n    if(count >= 3){c += no2(uv,m*8.)/16.;}\n    if(count >= 4){c += no2(uv,m*16.)/32.;}\n\n    return c;\n}\n\nfloat g(vec3 uv, float m){\n    float n = \n        pow(Noise(abs(uv), 0.005, 5), 0.53)*\n        pow(Noise(abs(uv), 0.02,  5), 2.  )/\n        Noise(abs(uv), 0.003, 5);\n    if(n > m){return 1.;}return 0.;\n}/*\nfloat g(vec2 uv, float m, float f){\n    //uv = abs(uv);\n    float n = \n        abs(Noise(vec3(uv,f), .005, 5))*\n        abs(Noise(vec3(uv,f), 0.02, 5))/\n        abs(Noise(vec3(uv,f), 0.003, 5));\n    if(n > m){return 1.;}return 0.;\n}*/","name":"Common","description":"","type":"common"}]}