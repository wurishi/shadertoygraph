{"ver":"0.1","info":{"id":"3tycDR","date":"1610751952","viewed":128,"name":"Flying in 3D RGB texture","username":"jetp250","description":"Poor man's ray-something. Terribly inefficient but fun to play with","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["voxels","colorful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5*iResolution.xy) / iResolution.y;\n    \n    vec3 facing = normalize(vec3(uv * 1.3 - vec2(cos(iTime*0.666)*0.5, sin(iTime*0.888)*0.5), 1.0));\n    \n    vec3 pos = vec3(sin(iTime)*0.03 + 0.5, 0.5, 0.5);\n    pos.z += iTime * 0.04;\n      \n    float stepS = 0.001;\n    vec3 p = pos;\n    float t1 = .5+.5*(sin(iTime*0.3));\n    float s = floor(t1*3.0) + 1.0;\n    float d = t1 * 4.0 + 4.0;\n    p += d * facing * stepS * 0.99;\n    for (int i = 0; i < 400; ++i) {\n        vec4 v = texture(iChannel0, p); \n        if (dot(v.xyz,v.xyz) > 1.0 && distance(round(p*32.0*s)/s+0.5, pos*32.0) > d) {\n            fragColor = mix(vec4(v*v), vec4(1.0), float(i)/500.0);\n            return;\n        }\n        p += facing * stepS;\n    }\n    fragColor = vec4(1.0);\n}","name":"Image","description":"","type":"image"}]}