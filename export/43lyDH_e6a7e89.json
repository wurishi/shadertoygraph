{"ver":"0.1","info":{"id":"43lyDH","date":"1726111280","viewed":46,"name":"Polar truchet - pareidolia","username":"Elsio","description":"Infelizmente, não estou apto a continuar a ideia: eu imaginei um personagem verde, como um lagarto ou algo assim, caminhando por essa superfície e tentando se manter visível durante o máximo de tempo possível, enquanto a camera e a superfície se move.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["truchet","fill","filigrane","filigranefree"],"hasliked":0,"parentid":"43XcDr","parentname":"Filled Truchets #filigraneFree"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define h21(p) fract(sin(dot(p, vec2(12.34,26.534))) * 987.23)\n#define pi acos(-1.)\n#define TAU (2.* pi)\n#define t iTime\n\nbool C;\n\nfloat pattern(vec2 p, float coin1, float coin2){\n    float b = length(abs(p) - vec2(.5)) - .2,\n          r1 = p.x - p.y,\n          r2 = p.x + p.y;\n          \n    return\n        abs(\n            max(\n                min(\n                    length(\n                        - p \n                        - vec2(0, .5) \n                        - clamp(\n                              (-r1 + .5) / (coin1 * .5), \n                              0., 1.\n                          ) * vec2(.5, -.5)\n                    ), \n                    \n                    length(\n                        + p\n                        - vec2(0, .5) \n                        - clamp(\n                              (r1 + .5) / (coin2 * .5), \n                              0., 1.\n                          ) * vec2(.5, -.5)\n                    )\n                ) - .3, \n                - b\n            )\n        );\n}\n\nfloat truchet(vec2 p, float coin1, float coin2, float coin3) {\n    \n    coin1 = coin1 > .5 ? 1. : 2.;\n    coin2 = coin2 > .5 ? 1. : 2.;\n    p.y = coin3 > .5 ? p.y : - p.y;\n        \n    float d = pattern(p, coin1, coin2);\n        \n    C = (coin3 > .5\n            ? pattern(p, coin1, coin2) - .03\n            : pattern(p, coin2, coin1) - .03) < 0.;\n        \n    return d - .14;\n}\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 q, p, r = iResolution.xy;\n    float i, d, a, b;\n    u = (u - r / 2.) / r.y;\n    p = u;\n    p.x += cos(t * .2) * 1.5;\n    p.y += sin(t * .1) * 1.5;\n\n    //if(false)\n    p = vec2(\n           atan(p.x, p.y) + cos(t * .2),\n           log(length(p))\n       );\n\n    p = fract(p / TAU) * 50.;\n    q = floor(p);\n    p = fract(p) - .5;\n\n    d = truchet(p, h21(q), h21(q+1.), h21(q+2.));\n\n    a = smoothstep(15. / r.y, 0., d);\n    \n    \n    if(iMouse.z > 0.)\n    b = smoothstep(0., 15. / r.y, max(p.x, p.y) - .48);\n\n\n    o = mix(!C ? vec4(a) : vec4(a, 0, 0 ,0), vec4(b, b, 0, 0), .3);\n}","name":"Image","description":"","type":"image"}]}