{"ver":"0.1","info":{"id":"7llfRf","date":"1651253388","viewed":578,"name":"Heading Home Remaster","username":"Xor","description":"Heading Home, but with bokeh. Also adjusted color, and perspective.","likes":50,"published":1,"flags":96,"usePreview":0,"tags":["road","rain","lightning","car"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Heading Home: https://www.shadertoy.com/view/tsdczN\n//Bokeh pass\n\n#define T texture(iChannel0, I/r\nvoid mainImage(out vec4 O, vec2 I)\n{\n    vec2 r = iResolution.xy,\n    p = (I-.5*r).yy/6e2;\n    \n    O-=O;\n    for(float i=1.; i<16.; i+=1./i)\n    {\n        p *= -mat2(.7374, .6755, -.6755, .7374);\n        O += exp(log(vec4(1, T+p*i/r)))/.1);\n    }\n    O = exp(log(O.gbar)*.1);O /= O.a;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"ltjSRR","filepath":"https://soundcloud.com/atmosphere-asmr/thunder-storm-relaxing-nature-soundscapes","previewfilepath":"https://soundcloud.com/atmosphere-asmr/thunder-storm-relaxing-nature-soundscapes","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Heading Home: https://www.shadertoy.com/view/tsdczN\n//Render road, grass, cars and lightning\n\nfloat hash(vec2 p)\n{\n \treturn fract(cos(mod(p.x*314.+p.y*159.,899.))*2653.);\n}\nfloat value(vec2 p)\n{\n    vec2 f = floor(p);\n    vec2 s = p-f;\n    s *= s*(3.-s-s);\n    const vec2 o = vec2(0,1);\n    \n \treturn mix(mix(hash(f+o.xx),hash(f+o.yx),s.x),\n               mix(hash(f+o.xy),hash(f+o.yy),s.x),s.y);\n}\nvoid mainImage(out vec4 color, in vec2 coord)\n{\n    vec2 u = (coord-.5*iResolution.xy)/iResolution.y;\n    //Perspective skew\n    u /= (1.-.4*u.y);\n    //Rotate view\n    float a = .01+.01*cos(iTime*.1);\n    vec2 r = sqrt(vec2(1.-a,a));\n    u *= mat2(r.x,-r.y,r.y,r);\n    \n    //Scroll speed\n    vec2 S = vec2(iTime,0)*r*.2,\n    //Curved coordinates\n    c = u+S;\n    c.y += (value(c/2.)-.5)*.2;\n    \n    //Hash for texturing\n    float h1 = (value(c*16.)*.3+value(c*32.)+value(c*64.)+\n                value(c*128.)+value(c*256.)+value(c*512.)*.7)/5.;\n    \n    //Offset for lighting\n    vec2 o = vec2(value(c),value(-c));\n    \n    //Offset hash for bump lighting\n    float h2 = (value(c*16.+o)*.3+value(c*32.+o)+value(c*64.+o)+\n                value(c*128.+o)+value(c*256.+o)+value(c*512.+o)*.7)/5.;\n    //Grass/road texture\n\tvec3 g = vec3(h1*h1);\n    g *= 1.+.6*abs(value(c*4.)+value(c*8.)-1.);\n    //Road lines\n    float s = smoothstep(.008,.004,abs(abs(c.y)-.17))+\n    smoothstep(.01,.006,abs(c.y))*smoothstep(.04,.038,abs(mod(c.x,.3)-.15));\n    //Road\n    float e = smoothstep(.215,.21,abs(c.y)+h1/5e1);\n    //Blend road and grass\n    g = mix(pow(g,vec3(1.2,1,1.5)),g*.4+.4*s,e);\n    \n    //Add car\n    float p = mod(iTime*.8+cos(iTime*.7)*.4,5.)-3.;\n    g *= .1+.9*step(.010,length(max(abs(c+.1-S-vec2(p+.02,0)*r)-vec2(.07,.04),0.)));\n    g *= .2+.8*step(.001,length(max(abs(c+.1-S-vec2(p+.04,0)*r)-vec2(.01,.06),0.)));\n    \n    //Add car headlights\n    vec3 l = max(u.x-p-pow(c.y+(u.x-p)*-.2+.07,2.)*20.,0.)*vec3(.8,.78,.66)/(20.*(p-u.x)*(p-u.x));\n        l += max(u.x-p-pow(c.y+(u.x-p)*+.2+.13,2.)*20.,0.)*vec3(.8,.78,.66)/(20.*(p-u.x)*(p-u.x));\n    \n    //Tail light\n    l += max(p-.16-u.x-pow(c.y+.1,2.)*8.,0.)*vec3(1,.2,.08)/(.05+50.*(p-.16-u.x)*(p-.16-u.x));\n    \n    //Hill shading\n    l += .1*value(c*mat2(.3,2.7,-6,1))+.1*smoothstep(.4,.0,abs(c.y));\n    \n    //Add lightning\n    float b = pow(value(c*.4+iTime)*value(c*.6-iTime)*cos(iTime*4.)*cos(iTime*5.),4.);\n    l += clamp(mix(h1,h2,9.-4.*e)*b,0.,1.)*vec3(6,9,15);\n    \n    //Add rain\n    vec3 col = mix(g*l,vec3(.2,.2,.3),.1*pow(value(((c-S)/(c.y+1.5)/.8+S)*mat2(1,8,-190,9)+iTime*8.),3.));\n\n    color = vec4(max(col*sqrt(col)*2e1,0.),1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}