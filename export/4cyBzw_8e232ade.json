{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"\nfloat drawCircle(vec2 uv,float radius,vec2 position) {\n    vec2 offset=position;\n    float x =uv.x - offset.x;\n    float y =uv.y - offset.y;\n    float circleOutput=length(vec2(x,y))-radius;\n    \n\n    circleOutput=step(0.,circleOutput);\n    return circleOutput;\n    \n\n}\n\nfloat drawRectangle(vec2 uv,float size,vec2 position) {\n    vec2 offset = position;\n    float x =uv.x - position.x;\n    float y =uv.y - position.y;\n    float rectangleOutput;\n    \n    rectangleOutput=  max(abs(x),abs(y))-((sin(2.*iTime)+1.5)/2.)*size;\n    rectangleOutput=step(0.,rectangleOutput);\n    return rectangleOutput;\n}\n\nvec3 drawScene(vec2 uv){\n    vec3 color=vec3(0.);\n    float c1 = drawCircle(uv,0.2,vec2(-0.5,0.15));\n    float c2 = drawCircle(uv,0.2,vec2(0.5,0.15));\n    float r1 = drawRectangle(uv,0.175,vec2(0,-0.15));\n    color = mix(vec3(1.,0.,0.), color, c1);\n    color = mix(vec3(1.,0.,0.), color, c2);\n    color = mix(vec3(0.,0.,1.), color, r1);\n\n    return color;\n}\nvec3 colorShape(float mask, vec3 color){\n    return mask*color;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 sceneCol = vec3(drawScene(uv));\n    \n    fragColor = vec4(sceneCol,1.0);\n    \n    \n    \n    \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4cyBzw","date":"1733929649","viewed":29,"name":"circles and rectangle","username":"drissrougui","description":"Drawing shapes","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["training"],"hasliked":0,"parentid":"","parentname":""}}