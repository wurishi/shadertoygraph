{"ver":"0.1","info":{"id":"mtyXRV","date":"1686205262","viewed":44,"name":"fracDS","username":"SiS_sos","description":"The screen represents the complex plane. Each pixel is colored using the argument of its image after applying a certain function to it many times.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["complexnumbers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265359\n#define e vec2(1, 0)\n#define i vec2(0, 1)\n#define i_inv vec2(0, -1)\n\nfloat atan2(in float y, in float x) {\n    bool s = (abs(x) > abs(y));\n    return mix(PI / 2.0 - atan(x,y), atan(y,x), s);\n}\n\nfloat c_arg(in vec2 z) {\n    return atan(z.y, z.x);\n}\n\nvec2 conj(vec2 z) {\n    return vec2(z.x, -z.y);\n}\n\nvec2 c_mult(vec2 z1, vec2 z2) {\n    return vec2(z1[0] * z2[0] - z1[1] * z2[1], z1[0] * z2[1] + z1[1] * z2[0]);\n}\n\nvec2 c_div(vec2 z1, vec2 z2) {\n    return 1.0 / length(z2) * c_mult(z1, conj(z2));\n}\n\nvec2 c_exp(vec2 z) {\n    return exp(z[0]) * vec2(cos(z[1]), sin(z[1]));\n}\n\nvec2 c_cos(vec2 z) {\n    return 0.5 * (c_exp(c_mult(i, z)) + c_exp(c_mult(-i, z)));\n}\n\nvec2 c_sin(vec2 z) {\n    return c_mult(0.5 * i_inv, (c_exp(c_mult(i, z)) - c_exp(c_mult(-i, z))));\n}\n\nvec2 c_tan(vec2 z) {\n    vec2 n = c_exp(c_mult(i, z)) - c_exp(c_mult(-i, z));\n    vec2 d = c_exp(c_mult(i, z)) + c_exp(c_mult(-i, z));\n    return c_div(c_mult(i_inv, n), d);\n}\n\nvec2 c_pow(vec2 z, float c) {\n    float theta = c_arg(z);\n    return pow(length(z), c) * vec2(cos(c * theta), sin(c * theta));\n}\n\nvec2 tan_z_div_z(vec2 z) {\n    return c_div(c_tan(z), z);\n}\n\nvec2 pow_tan_z_div_z(vec2 z, float c) {\n    return c_div(c_pow(c_tan(z), c), c_pow(z, c));\n}\n\n#define ITERATIONS 5\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n\tvec2 pos = 2.5 * uv.xy;\n\n    for (int k = 0; k < ITERATIONS; k++) {\n        pos = tan_z_div_z((0.5 * cos(iTime) + 0.9) * pos);\n    }\n\n    float C = exp(-length(pos));\n\n    vec3 color = c_arg(pos) * vec3(1.0, 1.0, 1.0);\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}