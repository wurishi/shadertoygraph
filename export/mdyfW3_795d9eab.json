{"ver":"0.1","info":{"id":"mdyfW3","date":"1698701105","viewed":46,"name":"Mondrian exercise","username":"wafflecopter","description":"Piet Mondrian exercise from The Book of Shaders","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mondrian","bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float line_width = 10.0;\n\nvec3 beige = vec3(0.945,0.941,0.877);\nvec3 black = vec3(0.0);\nvec3 red = vec3(0.765,0.110,0.059);\nvec3 blue = vec3(0.171,0.405,0.690);\nvec3 yellow = vec3(0.885,0.771,0.334);\n\n\n// Test if current pixel position `pos` is inside of a line described by\n// a `c` coordinate, `w` line width, and `start` start of line. \nfloat line(vec2 pos, float c, float w, float start) {\n\treturn 1.0 - step(c, pos.y) * step(pos.y, c + w) * step(start, pos.x);\n}\n\n// Pass through a normalized line width and coordinate\n// describing a horizontal line to the `line` function\nfloat horizontal_line(vec2 pos, float y, float start) {\n    float hlr = line_width / iResolution.y;\n    return line(pos, y, hlr, start);\n}\n\n// Pass through a normalized line width and coordinate\n// describing a vertical line to the `line` function. \n// The `line` fn was first written for horizortal so the\n// vertical `pos` is flipped it will text along the x\n// axis instead of the y.\nfloat vertical_line(vec2 pos, float x, float start) {\n    float vlr = line_width / iResolution.x;\n    return line(vec2(pos.y, pos.x), x, vlr, start);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    \n    // Set the fallback background color\n    vec3 color = beige;\n    \n    // Draw colorful rectangles to the screen.\n    if (st.x<0.2 && st.y>0.6) {\n        color = red;\n    }\n    \n    if (st.x>0.95 && st.y>0.6) {\n        color = yellow;\n    }\n    \n\tif (st.x>0.8 && st.y<0.1) {\n        color = blue;\n    }    \n\n    // Multiply color by result of horizontal/vertical \n    // line tests. If current frag position falls within\n    // a line, color will be multiplied by 0.0 resulting\n    // in black. Otherwise, it will multiply by 1.0\n    // resulting in the previously set background color.\n    color *= horizontal_line(st, 0.6, 0.0);\n    color *= horizontal_line(st, 0.81, 0.0);\n    color *= horizontal_line(st, 0.08, 0.2);\n    \n\tcolor *= vertical_line(st, 0.2, 0.0);\n    color *= vertical_line(st, 0.08, 0.6);\n    color *= vertical_line(st, 0.95, 0.0);\n    color *= vertical_line(st, 0.8, 0.0);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}