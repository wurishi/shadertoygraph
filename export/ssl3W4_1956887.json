{"ver":"0.1","info":{"id":"ssl3W4","date":"1615993334","viewed":219,"name":"4. rectangle","username":"Sp3cim4n","description":"Learning Shaders","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["rectangle","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat Band(float t, float start, float end, float blur)\n{\n    float step1 = smoothstep(start - blur, start + blur, t);\n    float step2 = smoothstep(end + blur, end - blur, t);\n    \n    return step1 * step2;\n}\n\nfloat Rect(vec2 uv, float left, float right, float top, float bottom, float blur)\n{\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, top, bottom, blur);\n    return band1 * band2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= vec2(0.5);\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 color = vec3(1., 1., .0);\n    \n    float mask = Rect(uv, -.3, .3, -.2, .2, 0.01);\n    \n    color *= mask;\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}