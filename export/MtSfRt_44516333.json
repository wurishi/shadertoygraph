{"ver":"0.1","info":{"id":"MtSfRt","date":"1516818545","viewed":106,"name":"groovyballs","username":"Hamneggs","description":"I just finished something and decided to have some fun. Doesn't feature a fast way of doing anything.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["noise","metaballs","groovy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Set up the \"camera\"\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define CIRCLE_SIZE .08\n//#define LOW_QUALITY\n\nfloat circle( in vec2 uv, in vec2 p, in float r)\n{\n    return length(uv-p)-r;\n}\n\nfloat hash(vec2 p)  // replace this by something better\n{\n    return fract(sin(dot(p.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise( in vec2 x )\n{\n\n    x *= 20.;\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\t\n    return     mix(mix( hash(p+vec2(0,0)), \n                        hash(p+vec2(1,0)),f.x),\n                   mix( hash(p+vec2(0,1)), \n                        hash(p+vec2(1,1)),f.x),f.y);\n}\n\nfloat fbm( in vec2 x )\n{\n    #ifdef LOW_QUALITY\n    float r = noise(x     )*.50000+\n              noise(x*2.00)*.25000+\n        \t  noise(x*4.00)*.12500;\n    return r * 1.142857143;\n    #else\n    float r = noise(x     )*.50000+\n              noise(x*2.00)*.25000+\n        \t  noise(x*4.00)*.12500+\n        \t  noise(x*8.00)*.06250+\n        \t  noise(x*16.0)*.03125;\n    return r * 1.032258;\n    #endif\n}\n\t\n// polynomial smooth min (k = 0.1);\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Set up the \"camera\"\n    vec2 uv = fragCoord / iResolution.xy - 0.5;\n\tuv.x *= iResolution.x/iResolution.y; //fix aspect ratio\n    \n    // Generate some random positions.\n    float t = iTime * .125;\n    vec2 p0 = vec2( fbm( vec2(t+36948.2028, t+22630.927) ),\n                    fbm( vec2(t+9837.028,   t+1028.293) ));\n    vec2 p1 = vec2( fbm( vec2(t+83936.2028, t+29840.927) ),\n                    fbm( vec2(t+1238.028,   t+1028.293) ));\n    vec2 p2 = vec2( fbm( vec2(t+20340.2028, t+5674.927) ),\n                    fbm( vec2(t+11234.028,  t+5846.293) ));\n    vec2 p3 = vec2( fbm( vec2(t+36948.2028, t+22345.927) ),\n                    fbm( vec2(t+3422.028,   t+3409.293) ));\n    vec2 p4 = vec2( fbm( vec2(t+1234.2028,  t+5684.927) ),\n                    fbm( vec2(t+9837.028,   t+9986.293) ));\n    \n    // Put them in normalized space.\n    p0 = p0*2.0 - 1.0;\n    p1 = p1*2.0 - 1.0;\n    p2 = p2*2.0 - 1.0;\n    p3 = p3*2.0 - 1.0;\n    p4 = p4*2.0 - 1.0;\n    \n    // Get the compound distance field distance value.\n    float d = smin( circle(uv, p0, CIRCLE_SIZE), circle(uv, p1, CIRCLE_SIZE), .3);\n    d = smin( d, circle(uv, p2, CIRCLE_SIZE), .3);\n    d = smin( d, circle(uv, p3, CIRCLE_SIZE), .3);\n    d = smin( d, circle(uv, p4, CIRCLE_SIZE), .3);\n    \n    // Do some swanky stuff.\n    // First what we do is take the classic (1-dist), and square it,\n    // then we add it to a smooth step of the same value.\n    // Afterwards we clamp it between zero and one to avoid tearing the\n    // time space continuum, and then we apply gamma correction and ship it out.\n    d = 1.0 - d;\n    float c = clamp(0.0, 1.0, pow(d, 4.0)+ smoothstep(.88, .90, d));\n    c = pow(c, .45454545);\n    \n    // When I said ship it out, I meant we do some motion blur.\n    vec4 prev = texture(iChannel0, fragCoord/iResolution.xy);\n    fragColor = mix(prev, vec4(c,c,c,1.0), .125);\n}","name":"Buf A","description":"","type":"buffer"}]}