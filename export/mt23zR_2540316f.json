{"ver":"0.1","info":{"id":"mt23zR","date":"1672937159","viewed":127,"name":"logistic mappping","username":"tomviolin","description":"logistic mapping","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["logisticmapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame < 3) {\n        fragColor = vec4(0);\n    } else {\n        fragColor=texture(iChannel0,fragCoord/iResolution.xy);\n        fragColor.rgb = hsv2rgb(fragColor.r+iTime*0.333+fragCoord.x/iResolution.x*10.,1.0+0.0*fragColor.r,sqrt(fragColor.r));\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int SUBITERS=10;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 im = iMouse.xy/iResolution.xy;\n    im.y = 1.0-im.y;\n    vec2 uv = (fragCoord+0.001*vec2(mod(iTime,.1)-0.050,mod(iTime,.033)-0.0165))/iResolution.xy * (1.00);\n    vec4 kval = texture(iChannel0,uv);\n    float close=0.0;\n    for (int iter = 0; iter < SUBITERS; iter ++ ){\n        float itert = float(iter)/3.141592653 * float(SUBITERS) + iTime;\n        // Normalized pixel coordinates (from 0 to 1)\n        float time=itert;\n        float tim = (1.0+iTime*iTime*iTime*0.01);\n        vec2 p = vec2(\n                (uv.x-0.671)/1.0/tim+0.671+0.01*float(float(iter%4))*.001/tim,\n                (uv.y-0.499)/1.0/tim+0.499+0.01*float(float(iter%5))*.001/tim);\n        float r = (p.x*(0.46+mod(time,0.00002))+3.54);//+((iTime+1000.)/1000.);\n        float val=0.0;\n        float x=0.000001+mod(iTime*5.0,1.)*0.;\n        for (int i = 0; i < ITERS; ++i){\n            x=x*r*(1.0-x);\n            if (i>ITERS*3/6)\n            close += clamp(1.2/tim-abs(p.y-x)*iResolution.y,0.,1.)*tim;\n        }\n    }\n    kval= kval * 0.1 + vec4(log(close+.99)*0.2) * 0.9;\n    \n    fragColor = vec4(kval);\n\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const int ITERS=550;\n\n\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 hsv2rgb(float r,float g, float b){\n    return hsv2rgb(vec3(r,g,b));\n}","name":"Common","description":"","type":"common"}]}