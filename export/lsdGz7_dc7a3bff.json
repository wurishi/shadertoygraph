{"ver":"0.1","info":{"id":"lsdGz7","date":"1448760465","viewed":138,"name":"HBD","username":"rigster","description":"Distorted letters, made for a friend's birthday","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rasterbars","oldschooldemo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"int bvec[65];\n\nbool insideText(in vec2 uv)\n{\n    float softIdx = uv.x * 13.0 - 0.5 + floor(uv.y * 8.0 - 2.0) * 13.0;\n    bool ret = false;\n        \n\tfor (int i = 0; i < 65; i++)\n    {\n\t\tif (softIdx >= float(i) && softIdx < float(i + 1))\n        {\n\t\t\tret = bvec[i] > 0;\n        }\n\t}\n\treturn ret;\n}\n\nvoid initText()\n{\n    bvec[0] = 0;\n    bvec[1] = 1;\n    bvec[2] = 0;\n    bvec[3] = 1;\n    bvec[4] = 0;\n    bvec[5] = 1;\n    bvec[6] = 1;\n    bvec[7] = 0; \n    bvec[8] = 0;\n    bvec[9] = 1;\n    bvec[10] = 1;\n    bvec[11] = 0;\n  \tbvec[12] = 0;\n    \n    bvec[13] = 0;\n    bvec[14] = 1;\n    bvec[15] = 0;\n    bvec[16] = 1;\n    bvec[17] = 0;\n    bvec[18] = 1;\n    bvec[19] = 0;\n    bvec[20] = 1; \n    bvec[21] = 0;\n    bvec[22] = 1;\n    bvec[23] = 0;\n    bvec[24] = 1;\n  \tbvec[25] = 0;\n\n    bvec[26] = 0;\n    bvec[27] = 1;\n    bvec[28] = 1;\n    bvec[29] = 1;\n    bvec[30] = 0;\n    bvec[31] = 1;\n    bvec[32] = 1;\n    bvec[33] = 0; \n    bvec[34] = 0;\n    bvec[35] = 1;\n    bvec[36] = 0;\n    bvec[37] = 1;\n  \tbvec[38] = 0;\n\n    bvec[39] = 0;\n    bvec[40] = 1;\n    bvec[41] = 0;\n    bvec[42] = 1;\n    bvec[43] = 0;\n    bvec[44] = 1;\n    bvec[45] = 0;\n    bvec[46] = 1; \n    bvec[47] = 0;\n    bvec[48] = 1;\n    bvec[49] = 0;\n    bvec[50] = 1;\n  \tbvec[51] = 0;\n\n    bvec[52] = 0;\n    bvec[53] = 1;\n    bvec[54] = 0;\n    bvec[55] = 1;\n    bvec[56] = 0;\n    bvec[57] = 1;\n    bvec[58] = 1;\n    bvec[59] = 0; \n    bvec[60] = 0;\n    bvec[61] = 1;\n    bvec[62] = 1;\n    bvec[63] = 0;\n  \tbvec[64] = 0;\n \n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tinitText();\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 tuv = uv + vec2(0.03 + sin((1.0-uv.x) * uv.y * 10.0 + iTime) * 0.03, 0.03 + cos(uv.y * uv.x * 8.0 + iTime) * 0.03);\n    \n    if(insideText(tuv))\n    {\n        uv = vec2(1., 1.) - uv;\n        fragColor = vec4(fract(tuv.y*8.0)*0.5+0.5, fract(tuv.y*8.0)*0.7, fract(tuv.y*8.0)*0.7, 1.0);\n    }\n    else\n    {\n        //fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    }\n\t\n}\n\n","name":"","description":"","type":"image"}]}