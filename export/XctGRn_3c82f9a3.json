{"ver":"0.1","info":{"id":"XctGRn","date":"1711305589","viewed":65,"name":"truchet elements KIT preview.","username":"chenxianming","description":"truchet elements KIT preview.\nthanks for watching.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["truchet","elements"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n/*\n    Truchet elements KIT preview.\n    \n    -------------------------\n    |                       |\n    |           |           |\n    |     2     |     1     |\n    |           |           |\n    |  -------------------  |\n    |           | 020 | 030 |\n    |     3     | --------  |\n    |           | 010 | 123 |\n    ------------------------\n*/\n\n#define I iResolution\n#define A min( I.x, I.y )\n\nfloat type( vec2 u, int a ){\n\n    switch( a ){\n        case 0 :\n            u += u.x + u.y > 0. ? -.2 : .2;\n        break ;\n        \n        case 1 :\n            u.y -= .2, u.x = abs( u.x ) - .2;\n        break ;\n        \n        case 2 :\n            u -= .2;\n    }\n    \n    return length( u ) - .2;\n}\n\n\nfloat ft( vec2 u, float s, int a ){\n\n    float c = type( u, a );\n    \n    return smoothstep( 5. / A, 0., abs( c ) - s ) * step( max( abs(u.x), abs( u.y ) ) - .2, 0. );\n}\n\nfloat signRound( vec2 u, float s, int a ){\n\n    vec2 t = round( u / .2 );\n    \n    float p;\n    \n    u -= .2 * clamp( round( u / .2 ), -1., 1. );\n    \n    if( ((t != vec2(0) && t != vec2(-1) && t != vec2(-1,1) && t != vec2(-1)) && t != vec2( 1. )) && a == 0 )\n    p += smoothstep( 5. / A, 0., length(u) - s );\n    \n    if( (t != vec2(0) && t != vec2(-1,1) && t != vec2(-1) && t != vec2(1) ) && a == 1 )\n    p += smoothstep( 5. / A, 0., length(u) - s );\n    \n    if( ( t != vec2(0) && t != vec2(-1) && t != vec2( -1, 1 ) ) && a == 2 )\n    p += smoothstep( 5. / A, 0., length(u) - s );\n    \n    return p;\n\n}\n\nfloat grid( vec2 u, float s ){\n    return smoothstep( .1 / A, 0., max(\n        abs( u.x ),\n        abs( u.y )\n    ) - s );\n}\n\nfloat fractalEl( vec2 u, vec2 j ){\n\n    \n    float p;\n    \n    for( float i; i < 3.; i++ )\n        mod( i, 2. ) > 0. ? j.x += .4 : j.y += .4,\n        p += ft( u + j, .06, int( i ) ),\n        p += signRound( u + j, .06, int( i ) );\n    \n    return p;\n}\n\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    vec2 u = ( V * 2. - I.xy ) / A, j;\n\n    \n    float p;\n    \n    for( float i = 1.2; i > -1.2; i -= 1.19 ){\n        p += ft( u + vec2( i, -.5 ), .06, int( round( i / 1.2 + 1.2 ) ) );\n        p += signRound( u + vec2(i, -.5), .06, int( round( i / 1.2 + 1.2 ) ) );\n    }\n    \n    u *= 2.;\n    \n    j = vec2(1., .3);\n    \n    p += fractalEl( u, j );\n    \n    j = vec2( -1.2, .9 );\n    \n    p += grid( u + j, .4 ) * ( 1. - grid( u + j - vec2( .2, -.2 ), .2 ) ) * ( 1. - fractalEl( u, j + vec2( -.2, -.6 ) ) );\n    \n    u *= 1.5;\n    \n    p += ft( u, .06, 2 );\n    p += signRound( u, .06, 2 );\n    \n    U = vec4( p );\n}","name":"Image","description":"","type":"image"}]}