{"ver":"0.1","info":{"id":"XlBBDt","date":"1517495071","viewed":1438,"name":"Equalizer reproduction","username":"Ultraviolet","description":"First shader using sound.\nAttempt at reproducing Shadertoy's equalizer,","likes":8,"published":1,"flags":64,"usePreview":0,"tags":["sound","equalizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sSXWR","filepath":"https://soundcloud.com/home-net-vn/lemon-tree-fools-garden","previewfilepath":"https://soundcloud.com/home-net-vn/lemon-tree-fools-garden","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define NB_BARS\t\t32\n#define NB_SAMPLES\t16\n// WARNING : NB_BARS x NB_SAMPLES must be 512\n\n// space between bars (relative to bar width)\n#define SPACE\t\t0.15\n\n// space without bars, left and right (relative to window size)\n#define SIDE_SPACE  0.04\n\n// from here: www.shadertoy.com/view/XtjBzG\nvec3 heatColorMap(float t)\n{\n    t *= 4.;\n    return clamp(vec3(min(t-1.5, 4.5-t), \n                      min(t-0.5, 3.5-t), \n                      min(t+0.5, 2.5-t)), \n                 0., 1.);\n}\n\nvoid mainImage( out vec4 O, in vec2 I ) {\n    \n    vec2 uv = I/iResolution.xy;\n    \n    uv.x = (uv.x-SIDE_SPACE)/(1.-2.*SIDE_SPACE);\n    \n    if(uv.x<0. || uv.x > 1.)\n    {\n    \tO = vec4(0.);\n        return;\n    }\n    \n    float NB_BARS_F = float(NB_BARS);\n    int bar = int(floor(uv.x * NB_BARS_F));\n    \n    float f = 0.;\n    f = 0.;\n    \n    for(int t=0; t<NB_SAMPLES; t++)\n    {\n    \tf += texelFetch(iChannel0, ivec2(bar*NB_SAMPLES+t, 0), 0).r;\n    }\n    f /= float(NB_SAMPLES);\n    \n    f *= 0.85;\n    f += 0.02;\n    \n    vec3 c = heatColorMap(f);\n    \n    \n    float bar_f = float(bar)/NB_BARS_F;\n    \n    //c *= 1.-step(f, uv.y);\n    //c *= 1.-step(1.-SPACE*.5, (uv.x-bar_f)*NB_BARS);\n    //c *= 1.-step(1.-SPACE*.5, 1.-(uv.x-bar_f)*NB_BARS);\n    \n    c *= mix(1.,0., clamp((uv.y-f)*iResolution.y,0.,1.));\n    c *= clamp((min((uv.x-bar_f)*NB_BARS_F, 1.-(uv.x-bar_f)*NB_BARS_F)-SPACE*.5)/NB_BARS_F*iResolution.x, 0., 1.);\n    \n    O = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}