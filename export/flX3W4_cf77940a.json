{"ver":"0.1","info":{"id":"flX3W4","date":"1622044613","viewed":83,"name":"box dance","username":"geoffp","description":"playing around with patterns","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["patternboxes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float inBox ( vec2 uv, vec2 pmin, vec2 pmax ){\n    return step( pmin.x, uv.x ) * ( 1.0 - step( pmax.x, uv.x ) ) *  step( pmin.y, uv.y ) * ( 1.0 - step( pmax.y, uv.y ) ) ;\n}\n\nfloat widthBox ( vec2 uv, float xc, float yc, float xw, float yw ){\n    float minx = xc - xw / 2.0;\n    float maxx = xc + xw / 2.0;\n    float miny = yc - yw / 2.0;\n    float maxy = yc + yw / 2.0;\n    return inBox ( uv, vec2(minx,miny), vec2(maxx,maxy) );\n}\n\nvec3 boxes( vec2 uv)\n{\n   \n    float columns[6] = float[6]( .142, .285, .428, .571, .714, .857 );\n    float rows[4] = float[4]( .865, .625, .385, .145 );\n    vec3 result = vec3(0.0);\n    float mask = 0.0;\n    \n    for ( int i = 0; i < 24; i++ ){\n        mask = widthBox( uv, columns[i%6], rows[int(i/6)], mix(0.1,.2,abs(sin(iTime+float(i)*uv.x*.1))),mix(0.1,0.5,abs(sin(iTime+float(i)+.25*uv.x*.1))) );\n        result = mix ( result, vec3( (sin(iTime+float(i))+1.)/2.,(sin(iTime+float(i+3)+.855)+1.)/2.,(sin(iTime*3.+float(i+1)+.657)+1.)/2. ), mask );\n    }\n    \n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;   \n    vec3 col = boxes( uv );\n    fragColor = vec4(col,1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}