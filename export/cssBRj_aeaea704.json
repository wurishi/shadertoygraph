{"ver":"0.1","info":{"id":"cssBRj","date":"1689155094","viewed":104,"name":"Pamp Kali World All Build","username":"DENFOR","description":"2023.07.10   under test","likes":2,"published":1,"flags":0,"usePreview":1,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n/* Future Flash by Kali\nhttps://www.shadertoy.com/view/ftKBR3  */\n\n//#define ti iChannelTime[0]\n#define ti iTime-2.\nfloat time;\n\n#define resolution iResolution\n\nfloat st=.11*0.3, maxdist=20.,m,mc; float pi =3.14165 ;\nfloat td, t, yy;\nfloat z, ed, mo;\nvec3 neoncolor=vec3(0.,0.18,0.92 ) ; //vec3(1,0,0);\nvec3 lightpos, carpos, advcar;\nvec3 from;\nvec2 pos;\nvec3 cp;\nfloat h;\nfloat siroof = 0.;\nfloat lo;\nfloat det=.003;\nvec2 e = vec2(0, .006);\n\nconst float escena2=48.5;\nconst float escena3=55.;\nconst float escena4=61.5;\nconst float escena5=68.;\nconst float escena6=80.;\nconst float escena7=86.5;\nconst float escena8=105.;\nconst float escena9=111.;\n                 //   F   L   A    S   H     P   A     R    T     Y   -    2    0    9    8\n//#define f1 int[] (271,195,831,1006,819,  799,831,33567,3084,25600,  0,2437,3207,3462,3463)\n                //    P   C        O   E     K   A     K    I         C    L    U    B\n  #define f1 int[] (799,207,  0, 255,463,41219,831,41219,3276,    0,207, 195, 243,3463,   0)\n\n               //     C   O      D   E      B     Y        K   A     L    I\n//#define f2 int[] (207,255,524519,463,0,9199,25600,0, 41219,831,  195,3276,  0,     0,0)\n               //                                          D   E     M    F   O      R\n  #define f2 int[] (207,255,524519,463,0,9199,25600,0,524519,463,24627, 271,255, 33567,0)\n\n//#define f3 int[] (24627,243,1006,3276,207,0,9199,25600,0,243,207,3084,243,24627,3276)\n  #define f3 int[] (    0,  0,   0,   0,  0,0,   0,    0,0,  0,  0,   0,  0,    0,   0)\nfloat frase;\n\nvec4 text(vec2 U) {\n    U.x+=.67; \n    vec2 pp = U*15., A, D;pp.y-=.5*10.+sin(floor(pp.x/1.4)*2.+time*2.*2.)*.1*3.;\n\tvec4 c = vec4(0), S = vec4(.5,-.5,1,0), V;\n    for (int l, i=min(iFrame*2,0); i<15; i++)  {\n        if (frase==1.) l=f1[i];\n        if (frase==2.) l=f2[i];\n        if (frase==3.) l=f3[i];\n        float v = 1.;\n        vec2 p=pp-.5;\n        p*=1.+dot(p,p);\n        p+=.5;\n        for( int i=0; i<20; i++, l/=2)\n            if (l%2 > 0)\n            {\n                V = vec4[](S.wwwx,S.wxwx,S.wzxw,S.xzxw,S.zxwx,S.zwwx,S.xwxw,S.wwxw,S.wxxw,S.xxxw,S.xwwx,S.xxwx,S.wwxx,S.xxxx,S.wzxy,S.xxxy,S.wxxy,S.xwxx,S.wxxx,S.xzxy)[i],\n                A = p - V.xy, D = V.zw,\n                v = min(v,length(A-D*clamp(dot(A,D)/dot(D,D),.0,1.)));\n            }\n        c += step(v,.12) * (1.+pp.y*.0) * vec4(1.5,0.2,0.3,0);\n        pp.x -= 1.4;\n     }\n     return c;\n}\n\nvec3 path(float t) {   time =35.-30.*0.125+(t) ;   // ad +10. or -10. or -30.\n    t-=smoothstep(escena8+3.,escena8+23.,time)*8.;\n    t-=smoothstep(escena8+13.,escena8+30.,time)*5.;                      //smoothstep(-20.,5.,t)\n    vec3 p=mix(vec3(sin(t*.2)*5.,6.3+cos(t)*.1,t),vec3(0.,(-t-3.)*0.+6.,0.),smoothstep(15.,40.,time));\n    p=mix(p,vec3(sin(t*.2)*7.,-16.*0.+6.5,t),smoothstep(35.,45.,time));\n           \n         //62~82 seconds  \n  //  if(time>escena4) p=vec3(sin(t*.3)*19.,-21.*0.8,cos(t*.3)*19.);\n    \n        // 82~105 seconds\n    float s=sin(t*.3);\n//    if(time>escena6) p=vec3(s*s*s*3.,-20.5,t*5.-115.-escena6);\n  \n        // 105~109 seconds\n    float b=smoothstep(escena8,escena8+4.,time);\n //   p.x*=(1.-b);\n  //  p.y-=b*5.;\n    return p;\n}\n\nmat3 lookat(vec3 dir, vec3 up) {\n\tdir=normalize(dir);vec3 rt=normalize(cross(dir,normalize(up)));\n    return mat3(rt,cross(rt,dir),dir);\n}\n\n\nmat2 rot(float a) {\n\tfloat s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nfloat hash(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\n\nvec3 fractal(vec2 p)\n{\n    vec2 pp=p;\n    p = abs(fract(p * .05) - .5);\n    float ot1 = 1000., ot2 = ot1;\n    for (float i = 0.; i < 6.; i++) {\n        p = abs(p) / clamp(abs(p.x * p.y), 0.15, 5.) - vec2(1.5, 1);\n                                                                             //speed of tint 0.7                    \n        ot1 = min(ot1, abs(p.x) + step(time,25.)*.8*step((length(p)) * .1 + fract(time * 1.0 + float(i) * .2), .5 * floor(p.y)))*.8;\n        ot2 = min(ot2, length(p));\n    }\n    ot1 = smoothstep(0.1,0.05,ot1) ; //more colorful (.1*2., .15, ot1);\n    vec3 col = vec3(p, 0) * ot2 * ot1 * .3 + ot1 * .3; \n    col.rb*=rot(pp.y*.3);\n  \n   return abs(col);  // De  abs(col), col.ggr, col.rrr\n\n }                             //         col.rrg,\n\n//////////////////////////////////////////////////////  another fractal()\n/*\nvec3 fractal(vec2 p) {\n  p=fract(p*.1);\n  float m=1000.;\n  for (int i=0; i<7; i++) {\n    p=abs(p)/clamp(abs(p.x*p.y),.25,2.)-1.2;\n    m=min(m,abs(p.y)+fract(p.x*.3+time*.125+float(i)*.25));\n  }\n  m=exp(-6.*m);\n  return m*vec3(abs(p.x),m,abs(p.y));\n}\n*/\n/////////////////////////////// other fractal(Spiral Riders)\nvec3 fractalc(vec2 p) {\n    p*=rot(iTime*.1*0.5)*(.0002+.7*pow(smoothstep(0.,.5,abs(.5-fract(iTime*.01*0.5))),3.));\n    p.y-=.2266;\n    p.x+=.2082;\n    vec2 ot=vec2(100.);\n    float m=100.;\n    for (int i=0; i<150; i++) {\n        vec2 cp=vec2(p.x,-p.y);\n\t\tp=p+cp/dot(p,p)-vec2(0.,.25);\n        p*=.1;\n        p*=rot(1.5);\n        ot=min(ot,abs(p)+.15*fract(max(abs(p.x),abs(p.y))*.25+iTime*.1*0.5+float(i)*.15));\n        m=min(m,abs(p.y));\n    }\n    ot=exp(-200.*ot)*2.;\n    m=exp(-200.*m);\n    return vec3(ot.x,ot.y*.5+ot.x*.3,ot.y)+m*.2;\n}\n\n///////////////////////////////////////// fractal Neon Dance\nvec3 fractald(vec2 p) {\n    vec2 pos=p;\n    float d, ml=100.;\n    vec2 mc=vec2(100.);\n    p=abs(fract(p*.1)-.5);\n    vec2 c=p;\n    for(int i=0;i<8;i++) {\n        d=dot(p,p);\n        p=abs(p+1.)-abs(p-1.)-p;\n    \tp=p*-1.5/clamp(d,.5,1.)-c;\n        mc=min(mc,abs(p));\n        if (i>2) ml=min(ml*(1.+float(i)*.1),abs(p.y-.5));\n    }\n    mc=max(vec2(0.),1.-mc);\n    mc=normalize(mc)*.8;\n    ml=pow(max(0.,1.-ml),6.);\n    return vec3(mc,d*.4)*ml*(step(.7,fract(d*.1+iTime*.5+pos.x*.2)))-ml*.1;\n}\n\n////////////////////////////////////////\n\n\n\nfloat line( vec2 p, vec2 a, vec2 b)\n{\n  vec2 pa = p - a, ba = b - a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n  return length( pa - ba*h );\n}\n\nfloat logo(vec2 uv) {\n    uv*=-.17;\n    uv=-uv.yx;\n    uv*=rot(-.35);\n    /*\n    float c = line(uv, vec2(-.65,.3), vec2(-.65,-.3));    \n\tc = min(c,line(uv, vec2(-.65,-.3), vec2(-.35,-.3)));\n\tc = min(c,line(uv, vec2(-.15,.3), vec2(-.15,-.3)));\n\tc = min(c,line(uv, vec2(.25,.3), vec2(.05,-.3)));\n\tc = min(c,line(uv, vec2(.3,.3), vec2(.50,-.3)));\n\tc = min(c,line(uv, vec2(.5,-.3), vec2(.2,-.3)));*/\n    \n       float c = line(uv, vec2(-1.20,.3), vec2(-1.20,-.3)); //P   \n\tc = min(c,line(uv, vec2(-1.20,.3), vec2(-.90,.3)));\n\tc = min(c,line(uv, vec2(-1.20,.0), vec2(-.9,-.0)));\n\tc = min(c,line(uv, vec2(-.90,.3), vec2(-.90,-.0)));      //P\n    \n\tc = min(c,line(uv, vec2(-.70,.3), vec2(-.70,-.3)));     // C\n\tc = min(c,line(uv, vec2(-.70,.3), vec2(-.50, .3)));     // C\n    c = min(c,line(uv, vec2(-.70,-.3), vec2(-.50,-.3)));     // C\n    \n    c = min(c,line(uv, vec2(-.70+0.5,.3), vec2(-.70+0.5,-.3)));     // C\n\tc = min(c,line(uv, vec2(-.70+0.5,.3), vec2(-.50+0.5, .3)));     // C\n    c = min(c,line(uv, vec2(-.70+0.5,-.3), vec2(-.50+0.5,-.3)));    // C \n    \n    c = min(c,line(uv, vec2(0.20,.3), vec2(.20,-.3)));  // L\n    c = min(c,line(uv, vec2(0.20,-.3), vec2(.40,-.3)));  // L\n    \n    c = min(c,line(uv, vec2(0.60,.3), vec2(.60,-.3)));  // U\n    c = min(c,line(uv, vec2(0.60,-.3), vec2(.80,-.3)));  // U\n    c = min(c,line(uv, vec2(0.80, .3), vec2(.80,-.3)));  // U\n    \n    c = min(c,line(uv, vec2(1.10,.3), vec2(1.10,-.3)));  //  B\n    c = min(c,line(uv, vec2(1.10,.3), vec2(1.40,.3)));  // B\n    c = min(c,line(uv, vec2(1.40, .3), vec2(1.40,-.3)));  // B\n    c = min(c,line(uv, vec2(1.10, .0), vec2(1.40,-.0)));  // B\n    c = min(c,line(uv, vec2(1.10,-.3), vec2(1.40,-.3)));  // B\n    \n    ////////////////////////////////////// 17  OOTANI\n    c = min(c,line(uv, vec2(-.70,.2-0.7), vec2(-.70,-.2-0.7))); // 1\n    c = min(c,line(uv, vec2(-.50,.2-0.7), vec2(-.40, .2-0.7))); // 7\n    c = min(c,line(uv, vec2(-.40,.2-0.7), vec2(-.45, -.2-0.7)));\n    \n    c = min(c,line(uv, vec2(-.10,.2-0.7), vec2(-.1, -.2-0.7)));// O\n    c = min(c,line(uv, vec2( .1,.2-0.7), vec2(  .1, -.2-0.7)));\n    c = min(c,line(uv, vec2( .1,.2-0.7), vec2( - .1, .2-0.7)));\n    c = min(c,line(uv, vec2( .1,-.2-0.7), vec2( - .1, -.2-0.7))); // O\n    \n    c = min(c,line(uv, vec2( .4,.2-0.7), vec2(  .4, -.2-0.7))); // T\n    c = min(c,line(uv, vec2( .3,.2-0.7), vec2(  .5,  .2-0.7))); \n    \n    c = min(c,line(uv, vec2( .75,.2-0.7), vec2(  .7,  -.2-0.7))); // A\n    c = min(c,line(uv, vec2( .75,.2-0.7), vec2(  .85,  -.2-0.7)));\n    \n    c = min(c,line(uv, vec2( 1.05,.2-0.7), vec2(  1.05, -.2-0.7)));  // N\n    c = min(c,line(uv, vec2( 1.25,.2-0.7), vec2(  1.25, -.2-0.7))); \n    c = min(c,line(uv, vec2( 1.05,.2-0.7), vec2(  1.25, -.2-0.7)));  // N\n    \n    c = min(c,line(uv, vec2( 1.45,.2-0.7), vec2(  1.45, -.2-0.7)));   // I\n    \n    \n    return smoothstep(.08,.05,c);\n}\n\n\nfloat obj;\n/////////////////////////////  terrain\nfloat map(vec2 p) {\n    pos = p;\n    vec2 p2=p;\n    h=0.;\n //   h-=smoothstep(35.,40.,time)*25. -smoothstep(escena7,escena7+5.,max(0.,time+p.y-75.));\n  /*  if (length(p)<5.*1.5 && time<escena6) {\n        h-=exp(-2.*length(p))*100.;    // donut ring expand(*1.5)\n        return h;\n    } */  // /*~ */ delete (1)\n    //////////////////////  Polar exis change\n//    if (time<escena6 /*80.*/ ) p*=rot(.5*0.),p=vec2(atan(p.x,p.y)/3.1416*4.*10.*2., length(p));\n        // delete (2)step\n  siroof=0.;\n    obj=0.;    \n      // around high buildings    hash() noise() is OK\n    h+=(hash(floor(p))*3.+hash(floor(p*2.*2.))*1.)*step(.7,/*hash*/noise(floor(p*.5)))*0.5;\n    h+=hash(floor(p*2.+130.))*1.*2.; // ad step(3)\n//    h+=hash(floor(p*8.+223.))*1.; // ad\n //   h+=hash(floor(p+521.))*1. ;   // ad\n    if (hash(floor(p+321.))>.7) siroof = 1.*0.5;  //delete  neon light > 0.7\n \n   if(time>30.&&time<escena6) {    // donut ring\n     /////////////  default case(AAA-1)\n //     h=-20.+sin(floor(p.x*2.)*.5+time*1.0) +(time<escena3?abs((/*cos*/sin(floor(p.y*0.5)+time*0.5)*20.)/20.):(cos(p.y*0.5+time*0.5)*20.)/20.)*2.*(1.+0.5*sin(time*0.3));\n   \n    //////////////          Case(AAA-2)\n    //  h=-20.+sin(floor(p.x*2.)*.5+time*1.8) ; //+(time<escena3?abs((cos(p.y*.5)*20.)/20.):(cos(p.y*.5)*20.)/20.)*4./4.;\n   \n    //   h-=step(fract(p.x*2.), .3)*20.;\n        pos = p;\n    }                          // delete step(4)\n    \n    h=h*(.15+smoothstep(5.,10.,time));  // Srart (5~10 second)\n    if(time<11.) {\n        lo=logo((p2-vec2(9.*0.58,-22.*1.3)));    // PC OEKAKI CLUB  17OTANI\n        h=max(lo,h);                    // min(lo,h);\n    }\n  ////////////////////////////////////////////\n  // case(A1)\n//    float h2=length(min(sin(p),step(.5,hash(floor(p)))))*smoothstep(.0,3.5,abs(p.y-19.5))*3.-23.5 +step(3.,abs(p.y-19.5));\n//  /* float*/  h2= mix(h2,-25.+hash(floor(p))*2.-smoothstep(5.,10.,carpos.z-p.y)*2. ,smoothstep(escena6-4.,escena6-1.,time));\n    \n // case(A2)\n    //float h2=length(min(sin(p),step(.5,hash(floor(p)))))*smoothstep(.0,3.5,abs(p.y-19.5))*3.-23.5+step(3.,abs(p.y-19.5));\n /*  float h2;\n     h2=mix(h2,-25.+hash(floor(p))*2.-smoothstep(5.,10.,carpos.z-p.y)*2.,smoothstep(escena6-4.,escena6-1.,time));\n */\n /////////////////////////////////////\n     // donut ring =>  ( 80.<time )wave box\n // if (time<escena6 /* 80. */) h = mix(h, h2,smoothstep(escena5,escena5+5.,time));\n //   else h=mix(h2,h,smoothstep(escena7,escena7+5.,time /*+p.y-50.*/));\n                                 // delete step(5) else h=()\n  \n //   p.y-=110.+escena8;\n    float l=length(p);\n //   if (abs(p.x)<3.*2.&&p.y>-55.*1.5) h=-27.;  // tunnel wide\n //   h=max(h, -15.*0.8-abs(p.y));           // tunnel wall slope\n //   if (length(max(vec2(0.),abs(vec2(p.x*.7,yy+27.))-1.15*2.))<.01*5./* &&p.y>-55. */) h=-100. ;\n    return h;\n}\n\nfloat de(vec3 p) {\n    p.z=min(202.,p.z);\n    p-=carpos;\n    p.y+=.3+step(escena5,time)*.9*step(time,escena6)-step(escena7,time)*.05+smoothstep(escena8+10.,escena8+15.,time)*.3;\n    float bound = length(p)-1.;\n    if (bound>0.) return bound+.5;\n    advcar.y=0.;\n    p=lookat(advcar,vec3(0.,1.,0.))*p;\n    p.xy*=rot(-step(escena5,time)*.3*smoothstep(escena6+2.,escena6,time)\n           +/*.1*/2.*pi*abs(sin(time*1.3*0.1))+step(escena6,time)*advcar.x+smoothstep(escena8+1.,escena8+3.,time)*3.1416*2.);\n    p.y*=1.7;\n    p.x*=1.;\n    float l=length(p+vec3(0.,-0.05,0.));\n    p.x+=smoothstep(-.0,-.1,p.z)*.025*sign(p.x);\n    p.y-=smoothstep(.02,0.,abs(p.x))*.02;//*sign(p.y-.03);\n    p.y+=smoothstep(.02,0.,abs(p.x)-.05)*.02;\n    p.y*=1.+smoothstep(.05,.0,p.y)*.5;\n    p.z*=1.-smoothstep(.1,.0,p.z)*.15;\n    p.z+=smoothstep(.05,.07,abs(p.x))*.02;\n    //////////////////////////////////////// Shape(A) Default ship\n    float d=length(p)-.12;\n    d=max(d,-p.y+.045+abs(p.x)*.15+max(0.,-p.z*.1));\n    d=max(d,-abs(p.x)+.06-step(0.0,p.z));\n    d=min(d,l-.065);\n    \n    /////////////////////////////////////// Shape(B)\n /*    float d=length(p)-.12;\n    d=max(d,-p.y+.045+abs(p.x)*.15+max(0.,-p.z*.1));\n  //  d=max(d,-abs(p.x)+.06-step(0.0,p.z));\n  //  d=min(d,l-.065);\n     */   \n    /////////////////////////////////////// Shape(C) fat big ship\n /*     float d=length(p)-.12*1.5;\n   //  d=max(d,-p.y+.045+abs(p.x)*.15+max(0.,-p.z*.1));\n      d=max(d,-abs(p.x)+.06-step(0.0,p.z));\n      d=min(d,l-.065*0.05);\n      */\n  //////////////////////////////////////////\n  \n    cp=p;\n    return d*.3;\n}\n\n\nvec3 normal2(vec2 p) {\n\tvec2 eps=vec2(0.,.01);\n    return normalize(vec3(map(p+eps.yx)-map(p-eps.yx),2.*eps.y,map(p+eps.xy)-map(p-eps.xy)));\n}\n\n\nfloat edge=0.;\n\nvec3 normal(vec2 p) { \n\tvec2 e = vec2(0.0,.01);\n\tfloat d1=map(p+e.yx),d2=map(p-e.yx);\n\tfloat d3=map(p+e.xy),d4=map(p-e.xy);\n\tfloat d=map(p);\n//\tedge=abs(d-0.5*(d1+d2))+abs(d-0.5*(d4+d3));\n//\tedge=min(1.,edge*10.);\n\treturn normalize(vec3(d1-d2,2.*e.y,d3-d4));\n}\n\nvec4 hit(vec3 p) {\n    float h = map(p.xz), d = de(p);\n    return vec4(step(p.y,h), step(d,det), h, d);\n}\n\nvec3 bsearch(vec3 p, vec3 dir) {\n    st*=-.5;\n    float h2=1.;\n    for (int i=0; i<20; i++) {\n        p+=dir*st;\n        vec4 hi=hit(p);\n        float h=max(hi.x, hi.y);\n        if (abs(h-h2)>.001) {\n            st*=-.5;\n\t        h2=h;\n        }\n    }\n\treturn p;\n}\n\nvec3 shade(vec3 p, vec3 dir, float h) {\n \tvec3 col = vec3(m*obj*2.);\n    vec3 ldir=normalize(vec3(-.5,-1.,-1.));\n\tvec3 n=normal(p.xz);\n    float amb=pow(max(0.,dot(dir,n)),3.)*.2;\n    float dif=max(0.,dot(ldir,-n))*0.015;\n    vec3 ref=reflect(dir,ldir);\n    float spe=pow(max(0.,dot(ref,-n))*.5,3.)*(4.-step(escena8,time));\n    p.y-=(h-10.)*step(38.,time);\n    p.xz=pos;\n    vec3 fr=fractalc(p.xy*1.5)*abs(n.z);\n    fr+=fractal(p.yz*1.5)*abs(n.x);\n    fr+=fractalc(p.xz)*abs(n.y);\n    fr+=fractald(p.yz)*abs(n.x);   // ad\n    \n  //  fr*=.6-step(escena5,time)*.2;\n    edge*=step(-floor(p.x)*.1,time-5.)-step(escena5,time)*.5;\n    vec3 c=col+amb+dif+edge*siroof*step(h-.05*5., p.y)*neoncolor*0. +fr*1.5*smoothstep(12.,12.5*1.5,time+p.x*.2*0.05+p.y*0.02);\n    vec3 fin=mix(c,(step(.95,fract(pos.x*2.+.5))+step(.9,fract(pos.y*5.+.1)))*(.3+fr*1.5),smoothstep(70.,75.,time));\n    fin+=c*.5*smoothstep(escena5,escena5+1.,time);\n    return fin+spe+lo*.4;\n}\n\n\nvec3 march(vec3 from, vec3 dir) {\n\tvec3 p, pd, col=vec3(0.);\n    td=2.+hash(dir.xy*100.)*.3+step(time,8.)*5.;\n    float td2=-hash(dir.xy*100.)*.1;\n    float k=0.;\n    float h=0.;\n    float l=0.;\n    float d=0.;\n   \tfor (int i=0; i<200; i++) {\n        st+=.001;\n        p=from+dir*td;\n    \tpd=from+dir*td2;\n        z=p.z-from.z;\n        yy=p.y;\n        d=de(pd);\n                           //  68sec =>95.~105sec change smooth(high =>middle=>low Bildings\n        if (p.y<5.-20.*0.5*smoothstep(95.,escena8/*5*/,time)) h=map(p.xz); \n        if (h > p.y || d<det || td>maxdist) break;\n        if (p.z>3.) {\n            vec3 p2=p;\n            p2*=5.*0.9;           // star dust position *0.9\n            p2.x+=time*sign(sin(p.z));\n            vec2 id=floor(p2.xz);\n            float hh=hash(id*100.);\n            p2.xz=fract(p2.xz)-.5;\n            p2.y-=hh*100.-80.*0.85;\n            l=max(l,step(length(p2),.15)*step(.98,hh));\n        }\n        td+=st;\n        td2+=d;\n    }\n    float f=pow(td/maxdist,1.);\n    if (h > p.y) {\n        p=bsearch(p, dir);\n    \tcol=shade(p,dir,h);\n    } \n    if (d<det) {\n        p-=det*dir;\n        pd=bsearch(pd, dir);\n        vec3 n=normalize(vec3(de(pd + e.yxx), de(pd + e.xyx), de(pd + e.xxy)) - de(pd));\n        vec2 p2=cp.xy*3.;\n        float ot=1000.;\n        for (int i=0; i<6; i++)\n        {\n            p2=abs(p2)/clamp(abs(p2.x*p2.y),.25,1.)-2.;\n            ot=min(ot,abs(p2.y));\n            \n        }\n        ot=smoothstep(.3,.2,ot);\n        col=vec3(.75-ot*.3);\n        vec3 ldir=normalize(vec3(-.5,-1.,-1.));\n        col*=.6+max(0.,dot(ldir,-n))*(.5-step(escena8-2.,time)*.2);\n        col+=fractal(cp.xy*10.)*.5;\n        float l=length(cp.xz);\n        cp.x=abs(cp.x);\n        cp.x-=.025;\n        cp.y-=.05;\n        col*=.3+.7*max(step(.012,abs(cp.y)),step(.025,cp.x));\n        col+=step(abs(cp.x)-.009,.012)*step(abs(cp.y),.006)*vec3(1.,.2,.1);\n        col*=.5+.5*step(.05,l);\n        col+=step(abs(l-.05),.003)*vec3(0.,0.,1.);\n    }\n\tneoncolor.rb*=rot(-p.y*.15*3.125);     // ad *0.15*3.125\n\tneoncolor*=exp(-.03*p.y);\n    if (time>30.) neoncolor+=.3,   neoncolor*=.9;\n    p.y+=25.47;\n    p.x*=-1.;\n    float r=max(step(.25,abs(p.y-.24)),step(2.73,abs(p.x)));\n    frase=1.;\n    if (time>escena9) col=col*r+(1.-r)*.3,col+=text(p.xy*.27).rgb*1.3;\n    col=mix(col,neoncolor*.8,f)*(step(escena4,time)+smoothstep(escena4,escena4-.5,time));\n    return col+l;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    time = ti;\n //   if(ti<129.)  time =45. ;   // how to stop screen\n    \n    if (ti>129.) time = ti-129.+48.*0.5;\n    vec2 uv = (fragCoord-resolution.xy*.5)/resolution.y;\n\tt=-35.+time;\n    from=path(t);\n    from.x-=cos(time*.3)*.1;\n    uv.x+=smoothstep(escena7+5.,escena7,time)*1.5*step(escena7,time);\n    if (time>escena4) from=path(t+.6),from.x+=.2,from.y+=.2;\n    if (time>escena5) from=path(t+.35), from.y-=1., from.x+=sin(time)*.1;\n    if (time>escena6) {\n        from=path(t+.6);\n        from.y-=-.2+smoothstep(escena6,escena6+3.,time)*.3;\n        from.x-=.2;\n    }\n    if (time>escena7) from=path(t+.3),from.x-=.0,from.z+=.2;\n    if (time>escena8-2.&&time<escena9) from=path(t+.6),from.x+=.2,from.y+=.5;\n    float tilt=.5*step(time,escena5);\n    if (time>17.&&time<23.25) from=vec3(0.,5.,-3.), tilt=0.;\n    carpos=path(t+.5);\n    carpos.y-=smoothstep(12.,0.,time)*5.;\n    advcar=normalize(carpos-path(t+1.5));\n    \n    vec3 dir=normalize(vec3(uv,1.*0.6));  // zoom factor\n    \n    vec3 adv=from-path(t-1.);\n    if ((time>escena4&&time<escena5)||(time>escena6&&time<escena7)||(time>escena8-2.&&time<escena9)) adv=carpos-from;\n  /* \n   if (time>escena2&&time<escena4) {\n        from=vec3(-10.);\n        adv=vec3(0.,-25.,0.);\n    }\n   */ \n /*   if (time>escena3&&time<escena4) {\n        from=vec3(0,-17.,10.);\n        adv=vec3(0.,-30.,-8.);\n        from.xz*=rot(time*.1);\n    }\n  */  \n    from.z-=smoothstep(88.+escena8,102.+escena8,from.z)*3.;\n    from.z=min(94.+escena8,from.z)+max(0.,time-escena8-7.5)*.2;\n    dir=lookat(adv+vec3(0.,-.5,0.),vec3(adv.x*tilt,1.,.1))*dir;\n    dir.yz*=rot(-.1-step(escena7,time)*.2+smoothstep(escena8,escena8+5.,time)*.3-step(escena7+7.,time)*1.+step(escena7+12.3,time)*1.);\n    vec3 col=vec3(0.);\n    col=march(from, dir);\n    if (ti>129.  && ti< 146.) frase=2.;\n    if (ti>136. && ti<146.) frase=3.;\n    if (ti>129.) col=col*.7+text(uv).rgb;\n    fragColor = vec4(max(vec3(0.),col),1.);\n}\n\n","name":"Image","description":"","type":"image"}]}