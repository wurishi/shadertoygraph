{"ver":"0.1","info":{"id":"tljXRh","date":"1565078356","viewed":186,"name":"AudioVisualizer002","username":"Hirai_worthless","description":"test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGzn","filepath":"/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","previewfilepath":"/media/ap/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\nmat2 genRot(float v){\n\treturn mat2(cos(v),-sin(v),sin(v),cos(v));\n}\nfloat gear(vec3 p, float inner_1,float inner_2,\n          float outer_1,float outer_2,\n           float width,float gearCount){\n\tfloat at = atan(p.z/p.x) / (2. * PI);\n    float inner = fract(at * 2. * gearCount) > 0.5 ? inner_1 : inner_2;\n    float outer = fract(at * 2. * gearCount) > 0.5 ? outer_1 : outer_2;\n    return max(max(length(p.xz) - outer,-length(p.xz) + inner),p.y + 0.75 - width);\n}\nfloat map(vec3 p){\n    p.xz = fract((p.xz + vec2(0.8)) / 1.6) * 1.6 - 0.8;\n    p.y = -abs(p.y);\n    p.xz *= genRot(-iTime);\n    float vol1 = 0.;\n    float vol2 = 0.;\n    float vol3 = 0.;\n    for(float i = 0.0; i < 1.0 / 3.0; i+= 0.05){\n    \tint tx = int(i*512.0);\n        \tfloat fft  = texelFetch( iChannel0, ivec2(tx,0), 0 ).x; \n        vol1 += fft;\n    }\n    for(float i = 1./3.; i < 2.0 / 3.0; i+= 0.05){\n    \tint tx = int(i*512.0);\n        \tfloat fft  = texelFetch( iChannel0, ivec2(tx,0), 0 ).x; \n        vol2 += fft;\n    }\n    for(float i = 2./3.; i < 3.0 / 3.0; i+= 0.05){\n    \tint tx = int(i*512.0);\n        \tfloat fft  = texelFetch( iChannel0, ivec2(tx,0), 0 ).x; \n        vol3 += fft;\n    }\n\tfloat gear1 = gear(p,0.7,0.6,0.9,0.8,vol1 * 0.1,6.);\n    float gear2 = gear(p,0.4,0.3,0.7,0.6,vol2 * 0.2,6.);\n\tfloat gear3 = gear(p,0.,0.,0.4,0.3,vol3 * 0.4,6.);\n    return min(gear1,min(gear2,gear3));\n\n}\n\nconst float EPS = 0.001;\nvec3 getNormal(vec3 p) {\n    return normalize(vec3(\n        map(p + vec3(EPS, 0.0, 0.0)) - map(p + vec3(-EPS,  0.0,  0.0)),\n        map(p + vec3(0.0, EPS, 0.0)) - map(p + vec3( 0.0, -EPS,  0.0)),\n        map(p + vec3(0.0, 0.0, EPS)) - map(p + vec3( 0.0,  0.0, -EPS))\n    ));\n}\n\nvec4 trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    vec3 p = vec3(0.0,0.0,0.0);\n    \n    for(int i = 0; i < 128; ++i){\n        p = o + r * t;\n        float d = map(p);\n        t += d * 0.75;\n    }\n    return vec4(getNormal(p),t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 U )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec3 R = iResolution,\n    r = normalize(vec3((2.*U - R.xy )/  R.y,0.8)),\n    o = vec3(sin(iTime) * 2.,0.,iTime * 2.);\n    //r.yz *= genRot(PI/6.);\n    vec4 data = trace(o,r);\n    vec3 n = vec3(data.xyz);\n    float t = data.w;\n    float fog = 1.0 / (1.0 + t * t * 0.025);\n    vec3 baseColor = r.y > 0. ? vec3(1.,0.,0.): vec3(0.,0.,1.);\n    vec3 fc = mix(vec3(0.,0.,0.),baseColor,smoothstep(-0.75,0.,dot(n,r)));\n    fc = mix(vec3(0.),fc,smoothstep(0.,1.,fog));\n\t//fc = vec3(fog);\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}