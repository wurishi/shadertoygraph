{"ver":"0.1","info":{"id":"wdtBzB","date":"1605544067","viewed":81,"name":"hoeled_first_try","username":"hoeled","description":"My first shader. A bunch of discs with time animated colors, sizes and edge smoothness.\n\nUsed this https://www.youtube.com/watch?v=u5HAYVHsasc to create a disc.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n\tfloat d = length(uv * 0.5);\n    \n    float mouse = clamp(iMouse.x * 0.001, 0.0, 4.0);\n    if(mouse == 0.) mouse = 0.6;\n    \n    // Edge animation\n    \n    float edge = 1. - 2. * sin(iTime * 0.5) * 1. * uv.y * uv.x * 20. * mouse;\n    float edge2 = 1. - 2. * sin(iTime * 0.25) * 1. * uv.y * uv.x * 20. * mouse;\n    float edge3 = 1. - 2. * sin(iTime * 1.) * 2. * uv.y * uv.x * uv.y * mouse;\n    \n    // It's just a bunch of discs, increasing the edge size makes them fuzzy\n    \n    //edge = 0.001;\n    //edge2 = 0.001;\n    //edge3 = 0.001;\n    \n    float radiusAnimation = sin(iTime * 1.) * 0.1;\n    \n    float radius = 0.2 + radiusAnimation;\n    float color = smoothstep(radius, radius-edge, d);\n    color += cos(iTime / 6.) + 0.2;\n    \n    float radius2 = 2. + radiusAnimation;\n    float color2 = smoothstep(radius2, radius2-edge2, d);\n    color2 += cos(iTime / 4.);\n    \n    float radius3 = 0.6 - radiusAnimation;\n    float color3 = smoothstep(radius3, radius3-edge2, d);\n    color3 += sin(iTime) + 0.3;\n    \n    float radius4 = 0.5 + radiusAnimation;\n    float color4 = smoothstep(radius4, radius4-edge, d);\n    color4 += cos(iTime / 8.) + 0.3;\n    \n    float radius5 = 0.4 + radiusAnimation;\n    float color5 = smoothstep(radius5, radius5-edge, d);\n    color5 += cos(iTime * 1.2) + 0.3;\n    \n    float radius6 = 0.5 + radiusAnimation;\n    float color6 = smoothstep(radius6, radius6-edge3, d);\n    color6 += cos(iTime / 4.) + 0.3;\n    \n    float radius7 = 0.3 + radiusAnimation;\n    float color7 = smoothstep(radius7, radius7-edge3, d);\n    color7 += sin(iTime * 1.7) + 0.3;\n     \n    float red = color * color4 - color6 * uv.y + uv.y;\n    float green = color2 + color5 * uv.x - 1. + uv.y + color7 * 0.2;\n    float blue = color4 / 2. + uv.x * color7 * color3 * uv.y;\n        \n    fragColor = vec4(red, green, blue, 1.0);\n    \n    // Playing around with color parameters\n    \n    //float red = color3 / (color * color2 / color3 / color5 * color + color7);\n    //float red = color * color3 / color7;\n    //float blue = color4 / (color4 * color5 / color7 / color3 * color2 + color5);\n    //float blue = color2 * color4 / color5;\n    //fragColor = vec4(red, 0., blue, 1.0);\n}","name":"Image","description":"","type":"image"}]}