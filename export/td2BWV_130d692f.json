{"ver":"0.1","info":{"id":"td2BWV","date":"1590910021","viewed":817,"name":"Screen-door transparency","username":"zjli","description":"An ancient technique to achieve transparency.\nThe idea is to render transparent objects with a checkerboard fill pattern, i.e., shade every other pixel.\nIt produces poorer results than alpha blending, but has its own strength like in deferred shading.\n","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["transparency"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 texColor = texture(iChannel0, uv);\n    vec4 fgColor = vec4(0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)), 1.0);\n\n    bool objectArea = abs(uv.x - 0.5) < 0.25 && abs(uv.y - 0.5) < 0.25;\n    bool flag = mod(fragCoord.x + fragCoord.y, 2.0) == 0.0;\n    if (flag && objectArea)\n        fragColor = fgColor;\n    else\n        fragColor = texColor;\n}","name":"Image","description":"","type":"image"}]}