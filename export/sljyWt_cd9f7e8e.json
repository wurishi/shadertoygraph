{"ver":"0.1","info":{"id":"sljyWt","date":"1650420233","viewed":133,"name":"basic 2d lines","username":"jorge2017a2","description":"basic 2d lines","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["basic2dlines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n//\n// \n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(0.5),b,d)\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec2 rotatev2(vec2 p, float ang)\n{   float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvec3 HaceFigura(vec2 p, vec3 colInOut )\n{\n    float q=0.25;\n    float x,y,a,b;\n    float d1,d2, dfin;\n    dfin=9999.9;\n    a=0.;\n    b=0.;\n    float t=5.25; //falla con el tiempo =crash t=itime\n    for(float n=0.0; n<(2.0*PI+0.01); n+=2.0*PI/q)\n    {\n        x=1.2*sin((29.*n)+1.0+t);\n        y=0.8*cos((11.*n)+1.0+t);\n        d1=sdSegment( p, vec2(x,y), vec2(x-a,y-b));\n        dfin=min(dfin, d1);\n        q=x;\n        a=x;\n        b=y;\n    }\n    \n    colInOut=DrawFigBorde(vec3(1.0,0.0,0.0), colInOut, dfin ) ;\n    \n    return colInOut;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(0.0,-0.5);\n    float esc=1.0;\n    uv*=esc;\n    uv.y-=1.0;\n    uv.x-=0.5;\n    float t=mod(iTime,0.8);\n    uv+=t;\n    \n    vec3  col=vec3(0.45,0.7,1.0);//-uv.y*0.5/esc;\n    col= HaceFigura(uv, col );\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}