{"ver":"0.1","info":{"id":"XccSRn","date":"1713459556","viewed":41,"name":"Tests on the Mandelbrot set","username":"esther_fpqc","description":"The Mandelbrot set is the set of complex numbers c such that the sequence z(0) = 0, z(n+1) = z(n)² + c does not diverge to infinity. Notice that the precision of floats is not enough to zoom comfortably on small details.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int ITER_THRESHOLD = 1000;\nint i;\n\nvec3 mandelbrot(in vec2 pt){\n    //Start at z = 0\n    vec2 z = vec2(0.);\n    for(i = 0; i < ITER_THRESHOLD; i++){\n        //The new value of z is z² + pt\n        z = vec2(z.x * z.x - z.y * z.y + pt.x, 2. * z.x * z.y + pt.y);\n        //If this sequence explodes (iff some |z| is > 2), the point is not on the set.\n        if(z.x * z.x + z.y * z.y > 4.){\n            float l = float(i)/float(ITER_THRESHOLD);\n            return vec3(0.5) + pow(l, 0.2) * vec3(cos(pt.x), cos(pt.y), sin(pt.x));\n        }\n    }\n    //If the sequence did not explode, the point is on the set.\n    return vec3(1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom_level = exp(iTime - 2.);\n    //Point on which we want to zoom\n    vec2 zoom_at = vec2(-0.1529324, 1.0397522);\n    //Normalize coordinates to zoom on the correct point\n    vec2 uv = zoom_at + ((fragCoord - 0.5 * iResolution.xy)/iResolution.yy) / zoom_level;\n\n    fragColor = vec4(mandelbrot(uv), 1.0);\n}","name":"Image","description":"","type":"image"}]}