{"ver":"0.1","info":{"id":"Ddy3WR","date":"1678362082","viewed":51,"name":"Rude Marbling effect","username":"psyduck1312","description":"Rude implementation of a marbling effect with dynamic changing colors","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["marbling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord.xy / iResolution.xy) * 4.0 - 2.0;\n    \n    float time = iTime * 0.1;\n    float scale = 10.0;\n    float turbulence = 20.0;\n    \n    float noise = 0.0;\n    for (int i = 0; i < 4; i++) {\n        float frequency = pow(2.0, float(i));\n        float amplitude = pow(0.5, float(3-i));\n        noise += amplitude * abs(sin(frequency * uv.x + time));\n        noise += amplitude * abs(sin(frequency * uv.y + time));\n    }\n    \n    float marble = sin((uv.x + noise * turbulence) * scale) + sin((uv.y + noise * turbulence) * scale);\n    float gray = 0.5 + 0.5 * marble;\n    \n    float colorTime = iTime * 0.1;\n    vec3 color1 = vec3(sin(colorTime), cos(colorTime), tan(colorTime));\n    vec3 color2 = vec3(sin(colorTime + 1.0), cos(colorTime + 1.0), tan(colorTime + 1.0));\n    \n    // Change the colors here\n    //vec3 blue = vec3(0.0, 0.5, 1.0);\n    //vec3 white = vec3(1.0);\n    fragColor = vec4(mix(color1, color2, gray), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}