{"ver":"0.1","info":{"id":"l3t3R2","date":"1716792228","viewed":58,"name":"vortex and shrink","username":"LZCloud","description":"vortex and shrik texture","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["vortex","shrink"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RANGE .7\n#define SPEED .5\n#define STRENGTH 6.\n\nmat2 rotate(float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c,-s,s,c);\n}\n\nvoid mainImage(out vec4 fragColor, vec2 coord) {\n    vec2 aspect = iResolution.xy / iResolution.y;\n    vec2 center = 0.5 * aspect;\n    \n    vec2 uv = coord / iResolution.xy * aspect;\n    uv -= center;\n    \n    float d = length(uv);\n    float progress = sin(iTime * SPEED);\n    \n    //vortex\n    float cTime = STRENGTH * progress;\n    d = smoothstep(0., RANGE, RANGE - d) * cTime;\n    uv *= rotate(d);\n    \n    //shrink\n    float edge = 1. * abs(progress);\n    uv = uv + normalize(uv) * edge;\n    \n    uv += center;\n    uv /= aspect;\n    if (uv.x > 1. || uv.y > 1. || uv.x < 0. || uv.y < 0.) {\n        fragColor = vec4(0., 0., 0., 0.);\n    } else {\n        fragColor = texture(iChannel0, uv);\n    }\n} ","name":"Image","description":"","type":"image"}]}