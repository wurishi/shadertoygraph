{"ver":"0.1","info":{"id":"Nd3XDr","date":"1632912388","viewed":66,"name":"Color Circles - 1","username":"1rosehip","description":"Just color circles :)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circles","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 uResolution;\nuniform float uTime;\n\nmat2 getRotationMatrix(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n\n    return mat2(c, -s,\n                s, c);\n}\n\nfloat random(vec2 pos) {\n    pos = fract(pos * vec2(123.34, 456.21));\n    pos += dot(pos, pos + 45.32);\n    return fract(pos.x * pos.y);\n}\n\nvec3 circle(vec2 uv, vec2 center) {\n    vec3 color = vec3(0.0);\n    vec2 dist = (uv - center);\n    float radius = 0.1;\n    color += (radius / length(dist));\n    color = smoothstep(0.2, 0.9, color);\n    return color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy + iTime / 30.0;\n    \n    float aspect = iResolution.x / iResolution.y;\n\n    // handle aspect ration when width > height\n    if(aspect > 1.0) {\n        uv-= 0.5;\n        uv.x *= aspect;\n        uv+= 0.5;\n    }\n\n    // handle aspect ration when height > width\n    if(aspect < 1.0) {\n        uv-= 0.5;\n        uv.y *= 1.0 / aspect;\n        uv+= 0.5;\n    }\n\n    vec3 color = vec3(0.0);\n\n    uv *= 15.0;\n    vec2 copies = fract(uv);\n    vec2 index = floor(uv);\n\n    for(float y=-1.0; y<=1.0; y++){\n        for(float x=-1.0; x<=1.0; x++){\n            vec2 offset = vec2(x, y);\n            float rnd1 = random(index + offset) * (sin(iTime + uv.x) * cos(iTime + uv.y));\n            float rnd2 = random(index + offset);\n            vec2 rndv = vec2(rnd1, rnd2);\n            vec2 pos = copies - offset - rndv;\n            vec3 randomColor = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n            color += circle(pos, vec2(0.5)); \n            color = mix(vec3(0.0), randomColor, color);\n        } \n    }\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}