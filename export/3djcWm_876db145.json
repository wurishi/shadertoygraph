{"ver":"0.1","info":{"id":"3djcWm","date":"1587219500","viewed":56,"name":"Art Nouveau Style Tiling Pattern","username":"julianlumia","description":"jugendstil / art nouveau inspired tiling patterns test. While playing around, I found that by stretching out the wave pattern in line 68 it creates a very Art Nouveau like aesthetic to otherwise geometric styling patterns. Thought it was interesting","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["jugensitlframepattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define pi acos(-1.)\n#define tau (2.*pi)\n#define rot(x) mat2(cos(x),-sin(x),sin(x),cos(x))\n#define S(a, b, t) smoothstep(a, b, t)\n\n// inigo quilez\nfloat sdTri(  vec2 p, float s )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - s;\n    p.y = p.y + s/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 0.0 );\n    return -length(p)*sign(p.y);\n}\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n  return length(p) - r;\n}\n\n\n\nfloat sdOctogon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.9238795325, 0.3826834323, 0.4142135623 );\n    p = abs(p);\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\n//from iq : https://iquilezles.org/articles/distfunctions\nfloat smin( float d1, float d2, float k ) \n{\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); \n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord  )\n{\n vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;    \n\n    uv *= 1.;\n    \n vec3 col = vec3(0);\n float d = 10e6;\n float triA;\n// uv = fract(vec2(uv.x-0.0,uv.y-.5)) -.5;\n uv *= .75;\n         vec2 cuv = uv;\n\n float wave =19.;\n float wavemultip =sin(uv.x*1.+1.*0.3 )* 0.3+0.0;//sin(iTime*0.5)*.2+0.2*.9;\n float offset = (sin(2.8*0.15)*0.5)*0.03;\n vec2 uv2;\n vec2 objsize =vec2(abs(uv.x*5.)*.001+0.01,1.);\n for(int i = 0; i <4; ++i)\n {\n  uv = vec2((uv)*rot(float(.25)*pi));\n  vec2 wpos = vec2(uv.x+sin(uv.y*wave)*wavemultip,uv.y)*2.02\n      ;\n  triA = sdBox(wpos+offset, objsize);\n float   triB = sdBox(wpos-offset, objsize);\n triA = min(triB, triA);       \n float   triC = sdBox(vec2(uv.x+sin(uv.y*wave-pi)*wavemultip,uv.y)-offset, objsize);\n float   triD = sdBox(vec2(uv.x+sin(uv.y*wave-pi)*wavemultip,uv.y)+offset, objsize);\n triC = min(triC, triD);\n triA = min(triC, triA);\nif( triA < d)\n {\n  d = triA;\n  }\n } \n float c;   \n   // vec2 cuv = uv;\ncuv*= 1.;\n    cuv += vec2(0.0,0.);\n\ncuv = abs(cuv)-.50;\n    for(int i = 0; i <1; ++i)\n  {\ncuv += vec2(0.2);\n\n      cuv = vec2((cuv)*rot(float(.25)*pi));\n\ncuv = abs(cuv)-.1+(offset);\n     //   cuv = vec2((cuv)*rot(float(.05)*pi));\n      c = sdOctogon(vec2((cuv.x)+float(i)*.2,cuv.y+float(i)*.05),.16);\n      \n   float c2 = c +0.02;\n   c = max(c,-c2);\n if( c < d)\n  {\n   c = c;\n  }\n } \n float ca = sdOctogon(vec2((uv.x),uv.y),.36);\n float c2a = ca -0.2;\n ca = max(ca,c2a);\n    ca += .0;\n// triA = min(triA,-ca);\n triA = min(triA,c);\n d = min(d, triA);\n col += smoothstep(0.01,.1/iResolution.y,-d);\n col = col;\n fragColor = vec4(col,1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}