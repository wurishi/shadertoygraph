{"ver":"0.1","info":{"id":"tlSBDR","date":"1598820310","viewed":62,"name":"Value Noise 12414","username":"DrGreencumber","description":"value noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 pos)\n{\n    return fract(sin(dot(pos, vec2(13.324235f, 73.342523f))) * 39254.346f);\n}\n\nfloat valueNoise(vec2 uv)\n{\n    vec2 lv = fract(uv);\n    vec2 id = floor(uv);\n    \n    lv = lv * lv * (3.0f - 2.0f * lv);\n    float bl = random(id);\n    float br = random(id + vec2(1.0f, 0.0f));\n    float b = mix(bl, br, lv.x);\n    \n    float tl = random(id + vec2(0.0f, 1.0f));\n    float tr = random(id + vec2(1.0f, 1.0f));\n    float t = mix(tl, tr, lv.x);\n    \n    return mix(b, t, lv.y);\n}\n\nfloat valueNoise2(vec2 uv, float frequency, int nOctaves)\n{\n    float c = 0.0f;\n    float nDivisions = 0.0f;\n    for (float i=0.0f; i<float(nOctaves); i++)\n    {\n        float divisor = pow(2.0f, -i);\n       \tc += valueNoise(uv * frequency) * divisor;\n        nDivisions += divisor;\n        frequency *= 2.0f;\n\t}\n    return c / nDivisions;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv += iTime * 0.1f;\n    float c = valueNoise2(uv, 5.0f, 10);\n    \n    if (c > 0.60f)\n        fragColor = vec4(0.6f, 0.6f, 0.6f, 1.0f);\n    else if (c > 0.45f && c < 0.60f)\n    \tfragColor = vec4(0.0f, 0.6f, 0.0f, 1.0f);\n    else if (c < 0.45f && c > 0.40f)\n        fragColor = vec4(0.6f, 0.6f, 0.0f, 1.0f);\n    else\n        fragColor = vec4(0.0f, 0.0f, 0.6f, 1.0f);\n        \n    //fragColor = vec4(vec3(c), 1.0f);\n}","name":"Image","description":"","type":"image"}]}