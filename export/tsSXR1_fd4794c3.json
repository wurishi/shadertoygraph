{"ver":"0.1","info":{"id":"tsSXR1","date":"1552885935","viewed":112,"name":"Sinusoid (Work In Progress)","username":"letters","description":"I know what comes next, just need to stop for the night\ntodo: color shifts","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sine","unfinished","sinusoid","sinusoidal","sinewave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat smoothit(float center, float radius, float n) {\n    radius = abs(radius);\n    float dist = abs(center - n);\n    if(dist > radius) return 0.0;\n    \n    return sin((radius - dist)/radius);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    float c; //unsclased pixel color\n    float period = 0.25; //seconds\n    float theta = 2.0 * 3.1415912 * (iTime - floor(iTime / period) * period) / period;\n    //float theta = 0.;\n    \n    float scale;  //for scaling x coordinates\n\tscale = (iTime - floor(iTime / 100.0) * 100.0) / 100. ; // (0 to 100)/100\n\t//scale = 0.1;\n    \n    float y, dy;\n    \n    y  = sin((fragCoord.x * scale) + theta);\n    dy = cos((fragCoord.x * scale) + theta); // dsin = cosx\n        \n    \n    //float ysc = (y + 1.)/2.0, dysc = dy * scale;\n    float ysc = (y + 1.)/2.0, dysc = dy * scale;\n    \n\n    c = smoothit(ysc,dysc,uv.y);\n    \n    \n    vec3 col; // RGB output vector\n    col = vec3(c);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}