{"ver":"0.1","info":{"id":"l32cDz","date":"1727172714","viewed":41,"name":"jiang's loopless fractal rfactrd","username":"jy483752","description":"i refactored jiang's loopless fractal https://www.shadertoy.com/view/MXSyzz\nfor some reason this algorithm only maps the uv correctly on degree = 2.0 ? or is it also wrong just very slightly?","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["w"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 fractal(vec2 p, float scroll, float zoom) {\n    float degree = 2.0;\n\n    vec2 q = abs(p*zoom);\n    vec2 a = floor(log(q)/log(degree));\n    vec2 b = (p*zoom)/pow(degree, a.x);\n    return fract(b-vec2(0,scroll));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n\n    uv = fractal(uv, iTime*.5, 1.5+sin(iTime)*.5);\n\n    float val = step(.5,length(uv-.5));\n\n    fragColor = vec4(vec3(uv,1.-val),1.0);\n}","name":"Image","description":"","type":"image"}]}