{"ver":"0.1","info":{"id":"stcXDS","date":"1639676496","viewed":112,"name":"Temporal upscaling study","username":"AwareStubMan","description":"this is a fail, and i cannot figure out how to make it look good","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["temporal","upscaling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = texture(iChannel0, uv);\n    col /= col.a; // the alpha channel contains the amount of samples took (if changed to an accumulation filter)\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col;\n    \n    // Do not render anything when pixel is not in the resolution range\n    if (fragCoord.x > (iResolution.x-0.5) / SIZE || fragCoord.y > (iResolution.y-0.5) / SIZE) discard;\n    \n    vec2 subpixelCoord = fragCoord.xy;\n    // since fragCoord.xy is in [0.5, resolution-0.5] range, substract a vec2 random number by 0.5 to\n    //turn it to [0, resolution] range\n    subpixelCoord += randV2(fragCoord.xy, float(iFrame+1)) - 0.5;\n    // and normalize the pixel coordinates\n    subpixelCoord /= iResolution.xy;\n    \n    // And now, we sample the image with our upscaled subpixel coordinates\n    col = texture(iChannel0, subpixelCoord * SIZE).rgb;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 prev = texture(iChannel1, fragCoord / iResolution.xy);\n    vec4 col = texture(iChannel0, fragCoord / iResolution.xy / SIZE);\n    fragColor = col + prev;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define LOD 2\n#define SIZE exp2(float(LOD))\n\nfloat rand(vec2 co, float seed)\n{ \n\treturn fract(sin(seed / 100.0 * dot(co, vec2(12.9898, 4.1414))) * 43758.5453);\n}\nvec2 randV2(vec2 co, float seed)\n{\n    return vec2(rand(co, seed), rand(co, seed+1.0));\n}","name":"Common","description":"","type":"common"}]}