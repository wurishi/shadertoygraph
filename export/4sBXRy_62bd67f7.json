{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 metaballs[5];\n    \n    metaballs[0] = vec3(sin(iTime) * 0.1 + 0.4, cos(iTime) * 0.1 + 0.4, 0.2);\n    \n    metaballs[1] = vec3(0.8, 0.2, 0.05);\n    metaballs[2] = vec3(1, 0.6, 0.03);\n    metaballs[3] = vec3(0.4, 0.8, 0.02);\n    \n    metaballs[4] = vec3(iMouse.xy / iResolution.y, 0.1);\n    \n\tvec2 ssnormal = fragCoord.xy / iResolution.y;\n    \n    float frag = 0.0;\n    \n    for(int i = 0; i < 5; i++)\n        frag += metaballs[i].z / distance(metaballs[i].xy, ssnormal);\n    \n    frag = clamp(frag, 0.0, 1.0);\n    frag = frag == 1.0 ? 1.0 : 0.0;\n    \n    fragColor = vec4(frag, frag, frag, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sBXRy","date":"1413026311","viewed":1836,"name":"Simple 2D Metaball","username":"zombocom","description":"My first shader: A simple method of rendering 2D metaballs. Just add the distance between the metaballs and the fragment together and treshold them. You can move one of the blobs with your mouse too.","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","metaball"],"hasliked":0,"parentid":"","parentname":""}}