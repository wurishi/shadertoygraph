{"ver":"0.1","info":{"id":"Dt3BWX","date":"1701641107","viewed":82,"name":"Sin/Cos Attractor","username":"Jinkweiq","description":"some fun attractors\n","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["2d","particles","attractor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    float value =  texture(iChannel0, uv).r;\n    float b = 0.1;\n    vec3 color = vec3(value) * vec3(0.090,0.318,0.529) * (1.-b) + vec3(b);\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(float n){return fract(sin(n) * 43758.5453123);}\n\nvec2 noise(vec2 p) {\n    return vec2(rand(p.x), rand(rand(p.x)));\n}\n\nint getIDX(vec2 coords) {\n\tivec2 c = ivec2(coords);\n    return c.x + c.y * int(iResolution.x);\n}\n\nvec2 process(vec2 p, vec2 bounds) {\n    float a = 1.0;\n    vec2 data = p + iTimeDelta * vec2(\n        cos(a * p.y),\n        sin(a * p.x)\n    );\n    if (data.x < 0.0) data.x += bounds.x;\n    if (data.x > bounds.x) data.x -= bounds.x;\n    if (data.y < 0.0) data.y += bounds.y;\n    if (data.y > bounds.y) data.y -= bounds.y;\n    return data;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    ivec2 coord = ivec2(fragCoord);\n    vec4 data = vec4(0);\n    if (getIDX(fragCoord) < PARTICLE_COUNT) {\n        vec2 bounds = SCALE * vec2(iResolution.x/iResolution.y, 1.0);\n        data = texelFetch(iChannel0, ivec2(fragCoord), 0);\n        if (iFrame < 2) {\n            data.xy = noise(fragCoord * 200.) * bounds;\n        } else {\n            data.xy = process(data.xy, bounds);\n\n        }\n    }\n    fragColor = data;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const int PARTICLE_COUNT = 500;\nconst float SCALE = 10.0;\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// from https://www.shadertoy.com/view/MldyWr\nivec2 getCoords(int idx) {\n\tfloat i = float(idx);\n    return ivec2(mod(i,iResolution.x),floor(i/iResolution.x));\n}\n\nfloat circle(vec2 uv, vec2 p) {\n    return smoothstep(0.,1.,length(uv-p) * 300. / SCALE);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    \n    uv *= SCALE;\n    \n    float oldCol = texture(iChannel1, fragCoord/iResolution.xy).r;\n    \n    float col = 1.0;\n    \n    for (int i=0;i<PARTICLE_COUNT;i++) {\n        vec4 p = texelFetch(iChannel0, getCoords(i), 0);\n        col *= circle(uv, p.xy);\n    }\n    col = 1.0 - col;\n    fragColor = vec4(col + oldCol / (iTimeDelta * 64.),0,0,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}