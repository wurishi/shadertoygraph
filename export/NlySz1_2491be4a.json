{"ver":"0.1","info":{"id":"NlySz1","date":"1640218234","viewed":76,"name":"Ray Marching 1.SV","username":"turtlelover891","description":"This is my first attempt of ray marching","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = acos(-1.);\nconst float minDist = 0.01;\nconst float maxDist = 100.;\nconst int maxSteps = 100;\n\nfloat getDist(vec3 Point){\n    vec4 Sphere = vec4(0., 2., 5., 1.);\n    float SphereDist = length(Point-Sphere.xyz) - Sphere.w;\n    float PlaneDist = Point.y;\n    return min(SphereDist, PlaneDist);\n}\n\nfloat RayMarch(vec3 RayOrigin, vec3 RayDirection){\n    float DistOrigin = 0.;\n    \n    for(int i=0;i<maxSteps;i++){\n    \n        vec3 Point = RayOrigin + DistOrigin * RayDirection;\n        \n        DistOrigin += getDist(Point);\n        \n        if(DistOrigin < minDist || DistOrigin > maxDist) break;\n    }\n    return DistOrigin;\n}\n\nvec3 getNormal(vec3 p){\n    float Distance = getDist(p);\n    vec2 temp = vec2(.01, 0.);\n    \n    vec3 normal = Distance - vec3(\n        getDist(p - temp.xyy),\n        getDist(p - temp.yxy),\n        getDist(p - temp.yyx));\n    return normalize(normal);\n}\n\nfloat getLight(vec3 p, vec3 lightPos){\n    vec3 l = normalize(lightPos - p);\n    vec3 n = getNormal(p);\n\n    float dif = clamp(dot(n, l), 0., 1.);\n\n    float d = RayMarch(p+n*minDist*2., l);\n    if(d < length(lightPos - p)) dif *= .1;\n    return dif;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = (fragCoord-R/2.)/R.y;\n    vec3 col = vec3(0.);\n\n    vec3 rayOrigin = vec3(0., 2., 0.);\n    vec3 rayDirection = normalize(vec3(uv.x, uv.y, 1));\n    vec3 lightPos = vec3(sin(iTime)*2., 5., 2. + cos(iTime)*2.);\n    \n    float Distance = RayMarch(rayOrigin, rayDirection);\n    vec3 p = rayOrigin + rayDirection * Distance;\n    col = vec3(getLight(p, lightPos));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}