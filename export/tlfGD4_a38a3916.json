{"ver":"0.1","info":{"id":"tlfGD4","date":"1556320296","viewed":127,"name":"eye of patrik","username":"Pyramid","description":"learning then playing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["patrik"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dist(vec2 origin, vec2 target)\n{\n    return abs(sqrt(pow(target.x+origin.x,2.)+pow(target.y+origin.y,2.)));\n}\n\nfloat point(vec2 uv, vec2 position, float size)\n{\n    //vec2 target = vec2(0.,0.);\n    //float size =.004;\n    //float dist = dist(uv,point);\n    //float dist = length(uv)-length(point);\n    //float point=1.-distance(uv,target);\n    //point = smoothstep(.49,.51,point);\n    //float point=smoothstep(size+size/2.,size,distance(uv,target));\n    \n    return smoothstep(size+size/2.,size,distance(uv,position));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n    //uv.y-=.5;\n\n    float aspectRatio = iResolution.x/iResolution.y;\n    uv.x *= aspectRatio;\n    \n    float zoom = 12.;\n    uv*=zoom;\n    float c,x,y,t;\n    \n    //t=floor(iTime)*fract(iTime/4.);\n    //t=float(int(floor(iTime))%2)*fract(iTime/4.);\n    t=sin(iTime/8.)*2.;\n    \n    x=y=t;\n    for(int i=0;i<1000;i++)\n    {\n        x+=sin(y*2.)-y+t;\n        y+=y/88.*t+x/7.;\n        if(abs(x)>zoom||abs(y)>zoom) break;\n    \tc+=point(uv, vec2(x,y), clamp(.1,.7,abs(sin(iTime)/20.)));\n    }\n    \n    vec3 color = vec3(c,abs(sin(c)),abs(sin(iTime)*c/776.));\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}