{"ver":"0.1","info":{"id":"dljSz3","date":"1676397845","viewed":65,"name":"Complex Numbers with Matrices","username":"PlankASS","description":"Unfortunately I can't divide ;(\nAlso adding 1 doesn't work like I want it","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["complexnumbers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nmat2 i = mat2(0, -1, 1, 0);\nmat2 one = mat2(1,0,0,1);\n\nfloat Pi = 3.14159265358979f;\n\n\n\nfloat len(mat2 z){\n    return sqrt(z[0][0]*z[0][0] + z[0][1]*z[0][1]);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n     vec2 uv = (2.0f*fragCoord - iResolution.xy)/iResolution.y;\n     \n     uv = 1.0f * (uv - vec2(1,0));\n     \n     float escapeRad = sin(iTime) + 1.0f;\n     \n     mat2 c = uv.x * one + uv.y * i;\n     mat2 z = mat2(0);\n     float it = 0.0f;\n     \n     for(it = 0.0f; it < 100.0f; it++){\n         z = z*z + c;\n         \n         if(len(z) > escapeRad)\n             break;\n     }\n\n    // Time varying pixel color\n    vec3 col = it/100.0f * vec3(1,1,0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}