{"ver":"0.1","info":{"id":"7dsSW2","date":"1619360758","viewed":126,"name":"Mazoid","username":"ad_lucem","description":"Practicing gyroid raymarching","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["maze","gyroid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX 200.\n\nfloat opUs( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n\nfloat mz( in vec3 uv)\n{\n    float sc = 4.;\n    vec3 q = uv*sc;\n    float d = abs(dot(sin(q), cos(q.zxy))-1.6)/sc-0.1;    \n    return d;\n}\n\nfloat pl( vec3 p, vec3 n, float h )\n{\n  return dot(p,n) + h;\n}\n\nfloat sd(vec3 p)\n{\n    float d;\n    float h = mz(p-vec3(0,T*0.05,0))*.25;    \n    float gr = texture(iChannel2, p.xz*0.1).x;\n\n    float f = pl(p, vec3(0, 1, 0), .75+h*gr*20.)*.125;\n    d = max(h,f);\n    float g = pl(p, vec3(0, 1, 0), 1.5+gr*0.1);\n    d = opUs(d, g, 0.2);\n    return d;\n}\n\nfloat tr(vec3 ro, vec3 rd, float eps, out float res, out float sh)\n{\n    float d, ds;\n    int i = 0;\n    sh = MAX;\n    res = MAX;\n    for(; i < 300; i++)\n    {\n       vec3 p = ro + rd * d;\n       ds = sd(p);\n       d+=ds;\n       if(ds < eps || d > MAX) break;\n       res+=ds;\n       sh = min( sh, 10.*ds/d);\n   }\n    \n    res*=float(i)*0.00004/d;\n    return d;\n}\n\nvec3 norm(vec3 p)\n{\n    vec2 e = vec2(0.001,0.);\n    float d = sd(p);\n    return normalize(d-vec3(\n    sd(p - e.xyy), sd(p - e.yxy), sd(p - e.yyx)));\n}\n\nmat3 cam(vec3 t, float r)\n{\n   vec3 w = normalize(t);\n   vec3 p = normalize(vec3(sin(r),cos(r),0));\n   vec3 u = normalize(cross(p, w));\n   vec3 v = normalize(cross(w,u));\n   return mat3( u, v, w);\n}\n\nvec3 shade(vec3 p, vec3 v, vec3 n)\n{\n    vec3 ld = normalize(vec3(.0, -8., -.50));\n    vec3 lc = vec3(0.984,0.976,0.737)*1.2;\n    vec3 ca = vec3(0.039,0.761,0.580);\n    float ka = 0.25;\n    float kd = max(0., dot(n, -ld));\n    \n    //Shadows\n    float res = 0.0;\n    float sh = 0.0;\n    float d = tr(p + n*.01, -ld, 0.0001, res, sh);\n    sh = clamp(min(sh,d),0.2,1.);\n    \n    vec2 uv;\n    \n    uv = n.yx;\n    \n    vec4 cd = texture(iChannel1, uv);\n    vec3 h = normalize(n+v);\n    float ks = max(0., dot(h,-ld));\n    if(p.y > -.75) cd.rgb=vec3(0.137,0.690,0.204);\n    if(p.y < -1.47) cd.rgb=vec3(0.573,0.329,0.047);  \n    \n    return mix(ka*cd.rgb, lc*(kd*cd.rgb + pow(ks,8.)), sh);\n}\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    vec2 uv = (2.*U-R.xy)/R.y;\n\n    vec4 ct = texture(iChannel0, vec2(1.5,0)/R.xy);\n    vec3 mv = vec3(0);\n    \n    vec4 pPos = texture(iChannel0, vec2(2.5,0)/R.xy);\n    vec3 co = pPos.xyz;\n    vec3 cd = cam(ct.xyz, 0.0) * normalize(vec3(uv, 1.44));\n    \n    float res = 0.0;\n    float sh = 0.0;\n    float d = tr(co, cd,0.001,res, sh);\n\n    O.rgb = vec3(0.745, 0.867, 0.976); // background      \n    \n    if(d <= MAX)\n    {\n        vec3 p = co + cd * d;\n        \n        float f = 1.-clamp(d/(7.*log(MAX)), 0.0, 1.0);\n        vec3 n = norm(p);\n        vec3 c = shade(p, -cd, n);\n        O.rgb = mix(O.rgb, c, f);\n        O.rgb *= vec3(1.-res*.5);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, in vec2 U )\n{\n    // moves\n    vec4 last = texture(iChannel0, vec2(0));\n    \n    vec2 deltaL = vec2(0);\n    if(abs(iMouse.z - iMouse.x) > 10.)\n        deltaL = iMouse.xy - last.xy;\n\n    // forward vector\n    vec4 fw = texture(iChannel0, vec2(1.5,0)/R.xy);\n    \n    fw.xyz *= rotY(deltaL.x*.01);\n    \n    // player pos\n    vec4 pPos = texture(iChannel0, vec2(2.5,0)/R.xy);;\n    \n    if(iMouse.z > 1.0)\n    {\n        pPos+=fw*0.01;\n    }\n    \n    // Init \n    if(iFrame < 10)\n    {\n        fw.xyz = normalize(vec3(-5,0,1));\n        pPos.xyz = vec3(0.0, -1.15, -5.0);\n    } \n    \n    // Last click pos\n    if(U.x >= 0.0 && U.x < 1.)\n    {\n        last.xy = iMouse.xy;\n        O = last;\n    }\n    \n    // forward\n    if(U.x >= 1. && U.x < 2.)\n        O = fw;\n        \n    // player pos\n    if(U.x >= 2. && U.x < 3.)\n        O = pPos;\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R iResolution\n#define T iTime\n#define F iFrame\n#define PI_2 1.5708\n\nmat3 rotY(float a)\n{\n  float c = cos(a);\n  float s = sin(a);\n  return mat3(c, 0.0, s, 0.0, 1.0, 0.0, -s, 0.0, c);\n}","name":"Common","description":"","type":"common"}]}