{"ver":"0.1","info":{"id":"7dSfWR","date":"1645975332","viewed":107,"name":"Ray Marching init()","username":"metalfinger","description":"Starting with Ray marching \\m/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST .01\n\nfloat GetDist(vec3 p)\n{\n    vec4 s = vec4(0., 1., 6., 1.);\n    \n    float sphereDist = length(p-s.xyz) - s.w;\n    float planeDist = p.y;\n    \n    float d = min(sphereDist, planeDist);\n    \n    return d;\n}\n\nfloat RayMarch(vec3 ro, vec3 rd)\n{\n    float dO = 0.;\n    \n    for(int i=0; i < MAX_STEPS; i++)\n    {\n        vec3 p = ro + rd*dO;\n        float dS = GetDist(p);\n        dO += dS;\n        if(dO>MAX_DIST || dS<SURF_DIST) break;\n    }\n    \n    return dO;\n}\n\nvec3 GetNormal(vec3 p)\n{\n    float d = GetDist(p);\n    vec2 e = vec2(.01, 0.);\n    \n    vec3 n = d - vec3(\n            GetDist(p - e.xyy),\n            GetDist(p - e.yxy),\n            GetDist(p - e.yyx)\n        );\n        \n    return normalize(n);\n}\n\nfloat GetLight(vec3 p)\n{\n    vec3 lightPos = vec3(0, 5, 6);\n    \n    lightPos.xz += vec2(sin(iTime), cos(iTime))*2.;\n    \n    vec3 l = normalize(lightPos - p);\n    vec3 n = GetNormal(p);\n    \n    float diff = clamp( dot(n, l), 0., 1.); //giving values between -1 to 1 so must use clamp here\n    \n    float d = RayMarch(p + n*SURF_DIST, l);\n    \n    if(d < length(lightPos - p) ) diff *= 0.1;\n    \n    return diff;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n\n\n    vec3 col = vec3(0.);\n\n    vec3 ro = vec3(0, 1, 0);\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1.));\n    \n    float d = RayMarch(ro, rd);\n    \n    vec3 p = ro + rd*d;\n    \n    float diff = GetLight(p);\n    \n    //d /= 6.;\n    \n    col = vec3(diff, diff, 0.);\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}