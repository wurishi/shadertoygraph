{"ver":"0.1","info":{"id":"MctXW8","date":"1713974218","viewed":60,"name":"splitLines","username":"limil","description":"练习","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["lines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv * 0.5 + 0.25);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float DistanceFunc(vec2 p, vec2 p0, vec2 v) {\n   vec2 d = p - p0;\n   float s = (d.x * v.y - d.y * v.x) / length(v);\n   float t = dot(d, v) / dot(v, v);\n   return s;\n}\n\nbool OnLine(vec2 p, vec2 p0, vec2 v, float threasold) {\n    return abs(DistanceFunc(p, p0, v)) < threasold;\n}\n\nvec2 NextP(vec2 p, vec2 p0, vec2 v) {\n    vec2 rv = vec2(v.y, -v.x);\n    vec2 i = -sign(DistanceFunc(p, p0, v)) * rv / length(rv);\n    return p + i;\n}\n\nvec4 DoDraw(vec2 fragCoord, vec2 lineP, vec2 lineV, int cycle) {\n    vec4 result = vec4(1.0);\n    if(iFrame == 0) {\n       result = vec4(1.0f);\n    } else {\n       vec2 uv = NextP(fragCoord, lineP, lineV) / iResolution.xy;\n       result = texture(iChannel0, uv);\n    }\n    \n    if(iFrame % cycle == 0) {\n       if(OnLine(fragCoord, lineP, lineV, 1.0f)) {\n           result = vec4(0.0f);\n       }\n    }\n    \n    if((iFrame - 3) % cycle == 0) {\n       if(OnLine(fragCoord, lineP, lineV, 2.0f)) {\n           result = vec4(1.0f);\n       }\n    }\n    return result;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 lineP = iResolution.xy / 2.0;\n    int cycle = 15;\n    float deg = 0.2 * float(iFrame / cycle);\n    \n    vec2 lineV = vec2(sin(deg), cos(deg));\n    fragColor = DoDraw(fragCoord, lineP, lineV, cycle);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}