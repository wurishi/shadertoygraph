{"ver":"0.1","info":{"id":"3tsSz2","date":"1563991298","viewed":737,"name":"Copper Coil","username":"104","description":"Put your finger in it","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["2d","induction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159;\nconst float PI2 = PI*2.;\n\nvec3 dtoa(float d, vec3 amount){\n    return vec3(1. / clamp(d*amount, vec3(1), amount));\n}\nmat2 rot2D(float r){\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\nfloat nsin(float x) {\n    return sin(x)*.5+.5;\n}\nvec3 hash32(vec2 p) {\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+19.19);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\nfloat opUnion( float d1, float d2 ) { return min(d1,d2); }\nfloat opSubtraction( float d1, float d2 ) { return max(-d1,d2); }\n\nconst float centerDist = sqrt(3.)/3.;\n\nfloat sdCirc(vec2 p) {\n    p.y -= centerDist;\n    return length(p)-1.;\n}\n\nfloat sdEquilateralTriangle(  in vec2 p )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    if( p.x + k*p.y > 0.0 ) p = vec2( p.x - k*p.y, -k*p.x - p.y )/2.0;\n    p.x += 2.0 - 2.0*clamp( (p.x+2.0)/2.0, 0.0, 1.0 );\n    return -length(p)*sign(p.y);\n}\nfloat sdShape(vec2 p, float m) {\n    return mix(sdEquilateralTriangle(p), sdCirc(p), m);\n}\n\nvoid mainImage( out vec4 o, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy-.5;\n    uv.x *= iResolution.x / iResolution.y;\n    uv.y += .05;\n    uv *= 2.2;\n    float t = 2.3 + iTime*PI/4.;\n    float sd = 1.;\n    float sgn = 1.;\n    vec2 uv2 = uv;\n    for (float i = 0.; i < 25.; ++ i) {\n        float a = t*(sgn*=-1.);\n        float sd2 = sdShape(uv2*.9*rot2D(a)+vec2(0,centerDist), nsin(i*.2+t));\n    \tsd2 = opSubtraction(sd2, sdShape(uv2+vec2(0,centerDist), nsin(i*.2+t)));\n        sd = opUnion(sd, sd2);\n        uv2 *= 1.05;\n    }\n\n    o.rgb = dtoa(sd, vec3(50,400,400)) * vec3(.9,.8,.5);\n    o *= .9;\n    if (sd < 0.) {\n        o.rg *= rot2D(sd*5.);// yes i know this is kinda nonsense\n    \to -= clamp(sd,sd,0.)*4.;\n    }\n    //o = fract(o);\n    o = clamp(o,0.,1.);\n    o = pow(o, o-o+.5);\n    o.rgb += (hash32(fragCoord+t)-.5)*.1;\n    vec2 N = fragCoord / iResolution.xy-.5;\n    o.rgb += dot(N,N) * vec3(0,1,1);\n    o = clamp(o,0.,1.);\n    o.a = 1.;\n}\n\n","name":"Image","description":"","type":"image"}]}