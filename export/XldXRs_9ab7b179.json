{"ver":"0.1","info":{"id":"XldXRs","date":"1481232351","viewed":356,"name":"spherify","username":"glkt","description":"A simple spherify effect that I needed for a VJ project.\nClic-drag on screen to activate it.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pi = 3.14;\n    \n    // mix factor (with mouse drag)\n    float m = (iMouse.x/iResolution.x-0.5)*2. ;\n    m -= min(m,0.)/2.;\n    \n    // image ratio\n    float ratio = iResolution.x/iResolution.y;\n    \n    // normalize and center vs\n\tvec2 uv = fragCoord.xy / iResolution.xy;    \n    uv -= 0.5;\n    \n    // spherify    \n    uv.x *= mix(1.,ratio,m); \n    float k = 1. / max(abs(uv.x),abs(uv.y));\n    \n    // spherify on edges only  \n    \n    /*float ll = (uv.x*uv.x + uv.y*uv.y)*4.;\n    ll *= ll * ll;\n    ll /= 2.;*/   \n    \n    float l = length(uv)*2.;\n    l *= l * l;\n    l /= 2.;\n    \n    // mix with mouse    \n    uv *= (k-1.) * (l*m*2.) + 1.;\n    uv /= m+1.;\n    \n   \t// reset uv center in corner\n    uv += 0.5;    \n    \n    vec4 c = texture( iChannel0, uv );\n    \n    // black outside\n    if(uv.x > 1. || uv.y > 1. || uv.x < 0. || uv.y < 0.){\n        c = vec4(0.,0.,0.,0.);\n    }\n        \n\tfragColor = c;\n}","name":"Image","description":"","type":"image"}]}