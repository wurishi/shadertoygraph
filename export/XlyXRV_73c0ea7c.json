{"ver":"0.1","info":{"id":"XlyXRV","date":"1485163348","viewed":633,"name":"Pulsating noise","username":"maxim_buglov","description":"My experimental training work.","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","circle","loop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\n\n\nfloat random(float p){\n  \treturn fract(sin(p) * 10000.0);\n} \n  \nfloat noise(vec2 p){\n\tfloat t = iTime / 2000.0;\n    if(t > 1.0) t -= floor(t);\n    return random(p.x * 14. + p.y * sin(t) * 0.5);\n}\n\nvec2 sw(vec2 p){\n  \treturn vec2(floor(p.x), floor(p.y));\n}\n  \nvec2 se(vec2 p){\n  \treturn vec2(ceil(p.x), floor(p.y));\n}\n  \nvec2 nw(vec2 p){\n  \treturn vec2(floor(p.x), ceil(p.y));\n}\n  \nvec2 ne(vec2 p){\n  \treturn vec2(ceil(p.x), ceil(p.y));\n}\n\nfloat smoothNoise(vec2 p){\n  \tvec2 inter = smoothstep(0.0, 1.0, fract(p));\n  \tfloat s = mix(noise(sw(p)), noise(se(p)), inter.x);\n  \tfloat n = mix(noise(nw(p)), noise(ne(p)), inter.x);\n    return mix(s, n, inter.y);\n}\n\nmat2 rotate (in float theta){\n  \tfloat c = cos(theta);\n  \tfloat s = sin(theta);\n    return mat2(c, -s, s, c);\n}\n\nfloat circ(vec2 p){\n\tfloat r = length(p);\n\tr = log(sqrt(r));\n\treturn abs(mod(4.0 * r, PI * 2.0) - PI) * 3.0 + 0.2;\n}\n\nfloat fbm(in vec2 p){\n\tfloat z = 2.0;\n    float rz = 0.0;\n    vec2 bp = p;\n    for(float i = 1.0; i < 6.0; i++){\n    \trz += abs((smoothNoise(p) - 0.5)* 2.0) / z;\n        z *= 2.0;\n        p *= 2.0;\n    }\n    return rz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy - 0.5;\n    p.x *= iResolution.x / iResolution.y;\n    p *= 4.0;\n    float rz = fbm(p);\n    p /= exp(mod(iTime * 2.0, PI));\n    rz *= pow(abs(0.1 - circ(p)), 0.9);\n    vec3 col = vec3(0.2, 0.1, 0.643);\n  \tfragColor = vec4(col, 1.0) / rz; \n}","name":"Image","description":"","type":"image"}]}