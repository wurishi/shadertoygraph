{"ver":"0.1","info":{"id":"4tlBRj","date":"1512550249","viewed":289,"name":"try figure","username":"cailuming","description":"try different figure in math, and see what happened and what do they look like","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["math","figure"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n  Test all the mathmatical related figures,there will be more figures in the future.\n  all of the figures are my own style of exploring. And the code is not so clear...\n*/\n\n#define PI 3.1415926\nvec3 getColor(float t)\n{\n   float r = cos(PI*(t-0.25));\n   float g = cos(PI*(t-0.5));\n   float b = cos(PI*(t-0.75));\n   return vec3(r,g,b); \n}\n\nmat2 rot2D(float t)\n{\n  float c = cos(t);\n  float s = sin(t);\n  return mat2(c,s,-s,c);\n}\n\nfloat hash1(float x){\n    return fract(sin(dot(vec2(x),vec2(3.1415926,2.7534234)))*10000.0);\n}\n\nfloat hash1(vec2 x){\n    return fract(sin(dot(vec2(x),vec2(3.1415926,1.734234)))*100000.0);\n}\n\n\nvec2 hash2(vec2 x){\n    float u = hash1(x);\n    float v = hash1(u*2.123);\n    \n    return vec2(u,v);\n}\n\n\nfloat noise2D(vec2 x){\n    vec2 p = floor(x);\n    vec2 u = fract(x);\n    vec2 e = vec2(1,0);\n    \n    u = 6.0*u*u*u*u*u- 15.0*u*u*u*u+10.0*u*u*u;\n    float a = dot(hash2(p),u);\n    float b = dot(hash2(p+e),u-e);\n    float c = dot(hash2(p+e.yx),u-e.yx);\n    float d = dot(hash2(p+e.xx),u-e.xx);\n    \n    float v1 = mix(mix(a,b,u.x),mix(c,d,u.x),u.y);\n    float v2 = mix(mix(length(hash2(p)),length(hash2(p+e)),u.x),mix(length(hash2(p+e.yx)),length(hash2(p+e.xx)),u.x),u.y);\n    \n    return v2;\n}\n\nfloat fbm(vec2 x){\n    float ret  = 0.1;\n    float freq = 0.5;\n    float am   =1.;\n    for(int i=0;i<8;i++){\n        ret+= noise2D(x*freq)*am;\n        am*=0.5;\n        freq*=2.0;\n        x+=sin(am)+iTime*0.3;\n    }\n    return ret;\n}\n\nvoid point(inout vec3 col,vec2 uv,vec2 c,float colv,float off){\n    uv-=c;\n    uv*=6.0;\n    float arc  = atan(uv.y,uv.x);\n    \n    float anch = iTime*3.+off;\n    float r = 0.5+cos(anch*10.)*.06;\n    vec2 fo = vec2(r*cos(anch),r*sin(anch));\n    \n    float v = 0.03/length(uv-fo);\n    \n    col += vec3(v)*getColor(smoothstep(-1.,colv,v*0.0001));\n}\n\nvoid snake(inout vec3 col,vec2 uv,vec2 c,vec2 p1,vec2 p2){\n    uv -= c;\n    uv*=6.0;\n    float arc = atan(uv.y,uv.x);\n  \n    uv.y = uv.y+cos(uv.x*7.+iTime*8.)*(0.1+uv.x*0.01);\n     \n    //draw the line\n    vec2 fdir = uv-p1;\n    vec2 ldir = p2-p1;\n    float ce = clamp(dot(fdir,ldir)/dot(ldir,ldir),0.,1.0);\n    vec2 v3 = ce*ldir;\n    vec2 v4 = fdir-v3;\n    float s = smoothstep(0.,2.0,length(fdir));\n    float v = s*0.02/length(v4);\n    col += vec3(v)*getColor(smoothstep(-1.,1.0,v*0.00001));\n}\n\nvoid drawIconA(out vec3 col,vec3 sp,vec3 center){\n    vec3 p=(sp-center)*2.;\n    \n    float len= length(p);\n    float arc=atan(p.y,p.x);\n    \n    vec3 polor=vec3(len*cos(arc),len*sin(arc),0);\n    \n    float v= 2.5*cos(1.*(arc+2.*sin(tan(10.*len)))+iTime);\n    // clamp the figure radius\n    v*=clamp(-6.*(len*len)+0.1*sin(iTime)+0.6,0.,1.);\n    v=pow(abs(v),4.);\n    col+=vec3(v)*vec3(sin(iTime)*0.3+0.4,0.2*cos(iTime)+0.5,0.1);\n}\n\nvoid drawIconB(out vec3 col,vec3 sp,vec3 center){\n    vec3 p=(sp-center)*2.;\n    \n    float len= length(p);\n    float arc=atan(p.y,p.x);\n    \n    vec3 polor=vec3(len*cos(arc),len*sin(arc),0);\n    \n    float v= cos(0.5*(arc-cos(40.*len+5.*iTime)*(len*0.5)));\n    v*=pow(abs(v),90.);\n    v+=pow(abs(v),13.);\n    \n    // clamp the figure radius\n    v*=clamp(-3.*(len*len)+0.9,0.,1.);\n    \n    col+=vec3(v)*vec3(0.3+0.3*sin(iTime),0.4+0.2*cos(iTime),0.6);\n}\n\nvoid drawIconC(out vec3 col,vec3 sp,vec3 center,vec3 color,float freq,float strength,float size,float bent){\n    vec3 p=(sp-center);\n    \n    float arc=atan(p.y,p.x);\n    \n    float len=size*(1.+bent*sin(iTime)*sin(freq*arc+iTime));\n    \n    vec3 polor=vec3(len*cos(arc),sin(arc)*len,0);\n    \n    float lenToEdge= length(p-polor);\n    \n    float v= strength/lenToEdge;\n    \n    v=pow(v,1.2);\n  \n    col+=vec3(v)*color;\n}\n\n// draw an apple or something else..\nvoid drawIconD(out vec3 col,vec3 sp,vec3 center,vec3 color,float freq,float strength,float size,float bent){\n    vec3 p=(sp-center);\n    \n    float arc=atan(p.y,p.x);\n    \n    float len=size*(1.+(0.5*bent*sin(iTime)-0.9)*sin(freq*arc));\n    \n    vec3 polor=vec3(len*cos(arc),sin(arc)*len,0);\n    \n    float lenToEdge= length(p-polor);\n    \n    float v= strength/lenToEdge;\n    \n    v=pow(v,1.2);\n  \n    col+=vec3(v)*color;\n}\n \nvoid drawIconE(inout vec3 col,vec2 uv,vec2 c,float snum,float radius)\n{\n     uv-=c;\n     uv*=6.0;\n     uv*=rot2D(iTime);\n     float num = 2.0*PI/snum;\n     float theta = atan(uv.y,uv.x);\n     \n     float a = mod(theta,num)-0.5*num;\n     float ca = cos(a);\n     float sa = sin(a);\n    \n     float pr = radius/max(ca,0.0);\n     \n     vec2 fo = vec2(cos(theta),sin(theta))*pr;\n   \n     float v = 0.03/(length(uv-fo)*ca);\n     \n     v = pow(v,1.5);\n     col+= v*getColor(0.1*sin(iTime)+0.6);\n}\n\nvoid drawIconF(inout vec3 col,vec2 uv,vec2 c,float snum,float r )\n{\n     uv-=c;\n     uv*=6.0;\n     uv*=rot2D(PI*1.5);\n     float theta = atan(uv.y,uv.x);\n     float num = 2.0*PI/(snum+sin(length(uv)*5.));\n   \n     float inter = mod(theta,num)-0.5*num;\n     float r1 = length(vec2(inter))+0.5;\n     r1*=r; \n     vec2 formula =   vec2(r1*cos(theta),r1*sin(theta));\n     float v = length(uv-formula);\n     \n     col+= (0.05/v)*getColor(0.1*sin(iTime)+.2);\n}\n\nvoid drawIconG(inout vec3 col,vec2 uv,vec2 c,float snum,float radius)\n{\n     uv-=c;\n     uv*=6.0;\n     uv*=rot2D(iTime);\n     float theta = atan(uv.y,uv.x);\n     float num = 2.0*PI/snum;\n     float cur_arc = mod(theta,num);\n    \n     float inter = cos(cur_arc-0.5*num);\n     vec2 formula = vec2(radius*inter*cos(theta),radius*inter*sin(theta));\n     \n     float v = length(uv-formula);\n     v = 0.05/v;\n     v = pow(v,0.9);\n     col+= v*getColor(0.1*sin(iTime)+.2);\n}\n\nvoid drawIconH(inout vec3 col,vec2 uv,vec2 c,float snum,float radius,float v_radius)\n{\n     uv-=c;\n     uv*=6.0;\n     uv*=rot2D(iTime);\n     float theta = atan(uv.y,uv.x);\n     float num = 2.0*PI/snum;\n     float cur_arc = mod(theta,num);\n     //vertex angle\n     float v_arg  = 2.0*PI/v_radius;\n     float inter = radius/cos(PI*0.5-v_arg-abs(cur_arc-0.5*num));\n     vec2 formula = vec2(inter*cos(theta),inter*sin(theta));\n     \n     float v = length(uv-formula);\n     v = 0.05/v;\n     v = pow(v,0.9);\n     col+= v*getColor(0.1*sin(iTime)+.2);\n}\n\n\nvoid drawIconI(inout vec3 col,vec2 uv,vec2 c,float snum,float r1,float r2,float offh,float scale)\n{\n     uv-=c;\n     uv*=6.0;\n     uv*=rot2D(iTime);\n     float theta = atan(uv.y,uv.x);\n     float num = 2.0*PI/snum;\n     float cur_arc = mod(theta,num);\n     \n     float inter = r1/(abs(sin(cur_arc-0.5*num))+r2);\n     inter = clamp(inter,0.6,0.6+offh);\n    \n     vec2 formula = vec2(scale*inter*cos(theta),scale*inter*sin(theta));\n     \n     float v = length(uv-formula);\n     v = 0.02/v;\n     v = pow(v,1.1);\n     col+= v*getColor(0.1*sin(iTime)+.2);\n}\n\n//the flower shape\nvoid drawIconJ(inout vec3 col,vec2 uv,vec2 c,float snum,float r1)\n{\n     uv-=c;\n     uv*=6.0;\n     uv*=rot2D(iTime);\n     float theta = atan(uv.y,uv.x);\n     float num = 2.0*PI/snum;\n     float cur_arc = mod(theta,num);\n     float inter =r1+0.6*fract(abs(cur_arc-num*0.5));\n     vec2 formula = vec2(inter*cos(theta),inter*sin(theta));\n     \n     float v = length(uv-formula);\n     v = 0.04/v;\n     v = pow(v,1.1);\n     col+= v*getColor(0.1*sin(iTime)+.7);\n}\n\n//the moon shape\nvoid drawIconK(inout vec3 col,vec2 uv,vec2 c,float r1)\n{\n     uv-=c;\n     uv*=6.0;\n     uv*=rot2D(PI);\n     float theta = atan(uv.y,uv.x);\n     float inter =cos(theta);\n     vec2 formula = vec2(r1*inter*cos(theta),r1*inter*sin(theta));\n   \n     float v = length(uv-formula);\n\n     v = 0.1/v;\n     v = pow(v,1.1);\n     col+= v*getColor(0.1*sin(iTime)+.4);\n}\n\n\n//heart shape\nvoid drawIconL(inout vec3 col,vec2 uv,vec2 c,float r1)\n{\n     uv-=c;\n     uv*=6.0;\n     uv*=rot2D(PI*0.5);\n     float theta = atan(uv.y,uv.x);\n     float cur_arc = mod(abs(theta),PI);\n     //modem the heart shape\n     float inter =sin(cur_arc*0.07)*(4.+sin(5.0+cur_arc*2.)*0.5+sin(iTime*5.+cur_arc*2.)*0.2);\n    \n     vec2 formula = vec2(r1*inter*cos(theta),r1*inter*sin(theta));\n   \n     float v = length(uv-formula);\n     v = 0.08/v;\n     v = pow(v,0.7);\n     col+= v*getColor(0.05*sin(iTime)+.1);\n}\n\nvoid drawIconM(inout vec3 col,vec2 uv,vec2 c,float r1)\n{\n     uv-=c;\n     uv*=6.0;\n     \n     float theta = atan(uv.y,uv.x);\n     \n     float num = 2.0*PI;\n     float cur_arc = mod(theta,num);\n     \n     float inter =cos(theta)*(abs(theta));\n    \n     vec2 formula = vec2(r1*inter*cos(theta),r1*inter*sin(theta));\n   \n     float v = length(uv-formula);\n     v = 0.14/v;\n     v = pow(v,1.1);\n     col+= v*getColor(0.1*sin(iTime)+.4);\n}\n\n\nvoid Ring(inout vec3 col,vec2 uv,vec2 c,float colv){\n    uv -= c;\n    uv*=6.0;\n    float arc = atan(uv.y,uv.x);\n    float r = 0.5;\n    vec2 fo = vec2(r*cos(arc),r*sin(arc));\n    float v = 0.03/length(uv-fo);\n    \n    col += vec3(v)*getColor(smoothstep(-1.,colv,v*0.00001));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy-vec2(0.5);\n    uv*=1.5;\n    uv.x+=0.1;\n    float aspect=iResolution.x/iResolution.y;\n    \n    vec3 screenP=vec3(uv.x*aspect,uv.y,0);\n    \n    vec3 col =vec3(0);\n    \n    drawIconA(col,screenP,vec3(-0.7,0.,0));\n    drawIconB(col,screenP,vec3(0.5,0.002*sin(10.*iTime),0));\n    drawIconC(col,screenP,vec3(-0.35,0.0,0),vec3(sin(iTime)*0.3+0.6,0.3*cos(iTime)+0.4,0.5),10.,0.007,0.1,0.3);\n    drawIconC(col,screenP,vec3(-0.35,0.0,0),vec3(sin(iTime)*0.3+0.4,0.2*cos(iTime)+0.7,0.2),10.,0.017,0.05,0.3);\n    drawIconC(col,screenP,vec3(0.0,0.0,0),vec3(sin(iTime)*0.3+0.6,0.3*cos(iTime)+0.4,0.5),4.,0.007,0.07,0.6);\n    drawIconC(col,screenP,vec3(0.0,0.0,0),vec3(sin(iTime)*0.3+0.4,0.2*cos(iTime)+0.7,0.2),4.,0.017,0.035,0.6);\n    drawIconD(col,screenP,vec3(0.35,0.04,0),vec3(sin(iTime)*0.3+0.6,0.3*cos(iTime)+0.4,0.5),1.,0.007,0.07,0.7);\n    \n    drawIconE(col,screenP.xy,vec2(-0.7,-0.3),5.,0.5);\n    drawIconE(col,screenP.xy,vec2(-0.0,-0.3),3.,0.3);\n    drawIconE(col,screenP.xy,vec2(0.35,-0.3),4.,0.5);\n    \n    drawIconF(col,screenP.xy,vec2(-0.35,-0.3),5.,0.5);\n    \n    drawIconG(col,screenP.xy,vec2(-0.7,0.3),5.,0.5);\n    drawIconH(col,screenP.xy,vec2(-0.35,0.3),5.,0.2,18.0);\n    drawIconH(col,screenP.xy,vec2(0.35,0.3),5.,0.3,9.0);\n    drawIconI(col,screenP.xy,vec2(0.7,0.3),6.,0.3,0.2,0.2,0.8);\n    drawIconJ(col,screenP.xy,vec2(1.05,0.3),6.0,0.3);\n    drawIconK(col,screenP.xy,vec2(1.12,0.),1.);\n    drawIconL(col,screenP.xy,vec2(1.05,-0.28),1.);\n   \n    Ring(col,screenP.xy,vec2(0.0,0.3),0.8);\n    point(col,screenP.xy,vec2(0.0,0.3),0.4,.0);\n    point(col,screenP.xy,vec2(0.0,0.3),1.9,PI);\n    snake(col,screenP.xy,vec2(0.65,-0.3),vec2(-1.,0.),vec2(1.,0.));\n    col+=getColor(fbm(uv)+sin(iTime))*0.2;\n\tfragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}