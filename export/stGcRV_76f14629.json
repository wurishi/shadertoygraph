{"ver":"0.1","info":{"id":"stGcRV","date":"1661809472","viewed":801,"name":"Piau-Engaly","username":"athibaul","description":"Recreating a sunrise photo I took in the French Pyrénées.","likes":55,"published":1,"flags":8,"usePreview":0,"tags":["clouds","landscape","photo","smoke","mountains"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(vec2 p)\n{\n    vec2 ip = floor(p), fp = fract(p);\n    fp = smoothstep(0.,1.,fp);\n    return mix(\n               mix(hash12(ip+vec2(0,0)), hash12(ip+vec2(1,0)), fp.x),\n               mix(hash12(ip+vec2(0,1)), hash12(ip+vec2(1,1)), fp.x),\n               fp.y);\n}\n\nfloat fbm(vec2 p, int lv)\n{\n    float a = 1.0;\n    float t = 0.0;\n    for( int i=0; i<lv; i++ )\n    {\n        p += vec2(13.102,1.535);\n        t += a*noise(p);\n        p *= mat2(3,4,-4,3) * 0.4;\n        a *= 0.5;\n    }\n    return 0.5*t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    float mtHeight = fbm(uv.xx+0.6, 8);\n    float mtHeightSm = fbm(uv.xx+0.6, 3);\n    vec3 col = vec3(0);\n    vec2 sunPos = vec2(0.8,-0.8);\n    vec3 skyCol = vec3(0.075,0.310,0.518);\n    float q = uv.y-sunPos.y;\n    float q2 = uv.x-sunPos.x;\n    skyCol = mix(skyCol, vec3(0.482,0.580,0.902), exp(-0.5*q*q-0.2*q2*q2));\n    vec3 cloudCol = mix(skyCol, vec3(0.5), 0.2);\n    skyCol = mix(skyCol, vec3(0.706,0.851,0.953), exp(-q*q*3.-0.5*q2*q2));\n    skyCol = mix(skyCol, vec3(0.980,0.5,0.3), exp(-q*q*10.-0.5*q2*q2));\n    skyCol = mix(skyCol, vec3(1.0,1.0,0.7), exp(-3.*length(uv-sunPos)));\n    vec3 cloudCol2 = mix(skyCol, vec3(0.5), 0.2);\n    vec3 cloudCol3 = mix(vec3(0.980,0.5,0.3),vec3(1.0,1.0,0.7), exp(-length(uv-sunPos)));\n    cloudCol3 = mix(cloudCol3, cloudCol, smoothstep(0.,-1.,uv.y+0.3*uv.x));\n    \n    float w = 1.5*length(fwidth(uv));\n    float isSky = smoothstep(0.,w,uv.y+0.3*uv.x+0.2*max(uv.x,0.)+1.-mtHeight);\n    col = mix(col, skyCol, isSky);\n    col = mix(col, skyCol, 0.5*smoothstep(-0.5,0.1,uv.y+0.3*uv.x+0.2*max(uv.x,0.)+1.-mtHeightSm));\n    \n    vec2 fuv = fract(0.1*uv);\n    vec2 uvv = 20.*fuv*(1.-fuv)*(0.5-fuv);\n    uvv = vec2(1,-1)*uvv.yx;\n    vec2 uv2 = uv + uvv*cos(0.1*iTime);// twisting\n    \n    float silver = fbm(30.*uv - 0.06*iTime, 8) + 30.*(uv.y + 0.8);\n    silver = smoothstep(0.,1.,silver)*smoothstep(2.,1.,silver) * 1./(1.+500.*q2*q2) * isSky;\n    col += silver * vec3(0.9,0.6,0.3) * 100.;\n    \n    \n    float lowClouds = fbm(5.*uv + 0.1*iTime, 8);\n    float midClouds = fbm(3.*uv + vec2(0.06,-0.03)*iTime, 8);\n    float hiClouds = fbm(uv2 + vec2(0.1,0.01)*iTime, 8) - 0.5;\n    float hiClouds2 = fbm(uv + 10. + vec2(0.062,-0.03)*iTime, 8) - 0.5;\n    col = mix(col, cloudCol3, 0.5*smoothstep(0.,1., -uv.y+3.*hiClouds));\n    col = mix(col, cloudCol3, 0.5*smoothstep(0.,1., -uv.y+3.*hiClouds2));\n    col = mix(col, vec3(0.9,0.6,0.3) * 100., 1./(1.+2000.*(q*q+q2*q2)));\n    col += vec3(0.9,0.6,0.3) * 2./(1.+10.*sqrt(q*q+0.3*q2*q2));\n    col = mix(col, 0.8*cloudCol, 0.8*smoothstep(0.,1., -2.*(uv.y+0.5)+midClouds));\n    col = mix(col, 0.5*cloudCol, smoothstep(0.,1., -3.*(uv.y+0.8)+lowClouds));\n    \n    \n    col = mix(col, col*pow(col/(col.r+col.g+col.b), vec3(dot(uv,uv)*0.3)), 0.2); // vignette\n    col = pow(col, vec3(2.2));\n    col = (col*(2.51*col+0.03))/(col*(2.43*col+0.59)+0.14); // tonemapping\n    col = pow(col, vec3(1./2.2));\n    \n    col += 0.03 * (hash12(fragCoord)-0.5) * sqrt(iResolution.y/400.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// Hash functions by Dave Hoskins\n// https://www.shadertoy.com/view/4djSRW\n//----------------------------------------------------------------------------------------\n//  1 out, 2 in...\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n//----------------------------------------------------------------------------------------\n//  2 out, 1 in...\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"vec2 noise(float x)\n{\n    float xi = floor(x), xf = fract(x);\n    xf = smoothstep(0.,1.,xf);\n    return mix(hash21(xi), hash21(xi+1.), xf)*2.-1.;\n}\n\nvec2 mainSound( int samp, float t )\n{\n    vec2 sig = vec2(0.);\n    sig += 0.01 * noise(300.*mod(t,16.2)) * (1. + 0.5*noise(t-100.));\n    sig += 0.01 * noise(1000.*mod(t,10.)) * (1. + 0.5*noise(0.62*t));\n    sig += 0.005 * noise(2000.*mod(t,11.)) * (1. + 0.5*noise(0.25*t));\n    sig += 0.002 * noise(4000.*mod(t,12.)) * (1. + 0.5*noise(0.1*t));\n    sig += 0.001 * noise(8000.*mod(t,13.)) * (1. + 0.5*noise(0.141*t));\n    return sig * smoothstep(0.,4.,t);\n}","name":"Sound","description":"","type":"sound"}]}