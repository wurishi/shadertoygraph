{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"webcam","id":"4sf3zn","filepath":"/presets/webcam.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"const float radius = 2.0;\nconst float power_radius = radius * radius;\nconst int intensity_level = 8;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    int intensity_count[intensity_level];\n    // cleanup\n    for (int i = 0; i < intensity_level; ++i) {\n        intensity_count[i] = 0;\n    }\n\n    // step 1\n    // for each pixel within radius of a pixel\n    for (float x = -radius; x < radius; ++x) {\n        for (float y = -radius; y < radius; ++y) {\n            vec2 abs_pos = vec2(x, y);\n            if (power_radius < dot(abs_pos, abs_pos))\n                continue;\n            vec2 pos = (abs_pos / iResolution.xy) + uv;\n            vec4 col_element = texture(iChannel0, pos);\n            int current_intensity = int(\n                (dot(col_element, vec4(1.0, 1.0, 1.0, 0.0)) / 3.0) * \n                float(intensity_level)\n            );\n            current_intensity = (current_intensity >= intensity_level) ?\n                intensity_level - 1 :\n            \tcurrent_intensity;\n            for (int i = 0; i < intensity_level; ++i) {\n                if (i == current_intensity) {\n                    intensity_count[i] += 1;\n                    break;\n                }\n            }\n        }\n    }\n    // step 2\n    // find the maximum intensity\n    int max_level = 0;\n   \tfloat val = 0.0;\n    vec4 col_out = vec4(0.0, 0.0, 0.0, 1.0);\n    for (int level = 0; level < intensity_level; ++level) {\n        if (intensity_count[level] > max_level) {\n            max_level = intensity_count[level];\n            val = float(max_level) / (3.14 * power_radius);\n            col_out = vec4(val, val, val, 1.0);\n        }\n    }\n \t// step 3\n    // write the final color\n\tfragColor = col_out;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":true,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldjXRt","date":"1415098548","viewed":2035,"name":"Edge Detector","username":"anirul","description":"Derived from the painter effect","likes":28,"published":1,"flags":2,"usePreview":0,"tags":["2ddrawingeffect"],"hasliked":0,"parentid":"","parentname":""}}