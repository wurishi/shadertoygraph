{"ver":"0.1","info":{"id":"mtjBDd","date":"1694637396","viewed":25,"name":"Signed Distance Field Globs","username":"unravelwinter","description":"An animated pretty globular pattern, made with SDFs.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circleSDF(vec2 center, float radius, vec2 p) {\n    return distance(p, center) - radius;\n}\n\nfloat smin(float a, float b) {\n    float k = 32.0;\n    float res = exp2(-k*a) + exp2(-k*b);\n    return -log2(res)/k;\n}\n\nfloat sceneSDF(vec2 p) {\n    vec2 center0 = vec2(-0.125, 0.0) + vec2(0.25*sin(0.6*iTime), 0.125*cos(0.34*iTime));\n    vec2 center1 = vec2(0.125, 0.0) + vec2(0.375*sin(0.23*iTime), 0.0625*cos(0.44*iTime));\n    vec2 center2 = vec2(-0.125, 0.0) + vec2(-0.375*sin(0.31*iTime), 0.625*cos(0.54*iTime));\n\n    float d1 = circleSDF(center0, 0.25 + 0.1*sin(iTime), p);\n    float d2 = circleSDF(center1, 0.2 + 0.1*cos(0.8*iTime), p);\n    float d3 = circleSDF(center2, 0.25, p);\n    \n    return smin(smin(d1, d2), d3);\n}\n\nvec2 swirl(vec2 p) {\n    float r = length(p);\n    float ang = atan(p.y, p.x) + iTime*0.25;\n    \n    float f = sin(iTime * 0.1);\n    \n    ang += 2.0*sin(r);\n    ang *= 2.0;\n    return vec2(r*cos(ang), r*sin(ang));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    // Normalized pixel coordinates from -1 to 1 on x-axis  \n    vec2 p = (2.*fragCoord - iResolution.xy)/iResolution.x;\n    p = swirl(p); // Optional!\n\n    float d = sceneSDF(p);\n    if (d <= 0.0) {\n        fragColor = vec4(1.0,sqrt(-d)*2.0,0.0,1.0);\n    } else if (d < 0.1) {\n        fragColor = vec4(vec2(0.5*(1.0-1.0*d/0.1)), d/10.0 ,1.0);\n    } else {\n        fragColor = vec4(0.0,0.0,0.0,1.0);\n    }\n    \n    // See how the swirl(p) remaps the screen \n    // vec2 coord = swirl(p)/2.0 + 0.5;\n    // fragColor = vec4(coord.x, 0.0, coord.y, 0.0);\n}","name":"Image","description":"","type":"image"}]}