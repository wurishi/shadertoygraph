{"ver":"0.1","info":{"id":"XdlfDf","date":"1498578066","viewed":132,"name":"DCT vs CCT Zoom","username":"MichaelPohoreski","description":"INSTRUCTIONS: Drag the mouse left and right to zoom in/out","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fft","discrete","dct"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nAlso see:\n\n1D DCT Basis Image\nhttps://www.shadertoy.com/view/XdffWl\n\nDCT ZOOM\n* https://www.shadertoy.com/view/XdlfWX\n\nDCT vs CCT\n* https://www.shadertoy.com/view/4ssBWX\n\nDCT vs CCT Zoom\nhttps://www.shadertoy.com/view/XdlfDf\n\n*/\n\n#define PI 3.14159265359\n\nfloat fft(vec2 uv, float SIZE )\n{\n    return cos( uv.y * PI * (2.0 * uv.x + 1.0) / (2.0*SIZE) ); // v*Pi*(2u+1)/16\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 st )\n{\n    vec2 uv = st;\n    st /= iResolution.xy;\n    \n    if( st.x >= 0.5 )\n        uv.x += -iResolution.x*0.5; // Right = CCT (Continuous)\n        \n    uv.x *= 2.0; // Common to both\n    \n    float SIZE = ( iMouse.z < 1.0 )\n        ? 8.0\n        : max( 0.5, 16.0 * iMouse.x / iResolution.x)\n        ;\n    vec2 pq = (SIZE * uv) / (iResolution.xy / SIZE);\n\n    if (st.x < 0.5 )\n        pq = floor( pq ); // Left = DCT (Discrete)\n           \n    float y      = (1.0 + fft( pq, SIZE )) * 0.5;\n    vec3  color  = vec3( y ); // TODO: Gamma correct\n    fragColor    = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}