{"ver":"0.1","info":{"id":"wdf3D2","date":"1547620053","viewed":284,"name":"Tint sky","username":"SourceW","description":"e","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["clouds","sky"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Hash(vec3 uv) {\n    float dt = dot(abs(uv)*sin(uv), vec3(3.2, 7.2, 5.0));\n    float sn = dot(dt, 3.1415926);\n    return fract(sin(sn)*sin(sn) * 75.6);\n}\n\nfloat noise(vec3 p)\n{\n    vec2 add = vec2(1.0, 0.0);\n\tvec3 i = floor(p);\n\tvec3 f = fract(p); \n\tf *= f * (3.0-2.0*f);\n\n    return mix(\n\t\tmix(mix(Hash(i  \t\t\t), \tHash(i + add.xyy),f.x),\n\t\t\tmix(Hash(i + add.yxy),\t\tHash(i + add.xxy),f.x),\n\t\t\tf.y),\n\t\tmix(mix(Hash(i + add.yyx),    \tHash(i + add.xyx),f.x),\n\t\t\tmix(Hash(i + add.yxx), \t\tHash(i + add.xxx),f.x),\n\t\t\tf.y),\n\t\tf.z);\n}\n\n\nfloat FBM(vec3 p) {\n    vec3 coord = p;\n    coord += 100.0;\n\tcoord.x += iTime * 0.1;\n\nfloat n  = noise(coord) * 0.5;   coord *= 3.0;\n          n += noise(coord) * 0.3;  coord *= 2.1;\n          n += noise(coord) * 0.2; coord *= 2.2;\n          n += noise(coord) * 0.0625;\n\n\n    return pow(abs(n), 1.155);\n\t\n}\n\n float MapCloud(vec3 pos){\n \n  float d = 1.0 - 0.3 * abs(3.8 - pos.y);\n  \n   d -= 2.2 * FBM( pos*0.3 );\n   d = clamp( d, 0.0, 1.0 );\n\n  return d; \n}\n\nvec4 Clouds(vec3 rd,float tmax){\n\n\nvec4 sum ;\n\n float t = 0.1;\n for (int i = 0; i < 64; i++) {\n\n vec3 pos = t*rd;\n \n float den = MapCloud(pos);\n \n  float dif =  clamp((den - MapCloud(pos+0.5*normalize(vec3(0.0,1.0,0.0))))/0.6, 0.0, 1.0 );\n \n  vec4 col = vec4( 1.0,1.0,1.0,den );\n \n vec3 lin = vec3(0.5,0.7,0.8)*1.4 + vec3(2.0, 0.6, 0.3)*dif;        \n \n col.xyz *= lin;\n\n col.xyz = mix( col.xyz, vec3(0.0,0.0,0.0), 1.0-exp(-0.0018*t*t) );\n\n col.a *= 1.0;\n col.rgb *= col.a;\n \n  sum += col * (1.0 - sum.a);  \n  t += max(0.1,0.05*t);\n}\n\nsum =  clamp( sum, 0.0, 1.0 );\n\nreturn sum;\n }\n\nmat3 setCamera( in vec3 ro, in vec3 ta, float cr )\n{\n\tvec3 cw = normalize(ta-ro);\n\tvec3 cp = vec3(sin(cr), cos(cr),0.0);\n\tvec3 cu = normalize( cross(cw,cp) );\n\tvec3 cv = normalize( cross(cu,cw) );\n    return mat3( cu, cv, cw );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (-iResolution.xy + 2.0*fragCoord.xy)/ iResolution.y;\n\n    vec2 m = iMouse.xy/iResolution.xy;\n    \n\n    vec3 ro = 4.0*normalize(vec3(sin(2.0*m.x), 0.1*m.y, cos(2.0*m.x)));\n\tvec3 ta = vec3(0.0, 0.0, 0.0);\n    mat3 ca = setCamera( ro, ta, 0.0 );\n\n    vec3 rd =  ca*normalize( vec3(p.xy,1.5));\n    \n    vec4 C = Clouds(rd,2000.0);\n    \n    C.a *= length(rd.y*2.5);\n    \n    vec4 sky = mix(vec4(0.125,0.45,0.9,1.0),vec4(0.85,0.85,0.85,1.0),0.45-rd.y);\n    \n    fragColor = mix(sky,C,C.a);\n}\n","name":"Image","description":"","type":"image"}]}