{"ver":"0.1","info":{"id":"4ccSzn","date":"1713462632","viewed":147,"name":"YCbCr chroma subsampling","username":"sayochi","description":"interesting way to compress color data","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["compression","image","chrome","ycbcr","subsampling","singlepass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgbToYCbCr(vec3 rgb) {\n    float Y = 0.299 * rgb.r + 0.587 * rgb.g + 0.114 * rgb.b;\n    float Cb = 0.564 * (rgb.b - Y);\n    float Cr = 0.713 * (rgb.r - Y);\n    return vec3(Y, Cb, Cr);\n}\n\nvec3 ycbcrToRGB(vec3 ycbcr) {\n    float r = ycbcr.x + 1.403 * ycbcr.z;\n    float g = ycbcr.x - 0.714 * ycbcr.z - 0.344 * ycbcr.y;\n    float b = ycbcr.x + 1.773 * ycbcr.y;\n    return vec3(r, g, b);\n}\n\n\nvec3 Fetch(vec2 pos, float factor) {\n  vec2 res = vec2(2, 1)*factor;\n  pos=floor(pos*res)/res;\n  return texture(iChannel0,pos.xy,-16.0).rgb;\n}\n\n//drag mouse left or right to change the subsampling resolution of CbCr\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 texColor = texture(iChannel0, uv);\n    float factor = iMouse.x / iResolution.x * 20.0;\n\n    vec3 subsampledColor = Fetch(uv, factor); //low res\n\n    vec3 ycbcr1 = rgbToYCbCr(texColor.rgb);\n    vec3 ycbcr2 = rgbToYCbCr(subsampledColor.rgb); //low res\n    \n    vec3 ycbcr = vec3(ycbcr1.r, ycbcr2.y, ycbcr2.z);\n    vec3 rgb = ycbcrToRGB(ycbcr);\n    fragColor = vec4(rgb, texColor.a);\n}\n\n\n","name":"Image","description":"","type":"image"}]}