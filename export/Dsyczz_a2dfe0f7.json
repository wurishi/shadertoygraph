{"ver":"0.1","info":{"id":"Dsyczz","date":"1695694719","viewed":17,"name":"5/49","username":"tono","description":"5","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["49"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat bo(vec3 p,vec3 s){p = abs(p)-s;return max(p.x,max(p.y,p.z));}\nfloat bar(vec2 p,vec2 s){p = abs(p)-s;return max(p.x,p.y);}\nfloat pi = acos(-1.);\nvec2 pmod(vec2 p, float r){float a = atan(p.x,p.y)+pi/r;float n = (pi*2.)/r;return p*rot(-(floor(a/n)*n));}\nvec2 map(vec3 p)\n{\n    float t = iTime/2.;\n    float o = 10.;\n    float id = 0.;\n    vec3 pp = p;\n    pp.y = mod(pp.y,.5) - .25;\n    pp.xz = pmod(pp.xz,6.)-vec2(0.,10.);\n    pp.xz*=rot(t*sin(floor(p.y*2.)) * 3.);\n    o = bo(pp,vec3(vec2(.3+abs(p.y)/3.),.1).xzy);\n    p.xz *= rot(sin(p.y/3.) + t);\n    p.y = max(1.,p.y);\n    p.xz = vec2(length(p.xz) - iTime,atan(p.xz));\n    p = sin(p);\n    p.xz *= rot(p.y * 1.)* mix(p.y,1.,.5);\n    float b = bar(p.xz,vec2(.2));\n    if(o > b){o=b;id=1.;}    \n    return vec2(o*.8,id);\n}\n\nvec2 march(vec3 cp , vec3 rd)\n{\n    float depth = 0.;\n    for(int i = 0 ; i< 99 ; i++)\n    {\n        vec3 rp = cp + rd * depth;\n        vec2 d = map(rp);\n        if(abs(d.x) < 0.01)\n        {\n            return vec2(depth,d.y);\n        }\n        if(depth > 30.)break;\n        depth += d.x;\n    }\n    return vec2(-depth , 0.);\n\n}\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n\tvec3 cp = vec3(0.,-2.,-pi * 2.*0.);\n    cp.xz += pi/2.;\n    \n    cp.y += sin(iTime/2.);\n    cp.z += sin(iTime/3.) * pi * 2.;\n    cp.x += tan(iTime/2.);\n    vec3 target = vec3(0.,-1.,0.);\n    \n    vec3 col = vec3(0.,0.8,1.);\n    \n    vec3 cd = normalize(vec3(target - cp));\n    vec3 cs = normalize(cross(cd , vec3(0.,1.,0.)));\n    vec3 cu = normalize(cross(cd,cs));\n    float fov = 1.;\n    vec3 rd = normalize(cd * fov + cs * p.x + cu * p.y);\n    vec2 d = march(cp,rd);\n    if( d.x > 0.)\n    {\n        vec2 e = vec2(0.,0.01);\n        vec3 pos = cp + rd * d.x;\n        vec3 N = normalize(map(pos).x - vec3(map(pos - e.xyy).x , map(pos - e.yxy).x,map(pos - e.yyx).x));\n        col = N;\n        vec3 sun = normalize(vec3(2.,4.,8.));\n        //sun.xz *= rot(iTime/10.);\n        float diff = max(0.,dot(-sun,N));\n        diff = mix(diff , 1.,.0);\n        float sp = max(0.,dot(reflect(sun,N),-rd));\n        sp = pow(sp,30.);\n        vec3 mat = vec3(0.);\n        if(diff > .9)\n        {\n            mat = vec3(1.,.0,0.);\n        }else if(diff > .8)\n        {\n            mat = vec3(1.,1.,0.);\n        }else\n        {\n            mat = vec3(0.,0.,1.);\n        }\n        col = vec3(1.) * diff + sp * vec3(1.) * 10.;\n        mat = mix(mat,col,floor(mod( (iTime/pi + 1.) /2.,2.)));\n        col = mat;\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}