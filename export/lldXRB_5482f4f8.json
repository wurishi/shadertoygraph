{"ver":"0.1","info":{"id":"lldXRB","date":"1480389866","viewed":741,"name":"Relax : Night Shader Edition","username":"Canilho","description":"Self Learning study, based on Inigo Quilez work. \nBig thanks to him. \nOriginal music track created by me. \nMore Sounds at https://soundcloud.com/canilho","likes":21,"published":1,"flags":64,"usePreview":0,"tags":["shader3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"MsS3D1","filepath":"https://soundcloud.com/canilho/relax","previewfilepath":"https://soundcloud.com/canilho/relax","type":"musicstream","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This was a self learning study of an animation of\n\t// inigo quilez \n\t// Big thanks for the inspiration\n\t// https://www.shadertoy.com/view/ldXXDj\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat fbm( vec2 p )\n{\n    return 0.5000*texture( iChannel0, p*1.00 ).x + \n           0.2500*texture( iChannel0, p*2.02 ).x + \n           0.1250*texture( iChannel0, p*4.02 ).x + \n           0.0675*texture( iChannel0, p*8.02 ).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod( iTime, 458.0 );\n\tvec2 p = (-iResolution.xy+2.0*fragCoord.xy) / iResolution.y;\n    vec2 i = p;\n\n    // camera\n    p += vec2(1.0,3.0)*0.002*2.0*cos( iTime*2.0 + vec2(0.0,1.5) );    \n    p += vec2(1.0,3.0)*0.001*1.0*cos( iTime*5.0 + vec2(1.0,4.5) );    \n    p *= 0.95 + 0.05*length(p);\n    float an = 0.03*sin( 0.1*time );\n    float co = cos(an);\n    float si = sin(an);\n    p = mat2( co, -si, si, co )*p;\n    \n    // water\n    vec2 q = vec2(p.x,1.0)/p.y;\n    q.y -= 0.3*time;    \n    vec2 off = texture( iChannel0, 0.5*(mod(time*0.0001,2.0))*q*vec2(1.0,2.0) - vec2(0.0,0.007*time) ).xy;\n    q += 0.4*(-1.0 + 5.0*off);\n    vec3 col = texture( iChannel0, 0.8*q*(mod(time*0.001,2.0)) *vec2(.5,8.0) + vec2(0.0,0.01*time) ).zyx;\n    col *= 0.4;\n    float re = 1.0-smoothstep( 0.0, 0.7, abs(p.x-0.6) - abs(p.y)*0.3+0.2 );\n    col += 1.0*vec3(1.0,0.9,0.73)*re*0.2*off.y*5.0*(1.0-col.x);\n    float re2 = 1.0-smoothstep( 0.0, 2.0, abs(p.x-0.6) - abs(p.y)*0.85 );\n\n    \n    // sky\n    vec3 sky = vec3(0.01,0.03,0.1);\n    // stars    \n    sky += 0.8*smoothstep( 0.90,1.0,texture( iChannel3, 2.5*p+time*0.03 ).x);\n    sky += 0.4*smoothstep( 0.50,1.0,texture( iChannel3, 2.5*p+time*0.1 ).y);\n    sky += 0.3*pow(abs(0.5-max(0.0,p.y)),5.0);\n    \n    // clouds    \n    float f = fbm( 0.002*vec2(p.x,1.0)/p.y );\n    vec3 cloud = vec3(0.3,0.4,0.5)*0.7*(1.0-0.85*sqrt(smoothstep(0.4,1.0,f)));\n    sky = mix( sky, cloud, 0.95*smoothstep( 0.4, 0.6, f ) );\n    sky = mix( sky, vec3(0.33,0.34,0.35), pow(1.0-max(0.0,p.y),2.0) );\n    col = mix( col, sky, smoothstep(0.0,0.1,p.y) );\n\n    // moon\n    \t// position\n        float d = length(p-vec2(0.58,0.5));\n    \n        float g = .8 - smoothstep( 0.2, 0.21 , d-0.010*time*0.05 );\n        float moontex = 0.8+0.2*smoothstep(0.25,0.7,fbm(0.06*p));\n        vec3 moon = vec3(1.0,0.97,0.9);\n    \n        col += moon*exp(-2.*d);\n      \n        col = mix( col, moon*moontex, g );\n    \n    // horizon\n    col += 0.2*cos(time/120.0)*pow(clamp(1.0-abs(p.y),0.0,1.0),9.0);\n    \n    // postprocess\n    col *= 1.4;\n    col = pow( col, vec3(1.5,1.2,1.0) );    \n    col *= clamp(1.0-0.3*length(i), 0.0, 1.0 );\n\n    // fade \n    \t// Initial fade from  0 to 4 seconds\n    \tcol *=       smoothstep(  0.0,  4.0, time );\n    \t// End song 443 seconds + 4 seconds of fade\n\t    col *= 1.0 - smoothstep( 443.0, 447.0, time );\n\n    fragColor = vec4( col, 2.0 );\n}","name":"Image","description":"","type":"image"}]}