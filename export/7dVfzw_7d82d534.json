{"ver":"0.1","info":{"id":"7dVfzw","date":"1657900682","viewed":44,"name":"Grilles multiples selon couleurs","username":"rid","description":"Exemple de plusieurs configurations de grilles bas√©es sur la couleur d'une texture","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grid","moire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 bgd_color  = vec3(1.);\nvec3 grid_color = vec3(.9, .65, .1);\n\n// color1\nvec3 color_1  = vec3(1., 0., 0.);\nvec2 period_1 = vec2(10.0, 200.0);\nfloat ratio_1 = 0.4;\nfloat steps_1 = 4.0; \nfloat delta_1 = 0.0;\n\n// color2\nvec3 color_2  = vec3(0., 1., 0.);\nvec2 period_2 = vec2(9.0, 200.0);\nfloat ratio_2 = 0.4;\nfloat steps_2 = 4.0; \nfloat delta_2 = 0.0;\n\n// color3\nvec3 color_3  = vec3(0., 0., 1.);\nvec2 period_3 = vec2(7.0, 200.0);\nfloat ratio_3 = 0.4;\nfloat steps_3 = 4.0; \nfloat delta_3 = 0.0;\n\n// color4\nvec3 color_4  = vec3(1., 0., 1.);\nvec2 period_4 = vec2(5.0, 200.0);\nfloat ratio_4 = 0.4;\nfloat steps_4 = 4.0; \nfloat delta_4 = 0.0;\n\nvec3 Circles(vec2 uv) {\n\n    vec3 col = vec3(1.);\n    \n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float d = length(uv);\n    \n    col = color_1*smoothstep(0.4, 0.39, d);\n    col = mix(color_2*step(0.3, 1. - d), col, smoothstep(.295, .3, d));\n    col = mix(color_3*step(0.2, 1. - d), col, smoothstep(.195, .2, d));\n    col = mix(color_4*step(0.1, 1. - d), col, smoothstep(.095, .1, d));\n    \n    return col;\n}\n\nfloat get_grid_alpha(vec2 uv, vec2 period, float ratio, float delta, float steps) {\n    \n    uv *= (iResolution.xy/period);\n    \n    float y = floor(uv.y*steps)/steps;\n    float x = fract(uv.x + y + delta);\n    \n    float a = smoothstep(ratio, ratio + 0.05, x);\n    return a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;    \n    \n    vec3 circles = Circles(uv);\n    \n    float alpha_1 = get_grid_alpha(uv, period_1, ratio_1, delta_1, steps_1);\n    float alpha_2 = get_grid_alpha(uv, period_2, ratio_2, delta_2, steps_2);\n    float alpha_3 = get_grid_alpha(uv, period_3, ratio_3, delta_3, steps_3);\n    float alpha_4 = get_grid_alpha(uv, period_4, ratio_4, delta_4, steps_4);\n    \n    vec3 col = bgd_color;\n    col = mix(col, grid_color, step(0.05, distance(color_1, circles))*alpha_1);\n    col = mix(col, grid_color, step(0.05, 1. - length(color_2 - circles))*alpha_2);\n    col = mix(col, grid_color, step(0.05, 1. - length(color_3 - circles))*alpha_3);\n    col = mix(col, grid_color, step(0.05, 1. - length(color_4 - circles))*alpha_4);\n    \n    // uncomment the line below to show color circles\n    // col = circles;\n\n    // Output to screen\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}