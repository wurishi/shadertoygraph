{"ver":"0.1","info":{"id":"slVXz1","date":"1640243155","viewed":69,"name":"Test 10 - Game of Life","username":"gorplex","description":"Game of Life","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"stKXz1","parentname":"Test9 - using last frame data"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float c = texelFetch(iChannel0,ivec2(fragCoord.xy/SIZE), 0).x;\n    fragColor = vec4(vec3(c), 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nbool isAlive(ivec2 coord){\n    return 0.5 <= texelFetch(iChannel0, coord, 0).x;\n}\n\nint countNeighbours(ivec2 coord)\n{\n    int c = 0;\n    if(isAlive(coord-ivec2(1, 0))) \n    {\n        c+=1;\n    }\n    if(isAlive(coord.xy-ivec2(-1,0))) \n    {\n        c+=1;\n    }\n    if(isAlive(coord.xy-ivec2(0,1)))\n    {\n        c+=1;\n    }\n    if(isAlive(coord.xy-ivec2(0,-1))) \n    {\n        c+=1;\n    }\n    if(isAlive(coord.xy-ivec2(1,1))) \n    {\n        c+=1;\n    }\n    if(isAlive(coord.xy-ivec2(-1,1))) \n    {\n        c+=1;\n    }\n    if(isAlive(coord.xy-ivec2(-1,-1))) \n    {\n        c+=1;\n    }\n    if(isAlive(coord.xy-ivec2(1,-1))) \n    {\n        c+=1;\n    }\n    return c;\n}\n\nbool nextCellState(ivec2 coord)\n{\n    int n = countNeighbours(coord);\n    if(n < 2)\n    {\n        return false;\n    }\n    if(n > 3)\n    {\n        return false;\n    }\n    if(n == 3) \n    {\n        return true;\n    }\n    if(n == 2) \n    {\n        return isAlive(coord);\n    }\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    ivec2 coord = ivec2(fragCoord);\n    //init pixels\n    if(iFrame == 0) {\n        //load in noise\n        vec2 inCoord;\n        inCoord.x = mod(fragCoord.x, iChannelResolution[1].x);\n        inCoord.y = mod(fragCoord.y, iChannelResolution[1].y);\n        float c = texelFetch(iChannel1, ivec2(inCoord), 0).x;\n        fragColor = vec4(vec3(c), 1.);\n        //draw in circle\n        if(length(fragCoord-20.) <= length(vec2(10, 10))) {\n                fragColor.x = 1.;\n        }\n    } \n    else if(iFrame%(60/STEPS_PER_SEC) == 0)\n    {\n        fragColor.x = nextCellState(coord) ? 1. : 0.;\n    }\n    if(iMouse.z > .5 && length(iMouse.xy/SIZE-fragCoord.xy) < BRUSH_SIZE){\n        fragColor.x = 1.;\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define SIZE 4.\n#define BRUSH_SIZE 1.\n\n//up to 60\n#define STEPS_PER_SEC 10","name":"Common","description":"","type":"common"}]}