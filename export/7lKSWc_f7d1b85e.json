{"ver":"0.1","info":{"id":"7lKSWc","date":"1641461565","viewed":124,"name":"Super Eagle Upscaling","username":"miomoto","description":"This is a port of https://github.com/libretro/glsl-shaders/blob/master/eagle/super-eagle.glslp\n\nTo see it in action, it requires a texture loaded, open you browser console, paste the command in L2","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["texture","sampling","image","upscaling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// to run, paste this in your browser console to load a custom image:\n// gShaderToy.SetTexture(0, {mSrc:'https://i.imgur.com/uYmEOfv.png', mType:'texture', mID:1, mSampler:{ filter: 'nearest', wrap: 'clamp', vflip:'true', srgb:'true', internal:'byte' }});\n\n#define Source iChannel0\n#define Resolution iChannelResolution[0].xy\n#define SourceSize vec4(Resolution, 1.0 / Resolution)\n#define COMPAT_TEXTURE texture\n\nhighp float reduce(vec3 color)\n{\n\treturn dot(color, vec3(65536.0,255.0,1.0));\n}\n\nint GET_RESULT(float A, float B, float C, float D)\n{\n   int x = 0; int y = 0; int r = 0;\n   if (A == C) x+=1; else if (B == C) y+=1;\n   if (A == D) x+=1; else if (B == D) y+=1;\n   if (x <= 1) r+=1; \n   if (y <= 1) r-=1;\n   return r;\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 vTexCoord = fragCoord/iResolution.xy;\n\n    // sample texture and output to screen\n    fragColor = texture(iChannel0, vTexCoord).xyzw;\n    vec2 fp = fract(vTexCoord * SourceSize.xy);\n    \n    \n    vec4 t1, t2, t3, t4, t5, t6, t7, t8;\n   float dx = SourceSize.z;\n   float dy = SourceSize.w;\n   \n   t1.xy = vTexCoord + vec2(-dx,-dy);\n   t1.zw = vTexCoord + vec2(-dx,  0);\n   t2.xy = vTexCoord + vec2(+dx,-dy);\n   t2.zw = vTexCoord + vec2(+dx+dx,-dy);\n   t3.xy = vTexCoord + vec2(-dx,  0);\n   t3.zw = vTexCoord + vec2(+dx,  0);\n   t4.xy = vTexCoord + vec2(+dx+dx,  0);\n   t4.zw = vTexCoord + vec2(-dx,+dy);\n   t5.xy = vTexCoord + vec2(  0,+dy);\n   t5.zw = vTexCoord + vec2(+dx,+dy);\n   t6.xy = vTexCoord + vec2(+dx+dx,+dy);\n   t6.zw = vTexCoord + vec2(-dx,+dy+dy);\n   t7.xy = vTexCoord + vec2(  0,+dy+dy);\n   t7.zw = vTexCoord + vec2(+dx,+dy+dy);\n   t8.xy = vTexCoord + vec2(+dx+dx,+dy+dy);\n\n    \n   vec3 C0 = COMPAT_TEXTURE(Source, t1.xy).xyz; \n   vec3 C1 = COMPAT_TEXTURE(Source, t1.zw).xyz;\n   vec3 C2 = COMPAT_TEXTURE(Source, t2.xy).xyz;\n   vec3 D3 = COMPAT_TEXTURE(Source, t2.zw).xyz;\n   vec3 C3 = COMPAT_TEXTURE(Source, t3.xy).xyz;\n   vec3 C4 = COMPAT_TEXTURE(Source, vTexCoord).xyz;\n   vec3 C5 = COMPAT_TEXTURE(Source, t3.zw).xyz;\n   vec3 D4 = COMPAT_TEXTURE(Source, t4.xy).xyz;\n   vec3 C6 = COMPAT_TEXTURE(Source, t4.zw).xyz;\n   vec3 C7 = COMPAT_TEXTURE(Source, t5.xy).xyz;\n   vec3 C8 = COMPAT_TEXTURE(Source, t5.zw).xyz;\n   vec3 D5 = COMPAT_TEXTURE(Source, t6.xy).xyz;\n   vec3 D0 = COMPAT_TEXTURE(Source, t6.zw).xyz;\n   vec3 D1 = COMPAT_TEXTURE(Source, t7.xy).xyz;\n   vec3 D2 = COMPAT_TEXTURE(Source, t7.zw).xyz;\n   vec3 D6 = COMPAT_TEXTURE(Source, t8.xy).xyz;\n\n   vec3 p00,p10,p01,p11;\n\n   // reducing vec3 to float\t\n   float c0 = reduce(C0);float c1 = reduce(C1);\n   float c2 = reduce(C2);float c3 = reduce(C3);\n   float c4 = reduce(C4);float c5 = reduce(C5);\n   float c6 = reduce(C6);float c7 = reduce(C7);\n   float c8 = reduce(C8);float d0 = reduce(D0);\n   float d1 = reduce(D1);float d2 = reduce(D2);\n   float d3 = reduce(D3);float d4 = reduce(D4);\n   float d5 = reduce(D5);float d6 = reduce(D6);\n   \n/*              SuperEagle code               */\n/*  Copied from the Dosbox source code        */\n/*  Copyright (C) 2002-2007  The DOSBox Team  */\n/*  License: GNU-GPL                          */\n/*  Adapted by guest(r) on 16.4.2007          */\n\n   if (c4 != c8) {\n      if (c7 == c5) {\n         p01 = p10 = C7;\n         if ((c6 == c7) || (c5 == c2)) {\n            p00 = 0.25*(3.0*C7+C4);\n         } else {\n            p00 = 0.5*(C4+C5);\n         }\n\n         if ((c5 == d4) || (c7 == d1)) {\n            p11 = 0.25*(3.0*C7+C8);\n         } else {\n            p11 = 0.5*(C7+C8);\n         }\n      } else {\n         p11 = 0.125*(6.0*C8+C7+C5);\n         p00 = 0.125*(6.0*C4+C7+C5);\n\n         p10 = 0.125*(6.0*C7+C4+C8);\n         p01 = 0.125*(6.0*C5+C4+C8);\n      }\n   } else {\n      if (c7 != c5) {\n         p11 = p00 = C4;\n\n         if ((c1 == c4) || (c8 == d5)) {\n            p01 = 0.25*(3.0*C4+C5);\n         } else {\n            p01 = 0.5*(C4+C5);\n         }\n\n         if ((c8 == d2) || (c3 == c4)) {\n            p10 = 0.25*(3.0*C4+C7);\n         } else {\n            p10 = 0.5*(C7+C8);\n         }\n      } else {\n         int r = 0;\n         r += GET_RESULT(c5,c4,c6,d1);\n         r += GET_RESULT(c5,c4,c3,c1);\n         r += GET_RESULT(c5,c4,d2,d5);\n         r += GET_RESULT(c5,c4,c2,d4);\n\n         if (r > 0) {\n            p01 = p10 = C7;\n            p00 = p11 = 0.5*(C4+C5);\n         } else if (r < 0) {\n            p11 = p00 = C4;\n            p01 = p10 = 0.5*(C4+C5);\n         } else {\n            p11 = p00 = C4;\n            p01 = p10 = C7;\n         }\n      }\n   }\n   \n  // Distributing the four products\n   p10 = (fp.x < 0.50) ? (fp.y < 0.50 ? p00 : p10) : (fp.y < 0.50 ? p01: p11);\n    fragColor = vec4(p10, 1.0);\n   // fragColor = vec4(texture(iChannel0, vTexCoord).rgb, 1.0);\n   \n}","name":"Image","description":"","type":"image"}]}