{"ver":"0.1","info":{"id":"sdsXzN","date":"1618359909","viewed":355,"name":"squared anti-fluid","username":"lomateron","description":"click to add fluid\npress A to apply image\nbased on https://www.shadertoy.com/view/fsfSzN\nas the fluid gains velocity it will flip from positive-negative and lose its velocity\noposite colors repell\nI wornder if something behaves like this in the real world","likes":8,"published":3,"flags":48,"usePreview":0,"tags":["simulation","fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.xy;\n    vec4 a = texture(iChannel0,u);\n    fragColor = vec4(0)+a.x*.5+.5                        //color amount   of fluid\n                +vec4(0,1,0,0)*dot(a,vec4(1,-1,0,0))*64.;//color velocity of fluid\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":2,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4 a = A(u+vec2(0,0));\n    float b = 0.;\n    \n    //b = +1.0*A(u+vec2(0,0)).x;\n    //kernel convolution that reads from current 2D frame values\n    {\n        float z = 1.;//kernel convolution size\n        float t = z*2.+1.;\n              t = 1./(t*t-1.);\n        float b0 = abs(a.x);\n        for(float i = -z; i<=z;++i){\n        for(float j = -z; j<=z;++j){\n          float s = 0.;\n          for(float i2 = -z; i2<=z;++i2){\n          for(float j2 = -z; j2<=z;++j2){\n          s += abs(A(u+vec2(i,j)+vec2(i2,j2)).x);\n          }}\n          float    d = 2./s;\n          if(s==0.)d = 0.;\n          s = b0*d;\n          float e = A(u+vec2(i,j)).x;\n          s = mix(s,(2.-s)*t,min(abs(e),1.));\n          b += s*e;\n        }}\n    }\n    //kernel convolution that reads from previous 2D frame values\n    {\n        float z = 1.;//kernel convolution size\n        float t = z*2.+1.;\n              t = 1./(t*t-1.);\n        float b0 = abs(A(u+vec2(0,0)).y);\n        for(float i = -z; i<=z;++i){\n        for(float j = -z; j<=z;++j){\n          float s = 0.;\n          for(float i2 = -z; i2<=z;++i2){\n          for(float j2 = -z; j2<=z;++j2){\n          s += abs(A(u+vec2(i,j)+vec2(i2,j2)).y);\n          }}\n          float    d = 1./s;\n          if(s==0.)d = 0.;\n          s = b0*d;\n          float e = A(u+vec2(i,j)).y;\n          s = mix(s,(1.-s)*t,min(abs(e),1.));\n          b -= s*e;\n        }}\n    }\n    a = vec4(b,a.xyz);\n\n    float keyA  = texture( iChannel1, vec2(65.5/256.,.25) ).x;\n    float keyS  = texture( iChannel1, vec2(83.5/256.,.25) ).x;\n    if(keyA!=0.)a = texture( iChannel2, u/iResolution.xy).xxxx-.6;\n    if(keyS!=0.)a = vec4(0);\n    if(iMouse.z>0.||iFrame==0)\n    {\n                 vec2 m1 = 2.*(u-iMouse.xy)/iResolution.y;\n        if(iFrame==0) m1 = 2.*(u-iResolution.xy*.5)/iResolution.y;\n        a += .1/exp(dot(m1,m1)*22.);\n    }\n    fragColor = a;\n}","name":"Buffer A","description":"","type":"buffer"}]}