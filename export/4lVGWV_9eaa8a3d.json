{"ver":"0.1","info":{"id":"4lVGWV","date":"1476863399","viewed":448,"name":"Simple Polygon","username":"antonOTI","description":"More 2d shapes yay !\nI've found this function here\nhttp://thndl.com/square-shaped-shaders.html\nit give the distance to a polygon with a parametrized number of face.\nthis will save me a lot of time.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d","polygon","util"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define _Smooth(p,r,s) smoothstep(-s, s, p-(r))\n#define PI 3.141592\n#define TPI 6.2831\n\nfloat dfPolygon(float side,vec2 p)\n{   \n    float a=atan(p.x,p.y);\n    float b=TPI/side;\n    return cos(floor(.5+a/b)*b-a)*length(p.xy) ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y - vec2(.5);\n    float f = dfPolygon(3.,uv);\n    f = _Smooth(.2,f,.005);\n    vec3 col = vec3(f);\n\tfragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}