{"ver":"0.1","info":{"id":"cs3cWS","date":"1695385004","viewed":98,"name":"Lines, so much lines","username":"FFFFFFear1","description":"Caught an interesting effect","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float _LineWidth = .1;\nfloat _Smooth = .1;\n\nfloat onLine(float a, float b, float line_width, float edge_smooth)\n{\n    float half_width = line_width / 2.; \n                \n    float result = smoothstep(a + half_width + edge_smooth, a + half_width , b) -smoothstep(a - half_width , a - half_width - edge_smooth, b);\n    return result;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord -.5* iResolution.xy ) / iResolution.y;\n\n    float lineMovedHorizontal = (sin((uv.y  * (iTime / 2.))  * 10.));\n    float lineMovedVertical = (sin((uv.x  * (iTime / 2.))  * 10.));\n                \n    float lines = onLine(uv.y, lineMovedHorizontal, _LineWidth, _Smooth)\n    + onLine(uv.x, lineMovedVertical, _LineWidth, _Smooth)\n    + onLine(uv.x + uv.y, lineMovedHorizontal, _LineWidth, _Smooth)\n    + onLine(uv.y - uv.x, lineMovedVertical, _LineWidth, _Smooth);  \n   \n    vec3 rgb = 0.5 + 0.5*sin(iTime+uv.xyy+lineMovedVertical);\n    \n    vec3 color = rgb * lines; \n                \n    fragColor = vec4(color + (rgb.xyx / 15.), 1.0);\n}","name":"Image","description":"","type":"image"}]}