{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float randomNoise(vec2 p) {\n  return fract(sin(47.*p.x+p.y*9973.) + iTime * 0.5);\n}\n\nfloat smoothNoise(vec2 p) {\n  vec2 nn = vec2(p.x, p.y+1.);\n  vec2 ee = vec2(p.x+1., p.y);\n  vec2 ss = vec2(p.x, p.y-1.);\n  vec2 ww = vec2(p.x-1., p.y);\n  vec2 cc = vec2(p.x, p.y);\n \n  float sum = 0.;\n  sum += randomNoise(nn)/8.;\n  sum += randomNoise(ee)/8.;\n  sum += randomNoise(ss)/8.;\n  sum += randomNoise(ww)/8.;\n  sum += randomNoise(cc)/2.;\n \n  return sum;\n}\n\nfloat interpolatedNoise(vec2 p) {\n  float q11 = smoothNoise(vec2(floor(p.x), floor(p.y)));\n  float q12 = smoothNoise(vec2(floor(p.x), ceil(p.y)));\n  float q21 = smoothNoise(vec2(ceil(p.x), floor(p.y)));\n  float q22 = smoothNoise(vec2(ceil(p.x), ceil(p.y)));\n \n  float r1 = mix(q11, q21, fract(p.x));\n  float r2 = mix(q12, q22, fract(p.x));\n \n  return mix (r1, r2, fract(p.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy / iResolution.yy;\n    \n\n\n    float tiles = 4.;\n    q = floor(q * tiles);\n  \t// Six components of noise in a fractal sum\n\n\tfloat x = interpolatedNoise(q + 2.);\n    float y = interpolatedNoise(q + 4. );\n    float z = interpolatedNoise(q + 8. );\n    vec3 col = vec3(x,y,z);\n    float lum = (0.2126 * col.x) + (0.7152 * col.y) + (0.0722 * col.z); \n\tfragColor = vec4(col , 1.0);\n\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldBSR3","date":"1414213382","viewed":238,"name":"Noisey Squares","username":"codevinsky","description":"Some squares... with colors... and shit","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["checkers"],"hasliked":0,"parentid":"","parentname":""}}