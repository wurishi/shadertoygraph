{"ver":"0.1","info":{"id":"lcXXzM","date":"1705050325","viewed":303,"name":"shape skeleton","username":"FabriceNeyret2","description":"morphological skeleton of shape","likes":27,"published":3,"flags":32,"usePreview":0,"tags":["2d","postprocessing","video","mathematicalmorphology"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/lcfSzM\n// x 100-400 speed optimization of \"Van Damma Popierdolilo\" by bugmenot. https://shadertoy.com/view/MclSzN\n\n#define T(x,y)  P = u + vec2(x,y);                             \\\n                if ( texture(iChannel0, P/R).r > 0. && d < l ) \\\n                    l = d, N = vec2(x,y);\n                    \nvoid mainImage( out vec4 O, vec2 u )\n{\n\tvec2  N, P;\n    float l = 1e5, d,x, r;\n    \n    for( ; r < R.y/2.; r++ ) {               // increasing square around current point\n        if ( r*r > l ) break;                // min is < radius : finished !\n        for( x = 0.; x <= r; x++ ) {         // parse the square by increasing length\n            d = x*x + r*r;\n            if ( d > l ) break;              // min is < cur dist : skip\n            T(x,r); T(-x,r); T(x,-r); T(-x,-r);\n            T(r,x); T(r,-x); T(-r,x); T(-r,-x);\n    }   }\n\n\tO = vec4( 0, .5 + .5* normalize(N) , 1); // draw gradient of distance\n    O = fwidth(O);                           // show shape skeleton\n // O = texture(iChannel0, u/R);             // debug: show source image\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{\n    O = texture(iChannel0, u/R );\n   // O = vec4( dot(O.rgb,O.rgb) < .49 ); \n    O = vec4 ( O.r + O.g + O.b < 1. );\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy","name":"Common","description":"","type":"common"}]}