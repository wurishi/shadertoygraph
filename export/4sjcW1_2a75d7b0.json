{"ver":"0.1","info":{"id":"4sjcW1","date":"1492432216","viewed":105,"name":"Sketch_Lattice3","username":"cexlearning","description":"Lattice3ï¼Œcopy from https://github.com/keijiro/ShaderSketches","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["sketch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float pi = 3.1415926;\n    float t = iTime * 0.7;\n\n    float scale = 10.0 / iResolution.y;\n    vec2 p = fragCoord.xy * scale + 0.5; // pos normalized /w grid\n    p += vec2(2, 0.5) * iTime;\n\n    float rnd = fract(sin(dot(floor(p), vec2(21.98, 19.37))) * 4231.73);\n    float flip = fract(rnd * 13.8273) > 0.5 ? 1.0 : -1.0;\n    rnd = floor(rnd * 2.0) / 2.0 + floor(t) * flip / 2.0;\n\n    float anim = smoothstep(0.0, 0.66, fract(t));\n    float phi = pi * (rnd + anim * flip / 2.0);\n    vec2 a1 = vec2(cos(phi), sin(phi));\n    vec2 a2 = vec2(-a1.y, a1.x);\n    vec2 a3 = vec2(cos(phi + pi / 4.0), sin(phi + pi / 4.0));\n\n    vec2 pf = fract(p) - 0.5;\n    float d1 = abs(min(min(dot( pf, a1), dot( pf, a2)), dot( pf, a3) - 0.2));\n    float d2 = abs(min(min(dot(-pf, a1), dot(-pf, a2)), dot(-pf, a3) - 0.2));\n\n    float w = 0.1 + sin(t) * 0.08; // line width\n    float c = 1.0 - clamp((w - min(d1, d2)) / scale, 0.0, 1.0);\n    fragColor = vec4(c, 0.5 * c, 0, 1);\n}","name":"Image","description":"","type":"image"}]}