{"ver":"0.1","info":{"id":"wdV3WG","date":"1570969625","viewed":368,"name":"milkdrop tutorial thing","username":"BagelOrb","description":"https://youtu.be/cQXAbndD5CQ\n\nFollowed this tutorial and added some fun stuff.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["waves","modulo","droplet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define zoom 10.\n\nfloat len(vec2 v, vec2 id)\n{\n    float d1 =  abs(v.x) + abs(v.y);\n    float d2 = length(v);\n    return mix(d1, d2, length(id / zoom) + sin(iTime*1.3));\n}\n\nfloat xor(float a, float b)\n{\n    //return 1. - abs(1. - (a + b));\n    //return a * (1.-b) + b*(1.-a);\n    return a + b;\n}\n\nvoid mainImage( out vec4 col, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n\n    float angle = .7853981634;\n    float sa = sin(angle);\n    float ca = cos(angle);\n    uv *= mat2(ca, sa, -sa, ca);\n    \n    vec2 guv = uv * zoom;\n    vec2 p = fract( guv ) -.5;\n    vec2 id = floor(guv);\n    \n    float d = 0.;\n    \n    for (float x = -1.; x <= 1.; x++) {\n    for (float y = -1.; y <= 1.; y++) {\n    \tvec2 offset = vec2(x,y);\n        float time_delay = length(id + offset);\n        float cutoff = .5 + .5*(sin(time_delay - iTime) * .5 + .5);\n    \td = xor(d, smoothstep(cutoff, cutoff*.99, len( p - offset , id + offset)) );\n    }}\n    col.g = mod(d, 3.) - 1.;\n    col.b = 1. - mod(d + 1., 3.);\n    col.r = 1. - mod(d + 2., 3.);\n    \n}","name":"Image","description":"","type":"image"}]}