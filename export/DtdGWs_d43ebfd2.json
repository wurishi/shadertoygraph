{"ver":"0.1","info":{"id":"DtdGWs","date":"1683341494","viewed":35,"name":"cell_mouse","username":"tomgou","description":"simulate cell","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cell"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n\n    vec3 color = vec3(.0);\n\n    // Cell positions\n    vec2 point[5];\n    point[0] = vec2(abs(sin(iTime * 0.1)), fract(iTime * 0.1));\n    point[1] = vec2(fract(iTime * 0.1), abs(cos(iTime * 0.1)));\n    point[2] = vec2(abs(cos(iTime * 0.1)), abs(sin(iTime * 0.1)));\n    point[3] = vec2(abs(sin(iTime * 0.1)), abs(cos(iTime * 0.1)));\n    point[4] = iMouse.xy / iResolution.xy;\n\n    float m_dist = 1.;  // minimum distance\n    vec2 m_point;        // minimum position\n\n    // Iterate through the points positions\n    for (int i = 0; i < 5; i++) {\n        float dist = distance(st, point[i]);\n        if ( dist < m_dist ) {\n            // Keep the closer distance\n            m_dist = dist;\n\n            // Kepp the position of the closer point\n            m_point = point[i];\n        }\n    }\n\n    // Add distance field to closest point center\n    color += m_dist*2.;\n\n    // tint acording the closest point position\n    color.rg = m_point;\n\n    // Show isolines\n    color -= abs(sin(80.0*m_dist))*0.07;\n\n    // Draw point center\n    color += 1.-step(.02, m_dist);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}