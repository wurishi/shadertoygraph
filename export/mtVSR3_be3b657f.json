{"ver":"0.1","info":{"id":"mtVSR3","date":"1686257804","viewed":44,"name":"Making Contact","username":"TheLlama","description":"My first shader. Thanks to @kishimisu ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","hexagon","bestagon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdHexagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i<4.0; i++){\n    uv = fract(uv*1.5) - 0.5;\n    float d = sdHexagon(uv,0.5);\n\n    vec3 col = (d>0.0) ? vec3(0.9,0.6,0.3) : vec3(0.65,0.85,1.0);\n    \n    d = sin(d*8.0 + iTime)/8.0;\n    d = abs(d);\n    \n    d = pow(0.01/d, 1.2);\n    \n    finalColor += col*d;\n}\n    \n\tfragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}