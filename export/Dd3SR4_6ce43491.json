{"ver":"0.1","info":{"id":"Dd3SR4","date":"1679421632","viewed":57,"name":"Bike gear","username":"busybeaver","description":"Bike gear (for a chain). I actually made this for a practical purpose of creating a real gear xD","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float screen_height = 60.0;\nfloat chain_element_r = 4.0;\nfloat chain_element_R = 24.24;\nfloat gear_teeth_r = 1.5;\nfloat gear_teeth_R = 25.64;\nfloat center_r = 6.0;\nfloat dot_r = 0.3;\nint k = 12;\nfloat pi = 3.1415926535;\n\nvec2 rot(vec2 v) {\n    return vec2(v.y, -v.x);\n}\n\nvec2 n(vec2 v, float r) {\n    return v * r + rot(v) * sqrt(dot(v, v) - r * r);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 col = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n    fragColor = vec4(col, 1.0);\n    vec2 r = (fragCoord - iResolution.xy * 0.5) / iResolution.y * screen_height;\n    for(int i = 0; i < k; i ++) {\n        float a = float(i) / float(k) * pi * 2.0 + iTime * 0.3;\n        vec2 d1 = vec2(cos(a), sin(a)) * chain_element_R;\n        vec2 d2 = vec2(cos(a + pi / float(k)), sin(a + pi / float(k))) * gear_teeth_R;\n        vec2 d3 = vec2(cos(a - pi / float(k)), sin(a - pi / float(k))) * gear_teeth_R;\n        if(length(d1 - d2) > chain_element_r + gear_teeth_r) {\n            if(dot(r, rot(d2)) >= -0.1 && dot(r, rot(d3)) <= 0.1 && length(r) > center_r) {\n                vec2 n1 = n(d2 - d1, -chain_element_r - gear_teeth_r);\n                vec2 n2 = n(d1 - d3, chain_element_r + gear_teeth_r);\n                if(\n                    dot(r, rot(d1)) < 0.0 ?\n                    (length(r - d2) < gear_teeth_r ||\n                    (dot(r - d2, rot(n1)) > 0.0 && dot(r - d1 + normalize(n1) * chain_element_r, n1) < 0.0 ||\n                    (dot(r - d1, rot(n1)) > 0.0 && length(r - d1) >= chain_element_r))) :\n                    (length(r - d3) < gear_teeth_r ||\n                    (dot(r - d3, rot(n2)) < 0.0 && dot(r - d1 + normalize(n2) * chain_element_r, n2) < 0.0 ||\n                    (dot(r - d1, rot(n2)) < 0.0 && length(r - d1) >= chain_element_r))\n                )) {\n                    fragColor = vec4(col * 0.2, 1.0);\n                }\n            }\n        } else {\n            if(length(d1 - r) < chain_element_r) fragColor *= vec4(0.5, 0.5, 0.5, 1.);\n            if(length(d2 - r) < gear_teeth_r)    fragColor *= vec4(0.5, 0.5, 0.5, 1.);\n            if(length(r) < center_r)             fragColor = vec4(col * 0.5, 1.0);\n        }\n        if(length(d1 - r) < dot_r) fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n    if(length(r) < dot_r) fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}