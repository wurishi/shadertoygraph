{"ver":"0.1","info":{"id":"tdjXDt","date":"1555394922","viewed":554,"name":"Cubemap debug display","username":"SaschaWillems","description":"Simple debug display of a cube map using only screen space UV coordinates","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["cubemap","debug"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 inUV = fragCoord/iResolution.xy;\n    \n\tfragColor.rgb = vec3(0.0, 0.0, 0.2);\n\t\n\tvec3 samplePos = vec3(0.0f);\n\t\n\t// Crude statement to visualize different cube map faces based on UV coordinates\n\tint x = int(floor(inUV.x / 0.25f));\n\tint y = int(floor(inUV.y / (1.0 / 3.0))); \n\tif (y == 1) {\n\t\tvec2 uv = vec2(inUV.x * 4.0f, (inUV.y - 1.0/3.0) * 3.0);\n\t\tuv = 2.0 * vec2(uv.x - float(x) * 1.0, uv.y) - 1.0;\n\t\tswitch (x) {\n\t\t\tcase 0:\t// NEGATIVE_X\n\t\t\t\tsamplePos = vec3(-1.0f, uv.y, uv.x);\n\t\t\t\tbreak;\n\t\t\tcase 1: // POSITIVE_Z\t\t\t\t\n\t\t\t\tsamplePos = vec3(uv.x, uv.y, 1.0f);\n\t\t\t\tbreak;\n\t\t\tcase 2: // POSITIVE_X\n\t\t\t\tsamplePos = vec3(1.0, uv.y, -uv.x);\n\t\t\t\tbreak;\t\t\t\t\n\t\t\tcase 3: // NEGATIVE_Z\n\t\t\t\tsamplePos = vec3(-uv.x, uv.y, -1.0f);\n\t\t\t\tbreak;\n\t\t}\n\t} else {\n\t\tif (x == 1) { \n\t\t\tvec2 uv = vec2((inUV.x - 0.25) * 4.0, (inUV.y - float(y) / 3.0) * 3.0);\n\t\t\tuv = 2.0 * uv - 1.0;\n\t\t\tswitch (y) {\n\t\t\t\tcase 0: // NEGATIVE_Y\n\t\t\t\t\tsamplePos = vec3(uv.x, -1.0f, uv.y);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // POSITIVE_Y\n\t\t\t\t\tsamplePos = vec3(uv.x, 1.0f, -uv.y);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ((samplePos.x != 0.0f) && (samplePos.y != 0.0f)) {\n\t\tfragColor = vec4(texture(iChannel0, samplePos).rgb, 1.0);\n\t}       \n}","name":"Image","description":"","type":"image"}]}