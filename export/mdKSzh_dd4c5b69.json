{"ver":"0.1","info":{"id":"mdKSzh","date":"1680729772","viewed":98,"name":"Interspersed Textures","username":"pr1ncess_emily","description":"A shader which intersperses tiles of two different textures using noise.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["pixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COLUMNS 10\n#define ROWS 10\n#define CHANNEL_A 0u\n#define CHANNEL_B 1u\n\nuvec2 getGridCoord(vec2 uv) {\n    float unitWidth = iResolution.x / float(COLUMNS);\n    float unitHeight = iResolution.y / float(ROWS);\n    uint column = uint(uv.x / unitWidth);\n    uint row = uint(uv.y / unitHeight);\n    return uvec2(column, row);\n}\n\nuint getChannel(uvec2 coord) {\n    float level = texture(iChannel0, vec2(coord) / 10.0).x;\n    if (level > 0.5) {\n        return CHANNEL_A;\n    }\n    return CHANNEL_B;\n}\n\nvec3 getColor(vec2 uv, uint channel) {\n    if (channel == CHANNEL_A) {\n        return texture(iChannel1, uv).xyz;\n    }\n    return texture(iChannel2, uv).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uvec2 coord = getGridCoord(fragCoord);\n    uint channel = getChannel(coord);\n    vec3 col = getColor(uv, channel);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}