{"ver":"0.1","info":{"id":"XcjyD1","date":"1722264574","viewed":62,"name":"daily shader clock 5","username":"jonasfrey","description":"i have created a small website https://shaderclock.deno.dev/ where i want to have multiple shader clocks , and one gets loaded randomly \nif you want to participate make sure to add the tag 'shaderclockdenodev'","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["daily","shaderclockdenodev"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"daily shader clock 4\" by jonasfrey. https://shadertoy.com/view/MfjcWz\n// 2024-07-29 14:27:30\n\n// Fork of \"daily shader clock 3 \" by jonasfrey. https://shadertoy.com/view/Xc2yzD\n// 2024-07-28 17:27:46\n\n\nfloat f_n_sd_ring( in vec2 p, float n_ang_nor, in float r, in float th )\n{\n    float n_tau = 6.2831;\n    float n_radians = ((n_tau)*(n_ang_nor-.5)*.5);\n    float n2 = n_tau-n_tau*(n_ang_nor/2.)+n_tau/2.;\n    p = p*mat2(cos(n2), -sin(n2), sin(n2), cos(n2));\n    vec2 n = vec2(sin(n_radians), cos(n_radians)); \n    p.x = abs(p.x);\n    \n    p = mat2(n.x,n.y,-n.y,n.x)*p;\n\n    return max( abs(length(p)-r)-th*0.5,\n                length(vec2(p.x,max(0.0,abs(r-p.y)-th*0.5)))*sign(p.x) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 o_trn = (fragCoord.xy-iResolution.xy*.5)/min(iResolution.y, iResolution.x);\n    o_trn*=1.5;\n    vec2 o2 = clamp(o_trn+.5, 0., 1.);\n\n    float n_tau = 6.2831;\n    \n    \n    float n_sec = iDate.w;\n    float n_sec_mod = mod(n_sec , 60.);\n    float n_sec_mod_nor = n_sec_mod / 60.;\n    float n_sec_mod_nor_snp = floor(n_sec_mod) / 60.;\n    float n_min_mod = floor(mod(n_sec, 60.*60.));\n    float n_min_mod_nor = n_min_mod / (60.*60.);\n    float n_min_mod_nor_snp = (floor(n_min_mod_nor*12.))/12.;\n    float n_hou_mod = floor(mod(n_sec, 60.*60.*12.));\n    float n_hou_mod_nor = n_hou_mod / (60.*60.*12.);\n    float n_hou_mod_nor_snp = (floor(n_hou_mod_nor*12.))/12.;\n    \n    float n_aa = (1./(iResolution.x+iResolution.y)/2.)*8.;\n    float n_its = 3.;\n    float n_it_nor_one = 1./n_its;\n    vec4 o_col = vec4(0.);\n    \n    float nr = max(abs(o_trn.x) , abs(o_trn.y));\n    float nm = 1.-sign(nr-.5);\n    nm = clamp(nm, 0., 1.);\n    nr = (nr -.5)/.2;\n    nr = 1.-pow(nr, 1./9.);\n    int n_idx = int(o2.x*3.);\n    float[] anmt = float[] (\n            n_hou_mod_nor_snp, \n            n_min_mod_nor_snp, \n            n_sec_mod_nor_snp\n    );\n    float[] and = float[] (\n            12., \n            12., \n            60.\n    );\n    float nmt = anmt[n_idx];\n    float nd = and[n_idx];\n        \n    float n2 = 1./3.;\n    float n = nmt;\n    float ny = floor(o2.y*nd)/nd;\n    float nmy = 1.-float(o2.y > n);\n    n = ny*nmy;\n    nr = clamp(nr, 0., 1.);\n    fragColor = vec4(ny*nmy*nm+nr);\n    //fragColor = sqrt(fragColor);\n}","name":"Image","description":"","type":"image"}]}