{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\n#define s(v) v.x+v.y+v.z\n#define pi 3.14159265\n#define R(p, a) p=cos(a)*p+sin(a)*vec2(p.y, -p.x)\n#define hsv(h,s,v) mix(vec3(1.), clamp((abs(fract(h+vec3(1., 1., 3.)/3.)*6.-3.)-1.), 0., 1.), s)*v\n\nconst float BLOWUP=86.0; \nconst float MAXSTEPSHIFT=10.0; \nconst int MAXITERS=55;\n\n\nfloat pn(vec3 p) { //noise @Las^Mercury\n\tvec3 i = floor(p);\n\tvec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\n\tvec3 f = cos((p-i)*pi)*(-.5) + .5;\n\ta = mix(sin(cos(a)*a), sin(cos(1.+a)*(1.+a)), f.x);\n\ta.xy = mix(a.xz, a.yw, f.y);\n\treturn mix(a.x, a.y, f.z);\n}\n\nfloat fpn(vec3 p) {\n\treturn pn(p*.06125)*.5 + pn(p*.125)*.25 + pn(p*.25)*.125;\n}\n\nfloat displace(vec3 p) {\n\treturn ((cos(4.*p.x)*sin(4.*p.y)*sin(4.*p.z))*cos(30.1))*sin(iTime);\n}\n\nint f(vec3 pos,float stepshift)\n{\n\tfloat d = displace(pos);\n\tvec3 v2=abs(fract(pos + d) -vec3(0.5,0.5,0.5))/2.0;\n\tfloat noise = fpn(v2*130.+ iTime*05.) * 0.05;\n\n\tv2 = v2 + noise +d/2.;\n\tfloat r=0.0769*sin(iTime*30.0*-0.0708);\n\tfloat blowup=BLOWUP/pow(2.0,stepshift+8.0);\n\n\tif(s(v2)-0.1445+r<blowup) return 1;\n\tv2=vec3(0.25,0.25,0.25)-v2;\n\tif(s(v2)-0.1445-r<blowup) return 2;\n\n\tint hue;\n\tfloat width;\n\tif(abs(s(v2)-3.0*r-0.375)<0.03846+blowup)\n\t{\n\t\twidth=0.1445;\n\t\thue=4;\n\t}\n\telse\n\t{\n\t\twidth=0.0676;\n\t\thue=3;\n\t}\n\n\tif(s(abs(v2.zxy-v2.xyz))-width<blowup) return hue;\n\n\treturn 0;\n}\n\n\n#define s(v) v.x+v.y+v.z\nfloat time;\nvec2 size;\n\n\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\ttime    = iTime;\n\tvec2 uv = iResolution.xy;\n\tfloat x = 0.5*( 2.0 * fragCoord.x - uv.x) / max( uv.x, uv.y);\n\tfloat y = 0.5*( 2.0 * fragCoord.y - uv.y) / max( uv.x, uv.y);\n\n\tfloat sin_a = sin( time * 20.0 * 0.00564 );\n\tfloat cos_a = cos( time * 20.0 * 0.00564 );\n\n\tvec3 dir=vec3(x,-y,0.33594-x*x-y*y);\n\tdir=vec3(dir.y,dir.z*cos_a-dir.x*sin_a,dir.x*cos_a+dir.z*sin_a);\n\tdir=vec3(dir.y,dir.z*cos_a-dir.x*sin_a,dir.x*cos_a+dir.z*sin_a);\n\tdir=vec3(dir.y,dir.z*cos_a-dir.x*sin_a,dir.x*cos_a+dir.z*sin_a);\n\n\tvec3 pos=vec3(0.5,2.1875,0.875)+vec3(1.0,1.0,1.0)*0.0134*20.0*time;\n\n\tfloat stepshift=MAXSTEPSHIFT;\n\n\tif(fract(pow(x,y)*time*30.0*1000.0)>0.5) pos+=dir/pow(2.0,stepshift);\n\telse pos-=dir/pow(2.0,stepshift);\n\n\tint i=0;\n\tint c;\n\n\tfor(int j=0;j<100;j++)\n\t{\n\t\tc=f(pos,stepshift);\n\t\tif(c>0)\n\t\t{\n\t\t\tstepshift+=1.0;\n\t\t\tpos-=dir/pow(2.0,stepshift);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(stepshift>0.0) stepshift-=1.0;\n\t\t\tpos+=dir/pow(2.0,stepshift);\n\t\t\ti++;\n\t\t}\n\n\t\tif(stepshift>=MAXSTEPSHIFT) break;\n\t\tif(i>=MAXITERS) break;\n\t}\n\n\tvec3 col;\n\tif(c==0) col=vec3(0.0,0.0,0.0);\n\telse if(c==1) col=vec3(0.0,0.0,1.0);\n\telse if(c==2) col=vec3(0.0,1.0,0.0);\n\telse if(c==3) col=vec3(1.0,1.0,0.25);\n\telse if(c==4) col=vec3(0.5,0.5,0.5);\n\n\tfloat k=1.0-(float(i)-stepshift)/42.0;\n\tfragColor=vec4(col*vec3(k*k,k*k*k,k*k*k),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xdl3zH","date":"1362737842","viewed":640,"name":"Bubbling Puls","username":"_pwd_","description":"slight mod (adding noise and some displacement) of Puls (famous demoscene 245 byte intro by Å˜rÅ™ola)","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","noise","displacement","demoscene"],"hasliked":0,"parentid":"","parentname":""}}