{"ver":"0.1","info":{"id":"cdjXDy","date":"1670836104","viewed":153,"name":"exercise1-","username":"LzmmmQAQ","description":"did some exercise // http://www.fractalforums.com/new-theories-and-research/very-simple-formula-for-fractal-patterns/","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fract1(vec2 uv)\n{\n    float x = uv.x;\n    float y = uv.y;\n    float m,accum;\n    \n    for(int i =0;i<10;i++)\n    {\n        x = abs(x);\n        y = abs(y);\n        m = x*x+y*y+0.0001;\n        \n        x = x/m-0.5*sin(iTime);\n        y = y/m-0.5*sin(iTime);\n\n        float w = exp(float(i) / 100.);\n        \n        if (m>100.){accum =1.;break;}\n        accum +=m*w/100.;\n    }\n    return accum;\n}\n\nmat2 rot(float a)\n{\n    float s=sin(a), c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = 2.*(fragCoord-0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.);    \n    uv *= rot(iTime*3.);\n    vec3 f= vec3(fract1(uv));\n    \n    fragColor = vec4(f,1.);\n}","name":"Image","description":"","type":"image"}]}