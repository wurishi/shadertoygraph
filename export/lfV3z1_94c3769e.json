{"ver":"0.1","info":{"id":"lfV3z1","date":"1712442279","viewed":41,"name":"W_07_04_2024_00_22","username":"openroomxyz","description":"let is spin all around o yea","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float m_ratio = iResolution.x / iResolution.y;\n    \n    vec2 p = uv - vec2(0.5, 0.5);\n    \n    \n    \n    p.x *= m_ratio;\n    \n    \n    \n    \n    mat2 m_rotate = mat2(1, 0, 0, 1);\n    \n    float angle = iTime + sin(iTime * 0.02) * 4.0 * sqrt(p.x * p.x + p.y * p.y);\n    m_rotate *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    \n    p = m_rotate * p;\n    \n    \n    vec2 pj0 = p + vec2(0.1 * sin(iTime), 0.1 * cos(iTime));\n    vec2 pj1 = p + vec2(0.1 * sin(iTime * 2.4), 0.1 * cos(iTime * 2.4));\n    \n    p = min(pj1, pj0);\n    \n    \n    \n    \n    \n    \n    \n    \n    float distance_0 = sqrt(p.x * p.x + p.y * p.y);\n    float distance_1 = max(p.x * p.x, p.y * p.y);\n    \n    \n    \n    float distance_01a0 = distance_0 * abs(sin(iTime)) + distance_1 * abs(cos(iTime));\n    distance_01a0 *= 10.0;\n    \n    float distance_01b0 = distance_0 * abs(cos(iTime)) + distance_1 * abs(sin(iTime));\n    distance_01b0 *= 10.0;\n    \n    float distance_010 = sin(distance_01a0) / cos(distance_01b0);\n    \n    \n    \n    float distance_01a1 = distance_0 * abs(sin(iTime)) + distance_1 * abs(cos(iTime));\n    distance_01a1 *= 7.0;\n    \n    float distance_01b1 = distance_0 * abs(cos(iTime)) + distance_1 * abs(sin(iTime));\n    distance_01b1 *= 7.0;\n    \n    float distance_011 = sin(distance_01a1) / cos(distance_01b1);\n    \n    \n    float distance_01a2 = distance_0 * abs(sin(iTime)) + distance_1 * abs(cos(iTime));\n    distance_01a2 *= 24.0;\n    \n    float distance_01b2 = distance_0 * abs(cos(iTime)) + distance_1 * abs(sin(iTime));\n    distance_01b2 *= 24.0;\n    \n    float distance_012 = sin(distance_01a2) / cos(distance_01b2);\n    \n    \n    // Time varying pixel color\n    vec3 col = vec3(0.0, 0.0, 0.0);// 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    col.r = pow(sin(distance_010 * 10.0 + iTime * 0.7), 1.0);\n    col.g = pow(sin(distance_011 * 10.0 + iTime * 0.1), 1.0);\n    col.g = pow(sin(distance_012 * 10.0 + iTime * 0.7), 1.0);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}