{"ver":"0.1","info":{"id":"msyczy","date":"1696258702","viewed":157,"name":"domain warping","username":"01000001","description":"woah that's surprisingly easy","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define s(x) smoothstep(0., 1., x)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 10.;\n    \n    \n    float s = mod(iTime*.2, 3.);\n    \n    for (float i = 0.; i++<16.;){\n        \n        float b = 0.;\n        float a = i;\n        a = mix(a, i*i, s(s-b++));\n        a = mix(a, sqrt(i), s(s-b++));\n        a = mix(a, i, s(s-b++));\n        \n    \n        uv.x += sin(uv.y*a)/i;\n        uv.y += sin(uv.x*a)/i;\n\n    }\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}