{"ver":"0.1","info":{"id":"7dcXzr","date":"1632494669","viewed":48,"name":"basic mesh -2d","username":"jorge2017a2","description":"basic mesh -2d","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["basicmesh2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://iquilezles.org/articles/distfunctions2d\n\n///por jorge2017a2...2021-sep-19\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define S2(d,b) smoothstep(antialiasing(0.05),b,d)\n\n\nvec2 rotatev2(vec2 p, float ang)\n{   float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\n///----------Operacion de Distancia--------\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n    \nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\nreturn colOut;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n\nfloat sdOrientedBox( in vec2 p, in vec2 a, in vec2 b, float th )\n{\n    float l = length(b-a);\n    vec2  d = (b-a)/l;\n    vec2  q = (p-(a+b)*0.5);\n          q = mat2(d.x,-d.y,d.y,d.x)*q;\n          q = abs(q)-vec2(l,th)*0.5;\n    return length(max(q,0.0)) + min(max(q.x,q.y),0.0);    \n}\n\n\nvec3 lineas(vec2 p, vec3 col )\n{\n    float mind=9999.9;\n    vec2 p2= rotatev2(p, radians(90.0));\n    float paso=0.25;//0.125\n    for(float i=-2.5; i<2.5; i+=paso)\n    {\n      float sds1=sdOrientedBox(p-vec2(-0.5+i,-0.5), vec2(-1.0,-1.0) ,vec2(2.0,2.0), 0.05 );\n        mind=unionSDF(mind,sds1);\n    } \n    \n    col= DrawFig(vec3(1.0,0.0,.0), col, mind);\n    \n    mind=9999.9;\n    for(float i=-2.5; i<2.5; i+=paso)\n    {\n        float sds2=sdOrientedBox(p2-vec2(-0.5+i,-0.5), vec2(-1.0,-1.0), vec2(2.0,2.0), 0.05 );\n        mind=unionSDF(mind,sds2);\n    } \n    \n    col= DrawFig(vec3(0.0,1.0,.0), col, mind);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord.xy-iResolution.xy)/max(iResolution.x,iResolution.y);    \n    vec3 col=vec3(0.4,0.4,0.3);\n   float t=iTime;\n   col= lineas(uv+vec2(0.25*sin(t), 0.25*cos(t)), col );\n   \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}