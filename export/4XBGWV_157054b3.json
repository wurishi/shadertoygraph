{"ver":"0.1","info":{"id":"4XBGWV","date":"1709118901","viewed":304,"name":"Interactive Neon Grid Background","username":"amirali","description":"A simple gid pattern that lights up on mouse hover","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["simple","grid","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float lineThickness = 0.005;\nconst float neonRadius = 0.2;\nconst vec3 neonColor = vec3(0.0, 1.0, 1.0);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ) {\n    float aspectRatio = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord.xy / iResolution.xy * vec2(aspectRatio, 1.0);\n    \n    // Create a grid of crossed lines\n    float lines = step(mod(uv.x, 0.1), lineThickness) +\n                  step(mod(uv.y, 0.1), lineThickness);\n    \n    // Calculate the distance from the mouse\n    vec2 mouse = (iMouse.xy - iResolution.xy) / iResolution.y;\n    float dist = distance(uv, iMouse.xy / iResolution.xy * vec2(aspectRatio, 1.0));\n    \n    // Add neon effect when the mouse is near the lines\n    float neon = smoothstep(neonRadius, 0.0, dist);\n    \n    // Mix the neon color with the grid color\n    vec3 color = mix(vec3(0.1), neonColor, neon);\n    \n    // Output the final color\n    fragColor = vec4(color * lines, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}