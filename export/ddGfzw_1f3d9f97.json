{"ver":"0.1","info":{"id":"ddGfzw","date":"1698089751","viewed":67,"name":"23. Celestial","username":"Ladus","description":"Inktober 2023 Day 23. A few celestial bodies","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["inktober","celestial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define aa 2./iResolution.y\n#define PI 3.14159265359\n\nmat2 rotate(float a) {\n    a *= PI * 2.;\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat visualizePoint(vec2 p, vec2 point, float radius) {\n    return smoothstep(radius+aa, radius-aa, length(point-p));\n}\nfloat visualizeCircle(vec2 p, vec2 point, float radius) {\n    return smoothstep(radius+aa, radius-aa, length(point-p));\n}\nfloat visualizeCircleOutline(vec2 p, vec2 point, float radius) {\n    float length = length(point-p);\n    return min(smoothstep(radius-aa, radius+aa, length+aa),smoothstep(radius+aa, radius-aa, length));\n}\nfloat hash(float v) {\n    return fract(fract(v*PI*2.21445)*PI);\n}\n\nvec2 pointOnOrbit(vec2 pos, float radius, float progression) {\n    vec2 p = vec2(0.,0.);\n    p.x += radius;\n    p *= rotate(progression);\n    return (p + pos);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = ((fragCoord/iResolution.xy) - vec2(0.5,0.5)) * 2.;\n    p.x *= iResolution.x / iResolution.y;\n    float loopingTime = fract(iTime/8.);\n    \n    float planetMask = visualizeCircle(p, vec2(0.,0.), 0.1);\n    vec3 color = vec3(0.,0.,0.);\n    \n    for(float i = 0.2; i < 0.95; i += 0.13) {\n        float moonMask = visualizeCircleOutline(p, vec2(0.,0.), 1.*i);\n        vec2 moonOrbitPos = pointOnOrbit(vec2(0., 0.), 1.*i, fract(iTime/1./(i*10.)));\n        float pointOnMoonOrbit = visualizePoint(p, moonOrbitPos, 0.01+0.03*hash(i));\n        color = max(color, moonMask*vec3(0.3,0.5,1.));\n        color = max(color, pointOnMoonOrbit*vec3(hash(i+0.1),hash(i+0.2)+0.5,hash(i+0.3)+0.5));\n        color = max(color, planetMask*vec3(1.,0.4,0.7));\n    }\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}