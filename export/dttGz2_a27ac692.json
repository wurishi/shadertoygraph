{"ver":"0.1","info":{"id":"dttGz2","date":"1682784659","viewed":85,"name":"Chladni Diagram","username":"CeruleanBoolean141","description":"Based off a video by UselessGameDev (link to video below), animated and colored by me.\nhttps://www.youtube.com/watch?v=Fvkw3IKJ8SU&t=139s","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["animated","chladni"],"hasliked":0,"parentid":"dtc3zB","parentname":"Manhattan in Autumn"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Created by CeruleanBoolean141 April 2023\n//Thanks to user FabriceNeyret2 for antialiasing method and other advice\n//Based off a video by UselessGameDev (link to video below), animated and colored by me.\n//https://www.youtube.com/watch?v=Fvkw3IKJ8SU&t=139s\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float pi = 3.14159, t = 0.5*iTime;\n    vec2 nm = vec2(1,4); //higher values -> shorter periods.  ratio effects overall shape\n    \n    vec2 ab = vec2(sin(t)*1.2,cos(t)*0.49); //larger values increase \"sharpness\", effects shape\n    float col =  abs(ab.x*sin(pi*uv.x*nm.y)*sin(pi*uv.y*nm.x) + ab.y*sin(pi*uv.x*nm.x)*sin(pi*uv.y*nm.y));   \n    fragColor = mix(vec4(0.8), vec4(col*vec3(sin(t),uv),1.0), smoothstep(0., 10./iResolution.y ,col-.1));\n    \n}\n\n","name":"Image","description":"","type":"image"}]}