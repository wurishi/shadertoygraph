{"ver":"0.1","info":{"id":"wsGfRy","date":"1607389016","viewed":66,"name":"Uninitialized variable - bugart","username":"theGiallo","description":"I had this image as a bug, trying to display the y coordinate as grayscale.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bugart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int x = int(fragCoord.x);\n    int y = int(fragCoord.y);\n    int w = int(iResolution.x);\n    float h = max( 0.0, float( x - 1 ) ) / float(w);\n    float v = float(y) / h;\n    int bv = int( v * 255.0);\n    v = float(bv % 255);\n    \n    // NOTE(theGiallo): try to comment this, just for fun\n    v /= 255.0;\n\n    fragColor = vec4(v,v,v,1.0);\n}\n\n/*\nNOTE(theGiallo): this was basically the code with the bug.\nIn theory you can enable warnings in the compiler, bug there are some bugs: https://godbolt.org/z/qnd5xh\n\nint w = image.getWidth();\nint h = image.getHeight();\nfor ( int y = 0; y < h; ++y )\n{\n\tfor ( int x = 0; x < w; ++x )\n\t{\n\t\tfloat h, s, v;\n\n\t\tfloat x01 = x / float(w);\n\t\tfloat y01 = y / float(h);\n\n        juce::uint8 r = y01 * 255;\n        juce::uint8 g = y01 * 255;\n        juce::uint8 b = y01 * 255;\n\n        juce::Colour c = juce::Colour::fromRGBA( r, g, b, 255 );\n\n        spectrum_render_image.setPixelAt( x, y, c );\n\t}\n}\n*/","name":"Image","description":"","type":"image"}]}