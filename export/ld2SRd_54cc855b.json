{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy - 0.5*iResolution.xy;\n    float v = iResolution.x;\n    if (v > iResolution.y)\n        v = iResolution.y;\n\tuv /= v;\n    uv *= 2.0;\n    float k = 1.005+(sin(iTime)+1.0)*2.0*(sqrt(2.0)-1.005);\n    float t = length(uv);\n    float d = 1.0+t*t-t*t*k*k;\n    if ( d < 0.0)\n    {\n        fragColor = vec4(0,0,0,1.0);\n        return;\n    }\n    float test = (k - sqrt(d))/(1.0 + t*t);\n    float test1 = asin(test*t);\n    float test2 = (k + sqrt(d))/(1.0 + t*t);\n    float test3 = asin(test2*t);\n    if (test2 <= k)\n    \ttest3 = acos(-1.0)-test3;\n    vec2 uv1 = (uv * test1 * 0.5 / t)+0.5;\n    vec2 uv2 = (uv * test3 * 0.5 / t)+0.5;\n    uv1.x += iTime*0.25;\n    uv1.y += iTime*0.05;\n    uv2.x -= iTime*0.25;\n    uv2.y -= iTime*0.05;\n    if (test >= 0.0)\n\t\tfragColor = texture(iChannel0,uv1)*0.5+texture(iChannel0,uv2)*0.5;  //\n    else\n        fragColor = vec4(-test,0,0,1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ld2SRd","date":"1415130677","viewed":213,"name":"Simple two sided sphere","username":"r57shell","description":"This is my first shader on shader toy. I was developing spherize effect, and this is what I got during development.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["sphere"],"hasliked":0,"parentid":"","parentname":""}}