{"ver":"0.1","info":{"id":"4lKfzt","date":"1543617513","viewed":72,"name":"Julia Set Test","username":"heckraiser","description":"julia set","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct complex {\n\tfloat r, i;\n};\n    \n   \ncomplex multiply(complex a, complex b) {\n    return complex(a.r * b.r - a.i * b.i, a.r * b.i + a.i * b.r);\n\t        \n}\n\ncomplex add(complex a, complex b) {\n\treturn complex(a.r + b.r, a.i + b.i);\n}\n\nfloat mag(complex c) {\n \treturn sqrt(c.r * c.r + c.i * c.i);   \n}\n\n\nint z(complex z, complex c) {\n    int count = 0;\n    while (mag(z) > 0.001 && count < 1000) {\n        z = add(multiply(z, z), c);\n        count++;\n    }\n    \n    return count;\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \n    vec2 mUV = iMouse.xy / iResolution.xy;\n    \n    vec2 scaledMouse = mUV * vec2(4, 2) - vec2(2, 1);\n    \n    complex c = complex(scaledMouse.x, scaledMouse.y);\n    \n\n \tvec2 xy = uv *vec2(4, 2) - vec2(2, 1);\n    \n    complex a = complex(xy.x, xy.y);\n    \n    int count = z(a, c);\n    \n    vec3 hsv = vec3(float((count + int(iTime * 30.0)) % 100) / 100.0, 1, 1);\n    \n    vec3 rgb = hsv2rgb(hsv);\n   \n    \n    \n    // Output to screen\n    fragColor = vec4(rgb,1);\n}","name":"Image","description":"","type":"image"}]}