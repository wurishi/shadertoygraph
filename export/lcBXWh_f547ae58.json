{"ver":"0.1","info":{"id":"lcBXWh","date":"1706299734","viewed":49,"name":"perlin noise failure","username":"sepia_sempervirens","description":"This started as an attempt to create Perlin noise from a white noise texture, but then I found this pretty bug.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","perlinnoise","degenerative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TAU = 6.283185307179586476925;\nconst float TEXEL_SIZE = 1.0 / 256.0;\nconst float MOVEMENT_ANGLE = 0.65;\nconst float SIN_MOV_ANGLE = sin(MOVEMENT_ANGLE);\nconst float COS_MOV_ANGLE = cos(MOVEMENT_ANGLE);\nconst mat2 ROTATE = mat2(\n    COS_MOV_ANGLE, -SIN_MOV_ANGLE,\n    SIN_MOV_ANGLE,  COS_MOV_ANGLE\n);\nconst mat2 ROTATE_BACK = mat2(\n     COS_MOV_ANGLE, SIN_MOV_ANGLE,\n    -SIN_MOV_ANGLE, COS_MOV_ANGLE\n);\n\n\nfloat randomAt( vec2 uv, int xOff, int yOff ) {\n    vec2 offset = vec2(xOff, yOff) * TEXEL_SIZE;\n    return texture(iChannel0, uv + offset).r;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / min(iResolution.x, iResolution.y);\n    // make uv scroll in a wave pattern\n    uv = ROTATE * uv;\n    uv.x += iTime / 3.0;\n    uv.y += 0.17 * cos(iTime / 1.5);\n    uv = ROTATE_BACK * uv;\n    uv /= 60.0;\n\n    vec2 offset = fract(uv / TEXEL_SIZE);\n    vec4 offsetXs = vec2(offset.x, offset.x - 1.).sstt;\n    vec4 offsetYs = vec2(offset.y, offset.y - 1.).stst;\n    vec4 offsetMags = sqrt(offsetXs*offsetXs + offsetYs*offsetYs);\n    offsetXs /= offsetMags;\n    offsetYs /= offsetMags;\n\n    vec4 gradientAngles = vec4(\n        randomAt(uv, 0, 0),\n        randomAt(uv, 0, 1),\n        randomAt(uv, 1, 0),\n        randomAt(uv, 1, 1)\n    ) * TAU;\n    vec4 gradientXs = cos(gradientAngles);\n    vec4 gradientYs = sin(gradientAngles);\n\n    vec4 dots = gradientXs * offsetXs + gradientYs * offsetYs;\n\n    float leftInterp  = smoothstep(dots.s, dots.t, offset.y);\n    float rightInterp = smoothstep(dots.p, dots.q, offset.y);\n    float interp = smoothstep(leftInterp, rightInterp, offset.x);\n\n    fragColor = vec4(interp);\n}","name":"Image","description":"","type":"image"}]}