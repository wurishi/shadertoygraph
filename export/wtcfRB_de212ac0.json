{"ver":"0.1","info":{"id":"wtcfRB","date":"1612957157","viewed":87,"name":"Nobody Puts Blobby In The Corner","username":"jjmsteen","description":"Using barycentric coordinates and products of those coordinates' components to create a nice blob in the middle of a triangle\n\nUses some code from https://www.shadertoy.com/view/lsl3Wn, thanks!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["blob","barycentric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 bary(in vec3 v0, in vec3 v1, in vec3 v2, in vec3 p, in vec3 normal)\n{\n\tfloat area = dot(cross(v1 - v0, v2 - v0), normal);\n\t\n\tif(abs(area) < 0.0001) {\n\t\treturn vec3(0.0, 0.0, 0.0);\n\t}\n\t\n\tvec3 pv0 = v0 - p;\n\tvec3 pv1 = v1 - p;\n\tvec3 pv2 = v2 - p;\n\t\n\tvec3 asub = vec3(dot(cross(pv1, pv2), normal),\n\t\t\t\t\t dot(cross(pv2, pv0), normal),\n\t\t\t\t\t dot(cross(pv0, pv1), normal));\n\treturn abs(asub) / vec3(abs(area)).xxx;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 aspect = vec2(iResolution.x / iResolution.y, 1.0);\n\tvec3 v0 = vec3(0.0, 0.7, 0.0) * aspect.xyy;\n\tvec3 v1 = vec3(0.5, -0.6, 0.0) * aspect.xyy;\n\tvec3 v2 = vec3(-0.5, -0.5, 0.0) * aspect.xyy;\n    vec3 v3 = vec3(0.6, 0.65, 0.0) * aspect.xyy;\n\n    vec2 uv = (2.0 * fragCoord.xy / iResolution.xy - 1.0) * aspect;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec3 t0bc = bary(v0, v1, v2, vec3(uv, 0.0), vec3(0.0, 0.0, 1.0));\n    float t0bcSum = t0bc.x + t0bc.y + t0bc.z;\n    float t0bcProd = t0bc.x * t0bc.y * t0bc.z;\n    \n    vec3 t1bc = bary(v0, v3, v1, vec3(uv, 0.0), vec3(0.0, 0.0, 1.0));\n    float t1bcSum = t1bc.x + t1bc.y + t1bc.z;\n    float t1bcProd = t1bc.x * t1bc.y * t1bc.z;\n\n    vec3 backgroundCol = vec3(0.3, 0.3, 0.3);\n    \n    // Outside triangle 0 - background\n    if(t0bcSum > 1.00001 && t1bcSum > 1.0001) {\n\t\tcol = backgroundCol;\n\t}\n    // Exaggerated triangle boundary\n    else if (any(lessThanEqual(t0bc, vec3(0.01)))\n          || any(lessThanEqual(t1bc, vec3(0.01)))) {\n        col = vec3(1.0);\n    }\n    else {//if (any(lessThanEqual(bc, vec3(0.1)))) {\n        //col = backgroundCol;\n        \n        float comparator = 0.015;\n        \n        if(t0bcProd < comparator || t1bcProd < comparator) {\n            col = backgroundCol;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}