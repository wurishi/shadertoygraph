{"ver":"0.1","info":{"id":"lsSBWK","date":"1502168228","viewed":365,"name":"a clock","username":"hclarke","description":"a clock","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["clock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 sd_line(vec2 pos, vec2 a, vec2 b) {\n    pos -= a;\n    vec2 d = b-a;\n    float l = length(d);\n    d /= l;\n    \n    float t = dot(d,pos);\n    vec2 p = d*clamp(t,0.0,l);\n    vec2 perp = vec2(d.y,-d.x);\n    \n    return vec2(length(pos-p), dot(pos,perp));\n}\n\nfloat abs_min(float a, float b) {\n \treturn abs(a) < abs(b) ? a : b;   \n}\n\n\nvec2 lmin(vec2 a, vec2 b) {\n    if(abs(a.x-b.x) < 0.0001) {\n      return a.y > b.y ? a : b;\n    }\n    \n    return a.x < b.x ? a : b;\n}\n\nfloat to_sd(vec2 x) {\n \treturn x.x * sign(x.y);   \n}\n\nfloat sd_diamond(vec2 pos, vec2 tail, vec2 tip, float width, float mid) {\n\tvec2 d = tip-tail;\n    vec2 p = vec2(d.y,-d.x) * width * 0.5;\n    vec2 m = d*mid+tail;\n    \n    vec2 la = sd_line(pos,tail,m+p);\n    vec2 lb = sd_line(pos,m+p,tip);\n   \tvec2 lc = sd_line(pos,tip,m-p);\n    vec2 ld = sd_line(pos,m-p,tail);\n    \n    \n    return to_sd(lmin(lmin(la,lb),lmin(lc,ld)));\n}\n\nvec2 to_polar(vec2 x) {\n\treturn vec2(length(x), atan(-x.y, -x.x) + 3.14159);\n}\n\nvec2 from_polar(vec2 x) {\n \treturn vec2(cos(x.y),sin(x.y)) * x.x;   \n}\n\nvec2 radial_repeat(vec2 pos, float count) {\n    float offset = 0.5/count;\n    pos = to_polar(pos);\n    pos.y /= 2.0*3.14195;\n    pos.y += offset;\n   \tpos.y *= count;\n   \tpos.y = fract(pos.y);\n   \tpos.y /= count;\n    pos.y -= offset;\n    pos.y *= 2.0*3.14195;\n    pos = from_polar(pos);\n    return pos;\n}\n\nvec2 rotate(vec2 pos, float turns) {\n \tpos = to_polar(pos);\n    pos.y += turns * 2.0 * 3.14195;\n    return from_polar(pos);\n}\n\nfloat gear(vec2 uv, float inner, float outer, float width, float mid, float teeth, float turns) {\n    uv = rotate(uv,turns);\n    uv = radial_repeat(uv, teeth);\n    \n    \n   \t\n    float d = 0.05;\n    return sd_diamond(uv, vec2(inner,0.0), vec2(outer,0.0), width, mid);\n}\n\nfloat hand(vec2 uv, float len, float width, float mid, float turns) {\n    turns = fract(turns);\n    uv = rotate(uv,turns-0.25);\n    return sd_diamond(uv, vec2(0.0,0.0), vec2(len,0.0), width, mid);\n}\n\nfloat cutoff(float sd) {\n    \n    sd *= 150.0;\n    return smoothstep(1.0,0.0,sd);\n}\n\nvec3 hands() {\n    float s = iDate.w;\n    \n    vec3 t = vec3(s,s/60.0,s/3600.0);\n    float ns = s + 1.0;\n    vec3 nt = vec3(ns,ns/60.0,ns/3600.0);\n    vec3 d = vec3(1.)-vec3(equal(floor(nt), floor(t)));\n    \n    float pulse = pow(fract(s)*1.00,15.0);\n    t = floor(t) + d*pulse;\n    t *= vec3(1./60., 1./60., 1./12.);\n    t = fract(t);\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy-iResolution.xy*0.5) / min(iResolution.x, iResolution.y) * 2.0;\n\n    \n    float face = abs(length(uv)-1.0)*0.8;\n    face = min(face, gear(uv, 0.8, 0.9, 0.3, 0.8, 12.0, 0.0));\n    face = min(face, gear(uv, 0.9, 0.95, 0.3, 0.8, 60.0, 0.0));\n    \n    vec3 h = hands();\n    float secHand = hand(uv, 0.97,0.05, 0.1, h.x);\n    float minHand = hand(uv, 0.90,0.1, 0.8, h.y);\n    float hourHand = hand(uv, 0.75,0.1, 0.8, h.z);\n    \n    vec3 col = vec3(1.0);\n    col = mix(col, vec3(0.0), cutoff(face));\n    col = mix(col, vec3(0.0), cutoff(minHand));\n    col = mix(col, vec3(0.0), cutoff(hourHand));\n    col = mix(col, vec3(1.0,0.0,0.0), cutoff(secHand));\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}