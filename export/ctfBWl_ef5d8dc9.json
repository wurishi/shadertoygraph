{"ver":"0.1","info":{"id":"ctfBWl","date":"1693566568","viewed":71,"name":"Dot pixel transition","username":"artrointel","description":"MIT License\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["pixel","transition","dot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TRANSITION_SPEED = 0.3;\nconst float PIXEL_AMOUNT = 50.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float blendProgress = mod(iTime * TRANSITION_SPEED, 1.0);\n    float progress = abs(blendProgress * 2.0 - 1.0);\n    progress = pow(smoothstep(0.0, 1.0, progress), 1.0);\n    if (mod(iTime * TRANSITION_SPEED, 2.0) >= 1.0) {\n        blendProgress = 1.0 - blendProgress;\n    }\n    \n    vec2 focus = iMouse.xy / iResolution.xy;\n    if (length(focus) < 0.01) focus = vec2(0.5,0.5);\n    \n    float aspectRatio = iResolution.x / iResolution.y;\n    vec2 tuv = fragCoord / iResolution.xy;\n    vec2 uv = tuv - focus;\n    float pixelSize = progress * PIXEL_AMOUNT;\n    \n\tuv *= pixelSize;\n    uv.x *= aspectRatio;\n    uv += 0.5;\n    vec2 localUv = fract(uv);\n    uv = floor(uv);\n    vec2 id = uv;\n    uv.x /= aspectRatio;\n    uv /= pixelSize;\n    uv += focus;\n    \n    float diagonalRadius = length(vec2(\n            max(focus.x, (1.0 - focus.x)) * aspectRatio, \n            max(focus.y, (1.0 - focus.y))\n        ));\n    \n    vec3 col = mix(texture(iChannel0, uv).rgb, texture(iChannel1, uv).rgb, blendProgress);\n\tfloat r = length(localUv - vec2(0.5));\n    col *= 1.0 - smoothstep(0.4, 0.5 + 0.5*smoothstep(0.9, 1.0, progress), r);\n    float normIdInv = 1.0 - length(id) / (diagonalRadius * pixelSize * smoothstep(-0.2, 0.9, progress));\n    col *= mix(normIdInv, 1.0, pow(progress, 16.0));\n    col = mix(texture(iChannel0, tuv).rgb, col, smoothstep(0.0, 0.05, blendProgress));\n    col = mix(col, texture(iChannel1, tuv).rgb, smoothstep(0.95, 1.0, blendProgress));\n    col *= smoothstep(0.0, 0.1, progress);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}