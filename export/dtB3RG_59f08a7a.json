{"ver":"0.1","info":{"id":"dtB3RG","date":"1673456344","viewed":112,"name":"smokey fire","username":"ianertson","description":"Another fire with smoke","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["noise","fire","perlin","smoke"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPEED 0.2\n\nvec3 smoke(vec2 uv, vec2 px, vec2 res) {\n  float T = iTime*SPEED;\n  uv = (0.5+uv);\n  uv *= 0.25;\n  const float freq = 6.6;\n  \n  float n0 = perlin_get2d(uv+vec2(cos(T*0.1)*0.5, -T*0.33), freq*2.0, 4, 96739);\n  \n  float radius = res.x*(0.25*(0.25+n0));\n  float feather = radius;\n  \n  vec2 center = res * 0.5;\n  center.y += res.y*0.25;\n  float distCenter = length(center - px);\n  float magCenter = 1.0-smoothstep(radius-feather, radius+feather, distCenter);\n  \n  \n  \n  vec2 move = vec2(0, -(1.0+(T*0.9)));\n  vec3 p3_1 = perlin_vec3(uv+(move*0.1), freq, 4, 8371);\n  move += vec2(0.05, 0.1)*vec2(cos(p3_1.x+T+(uv.y/1.6)), sin((uv.x/1.6)+p3_1.y+T));\n  \n \n  float n1 = perlin_get2d(uv+move, freq*2.0, 4, 26122);\n  \n  \n  float f = magCenter;\n  float n = (n0+n1)/2.0;\n  \n  return vec3(n) * f * 1.6;\n}\n\n#define FIRE_COLOR_0 (vec3(213.0, 77., 0.0) / 255.0)\n#define FIRE_COLOR_1 (vec3(253.0, 253.0, 46.0) / 255.0)\n#define FIRE_COLOR_2 (vec3(1.0))\n#define FIRE_COLOR_3 (vec3(1.0, 0.001, 0.002))\n\nvec3 fire(vec2 uv, vec2 px, vec2 res, vec3 sm) {\n  sm *= 0.45;\n  float T = iTime*SPEED;\n  uv = (0.5+uv);\n  uv *= 0.25;\n  const float freq = 6.6;\n  float n0 = perlin_get2d(uv+vec2(cos(T*0.1+sm.x)*0.5, -T*0.33+sm.y), freq*2.0, 4, 17397);\n  float n1 = perlin_get2d(uv*n0, freq, 4, 9384);\n  float n2 = perlin_get2d(vec2(n0+sm.y, n1+sm.x), freq, 4, 2525);\n  float n3 = perlin_get2d(uv*vec2(n1, n2)*3.3, freq*1.6, 3, 9285);\n  \n  float radius = res.x*(0.25*(0.25+n0));\n  float feather = radius*0.6;\n  \n  vec2 center = res * 0.5;\n  center.y += radius*0.05;\n  center.y -= res.y * 0.21;\n  float distCenter = length(center - px);\n  float magCenter = 1.0-smoothstep(radius-feather, radius+feather, distCenter);\n  \n  vec3 color = mix(FIRE_COLOR_0, FIRE_COLOR_1, n2);\n  color = mix(color, FIRE_COLOR_2, pow((magCenter*0.5)+((n0+n1)*0.33), 3.6));\n  color = mix(color, FIRE_COLOR_3, pow(n3, 2.2));\n  \n  float f = pow(magCenter, 2.5);\n  \n  f = clamp(f, 0.0, 1.0);\n  \n  return color * f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.0);\n    vec3 sm = smoke(uv, fragCoord.xy, iResolution.xy);\n    vec3 fir = fire(uv, fragCoord.xy, iResolution.xy, sm);\n    \n    col += sm + fir;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"int HASH[256] = int[256](\n    208, 34,  231, 213, 32,  248, 233, 56,  161, 78,  24,  140, 71,  48,  140,\n    254, 245, 255, 247, 247, 40,  185, 248, 251, 245, 28,  124, 204, 204, 76,\n    36,  1,   107, 28,  234, 163, 202, 224, 245, 128, 167, 204, 9,   92,  217,\n    54,  239, 174, 173, 102, 193, 189, 190, 121, 100, 108, 167, 44,  43,  77,\n    180, 204, 8,   81,  70,  223, 11,  38,  24,  254, 210, 210, 177, 32,  81,\n    195, 243, 125, 8,   169, 112, 32,  97,  53,  195, 13,  203, 9,   47,  104,\n    125, 117, 114, 124, 165, 203, 181, 235, 193, 206, 70,  180, 174, 0,   167,\n    181, 41,  164, 30,  116, 127, 198, 245, 146, 87,  224, 149, 206, 57,  4,\n    192, 210, 65,  210, 129, 240, 178, 105, 228, 108, 245, 148, 140, 40,  35,\n    195, 38,  58,  65,  207, 215, 253, 65,  85,  208, 76,  62,  3,   237, 55,\n    89,  232, 50,  217, 64,  244, 157, 199, 121, 252, 90,  17,  212, 203, 149,\n    152, 140, 187, 234, 177, 73,  174, 193, 100, 192, 143, 97,  53,  145, 135,\n    19,  103, 13,  90,  135, 151, 199, 91,  239, 247, 33,  39,  145, 101, 120,\n    99,  3,   186, 86,  99,  41,  237, 203, 111, 79,  220, 135, 158, 42,  30,\n    154, 120, 67,  87,  167, 135, 176, 183, 191, 253, 115, 184, 21,  233, 58,\n    129, 233, 142, 39,  128, 211, 118, 137, 139, 255, 114, 20,  218, 113, 154,\n    27,  127, 246, 250, 1,   8,   198, 250, 209, 92,  222, 173, 21,  88,  102,\n    219);\n\nint noise2(int x, int y, int seed) {\n  int yindex = (y + seed) % 256;\n  if (yindex < 0) yindex += 256;\n  int xindex = (HASH[yindex] + x) % 256;\n  if (xindex < 0) xindex += 256;\n  return HASH[xindex];\n}\n\nfloat lin_inter(float x, float y, float s) {\n  return x + s * (y - x);\n}\n\nfloat smooth_inter(float x, float y, float s) {\n  return lin_inter(x, y, s * s * (3. - 2. * s));\n}\n\nfloat noise2d(float x, float y, int seed) {\n  int x_int = int(floor(x));\n  int y_int = int(floor(y));\n  float x_frac = float(x - float(x_int));\n  float y_frac = y - float(y_int);\n  int s = noise2(x_int, y_int, seed);\n  int t = noise2(x_int + 1, y_int, seed);\n  int u = noise2(x_int, y_int + 1, seed);\n  int v = noise2(x_int + 1, y_int + 1, seed);\n  float low = smooth_inter(float(s), float(t), float(x_frac));\n  float high = smooth_inter(float(u), float(v), float(x_frac));\n  return smooth_inter(float(low), float(high), float(y_frac));\n}\n\nfloat perlin_get2d(vec2 p, float freq, int depth, int seed) {\n  depth = min(depth, 8); // too slow otherwise\n  float xa = p.x * freq;\n  float ya = p.y * freq;\n  float amp = 1.0;\n  float fin = 0.;\n  float div = 0.0;\n  for (int i = 0; i < depth; i++) {\n    div += 256. * amp;\n    fin += noise2d(xa, ya, seed) * amp;\n    amp /= 2.;\n    xa *= 2.;\n    ya *= 2.;\n  }\n  return clamp(fin / div, -1.0, 1.0);\n}\n\nfloat perlin_get2d(vec2 p, float freq, float depth, float seed) {\n  return perlin_get2d(p, freq, int(depth), int(seed));\n}\n\nvec3 perlin_vec3(vec2 p, float freq, int depth, int seed) {\n  float x = perlin_get2d(p, freq, depth, seed);\n  float y = perlin_get2d(p, freq, depth, int(seed+int(freq)));\n  float z = perlin_get2d(p, freq, depth, int(seed+int(ceil(freq))+int(ceil(freq))));\n  \n  return vec3(x, y, z);\n}","name":"Common","description":"","type":"common"}]}