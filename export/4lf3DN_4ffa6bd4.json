{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\n\n\nbool inTri(vec2 verts[3], vec2 point) {\n  bool hit = false;\n    \n  for (int i = 0; i < 3; i++) {\n      vec2 vI = verts[i];\n      vec2 vJ = verts[int(mod(float(i)+2.0,3.0))];\n  \t  if ( ((vI.y > point.y) != (vJ.y > point.y)) && (point.x < (vJ.x-vI.x) * (point.y-vI.y) / (vJ.y-vI.y) + vI.x) ) {\n         hit = !hit;\n      }\n  }\n  return hit;\n}\n\n\n\nbool inQuad(vec2 verts[4], vec2 point) {\n  bool hit = false;\n    \n  for (int i = 0; i < 4; i++) {\n      vec2 vI = verts[i];\n      vec2 vJ = verts[int(mod(float(i)+3.0,4.0))];\n  \t  if ( ((vI.y > point.y) != (vJ.y > point.y)) && (point.x < (vJ.x-vI.x) * (point.y-vI.y) / (vJ.y-vI.y) + vI.x) ) {\n         hit = !hit;\n      }\n  }\n  return hit;\n}\n\n\nbool inPentagon(vec2 verts[5], vec2 point) {\n  bool hit = false;\n    \n  for (int i = 0; i < 5; i++) {\n      vec2 vI = verts[i];\n      vec2 vJ = verts[int(mod(float(i)+4.0,5.0))];\n  \t  if ( ((vI.y > point.y) != (vJ.y > point.y)) && (point.x < (vJ.x-vI.x) * (point.y-vI.y) / (vJ.y-vI.y) + vI.x) ) {\n         hit = !hit;\n      }\n  }\n  return hit;\n}\n\nbool inHexagon(vec2 verts[6], vec2 point) {\n  bool hit = false;\n    \n  for (int i = 0; i < 6; i++) {\n      vec2 vI = verts[i];\n      vec2 vJ = verts[int(mod(float(i)+5.0,6.0))];\n  \t  if ( ((vI.y > point.y) != (vJ.y > point.y)) && (point.x < (vJ.x-vI.x) * (point.y-vI.y) / (vJ.y-vI.y) + vI.x) ) {\n         hit = !hit;\n      }\n  }\n  return hit;\n}\n\nbool inHeptagon(vec2 verts[7], vec2 point) {\n  bool hit = false;\n    \n  for (int i = 0; i < 7; i++) {\n      vec2 vI = verts[i];\n      vec2 vJ = verts[int(mod(float(i)+6.0,7.0))];\n  \t  if ( ((vI.y > point.y) != (vJ.y > point.y)) && (point.x < (vJ.x-vI.x) * (point.y-vI.y) / (vJ.y-vI.y) + vI.x) ) {\n         hit = !hit;\n      }\n  }\n  return hit;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 vs[3];\n    vs[0] = vec2(sin(iTime)*0.2+0.5,0.2);\n    vs[1] = vec2(0.5,0.8);\n    vs[2] = vec2(sin(iTime)*-0.2+0.5,0.2);\n    \n    if (inTri(vs,uv)) {\n\t\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    } else {\n        fragColor = vec4(0.0);\n    }\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4lf3DN","date":"1422287395","viewed":295,"name":"point in polygon","username":"public_int_i","description":"just trying stuff","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","polygon","in","point"],"hasliked":0,"parentid":"","parentname":""}}