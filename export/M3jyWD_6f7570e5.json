{"ver":"0.1","info":{"id":"M3jyWD","date":"1727306980","viewed":7,"name":"my_hello_world","username":"bboooxx","description":"hello world! My first attempt at shader art after following kishimisu's YouTube tutorial: https://www.youtube.com/watch?v=f4s1h2YETNY","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.660, 0.560, 0.680); \n    vec3 b = vec3(0.718, -0.352, 0.720); \n    vec3 c = vec3(0.520, 0.800, 0.520); \n    vec3 d = vec3(-0.430, -0.397, -0.083); \n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord / iResolution.xy) * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    // equivalent as uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    for (float i = 0.0; i < 3.0; i++) {\n        uv = fract(uv * 1.333) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0) * 1.3);\n\n        vec3 col = palette(length(uv0) + iTime * 0.88 );\n\n        d = sin(d * 4.0 + i * 2.0 + iTime * 0.7) / 4.0;\n\n        d = abs(d);\n\n        d = smoothstep(0.0, 0.4, d);\n\n        d = pow(0.005 / d, 1.1);\n\n        finalColor += col * d;\n    }\n    \n\tfragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}