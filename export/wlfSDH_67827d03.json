{"ver":"0.1","info":{"id":"wlfSDH","date":"1562712491","viewed":104,"name":"Rattan","username":"ParaBellum","description":"Creating rattan material","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","light","material","tile","palm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float magicFunc(float x)\n{\n    float a = floor(x+1.)-x;\n    float b = 1.-a;\n    float j = min(max((b-a)+.5, 0.), 1.);\n    float n = j*(1.-j)*.5;\n    return j*a+(1.-j)*b-n;\n}\n\nfloat tile(vec2 p, float s)\n{\n    vec2 i_p = floor(p*s);\n    if(mod(i_p.y,2.)==0.)\n        p.x+=1./s*2.;\n    i_p = floor(p*s);\n    vec2 f_p = fract(p*s);\n    float m = 0.;\n    if (mod(i_p.x, 4.) != 0.)\n    {\n        m = fract(magicFunc(f_p.y*1.)*6.);\n        if (mod(i_p.x, 2.) == 0.)\n        \tm *= 1.-abs(sin(f_p.x*2.-1.)*.5);\n        else\n        {\n            if (mod(i_p.x+1., 2.) == 0. && mod(i_p.x+1., 4.) != 0.)\n            \tm *= sin(f_p.x*.6177);\n            if (mod(i_p.x-1., 2.) == 0. && mod(i_p.x-1., 4.) != 0.)\n            \tm *= sin((1.-f_p.x)*.6177);\n        }\n    }\n    else\n    {\n        m = fract(magicFunc(f_p.x*1.)*6.);\n        m *= (1.-abs(sin(f_p.y-.5)))*.5;\n    }\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 frag = fragCoord.xy;\n    vec2 e = vec2(1., 0.);\n    vec2 uv = (frag+e.yy)/iResolution.y;\n    vec2 dx_uv = (frag+e.xy)/iResolution.y;\n    vec2 dy_uv = (frag+e.yx)/iResolution.y;\n    \n    float size = 10.;\n    float z = tile(uv, size);\n    float dx_z = tile(dx_uv, size);\n    float dy_z = tile(dy_uv, size);\n    \n    vec3 fragPos = vec3(uv, z);\n    vec3 dx_fragPos = vec3(dx_uv, dx_z);\n    vec3 dy_fragPos = vec3(dy_uv, dy_z);\n    \n    vec3 a = dx_fragPos - fragPos;\n    vec3 b = dy_fragPos - fragPos;\n    \n    vec3 nor = normalize(cross(a, b));\n    vec3 lightPos = vec3(1., 1., 3.);\n    vec3 lightDir = normalize(lightPos - fragPos);\n    vec3 eyeDir = normalize(vec3(uv, 3.));\n    vec3 halfWay = normalize(lightDir + eyeDir);\n    \n    float amb = z;\n    float dif = max(dot(nor, lightDir), 0.)*.5;\n    float spe = pow(max(dot(halfWay, nor), 0.), 8.);\n    vec3 l = amb*vec3(1.)+ dif*vec3(.25)+spe*vec3(.5);\n    \n    vec3 brown = vec3(.3515625, .15234375, .16015625);\n    \n    vec3 col = vec3(0.);\n    col += l*brown;\n\n    fragColor = vec4(sqrt(clamp(col, 0., 1.)),1.0);\n}","name":"Image","description":"","type":"image"}]}