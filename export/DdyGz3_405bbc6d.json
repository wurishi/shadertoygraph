{"ver":"0.1","info":{"id":"DdyGz3","date":"1678929983","viewed":129,"name":"GPT4 made this shader","username":"wiznat","description":"A portal shader created with GPT4","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["portal","gpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fullscreen Spiraling Black and Purple Portal with Pink Gradients\n// by ChatGPT\n\nconst float pi = 3.14159265359;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized screen coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Center the coordinates\n    vec2 center = vec2(0.5);\n    uv -= center;\n    \n    // Time and parameters\n    float t = iTime * 0.5;\n    \n    // Calculate the radial and angular coordinates\n    float radial = length(uv) * 2.0;\n    float angle = atan(uv.y, uv.x);\n    \n    // Apply a twist effect based on the radial distance\n    angle += sin(radial * 15.0 + t) * 2.0;\n    \n    // Create a smooth oscillating color gradient\n    float colorOffset = sin(t * 0.3) * 10.5 + 0.5;\n    \n    // Calculate the final colors using radial and angle components\n    float r = sin(angle * 3.0 + colorOffset) * 0.5 + 0.5;\n    float g = sin(angle * 4.0 + pi / 3.0 + colorOffset) * 0.5 + 0.5;\n    float b = sin(angle * 5.0 + 2.0 * pi / 3.0 + colorOffset) * 0.5 + 0.5;\n    \n    // Combine colors\n    vec3 color = vec3(r, g, b);\n    \n    // Modify the color to create a black, purple, and pink gradient\n    color = mix(vec3(0.0, 0.0, 0.0), vec3(0.5, 0.0, 0.8), color.r * 2.);\n    color = mix(color, vec3(1.0, 0.3, 0.8), color.g);\n    float mod = smoothstep(.85,.9,color.r);\n    \n    // Output the final color\n    fragColor = vec4(color * mod, 1.0);\n}","name":"Image","description":"","type":"image"}]}