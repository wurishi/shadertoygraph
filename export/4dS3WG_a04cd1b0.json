{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"keyboard","id":"4dXGRr","filepath":"/presets/tex00.jpg","sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"/*by musk License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\tA small graphing tool that does multisampling.\n\t\n\t\t- noise based sampling\n\t\t- antialiasing\n\t\t- subpixel rendering\n\n\tWorks perfectly with functions that have discontinueties or changes rapidly.\n\n\tUsage:\n\n\t\t1. set the quality, \n\t\tthe more quality the more samples are taken\n\t\tmore samples = better result\n\n\t\t2. optionally set the plot smoothness, \n\t\tthis defines the size of the area that is sampled\n\t\tmore smoothness = the plot is basically blurred\n\n\t\t3. define your function in float f(float x)\n\t\tthe default function cycles over 7 other functions\n\n*/\n\n#define quality 10\n#define smoothness min(2.0,float(quality)*.125)\n#define grid\n#define subpixel\n//#define reverseLCD\n\nfloat f4(float x) // interference\n{\n\tx=x*200.0;\n\treturn sin(x)+sin(x*.99); \n}\n\nfloat f3(float x) // undefined at x = 0\n{\n\treturn 1.0/x; \n}\n\nfloat f2(float x) //unstable\n{\n\tx = pow(4.0,x);\n\treturn sin(x*10.0);\n}\n\nfloat f1(float x) // undefined at x = 0\n{\n\treturn sin(1.0/x);\n}\n\nfloat f5(float x) // sawtooth wave\n{\n\treturn mod(x,1.0);\n}\n\nfloat f6(float x) //animated\n{\n\treturn sin(x*4.0+iTime) + sin(x*3.0+iTime);\n}\n\nfloat f7(float x)\n{\n\tx = pow(4.0,x);\n\treturn sin(x*10.0);\n}\n\nfloat f(float x)\n{\n\tfloat t = mod(iTime*.5,7.0);\n\tif (t<1.0)\n\t{\n\t\treturn f1(x);\n\t}\n\telse if (t<2.0)\n\t{\n\t\treturn f2(x);\n\t}\n\telse if (t<3.0)\n\t{\n\t\treturn f3(x);\n\t}\n\telse if (t<4.0)\n\t{\n\t\treturn f4(x);\n\t}\n\telse if (t<5.0)\n\t{\n\t\treturn f5(x);\n\t}\n\telse \n\t{\n\t\treturn f6(x);\n\t}\n}\n\nfloat hash(float x)\n{\n\treturn fract(sin(x*164437.36831)*13217.321); //decent hash for noise generation\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float mode = texture(iChannel0, vec2(49.5 / 256.0, 1.0)).x;\n                            \n\tvec2 uv = fragCoord.xy;\n    \n    if (mode > .1)\n\t\tuv = (fragCoord.xy - iMouse.xy + iResolution.xy*.5);\n        \n    uv = uv/iResolution.xy-.5;\n\tuv.x = uv.x*iResolution.x/iResolution.y;\n\tuv*=2.0;\n\tfloat pixel = 4.0/iResolution.y;\n\t\n\tuv*=4.0; \n\t\t\n\tvec3 c = vec3(.0);\n\t\n\tfor (float fi=.0; fi<1.0; fi += 1.0/float(quality))\n\t{\n\t\t#ifdef subpixel\n\t\tfor (int i=0; i<3; i++)\n\t\t{\n\t\t\tfloat x = uv.x + hash(uv.y*41.0+fi)*pixel*float(smoothness)*.3333 + float(i)*pixel*.3333;\n\t\t\tfloat y = uv.y + hash(uv.x*41.0+fi)*pixel*float(smoothness);\n\t\t\n\t\t\tfloat s0 = f(x-pixel);\n\t\t\tfloat s1 = f(x+pixel);\n\t\t\t\n\t\t\tif (s0-pixel <= y && y < s1+pixel || s1-pixel <= y && y < s0+pixel)\n\t\t\t{\n\t\t\t\t#ifdef reverseLCD\n\t\t\t\tc[2-i] += 1.0;\n\t\t\t\t#else\n\t\t\t\tc[i] += 1.0;\n\t\t\t\t#endif\n\t\t\t}\n\t\t}\n\t\t#else \n\t\tfloat x = uv.x + hash(uv.y*41.0+fi)*pixel*float(smoothness);\n\t\tfloat y = uv.y + hash(uv.x*41.0+fi)*pixel*float(smoothness);\n\t\t\n\t\tfloat s0 = f(x-pixel);\n\t\tfloat s1 = f(x+pixel);\n\t\t\t\n\t\tif (s0-pixel <= y && y < s1+pixel || s1-pixel <= y && y < s0+pixel)\n\t\t{\n\t\t\tc += vec3(1.0);\n\t\t}\n\t\t#endif\n\t}\n\t\n\tc/=float(quality);\n\t\n\t#ifdef grid\n\tc += max(.0,1.0-abs(mod(uv.x+.5,1.0)-.5)/pixel*0.5)*.1/(.5+abs(uv.x)*.5);\n\tc += max(.0,1.0-abs(mod(uv.y+.5,1.0)-.5)/pixel*0.5)*.1/(.5+abs(uv.y)*.5);\n\t#endif\n\t\n\tfragColor = vec4(pow(c,vec3(.6)),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":true,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dS3WG","date":"1392595197","viewed":1223,"name":"Precise Graphing","username":"mu6k","description":"A small graphing tool that does multisampling. Press 1 for mouse control.","likes":31,"published":1,"flags":0,"usePreview":0,"tags":["2d","graphing","subpixel"],"hasliked":0,"parentid":"","parentname":""}}