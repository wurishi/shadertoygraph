{"ver":"0.1","info":{"id":"4ltyzN","date":"1531975100","viewed":455,"name":"edgy trash","username":"DJDoomz","description":"wanted to make something dark & noisy","likes":13,"published":1,"flags":64,"usePreview":0,"tags":["2d","noise","static","monochromatic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ldjSRt","filepath":"https://soundcloud.com/akazimusic/maybe-you-thought-i-wouldnt-notice","previewfilepath":"https://soundcloud.com/akazimusic/maybe-you-thought-i-wouldnt-notice","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float ls(vec2 u, vec2 s, vec2 e)\n{\n    vec2 l1 = u-s;\n    vec2 n = e-s;\n    vec2 l2 = n*(clamp( dot(l1,n) /(dot(n,n)), 0., 1. ) );\n    \n    return smoothstep(.004,0.001,length(l1-l2));\n}\n\nfloat fence(vec2 u, vec2 s, vec2 e)\n{\n    vec2 mu = u;\n    float n = ls(mu,s,e);\n    for(int i = 0; i < 2; i++)\n    {\n        mu.y += .05*(1.-.6*mu.x);\n        n += ls(mu,s,e);\n    }\n    mu = u;\n    for(float i = 0.; i < 8.; i++)\n    {\n        vec2 ps = (i/8.)*e+(1.-i/8.)*s;\n        mu.y -= .001*mu.x;\n        n += ls(mu,ps,ps-vec2(0,.1-i/148.));\n        mu.x -= .016;\n    }\n    \n    return clamp(n,0.,1.);\n}\n\nfloat stat(vec2 i, float t){\n    i = floor(i*256.)/65.;\n    i += t;\n    i = mod(i,vec2(5,5));\n    i*=25.;\n    i.x = dot(i,fract(i));\n    i.y *= 8.4*i.x;\n    return fract(i.x+i.y);\n}\n\nfloat randtext(vec2 u){\n    float c = 0.;\n    u += .01*sin(iTime*vec2(1,2));\n    u *= 2.;\n    u.x *= 1.3;\n    u = clamp(u,vec2(2,15)/16.,vec2(20,27-int(u.x*2.) )/16.);\n    u.x = floor(u.x*16.)/16.+fract(u.x*16.)/16.*.5-.05;\n    int cell = int(u.x*16.)+int(u.y*16.)*16;\n    vec2 cp = fract(u*16.)/16.;\n    float t = floor(10.*sin(iTime));\n    int char = int(stat(vec2(cell)*83.,t)*22.)+143;\n    vec2 charpos = vec2(char%16,char/16)/16.;\n    if(((cell+char+int(iTime))%7) == 0)\n    {\n    \tc += texture(iChannel0, cp+charpos ).r;\n    \tc *= cp.y*15.;\n    }\n    return -c*(1.-fract(iTime*6.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy,mu = uv;\n    \n    if(fract(iTime/7.) < .02)\n    {\n        uv -= .5;\n        uv *= 2.+1.5*sin(floor(iTime));\n        uv += .5;\n    }\n    \n    uv.x += .1*(.9-clamp(fract(uv.y*4.+3.*sin(iTime*.2+uv.y*2.)),.9,1.0));\n    \n    uv += .001*sin(iTime+34.*sin(iTime*vec2(.9,1)));\n    uv*=1.+.002*sin(uv.yx*53.+iTime);\n    // Time varying pixel color\n    float col = .02*fract((float(int(uv.x*64.)^int(uv.y*64.))+iTime)/8.);\n    float t = floor(iTime*10.);\n    col += .1*stat(uv,t);\n    //col += randtext(uv);\n    col += clamp(fence(uv,vec2(-.3,.3),vec2(.6,.4))*(1.-4.*length(uv-.45)),0.,1.);    \n    col += .6*ls(uv,vec2(.7,.34),vec2(.7,.7));\n    col += clamp(1.-2.*length(uv*vec2(1,.6)-vec2(.7,.43)),0.,.5);\n    col -= clamp(1.-40.*length(uv*vec2(1,.6)-vec2(.7,.44)),0.,1.)*(1.-.7*stat(vec2(0),iTime));\n    mu = uv/64.;\n    mu += .002*sin(mu.yx*256.+iTime*.3);\n    col -= .1*texture(iChannel2,.8*mu).r;\n    mu += .002*sin(mu.yx*256.+iTime);\n    col -= .1*texture(iChannel2,.5*mu).r;\n    mu = uv;\n    mu.y -= .165*mu.x;\n    mu.y +=.065;\n    t = floor(iTime*20.);\n    float tex = stat(uv*3243.,t);\n    col += 1.8*clamp(mu.y < .3 ? (1.-2.5*length(uv-vec2(.65,.45)))*tex : 0.,0.,1.);\n    \n    \n    float v = length((uv-.5)*vec2(1,.6)*1.6);\n    // Output to screen\n    fragColor = 1.-vec4(col)-v;\n}","name":"Image","description":"","type":"image"}]}