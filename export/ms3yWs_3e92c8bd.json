{"ver":"0.1","info":{"id":"ms3yWs","date":"1695651157","viewed":32,"name":"pink hex spiral v2","username":"toymaker","description":"converted trinketMage's base warp fBM to polar coordinates and made it a spiral. 6 arms because hexagons are the bestagons. ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spiral","pink","hypnotic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//** Based on \"Base warp fBM\" shader by https://www.shadertoy.com/user/trinketMage*//\nfloat num_arms = 6.0;\nfloat rotation_speed = 4.;\nfloat spiral_angle = 60.;\nfloat pattern_speed = 0.6;\nfloat warp_speed = 0.;\n\nfloat colormap_red(float x) {\n    if (x < 0.0) {\n        return 54.0 / 255.0;\n    } else if (x < 20049.0 / 82979.0) {\n        return (829.79 * x + 54.51) / 255.0;\n    } else {\n        return 1.0;\n    }\n}\n\nfloat colormap_green(float x) {\n    if (x < 20049.0 / 82979.0) {\n        return 0.0;\n    } else if (x < 327013.0 / 810990.0) {\n        return (8546482679670.0 / 10875673217.0 * x - 2064961390770.0 / 10875673217.0) / 255.0;\n    } else if (x <= 1.0) {\n        return (103806720.0 / 483977.0 * x + 19607415.0 / 483977.0) / 255.0;\n    } else {\n        return 1.0;\n    }\n}\n\nfloat colormap_blue(float x) {\n    if (x < 0.0) {\n        return 54.0 / 255.0;\n    } else if (x < 7249.0 / 82979.0) {\n        return (829.79 * x + 54.51) / 255.0;\n    } else if (x < 20049.0 / 82979.0) {\n        return 127.0 / 255.0;\n    } else if (x < 327013.0 / 810990.0) {\n        return (792.02249341361393720147485376583 * x - 64.364790735602331034989206222672) / 255.0;\n    } else {\n        return 1.0;\n    }\n}\n\nvec4 colormap(float x) {\n    return vec4(colormap_red(x), colormap_green(x), colormap_blue(x), 1.0);\n}\n\n\nfloat rand(vec2 n) { \n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n    vec2 ip = floor(p);\n    vec2 u = fract(p);\n    u = u*u*(3.0-2.0*u);\n\n    float res = mix(\n        mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n        mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n    return res*res;\n}\n\nconst mat2 mtx = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat fbm( vec2 p )\n{\n    float f = 0.0;\n\n    f += 0.500000*noise( p + pattern_speed*iTime  ); p = mtx*p*2.02;\n    f += 0.031250*noise( p ); p = mtx*p*2.01;\n    f += 0.250000*noise( p ); p = mtx*p*2.03;\n    f += 0.125000*noise( p ); p = mtx*p*2.01;\n    f += 0.062500*noise( p ); p = mtx*p*2.04;\n    f += 0.015625*noise( p + sin(pattern_speed*iTime) );\n\n    return f/0.96875;\n}\n\nfloat pattern( in vec2 p ){\n    float radius = p.x;\n    float angle = p.y;\n    return fbm( vec2(radius, angle) + fbm( vec2(radius, angle) + fbm( vec2(radius, angle) ) ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (gl_FragCoord.xy - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x);\n    float radius = length(uv); // Calculate the radius from the center\n    float angle = num_arms * atan(uv.y, uv.x); // Multiply the angle by 6 for 6 rotations per rotation\n    angle += spiral_angle*radius;\n    //sin(sin(warp_speed*iTime)*warp_speed*iTime*radius/min(iResolution.y, iResolution.x));\n    angle += rotation_speed * iTime; // Add time to the angle calculation\n    angle = mod(angle, 2. * 3.1415926);\n    float shade = pattern(vec2(radius, angle));\n    fragColor = vec4(colormap(shade).rgb, shade);\n}","name":"Image","description":"","type":"image"}]}