{"ver":"0.1","info":{"id":"Wt3yRX","date":"1609553383","viewed":105,"name":"tutorial03testing","username":"TestCoder","description":"light circles","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lightCircle(vec2 uv, float radius, vec2 position, float radiusReduction) {\n\n    float d = length(uv-position)*radiusReduction;\n\n    d = smoothstep(d,0.,radius);\n    \n    return 1.-d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float timeSlow = .5;\n    float chosenTime = iTime * timeSlow;\n    float radiusReduction = 2.;\n    float radius = .1;\n    float waveSpeed = 5.;\n    float intensityGrowRate = 100.;\n    float centralCircleRadius = radius * 2.5;\n    float wavingRadius = centralCircleRadius+sin(chosenTime*waveSpeed)/intensityGrowRate;\n\n    vec2 uv = fragCoord/iResolution.xy-.5;\n\n    uv.x *= iResolution.x/iResolution.y;\n    float centralCircle = lightCircle(uv, wavingRadius, vec2(.0,.0),radiusReduction);\n    float rightCircle = lightCircle(uv, radius, vec2(cos(chosenTime),.0),radiusReduction);\n    float leftCircle = lightCircle(uv, radius, vec2(sin(chosenTime),.0),radiusReduction);\n    float otherRightCircle = lightCircle(uv, radius, vec2(sin(chosenTime + .75),.0),radiusReduction);\n    float otherLeftCircle = lightCircle(uv, radius, vec2(cos(chosenTime + .75),.0),radiusReduction);\n\n    fragColor = vec4(\n        rightCircle\n       +leftCircle\n       +centralCircle\n       +otherLeftCircle\n       +otherLeftCircle\n       ,\n        rightCircle\n       +rightCircle\n       +centralCircle\n       +otherRightCircle\n       +otherRightCircle\n       ,\n        leftCircle\n       +leftCircle\n       +centralCircle\n       +otherRightCircle\n       +otherLeftCircle\n       ,\n        1.\n    );\n}","name":"Image","description":"","type":"image"}]}