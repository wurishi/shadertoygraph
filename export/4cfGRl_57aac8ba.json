{"ver":"0.1","info":{"id":"4cfGRl","date":"1703336014","viewed":53,"name":"hexa 0 - the grid","username":"Elsio","description":"j","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hexagonal","sting","honey","mel","abelha"],"hasliked":0,"parentid":"lfl3DM","parentname":"hexa 3 - cells & mouse behavior"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hex = .866;         //sqrt(3.) / 2.;\n\nvec2 map(vec2 p) {\n    vec2 W, h;\n    \n    p.y /= hex;\n    \n        W = vec2(round(p.y / 2.), 0);\n        h = round((p + W) / 2.) * 2. - W;\n\n        dot(abs(p - h), vec2(2, 3)) > 4. \n            ? h += sign(p - h) * vec2(1, 2)\n            : h;\n\n    h.y *= hex;\n    return h;\n}\n\nfloat hexDist(vec2 p) {\n    p = abs(p);\n    return max(dot(p, vec2(.5, hex)), p.x) - .94;\n}\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 R = iResolution.xy,\n         p = 16. * (u - .5 * R) / R.y;\n        \n    o = (1. + smoothstep(30. / R.y, .0, hexDist(p - map(p)))) \n                      * vec4(8, 8, 12, 0) / 17.;\n}\n\n\n\n\n","name":"Image","description":"","type":"image"}]}