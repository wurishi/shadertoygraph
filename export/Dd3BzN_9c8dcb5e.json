{"ver":"0.1","info":{"id":"Dd3BzN","date":"1696892823","viewed":80,"name":"mandelbulb high detail attempt","username":"SnackEater","description":"nevermind about the use of random numbers lol","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbulb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SDF(vec3 pos){\nint steps = 100;\nfloat Power = 8.;\n  vec3 z = pos;\n\tfloat dr = 1.0;\n\tfloat r = 0.0;\n\tfor (int i = 0; i < 11 ; i++) {\n\t\tr = length(z);\n        steps = i;\n\t\tif (r>4.0) break;\n\t\t\n\t\t// convert to polar coordinates\n\t\tfloat theta = acos(z.z/r);\n\t\tfloat phi = atan(z.y,z.x);\n\t\tdr =  pow( r, Power-1.0)*Power*dr + 1.0;\n\t\t\n\t\t// scale and rotate the point\n\t\tfloat zr = pow( r,Power);\n\t\ttheta = theta*Power;\n\t\tphi = phi*Power;\n\t\t\n\t\t// convert back to cartesian coordinates\n\t\tz = zr*vec3(sin(theta)*cos(phi), sin(phi)*sin(theta), cos(theta));\n\t\tz+=pos;\n\t}\n\n\treturn .5*log(r)*r/dr;\n\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    vec3 col;\n    vec3 ro = vec3(-.213,1.034,.175);\n    vec3 rd = normalize(vec3(uv,1));\n    float a = iTime * .1;\n    rd.xz *= mat2(cos(a),-sin(a),sin(a),cos(a));\n    \n    rd.yz *= mat2(cos(a),-sin(a),sin(a),cos(a));\n    float d;\n    \n    vec3 z = ro;\n    \n    float i = 0.;\n    for(i = 0.;i < 400.;i++){\n  \n    d = SDF(z);\n        z += (rd * d)/2.;\n        if(d < 0.0000001 || d > 400.)break;\n        \n    }\n    \n    if(d < 0.0000001){\n    col.r = i /(400.);\n    col.b = 40./(i);\n    }\n  //  col.rgb += light(z + vec3(randomx,randomy,randomz));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}