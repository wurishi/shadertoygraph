{"ver":"0.1","info":{"id":"WtKyzy","date":"1611255555","viewed":234,"name":"Simple planet landscape","username":"z0rg","description":":)","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["planet","landscape","abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n#define sat(a) clamp(a, 0., 1.)\n\nvec3 cols[5];\nvoid setup()\n{\n    cols[0] = vec3(74, 0, 57)/255.;\n    cols[1] = vec3(145, 10, 62)/255.;\n    cols[2] = vec3(207, 4, 55)/255.;\n    cols[3] = vec3(255, 116, 36)/255.;\n    cols[4] = vec3(245, 205, 27)/255.;\n}\n\nvec3 getCol(float v)\n{\n    float mx = 4.;\n    float curV = v*mx;\n    float cur = min(floor(curV), mx);\n    float next = min(cur+1., mx);\n    float f = curV - cur;\n    vec3 a = cols[int(cur)];\n    vec3 b = cols[int(next)];\n    return mix(a, b, sat(f));\n}\nfloat lenny(vec2 p)\n{\n    return abs(p.x)+abs(p.y);\n}\nfloat _cir(vec2 p, float r)\n{\n    return length(p)-r;\n}\n\nfloat _leave(vec2 p, vec2 sz, float t)\n{\n    p.x /= abs(p.y*5.);\n    return max(max(max(p.x-sin(p.y*25.+t+.2)*sz.x*2., -(p.x+sz.x-sin(p.y*25.+t)*sz.x*2.)), p.y), -p.y-sz.y);\n}\n\nvec2 _min(vec2 a, vec2 b)\n{\n    if (a.x<b.x)\n        return a;\n    return b;\n}\n\nvec2 _bush(vec2 p, int cnt, float sz)\n{\n    float mid = sz *.5;\n    vec2 acc = vec2(1., 0.);\n    \n    for (int i = 0; i < cnt; ++i)\n    {\n        float f = (float(i)-float(cnt)*.5)/(float(cnt)*.5);\n        acc = _min(acc, vec2(_leave(p+vec2(f*sz, 0.+abs(f)*.1+.01*sin(f*15.)), vec2(.005, .2-abs(f)*.1), float(i)+iTime*.25), float(i)));\n    }\n    return acc;\n}\n\nvec3 rdr(vec2 uv)\n{\n    vec3 col;// = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float shp = 400.;\n    \n    col = vec3(.2)*(1.-sat(abs(uv.y*2.-.5)));\n    col += pow(texture(iChannel0, uv*5.).x, iResolution.x*.01);\n    \n    col += pow(1.-sat(lenny((uv-vec2(0.,.25))*vec2(3.,8.))), 5.);\n    \n    float planetY = .45;\n    col = mix(col, mix(vec3(0.), vec3(.25), pow(abs((uv.y+planetY)*2.), .5)), 1.-sat(_cir(uv-vec2(0.,-planetY), .45)*shp));\n    \n    vec2 mainBush = _bush(uv-vec2(0., .15), 10, .05);\n    col = mix(col, vec3(sin(mainBush.y*20.+iTime*.25)*.5+.5)*.25, 1.-sat(mainBush.x*shp));\n    \n    for (int i = 0; i < 16; ++i)\n    {\n        vec2 miniBush = _bush(uv*3.-vec2(float(i)*.25-1.15, sin(float(i)))*.25+.25, 10, 0.1);\n        col = mix(col, vec3(sin(miniBush.y*20.+iTime*.25)*.5+.5)*.25, (1.-sat(miniBush.x*shp))*.25);\n    }\n    \n   col += vec3(.05)*texture(iChannel0, vec2(iTime*5.+uv*3.)).x;\n    \n    col = getCol(col.x*3.);\n    \n    col = pow(col, vec3(1.45));\n    \n    col *= .01+sat(1.-sat((abs(uv.x)-.25)*shp));\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-vec2(.5)*iResolution.xy)/iResolution.xx;\n    uv -= vec2(0.,-.1);\n    setup();\n    vec3 col = rdr(uv);\n    \n    col = pow(col, vec3(.45));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}