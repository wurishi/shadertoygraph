{"ver":"0.1","info":{"id":"fdK3Ry","date":"1631748232","viewed":84,"name":"camera & color","username":"shunyadezain","description":"Adding colors & a camera","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// references: \n// https://gaz.hateblo.jp/entry/2019/05/11/215943\n// https://gaz.hateblo.jp/entry/2019/05/11/225351\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nconst float speed = 2.;\n\nfloat deSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n\n\nfloat de1(vec3 p)\n{\n    float h=sin(iTime)*.5+.5;\n    p.x-=clamp(p.x,-h,h);\n    p.zy *= rot(iTime*speed);\n    return length(vec2(length(p.xy)- 1.,p.z))-.5;\n}\n\n\nfloat de2(vec3 p){\n\n    vec3 bp = p - vec3(0,0,sin(iTime*speed)*5.);\n    \n    return deSphere(bp, .45);\n}\n\nfloat map(vec3 p)\n{\n    return min(de1(p), de2(p));\n}\n\nvec3 doColor(vec3 p)\n{\n    const float precis = 0.01;\n    if (de1(p)<precis) return vec3(0,.3,.3);\n    if (de2(p)<precis) return vec3(2,.4,.1);\n    return vec3(1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec3 ro=vec3(0,0,sin(iTime) * 3. -8.);\n    ro.zx*=rot(iTime*0.5);\n    vec3 rd=normalize(vec3(uv,2));\n    \n    //camera\n    vec3 ta=vec3(0,0,0); \n    vec3 w=normalize(ta-ro);\n    vec3 u=normalize(cross(w,vec3(0,1,0)));\n    vec3 v=cross(u,w);\n    mat3 lookat=mat3(u,v,w);\n    rd=lookat*rd;\n    //\n    \n    float d,i,t=0.0;\n    vec3 p=ro;\n    vec3 col=vec3(0);\n    for(i=1.0;i>0.0;i-=1./50.0)\n    {\n        t+=d=map(p);\n        if(d<0.001)\n        {\n            col = doColor(p);\n            col /=i*i*i; \n            break;\n        }\n        p+=rd*d;\n    }\n    fragColor=vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}