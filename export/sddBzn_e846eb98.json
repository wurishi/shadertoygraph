{"ver":"0.1","info":{"id":"sddBzn","date":"1655954418","viewed":113,"name":"函数图形展示","username":"dongmo","description":"坐标轴+函数图形展示；\n替换func方法内表达式更新展示图形;\n暂时无法在画布上增加函数名；","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grid","line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\nfloat sdCircle(vec2 uv, float r) {\n    return length(uv) - r;\n}\n\nvec2 fixUV(vec2 c) {\n    return 3. * (2.0 * c - iResolution.xy) / min(iResolution.x, iResolution.y);\n}\n\nvoid GridPlane(vec2 uv, inout vec3 col) {\n    col = vec3(0.6);\n    vec2 grid = floor(mod(uv, 2.));\n    if(grid.x == grid.y) {\n        col = vec3(0.9);\n    }\n    col = mix(col, vec3(0., 1., 0.), smoothstep(1.1 * fwidth(uv.x), fwidth(uv.x), abs(uv.x)) +\n        smoothstep(1.1 * fwidth(uv.y), fwidth(uv.y), abs(uv.y)));\n}\n\nfloat func(float x) {\n    //修改此处方法，更新画布图形\n    return sin(x);\n}\n\nfloat plotFunc(vec2 uv) {\n    float f = func(uv.x);\n    return smoothstep(f - .01, f + .01, uv.y);\n}\n\n//每个像素进行4次采样\n#define AA 4\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    float w = 1.0 / max(iResolution.x, iResolution.y);\n    vec2 uv = fixUV(fragCoord);\n\n    // Time varying pixel color\n    vec3 col = vec3(1.0);\n    GridPlane(uv, col);\n\n    float count = 0.;\n    for(int m = 0; m < AA; m++) {\n        for(int n = 0; n < AA; n++) {\n            /**\n            **   0.5 * float(AA) / float(AA) * 2.\n            **  \n            */\n            vec2 offset = (vec2(float(m), float(n)) - 0.5 * float(AA) / float(AA) * 2.);\n            count += plotFunc(fixUV(fragCoord + offset));\n        }\n    }\n\n    if(count > float(AA * AA) / 2.) {\n        count = float(AA * AA) - count;\n    }\n    count = count * 2. / float(AA * AA);\n\n    col = mix(col, vec3(1., 0., 0.), count);\n\n    float cir = smoothstep(w, -w, sdCircle(uv, 0.05));\n    col = mix(col, vec3(0.0, 0.5, 0.7), cir);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}