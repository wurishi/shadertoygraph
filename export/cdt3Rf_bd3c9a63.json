{"ver":"0.1","info":{"id":"cdt3Rf","date":"1677623719","viewed":110,"name":"Simple Droste Effect","username":"RayWorld","description":"A simple loop to have a parallelogram frame contain itself","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["droste","recursion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define uvBL vec2(0.3,0.3)\n#define Transform mat2(0.5,0.0,0.0,0.5)\n#define selfInsertNumber 8\n\nbool inParallelogram(vec2 testVec, vec2 bottomLeft, mat2 parallelogram){\n    bool ret = false;\n    vec2 transformedTestVec = inverse(parallelogram) * (testVec - bottomLeft);\n    if (0.0 <= transformedTestVec.x && transformedTestVec.x <= 1.0 && 0.0 <= transformedTestVec.y && transformedTestVec.y <= 1.0) {\n        ret = true;\n    }\n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Droste Effect loop\n    for (int i = 0; i < selfInsertNumber; i++) {\n        vec2 newUv = inverse(Transform) * (uv - uvBL);\n        if (0.0 <= newUv.x && newUv.x <= 1.0 && 0.0 <= newUv.y && newUv.y <= 1.0) {\n            uv = newUv;\n        } else {\n            break;\n        }\n    }\n    vec3 col = vec3(uv, 0.0);\n    //frame\n    if (inParallelogram(uv,vec2(0.29,0.29),mat2(0.52,0.0,0.0,0.52))) {\n        col = vec3(0.7,0.4,0.1);\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}