{"ver":"0.1","info":{"id":"fsjXDt","date":"1621293294","viewed":174,"name":"Hot Inferno","username":"tigrou","description":"Inspired by hell from Exceed (2005)","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["intro","cube","voxel","256b"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI               3.141592653\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float t = iTime * 0.05;\n    vec2 uv = (fragCoord / iResolution.xy) - vec2(0.5, 0.5);\n    uv *= vec2(2.3, 1.3);\n\n    vec3 o = vec3(10.01) + vec3(0, t * 50.0, 0.0);\n    vec3 a;\n\n    if(iMouse.z < 1.0)\n    {\n        a = normalize(vec3(sin(t * 11.0), cos(t * 9.0), sin(t * 7.0)));        \n    }    \n    else\n    {\n        vec2 m = (iMouse.xy / iResolution.xy - vec2(0.5, 0.5)) * vec2(8.0, 6.0);        \n        m.y = clamp(m.y, -PI/2.0 + 0.01, PI/2.0 - 0.01);        \n        a = vec3(0.0, 1.0, 0.0);\n        a.yz *= rot(m.y);\n        a.xy *= rot(m.x);\n    }\n\n    vec3 u = vec3(0.0, 0.0, 1.0);\n    vec3 c = normalize(cross(a, u));\n    vec3 b = normalize(cross(a, c));\n\n    vec3 d = a + b * uv.y + c * uv.x;\n    vec3 p = floor(o);\n\n    vec3 tmax = (p + step(vec3(0.0), d) - o) / d;\n    vec3 delta = 1.0 / abs(d);\n    vec3 step = sign(d);\n\n    vec3 oldp;\n    float k = 0.0;\n\n    int n;\n    for(n = 0 ; n < 250; n++)\n    {\n        if (tmax.x < tmax.y && tmax.x < tmax.z)\n        {\n            tmax.x += delta.x;\n            p.x += step.x;\n        }\n        else if (tmax.y < tmax.x && tmax.y < tmax.z)\n        {\n            tmax.y += delta.y;\n            p.y += step.y;\n        }\n        else\n        {\n            tmax.z += delta.z;\n            p.z += step.z;\n        }\n\n        if (scene(p))\n        {\n            k = 0.0;\n            break;\n        }\n\n        if (scene(p + 18.0))\n        {\n            k = 1.0;\n            break;\n        }\n\n        oldp = p;\n    }\n\n    float s = dot(abs(p - oldp), vec3(0.4, 0.2, 0.0));\n    fragColor = palette(s, float(n), k);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"bool scene(vec3 p)\n{\n    vec3 d = mod(abs(p) + 18.0, 36.0) - 18.0;\n    return length(d) > 24.0;\n}\n\nvec4 palette(float s, float n, float k)\n{\n    float r, g, b;\n    float c = (1.0 - s) - n * 0.01;\n    if (c > 0.5)\n    {\n        r = 1.0;\n        g = (c - 0.5) * 2.0;\n    }\n    else\n    {\n        r = c * 2.0;\n        g = 0.0;\n    }\n    \n    if (k == 0.0) { b = max(c, 0.0) / 2.0; }\n    else b = 0.0;\n    b += n / 512.0;\n\n    return vec4(r, g, b, 1.0);\n}\n\nmat2 rot( in float a ) \n{\n\tfloat c = cos(a);\n    float s = sin(a);\n    return mat2(c,s,-s,c);\t\n}","name":"Common","description":"","type":"common"}]}