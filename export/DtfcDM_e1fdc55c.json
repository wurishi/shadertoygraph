{"ver":"0.1","info":{"id":"DtfcDM","date":"1690801352","viewed":41,"name":"CircleRGB","username":"BuCiuPi","description":"circle Learn","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 pos,  float radius, float blurVal){\n    float d = length(uv - pos);\n    float c = d ;\n    \n    // colormap\n    c = smoothstep(radius, radius - blurVal , d);\n    return c;\n}\n\nfloat Smiley(vec2 uv, vec2 pos, float size, float blurVal){\n    \n    uv -= pos;  //translationg coordinate system\n    uv /= size; // scalling coordinate system\n    \n    float col;\n    \n    float faceRadius = .3;\n    col = Circle(uv, vec2(0), faceRadius, blurVal);\n    \n    // draw eye\n    col -= Circle(uv, vec2(.1,.15), .05, blurVal);\n    col -= Circle(uv, vec2(-.1,.15), .05, blurVal);\n    \n    vec2 smilePos = vec2(0.0, 0.0);\n    float smileRadius = .2;\n    float smile = Circle(uv, smilePos, smileRadius, blurVal) - Circle(uv, smilePos + vec2(0.0, 0.05), smileRadius, blurVal);\n    \n    col -= clamp(smile, 0.0, 1.0);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    // Get uv Center\n    uv -= .5;\n    \n    // aspect ratio uv\n    float asRatio = iResolution.x/iResolution.y;\n    uv.x *= asRatio;\n    \n    \n    float radius = 1.0;\n    float blurVal = .01;\n    vec3 col = vec3(1.0, 1.0, 1.0);\n    \n    float sinTime = sin(iTime);\n    float timeIntensity = .01;\n    \n    float tSmile = Smiley(uv, normalize(vec2(0.0, 1.0)) * timeIntensity * sinTime , radius, blurVal);\n    float lSmile = Smiley(uv, normalize(vec2(-1.0, -1.0)) * timeIntensity * sinTime , radius, blurVal);\n    float rSmile = Smiley(uv, normalize(vec2(1.0, -1.0)) * timeIntensity * sinTime , radius, blurVal);\n    \n    col *= vec3(tSmile, lSmile, rSmile );\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}