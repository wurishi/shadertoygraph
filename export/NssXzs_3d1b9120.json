{"ver":"0.1","info":{"id":"NssXzs","date":"1619136896","viewed":287,"name":"My First Fluid Simulation","username":"oneshade","description":"Learning from: [url=https://wyattflanders.com/MeAndMyNeighborhood.pdf]https://wyattflanders.com/MeAndMyNeighborhood.pdf[/url]\nClick with the mouse to interact with the fluid.","likes":14,"published":3,"flags":32,"usePreview":0,"tags":["simulation","fluid","first"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float k = length(texture(iChannel0, fragCoord / iResolution.xy).xy);\n    fragColor = vec4(sin(3.0 * k) - sin(k), sin(3.0 * k) * cos(k), sin(k), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 load(in vec2 pos) {\n    vec2 approxEnergy = texture(iChannel0, pos / iResolution.xy).xy;\n    vec2 approxPos = pos - approxEnergy;\n    return texture(iChannel0, approxPos / iResolution.xy);\n}\n\nvoid mainImage(out vec4 energy, in vec2 me) {\n    energy = vec4(0.0, 0.0, 0.0, length(texture(iChannel1, me / iResolution.xy).rgb));\n    if (iFrame > 0) {\n        vec4 rn = load(me + vec2(1.0, 0.0)); // Right neighbor\n        vec4 ln = load(me - vec2(1.0, 0.0)); // Left neighbor\n        vec4 un = load(me + vec2(0.0, 1.0)); // Up neighbor\n        vec4 dn = load(me - vec2(0.0, 1.0)); // Down neighbor\n        energy = load(me);\n\n        energy.b = (ln.b + rn.b + dn.b + un.b) * 0.25;\n\n        vec2 force = vec2(ln.b - rn.b, dn.b - un.b);\n        energy.xy += force * 0.25;\n\n        energy.b += (ln.x - rn.x + dn.y - un.y) * 0.25;\n\n        energy.y -= energy.w / 400.0;\n        energy.w += (ln.x * ln.w - rn.x * rn.w + dn.y * dn.w - un.y * un.w) * 0.25;\n\n        if (iMouse.z > 0.0 && length(iMouse.xy - me) < 25.0) {\n            energy.w = 1.0;\n        }\n\n        if (me.x < 10.0 || me.x > iResolution.x - 10.0 || me.y < 10.0 || me.y > iResolution.y - 10.0) {\n            energy.xy = vec2(0.0);\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}