{"ver":"0.1","info":{"id":"3tySD3","date":"1675347533","viewed":45,"name":"Midterm 10 - Tile","username":"santreal","description":"Tile","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, float r, vec2 pos){\n    uv /=pos;\n    \n    float d = length(uv);\n    \n    float c = smoothstep(r, r-.02, d);\n    return c;   \n}\n\nfloat Noise21(vec2 p)\n{\n    p = fract (p * vec2 (234.34, 435.345));\n    p += dot(p,p +34.23);\n    \n    return fract(p.x * p.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5 *iResolution.xy)/iResolution.y;\n\n    // Time varying pixel color\n   \tvec3 col = vec3(0);\n    uv *= 5.;\n    \n    vec2 gv = fract(uv) - .5;\n    vec2 id = floor(uv);\n    \n    uv += iTime * 4.;\n\tfloat n = Noise21(id);\n  \tif (n<.5) \n    {\n\t\tuv.x *= -1.;\n\t}\n    float d = abs(abs(gv.x+gv.y)-.5);\n\n    float tiles = circle(gv,d,vec2(sin(iTime)*2.,cos(iTime) * .2));\n    tiles += circle(gv, d,vec2(cos(iTime)*.2,sin(iTime) * 2.));\n    \n  \n    col += tiles;\n    col += cos(vec3(1,1,0));\n\t\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}