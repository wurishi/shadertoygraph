{"ver":"0.1","info":{"id":"stKyDK","date":"1722701393","viewed":9,"name":"TBOS_Shapes5","username":"nako","description":"The Book of Shades\nhttps://thebookofshaders.com/07/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nfloat fillPolygon(int N, vec2 center, vec2 st, float angle_offset){\n    float a = atan(st.y-center.y, st.x-center.x)+PI+angle_offset;\n    float r = 2.0*PI/float(N);\n    \n    return cos(floor(0.5+a/r)*r-a)*distance(st, center);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    st = st*2.0 - 1.0;\n    \n    int N = 3;\n    float d;\n    vec3 col;\n    \n    /*\n    float a = atan(st.y, st.x)+PI;\n    float r = 2.0*PI/float(N);\n    \n    d= cos(floor(a/r+0.5)*r-a);\n    d = cos(floor(.5+a/r)*r-a)*length(st);\n    */\n    \n    float d1 = fillPolygon(N, vec2(0, 0), st, iTime);\n    float d2 = fillPolygon(N*2, .8*vec2(sin(iTime*3.), cos(iTime*3.)), st, iTime*5.);\n    \n    d = min(d1, d2);\n    col = vec3(1.0-smoothstep(.4,.41,d));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}