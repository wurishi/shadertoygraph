{"ver":"0.1","info":{"id":"fsBXRD","date":"1619713843","viewed":448,"name":"20210430_CLUB-CAVE-04","username":"FMS_Cat","description":"Originally written in Bonzomatic, in 45 (or 55?) minutes\n\nhttps://twitter.com/CLUBCAVE_/status/1386157833733824516\n","likes":27,"published":1,"flags":32,"usePreview":1,"tags":["3d","raymarching","fractal","livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=fragCoord.xy/iResolution.xy;\n  fragColor=vec4(texture(iChannel0,uv).xyz,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//    ____ ____          _______\n//   /    |_/ /_____    /  / / /\n//  /  / / /   _/ _ |   / /_  _/\n// /__/_/_/_/|_|___/___/_/ /_/   Live Coding <3\n//                /___/\n\n#define fs(i) (fract(sin((i)*114.514)*1919.810))\n#define lofi(i,j) (floor((i)/(j))*(j))\n#define saturate(i) (clamp((i),0.,1.))\n\nconst float PI=3.14159265;\nconst float TAU=PI*2.;\n\nfloat time;\nfloat seed;\nfloat random(){\n  seed=fs(seed*9.0);\n  return seed;\n}\n\nvec3 uniformSphere(vec2 u){\n  float p=u.x*TAU;\n  float t=acos(u.y*2.-1.);\n  return vec3(cos(p)*sin(t),cos(t),sin(p)*sin(t));\n}\n\nvec3 randomHemisphere(vec3 n){\n  vec3 d=uniformSphere(vec2(random(),random()));\n  return dot(d,n)<0.?-d:d;\n}\n\nmat2 rot2d(float t){\n  return mat2(cos(t),sin(t),-sin(t),cos(t));\n}\n\nfloat ease(float t){\n  return 0.5+0.5*cos(PI*exp(-5.0*t));\n}\n\nfloat sdbox(vec3 p,vec3 s){\n  vec3 d=abs(p)-s;\n  return min(0.,max(d.x,max(d.y,d.z)))+length(max(vec3(0),d));\n}\n\nmat3 orthBas(vec3 d){\n  vec3 z=normalize(d);\n  vec3 x=normalize(cross(vec3(0,1,0),z));\n  vec3 y=cross(z,x);\n  return mat3(x,y,z);\n}\n\nvec3 ifs(vec3 p,vec3 rot,vec3 shift,vec3 haha){\n  vec3 s=shift;\n  mat3 b=orthBas(rot);\n  for(int i=0;i<7;i++){\n    haha*=b;\n    p+=haha;\n    haha*=.5;\n    p=abs(p)-abs(s);\n    s*=b;\n    s*=.5;\n    p.xy=p.x<p.y?p.yx:p.xy;\n    p.yz=p.y<p.z?p.zy:p.yz;\n  }\n  return p;\n}\n\nvec3 v3motion(float t,vec2 s){\n  float ti=floor(t);\n  vec3 a=uniformSphere(fs(ti+s));\n  vec3 b=uniformSphere(fs(ti+1.+s));\n  return mix(a,b,ease(fract(t)));\n}\n\nvec4 map(vec3 p){\n  vec3 pt=p;\n  pt.z-=5.0*time;\n  float layer=lofi(pt.z+0.5,1.0);\n  pt.z-=layer;\n  float beat=time/60.0*140.0;\n  float rot=ease(fract(beat))+floor(beat);\n  float mode=smoothstep(-.5,.5,sin(time+0.2*pt.y));\n  float clampbox=sdbox(pt,vec3(1E9,1E9,mix(.4,.1,mode)));\n  clampbox=max(clampbox,-sdbox(pt,vec3(1.,.5,1E9)));\n  vec3 ifsrot=0.5+0.5*v3motion(beat,vec2(1.17,2.16)+.47*layer);\n  vec3 ifsshift=3.+2.*v3motion(beat,vec2(3.67,3.26)+.31*layer);\n  vec3 ifshaha=mix(vec3(0.2,0.5,0.8),vec3(0),mode);\n  pt=ifs(pt,ifsrot,ifsshift,ifshaha);\n  pt=mod(pt-.5,1.)-.5;\n  float size=.2+.2*v3motion(beat,vec2(4.67,3.16)+.57*layer).x;\n  size*=mix(0.5,0.5,mode);\n  float d=sdbox(pt,vec3(size));\n  d=max(d,clampbox);\n  d=mix(d,0.02+abs(d),mode);\n  float ph=mode*exp(-30.0*d);\n  return vec4(d,1,ph,mode);\n}\n\nvec3 nMap(vec3 p,vec2 d){\n  return normalize(vec3(\n    map(p+d.yxx).x-map(p-d.yxx).x,\n    map(p+d.xyx).x-map(p-d.xyx).x,\n    map(p+d.xxy).x-map(p-d.xxy).x\n  ));\n}\n\nfloat aoMap(vec3 p,vec3 n){\n  float accum=0.0;\n  for(int i=0;i<20;i++){\n    vec3 pt=p+(0.04+0.04*float(i))*randomHemisphere(n);\n    float d=map(pt).x;\n    accum+=smoothstep(0.02,0.0,d)/20.;\n  }\n  return 1.0-2.0*sqrt(accum);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv=fragCoord.xy/iResolution.xy;\n  vec2 p=(fragCoord.xy*2.-iResolution.xy)/iResolution.y;\n  \n  time=iTime;\n  seed=8.*texture(iChannel1,p).x+fract(time);\n  time+=0.05*random();\n  \n  vec3 col=vec3(0);\n  \n  vec3 ro=vec3(0,0,3);\n  vec3 rd=normalize(vec3(p,-1.+0.4*length(p)));\n  \n  float rl=1E-2;\n  vec3 rp=ro+rd*rl;\n  vec4 isect;\n  \n  float accum=0.;\n  \n  for(int i=0;i<69;i++){//nice\n    isect=map(rp);\n    accum+=isect.z*exp(-0.1*rl)/69.0;\n    rl+=.7*isect.x;\n    rp=ro+rd*rl;\n  }\n  \n  if(isect.x<1E-2){\n    vec3 n=nMap(rp,vec2(0,1E-3));\n    float ao=aoMap(rp,n);\n    accum=ao*exp(-.5*rl);\n  }\n  \n  vec2 off=vec2(fs(p.y+iTime)*2.-1.,0);\n  off.x=exp(-30.0*abs(off.x))*sign(off.x);\n  off.x*=0.1;\n  \n  for(int i=0;i<20;i++){\n    float ph=float(i)/20.;\n    float z=1.0-0.3*ph*length(p);\n    vec3 amp=vec3(1)/20.;\n    amp*=saturate(2.-abs(ph*6.-vec3(1,3,5)))*3.;\n    float tex=texture(iChannel0,z*(uv+ph*off-0.5)+0.5).w;\n    col+=mix(\n      vec3(tex),\n      2.0*tex*(1.0+sin(-20.0*tex+3.0+vec3(0,2,4))),\n      isect.w\n    )*amp;\n    col*=1.0+0.2*sin(PI*isect.w);\n  }\n  \n  col=pow(col,vec3(.4545));\n  col*=1.0-0.2*length(p);\n  col*=1.0+0.1*sin(500.0*p.y+vec3(0,2,4));\n  col=vec3(\n    smoothstep(0.02,0.8,col.x),\n    smoothstep(-0.12,1.02,col.y),\n    smoothstep(-0.3,1.2,col.z)\n  );\n  \n  fragColor=vec4(col,accum);\n}","name":"Buffer A","description":"","type":"buffer"}]}