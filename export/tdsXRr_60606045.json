{"ver":"0.1","info":{"id":"tdsXRr","date":"1550518796","viewed":1362,"name":"Simple 3D Sphere","username":"synergyseeker1","description":"A simple 3D sphere made from 2 radial lights, distance fields. cropped at circle distance.","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["3d","colors","fake","lighting","sphere","lights","artofshaders","cirlce"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// shading 3D sphere\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){   \n\t// normailze and adjsut for ratio\n    vec2 res = iResolution.xy,\n    uv = (fragCoord*2.0-res ) / res.y;\n\tuv*=.7;\n    //initilize colors\n\tvec4 color1 = vec4(.4,.6,.7,1.0);\n    vec4 color2 = vec4(.9,.7,.6,1.0);\n    \n    // shade with 2 faux lights\n    color1*=.8-distance(uv,vec2(-.1,-.1));\n    color2*=.6-distance(uv,vec2(.25,.3));\n \tvec4 sphere = color1+color2 ;\n    \n    //limit edges to circle shape\n    float d = distance(uv, vec2(0.0));\n    // smooth edges\n\tfloat t =1.0- smoothstep(.6,.61, d);\n    // apply shape to colors\n    sphere*=t+sin(iTime)*.2*uv.y;\n    \n    //output final color, and brighten\n\tfragColor = sphere*1.6;\n    \n}\n","name":"Image","description":"","type":"image"}]}