{"ver":"0.1","info":{"id":"ddtfD2","date":"1697668613","viewed":53,"name":"KR - Hidden Complexity 2","username":"kallanreed","description":"Added a smoothstep to my previous shader here: https://www.shadertoy.com/view/csdBWj\nI just love the bloom effect it gives the output.\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cycle","loop","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pal(float i)\n{\n    vec3 a = vec3(0.953, 0.508, 0.344);\n    vec3 b = vec3(0.669, 0.549, 0.979);\n    vec3 c = vec3(0.106, 0.338, 1.057);\n    vec3 d = vec3(5.044, 5.470, 3.429);\n    \n    return a + b * cos(c * i + d);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 final = vec3(0.0);\n      \n    for (float i = 0.0; i < 3.0; i++)\n    {\n        uv = fract(uv * 1.2 * -(cos(0.23 * iTime) + sin(0.17 * iTime))) - 0.5;\n        vec4 ch0 = texture(iChannel0, uv0);\n\n        float d = length(uv) * exp(-length(uv0)) / 0.77;\n        vec3 col = pal(length(uv0) + (i * 0.6) - iTime * 0.73);\n\n        d = cos(d * 8.0 + sin(1.23 * iTime) * 1.7);\n        d = abs(d);\n    \n        d = 0.02 / d;\n        d = smoothstep(0.0, 0.25 + abs(sin(0.4 * iTime) * cos(0.3 * iTime)), d);\n        final += col * d;\n    }\n    \n    // Output to screen\n    fragColor = vec4(final, 1.0);\n}","name":"Image","description":"","type":"image"}]}