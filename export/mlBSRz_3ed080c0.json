{"ver":"0.1","info":{"id":"mlBSRz","date":"1675564903","viewed":89,"name":"Mandelbrot set orbits","username":"0something","description":"Click/drag your mouse to view the orbits of points on the Mandelbrot set.\n(works while paused)\nIf you have any comments on how I can make my code more efficient, please let me know.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //init\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 muv = vec2(float(iMouse.x),float(iMouse.y))/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    muv.x *= iResolution.x/iResolution.y;\n    \n    float width = iResolution.x;\n    float height = iResolution.y;\n    \n    float x = 0.;\n    float y = 0.;\n            \n    float _x = uv.x*2. - 2.;\n    float _y = uv.y*2. - 1.;\n\n    //draw mset\n    int iteration = 0;\n    int max_iteration = 150;\n    while ( (x*x + y*y < 4000.) && (iteration < max_iteration) )\n    {\n        float xtemp = x*x - y*y + _x;\n        y = 2.*x*y + _y;\n        x = xtemp;\n        iteration++;\n    }\n    \n    float col = 1. - float(iteration)/float(max_iteration);\n    \n    //cool thumbnail animation\n    if (muv == vec2(0.)) {\n        muv.x = 0.22*(1.-cos(0.75*iTime))*cos(0.75*iTime) + 1.12;\n        muv.y = 0.22*(1.-cos(0.75*iTime))*sin(0.75*iTime) + 0.5;\n    }\n    \n    //mouse point\n    float dist = clamp(pow(length(70.*uv - 70.*muv),20.),0.,1.);\n    \n    float mx = 0.;\n    float my = 0.;\n    \n    float _mx = muv.x*2. - 2.;\n    float _my = muv.y*2. - 1.;\n    \n    \n    //iterate over orbit\n    int miteration = 0;\n    while ( (mx*mx + my*my < 4000.) && (miteration < 500) )\n    {\n        float xtemp = mx*mx - my*my + _mx;\n        my = 2.*mx*my + _my;\n        mx = xtemp;\n        dist *= clamp(pow(length(70.*vec2(uv.x * 2. - 2.,uv.y * 2. - 1.) - 70.*vec2(mx,my)),20.),0.,1.);\n        miteration++;\n    }\n    \n    col = mix(col,1.-col,dist);\n    \n    fragColor = vec4(vec3(col), 1.);\n}","name":"Image","description":"","type":"image"}]}