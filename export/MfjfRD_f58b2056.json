{"ver":"0.1","info":{"id":"MfjfRD","date":"1724750507","viewed":42,"name":"Sliced Rings Effect vehgrvriufhe","username":"jy483752","description":"couldnt get the anti? aliasing? the jagged thing? to look nice, not sure how to even fix it so my current solution is just blur on the edge of the rings. which seems to help a tiny bit?","likes":1,"published":1,"flags":32,"usePreview":1,"tags":["w"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nInspired by \"Circles\" by Paola\nhttps://openprocessing.org/sketch/2321245\n\neffect is done at Buffer A, main image here is some post processing\nthat didn't even do a good job at fixing the jagged edges :/\n*/\n\nconst float REPEAT = 8.;\n\nmat2 rot(float a){\n    return mat2(vec2(cos(a),-sin(a)),vec2(sin(a),cos(a)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float px = 1./iResolution.x;\n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 m = 3.*(iMouse.xy/iResolution.xy-.5);\n    \n    float edge = abs(fract(length(uv)*m.x*REPEAT)-.5)*2.;\n    \n    uv.x /= iResolution.x/iResolution.y;\n    uv += .5;\n    vec3 col = texture(iChannel0, uv).rgb;\n    vec3 sum=texture(iChannel0, uv+vec2(1,0)*px).rgb+\n    texture(iChannel0, uv+vec2(0,1)*px).rgb+\n    texture(iChannel0, uv+vec2(-1,0)*px).rgb+\n    texture(iChannel0, uv+vec2(0,-1)*px).rgb;\n    col = mix(col, sum/4., smoothstep(.9, 1.,edge));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float REPEAT = 8.;\n\nmat2 rot(float a){\n    return mat2(vec2(cos(a),-sin(a)),vec2(sin(a),cos(a)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float px = 1./iResolution.x;\n    \n    vec2 distorted = uv;\n    distorted -= .5;\n    distorted.x *= iResolution.x/iResolution.y;\n    \n    vec2 m = 3.*(iMouse.xy/iResolution.xy-.5);\n    \n    float id = floor(length(distorted)*m.x*REPEAT);\n    distorted*=rot(id*m.y);\n    \n    distorted.x /= iResolution.x/iResolution.y;\n    distorted += .5;\n    vec3 col = texture(iChannel0, distorted).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}