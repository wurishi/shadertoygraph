{"ver":"0.1","info":{"id":"sdKSzw","date":"1634438659","viewed":91,"name":"Glitchy cross","username":"nkaretnikov","description":"Messing around with the line equation.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","line","glitch","cross","parametric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Public domain.\n\n// https://www.wolframalpha.com/input/?i=line\n// x(t) = b * t\n// y(t) = a * (-t) - c/b\nvec2 Line(float a, float b, float c, float t)\n{\n    float x = b * t;\n    float y = a * (-t) - c / b;\n    \n    return vec2(x, y);\n}\n\nvec4 Cross(vec4 col, vec2 uv)\n{\n    float a = cos(iTime);\n    float b = sin(iTime * a);\n    float c = cos(iTime * b);\n    float t = sin(iTime * a * b * c);    \n    \n    vec2 line = (Line(a, b, c, t) - .5) * .1;\n    float delta = a * b * c * t;\n    \n    if (abs(uv.x - line.x) < delta ||\n        abs(uv.y - line.y) < delta)\n    {\n        col = vec4(\n            sin(iTime * a),\n            cos(iTime * b),\n            sin(iTime * c),\n            cos(iTime * t * 700.));\n    }\n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec4 col = vec4(\n        sin(iTime * 4.),\n        cos(iTime * 5.),\n        sin(iTime * 6.),\n        cos(iTime * 700.));\n    \n    for(int i = 0; i <= 7; i++) {\n        col += Cross(\n            col,\n            uv + sin(iTime * 2.) * cos(iTime * 4. * float(i)));\n    }\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}