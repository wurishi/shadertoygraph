{"ver":"0.1","info":{"id":"Nl3XzB","date":"1639303066","viewed":565,"name":"TDF2021 ShaderShowdown Final","username":"phi16","description":"3\n\nShoutouts to 0b5vr, the inviter!\n\n[url]https://youtu.be/bp37xTVNRrM?t=16031[/url]","likes":26,"published":1,"flags":32,"usePreview":0,"tags":["shadershowdown"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define LOOP 1\n// original is 16\n\nfloat time = 0.;\nvec2 res = vec2(0.);\n\nfloat rand(vec2 p) {\n  return fract(sin(dot(p,vec2(1,1.001)))*10000.);\n}\n\nfloat map(vec3 o) {\n  if(distance(o, vec3(time*2.,20,time*4.)) < 10.) return 0.;\n    ivec3 cd = ivec3(o.zxy);\n  if(cd.z < 0) return 1.;\n  if(cd.z > 63) cd.z = 63;\n    int cdz = cd.z-1;\n    ivec2 tc = cd.xy%64 + ivec2(cdz%8,cdz/8)*64;\n return texture(iChannel0, (vec2(tc)+0.5)/res).a;\n}\n\nbool castf(vec3 o, vec3 d, out vec3 ii, out vec3 ir, out vec3 tw, out float e) {\n  vec3 u = floor(o);\n  vec3 s = sign(d);\n  d = abs(d);\n  vec3 r = (o-u-0.5)*s+0.5;\n  for(int i=0;i<100;i++) {\n    float t = map(u);\n    if(t > 0.) {\n      e = t;\n      ii = u;\n      ir = (r-0.5)*s;\n      return true;\n    }\n    vec3 l = (1.-r)/d;\n    vec3 m = step(l,l.yzx) * step(l,l.zxy);\n    tw = -s*m;\n    r += d*length(l*m) - m;\n    u += s*m;\n  }\n  return false;\n}\nbool castf2(vec3 o, vec3 d, out vec3 ii, out vec3 ir, out vec3 tw, out float e) {\n  vec3 u = floor(o);\n  vec3 s = sign(d);\n  d = abs(d);\n  vec3 r = (o-u-0.5)*s+0.5;\n  for(int i=0;i<40;i++) {\n    float t = map(u);\n    if(t > 0.) {\n      e = t;\n      ii = u;\n      ir = (r-0.5)*s;\n      return true;\n    }\n    vec3 l = (1.-r)/d;\n    vec3 m = step(l,l.yzx) * step(l,l.zxy);\n    tw = -s*m;\n    r += d*length(l*m) - m;\n    u += s*m;\n  }\n  return false;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\ntime = iTime;\nres = iResolution.xy;\n\tvec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  vec2 ouv = uv;\n\tuv -= 0.5;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n\n\tvec3 c = vec3(0.);\n  vec3 o = vec3(time*2.,20,time*4.);\n  vec3 d = vec3(uv,1);\n  float ga = 0.0;\n  d.xz *= mat2(cos(ga),-sin(ga),sin(ga),cos(ga));\n  ga = 0.2;\n  d.yz *= mat2(cos(ga),-sin(ga),sin(ga),cos(ga));\n  vec3 ii,ir,tw;\n  float e;\n  if(castf(o,d,ii,ir,tw,e)) {\n    vec3 pos = ii+ir+0.5;\n    c = vec3(1.);\n    if(e > 0.5) { \n      \n      vec3 normal = tw;\n        vec3 refl = reflect(normalize(pos-o),normal);\n      vec3 s = vec3(0);\n      for(int i=0;i<LOOP;i++) {\n        float ra = rand(uv*1000.+time+1.+float(i)*0.5)*6.;\n        float rr = rand(uv*1000.+time+2.+float(i)*0.9)*3.;\n        vec3 rc = vec3(sin(ra)*cos(rr), cos(ra)*cos(rr), sin(rr));\n        vec3 sph = dot(rc,normal) < 0. ? -rc:rc;\n        refl = mix(refl, sph, 0.5);\n        if(castf2(pos-d*0.01, refl, ii,ir,tw,e)) {\n          if(e < 0.5) s += (cos(vec3(0,1,-1)*2./3.*3.1415926535+ii.x*0.25)*0.5+0.5)*3.;\n        }\n      }\n      s /= float(LOOP);\n      c = s;\n    }\n  }\n  \n  float a = texture(iChannel0, ouv).a;\n  ivec3 cd = ivec3(fragCoord.xy, 0);\n  cd.z = cd.x/64 + cd.y/64*8;\n  \n  cd.xy %= 64;\n  if(fract(time) < 0.5) {\n    if(cd.z == 0) {\n      int count = 0;\n      for(int i=0;i<9;i++) {\n        if(i == 4) continue;\n        ivec2 d = ivec2(i/3-1,i%3-1);\n        count += texture(iChannel0, ouv+vec2(d)/res).a > 0.5 ? 1 : 0;\n      }\n      if(a > 0.5 && 2 <= count && count <= 3)a = 1.;\n      else if(a < 0.5 && count == 3) a = 1.;\n      else a -= 0.75;\n    } else {\n      int cdz = cd.z-1;\n      ivec2 tc = cd.xy + ivec2(cdz%8,cdz/8)*64;\n      a = texture(iChannel0, (vec2(tc)+0.5)/res).a;\n    }\n    \n    if((iFrame == 0 || cd.z == 0 && length(vec2(cd.xy)-31.) < 2.) && rand(uv*1000.+time) < 0.5) a = 1.;\n  \n  }\n  \n  vec3 bl = vec3(0.);\n  for(int i=0;i<16;i++) {\n    vec2 d = (vec2(rand(uv*1000.+time+float(i)),rand(uv*1001.+time+float(i))) - 0.5) * 5.;\n    d = sign(d) * pow(abs(d),vec2(2)); \n    bl += texture(iChannel0, ouv + d/res).rgb;\n  }\n  bl/=16.;\n  c = mix(c,bl,0.7);\n  a = clamp(a,0.,1.);\n  fragColor = vec4(c,a);\n  \n}\n","name":"Buffer A","description":"","type":"buffer"}]}