{"ver":"0.1","info":{"id":"4scGRl","date":"1451504848","viewed":250,"name":"Grid pixel Shader","username":"gigatron","description":"original from \"run\"\ngrid pixel test ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["ledgrid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":" \nfloat lenX= 30.;\nfloat lenY= 30.;\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    lenX +=0.8-lenX+60.+cos(-iTime*80.0);\n    lenY +=lenY+60.+sin(-iTime*20.0);\n    \n    vec2 gridSize = vec2(1./lenX, 1./lenY);\n\tvec2 uv = -fragCoord.xy / iResolution.xy;\n        \n    vec2 gridCoor = vec2(floor(uv.x*lenX),floor(uv.y*lenY));\n    vec2 colorSampleCoor = vec2(gridCoor.x*gridSize.x+gridSize.x/2., -(gridCoor.y*gridSize.y+gridSize.y/2.));\n    \n   \n    \n    float zoomlevel= 1.0;\n   \n    vec2 pan = vec2(1.0, .0);\n\tvec3 colorSample = texture(iChannel0, (colorSampleCoor)/zoomlevel+pan).rgb;\n   \n   \n    \n\tfragColor = vec4(vec3( colorSample.rgb),1.0);\n    \n    \n\t\n}","name":"","description":"","type":"image"}]}