{"ver":"0.1","info":{"id":"dl23Ry","date":"1673501764","viewed":152,"name":"A21DC525_shader","username":"A21DC525","description":"triangle","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec2 uv2tri(vec2 uv)\n{\n    float sx = uv.x - uv.y / 2.0; // skewed x\n    float offs = step(fract(1.0 - uv.y), fract(sx));\n    return vec2(floor(sx) * 2.0 + offs, floor(uv.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - iResolution.xy / 2.0) / iResolution.y * 8.0;\n\n    vec3 p = vec3(dot(uv, vec2(1.0, 0.5)), dot(uv, vec2(-1.0, 0.5)), uv.y);\n    vec3 p1 = fract(+p);\n    vec3 p2 = fract(-p);\n\n    float d1 = min(min(p1.x, p1.y), p1.z);\n    float d2 = min(min(p2.x, p2.y), p2.z);\n    float d = min(d1, d2);\n\n    vec2 tri = uv2tri(uv);\n    float r = rand(tri) * 2.0 + tri.x / 16.0 + iTime * 2.0;\n    \n    \n    //float c = step(0.2 + sin(r) * 0.2, d);\n    //por iq correccion\n\tfloat c = smoothstep(-0.02,0.0,d-0.2*(1.0+sin(r)));\n    \n    fragColor = vec4(c, c, c, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}