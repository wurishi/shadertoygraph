{"ver":"0.1","info":{"id":"stGSWm","date":"1640790739","viewed":107,"name":"Hexagonal grid (werediver)","username":"werediver","description":"Based on https://youtu.be/VmrIDyYiJBA by \"The Art of Code\".\n\nDemonstrates how to draw a hexagon and apply different properties (e.g. color) to different hexagonal cells.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["hexagon","hex","hexagonalgrid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rect_sdf(vec2 p, float r_in) {\n    return max(abs(p.x), abs(p.y)) - r_in;\n}\n\nfloat hex_sdf(vec2 p, float r_in) {\n    vec2 q = abs(p);\n    return max(q.x, dot(q, vec2(0.5, sqrt(3.0)/2.0))) - r_in;\n}\n\nvec4 hex_grid(vec2 uv) {\n    vec2 grid_step = vec2(1.0, sqrt(3.0));\n    vec2 half_grid_step = grid_step / 2.0;\n    \n    vec2 a = mod(uv, grid_step) - half_grid_step;\n    vec2 b = mod(uv - half_grid_step, grid_step) - half_grid_step;\n\n    vec2 p = dot(a, a) <= dot(b, b) ? a : b;\n\n    return vec4(p, uv - p);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float px = 2.0 / iResolution.y;\n    \n    float n = 10.0;\n    vec4 cell = hex_grid(uv * n);\n    vec2 p = cell.xy;\n    vec2 id = cell.wz;\n\n    float w = (0.5 - 3.0 * px) * (sin(iTime * (id.x + 2.0) + id.y) + 1.0) / 2.0;\n    float hex = smoothstep(3.0 * px, 0.0, abs(hex_sdf(p, w)));\n    \n    vec3 col = vec3(id.x / n, id.y / n, hex);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}