{"ver":"0.1","info":{"id":"XdlyDs","date":"1491259436","viewed":131,"name":"Tinybrot","username":"akohdr","description":"More Mandelbrot based on loop while(z <- z^2 +c < 2.) \nmandel() returns presence in the Mset, exit iteration, magnitude and max iterations limit.\nmainImage() shows usage rotating & zooming to limit of precision, showing scale in-variance/self similarity.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Andrew Wild - akohdr/2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define CENTER(p) p -= .5*iR; p /= iR.y\n#define ROT2D(p,a) p *= mat2(vec4(1,-1,1,1)*cos(vec2(a,a-1.57)).xyyx)\n\n// m => vec4(center.xy, zoom, max its.);\n//   <= vec4(inSet?, exit it., magnitude, smooth its.)\nvec4 mandel(in vec2 p, vec4 m )\n{\n//\tm.w = float(int(m.w)&~1); // ensuring even its. alleviates some flashing using smooth\n    vec2 i = vec2(0), c = p / m.z + m.xy, z = c;\n\tfor(i.x=0.;(i.y = length(z))<2. && i.x<m.w;i.x++)\t// appease windoze\n\n//\tfor(;(i.y = length(z))<2. && i.x++<m.w;)\t// still not compile windoze\n//    while((i.y = length(z))<2. && i.x++<m.w)\t// not compile windoze\n    \tz = mat2(z,-z.y,z.x)*z + c;\n    \n// https://iquilezles.org/articles/msetsmooth\n//\ti.x -= log2(log2(dot(z,z)/2.))-4.;\n\n    return vec4(i.y < 2., i, m.w);\n}\n\nvoid mainImage( out vec4 k, in vec2 p )\n{\n\t vec2 iR = iResolution.xy;\n    float iT = iTime,\n           t = pow(1.8, 7.1-7.*cos(iT/4.));\n    \n    CENTER(p);\n\tROT2D(p,iT);\n    \n    vec2 c = vec2(-1.039532, -.34893);\n    \n\tk = mandel(p, vec4(c,  t*log(t), t+22.));\n//\tk = mandel(p, vec4(-.8, 0, .5, 55.));\t// whole Mset no zoom\n//\tk = mod(k,2.);\t\t\t\t\t\t\t// older textbook style\n    k = normalize(k);\n}\n","name":"Image","description":"","type":"image"}]}