{"ver":"0.1","info":{"id":"Ns23Rh","date":"1616947678","viewed":131,"name":"zin - fake sin","username":"HellMood","description":"Demo of rotation without sin.\nFirst, scale [0,2pi] to [0,2]\nThen, divide in two segments [0,1] and [1,2]\nApproximate [0,1] with a negative xÂ² function matchin at y=1 & y=0\nFlip in second segment\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sin","approximation","nofpu"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float zin(float x)\n{\n    float w,v;\n    w=x/3.14;\n    v=mod(w,2.0);\n    w=mod(w,1.0);\n    //w=(.5-w)*(.5-w)*4.-1.;\n    //w=(.5-w)*(.5-w)-.25;\n    w=w-w*w;\n    w=4.*w;\n    if (v>1.) w=-w;\n    \n    return w;\n    //return sin(x);\n}\nfloat kos(float x)\n{\n    return zin(x+1.57);\n    //return sin(x+1.57);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-.5;\n    \n    uv.x*= 1.7;\n\n    float arc=iTime/4.;\n\n    float x=zin(arc)*uv.x+kos(arc)*uv.y;\n    float y=-kos(arc)*uv.x+zin(arc)*uv.y;\n\n    uv.x=x;\n    uv.y=y;\n\n    // Time varying pixel color\n    vec3 col = vec3(sin(uv*40.),1);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}