{"ver":"0.1","info":{"id":"lsKcWR","date":"1521644931","viewed":76,"name":"heart in cage","username":"ooopsyi","description":"heart tile","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["heart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\nvec2 rotate2D (vec2 _st, float _angle) {\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\nvec2 tile (vec2 _st, float _zoom) {\n    _st *= _zoom;\n    return fract(_st);\n}\n\nvec2 rotateTilePattern(vec2 _st){\n\n    //  Scale the coordinate system by 2x2\n    _st *= 4.0;\n\n    //  Give each cell an index number\n    //  according to its position\n    float index = 0.0;\n    index += step(1., mod(_st.x,2.0));\n    index += step(1., mod(_st.y,2.0))*2.0;\n\n    _st = fract(_st);\n\n    // Rotate each cell according to the index\n    if(index == 1.0){\n        _st = rotate2D(_st,PI*0.75);\n    } else if(index == 2.0){\n        _st = rotate2D(_st,PI*-0.25);\n    } else if(index == 3.0){\n        _st = rotate2D(_st,PI*0.25);\n    } else {\n      _st = rotate2D(_st,PI*-0.75);\n    }\n\n    return _st;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n\n   st = tile( st - fract(sin(iTime)/50.0)*0.2, 2.0 - fract(sin(iTime)/50.0)*2.8);\n   st = rotateTilePattern(st + fract(sin(iTime)/10.0)*0.2);\n   vec2 p = 2.0*st - vec2(1.0);\n   p.y -= 0.25;\n\n   // background color\n   float tt = mod(iTime,8.0)/2.0;\n   vec3 bcol = vec3(0.1+0.5*cos(iTime)*0.2);\n\n   // animate\n   p *= vec2(0.5,1.5) + tt*vec2(1.0,-1.0);\n\n   // shape\n   float a = atan(p.x,p.y)/PI;\n   float r = length(p);\n   float h = abs(a);\n   float d = (13.0*h - 22.0*h*h + 10.0*h*h*h)/(6.0-5.0*h);\n\n   // color\n   float s = 1.0-0.5*clamp(r/d,0.0,1.0);\n   s = 0.75 + 0.75*p.x;\n   s *= 1.0-0.25*r;\n   s = 0.5 + 0.6*s;\n   s *= 0.5+0.5*pow( 1.0-clamp(r/d, 0.0, 1.0 ), 0.1 );\n   //vec3 hcol = vec3(0.3*r,0.1*s,0.5*s)*r*3.0;\n    vec3 hcol = vec3(1.0)*s;\n  \n\n   vec3 col = mix( bcol, hcol, smoothstep( -0.1, 0.01, d-r) );\n   fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}