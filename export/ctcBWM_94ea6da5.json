{"ver":"0.1","info":{"id":"ctcBWM","date":"1701272992","viewed":48,"name":"Two-pass Gaussian blur","username":"niels747","description":"two-pass Gaussian blur","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["blur","gaussian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = texture(iChannel0, uv).rgb;\n\n\n\n\n\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 fragSize = vec2(1)/iResolution.xy;\n    \n    vec3 col = texture(iChannel0, uv).rgb  * weight[0]; // center pixel\n\nfor(int i = 1; i < blurRad; ++i)\n        {\n            col += texture(iChannel0, uv + vec2(fragSize.x * float(i), 0.0)).rgb * weight[i];\n            col += texture(iChannel0, uv - vec2(fragSize.x * float(i), 0.0)).rgb * weight[i];\n        }\n\n\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 fragSize = vec2(1)/iResolution.xy;\n    \n    vec3 col = texture(iChannel0, uv).rgb  * weight[0]; // center pixel\n\nfor(int i = 1; i < blurRad; ++i)\n        {\n            col += texture(iChannel0, uv + vec2(0.0, fragSize.y * float(i))).rgb * weight[i];\n            col += texture(iChannel0, uv - vec2(0.0, fragSize.y * float(i))).rgb * weight[i];\n        }\n\n\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"//const int blurRad = 32;\n//const float weight[32] = float[] (0.049870, 0.049482, 0.048336, 0.046484, 0.044010, 0.041022, 0.037644, 0.034009, 0.030248, 0.026486, 0.022832, 0.019377, 0.016190, 0.013318, 0.010785, 0.008599, 0.006749, 0.005215, 0.003968, 0.002972, 0.002191, 0.001591, 0.001137, 0.000800, 0.000554, 0.000378, 0.000254, 0.000168, 0.000109, 0.000070, 0.000044, 0.000027);\n\nconst int blurRad = 64;\nconst float weight[64] = float[] (0.026597, 0.026538, 0.026361, 0.026070, 0.025668, 0.025159, 0.024552, 0.023853, 0.023071, 0.022215, 0.021297, 0.020326, 0.019313, 0.018269, 0.017205, 0.016132, 0.015058, 0.013993, 0.012946, 0.011924, 0.010934, 0.009982, 0.009072, 0.008209, 0.007395, 0.006632, 0.005921, 0.005263, 0.004658, 0.004104, 0.003599, 0.003143, 0.002733, 0.002365, 0.002038, 0.001748, 0.001493, 0.001269, 0.001075, 0.000906, 0.000760, 0.000635, 0.000528, 0.000437, 0.000360, 0.000295, 0.000241, 0.000196, 0.000159, 0.000128, 0.000103, 0.000082, 0.000065, 0.000052, 0.000041, 0.000032, 0.000025, 0.000019, 0.000015, 0.000012, 0.000009, 0.000007, 0.000005, 0.000004);","name":"Common","description":"","type":"common"}]}