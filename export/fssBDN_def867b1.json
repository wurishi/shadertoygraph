{"ver":"0.1","info":{"id":"fssBDN","date":"1644975882","viewed":115,"name":"Simple 3D sphere","username":"chenxiaoleizi","description":"3d","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/4dfBRf\n// https://www.youtube.com/watch?v=PBxuVlp7nuM\n\nvec3 raySphere(vec3 ro, vec3 rd, vec3 center, float r){\n    \n    vec3 co = ro - center ;\n    float a = dot(rd, rd);\n    float b = 2. * dot(co, rd);\n    float c = dot(co, co) - r*r;\n    \n    float delta = b*b - 4.*a*c;\n    if (delta < 0.) return vec3(0.);\n    \n    float t1 = (-b - sqrt(delta)) / (2.*a);\n    float t2 = (-b + sqrt(delta)) / (2.*a);\n    float t = max(t1, t2);\n    vec3 p = ro + t*rd;\n    vec3 normal = normalize(p - center);\n    \n    // Reversed light direction\n    vec3 reverseld = normalize(vec3(1.,1.,0.));\n    float intensity = 1.;\n    float col = dot(normal, reverseld) * intensity;\n    return vec3(max(col, 0.15));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.0*fragCoord - iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.);\n    \n    \n    vec3 target = vec3(0.);\n    // Ray origin (camera position)\n    //vec3 ro = vec3(0., 0., 2.0);\n    float time = iTime * 0.5;\n    vec3 ro = vec3(cos(time)*2.0, 0.0, sin(time)*2.0);\n    //ro = vec3(0., 0., 2.);\n    float zoom = 1.0;\n    \n    vec3 forward = normalize(target - ro);\n    vec3 right = normalize(cross(forward, vec3(0., 1., 0.)));\n    vec3 up = normalize(cross(right, forward));\n    vec3 center = ro + forward*zoom;\n    \n    vec3 st = center + uv.x*right + uv.y*up;\n    vec3 rd = st - ro;\n    \n    col += raySphere(ro, rd, vec3(0., 0., 0.), 1.);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}