{"ver":"0.1","info":{"id":"MtyyDK","date":"1537735053","viewed":187,"name":"Recoiling","username":"PianiGiani","description":"My second Shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["simple","spirograph","coil"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n\nfloat DDot(vec2 p1,vec2 p2) {\n    return 1.-(distance(p1,p2)*100.);\n}\n        \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    vec3 col=vec3(0.,0.,0.);\n    \n    for (float t=0.00; t<20.;t+=0.1)\n    {\n    \n    for (float i=0.05; i<1.0;i+=0.1){\n    \n    \t// position\n        float speed=iTime/2.;\n        vec2 pos = vec2(0.8*(sin(t)/2.),0.4*sin(speed+t)*i+cos(i)-0.65);\n        pos = pos* vec2(i+sin(speed/4.),1);\n\n        // colour\n    \tvec3 colmask=vec3(1.+sin(iTime+i)/2.,1.+sin(iTime+t)/2.,1.+cos(iTime)/2.);\n    \tcol=max(colmask*vec3(DDot(uv,pos)),col);\n\n    }\n        fragColor = vec4(col,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}