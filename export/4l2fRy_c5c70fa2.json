{"ver":"0.1","info":{"id":"4l2fRy","date":"1516319062","viewed":123,"name":"Counting Visualization","username":"Muninn","description":"A visualization of counting in any base.\n\nA generalization of https://www.shadertoy.com/view/lssXDs","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// the size of each dot, in UV space\n#define BIT_SIZE 0.0125\n\n// used when controlling scale with the mouse\n#define SCALE_MIN BIT_SIZE / 2.0\n#define SCALE_MAX 0.0625\n\n// Base for number system\n#define BASE 5.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \tvec2 R = iResolution.xy;\n    float scale = BIT_SIZE;\n    \n    if( iMouse.z > 0. ) scale = iMouse.y / R.y * (SCALE_MAX - SCALE_MIN) + SCALE_MIN;\n \n    fragCoord /= R.y;\n\n    fragCoord.x = max(0., fragCoord.x + iTime - R.x / R.y);\n    fragCoord.y -= 0.5;\n    \n    fragCoord /= scale;\n\tvec2 F = floor(fragCoord), \n         r = fract(fragCoord) - .5;\n    \n    fragColor = vec4((mod(floor(F.x/floor(pow(BASE, F.y))), BASE) / (BASE-1.))\n              * smoothstep(.6,.3,length(r))\n             );\n}","name":"Image","description":"","type":"image"}]}