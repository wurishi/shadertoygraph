{"ver":"0.1","info":{"id":"XXy3RV","date":"1717874312","viewed":23,"name":"Satisfying \"Cube\" Pattern","username":"orange389","description":"c u b e s","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getParcelDistance(in ivec2 index) {\n    return  float(index.x) + float(index.y) + 100.0;\n}\n\n\nvec3 getParcelColor(in ivec2 index) {\n    return vec3(0.5, 1.0, 0.5);\n}\n\nvec2 getParcelDimension() {\n    return vec2(4.0, 4.0);\n}\n\nvec2 getParcelCorner(in ivec2 index) {\n    vec2 parcelDimension = getParcelDimension();\n    return vec2(index) * parcelDimension;\n}\n\nivec2 getParcelIndex(in vec3 pos) {\n    vec2 parcelDimension = getParcelDimension();\n    return ivec2(pos.x / parcelDimension.x, pos.y / parcelDimension.y);\n}\n\n\nvec3 getParcelColor(in vec3 pos) {\n    vec2 relPos = fract(pos.xy * getParcelDimension());\n    if (relPos.x < 0.00001 || relPos.x > 0.99999) {\n        return vec3(1.0, 1.0, 0.5);\n    }\n    if (relPos.y < 0.00001 || relPos.y > 0.99999) {\n        return vec3(0.5, 1.0, 1.0);\n    }\n    return getParcelColor(getParcelIndex(pos));\n}\n\nfloat xSDF(in vec3 pos, in ivec2 index, in float unit) {\n    if (unit > 0.0) {\n        return (getParcelCorner(index).x + getParcelDimension().x - pos.x) * unit;\n    }\n    else {\n        return (getParcelCorner(index).x - pos.x) * unit;\n    }\n}\n\nfloat ySDF(in vec3 pos, in ivec2 index, in float unit) {\n    if (unit > 0.0) {\n        return (getParcelCorner(index).y + getParcelDimension().y - pos.y) * unit;\n    }\n    else {\n        return (getParcelCorner(index).y - pos.y) * unit;\n    }\n}\n\nfloat zSDF(in vec3 pos, in ivec2 index, in float unit) {\n    if (unit > 0.0) {\n        return max((getParcelDistance(index) - pos.z) * unit, 0.0);\n    }\n    else {\n        return 10000000.0;\n    }\n}\n\nbool march(inout vec3 pos, inout ivec2 index, in vec3 dir, in vec3 unit) {\n    float x = xSDF(pos, index, unit.x);\n    float y = ySDF(pos, index, unit.y);\n    float z = zSDF(pos, index, unit.z);\n    float sdf = min(min(x, y),z);\n    pos += dir * sdf;\n    if (sdf == z) {\n        return true;\n    }\n    if (sdf == x) {\n        index.x += (dir.x > 0.0) ? 1 : -1;\n    }\n    else {\n        index.y += (dir.y > 0.0) ? 1 : -1;\n    }\n    return false;\n}\n\nbool rayMarching(inout vec3 pos, in vec3 dir) {\n    vec3 unit;\n    unit.x = (dir.x == 0.0) ? 100000000.0 : (1.0 / dir.x);\n    unit.y = (dir.y == 0.0) ? 100000000.0 : (1.0 / dir.y);\n    unit.z = (dir.z == 0.0) ? 100000000.0 : (1.0 / dir.z);\n    ivec2 index = getParcelIndex(pos);\n    bool hit = false;\n    int i = 0;\n    while(!hit && i < 200) {\n        ++i;\n        hit = march(pos, index, dir, unit);\n    }\n    return hit;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy * 2.0 - 1.0) * iResolution.xy / iResolution.xx;\n    vec3 pos = vec3(uv.x + 2.0 + 4.0 * iTime, uv.y , 50.0 + iTime);\n    vec3 dir = vec3(uv.x -  cos(iTime * 0.5) - 2.0, uv.y - 3.0 + sin(iTime * 0.5), 1.0);\n    dir = dir / length(dir);\n    rayMarching(pos, dir);\n    vec3 color = getParcelColor(pos);\n    fragColor = vec4(color, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}