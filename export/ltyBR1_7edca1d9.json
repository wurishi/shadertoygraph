{"ver":"0.1","info":{"id":"ltyBR1","date":"1542032984","viewed":142,"name":"Yet another dithering","username":"Gaktan","description":"Use mouse and space bar.\n\nOrdered dithering:\nhttps://en.wikipedia.org/wiki/Ordered_dithering","likes":1,"published":1,"flags":16,"usePreview":0,"tags":["dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n// Use Mouse to compare\n// Hold space to see original color\n//\n\n// Try 2, 3, 4, 8\n#define N 4\n\n// Try 0, 1, 2, 3\n#define TEST_SCENE 1\n\n// Try 1.0, 2.0, 4.0, 8.0, 16.0\n#define NUM_COLORS 8.0\n\n#define DITHERING_SCALE 2.0\n\n// Pixelate the image along with dithering scale, useful to debug dithering patterns\n// Also shows that dithering is not amazing when using low resolutions\n#define SCALE_SCENE_WITH_DITHERING\n\n// Special palette to have nicer colors when not using dithering. Using round instead of floor\nvec3 PaletteColor(in vec3 col, in float p)\n{\n    col = col * p;\n    col = round(col);\n    col = col / p;\n    \n    return col;\n}\n\nvec3 PaletteDither(in vec3 col, in float p)\n{\n    col = col * p;\n    col = floor(col);\n    col = col / p;\n    \n    return col;\n}\n\nfloat Dithering(in vec2 fragCoord)\n{\n#if N == 2\n    mat2x2 M = mat2x2(0.0, 3.0, \n                      2.0, 1.0);\n#elif N == 3\n    mat3x3 M = mat3x3(0.0, 6.0, 4.0,\n                      7.0, 5.0, 1.0,\n                      3.0, 2.0, 8.0);\n#elif N == 4\n    mat4x4 M = mat4x4(0.0, 8.0, 2.0, 11.0,\n                      12.0, 4.0, 14.0, 6.0,\n                      3.0, 11.0, 1.0, 9.0,\n                      15.0, 7.0, 13.0, 5.0);\n#endif\n    \n    ivec2 coord = ivec2(fragCoord / DITHERING_SCALE) % N;\n    \n#if N != 8\n     M = (M + 1.0) / float(N*N);\n\n    return (M[int(coord.y)][int(coord.x)]);\n#else\n    return texelFetch(iChannel3, coord, 0).r;\n#endif\n}\n\nvec3 Dithering(in vec2 fragCoord, in vec3 col)\n{\n    vec3 r = vec3(1.0 / NUM_COLORS);\n    // Magic number to get the full range of colors. Noticeable when NUM_COLORS < 4\n    float magicNumber = 0.025;\n    return PaletteDither(col + r * Dithering(fragCoord), NUM_COLORS-magicNumber);\n}\n\nvec3 SceneColor(in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n#ifdef SCALE_SCENE_WITH_DITHERING\n    vec2 scale = iResolution.xy / DITHERING_SCALE;\n    uv = ceil(uv * scale) / scale;\n#endif    \n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n#if TEST_SCENE == 1\n    col = texture(iChannel0, uv).rgb;\n#elif TEST_SCENE == 2\n    col = texture(iChannel0, uv).rgb;\n    col = vec3(dot(col, vec3(0.299, 0.587, 0.114)));\n#elif TEST_SCENE == 3\n    col = vec3(uv.x);\n#endif\n    \n    return col;\n}\n\n#define KEY_SPACE 32\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 col = SceneColor(fragCoord);\n    \n    float separationPos = iMouse.x; \n    if (separationPos < 10.0)\n    {\n\t\tseparationPos = iResolution.x * 0.5;\n    }\n\n    if (fragCoord.x < separationPos)\n    {\n        float spacePressed = texelFetch(iChannel2, ivec2(KEY_SPACE, 0), 0).r;\n        if (spacePressed == 0.0)\n        {\n            col = PaletteColor(col, NUM_COLORS);\n        }\n    }\n    else\n    {\n    \tcol = Dithering(fragCoord, col);\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}