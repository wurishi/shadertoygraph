{"ver":"0.1","info":{"id":"fd2XWw","date":"1623113719","viewed":45,"name":"Inspirnathan Logo","username":"inspirnathan","description":"Recreation of the logo for my website, [url]https://inspirnathan.com/[/url]","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["logo","inspirnathan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n** Logo for my website: https://inspirnathan.com/\n** \n** Resources/Credit:\n** Primitive 2D SDFs: https://iquilezles.org/articles/distfunctions2d\n*/\n\nmat2 rotate(float theta) {\n  float s = sin(theta), c = cos(theta);\n  return mat2(c, -s, s, c);\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat sdTriangleIsosceles(vec2 p, vec2 q)\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat bottom(vec2 p) {\n    float res = 1e6;\n    res = min(res, sdTriangleIsosceles(vec2(p - vec2(0, -0.4)), vec2(0.4, 0.4)));\n    res = max(res, -sdTriangleIsosceles(vec2(p - vec2(0, -0.2)), vec2(0.8, 0.4)));\n    return res;\n}\n\nfloat logo(vec2 p) {\n    float res = 1e6;\n    res = min(res, bottom(p - vec2(0, 0.05)));\n    res = min(res, sdCircle(vec2(p - vec2(0, 0.2)), 0.08));\n    return res;\n}\n\nvec3 scene(vec2 p) {\n    vec3 col = vec3(0, 1, .60);\n\n    float res = logo(p - vec2(0, 0.05));\n    \n    res = smoothstep(0., 0.007, res);\n    col = mix(vec3(1), col, res);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    vec3 col = scene(uv);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}