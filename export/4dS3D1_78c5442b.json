{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"\nconst mat4 bayertl = mat4( \n 0.0/64.0, 32.0/64.0,  8.0/64.0, 40.0/64.0,\n48.0/64.0, 16.0/64.0, 56.0/64.0, 24.0/64.0,\n12.0/64.0, 44.0/64.0,  4.0/64.0, 36.0/64.0,\n60.0/64.0, 28.0/64.0, 52.0/64.0, 20.0/64.0\n);\n\nconst mat4 bayertr = mat4( \n 2.0/64.0, 34.0/64.0, 10.0/64.0, 42.0/64.0,\n50.0/64.0, 18.0/64.0, 58.0/64.0, 26.0/64.0,\n14.0/64.0, 46.0/64.0,  6.0/64.0, 38.0/64.0,\n62.0/64.0, 30.0/64.0, 54.0/64.0, 22.0/64.0\n);\n\nconst mat4 bayerbl = mat4( \n 3.0/64.0, 35.0/64.0, 11.0/64.0, 43.0/64.0,\n51.0/64.0, 19.0/64.0, 59.0/64.0, 27.0/64.0,\n15.0/64.0, 47.0/64.0,  7.0/64.0, 39.0/64.0,\n63.0/64.0, 31.0/64.0, 55.0/64.0, 23.0/64.0\n);\n\t\nconst mat4 bayerbr = mat4( \n 1.0/64.0, 33.0/64.0,  9.0/64.0, 41.0/64.0,\n49.0/64.0, 17.0/64.0, 57.0/64.0, 25.0/64.0,\n13.0/64.0, 45.0/64.0,  5.0/64.0, 37.0/64.0,\n61.0/64.0, 29.0/64.0, 53.0/64.0, 21.0/64.0\n);\n\nfloat dither( mat4 m, ivec2 p )\n{\n\tif( p.y == 0 ) \n\t{\n\t\tif( p.x == 0 ) return m[0][0];\n\t\telse if( p.x == 1 ) return m[1][0];\n\t\telse if( p.x == 2 ) return m[2][0];\n\t\telse return m[3][0];\t\n\t}\t\n\telse if( p.y == 1 ) \n\t{\n\t\tif( p.x == 0 ) return m[0][1];\n\t\telse if( p.x == 1 ) return m[1][1];\n\t\telse if( p.x == 2 ) return m[2][1];\n\t\telse return m[3][1];\t\n\t}\t\n\telse if( p.y == 2 ) \n\t{\n\t\tif( p.x == 0 ) return m[0][1];\n\t\telse if( p.x == 1 ) return m[1][2];\n\t\telse if( p.x == 2 ) return m[2][2];\n\t\telse return m[3][2];\t\n\t}\t\n\telse \n\t{\n\t\tif( p.x == 0 ) return m[0][3];\n\t\telse if( p.x == 1 ) return m[1][3];\n\t\telse if( p.x == 2 ) return m[2][3];\n\t\telse return m[3][3];\t\n\t}\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tivec2 p = ivec2(mod( fragCoord.xy, 8.0 ));\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec3 c = texture( iChannel0, uv ).xyz;\n\tc = pow( c, vec3(2.2) );\t\n\tc -= 1.0/255.0;\n\t\n\tvec3 d = vec3(0.0);\n\tif( p.x <= 3 && p.y <= 3 )\n\t{\n\t\td.r = float( c.r > dither( bayertl, p ) );\n\t\td.g = float( c.g > dither( bayertl, p ) );\n\t\td.b = float( c.b > dither( bayertl, p ) );\n\t}\n\telse if ( p.x > 3 && p.y <= 3 )\n\t{\n\t\td.r = float( c.r > dither( bayertr, p -ivec2(4,0) ) );\n\t\td.g = float( c.g > dither( bayertr, p -ivec2(4,0) ) );\n\t\td.b = float( c.b > dither( bayertr, p -ivec2(4,0) ) );\n\t}\n\telse if( p.x <= 3 && p.y > 3 )\n\t{\n\t\td.r = float( c.r > dither( bayerbl, p-ivec2(0,4)  ) );\n\t\td.g = float( c.g > dither( bayerbl, p-ivec2(0,4)  ) );\n\t\td.b = float( c.b > dither( bayerbl, p-ivec2(0,4)  ) );\n\t}\n\telse if ( p.x > 3 && p.y > 3 )\n\t{\n\t\td.r = float( c.r > dither( bayerbr, p -ivec2(4,4) ) );\n\t\td.g = float( c.g > dither( bayerbr, p -ivec2(4,4) ) );\n\t\td.b = float( c.b > dither( bayerbr, p -ivec2(4,4) ) );\n\t}\n\t//c=texture( iChannel0, uv ).xyz;\n\tfragColor = vec4(d, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dS3D1","date":"1386761389","viewed":2277,"name":"Bayer dithering","username":"Mattias","description":"Just a quick test of Bayer dithering - code is awful :P I wish I could upload my own texture (for the dither matrix), that would make it much nicer.","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["dithering"],"hasliked":0,"parentid":"","parentname":""}}