{"ver":"0.1","info":{"id":"MdByW1","date":"1491905146","viewed":713,"name":"HexGridPlane","username":"cexlearning","description":"draw HexGrid and rings,copy from https://github.com/unity3d-jp/unitychan-crs","likes":31,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hex( vec2 p, vec2 h )\n{\n\tvec2 q = abs(p);\n    return max(q.x-h.y,max(q.x+q.y*0.57735,q.y*1.1547)-h.x);\n}\n\nfloat HexGrid(vec2 p)\n{\n    float scale = 1.2;\n    vec2 grid = vec2(0.692, 0.4) * scale;\n    float radius = 0.22 * scale;\n\n    vec2 p1 = mod(p.xy, grid) - grid*0.5;\n    float c1 = Hex(p1, vec2(radius, radius));\n\n    vec2 p2 = mod(p.xy+grid*0.5, grid) - grid*0.5;\n    float c2 = Hex(p2, vec2(radius, radius));\n    return min(c1, c2);\n}\n\n\nfloat Circle(vec2 pos)\n{\n    float o_radius = 5.0;\n    float i_radius = 4.0;\n    float d = length(pos.xy);\n    float c = max(o_radius-(o_radius-mod(d-iTime*1.5, o_radius))-i_radius, 0.0);\n    return c;\n}\n\nfloat  iq_rand( float  p )\n{\n    return fract(sin(p)*43758.5453);\n}\n\nfloat Rings(vec2 pos)\n{\n    float pi = 3.14159;\n    vec2 wpos = pos;\n\n    float stride = 0.2;//_RingSrtide;\n    float strine_half = stride * 0.5;\n    vec4 _Spectra = vec4(0.2143147,0,0,0.8872105);\n    float _RingThicknessMin = 0.1;\n    float _RingThicknessMax = 0.5;\n    float thickness = 1.0 - (_RingThicknessMin + length(_Spectra)*(_RingThicknessMax-_RingThicknessMin));\n    float distance = abs(length(wpos) - iTime*0.1);\n    float fra = mod(distance, stride);\n    float cycle = floor((distance)/stride);\n\n    float c = strine_half - abs(fra-strine_half) - strine_half*thickness;\n    c = max(c * (1.0/(strine_half*thickness)), 0.0);\n\n    float rs = iq_rand(cycle*cycle);\n    float _RingSpeedMin = 0.2;\n    float _RingSpeedMax = 0.5;\n    float r = iq_rand(cycle) + iTime*(_RingSpeedMin+(_RingSpeedMax-_RingSpeedMin)*rs);\n\n    float angle = atan(wpos.y,wpos.x) / pi *0.5 + 0.5; // 0.0-1.0\n    float a = 1.0-mod(angle + r, 1.0);\n    a = max(a-0.7, 0.0) * c;\n    return a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 gridColor = vec4(0.2, 0.3, 0.5, 1);\n    \n\tvec2 uv = (fragCoord.xy - iResolution.xy/2.0)/80.0;\n    float trails = Rings(uv);\n\tfloat grid_d = HexGrid(uv);\n    float grid = grid_d > 0.0 ? 1.0 : 0.0;\n    float circle = Circle(uv);\n    vec4 _Spectra = vec4(0.2143147,0,0,0.8872105);\n    fragColor = trails * (0.5 + _Spectra * 10.0);\n    fragColor += vec4(grid * circle,grid * circle,grid * circle,1) * gridColor * 8.0;\n    fragColor += 0.2 * (1.0-grid*0.9);\n}","name":"Image","description":"","type":"image"}]}