{"ver":"0.1","info":{"id":"tdBXzh","date":"1552926333","viewed":879,"name":"2d light wave propagation","username":"public_int_i","description":"saw wyatt's schrodinger equation shader https://www.shadertoy.com/view/Ws2XzR and tried to use the classical wave equation from it for 2d lighting. click to move the light","likes":26,"published":3,"flags":32,"usePreview":0,"tags":["2d","wave","light","propagation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 o, in vec2 u)\n{\n    o = texelFetch(iChannel0,ivec2(u),0);    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Buf A - Light propagation using wave equation from wyatt's shader https://www.shadertoy.com/view/Ws2XzR\n\nvoid mainImage(out vec4 o, in vec2 u)\n{\n    vec2 uv = AC(u);\n    //light source\n    vec2 lpos = vec2(0);\n    if (iMouse.w > 0.) lpos = AC(iMouse.xy);\n    float ls = length(uv-lpos);\n    if ((iFrame < 10 || iMouse.w > 0.) && ls <= LIGHT_RADIUS) {\n        o = vec4(ls/LIGHT_RADIUS*LIGHT_INTENSITY,0,0,0);\n        return;\n    } else if (iMouse.w > 0. && iFrame%11 == 0) {\n        o = vec4(0);\n        return;\n    }\n    \n    //wave propagation\n    ivec2 iu = ivec2(u);\n\t#define ts(x,y) texelFetch(iChannel0,iu+ivec2(x,y),0)\n    vec4 s = ts(0,0),\n        d = (ts(1,0)+ts(-1,0)+ts(0,1)+ts(0,-1))*.25-s;\n    s.x += d.x+s.y;\n    s.y += d.x;\n    //walls light blocking, i think this should actually be done by changing the laplacian neighbour samples?\n    if (walls(uv) < 0.) s *= 1.-WALL_OPACITY;\n    o = s;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\n#define R iResolution\n#define AC(p) ((p*2.-R.xy)/R.y)\n#define PI 3.14159265358979\n\n#define LIGHT_RADIUS .05\n#define LIGHT_INTENSITY 1.\n\n#define WALL_OPACITY 0.9\n//comment out DIFFUSE to enable specular lighting\n#define DIFFUSE\n\nvec4 hash(vec4 a) {\n\treturn fract(abs(sin(a.ywxz*766.345)+cos(normalize(a)*4972.92855))*2048.97435+abs(a.wxyz)*.2735);\n}\n\n//distance function for walls\nfloat walls(vec2 p) {\n    #ifdef DIFFUSE\n    p += (hash(p.xyyx).xy-.5)*.1;\n    #endif\n    vec2 a = abs(p);\n    float d = .95-max(a.x,a.y);//outer walls\n    d = min(d,\nabs(length(p)-.5)-.05*(floor(mod(atan(p.y,p.x)*3.5/PI,3.))*2.-1.));//inner circular walls\n    return d;\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//Buf B - Sample light wave values over time from Buf A and draw walls.\n\nvoid mainImage( out vec4 o, in vec2 u)\n{\n    //max light value over time\n    ivec2 iu = ivec2(u);\n    vec4 l = abs(texelFetch(iChannel0,iu,0).xxxx);\n    if (iMouse.w < 1.) l = max(l,texelFetch(iChannel1,iu,0));\n    \n    //draw walls\n    o = mix(l,vec4(.3),clamp(1.-walls(AC(u))*.5*R.y,0.,1.));//walls\n}","name":"Buffer B","description":"","type":"buffer"}]}