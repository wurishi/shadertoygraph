{"ver":"0.1","info":{"id":"XtjcDW","date":"1508634413","viewed":330,"name":"S curves: sigmoid vs smoothstep","username":"luluco250","description":"Comparing \"S curve\" contrast filters using sigmoid (with some scaling and offsetting to normalize it) and smoothstep.\nTop is sigmoid, bottom is smoothstep.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","color","contrast","curve","smoothstep","s","sigmoid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Regular sigmoid curve with the exception of\n// x * 10 - 5, which seems to normalize the curve.\nvec3 sigmoid(vec3 x) {\n    return vec3(1.0) / (vec3(1.0) + exp(-(x * 10.0 - 5.0)));\n}\n\nvoid mainImage(out vec4 color, vec2 coord) {\n    vec2 ps = vec2(1.0) / iResolution.xy;\n    vec2 uv = coord * ps;\n    \n    color = texture(iChannel0, uv);\n    \n    // The time factor is multiplied by 4\n    // for the filter flashing.\n    vec2 t = sin(vec2(iTime) * vec2(4.0, 1.0)) * 0.5 + 0.5;\n    \n    // If mouse is clicking on the canvas.\n    if (iMouse.z > 0.0)\n        t = iMouse.xy * ps;\n    \n    if (uv.y > t.y)\n    \tcolor.rgb = mix(color.rgb, sigmoid(color.rgb), t.x);\n    else\n        color.rgb = mix(color.rgb, smoothstep(0.0, 1.0, color.rgb), t.x);\n    \n    // Create a separator, inverting the colors.\n    if (uv.y < t.y + ps.y && uv.y > t.y - ps.y)\n        color.rgb = vec3(1.0) - color.rgb;\n}\n","name":"Image","description":"","type":"image"}]}