{"ver":"0.1","info":{"id":"XlSBDK","date":"1517140848","viewed":457,"name":"Flighting Stars","username":"gaz","description":"3d","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGzn","filepath":"/media/a/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","previewfilepath":"/media/ap/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float TIME;\n\nmat3 lookat(vec3 d, vec3 up)\n{\n\tvec3 w = normalize(d),u = normalize(cross(w,up));\n    return (mat3(u,cross(u,w),w));\n}\n\nvec3 rotate(vec3 p, vec3 v, float a) \n{\n \tvec4 q = vec4(sin(a/2.)*v, cos(a/2.)); // quaternion\n    return cross(cross(p, q.xyz)-q.w*p, q.xyz)*2.+p;\n}\n\nmat2 rotate(float a)\n{\n\treturn mat2(cos(a), sin(a), -sin(a), cos(a));\t\n}\n\nfloat sdTorus(vec3 p, vec2 t)\n{\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\nfloat map(vec3 p)\n{   \n    p =  rotate(p,normalize(vec3(rotate(TIME/3.)*vec2(1,2),3)),TIME);\n    float r = 1.5, s= 0.05;\n    float n = radians(72.);\n    p.xy *= rotate(floor(atan(-p.x, p.y) / n) * n-radians(54.));\n    float de = 1.;\n    de = min(de,sdTorus(p,vec2(r,s)));\n    float h = 3., b = radians(90.)/h;    \n    for(float i=0.;i<h;i++)\n    {\n        vec3 q =p;\n        float a = b*i;\n        q.z = abs(q.z)-r*sin(a);\n        de = min(de,sdTorus(q.xzy,vec2(r*cos(a),s)));\n    }\n    return de;\n}\n\nvec3 calcNormal(vec3 pos){\n  vec2 e = vec2(1,-1) * 0.002;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)  );\n}\n\nvec3  hsv(float h,float s,float v)\n{\n    return((clamp(abs(fract(h+vec3(0,2,1)/3.)*6.-3.)-1.,0.,1.)-1.)*s+1.)*v;\n}\n\nvec3 doColor(vec3 p)\n{\n\treturn hsv(0.05, 1., 1.);\n}\n\nvec3 billboard(vec3 ro, vec3 rd, vec3 pos, vec3 nor, vec3 up)\n{\n\tfloat z = dot(pos-ro,nor)/dot(rd,nor);\n    vec3 p=ro+rd*z, a=p-pos, u=normalize(cross(nor,up)), v=normalize(cross(u,nor));\n    return vec3(dot(a,u),dot(a,v),z);\n}\n\n// https://www.shadertoy.com/view/XlXcW4\nvec2 hash(float p)\n{\n    uvec2 x = uvec2(p*vec2(0x1234,0x5678));\n    x = ((x>>8U)^x.yx)*1103515245U;\n    x = ((x>>8U)^x.yx)*1103515245U;\n    return vec2(x)/float(0xffffffffU);\n}\n\nvec3 shpereRandom(float n)\n{\n  vec2 h = hash(n);\n  float z = h.x * 2.0 -1.0;\n  float t = radians(360.) * h.y;\n  float v = sqrt(1.0-z*z);\n  return vec3(v*cos(t), v*sin(t), z);\n}\n\nvec3 randomCircuit(float t, float n)\n{\n    vec3 p = vec3(0);\n    for (int i=0; i<6; i++)\n    {\n      p += shpereRandom(n) * cos(t) + shpereRandom(n*2.356) * sin(t);\n      n +=12.78; t *= 1.36456;\n    }\n    return p;\n}\n\nfloat deStar(vec2 p)\n{\n  float a = radians(72.); \n  p = rotate(floor(0.5 + atan(p.x, p.y) /a) *a) *p;\n  return dot(abs(p), normalize(vec2(2, 1)));\n}    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    float A=5.,B=3.;\n    TIME =floor(iTime/(A+B))*A+ min(A,mod(iTime,(A+B)));\n    float t = clamp(0.,B,mod(iTime-A,(A+B)))/B;\n    t = t * t;\n    vec3 ro = vec3(0,0,5);\n    ro.xz = rotate(sign(mod(iTime/(A+B),2.)-1.0) * radians(360.)*t) * ro.xz;\n    vec3 rd = lookat(-ro,vec3(0,1,0))*normalize(vec3(p,2));\t\n    vec3 col = hsv(0.7,0.3,0.3)*p.y*p.y;\n    col = mix(col,texture(iChannel0, rd).xyz, 0.3);\n    const float maxd = 10.0, precis = 0.001;\n\tfloat z = 0.0, d;\n \tfor(int i = 0; i < 32; i++)\n \t{\n    \tz += d = min(map(ro + rd * z),10.);\n    \tif(d < precis || z > maxd) break;\n  \t}\n    if(d < precis)\n    {\n\t  \tvec3 p = ro + rd * z;\n\t \tvec3 nor = calcNormal(p);\n    \tvec3 li = normalize(vec3(1));\n        col = doColor(p);\n        float dif = clamp(dot(nor, li), 0.3, 1.0);\n        float amb = max(0.5 + 0.5 * nor.y, 0.0);\n        float spc = pow(clamp(dot(reflect(normalize(p - ro), nor), li), 0.0, 1.0), 50.0);\n        col *= dif * amb ;\n        col += spc;\n        col = clamp(col,0.0,1.0);\n  \t}\n    \n    for(float i=0.;i<12.;i++)\n    for(float j=0.;j<7.;j++)\n    {\n        vec3 pos = randomCircuit(0.6*TIME-i*0.03,2532.+25698.*j);\n        vec3 c = billboard(ro, rd, pos, vec3(0,0,1), pos.xzy);\n        if (c.z<z)\n        {\n    \t    float de = deStar(c.xy*10.);\n    \t    col = mix(col,\n    \t            hsv(TIME*0.5+i/20.0+j/5.0,0.7,1.0) * pow(0.8,i),\n    \t            smoothstep(1.,0.8,de)*pow(0.8,i)\n    \t        );\n        }\n    }\n    fragColor = vec4(col, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}