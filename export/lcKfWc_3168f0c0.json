{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)cos(h*6.3+vec3(0,23,21))*.5+.5\n#define Q(p) p *= 2.*r(round(atan(p.x, p.y) * 4.) / 4.)\n#define r(a) mat2(cos(a + asin(vec4(0,1,-1,0))))\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O-=O;\n   \n      // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = C/iResolution.xy;\n// Position of fragment relative to centre of screen\n    vec2 pos = 0.5 - uv;\n    // Adjust y by aspect for uniform transforms\n    pos.y /= iResolution.x/iResolution.y;\n   \n    //**********         Glow        **********\n   \n    // Equation 1/x gives a hyperbola which is a nice shape to use for drawing glow as\n    // it is intense near 0 followed by a rapid fall off and an eventual slow fade\n    float dist = 1.0/length(pos);\n   \n    //**********        Radius       **********\n   \n    // Dampen the glow to control the radius\n    dist *= 0.1;\n   \n    //**********       Intensity     **********\n   \n    // Raising the result to a power allows us to change the glow fade behaviour\n    // See https://www.desmos.com/calculator/eecd6kmwy9 for an illustration\n    // (Move the slider of m to see different fade rates)\n    dist = pow(dist, 0.8);\n   \n    // Knowing the distance from a fragment to the source of the glow, the above can be\n    // written compactly as:\n    // float getGlow(float dist, float radius, float intensity){\n    // return pow(radius/dist, intensity);\n// }\n    // The returned value can then be multiplied with a colour to get the final result\n       \n    // Add colour\n    vec3 col = dist * vec3(1.0, 2.5, 1.25);\n\n    // Tonemapping. See comment by P_Malin\n    col = 1.0 - exp( -col );\n    vec3 r=iResolution,p;  \n    for(float i=0.,g,e,l,s;\n        ++i<99.;\n        (e<.003)?O.xyz+=mix(r/r,cos(vec3(8,3,12)+g*(3.+sin(iTime*8.)*.2))*.5+.5,.8)*.9/i:p\n    )\n    {\n        p=g*vec3((C-.5*r.xy)/r.y,1);\n       \n        p.z-=5.5;\n         \n        p=R(p,normalize(vec3(1,3,3)),iTime*2.2);\n        p=abs(p)+.2;\n     \n        p.y>p.x?p=p.yxz:p;\n        p.z>p.x?p=p.zyx:p;\n        p.y>p.z?p=p.xzy:p;\n        s=2.;\n           \n        for(int j;j++<2;)\n            p=abs(p),\n            s*=l=2./min(dot(p,p),.8),\n            Q(p.xy);\n            p=p*l-vec3(2,2,2);\n        g+=e=length(p.xxzz)/s;\n    }\n    O.xyz=pow(O.xyz+col,vec3(.8,.9,1.3));\n}\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lcKfWc","date":"1734541604","viewed":63,"name":"green glow","username":"nayk","description":"remake fractal by gaz","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal","star","glow"],"hasliked":0,"parentid":"","parentname":""}}