{"ver":"0.1","info":{"id":"WtSGRc","date":"1560383329","viewed":320,"name":"Filter Shader","username":"Veggiebob","description":"Using a simple filter to do edge detection","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["filter","edge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3zn","filepath":"/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","previewfilepath":"/media/ap/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define d 0.002\n#define filter mat3(vec3(-1., -1., -1.), vec3(-1., 8., -1.), vec3(-1., -1., -1.))\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = 1.-uv.x;\n\n    // Time varying pixel color\n    \n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    vec3 colt = texture(iChannel0, vec2(uv.x, uv.y+d)).rgb;\n    vec3 colb = texture(iChannel0, vec2(uv.x, uv.y-d)).rgb;\n    vec3 coll = texture(iChannel0, vec2(uv.x-d, uv.y)).rgb;\n    vec3 colr = texture(iChannel0, vec2(uv.x+d, uv.y)).rgb;\n    \n    \n    vec3 coltr = texture(iChannel0, vec2(uv.x+d, uv.y+d)).rgb;\n    vec3 coltl = texture(iChannel0, vec2(uv.x-d, uv.y+d)).rgb;\n    vec3 colbr = texture(iChannel0, vec2(uv.x+d, uv.y-d)).rgb;\n    vec3 colbl = texture(iChannel0, vec2(uv.x-d, uv.y-d)).rgb;\n    \n    /*\n\tedge filter:\n\t[\n\t\t-1, -1, -1,\n\t\t-1,  8, -1,\n\t\t-1, -1, -1\n\t]\n\tmat3(-1, -1, -1, -1, 8, -1, -1, -1, -1)\n\tsobel filter:\n\t[\n\t\t-1, -2, -1,\n\t\t 0,  0,  0,\n\t\t+1, +2, +1\n\t*/\n    vec3 hi = vec3(1., 0., 1.)+vec3(0.5, 0.5, 0.5);\n\tcol = \n        //filter[0] * vec3(coltl, colt, coltr) + \n        //filter[1] * vec3(coll, col, colr) + \n        //filter[2] * vec3(colbl, colb, colbr)\n        -1.*coltl +  0.*colt +  1.*coltr +\n        -2.*coll  +  0.*col  +  2.*colr  +\n        -1.*colbl +  0.*colb +  1.*colbr\n    ;\n    vec3 sobely = \n        -1.*coltl +  0.*colt +  1.*coltr +\n        -2.*coll  +  0.*col  +  2.*colr  +\n        -1.*colbl +  0.*colb +  1.*colbr;\n    vec3 sobelx = \n        -1.*coltl + -2.*colt + -1.*coltr +\n         0.*coll  +  0.*col  +  0.*colr  +\n         1.*colbl +  2.*colb +  1.*colbr;\n    col = vec3(length(sobelx+sobely));\n    //col = texture(iChannel1, reflect(normalize(col), vec3(0., 0., 1.))).rgb; \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}