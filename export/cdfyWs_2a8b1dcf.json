{"ver":"0.1","info":{"id":"cdfyWs","date":"1687289009","viewed":71,"name":"Frosty Nebula animated","username":"altunenes","description":"Inspired by FabriceNeyret2, I was searching/reading about the Julia set and then found bellow site:\nhttp://paulbourke.net/fractals/sinjulia/ :octopusballoon:\nso I wanted to use math from this site to create something fun :)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","mandelbrot","reproduction"],"hasliked":0,"parentid":"msfcWj","parentname":"Frosty Nebula"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265;\nconst int MAX_ITER = 23;\nconst float BOUND = 23.0;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord / iResolution.xy) * 4.0 - vec2(2.0);\n\n    vec2 z = uv;\n\n    vec2 c = vec2(1.0,.8) * (0.3 + vec2(sin(iTime),cos(.001*iTime)));\n\n    int i;\n    for (i = 0; i < MAX_ITER; i++) {\n        vec2 sin_z = vec2(sin(z.x) * cosh(z.y), cos(z.x) * sinh(z.y));\n        z = vec2(c.x*sin_z.x - c.y*sin_z.y, c.x*sin_z.y + c.y*sin_z.x);\n        \n        if (dot(z, z) > BOUND * BOUND) {\n            break;\n        }\n    }\n\n    float iter_ratio = float(i) / float(MAX_ITER);\n    vec3 col = 0.5 + 0.5 * cos(iTime + vec3(0.6, 0.8, 1.0) + 5.0 * PI * vec3(iter_ratio));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}