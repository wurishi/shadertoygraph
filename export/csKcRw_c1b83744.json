{"ver":"0.1","info":{"id":"csKcRw","date":"1695905620","viewed":51,"name":"Fishy!","username":"MetaMuffin","description":"An underwater scene with nice ultra-thin fish and seagras.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["sea","fish"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash1( vec2 p )\n{\n    p  = 50.0*fract( p*0.3183099 );\n    return fract( p.x*p.y*(p.x+p.y) );\n}\n\nfloat hash1( float n )\n{\n    return fract( n*17.0*fract( n*0.3183099 ) );\n}\n\nvec2 hash2( vec2 p ) \n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    float n = 111.0*p.x + 113.0*p.y;\n    return fract(n*fract(k*n));\n}\n\nvec4 noised( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 w = fract(x);\n    #if 1\n    vec3 u = w*w*w*(w*(w*6.0-15.0)+10.0);\n    vec3 du = 30.0*w*w*(w*(w-2.0)+1.0);\n    #else\n    vec3 u = w*w*(3.0-2.0*w);\n    vec3 du = 6.0*w*(1.0-w);\n    #endif\n\n    float n = p.x + 317.0*p.y + 157.0*p.z;\n    \n    float a = hash1(n+0.0);\n    float b = hash1(n+1.0);\n    float c = hash1(n+317.0);\n    float d = hash1(n+318.0);\n    float e = hash1(n+157.0);\n\tfloat f = hash1(n+158.0);\n    float g = hash1(n+474.0);\n    float h = hash1(n+475.0);\n\n    float k0 =   a;\n    float k1 =   b - a;\n    float k2 =   c - a;\n    float k3 =   e - a;\n    float k4 =   a - b - c + d;\n    float k5 =   a - c - e + g;\n    float k6 =   a - b - e + f;\n    float k7 = - a + b + c - d + e - f - g + h;\n\n    return vec4( -1.0+2.0*(k0 + k1*u.x + k2*u.y + k3*u.z + k4*u.x*u.y + k5*u.y*u.z + k6*u.z*u.x + k7*u.x*u.y*u.z), \n                      2.0* du * vec3( k1 + k4*u.y + k6*u.z + k7*u.y*u.z,\n                                      k2 + k5*u.z + k4*u.x + k7*u.z*u.x,\n                                      k3 + k6*u.x + k5*u.y + k7*u.x*u.y ) );\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 w = fract(x);\n    \n    #if 1\n    vec3 u = w*w*w*(w*(w*6.0-15.0)+10.0);\n    #else\n    vec3 u = w*w*(3.0-2.0*w);\n    #endif\n    \n\n\n    float n = p.x + 317.0*p.y + 157.0*p.z;\n    \n    float a = hash1(n+0.0);\n    float b = hash1(n+1.0);\n    float c = hash1(n+317.0);\n    float d = hash1(n+318.0);\n    float e = hash1(n+157.0);\n\tfloat f = hash1(n+158.0);\n    float g = hash1(n+474.0);\n    float h = hash1(n+475.0);\n\n    float k0 =   a;\n    float k1 =   b - a;\n    float k2 =   c - a;\n    float k3 =   e - a;\n    float k4 =   a - b - c + d;\n    float k5 =   a - c - e + g;\n    float k6 =   a - b - e + f;\n    float k7 = - a + b + c - d + e - f - g + h;\n\n    return -1.0+2.0*(k0 + k1*u.x + k2*u.y + k3*u.z + k4*u.x*u.y + k5*u.y*u.z + k6*u.z*u.x + k7*u.x*u.y*u.z);\n}\nvec3 noised( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 w = fract(x);\n    #if 1\n    vec2 u = w*w*w*(w*(w*6.0-15.0)+10.0);\n    vec2 du = 30.0*w*w*(w*(w-2.0)+1.0);\n    #else\n    vec2 u = w*w*(3.0-2.0*w);\n    vec2 du = 6.0*w*(1.0-w);\n    #endif\n    \n    float a = hash1(p+vec2(0,0));\n    float b = hash1(p+vec2(1,0));\n    float c = hash1(p+vec2(0,1));\n    float d = hash1(p+vec2(1,1));\n\n    float k0 = a;\n    float k1 = b - a;\n    float k2 = c - a;\n    float k4 = a - b - c + d;\n\n    return vec3( -1.0+2.0*(k0 + k1*u.x + k2*u.y + k4*u.x*u.y), \n                 2.0*du * vec2( k1 + k4*u.y,\n                            k2 + k4*u.x ) );\n}\n\nconst mat3 m3  = mat3( 0.00,  0.80,  0.60,\n                      -0.80,  0.36, -0.48,\n                      -0.60, -0.48,  0.64 );\nconst mat3 m3i = mat3( 0.00, -0.80, -0.60,\n                       0.80,  0.36, -0.48,\n                       0.60, -0.48,  0.64 );\nconst mat2 m2 = mat2(  0.80,  0.60,\n                      -0.60,  0.80 );\nconst mat2 m2i = mat2( 0.80, -0.60,\n                       0.60,  0.80 );\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 w = fract(x);\n    #if 1\n    vec2 u = w*w*w*(w*(w*6.0-15.0)+10.0);\n    #else\n    vec2 u = w*w*(3.0-2.0*w);\n    #endif\n\n    float a = hash1(p+vec2(0,0));\n    float b = hash1(p+vec2(1,0));\n    float c = hash1(p+vec2(0,1));\n    float d = hash1(p+vec2(1,1));\n    \n    return -1.0+2.0*(a + (b-a)*u.x + (c-a)*u.y + (a - b - c + d)*u.x*u.y);\n}\nfloat fbm_4( in vec2 x )\n{\n    float f = 1.9;\n    float s = 0.55;\n    float a = 0.0;\n    float b = 0.5;\n    for( int i=0; i<4; i++ )\n    {\n        float n = noise(x);\n        a += b*n;\n        b *= s;\n        x = f*m2*x;\n    }\n\treturn a;\n}\nfloat fbm_4( in vec3 x )\n{\n    float f = 2.0;\n    float s = 0.5;\n    float a = 0.0;\n    float b = 0.5;\n    for( int i=0; i<4; i++ )\n    {\n        float n = noise(x);\n        a += b*n;\n        b *= s;\n        x = f*m3*x;\n    }\n\treturn a;\n}\n\nvec2 smoothstepd( float a, float b, float x)\n{\n\tif( x<a ) return vec2( 0.0, 0.0 );\n\tif( x>b ) return vec2( 1.0, 0.0 );\n    float ir = 1.0/(b-a);\n    x = (x-a)*ir;\n    return vec2( x*x*(3.0-2.0*x), 6.0*x*(1.0-x)*ir );\n}\nvec2 mirror_y(vec2 p) { return vec2(p.x,abs(p.y)); }\n\nfloat smin( float a, float b, float k )\n{\n    float h = max(k-abs(a-b),0.0);\n    return min(a, b) - h*h*0.25/k;\n}\n\nvec3 seagras(vec3 col, vec2 uv, float i) {\n    float off = fbm_4(vec3(iTime * 0.1, uv.x * 5., uv.y + i)) * 1.5;\n    float ww = fract(uv.x * 10. + off);\n    float scale = 2. - 0.4 * i;\n    float v = abs(ww * scale - scale * 0.5) - uv.y;\n    v = smoothstep(0.,0.4,v);\n    return mix(col, vec3(0.1, 0.1 + 0.1 * float(i), 0.1), v);\n}\nvec3 stone(vec3 col, vec2 uv) {\n    float v = 1. - step(0.2, length(uv));\n    float n = length(uv-vec2(0.1,-0.1));\n    return mix(col, vec3(n * 0.8), v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ruv = fragCoord/iResolution.xy;\n    vec2 uv = ruv + vec2(fbm_4(vec3(iTime * 0.08, ruv * 1.)) * 0.05,\n                         fbm_4(vec3(iTime * 0.08, ruv * 1. + vec2(2312.))) * 0.05);\n    \n    vec3 col = vec3(0.05,0.2,0.7) * (0.8 + 0.2 * fbm_4(uv * 5.));\n   \n    col += 0.1 * vec3(fbm_4(vec2((ruv.x-ruv.y*0.5) * 10., iTime * 0.5)));\n    col *= smoothstep(-1.,1.,uv.y); \n\n    col = seagras(col,uv, 0.);\n    col = stone(col, uv - vec2(0.8, 0.2));\n    col = seagras(col,uv, 1.);\n    \n    for (float i = 0.; i < 3.; i++) {\n        float t = (iTime * (0.2 + 0.102 * i)) + i;\n        vec2 c = (uv - vec2(sin(t) * 0.4 + 0.5,0.2 + i * 0.2 + 0.1 * sin(t*1.2))) * vec2(1. / cos(t), 1.);\n        float fish = 1. - step(1.,smin(1./0.06 * length(c),\n                                  smin(1./0.04 * length(c + vec2(0.06,0.)),\n                                       1./0.02 * length(mirror_y(c) + vec2(0.1,-0.03)),\n                                       0.5),\n                                  0.5));\n        vec3 fishc = mix(vec3(0.8,0.5,i*0.2), vec3(0.2,0.2,0.2), fbm_4(c * vec2(50.,5.)));\n        col = mix(col, fishc, fish);\n    }\n    \n    col = seagras(col,uv, 2.);\n    col = seagras(col,uv, 3.);\n    col = seagras(col,uv, 4.);\n    \n    col *= vec3(0.8,1.0,1.2);\n    \n    col *= pow(0.5 - abs(ruv.x-0.5), 0.2);\n    col *= pow(0.5 - abs(ruv.y-0.5), 0.2);\n    \n    col += 0.02 * vec3(noise(ruv*1234.), noise(ruv*1235.), noise(ruv*1236.));\n    \n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}