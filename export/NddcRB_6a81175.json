{"ver":"0.1","info":{"id":"NddcRB","date":"1654047264","viewed":85,"name":"Draw Triangle for 3D world","username":"zhangzhuo","description":"Draw Triangle for 3D world","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float crs(vec2 p1, vec2 p2) {\n    return p1.x*p2.y - p1.y*p2.x;\n}\n\nbool drawt(vec2 fragCoord, vec2 a, vec2 b, vec2 c) {\n    vec2 ba = a-b;\n    vec2 pa = b-fragCoord;\n    float normal1 = crs(normalize(pa), normalize(ba));\n     \n    vec2 cb = b-c;\n    vec2 bp = fragCoord - b;\n    float normal2 = crs(normalize(cb), normalize(bp));\n    \n    vec2 ac = c-a;\n    vec2 cp = fragCoord-c;\n    float normal3 = crs(normalize(ac), normalize(cp));\n    \n      \n    return normal1>0.0 && normal2>0.0 && normal3>0.0;\n}\n\nmat4 LookAt( vec3 eye, vec3 target, vec3 up) {\n    vec3 focal = normalize(target - eye);\n    vec3 r = normalize(cross(focal,up));\n    vec3 u = cross(r,focal);\n    vec3 f = -focal;\n    return mat4(\n        r.x, r.y, r.z, dot(-r,eye),\n        u.x, u.y, u.z, dot(-u,eye),\n        f.x, f.y, f.z, dot(-f,eye),\n        0,   0,   0,    1\n    );\n}\n\nmat4 glFrustum( \n    float b, float t, float l, float r, \n    float n, float f) \n{ \n    // set OpenGL perspective projection matrix\n   return mat4(\n      2.0 * n / (r - l),0.0,0.0,0.0,\n      0.0,2.0 * n / (t - b),0.0,0.0,\n      (r + l) / (r - l),(t + b) / (t - b),-(f + n) / (f - n),-1,\n      0.0,0.0,-2.0 * f * n / (f - n),0.0\n    );\n} \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 a = vec3(iResolution.x/2.0,iResolution.y/2.0,0.0);\n    vec3 b = vec3(iResolution.x/2.0+200.0,iResolution.y/2.0+200.0,0.0);\n    vec3 c = vec3(iResolution.x/2.0+300.0,iResolution.y/2.0,0.0);\n    \n    mat4 look = LookAt(vec3(iResolution.x/2.0,iResolution.y/2.0,200.0)\n    ,vec3(iResolution.x/2.0,iResolution.y/2.0,-100.0)\n    ,vec3(0.0,1.0,0.0));\n    \n    mat4 frust = glFrustum(0.0, iResolution.y, 0.0, iResolution.x, 200.0, 200.0);\n    \n    vec2 a1 = (frust *look* vec4(a,0.0)).xy;\n    vec2 b1 = (frust *look * vec4(b,0.0)).xy;\n    vec2 c1 = (frust *look * vec4(c,0.0)).xy;\n    \n    if(drawt(fragCoord,a1.xy,b1.xy,c1.xy)){\n        fragColor=vec4(1.0,1.0,0.5,1.0);\n    }\n    //fragColor = vec4((look * vec4(a,0.0)).z+0.5, 0.0,0.0,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}