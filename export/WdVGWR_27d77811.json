{"ver":"0.1","info":{"id":"WdVGWR","date":"1570015772","viewed":103,"name":"Rotating checkers","username":"kamihaze","description":"Rotating overlapping checkers with miscalculated rotation matrix.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["checker","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float shades = 4.5;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = vec2(sin(iTime),cos(0.8*iTime));\n    vec2 uv =2.0*(\n        (fragCoord/iResolution.xy)-vec2(0.5))\n    \t*vec2(iResolution.x/iResolution.y,1.0) + pos;\n\n    mat4 m4= transpose(mat4( \n         \t 0.0, 0.0, 0.0, 0.0,\n    \t\t 0.0, 0.0, 0.0, 0.0,\n             0.0, 0.0, 0.0, 0.0,\n             0.0, 0.0, 0.0, 0.0 ));\n    \n    // Rotation matrix\n    mat2 m = transpose( mat2(\n        \t1.2*cos(1.2 * iTime), -sin(1.3 * iTime),\n        \t    sin(0.9 * iTime),  cos(1.0 * iTime)\n        )\n\t);\n        \n\tvec2 res = (uv * m);\n\n    \n    float y=abs(res.y);\n    float x=abs(res.x);\n    \n    float r,g,b;\n    \n    //Have it rounding errors to create stepping\n    r=y;\n    r *= shades;\n    r  = ceil(r);\n    r /= shades;\n    \n    b=x;\n    b *= shades;\n    b  = ceil(b);\n    b /= shades;\n    \n\tg=max(r,b)*b*r; //r*b*0.9;\n   \n   \n    vec3 outcol=vec3( r, g, b );\n    // Output to screen\n    fragColor = vec4(outcol,1.0);\n\n}","name":"Image","description":"","type":"image"}]}