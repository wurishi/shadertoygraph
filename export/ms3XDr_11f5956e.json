{"ver":"0.1","info":{"id":"ms3XDr","date":"1680778363","viewed":163,"name":"Trippy Fractal zoomer","username":"seven_dc","description":"Infinite block zoomer again copying from great yonatan. thx.\nOptimized to run better, but introduced lots of artifacts that I kind of turned into trippy colors.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["infiniteblockzoomer"],"hasliked":0,"parentid":"md33D2","parentname":"Infinite block zoomer"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://twitter.com/zozuar/status/1631115224827691009?s=20\n\nfloat PI = 3.1415926538;\n\nvec3 hsv(float h, float s, float v){\n    vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));\n    return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);\n}\n\nmat3 rotate3D(float angle, vec3 axis){\n    vec3 a = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float r = 1.0 - c;\n    return mat3(\n        a.x * a.x * r + c,\n        a.y * a.x * r + a.z * s,\n        a.z * a.x * r - a.y * s,\n        a.x * a.y * r - a.z * s,\n        a.y * a.y * r + c,\n        a.z * a.y * r + a.x * s,\n        a.x * a.z * r + a.y * s,\n        a.y * a.z * r - a.x * s,\n        a.z * a.z * r + c\n    );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{     \n\n    float t = iTime;\n    vec4 color;\n    // around 60. is 30 fps on poor mac book pro\n    float detail = 98.; // less is more detail bigger is more performance\n    \n    float i,e,R,s;\n    vec3 q,p,d = vec3((.5*iResolution.xy-fragCoord.xy)/iResolution.y,.5);\n    float iLimit = (140.-detail);\n    float iLimit2 = (115.-detail);\n    \n    for( q = --q * rotate3D(PI, hsv(t/16.,.4,1.)); i++ < iLimit ; i > iLimit2 ? e+=.0001,d-=d+1.: d){\n        color += log(e*R+1.)/150.; p = q+=d*e*R*.46;\n        p = vec3(log(R=length(p))-t/19.*PI,e=-p.z/R,atan(p.x,p.y));\n        for( s=1. ; s<6e2; s+=s ) e += exp(cos(PI*(dot(cos(p*s),p/p)))-1.)/s;\n    }\n    color.r += q.r*.00000001;\n    color.g += q.b*.00000003;\n    color.b += p.g*.5;\n         \n    fragColor = vec4(color.rgb, 1.);\n}","name":"Image","description":"","type":"image"}]}