{"ver":"0.1","info":{"id":"dtXfWM","date":"1692991474","viewed":124,"name":"floating angel","username":"nayk","description":"space stars galaxy love and peace","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["spacestarsgalaxyloveandpeace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float radial(vec2 pos, float radius)\n{\n    float result = length(pos)-radius;\n    result = fract(result*1.0);\n    float result2 = 1.0 - result;\n    float fresult = result * result2;\n    fresult = pow((fresult*5.5),10.0);\n    fresult = clamp(0.0,1.0,fresult);\n    return fresult;\n}\n\nconst float PI = 3.14;\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, s, -s, c );\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) - .5;\n\tfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + 1.07)) * 2.2;\n    \n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\nuv *= rotationMatrix( 10.0 * -iTime );\n\tfloat v1, v2, v3;\n\tv1 = v2 = v3 = 0.0;\n\t\n    \n    vec2 c_uv = uv;\n    vec2 o_uv = uv * 0.80;\n    float gradient = radial(c_uv*rotationMatrix( 1.0 * iTime ), iTime*1.5);\n    vec2 fuv = mix(uv,o_uv,gradient);\n    vec3 col = texture(iChannel0,fuv).xyz;\n    \n\tfloat s = 0.0;\n\tfor (int i = 0; i < 90; i++)\n\t{\n\t\tvec3 p = s * vec3(uv,.1);\n\t\tp.xy *= ma;\n        vec2 trs = vec2(cos(iTime*0.1),sin(iTime*0.3));\n p.xy+=trs;\n\t\tp += vec3(0.22, .03, s - 2.5 - sin(iTime * .13) * .1);\n\t\tfor (int i = 0; i < 8; i++)\tp = abs(p) / dot(p,p) - 0.659;\n\t\tv1 += dot(p,p) * .0015 * (0.8 + sin(length(uv.xy * 13.0) + .5  - iTime * .2));\n\t\tv2 += dot(p,p) * .0013 * (1.5 + sin(length(uv.xy * 14.5) + 1.2 - iTime * .3));\n\t\tv3 += length(p.xy*10.) * .0003;\n\t\ts  += .035;\n        \n\t}\n\t\n\tfloat len = length(uv*rotationMatrix( 1.0 * -iTime ));\n    \n\tv1 *= smoothstep(.7, .0, len);\n    v1+=radial(col.xy*cos(iTime),2.2);\n\tv2 *= smoothstep(.5, .0, len);\n\tv3 *= smoothstep(.9, .0, len);\n\t\ncol+= vec3( v3 * (1.5 + sin(iTime * .2) * .4),\n\t\t\t\t\t(v1 + v3) * .3,\n\t\t\t\t\t v2) + smoothstep(0.2, .0, len) * .85 + smoothstep(.0, .6, v3) * .3;\n\n\tfragColor=vec4(min(pow(abs(col), vec3(1.2)), 1.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}