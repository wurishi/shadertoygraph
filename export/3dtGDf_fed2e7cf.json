{"ver":"0.1","info":{"id":"3dtGDf","date":"1648779852","viewed":122,"name":"testShader111111","username":"15198054594","description":"testShader1111111111","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["testshader111111111"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 color1 = vec3(1.0, 0.0, 0.0);\nvec3 backgoundColor = vec3(0.5, 0.0, 0.0);\n\nvec3 color(vec2 uv){\n\n    vec2 center = vec2(0.5);\n\n   if( length(uv - center) < 0.5 ){\n      return color1;\n   }else{\n      return backgoundColor;\n   }\n}\n\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * vec2(960.0/540.0, 1.0) + (cos(iTime)/10.0);\n    \n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(color(uv), 1.0);\n\n}","name":"Image","description":"","type":"image"}]}