{"ver":"0.1","info":{"id":"wdcyWs","date":"1601972751","viewed":130,"name":"INKTtober - Keep","username":"Flopine","description":"Fourth day of the Inktober challenge! For 2020 I'm using the Inkt-Tober list: https://twitter.com/Trish_Argh/status/1304878524797419525","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","sound","octopus","twitch","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGzn","filepath":"/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","previewfilepath":"/media/ap/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define TAU 6.283185\n\n#define time iTime\n#define dt(speed) fract(time*speed)\n#define swanim(speed) floor(sin(dt(speed)*TAU)+1.)\n\n#define moda(puv,rep) float a=mod(atan(puv.y,puv.x),TAU/rep)-(TAU/rep)*0.5;puv=vec2(cos(a),sin(a))*length(puv)\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define hash21(x) fract(sin(dot(x,vec2(12.5,32.4)))*1284.4)\n\n\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat cyl (vec3 p, float r, float h)\n{return max(length(p.xy)-r,abs(p.z)-h);}\n\nfloat caps( vec3 p, vec3 a, vec3 b, float r )\n{\n    vec3 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length (pa - ba*h) - r*h;\n}\n\n#define anim (swanim(0.1) < 0.5)\nfloat g1 = 0.;\n\nfloat SDF (vec3 p)\n{\n    if (anim) p.yz *= rot(PI/2.);\n\n    float s = length(p-vec3(0.,2.,0.))-0.6;\n    g1 += 0.01/(0.01+s*s);\n    float body = caps(p,vec3(0.,8.,0.),vec3(0.,4.5,0.), 1.);\n\n    p.xz *= rot(sin(p.y*0.5+dt(0.1)*TAU));\n    moda(p.xz, 7.);\n    p.z += cos(p.y*2.+dt(.5)*TAU)*0.1;\n    p.x -= 1.2-s*0.4;\n    float d = smin(cyl(p.xzy, 0.05+p.y*0.06, 4.),cyl(p.xzy-vec3(0.,0.,4.),0.25, 0.1),0.5);\n\n    d = min(d, s);\n\n    d = smin(d,body,0.3);\n\n    return d;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n    float dither = hash21(uv);\n\n    vec3 ro;\n    if (anim) ro = vec3(0.001,0.001,-1.2);\n    else   ro = vec3(0.001,3.5,-5.); \n\n    vec3 rd = normalize(vec3(uv,1.)), p = ro, col = vec3(0.,0.,0.05);\n\n    bool hit = false;\n    float shad, d = 0.;\n\n    for (float i=0.; i<64.;i++)\n    {\n        d = SDF(p);\n        if (d<0.01)\n        {\n            hit=true; shad = i/64.; break;\n        }\n        d *= 0.5+dither*0.2;\n        p += d*rd;\n    }\n\n    if (hit) col = vec3(shad);\n    \n    col += g1*vec3(length(uv)*0.5,0.05,0.3)*texture(iChannel0, vec2(0.0001,0.25)).r*2.;\n\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}