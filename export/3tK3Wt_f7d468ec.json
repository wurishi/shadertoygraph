{"ver":"0.1","info":{"id":"3tK3Wt","date":"1580182021","viewed":120,"name":"Voronoi Collection","username":"sbrown2","description":"Trying to make something cool with voronoi pattern.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi","cellular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float N21(vec2 p){\n\tfloat d = fract(cos(605.43*fract(sin(p.x*p.y*6725.)))*9284.);\n    \n\treturn d;\n}\nvec2 N22(vec2 p){\n    float r = N21(p);\n\treturn vec2(r,N21(vec2(r)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n    uv.x*=iResolution.x/iResolution.y;\n    vec3 col = vec3(0.);\n    \n    // Naive Voronois\n\tfloat m = 0.;\n    //create 50 random numbers in a loop\n    float t = iTime;\n    float minD = 100.;\n    float closestcell = 0.;\n    if(false){\n    for(int i = 0; i <= 50; i++){\n    \tvec2 n = N22(vec2(i));\n        n-=.5;\n        n.x*=iResolution.x/iResolution.y;\n        n*=.9;\n        \n        vec2 p = sin(n*t); //-1 to 1 \n        p/=2.;\n        p.x*=iResolution.x/iResolution.y;\n        float d = length(uv-p);\n        \n    \tm+=smoothstep(.015,.01,d);\n        if(d<minD){\n        minD = d;\n        closestcell = float(i);\n        }\n        \n    }\n\n    m= closestcell/50.;\n    //naive voronois finished\n    \n    }else{\n    \tuv*=5.;\n        vec2 gv = fract(uv)-.5;\n        vec2 id = floor(uv);\n        \n        for(float x = -1.; x <=1.; x++){\n            for(float y=-1.; y<=1.; y++){\n            \tvec2 offset = vec2(x,y);\n            \tvec2 n = N22(vec2(id+offset));\n\n                vec2 p = .5*sin(n*t)+offset; //-1 to 1 \n                \n                float d = length(gv-p);\n                if(d<minD){\n                minD = d;\n                //closestcell = float(i);\n                }\n        \n           }\n        }\n        col=vec3(1.-minD)*vec3(.9,.6,.8);\n        /*if(gv.x<-.48 || gv.x > .48 || gv.y<-.48 || gv.y >.48){\n        \tcol = vec3(1.);\n        }*/\n    }\n    \n    \n    \n    \n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}