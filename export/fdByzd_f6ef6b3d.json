{"ver":"0.1","info":{"id":"fdByzd","date":"1643905640","viewed":90,"name":"That way","username":"hamberge","description":"Learning shaders.  Messing with ways to make simple geometry.  A pointing arrow that moves with time.  ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["lines","subtractivegeometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 normuv = fragCoord.yx/iResolution.xy;\n    vec2 uv = vec2(normuv.x+.2, normuv.y + sin(iTime * 6.) * .3 - .5);\n    \n    float diagonal = (uv.x + uv.y);\n    float ddiagonal = (uv.x - uv.y);\n\n    float tlline = 1. - smoothstep(diagonal, diagonal + .01, .5);\n    float trline = 1. - smoothstep(ddiagonal, ddiagonal + .01, .5);\n    \n    //left band\n    float lband = step(uv.x, .2);\n    //right band\n    float rband = 1. - step(uv.x, .8);\n    //top band\n    float upband = 1. - step(uv.y, .8);\n    //left (subtractive) rectangle\n    float lrect = clamp(step(uv.x, .4) - step(uv.y, .2), 0., 1.);\n    //right (subtractive) rectangle\n    float rrect = clamp(1. - step(uv.x, .6) - step(uv.y, .2), 0., 1.);\n    \n    vec3 col = vec3(tlline - trline - lband - rband - upband - lrect - rrect);\n    //vec3 colorful = vec3(col.x - normuv.x - .4, col.y - normuv.y, 0.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}