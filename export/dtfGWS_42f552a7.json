{"ver":"0.1","info":{"id":"dtfGWS","date":"1672304456","viewed":117,"name":"Marble World","username":"deamonpog","description":"What if your whole world is full of marble stones!\nGo Full Screen and keep looking at the center of screen for about 10 seconds, you get immersed into it. (happens to me lol)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["marble","mosaic","marbles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//MIT License Copyright (c) 2022 Chathura Jayalath\n\n#define TAU 6.283185\n#define PI  3.141593\n\n#define SIN(x) (sin(mod(x,TAU)))\n#define COS(x) (cos(mod(x,TAU)))\n\n// Noise function\nfloat N31(vec3 p)\n{\n    return fract(SIN(p.x * 997.0 + p.y * 9011.0 + p.z * 20551.0) * 1051.0);\n}\n\n// Rotate around Y axis\nvec3 RotateAroundY(vec3 v, float angle)\n{\n    float c = COS(angle), s = SIN(angle);\n    mat3 m = mat3(c, 0, s, 0, 1, 0, -s, 0, c);\n    return v * m;\n}\n\n// Rotate around Z axis\nvec3 RotateAroundZ(vec3 v, float angle)\n{\n    float c = COS(angle), s = SIN(angle);\n    mat3 m = mat3(c, -s, 0, s, c, 0, 0, 0, 1);\n    return v * m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    //uv *= 2.0;\n    \n    vec3 col = vec3(0);\n    \n    vec3 ro = vec3(0,0,0);\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1.0) - ro);\n    \n    float angle = iTime / 10.0;\n    ro = RotateAroundY(ro, angle);\n    rd = RotateAroundY(rd, angle);\n    angle = iTime / 13.0;\n    ro = RotateAroundZ(ro, angle);\n    rd = RotateAroundZ(rd, angle);\n    \n    // sky as a globe with center = (0,0,0) and radius = 1.0\n    float sr = 1.0; // sky radius\n    \n    vec3 uvw = normalize(ro + rd * sr); // world uvw\n    \n    float divs = 20.0;\n    vec3 luvw = fract(uvw * divs);\n    luvw = luvw * luvw * (3.0 - 2.0 * luvw);\n    vec3 id = floor(uvw * divs);\n    \n    float glow = 0.0;\n    for(int z = -1; z <= 1; ++z)\n    {\n        for(int y = -1; y <= 1; ++y)\n        {\n            for(int x = -1; x <= 1; ++x)\n            {\n                vec3 offset = vec3(x,y,z);\n                float n = N31(id + offset);\n                vec3 localNeighbor = luvw - offset - (vec3(n, fract(n*11.0), fract(n*43.0)) - 0.5);\n                float d = length(localNeighbor);\n                glow = 0.05 / d;\n                glow *= smoothstep(0.4, 0.3, d);\n                float light = fract(n * 131.0);\n                col += glow * vec3(1.0, 0.5, 1.0) * light;\n            }\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}