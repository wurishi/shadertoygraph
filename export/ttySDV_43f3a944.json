{"ver":"0.1","info":{"id":"ttySDV","date":"1583601734","viewed":138,"name":"Dancing snowflake","username":"KAJAJJJ","description":"Some description","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["snowflake"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DrawFunc(float y, float f)\n{\n    return y < f - 0.01 || (y > f + 0.01) ? 0.0 : 1.0;\n}\n\nfloat Point1(vec2 xy, vec2 p)\n{\n    float d = length(xy - p) * 10.0;\n    return max(exp(-(d*d)) * 0.25, 0.0);\n}\n\nfloat Point(vec2 xy, vec2 p)\n{\n    xy -= p;\n    xy *= 2.0;\n    float col = 0.0;\n    float t = iTime;\n \n    for (int j = 0; j < 5; ++j)\n    {\n        for (int i = 0; i < 8; ++i)\n        {\n            float theta = 6.28 / 8.0 * float(i) + float(j) * (sin(t) * 0.5 + 0.5);\n            vec2 p = vec2(cos(theta), sin(theta)) * (float(j) * 0.1 + 0.1) * (cos(t) * 0.5 + 1.0);\n            col += Point1(xy, p);\n        }\n    }\n    \n    return col;\n}\n\nfloat Line(vec2 uv, vec2 start, vec2 end)\n{\n    uv.y = uv.y * 2.0 - 1.0;\n    return uv.y < sin(uv.x * 10.0) - 0.01 || (uv.y > sin(uv.x * 10.0) + 0.01) ? 0.0 : 1.0;\n}\n\nfloat Rect(vec2 uv, vec2 width, vec2 height)\n{\n    return length(max(abs(uv - vec2(0.5)) - width, 0.0)) > 0.0 ? 0.0 : 1.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float x = (uv.x - 0.5) * 4.0;\n    float y = (uv.y * 2.0 - 1.0) * 1.0;\n    \n    vec2 xy = vec2(x, y);\n    \n    vec3 col = vec3(0.0);\n    float t = iTime;\n    \n    for (int j = 0; j < 10; ++j)\n    {\n        for (int i = 0; i < 8; ++i)\n        {\n            float theta = 6.28 / 8.0 * float(i) + float(10-j) * (t)*0.5;\n            vec2 p = vec2(cos(theta), sin(theta)) * (float(j) * 0.1 + 0.1) * (cos(t) + 2.0);\n            vec3 c = vec3(1.0 / 8.0 * float(i), 1.0 - 1.0 / 8.0 * float(i), 1.0 / 10.0 * float(j));\n            col += c * Point(xy, p);\n        }\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}