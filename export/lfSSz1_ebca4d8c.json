{"ver":"0.1","info":{"id":"lfSSz1","date":"1706022952","viewed":36,"name":"Aura-mk","username":"yattering","description":"Rotates layers and combines by addition.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 uv, float rad)\n{\n  float c = cos(rad); \n  float s = sin(rad);\n\n  return mat2(c, s, -s, c) * (uv - 0.5) + 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv_c = 2.0 * uv - 1.0;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float angle = iTime;\n    \n    vec4 color1 = texture(iChannel1, rotate(uv, 0.27*angle)).rrrr * vec4(1.0, 0.5, 1.0, 1.0);\n    vec4 color2 = texture(iChannel1, rotate(uv, -0.11*angle)).rrrr * vec4(1.0, 1.0, 0.5, 1.0);\n    vec4 color3 = texture(iChannel1, rotate(uv, 0.19*angle)).rrrr * vec4(0.5, 1.0, 1.0, 1.0);\n\n    // Output to screen\n    fragColor = (color1 + color2 + color3) * 0.7 * (1.0 - dot(uv_c, uv_c));\n    //fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}