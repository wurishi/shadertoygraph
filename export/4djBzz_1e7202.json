{"ver":"0.1","info":{"id":"4djBzz","date":"1499212544","viewed":651,"name":"Bechamel","username":"leon","description":"Raymarching experiment ","likes":42,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","xray","bechamel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Leon 05 / 07 / 2017\n// using lines of code of IQ, Mercury, LJ, Koltes, Duke\n\n#define PI 3.14159\n#define TAU PI*2.\n#define t iTime*.3\n#define DITHER\n#define STEPS 30.\n#define BIAS 0.01\n#define DIST_MIN 0.01\n\nmat2 rot (float a) { float c=cos(a),s=sin(a);return mat2(c,-s,s,c); }\nfloat sphere (vec3 p, float r) { return length(p)-r; }\nfloat cyl (vec2 p, float r) { return length(p)-r; }\nfloat torus( vec3 p, vec2 s ) {\n  vec2 q = vec2(length(p.xz)-s.x,p.y);\n  return length(q)-s.y;\n}\nfloat smin (float a, float b, float r) {\n    float h = clamp(.5+.5*(b-a)/r,0.,1.);\n    return mix(b,a,h)-r*h*(1.-h);\n}\nfloat rand(vec2 co) { return fract(sin(dot(co*0.123,vec2(12.9898,78.233))) * 43758.5453); }\nvec3 camera (vec3 p) {\n    p.yz *= rot((PI*(iMouse.y/iResolution.y-.5)*step(0.5,iMouse.z)));\n    p.xz *= rot((PI*(iMouse.x/iResolution.x-.5)*step(0.5,iMouse.z)));\n    p.yz *= rot(-PI*.5);\n    return p;\n}\n\nfloat map (vec3 p) {\n    vec3 p1 = p;\n    float geo = 1.;\n    float cy = 0.2;\n    float repeat = 8.;\n    p1.xy *= rot(length(p)*.5);\n    for (float i = 0.; i < repeat; ++i) {\n        p1.yz *= rot(.3+t*0.5);\n        p1.xy *= rot(.2+t);\n        p1.xz *= rot(.15+t*2.);\n        \n       \tp1.xy *= rot(p.x*.5+t);\n        \n        // gyroscope\n        geo = smin(geo, torus(p1,vec2(1.+i*.2,.02)), .5);\n        \n        // tentacles cylinders\n        geo = smin(geo, cyl(p1.xz,.04), .5);\n        \n        // torus along the cylinders\n        vec3 p2 = p1;\n        p2.y = mod(p2.y,cy)-cy/2.;\n        geo = smin(geo, torus(p2,vec2(.4,.01)), .2);\n    }\n    return geo;\n}\n\nvoid mainImage( out vec4 color, in vec2 coord )\n{\n\tvec2 uv = (coord.xy-.5*iResolution.xy)/iResolution.y;\n    vec3 eye = camera(vec3(uv,-3));\n    vec3 ray = camera(normalize(vec3(uv,.5)));\n    vec3 pos = eye;\n    float shade = 0.;\n    #ifdef DITHER\n\tvec2 dpos = ( coord.xy / iResolution.xy );\n\tvec2 seed = dpos + fract(iTime);\n\t#endif \n    for (float i = 0.; i < STEPS; ++i) {\n\t\tfloat dist = map(pos);\n        if (dist < BIAS) {\n            shade += 1.;\n        }\n        #ifdef DITHER\n        dist=abs(dist)*(.8+0.2*rand(seed*vec2(i)));\n        #endif \n        dist = max(DIST_MIN,dist);\n        pos += ray*dist;\n    }\n\tcolor = vec4(shade/(STEPS-1.));\n}","name":"Image","description":"","type":"image"}]}