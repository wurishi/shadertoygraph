{"ver":"0.1","info":{"id":"tlKXWh","date":"1676011965","viewed":78,"name":"m_stepnoise","username":"mirumoreem","description":"temp","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["temp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lengthManhattan(vec2 p){\n        return abs(p.x)+abs(p.y);\n}\n\nfloat Poly(vec2 p,float n){\n  float a = atan(p.x,p.y)+3.14;\n  float r = 3.14*2.0/n;\n  return cos(floor(.5+a/r)*r-a)*length(p)/cos(r*.5);\n}\n\n\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    vec3 color = vec3(0.0);\n    \n    uv*=1.0;\n    \n    vec2 i =floor(uv);\n    vec2 f = fract(uv);\n    \n    float m_dist = 2.0;\n    vec2 m_point;\n    \n    for(int y = -1; y<= 1; y ++){\n        for(int x = -1; x<=1; x++){\n            vec2 neighbor = vec2(float(x), float(y));\n            vec2 point = random2(i + neighbor);\n            point = 0.5 + 0.5 *sin(iTime + 6.2831*point);\n            vec2 pos = neighbor + point -f;\n            float dist = length(pos);\n            //dist = lengthManhattan(pos);\n            //dist = Poly(pos,3.0);\n            \n            m_dist = min(m_dist, m_dist*dist);\n            \n            if(dist < m_dist){\n                m_dist = dist;\n                m_point = point;\n            }\n        }\n    }\n    \n     float r = 0.25;\n    \n    color += dot(m_point, vec2(0.2, 0.7));\n    //color = vec3(m_dist);\n    color = step (0.05, vec3(m_dist))*r ;\n    color += step (0.075, vec3(m_dist))*r;\n    color += step (0.1, vec3(m_dist))*r;\n    color += step (0.125, vec3(m_dist))*r;\n    color += step (0.15, vec3(m_dist))*r;\n    \n    vec3 colorA = vec3(0.63, 0.74, 0.78);\n    vec3 colorB = vec3(0.65, 0.78, 0.98);\n    color *= mix(colorB, colorA, color);\n    \n    vec3 sh = (smoothstep(0.07,0.075,m_dist) - step (0.075, vec3(m_dist)))*r;\n    sh += (smoothstep(0.095,0.1,m_dist) - step (0.1, vec3(m_dist)))*r;\n    sh += (smoothstep(0.12,0.125,m_dist) - step (0.125, vec3(m_dist)))*r;\n    sh += (smoothstep(0.1,0.15,m_dist) - step (0.15, vec3(m_dist)))*r;\n    sh*= 0.2;\n\n    // Output to screen\n    fragColor = vec4(color-sh,1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}