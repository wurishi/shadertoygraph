{"ver":"0.1","info":{"id":"tscyD7","date":"1601030560","viewed":137,"name":"grid texture basic","username":"alarch","description":"basic grid texture","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gridtexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 aspect = (iResolution.xy / iResolution.y);\n\n    uv *= aspect;\n    \n    float gridColor;\n    \n    float ax,ay;\n    float width = 0.005;\n    float height = width * aspect.y;\n    \n    gridColor = 0.0;\n    \n    float gridSize = 0.1;\n    for(float i=0.0-gridSize/2.0; i<2.0; i = i+gridSize)\n    {\n        ax = i-(width*2.0); // Subtract twice the linewidth to get symmetrical grid\n        ay = i; // Subtract ??? the lineheight to get symmetrical?? grid\n    \tgridColor +=smoothstep(ax-width,ax,uv.x)-smoothstep(ax,ax+width,uv.x);\n        gridColor +=smoothstep(ay-height,ay,uv.y)-smoothstep(ay,ay+height,uv.y);\n    }\n    \n    fragColor = vec4(vec3(gridColor),1.0);\n}","name":"Image","description":"","type":"image"}]}