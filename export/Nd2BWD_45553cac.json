{"ver":"0.1","info":{"id":"Nd2BWD","date":"1646322805","viewed":183,"name":"Median filter 3x3","username":"MickAlmighty","description":"Press LPM to see the difference.\nBased on Implementing Median Filters in XC4000E FPGAs J. Smith 1996\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["filter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 p1 = textureOffset(iChannel0, uv, ivec2(-1, -1)).xyz;\n    vec3 p2 = textureOffset(iChannel0, uv, ivec2(-1, 0)).xyz;\n    vec3 p3 = textureOffset(iChannel0, uv, ivec2(-1, 1)).xyz;\n    vec3 p4 = textureOffset(iChannel0, uv, ivec2(0, -1)).xyz;\n    vec3 p5 = textureOffset(iChannel0, uv, ivec2(0, 0)).xyz;\n    vec3 p6 = textureOffset(iChannel0, uv, ivec2(0, 1)).xyz;\n    vec3 p7 = textureOffset(iChannel0, uv, ivec2(1, -1)).xyz;\n    vec3 p8 = textureOffset(iChannel0, uv, ivec2(1, 0)).xyz;\n    vec3 p9 = textureOffset(iChannel0, uv, ivec2(1, 1)).xyz;\n\n    vec3 op1 = min(p2, p3);\n    vec3 op2 = max(p2, p3);\n    vec3 op3 = min(p5, p6);\n    vec3 op4 = max(p5, p6);\n    vec3 op5 = min(p8, p9);\n    vec3 op6 = max(p8, p9);\n    vec3 op7 = min(p1, op1);\n    vec3 op8 = max(p1, op1);\n    vec3 op9 = min(p4, op3);\n    vec3 op10 = max(p4, op3);\n    vec3 op11 = min(p7, op5);\n    vec3 op12 = max(p7, op5);\n    vec3 op13 = min(op8, op2);\n    vec3 op14 = max(op8, op2);\n    vec3 op15 = min(op10, op4);\n    vec3 op16 = max(op10, op4);\n    vec3 op17 = min(op12, op6);\n    vec3 op18 = max(op12, op6);\n    vec3 op19 = max(op7, op9);\n    vec3 op20 = min(op15, op17);\n    vec3 op21 = max(op15, op17);\n    vec3 op22 = min(op16, op18);\n    vec3 op23 = max(op13, op20);\n    vec3 op24 = min(op23, op21);\n    vec3 op25 = min(op14, op22);\n    vec3 op26 = max(op19, op11);\n    vec3 op27 = min(op24, op25);\n    vec3 op28 = max(op24, op25);\n    vec3 op29 = max(op26, op27);\n    vec3 op30 = min(op29, op28);\n    \n    if (iMouse.z > 0.0)\n    {\n        fragColor = vec4(p5, iMouse.z);\n    }\n    else\n    {\n        fragColor = vec4(op30, 1.0);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}