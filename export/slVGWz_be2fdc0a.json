{"ver":"0.1","info":{"id":"slVGWz","date":"1637530476","viewed":114,"name":"2 halves","username":"do","description":"na","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//two halves\n//2021\n//do\n\n#define main() mainImage(out vec4 fragColor,in vec2 fragCoord)\n#define R iResolution\n#define t iTime\n\n#define AA 2\n\n#define EPS 0.0001\n#define STEPS 245\n#define NEAR 0.\n#define FAR 3.\n\nconst int seed = 121393;\n\nconst float pi = radians(180.);\nconst float phi =  (1.+sqrt(5.))/2.;\n\nfloat h11(float p) {\n    uvec2 n = uint(int(p)) * uvec2(1391674541U,seed);\n    uint h = (n.x ^ n.y) * 1391674541U;\n    return float(h) * (1./float(0xffffffffU));\n}\n\nfloat h21(vec2 p) {\n    uvec2 n = uvec2(ivec2(p))*uvec2(1391674541U,seed);\n    uint h = (n.x^n.y) * 1391674541U;\n    return float(h) * (1./float(0xffffffffU));\n}\n\nvec2 h22(vec2 p) {\n    uvec2 n = uvec2(ivec2(p)) * uvec2(1391674541U,seed);\n    n = (n.x ^ n.y) * uvec2(1391674541U,seed);\n    return vec2(n) * (1./float(0xffffffffU));\n}\n\nfloat spiral(vec2 p,float s) {\n    float d = length(p);\n    float a = atan(p.x,p.y);\n    float l = log(d)/.618 +a;\n    return sin(l*s);\n}\n\nvec3 fmCol(float t,vec3 a,vec3 b,vec3 c,vec3 d) {\n    return a + b * cos((radians(180.)*2.0) * (c * t + d));\n}\n\nvec2 opu(vec2 d1,vec2 d2) {\n    return (d1.x < d2.x) ? d1 : d2;\n} \n\nfloat extr(vec3 p,float d,float h) {\n    vec2 w = vec2(d,abs(p.z) - h);\n    return min(max(w.x,w.y),0.) + length(max(w,0.)); \n} \n\nfloat n3(vec3 x) {\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f * f * (3.0 - 2.0 * f);\n    float n = p.x + p.y * 157.0 + 113.0 * p.z;\n\n    return mix(mix(mix(h11(n + 0.0),h11(n + 1.0),f.x),\n           mix(h11(n + 157.0),h11(n + 158.0),f.x),f.y),\n           mix(mix(h11(n + 113.0),h11(n + 114.0),f.x),\n           mix(h11(n + 270.0),h11(n + 271.0),f.x),f.y),f.z);\n}\n\nfloat f3 (vec3 p) {\n    float f = 1.;\n    mat3 m = mat3(vec2(.8,.6),h11(150.),\n                  vec2(-.6,.8),h11(125.),\n                  vec2(-.8,.6),h11(100.));\n\n    f += .5    * n3(p); p = m*p*2.01;\n    f += .25   * n3(p); p = m*p*2.04;\n    f += .125  * n3(p); p = m*p*2.1;\n    f += .0625 * n3(p);\n    return f / .91;\n}\n\nfloat dd(vec3 p) {\n    vec3 q = vec3(f3(p+vec3(2.1,1.,2.)),\n                  f3(p+vec3(4.,1.,3.)),\n                  f3(p+vec3(2.,5.,6.)));\n    vec3 r = vec3(f3(p + 4. * q + vec3(4.5,2.4,5.5)),\n                  f3(p + 4. * q + vec3(2.25,5.,2.)),\n                  f3(p + 4. * q + vec3(3.5,1.5,6.)));\n    return f3(p + 4. * r);\n}\n\nmat2 rot(float a) {\n\n    float c = cos(a);\n    float s = sin(a);\n    \n    return mat2(c,-s,s,c);\n}\n \nvec3 raydir(vec2 uv,vec3 ro,vec3 ta,float fov) {\n\n     vec3 f = normalize(ta - ro);\n     vec3 r = normalize(cross(vec3(0.0,1.0,0.0),f));\n     vec3 u = normalize(cross(f,r));\n\n     vec3 d = normalize(uv.x * r\n     + uv.y * u + f * fov);  \n\n     return d;\n}\n\nvec2 scene(vec3 p) { \n\nvec2 res = vec2(1.0,0.0);\nvec3 q = p;\n\nfloat r = 1./phi;\n\n//it breaks\nfloat f = .005,h = .005;\n\nfloat d = spiral(p.xz+vec2(-.0061,-.009),1.)+r,g; \nres = opu(res,vec2(\n    extr(p.xzy,d*f,h+.01),0.));\n\ng = spiral(-q.xy,1.)+r;\nres = opu(res,vec2(\n    extr(q,g*f,h),1.));\n\nreturn res;\n\n}\n\nvec2 trace(vec3 ro,vec3 rd) {\n    \n    float d = -1.0;\n    float s = NEAR;\n    float e = FAR; \n\n    for(int i = 0; i < STEPS; i++) {\n\n        vec3 p = ro + s * rd;\n        vec2 dist = scene(p);\n   \n        if(dist.x < EPS || e <  dist.x ) { break; }\n        s += dist.x;\n        d = dist.y;\n\n        }\n \n        if(e < s) { d = -1.0; }\n        return vec2(s,d);\n\n}\n\nfloat shadow(vec3 ro,vec3 rd ) {\n\n    float res = 1.0;\n    float t = 0.005;\n    float ph = 1e10;\n    \n    for(int i = 0; i < 64; i++ ) {\n        \n        float h = scene(ro + rd * t  ).x;\n\n        float y = h * h / (2. * ph);\n        float d = sqrt(h*h-y*y);         \n        res = min(res,212.*d/max(0.,t-y));\n        ph = h;\n        t += h;\n    \n        if(res < .001 || t > 3.) { break; }\n\n        }\n\n        return clamp(res,0.0,1.0);\n\n}\n\nvec3 calcNormal(vec3 p) {\n\n    vec2 e = vec2(1.0,-1.0) * EPS;\n\n    return normalize(vec3(\n    vec3(e.x,e.y,e.y) * scene(p + vec3(e.x,e.y,e.y)).x +\n    vec3(e.y,e.x,e.y) * scene(p + vec3(e.y,e.x,e.y)).x +\n    vec3(e.y,e.y,e.x) * scene(p + vec3(e.y,e.y,e.x)).x + \n    vec3(    e.x    ) * scene(p + vec3(    e.x    )).x\n\n    ));\n    \n}\n\nvec3 render(vec3 ro,vec3 rd) {\n\n    vec2 d = trace(ro,rd); \n\n    vec3 p = ro + rd * d.x;\n    vec3 n = calcNormal(p);\n    vec3 r = reflect(rd,n);    \n\n    vec3 linear = vec3(0.12);\n\n    float amb = sqrt(clamp(.5+.5*n.y,0.,1.));\n    float fre = pow(clamp(1.+dot(n,rd),0.,1.),2.);\n    float ref = smoothstep(-2.,2.,r.y);\n\n    vec3 col = vec3(.5);\n    vec3 bg_col = vec3(1.);\n    col = bg_col * max(1.,rd.y);\n\n    vec3 l = normalize(vec3(-23.,12.,3.));\n\n    vec3 h = normalize(l - rd);  \n    float dif = clamp(dot(n,l),0.0,1.0);\n    float spe = pow(clamp(dot(n,h),0.0,1.0),16.) * dif * \n    (.04 + 0.9 * pow(clamp(1. + dot(h,rd),0.,1.),5.));\n\n    if(d.y >= 0.) {\n\n        dif *= shadow(p,l);\n        ref  *= shadow(p,r);\n\n        linear += dif * vec3(1.);\n        linear += amb * vec3(0.01);\n        linear += fre * vec3(.01,.02,.01);\n        linear += spe * vec3(0.01,0.01,.05)*ref;\n\n        if(d.y == 1.) {\n\n            p *= 5.25;\n            col += fmCol(spiral(p.xy+\n            dd(p.xzy+spiral(-p.xy,1.)),2.),\n                \n                   //coefficient\n                   vec3(6.,.1,.5),\n          \n                   //amplitude\n                   vec3(1.,-1.,-1.5),\n\n                   //frequency\n                   vec3(.5,1.,1.),\n            \n                   //phase\n                   vec3(pi,-pi,pi));\n        } else { \n            col = vec3(1.,0.,0.);\n            col += 1.5+spiral(p.xz,1.);\n        }\n        \n          col = col * linear;\n          col = mix(col,bg_col+vec3(2.)\n          ,1.-exp(-.95*d.x*d.x*d.x)); \n\n}\n\nreturn col;\n}\n\nvoid main() { \n\nvec3 color = vec3(0.);\n\nvec3 ta = vec3(0.);\nvec3 ro = vec3(.12,.245,.25);\nro.xz *= rot(t*.05);\n\nfor(int k = 0; k < AA; ++k) {\n    for(int l = 0; l < AA; ++l) { \n\nvec2 o = vec2(float(l),float(k))/ float(AA) -.5;\nvec2 uv = (2.* (fragCoord.xy+o) - R.xy)/R.y;\n\nvec3 rd = raydir(uv,ro,ta,2.);\nvec3 col = render(ro,rd);       \n\ncol = pow(col,vec3(.4545));\ncolor += col;\n   \n    }\n}\n\ncolor /= float(AA*AA);\nfragColor = vec4(color,1.0);\n\n}\n","name":"Image","description":"","type":"image"}]}