{"ver":"0.1","info":{"id":"msXGW7","date":"1666211679","viewed":143,"name":"Fake Bicubic sampling","username":"fishy","description":"Totally fake and totally cool B) I bet this could be used to make a cool bloom function","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fake","bicubic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MODE 0\n\nvec2 snapUV(vec2 p, float str, vec2 scale)\n{\n    p *= scale;\n    p += 0.5;\n    vec2 fp = floor(p);\n    \n    return (vec2(fp.x + smoothstep(0.0, 1.0, fract(p.x)), fp.y + smoothstep(0.0, 1.0, fract(p.y)))-0.5)/scale;\n    \n}\n\nvec4 bicubicTextureLod(sampler2D tex, vec2 uv, int lod)\n{\n    return textureLod(iChannel0, snapUV(uv, 1.4, vec2(textureSize(iChannel0, lod))), float(lod));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    int lod = 0;\n    \n    \n    uv.y *= iResolution.y/iResolution.x;\n    \n    \n    uv *= MODE == 0? sin(iTime*0.5)*0.05 + 0.3 : 0.5;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(bicubicTextureLod(iChannel0, uv, lod).rrr,1.0);\n}","name":"Image","description":"","type":"image"}]}