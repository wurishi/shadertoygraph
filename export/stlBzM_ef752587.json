{"ver":"0.1","info":{"id":"stlBzM","date":"1650667865","viewed":282,"name":"Simple Line Waves","username":"SnoopethDuckDuck","description":"Saw this post, tried to do the same but got distracted: \nhttps://twitter.com/andrevenancio/status/1514417812969865217\n\nThe line equation is basically: y = sin(t) + x * cos(t)\nIt goes up and down and is tangent to 2 cos waves, fun to modify\n","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["waves","lines","waveywavelines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    // (better to use fragCoord for a pixelated version)\n    // uv = floor(0.25 * iResolution.y * uv) / (0.25 * iResolution.y);\n    \n    float s;   \n    float m = mod(floor(0.5 * iTime), 10.) + 1.;\n    \n    float n = 40.;\n    for (float i = 0.; i < n; i++) {\n        float t = 0.2 * iTime + 2. * pi * i / n; \n        \n        // Uncomment for other versions\n        float y = sin(m * t + 11. * uv.x) -  4. * uv.x * cos(t * 0.5);\n        // y = sin(m * t + 11. * uv.x) -  4. * uv.x * cos(t);\n         y = sin(t + 11. * uv.x) -  4. * uv.x * cos(t * 0.5);\n        \n        float k = 1. / iResolution.y;\n        s = max(s, smoothstep(-k, k, -abs(uv.y - 0.25 * y) + k));\n    }\n\n    vec3 col = vec3(s);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}