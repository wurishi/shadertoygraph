{"ver":"0.1","info":{"id":"md2SWz","date":"1670177099","viewed":234,"name":"moire fractal test","username":"sleeplessmonk","description":"tests\n","likes":7,"published":1,"flags":4,"usePreview":0,"tags":["2d","fractal","sound","mandelbrot","reactive","music","kaleidoscope","visualiser","snowflake","set","koch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n// calculate screen coordinates\nvec2 uv = fragCoord.xy / iResolution.xy;\nuv -= 0.5;\nuv.x *= iResolution.x / iResolution.y;\n\n// calculate moire pattern\nvec2 moire = vec2(length(uv), atan(uv.x, uv.y));\n\n// calculate fractal geometry\nfloat fractal = 0.0;\nfor(int i = 5; i < 70; i++)\n{\n    fractal += .25 * abs(sin(moire.x * 5.0 + iTime));\n}\n\n// calculate psychedelic colors\nvec3 color = vec3(0.0, 0.0, 0.0);\ncolor += vec3(1.0, 0.5, 0.0) * sin(moire.y * 12.0 + fractal);\ncolor += vec3(0.0, 1.0, 0.5) * cos(moire.x * 24.0 + fractal);\ncolor += vec3(0.5, 0.0, 1.0) * sin(moire.y * 24.0 + fractal);\n\n// output final color\nfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}