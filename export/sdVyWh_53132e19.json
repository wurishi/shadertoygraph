{"ver":"0.1","info":{"id":"sdVyWh","date":"1654821251","viewed":214,"name":"Ripples, with simplex textures","username":"AShaderBeginner","description":"Learnt from\nhttps://thebookofshaders.com/11/\nthough I didn't use any random.\n\nOh and, I don't know how to change the previews of a shader.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["simplex","ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FREQ 30.0\n#define SPD 0.05\n\nvec2 skew(float x, float y){\n    return vec2(1.1547 * x, 0.5 * x + y);\n}\n\nvec2 unskew(float x, float y){\n    return vec2(0.86602 * x , y - 0.43302 * x);\n}\n\nbool inWave(vec2 p){\n    float d = length(p);\n    return sin((d - iTime * SPD) * FREQ) > 0.7;\n}\n\nfloat paint(vec2 pos){\n    // if(inWave(pos)) return 1.0;\n    \n    float sidelen = 1.0 / (10.0 + iTime * (3.0 + iTime / 100.0) * 2.0);\n    vec2 pos2 = skew(pos.x, pos.y) / sidelen;\n    \n    float ix = floor(pos2.x) * sidelen;\n    float iy = floor(pos2.y) * sidelen;\n    float cx = ceil(pos2.x) * sidelen;\n    float cy = ceil(pos2.y) * sidelen;\n    float fx = fract(pos2.x);\n    float fy = fract(pos2.y);\n    \n    vec2 p1 = unskew(ix, iy);\n    vec2 p2 = unskew(cx, cy);\n    \n    //NOTE: This is probably a bad idea.\n    //      But it'll all be sorted out by the compiler and hardware optimizations, so don't worry.\n    float s = step(fy - fx, 0.0);\n    vec2 p3 = unskew(ix * (1.0 - s) + cx * s,\n                     cy * (1.0 - s) + iy * s);\n    \n    return pow((inWave(p1) ? 0.5 : 0.0)\n               + (inWave(p2) ? 0.5 : 0.0)\n               + (inWave(p3) ? 0.5 : 0.0),\n               1.7);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 norm = (fragCoord - iResolution.xy * 0.5) / min(iResolution.x, iResolution.y);\n    fragColor.rgb = vec3(1.0 - paint(norm));\n}","name":"Image","description":"","type":"image"}]}