{"ver":"0.1","info":{"id":"MdjcDV","date":"1493937666","viewed":266,"name":"Burning Ship <-> Mandelbrot","username":"DonKarlssonSan","description":"Burning Ship <-> Mandelbrot Morph\n\"The difference between [Burning Ship] calculation and that for the Mandelbrot set is that the real and imaginary components are set to their respective absolute values before squaring at each iteration - Wikipedia","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","morph","burningship"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float xmin = -1.795;\n    float xmax = -1.715;\n    float ymin = 0.09;\n    float ymax = -0.089;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float x0 = (uv.x * (xmax - xmin) + xmin);\n    float y0 = (uv.y * (ymax - ymin) + ymin);\n    float x = 0.0;\n    float y = 0.0;\n    float mixAmount = cos(iTime/3.0)*0.5+0.5;\n    int iteration = 0;\n    const int max_iteration = 2000;\n    const float max_d_sq = 4.0;\n    float xtemp;\n    // while loops not supported on iPhone!!\n    // using for instead with a break condition\n    for(int i = 0; i < max_iteration; i++) {\n        xtemp = x*x - y*y + x0;\n        //y = 2.0*abs(x*y) + y0; // normal mandelbrot\n        y = 2.0*mix(abs(x*y), x*y, mixAmount) + y0;\n        x = xtemp;\n        iteration = i;\n        if(x*x + y*y > max_d_sq) \n            break;\n    }\n    float c = 1.0 - float(iteration)/float(max_iteration) * 35.0;\n    fragColor = vec4(mix(c, 0.0, mixAmount), 0.0, mix(0.0, c, mixAmount), 1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}