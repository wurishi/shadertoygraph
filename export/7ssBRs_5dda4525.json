{"ver":"0.1","info":{"id":"7ssBRs","date":"1645251146","viewed":155,"name":"Abominable Plasma","username":"oneshade","description":"I've forgotten what I was actually trying to do. Click with the mouse if the texture loads late and nothing appears.","likes":6,"published":3,"flags":32,"usePreview":0,"tags":["plasma","zoom","convolution","trippy","spin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // 4x scale\n    uv = (uv - 0.5) * 0.25 + 0.5;\n\n    //float y = uv.y - fract(iTime);\n    //uv.y += 1.0 * exp(-200.0 * y * y) * y;\n\n    fragColor = texture(iChannel0, uv);\n\n    // Weird colors\n    fragColor.rgb = cos(10.0 * fragColor.rgb);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(0.0);\n    if (iFrame == 0 || iMouse.z > 0.0) {\n        fragColor = texture(iChannel1, fragCoord / iResolution.xy);\n    }\n\n    else {\n        float rot = 0.02;// * cos(0.05 * iTime);\n        float co = cos(rot), si = sin(rot);\n        mat2 spin = mat2(co, si, -si, co);\n\n        // Move, spin, zoom\n        fragCoord -= vec2(cos(iTime), sin(iTime));\n        fragCoord = spin * (fragCoord - 0.5 * iResolution.xy) * 0.99 + 0.5 * iResolution.xy;\n\n        // Emboss convolution matrix\n        float emb = 0.3;//0.24;\n        mat3 kernel = mat3(emb,  0.0,  0.0,\n                           0.0,  1.0,  0.0,\n                           0.0,  0.0, -emb);\n\n        // Convolve\n        for (int i=-1; i < 2; i++) {\n            for (int j=-1; j < 2; j++) {\n                vec4 color = texture(iChannel0, (fragCoord + vec2(i, j)) / iResolution.xy);\n                float convWeight = kernel[j + 1][i + 1];\n                fragColor += color * convWeight;\n            }\n        }\n\n        // Normalize\n        //fragColor.rgb /= max(abs(fragColor.r), max(abs(fragColor.g), abs(fragColor.b)));\n        //fragColor.rgb = normalize(fragColor.rgb);\n        fragColor.rgb = exp2(normalize(log2(abs(fragColor.rgb) + 0.00001)));\n        fragColor.rgb /= max(abs(fragColor.r), max(abs(fragColor.g), abs(fragColor.b)));\n        //fragColor.rgb *= 0.993;\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}