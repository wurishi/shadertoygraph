{"ver":"0.1","info":{"id":"sljcRz","date":"1649089679","viewed":116,"name":"XOR Snake","username":"LoganOracio","description":"WIP","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["snake","xor","white","black"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool circle(vec2 uv,vec2 center, float size)\n{\n    return length(uv-center)>size;\n}\nvec2 bezier(vec2 a, vec2 b, vec2 c,float d)\n{\n    return mix(mix(a,b,d),mix(b,c,d),d);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pix_l = 1.0/iResolution.xy;\n    vec2 uv = pix_l*fragCoord;\n    \n    vec2 points[32];\n    \n    bool o = true;\n    for(int i = 0; i < 32;i++)\n    {\n        points[i] = texture(iChannel0,vec2(pix_l.x*float(i+1),pix_l.y)).xy;\n    }\n    \n    uv.x *= iResolution.x/ iResolution.y;\n    uv -= vec2(iResolution.x/ iResolution.y/2.0,.5);\n    for(int i = 0; i <32; i++)\n    {\n        float p = pow(float(i),1.2);\n        o = o^^circle(uv,0.5*points[i]*vec2(iResolution.x/ iResolution.y,1.0),0.07-0.001*p);\n    }\n    fragColor = vec4(o);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pix_l = 1.0/iResolution.xy;\n    vec2 uv = pix_l*fragCoord;\n    \n    if(iTime<0.5)\n    {\n        fragColor = vec4(0.0);\n    }\n    else\n    {\n        fragColor = vec4(0.0);\n        if(uv.y<pix_l.y)\n        {\n            if(uv.x<pix_l.x)\n            {\n                fragColor = vec4(cos(iTime*1.45132)+0.5*cos(iTime*3.012),sin(iTime*1.215464)+0.5*sin(iTime*3.422),0.0,1.0);\n            }\n            else\n            {\n                fragColor = mix(texture(iChannel0,uv+pix_l*vec2(-1.0,0.0)),texture(iChannel0,uv),0.8);\n                fragColor = mix(fragColor,texture(iChannel0,pix_l),0.002);\n            }\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}