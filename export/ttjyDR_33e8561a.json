{"ver":"0.1","info":{"id":"ttjyDR","date":"1594155117","viewed":349,"name":"Sharpness filter with intensity","username":"palash","description":"Simple sharpness filter with intensity. Move mouse up down for intensity.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["convolution","sharpness","intensity"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// from https://www.shadertoy.com/view/llXGWf\n\n// Sharpness kernel\n// -x   -x    -x\n// -x  x*8+1  -x\n// -x   -x    -x\n\nvec3 texsample(const int x, const int y, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy;\n\treturn texture(iChannel0, uv).xyz;\n}\n\nvec3 texfilter(in vec2 fragCoord, in float intensity)\n{\n    vec3 sum = texsample(-1, -1, fragCoord) * -intensity\n             + texsample(-1,  0, fragCoord) * -intensity\n             + texsample(-1,  1, fragCoord) * -intensity\n             + texsample( 0, -1, fragCoord) * -intensity\n             + texsample( 0,  0, fragCoord) * (intensity * 8. + 1.) // sum should always be +1\n             + texsample( 0,  1, fragCoord) * -intensity\n             + texsample( 1, -1, fragCoord) * -intensity\n             + texsample( 1,  0, fragCoord) * -intensity\n             + texsample( 1,  1, fragCoord) * -intensity;\n    \n\treturn sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float u = fragCoord.x / iResolution.x;\n    float m = iMouse.x / iResolution.x;\n    float i = iMouse.y / iResolution.y * 2.0;\n    \n    float l = smoothstep(0., 1. / iResolution.y, abs(m - u));\n    \n    vec2 fc = fragCoord.xy;\n    fc.y = iResolution.y - fragCoord.y;\n    \n    vec3 cf = texfilter(fc, i);\n    vec3 cl = texsample(0, 0, fc);\n    vec3 cr = (u < m ? cl : cf) * l;\n    \n    fragColor = vec4(cr, 1);\n}","name":"Image","description":"","type":"image"}]}