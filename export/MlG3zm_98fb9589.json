{"ver":"0.1","info":{"id":"MlG3zm","date":"1473828143","viewed":1375,"name":"ToyDivision","username":"seani","description":"Tried to recreate the classic Joy Division album art.\n\nhttps://en.wikipedia.org/wiki/Unknown_Pleasures","likes":38,"published":3,"flags":64,"usePreview":0,"tags":["2d","joydivision"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MsB3zW","filepath":"https://soundcloud.com/joewalsh1892/joy-divison-love-will-tear-us","previewfilepath":"https://soundcloud.com/joewalsh1892/joy-divison-love-will-tear-us","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//By Sean Irby\n//sean.t.irby@gmail.com\n\n\nvec2 wTopLeft = vec2(-0.5, 0.7);\nvec2 wBottomRight = vec2(0.5, -0.7);\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 p, float freq ){\n    float unit = 1.0/freq;\n    vec2 ij = floor(p/unit);\n    vec2 xy = mod(p,unit)/unit;\n    xy = .5*(1.-cos(3.14*xy));\n    float a = rand((ij+vec2(0.,0.)));\n    float b = rand((ij+vec2(1.,0.)));\n    float c = rand((ij+vec2(0.,1.)));\n    float d = rand((ij+vec2(1.,1.)));\n    float x1 = mix(a, b, xy.x);\n    float x2 = mix(c, d, xy.x);\n    return mix(x1, x2, xy.y);\n}\n\nfloat pNoise(vec2 p, int res){\n    float persistance = .5;\n    float n = 0.;\n    float normK = 0.;\n    float f = 9.;\n    float amp = 0.5;\n    int iCount = 0;\n    for (int i = 0; i<50; i++){\n        n+=amp*noise(p, f);\n        f*=2.;\n        normK+=amp;\n        amp*=persistance;\n        if (iCount == res) break;\n        iCount++;\n    }\n    float nf = n/normK;\n    return nf*nf*nf*nf;\n}\n\nfloat window(float x, float i)\n{\n\treturn smoothstep(wTopLeft.x+0.1, -0.1, x)*(1.0-smoothstep(0.1,wBottomRight.x-0.1, x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv =  2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n    float y = wTopLeft.y;\n    float inc = ((wTopLeft.y - wBottomRight.y) / 60.0);\n    float waveYLast = 0.0;\n    float waveY;\n    float thickness;\n    float ret = 0.0;\n    \n    //draw waveforms\n    if(wTopLeft.x < uv.x && uv.x < wBottomRight.x)\n    {\n        for(float i = 0.0; i < 60.0; i++)\n        {\n            //generate waveform from audio fft and perlin noise\n            waveY = 2.5*texture(iChannel0, vec2(i/50.0, 0.25)).x;\n            waveY = waveY*pNoise(vec2(uv.x + iTime/5.0, y), 3)/2.0;\n\n            //apply window function\n            waveY = waveY*window(uv.x, i);\n\n            //add offset\n            waveY = mix(waveY+y, waveY, 0.5+0.5*sin(iTime*0.6));\n\n            //draw waveform\n            float thickness = 5./iResolution.y + abs(dFdx(waveY))*iResolution.y*0.0025;\n            ret = mix(ret, 1.0, 1.0-smoothstep(0.0, thickness, distance(vec2(uv.x, waveY), uv)));\n\n            \n            //mask y values below waveform\n            ret = ret*(smoothstep(waveY-thickness/2.0, waveY+thickness/2.0, uv.y));\n\n            //update loop vars\n            waveYLast = waveY;\n            y -= inc;\n        }\n    }\n    \n   \n    fragColor = vec4(1.0*ret, 1.0*ret, 1.0*ret, 1.0);\n}","name":"Image","description":"","type":"image"}]}