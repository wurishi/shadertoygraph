{"ver":"0.1","info":{"id":"llSfDR","date":"1515317599","viewed":381,"name":"Infrared Dynamo","username":"xdaimon","description":"fork of https://www.shadertoy.com/view/ltyXWR","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["sdf","inversion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Original shader by FabriceNeyret2: https://www.shadertoy.com/view/ltyXWR\n\n\n#define iRes (iResolution.xy)\n//#define iMouse (iMouse.xy)\n#define iTime (iTime/2.)\n#define iMouseDown (iMouse.z>0.)\n\n\nfloat scene(in vec3 t, out float closest) {\n\tvec3 ta;\n\tfloat x=1e9;\n\n\t#define mod4(t)         ( mod(t+2.,4.)-2. )\n\t#define setbox(t,h,w,d)  abs(t)/vec3(h,w,d)\n\t#define dbox(t,r)       ( max(t.x,max(t.y,t.z)) -(r) )\n\t#define dsphere(t,r)    ( length((t).xyz) -(r) )\n\t#define dcyl(t,r)       ( length((t).xy) -(r) )\n\t#define union(a,b)       min(a,b)\n\t#define sub(a,b)         max(a,-(b))\n\n\tvec3 b = t;\n\tt/=dot(t,t);\n    //t.xy+= vec2(sin(t.z));\n    \n\n    //t-=vec3(iTime/5.);\n    t.x -= iTime/2.;\n    //t.y -= iTime/3.;\n\n\tta.xy = floor( (t.xy+2.)/4. );\n\tt.z -= iTime * sign( mod(ta.x+ta.y,2.) - .5);\n\n\tta = setbox(mod4(t),1,3,16);\n\tx = dcyl(ta,.5);\n\n\tta = setbox(mod4(t),3,1,16);\n\tx = union(x, dcyl(ta,.5) );\n\n\tta = setbox(mod4(t+vec3( 0,0,2)), 6,2,1);\n\tx = sub(x,  dbox(ta,.27) );\n\n\tta = setbox(mod4(t-vec3(.8,0,0)),.6,3,2);\n\tx = sub(x,  dbox(ta,.5) );\n\n\tta = setbox(mod4(t+vec3(.8,0,0)),.6,3,2);\n\tx = sub(x,  dbox(ta,.5) );\n\n\tta = setbox(mod4(t               ),1,3,.5);\n\tx = sub(x,  dbox(ta,.55) );\n\n\tta = setbox(mod4(t-vec3(0,.8,2)),3,.6,2);\n\tx = sub(x,  dbox(ta,.5) );\n\n\tta = setbox(mod4(t+vec3(0,.8,2)),3,.6,2);\n\tx = sub(x,  dbox(ta,.5) );\n\n\tta = setbox(mod4(t-vec3( 0,0,1)),10,10,1);\n\tx = sub(x,  dbox(ta,.12) );\n\n\tta = setbox(mod4(t+vec3( 0,0,1)),10,10,1);\n\tx = sub(x,  dbox(ta,.12) );\n\n    // float x1 = dsphere(mod4(t),.3);\n    // closest = min(closest, x1);\n\n\treturn x;\n}\n\nfloat scene(in vec3 t) {\n\tfloat x;\n\treturn scene(t,x);\n}\n\nvec3 g(vec3 t, float d) {\n\tvec2 e = vec2(0,.001);\n\treturn normalize(vec3(scene(t+e.yxx), scene(t+e.xyx), scene(t+e.xxy)) - vec3(d));\n}\n\nvoid mainImage(out vec4 f, in vec2 fragCoord) {\n\tf -= f;\n\n\tvec2 m;\n\tif (iMouseDown)\n\t\tm = iMouse.xy/iRes*.5;\n\tif (m.x < .15) m.x=.15;\n\tm.y = -m.y*.6+.12;\n // m.y += .1;\n\tm.x += .5;\n\tm = (-m+.5);\n    \n\tvec2 uv = fragCoord/iRes*2.-1.;\n\tuv.y *= iRes.y/iRes.x;\n\tvec3 ro = vec3(m.x-.1,m.y,.1);\n\tvec3 ta = vec3(0);\n\tvec3 cu = normalize(ta-ro);\n\tvec3 cv = (cross(vec3(0,0,1), cu));\n\tvec3 cw = (cross(cv, cu));\n\tvec3 rd = (cu + cv*uv.x + cw*uv.y);\n\n\tfloat decay = 1.;\n  \tint iter = 0;\n\tfloat closest = 100000.;\n\tvec3 p = ro;\n\tfor (float i=1.; i>0.; i-=.005)  {\n\t\tfloat dist = scene(p, closest);\n\t\tif(dist<.01) {\n\t\t\tf += decay*vec4(pow(i,2.))*.5;\n\t\t\tf += pow(decay,3.)*vec4(1., .4, .4,1)/dot(p,p)/90.;\n\t\t\tdecay /= 2.;\n\t\t\titer += 1;\n\t\t\tif (iter == 2)\n\t\t\t\t\tbreak;\n\t\t\tvec3 n = g(p,dist);\n\t\t\trd = normalize(reflect(rd, n));\n\t\t\tp+=.1*n;\n\t\t}\n\t\tp += rd*dist*.02;\n        //p += rd*dist*.5 * min(1.,dot(p,p));\n\t}\n\tf += vec4(0,0,.3,0) * exp(-length(p))*(.5+.5*cos(iTime/2.)); // glow2 - thanks kuvkar !\n}\n","name":"Image","description":"","type":"image"}]}