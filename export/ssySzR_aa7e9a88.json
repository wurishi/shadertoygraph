{"ver":"0.1","info":{"id":"ssySzR","date":"1634234430","viewed":77,"name":"Square, Circle and a line","username":"leeinbar","description":"Drawing squares, circles and lines,\nsome anti aliasing as well.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["line","circle","antialiasing","square","shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(float value, float min1, float max1, float min2, float max2)\n{\n    return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nbool in_rect(vec2 pos, vec2 size, vec2 fragCoord)\n{\n    return (fragCoord.x >= pos.x && fragCoord.x <= pos.x+size.x\n        && fragCoord.y >= pos.y && fragCoord.y <= pos.y+size.y);\n}\n\nbool in_circle(vec2 center, float r, vec2 fragCoord)\n{\n    return (length(fragCoord - center) <= r);\n}\n\nfloat aa_circle(vec2 center, float r, float glow, vec2 fragCoord)\n{\n    return min(1.0, (-length(fragCoord - center) + r)*glow);\n}\n\nbool in_line(vec2 a, vec2 b, float t, vec2 fragCoord)\n{\n    if (b.x - a.x == 0.0)\n    {\n        float highest = max(a.y, b.y);\n        float lowest = min(a.y, b.y);\n        return (fragCoord.x <= a.x + t && fragCoord.x >= a.x - t && fragCoord.y <= highest && fragCoord.y >= lowest);\n    }\n    else\n    {\n        float slope = (b.y- a.y)/(b.x - a.x);\n        float c = a.y - slope*a.x;\n        float f_x = slope*fragCoord.x + c;\n       \n        float highest = max(a.x, b.x);\n        float lowest = min(a.x, b.x);\n        return (fragCoord.y <= f_x+t && fragCoord.y >= f_x-t && fragCoord.x <= highest && fragCoord.x >= lowest);\n    }\n}\n\nfloat aa_line(vec2 a, vec2 b, float t, vec2 fragCoord)\n{\n    if (b.x - a.x == 0.0)\n    {\n        float highest = max(a.y, b.y);\n        float lowest = min(a.y, b.y);\n        if (fragCoord.y <= highest && fragCoord.y >= lowest)\n        {\n            return map(abs(fragCoord.x - a.x), 0.0, t, 1.0, 0.0);\n        }\n        else\n        {\n            return 0.0;\n        }\n    }\n    else\n    {\n        float slope = (b.y- a.y)/(b.x - a.x);\n        t += abs(slope*0.7);\n        float c = a.y - slope*a.x;\n        float f_x = slope*fragCoord.x + c;\n        vec2 highest = vec2(max(a.x, b.x), max(a.y, b.y));\n        vec2 lowest = vec2(min(a.x, b.x), min(a.y, b.y));\n        if (fragCoord.x <= highest.x && fragCoord.y <= highest.y && fragCoord.x >= lowest.x && fragCoord.y >= lowest.y)\n        {\n            return map(abs(fragCoord.y - f_x), 0.0, t, 1.0, 0.0);\n        }\n        else\n        {\n            return 0.0;\n        }\n        //( && fragCoord.x <= highest && fragCoord.x >= lowest);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    vec2 p1 = vec2(100.0, 100.0);\n    float r = 0.0; //aa_line(p1, iMouse.xy, 2.0, fragCoord);\n    float g = in_circle(vec2(250.0, 250.0 + abs(sin(2.0*iTime))*27.0), 200.0, fragCoord) ? 1.0 : 0.0;\n    float b = aa_circle(vec2(655.0, 250.0 + abs(sin(2.0*iTime + 1.6))*27.0), 200.0, 1.0, fragCoord);\n    fragColor += vec4(r, g, b, 1.0);\n}","name":"Image","description":"","type":"image"}]}