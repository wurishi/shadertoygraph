{"ver":"0.1","info":{"id":"sscfDH","date":"1656440153","viewed":48,"name":"БуратиноБР","username":"BohdanRomanov","description":"Буратино","likes":1,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Нормализованные координаты пикселей (от -1 до 1)\n    vec2 uv  = 1.0-2.0*fragCoord/iResolution.xy;\n    \n    // x и y смещены относительно заданных вручную координат (от -1 до 1)\n     float   x1 = uv.x-0.2;\n     float   y1 = uv.y;\n    \n     float   x2 = uv.x-0.15;\n     float   y2 = uv.y-0.1;\n    \n     float   x3 = uv.x-0.2;\n     float   y3 = uv.y+0.8;\n    \n     float   x4 = uv.x-0.14;\n     float   y4 = uv.y+0.13;\n     \n     float   x5 = uv.x-0.32;\n     float   y5 = uv.y+0.32;\n    \n     float   x6 = uv.x-0.08;\n     float   y6 = uv.y+0.32;\n         \n     float   x7 = uv.x-0.2;\n     float   y7 = uv.y+0.32;\n     \n     float   x8 = uv.x+0.5;\n     float   y8 = uv.y+0.04;\n     \n     float   x9 = uv.x-0.143;\n     float   y9 = uv.y+0.15;\n     \n     float   x10 = uv.x-0.105;\n     float   y10 = uv.y-0.18;\n     \n     float   x11 = uv.x-0.2;\n     float   y11 = uv.y+0.8;\n     \n     float   x12 = uv.x-0.2;\n     float   y12 = uv.y-0.35;\n     \n     float   x13 = uv.x-0.2;\n     float   y13 = uv.y-1.0;\n     \n     float   x14 = uv.x-0.09;\n     float   y14 = uv.y-0.6;\n     \n     float   x15= uv.x-0.038;\n     float   y15 = uv.y-0.775;\n     \n     float   x16 = uv.x-0.015;\n     float   y16 = uv.y-0.95;\n    vec3 col = vec3(0.6,0.6,0.8);\n    // Проверка принадлежности точек окружности ,которая для каждого x и y задана выше\n    // Чтобы получить круг, я разделил каждый квадрат y (y * y) на значение, равное 2.8\n    float r = 0.2;\n           if ((y8<x8/10.0)&&(y8>x8/(-10.0))&&(x8<0.7)) {\n             col = vec3(1.0,0.8,0.2);\n           }\n           if (x1*x1+y1*y1/2.8 < r * r) {\n             col = vec3(1.0,0.8,0.2);\n           }\n          r = 0.06;\n           if (x2*x2+y2*y2/2.8 < r * r) {\n             col = vec3(0.9,0.7,0.6);\n           }\n          r = 0.04;\n           if (x3*x3+y3*y3/2.8 < r * r) {\n             col = vec3(1.0,0.0,0.0);\n           }\n          r = 0.05;\n           if (x4*x4+y4*y4/2.8 < r * r) {\n             col = vec3(0.0,0.0,0.0);\n           }\n          r = 0.035;\n           if (x5*x5+y5*y5/2.8 < r * r) {\n             col = vec3(1.0,0.0,0.0);\n           }\n          r = 0.035;\n           if (x6*x6+y6*y6/2.8 < r * r) {\n             col = vec3(1.0,0.0,0.0);\n           }\n           if ((abs(x7)<0.12)&&(abs(y7)<0.058)) {\n             col = vec3(1.0,0.0,0.0);\n           }\n          r = 0.052;\n           if (x9*x9+y9*y9/2.8 < r * r) {\n             col = vec3(1.0,0.8,0.2);\n           }\n           if ((y10<(-x10)/0.7)&&(y10>-x10/1.0)&&(x10>-0.046)) {\n             col = vec3(0.0,0.0,0.0);\n           }\n           if ((y11>x11*4.0)&&(y11>-x11*4.0)&&(y11<0.5)) {\n             col = vec3(1.0,0.0,0.0);\n           }\n           if ((abs(x12)<0.044)&&(abs(y12)<0.15)) {\n             col = vec3(1.0,0.8,0.2);\n           }\n          r = 0.55;\n           if (x13*x13*6.0+y13*y13 < r * r) {\n             col = vec3(1.0,0.0,0.0);\n           }\n          r = 0.04;\n           if (x14*x14+y14*y14/2.8 < r * r) {\n             col = vec3(1.0,1.0,1.0);\n           }\n          r = 0.04;\n           if (x15*x15+y15*y15/2.8 < r * r) {\n             col = vec3(1.0,1.0,1.0);\n           }\n          r = 0.04;\n           if (x16*x16+y16*y16/2.8 < r * r) {\n             col = vec3(1.0,1.0,1.0);\n           }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}