{"ver":"0.1","info":{"id":"mtf3RB","date":"1671918835","viewed":124,"name":"Plasma waves","username":"CynicRus","description":"Just another an experiment with the shaders","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["waves","plasma","threads"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//based on: https://glslsandbox.com/e#98148.0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 uv = (fragCoord.xy - iResolution.xy * .7) / max(iResolution.x, iResolution.y) * 4.0;\n   vec2 uv= (fragCoord.xy - iResolution.xy * 0.7) / iResolution.yy * 2.0;\n\tuv *= 1.0;\n\tfloat e = .0;float a;\n\tfor (float i=7.0;i<=800.0;i+=1.6) {\n\t\tfloat A= (i/12.);\n\t\tfloat A2= (i/4.9);\n\t\tfloat A3= (i*0.18);\n\t\tfloat T = (iTime/3.0);\n\t\tfloat T2 = (iTime/12.0);\n\t\te += .002/abs(A+sin(T+A3*uv.x*atan(A2+T2+uv.x*3.2))+8.5*uv.y);\n        \n        vec3 some = vec3( e,  e,  sin(e) * 0.01);\n\t    float a = 0.9 + cos(some.x * 3.1415926 * 4.0) * 0.5;\n\t    float b = 0.9 + cos(some.y * 3.1415926 *4.0) * 0.5;\n\t    float c = 0.9 + cos(some.z * 3.1415926 * 4.0) * 0.5;\n        \n        vec3 color = mix(vec3(1.0, 0.8, 0.9), vec3(0.1, 0.1, 0.2), pow(a, 0.2)) * 3.;\n\t    color += mix(vec3(0.8, 1.9, 1.0), vec3(0.1, 0.1, 0.2),  pow(b, 0.2)) * 0.75;\n\t    color += mix(vec3(0.9, 1.1, 5.0), vec3(0.1, 0.2, 0.2),  pow(c, 0.2)) * 0.75;\n        \n\tfragColor = vec4( vec3(e*3.1, e*1.6, e*2.6) + color * e * clamp(length(iResolution.xy),1.0,1.4), 1.0);\t\n\n\t}\n}","name":"Image","description":"","type":"image"}]}