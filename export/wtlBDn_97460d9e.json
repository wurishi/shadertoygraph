{"ver":"0.1","info":{"id":"wtlBDn","date":"1596493109","viewed":79,"name":"Distances in toroidal space","username":"CoolerZ","description":"Distance function of a circle in toroidal space (on the surface of a toroid).","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf","distance","wrapping","toroid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nfloat circle_d(vec2 p, vec2 pos)\n{\n    const float radius = .5;\n    return length(p-pos)-radius;\n}\n*/\n\nvec2 Z(vec2 p)\n{\n    return 2.*fract(.5+.5*p)-1.;\n}\n\nfloat circle_d(vec2 p, vec2 pos)\n{\n    p = Z(p);\n    pos = Z(pos);\n    const float radius = .5;\n    float d = length(p-pos);\n\n    d = min(d, length(p-(pos+vec2(-2,0))));\n    d = min(d, length(p-(pos+vec2(2,0))));\n    d = min(d, length(p-(pos+vec2(0,-2))));\n    d = min(d, length(p-(pos+vec2(0,2))));\n\n    d = min(d, length(p-(pos+vec2(-2,-2))));\n    d = min(d, length(p-(pos+vec2(-2, 2))));\n    d = min(d, length(p-(pos+vec2( 2,-2))));\n    d = min(d, length(p-(pos+vec2( 2, 2))));\n\n    return d-radius;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.*uv-1.;\n    uv.x *= iResolution.x/iResolution.y;\n\n    //vec2 pos = vec2(cos(iTime), sin(iTime));\n    vec2 pos = clamp(vec2(2.*cos(iTime), 2.*sin(iTime)), -1., 1.);\n    float d = circle_d(uv, pos);\n    float mask = 1.-smoothstep(0.,.01,d);\n\n    vec3 inside_col = vec3(5.,.3,0);\n    vec3 outside_col = 1.-inside_col;\n    vec3 col = mix(outside_col, inside_col, mask);\n    float waves = .8+.2*sin(140.*d);\n    col *= waves;\n    float falloff = 1.-exp(-4.*abs(d));\n    col *= falloff;\n    float border = 1.-smoothstep(0.,.01,abs(d));\n    col = mix(col, vec3(1.), border);\n    if(uv.x < -1. || uv.x > 1.)col = vec3(0);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}