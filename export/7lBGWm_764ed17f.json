{"ver":"0.1","info":{"id":"7lBGWm","date":"1624007893","viewed":50,"name":"Fork Calc1 dmzmd 875","username":"dmzmd","description":"Prototype Graphing Calculator","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","math","tutorial"],"hasliked":0,"parentid":"7tB3Ww","parentname":"Calc1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f1(float x){\nfloat y=sin(x+iTime);\nreturn y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy)-vec2(.5);\n    \nuv=reflect(uv,vec2(sin(uv.x*5.),uv.y+.35));//Cool Effect\n\n    float lw=.1;\n    float zoom=.5;//1.+sin(iTime)*.75;\n //   lw=lw/zoom;//Constant line screen width\n    uv*=(vec2(16,9))/zoom;\n    // Time varying pixel color\n        vec3 col = vec3(0.99);\n    vec3 blue =vec3(0.25,0.25,.99); \n //   col*=abs(uv.x-uv.y);\n //   col/=abs(uv.y);\n  //  col/=abs(uv.x);\n    //col*=sin(uv.x)+cos(uv.y*2.+iTime)+sin(uv.x*2.);//*blue;\n    float xaxis=min(step(0.,uv.y)+step(lw,-uv.y),step(0.,uv.x)+step(lw,-uv.x));\n    col*=xaxis;\n    float bline=1.-(step(1.-lw,fract(uv.y))*.2);\n    col*=vec3(bline,bline,1);\n     bline=1.-(step(1.-lw, fract(uv.x))*.2);\n    col*=vec3(bline,bline,1);\n\n   float fp=step(0.,(uv.y-f1(uv.x)))+step(lw,-(uv.y-f1(uv.x)));\n    col*=vec3(fp,1,fp);\n\n\n//     fp=step(uv.y+lw,f1(uv.x+iTime));\n //   col*=vec3(fp,1,fp);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}