{"ver":"0.1","info":{"id":"Xs2yW1","date":"1492432171","viewed":115,"name":"Sketch_Lattice","username":"cexlearning","description":"Latticeï¼Œcopy from https://github.com/keijiro/ShaderSketches","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["sketch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float pi = 3.1415926;\n    float t = iTime * 0.7;\n\n    float scale = 10.0 / iResolution.y;\n    vec2 p = fragCoord.xy * scale + 0.5; // pos normalized /w grid\n    p += vec2(2, 0.5) * iTime;\n\n    float rnd = fract(sin(dot(floor(p), vec2(21.98, 19.37))) * 4231.73);\n    rnd = floor(rnd * 2.0) / 2.0 + floor(t) / 2.0;\n\n    float anim = smoothstep(0.0, 0.7, fract(t));\n    float phi = pi * (rnd + 0.5 * anim + 0.25);\n    vec2 dir = vec2(cos(phi), sin(phi));\n\n    vec2 pf = fract(p);\n    float d1 = abs(dot(pf - vec2(0.5, 0), dir)); // line 1\n    float d2 = abs(dot(pf - vec2(0.5, 1), dir)); // line 2\n\n    fragColor = vec4((0.1 - min(d1, d2)) / scale);\n}","name":"Image","description":"","type":"image"}]}