{"ver":"0.1","info":{"id":"lf3cRj","date":"1730911798","viewed":47,"name":"Swinging Spider","username":"Temmie","description":"little rough draft of an idea i had ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["spider"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rot (vec2 p, float a){\n    return p * mat2x2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nfloat sdEgg( in vec2 p, in float ra, in float rb )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x);\n    float r = ra - rb;\n    return ((p.y<0.0)       ? length(vec2(p.x,  p.y    )) - r :\n            (k*(p.x+r)<p.y) ? length(vec2(p.x,  p.y-k*r)) :\n                              length(vec2(p.x+r,p.y    )) - 2.0*r) - rb;\n}\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat sdBezier( in vec2 pos, in vec2 A, in vec2 B, in vec2 C )\n{    \n    vec2 a = B - A;\n    vec2 b = A - 2.0*B + C;\n    vec2 c = a * 2.0;\n    vec2 d = A - pos;\n    float kk = 1.0/dot(b,b);\n    float kx = kk * dot(a,b);\n    float ky = kk * (2.0*dot(a,a)+dot(d,b)) / 3.0;\n    float kz = kk * dot(d,a);      \n    float res = 0.0;\n    float p = ky - kx*kx;\n    float p3 = p*p*p;\n    float q = kx*(2.0*kx*kx-3.0*ky) + kz;\n    float h = q*q + 4.0*p3;\n    if( h >= 0.0) \n    { \n        h = sqrt(h);\n        vec2 x = (vec2(h,-h)-q)/2.0;\n        vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0,1.0/3.0));\n        float t = clamp( uv.x+uv.y-kx, 0.0, 1.0 );\n        res = dot2(d + (c + b*t)*t);\n    }\n    else\n    {\n        float z = sqrt(-p);\n        float v = acos( q/(p*z*2.0) ) / 3.0;\n        float m = cos(v);\n        float n = sin(v)*1.732050808;\n        vec3  t = clamp(vec3(m+m,-n-m,n-m)*z-kx,0.0,1.0);\n        res = min( dot2(d+(c+b*t.x)*t.x),\n                   dot2(d+(c+b*t.y)*t.y) );\n    }\n    return sqrt( res );\n}\n\nfloat spider (vec2 uv){\n    float mask = sdBezier(uv, vec2(0.0,6), vec2(cos(iTime)*0.5,sin(iTime*1.25)*0.25), vec2(cos(iTime),sin(iTime*1.25)*0.25));\n    uv += vec2(-cos(iTime),-sin(iTime*1.25)*0.25);\n    uv = rot(uv,cos(iTime)*0.95);\n    mask = min(mask,length(uv + vec2(0.0,0.01))-0.03);\n    mask = min(mask, sdBezier(uv, vec2(-0.1,0.17), vec2(0.0,0.06), vec2(0.1,0.17) ));\n    mask = min(mask, sdBezier(uv, vec2(-0.1,0.12), vec2(0.0,0.02), vec2(0.1,0.12) ));\n    mask = min(mask, sdBezier(uv, vec2(-0.1,0.04), vec2(0.0,0.1), vec2(0.1,0.04) ));\n    mask = min(mask, sdBezier(uv, vec2(-0.1,-0.02), vec2(0.0,0.1), vec2(0.1,-0.02) ));\n    mask = min(mask, sdBezier(uv + vec2(.0,0.1), vec2(-0.03,0.04), vec2(0.0,0.1), vec2(0.03,0.04) ));\n    mask = min(mask, sdEgg(uv+vec2(0.0,-0.05),0.05,0.00));\n    \n    return mask;\n    }\n    \n    \n    \nvoid mainImage( out vec4 o, in vec2 u )\n{\n    vec2 uv = (u-.5*iResolution.xy) / iResolution.y ;\n    float d = spider(uv);\n    vec3 col = 1.-vec3(pow(d/0.02,1.) * 1.-vec3(.8,.2,.2));\n\n    // Output to screen\n    o = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}