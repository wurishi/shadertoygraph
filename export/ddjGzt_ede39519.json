{"ver":"0.1","info":{"id":"ddjGzt","date":"1668046869","viewed":52,"name":"CS 44N Shader Project","username":"zion_asemota","description":"Shader Project","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cs44n"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 pos, float angle) {\n    float c = cos(angle);\n    float s = sin(angle);\n    return mat2(c, s, -s, c) * pos;\n}\n\nvec2 translate(vec2 pos) {\n    return pos + vec2(0.1, 0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    uv = mod(uv, 0.2f);\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.2*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec2 p = fragCoord / iResolution.x;\n    vec2 r =  2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n    vec3 pixel = col;\n    //vec2 r = vec2(iMouse.x, iMouse.y);\n\n    vec2 square1_pos = rotate(uv, -iTime);\n    vec2 square2_pos = rotate(uv, iTime * 2.0);\n    \n    \n    if (abs(square1_pos.x) < 0.05 + 0.4*sin(iTime*6.0) && abs(square1_pos.y) < 0.05) {\n        pixel = vec3(0.69, 0.61, 0.85);\n    }\n    \n    if (abs(square2_pos.x) < 0.05 + 0.4*sin(iTime*6.0) && abs(square2_pos.y) < 0.05) {\n        pixel = vec3(0.29, 0.61, 0.85);\n    }\n   \n\n    // Output to screen\n    fragColor = vec4(pixel,1.0);\n    \n  \n}","name":"Image","description":"","type":"image"}]}