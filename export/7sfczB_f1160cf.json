{"ver":"0.1","info":{"id":"7sfczB","date":"1702076070","viewed":28,"name":"LCD_test","username":"DVMUJIC","description":"lcd","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["lcd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdf(vec2 uv)\n{\n    return 1.0 - max(length((uv - 0.5) + 0.0) -0.1, 0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float res = 200.0;\n\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 realUv = uv;\n    \n    vec2 aspect = vec2(iResolution.x / iResolution.y, 1.0);\n    uv *= aspect;\n\n    \n    vec2 uvOld = fract(uv * res) * 3.0;\n    vec2 textureUv = floor(uv * res / aspect) / res;\n    \n    uv.y *= 1.25;\n    uv.x *= 3.0;\n    uv = fract(uv * res);\n    \n    int color = int(floor(mod(uvOld.x, 3.0)));\n    \n    vec3 colors[3] = vec3[3](\n        vec3(1.0, 0.0, 0.0),\n        vec3(0.0, 1.0, 0.0),\n        vec3(0.0, 0.0, 1.0)\n    );\n\n    vec3 pixelColor = colors[color] * sdf(uv);\n    \n\n    \n    fragColor = texture(iChannel0, realUv) * vec4(pixelColor + 0.25, 1.0);\n    // fragColor = mix(texture(iChannel0, realUv), vec4(pixelColor + 0.0, 1.0), iMouse.x / iResolution.x);\n\n}","name":"Image","description":"","type":"image"}]}