{"ver":"0.1","info":{"id":"wtdBzn","date":"1612138139","viewed":315,"name":"Neural  Monkey","username":"iuryBorgesRodrigues","description":"Monkey","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["monkey"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//CC0 1.0 Universal https://creativecommons.org/publicdomain/zero/1.0/\n//To the extent possible under law, Blackle Mori has waived all copyright and related or neighboring rights to this work.\n\n//like the last few shaders I've published, this is a neural network experiment.\n//this time, the neural network reproduces an SDF given the x,y,z coordinates\n//using siren networks with skip connections: https://vsitzmann.github.io/siren/\n\nvec3 erot(vec3 p, vec3 ax, float ro) {\n    return mix(dot(p,ax)*ax,p,cos(ro))+sin(ro)*cross(ax,p);\n}\n\nfloat scene(vec3 p) {\n    //sdf is undefined outside the unit sphere, uncomment to witness the abominations\n    if (length(p) > 1.) {\n        return length(p)-.8;\n    }\n    //neural networks can be really compact... when they want to be\n    vec4 f0_0=sin(p.y*vec4(-.810,-.479,-1.629,2.114)+p.z*vec4(-1.353,3.836,.544,-.242)+p.x*vec4(-3.646,3.086,4.005,1.374)+vec4(5.029,-.860,-4.521,-7.561));\nvec4 f0_1=sin(p.y*vec4(.551,-3.838,-1.237,-3.779)+p.z*vec4(-2.141,-1.009,-.282,-.317)+p.x*vec4(-2.583,1.946,-.381,1.358)+vec4(8.011,-7.240,7.978,6.555));\nvec4 f0_2=sin(p.y*vec4(.292,.009,.083,-3.117)+p.z*vec4(2.295,1.412,-.507,-4.047)+p.x*vec4(-3.354,-1.616,-4.604,-1.501)+vec4(5.055,.519,3.222,3.231));\nvec4 f0_3=sin(p.y*vec4(.644,1.538,-1.473,-2.874)+p.z*vec4(2.361,-4.293,-1.496,3.907)+p.x*vec4(-.440,2.221,-2.129,-.953)+vec4(-2.102,7.426,-6.489,-2.261));\nvec4 f1_0=sin(mat4(.469,-.455,-.016,.000,.041,-.230,.641,.877,-.771,.400,.439,.275,.240,-.504,.618,.868)*f0_0+\n    mat4(.497,-.162,.044,.878,.289,-.741,.552,.162,.043,.296,.299,.988,.103,.027,.242,.600)*f0_1+\n    mat4(-.030,-.218,.097,.515,-1.296,.868,-.517,.854,.024,-.069,.573,.398,-.072,-.068,-.196,-.232)*f0_2+\n    mat4(-.913,.914,-.583,.229,.201,-1.052,-.087,-.908,-.354,-.067,.446,-.428,.458,.056,-.531,.221)*f0_3+\n    vec4(2.389,3.737,2.563,1.536))/1.0+f0_0;\nvec4 f1_1=sin(mat4(-.213,-.215,.364,-.477,-.218,-.111,.141,-.462,.724,-.350,-.379,.120,-.372,.407,-.094,1.104)*f0_0+\n    mat4(-.065,.780,.630,-.243,.039,-.759,-.154,.121,-.828,.536,.678,-.823,.513,.830,-.145,.553)*f0_1+\n    mat4(.764,.387,.054,-.431,-.049,.524,.044,.891,-.159,.182,.217,.611,.119,-.355,.228,.030)*f0_2+\n    mat4(.526,.020,-.521,-.366,-.465,.357,.082,-.368,.160,.649,-.506,-.260,.154,.482,.222,.393)*f0_3+\n    vec4(-.538,.688,-1.270,.721))/1.0+f0_1;\nvec4 f1_2=sin(mat4(-.587,-.235,.031,-.583,.384,.405,.167,.339,.778,-.499,-.311,-.154,-.279,1.064,-.609,-.058)*f0_0+\n    mat4(-.191,.059,.284,.086,-.658,.495,-.015,-.757,1.143,.597,.475,.298,-.124,-.505,-.401,-.212)*f0_1+\n    mat4(.221,.421,-.376,.462,.568,.661,.542,-.524,.471,-.726,-.520,.528,.069,.454,.352,.780)*f0_2+\n    mat4(.359,-.025,-.730,-.488,-.865,-.103,-.015,.098,.592,.204,.398,-.472,.072,.396,-.346,-.258)*f0_3+\n    vec4(3.503,3.117,1.734,-2.248))/1.0+f0_2;\nvec4 f1_3=sin(mat4(-.786,.057,.116,.141,-.233,-.241,.325,-.200,.092,-.531,-.053,.152,-.605,-.351,.413,-.274)*f0_0+\n    mat4(.104,-.249,.320,-.261,-.095,.060,.786,-.063,-.070,-.468,.052,-.558,-.557,.009,-.192,.280)*f0_1+\n    mat4(-.664,.297,-.124,.113,-.284,.734,.425,-.340,.081,-.133,-.049,-.209,-.310,.368,-.003,-.391)*f0_2+\n    mat4(.015,-.185,.427,-.442,.191,.139,-.420,-.262,.254,-.068,.632,.151,.395,-.000,.067,.670)*f0_3+\n    vec4(-3.185,1.715,3.541,1.726))/1.0+f0_3;\nvec4 f2_0=sin(mat4(-.876,-.128,.620,-.979,-.052,.201,.492,.232,-.393,-1.020,-.527,-.172,-.143,.127,.526,.223)*f1_0+\n    mat4(.643,.102,1.161,-.555,-.587,-1.253,.246,-.111,.884,-.944,-.620,.048,.468,-.753,-.040,-.534)*f1_1+\n    mat4(.257,-.309,.046,.005,-.313,1.355,-.042,-.088,-.046,-.452,.437,.431,.142,-.044,.253,-.020)*f1_2+\n    mat4(-.040,.884,-.167,.816,-.312,-.448,-.929,.809,.502,.072,.851,-1.144,.023,.736,-.080,.056)*f1_3+\n    vec4(3.092,-.379,-.619,3.235))/1.4+f1_0;\nvec4 f2_1=sin(mat4(.324,-.439,-.328,-.771,-.307,-.151,.168,.269,-.978,-1.237,.658,-.216,.229,-.954,-.225,-.464)*f1_0+\n    mat4(.514,.160,-.566,-.157,-.830,-.443,-.369,-.660,-1.208,1.357,.158,.107,.275,-.202,-.144,.006)*f1_1+\n    mat4(.757,-.337,-.144,-1.115,.723,.438,-.499,-.044,.046,-.262,.427,-.044,.183,.316,-.389,-.124)*f1_2+\n    mat4(-1.063,.047,-.112,.194,.351,-.459,-.209,-.313,-1.771,.433,-.779,.359,.213,.522,-.227,.788)*f1_3+\n    vec4(-1.385,-.939,-2.511,-.512))/1.4+f1_1;\nvec4 f2_2=sin(mat4(.562,.796,.458,-.584,-1.463,.710,.360,.128,.025,.451,-.141,.300,.276,.329,-.382,-.444)*f1_0+\n    mat4(.377,.319,-.050,.104,.513,-.419,-.201,-.242,.129,.014,-.087,.316,-.012,-.618,-.390,-.426)*f1_1+\n    mat4(.299,-.244,.703,-.758,.281,-.135,.835,.354,.241,-.139,.414,.848,-.815,.236,.800,.217)*f1_2+\n    mat4(.591,-.381,.696,.199,-.191,-.221,.618,-.531,-.554,.518,-.982,-.010,.194,.181,.784,-1.140)*f1_3+\n    vec4(3.316,.154,1.061,2.237))/1.4+f1_2;\nvec4 f2_3=sin(mat4(.052,-.589,-1.287,-.338,-.999,.079,.048,.152,-.585,.255,-.721,-.240,-.659,.360,-.016,-.408)*f1_0+\n    mat4(.186,.057,-.968,.225,.450,-1.048,-.710,.375,.821,-.730,-.037,.656,.333,.159,.292,.066)*f1_1+\n    mat4(.296,.372,-.202,-.562,.510,.041,.037,-.401,-.064,-.203,-.500,-.026,-.587,-.020,.603,-.177)*f1_2+\n    mat4(.758,.219,.271,-.131,-.116,-.485,.337,.013,-.380,-.716,-.644,.468,-.297,.552,1.275,-.132)*f1_3+\n    vec4(2.659,.165,-2.731,2.476))/1.4+f1_3;\nreturn dot(f2_0,vec4(.062,-.040,-.074,-.047))+\n    dot(f2_1,vec4(-.057,-.039,-.071,-.057))+\n    dot(f2_2,vec4(-.025,-.054,.044,.045))+\n    dot(f2_3,vec4(.048,.066,-.058,.100))+\n    0.102;\n\n}\n\nvec3 norm(vec3 p) {\n    mat3 k = mat3(p,p,p)-mat3(0.001);\n    return normalize(scene(p) - vec3(scene(k[0]),scene(k[1]),scene(k[2])));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = (iMouse.xy-0.5*iResolution.xy)/iResolution.y;\n\n    vec3 cam = normalize(vec3(1.5,uv));\n    vec3 init = vec3(-3.,0,0);\n    \n    float yrot = 0.5;\n    float zrot = iTime*.2;\n    if (iMouse.z > 0.) {\n        yrot += -4.*mouse.y;\n        zrot = 4.*mouse.x;\n    }\n    cam = erot(cam, vec3(0,1,0), yrot);\n    init = erot(init, vec3(0,1,0), yrot);\n    cam = erot(cam, vec3(0,0,1), zrot);\n    init = erot(init, vec3(0,0,1), zrot);\n    \n    vec3 p = init;\n    bool hit = false;\n    for (int i = 0; i < 150 && !hit; i++) {\n        float dist = scene(p)-0.02;\n        hit = dist*dist < 1e-6;\n        p+=dist*cam;\n        if (distance(p,init)>5.) break;\n    }\n    vec3 n = norm(p);\n    vec3 r = reflect(cam,n);\n    //don't ask how I stumbled on this texture\n    vec3 nz = p - erot(p, vec3(1), 2.) + erot(p, vec3(1), 4.);\n    float spec = length(sin(r*3.5+sin(nz*120.)*.15)*.4+.6)/sqrt(3.);\n    spec *= smoothstep(-.3,.2,scene(p+r*.2));\n    vec3 col = vec3(.1,.1,.12)*spec + pow(spec,8.);\n    float bgdot = length(sin(cam*8.)*.4+.6)/2.;\n    vec3 bg = vec3(.1,.1,.11) * bgdot + pow(bgdot, 10.);\n    fragColor.xyz = hit ? col : bg;\n    fragColor = smoothstep(-.02,1.05,sqrt(fragColor)) * (1.- dot(uv,uv)*.5);\n}","name":"Image","description":"","type":"image"}]}