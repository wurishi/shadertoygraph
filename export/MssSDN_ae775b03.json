{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float AXIS_RADIUS = 8.0;\nfloat AXIS_STEP = 1.0;\nfloat LINE_FADE = 2.0;\nfloat LINE_RADIUS = 6.0;\nvec4 AXIS_COLOR = vec4(0.2,0.0,0.0,0.8);\nvec3 BACKGROUND_COLOR = vec3(0.50,0.0,0.1);\n\nfloat f1(float x) {\n\treturn x*x*x*x +\n\t\tx*x*x +\n\t\tx*x +\n\t\tx;\n}\n\nfloat derivative( in vec2 p )\n{\n    float h = 0.01;\n\treturn (f1(p.x + h) - f1(p.x)) / h;\n}\n\nfloat distanceTo( in vec2 p )\n{\n\t// |f(x)-y| / sqrt(1+f'(x)Â²)\n\tfloat y = p.y;\n\tfloat d = derivative(p);\n\treturn abs(f1(p.x) - y) / sqrt(1.0+d*d);\n}\n\n\nvec2 toClipSpace(vec2 p) {\n\tvec2 result = (p / iResolution.xy) * 2.0 - vec2(1.0,1.0);\n\treturn result * vec2(iResolution.x/iResolution.y,1.0);\n}\n\nfloat toClipSize(float x) {\n\treturn abs(2.0*x/iResolution.y);\n}\n\n\n\t\n\nvec2 origin = vec2(0,0);\nvec2 x_axis = vec2(1,0);\nvec2 y_axis = vec2(0,1);\n\n\nfloat line_fade;\nfloat line_radius;\nfloat axis_radius;\n\nfloat distanceToLine(vec2 s0, vec2 s1, vec2 p)\n{\n\tvec2 a = p-s0;\n\tvec2 b = normalize(s1-s0);\n\treturn length(a - dot(a,b) * b);\n}\n\nfloat color(in vec2 p, float s) {\n\treturn smoothstep(s*line_radius,s*line_radius + s*line_fade, distanceTo(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float line_fade = toClipSize(LINE_FADE);\n    float line_radius = toClipSize(LINE_RADIUS) - line_fade;\n    float axis_radius = toClipSize(AXIS_RADIUS);\n\n    vec2 texCoord = toClipSpace(fragCoord.xy);\n\tfloat ty = texCoord.y;\n\tvec2 mouse = toClipSpace(iMouse.xy);\n\tfloat s = (mouse.y*0.5 + 0.5)*(40.0-0.01) + 0.01;\n\ttexCoord.x -= mouse.x;\n\ttexCoord *= s;\n\n\t\n\t\n\tfloat dist_x_axis = distanceToLine(vec2(origin.x, AXIS_STEP*floor(texCoord.y/AXIS_STEP)), vec2(x_axis.x, AXIS_STEP*floor(texCoord.y/AXIS_STEP)), texCoord);\n\tfloat dist_y_axis = distanceToLine(vec2(AXIS_STEP*floor(texCoord.x/AXIS_STEP),origin.y), vec2(AXIS_STEP*floor(texCoord.x/AXIS_STEP),y_axis.y), texCoord);\n\tfloat dist_axis = min(dist_x_axis, dist_y_axis);\n\tfragColor = vec4(BACKGROUND_COLOR,1.0);\n\t\n\t\n\tif (dist_axis <= s*axis_radius) {\n\t\tfragColor = vec4(AXIS_COLOR.rgb*AXIS_COLOR.a + BACKGROUND_COLOR, 1);\n\t}\n\t\n\tfragColor = vec4(fragColor.rgb*color(texCoord,s),1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MssSDN","date":"1401641404","viewed":213,"name":"Pretty Plot","username":"mathnewb","description":"Trying to plot 1D functions.\nDrag mouse to pan and zoom.\nNot sure how to fix rounding errors when scaled out..","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["graphplotchart"],"hasliked":0,"parentid":"","parentname":""}}