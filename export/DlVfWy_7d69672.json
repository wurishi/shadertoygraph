{"ver":"0.1","info":{"id":"DlVfWy","date":"1702439989","viewed":36,"name":"Isometric towers","username":"Sublingual","description":"This started out as an exercise in subdividing the canvas with whole numbers - try playing with the RHYTHM const.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","practice","drawing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 LAVENDER=vec3(0.718,0.769,0.988);\nconst vec3 SLATE=vec3(0.439,0.502,0.565);\nconst vec3 EGGSHELL=vec3(0.941,0.918,0.839);\nconst vec3 SCARLET=vec3(1.,0.141,0.);\nconst vec3 CORNFLOWER_BLU=vec3(0.392,0.584,0.929);\nconst vec3 CORAL=vec3(1.,0.435,0.38);\n\nconst vec2 RHYTHM=vec2(3.,4.);\n\nmat2 shear_y(float _angle){\n    return mat2(1,_angle,\n                0,1);\n}\nmat2 shear_x(float _angle){\n    return mat2(1,0,\n                _angle,1);\n}\n\n//From the book of shaders\nfloat random (vec2 uv) {\n    return fract(sin(dot(uv.xy,\n                         vec2(25.4134,44.2153)))*\n        42335.1235534);\n}\n\nvec2 rhythm(vec2 r, float x){\n    float chord=r.x+r.y;\n    float a=mod(x,chord);\n    \n    float b=(a/r.x);\n    float c=(a-r.x)/r.y;\n    \n    return vec2(b,c);\n}\n\nfloat windows(vec2 div, vec2 offset, float width, vec2 uv){\n    \n    float win=clamp(\n                      (step(0.5,fract(offset.y+uv.y*div.y))-step(width, fract(offset.x+uv.x*div.x)))\n                      ,0.,1.);\n                      \n    return win;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv.y+=iTime*0.05;\n    vec2 uv_a=uv*2.*(RHYTHM.x+RHYTHM.y);\n\n\n    vec2 r=rhythm(RHYTHM, uv_a.x);\n    \n    \n    //This is kind of just doing the same thing twice. \n    \n    //Left side\n    r.x=1.-r.x;\n    \n    uv*=shear_x(1.);\n    \n    vec2 div_a=vec2(8.,10.);\n    \n    float y=clamp(windows(div_a, vec2(0.9,0.), 0.8, vec2(r.y, uv.y))-step(0.,r.y)\n    , 0.,1.);\n    \n    vec2 grid=vec2(r.y-0.01, uv.y-0.01)*div_a;\n    float rand=random(floor(grid));\n    float b=step(fract(grid).y,rand);\n    float y2=clamp(windows(div_a, vec2(0.9,0.), 0.8, vec2(r.y-0.01, uv.y-0.01))-step(0.,r.y)-b\n    , 0.,1.);\n\n\n    //Right side\n    uv*=shear_x(-2.);\n    \n    vec2 div_b=vec2(19.,10.);\n    \n    y+=clamp(windows(div_b, vec2(0.,0.25),0.8,vec2(r.x,uv.y))-step(0.,r.x+0.055),0.,1.);\n\n    vec2 grid2=vec2(r.x,uv.y)*div_b;\n    float rand2=random(floor(grid2));\n    float b2=step(fract(grid2).y,rand2);\n    y2+=clamp(windows(div_b, vec2(0.,0.25),0.8,vec2(r.x-0.01,uv.y-0.01))-b2-step(0.,r.x),0.,1.);\n    \n    \n    //subtract the windows\n    y2-=1.-y;\n    y2=clamp(y2,0.,1.);\n    \n\n    vec3 col;\n    \n    r.y=clamp(r.y,0.,1.);\n    \n    col=mix(LAVENDER, SLATE, r.y);\n    \n    col=mix(LAVENDER+0.1, col, step(0.,-r.x));\n    \n    col=mix(col,CORAL, y);\n    \n    col=mix( col,vec3(EGGSHELL),y2);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}