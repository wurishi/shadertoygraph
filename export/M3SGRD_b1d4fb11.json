{"ver":"0.1","info":{"id":"M3SGRD","date":"1708245352","viewed":58,"name":"My frirst shader","username":"Dj_Crush","description":"My Frist Shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R .4\n#define PI 3.1415926535\n\nfloat Circle(vec2 uv, vec2 offsefXY)\n{   \n    return length(uv - offsefXY) < R ? 1. : 0.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    float t = iTime;\n    float r = sin(t / 10.);\n    float x = cos(t) * r;\n    float y = sin(t) * r;\n    float x1 = cos(t + 2. * PI / 3.) * r;\n    float y1 = sin(t + 2. * PI / 3.) * r;\n    float x2 = cos(t - 2. * PI / 3.) * r;\n    float y2 = sin(t - 2. * PI / 3.) * r;\n    vec4 color = Circle(uv, vec2(x, y)) * vec4(0.0, 1.0, 0.0, 1.0);\n    color += Circle(uv, vec2(x1, y1)) * vec4(1.0, 0.0, 0.0, 1.0);\n    color += Circle(uv, vec2(x2, y2)) * vec4(0.0, 0.0, 1.0, 1.0);\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}