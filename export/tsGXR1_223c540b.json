{"ver":"0.1","info":{"id":"tsGXR1","date":"1576613884","viewed":80,"name":"Noobing around with a cat","username":"justanoob","description":"A very cool cat for a very cool guy (ﾐΦ ﻌ Φﾐ).\n\nSoundtrack: Very Cool People & Ralfs Eilands - Dance Of the Sugar Plum Fairy\n","likes":2,"published":1,"flags":64,"usePreview":0,"tags":["firstshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MlBGzR","filepath":"https://soundcloud.com/verycoolpeople/very-cool-people-ralfs-eilands-dance-of-the-sugar-plum-fairy","previewfilepath":"https://soundcloud.com/verycoolpeople/very-cool-people-ralfs-eilands-dance-of-the-sugar-plum-fairy","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur) {\n    float d = length(uv - p);\n    float c = smoothstep(r, r - blur, d);\n    \n    return c;\n}\n\n// line from A to B\nfloat segment(vec2 P, vec2 A, vec2 B, float thickness, float blur) {\n    vec2 g = B - A;\n    vec2 h = P - A;\n    float d = length(h - g * clamp(dot(g, h) / dot(g,g), 0.0, 1.0));\n\treturn smoothstep(thickness, blur*thickness, d);\n}\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\nfloat polygon(vec2 uv, vec2 coord, int n, float dim, float blur) {\n    uv += coord;\n    float a = atan(uv.x,uv.y)+PI;\n    float r = TWO_PI/float(n);\n    \n    // Shaping function that modulate the distance\n    float d = cos(floor(.5+a/r)*r-a)*length(uv);\n    \n    return 1.0 - smoothstep(dim, dim+blur, d);\n}\n\nfloat band(float t, float start, float end, float blur) {\n\tfloat step1 = smoothstep(start-blur, start + blur, t);\n    float step2 = smoothstep(end + blur, end - blur, t);\n    return step1*step2;\n}\n\nfloat rect(vec2 uv, float left, float right, float bottom, float top, float blur){\n\tfloat band1 = band(uv.x, left, right, blur);\n    float band2 = band(uv.y, bottom, top, blur);\n    \n    return band1*band2;\n       \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5; // -0.5 <--> 0.5\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float t = iTime;\n    \n    float music = texture(iChannel0, vec2(.0, .0)).x;\n    \n    \n    // head\n    float mask = Circle(uv, vec2(0., -.15), .15, .005);\n    \n    // eyes\n    mask -= Circle(uv, vec2(-.04, -.1), .03*music, .003);\n    mask -= Circle(uv, vec2(.04, -.1), .03*music, .003);\n    \n    //ears\n    mask += polygon(uv, vec2(.05, .015), 3, .025, .004);\n    mask += polygon(uv, vec2(-.05, .015), 3, .025, .004);\n    \n    //nose\n    mask -= segment(uv, vec2(-.02, -.15), vec2(.02, -.18), .004, .5);\n    mask -= segment(uv, vec2(.02, -.15), vec2(-.02, -.18), .004, .5);\n    \n    // tale\n    vec2 tale_uv = uv;\n    tale_uv.x += sin(t+40.*tale_uv.y)*(.015);\n    mask += segment(tale_uv, vec2(0., -.01), vec2(0., .27), .015, .7); \n    //mask += rect(tale_uv, -0.015, 0.015, -0.01, 0.27, 0.003);\n    \n    // end of tale\n    vec2 eot_uv = uv;\n    eot_uv.x += sin(t+150.)*.015;\n    mask += Circle(eot_uv, vec2(0., .27), .03, .004);\n    \n    //body\n    mask += segment(uv, vec2(-0.04, -0.3), vec2(0.04, -0.3), 0.04, 0.9);\n    \n    \n    //legs\n    mask += segment(uv, vec2(-0.069, -0.2), vec2(-0.065, -0.36), 0.013, 0.9);\n    mask += segment(uv, vec2(0.069, -0.2), vec2(0.065, -0.36), 0.013, 0.9);\n    \n\n    // Output to screen\n    fragColor = vec4(vec3(1. - mask),1.0);\n}","name":"Image","description":"","type":"image"}]}