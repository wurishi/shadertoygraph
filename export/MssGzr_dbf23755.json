{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#ifdef GL_ES\r\nprecision highp float;\r\n#endif\r\n \r\nfloat j, k, g=acos(-1.0), h= sqrt( 0.75 ), expand;\r\n \r\n \r\nvec2 r(vec2 v,float y)\r\n{\r\n    return cos(y)*v+sin(y)*vec2(-v.y,v.x);\r\n}\r\n \r\nvoid s(inout vec2 v,float x, float y) \r\n{\r\n    float z=mod(atan(v.y,v.x),y)-y*.5;\r\n    v=(length(v))*vec2(cos(z),sin(z));\r\n    v.x-=x;\r\n}\r\n \r\nfloat l(vec3 p,float f) \r\n{\r\n    return length(vec2(length(p.xz) - f,p.y));\r\n}\r\n \r\nfloat i( vec2 p, float y, float z )\r\n{\r\n    return length( max( abs(p) - vec2(y) + vec2(z), 0.0 ) ) - z;\r\n}\r\n \r\nfloat u( vec3 p )\r\n{\r\n    return fract( sin( p.x * 151.0 + p.y * 33.0 + p.z ) * 11.0 );\r\n}\r\n \r\nfloat w(vec3 p) \r\n{\r\n    vec2 e = vec2(1.0, 0.0);\r\n    vec3 o= smoothstep(0.0,1.0,fract( p ));\r\n    p= floor( p );\r\n \r\n    vec4 n= mix(\r\n        vec4(\r\n            u( p+e.yyy),//n000, \r\n            u( p+e.xyy),//n100, \r\n            u( p+e.yxy),//n010, \r\n            u( p+e.xxy)),//n110),\r\n        vec4(\r\n            u( p+e.yyx),//n001, \r\n            u( p+e.xyx),//n101, \r\n            u( p+e.yxx),//n011, \r\n            u( p+e.xxx)),//n111),\r\n        o.z);\r\n    e = mix(n.xy, n.zw, o.y);\r\n    return mix(e.x, e.y, o.x);    \r\n}\r\n \r\nfloat A(vec3 p)\r\n{\r\n    vec3 o= p;\r\n    p.x= mod( p.x + step( 2.0 * h, mod( p.y, 4.0 * h ) ), 2.0 ) - 1.0;\r\n    p.y= mod( p.y, 2.0 * h )- h;\r\n \r\n    o-= p;\r\n    p.z-= (k == 10.0 ? 0.0 : 44.0) + 2.0 * smoothstep( -0.3, 0.3, cos( o.x * 0.03 + cos( o.y * 0.03 ) + j * 4.0 ) * cos( o.y * 0.01 + cos( o.x * 0.02 ) ) );\r\n    float z= length( p )- 1.5;\r\n    s( p.xy, 0.7, g/3.0);\r\n    return max( z, p.x );\r\n}\r\n \r\nfloat B(vec3 p)\r\n{\r\n \r\n    return length( p+vec3(sin( j* 3.0) * 22.0,j * 11.0,-22.0))- 22.0;\r\n}\r\n \r\nfloat C(vec3 p)\r\n{\r\n    vec3 o= p;\r\n    p.x= mod( p.x + step( 2.0 * h, mod( p.y, 4.0 * h ) ), 2.0 ) - 1.0;\r\n    p.y= mod( p.y, 2.0 * h )- h;\r\n \r\n    return max( abs( p.z + 1.0 ) - 0.2, h - length( p.xy ) );\r\n}\r\n \r\nfloat D(vec3 p)\r\n{\r\n    return length( p-vec3(22.0,22.0,-14.0))- expand * 33.0 - 12.0;\r\n}\r\n \r\nfloat f(vec3 p)\r\n{\r\n    float z= min( min( A(p), B(p) ), C(p) );\r\n    return max(length(p) - 77.0, min( z, max( 0.5 - z, D(p) ) ) );\r\n}\r\n \r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n        float CurTime= mod( iTime, 60.0 );\r\n        j= CurTime / 12.0;\r\n \r\n    vec3 q = vec3((fragCoord.xy / iResolution.xy - 0.5), 1.0); \r\n \r\n    vec3 p;\r\n        k= 0.0;\r\n    if( j < 1.0 )\r\n    {\r\n                expand= 0.0;\r\n                k= 10.0;\r\n        p= vec3( 33.0, 33.0, -11.0 + j * 5.0);\r\n        q.yz= r( q.yz, 0.8 - j );\r\n        q.xz= r( q.xz, 0.5 + j );\r\n    }\r\n    else if( j < 2.0 )\r\n    {\r\n                j-= 1.0;\r\n                expand= j*j;\r\n        p= vec3(-11.0, -11.0, -11.0);\r\n        q.yz= r( q.yz, -j * 0.7  );\r\n        q.xz= r( q.xz, -j );\r\n    }\r\n    else if( j < 3.0 )\r\n    {\r\n                j-= 2.0;\r\n                expand= j*j;\r\n        p= vec3(33.0, 11.0, 33.0);\r\n        q.yz= r( q.yz, j * 0.4  );\r\n        q.xz= r( q.xz, 1.2 + j * 0.6);\r\n    }\r\n    else\r\n    {\r\n                j= ( j - 3.0 ) * 0.5;\r\n                expand= j*j * 2.0;\r\n        p= vec3( mix( 22.0 - 88.0 * expand, -44.0 * j, j), 22.0, 6.0 );\r\n        q.yz= r( q.yz, j * 0.2 );\r\n        q.xz= r( q.xz, 3.4 + sqrt(j) * 1.4 );\r\n    }\r\n \r\n    q = normalize(q);\r\n \r\n    vec3 b= vec3( .0,.0,.0 );\r\n    float a=1.0;\r\n    \r\n    float t=w( q*666.0 )*0.5,y,z,d;\r\n        float m= 0.0;\r\n    for(int mm= 0; mm < 2; ++mm)\r\n    {\r\n                for( int tt= 0; tt < 256; ++tt )\r\n                {\r\n                        d = f(p+q*t);\r\n                        t+=max( 0.01, d+0.01);\r\n                        if( !(t<66.0 && d>t*.003) )\r\n                        {\r\n                               break;\r\n                        }\r\n                }\r\n        \r\n        if( t > 66.0 )\r\n        {\r\n            break;\r\n        }\r\n \r\n                m+= 1.0;\r\n \r\n        p+= q*t;\r\n \r\n        vec2 e = vec2(0.04, 0.0);\r\n        vec3 n= vec3( f(p + e.xyy) - f(p - e.xyy), f(p + e.yxy) - f(p - e.yxy), f(p + e.yyx) - f(p - e.yyx) );\r\n        n= normalize(n);\r\n \r\n        z= A(p);\r\n \r\n        vec3 c = vec3(0.8,.0,.0 );\r\n        float k= .15;\r\n \r\n        if( z > D(p) )\r\n        {\r\n            z= D(p);\r\n            c = vec3(1.0,0.0,0.0 );\r\n        }\r\n        if( z > B(p) )\r\n        {\r\n            z= B(p);\r\n            c = vec3(0.05,.1,.2 );\r\n            k= .7;\r\n            e.y= 0.3;\r\n        }\r\n        if( z > C(p) )\r\n        {\r\n            z= C(p);\r\n            c = vec3(0.0,0.6,0.8 ) * (0.9 - 0.15 / clamp(dot( n, q ), -1.0, -0.05));\r\n            //k= .2;\r\n            e.y= 2.0;\r\n        }\r\n            \r\n        n+= (w( p * e.y ) + w( p * e.y * 2.0 ) + w( p * e.y * 4.0 )) * e.x;\r\n        n= normalize(n);\r\n        q= reflect( q, n );\r\n \r\n        z= 1.0;\r\n        for (float yy=6.0;yy>0.;yy--)\r\n        { \r\n            z-=(yy*.5-f(p+n*yy*.5))/exp2(yy);\r\n        }\r\n        c*= z;\r\n \r\n        n.yz= r( n.yz, 0.6 );\r\n        \r\n        c*= .4 + .3 * ( 1.0 - abs( n.y - .9 ) );\r\n \r\n \r\n        b+= a*c;\r\n        a*= k;\r\n        t= 0.3;\r\n    }\r\n    \r\n    q.yz= r( q.yz, 0.6 );\r\n        p=vec3(0.7 + q.y * 0.2);\r\n    if( m < 1.0 )\r\n    {\r\n        p*= vec3( 0.95, 1.1, 1.2);\r\n    }\r\n    \r\n    if( q.y > 0.0 )\r\n    {\r\n\t\tfloat f= (texture( iChannel0, vec2(0.0,0.0) ).x - 0.5 )* 2.0;\r\n\t\tfloat ra= iChannelTime[0];\r\n\t\tq.xz= r(q.xz,ra);\r\n        s(q.xz, 0.3 + f* 0.22, g/8.0);\r\n        q.x= abs( q.x ) - .15 - 0.27* f;\r\n        p+= (0.6 + 4.0 * f )* pow( smoothstep(.2, .0, mix( abs(q.z),length(q.xz), step(0.0, q.x) ) ), 22.0 );\r\n    }\r\n    \r\n    fragColor.xyz = (b + a*p);\r\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MssGzr","date":"1361960888","viewed":1031,"name":"R.E.D. - final scene","username":"TGGC","description":"taken from our R.aymarching E.xperimental D.emonstration - http://www.pouet.net/prod.php?which=57506","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["3d","intro","4k"],"hasliked":0,"parentid":"","parentname":""}}