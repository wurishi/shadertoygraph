{"ver":"0.1","info":{"id":"fddyDN","date":"1653488579","viewed":320,"name":"illusion: length perception 2","username":"FabriceNeyret2","description":"click to check lengths\nreference: https://www.youtube.com/watch?v=Wt7rR0MCYsg&t=142s\n","likes":16,"published":3,"flags":0,"usePreview":0,"tags":["illusion","perception","short","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/ssccDN\n\n#define R    iResolution.xy\n#define S(v) smoothstep(6./R.y, 0., v)               // AA draw\n\nfloat L(vec2 p, vec2 a,vec2 b) {                     // line drawing\n    p -= a, b -= a;\n    return S( length(p - b * clamp(dot(p, b) / dot(b, b), 0., 1.) ) );\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = 2.* ( U+U - R ) / R.y;\n    float l = length(U), a = atan(U.y,U.x);\n    U = l * sin( abs(fract(a*10./6.28+.5)-.5)/10.*6.28 +vec2(0,1.57) ); // symmetries\n    float d = .75,\n          x = U.x, v = cos(x+2.*iTime)/5.,\n          y = U.y;\n          \n    O = vec4(1);\n    O -= L(U, vec2(0,0),vec2(0,1.5) )                // color bars\n         * ( y > d ? vec4(.4,1,1,0) : vec4(1,1,.4,0) )\n      +  L(U, vec2(0, 1.5),vec2(.07,1.5-v) )         // top half-arrow\n      +  L(U, vec2(0, d),vec2(.07, v+d) );           // mid\n      \n    if (iMouse.z>0.)                                 // if click\n        O = mix(O,vec4(0,1,0,0), S(min(abs(l-1.5), abs(l-d)) )); // green lines\n\n    O = sqrt(O);                                     // to sRGB\n}","name":"Image","description":"","type":"image"}]}