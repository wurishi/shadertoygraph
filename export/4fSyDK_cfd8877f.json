{"ver":"0.1","info":{"id":"4fSyDK","date":"1722978710","viewed":39,"name":"Galactic Rebirth","username":"kaffelon","description":"Was messing with metaballs and somehow got here.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["sun","star","space","galaxy","universe","solarsystem","bigbang"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy - .5) * 1.5 / pow(abs(sin(iTime*.1)),.5);\n    vec2 normalizeUV = fragCoord/iResolution.xy;\n    vec3 noise = texture(iChannel2, (normalizeUV*2.0)-.5).rgb;\n    \n    float backgroundStars = 1.0* floor(noise.r*1.1) * (1.5-mod(fragCoord.x,3.0)) * (1.5-mod(fragCoord.y+50.,3.0));\n\n    float circleMask = smoothstep(.5,2.5,2.5-distance(vec2(0,0), uv));\n    vec4 nebula = texture(iChannel1, normalizeUV).rgba;\n    vec3 finalCol = nebula.rgb;\n    \n    \n    finalCol += texture(iChannel0, normalizeUV).rgb;\n    finalCol += (backgroundStars *(1.0-nebula.a))* pow(abs(sin(iTime*.1)),.5);\n    finalCol *= circleMask;\n    // Output to screen\n    fragColor = vec4(finalCol,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14\n\n// Random position where each coordinate is between 0 and 1.\nfloat randPos(float seed)\n{\n    return fract(sin((seed+119.) * 40.37102 + cos(seed*1.34111) * 519.2013 - fract(seed-14.32*185.7548)));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    float strengthSum = 0.0f;\n    for(int i = 0; i < 512; i++)\n    {\n        float speed = randPos(float(i)) * 2.f + 1.6f;\n        vec2 dir = normalize(vec2(randPos(float(i)*.3452)-.5, randPos(float(i * 10)*.3452)-.5)) * randPos(float(i)*.45563);\n        vec2 circleOrigin = vec2(.5*iResolution.x/iResolution.y, .5) + pow(abs(sin(iTime*.1)),.5) * dir * speed;\n        float strength = 1./(pow(uv.x-circleOrigin.x,2.0) + pow(uv.y-circleOrigin.y,2.0));\n        strength *= .0002 * abs(sin(iTime + float(i))) * randPos(float(i)*.3451) + .00002;\n        strengthSum += strength;\n    }\n    \n    vec3 col = vec3(strengthSum);\n    \n    float midpoint = pow(.5,2.2);\n    float contrast = 1.0f;\n    vec3 contrastCol = (col - midpoint) * contrast + midpoint;\n    \n    col = max(log(col/6.0), 0.);\n    col = min(col, vec3(.99));\n    \n    vec3 noiseCol = texture(iChannel0, uv).rgb * 6.0;\n\n    // Output to screen\n    fragColor = vec4((col)*noiseCol,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"#define PI 3.14\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy - .5) * 1.0 / pow(abs(sin(iTime*.1)),.5);\n    vec3 organicCol = texture(iChannel0, uv*1.0).rgb;\n    float pebble = texture(iChannel2, uv*.5).r * 1.0;\n    vec3 noise = texture(iChannel1, uv*.001*iResolution.x).rgb;\n    \n    float nebulaAlpha = pow(pebble,3.0) * 1.;\n    nebulaAlpha = nebulaAlpha * organicCol.r * 2.0;\n    nebulaAlpha = clamp(nebulaAlpha,0.,1.);\n    \n    vec3 nebulaCol1 = vec3(.6,.4,.9);\n    vec3 nebulaCol2 = vec3(.2,.9,.9);\n    float col1Strength = 2.0;\n    float col2Strength = 1.0;\n    \n    \n    vec3 organicContrast = (organicCol -.2) * 2.0 + .2;\n    vec3 nebulaCol = organicContrast * nebulaCol1 * col1Strength;\n    \n    vec3 pebbleContrast = vec3((pebble - .2) * 2.5 + .2);\n    nebulaCol += pebbleContrast * nebulaCol2 * col2Strength;\n   \n    fragColor = vec4((vec3(nebulaAlpha) * nebulaCol) / abs(sin(iTime*.1 + 2. * PI)),nebulaAlpha);\n}","name":"Buffer C","description":"","type":"buffer"}]}