{"ver":"0.1","info":{"id":"MftGW7","date":"1711792799","viewed":39,"name":" point","username":"2TZ","description":"practice","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define POINT_Scale 1.\n#define POINT_Tiling 10.\n#define C1 vec3(0.4,0.1,.5)\n#define C2 vec3(1.,0.55,0.1)\n\nvec2 hash( vec2 p )\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t  dot(p,vec2(269.5,183.3)) );\n\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\n\nfloat point(vec2 uv,float s)\n{\n   // float d = POINT_Scale/length(uv)\n   float d = smoothstep(.5,0.01,length(uv * mix(POINT_Scale,POINT_Scale+1.75,s)));\n    return d;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //timeShape\n    float s = length((fragCoord-.5*iResolution.xy)/iResolution.y);\n    s = cos(s+iTime)*1.5;\n    \n    \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col =vec3(0.0);\n\n    uv*= POINT_Tiling;\n    \n    vec2 id = floor(uv+(s*uv));\n    \n    uv =fract(uv +(s*uv))-.5;\n \n    \n    vec3 Color =mix(C1,C2 ,hash(id).x);\n\n    col = vec3(point(uv,s)) * Color;\n    \n \n   \n    // Convert from Linear to sRGB color\n    col = pow(col, vec3(1.0 / 2.2));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}