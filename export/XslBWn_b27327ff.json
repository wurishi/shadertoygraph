{"ver":"0.1","info":{"id":"XslBWn","date":"1495662615","viewed":115,"name":"Sierpinski fractal","username":"anclin","description":"Sierpinski fractal","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sierpinskifractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tTitle: Simple Sierpinski fractal\n\tTags: fractal\n\tDescription: Sierpinski triangle created with the bitwise AND operation.\n*/\n\n\nfloat Fractal(vec2 fragCoord, float t){\n    float size = min(iResolution.x, iResolution.y);\n    vec2 o = (iResolution.xy - vec2(size)) / 2.0;\n    vec2 p = fragCoord.xy;// (fragCoord.xy - o);\n    \n    float col = 0.0;\n    //if(p.x >= 0.0 && p.y >= 0.0 && p.x < size && p.y < size) {\n        float s = exp2(fract(t));\n    \tuint ix = uint(p.x / s);\n    \tuint iy = uint(p.y / s);\n    \tuint res = (ix & iy);\n    \tcol = res == 0U ? 0.0 : 1.0;\n    //}\n    return col;\n}\n\nfloat remap(float low1, float high1, float low2, float high2, float value){\n    return low2 + (value - low1) * (high2 - low2) / (high1 - low1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float aspectRatio = iResolution.x / iResolution.y;\n    \n    fragCoord.x *= fragCoord.y * 0.01;// * remap(-1.0, 1.0, 1.0, .01, sin(iTime) );;\n    //fragCoord *= remap(-1.0, 1.0, 1.0, .02, sin(iTime) );\n    \n    float tx = -0.5 * iResolution.x;// * aspectRatio;\n    float ty = -0.5 * iResolution.y;\n    mat3 trans = mat3(\n        1.0, 0.0, tx,\n        0.0, 1.0, ty,\n\t\t0.0, 0.0, 1.0\n\t);\n    \n    \n    float fi = iTime * 0.3;\n    mat2 rot = mat2(\n        cos(fi), -sin(fi),\n        sin(fi), cos(fi)\n\t);\n    \n    \n    fragCoord = (vec3(fragCoord,1) * trans).xy;\n    fragCoord = fragCoord * rot;\n    fragCoord = (vec3(fragCoord,1) * -trans).xy;\n\n    \n    float t = iTime;// + 3.0 * ((sin(iTime * 0.5)+1.0)/2.0);\n    float col = Fractal(fragCoord, t );\n    \n    vec2 uv2 = fragCoord.xy / iResolution.xy;\n    float value = remap(-1.0,1.0, 0.0, 1.0, sin(iTime * 0.1) );\n    vec4 tex = texture(iChannel0, mix(uv,uv2,value));\n    \n    vec3 color = vec3(0);\n    \n    float frequency = remap(-1.0, 1.0, 1.0, 30.0, sin(iTime) );\n\n    int sw = 0;\n    float stp = step(0.0, sin(iTime));\n    if( stp > 0.0)sw = 1;\n    \n    if( sw == 0 ){\n        color = vec3(col) * vec3(uv,1);\n    }else if(sw == 1){\n        color = vec3(1.0-col) * vec3(uv,1);\n    }\n    \n    //color = mix(color, vec3(uv,1), uv.x);\n    \n    fragColor = vec4(color,1);\n}","name":"Image","description":"","type":"image"}]}