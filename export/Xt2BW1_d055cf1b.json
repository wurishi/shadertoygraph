{"ver":"0.1","info":{"id":"Xt2BW1","date":"1515598472","viewed":89,"name":"EXERCICE 1 : FILTRE BLOOM_2","username":"Nico_","description":"gt-t","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["tgty"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    float exposition = 1.6;\n    float gamma = 1.0;\n        \n    vec4 pixelOriginal = vec4 (0,0,0,1);\n    vec4 pixelFlou = vec4 (0,0,0,1);\n    \n    pixelOriginal = texture(iChannel0,uv);\n    pixelFlou = texture(iChannel1,uv);\n    \n    \n    fragColor = 1.0-exp(-(pixelOriginal + pixelFlou)*exposition);\n    fragColor.r = pow(fragColor.r,(1.0/gamma));\n    fragColor.g = pow(fragColor.g,(1.0/gamma));\n    fragColor.b = pow(fragColor.b,(1.0/gamma));                  \n  \n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec4 pixel = texture(iChannel0,uv);\n    \n    float brightness = 0.21*pixel[0] + 0.72*pixel[1] + 0.07*pixel[2];\n    \n    float brightness2 = dot(vec3(0.21,0.72,0.07),pixel.rgb); //Produit vectoriel\n    \n    if(brightness >= 0.6)\n    fragColor = pixel;\n        \n}\n\n//0.21*R + 0.72*G + 0.07*B","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Filtre Binom√Æale ou Filtre Gaussien\n#define KERNEL_SIZE 9\nconst float kernel[KERNEL_SIZE] = float[KERNEL_SIZE](1.0/16.0,2.0/16.0,1.0/16.0,2.0/16.0,4.0/16.0,2.0/16.0,1.0/16.0,2.0/16.0,1.0/16.0);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    \n\tvec2 uv = fragCoord / iResolution.xy;\n    vec4 sortie = vec4 (0,0,0,1);\n    \n    for(int u = -1; u <=1; u++)\n    {\n        for(int v = -1; v <=1; v++)\n        {          \n            sortie += kernel[(v+1) + 3*(u+1)] * texture(iChannel0,uv + vec2(u,v)/iChannelResolution[0].xy);\n        }\n    }\n\n    fragColor = 1.0*sortie;\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n}","name":"Buf C","description":"","type":"buffer"}]}