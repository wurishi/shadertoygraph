{"ver":"0.1","info":{"id":"Xs3BzS","date":"1525801607","viewed":273,"name":"Burning Lava?","username":"lhog","description":"Burning Lava?","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["lava"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Noise animation - Electric\n//by nimitz (stormoid.com) (twitter: @stormoid)\n\n//The domain is displaced by two fbm calls one for each axis.\n//Turbulent fbm (aka ridged) is used for better effect.\n\n#define time iTime*0.15\n#define tau 6.2831853\n\nmat2 makem2(in float theta){float c = cos(theta);float s = sin(theta);return mat2(c,-s,s,c);}\n\n#define UV_MULT 8.0\n#define PROC_NOISE\n\n#ifdef PROC_NOISE\nfloat rand(vec2 p)\n{\n\treturn fract(sin(dot(p, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(in vec2 n)\n{\n\tconst vec2 d = vec2(0.0, 1.0);\n\tvec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n#else\nfloat noise( in vec2 x ){return texture(iChannel0, x*.005).x;}\n#endif\n\nfloat fbm(in vec2 p)\n{\t\n\tfloat z=2.;\n\tfloat rz = 0.;\n\tvec2 bp = p;\n\tfor (float i= 1.;i < 5.;++i)\n\t{\n\t\trz+= abs((noise(p * 3.)-0.5)*2.)/z;\n\t\tz = z*2.;\n\t\tp = p*2.;\n\t}\n\treturn rz;\n}\n\nfloat dualfbm(in vec2 p)\n{\n    //get two rotated fbm calls and displace the domain\n\tvec2 p2 = p*.7;\n\tvec2 basis = vec2(fbm(p2-time*1.6),fbm(p2+time*1.7));\n\tbasis = (basis-.5)*.2;\n\tp += basis;\n\t\n\t//coloring\n    // disabled rotation\n\treturn fbm(p*makem2(time*0.));\n}\n\nfloat circ(vec2 p) \n{\n\tfloat r = length(p);\n\tr = log(sqrt(r));\n\treturn abs(mod(r*4.,tau)-3.14)*3.+.2;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//setup system\n\tvec2 p = fragCoord.xy / iResolution.xy-0.5;\n\tp.x *= iResolution.x/iResolution.y;\n\t\n    float rz = dualfbm(p * UV_MULT);\n\t\n\t//rings\n\t//p /= exp(mod(time*10.,3.14159));\n\t//rz *= pow(abs((0.1-circ(p))),.9);\n\t\n\t//final color\n\tvec3 col = vec3(.2,0.07,0.01)/rz;\n    \n\t//col=pow(abs(col),vec3(.99));\n    col=pow(col,vec3(1.4));\n\tfragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}