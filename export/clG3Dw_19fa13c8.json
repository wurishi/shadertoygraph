{"ver":"0.1","info":{"id":"clG3Dw","date":"1684131602","viewed":66,"name":"ScannerSim","username":"SaltyfishAlpha","description":"test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LINESIZE 0.01\n#define THETA 0.5\n#define GIRD 7.0\n#define PI 3.14159265359\n\nfloat dist(in vec2 uv){\n    return sqrt(dot(uv, uv));\n}\n\nfloat getCos(in vec2 a, in vec2 b){\n    return dot(a,b)/(dist(a)*dist(b));\n}\n\nfloat hash(float seed)\n{\n\t// Return a \"random\" number based on the \"seed\"\n    return fract(sin(seed) * 43758.5453);\n}\n\nbool drawCircle(in vec2 uv, in float r) {\n    return abs(uv.x * uv.x + uv.y * uv.y - r*r)/(r*r) <= LINESIZE;\n}\nbool drawline(in vec2 uv){\n    if (dist(uv) > 0.7) return false;\n    for (float i = 0.0; i < GIRD; i+=1.0){\n        if ( abs(acos(uv.x/dist(uv)) - i*PI/6.0) <= LINESIZE) return true;\n    }\n    return false;\n}\n\nfloat drawArea(in vec2 uv) {\n    float a = -0.4 * iTime;\n    vec2 st = vec2(cos(a), sin(a));\n    vec2 ed = vec2(cos(a+THETA), sin(a+THETA));\n    if (dist(uv) > 0.7 || getCos(st, uv) < cos(THETA) || getCos (ed, uv) < cos(THETA)) return 0.0; \n    \n    return smoothstep(cos(THETA), 1.0, getCos(st, uv));\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =  2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.0, 0.0, 0.0);\n\n    if (drawCircle(uv, 0.3)) {\n        col = vec3(0.0, 1.0, 0.0);\n    }\n    if (drawCircle(uv, 0.5)) {\n        col = vec3(0.0, 1.0, 0.0);\n    }\n    if (drawCircle(uv, 0.7)) {\n        col = vec3(0.0, 1.0, 0.0);\n    }\n    if (drawline(uv)) {\n        col = vec3(0.0, 1.0, 0.0);\n    }\n    \n    // get random point\n    \n    // scanner line\n    col = mix(col, vec3(0.0, 1.0, 0.0), drawArea(uv));\n    \n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}