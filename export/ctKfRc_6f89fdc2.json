{"ver":"0.1","info":{"id":"ctKfRc","date":"1702335833","viewed":22,"name":"xas","username":"a1M_322","description":"x","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["x"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getDist(vec3 p) {\n    vec4 sphere = vec4(0.0, 1.0, 6.0, 1.0);\n    float ds = length(p - sphere.xyz) - sphere.w;\n    float dp = p.y;\n    float d = min(ds, dp);\n    return d;\n}\n\nfloat raymarch(vec3 ro, vec3 rd) {\n    float d0 = 0.0;\n    for(int i = 0; i < 1000; i++) {\n        vec3 p = ro + d0 * rd;\n        float ds = getDist(p);\n        d0 += ds;\n        if (d0 > 100.0 || ds < 0.01) {\n            break;\n        }\n    }\n    return d0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 ro = vec3(sin(iTime) * 1.0, 1.0, cos(iTime) * 1.0);\n    vec3 rd = vec3(uv.xy, 1.0);\n    \n    \n    float col = raymarch(ro, rd);\n    col /= 8.0;\n    \n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}