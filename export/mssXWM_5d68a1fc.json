{"ver":"0.1","info":{"id":"mssXWM","date":"1669051606","viewed":63,"name":"Snowflakes_danb","username":"danbshading","description":"making snowflake patters","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["christmas"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28318530718\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    //adjust for screen ratio\n    st.x *= iResolution.x/iResolution.y;\n\n    float numSides = 8.0;\n\n    //center of snowflake\n    vec2 center = vec2(0.5 + 0.1*cos(iTime),1.0*fract(-iTime/20.0));\n    vec2 pos = center-st;\n\n    //radius from center point\n    float r = length(pos)*2.0;\n    float a = atan(pos.y,pos.x);\n    \n    float lineWidth = 0.1;\n    \n    float step_a = (1.0-step(0.2,1.0-a))*(1.0-step(0.8,a));\n    \n    float f = cos(numSides*(a + 0.1*sin(iTime)));\n    \n    //make output of cos function 1 when above 0\n    float ceil_f = 0.6*ceil(f);\n    //narrow lines instead of ceil whole cos function\n    float step_f = 0.6*step(1.0-lineWidth,f);\n\n    //test functions\n    float a_t = 6.0*(a + 0.1*sin(iTime));\n    float g = 1.0*step(a_t,0.0)*step((1.0-(a_t)),TWO_PI);\n    \n        \n    // f = abs(cos(a*3.));\n    // f = abs(cos(a*2.5))*.5+.3;\n    // f = abs(cos(a*12.)*sin(a*3.))*.8+.1;\n    // f = smoothstep(-.5,1., cos(a*10.))*0.2+0.5;\n    \n    float channelVal = (1.0-r)*(1.0-step(step_f,r));\n\n    vec3 color = vec3(channelVal);\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}