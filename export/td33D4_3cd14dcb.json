{"ver":"0.1","info":{"id":"td33D4","date":"1568519266","viewed":512,"name":"Truchet Tiling mirror solution","username":"clem494949","description":"Solution to Martijn's problem: https://youtu.be/2R7h76GoIJM","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["truchet","mirror","tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Solution to Martijn's problem\n// Based on this video:\n// https://youtu.be/2R7h76GoIJM\n\nfloat Hash21(vec2 p) {\n\tp = fract(p*vec2(234.34, 435.345));\n    p += dot(p, p+34.23);\n    return fract(p.x*p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec2 UV = fragCoord.xy/iResolution.xy;\n    \n    vec3 col = vec3(0);\n    \n    uv += iTime*.05;\n    uv *= 5.;\n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    float n = Hash21(id); // random number between 0 and 1\n    \n    float width = .1;\n    \n    if(n<.5) gv.x *= -1.;\n    float d = abs(abs(gv.x+gv.y)-.5);\n    vec2 cUv = gv-sign(gv.x+gv.y+.001)*.5;\n    d = length(cUv);\n    float mask = smoothstep(.01, -.01, abs(d-.5)-width);\n\tfloat angle = atan(cUv.x, cUv.y); // -pi to pi\n    float checker = mod(id.x+id.y, 2.)*2.-1.;\n    float flow = sin(iTime+checker*angle*10.);\n    \n    float x = (checker*angle/1.57-iTime*.3);\n    float y = (d-(.5-width))/(2.*width);\n    //Here the thing\n    if(n<.5 ^^ checker>0.) y=1.-y;\n    col += y*mask;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}