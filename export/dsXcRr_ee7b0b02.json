{"ver":"0.1","info":{"id":"dsXcRr","date":"1686512709","viewed":46,"name":"fract_fun","username":"satorielectronics","description":"this is a test","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 4. * atan(1.);\nmat2 r(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\nvoid mainImage( out vec4 O, in vec2 F )\n{\n   // Normalized pixel coordinates (from -1 to 1)\n    vec2  R = iResolution.xy,\n          u = F/R.xy * 2. - 1.;\n    float a = iTime * .03,\n          i, l = length(u);\n          \n    for(i = .0; i < 64.; i += 1.) {\n        u = abs(u);\n        u -= .5;\n        u *= 1.1;\n        u *= mat2(cos(a), -sin(a), sin(a), cos(a));\n        //u * r(a);\n}\n    // Output to screen\n    O = vec4(length(u), length(u + vec2(.2,-.3)), length(u + vec2(-.4, -.1)), 1.);\n}","name":"Image","description":"","type":"image"}]}