{"ver":"0.1","info":{"id":"mt2XDd","date":"1676835928","viewed":198,"name":"Long Shadow","username":"MysteryPancake","description":"Basic long shadow effect, couldn't find an example of this on Shadertoy yet for some reason :)","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["2d","chroma","shadow","drop","sample","sampler","dropshadow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getAlpha(vec3 color) {\n    return smoothstep(0.5, 0.7, distance(color.rgb, vec3(0.0, 1.0, 0.0)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 vid = texture(iChannel0, uv);\n    fragColor = vid;\n    \n    // Correct aspect ratio for non-square images\n    vec2 aspect = 1.0 / iResolution.xy;\n    \n    // In pixels\n    float shadowLength = 512.0;\n    // Lower values mean better precision\n    float shadowPrecision = 4.0;\n    // In radians\n    float shadowAngle = iTime;\n    \n    float shadowMatte = 0.0;\n    for (float i = shadowPrecision; i <= shadowLength; i += shadowPrecision) {\n        vec2 offset = vec2(sin(shadowAngle), cos(shadowAngle));\n\t\tvec4 col = texture(iChannel0, uv + offset * i * aspect);\n        shadowMatte = max(shadowMatte, getAlpha(col.rgb));\n\t}\n    \n    // Use shadow to darken\n    fragColor -= shadowMatte * 0.25;\n\t\n    // Add back original video\n\tfragColor = mix(fragColor, vid, getAlpha(vid.rgb));\n}","name":"Image","description":"","type":"image"}]}