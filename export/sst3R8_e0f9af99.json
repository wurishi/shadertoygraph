{"ver":"0.1","info":{"id":"sst3R8","date":"1629171288","viewed":140,"name":"Bar Graph Log <> Sin Animation","username":"Yusef28","description":"A quick exploration of plotting and lerp animation. I may create an extended animation later. I have some other ideas as well.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["ad","autodiff","autodiff","automaticdifferentiation","dualnumbers","autodifferentiation","dn"],"hasliked":0,"parentid":"7tjSzw","parentname":"Intersection Line Segments"},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/////////////////////////////////////////////////////////////\n//                                                         //\n// Author:Yusef28                                          //\n// Start Date: 16-08-2021                                  //\n// Status: On Going                                        //\n// Topic: Bar Graph                                        //\n// Sources: Wikipedia/Google                               //\n// Listening to:Best post-rock songs of 2020               //\n//                                                         // \n/////////////////////////////////////////////////////////////\n\n#define line1Col vec3(1.,.2,.5)\n#define line2Col vec3(1.,.3,.3)\n\nfloat distToLine(vec2 A, vec2 B, vec2 p){\n    \n    vec2 PA = p - A;\n    vec2 BA = B - A;\n    float d = dot(PA,BA);\n    float t = clamp(d/(length(BA)*length(BA)),0., 1.);//Vektorprodukt\n    vec2 normal = PA - BA*t;\n    return length(normal);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -0.5,0.5)\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    \n      ////////////////////////////////////////////\n      //                                       //\n////////  BACKGROUND GRID DESIGN             //\n      //                                   //\n      /////////////////////////////////////\n      \n    vec2 st = uv;//save the unscaled uv\n    //I'm only making an 8(*aspect)x8 grid, higher variables\n    //may end up with graphs completely outside it\n    float size = 8.;\n    uv*=size;\n    //graph background\n    vec3 col = vec3(0.1);\n    //center highlights\n    col = mix(col,vec3(0.16),1.0-length(uv/8.));\n    //dust \n    float specks = fract(sin(dot(uv,vec2(123.,16.)))*433413.);\n    \n    //nice soft texture \n    float tex = texture(iChannel0,st).x;\n    col = mix(col,vec3(0.25),pow(tex,2.));\n    \n    //small grid lines\n    vec2 lines = fract(uv*5.);\n    lines = smoothstep(0.45,0.52,abs(lines-0.5));\n    col = mix(col,vec3(0.24),lines.x);\n    col = mix(col,vec3(0.24),lines.y);\n    \n    //larger grid lines\n    lines = fract(uv);\n    lines = smoothstep(0.47,0.52,abs(lines-0.5));\n    col = mix(col,vec3(0.5),lines.x);\n    col = mix(col,vec3(0.5),lines.y);\n    \n    //axis lines\n    lines = smoothstep(0.0,0.02,abs(uv));\n    col = mix(col,vec3(0.6),1.0-lines.x);\n    col = mix(col,vec3(0.6),1.-lines.y);\n    col = mix(col,vec3(0.1),step(0.1,specks)*0.2);\n    \n      ////////////////////////////////////////////\n      //                                       //\n////////  Bar Line Calc                      //\n      //                                   //\n      /////////////////////////////////////\n      \n    //get ids for each column\n    float xID = floor(uv.x);\n    //calculate a time for linear interpolation\n    //it's a triangle wave here\n    float t = smoothstep(0.5,1.5,(abs(mod(iTime,4.)-2.)));\n    \n    //linear interpolate between a static log function graph\n    //and a moving sin graph\n    float y = (log(xID+9.)*1.2)*t + (sin(xID/size*2.+iTime*3.)*3.)*(1.-t);\n    uv = vec2(fract(uv.x)-0.5, uv.y);\n    \n    \n    //Line Points\n    vec2 A1 = vec2(0.0,0.);\n    vec2 B1 = vec2(0.0,y);\n    \n    \n      ////////////////////////////////////////////\n      //                                       //\n////////        DRAWING EVERYTHING           //\n      //                                   //\n      /////////////////////////////////////\n    \n    \n    //line 1\n    float f = 1.0-smoothstep(0.02,0.06,abs(distToLine(A1, B1*0.98, uv)));\n    col = mix(col, vec3(1.,.2,.5), f);//0.5\n    \n    \n    //segment end points line 1\n    f = 1.-smoothstep(0.02,0.04,abs(length(uv-B1)-0.1));\n    col = mix(col, vec3(0.2,0.9,1.), f);\n\n\n\n    \n      ////////////////////////////////////////////\n      //                                       //\n////////          POST PROCESSING            //\n      //                                   //\n      /////////////////////////////////////\n        \n     \n    //vignette\n    uv = fragCoord/iResolution.xy;\n    uv *=  1.0 - uv.yx;\n    float vig = uv.x*uv.y * 15.0; // multiply with sth for intensity\n    vig = pow(vig, 0.15); // change pow for modifying the extend of the  vignette\n\n    // Output to screen\n    fragColor = vec4(col*vig,1.0);\n}\n","name":"Image","description":"","type":"image"}]}