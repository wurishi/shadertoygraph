{"ver":"0.1","info":{"id":"3dBSRD","date":"1553012454","viewed":2969,"name":"Scanline - post process","username":"flyingrub","description":"code stolen here :\nhttps://github.com/vanruesc/postprocessing/blob/master/src/effects/blending/glsl/overlay/shader.frag\nhttps://github.com/vanruesc/postprocessing/blob/master/src/effects/glsl/scanlines/shader.frag","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["scanline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float density = 1.3;\nfloat opacityScanline = .3;\nfloat opacityNoise = .2;\nfloat flickering = 0.03;\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat blend(const in float x, const in float y) {\n\treturn (x < 0.5) ? (2.0 * x * y) : (1.0 - 2.0 * (1.0 - x) * (1.0 - y));\n}\n\nvec3 blend(const in vec3 x, const in vec3 y, const in float opacity) {\n\tvec3 z = vec3(blend(x.r, y.r), blend(x.g, y.g), blend(x.b, y.b));\n\treturn z * opacity + x * (1.0 - opacity);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(\tiChannel0,uv).rgb;\n    \n    float count = iResolution.y * density;\n    vec2 sl = vec2(sin(uv.y * count), cos(uv.y * count));\n\tvec3 scanlines = vec3(sl.x, sl.y, sl.x);\n\n    col += col * scanlines * opacityScanline;\n    col += col * vec3(random(uv*iTime)) * opacityNoise;\n    col += col * sin(110.0*iTime) * flickering;\n\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}