{"ver":"0.1","info":{"id":"wt2BRG","date":"1599337806","viewed":51,"name":"Ellipses Mover","username":"Jakim","description":"Ellipses.\n\nAn example of simple shader for educational purporses.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ellipse","mover"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 black = vec3(0.0);\nconst vec3 color[3] = vec3[3](vec3(0.0,1.0,1.0), vec3(1.0,0.0,1.0), vec3(1.0,1.0,0.0));\n\nconst float lX = 48.0;\nconst float lY = 5.9;\n\nconst float fX = 1.0 / lX;\nconst float fY = 1.0 / lY;\n\nconst float rows = 2.0;\n\nconst float a = 0.00002;\nconst float b = 0.027;\n\nconst float tX = 0.1;\nconst float tY = 0.16;\n\nconst float eps = 0.25;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec3 col;\n    \n    int iStart = -int(tX * iTime * lX);\n    int jStart = -int(tY * iTime * 2.0);\n    for (int j = jStart - 1 - int(rows); j <= int(rows) + jStart + 1; ++j)\n    {\n        float t = float(j);\n    \tfor (int i = iStart - 1; i <= int(lX) + iStart + 1; ++i)\n    \t{\n        \tfloat s = float(i);\n            float x = uv.x - tX * iTime - s * fX;\n            float y = uv.y - tY * iTime - mod(s * fY, 1.0) - t / rows;\n            \n            // rownanie elipsy\n            float elip = x * x / a + y * y / b;\n            \n            // \"epsilonowa\" obwodka do antyaliasingu\n            float diff = elip - 1.0;\n            \n            /*\n\t\t\tustaw kolor (jeden z predefiniowanych w tablicy 'color'), jezeli jestesmy w regionie elipsy\n\t\t\tjezeli jestesmy wewnatrz elipsy, funkcja\n\t\t\t\tmin(1.0, 1.0 - diff / eps)\n\t\t\twynosi 1.0, bo diff / eps jest ujemne i mniejsza z wartosci jest 1.0; \n\t\t\tpoza wnetrzem, ale w epsilonowej obwodce mamy kolor posredni miedzy czarnym a wyjsciowym\n    \t\t*/\n\t\t\tif (diff < eps)\n    \t\t{\n        \t\tcol = color[(i - 3 * iStart) % 3] * min(1.0, 1.0 - diff / eps);\n            }\n        }\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}