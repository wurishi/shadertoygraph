{"ver":"0.1","info":{"id":"NdVSDd","date":"1635525110","viewed":92,"name":"Black Chromatic aberation","username":"fractalfantasy","description":"could be a bit darquer","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fbm","warp"],"hasliked":0,"parentid":"4sjXRG","parentname":"Liquid spectrum"},"renderpass":[{"inputs":[],"outputs":[],"code":"\nfloat ltime;\n\nfloat noise(vec2 p)\n{\n  return sin(p.x*10.) * sin(p.y*(3. + sin(ltime/11.))) + .2; \n}\n\nmat2 rotate(float angle)\n{\n  return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\n\nfloat fbm(vec2 p)\n{\n  p *= 1.1;\n  float f = 0.;\n  float amp = .5;\n  for( int i = 0; i < 3; i++) {\n    mat2 modify = rotate(ltime/50. * float(i*i));\n    f += amp*noise(p);\n    p = modify * p;\n    p *= 2.;\n    amp /= 2.2;\n  }\n  return f;\n}\n\nfloat pattern(vec2 p, out vec2 q, out vec2 r) {\n  q = vec2( fbm(p + vec2(1.)),\n\t    fbm(rotate(.1*ltime)*p + vec2(3.)));\n  r = vec2( fbm(rotate(.2)*q + vec2(0.)),\n\t    fbm(q + vec2(0.)));\n  return fbm(p + 1.*r);\n\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 p = fragCoord.xy / iResolution.xy;\n  ltime = iTime;\n  float ctime = iTime + fbm(p/8.)*40.;\n  float ftime = fract(ctime/6.);\n  ltime = floor(ctime/6.) + (1.-cos(ftime*3.1415)/2.);\n  ltime = ltime*6.;\n  vec2 q;\n  vec2 r;\n  float f = pattern(p, q, r);\n  //vec3 col = hsv2rgb(vec3(q.x/1. + ltime/1. + .4, abs(r.y)*3. + .1, r.x + f));\n  vec3 col = hsv2rgb(vec3(q.x/1. + ltime/.2, abs(r.y)*0.5,r.x + f));\n  fragColor = vec4(col,1.);\n}\n","name":"Image","description":"","type":"image"}]}