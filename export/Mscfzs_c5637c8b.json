{"ver":"0.1","info":{"id":"Mscfzs","date":"1526371599","viewed":486,"name":"throwing shade 2000x faster","username":"91isprime","description":"Compared to http://www.tylermw.com/throwing-shade/ which runs at 0.026 1080fps, mine runs around 2000x faster, although it could be more responsive or have higher quality if the frame rate was not capped.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["raytracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 myHeight = vec4(map(fragCoord.xy/iChannelResolution[0].xy, iChannel1));\n    vec4 sunHeight = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    float grey = dot(step(sunHeight, myHeight), vec4(1.0))/4.0;\n\n    fragColor = vec4(.1 *myHeight + .9 *grey );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 myHeight = vec4(map(fragCoord.xy/iChannelResolution[0].xy, iChannel1));\n    vec2 unit_vec = vec2(sin(iTime*rotation_speed), cos(iTime*rotation_speed));\n    vec4 prevHeight = texture(iChannel0, vec2(fragCoord.xy/iChannelResolution[0].xy - unit_vec/frame_rate*shadow_length));\n    vec4 nextHeight = max(myHeight, prevHeight - (vec4(1.0) + vec4(-2,-1,1,2)*softness)/frame_rate);\n    fragColor = nextHeight;\n    \n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 myHeight = vec4(map(fragCoord.xy/iChannelResolution[0].xy, iChannel1));\n    vec2 unit_vec = vec2(sin(iTime*rotation_speed), cos(iTime*rotation_speed));\n    vec4 prevHeight = texture(iChannel0, vec2(fragCoord.xy/iChannelResolution[0].xy - unit_vec/frame_rate*shadow_length));\n    vec4 nextHeight = max(myHeight, prevHeight - (vec4(1.0) + vec4(-2,-1,1,2)*softness)/frame_rate);\n    fragColor = nextHeight;\n    \n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float frame_rate = 60.0; // number of frames for a full refresh\nconst float rotation_speed = 0.3; // higher is faster\nconst float shadow_length = .3; // also inverse of sun height\nconst float softness = .15; // todo: sun has a visual angle of about .5 degrees\n\nfloat map(vec2 normcoord, sampler2D tex){\n    float height = texture(tex, vec2(normcoord)).r;\n\tfloat in_box = step(1.5, dot(step(normcoord, vec2(.55)), step(vec2(.45), normcoord)));\n    return max(in_box, height);\n}","name":"Common","description":"","type":"common"}]}