{"ver":"0.1","info":{"id":"lfGcDz","date":"1731702523","viewed":35,"name":"Bricked up","username":"cruzcortes","description":"Lab11","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["brickedup"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Constants that would normally be uniform variables\n    vec3 BrickColor = vec3(0.7, 0.1, 0.0);      // Reddish brick color\n    vec3 MortarColor = vec3(0.85, 0.86, 0.84);  // Light gray mortar\n    vec2 BrickSize = vec2(30.0, 15.0);          // Size of bricks (increased for visibility)\n    vec2 BrickPct = vec2(0.90, 0.85);           // Percentage of brick vs mortar\n\n    // Local variables for brick pattern calculation\n    vec2 position;\n    vec2 useBrick;\n    vec3 color;\n\n    // Get position in pixel coordinates\n    position = fragCoord.xy;\n    \n    // Calculate brick pattern\n    position = position / BrickSize;\n    \n    // Offset alternate rows by half a brick\n    if (fract(position.y * 0.5) > 0.5) {\n        position.x += 0.5;\n    }\n    \n    // Get position within current brick\n    position = fract(position);\n    \n    // Determine if we're in brick or mortar\n    useBrick = step(position, BrickPct);\n    \n    // Mix brick and mortar colors based on position\n    color = mix(MortarColor, BrickColor, useBrick.x * useBrick.y);\n    \n    \n    \n    \n    //// Simple lighting calculation\n    \n    //float LightIntensity = 0.8 + 0.2 * cos(iTime + fragCoord.y * 0.02);\n    //color *= LightIntensity;\n    \n    // here we will normalize the fragment coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // we need to calculate the gradient factor (diagonal gradient)\n    float gradientFactor = dot(uv, normalize(vec2(1.0, 1.0))); // Projects UV onto the diagonal\n\n    // Light Intensity\n    float LightIntensity = mix(0.1, 1.0, gradientFactor);\n\n    // Apply the lighting intensity to the color\n    color *= LightIntensity;\n    \n    /// end of lighting section\n    \n    \n    \n    \n    // Output final color\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}