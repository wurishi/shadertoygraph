{"ver":"0.1","info":{"id":"4tG3Wh","date":"1474293509","viewed":675,"name":"tunnel texture","username":"hopskotchrainbow","description":"I decided to make a filtered version of the tunnel texture.","likes":2,"published":3,"flags":96,"usePreview":0,"tags":["tunnel","texture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool checkerboard(vec2 uv, float scale) {\n    vec2 h = uv-vec2(0.5);\n    return ((fract(h.x*scale) >= 0.5) != (fract(h.y*scale) >= 0.5));\n}\n\nvec3 FogColor(vec2 uv) {\n   if (checkerboard(uv, 16.0-length(uv-vec2(0.5))*15.0)) {\n       return vec3(0.7,0.2,0.5);\n   }\n   return vec3(1.0,0.9,0.3);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 proj = uv*2.0-1.0;\n    vec2 orig = proj;\n    proj = vec2(atan(proj.x,proj.y),(1.0-exp2(1.0-log(length(proj)))-iTime));\n    float ft = sin(proj.x*16.0)/12.0;\n    proj.y += 1.0-exp2(ft);\n    proj = proj*0.5-0.5;\n    proj = vec2(fract(proj.x), fract(proj.y));\n    vec3 color = FogColor(uv);\n    vec4 nproject = texture(iChannel0, proj);\n    nproject.rgb = mix(nproject.rgb, color, smoothstep(0.3+ft*0.1, 0.8+ft*0.15, (1.0-length(orig))));\n\tfragColor = nproject;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsjGRD","filepath":"https://soundcloud.com/paragonx9/paragonx9-red-13","previewfilepath":"https://soundcloud.com/paragonx9/paragonx9-red-13","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 FadeColor(vec2 uv) {\n    return vec3(0.4,0.7,0.6);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec4 rgbh = texture(iChannel0, vec2(uv.x, 1.0));\n    vec4 rgbv = texture(iChannel1, uv);\n    rgbv.rgb = mix(rgbv.rgb, FadeColor(uv), 0.05);\n    fragColor = vec4(rgbv.rgb,1.0);\n    float ny = uv.y-0.5;\n    ny += rgbh.r*0.5;\n    if (abs(ny) < (4.0/iResolution.y)) {\n        fragColor.rgb = vec3(1.0);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}