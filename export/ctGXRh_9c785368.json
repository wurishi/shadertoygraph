{"ver":"0.1","info":{"id":"ctGXRh","date":"1685911447","viewed":34,"name":"kishimisu - shader","username":"mothvision","description":"tutorial by kishimisu","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["kishimisu"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette (float t) {\nvec3 a = vec3(0.500, 0.500, 0.500);\nvec3 b = vec3(-0.922, 0.500, 0.500);\nvec3 c = vec3(1.000, 1.000, 1.000);\nvec3 d = vec3(0.000, 0.333, 0.667);\n\nreturn a + b*cos (6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n   vec2 uv0 = uv;\n   vec3 finalColor = vec3 (0.0);\n   \n   for (float i = 0.0; i < 4.0; i++) {\n   uv = fract(uv * 1.5) - 0.5;\n   \n   float d = length(uv) * exp(-length(uv0));\n   \n   vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n   \n   d = sin (d*8.0 + iTime)/sin(1.);\n   d = abs (d);\n   \n   d = asin(0.1) /cos(d*12.);\n   \n   finalColor += col * d;\n}\n   fragColor = vec4(finalColor,1.0);\n   \n}","name":"Image","description":"","type":"image"}]}