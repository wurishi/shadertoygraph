{"ver":"0.1","info":{"id":"ldjyz3","date":"1493147734","viewed":181,"name":"Flower in pink","username":"liamegan","description":"Learning GLSL, drawing a number of circles rotated around a centrepoint.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","circle","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\nconst float TAU = 6.28318530718;\n\nvec4 circle(in vec2 position, in vec2 uv, float size, vec3 color) {\n    \n    float dist = distance(position, uv); // The distance between the pixel and the circle position\n    dist = fract(dist * size * 2.0);\n    \n    \n    vec4 circle = vec4(0.0); // Creating a \"full\" color for the circle\n//    circle.r = circle.g = circle.b = smoothstep(size + 0.005, size, dist); // Setting up the inverted circle rgb color\n    circle.r = circle.g = circle.b = dist; // Setting up the inverted circle rgb color\n    \n    circle.rgb += color; // Additive colour because our circle is inverted\n\n    return circle;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float resolutionalMin = min(iResolution.x, iResolution.y);\n    vec2 squaredRez = vec2(resolutionalMin);\n\tvec2 uv = fragCoord.xy / squaredRez;\n    \n    float ratio = iResolution.x / iResolution.y;\n    vec2 centre = vec2(0.5) * ratio;\n    \n    if(iResolution.x > iResolution.y) {\n       centre.y = 0.5;\n    } else {\n       centre.x = 0.5;\n    }\n    \n    float size = (sin(iTime * 1.0) * 0.3) + 2.1;\n   \n    float handDist = 0.2;\n    float instances = 5.0;\n    float increment = instances;\n    float rotationalIncrement = TAU / instances;\n    vec4 composite = vec4(0.0);\n    \n    while( increment > 0.0) {\n        float rotationalPosition = increment * rotationalIncrement + iTime / 15.0;\n        vec2 circlePos = centre + vec2(sin(rotationalPosition), cos(rotationalPosition)) * handDist;\n        vec4 circleColor = circle(circlePos, uv, size, vec3(1.0, 0.5, 0.5));\n        composite += circleColor;\n        increment -= 1.0;\n    }\n    \n    composite /= instances;\n    \n    fragColor = composite;\n}","name":"Image","description":"","type":"image"}]}