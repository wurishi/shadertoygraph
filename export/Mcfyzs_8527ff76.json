{"ver":"0.1","info":{"id":"Mcfyzs","date":"1721453743","viewed":56,"name":"CRT Emulator #1","username":"kakistocat","description":"Just a first go at a separate RGB cells for each \"pixel\"","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["retro","pixel","crt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n        // Normalized pixel coordinates (from 0 to 1)\n    if (int(fragCoord.x) % 4 == 0){\n        fragColor = vec4(0.0,0,0,1);\n    }\n    else if (int(fragCoord.y) % 4 == 0){\n        fragColor = vec4(0.0,0,0,1);\n        }\n    else{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    if (int(fragCoord.x) % 4 == 1){\n    // Output to screen\n    fragColor = vec4(col.x,0,0,1.0);}\n    else if (int(fragCoord.x) % 4 == 2){\n    fragColor = vec4(0,col.y,0,1.0);}\n    else if (int(fragCoord.x) % 4 == 3){\n    fragColor = vec4(0,0,col.z,1.0);}\n}}","name":"Image","description":"","type":"image"}]}