{"ver":"0.1","info":{"id":"wtXyD7","date":"1592217504","viewed":251,"name":"pointillze","username":"indere","description":"inspired by https://www.shadertoy.com/view/lttBRs","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["ps"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float min_scale = 10.0;\nconst float max_scale = 200.0;\n\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \t\n    \n    float scale = min_scale + (max_scale - min_scale) * (0.5 + 0.5 * sin(iTime * 0.62423));\n    \n    vec2 st = fragCoord / iResolution.xy;\n    st.x *= iResolution.x / iResolution.y;\n    \n    st *= scale;\n    \n    vec2 i_st = floor(st);\n    vec2 f_st = fract(st);\n    float m_dist = 100.;  // minimum distance\n    vec2 uv = st;\n    bool tag = false;\n    for(int y = -1; y <= 1; ++y){\n        for(int x = -1; x <= 1; ++x){\n        \tvec2 neighbor = vec2(float(x),float(y));\n            vec2 point = random2(i_st + neighbor);\n            point = 0.5 + 0.5*sin(iTime + 6.2831*point);\n            vec2 diff = neighbor + point - f_st;\n            float dist = length(diff);\n\n            // Keep the closer distance\n            if(dist < 0.65 && m_dist > dist){\n            \tm_dist = dist;\n                uv = st + diff;\n                tag = true;\n            }\n        }\n    }\n    \n    if(!tag){\n    \tfragColor = vec4(vec3(0.5), 1.0);\n        return ;\n    }\n    \n    uv /= scale;\n    uv.x /= iResolution.x / iResolution.y;\n    vec3 color = texture(iChannel0, uv).rgb;\n    //color += m_dist;\n    \n    //center\n    //color += 1.-step(.06, m_dist);\n    \n    //color.r +=  step(0.98, f_st.x) + step(0.98, f_st.y);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nfloat rgb2gray(vec3 c){\n\treturn dot(c, vec3(0.299, 0.587,0.114));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Buffer A","description":"","type":"buffer"}]}