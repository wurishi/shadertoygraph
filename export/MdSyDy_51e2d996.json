{"ver":"0.1","info":{"id":"MdSyDy","date":"1493574998","viewed":748,"name":"dancing octopus","username":"lab","description":"First shader from someone with very little mathematical knowledge :octopus:","likes":7,"published":1,"flags":64,"usePreview":0,"tags":["2d","sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdsSzn","filepath":"https://soundcloud.com/safanadia/turkish-march-mozart","previewfilepath":"https://soundcloud.com/safanadia/turkish-march-mozart","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = uv - vec2(0.5, 0.5);\n    p.y += .05;\n  \n    vec4 sound = texture(iChannel0, uv);\n    \n    float ed = sound.x / 1.4;\n    vec2 lep = p;\n    lep.y -= 0.38;\n    lep.x += 0.03;\n    float le = length(lep) / ed;\n    le = smoothstep(0.05, 0.06, le);\n    \n    vec2 rep = p;\n    rep.y -= 0.38;\n    rep.x -= 0.030;\n    float re = length(rep) / ed;\n    re = smoothstep(0.05, 0.06, re);\n    \n    vec2 m = p;\n    m.y -= .31;\n    float a = -40.;\n    float b = 0.;\n    float c = 0.;\n    if(m.y <= -0.066) {\n      m.y = 1.;\n    }\n    \n    float pb = abs(a * (m.x * m.x) + b * m.x + c - m.y);\n    pb = smoothstep(0.003, 0.004, pb * sound.x / 1.4);\n    \n    float r = 0.3 + 0.15 * cos(atan(p.x, p.y) * 3. / sound.x);\n    float rr = smoothstep(r, r - 0.01, length(p));\n    \n  vec3 col = vec3(.2, .5, 1.);\n    col *= (rr / (r * 2.));\n    col *= le;\n    col *= re;\n    col *= pb;\n    \n    if(uv.y <= 0.25) {\n        col = vec3(0.);    \n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}