{"ver":"0.1","info":{"id":"WdXfD4","date":"1593749481","viewed":223,"name":"Tutorial from progur","username":"landicefu","description":"https://progur.com/2017/03/how-to-create-animated-shaders-in-shadertoy.html","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SMOOTH_EDGE_LENGTH 0.01\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // value between 0~1 based on current frame\n    float frame = (float(iFrame % 400)) / 400.0;\n \n    // Normalize the coordinate to 0-1 based on height of the view port\n    // Assume the view port is (1200, 600), (300, 300) -> (0.5, 0.5)\n    vec2 uv = fragCoord.xy / iResolution.yy;\n\n\tvec2 center1 = vec2(0.4 + frame, 0.5);\n    float radius1 = 0.3;\n    float distance1 = distance(center1, uv);\n    float red = smoothstep(radius1, radius1 - SMOOTH_EDGE_LENGTH, distance1);\n\n\tvec2 center2 = vec2(0.8 - frame, 0.5);\n    float radius2 = 0.1;\n\tfloat distance2 = distance(center2, uv);\n\tfloat green = smoothstep(radius2, radius2 - SMOOTH_EDGE_LENGTH, distance2);\n\n\tvec4 redColor = vec4(red, 0, 0, 1);\n\tvec4 greenColor = vec4(0, green, 0, 1);\n\tvec4 sum = redColor + greenColor;\n\tfragColor = sum; \n}","name":"Image","description":"","type":"image"}]}