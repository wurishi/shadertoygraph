{"ver":"0.1","info":{"id":"DtVXWV","date":"1688165406","viewed":39,"name":"fosfenos fundo olho - v1","username":"davidmachadosf","description":"imagens olho fechado","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math","fisiologia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pot  =  50.;\nconst float freq =  100.;\nconst float scale = 10.;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = scale*(fragCoord/iResolution.xy - .5);\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    \n\n    // Time varying pixel color\n    //vec3 col = vec3(.5,.2,.8);\n    \n    //plot (1-(1-sin( 10*(x+y) * x)^100) * (1-sin(10* (x+y) * y)^100))\n    \n    //float valxy = \n    //    1. -\n    //     pow(1.-cos( freq* (uv.x+uv.y) * uv.x),pot) * \n    //     pow(1.-cos( freq* (uv.x+uv.y) * uv.y),pot);\n         \n         \n    // plot (1-(1-sin( 1/(x+y) * x)^100) * (1-sin(1/ (x+y) * y)^100))  \n    //float valxy = \n    //    1. -\n    //     pow(1.-sin( freq/(uv.x+uv.y) * uv.x),pot) * \n    //     pow(1.-sin( freq/(uv.x+uv.y) * uv.y),pot);\n    \n    \n    // (1-(1-sin( (3/((x^2+y^2)^.5)) * x)^10) * \n    //    (1-sin( (3/((x^2+y^2)^.5)) * y)^10))\n    \n    \n    float valxy = \n        1. -\n         ( 1.-pow( abs(sin(freq*x*x)), \n                    log(pot*abs(x/y)*(1.0 + 1.*sin(.5*iTime)))\n                 )\n         ) *\n         \n         ( 1.-pow( abs(sin(freq*y*y)), \n                    log(pot*abs(y/x)*(1.0 + 1.*sin(.5*iTime)))\n                 )\n         );\n    \n         \n    vec3 col = vec3(valxy);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}