{"ver":"0.1","info":{"id":"XcXyDn","date":"1720974761","viewed":32,"name":"hsv to rgb disco","username":"shishir574","description":"Tried to create a hsv to rgb disco thingy that reacts to sound from microphone, Id still like to make the waves themselves with color. Still learning.","likes":1,"published":1,"flags":4,"usePreview":0,"tags":["waves","sound","rgb","hsv","disco"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SOUND 1.0\nconst float points = 100.; \nconst float brightness = 0.01;\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0/3.0, 1.0/3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\t\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n\tvec2 p=(fragCoord.xy - 0.5 *iResolution.xy)/min(iResolution.x,iResolution.y);\n    vec3 c=vec3(0,0,0.1); \n\t\t\n    for(float i=0.;i<points; i++){\n\t\n        float vol = SOUND* texture(iChannel0, vec2(i/points, 0.0)).x;\n\t\tfloat b = vol * brightness;\n\t\t\n        float x = cos(3.*3.14*float(i)/points);\n        float y = sin(1.*3.14*float(i)/points);\n        vec2 o = vec2(x,y);\n\t   \n\t\tvec3 dotCol = hsv2rgb(vec3((i + iTime*5.)/points,1.,1.0));\n\t    \n        \n\t\tc += b/(length(p-o))*dotCol;\n    }\n\t   \n\tfloat wave = sin(p.x * 10.0 + iTime) * 0.1;\n\n    vec3 color = vec3(c.y + wave, c.x + wave, c.z + wave);\n\t \n\tfragColor = vec4(color,0.5);\n}","name":"Image","description":"","type":"image"}]}