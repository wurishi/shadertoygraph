{"ver":"0.1","info":{"id":"DlBGDV","date":"1673904371","viewed":108,"name":"FabriceNeyret2's twindragon","username":"blurryroots","description":"Based on the 270 chars version. Added animated spirals and colorizations (simple and with textures).\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["binary","fractals","onetweet","twindragon","golf","arithmetics","complexe"],"hasliked":0,"parentid":"dtj3Wy","parentname":"-1+i  base  &  twindragon figure"},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on '-1+i base & twindragon figure' by Fabrice Neyret\n// https://www.shadertoy.com/view/dtj3Wy\n\n// Shadertoy Educational License\n// You cannot host, display, distribute or share this Work in any form,\n// including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it.\n// I share this Work for educational purposes, and you can link to it,\n// through an URL, proper attribution and unmodified screenshot, as part\n// of your educational material. If these conditions are too restrictive\n// please contact me and we'll definitely work it out.\n// You are free however, to incorporate this work within the Shadertoy\n// ecosystem, e.g. by forking.\n// This work may incorporate other permissivly shared, educational work,\n// which is attributed appropriatly. Please do so as well.\n// Thanks to https://www.shadertoy.com/user/iq for inspiring this license.\n\n// Based on https://www.shadertoy.com/view/dtj3Wy\n\n// base -1+i  allows to represent the whole complex plane as a binary number set.\n// TwinDragon of order n = all positions that can be represented with n bits.\n// cf https://en.wikipedia.org/wiki/Complex-base_system#Base_%E2%88%921_%C2%B1_i\n\n#define WITH_TEXTURES 1\n\n// complexes op from https://shadertoyunofficial.wordpress.com/2019/01/02/programming-tricks-in-shadertoy-glsl/\n#define cmul(A,B) ( mat2( A, -(A).y, (A).x ) * (B) )  // by deMoivre formula\n#define cinv(Z)   ( vec2( (Z).x, -(Z).y ) / dot(Z,Z) ) \n#define cdiv(A,B)   cmul( A, cinv(B) )\n#define ITERATIONS (32.)\n#define R iResolution\n\nvoid mainImage (out vec4 O, vec2 I) {\n    vec2 F = I;\n    I -= .5 + .5*R.xy;\n\n    float x = -1.*(mod (iTime/3.-1., 2.) + 1.);\n    float y = +1.*(mod (iTime/5.-1., 2.) + 1.);\n    float n = floor (mod (iTime/4., 2.));\n    float i = 0.;\n    for ( ; i < ITERATIONS; i++ ) {\n        I = floor( cdiv( I, vec2(x, y) ) );\n        if ( I == vec2(n) ) break;          \n    }\n    float v = i / ITERATIONS;\n    vec3 c = vec3 (0);\n    #if WITH_TEXTURES\n    vec2 txuv = F / R.xy;\n    vec2 bguv = txuv;\n    bguv.x *= R.x/R.y;\n    vec3 bg = texture (iChannel0, bguv).rgb;\n    vec3 shape_col = texture (iChannel1, (v)*5.*txuv).rgb;\n    c = mix (bg, shape_col, 1.-v);\n    #else\n    c = (1.- v) * vec3 (0.8, -(0.5*x + 0.5), 0.5);\n    #endif\n    O = vec4(c, 1.);\n}","name":"Image","description":"","type":"image"}]}