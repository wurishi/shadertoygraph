{"ver":"0.1","info":{"id":"NdcBR8","date":"1655974392","viewed":145,"name":"green smoke","username":"flcoder","description":"green smoke","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["greensmoke"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Effect based on combination  of periodic functions\n// weighted with asymptotically decreasing coefficients.\n\n//directive for NVidia compilers\n//#pragma optionNV (unroll all)\n\n\n//Parameters\n#define SPEED 0.1\n\n\n\nvec3 Effect(float speed, vec2 uv, float time)\n{\n\n    float t = mod(time*speed,60.0);\n    float rt =0.01*sin(t*0.45);\n   \n    mat2 m1 = mat2(cos(rt),-sin(rt),-sin(rt),cos(rt));\n    vec2 uva=uv*m1;\n    float irt = 0.005* cos(t*0.05);\n    mat2 m2 = mat2(sin(irt),cos(irt),-cos(irt),sin(irt));\n\tfor(int i=1;i<40;i+=1)\n\t{\t\n\t\tfloat it = float(i);\n        uva*=(m2);\n        uva.y+=-1.0+(0.6/it) * cos(t + it*uva.x + 0.5*it)\n            *float(mod(it,2.0)==0.0);\n\t\tuva.x+=1.0+(0.5/it) * cos(t + it*uva.y + 0.5*(it+15.0));\n      \n        \n\t}\n    //Intensity range from 0 to n;\n    float n = 0.5;\n    float r = n + n * sin(4.0*uva.x+t);\n    float gb = n + n * sin(3.0*uva.y);\n\treturn vec3(gb*0.8*r,r*1.3,gb*r)*0.15;\n}\t\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float t = iTime;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    mouse = 2.0 * mouse - 1.0;\n    mouse.x *= iResolution.x/iResolution.y;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.0 * uv - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n      \n    uv *= (0.9 + 0.1*sin(t*0.01));\n    uv.y-=iTime*0.13;\n  \n\tvec3 col = Effect(SPEED,uv,t);\n    col+= Effect(SPEED,uv*3.0,2.0*t+10.0)*0.3;\n    col+= Effect(SPEED,sin(iTime*0.01)*uv*2.0,2.0*t+10.0)*0.1;\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}