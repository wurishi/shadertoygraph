{"ver":"0.1","info":{"id":"msKSDK","date":"1681655504","viewed":56,"name":"(Double) Exposure Blend","username":"izutionix","description":"A blendmode that blends images as if they were in linear space, giving a double exposure effect.\nMouseY controls the blend and use mouseX to compare it with regular blend/mix/lerp on the left.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mix","lerp","linear","exposure","blendmode"],"hasliked":0,"parentid":"slXyzM","parentname":"ACES to linear"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 exposureBlend(vec3 x, vec3 y, float t) {\n    float e = 1.-0.02;\n    x *= e; y*= e; // to avoid high values from burning through\n    \n    vec3 col = (x*(t + y-1.)) / (y*(1.-t) + x*(t + 1.66201e-16 * y - 1.66201e-16) - 1.) - (t*y) / (y*(1.-t) + x*(t + 1.66201e-16*y - 1.66201e-16) - 1.);\n    \n    return col / e;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord)/iResolution.xy;\n\n    vec3 col1 = texture(iChannel0, uv).xyz;\n    vec3 col2 = texture(iChannel1, uv).xyz;\n    \n    vec2 mouse = iMouse.xy/iResolution.xy;\n    if(dot(iMouse.xy, vec2(1.))==0.) // no mouse?\n        mouse = 0.5+0.5*vec2(-1.,sin(iTime));\n    \n    vec3 col = vec3(0.);\n    if (uv.x > mouse.x)\n        col = exposureBlend(col1, col2, mouse.y); // right: exposureblend\n    else\n        col = mix(col1, col2, mouse.y); // left: regular blend\n\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}