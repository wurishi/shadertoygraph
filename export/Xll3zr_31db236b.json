{"ver":"0.1","info":{"id":"Xll3zr","date":"1476361806","viewed":132,"name":"Cog","username":"sq2","description":"my first shader.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cog"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cog(in vec2 uv, float scale, float spinDir, vec2 position )\n{\n    vec2 centre = uv - position;\n    \n    float angle = 0.3 * sin(iTime * 3.0) * scale * spinDir + atan(centre.y, centre.x);\n    \n    float rad = length(centre) * scale;\n    \n    float col = rad;\n    \n    float cogRad = 0.4;\n    float teethRad = cogRad + ((1.0 + sin(angle * 20.0 / scale)) / 2.0) * 0.05 * scale;\n     \n    col = smoothstep(teethRad, teethRad + 0.01, col);\n    \n//\tcol = smoothstep(cogRad - 0.2, cogRad + 0.01, col);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n \n    uv.x *= iResolution.x / iResolution.y;\n                \n    float col = cog(uv, 1.0, 1.0, vec2(0.55,0.5)) * cog(uv, 2.0, -1.0, vec2(1.21,0.5));\n    \n\tfragColor = vec4(col, col, 0.0, 0.2);\n}","name":"Image","description":"","type":"image"}]}