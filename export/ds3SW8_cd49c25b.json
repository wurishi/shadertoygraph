{"ver":"0.1","info":{"id":"ds3SW8","date":"1679685438","viewed":46,"name":"mesmerize it","username":"RichSaCa","description":"chatGPT + me playing around","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define OCTAVES 10\n\nfloat noise(vec2 x) {\n    return fract(sin(dot(x, vec2(1.0, 45.0))) * 0.1);\n}\n\nfloat fbm(vec2 x) {\n    float v = 0.3;\n    float a = 1.8;\n    for (int i = 0; i < OCTAVES; i++) {\n        v += a * noise(x);\n        x *= 0.2;\n        a *= 0.01;\n    }\n    return v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.xy;\n    float t = iTime * 0.05;\n    vec3 col = vec3(0.1);\n\n    for (int i = 0; i < 8; i++) {\n        uv = abs(fract(uv * 1.0) - 0.5) * 1.0;\n        float radius = 0.40 * sin(t * float(i+11));\n        float angle = t * 1.0 * float(i+1);\n        uv = mat2(cos(angle), -sin(angle), sin(angle), cos(angle)) * uv;\n        float dist = length(uv);\n        float intensity = smoothstep(radius, radius - 0.1, dist);\n        col += vec3(0.2 * sin(t * 0.5 * float(i+1)) + 0.5, 0.3 * cos(t * 0.3 * float(i+1)) + 0.5, 0.5 * sin(t * 0.7 * float(i+1)) + 0.5) * intensity;\n    }\n\n    float landscape = fbm(uv * 5.0) * 0.8 + 0.0;\n    col += vec3(landscape * 0.5, landscape * 0.4, landscape * 9.4);\n\n    fragColor = vec4(col, 0.0);\n}\n","name":"Image","description":"","type":"image"}]}