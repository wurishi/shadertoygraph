{"ver":"0.1","info":{"id":"llcSWl","date":"1482076539","viewed":129,"name":"Interference","username":"ptrgags","description":"I made  this shader before I had a ShaderToy account. Simulation of interference patterns of two waves. Simple, but I love the look of it.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","distancefield","waves","interference"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\n\n//Convert range [-1.0, 1.0] -> [0.0, 1.0]\nfloat normalize_trig(float trig_val) {\n    return (trig_val + 1.0) / 2.0;\n}\n\nfloat wave(float val, float freq, float pulse_speed) {\n    return cos(freq * val - pulse_speed * iTime);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float freq = PI / 24.0;\n    float pulse_speed = 4.0;\n    \n        \n\tvec2 center = iResolution.xy / 2.0;\n    float center_dist = distance(fragCoord, center);\n    float center_pulse = wave(center_dist, freq, pulse_speed);\n    \n    float mouse_dist = distance(fragCoord, iMouse.xy);\n    float mouse_pulse = wave(mouse_dist, freq, pulse_speed); \n    \n    float interference = (center_pulse + mouse_pulse) / 2.0;\n    \n    /* Uncomment to add mirrored mouse\n    vec2 mirror = vec2(iResolution.x - iMouse.x, iMouse.y);\n    float mirror_dist = distance(fragCoord, mirror);\n    float mirror_pulse = wave(mirror_dist, freq, 4.0);\n    \n    float interference = (center_pulse + mouse_pulse + mirror_pulse) / 3.0;\n\t*/\n    \n    \n    //Blue\n    vec3 color = vec3(0.212, 0.549, 0.714);\n    \n    fragColor.rgb = interference * color;\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}