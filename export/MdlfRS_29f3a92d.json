{"ver":"0.1","info":{"id":"MdlfRS","date":"1496805966","viewed":94,"name":"Filter Faux-Bode","username":"notlion","description":"Trying out some functions for a fake bode plot","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fake","filter","plot","bode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float br(float cut, float res, float t) {\n  return max(0.0, 0.5 - (1.0 - res) / (20.0 * abs(t - cut)));\n}\n\nfloat bp(float cut, float res, float t) {\n  float d = t - cut;\n  float r1 = pow(0.33 / res, 1.75);\n  d = 1.0 / (res * 30.0 * max(0.0, (abs(d) + r1 * 0.11) / res));\n  d = d * (1.6 + 0.2 * res);\n  return 0.2 + 0.8 * sin(r1 * d * 3.14159) * res;\n}\n\nfloat lp(float cut, float res, float t) {\n  float d = cut - t + 0.13;\n  float g = 0.5 - 1.0 / (30.0 * max(0.0, d));\n  d = 0.5 - 1.0 / (res * 30.0 * max(0.0, d / res));\n  d = clamp(d * (1.6 + 0.2 * res), 0.0, 1.0);\n  g += sin(d * 3.14159) * (1.0 - d) * res * 1.36;\n  return g;\n}\n\nfloat hp(float cut, float res, float t) {\n  float d = t - cut + 0.13;\n  float g = 0.5 - 1.0 / (30.0 * max(0.0, d));\n  d = 0.5 - 1.0 / (res * 30.0 * max(0.0, d / res));\n  d = clamp(d * (1.6 + 0.2 * res), 0.0, 1.0);\n  g += sin(d * 3.14159) * (1.0 - d) * res * 1.36;\n  return max(0.0, g);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = fragCoord.xy / iResolution.xy;\n\n  float t = iTime;\n  float cut = 0.5 * (1.0 + sin(t));\n  float res = 0.5 * (1.0 + cos(t * 2.3563));\n\n  vec2 p = (iMouse.xy / iResolution.xy) * 2.0 - 1.0;\n  p.y *= -1.0;\n  float lpa = max(0.0, 0.5 * (p.x + p.y));\n  float hpa = max(0.0, -0.5 * (p.x + p.y));\n  float bpa = max(0.0, 0.5 * p.x - 0.5 * p.y);\n  float bra = max(0.0, 0.5 * p.y - 0.5 * p.x);\n\n  vec3 c = vec3(0.0);\n  c.r += float(uv.x < br(cut, res, uv.y)) * bra;\n  c.g += float(uv.x < bp(cut, res, uv.y)) * bpa;\n  c.b += float(uv.x < hp(cut, res, uv.y)) * hpa;\n  c += float(uv.x < lp(cut, res, uv.y)) * lpa * 0.33;\n\n  c += float(uv.x < max((br(cut, res, uv.y)) * bra,\n                        max((bp(cut, res, uv.y)) * bpa,\n                            max(hp(cut, res, uv.y) * hpa,\n                                (lp(cut, res, uv.y)) * lpa)))) *\n       0.33;\n\n  fragColor = vec4(c * 0.5, 1.0);\n\n  float handle = smoothstep(20.0, 18.0, distance(fragCoord.xy, iMouse.xy));\n  fragColor = mix(fragColor, vec4(1.0, 0.5, 0.0, 1.0), handle);\n}\n","name":"Image","description":"","type":"image"}]}