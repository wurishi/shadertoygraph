{"ver":"0.1","info":{"id":"wdXBRs","date":"1588858895","viewed":142,"name":"3 point triangle","username":"iyadahmed","description":"follow for more :)\nplease let me know your thoughts on this in the comments!\nThank you","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["math","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//please use this code as much as possible :)\n//a mention would be generous <3\n//based on this http://www.alternatievewiskunde.nl/sunall/suna57.htm\nfloat triangle(vec2 coor, vec2 a, vec2 b, vec2 c)\n{\n    vec2 u = coor - a;\n    vec2 v = b - a;\n    vec2 w = c - a;\n    \n    float DET = determinant(mat2(v, w));\n    \n    float h = determinant(mat2(u, w)) / DET;\n    float k = determinant(mat2(v, u)) / DET;\n    \n    float IO = min(min( h , k), 1.0 - h - k );\n        \n    return IO;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 mp = iMouse.xy/iResolution.xy;\n    vec2 p = mp.x > 0.0 ? mp:vec2(.5,1);\n    \n\tfloat tri = triangle(uv, vec2(0.0, 0.0), p, vec2(1.0, 0.0));\n    bool isTri = tri > 0.0 ? true: false;\n    \n    vec3 col = vec3(pow(tri, 1./2.2));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}