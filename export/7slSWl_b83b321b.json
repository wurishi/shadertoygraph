{"ver":"0.1","info":{"id":"7slSWl","date":"1619472026","viewed":39,"name":"circle play","username":"bruced","description":"Playing with functions","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["functions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    //fragColor = vec4(col,1.0);\n    \n    float pct = 0.0;\n    //pct = pow(distance(sin(uv+iTime), vec2(sin(iTime))), distance(uv, vec2(1.0 - cos(1.0-iTime))));\n    //pct *= distance(uv, vec2(1.0 - sin(iTime)));\n    //pct *= distance(1.0 - uv, vec2(1.0 - cos(1.0 - iTime)));\n    //pct *= distance(cos(1.0 - uv), vec2(1.0 - sin(1.0 - iTime)));\n    \n    pct = pow(distance(fract(sin(uv+iTime)*5.0), vec2(0.5)), distance(fract(uv*10.0), vec2(0.5)));\n    pct = smoothstep(0.4, 0.9, pct);\n    vec3 color = vec3(smoothstep(sin(0.0 + iTime), sin(0.0+iTime)-0.125, pct));\n    fragColor = vec4(color*vec3(fract(pct*2.0),cos(1.0 - pct),sin(iTime)), 1.0);\n}","name":"Image","description":"","type":"image"}]}