{"ver":"0.1","info":{"id":"Xc3fzM","date":"1732819023","viewed":82,"name":"my game of life","username":"donerfornothing","description":"I've always wanted to try something like this. Fortunately, this thing is relatively easy and was already done a plenty of times. \nYou can place new cells with your mouse. ","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["cells","gameoflife","johnconway"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec4 game_of_life = texture(iChannel0, uv);\n\n    // Output to screen\n    fragColor = vec4(game_of_life);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float count_neighboors(in vec2 uv)\n{\n    float cnt;\n    \n    cnt += float(texture(iChannel0, uv + vec2(1, 0) / iResolution.xy).r !=0.);\n    cnt += float(texture(iChannel0, uv + vec2(1, 1) / iResolution.xy).r != 0.);\n    cnt += float(texture(iChannel0, uv + vec2(0, 1) / iResolution.xy).r != 0.);\n    cnt += float(texture(iChannel0, uv + vec2(-1, 0) / iResolution.xy).r != 0.);\n    cnt += float(texture(iChannel0, uv + vec2(-1, -1) / iResolution.xy).r != 0.);\n    cnt += float(texture(iChannel0, uv + vec2(-1, 1) / iResolution.xy).r != 0.);\n    cnt += float(texture(iChannel0, uv + vec2(0, -1) / iResolution.xy).r != 0.);\n    cnt += float(texture(iChannel0, uv + vec2(1, -1) / iResolution.xy).r != 0.);\n    \n    return cnt;\n}\n\nfloat init_layout(in vec2 uv)\n{\n      return fract(sin(dot(uv ,vec2(11.,57.))) * 48758. + iTime);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float cp = texture(iChannel0, uv).r;\n    \n    if(iFrame < 2)\n    {\n        fragColor = vec4(init_layout(uv) > 0.9 ? 1. : 0.);\n    }\n    else\n    {    \n        if(true)\n        {   \n            float neighboors = count_neighboors(uv);\n            if(cp == 0. && neighboors == 3.)\n            {\n                cp = 1.0;\n            }\n            if(neighboors != 2. && neighboors != 3.)\n            {\n                cp = 0.;\n            }\n            if (cp > 0.3)\n            {\n              cp -= 0.05;\n            }\n            if (iMouse.z >= 0. && length(fragCoord - iMouse.xy) <= 4.)\n            {\n                cp = 1.;\n            }\n            fragColor = vec4(vec3(cp, cp * sin(iTime), cos(iTime)*cp),1.0);\n        }\n        else\n        {\n            fragColor = texture(iChannel0, uv);\n        }\n    }\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}