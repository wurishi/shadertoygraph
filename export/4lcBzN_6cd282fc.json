{"ver":"0.1","info":{"id":"4lcBzN","date":"1538729831","viewed":415,"name":"The gleam new sonic boom","username":"andrei512","description":"a sonic boom warp kinda thingy effect ","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["ripple","boom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\n\nfloat easeInOut(float t) {\n\treturn (t * t) * (3.0f - 2.0f * t);\n}\n\nvec2 resolution() {\n\treturn iResolution.xy;\n}\n\nfloat aspectRatio() {\n\treturn resolution().x / resolution().y;\n}\n\nfloat sinc(float x) {\n\treturn sin(x) / x;\n}\n\n// -6 to 6 give visible diffs - more than that\nfloat sigmoid(float x) {\n\treturn 1.0 / (1.0 + exp(-x));\n}\n\nfloat lerp(float a, float b, float t) {\n\treturn a + (b - a) * t;\n}\n\n#define EFFECT_RANGE_PARAM 0.15\n#define EFFECT_INTENSITY_PARAM 0.07\n\n/**\n* p: the point for which to compute the offset\n* center: the center of the ripple\n* age: the time of the effect\n**/\nvec2 rippleOffset(vec2 p, vec2 center, float age) {\n\tvec2 offset = (center - p) * vec2(aspectRatio(), 1.0);\n\n\tfloat centerOffset = length(offset);\n\n\tfloat distanceFactor = 1.0 - sigmoid(-4.0 + 6.0 * (centerOffset - EFFECT_RANGE_PARAM));\n\n\tfloat slope = sinc(12.0 * (easeInOut(age) - centerOffset * 0.7)  * PI * 2.0) * distanceFactor;\n\n\treturn normalize(offset) * slope * EFFECT_INTENSITY_PARAM;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float time = fract(iTime / 2.0);\n    \n    vec2 offset = rippleOffset(uv, vec2(0.5, 0.5), time);\n\n\tfragColor = vec4(texture(iChannel0, uv + offset));\n    //fragColor.x = offset.x * 100.0 + 0.5;\n    //fragColor.y = 0.0;\n    //fragColor.z = offset.y * 100.0 + 0.5;\n}","name":"Image","description":"","type":"image"}]}