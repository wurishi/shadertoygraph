{"ver":"0.1","info":{"id":"lfdyzf","date":"1730989710","viewed":84,"name":"golf sphere digital arts","username":"kklabs","description":"I wrote this code inspired from the technology energy shield, share this code and hope you enjoy it.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["golf","arts"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S smoothstep\n#define R min(I.x, I.y)\n#define I iResolution.xy\n#define O round\n#define h(a) fract(sin(dot(a, vec2(12.3456, 54.321))) * 9876.54321)\n#define d uv * 2.5 - iTime * .3\n#define g S(.5, -5.5, length(uv + vec2(sin(iTime), cos(iTime))) - .5)\n\nconst float f = 3.;\nfloat s(float a) { return (a + f) / f; }\nvec2 v2p(vec3 p) { return vec2(s(p.z) * p.x, s(p.z) * p.y); }\n\nfloat sh(vec2 u, float s) {\n  /*\n\n   |-----------|\n   |  /     \\  |\n   | /   1   \\ |\n   | \\   0   / |\n   |  \\  1  /  |\n   |   \\   /   |\n   -------------\n\n     max( abs(u.x), abs(u.y) ) - r;\n     weight = r / cos( 30deg ) = r / 0.866025403784\n     and linear map from abs(u.y)\n\n  */\n\n  u = abs(u);\n\n  return max(u.x - (s * 1.1547005383793) * (1. - u.y / s / 2.), u.y - s);\n}\n\nfloat tg(vec2 u) {\n  u -= .1;\n  vec2 a = vec2(.1, sqrt(.0075)) / .43301270189, t = O(u / a);\n  u -= a * t;\n\n  return (h(t - cos(iTime * .001)) > .5) ? length(u) - .1 * h(t) * .2 : 1.;\n}\n\nfloat th(vec2 u) {\n\n  float p, r;\n\n  vec2 a = vec2(.1, sqrt(.0075)) / .43301270189, t;\n\n  r = O(h(t = O(u / a)));\n\n  u -= a * t;\n\n  if (r > .5)\n    u.x *= -1.;\n\n  u -= a * sign(u.x + u.y) * .5;\n\n  p = sh(u, .1) * (mod(t.x + t.y, 2.) != r ? -1. : 1.);\n\n  return p;\n}\n\nvoid mainImage(out vec4 U, in vec2 V) {\n  vec2 u = (V * 2. - I.xy) / R;\n\n  vec3 c;\n\n  float p;\n\n  vec2 uv = vec2(fract(atan(u.y, u.x) / 6.28318530717958 + iTime * .01),\n                 sqrt(length(u) / 2.) - iTime * .02);\n\n  uv.x = abs(uv.x) - R / max(I.x, I.y);\n\n  p += th(uv * 6.);\n\n  c = vec3(.17, .16, .19);\n\n  c = mix(c, vec3(.74, .19, .37), S(3. / R, -3. / R, p));\n\n  c = mix(c, vec3(0.97, 0.83, 0.73),\n          S(200. / R, 0., fract(p * 35.) - .1) * .35);\n\n  c = mix(c, vec3(.92, .96, .94), S(1. / R, -1. / R, abs(p + .007) - .007));\n\n  c = mix(c, vec3(.17, .16, .19),\n          S(.6, .2 + cos(iTime + 1.9) * .1, pow(length(u), 2.)));\n\n  vec3 pt = vec3(u, sqrt(1. - pow(length(u) + .5, f)));\n\n  float r = atan(length(v2p(pt)), pt.z) // latitude of sphere surface\n            / 3.14,\n        lat = atan(u.y, u.x);\n\n  uv = vec2(cos(lat) * r, sin(lat) * r) + .5;\n\n  c = mix(c, vec3(0.97, 0.85, 0.77),\n          S(2. / R, -2. / R, fract(th(d) + .01) - .01) *\n              step(length(u), .45) * .3);\n\n  c = mix(c, vec3(.96, .25, .48),\n          S(1. / R, -1. / R, fract(th(d)) - .1) *\n              step(length(u), .45) *\n             g * 3.);\n\n  c = mix(c, vec3(1),\n          S(2. / R, -2. / R, tg(d)) * step(length(u), .5) *\n              .7);\n\n  c = mix(c, vec3(4.),\n          g);\n\n  U = vec4(c, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}