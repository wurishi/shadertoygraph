{"ver":"0.1","info":{"id":"4XsSWl","date":"1710249849","viewed":50,"name":"2D car travelling in the woods","username":"Obama","description":"This shader represents a car moving in the wood.\n\nYou can use your mouse and the left button click to adjust the speed of the car and the background (right = more speed to the right and opposite for left).","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["interaction","wood","drawing","car"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 drawRotatingWheelTireAndSpokes(vec2 center, vec2 uv, float radius, float tireRadius, float time, float speed, vec3 backgroundColor) \n{\n    float angle = time * speed;\n    mat2 rotate = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    vec2 rotatedUV = rotate * (uv - center) + center;\n    \n    float wheelDistance = length(rotatedUV - center);\n    float tire = smoothstep(tireRadius - 0.02, tireRadius + 0.02, wheelDistance);\n    \n    float spokeRadius = radius * 0.7;\n    float spokeDistance = length(rotatedUV - center);\n    float spokeAngle = atan(rotatedUV.y - center.y, rotatedUV.x - center.x);\n    float spokePattern = step(0.1, abs(fract(spokeAngle / 3.14159265 * 4.0) - 0.5)) * step(spokeDistance, spokeRadius);\n    \n    float inTire = 1.0 - smoothstep(tireRadius - 0.02, tireRadius, wheelDistance);\n    float spokeTransparency = -1.0 - spokePattern;\n    \n    vec3 wheelColor = vec3(0.1);\n    vec3 finalColor = mix(backgroundColor, wheelColor, (inTire) * spokeTransparency);\n    \n    return finalColor;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    vec3 skyColor = vec3(0.4, 0.6, 0.9);\n    vec3 groundColor = vec3(0.0, 0.5, 0.0);\n    \n    float speedMultiplier = 20.0;\n    float speed = (iMouse.x / iResolution.x) * speedMultiplier - (speedMultiplier / 2.0);\n    \n    vec3 backgroundColor = mix(groundColor, skyColor, smoothstep(-0.2, 0.2, uv.y));\n    \n    float elementPosition = fract(iTime * speed * 0.1);\n    \n    float cloudBase = smoothstep(0.3, 0.5, uv.y);\n    float cloudPattern = 0.0;\n    for (int i = -2; i <= 2; ++i) {\n        for (int j = -1; j <= 1; ++j) {\n            vec2 cloudPos = vec2(float(i) * 0.25, float(j) * 0.15) + vec2(elementPosition, 0.0);\n            cloudPattern += smoothstep(0.02, 0.03, 0.1 - length(uv - cloudPos));\n        }\n    }\n    vec3 cloudColor = mix(backgroundColor, vec3(1.0), min(cloudPattern, 1.0) * cloudBase);\n    \n    float treePattern = smoothstep(0.02, 0.03, abs(fract(uv.x * 5.0 + elementPosition) - 0.5));\n    vec3 treeColor = mix(backgroundColor, vec3(0.55, 0.27, 0.07), treePattern * smoothstep(-0.3, 0.0, uv.y));\n    \n    vec2 headlightRight = vec2(0.4, -0.18);\n    float headlightRightCone = max(0.0, 1.0 - length(uv - headlightRight) * 7.0);\n    vec3 headlightColor = vec3(1.0, 0.8, 0.6) * (headlightRightCone);\n\n    vec2 tailLight = vec2(-0.4, -0.18);\n    float tailLightCone = max(0.0, 1.0 - length(uv - tailLight) * 7.0);\n    vec3 tailLighColor = vec3(1.0, 0.0, 0.0) * (tailLightCone);\n\n    float carBody = length(max(abs(uv - vec2(0.0, -0.25)) - vec2(0.4, 0.1), 0.0)) - 0.010;\n    float carNose = length(max(abs(uv - vec2(0.0, -0.15)) - vec2(0.2, 0.1), 0.0)) - 0.08;\n    float car = min(carBody, carNose);\n    \n    vec2 cabOffset = vec2(0.0, -0.065);\n    float cabWidth = 0.2;\n    float cabHeight = 0.025;\n    float cab = length(max(abs(uv - cabOffset) - vec2(cabWidth, cabHeight), 0.0)) - 0.02;\n    float isCab = step(cab, 0.0);\n    \n    vec3 color = mix(treeColor, cloudColor, step(car, 0.0));\n    \n    vec3 leftWheelTireSpokes = drawRotatingWheelTireAndSpokes(vec2(-0.25, -0.35), uv, 0.1, 0.12, iTime, -speed, color);\n    vec3 rightWheelTireSpokes = drawRotatingWheelTireAndSpokes(vec2(0.25, -0.35), uv, 0.1, 0.12, iTime, -speed, color);\n    color = mix(color, vec3(0.2), max(leftWheelTireSpokes, rightWheelTireSpokes));\n\n    color = mix(color, headlightColor, headlightRightCone);\n    color = mix(color, tailLighColor, tailLightCone);\n    \n    if (isCab > 0.0) {\n        color = mix(color, vec3(1.0), isCab);\n    }\n    \n    if (car < 0.0 && isCab == 0.0) color = vec3(1.0, 0.0, 0.0);\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}