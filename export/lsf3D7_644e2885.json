{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"musicstream","id":"4sS3Dt","filepath":"https://soundcloud.com/lematos/kiyoko","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// by Nikos Papadopoulos, 4rknova / 2013\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define\tPI         3.14159265359\n#define THICKNESS  .4\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat u = fragCoord.x / iResolution.x;\n\tfloat fft = texture(iChannel0, vec2(u,.25)).x;  \n\tfloat wav = texture(iChannel0, vec2(u,.75)).x;\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2. - 1.;\n\tvec2 wv = uv + vec2(0., wav - .5);\n\n\tfloat f = pow(abs(fft * tan(iTime - uv.y / wv.y)), .1);\n\tfloat h = pow(abs(wv.x - pow(abs(uv.y), cos(fft * PI * .25))), f);\n\tfloat g = abs(THICKNESS * .02 / (sin(wv.y) * h));\n\n\tvec3 c = g * clamp(vec3(fft, fract(fft) / fract(wav), g * wav), 0., 1.);\n\t\n\tfragColor = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":true},"info":{"id":"lsf3D7","date":"1371947013","viewed":1552,"name":"AudioSurf II","username":"4rknova","description":"Yet another audio visualization.","likes":19,"published":3,"flags":64,"usePreview":0,"tags":["visualization","audio"],"hasliked":0,"parentid":"","parentname":""}}