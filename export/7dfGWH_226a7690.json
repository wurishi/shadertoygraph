{"ver":"0.1","info":{"id":"7dfGWH","date":"1615854965","viewed":71,"name":"exp(z^2)+k","username":"enslow","description":"Another fractal. I am not sure how to make this run better.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Ryan Enslow March 9, 2021.\n//I have no idea how to make this run better in real time tbh\n\n#define AA 2.\n#define PI 3.14159\n\n\n#define CONSTANT 3.*vec2(-0.340, -0.280)\n#define CENTER vec2(-0.28985, -0.58325)\n#define RE exp(z.x*z.x-z.y*z.y)*cos(2.*z.x*z.y) +CONSTANT.x \n#define IM exp(z.x*z.x-z.y*z.y)*sin(2.*z.x*z.y) +CONSTANT.y \n#define SCALE 1.89798\n#define ESCAPE 1.5\n#define COLORFUN vec3(0.5) + vec3(0.5)*cos( (vec3(0.405, 0.382, 0.344)*(i/68.59355)+vec3(0.440, 0.419, 0.142)))\n\n#define ITERATION 300.\n\n//Extra definitions just in case I want to edit them above.\n\n\n#define IFLOAT0 2.05*(-cos(iTime/(2.*PI))+3.6)\n#define IFLOAT1 5.*(-cos(iTime/(2.*PI))+1.2)\n#define IFLOAT2 0.\n\n\nmat2 rotate(float theta){\n  return mat2(cos(theta),-sin(theta)\n             ,sin(theta), cos(theta));\n}\n\n\n//Determine the color of a given point after its iterative transformation\n//  z: point in complex plane\n//  i: current iteration\n//  col: output color\nvoid colord (in vec2 z, in float i, out vec3 col, inout bool br){\n  col = vec3(1.0);\n  float fi = i/12.;\n  if (length(z)>ESCAPE){\n    br = true;\n    col = COLORFUN;\n  }\n  else{\n    col = vec3(0.0);\n  }\n}\n\n\n//The complex function to transform a point\nvoid anon (in vec2 z, inout vec3 s, in float t){\n  vec2 c = z; //Original point\n  vec2 temp;\n  bool br;\n  for (float i=0.0; i<ITERATION+exp(IFLOAT0)/(1.+IFLOAT0);i += 1.0){\n    colord(z,i,s,br);\n    if (br) break;\n    temp.x = RE;\n    temp.y = IM;\n    \n    z = temp;\n  }\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 a = iResolution.xy;\n  vec3 s = vec3(1.0);\n  vec3 col = vec3(0.0);\n  \n  float t = exp(0.5*IFLOAT1);\n  for (float j = 0.; j < AA; j += 1.0){\n    for (float k = 0.; k < AA; k += 1.0){\n      \n      vec2 uv = rotate(IFLOAT2)*SCALE*(fragCoord + vec2(j,k)/AA - .5*a.xy)/a.y / t+CENTER;\n      anon(uv,s,t);\n      col += s;\n    }\n  }\n  col /= AA*AA;\n  \n  //fragColor = vec4(mix(col,second,0.2),1.0);\n  fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}