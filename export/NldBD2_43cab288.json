{"ver":"0.1","info":{"id":"NldBD2","date":"1663668362","viewed":107,"name":"Simple Toon Shading","username":"LuncyTB","description":"Simple and not good enough","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["toonshadingforvideo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EDGE_SIZE 0.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel1, uv).xyz;\n    \n    vec3 otr = vec3(0.0);\n    float base = 0.0;\n    \n    for (float dx = -EDGE_SIZE; dx < EDGE_SIZE + 0.1; dx += 1.0)\n    {\n        for (float dy = -EDGE_SIZE; dy < EDGE_SIZE + 0.1; dy += 1.0)\n        {\n            vec3 smp = texture(iChannel1, uv + vec2(dx, dy) / iResolution.xy).xyz;\n            \n            float p = 1.0 - length(vec2(dx, dy)) / pow(2.0, 0.5) / EDGE_SIZE;\n            \n            otr += smp * p;\n            base += p;\n        }\n    }\n    \n    float dark = 1.0 - distance(col, otr / base);\n    dark = pow(dark, 7.6);\n\n    // Output to screen\n    fragColor = vec4(col * dark,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SIZE 8.0f\n\nvec3 cut(vec3 c, vec2 uv)\n{\n    float d = 1.0 - distance(c, vec3(13.0,163.0,37.0) / 255.0);\n    float fac = 1.0 - clamp(d * 1.0, 0.0, 1.0);\n    return mix(\n        textureLod(iChannel1, uv, pow(fac, 0.5) * 7.0).xyz,\n        c * vec3(1.0, 0.8, 0.9),\n        fac\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 ct = cut(texture(iChannel0, uv).xyz, uv);\n    \n    vec3 col = vec3(0.0);\n    float base = 0.0;\n    \n    for (float dx = -SIZE; dx < SIZE + 0.1; dx += 1.0)\n    {\n        for (float dy = -SIZE; dy < SIZE + 0.1; dy += 1.0)\n        {\n            vec3 smp = cut(texture(iChannel0, uv + vec2(dx, dy) / iResolution.xy).xyz, uv + vec2(dx, dy) / iResolution.xy);\n            \n            float p = pow(1.0 - distance(ct, smp) / pow(3.0, 0.5), 12.0);\n            p *= 1.0 - length(vec2(dx, dy)) / pow(2.0, 0.5) / SIZE;\n            \n            col += smp * p;\n            base += p;\n        }\n    }\n    \n    vec3 smmth = col / base;\n    \n    float sbr = dot(smmth, vec3(0.3, 0.6, 0.1));\n    float cbr = dot(ct, vec3(0.3, 0.6, 0.1));\n    \n    float nbr = (cos((1.0 - sbr) * 3.1459) * 0.5 + 0.5);\n    \n    float k = floor(nbr * 7.0);\n    float l = fract(nbr * 7.0);\n    \n    nbr = mix(cbr, (k + pow(l, 0.5)) / 7.0, 1.0);\n    \n    nbr *= 1.0 + log(-nbr + 2.0) * 0.5;\n    \n    vec3 res = ct / (cbr + 0.001) * nbr;\n    \n    fragColor = vec4(fragCoord.x > iMouse.x ? res : ct, 1.0);\n        \n}","name":"Buffer A","description":"","type":"buffer"}]}