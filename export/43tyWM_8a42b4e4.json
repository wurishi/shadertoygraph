{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"XdfGR8","filepath":"/media/previz/buffer03.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"video","id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// trying to draw out the motion\n\n// this was a fork / degolf of:\n//  \"motion detection 2\" by FabriceNeyret2.\n//   https://shadertoy.com/view/MXtyDN\n// button clicked 2024-12-25 23:00:31\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    fragColor = vec4(vec3(0.5), 1.0) - texture(iChannel1, fragCoord / iResolution.xy);\n    fragColor += vec4(8.0, 1.0, 8.0, 1.0) * texture(iChannel0, fragCoord / iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// delayed replication\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = texture(iChannel0, (U / iResolution.xy));\n}","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"video","id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// 2-step posterized video sample\n\nvec3 posterize_f3(vec3 src, float steps) { return vec3(floor(src * steps) / steps); }\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = texture(iChannel0, (U / iResolution.xy));\n    O.rgb = posterize_f3(O.rgb, 2.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"4sXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":2,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// difference image\n\nvoid mainImage( out vec4 fragColor, vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy).rgba;\n    vec4 diff = texture(iChannel1, fragCoord / iResolution.xy);\n    diff.rgb = vec3(pow(pow(0.5 - diff.r, .01), 2.0));\n    fragColor.rgb *= diff.rgb;\n}","name":"Buffer C","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XdfGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XdfGR8","filepath":"/media/previz/buffer03.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define SAMPLES 48.0\n\nvoid mainImage( out vec4 fragColor, vec2 fragCoord )\n{\n    vec2 texel = 1./iResolution.xy;\n    vec2 coord = fragCoord*texel;\n    vec2 uv = fract(coord);\n    \n    // accumulation\n    fragColor = texture(iChannel1, uv) * 0.9;\n    fragColor += texture(iChannel0, uv) * 0.1;\n    \n    // detecting direction (simple, box blur style)\n    vec4 total = vec4(0);    \n    float dist = inversesqrt(SAMPLES);\n    for(float i = -0.5; i <= 0.5; i += dist)\n    {\n        for(float j = -0.5; j <= 0.5; j += dist)\n        {\n            vec2 coord = uv + vec2(i,j) * texel;\n            vec4 normal = vec4(32.0 * j * dist, 0.01 * dist * i * j, 32.0 * i * dist, 1.0);\n            total += normal * texture(iChannel0, coord);\n        }\n    }\n    \n    fragColor.rgb += total.rgb;\n    fragColor = vec4(clamp(fragColor.rgb, vec3(0.0), vec3(1.0)), 1.0);\n}","name":"Buffer D","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"43tyWM","date":"1735177367","viewed":54,"name":"motion detection GX","username":"jyn","description":"honestly just experimenting with computer vision techniques, saw Fabrice's shader and decided to touch it up to learn","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["video","motion","vision"],"hasliked":0,"parentid":"","parentname":""}}