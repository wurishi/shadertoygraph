{"ver":"0.1","info":{"id":"ctlXz7","date":"1674506111","viewed":45,"name":"unlisted","username":"ryanadoremos","description":"Practice","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["title"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Signed Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   //signed normalized coordinates\n    uv = uv -= 0.5;\n    uv *= 2.;\n    // adjust screen ration\n    uv.x *= iResolution.x/iResolution.y;\n    // signed distance function \n    float radius = 0.3;\n    bool is_circle = length(uv)-radius < 0.; \n    float circle = is_circle ? 1. :0.;\n    \n    \n    vec3 col = vec3(circle);\n \n    \n    // Output to screen\n    fragColor = vec4(col,1);\n}\n\n\n//Vertical Image\n\n\n\n\n\n\n\n//to get color rgb/255\n\n//float\n//int\n//bool\n//vec2 (float vector)\n//vec3 (float vector)\n//vec4 (float vector)\n//ivec2 (integer vector)\n//ivec3 (integer vector)\n// ivec4 (integer vector)\n//bvec2\n//bvec3\n//bvec4\n\n","name":"Image","description":"","type":"image"}]}