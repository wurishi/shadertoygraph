{"ver":"0.1","info":{"id":"lldGW8","date":"1469110325","viewed":259,"name":"Omas Kueche","username":"vapoi","description":"just playing around without using common random functions","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","glow","heat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ein paar Farben\nconst vec3 col1 = vec3(0.1, 0.15, 0.72);\nconst vec3 col2 = vec3(0.3, 0.15, 0.1);\nconst vec3 colSepia = vec3(1.15, 1.0, 0.9);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Position im Bild, die HÃ¶he pos.y geht von 0.0 (unten) bis 1.0 (oben)\n    //\t\t\t\t\t die Breite pos.x geht von 0.0 (links) bis 1.0 (rechts)\n\tvec2 pos = fragCoord.xy / iResolution.xy;\n    \n    // Unsere Position, aber mit Ursprung in der Mitte des Bildes\n    vec2 posMid = vec2(-1.0, -1.0) + 2.0 * pos; \n    // HÃ¶he und Breite in VerhÃ¤ltnis setzen\n    posMid.x *= iResolution.x / iResolution.y;\n    \n    // die Zeit in Sekunden: 1.0 entspricht einer Sekunde\n    float fTime = iTime * .30;\n    \n    // Abstand der Position zum Mittelpunkt\n    float fDistanceMid = length(posMid);\n    \n    // Die Farbe des Punktes fÃ¤ngt bei schwarz an\n    vec3 colMix = vec3(0.0, 0.0, 0.0);\n    \n    \n    // Hintergrundmuster \"irgendwas mit sinus\" \n    // Achtung, Sinus liefert auch negative Werte\n    float vBack = 0.0;\n    vBack += 1.5 * sin(posMid.y * 7.0 + fTime * .70) \n         \t \t * sin(posMid.x * 10.0);\n    \n    vBack += 1.5 * sin(posMid.y * 31.0) \n        \t  \t * sin(posMid.x * 39.0 + fTime * .5);\n    \n    // Vordergrund Tests\n    float fValue = 0.0;\n\tfloat fLoop = 0.0;\n    float fExtra = 7.0;\n    \n    for (int j = 0; j < 3; j++)\n    {\n        fLoop = float(j) * 0.17;\n        \n        fValue = fValue * 0.1 + sqrt(fract(pos.x * 0.30 * vBack * 0.13 + fLoop + abs(sin(fTime * 01.1 - fLoop))))\n            \t + 1.0 + 01.1 * -abs(sin(fDistanceMid * fExtra + fLoop * fValue * vBack + fTime * 0.03))\n                 ;\n    }\n    \n    fValue = pow(max(0.0, fValue), 5.0) * 0.15;\n    \n    \n    // Endfarbe zusammenmischen\n    colMix = mix(fValue * col2 * 1.5 + fValue * col1 * smoothstep(0.5, 0.8, fDistanceMid) \n                 , colSepia * abs(vBack) * 0.2 \n                 , smoothstep(0.1, 0.8, fDistanceMid) * smoothstep(-0.2, 0.3, abs(posMid.y)));\n    \n    fragColor = vec4(colMix, 1.0);\n}","name":"Image","description":"","type":"image"}]}