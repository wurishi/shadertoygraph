{"ver":"0.1","info":{"id":"lcyXDd","date":"1715909037","viewed":73,"name":"Simple FishEye","username":"Shader_Noob2023","description":"A simple fisheye effect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fisheye","uvdistort"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.x;//normalized coords with some cheat\n\t                                                         \n\tfloat ratio = iResolution.x/iResolution.y;\n\tvec2 m = vec2(0.5, 0.5 / ratio);//center coords\n    \n\tvec2 d = uv - m;//vector from center to current fragment\n\tfloat r = sqrt(dot(d, d)); // distance of pixel from center\n    \n    float bind;//radius of 1:1 effect\n\tbind = sqrt(dot(m, m));//stick to corners\n\tfloat power = ( 6.283 / (2.0 * bind) );\n    power *= 0.35;\n\t\t\t\t\n    \n\t\n\t\n\t//Weird formulas\n\n\t\n\tvec2 x =  normalize(d)*tan(r*power)*bind  /  tan(bind*power);\n    uv = m + x;\n\t\n\tvec3 col = texture(iChannel0, vec2(uv.x,uv.y * ratio)).xyz;//Second part of cheat\n\t                                                  //for round effect, not elliptical\n\tfragColor = vec4(col, 1.0);\n}\n\n\n//Inspired by http://stackoverflow.com/questions/6030814/add-fisheye-effect-to-images-at-runtime-using-opengl-es\n// Thanks to https://www.shadertoy.com/view/4s2GRR\n","name":"Image","description":"","type":"image"}]}