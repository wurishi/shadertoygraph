{"ver":"0.1","info":{"id":"fsKyzh","date":"1654442336","viewed":111,"name":"Retarded position demo","username":"Amirk","description":"Demo of retardation effect due to finite speed of light. Blue dot is the observer (move with mouse). White dot the object's real time position. Red is the position where the observer sees the object to be=\"retarded position\".","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["electrodynamics","speedoflight","retardation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float radius=0.4;\nconst float c=1.;\nfloat t;\n#define PI 3.1416\n\nvec2 pos0=radius*vec2(1,0);\nvec2 retardedPos;\nvec2 observer=vec2(.2,.2);\n\nmat2 rot(float a){ \n    return mat2(cos(a), -sin(a),sin(a),cos(a));\n}\n\n\nfloat retardedTime(vec2 uv, vec2 pos, float time, int iterations){\n    float upper =time;\n    float lower =0.;\n    float tr = time*.5;\n    int n=0;\n    while(n<iterations){\n        vec2 retardedPos=rot(tr)*pos;\n        float dist= length(uv-retardedPos);\n        if(dist/c>(time-tr)){\n            upper = tr;\n            tr=(upper+lower)*.5;\n        }else{\n            lower= tr;\n            tr=(upper +lower)*.5;\n        }if(tr<.01){\n           tr=0.;\n           break;\n        }\n    \n        n++;\n    }\n    \n    return tr;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n    vec3 col = vec3(0);\n    t= 1.*iTime;\n    \n    vec2 pos=rot(t)*pos0;\n    observer=(iMouse.xy-iResolution.xy*.5)/iResolution.y;\n    \n    \n    \n    //signal rings:\n    //news traveling out at the speed of light:\n    float r= c*(t-retardedTime(uv, pos0, t, 50));\n    //retarded position from the field point:\n    vec2 rp=rot(retardedTime(uv, pos0, t, 100))*pos0;\n    col=.9*vec3(1,1,0)*cos(5.*(r-c*t))*cos(5.*(r-c*t))*cos(5.*(r-c*t));\n    \n    //snapshot object:\n    float  tt = floor(5.*c*t/(2.*PI))*2.*PI/(5.*c);\n    vec2 snapshot=rot(tt)*pos0;\n    col=max(col,vec3(1,1,0)*smoothstep(0.04,0.03,length(uv-snapshot)));\n\n    //observer:\n    col=max(col, vec3(0,1,1)*smoothstep(0.04,0.03,length(uv-observer)));\n\n    //realtime pos of object:\n    col=max(col, vec3(1)*smoothstep(0.04,0.03,length(uv-pos)));\n    \n    //retarded pos of object:\n    retardedPos=rot(retardedTime(observer, pos0, t, 100))*pos0;\n    col=max(col,vec3(1,0,1)*smoothstep(0.04,0.03,length(uv-retardedPos)));\n    \n    fragColor = vec4(col,1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}