{"ver":"0.1","info":{"id":"4XcXDl","date":"1719745766","viewed":93,"name":"mandelbrotus line","username":"nayk","description":"originals source https://glslsandbox.com/e#68373.0 https://glslsandbox.com/e#68373.0","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n#define PI 3.141592653\n#define TWO_PI 2.0*PI\n#define t time*0.3\n#define MAX 30.\n#define time iTime\n#define resolution iResolution.xy\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\t// vec2 uv = surfacePosition;\n\tvec2 uv = (gl_FragCoord.xy - resolution * 0.5) / max(resolution.x, resolution.y) * 4.0;\n\tuv *= 1.0;\n\n\t\tfloat t2 = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 2.2;\n\tfloat si = sin(t2);\n\tfloat co = cos(t2);\n\tmat2 ma = mat2(co, si, -si, co);\n \n\tvec2 z = uv;\n\tfloat e = 0.0;\n\tfor (float i=0.0;i<=100.0;i+=1.0) {\n\t\tz = vec2(z.x * z.x - z.y * z.y, 2.0 * z.y * z.x)+ z*cos(t)+uv*sin(t);\t\t\n\t\tif (length(z) > 2.0) break;\n\t\te += 0.005/abs(i*z.y + sin(time + i*z.y));\n\t}\n\t\nfragColor = vec4(vec3(e), 3.0);\t\nvec2 position =uv;\n\tvec2 mid = vec2(resolution.x/2.0, resolution.y/2.0);\n\tfloat distance = sqrt(pow(gl_FragCoord.x-mid.x,2.0) + pow(gl_FragCoord.y - mid.y,2.0))*.03;\n\tfragColor*= vec4( vec3( 10.0/distance, 100.0/distance, 600.0/distance)*vec3(10.,0.5,0.5)*0.1, 1.0 );\n}","name":"Image","description":"","type":"image"}]}