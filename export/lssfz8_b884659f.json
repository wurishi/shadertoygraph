{"ver":"0.1","info":{"id":"lssfz8","date":"1494910580","viewed":89,"name":"everyday 007/100","username":"kalin","description":"everyday 7/100","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["everyday"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.1415926535;\n\nfloat sdsphere(vec3 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat sdtorus(vec3 p, vec2 t)\n{\n  vec2 q = vec2(length(p.xz) - t.x, p.y);\n  return length(q) - t.y;\n}\n\nfloat sdbox(vec3 p, vec3 b)\n{\n    vec3 d = abs(p) - b;\n    return min(max(d.x, max(d.y, d.z)), 0.0) + length(max(d, 0.0));\n}\n\nfloat displacement(vec3 p, float c)\n{\n\treturn sin(c * p.x) * sin(c * p.y) * sin(c * p.z);\n}\n\nfloat sdspheredisplace(vec3 p, float r, float c)\n{\n    float d1 = sdsphere(p, r);\n    float d2 = displacement(p, c);\n    return d1 + d2;\n}\n\nfloat map(vec3 p)\n{\n    vec3 size = vec3(0.02);\n    float horizon = 0.13;\n\n        \n  \tvec3 pa = vec3(-0.4, horizon + sin(iTime + 0.0) * 0.03, 0.0);\n  \tvec3 pb = vec3(-0.3, horizon + sin(iTime + 0.1) * 0.03, 0.0);\n  \tvec3 pc = vec3(-0.2, horizon + sin(iTime + 0.2) * 0.03, 0.0);\n  \tvec3 pd = vec3(-0.1, horizon + sin(iTime + 0.3) * 0.03, 0.0);\n  \tvec3 pe = vec3(-0.0, horizon + sin(iTime + 0.4) * 0.03, 0.0);\n  \tvec3 pf = vec3(+0.1, horizon + sin(iTime + 0.5) * 0.03, 0.0);\n  \tvec3 pg = vec3(+0.2, horizon + sin(iTime + 0.6) * 0.03, 0.0);\n  \tvec3 ph = vec3(+0.3, horizon + sin(iTime + 0.7) * 0.03, 0.0);\n  \tvec3 pi = vec3(+0.4, horizon + sin(iTime + 0.8) * 0.03, 0.0);\n    \n  \tfloat ba = sdbox(p + pa, size);\n  \tfloat bb = sdbox(p + pb, size);\n  \tfloat bc = sdbox(p + pc, size);\n  \tfloat bd = sdbox(p + pd, size);\n  \tfloat be = sdbox(p + pe, size);\n  \tfloat bf = sdbox(p + pf, size);\n  \tfloat bg = sdbox(p + pg, size);\n  \tfloat bh = sdbox(p + ph, size);\n  \tfloat bi = sdbox(p + pi, size);\n    \n\tfloat boxes = min(ba, min(bb, min(bc, min(bd, min(be, min(bf, min(bg, min(bh, bi))))))));\n    \n    float t0 = texture(iChannel0, vec2(0.0, 0.0)).x;\n    float t1 = texture(iChannel0, vec2(0.1, 0.0)).x;\n    float t2 = texture(iChannel0, vec2(0.2, 0.0)).x;\n    float t3 = texture(iChannel0, vec2(0.3, 0.0)).x;\n   \tfloat t4 = texture(iChannel0, vec2(0.4, 0.0)).x;\n\tfloat t5 = texture(iChannel0, vec2(0.5, 0.0)).x;\n    \n    float sa = sdsphere(p + pa + vec3(sin(iTime * 0.2) * 0.01 - 0.005, -abs(sin(iTime * 0.001 * t0) * 0.6), 0.0), 0.01);\n    float sb = sdsphere(p + pb + vec3(sin(iTime * 0.5) * 0.01 - 0.005, -abs(sin(iTime * 0.002 * t0) * 0.6), 0.0), 0.01);\n    float sc = sdsphere(p + pc + vec3(sin(iTime * 0.7) * 0.01 - 0.005, -abs(sin(iTime * 0.001 * t1) * 0.5), 0.0), 0.01);\n    float sd = sdsphere(p + pd + vec3(sin(iTime * 0.3) * 0.01 - 0.005, -abs(sin(iTime * 0.004 * t1) * 0.5), 0.0), 0.01);\n    float se = sdsphere(p + pe + vec3(sin(iTime * 0.5) * 0.01 - 0.005, -abs(sin(iTime * 0.003 * t2) * 0.4), 0.0), 0.01);\n    float sf = sdsphere(p + pf + vec3(sin(iTime * 0.7) * 0.01 - 0.005, -abs(sin(iTime * 0.005 * t2) * 0.4), 0.0), 0.01);\n    float sg = sdsphere(p + pg + vec3(sin(iTime * 0.9) * 0.01 - 0.005, -abs(sin(iTime * 0.002 * t3) * 0.3), 0.0), 0.01);\n    float sh = sdsphere(p + ph + vec3(sin(iTime * 0.1) * 0.01 - 0.005, -abs(sin(iTime * 0.003 * t3) * 0.3), 0.0), 0.01);\n    float si = sdsphere(p + pi + vec3(sin(iTime * 0.5) * 0.01 - 0.005, -abs(sin(iTime * 0.002 * t4) * 0.2), 0.0), 0.01);\n\n    return min(boxes, min(sa, min(sb, min(sc, min(sd, min(se, min(sf, min(sg, min(sh, si)))))))));\n}\n\nfloat march(vec3 ro, vec3 rd)\n{\n\tfloat t = 0.0;\n    for(int i = 0; i < 64; ++i)\n    {\n        vec3 p = ro + rd * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 nuv = uv * 2.0 - 1.0;\n    nuv.x *= iResolution.x / iResolution.y;\n\n    vec2 rot = vec2(iTime * 0.0, iTime * 0.0);\n    mat2 rotm = mat2(cos(rot.y), -sin(rot.x), sin(rot.x), cos(rot.y));\n    \n    float tt0 = texture(iChannel0, vec2(0.0, 0.0)).x;\n    \n    vec3 ro = vec3(0.0, 0.0, -0.4);\n    vec3 rd = normalize(vec3(nuv, 1.0));\n    \n    float ns0 = texture(iChannel1, vec2(abs(sin(iTime)) * tt0 * 0.01 * uv.x, 0.0)).x;\n    \n    rd += ns0 * 0.1;\n    \n    rd.xy = rd.xy * rotm;\n    \n    float d = march(ro, rd);\n    float r = step(d, 0.99);\n    \n    vec4 bg = vec4(0.2, 0.5, 0.8, 1.0);\n    vec4 fg = vec4(0.7, 0.8, 0.3, 1.0);\n    \n    fragColor = bg + fg * r * d;\n\n    float c0 = sin(d);\n    float c1 = sin(d);\n            \n    float t0 = texture(iChannel0, vec2(0.0, 0.0)).x;\n    float t1 = texture(iChannel0, vec2(0.1, 0.0)).x;\n    float t2 = texture(iChannel0, vec2(0.2, 0.0)).x;\n    float t3 = texture(iChannel0, vec2(0.3, 0.0)).x;\n   \tfloat t4 = texture(iChannel0, vec2(0.4, 0.0)).x;\n\tfloat t5 = texture(iChannel0, vec2(0.5, 0.0)).x;\n    \n    fragColor.x += 0.2 * t1 * t2;\n    fragColor.y += 1.2 * t1 * t3 * r * 0.1;\n    fragColor.z += 0.2 * t0 * t3 * r * 1.4;\n    \n    fragColor.z += uv.y * t0 * r * r * 2.4;\n    \n    fragColor.xyz += fg.zxy * t2 * r;\n    \n    fragColor *= ns0 * 0.5;\n    fragColor += ns0 * bg * 0.1;\n    fragColor += texture(iChannel1, uv * ns0) * r * t2;\n    fragColor.x -= r * 0.2;\n\n\n    float t = iTime;\n}","name":"Image","description":"","type":"image"}]}