{"ver":"0.1","info":{"id":"clGGDV","date":"1685234771","viewed":94,"name":"liquid metal animation","username":"felipecsl","description":"First shader. Learing about fbm, noise and everything else","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["fbm","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const mat2 m = mat2(0.8, 0.6, -0.6,  0.8);\n\nfloat noise(in vec2 p) {\n\treturn sin(p.x) * sin(p.y);\n}\n\n// fractional brownian motion (thanks to iq)\nfloat fbm(vec2 p) {\n    float f = 0.5000 * noise(p); p *= 2.02;\n    f += 0.2500 * noise(p); p *= 2.03;\n    f += 0.1250 * noise(p); p *= 2.01;\n    f += 0.0625 * noise(p); p *= 2.04;\n    return f/0.9375;\n}\n\nfloat fbm6(vec2 p) {\n    float f = 0.0;\n    f += 0.250000*(0.5 + 0.5 * noise(p)); p = m*p*2.03;\n    f += 0.125000*(0.5 + 0.5 * noise(p)); p = m*p*2.01;\n    f += 0.062500*(0.5 + 0.5 * noise(p)); p = m*p*2.04;\n    f += 0.031250*(0.5 + 0.5 * noise(p)); p = m*p*2.01;\n    f += 0.500000*(0.5 + 0.5 * noise(p)); p = m*p*2.02;\n    f += 0.015625*(0.5 + 0.5 * noise(p));\n    return f/0.96875;\n}\n\nfloat pattern(in vec2 p) {\n    vec2 q = vec2(\n      fbm(p + vec2(0.0, 0.0)),\n      fbm(p + vec2(5.2, 1.3) * (iTime + 100.) * 0.01)\n    );\n    vec2 r = vec2(\n      fbm(p + 4. * q + vec2(1.7, 9.2)),\n      fbm(p + 4. * q + vec2(8.3, 2.8))\n    );\n    return fbm(p + 4. * r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 q = fragCoord.xy / iResolution.xy;\n  vec2 p = -1. + 2. * q;\n  vec3 color = 0.5 - vec3(pattern(p));\n  fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}