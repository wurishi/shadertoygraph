{"ver":"0.1","info":{"id":"slsSRN","date":"1625288700","viewed":75,"name":"Flame light dance","username":"conceptblend","description":"Exploration of color and symmetry over time.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["time","color","lights"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.);\n    \n    // Scale the space\n    uv *= 4.;\n    \n    float fork = smoothstep(0.0, 1.75, abs(uv.y+1.25));\n    float taper = mix(0.04, 1.8, fork);\n    float offset = 0.5 + (.5+.5*sin(iTime * 2.));\n    float flame = abs(abs(uv.x) - offset - fork * (.5+.5*sin(iTime * 2.5)));\n    \n    float c = smoothstep(taper, 0., flame);\n    col += c;\n    \n    // Partially undo the scaling\n    uv /= 2.;\n    col *= abs(abs(0.7*uv.xyx * vec3(1,2,4)) - (.5+.5*sin(iTime*3.)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}