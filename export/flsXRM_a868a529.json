{"ver":"0.1","info":{"id":"flsXRM","date":"1625489936","viewed":1189,"name":"[TUT] The American Flag","username":"BigWIngs","description":"I decided to make an American Flag for the fourth of July. This is the end result of a tutorial on YouTube. Link in the comments.","likes":26,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","flag","usa","america","artofcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// \"The American Flag\" \n// by Martijn Steinrucken aka The Art of Code/BigWings - 2020\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Email: countfrolic@gmail.com\n// Twitter: @The_ArtOfCode\n// YouTube: youtube.com/TheArtOfCodeIsCool\n// Facebook: https://www.facebook.com/groups/theartofcode/\n//\n// This shader is the end result of a tutorial on YouTube you can\n// find here: https://youtu.be/t4XnK50ocMk\n\nvec3 WHITE = vec3(1);\nvec3 RED = vec3(178, 34, 52)/255.;\nvec3 BLUE = vec3(60, 59, 110)/255.;\n\nfloat Star(vec2 uv, float size) {\n    uv.x = abs(uv.x);\n    \n    float a = 6.2832/5.;\n    float d1 = dot(uv, vec2(sin(a), cos(a)));\n    a = 3.*6.2832/5.;\n    float d2 = dot(uv, vec2(sin(a), cos(a)));\n    \n    a = 2.*6.2832/5.;\n    float d4 = dot(uv, vec2(sin(a), cos(a)));\n    \n    float d = min(max(d1, d2), max(uv.y, d4));\n    float w = min(fwidth(d), 0.05);\n    \n    return smoothstep(w, -w, d-size);\n}\n\nvec2 Remap(vec2 p, float b, float l, float t, float r) {\n    return vec2( (p.x-l) / (r-l), (p.y-b) / (t-b));\n}\n\nvec3 Flag(vec2 uv) {\n    float y = sin(uv.y*3.1415*13.);\n    float w = fwidth(y);\n    float stripes = smoothstep(-w, w, y);\n    w = fwidth(uv.y);\n    vec3 col = mix(WHITE, RED, stripes);\n    \n    vec2 st = Remap(uv, .46, 0., 1., .4);\n    \n    float size = .07;\n    if(st.x>0. && st.x<1. && st.y>0. && st.y<1.) {        \n        vec2 gv = fract( st*vec2(6,5) )-.5;\n        \n        col = mix(\n            mix(col, BLUE, smoothstep(0., w*3., st.y)), \n            WHITE, \n            Star(gv, size)\n        );\n        \n        st = Remap(st, .1, .0833, .9, .9166);\n        if(st.x>0. && st.x<1. && st.y>0. && st.y<1.) { \n            vec2 gv = fract( st*vec2(5,4) )-.5;\n            col = mix(col, WHITE, Star(gv, size));\n        }\n    }\n    \n    col *= smoothstep(w, .0, abs(uv.y-.5)-.5+w);\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float t = uv.x*7.-2.*iTime+uv.y*3.;\n    uv.y += sin(t)*.05;\n    \n    vec3 col = Flag(uv);\n    \n    col *= .7+cos(t)*.3;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}