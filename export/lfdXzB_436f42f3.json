{"ver":"0.1","info":{"id":"lfdXzB","date":"1714116230","viewed":48,"name":"Glowing Hue Circles - YM","username":"YusufMetin","description":"\nTrying to make different shaders in my learning process.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle","glow","hue"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 col = vec4(0.0);\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec4 circle(vec2 uv, float hue, vec2 center, float radius){\n    float dist = length(uv - center); \n    vec3 color = hsv2rgb(vec3(hue, 1.0, 1.0));\n    if (dist < radius) { \n        col.rgb = color;\n    }\n    col.rgb = mix(color, col.rgb, \n        smoothstep(radius - 0.1, radius + 0.1, dist));\n    \n    return col;\n}\n\nvec2 drawCircle(int i){\n    return vec2(sin(iTime+float(i/10))/6.0, cos(iTime+float(i/10))/6.0) + 0.4;  \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{  \n    vec2 uv = fragCoord / iResolution.y;\n    uv.x -= 0.5;\n    uv.y -= 0.1;\n\n    float radius = 0.40;\n    // float radius = 0.35 + 0.05 * sin(iTime * 1.0); \n\n    for (int i = 1; i<=6;i++){\n        float hue = mod(iTime * 0.1 + float(i) / 100.0, 1.0);\n        circle(\n            uv, \n            hue,\n            drawCircle(i),\n            radius = radius-0.05  \n        );\n    }\n\n    fragColor = col; \n}\n","name":"Image","description":"","type":"image"}]}