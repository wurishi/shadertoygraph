{"ver":"0.1","info":{"id":"tlfyRS","date":"1592597526","viewed":377,"name":"Starburst effect","username":"DmitRex","description":"Attempt to imitate starburst effect when looking at the sun","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sun","star","starburst","sunburst"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// set this to 0 to get simplified version\n#define EXTENDED_VERSION 1\n\nfloat GetRotatedScaledEllipseLength( vec2 pos, float angle, vec2 scale )\n{\n    return pow( length( vec2( pos.x * sin( angle ) - pos.y * cos( angle ), pos.x * cos( angle ) + pos.y * sin( angle ) ) * scale ), 0.5 );\n}\n\nvec3 DoStarburst( in vec3 bgcolor, in vec2 SunPosition )\n{\n    vec3 sunColor = vec3( 0.96, 0.94, 0.93333 );\n    \n    float positionLength = length( SunPosition );\n    float x = smoothstep( 1.0, 0.0, GetRotatedScaledEllipseLength( SunPosition, 1.0, vec2( 15.0, 1.0 ) ) );\n    float rayFade = clamp( ( 1.0f - positionLength ), 0.0, 1.0 );\n    \n    // base 2 rays\n    vec3 finalColor = mix( bgcolor, sunColor, x * rayFade );\n    \n    // two more base rays\n    x = smoothstep( 1.0, 0.0, GetRotatedScaledEllipseLength( SunPosition, 1.94, vec2( 10.0, 1.25 ) ) );\n    x = smoothstep( 0.125, 0.95f, x );\n    rayFade = clamp( ( 1.0f - positionLength * 0.4 ), 0.0, 1.0 );\n    finalColor = mix( finalColor, sunColor, x * rayFade );\n    \n    // mid size rays\n    x = smoothstep( 1.0, 0.0, GetRotatedScaledEllipseLength( SunPosition, 0.1, vec2( 10.0, 1.25 ) ) );\n    x = smoothstep( 0.15, 0.85f, x );\n    rayFade = clamp( ( 1.0f - positionLength * 0.65 ), 0.0, 1.0 );\n    finalColor = mix( finalColor, sunColor, x * rayFade );\n    \n#if EXTENDED_VERSION\n    // two small diagonal rays\n    x = smoothstep( 1.0, 0.0, GetRotatedScaledEllipseLength( SunPosition, -0.25, vec2( 20.0, 1.25 ) ) );\n    x = smoothstep( 0.15, 0.85f, x );\n    finalColor = mix( finalColor, sunColor, x * rayFade );\n    \n    // two small diagonal rays\n    x = smoothstep( 1.0, 0.0, GetRotatedScaledEllipseLength( SunPosition, 1.45, vec2( 20.0, 1.25 ) ) );\n    x = smoothstep( 0.15, 0.85f, x );\n    finalColor = mix( finalColor, sunColor, x * rayFade );\n    \n    // two more small rays\n    x = smoothstep( 1.0, 0.0, GetRotatedScaledEllipseLength( SunPosition, 0.5, vec2( 20.0, 1.25 ) ) );\n    x = smoothstep( 0.15, 0.85f, x );\n    rayFade = clamp( ( 1.0f - positionLength * 0.65 ), 0.0, 1.0 );\n    finalColor = mix( finalColor, sunColor, x * rayFade );\n#endif\n    \n    // two long rays\n    x = smoothstep( 1.0, 0.0, GetRotatedScaledEllipseLength( SunPosition, 2.48, vec2( 15.0, 0.8 ) ) );\n    x = smoothstep( 0.15, 0.85f, x );\n    finalColor = mix( finalColor, sunColor, x * rayFade );\n    x = smoothstep( 1.0, 0.0, GetRotatedScaledEllipseLength( SunPosition, 2.42, vec2( 15.0, 0.8 ) ) );\n    x = smoothstep( 0.15, 0.85f, x );\n    finalColor = mix( finalColor, sunColor, x * rayFade );\n    \n    return clamp( finalColor, 0.0, 1.0 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 sunCenter = vec2( 0.5 );\n    \n    if( iMouse.xy != vec2( 0.0 ) )\n    {\n     \tsunCenter = iMouse.xy / iResolution.xy;   \n    }\n    \n\tvec2 SunPosition = uv - sunCenter;\n    \n    // aspect ratio\n    SunPosition.x *= float( iResolution.x / iResolution.y );\n    \n \tvec3 col = vec3( 0.2443, 0.156, 0.8698 );\n\tcol = DoStarburst( col, SunPosition );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}