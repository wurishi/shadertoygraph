{"ver":"0.1","info":{"id":"mlf3Dn","date":"1671578548","viewed":166,"name":"homosexual line","username":"Swifter","description":"line ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 closestPointOnLine(vec2 linePoint, vec2 dir, vec2 point) {\n    dir = dir / length(dir);\n    vec2 delta = point - linePoint;\n    float dist = dot(delta, dir);\n    return linePoint + dir * dist;\n}\n\n// used from https://gist.github.com/983/e170a24ae8eba2cd174f\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Positions\n    vec2 mousePos = vec2(iMouse.x, iMouse.y);\n    vec2 centerPos = iResolution.xy / 2.;\n    vec2 delta = mousePos - centerPos;\n    \n    // Draw line\n    vec2 linePoint = closestPointOnLine(mousePos, delta, fragCoord);\n    float dist = distance(fragCoord, linePoint);\n    \n    // Get value\n    float f = dist / iResolution.y;\n    f *= dist / iResolution.y * 10.;\n    f += iTime;\n    f = mod(f, 1.);\n    \n    // Add circle variation\n    float circleDist = 1. - distance(fragCoord, centerPos) / iResolution.x;\n    f *= circleDist * 2.;\n    \n    // Make gay\n    float hue = dist / iResolution.y;\n    hue += iTime;\n    vec3 color = hsv2rgb(vec3(hue, 1., f));\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}