{"ver":"0.1","info":{"id":"MdXBDj","date":"1498077647","viewed":197,"name":"code training 01","username":"antonOTI","description":"training to code shader fast\nnot to happy with the glich in the distance :s","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","codetraining"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nint STEP = 256;\nfloat ESP = .005;\n\n\nvec2 rot(vec2 cp, float a)\n{\nfloat ca = cos(a);\nfloat sa = sin(a);\n  return mat2(ca,-sa,sa,ca) * cp;\n}\n\nfloat map(vec3 pos,out float id)\n{\n  \n  vec3 sp = pos;\n  sp.x = abs(sp.x);\n  sp.y += sp.x * -0.5;\n  float f1 = distance(sp, vec3(0.,2.5,15.)) - 1.;\n\n\n  pos.xy = rot(pos.xy , pos.z * .01);\n  float n = texture(iChannel0,pos.xz * .005 + vec2(0.,iTime * .05)).x * pos.z * .05;\n\n  float f2 = distance(pos.y , -1. + n);\n\n  id = mix(1.,2.,step(f1,f2));\n\n  return min(f1,f2);\n\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);  \n  uv -= .5;\n  uv.x *= iResolution.x / iResolution.y;  \n  \n  vec3 ro = vec3(uv,0.) + vec3(0.,3.,0.);\n  vec3 rd = normalize(vec3(uv, 1));\n\n  vec3 cp = ro;\n  float cd;\n  int cs = 0;\n  float id;\n  for(;cs < STEP; ++ cs)\n  {\n    cd = map(cp,id);\n    if(cd < ESP)\n      break;\n    cp += rd * cd * .25;\n  }\n  float f =  1. - float(cs) / float (STEP);\n   \n\n  fragColor = mix(vec4(1.,0.,0.,1.),vec4(1.), (id - 2.) *-1.) * f;\n}","name":"Image","description":"","type":"image"}]}