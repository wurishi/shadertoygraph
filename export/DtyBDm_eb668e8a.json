{"ver":"0.1","info":{"id":"DtyBDm","date":"1702127838","viewed":15,"name":"UV mapping??","username":"ativata","description":"So this is the idea: the final color is determined by a second texture sampled at u = r,v = g from the first texture\nIn this demo, the first texture is animated to output the correct UVs for this cool break-refuse animation","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["uv","mapping","uvmapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 cuv = texture(iChannel0,uv).xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel1,cuv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 id = floor(uv * 64.);\n    vec2 uf = fract(uv * 64.);\n    if(mod(iTime,64.) > 32.){\n        if (id.x < mod(iTime * 2.,64.) || (id.y < mod(iTime * 128.,64.) && id.x < mod(iTime * 2. + 1.,64.))){\n            fragColor = uf.xyxy;\n        }else{\n            fragColor = uv.xyxy;\n        }\n    }else{\n        if (id.x < mod(iTime * 2.,64.) || (id.y < mod(iTime * 128.,64.) && id.x < mod(iTime * 2. + 1.,64.))){\n            fragColor = uv.xyxy;\n        }else{\n            fragColor = uf.xyxy;\n        }    \n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}