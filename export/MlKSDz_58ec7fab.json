{"ver":"0.1","info":{"id":"MlKSDz","date":"1483974344","viewed":182,"name":"Equations","username":"Gottfried","description":"using shaders to solve equations","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","equation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\t//vec2 uv = fragCoord.xy / iResolution.xy;\n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    //float x = fragCoord.x- 250.;\n\t//float y = fragCoord.y- 200.;\n    //vec2( 300., 200.);\n    //float circle = sqrt(x*x + y*y);\n    //pow(x, 2);\n    //clamp(10. -abs( len -100.), 0., 1.);\n    \n    //if( abs( len -100.) <10.){\n    //\tfragColor += vec4(1, vec3(0));\n    //}\n    \n    //fragColor =vec4( abs( len -100.) <10. , vec3(0));\n    //fragColor =vec4( 10. -abs( len -100.), vec3(0));// AA\n\n    //Geometric parameters\n    float scale= iResolution.y /2.;\n    vec2 center= fragCoord.xy -iResolution.xy /2.; \n    vec2 pos;\n    float radius= scale /1.5;\n    //float width= scale /5.;\n    float width= 40.;\n    float c;\n\n    //coloring parameters\n    //float p= scale /50.;\n    //float a= scale /1000000.;\n    //float b= scale *.0;\n    \n    float p= 1.1; //2.\n    float a= .02;\n    float b= .0;\n\n    //time parameters\n    float rate= .5;\n    float amp= scale/1.25;\n    \n    //Red Circle\n    pos= center - vec2( amp, 0.) *sin(iTime *rate *.5);\n    c= width -abs( length( pos) -radius);\n    fragColor = vec4( pow(c,p)*a +b, vec3(0.));\n    \n    //Green Circle\n    pos= center - vec2( amp, 0.) *sin(iTime *rate *2.); \n    c = width -abs( length( pos) -radius);\n    fragColor += vec4( 0., pow(c,p)*a +b, vec2(0.));\n    \n    //Blue Circle\n    pos= center - vec2( amp, 0.) *sin(iTime *rate); \n    c = width -abs( length( pos) -radius);\n    fragColor += vec4( vec2(0.), pow(c,p)*a +b, 0.);\n}\n","name":"Image","description":"","type":"image"}]}