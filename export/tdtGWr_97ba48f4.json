{"ver":"0.1","info":{"id":"tdtGWr","date":"1568252347","viewed":162,"name":"Rave Ghost","username":"AlexWalley","description":"Rave Ghost for friends.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28\n#define PI 3.1415926535\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat N21(vec2 p){\n\treturn fract(sin(p.x*884.32+p.y*49993.)*239.);\n}\n\nfloat smoothNoise(vec2 uv){\n    \n    vec2 lv = fract(uv);\n    vec2 id = floor(uv);\n    \n    lv = lv*lv*(3.-2.*lv);\n    float bl = N21(id);\n    float br = N21(id+vec2(1, 0));\n    \n    float b = mix(bl, br, lv.x);\n    \n    float tl = N21(id+vec2(0, 1));\n    float tr = N21(id+vec2(1,1));\n    float t = mix(tl, tr, lv.x);\n    \n    return mix(b, t, lv.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.);\n    float height = 0.2;\n    vec2 p = uv;\n    \n    float rate = 3.5;\n    p.x += sin(uv.y*6.+iTime*rate)*0.025;\n    if(p.y < -0.2) // Tail wiggle\n    \tp.x += sin(uv.y*65.+iTime*rate)*0.25*(p.y+0.2);\n    \n    float pix = 1.5/iResolution.y;\n    p.y += 0.1;\n    //Body\n    col += smoothstep(0.2+pix, 0.2-pix, abs(p.x));\n   \n    col -= smoothstep(0.3-pix, 0.3+pix, abs(p.y-0.0));\n\tcol = clamp(col, 0., 1.0);\n    col += smoothstep(0.201+pix, 0.201-pix, length(vec2(p.x, p.y-0.29)));\n    \n    \n    \n    \n    //Triangle\n    vec2 gt = p;\n    \n    float a = 0.9;\n    gt *= mat2(cos(a), -sin(a), sin(a), cos(a));\n    col -= smoothstep(0.1+pix, 0.1-pix, abs(gt.y+0.3));\n    col = clamp(col, 0., 1.);\n    \n    \n    a = -0.9;\n    gt *= mat2(cos(a), -sin(a), sin(a), cos(a));\n    gt.x *= -1.;\n    a = 0.9;\n    gt *= mat2(cos(a), -sin(a), sin(a), cos(a));\n    col -= smoothstep(0.1+pix, 0.1-pix, abs(gt.y+0.3));\n    \n    //Random number based upon time\n    float t = mod(iTime, 200.);\n    float h = smoothNoise(vec2(t));\n    h += smoothNoise(vec2(t*2.))*0.5;\n    h += smoothNoise(vec2(t*4.))*0.25;\n    \n    //Eyes\n    float size = sin(iTime*rate)*0.02+0.05;\n    \n    col *= vec3( smoothstep(size-pix, size+pix, length(vec2(abs(p.x - 0.1), p.y-0.3))));\n    col *= vec3( smoothstep(size-pix, size+pix, length(vec2(abs(p.x + 0.1), p.y-0.3))));\n    col = clamp(col, 0., 1.0);\n    \n    //Arms\n    vec2 av = p;\n    \n    av.y -= sin(abs(av.x*30.)-2.*iTime)*0.025;\n    float thickness = 0.05*(1.0-abs(av.x*1.5));\n    col += smoothstep( thickness+pix, thickness-pix, abs(av.y-0.13) );\n    col = clamp(col, 0., 1.);\n    \n    \n    \n    \n    vec3 rave = hsv2rgb(vec3(h, 0.7,1.0));\n    col *= rave;\n    \n    col = clamp(col, 0., 1.);\n    \n    col += smoothstep(0.0, 1.0, abs(p.y-0.1))*rave;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}