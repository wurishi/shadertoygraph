{"ver":"0.1","info":{"id":"wtsfWS","date":"1619022871","viewed":43,"name":"gt","username":"MaximeG","description":"hum","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 normal(vec2 uv)\n{\n    vec2 e = vec2(0.001, 0.);\n    float strength = 0.1;\n    \n    float height  = texture(iChannel0, uv).x;\n    float heightx = texture(iChannel0, uv + e).x;\n    float heighty = texture(iChannel0, uv + e.yx).x;\n        \n    return vec3(vec2(heightx - height, heighty - height) / e.x * strength + vec2(0.5), 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / iResolution.xy;\n    \n\n    vec3 col = (iMouse.x / iResolution.x < uv.x) ? normal(uv) : texture(iChannel0, uv).xyz;\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (abs(fragCoord - iResolution.xy * .5) - iResolution.xy * 0.5)/iResolution.x;\n\n    \n    float height = 1. - smoothstep(0.06, 0.1, length(uv));\n    vec2 a = normalize(uv);\n    height += abs(mod(a.x * a.x, 0.2) * 10. - 1.) * (.3 - length(uv));\n    vec3 col = vec3(clamp(height, 0., 1.));\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}