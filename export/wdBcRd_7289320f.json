{"ver":"0.1","info":{"id":"wdBcRd","date":"1587299684","viewed":233,"name":"Text output","username":"NonGrate","description":"Text output\n\nIt is Work In Progress, but getLetter(ascii) works, but only when letterbox position is (0;0)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["text"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int V_COUNT = 16;\nconst int H_COUNT = 16;\n\nvec2 steps;\n\nvec3 getLetter(int ascii, int row, int column, vec2 uv) {\n    uv = vec2(uv.x - (steps.x*float(column))/iChannelResolution[0].x, uv.y - (steps.y*float(row))/iChannelResolution[0].y);\n    return texture(iChannel0, uv+(vec2(ascii,15-ascii/16))/16.).xxx;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    steps.x = iChannelResolution[0].x / float(H_COUNT);\n\tsteps.y = iChannelResolution[0].y / float(V_COUNT);\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv_tex = fragCoord/iChannelResolution[0].xy;\n    vec2 nSteps = steps/iChannelResolution[0].xy;\n    \n    vec3 col;\n    \n    float xIndex = uv.x / (steps.x/iResolution.x);\n    float yIndex = uv.y / (steps.y/iResolution.y);\n    \n    if (int(ceil(yIndex)) == 1 || int(ceil(xIndex)) == 1) {\n        col = getLetter(65, int(yIndex), int(xIndex), uv_tex);\n    } else {\n        col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    }\n    \n    fragColor = vec4(col,1.0);\n   \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}