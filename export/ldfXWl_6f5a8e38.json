{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float noise(in vec2 pos)\n{\n    //return fract(sin(dot(pos ,vec2(12.9898,78.233))) * 43758.5453);\n    return fract( sin( dot(pos*0.001 ,vec2(24.12357, 36.789) ) ) * 12345.123);\n}\n\nfloat smooth_noise(vec2 pos)\n{\n    float corners = (noise(vec2(pos.x-1.0, pos.y-1.0)) + \n                    noise(vec2(pos.x+1.0, pos.y-1.0)) + \n                    noise(vec2(pos.x-1.0, pos.y+1.0)) + \n                   \tnoise(vec2(pos.x+1.0, pos.y+1.0)))/16.0;\n                          \n\tfloat sides = (noise(vec2(pos.x-1.0, pos.y)) + noise(vec2(pos.x+1.0, pos.y)) +\n                  noise(vec2(pos.x, pos.y-1.0)) + noise(vec2(pos.x, pos.y+1.0))) / 8.0;\n                          \n\tfloat centre = noise(vec2(pos.x,pos.y)) / 4.0;\n    \n    return centre + sides + corners;                                \n}\n\nfloat interpolate_noise(vec2 pos)\n{\n\tfloat a, b, c, d;\n    \n    a = smooth_noise(floor(pos));\n    b = smooth_noise(vec2(floor(pos.x+1.0), floor(pos.y)));\n    c = smooth_noise(vec2(floor(pos.x), floor(pos.y+1.0)));\n    d = smooth_noise(vec2(floor(pos.x+1.0), floor(pos.y+1.0)));\n    \n    a = mix(a, b, fract(pos.x));\n    b = mix(c, d, fract(pos.x));\n    a = mix(a, b, fract(pos.y));\n    \n    return a;\n}\n\nfloat fbm_interpolated(vec2 pos)\n{\n    float f = 0.0;\n    \n    f += 0.5000 * interpolate_noise(pos); pos *= 0.203;\n    f += 0.2500 * interpolate_noise(pos); pos *= 0.202;\n    f += 0.1250 * interpolate_noise(pos); pos *= 0.201;\n    f += 0.0625 * interpolate_noise(pos); pos *= 0.204;\n    f /= 0.9375;\n    \n    return f;\n}\n\nfloat fbm(vec2 pos)\n{\n    float f = 0.0;\n    \n    f += 0.5000 * smooth_noise(pos); pos *= 0.203;\n    f += 0.2500 * smooth_noise(pos); pos *= 0.202;\n    f += 0.1250 * smooth_noise(pos); pos *= 0.201;\n    f += 0.0625 * smooth_noise(pos); pos *= 0.204;\n    f /= 0.9375;\n    \n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord.xy;\n\tvec2 uv = pos / iResolution.xy;\n    vec2 p = -1.0 + 2.0 * uv;\n    \n    float a = atan(p.y, p.x);\n    \n    p.x *= iResolution.x / iResolution.y;\n    \n    vec3 color = vec3(1.0);\n    \n    float r = sqrt(dot(p, p));\n    \n    float ss = 0.5 + 0.5*sin(4.0 * iTime);\n    float anim = 1.0 + 0.1* ss * clamp(1.0-r, 0.0, 1.0);\n    r *= anim;\n    \n    if(r < 0.8)\n    {\n        color = vec3(0.0, 0.3, 0.4);\n        float f = fbm_interpolated(15.0 * p);\n        color = mix(color, vec3(0.2, 0.5, 0.4), f);\n        \n        f = 1.0 - smoothstep(0.2, 0.5, r);\n        color = mix(color, vec3(0.9, 0.4, 0.2), f);\n        \n        a += 0.1 + fbm_interpolated(6.0 * p);\n        \n        f = smoothstep(0.3, 1.0, fbm_interpolated(vec2(6.0*r, 20.0*a)));\n        color = mix(color, vec3(1.0), f);\n        \n        f = smoothstep(0.4, 0.9, fbm_interpolated(vec2(8.0*r, 45.0*a)));\n        color *= 1.0 - f;\n        \n        f = smoothstep(0.5, 0.95, r);\n        color *= 1.0 - 0.5 * f;\n        \n        f = smoothstep(0.2, 0.25, r);\n        color *= f;\n        \n        f = 1.0 - smoothstep(0.0, 0.5, length(p - vec2(0.3, 0.3)));\n        color += vec3(1.0, 0.9, 0.8) * f * 0.9;\n        \n        f = smoothstep(0.75, 0.8, r);\n        color = mix(color, vec3(1.0), f);\n    }\n    \n    fragColor = vec4(color, 1.0);\n\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldfXWl","date":"1407844865","viewed":313,"name":"Beautypi's Creepy Eye","username":"SNce","description":"Recreated from iq's video.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fbmbeautypi"],"hasliked":0,"parentid":"","parentname":""}}