{"ver":"0.1","info":{"id":"fldyzj","date":"1660137682","viewed":119,"name":"space pulsar","username":"nexor","description":".","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define frame iFrame\n#define resolution iResolution.xy\n\nconst float pi = acos(-1.);\nconst float tau=pi*2.;\n#define sin1(x) (sin((x))*.5+.5)\nmat2 rot(float a)\n{\n  float c=cos(a),s=sin(a);\n  return mat2(c,-s,s,c);\n}\nfloat rand(vec2 n) {\n\t\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\nfloat noise(vec2 p)\n{\n\t\tvec2 ip = floor(p);\n\t\t\tvec2 u = fract(p);\n\t\t\tu = u*u*(3.0-2.0*u);\n\t\t\tfloat res = mix(\n\t\t\t\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\t\t\t\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\t\t\t\t\t\t\treturn res*res;\n}\nconst mat2 M =mat2(\n\t.74,-.52,\n\t.64,.73\n);\nfloat fbm(vec2 p)\n{\n    float f = 0.0;\n    f += 0.5000*noise( p ); p*=M*2.02;\n    f += 0.2500*noise( p ); p*=M*2.03;\n    f += 0.1250*noise( p ); p*=M*2.01;\n    f += 0.0625*noise( p );\n    f /= 0.9375;\n    return f;\n}\nvec2 fan(vec2 p, int n)\n{\n  float N=float(n);\n  float a = atan(p.y,p.x);\n  a=mod(a,pi*2./N)-pi/N;\n  return length(p)*vec2(cos(a),sin(a));\n}\nvec3 rgb2hsv(vec3 c)\n{\n\tvec4 X = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = mix(vec4(c.bg, X.wz), vec4(c.gb, X.xy), step(c.b, c.g));\n\tvec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\nvec3 hsv2rgb(vec3 c)\n{\n\tvec4 k= vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + k.xyz) * 6.0 - k.www);\n\treturn c.z * mix(k.xxx, clamp(p - k.xxx, 0.0, 1.0), c.y);\n}\nfloat box(vec2 p, vec2 s)\n{\n  vec2 d = abs(p)-s;\n  return min(max(d.x,d.y),0.)+length(max(d,0.));\n}\nfloat line( in vec2 p, in vec2 a, in vec2 b )\n{\n\tvec2 pa = p-a, ba = b-a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn length( pa - ba*h );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat mx = max(resolution.x, resolution.y);\n\tvec2 uv = (2.*fragCoord.xy-resolution.xy)/mx;\n\tvec3 col = vec3(0);\n\tfloat w=fwidth(uv.y);\n float t=float(frame)/60.;\n vec2 p=uv,q=uv;\n float a=atan(uv.y,uv.x);\n float k=length(p);\n int I=11;\n float F=float(I);\n float d=0.;\n float dt=-t*.7;\n k=sin(sin(k*k*3.+sin(dt*1.)*3.+dt*3.)*1.)*.2+k;\n for(int i=0;i<I;++i)\n {\n \tfloat f=float(i);\n d=max(d,pow(sin1(a*6.+dt*3.+(k*15.)+19.*k*f/F),k*k*2.));\n }\n //d=min(d,1.);\n //d+=sin(w*2.);\n p*=rot(dt-pi/2.);\n d=max(d,1.-length(p)+.005);\n d=smoothstep(w,0.,1.-d);\n //hsv2rgb(vec3(a/tau-t*.2,.8,.8));\n col+=d;\n const float aa = 2.;\n float stars = 0.;\n for(float y=0.;y<aa;y++)\n for(float x=0.;x<aa;x++)\n {\n vec2 aauv=uv+vec2(x,y)/aa;\n     stars+=smoothstep(w,0.,rand(aauv*250.));\n }\n stars/=aa*aa;\n col += stars;\n //gamma correction\n col=pow(col,vec3(1./2.2));\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}