{"ver":"0.1","info":{"id":"stByDV","date":"1650244030","viewed":288,"name":"Polaroid filter","username":"Wildric","description":"Here is a very simple polaroid shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["postprocessing","vintage","polaroid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define grain\n#define vignette\n#define pseudoVintage\n#define vignetteColor vec3(0.2)\n#define vignetteBlur 0.1\n#define vignetteRadius 0.9\n\n\nfloat noise(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float left  = 0.2;\n    float right = 0.8;\n    float up    = 0.97;\n    float down  = 0.27;\n    vec2 blur   = vec2(0.05,0.05);\n    \n    vec3 col = vec3(smoothstep(left, left+blur.x,uv.x));\n    col *= vec3(1.0 - smoothstep(right-blur.x, right,uv.x));\n    col *= vec3( smoothstep(down, down + blur.y,uv.y));\n    col *= vec3(1.0 - smoothstep(up-blur.y, up,uv.y));\n    col  = (1.0-col);\n\n    \n    if (uv.x>left && uv.x < right && uv.y <up && uv.y > down) {\n        vec2 center = vec2((left + right)*0.5, (up+down)*0.5);\n        col = texture(iChannel0, vec2((uv.x- left)/(right-left), (uv.y - down)/(up - down))).xyz;\n        \n        #ifdef vignette\n        float m = pow(pow(uv.x - center.x, 12.0) * pow(uv.y - center.y, 12.0), 0.5);\n        float d = distance(vec2(left, up), vec2(center.x,center.y)) - vignetteRadius;\n        col *= (1.0-smoothstep(d - vignetteBlur, d, m)*vignetteColor);\n        #endif\n        \n        #ifdef grain \n        col = mix(col,vec3(noise(uv)), 0.1);\n        #endif\n        #ifdef pseudoVintage\n        col = mix(col, texture(iChannel1, vec2((uv.x- left)/(right-left), (uv.y - down)/(up - down))).xyz,0.15);\n        #endif\n        \n       \n    }\n    else col = vec3(uv.x*uv.y+0.7);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}