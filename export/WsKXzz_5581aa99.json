{"ver":"0.1","info":{"id":"WsKXzz","date":"1573265480","viewed":245,"name":"Wobble XY","username":"BrokenBit","description":"Simple sine wobble on x/y axis","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["wobble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on Simple Wobble by chapter9 (https://www.shadertoy.com/view/MdS3RV)\n// This applies the sine wave offset on both X and Y axes.\n// Also applies a bit of zoom to hide image edges. \n\n\nfloat wobble(float p, float amplitude, float frequence, float speed)\n{\n    return amplitude * sin(p * frequence + iTime * speed);\n}\n\nvec2 zoom(vec2 uv, float amt)\n{\n    return 0.5 + ((uv - 0.5) * amt);\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat a = 0.01;\n\tfloat f = 20.0;\n\tfloat s = 8.0;\n \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv.x += wobble(uv.y, a, f, s);\n    uv.y += wobble(uv.x, a, f, s);\n    \n    uv = zoom(uv, 1.0 - a*3.);\n\t\n    fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"}]}