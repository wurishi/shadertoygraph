{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"float speed = .1;\nconst float blurAmount = 3.0;\n\nvec4 m_sample(vec2 uv)\n{\n    float scale = uv.x * .1;\n    \n    uv += vec2(-iTime,1.0) * speed;\n    uv.y += sin(uv.x * 10.0 + iTime) * scale;\n    uv.x += cos(uv.y * 5.0 + iTime) * scale;\n    \n    // Fetch the texture\n\treturn texture(iChannel0, uv * 2.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Ignore that line\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Blur it\n    vec4 ret = vec4(0.0, 0.0, 0.0, 0.0);\n    float scale = uv.x * 2.0;// pow(uv.y - .5, 1.0) * 4.0; // Blur scale, only on top and bottom\n    for (float y = -blurAmount; y <= blurAmount; ++y) {\n   \t \tfor (float x = -blurAmount; x <= blurAmount; ++x) {\n        \tret += m_sample(vec2(uv.x + x / iResolution.x * scale, uv.y + y / iResolution.y * scale));\n        }\n    }\n    ret /= pow(blurAmount * 2.0 + 1.0, 2.0);\n    \n    // Fetch the texture\n\tfragColor = ret * mix(vec4(0.0, .75, 1.0, 1.0), vec4(1.0, .75, 0, 1.0), scale / 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ls2Szy","date":"1413489796","viewed":394,"name":"Simple Scroll","username":"daivuk","description":"simple scrolling example","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["scroll"],"hasliked":0,"parentid":"","parentname":""}}