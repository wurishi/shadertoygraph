{"ver":"0.1","info":{"id":"ttyXRd","date":"1583362417","viewed":130,"name":"Chess battle","username":"creikey","description":"A trippy spinning chessboard","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard","checkers","chess"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 xy, float theta)\n{\n    return vec2(xy.x*cos(theta) - xy.y*sin(theta),\n               xy.x*sin(theta) + xy.y*cos(theta));\n}\n\n//  1 out, 1 in...\nfloat hash11(float p)\n{\n    p = fract(p * .1031);\n    p += cos(iTime*0.001);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // where 0.0 is the center\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    uv *= 10.0;\n    //uv.y *= 0.55;\n    \n    float floored = floor(length(uv));\n    \n    uv = rotate(uv, iTime*floored*0.3);\n    \n    \n    \n    // Time varying pixel color\n    \n    float value = -1.0 + 2.0*mod(floor(uv.x) + floor(uv.y), 2.0);\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    \n    vec3 col = vec3(value);\n    \n    col.r *= hash11(floored)*0.4 + 0.3;\n    col.g *= hash11(floored + 7.39)*0.8 + 0.4;\n    col.b *= hash11(floored + 9.12)*0.3 + 0.6;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}