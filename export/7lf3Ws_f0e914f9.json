{"ver":"0.1","info":{"id":"7lf3Ws","date":"1642808266","viewed":108,"name":"Broccoli","username":"lil_chickehh","description":"Layered voronoi diagrams. I tried to make it look like Romanesco Broccoli. Any suggestions?","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat fractal(vec2 p, float n){\n    float i=0.;\n    float c=0.;\n    while(i<n){\n        c+=texture(iChannel0, p*exp2(i)).x*exp2(-i);\n        i+=1.;\n    }\n    c/= (2.-exp2(-(n-1.)));\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord.xy/iResolution.xy;\n    u*=0.06;\n    fragColor = vec4(vec3(fractal(u,5.)),1.);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 N(vec2 p){\n return fract(vec2(sin(p.x*123.4+0.1)*27080.*sin(p.y*3607.24+0.7)+0.1,sin(p.x*723.3-0.3)*26580.*sin(p.y*397.24+0.34)));\n}\n\nvec2 point_coords(vec2 i, float ti){\n    return .5+.5*vec2(sin(N(i).x*ti),cos(N(i).y*ti));\n\n}\n\nfloat d(vec2 p, vec2 id, vec2 delta, float t){\n    return length(p-point_coords(id+delta,t)-delta);\n}\nvec3 CheckCells(vec2 p, vec2 i, float time){\n    float m = 10.;\n    vec2 id;\n    for(float x = -1.; x<=1.; x+=1.){\n        for(float y = -1.; y<=1.; y+=1.){\n            if(m>d(p,i,vec2(x,y),time)){\n                m=d(p,i,vec2(x,y),time);\n                id=i+vec2(x,y);\n            }\n        }\n    }\n    return vec3(m,id);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.y;\n    vec2 nc = fragCoord/iResolution.xy;\n    u*=30.;\n    \n    vec2 id = floor(u);\n    vec2 uv = fract(u);\n    vec3 col = vec3(uv,.5);\n    \n    float t = iTime*3.;\n    vec2 c = point_coords(id,t);\n    col= vec3(1.-CheckCells(uv,id,t).x);\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}