{"ver":"0.1","info":{"id":"ts3BD4","date":"1605106166","viewed":62,"name":"Blobs - Edvid","username":"Edvid","description":"Blobs looking like cells maybe","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fragment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 blobs[30];\nfloat strength = 0.02;\nfloat speed = 0.003;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float val = 0.0;\n  \tfor (int i = 0; i < blobs.length(); i++)\n  \t{\n    \tblobs[i] = vec2(\n            fract(iTime*-11.0*speed + pow(float(i),1.2)*0.323 + sin(iTime*sin(float(i))*2.617924)*0.02),\n            fract(iTime*17.0*speed + pow(float(i),1.3)*0.456 + cos(iTime*sin(float(i))*1.618)*0.02)\n        );\n        val += strength / pow(distance(uv, blobs[i]),2.0);\n        val += strength / pow(distance(uv, blobs[i] + vec2(1.0,0.0)),2.0);\n        val += strength / pow(distance(uv, blobs[i] + vec2(-1.0,0.0)),2.0);\n        \n        val += strength / pow(distance(uv, blobs[i] + vec2(0.0,1.0)),2.0);\n        val += strength / pow(distance(uv, blobs[i] + vec2(1.0,1.0)),2.0);\n        val += strength / pow(distance(uv, blobs[i] + vec2(-1.0,1.0)),2.0);\n        \n        val += strength / pow(distance(uv, blobs[i] + vec2(0.0,-1.0)),2.0);\n        val += strength / pow(distance(uv, blobs[i] + vec2(1.0,-1.0)),2.0);\n        val += strength / pow(distance(uv, blobs[i] + vec2(-1.0,-1.0)),2.0);\n        \n        \n  \t}\n    //val /= float(blobs.length());\n    // Time varying pixel color\n    vec3 col = vec3(val*0.13 - 1.0, pow(val, 2.0)*0.002 - 0.2, 0.0 + val*0.02);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}