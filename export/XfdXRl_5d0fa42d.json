{"ver":"0.1","info":{"id":"XfdXRl","date":"1714320922","viewed":61,"name":"b240bc54fa6f7231f81fabb5d17d5a7c","username":"persian_bird","description":"description","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["plot","implicitfunction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793\n#define SCALE 2.0\n#define DIM 2.0\n#define H 0.0001\n\n// define your functions here\nfloat grid(vec2 uv) {\n    return fract(uv.x) * fract(uv.y);\n}\n\nfloat lemniscate(vec2 uv) {\n    float theta = atan(uv.y / uv.x);\n    float rho = length(uv);\n    return rho * rho - 6.0 * sin(iTime) * cos(2.0 * theta);\n}\n\n// -----------------------\n\nvec2 uv(vec2 frag_coord) {\n    return (frag_coord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n}\n\nfloat norm(float dim, vec2 uv) {\n    return pow(pow(abs(uv.x), dim) + pow(abs(uv.y), dim), 1.0 / dim);\n}\n\n#define PLOT(f, fg, thickness) { \\\n    float z = f(uv); \\\n    vec2 grad = vec2( \\\n        (f(uv + vec2(H, 0.0)) - z) / H, \\\n        (f(uv + vec2(0.0, H)) - z) / H \\\n    ); \\\n    float dist = norm(DIM, grad * vec2(dFdx(uv.x), dFdy(uv.y))); \\\n    z = smoothstep(0.0, thickness * dist, abs(z)); \\\n    color = mix(fg, color, z); \\\n}\n\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    vec2 uv = SCALE * uv(fragCoord);\n    vec3 color = vec3(1.0); \n    \n// draw function plots here\n\n    PLOT(grid, vec3(0.0), 1.0);\n    PLOT(lemniscate, vec3(0.9, 0.6, 0.1), 1.7);\n    \n// --------------------\n\n#undef PLOT\n/// Or you can manually give the gradient formula.\n/// fg: vec3\n/// thickness: float\n/// stmt: (in uv: vec2, out z: float, out grad: vec2)\n#define PLOT(fg, thickness, stmt) { \\\n    float z; \\\n    vec2 grad; \\\n    stmt; \\\n    float dist = norm(DIM, grad); \\\n    z = smoothstep(0.0, thickness * dist * fwidth(uv.x), abs(z)); \\\n    color = mix(fg, color, z); \\\n}\n\n// ------------------------\n    PLOT(vec3(0.9, 0.2, 0.5), 1.0, {\n        const float omega = 19.0;\n        z = uv.y - sin(omega * uv.x);\n        grad = vec2(-omega * cos(omega * uv.x), 1.0);\n    });\n    \n// -------------------------\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}