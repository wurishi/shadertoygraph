{"ver":"0.1","info":{"id":"MtVXRt","date":"1485884273","viewed":88,"name":"Assignment 2 Reveal ","username":"kaylamiskiv","description":"The mouse reveals a non blurry texture ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blur","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//CIRCLE \n//this modifies the radius of the circle\nfloat radius = 0.1; \n \n\n\n//BLUR \n\n//this will blur the image\nmat3 blur = mat3(\n 0.111, 0.111, 0.111, // first column\n 0.111, 0.111, 0.111, // second column\n 0.111, 0.111, 0.111 // third column\n);\n\n//this will hold the blur layer\nvec4 layer1; \n\n\n\n//SHARPEN\n\n//this will sharpen the image\nmat3 sharpen = mat3(\n \t0.0, -1.0, 0.0, // First column\n \t-1.0, 5.0, -1, // Second column\n \t0.0, -1.0, 0.0 // Third column\n);\n\n\n\n\n//this will hold the sharpen layer\nvec4 layer2; \n\n\n\n\n//SAMPLING \n\n\n//this samples the image on layer 0 \nvec3 sample(const int x, const int y, in vec2 fragCoord)\n{\n vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n uv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n return texture(iChannel0, uv).xyz;\n}\n\n\n\n//this puts it through the mat3 filter\nvec3 filter(in vec2 fragCoord, mat3 kernel)\n{\n vec3 sum = sample(-1, -1, fragCoord) * kernel[0][0]\n + sample(-1, 0, fragCoord) * kernel[0][1]\n + sample(-1, 1, fragCoord) * kernel[0][2]\n + sample( 0, -1, fragCoord) * kernel[1][0]\n + sample( 0, 0, fragCoord) * kernel[1][1]\n + sample( 0, 1, fragCoord) * kernel[1][2]\n + sample( 1, -1, fragCoord) * kernel[2][0]\n + sample( 1, 0, fragCoord) * kernel[2][1]\n + sample( 1, 1, fragCoord) * kernel[2][2];\n \n return sum;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    \n    //get the mouse input in terms of the screen resolution \n    vec2 mouseCoord = iMouse.xy / iResolution.xy;  \n    \n    \n    //fix aspect ratio \n     uv.x *= iResolution.x / iResolution.y;\n     mouseCoord.x *= iResolution.x / iResolution.y;\n    \n    \n    //set up background blurring the image\n \tvec3 blurImage = filter(fragCoord.xy, blur); \n    \n    \n    //this sets up sharpening the image\n    vec3 sharpenImage = filter(fragCoord.xy, sharpen); \n    \n    \n     //set up the layer variables created earlier\n    \n    //layer 1 shows the sharpened part of the image, so it needs to be in front of the blurred image \n    layer1 = vec4(sharpenImage, 1.0); \n    \n    //layer 2 shows the blurred image \n    layer2 = vec4(blurImage, 1.0); \n    \n    \n    //draw the circle \n    if (length(uv - mouseCoord) <= radius)\n    {\n        //this sets the alpha of layer2 to 0 within the circle, so that the sharpen area can appear\n        layer2.a = 0.0; \n    }\n    \n    //blend the layers \n    vec4 Composite = mix(layer1, layer2, layer2.a);\n \tfragColor = Composite;\n} \n  ","name":"Image","description":"","type":"image"}]}