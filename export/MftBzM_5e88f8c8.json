{"ver":"0.1","info":{"id":"MftBzM","date":"1732881874","viewed":31,"name":"Hex base","username":"Elsio","description":"dá pra fazer muito mais coisa. mas tem de começar de algum lugar.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["truchet","tiles","v4"],"hasliked":0,"parentid":"lcyyDt","parentname":"Hex Truchet - pareidolia 2"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define H(p)    fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453)  // hash\n#define rot(a) mat2(cos(a + vec4(0, 1, 3, 0) * pi / 2.))\n#define pi acos(-1.)\n#define sq sqrt(3.)\n#define hex vec2(1, sq)\n\nvoid hexgrid(vec2 u, out vec2 p, out vec2 id) {\n    vec2 a = mod(u,            hex) - hex / 2.,\n         b = mod(u - hex / 2., hex) - hex / 2.;\n    \n    p = a;\n    id = floor(u / hex) * 2.;\n    \n    if(dot(a, a) > dot(b, b)) {\n        id = floor(u / hex - .5) * 2. + 1.;\n        p = b;\n    }\n}\n\nfloat hexDist(vec2 u){\n    u = abs(u);\n    return abs(max(dot(hex / 2., u), u.x) - .5);\n}\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy, p, id;\n    u = 2.4 * (u + u - r) / r.y + vec2(iTime) * 1.;\n    o *= .0;\n    \n    hexgrid(u, p, id);\n    \n    int k = int(id.x);\n    int h = 3;\n    \n    if(k % 3 == 0) o.r = .5;\n    if(k % 3 == 1) o.g = .5;\n    if(k % 3 == 2) o.b = .5;\n    \n    //o = vec4(1) * smoothstep(.01, .0, length(p) - .5);\n    o = max(o, smoothstep(.01, .0, hexDist(p) - .02));\n    \n}\n\n\n/*\n    // hex list\n    https://www.shadertoy.com/playlist/cfBSRz\n    \n    \n    \n    \n    \n        provavelmente um dos primeiros a fazer isso\n            Hexagons distance - @iq (2014-03-09)\n            https://www.shadertoy.com/view/Xd2GR3\n            \n            e um traverse em 2020 \n            https://www.shadertoy.com/view/WtSBWK\n\n        \n        @mattz (2014-01-31) dois meses antes, portanto\n        https://www.shadertoy.com/view/4d2GzV#\n        \n        @fabrice (2014-03-06) três dias antes do iq\n        https://www.shadertoy.com/view/4dS3Dc\n        https://www.shadertoy.com/view/Xdt3D8 (2015)\n        https://www.shadertoy.com/view/ldcXW8 (2016)\n        \n        \n        \n        e esse foi o primeiro a fazer do jeito fácil\n        e que teve intenção de ser entendido\n        \n            @Iomateron - simple hexagonal tiles (2017)\n            https://www.shadertoy.com/view/MlXyDl\n            (a tecnica que todo mundo usa)\n            \n\n\n\n        \n        @shane tentou fazer de um jeito simples e lindo\n        e acho que conseguiu fazer de um jeito lindo mesmo.\n        por algum motivo ele deixou 'não listado'\n            Minimal Hexagonal Grid (2017)\n            https://www.shadertoy.com/view/Xljczw\n            \n\n\n\n\n        utilizada pelo @fabrice e uma das primeiras que utilizei\n            @elsio hex pattern explained \n            https://www.shadertoy.com/view/XcBBDh\n            \n            original @104\n            https://www.shadertoy.com/view/ltlSW4 (2015)\n            \n        essa técnica consiste em fazer uma grade de quadrados\n        quebrar um terço deles nas diagonais, deformar para a proporção correta\n        e acertar os ids das diagonais. parece simples mas não é. \n        principalmente essa última parte\n\n\n\n        outra técnica consiste em desenhar tijolos \n        para depois lapidá-los cortando-lhe os cantos \n        como este utilizado por @jy483752\n        https://www.shadertoy.com/view/l32fWR\n\n        e, se bem me lembro, o shane também usa essa técnica (à conferir)\n\n\n\n\n        \n        outras técnicas que ainda não estudei\n\n\n            @Suslik discussion\n            https://www.shadertoy.com/view/csVcRK\n            https://www.shadertoy.com/view/cdKyz3\n\n\n            @shane´s hex tesselation\n            https://www.shadertoy.com/view/Xljczw\n\n\n            @fizzer semi-regular tesselation\n            Wythoff Uniform Tilings +Duals \n            https://www.shadertoy.com/view/3tyXWw\n            \n            \n            @spalmer Hex Lattice 2D  (2023)\n            https://www.shadertoy.com/view/wtBczh\n            \n            \n            @elsio, forked from @deltaT triangular\n            https://www.shadertoy.com/view/msVfzW\n            \n\n*/\n\n\n","name":"Image","description":"","type":"image"}]}