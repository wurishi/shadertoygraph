{"ver":"0.1","info":{"id":"M3sfzB","date":"1729267655","viewed":92,"name":"NotSoGreeeen - Soma Study","username":"NotSoGreeeen","description":"a Post-Processing study of Soma.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["postprocessing","study","overlay","chromaticabberation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define loops 4\n#define step .01\n#define stepAmount .01\n#define timeSpeed 1.\n/*\nA quick study of a frame export sent to me by a friend.\nTwo steps:\n- add multiple renders of the base image scaled out by a centered length function. (added a time function to it, so it was more obvious)\n- add in an aberration pass.\n---------------------------------------------------------------------------\nThis is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to http://unlicense.org/\n*/\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 cenUv = (2. * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n\n    vec4 col;\n    col = texture(iChannel0, uv);\n    for (int i = 0; i < loops; i++) {\n        col += texture(iChannel0, uv + (cenUv * -length(cenUv * (((sin(iTime * timeSpeed) + 1.) * step) + (float(i) * stepAmount)))));\n    }\n    col /= float(loops + 1);\n    \n    col.x += texture(iChannel0, uv + vec2(.005, 0.)).x;\n    col.y += texture(iChannel0, uv + vec2(0., .005)).y;\n    col.z += texture(iChannel0, uv + (cenUv * -length(cenUv * .005))).z;\n    \n    col /= 2.;\n   \n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}