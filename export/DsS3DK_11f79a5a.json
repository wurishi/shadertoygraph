{"ver":"0.1","info":{"id":"DsS3DK","date":"1668137159","viewed":94,"name":"red pulse","username":"yceraf","description":"red pulse with noise each 5 seconds","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise","pulse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(in vec2 uv) {\n    return fract(sin(dot(uv, vec2(231.55, 466.11))) * 3134.041854);\n}\n\nfloat noise(in vec2 uv) {\n\n    float value = 0.0;\n    \n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n\n    float a = rand(i);\n    float b = rand(i + vec2(1.0, 0.0));\n    float c = rand(i + vec2(0.0, 1.0));\n    float d = rand(i + vec2(1.0, 1.0));\n    \n    vec2 u = f * f * (3.0 - 2.0 * f);\n    \n    return mix(a, b, u.x) +\n        (c - a) * u.y * (1.0 - u.x) +\n        (d - b) * u.x * u.y;\n}\n\nfloat fbm(in vec2 uv) {\n\n    float value = 0.0;\n\n    int octaves = 4;\n    float lacunarity = 2.0;\n    float gain = 0.5;\n    \n    float frequency = 2.0;\n    float amplitude = 1.0;\n    \n    for (int i = 0; i < octaves; i++) {\n        value += amplitude * noise(uv * frequency);\n        \n        frequency *= lacunarity;\n        amplitude *= gain;\n    }\n\n    return value;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    vec3 col = vec3(0.0);\n\n    float aspec = iResolution.x / iResolution.y;\n    vec2 center = vec2(0.5 * aspec, 0.5);\n    float dis = distance(center, uv);\n    \n    float time = mod(iTime, 2.0);\n    float acc = 5.0 - time;\n    \n    vec2 fa = vec2(0.0);\n    fa.x = fbm((uv - center) * acc + time * 0.1234);\n    fa.y = fbm((uv - center) * acc + time * 0.2311);\n    \n    float f = fbm((uv - center) + fa * time * acc);\n    \n    col.r = f * (1.0 - dis - 0.75*dis) * (acc - 3.0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}