{"ver":"0.1","info":{"id":"ss2GWc","date":"1618068933","viewed":1444,"name":"celluar_noise_16x","username":"penghuailiang","description":"celluar noise texture generator\n\nBlog： https://huailiang.github.io/blog/2021/noise/","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["noise","celluar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 16.\n\nvec2 random(vec2 st){\n    return  fract(\n        sin(\n            vec2(\n                dot(st, vec2(127.1,311.7)),\n                dot(st, vec2(269.5,183.3))\n            )\n        ) * 43758.5453\n    );\n}\n\nfloat noise(vec2 p) {\n    vec2 i = floor(p); // 获取当前网格索引i\n    vec2 f = fract(p); // 获取当前片元在网格内的相对位置\n    float F1 = 1.;\n    // 遍历当前像素点相邻的9个网格特征点\n    for (int j = -1; j <= 1; j++) {\n        for (int k = -1; k <= 1; k++) {\n            vec2 neighbor = vec2(float(j), float(k));\n            vec2 point = random(i + neighbor);\n            float d = length(point + neighbor - f);\n            F1 = min(F1,d);\n        }\n    }\n    return F1;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float c = noise(vec2(SCALE*uv));\n    //c = pow(c, 2.);\n    c = pow(c, 2. * (0.5+abs(sin(iTime))));\n    vec3 color= vec3(c,c,c);\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}