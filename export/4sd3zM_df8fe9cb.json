{"ver":"0.1","info":{"id":"4sd3zM","date":"1448649370","viewed":231,"name":"FakeSine","username":"jt","description":"Approximation of sine-function avoiding cumbersome pi-constant,\nBasically using taylor-approximation (with fract for repetition) but tweaked exponent from 2 to 1.75\nPossible use: replacing sin in hash-functions to avoid platform-dependent problems.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["approximation","sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define draw(q) O *= vec4(smoothstep(.0,.02,abs(I.y - q)))\n\n#define mirror(v) abs(2. * fract(v / 2.) - 1.)\n\nfloat tri(float v) // triangular-\"wave\"\n{\n    return 2.*abs(2. * fract(v-.25) - 1.)-1.;\n}\n\n// approximation of sine avoiding cumbersome pi-constant\n//#define fakesine(v) sign(.5-fract(v))*(1.-pow(abs(2. * fract(v*2.) - 1.),1.75+v-v))\n// NOTE: there were problems with the define-version in another test, so use with caution.\n// NOTE: the +v-v hack is necessary (at least on my system) to cast 1.75 to the vec-type of v.\n\nfloat fakesine(float v) // approximation of sine avoiding cumbersome pi-constant\n{\n    return sign(.5-fract(v))*(1.-pow(abs(2. * fract(v*2.) - 1.),1.75)); // not optimal constant but easier to remember\n    //return sign(.5-fract(x))*(1.-pow(abs(2. * fract(x*2.) - 1.), 1.745)); // improved constant as suggested by Envy24\n}\n/*\nfloat fakesine(float v) // approximation of sine avoiding cumbersome pi-constant\n{\n    float w = abs(2. * fract(v*2.) - 1.);\n    return sign(.5-fract(v))*(1.-w*w);\n}\n*/\n/*\nfloat fakesine01(float v)\n{\n    float w = abs(2. * fract(v*2.) - 1.);\n    return 0.5 + 0.5 * sign(.5-fract(v))*(1.-w*w);\n}\n*/\nfloat fakecosine(float v) // approximation of cosine avoiding cumbersome pi-constant\n{\n    return fakesine(v+0.25);\n}\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n\tI = 2. * I / iResolution.xy - 1.;\n    O = vec4(1);\n    //O = vec4(smoothstep(.0,.01,length(I - vec2(I.x,v))));\n\tdraw(sin(I.x * 3.1415926 * 2.));\n    draw(fakesine(I.x));\n    //draw(fakesine01(I.x));\n    //draw(tri(I.x));\n    draw(0.);\n}\n","name":"Image","description":"","type":"image"}]}