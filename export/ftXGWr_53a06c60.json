{"ver":"0.1","info":{"id":"ftXGWr","date":"1621853553","viewed":86,"name":"Mandlebrot sequential","username":"harrisonvanderbyl","description":"Mandelbrot sequential","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["fractal","mandlebrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = texture(iChannel0,uv)*0.5+0.5;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 col = uv*2.0-1.0;\n        float xx = col.x;\n        col.x = col.x*col.x-col.y*col.y;\n        col.y = col.y*xx*2.0;\n    if(iTime>1.0){\n        col =  texture(iChannel0,uv).xy;\n        \n        uv = uv + texture(iChannel1,uv).xy;\n        \n        col+=uv*2.0-1.0;\n        vec2 olcol = col;\n        xx = col.x;\n        col.x = col.x*col.x-col.y*col.y;\n        col.y = col.y*xx*2.0;\n    }\n    if(iMouse.z>0.){\n    col = uv*2.0-1.0;\n    }\n    fragColor = vec4(col.x,col.y,0.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.,0.,0.5);\n    if(iTime>1.0){\n        col =  texture(iChannel0,uv).xyz;\n        vec2 mm = (iMouse.zw/iResolution.xy);\n        vec2 nn = (iMouse.xy/iResolution.xy);\n        if(mm.x>0.){\n            col.xy = nn;\n            col.z = col.z*2.0;\n        }\n            \n        \n    }\n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}