{"ver":"0.1","info":{"id":"Dl3SRj","date":"1685551743","viewed":67,"name":"Tropical Flower","username":"Sabitsuki","description":"Made with the help of ChatGPT, cause I don't know shit about coding.\nThank you @timmaffet for the help!\nExtra credit goes to @kishimisu","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient","star","chatgpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdRoundedX(in vec2 p, in float w, in float r)\n{\n    p = abs(p);\n    return length(p - min(p.x + p.y, w) * 0.5) - r;\n}\n\n\nvec3 palette(float t)\n{\n    vec3 a = vec3(0.976,0.675,0.545);\n    vec3 b = vec3(0.118,0.188,0.094);\n    vec3 c = vec3(0.970, 0.109, 1.042);\n    vec3 d = vec3(3.518, 3.092, 2.792);\n    return a + b * cos(9.28318 * (c * t + d));\n}\n\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 pos = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 pos0 = pos;\n\n    vec3 col = vec3(0.0);\n    float scale = 0.5;\n    float offset = 2.;\n    pos = (pos - vec2(0.5)) * scale + vec2(0.5) + vec2(offset);\n    for (float i = 0.2; i < 3.0; i++)\n    {\n        pos = mod(pos + cos(pos * 0.05) / 3.9, 1.0) - 0.5;\n        vec2 origin = vec2(0.0);\n        float p = distance(pos, origin);\n        float theta = atan(pos.y, pos.x);\n        p *= 4.0;\n        p -= 0.5 * sin(5.0 * theta + iTime * 3.0 + (i + 2.0 + 10.33) / 0.3 * 20.0);\n        col[int(i)] = smoothstep(0.1, 1.5, p);\n    }\n\n\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    for (float i = 0.0; i <= 1.0; i++)\n    {   \n        vec3 col2 = palette(length(uv0*0.3) - iTime*0.1);\n        finalColor = col2;\n    }\n    \n    fragColor = vec4(col * finalColor, 0.5);\n}\n","name":"Image","description":"","type":"image"}]}