{"ver":"0.1","info":{"id":"dl2BDD","date":"1694081764","viewed":61,"name":"circle-loop","username":"saiomin","description":"experimenting with for loops","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","geometric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n\nfloat circle(in vec2 uv, in float size)\n{\n    return step(0.0, length(uv)-size);\n}\n\nfloat sinTime(in float freq)\n{\n    return sin(t*6.283*freq)*0.1;\n}\n\n//https://iquilezles.org/articles/palettes/\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 grid = (fragCoord - (iResolution.xy * 0.5))/iResolution.y;\n    \n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5); \n    vec3 c = vec3(1.0,1.0,0.5); \n    vec3 d = vec3(0.8,0.90,0.30);\n    \n    grid.x *= sin(grid.x);\n    \n    vec3 col = palette(sinTime(0.1)+0.7, a, b, c, d);\n    \n    //grid*= 1.1;\n\n    for(float i=1.0; i<40.0; i++)\n    {\n        vec2 gridDistorted = grid - i*0.3*sinTime(0.1);\n        float dis = circle(gridDistorted, i*0.07);\n        //col = mix(vec3(1.0-(1.0/i), 0.9,0.1), col, i*0.1-dis);\n        col = mix(palette(i*0.05/length(grid), a, b, c, d),col, 1.0-dis);\n    }\n    \n    //col = 0.5/col;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}