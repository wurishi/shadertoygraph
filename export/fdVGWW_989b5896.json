{"ver":"0.1","info":{"id":"fdVGWW","date":"1631560661","viewed":181,"name":"Ed Balls","username":"SnoopethDuckDuck","description":"more messing around","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float myLength(vec2 uv, float t) {\n    return abs(uv.x * (1. + 0.5 * cos(t))) + abs(uv.y * (1. + 0.5 * sin(t)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = 0.3 * iTime;\n    float s = 0.5 * (1. + cos(t));\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (12. + 2. * cos(0.45 * t)) *(fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n     float theta = atan(uv.y, uv.x);\n    uv = vec2(cos(uv.x + theta + 0.9 * t), sin(uv.y + theta + 0.9 * t));\n    //float theta =  atan(uv.y, uv.x);\n    // Time varying pixel color\n    float d = smoothstep(myLength(uv + 0.1 * vec2(cos(t),sin(t)), 4. * t),\n                         0.2 * sin(1. * theta + t) * cos(1. * theta +  t), \n                         0.1);\n    float r = step(16. * d * (1.-d) * d * (1.-d), 0.1);\n    r *= 10. * d * (1.-d);\n    \n    d += 0.005 * cos(theta + t);\n    \n    float g = step(16. * d * (1.-d) * d * (1.-d), 0.1);\n    g *= 10. * d * (1.-d);\n    \n    d -= 0.01 * cos(theta + t);\n    \n    float b = step(16. * d * (1.-d) * d * (1.-d), 0.1);\n    b *= 10. * d * (1.-d);\n    \n    \n    // Output to screen\n    fragColor = vec4(g,r,b, 1.);\n}","name":"Image","description":"","type":"image"}]}