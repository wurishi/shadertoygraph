{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"//Using Polar form, so any real number power is possible.\n\nconst float n1 = 2.; //Power 1\nconst float n2 = 4.; //Power 2\nconst float iterations = 50.;\n\nvec2 Scale(vec2 p){\n\treturn (2.*p-iResolution.xy)/iResolution.y*2.;\n}\n\n\nfloat mandelbrot(vec2 c){\n    vec2 z = vec2(0);\n    \n    float t = sin(iTime/2.)*.5+.5;\n    \n\tfor (float i=0.;i<iterations;i++){\n\t\t//to (r,a)\n\t\tfloat rad = length(z);\n\t\tfloat phi = atan(z.y,z.x);\n\t\t\n\t\t//escaped?\n\t\tif (rad>5.) return i;\n\t\t\n\t\t//calculation1\n\t\tfloat rad1 = pow(rad,n1);\n\t\tfloat phi1 = phi*n1;\n        \n        //calculation2\n\t\tfloat rad2 = pow(rad,n2);\n\t\tfloat phi2 = phi*n2;\n\t\t\n\t\t//to (x,y)\n\t\tz = vec2(\n\t\t\tcos(phi1)*rad1,\n\t\t\tsin(phi1)*rad1\n\t\t)*t+\n        vec2(\n\t\t\tcos(phi2)*rad2,\n\t\t\tsin(phi2)*rad2\n\t\t)*(1.-t)\n        +c;\n\t}\t\n\treturn iterations;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 scaledp = Scale(fragCoord.xy);\n\n\tvec3 color = vec3(mandelbrot(scaledp)/iterations);\n    \n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lls3D7","date":"1422708927","viewed":1649,"name":"Mandelbrot : Power Transitioning","username":"Gijs","description":"As per http://nl.reddit.com/r/fractals/comments/2u9uo4/figured_out_how_to_transition_between_powers/","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","powers"],"hasliked":0,"parentid":"","parentname":""}}