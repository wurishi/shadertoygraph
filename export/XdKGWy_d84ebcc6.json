{"ver":"0.1","info":{"id":"XdKGWy","date":"1456202234","viewed":252,"name":"Bitdepth and Static ","username":"Therratos","description":"I just changed the RGB values of the image with both the bit depth and static values to create this effect. Felt like it had a cool result. Test it with other images. :) I also added this swipe code that I saw and though it looked amazing.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["static","bitdepth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat staticEffect(in vec2 co)\n{\n    //The static code was found here - http://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl/28095165#28095165\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    //get all the iChannel images I want\n    float staticChange = staticEffect(vec2(fragCoord.x*cos(iTime),fragCoord.y*sin(iTime))); \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 image = vec4(texture(iChannel0, uv));\n    vec4 image2 = vec4(texture(iChannel1, uv));\n    vec4 image3 = vec4(texture(iChannel2, uv));\n    vec4 image4 = vec4(texture(iChannel3, uv));\n   \n    \n    //setting a bit depth value\n    const float bd = 3.0;\n    \n    //changing the rgb values of each image with the added bit depth and static values\n    vec4 changebd = vec4(floor(image.r * bd * staticChange), floor(image.g * bd * staticChange), floor(image.b * bd * staticChange), 1) / bd;\n    changebd.a = image.a;\n     vec4 changebd2 = vec4(floor(image2.r * bd * staticChange), floor(image2.g * bd * staticChange), floor(image2.b * bd * staticChange), 1) / bd;\n    changebd2.a = image2.a;\n     vec4 changebd3 = vec4(floor(image3.r * bd * staticChange), floor(image3.g * bd * staticChange), floor(image3.b * bd * staticChange), 1) / bd;\n    changebd3.a = image3.a;\n     vec4 changebd4 = vec4(floor(image4.r * bd * staticChange), floor(image4.g * bd * staticChange), floor(image4.b * bd * staticChange), 1) / bd;\n    changebd4.a = image4.a;\n    fragColor = changebd4;\n    \n    \n    //Gets the x and moves its accross based on time\n    float moveSpot = (uv.x - mod(-iTime*0.2,1.0))*5.0;\n    //The texture used on moveSpot\n    float moveImage = texture(iChannel0, uv).r;\n    if(moveSpot-0.3>moveImage)\n    \tfragColor = changebd2;\n    else if(moveSpot+0.3>moveImage)\n        fragColor = changebd3;\n    else        \n        fragColor = changebd4;\n}","name":"Image","description":"","type":"image"}]}