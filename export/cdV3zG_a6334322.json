{"ver":"0.1","info":{"id":"cdV3zG","date":"1678734927","viewed":346,"name":"Chandrasekar Helium Wavefunction","username":"michael0884","description":"a wave function optimized using the VMC method for helium. Gives 0.1% error compared to the true helium energy.","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["quantummechanics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Wave function ansatz by Chandrasekar.\n//2 electron coordiantes in, unnormalized wave function out\n//Hartree units\nfloat wave_function(vec3 x, vec3 y)\n{\n    float alpha = 1.5185;\n    float beta = 2.2154;\n    float gamma = 0.3604;\n    float r1 = length(x);\n    float r2 = length(y);\n    float r12 = distance(x,y);\n    return (exp(-alpha*r1-beta*r2)+exp(-alpha*r2-beta*r1))*(1.0 + gamma*r12);\n}\n\n//we visualize the probability density of helium electrons\n//where electron 1 coordinate is on the screen plane \n//and 2 electron coord is controlled by the mouse\n//we show only the z = 0 plane, since its spherically symmetric\n//surprisingly enough the electron repulsion has a relatively small effect here, and is hard to notice\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0*(fragCoord - iResolution.xy*0.5)/iResolution.y;\n    vec2 uvM = 2.0*(iMouse.xy- iResolution.xy*0.5)/iResolution.y;\n    \n    vec3 x = vec3(uv, 0.0);\n    vec3 y = vec3(uvM, 0.0);\n    float wf = wave_function(x,y);\n    \n    fragColor = abs(sin(4.0*vec4(1,1.2,1.3,1.4)*wf*wf));\n}","name":"Image","description":"","type":"image"}]}