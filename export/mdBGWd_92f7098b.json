{"ver":"0.1","info":{"id":"mdBGWd","date":"1668363849","viewed":121,"name":"Highway queues","username":"kastorp","description":"why queues move in the opposite direction\n\nmouse up/down: traffic level","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["queue"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Highway queues by Kastorp\n#define R iResolution.xy\nvoid mainImage( out vec4 O, in vec2 I )\n{\n   \n    vec2 u = I/R*2.4- vec2(-.08,.08); //this happens when you adjust the scale at the end\n    ivec2 c=ivec2(u.x/.08+.5,u.y/.16+.5);   \n    vec3 col=vec3(0); \n    if((c.y&1)>0) {u.x=2.56-u.x;c.x=int(u.x/.08+.5);}\n    if(c.y>=0 && c.y<15)\n    {\n        int j=c.y;\n        uvec4 data = floatBitsToUint(texelFetch(iChannel0,ivec2(0,j),0));\n        for(int i=c.x-2;i<c.x+2;i++){\n            if(i<0|| i>31)continue;\n            bool a=  ((data.x &(1u<<i))>0u);  //car in current slot?\n            bool b=  ((data.y &(1u<<i))>0u);  //car is moving\n            float sh=  !b? -float(iFrame%FR)/float(FR)*.08:-.08; //horizontal shift if moving\n            vec2 bc=vec2(.08*float(i)+sh,float(j)*.16); //car center\n            float car=max(abs(u.x-bc.x),abs(u.y-bc.y))-.03; //car sdf\n            if(a &&car<0.) col=b &&car>-.01?vec3(1,0,0):vec3(0,0,1);\n        }\n    }\n    col=mix(col,vec3(1),smoothstep(.05,0.,abs(fract(u.y/.16)-.5))); \n    O = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Iq https://www.shadertoy.com/view/XlXcW4\nvec3 hash( uvec3 x )\n{\n    const uint k = 1103515245U;  // GLIB C\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n}\n#define L(i) floatBitsToUint(texelFetch(iChannel0,ivec2(0,i),0)).x\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    if(I.x>1. && I.y>15.) discard;\n   if(iFrame<5) O =uintBitsToFloat ( uvec4(I.y>14.?0xFFFF000u:0u));\n   else{\n       //each pixel is a lane with 32 slots\n       uvec4 d=floatBitsToUint(texelFetch(iChannel0,ivec2(0,I.y),0));\n       //update every FR frames\n       if(iFrame%FR==0) {\n       \n           bool tra=hash(uvec3(iFrame,I.xy)).x< (iMouse.x>.0?iMouse.y/iResolution.y: TRAFFIC); //probability of traffic\n           \n           bool last=  I.y>1.? (L(I.y-1.) & 0x80000000u)>0u:tra,\n                first= (I.y<14.?( L(I.y+1.) & 0x1u)>0u :tra); \n                \n           uint next= ((d.x& 0x7FFFFFFFu)<<1u) + (last?1u:0u), \n                prev= ((d.x& 0xFFFFFFFEu)>>1u) + (first?0x80000000u:0u),\n                \n                free=(0xFFFFFFFFu-d.x), \n                move=free & prev, //move the care in current pos if previous has car and current is free\n                stay=d.x & next; //don't move if there is car in the current and next pos\n                   \n           d.x=move+stay; //x=update car  in the position\n           d.y=stay;      //y=car is stopped     \n       }\n       O=uintBitsToFloat (d);\n   }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define FR 4  //number of frames between updates\n#define TRAFFIC .7 //probability of traffic 0..1","name":"Common","description":"","type":"common"}]}