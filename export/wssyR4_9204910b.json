{"ver":"0.1","info":{"id":"wssyR4","date":"1584297621","viewed":389,"name":"Neon dance","username":"jetp250","description":"Some fun with lines :D","likes":11,"published":1,"flags":32,"usePreview":0,"tags":["colors","lines","animation","rainbow","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 samples[] = vec2[](\n\t\tvec2(0.058824, 0.419608) * 2.4 - 1.2,\n        vec2(0.298039, 0.180392) * 2.4 - 1.2,\n        vec2(0.180392, 0.819608) * 2.4 - 1.2,\n        vec2(0.419608, 0.698039) * 2.4 - 1.2,\n        vec2(0.580392, 0.298039) * 2.4 - 1.2,\n        vec2(0.941176, 0.058824) * 2.4 - 1.2,\n        vec2(0.698039, 0.941176) * 2.4 - 1.2,\n        vec2(0.819608, 0.580392) * 2.4 - 1.2\n        /*vec2(7.0 / 11.0, 1.0 / 8.0),\n\t\tvec2(7.0 / 8.0, 7.0 / 11.0),\n\t\tvec2(4.0 / 11.0, 7.0 / 8.0),\n\t\tvec2(1.0 / 8.0, 4.0 / 11.0)*/\n    );\n    \n    fragColor = vec4(0.0);\n    for (int i = 0; i < samples.length(); ++i) {\n    \tvec2 uv = (fragCoord + samples[i]) / iResolution.xy;\n        fragColor += texture(iChannel0, uv);\n    }\n    fragColor /= float(samples.length());\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n#define PI 3.1415926535\n#define TAU 6.2831853071\n\nfloat line(vec2 A, vec2 B, vec2 C, float thickness) {\n\tvec2 AB = B-A;\n    vec2 AC = C-A;\n\n    float t = clamp(dot(AC, AB) / dot(AB, AB), 0., sin(iTime));\n    //t = min(1.0, max(0.0, t));\n    \n    vec2 Q = A + t * AB;\n    \n    float dist = length(Q-C);\n    return smoothstep(-0.01 * (sin(iTime + PI*2.0/2.0)*.5+.6), -dist, -thickness) + smoothstep(-0.02*(sin(iTime + PI*2.0/2.0)*.25+.6), dist, thickness);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 color = vec3(0.0);\n    \n    for (int i = 0; i < 20; ++i) {\n        float r = 0.5 - sin(iTime + float(i) * 0.8 * PI) * 0.1;\n        float angle = iTime * 0.2 + float(i+1) * 0.1 * PI;\n\n        vec2 dir = vec2(cos(angle), sin(angle)) * r;\n\n        vec2 A = -dir * 0.5;\n        vec2 B = -dir * 0.3;\n\n        float t = iTime * 0.5 + float(i) * 0.1 * TAU;\n        vec3 rgb = vec3(\n        \tsin(t\t\t  ) * 0.5 + 0.5,\n            sin(t + PI/2.0) * 0.5 + 0.5,\n            sin(t + PI\t  ) * 0.5 + 0.5\n        );\n\n        color += line(A, B, uv, 0.0) * rgb;        \n    }\n\n    fragColor = vec4(vec3(color), 1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}