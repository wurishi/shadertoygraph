{"ver":"0.1","info":{"id":"4tXfWS","date":"1513047881","viewed":97,"name":"toon  practice","username":"Torumu106","description":"toon practice","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["toon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsvtorgb(float h, float s, float v){\n\tfloat r = v;\n\tfloat g = v;\n\tfloat b = v;\n\tif (s > 0.0f) {\n\t    h *= 6.0f;\n\t    int i = int(h);\n\t    float f = h - float(i);\n\t    switch (i) {\n\t        default:\n\t        case 0:\n\t            g *= 1.0 - s * (1.0 - f);\n\t            b *= 1.0 - s;\n\t            break;\n\t        case 1:\n\t            r *= 1.0 - s * f;\n\t            b *= 1.0 - s;\n\t            break;\n\t        case 2:\n\t            r *= 1.0 - s;\n\t            b *= 1.0 - s * (1.0 - f);\n\t            break;\n\t        case 3:\n\t            r *= 1.0 - s;\n    \t        g *= 1.0 - s * f;\n\t            break;\n\t        case 4:\n\t            r *= 1.0 - s * (1.0 - f);\n\t            g *= 1.0 - s;\n\t            break;\n\t        case 5:\n\t            g *= 1.0 - s;\n\t            b *= 1.0 - s * f;\n\t            break;\n\t    }\n\t}\n    return vec3(r, g, b);\n}\nvec3 toon(vec3 col){\n    float r = col.x;\n    float g = col.y;\n    float b = col.z;\n    float max = r > g ? r : g;\n\tmax = max > b ? max : b;\n\tfloat min = r < g ? r : g;\n\tmin = min < b ? min : b;\n\tfloat h = max - min;\n\tif (h > 0.0f) {\n\t    if (max == r) {\n\t        h = (g - b) / h;\n\t        if (h < 0.0f) {\n\t            h += 6.0f;\n\t        }\n\t    } else if (max == g) {\n\t        h = 2.0f + (b - r) / h;\n\t    } else {\n\t        h = 4.0f + (r - g) / h;\n\t    }\n\t}\n\th /= 6.0f;\n\tfloat s = (max - min);\n\tif (max != 0.0f)\n\t    s /= max;\n\tfloat v = max;\n    \n    v = floor(v * 4.0) / 4.0;\n    \n    return hsvtorgb(h, s, v);\n}\nfloat smin( float a, float b, float k )\n{\n    float res = exp( -k*a ) + exp( -k*b );\n    return -log( res )/k;\n}\nfloat PI = 3.1415926535;\nvec3 col = vec3(1.0, 1.0, 1.0);\nint stop = 0;\nvec3 stoppos = vec3(0.0);\nfloat map(vec3 p){\n    float d = length(max(abs(p) - vec3(1.0),0.0));\n    vec3 p1 = p;\n    float the = iTime / 2.1;\n    p1.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    d = smin(d, length(p1 - vec3(1.2,1.2,1.2)) - 0.7, 3.0);\n    d = smin(d, length(p1 - vec3(-1.2,1.2,1.2)) - 0.7, 3.0);\n    d = smin(d, length(p1 - vec3(1.2,1.2,-1.2)) - 0.7, 3.0);\n    d = smin(d, length(p1 - vec3(-1.2,1.2,-1.2)) - 0.7, 3.0);\n    if(d < 0.001) col= vec3(0.0, 1.0, 1.0);\n    d = min(d, dot(p,vec3(0.0, 1.0, 0.0)) + 1.0);\n    return d;\n}\nvec3 grad(vec3 p) {\n    vec2 d = vec2(0.0, 0.001);\n\tfloat dFx = map(p + d.yxx) - map(p - d.yxx);\n\tfloat dFy = map(p + d.xyx) - map(p - d.xyx);\n\tfloat dFz = map(p + d.xxy) - map(p - d.xxy);\n\treturn normalize(vec3(dFx, dFy, dFz));\n}\nfloat trace(vec3 o, vec3 r){\n\tfloat t = 0.0;\n    vec3 p;\n    for(int i = 0; i < 256; ++i){\n    \tp = o + r * t;\n        float d = map(p);\n        if(d < 0.001){\n            stop = 1;\n        \tbreak;\n        }\n        t += d * 0.9;\n    }\n    stoppos = p;\n    return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv - vec2(0.0, PI / 3.0), 1.0));\n    \n    float the = iTime;\n    vec3 o = vec3(0.0,10.0, -10.0);\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    o.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    float t = trace(o, r);\n    float light = 0.0;\n    if(stop == 1){\n    \tvec3 nor = grad(stoppos);\n        light = 0.6 * max(dot(nor, vec3(1.0,0.8,0.4)), 0.0) + 0.3;\n        stop = 0;\n        trace(stoppos + nor * 0.002, normalize(vec3(1.0,0.7,0.4)));\n        if(stop == 1) light = 0.1;\n    }\n    \n    vec3 fc = vec3(light) * col;\n    fc = toon(fc);\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}