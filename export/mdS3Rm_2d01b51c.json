{"ver":"0.1","info":{"id":"mdS3Rm","date":"1667415798","viewed":44,"name":"Trace example / backdraw / buffe","username":"jonasfrey","description":"Trace\nin the function `Buffer A` the function `mainImage` will calculate the pixel value for each pixel and this will be stored in a image/buffer, which then gets draw in the `Image` tab. \nWe can access that buffer as if it was an image, since it is...","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["trace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Normalized pixel coordinates (from 0 to 1)\n   float n_amp = (iResolution.x);\n   float n_time = float(iTime);\n   float n_x = (sin(n_time)*((n_amp)/2.0))+((n_amp)/2.0);\n   float n = 0.0;\n   if(int(fragCoord.x) == int(n_x)){\n     n = 1.0;\n    }\n    vec2 a_n_pixel_coord_normalized = fragCoord.xy / iResolution.xy; \n\n    vec4 a_n_color_old = texture(iChannel0, a_n_pixel_coord_normalized);\n    n = n+(a_n_color_old.r-0.005);\n    n = clamp(n, 0.0, 1.0);\n    fragColor = vec4(\n        n,\n        n,\n        n,\n        n\n    );\n   \n}","name":"Buffer A","description":"","type":"buffer"}]}