{"ver":"0.1","info":{"id":"WtffWX","date":"1597836776","viewed":282,"name":"Caleb's Chaos","username":"MysteryPancake","description":"Shader port of code made by https://github.com/cxleb","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractal","chaos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 size = vec2(16.0, 9.0);\nconst float firstp = 0.0001;\nconst int iterations = 100;\nconst float tend = 20.0;\nconst float tstep = 0.5;\n\nfloat f(float x, float y, float t, float p) {\n\treturn (sin(x * (x + t) / (y + p) + t) + 1.0) * 0.5;\n}\n\nfloat iterate(float x, float y, float t) {\n\tfloat p = firstp;\n\tfor (int i = 0; i < iterations; i++) {\n\t\tp = f(x, -y, t, p);\n\t}\n\treturn p;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = (fragCoord / iResolution.xy - 0.5) * size;\n\tfloat t = mod(iTime * tstep, tend);\n\tfloat p = iterate(uv.x, uv.y, t);\n\tfragColor = vec4(p, p, p, 1.0);\n}","name":"Image","description":"","type":"image"}]}