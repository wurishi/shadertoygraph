{"ver":"0.1","info":{"id":"ss3cWH","date":"1653378187","viewed":122,"name":"Hot Particles","username":"flyingstupid","description":"The particles are hot and so they glow","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["particles","hot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 firstData = texture(iChannel0, uv);\n\n    // Output to screen\n    //fragColor = vec4(firstData.xyz,1.0);\n    fragColor = vec4(texture(iChannel2, firstData.xx/1.0));\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int xmax = 64;\nint ymax = 64;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,0.0,1.0);\n    float e = 10.0;\n    for(int x = 0; x < xmax; x++) {\n        for(int y = 0; y < ymax; y++) {\n            vec2 uv = vec2(x,y)/iChannelResolution[1].xy;\n            vec2 pos = texture(iChannel1, uv).xy;\n            vec2 v2 = fragCoord - pos;\n            float d = dot(v2,v2);\n            if (d < e) {\n                fragColor = vec4(1.0);\n                return;\n           }\n        }\n    }\n\n    \n    for(int x = -1; x <= 1; x++) {\n        for(int y = -1; y <= 1; y++) {\n            vec2 offset = vec2(x,y);\n            vec2 uv = (fragCoord+offset)/iResolution.xy;\n            vec4 firstData = texture(iChannel0, uv);\n            fragColor += firstData;\n        }\n    }\n    \n    fragColor /= 9.0;\n    fragColor -= 0.001 + mix(0.001, 0.1, iMouse.x / iResolution.x);\n    fragColor = clamp(fragColor, 0.0, 1.0);    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":2,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec2 unpack(vec2 v)\n{\n    return v * 2.0 - 1.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame == 0)\n    {\n        vec2 channeluv = fragCoord/iChannelResolution[1].xy;\n        vec2 vel = unpack(texture(iChannel2, channeluv).xy);\n        channeluv += vec2(0.7,0.1458);\n        \n        fragColor = vec4(texture(iChannel1, channeluv).xy*iResolution.xy, vel );\n        return;\n    }\n    \n\n    vec2 uv = (fragCoord)/iResolution.xy;\n    texture(iChannel0, uv);\n    vec4 firstData = texture(iChannel0, uv);\n    vec2 pos = firstData.xy + firstData.zw * mix(0.5, 3.0, iMouse.y / iResolution.y);\n    pos += unpack(texture(iChannel3, pos/iResolution.xy).xy) * 2.0;\n    \n    // Gravity toward the mouse\n    //firstData.zw += normalize(iMouse.xy-pos) * iTimeDelta;\n\n    //Edge warp\n    pos.x = mod(pos.x, iResolution.x);\n    pos.y = mod(pos.y, iResolution.y);\n\n    \n    fragColor = vec4(pos, firstData.zw);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"4sXGR8","channel":0}],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n   \n    float level = uv.x*3.14159265/2.;\n    // Time varying pixel color\n   \n    vec3 col;\n    col.r = sin(level);\n    col.g = sin(level*2.);\n    col.b = cos(level);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n    if (uv.x < 0.03) {\n        //fragColor = mix(vec4(0.0), fragColor, uv.x);\n        fragColor *= uv.x;\n    }\n    else if (uv.x > 0.97) {\n        fragColor = mix(fragColor, vec4(1.0), uv.x);\n    }\n    \n}","name":"Buffer C","description":"","type":"buffer"}]}