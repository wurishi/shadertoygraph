{"ver":"0.1","info":{"id":"XXt3D8","date":"1716417650","viewed":58,"name":"Polar blending","username":"synthc","description":"blending different offsets in polar coordinates","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["polarcoordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 C, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord/iResolution.xy);\n    \n    \n    vec4 bc = texture(iChannel0, p);\n    vec4 BB = texture(iChannel1, p);    \n\n    vec4 mask = texture(iChannel2, p);\n  \n    C = BB;\n    C = BB + vec4(bc.a, bc.a,bc.a,1)*.1;\n\n//    C = bc;\n//    C = texture(iChannela2,p);\n//C=bc;\n//C = mask;\n\n}\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nfloat f(float x) {\nreturn x*x*x*x;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 xy = fragCoord / iResolution.xy ;\n    float cx = f(cos(xy.x*PI*5.)*2.-1.); \n    float cy = f(cos(xy.y*PI*5. + PI)*2.-1.); \n    float c = (cx/cy);   \n    fragColor = vec4( c,c,c,c);    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    vec2 p = (fragCoord/iResolution.xy)*2.-1.;\n    p*=.3;\n\n\n    \n    float d = sqrt( dot( p,p));\n\n    float fi,mm;\n    vec2 s;\n    int n = 13;\n    for(int i = 0; i < n ; i++) {\n        fi=float(i);\n        mm = fi / float(n);\n        vec2 offset = vec2(\n                 sin(-t*(1.+mm*2.)*sin(fi*13.)*0.2+fi*23.),\n                 cos(-t*(1.+mm*2.)*sin(fi*13.)*0.2+fi*23.));\n        s+= c2r(p+0.1*offset*(1.+fi*0.1));\n    }\n \n    vec2 xy =r2c(s)/float(n);\n    vec3 col = vec3(xy , 1);\n\n//    vec3 hsvc = vec3(\n  //    (sin(col.x*4.+t)*.03)+cos(col.y*4.)*0.02,\n    //  abs(col.y)*.3+cos(t*10.+col.x*4.)*0.3 ,\n      //col.z = 1.-col.x);\n    vec4 mask = texture( iChannel1 ,xy);\n\n    float str = 0.;\n  \n    float pulse = (sqr(sqr(sin(s.y*10.+t*1.)))*2.-1.)*0.01;\n    float rings = sqr(sin(s.x+t))*0.1 ;\n\n    vec3 hsvc = vec3(\n      xy.x *0.5 + sin(s.x*3.)*0.01 ,\n      1.-  (sin(xy.y*3.+t)*2.-1.)*.01+ pulse,\n      ( (1.-d) + (sin(s.y*2.+t)*2.-1.)*.15)\n      );\n      //abs(col.x)*d+.2+pulse );\n\n    vec2 pp = r2c(vec2(t,0.2));\n    vec4 chessS = texture( iChannel0 , xy+pp);\n  \n\n    // Output to screen\n    fragColor = vec4(hsv(hsvc),chessS.x);\n}\n\n\n","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    vec2 p = (fragCoord/iResolution.xy);\n    vec4 C = texture(iChannel0, p);\n    vec2 pr = c2r( p - vec2(0.5,0.5) );\n    pr.x+=sin(t*0.1) *0.002;\n    pr.y*=1.003;\n    p = r2c( pr)+vec2(0.5,0.5);\n    vec4 PREV = texture(iChannel1, (((p*2.-1.))+1.)/2.);\n    fragColor = C.a > .6 ? C : PREV;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"// Smooth HSV to RGB conversion \nvec3 hsv( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec2 c2r(in vec2 xy) { return vec2(atan(xy.x,xy.y),length(xy)); }\n\nvec2 r2c(in vec2 rd) { return vec2(sin(rd.x)*rd.y,cos(rd.x)*rd.y); }\n\n\nfloat sqr(float x) { \nreturn x;\n} \n\n\n#define PI acos(-1.)","name":"Common","description":"","type":"common"}]}