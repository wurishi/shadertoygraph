{"ver":"0.1","info":{"id":"4ttXWl","date":"1482177927","viewed":94,"name":"mandelbrot root","username":"liy","description":"mandelbrot ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_ITERATION = 1000;\n// allow the gradient bands show up to give a depth feel\nconst float bound = 10.0;\n\nfloat a = 0.0;\nfloat b = 0.0;\n\n/**\nf(z) = z^2 + c, c = uv.x + uv.y*i\nf(z) = z^2 + uv.x + uv.y*i\n\nf(0) = uv.x+uv.y*i\nf(f(0)) = (a+bi)^2 + c = a*a-b*b + 2abi + c \n\t\t= a*a-b*b+uv.x + 2ab+uv.y*i\n**/\nvec3 mandelbrot(vec2 uv) {\n    for(int n=0; n<MAX_ITERATION; ++n) {\n        float na = a*a-b*b + uv.x;\n        b = 2.0*a*b + uv.y;\n        a = na;\n        \n        float dis = a*a+b*b;\n        if(dis >= bound) {\n            float d = (float(n) - (log(log(sqrt(dis))) / log(2.0))) / 50.0;\n            \n    \t\t// Higher contrast\n            d = pow(d, 3.0);\n            \n            return vec3(d/1.6, d, d/2.3);\n        }\n    }\n    \n    return vec3(1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv*2.0 - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // Zoom\n\tuv *= 1.0/(iTime);\n    \n    // Mouse control\n    vec2 offset = iMouse.xy/iResolution.xy;\n    offset.y = offset.y*2.0 - 1.0;\n    offset.x = mix(-2.0, 1.0, offset.x);\n    uv += offset;\n    \n    \n\tfragColor = vec4(vec3(mandelbrot(uv)),1.0);\n}","name":"Image","description":"","type":"image"}]}