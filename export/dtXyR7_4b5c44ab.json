{"ver":"0.1","info":{"id":"dtXyR7","date":"1690516508","viewed":96,"name":"crop contorno img","username":"nictemeral","description":"crop img","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["crop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uniform sampler2D iChannel;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st =  fragCoord/iResolution.xy;\n    vec2 uv=st;\n    vec4 color = vec4(0.0);\n\n    // Fix the proportions by finding the aspect ratio\n    float aspect = iChannelResolution[0].x/iChannelResolution[0].y;\n    st.y *= aspect;  // and then applying to it\nst*=1.248;\nst+=vec2(-0.100,-0.20);//+sin(uv.y*250.+iTime)*0.025;\n    float crop=step(st.y,1.)*step(0.,st.y)*step(st.x,1.)*step(0.,st.x);\n   // crop*=sin(uv.y*250.+iTime)+cos(uv.x*50.+iTime);\n    color = texture(iChannel,st)*crop;\n\t//color=vec4(crop);\n    // Output to screen\n    fragColor = color;\n} ","name":"Image","description":"","type":"image"}]}