{"ver":"0.1","info":{"id":"mslcW7","date":"1686892718","viewed":150,"name":"2D glow","username":"MonterMan","description":"2D coloring practice","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float theta)\n{\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat2(\n        c, -s,\n        s, c);\n}\n\nvec3 palette(float t, vec3 a, vec3 b, vec3 c, vec3 d)\n{\n    return a + b*cos(2.*3.1415926*(c*t+d));\n}\n\nvec2 opRepeat(vec2 p, vec2 size)\n{\n    return mod(p+0.5*size, size)-0.5*size;\n}\n\nfloat get_glow(vec2 uv, vec2 domain_size, float scale)\n{\n    uv = opRepeat(uv, domain_size);     \n    float d = abs(sin(length(uv)*10.+scale*iTime) - 0.4);\n    // \"glow\" falloff\n    return (0.1 / d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.0 * uv - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 pal = palette(length(uv)-iTime, vec3(0.5, 0.5, 0.5), vec3(0.5, 0.5, 0.5), vec3(1.0, 1.0, 0.5), vec3(0.80, 0.90, 0.30));\n    \n    float glow = 0.0;\n    float theta = 0.0;\n    float scale = 1.0;\n    for (int i = 0; i < 3; ++i)\n    {\n        glow += get_glow(rotate2d(theta) * uv, vec2(0.5)*float(1+i), scale);\n        scale *= -1.3;\n        theta += 0.2 + scale*0.2*iTime;\n    }\n\n    \n    vec3 col = glow*pal;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}