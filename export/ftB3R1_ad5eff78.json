{"ver":"0.1","info":{"id":"ftB3R1","date":"1623403436","viewed":94,"name":"Drag Shader","username":"dmzmd","description":"Ray Marcher ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple","mouse","raymarch"],"hasliked":0,"parentid":"flS3zh","parentname":"Fork Fork Raise dmzmd 444"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    vec3 cam=vec3(0.,1.6,0.);\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\nuv.x=mod(abs(uv.x),2.)-2.;\n    vec2 mic=(iMouse.xy-.5*iResolution.xy)/iResolution.y*2.;\n    vec3 cam=vec3(-mic.x,-mic.y,-4.1);\n    vec3 ball=vec3(0,0,0);\n    float rad=.5;\n    float travel=0.;    \n    int steps=100;//higest number of iterations\n    float world=100.;//furthest distance to march\n    vec3 p=cam;\n    vec3 dir=normalize(vec3(uv.x,uv.y,1.));\n    \nvec3 col =vec3(0.);\n    for (int i=0;i< steps;i++){\n        float idist=distance(p,ball)-rad;\n        travel+=idist; //update distace traveled. \n        if (abs(p.x)<0.01 ){col.r=.8;break;}\n        if (abs(p.y)<0.01 ){col.g=.8;break;}\n        if (abs(p.z)<0.01 ){col.b=.8;break;}\n        \n        if (travel>world){\n        col=vec3(.75-float(i)/100.);break; //near paths use smaller steps and will appear lighter.\n        }\n        if (idist<.005){\n        col=normalize(abs(p-ball))*.6;//vec3(0.);break;\n        \n        //try rotating color \n        float s = sin(iTime);\n        float c = cos(iTime);\n        mat2 m = mat2(c, -s, s, c);\n        col.gr*= m;\n        break;\n            }\n        p=p+dir*idist;       \n}\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}