{"ver":"0.1","info":{"id":"3t3yDf","date":"1609983286","viewed":50,"name":"Subdivide-genuary2021","username":"DWishR","description":"Dividing triangles. Hit restart if it's all black!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["genuary2021","genuary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 res = iResolution.xy;\n    \n    float often = 2.;\n    \n    \n    \n    res.x = min(res.x,res.y);\n    res.y = res.x;\n    \n    for ( float i = 0. ; i < iTime; i += 4. * often)\n    {\n\t    while (fragCoord.x > res.y)\n\t    {\n\t        fragCoord.x -= res.y;\n\t    }\n\t    \n\t    while (fragCoord.y > res.x)\n\t    {\n\t        fragCoord.y -= res.x;\n\t    }\n\n\t    if ( abs(fragCoord.x - res.y) < 1. ||\n\t         abs(fragCoord.y - res.x) < 1.)\n\t    {\n\t        fragColor = vec4(0., 0., 0., 1.0);\n\t        return;\n\t    }\n\t    \n\t    if ( abs(fragCoord.x - fragCoord.y) < 1.5)\n\t    {\n\t        fragColor = vec4(0., 0., 0., 1.0);\n\t        return;\n\t    }\n\n\t    if (iTime < i + often)\n\t    \tbreak;\n\t    \n\t    fragCoord.x = res.y - fragCoord.x;\n\t    \n\t    if ( abs(fragCoord.x - fragCoord.y) < 1.5)\n\t    {\n\t        fragColor = vec4(0., 0., 0., 1.0);\n\t        return;\n\t    }\n\n\t    if (iTime < i + often + often)\n\t    \tbreak;\n\t    \n\t    fragCoord.x = res.y - fragCoord.x;\n\t    \n\t    res.x = res.x * 0.5;\n\t    \n\t    if ( abs(fragCoord.x - res.y) < 1. ||\n\t         abs(fragCoord.y - res.x) < 1.)\n\t    {\n\t        fragColor = vec4(0., 0., 0., 1.0);\n\t        return;\n\t    }\n\t    \n\t    if (iTime < i + often + often + often)\n\t    \tbreak;\n\n\t    res.y = res.y * 0.5;\n\t    \n\t    if ( abs(fragCoord.x - res.y) < 1. ||\n\t         abs(fragCoord.y - res.x) < 1.)\n\t    {\n\t        fragColor = vec4(0., 0., 0., 1.0);\n\t        return;\n\t    }\n\t}\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}