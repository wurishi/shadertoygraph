{"ver":"0.1","info":{"id":"DlSXWc","date":"1677766357","viewed":80,"name":"moebius stars","username":"sleeping","description":"This is a demo of Moebius transformations of a complex plane.\n\nThe code is not optimized for the formula f(z) = (az + b)/(cz + d) to be clearly visible","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["moebius"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2( cos(a), -sin(a), sin(a), cos(a) )\n\nvec4 star(vec2 uv) {\n    // rotate stars\n    uv *= rot(-iTime);\n    \n    // cut out singularity\n    if (abs(uv.x)>14. || abs(uv.y)>14.) return vec4(0.);\n    \n    // shape repetition\n    uv = mod(uv + .4, 1.6) - .8;\n\n   \n    float col = smoothstep(.09, .07, dot(uv,uv)*(.6+.4*sin(11.*atan(uv.x, uv.y))));\n    return vec4(col);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec2 R = iResolution.xy, uv = 2.*u/R.y - vec2(R.x/R.y, .7);\n    \n    // the coordinate as complex number in matrix form\n    mat2 z = mat2(uv, -uv.y, uv.x);\n    \n    // transformation coefficients are also complex numbers changing with time\n    mat2 a = rot(.2*iTime)*3.,\n         d = rot(.3*iTime);\n    \n    // f(z) = (az + b)/(cz + d) -- Moebius transformations, b = 0, c = 1\n    z = a * z * inverse(z + d);\n    \n    fragColor = star(z[0]);\n}","name":"Image","description":"","type":"image"}]}