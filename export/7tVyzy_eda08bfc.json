{"ver":"0.1","info":{"id":"7tVyzy","date":"1661785352","viewed":106,"name":"Rainbow slick","username":"dtsmio","description":"buffer test","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["buffer"],"hasliked":0,"parentid":"7tGcRy","parentname":"Fork Buffer tes dtsmio 522"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 3\n#define PI 3.1415\n\nvec3 GetTexture(vec2 uv)\n{\n    return texture(iChannel0, uv).rgb;\n}\n\nvec3 Gamma(vec3 x)\n{\n    return sqrt(x);\n}\n\nvec3 DeGamma(vec3 x)\n{\n    return x * x;\n}\n\nvec3 LUT(float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(2.0, 1.0, 0.0);\n    vec3 d = vec3(0.5, 0.2, 0.25);\n    \n    vec3 col = a + b * cos(2. * PI * (c * t + d));\n    \n    return col;\n}\n\n\nvec3 SS(vec2 uv)\n{\n    int w = 2;\n    vec3 col = vec3(0.0);\n    for( int j=-w; j<=w; j++ )\n    for( int i=-w; i<=w; i++ )\n    {\n        col += DeGamma( GetTexture(uv + 1. * vec2(i, j) / iResolution.xy));\n    }\n    \n    col = Gamma(col / 4.);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    vec2 uv = fragCoord.xy / iResolution.y;\n    vec2 uvr = fragCoord.xy / iResolution.xy;\n\n    \n    vec3 col = SS(uvr);\n    vec3 draw = vec3(col);\n    draw = LUT(col.b * 0.5) * (col.g * 0.1 + col.r * 0.5);\n    \n    fragColor = vec4(draw, 1.);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.1415926535\n\n\nvec2 RndPos(float time)\n{\n\n    vec2 c = vec2(0.85, 0.5);\n    return c + \n        vec2(sin(time) * 1.5, cos(time)) * 0.4 - \n        vec2(sin(time * 1.8), cos(time * 1.4)) * 0.25;\n}\n\n\nvec3 Generator(vec2 uv)\n{\n    float time = iTime * 4.;\n    float rtime = round(time * 4.);\n    float ftime = fract(time + 1.);\n    float id = sin(time * 120.) * 0.5 + 0.5;\n\n    vec2 pointPos = RndPos(rtime);\n    \n    float r = 1. - step(0.005, length(uv - pointPos));\n    float g = smoothstep(0.1, 0.001, length(uv - pointPos));\n    float b = smoothstep(0.2 + sin(time) * 0.05, 0.01, length(uv - RndPos(time * .2)));\n    \n    return vec3(r, g, b);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float time = iTime * 12.;\n    \n    vec2 uv = fragCoord.xy / iResolution.y;\n    vec2 uvr = fragCoord.xy / iResolution.xy;\n    vec2 px = 1. / iResolution.xy;\n    uvr = fract(uvr);\n    \n    vec3 prev = texture(iChannel0, uvr).rgb;\n    \n    float a = time * 0. + prev.b * 8. * PI + 0.;\n    float w = 5.;\n    vec2 disp = vec2(round(sin(a) * w), round(cos(a) * w)) * px;\n    \n    vec3 prevMoved = texture(iChannel0, uvr + disp).rgb;\n        \n    vec3 gen = Generator(uv);\n    \n    float r = max(prev.r * 0.95, prevMoved.r);\n    r = smoothstep(0.89 + sin(time) * 0.04, 0.965, r);\n    r = max(r, gen.r * 1.);\n    \n    \n    float g = max(prev.g * 1., prevMoved.g) * 0.99;\n    g = max(g, gen.g);\n    \n\n    float b = max(prev.b * 0.995, prevMoved.b * 0.);\n    b = max(b, gen.b);\n\n    vec3 color = vec3(r, g, b);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}