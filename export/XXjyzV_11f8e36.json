{"ver":"0.1","info":{"id":"XXjyzV","date":"1727452870","viewed":44,"name":"Jitterzoom","username":"LeSpeti","description":"Just a function that uses radial coordinates and modulus...","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","zoom","illusion","infinite","hypnotise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 c, vec2 C )\n{\n    vec2 R = iResolution.xy, U = ( C+C - R ) / R.y;\n    \n    c = vec4(\n        fract(\n\n            (length(U) + iTime) * 2.\n\n            + floor(atan(U.y, U.x) * 6.) * 0.6\n\n        )\n    );\n}\n\n/*\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    \n    \n    float r = length(uv);\n    float theta = atan(uv.y, uv.x);\n    \n    \n    float space = 3.1415926535 / 16.;\n    float nthPhase = floor(theta / space) * 0.6;\n    \n    float val = fract(r * 2. + iTime * 2. + nthPhase);\n     \n    vec3 col = vec3(val);\n\n\n    fragColor = vec4(col,1.0);\n}\n\n*/","name":"Image","description":"","type":"image"}]}