{"ver":"0.1","info":{"id":"dtBBWV","date":"1705259993","viewed":54,"name":"random retro-ish thing","username":"subzerocatalyst","description":"now with water! (previous title: doom-like floor, or smth)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":2,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define cubemap\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // pitch goes from 0.0 to 2.0, functions exactly like in duke3d.\n    float pitch = sin(iTime*1.2)*0.02 + 1.0;\n    float yaw = cos(iTime*0.6)*0.3;\n    // aspect ratio\n    float aspect = iResolution.x/iResolution.y;\n    // yaw matrix\n    mat3 yawMtx;\n    yawMtx[0] = vec3(cos(yaw),-sin(yaw),0.0);\n    yawMtx[1] = vec3(sin(yaw),cos(yaw),0.0);\n    yawMtx[2] = vec3(0.0,0.0,1.0);\n    \n    // normalized uv coords\n    vec2 uv = fragCoord.st / iResolution.xy;\n    uv -= vec2(0.5);\n    uv.x *= aspect;\n    \n    // section responsible for ground plane and sky\n    uv.y += pitch;\n    vec2 p_uv = uv/(-uv.t+sin(1.55968567));\n    vec2 r_uv = (vec3(p_uv,1.0) * yawMtx).st;\n    vec3 col;\n    col = texture(iChannel0,r_uv*0.2 + texture(iChannel2,r_uv*0.01 + vec2(0.0,1.0) + vec2(iTime*0.002) ).rg*0.1).rgb * vec3(1.0,1.2,1.0);\n    if(p_uv.t < -0.5) {\n            col = mix(col,texture(iChannel1,uv+vec2(-yaw,cos(pitch))).rgb,-p_uv.t);\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}