{"ver":"0.1","info":{"id":"dssczj","date":"1687018882","viewed":96,"name":"Circles illusions","username":"Goki","description":"This is a huge milestone for me. I thought I'd challenge myself by recreating this popular illusion. I was applied a few techniques I learned from previous tutorials and mini projects. I feel like it all came together when making this and I feel wonderful","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circles","illusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI  3.141592653589\n#define PI2 6.283185307178\n#define MAX_BALLS 8.\n\nfloat discDist(vec2 p, float r)\n{\n    return smoothstep(1.+3.*1.2/r/iResolution.y, 1., length(p)/r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n   \n    uv *= 1.2;\n    \n    for(float i=1.; i<=MAX_BALLS; i++)\n    {\n        float angle = PI2/(MAX_BALLS*2.);\n        float an = angle*i;\n        vec2 rv = mat2(cos(an),sin(an),-sin(an), cos(an)) * uv;\n        \n        float period = 2.*iTime-PI*(i/MAX_BALLS);\n        col += discDist(rv + vec2(cos(period), .0), 1./MAX_BALLS);\n        \n        //col += .001/abs(rv.x);\n    }\n    \n    \n    // Only thing left to do is figure out how to make the radius of the outer circle\n    // allign with the edges of the circles on the inside based on MAX_BALLS\n    // (i know they're neither circles or balls lol)\n    col += smoothstep(1.-3.*1.2*.89/iResolution.y, 1., length(uv)*.89);\n\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}