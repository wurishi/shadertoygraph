{"ver":"0.1","info":{"id":"fd2GDD","date":"1617443827","viewed":373,"name":"Swap Transition","username":"turboplay","description":"Another nice one from glsl-transitions","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["transition"],"hasliked":0,"parentid":"ssj3Dh","parentname":"Crosswarp transition"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// https://gl-transitions.com/editor/swap\n\nfloat reflection = 0.4;\nfloat perspective = 0.2;\nfloat depth = 3.0;\nfloat speed = 2.0f; // 1-max\nconst vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\n\n\nbool inBounds (vec2 p) {\nconst vec2 boundMin = vec2(0.0, 0.0);\nconst vec2 boundMax = vec2(1.0, 1.0);\n\n  return all(lessThan(boundMin, p)) && all(lessThan(p, boundMax));\n}\n \n \nvec4 bgColor (vec2 p, vec2 pfr, vec2 pto) {\n  vec4 c = black;\n  if (inBounds(pfr)) {\n    c += mix(black, texture(iChannel0,pfr), reflection * mix(1.0, 0.0, pfr.y));\n  }\n  if (inBounds(pto)) {\n    c += mix(black, texture(iChannel1,pto), reflection * mix(1.0, 0.0, pto.y));\n  }\n  return c;\n}\n \n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n      vec2 pfr, pto = vec2(-1.);\n      float progress = mod(iTime/speed,1.0);\n    vec2 p = fragCoord/iResolution.xy;\n    \n  float size = mix(1.0, depth, progress);\n  float persp = perspective * progress;\n  pfr = (p + vec2(-0.0, -0.5)) * vec2(size/(1.0-perspective*progress), size/(1.0-size*persp*p.x)) + vec2(0.0, 0.5);\n \n  size = mix(1.0, depth, 1.-progress);\n  persp = perspective * (1.-progress);\n  pto = (p + vec2(-1.0, -0.5)) * vec2(size/(1.0-perspective*(1.0-progress)), size/(1.0-size*persp*(0.5-p.x))) + vec2(1.0, 0.5);\n\n  if (progress < 0.5) \n  {\n    if (inBounds(pfr)) \n    {\n      fragColor = texture(iChannel0,pfr);\n    }\n    else\n    if (inBounds(pto))\n    {\n      fragColor = texture(iChannel1,pto);\n    }  \n  }\n  else\n  if (inBounds(pto)) \n  {\n    fragColor = texture(iChannel1,pto);\n  }\n  else\n  if (inBounds(pfr)) {\n    fragColor = texture(iChannel0,pfr);\n  }\n//fragColor = bgColor(p, pfr, pto);\n}","name":"Image","description":"","type":"image"}]}