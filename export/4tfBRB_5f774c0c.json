{"ver":"0.1","info":{"id":"4tfBRB","date":"1512210085","viewed":884,"name":"Gray-Scott Britney","username":"FlexMonkey","description":"Gray-Scott reaction diffusion powered by Britney Spears.","likes":12,"published":1,"flags":48,"usePreview":1,"tags":["grayscott"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | November 2017\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 foo = abs(sin(3.141 * 2.0 * texture(iChannel0, fragCoord.xy / iResolution.xy).xyz));\n    \n    \n    fragColor = vec4(smoothstep(vec3(0.8), vec3(1.0), foo), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | November 2017\n*/\n\nfloat f = 0.025;\nfloat k = 0.06;\nfloat dU = 0.2;\nfloat dV = 0.12;\n\nfloat timestep = 1.15;\n\n// Keyboard reset taken from https://www.shadertoy.com/view/XtcGD2\nbool reset() {\n    return texture(iChannel3, vec2(32.5/256.0, 0.5) ).x > 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord.xy / iResolution.xy;\n    vec3 pixelSize = vec3(1.0 / iResolution.xy, 0.0); \n\n    vec3 p = texture(iChannel0, coord).xyz;\n\n    vec3 laplacian = vec3(texture(iChannel0, coord - pixelSize.zy) +\n                          texture(iChannel0, coord - pixelSize.xz) -\n                          4.0 * texture(iChannel0, coord) +\n                          texture(iChannel0, coord + pixelSize.xz) +\n                          texture(iChannel0, coord + pixelSize.zy));\n\n    float u = p.x;\n    float v = p.y;\n\n    float reactionRate = u * v * v;\n    \n    float delta_u = dU * laplacian.x - reactionRate + f * (1.0 - u);\n    float delta_v = dV * laplacian.y + reactionRate - (f + k) * v;\n\n   \tvec2 result = clamp(vec2(u + delta_u * timestep, v + delta_v * timestep), 0.0, 1.0);\n\n    if(texture(iChannel2, coord).xyz == vec3(0) || reset()) {\n        fragColor = texture(iChannel1, coord) * vec4(1, 0.5, 1, 1);\n        float aspect = iResolution.x / iResolution.y;\n        if (abs(coord.x - 0.5) > 0.025 || abs(coord.y - 0.5) > 0.025 * aspect) {\n            fragColor = vec4(1,0,0,1);\n        }\n        \n    } else {\n        fragColor = vec4(result.xyy, 1.0);\n    }\n    \n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"/*\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | November 2017\n*/\n\nfloat f = 0.035;\nfloat k = 0.056;\nfloat dU = 0.2097;\nfloat dV = 0.11;\n\nfloat timestep = 1.15;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord.xy / iResolution.xy;\n    vec3 pixelSize = vec3(1.0 / iResolution.xy, 0.0); \n\n    vec3 p = texture(iChannel0, coord).xyz;\n\n    vec3 laplacian = vec3(texture(iChannel0, coord - pixelSize.zy) +\n                          texture(iChannel0, coord - pixelSize.xz) -\n                          4.0 * texture(iChannel0, coord) +\n                          texture(iChannel0, coord + pixelSize.xz) +\n                          texture(iChannel0, coord + pixelSize.zy));\n\n    float u = p.x;\n    float v = p.y;\n\n    float reactionRate = u * v * v;\n    \n    float delta_u = dU * laplacian.x - reactionRate + f * (1.0 - u);\n    float delta_v = dV * laplacian.y + reactionRate - (f + k) * v;\n\n   \tvec2 result = clamp(vec2(u + delta_u * timestep, v + delta_v * timestep), 0.0, 1.0);\n\n    fragColor = vec4(result.xyy, 1.0);\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"/*\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | November 2017\n*/\n\nfloat f = 0.029;\nfloat k = 0.057;\nfloat dU = 0.21;\nfloat dV = 0.105;\n\nfloat timestep = 1.15;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord.xy / iResolution.xy;\n    vec3 pixelSize = vec3(1.0 / iResolution.xy, 0.0); \n\n    vec3 p = texture(iChannel0, coord).xyz;\n\n    vec3 laplacian = vec3(texture(iChannel0, coord - pixelSize.zy) +\n                          texture(iChannel0, coord - pixelSize.xz) -\n                          4.0 * texture(iChannel0, coord) +\n                          texture(iChannel0, coord + pixelSize.xz) +\n                          texture(iChannel0, coord + pixelSize.zy));\n\n    float u = p.x;\n    float v = p.y;\n\n    float reactionRate = u * v * v;\n    \n    float delta_u = dU * laplacian.x - reactionRate + f * (1.0 - u);\n    float delta_v = dV * laplacian.y + reactionRate - (f + k) * v;\n\n   \tvec2 result = clamp(vec2(u + delta_u * timestep, v + delta_v * timestep), 0.0, 1.0);\n\n    fragColor = vec4(result.xyy, 1.0);\n}","name":"Buf C","description":"","type":"buffer"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"/*\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | November 2017\n*/\n\nfloat f = 0.0025;\nfloat k = 0.07;\nfloat dU = 0.25;\nfloat dV = 0.15;\n\nfloat timestep = 1.15;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord.xy / iResolution.xy;\n    vec3 pixelSize = vec3(1.0 / iResolution.xy, 0.0); \n\n    vec3 p = texture(iChannel0, coord).xyz;\n\n    vec3 laplacian = vec3(texture(iChannel0, coord - pixelSize.zy) +\n                          texture(iChannel0, coord - pixelSize.xz) -\n                          4.0 * texture(iChannel0, coord) +\n                          texture(iChannel0, coord + pixelSize.xz) +\n                          texture(iChannel0, coord + pixelSize.zy));\n\n    float u = p.x;\n    float v = p.y;\n\n    vec3 videoIn = sqrt(texture(iChannel1, coord).xyz);\n    \n    float videoU = mix(videoIn.x, videoIn.z, abs(sin(iTime)));\n    float videoV = mix(videoIn.z, videoIn.y, abs(sin(iTime)));\n    \n    dU -= videoV * 0.25;\n    dV -= videoU * 0.15;\n    \n    k -= videoU * 0.01;\n    f += videoV * 0.02;\n    \n    float reactionRate = u * v * v;\n    \n    float delta_u = dU * laplacian.x - reactionRate + f * (1.0 - u * videoIn.x);\n    float delta_v = dV * laplacian.y + reactionRate - (f + k) * v;\n\n   \tvec2 result = clamp(vec2(u + delta_u * timestep, v + delta_v * timestep), 0.0, 1.0);\n\n    fragColor = vec4(result.x, result.y, sqrt(result.y * videoU), 1.0);\n}","name":"Buf D","description":"","type":"buffer"}]}