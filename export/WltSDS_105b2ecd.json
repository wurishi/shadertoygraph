{"ver":"0.1","info":{"id":"WltSDS","date":"1581627830","viewed":77,"name":"Roy Lichtenstein","username":"badjano","description":"Roy Lichtenstein","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["lichtenstein","roy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 res;\nvec2 inv_res;\nfloat sqrt2 = 1.0/sqrt(2.0);\n\nconst mat3 YCoCr_mat = mat3(\n\t1./4., 1./2., 1./4.,\n    -1./4., 1./2., -1./4.,\n    1./2., 0.0, -1./2.\n);\n\nvec3 YCoCr(vec3 color_in) {\n\treturn YCoCr_mat * color_in;\n}\n\nvec3 YCoCr(sampler2D texture_in, vec2 uv) {\n\treturn YCoCr(texture(texture_in, uv).xyz);\n}\n\nconst mat3 sx = mat3( \n    1.0, 2.0, 1.0, \n    0.0, 0.0, 0.0, \n   -1.0, -2.0, -1.0 \n);\nconst mat3 sy = mat3( \n    1.0, 0.0, -1.0, \n    2.0, 0.0, -2.0, \n    1.0, 0.0, -1.0 \n);\n\n\nfloat calc_sobel_res(mat3 I) {\n\tfloat gx = dot(sx[0], I[0]) + dot(sx[1], I[1]) + dot(sx[2], I[2]); \n\tfloat gy = dot(sy[0], I[0]) + dot(sy[1], I[1]) + dot(sy[2], I[2]);\n\n\treturn sqrt(pow(gx, 2.0)+pow(gy, 2.0));\n}\n\nvec3 sobel(vec2 uv) {\n    mat3 Y;\n    mat3 Co;\n    mat3 Cr;\n    \n    vec3 temp; \n    for (int i=0; i<3; i++) {\n        for (int j=0; j<3; j++) {\n        \tvec2 pos = uv + vec2(float(i-1) * inv_res.x, float(j-1) * inv_res.y);\n            temp = YCoCr(iChannel0, pos);\n            Y[i][j] = temp.x;\n            Co[i][j] = temp.y;\n            Cr[i][j] = temp.z;\n\t    }\n\t}\n    \n\treturn vec3(calc_sobel_res(Y), calc_sobel_res(Co), calc_sobel_res(Cr));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 cor_ht = vec3( 241., 95., 74. )/256.;\n    \n    float ratio = iResolution.y/iResolution.x;\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    float scale = 75.;\n    vec2 grid_uv = floor(uv*scale)/scale;\n    grid_uv.x *= ratio;\n    vec3 c = texture(iChannel0, grid_uv).rgb;\n    \n    vec3 y = vec3(1.,1.,0.);\n    vec3 red = vec3(1.,0.,0.);\n    float yd = step(distance(c,y),0.6);\n    vec3 blue = vec3(.0,0.,1.);\n    float bd = step(distance(c,blue),0.95);\n    float rd = step(distance(c,red),0.5);\n    \n    float chtd = step(distance(c,cor_ht),0.75);\n    \n    float t = clamp(length(c),0.,1.);\n    float grey = pow(t-0.1,5.); \n    float d = length(fract((uv)*scale)-vec2(.5));\n    float ds = smoothstep(.4,.5,d+grey*.35);\n    \n    vec3 bg = vec3(1.0);\n    vec3 col = mix(bg*0.65,cor_ht,chtd);\n    col = mix(col,blue,bd);\n    col = mix(col, bg, ds);\n    col = mix(col,red,rd);\n    col = mix(col,y,yd);\n    \n    res = iResolution.xy;\n    inv_res = vec2(1.) / res;\n    uv.x *= ratio;\n    float sobe_edge = pow(clamp(1.3-length(sobel(uv))*1.5,0.,1.),50.);\n    fragColor = vec4(col, 1.0) * sobe_edge;\n}","name":"Image","description":"","type":"image"}]}