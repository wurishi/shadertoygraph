{"ver":"0.1","info":{"id":"3s2yzz","date":"1586052573","viewed":146,"name":"Star rot","username":"wnu","description":"1/x rotated","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["star"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\nvec2 rotate(float a,vec2 pos){\n    float c = cos(a);\n    float s = sin(a);\n    mat2 rot = mat2(c,-s,s,c);\n \treturn rot*pos;  \n}\n\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5*iResolution.xy);\n    uv /= iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //uv *= 200.*(1.-0.8*abs(sin(iTime)));\n    uv *= 16.;\n    \n    //uv = rot*uv;\n\tfloat fVal = 0.;\n    // Time varying pixel color\n    float linterp = abs(fract(iTime/4.)*2.-1.);\n    float linterp0 = abs(fract(iTime/16.)*2.-1.);\n    //linterp = step(0.5,linterp0);\n    linterp = 1.;\n    float linterp1 = abs(fract(iTime/4.)*2.-1.)*0.1+0.55;\n    float linterp2 = abs(fract(iTime/4.)*2.-1.)*0.1+0.0;\n    \n    //float rain = step(0.5,linterp);\n    float rain = 0.;\n    //int iter = int(abs(fract(iTime/2.)*2.-1.)*8.+1.9);\n    //int iter = int(abs(sin(iTime*1.)*8.)+2.);\n    int iter = 8;\n    \n    vec3 sc;\n    vec3 fc = vec3(0.);\n    for(int i = 0; i <iter; i++){\n    float it = float(i);\n    float n = float(iter);\n    uv = rotate(PI/(2.*float(iter)),uv);\n    //vec2 p = rotate(iTime*5.,uv);\n    vec2 p = uv;\n  \t//uv = rot* uv;\n    float xval = 1./abs(p.x);\n    p.y *= 1.;\n    float val = 1.-smoothstep(xval,xval+abs(p.y),abs(p.y));\n    float r = 255.*(it/(n-1.));\n    float b = 255.*((n-1.-it)/(n-1.));\n    //r = 255.;\n    //vec3 color = vec3(b,0.,r)/255.;\n    vec3 color = hsl2rgb(vec3(linterp1*(linterp) + (1.-linterp)*linterp2,0.5,abs(sin((it/(n-1.))+iTime*2.))));\n    \n        \n        \n    sc = vec3(val)*color;    \n        \n    float pbright = 1.-step(0.1,(fc.x+fc.y+fc.z)/3.); \n    float cbright = smoothstep(0.9,1.,val);\n    //fc = cbright*sc + (1.-cbright)*fc; \n    fc = mix(fc,sc,cbright);\n        \n    //fc = mix(sc,fc,0.55);    \n    \n    //fc += sc;    \n        \n    //fVal = max(val,fVal);  \n    \n    }\n    //float val = smoothstep(xval,xval+0.1,abs(uv.y));\n    //float val = step(xval,uv.y);\n    //vec3 col = vec3(fVal);\n    vec3 col = fc;\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}