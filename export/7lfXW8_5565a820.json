{"ver":"0.1","info":{"id":"7lfXW8","date":"1625559194","viewed":195,"name":"SDF Frog, hierarchical joints","username":"shyuriken","description":"modeled with \"Magica CSG\", and convert to \"SDF Editor\"\nmodel data for \"SDF Editor\" -> https://github.com/ultrahamlet/sdf_frog\n","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["sdf","frog","joints"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// SDF frog with  hierarchical joints structure\n// modeled with \"MagicaCSG\", converted to for  \"SDF Editor\"\n// SDF data for \"SDF Editor\" -> https://github.com/ultrahamlet/sdf_frog\n//\n// Processed by 'GLSL Shader Shrinker' (Shrunk by 3,167 characters)\n// (https://github.com/deanthecoder/GLSLShaderShrinker)\n\nmat3 rotateMat(vec3 p, float angle, vec3 axis) {\n\tvec3 a = normalize(axis);\n\tfloat s = sin(angle),\n\t      c = cos(angle),\n\t      r = 1. - c;\n\treturn mat3(a.x * a.x * r + c, a.y * a.x * r + a.z * s, a.z * a.x * r - a.y * s, a.x * a.y * r - a.z * s, a.y * a.y * r + c, a.z * a.y * r + a.x * s, a.x * a.z * r + a.y * s, a.y * a.z * r - a.x * s, a.z * a.z * r + c);\n}\n\nfloat pCapsule(float r, float h, vec3 p) {\n\tp.y -= clamp(p.y, 0., h);\n\treturn length(p) - r;\n}\n\nfloat pEllipsoid(vec3 r, vec3 p) {\n\tfloat k0 = length(p / r);\n\treturn k0 * (k0 - 1.) / length(p / (r * r));\n}\n\nvec3 mTranslation(vec3 inv_translation, vec3 p) { return p + inv_translation; }\n\nvec3 mRotation(mat3 inv_rotation, vec3 p) { return inv_rotation * p; }\n\nvec3 mMirror(vec3 normal, float dist, vec3 p) { return p - 2. * max(0., dot(normal, p) - dist) * normal; }\n\nfloat oUnion(float d1, float d2) { return min(d1, d2); }\n\nfloat oSmoothSubtraction(float k, float d1, float d2) {\n\tfloat h = clamp(.5 - .5 * (d1 + d2) / k, 0., 1.);\n\treturn mix(d1, -d2, h) + k * h * (1. - h);\n}\n\nfloat sdf(vec3 p0) {\n\tfloat d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20;\n\t{\n\t\tvec3 p1 = mRotation(mat3(1, 0, 0, 0, -0, 1, 0, -1, -0), p0);\n\t\t{\n\t\t\tvec3 p2 = mTranslation(vec3(-0, -.493172, -3.01572), p1);\n\t\t\t{\n\t\t\t\tvec3 p3 = mRotation(mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), p2);\n\t\t\t\td1 = pEllipsoid(vec3(1.99929, 1.97652, 1.28), p3);\n\t\t\t\t{\n\t\t\t\t\tvec3 p4 = mMirror(vec3(-1, 0, 0), 0., p3);\n\t\t\t\t\t{\n\t\t\t\t\t\tvec3 p5 = mRotation(mat3(1, 0, 0, 0, -0, 1, 0, -1, -0), p4);\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvec3 p6 = mTranslation(vec3(-1.67, -2.32, -0), p5);\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmat3 mt = rotateMat(p6, 1.5707963 - sin(iTime) * .5, vec3(0, 0, 1));\n\t\t\t\t\t\t\t\tvec3 p7 = mRotation(mt, p6);\n\t\t\t\t\t\t\t\td2 = pCapsule(.383695, 1.6905, p7);\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvec3 p8 = mTranslation(vec3(-0, -2.03, -0), p7);\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tmat3 mt = rotateMat(p7, 1.5707963 + sin(iTime) * .4, vec3(0, 0, 1));\n\t\t\t\t\t\t\t\t\t\tvec3 p9 = mRotation(mt, p8);\n\t\t\t\t\t\t\t\t\t\td3 = pCapsule(.383695, 1.444452, p9);\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvec3 p10 = mTranslation(vec3(-0, -1.83, -0), p9);\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvec3 p11 = mRotation(mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), p10);\n\t\t\t\t\t\t\t\t\t\t\t\td4 = pCapsule(.47, .319634, p11);\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvec3 p12 = mTranslation(vec3(-0, -.73, -0), p11);\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ d5 = pCapsule(.147221, 1.21, mRotation(mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), p12)); }\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvec3 p12 = mTranslation(vec3(.25, -.82, -0), p11);\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ d6 = pCapsule(.15, .93, mRotation(mat3(.866025, -.5, 0, .5, .866025, -0, -0, 0, 1), p12)); }\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvec3 p12 = mTranslation(vec3(-.28, -.59, -0), p11);\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ d7 = pCapsule(.15, .93, mRotation(mat3(.939693, .34202, -0, -.34202, .939693, 0, 0, -0, 1), p12)); }\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvec3 p12 = mTranslation(vec3(-.13, -.03, -0), p11);\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ d8 = pCapsule(.15, .93, mRotation(mat3(.652231, .758021, -0, -.758021, .652231, 0, 0, -0, 1), p12)); }\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tvec3 p5 = mRotation(mat3(1, 0, 0, 0, -0, 1, 0, -1, -0), p4);\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvec3 p6 = mTranslation(vec3(-.82, -4.86, -0), p5);\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmat3 mt = rotateMat(p6, .7854 + cos(iTime) * .5, vec3(0, 0, 1));\n\t\t\t\t\t\t\t\tvec3 p7 = mRotation(mt, p6);\n\t\t\t\t\t\t\t\td9 = pCapsule(.383695, 1.6905, p7);\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvec3 p8 = mTranslation(vec3(-0, -2.2, -0), p7);\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tmat3 mt = rotateMat(p8, -.31416 + sin(iTime) * .4, vec3(0, 0, 1));\n\t\t\t\t\t\t\t\t\t\tvec3 p9 = mRotation(mt, p8);\n\t\t\t\t\t\t\t\t\t\td10 = pCapsule(.383695, 1.444452, p9);\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvec3 p10 = mTranslation(vec3(-0, -1.99, -0), p9);\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvec3 p11 = mRotation(mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), p10);\n\t\t\t\t\t\t\t\t\t\t\t\td11 = pCapsule(.477884, .319634, p11);\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvec3 p12 = mTranslation(vec3(-0, -.53, -0), p11);\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ d12 = pCapsule(.147221, 1.13, mRotation(mat3(1, 0, -0, -0, .766045, .642788, 0, -.642788, .766045), p12)); }\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvec3 p12 = mTranslation(vec3(-.09, -.51, -0), p11);\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ d13 = pCapsule(.15, 1., mRotation(mat3(.866025, .5, -0, -.469846, .813798, .34202, .17101, -.296198, .939693), p12)); }\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvec3 p12 = mTranslation(vec3(-.32, -.31, -0), p11);\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ d14 = pCapsule(.15, .93, mRotation(mat3(.766045, .642788, 0, -.633022, .754407, .173648, .111619, -.133022, .984808), p12)); }\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvec3 p12 = mTranslation(vec3(-.19, -.49, -0), p11);\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ d15 = pCapsule(.15, .93, mRotation(mat3(.505883, -.862602, 0, .862602, .505883, -0, -0, 0, 1), p12)); }\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tvec3 p2 = mMirror(vec3(-1, 0, 0), 0., p1);\n\t\t\t{\n\t\t\t\tvec3 p3 = mTranslation(vec3(-1.23772, -.467108, -4.0436), p2);\n\t\t\t\t{ d16 = pEllipsoid(vec3(.625824, .357147, .8914), mRotation(mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), p3)); }\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tvec3 p2 = mTranslation(vec3(-0, .876456, -3.01572), p1);\n\t\t\t{ d17 = pEllipsoid(vec3(1.33164, 1.29976, .572888), mRotation(mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), p2)); }\n\t\t}\n\t\t{\n\t\t\tvec3 p2 = mMirror(vec3(-1, 0, 0), 0., p1);\n\t\t\t{\n\t\t\t\tvec3 p3 = mTranslation(vec3(-1.186, -.2179, -4.0436), p2);\n\t\t\t\t{ d18 = pEllipsoid(vec3(.4139, .357147, .66314), mRotation(mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), p3)); }\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tvec3 p2 = mMirror(vec3(-1, 0, 0), 0., p1);\n\t\t\t{\n\t\t\t\tvec3 p3 = mTranslation(vec3(-1.23772, -.467108, -4.0436), p2);\n\t\t\t\t{ d19 = pEllipsoid(vec3(.39685, .357147, .507432), mRotation(mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), p3)); }\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tvec3 p2 = mTranslation(vec3(-0, -.951508, -.05504), p1);\n\t\t\t{ d20 = pEllipsoid(vec3(1.72792, 1.4785, 2.16554), mRotation(mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), p2)); }\n\t\t}\n\t}\n\treturn oUnion(oSmoothSubtraction(.05, d1, d17), oUnion(oSmoothSubtraction(.05, d16, d18), oUnion(d19, oUnion(d20, oUnion(d5, oUnion(d4, oUnion(d3, oUnion(d2, oUnion(d6, oUnion(d8, oUnion(d7, oUnion(d12, oUnion(d11, oUnion(d10, oUnion(d9, oUnion(d13, oUnion(d14, d15)))))))))))))))));\n}\n\nvec3 calcNormal(vec3 pos) {\n\tconst vec2 e = vec2(1, -1) * 58e-5;\n\treturn normalize(e.xyy * sdf(pos + e.xyy) + e.yyx * sdf(pos + e.yyx) + e.yxy * sdf(pos + e.yxy) + e.xxx * sdf(pos + e.xxx));\n}\n\nfloat calcOcclusion(vec3 pos, vec3 nor) {\n\tfloat res = 0.;\n\tvec3 aopos = pos;\n\tfor (int i = 0; i < 4; i++) {\n\t\taopos = pos + nor * .2 * float(i);\n\t\tfloat d = sdf(aopos);\n\t\tres += d;\n\t}\n\n\treturn clamp(res, 0., 1.);\n}\n\nfloat castRay(vec3 ro, vec3 rd) {\n\tfloat t = 0.;\n\tfor (int i = 0; i < 100; i++) {\n\t\tvec3 pos = ro + t * rd;\n\t\tfloat h = sdf(pos);\n\t\tif (h < .001) break;\n\t\tt += h;\n\t\tif (t > 20.) break;\n\t}\n\n\tif (t > 20.) t = -1.;\n\treturn t;\n}\n\nvec3 env_color(vec3 dir) {\n\tif (dir.y > 0.) return mix(vec3(0, .5, 1), vec3(0, .1, .8), dir.y);\n\treturn mix(vec3(0, .5, 1), vec3(.8, .7, .6), pow(-dir.y, .5));\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n\tvec2 p = (2. * fragCoord - iResolution.xy) / iResolution.y;\n\tfloat t,\n\t      fi = 10. * iMouse.x / iResolution.x,\n\t      th = 10. * iMouse.y / iResolution.y;\n\tvec3 ro = vec3(5. * cos(fi) * sin(th), 5. * sin(th) * sin(fi), 15. * cos(th)),\n\t     ww = normalize(vec3(0) - ro),\n\t     uu = normalize(cross(ww, vec3(0, 1, 0))),\n\t     rd = normalize(p.x * uu + p.y * normalize(cross(uu, ww)) + 1.5 * ww),\n\t     col = vec3(.25, .72, .75) - .005 * rd.y;\n\tt = castRay(ro, rd);\n\tif (t > 0.) {\n\t\tcol = vec3(0);\n\t\tvec3 pos = ro + t * rd,\n\t\t     nor = calcNormal(pos);\n\t\tfloat occ = calcOcclusion(pos, nor);\n\t\tvec3 sun_dir = normalize(vec3(.8, .4, .2));\n\t\tfloat sun_sha = step(castRay(pos + nor * .001, sun_dir), 0.),\n\t\t      sun_dif = clamp(dot(nor, sun_dir), 0., 1.),\n\t\t      sky_dif = clamp(.5 + .5 * dot(nor, vec3(0, 1, 0)), 0., 1.),\n\t\t      bou_dif = clamp(.5 + .5 * dot(nor, vec3(0, -1, 0)), 0., 1.);\n\t\tcol = vec3(.05, .4, .3) * vec3(7, 4.5, 3) * sun_dif * sun_sha;\n\t\tcol += vec3(.05, .4, .3) * vec3(.5, .8, .9) * sky_dif * occ;\n\t\tcol += vec3(.05, .4, .3) * vec3(.7, .3, .2) * bou_dif * occ;\n\t}\n\telse col = env_color(rd);\n\n\tfragColor = vec4(pow(col, vec3(.4545)), 1);\n}","name":"Image","description":"","type":"image"}]}