{"ver":"0.1","info":{"id":"cdlBWl","date":"1689281751","viewed":28,"name":"Random Tube","username":"Gasp","description":"trying to learn shader art, so I just made this random tube","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"\" by None. https://shadertoy.com/view/-1\n// 2023-07-13 20:53:05\n\n#define SCALE .7\n#define STRIPES 10\n#define SLOPE 1.5\n#define SPEED sin(iTime) / 100. + 0.2\n\nfloat invLerp(float from, float to, float value){\n  return (value - from) / (to - from);\n}\n\nvec3 backgroundColor(in vec2 pos) {\n    vec3 background = vec3(0.137,0.114,0.243);\n    vec3 tube = vec3(1.000,0.941,0.353);\n    vec3 edge = vec3(1.000,0.824,0.353);\n    vec3 oddStripe = vec3(1.000,0.471,0.353);\n    vec3 evenStripe = vec3(1.000,0.667,0.353);\n\n\n    float d = length(vec2(pos.x, 0.));\n    d = d - SCALE;\n    float ss = 1. - smoothstep(-.4, .0, d);\n    \n    vec3 bg = (1. - d) *  background;\n    bg *= step(ss, 0.);\n    \n    vec3 pipe = tube * ss + (1. - ss) * edge;\n    pipe *= 1. - step(ss, 0.);\n    \n    vec3 stripes = bg + pipe;\n    if (pos.x > -SCALE && pos.x < SCALE) {\n        for (int i = -STRIPES; i < STRIPES; i++) {\n            float t = float(i) + tan(pos.x * SLOPE);\n            if (abs(pos.y + mod(iTime * SPEED, 2.) - t) < .1) \n                stripes = ((mod(float(i), 2.) == 0.) ? evenStripe : oddStripe) * ss;// + (1. - ss) * ((mod(float(i), 2.) == 0.) ? vec3(.7) : vec3(0.604,0.196,0.196));\n        }\n        \n    } else {\n        for (float i = -float(STRIPES); i < float(STRIPES); i += .3) {\n            float t = float(i) + tan(-pos.x * .3);\n            float t2 = float(i) + tan(pos.x * .3);\n            if (abs(pos.y + mod(-iTime * SPEED / 2., 3.) - t) < .006 || abs(pos.y + mod(-iTime * SPEED / 1., 3.) - t2) < .006) \n                stripes = vec3(1.) * (1. - d);\n        }\n    }\n\n    \n    return stripes;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    fragColor = vec4(backgroundColor(uv), 1.);\n}","name":"Image","description":"","type":"image"}]}