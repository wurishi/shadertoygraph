{"ver":"0.1","info":{"id":"Md2fzR","date":"1499227607","viewed":134,"name":"Simple parabola 2","username":"etale_cohomology","description":"Fork of https://www.shadertoy.com/view/MlBXRt","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simple","parabola"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of https://www.shadertoy.com/view/MlBXRt\n\n#define SPAN 1.\n#define WIDTH_FACTOR 1./SPAN * 100.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = fragCoord.xy / iResolution.xy;  // Map pixel coordinates to [0;1] x [0;1]\n  uv *= SPAN;  // Map pixel coordinates from [0;1] x [0;1] to [0; span] x [0; span]\n\n  // Magic happens here!\n  vec2 f_point = vec2(uv.x, pow(uv.x, 2.));   // Ordered pair (x, f[x]), ie. a point in the graph of f\n  float dist = distance(uv, f_point);  // L2 distance from current pixel to (x, f[x])\n\n  vec3 rgb = vec3(dist * WIDTH_FACTOR);  // Just some constant-number adjustment\n  fragColor = vec4(rgb, 1.);\n}\n","name":"Image","description":"","type":"image"}]}