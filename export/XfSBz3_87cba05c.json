{"ver":"0.1","info":{"id":"XfSBz3","date":"1725228304","viewed":20,"name":"SymbioticPatterns","username":"SirShart","description":"Welp","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float time = iTime * 3.0;  // Significantly increased time factor for much faster motion\n\n    // Create a 3D orb effect\n    float radius = 0.5;\n    vec2 center = vec2(0.0, 0.0);\n    vec2 dispUV = uv - center;\n    float dist = length(dispUV);\n\n    if (dist < radius) {\n        // Project UVs onto the sphere\n        vec3 sphereUV = normalize(vec3(dispUV, sqrt(radius*radius - dist*dist)));\n\n        // Map flowing pattern onto the orb\n        vec2 patternUV = sphereUV.xy;\n        patternUV += 0.2 * sin(patternUV.yx * 10.0 + time + vec2(0, 1.57));\n        patternUV += 0.1 * sin(patternUV.yx * 20.0 + time * 2.0);\n\n        // Create striped pattern\n        float stripes = sin(patternUV.x * 10.0) * cos(patternUV.y * 10.0);\n\n        // Map to color with shading for the orb\n        vec3 baseColor = vec3(1.0, 0.6, 0.2) * stripes + vec3(0.1, 0.1, 0.3);\n        float shading = sphereUV.z * 0.5 + 0.5;\n        fragColor = vec4(baseColor * shading, 1.0);\n    } else {\n        // Background pattern outside the orb\n        uv += 0.2 * sin(uv.yx * 10.0 + time + vec2(0, 1.57));\n        uv += 0.1 * sin(uv.yx * 20.0 + time * 2.0);\n        float stripes = sin(uv.x * 10.0) * cos(uv.y * 10.0);\n        vec3 color = vec3(1.0, 0.6, 0.2) * stripes + vec3(0.1, 0.1, 0.3);\n        fragColor = vec4(color, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}