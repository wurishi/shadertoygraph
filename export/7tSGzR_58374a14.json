{"ver":"0.1","info":{"id":"7tSGzR","date":"1623251149","viewed":83,"name":"20210609 holographic wave","username":"kamonumber","description":"Attempt to make a tile uv.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rectangles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 tile(vec2 uv,float ratio,float scroll){//入力したuvをもとにタイルに分割する関数\n    uv *= ratio;\n    uv = fract(uv);\n    uv.x += scroll;\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv =(fragCoord * 2.0 - R)/min(R.x,R.y);//正規化\n    \n    vec2 tu1 = tile(uv,3.0+sin(iTime)/3.0+20.0,0.0);//タイルuvを計算\n    vec2 tu2 = tile(uv,(sin(iTime)*0.3)/0.4+sin(iTime*0.7),sin(iTime));\n\n    vec2 ou = (tu1+tu2)/vec2(2.0);//uvをミックス\n    float col = 0.1/(pow(ou.x,2.0)-ou.y); //任意の座標のxの値がuv上のy=x*2からどれくらい離れているか\n    \n    fragColor = vec4(col,col*sin(iTime),col*sin(iTime*0.7),1.0);\n}","name":"Image","description":"","type":"image"}]}