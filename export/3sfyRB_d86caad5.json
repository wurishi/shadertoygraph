{"ver":"0.1","info":{"id":"3sfyRB","date":"1584984240","viewed":293,"name":"Dusk Gradient (95 chars)","username":"izutionix","description":"do it in blender: [url=https://cdn.discordapp.com/attachments/458541572372430872/691697262899888218/dusk_gradient_w_few_nodes.jpg]dusk gradient with few nodes[/url]\nprevious version: [url=https://www.shadertoy.com/view/Wl3SDf]Dusk Gradient[/url]","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["gradient","dusk","onetweet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//95 chars - removed the sqrt and changed some constants\nvoid mainImage(out vec4 O, vec2 U) {                                    \\\nO = 1.-pow(vec4(.7, 7, 30, 0)/5e2, U.y/iResolution.yyyy*1.3);\nO *= 8.*O*O*(O.a-O);}\n\n/*\n//103 chars by coyote\n#define mainImage(O, U)                                        \\\nO = 1.073-pow(vec4(.7, 7, 30, 0)/5e2, U.y/iResolution.yyyy*2.);\\\nO *= 3.*O*O*O*sqrt(O.a-O)\n\n//161, my original attempt\nvoid mainImage( out vec4 f, in vec2 p )\n{\n    float y = p.y/iResolution.y;\n    \n    vec3 b = pow(vec3(.001,.011,.05),vec3(y*2.));\n    \n    f = vec4(pow(\n        (b*pow(1.-b,vec3(8.))*16.),\n        vec3(.45)),1.0);\n}\n\n//intuitive version\n#define COLOR vec3(.001,.011,.05)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.y *= 2.;\n    vec3 blue = pow(COLOR,uv.yyy);\n    vec3 orange = 1.-blue;\n    vec3 sky = blue*pow(orange,vec3(8.))*16.;\n\n    fragColor = vec4(pow(sky,vec3(.4545)),1.0);\n}\n*/","name":"Image","description":"","type":"image"}]}