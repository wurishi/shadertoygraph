{"ver":"0.1","info":{"id":"4sVSWG","date":"1466325170","viewed":722,"name":"chain cloth 3","username":"FabriceNeyret2","description":"variant of https://www.shadertoy.com/view/MsGXDG\nwith individual coloring of rings.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["2d","pattern","tiling","short","chain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://www.shadertoy.com/view/MsGXDG\n\n#define R(v) fract( 4e4 * sin( 3e3* mat2(1,17.7,-31,7.7) * v ))  // random\n\n//         // dist to ring                 // ring thickness            // pseudo-depth   // select the max\n#define r l= abs(length(U-vec2(i,0))-.85); z= smoothstep(.06,.0, l-.08) *(.7+.4*(U.x-i++)); n++; if (z>M) N=n, M=z;\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\tU /= iResolution.y;\n    float l, z,M=0., i=-1.,n=0.,N;\n    vec2 V = floor(U*5.);\n    U = 2.*fract(U*5.) -1.;\n    \n    r r r     // offset i = -1, 0, 1    // even lines: tile = 1 circle + 2 half circles\n\n    U.x = -U.x;                          // odd line: horizontal 1/2 offset + symmetry\n    U.y -= sign(U.y);\n    i=-1.; \n    r r r    // offset i = -1, 0, 1 \n\n    // --- coloring  \n    // V = tile number , L = ring number in tile.  attention: odd lines are split upon tiles\n    V *= 2.;    \n    if (N > 3.)  V.x -= N-5.,              // reconnect sides  half-rings of odd lines\n                 V.y -= sign(U.y);         // reconnect up/down half-rings of odd lines\n        else     V.x += N-2.;              // reconnect sides  half-rings of even lines\n    O = M * vec4( R(V+vec2(.1,.2)), R(V+N/9.));\n}","name":"Image","description":"","type":"image"}]}