{"ver":"0.1","info":{"id":"NtsXDs","date":"1626838411","viewed":166,"name":"Quick Belousov-Zhabotinsky","username":"Yusef28","description":"You can reset with spacebar after going full screen\nResources\n[url]https://discovery.ucl.ac.uk/id/eprint/17241/1/17241.pdf[/url]\n[url]https://scipython.com/blog/simulating-the-belousov-z[/url]\n","likes":6,"published":1,"flags":48,"usePreview":0,"tags":["coloring","conway","gameoflife","gol"],"hasliked":0,"parentid":"-1","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates 0 (from to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0,uv).rgb;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n//nice keyboard reset fuction from:https://www.shadertoy.com/view/XtcGD2\nbool reset() {\n    return texture(iChannel2, vec2(32.5/256.0, 0.5) ).x > 0.5;\n}\n \n//Mooors Nachbarschaft\nvec3 count(vec2 p, vec2 off){ \n\n    vec3 cnt = vec3(0.);\n    vec2 m = iResolution.xy;\n   \n    for(float i = -1.; i <= 1.; i+=1.){\n        for(float j = -1.; j <= 1.; j+=1.){\n        \n            off = vec2(i,j)/iResolution.xy;\n            \n            vec2 st = p + off;\n            \n            //not this lol\n           //st.x = mod(st.x, iResolution.x);\n            //st.y = mod(st.y, iResolution.y);\n            \n            cnt += texture( iChannel0, fract(st) ).rgb;\n            }\n        }\n   \n   \n    return cnt;\n    \n}\n\nvoid mainImage( out vec4 data, in vec2 fragCoord )\n{\n    vec2 off = 1./iResolution.xy;\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    if(iFrame == 0 || reset()){\n    \n       vec3 abc = \n       \n      vec3( \n       rnd(uv + vec2(394.3,254.)),\n       rnd(uv),\n       rnd(uv + vec2(-134.3,-14.))\n       \n       );\n     \n       data = vec4(abc,1.);\n             \n    }\n    \n    else{\n        \n        vec3 abc = count(uv,off)/9.;\n        vec3 abcT;\n        \n        //you can turn one or two of these up to 1.2, 1.5 etc\n        //check full screen (reset with spacebar in fullscreen)\n        //to see if anything happens on the larger scale\n        \n        float alpha = 1.;\n        float beta = 1.;\n        float gamma = 1.;\n        \n        abcT.x = abc.x + abc.x*(abc.y*alpha - abc.z*gamma);\n        abcT.y = abc.y + abc.y*(abc.z*beta - abc.x*alpha);\n        abcT.z = abc.z + abc.z*(abc.x*gamma - abc.y*beta);\n        \n        data = vec4(clamp(abcT,0.,1.),1.);\n\n    }\n\n\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float rnd(vec2 id){\n    return fract(sin(id.x*12.99+id.y*800.+40.)*51343.);\n}\n","name":"Common","description":"","type":"common"}]}