{"ver":"0.1","info":{"id":"4lK3Wh","date":"1474447625","viewed":221,"name":"Blue Giant Supernova","username":"rush_2112","description":"Blue Giant Supernova with tiny blackhole","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["supernova","bluegiant"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor,  vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;    \n    \n\tfragColor = texture(iChannel0, fragCoord/iResolution.xy); // Algo\n    \n    if (iFrame < 10) {\n        vec2 center_uv = uv - 0.5;\n        center_uv.y *= iResolution.y / iResolution.x;\n        float d = distance(center_uv, vec2(0.0));\n        float v = 1.0 - smoothstep(0.0, 0.2, d);\n        fragColor = vec4(0.0, 0.3 * v, 1.0 * v, 1.0);\n        if (uv.y < 0.05) {\n            fragColor = vec4(0.0, 0.3, 1.0, 1.0);\n        }\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rnd(vec2 inval) {\n\treturn fract(sin(dot(inval.xy ,vec2(19.2425, 87.567))) * 143758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 reso = vec2(iResolution);\n\tvec2 pix = fragCoord;\n\tivec2 ipix;\n\tvec4 init_color;\n\tvec4 final_color;\n\tvec2 uv = (pix / reso) - 0.5;\n    vec2 neighbor;\n\tvec4 n_color = vec4(0.0);\n\tfloat max_rgb = 0.0;\n\tfloat n_max_rgb = 0.0;\n\tfloat speed_chance;\n\tfloat tx_max;\n\tfloat tx;\n\tfloat squeeze = 0.0;\n\tfloat bloat = 0.0;\n\tfloat shake = 0.0;\n\tfloat implode = 0.0;\n\t\n\t// Timing\n\ttx_max = 650.0;\n\ttx = mod(iTime*50.0, tx_max);\n\t\n\t// UV\n\tuv.x = pix.x / reso.y;\n\tuv.y = pix.y / reso.y;\n\tfloat uv_w = reso.x / reso.y;\n\tfloat uv_h = 1.0;\n\tuv.x = uv.x - (uv_w / 2.0);\n\tuv.y = uv.y - (uv_h / 2.0);\t\n\t\n\tfloat squeeze_base = 5.0; // Smaller = bigger star\n\tfloat bloat_fac = 50.0;\n\t\n\t// Init: Pre-implode\n\tif (tx < 40.0) {\n\t\tinit_color = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\n\t\tfloat d = distance(uv, vec2(0.0, 0.0));\n\t\tbloat = -(tx/bloat_fac);\n\t\tshake = 0.35 * rnd(vec2(tx));\n\t\tsqueeze = squeeze_base + bloat + shake;\n\t\tfloat df = 1.0 - (squeeze * d);\n\t\tdf = clamp(df, 0.0, 1.0);\n\t\tdf *= 1.2;\n\t\t\n\t\tinit_color = df * vec4(0.3, 0.6, 1.0, 1.0);\n\t\t\n\t\tfragColor = init_color;\n\t\treturn;\n\t}\n\t\n\t// Init: Implode\n\tfloat tx_implode = 40.0;\n\tfloat txi_implode = 15.0;\n\tif ( (tx >= tx_implode) && (tx < tx_implode + txi_implode) ) {\n\tinit_color = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\n\t\tfloat d = distance(uv, vec2(0.0, 0.0));\n\t\timplode = 15.0 * (tx - tx_implode);\n\t\tbloat = -(tx/bloat_fac);\n\t\tsqueeze = squeeze_base + bloat + implode;\n\t\tfloat df = 1.0 - (squeeze * d);\n\t\tdf = clamp(df, 0.0, 1.0);\n\t\t\n\t\tdf *= 1.2;\n\t\tinit_color = df * vec4(0.3, 0.6, 1.0, 1.0);;\n\t\t\n\t\tfragColor = init_color;\n\t\treturn;\t\n\t}\n\t\n\t\n\t// New frame\n\t// final_color = imageLoad(prev_frame, ipix);\t\t\n\t\n\tvec2 uv_sample = fragCoord / iResolution.xy;\n\tfinal_color = texture(iChannel0, uv_sample);\n\tmax_rgb = max(max(final_color.r, final_color.g), final_color.b);\n\tfloat tx_explode = tx_implode + txi_implode;\n\tif (max_rgb > 0.00) {\n\t\t// Not pure black \n\t} else {\n\t\t// Maybe come to life\n        vec2 displace;\n\t\tfor (int x = -1; x <= 1; x++) {\n\t\t\tfor (int y = -1; y <= 1; y++) {                \n                // Get a neighbor's color\n                displace = vec2(x, y);\n                neighbor = fragCoord + displace;\n                n_color = texture(iChannel0, neighbor/iResolution.xy);                \n                \n\t\t\t\tvec2 seed = vec2(neighbor) * (tx);\n\t\t\t\tfloat rv = rnd(seed);\n\t\t\t\tfloat speed_var = 0.3 * (0.5); // 0.0 to 0.3\n\t\t\t\tspeed_chance = 0.02 + speed_var;\n\t\t\t\tif (tx < tx_explode + 420.0){speed_chance = 0.06 + speed_var;}\n\t\t\t\tif (tx < tx_explode + 360.0){speed_chance = 0.10 + speed_var;}\n\t\t\t\tif (tx < tx_explode + 200.0){speed_chance = 0.15 + speed_var;}\n\t\t\t\tif (tx < tx_explode + 100.0){speed_chance = 0.20 + speed_var;}\n\t\t\t\tif (tx < tx_explode + 70.0) {speed_chance = 0.25 + speed_var;}\t\t\t\t\n\t\t\t\tn_max_rgb = max(max(n_color.r, n_color.g),n_color.b);\n\t\t\t\tif (n_max_rgb >= 0.002 && rv < speed_chance) {\t\t\t\t\t\n\t\t\t\t\tfinal_color = vec4(0.3, 0.6, 1.0, 1.0) * 5.0;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\t// BG color if not come to life\n\t\t\t\n\t// Aging\n\tfloat age_factor = 1.0;\t\n\tif (final_color.x > 0.002) {\n\t\t// final remains\n\t\tage_factor = 0.9850;\n\t}\n\tif (final_color.x > 0.10) {\n\t\tage_factor = 0.9653;\n\t}\t\n\tif (final_color.x > 0.50) {\n\t\tage_factor = 0.9653;\n\t}\t\t\n\tif (final_color.x > 0.80) {\n\t\t// Leading edge fast decay\n\t\tage_factor = 0.85;\n\t}\t\t\t\n\tfloat decay_val = age_factor;\n\tdecay_val = clamp(decay_val, 0.0, 0.9980);\n\tfinal_color *= decay_val;\n\t\t\n\t\n\tfragColor = final_color;\n}\n\n\n\n","name":"Buf A","description":"","type":"buffer"}]}