{"ver":"0.1","info":{"id":"cl2fDt","date":"1694619934","viewed":18,"name":"Signed Distance Field of Circle","username":"unravelwinter","description":"Visualizing the SDF of a circle, two different ways.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 SDFColorEasy(float d) {\n    float col = floor(10.0*d)/10.0;\n    if (d < -0.006) {\n        return vec4(0, 0, -col, 1);\n    } else if (d > 0.006) {\n        return vec4(col, 0, 0, 1);\n    } else {\n        return vec4(1, 1, 0, 1); // draw circle outline in yellow\n    }\n}\n\nvec4 SDFColorIq(float d) {\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-2.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(120.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) ); // draw circle outline in white\n    return vec4(col, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates from -1 to 1 on y-axis\n    vec2 uv = (2.0*fragCoord - iResolution.xy)/iResolution.y;\n    \n    float RADIUS = 0.8;\n    float d = length(uv) - RADIUS; // SDF distance\n    \n    // Two different ways of coloring SDFs\n    bool useEasy = sin(iTime * 2.0) > 0.0; // Alternate between T and F\n    fragColor = useEasy ? SDFColorEasy(d) : SDFColorIq(d);    \n}\n","name":"Image","description":"","type":"image"}]}