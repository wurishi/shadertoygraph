{"ver":"0.1","info":{"id":"WdX3zB","date":"1546809558","viewed":173,"name":"Color foggy spiral","username":"jaszunio15","description":"Some random improvisation with trigonometric functions and matrices\n\nShader License: CC BY 3.0\nAuthor: Jan Mróz (jaszunio15)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["distortion","spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Shader License: CC BY 3.0\n//Author: Jan Mróz (jaszunio15)\n\n#define ITERATIONS 0\n\nvec3 myHueIdea(float hueShift, float time)\n{\n \treturn clamp(vec3(sin(time + hueShift),\n                sin(time + hueShift + (2.0/3.0) * M_PI),\n                sin(time + hueShift + (4.0/3.0) * M_PI)), 0.0, 1.0);\n}\n\nvec4 freestyle( in vec2 uv )\n{\n    float time = iTime;\n    vec2 uvNorm = normalize(uv);\n    uv += uvNorm * sin(time * 0.1) * 2.0;\n    uv *= 1.0 + sin(time * 0.2) * 0.5;\n    \n    float t = -time * 0.2 + sin(length(uv) * 10.0) * 2.0;\n    uv = mat2(cos(t), sin(t), -sin(t), cos(t)) * uv;\n    t = time;\n    uv = mat2(cos(t), sin(t), -sin(t), cos(t)) * uv;\n    \n    float distToCenter = log(length(uv)) * 2.0 + time;\n    distToCenter *= 1.0 * (0.2 + (1.0 / clamp(time, 1.0, 100.0)));\n   \n    vec2 rotVec = vec2(cos(distToCenter), sin(distToCenter));\n    mat2 mat = mat2(rotVec.x, rotVec.y * sin(time),\n                   -rotVec.y * rotVec.x * sin(time * 0.21), rotVec.x * cos(time * 0.43));\n    \n    uv = mat * uv;\n    \n   \tvec4 col1 = vec4(myHueIdea(0.0, time * 0.1), 1.0);\n    vec4 col2 = vec4(myHueIdea(2.0 + time * 0.05, time * 0.1), 1.0);\n    \n    float s = sin(log(time / 6.0) / (uv.x / uv.y)) * 0.5 + 0.5;\n    s = pow(s, (1.0 / abs(time) + 1.0) / 2.0);\n    \n    \n    vec4 col = mix(col1, col2, sin(uv.y) * 0.5 + 0.5) * clamp(s, 0.0, 1.0);\n    col = mix(col, vec4(1.0), clamp(pow(clamp(s, 0.0, 1.0), 0.5), 0.0, 0.5));\n    \n    vec4 tex = texture(iChannel1, uv * 0.1);\n    col *= tex * 3.0;\n\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float uvLen = length(uv);\n    \n    //darken outside\n    float r = 1.0 - clamp(uvLen, 0.0, 1.0);\n    \n    //darken center\n    r *= clamp(uvLen * 6.0, 0.0, 1.0);\n    \n    vec4 col = pow(freestyle(uv), vec4(0.75));\n\n    fragColor = clamp(col * 2.0 * r, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define M_PI 3.1415927\n#define M_E 2.7182818","name":"Common","description":"","type":"common"}]}