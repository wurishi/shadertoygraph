{"ver":"0.1","info":{"id":"XdtyRr","date":"1517786805","viewed":243,"name":"creature","username":"ShadowX","description":"monster test","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["monster"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b) smoothstep(-aa, aa, b-(a))\n#define si(a) (sin(a)+1.)*2.\n#define PI acos(-1.)\n\n// 2d rotation\nmat2 r2D(float a){\n    return mat2(sin(a), cos(a), -cos(a), sin(a));\n}\n\n//bg vignette\nfloat BG(vec2 uv){\n    return 1.-length(uv);\n}\n//EYES (circles with custom aspect * rotation)\n//s - size, r - angle, a - aspect, t - time, aa - antialiasing\nfloat Eye(vec2 uv, float s, float r, float a, float t, float aa){\n    uv *= r2D(r);\n    uv.x *= a;\n    float eye = 1.-S(s, length(uv));\n    return eye;\n}\n\n//CREATURE\n//s - size, t - time, aa - antialiasing\nfloat Creature(vec2 uv, float s, float t, float aa){\n    vec2 st = uv;\n    \n    //mouse input (thanks rigel!)\n    if (iMouse.w > .0) {\n      vec2 ms = (iMouse.xy - iResolution.xy * .5) / iResolution.y;\n      t = atan(ms.y-uv.y,ms.x-uv.x);\n    }\n    \n    //body warping motion\n    //               cycles     amplitude\n    st.x += cos(uv.y * 33. + t) * .007;\n    st.y += sin(uv.x * 35. + t) * .009;\n    \n    //draw body\n    float body = S(s, length(st)+abs(sin(atan(st.y,st.x)*25.)*.26*s));\n    \n    //x1pos, x2pos = position of the eyes on x\n    //           offset      animation\n    float x1pos =  .3*s +  si(t)*.01;\n    float x2pos = -.3*s +  si(t)*.01;\n \n    float ypos = .01;\n\n    //rotation angle\n    float an = -1.2;\n  \n    //                         pos offset       scale (offset+anim)     angle   aspect\n    float eye1  = Eye(uv - vec2( x1pos, ypos), .27*s + si(t * 2.4)*.0016,   an,    1.2, t, aa);\n    \n          eye1 -= Eye(uv - vec2( x1pos + cos(t * 1.1)* .12*s, -.02 + ypos+sin(t)*.01), .08*s+si(t*2.4)*.0016, an, 1.2, t, aa);\n\n    float eye2  = Eye(uv-vec2(x2pos, ypos), .27*s+si(t*2.2)*.0017, -an, 1.2, t, aa);\n    \t  eye2 -= Eye(uv-vec2(x2pos+cos(t*1.1+12.)*.12*s, -.015+ypos+sin(t*1.2+12.)*.01), .02+si(t*2.4)*.0016, an, 1.2, t, aa);\n    \n    body += eye1 + eye2;\n    return body;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy) / iResolution.y;\n    //vec2 uv = (fragCoord/iResolution.xy - .5)*vec2(iResolution.x/iResolution.y, 1.);\n  \n    float t = iTime*.5;\n    \n    float aa = 1./iResolution.y;\n   \n    float creatures = Creature(uv, .3, t, aa);\n    creatures *= Creature(uv+vec2(.55+sin(t*.2)*.07, .2+cos(t*.2)*.07), .2, t*.8, aa);\n    creatures *= Creature(uv+vec2(-.45+sin(t*.2)*.07, -.2+cos(t*.2)*.07), .16, t*.6, aa);\n    \n \n    float col = BG(uv)*creatures;\n    vec3 color = vec3(col);\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}