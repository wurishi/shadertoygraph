{"ver":"0.1","info":{"id":"ssySz1","date":"1634310774","viewed":677,"name":"Fireworks Shader","username":"cam93","description":"this is a demonstration of a shader that simulates the behavior of fireworks","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["fireworks"],"hasliked":0,"parentid":"-1","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_EXPLOSIONS 5.\n#define NUM_PARTICLES 75.\n\nvec2 Hash12(float t){\n\nfloat x = fract(sin(t*674.3)*453.2);\nfloat y = fract(sin((t+x)*714.3)*263.2);\n\nreturn vec2(x, y);\n}\n\nvec2 Hash12_Polar(float t){\n\nfloat p_Angle = fract(sin(t*674.3)*453.2)*6.2832;\nfloat p_Dist = fract(sin((t+p_Angle)*714.3)*263.2);\n\nreturn vec2(sin(p_Angle), cos(p_Angle))*p_Dist;\n}\n\nfloat Explosion(vec2 uv, float t){\n \n float sparks = 0.;\n \n    for(float i = 0.; i<NUM_PARTICLES; i++){\n    \n        vec2 dir = Hash12_Polar(i+1.)*.5;\n        float dist = length(uv-dir*t);\n        float brightness = mix(.0005, .0005, smoothstep(.05, 0., t));\n        \n        brightness *= sin(t*20.+i)*.5+.5; \n        brightness*= smoothstep(1., .6, t);\n        sparks += brightness/dist;\n    }\n    return sparks;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord -.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n    \n    for(float i = 0.; i<NUM_EXPLOSIONS; i++){\n    float t =iTime+i/NUM_EXPLOSIONS;\n    float ft = floor(t);\n        vec3 color = sin(4.*vec3(.34,.54,.43)*ft)*.25+.75;\n\n       \n        vec2 offset = Hash12(i+1.+ft)-.5;\n        offset*=vec2(1.77, 1.);\n        //col+=.0004/length(uv-offset);\n        \n         col += Explosion(uv-offset, fract(t))*color;\n       }\n   \n   col*=2.;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}