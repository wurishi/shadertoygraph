{"ver":"0.1","info":{"id":"MftXRj","date":"1714171493","viewed":38,"name":"eye of the swirl","username":"rucksack","description":"inspired by that Conduit shader but w/o ending up 3d","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","shiny","idk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(.1);\n    \n    // kinda raymarching\n    for (float r = 0.; r < 2.; r += .01)\n    {\n        vec3 p = vec3(uv, r);\n        \n        // distance to moving center point\n        float d = distance(p, vec3(.3*cos(r+.155+iTime*1.5)*cos(r+5.4244+iTime*2.), .2*sin(r+iTime*2.), r + .01*abs(cos(143.35156+1.7*iTime))));\n        // use it for different purposes\n        col += .0003 * (1. / d) * vec3(1, 0, 0) + .01 * vec3(.1) * d;\n        // gtfo\n        if ((1. / d) < mix(2., 3., smoothstep(.1, .9, abs(p.y))))\n        {\n            col += mix(1., 0., smoothstep(.05, .4, col.r));\n            break;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}