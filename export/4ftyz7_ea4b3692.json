{"ver":"0.1","info":{"id":"4ftyz7","date":"1730412337","viewed":52,"name":"quadtree - 4ftyz7","username":"Pangolecimal","description":"quadtree","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["quadtree"],"hasliked":0,"parentid":"XfdyRN","parentname":"octree - XfdyRN"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nhttps://www.shadertoy.com/view/4ttSWf\n*/\n\n#define SEED 0\n#define PI 3.141592653589\n#define ITER_BASE 2.1\n#define ITER_MAX floor(log(iResolution.y) / log(ITER_BASE))\n\n#define rand(p)     fract(sin(dot(p, vec3(12.9898, 78.233, 3.1415))) * 43758.5453)\n#define floorv(v,m) floor(v * m) / m\n#define roundv(v,m) round(v * m) / m\n\nvec2 render(vec3 p) {\n    float result = 0.0;\n    float threshold = 0.75;\n    \n    int i = 2;\n    for(; i < int(ITER_MAX + 4.) && result < threshold; i++) {\n        float m = pow(ITER_BASE, float(i));\n        result = roundv(rand(roundv(p, m)), 2.0);\n    }\n    \n    return vec2(1.0-result, float(i) / float(ITER_MAX));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n    uv *= iMouse.x / iResolution.x * 2.0 + 1.0;\n    vec2 r = render(vec3(uv.x + iTime/10.0, uv.y, iTime/10.0));\n    fragColor.rgb = 2.0 * vec3(r.y, 0, 0) * dot(normalize(vec3(uv,1)), vec3(0,0,1)) +\n        vec3(0, r.x/2., 0) * (1.-dot(normalize(vec3(uv,1)), vec3(0,0,1)));\n}\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}