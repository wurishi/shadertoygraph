{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define Iterations 128\n\nvec2 rotate(vec2 point, float rads) {\n\tfloat cs = cos(rads);\n\tfloat sn = sin(rads);\n\treturn point * mat2(cs, -sn, sn, cs);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = ((fragCoord.xy * 2.0) - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec2 point = uv;\n    point *= 2.0 + sin(iTime*0.3);\n\n    float angle = cos(iTime/2.0);\n    for(int i = 0; i < Iterations; i++){\n    \tpoint += rotate(vec2(0.,1.),angle);\n        angle += length(point);\n    }\n    \n    float v = 0.0;\n    if(length(point) < 1.0+sin(iTime)){\n     \tv = 1.0;\n    }\n    \n\tfragColor = vec4(v,v,v,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4ll3zn","date":"1418027014","viewed":221,"name":"Angle Set","username":"TheJimJames40","description":"some kind of fractal set where\nI rotate then translate a point each iteration\nthen check if it is inside a circle of some radius","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","angle","set"],"hasliked":0,"parentid":"","parentname":""}}