{"ver":"0.1","info":{"id":"stjfRt","date":"1652636696","viewed":379,"name":"progressive antialiasing","username":"FabriceNeyret2","description":"temporal oversampling using noise texture for jittering.\n( blue/white above/below diagonal, but the way it is used it is all white sampling ;-) ).\n\nNB: for real use, one wants point distribution rather than field.\n  box integration over pixel let some Ali","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["antialiasing","temporal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    T;\n    O = sqrt(O.xxxx/O.a);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    T;\n    U += 1.* ( U.y > U.x // subpixel jittering through time\n          ? texelFetch(iChannel1,ivec2(U+float(iFrame)*vec2(17,13))%1024,0).xy -.5\n          : texelFetch(iChannel2,ivec2(U+float(iFrame)*vec2(17,13))%256,0).xy -.5 );\n          \n    U *= 20./iResolution.xy; \n    U *= sin(U.yx);\n    O.x += fract(U.x*U.y);\n    O.a++;         // frame count\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T O = texelFetch(iChannel0, ivec2(U), 0)","name":"Common","description":"","type":"common"}]}