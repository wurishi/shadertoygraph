{"ver":"0.1","info":{"id":"dscGzl","date":"1677679138","viewed":706,"name":"Bezier3 Curve","username":"RequieMa","description":"A Learning Project Demo for Bezier Curve","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["curve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 pixel, vec2 center, float radius)\n{\n    float d = length(pixel - center);\n    return smoothstep(fwidth(d), .0, d - radius);\n}\n\nfloat LineSegment(vec2 pixel, vec2 a, vec2 b, float width)\n{\n    vec2 a2p = pixel - a, a2b = b - a;\n    float t = clamp(dot(a2p, a2b) / dot(a2b, a2b), .0, 1.0);\n    vec2 r = a + a2b * t;\n    float d = length(r - pixel);\n    return smoothstep(fwidth(d), 0., d - width);\n}\n\nvec2 Bezier1(vec2 start, vec2 controlPtr, float timeStep)\n{\n    return mix(start, controlPtr, timeStep);\n}\n\nvec2 Bezier2(vec2 P1, vec2 P2, vec2 P3, float timeStep)\n{\n    return mix(Bezier1(P1, P2, timeStep), Bezier1(P2, P3, timeStep), timeStep);\n}\n\nvec2 Bezier3(vec2 P1, vec2 P2, vec2 P3, vec2 P4, float timeStep)\n{\n    return mix(Bezier2(P1, P2, P3, timeStep), Bezier2(P2, P3, P4, timeStep), timeStep);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy * .5)/iResolution.x;\n    vec3 col = vec3(0);\n    float radius = .015;\n    float width = .001;\n    float t = sin(iTime) * .5 + 0.5;\n    \n    vec2 \n        Ptr1 = vec2(-.3, .1), \n        Ptr2 = (iMouse.xy - iResolution.xy * .5) / iResolution.x,\n        Ptr3 = vec2(-.5, -.2),\n        Ptr4 = vec2(.4, .2),\n        \n        Ptr12 = Bezier1(Ptr1, Ptr2, t),\n        Ptr23 = Bezier1(Ptr2, Ptr3, t),\n        Ptr34 = Bezier1(Ptr3, Ptr4, t),\n        \n        Ptr123 = Bezier1(Ptr12, Ptr23, t),\n        Ptr234 = Bezier1(Ptr23, Ptr34, t),\n        \n        Ptr1234 = mix(Ptr123, Ptr234, t);\n        \n    col += vec3(1, 0, 0) * Circle(uv, Ptr1, radius);\n    col += vec3(0, 1, 0) * Circle(uv, Ptr2, radius);\n    col += vec3(0, 0, 1) * Circle(uv, Ptr3, radius);\n    col += vec3(1, 0, 1) * Circle(uv, Ptr4, radius);\n    \n    col += vec3(1, 1, 0) * Circle(uv, Ptr12, radius);\n    col += vec3(0, 1, 1) * Circle(uv, Ptr23, radius);\n    col += vec3(1, .5, 1) * Circle(uv, Ptr34, radius);\n    \n    col += vec3(1, 1, .5) * Circle(uv, Ptr123, radius);\n    col += vec3(.5, 1, 1) * Circle(uv, Ptr234, radius);\n    \n    col += vec3(1, 1, 1) * Circle(uv, Ptr1234, radius);\n    \n    col += LineSegment(uv, Ptr1, Ptr2, width);\n    col += LineSegment(uv, Ptr2, Ptr3, width);\n    col += LineSegment(uv, Ptr3, Ptr4, width);\n    col += LineSegment(uv, Ptr12, Ptr23, width);\n    col += LineSegment(uv, Ptr23, Ptr34, width);\n    col += LineSegment(uv, Ptr123, Ptr234, width);\n\n    int NUM_SEGs = 100;\n    vec2 currentPtr, previousPtr = Ptr1;\n    for (int i=1; i < NUM_SEGs+1; ++i)\n    {\n        t = float(i) / float(NUM_SEGs);\n        currentPtr = Bezier3(Ptr1, Ptr2, Ptr3, Ptr4, t);\n        col = max(col, LineSegment(uv, currentPtr, previousPtr, width));\n        previousPtr = currentPtr;\n    }\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}