{"ver":"0.1","info":{"id":"lddfzr","date":"1523982444","viewed":207,"name":"Ponzo illusion","username":"fjavifabre","description":"More optical illusions","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["illusion","perception"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// TODO: use 2D functions instead of just copying from\n// https://iquilezles.org/articles/distfunctions\n\n#define USE_WHITE 0 // Time varying pixel color\n\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat udTriangle( vec3 p, vec3 a, vec3 b, vec3 c )\n{\n    vec3 ba = b - a; vec3 pa = p - a;\n    vec3 cb = c - b; vec3 pb = p - b;\n    vec3 ac = a - c; vec3 pc = p - c;\n    vec3 nor = cross( ba, ac );\n\n    return sqrt(\n    (sign(dot(cross(ba,nor),pa)) +\n     sign(dot(cross(cb,nor),pb)) +\n     sign(dot(cross(ac,nor),pc))<2.0)\n     ?\n     min( min(\n     dot2(ba*clamp(dot(ba,pa)/dot2(ba),0.0,1.0)-pa),\n     dot2(cb*clamp(dot(cb,pb)/dot2(cb),0.0,1.0)-pb) ),\n     dot2(ac*clamp(dot(ac,pc)/dot2(ac),0.0,1.0)-pc) )\n     :\n     dot(nor,pa)*dot(nor,pa)/dot2(nor) );\n}\n\nfloat circle( vec2 p, vec2 c, float radius) \n{\n    \n    return sqrt(pow(p.x-c.x, 2.) + pow(p.y-c.y, 2.)) - radius;\n        \n}\n\nfloat line( vec2 p, vec2 a, vec2 b, float r )\n{\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - r;\n}\n\nfloat opRep( vec2 p, vec2 c , float aux)\n{\n    vec2 q = mod(p,c)-0.5*c;\n    return line( q , vec2(0.05 + aux/3.,0), vec2(0.95 - aux/3.,0), 0.01 );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.6);\n    \n    // Geometry    \n    float rpL = opRep( uv, vec2(0.0, pow(1.-uv.y, 1.2)), uv.y );\n\n    float ll0 = line(uv, vec2(0.1, 0.0), vec2(0.40,1.), 0.005);\n    float ll1 = line(uv, vec2(0.9, 0.0), vec2(0.60,1.), 0.005);\n\n    float rl0 = line(uv, vec2(0.24, 0.0), vec2(0.24,1.), 0.005);\n    float rl1 = line(uv, vec2(0.76, 0.0), vec2(0.76,1.), 0.005);\n    \n    // Scene\n    if(ll0 <= 0. || ll1 <= 0. || rpL <=0.)\n        fragColor = vec4(col,1.0);\n    else\n        fragColor = vec4(vec3(0),1.0);\n    \n    // 2 lines\n    float yl0 = line(uv, vec2(0.25, 0.2), vec2(0.75,0.2), 0.01);\n    float yl1 = line(uv, vec2(0.25, 0.8), vec2(0.75,0.8), 0.01);\n    if(yl0 <= 0. || yl1 <= 0.)\n        fragColor = vec4(0.6,0.6, 0., 1.);\n    \n    // Vertical lines\n    if(int(iTime) % 10 < 3 && (rl0 <= 0. || rl1 <= 0.))\n        fragColor = vec4(0.6,0.0, 0., 1.);\n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}