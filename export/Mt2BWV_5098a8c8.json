{"ver":"0.1","info":{"id":"Mt2BWV","date":"1517275356","viewed":164,"name":"Mandelbrot & Julia set","username":"datanasov97","description":"Visualization for Mandelbrot & Julia sets of degree N ∈ ℝ\nToggle with Q and W respectively","likes":2,"published":1,"flags":16,"usePreview":0,"tags":["juliaset","visualisation","mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int maxIter     \t= 4900;\nint transitionPoint = 100;\nfloat logEscape \t= log(2.0);\nfloat zoom      \t= 1.0;\nvec2 zoomPoint  \t= vec2(-0.9266, -0.2623);\n\nvec3 colors[3] = vec3[](\n    vec3(0.0, 0.0, 0.0),\n    vec3(0.0, 0.0, 1.0),\n    vec3(1.0, 1.0, 0.0)\n);\n\nvec2 powc(vec2 base, float power) {\n  float r     = length(base);\n  float angle = atan(base.y, base.x) * power;\n\n  return pow(r, power) * vec2(cos(angle), sin(angle));\n}\n\nfloat JuliaSet(vec2 z, vec2 c, float power) {\n  float l     = length(z);\n  int i       = 0;\n    \n  // Mandelbrot only\n  // float x      = c.x - 1.0 / 4.0;\n  // float y      = c.y;\n  // float r      = 0.5;\n  // float value  = pow(x * x + y * y + r * x, 2.0) - (x * x + y * y) * r * r;\n  //\n  // if (value < 0.0 || length(c - vec2(-1.0, 0.0)) < 1.0 / 4.0)\n  //     return float(maxIter);\n    \n  for (i; i < maxIter; i++) {\n    z = powc(z, power) + c;\n    l = length(z);\n    // color += exp(-l);\n    if (l >= 2.0)\n      break;\n  }\n\n  return float(i);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n  bool qPressed = texelFetch(iChannel0, ivec2(81, 2), 0).x > 0.;\n  bool wPressed = texelFetch(iChannel0, ivec2(87, 2), 0).x > 0.;\n  bool ePressed = texelFetch(iChannel0, ivec2(69, 2), 0).x > 0.;\n\n  float boxSize = 20.0;\n  float boxOffset = 0.0;\n  \n  int zoomLevel = 0;\n  int i         = 0;\n  for (i; i < 10; i++) {\n    bool isPressed = texelFetch(iChannel0, ivec2(48 + i, 2), 0).x > 0.;\n\n\tfloat halfSize = boxSize / 2.0;\n\tvec2 boxCenter = vec2(boxSize * float(i) + boxOffset + halfSize, boxOffset + halfSize);\n\tvec2 relPos    = fragCoord.xy - boxCenter;\n\t\n\tfloat distance = max(abs(relPos.x), abs(relPos.y));\n\t\n\tif (abs(distance - halfSize) < 1.0) {\n\t\tfragColor.xyz = vec3(0.0, 0.0, 0.0);\n\t\treturn;\n\t} else if (distance < halfSize) {\n\t\tif (isPressed) {\n\t\t\tfragColor.xyz = vec3(0.0, 1.0, 0.0);\n\t\t} else {\n\t\t\tfragColor.xyz = vec3(1.0, 0.0, 0.0);\n\t\t}\n\t\treturn;\n\t}\n\t\n\tif (isPressed) {\n      zoomLevel |= (1 << i);\n    }\n  }\n\n  float minDimension     = min(iResolution.x, iResolution.y);\n  vec2 complexResolution = iResolution.xy / (2.0 * minDimension);\n\n  float zoomFactor = 0.1 + float(zoomLevel);\n\n  vec2 complexFragmentCoord = 2.0 * (fragCoord / minDimension - complexResolution) / zoomFactor + zoomPoint;\n\n  vec2 complexMousePos = 2.0 * (iMouse.xy / minDimension - complexResolution) / zoomFactor;\n\n  float power = 2.0;\n\n   if (qPressed)\n      fragColor.b = float(JuliaSet(complexFragmentCoord, complexMousePos, power) > 200.0f);\n  \n    if (wPressed) {\n        float n = JuliaSet(vec2(0, 0), complexFragmentCoord, power);\n        fragColor.g = float(n > 200.0);\n        //float colorProgress = mod(n, float(transitionPoint)) / float(transitionPoint);\n        \n        //int colorId = int(n / float(transitionPoint)) % colors.length();\n        //int nextColorId = (colorId + 1) % colors.length();\n        \n        //vec3 color = colors[colorId];\n        //vec3 nextColor = colors[nextColorId];\n        \n        //float ratio = n / float(maxIter);\n        \n        //vec3 mask = vec3(ratio, clamp(ratio, 0.0, 0.6) / 0.6, clamp(ratio, 0.0, 0.4) / 0.4);\n        //fragColor.rg = (colorProgress * nextColor + (1.0 - colorProgress) * color).rg;\n        //fragColor.a = 1.0;\n    }\n}","name":"Image","description":"","type":"image"}]}