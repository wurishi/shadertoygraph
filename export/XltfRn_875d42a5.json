{"ver":"0.1","info":{"id":"XltfRn","date":"1538430532","viewed":269,"name":"Dots For SFD in an SDF","username":"Tezza48","description":"Here you go :D","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","dots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0 * fragCoord - iResolution.xy)/iResolution.x;\n    \n    vec2 points[1080];\n    \n    float offset = 0.05;\n    float initial = 0.08;\n    \n    float i = 0.0;\n    \n    float speed = 500.0;\n    \n\tfor (int r = 0; r < 18; r++)\n\t{\n\t\tfor (int a = 0; a < 60; a++)\n\t\t{\n\t\t\tfloat x = sin(PI / 6.0 * float(a) * iTime * float(r + 1)  / speed);\n\t\t\tfloat y = cos(-PI / 6.0 * float(a) * iTime * float(r + 1) / speed);\n\t\t\tvec2 p = vec2(x * (offset * float(r) + initial), y * (offset * float(r) + initial));\n            i += smoothstep(0.005, 0.004, length(uv - p));\n\t\t}\n\t}\n    \n    // Output to screen\n    fragColor = vec4(i);\n}","name":"Image","description":"","type":"image"}]}