{"ver":"0.1","info":{"id":"XlXyRS","date":"1505215045","viewed":107,"name":"blackholes","username":"okalintu","description":"simple blackhole repeater using raymarching","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdf(vec3 eye, float depth, vec3 dir)\n{\n    vec3 v = eye + depth * dir;\n    v = mod(v,8.0)-0.5*8.0;\n    return length(v) - 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n    \n    vec3 dir = normalize(vec3(vec2(uv.x*16.0/9.0, uv.y),-1.0 / tan(radians(45.0))));\n    vec3 eye = vec3(0.0, 0.0, 5.0 - iTime);\n    float depth = 0.01;\n    float min_dist = 1000.0;\n    for (int i = 0; i < 30; i++) { \n        float dist = sdf(eye, depth, dir);\n        if (dist < 0.0001) {\n            fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\treturn;\n        }\n        min_dist = min(min_dist, dist);\n        depth += dist;\n        if (depth >= 100.0) {\n            break;\n        }\n    }\n    \n    fragColor = vec4(0.0, 1.0/pow(1.0+min_dist, 2.0), 1.0/pow(1.0+min_dist, 3.0), 1.0)*(0.5-0.2*sin(iTime*1.5+depth/25.0));\n}","name":"Image","description":"","type":"image"}]}