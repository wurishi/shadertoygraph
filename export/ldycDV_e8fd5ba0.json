{"ver":"0.1","info":{"id":"ldycDV","date":"1523373798","viewed":278,"name":"2D displace","username":"nicoptere","description":"2d example of displace and rudimentary lighting","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","normal","centraldifference"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float field( vec2 uv ){\n    return texture( iChannel0, uv ).r;\n}\nvec3 getNormal( vec2 uv ){\n    vec3 pix = vec3 (1./iResolution.xy, 0.);\n    return normalize(  vec3(\n        ( field( uv - pix.xz ) - field( uv + pix.xz ) ),\n        ( field( uv - pix.zy ) - field( uv + pix.zy ) ),\n        1.0\n    ) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \n    //normale par central difference\n    vec3 normal = getNormal( uv );\n    \n    \n    //distorsion image\n    vec2 distorsion = normal.xy * sin(iTime * .1 ) * 2.5;\n    \n    //WOBLOBLO\n    vec4 displacedTexture = texture( iChannel1, uv + distorsion );\n\n        \n        \n    //position d'une light\n    vec3 lightPosition = normalize( vec3( cos( iTime ) * 2., sin( iTime ) * 3., 1. ) );\n    //quantité de lumière\n    float lightAmount = max( 0., dot( lightPosition, normal ) );\n    \n    \n    // Output to screen\n    fragColor = displacedTexture * lightAmount;\n}","name":"Image","description":"","type":"image"}]}