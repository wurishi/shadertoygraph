{"ver":"0.1","info":{"id":"McdfRM","date":"1732964432","viewed":38,"name":"trying voronoi","username":"vanshika","description":"attempting to make a voronoi shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float N21(vec2 p){\n    p = fract(p*vec2(24.239, 839.327));\n    p += dot(p, p+64.54);\n    return fract(p.x*p.y);\n}\n\nvec2 N22(vec2 p){\n    float n = N21(p+36.26);\n    return vec2(n, N21(p+n));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    float t = iTime;\n    float minD = 100.;\n    vec2 cid = vec2(0.);\n\n    uv *= 7.;\n    vec2 gv = fract(uv)-.5; \n    vec2 id = floor(uv);    \n    //gv += .1/(length(gv)+tan(t*id*.3)); //funky\n    \n    for(float y=-1.; y<=1.; y++){\n        for(float x=-1.; x<=1.; x++){\n            vec2 offs = vec2(x, y);\n            vec2 n = N22(id+offs);\n            vec2 p = offs+sin(n*t)*.5;\n\n            float d = length(gv-p);\n            if(d<minD) {\n                minD = d;\n                cid = id+offs;\n            }\n        }\n    }  \n    col = vec3(minD);\n     \n    vec3 base = sin(t*vec3(0.222*cid.x, 0.555*cid.y, 0.888))*.5+.5;\n    col *= base;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}