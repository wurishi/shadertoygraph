{"ver":"0.1","info":{"id":"ssdXRB","date":"1633538681","viewed":194,"name":"step time","username":"gunzes","description":"cwiczonko","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["time"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    // int-float-int \n    /*\n    int ziomek = 1;\n    float ziomekFloat = float(ziomek);\n    int ziomekInt = int(ziomekFloat);\n    */\n    \n    //funkcje rysowania \nfloat drawDisc(vec2 coord,float radiusOut){\n    return step(length(coord),radiusOut);\n}\nfloat drawCircle(vec2 coord, float radiusOut, float radiusIn){\n    return drawDisc(coord,radiusOut) - drawDisc(coord,radiusIn);\n}\nfloat drawCircleSmooth(vec2 coord, float borderThickness, float radius, float color){\n\n    return (1.-smoothstep(0.,borderThickness,abs(radius-sqrt(dot(coord,coord)))))*color;\n}\n\n    //zmienne globalne\n\n\n\n    //main image\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates for y axis (from 0 to 1) + offset\n    vec2 uv = fragCoord/iResolution.y;\n    uv -= vec2(0.888888,0.5);\n    uv.x -= sin(iTime*.5)*.4;\n    uv.y -= sin(iTime)*.4;\n    //zmienne\n    \n    int stepNumberInt =15;\n    float col = .0;\n    float startRadius = 0.02;\n    float circleWidth = 0.02;\n    float stepSpeed = 5.;\n    float stepNumber = float(stepNumberInt);\n    float timeStep = 0.;\n    float czas     =  fract((iTime/stepNumber)*stepSpeed)*stepNumber;\n    float circleColor = 1.;\n    \n    //rysowanie kolek\n    for (int i=0; i<stepNumberInt; i++){\n        \n        if (czas>=timeStep){\n            col += drawCircleSmooth(uv,circleWidth,startRadius,circleColor);\n            startRadius += (1./stepNumber) *.5;\n            //startRadius *=  1.5;\n            timeStep+=1.;\n            circleWidth += (1./stepNumber)*0.02;\n            circleColor -= (1./stepNumber)*1.;\n            uv.x += sin(iTime*.5)*.4*(1./stepNumber);\n            uv.y += sin(iTime)*.4*(1./stepNumber);\n            uv.x += sin(iTime*.5)*(1./stepNumber)*.8;\n\n        }\n        //uv.x += cos(iTime*.5)*(1./stepNumber);\n        \n    }\n    col = pow(col,2.9);\n    col = clamp(col,0.,1.);\n    //output\n    fragColor = vec4(col,col,0.,1.);\n}","name":"Image","description":"","type":"image"}]}