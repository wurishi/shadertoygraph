{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Created by vincent francois - cyanux/2014\n// Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License (CC BY-NC-ND 3.0)\n//\n// NanoTek\n//\n// Repetition operator from iq website\n\n// Varying this value!\n#define D 8.0 // distance to electronic field\n// Varying this value between 0.0 and 0.5\n#define DOT_CORRECTION 0.01\n\n// Following is a dirty code\n\n#define T iTime\n\n\nvec3 rX(vec3 v, float t) {\n\tfloat COS = cos(t);\n\tfloat SIN = sin(t);\n\treturn vec3(v.x,SIN*v.z+COS*v.y,COS*v.z-SIN*v.y);\n}\nvec3 rY(const vec3 v, const float t) {\n\tfloat COS = cos(t);\n\tfloat SIN = sin(t);\n\treturn vec3(COS*v.x-SIN*v.z, v.y, SIN*v.x+COS*v.z);\n}\nfloat sdHPI(vec3 p, vec3 r) {\n\treturn\n\t\tmax(abs(p.x) - r.x, 0.0) - 0.5 * r.x +\n\t\tmax(abs(p.y) - r.y, 0.0) - 0.5 * r.y;\n}\nfloat sdNoComment( vec3 p, vec3 h ) {\n    float COS = cos(T);\n    float SIN = sin(T);\n\treturn\n\t\tmax(abs(abs(p.x) - h.x), (SIN + 1.0) * 0.1) *\n\t\tmax(abs(abs(p.y) - h.y), (SIN + 1.0) * 0.1) *\n\t\tmax(abs(abs(p.z) - h.z), (SIN + 1.0) * 0.1);\n}\nfloat sdRhombi(vec3 p, vec3 r) {\n\treturn\n\t\tmax(abs(p.x) - r.x, 0.0) - 0.5 * r.x +\n\t\tmax(abs(p.y) - r.y, 0.0) - 0.5 * r.y +\n\t\tmax(abs(p.z) - r.z, 0.0) - 0.5 * r.z;\n}\n\nfloat scene(vec3 p, out vec4 fragColor) {\n\tfloat d1 = sdRhombi(mod(p, vec3(2.0)) - 0.5 * vec3(2.0), vec3(0.1, 0.1, 0.1));\n\tfloat d2 = sdNoComment(p, vec3(0.1, 0.1, 0.1));\n\t//float d3 = sdHPI(p + vec3(0.0 ,0.0, 0.0), vec3(0.1, 0.1, 0.1));\n\tfloat d3 = sdHPI(mod(p, vec3(4.0)) - 0.5 * vec3(4.0), vec3(0.1, 0.1, 0.1));\n\tfloat d4 = sdHPI(mod(rY(p - vec3(1.0), 1.57), vec3(4.0)) - 0.5 * vec3(4.0), vec3(0.1, 0.1, 0.1));\n\t\n\td1 = min(min(min(d1, d2), d3), d4);\n\n\tif(d1 == d2) {\n\t\tfragColor = vec4(abs(cos(T)), 1.0, abs(sin(T)), 0.0);\n\t\treturn d2;\n\t}\n\tfragColor = vec4(1.0);\n\treturn d1;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float iMouseY = 4.0 * (iMouse.y / iResolution.y - 0.5);\n\tvec2 ar = vec2(iResolution.x/iResolution.y, 1.0);\n\tvec2 uv = ar * (fragCoord.xy / iResolution.xy - 0.5);\n\tvec3 ro = -rY(rX(vec3(0.0, 0.0, D) , iMouseY), T);\n\tvec3 rd = rY(rX(vec3(uv, 1.0), iMouseY), T);\n\t\n\tvec3 gradient;\n\tfloat d;\n\t\n\tfor(float n = 0.0; n < 32.0; n++) {\n\t\td = scene(ro,fragColor);\n\t\tif(d < 0.001) {\n            break;\n            vec4 tmp;\n\t\t\tgradient.x = scene(ro + vec3(0.001, 0.0,   0.0),tmp);\n\t\t\tgradient.y = scene(ro + vec3(0.0,   0.001, 0.0),tmp);\n\t\t\tgradient.z = scene(ro + vec3(0.0,   0.0,   0.001),tmp);\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t\tro += rd * d * 0.5;\n\t}\n\t\t\n\tvec3 lp = vec3(0.0, 0.0, 1.0);\n\t//float ld = DOT_CORRECTION + 0.5 * abs(dot(normalize(gradient), lp));\n\tfloat ld = 1.0 - max(dot(normalize(gradient - d), lp), 0.0);\n\n\tif(d < 0.0 ) ld = 0.0;\n\t\n\tif(length(ro) > 16.0)\n\t{\n\t\tfragColor = vec4(0.0);\n\t\treturn;\n\t}\n\t\n    float SIN = sin(T);\n\tfragColor *= 0.1 * vec4(ld) * (-abs(SIN * 8.0) +  16.0) /  length(lp - ro);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldsXD7","date":"1402785681","viewed":234,"name":"NanoTek2","username":"cyanux","description":"Nanotechnology (sometimes shortened to \"nanotech\") is the manipulation of matter on an atomic, molecular, and supramolecular scale. In center, you see an electronic field! [Mouse enabled]","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""}}