{"ver":"0.1","info":{"id":"WdKfR1","date":"1606586720","viewed":175,"name":" foob  (cookie live stream)","username":"dok","description":"Shader coded for the Cookie Collective live coding stream, on 27/11/2020\n\nI'had no idea of what I was doing, only smashing my keyboard.\n\nhttps://cookie.paris/\nhttps://www.twitch.tv/cookiedemoparty","likes":2,"published":1,"flags":4,"usePreview":0,"tags":["noob","cookie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* shadertoy glue */\n#define fGlobalTime iTime\n#define texFFTIntegrated iChannel0\n#define texFFTSmoothed iChannel0\nfloat vol = 0.1;\n\n/* source */\n\nfloat foo(vec2 uv, float s)\n{\n        return sin(uv.y + uv.x + s * fGlobalTime);\n}\n#define PI2 (2.0*3.1416)\nmat2 rot2(float a) {return mat2(cos(a), -sin(a), sin(a), cos(a));}\n\nvoid mainImage( out vec4 out_color, in vec2 coord )\n{\n        vec2 uv = (coord.xy - 0.5 * iResolution.xy) / iResolution.y;\n        vec3 col;\n        vec2 pv = uv;\n        pv.x += 1.5 * sin(fGlobalTime / 10.0);\n        pv.y += 1.5 * cos(fGlobalTime / 10.0);\n        pv = vec2(length(pv), atan(pv.x,pv.x)/PI2);\n        uv.x += tan(uv.y * 1.5);\n        uv *= mix(0.5, 2.0, 0.5 + 0.5 * sin(fGlobalTime / 10.0));\n        uv *= rot2(fGlobalTime / 10.0);\n        int m = int(mix(2.0, 10.0, 0.5 + 0.5 * (texture(texFFTIntegrated, vec2(0.02)).r * 10.0 * vol)));\n\n        col.r = foo(vec2(fract(uv.y * float(m)), uv.x), 1.0);\n        col.r += foo(vec2(fract(uv.x * 120.0), 5.0 * uv.x + 5.0 * sin(fGlobalTime / 10.0)), 0.5);\n        col.r = step(0.5 , fract(col.r));\n\n        col.r += step(0.5 , fract(foo(vec2(fract(pv.x * 120.0), 5.0 * pv.x + 5.0 * sin(fGlobalTime / 10.0)), 0.5)));\n        if ((texture(texFFTSmoothed, vec2(0.02,0.02)).r * 20.0 * vol) > 0.5)\n                col.r = 1.0 - col.r;\n        col.rgb = col.rrr * smoothstep(0.0, 1.0, (texture(texFFTSmoothed, vec2(0.1,0.1)).r * 200.0 * vol + 0.75));\n        out_color = vec4(col, 1);\n}\n","name":"Image","description":"","type":"image"}]}