{"ver":"0.1","info":{"id":"3dc3W8","date":"1568294658","viewed":221,"name":"Dither_test","username":"nulsson","description":"Dither comparison:\nFrom bottom:\n1. Reference and quantized reference. \n2. Blue noise uniform\n3. Blue noise triangular\n4. White noise uniform\n5. White noise triangular","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float regions = 16.0;\n\nvec4 quantize(vec4 col) {\n\treturn vec4(round(col.xyz * regions) / regions, col.a);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    ivec2 pixel = ivec2(fragCoord);\n    float dither_amp = 1.0 / (regions - 1.0);\n    \n    //draw borders\n    if (pixel.y % int(iResolution.y * 0.20) == 0) {\n    \tfragColor = vec4(1.0, 0.0, 0.0, 1.0);\n        return;\n    }\n    \n    // undithered color\n    float l = uv.x;\n    vec3 col = vec3(l,l,l);\n    vec3 noise = vec3(0.0);\n   \t\n    if (uv.y < 0.2) {\n        // ...\n    } else if (uv.y < 0.4) {\n        // Uniform blue noise\n        vec2 noise_uv = uv * (iResolution / iChannelResolution[0]).xy;\n        noise = vec3(2.0 * (0.5 - texture(iChannel0, noise_uv).x));\n    } else if (uv.y < 0.6) {\n        // Triangular from uniform blue noise\n        vec2 noise_uv = uv * (iResolution / iChannelResolution[0]).xy;\n        vec2 no = texture(iChannel0, noise_uv).xy;\n        // I guess the blue noise properties are messed up by adding the channels, but it\n\t\t// will have to do for now.\n        noise = vec3(1.0 - no.x - no.y);\n    } else if (uv.y < 0.8) {\n        // Uniform White noise\n        vec2 noise_uv = uv * (iResolution / iChannelResolution[1]).xy;\n        noise = vec3(2.0 * (0.5 - texture(iChannel1, noise_uv).x));\n    } else {\n        // Triangular white noise\n        vec2 noise_uv = uv * (iResolution / iChannelResolution[1]).xy;\n        vec2 no = texture(iChannel1, noise_uv).xy;\n        noise = vec3(1.0 - no.x - no.y);\n    }\n    \n    vec4 res = vec4(col + noise * dither_amp,1.0);\n    fragColor = uv.y < 0.1 ? res : quantize(res);\n}\n\n","name":"Image","description":"","type":"image"}]}