{"ver":"0.1","info":{"id":"wd2GWm","date":"1549069768","viewed":136,"name":"Dangling Chain","username":"cbrpnk","description":"everyday","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarchingmetal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float torus(vec3 p, float r, float w)\n{\n    return sqrt(pow(length(p.xz)-r, 2.) + pow(p.y, 2.)) - w;\n}\n\nfloat cap(vec3 p, float l, float r)\n{\n    return length(vec3(0., p.y, 0.)-vec3(p.x, clamp(p.y, -l, l), p.z)) - r;\n}\n\nvec2 rotate(vec2 p, float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, -s, c) * p;\n}\n\nfloat chain(vec3 p) {\n    p = p.yxz;\n    p.x = mod(p.x+.9, 9.)-9.;\n    float t = torus(p, 3., 1.);\n    float t3 = torus(vec3(p.x+9., p.y, p.z), 3., 1.);\n    p.x += 4.5;\n    float t2 = torus(p.yzx, 3., 1.);\n    float c = cap(p, 5., 1.);\n    \n    float d = min(t, t2);\n    d = min(d, t3);\n    \n    return d;\n}\n\nfloat map(vec3 p)\n{\n    \n    p.xy = rotate(p.xy, dot(p.xz, vec2(-.5, -0.))*.01);\n    p.yx = rotate(p.yx, sin(iTime));\n    p.zx = rotate(p.zx, sin(iTime));\n    p.x += 3.*sin(iTime);\n\n    return chain(p);\n}\n\nvec2 march(vec3 ro, vec3 rd)\n{\n    \n    float td = 0.;\n    int i;\n    for(i=0; i<128; ++i) {\n    \tfloat d = map(ro+rd*td);\n        if(d < .001) break;\n        if(d > 200.) return vec2(-1.);\n        td += d*.5;\n    }\n    return vec2(td, i);\n}\n\nvec3 getNormal(vec3 p)\n{\n    return normalize(vec3(\n    \tmap(p-vec3(0.0001, 0., 0.)) - map(p+vec3(0.0001, 0., 0.)),\n        map(p-vec3(0., 0.0001, 0.)) - map(p+vec3(0., 0.0001, 0.)),\n        map(p-vec3(0., 0., 0.0001)) - map(p+vec3(0., 0., 0.0001))\n    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - vec2(.5);\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 eye = vec3(0., 0., 70.);\n    vec3 lookat = normalize(vec3(uv.x, uv.y, -1));\n    //eye.xz = rotate(eye.xz, iTime*.2);\n    \n    vec2 res = march(eye, lookat);\n    vec3 col;\n    \n    if(res.x > 0.) {\n    \tvec3 normal = getNormal(eye + res.x*lookat);\n    \tcol = vec3(.7, .6, .5) * clamp(dot(normal, vec3(1. ,1., 0.5)), 0., 1.);\n        col *= 30.*vec3(pow(res.y/200., 2.));\n        col += .8*pow(clamp(dot(normal, vec3(-1., 0., -1.)), 0., 1.), 300.);\n        col = pow(col, vec3(.9));\n    } else {\n    \tcol = vec3(.04) * pow(clamp(dot(lookat, vec3(0., 0., -1)), 0., 1.), 5.);\n    }\n\t\n    \n    col = sqrt(col);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}