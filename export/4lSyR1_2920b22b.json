{"ver":"0.1","info":{"id":"4lSyR1","date":"1507318318","viewed":105,"name":"Mandelbrot thingy","username":"FTPlus","description":"Just a little but of mucking around with the Mandelbrot fractal.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["2d","fractal","mandelbrot","filter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2[34] points = vec2[](\nvec2(0.123, 0.128),\nvec2(0.325, 0.133),\nvec2(0.516, 0.131),\nvec2(0.725, 0.128),\nvec2(0.903, 0.130),\nvec2(0.215, 0.271),\nvec2(0.408, 0.275),\nvec2(0.610, 0.251),\nvec2(0.803, 0.270),\nvec2(0.076, 0.435),\nvec2(0.280, 0.433),\nvec2(0.491, 0.416),\nvec2(0.683, 0.411),\nvec2(0.893, 0.401),\nvec2(0.163, 0.595),\nvec2(0.381, 0.583),\nvec2(0.586, 0.581),\nvec2(0.785, 0.565),\nvec2(0.938, 0.581),\nvec2(0.068, 0.765),\nvec2(0.251, 0.733),\nvec2(0.481, 0.733),\nvec2(0.660, 0.716),\nvec2(0.833, 0.706),\nvec2(0.151, 0.865),\nvec2(0.351, 0.856),\nvec2(0.543, 0.846),\nvec2(0.726, 0.833),\nvec2(0.938, 0.816),\nvec2(0.026, 0.970),\nvec2(0.233, 0.960),\nvec2(0.450, 0.956),\nvec2(0.625, 0.940),\nvec2(0.831, 0.923)\n);\n\nvoid mainImage(out vec4 color, in vec2 coord)\n{\n    vec2 uv = (coord.xy / iResolution.xy);\n    \n    for (int i = 0; i < 34; ++i)\n    {\n        vec2 p = points[i];\n        p.y = 1.0 - p.y; // For my sanity\n        float d = 1.0 - distance(uv, p);\n        color = max(color, texture(iChannel0, p) * pow(d, 15.0));\n    }\n    \n    float a = iTime;\n    vec2 offset = mat2(cos(a), sin(a), -sin(a), cos(a)) * vec2(.05, .1);\n    for (int i = 0; i < 34; ++i)\n    {\n        vec2 p = points[i] - offset;\n        p.y = 1.0 - p.y;\n        float d = 1.0 - distance(uv, p);\n        color = max(color, texture(iChannel0, p) * pow(d, 15.0));\n    }\n    vec4 c = texture(iChannel0, uv);\n    color *= (c.r + c.g + c.b) / 3.0;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int calculate(in vec2 c, in int m)\n{\n    float x = .0, y = .0;\n\twhile (x * x + y * y < 4.0 && --m > 0)\n\t{\n\t\tfloat z = x * x - y * y + c.x;\n\t\ty = 2.0 * x * y + c.y;\n\t\tx = z;\n\t}\n    return m;\n}\n\nvoid mainImage(out vec4 color, in vec2 coord)\n{\n    coord.xy /= iChannelResolution[0].x;\n    coord.x -= 0.5;\n    coord.y -= 0.5 / iChannelResolution[0].x * iChannelResolution[0].y;\n    coord.y *= -1.0; // For my sanity\n    float x = 0.001643721971153;\n    float y = -0.822467633298876;\n    float f = 3.333333 * pow(0.9, (1.0 - cos(iTime / 5.0)) * 60.0);\n    float a = 0.0 - 0.1 * iTime * 10.0;\n    \n    vec2 c;\n    c.x = x + f * (coord.x * cos(a) + coord.y * sin(a));\n    c.y = y + f * (coord.y * cos(a) - coord.x * sin(a));\n    \n    int h = 360 - calculate(c, 69) * 5;\n    float v = float(h % 60) / 60.0;\n    if (  0 <= h && h <  60) color = vec4(1.0, v, 0.0, 1.0); else\n    if ( 60 <= h && h < 120) color = vec4(1.0 - v, 1.0, 0.0, 1.0); else\n    if (120 <= h && h < 180) color = vec4(0.0, 1.0, v, 1.0); else\n    if (180 <= h && h < 240) color = vec4(0.0, 1.0 - v, 1.0, 1.0); else\n    if (240 <= h && h < 300) color = vec4(v, 0.0, 1.0, 1.0); else\n    if (240 <= h && h < 300) color = vec4(1.0, 0.0, 1.0 - v, 1.0);\n    color.r = 1.0 - color.r;\n    color.g = 1.0 - color.g;\n    color.b = 1.0 - color.b;\n}","name":"Buf A","description":"","type":"buffer"}]}