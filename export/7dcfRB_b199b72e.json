{"ver":"0.1","info":{"id":"7dcfRB","date":"1656686913","viewed":357,"name":"Backbuffer example","username":"ninofiliu","description":"I didn't find anywhere a satisfying previous frame (aka backbuffer) hello world so I wrote that!","likes":10,"published":3,"flags":32,"usePreview":0,"tags":["example","helloworld","demo","frame","backbuffer","previousframe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This just paints whatever is in BufferA\nvoid mainImage(out vec4 color, in vec2 coord) {\n    vec2 uv = coord / iResolution.xy;\n    color = texture(iChannel0, uv);    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// This shader can read and write to iChannel0 that is set to BufferA\n// That allows to draw something, and to read it on the next frame\nvoid mainImage(out vec4 color, in vec2 coord) {\n\n    // On the previous frame, read 4 pixels around the pixels to be painted,\n    // then average and dim them, creating a disappearing blur effect\n    vec2 uv = coord / iResolution.xy;\n    float diff = 0.005;\n    float dim = 0.999;\n    color = dim * (\n        texture(iChannel0, vec2(uv.x-diff, uv.y-diff))+\n        texture(iChannel0, vec2(uv.x-diff, uv.y+diff))+\n        texture(iChannel0, vec2(uv.x+diff, uv.y-diff))+\n        texture(iChannel0, vec2(uv.x+diff, uv.y+diff))\n    )/4.;\n    \n    // Draws a circle around a rotating point\n    if (distance(uv, 0.5 + 0.2*vec2(cos(iTime), sin(iTime))) < 0.01) {\n        color.rgb += 1.;\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}