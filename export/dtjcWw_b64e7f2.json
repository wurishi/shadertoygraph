{"ver":"0.1","info":{"id":"dtjcWw","date":"1691865162","viewed":42,"name":"mandel_330 vortmax 168 rainbow","username":"vortmax","description":"mandelbrot set","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"DtjyDm","parentname":"mandelbrot_3301"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    const int MAX_ITERATIONS = 44;\n    const vec3 colorMask[7] = vec3[](\n        vec3(1., .27, .24),  //red\n        vec3(1., .65, .14),  //orange\n        vec3(1., .96, .18),  //yellow\n        vec3(.43, 1., .31),  //green\n        vec3(.27, .71, 1.),  //light blue\n        vec3(.39, .4, 1.),   //blue\n        vec3(.61, .33, 1.)   //violet\n    );\n\n    vec2 m = iMouse.xy / iResolution.xy;\n    float zoom = pow(10., -7. * m.x);\n    vec2 uv = (fragCoord.xy - .5 * iResolution.xy) / iResolution.y;\n    \n    \n    vec2 beg = uv * zoom * 3.;\n    vec2 cur = vec2(0.);\n    float colorIntensity = 1.;\n    \n    beg += vec2(-.7, .38);\n    \n    for(int i = 0; i < MAX_ITERATIONS; ++i)\n    {\n        cur = vec2(cur.x * cur.x - cur.y * cur.y, 2. * cur.x * cur.y) + beg;\n        \n        if(length(cur) > 2.)\n        {\n            colorIntensity = float(i) / float(MAX_ITERATIONS);\n            colorIntensity = pow(colorIntensity, .5);\n            \n\n            vec3 finalColor = colorMask[i % 7] * vec3(colorIntensity);\n            fragColor = vec4(finalColor, 1.);\n\n            \n            break;\n        }\n    }\n    \n}","name":"Image","description":"","type":"image"}]}