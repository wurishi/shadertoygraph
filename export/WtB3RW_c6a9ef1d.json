{"ver":"0.1","info":{"id":"WtB3RW","date":"1558598362","viewed":153,"name":"Spherical deformed pattern","username":"jblanper","description":"2d pattern of moving squares deformed by a sphere.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","abstract","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 p, float a) {\n  return p * mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord.xy - .5 * iResolution.xy) / iResolution.y;\n\n  vec2 gv = fract(abs(uv) * length(uv) * 5.) - .5;\n  vec2 id = floor((abs(uv) - length(uv * sin(uv.y - iTime * .04) * 2.)) * 4.);\n  float t = ((mod(id.y, 2.) == 0.) ? -5. : 2.) * iTime * .05;\n\n  gv = rotate(dot(gv, gv) + (gv + sin(t * .02) * .5 + .5) * ((gv.y * gv.x) + cos(t * .2) * .5 + .5), t);\n  gv.y += sin(t * .5);\n\n  vec3 color = vec3(0.);\n\n  float m = smoothstep(.34, .32, max(abs(gv.x), abs(gv.y))) +\n    (smoothstep(.5, 0., length(gv))*1.1);\n\n  float squares = cos(max(abs(gv.x), abs(gv.y)) * (28. * (sin(iTime * .02) * .4 + 1.))) - uv.x;\n  float diamonds = cos(max(abs(gv.x+gv.y), abs(gv.y-gv.x)) * 28. - (iTime * .02)) - uv.y;\n\n  color += smoothstep(.1, .9, diamonds) * vec3(uv.y + .5);// *  2.;\n  color += mix(vec3(.2), vec3(.5), cos(length(uv)*5.*cos(gv.y) - iTime * .02)) * (uv.x + .5) * .2;\n\n  color += mix(color, vec3(.2, .3, .9), smoothstep(.05, .8, squares));\n  color *= mix(color, vec3(.8, .4, .2), smoothstep(.05, .8, diamonds-m));\n\n  color += smoothstep(.1, .2, squares) * vec3(.3, .2, .8);\n\n  // filter\n  color *= smoothstep(1.1, .1, length(uv))*2.;\n  color -= smoothstep(.8, .5, 1. - length(id * abs(uv)));\n\n  fragColor = vec4(color, 1.);\n}\n","name":"Image","description":"","type":"image"}]}