{"ver":"0.1","info":{"id":"4d3GD2","date":"1452116668","viewed":298,"name":"Julia Fractal (mouse transform)","username":"Tetane","description":"Simple Julia fractal with c function of the position of the mouse.\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define PI 3.14159265\n#define IT 500.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n\tfloat mx = max(iResolution.x, iResolution.y);\n\tvec2 scrs = iResolution.xy/mx;\n\tvec2 uv = vec2(fragCoord.x, iResolution.y-fragCoord.y)/mx;\n\tvec2 m = vec2(iMouse.x/mx,scrs.y-iMouse.y/mx);\n    \n\t//Julia set (same as Mandelbrot set but the value of c is different):\n    //\n\t//{z0 = 0\n\t//{z = zÂ²+c\n\t//\n\t// z = zÂ²+c\n\t// z = (a+bi)Â²+c\n\t// z = (a+bi)*(a+bi)+c\n\t// z = aÂ²+2abi-bÂ²+c\n\t// z = (aÂ²-bÂ²) + (2ab)i + c\n    \n    if(iMouse.xy == vec2(0.0)){ // like if the mouse is in the middle of the screen at the beginning\n        m = scrs/2.0;\n    }\n    \n\tvec2 z = uv;\n\tz-=scrs/2.0; // Place the fractal at the center of the screen\n\tfloat scalefactor = 1.0/4.1;\n    z/= scalefactor;\n\tvec2 c = vec2(pow((m.x-scrs.x/2.0)*3.0,3.0),pow((m.y-scrs.y/2.0)*4.0,3.0)); // c is function of the x and y position of the mouse\n\n\t\n\tfor (float i = 0.0; i < IT; i++)\n\t{\n\t\t\n\t\tz = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;\n\t\t\n\t\tfragColor = vec4(1.0-vec3(50.0/i,11.0/i,3.0/i),1.0);\n\t\t\n\t\tif (dot(z, z) > 4.0) // if out of the radius\n\t\t{\n\t\t\tbreak; // Stop the loop\n        }\n\t}\n}","name":"","description":"","type":"image"}]}