{"ver":"0.1","info":{"id":"tdsBDB","date":"1589126581","viewed":438,"name":"psychedelic fractal","username":"unnick","description":"while i was making the [url=https://www.shadertoy.com/view/3dfBWj]laser show[/url] shader, i made this sort-of fractal that uses the same algorithm but i use it with broken inputs.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define res iResolution.xy\n#define tau 6.283\n#define eps .01\n\nfloat sdf(vec2 p) {\n    float dist = length(p) - .5;\n    dist = min(dist, p.y + 1.);\n    dist = min(dist, 1. - p.y);\n    dist = min(dist, p.x + res.x/res.y);\n    dist = min(dist, res.x/res.y - p.x);\n    return dist;\n}\n\nvoid mainImage(out vec4 col, in vec2 coord) {\n    vec2 pos = (coord * 2. - res) / res.y;\n    for(int i = 0; i < 32; i++) {\n        float dist = sdf(pos)*2.;\n        if(abs(dist) < .01) break;\n        pos += dist * vec2(sin((vec2((i+1)*(i+1))*iTime*.001 + vec2(0,.25)) * tau));\n    }\n    col = vec4(normalize(pos) * .5 + .5, 0, 1);\n}\n","name":"Image","description":"","type":"image"}]}