{"ver":"0.1","info":{"id":"NttGRB","date":"1636296704","viewed":164,"name":"superstarfield","username":"origo_","description":"stars","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 RotZ(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(137.337, 13333.37));\n    p += dot(p, p+45.138);\n    return fract(p.x*p.y);\n}\n\nfloat ray(vec2 uv) {\n    return max(0.0, 1.0-abs(uv.x*uv.y*5000.0));\n}\n\nvec3 star(vec2 uv, vec2 id) {\n    float n = Hash21(id)/3.0;\n    uv -= vec2(n, fract(n*33.3))-.5 ;\n    float d = length(uv);\n    float size = (1.0+sin((n*iTime)/5.0));\n    float m = .001/d * size;\n\n    for(int i=0; i < 3; i++) {\n        uv *= RotZ(0.33*iTime+float(i)+id.x*id.y);\n        float f = (1.0+sin(iTime+id.x*id.y+float(i)/4.0))/2.0;\n        f = smoothstep(0.59, 0.05, f);\n        m += ray(uv)*f*0.3;\n    }\n  //  m = 1.0-smoothstep(0.5, 0.1, m);\n    \n    vec3 color = sin(vec3(.2, .3, .9)*fract(n*1337.37)*333.7)*.5+.5;\n    float glow = 0.33+sin(id.x*id.y*313.37+6.0*iTime/4.0)/2.0;\n    glow = smoothstep(0.9, 0.1, glow)*0.1;\n    color = color*vec3(0.7,.4,1.+size) +\n        (glow*vec3(1.0));\n    return color*m;\n//    return vec3(m)*fract(n*1772.0);//+vec3(id*0.1, 0.0);\n}\n\n\nvec3 starLayer(vec2 uv) {\n    vec3 col = vec3(0);\n\n    vec2 gv = fract(uv)-0.5;\n    vec2 id = floor(uv);\n    for(int y=-1; y <= 1; y++) {\n        for(int x=-1; x <= 1; x++) {\n            vec2 offs = vec2(float(x), float(y));\n            col += star(gv-offs, id+offs);\n        }\n    }\n    return col;\n}\n\n#define NUM_LAYERS 5.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    uv*=34.0;\n    \n    uv.x += sin(iTime/4.0)-cos(iTime/3.0)*2.0;\n    uv.y += cos(iTime/4.0)-sin(iTime/3.0)*2.0;\n\n    uv *= RotZ(-iTime*0.1);\n\n    vec3 col = vec3(0);\n    float t = cos(iTime*0.1);\n    \n    for(float i=0.0; i < 1.0; i+=1./NUM_LAYERS) {\n        uv *= RotZ(i*8.0);\n        float depth = fract(i+t);\n        float scale = mix(0.5, 0.01, depth);\n        float fade = pow(depth, 2.1)+0.1;\n        col += starLayer(uv*scale+i*1.37)*fade;\n        //uv *= i;\n    }\n\n//    col.rg += id*0.1;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}