{"ver":"0.1","info":{"id":"4scyDN","date":"1518813882","viewed":859,"name":"MIPmap of noise textures","username":"FabriceNeyret2","description":"I don't know how were created shadertoy noise textures, but there are strange structures in their low frequencies.\n\nLeft to right:  B&W noise texture, then R,G,B,A channels of color noise. (indeed, ga are offset of rb).\nBottom to top: MIPmap levels.","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["noise","texture","lod","mipmap","shadertoy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    vec2  R = iResolution.xy;\n    float t = mod(iTime+4.,11.),\n          v =  R.y < 256. ? 3. : R.y < 512. ? 2.: 1., // 1st LOD at bottom\n          w = 256./exp2(v), wt,    // tiles\n          r = floor(U.y/w);        // row id\n    v += r;                        // MIPmap level\n    wt = w / exp2(r);              // MIPmap level texture size\n    int i = int(U.x/w) - 1;        // column id\n\n    O -= O;\n    \n\n//#define T(ch) texelFetch( ch, ivec2(mod(U,wt)), int(v) )\n  #define T(ch) textureLod( ch, U/wt, v )  // same, but allows fractional LOD\n    \n    O = vec4(   i > 3 ? textureLod(iChannel0, U/256.*4., v = U.y/w < 3. ? 2. : min(t,11.-t) ) [0]\n              : i < 0 ? T(iChannel1).x\n              :         T(iChannel0) [i%4] );\n    \n    O = .5 + ( O - .5 ) * exp2(v); // contrast restoration\n    \n    if (i<4) {\n        U += .5;\n        if (mod(U.y,w)==0.) O = vec4(1,0,0,0);\n        if (mod(U.x,w)==0.) O = vec4(1,0,0,0);\n    }\n}","name":"Image","description":"","type":"image"}]}