{"ver":"0.1","info":{"id":"ddVcWV","date":"1696647381","viewed":61,"name":"Random Pipes 2","username":"bailesdtd","description":"This took way longer than it should've to get working. But that's learning I guess :)","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","pipes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot90(v)  vec2(v.y,-v.x)\n//https://www.shadertoy.com/view/WttXWX -- FabriceNeyret2\n#define hashi(x)   lowbias32(x)\n#define hash(x)  ( float( hashi(x) ) / float( 0xffffffffU ) )\n//bias: 0.17353355999581582 ( very probably the best of its kind )\nuint lowbias32(uint x) {\n    x ^= x >> 16;\n    x *= 0x7feb352dU;\n    x ^= x >> 15;\n    x *= 0x846ca68bU;\n    x ^= x >> 16;\n    return x; }\n\nconst float r = 0.7;\nconst float s = 0.1;\nconst float n = 5.0;\n    \nfloat lSDF(vec2 p){\n    vec2  d = max(-1.-p,r+p);\n    float b = length(max(d,0.))+min(max(d.x,d.y),0.);\n    return max((r*.5)-b,b-(1.5*r)); }\n    \nfloat tSDF(vec2 p) {\n    p.y = -abs(p.y);\n    return lSDF(p); }\n    \nfloat strSDF(vec2 p) {\n    return abs(p.y)-r*.5; }\n\nfloat endSDF(vec2 p) {\n    return length(p-vec2(max(p.x,0.),0))-r*.5; }\n \nfloat xSDF(vec2 p) {\n    vec2 d = max(abs(p)-1.,r-abs(p));\n    return max(-1.,length(max(d,0.))+min(max(d.x,d.y),0.)-r*.5); }\n\nfloat S(vec2 k) {\n    ivec2 i = ivec2(floor(vec2(k.x+k.y, k.y-k.x)));\n    return hash(uint(i.x)+hashi(uint(i.y)))<.5?1.:0.; }\n    \nfloat pipes(vec2 uv) {\n    vec2 i = round(uv*n),\n         f = fract(uv*n-.5)*2.-1.,\n         f90 = vec2(f.y,-f.x);\n    vec4 v = vec4(S(i+vec2(.1,0)),\n                  S(i+vec2(-.1,0)),\n                  S(i+vec2(0,.1)),\n                  S(i+vec2(0,-.1)));\n    float c = v==vec4(1,1,1,1)?xSDF      (-f90):\n              v==vec4(1,1,0,0)?strSDF    ( f):\n              v==vec4(0,0,1,1)?strSDF    ( f90):\n              v==vec4(0,1,0,1)?lSDF      ( f):\n              v==vec4(1,0,0,1)?lSDF      ( f90):\n              v==vec4(1,0,1,0)?lSDF      (-f): \n              v==vec4(0,1,1,0)?lSDF      (-f90):\n              v==vec4(0,1,1,1)?tSDF      ( f):\n              v==vec4(1,1,0,1)?tSDF      ( f90):\n              v==vec4(1,0,1,1)?tSDF      (-f):\n              v==vec4(1,1,1,0)?tSDF      (-f90):\n              v==vec4(1,0,0,0)?endSDF    ( f):\n              v==vec4(0,0,1,0)?endSDF    ( f90):\n              v==vec4(0,1,0,0)?endSDF    (-f):\n              v==vec4(0,0,0,1)?endSDF    (-f90):1.;  \n    //return c;\n    return abs(c)-s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y+iTime*0.2;\n    float c = pipes(uv);\n    \n    vec3 col = mix(vec3(0),vec3(1),smoothstep(0., fwidth(c), c));\n    //vec3 col = vec3(pipes(uv));\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}