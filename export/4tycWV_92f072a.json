{"ver":"0.1","info":{"id":"4tycWV","date":"1537865515","viewed":313,"name":"Cellar","username":"dila","description":"I spent a while tweaking this. I still think it's a bit dark but I wanted to experiment with shadows.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x) {\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat box(vec3 p) {\n\tvec3 q = abs(p);\n   \tfloat d = max(q.x, max(q.y, q.z)) - 1.0;\n    d = max(d, 0.8 - max(q.y, q.z));\n    d = max(d, 0.9 - max(q.x, q.z));\n    d = max(d, 0.95 - max(q.x, q.y));\n    return d;\n}\n\nfloat mapmat = 0.0;\n\nfloat map(vec3 p) {\n    p.z = (fract(p.z / 3.0) - 0.5) * 3.0;\n    float k = 3.0;\n    vec3 q = p - vec3(0.5, 0.0, 0.0);\n    q.x = (fract(q.x / k) - 0.5) * k;\n    q.xz *= rot(3.141592 * 0.25);\n\tfloat a = box(q);\n    q = p + vec3(1.0, 0.0, 0.0);\n    q.x = (fract(q.x / k) - 0.5) * k;\n    q.xz *= rot(3.141592 * 0.5);\n    a = min(a, box(q));\n    float f = -abs(p.y) + 1.01;\n    mapmat = 0.0;\n    if (f < a) {\n        mapmat = 1.0;\n        a = f;\n    }\n    return a;\n}\n\nvec3 normal(vec3 p)\n{\n\tvec3 o = vec3(0.001, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r) {\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        t += map(o + r * t);\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 r = normalize(vec3(uv, 1.0 - dot(uv, uv) * 0.2));\n    vec3 o = vec3(iTime, 0.0, -1.3);\n\n    float t = trace(o, r);\n    float mat = mapmat;\n    vec3 w = o + r * t;\n    vec3 sn = normal(w);\n    \n    float gt = iTime * 3.141592 * 0.25;\n    vec3 lp = vec3(o.x + sin(gt), sin(gt) * 0.25, 0.35);\n    vec3 ld = lp - w;\n    float ll = length(ld);\n    ld /= ll;\n    float lt = trace(w + sn * 0.01, ld);\n    float m = max(sign(lt - ll), 0.0);\n    m *= max(dot(sn, ld), 0.0);\n    \n    vec3 lv = lp - o;\n    float lvl = length(lv);\n    lv /= lvl;\n    float lf = trace(o, normalize(lv + r * 0.01));\n    float lfm = max(sign(lf - lvl), 0.0);\n\n    vec3 sc = vec3(1.0, 0.5, 0.5) * 2.0;\n    \n    vec3 f = vec3(1.0);\n\tif (mat == 1.0) {\n        vec2 tuv = w.xz;\n    \tf = texture(iChannel0, tuv * 0.5).xyz;\n        f *= f;\n        f = mix(f, vec3(dot(f, vec3(0.33))), .5);\n\t} else { /* thanks Shane */\n        vec3 tuv = w.yxz * 0.5;\n        vec3 ta = texture(iChannel1, tuv.yz).xyz;\n        vec3 tb = texture(iChannel1, tuv.xz).xyz;\n        vec3 tc = texture(iChannel1, tuv.xy).xyz;\n        vec3 asn = max(abs(sn) - .1, .0001);\n        asn /= length(asn);\n        f = (ta * ta*asn.x + tb * tb*asn.y + tc * tc*asn.z);\n        f *= sc;\n\t}\n    \n    vec3 lcol = vec3(1.0, 1.0, 1.0);//vec3(1.0, 0.75, 0.25);\n    \n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    f *= fog * (0.8 * (abs(sn.y + sn.z)) + m);\n    f *= lcol / (1.0 + ll * ll * 0.01);\n    f *= map(w + sn * 1.3);\n    \n    float sp = pow(max(dot(reflect(sn, lv), -r) - 0.1, 0.0), 8.0);\n    sp *= 1.0 - mat;\n    \n    f += lcol * sc * sp / (1.0 + ll * ll * 0.1) * fog;\n    f /= 1.0 + map(w) * 100.0;\n    \n    float ls = 0.0;\n    for (int i = 0; i < 8; ++i) {\n        vec3 p = o + r * ls;\n        ls += length(p - lp) - 0.01;\n    }\n    ls = 1.0 / (1.0 + ls * ls * 0.01) * 1.5;\n    \n    f += lcol * ls * lfm;\n    \n    fragColor = vec4(sqrt(f), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}