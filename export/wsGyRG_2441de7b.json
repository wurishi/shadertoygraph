{"ver":"0.1","info":{"id":"wsGyRG","date":"1603095798","viewed":68,"name":"Example 44 - raytracingheightmap","username":"jt","description":"Simple & inefficient way to raytrace a heightmap.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","example","heightmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 d = vec3(2.0 * fragCoord/iResolution.xy - 1.0, 1.0);\n    \n    fragColor = vec4(0.0, 0.0, 0.5, 1.0);\n    \n    float s = 0.001;\n    s /= abs(d.y); // larger step-size for shallow rays\n    for(vec3 q = vec3(0.0); abs(q.y) < 1.0; q += d * s)\n    {\n        float c = texture(iChannel0, (q.xz + vec2(iTime, 0.0)) / 5.0).x;\n        float h = 1.0 * c - 1.0;\n        if(q.y < h)\n        {\n            fragColor = vec4(c);\n            break;\n        }\n    }\n}\n","name":"Image","description":"","type":"image"}]}