{"ver":"0.1","info":{"id":"DlySR1","date":"1685965626","viewed":23,"name":"fhr_kishimisu1","username":"fhr","description":"yes","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["video"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t)\n{\n    return vec3(0.236, 0.180, 0.588) + vec3(0.680, 0.434, 0.608)*cos(6.28318*(vec3(0.878, 1.347, 1.088)*t+vec3(4.224, 5.675,4.809)));\n}\n\nfloat sdOctogon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.9238795325, 0.3826834323, 0.4142135623 );\n    p = abs(p);\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.);\n    \n    for (float i = 0.; i<3.; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = sdOctogon(uv, 0.25) * exp(-length(uv0));\n\n        vec3 col = palette(sin(length(uv0)) + iTime/6. + i*.4);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n        d = pow(0.01 / d, 1.12);\n\n\n        finalColor += col * d * abs(sin(iTime/16. + i*8.12));\n    }\n    \n    fragColor = vec4(finalColor, 1);\n}\n\n","name":"Image","description":"","type":"image"}]}