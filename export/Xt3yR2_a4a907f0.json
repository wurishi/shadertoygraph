{"ver":"0.1","info":{"id":"Xt3yR2","date":"1533128748","viewed":333,"name":"Simple swarm","username":"mildanach","description":"something I discovered by mistake, trying to get a double grid interference (originally written in Android Shader Editor)","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["simple","trigonometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535;\nconst float SC = 100.;\nconst int N = 7;\nconst float BOOST = 3.0;\n\nmat2 rotate(float ang)\n{\n    float s = sin(ang);\n    float c = cos(ang);\n    return mat2(c, -s, s, c);\n}\n\nfloat patt(vec2 pos)\n{\n    return sin(SC * pos.x) * cos(SC * pos.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float mx = max(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / mx;\n\n    float val = 0.0;\n    mat2 rotN = rotate(PI / float(N)); \n    mat2 m = mat2(1.);\n    for(int i=0; i<N; i++)\n    {\n        float sh = 0.01 * iTime * float(i);\n        vec2 p = uv * m + vec2(sh);\n        val += patt(p);\n        m *= rotN;\n    }\n    val = BOOST * val / float(N);\n    vec3 col = vec3(val);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}