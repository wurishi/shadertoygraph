{"ver":"0.1","info":{"id":"WdcBR4","date":"1604662721","viewed":94,"name":"S11_CREATURE","username":"DISPLAY_JERKY","description":"-","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["s11"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MtsSzr","filepath":"https://soundcloud.com/s11bt/blew","previewfilepath":"https://soundcloud.com/s11bt/blew","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat sph(vec3 p, float r) {\n    return length(p) - r;\n}\n\nfloat box(vec3 p, vec3 s) {\n    vec3 q = abs(p) - s;\n    return max(q.x, max(q.y, q.z));\n}\n\nvec3 smin(vec3 a, vec3 b, float h) {\n    vec3 k = clamp((a - b) / h * .5 + .5, 0., 1.);\n    return mix(a, b, k) - k * (1. - k) * h;\n}\n\nfloat map(vec3 p) {\n    float low = texelFetch(iChannel0, ivec2(4, 0), 0).x;\n    float hi = texelFetch(iChannel0, ivec2(360, 0), 0).x;\n    float t = iTime * .2;\n    float s = 1.;\n    for (float i = 0.; i < 5.; i++) {\n        p -= 0.05 * i;\n        p.xy *= rot(t * -i);\n        p.yz *= rot(t - i * 0.9 + 12.34);\n        p.zx *= rot(t + i * 1.3);\n        p = smin(p, -p, -s * max(.5, (low * 3. - hi * 1.)));\n        p -= s;\n        s *= -pow(hi, 6.) - .5;\n    }\n    \n    return box(p, vec3(0.5));\n}\n\nvec3 norm(vec3 p) {\n    vec2 e = vec2(0.01, 0);\n    return normalize(map(p) - vec3(map(p - e.xyy), map(p - e.yxy), map(p - e.yyx)));\n}\n\nvoid cam(inout vec3 p) {\n    float t = iTime;\n    p.zx *= rot(t * 0.1);\n    p.zy *= rot(t * 0.2);\n}\n\nvec3 bg(vec3 r) {\n    float k = r.y * .5 + .5;\n    return mix(vec3(.3, .5, .9), vec3(.3, .1, .1), k);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    \n    int tx = int(uv.x * 512.);\n    float fft = texelFetch(iChannel0, ivec2(tx, 0), 0).x;\n    float wave = texelFetch(iChannel0, ivec2(tx, 1), 0).x;\n\n    vec3 s = vec3(0, 0, -12);\n    vec3 r = normalize(vec3(-uv, 1));\n    \n    cam(s);\n    cam(r);\n    \n    vec3 col = vec3(0);\n    \n    col += bg(r);\n\n    vec3 p = s;\n    float side = sign(map(p));\n    float prod = 1., spec;\n    float maxdist = 100.;\n    vec3 n, l, h;\n    for (int i = 0; float(i) < maxdist; i++) {\n        float d = map(p) * side;\n        if (d < .001) {\n            n = norm(p) * side;\n            l = normalize(vec3(-1, +1, -2));\n            if (dot(n, l) < 0.) l = -l;\n            h = normalize(l - r);\n            spec = .1 + .2 * pow(max(0., dot(n, l)), 20.);\n            \n            col += bg(reflect(r, n)) * 0.01;\n            col += max(0., dot(n, l)) * spec * prod;\n            \n\t        side = -side;\n            d = 0.1;\n            prod *= 0.7;\n            r = refract(r, n, 1. - .2 * side);\n            //break;\n        }\n        p += r * d;\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}