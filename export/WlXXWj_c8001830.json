{"ver":"0.1","info":{"id":"WlXXWj","date":"1564212628","viewed":156,"name":"Appolonian static","username":"thesage1014","description":"This, but static and mouse controlable\nhttps://www.shadertoy.com/view/Mt2fzR","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","apollonian","circleinversion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by evilryu - evilryu/2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// \n\nvec2 rot(vec2 p, float r)\n{\n    vec2 q;\n    q.x = p.x * cos(r) - p.y * sin(r);\n    q.y = p.x * sin(r) + p.y * cos(r);\n    return q;\n}\n\nvec3 apollonian(vec2 p)\n{\n    //p = rot(p, iTime*0.1);\n    float scale = 1.0;\n    float t0 = 1., t1 = 1.;\n    for(int i = 0; i < 5; ++i)\n    {\n        p = -1. + 2.*fract(p*.5+0.5);\n        float k=(1.+iMouse.x/iResolution.x)/dot(p,p);\n        p*=k;\n        \n        t0 = min(t0, dot(p,p));\n        t1 = min(t1, max(abs(p.x), abs(p.y)));\n        scale*=k;\n\n    }\n    float d=0.25*abs(p.y)/scale;\n    d=smoothstep(0.001, 0.002,d);\n    \n    float c0=pow(clamp(t0, 0.0, 1.0), 1.5); \n    float c1=pow(clamp(t1, 0.0, 1.0), 2.);\n    vec3 col0=0.5+0.5*sin(1.0+3.4*c0+vec3(2.,1.3, 0.)); \n\tvec3 col1=0.5+0.5*sin(3.7*c1+vec3(2.,1.5, 0.)); \n\n    vec3 col = vec3(d);//sqrt(d*col1*col0)*3.;\n    \n    return col;\n}\n\n\nvec2 getsubpixel(int id,vec2 fragCoord)\n{\n\tvec2 aa=vec2(floor((float(id)+0.1)*0.5),mod(float(id),2.0));\n\treturn vec2((2.0*fragCoord.xy+aa-iResolution.xy)/iResolution.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy / iResolution.xy;\n    vec2 p = q * 2.0 - 1.0;\n    p.x *= iResolution.x/iResolution.y;\n    vec3 col = vec3(0.0);\n    for(int i=0;i<4;++i)\n    {\n        vec2 p = getsubpixel(i,fragCoord);\n        //p*=exp(sin(iTime*0.2)*0.2);\n        p+=1.;\n        col += apollonian(p);\n    }\n    //col/=4.0;\n    //col=col*0.6+0.4*col*col*(3.0-2.0*col);  // contrast\n   \t//col*=0.5+.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.25);  // vigneting\n\tfragColor.xyz = col;\n}","name":"Image","description":"","type":"image"}]}