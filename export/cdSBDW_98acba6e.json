{"ver":"0.1","info":{"id":"cdSBDW","date":"1689693745","viewed":85,"name":"Animated Red Reactive","username":"ferociousmullet","description":"First Experiments, GPT helped","likes":1,"published":3,"flags":64,"usePreview":0,"tags":["audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"lddGDn","filepath":"https://soundcloud.com/ferociousmullet/smooth-machine","previewfilepath":"https://soundcloud.com/ferociousmullet/smooth-machine","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Set the red line color\n    vec4 lineColor = vec4(1.0, 0.0, 0.0, 1.0);\n\n    // Define the thickness of the line\n    float lineWidth = 5.0;\n\n    // Define the trails fade factor\n    float trailsFade = 0.97;\n\n    // Calculate the position of the line based on time\n    float time = iTime;\n    float lineX = 0.5 * iResolution.x + 0.5 * iResolution.x * sin(time);\n\n    // Read the previous frame color from the screen\n    vec4 previousColor = texture(iChannel0, fragCoord / iResolution.xy);\n\n    // Get audio data from iChannel0\n    vec2 audioData = texture(iChannel0, vec2(fragCoord.y / iResolution.y, 2)).rg;\n\n    // Modulate the line color by the audio data\n    lineColor *= vec4((audioData), 0.4, 1.0);\n\n    // Check if the current fragment is part of the line\n    if (abs(fragCoord.x - lineX) < lineWidth * 0.5)\n    {\n        // Draw the line with the modulated line color\n        fragColor = lineColor;\n    }\n    else\n    {\n        // Apply trails effect to the background color\n        vec4 backgroundTrails = previousColor * trailsFade;\n\n        // Blend the line color with the background trails\n        fragColor = mix(backgroundTrails, lineColor, lineColor.a);\n    }\n}\n","name":"Image","description":"","type":"image"}]}