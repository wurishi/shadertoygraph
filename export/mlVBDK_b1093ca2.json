{"ver":"0.1","info":{"id":"mlVBDK","date":"1702517097","viewed":59,"name":"Flowerseeds","username":"ahsan2649","description":"Changing a few functions from my Flowercomb shader yielded this, and it was different enought that I felt it needed its own place","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["math","flower","circular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n  \n    uv = rotate2d((iTime * 0.25)) * uv;\n    \n    float r = sqrt(uv.x*uv.x + uv.y*uv.y);\n    float th = atan(uv.y/uv.x);\n    \n    float f = .25/cos(r*6. - iTime * 2.5) - sin(8. * th);\n    f += sin(iTime);\n    f += sin(f*2.);\n    f += cos(f*2.);\n    \n    f = smoothstep(0.5,0.999,f);\n    // Output to screen\n    fragColor = vec4(vec3(f),1.0);\n}","name":"Image","description":"","type":"image"}]}