{"ver":"0.1","info":{"id":"4sSBRw","date":"1499851230","viewed":1486,"name":"Fluid Dynamics - Candle ","username":"pixartist","description":"LMB = obstacle\nLMB + Space = clear obstacle\nLMB + A = paint heat","likes":28,"published":1,"flags":48,"usePreview":1,"tags":["fluid","dynamics","heat","candle","liquid","gas"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 src = texture(iChannel0, uv);\n    vec4 prs = texture(iChannel1, uv);\n    float ob = prs.r;\n\tvec4 c = texture(iChannel2, uv);\n    \n    if(ob <= 0.0)\n    {\n        float heat = src.b * 1.0;\n        vec2 vel = src.xy;\n        fragColor = vec4(heat, heat * 0.4, heat * 0.2, 1.0);\n        fragColor.gb += length(vel) * max(0.0, (1.0 - length(fragColor.rgb)));\n    }\n    else\n    \tfragColor = vec4(0.5, 0.5, 0.5, 1.0);\n    //fragColor = c;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//ADVECT\n\n// advect func taken from\n// Created by Robert Schuetze - trirop/2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// Runge-Kutta 4 backward advection\n\n#define h 2.0\n\nvec2 RK4(vec2 p){\n    vec2 r = iResolution.xy;\n    vec2 k1 = texture(iChannel3,p/r).xy;\n    vec2 k2 = texture(iChannel3,(p-0.5*h*k1)/r).xy;\n    vec2 k3 = texture(iChannel3,(p-0.5*h*k2)/r).xy;\n    vec2 k4 = texture(iChannel3,(p-h*k3)/r).xy;\n    return h/3.*(0.5*k1+k2+k3+0.5*k4);\n   // return texture(iChannel3,p/iResolution.xy).xy * h;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec4 src = texture(iChannel3, (fragCoord - RK4(fragCoord)) / iResolution.xy);\n    vec2 velocity = src.xy;\n    float temp = src.z;\n    vec2 uv = (fragCoord / iResolution.xy);\n    if(distance(uv, vec2(0.5, 0.1)) < 0.02)\n    {\n        temp += 0.08;\n    }\n    vec2 uvn = abs(uv - vec2(0.5)) * 2.0;\n    //damping at screen borders\n  \tfloat isBorder = max(uvn.x, uvn.y);\n    isBorder = smoothstep(0.95, 1.0, isBorder);\n\tfloat dtb = sqrt(1.0 - isBorder);\n    dtb = 0.99 + 0.01 * dtb;\n    velocity *= dtb;\n    temp *= dtb;\n    //obstacles\n    vec4 cb = texture(iChannel1, uv);\n    if(cb.r > 0.0 )\n    {\n        velocity = vec2(0.0);\n    }\n\t//mouse handling\n\n    if(iMouse.z > 0.0 && distance(iMouse.xy, fragCoord) < 5.0)\n    {\n      // temp += 2.3;\n    }\n   \n    fragColor = vec4(velocity, temp, 1.0);\n    \n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//DIVERGENCE\nint kA=65,kB=66,kC=67,kD=68,kE=69,kF=70,kG=71,kH=72,kI=73,kJ=74,kK=75,kL=76,kM=77,kN=78,kO=79,kP=80,kQ=81,kR=82,kS=83,kT=84,kU=85,kV=86,kW=87,kX=88,kY=89,kZ=90;\nint k0=48,k1=49,k2=50,k3=51,k4=52,k5=53,k6=54,k7=55,k8=56,k9=57;\nint kSpace=32,kLeft=37,kUp=38,kRight=39,kDown=40,kCtrl=17;\nbool ReadKey(int key)\n{\n\tfloat keyVal = texture( iChannel2, vec2( (float(key)+.5)/256.0, .25 ) ).x;\n\treturn keyVal > 0.0;\n}\nvec2 fc;\n\nvec4 rd(int x,int y)\n{\n    return texture(iChannel0, (fc+vec2(x,y))/iResolution.xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fc = fragCoord;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 self = texture(iChannel1, uv);\n    float obstacle = self.x;\n    if(!ReadKey(kA) && iMouse.z > 0.0 && distance(iMouse.xy, fragCoord) < 15.0)\n    {\n        if(ReadKey(kSpace))\n            obstacle = 0.0;\n        else\n        \tobstacle = 1.0;\n    }\n     //DIVERGENCE\n    \n    \n    vec4 left = rd(-1, 0);\n    vec4 right = rd(1, 0);\n    vec4 top = rd(0, 1);\n    vec4 bottom = rd(0, -1);\n        \n    float pressure = (left.x - right.x) + (bottom.y - top.y);\n\n\n    fragColor = vec4(obstacle, pressure, 0.0, 1.0);\n\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"//PRESSURE\n#define rd(_x,_y, _f) c = fc+vec2(_x,_y); result += _f * (texture(iChannel1, c/iResolution.xy).y + texture(iChannel2, c/iResolution.xy).z)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 fc = fragCoord;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float result = 0.0;\n    vec2 c;\n    rd(-20, 0, 0.00000000000001048576);\n    rd(-19, -1, 0.00000000000020971520);\n    rd(-19, 0, 0.00000000000020971520);\n    rd(-19, 1, 0.00000000000020971520);\n    rd(-18, -2, 0.00000000000199229440);\n    rd(-18, -1, 0.00000000000398458880);\n    rd(-18, 0, 0.00000000000618659840);\n    rd(-18, 1, 0.00000000000398458880);\n    rd(-18, 2, 0.00000000000199229440);\n    rd(-17, -3, 0.00000000001195376640);\n    rd(-17, -2, 0.00000000003586129920);\n    rd(-17, -1, 0.00000000007570718720);\n    rd(-17, 0, 0.00000000008766095360);\n    rd(-17, 1, 0.00000000007570718720);\n    rd(-17, 2, 0.00000000003586129920);\n    rd(-17, 3, 0.00000000001195376640);\n    rd(-16, -4, 0.00000000005080350720);\n    rd(-16, -3, 0.00000000020321402880);\n    rd(-16, -2, 0.00000000054389637120);\n    rd(-16, -1, 0.00000000088457871360);\n    rd(-16, 0, 0.00000000107484282880);\n    rd(-16, 1, 0.00000000088457871360);\n    rd(-16, 2, 0.00000000054389637120);\n    rd(-16, 3, 0.00000000020321402880);\n    rd(-16, 4, 0.00000000005080350720);\n    rd(-15, -5, 0.00000000016257122304);\n    rd(-15, -4, 0.00000000081285611520);\n    rd(-15, -3, 0.00000000264178237440);\n    rd(-15, -2, 0.00000000548677877760);\n    rd(-15, -1, 0.00000000857085050880);\n    rd(-15, 0, 0.00000000974949187584);\n    rd(-15, 1, 0.00000000857085050880);\n    rd(-15, 2, 0.00000000548677877760);\n    rd(-15, 3, 0.00000000264178237440);\n    rd(-15, 4, 0.00000000081285611520);\n    rd(-15, 5, 0.00000000016257122304);\n    rd(-14, -6, 0.00000000040642805760);\n    rd(-14, -5, 0.00000000243856834560);\n    rd(-14, -4, 0.00000000934784532480);\n    rd(-14, -3, 0.00000002357282734080);\n    rd(-14, -2, 0.00000004501190737920);\n    rd(-14, -1, 0.00000006482527518720);\n    rd(-14, 0, 0.00000007367703920640);\n    rd(-14, 1, 0.00000006482527518720);\n    rd(-14, 2, 0.00000004501190737920);\n    rd(-14, 3, 0.00000002357282734080);\n    rd(-14, 4, 0.00000000934784532480);\n    rd(-14, 5, 0.00000000243856834560);\n    rd(-14, 6, 0.00000000040642805760);\n    rd(-13, -7, 0.00000000081285611520);\n    rd(-13, -6, 0.00000000568999280640);\n    rd(-13, -5, 0.00000002519853957120);\n    rd(-13, -4, 0.00000007478276259840);\n    rd(-13, -3, 0.00000016907407196160);\n    rd(-13, -2, 0.00000029425391370240);\n    rd(-13, -1, 0.00000040988269608960);\n    rd(-13, 0, 0.00000045540263854080);\n    rd(-13, 1, 0.00000040988269608960);\n    rd(-13, 2, 0.00000029425391370240);\n    rd(-13, 3, 0.00000016907407196160);\n    rd(-13, 4, 0.00000007478276259840);\n    rd(-13, 5, 0.00000002519853957120);\n    rd(-13, 6, 0.00000000568999280640);\n    rd(-13, 7, 0.00000000081285611520);\n    rd(-12, -8, 0.00000000132089118720);\n    rd(-12, -7, 0.00000001056712949760);\n    rd(-12, -6, 0.00000005324207554560);\n    rd(-12, -5, 0.00000018207976980480);\n    rd(-12, -4, 0.00000047694332559360);\n    rd(-12, -3, 0.00000097461448212480);\n    rd(-12, -2, 0.00000161026796421120);\n    rd(-12, -1, 0.00000215975869808640);\n    rd(-12, 0, 0.00000238527546654720);\n    rd(-12, 1, 0.00000215975869808640);\n    rd(-12, 2, 0.00000161026796421120);\n    rd(-12, 3, 0.00000097461448212480);\n    rd(-12, 4, 0.00000047694332559360);\n    rd(-12, 5, 0.00000018207976980480);\n    rd(-12, 6, 0.00000005324207554560);\n    rd(-12, 7, 0.00000001056712949760);\n    rd(-12, 8, 0.00000000132089118720);\n    rd(-11, -9, 0.00000000176118824960);\n    rd(-11, -8, 0.00000001585069424640);\n    rd(-11, -7, 0.00000008982060072960);\n    rd(-11, -6, 0.00000034871527342080);\n    rd(-11, -5, 0.00000104208153968640);\n    rd(-11, -4, 0.00000245238689955840);\n    rd(-11, -3, 0.00000470237262643201);\n    rd(-11, -2, 0.00000740511920947201);\n    rd(-11, -1, 0.00000970997272412161);\n    rd(-11, 0, 0.00001060953349160961);\n    rd(-11, 1, 0.00000970997272412161);\n    rd(-11, 2, 0.00000740511920947201);\n    rd(-11, 3, 0.00000470237262643201);\n    rd(-11, 4, 0.00000245238689955840);\n    rd(-11, 5, 0.00000104208153968640);\n    rd(-11, 6, 0.00000034871527342080);\n    rd(-11, 7, 0.00000008982060072960);\n    rd(-11, 8, 0.00000001585069424640);\n    rd(-11, 9, 0.00000000176118824960);\n    rd(-10, -10, 0.00000000193730707456);\n    rd(-10, -9, 0.00000001937307074560);\n    rd(-10, -8, 0.00000012240258334720);\n    rd(-10, -7, 0.00000053364003962880);\n    rd(-10, -6, 0.00000179905379696640);\n    rd(-10, -5, 0.00000481015734730753);\n    rd(-10, -4, 0.00001054274381414401);\n    rd(-10, -3, 0.00001913463295180802);\n    rd(-10, -2, 0.00002915206850150403);\n    rd(-10, -1, 0.00003740831580160005);\n    rd(-10, 0, 0.00004066530832678917);\n    rd(-10, 1, 0.00003740831580160005);\n    rd(-10, 2, 0.00002915206850150404);\n    rd(-10, 3, 0.00001913463295180803);\n    rd(-10, 4, 0.00001054274381414402);\n    rd(-10, 5, 0.00000481015734730753);\n    rd(-10, 6, 0.00000179905379696640);\n    rd(-10, 7, 0.00000053364003962880);\n    rd(-10, 8, 0.00000012240258334720);\n    rd(-10, 9, 0.00000001937307074560);\n    rd(-10, 10, 0.00000000193730707456);\n    rd(-9, -11, 0.00000000176118824960);\n    rd(-9, -10, 0.00000001937307074560);\n    rd(-9, -9, 0.00000013561149521920);\n    rd(-9, -8, 0.00000065868440535040);\n    rd(-9, -7, 0.00000248503662018560);\n    rd(-9, -6, 0.00000747624411955201);\n    rd(-9, -5, 0.00001852946157404162);\n    rd(-9, -4, 0.00003826357591080964);\n    rd(-9, -3, 0.00006673345491763209);\n    rd(-9, -2, 0.00009877353345843212);\n    rd(-9, -1, 0.00012484237097697295);\n    rd(-9, 0, 0.00013488317613998102);\n    rd(-9, 1, 0.00012484237097697295);\n    rd(-9, 2, 0.00009877353345843213);\n    rd(-9, 3, 0.00006673345491763209);\n    rd(-9, 4, 0.00003826357591080965);\n    rd(-9, 5, 0.00001852946157404163);\n    rd(-9, 6, 0.00000747624411955201);\n    rd(-9, 7, 0.00000248503662018560);\n    rd(-9, 8, 0.00000065868440535040);\n    rd(-9, 9, 0.00000013561149521920);\n    rd(-9, 10, 0.00000001937307074560);\n    rd(-9, 11, 0.00000000176118824960);\n    rd(-8, -12, 0.00000000132089118720);\n    rd(-8, -11, 0.00000001585069424640);\n    rd(-8, -10, 0.00000012240258334720);\n    rd(-8, -9, 0.00000065868440535040);\n    rd(-8, -8, 0.00000276550584893440);\n    rd(-8, -7, 0.00000929907395788801);\n    rd(-8, -6, 0.00002586569122775043);\n    rd(-8, -5, 0.00006022735457157127);\n    rd(-8, -4, 0.00011900172883722253);\n    rd(-8, -3, 0.00020066450559467542);\n    rd(-8, -2, 0.00029064219076853798);\n    rd(-8, -1, 0.00036239509993553966);\n    rd(-8, 0, 0.00039008920938741809);\n    rd(-8, 1, 0.00036239509993553966);\n    rd(-8, 2, 0.00029064219076853793);\n    rd(-8, 3, 0.00020066450559467548);\n    rd(-8, 4, 0.00011900172883722256);\n    rd(-8, 5, 0.00006022735457157129);\n    rd(-8, 6, 0.00002586569122775044);\n    rd(-8, 7, 0.00000929907395788801);\n    rd(-8, 8, 0.00000276550584893440);\n    rd(-8, 9, 0.00000065868440535040);\n    rd(-8, 10, 0.00000012240258334720);\n    rd(-8, 11, 0.00000001585069424640);\n    rd(-8, 12, 0.00000000132089118720);\n    rd(-7, -13, 0.00000000081285611520);\n    rd(-7, -12, 0.00000001056712949760);\n    rd(-7, -11, 0.00000008982060072960);\n    rd(-7, -10, 0.00000053364003962880);\n    rd(-7, -9, 0.00000248503662018560);\n    rd(-7, -8, 0.00000929907395788801);\n    rd(-7, -7, 0.00002888524848168964);\n    rd(-7, -6, 0.00007538061827112970);\n    rd(-7, -5, 0.00016754712174919700);\n    rd(-7, -4, 0.00031913787795701806);\n    rd(-7, -3, 0.00052444135340113990);\n    rd(-7, -2, 0.00074569591082188893);\n    rd(-7, -1, 0.00092041851992801394);\n    rd(-7, 0, 0.00098697287554826369);\n    rd(-7, 1, 0.00092041851992801394);\n    rd(-7, 2, 0.00074569591082188904);\n    rd(-7, 3, 0.00052444135340113979);\n    rd(-7, 4, 0.00031913787795701800);\n    rd(-7, 5, 0.00016754712174919706);\n    rd(-7, 6, 0.00007538061827112971);\n    rd(-7, 7, 0.00002888524848168964);\n    rd(-7, 8, 0.00000929907395788801);\n    rd(-7, 9, 0.00000248503662018560);\n    rd(-7, 10, 0.00000053364003962880);\n    rd(-7, 11, 0.00000008982060072960);\n    rd(-7, 12, 0.00000001056712949760);\n    rd(-7, 13, 0.00000000081285611520);\n    rd(-6, -14, 0.00000000040642805760);\n    rd(-6, -13, 0.00000000568999280640);\n    rd(-6, -12, 0.00000005324207554560);\n    rd(-6, -11, 0.00000034871527342080);\n    rd(-6, -10, 0.00000179905379696640);\n    rd(-6, -9, 0.00000747624411955201);\n    rd(-6, -8, 0.00002586569122775043);\n    rd(-6, -7, 0.00007538061827112970);\n    rd(-6, -6, 0.00018763787670650903);\n    rd(-6, -5, 0.00040148751813181492);\n    rd(-6, -4, 0.00074356663422812258);\n    rd(-6, -3, 0.00119596658227937437);\n    rd(-6, -2, 0.00167656227361259735);\n    rd(-6, -1, 0.00205133385302016299);\n    rd(-6, 0, 0.00219408337647698229);\n    rd(-6, 1, 0.00205133385302016255);\n    rd(-6, 2, 0.00167656227361259757);\n    rd(-6, 3, 0.00119596658227937437);\n    rd(-6, 4, 0.00074356663422812247);\n    rd(-6, 5, 0.00040148751813181486);\n    rd(-6, 6, 0.00018763787670650906);\n    rd(-6, 7, 0.00007538061827112971);\n    rd(-6, 8, 0.00002586569122775044);\n    rd(-6, 9, 0.00000747624411955201);\n    rd(-6, 10, 0.00000179905379696640);\n    rd(-6, 11, 0.00000034871527342080);\n    rd(-6, 12, 0.00000005324207554560);\n    rd(-6, 13, 0.00000000568999280640);\n    rd(-6, 14, 0.00000000040642805760);\n    rd(-5, -15, 0.00000000016257122304);\n    rd(-5, -14, 0.00000000243856834560);\n    rd(-5, -13, 0.00000002519853957120);\n    rd(-5, -12, 0.00000018207976980480);\n    rd(-5, -11, 0.00000104208153968640);\n    rd(-5, -10, 0.00000481015734730753);\n    rd(-5, -9, 0.00001852946157404162);\n    rd(-5, -8, 0.00006022735457157127);\n    rd(-5, -7, 0.00016754712174919703);\n    rd(-5, -6, 0.00040148751813181492);\n    rd(-5, -5, 0.00083466163077513329);\n    rd(-5, -4, 0.00151085647417835704);\n    rd(-5, -3, 0.00239043263217008977);\n    rd(-5, -2, 0.00331179772304425381);\n    rd(-5, -1, 0.00402554513711432266);\n    rd(-5, 0, 0.00429525160899379803);\n    rd(-5, 1, 0.00402554513711432266);\n    rd(-5, 2, 0.00331179772304425425);\n    rd(-5, 3, 0.00239043263217008934);\n    rd(-5, 4, 0.00151085647417835704);\n    rd(-5, 5, 0.00083466163077513319);\n    rd(-5, 6, 0.00040148751813181492);\n    rd(-5, 7, 0.00016754712174919700);\n    rd(-5, 8, 0.00006022735457157128);\n    rd(-5, 9, 0.00001852946157404162);\n    rd(-5, 10, 0.00000481015734730753);\n    rd(-5, 11, 0.00000104208153968640);\n    rd(-5, 12, 0.00000018207976980480);\n    rd(-5, 13, 0.00000002519853957120);\n    rd(-5, 14, 0.00000000243856834560);\n    rd(-5, 15, 0.00000000016257122304);\n    rd(-4, -16, 0.00000000005080350720);\n    rd(-4, -15, 0.00000000081285611520);\n    rd(-4, -14, 0.00000000934784532480);\n    rd(-4, -13, 0.00000007478276259840);\n    rd(-4, -12, 0.00000047694332559360);\n    rd(-4, -11, 0.00000245238689955840);\n    rd(-4, -10, 0.00001054274381414401);\n    rd(-4, -9, 0.00003826357591080965);\n    rd(-4, -8, 0.00011900172883722254);\n    rd(-4, -7, 0.00031913787795701800);\n    rd(-4, -6, 0.00074356663422812247);\n    rd(-4, -5, 0.00151085647417835683);\n    rd(-4, -4, 0.00268828038597181780);\n    rd(-4, -3, 0.00419753533038920261);\n    rd(-4, -2, 0.00576434353597317980);\n    rd(-4, -1, 0.00696860328276788059);\n    rd(-4, 0, 0.00742361732528210895);\n    rd(-4, 1, 0.00696860328276788146);\n    rd(-4, 2, 0.00576434353597317893);\n    rd(-4, 3, 0.00419753533038920174);\n    rd(-4, 4, 0.00268828038597181736);\n    rd(-4, 5, 0.00151085647417835683);\n    rd(-4, 6, 0.00074356663422812247);\n    rd(-4, 7, 0.00031913787795701800);\n    rd(-4, 8, 0.00011900172883722257);\n    rd(-4, 9, 0.00003826357591080965);\n    rd(-4, 10, 0.00001054274381414401);\n    rd(-4, 11, 0.00000245238689955840);\n    rd(-4, 12, 0.00000047694332559360);\n    rd(-4, 13, 0.00000007478276259840);\n    rd(-4, 14, 0.00000000934784532480);\n    rd(-4, 15, 0.00000000081285611520);\n    rd(-4, 16, 0.00000000005080350720);\n    rd(-3, -17, 0.00000000001195376640);\n    rd(-3, -16, 0.00000000020321402880);\n    rd(-3, -15, 0.00000000264178237440);\n    rd(-3, -14, 0.00000002357282734080);\n    rd(-3, -13, 0.00000016907407196160);\n    rd(-3, -12, 0.00000097461448212480);\n    rd(-3, -11, 0.00000470237262643201);\n    rd(-3, -10, 0.00001913463295180803);\n    rd(-3, -9, 0.00006673345491763209);\n    rd(-3, -8, 0.00020066450559467548);\n    rd(-3, -7, 0.00052444135340113990);\n    rd(-3, -6, 0.00119596658227937415);\n    rd(-3, -5, 0.00239043263217008934);\n    rd(-3, -4, 0.00419753533038920174);\n    rd(-3, -3, 0.00649185016550523752);\n    rd(-3, -2, 0.00885393362780161237);\n    rd(-3, -1, 0.01066264029435004188);\n    rd(-3, 0, 0.01134262269341861258);\n    rd(-3, 1, 0.01066264029435004188);\n    rd(-3, 2, 0.00885393362780161237);\n    rd(-3, 3, 0.00649185016550523752);\n    rd(-3, 4, 0.00419753533038920174);\n    rd(-3, 5, 0.00239043263217008934);\n    rd(-3, 6, 0.00119596658227937437);\n    rd(-3, 7, 0.00052444135340113979);\n    rd(-3, 8, 0.00020066450559467548);\n    rd(-3, 9, 0.00006673345491763209);\n    rd(-3, 10, 0.00001913463295180802);\n    rd(-3, 11, 0.00000470237262643201);\n    rd(-3, 12, 0.00000097461448212480);\n    rd(-3, 13, 0.00000016907407196160);\n    rd(-3, 14, 0.00000002357282734080);\n    rd(-3, 15, 0.00000000264178237440);\n    rd(-3, 16, 0.00000000020321402880);\n    rd(-3, 17, 0.00000000001195376640);\n    rd(-2, -18, 0.00000000000199229440);\n    rd(-2, -17, 0.00000000003586129920);\n    rd(-2, -16, 0.00000000054389637120);\n    rd(-2, -15, 0.00000000548677877760);\n    rd(-2, -14, 0.00000004501190737920);\n    rd(-2, -13, 0.00000029425391370240);\n    rd(-2, -12, 0.00000161026796421120);\n    rd(-2, -11, 0.00000740511920947201);\n    rd(-2, -10, 0.00002915206850150404);\n    rd(-2, -9, 0.00009877353345843213);\n    rd(-2, -8, 0.00029064219076853798);\n    rd(-2, -7, 0.00074569591082188904);\n    rd(-2, -6, 0.00167656227361259757);\n    rd(-2, -5, 0.00331179772304425381);\n    rd(-2, -4, 0.00576434353597317893);\n    rd(-2, -3, 0.00885393362780161237);\n    rd(-2, -2, 0.01202052872924038764);\n    rd(-2, -1, 0.01443467047961888468);\n    rd(-2, 0, 0.01534280698072926219);\n    rd(-2, 1, 0.01443467047961888468);\n    rd(-2, 2, 0.01202052872924038764);\n    rd(-2, 3, 0.00885393362780161237);\n    rd(-2, 4, 0.00576434353597317893);\n    rd(-2, 5, 0.00331179772304425381);\n    rd(-2, 6, 0.00167656227361259735);\n    rd(-2, 7, 0.00074569591082188904);\n    rd(-2, 8, 0.00029064219076853793);\n    rd(-2, 9, 0.00009877353345843214);\n    rd(-2, 10, 0.00002915206850150404);\n    rd(-2, 11, 0.00000740511920947201);\n    rd(-2, 12, 0.00000161026796421120);\n    rd(-2, 13, 0.00000029425391370240);\n    rd(-2, 14, 0.00000004501190737920);\n    rd(-2, 15, 0.00000000548677877760);\n    rd(-2, 16, 0.00000000054389637120);\n    rd(-2, 17, 0.00000000003586129920);\n    rd(-2, 18, 0.00000000000199229440);\n    rd(-1, -19, 0.00000000000020971520);\n    rd(-1, -18, 0.00000000000398458880);\n    rd(-1, -17, 0.00000000007570718720);\n    rd(-1, -16, 0.00000000088457871360);\n    rd(-1, -15, 0.00000000857085050880);\n    rd(-1, -14, 0.00000006482527518720);\n    rd(-1, -13, 0.00000040988269608960);\n    rd(-1, -12, 0.00000215975869808640);\n    rd(-1, -11, 0.00000970997272412161);\n    rd(-1, -10, 0.00003740831580160005);\n    rd(-1, -9, 0.00012484237097697297);\n    rd(-1, -8, 0.00036239509993553972);\n    rd(-1, -7, 0.00092041851992801394);\n    rd(-1, -6, 0.00205133385302016299);\n    rd(-1, -5, 0.00402554513711432180);\n    rd(-1, -4, 0.00696860328276788232);\n    rd(-1, -3, 0.01066264029435004188);\n    rd(-1, -2, 0.01443467047961888815);\n    rd(-1, -1, 0.01730719679732779445);\n    rd(-1, 0, 0.01838445356992432500);\n    rd(-1, 1, 0.01730719679732779098);\n    rd(-1, 2, 0.01443467047961888468);\n    rd(-1, 3, 0.01066264029435004361);\n    rd(-1, 4, 0.00696860328276788232);\n    rd(-1, 5, 0.00402554513711432180);\n    rd(-1, 6, 0.00205133385302016255);\n    rd(-1, 7, 0.00092041851992801394);\n    rd(-1, 8, 0.00036239509993553972);\n    rd(-1, 9, 0.00012484237097697295);\n    rd(-1, 10, 0.00003740831580160005);\n    rd(-1, 11, 0.00000970997272412161);\n    rd(-1, 12, 0.00000215975869808640);\n    rd(-1, 13, 0.00000040988269608960);\n    rd(-1, 14, 0.00000006482527518720);\n    rd(-1, 15, 0.00000000857085050880);\n    rd(-1, 16, 0.00000000088457871360);\n    rd(-1, 17, 0.00000000007570718720);\n    rd(-1, 18, 0.00000000000398458880);\n    rd(-1, 19, 0.00000000000020971520);\n    rd(0, -20, 0.00000000000001048576);\n    rd(0, -19, 0.00000000000020971520);\n    rd(0, -18, 0.00000000000618659840);\n    rd(0, -17, 0.00000000008766095360);\n    rd(0, -16, 0.00000000107484282880);\n    rd(0, -15, 0.00000000974949187584);\n    rd(0, -14, 0.00000007367703920640);\n    rd(0, -13, 0.00000045540263854080);\n    rd(0, -12, 0.00000238527546654720);\n    rd(0, -11, 0.00001060953349160962);\n    rd(0, -10, 0.00004066530832678917);\n    rd(0, -9, 0.00013488317613998099);\n    rd(0, -8, 0.00039008920938741809);\n    rd(0, -7, 0.00098697287554826369);\n    rd(0, -6, 0.00219408337647698185);\n    rd(0, -5, 0.00429525160899379803);\n    rd(0, -4, 0.00742361732528210895);\n    rd(0, -3, 0.01134262269341861432);\n    rd(0, -2, 0.01534280698072926219);\n    rd(0, -1, 0.01838445356992432500);\n    rd(0, 0, 0.01952703003703118445);\n    rd(0, 1, 0.01838445356992432153);\n    rd(0, 2, 0.01534280698072925872);\n    rd(0, 3, 0.01134262269341861258);\n    rd(0, 4, 0.00742361732528210808);\n    rd(0, 5, 0.00429525160899379716);\n    rd(0, 6, 0.00219408337647698185);\n    rd(0, 7, 0.00098697287554826369);\n    rd(0, 8, 0.00039008920938741809);\n    rd(0, 9, 0.00013488317613998099);\n    rd(0, 10, 0.00004066530832678917);\n    rd(0, 11, 0.00001060953349160962);\n    rd(0, 12, 0.00000238527546654720);\n    rd(0, 13, 0.00000045540263854080);\n    rd(0, 14, 0.00000007367703920640);\n    rd(0, 15, 0.00000000974949187584);\n    rd(0, 16, 0.00000000107484282880);\n    rd(0, 17, 0.00000000008766095360);\n    rd(0, 18, 0.00000000000618659840);\n    rd(0, 19, 0.00000000000020971520);\n    rd(0, 20, 0.00000000000001048576);\n    rd(1, -19, 0.00000000000020971520);\n    rd(1, -18, 0.00000000000398458880);\n    rd(1, -17, 0.00000000007570718720);\n    rd(1, -16, 0.00000000088457871360);\n    rd(1, -15, 0.00000000857085050880);\n    rd(1, -14, 0.00000006482527518720);\n    rd(1, -13, 0.00000040988269608960);\n    rd(1, -12, 0.00000215975869808640);\n    rd(1, -11, 0.00000970997272412161);\n    rd(1, -10, 0.00003740831580160004);\n    rd(1, -9, 0.00012484237097697295);\n    rd(1, -8, 0.00036239509993553972);\n    rd(1, -7, 0.00092041851992801394);\n    rd(1, -6, 0.00205133385302016255);\n    rd(1, -5, 0.00402554513711432180);\n    rd(1, -4, 0.00696860328276788059);\n    rd(1, -3, 0.01066264029435004188);\n    rd(1, -2, 0.01443467047961888641);\n    rd(1, -1, 0.01730719679732779098);\n    rd(1, 0, 0.01838445356992432500);\n    rd(1, 1, 0.01730719679732778751);\n    rd(1, 2, 0.01443467047961888468);\n    rd(1, 3, 0.01066264029435004188);\n    rd(1, 4, 0.00696860328276788059);\n    rd(1, 5, 0.00402554513711432180);\n    rd(1, 6, 0.00205133385302016212);\n    rd(1, 7, 0.00092041851992801372);\n    rd(1, 8, 0.00036239509993553961);\n    rd(1, 9, 0.00012484237097697295);\n    rd(1, 10, 0.00003740831580160004);\n    rd(1, 11, 0.00000970997272412161);\n    rd(1, 12, 0.00000215975869808640);\n    rd(1, 13, 0.00000040988269608960);\n    rd(1, 14, 0.00000006482527518720);\n    rd(1, 15, 0.00000000857085050880);\n    rd(1, 16, 0.00000000088457871360);\n    rd(1, 17, 0.00000000007570718720);\n    rd(1, 18, 0.00000000000398458880);\n    rd(1, 19, 0.00000000000020971520);\n    rd(2, -18, 0.00000000000199229440);\n    rd(2, -17, 0.00000000003586129920);\n    rd(2, -16, 0.00000000054389637120);\n    rd(2, -15, 0.00000000548677877760);\n    rd(2, -14, 0.00000004501190737920);\n    rd(2, -13, 0.00000029425391370240);\n    rd(2, -12, 0.00000161026796421120);\n    rd(2, -11, 0.00000740511920947201);\n    rd(2, -10, 0.00002915206850150404);\n    rd(2, -9, 0.00009877353345843213);\n    rd(2, -8, 0.00029064219076853798);\n    rd(2, -7, 0.00074569591082188904);\n    rd(2, -6, 0.00167656227361259714);\n    rd(2, -5, 0.00331179772304425425);\n    rd(2, -4, 0.00576434353597317893);\n    rd(2, -3, 0.00885393362780161237);\n    rd(2, -2, 0.01202052872924038764);\n    rd(2, -1, 0.01443467047961888641);\n    rd(2, 0, 0.01534280698072925872);\n    rd(2, 1, 0.01443467047961888468);\n    rd(2, 2, 0.01202052872924038590);\n    rd(2, 3, 0.00885393362780161064);\n    rd(2, 4, 0.00576434353597317720);\n    rd(2, 5, 0.00331179772304425295);\n    rd(2, 6, 0.00167656227361259692);\n    rd(2, 7, 0.00074569591082188883);\n    rd(2, 8, 0.00029064219076853793);\n    rd(2, 9, 0.00009877353345843212);\n    rd(2, 10, 0.00002915206850150403);\n    rd(2, 11, 0.00000740511920947201);\n    rd(2, 12, 0.00000161026796421120);\n    rd(2, 13, 0.00000029425391370240);\n    rd(2, 14, 0.00000004501190737920);\n    rd(2, 15, 0.00000000548677877760);\n    rd(2, 16, 0.00000000054389637120);\n    rd(2, 17, 0.00000000003586129920);\n    rd(2, 18, 0.00000000000199229440);\n    rd(3, -17, 0.00000000001195376640);\n    rd(3, -16, 0.00000000020321402880);\n    rd(3, -15, 0.00000000264178237440);\n    rd(3, -14, 0.00000002357282734080);\n    rd(3, -13, 0.00000016907407196160);\n    rd(3, -12, 0.00000097461448212480);\n    rd(3, -11, 0.00000470237262643201);\n    rd(3, -10, 0.00001913463295180802);\n    rd(3, -9, 0.00006673345491763210);\n    rd(3, -8, 0.00020066450559467545);\n    rd(3, -7, 0.00052444135340113979);\n    rd(3, -6, 0.00119596658227937437);\n    rd(3, -5, 0.00239043263217008977);\n    rd(3, -4, 0.00419753533038920261);\n    rd(3, -3, 0.00649185016550523752);\n    rd(3, -2, 0.00885393362780161237);\n    rd(3, -1, 0.01066264029435004361);\n    rd(3, 0, 0.01134262269341861258);\n    rd(3, 1, 0.01066264029435004188);\n    rd(3, 2, 0.00885393362780161064);\n    rd(3, 3, 0.00649185016550523578);\n    rd(3, 4, 0.00419753533038920261);\n    rd(3, 5, 0.00239043263217008891);\n    rd(3, 6, 0.00119596658227937415);\n    rd(3, 7, 0.00052444135340113979);\n    rd(3, 8, 0.00020066450559467542);\n    rd(3, 9, 0.00006673345491763209);\n    rd(3, 10, 0.00001913463295180802);\n    rd(3, 11, 0.00000470237262643201);\n    rd(3, 12, 0.00000097461448212480);\n    rd(3, 13, 0.00000016907407196160);\n    rd(3, 14, 0.00000002357282734080);\n    rd(3, 15, 0.00000000264178237440);\n    rd(3, 16, 0.00000000020321402880);\n    rd(3, 17, 0.00000000001195376640);\n    rd(4, -16, 0.00000000005080350720);\n    rd(4, -15, 0.00000000081285611520);\n    rd(4, -14, 0.00000000934784532480);\n    rd(4, -13, 0.00000007478276259840);\n    rd(4, -12, 0.00000047694332559360);\n    rd(4, -11, 0.00000245238689955840);\n    rd(4, -10, 0.00001054274381414401);\n    rd(4, -9, 0.00003826357591080965);\n    rd(4, -8, 0.00011900172883722256);\n    rd(4, -7, 0.00031913787795701800);\n    rd(4, -6, 0.00074356663422812247);\n    rd(4, -5, 0.00151085647417835704);\n    rd(4, -4, 0.00268828038597181780);\n    rd(4, -3, 0.00419753533038920174);\n    rd(4, -2, 0.00576434353597317893);\n    rd(4, -1, 0.00696860328276788232);\n    rd(4, 0, 0.00742361732528210895);\n    rd(4, 1, 0.00696860328276788059);\n    rd(4, 2, 0.00576434353597317806);\n    rd(4, 3, 0.00419753533038920261);\n    rd(4, 4, 0.00268828038597181736);\n    rd(4, 5, 0.00151085647417835683);\n    rd(4, 6, 0.00074356663422812247);\n    rd(4, 7, 0.00031913787795701800);\n    rd(4, 8, 0.00011900172883722254);\n    rd(4, 9, 0.00003826357591080964);\n    rd(4, 10, 0.00001054274381414401);\n    rd(4, 11, 0.00000245238689955840);\n    rd(4, 12, 0.00000047694332559360);\n    rd(4, 13, 0.00000007478276259840);\n    rd(4, 14, 0.00000000934784532480);\n    rd(4, 15, 0.00000000081285611520);\n    rd(4, 16, 0.00000000005080350720);\n    rd(5, -15, 0.00000000016257122304);\n    rd(5, -14, 0.00000000243856834560);\n    rd(5, -13, 0.00000002519853957120);\n    rd(5, -12, 0.00000018207976980480);\n    rd(5, -11, 0.00000104208153968640);\n    rd(5, -10, 0.00000481015734730753);\n    rd(5, -9, 0.00001852946157404162);\n    rd(5, -8, 0.00006022735457157127);\n    rd(5, -7, 0.00016754712174919703);\n    rd(5, -6, 0.00040148751813181486);\n    rd(5, -5, 0.00083466163077513329);\n    rd(5, -4, 0.00151085647417835683);\n    rd(5, -3, 0.00239043263217008891);\n    rd(5, -2, 0.00331179772304425381);\n    rd(5, -1, 0.00402554513711432180);\n    rd(5, 0, 0.00429525160899379803);\n    rd(5, 1, 0.00402554513711432180);\n    rd(5, 2, 0.00331179772304425381);\n    rd(5, 3, 0.00239043263217008934);\n    rd(5, 4, 0.00151085647417835726);\n    rd(5, 5, 0.00083466163077513319);\n    rd(5, 6, 0.00040148751813181486);\n    rd(5, 7, 0.00016754712174919700);\n    rd(5, 8, 0.00006022735457157127);\n    rd(5, 9, 0.00001852946157404162);\n    rd(5, 10, 0.00000481015734730753);\n    rd(5, 11, 0.00000104208153968640);\n    rd(5, 12, 0.00000018207976980480);\n    rd(5, 13, 0.00000002519853957120);\n    rd(5, 14, 0.00000000243856834560);\n    rd(5, 15, 0.00000000016257122304);\n    rd(6, -14, 0.00000000040642805760);\n    rd(6, -13, 0.00000000568999280640);\n    rd(6, -12, 0.00000005324207554560);\n    rd(6, -11, 0.00000034871527342080);\n    rd(6, -10, 0.00000179905379696640);\n    rd(6, -9, 0.00000747624411955201);\n    rd(6, -8, 0.00002586569122775044);\n    rd(6, -7, 0.00007538061827112969);\n    rd(6, -6, 0.00018763787670650903);\n    rd(6, -5, 0.00040148751813181486);\n    rd(6, -4, 0.00074356663422812247);\n    rd(6, -3, 0.00119596658227937415);\n    rd(6, -2, 0.00167656227361259735);\n    rd(6, -1, 0.00205133385302016212);\n    rd(6, 0, 0.00219408337647698185);\n    rd(6, 1, 0.00205133385302016212);\n    rd(6, 2, 0.00167656227361259692);\n    rd(6, 3, 0.00119596658227937415);\n    rd(6, 4, 0.00074356663422812247);\n    rd(6, 5, 0.00040148751813181486);\n    rd(6, 6, 0.00018763787670650903);\n    rd(6, 7, 0.00007538061827112969);\n    rd(6, 8, 0.00002586569122775043);\n    rd(6, 9, 0.00000747624411955201);\n    rd(6, 10, 0.00000179905379696640);\n    rd(6, 11, 0.00000034871527342080);\n    rd(6, 12, 0.00000005324207554560);\n    rd(6, 13, 0.00000000568999280640);\n    rd(6, 14, 0.00000000040642805760);\n    rd(7, -13, 0.00000000081285611520);\n    rd(7, -12, 0.00000001056712949760);\n    rd(7, -11, 0.00000008982060072960);\n    rd(7, -10, 0.00000053364003962880);\n    rd(7, -9, 0.00000248503662018560);\n    rd(7, -8, 0.00000929907395788801);\n    rd(7, -7, 0.00002888524848168964);\n    rd(7, -6, 0.00007538061827112969);\n    rd(7, -5, 0.00016754712174919703);\n    rd(7, -4, 0.00031913787795701800);\n    rd(7, -3, 0.00052444135340113990);\n    rd(7, -2, 0.00074569591082188883);\n    rd(7, -1, 0.00092041851992801394);\n    rd(7, 0, 0.00098697287554826369);\n    rd(7, 1, 0.00092041851992801394);\n    rd(7, 2, 0.00074569591082188883);\n    rd(7, 3, 0.00052444135340113979);\n    rd(7, 4, 0.00031913787795701795);\n    rd(7, 5, 0.00016754712174919697);\n    rd(7, 6, 0.00007538061827112969);\n    rd(7, 7, 0.00002888524848168964);\n    rd(7, 8, 0.00000929907395788801);\n    rd(7, 9, 0.00000248503662018560);\n    rd(7, 10, 0.00000053364003962880);\n    rd(7, 11, 0.00000008982060072960);\n    rd(7, 12, 0.00000001056712949760);\n    rd(7, 13, 0.00000000081285611520);\n    rd(8, -12, 0.00000000132089118720);\n    rd(8, -11, 0.00000001585069424640);\n    rd(8, -10, 0.00000012240258334720);\n    rd(8, -9, 0.00000065868440535040);\n    rd(8, -8, 0.00000276550584893440);\n    rd(8, -7, 0.00000929907395788801);\n    rd(8, -6, 0.00002586569122775043);\n    rd(8, -5, 0.00006022735457157127);\n    rd(8, -4, 0.00011900172883722257);\n    rd(8, -3, 0.00020066450559467548);\n    rd(8, -2, 0.00029064219076853793);\n    rd(8, -1, 0.00036239509993553961);\n    rd(8, 0, 0.00039008920938741809);\n    rd(8, 1, 0.00036239509993553966);\n    rd(8, 2, 0.00029064219076853793);\n    rd(8, 3, 0.00020066450559467545);\n    rd(8, 4, 0.00011900172883722254);\n    rd(8, 5, 0.00006022735457157127);\n    rd(8, 6, 0.00002586569122775043);\n    rd(8, 7, 0.00000929907395788801);\n    rd(8, 8, 0.00000276550584893440);\n    rd(8, 9, 0.00000065868440535040);\n    rd(8, 10, 0.00000012240258334720);\n    rd(8, 11, 0.00000001585069424640);\n    rd(8, 12, 0.00000000132089118720);\n    rd(9, -11, 0.00000000176118824960);\n    rd(9, -10, 0.00000001937307074560);\n    rd(9, -9, 0.00000013561149521920);\n    rd(9, -8, 0.00000065868440535040);\n    rd(9, -7, 0.00000248503662018560);\n    rd(9, -6, 0.00000747624411955201);\n    rd(9, -5, 0.00001852946157404162);\n    rd(9, -4, 0.00003826357591080965);\n    rd(9, -3, 0.00006673345491763210);\n    rd(9, -2, 0.00009877353345843213);\n    rd(9, -1, 0.00012484237097697295);\n    rd(9, 0, 0.00013488317613998099);\n    rd(9, 1, 0.00012484237097697297);\n    rd(9, 2, 0.00009877353345843213);\n    rd(9, 3, 0.00006673345491763209);\n    rd(9, 4, 0.00003826357591080965);\n    rd(9, 5, 0.00001852946157404162);\n    rd(9, 6, 0.00000747624411955201);\n    rd(9, 7, 0.00000248503662018560);\n    rd(9, 8, 0.00000065868440535040);\n    rd(9, 9, 0.00000013561149521920);\n    rd(9, 10, 0.00000001937307074560);\n    rd(9, 11, 0.00000000176118824960);\n    rd(10, -10, 0.00000000193730707456);\n    rd(10, -9, 0.00000001937307074560);\n    rd(10, -8, 0.00000012240258334720);\n    rd(10, -7, 0.00000053364003962880);\n    rd(10, -6, 0.00000179905379696640);\n    rd(10, -5, 0.00000481015734730753);\n    rd(10, -4, 0.00001054274381414401);\n    rd(10, -3, 0.00001913463295180802);\n    rd(10, -2, 0.00002915206850150404);\n    rd(10, -1, 0.00003740831580160005);\n    rd(10, 0, 0.00004066530832678917);\n    rd(10, 1, 0.00003740831580160005);\n    rd(10, 2, 0.00002915206850150403);\n    rd(10, 3, 0.00001913463295180802);\n    rd(10, 4, 0.00001054274381414401);\n    rd(10, 5, 0.00000481015734730753);\n    rd(10, 6, 0.00000179905379696640);\n    rd(10, 7, 0.00000053364003962880);\n    rd(10, 8, 0.00000012240258334720);\n    rd(10, 9, 0.00000001937307074560);\n    rd(10, 10, 0.00000000193730707456);\n    rd(11, -9, 0.00000000176118824960);\n    rd(11, -8, 0.00000001585069424640);\n    rd(11, -7, 0.00000008982060072960);\n    rd(11, -6, 0.00000034871527342080);\n    rd(11, -5, 0.00000104208153968640);\n    rd(11, -4, 0.00000245238689955840);\n    rd(11, -3, 0.00000470237262643201);\n    rd(11, -2, 0.00000740511920947201);\n    rd(11, -1, 0.00000970997272412161);\n    rd(11, 0, 0.00001060953349160961);\n    rd(11, 1, 0.00000970997272412161);\n    rd(11, 2, 0.00000740511920947201);\n    rd(11, 3, 0.00000470237262643201);\n    rd(11, 4, 0.00000245238689955840);\n    rd(11, 5, 0.00000104208153968640);\n    rd(11, 6, 0.00000034871527342080);\n    rd(11, 7, 0.00000008982060072960);\n    rd(11, 8, 0.00000001585069424640);\n    rd(11, 9, 0.00000000176118824960);\n    rd(12, -8, 0.00000000132089118720);\n    rd(12, -7, 0.00000001056712949760);\n    rd(12, -6, 0.00000005324207554560);\n    rd(12, -5, 0.00000018207976980480);\n    rd(12, -4, 0.00000047694332559360);\n    rd(12, -3, 0.00000097461448212480);\n    rd(12, -2, 0.00000161026796421120);\n    rd(12, -1, 0.00000215975869808640);\n    rd(12, 0, 0.00000238527546654720);\n    rd(12, 1, 0.00000215975869808640);\n    rd(12, 2, 0.00000161026796421120);\n    rd(12, 3, 0.00000097461448212480);\n    rd(12, 4, 0.00000047694332559360);\n    rd(12, 5, 0.00000018207976980480);\n    rd(12, 6, 0.00000005324207554560);\n    rd(12, 7, 0.00000001056712949760);\n    rd(12, 8, 0.00000000132089118720);\n    rd(13, -7, 0.00000000081285611520);\n    rd(13, -6, 0.00000000568999280640);\n    rd(13, -5, 0.00000002519853957120);\n    rd(13, -4, 0.00000007478276259840);\n    rd(13, -3, 0.00000016907407196160);\n    rd(13, -2, 0.00000029425391370240);\n    rd(13, -1, 0.00000040988269608960);\n    rd(13, 0, 0.00000045540263854080);\n    rd(13, 1, 0.00000040988269608960);\n    rd(13, 2, 0.00000029425391370240);\n    rd(13, 3, 0.00000016907407196160);\n    rd(13, 4, 0.00000007478276259840);\n    rd(13, 5, 0.00000002519853957120);\n    rd(13, 6, 0.00000000568999280640);\n    rd(13, 7, 0.00000000081285611520);\n    rd(14, -6, 0.00000000040642805760);\n    rd(14, -5, 0.00000000243856834560);\n    rd(14, -4, 0.00000000934784532480);\n    rd(14, -3, 0.00000002357282734080);\n    rd(14, -2, 0.00000004501190737920);\n    rd(14, -1, 0.00000006482527518720);\n    rd(14, 0, 0.00000007367703920640);\n    rd(14, 1, 0.00000006482527518720);\n    rd(14, 2, 0.00000004501190737920);\n    rd(14, 3, 0.00000002357282734080);\n    rd(14, 4, 0.00000000934784532480);\n    rd(14, 5, 0.00000000243856834560);\n    rd(14, 6, 0.00000000040642805760);\n    rd(15, -5, 0.00000000016257122304);\n    rd(15, -4, 0.00000000081285611520);\n    rd(15, -3, 0.00000000264178237440);\n    rd(15, -2, 0.00000000548677877760);\n    rd(15, -1, 0.00000000857085050880);\n    rd(15, 0, 0.00000000974949187584);\n    rd(15, 1, 0.00000000857085050880);\n    rd(15, 2, 0.00000000548677877760);\n    rd(15, 3, 0.00000000264178237440);\n    rd(15, 4, 0.00000000081285611520);\n    rd(15, 5, 0.00000000016257122304);\n    rd(16, -4, 0.00000000005080350720);\n    rd(16, -3, 0.00000000020321402880);\n    rd(16, -2, 0.00000000054389637120);\n    rd(16, -1, 0.00000000088457871360);\n    rd(16, 0, 0.00000000107484282880);\n    rd(16, 1, 0.00000000088457871360);\n    rd(16, 2, 0.00000000054389637120);\n    rd(16, 3, 0.00000000020321402880);\n    rd(16, 4, 0.00000000005080350720);\n    rd(17, -3, 0.00000000001195376640);\n    rd(17, -2, 0.00000000003586129920);\n    rd(17, -1, 0.00000000007570718720);\n    rd(17, 0, 0.00000000008766095360);\n    rd(17, 1, 0.00000000007570718720);\n    rd(17, 2, 0.00000000003586129920);\n    rd(17, 3, 0.00000000001195376640);\n    rd(18, -2, 0.00000000000199229440);\n    rd(18, -1, 0.00000000000398458880);\n    rd(18, 0, 0.00000000000618659840);\n    rd(18, 1, 0.00000000000398458880);\n    rd(18, 2, 0.00000000000199229440);\n    rd(19, -1, 0.00000000000020971520);\n    rd(19, 0, 0.00000000000020971520);\n    rd(19, 1, 0.00000000000020971520);\n    rd(20, 0, 0.00000000000001048576);\n    fragColor = vec4(0.0, 0.0, result, 1.0);\n}","name":"Buf C","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"//GRADIENT SUBTRACTION\nint kA=65,kB=66,kC=67,kD=68,kE=69,kF=70,kG=71,kH=72,kI=73,kJ=74,kK=75,kL=76,kM=77,kN=78,kO=79,kP=80,kQ=81,kR=82,kS=83,kT=84,kU=85,kV=86,kW=87,kX=88,kY=89,kZ=90;\nint k0=48,k1=49,k2=50,k3=51,k4=52,k5=53,k6=54,k7=55,k8=56,k9=57;\nint kSpace=32,kLeft=37,kUp=38,kRight=39,kDown=40,kCtrl=17;\nbool ReadKey(int key)\n{\n\tfloat keyVal = texture( iChannel3, vec2( (float(key)+.5)/256.0, .25 ) ).x;\n\treturn keyVal > 0.0;\n}\n\nvec2 fc;\nvec4 rd(int x,int y)\n{\n    return texture(iChannel2, (fc+vec2(x,y))/iResolution.xy);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fc = fragCoord;\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 self = texture(iChannel0, fragCoord.xy/iResolution.xy);\n    \n    vec4 left = rd(-1, 0);\n    vec4 right = rd(1, 0);\n    vec4 top = rd(0, 1);\n    vec4 bottom = rd(0, -1);\n    \n    vec2 velAdd = vec2(left.z - right.z, bottom.z - top.z) * 0.5;\n    float temp = self.z;\n    velAdd.y += temp * 0.001;\n\n\tif(ReadKey(kA) && iMouse.z > 0.0 && distance(iMouse.xy, fragCoord) < 10.0)\n    {\n        temp += 0.5;\n    }\n\n    fragColor = vec4(self.xy + velAdd, temp, 1.0);\n}","name":"Buf D","description":"","type":"buffer"}]}