{"ver":"0.1","info":{"id":"ftBcWm","date":"1649757326","viewed":47,"name":"simplest3D","username":"yoquo","description":"simplest3D","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["etude"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat DistLine(vec3 ro,vec3 rd, vec3 p){\n    return length(cross(p-ro,rd)/length(rd));\n}\nfloat DrawPoint(vec3 ro,vec3 rd, vec3 p){\n    float d = DistLine(ro,rd,p);//どうしてdを求めないといけないのか分からない\n    d = smoothstep(.1,.09,d);\n    return d;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 ro = vec3(0.,0.,-6.); //これは点\n    vec3 rd = vec3(uv.x,uv.y,0.) -ro; //これはベクトル\n    float t = iTime;\n    \n    //vec3 p = vec3(sin(t),0.,1.+cos(t)); //これは対象の点\n    vec3 p = vec3(sin(t),0.,cos(t));\n    float d = DrawPoint(ro,rd,p);\n    fragColor = vec4(vec3(d),1.);\n    \n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}