{"ver":"0.1","info":{"id":"MX3SRS","date":"1719197532","viewed":181,"name":"Claude 3.5 Sonnet GPUS.COM","username":"balaban","description":"AI generated shader generated by claude-3.5 sonnet and me. Took some edits and suggestions but it did work!","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["claude","ai"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 textPosition = vec2(200.0, 50.0);  // Initial position\nvec2 textVelocity = vec2(10.0, 10.0);     // Initial velocity\n\nbool isTextCell(ivec2 cell, vec2 textPosition) {\n    vec2 relativePos = vec2(cell) - textPosition;\n    ivec2 textCell = ivec2(relativePos);\n\n    // G\n    if(textCell.x >= 10 && textCell.x <= 60 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 10 && textCell.x <= 20) || (textCell.y >= 20 && textCell.y <= 30) || (textCell.y >= 90 && textCell.y <= 100) || \n           (textCell.x >= 50 && textCell.x <= 60 && textCell.y >= 20 && textCell.y <= 60) || \n           (textCell.y >= 50 && textCell.y <= 60 && textCell.x >= 40 && textCell.x <= 60))\n            return true;\n    }\n    // P\n    if(textCell.x >= 70 && textCell.x <= 120 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 70 && textCell.x <= 80) || (textCell.y >= 90 && textCell.y <= 100) || \n           (textCell.x >= 110 && textCell.x <= 120 && textCell.y >= 60 && textCell.y <= 100) || \n           (textCell.y >= 60 && textCell.y <= 70))\n            return true;\n    }\n    // U\n    if(textCell.x >= 130 && textCell.x <= 180 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 130 && textCell.x <= 140) || (textCell.x >= 170 && textCell.x <= 180) || \n           (textCell.y >= 20 && textCell.y <= 30))\n            return true;\n    }\n    // S\n    if(textCell.x >= 190 && textCell.x <= 240 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.y >= 20 && textCell.y <= 30) || (textCell.y >= 55 && textCell.y <= 65) || (textCell.y >= 90 && textCell.y <= 100) || \n           (textCell.x >= 190 && textCell.x <= 200 && textCell.y >= 60 && textCell.y <= 100) || \n           (textCell.x >= 230 && textCell.x <= 240 && textCell.y >= 20 && textCell.y <= 60))\n            return true;\n    }\n    // .\n    if(textCell.x >= 250 && textCell.x <= 270 && textCell.y >= 20 && textCell.y <= 40)\n        return true;\n    // C\n    if(textCell.x >= 280 && textCell.x <= 330 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 280 && textCell.x <= 290) || (textCell.y >= 20 && textCell.y <= 30) || (textCell.y >= 90 && textCell.y <= 100))\n            return true;\n    }\n    // O\n    if(textCell.x >= 340 && textCell.x <= 390 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 340 && textCell.x <= 350) || (textCell.x >= 380 && textCell.x <= 390) || \n           (textCell.y >= 20 && textCell.y <= 30) || (textCell.y >= 90 && textCell.y <= 100))\n            return true;\n    }\n    // M (corrected)\n    if(textCell.x >= 400 && textCell.x <= 450 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 400 && textCell.x <= 410) || (textCell.x >= 440 && textCell.x <= 450) || \n           (textCell.x >= 420 && textCell.x <= 430 && textCell.y >= 60 && textCell.y <= 100) ||\n           (textCell.y >= 100 - (textCell.x - 400) && textCell.y <= 110 - (textCell.x - 400) && textCell.x >= 400 && textCell.x <= 425) || \n           (textCell.y >= 100 - (450 - textCell.x) && textCell.y <= 110 - (450 - textCell.x) && textCell.x >= 425 && textCell.x <= 450))\n            return true;\n    }\n    return false;\n}\n\nint countNeighbors(ivec2 cell, vec2 textPosition) {\n    int count = 0;\n    for (int i = -1; i <= 1; i++) {\n        for (int j = -1; j <= 1; j++) {\n            if (i == 0 && j == 0) continue;\n            ivec2 neighbor = cell + ivec2(i, j);\n            if (isTextCell(neighbor, textPosition)) count++;\n            else if (texelFetch(iChannel0, neighbor, 0).r > 0.5) count++;\n        }\n    }\n    return count;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 textPosition = texelFetch(iChannel1, ivec2(0,0), 0).xy;\n    \n    ivec2 cell = ivec2(fragCoord);\n    \n    if (isTextCell(cell, textPosition)) {\n        fragColor = vec4(0.5, 0.0, 0.5, 1.0); // Purple for text cells\n        return;\n    }\n    \n    float currentState = texelFetch(iChannel0, cell, 0).r;\n    int neighbors = countNeighbors(cell, textPosition);\n    \n    float newState = currentState;\n    if (currentState > 0.5) {\n        if (neighbors < 2 || neighbors > 3) newState = 0.0;\n    } else {\n        if (neighbors == 3) newState = 1.0;\n    }\n    \n    if (iFrame == 0) {\n        newState = fract(sin(dot(vec2(cell), vec2(12.9898, 78.233))) * 43758.5453) > 0.8 ? 1.0 : 0.0;\n    }\n    \n    fragColor = vec4(newState, newState, newState, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 textPosition = vec2(200.0, 50.0);  // Initial position\nvec2 textVelocity = vec2(10.0, 10.0);     // Initial velocity\n\nbool isTextCell(ivec2 cell, vec2 textPosition) {\n    vec2 relativePos = vec2(cell) - textPosition;\n    ivec2 textCell = ivec2(relativePos);\n\n    // G\n    if(textCell.x >= 10 && textCell.x <= 60 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 10 && textCell.x <= 20) || (textCell.y >= 20 && textCell.y <= 30) || (textCell.y >= 90 && textCell.y <= 100) || \n           (textCell.x >= 50 && textCell.x <= 60 && textCell.y >= 20 && textCell.y <= 60) || \n           (textCell.y >= 50 && textCell.y <= 60 && textCell.x >= 40 && textCell.x <= 60))\n            return true;\n    }\n    // P\n    if(textCell.x >= 70 && textCell.x <= 120 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 70 && textCell.x <= 80) || (textCell.y >= 90 && textCell.y <= 100) || \n           (textCell.x >= 110 && textCell.x <= 120 && textCell.y >= 60 && textCell.y <= 100) || \n           (textCell.y >= 60 && textCell.y <= 70))\n            return true;\n    }\n    // U\n    if(textCell.x >= 130 && textCell.x <= 180 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 130 && textCell.x <= 140) || (textCell.x >= 170 && textCell.x <= 180) || \n           (textCell.y >= 20 && textCell.y <= 30))\n            return true;\n    }\n    // S\n    if(textCell.x >= 190 && textCell.x <= 240 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.y >= 20 && textCell.y <= 30) || (textCell.y >= 55 && textCell.y <= 65) || (textCell.y >= 90 && textCell.y <= 100) || \n           (textCell.x >= 190 && textCell.x <= 200 && textCell.y >= 60 && textCell.y <= 100) || \n           (textCell.x >= 230 && textCell.x <= 240 && textCell.y >= 20 && textCell.y <= 60))\n            return true;\n    }\n    // .\n    if(textCell.x >= 250 && textCell.x <= 270 && textCell.y >= 20 && textCell.y <= 40)\n        return true;\n    // C\n    if(textCell.x >= 280 && textCell.x <= 330 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 280 && textCell.x <= 290) || (textCell.y >= 20 && textCell.y <= 30) || (textCell.y >= 90 && textCell.y <= 100))\n            return true;\n    }\n    // O\n    if(textCell.x >= 340 && textCell.x <= 390 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 340 && textCell.x <= 350) || (textCell.x >= 380 && textCell.x <= 390) || \n           (textCell.y >= 20 && textCell.y <= 30) || (textCell.y >= 90 && textCell.y <= 100))\n            return true;\n    }\n    // M (corrected)\n    if(textCell.x >= 400 && textCell.x <= 450 && textCell.y >= 20 && textCell.y <= 100) {\n        if((textCell.x >= 400 && textCell.x <= 410) || (textCell.x >= 440 && textCell.x <= 450) || \n           (textCell.x >= 420 && textCell.x <= 430 && textCell.y >= 60 && textCell.y <= 100) ||\n           (textCell.y >= 100 - (textCell.x - 400) && textCell.y <= 110 - (textCell.x - 400) && textCell.x >= 400 && textCell.x <= 425) || \n           (textCell.y >= 100 - (450 - textCell.x) && textCell.y <= 110 - (450 - textCell.x) && textCell.x >= 425 && textCell.x <= 450))\n            return true;\n    }\n    return false;\n}\n\nint countNeighbors(ivec2 cell, vec2 textPosition) {\n    int count = 0;\n    for (int i = -1; i <= 1; i++) {\n        for (int j = -1; j <= 1; j++) {\n            if (i == 0 && j == 0) continue;\n            ivec2 neighbor = cell + ivec2(i, j);\n            if (isTextCell(neighbor, textPosition)) count++;\n            else if (texelFetch(iChannel0, neighbor, 0).r > 0.5) count++;\n        }\n    }\n    return count;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 textPosition = texelFetch(iChannel1, ivec2(0,0), 0).xy;\n    \n    ivec2 cell = ivec2(fragCoord);\n    \n    if (isTextCell(cell, textPosition)) {\n        fragColor = vec4(0.5, 0.0, 0.5, 1.0); // Purple for text cells\n        return;\n    }\n    \n    float currentState = texelFetch(iChannel0, cell, 0).r;\n    int neighbors = countNeighbors(cell, textPosition);\n    \n    float newState = currentState;\n    if (currentState > 0.5) {\n        if (neighbors < 2 || neighbors > 3) newState = 0.0;\n    } else {\n        if (neighbors == 3) newState = 1.0;\n    }\n    \n    if (iFrame == 0) {\n        newState = fract(sin(dot(vec2(cell), vec2(12.9898, 78.233))) * 43758.5453) > 0.8 ? 1.0 : 0.0;\n    }\n    \n    fragColor = vec4(newState, newState, newState, 1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 textPosition = iFrame == 0 ? vec2(200.0, 50.0) : texelFetch(iChannel0, ivec2(0,0), 0).xy;\n    vec2 textVelocity = iFrame == 0 ? vec2(1.0, 1.0) : texelFetch(iChannel0, ivec2(1,0), 0).xy;\n    \n    textPosition += textVelocity;\n    \n    // Bounce off the edges\n    if (textPosition.x < 0.0 || textPosition.x + 450.0 > iResolution.x) {\n        textVelocity.x *= -1.0;\n    }\n    if (textPosition.y < 0.0 || textPosition.y + 100.0 > iResolution.y) {\n        textVelocity.y *= -1.0;\n    }\n    \n    // Store updated position and velocity\n    if (fragCoord.y < 1.0) {\n        fragColor = (fragCoord.x < 1.0) ? vec4(textPosition, 0.0, 1.0) : vec4(textVelocity, 0.0, 1.0);\n    } else {\n        discard;\n    }\n}","name":"Buffer B","description":"","type":"buffer"}]}