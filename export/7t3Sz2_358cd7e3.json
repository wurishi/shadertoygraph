{"ver":"0.1","info":{"id":"7t3Sz2","date":"1639404013","viewed":64,"name":"ukf-like logo","username":"nexor","description":".","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["2d","mix","sdf","fade"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = texelFetch(iChannel0, ivec2(fragCoord.xy),0).rgb;\n    \n    col = pow(col,vec3(1./2.2));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"mat2 rot(float a)\n{\n    float c=cos(a),s=sin(a);\n    return mat2(c,-s,s,c);\n}\n\nvec2 map(vec2 p, float r, float t)\n{\n    t*=.1;\n    p.y+=r;\n    //p*=rot(t*.1);\n    p.y*=1.+.2*cos(t*3.43);\n    p.x-=cos(t*5.7)*.2*p.y;\n    //p*=rot(-t*.1);\n   //p.x*=smoothstep(1.5,1.,p.y);\n    p.y-=r;\n    return p;\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float noise(vec2 p)\n{\n    return texture(iChannel0,p).x;\n}\n\n\n\nmat2 M;\n\nfloat fbm(vec2 p)\n{\n    \n    float n = 0.;\n    n+=noise(p)*.5000; p*=M*2.01;\n    n+=noise(p)*.2500; p*=M*2.02;\n    n+=noise(p)*.1250; p*=M*2.03;\n    n+=noise(p)*.0625;\n    \n    return n/.9375;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    M  = rot(1./7.);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 p = (2.*fragCoord-iResolution.xy)/max(iResolution.x,iResolution.y);\n\n    vec3 col = vec3(0);\n    \n    float r = .7;\n    float t = iTime*2.5;\n    //r -= fbm(p/35.-vec2(cos(t)*.2,t)*.02);\n    \n    r = .3;\n    p = map(p,r,t);\n    \n    \n    float d = length(p)-r;\n    d = smoothstep(0.,fwidth(d)*1.5,d);\n    \n    col += d;\n    col = 1.-col;\n    \n    \n    //col = pow(col,vec3(1./2.2));\n    \n    //if(iFrame>0)\n    {\n    col = mix(\n    col*\n    mix(vec3(.5,1.,.7)\n    ,vec3(.0,.1,1.),smoothstep(-.3,.3,p.x+.2))\n    ,\n    texelFetch(iChannel1,ivec2(fragCoord.xy),0).rgb\n    //*vec3(.4,.75,1.)\n    ,.9975);\n    }\n    \n    //col = vec3(0)+smoothstep(-.3,.3,p.x);\n    \n    //col = vec3(smoothstep(-1.5,1.5,p.x));\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float noise(vec2 p)\n{\n    return texture(iChannel0,p).x;\n}\n\n\n\nmat2 M;\n\nfloat fbm(vec2 p)\n{\n    \n    float n = 0.;\n    n+=noise(p)*.5000; p*=M*2.01;\n    n+=noise(p)*.2500; p*=M*2.02;\n    n+=noise(p)*.1250; p*=M*2.03;\n    n+=noise(p)*.0625;\n    \n    return n/.9375;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    M  = rot(1./7.);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 p = (2.*fragCoord-iResolution.xy)/max(iResolution.x,iResolution.y);\n\n    vec3 col = vec3(0);\n    \n    float r = .7;\n    float t = iTime*2.5;\n    //r -= fbm(p/35.-vec2(cos(t)*.2,t)*.02);\n    \n    r = .3;\n    p = map(p,r,t);\n    \n    \n    float d = length(p)-r;\n    d = smoothstep(0.,fwidth(d)*1.5,d);\n    \n    col += d;\n    col = 1.-col;\n    \n    \n    //col = pow(col,vec3(1./2.2));\n    \n    //if(iFrame>0)\n    {\n    col = mix(\n    col*\n    mix(vec3(.5,1.,.7)\n    ,vec3(.0,.1,1.),smoothstep(-.3,.3,p.x+.2))\n    ,\n    texelFetch(iChannel1,ivec2(fragCoord.xy),0).rgb\n    //*vec3(.4,.75,1.)\n    ,.9975);\n    }\n    \n    //col = vec3(0)+smoothstep(-.3,.3,p.x);\n    \n    //col = vec3(smoothstep(-1.5,1.5,p.x));\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"float noise(vec2 p)\n{\n    return texture(iChannel0,p).x;\n}\n\n\n\nmat2 M;\n\nfloat fbm(vec2 p)\n{\n    \n    float n = 0.;\n    n+=noise(p)*.5000; p*=M*2.01;\n    n+=noise(p)*.2500; p*=M*2.02;\n    n+=noise(p)*.1250; p*=M*2.03;\n    n+=noise(p)*.0625;\n    \n    return n/.9375;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    M  = rot(1./7.);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 p = (2.*fragCoord-iResolution.xy)/max(iResolution.x,iResolution.y);\n\n    vec3 col = vec3(0);\n    \n    float r = .7;\n    float t = iTime*2.5;\n    //r -= fbm(p/35.-vec2(cos(t)*.2,t)*.02);\n    \n    r = .3;\n    p = map(p,r,t);\n    \n    \n    float d = length(p)-r;\n    d = smoothstep(0.,fwidth(d)*1.5,d);\n    \n    col += d;\n    col = 1.-col;\n    \n    \n    //col = pow(col,vec3(1./2.2));\n    \n    //if(iFrame>0)\n    {\n    col = mix(\n    col*\n    mix(vec3(.5,1.,.7)\n    ,vec3(.0,.1,1.),smoothstep(-.3,.3,p.x+.2))\n    ,\n    texelFetch(iChannel1,ivec2(fragCoord.xy),0).rgb\n    //*vec3(.4,.75,1.)\n    ,.9975);\n    }\n    \n    //col = vec3(0)+smoothstep(-.3,.3,p.x);\n    \n    //col = vec3(smoothstep(-1.5,1.5,p.x));\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"float noise(vec2 p)\n{\n    return texture(iChannel0,p).x;\n}\n\n\n\nmat2 M;\n\nfloat fbm(vec2 p)\n{\n    \n    float n = 0.;\n    n+=noise(p)*.5000; p*=M*2.01;\n    n+=noise(p)*.2500; p*=M*2.02;\n    n+=noise(p)*.1250; p*=M*2.03;\n    n+=noise(p)*.0625;\n    \n    return n/.9375;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    M  = rot(1./7.);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 p = (2.*fragCoord-iResolution.xy)/max(iResolution.x,iResolution.y);\n\n    vec3 col = vec3(0);\n    \n    float r = .7;\n    float t = iTime*2.5;\n    //r -= fbm(p/35.-vec2(cos(t)*.2,t)*.02);\n    \n    r = .3;\n    p = map(p,r,t);\n    \n    \n    float d = length(p)-r;\n    d = smoothstep(0.,fwidth(d)*1.5,d);\n    \n    col += d;\n    col = 1.-col;\n    \n    \n    //col = pow(col,vec3(1./2.2));\n    \n    //if(iFrame>0)\n    {\n    col = mix(\n    col*\n    mix(vec3(.5,1.,.7)\n    ,vec3(.0,.1,1.),smoothstep(-.3,.3,p.x+.2))\n    ,\n    texelFetch(iChannel1,ivec2(fragCoord.xy),0).rgb\n    //*vec3(.4,.75,1.)\n    ,.9975);\n    }\n    \n    //col = vec3(0)+smoothstep(-.3,.3,p.x);\n    \n    //col = vec3(smoothstep(-1.5,1.5,p.x));\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}