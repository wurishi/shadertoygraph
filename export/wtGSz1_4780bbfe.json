{"ver":"0.1","info":{"id":"wtGSz1","date":"1582173208","viewed":376,"name":"embers","username":"LucasWilson","description":"weird problem where they all line up sometimes that i can't figure out other than that its ok i guess","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["particles","trails","embers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GRID_SCALE vec2(10.,1.)\n#define PARTICLE_SWAY_SCALE 1.\n#define PARTICLE_SIZE_SCALE .6\n#define PARTICLE_SPEED_SCALE 1.4\n\nfloat r21(vec2 p) {\n\treturn fract(sin(dot(p.xy ,vec2(12.9898,78.233))) * 4558.5453);\n}\n\nvec2 r22(vec2 p) {\n    float f = r21(p);\n    return vec2( f, floor(f)+fract(fract(f)*100.) );\n}\n\nfloat column(vec2 p) {\n    return floor(p.x);\n}\n\nvec2 cell_to_screen(vec2 cell_pos, float column_id) {\n    return vec2(column_id + cell_pos.x/10., cell_pos.y);\n}\n\nvec3 column_paint(float column_id, vec2 cell_pos, float offs, float depth) {\n    vec3 col;\n    \n    for (float i=1.;i<=20.;i++) {\n        float transparency_scale = (10.-depth)/10.;\n        \n        float scale = (20.3-i)/20. * PARTICLE_SIZE_SCALE;\n        \n        float time = mix(iTime,iTime*(1.-transparency_scale),.5) * PARTICLE_SPEED_SCALE  -.005*i + depth*1125.634;\n        \n        float offsY = time + column_id;\n        float randY = 5. + r21(vec2(column_id)+.6); \n\n        vec2 fake_dot_pos = vec2(.5 + PARTICLE_SWAY_SCALE * cos(time+column_id*23.+depth*12546.325346345673457),mod(offsY + randY,1.));\n\n        col += smoothstep(.007*scale,0.,distance(cell_to_screen(cell_pos, column_id),vec2(offs*.1,0)+cell_to_screen(fake_dot_pos,column_id)));\n        col += vec3(1.,.7,0.) * .5 * smoothstep(.015*scale,0.,distance(cell_to_screen(cell_pos, column_id),vec2(offs*.1,0)+cell_to_screen(fake_dot_pos,column_id)));\n    \n    }\n    \n    return col;\n}\n\nvec3 layer(float depth, vec2 uv) {\n    vec3 col;\n    vec2 p = uv.xy * GRID_SCALE;\n    vec2 cell_pos = mod(p,1.);\n   \n    float column_id = column(p);\n    \n    col += column_paint(column_id-1.+depth*22., cell_pos,-1.,depth);\n    col += column_paint(column_id+depth*22., cell_pos, 0.,depth);\n    col += column_paint(column_id+1.+depth*22., cell_pos,1., depth);\n    \n    return col*depth/10.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec3 col;\n    \n    col += vec3(0.,.35,1.)*.125;\n    col += vec3(1.,.4,.1) * (1.-uv.y) * (.3 + .02*cos(iTime*15.));\n    col += vec3(1.,.4,.1) * .01*cos(iTime*23.+2.3);\n    \n    for (float x = 1.; x<10.; x++) {\n    \tcol += layer(x, uv);\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}