{"ver":"0.1","info":{"id":"tscSzr","date":"1571305685","viewed":306,"name":"wave in a stadium","username":"matthen","description":"see https://blog.matthen.com/post/172240828581/a-simulation-of-a-wave-inside-a-stadium-a","likes":15,"published":1,"flags":32,"usePreview":0,"tags":["2d","wave","automaton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// from https://www.shadertoy.com/view/ll2GD3\nvec3 gradient(in float t) {\t\n    vec3 a = vec3(.5, .5, .5);\n    vec3 b = vec3(.5, .5, .5);\n    vec3 c = vec3(1., 1., .5);\n    vec3 d = vec3(.8, .9, .3);\n    return a + b * cos(6.28318 * ( c * t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 p = ivec2(fragCoord);\n    vec2 val = texelFetch(iChannel0, p, 0).xy;\n    \n    vec3 col = gradient(val.x);\n    col *= (1. - val.y);\n    \n\tfragColor = vec4(col, 0.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"bool isEven(vec2 fragCoord) {\n\tivec2 intCoord = ivec2(fragCoord);\n    bool xEven = intCoord.x % 2 == 0;\n    bool yEven = intCoord.y % 2 == 0;\n    return (xEven && yEven) || (!xEven && !yEven);\n}\n\nfloat getCell(in vec2 p) {\n    // do wrapping\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    ivec2 pi = (ivec2(p) + r) % r;\n    \n    return texelFetch(iChannel0, pi, 0).x;\n}\n\nbool inStadium(in vec2 p) {\n    if (length(p - vec2(0.5, 0.)) < .3) {\n    \treturn true;   \n    }\n    if (length(p - vec2(-0.5, 0.)) < .3) {\n    \treturn true;   \n    }\n    if (abs(p.y) < 0.3 && abs(p.x) < 0.5) {\n        return true;\n    }\n    return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    \n    if (!inStadium(uv)) {\n        fragColor = vec4(0., 1., 0., 0.);\n    \treturn;   \n    }\n    \n    \n    if (iFrame == 0) {\n        float val = 2. * smoothstep(\n            0.05, 0.04,\n            pow(pow(uv.x -uv. y + 0.4, 4.) + pow(uv.y + 0.1, 4.), 0.25));\n        fragColor = vec4(val, 0., 0., 0.);\n        return;\n    } \n        \n       \n    \n    bool frameIsEven = (iFrame % 2) == 0;\n    \n    \n    float thisCell = getCell(fragCoord);\n    float val = thisCell;\n    if (frameIsEven == isEven(fragCoord)) {\n        vec3 c = vec3(1., -1., 0.);\n        val = .5 *(\n            getCell(fragCoord + c.zx)\n            + getCell(fragCoord + c.zy)\n            + getCell(fragCoord + c.xz)\n            + getCell(fragCoord + c.yz)\n            - 2. * thisCell\n         );\n    }\n    fragColor = vec4(val, 0., 0., 1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}