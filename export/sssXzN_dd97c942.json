{"ver":"0.1","info":{"id":"sssXzN","date":"1618415270","viewed":59,"name":"3er shader","username":"bruveping","description":"Agradecimiento a Julian Puppo por su tutorial y orientaci√≥n https://www.youtube.com/watch?v=8--hS-PhRz8&t=615s","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shaderprincipiante"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//uniform vec4 c1;\n\n#define pi 3.14159265359\n\nfloat def(vec2 uv,float f);\nfloat def2(vec2 uv,float f);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n\n    \n    //variable de forma\n\tfloat e =  def(uv, 0.0);\n    \n    float e2 = def(uv, pi/5.0);\n    \n    float e3 = def2(uv,pi/3.0);\n    \n    e3 += e2*sin(e);\n    \n    e += e2*sin(e3);\n   // e = abs(e);\n\t \n\t//float f = sin(angulo*5.0);\n    \n    vec4 c1 = vec4(1.0,0.5,0.0,0.3);\n    vec4 c2 = vec4(0.3,0.5,0.1,0.3);\n     vec4 c3 = vec4(0.5,0.1,0.4,0.3);\n    \n    //c2.a es el alfa de C2, etc\n\n// variable final    \nvec4 fin = vec4(e)*c1*c1.a+ vec4(e2)*c2*c2.a+ vec4(e3)*c3*c3.a;\nfin = vec4(e3)*c3*c3.a+vec4(e)*c1*c1.a;\n\n\n\n    // Output to screen\n    fragColor = fin;\n}\n\n\nfloat def(vec2 uv, float f){\n\n\n\t//se define un punto\n\t\n\tvec2 p = vec2(0.5) - uv;\n    //float cant = 10.0;\n\tfloat cant = 5.0;\nfloat e = 0.0;\n\nfor (float i = 0.0; i < cant; i++) {\nvec2 p = vec2(0.5,1.0/cant) - uv;\n\t// el angulo\n\t\n\tfloat angulo = atan(p.x,p.y);\n\t\n\t// el radio\n\t\n\tfloat rad = length(p)*1.0; \n\ne+= sin(rad*4.0+f+sin(angulo*3.0+iTime)*2.0*pi);\n//e+=sin(rad*pi*cant+iTime+sin(angulo*50.0+sin(rad*pi*50.0))*0.5)+f;\ne+= sin(e*pi)*0.2;\n\n}\n\ne/= cant/4.0;\n\n//e = abs(e);\n\t\n\n\n\t//float e = sin(rad*pi*cant+iTime);\n    \n    //e = sin(rad*pi*cant+iTime+sin(angulo*5.0+sin(rad*pi*50.0))*0.5);\n    \n  //  e = sin(rad*pi*cant+iTime+sin(angulo*5.0)*0.5+sin(rad*pi*10.0))+f;    \n\nreturn abs(e);\n\n}\n\nfloat def2(vec2 uv, float f){\n\n\n\t//se define un punto\n\t\n\tvec2 p = vec2(0.5) - uv;\n    //float cant = 10.0;\n\tfloat cant = 5.0;\nfloat e = 0.0;\n\nfor (float i = 0.0; i < cant; i++) {\nvec2 p = vec2(0.5,1.0/cant) - uv;\n\t// el angulo\n\t\n\tfloat angulo = atan(p.x,p.y);\n\t\n\t// el radio\n\t\n\tfloat rad = length(p)*1.0; \n\n//e+= sin(rad*50.0+f+sin(angulo*3.0+iTime)*2.0*pi);\ne+=sin(rad*pi*cant+iTime+sin(angulo*10.0+sin(rad*pi*50.0))*0.5)+f;\ne+= sin(e*pi)*0.2;\n\n}\n\ne/= cant/4.0;\n\nreturn abs(e);\n\n}","name":"Image","description":"","type":"image"}]}