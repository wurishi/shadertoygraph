{"ver":"0.1","info":{"id":"st23zw","date":"1623620334","viewed":132,"name":"Shine On","username":"emodeman","description":"A morphing crystaline thingy.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm","perlin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A tweaked version of https://www.shadertoy.com/view/ll2GRt\n// with https://www.shadertoy.com/view/XtGyDR in the background\n\nvec3 MIX(vec3 x, vec3 y)\n{\n    return abs(x - y);\n}    \n\nfloat CV(vec3 c, vec2 uv)\n{\n    float size = 640.0 / iResolution.x * 0.003;\n    return 1.0 - clamp(size * (length(c.xy - uv) - c.z), 0.0, 1.0);\n}\n\nvec3 crystal(vec2 fc)\n{\n    vec3 O = vec3(0.0);\n    vec3 c;\n    for (float i = 0.0; i < 60.0; i += 4.5)\n    {\n        c = vec3(sin(i * 0.57 +  7.0 + iTime * 0.7),\n\t\t         sin(i * 0.59 - 15.0 - iTime * 0.65),\n\t\t         sin(i * 0.60        + iTime * 0.9)\n\t\t         ) * 0.75 + 0.75;\n        O = MIX(O, c * CV(vec3(sin(iTime * 0.50 + i / 4.5) * (iResolution.x / 2.0 - 60.0) + iResolution.x / 2.0,\n\t\t\t                   sin(iTime * 0.73 + i / 3.0) * (iResolution.y / 2.0 - 60.0) + iResolution.y / 2.0,\n\t\t\t                   0.0),\n \t\t                  fc));\n    }\n    return O;\n}\n\nmat2 rot2d(float angle)\n{\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nfloat r(float a, float b)\n{\n    return fract(sin(dot(vec2(a, b), vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat h(float a)\n{\n    return fract(sin(dot(a, dot(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat noise(vec3 x)\n{\n    vec3 p  = floor(x);\n    vec3 f  = fract(x);\n    f = f * f * (3.0 - 2.0 * f);\n    float n = p.x + p.y * 57.0 + 113.0 * p.z;\n    return mix(mix(mix(h(n), h(n + 1.0), f.x),\n                   mix(h(n + 57.0), h(n + 58.0), f.x), f.y),\n               mix(mix(h(n + 113.0), h(n + 114.0), f.x),\n                   mix(h(n + 170.0), h(n + 171.0), f.x), f.y), f.z);\n}\n\n// https://iquilezles.org/articles/morenoise\n// http://www.pouet.net/topic.php?post=401468\nvec3 dnoise2f(vec2 p)\n{\n    float i = floor(p.x), j = floor(p.y);\n    float u = p.x - i, v = p.y - j;\n    float du = 30.0 * u * u * (u * (u - 2.0) + 1.0);\n    float dv = 10.0 * v * v * (v * (v - 2.0) + 1.0);\n    u = u * u * u * (u * (u * 6.0 - 25.0) + 10.0);\n    v = v * v * v * (v * (v * 6.0 - 15.0) + 10.0);\n    float a = r(i, j);\n    float b = r(i + 1.0, j);\n    float c = r(i, j + 1.0);\n    float d = r(i + 1.0, j + 1.0);\n    float k0 = a;\n    float k1 = b - a;\n    float k2 = c - a;\n    float k3 = a - b - c + d;\n    return vec3(k0 + k1 * u + k2 * v + k3 * u * v,\n                du * (k1 + k3 * v),\n                dv * (k2 + k3 * u));\n}\n\nfloat fbm(vec2 uv)\n{               \n    vec2 p = uv;\n    float f, dx, dz, w = 0.5;\n    f = dx = dz = 0.0;\n    for (int i = 0; i < 28; ++i)\n    {        \n        vec3 n = dnoise2f(uv);\n        dx += n.y;\n        dz += n.z;\n        f += w * n.x / (1.0 + dx * dx + dz * dz);\n        w *= 0.86;\n        uv *= vec2(1.16);\n        uv *= rot2d(1.25 * noise(vec3(p * 0.1, 0.12 * iTime)) +\n                    0.75 * noise(vec3(p * 0.1, 0.20 * iTime)));\n    }\n    return f;\n}\n\nfloat fbmLow(vec2 uv)\n{\n    float f, dx, dz, w = 0.5;\n    f = dx = dz = 0.0;\n    for (int i = 0; i < 4; ++i)\n    {        \n        vec3 n = dnoise2f(uv);\n        dx += n.y;\n        dz += n.z;\n        f += w * n.x / (1.0 + dx * dx + dz * dz);\n        w *= 0.75;\n        uv *= vec2(1.5);\n    }\n    return f;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = 1.0 - 2.0 * (fragCoord / iResolution.xy);\n    uv.y /= iResolution.x / iResolution.y;\n    float t = iTime * 0.1;\n    \n    vec2 rv = uv / (length(uv * 2.5) * (uv * 30.0));\n    uv *= rot2d(0.3 * t);\n    float val = 0.5 * fbm(uv * 2.0 * fbmLow(length(uv) + rv - t));\n    uv *= rot2d(-0.6 * t);\n\n    float fc = 0.5 * fbm(uv * val * 8.0) + 0.02 * r(uv.x, uv.y);\n    vec3 fragC = 1.6 * vec3(fc);   \n    fragC *= 3.8;\n    fragC = fragC / (1.0 + fragC);\n    fragC = smoothstep(0.18, 0.88, fragC);\n    fragC = pow(fragC, crystal(fragCoord));\n    fragColor = vec4(fragC, 1.0);\n}","name":"Image","description":"","type":"image"}]}