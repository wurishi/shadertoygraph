{"ver":"0.1","info":{"id":"XcGcRt","date":"1732207573","viewed":102,"name":"Best donut sampling ever","username":"ademdj12","description":"this shader is a step in making 2d volumetric lighting, the inner radius is the light source radius, and the outer radius is the light maximum reach.","likes":0,"published":1,"flags":0,"usePreview":1,"tags":["uv","radial","tool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI    3.14159265358\n#define TWOPI 6.28318530718\n// inner radius of the donut\n#define r1 30.\n// outer radius of the donut\n#define r2 120.\n// donut angle\n#define startAngle PI/2.\n// donut center position\n#define donutPosition iResolution.xy / 2.\n\n\nfloat getAngle(vec2 v1, vec2 v2)\n{\n    /*\n        Calculating angle from v1 to v2\n    */\n    return mod( atan(v1.x,v1.y) - atan(v2.x,v2.y), TWOPI); //0 ... TWOPI\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // vector from donu center to pixel position\n    vec2 op = fragCoord - donutPosition;\n    \n    // radius of the circle on which this pixel lives\n    float r = length(op);\n    \n    // up vector for the donut\n    vec2 sv = vec2(cos(startAngle), sin(startAngle));\n    \n    // check if this pixel is in the donut\n    float d = r < r1 || r > r2 ? 0. : 1.;\n    \n    // regular uv for comparison\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    // donut uv \n    vec2 donutUv = vec2(\n        1.-getAngle(sv, op) / TWOPI,\n        (r-r1)/(r2-r1)\n        );\n        \n    // sampling with uv\n    vec4 img = texture(iChannel0,uv);\n    \n    //sampling with donut uv\n    vec4 imgDonut = texture(iChannel0,donutUv);\n\n    // mixing textires based on d\n    fragColor = mix(img,imgDonut,d);\n    \n}","name":"Image","description":"","type":"image"}]}