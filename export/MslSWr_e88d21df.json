{"ver":"0.1","info":{"id":"MslSWr","date":"1456828978","viewed":149,"name":"CafeRayTracing","username":"cafe","description":"CafeRayTracing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["caferaytracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float bounce(float x, float a){\n\treturn a-abs(a-mod(x,a*2.));\n}\n\nfloat distfloor(vec3 ro, vec3 rd){\n\treturn 2./rd.y;\n}\n\nfloat distsphere(vec3 ro, vec3 rd){\n\tfloat d1 = dot(-ro,rd);\n\tfloat d2 = sqrt(dot(ro,ro)-d1*d1);\n\tfloat d3 = sqrt(1.-d2*d2);\n\treturn d2<1.?d1-d3:-1.;\n}\n\nvec3 texskybox(vec3 p){\n\tfloat md=clamp(sin(p.y+iTime),0.9,1.)*-0.1+0.1;\n\tp.xz=vec2(cos(atan(p.x,p.z)+md),sin(atan(p.x,p.z)+md))*length(p.xz);\n\treturn (vec3(0.5,0.5,0.5)+sign(p)*vec3(0.2,0.,-0.3))*smoothstep(-0.1,0.1,sin(p.x*10.)*sin(p.y*10.)*sin(p.z*10.))*smoothstep(10.,3.,length(p))*1.5+md*2.;\n}\n\n\nfloat distskybox(vec3 ro, vec3 rd){\n\t\n\tvec3 t = abs(5./rd)-ro/rd;\n\t\n\treturn min(t.x,min(t.y,t.z));\n}\n\nvec3 texsphere(vec3 p, vec3 r){\n\t\n\tfloat difindex=2.;\n\t\n\tfloat md=dot(-p,r)*(1.-1./difindex);\n\t\n\tvec3 pr=normalize(r-p*md);\n\t\n\tvec3 pp=reflect(p,pr);\n\t\n\tpp=pp;\n\t\n\tfloat d=distskybox(pp,r);\n\tfloat d2=distskybox(p,reflect(r,p));\n\tvec3 color = texskybox(pp+r*d);\n\tvec3 color2 = texskybox(p+d2*reflect(r,p));\n\t\n\tcolor += color2*(0.5+2.*color);\n\n\treturn mix(color,vec3(0.7,0.9,1.),0.2);\t\n}\n\nfloat intersect(vec3 ro, vec3 rd, out float d){\n\tfloat d1=distskybox(ro,rd);\n\tfloat d2=distsphere(ro,rd);\n\t\n\tif(d2>0.){\n\t\td=d2;\n\t\treturn 2.;\n\t}\n\t\n\tif(d1>0.){\n\t\td=d1;\n\t\treturn 1.;\n\t}\n\treturn 0.;\t\n}\n\nvec3 shade(vec2 uv){\n\t\n\tvec3 ro = vec3(cos(iTime),sin(iTime),-4.);\n\tvec3 rd = normalize(vec3(uv,1.));\n\t\n\tvec3 color=vec3(1.,0.,1.);\n\t\n\tfloat d=0.;\n\tfloat i=intersect(ro,rd,d);\n\t\n\tvec3 p=ro+d*rd;\n\t\n\tif(i==1.)\n\t\tcolor=texskybox(p);\n\tif(i==2.){\n\t\tvec3 n=normalize(d*rd+ro);\t\n\t\t//color=n/2.+vec3(0.5);\n\t\tcolor=texsphere(p,rd);\n\t\tvec3 specvec = reflect(rd,n);\n\t\tcolor+=smoothstep(0.95,0.98,dot(specvec,normalize(vec3(1.,1.,-1.)-p)))*0.8-0.02;\n\t}\n\t\n\treturn color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n\tfragColor = vec4(shade(uv),1.0);\n}","name":"Image","description":"","type":"image"}]}