{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Fork of \"Ocean Eyes\" by wyatt. https://shadertoy.com/view/XftfW8\n// 2024-12-11 20:53:41\n\nMain {\n    T = iTime;\n    R = iResolution.xy;\n    if (iFrame%6!=5) discard;\n    Q = A(U*.8+.1*R);\n    //Q = vec4(length(Q.xy),length(Q),length(Q.zw),1);\n    Q = vec4(length(Q.xy),.707*length(Q),length(Q.zw),1);\n     \n     Q.xy *= ei(sin(iTime));\n   //Q = scene(2.*(U-.5*R)/R.y);\n   \n   \n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"vec2 R;\n#define Main void mainImage(out vec4 Q, in vec2 U)\n#define A(U) texelFetch(iChannel0,ivec2(U),0)\nfloat T;\n\n#define pi 3.14159265359\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nvec4 light(vec3 p, vec3 d) {\n    float l = length(d-normalize(vec3(-p.x,1,-p.y+1.5)));\n    return \n        exp(-.1-.04*p.z-.04*length(p))*((.01+.01*sin(2.5*d.x+p.x)*sin(10.*p.z+1.4*d.z))+\n            (.05+.05*sin(.3*d.x+p.x)*sin(p.z+.2*d.z))+\n            exp(-.1-.02*p.z)*(.01+.01*sin(14.*d.x-9.*p.x)*sin(-14.*p.z+13.*d.z))+\n            (.05+.05*sin(-14.*d.x+18.*p.x)*sin(-5.*p.z+10.*d.z))+\n    ((.5+.5*d.y)*vec4(.5,0,1.5,4))*.5*(exp(-.5*l*l))+\n    55.*(.5+.5*vec4(3,2,1,4))/(1.+10000.*l*l));\n}\nfloat w (float x) {\n    float s = sin(x);\n    return 1.*exp(.7*(s*s*s));\n}\n\nfloat map (vec3 p) {\n    return length(p)-.1;\n}\nvec3 normal(vec3 p) {\n    vec2 e = vec2(1e-4,0);\n    float m = map(p);\n    return normalize(vec3(\n        map(p+e.xyy)-m,\n        map(p+e.yxy)-m,\n        map(p+e.yyx)-m\n    ));\n}\nvec4 scene (vec2 u) {\n    vec4 Q = vec4(0);\n    u.y -= .5;\n    u *= .6;\n    for (float i = 1.; i<100.;i++) {\n        Q += (sin(T+i+vec4(2,2,3,4))*.5*R.x/3.*exp(-(1.+.1*i)*1000000.0*dot(u,u)));\n        \n        u += .02*sqrt(i)*vec2(2.*sin(.1*T+1000.*i),2.5/i);\n    }\n    return Q;\n}","name":"Common","description":"","type":"common"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"\n\nMain {\n    T = iTime;\n    R = iResolution.xy;\n    int I = iFrame % ( 1 + 2 + 1 + 2 );\n    U = floor(U);\n    vec2 u = 2.*(U-.5*R)/R.y;\n    if (I == 0) {\n        // Phase Space\n        Q = scene(u);\n        Q.x = Q.x+.5*Q.y;\n        Q.y = 0.;\n        Q.z = Q.z+.5*Q.y;\n        Q.w = 0.;\n    } else if (I == 1) {\n        // x forward pass\n        Q = vec4(0);\n        vec2 w = 2.*pi*vec2(U)/R;\n        for (float i = 0.; i < R.x; i++) {\n            vec4 a = A(vec2(i,U.y));\n            Q.xy += a.xy*ei(w.x*i);\n            Q.zw += a.zw*ei(w.x*i);\n        }\n    } else if (I == 2) {\n        // y forward pass\n        Q = vec4(0);\n        vec2 w = 2.*pi*vec2(U)/R;\n        for (float i = 0.; i < R.y; i++) {\n            vec4 a = A(vec2(U.x,i));\n            Q.xy += a.xy*ei(w.y*i);\n            Q.zw += a.zw*ei(w.y*i);\n        }\n    } else if (I == 3) {\n        // Frequency Space\n        vec2 w = 2.*pi*(fract(vec2(U)/R+.5)*2.-1.);\n        Q = A(U);\n        w *= .2;\n        bool b = true;\n        bool b2 = true;\n        for (float i = 0.; i < 7.; i++) {\n            vec2 v = w*ei(i/7.*2.*pi);\n            b = b&&(v.x<1.);\n            b2 = b2&&(v.x<.8);\n        }\n        Q.xy *= .5*(1.5*float(b)+.5*float(b2));\n        Q.zw *= .5*(.5*float(b)+float(b2));\n    } else if (I == 4) {\n        // x reverse pass\n        Q = vec4(0);\n        vec2 w = 2.*pi*vec2(U)/R;\n        for (float i = 0.; i < R.x; i++) {\n            Q.xy += A(vec2(i,U.y)).xy*ei(-w.x*i);\n            Q.zw += A(vec2(i,U.y)).zw*ei(-w.x*i);\n        }\n        Q /= R.x;\n    } else if (I == 5) {\n        // y reverse pass\n        Q = vec4(0);\n        vec2 w = 2.*pi*vec2(U)/R;\n        for (float i = 0.; i < R.y; i++) {\n            Q.xy += A(vec2(U.x,i)).xy*ei(-w.y*i);\n            Q.zw += A(vec2(U.x,i)).zw*ei(-w.y*i);\n        }\n        Q /= R.y;\n    }\n\n}","name":"Buffer A","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"4cVfWz","date":"1733953243","viewed":226,"name":"X-Mas Tree","username":"wyatt","description":"Fourier transform lighting effect","likes":19,"published":3,"flags":32,"usePreview":0,"tags":["light"],"hasliked":0,"parentid":"","parentname":""}}