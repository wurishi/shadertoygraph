{"ver":"0.1","info":{"id":"wlffRj","date":"1597152298","viewed":167,"name":"Art Of Code: KIFS Explaination","username":"nixaboo","description":"Art Of Code: KIFS Explanation\n\n(Tutorial from Art Of Code, I wrote this to better understand how it works)\n\nTutorial: https://www.youtube.com/watch?v=il_Qg9AqQkE","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["kifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,c) smoothstep(a,b,c)\n\n//Red are horizontal symmetry lines caused by abs(x)\n//Blue is first symmetery line \n//Green (right most) is second symmetery line \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec3 col = vec3(0.);       \n    \n    vec2 uv = (fragCoord.xy-.5*iResolution.xy)/iResolution.y;    \n    uv *= 3.;\n        \n    float angle = 2./3. * 3.1415;\n    vec2 n = vec2(sin(angle), cos(angle));\n   \n    //First symmetry line\n    uv.x = abs(uv.x);\n    col += S(.02, .01, abs(uv.x)) * vec3(1., 0., 0.); //Draw horizontal symmetry line red\n    \n    uv.x -= .5;\n    uv -= n*min(dot(uv, n), 0.)*2.;    \n    col += S(.02, .01, abs(dot(uv, n))) * vec3(0., 0., 1.); //First symmetry line Blue\n \n \n    //Second symmetry line\n    uv *= 3.;\n    uv.x -= 1.5;\n    \n    vec2 orig_uv = uv;\n    \n    uv.x = abs(uv.x);\n    col += S(.02, .01, abs(uv.x)) * vec3(1., 0., 0.) * dot(uv, n); //Draw horizontal symmetry line red, multiply by dot to not draw in reflected area\n    \n    uv.x -= .5;\n    uv -= n*min(dot(uv, n), 0.)*2.;    \n    col += S(.03, .02, abs(dot(uv, n))) * vec3(0., 1., 0.) * (orig_uv.x>0. ? 1. : 0.); //Second symmetry line green -> Note we only actually mirror the right-most one, rest are reflected\n    \n    \n    //Draw white line\n    float d = length(uv - vec2(clamp(uv.x, -1., 1.), 0.));\n    col += S(.05, .04, d);\n\n        \n    fragColor = vec4(col,\n        1.0);\n}","name":"Image","description":"","type":"image"}]}