{"ver":"0.1","info":{"id":"7l2BD1","date":"1652180384","viewed":91,"name":"cmykhextunnelrounded","username":"HaleyHalcyon","description":"aa","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["zoomspiral"],"hasliked":0,"parentid":"sljfW1","parentname":"Fork InOut haleyhalcy 666"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU (6.283185307)\n#define STRIPECOUNT 3.\n\n#define HEX(x) vec3((ivec3(x) >> ivec3(16, 8, 0)) & 255) / 255.\n\nvec3 getColor(float r, float aa) {\n    //r = fract(r);\n    float mix0 = smoothstep(0., aa, r);\n    float mix1 = smoothstep(0., aa, r - 0.25);\n    float mix2 = smoothstep(0., aa, r - 0.5);\n    float mix3 = smoothstep(0., aa, r - 0.75);\n    \n    vec3 color0 = HEX(0x009BE8);\n    vec3 color1 = HEX(0xEB0072);\n    vec3 color2 = HEX(0xfff100);\n    vec3 color3 = HEX(0x000000);\n    \n    return (\n        color0 * (mix0 - mix1) +\n        color1 * (mix1 - mix2) +\n        color2 * (mix2 - mix3) +\n        color3 * (mix3 - mix0 + 1.)\n    );\n}\n\n\nfloat zigzag(float x) {\n    return abs(1. - 2. * fract(x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  float time = fract(0.25 + iTime / 4.);\n  float sway = smoothstep(0.65, 0.35, zigzag(time * 2.));\n  sway *= (1. - 2. * step(0.5, time));\n  // Normalized pixel coordinates (from 0 to 1)\n  float scale = min(iResolution.x, iResolution.y);\n  vec2 uv = (fragCoord.xy - 0.50 * iResolution.xy) / scale;\n  \n  float dist = length(uv);\n  float angle = atan(uv.y, uv.x);\n  \n  float aaWidth = 3. * min(\n    fwidth(angle), fwidth(atan(uv.x, uv.y))\n  );\n  \n  float angleRot = 0.8 * cos(time * TAU);\n  float angleSway = .6 * sway;\n  \n  // for calculating the stripesâ€™ angle\n  float angleL = angleSway + (\n      floor(0.5 +\n          angle * STRIPECOUNT / TAU - angleRot\n      ) + angleRot\n  ) * TAU / STRIPECOUNT;\n  float angleD = angleSway + (\n      0.5 + floor(\n          angle * STRIPECOUNT / TAU - angleRot\n      ) + angleRot\n  ) * TAU / STRIPECOUNT;\n  \n  vec2 angleVecL = vec2(cos(angleL), sin(angleL));\n  vec2 angleVecD = vec2(cos(angleD), sin(angleD));\n\n// for calculating which color palette to use\n  float dark = smoothstep(\n      -aaWidth, aaWidth,\n      24. * ( -0.5 +\n          zigzag( 0.5 +\n              angle * STRIPECOUNT / TAU - angleRot\n          )\n      ) / STRIPECOUNT\n  );\n  \n  float bulge = 1.0 +\n          0.25 * (dist + 0.1) * abs(cos(\n              angle * STRIPECOUNT - angleRot * TAU\n          ))\n      ;\n  \n  float distScale = 0.8 * (1. - 0.25 * abs(sway));\n  float scrollTime = 16. * time;\n  \n  float spiralL = fract(\n      scrollTime + \n      bulge * distScale * (-1. + log(dot(uv, angleVecL) * 2.)) + 0. * time\n  );\n  float spiralD = fract(\n      scrollTime +\n      -0.5 * abs(sway) +\n      bulge * distScale * (-1. + log(dot(uv, angleVecD) * 2.)) + 0. * time\n  );\n  \n  vec3 colL = getColor(spiralL, aaWidth);\n  vec3 colD = getColor(spiralD, aaWidth);\n  \n  vec3 col = mix(colL, colD, dark);\n  // Output to screen\n  fragColor = vec4(\n      col, 1.0\n  );\n}","name":"Image","description":"","type":"image"}]}