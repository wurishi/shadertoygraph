{"ver":"0.1","info":{"id":"Ddlfzs","date":"1689080206","viewed":77,"name":"a cube raymarching","username":"hbbdmc","description":"this is a practice of raymarching,with a cube sdf","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","boxsdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define hw 1. / iResolution.y\n#define EPS 1e-5\n\n//this is a box sdf,r is the half of box\nfloat cubeSdf(vec3 p,float r){\n    p.z-=1.;\n\n    vec3 p_1 = abs(p) - vec3(r *0.5);\n    float inner = min(max(max(p_1.x,p_1.y),p_1.z),0.0);//inner points\n    float outer =length(max(vec3(0.0),p_1));//outer points\n    return inner + outer;\n}\n\n\nvoid mainImage( out vec4 O, in vec2 C )\n{\n    vec2 uv = (C - .5 * iResolution.xy) * hw;\n    vec3 ray =normalize( vec3(uv,1.0) );\n    \n    vec3 o = vec3(0.);\n    float dis = 0.;\n    for(float i =0.0; i< 50.0; i++){\n        float d = cubeSdf(dis * ray + o, 0.5);\n        dis = d + dis;\n        if(d < EPS){\n            break;\n        }\n    }\n    O.xyz = vec3(1.);\n    if(dis >=10.){\n        return;\n    }\n    O.xyz = vec3(0.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//Common Tab\n#define EPS 1e-5\n#define MAX_STEP 100.\n#define MAX_DIST 10.\nconst float PI=3.14159265;\nconst float DTA=PI/180.;\nfloat sdCube(vec3 p,vec3 size)\n{\n    vec3 np=abs(p)-size*.5;\n    float o=length(max(np,vec3(0)));\n    float i=min(0.,max(np.x,max(np.y,np.z)));\n    return o+i;\n}\nmat2x2 mrot(float r)\n{\n    r*=DTA;\n    float c=cos(r),s=sin(r);\n    return mat2x2(c,s,-s,c);\n}\n","name":"Common","description":"","type":"common"}]}