{"ver":"0.1","info":{"id":"XcB3zw","date":"1703936234","viewed":25,"name":"Osc 1","username":"hugo","description":"Learning SDFs:\n\n- oscillation using sinc and domain repetition","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf","domainrepetition","circle","ball","bounce","osc","sinc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 c)\n{\n    float r = 0.15;\n    \n    vec2 p = uv - c;\n    \n    return length(p) - r;\n}\n\nfloat sketch(vec2 uv)\n{\n    vec2 p = uv;\n   \n   \n    float t = iTime * 0.5;\n    float osc = sin(3.14 * t) / (3.14 * t);\n    float s = abs(osc) * 0.3 + 0.3;\n    vec2 id = round(p/s);\n    vec2 rep = p - s*id;\n       \n    float d = circle(rep, vec2(0.));\n    \n    d = sign(osc) * d;\n    \n    d = smoothstep(0.01 * id.x, 0., d);\n    \n    return d;\n}\n\nvoid mainImage( out vec4 O, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    float d = sketch(uv);\n    \n    col *= d;\n\n    // Output to screen\n    O = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}