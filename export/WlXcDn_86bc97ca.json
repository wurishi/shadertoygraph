{"ver":"0.1","info":{"id":"WlXcDn","date":"1592496746","viewed":101,"name":"Figure-Eight Sibling","username":"sl2c","description":"The \"original\" [url=https://www.shadertoy.com/view/Xd3fzB]cohomology fractal[/url], basically, but implemented differently.  Thanks to mla for mouse suggestion.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","hyperbolic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Copyright 2020 Google LLC\n// SPDX-License-Identifier: Apache-2.0\n// NOT an official Google project; see Google Open Source guidelines for more info on copyright transfer\n// written by William Cadegan-Schlieper \n#define swap(u,v) {int t=sigma[u]; sigma[u]=sigma[v]; sigma[v]=t;}\n\nint a(int r) {\n    if (abs(r)==1 || abs(r)==4) {\n        return 1;\n    }\n    return -1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 z = 2.0 * (fragCoord - iResolution.xy * 0.5)/iResolution.y;\n    float res = 1.0 / iResolution.y;\n    vec3 zh = vec3(z, res);\n    \n    zh /= dot(zh,zh);\n    \n    if (iMouse.x > 0.0) {\n        vec2 mouse = 2.0 * (iMouse.xy - iResolution.xy * 0.5)/iResolution.y;\n        zh.xy += mouse;\n    }\n    \n    vec2[3] lines = vec2[](\n        vec2(1.0,0.0),\n        vec2(-0.5,sqrt(0.75)),\n        vec2(-0.5,-sqrt(0.75)));\n    \n    vec3[3] colors = vec3[](\n        vec3(1.0,0.2,0.2),\n        vec3(0.2,1.0,0.2),\n        vec3(0.0,0.0,0.0));\n    \n    int[5] sigma = int[](0,1,2,3,4);\n    \n    int i;\n    bool br = false;\n    float err = 2.0;\n    int coh = 0;\n    int fl = 1;\n    for(i=0; i<50; i++) {\n        if (dot(zh,zh) < 1.0) {\n            zh /= dot(zh,zh);\n            swap(0,4);\n            int r = sigma[0]-sigma[4];\n            coh += a(r);\n            fl *= -1;\n            coh*=-1;\n        }\n        for(int j=0; j<3; j++) {\n            if (dot(zh.xy, lines[j])>0.5) {\n                zh.xy = zh.xy - 2.0 * lines[j] * (dot(zh.xy, lines[j]) - 0.5);\n                \n                swap(0,j+1);\n                int r = sigma[0]-sigma[j+1];\n                coh += a(r);\n                fl *= -1;\n                coh*=-1;\n            }\n        }\n        if (br) {\n            break;\n        }\n    }\n    coh*=fl;\n\n    vec3 col = vec3(float(coh));\n    col = col / (3.0 + abs(col));\n    col = 0.5 + 0.5 * col;\n    col.r *= 0.5;\n    \n    fragColor = vec4(col,1.0);\n    fragColor = pow(fragColor, vec4(1.0/2.2));\n}","name":"Image","description":"","type":"image"}]}