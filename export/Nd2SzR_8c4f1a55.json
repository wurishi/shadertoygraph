{"ver":"0.1","info":{"id":"Nd2SzR","date":"1619556808","viewed":96,"name":"Little Outline Test","username":"SnoopethDuckDuck","description":"e","likes":4,"published":1,"flags":48,"usePreview":0,"tags":["cool"],"hasliked":0,"parentid":"fsXSWl","parentname":"3 behaviour automata"},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// didnt need buffer B\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n//fragColor = vec4( 1. - step(3. * texelFetch( iChannel0, ivec2(fragCoord), 0 ).x ,0.5));\nfragColor = vec4(3. * texelFetch( iChannel0, ivec2(fragCoord), 0 ).x );\n\n\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define KEYBOARD iChannel1\n#define KEY_RESET 82\n\n\nfloat Cell( in ivec2 p )\n{\n    // do wrapping\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p+r) % r;\n    \n    // fetch texel\n   // return (texelFetch(iChannel0, p, 0 ).x > 0.5 ) ? 1 : 0;\n   return texelFetch(iChannel0, p, 0 ).x;\n}\n\nfloat hash1( float n )\n{\n    return fract(sin(n)*138.5453123);\n}\n\nbool key_down(int key) {\n    return int(texelFetch(KEYBOARD, ivec2(key, 0), 0).x) == 1;\n}\n\n\n// goes through 0.5,0.5, 0 derivative at 0,0  and 1,1\n// not in use\nfloat p(float x)\n{\nreturn (1. / 9.) * (-4. * x * x + 8. * x + 5.) * x * x * (2.-x) * (2.-x);\n}\n\n// not in use\nfloat gain(float x, float k)\n{\n  float a = 0.5*pow(2.0*((x<0.5)?x:1.0-x), k);\n  return (x<0.5)?a:1.0-a;\n}\n\n// not in use\nfloat p4(float x)\n{\nreturn (0.9 + 0.1 * cos( 2. * 3.14159 * x)) * x;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = fragCoord/iResolution.y - vec2(0.375,0.);\nuv = floor(33. * uv) / 33.;\n\nfloat t=  iTime;\n\nvec2 dir = uv - 0.5;\n\nfloat d =4. *  max(abs(dir.x),abs(dir.y));\nfloat theta = atan(dir.y,dir.x);\n\n\nfloat val =+   d * (1. + 0.5 * cos(2. * theta + t) + 0.35 * cos(3. * theta - t));\n\nfloat c = step(val,0.3);\nvec3 col = vec3(c);\n\tfragColor = vec4(col, 1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float Cell( in ivec2 p )\n{\n    // do wrapping\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p+r) % r;\n    \n    // fetch texel\n   // return (texelFetch(iChannel0, p, 0 ).x > 0.5 ) ? 1 : 0;\n   return texelFetch(iChannel0, p, 0 ).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  ivec2 px = ivec2( fragCoord );\n\n  float t = Cell(px + ivec2(0,-1));\n  float b = Cell(px + ivec2(0,1));\n  float l = Cell(px + ivec2(-1,0));\n  float r = Cell(px + ivec2(1,0));   \n\nfloat x = texelFetch( iChannel0, ivec2(fragCoord), 0 ).x;\n\nfloat j = 0.5 * (abs(l - b) + abs( t - r) + abs(t-l) + abs(b-r));\nx = smoothstep(j,x,0.9);\n\n   fragColor = vec4(x,x,x,1. );\n\n}","name":"Buffer B","description":"","type":"buffer"}]}