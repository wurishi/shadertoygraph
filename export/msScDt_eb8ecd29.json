{"ver":"0.1","info":{"id":"msScDt","date":"1688329311","viewed":94,"name":"GoombasKuwahara","username":"Goomba00","description":"rsgrwegergwe","likes":5,"published":1,"flags":0,"usePreview":1,"tags":["rsdgrweweg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = texture(iChannel0,fragCoord/iResolution.xy).rgb;\n\n    int radius = 4;\n    \n    vec2 srcSize = vec2 (1.0 / iResolution.x, 1.0 / iResolution.y);\n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    float n = float((radius + 1) * (radius + 1));\n    int i; \n\tint j;\n    \n    // Quadrant ave\n    vec3 a0 = vec3(0.0); vec3 a1 = vec3(0.0); vec3 a2 = vec3(0.0); vec3 a3 = vec3(0.0);\n    \n    // Quadrant sigma\n    vec3 s0 = vec3(0.0); vec3 s1 = vec3(0.0); vec3 s2 = vec3(0.0); vec3 s3 = vec3(0.0);\n    \n    // Current\n    vec3 c;\n    \n    \n    // Quadrant 0\n    for (int j = radius; j >= 0; --j)  {\n         for (int i = radius; i >= 0; --i)  {\n             c = texture(iChannel0, uv + vec2(i,j) * srcSize).rgb;\n             a0 += c;\n             s0 += c * c;\n         }\n    }\n     \n     // Quadrant 1\n    for (int j = radius; j >= 0; --j)  {\n         for (int i = -radius; i <= 0; ++i)  {\n             c = texture(iChannel0, uv + vec2(i,j) * srcSize).rgb;\n             a1 += c;\n             s1 += c * c;\n         }\n    }\n     \n     // Quadrant 2\n    for (int j = -radius; j <= 0; ++j)  {\n         for (int i = -radius; i <= 0; ++i)  {\n             c = texture(iChannel0, uv + vec2(i,j) * srcSize).rgb;\n             a2 += c;\n             s2 += c * c;\n         }\n    }\n     \n     // Quadrant 3\n    for (int j = -radius; j <= 0; ++j)  {\n         for (int i = radius; i >= 0; --i)  {\n             c = texture(iChannel0, uv + vec2(i,j) * srcSize).rgb;\n             a3 += c;\n             s3 += c * c;\n         }\n    }\n     \n    \n    // Quadrant 0 stdev\n    a0 /= n;\n    s0 = abs(s0 / n - a0 * a0);\n    float sSum = s0.r + s0.g + s0.b;\n    float lowestSig = sSum;\n    col = a0;\n    \n    // Quadrant 1 stdev\n    a1 /= n;\n    s1 = abs(s1 / n - a1 * a1);\n    sSum = s1.r + s1.g + s1.b;\n    if(sSum < lowestSig){\n        col = a1;\n        lowestSig = sSum;\n    }\n    \n    // Quadrant 2 stdev\n    a2 /= n;\n    s2 = abs(s2 / n - a2 * a2);\n    sSum = s2.r + s2.g + s2.b;\n    if(sSum < lowestSig){\n        col = a2;\n        lowestSig = sSum;\n    }\n    \n    // Quadrant 3 stdev\n    a3 /= n;\n    s3 = abs(s3 / n - a3 * a3);\n    sSum = s3.r + s3.g + s3.b;\n    if(sSum < lowestSig){\n        col = a3;\n        lowestSig = sSum;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}