{"ver":"0.1","info":{"id":"ldjfDm","date":"1500764077","viewed":116,"name":"Happy Birthday to a Friend!","username":"4onen","description":"A simple shader I threw together in a half hour to celebrate a friend's birthday!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","signeddistancefields"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//2D signed distance field box\nfloat box(vec2 p, vec2 b){\n    vec2 d = abs(p) - b;\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\n//2D signed distance field \"candle\"\nfloat candle(vec2 p){\n    return min(\n        box(p,vec2(0.05,0.4)),\n        box(p-vec2(0.0,0.25),vec2(0.001,0.25))\n        );\n}\n\n//Add two objects together with materials\nvec2 oUnion(vec2 o1, vec2 o2){\n    return o1.x < o2.x ? o1 : o2;\n}\n\n//The objects in the world\nvec2 map(vec2 p){\n    //No object\n    vec2 background = vec2(0.01,0.0);\n    \n    //The cake\n    vec2 loaf = vec2(\n        max(box(p-vec2(0.0,-0.3),vec2(0.5,0.3))-0.15,-box(p-vec2(0.0,-0.7),vec2(1.0,0.2))),\n        1.0);\n    \n    //The candles\n    vec2 candles = vec2(\n        min(candle(p-vec2(0.0,0.1)),\n            min(candle(p-vec2(0.3,0.0)),\n                candle(p-vec2(-0.3,0.0)))\n           )\n        ,4.0);\n    \n    //Combine all of the objects\n    return oUnion(background,\n                  oUnion(loaf,candles)\n                 );\n}\n\nvec3 material(vec2 obj){\n    //Turn the materials into colors!\n    \n    //Modifier\n    float m = 1.0-smoothstep(0.0,0.01,obj.x);\n    \n    //Background\n    if(obj.y < 0.1) return vec3(0.7,0.7,0.65);\n    \n    //Loaf\n    if(obj.y < 1.1) return vec3(0.45,0.255,0.25);\n    \n    //Candle\n    if(obj.y < 4.1) return vec3(1.0,vec2(sin(3.14+365.25*obj.x)));\n    \n    //Error material/color\n    return m*vec3(1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    //Establish an aspect-ratio independent \"world\" with a [-1,1] y coordinate\n    vec2 uv = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //Make the \"world\" bounce.\n    uv.y += sin(iTime)/8.0;\n    \n    fragColor = vec4(material(map(uv)),1.0);\n}","name":"Image","description":"","type":"image"}]}