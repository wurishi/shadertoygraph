{"ver":"0.1","info":{"id":"wsXGDS","date":"1547332150","viewed":80,"name":"CWE Raymarched Sphere","username":"theinventor13","description":"first attempt at raymarching","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float estimate(vec3 p){\n    float r = .5;\n    vec3 c = vec3(0.0, 0.0, 3.0);\n\treturn max(0.0, length(p - c) - r);    \n}\n\n\nfloat draw(vec3 p, vec3 d){\n    float min_dist = .0001;\n    float max_steps = 40.0;\n    float steps = 0.0;\n    float dstep = 0.0;\n    float tdist = 0.0;\n    vec3 check;\n    for(steps = 0.0; steps < max_steps; steps++){\n\t\tcheck = p + d * tdist;\n        dstep = estimate(check);\n        tdist += dstep;\n        if(dstep < min_dist){\n            break;\n        }\n    }\n    return (1.0 - steps / max_steps);\n    \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ang = -3.14 * (iMouse.x / iResolution.x - .5);\n    \n    vec2 uv = fragCoord/iResolution.xy;// - (iMouse.xy/iResolution.xy - vec2(.5, .5));\n\t\n    vec3 uvz = vec3(uv.xy, 0.0) * 2.0 - 1.0;\n    vec3 dir = vec3(0.0, 0.0, 1.0);\n    \n    float temp = uvz.z * cos(ang) - uvz.x * sin(ang);\n    uvz.x = uvz.z * sin(ang) - uvz.x * cos(ang);\n    uvz.z = temp;\n    \n    //temp = dir.z * cos(ang) - dir.x * sin(ang);\n    //dir.x = dir.z * sin(ang) - dir.x * cos(ang);\n    //dir.z = temp;\n    \n    vec3 col = draw(uvz, dir) * vec3(0.0, 1.0, 0.0); \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}