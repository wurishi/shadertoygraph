{"ver":"0.1","info":{"id":"4ddSD7","date":"1533185566","viewed":216,"name":"Voxel Marcher","username":"rodolphito","description":"based on https://www.shadertoy.com/view/4dX3zl","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voxel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_RAY_STEPS = 64;\n\nfloat sdSphere(vec3 p, float d)\n{\n    return length(p) - d;\n} \n\nfloat sdBox(vec3 p, vec3 b)\n{\n    vec3 d = abs(p) - b;\n    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nbool getVoxel(vec3 c)\n{\n    vec3 p = vec3(c) + vec3(0.5);\n    float d = min(max(-sdSphere(p, 7.5), sdBox(p, vec3(6.0))), -sdSphere(p, 25.0));\n    return d < 0.0;\n}\n\nvec2 rotate2d(vec2 v, float a)\n{\n    float sinA = sin(a);\n    float cosA = cos(a);\n    return vec2(v.x * cosA - v.y * sinA, v.y * cosA + v.x * sinA);\t\n}\n\nvoid mainImage(out vec4 fragColor,vec2 fragCoord)\n{\n    fragCoord += 0.5;\n    vec2 screenPos = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    vec3 cameraDir = vec3(0.0, 0.0, 0.8);\n    vec3 cameraPlaneU = vec3(1.0, 0.0, 0.0);\n    vec3 cameraPlaneV = vec3(0.0, 1.0, 0.0) * iResolution.y / iResolution.x;\n    vec3 rayDir = cameraDir + screenPos.x * cameraPlaneU + screenPos.y * cameraPlaneV;\n    vec3 rayPos = vec3(0.0, 2.0 * sin(iTime * 2.7), -12.0);\n\n    rayPos.xz = rotate2d(rayPos.xz, iTime);\n    rayDir.xz = rotate2d(rayDir.xz, iTime);\n    rayDir = normalize(rayDir);\n\n    vec3 rayStep = sign(rayDir);\n    vec3 invDir = 1.0 / rayDir;\n    vec3 voxel = floor(rayPos);\n    vec3 sideDist = (max(rayStep,0.0) - fract(rayPos)) * invDir;\n    vec3 normal = vec3(0.0);\n    float thing = 0.0;\n    for (int i = 0; i < MAX_RAY_STEPS; i++)\n    {\n        normal = step(sideDist,min(sideDist.yzx,sideDist.zxy)) * rayStep;\n        sideDist += normal * invDir;\n        voxel += normal;\n        thing += dot(sideDist*rayStep-invDir,normal);\n        if (getVoxel(voxel)) break;\n    }\n    //fragColor.rgb = vec3(thing*0.001);//vec3(0.5+dot(normal, 0.5*normalize(vec3(0.4,0.2,0.7))));\n    fragColor.rgb = vec3(mod(voxel,vec3(2.0)));\n}","name":"Image","description":"","type":"image"}]}