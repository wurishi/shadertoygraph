{"ver":"0.1","info":{"id":"mtV3Dd","date":"1684908376","viewed":67,"name":"xor bit field plot","username":"felipecsl","description":"playing with XOR","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["math","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plot(vec2 st, float pct){\n  float width = max(abs(sin(iTime) + 1.6), 1./iResolution.y);\n  float pc = pct * abs(sin(iTime * 1.3) + 2.6);\n  // return  smoothstep(pc - width, pc, st.y) -\n  //         smoothstep(pc, pc + width, st.y);\n  return smoothstep(1., 0., abs(st.y - pc));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.0);\n    int xor = int(fragCoord.x) ^ int(fragCoord.y);\n    float val = fract(float(xor) / 9.);\n    uv.y += abs(cos(iTime * 0.4));\n    color = mix(color, vec3(0., 1., 0.), plot(uv, val));\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}