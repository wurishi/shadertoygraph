{"ver":"0.1","info":{"id":"M3sXRr","date":"1709109478","viewed":48,"name":"liquid checkerboard plane","username":"akr51","description":"Weird line artifact not sure maybe floating point error? ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat plane(vec3 rayOrigin, vec3 rayDirection, vec3 centerPoint, vec3 normal)\n{\n\n\n    \n    float dt = 0.01;\n    float limit = 8.0;\n    \n    for (float t = 0.001; t < limit; t += dt)\n    {\n    \n        vec3 p = rayOrigin + t * rayDirection;\n       \n        p.x = sin(p.x * 2.0);\n        p.z = sin(p.z * 2.0);\n       \n        float f = dot(normal, p - centerPoint);\n        \n       \n        if (f > -0.05 && f < 0.05)\n        {\n        \n            return distance(p, rayOrigin);\n        \n        }\n    \n    }\n    \n    return 0.0;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= (iResolution.x / iResolution.y);\n    \n    vec3 rayOrigin = vec3(0.0, 0.8, -0.5);\n    vec3 rayDirection = vec3(uv, 0.5);\n    \n    float f = plane(rayOrigin, rayDirection, vec3(0.0, -0.5, 0.0), vec3(0.0, 1.0, 0.0));\n    \n    float ambient = 0.005;\n    \n    if (f > 0.0)\n    {\n    \n        vec3 hp = rayOrigin + f * rayDirection;\n        f = sin(hp.x * 4.0 + iTime) * sin(hp.y * 4.0 + iTime);\n         \n    }\n   \n   \n    fragColor = vec4(vec3(f + ambient), 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}