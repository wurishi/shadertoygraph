{"ver":"0.1","info":{"id":"mssSW7","date":"1669057881","viewed":73,"name":"Square Segment","username":"Aruseus","description":"A simple 2d square with 2 colored segments based on a parameter r.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","square"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159265;\nconst float halfpi = 0.5*pi;\nconst float invpi = 1.0/pi;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = 2.0 * uv.x - 1.0; // map from [0,1] to [-1,+1]\n    uv.x = uv.x * (iResolution.x / iResolution.y); // center x\n    uv.x = 0.5 * (1.0 + uv.x); // map back from [-1,+1] to [0,1]\n\n    const vec3 col1 = vec3(0.5, 0.0, 0.0);\n    const vec3 col2 = vec3(0.0, 0.0, 0.5);\n    const vec3 bg = vec3(0.8,0.6,0.2);\n    const float outer = 0.4;\n    // r in interval [0,1]\n    float r = (1.0+sin(iTime*0.6))*0.5;\n    \n    float d1 = max(uv.x-0.5,uv.y-0.5);\n    float d2 = max(abs(uv.x-0.5),abs(uv.y-0.5));\n    float d = max(d1,d2);\n    vec2 toc = normalize(uv-vec2(0.5));\n    float angle = halfpi - 0.5*acos(toc.y);\n    angle = angle * (toc.x < 0.0 ? -1.0 : 1.0);\n    // map angle to [0,1]\n    float scaled_angle = (halfpi+angle)*invpi;\n    vec3 col;\n    if (d<outer) {\n        col = scaled_angle > r ? col1 : col2;\n    } else {\n        col = bg;\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}