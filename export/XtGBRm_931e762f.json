{"ver":"0.1","info":{"id":"XtGBRm","date":"1542072287","viewed":131,"name":"Transform-copy fractal","username":"edmeme","description":"Affine transformation of a copy of the output image. The same transformation with opposite rotation angles is done in two separate buffers. Use the mouse to alter the scale and the offset of the transformation","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["fractal","rtt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n\nvec3 invert(in vec3 color)\n{\n    return clamp(1.-color.brg,0.,1.);\n}\n\n\nvec2 mirror_x(vec2 coord)\n{\n\treturn vec2(abs(coord.x),coord.y);\n}\n\nvec2 symmetry(vec2 coord){return mirror_x(coord);}\nvec3 color_transform(in vec3 color){ return invert(color);}\n\n\nvec3 rectangle( in vec2 coord, in sampler2D src, in vec2 scale, in vec2 offset, in float angle )\n{\n    mat2 rot = mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n    vec2 p = rot*coord * scale + offset;\n\tif (abs(p.x) < 1. && abs(p.y) < 1.)\n    {\n        //return vec3(1,0,0)7\n    \tvec3 old = texture(src,(p+1.)*vec2(0.5,0.5)).rgb;\n        return color_transform(old);\n    }\n    \n    return vec3(1.,1.,1.0);\n        \n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 m = (iMouse.xy/iResolution.xy) * vec2(-1.,1.);\n    vec2 scale = 1./vec2(0.8*m.y,0.8*m.y);\n    vec2 offset = vec2(m.x,0);    \n    float angle = 0.25 * sin(iTime*0.1)*3.1415;        \n    vec2 coord = ((fragCoord / iResolution.xy) - 0.5) * 2.0;    \n    \n    fragColor = vec4(rectangle(symmetry(coord),iChannel0,scale,offset,angle),1.0);    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 m = (iMouse.xy/iResolution.xy) * vec2(-1.,1.);\n    vec2 scale = 1./vec2(0.8*m.y,0.8*m.y);\n    vec2 offset = vec2(m.x,0);    \n    float angle = 0.25 * sin(iTime*0.1)*3.1415;        \n    vec2 coord = ((fragCoord / iResolution.xy) - 0.5) * 2.0;    \n    \n    fragColor = vec4(rectangle(symmetry(coord),iChannel0,scale,offset,-angle),1.0);    \n}","name":"Buffer B","description":"","type":"buffer"}]}