{"ver":"0.1","info":{"id":"wtXSR4","date":"1562222253","viewed":143,"name":"hexagon stuff","username":"MonterMan","description":"hex tests","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// borrowed from: https://www.shadertoy.com/view/4djSRW\nvec3 hash32(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+19.19);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\n\nfloat hexagon(vec2 uv, float s)\n{\n    vec2 p = abs(uv);\n    \n    float shape = smoothstep(p.x, p.x+0.01, s);\n    float hd = dot(p, normalize(vec2(1.0, 1.73)));\n    shape *= smoothstep(hd, hd+0.01, s);\n    \n    return shape;\n}\n\nvec2 hex_tile(vec2 uv, float rep, out vec2 tile_id)\n{  \n    uv *= rep;\n    \n    vec2 d = vec2(1.0, sqrt(3.0));\n    vec2 h = 0.5*d;\n    vec2 a = mod(uv, d) - h;\n    vec2 b = mod(uv + h, d) - h;\n    vec2 p = dot(a, a) < dot(b, b)? a: b;\n    \n    tile_id = p - uv;\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.0 * fragCoord / iResolution.xy - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec2 tile_id;\n    vec2 p = hex_tile(uv, 5.0, tile_id);\n    vec3 col = vec3(hexagon(p, 0.48)) * hash32(tile_id+1.0);\n    \n    col = sqrt(col);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}