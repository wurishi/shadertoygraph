{"ver":"0.1","info":{"id":"WscBRN","date":"1604423441","viewed":136,"name":"Simple funky circle","username":"blahblah","description":"A simple circle shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simple","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Calculate the distance from the current pixel to the center of the screen.\n    float distanceToCenter = length(fragCoord - iResolution.xy/vec2(2,2));\n\n    \n    // White background\n    vec3 outputColor = vec3(1,1,1);\n\n    \n    // If this pixel is 100 or less pixels from the center, give it a funky color!\n    // Change this number to change the size of the circle.\n    float radiusOfCircleInPixels = 100.0;\n    if (distanceToCenter <= radiusOfCircleInPixels) {\n    \toutputColor = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(outputColor,1.0);\n}","name":"Image","description":"","type":"image"}]}