{"ver":"0.1","info":{"id":"DtScRm","date":"1691570778","viewed":79,"name":"3D Rotation","username":"Leslie","description":"Combine two around axes rotating matrices to achieve any direction rotating.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 res = iResolution.xy/scale;\n    vec2 uv = (2.*fragCoord-iResolution.xy)/scale;\n\n    float r = 0.8;\n    float l = length(uv);\n    float z = sqrt( max(0., r*r-l*l) );\n    vec3 p = vec3(uv, z);\n\n    float a = round(iTime/2.)/4.;\n    mat3 m1 = mat3(\n        cos(a), sin(a), 0.,\n        -sin(a), cos(a), 0.,\n        0., 0., 1.\n    );\n    float b = (round(iTime/2.)+2.)/4.;\n    mat3 m2 = mat3(\n        cos(b), 0., sin(b),\n        0., 1., 0.,\n        -sin(b), 0., cos(b)\n        );\n    mat3 m = mat3(\n        1., 0., 0.,\n        0., cos(iTime), sin(iTime),\n        0., -sin(iTime), cos(iTime)\n    );\n\n    fragColor = vec4(  texture(iChannel0, p*m1*m) );\n}\n","name":"Image","description":"","type":"image"}]}