{"ver":"0.1","info":{"id":"MtXSzH","date":"1434448633","viewed":708,"name":"Worley3D noise","username":"Lallis","description":"Some worley noise with animation and color. Unfortunately it's not very efficient :(\n\nEDIT: Now it's a quite a bit faster than before :)\nThanks to FabriceNeyret2&iq!\n","likes":30,"published":1,"flags":0,"usePreview":0,"tags":["noise","worley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float noise3D(vec3 p)\n{\n\treturn fract(sin(dot(p ,vec3(12.9898,78.233,126.7235))) * 43758.5453);\n}\n\nfloat worley3D(vec3 p)\n{\t\t\t\t\t \t\t\t\t\t \n\tfloat r = 3.0;\n    vec3 f = floor(p);\n    vec3 x = fract(p);\n\tfor(int i = -1; i<=1; i++)\n\t{\n\t\tfor(int j = -1; j<=1; j++)\n\t\t{\n\t\t\tfor(int k = -1; k<=1; k++)\n\t\t\t{\n                vec3 q = vec3(float(i),float(j),float(k));\n    \t\t\tvec3 v = q + vec3(noise3D((q+f)*1.11), noise3D((q+f)*1.14), noise3D((q+f)*1.17)) - x;\n    \t\t\tfloat d = dot(v, v);\n\t\t\t\tr = min(r, d);\n\t\t\t}\n\t\t}\n\t}\n    return sqrt(r);\n}\t\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = uv*2.0-1.0;\n    p.x*=iResolution.x/iResolution.y;\n    float my = (iMouse.y==0.0 ? 0.5 : iMouse.y/iResolution.y);\n    p*=20.0*my;\n   \tfloat f = worley3D(vec3(p,iTime*0.2));\n    \n    float mx = (iMouse.x==0.0 ? 0.5 : iMouse.x/iResolution.x);\n    if(uv.x>mx)\n    {\n        f = worley3D(vec3(p*0.25,1.0)*f);; \n    }\n    vec3 col = vec3(f);\n\tcol*=vec3(0.6,1.0,0.1)*f*f;\n    col*=exp(1.0-col);\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}