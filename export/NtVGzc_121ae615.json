{"ver":"0.1","info":{"id":"NtVGzc","date":"1639311385","viewed":294,"name":"stella","username":"gaz","description":"TDF2021 entry","likes":16,"published":1,"flags":8,"usePreview":0,"tags":["demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define r iResolution\n#define t iTime\n\nint M;\nint I;\nvec3 objOffset;\n\nvoid seq(int tick, int id)\n{\n\tif(tick<=M) I = id;\n}\n\n#define A(a,k)sqrt((a)*(a)+k)\nfloat smin(float a, float b, float k)\n{\n\treturn (a+b-A(a-b,k))*.5;\n}\n\nfloat lpNorm(vec2 p, float n)\n{\n\treturn pow(dot(pow(abs(p),vec2(n)),vec2(1)),1./n);\n}\n\n// https://www.shadertoy.com/view/4lXyWN\nvec3 hash(uvec3 x)\n{\n\tuint k = 1664525U;\n    x*=k;\n    x = ((x>>2u)^(x.yzx>>1u)^x.zxy)*k;\n    return vec3(x)*(1.0/float(0xffffffffU));\n}\n\n// https://www.shadertoy.com/view/wtVyWK\n// Rodrigues' rotation formula\nvoid rot(inout vec3 p,vec3 a,float t)\n{\n\ta=normalize(a);\n\tp= mix(a*dot(p,a),p,cos(t))+sin(t)*cross(p,a);\n}\n\nvoid s90(inout vec2 p, float k)\n{\n    vec2 v=.707*(vec2(1,-1));\n    float g=dot(p,v);\n    p-=(g-A(g,k))*v;\n}\n\nvoid sBox(inout vec3 p, float k)\n{\n    p=A(p,k);\n    s90(p.xz,k);\n\ts90(p.yz,k);\n    s90(p.xy,k);\n}\n\nfloat de16Seg(vec2 p,int n)\n{\n\tfloat e=2.;\n\tmat2 m=mat2(0,-1,1,0);\n    for(int i=0;i<4;i++)\n    {\n        m*=mat2(0,1,-1,0);\n    \tfor(int j=0;j<4;j++)\n    \t{\n            if((n>>(i*4+j)&1)==1){\n                vec2 a=m*vec2(26>>j&1,19>>j&1),\n                b=m*vec2(13>>j&1,9>>j&1),c,d;\n                a.x=a.x*.7+.4*a.y;\n                b.x=b.x*.8+.3*b.y;\n                c=p-a,d=b-a;\n                e=min(e,lpNorm(c-d* clamp(dot(c,d)/dot(d,d),0.,1.),4.));\n            }\n        }\n\t}\n\treturn e;\n}\n\nfloat deAce(vec3 p)\n{\n    p-=objOffset;\n    float a= 3.*abs(cos(t))\n        *smoothstep(88.,105.,t)\n        *smoothstep(115.,103.,t);\n    p-=2.*clamp(p,-a,a);\n    rot(p,vec3(1),t);\n  \n    I=0;\n    seq(50,1);\n\tseq(69,0);\n\trot(p,\n        vec3(1,2,3),\n        float[](\n            0.,\n            t*6.\n        )[I]\n   );\n  \n    sBox(p,1e-4+pow(fract(t),2.)*2e-2);\n    I=0;\n    seq(12,1);\n    seq(25,0);\n    seq(40,1);\n    return float[](\n        9.,\n        dot(p,normalize(vec3(2,1,-1)))-1.\n    )[I];\n}\n\nfloat deSpines(vec3 p)\n{\n    p+=objOffset;\n \tvec3 n=normalize(vec3(int(t*2.)%3+3,int(t*1.5)%2+2,int(t*2.5)%3));\n \tvec3 q=p;\n\trot(p,vec3(1,6,3),t);\n \tsBox(p,0.);\n  \n    I=0;\n    seq(70,1);\n    seq(80,0);\n    seq(93,1);\n    n+=vec3[](\n        vec3(0),\n        cross(sin(p*3.+t*.1),cos(p*4.+t*.2))*.02\n    )[I];\n  \n    I=0;\n    seq(80,1);\n    p=vec3[](\n        p,\n        sin(p/2.)\n    )[I];\n  \n    I=0;\n    seq(25,1);\n    seq(50,2);\n    float x=dot(p,n);\n\tfloat y=length(cross(p,n));\n    return float[](\n        9.,   \n \t\tmin(\n            length(vec2(x-min(x,50.),y))- \n                (1.-pow(max(0.,x-(9.-\tfract(t*.5)*8.)),2.))*.07,\n                lpNorm(vec2(x-1.,y-.4),5.)-.2\n        ),\n        max(length(q)-9.*smoothstep(118.,100.,t),min(\n            y-.015,\n \t\t\tlpNorm(vec2(sin(log(x)*2.-t*3.)-.6,y-.2),8.)-.06\n    \t))\n    )[I];\n}\n\nfloat deStone(vec3 p, float s) \n{\n    sBox(p,3e-3);\n    return dot(p,\n        normalize(vec3[](\n\t\t\tvec3(1,0,1),\n\t\t\tvec3(2,3,1),\n\t\t\tvec3(1,2,-1),\n\t\t\tvec3(1,1,0),\n\t\t\tvec3(1,2,0),\n\t\t\tvec3(2,1,0),\n\t\t\tvec3(1,1,2)\n\t\t)[int(s*7.)]))-.5;\n}\n\nfloat deMeio(vec3 p)\n{\n \tvec3 v = vec3(1,-1,0);\n    p-= v* t;\n    rot(p,vec3(1,6,-3),2.);\n    p.xy-=2.*t-10.;\n\tvec3 ip  = floor(p / 3.0);\n    if(length(ip-min(ip,0.))>1. || 2.-dot(ip,normalize(v))<1.)return 1.;\n    p  = mod(p, 3.0) - 1.5;\n    vec3 rnd = hash(uvec3(ip+vec3(123745))) ;\n    if (rnd.x < 0.8) return 1.;\n    rot(p,rnd,t * (rnd.y*2.-1.));\n  \n    I=0;\n    seq(0,1);\n    seq(25,0);\n    seq(40,1);\n    seq(109,0);\n  \n    return float[](\n        9.,\n        deStone(p,rnd.z)\n    )[I];\n}\n\nfloat map(vec3 p)\n{\n    return min(smin(deAce(p),deSpines(p),.03),deMeio(p))*.7;\n}\n\nvec3 calcNormal(vec3 p)\n{\n    vec3 n=vec3(0);\n    for(int i=0; i<4; i++){\n        vec3 e=1e-3*(vec3(9>>i&1, i>>1&1, i&1)*2.-1.);\n        n+=e*map(p+e);\n    }\n    return normalize(n);\n}\n\nfloat march(vec3 ro, vec3 rd,  float far)\n{\n\tfloat t=0.;\n\tfloat d;\n    for(int i=0;i<120;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if(d<.001 || t>=far) break;\n    }\n    return min(t,far);\n}\n\nvec3 doColor(vec3 p)\n{\n    if(deMeio(p)<.02)return vec3(.8);\n    return vec3(3.,.5,.1)+sin(p)*.5+.5;\n}\n\nfloat stella(vec2 uv)\n{\n    uv*=20.;\n    uv.x+=9.;\n    float de=1.;\n    for(int i=0;i<6;i++){\n        uv.x-=2.5;\n        de=min(de,de16Seg(uv,int[](37285,16577,36241,35088,35088,7325)[i]));\n    }\n    return smoothstep(.5,.0,de)*smoothstep(14.,9.,t);\n}\n\nfloat gaz(vec2 uv)\n{\n    uv*=20.;\n    uv+=vec2(-2,5);\n    float de=1.;\n    for(int i=0;i<3;i++){\n        uv.x-=2.5;\n        de=min(de,de16Seg(uv,int[](39317,7325,33667)[i]));\n    }\n    return smoothstep(.5,.0,de)*smoothstep(108.,116.,t);\n}\n\nfloat AngelRing(vec3 ro,vec3 rd, float z)\n{\n    float i=0.,g=0.,e,c=0.;\n    vec3 p;\n    for(;i<30.;i++)\n    {\n        if(z<g)break;\n        p=rd*g+ro;\n        p+=objOffset;\n        rot(p,vec3(cos(t*1.),sin(t*2.),sin(1.*t)),t*.3);\n        g+=e=length(vec2(p.y,length(p.xz)-3.-50.*smoothstep(70.,78.,t))-.5)+.05;\n        c+=.01*exp(-.01*sin(i))/e;\n    }\n    return clamp(c,0.,1.);\n}\n\nfloat basket(vec3 ro,vec3 rd, float z)\n{\n    float i=0.,g=0.,e,c=0.;\n    vec3 p;\n    for(;i<30.;i++)\n    {\n        if(z<g)break;\n        p=rd*g+ro;\n        p-=objOffset;\n        rot(p,vec3(cos(t*3.),sin(t*3.),sin(2.*t)),t);\n        vec3 v=vec3(-.5,-.707,.5);\n        for(int i=0;i<4;i++)\n        {\n            p.xy=A(p.xy,1e-3);\n            float g=dot(p,v);\n            p-=(g-A(g,1e-3))*v;\n        }\n        p.z-=3.;\n        g+=e=length(p.yz)+.05;\n        c+=.02*exp(-.1*sin(.3*i))/e;\n    }\n  return clamp(c,0.,1.);\n}\n\nfloat orb(vec3 ro,vec3 rd, float z)\n{\n    float de=1.;\n    for(float i=0.;i<50.;i++){\n        vec3 h = hash(uint(i) + uvec3(123u,456u,789u));\n        vec3 p=h+h.yzx*.3*sin(t+i*1.+sin(2.*t+i)*.3)\n            + h.zxy*.5*sin(t+i*2.+sin(.5*t+i)*.5);\n        p=(p * 2. - 1.) * 8.;\n        p-=ro;\n \t\tvec3 g= cross(p, rd);\n        vec3 up=normalize(cross(p,cross(p,vec3(0,1,0))));\n        vec2 uv= vec2(dot(g,up),dot(g,cross(normalize(p),up)));\n        uv=length(uv)*sin(vec2(0,1.57)+sin(atan(uv.y,uv.x)*3.)/3.);\n        if (length(p-ro)<z)de=min(de,uv.y);\n    }\n    de*=1.5;\n    return smoothstep(.5,.05,de)+exp(-50.*de*de);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    M = int(t);\n    objOffset=vec3(smoothstep(68.,58.,t)*5.,0,0);\n \n    vec2 uv = (fragCoord*2.-r.xy)/r.y;\n    vec3 ro=vec3(sin(t*.3)*4.,cos(t*.4+.5*cos(t*.3))*4.,2.5)*3.;\n    vec3 ta = vec3(cos(t*.5+1.3*cos(t*.3))*4.,sin(t*.3)*4.,0);\n    vec3 w = normalize(ta-ro);\n    vec3 u = normalize(cross(w,vec3(0,1,0)));\n    vec3 rd = mat3(u,cross(u,w),w)*normalize(vec3(uv,2));\n    vec3 col= vec3(0);\n    float maxd=70.;\n    float d=march(ro,rd,maxd);\n    if(d<maxd)\n    {\n        vec3 p=ro+rd*d;\n\t\tvec3 n=calcNormal(p);      \n\t\tvec3 li=normalize(vec3(1,2,1));\n\t\tfloat rimd=pow(clamp(1.-dot(reflect(-li,n),-rd),0.,1.),2.5);\n\t\tfloat frn=rimd+2.2*(1.-rimd);\n\t\tcol=doColor(p); \n\t\tcol*=clamp(dot(n,li),.3,1.);\n\t\tcol*=frn*.6;\n\t\tcol*=max(.5+.5*n.y,.3);\n        col+= vec3(.0,.4,.8)*pow(clamp(dot(reflect(rd,n),li),0.,1.),10.);\n\t\tcol*=exp(-d*d*.001);\n\t}\n  \n    I=0;\n    seq(11,1);\n    seq(25,0);\n    seq(40,1);\n    seq(45,2);\n    seq(105,0);\n    col+=\n        vec3[](\n            vec3(0),\n            vec3(.2,.4,.7),\n            cos(6.3*t+vec3(0,23,21))*.5+.5,\n            vec3(.2,.8,.2)\n        )[I]*\n        basket(ro,rd,d);\n \t\n    I=0;\n    seq(25,1);\n    seq(73,0);\n \tcol+=\n        vec3[](\n            vec3(0),\n            vec3(1.8,.4,.2),\n            vec3(.2,.8,.2)\n        )[I]*\n        AngelRing(ro,rd,d);\n  \n    col += vec3(1) * stella(uv);\n    col += vec3(1) * gaz(uv);\n    col += vec3(.8,.8,.6) * orb(ro,rd,d);\n    col+=.2*sin(t)*hash(uvec3(exp(-gl_FragCoord.xy*.001),t*.5));\n  \n    I=0;\n    seq(88,1);\n    seq(89,0);\n    seq(92,1);\n    seq(93,0);\n    seq(95,1);\n    seq(96,0);\n    seq(99,1);\n    seq(100,0);\n    seq(102,1);\n    seq(103,0);\n\n    col=vec3[](\n        col,\n        .8-col.xxx\n    )[I];\n  \n    col*=smoothstep(120.,117.,t);\n    fragColor=vec4(col,1);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float T,O,S=3.53;\nint Z,E,I,N;\n#define M(m,s){T=mod(T,S);float a,b;I=-1;for(int i=0;i<m;i++){a=float(int[]s[i%int[]s.length()]);b=S/float(m);if(a>0.)O=0.;if(T<b)break;I+=int(a);T-=b;O+=b/max(1.,a);}if(a>0.)I+=int(T/b*a)+1;T=mod(T,b/max(1.,a));T+=O;}\n#define P(m,s)Z++;if(E==Z)M(m,s)\n#define D(a)if(E==Z)N=int[]a[I%int[]a.length()];\n#define R P(1,(0))\n#define F(n)for(int i=0;i<n;i++)\n#define A O=100.;T=t;Z=-1;E=int(t/S);\n#define G(n)if(E<n)T=100.;E=max(0,E-n);\n#define L(n)T= mod(T,S*float(n));E%=int(n);\n#define B(a)P(2,(1))D(a)\n#define note2freq(n)440.*exp2(float(n-69+67)/12.)\n\n#define PI acos(-1.)\n#define PIH (PI*.5)\n#define TAU (PI*2.)\n#define osc_sin(x)sin((x)*TAU)\n#define osc_saw(x)(1.-fract(x)*2.)\n#define osc_sqr(x)sign(0.5-fract(x))\n#define osc_tri(x)(asin(sin((x)*PI))/PIH)\n\n// I forgot the reference.\nfloat hash(int n)\n{\n    n = (n << 13) ^ n;\n    n = (n * (n * n * 60493 + 19990303) + 1376312589) & 0x7fffffff; \n    return 1.- float(n) / 1073741824.;\n}\n \n// https://www.shadertoy.com/view/tttfRj\nfloat coloredNoise(float t, float frq, float k)\n{\n    t*=frq;\n    float s=t*k;\n    float sf  =  smoothstep(0.,1.,fract(s));\n    int si = int(floor(s));\n    return osc_sin(t)*mix(hash(si), hash(si+1), sf) ;\n}    \n\nfloat noize(float t,  float a, float b){\n    float g=fract(cos(t*exp2(a))*exp2(b))+6.0;\n    return exp(-0.08*g*g) *40.0-1.;\n}\n\nfloat kick(float t)\n{\n    return clamp(1.5*asin(cos(320.0*t-30.0*exp(-40.0*t))),-1.,1.)*exp(-4.*t);\n}\n\nfloat snare(float t){\n    float n=noize(t,10.,10.)*exp(-t*10.), f=t*160.,a=.3*osc_tri(1.2*f)*exp(-t*3.);\n    float b=.05*osc_sin(10.*f+a)*exp(-t*3.);\n    float c=osc_sin(f+b)*exp(-t*15.), z;\n    return n+c;\n}\n\nfloat hihat(float t){\n    return noize(t,10.,18.)*exp(-t*15.);\n}\n\nfloat piano(float t,float f){\n    float g=0.,a,b=0.;\n    f*=t;\n    for(float j=1.;j<5.;j++){\n        b+=a=exp(-j*.5);\n        g+=a*osc_sin(f*j)*exp(-t*1.8/(2.-j*.1));\n    }\n    g*=1.+1.2*exp(-5.*t);\n    return g/b;\n}\n\nfloat lead(float t,float f){\n    f *= t;\n    return clamp((\n        8.0*osc_saw(f)\n        + 2.0*osc_sin(f*2.0)\n        + osc_tri(f*3.0)\n    )/3.0,-1.,1.)*exp(-3.*t);\n}\n\nfloat base(float t,float f){\n    f *= t;\n    return clamp((\n        8.0*osc_sqr(f)\n        + 3.0*osc_saw(f*2.0)\n        + osc_sin(f*3.0)\n    )/2.0,-1.,1.)*exp(-4.*t);\n}\n\nvec2 mainSound(int s,float t){\n    float gain =0.;\n\tfloat sidechain=1.;\n\n    A;\n    G(7)\n    L(2){\n        P(2,(1))D((10000,520,600,400))\n        R;\n    }\n\tgain+= .5*coloredNoise(T,float(N),.5)*exp(-T*.1);\n\n    A;\n    G(2)\n    L(2){\n        P(4,(0,2))D((1000,4520,6000,22000))\n        R;\n    }\n\tgain+= .8*coloredNoise(T,float(N),.1)*exp(-T*.01); \n  \n    A;\n    L(1)\n    P(2,(1,2))\n    sidechain=mix(.2,1.,smoothstep(.0 , .1 , T));  \n    gain += .8*kick(T);\n \n    A;\n    L(4)\n    F(3){P(4,(0,1))}\n    P(4,(0,1,0,2)) \n    gain +=  .6*snare(T);\n  \n  \n    A;\n    L(1)\n    P(8,(2,2,4,2))D((1,2))\n    gain +=  1.*hihat(T)*.5;\n  \n  \n    A;\n    G(1)\n    L(4){\n   \tB((289522048))B((304317699))B((323274632))B((325338887,293732994))}\n    ivec4 note=ivec4(N>>0&127,N>>7&127,N>>14&127,N>>21&127);int csize=(N>>28&1)+3;\n    for(int i=0;i<csize;i++) \n        gain+= sidechain*.6*piano(T,note2freq(note[i]))/float(csize);\n\n\tA;\n    G(1)\n    L(1)\n    P(8,(1,1))D((note[0]-36,note[1]-36))\n    gain+= sidechain*.2*base(T,note2freq(N));\n  \n    A;\n    G(1)\n    L(4){\n        P(8,(2))D((5,16,10,12))\n        P(8,(2))D((0,5,7))\n        P(8,(2))D((0,11,5))\n        P(8,(2))D((0,4,16,17))\n    }\n    gain+= .2*lead(T,note2freq(N));\n   \n    return .5*clamp(1.5*vec2(gain),-1.,1.)*smoothstep(120.,115.,t);\n}","name":"Sound","description":"","type":"sound"}]}