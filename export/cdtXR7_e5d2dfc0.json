{"ver":"0.1","info":{"id":"cdtXR7","date":"1679575049","viewed":158,"name":"Circle Tutorial (Pythagorean)","username":"spenceryonce","description":"Simple tutorial for calculating distance to a circle (drawing a circle)","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["simple","tutorial","circle","learning","teaching","maths","pythagorean","theorum"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 c, in vec2 fc )\n{\n    \n    vec2 uv = (2.0*fc.xy-iResolution.xy)/iResolution.y;\n    \n    float r = 0.3; //define the radius of the circle\n    float t = 0.16; //define the thickness of the circle\n    \n    float x = abs(uv.x); //horizontal distance from point to middle\n    float y = abs(uv.y); //vertical distance from point to middle\n    \n    float d = x*x + y*y; //pythagoreum theorum to find hypoteneuse(dist to middle)\n    d = d - r; // subtract the radius from the dist\n    \n    vec3 col = vec3(0.0); //set the default color as black\n    \n    if(d < r){ //if we are inside the circle's radius\n        col = vec3(0.0); //set the inside color\n    } else if (d > t && d < t+t){\n        col = vec3(1.0,0.0,0.0); //set the border color\n    } else {\n        col = vec3(0.0,0.0,0.0); //set the background color\n    }\n    \n    c = vec4(col,1.0); //output the final color\n}","name":"Image","description":"","type":"image"}]}