{"ver":"0.1","info":{"id":"dltSDj","date":"1685794683","viewed":83,"name":"Signed Distance Function + Bloom","username":"VIBaJ","description":"Signed distance functions for a circle, a square, and a square minus a circle. Also, there are 3 rendering methods. Uncomment the code for the other functions and rendering methods and recompile to see them.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","circle","square","bloom","sdfsubtraction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0.0);\n    float dist;\n    \n    //circle:\n    dist = length(uv) - 0.5;\n    \n    //square:\n    //dist = length(max(abs(uv) - 0.5, 0.0)) + min(max(abs(uv.x) - 0.5, abs(uv.y) - 0.5), 0.0);\n    \n    //square - circle:\n    //dist = max(length(max(abs(uv) - 0.5, 0.0)) + min(max(abs(uv.x) - 0.5, abs(uv.y) - 0.5), 0.0), 0.5 - length(uv));\n    \n    //distance lines:\n    col = 0.5 * (sign(0.01 - abs(dist)) + 1.0) * vec3(0.0, smoothstep(0.0, 0.5, mix(0.0, 1.0, (0.01 - abs(dist)) / 0.01)), 0.0) + 0.5 * (1.0 - sign(0.01 - abs(dist))) * vec3((sin(-100.0 * abs(dist)) + 1.0) / 2.0) * (0.5 * (sign(dist) + 1.0) * vec3(1.0, 0.0, 0.0) + 0.5 * (1.0 - sign(dist)) * vec3(0.0, 0.0, 1.0));\n    \n    //solid glow:\n    //col = vec3((1.0 - pow(0.5 * dist, 0.1)) + 0.5 * (1.0 - sign(dist)) * smoothstep(0.0, 0.5, mix(0.0, 1.0, clamp(abs(dist), 0.0, 0.01) / 0.01)));\n\n    //outline glow:\n    //col = vec3((1.0 - pow(0.5 * abs(dist), 0.1)) + 0.5 * (1.0 - sign(abs(dist) - 0.01)) * smoothstep(0.0, 0.5, mix(0.0, 1.0, (0.01 - abs(dist)) / 0.01)));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}