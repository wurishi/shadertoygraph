{"ver":"0.1","info":{"id":"tstSWn","date":"1571795786","viewed":269,"name":"\"The Universe Within\" - Pt. 1","username":"voxel","description":"This is my take on the shader that YouTube channel The Art of Code creates in the first video of their series \"The Universe Within\" (https://www.youtube.com/watch?v=3CycKKJiwis).","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lineDist(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float t = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n    return length(pa - ba*t);\n}\n\nfloat H21(vec2 p) {\n    return fract(sin(p.x * 123.456 + p.y * 7654.321) * 314.159);\n}\n\nvec2 getCirc(vec2 id) {\n    float f1 = 0.3 + H21(id);\n    float f2 = 0.3 + H21(id + 50.);\n    float p1 = H21(id + 100.) * 100.;\n    float p2 = H21(id + 150.) * 100.;\n    float r = 0.35;\n    float x = sin(f1 * iTime + p1);\n    float y = sin(f2 * iTime + p2);\n    return 0.5 + r * vec2(x, y);\n}\n\nfloat distScale(float dist) {\n    return smoothstep(1.5, .6, dist);\n}\n\nfloat connectVal(vec2 p, vec2 circ1, vec2 circ2) {\n    float ds = distScale(distance(circ1, circ2));\n    return smoothstep(ds*.08+0.04, .0, lineDist(p, circ1, circ2)) * ds;\n}\n\nfloat combineGrad(float grad, float cv) {\n    return grad + cv;\n}\n\n#define UPDATE_GRAD(n1, n2) \\\n  grad = combineGrad(grad, connectVal(sp, neighbors[n1], neighbors[n2]))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 id = floor(fragCoord / 40.);\n    vec2 sp = fract(fragCoord / 40.);\n\n    vec2 neighbors[9];\n    for (int i = 0, dx = -1; dx < 2; dx++) {\n        for (int dy = -1; dy < 2; dy++) {\n            neighbors[i++] = getCirc(id + vec2(dx, dy)) + vec2(dx, dy);\n        }\n    }\n    float grad = 0.;\n    for (int i = 0; i < 9; i++) {\n        if (i != 4) {\n            UPDATE_GRAD(i, 4);\n        }\n    }\n    \n    UPDATE_GRAD(1, 5);\n    UPDATE_GRAD(5, 7);\n    UPDATE_GRAD(7, 3);\n    // UPDATE_GRAD(3, 1);\n    \n    vec3 col = vec3(grad);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}