{"ver":"0.1","info":{"id":"mdGGzt","date":"1678930147","viewed":68,"name":"Frame + Border","username":"dmontastier","description":"rect border frame","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rect","border","frame"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgb(float r, float g, float b) {\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\nvec4 rectangle(vec2 uv, vec2 pos, float width, float height, vec3 color) {\n    float t = step(pos.x - width/2.0, uv.x) * step(pos.y - height/2.0, uv.y) * \n              step(uv.x, pos.x + width/2.0) * step(uv.y, pos.y + height/2.0);\n    return vec4(color, t);\n}\n\nvec4 border(vec2 uv, vec2 pos, float width, float height, float thickness, vec3 color) {\n\tfloat t = 0.0;\n\tif ((uv.x > pos.x - width / 2.0 - thickness) && (uv.x < pos.x - width / 2.0 + thickness)\n\t\t&& (uv.y > pos.y - height / 2.0 - thickness) && (uv.y < pos.y + height / 2.0 + thickness)) {\n\t\tt = 1.0;\n\t}\n\tif ((uv.x > pos.x + width / 2.0 - thickness) && (uv.x < pos.x + width / 2.0 + thickness)\n\t\t&& (uv.y > pos.y - height / 2.0 - thickness) && (uv.y < pos.y + height / 2.0 + thickness)) {\n\t\tt = 1.0;\n\t}\n\tif ((uv.x > pos.x - width / 2.0 - thickness) && (uv.x < pos.x + width / 2.0 + thickness)\n\t\t&& (uv.y > pos.y - height / 2.0 - thickness) && (uv.y < pos.y - height / 2.0 + thickness)) {\n\t\tt = 1.0;\n\t}\n\tif ((uv.x > pos.x - width / 2.0 - thickness) && (uv.x < pos.x + width / 2.0 + thickness)\n\t\t&& (uv.y > pos.y + height / 2.0 - thickness) && (uv.y < pos.y + height / 2.0 + thickness)) {\n\t\tt = 1.0;\n\t}\n\treturn vec4(color, t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord/iResolution.xy;\n\tvec2 uvRect = fragCoord.xy;\n\tvec2 center = vec2(iResolution.x * 0.5, iResolution.y * 0.5);\n    \n\tfloat width = 0.85 * iResolution.x;\n\tfloat height = 0.85 * iResolution.y;\n\n\tvec4 texture = texture(iChannel0, uv);\n    \n    float borderThickness = 1.5;\n    vec3 borderColor = rgb(0., 0.0, 0.0); \n    vec4 border = border(uvRect, center, width, height, borderThickness, borderColor);\n\n\tvec3 colorRect = rgb(0.0, 255.0, 255.0);\n\tvec4 rect = rectangle(uvRect, center, width - borderThickness * 2.0, height - borderThickness * 2.0, colorRect);\n\t\n    fragColor = mix(mix(rect, texture, rect.a), border, border.a);\n}","name":"Image","description":"","type":"image"}]}