{"ver":"0.1","info":{"id":"WtKSzh","date":"1582190516","viewed":84,"name":"03 Roto zoomer","username":"waffles","description":"Example of FBO and rotozoomer","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["rotozoomer","fbo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Licensed under Creative Commons CC0: https://creativecommons.org/share-your-work/public-domain/cc0/\n\n//comment next line to stop rotozooming:\n#define ROTOZOOM\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord;\n\n#ifdef ROTOZOOM\n    //rotating happens here\n    uv = vec2(\n    \tuv.x*cos(iTime) + uv.y*sin(iTime),\n    \tuv.x*-sin(iTime) + uv.y*cos(iTime));\n    \n    //zooming happens here\n    uv *= (2.0+sin(iTime*2.0))/2.0;\n#endif\n\n    uv /= iResolution.xy;\n\n\n    // iChannel0 contains Buffer A output image\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Licensed under Creative Commons CC0: https://creativecommons.org/share-your-work/public-domain/cc0/\n\nfloat circle(vec2 coord, float size){\n    return length(coord)-size;\n}\n\nfloat rect(vec2 p, vec2 b)\n{\n  vec2 d = abs(p) - b;\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // setup coordinates here\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 aspectRatio = vec2(iResolution.x/iResolution.y, -1.0);\n    vec2 coord = aspectRatio * (uv - 0.5);\n\n\t\n    // Background pattern. Repeat pattern with mod function\n    float stripes = max(floor(mod(coord.x*10.0-0.5, 2.0)), floor(mod(coord.y*10.0+0.5, 2.0)));\n    vec3 col = vec3(stripes);\n\n    //make face\n    vec3 faceColor = vec3(1.0,1.0,0.0);\n    vec3 faceFeatureColor = vec3(0.0,0.0,0.0);\n\n    float d = circle(coord + vec2(0.0,0.0), 0.4);\n    col = sign(d)*col;\n    col = mix(col, faceColor, 1.0-smoothstep(0.0,0.01,d));\n\n    //eyes\n    d = circle(coord + vec2(0.2,0.15), 0.05);\n    d = min(d, circle(coord + vec2(-0.2,0.15), 0.05));\n\n    //mouth\n    d = min(d,\n        max(\n            rect(coord + vec2(0.0,-0.3), vec2(0.5, 0.2)),\n            max(circle(coord + vec2(0.0,0.0), 0.3),\n                -circle(coord + vec2(0.0,0.0), 0.25))\n        )\n    );\n\n    col = sign(d)*col;\n    col = mix(col, faceFeatureColor, 1.0-smoothstep(0.0,0.01,d));\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}