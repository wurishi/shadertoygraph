{"ver":"0.1","info":{"id":"tllyD4","date":"1596314093","viewed":152,"name":"Corstiaan.ZebraCircles","username":"Corstiaan","description":"Playing with circles\ntrying to make this https://i.imgur.com/251HNu7.mp4","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI  3.14159265359\n#define TWO_PI (2.0*PI)\n#define HALF_PI (0.5*PI)\n\nfloat thresh(float base, float val, float blur)\n{\n    return smoothstep(val+(blur/2.), val-(blur/2.), base);\n}\n\nvec4 circle(vec2 uv, vec2 coord, float r, float col)\n{\n    // returns the circle in alpha\n    float mask = thresh(length(coord - uv), r, .005);\n    \n    // black has no border, just return mask in alpha\n    if (col < 0.5)\n        return vec4(vec3(0), mask);\n    else\n    {\n\t    float border = thresh(length(coord - uv), r-.001, .005);\n        return vec4(vec3(border), mask);\n    }\n}\n\nfloat easeOutExpo(float x) { return x == 1. ? 1. : 1. - pow(2., -10. * x); }\nfloat easeOutCube(float x) { return 1. - pow(1. - x, 3.); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 R = iResolution.xy, UV = (fragCoord - .5 * R) / R.y;\n    vec3 col = vec3(0.);\n   \n    int amount = 60; // nr of circles\n    float maxSize = 1.4; // size of largest circle\n    float speed = 3.; // speed\n    \n    for(int i=0; i < amount; i++)\n    {\n        float norm = float(i) / float(amount); // 0 - 1 range, linear\n        \n        float cubed = easeOutCube(norm); // 0 - 1 range, cubed\n        float expo = easeOutExpo(norm); // 0 - 1 range, exponential\n        \n        float size = (1. - expo) * maxSize;\n        float t = iTime - cubed * speed;\n       \n        vec2 center = vec2(sin(t * 3.),sin(t * 2.)) * 0.25;\n        vec4 circ = circle(UV, center, size, float(i % 2));\n\n        // 'paint' using alpha channel\n        col = mix(col, circ.xyz, circ.w);\n    }\n   \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}