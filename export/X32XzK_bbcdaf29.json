{"ver":"0.1","info":{"id":"X32XzK","date":"1710811712","viewed":39,"name":"capogiro","username":"amusement","description":"just an horrible thing that probably could have been written in 3 lines of code :P","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["sample"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time-based movement\n    float t = iTime * 0.1;\n    uv += vec2( sin(t - uv.y * 4.0), cos(t + uv.x * 4.0) ) * 0.01;\n\n    // Sample the texture\n    vec4 tex = texture(iChannel0, uv);\n\n    // Feedback loop\n    vec4 feedback = texture(iChannel1, uv);\n    feedback = mix(feedback, tex, 1.0);\n\n    // Output to buffer A\n    fragColor = feedback;\n\n    // Output to buffer B\n    fragColor = tex;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time-based movement\n    float t = iTime * 2.0;\n    uv += vec2( sin(t - uv.y * 1.0), cos(t + uv.x * 1.0) ) * 0.5;\n\n    // Sample the texture\n    vec4 tex = texture(iChannel0, uv);\n\n    // Feedback loop\n    vec4 feedback = texture(iChannel1, uv);\n    feedback = mix(feedback, tex, 1.0);\n\n    // Output to buffer A\n    fragColor = feedback;\n\n    // Output to buffer B\n    fragColor = tex;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time-based movement\n    float t = iTime * 0.9;\n    uv += vec2( sin(t - uv.y * 4.0), cos(t + uv.x * 4.0) ) * 0.1;\n\n    // Sample the texture\n    vec4 tex = texture(iChannel0, uv);\n\n    // Feedback loop\n    vec4 feedback = texture(iChannel1, uv);\n    feedback = mix(feedback, tex, 1.0);\n\n    // Output to buffer A\n    fragColor = feedback;\n\n    // Output to buffer B\n    fragColor = tex;\n}","name":"Buffer B","description":"","type":"buffer"}]}