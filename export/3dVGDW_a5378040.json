{"ver":"0.1","info":{"id":"3dVGDW","date":"1570455117","viewed":601,"name":"Anyone Home?","username":"104","description":"Subtly creepy","likes":32,"published":1,"flags":0,"usePreview":0,"tags":["2d","october"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PARTITIONS = 14.;\n\nvec3 dtoa(float d, vec3 amount){\n    return vec3(1. / clamp(d*amount, vec3(1), amount));\n}\n\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nmat2 rot2D(float r){\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\nvoid mainImage( out vec4 o, in vec2 fragCoord )\n{\n    float t = (iTime+1e2)*.2;\n    vec2 uv = fragCoord/iResolution.xy-.5;\n    vec2 N = uv;\n    uv.x += t*.2;\n    vec2 R = iResolution.xy;\n    uv.x *= R.x / R.y;\n    uv.y -= .5;\n    \n    vec2 cellUL = vec2(-1);\n    vec2 cellBR = vec2(1);\n    vec2 seed = floor(uv);// cell ID\n    uv = fract(uv);\n    o = vec4(1);\n    N *= .99;// attempt to reduce some artifacting around edges\n\n    for(float i = 1.; i <= PARTITIONS; ++ i) {\n        vec4 h = hash42(seed+1e2*(vec2(cellBR.x, cellUL.y)+10.));\n        vec2 test = abs(cellUL - cellBR);\n        vec2 uv2 = uv;\n        float dl = abs(uv2.x - cellUL.x);\n        dl = min(dl, length(uv2.y - cellUL.y));\n        dl = min(dl, length(uv2.x - cellBR.x));\n        dl = min(dl, length(uv2.y - cellBR.y));\n\n        vec3 col = h.rgb;\n        col.rb = clamp((col.rg-.5)*rot2D(t*(h.z+i+1.))+.5,0.,1.);\n        float r = max(fract(N.x-.5), fract(.5-N.x));\n        //r = max(r, fract(.5-N.y));\n        //r = max(r, fract(N.y-.5));\n        r = 1.-r;\n        vec3 col2 = 1.1-dtoa(dl, (h.z+.05)*vec3(10000)*pow(r, 1.5));\n        o.rgb *= col2;\n        if (h.w < .1)\n            o.rgb *= mix(col, vec3(col.r+col.g+col.b)/3.,.6);\n        vec2 pt = mix(cellUL, cellBR, h.y);\n        if (uv2.x < pt.x) {// descend into quadrant. is there a more elegant way to do this?\n            if (uv2.y < pt.y) {\n                cellBR = pt.xy;\n            } else {\n              \tcellUL.y = pt.y;\n              \tcellBR.x = pt.x;\n            }\n        } else {\n            if (uv2.y > pt.y) {\n                cellUL = pt.xy;\n            } else {\n                cellUL.x = pt.x;\n                cellBR.y = pt.y;\n            }\n\t    }\n    }\n    \n    o = clamp(o,0.,1.);\n    o = pow(o,o-o+.2);\n    o *= 1.-dot(N,N);\n    o.a = 1.;\n}\n\n","name":"Image","description":"","type":"image"}]}