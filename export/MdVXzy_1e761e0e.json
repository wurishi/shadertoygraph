{"ver":"0.1","info":{"id":"MdVXzy","date":"1465220016","viewed":721,"name":"RGB Ball Bounce-150 chars","username":"GregRostami","description":"This is a modification of my previous shader [url]https://www.shadertoy.com/view/lsVXRw[/url]\nPlease help me make this shorter.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["ball","bounce","short","2tc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 150 chars - Thanks to Xor and Fabrice, this shader is a LOT ligher!\n\n#define b length(u/iResolution.y-.1-abs(vec2( mod(o=o*.1-iTime,3.2).x -1.6,.6*sin(o*5.)))) < .1\n\nvoid mainImage(out vec4 o, vec2 u) {\n    o.r = 1.;\n    o = vec4(b,b,b,1); }     /*\n\n// 149 chars - Fabrice helped me reduce this shader.\n\n#define b length(u/iResolution.y-.1-abs(vec2(mod(a=a*.1-iTime,3.2)-1.6,.6*sin(a*5.)))) < .1\n\nvoid mainImage(out vec4 o, vec2 U) {\n    float a=1.; vec2 u=U;\n    o = vec4(b,b,b,1); }\n\n\n// 152 chars - LaBodilsen, reduced the shader again and kept the motion of the original.\n\n#define b length(u/iResolution.y-.1-abs(vec2(mod(o=o.a*.1-iDate,3.2).w-1.6,.6*sin(o.a*5.))))<.1\n\nvoid mainImage(out vec4 o,vec2 u)\n{\n    o-=o;\n    o = vec4(b,b,b,1);\n}\n\n\n// 157 chars - Original version\n\n#define b length(u/iResolution.y-.1-abs(1.6*vec2(mod(o=(o.a*=.1)-iDate,2.).w-1.,.4*sin(o.a*5.))))<.1\n\nvoid mainImage(out vec4 o,vec2 u)\n{\n    o-=o;\n    o = vec4(b,b,b,1);\n}\n\n\n// 149 chars - LaBodilsen, reduced the shader by changing the motion of the balls\n\n#define b length(u/iResolution.y-.1-abs(vec2(mod(o=o.a-iDate,6.4).w-3.2, sin(o.a*2.)))/2.) <.1\n\nvoid mainImage(out vec4 o,vec2 u)\n{\n    o-=o;\n    o = vec4(b,b,b,1);\n}\n*/","name":"Image","description":"","type":"image"}]}