{"ver":"0.1","info":{"id":"csGBzD","date":"1697963863","viewed":27,"name":"test godray","username":"sleeper","description":"godray test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["godray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nstruct Ray\n{\n    vec3 origin;\n    vec3 direction;\n};\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float mils = fract(iDate.w);\n    \n    const float raymax=1000.0;\n    vec2 p = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    vec3 cameraPos=vec3(0,0,20);\n    float screenZ = 18.0;\n    \n    vec3 rayDirection = normalize(vec3(p, screenZ) - cameraPos);\n    Ray ray;\n    ray.origin = cameraPos;\n    ray.direction = normalize(rayDirection);\n    //ゴッドレイけいさん\n    float fogLitPercent = 0.0f;\n    vec3 LightDir=vec3(cos(mils),sin(mils),0);\n    float isShadow=0.0;\n    for(int i=0;i<60;++i){\n        vec3 testpos =ray.origin+ray.direction*100.0*(float(i) / float(60));\n        \n        for(int k=0;k<10;++k){\n            float d=length(testpos)-2.0;\n                \n            testpos += d * LightDir;\n            if (d < 0.001)\n            {\n                isShadow = 1.0f;\n                break;\n            }                      \n        }\n        float inShadow = (isShadow==1.0f) ? 1.0f : 0.0f;\n        fogLitPercent += 0.01 * inShadow;\n    }\n    \n   \n    fragColor=vec4(fogLitPercent);\n   \n}","name":"Image","description":"","type":"image"}]}