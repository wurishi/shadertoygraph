{"ver":"0.1","info":{"id":"lXSBzK","date":"1729676699","viewed":70,"name":"Raymarching by Moji","username":"Mojii","description":"Learning something new","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdSphere(vec3 pos,float radius)\n{\n    return length(pos)-radius;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat map(vec3 pos)\n{\n    float ground = pos.y + .75;\n    float sphere = sdSphere(pos-vec3(sin(iTime)*4.0, 0, 0), 1.0);\n    float box = sdBox(pos, vec3(1.0));\n    return smoothMin(ground, smoothMin(sphere, box, 2.0), 0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = 0.5;\n    vec2 uv = (fragCoord * 2. - iResolution.xy)/iResolution.y;\n    vec2 m = (iMouse.xy * 2. - iResolution.xy)/iResolution.y;\n    vec3 camPos = vec3(0, 0, -4);\n    vec3 rayDir = normalize(vec3(uv * zoom, 1));\n    vec3 color = vec3(0);\n    float t = 0.; //total distance travelled\n    \n    \n    //camera movement \n    camPos.yz *= rot2D(-m.y);//vertical\n    rayDir.yz *= rot2D(-m.y);\n    \n    camPos.xz *= rot2D(-m.x);\n    rayDir.xz *= rot2D(-m.x);//horizontal\n    \n    \n    \n    //RayMarching\n    for(int i = 0; i < 100; i++)\n    {\n        vec3 p = camPos + rayDir * t;\n    \n        float d = map(p);\n        t += d;\n        \n        if(d < 0.001 || t > 100.) break;\n    }\n    \n    color = palette(t*0.4);\n    fragColor = vec4(color, 1.0);\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 palette(float t)\n{\n    vec3 a = vec3(0.5,0.5,0.5); \n    vec3 b = vec3(1.0,1.0,0.6);\n    vec3 c = vec3(1.0,0.6,0.5);\n    return a + b*cos( 3.141*(c/t) );\n}\n\nfloat smoothMin(float a, float b, float k )\n{\n    float h = max(k-abs(a-b), 0.0)/k;\n    return min(a, b)-h*h*h*k*(1.0/6.0);\n}\n\nmat2 rot2D(float angle)\n{\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}","name":"Common","description":"","type":"common"}]}