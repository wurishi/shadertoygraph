{"ver":"0.1","info":{"id":"wlVfD3","date":"1615228299","viewed":54,"name":"RasterizerTesting","username":"CoderHusk","description":"Following this tutorial https://www.youtube.com/watch?v=dKA5ZVALOhs&t=228s","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rasterization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float evaluateMagnitude(vec3 rayOrigin, vec3 rayDirection, vec3 location) {\n    return length(cross(location-rayOrigin, rayDirection))/length(rayDirection);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv - 0.5;\n    uv.x = uv.x * iResolution.x/iResolution.y;\n\n    vec3 camOrigin = vec3(0, 0,-2);\n    vec3 camDirection = vec3(uv.x, uv.y, 0) - camOrigin;\n    vec3 loc = vec3(cos(iTime)*4.0,sin(iTime)/2.0,10.0);\n    float magnitude = evaluateMagnitude(camOrigin, camDirection, loc);\n    magnitude = smoothstep(0.5, 0.0, magnitude);\n    fragColor = vec4(magnitude);\n}","name":"Image","description":"","type":"image"}]}