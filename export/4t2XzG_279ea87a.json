{"ver":"0.1","info":{"id":"4t2XzG","date":"1444642137","viewed":115,"name":"PsychÃ©delicious","username":"apulby","description":"This is just a little test for fun, enjoy Ã¨_Ã©","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["druuuuuuuugs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float distanceTo(float x, float y, float centerX, float centerY) {\n\tfloat deltaX = x - centerX;\n    float deltaY = y - centerY;\n    return sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\nvoid mainImage( out vec4 color, in vec2 pixCoords )\n{\n    \n    float cameraAngle = 20.0*(3.14/180.0) + iTime;\n    float zoom = (iResolution.x / 1911100.0)* (1.0 + 0.2 * sin(2.0 * iTime));\n    float cameraX = 10.0 / iTime;\n    float cameraY = -3.0 - iTime ; \n    \n    float xBeforeRot = (pixCoords.x / zoom) - cameraX;\n    float yBeforeRot = (pixCoords.y / zoom) - cameraY;\n    \n    float x = (xBeforeRot*cos(cameraAngle))+(yBeforeRot*sin(cameraAngle));\n    float y = (xBeforeRot*-sin(cameraAngle))+(yBeforeRot*cos(cameraAngle));\n    \n    float radius = 0.3 + 0.1 * cos(3.0 * iTime + x * sin(y));\n\n    if (distanceTo(mod(x, 1.0), mod(y, 1.0), 0.5, 0.5) < radius) {\n        color = vec4(cos(xBeforeRot), sin(xBeforeRot/yBeforeRot), cos(yBeforeRot), 1.0);\n        return;\n    }\n    \n    color = vec4(0.0, 0.0, 0.0, 1.0);\n}","name":"","description":"","type":"image"}]}