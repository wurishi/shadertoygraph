{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"\nmat3 rotationMatrix(vec3 axis, float angle)\n{\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n\n    return mat3(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s,\n        oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s,\n        oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c);\n}\n\n\nfloat hash( float n ){\n    return fract(sin(n)*758.5453);\n}\n\n float configurablenoise(vec3 x, float c1, float c2) {\n\tvec3 p = floor(x);\n\tvec3 f = fract(x);\n\tf       = f*f*(3.0-2.0*f);\n\n\tfloat h2 = c1;\n\t float h1 = c2;\n\t#define h3 (h2 + h1)\n\n\t float n = p.x + p.y*h1+ h2*p.z;\n\treturn mix(mix(\tmix( hash(n+0.0), hash(n+1.0),f.x),\n\t\t\tmix( hash(n+h1), hash(n+h1+1.0),f.x),f.y),\n\t\t   mix(\tmix( hash(n+h2), hash(n+h2+1.0),f.x),\n\t\t\tmix( hash(n+h3), hash(n+h3+1.0),f.x),f.y),f.z);\n\n}\n\nfloat supernoise3dX(vec3 p){\n\n\tfloat a =  configurablenoise(p, 883.0, 971.0);\n\tfloat b =  configurablenoise(p + 0.5, 113.0, 157.0);\n\treturn (a * b);\n}\n\nfloat fbmHI2d(vec2 p, float dx){\n  1;\n    p *= 1.2;\n\t\n\tfloat a = 0.0;\n    float w = 1.0;\n    float wc = 0.0;\n\tfor(int i=0;i<5;i++){\n   \n\t\ta += clamp(2.0 * abs(0.5 - (supernoise3dX(vec3(p*cos(iTime*0.01), 1.0)))) * w, 0.0, 1.0);\n\t\twc += w;\n        w *= 0.5;\n\t\tp = p * dx;\n\t}\n\treturn a / wc;// + noise(p * 100.0) * 11;\n}\n\nfloat stars(vec2 seed, float intensity){\n\treturn smoothstep(1.0 - intensity*0.9, (1.0 - intensity *0.9)+0.1, supernoise3dX(vec3(seed * 500.0, 0.0)) * (0.8 + 0.2 * supernoise3dX(vec3(seed * 40.0, 0.0))));\n}\n#define Q(p) p *= 2.*r(round(atan(p.x, p.y) * 12.) / 4.)\n#define r(a) mat2(cos(a + asin(vec4(0,1,-1,0))))\n\nvec3 stars(vec2 uv){\n\nfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .27)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n\n\tfloat intensityred = (1.0 / (1.0 + 30.0 * abs(uv.y))) * fbmHI2d(uv * 30.0, 3.0) * (1.0 - abs(uv.x ));\t\n\tfloat intensitywhite = (1.0 / (1.0 + 20.0 * abs(uv.y))) * fbmHI2d(uv * 30.0 + 120.0, 3.0) * (1.0 - abs(uv.x ));\t\n\tfloat intensityblue = (1.0 / (1.0 + 20.0 * abs(uv.y))) * fbmHI2d(uv * 30.0 + 220.0, 3.0) * (1.0 - abs(uv.x ));\t\n\tfloat galaxydust = smoothstep(0.1, 0.5, (1.0 / (1.0 + 20.0 * abs(uv.y))) * fbmHI2d(uv * 20.0 + 220.0, 3.0) * (1.0 - abs(uv.x )));\t\n\tfloat galaxydust2 = smoothstep(0.1, 0.5, (1.0 / (1.0 + 20.0 * abs(uv.y))) * fbmHI2d(uv * 50.0 + 220.0, 3.0) * (1.0 - abs(uv.x )));\t\n\tintensityred = 1.0 - pow(1.0 - intensityred, 3.0) * 0.73;\n\tintensitywhite = 1.0 - pow(1.0 - intensitywhite, 3.0) * 0.73;\n\tintensityblue = 1.0 - pow(1.0 - intensityblue, 3.0) * 0.73;\n\tfloat redlights = stars(uv, intensityred );\n\tfloat whitelights = stars(uv, intensitywhite );\n\tfloat bluelights = stars(uv, intensityblue );\n\tvec3 starscolor = vec3(1.0, 0.8, 0.5) * redlights + vec3(1.0) * whitelights + vec3(0.6, 0.7, 1.0) * bluelights;\n\tvec3 dustinner = vec3(0.9, 0.8, 0.8);\n   \n\tvec3 dustouter = vec3(0.2, 0.1, 0.0);\n\tvec3 innermix = mix(dustinner, starscolor, 1.0 - galaxydust);\n\tvec3 allmix = mix(dustouter, innermix, 1.0 - galaxydust2);\n\tvec3 bloom = 1.6 * dustinner * (1.0 / (1.0 + 30.0 * abs(uv.y))) * fbmHI2d(uv * 3.0, 3.0) * (1.0 - abs(uv.x ));\t\n\treturn allmix + bloom;\n}\n\nvec3 milkyway(vec2 uv){\n\treturn stars(uv);\n    \n}\n\n#define resolution iResolution.xy\n#define time iTime\n\n// SDF для куба\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return length(max(d,0.0)) + min(max(d.x,max(d.y,d.z)),0.0);\n}\n\n// Функция opElongate\nvec3 opElongate( vec3 p, vec2 h )\n{\n  vec3 q = p;\n  q.x = abs(p.x) - h.x;\n    return q;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) - .5;\n    vec4 o=fragColor;\n    vec2 F= fragCoord;\n  vec2 R = iResolution.xy; \n    o-=o;\n    for(float d,t = iTime*.01, i = 0. ; i > -1.; i -= .06 )          \t\n    {   d = fract( i -3.*t );                                          \t\n        vec4 c = vec4( ( F - R *.5 ) / R.y *d ,i,0 ) * 28.;            \t\n        for (int j=0 ; j++ <27; )                                      \t\n            c.xzyw = abs( c / dot(c,c)                                 \t\n                    -vec4( 7.-.2*sin(t) , 6.3 , .7 , 1.-cos(t/.8))/7.);\t\n       o -= c * c.yzww  * d--*d  / vec4(3,5,1,1);                     \n    }\n\tfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\nvec2 pos = (rotationMatrix(vec3(0.0, 0.0, 1.0), 0.2415) * vec3(uv.x, uv.y, 0.0)).xy;\n\n\tfloat v1, v2, v3;\n\tv1 = v2 = v3 = 0.0;\n\t\n\tfloat s = 0.0;\n\tfor (int i = 0; i < 90; i++)\n\t{\n\t\tvec3 p = s * vec3(uv, 0.0);\n\t\t\n\t\tp += vec3(.22, .3, s - 1.5 - sin(iTime * .13) * .1)*milkyway(pos);\n\t\tfor (int i = 0; i < 8; i++)\tp = abs(p) / dot(p,p) - 0.659;\n\t\tv1 += dot(p,p) * .0015 * (1.8 + sin(length(uv.xy * 13.0) + .5  - iTime * .2));\n\t\tv2 += dot(p,p) * .0013 * (1.5 + sin(length(uv.xy * 14.5) + 1.2 - iTime * .3));\n\t\tv3 += length(p.xy*10.) * .0003;\n\t\ts  += .035;\n\t}\n\t\n\tfloat len = length(uv);\n\tv1 *= smoothstep(.7, .0, len);\n\tv2 *= smoothstep(.5, .0, len);\n\tv3 *= smoothstep(.9, .0, len);\n\t\n\tvec3 col = vec3( v3 * (1.5 + sin(iTime * .2) * .4),\n\t\t\t\t\t(v1 + v3) * .3,\n\t\t\t\t\t v2) + smoothstep(0.2, .0, len)*milkyway(pos)* .85 + smoothstep(.0, .6, v3) * .3;\n\n\tfragColor=vec4(min(pow(abs(col*o.xyz*10.), vec3(1.2)), 1.0), 1.0);\n    \t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XXcyzS","date":"1735230455","viewed":164,"name":"eye of color galaxy","username":"nayk","description":"remake  https://www.shadertoy.com/view/wdtczM https://www.shadertoy.com/view/MdXSzS","likes":1,"published":3,"flags":0,"usePreview":1,"tags":["eye","galaxy","cosmos"],"hasliked":0,"parentid":"","parentname":""}}