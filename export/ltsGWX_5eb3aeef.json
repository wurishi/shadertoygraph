{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"cubemap","id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\nfloat noise(in vec2 p) {\n    return texture(iChannel1, p / 256.0, -100.0).x;\n}\n\nfloat fBm(in vec2 p) {\n    float sum = 0.0;\n    float amp = 0.5;\n    for(int i = 0; i < 5; i++) {\n        sum += amp * noise(p);\n        amp *= 0.5;\n        p *= 2.0;\n    }\n    return sum * 0.05;\n}\n\nfloat raymarchWater(in vec3 ro, in vec3 rd, in float tmin, in float tmax) {\n    float t = tmin;\n    for (int i = 0; i < 70; i++) {\n        vec3 p = ro + rd * t;\n        float d = p.y - fBm(vec2(p.xz + iTime));\n        if (d < (0.001 * t) || t > tmax)\n            break;\n        t += 0.2 * d;\n     }\n     return t;\n}\n\nvec3 getWaterNormal(in vec3 p, float t) {\n    float eps = 0.025;\n    return normalize(vec3(fBm(vec2(p.x - eps, p.z)) - fBm(vec2(p.x + eps, p.z)),\n                          2.0 * eps,\n                          fBm(vec2(p.x, p.z - eps)) - fBm(vec2(p.x, p.z + eps))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (-iResolution.xy + 2.0 * fragCoord.xy) / iResolution.xy;\n    \n    vec3 eye = vec3(0.0, 2.0, -1.0);\n    vec2 rot = 6.2831 * (vec2(0.0, 0.0) + vec2(1.0, 0.0) * (iMouse.xy - iResolution.xy * 0.25) / iResolution.x);\n    eye.yz = cos(rot.y) * eye.yz + sin(rot.y) * eye.zy * vec2(-1.0, 1.0);\n    eye.xz = cos(rot.x) * eye.xz + sin(rot.x) * eye.zx * vec2(1.0, -1.0);\n\n    vec3 ro = eye;\n    vec3 ta = vec3(0.0, 2.0, 0.0);\n\n    vec3 cw = normalize(ta - eye);\n    vec3 cu = normalize(cross(vec3(0.0, 1.0, 0.0), cw));\n    vec3 cv = normalize(cross(cw, cu));\n    mat3 cam = mat3(cu, cv, cw);\n\n    vec3 rd = cam * normalize(vec3(p.xy, 1.0));\n    \n    vec3 col = texture(iChannel0, rd).xyz;\n    float tmin = 0.1;\n    float tmax = 24.0;\n    float t = raymarchWater(ro, rd, tmin, tmax);\n    if (t > tmin && t < tmax) {\n        vec3 pos = ro + rd * t;\n        pos += iTime * 0.25;\n\n        vec3 nor = getWaterNormal(pos, t);\n\n        float F = 0.75;\n        float fre = F + (1.0 - F) * pow(1.0 - dot(nor, -rd), 5.0);\n        vec3 refl = reflect(rd, nor);\n        vec3 refr = refract(rd, nor, 0.99);\n        vec3 rgb = texture(iChannel0, refl).xyz;\n        col = mix(vec3(0.2), (1.0 - fre) + rgb * fre, fre);\n        rgb = texture(iChannel0, refr).xyz;\n        col = mix(col, rgb, 0.5);\n        col = mix(col, smoothstep(0.0, 1.0, col), 0.5);\n    }\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ltsGWX","date":"1425829882","viewed":915,"name":"Uffizi flood","username":"jimmikaelkael","description":"Uffizi gallery under water flood.","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["water","flood","uffizi"],"hasliked":0,"parentid":"","parentname":""}}