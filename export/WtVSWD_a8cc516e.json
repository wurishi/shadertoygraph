{"ver":"0.1","info":{"id":"WtVSWD","date":"1582739050","viewed":106,"name":"arewijk_text","username":"Bl00dhound","description":"testing the text texture\n","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["2d","text","beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\noldschool text scroller\nexcuse the buggyness, i'm still learning glsl and the crazy paradigm of parallel programming ;)\n*/\n\n// lifted this part from another text demo, i'll try to find back the original soon\n//thanks to Fabrice Neyret for algorhitm https://www.shadertoy.com/view/llySRh\n//and thanks to otaviogood for font texture\n#define C(c) U.x-=.5; O+= char(U,c)\n\nint[] text = int[] (72,69,76,76,79,46,46,46,32,73,32,65,77,32,65,78,32,79,76,68,83,75,79,79,76,32,84,69,88,84,32,83,67,82,79,76,76,73,78,71,32,68,69,77,79,44,32,73,39,77,32,78,79,84,32,81,85,73,84,69,32,83,85,82,69,32,72,79,87,32,77,65,78,89,32,67,72,65,82,65,67,84,69,82,83,32,73,32,67,65,78,32,70,73,84,32,73,78,32,65,78,32,65,82,82,65,89,44,32,83,79,32,73,39,76,76,32,74,85,83,84,32,75,69,69,80,32,84,89,80,73,78,71,32,65,66,79,85,84,32,83,84,85,70,70,32,85,78,84,73,76,32,73,32,70,73,78,68,32,84,72,69,32,76,73,77,73,84,83,32,32,32,32,32,32,32,65,82,69,32,87,69,32,84,72,69,82,69,32,89,69,84,63,32,32,32,32);\nint tsize=197;\n\n\nvec4 char(vec2 p, int c) {\n  if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n  return textureGrad( iChannel0, p/16. + fract( vec2(c, 15-c/16) / 16. ), dFdx(p/16.),dFdy(p/16.) );\n}\n\nvoid mainImage(out vec4 O, vec2 uv) {\n  float tm=iDate.w;\n  O=vec4(0.0);\n  //texture(\n  uv/=iResolution.y;\n  vec2 position=vec2(.5);\n  position.x=2.0;\n\n\n  float FontSize=10.;\n  float strsz=((float(tsize)*1.0)/FontSize);\n  position.x-=mod(tm,strsz); \n\n    \n      \n  vec2 U=( uv - position)*64.0/FontSize;\n  //U.y+=.6;\n  //float ln=s\n    \n \n    \n    \n    for (int a=0; a<tsize; a++) {\n    float offset=(position.x*8.0)+float(a+1)/2.0;\n    U.y+=sin(offset)*.25;\n      int tx=text[a];\n\t\n    C(tx);\n    }\n\n\n  O=O.xxxx;\n\n   \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragcol, in vec2 px) {\n    \nfragcol=vec4(1.0,0.0,0.0,1.0);\n\n}","name":"Buffer A","description":"","type":"buffer"}]}