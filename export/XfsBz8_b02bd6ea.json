{"ver":"0.1","info":{"id":"XfsBz8","date":"1723354026","viewed":82,"name":"shark tunnel of the deep sea","username":"chenxianming","description":"shark tunnel of the deep sea","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","sea","deep","rail"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I iResolution\n#define v( a ) clamp( a, 0., 1. )\n#define h( a ) fract( sin( dot( a, vec2( 12.345, 54.321 ) ) ) * 9876.5432 )\n#define twi( a ) ( cos(a + sin(a*1.5) * .9) / .9 ) * .2\n#define PI 3.1415926\n#define rot( r ) mat2(cos(r), sin(r), -sin(r), cos(r) )\n#define A min( I.x, I.y )\n#define n normalize\n\nfloat smin (float a, float b, float r)\n{\n    float h = clamp(.5+.5*(b-a)/r,0.,1.);\n    return mix(b, a, h) - r*h*(1.-h);\n}\n\nfloat smax(float a, float b, float k) {\n    return -smin(-a, -b, k);\n}\n\nvec3 texf( vec2 u ){\n    float p, i, a = 5.;\n    \n    while( i++ < a ){\n        u.x += cos( u.y * atan( u.x, u.y ) ) * .5 - cos( i - iTime );\n        u.y += cos( u.x * atan( u.x, u.y ) ) * .2 + cos( i - iTime );\n    }\n    \n    p = dot( cos( u.x ), sin( u.y ) ) / a;\n    \n    return vec3( sin(u.x) * cos( u.y ), dot(u.x,u.y), p / .1 );\n}\n\nfloat texg( vec2 u ){\n    float p, s = 7., // scale\n        r = length(u) - .25, n = max( \n                9., // edge side\n            7.\n        ), a = 6.28 / n;\n    \n    u *= rot( cos( round( r * s + .5 /* offset */ ) / 3. ) * .5 * iTime\n        + atan( u.x, u.y ) * 2. // waves\n    );\n    \n    u *= rot( round( atan(u.y, u.x) / a ) * a );\n    \n    p += ( r * s < 6. ) ? smoothstep(  100. / A, -100. / A, fract( ( max( abs(u.x), abs(u.y) ) - .15 ) * s + .25 ) ) : 0.;\n\n    return p;\n}\n\n\n\nfloat rep(inout vec2 u, float rep){\n\n    float r = 6.28 / rep; // each radian\n    \n    float a = round( atan(u.y, u.x) / r ) * r; // aligned uv\n    \n    u = vec2(\n        dot( u, vec2( cos(a), sin(a) ) ),\n        dot( u, vec2( -sin(a), cos(a) ) )\n    );\n    \n    return floor( mod( ( round( a / r ) + rep * .5 ), rep ) ); // index\n\n}\n\nfloat f( vec3 p, inout float Z ){\n    vec2 a = vec2( length(p.zy) - .085, p.x );\n    \n    return min(\n        ( length( a ) - .015 ) * .4445,\n        Z = smax(\n            length( p.yz ) - .07,\n            abs(p.x) - .01,\n            .015\n        )\n    );\n}\n\nfloat track( vec3 p ){\n    \n    p.y += .4;\n    \n    p.z -= .05 * round( p.z / .05 );\n    \n    return smin(\n        max(\n            max(\n                abs( p.x ) - .1,\n                abs( p.y ) - .01\n            ),\n            abs( p.z ) - .01\n        ),\n        max(\n            length( vec2( abs( p.x ) - .1, p.z ) ) - .01,\n            abs( p.y + .08 ) - .1\n        ),\n        .01\n    );\n    \n}\n\nfloat F, B, T, II, Y, II2, Y2, Z1, Z2;\n\nvoid addPos( inout vec3 p, inout float B, inout float C ){\n    \n    \n    float y = round( p.y / .32 );\n    B = y;\n        \n    p.y -= .32 * round( p.y / .32 );\n\n    p.x += twi( p.z );\n\n    float i = rep( p.xz, 20. );\n    C = i;\n    p.x -= .65;\n}\n\nfloat df( vec3 p ){\n    \n    vec3 q = p;\n    \n    p.yz *= rot( PI * .5 );\n    \n    vec3 b = p;\n    \n    addPos( p, II, Y );\n    b.xz *= rot( PI / 20. );\n    b.y -= .16;\n    addPos( b, II2, Y2 );\n    \n    q.x += twi( q.z );\n    \n    return min(\n        T = track( q ),\n        min(\n            F = f(p, Z1),\n            B = f(b, Z2)\n        )\n    );\n}\n\nvec3 l(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * 5e-4) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * 5e-4));\n}\n\nfloat S( vec3 p, vec3 ca, vec3 r, float q ){\n    return v( pow( dot( l( p ), normalize( normalize( ca ) - r ) ), q ) );\n}\n\nvoid shaded( inout vec3 c, vec2 t ){\n    \n    float r = h( t );\n    \n    vec3 q;\n    \n    if( r > .0 && r < .25 )\n        q = vec3(0.007,0.995,0.044);\n\n    if( r > .25 && r < .5 )\n        q = vec3(0.990,0.719,0.229);\n        \n    if( r > .5 && r < .75 )\n        q = vec3(0.018,0.990,0.933);\n        \n    if( r > .75 && r < 1. )\n        q = vec3(0.965,0.553,0.694);\n\n    c = mix(\n        c,\n        q,\n        v( c.x * 3. ) * 0.7\n    );\n    \n    c = v(c);\n}\n\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    vec2 u = ( V + V - I.xy ) / A;\n\n    \n    vec3 c, p, o = vec3( 0., 0., -1. ), lk, r;\n    \n    \n    float t, d, i;\n    \n    o.z += iTime * .5;\n    \n    o.x -= twi( o.z );\n    \n    lk = o + vec3(0.0, 0, 1.);\n    lk.x -= twi( lk.z );\n    \n    r = n( lk - o + vec3(u, 0) );\n    \n    while( i++ < 50. ){\n        p = o + r * t,  \n        d = df( p ),\n        t += d;\n        if( t < .19 && d < 1e-3 ){\n            break ;\n        }\n    }\n\n    if( d < 1e-3 ){\n        vec3 lg = vec3( 0., -.1, -.7 );\n        \n        lg = n( lg );\n        \n        vec3 nor = l( p );\n        \n        float fp = dot( lg, nor) ;\n\n        c += S( p, lg, r, 15. ) * fp + vec3( .1 );\n\n        if( abs( fp ) > .3 ){\n            c = mix(\n                c,\n                vec3(.8),\n                clamp( 1. - abs(fp), 0., .1 )\n            );\n        }\n        \n        if( df( p ) == F ){\n            shaded( c, abs( vec2( II, Y ) - 5. ) );\n        }\n\n        if( df( p ) == B ){\n            shaded( c, vec2( II2, Y2 ) );\n        }\n\n        if( df(p) == Z1 || df(p) == Z2 ){\n            c -= .2;\n            \n            vec3 lg = vec3( .0, -.5, .5 );\n            \n            lg.xz *= rot( iTime );\n            \n            float fp = dot( lg, l(p) );\n            \n            c += S( p, lg, r, 70. ) * fp + vec3( .3 );\n            \n            c += texf( r.xy ) * .3;\n            \n            c = mix(\n                c,\n                vec3(0.1,.2, .95),\n                texg( r.xy ) * .5\n            );\n            \n            c = mix(\n                c,\n                vec3(.9),\n                texg( r.xy * 1.1 )\n            );\n            \n            c *= 1. - smoothstep( 0.5, .0, ( u.y / 2. + .25 ) );\n        }\n        \n        if( df( p ) == T ){\n            c -= .4;\n            c *= smoothstep( 0.5, .0, ( u.y / 2. + .6 ) );\n        }else{\n            c -= smoothstep( 0.5, .0, ( u.y / 2. + .25 ) ) * .4;\n        }\n        \n    }\n    \n    c += ( 1. - smoothstep( 0., .45, length(u + vec2( lk.x - o.x, 0 ) ) ) ) * 1.5;\n\n\n    U = vec4(c,1.0);\n}\n","name":"Image","description":"","type":"image"}]}