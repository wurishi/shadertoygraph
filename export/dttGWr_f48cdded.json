{"ver":"0.1","info":{"id":"dttGWr","date":"1682369856","viewed":234,"name":"dot video","username":"FabriceNeyret2","description":"in each 8x8 tiles, show the center of mass of red.\nclick for color.\n","likes":12,"published":3,"flags":32,"usePreview":0,"tags":["moment","gpmipmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// === center of mass of red in 8x8 tiles ============\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         F = fract(u/8.)*2. - 1.;                 // tile centered coords\n         \n    O = texelFetch(iChannel0, ivec2(u/R*S)/8, 3); // get location coordinates\n // O = textureLod(iChannel0, u/R*S/R, 3.);       // interpolated version\n    O.x += 1e-5;                                  // avoid div0\n    O = vec4( smoothstep(.2,-.2,length(F-2.*O.yz/O.x)-.5 ) ); // display disk\n  //if ( fract(iTime/4.)<.5)          // 2.* to amplify displacement\n    if ( iMouse.z > 0. )\n        O *= texture(iChannel1,u/R*S/R);                      // display color\n      \n         \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// === store video ==============\n// NB: report video size in Common\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O = T(u);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// === prepare MIPmap for center of mass of red in 8x8 tiles ====\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    float v = T(u).r;\n    vec2  F = fract(u/8.)*2. - 1.;\n    O.rgb = vec3( v, F * v );\n    \n // O = T(u).r * vec4(1, mod(u/4.,2.) - 1., 0 );  // golfed version\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"//vec2 S = vec2(512,396); // Britney size.\n  vec2 S = vec2(640,360); // JC.VD size.  \n  \n#define T(u) texelFetch(iChannel0, ivec2(u), 0)","name":"Common","description":"","type":"common"}]}