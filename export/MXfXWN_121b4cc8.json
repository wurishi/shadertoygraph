{"ver":"0.1","info":{"id":"MXfXWN","date":"1709520755","viewed":43,"name":"WIP Fantasia Meet the Soundtrack","username":"rarora7777","description":"A simple shader inspired by the Meet the Soundtrack section of Fantasia.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["waves","fantasiasoundtrack"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1416\n\nvec3 col0 = vec3(224.,236.,244.) / 255.;\nvec3 col1 = vec3(158.,188.,218.) / 255.;\nvec3 col2 = vec3(136.,86.,167.) / 255.;\nvec3 GOLD = vec3(1., .875, 0.);\nvec3 DARKGOLD = vec3(1., .71, 0.);\n\nfloat remap(float t)\n{\n    return t*t*(3. - 2.*t);\n}\n\nvec3 colorMap(float t)\n{\n    //return t * vec3(0.7, 0.7, 0.2);\n    return t < 0.3 ? col0 : (t < 0.8 ? col1 : col2);\n}\n\nvec3 gold(float t)\n{\n    t = remap(t);\n    return t * GOLD + (1. - t) * DARKGOLD;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n\n    // Make x symmetric about the center\n    float symX = 2.0 * abs(uv.x - 0.5);\n    \n    vec3 colBack = vec3(49.,163.,84.) / 255.;\n    \n    vec3 colTrail = vec3(189., 189., 189.) / 255.;\n    \n    vec3 colFront = vec3(0.7, 0.7, 0.2);\n    \n    float k = 4.0;\n    \n    float freq = 10.0;\n    //freq = abs(sin(2.0*PI*(uv.y + iTime) * freq));\n    freq = sin(iTime * 0.2 + 2.0*PI*freq);\n    freq = abs(sin(2.0*PI*freq)) * 2.0;\n    float xMin0 = 0.15;\n    float xMax0 = 0.6;\n    float xRange = (xMax0 - xMin0);\n    xRange = xRange * abs(sin(2.0*PI*(uv.y * 4.0 + iTime * 1.379)));\n    float xMax = xMin0 + xRange * pow( abs(sin( iTime*mouse.y*11.49 + 2.0*PI*uv.y * freq )), k );\n    float xMin = 0.01;\n    xRange = xMax - xMin;\n    \n    float stringWidth = 0.005;\n    float stringAmp = 0.01;\n    float stringFreq0 = 10.;\n    float stringX0 = 0.5 + stringAmp * sin(iTime*25.783 + 2.0*PI*uv.y * stringFreq0);\n    float stringParam0 = abs(uv.x - stringX0) / stringWidth;\n    vec3 stringCol0 = stringParam0 < 1. && stringParam0 > 0. ? gold(stringParam0) : vec3(0.);\n    \n    float stringFreq1 = 5.;\n    float stringX1 = 0.5 + stringAmp * sin(iTime*11.45 - 2.0*PI*uv.y * stringFreq1);\n    float stringParam1 = abs(uv.x - stringX1) / stringWidth;\n    vec3 stringCol1 = stringParam1 < 1. && stringParam1 > 0. ? gold(stringParam1) : vec3(0.);\n    \n    float stringFreq2 = 7.;\n    float stringX2 = 0.5 + stringAmp * sin(iTime*18.92 - 2.0*PI*uv.y * stringFreq2);\n    float stringParam2 = abs(uv.x - stringX2) / stringWidth;\n    vec3 stringCol2 = stringParam2 < 1. && stringParam2 > 0. ? gold(stringParam2) : vec3(0.);\n    \n    float stringParam = min(min(stringParam0, stringParam1), stringParam2);\n    vec3 stringCol = stringCol0 + stringCol1 + stringCol2;\n    \n    vec3 col = abs(stringParam) < 1. ? \n        stringCol : \n        (symX < xMax ? \n            colorMap( (symX - xMin) / xRange ) : \n            (xMax > 0.9*xMax0 && symX > xMax*1.15 && symX < xMax*1.2 ? colTrail : colBack));\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}