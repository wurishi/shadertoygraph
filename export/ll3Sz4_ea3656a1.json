{"ver":"0.1","info":{"id":"ll3Sz4","date":"1478367724","viewed":1614,"name":"VineTunnel","username":"dila","description":"Tunnel with some strange geometry, textured to look like plants of some sort","likes":30,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x)\n{\n\treturn mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nvec3 tri(vec3 x)\n{\n    return abs(2.0 * (x - floor(x + 0.5))) * 2.0 - 1.0;\n}\n\nfloat scale = 0.25;\nvec3 texw;\nfloat mapw;\n\nfloat map(vec3 p)\n{\n    mapw = 0.0;\n    \n    p.x += sin(p.z * scale);\n    p.y += cos(p.z * scale) * sin(p.z * scale);\n    \n    vec3 q = p;\n    \n    float d = 1000.0;\n    \n    vec3 s = vec3(1.0, 0.125, 0.125);\n    \n    float u = 1.0;\n    \n    float gt = p.z;\n\n    q = tri(q * 0.125);\n    \n    const int n = 4;\n    for (int i = 0; i < n; ++i) {\n        \n        float fi = float(i) / float(n - 1);\n        \n        q = abs(q) - u;\n\n        q.xy *= rot(q.z + gt);\n        \n        float k = sdBox(q, s);\n        \n        if (k < d) {\n            d = k;\n            texw = q;\n            mapw = float(i);\n        }\n        \n        s = s.yzx;\n        s *= 0.5;\n        u *= 0.5;\n    }\n    \n\td = max(d, 2.0 - length(p.xy));\n    \n    return d;\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 64; ++i) {\n        t += map(o + r * t) * 0.5;\n    }\n    return t;\n}\n\nvec3 textex(sampler2D channel, vec3 p)\n{\n    vec3 ta = texture(channel, p.xy).xyz;\n    vec3 tb = texture(channel, p.yz).xyz;\n    vec3 tc = texture(channel, p.xz).xyz;\n    return (ta * ta + tb * tb + tc * tc) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= 2.5;\n    \n    vec3 o = vec3(0.0, 0.0, iTime * 2.0);\n    vec3 r = normalize(vec3(uv, 1.5));\n    \n    o.x = -sin(o.z * scale);\n    o.y = -cos(o.z * scale) * sin(o.z * scale);\n    \n    r.xy *= rot(iTime * 0.2);\n    \n    float t = trace(o, r);\n    vec3 w = o + r * t;\n    float fd = map(w);\n\n    vec3 tex1 = textex(iChannel0, texw);\n    tex1 = 1.0 - pow(1.0 - tex1, vec3(2.0));\n    vec3 tex2 = textex(iChannel1, texw);\n    tex2 = 1.0 - pow(1.0 - tex2, vec3(2.0, 3.0, 2.0));\n\n    vec3 tex = tex1;\n    if (mapw > 2.0) {\n        tex = tex2;\n    }\n    \n    float fog = 1.0 / (1.0 + t * t * t * 0.01 + fd * 100.0);\n    \n    vec3 fc = tex * vec3(fog);\n    \n\tfragColor = vec4(sqrt(fc), 1.0);\n}","name":"Image","description":"","type":"image"}]}