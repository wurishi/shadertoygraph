{"ver":"0.1","info":{"id":"7s2SRW","date":"1619824141","viewed":142,"name":"MandelTest","username":"trigophers","description":"Drag mouse cursor around while holding down left click.\nRenders a Julia set based on mouse position. Full screen highly recommended, I could run full screen at 60 fps just fine.\nShader is scalable to any aspect ratio, it will still look the same.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Credit to Inigo Quilez for smooth iterations!\n#define MAXITS 1024\n\nvec3 colorize(float x) {\n    return vec3((x<4.50)?smoothstep(4.5, 0.0, x):smoothstep(0., 1.20, x-4.80),\n                (x<4.25)?smoothstep(3.0, 0.0, x):smoothstep(0., 1.75, x-4.25),\n                (x<2.00)?smoothstep(1.5, 0.0, x):smoothstep(0., 3.50, x-2.00));\n}\n\nvec3 mandelbrot(vec2 uv) {\n    vec2 z = uv*3.0;\n    vec2 mt = 2.0*vec2((iMouse.x-iResolution.x/2.0)/iResolution.y, (iMouse.y-iResolution.y/2.0)/iResolution.y);\n    for (int i = 0; i < MAXITS; i++) {\n        vec2 z2 = vec2(z.x*z.x-z.y*z.y, 2.0*z.x*z.y);\n        z = vec2(z.x*z2.x-z.y*z2.y, z.x*z2.y + z2.x*z.y) + mt;\n        if (dot(z, z) > 32.0) {\n            return colorize(mod((float(i)-log2(log2(dot(z, z)) / log2(32.0)))/10.0+4.0, 6.0));\n            break;\n        }\n    }\n    return vec3(0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.yy-vec2(iResolution.x/iResolution.y/2.0, 0.5);\n    fragColor = vec4(mandelbrot(uv), 1.0);\n}","name":"Image","description":"","type":"image"}]}