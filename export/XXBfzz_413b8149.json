{"ver":"0.1","info":{"id":"XXBfzz","date":"1729105048","viewed":68,"name":"Damaged VC ATCT","username":"AtCat","description":"Simulating a damaged VCR playing a video","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define toBlackWhite(R,G,B) (0.2126*R + 0.7152*G + 0.0722*B)\n#define triWave(t, freq, amp) (abs(fract(t * freq) - 0.5) - 0.5) * 2.0 * amp\n\nfloat hash11( uint n ) \n{\n    // integer hash copied from Hugo Elias\n\tn = (n << 13U) ^ n;\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\n    return float( n & uint(0x7fffffffU))/float(0x7fffffff);\n}\n\nfloat zebra(float y, float sharpness)\n{\n    float val = fract(y);\n    val = abs(val - 0.5);\n    val = smoothstep(0.0, sharpness, val);\n    return val;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float random1 = 500.0 * hash11(114514U);\n    float random2 = 1000.0 * hash11(1919810U);\n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;\n    \n    // blitz\n    float blitz = 2.0 * fract(iTime * 0.08) - 0.5;\n    float roffsety = sin(iTime * 1.0)*0.002;\n    float goffsety = -0.01 + sin(iTime * 2.0)*0.002;\n    float boffsety = -0.01 + triWave(iTime, 2.0, 0.01) + triWave(iTime + random1, 4.0, 0.005)+ triWave(iTime + 1000.0 * random2, 8.0, 0.0025);\n    \n    float distBlitz = uv.y - blitz;\n    bool isBlitz = distBlitz < 0.25 && distBlitz > 0.0;\n    isBlitz = isBlitz && zebra(distBlitz * 170.0, 0.5) < 0.5;\n    float offsetx = isBlitz? hash11(uint(uv.y * 1154.0)) * 0.015: 0.0;\n    \n    vec2 offset1 = vec2(offsetx, roffsety);\n    vec2 offset2 = vec2(offsetx, goffsety);\n    vec2 offset3 = vec2(offsetx, boffsety);\n    \n    vec3 rlum = texture(iChannel0, warpedUv + offset1).rgb;\n    vec3 glum = texture(iChannel0, warpedUv + offset2).rgb;\n    vec3 blum = texture(iChannel0, warpedUv + offset3).rgb;\n    \n    float r = toBlackWhite(rlum.r,rlum.g,rlum.b);\n    float g = toBlackWhite(glum.r,glum.g,glum.b);;\n    float b = toBlackWhite(blum.r,blum.g,blum.b);;\n                          \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}