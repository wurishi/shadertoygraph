{"ver":"0.1","info":{"id":"tdffW4","date":"1588242133","viewed":340,"name":"Translate by mouse & matrix","username":"forestgril","description":"A simple example, how to translate scene by mouse coordinates, by using matrix mutliplication. It mainly highlights, that matrix constructor takes vectors column major. Click/drag to change camera/scene position.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["mouse","order","translate","major","mat4","rowmajor","columnmajor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat4 MakeTranslationMatrix3D(const in vec3 Offset)\n{ \n    return mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0,0.0), vec4(Offset.x, Offset.y, 0.0, 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord)/iResolution.xy ;\n\n    vec3 translationVector = vec3(-iMouse.x/iResolution.x, -iMouse.y/iResolution.y, 0.0);\n    mat4 translateByMousePos = MakeTranslationMatrix3D(translationVector);\n   \n    vec4 uv4 = vec4(uv.x ,uv.y, 0,1);\n    \n    vec3 col = 0.5 + 0.5*cos(32.0*(translateByMousePos*uv4).xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}