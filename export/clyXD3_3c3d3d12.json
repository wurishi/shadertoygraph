{"ver":"0.1","info":{"id":"clyXD3","date":"1686398062","viewed":44,"name":"z+z^2+z^4+z^8+...","username":"77Tigers","description":"natural boundaries are weird man","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["naturalboundary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nvec2 m(vec2 x, vec2 y) {\n    return vec2(x.x*y.x - x.y * y.y, x.x * y.y + x.y * y.x);\n}\n\nvec2 sqr(vec2 x) {\n    return m(x, x);\n}\n\n// return argument\nfloat arg(vec2 x) {\n    return 0.0;\n}\n\n// Smooth HSV to RGB conversion \n// https://www.shadertoy.com/view/MsS3Wc\nvec3 hsv2rgb_smooth( in vec3 c ) {\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 mo = 2. * (iMouse.xy - iResolution.xy * .5)/iResolution.y;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 p = 2. * (fragCoord - iResolution.xy * .5)/iResolution.y;\n    vec2 centre = 1. * vec2(cos(iTime*.03), sin(iTime*.03));\n    p = (p*0.1 - centre);\n\n    vec3 col = vec3(.0);\n    \n    {//if (p.x*p.x + p.y*p.y <= 1.0) {\n        vec2 x = p;\n        vec2 ttl = x;\n        const int ITERS = 30;\n        int i;\n        for (i = 0; i < ITERS; i++) {\n            x = sqr(x);\n            ttl += x;\n            if (x.x*x.x + x.y*x.y > 100.) {\n                break;\n            }\n        }\n        float v = tanh(ttl.x * 10.) * tanh(ttl.y * 10.);// tanh(length(ttl))\n        v = v * v;\n        col = hsv2rgb_smooth(vec3(2. / PI * atan(ttl.y / ttl.x), 1., v));\n        if (i < ITERS) {\n            col = vec3(pow(float(i) / float(ITERS), .4));\n        }\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}