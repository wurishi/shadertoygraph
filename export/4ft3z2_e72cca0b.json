{"ver":"0.1","info":{"id":"4ft3z2","date":"1711961533","viewed":46,"name":"day 2 - random color blocks","username":"dave22153","description":"shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fractSin(float x, float multiplier) {\n    return fract(sin(x) * multiplier);\n}\n\nvec3 hash3(float x, float addition) {\n    return vec3(\n        fractSin(x, 438.5453 + addition),\n        fractSin(x, 187.3987 + addition),\n        fractSin(x, 928.3498 + addition)\n    );\n}\n\nfloat stepped(float x, float stepSize) {\n    return x - mod(x, stepSize);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float n = 20.;\n    float aspect= iResolution.y / iResolution.x;\n    vec2 a= fract(uv*vec2(n/2.,n/2.*aspect))-.5;\n    float b= step(a.x * a.y, 0.);\n    \n    float addition = mod(iTime * .0234, 18.);\n    vec3 c= hash3(\n        (stepped(uv.x, 1./n) + .41) * (stepped(uv.y, 1./n / aspect)+.1522),\n        addition);\n    \n    vec3 d = mix(c, vec3(mix(.3,.8,b)), mix(.1,.7,(sin(iTime)+1.)/2.));\n    \n    fragColor = vec4(d, 1.);\n}","name":"Image","description":"","type":"image"}]}