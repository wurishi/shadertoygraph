{"ver":"0.1","info":{"id":"fsK3zR","date":"1630967280","viewed":70,"name":"Yay the sdf works","username":"Bloodwyn","description":"I must give a description\n\nMy First Shader...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"fsKGzR","parentname":"SDF test for private use"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smin( float a, float b, float k ){\n    float h = max(k-abs(a-b),0.0);\n    return min(a, b) - h*h*0.25/k;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 total = vec3(0);\n    \n    float v = 1./3.;\n    vec2 AAoffsets[4] = vec2[](\n        vec2(v,v),\n        vec2(v,-v),\n        vec2(-v,v),\n        vec2(-v,-v)\n     );\n    \n    \n    for(int i = 0; i < AAoffsets.length(); i++){\n        vec2 uv =  (2. * (fragCoord + AAoffsets[i]) - iResolution.xy) / iResolution.xy;\n\n\n        uv.y /= iResolution.x / iResolution.y;\n\n        vec2 P = vec2(0,0);\n        vec2 R = vec2(0.2,0.1);\n        \n        float t = fract(iTime);\n        t = t * t * t * (t * (t * 6. - 15.) + 10.);\n        \n        uv.x += \n            float(int(iTime) & 1) * (t*2.5f - 1.25) +\n            float(int(iTime)+1 & 1) * ((1.-t)*2.5f - 1.25);\n            \n        uv.y += sin(iTime*10.)/3.5;\n\n        float d = length(max(abs(uv)-R, 0.));\n\n        total += vec3(fract(d*15.));\n    }\n    \n    total /= float(AAoffsets.length());\n    \n    fragColor = vec4(total, 1.0);  \n}","name":"Image","description":"","type":"image"}]}