{"ver":"0.1","info":{"id":"wdKfzW","date":"1606733357","viewed":389,"name":"DNA'd","username":"Carandiru","description":" port of https://observablehq.com/@pallada-92/3d-engine-in-dna-code\n\"DNA 3D Engine\"","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["cube","dna"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// port of https://observablehq.com/@pallada-92/3d-engine-in-dna-code\n// absolutely crazy \n\n#define fma(a,b,c) (a * b + c)\n\nvec3 rotate( in vec3 p, in vec2 cossin )\n{\n\t//return(XMVectorSet(SFM::__fms(p.x, angle.c, p.y * angle.s),\n\t//\t\t\t\t     SFM::__fma(p.x, angle.s, p.y * angle.c), p.z, p.w));\n\t#define c_ x\n\t#define s_ y\n    \n\treturn( vec3(fma(p.x, cossin.c_, p.z * cossin.s_), p.y, fma(p.x, -cossin.s_, p.z * cossin.c_)) );\n\n\t#undef c_\n\t#undef s_\n}\n\nfloat getCellBrightness(float row, float col) {\n  vec3 n;\n  n.x = 0.04 + col * 0.56 + row * 0.15;\n  n.y = 0.85 + row * -0.52;\n  n.z = 0.74 + col * -0.27 + row * 0.30;\n\n  float nn = 1.0f / (n.x + n.y + n.z);\n\n  vec2 cossin = vec2(cos(iTime), sin(iTime));\n    \n  float v = 0.0;\n  for (uint iter=0u; iter<100u; ++iter) {\n    \n    vec3 p;\n    p.x = -0.61 + v * n.x * nn;\n   \tp.y = -0.90 + v * n.y * nn;\n    p.z = -1.24 + v * n.z * nn;\n    \n    p = rotate(p, cossin);\n    \n    v += max(abs(p.x), max(abs(p.y), abs(p.z))) - 0.3;\n  }\n\n  return (v - 1.75) / 1.70;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3( getCellBrightness(uv.x, uv.y) );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}