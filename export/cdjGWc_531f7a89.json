{"ver":"0.1","info":{"id":"cdjGWc","date":"1668249114","viewed":136,"name":"12 Draw an image of the function","username":"ccc9527","description":"Draw an image of the function","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["function","draw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nvec3 Grid(in vec2 uv) //绘制坐标系及网格\n{\n    vec2 cell = floor(mod(uv,2.)); //取余\n    vec3 res = vec3(0.4);\n    \n    if(cell.x == cell.y) res = vec3(0.6);\n    \n    //fwidth(uv.x)表示水平方向一个像素的宽度\n    res = mix(res,vec3(0),smoothstep(1.1*fwidth(uv.x),fwidth(uv.x),abs(uv.x)));//y轴，黑色\n    res = mix(res,vec3(0),smoothstep(1.1*fwidth(uv.y),fwidth(uv.y),abs(uv.y)));//x轴，黑色\n\n    return res;\n}\n\nvec2 fixUV(vec2 fragCoord)\n{\n    return 3.*(2.*fragCoord - iResolution.xy) / min(iResolution.x,iResolution.y);\n}\n\nfloat Function(float x)  //需要绘制的图形的函数\n{\n    vec2 m = fixUV(iMouse.xy);\n    float T = 4.+2.*cos(iTime);\n    if(iMouse.z>0.1)\n        T += m.x;\n    \n    //return smoothstep(1.,0.,x);\n    //return mod(x,2.);\n    return sin(2.*PI/T*x+iTime);\n}\n\nfloat Draw(vec2 uv)\n{\n    float fx = uv.x;//当前uv点的x值\n    float fy = Function(fx);//用当前uv点的x值带入要绘制的函数种得到对应的y值\n\n    return smoothstep(fy-0.01,fy+0.01,uv.y);\n}\n\n#define AA 4\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv = fixUV(fragCoord);\n    \n    vec3 col = Grid(uv);\n    \n    float count = 0.;\n    for(int m=0;m<AA;m++)\n    {\n        for(int n=0;n<AA;n++)\n        {\n            vec2 offset = (vec2(float(m),float(n))-0.5*float(AA))/float(AA)*2.;\n            count += Draw(fixUV(fragCoord+offset));\n        }\n    }\n    \n    if(count>float(AA*AA)/2.)\n        count = float(AA*AA)-count;\n    count = 2.*count/float(AA*AA);\n    \n    col = mix(col,vec3(1.,1.,0.),count);\n  \n    //col = vec3(Draw(uv));\n    \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}