{"ver":"0.1","info":{"id":"tdy3Rh","date":"1569689950","viewed":127,"name":"simple function plot","username":"n88","description":"i made this to play around combining different functions\nuse mouse to move the origin point","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["graph","plotter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f(float x) {\n    return sin(x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Setting up the grid:\n    vec3 gridColor = vec3(1., .2, .0);\n    vec3 axesColor = vec3(.0, .2, 1.);\n    \n    vec2 uvScale = vec2(3.1415, 2.)*3.;\n    vec2 gridStep = vec2(3.1415, 1.);\n    \n    //for standard unit grid:\n\t//uvScale = vec2(10.,10.);\n    //gridStep = vec2(1.,1.);\n    \n    \n    float t = iTime;\n    \n    \n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    float px = .7/iResolution.y*uvScale.y;\n    float pxx = 1./iResolution.y;\n\n    vec3 col = vec3(.0);\n    \n    \n    vec2 cursor = (iMouse.xy-0.5*iResolution.xy)/iResolution.y;\n    \n    uv -= cursor;\n\n    uv *= uvScale;\n    float x = uv.x;\n\t\n    \n    //Modify the functions shown:\n    \n    float f1 = sin(x - t);\n    //float f1 = sign(sin(x*3.1415 - t));\n    vec3 f1Color = vec3(.8, .0, .0);\n    \n    //float f2 = sin(x - t*.5);\n    //float f2 = 2.*abs(fract(.5*x) -.5);\n    float f2 = -floor(sin(x));\n    vec3 f2Color = vec3(0., .8, .0);\n    \n    float f3 = f1 + f2;\n    //float f3 = f1*f2;\n    //float f3 = max(f1,f2);\n    vec3 f3Color = vec3(1., 1., 1.);\n    \n    \n    \n    \n    vec2 guv = fract(uv/gridStep);\n    \n    float f1Mask = smoothstep(-px, px, -f1 + uv.y);\n    col += .2*f1Mask*f1Color;\n    float f1MaskLine = smoothstep(-2.*px, .0, -f1 + uv.y) - smoothstep(.0, 2.*px, -f1 + uv.y);\n    col += f1MaskLine*(f1Color+.2);\n    \n    float f2Mask = smoothstep(-px, px, -f2 + uv.y);\n    col += .2*f2Mask*f2Color;\n    float f2MaskLine = smoothstep(-2.*px, .0, -f2 + uv.y) - smoothstep(.0, 2.*px, -f2 + uv.y);\n    col += f2MaskLine*(f2Color+.2);\n    \n    float f3Mask = smoothstep(-px, px, -f3 + uv.y);\n    col += .2*f3Mask*f3Color;\n    float f3MaskLine = smoothstep(-2.*px, .0, -f3 + uv.y) - smoothstep(.0, 2.*px, -f3 + uv.y);\n    col += f3MaskLine*(f3Color+.2);\n    \n    float gridMask = 2. - step(pxx*uvScale.x/gridStep.x, guv.x) - step(pxx*uvScale.y, guv.y);\n    gridMask *= .3;\n    col *= 1.*(1.-gridMask);\n    col += gridColor*gridMask;\n    \n    if (abs(uv.x) <= pxx*uvScale.x || abs(uv.y) <= pxx*uvScale.y) {\n    \tcol *= .2;\n        col += .8*axesColor;\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}