{"ver":"0.1","info":{"id":"WsXfRr","date":"1587775697","viewed":204,"name":"fluid_thingy_1","username":"balkhan","description":"Mouse click draw, space reset. \nFollowing this tutorial : http://wyattflanders.com/MeAndMyNeighborhood.pdf\npractice makes practice, or so they say ! ","likes":20,"published":1,"flags":48,"usePreview":0,"tags":["2d","fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n** Following this tutorial : http://wyattflanders.com/MeAndMyNeighborhood.pdf\n*/\n\nvoid mainImage( out vec4 o, in vec2 f )\n{\n    o = (A(f/R).xyzw);\n\to = abs(sin(o.z*1.0*3.14*10.+1.57*.0+.50*vec4(.0,1.04,2.08,.0)+3.14*o.wwww*1.*.0) );\n//    o = (1.*B(f/R).xxxx)*1.;\n    //o -= sin(o.z*.0+vec4(.0,1.04,2.08,.0)+3.14*B(f/R).xxxx*1.*2.0);\n    /*\n    o.xyz -= mix(\n    vec3(.9,.8,.59)\n        ,\n        vec3(.7, .3, .4)\n        ,\n        o.w\n    );\n\t*/\n    \n    //o = (1.*A(f/R).wwww);\n\t//o = (1.*A(f/R).xyxy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*\n** Following this tutorial : http://wyattflanders.com/MeAndMyNeighborhood.pdf\n*/\n\nconst vec2 n = vec2(+.0, +1.);\nconst vec2 s = -n;\nconst vec2 w = vec2(+1., +0.);\nconst vec2 e = -w;\n\nvec4 F(vec2 p)\n{\n\tvec2 r = A(p/R).xy;\n    r = p - r;\n    //r += sin(g(B(r/R))*50.)*.125;\n    return A(r/R);//-NA(r/R)*.0125;\n}\n\nvoid mainImage( out vec4 o, in vec2 f )\n{\n    if (f.x < 10. || f.y < 10. || -f.x+R.x < 10. || -f.y+R.y < 10.) {o = vec4(0.); return;}\n\n    float kb = C(vec2(32.5/256., 0.25)).x;\n    if (kb > .5 || iFrame < 3) {o = vec4(0.,0.,0., .0 ); return;}\n\n    o = F(f);//-NA(f/R)*.25;\n    vec4 En = F(f+n);\n    vec4 Es = F(f+s);\n    vec4 Ew = F(f+w);\n    vec4 Ee = F(f+e);\n\n    o.z = (En + Es + Ew + Ee).z * .025;//0625;//06125;\n\n    o.xy += cs(600.*length(vec2(Ee.z - Ew.z, Es.z - En.z))) * iTimeDelta*.125;//+-cs(g(B(f/R))*500.)*.006125;\n\n    o.z += (Es.y - En.y + Ee.x - Ew.x) *.25;\n\n    //o.xy += (B(f/R).xy -.5)/400.;\n    //o.w += g(B(f/R));\n\n    vec2 grav  = (iMouse.xy-f)/5.;\n    float r = dot(grav, grav);\n    vec2 t = vec2(.0, 1.);\n\tvec2 u = (f-R*.5)/R.xx;\n    rotate(t, \n          sin(\n          \t(atan(u.x, u.y)*1.+-length((u-o.xy*1.*o.w)*o.w)*300.)\n          )*6.28\n           +.0*10./(.1+abs(o.z) )\n          );\n\n    o.xy += (t )*o.w /1500.;\n\t//o.xy += o.w*cs(r*.5)/10.;//-1./(r+.1);\n\n//    o.w += g(B(f/R))*iTimeDelta*.25;\n    o.w += (Ee.x*Ee.w-Ew.x*Ew.w+Es.y*Es.w-En.y*En.w) * .25;\n//o.w += -B(f/R).x*.101;\n    //o.xy += o.w*cs(o.w*50.*1.0+g(B(f/R))*5000. )*.505;\n    //o.xy += o.w*cs( (o.w*10./(1.0001+g(B(f/R)))) * 100.)*.10501;\n    //o.xy += -NA(f/R).xy*1./8.;\n    //o.w += .001001 * (g(B(f/R))*2.-1.);\n\n    \n    //o.xy += o.w*cs(B(f/R).x*100.*.0+o.w*6.)*iTimeDelta*.25;//*.5;\n    //o.xy += .001/(1.001 + dot(o.xy-length(f.xy-R*.5)/R*.5, o.xy-length(f.xy-R*.5)/R*.5 ));\n    if (\n        length(f-R*.5) < 50.\n        ) \n        o.w += iTimeDelta*1.0;//250625;\n    if (\n    iMouse.z > .5 && length(f-iMouse.xy) < 100.\n    )\n        o *= .0;\n\n    o = clamp(o, -1.0, 1.);\n}\n\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\n/* Linear Filtering Shim by Theron Tarigo, 2019.\n   https://www.shadertoy.com/view/tssXWf\n\n   The following codes may be used and copied freely,\n   with or without attribution.  However, please do not\n   remove the URL, so that others may find the explanation\n   provided here, which may be expanded in future.\n   This is not a legal requirement.\n*/\n\n#define LINEAR_FILTER_CONFIG  true,true,true,true\n\nconst struct LINEARFILTER_T {\n  bool iChannel0, iChannel1, iChannel2, iChannel3;\n} LINEARFILTER = LINEARFILTER_T(LINEAR_FILTER_CONFIG);\n\nconst struct SAMPLERINDEX_T {\n  int iChannel0, iChannel1, iChannel2, iChannel3;\n} SAMPLERINDEX = SAMPLERINDEX_T(0,1,2,3);\n\nvec4 textureLinearPix (sampler2D sampler, vec2 U) {\n  return mix(mix(\n      texelFetch(sampler,ivec2(U)+ivec2(0,0),0),\n      texelFetch(sampler,ivec2(U)+ivec2(1,0),0),\n    fract((U).x)),mix(\n      texelFetch(sampler,ivec2(U)+ivec2(0,1),0),\n      texelFetch(sampler,ivec2(U)+ivec2(1,1),0),\n    fract((U).x)),fract((U).y));\n}\n\n#define textureLinear(sampler,P) textureLinearPix(sampler, \\\n    (P)*iChannelResolution[SAMPLERINDEX.sampler].xy-vec2(.5))\n\n#define texture(sampler,P) ( LINEARFILTER.iChannel0 ? \\\n    textureLinear(sampler,P) \\\n  : texture(sampler,P) )\n// End of Linear Filtering Shim\n\n#define R iResolution.xy\n\nfloat mylength(vec2 p) {vec2 a = abs(p); return max(a.x, a.y);}\n\nvoid rotate(inout vec2 v, float angle)\n{\n\tv = vec2(cos(angle)*v.x+sin(angle)*v.y,-sin(angle)*v.x+cos(angle)*v.y);\n}\n\n// grayscale\n#define g(c) (.3*c.x + .59*c.y + .11*c.z) \n\nvec2 cs(float a) { return vec2(cos(a), sin(a)); }\n\n//code shortcuts\n\n#define A(u) texture(iChannel0, u)\n#define B(u) texture(iChannel1, u)\n#define C(u) texture(iChannel2, u)\n#define D(u) texture(iChannel3, u)\n","name":"Common","description":"","type":"common"}]}