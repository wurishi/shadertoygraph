{"ver":"0.1","info":{"id":"XttBDX","date":"1541952023","viewed":1059,"name":"try sphere volumetric pro","username":"cailuming","description":"I want to make some bloom eft but failed, anyway, I love this try ","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["skyvolumetric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n#define MAXIT  256.\n\nstruct Ray {\n   vec3  o;\n   vec3  d;\n};\n    \nmat2 rot2D(float a){\n    float c = cos(a);\n    float s = sin(a);\n    \n    return mat2(c,-s,s,c);\n}\n\n\nvec3 getCol(float v){\n    float r = cos((v-0.75)*PI*1.5);\n    float g = cos((v-0.55)*PI*1.5);\n    float b = cos((v-0.25)*PI*1.5);\n    \n    return vec3(r,g,b);\n}    \n\n\nvoid drawStars(inout vec3 col,vec2 uv,vec2 c){\n   uv-=c;\n    \n   uv*=2.8;\n   \n   float l =length(uv);\n   float arc = atan(uv.y,uv.x); \n     \n   float d = abs(dot(vec2(0,1),uv));\n   float d1 = abs(dot(vec2(1,0),uv));\n   float ctv = c.x*10.0;\n   // clip the star\n   d+=pow(l,1.1+0.6*cos(iTime*2.0+ctv));\n   d1+=pow(l,1.1+0.6*cos(iTime*2.0+ctv));\n   \n   float v =0.0005/l;  \n   // blend the star\n   v+=0.01/(d);\n   v+=0.01/(d1);\n   v=pow(v,1.6);\n    \n   col+=vec3(cos(iTime+ctv)*0.1+0.5,sin(iTime+ctv)*0.4+0.5,sin(iTime)*0.3+0.7)*v;\n}\n\nvoid drawStarGroup(inout vec3 col,vec2 uv,float starNum){\n    for (float i=0.0;i<starNum;i++){\n        drawStars(col,uv,vec2(i*0.1*sin(i),cos(i)*0.3));\n    }\n}\n\nvoid drawMeteor(inout vec3 col, in vec2 uv,vec2 startP,vec2 endP,float linWidth){\n \n   uv*=3.0;\n   vec2 lineDir=endP-startP;\n   vec2 fragDir=uv-startP;\n   \n   // keep the line coefficient bewteen [0,1] so that the projective dir on the \n   // lineDir will not exceed or we couldn't get a line segment but a line.\n   float lineCoe=clamp(dot(lineDir,fragDir)/dot(lineDir,lineDir),0.,1.0);\n                       \n   vec2 projDir=lineCoe*lineDir;\n    \n   vec2 fragToLineDir= fragDir- projDir;\n    \n   float dis=length(fragToLineDir);\n   float disToTail = length(projDir);\n   dis=linWidth/dis;\n     \n   col += vec3(dis*0.2,dis*0.6,0.8*dis)*pow(disToTail,3.0);\n    \n}\n \nvoid drawMeteors(inout vec3 col,vec2 uv){\n    vec2 starPosBegin = vec2(0.5,0.4);\n    vec2 starPosEnd = vec2(-0.5,-0.1);\n    vec2 starDir = normalize(starPosEnd-starPosBegin);\n    float trackC = 16.*cos(mod(-iTime*0.5,PI));\n    vec2 starCoe = starDir*trackC*2.0;\n    \n    drawMeteor(col,uv,starPosBegin+starCoe,starPosEnd+starCoe,0.03);\n\n}\n \nvec3 grad2D(vec3 p){\n   float arch = atan(p.z,p.x); \n   float lnc = length(texture(iChannel0,vec2(arch,p.y)));\n   float offx = length(texture(iChannel0,vec2(atan(p.z,p.x+0.0001),p.y)));\n   float offy = length(texture(iChannel0,vec2(arch,p.y+0.0001)));\n    \n   return normalize(vec3(offx-lnc,offy-lnc,0.1)); \n}\nvoid setCamera(inout Ray r,vec3 eye,vec3 tar,vec2 uv){\n   vec3 look = normalize(tar-eye);\n   vec3 right = normalize(cross(vec3(0,1,0),look));\n   vec3 up = normalize(cross(look,right)); \n   \n   r.o = eye;\n   r.d = normalize(uv.x*right+uv.y*up+look);\n}\n \nvoid sphereVolume(inout vec3 col,inout Ray r,vec3 lp,vec3 lp1,vec2 uv){\n   \n   \n   vec3 p   = r.o+r.d;\n   vec3 p1  = p;\n   \n   vec3 c   = vec3(0);\n   vec3 n   = vec3(0);\n   vec3 ld  = vec3(0);\n   vec3 ld1  = vec3(0);\n   \n   float ra   = 2.0; \n   \n   float t =(length(p-c)-ra);\n   float plen = 0.;\n    \n   float atmosv  = 0.;\n   float planetv = 0.;\n   \n   float steps = .01;\n   float nl = 0.;\n   float nl1 = 0.;\n   float li = 0.; \n   vec3 start = r.o+r.d*t;\n    \n   for(float i=0.;i<MAXIT;i++){\n       p= start+r.d*i*0.01;\n       p1=start+r.d*i*0.01;\n       plen = length(p);\n       // draw the planet\n       if(plen<=ra){\n           \n           if(abs(n.x)<=0.){\n              ld  =  normalize(lp-p);\n              ld1  =  normalize(lp1-p);\n               \n              n = normalize(p); \n              nl = smoothstep(0.,1.,dot(ld,n));\n              nl1 =  smoothstep(0.,1.,dot(ld1,n))/(length(lp1)*0.2);\n           }\n           p.xz*=rot2D(iTime*0.2);  \n           \n           if(plen>ra-0.35){\n              atmosv+=steps*(nl+nl1)*0.6;\n              li += smoothstep(-1.,1.,pow(dot(ld,r.d),2.)+1.)*steps;   \n           }else{ \n              planetv=1.;\n              break; \n           }\n               \n       }else if(dot(p,r.o)<0.){\n           break;\n       }  \n        \n   }\n    \n   if(planetv<=0.){\n        drawMeteors(col,uv);\n        drawStarGroup(col,uv,16.); \n   }\n    \n   vec3 ocolor = getCol(1.1-(atmosv+li)*0.3)*atmosv;\n   vec3 pcolor = planetv*texture(iChannel0,vec2(atan(p.z,p.x),p.y)*0.8).xyz;\n   nl+=nl1; \n   col+=smoothstep(0.,1.,(ocolor*(li+nl)+pcolor*nl));\n       \n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 tuv = fragCoord/iResolution.xy;\n    vec2 uv = tuv-vec2(0.5);\n    uv.x*=iResolution.x/iResolution.y;\n   \n    vec3 eye = vec3(0,0,-6);\n    vec3 tar = vec3(0,0,1);\n    vec3 lp  = vec3(20.*cos(iTime*0.4),1,20.*sin(iTime*0.4));\n    vec2  vd = normalize(vec2(-1,-0.5));\n    float trac  = 96.*cos(mod(-iTime*0.5,PI));\n    vec3 lp1  = vec3(1.+vd.x*trac,1.4+vd.y*trac,-20.);\n    \n    vec3 col = vec3(0);\n    \n    Ray r;\n    \n    setCamera(r,eye,tar,uv);\n    \n    sphereVolume(col,r,lp,lp1,uv);\n  \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}