{"ver":"0.1","info":{"id":"DtXSR4","date":"1674325972","viewed":136,"name":"Diagonal Rainbow Stripes","username":"ioblackshaw","description":"Fairly simple rainbow effect generated with rounded square waves","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rainbow","stripe","bar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// controls how often the colour pattern repeats\n// - smaller values = wider colour stripes\n// - bigger values = thinner colour stripes\nfloat COLOUR_FREQUENCY = 20.;\n\n// how quickly the stripes animate\n// - bigger values = faster\nfloat ANIMATION_SPEED = 1.5;\n\n// Controls how bright the colours are.\n//   These values are multiplied to the final rainbow colours and can be used\n//   to adjust the overall red green or blue values seperately\n// - bigger values = brighter colour\n// - smaller values = darker colour\nvec3 RAINBOW_BRIGHTNESS = vec3(1.2, 1.5, 1.3);\n\n\nvec3 rainbowStripes(float frequency, float speed, vec2 uv, vec3 brigntess){\n    float stripe = (frequency * (uv.x + uv.y)) - (iTime * speed);   \n\n    // https://www.desmos.com/calculator/uehassmmpa visualisation of the values below\n\n    float period = 6.;\n    vec3 col = vec3(\n        round(abs( mod(stripe, period)     - (period/2.) )) / (period/2.),\n        round(abs( mod(stripe + 2., period) - (period/2.) )) / (period/2.),\n        round(abs( mod(stripe + 4., period) - (period/2.) )) / (period/2.)\n    );\n\n    return col * brigntess;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xx;\n    vec4 color = vec4(1);\n\n    color.rgb = rainbowStripes(COLOUR_FREQUENCY, ANIMATION_SPEED, uv, RAINBOW_BRIGHTNESS);\n    \n    fragColor = color;\n}\n","name":"Image","description":"","type":"image"}]}