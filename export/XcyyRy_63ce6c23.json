{"ver":"0.1","info":{"id":"XcyyRy","date":"1731994078","viewed":39,"name":"the Julia Set","username":"ProfessorPixels","description":"I realised that i didn't have a regular fractal shader because i deleted my old one.\nNow this one has a colour palette.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"my fwactal :)\" by ProfessorPixels. https://shadertoy.com/view/4cVcWD\n// 2024-11-19 05:25:24\n\n// Fork of \"2.5d ball\" by ProfessorPixels. https://shadertoy.com/view/MXXcDX\n// 2024-11-18 02:11:47\n\n// Fork of \"wondering light\" by ProfessorPixels. https://shadertoy.com/view/l3yGRV\n// 2024-09-19 03:32:07\n#define R iResolution.xy\n#define mi 100.\nconst float sssamples = 4.;\nvec2 f(vec2 p)\n{\n    return vec2(p.x*p.x-p.y*p.y,2.*p.x*p.y);\n}\nvec2 h(vec3 p)\n{\n    return fract(p.z*p.yx*sin(p.z*dot(p.xy,vec2(.923,1489.34)))*234.21);\n}\nfloat iter(vec2 z, vec2 c)\n{\n    for (float i; i<mi;i++)\n    {\n        z=f(z)+c;\n        if (dot(z,z)>4.) return i;\n    }\n    return mi;\n}\nvec3 palette(float p)\n{\n    return cos(6.2*(clamp(p,0.,1.)+vec3(.5,.8,.3)))*.5+.5;\n}\nvec2 Unify(vec2 p)\n{\n    return (p-R*.5)/min(R.x,R.y)*3.;\n}\nvoid mainImage(out vec4 O,vec2 F)\n{\n    vec2 C;\n    if (iMouse.z<.5) C = sin(iTime*vec2(1,.95)+vec2(0,1.5707));\n    else {C = Unify(iMouse.xy);}\n    O=vec4(0);\n    for (float i=0.; i<sssamples;i++)\n    {\n        O+=vec4(palette(iter(Unify(F+h(vec3(F,i))),C)/mi),1);\n    }\n    O/=sssamples;\n    //O=vec4(palette(iter(Unify(F),C)/mi),1);\n    if (length(F-vec2(0,-.35))<.02) O=vec4(1,0,0,1);\n    if (F.y<-1.5) O=vec4(palette(F.x),1);\n}","name":"Image","description":"","type":"image"}]}