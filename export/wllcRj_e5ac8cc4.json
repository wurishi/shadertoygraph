{"ver":"0.1","info":{"id":"wllcRj","date":"1592523062","viewed":754,"name":"inspired by something on instagr","username":"mds2","description":"I saw https://www.instagram.com/p/CBk_UttnIi9/ and wondered if I could copy the effect myself.","likes":19,"published":3,"flags":2,"usePreview":0,"tags":["simple","lines","webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float spacing = 7.0;\nconst float thick = 1.0;\n\nfloat to_stripe(in float frag_y) {\n    float saw = mod(frag_y, spacing) - 0.5 * spacing;\n    float tri = abs(saw);\n    tri = tri - 0.5 * thick;\n    return clamp(tri, 0.0, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float y_samp = fragCoord.y - mod(fragCoord.y, spacing);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = vec2(fragCoord.x, y_samp)/iResolution.xy;\n    \n    float bright = dot(texture(iChannel0, uv).rgb, vec3(0.57735));\n    bright = clamp(bright, 0.0, 1.0);\n    \n    float perturbed_y = fragCoord.y + spacing * bright;\n\n    // Time varying pixel color\n    vec3 col = vec3(to_stripe(perturbed_y));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}