{"ver":"0.1","info":{"id":"wtlcDj","date":"1593152130","viewed":137,"name":"Color Noise","username":"marcelliino","description":"Non Black and White Noise","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 pixelate(vec2 pos, float res){\n    return floor(pos * res+0.5)/res;\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy / 0.5 - 1.0;\n    float ratio = max(iResolution.x, iResolution.y)/min(iResolution.x, iResolution.y);\n    if(iResolution.x > iResolution.y){\n        uv.x *= ratio;\n    }else{\n        uv.y *= ratio;\n    }\n    \n    vec3 col = vec3(0.0);\n    \n    uv = mix(pixelate(uv, 2.0), pixelate(uv, 6.0), cos(iTime/6.0)*0.5+0.5);\n  \tuv /= 0.5;\n    \n    float len;\n    const int mult = 3;\n    for(int i = 0; i < mult; i++){\n        len = length(uv);\n        uv.x += sin(uv.y - cos(len)) + cos(iTime/9.0);\n        uv.y += cos(uv.x - sin(len)) + sin(iTime/12.0);\n    }\n    vec3 liq = vec3(uv, len);\n    \n    col = hsv2rgb(vec3(length(fract(liq)), mod(ceil(len*2.5-0.5)/2.5, 5.0+4.0*cos(iTime/3.0)), 1.0));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}