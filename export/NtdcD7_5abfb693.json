{"ver":"0.1","info":{"id":"NtdcD7","date":"1659956450","viewed":59,"name":"mMandelbrotSet","username":"yoifox","description":"mandelbrot","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define cx_mul(a, b) vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x)\n\nint julia(vec2 position, vec2 c) {\n    vec2 z = position;\n    for(int i = 0; i < 50; i++) {\n        z = cx_mul(z, z) + c;\n        if(length(z) > 2.0) return i;\n    }\n    return 50;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / vec2(iResolution.x, iResolution.y);\n    uv *= 4.0;\n    uv.x = uv.x * iResolution.x / iResolution.y;\n    uv.x -= (iResolution.x / iResolution.y / 2.0) * 4.0;\n    uv.y -= 0.5 * 4.0;\n    float col = float(julia(uv, uv)) / 50.0;\n    fragColor = vec4(col, col, col, 1.0);\n}","name":"Image","description":"","type":"image"}]}