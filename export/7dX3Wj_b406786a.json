{"ver":"0.1","info":{"id":"7dX3Wj","date":"1616530681","viewed":88,"name":"Conic waltz","username":"nuthinking","description":"https://twitter.com/marioecg/status/1374446763327643681","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["marioecg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// from https://gist.github.com/marioecg/b163c5b4f7f5086137defd78dbb34e1f\n\n#define PI 3.1415926538\n\n\nfloat map(float value, float inMin, float inMax, float outMin, float outMax) {\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\n}\n\n// https://iquilezles.org/articles/distgradfunctions2d\nvec3 sdgCircle(in vec2 p, in float r) {\n  float d = length(p);\n\n  return vec3( d-r, p/d );\n}   \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfloat time = iTime;\n  vec2 uv = (fragCoord/iResolution.xy) - 0.5;\n\n  vec3 color = vec3(0.0);\n  vec3 circle = vec3(1.0);\n\n  float amp = map(cos(time), -1.0, 1.0, 0.15, 0.35);\n  float t = time * 1.0;\n\n  const int n = 1;\n  for (int i = 0; i <= n; i++) {\n    float offset = map(float(i), 0.0, float(n), 0.0, PI * 1.0);\n\n    circle *= sdgCircle(\n      uv + vec2(cos(t + offset), sin(t + offset)) * amp, \n      1.0\n    );\n  }\n  \n  float goff = map(sin(time), -1.0, 1.0, 0.0, 0.6);\n  circle = mix(vec3(1.0, goff, 0.5), vec3(1.0), circle * 1.0);\n\n  fragColor = vec4(circle, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}