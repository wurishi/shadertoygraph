{"ver":"0.1","info":{"id":"flV3DG","date":"1638263121","viewed":366,"name":"2D Math Plot Grid","username":"lihengc6","description":"Basic grid for plotting math functions","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["2d","function","plot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: Li-Heng Henry Chang\n\n#define t iTime\n\n//Grid Units\n#define Lgrid 1.  \n#define Sgrid .25\n#define Width_lgrid .01\n#define Width_sgrid .05\n#define zoom 2.;\n\n\n// Modified from:  https://www.shadertoy.com/view/4tB3WV\n\nfloat grid2D(vec2 _p){\n    float width = 1. / iResolution.y * zoom;\n    \n    float axis = smoothstep(0.0, width*4., min( abs(_p.x), abs(_p.y)) );\n    \n    \n    vec2 uv = mod(_p, Lgrid);\n    // center the functions and create symmetry around the mid point of the a grid box\n    float c = Lgrid/2.; // central point\n    float lgrid = c -  max(abs(uv.x - c), abs(uv.y - c));\n    lgrid = smoothstep(0.0, width*2., lgrid);\n    \n    uv = mod(_p, Sgrid);\n    c = Sgrid/2.;\n    float sgrid = c -  max(abs(uv.x - c), abs(uv.y - c));\n    sgrid = smoothstep(0.0, width, sgrid);\n    \n    return min(axis, min(lgrid, sgrid));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = ( fragCoord - .5* iResolution.xy ) / iResolution.y;\n    uv *= zoom;\n    \n    vec3 color = vec3(1.0); \n    color = vec3( grid2D(uv) );\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}