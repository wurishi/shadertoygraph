{"ver":"0.1","info":{"id":"mlGXRW","date":"1685963728","viewed":72,"name":"Eyecandy #2","username":"michaelradu","description":"Second shader I've ever made. A bit cluttered but I like its neon look.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["abstract","neon","eyecandy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.988, 0.498, 1.358);\n    vec3 b = vec3(-0.619, 0.627, 0.605);\n    vec3 c = vec3(2.378, 1.618, 0.448);\n    vec3 d = vec3(1.098,0.153,1.768);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n//[[0.988 0.498 0.358] [-0.512 0.518 0.500] [2.378 1.618 0.448] [1.098 0.158 1.768]]\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n   \n    for (float i = 0.2; i < 5.9; i+=2.5) {\n        for(float j = 0.00314; j < i; j+=2.31) {\n            uv = fract(uv + (j * i) * 1.5) - 0.5;\n\n            float d = j - length(uv) * exp(length(uv0));\n\n            vec3 col = palette(length(uv0) + i*.4 + j*iTime*.4);\n\n            d = sin(d*8. + iTime - j)/8.;\n            d = abs(d);\n\n            d = pow(0.01 / d, 1.4);\n\n            finalColor += col * d;\n        }\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}