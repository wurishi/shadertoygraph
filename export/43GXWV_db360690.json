{"ver":"0.1","info":{"id":"43GXWV","date":"1720474930","viewed":55,"name":"↓ Downsampler ↓","username":"___lampada","description":"A simple shader to downsample a given input.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["downsampler","smallimage","shortener"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 downsampled_uv(vec2 coord, float d){\n    /*Maps the current position to a downsampled position\n    \n    Parameters\n    ----------\n    \n    coord : vec2\n        Current pixel position.\n    d : float\n        downsample proportion (image will be d times smaller)\n    */\n\n    // Below line maps the current position to a downsampled uv\n    // mod(fragCoord.x, d) is the distance from the current position from the target\n    // position, so it is just subtracted.\n    return vec2( coord.x - mod(coord.x, d), coord.y - mod(coord.y, d) ) / iResolution.xy; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float d = 10.0;\n    \n    vec2 downsampled_uv = downsampled_uv(fragCoord, d);\n    \n    vec3 tex = texture(iChannel2, downsampled_uv).rgb;\n    \n    fragColor = vec4(tex, 1.0);\n    \n\n}","name":"Image","description":"","type":"image"}]}