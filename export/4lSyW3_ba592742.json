{"ver":"0.1","info":{"id":"4lSyW3","date":"1510239361","viewed":384,"name":"Bubble Bobble intro","username":"VB","description":"A small tribute to this wonderfull game.\n\nDedicated to JoJo !","likes":5,"published":1,"flags":64,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sBXzz","filepath":"https://soundcloud.com/8-bit-generation/bubble-bobble-original-theme","previewfilepath":"https://soundcloud.com/8-bit-generation/bubble-bobble-original-theme","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 BG_COLOR = vec3(0);\n\nconst float T_XMOVE_START = 10.5;\nconst float T_YMOVE_START = 2.1;\n\n// https://www.shadertoy.com/view/4ssXRX\nfloat nrand( vec2 n )\n{\n\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n\nvec3 bubble(vec2 uv, float t, float phase, vec2 initPos, float xDir) {\n    const float SPEED = 1.1;\n    const int N_ANIM_STEPS = 4;       \n    int step = int(mod(SPEED*(t+phase)*float(N_ANIM_STEPS), float(N_ANIM_STEPS)));\n    \n    initPos.y = mod(initPos.y + max(t-T_YMOVE_START, 0.0) * 0.15, 1.1);\n        \n    float w = float(iResolution.x) / float(iResolution.y);\n    float dx = max(t-T_XMOVE_START, 0.0) * xDir;    \n   \tinitPos.x = mod(initPos.x + dx, w + 0.1);    \n\n    float lum = min(t / T_YMOVE_START, 1.0);\n    \n    float r;\n    vec3 c1, c2;\n    if (step == 0) {\n        c1 = c2 = vec3(78.0,153.0,98.0)/255.0;\n        r = 3.0 / iResolution.y;\n    }\n    else if (step == 1) {\n        c1 = vec3(108.0,34.0,3.0)/255.0;\n        c2 = vec3(195.0,153.0,94.0)/255.0;\n        r = 5.0 / iResolution.y;        \n    }\n    else if (step == 2) {\n        c1 = vec3(26.0,136.0,25.0)/255.0;\n        c2 = vec3(169.0,131.0,163.0)/255.0;\n        r = 7.0 / iResolution.y;\n    }\n    else if (step == 3) {\n        c1 = vec3(88.0,22.0,23.0)/255.0;\n        c2 = vec3(107.0,119.0,188.0)/255.0;\n        r = 5.0 / iResolution.y;                \n    }\n    \n    vec2 v = uv - initPos;\n    float d = length(v);    \n    float OUTER = 0.65 * r;\n    float BORDER = 3.0 / iResolution.y;\n    if (d <= OUTER) {\n        float c = d / OUTER;\n        return lum * mix(BG_COLOR, c1, c*c);\n    }\n    else if (d <= r) {\n        return lum * mix(c1, c2, (d-OUTER) / (r-OUTER));\n    }\n    else if (d <= (r+BORDER)) {\n        return lum * mix(c2, BG_COLOR, (d-r) / (BORDER));\n    }\n    \n    return vec3(0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int N_BUBBLES = 42;\n\tconst vec2 seed = vec2(5.1255, 9.756);\n\n    vec2 uv = fragCoord.xy / iResolution.yy;\n\tfragColor.rgb = BG_COLOR;\n    for (float i=0.0;i<1.0;i+=1.0/float(N_BUBBLES)) {\n        float x = nrand(seed.xy + i);\n        float y = nrand(seed.yx + i);\n        float phase = nrand(seed.xx + i);\n        float xdir = nrand(seed.yy + i);\n        x *= iResolution.x / iResolution.y;\n        \n        vec3 b = bubble(uv, iTime, phase, vec2(x,y), 0.15 * (xdir*2.0 - 1.0));\n        if (length(b.rgb)>0.0)\n    \t\tfragColor.rgb = b;\n    }    \n}","name":"Image","description":"","type":"image"}]}