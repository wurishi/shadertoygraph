{"ver":"0.1","info":{"id":"433XRs","date":"1720477014","viewed":58,"name":"More Spectral Colour Schemes","username":"jafam","description":"Gauss\nNormalized Gauss\nModified Gauss\nInverse Modified Gauss","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["spectrum","rgb","wavelength","spectral","visiblelight"],"hasliked":0,"parentid":"ls2Bz1","parentname":"Spectral Colour Schemes"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 gauss(vec3 x) {\n    return exp2(-x*x);\n}\nvec3 invgauss(vec3 x) {\n    return sqrt(-log2(abs(x)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    const vec2 grid = vec2(1.0,4.0);\n    vec2 gp = grid*(p);\n    vec2 lp = fract(gp);\n    ivec2 index = ivec2(floor(gp));\n    vec3 peak = vec3(1.0,3.0,5.0)/6.0;\n    const float FWHM = 2.0/6.0;\n    vec3 hue = (lp.x-peak)/FWHM;\n    vec3 g = gauss(hue);\n    vec3 ng = normalize(g);\n    vec3 mg = log2(ng+1.0);\n    vec3 ig = invgauss(hue);\n    vec3 col;\n    switch (index.y) {\n        case 3: col = g;\n        break;\n        case 2: col = ng;\n        break;\n        case 1: col = mg;\n        break;\n        case 0: col = ig;\n        break;\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}