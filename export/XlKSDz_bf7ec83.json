{"ver":"0.1","info":{"id":"XlKSDz","date":"1483897319","viewed":344,"name":"Hammersley Set","username":"sergey_reznik","description":"Hammersley set using WebGL's GLSL","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["pbr","pbs","lowdiscrepancy","hammersley","discrepancy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 Hammersley(uint i, uint n)\n{\n    uint bits = (i << 16u) | (i >> 16u);\n    bits = ((bits & 0x55555555u) << 1u) | ((bits & 0xAAAAAAAAu) >> 1u);\n    bits = ((bits & 0x33333333u) << 2u) | ((bits & 0xCCCCCCCCu) >> 2u);\n    bits = ((bits & 0x0F0F0F0Fu) << 4u) | ((bits & 0xF0F0F0F0u) >> 4u);\n    bits = ((bits & 0x00FF00FFu) << 8u) | ((bits & 0xFF00FF00u) >> 8u);\n    float u = float(bits) * 2.3283064365386963e-10;\n    return vec2(float(i) / float(n), u);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uint setSize = uint(iResolution.x * iResolution.y) / 256u;\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 buffer = (iFrame == 0) ? vec4(0.0) : texture(iChannel0, uv);\n    \n    float s = 0.0;\n    if (uint(iFrame) <= setSize)\n    {\n    \tvec2 smp = Hammersley(uint(iFrame), setSize);\n    \ts = 1.0 - clamp(length(smp - uv), 0.0, 1.0);\n    \ts = smoothstep(0.9925, 1.0, s);\n    }\n\n    fragColor = buffer + s;\n}","name":"Buf A","description":"","type":"buffer"}]}