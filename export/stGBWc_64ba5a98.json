{"ver":"0.1","info":{"id":"stGBWc","date":"1665353700","viewed":79,"name":"10.09.2022:Waves","username":"g___r___e___g","description":"Could be more efficient for just this effect but I was trying to work out some lighting and shadowing which will have to be for a future shader.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fragtober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_DIST 40.\n\nfloat sdBox(vec3 p, vec3 r) {\n  return length(max(vec3(0), abs(p) - r));\n}\n\nvec2 edge(vec2 p) {\n  vec2 pA = abs(p);\n  return pA.x > pA.y\n    ? vec2(p.x < 0. ? -1 : 1, 0)\n    : vec2(0, p.y < 0. ? -1 : 1);\n}\n\nfloat scene(vec3 p) {\n  vec3 r = vec3(0.425, 0.425, 0.1);\n  p.z += sin(iTime * floor(p.x)/6.2832 + floor(p.y)*0.523)  * 0.5;\n  vec2 center = floor(p.xy) + 0.5;\n  vec2 neighbor = center + edge(p.xy - center);\n  float d = 1e100;\n  d = min(d, sdBox(p - vec3(center, 0), r));\n  d = min(d, sdBox(p - vec3(neighbor, -2.0), vec3(r.xy, 4.5)));\n  return d;\n}\n\nvec3 sceneNormal(vec3 p) {\n  vec2 e = vec2(1e-4, 0);\n  return normalize(vec3(\n    scene(p + e.xyy) - scene(p - e.xyy),\n    scene(p + e.yxy) - scene(p - e.yxy),\n    scene(p + e.yyx) - scene(p - e.yyx)\n  ));\n}\n\nfloat march(vec3 ro, vec3 rd) {\n  float d = 0.;\n  for (int i = 0; i < 100; i++) {\n    vec3 p = ro + rd * d;\n    float dS = scene(p);\n    if (abs(dS) < 1e-6) break;\n    d += dS;\n    if (d > MAX_DIST) break;\n  }\n  return d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  float sf = 1. / min(iResolution.x, iResolution.y);\n  vec2 uv = sf * (fragCoord - 0.5 * iResolution.xy);\n  vec3 ro = vec3(0, 0, 25);\n  vec3 rd = normalize(vec3(uv, -1));\n  vec3 color = vec3(0);\n\n  vec3 orange = vec3(1., .76, .30);\n  vec3 pink = vec3(.98, .23, .4);\n  vec3 blend = mix(orange, pink, (fragCoord.x / iResolution.x));\n  color = blend;\n\n  float d = march(ro, rd);\n\n  if (d <= MAX_DIST) {\n    vec3 p = ro + rd * d;\n    vec3 pN = sceneNormal(p);\n    if (pN.z > 0.) color = mix(blend, vec3(1), 0.9 + p.z*.3);\n  }\n\n  fragColor = vec4(color, 1);\n}","name":"Image","description":"","type":"image"}]}