{"ver":"0.1","info":{"id":"XtjBzG","date":"1516280565","viewed":221,"name":"Heat Colormap","username":"Ultraviolet","description":"Procedural generation of the default colormap of Octave.\n[b]Space[/b] toggle smoothing (the original is without smoothing).","likes":5,"published":1,"flags":16,"usePreview":0,"tags":["colormap","heat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 heatColorMap(float t)\n{\n    t *= 4.;\n    return clamp(vec3(min(t-1.5, 4.5-t), \n                      min(t-0.5, 3.5-t), \n                      min(t+0.5, 2.5-t)), \n                 0., 1.);\n}\n   \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    float t = uv.x;\n    \n    vec3 rgb = heatColorMap(t);\n    \n    //rgb /= rgb.r+rgb.g+rgb.b;\n    //rgb /= sqrt(rgb.r*rgb.r+rgb.g*rgb.g+rgb.b*rgb.b);\n    \n    if(texelFetch(iChannel0, ivec2(32,2),0).x>0.5)\n    \trgb = smoothstep(0., 1., rgb);\n    \n    fragColor = vec4(rgb,1.);\n}","name":"Image","description":"","type":"image"}]}