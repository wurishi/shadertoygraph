{"ver":"0.1","info":{"id":"sllXRM","date":"1625384769","viewed":125,"name":"A few colors","username":"schobbejack","description":"modulating chroma plane","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["rgb","ycbcr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 to_rgb(vec3 ycbcr)\n{\n    // full range bt709 matrix\n    const mat3 c709=mat3(1.0000000000, 1.0000000000, 1.0000000000,\n                      0.0000000000, -0.1873242729, 1.8556000000,\n                      1.5748000000, -0.4681242729, 0.0000000000);\n    return c709 * ycbcr;\n}\n\nconst float pi = acos(-1.);\n\nvec2 rot(vec2 uv, float r)\n{\n    float s=sin(r);\n    float c=cos(r);\n    \n    return vec2(uv.x*c-uv.y*s,uv.x*s+uv.y*c);\n}\n\nvec2 vsphere(float x)\n{\n    return vec2(sin(x*pi),cos(x*pi));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    uv=rot(uv,iTime*pi*.5);\n    float inv = 1./length(uv);\n    uv*=inv;    \n    \n    vec2 cbcr=vsphere(uv.x+iTime)*sin(iTime*.5)*.5;\n\n    vec3 col = to_rgb(vec3(inv*.3,cbcr))*inv*.5;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}