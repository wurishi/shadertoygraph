{"ver":"0.1","info":{"id":"DdGyRd","date":"1696436026","viewed":93,"name":"Film Grain by willeves07","username":"willeves07","description":"A simple fim grain shader","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["simple","grain","filmgrain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(float co) { return fract(sin(co*(91.3458)) * 47453.5453); }\nfloat rand(vec2 co){ return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453); }\nfloat rand(vec3 co){ return rand(co.xy+rand(co.z)); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float strength = 0.2;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Calculate noise and sample texture\n    float mdf = strength; // increase for noise amount \n    vec4 noise = vec4(\n        rand(vec3(iTime*3.0, uv.x, uv.y)),\n        rand(vec3(iTime*1.0, uv.y, uv.x)),\n        rand(vec3(iTime*0.3, cos(uv.x), uv.y)),\n        1.0\n    );\n    vec4 tex = texture(iChannel0, uv);\n    \n    vec4 col = tex - (noise * mdf);\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}