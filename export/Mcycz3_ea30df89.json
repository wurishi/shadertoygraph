{"ver":"0.1","info":{"id":"Mcycz3","date":"1732149075","viewed":51,"name":"11/19 Heart w/ noise","username":"indiap","description":"use mouse.x to add noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//uses Prof James noise function and iq's hash function\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\n\nfloat sdHeart( in vec2 p )\n{\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n\nvec2 hash( vec2 x ) \n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat fbm( in vec2 uv )\n{\n \tuv *= 2.;\n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\tfloat f = 0.;\n    f  = 0.5000*noise( uv ); uv = m*uv;\n\tf += 0.2500*noise( uv ); uv = m*uv;\n\tf += 0.1250*noise( uv ); uv = m*uv;\n\tf += 0.0625*noise( uv ); uv = m*uv;\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    p.y += 0.5;\n    \n    //Background\n    vec3 col = 0.5 + 0.5*cos(iTime+p.xyx+vec3(0,2,4));\n    \n    //Heart\n    vec2 uv = p*vec2(iResolution.x/iResolution.y,1.0) + iTime*0.25;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    float n = fbm(30.0*uv+vec2(-12.3+iTime/30., -12.)); \n    float m = fbm(30.0*uv+vec2(12.3+iTime/40., 14.2));\n    uv += 0.5*mouse.x*vec2(n,m);\n    \n    float sdfBody = sdHeart(p+mouse.x*vec2(n,m));\n    float blend = smoothstep(-0.16,0.0,sdfBody);\n    vec3 heartCol = vec3(1.);\n    heartCol = mix(vec3(1.),0.5 + 0.5*cos(iTime+p.xyx+vec3(0,2,4)),1.-blend);\n    col = mix(col,heartCol, 1.0-smoothstep(0.0,0.01,sdfBody));\n\n    //Output\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}