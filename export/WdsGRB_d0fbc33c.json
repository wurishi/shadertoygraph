{"ver":"0.1","info":{"id":"WdsGRB","date":"1546715647","viewed":64,"name":"3 Ary Blobs","username":"VJSpackOMat","description":"even more simple 3ary anim, control the frequency of outer buttons with horiz/verti mouse","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3ary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float PI =3.14159265359;\nconst float PI2 =2.0*PI;\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   vec2 mouse = iMouse.xy/iResolution.xy;\n\n    \n    float freq1=mouse.x*10.0;\n    float freq2= .730;\n    float freq3=mouse.y*10.0;\n    \nvec3 col;\n    if(uv.x>0.66){\n    // Time varying pixel color\n        // align with pi, use stepping for new colors on each frequency pass\n        float hue=mod(floor(iTime/freq1),256.0)/256.0;\n        \n       col =hsv2rgb(vec3( hue,uv.y,.50 + 0.5*sin(iTime*freq1)));\n    }else if(uv.x>0.33){\n         // align with pi, use stepping for new colors on each frequency pass\n        float hue=mod(floor(iTime/freq2),256.0)/256.0;\n        \n       col =hsv2rgb(vec3( hue,uv.y,.50 + 0.5*sin(iTime*freq2)));\n    }else{\n  // align with pi, use stepping for new colors on each frequency pass\n        float hue=mod(floor(iTime/freq3),256.0)/256.0;\n        \n       col =hsv2rgb(vec3( hue,uv.y,.50 + 0.5*sin(iTime*freq3)));\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}