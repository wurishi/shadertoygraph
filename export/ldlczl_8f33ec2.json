{"ver":"0.1","info":{"id":"ldlczl","date":"1489514815","viewed":97,"name":"Pixelación Chin","username":"jukniz","description":"Pixelación Chin","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pixelWidth 6.0\n#define pixelHeigh 6.0\n//si es true el pixel width y pixel heigh definen el tamaño de cada pixel\n//y si no define el numero de pixels que quiero por anchura y altura de pantalla\n#define bIsInPixelSize true\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 newRes;    \n    if(bIsInPixelSize){\n        newRes = vec2(iResolution.x/pixelWidth, iResolution.y/pixelHeigh);\n        \n        if ( fragCoord.y < (newRes.y )  *  pixelHeigh  ||   fragCoord.x > (newRes.x)  *  pixelWidth ){        \n       \t   uv = ceil( uv * newRes ) / newRes;        \n        } else{           \n           uv = floor( uv * newRes ) / newRes;                    \n        }    \n        fragColor = texture ( iChannel0, uv );\n    }else{\n        \n        newRes = vec2(pixelWidth, pixelHeigh);\n        uv = floor( uv * newRes ) / newRes;\n        fragColor = texture ( iChannel0, uv );\t\t\n }\n}\n","name":"Image","description":"","type":"image"}]}