{"ver":"0.1","info":{"id":"MddfD8","date":"1524989670","viewed":103,"name":"loop-6","username":"erwin94","description":"Some trigonometry tests, with a bit of polishing","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard","abstract","loop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nvec2 star(vec2 uv, vec2 center, float rot, float reps) {\n    vec2 diff = uv - center;\n    float c = atan(diff.y, diff.x)*reps + rot;\n    return vec2(clamp(cos(c)*5., -1., 1.), mod(c/4.0/M_PI, 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv_sq = fragCoord/iResolution.xx;\n\n    //vec2 c1 = vec2(-0.1-sin(iTime/5.)/4.-0.25, 0.1);\n    //vec2 c2 = vec2(1.1+sin(iTime/5.)/4.+0.25, 0.1);\n    vec2 c1 = vec2(-0.1, 0.1);\n    vec2 c2 = vec2(1.1, 0.1);\n\tfloat reps = 50.;\n    float speed = 1.8;\n\n    vec2 s1 = star(uv_sq, c1,  iTime*speed, reps);\n    vec2 s2 = star(uv_sq, c2, -iTime*speed, reps);\n    \n    float c = smoothstep(0., 1., uv.y) * clamp(s1.x, 0., 1.0) * clamp(s2.x, 0., 1.0)\n            + smoothstep(0., 1., 1.-uv.y) * clamp(-s1.x, 0., 1.0) * clamp(-s2.x, 0., 1.0);\n\n    vec2 uv_distort = vec2(s1.y, s2.y);\n    float noise = texture(iChannel0, uv_distort).r*.6 + 0.3;\n    float vignette = pow((1.0-length(uv-0.5)-.2)*1.5, 2.);\n    \n    vec3 fg_color = vec3(0.8,1.3,1.5);\n    vec3 bg_color = vec3(0.08,0.05,0.05);\n\n    vec3 linearCol = (c*fg_color + bg_color) * noise * vignette;\n\n    float displayGamma = 2.2;\n    fragColor.r = pow ( linearCol.r, 1.0/displayGamma );\n    fragColor.g = pow ( linearCol.g, 1.0/displayGamma );\n    fragColor.b = pow ( linearCol.b, 1.0/displayGamma );\n    fragColor.a = 1.0;\n}\n\n","name":"Image","description":"","type":"image"}]}