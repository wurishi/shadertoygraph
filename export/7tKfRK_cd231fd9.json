{"ver":"0.1","info":{"id":"7tKfRK","date":"1665545394","viewed":87,"name":"Simple SDF Clock","username":"mmggww","description":"Drawing Clock with SDF\n","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["clock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n//\n//Reference: \n//     https://iquilezles.org/articles/distfunctions2d/\n//\n//\n\n#define PI 3.141592654\n//#define Twist\n\nfloat cicle(vec2 c, float r, vec2 p)\n{\n    return length(p-c) - r;\n}\n\nfloat orientedBox(vec2 p,vec2 a,vec2 b,float th )\n{\n    float l = length(b-a);\n    vec2  d = (b-a)/l;\n    vec2  q = (p-(a+b)*0.5);\n          q = mat2(d.x,-d.y,d.y,d.x)*q;\n          q = abs(q)-vec2(l,th)*0.5;\n    return length(max(q,0.0)) + min(max(q.x,q.y),0.0);    \n}\n\nvec3 getColor(float hue)\n{\n    vec3 rgb = clamp(abs(mod(hue * 6. + vec3(0.,4.,2.),6.)-3.)-1., 0., 1.);\n    return mix(vec3(1.), rgb, 1.0);\n}\n\n//float smoothMix(float d1, float d2, float k)\n//{\n//    float v = max(k-abs(d1-d2), 0.0);\n//    return v*v*v/(6.0*k*k);\n//}\n\nfloat clockCircle(float k, float a, float lp, float r1, float r2, float w)\n{    \n    float d = 100.0;\n    float ac = fract(a/k)*k;\n    vec2 pc = lp * vec2(sin(ac), cos(ac));\n    \n    vec2 p1 = vec2(0, 1.0)*r1;\n    vec2 p2 = vec2(sin(k), cos(k))*r1;\n    \n    d = min(d, cicle(p1, r2, pc) * w);\n    d = min(d, cicle(p2, r2, pc) * w);   \n    \n    return d;\n}\n\nfloat clockMinu(float k, float a, float lp, float r, float h, float w)\n{\n    float d = 100.0;\n    float off = 2.0;\n    float ac = fract(a/k)*k;\n    vec2 pc = lp * vec2(sin(ac), cos(ac));\n    \n    vec2 p1 = vec2(0, 1.0);\n    vec2 p2 = vec2(sin(k), cos(k));\n    \n    r = r - off; \n    d = min(d, orientedBox(pc, (r-h)*p1, (r+h)*p1, w));\n    d = min(d, orientedBox(pc, (r-h)*p2, (r+h)*p2, w));\n    \n    return d;\n}\n\nfloat clock(vec2 p, float r, out vec3 col)\n{\n    float d = 100.0;\n\n    float lp = length(p);\n    float a = acos(p.y / lp);\n    a = p.x > 0.0 ? a : 2.0 * PI - a;\n    \n    float dh = min(d, clockCircle(PI/6.0,  a, lp, r, 10.0, 1.0));    \n    float dm = min(d, clockMinu(PI/30.0, a, lp, r,  8.0, 5.));\n    \n    float dc1 = cicle(vec2(0.0), r + 5.0, p);\n    float dc2 = cicle(vec2(0.0), r + 13.0, p);\n    \n    d = min(d, dh);\n    d = min(d, dm);\n    d = max(d, dc1);\n    \n    float b = step(dc2, 0.0);\n    d = b * d + (1.0-b) * dc2 * 0.45;\n    \n    col = col + step(max(dh, dc1),0.0) * vec3(0.95, 0.2, 0.2);\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.25);\n\n    // get time\n    float ms = iDate.w;\n\tfloat sec = mod( floor(iDate.w),        60.0 );\n\tfloat minu = mod( floor(iDate.w/60.0),   60.0 );\n\tfloat hour = mod( floor(iDate.w/3600.0), 24.0 );\n    \n    vec2 p = fragCoord - 0.5 * iResolution.xy;\n    float d = 100.0;\n    float r = iResolution.y / 2.0 - 70.0;\n    \n    ///////////////////////////////////////Twist\n    #ifdef Twist\n    p = p + vec2(sin((ms * 10.0 + p.y) * 0.1), cos((ms * 20.0 + p.x) * 0.1)) * 4.0;\n    #endif\n    \n    ///////////////////////////////////////Vibration    \n    float fs = fract(ms);\n    float a1 = sec;\n    float a2 = sin(25.0 * fs) * exp(-10.0 * fs)*0.15;\n    float a3 = max((fs - 1.0) * 10.0 + 1.0, 0.0);\n    \n    float th_sec  = (a1 + a2 + a3) * PI / 30.0;\n    float th_min  = mod(iDate.w/60.0, 60.0)/30.0 * PI;\n    float th_hour = mod(iDate.w/3600.0, 24.0)/6.0 * PI;\n        \n    float x,y;    \n    float rc = r - 20.0;\n    ///////////////////////////////////////Sec\n    x = sin(th_sec);\n    y = cos(th_sec);\n    float ds = orientedBox(p, -30.0 * vec2(x,y), rc * vec2(x,y), 4.0) - 2.0;    \n    float dc1 = cicle((r + 15.0) * vec2(x,y), 12.0, p);\n    \n    ///////////////////////////////////////Minu\n    x = sin(th_min);\n    y = cos(th_min);\n    float dm = orientedBox(p, -25.0 * vec2(x,y), (rc * 0.9) * vec2(x,y), 4.0) - 2.0;\n    \n    ///////////////////////////////////////Hour\n    x = sin(th_hour);\n    y = cos(th_hour);\n    float dh = orientedBox(p, -20.0 * vec2(x,y), (rc * 0.75) * vec2(x,y), 4.0) - 2.0;\n    \n    ///////////////////////////////////////Clock\n    float dc = clock(p, r, col);\n    \n    ///////////////////////////////////////Mix \n    d = min(d, ds);\n    d = min(d, dm);\n    d = min(d, dh);\n    d = min(d, dc);\n    d = min(d, dc1);\n        \n    col = col + vec3(0.5 / (d*d))\n     + step(ds,0.0) * getColor(th_sec/(2.0*PI) - 1.0/3.0)\n     + step(dm,0.0) * getColor(th_min/(2.0*PI))\n     + step(dh,0.0) * getColor(th_hour/(2.0*PI) + 1.0/3.0);\n         \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}