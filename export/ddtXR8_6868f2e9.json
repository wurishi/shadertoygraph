{"ver":"0.1","info":{"id":"ddtXR8","date":"1679869200","viewed":86,"name":"triang symmetry pattern by Osa","username":"Osakazaur","description":"simple triangle-symmetry pattern, rotating\nbaseC and mainC are RGB colors of pattern\nr is a wideness, timeScale is a speed\nsimple Diamond patternL: https://www.shadertoy.com/view/DsdSzH","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["simple","rotate","geometry","pattern","symmetry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 baseC = vec3(36., 71., 105.) / 255.;\nvec3 mainC = vec3(238., 245., 206.) / 255.;\n\nconst float da = 60.;\nconst float r = 106.;\nconst float timeScale = 0.5;\n\n\nconst float pi = 3.14;\nconst float a = da * pi / 180.;\nconst float h = r / tan(a / 2.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy - iResolution.xy*0.5;\n    float t = iTime * timeScale;\n    \n    xy = vec2(xy.x * cos(t) - xy.y * sin(t),\n              xy.x * sin(t) + xy.y * cos(t));\n\n    bool mask = (distance(fract(xy.x/r),.5) -\n                 distance(fract(xy.y/h),.5)) *\n                 (fract(xy.y/h)-.5) > 0.;\n    \n    fragColor = mask ? vec4(mainC, 1.) : vec4(baseC, 1.);\n}","name":"Image","description":"","type":"image"}]}