{"ver":"0.1","info":{"id":"ctycRw","date":"1700013954","viewed":36,"name":"Mandelbrot bounce","username":"mcren88","description":"Looping zoom into double spiral valley","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float loopDuration = 12.0;\n    float normalizedTime = mod(iTime, loopDuration) / loopDuration;\n    float zoomFactor = sin(normalizedTime * 3.1415927) * 2.2 + 0.05;\n\n    float zoom = exp(zoomFactor * 5.0);\n\n    vec2 center = vec2(-0.74543, 0.11301);\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 c = (uv - 0.5) * vec2(iResolution.x / iResolution.y, 1.0) * 4.0 / zoom + center;\n\n    vec2 z = vec2(0.0, 0.0);\n\n    int iterations = 0;\n    int maxIterations = 300;\n\n    for(int i = 0; i < maxIterations; i++) {\n        z = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;\n        if(length(z) > 2.0) break;\n        iterations++;\n    }\n\n    float t = float(iterations) / float(maxIterations);\n\n\n    vec3 colorA = vec3(0.618, 0.558, 0.668);\n    vec3 colorB = vec3(0.603, 0.264, 0.220);\n    vec3 colorC = vec3(-1.001, 1.318, 1.269);\n    vec3 colorD = vec3(1.507, 1.507, 0.837);\n\n    vec3 col = palette(t, colorA, colorB, colorC, colorD);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}