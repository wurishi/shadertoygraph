{"ver":"0.1","info":{"id":"ttcXzj","date":"1581331619","viewed":77,"name":"Test rgb","username":"jwtea","description":"Test RGB","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uniform sampler2D backbuffer;\nprecision highp float;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 m = iMouse / iResolution.xxxx;\n    \n    // Output to screen\n    float pixelSize = m.x; //0.05; // 5% of the screen\n    float numPixels = 1.0 / pixelSize;\n    \n    vec2 pv = mod(uv / pixelSize, 1.0);\n    \n    vec4 pic = texture(iChannel0, uv * (1.0 - pixelSize));\n    vec4 imageColor = pic;\n    vec4 crtColor = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    vec4 currentPosCol = texture(backbuffer, uv * (1.0 - pixelSize));\n    \n    if (pv.y > 0.1 && pv.y < 0.9) { \n        if (pv.x > 0.1 && pv.x < 0.3) {\n            crtColor = vec4(currentPosCol.x, 0.0, 0.0, 1.0);\n        } else if (pv.x > 0.3 && pv.x < 0.6) {\n            crtColor = vec4(0.0,currentPosCol.y, 0.0,1.0);\n        } else if (pv.x > 0.6 && pv.x < 0.9) {\n            crtColor = vec4(0.0,0.0, currentPosCol.z,1.0);\n        }\n    }\n    \n    // 0.5 -> 100% image\n    // 0.2 -> 100% crt\n    \n    float blendPct = min((pixelSize - 0.0) / 0.02, 1.0);\n   //fragColor = crtColor;\n    fragColor = vec4(mix(imageColor.rgb, crtColor.rgb, blendPct), 1.0);\n}","name":"Image","description":"","type":"image"}]}