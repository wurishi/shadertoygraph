{"ver":"0.1","info":{"id":"wtlcR2","date":"1592546003","viewed":527,"name":"anti-banding by white/blue offse","username":"FabriceNeyret2","description":"Ray marching ( with regular or adaptive steps ) is prone to band aliasing ( left ).\nA classical solution (middle) is to offset ray start with randomize value (here, white noise texture).\nBut blue noise is visually even better (right).\nBottom: zoom noise. ","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","sdf","banding","antialiasing","dithering","bluenoise","tuto","short","whitenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T(ch) texelFetch(ch,ivec2(U-t) % textureSize(ch,0),0).x\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float T = iTime, t = iMouse.z<=0. ? 0. : float(37*iFrame);\n    vec3  R = iResolution,\n          D = vec3(.3*(U+U-R.xy)/R.y, -1),  // ray direction\n          p = 30./R, q;                     // marching point along ray \n    O-=O;\n    int x = int(3.*U.x/R.x);\n    if (D.y<0.) U /= 2.;\n    t =   x == 1 ? T(iChannel0)             // white noise offset ray start\n        : x == 2 ? T(iChannel1)             // blue noise offset ray start\n        : .5;\n    if (abs(D.y)>.25) { O+= t; return; }\n    p += 2.*t*D; \n    for ( O++,t=1.; O.x > 0. && t > .01 ; O-=.015 ) // ray march\n        q = p, q.x = mod(q.x+5.,10.)-5.,\n        t = min(t, length(q) - 5.),         // sphere\n        p += .7*t*D;                        // step forward = dist to obj\n    O = (O-.1)*2.8;                         // force contrast\n  //O *= 2.2;\n  //O.x>1. ? O.x-- : O.x<0. ? O.y++ : t ;   // verify not out of bounds\n    if ( int(U.y)%int(R.y/2.) < 2 ) O-=O,O.r++; // red separator\n}\n","name":"Image","description":"","type":"image"}]}