{"ver":"0.1","info":{"id":"XdXcWr","date":"1487619449","viewed":334,"name":"Sound visualizer (3)","username":"levonchic","description":"Third attempt to build sound visualizer. Now it doesn't cause epilepsy!\n\nMeow :3","likes":8,"published":1,"flags":96,"usePreview":0,"tags":["sound","visualizer","smile","mlp","soundcloud","monochromatic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfSW2","filepath":"https://soundcloud.com/sugarmusic1/mlp-pinkie-pie-smile-remix","previewfilepath":"https://soundcloud.com/sugarmusic1/mlp-pinkie-pie-smile-remix","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define MIRROR\n#define PERIOD \t\t\t4.0  // <- Angle_dia = pi * period \n#define INNER_DAMPING   4.0  // <- Damping damping for inner radius damping. > 1 = MADNESS\n#define DOUBLE_DAMPING  0.54 // <- Damping of Buffer A\n// #define SWAP              // <- Swap inner and outer\n// #define MADNESS           // <- Uncomment if you want to see some features\n//#define RED             4.0  // <- value of .. idk, this is for red\n//#define GREEN           2.0  // <- for green \n//#define BLUE            3.0  // <- for blue\n//#define COLOR_ADD       .33  // <- increase color intensivity\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Constants\n    float RADIUS = min(iResolution.x, iResolution.y) / 4.0;\n    float inner, outer;\n    \n    // Get distance\n    vec2 dist    = fragCoord.xy - iResolution.xy / 2.0;\n    float s_dist = sqrt(dist.x * dist.x + dist.y * dist.y);\n \t\n    // Get rotation angle [0.0 - 1.0]\n    float angle  = atan(dist.y / dist.x) / (3.14 * PERIOD) + 0.25;\n    if(dist.x <= 0.0)\n        angle += 0.5;\n    #ifdef MIRROR\n    \tif(dist.x <= 0.0)\n            angle = 1.0 - angle;\n    #endif\n    \n    #ifndef SWAP\n    \tinner = texture(iChannel0, vec2(angle, 0.25)).x;\n    \touter = texture(iChannel0, vec2(angle, 0.75)).x;\n    #else\n    \tinner = texture(iChannel0, vec2(angle, 0.75)).x;\n    \touter = texture(iChannel0, vec2(angle, 0.25)).x;\n    #endif\n    \n    float color = 0.0;\n    float radius = 0.0;\n    float damping = s_dist / iResolution.x * 2.0;// * INNER_DAMPING;\n    float frame_render = texture(iChannel1, uv).x * DOUBLE_DAMPING;\n    \n    radius = (RADIUS + 0.1) * (0.9 + outer * damping);\n    \n    if(s_dist < radius)\n        color = 1.0;\n    else\n        color = damping * (radius / iResolution.x + 1.0 - damping);\n    \n    #ifdef MADNESS\n    \tradius = (RADIUS * 0.84) * (1.0 + inner * damping);\n    #else\n    \tradius = (RADIUS - 0.1) * (1.0 - inner * (damping * INNER_DAMPING));\n    #endif\n    \n    if(s_dist < radius)\n        color = 0.2 * (1.0 - damping) * (radius / iResolution.x + 1.0 - damping);\n    \n    fragColor = vec4(color);\n    \n    // Coloring \n    //float scalar_color_offset = COLOR_ADD + s_dist / radius * (1.0 - COLOR_ADD);\n    \n    //fragColor *= vec4(RED, GREEN, BLUE, 1.0) * scalar_color_offset;\n    \n    // Bound it down\n    //fragColor = clamp(vec4(0.0), vec4(1.0), fragColor + frame_render);\n}","name":"Buf A","description":"","type":"buffer"}]}