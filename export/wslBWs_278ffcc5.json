{"ver":"0.1","info":{"id":"wslBWs","date":"1589310846","viewed":319,"name":"ShATI - Lune","username":"Flopine","description":"My former school named ATI decided to launch an everyday challenge from 4th may to 24th may, here is the 9th subject: moon :) ","likes":21,"published":1,"flags":32,"usePreview":0,"tags":["2d","moon","buffer","magical","motiondesign"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n// Shader made for Everyday ATI challenge\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv)\n        +texture(iChannel0,uv*0.6+0.3)*0.2\n        +texture(iChannel0,uv*0.8-vec2(0.,0.))*0.1;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(.05,fwidth(val-thre)))\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define PI acos(-1.)\n#define TAU 6.2831853071\n#define dt easeInOutCirc(fract(iTime*0.5))\n#define anim ((TAU/4.)*dt)\n\nvoid moda (inout vec2 p, float rep)\n{\n    float per = TAU/rep;\n    float a = atan(p.y,p.x);\n    a = mod(a-per*0.5,per)-per*0.5;\n    p = vec2(cos(a),sin(a))*length(p);\n}\n\n// reference for animation curves: https://easings.net/\nfloat easeInOutCirc(float x)\n{\n    return x < 0.5\n      ? (1. - sqrt(1. - pow(2. * x, 2.))) / 2.\n      : (sqrt(1. - pow(-2. * x + 2., 2.)) + 1.) / 2.;\n}\n\n\nfloat circle (vec2 p, float r)\n{return AAstep(r,length(p));}\n\nfloat circle_empty (vec2 p, float size, float thick)\n{\n    return 1.-(circle(p,size)+(1.-circle(p,size*thick)));\n}\n\nfloat square(vec2 p, float r)\n{\n    p = abs(p);\n    return AAstep(r, max(p.x,p.y));\n}\n\nfloat square_empty (vec2 p, float size)\n{return 1.-(square(p,size)+(1.-square(p,size*0.95)));}\n\nfloat moon (vec2 p)\n{\n    float rad = 0.3;\n    return 1.-(circle(p,rad)+(1.-circle(p+vec2(rad*0.3, 0.),rad*0.75)));\n}\n\nvec2 sigles (vec2 p, float spread)\n{\n    p *= rot(anim);\n    moda(p, 4.);\n   \tp.x -= spread;\n    float mask = circle(p,0.37);\n   \treturn vec2(circle_empty(p,0.34,0.8)+moon(abs(abs(p*3.5)-0.1)-0.3),\n                mask);\n}\n\nfloat artefact (vec2 p)\n{\n    float img = 0.;\n    float s = 0.2;\n    vec2 pp = p;\n    for (int i=0; i<5; i++)\n    {\n        float ratio = float(i)/5.;\n        pp *= rot(TAU/10.);\n        pp *= rot(-anim); \n        s += 0.15;\n        img += square_empty(pp,s);\n    }\n    \n    float spread = 1.45;\n    vec2 si = sigles(p,spread*1.05);\n    return img \n        + moon(p) \n        + (circle_empty(p,spread,0.98) + circle_empty(p,spread*1.1,0.98)) * si.y\n        + si.x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n \tvec3 col = vec3(artefact(uv*2.)); \n    fragColor = vec4(clamp(col,0.,1.),1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}