{"ver":"0.1","info":{"id":"DdjcDw","date":"1687781786","viewed":58,"name":"William Turner Gradient [WIP]","username":"saiomin","description":"One of my first ever Shaders. Response to challenge in Chapter 6 - Color in The Book of Shaders. Adapted from code in the book.\nWondering if there are functions to nicely tie together parameters of rgb percentages.\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","color","gradient","thebookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec3 colorA = vec3(0.185,0.104,0.912);\nvec3 colorB = vec3(1.000,0.833,0.224);\n\nfloat plot (vec2 st, float pct, float coord){\n  return  smoothstep( pct-0.01, pct, coord) -\n          smoothstep( pct, pct+0.01, coord);\n}\n\nvec3 plotLine (vec3 color, vec2 st, vec3 pct, float coord) {\n    // Plot transition lines for each channel\n    color = mix(color,vec3(1.0,0.0,0.0),plot(st,pct.r,coord));\n    color = mix(color,vec3(0.0,1.0,0.0),plot(st,pct.g,coord));\n    color = mix(color,vec3(0.0,0.0,1.0),plot(st,pct.b,coord));\n    return color;\n}\n\nfloat sin_time (float factor) {\n    return sin((iTime)*2.*PI*factor)*.5+.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec3 colorx = vec3(0.0);\n    vec3 colory = vec3(0.0);\n    vec3 color = vec3(0.);\n    \n\tvec3 pctx = vec3(st.x);\n    vec3 pcty = vec3(st.y);\n    \n\n    pcty.r = (sin((1.7+st.y)*2.97*PI))*.5+sin_time(.04);\n    pcty.g = sin((1.+st.y)*3.*PI)*.5+sin_time(.05)*.3;\n    //pct.g = sin((st.x+.8)*PI*2.)*.9;\n    pcty.b = sin((st.y+.1)*PI*2.)*.5+.5;\n    \n    //pcty = 0.1/pcty;\n    \n    pctx.r = sin((1.6+st.x)*1.9*PI)*.5+.5;\n    pctx.g = sin((.5+st.x)*1.9*PI)*.5+.5;\n    pctx.b = abs(sin((0.+st.x)*2.*PI)*.5);\n    \n    pctx = smoothstep(sin_time(.1)*.4, 1.0, pctx);\n\n    //colorx= pctx;\n    colorx= mix(colorA, colorB, pctx);\n    colory = mix(colorA, colorB, pcty);\n    \n    //colory = plotLine(colory, st, pcty, st.x);\n    //colorx = plotLine(colorx, st, pctx, st.y);\n    \n    //colory = colory*1.;\n\n    color = mix(colorx, colory, .5);\n    \n    //color = normalize(color);\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}