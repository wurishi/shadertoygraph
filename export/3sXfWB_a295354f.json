{"ver":"0.1","info":{"id":"3sXfWB","date":"1588940972","viewed":111,"name":"Loudspeaker Waveguide Sim (golf)","username":"julianlumia","description":"Just some practice at writing unreadable confusing code I guess:p","likes":3,"published":1,"flags":48,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Just ome coding practive, Im not sure if Im doing everything correctly.. :p\n//I noticed that the shader started glitching on some computers, I think is has something to do with the pixel res of a screen. but not really sure\n//Im sure there are many improvments possible on this one\n//Anyways I initally modded this shader a bit to create a \"semi\" acurate visualiser to model loudspeaker edge defraction and reflections on baffles and horns.\n\n//------------\n//Press the up key to reset the impulse response\n//------------\n\n//also judging by the phashing pattern this is not the most efficcient horn design I gues:p\n\n//origional version by Matthen: https://www.shadertoy.com/view/tscSzr \n\nM{ \nV=B(ivec2(CO));\nC1=G(V.x);\nC1*=(1.-V.y);\nFC.xyz=C1;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float C(vec2 p){\nivec2 P=(ivec2(p)+B2)%B2;\nreturn B(P).x;\n}\n\nM{\nuv=U;\nif(!S(U)){FC.y=1.;return;}\nif(x2>0.){FC.x=PULSE;return;} \nif(F==0){FC.x=PULSE;return;}    \nbool E1=(F%2)==1;\nfloat C1=C(CO);\nif(E1==E(CO)){C1=FORM;}\nFC.x=C1; \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define F iFrame\n#define c0 iChannel0\n#define Re iResolution.xy \n#define U (2.*CO-Re)/Re.y\n#define x2 A(ivec2(38,1))\n#define A(U) texelFetch(iChannel1,U,0).x\n#define B(U) texelFetch(c0,U,0).xy\n#define B2 ivec2(textureSize(c0,0))\n#define SM(a,b,t)smoothstep(a,b,t)\n#define M void mainImage(out vec4 FC,vec2 CO)\n//vec3 c2 = vec3(1., -1., 0.);\n//#define\tFORM.4999*(C(CO+c2.zx)+C(CO + c2.zy)+C(CO+ c2.xz)+C(CO+c2.yz)-2.*C1)\n#define\tFORM.499*(C(CO+vec2(0,1.))+C(CO +vec2(0,-1.))+C(CO+vec2(1,0.))+C(CO+vec2(-1,0.))-2.*C1)\n#define\tPULSE 100.*SM(0.05,0.,pow(abs(pow(abs(uv.y)+0.,2.))+pow(abs(uv.x-1.7),1.14),.58))\nvec3 a,b,c,d,C1; bool X,Y; vec2 V,p2,p3,d1,d2,d3,uv;\nbool E(vec2 C){ivec2 IC=ivec2(C); X=IC.x%2==0; Y=IC.y%2==0; return(X&&Y)||(!X&&!Y);}\nvec3 G(float t){a=vec3(1.); b=a; c=vec3(.1,.2,.3); d=vec3(.3); return a+b*cos(6.28318*(c*t+d));}\n\nbool S(vec2 p){\np2,p3=p;\np.x-=1.1;\np.y*=abs(sin(p.x*1.2+1.))*9.;\nd1 =abs(p);\nif(d1.x<.6&&d1.y<0.5){return true;}\np3.x-=-.65;\nd3=abs(p3);\nif(d3.x<1.2&&d3.y<1.){return true;}\nif(d2.x<.5&&d2.y<.3){return false;}\nreturn false; \n}","name":"Common","description":"","type":"common"}]}