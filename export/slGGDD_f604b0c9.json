{"ver":"0.1","info":{"id":"slGGDD","date":"1637695714","viewed":172,"name":"Gradient Stripe","username":"malted","description":"My first shader.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["gradient","sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lerp(float a, float b, float t) {\n    return (1. - t) * a + b * t;\n}\nfloat invLerp(float a, float b, float v) {\n    return (v - a) / (b - a);\n}\nfloat remap(float iMin, float iMax, float oMin, float oMax, float v) {\n    float t = invLerp(iMin, iMax, v);\n    return lerp(oMin, oMax, t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    vec3 col = vec3(0.14);\n    float lw = remap(-1., 1., .05, .4, sin(iTime*2.));\n    vec3 lc = vec3(uv.x, sin(iTime*2.), .6);\n    \n    bool eq = uv.x <= uv.y - lw || uv.x >= uv.y + lw;\n\n    if (!eq) {\n        col = lc;\n    }\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}