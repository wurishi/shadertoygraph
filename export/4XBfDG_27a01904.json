{"ver":"0.1","info":{"id":"4XBfDG","date":"1729893652","viewed":201,"name":"Twin Bone Truchet","username":"byt3_m3chanic","description":"Twin Bone Truchet - messy code but riffing of a previous year of truchet shader.. ðŸ’€","likes":20,"published":3,"flags":0,"usePreview":0,"tags":["2d","animation","truchet","tiles","bones"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n\n    Twin Truchet - losely based off a previous shader, doing some silly pre halloween stuff!\n    10/25/2024  @byt3_m3chanic\n    \n    based around my shader https://www.shadertoy.com/view/dltXDH\n*/\n\n\n#define R           iResolution\n#define T           iTime\n#define M           iMouse\n\n#define PI         3.14159265359\n#define PI2        6.28318530718\n\nconst float tc = .2;\nconst float trs = .45;\nconst float spd = .5;\nconst float spd2 = .25;\nconst float bl = .05;\n\nconst float amt = 3.;\n\nmat2 rot(float a) { return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat hash21(vec2 a) { return fract(sin(dot(a, vec2(27.69, 32.47)))*4375.5457);}\n\n//@iq sdf\nfloat box( in vec2 p, in vec2 b ) {\n    vec2 d = abs(p)-b; return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 O, in vec2 F ) {\n\n    float scale = (R.x>1200.) ? 5. : 4.;\n    \n    vec3 C = vec3(.025);\n    vec2 uv = (2.*F-R.xy)/max(R.x,R.y);\n        // upscale\n    scale = 1.59;//3.25;\n\n    // warp and turn\n    uv *= rot(-T*.1);\n    uv = vec2(log(length(uv)), atan(uv.y, uv.x))*scale;\n    uv.x -= T*.4;\n    \n    //uv *= scale;\n    \n    vec2 tv = uv*8.;\n\n   // uv *= rot(.2*sin(T*.125));\n   // uv += vec2(2.33*sin(T*.15),T*.2);\n\n    float xp = fwidth(tv.x);\n    float px = fwidth(uv.x); \n    vec2 id = floor(uv), q = fract(uv)-.5;\n \n    float hs = hash21(id);\n    float ck = mod(id.x+id.y,2.)*2.-1.;\n    if(hs>.5) q.x = -q.x;\n\n    vec2 uv2 = vec2(length(q-.5),length(q+.5));\n    vec2 p = uv2.x<uv2.y? q-.5 : q+.5;\n\n    // main pattern\n    float d = length(p)-.5;\n    d = abs(d)-tc;\n\n    // moving truchet parts\n    vec2 arc = q-sign(q.x+q.y+.001)*.5;\n    float angle = atan(arc.x, arc.y);\n    float ud = length(arc);\n\n    float x = fract(amt*ck*angle/PI+T*spd);\n    float y = (ud/.5)-.5;\n    float z = fract(amt*ck*angle/PI-T*spd2);\n\n    // two tracks\n    vec2 cid = vec2(floor(ud-(.5-tc))/(2.*tc),floor(amt*ck*angle/PI+T*spd));\n    vec2 did = vec2(floor(ud-(.5-tc))/(2.*tc),floor(amt*ck*angle/PI-T*spd2));\n    cid.y = mod(cid.y,amt);\n    did.y = mod(did.y,amt);\n    \n    vec3 K = vec3(1.),R = vec3(.6,1.,.624);\n\n    if(mod(cid.y,5.)==0.) K=vec3(.01);\n    if(mod(did.y,3.)!=0.) R=vec3(.4);\n    \n    if(hs<.5 ^^ ck>0.) y=1.-y;\n    \n    const vec2 bx = vec2(.3,.01);\n    vec2 tuv = vec2(x,y);\n    float k = box(tuv+vec2(0,.2)-.5, bx)-.1;\n    vec2 ntuv = tuv+vec2(0,.2)-.5;\n    k = min(k,length(vec2(abs(ntuv.x)-.34,abs(ntuv.y)-.1))-.1);\n    float k2 = box(vec2(z,y-.2)-.5, bx)-.1;\n    ntuv = vec2(z,y-.2)-.5;\n    k2 = min(k2,length(vec2(abs(ntuv.x)-.34,abs(ntuv.y)-.1))-.1);\n\n    // background\n    vec2 td = floor(tv); q=fract(tv)-.5;\n    \n    hs = hash21(td);\n    if(hs>.5) q.x = -q.x;\n\n    vec2 tv2 = vec2(length(q-.5),length(q+.5));\n    p = tv2.x<tv2.y? q-.5 : q+.5;\n    float bg = length(p)-.5;\n\n    C = mix(C,C*.55,smoothstep(xp,-xp,abs(bg)-.175));\n\n    // all the things\n    C = mix(C,C*.65,smoothstep(.05+px,-px,d-.075));\n        \n    C = mix(C,vec3(.4),smoothstep(px,-px,abs(d-.05)-.0025));\n    C = mix(C,vec3(.2),smoothstep(px,-px,d));\n    \n    C = mix(C,C*.45,smoothstep(.05+px,-px,k));\n    C = mix(C,C*.45,smoothstep(.05+px,-px,k2));\n    \n    C = mix(C,K,smoothstep(px,-px,k));\n    C = mix(C,R,smoothstep(px,-px,k2));\n\n    C = pow(C,vec3(.4545));\n    O = vec4(C,1.);\n}\n\n\n    \n        \n    \n        \n    \n    ","name":"Image","description":"","type":"image"}]}