{"ver":"0.1","info":{"id":"lsjyRW","date":"1491213035","viewed":510,"name":"fourier series","username":"nyamadandan","description":"fourier series, rectangular wave.","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415;\nconst float OMEGA = 4.0;\nconst float STEP = 10.0;\nconst float TIME_SCALE = 0.24;\n\nvec3 drawCircle(vec2 uv, vec3 color0, vec3 color, float r, vec2 p, float w)\n{\n\treturn vec3(color * w /  abs(distance(uv, p) - r)) + color0;\n}\n\nvec3 drawPoint(vec2 uv, vec3 color0, vec3 color, float r, vec2 p)\n{\n\treturn vec3(color * r /  distance(uv, p)) + color0;\n}\n\nvec3 drawSegment(vec2 uv, vec3 color0, vec3 color, vec2 p0, vec2 p1, float w)\n{\n\tvec2 a = uv - p0;\n\tvec2 b = p1 - p0;\n\tvec2 c = b * max(min(dot(a, b) / dot(b, b), 1.0), 0.0);\n\tfloat d = distance(a, c);\n\treturn color * (w / d) + color0;\n}\n\nvec3 drawFourier(vec2 uv, vec3 color0, float amp, float t, float omega, vec2 p)\n{\n\tvec2 pp = uv - p;\n\t\n\tvec3 dstColor = color0;\n\n\tfloat y = 0.0;\n\tvec2 p0 = vec2(p.x, 0.0);\n\t\n\tfor(float i = 0.0; i < STEP; i++) {\n\t\tfloat n = 2.0 * i + 1.0;\n\t\tfloat ampn = amp / n;\n\t\tvec2 p1 = vec2(p0.x + ampn * cos(n * t), p0.y + ampn * sin(n * t));\n\t\ty += ampn * sin(n * (omega * pp.x + t));\n\n\t\tdstColor = drawCircle(uv, dstColor, vec3(0.5), ampn, p0, 0.00125);\n\t\tdstColor = drawPoint(uv, dstColor, vec3(0.5), 0.00125, p1);\n\t\tdstColor = drawSegment(uv, dstColor, vec3(1.0, 0.0, 0.0), p0, p1, 0.001);\n\t\tp0 =  p1;\n\t}\n\t\n\tvec2 p1 = vec2(p.x + 2.0 * PI / omega, p0.y);\n\tdstColor = drawPoint(uv, dstColor, vec3(1.0), 0.0125, p1);\n\tdstColor = drawSegment(uv, dstColor, vec3(1.0), p0, p1, 0.0025);\n\t\n\tfloat dist = distance(pp, vec2(pp.x, y));\n\tdstColor += 0.005 / dist;\n\treturn dstColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0 * fragCoord.xy / iResolution.xy - 1.0)  * iResolution.xy / min(iResolution.x, iResolution.y);\n\tvec3 color = vec3(0.0);\n\tfloat t = iTime * TIME_SCALE;\n\n\tfloat r = 0.6;\n\tvec2 offset = vec2(-0.5, 0.0);\n\tcolor = drawFourier(p, color, r, t * OMEGA, OMEGA, offset);\n\t\n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}