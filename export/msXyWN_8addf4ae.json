{"ver":"0.1","info":{"id":"msXyWN","date":"1686814470","viewed":66,"name":"Chromatic Abberation by Mapyu","username":"Mapyu","description":"Chromatic Abberation","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["chromatic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distance_to_center(vec2 fragCoord) {\n    float distance = length(iResolution.xy - fragCoord.xy);\n    float max_distance = length(iResolution.xy);\n    distance = clamp(distance, 0.0, max_distance) / max_distance;\n    return distance;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float distance = distance_to_center(fragCoord);\n    float strength = 0.4;\n\n    vec4 r = texture(iChannel0, uv - (0.01 * strength) * distance);\n    vec4 g = texture(iChannel0, uv - (0.04 * strength) * distance);\n    vec4 b = texture(iChannel0, uv - (0.06 * strength) * distance);\n    \n   \n    // Output to screen\n    fragColor = vec4(r.r, g.g, b.b, 1.0);\n}","name":"Image","description":"","type":"image"}]}