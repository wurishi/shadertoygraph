{"ver":"0.1","info":{"id":"DtKSDG","date":"1686327679","viewed":65,"name":"Glitch Toy","username":"TwentySeven","description":"xor deformed by color and 4x4 matrices, use the mouse to distort.","likes":0,"published":1,"flags":48,"usePreview":0,"tags":["xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define gridsize 64.\n#define MouseZDepth 256\n#define MouseWDepth 256\n#define t iTime/20.\nvec2 getCoord1() {\n    return vec2(\n    \ttexelFetch(iChannel0, ivec2(0, 0), 0).r,\n        texelFetch(iChannel0, ivec2(1, 0), 0).r\n    );\n}\nvec2 getCoord2() {\n    return vec2(\n    \ttexelFetch(iChannel1, ivec2(0, 0), 0).r,\n        texelFetch(iChannel1, ivec2(1, 0), 0).r\n    );\n}\n#define Lat getCoord2().x\n#define Lon getCoord2().y\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n#define mx (iMouse.x-iResolution.x/2.)/(iResolution.x/2.)*float(MouseZDepth)\n#define my (iMouse.y-iResolution.y/2.)/(iResolution.y/2.)*float(MouseWDepth)\n#define Rx iResolution.x\n#define Ry iResolution.y\n#define Fx fragCoord.x\n#define Fy fragCoord.y\n\n//defs for easy use\n    float s1 = sin(getCoord1().x/20.);\n    float c1 = cos(getCoord1().x/20.);\n    float s2 = sin(getCoord1().y/20.);\n    float c2 = cos(getCoord1().y/20.);\n    float s3 = sin(t*3.14159/3.85);\n    float c3 = cos(t*3.14159/3.85);\n//matricies\n     mat4  M1 = mat4(\n        c1, 0,  s1,0,\n        0,  1,  0,  0,\n        -s1, 0,  c1, 0,\n        0,  0,  0,  1);\n        \n     mat4  M2 = mat4(\n        1,  0,  0,  0,\n        0,  c2,-s2, 0,\n        0,  s2, c2, 0,\n        0,  0,  0,  1);\n     mat4  M3 = mat4(\n        c3, -s3,0,  0,\n        s3, c3, 0,  0,\n        0,  0,  1,  0,\n        0,  0,  0,  1);\n\n     vec4 uv = vec4(\n         vec2\n         (Fx-Rx/2.,\n         Fy-Ry/2.),\n         0,0)*\n     M1*M2;\n    // Texture Function\n    #define x int(uv.x)\n    #define y int(uv.y)\n    #define z int(uv.z)\n    #define w int(uv.w)\n    vec4 col = vec4(x,y,z,w);\n\n    // Output to screen\n    fragColor = vec4(mod(col/gridsize,1.));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\nconst int W = 87;\nconst int A = 65;\nconst int S = 83;\nconst int D = 68;\nconst float speed = 100.0;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float outData = 0.0;\n    \n    switch(int(fragCoord.x)) {\n        case 0:\n        \toutData = texelFetch(iChannel0, ivec2(0), 0).r +\n                (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_RIGHT, 0), 0).r -\n                (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_LEFT, 0), 0).r;\n        \tbreak;\n        \n        case 1:\n        \toutData = texelFetch(iChannel0, ivec2(1, 0), 0).r +\n                (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_UP, 0), 0).r -\n        \t\t(iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_DOWN, 0), 0).r;\n        \tbreak;\n    }\n    \n    fragColor = vec4(outData, 0.0, 0.0, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nconst int W = 87;\nconst int A = 65;\nconst int S = 83;\nconst int D = 68;\nconst float speed = 100.0;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float outData = 0.0;\n    \n    switch(int(fragCoord.x)) {\n        case 0:\n        \toutData = texelFetch(iChannel0, ivec2(0), 0).r +\n                (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(D, 0), 0).r -\n                (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(A, 0), 0).r;\n        \tbreak;\n        \n        case 1:\n        \toutData = texelFetch(iChannel0, ivec2(1, 0), 0).r +\n                (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(W, 0), 0).r -\n        \t\t(iTimeDelta * speed) * texelFetch(iChannel1, ivec2(S, 0), 0).r;\n        \tbreak;\n    }\n    \n    fragColor = vec4(outData, 0.0, 0.0, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}