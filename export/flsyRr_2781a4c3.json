{"ver":"0.1","info":{"id":"flsyRr","date":"1673526550","viewed":280,"name":"Domain warping 4","username":"silentmimsy","description":"domain warping","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Creds to Iniqo Quilez to learn about domain warping: https://iquilezles.org/articles/warp/\n\nint NUM_NOISE_OCTAVES = 7;\n\nfloat hash(float p) { p = fract(p * 0.011); p *= p + 7.5; p *= p + p; return fract(p); }\nfloat hash(vec2 p) {vec3 p3 = fract(vec3(p.xyx) * 0.13); p3 += dot(p3, p3.yzx + 3.333); return fract((p3.x + p3.y) * p3.z); }\n\nfloat noise(float x) {\n    float i = floor(x);\n    float f = fract(x);\n    float u = f * f * (3.0 - 2.0 * f);\n    return mix(hash(i), hash(i + 1.0), u);\n}\n\nvec2 N22(vec2 p){\n\n    vec3 a = fract(p.xyx * vec3(123.34, 234.34, 345.65));\n    a += dot(a,a+34.35);\n    return fract(vec2(a.x*a.y,a.y*a.z));\n\n}\n\nfloat noise(vec2 x) {\n    vec2 i = floor(x);\n    vec2 f = fract(x);\n\n\tfloat a = hash(i);\n    float b = hash(i + vec2(1.0, 0.0));\n    float c = hash(i + vec2(0.0, 1.0));\n    float d = hash(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\treturn mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\n\nfloat noise(vec3 x) {\n    const vec3 step = vec3(110, 241, 171);\n\n    vec3 i = floor(x);\n    vec3 f = fract(x);\n \n    float n = dot(i, step);\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n    return mix(mix(mix( hash(n + dot(step, vec3(0, 0, 0))), hash(n + dot(step, vec3(1, 0, 0))), u.x),\n                   mix( hash(n + dot(step, vec3(0, 1, 0))), hash(n + dot(step, vec3(1, 1, 0))), u.x), u.y),\n               mix(mix( hash(n + dot(step, vec3(0, 0, 1))), hash(n + dot(step, vec3(1, 0, 1))), u.x),\n                   mix( hash(n + dot(step, vec3(0, 1, 1))), hash(n + dot(step, vec3(1, 1, 1))), u.x), u.y), u.z);\n}\n\nfloat fbm(float x) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tfloat shift = float(100);\n\tfor (int i = 0; i < NUM_NOISE_OCTAVES; ++i) {\n\t\tv += a * noise(x);\n\t\tx = x * 2.0 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\n\nfloat fbm(vec2 x) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100);\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n\tfor (int i = 0; i < NUM_NOISE_OCTAVES; ++i) {\n\t\tv += a * noise(x);\n\t\tx = rot * x * 2.0 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\n\nfloat fbm(vec3 x) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec3 shift = vec3(100);\n\tfor (int i = 0; i < NUM_NOISE_OCTAVES; ++i) {\n\t\tv += a * noise(x);\n\t\tx = x * 2.0 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\n\nfloat pattern(vec2 p, out vec2 qo, out vec2 ro){\n    \n    float t = iTime+500.;\n    \n    vec2 q = vec2(fbm(p+ vec2(7.77,5.2)*t*0.0001), \n                  fbm(p+vec2(6,1)*t*0.005));\n                  \n    qo.x = q.x;\n    qo.y = q.y;\n    \n    vec2 r = vec2(fbm(p + 3.*q + vec2(5.42,0)), \n            fbm(p + 2.*q + vec2(1.398,2.4)));\n            \n    ro.x = r.x;\n    ro.y = r.y;\n\n    return fbm(p + 15.*r);\n\n}\n\nvec3 col0 = vec3(212., 241., 249.)/255.;\nvec3 col1 = vec3(59, 37, 43)/255.;\nvec3 col2 = vec3(113., 75., 81.)/255.;\nvec3 col3 = vec3(0, 119, 190)/255.;\nvec3 col4 = vec3(229., 126., 60.)/25.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n    vec2 q = vec2(0.0);\n    vec2 r = vec2(0.0);\n    float x = pattern(uv*1.5,q,r);\n    \n    vec3 col = vec3(0.0);\n    \n    col = mix( col1, col3, q.x*30.);\n    col = mix(col, col3, r.y*2.);\n    col = mix(col, col4, r.x*0.4);\n    col = col *x*0.5 ;\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}