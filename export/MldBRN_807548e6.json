{"ver":"0.1","info":{"id":"MldBRN","date":"1538894032","viewed":124,"name":"Nature Project- Ocean Waves","username":"tiff","description":"Mimicking ocean waves","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["oceanwaves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 v) {\n  return fract(tan(dot(v*.1, vec2(200.654, .746)))*.4);\n}\n\n//drawing a band\nfloat Band(float t, float start, float end, float blur){\n    float step1 = smoothstep(start - blur, start + blur, t); //start of band\n    float step2 = smoothstep(end + blur, end - blur, t); //end of band\n\n    return step1*step2; //multiplying both sides to make the band \n}\n\n//drawing a rectangle\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur){\n\tfloat band1 = Band(uv.x, left, right, blur); //vertical band\n    float band2 = Band(uv.y, bottom, top, blur); //horizontal band\n    return band1 * band2; //multiplying the bands to make a rectangle\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float t = iTime*1.5;\n    \n    uv -= .5; //-0.5 <> 0.5\n    uv.x *= iResolution.x/iResolution.y;\n    uv*= 7.;\n    uv = fract(uv)-.5;\n    uv *= smoothstep(uv.x, uv.x, .8);\n    \n    vec3 color = vec3(0.1, 0.35, 1.);\n    vec3 col = vec3(1.);\n    \n    float mask = 0.;\n    float mask2 = 0.;\n    \n    float x = uv.x;\n    float m = sin(t+x*6.2)*.15;\n    float m1 = cos(t-x*6.2)*.15; //cos curve for second wave\n    float y = uv.y-m;\n    float y1 = uv.y-m1;\n       \n\n    mask = Rect(vec2(x,y), -1., 1., -.35, -.15, .01); //top sine wave\n    mask2 = Rect(vec2(x,y1), -1., 1., .15, .35, .01); //bottom cosine wave\n   \n    float c = mix(uv.x, uv.x, iTime);\n                  \n    //color = color/random(uv)-random(uv)+c;\n    //color += smoothstep(color.x*color.y, color.x*color.y, length(uv.xy));\n    color = mix(color/random(uv), color-random(uv), .5);\n    \n    col = color+mask+mask2; \n    \n    \n    // Output to screen\n    fragColor = vec4(col,color);\n    \n}\n","name":"Image","description":"","type":"image"}]}