{"ver":"0.1","info":{"id":"wsKBzV","date":"1607567522","viewed":90,"name":"fake the goonies","username":"jorge2017a1","description":"fake the goonies","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fakethegoonies"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// por jorge flores....\n//jorge2017a1...\n//Imitacion pobre del video juego....the Goonies\n\n#define saturate(x) clamp(x, 0.0, 1.0)\n#define R iResolution.xy\n#define ss(a, b, t) smoothstep(a, b, t)\n#define SS(U) smoothstep(3./R.y,0.,U)\n\n\nfloat opU( float d1, float d2 ) { return  min(d1,d2); }\nfloat opS( float d1, float d2 ) { return max(-d1,d2); }\nfloat opI( float d1, float d2 ) { return max(d1,d2); }\n\n\nvec2 opU2( vec2 d1, vec2 d2 ) \n{\n    //return  min(d1.x,d2.x); \n    if (d1.x<d2.x)\n       return d1; \t\n    else\n       return d2;\n}\n\nvec2 opS2( vec2 d1, vec2 d2 )\n{\n    //return max(-d1.x,d2.x); \n    if  (-d1.x<d2.x)\n        return d1;\n    else\n        return d2;\n}\n\nvec2 opI2( vec2 d1, vec2 d2 ) \n{\n    //return max(d1,d2);\n    if (d1.x>d2.x)\n       \treturn d1;\n    else\n        return d2;\n}\n\nvec2 opS(vec2 d1, vec2 d2) {\n\treturn vec2(max(-d2.x, d1.x), 2.0);\n}\n\n\nvec2 opRep2D( in vec2 p, in vec2 c )\n{\n    vec2 q = mod(p+0.5*c,c)-0.5*c;\n    return  q;\n}\n\n\nfloat sdbox(vec2 p, vec2 b)\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdcirc(vec2 p, float r)\n{\n    return length(p)-r;\n}\n\n\n\n\n\nvec2 BloqueUnoVec2(vec2 p)\n{\n    float b1a=sdBox(p-vec2(-1.5,-0.9), vec2(0.2,0.08 ) );\n    \n    float b2a=sdBox(p-vec2(-1.682,-0.9), vec2(0.016,0.08 ) );\n    float b3a=sdBox(p-vec2(-1.65,-0.9), vec2(0.01,0.08 ) );\n    \n    float b4a=sdBox(p-vec2(-1.482,-0.84), vec2(0.182,0.02 ) );\n    float b5a=sdBox(p-vec2(-1.482,-0.85), vec2(0.182,0.02 ) );\n    \n    vec2 resp=vec2( 9999.0,-1.0);\n    \n    b1a=opS(b2a,b1a);\n    b1a=opS(b3a,b1a);\n    \n    b1a=opS(b4a,b1a);\n    b1a=opS(b5a,b1a);\n    \n    resp=opU2(resp,vec2(b1a,31.0));\n    resp=opU2(resp,vec2(b2a,17.0));\n    resp=opU2(resp,vec2(b3a,32.0));\n    \n    resp=opU2(resp,vec2(b4a,17.0));\n    resp=opU2(resp,vec2(b5a,32.0));\n    \n    \n    return resp;\n}\n\n\n\nvec2 BloquesVec2(vec2 p)\n{\n    vec2 pp=p;\n    \n    vec2 resp =vec2(9999.0,-1.0);\n    float suma=1000.0;\n    \n    for (float i=0.0; i<16.0;i++)\n \t{   \n        vec2 av=vec2(-1.8+0.235*float(i),-1.4);\n    \tfloat b1a=sdBox(pp-av, vec2(0.11,0.05 ) );\n        float b2v=sdBox(pp-av-vec2(-0.1,0.0), vec2(0.01,0.05 ) );\n        float b3v=sdBox(pp-av-vec2(-0.08,0.0), vec2(0.01,0.05 ) );\n        float b1h=sdBox(pp-av-vec2(0.0,0.05), vec2(0.11,0.01 ) );\n        float b2h=sdBox(pp-av-vec2(0.0,0.03), vec2(0.11,0.01 ) );\n        b1a=opS(b2v, b1a);\n        b1a=opS(b3v, b1a);\n        b1a=opS(b1h, b1a);\n        b1a=opS(b2h, b1a); \n    \tresp=opU2(resp, vec2(b1a, 17.0));\n        resp=opU2(resp, vec2(b2v, 31.0));\n        resp=opU2(resp, vec2(b3v, 32.0));\n        resp=opU2(resp, vec2(b1h, 31.0));\n        resp=opU2(resp, vec2(b2h, 32.0));\n\t}   \n    \n    \n    return resp;\n}\n\n\n\nvec2 BloquesVec2Simple(vec2 p)\n{\n    vec2 pp=p;\n    vec2 resp =vec2(9999.0,-1.0);\n    float suma=1000.0;\n    \n    for (float i=0.0; i<22.0;i++)\n \t{   \n        vec2 av=vec2(-1.8+0.18*float(i),-1.4);\n    \tfloat b1a=sdBox(pp-av, vec2(0.08,0.04 ) );\n        resp=opU2(resp, vec2(b1a, 17.0));       \n\t}   \n    \n    //return vec2(suma, 11.0);\n    return resp;\n}\n\n\nvec2 BloquesVec2SimplePar(vec2 p, float Num)\n{\n    vec2 pp=p;\n    \n    vec2 resp =vec2(9999.0,-1.0);\n    float suma=1000.0;\n    \n    for (float i=0.0; i<Num;i++)\n \t{   \n        \n        vec2 av=vec2(-1.8+0.235*float(i),-1.4);\n\n    \tfloat b1a=sdBox(pp-av, vec2(0.11,0.04 ) );\n        resp=opU2(resp, vec2(b1a, 17.0));\n        \n\t}   \n    \n \n    return resp;\n}    \n\nvec2 BloqueLargoHorizontalA(vec2 p )\n{   \n   \n    float b1a=sdBox(p, vec2(2.0,0.02 ) ); //grande\n    float b2a=sdBox(p-vec2(0.0,0.03), vec2(2.0,0.01 ) ); //linea sup\n    float b3a=sdBox(p-vec2(0.0,-0.03), vec2(2.0,0.01 ) ); //linea inf\n    \n    vec2 resp =vec2(9999.0,-1.0);\n    \n\tresp=opU2(resp, vec2(b1a, 31.0));\n    resp=opU2(resp, vec2(b2a, 32.0));\n    resp=opU2(resp, vec2(b3a, 33.0));\n    \n    return resp;    \n}   \n    \n\nvec2 BloqueLargoSupHorizontalB(vec2 p )\n{   \n   \n    float b1a=sdBox(p, vec2(2.0,0.02 ) ); //grande\n    float b2a=sdBox(p-vec2(0.0,-0.06), vec2(2.0,0.02 ) ); //grande\n    \n    float b3a=sdBox(p-vec2(0.0,0.02), vec2(2.0,0.01 ) ); //linea sup\n    float b4a=sdBox(p-vec2(0.0,-0.03), vec2(2.0,0.01 ) ); //linea inf\n    \n    vec2 resp =vec2(9999.0,-1.0);\n    \n\tresp=opU2(resp, vec2(b1a, 17.0));\n    resp=opU2(resp, vec2(b2a, 33.0));\n    //resp=oU2(resp, vec2(b3a, 33.0));\n    //resp=oU2(resp, vec2(b4a, 33.0));\n    \n    return resp;    \n}   \n\nvec2 BloqueLargoVerticalUno(vec2 p )\n{   \n    vec2 resp =vec2(9999.0,-1.0);\n   \n    float b1a=sdBox(p, vec2(0.03,0.50 ) ); //grande\n    resp=vec2(b1a,34);\n    return resp;\n}\n\nvec2 BloqueLargoVerticalUnoGris(vec2 p )\n{   \n    vec2 resp =vec2(9999.0,-1.0);\n   \n    float b1a=sdBox(p, vec2(0.04,0.29 ) ); //grande\n    resp=vec2(b1a,31);\n    return resp;\n}\n\n\nvec2 BloqueLargoVerticalPar(vec2 p, float Num )\n{   \n    vec2 resp =vec2(9999.0,-1.0);\n   \n    for (float i=0.0; i<Num;i++)\n \t{   \n        \n        vec2 av=vec2(-2.0+0.08*float(i),0.0);\n        float b1a=sdBox(p-av, vec2(0.03,0.45 ) ); //grande\n        resp=opU2(resp, vec2(b1a, 34.0));\n\t}\n    \n  \n    return resp;\n}\n\n\nvec2 HacerLadrillos(vec2 p)\n{\n     vec2 resp =vec2(9999.0,-1.0);\n    \n    float b1a=sdBox(p, vec2(0.15,0.222 ) ); \n    mObj.color=color_brick(p*5.0);\n    resp=vec2(b1a,-2.0);\n\n\n    \n    return resp;\n    \n}\n\nvec2 HacerEscalera(vec2 p)\n{\n     vec2 resp =vec2(9999.0,-1.0);\n       //vertical\n    float b1a=sdBox(p-vec2(0.00,0.0), vec2(0.003,0.22 ) ); \n    float b2a=sdBox(p-vec2(0.05,0.0), vec2(0.003,0.22 ) ); \n    \n    //horizontal\n     float bh1=sdBox(p-vec2(0.025,0.20), vec2(0.04,0.01 ) ); \n    float bh2=sdBox(p-vec2(0.025,0.15), vec2(0.04,0.01 ) ); \n    float bh3=sdBox(p-vec2(0.025,0.10), vec2(0.04,0.01 ) ); \n    float bh4=sdBox(p-vec2(0.025,0.05), vec2(0.04,0.01 ) ); \n    float bh5=sdBox(p-vec2(0.025,0.00), vec2(0.04,0.01 ) ); \n \n    float bh6=sdBox(p-vec2(0.025,-0.0), vec2(0.04,0.01 ) ); \n    float bh7=sdBox(p-vec2(0.025,-0.05), vec2(0.04,0.01 ) ); \n    float bh8=sdBox(p-vec2(0.025,-0.10), vec2(0.04,0.01 ) ); \n    float bh9=sdBox(p-vec2(0.025,-0.15), vec2(0.04,0.01 ) ); \n   float bh10=sdBox(p-vec2(0.025,-0.20), vec2(0.04,0.01 ) ); \n    \n    resp=opU2(resp, vec2(b1a, 31.0));\n    resp=opU2(resp, vec2(b2a, 31.0));\n    \n    resp=opU2(resp, vec2(bh1, 2.0));\n    resp=opU2(resp, vec2(bh2, 2.0));\n    resp=opU2(resp, vec2(bh3, 2.0));\n    resp=opU2(resp, vec2(bh4, 2.0));\n    \n    resp=opU2(resp, vec2(bh5, 2.0));\n    resp=opU2(resp, vec2(bh6, 2.0));\n    resp=opU2(resp, vec2(bh7, 2.0));\n    resp=opU2(resp, vec2(bh8, 2.0));\n    resp=opU2(resp, vec2(bh9, 2.0));\n    resp=opU2(resp, vec2(bh10, 2.0));\n    \n    return resp;\n    \n}\n\n\nvec2 HacerCuadroCalavera(vec2 p)\n{\n     vec2 resp =vec2(9999.0,-1.0);\n    \n    float b1a=sdBox(p, vec2(0.15,0.15 ) ); \n   \n    resp=vec2(b1a,0.0);\n    return resp;\n    \n}\n\nvec2 HacerCuadroCalaveraV2(vec2 p)\n{\n     vec2 resp =vec2(9999.0,-1.0);\n    \n    //vert\n    float b1a=sdBox(p-vec2(-0.12,-0.02), vec2(0.02,0.12 ) ); \n    float b2a=sdBox(p-vec2(0.11, -0.02), vec2(0.02,0.12 ) ); \n    \n    //horizontal\n    float b3a=sdBox(p-vec2(0.0,0.12), vec2(0.136,0.02 ) ); \n    \n   \n    resp=opU2(resp,vec2(b1a,31.0));\n    resp=opU2(resp,vec2(b2a,31.0));\n    resp=opU2(resp,vec2(b3a,31.0));\n    \n    return resp;\n    \n}\n\n\nvec2 HacerMiniBloqueSup(vec2 p)\n{\n     vec2 resp =vec2(9999.0,-1.0);\n    \n    //horizontal\n    float b1a=sdBox(p-vec2(0.0,0.13), vec2(0.3,0.0005 ) ); \n    float b2a=sdBox(p-vec2(0.0,0.15), vec2(0.3,0.001 ) ); \n    float b3a=sdBox(p-vec2(0.0,0.165), vec2(0.3,0.0005 ) ); \n    \n    \n    resp=opU2(resp,vec2(b1a,31.0));\n    resp=opU2(resp,vec2(b2a,32.0));\n    resp=opU2(resp,vec2(b3a,31.0));\n    \n    return resp;\n    \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n     vec2 p = (2.*fragCoord-iResolution.xy)/iResolution.y;\n     \n     //sugerencia por FabriceNeyret2, \n     //p.x = mod( p.x+iTime, iResolution.x/iResolution.y);\n     \n     float t1=mod(iTime, 1.5);\n     float t2=mod(iTime, 3.0);\n     \n     if (t1<t2)\n         p.x = mod( p.x+t1, iResolution.x/iResolution.y);\n     \n         \n     \n     \n\t vec3 col = vec3(0.0,0.0,0.0);\n  \n    vec2  b1h = BloquesVec2Simple(p-vec2(0.1,0.61));\n    vec2  b2h = BloquesVec2Simple(p-vec2(-0.15,0.52));\n    vec2  b3h = BloquesVec2Simple(p-vec2(0.1,1.3));\n    vec2  b4h = BloquesVec2SimplePar(p-vec2(2.2,1.2), 10.0);\n    vec2  b5h = BloquesVec2SimplePar(p-vec2(2.2,1.1), 10.0);\n    vec2  b6h = BloqueLargoHorizontalA(p-vec2(0.25,0.45));\n    vec2  b7h = BloqueLargoSupHorizontalB(p-vec2(0.25,0.95));\n    vec2  b9v = BloqueLargoVerticalPar(p-vec2(0.25,0.4), 45.0 );\n    vec2  b10v= BloqueLargoVerticalPar(p-vec2(2.01,0.4), 4.0 ); ///hueco\n    vec2   b10 = HacerLadrillos(p-vec2(0.9,0.18));\n    vec2 bE1 = HacerEscalera(p-vec2(0.55,0.26));\n    vec2 bE2 = HacerEscalera(p-vec2(1.3,0.26));\n    vec2 bE3 = HacerEscalera(p-vec2(0.15,-0.26));\n    vec2 bE4 = HacerEscalera(p-vec2(-1.5,-0.96));\n    vec2   bC1 = HacerCuadroCalavera(p-vec2(-1.3,0.65));\n    vec2   bC2 = HacerCuadroCalaveraV2(p-vec2(-1.3,0.65));\n   \tvec2 bM1 = HacerMiniBloqueSup(p-vec2(-1.7,0.70) );\n    vec2 bM2 = HacerMiniBloqueSup(p-vec2(-1.8,0.65) );\n    vec2 bM3 = HacerMiniBloqueSup(p-vec2(-2.0,0.61) );\n    vec2 bM4 = HacerMiniBloqueSup(p-vec2(-1.9,0.57) );\n    vec2 bM5 = HacerMiniBloqueSup(p-vec2(-1.9,0.52) );\n    vec2 bM6 = HacerMiniBloqueSup(p-vec2(-1.85,0.47) );\n    vec2 bM7 = HacerMiniBloqueSup(p-vec2(-1.95,0.41) );\n    \n    vec2 b11v= BloqueLargoVerticalUnoGris( p-vec2(-1.0,-0.45) );\n    \n       \n    vec3 colgris=vec3(0.5);\n    vec3 colb1=getColor(int(b1h.y));\n    vec3 colb2=getColor(int(b2h.y));\n    vec3 colb3=getColor(int(b3h.y));\n    vec3 colb4=getColor(int(b3h.y));  \n    vec3 colb6=getColor(int(b6h.y));\n    vec3 colb9=getColor(int(b9v.y));\n    vec3 colb10v=getColor(int(b10v.y));\n    vec3 colb10=getColor(int(b10.y));\n    vec3 colb11=getColor(int(bE1.y));\n    vec3 colb12=getColor(int(bC1.y));\n    vec3 colC2=getColor(int(bC2.y));\n    \n    vec3 colM1=getColor(int(bM1.y));\n    vec3 colM2=getColor(int(bM2.y));\n    vec3 colM3=getColor(int(bM3.y));\n    vec3 colM4=getColor(int(bM4.y));\n    vec3 colM5=getColor(int(bM5.y));\n    vec3 colM6=getColor(int(bM6.y));\n    vec3 colM7=getColor(int(bM7.y));\n    vec3 colb11v=getColor(int(b11v.y));\n    \n    \n    col= DibujoConBorde(p, b9v.x, colb9,  col);\n    col= DibujoConBorde(p, b1h.x, colb1,  col);\n    col= DibujoConBorde(p, b2h.x, colb2,  col);\n    col= DibujoConBorde(p, b3h.x, colb3,  col);\n    col= DibujoConBorde(p, b4h.x, colb4,  col);\n    col= DibujoConBorde(p, b5h.x, colb4,  col);\n    col= DibujoConBorde(p, b6h.x, colb6,  col);\n    col= DibujoConBorde(p, b7h.x, colb6,  col);\n    col= DibujoSinBorde(p, b10.x, colb10,  col);\n    col= DibujoConBorde(p, bE1.x, colb11,  col);\n    col= DibujoConBorde(p, bE2.x, colb11,  col);\n    col= DibujoConBorde(p, bE3.x, colb11,  col);\n    col= DibujoConBorde(p, bE4.x, colb11,  col);\n    col= DibujoConBorde(p, bC1.x, colb12,  col);\n    col= DibujoSinBorde(p, bC2.x, colC2,  col);\n    col= DibujoSinBorde(p, bM1.x, colM1,  col);\n    col= DibujoSinBorde(p, bM2.x, colM2,  col);\n    col= DibujoSinBorde(p, bM3.x, colM3,  col);\n    col= DibujoSinBorde(p, bM4.x, colM4,  col);\n    col= DibujoSinBorde(p, bM5.x, colM5,  col);\n    col= DibujoSinBorde(p, bM6.x, colM6,  col);\n    col= DibujoSinBorde(p, bM7.x, colM7,  col);\n    col= DibujoConBorde(p, b10v.x, colb10v,  col);\n    col= DibujoConBorde(p, b11v.x, colb11v,  col);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"///------------------------------------\nstruct TObj\n{\n    vec3 color;\n   \n};\n\n    \nTObj mObj;\n\nvec3  Arrcolores[] = vec3[] (\nvec3(0,0,0)/255.0,  //0\nvec3(255.,255.,255.)/255.0, //1\nvec3(255,0,0)/255.0,  //2\nvec3(0,255,0)/255.0,   //3\nvec3(0,0,255)/255.0,   //4\nvec3(255,255,0)/255.0,  //5\nvec3(0,255,255)/255.0,  //6 \nvec3(255,0,255)/255.0,   //7\nvec3(192,192,192)/255.0,  //8\nvec3(128,128,128)/255.0,  //9\nvec3(128,0,0)/255.0,   //10\nvec3(128,128,0)/255.0,  //11\nvec3(0,128,0)/255.0,   //12\nvec3(128,0,128)/255.0,  //13\nvec3(0,128,128)/255.0,  //14\nvec3(0,0,128)/255.0,    //15\nvec3(255, 204, 188)/255.0,  //16\nvec3(0.75),  //17\nvec3(0.5, 0.5, 0.8),  //18\nvec3(1, 0.5, 0),      //19\nvec3(1.0, 1.0, 1.0),  //20\nvec3(247./255., 168./255.,  184./255.),  //21\nvec3(0, 1, 1),                           //22 \nvec3(85./255., 205./255., 252./255.),    //23\nvec3(0.425, 0.56, 0.9)*vec3( 0.3, 0.2, 1.0 ),  //24 \nvec3(0.8,0.8,0.8)*vec3( 0.3, 0.2, 1.0 ),       //25  \nvec3(1.0,0.01,0.01)*vec3( 0.3, 0.2, 1.0 ),     //26\nvec3(0.1, 0.5, 1.0),                           //27   \nvec3(0.0, 0.6, 0.0),                       //28 \nvec3(0.1,0.1,0.7),                          //29\nvec3(0.99, 0.2, 0.1), //30\nvec3(0.6),  //31\nvec3(0.7),  //32\nvec3(0.8),  //33\nvec3(0.6,0.0,0.0)  //34\n    \n);\n\n//----------------------------------------------------\nvec3 getColor(int i)\n{    \n    if (i==-2 ) {return mObj.color; }       \n    if (i>-1 ) \n\t\treturn Arrcolores[i];\n}\n///--------------------------------------------\n\n\n\n// MASKS\nfloat fillMask(float distanceChange, float dist) \n{\n    return smoothstep(distanceChange, -distanceChange, dist);\n}\n\nfloat blurMask(float distanceChange, float dist, float blurAmount) {\n    float blurTotal = blurAmount*.01;\n    return smoothstep(blurTotal+distanceChange, -distanceChange, dist);\n}\n\nfloat innerMask(float distanceChange, float dist, float width) {\n    return smoothstep(distanceChange,-distanceChange,dist+width);\n}\n\nfloat outerMask(float distanceChange, float dist, float width) {\n    return smoothstep(distanceChange,-distanceChange,dist-width);\n}\n\n\nvec3 DibujoConBorde(vec2 uv, float dist, vec3 colIn,  vec3 colOut)\n{   \n    float distanceChange = fwidth(dist) * 0.5;\n    float flm=fillMask(distanceChange, dist);\n    \n    float uWotM8 = 0.009;\n    \n    uWotM8 = outerMask(distanceChange, dist, uWotM8);\n    colOut = mix(colOut, vec3(0,0,0), uWotM8);\n    \n    return mix(colOut,colIn, flm );\n}\n\n\nvec3 DibujoSinBorde(vec2 uv, float dist, vec3 colIn,  vec3 colOut)\n{   \n    float distanceChange = fwidth(dist) * 0.5;\n    float flm=fillMask(distanceChange, dist);\n    \n    float uWotM8 = 0.009;\n    \n    uWotM8 = outerMask(distanceChange, dist, uWotM8);\n    //colOut = mix(colOut, vec3(0,0,0), uWotM8);\n    colOut = mix(colOut, colIn, uWotM8);\n    \n    return mix(colOut,colIn, flm );\n}\n\n\nfloat sdCirc(vec2 p, float r)\n{\n    return length(p)-r;\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\n\n\n///-------------------------------\n\n\nvec3 color_brick(in vec2 p)\n{\t\n\t//const vec3 brickColor = vec3(0.2,0.2,0.2);\n    const vec3 brickColor = vec3(0.6);\n    \n\t//const vec3 mortarColor = vec3(0.8);\n    const vec3 mortarColor = vec3(0.1);\n    \n\tconst vec2 brickSize = vec2(0.3,0.15)*2.0;\n\tconst vec2 brickPct = vec2(0.9,0.85);\n\t\n\tvec2 position = (p.xy)/brickSize;\n\tvec2 useBrick = vec2(0);\n\t\n\tif(fract(position.y*0.5) > 0.5)\n\t\tposition.x += 0.5;\n\t\t\n\tposition = fract(position);\n\tuseBrick = step(position, brickPct);\n\t\n\tvec3 color =  mix(mortarColor, brickColor, useBrick.x*useBrick.y);\n\t\n\t\n\tposition = p.xy/brickSize;\n\tif(fract(position.y*0.5) > 0.5)\n\t\tposition.x += 0.5;\n\tposition = fract(position);\n\tuseBrick = step(position, brickPct);\n\tcolor = (color+mix(mortarColor, brickColor, useBrick.x*useBrick.y))/2.0;\n\t\n\treturn color;\n\t\n}","name":"Common","description":"","type":"common"}]}