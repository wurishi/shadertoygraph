{"ver":"0.1","info":{"id":"stBXRh","date":"1627041515","viewed":125,"name":"Rotating truchet tiled circles","username":"Chriscamplin","description":"Rotating truchet tiled lined circles. Truchet algorithm based on Art of Code's tutorial: https://www.youtube.com/watch?v=2R7h76GoIJM&t=30s ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["rotate","truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n#define PI2 6.28318530718\n\n\n// Author: chris Camplin \n// Title: Truchet tile - based on Art of code's Truchet algorithm -https://www.youtube.com/watch?v=2R7h76GoIJM\n\nfloat hash21(vec2 p){\n    p=fract(p*vec2(234.34,435.345));\n    p+=dot(p,p+34.23);\n    return fract(p.x*p.y);\n}\nvec2 rotate2D(vec2 _st,float _angle){\n    //_st-=.5;\n    _st=mat2(cos(_angle),-sin(_angle),\n    sin(_angle),cos(_angle))*_st;\n    //_st+=.5;\n    return _st;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv=(fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n    vec2 UV=fragCoord.xy/iResolution.xy;\n    vec3 color=vec3(0.);\n    float animDuration=16.;\n    float s=sin(PI2*(iTime-.75)/animDuration)/2.+.5;\n    // grid uv coord\n    //uv.y+=2.;\n    uv*=20.*s+6.;//*UV.y;\n    float r=sqrt(dot(uv,uv));\n    for(float i=0.;i<9.5;i+=1.5){\n        if(r<float(i)*(s+.25)){\n            uv=rotate2D(uv,mod(float(i),2.)==0.?PI2*s:-PI2*s);\n        }\n        \n    }\n\n    vec2 gv=fract(uv)-.5;\n    vec2 id=floor(uv);\n    float n=hash21(id);// random val between 0 & 1;\n    if(r<9.*(s+.25)){\n        gv.x*=-1.;\n        float width=.1*(s+1.);\n        if(n<.5)gv.x*=-1.;\n        float a=atan(gv.x,gv.y);\n        float line=abs(abs(gv.x+gv.y)-.5);\n        float mask=smoothstep(.01,-.01,line-width);\n       \n        color+=texture(iChannel0, gv).rgb*vec3(mask);//,.01,mask);\n                \n    }\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}