{"ver":"0.1","info":{"id":"WstSRM","date":"1571757980","viewed":96,"name":"ripple_learning","username":"hyunxi","description":" https://www.shadertoy.com/view/XsXXDn\ntry to understand this shader step by step","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["learningripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n#define r iResolution.xy\n\nvec2 ripple(vec2 p)\n{\n    float l = length(p);//length of all point to center of screen\n    //ripple shape\n    //sin(l) : along the l increase direction create wave pattern using sin\n    //this create Concentric circles\n    //-t*2 create animation\n    \n    float density = 9.;\n    float speed = -2.;\n    p = vec2(abs(sin(l*density+speed*t)));\n    return p;\n}\n\nvec2 beam(vec2 p)\n{\n    \n    float l = length(p);//length of all point to center of screen\n    //more center, more align to x axis , larger value\n    p = p/l;\n    //animate the brightness using lifted sin\n    p*=(sin(t)+1.);\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/r;// uv [(0 ,0)~(1,1)]\n    \n    vec2 p =uv;\n    p -=0.5;// [(-0.5 ,-0.5)~(0.5,0.5)]\n    p.x *= r.x/r.y; // proportion to 1:1 [(-0.5*r.x/r.y , -0.5)~(0.5*r.x/r.y , 0.5)]\n    \n    float c = (ripple(p)*beam(p)).y;\n    \n\t\n    \n\n    // Output to screen\n    fragColor = vec4(vec3(c),1.0);\n}","name":"Image","description":"","type":"image"}]}