{"ver":"0.1","info":{"id":"DtGfWt","date":"1702599673","viewed":35,"name":"Crismass Tree","username":"mizuiro_rivi","description":"Ex1 for topology","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["crismasstopology"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nvec2 rotate(vec2 uv, float th) {\n    return mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n}\n\nvec3 background(vec2 uv) {\n    return mix(vec3(0.2), vec3(0.1), uv.y + 0.5);\n}\n\nbool circle(vec2 uv, float r, vec2 offset) {\n    return distance(uv,offset) < r;\n}\n\nbool square(vec2 uv, float size, vec2 offset, float angle) {\n    vec2 t=abs(rotate(uv-offset,angle));\n    return t.x< size && t.y<size;\n}\n\nbool triangle(vec2 uv, float size, vec2 offset, float angle) {\n    vec2 t=rotate(uv-offset,angle);\n    vec2 ta=abs(t);\n    return ta.x< size && ta.y<size && t.x<t.y;\n}\n\nfloat rand(float x) {\n    return fract(sin(x*(91.3458)) * 47453.5453);\n}\n\nvec3 drawScene(vec2 uv) {\n    vec3 col = background(uv);\n    if(square(uv, 10.0, vec2(0.0, -10.45), 0.0)) col=vec3(1);\n    if(square(uv, 0.07, vec2(0.0, 0.2-0.75), 0.0)) col=vec3(0.48, 0.25, 0.1);\n\n    if(triangle(uv, 0.35, vec2(0, 0.2-0.7), M_PI/4.)) col=vec3(0.09, 0.53, 0.1);\n    if(triangle(uv, 0.3, vec2(0, 0.2-0.475), M_PI/4.)) col=vec3(0.1, 0.57, 0.11);\n    if(triangle(uv, 0.2, vec2(0, 0.2-0.2), M_PI/4.)) col=vec3(0.09, 0.59, 0.1);\n    if(triangle(uv, 0.125, vec2(0, 0.2), M_PI/4.)) col=vec3(0.09, 0.64, 0.1);\n    \n    if(triangle(uv, 0.05, vec2(0.02, 0.405), 0.3-M_PI/4.)) col=vec3(1, 0.99, 0.07);\n    if(triangle(uv, 0.05, vec2(-0.025, 0.43), 0.45+3.*M_PI/4.)) col=vec3(1, 0.99, 0.07);\n    if(triangle(uv, 0.05, vec2(0.0, 0.385), M_PI/4.)) col=vec3(1, 0.99, 0.07);\n    if(triangle(uv, 0.05, vec2(0.0, 0.44), 5.*M_PI/4.)) col=vec3(1, 0.99, 0.07);\n    if(triangle(uv, 0.05, vec2(0.01, 0.425), 0.15-2.*M_PI/4.)) col=vec3(1, 0.99, 0.07);\n    \n    if(circle(uv, 0.05, vec2(0.1,0.2))) col=vec3(1,0,0);\n    if(circle(uv, 0.05, vec2(-0.15,0.025))) col=vec3(0.25, 0.25, 1);\n    if(circle(uv, 0.05, vec2(0.2,-0.1))) col=vec3(1, 0.55, 0.07);\n    if(circle(uv, 0.05, vec2(-0.3,-0.25))) col=vec3(1, 0.29, 0.93);\n    if(circle(uv, 0.05, vec2(-0.015,-0.3))) col=vec3(0.25, 1, 1);\n    if(circle(uv, 0.05, vec2(0.3,-0.4))) col=vec3(1, 0.98, 0.27);\n    \n    for(int i=0; i<200; i++){\n        float ii = float(i);\n        if(circle(uv, 0.01,\n        vec2(rand(ii)*3.-1.5+cos(iTime*(2.+0.05*(rand(rand(-ii))*0.3+1.))+rand((0.21*ii)))*0.15*(rand(rand(-ii))*0.3+1.\n        ),\n        1.-2.*fract(rand(rand(ii*ii))+rand(rand(-ii))*iTime/10.))))\n        col=vec3(1);\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec2 uv = 2.*(fragCoord/iResolution.xy - 0.5);\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = drawScene(uv);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}