{"ver":"0.1","info":{"id":"7tt3Rr","date":"1635703762","viewed":243,"name":"Reduction gear","username":"sinvec","description":"Some magic with 2d sdf functions :D","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["sdf","pseudo3d","gear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define R iResolution.xy\n#define s(v,l) smoothstep(l/R.y,0.,v) // AA\n#define ro(a) (mat2(cos(a),sin(a),-sin(a),cos(a))) // 2d rotation matrix\n\nfloat rec_ls(vec2 p, vec2 a, vec2 b){\n    vec2 ba = b - a, pa = p - a;\n    float h = clamp(dot(pa, ba)/dot(ba, ba), 0., 1.);\n    return length(pa - h * ba);\n}\n\nfloat rad_ls(vec2 p, vec2 sca, vec2 scb, float ra)\n{\n    p *= mat2(sca.x,sca.y,-sca.y,sca.x);\n    p.x = abs(p.x);\n    float k = (scb.y*p.x>scb.x*p.y) ? dot(p.xy,scb) : length(p);\n    return sqrt( dot(p,p) + ra*ra - 2.0*ra*k );\n}\n\n\nvec3 animated_gear(vec2 u, vec2 pos, float count, float k, float radius,\n    float inner_radius, float H, float thickness, float begin_angle, float angle, vec3 col) {\n       \n    u -= pos;\n    vec2 o = u;\n    float an = begin_angle + angle;\n    u *= ro(an);\n\n    float L = (2. * PI * radius) / (count * (1. + k)),\n          a1 = L / radius, \n          a2 = (L * k) / radius, \n          l = radius * sqrt (2. * (1. - cos(a1))), \n          ea1 = PI / 2. - a1 / 2.;\n    \n    vec2 p1 = vec2(-l / 2., sin(ea1) * radius),\n         p2 = vec2(-p1.x, p1.y),\n         p3 = p1 + vec2((l - L * k) / 2., H),\n         p4 = p3 + vec2(L * k, 0.);\n    \n    float d, outline = 999.;\n    \n    mat2 temp_r; \n    float temp_a;\n    \n    for(float i = 0.; i < count; i++) {\n        \n        outline = min(outline, rec_ls(u, p1, p3));\n        outline = min(outline, rec_ls(u, p3, p4));\n        outline = min(outline, rec_ls(u, p4, p2));\n        \n        temp_r = ro(i*(a1+a2)-an);\n        \n        outline = min(outline, rec_ls(o+vec2(0., thickness), p1*temp_r, p3*temp_r));\n        outline = min(outline, rec_ls(o+vec2(0., thickness), p3*temp_r, p4*temp_r));\n        outline = min(outline, rec_ls(o+vec2(0., thickness), p4*temp_r, p2*temp_r));\n        \n        outline = min(outline, rec_ls(o, p1*temp_r, p1*temp_r+vec2(0., -thickness)));\n        outline = min(outline, rec_ls(o, p2*temp_r, p2*temp_r+vec2(0., -thickness)));\n        outline = min(outline, rec_ls(o, p3*temp_r, p3*temp_r+vec2(0., -thickness)));\n        outline = min(outline, rec_ls(o, p4*temp_r, p4*temp_r+vec2(0., -thickness)));\n        \n        u *= ro(-(a1+a2)/2.);\n        \n        temp_a = PI/2.+i*(a1+a2)-(a1+a2)/2.-an;\n        \n        outline = min(outline, rad_ls(u, vec2(sin(PI/2.),cos(PI/2.)), vec2(sin(a2/2.),cos(a2/2.)), radius));\n        outline = min(outline, rad_ls(o+vec2(0., thickness), vec2(sin(temp_a),cos(temp_a)), vec2(sin(a2/2.),cos(a2/2.)), radius));\n        \n        u *= ro(-(a1+a2)/2.);\n    }\n    \n    outline = min(outline, abs(length(o) - inner_radius));\n    outline = min(outline, abs(length(o+vec2(0., thickness)) - inner_radius));\n    // Thanks to FabriceNeyret2 for the advice :)\n    return mix(col, vec3(.9), s(outline,6.));\n\n}\n\n\nvoid mainImage( out vec4 O, in vec2 E )\n{\n\n    vec2 u = (E-R*.5)/R.y;\n    u *= 2.;\n    u += vec2(-.4,.1);\n    u.y *= 2.;\n    vec2 o = u; \n\n    // speed :)\n    float as = iTime*.3;\n\n    vec3 col = vec3(.11);\n    col = animated_gear(u,vec2(-1.15,1.),21.,.8,.8,.7,.06,.8,.08,-as*(16./21.),col);\n    col = animated_gear(u,vec2(0.,.1),16.,.8,.6,.4,.06,.8,.05,as,col);\n    col = animated_gear(u,vec2(.552),10.,.8,.35,.15,.06,.4,0.,-as*((16.)/(10.)),col);\n    col = animated_gear(u,vec2(.552*1.83,0.),5.,.8,.175,.05,.06,.2,-.4,as*((16.)/(5.)),col);\n\n    O = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}