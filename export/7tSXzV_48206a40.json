{"ver":"0.1","info":{"id":"7tSXzV","date":"1628071937","viewed":61,"name":"Shapes shader","username":"TFoucour","description":"shapes","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define hEvenSpeed -1.\n#define hOddSpeed -2.\n#define vOddSpeed 1.\n#define vEvenSpeed -1.\n\n\n#define hSpeed 0.\n#define vSpeed 1.\n\n#define center_angle .0\n#define center_radius .0\n#define smoothness 0.01\n#define frequency 10.\n#define speed iTime\n#define nb_side 5.\n#define size .6\n#define borderSize .01\n#define b .0\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    uv *= 5.;\n    uv.x += step(1., mod(uv.y, 2.)) *.5*iTime*hEvenSpeed*hSpeed;\n    uv.x += step(mod(uv.y, 2.), 1.) *.5*iTime*hOddSpeed*hSpeed;\n    uv.y += step(1., mod(uv.x, 2.)) *.5*iTime*vEvenSpeed*vSpeed;\n    uv.y += step(mod(uv.x, 2.), 1.) *.5*iTime*vOddSpeed*vSpeed;\n    uv = fract(uv);\n    uv = uv*2.-1.;\n    \n    float PI = 3.14; \n    float a = atan(uv.x,uv.y)+PI; \n    float r = (PI*2.)/float(nb_side); \n    float d = cos((floor(.5+a/r)*r-a))*length(uv);\n    float s1 = 1.-smoothstep(size,size+smoothness,d);\n    float s2 = smoothstep(size-borderSize,size-borderSize+smoothness,d);\n    float s = s1*s2;\n    \n    fragColor = vec4(s);\n}","name":"Image","description":"","type":"image"}]}