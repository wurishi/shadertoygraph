{"ver":"0.1","info":{"id":"M3GGDK","date":"1718218619","viewed":35,"name":"Hermm","username":"zan","description":"Basic domain warping with polar coords","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Center the coordinates around (0.5, 0.5)\n    uv = uv * 2.0 - 1.0;\n\n    // Convert to polar coordinates\n    float r = length(uv);\n    float theta = atan(uv.y, uv.x);\n\n    // Apply a distortion effect with time evolution\n    float timeFactor = iTime * 2.0; // Adjust the speed of evolution here\n    theta += 0.1 * sin(timeFactor + r * 10.0);\n\n    // Introduce an evolving warp pattern\n    float wave = 0.2 * sin(iTime + r * 0.5);\n\n    uv = vec2(cos(theta + wave), sin(theta + wave)) * r;\n\n    // Adjust the coordinates back to the range (0, 1)\n    uv = (uv + 1.0) / 2.0;\n\n    // Sample the texture from iChannel0\n    vec4 texColor = texture(iChannel0, uv);\n\n    // Output the color\n    fragColor = vec4(texColor.rgb, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}