{"ver":"0.1","info":{"id":"NdGcRc","date":"1655250121","viewed":9,"name":"[Raxmo]-Brick Test","username":"Raxmo","description":"test shader for bricks","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(in vec2 xy, in float seed)\n{\n    return fract(tan(distance(xy * sqrt(2.0), xy) * seed) * xy.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.x);\n\n    uv.x *= 8.0;\n    uv.y *= 8.0;\n    \n    uv.x += floor(uv.y);\n    uv.x /= 2.0;\n    \n    vec2 id = floor(uv);\n    \n    uv = fract(uv);\n    uv.x *= 2.0;\n    \n    uv -= 0.5;\n    uv.x -= 0.5;\n    \n    uv = abs(uv);\n    uv *=2.0;\n    \n    uv = 1.0 - uv;\n    \n    uv.x += 1.0;\n    \n    uv -= 0.075;\n    \n    float val = min(uv.x, uv.y);\n    \n    vec3 col = vec3(0.0);\n    \n    float smudge = cos(cos(fragCoord.x / 15.0) * cos(fragCoord.y / 15.9));\n    if(val < 0.0)\n    {\n        col = vec3(0.80) * smudge;\n    }\n    else\n    {\n        col = vec3(1.0, 0.2, 0.1) * 0.75 * clamp(max(0.0, val) + 0.75, 0.0, 1.0);\n        \n        float rand1 = noise(id, 632.763);\n        float rand2 = noise(id, 64.3248170);\n        \n        col += vec3(rand1, rand2, 0.0)*0.15;\n    }\n    \n\n    //fragColor = vec4(uv, 0, 1);\n\n    fragColor = vec4(vec3(col), 1);\n}","name":"Image","description":"","type":"image"}]}