{"ver":"0.1","info":{"id":"dsBfz3","date":"1690573036","viewed":16,"name":"Simple Rounded Rectangle","username":"xynanxdb","description":"Simple rounded rectangle. Currently, the radius will affect the rectangle size. If anyone knows a better way to control the radius without affecting the rectangle size? Feel free to comment down below.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rectangle","rounded"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float aa = 0.001;\nconst float sizeX = 0.4;\nconst float sizeY = 0.2;\nfloat radius = 0.95;\nconst vec3 color =  vec3(1.0, 0.0, 0.0);\n\nvec4 rect_rounded(vec2 uv, float width, float height, float radius, vec3 color) {\n   float rw = radius * width;\n   float rh = radius * height;\n   \n   vec2 abs_uv = abs(uv.xy) - vec2(rw, rh);\n   vec2 dist = vec2(max(abs_uv.xy, 0.0));\n   \n   float xedge = width - rw;\n   float xsquare = 1.0 - smoothstep(xedge - aa, xedge + aa, length(dist));\n   \n   float yedge = height - rh;\n   float ysquare = 1.0 - smoothstep(yedge - aa, yedge + aa, length(dist));\n   \n   float ss = xsquare * ysquare;\n   \n   return vec4(vec3(ss) * color, ss);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    radius = 0.8f;\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 center = uv - 0.5;\n    \n    vec4 layer = rect_rounded(center, sizeX, sizeY, radius, color);\n    fragColor = layer;\n}","name":"Image","description":"","type":"image"}]}