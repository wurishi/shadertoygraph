{"ver":"0.1","info":{"id":"Nt3GzX","date":"1636474031","viewed":42,"name":"Path of the shader - 2.","username":"SOMATICBITS","description":"2. shader on the path to learning shaders.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["somaticbits"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nfloat circle(vec2 uv) {\n    return length(uv);\n}\n\nfloat ss(float s, float size) {\n    float w = fwidth(s);\n    return smoothstep(size+w,size-w,s);\n}\n\nfloat concentricCircles(vec2 uv, vec2 center, float thickness, float phase, vec2 id) {\n    return ss(cos((distance(uv, vec2(center))/(thickness*length(id))*5.)+phase),thickness);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.x;\n   \n    uv *= 5.;\n    uv += .5;\n    vec2 guv = fract(uv) - .5;\n    vec2 id = floor(uv);\n    \n    vec3 col = clamp(vec3(concentricCircles(guv, vec2(0.), 0.05, iTime, id),0.,0.),0.,1.);\n    col -= ((length(id)*.1))*2.;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}