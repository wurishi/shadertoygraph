{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Spheres\n\n    vec2 uv = fragCoord.xy / iResolution.yy;\n    \n    float s1 = 1.0-clamp(dot(uv*4.0-vec2(3.5,2.75),uv*4.0-vec2(3.5,2.75)),0.0,1.0);\n    \n    float s2 = 1.0-clamp(dot(uv*5.0-vec2(1.5,1.5),uv*5.0-vec2(1.5,1.5)),0.0,1.0);\n    \n    float s3 = 1.0-clamp(dot(uv*3.5-vec2(5.0,1.5),uv*3.5-vec2(5.0,1.5)),0.0,1.0);\n    \n    float s4 = 1.0-clamp(dot(uv*6.5-vec2(5.0,1.25),uv*6.5-vec2(5.0,1.25)),0.0,1.0);\n    \n    float sph = s1/0.21+s2/0.26+s3/0.18+s4/0.34;\n    \n    float spm = clamp((s1+s2+s3+s4)*32.0,0.0,1.0);\n    \n    \n    //Normals\n    \n    float dx = dFdx(sph)*iResolution.x/80.0*spm;\n    \n    float dy = dFdy(sph)*iResolution.x/80.0*spm;\n     \n    vec3 vNormal = normalize(vec3(dx,dy,sqrt(clamp(1.0-dx*dx-dy*dy,0.0,1.0))));\n    \n    \n    //Shading\n    \n    vec3 bcol = vec3(0.2,0.2,0.20);\n    \n    vec3 vLight = normalize(vec3(iResolution.xy-iMouse.xy,48.0)-vec3(iResolution.xy/2.0,0.0));\n    \n    vec3 vEye = vec3(0.0,0.0,1.0);\n    \n    float sh = clamp(dot(vNormal,vLight),0.0,1.0);\n    \n    vec3 sp = pow(clamp(dot(vLight,reflect(vec3(0.0,0.0,-1.0),vNormal)),0.0,1.0),25.0)*vec3(0.5,0.5,0.6);\n    \n    vec3 fcol = bcol+vec3(0.4,0.4,0.35)*sh+sp*spm;\n    \n    fragColor = vec4(fcol,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldjXzV","date":"1414143299","viewed":697,"name":"2D Normal-Mapping Spheres","username":"mAlk","description":"Some normal mapped spheres, using simple lambert diffuse and phong specular.\nMove mouse to change light vector.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["2d","specular","normal"],"hasliked":0,"parentid":"","parentname":""}}