{"ver":"0.1","info":{"id":"ddf3zn","date":"1665530661","viewed":73,"name":"Column Wrap Shader","username":"HenriPK","description":"A shader that mimicks a rotating column with stripes.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rotate","trig"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat tri(float x) {\n    return fract(0.5 * x) < 0.5 ? fract(x): 1.0 - fract(x);\n}\n\nfloat circ(float x) {\n    return acos(x*2.0 - 1.0)/PI;\n}\n\nvec3 stripe(vec2 uv) {\n    vec3 cola = vec3(120, 60, 70)/255.;\n    vec3 colb = vec3(180, 70, 70)/255.;\n    vec3 colc = vec3(240, 90, 75)/255.;\n    \n    vec3 c = cola;\n    \n    if (tri((uv.y - uv.x * 1.0) * 5.0) < 1./3.) {\n        c = colb;\n    }\n    \n    else if (tri((uv.y - uv.x * 1.0) * 5.0) < 2./3.) {\n        c = colc;\n    }\n    \n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord -.5* iResolution.xy ) / iResolution.y;\n    \n    uv.x *= 4.;\n    \n    float det = uv.x + 0.5;\n    \n    vec4 bg = vec4(0.0);\n    \n    uv.x = circ(det);\n    \n    float normal = sin(uv.x);\n    \n    vec2 uv2 = vec2(uv.x + iTime, uv.y);\n    vec4 col = vec4(stripe(uv2), 1.0);\n    //vec4 col = texture(iChannel0, uv2);\n    col.rgb *= normal;\n\n    float edge = 0.001;\n    fragColor = mix(mix(bg, col, smoothstep(0., edge, det)), bg, smoothstep(1. - edge, 1., det));\n}","name":"Image","description":"","type":"image"}]}