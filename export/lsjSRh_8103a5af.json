{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"mat2 mm2(in float a){float c = abs( cos(a) ), s = sin(a);return mat2(c,-s,s,c);}\n\nconst float pi = 3.14159265;\nconst float halfpi = pi * 0.5;\n\nfloat saturate( float a )\n{\n\treturn clamp( a, 0.0, 1.0 );\n}\n\n//\n// Fractional Brownian Motion code by IQ.\n\nfloat noise( float x, float y )\n{\n\treturn sin(1.5*x)*sin(1.5*y);\n}\n\nconst mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\nfloat fbm4( float x, float y )\n{\n    vec2 p = vec2( x, y );\n    float f = 0.0;\n    f += 0.5000*noise( p.x, p.y ); p = m*p*2.02;\n    f += 0.2500*noise( p.x, p.y ); p = m*p*2.03;\n    f += 0.1250*noise( p.x, p.y ); p = m*p*2.01;\n    f += 0.0625*noise( p.x, p.y );\n    return f/0.9375;\n}\n\n//\n\nconst float linesmooth = 0.0333;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat aspect = iResolution.x/iResolution.y;\n    \n    vec2 mainuv = ( fragCoord.xy / iResolution.xy );\n\n    float finalval = 0.0;\n    \n    //\n\n    float scale = 2.5;\n    vec2 uv = mainuv * scale - scale * 0.5;\n    uv.x *= aspect;\n        \n    float mainval = 1.0;\n  \tfloat inverseLength = saturate( length( uv ) );\n        \n    float core = inverseLength * 25.0;\n    float coreident = ceil( core );\n\n    vec2 rotatedUVs = uv * mm2( halfpi + fbm4( coreident * 0.5, iTime * 0.07 ) * pi * pi );\n    rotatedUVs          *= mm2( halfpi - fbm4( coreident * 2.0, iTime * 0.1  ) * pi * pi );\n    float arcpos = ( pi + atan( rotatedUVs.y, rotatedUVs.x ) ) / halfpi;\n    arcpos /= pi;\n    arcpos = smoothstep( 0.2, 0.2025 - coreident * 0.0001, fract( arcpos ) * fract( -arcpos ) );\n\n    mainval *= fbm4( coreident, iTime * 0.3 ) * arcpos;\n        \n    float coresmooth = fract( core ) * fract( -core );\n  \tfloat corewidth  = fwidth( coresmooth );\n   \tconst float edgethreshold = 0.1;\n    mainval *= smoothstep( edgethreshold - corewidth, edgethreshold + corewidth, coresmooth );\n    finalval += mainval;\n    \n    //\n    \n    finalval = max( finalval, 0.0 ) + 0.0025;\n    finalval = min( finalval, 1.0 );\n\n\tfragColor = vec4( vec3( pow( finalval, 1.0 / 2.2 ) ), 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsjSRh","date":"1409091673","viewed":664,"name":"Concentric (Brownian)","username":"Orihaus","description":"Circles.","likes":21,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}