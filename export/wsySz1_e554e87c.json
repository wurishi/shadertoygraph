{"ver":"0.1","info":{"id":"wsySz1","date":"1573402316","viewed":1597,"name":"LineTV","username":"xjorma","description":"An effect I did a long time ago on touch designer. Unfortunately some optimisations doesn't translate well from compute shader to shader toy. ","likes":30,"published":3,"flags":32,"usePreview":0,"tags":["2d","retro","line","tv","databending"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by David Gallardo - xjorma/2019\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\nconst float LineRatio \t\t= 0.18;\nconst float Hardness\t\t= 0.5;\nconst float Width\t\t\t= 2.5;\nconst float Mode\t\t\t= 0.;\nconst float Speed\t\t\t= -0.01;\n\nconst int \tnbSample \t\t= 15; // Odd number only\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2\tuv = fragCoord / iResolution.xy;\n\n    float\ttex = texture(iChannel0, uv).g;\n    \t\n\tfloat width = Mode < .5 ? Width : 1. + tex;\n\n\tvec2 p[nbSample];\n\t\n\tfor(int i = 0 ; i < nbSample ; ++i)\n\t{\n\t\tfloat v = texture(iChannel0, uv.xy + vec2(float(i - (nbSample / 2 - 1)) / iResolution.x, 0.)).r;\n\t\tv += fract(iTime * Speed);\n\t\tp[i] = vec2(floor(v * LineRatio * iResolution.x),fract(v * LineRatio * iResolution.x)); \n\t}\n\n\tfloat c = 0.;\n\n\tfor(int i = 0 ; i < nbSample - 1 ; ++i)\n\t{\n\t\tif( p[i+1].x - p[i].x > 0.5 )\n\t\t{\n\t\t\tfloat v = float(i - (nbSample / 2 - 1)) + (1. - p[i].y) / ((1. - p[i].y) + p[i + 1].y);\n\t\t\tc += max(0.,1.-abs(v/width));\n\t\t}\n\t}\n\t\n\tvec3 color = mix(vec3(0),vec3(tex),pow(c,Hardness));\n\tfragColor = vec4(color,1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Created by David Gallardo - xjorma/2019\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float sum = 0.;\n\n    for( float i = 0. ; i < fragCoord.x ; i++)\n\t{\n\t\tsum += texture(iChannel0, vec2(i, fragCoord.y) / iResolution.xy).g / iResolution.x;\n\t}\n    \n    float lum = texture(iChannel0, fragCoord / iResolution.xy).g;\n    \n    fragColor = vec4(sum, lum, 0, 1);\n}","name":"Buffer A","description":"","type":"buffer"}]}