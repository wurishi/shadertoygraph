{"ver":"0.1","info":{"id":"lXyXzD","date":"1719887961","viewed":47,"name":"3d cube sdf","username":"ProfessorPixels","description":"cube","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"2D square sdf\" by ProfessorPixels. https://shadertoy.com/view/4XKGWG\n// 2024-07-02 02:38:54\n\n// Fork of \"better template\" by ProfessorPixels. https://shadertoy.com/view/l3yGRV\n// 2024-06-12 01:05:53\nvec3 ns(vec3 p, float a, float m)\n{\n    vec3 s= sign(p);\n    return pow(normalize(p),vec3(2.))*s;\n}\nfloat s(vec3 p,float a,float m)\n{\n    p=abs(p);\n    a-=m+m;\n    float d = 0.;\n    if (min(min(p.x,p.y),p.z)<a) d = max(max(p.x,p.y),p.z)-a;\n    else d= length(p-a);\n    if (min(p.x,p.z)>a && p.y<a) d=length(p.xz-a);\n    if (min(p.x,p.y)>a && p.z<a) d=length(p.xy-a);\n    if (min(p.z,p.y)>a && p.x<a) d=length(p.zy-a);\n    d-=m+m;\n    return d;\n}\n#define S s(p,12.,0.)\nvoid mainImage(out vec4 O,vec2 F )\n{\n    vec3 p=vec3(0,0,-100.5),t=normalize(vec3(F-iResolution.xy*.5,1000));\n    for (float d; d<100.;d+=S)\n    {\n        p+=t*S;\n        if (S<.001)\n        {\n            break;\n        }\n    }\n    \n    if (S<.001) O=.5+.5*vec4(dot(sin(iTime+vec3(0,0,1.5708)),ns(p,12.,0.)));\n    else O=vec4(0);\n}","name":"Image","description":"","type":"image"}]}