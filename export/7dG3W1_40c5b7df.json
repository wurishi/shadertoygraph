{"ver":"0.1","info":{"id":"7dG3W1","date":"1631457294","viewed":30,"name":"Discs","username":"Dave_Green","description":"Some colourful discs.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy - 0.5 * iResolution.xy;// Get coord system to -1 -> 1\n    uv = 2.0 * uv.xy / iResolution.y;\n\n    vec3 circ1Col = vec3(0.28, 0.67, 0.97);\n    vec3 circ2Col = vec3(0.68, 0.37, 0.47);\n    vec3 circ3Col = vec3(0.58, 0.77, 0.17);\n    vec3 circ4Col = vec3(0.94, 0.75, 0.85);\n    vec3 finalPixCol = vec3(0.0);\n    float alpha = 0.0;\n    float circ1Rad = 0.78;\n    float circ2Rad = 0.29;\n    float circ3Rad = 0.55;\n    float circ4Rad = 0.39;\n\n    \n    // Using the formula of a circle\n    if((uv.x * uv.x + uv.y * uv.y) < circ1Rad * circ1Rad)\n    {\n        finalPixCol = circ1Col;\n    }\n    \n    // Using shadertoy shorthand\n    if(length(uv) < circ2Rad)\n    {\n        finalPixCol = circ2Col;\n    }\n    \n    // Using shadertoy shorthand and placing circle off centre\n    vec2 centre = vec2(1.2, 0.3);\n    vec2 dist = uv - centre;\n    \n    if(length(dist) < circ3Rad)\n    {\n        finalPixCol = circ3Col;\n    }\n    \n    vec2 newCentre = vec2(-0.7, -0.1);\n    \n    // Using both formula and shorthand\n    if(((uv.x - newCentre.x) * (uv.x - newCentre.x)) +\n    ((uv.y - newCentre.y) * (uv.y - newCentre.y)) < circ4Rad * circ4Rad)\n    {\n        finalPixCol = circ4Col;\n    }\n\n\n    // Output to screen\n    fragColor = vec4(finalPixCol, alpha);\n}","name":"Image","description":"","type":"image"}]}