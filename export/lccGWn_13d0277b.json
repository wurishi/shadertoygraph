{"ver":"0.1","info":{"id":"lccGWn","date":"1711552162","viewed":54,"name":"striped psychedelia 028589375893","username":"HaleyHalcyon","description":"raaeaeea","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["eaaerar"],"hasliked":0,"parentid":"4fd3zM","parentname":"voidwalls-bounce"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nint xorshift32(int x) {\n    x ^= x << 13;\n    x ^= x >> 17;\n    x ^= x << 5;\n    return x;\n}\n\nfloat packToFloat(int x) {\n    return intBitsToFloat(\n        0x3F800000 | (\n            0x007FFFFF & x\n        )\n    ) - 1.0;\n}\n\nfloat prng(int x) {\n    return packToFloat(xorshift32(x));\n}\n\nconst float TURN = acos(-1.) * 2.;\nfloat zag(float x, float border) {\n    float w = fwidth(x) * 0.75;\n    return step(\n        border,\n        smoothstep(\n            0.5 - w, 0.5 + w,\n            1. - abs(1. - 2. * fract(x))\n        )\n    );\n}\n\n#define HEX(x) (vec3(uvec3(255) & (uvec3(x) >> uvec3(16, 8, 0))) / 255.)\nvec3 colormap(float hue) {\n    const vec3[] cols = vec3[](\n    HEX(0xffffff),\n    HEX(0x00cbf8),\n    HEX(0xf96b07),\n    HEX(0xffef00),\n    HEX(0x07e92d),\n    HEX(0xfb20d2),\n    HEX(0x010a31),\n    HEX(0x540abd)\n    );\n    \n    return mix(\n        cols[int(hue) & 7],\n        cols[int(hue + 1.) & 7],\n        fract(hue)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime / 16.);\n    vec2 uv = (2. * fragCoord - iResolution.xy) / length(iResolution);\n\n    float r = length(uv);\n\n    const float HSPEED = 8.;\n    float h = dot(\n        uv,\n        vec2(sin(t * TURN + 0.4 * r), cos(t * TURN + 0.4 * r))\n    );\n    float fh = round(\n        2.5 * (\n            pow(abs(h), 0.6) * (1. - 2. * step(0., h))\n        )\n    + HSPEED * t);\n    \n    float stripes = zag(\n        8.5 * r / (\n            0.005 + // avoid div0\n            fh - HSPEED * t\n        ) + 12. * t,\n        prng(\n            floatBitsToInt(\n                exp(uv.x)\n            ) + \n            floatBitsToInt(\n                tan(uv.y)\n            ) + iFrame\n        )\n    );\n    \n    vec3 col = colormap(\n        //floor(packToFloat((iFrame + xorshift32(iFrame))) * 97.)\n        + 3. * fh\n        + 1. * stripes\n    );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}