{"ver":"0.1","info":{"id":"XtccRX","date":"1533337389","viewed":547,"name":"Cheap Ellipsoid SDF","username":"Klems","description":"Not a very good approximation, but does not suffer from understepping. Based on [url]https://iquilezles.org/articles/distance/distance.htm[/url].","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdEllipsoid( in vec3 p, in vec3 r ) {\n    // iq formula\n    //return (length(p/r)-1.0) * min(min(r.x,r.y),r.z);\n    // mine\n    return (length(p/r)-1.0) / length(normalize(p)/r);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord-iResolution.xy*0.5;\n    uv /= iResolution.y;\n\t\n    float d = sdEllipsoid( vec3(uv*4.0, 0), vec3(2, 1, 1));\n    \n    fragColor = vec4(0.5-cos(d*40.0)*0.5);\n    if (d < 0.0)\n        fragColor.g = 0.0;\n    \n}","name":"Image","description":"","type":"image"}]}