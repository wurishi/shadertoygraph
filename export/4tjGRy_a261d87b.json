{"ver":"0.1","info":{"id":"4tjGRy","date":"1429984753","viewed":186,"name":"Jeanne-Kamikaze's Perlin","username":"jeannekamikaze","description":"Perlin fBm","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float idx1 (float x)\n{\n    return floor(sin(x*128353.989558) * 4758.5412653);\n}\n\nfloat idx (vec2 p)\n{\n    return idx1(p.x + idx1(p.y));\n}\n\nvec2 grad (float i)\n{\n    float x = cos(i);\n    float y = sin(i);\n    return normalize(vec2(x,y));\n}\n\nfloat perlin (vec2 p)\n{\n    vec2 p0 = floor(p);\n    vec2 p1 = p0 + vec2(1.0, 0.0);\n    vec2 p2 = p0 + vec2(0.0, 1.0);\n    vec2 p3 = p0 + vec2(1.0, 1.0);\n\n    vec2 g0 = grad(idx(p0));\n    vec2 g1 = grad(idx(p1));\n    vec2 g2 = grad(idx(p2));\n    vec2 g3 = grad(idx(p3));\n\n    float s = dot(g0, p-p0);\n    float t = dot(g1, p-p1);\n    float u = dot(g2, p-p2);\n    float v = dot(g3, p-p3);\n\n    float sx = smoothstep(0.0, 1.0, p.x - p0.x);\n    float sy = smoothstep(0.0, 1.0, p.y - p0.y);\n    float a = mix(s, t, sx);\n    float b = mix(u, v, sx);\n    float c = mix(a, b, sy);\n\n    return c;\n}\n\nfloat terrain (in vec2 p)\n{\n    float p0 = perlin(p);\n    float x = 2.0;\n    for (int i = 0; i < 8; ++i)\n    {\n        p0 += perlin(p*x)/x;\n        x  *= 2.0;\n    }\n    return (p0*1.97)*0.5 + 0.5;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float c = terrain(uv * vec2(2.0));\n    fragColor = vec4(c,c,c,1);\n}","name":"","description":"","type":"image"}]}