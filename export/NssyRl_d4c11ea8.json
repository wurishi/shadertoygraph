{"ver":"0.1","info":{"id":"NssyRl","date":"1642528044","viewed":190,"name":"Balanced colour blending","username":"aczkasow","description":"Top = average blending\nBottom = square corrected blending","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 color1 = vec3(0.9, 0.1, 0.1);\n    vec3 color2 = vec3(0.1, 0.1, 0.9);\n    float n1 = 1.0 - uv.x;\n    float n2 = uv.x;\n\n    vec3 classicInterpolation = n1 * color1 + n2 * color2;\n    vec3 correctedInterpolation = sqrt(n1 * color1 * color1 + n2 * color2 * color2);\n    \n\n    vec3 col = (uv.y<0.5?0.0:1.0) * classicInterpolation  + \n               (uv.y<0.5?1.0:0.0) * correctedInterpolation;\n\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}