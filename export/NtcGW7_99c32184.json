{"ver":"0.1","info":{"id":"NtcGW7","date":"1636180185","viewed":171,"name":"Maze Micro Tile","username":"xZAKHAMx","description":"my daily micro tile shader. #004","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["maze"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float square(in float valx, in float valy, in float eps1, in float eps2)\n{\n    vec2 comp = vec2(0.0);\n    if (valx < eps1 && valx > -eps1) comp.x = 1.0;\n    if (valy < eps2 && valy > -eps2) comp.y = 1.0;\n\n    return comp.x*comp.y;\n}\n\nfloat noise(in vec2 uv, in float seed)\n{\n    float gr = 1.618;\n    return fract(tan(distance(uv*gr, uv)*seed)*uv.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = vec2(-1.0 +2.0*uv);\n    \n    // pram\n    float Tile = 30.0;\n    float lScale = 3.0;\n    float bias = 0.5 ;\n    \n    float rotate1 = 0.78;\n    float rotate2 = -rotate1;\n    p = fract(p*Tile)-0.5;\n    vec2 p1  = p*0.5;\n    vec2 p2  = p*0.5;\n    p1 *= mat2 (cos(rotate1), -sin(rotate1),\n                sin(rotate1), cos(rotate1));\n    p2 *= mat2 (cos(rotate2), -sin(rotate2),\n                sin(rotate2), cos(rotate2));\n    \n    vec2 res = vec2 ((iResolution.x/iResolution.y)+0.02, 1.00);\n    \n    float seed = ceil(2.0*iTime+1.0);\n    float scale = Tile;\n    \n    \n    vec2 newUV = ceil(vec2 (uv.x, uv.y)*scale);\n    float pix = float(noise(newUV, seed));\n    \n    float sq1 = square(p1.x, p1.y, lScale*0.01, 1.0);\n    float sq2 = square(p2.x, p2.y, lScale*0.01, 1.0);\n    \n    \n    vec3 col = vec3(0.0);\n    if (pix > bias) col = vec3(1.0);\n    \n    col = mix(vec3(sq1), vec3(sq2), col.x);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}