{"ver":"0.1","info":{"id":"dtlBWj","date":"1693477347","viewed":81,"name":"Fork Basic arclightning","username":"pkclsoft","description":"A simple study on noise following corresponding TBOS chapter\nNo performance optimizations are made, since this is for learning purposes only\n\nA modified version as I needed a nice plasma channel and your shader proved to be an excellent starting point","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lightning","arclightning"],"hasliked":0,"parentid":"7dVcWz","parentname":"Basic arclightning (noise)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(float u)\n{\n    return fract(sin(u)*999999.9999);\n}\n\nfloat noise(float u, float size)\n{\n    float zoom = u * size;\n    float index = floor(zoom);\n    float progress = fract(zoom);\n    progress = smoothstep(0.0,1.0, progress);\n    float value = mix(random(index), random(index + 1.0), progress);\n    return value;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float join = 0.19;\n    \n    // Apply noise to V coordinate\n    float yOffset =1.0;\n    yOffset =(noise(uv.x*2.471, 5.0) * 2.0 - 1.0) * 0.01;\n    float afterJoin = (noise(uv.x-iTime*0.928, 5.0) * 2.0 - 1.0) * 0.025;\n    \n    if ((uv.x>join) && (uv.x<(1.0-join))) {\n      yOffset+=afterJoin;\n    } else if (uv.x > (1.0-join)) {\n      yOffset+=(1.0-uv.x)/join * afterJoin;\n    } else {\n      yOffset+=uv.x/join * afterJoin;\n    }\n    \n    uv.y+=yOffset;\n    \n    // Mirror brigtness along Y axis and normalize\n    float value= -abs(-uv.y+0.5)*1.0+1.0;\n    \n    // Colorize\n    vec3 col =vec3(pow(value, 9.0)) + vec3(pow(value, 7.5), pow(value, 7.5), pow(value, 7.5))*vec3(0.0,uv.x*1.0,(1.0-uv.x)*1.0);\n    \n\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}