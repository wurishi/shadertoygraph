{"ver":"0.1","info":{"id":"lc3czl","date":"1731076916","viewed":28,"name":"Path Implementation Pt I","username":"jimmcnulty41","description":"Having some math fun implementing curves\nNext we'll bezier it up.\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","path"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FLT_MAX 3.402823466e+38\n\nconst int size = 4;\nconst int samples_per_segment = 45; // above 45 we start to miss our frame budget, fps drops (on my machine at least...)\nconst int total_samples = samples_per_segment*(size-1);\n\nvec2[total_samples] resample(in vec2[size] blah) {\n    float stepsize = 1. / float(samples_per_segment);\n    vec2[total_samples] points;\n\n    for (int segment = 0; segment < size - 1; ++segment) {\n        for (int i = 0; i < samples_per_segment; ++i) {\n            float p = float(i)*stepsize;\n            points[segment*samples_per_segment+i] = p*blah[segment] + (1.-p)*blah[segment +1];\n        }\n    }\n    return points;\n}\n\n\nfloat path(\n    in vec2[total_samples] points,\n    in vec2 uv\n) \n{\n    int min_idx = 0;\n    float min_dist = FLT_MAX;\n    for (int i = 0; i < total_samples; ++i) {\n        float current_dist = distance(points[i], uv);\n        if (current_dist < min_dist) {\n            min_dist = current_dist;\n            min_idx = i;\n        }\n    }\n    return distance(points[min_idx], uv);\n}\n\nvec2[size] control_points =  \n        vec2[size](\n            vec2(120,24),\n            vec2(240, 360),\n            vec2(360,24),\n            vec2(480,240)\n        );\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // path impl(ish)\n    vec2[total_samples] all_points = resample(control_points);\n\n    vec2 uv = fragCoord.xy / iResolution.xy; // note that distance is skewed if we use uv coords\n    float pdf = path(all_points, fragCoord);\n    \n    vec3 col = pdf < float(10) ? vec3(1.,1.,1.): vec3(0., 0., 0.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}