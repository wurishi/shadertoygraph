{"ver":"0.1","info":{"id":"4l3GDN","date":"1469196220","viewed":376,"name":"your brain on drugs","username":"stduhpf","description":".","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float speed = .05;\nconst float icount = 300.;\nconst float size = .2;\n\nfloat length1(vec2 uv)//manatthan geometry\n{\n    return abs(uv.x)+abs(uv.y);\n}\n\nfloat length2(vec2 uv)//chessboard geometry\n{\n    return max(abs(uv.x),abs(uv.y));\n}\n\nfloat length3(vec2 uv)//not a length function but looks good\n{\n    return min(abs(uv.x),abs(uv.y));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = vec2(min(iResolution.x,iResolution.y),max(iResolution.x,iResolution.y));\n\n\tvec2 uv = fragCoord.xy /res.x;\n    uv-=.5;\n    if(res.x==iResolution.x)\n        uv.y-=.5*res.y/res.x-.5;\n    else\n        uv.x-=.5*res.y/res.x-.5;\n    float t = iTime*speed;\n    for( float i =0.;i<2.*icount;i++)\n    {\n        if (i>= floor(icount*length(mod(uv,size)-size/2.)))break;//you can replace length by one of the other length function \n        uv*=mat2(cos(t),sin(t),-sin(t),cos(t));//rotation\n         //uv*=mat2(cos(t),sin(t),sin(t),-cos(t));//rotation+symetry(you should increase the value of speed)\n  }\n\n     float c=0.;\n    if(uv.x*uv.y>0.)\n        c=1.0;\n\tfragColor = vec4(mod(iDate.w+1.-(2.*abs(uv)),1.5),c,1.);\n}","name":"Image","description":"","type":"image"}]}