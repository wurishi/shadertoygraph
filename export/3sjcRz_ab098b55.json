{"ver":"0.1","info":{"id":"3sjcRz","date":"1585984773","viewed":73,"name":"mandelbrot-de","username":"sniffle","description":"attempt to implement distance estimation algorithm","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","de"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float zoom = 2.9;\nvec2 center = vec2(-0.0, 0.0);\nfloat PI = 3.14159265359;\nint max_i = 100;\nfloat POWER = 2.5;\nfloat escape = 2.0;\n\nvec2 DE(vec2 pos)\n{\n    vec2 z = pos;\n    vec2 dz;\n    float r = .0;\n    float arg_z = .0;\n    float dr = 1.0;\n    float arg_dz = .0;\n    int i = 0;\n    \n    for(i = 0; i < max_i; i++)\n    {\n        r = length(z);\n        if(r > escape)\n            break;\n        arg_z = atan(z.y, z.x);\n        \n        dr = POWER*pow(r, POWER - 1.0)*dr;\n        arg_dz += arg_z;\n        dz = dr*vec2(cos(arg_dz), sin(arg_dz));\n        dz.x += 1.0;\n        \n        r = pow(r, POWER);\n        arg_z *= POWER;\n        z = r*vec2(cos(arg_z), sin(arg_z));\n        z+= pos;\n    }\n    return vec2(.5*r*log(r)/dr, i);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    POWER = 0.1*iTime + 1.0;\n\n    vec2 worldCoord = zoom*(fragCoord-0.5*iResolution.xy)/iResolution.y + center;\n    \n    vec2 fractal = DE(worldCoord);\n    \n    float r = fractal.x;\n    r *= 5000.0;\n\n\n    fragColor = vec4(r,r,r,1.0);\n}","name":"Image","description":"","type":"image"}]}