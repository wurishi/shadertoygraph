{"ver":"0.1","info":{"id":"4ldyR7","date":"1532040350","viewed":162,"name":"squircle silly throwaway test","username":"mds2","description":"trying to find alternate fast soft min and soft max approaches, just an experiment","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["squircle","piet","hein"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float squircle_max(in float x, in float y, float off) {\n    float x2 = (x + off) * (x + off);\n    float x4 = x2 * x2;\n    float y2 = (y + off) * (y + off);\n    float y4 = y2 * y2;\n    return sqrt(sqrt(x4 + y4)) - off;\n}\n\nfloat squircle_min(in float x, in float y) {\n    return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n    float d1 = length(uv - vec2(-0.45 - 0.45 * sin(iTime), 0.0));\n    float d2 = length(uv - vec2(0.25, 0.0));\n\n    float squircle_norm_out =\n        squircle_max(max(0.0, 1.0 - d1), max(0.0, 1.0 - d2), 0.0);\n    \n    float dist_out = squircle_norm_out - 0.5;\n    float pix_per_unit = 0.5 * iResolution.y;\n    \n    float outsideness = clamp(dist_out * pix_per_unit, 0.0, 1.0);\n    \n    float c1_inside = clamp((d1 - 0.5) * pix_per_unit, 0.0, 1.0);\n    float c2_inside = clamp((d2 - 0.5) * pix_per_unit, 0.0, 1.0);\n\n    // Output to screen\n    fragColor = vec4(1.0 - c1_inside, 1.0 - c2_inside, outsideness,1.0);\n}","name":"Image","description":"","type":"image"}]}