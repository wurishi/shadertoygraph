{"ver":"0.1","info":{"id":"DscBRr","date":"1696774980","viewed":55,"name":"rabbit hole","username":"rabbit123123","description":"not completly mine. it was raws but I did the speed thing","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["spiral","warning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265358979323846;\n\n#define speed (iTime * speed_multiplier)\n#define speed_multiplier (pow(pow(2.0, 1.0/20.0), iTime))\n#define value (0.25 + 0.25 * cos(PI * speed * 0.125))\n\nvec2 rotate(vec2 k, float t)\n{\n    return vec2(cos(t) * k.x - sin(t) * k.y, sin(t) * k.x + cos(t) * k.y);\n}\n\nfloat scene1(vec3 p)\n{\n    float dot_p = 0.125;\n    float dot_w = dot_p * 0.625;\n    float dot = length(mod(p.xyz, dot_p) - dot_p * 0.5) - dot_w;\n    float ball_p = 1.0;\n    float ball_w = ball_p * (0.6625 - 0.075 * (1.0 - value));\n    float ball = length(mod(p.xyz, ball_p) - ball_p * 0.5) - ball_w;\n    float hole_w = ball_p * (0.625 + 0.0125 * value);\n    float hole = length(mod(p.xyz, ball_p) - ball_p * 0.5) - hole_w;\n    float hole2_p = 0.125;\n    float hole2_w = hole2_p * 0.375;\n    float hole2 = length(mod(p.xyz, hole2_p) - hole2_p * 0.5) - hole2_w;\n    return max(max(dot, -mix(hole, hole2, 0.5)), ball);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 position = (fragCoord.xy / iResolution.xy);\n    vec2 p = -1.0 + 2.0 * position;\n    vec3 vp = normalize(vec3(p * vec2(1.77, 1.0), 0.75)); // screen ratio (x,y) fov (z)\n    //vp.yz = rotate(vp.yz, PI * 0.125 * sin(speed * 0.5));  // rotation x\n    //vp.zx = rotate(vp.zx, PI * 0.125 * sin(speed * 0.5));  // rotation y\n    vp.xy = rotate(vp.xy, speed * 0.25);                   // rotation z\n    float ground_x = 0.0;\n    float ground_y = 0.0;\n    float ground_z = speed * (0.125 + 0.375);\n    vec3 ray = vec3(ground_x, ground_y, ground_z);\n    float t = 0.0;\n    const int ray_n = 96;\n    for (int i = 0; i < ray_n; i++)\n    {\n        float k = scene1(ray + vp * t);\n        if (abs(k) < 0.002) break;\n        t += k * 0.7;\n    }\n    vec3 hit = ray + vp * t;\n    vec2 h = vec2(-0.1, 0.1); // light\n    vec3 n = normalize(vec3(scene1(hit + h.xyy), scene1(hit + h.yxx), scene1(hit + h.yyx)));\n    float c = (n.x + n.y + n.z) * 0.08 + t * 0.16;\n    float color = -0.25 * cos(PI * position.x * 2.0) + 0.25 * sin(PI * position.y);\n    fragColor = vec4(vec3((c * t + t) * 0.5 * value + color, c * 1.5 - t * 0.025, c * 1.25 - t * 0.0125 * value - color) * c, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}