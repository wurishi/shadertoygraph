{"ver":"0.1","info":{"id":"mlBBDy","date":"1694757102","viewed":60,"name":"Water from gradient noise","username":"granitoale","description":"Simple water obtained by rotation and gradient noise","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","water","gradientnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = rotate2d(uv,gnoise(uv)+iTime/25.);\n    uv += gradientNoise(uv*10.)+iTime/20.;\n\n    // Output to screen\n    fragColor = vec4(vec3(smoothstep(0.4,0.5,gradientNoise(uv*vec2(10.)))),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/*--------------------------------------------------------\nGradient Noise by Inigo Quilez\n--------------------------------------------------------*/\nvec2 grad(ivec2 z){\n    // 2D to 1D  (feel free to replace by some other)\n    int n = z.x+z.y*11111;\n\n    // Hugo Elias hash (feel free to replace by another one)\n    n = (n<<13)^n;\n    n = (n*(n*n*15731+789221)+1376312589)>>16;\n  \n    // Perlin style vectors\n    n &= 7;\n    vec2 gr = vec2(n&1,n>>1)*2.0-1.0;\n    return ( n>=6 ) ? vec2(0.0,gr.x) : \n           ( n>=4 ) ? vec2(gr.x,0.0) : gr;\n                         \n}\nfloat gnoise(vec2 xy){\n    ivec2 i = ivec2(floor(xy));\n    vec2 f = fract(xy);\n    vec2 u = f*f*f*(f*(f*6.0-15.0)+10.0);\n    return mix( mix( dot( grad( i+ivec2(0,0) ), f-vec2(0.0,0.0) ), \n                     dot( grad( i+ivec2(1,0) ), f-vec2(1.0,0.0) ), u.x),\n                mix( dot( grad( i+ivec2(0,1) ), f-vec2(0.0,1.0) ), \n                     dot( grad( i+ivec2(1,1) ), f-vec2(1.0,1.0) ), u.x), u.y);\n}\nfloat gradientNoise(vec2 uv){\n    float f = gnoise(uv);\n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n    f  = 0.5000*gnoise( uv ); uv = m*uv;\n    f += 0.2500*gnoise( uv ); uv = m*uv;\n    f += 0.1250*gnoise( uv ); uv = m*uv;\n    f += 0.0625*gnoise( uv ); uv = m*uv;\n    f = .5+.5*f;\n    return f;\n}\n/*--------------------------------------------------------\nRotate 2D space\nParams:\n    -st:    coordinates\n    -a:     angle in radians\nReturn:\n    st\n--------------------------------------------------------*/\nvec2 rotate2d(vec2 st,float a){\n    //move space to vec2(0.0);\n    st -= vec2(0.5);\n    st = mat2(cos(a),-sin(a),sin(a),cos(a))*st;\n    //go back to normal space with center in vec2(0.5)\n    st += vec2(0.5);\n    return st;\n}","name":"Common","description":"","type":"common"}]}