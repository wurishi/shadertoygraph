{"ver":"0.1","info":{"id":"43y3RV","date":"1717877177","viewed":42,"name":"santorini","username":"libensvivit","description":"this is santorini","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["santorini"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// gShaderToy.SetTexture(0, {mSrc:'https://i.imgur.com/5DssP05.png', mType:'texture', mID:1, mSampler:{ filter: 'mipmap', wrap: 'repeat', vflip:'true', srgb:'false', internal:'byte' }}); \n\n#define PI 3.14159265\n#define TWO_PI 6.28318530718\n#define linewidth 0.01\n\nmat4 rotationMatrix(float angle) {\n    //return mat4(1.0);\n    return mat4(\n        0.5, 0.0, 0.0, 0.65,\n        0.0, 2.0, 0.0, -0.5,\n        0.0, 0.0, 1.0, 0.0,\n        0.0, 0.0, 0.0, 1.0\n    );\n}\n\nfloat getRipple(float angle, float time, float frequency, float amplitude, float phase) {\n    return amplitude * sin(frequency * angle + phase * time);\n}\n\nfloat getWave(float distRad, float dist){\n    float inner = smoothstep(distRad - linewidth, distRad, dist);\n    float outer = smoothstep(distRad, distRad + linewidth, dist);\n    return inner - outer;\n}\n\nfloat smoothArc(float angle, float startAngle, float stopAngle, float smoothWidth) {\n    float startSmooth = smoothstep(startAngle - smoothWidth, startAngle, angle);\n    float stopSmooth = 1.0 - smoothstep(stopAngle, stopAngle + smoothWidth, angle);\n    \n    float arcMask = startSmooth * stopSmooth;\n    if (startAngle > stopAngle) {\n        arcMask = startSmooth + stopSmooth - startSmooth * stopSmooth;\n    }\n    return arcMask;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec2 center = vec2(0.65, 0.35);\n    vec2 aspectRatio = iResolution.xy / min(iResolution.x, iResolution.y);\n    vec2 adjustedUV = (uv - center) * aspectRatio;\n\n    vec4 pos4D = vec4(adjustedUV, 0.0, 1.0); // Project to 4D\n    pos4D = rotationMatrix(iTime) * pos4D;   // Apply the transformation\n    vec2 rotatedUV = pos4D.xy / pos4D.w;     // Project back to 2D\n    float dist = length(rotatedUV);          // Distance from the center\n\n    // Calculate the angle of the current fragment in the range [0, TWO_PI]\n    float angle = atan(rotatedUV.y, rotatedUV.x);\n    if (angle < 0.0) angle += TWO_PI;\n    \n    // Time varying circle radius\n    float r1 = 0.45 + 0.04 * sin(iTime * 1.2 - PI / 2.0);\n    float r2 = 0.35 + 0.03 * sin(iTime * 1.2 - PI / 3.0);\n    float r3 = 0.25 + 0.02 * sin(iTime * 1.2 - PI / 4.0);\n    float r4 = 0.18 + 0.02 * sin(iTime * 1.2 - PI / 3.0);\n    float r5 = 0.12 + 0.02 * sin(iTime * 1.2 - PI / 2.0);\n\n    // Apply wave distortions based on the angle\n    float dis1 = getRipple(angle, iTime, 5.0, 0.01, 2.0);\n    float dr1 = r1 + getRipple(angle, iTime, 12.0, 0.01, 1.0) + dis1 * 1.0;\n    float dr2 = r2 + getRipple(angle, iTime, 8.0, 0.01, 0.9) + dis1 * 0.8;\n    float dr3 = r3 + getRipple(angle, iTime, 6.0, 0.01, 0.8) + dis1 * 0.6;\n    float dr4 = r4 + getRipple(angle, iTime, 3.0, 0.01, 0.7) + dis1 * 0.5;\n    float dr5 = r5 + getRipple(angle, iTime, 3.0, 0.01, 0.6) + dis1 * 0.4;\n    \n    float w1 = getWave(dr1, dist);\n    float w2 = getWave(dr2, dist);\n    float w3 = getWave(dr3, dist);\n    float w4 = getWave(dr4, dist);\n    float w5 = getWave(dr5, dist);\n\n    // Apply the arc mask\n    float smoothWidth = radians(5.0); // Adjust this value for smoother or sharper transitions\n    w1 *= smoothArc(angle, radians(115.0), radians(360.0), smoothWidth);\n    w2 *= smoothArc(angle, radians(108.0), radians(360.0), smoothWidth);\n    w3 *= smoothArc(angle, radians(100.0), radians(360.0), smoothWidth);\n    w4 *= smoothArc(angle, radians(0.0), radians(360.0), smoothWidth);\n\n    vec4 ch = texture(iChannel0, uv);\n\n    // Blend the waves\n    ch = mix(ch, vec4(1.0), w1 * 0.91);\n    ch = mix(ch, vec4(1.0), w2 * 0.71);\n    ch = mix(ch, vec4(1.0), w3 * 0.51);\n    ch = mix(ch, vec4(1.0), w4 * 0.41);\n    ch = mix(ch, vec4(1.0), w5 * 0.35);\n\n    fragColor = ch;\n}","name":"Image","description":"","type":"image"}]}