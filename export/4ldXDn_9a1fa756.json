{"ver":"0.1","info":{"id":"4ldXDn","date":"1479018960","viewed":156,"name":"bp Shapes","username":"blackpolygon","description":"Drawing polygons","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["distancefield","shapingfunctions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: blackpolygon\n// Title:  Shapes\n\n// Based on the code by @patriciogv from \n// https://thebookofshaders.com/07/\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat shape(in vec2 st, int N){\n    \n  // Remap the space to -1. to 1.\n  st = st *2.-1.;\n  \n  // Angle and radius from the current pixel\n  float a = atan(st.x,st.y)+PI;\n  float r = TWO_PI/float(N);\n  \n  // Shaping function that modulate the distance\n  return cos(floor(.5+a/r)*r-a)*length(st);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/min(iResolution.x,iResolution.y);\n    st.x -= 0.35;\n    \n    // rotate the space\n    st -= vec2(0.5);\n    st = rotate2d( sin(iTime/3.)*PI) * st;\n    st += vec2(0.5);\n\n    vec3 bgColor = vec3(st.x,0.568,0.651);\n    \n    int sides = 2 + int(abs(sin(iTime/10.)*6.));\n\tfloat d = shape(st, sides);\n    \n    float w = 1.-smoothstep(.4,0.401,d);\n    \n    // Add the shape on the foreground\n    vec3 color = vec3(w);\n    vec3 color2 = vec3(1.0-smoothstep(-0.024,0.634,d));\n    \n    bgColor -= color;\n    bgColor += color2;\n\t \n\tfragColor = vec4(bgColor,1);\n}","name":"Image","description":"","type":"image"}]}