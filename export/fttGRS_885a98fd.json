{"ver":"0.1","info":{"id":"fttGRS","date":"1636272643","viewed":210,"name":"入门之路-11","username":"jialouluo","description":"粒子旋转","likes":6,"published":3,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float EllipseY =0.2;\nfloat EllipseX =0.5;\nfloat EllipseSpeed =0.06;\nfloat EllipseCount =100.;\nfloat EllipseXAngle = 20.;\nvec2 getEllipse(float index){//椭圆旋转,通过极坐标来实现 x = a cos(index); y = bsin(index);\n    return vec2(EllipseX * cos(index * iTime * EllipseSpeed),EllipseY * sin(index * iTime * EllipseSpeed));\n}\nvec2 rotate(vec2 st,float angle){//旋转矩阵\n    return mat2(cos(angle),sin(angle),\n                -sin(angle),cos(angle)) * st;\n}\nfloat circle(vec2 st,float radius){\n    return 1.0 - smoothstep(0.0,radius,length(st));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=0.5;\n    vec3 color =vec3(0.);\n    //旋转运动的粒子\n    for(float i=0.0;i<EllipseCount;i++){\n        uv = rotate(uv,EllipseXAngle);// 让椭圆每次旋转\n        vec2 st = getEllipse(i);\n        float col = circle(uv - st,0.01 * i * 0.03);//乘i可以实现每个粒子大小不同\n        color +=col;\n    }\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}