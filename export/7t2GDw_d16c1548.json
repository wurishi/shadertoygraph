{"ver":"0.1","info":{"id":"7t2GDw","date":"1624447146","viewed":57,"name":"- Dynamic Length Distortion -","username":"Mihaha","description":"...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles","distortion","vignette"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\n> by MihasGames, 23.06.2021 <\n(https://mihas-games.itch.io/)\n\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(1);\n    float t = iTime;\n    \n    // Pixel Normalizations //\n    vec2 uv101 = fragCoord.xy/iResolution.xy,\n         uv = (uv101 - 0.5) * vec2(iResolution.x / iResolution.y, 1);\n    \n    // Circles //  \n    vec2 pos = uv*70.;\n    float s = cos(t/1.7)*2.-0.65; pos /= length(uv/s)+s; // Distortion\n    pos += vec2(sin(t*1.234), cos(t))*13.; // Circles position\n    \n    if (sin(length(pos)) < 0.) col = vec3(pos*70., 1.)*0.9;   \n    else col = vec3((pos+70.)/70., 1.)*1.5;\n\n    // Vignette //\n    uv = uv101 * (1. - uv101);    \n    col *= pow(uv.x*uv.y * 15., 0.1);\n        \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}