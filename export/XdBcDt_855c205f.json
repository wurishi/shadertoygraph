{"ver":"0.1","info":{"id":"XdBcDt","date":"1494268204","viewed":113,"name":"Circle March","username":"liamegan","description":"Nothing new or groundbreaking, just a marching of circles. \n\nThanks for Book of Shaders - https://thebookofshaders.com/09/","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265359\n\nvec4 circle(in vec2 position, in vec2 uv, float size, vec3 color) {\n    \n    float dist = distance(position, uv); // The distance between the pixel and the circle position\n    \n    vec4 circ = vec4(0.0); // Creating a \"full\" color for the circle\n    circ.r = circ.g = circ.b = smoothstep(size, size + 0.01, dist); // Setting up the inverted circle rgb color\n    \n//   \tcirc.rgb -= vec3(1.0) - color; // Remove the color difference from the white\n    circ.rgb += color;\n\n    return circ;\n}\n\n// Courtesy Robert Penner\n// t: current time, b: begInnIng value, c: change In value, d: duration\nfloat easeOutElastic(in float t, in float b, in float c, in float d) {\n    float s=1.70158;\n    float p=0.0;\n    float a=c;\n    if (t==0.0) {\n    \treturn b;\n    }\n    if ((t/=d)==1.0) {\n        return b+c;\n    }\n    if (p == .0) {\n        p=d*.3;\n    }\n    if (a < abs(c)) {\n        a=c;\n        s=p/4.0;\n    } else {\n        s = p/(2.0*PI) * asin(c/a);\n    }\n    return a*pow(2.0,-10.0*t) * sin( (t*d-s)*(2.0*PI)/p ) + c + b;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float speed = 0.4;\n    float time = iTime * speed;\n\tvec2 uv = (fragCoord.xy - .5 * iResolution.xy) / iResolution.y;\n    float repeat = 4.0;\n    uv *= repeat;\n    float radius = 0.4;\n    \n    if( mod(floor(time), 2.0) == 0.0 ) {\n        float change = (-1.0 + mod(ceil(uv.y), 2.0) * 2.0);\n        uv.x += easeOutElastic(fract(time), .0, change, 1.0);\n    } else {\n        float change = (-1.0 + mod(ceil(uv.x), 2.0) * 2.0);\n        uv.y += easeOutElastic(fract(time), .0, change, 1.0);\n    }\n    \n    vec2 position = vec2(.5);\n\n    \n    fragColor = circle(position, fract(uv), radius, vec3(0.3, 0.3, 0.3));\n}","name":"Image","description":"","type":"image"}]}