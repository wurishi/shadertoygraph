{"ver":"0.1","info":{"id":"MX2fDD","date":"1729500210","viewed":38,"name":"Spinning border","username":"Iunave","description":"The idea for this shader was to have lines spinning around the edge of the screen. Could not find a solution that made straight lines, this is the best i could do.\nCriticism and improvement welcome!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["animated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI float(3.1415926535897932384626433)\n#define PI_2 (PI * 2.)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ((fragCoord / iResolution.xy) * 2.) - 1.;\n    float edge = step(0.95, max(abs(uv.x), abs(uv.y)));\n    float uvAngle = atan(uv.y, uv.x);\n    uvAngle = uvAngle < 0. ? PI_2 + uvAngle : uvAngle;\n    float visible = 0.;\n    for(float offset = 0.; offset < PI_2; offset += PI / 2.) \n    {\n        float targetAngle = -iTime / 1.5 + offset;\n        float diffAngle = targetAngle - uvAngle;\n        diffAngle = abs(mod(diffAngle + PI, PI_2) - PI);\n        visible = max(visible, diffAngle < 0.2 ? 1. : 0.);   \n    }\n    fragColor = vec4(1.) * edge * visible;\n}","name":"Image","description":"","type":"image"}]}