{"ver":"0.1","info":{"id":"3sjGRm","date":"1548456238","viewed":237,"name":"Saturation-Based Recoloring","username":"lanelet","description":"Recolor the unsaturated areas of an image more strongly than the saturated areas.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["saturation","recolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Time varying pixel color\n    vec3 rainbow = 0.75 + 0.25*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    // Output to screen\n    vec4 c = texture(iChannel0,uv);\n    \n    float min_color = min(c.r,min(c.g,c.b));\n    float max_color = max(c.r,max(c.g,c.b));\n    float replacement_luminance = min(1.0,rainbow.r*0.2126+rainbow.g*0.7152+rainbow.b*0.0722);\n    float luminance = c.r*0.2126+c.g*0.7152+c.b*0.0722;\n    \n    float recolor = max(0.0,luminance-(max_color-min_color)/(max_color+min_color));\n    \n    float t = iTime / 10.0;\n    \n    if( int(t) % 4 == 0 ) {\n      fragColor = vec4(recolor,recolor,recolor,1.0);\n    } else if( int(t) % 4 == 1 ) {\n      fragColor = vec4(c.rgb,1.0);\n    } else {\n      vec3 replacement = rainbow;\n        \n      fragColor = vec4(mix(c.rgb*replacement_luminance,c.rgb*replacement,recolor),1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}