{"ver":"0.1","info":{"id":"MtyGRy","date":"1475150306","viewed":150,"name":"procedural 'sun'","username":"davepermen","description":"procedural sun","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["procedural","sun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distanceOf(vec3 point, vec2 other) {\n    return 1.0 / (point.z * length(point.xy - other));\n}\n\nvec3 hdr(vec3 color, vec2 pos) {\n    color = pow(color + texture(iChannel0, pos).rgb * 0.4 - 0.2, vec3(5, 2.1, 0.7));\n    return 1.0 - exp(-color);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - iResolution.xy / 2.0) / min(iResolution.x, iResolution.y);\n    vec2 point = vec2(iMouse.xy - iResolution.xy / 2.0) / min(iResolution.x, iResolution.y);\n    float distance = distanceOf(vec3(point, 10.0 * (cos(iTime * 10.0) + 10.0)), uv);\n    vec3 color = vec3(distance);\n    \n    point = vec2(-iMouse.xy + iResolution.xy / 2.0) / min(iResolution.x, iResolution.y);\n    distance = distanceOf(vec3(point, 10.0 * (cos(iTime * 10.0) + 10.0)), uv);\n    color += vec3(distance);\n    \n    point = (vec2(sin(iTime), -cos(iTime)) * 0.1);\n    distance = distanceOf(vec3(point, 10.0 * (cos(iTime * 10.0) + 10.0)), uv);\n    color += vec3(distance);\n    \n    point = (vec2(-sin(iTime), cos(iTime)) * 0.4);\n    distance = distanceOf(vec3(point, 10.0 * (cos(iTime * 10.0) + 10.0)), uv);\n    color += vec3(distance);\n    \n    point = (vec2(cos(iTime), sin(iTime)) * 0.3);\n    distance = distanceOf(vec3(point, 10.0 * (cos(iTime * 10.0) + 10.0)), uv);\n    color += vec3(distance);\n    \n    point = (vec2(-cos(iTime), -sin(iTime)) * 0.2);\n    distance = distanceOf(vec3(point, 10.0 * (cos(iTime * 10.0) + 10.0)), uv);\n    color += vec3(distance);\n    \n\tfragColor = vec4(hdr(color, uv * 10.0 + iTime * vec2(14.0, 35.0)), 1.0);\n}","name":"Image","description":"","type":"image"}]}