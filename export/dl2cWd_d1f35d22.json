{"ver":"0.1","info":{"id":"dl2cWd","date":"1692526412","viewed":54,"name":"NMA Demo 3","username":"rokas","description":"Demo","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["nma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdSegment(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.x / iResolution.y;\n    uv.x *= ar;\n    uv.x -= ar / 2. - 0.5;\n    if (uv.x < 0. || uv.x > 1.) {\n        fragColor = vec4(0);\n        return;\n    }\n   \n    //uv *= 2.;\n    \n    float lo = 0.25;\n    //uv = fract(uv);\n    \n    float fd = 10000.;\n    \n    vec2 puv = uv;\n    int NUM_IT = 3;\n    for (int i = 0; i < NUM_IT; ++i) {\n        uv *= 2.;\n        uv = fract(uv);\n\n        if (puv.y < 0.5) {\n            uv = uv.yx;\n            if (puv.x > 0.5)\n                uv = 1. - uv;\n        }\n        \n        float p = pow(2., float(NUM_IT - i));\n        \n        float jd0 = sdSegment(puv, vec2(lo / p, (p * 2. - 1.) * lo / p), vec2(lo / p, (p * 2. + 1.) * lo / p));\n        float jd1 = sdSegment(puv, vec2((p * 2. - 1.) * lo / p, (p * 2. + 1.) * lo / p), vec2((p * 2. + 1.) * lo / p, (p * 2. + 1.) * lo / p));\n        float jd2 = sdSegment(puv, vec2((p * 4. - 1.) * lo / p, (p * 2. + 1.) * lo / p), vec2((p * 4. - 1.) * lo / p, (p * 2. - 1.) * lo / p));\n    \n        float jd = min(jd0, min(jd1, jd2));\n        jd *= p;\n        \n        fd = min(fd, jd);\n        puv = uv;\n    }\n    float d0 = sdSegment(uv, vec2(lo, lo), vec2(lo, 3. * lo));\n    float d1 = sdSegment(uv, vec2(lo, 3. * lo), vec2(3. * lo, 3. * lo));\n    float d2 = sdSegment(uv, vec2(3. * lo, 3. * lo), vec2(3. * lo, lo));\n    float d = min(d0, min(d1, d2));\n\n    fd = min(fd, d);\n    fd -= 0.1;\n\n    vec3 lcol = vec3(.1, .8, 1.);  \n    //float t = mod(iTime, LOOP_T) / LOOP_T;\n    \n    //vec3 col = magic(res) * (1. - mod(t - res, 1.));\n    //vec3 col = (0.5 + 0.5*cos(iTime+uv0.xyx+vec3(0,2,4))) * (1. - mod(t - res, 1.));;\n    vec3 col = mix(lcol, vec3(0.), max(0., pow(smoothstep(fd, -0.1, 0.0), 0.2)));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}