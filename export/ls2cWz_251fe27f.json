{"ver":"0.1","info":{"id":"ls2cWz","date":"1491737871","viewed":167,"name":"Snek 2","username":"Kos","description":"this time it turns","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","pixel","snake"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI (355./113.)\n\nivec2 resolution = 3*ivec2(16, 9); // 48x27\nfloat speed = 8.;\nfloat magic = 0.1;\n\nvec4 colorOff = vec4(0, .15, 0, 0);\nvec4 colorOn = vec4(.6, 1., 0., 0);\n\nfloat zztop(float x, float a, float b) {\n    float d = b-a;\n    return x - mix(0., d, clamp(x/d - a/d, 0., 1.));\n}\n\nint zztop(int x, int a, int b) {\n    return int(magic+zztop(float(x), float(a), float(b)));\n}\n\nfloat aatop(float x, float a, float b) {\n    float d = b-a;\n    return mix(0., d, clamp(x/d - a/d, 0., 1.));\n}\n\nint aatop(int x, int a, int b) {\n    return int(magic+aatop(float(x), float(a), float(b)));\n}\n\n\nfloat colorAt(int frame, ivec2 gridCoord) {\n    //int x = frame % resolution.x;\n    int t = int(mod(float(frame), float(20+28+15)));\n    \n    int x = zztop(t, 20, 35);\n    int y = aatop(t, 20, 35)+5;\n    \n    ivec2 head = ivec2(x, y);\n    return (gridCoord == head) ? 1. : 0.;\n}\n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    ivec2 gridCoord = ivec2(uv * vec2(resolution));\n    \n    int frame = int(iTime*speed);\n    float frameFraction = (iTime*speed - float(frame));\n    \n    fragColor = vec4(0);\n    fragColor += colorOn * colorAt(frame, gridCoord); // 1\n    fragColor += colorOn * colorAt(frame-1, gridCoord)*(1.-frameFraction*0.25); // 1..0.75\n    fragColor += colorOn * colorAt(frame-2, gridCoord)*(1.-frameFraction*0.25 - 0.25); //  0.75 .. 0.5\n    fragColor += colorOn * colorAt(frame-3, gridCoord)*(1.-frameFraction*0.25 - 0.5); // 0.5 .. 0.25\n    fragColor += colorOn * colorAt(frame-4, gridCoord)*(1.-frameFraction*0.25 - 0.75); // 0.25 .. 0\n    fragColor += colorOff;\n    \n    vec2 gridOffset = uv - (vec2(gridCoord) / vec2(resolution));\n    gridOffset *= vec2(resolution);\n    \n    float pixelShape = sin(gridOffset.x*M_PI) * sin(gridOffset.y*M_PI);\n    pixelShape = pow(pixelShape, 0.1);    \n    \n    fragColor *= pixelShape;\n    \n    //fragColor = vec4(aatop(uv.x, 0.2, 0.5));\n}\n","name":"Image","description":"","type":"image"}]}