{"ver":"0.1","info":{"id":"4ldGWB","date":"1471350948","viewed":486,"name":"Regular Hexagon Tiling","username":"_pwd_","description":"Tiling with regular hexagon cells","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["grid","imageprocessing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nconst float sqrt3 = 1.72;\nconst float halfSqrt3 = 0.86;\nfloat size = 0.05;\nvec2 base = vec2(0.5,0.5);\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n\tvec2 grid = vec2(size,sqrt3*size);\n    \n\tvec2 pnt1 = floor((uv-base)/grid+0.5);\n\tpnt1 = pnt1 * grid + base - uv;\n\n\tfloat dst1 = pnt1.x*pnt1.x + pnt1.y*pnt1.y;\n\n\tvec2 base2 = base + size * vec2(0.5,halfSqrt3);\n\n    vec2 pnt2 = floor((uv-base2)/grid+0.5);\n    pnt2 = pnt2*grid +base2 -uv;\n\n\tfloat dst2 = pnt2.x*pnt2.x + pnt2.y*pnt2.y;\n\n\tpnt1= (dst1<dst2) ? pnt1 : pnt2;\n    fragColor = vec4(texture( iChannel0, pnt1+uv ));  \n}\n","name":"Image","description":"","type":"image"}]}