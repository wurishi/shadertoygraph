{"ver":"0.1","info":{"id":"3s3Gzf","date":"1568937834","viewed":140,"name":"Spiral Waves (EPILEPSY WARNING)","username":"evanlorim","description":"Spiralling Waves that will make you dizzy.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["waves","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n#define M_2PI M_PI * 2.\n#define M_HPI M_PI / 2.\n#define M_E exp(1.)\n\nfloat amplitude = 0.0;\nfloat pshift = 0.0;\nfloat frequency = 8.0;\nfloat vshift = 0.0;\nfloat ratio = 0.5;\n\n\nfloat tri_amplitude = 1.;\nfloat tri_pshift = 0.0;\nfloat tri_frequency = 2.0;\nfloat tri_vshift = 0.0;\n\n\nfloat patternh = .36;\nfloat bandh = .08;\nfloat bandh_m_amplitude = .06;\nfloat bandh_m_frequency = .5;\nfloat amplitude_m_amplitude = .25;\nfloat amplitude_m_frequency = .125;\nfloat ratio_m_amplitude = .125;\nfloat ratio_m_frequency = .25;\nfloat pshift_m_speed = 1.;\nfloat vshift_m_speed = -.25;\n\nvec3 cB = vec3(0.0, 0.0, 0.0); //black\nvec3 cM = vec3(1.0, 0.0, 1.0); //magenta\nvec3 cC = vec3(0.0, 1.0, 1.0); //cyan\nvec3 cW = vec3(1.0, 1.0, 1.0); //white\n\nfloat tempo = .5;\n\nfloat pulse(float x) {\n\tfloat b = frequency * 1.;\n\tfloat c = pshift * 1.;\n\treturn amplitude * floor(fract((x * b) + c) - ratio) + vshift;\n\n}\n\nfloat triangle(float x) {\n\tfloat b = tri_frequency * 1.;\n\tfloat c = tri_pshift * 1.;\n\treturn tri_amplitude * abs(2.0 * fract((x * b) + c) - 1.0) + tri_vshift;\n}\n\nvec3 colorB() {\n\treturn cB;\n}\n\n\nvec3 colorW () {\n    \n    float fr = triangle(iTime*36.);\n    \n    if (fr <= .5) { return cM; }\n    else if (fr <= 1.) { return cC; } \n}\n\nvec3 colorBW(float bw) {\n\tfloat black = (bw - 1.) * -1.;\n    float white = bw;\n    vec3 blackColor = colorB().xyz * black;\n    vec3 whiteColor = colorW().xyz * white;\n    return blackColor + whiteColor;\n}\n\nfloat eval(vec2 rt) {\n\tfloat fx = (rt.x -.5) - pulse(rt.y);\n\tfloat dist = mod((rt.y - fx), patternh);\n\treturn step(dist, bandh);\n}\n\nvoid update() {\n\tbandh+=sin(iTime*bandh_m_frequency)*bandh_m_amplitude;\n    pshift+=iTime * pshift_m_speed;\n    vshift+=iTime * vshift_m_speed;\n    amplitude+=amplitude_m_amplitude*sin(iTime*amplitude_m_frequency);\n    ratio += ratio_m_amplitude*sin(iTime*ratio_m_frequency);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 pos = vec2(0.5) - (fragCoord.xy/iResolution.xy);\n\tvec2 rt = vec2(length(pos)*2.,atan(pos.y,pos.x) / M_2PI); // radius & normalized theta\n    \n\tupdate();\n    \n\tvec3 color = colorBW(eval(rt));\n\t\n\tfragColor = vec4(color,1.);\n}\n","name":"Image","description":"","type":"image"}]}