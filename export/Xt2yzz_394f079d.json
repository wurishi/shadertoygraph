{"ver":"0.1","info":{"id":"Xt2yzz","date":"1507214062","viewed":229,"name":"Probe Falloff","username":"mpalko","description":"Based on the CryENGINE implementation.\nMouse X controls the Z-plane and Y controls the sharpness of attenuation. \nThe probe is assumed to be a box. vNormalizedPosInLightSpace should be from -1 to 1 inside the AABB of the probe.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["asimpleattenuationfuctionforreflectionprobes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define float4 vec4\n#define float3 vec3\n#define float2 vec2\n\n#define saturate(x) clamp(x, 0.0, 1.0)\n\nfloat3 MapCubeToSphere(float3 pos)\n{\n\tfloat3 pos2 = pos.xyz * pos.xyz;\n\treturn pos * sqrt(1.0 - (0.5 * pos2.yzx) - (0.5 * pos2.zxy) + (0.333 * pos2.yzx * pos2.zxy));\n}\n\nfloat ComputeReflectionProbeFalloff(float3 vNormalizedPosInLightSpace, float fAttenuationSharpness)\n{\n    float attenuation = 0.0;\n\tif (abs(vNormalizedPosInLightSpace.x) < 1.0 && abs(vNormalizedPosInLightSpace.y) < 1.0 && abs(vNormalizedPosInLightSpace.z) < 1.0)\n\t{\n        float smoothstepMin = fAttenuationSharpness;\t\t\n\t\tfloat smoothstepMax = 1.0;\n        \n\t\tfloat3 mappedToCube = abs(MapCubeToSphere(vNormalizedPosInLightSpace));\n        attenuation = 1.0 - smoothstep(smoothstepMin, smoothstepMax, dot(mappedToCube, mappedToCube));\n\t}\n    return attenuation;\n}\n\nvoid mainImage(out float4 fragColor, in float2 fragCoord )\n{\n    float fAttenuationSharpness = iMouse.y / iResolution.y;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float3 vNormalizedPosInLightSpace = vec3(uv * 2.0 - 1.0, iMouse.x / iResolution.x);\n    \n    float fProbeAttenuation = ComputeReflectionProbeFalloff(vNormalizedPosInLightSpace, fAttenuationSharpness);\n    \n\tfragColor = vec4(fProbeAttenuation, fProbeAttenuation, fProbeAttenuation, 1.0);\n}","name":"Image","description":"","type":"image"}]}