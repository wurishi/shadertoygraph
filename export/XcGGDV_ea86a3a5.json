{"ver":"0.1","info":{"id":"XcGGDV","date":"1713266791","viewed":119,"name":"simple tiled parabola","username":"wingei","description":"simple tiled parabola","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["tiling","parabola"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n// https://www.desmos.com/calculator/e3ao3jxdac\n// latus rectum must be 2, 4 or 6 (a positive even number)\n// tiles must be a positive int\nfloat parabolaMethod(vec2 inuv, float latus_rectum, float tiles)\n{\n    vec2 uv = inuv;\n    // 2 tiles\n    uv = mod(uv, 1.0/tiles);\n    \n    uv *= tiles;\n    \n    // -1..1 range\n    uv = uv * 2.0 - 1.0;\n    \n    float col = 1.0 - pow(uv.x, latus_rectum);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float siny = sin(uv.y);\n    float col = parabolaMethod(uv, 4.0 + siny , 2.0);\n    \n    //col -= sin(uv.x  * 100.0) * 0.1;\n    \n    // Output to screen\n    fragColor = vec4(col,col, col, 1.0) * vec4(0,0.8,0.5,1);\n}","name":"Image","description":"","type":"image"}]}