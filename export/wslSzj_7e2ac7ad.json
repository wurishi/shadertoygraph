{"ver":"0.1","info":{"id":"wslSzj","date":"1551720753","viewed":158,"name":"Babylonian tiling 144 chars!","username":"saidwho12","description":"Just exercise","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","bw","tiling","2tweets","tiles","short","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 144 chars smoothstep-less - fabrice\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 p = mod(12.*u/iResolution.y,6.)-3.,\n         d = 1. - abs(p),\n         l = min(d,d.y);\n     l.x>.1 ? O\n     : O += abs(++l.x) > .9\n         || abs( d[ p.x*p.y<0. ? 1 : 0] ) < .1\n        ? .4  : .9;}\n\n\n\n/*\n// 150 char smoothstep-less - fabrice\n#define mainImage(O,u)                          \\\n    vec2 p = fract(u+u/iResolution.y)-.5,       \\\n         d = abs(p*3.)-.5,                      \\\n         l = max(d,d.y);                        \\\n     l.x<-.05 ? O                               \\\n     : O += l.x < .05 || l.x > .95              \\\n         || abs( d[ p.x*p.y>0. ? 1 : 0] ) < .05 \\\n        ? .5  : .9\n*/\n\n\n/*\n// 163 chars and resolution independent, no AA - iq\n#define mainImage(O,u)                       \\\n    vec2 p = fract(2.*u/iResolution.y)-.5,   \\\n         d = abs(p*3.) - .5;                 \\\n    float l = max(d.x,d.y);                  \\\n    O += (min( abs( l<.5 ? l : l-1. ),       \\\n               abs( d[ p.x*p.y<0. ? 1 : 0])  \\\n              )<.04) ? .4 : l<.0 ? 0.:.9;\n*/\n\n/*\n// 197 chars - fabrice\n#define mainImage(O,u)                            \\\n    vec2 R = iResolution.xy,                      \\\n         p = fract((u+u-R)/R.y) -.5,              \\\n         d = abs(p*3.) - .5;                      \\\n    float l = max(d.x,d.y);                       \\\n    O += mix( l<.0 ? 0.:.9, .4,                   \\\n              smoothstep(15./R.y,  0.,            \\\n                min( abs( l<.5 ? l : l-1. ),      \\\n                     abs( d[ p.x*p.y<0. ? 1 : 0]) \\\n                    ) -.02) )\n*/\n\n/*\n// 163 chars without smoothstep - fabrice\n#define mainImage(O,u)                          \\\n    vec2 R = iResolution.xy,                    \\\n         p = fract((u+u-R)/R.y) - .5,           \\\n         d = abs(p*3.)-.5;                      \\\n    float l = max(d.x,d.y);                     \\\n    O += l<-.05 ? 0. :                          \\\n         l< .05 || l>.95                        \\\n         || abs( d[ p.x*p.y>0. ? 1 : 0] ) < .05 \\\n        ? .5  : .9\n\n*/\n\n/* // fabrice - 205 chars\n#define mainImage(O,u)                    \\\n    vec2 R = iResolution.xy,              \\\n         p = fract((u+u-R)/R.y) *3. -1.5, \\\n         d = abs(p);                      \\\n    float l = max(d.x,d.y);               \\\n    O += mix( l<.5 ? 0.:.9, .4,           \\\n              smoothstep(15./R.y,  0.,    \\\n                min( abs(l<1.?l-.5:l-1.5),\\\n                     abs(( p.x*p.y>0. ? d.y : d.x ) -.5) \\\n                    ) -.02) )\n*/\n\n/** // saidwho12 - 264 chars\nvoid mainImage( out vec4 O, in vec2 u ) {\n    vec2 R = iResolution.xy,\n        p = fract((u+u-R)/R.y), B = vec2(1.,.5)/3., d;\n   \n    O = O-O+.4;\n    \n    for(int i = -1; ++i<5;\n        d = i>0 ? abs(p-B)-B : abs(p-.5)-B.y,\n        O = mix(O,vec4( i>0 ? .9 : 0.),\n                smoothstep(0., 6./R.y, -min(max(d.x,d.y),0.)-.005)),\n       \tp = (p+p-1.).yx * vec2(-.5,.5)+.5\n       );\n}\n*/","name":"Image","description":"","type":"image"}]}