{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// random vec2 from vec2 input \nvec2 N22(vec2 p){\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34 , 345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0* fragCoord- iResolution.xy) / iResolution.y;\n    \n    float m = 0.0;\n    float t= iTime* 2.0;  // speed factor\n    \n    float minDist = 100.0;\n    float cellIndex = 0.0;\n    \n    vec3 col = vec3(0.0);\n    \n    // Zoom ( increase for more cells) \n    uv *= 5.0;\n    \n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    vec2 cid1 = vec2(0.0);  \n    vec2 cid2 = vec2(0.0);\n\n    \n    // ===================================\n    //            Voronoi effect \n    for (float y=-1.0; y<=1.0; y++){\n        for (float x=-1.0 ; x<=1.0; x++){\n            vec2 offset = vec2(x,y);\n            \n            vec2 n = N22(id + offset);\n            vec2 p = offset + sin(n*t)*0.5;\n            \n            float d = length(gv - p)* 1.0;\n            \n            if (d<minDist){\n                minDist = d;\n                cid1 = id + offset;\n                cid2 = vec2(0.0 , 0.85);    // coloring \n            }\n        }    \n    }\n    col = vec3(minDist);\n    // =====================================\n    \n    \n    col.rb = cid2;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"M3tyWN","date":"1735135923","viewed":50,"name":"Voronoi Caustics","username":"ivkoneli","description":"Voronoi water caustics ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""}}