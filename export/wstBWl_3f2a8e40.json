{"ver":"0.1","info":{"id":"wstBWl","date":"1606311061","viewed":101,"name":"Mandelbrot inner","username":"rafaelcastrocouto","description":"Created by inigo quilez - iq/2013\nLicense Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\nhttp://iquilezles.org/articles/mset_smooth/mset_smooth.htm","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://www.shadertoy.com/view/4df3Rn\n\n#define AA 2\n\nfloat mandelbrot( in vec2 c ) {\n    const float B = 32.0;\n    float l = 0.0;\n    vec2 z  = vec2(0.0);\n    for( int i=0; i<128; i++ ) {\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n        if( dot(z,z)>(B*B) ) break;\n        l += 1.0;\n    }\n    if(l>127.0) return z.x*z.y*16000.0;\n    float sl = l - log2(log2(dot(z,z))) + 4.0;\n    return sl;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec3 col = vec3(0.0);\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ ) {\n        vec2 p = (-iResolution.xy + 2.0*(fragCoord.xy+vec2(float(m),float(n))/float(AA)))/iResolution.y;\n        float w = float(AA*m+n);\n        float time = iTime + 0.5*(1.0/24.0)*w/float(AA*AA);\n        float zoom = 0.8 + 0.2*cos(0.1*time);\n        float coa = cos( 0.15*(1.0-zoom)*time );\n        float sia = sin( 0.15*(1.0-zoom)*time );\n        zoom = pow(zoom,20.0);\n        vec2 xy = vec2( p.x*coa-p.y*sia, p.x*sia+p.y*coa );\n        vec2 c = vec2(-1.37,.02) + xy*zoom;\n        float l = mandelbrot(c);\n        col += 0.5 + 0.5*cos( 3.0 + l*0.1 + vec3(0.0,0.6,1.0));\n    }\n    col /= float(AA*AA);\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}