{"ver":"0.1","info":{"id":"mtSXRm","date":"1675828803","viewed":140,"name":"texture loader","username":"tianluo97","description":"texture loader","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["textureloader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const vec2 target_resolution = vec2(940, 84);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    // Same texCoord as in Minecraft\n    vec2 texCoord = fragCoord/iResolution.xy;\n    // Own uv variable\n    vec2 uv = texCoord;\n    \n    // Center origin around screen center (range -0.5, 0.5)\n    uv -= .5;\n    \n    // Squish image in excessive dimension\n    float r = (iResolution.x/iResolution.y) / (target_resolution.x/target_resolution.y);\n    if (r >= 1.) uv.x *= r;\n    else uv.y /= r;\n    \n    // Recenter origin to start at 0 (range 0.0, 1.0)\n\tuv += .5;\n    uv.y -= 0.5/r - 0.5;   \n    \n    // get pixel information from uv location\n    vec4 texColor = texture(iChannel0, uv);\n    \n    fragColor = vec4(texColor);\n    // Output to screen\n    // Black bars at the sides\n    if (uv.x < 0. || uv.x > 1. || uv.y < 0. || uv.y > 1.) fragColor = vec4(0);    \n    \n}","name":"Image","description":"","type":"image"}]}