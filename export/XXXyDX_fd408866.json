{"ver":"0.1","info":{"id":"XXXyDX","date":"1727142288","viewed":3,"name":"CataractEffect","username":"reddy11104","description":"A shader for how a cataract might effect vision.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float distortion = 0.15;\n    float ghostAmount = 0.25;\n\n    float yellowEffect = .9;\n    float blueReduction = 0.9;\n    float desaturation = 0.7;\n    \n    float brightness = 0.3;\n    \n    float whiteSplotchSpread = 0.1; \n    float whiteSplotchPower = .55;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Distort UVS\n    \n    vec2 distortedUV = uv - vec2(.5, .5);\n    \n    float d = length(distortedUV);\n    \n    float z = sqrt(distortion + d * d * - distortion);\n\tfloat r = atan(d, z) / 3.1415926535;\n\tfloat phi = atan(distortedUV.y, distortedUV.x);\n\tdistortedUV = vec2(r * cos(phi) + 0.5, r * sin(phi) + 0.5);\n   \n        \n    \n    // Sample texture\n    vec4 ogcol = texture(iChannel0, uv);\n    vec4 col = texture(iChannel0, uv);\n    \n    vec4 ghost = texture(iChannel0, distortedUV);\n    \n    col.r = (1.0 - ghostAmount) * col.r + ghostAmount * ghost.r;\n    col.g = (1.0 - ghostAmount) * col.g + ghostAmount * ghost.g;\n    col.b = (1.0 - ghostAmount) * col.b + ghostAmount * ghost.b;\n    \n    \n    \n    //Make it yellower\n    col.r = clamp(col.r - (1.0 - yellowEffect), 0.0, 1.0);\n    col.g = clamp(col.g - (1.0 - yellowEffect), 0.0, 1.0);\n    col.b = clamp(col.b - blueReduction, 0.0, 1.0);\n    \n    //Desaturate\n    vec4 gray = col;\n    float avg = (col.r + col.g + col.b) / 3.0;\n    gray.r = avg;\n    gray.g = avg;\n    gray.b = avg;\n    \n    col = col * (1.0 - desaturation) + desaturation * gray;\n    \n    \n    //Brighten image\n    col.r = pow(col.r, (1.0 - brightness));\n    col.g = pow(col.g, (1.0 - brightness));\n    col.b = pow(col.b, (1.0 - brightness));\n    \n    \n    //Add white splotch\n    vec2 diff = uv - vec2(.5, .5);\n    \n    float splotchAmount = 1.0 - smoothstep(length(diff), 0.0, whiteSplotchSpread);\n    \n    col += whiteSplotchPower * vec4(splotchAmount, splotchAmount, splotchAmount, 0.0);\n    \n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}