{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define Pi 3.1415926535897932384626433832795\n#define Distortion 0.5*1.*(sin(iTime-0.5*Pi)+1.)\n\nfloat GetRot(vec2 uv, vec2 a){\n    vec2 b = uv-a;\n    b.x *= iResolution.x/iResolution.y;\n    vec2 j = vec2(0., 1.);\n    return acos(dot(b,j)/length(b))*(abs(mod(b.x, 4.*Pi)-2.*Pi)/(2.*Pi-mod(b.x, 4.*Pi)));\n}\n\nfloat f(float a, float x){\n    return 0.5*(sin(x-0.5*Pi)+1.)*a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 P = vec2(0.5, 0.5);\n    float d = length((uv-P)*vec2(iResolution.x/iResolution.y, 1.));\n    \n    float a = GetRot(uv, P)-(Distortion/d);\n    \n    uv = vec2(sin(a)/(iResolution.x/iResolution.y), cos(a))*d+P;\n    \n    fragColor = texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4fGfzR","date":"1733672849","viewed":48,"name":"Effect Distortion","username":"DimasMakbet","description":"distortion","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["distortion"],"hasliked":0,"parentid":"","parentname":""}}