{"ver":"0.1","info":{"id":"4fccR7","date":"1730376739","viewed":26,"name":"projeto2-compgra","username":"rafael_shader","description":"blobs - Projeto 2\nComputação Gráfica","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 center, float r, float k)\n{\n    return smoothstep(r + k, r, length(uv + center));\n}\n\nfloat random(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy / 2.0) / iResolution.y - 0.5;\n    uv.x += 0.1;\n\n    vec2 tileUv = fract(uv * 4.0) - 0.5;\n\n    vec2 tilePos = floor(uv * 4.0);\n    float randomSeed = random(tilePos);\n    float variation = fract(randomSeed);\n\n    vec3 randomColor = vec3(fract(sin(randomSeed + 1.0) * 43758.5453),\n                            fract(sin(randomSeed + 2.0) * 43758.5453),\n                            fract(sin(randomSeed + 3.0) * 43758.5453));\n\n    float num = 2.0;\n    float circ = 0.0;\n\n    float timeOffset = variation * 2.0 * 3.14159; // random phase shift per tile\n\n    for (float i = 0.0; i < num; i++)\n    {\n        // Offset movement pattern with unique values per tile\n        float movementX = sin(iTime + timeOffset) * 0.2 * i;\n        float movementY = cos(iTime * 0.5 + timeOffset) * 0.1 * i;\n\n        vec2 circleCenter = vec2(movementX, movementY) + variation * 0.1;\n\n        float circleSize = 0.01 + 0.005 * variation;\n        circ += circle(tileUv, circleCenter, circleSize, 0.3 * variation);\n    }\n\n    // Apply the random color and use the circle pattern as alpha\n    fragColor = vec4(randomColor * smoothstep(0.15, 0.25, circ), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}