{"ver":"0.1","info":{"id":"fdVGzD","date":"1631199036","viewed":401,"name":"20210909_おさんぽ会","username":"0b5vr","description":"おさんぽ","likes":29,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define fs(i) (fract(sin((i)*114.514)*1919.810))\n#define lofi(i,j) (floor((i)/(j))*(j))\n\nconst float PI=acos(-1.);\nconst float TAU=PI*2.;\n\nfloat time;\nfloat seed;\n\nfloat random(){\n  seed ++;\n  return fs(seed);\n}\n\nvec3 uniformSphere(){\n  float phi=TAU*random();\n  float theta=acos(random()*2.-1.);\n  return vec3(cos(phi)*sin(theta),sin(phi)*sin(theta),cos(theta));\n}\n\nvec3 uniformHemisphere(vec3 n){\n  vec3 d=uniformSphere();\n  return dot(d,n)<0.0?-d:d;\n}\n\nmat2 r2d(float t){\n  return mat2(cos(t),-sin(t),sin(t),cos(t));\n}\n\nmat3 getOrthBas(vec3 z) {\n  z = normalize(z);\n  vec3 up=abs(z.y)>0.999?vec3(0,0,1):vec3(0,1,0);\n  vec3 x=normalize(cross(up,z));\n  return mat3(x,cross(z,x),z);\n}\n\nvec3 sampleLambert(vec3 n){\n  float phi=TAU*random();\n  float cosTheta=sqrt(random());\n  float sinTheta=sqrt(1.0-cosTheta*cosTheta);\n  return getOrthBas(n)*vec3(cos(phi)*sinTheta,sin(phi)*sinTheta,cosTheta);\n}\n\nvec3 cyclicNoise(vec3 p) {\n  mat3 b=getOrthBas(vec3(1));\n  vec4 sum=vec4(0);\n  float warp=1.0;\n  float amp = 0.5;\n  for(int i=0;i<6;i++){\n    p*=b;\n    p*=2.0;\n    p+=warp*sin(p.yzx);\n    sum+=amp*vec4(cross(sin(p.zyx),cos(p)),1.0);\n    amp*=0.5;\n  }\n  return sum.xyz/sum.w;\n}\n\nvec3 ifs(vec3 p,vec3 r,vec3 s){\n  mat3 b=getOrthBas(r);\n  for(int i=0;i<6;i++){\n    s*=0.47;\n    s*=b;\n    p=abs(p);\n    p.xz=p.x<p.z?p.xz:p.zx;\n    p.yz=p.y<p.z?p.yz:p.zy;\n    p.xy=p.x<p.y?p.xy:p.yx;\n    p=abs(p)-abs(s);\n  }\n  return p;\n}\n\nfloat doEase(float t){\n  return 0.5+0.5*cos(PI*exp(-t*5.));\n}\n\nfloat sdbox(vec3 p,vec3 s){\n  vec3 d=abs(p)-s;\n  return min(0.0,max(d.x,max(d.y,d.z)))+length(max(d,vec3(0)));\n}\n\nvec4 map(vec3 p){\n  vec4 ret=vec4(1E9);\n  \n  vec3 pt=p;\n  vec3 cell=vec3(0.0);\n  cell.x=lofi(pt.x+0.1,0.2);\n  pt.y+=2.0*fs(cell.x+11.1*sign(p.z))*time;\n  cell.y=lofi(pt.y+1.0,2.0);\n  cell.z=0.0;\n  pt-=cell;\n  \n  float height=0.5+0.2*fs(cell.x);\n  float phase=time-0.5*cell.x+0.1*sign(p.z);\n  float ease=doEase(fract(phase));\n  vec3 rot=mix(\n    fs(vec3(4.0,5.0,6.0)+cell+floor(phase))*2.0+1.0,\n    fs(vec3(4.0,5.0,6.0)+cell+floor(phase+1.0))*2.0+1.0,\n    ease\n  );\n  vec3 pt2=ifs(pt,rot,vec3(2.0,1.4,0.9));\n  pt2=mod(pt2-0.1,0.2)-0.1;\n  float d=sdbox(pt2,vec3(0.05));\n  d=max(d,-abs(p.z)+height);\n  d=max(d,abs(pt.x)-0.09);\n  if(d<ret.x){\n    ret=vec4(d,0,0,0);\n  }\n\n  d=sdbox(pt2,vec3(0.004,0.02,0.08));\n  d=max(d,-abs(p.z)-0.01+height);\n  d=max(d,abs(pt.x)-0.1);\n  if(d<ret.x){\n    ret=vec4(d,1,0,0);\n  }\n\n  return ret;\n}\n\nvec3 nMap(vec3 p,vec2 d){\n  return normalize(vec3(\n    map(p+d.yxx).x-map(p-d.yxx).x,\n    map(p+d.xyx).x-map(p-d.xyx).x,\n    map(p+d.xxy).x-map(p-d.xxy).x\n  ));\n}\n\nfloat aomap(vec3 p,vec3 n){\n  float accum=0.0;\n  for(int i=0;i<20;i++){\n    vec3 pt=p;\n    pt+=sampleLambert(n)*0.02*(1.0+float(i));\n    float d=map(pt).x;\n    accum+=smoothstep(0.02,0.0,d)/20.0;\n  }\n  return max(0.0,1.0-2.0*sqrt(accum));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord/iResolution.xy;\n  vec2 p=uv*2.-1.;\n  p.x *= iResolution.x / iResolution.y;\n  p*=r2d(0.1*iTime);\n  \n  seed=fs(texture(iChannel0,p).x);\n  seed+=fract(iTime);\n  \n  time=iTime;\n  time+=0.01*random();\n  \n  vec3 co=vec3(0.1,0.8,0.2);\n  co.xy=r2d(0.1*time)*co.xy;\n  vec3 ct=vec3(0.0,0,0);\n  vec3 cd=normalize(ct-co);\n  \n  vec3 rd=getOrthBas(cd)*normalize(vec3(p,1.0-0.5*length(p)));\n  vec3 ro=co;\n  vec3 fp=ro+rd*1.5;\n  ro+=0.01*uniformSphere();\n  rd=normalize(fp-ro);\n  \n  vec3 colRem=vec3(1.0);\n  vec3 col=vec3(0);\n  \n  for(int iT=0;iT<2;iT++){\n    float rl=0.01;\n    vec3 rp=ro+rd*rl;\n    vec4 isect;\n\n    for(int i=0;i<64;i++){\n      isect=map(rp);\n      rl+=0.8*isect.x;\n      rp=ro+rd*rl;\n      \n      if(abs(isect.x)<0.001){break;}\n    }\n\n    float fog=exp(-0.07*rl);\n    col+=colRem*(1.0-fog)*(2.0+cos(3.0+4.0*exp(-0.5*rl)-vec3(0,2,4)));\n    colRem*=fog;\n\n    if(abs(isect.x)<0.01){\n      vec3 N=nMap(rp,vec2(0,0.001));\n      float ao=aomap(rp,N);\n      \n      if(isect.y<0.5){\n        col+=colRem*vec3(0.5*ao);\n        colRem*=0.2;\n      }else if(isect.y<1.5){\n        col+=colRem*vec3(0.99,0.01,0.2)*ao;\n        colRem*=0.1;\n      }\n      \n      ro=rp;\n      rd=reflect(rd,N);\n    }\n  }\n  \n  col=pow(col,vec3(0.4545));\n  col*=1.0-0.2*length(p);\n  col=vec3(\n    smoothstep(0.2,0.8,col.x),\n    smoothstep(-0.0,1.0,col.y),\n    smoothstep(-0.2,1.2,col.z)\n  );\n\n  fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}