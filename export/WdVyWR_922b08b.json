{"ver":"0.1","info":{"id":"WdVyWR","date":"1602587972","viewed":54,"name":"How avoid unexec brach slow dwn?","username":"GCScholar","description":"Hi, it seems to me that the code in Buf A somehow slows down the whole execution, even if it should be executed only in frame 0. Is it possible to avoid this ? Tnx","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["branch","slowdown"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// It seems to me that the code in Buffera A somehow slows down the whole execution, \n// even if it should be executed only in frame 0. Is it possible to avoid this ? Tnx\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{       \n    \n    float f;\n    if(iFrame == -1)\n    {\n        for(int i=0; i<100;i++) // ADD SOME ZEROS (es <1000000) TO SLOW DOWN THE SHADER, but not too much or it crashes\n        { \n            f = pow(f,f);\n            f += texture(iChannel0, fragCoord/iResolution.xy).w;            \n        }; \n    }\n    else \n    {\n    \t f = 1.0;\n    }\n        \n    fragColor = vec4(f);\n}","name":"Image","description":"","type":"image"}]}