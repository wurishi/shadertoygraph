{"ver":"0.1","info":{"id":"4d3SRf","date":"1460477084","viewed":194,"name":"Barycentric Test","username":"akohdr","description":"Swizzled Barycentric triangle test.\n\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","triangles","barycentric","swizzle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Andrew Wild - akohdr/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nbool baryTest(const in vec4 a, \n              const in vec4 b) \n{\n    vec4 p =(vec4(a.z,b.wxy) - vec4(b.xyz,a.w)) * a.yxyx,\n         q = vec4(a.wz, b.yx) * b,\n         r = vec4(q.zx - q.wy, a.zw * b.wz);\n    vec2 t = (r.xy + p.yw + p.zx)/(r.x + r.y + r.z - r.w);\n    return t.x>0. && t.y>0. &&(t.x + t.y)<1.;\n//    return !(t.x<0.||t.y<0.||(t.x + t.y)>1.);\n}\n\n#define insideTriangle(p,a,b,c) baryTest(vec4(p,a),vec4(b,c))\n\nvec2 triBarycentricXY(const in vec4 a, \n                      const in vec4 b) \n{\n    vec4 p =(vec4(a.z,b.wxy) - vec4(b.xyz,a.w)) * a.yxyx,\n         q = vec4(a.wz, b.yx) * b,\n         r = vec4(q.zx - q.wy, a.zw * b.wz);\n    return (r.xy + p.yw + p.zx)/(r.x + r.y + r.z - r.w);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy,\n         ctr = iResolution.xy/2.,\n         t = vec2(3,5)*iTime+.5;\n\n    vec4 sc = vec4(sin(t), cos(t));\n    \n\tvec2 a = ctr + ctr * sc.xw,\n         b = ctr + ctr * sc.yz,\n         c = ctr + ctr * sc.wx;\n    \n    // we cycle through various mappings of triangle\n    float mt = mod(iTime,9.);\n    \n\tfragColor = insideTriangle(fragCoord,a,b,c) ? \n        // spaciotemporal coloured\n        (mt<3.) ? vec4(uv, sc.x, 1.0) :\n\n        // stencilled underlying texture\n        (mt<6.) ? texture(iChannel0,uv) :\n    \n        // warped/mapped texture\n        texture(iChannel0,triBarycentricXY(vec4(fragCoord,a),vec4(b,c))) :\n    \n        // background\n        normalize(vec4(uv.yxx*sc.xyw,1.0));\n}\n\n\n// Expanded version (for debugging)\nbool baryT(const in vec4 a, \n              const in vec4 b) \n{\n    vec4 o = vec4(a.z-b.x, b.w-b.y, b.x-b.z, b.y-a.w);\n    vec4 p = vec4(o.x*a.y, o.y*a.x, o.z*a.y, o.w*a.x);\n    vec4 q = vec4(a.w*b.x, a.z*b.y, b.y*b.z, b.x*b.w);\n    vec4 r = vec4(q.z-q.w, q.x-q.y, a.z*b.w, a.w*b.z);\n    vec2 s = vec2(r.x+p.y+p.z, r.y+p.w+p.x);\n    vec2 u = vec2(r.x + r.y + r.z - r.w);\n    vec2 t = vec2(s.x / u.x, s.y/u.y);    \n    \n    return t.x>0. && t.y>0. &&(t.x + t.y)<1.;\n//    return !(t.x<0.||t.y<0.||(t.x + t.y)>1.);\n}\n\n","name":"Image","description":"","type":"image"}]}