{"ver":"0.1","info":{"id":"4ffSW7","date":"1705316839","viewed":74,"name":"Fork half spher IAMDEAD 481","username":"IAMDEAD","description":"Distortion of a half sphere lens of Polyethylene terephthalate. (https://en.wikipedia.org/wiki/List_of_refractive_indices)\nComment-in line 42 to place the lens position by drag and drop.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["distortion","lens","halfsphere"],"hasliked":0,"parentid":"4df3zH","parentname":"half sphere lens distortion"},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.141592653589793238462643383279\n\nfloat atan2(float y, float x){\n\tif(x>0.) return atan(y/x);\n\tif(y>=0. && x<0.) return atan(y/x) + pi; \n\tif(y<0. && x<0.) return atan(y/x) - pi; \n\tif(y>0. && x==0.) return pi/2.;\n\tif(y<0. && x==0.) return -pi/2.;\n\tif(y==0. && x==0.) return pi/2.; // undefined usually\n\treturn pi/2.;\n}\n\nvec2 uv_polar(vec2 uv, vec2 center){\n\tvec2 c = uv - center;\n\tfloat rad = length(c);\n\tfloat ang = atan2(c.x,c.y);\n\treturn vec2(ang, rad);\n}\n\nvec2 uv_lens_half_sphere(vec2 uv, vec2 position, float radius, float refractivity){\n\tvec2 polar = uv_polar(uv, position);\n\tfloat cone = clamp(1.-polar.y/radius, 0., 1.);\n\tfloat halfsphere = sqrt(1.-pow(cone-1.,2.));\n\tfloat w = atan2(1.-cone, halfsphere);\n\tfloat refrac_w = w-asin(sin(w)/refractivity);\n\tfloat refrac_d = 1.-cone - sin(refrac_w)*halfsphere/cos(refrac_w);\n\tvec2 refrac_uv = position + vec2(sin(polar.x),cos(polar.x))*refrac_d*radius;\n\treturn mix(uv, refrac_uv, float(length(uv-position)<radius));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// domain map\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\t// aspect-ratio correction\n\tvec2 aspect = vec2(1.,iResolution.y/iResolution.x);\n\tvec2 uv_correct = 0.5 + (uv -0.5)* aspect;\n\tvec2 mouse_correct = 0.5 + ( iMouse.xy / iResolution.xy - 0.5) * aspect;\n\n\tvec2 pos = vec2(0.5);\n\tpos = mouse_correct;\n\t\n\tvec2 uv_lens_distorted = uv_lens_half_sphere(uv_correct, pos, 0.166, 1.575);\n\t\n\tuv_lens_distorted = 0.5 + (uv_lens_distorted - 0.5) / aspect;\n\t\n\tfragColor = texture(iChannel0, uv_lens_distorted);\n\n}","name":"Image","description":"","type":"image"}]}