{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - vec2(0.5,0.5);\n    //Aspect ratio correction\n    uv.x *= iResolution.x/iResolution.y;\n      \n    //Calculate the angle from the center.\n    float angle = atan(uv.y,uv.x);\n    \n    //Calculate the radius from the center.\n    float radius = sqrt(uv.x*uv.x + uv.y * uv.y);\n   \n    //Apply a sin operation to produce rings.\n    float radialIntensity = pow(sin(radius * 32.0) * 0.5 + 0.5, 2.0);\n    \n    //Apply a sin opreation to produce bands\n    float angleIntensity = pow(sin(angle*32.0) * 0.5 + 0.5, 2.0);\n    \n    //Multiply the masks together\n    float intensity = radialIntensity*angleIntensity;\n    \n    //Set the final color\n    fragColor = vec4(intensity, intensity, intensity, 1.0);\n    \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xll3Dj","date":"1425249083","viewed":1430,"name":"SimpleDots","username":"Kyle273","description":"A tutorial shader for iBreakDownShaders.blogspot.com. This shader takes two interesting polar functions, and layers them on top of each other.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","polar","multiplication"],"hasliked":0,"parentid":"","parentname":""}}