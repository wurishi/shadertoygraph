{"ver":"0.1","info":{"id":"mldGz7","date":"1682428941","viewed":148,"name":"BeeHummingAround","username":"ArisTheBear","description":"I made a bee humming around on a honeyrate. Be gentle, first project of any kind really.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\nconst int typeEuclidean = 0;\nconst int typePolarEdge = 1;\nconst int typePolarCenter = 2;\nconst int typeSectionsEdge = 3;\nconst int typeSectionsCenter = 4;\n\n\nfloat remap(vec2 domIn, float t){\n    return (t-domIn.x)/(domIn.y-domIn.x);\n}\nfloat remap(vec2 domIn, vec2 domOut, float t){\n    return domOut.x + remap(domIn,t)*(domOut.y-domOut.x);\n}\nvec3 remap3(vec3 low, vec3 high, vec3 t){\n    vec2 di = vec2(0.,1.);\n    float a = remap(di,vec2(low.x,high.x),t.x);\n    float b = remap(di,vec2(low.y,high.y),t.y);\n    float c = remap(di,vec2(low.z,high.z),t.z);\n    return vec3(a,b,c);\n}\nfloat mpch(float ln, float lag){\n    return sin((lag+iTime)*2. + (-1.*mod(10.*ln,6.))*PI/3.);\n}\nvec3 mpc(vec2 uv, vec4 hex){ //makePrettyCircles or makePrettyColours\n    float lag = hex.z+(.5+hex.z)*(.5+hex.w)*(hex.w+hex.z+sqrt(abs(hex.w))+sqrt(abs(hex.z)));\n    lag += abs(sin(iTime));\n    float zr = remap(vec2(-1.,1.),mpch(length(hex.xy),lag));\n    float zg = remap(vec2(-1.,1.),mpch(2.+length(hex.xy),lag));;\n    float zb = remap(vec2(-1.,1.),mpch(4.+length(hex.xy),lag));;\n    vec3 colLow = vec3(238., 153., 51.)/260.;\n    vec3 colHigh = vec3(255., 200., 51.)/260.;\n    vec3 uitput = remap3(colLow,colHigh,vec3(zr,zg,zb));    \n    return uitput;\n}\nfloat HexDist(vec2 p){\n\n    p = abs(p);\n    float c = dot(p,normalize(vec2(1.,sqrt(3.))));\n    c = max(c,p.x);\n    return c;\n}\nvec4 HexCoords(vec2 uv,int type){\n\n    vec2 r = vec2(1.,sqrt(3.));\n    vec2 h = r*.5;\n    vec2 a = mod(uv,r)-h;\n    vec2 b = mod(uv-h,r)-h;\n    vec2 gv = length(a)<length(b)?a:b;\n    \n    vec2 id = uv-gv;\n    \n    float x = 0.;\n    float y = 0.;\n    vec4 uit = vec4(0);\n    \n    switch(type){\n        case typeEuclidean:\n            uit = vec4(gv.x,gv.y,id.x,id.y);\n            break;\n\n        case typePolarEdge:\n            x = atan(gv.x,gv.y);\n            y = .5-HexDist(gv);\n            uit =  vec4(x,y,id.x,id.y);\n            break;\n        \n        case typePolarCenter:\n            x = atan(gv.x,gv.y);\n            y = HexDist(gv);\n            uit =  vec4(x,y,id.x,id.y);\n            break;\n        \n        case typeSectionsEdge:\n            x = floor(atan(gv.x,gv.y)*6.);\n            y = .5-HexDist(gv);\n            uit =  vec4(x,y,id.x,id.y);\n            break;\n        \n        case typeSectionsCenter:\n            x = floor(atan(gv.x,gv.y)*6.);\n            y = HexDist(gv);\n            uit = vec4(x,y,id.x,id.y);\n            break;\n            \n    }\n    \n    return uit;\n}\nvec3 drawBeeFrame(vec2 uv){\n    vec3 col = vec3(0);\n    \n    uv *=  15.;\n    \n    vec4 hexesE = HexCoords(uv, typeEuclidean);\n    vec4 hexesP = HexCoords(uv, typePolarEdge);\n    \n    float ew = .03; //edge width\n    float hw = (1.-ew)*.48; // distance from center to edge\n    \n    col = vec3(1.-step(ew,hexesP.y));\n    col += length(hexesE.xy)<hw?.85*mpc(uv,hexesE):vec3(0.);\n    col.b = col==vec3(0.)?.8:col.b;\n    col = hexesP.z>12.?vec3(.5,.3,.18):col;\n    col = hexesP.z<-12.?vec3(.5,.3,.18):col;\n    col = hexesP.w>6.5?vec3(.5,.3,.18):col;\n    col = hexesP.w<-6.5?vec3(.5,.3,.18):col;\n    return col;\n}\n\nfloat band(float start, float end, float blur, float coord){\n    return clamp(smoothstep(start-blur,start,coord)*smoothstep(end+blur,end,coord),0.,1.);\n}\nvec2 reloc(vec2 inp, float angle){\n    float t = angle+atan(inp.y,inp.x);\n    return vec2(cos(t)*length(inp),length(inp)*sin(t));\n}\nvec4 drawBee(vec2 uv, vec2 loc, float angle, float r){\n    uv-=loc;\n    \n    uv=reloc(uv,angle);\n    \n    uv.x*=.85;\n    vec4 prep = vec4(smoothstep(r,r-.01,length(uv)));\n    \n    uv.x -= 1.25*r;\n    float k = 1.-band(0., 0.75*r,.01,length(uv));\n    prep.rgb *= k;\n    k = 1.-band(r, 1.25*r,.01,length(uv));\n    prep.rgb *= k==0.?1.:k;\n    k = 1.-band(1.50*r, 1.75*r,.01,length(uv));\n    prep.rgb *= k==0.?1.:k;\n    k = 1.-band(2.*r, 2.25*r,.01,length(uv));\n    prep.rgb *= k==0.?1.:k;\n    \n    prep.rgb *= vec3(1.,.92,0.);\n    \n    uv.x += .52*r;\n    uv.y -= .25*r;\n    \n    if(length(uv)<.01){prep.rgb = vec3(length(uv)<.0065?.95:0.);}\n    uv.y += .5*r;\n    \n    if(length(uv)<.01){prep.rgb = vec3(length(uv)<.0065?.95:0.);}\n    \n    return prep;\n}\nvec2 Loc(float t){\n    return vec2(.8*cos(t*.5),.4*sin(t*.333333));\n}\nvec4 drawBee(vec2 uv){\n    float it = iTime+cos(iTime);\n    it *= .2;\n    vec2 loc = Loc(it);\n    vec2 pLoc = Loc(it - .1);\n    float angle = PI*1.5+atan(loc.x-pLoc.x,loc.y-pLoc.y);\n    //angle = sqrt(9.);\n    vec4 db = drawBee(uv, loc,angle,.0475);\n    return vec4(db.xyz,db.w==0.?1.:0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    vec3 col = drawBeeFrame(uv);\n    vec4 bee = drawBee(uv);\n    col = bee.w==0.?bee.xyz:col;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}