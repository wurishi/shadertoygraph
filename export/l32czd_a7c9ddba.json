{"ver":"0.1","info":{"id":"l32czd","date":"1727626772","viewed":56,"name":"2024-09-28 normalizefm","username":"FoRenard","description":"a","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 O,vec2 FC)\n{\n    O = texelFetch(iChannel0,ivec2(FC),0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define time iTime\n#define v2Resolution vec2(iResolution.xy)\n#define backbuffer iChannel0\n\nint bt;\nfloat alt,lt,tr,atr;\n#define sc(x) hash(vec3(x,1.4,bt))\n#define rep(i,n) for(int i=0;i<n;i++)\n#define sat(x) clamp(x,0.,1.)\n#define norm(x) normalize(x)\nvec3 hash(vec3 v)\n{\n  uvec3 x = floatBitsToUint(v);\n  const uint k = 0x91023718u;\n  x = ((x >> 8) ^ x.yzx) * k;\n  x = ((x >> 8) ^ x.yzx) * k;\n  x = ((x >> 8) ^ x.yzx) * k;\n  return vec3(x) / float(-1u);\n}\nmat3 bnt(vec3 t)\n{\n  vec3 b,n = vec3(0,1,0);\n  t = norm(t);\n  b = norm(cross(n,t));\n  n = norm(cross(t,b));\n  return mat3(b,n,t);\n}\nvec3 erot(vec3 p,vec3 ax,float a)\n{\n  return mix(dot(ax,p) * ax,p,cos(a)) + sin(a) * cross(ax,p);\n}\nvec3 pl(vec3 ro,vec3 rd,vec3 pd,float w)\n{\n  float l = -(dot(ro,pd) - w) / dot(rd,pd);\n  vec3 p = rd * l + ro;\n  mat3 b = bnt(pd);\n  vec2 uv = vec2(dot(b[0],p),dot(b[1],p));\n  return vec3(uv,l < .0 ? 1e5 : l);\n}\nvec3 cyc(vec3 x)\n{\n  float q = 1.5;\n  vec4 v = vec4(0);\n  rep(i,5)\n  {\n    x += sin(x.yzx);\n    v = v * q + vec4(cross(cos(x),sin(x.zxy)),1);\n    x *= q;\n  }\n  return v.xyz / v.w;\n}\n\nvec3 s0(vec2 suv)\n{\n  vec3 c = pow(sat(cyc(vec3(suv,alt)) * .5 + .5),vec3(2,1,.5));\n  //suv+=vec2(0,alt*.1);\n  rep(i,4)\n  {\n    vec3 h = hash(vec3(floor(suv),i + bt / 4));\n    if(h.x < .5)\n      break;\n    suv *= 2.;\n  }\n  vec3 h = hash(vec3(floor(suv),5));\n  vec2 fuv = fract(suv);\n  c += step(abs(length(fuv - .5) - .3),length(fwidth(fuv)) * 2.);\n  if(h.y < .5)\n    c *= 0.;\n  else\n    c *= step(length(fuv - .5),.3);\n  return c;\n}\nfloat n0(vec2 uv)\n{\n  return step(fract(uv.y + alt),.1);\n}\nvec3 s1(vec2 suv)\n{\n  int v = bt % 2;\n  vec3 rp,rd,ro,dir;\n  float z = 1.,l = 1e5;\n  ro = erot(vec3(3),norm(tan(sc(1) - .5)),alt);\n  dir = -ro;\n  rd = bnt(dir) * norm(vec3(suv,z));\n  vec3 res;\n  int n = int(sc(1.7).x * 4.) * 2 + 1;\n  rep(i,n)\n  {\n    float f = (float(i) + .5) / 8.;\n    vec3 uvl;\n    if(v == 0)\n      uvl = pl(ro,rd,norm(tan(hash(vec3(1,i,bt)) - .5)),1.);\n    else if(v == 1)\n    {\n      uvl = pl(ro,rd,norm(dir),float(i));\n      uvl = erot(uvl,vec3(0,0,1),(f * sc(1.2).x * 2.4 + alt));\n    }\n    float s = n0(uvl.xy);\n    if(0. < s)\n      l = min(l,uvl.z);\n  }\n  vec3 c;\n  c = vec3(exp(-l * .1) * 1.5);\n  //c=mix(s0(suv),mix(vec3(1,.5,.5),vec3(.5,.5,1),suv.y),exp(-l*.1));\n  return c;\n}\n\nvec4 _main()\n{\n  float bpm = 145.;\n  alt = lt = time * bpm / 60.;\n  atr = tr = fract(alt);\n  bt = int(alt);\n  tr = tanh(4. * tr);\n  lt = float(bt) + tr;\n  vec2 fc = gl_FragCoord.xy,res = v2Resolution,asp = res / min(res.x,res.y),uv = fc / res,suv = (uv * 2. - 1.) * asp;\n  if(sc(-1).x < .1)\n    suv = abs(suv);\n  vec3 back = texture(backbuffer,uv).rgb;\n  vec3 c = vec3(0);\n  c = s1(suv);\n  if(sc(2.1).x < .2)\n  {\n    c = step(fract(cyc(vec3(suv,alt)).x * 5.),.5) * vec3(1,0,0);\n  }\n  if(sc(-6.1).x < .2)\n  {\n    return vec4(mix(c,abs(1. - c),step(fract(time * 10.),.5)),1);\n  }\n\n  if(bt % 2 == 0)\n  {\n    vec3 aa = vec3(0);\n    c = mix(c,aa,sat(step(length(suv),.5) + step(.5,abs(suv.y))));\n  }\n  if(bt % 4 == 0)\n    c = abs(back - c);\n  c = vec3(c.r,back.rg);\n  float ema = .0;\n  c = mix(c,back,ema);\n\n  return vec4(c,1);\n}\n\nvoid mainImage(out vec4 O,vec2 FC)\n{\n  O = _main();\n}","name":"Buffer A","description":"","type":"buffer"}]}