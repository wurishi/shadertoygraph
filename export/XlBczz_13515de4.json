{"ver":"0.1","info":{"id":"XlBczz","date":"1507122560","viewed":333,"name":"Simple Particle Swirl","username":"Marrrk","description":"-","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["particles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int particleCountSqr = 10;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    fragColor.xyz = texture(iChannel0, uv).xyz;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//#define ENABLE_PARTICLE_DECAY\n\n// Position buffer\nvec4 init(vec2 fragCoord) \n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.x += iTime * 1.23;\n    uv.y += iTime * 4.56;\n    \n    vec3 pos = texture(iChannel2, uv).xyz * 2.0 - 1.0;\n    float power = texture(iChannel2, uv).x * 10.0;\n        \n    return vec4(pos, power);\n}\n\nvec4 update(vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 posAndPower = texture(iChannel0, uv);\n    vec4 directionAndX = texture(iChannel1, uv);\n    if (posAndPower.a <= 0.0)\n        return init(fragCoord);\n    \n    float speed = iTimeDelta * 0.1;\n    posAndPower.xyz += directionAndX.xyz * speed;\n    \n#ifdef ENABLE_PARTICLE_DECAY\n    posAndPower.a -= iTimeDelta;\n#endif\n    \n    return posAndPower;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (fragCoord.x > 10.0 || fragColor.y > 10.0)\n        discard;\n    bool mustInitialize = iFrame <= 1;\n    fragColor = update(fragCoord);\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// Direction buffer\nvec4 init(vec2 fragCoord) \n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.x += iTime * 1.23;\n    uv.y += iTime * 4.56;\n    vec3 direction = texture(iChannel2, uv * 2.0 + 1.0).xyz * 2.0 - 1.0;\n        \n    return vec4(direction, 1.0);\n}\n\nvec4 update(vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec4 posAndPower = texture(iChannel0, uv);\n    if (posAndPower.a <= 0.0)\n        return init(fragCoord);\n    vec4 directionAndX = texture(iChannel1, uv);\n    \n    vec2 targetPosXY = (iMouse.xy / iResolution.xy) * 2.0 - 1.0;\n    vec3 targetPosXYZ = vec3(targetPosXY, 0.0);\n    \n    vec3 targetDir = normalize(targetPosXYZ - posAndPower.xyz);\n    \n    directionAndX.xyz += targetDir * 0.1;\n    \n    return directionAndX;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (fragCoord.x > 10.0 || fragColor.y > 10.0)\n        discard;\n    fragColor = update(fragCoord);\n}\n","name":"Buf C","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"//#define PARTICLE_REPETITION\nconst int particleCountSqr = 10;\nconst float feedbackStrength = 0.9;\n\n#ifdef PARTICLE_REPETITION\nconst vec4 flip[3] = vec4[](\n    vec4( -1.0, 1.0, 1.0, 1.0 ),\n    vec4( -1.0, -1.0, 1.0, 1.0 ),\n    vec4( 1.0, -1.0, 1.0, 1.0 )\n);\n#endif\n\nvec3 addInfluence(vec2 currentPos, vec4 positionAndPower)\n{\n    float dist = max(0.001, distance(currentPos, positionAndPower.xy));\n    float power = (0.1) / dist;\n\n    float particleStrength = 0.01 - feedbackStrength * 0.01;\n    return vec3(1.0) * power * particleStrength * min(1.0, positionAndPower.a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 currentPos = uv * 2.0 - 1.0;\n    currentPos *= 2.0;\n    vec2 particleDXY = 1.0 / iResolution.xy;\n    \n    vec3 color = vec3(0.0);\n    for (int x = 0; x < particleCountSqr; ++x)\n        for (int y = 0; y < particleCountSqr; ++y)\n        {\n            vec2 samplePos = vec2(float(x) * particleDXY.x, float(y) * particleDXY.y);\n            vec4 positionAndPower = texture(iChannel0, samplePos);\n            \n            color += addInfluence(currentPos, positionAndPower);\n            \n#ifdef PARTICLE_REPETITION\n            for (int i = 0; i < 3; ++i)\n                color += addInfluence(currentPos, positionAndPower * flip[i]);\n#endif\n            \n            \n        }\n\t\n\tfragColor.xyz = color + texture(iChannel1, uv).xyz * feedbackStrength;\n}","name":"Buf D","description":"","type":"buffer"}]}