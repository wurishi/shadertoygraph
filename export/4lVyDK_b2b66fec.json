{"ver":"0.1","info":{"id":"4lVyDK","date":"1538344503","viewed":330,"name":"Tutorial- The Simplest 3D","username":"cake7914","description":"following a youtube video","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 p) \n{\n   return length(cross(p-ro, rd))/length(rd);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 ro = vec3(0., 0., -2.);\n    vec3 rd = vec3(uv.x, uv.y, 0.)-ro;\n    \n    float t = iTime;\n        \n    vec3 p = vec3(sin(t), 0.0, 1.0+cos(t));\n    float d = DistLine(ro, rd, p);\n    \n    d = smoothstep(.1, .09, d);\n    \n    fragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}