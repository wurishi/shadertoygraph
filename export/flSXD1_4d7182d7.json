{"ver":"0.1","info":{"id":"flSXD1","date":"1627507356","viewed":66,"name":"Trianglotron","username":"Epromee","description":"x ^ y ^ (x + y) mod N = MAGIC!!!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["triangles","fractals","xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nfloat sneakyXor(int fx, int fy, int pieces) {\n    \n    int mixXY = fx ^ fy ^ (fx + fy); // THIS WTF IS THE MAGIC\n    \n    float color = float((pieces + mixXY % pieces) % pieces) / float(pieces);\n    \n    return color;\n    \n}\n\nfloat sinSmooth(float x) {\n    x = x * 2. - 1.;\n    x = sin(x * PI / 2.);\n    x = (x + 1.) / 2.;\n    return x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    int fx = int(fragCoord.x);\n    int fy = int(fragCoord.y);\n    \n    float time = iTime * 0.3 + 5.0;\n    \n    int pieces = int(floor(time));\n    \n    float lr = sinSmooth(time - floor(time));\n    \n    float color;\n    \n    if (lr == 0.) {\n        color = sneakyXor(fx, fy, pieces);\n    }\n    else {\n        color = sneakyXor(fx, fy, pieces) * (1. - lr)\n            + sneakyXor(fx, fy, pieces + 1) * lr;\n    }\n\n    // Output to screen\n    fragColor = vec4(0., color, 0., 1.);\n}","name":"Image","description":"","type":"image"}]}