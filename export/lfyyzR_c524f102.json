{"ver":"0.1","info":{"id":"lfyyzR","date":"1731673511","viewed":82,"name":"KIFS tutorial","username":"vanshika","description":"just learning how this all works. Attempt #1","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","kaliedoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N(float angle){\n    return vec2(sin(angle), cos(angle));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy; //getting mouse coordinates and normalizing them. \n    uv *= 1.25;\n    vec3 col = vec3(0);\n    \n    uv.x = abs(uv.x);\n    uv.y += tan((5./6.)*3.1415)*.5;\n    \n    vec2 n = N((5./6.)*3.1415); //n for normal\n    float d = dot(uv-vec2(.5,0),n);\n    uv -= n*max(0.,d)*2.;\n        \n    n = N((2./3.)*3.1415);\n    float scale=1.;\n    uv.x+=.5;\n    for (int i=0; i < 4; i++) {\n        uv *=3.; // to get 3 times the space to put the whole chape on one line segment\n        scale*=3.;\n        uv.x -= 1.5; // to get the origin at the center of the right line.\n    \n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        uv -= n*min(0.,dot(uv,n))*2.; // now you can bend that line  \n    }\n    \n\n    \n    d = length(uv - vec2(clamp(uv.x, -1., 1.), 0));\n    col += smoothstep(1./iResolution.y,.0,d/scale); // turning gradient into a solid line.\n    uv /= scale;\n    col += texture(iChannel0, uv*2.-iTime*.05).rgb;\n    //col.rg += uv/scale; // visualising results.\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}