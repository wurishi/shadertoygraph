{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define Iterations 512\n#define Speed 4.0\n#define FPS 10.0\n#define StarMovement\n\n\n\nstruct Particle {\n\tvec2  pos;\n    vec2  vel;\n    float mass;\n};\n\nfloat grav(Particle p1, Particle p2){\n\tvec2 d = p1.pos-p2.pos;\n    float r2 = d.x*d.x+d.y*d.y;\n    \n    return p1.mass * p2.mass / r2;\n}\n\nParticle updateP(Particle p, Particle po, float delta){\n    vec2 dir = po.pos - p.pos;\n    vec2 acc = dir * grav(p,po);\n    p.vel += acc / p.mass   * delta;\n    p.pos += p.vel * delta;\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //#TODO: change uvs\n    vec2 uv = (2.*fragCoord.xy-iResolution.xy) / iResolution.x;\n    uv *= 150.;\n    \n    vec2 muv = (2.*iMouse.xy-iResolution.xy) / iResolution.x;\n    muv *= 150.;\n    \n    vec2 muv2 = (2.*abs(iMouse.zw)-iResolution.xy) / iResolution.x;\n    muv2 *= 150.;\n    \n    \n    Particle particles[4];\n    \n\n    if(dot(iMouse.xy,iMouse.xy) < 10.){\n        muv2 = vec2(20.,20.);\n        muv = muv2 + vec2(0.,30.);\n    }\n    \n   // for(int i = 0; i < 4; i++){\n    //    particles[i] = Particle(vec2(0.,0.) ,  vec2(0.,0.),  100.);\n   // }\n    \n    Particle star    = Particle(vec2(0.,0.) ,  vec2(0.,0.),  100.);\n    Particle planet  = Particle(vec2(-50.,0.), vec2(0.,5.),    10.);\n    Particle planet2 = Particle(muv2,  (muv-muv2)/4.,    20.);\n    Particle planet3 = Particle(vec2(-60.,0.), vec2(0.,3.),    1.);\n    \n    float delta = 1./FPS;\n    float n = 0.;\n    \n    float time = mod(iTime,delta*float(Iterations)/Speed);\n    \n    float a = 0.;\n    float b = 0.;\n    float c = 0.;\n    float d = 0.;\n    for(int i = 0; i < Iterations; i++){\n        if(dot(star.pos - uv,   star.pos - uv)    < star.mass/20.)    a = 1.;\n    \tif(dot(planet.pos - uv, planet.pos - uv)  < planet.mass/20.)  b = 1.;\n    \tif(dot(planet2.pos - uv,planet2.pos - uv) < planet2.mass/20.) c = 1.;\n    \tif(dot(planet3.pos - uv,planet3.pos - uv) < planet3.mass/20.) d = 1.;\n        #ifdef StarMovement\n          star = updateP(star,planet, delta);\n          star = updateP(star,planet2,delta);\n          star = updateP(star,planet3,delta);\n        #endif\n        planet = updateP(planet,star,delta);\n        planet = updateP(planet,planet2,delta);\n        planet = updateP(planet,planet3,delta);\n        planet2 = updateP(planet2,star,delta);\n        planet2 = updateP(planet2,planet,delta);\n        planet2 = updateP(planet2,planet3,delta);\n        planet3 = updateP(planet3,star,delta);\n        planet3 = updateP(planet3,planet,delta);\n        planet3 = updateP(planet3,planet2,delta);\n        n += delta;\n        if(n > time*Speed) break;\n    }\n    \n    if(dot(star.pos - uv,   star.pos - uv)    < star.mass)    a = 1.;\n    if(dot(planet.pos - uv, planet.pos - uv)  < planet.mass)  b = 1.;\n    if(dot(planet2.pos - uv,planet2.pos - uv) < planet2.mass) c = 1.;\n    if(dot(planet3.pos - uv,planet3.pos - uv) < planet3.mass) d = 1.;\n    if     (a > 0.5)\n        fragColor = vec4(vec3(1.,1.,0.),1.);\n    else if(b > 0.5)\n        fragColor = vec4(vec3(0.,1.,0.),1.);\n    else if(c > 0.5)\n        fragColor = vec4(vec3(1.,1.,1.),1.);\n    else if(d > 0.5)\n        fragColor = vec4(vec3(1.,0.,0.),1.);\n    else \n        fragColor = vec4(vec3(0.),1.);\n        \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lllGR7","date":"1420372805","viewed":266,"name":"Planet Orbits","username":"TheJimJames40","description":"A simulation of planet orbits.\nclick and drag to change the orbits.\nit is slow and badly optimized.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simulation","planet","orbit"],"hasliked":0,"parentid":"","parentname":""}}