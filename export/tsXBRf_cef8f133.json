{"ver":"0.1","info":{"id":"tsXBRf","date":"1588786981","viewed":200,"name":"Trees of Circles","username":"sl2c","description":"A circle fractal related to the Apollonian Gasket.","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["fractal","circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Copyright 2020 Google LLC\n// SPDX-License-Identifier: Apache-2.0\n// NOT an official Google project; see Google Open Source guidelines for more info on copyright transfer\n// written by William Cadegan-Schlieper \n\nvec3 color(vec2 z, float ds) {\n    int i;\n    for (i=0; i<100; i++) {\n        z.x = mod(z.x,4.0);\n        if (z.x > 3.0) {\n            z.x -= 4.0;\n        }\n        if (z.x > 1.0) {\n            z.x = 2.0-z.x;\n        }\n        \n        if (z.y < -1.0) {\n            z.y = -2.0 - z.y;\n        }\n        if (z.y > 1.0) {\n            break;\n        }\n        z /= -0.5 * dot(z,z);\n        ds *= 0.5 * dot(z,z);\n    }\n    float col = 0.5 * min(1.0, (z.y - 1.0) / ds);\n    if (i%2==0) {\n        return vec3(0.5 + col);\n    } else {\n        return vec3(0.5 - col);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * (fragCoord - iResolution.xy * 0.5)/iResolution.y;\n    float ds = 1.0 / iResolution.y;\n\n    \n    float t = iTime * 0.5;\n    \n    float period = 4.0 * log(2.0 + sqrt(5.0));\n    while (t > period * 0.5) {\n        t -= period;\n    }\n    \n    \n    \n    uv *= exp(-t); ds *= exp(-t);\n    \n    uv.x -= sqrt(0.05);\n    \n    uv /= dot(uv,uv);\n    ds *= dot(uv,uv);\n\n    uv.x += sqrt(5.0);\n    \n    fragColor = vec4(color(uv, ds),1.0);\n    fragColor = pow(fragColor, vec4(1.0/2.2));\n}","name":"Image","description":"","type":"image"}]}