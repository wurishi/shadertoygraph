{"ver":"0.1","info":{"id":"dsjGzh","date":"1667237148","viewed":164,"name":"Virgil judgement cut effect","username":"pfhgil","description":"Cool effect","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["dmc5"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 line0 = vec4(0.0, 0.55, 1.0, 0.56);\nvec4 line1 = vec4(0.0, 0.3, 1.0, 0.9);\nvec4 line2 = vec4(0.0, 0.8, 1.0, 0.6);\nvec4 line3 = vec4(0.0, 0.15, 1.0, 0.35);\n\nfloat getXp(vec4 point, vec2 uv) \n{\n    vec2 v1 = vec2(point.z, point.w) - vec2(point.x, point.y);\n    vec2 v2 = vec2(point.z, point.w) - uv;\n    return v1.x * v2.y - v1.y * v2.x;\n}\n\nvec4 getColor(vec2 uv, float xp, float lineThickness, vec4 inColor) {\n    if(uv.y < xp + lineThickness && uv.y > xp - lineThickness) {\n        vec4 pixel1 = texture(iChannel0, vec2(uv.x, uv.y + lineThickness / 100.0));\n        vec4 pixel2 = texture(iChannel0, vec2(uv.x, uv.y - lineThickness / 100.0));\n        return vec4(\n        mix(pixel1.x, pixel2.x, 0.1),\n        mix(pixel1.y, pixel2.y, 0.1),\n        mix(pixel1.z, pixel2.z, 0.1),\n        mix(pixel1.w, pixel2.w, 0.1)\n        );\n        \n    } else {\n        return inColor;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 resUv = vec2(uv);\n    \n    //line0 += 0.005 * iTime;\n    line1 -= 0.009 * iTime;\n    line2 += 0.005 * iTime;\n    line3 -= 0.009 * iTime;\n    \n    float offset = min(0.002 * iTime, 0.02);\n    \n    float xp0 = getXp(line0, uv);\n    float xp1 = getXp(line1, uv);\n    float xp2 = getXp(line2, uv);\n    float xp3 = getXp(line3, uv);\n    \n    if(xp0 >= 0.0) {\n        resUv.x += offset;\n    }\n    \n    if(xp1 <= 0.0) {\n        resUv.x -= offset;\n    }\n\n    if(xp2 >= 0.0) {\n        resUv.x += offset;\n    }\n    \n    if(xp3 >= 0.0) {\n        resUv.x -= offset;\n    }\n    \n    vec4 texColor = texture(iChannel0, resUv);\n    \n    float lineThickness = 1.5;\n    \n    texColor = getColor(resUv, iResolution.y * xp0, lineThickness, texColor);\n    texColor = getColor(resUv, iResolution.y * xp1, lineThickness, texColor);\n    texColor = getColor(resUv, iResolution.y * xp2, lineThickness, texColor);\n    texColor = getColor(resUv, iResolution.y * xp3, lineThickness, texColor);\n    \n    // Output to screen\n    fragColor = texColor;\n}","name":"Image","description":"","type":"image"}]}