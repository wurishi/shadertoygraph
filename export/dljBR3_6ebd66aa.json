{"ver":"0.1","info":{"id":"dljBR3","date":"1694335865","viewed":22,"name":"Nirvana","username":"AbeEstos","description":"A variant on Swirling souls, an experiment in battle backgrounds that i might use in yet another earthbound inspired indie RPG.\n\nYes yes. The code is bad. Truth is this was for fun and I have no fucks to give. I can optimize it later.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["earthbound","battlebackgrounds"],"hasliked":0,"parentid":"dlSfR3","parentname":"Swirling souls"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\nfloat sosSpin(float amp, float freq, float shift, vec2 uv, float spin)\n{\n    return amp * sin( freq * ((abs(spin) * (length(uv)-(atan(uv.x,uv.y) / spin))) + shift));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.y * 2.)-vec2(iResolution.x/iResolution.y,1.);\n\n    // Time varying pixel color\n    vec3 col = vec3(1.,1.,1.);\n    \n    float spin = 3. * PI;\n    \n    float sos = sosSpin(2.,1.,0.5 * iTime,uv,spin);\n    sos += sosSpin(1.5,2.,3. * iTime,uv,spin);\n    sos += sosSpin(2.,5.,1.286 * iTime,uv,spin);\n    sos += sosSpin(.5,8.,2. * iTime,uv,spin);\n    sos += sosSpin(2.5,7.,1. * iTime,uv,spin);\n    //if(sos > 0.) col = vec3(0.,0.,0.);\n    col = vec3(0.,1.,sos) / 2.;\n    \n    float sos2 = sosSpin(2.,1.,0.5 * iTime,uv,-spin);\n    sos2 += sosSpin(1.5,2.,3. * iTime,uv,-spin);\n    sos2 += sosSpin(2.,5.,1.286 * iTime,uv,-spin);\n    sos2 += sosSpin(.5,8.,2. * iTime,uv,-spin);\n    sos2 += sosSpin(2.5,7.,1. * iTime,uv,-spin);\n    \n    col += vec3(0.,1.,sos2) / 1.5;\n    \n    col = vec3(clamp(col.x, 0., 1.),clamp(col.y, 0., 1.),clamp(col.z, 0., 1.));\n    col.b *= .75;\n    col /= 1.5;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}