{"ver":"0.1","info":{"id":"4l2SWh","date":"1443352007","viewed":125,"name":"rayTracerNibylec","username":"summer","description":"a raytracer","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["newbie","sphere","raytraycing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nvec4 sun(float t, vec3 dir){\n    vec3 sunDir = normalize(vec3(3.0*sin(t),1.0, 3.0*cos(t)));\n    float light = pow(max(0.0, dot(sunDir, dir)), 255.0);\n    return light*vec4(1, 0.5, 1.0, 0.9);\n}\nvec4 sky(vec3 dir){\n    return pow(max(0.0, dot(vec3(0.0, 1.0, 0.0), dir)), 0.5)*vec4(87.0/255.0, 213.0/255.0, 255.0/255.0, 1.0);\n}\nvec4 bg(float t, vec3 dir){\n    return sun(t, dir)+sky(dir);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-1.0+2.0*fragCoord.xy/iResolution.xy)*vec2(iResolution.x/iResolution.y, 1.0);\n    vec3 ro = vec3(0.0, 0.0, -5.0);\n    vec3 rd = normalize(vec3(uv, 1.0));\n\n    float delta = pow(2.0*dot(ro,rd), 2.0)-4.0*(dot(ro,ro)-1.0);\n    if(delta<=0.0) \n    \tfragColor = bg(iTime, rd);\n    else\n        fragColor = bg(iTime, reflect(rd, ro+rd*0.5*(-2.0*dot(ro,rd)-sqrt(delta))));\n}","name":"","description":"","type":"image"}]}