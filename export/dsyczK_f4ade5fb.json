{"ver":"0.1","info":{"id":"dsyczK","date":"1696315465","viewed":55,"name":"Simple Lens Blur","username":"s_fx","description":"Lens blur.\nFor better performance adjust the step size.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["blur","lens"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* (c) 2023 s.fx */\n\nconst float R = .1;  // blur radius\nconst float S = .01; // step size\n\nvoid mainImage( out vec4 o, in vec2 c )\n{\n    vec2  uv    = c / iResolution.xy;\n          uv.x *= iResolution.x / iResolution.y;\n    vec3  col;\n    float i;\n    \n    uv += vec2(.2 * iTime);\n    \n    for (float x = uv.x - R; x <= uv.x + R; x += S)\n        for (float y = uv.y - R; y <= uv.y + R; y += S)\n            if (length(vec2(x, y) - uv) <= R)\n            {\n                col += texture(iChannel0, vec2(x, y)).rgb;\n                i++;\n            }\n    \n    col /= i;\n    \n    o = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}