{"ver":"0.1","info":{"id":"3tdcDS","date":"1609834623","viewed":73,"name":"genuary2021_day4","username":"psydshobob","description":"Made for Genuary2021 day four - Small Symmetry","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["genuary2021"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lines(in vec2 pos, float b){\n    float scale = 10.0;\n    pos *= scale;\n    return smoothstep(0.0,\n                    .5+b*.5,\n                    abs((sin(pos.x*3.1415)+b*2.0))*.5);\n}\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n#define PI 3.14159\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  //vec2 st = fragCoord.xy/iResolution.xy;\n  //vec2 st = (fragCoord -.5* iResolution.xy)/iResolution.y;\n  vec2 st = fragCoord/iResolution.y;\n  //st += 1.0;\n  vec2 pos = vec2 (st*5.0);\n\n  vec2 p = floor(pos);\n  p += 1.0;\n  pos *= p.x;\n  //pos -= .5;\n  //pos = rotate2d(2.0*PI * .5 *length(fract(pos))) * fract(pos);\n  float flip = mod(floor(pos.x), 2.0);\n  flip = mod(floor(pos.y), 2.0) == 0.0 ? flip : 1.0 - flip;\n  pos = rotate2d(.5 * PI * flip) * fract(pos);\n  float f = flip == 1.0 ? fract(pos.x) : fract(pos.y);\n  //pos = rotate2d(-.25*PI * smoothstep(.1,.9,f)) * pos;\n  // if (st.x > 0. && st.y > 0.) {\n  //   pos = rotate2d(PI / 2.0) * pos;\n//  }\n  //pos = rotate2d(noise_dir(pos)/.3) * pos;\n\n  //float n = noise_dir(pos);\n  vec3 color = vec3(0.);\n  //vec3 color = vec3(step(.9, n));\n  //vec3 color = vec3(n);\n  float l = lines(pos,.01);\n  //color = vec3(l, fract(pos.x), fract(pos.y));\n  //vec3 foo = mix(vec3(1.0,0.,0.), vec3(.8, .8, .0), fract(pos.x));\n  vec3 foo = hsb2rgb(vec3((cos(iTime) + 1.0)/2.0 + fract(pos.x), .7, .9));\n  color = vec3(l*foo);\n  fragColor = vec4(color, 1.0);\n\n}\n","name":"Image","description":"","type":"image"}]}