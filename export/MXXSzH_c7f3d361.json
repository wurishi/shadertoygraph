{"ver":"0.1","info":{"id":"MXXSzH","date":"1709135733","viewed":69,"name":"Chartreuse Spiral","username":"mehow_one","description":"A simple spiral :) ","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["spiral","tangentspace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float offset = (texture(iChannel0,uv).r);\n    \n    fragColor = texture(iChannel1,uv + (offset)*0.1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.0);\n    vec2 mouse = uv - iMouse.xy/iResolution.xy;\n    float ratio = max(iResolution.x,iResolution.y) / min(iResolution.x,iResolution.y);\n    \n    float d = length(vec2(mouse.x * ratio,mouse.y) );\n    float sd = 1.-smoothstep(0.0,0.4,d);\n    float theta = atan(mouse.y,mouse.x);\n    if(iMouse.z > 0.){\n    color += sd;\n    }\n    float dissipation = 0.8;\n    vec3 buffer = texture(iChannel0,uv).rgb * dissipation + color;\n    fragColor = vec4(buffer,1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"const float pi = 3.141592654;\nconst vec4 chartreuse = vec4(228.,255.,92.,255.)/255.;\nconst vec4 black = vec4(0.0);\nconst float speed = 1.5;\nconst float ratio = 1.5;\nconst float twist = 10.0;\nconst float zoom = 0.9;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.yy;\n\tfloat r = length(uv);\n    float theta = atan(uv.y, uv.x);   \n    fragColor = fract(ratio * theta / pi + twist * pow(r, zoom) - speed * iTime) < 0.5 ? chartreuse : black;\n}","name":"Buffer B","description":"","type":"buffer"}]}