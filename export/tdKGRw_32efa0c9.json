{"ver":"0.1","info":{"id":"tdKGRw","date":"1569931843","viewed":380,"name":"ShaderTober - Ring","username":"Flopine","description":"A small doodle with inktober's theme \"ring\". I'll try to do that for each day in October :) ","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","blackandwhite","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, Coyhot, Alkama and YX for teaching me\n// Thanks LJ for giving me the love of shadercoding :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and others to sprout :)  https://twitter.com/CookieDemoparty\n\n// Idea of doing a shadertober came from GreenChicken, thank you ^^ \n\nfloat hash21 (vec2 c)\n{return fract(sin(dot(c,vec2(21.45,40.49)))*1245.5);}\n\nfloat sphe (vec3 p, float r)\n{return length(p)-r;}\n\nfloat g1 = 0.;\nfloat sun (vec3 p)\n{\n    p.yz -= vec2(0.6, 0.4);\n    float d = sphe (p,0.8+sin(iTime)*0.1+0.15);\n    g1 += 0.1/(0.1+d*d);\n    return d;\n}\n\nfloat g2 = 0.;\nfloat moon (vec3 p)\n{\n    p.z += 0.4;\n    p.y -= 0.5;\n    p.y += clamp(sin(iTime*0.1)*3.,0.,3.);\n    float d = sphe (p, 0.6);\n    g2 += 0.1/(0.1+d*d);\n    return d;\n}\n\nfloat water (vec3 p)\n{\n    p.y += 1.5;\n    p.y += sin(length(p.xz*3.)-iTime)*0.1;\n    return abs(p.y) -0.2;\n}\n\nfloat SDF (vec3 p)\n{\n    return min(water(p),min(sun(p), moon(p)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(fragCoord/iResolution.xy)-1.;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    float dither = hash21(uv);\n    \n    vec3 ro = vec3(0.001,0.001,-3.), \n        p = ro, \n        col = vec3(0.),\n        rd = normalize(vec3(uv,1.));\n    \n    float shad = 0.;\n    \n    for (float i=0.; i<64.; i++)\n    {\n        float d = SDF(p);\n        if(d<0.001)\n        {\n            shad = i/64.;\n            break;\n        }\n        d *= 0.9+dither*0.1;\n        p+=d*rd;\n    }\n    float t = length(ro-p);\n\n    col = vec3(shad)*0.2;\n\n    col += g1*0.15;\n    col -= g2*0.05;\n    \n    col = mix(col, vec3(0.,0.,0.03),1.-exp(-0.01*t*t));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}