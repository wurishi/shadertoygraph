{"ver":"0.1","info":{"id":"lsSczK","date":"1492783509","viewed":123,"name":"Wavering Mandelbrot Set","username":"animatedlew","description":"This is a basic Mandelbrot set shader.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["procedural","fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 mandelbrot(vec2 z, vec2 c) {\n\treturn vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n}\n\nfloat mandelbrot(highp vec2 c) {\n\tvec2 z = vec2(0.0);\n\tfor(int i = 0; i < 500; i++) z = mandelbrot(z, c);\n\treturn length(z) / 4.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    uv.x -= .1;\n    uv *= 2.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv.x += cos(uv.y + iTime * 4.0) / 20.0;\n    uv.y += sin(uv.x + iTime * 4.0) / 20.0;\n    \n    vec4 color = vec4(0.4, 0.0, 0.7, 1.0) * (1.0 - mandelbrot(uv));\n\tfragColor = color;\n}","name":"Image","description":"","type":"image"}]}