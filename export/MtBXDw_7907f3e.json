{"ver":"0.1","info":{"id":"MtBXDw","date":"1444088001","viewed":1347,"name":"Smoke sphere","username":"spite","description":"Variation of https://www.shadertoy.com/view/4sfGzS in several layers","likes":27,"published":1,"flags":0,"usePreview":0,"tags":["noise","sphere","smoke"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec3 sphere = vec3(0, 0, 2);\nfloat sphere_size = 1.3;\n\nfloat hash( float n ) { return fract(sin(n)*753.5453123); }\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\t\n    float n = p.x + p.y*157.0 + 113.0*p.z;\n    return mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                   mix( hash(n+157.0), hash(n+158.0),f.x),f.y),\n               mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                   mix( hash(n+270.0), hash(n+271.0),f.x),f.y),f.z);\n}\n\nfloat raySphere(vec3 rpos, vec3 rdir, vec3 sp, float radius, inout vec3 point, inout vec3 normal) {\n\tradius = radius * radius;\n\tfloat dt = dot(rdir, sp - rpos);\n\tif (dt < 0.0) {\n\t\treturn -1.0;\n\t}\n\tvec3 tmp = rpos - sp;\n\ttmp.x = dot(tmp, tmp);\n\ttmp.x = tmp.x - dt*dt;\n\tif (tmp.x >= radius) {\n\t\treturn -1.0;\n\t}\n\tdt = dt - sqrt(radius - tmp.x);\n\tpoint = rpos + rdir * dt;\n\tnormal = normalize(point - sp);\n\treturn dt;\n}\n\nconst mat3 m = mat3( 0.00,  0.80,  0.60,\n                    -0.80,  0.36, -0.48,\n                    -0.60, -0.48,  0.64 );\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 point; \n\tvec3 normal;\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n\tuv.y = -uv.y;\n    vec3 ray = vec3(uv.x, uv.y, 1.0);\n\tray = normalize(ray);\n    fragColor = vec4(0.0);\n    \n    vec3 c = vec3( 0. );\n    for( float i = 0.; i < 30.; i++ ) {\n\tfloat dist = raySphere(vec3(0.0), ray, sphere, sphere_size - .01 * i, point, normal);\n\t\n\tif (dist > 0.0) {\n        float f = 0.;\n        vec3 pos = 2. / ( .5 * i + 1. ) * point + .1 * iTime;\n         vec3 q = 8.0*pos;\n            f  = 0.5000*noise( q ); q = m*q*2.01;\n            f += 0.2500*noise( q ); q = m*q*2.02;\n            f += 0.1250*noise( q ); q = m*q*2.03;\n            f += 0.0625*noise( q ); q = m*q*2.01;\n        f *= dot( normal, vec3( 0., 0., 1. ) );\n\t\tc += vec3( f * f  );\n    } \n    }\n    \n    fragColor.xyz = smoothstep( 0., 1., c / 10. );\n}","name":"","description":"","type":"image"}]}