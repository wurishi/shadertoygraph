{"ver":"0.1","info":{"id":"WlKGzm","date":"1578558264","viewed":175,"name":"distort (mariana)","username":"george_mitev","description":"help by Mariana","likes":3,"published":1,"flags":2,"usePreview":0,"tags":["distort","camera"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 myfunction(vec2 uv,float c, float p)\n{\n    uv.y = uv.y + c*p;\n    uv.x = uv.x - c*p;\n    return uv;\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float asp = iResolution.x / iResolution.y;\n    \n    //Stepping gradient\n    vec2 uv2 = uv-0.5; //define and center uv2\n    uv2.x = uv2.x*asp; //make uv2 square\n    float stps = sin(iTime)*25.; //steps of the gradient animated\n    float b = 1.0 - length(uv2);\n    float c = floor(b*stps)/stps; //stepping effect\n    \n  \n    \n    //Animation\n    float d = sin(iTime+(fract(b*stps*0.6)));\n\n    vec4 tex1 = texture(iChannel0,myfunction(uv,c,0.3*d));\n    c =  c * tex1.r; //additional distortion in c\n    \n    vec4 tex2 = texture(iChannel0,myfunction(uv,c,0.5*-d));\n    vec4 tex3 = texture(iChannel0,myfunction(uv,c,0.2*(1.0-d)));\n    \n    tex3.r = smoothstep(0.3,0.7,tex2.r);\n    tex3.b = smoothstep(0.5,0.9,tex1.g);\n    \n    fragColor = vec4(tex3);\n}","name":"Image","description":"","type":"image"}]}