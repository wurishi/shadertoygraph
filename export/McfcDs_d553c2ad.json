{"ver":"0.1","info":{"id":"McfcDs","date":"1721767633","viewed":39,"name":"Waves animation","username":"J0ker","description":"create sin waves and add them all together.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float wave(float frequency, float amplitude, float speed, float x) {\n    \n    // Wave function\n    float wave = sin((x) * frequency) * (amplitude*sin(iTime*speed)); // x+iTime will move the wave in time\n    return wave;\n}\n\n\nfloat line(float wave, float lineWidth, float y, float dy) {  // converts the wave to a line for visual purpose\n    // Smoothstep for line edges\n    float dist = (y+dy - wave);\n    //dist = abs(dist);   // This is what created the line effect. Commenting this line will create a filled style\n    //dist = 1.0 - dist;\n    float edge = 1.0 - smoothstep(lineWidth, lineWidth * 1.5, dist);\n    \n    return edge;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1.0 to 1.0)\n    vec2 uv = (fragCoord/iResolution.xy) *2.0 - 1.0;\n    uv*= 6.0; // scale factor\n    //uv.y = fract(uv.y);\n    float waves = 0.0;\n    waves += wave(1.0, 0.7, 1.6, uv.x);\n    waves += wave(2.0, 1.0, 1.2, uv.x);\n    waves += wave(1.3, 1.2, 2.2, uv.x);\n    waves += wave(0.3, 0.4, 1.2, uv.x);\n    \n    \n    //comment all the Y waves to see an actual wave\n    //waves += wave(1.0, 0.7, 1.6, uv.y);\n    //waves += wave(2.0, 1.0, 1.2, uv.y);\n    //waves += wave(1.3, 1.2, 2.2, uv.y);\n    //waves += wave(0.3, 0.4, 1.2, uv.y);\n    \n    \n    \n    //float waves = wave1 + wave2 + wave3;\n    \n    float final = line(waves, 0.03, uv.y, 0.0); \n    \n    vec3 col = vec3(final*0.2, final*.5, final*1.0);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}