{"ver":"0.1","info":{"id":"Xcl3DX","date":"1703622029","viewed":47,"name":"Cyberpunk","username":"amirrouhandeh","description":"Cyberpunk Webcam Shader for ShaderToy\nConverts webcam input into a cyberpunk-style image","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["filter","webcam","cyberpunk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Cyberpunk Webcam Shader for ShaderToy\n// Converts webcam input into a cyberpunk-style image\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Get webcam texture color\n    vec3 webcamColor = texture(iChannel0, uv).rgb;\n\n    // Apply cyberpunk effects\n    // You can adjust the values to fine-tune the effect\n    vec3 cyberpunkColor = vec3(\n        webcamColor.r * 1.2, // Red channel enhancement\n        webcamColor.g * 0.8, // Green channel reduction\n        webcamColor.b * 1.5  // Blue channel enhancement\n    );\n\n    // Add some noise for a cyberpunk look\n    float noise = 0.1 * sin(uv.x * 500.0) * sin(uv.y * 500.0);\n    cyberpunkColor += vec3(noise);\n\n    // Output the cyberpunk-styled color\n    fragColor = vec4(cyberpunkColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}