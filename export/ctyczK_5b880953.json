{"ver":"0.1","info":{"id":"ctyczK","date":"1700681858","viewed":83,"name":"My Sinusoid","username":"Timmyswdswd","description":"Sinusoid","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["sin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct MathFunction\n{\n    float localScale;\n    float x;\n    float y;\n};\n\nvec3 defineFunction(MathFunction fn, vec3 col, vec2 fragCoord)\n{\n    fn.y = round(fn.y);\n    if(fragCoord.y == fn.y){\n        if(col != vec3(1.0, 0.0, 0.0))\n        {\n            col = vec3(1.0, 0.0, 0.0);\n        }\n        else\n        {\n            col = vec3(col.r/1.5, 0.0, 0.0);\n        }\n    }\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    \n    fragCoord -= iResolution.xy/2.0;\n    fragCoord = round(fragCoord);\n    \n    //Axis\n    if(fragCoord.x == 0.0 || fragCoord.y == 0.0){\n        col = vec3(0.5, 0.5, 0.5); \n    }\n    \n    //Loyout\n    float scale = 100.0;\n    \n    MathFunction fn_1;\n    fn_1.x = fragCoord.x;\n    fn_1.y = sin(fn_1.x/scale+iTime)*scale;\n    \n    MathFunction fn_2;\n    fn_2.x = fragCoord.x;\n    //fn_2.y = -sqrt(pow(scale, 2.0) - pow(fn_2.x, 2.0));\n    \n    //Printing\n    col = defineFunction(fn_1, col, fragCoord);\n    //col = defineFunction(fn_2, col, fragCoord);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}