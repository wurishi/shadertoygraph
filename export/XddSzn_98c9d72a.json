{"ver":"0.1","info":{"id":"XddSzn","date":"1457372649","viewed":178,"name":"Edgy Hue Blue Shader","username":"ggoedert","description":"Edgy hue fun test shader... :-)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["edge","hue"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hue(in vec3 orig)\n{\n    //extract luminosity\n    float lum = dot(vec3(0.3, 0.59, 0.11), orig);\n\t//tweak/play a little bit with it\n    float extra_lum = .5 + .5 * sin(iTime*5.);\n    lum = lum * (1. + extra_lum);\n    //reconstruct color with a bluish hue\n    return vec3(-0.5, -0.5, 0.5) * (1. - abs(2. * lum -1.)) + lum;\n}\n\nvec3 edge(in vec2 fragCoord)\n{\n    //run an edge detection kernel\n\tvec3 c[9];\n\tfor (int i=0; i < 3; ++i)\n\t\tfor (int j=0; j < 3; ++j)\n\t\t\tc[3*i+j] = texture(iChannel0, (fragCoord.xy+vec2(i-1,j-1)) / iResolution.xy).rgb;\n\tvec3 Lx = 2.0*(c[7]-c[1]) + c[6] + c[8] - c[2] - c[0];\n\tvec3 Ly = 2.0*(c[3]-c[5]) + c[6] + c[0] - c[2] - c[8];\n\tvec3 E = sqrt(Lx*Lx+Ly*Ly);\n    E = (dot(E, E)>0.1)?vec3(1.):vec3(0.);\n    //play a little with it (lets use cos this time to have a diferent phase)\n    return E*cos(iTime*5.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 orig = texture(iChannel0, uv).rgb;\n    vec3 col = hue(orig) + edge(fragCoord);\n    //add mouse slider for extra fun\n\tcol = mix(orig, col, step(iMouse.x / iResolution.x, uv.x));\n\tfragColor = vec4(min(col, 1.0),1.0);\n}\n","name":"Image","description":"","type":"image"}]}