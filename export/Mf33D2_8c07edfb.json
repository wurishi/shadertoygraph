{"ver":"0.1","info":{"id":"Mf33D2","date":"1712138904","viewed":84,"name":"ice block chemicals","username":"akr51","description":"Was interested in seeing how exponentials work on colors. The peroid of the trig functions gets shorter somewhere, eventually looking broken but oh well. It creates a cool glitch effect if you set to a very large value on the time parameter t, since error","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["trig","exponential"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 c, in vec2 u)\n{\n    \n    \n    vec2 r = iResolution.xy, uv = (u + u - r) / r.y;\n   \n    \n    //float t = iTime * 2.1 + 555622.0;\n    float t = iTime * 2.1;\n\n    float ii = cos(sin((uv.x + t) * 0.25 * cos((uv.y + t) * 0.1) * 1.0 + t));\n   \n    float s = fract(length(uv + vec2(ii * 4.0 + t, -ii)) + t * 0.01);\n   \n    uv *= 2.0;\n\n    s = sin(s * 3.0);\n    \n    uv.x += cos(uv.y + t) * 0.95;\n    uv.y += sin(uv.x + t) * 0.95;\n   \n    float w = sin(uv.x * s + t) - cos(uv.y * s + t);\n    float k = sin(uv.x * 2.0 + s) + cos(uv.y);\n    float z = sin(k * uv.x * uv.y + t);\n    \n    vec3 v = vec3(sin(w + t), cos(k * 1.0 * s + s), z);\n    vec3 j = vec3(w - w, k - z, z * sin(z * 1.0));\n    vec3 h = vec3(w * uv.x, z, k * k * s * cos(uv.x + t));\n    \n    vec3 f = cross(sin(v * 7.0 + t), j) * 0.1 + cross(h, sin(j * 7.0 + t)) * 0.1 + h * 0.1 - j * 0.1 + v * 0.1;\n    f = sin(f * 5.0 + t);\n    f.r = pow(2.1, sin(f.r * 2.0 + t));\n    f.g = pow(1.1, f.g);\n    f.b = pow(1.1, f.b);\n    f = vec3(pow(f.r, 2.0), pow(f.g, 1.5), pow(f.b, 2.0));\n    \n    c = vec4(vec3(f * 0.74), 1.0);\n}","name":"Image","description":"","type":"image"}]}