{"ver":"0.1","info":{"id":"Dt23DW","date":"1673325509","viewed":157,"name":"Texture deformation","username":"Nolesh","description":"Shader that converts a rectangular texture to a texture with polar coordinates. Suitable for making planetary rings.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ring","polarcoordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float Angle = 0.0;\nconst float AngleMin = -3.2;\nconst float AngleWidth = 6.4;\nconst float Radius = -1.0; \nconst float RadiusMin = 1.0; \nconst float RadiusWidth = 1.0; \nconst vec2 Center = vec2(1.0, 1.0); \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 texCoord = fragCoord/iResolution.xy;\n    // Shift origin to texture centre (with offset)\n    vec2 normCoord = vec2(0.0, 0.0);\n    normCoord.x = 2.0 * texCoord.x - Center.x;\n    normCoord.y = 2.0 * texCoord.y - Center.y;\n    // Convert Cartesian to Polar coords\n    float r = length(normCoord);\n    float theta = atan(normCoord.y, normCoord.x);\n\n    // The actual effect\n    r = (r < RadiusMin) ? r : (r > RadiusMin + RadiusWidth) ? r : ceil(r / Radius) * Radius;\n    theta = (theta < AngleMin) ? theta : (theta > AngleMin + AngleWidth) ? theta : floor(theta / Angle) * Angle;\n\n    // Convert Polar back to Cartesian coords\n    normCoord.x = r * cos(theta);\n    normCoord.y = r * sin(theta);\n    // Shift origin back to bottom-left (taking offset into account)\n    texCoord.x = normCoord.x / 2.0 + (Center.x / 2.0);\n    texCoord.y = normCoord.y / 2.0 + (Center.y / 2.0);\n\n    // Output    \n    fragColor = texture(iChannel0, texCoord);\n}","name":"Image","description":"","type":"image"}]}