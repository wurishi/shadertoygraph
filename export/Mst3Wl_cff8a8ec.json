{"ver":"0.1","info":{"id":"Mst3Wl","date":"1452803900","viewed":466,"name":"Music visualiser","username":"Ruzzyr","description":"Just felt like doing a shader and so I did.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","random","musicvisualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 rotateYmat(float ang)\n{\n    return mat3(cos(ang), 0.0, sin(ang),\n                0.0, 1.0, 0.0,\n                -sin(ang), 0.0, cos(ang));\n}\nmat3 rotateXmat(float ang)\n{\n    return mat3(1.0, -0.0, 0.0,\n                0.0, cos(ang), -sin(ang),\n                0.0, sin(ang), cos(ang));\n}\n\nfloat sdSphere( vec3 p, float s )\n{    \n    vec3 o = vec3(sin(p.x*2. + iTime*2.),cos(p.z*10. + iTime*2.),1.0)*0.1;\n\tfloat d = length(p + o)- s;\n\to = vec3(sin(p.x*3. + iTime*2.),cos(p.z*2. + iTime*2.),1.0)*0.2;\n    for(int i = 0; i < 3; i++)\n    {\n        float prism2 = length(p + o*float(i))- s;\n        d = max(d, -prism2);\n    }\n  \treturn d;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv = uv*2.0-1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 dir = normalize(vec3(uv, 1.0))*rotateYmat(iTime)*rotateXmat(iTime);\n    \n    float t = 0.0;\n\tvec3 p;\n    vec3 fc; \n        vec3 o = vec3(0.,0.,-4.)*rotateYmat(iTime)*rotateXmat(iTime);\n        vec4 s = texture (iChannel0,vec2(fragCoord.x/iResolution.x-0.01, 0.75));\n\t\tvec3 cl = vec3(.5 + sin(uv.x+iTime +s.x*5.)*.4,.5 +cos(uv.y+iTime + s.x*5.)*.5,.5);\n        for (int k = 0; k <15; k++)\n        {\n            p = o + t*dir;\n            float d = sdSphere(p, 2.0);\n           \n            {\n                vec3 position = p;\n                float radius = 0.1+float(k)*0.5+clamp(s.x, 0.0, 1.0)*1.;        \n                float lineThickness = 0.02 + float(k)*0.01;\n\n                vec3 o = vec3(sin(position.x*10. + iTime*0.9),sin(position.y*10. + iTime ),cos(position.z*10. + iTime*1.9))*0.5;\n                float condition = step(length(position + o) , radius)\n                                      - step(length(position + o), radius - lineThickness);\n                fc += cl*condition;\n            }\n            \n            t += d;\n        }\n    fragColor = min(vec4(fc+cl*vec3(1.0/(1.0+t*t*0.1)), 1.0), vec4(1.0));  \n}","name":"Image","description":"","type":"image"}]}