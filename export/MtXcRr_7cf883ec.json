{"ver":"0.1","info":{"id":"MtXcRr","date":"1503077448","viewed":665,"name":"Electrical Noise","username":"rizvanner","description":"experiment","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["noise","rizvannernoise","someoftherizvannernoise","rellopticnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float size = 1.0;\n\nfloat r(float n)\n{\n \treturn fract(cos(n * 89.42) * 343.42);\n}\n\nvec2 r(vec2 n)\n{\n \treturn vec2(r(n.x*23.62-300.0+n.y*34.35),r(n.x*45.13+256.0+n.y*38.89)); \n}\n\nfloat worley(vec2 n, float s)\n{\n    float dis = 2.0;\n    for(int x = -1; x<=1; x++)\n    {\n        for(int y =-1; y<=1; y++)\n        {\n            vec2 p = floor(n / s) + vec2(x,y);\n            \n            float d = length(r(p) + vec2(x,y) - fract(n / s));\n            \n            if (dis > d)\n            {\n             \tdis = d;   \n            }\n        }\n    }\n    \n    return dis;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n\n\tvec2 uv = p*vec2(iResolution.x/iResolution.y,1.0);\n\t\n    uv *= size;\n    \n    float f = 0.0;\n    \n\tf  = 0.5000 * worley( 4.0*uv, 1.0 );\n\tf += 0.3000 * worley( 8.0*uv, 1.0);\n\tf += 0.2000 * worley( 16.0*uv, 1.0 );\n\tf += 0.1000 * worley( 32.0*uv, 1.0 );\n    \n    f += 0.0500 * worley( 64.0*uv, 1.0 );\n\tf += 0.0400 * worley( 128.0*uv, 1.0);\n\tf += 0.0300 * worley( 256.0*uv, 1.0 );\n\tf += 0.0200 * worley( 512.0*uv, 1.0 );\n    \n\tf = 0.8*f; //adjust brightness\n\t\n\tfragColor = vec4( vec3(f), 1.0 );\n}","name":"Image","description":"","type":"image"}]}