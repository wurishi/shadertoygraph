{"ver":"0.1","info":{"id":"4dlGzn","date":"1707988203","viewed":57,"name":"Feng shui waves ","username":"Cha","description":"Multiple rippples\n\n//water IOR 1.333\nhttp://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter07.html","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["multipleripples"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"const float speed = 0.05;\n\n\nstruct Wave\n{\n\tvec2 center;\n\tfloat speed;\n\tfloat ripples;\n\tfloat att;\n};\n\t\nWave w0 = Wave(vec2(0.25,-2.23),  0.2*speed,       0.013, 1.0);\nWave w1 = Wave(vec2(0.75,-2.26),  0.4*speed, 0.750*0.013, 0.8);\nWave w2 = Wave(vec2(-0.34,1.73),  0.6*speed, 0.500*0.013, 0.6);\nWave w3 = Wave(vec2(0.65, -1.78), 0.8*speed, 0.250*0.013, 0.4);\nWave w4 = Wave(vec2(0.5, -1.5),   1.0*speed, 0.125*0.013, 0.2);\n\n//Wave ws[4] =  Wave []((w0); w1, w2, w3 );\n\nfloat Height(vec2 center, vec2 uv, float aSpeed, float rippleFactor, float att )\n{\n    float invAr = iResolution.y / iResolution.x;\n\n\tfloat x = (center.x-uv.x);\n\tfloat y = (center.y-uv.y) *invAr;\n\t\t\n\tfloat r = -sqrt(x*x + y*y); \n\t//float  r = -(x*x + y*y);\n\tfloat  h = 0.5*att*sin((r+iTime*aSpeed)/rippleFactor) + att;\t\n\treturn h;\n}\n\nfloat TotalA()\n{\n\treturn w0.att + w1.att + w2.att +  w3.att+ w4.att;\n}\n\nfloat TotalHeight(  vec2 uv)\n{\n\tfloat h; \n\n\th  = Height(w0.center, uv, w0.speed, w0.ripples, w0.att);\n\th += Height(w1.center, uv, w1.speed, w1.ripples, w1.att);\n\th += Height(w2.center, uv, w2.speed, w2.ripples, w2.att);\n\th += Height(w3.center, uv, w3.speed, w3.ripples, w3.att);\n\th += Height(w4.center, uv, w4.speed, w4.ripples, w4.att);\n\t\n\t//return   0.5 +0.5*h/TotalA(); //0.5 + 0.5*z*\n\treturn h /TotalA();\n\t\n}\n\nvec2 getUV(vec2 uv, vec2 off)\n{\n    vec2 pxSize = vec2(1.0/iResolution.x);\n\treturn uv + off*pxSize;\t\n}\n\nvec4 ComputeSurface(vec2 uv)\n{\n    const vec2 size = vec2(1.0,0.0);\n\tconst vec3 off  = vec3(-1.0,0.0,1.0);\n    \n    float s11 = TotalHeight(uv)*1.0;  //KK\n    \n    float s01 = TotalHeight(getUV( uv, off.xy));\n    float s21 = TotalHeight(getUV( uv, off.zy));\n    float s10 = TotalHeight(getUV( uv, off.yx));\n    float s12 = TotalHeight(getUV( uv, off.yz));\n    \n    vec3 va \t= normalize(vec3(size.xy,s21-s11));\n    vec3 vb \t= normalize(vec3(size.yx,s12-s10));\n    vec4 bump \t= vec4( cross(va,vb), s11 );\n\n\tbump.y      = bump.y < 0.0 ? -bump.y : bump.y;\n\t\n\treturn bump;\n}\n\nvec3 colDif = vec3(0.2,0.4,0.8); \nvec3 colSpe = vec3(0.8,0.8,0.8); \nvec3 eye \t= vec3 (0.25,0.33, 1.2);\n\nfloat fresnelMode = 2.0;\n\nfloat FresnelTerm(vec3 eyeVector, vec3 n)\n{\n\tfloat fresnelTerm = 1.0;\n\t\n\tif ( fresnelMode == 0.0 )\n\t{\n\t\tfresnelTerm = dot(eyeVector, n);\n\t\t//correction\n\t\tfresnelTerm = 1.0-fresnelTerm*1.3;\n\t}\n\tif ( fresnelMode == 1.0 )\n\t{\n\tfresnelTerm = 0.02+0.97*pow((1.0-dot(eyeVector, n)),5.0);\n\t}\n\tif ( fresnelMode == 2.0 )\n\t{\n\t\tfloat fangle = 1.0+dot(eyeVector, n);\n\t\tfangle = pow(fangle ,5.0);\n\t\tfresnelTerm = 1.0/fangle;\n\t}\n\treturn clamp(fresnelTerm,0.0,1.0);\n}\n\nvec3 Shade(vec3 pos, vec3  n, vec2 uv)\n{\n\t//vec3 light = normalize(vec3(0.5-cos(iTime), -0.5, -1.0));\n\tvec3 light = normalize(vec3(0.2*cos(5.0*iTime), -0.5, -1.0));\n\t\n\t\t//diff\n\tfloat  dif = dot(n, light); \n\tdif = max (dif, 0.0);\n\t\n\t//specular \n\t//vec3 ref = normalize(vec3(0.33*cos(0.25*iTime),-0.25,-0.75));\n\tvec3 eyeVector = normalize(pos - eye);\n\tvec3 ref =  reflect(eyeVector, n);\n\t\n\tfloat spe = dot(ref, n);\n\tspe = max (spe, 0.0);\n\tspe = spe*spe ;\n\tspe = spe*spe;\n\t\n\t\n\tvec2 uv0 = vec2( uv.x + 0.001*cos(uv.x+3.0*iTime), uv.y + 0.001*cos(uv.y+ 4.0*iTime));\n\t\n\tvec3 bg  =  0.5*texture( iChannel2, uv0*2.0 ).xyz;\n\t     bg  += 0.5*texture( iChannel0, uv0 ).xyz;\n\tvec3 sk  = texture( iChannel1, uv ).xyz;\n\t\n\t//return dif*colDif;\n\t//return spe*colSpe ;\n\tvec3 shd = dif*colDif + spe*colSpe;\n\tfloat f = FresnelTerm(eyeVector, n);\n\t\n\t//return 0.4*bg + 0.6*(shd );\n\t//return f*shd + (1.0-f)*sk ;\n\t//return vec3(f);\n    // return vec3 (n.xyz*1.0);\n\t//return vec3 (n.yyy*3.5);\n\t//return eyeVector;\n\t\n\treturn 0.4*bg + 0.6*(f*shd + (1.0-f)*sk );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t    \n\tvec4 bump = ComputeSurface(uv);\n\t\t\n\t//shade \t\n\tvec3 pos = vec3(uv, bump.w);\n\tvec3 shd = Shade(pos, bump.xyz, uv);\n\t\t\t\n\tfragColor = vec4(shd,1.0);\n\t//fragColor = vec4(bump.xyz*5.0,1.0);\n}\n","name":"Image","description":"","type":"image"}]}