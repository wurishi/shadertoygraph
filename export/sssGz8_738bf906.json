{"ver":"0.1","info":{"id":"sssGz8","date":"1615519800","viewed":66,"name":"What's wrong here?","username":"Rugged","description":"How is the buffer saving the wrong data? What am I doing wrong?  -- essentially count should be saved as .1 but it isn't.\n\n-- fixed, thank you @mla and @FabriceNeyret2 !","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["bug"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\n    Please help the buffer isn't saving count as 0.1 like it\n    should.\n    \n    --fixed by @mla and @FabriceNeyret2\n\n*/\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 fragF = floor(fragCoord);\n    \n    \n    //load count from buffer\n    float c = texelFetch(iChannel0, ivec2(0, int(iResolution.y - 10.)), 0).x;\n    \n    //fill the left half of the screen with what shadertoy thinks-\n    // vec3(10. / 100.) is\n    vec3 col = vec3(c);\n    \n    //fill the right half of the screen with vec3(10. / 100.)\n    if (int(fragCoord.x) >= int(iResolution.x / 2.)){\n        col = vec3(10. / 100.);\n    }\n    \n    //col = texture(iChannel0, uv).xyz;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define count 10.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec2 fragF = floor(fragCoord);\n    \n    vec3 col = texture(iChannel0, uv).xyz;\n    \n    if(ivec2(fragCoord) == ivec2(0, int(iResolution.y - 10.))){\n        col = vec3(count / 100.);\n        \n    }\n    else{\n    \n        float uvSL = 1. / count;\n    \n        col = vec3(1. - (floor(uv.x * count) * uvSL));\n    }\n    \n    \n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}