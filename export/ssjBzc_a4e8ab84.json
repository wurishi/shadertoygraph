{"ver":"0.1","info":{"id":"ssjBzc","date":"1646816061","viewed":112,"name":"My Sobel","username":"baby4mula","description":"Sobel Edge Detection","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sobel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 sobel(vec4 inColor){\n    // TODO\n    return inColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Sample the color\n    vec4 color = texture(iChannel0, uv);\n\n    // Output to screen\n    fragColor = sobel(color);\n}","name":"Image","description":"","type":"image"}]}