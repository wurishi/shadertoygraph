{"ver":"0.1","info":{"id":"4fc3DS","date":"1712053799","viewed":37,"name":"Adnan-A3-2","username":"adnankhan","description":"Voronoi Noise for water effects.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["naturaleffects"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// create random numbers for x and y\nvec2 N22(vec2 p) {\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34,345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\t\n}\n\n\n// Water Simulation with wave-like Voronoi\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Create wave effect using sine function\n    float wave = sin(uv.x * 10.0 + iTime) * 0.1;\n    wave += sin(uv.y * 15.0 + iTime * 1.5) * 0.1;\n    uv += wave;\n    \n    // Use Voronoi for ripples\n    float minDist = 1.0;\n    for (float i = 0.0; i < 50.0; i++) {\n        vec2 seed = vec2(i) * 0.2;\n        vec2 ripplePos = N22(seed) * 2.0 - 1.0;\n        float d = length(uv - ripplePos);\n        if (d < minDist) {\n            minDist = d;\n        }\n    }\n    \n    // Combine ripples with wave effect\n    float ripples = smoothstep(0.1, 0.3, minDist);\n    \n    // Water color and reflections\n    vec3 color = vec3(0.0, 0.5, 0.7) + ripples * 0.3;\n    \n    fragColor = vec4(color, 1.0);\n}\n\n\n\n\n","name":"Image","description":"","type":"image"}]}