{"ver":"0.1","info":{"id":"WsXSDH","date":"1580928837","viewed":837,"name":"Cheeseburger V2","username":"Xor","description":"Version 2 of the [url=https://www.shadertoy.com/view/Wsf3D7]\"cheeseburger\" shader[/url]. This code is not designed to be readable, sorry!","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["cheese","tomato","plate","cheeseburger","burger","lettuce"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\t\"Cheeseburger V2\" by Xor (@XorDev)\n\n\tThis is a revision of my original \"Cheeseburger\" shader: https://www.shadertoy.com/view/Wsf3D7\n\n\n\tLicense Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n*/\n\n\n//Anti-Aliasing level. Use 2, 3 or 4 for better quality.\n#define AA 1.\n\nvec3 dir = normalize(vec3(-4,1,3));\n\nfloat soft(float a, float b, float n)\n{\n \treturn log(exp(a*n)+exp(b*n))/n;   \n}\nvec3 hash(vec3 p)\n{\n \treturn fract(sin(p*mat3(45.32,32.42,-41.55,65.35,-43.42,51.55,45.32,29.82,-41.45))*vec3(142.83,253.36,188.64));\n}\nvec3 value(vec3 p)\n{\n    vec3 f = floor(p);\n    vec3 s = p-f;\n    s *= s*(3.-s-s);\n    const vec2 o = vec2(0,1);\n    \n    return mix(mix(mix(hash(f+o.xxx),hash(f+o.yxx),s.x),\n        \t\t   mix(hash(f+o.xyx),hash(f+o.yyx),s.x),s.y),\n               mix(mix(hash(f+o.xxy),hash(f+o.yxy),s.x),\n                   mix(hash(f+o.xyy),hash(f+o.yyy),s.x),s.y),s.z);\n}\nfloat worley(vec3 p)\n{\n    float d = 1.;\n    for(int x = -1;x<=1;x++)\n    for(int y = -1;y<=1;y++)\n    for(int z = -1;z<=1;z++)\n    {\n    \tvec3 f = floor(p+vec3(x,y,z));\n        vec3 v = p-f-hash(f);\n        d = soft(d,dot(v,v),-6.);\n    }\n    return d;\n}\nfloat seed(vec3 p)\n{\n    float d = 1.;\n    for(int x = -1;x<=1;x++)\n    for(int y = -1;y<=1;y++)\n    {\n    \tvec3 f = floor(vec3(p.xy,0)+vec3(x,y,0));\n        vec3 h = hash(f)*vec3(1,1,63);\n        vec3 v = mat3(cos(h.z),sin(h.z),0,sin(h.z),-cos(h.z),0,0,0,1)*(p-f-h*.9)*vec3(1.7,1,0);\n        d = min(d,dot(v,v)+step(9.,length(f+.6))+step(p.z,2.));\n    }\n    return max(.05-d,0.);\n}\nfloat cheese(vec3 p)\n{\n    p.z += -.27+.03*p.x*p.x+.1*soft(dot(p.xy,p.xy)-3.5,0.,10.);\n \treturn (length(max(abs(p)-vec3(1.6,1.6,0),0.))-.02)*.8;\n}\nfloat model(vec3 p)\n{\n    float d = length(p)-2.5;\n    float m = soft(length(p.xy)-3.,pow(p.z-soft(d,0.,20.)*.7+1.1,2.)-.01,10.);\n    m = min(m,soft(p.z+1.2,-abs(mod(p.y+3.,4.)-2.),12.));\n    if (d<.1)\n    {\n    \tvec3 c = vec3(p.xy,max(p.z-.35,0.)*1.6);\n    \tfloat b = soft(length(c+.05*sin(c.yzx*2.))*.6-1.15,.41-abs(p.z+.15)-.02*c.x*c.x,40.);\n        m = min(m,soft(b,-1.-p.z,20.));\n    \tm = min(m,soft(length(p.xy+.1*sin(c.yx*2.))-2.1,pow(p.z-.03+.03*p.x*p.x,2.)-.04,12.));\n    \tm = min(m,soft(length(p)-1.9,abs(p.z+.4-.03*p.y*p.y)-.1,80.));\n    \tm = min(m,cheese(p));\n        vec3 r = value(p/dot(p,p)*vec3(14,14,1))-.5;\n        vec3 l = p+vec3(0,0,.46)+vec3(0,0,length(p.xy)-1.8)*.3*cos(r.x*5.-r.y*5.);\n    \tm = min(m,soft(length(l)-2.1-.4*r.z,abs(l.z)-.02,28.)*.8);\n        \n        float s = .2*seed(p*5.);\n        return m-s;\n    }\n\treturn min(d,m);\n}\nfloat bump(vec3 p)\n{\n    float b = .007*max(1.-1.5*abs(p.z),0.)*worley(p*18.);\n          b += .001*(worley(p*30.)+.5*worley(p*70.))*step(-.99,p.z-max(length(p.xy)-2.,0.));\n \treturn model(p)+b*step(.01,cheese(p));\n}\nvec3 normal(vec3 p)\n{\n\tvec3 n = vec3(-1,1,0)*.001;\n    return normalize(bump(p+n.xyy)*n.xyy+bump(p+n.yxy)*n.yxy+bump(p+n.yyx)*n.yyx+bump(p+n.xxx)*n.xxx);\n}\n\nfloat light(vec3 p,vec3 n)\n{\n    float d = pow(2.-1.*dot(n,dir),-1.);\n    d /= (1.-min(dot(dir,p),0.)*exp(.6-length(cross(dir,p))));\n    \n    float a = .5+.5*model(p+n*.05)/.05;\n    a *= .6+.4*model(p+n*.1)/.1;\n    a *= .7+.3*model(p+n*.2)/.2;\n    return  d*a;\n}\nvec3 Tex(vec3 p,vec3 r)\n{\n    vec3 Rad = value(p/dot(p,p)*vec3(14,14,.2))-.5;\n    vec3 l = p+vec3(0,0,.46)+vec3(0,0,length(p.xy)-1.8)*.3*cos(Rad.x*5.-Rad.y*5.);\n   \n    float t = max(length(p)-1.9,abs(p.z+.4-.03*p.y*p.y)-.1);\n    \n    vec3 n = normal(p);\n    float w = worley(p*11.)*(.05+.95*smoothstep(.7,.4,abs(p.z+.04)))*(abs(n.z)*.7+.3);\n    \n \tfloat m = abs(p.z-.03+.03*p.x*p.x)-.3;\n    float d = light(p,n);\n    float s = max(dot(reflect(r,n),dir),0.);\n    float f = length(p.xy);\n    \n    vec3 b = vec3(1,.635,.32)+.8*smoothstep(.9,.4,abs(p.z+.1)+.4*w)+.4*s*s+vec3(.7+.3*s*s*s)*seed(p*5.)/.1;\n    vec3 c = mix(b,vec3(.7,.4,.2)-.6*w+.6*s*s*s,step(m,-.08));\n    c = mix(c,vec3(.5,.8,.2)-.4*w+.6*s,step(abs(l.z),.04));\n    c = mix(c,vec3(1,.6,.1)+.6*s*s,step(cheese(p),.002));\n    c = mix(c,vec3(1,.2,.1)+s*s,step(t,.001));\n    c = mix(c,vec3(1.5+.3*smoothstep(.03,.04,abs(f-2.6)))+s*s*s*s,step(p.z-max(f-2.,0.),-.99));\n    c = mix(c,pow(texture(iChannel0,p.xy/3.).rgb,vec3(1,.9,1.2))*.7+.1,step(p.z,-1.18));\n    \n    return c*d;\n}\nvoid mainImage( out vec4 Color, in vec2 Coord)\n{\n    vec2 a = vec2(iTime*.1,.2*cos(iTime*.1)+1.8);\n    vec3 x = vec3(cos(a.x)*sin(a.y),sin(a.x)*sin(a.y),cos(a.y)),\n         y = normalize(cross(x,vec3(0,0,-1))),\n    \t z = normalize(cross(x,y));\n    \n    mat3 m = mat3(x,y,z);\n    \n    vec3 c = vec3(0);\n    \n    for(float i = 0.;i<AA;i++)\n    for(float j = 0.;j<AA;j++)\n    {\n        vec4 p = vec4(m*vec3(-6,0,2.*cos(a.y)+.2),0);\n        vec3 r = m*vec3(1,(vec2(i,j)/AA+Coord-.5*iResolution.xy)/iResolution.y);\n        for(int I = 0;I<800;I++)\n        {\n            float s = model(p.xyz);\n            p += vec4(r,1)*s;\n            if ((p.w>20.) || (s<.001)) break;\n        }\n    \tc += mix(Tex(p.xyz,r),vec3(.9)+.1*dot(dir,r),smoothstep(.5,1.,length(p.xyz)/10.));\n    }\n    Color = vec4(c/AA/AA,1);\n}","name":"Image","description":"","type":"image"}]}