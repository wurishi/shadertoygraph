{"ver":"0.1","info":{"id":"dl3yz4","date":"1698936240","viewed":31,"name":"Optical Descent","username":"CyberCat45","description":"This is my first custom shader. Pretty cool!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["illusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14169265358979323846264\n\nvec3 palette( float t ) {\n    vec3 a = vec3(0.8392, 0.0, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, s, -s, c);\n\treturn m * v;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (gl_FragCoord.xy * 2.0  - iResolution.xy) / iResolution.y;\n    float d = (length(uv ) - 0.5);\n    d = sin(d * 80.0 + iTime * 10.0) / 0.5;\n    d = (step(d, 0.1 * sin(iTime)));\n    uv = rotate(uv, iTime);\n    d -= step(mod((uv.x + (5.0 * sin(uv.y * 5.0)) / 5.0 * tan(iTime)), 0.2), 0.05 * abs(sin(iTime * PI)));\n    d -= step(mod((uv.y + (5.0 * sin(uv.x * 5.0)) / 5.0 * tan(iTime)), 0.2), 0.05 * abs(sin(iTime * PI)));\n    vec3 color = palette(length(uv)+ iTime*0.4) * d;\n    //Delete comment (//) on line 33 to see in grayscale\n    //color = vec3(d);\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}