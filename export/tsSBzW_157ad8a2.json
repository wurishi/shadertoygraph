{"ver":"0.1","info":{"id":"tsSBzW","date":"1589579253","viewed":160,"name":"improved plasma","username":"foxiepaws","description":"better version of my old plasma code","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["plasma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.141579\n\nmat2 rot(float deg) {\n    deg /= 180./3.141579; // convert to radians;\n    float s=sin(deg), c=cos(deg);\n    return mat2(c, -s, s, c);\n}\n\nvec3 colormap(float v) {\n   float r = (.5+.5*sin(pi * v));\n   float g = ( .5 + .5 * sin(pi * v + 2.0 * pi / 3.0));\n   float b = ( .5 + .5 * sin(pi * v + 4.0 * pi / 3.0));\n   return vec3(r,g,b);\n}\n\n\nfloat calc (vec2 cv, vec2 uv, float t,float cost3,float sint5,float sint2) {\n \tfloat v = 0.0;\n    float x = uv.x;\n\tfloat y = uv.y;\n    float cx = cv.x;\n\tfloat cy = cv.y;\n    float v0 = sin((x * 10.0) + t);\n    float v1 = sin(10.0 * ( x * sint2 + y * cost3));\n    float v2 = sin(sqrt(100.0*((cx*cx)+(cy*cy)))+1.0+t);\n    v = ((v0 + v1 + v2) + cos(v2 + y + t)) / 2.0;\n    return v;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 ov = uv;\n    uv.x += sin((iTime/1.)/5.0);                    // x movement\n    uv.y += cos((iTime/1.)/3.0);                    // y movement\n\tuv *= .5 * (2.+(1.*sin(2.*pi*.04*iTime)/10.));  // zoom\n    uv *= rot(22.5+(180.*sin(2.*pi*.01*iTime)));    // rotation\n    float t = iTime;\n    float tt=t / 1.0;\n    float cost3 = cos(tt/3.0);\n    float sint5 = sin(tt/5.0);\n    float sint2 = sin(tt/2.0);\n    float v = calc(uv,ov,tt,cost3,sint5,sint2);\n\tvec3 hole = colormap(v);\n   \n    fragColor = vec4(hole,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}