{"ver":"0.1","info":{"id":"wdVXDw","date":"1574456405","viewed":469,"name":"distortion and edges","username":"sirjofri","description":"some post process distortion and edge detection. Use mouse to control values.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["distortion","postprocess","edge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// distance of edge detection\n#define d 0.0005\n#define pi 3.141592654\n\n// border\nfloat b(vec2 uv)\n{\n    return uv.x*(1.-uv.x)*uv.y*(1.-uv.y);\n}\n\n// wobbling\nfloat s(vec2 uv)\n{\n    uv += vec2(sin(iTime), cos(iTime));\n    return sin(uv.x*50.+cos(uv.x*10.)*2.)+cos(uv.y*30.+uv.x*30.*sin(uv.x*3.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 mouse = vec2(iMouse.x <= 0. ? .5 : iMouse.x/iResolution.x, iMouse.y <= 0. ? .8 : iMouse.y/iResolution.y);\n    \n    vec2 puv = uv + vec2(cos(iTime*3.), sin(iTime*2.))*0.3;\n    \n    float n = smoothstep(.9, 1., sin(puv.x*pi)*sin(puv.y*pi)*sin(puv.x*pi/2.+puv.y*pi/2.)*cos(puv.x*pi/2.-puv.y*pi/2.));\n    vec2 dir = (uv-vec2(.5))*n;\n    vec2 nuv = uv+dir*mouse.x;\n    \n    float t = s(uv)*.005*b(uv);\n    \n    float border = pow(b(uv), .2);\n\tvec3 t1 = texture(iChannel0, nuv+t+vec2(d)).rgb;\n    vec3 t2 = texture(iChannel0, nuv+t+vec2(-d)).rgb;\n    \n    float edges = float(smoothstep(mouse.y, 1., t2+(1.-t1)));\n    vec3 col = texture(iChannel0, nuv+t).rgb * edges * border;\n\n    fragColor = vec4(vec3(col), 1.);\n}","name":"Image","description":"","type":"image"}]}