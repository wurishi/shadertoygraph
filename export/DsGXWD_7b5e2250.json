{"ver":"0.1","info":{"id":"DsGXWD","date":"1681930482","viewed":81,"name":"Conduit fork with comments","username":"Oman395","description":"Added comments explaining, to the best of my ability, the crazy stuff this is doing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"Mlf3RS","parentname":"Conduit"},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Used to transform from down and left to up and right?\n#define S sin(position.z*.2)*vec4(1,2,0,0)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Position\n    // Don't think the A component does anything\n    vec4 position = vec4(fragCoord,0.,1.) / iResolution.xyxy-.5,\n    // Direction\n    direction=position,\n    // Distance to wall\n    dist;\n    // Move start position forward\n    position.z += iTime*4.;\n    // Move position with S\n    position -= S;\n    // Ray marching loop\n    for(float i=2.; i>0.; i-=.01) {\n        // Distance to wall would be equal to the x/y coordinates if they\n        // are centered on the center of the rectangle\n        // This just does that\n        dist = abs(mod(position + S, 8.)-4.);\n        // Sets t to be distance to closest wall\n        dist = vec4(min(dist.x, dist.y))\n        // Adjusts this distance by the cubemap to add texture to the wall\n        -texture(iChannel0,dist.zxy-3.);\n        // The p.arra * .02 adds red as the position moves forward from the original position, i / p.a dims the white color as the position moves forward\n        fragColor = position.arra * .02 + i / position.a;\n        // Exit if distance is close enough to consider hitting the wall\n        if(dist.x<.01) break;\n        // Move p forward by distance to nearest wall (ray marching)\n        position -= direction*dist.x*.2;\n     }\n}\n","name":"Image","description":"","type":"image"}]}