{"ver":"0.1","info":{"id":"wl2GD1","date":"1559447222","viewed":134,"name":"Hex1","username":"cdhanna92","description":"I dunno, its trippy to stare at....","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nfloat hexDist(vec2 n) {\n\tn = abs(n);\n    float c = dot(n, normalize(vec2(1., 1.73)));\n    c = max(c, n.x);\n    return c;\n}\n\nbool inHex(vec2 n, float r) {\n\treturn hexDist(n) < r;// && hexDist(n) > r-.05;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat s = 20. + 15. * sin(cos((iTime * .5)));    \n    float r = .5;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.y;\n\n    uv -= vec2(1. + .15 *cos(iTime * .2), .5 + .15*sin(iTime * .3));\n    uv = rotate(uv, 6.28 * fract(.1 * iTime));\n    \n    \n    vec2 hex = vec2(1., 1.73);\n    vec2 halfHex = hex * .5;\n    \n    \n    vec2 f1 = mod(uv * s, hex) - halfHex;\n    vec2 f2 = mod(uv * s - halfHex, hex) - halfHex;\n    \n    vec2 gv;\n    if (length(f1) < length(f2)){\n    \tgv = f1;\n    } else {\n    \tgv = f2;\n    }\n    vec2 id = (uv * s) - gv;\n\n    vec3 col = vec3(0.);\n    \n    float r2 = cos(.5*iTime+id.x+id.x*id.x+id.y*cos(id.x * id.y)) * r;\n    float r3 = sin(.5*iTime-id.x-id.x*id.x-id.y) * r;\n    \n    col.rg = (id.xy+s) * (1./s);\n  \tcol.rg *= cos(col.rg) / sin(col.rg);\n    \n    col.rgb *= inHex(gv, r2) ? 1. : .5; \n    col.rgb -= inHex(gv, r - .05) ? .5 : 0.;\n    \n    col.b = cos(col.r) * .25;\n    \n    col.rgb += .5 + .25 * cos(iTime * .1);\n    \n    \n    \n    \n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}