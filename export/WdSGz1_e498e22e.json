{"ver":"0.1","info":{"id":"WdSGz1","date":"1548087868","viewed":3408,"name":"Frosted Glass Shader","username":"aziis98","description":"A simple shader for frosted glass","likes":37,"published":1,"flags":0,"usePreview":1,"tags":["glass","frosted"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nvec2 dist(vec2 pos, vec4 noise)    \n{\n    return pos + \n        0.1 * vec2(\n        \tsin(pos.x * 10.0) + sin(pos.x * 3.14 / 2.0),\n            sin(200.0 + pos.y * 10.0) + sin(pos.y * 3.14 / 2.0 + 20.0)\n        );\n}\n*/\n\nfloat stepfun(float x) {\n\treturn (sign(x) + 1.0) / 2.0;\n}\n\nfloat square(vec2 pos) {\n    return (stepfun(pos.x + 1.0) * stepfun(1.0 - pos.x)) *\n        (stepfun(pos.y + 1.0) * stepfun(1.0 - pos.y));\n}\n\nvec2 dist(vec2 pos)\n{\n    vec2 offset = pos + vec2(cos(iTime * 2.0) / 8.0, \n                              sin(iTime * 2.0) / 8.0);\n    \n\treturn pos + square((offset - 0.5) * 5.0) * \n        texture(iChannel1, (offset - 0.5) * 5.0).xy * 0.05;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Output to screen\n    fragColor = texture(iChannel0, dist(uv));\n}","name":"Image","description":"","type":"image"}]}