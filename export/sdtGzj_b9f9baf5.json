{"ver":"0.1","info":{"id":"sdtGzj","date":"1630251117","viewed":209,"name":"wisps","username":"pali6","description":"This is not quite what this was supposed to be originally but I don't feel like tinkering with it more right now, maybe later. ü§∑‚Äç‚ôÄÔ∏è\nClick to make a new wisp.","likes":9,"published":3,"flags":32,"usePreview":0,"tags":["simulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n    fragColor.yz = 0.5 * (fragColor.yz + vec2(1, 1)) * fragColor.x;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define N 4\n#define WF 0.\n\nvec2 norm(vec2 v)\n{\n    if(length(v) <= 0.000001)\n        return v;\n    return normalize(v);\n}\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 mouse = iMouse / iResolution.x;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    if(iFrame <= 10)\n    {\n        fragColor = texture(iChannel1, uv) - vec4(0., 0.5, 0.5, 0.);\n        return;\n    }\n    if(mouse.w > 0. && distance(fragCoord, iMouse.xy) < 10.)\n    {\n        fragColor = vec4(1., rand(vec2(iTime, 42.) + mouse.xy) * 2. - 1., rand(vec2(iTime, 43.) + mouse.xy) * 2. - 1., 1.);\n        return;\n    }\n    ivec2 pos = ivec2(fragCoord);\n    \n    vec2 finalVel = vec2(0);\n    float finalAmount = 0.;\n    for(int dx = -1; dx <= 1; dx++)\n    {\n        for(int dy = -1; dy <= 1; dy++)\n        {\n            if(abs(dx) + abs(dy) != 1)\n                continue;\n            vec4 cur = texelFetch(iChannel0, pos + ivec2(-dx, -dy), 0);\n            vec2 cVel = cur.yz;\n            float cAmount = cur.x;\n            float mul = max(0., dot(vec2(dx, dy), cVel)) / (abs(cVel.x) + abs(cVel.y) + 0.000000001);\n            finalVel += cVel * cAmount * mul;\n            finalAmount += cAmount * mul;\n        }\n    }\n    finalVel = norm(finalVel);\n\n    vec2 alignVel;\n    vec2 cohesVel;\n    vec2 avoidVel;\n    for(int dx = -N; dx <= N; dx++)\n    {\n        for(int dy = -N; dy <= N; dy++)\n        {\n            vec4 cur = texelFetch(iChannel0, pos + ivec2(dx, dy), 0);\n            vec2 cVel = cur.yz;\n            float cAmount = cur.x;\n            alignVel += cVel * cAmount;\n            cohesVel += vec2(dx, dy) * cAmount;\n            avoidVel += norm(vec2(dx, dy)) * (1. / (cAmount * cAmount * cAmount + 0.1));\n        }\n    }\n    vec2 wallVel = vec2(1. / (WF + uv.x), 0.) +\n        vec2(0., 1. / (WF + uv.y)) +\n        vec2(0., -1. / (1. - uv.y - WF)) +\n        vec2(-1. / (1. - uv.x - WF), 0.);\n    vec2 randVel = norm(vec2(rand(vec2(pos) + vec2(iTime, 1.)), rand(vec2(pos) + vec2(iTime, 0.))) * 2. - vec2(1, 1));\n    alignVel = norm(alignVel);\n    cohesVel = norm(cohesVel);\n    finalVel = norm(\n        1. * finalVel + \n        0.3 * alignVel + \n        0.4 * cohesVel + \n        0.004 * avoidVel + \n        0.01 * wallVel + \n        0.1 * randVel\n    );\n    \n    fragColor = vec4(finalAmount, finalVel, 1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}