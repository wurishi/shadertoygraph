{"ver":"0.1","info":{"id":"ddj3R3","date":"1667972081","viewed":171,"name":"dirty wigglers","username":"lomateron","description":"click to paint\nin bufferA change line19 to 7U for clean wigglers","likes":7,"published":3,"flags":32,"usePreview":0,"tags":["automata"],"hasliked":0,"parentid":"DdfGzf","parentname":"2D worlds explorer"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int m = tz+1;\n    int i = iFrame%m;\n    //if(i!=0){discard;}  //comment out to see more frames but more flicker too\n    vec4 a = texelFetch(iChannel0,ivec2(fragCoord),0);\n    uint n = (1U<<m)-1U;\n    uint b = floatBitsToUint(a.x)&n;\n    uint c = ((b>>i)|(b<<(m-i)))&n;\n    //fragColor = cos(float(c)*88.8888+vec4(3,1,2,4))*.5+.5;\n    if(tz==1){fragColor = vec4(float(c)/float(n));}\n    if(tz==2){fragColor = vec4((c>>0)&1U,(c>>1)&1U,(c>>2)&1U,0);}\n    if(tz> 2){fragColor = cos(float(c)/float(n)*4.4+vec4(2,3,4,5)+.8);}\n    //fragColor = vec4(b&1U);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define rz 120.  //size of each world in pixels\n#define sz  3.   //size of kernel across space\n#define tz  2    //size of kernel across time          must be <= 32\n#define nz  .05  //size of mouse click noise ball\n\n//exploration works when texture is 1920*1080\n//if you dont have 1920*1080 texture\n//then you must change rz to textureWidth/16\n\n//1920*1080 and rz=120 will show 16*9 worlds simulations\n//becos 1920/rz*1080/rz = 16*9\n//mouse click on each world will show the next 16*8 worlds\n//go to BufferA line24, change 0U to 1U to keep exploring next 16*8*16*8 worlds\n//there are 2^(sz*sz*tz+1) different worlds to explore\n//arktually 2^(sz*sz*tz  ) becous half are worlds inverted in color\n\n//next will be 1D worlds explorer","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"uint read(vec2 u, vec2 m)\n{\n    vec2 o = mod(u+m,iResolution.xy);\n         u = floor(u/iResolution.xy)*iResolution.xy+o;\n    return floatBitsToUint(texelFetch(iChannel0,ivec2(u),0).x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    float ck = -floor((sz-1.)*.5);    //center the kernel\n    float ev = float(mod(sz,2.)==0.); //move and resize kernel when sz = even\n    uint o = 0U;                      //sum of all bits\n                          float n = (float(iFrame&1)-1.)*ev;\n    for(int   t=0 ; t<tz; ++t){ float m = n*(1.-float(t&1)); float s2 = sz-float(t&1)*ev; \n    for(float i=0.; i<s2; ++i){\n    for(float j=0.; j<s2; ++j){ uint r = read(u,vec2(i,j)+ck+m);\n                                o += (r>>t)&1U;\n    }}}                         o += (read(u,vec2(0))>>2)&1U;\n    \n    uint a = +6U          //change to 7U for clean wiglers\n             +16U*8U*8U;\n    o = (read(u,vec2(0,0))<<1U) | ((a>>(o&31U))&1U);\n    \n    vec2 v = (u        *2.-iResolution.xy)/iResolution.y;\n    vec2 m = (iMouse.xy*2.-iResolution.xy)/iResolution.y-v;\n    if(iFrame==0)\n    {\n        float r = fract(cos(dot(u,vec2(1.76543,iTime+9.)))*5467.5678)*float(1<<tz);\n              r*= step(dot(v,v),nz);\n        o = uint(r+1.);\n    }\n    if(iMouse.z>.5 && dot(m,m)<.005)\n    {\n        float r = fract(cos(dot(u,vec2(1.76543,iTime+9.)))*5467.5678)*float(1<<tz);\n        o = uint(r);\n    }\n    fragColor = vec4(uintBitsToFloat(o));\n}","name":"Buffer A","description":"","type":"buffer"}]}