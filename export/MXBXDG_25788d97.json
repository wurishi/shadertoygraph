{"ver":"0.1","info":{"id":"MXBXDG","date":"1712668697","viewed":52,"name":"Never seen snow","username":"JumaGFX","description":"Fun weird snow shader & in fact I don't ever recall seeing snow :>","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["snow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//ref from https://www.shadertoy.com/view/4dSXDK\n#define time0 (iTime*0.1)\n#define time1 (iTime)\n#define time2 (iTime*10.)\n#define snowlayers 6.\n#define ITERS 6\n//Dave Hoskins 1x1 hash\nfloat hash11(float p)\n{p = fract(p * .1031); p *= p + 33.33; p *= p + p; return fract(p);}\n//Dave Hoskins 1x2 hash\nfloat hash12(vec2 p)\n{vec3 p3  = fract(vec3(p.xyx) * .1031);p3 += dot(p3, p3.yzx + 33.33);return fract((p3.x + p3.y) * p3.z);}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float s = 0.;\n    for(float i = 1.; i < snowlayers + 1.; i++)\n    {\n        vec2 suv = uv;\n        float n = (i/snowlayers);\n        suv.x -= time0 * ((1. + i)*1.5);\n        suv.y += time0 * 5.;\n\n        //make a better ramp method iuc\n        float ramp = 50. * n;// - (i*20.);\n        suv *= ramp;\n        \n        float r = hash12(floor(suv + (i * 10.)));\n        \n        s = r > 0.96 ? n : s;\n    }\n    \n    s += 0.3;\n    \n    float topmask = smoothstep(0.2, 0., uv.y);\n    s -= topmask / 5.;\n    \n    float botsnow = smoothstep(0.3, 0., uv.y);\n    s += botsnow;\n    \n    vec3 snow = vec3(s,s,1);\n    fragColor = vec4(snow,1.0);\n}","name":"Image","description":"","type":"image"}]}