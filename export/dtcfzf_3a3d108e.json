{"ver":"0.1","info":{"id":"dtcfzf","date":"1701439755","viewed":18,"name":"Gold, Silver, Copper","username":"sakasaka13","description":"授業のコードをもとに手を加えた。\n座標と半径の文字を別のものに変えて球を３つに複製した後に、それぞれに座標の数値を与えて少し重なる位置へ移動させた。また、それぞれの球の色を金・銀・銅に近づくように変えた。その他、数値を少し変えて金属に見えるような反射と明るさになるように工夫した。","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["metal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord, ab = fragCoord, cd = fragCoord;\n    \n    vec3 col = vec3(0.9, 0.8, 0.8);\n    \n    \n    uv -= vec2(0.65, 0.5) * iResolution.xy;\n    \n    float r = 70.0;\n    if(uv.x * uv.x + uv.y * uv.y < r * r){\n        float z = sqrt(r * r -uv.x * uv.x - uv.y * uv.y);\n        vec3 normal = normalize(vec3(z, uv.y, uv.x));\n        vec3 light = normalize(vec3(1.0, 1.0, 1.0));\n        float diffuse =clamp(dot(normal, light), 0.0, 1.0);\n        float I = diffuse * 0.8 + 0.3;\n        col = vec3(I, diffuse, diffuse);\n        \n        vec3 d = vec3 (0.0, 0.0, -1.0);\n        vec3 reflection = reflect(d, normal);\n        \n        col = vec3(0.9, 0.5, 0.2)*I +\n            vec3(1.0, 1.0, 1.0)*pow(clamp(dot(reflection,light), 0.0, 1.0), 15.0);\n       \n        }\n        \n        \n    ab -= vec2(0.35, 0.5) * iResolution.xy;\n    \n    float t = 70.0;\n    if(ab.x * ab.x + ab.y * ab.y < t * t){\n        float z = sqrt(t * t -ab.x * ab.x - ab.y * ab.y);\n        vec3 normal = normalize(vec3(z, ab.y, ab.x));\n        vec3 light = normalize(vec3(1.0, 1.0, 1.0));\n        float diffuse =clamp(dot(normal, light), 0.0, 1.0);\n        float I = diffuse * 0.8 + 0.3;\n        col = vec3(I, diffuse, diffuse);\n        \n        vec3 d = vec3 (0.0, 0.0, -1.0);\n        vec3 reflection = reflect(d, normal);\n        \n        col = vec3(0.7, 0.7, 0.7)*I +\n            vec3(1.0, 1.0, 1.0)*pow(clamp(dot(reflection,light), 0.0, 1.0), 15.0);\n        \n        }\n    \n    cd -= vec2(0.5, 0.35) * iResolution.xy;\n    \n    float p = 70.0;\n    if(cd.x * cd.x + cd.y * cd.y < p * p){\n        float z = sqrt(p * p -cd.x * cd.x - cd.y * cd.y);\n        vec3 normal = normalize(vec3(z, cd.y, cd.x));\n        vec3 light = normalize(vec3(1.0, 1.0, 1.0));\n        float diffuse =clamp(dot(normal, light), 0.0, 1.0);\n        float I = diffuse * 0.8 + 0.3;\n        col = vec3(I, diffuse, diffuse);\n        \n        vec3 d = vec3 (0.0, 0.0, -1.0);\n        vec3 reflection = reflect(d, normal);\n        \n        col = vec3(1.0, 0.8, 0.1)*I +\n            vec3(1.0, 1.0, 1.0)*pow(clamp(dot(reflection,light), 0.0, 1.0), 15.0);\n        \n        }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}