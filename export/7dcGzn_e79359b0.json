{"ver":"0.1","info":{"id":"7dcGzn","date":"1628974037","viewed":118,"name":" Rectangle with Distortion","username":"CosmicCrowMC","description":"Made this after watching the first 4 tutorials from The Art of Code! I'm excited to begin my shader-programming journey.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["basic","newbie","rectangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle (vec2 uv, vec2 p, float radius, float blur) {\n    float d = length(uv-p);\n    float c = smoothstep(radius, radius-blur, d);\n    return c;\n}\n\nfloat Mask (vec2 uv, vec2 p, float size) {\n    uv -= p; //Translate Coordinate System\n    uv /= size; //Scale Coordinate System\n    float mask = Circle(uv,vec2(0.0),0.4,0.01);\n    mask -= Circle(uv,vec2(-0.2,0.0),0.03,0.01);\n    mask -= Circle(uv,vec2(0.2,0.0),0.03,0.01);\n    return mask;\n}\n\nfloat Band (float t, float start, float end, float blur) {\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    return step1*step2;\n}\n\nfloat Rect (vec2 uv, vec4 dims, float blur) {\n    float band1 = Band(uv.x,dims.x,dims.x+dims.z,blur);\n    float band2 = Band(uv.y,dims.y,dims.y+dims.w,blur);\n    return band1*band2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 col = vec3(1.0);\n    uv-=0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    uv.x+=sin(uv.y*5.0-iTime*6.)/(5.0+cos(iTime));\n    \n    float mask = Mask(uv, vec2(0.0,0.0), 0.7);\n    mask = Rect(uv, vec4(-0.3,-0.2,0.6,0.4),.01);\n    // Output to screen\n    fragColor = vec4(col,1.0)*mask;\n}","name":"Image","description":"","type":"image"}]}