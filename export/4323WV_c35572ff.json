{"ver":"0.1","info":{"id":"4323WV","date":"1708916992","viewed":80,"name":"3d unconventional renderer","username":"Kinkajou81","description":"a simple shader that creates an illusion of 3d space that can be modified using the col input and has constantly changing and repeating outputs.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","trig","renderer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 tex = texture(iChannel0, uv);\n    vec3 col = tex.rgb;\n\n    // Output to screen w/ math\n    vec4 color = vec4(col,1.0)+floor(uv.xxyy+col.xyzz+sin(iTime))+refract(sin(iTime+uv.xyyx+vec4(4,2,9,1)),sin(iTime+uv.xyxx+vec4(1,2,4,1)),abs(atan(iTime/0.0211)));\n    fragColor = color + refract(vec4(mix(color.x,color.y,color.z),mix(color.x,color.y,color.z),mix(color.x,color.y,color.z),mix(color.x,color.y,color.z)),vec4(0.71619,0.71619,0.71619,0.71619),0.5168) + 1.0/2.7182;\n}","name":"Image","description":"","type":"image"}]}