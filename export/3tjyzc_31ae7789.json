{"ver":"0.1","info":{"id":"3tjyzc","date":"1594971614","viewed":72,"name":"Double Happiness","username":"akanarika","description":"HAPPY MARRIAGE!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 200.\n#define EPS 0.001\n\nfloat getDist(in vec3 p) {\n    vec3 c = vec3(0, 1, -4);\n    vec3 s = vec3(3, .2, .2);\n    float d =length(max(abs(p - c) - s, 0.));\n    \n    c = vec3(0, -1, -4);\n    s = vec3(3, .2, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(-1.4, 1.7, -4);\n    s = vec3(1, .2, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(1.4, 1.7, -4);\n    s = vec3(1, .2, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(-1.4, .3, -4);\n    s = vec3(1, .2, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(1.4, -.3, -4);\n    s = vec3(1, .2, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(-1.4, -.3, -4);\n    s = vec3(1, .2, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(1.4, .3, -4);\n    s = vec3(1, .2, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(-1.4, -1.7, -4);\n    s = vec3(1, .2, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(1.4, -1.7, -4);\n    s = vec3(1, .2, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(-1.4, -2.3, -4);\n    s = vec3(1, .2, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(1.4, -2.3, -4);\n    s = vec3(1, .2, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(-2.2, -2, -4);\n    s = vec3(.2, .3, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(-.6, -2, -4);\n    s = vec3(.2, .3, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(2.2, -2, -4);\n    s = vec3(.2, .3, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(.6, -2, -4);\n    s = vec3(.2, .3, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(-2.2, 0, -4);\n    s = vec3(.2, .3, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(-.6, 0, -4);\n    s = vec3(.2, .3, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(2.2, 0, -4);\n    s = vec3(.2, .3, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(.6, 0, -4);\n    s = vec3(.2, .3, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(-1.4, 1.6, -4);\n    s = vec3(.2, .6, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(1.4, 1.6, -4);\n    s = vec3(.2, .6, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(-1.4, -1, -4);\n    s = vec3(.2, .6, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    c = vec3(1.4, -1, -4);\n    s = vec3(.2, .6, .2);\n    d = min(d, length(max(abs(p - c) - s, 0.)));\n    \n    d = min(d, p.y + 4.);\n    \n    return d;\n}\n\nfloat rayMarch(in vec3 ro, in vec3 rd) {\n    float t = 0.;\n    for (int i = 0; i < MAX_STEPS; i++) {\n        vec3 p = ro + t * rd;\n        float tt = getDist(p);\n        t += tt;\n        if (tt < EPS || t > MAX_DIST) break;\n    }\n    return t;\n}\n\nvec3 getNormal(in vec3 p) {\n\tfloat d = getDist(p);\n    vec2 e = vec2(EPS, 0);\n    vec3 n = d - vec3(\n        getDist(p - e.xyy),\n        getDist(p - e.yxy),\n        getDist(p - e.yyx));\n    return normalize(n);\n}\n\nfloat getLight(in vec3 p) {\n\tvec3 light = vec3(0, 30, 50);\n    light.xz += 5. * vec2(sin(iTime), cos(iTime));\n    vec3 l = normalize(light - p);\n    vec3 n = getNormal(p);\n    float dif = clamp(0., 1., dot(l, n));\n    if (rayMarch(p + EPS * 2. * n, l) < length(light - p)) return dif * .9;\n    return dif ;\n}\n\nvec3 getBubble(in vec3 ro, in vec3 rd) {\n    float d = MAX_DIST;\n    float t = iTime;\n    vec3 sp = vec3(0, -.5, 0);\n    vec3 col = vec3(0);\n    for (int i = 0; i < 20; i++) {\n        d = min(d, max(0., length(sp.xy - rd.xy)));\n        float size = .1;\n        float c = smoothstep(size, size * (1. - .3), d);\n        c *= mix(.7, 1., smoothstep(size * .8, size, d));\n        col = max(col, c);\n    }\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    vec3 ro = vec3(0, 2.8, 2);\n    vec3 rd = normalize(vec3(uv.x, uv.y - .5, -1));\n    float d = rayMarch(ro, rd);\n    fragColor = vec4(getLight(ro + d * rd) * d * .1, 0, 0, 1);\n}","name":"Image","description":"","type":"image"}]}