{"ver":"0.1","info":{"id":"wltGWN","date":"1576442017","viewed":1360,"name":"Quantum Fluid 3D","username":"wyatt","description":"Quantized vortex filaments!\n\nPressure solving a schrodinger equation makes quantized fluid dynamics.","likes":39,"published":3,"flags":32,"usePreview":0,"tags":["3d","physics","landau","ginzburg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"Sampler\nMain\n{\n    R = iResolution.xy;\n    vec3 mi = 0.5*vec3(R/N,N*N);\n    vec3 p = vec3(0,0,-.8*R.x/N);\n    vec3 d = normalize(vec3((u-0.5*R)/R.y,1));\n    if (iMouse.z>0.) {\n \t\tp.xz *= e(6.2*iMouse.x/R.x);\n\t\td.xz *= e(6.2*iMouse.x/R.x);\n        p.yz *= e(6.2*iMouse.y/R.y);\n\t\td.yz *= e(6.2*iMouse.y/R.y);\n    } else {\n\t\tp.xz *= e(.2*iTime);\n\t\td.xz *= e(.2*iTime);\n\t}\n    Q = vec4(0);\n    for (int i = 0; i < 120; i++) {\n        vec3 o = abs(p)-mi;\n        float m = length(max(o,0.));\n        if (m<.1)\n        { \t\n            vec4 a = T(p+mi);\n            float aa = abs(length(a.xy)-1.);\n            Q += .04*(1.-exp(-aa))*(0.5+0.5*abs(a.xwyw));\n            p += d*exp(-3.*aa);\n        } else p += d*max(o.x,max(o.y,o.z));\n        \n \t} \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define N (R.y>400.?10.:8.)\nvec2 R;\n#define R3D vec3(R/N,N*N)\nvec2 d2 (vec3 U) {\n    U = mod(U,R3D);\n    U.z = floor(U.z);\n\treturn U.xy+vec2(mod(U.z,N),floor(U.z/N))*R/N;\n}\nvec3 d3 (vec2 u) {\n    vec2 o = floor(u/R*N);\n\treturn vec3(mod(u,R/N),o.x+o.y*N);\n}\nmat2 e (float a) {\n\tfloat c = cos(a), s = sin(a);\n    return mat2(c,-s,s,c);\n}\n#define A(U) texelFetch(iChannel0,ivec2(d2(U)),0)\n#define B(U) texelFetch(iChannel1,ivec2(d2(U)),0)\n#define Sampler vec4 T(vec3 U) {return mix(texture(iChannel0,d2(vec3(U.xy,floor(U.z)))/R),texture(iChannel0,d2(vec3(U.xy, ceil(U.z)))/R),fract(U.z));}\n#define Main void mainImage( out vec4 Q, in vec2 u )\n#define _3D vec3 U = d3(u);\n#define Me Q = A(U);\n#define Them vec4 M = 1./6.*(A(U+vec3(1,0,0))+A(U+vec3(0,1,0))+A(U+vec3(0,0,1))+A(U-vec3(1,0,0))+A(U-vec3(0,1,0))+A(U-vec3(0,0,1)));\n\n#define F .9*(M-Q-.01*Q*(dot(Q.xy,Q.xy)-Q.z))\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"Main\n{\n    R = iResolution.xy;\n    _3D\n    Me\n    Them\n    Q.x += (F).y;\n    Q.xy = mix(Q.xy,normalize(M.xy),.05);\n    // init\n    if (iFrame < 1) Q = vec4(0,1,0,0);\n    // boundary conditions\n    U -= 0.5*R3D;\n    U.xz *= e(.1*iTime);\n    U.zy *= e(.1*iTime);\n    if (length(U.xy)<8.&&abs(U.z)<5.&&iFrame%600 < 10){\n        Q = vec4(0,1,0,0);\n        Q.xy *= e(2.*iTime+U.z);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"Main\n{\n    R = iResolution.xy;\n    _3D\n    Me\n    Them\n    Q.y -= (F).x;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"float angle (vec2 a, vec2 b) {\n\treturn atan(a.x*b.y-a.y*b.x,dot(a.xy,b.xy));\n}\nMain\n{\n    \n    R = iResolution.xy;\n    _3D\n    Me\n    \n    Q.x = angle(A(U+vec3(1,0,0)).xy,A(U-vec3(1,0,0)).xy);\n    Q.y = angle(A(U+vec3(0,1,0)).xy,A(U-vec3(0,1,0)).xy);\n    Q.z = angle(A(U+vec3(0,0,1)).xy,A(U-vec3(0,0,1)).xy);\n    \n    \n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"Main\n{\n    \n    R = iResolution.xy;\n    _3D\n   \tMe\n    Them\n    vec4\n        px = B(U+vec3(1,0,0)),\n        nx = B(U-vec3(1,0,0)),\n        py = B(U+vec3(0,1,0)),\n        ny = B(U-vec3(0,1,0)),\n        pz = B(U+vec3(0,0,1)),\n        nz = B(U-vec3(0,0,1));\n    Q.z = mix(Q.z,M.z,.2) + 1./6.*(px.x-nx.x+py.y-ny.y+pz.z-nz.z);\n    \n}","name":"Buffer D","description":"","type":"buffer"}]}