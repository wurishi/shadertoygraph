{"ver":"0.1","info":{"id":"wtjXRR","date":"1564849676","viewed":127,"name":"flying fractal","username":"foran","description":"flying fractal","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["flyingfractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n/*\n * inspired by http://www.fractalforums.com/new-theories-and-research/very-simple-formula-for-fractal-patterns/\n*/\n#define N 60\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n\tvec2 v = (fragCoord.xy - iResolution.xy/2.0) / min(iResolution.y,iResolution.x) * 20.0;\n\tvec2 m = iDate.zw;\n\tm=vec2(cos(.914+iTime*0.009), sin(.9*iTime*0.019)); \n\tfloat rsum = 0.0;\n\tfloat pi2 = 3.1415926535 * 2.0;\n\tfloat a = (m.x-.5)*pi2;\n\tfloat C = cos(a);\n\tfloat S = sin(a);\n\tvec2 xaxis=vec2(C, -S);\n\tvec2 yaxis=vec2(S, C);\n\tfloat maxcycle=0.0;\n\tvec2 shift = vec2( 0, 1.618);\n\tfloat zoom = 1.0 + m.y*8.0;\n\tfor ( int i = 0; i < N; i++ ){\n\t\tfloat rr = dot(v,v);\n\t\tif ( rr > 0.618 ){\n\t\t\trr = 1.618/rr ;\n\t\t\tv.x = v.x * rr;\n\t\t\tv.y = v.y * rr;\n\t\t}\n\t\tif(rr > rsum)\n\t\t{\n\t\t\trsum = rr;\n\t\t\tmaxcycle = float(i);\n\t\t}\n\n\t\tv = vec2( dot(v,xaxis), dot(v,yaxis)) * zoom + shift;\n\t}\n\t\n\tfloat col = rsum/2.618;\n\tcol = .2 + 2.0 * min(col, 1.0-col);\n\tfloat red, green, blue;\n\t\n\tred = fract(cos(maxcycle));\n\tgreen = fract(cos(maxcycle*1.2));\n\tblue = fract(cos(maxcycle*1.5));\n\t\n\tfragColor = vec4(vec3(red, green, blue)*col*col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}