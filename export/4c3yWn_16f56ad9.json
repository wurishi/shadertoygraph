{"ver":"0.1","info":{"id":"4c3yWn","date":"1730921827","viewed":9,"name":"Hello shader brlch","username":"brlch","description":"Learning","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n\n    // Corrected time calculation\n    float time = mod(iTime, 2.*3.1415); // Loop time between 0 and 2\n    \n\n    // Update fragment color based on the time condition\n    float w = 0.01;\n    float pos = ((sin(8.*3.1415*uv.x+time)-0.5)/3.0+uv.y-0.35);\n    float val = (pos<w && pos >-w)?0.: 1.0;\n    \n    float r = val;\n    float g = val;\n    float b = val;\n    if(pos<w)\n    {\n        \n        r = sin(2.*uv.x+time*1.4);\n        b = sin(2.*uv.x+time*2.);\n        g = sin(2.*uv.x+time/2.);\n    }\n    fragColor = vec4(\n        r, \n        g,\n        b,\n        1.0\n    ); \n}\n","name":"Image","description":"","type":"image"}]}