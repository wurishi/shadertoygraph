{"ver":"0.1","info":{"id":"7lKyzK","date":"1670485515","viewed":218,"name":"A Distortion Shader","username":"zznewclear13","description":"A distortion shader.\nSet `SIMPLE_DISTORTION` to 1 to use a simpler distortion function.\nSet `USE_IMAGE` to 0 to visualize its uv coord.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["distortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SIMPLE_DISTORTION 0\n#define USE_IMAGE 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 tempUV = (fragCoord-0.5f*iResolution.xy)/iResolution.y + 0.5f;\n    \n#if SIMPLE_DISTORTION\n    vec2 offset = sin(tempUV.yx * 10.0f + iTime);\n    tempUV += offset * 0.02f;\n#else\n    vec2 offset = sin(tempUV.yx * 10.0f + iTime);\n    vec2 intensity = sin(tempUV.xy * 10.0f);\n    offset = offset * intensity * 0.02f;\n    tempUV += offset;\n#endif\n\n#if USE_IMAGE\n    vec3 col = texture(iChannel0, tempUV).rgb;\n#else\n    vec2 drawUV = fract(tempUV * 25.0f);\n    \n    float xLine = smoothstep(0.4f, 0.5f, abs(drawUV.x-0.5f));\n    float yLine = smoothstep(0.4f, 0.5f, abs(drawUV.y-0.5f));\n    float val = max(xLine, yLine);\n    \n    vec3 col = vec3(val, val, val);\n#endif\n    fragColor = vec4(col, 1.0f);\n}","name":"Image","description":"","type":"image"}]}