{"ver":"0.1","info":{"id":"ldXXW2","date":"1443301219","viewed":350,"name":"Colored Outlines","username":"zel","description":"Simple edge detection.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["detection","utility","edge","cat","outline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define GAMMA 0.65\n#define LINES 10.\n#define BASE 2.\n\n\n\nvec3 Outline(vec2 uv, vec3 color)\n{\n  \tvec4 lines= vec4(0.30, 0.59, 0.11, 1.0);\n\n\tlines.rgb = lines.rgb * LINES;\n\tif(iResolution.x < 300.)\n\t{\n\t\tlines /= 4.0;\t// improves thumbnail look\n\t}\n\telse if(iResolution.x > 1000.)\n\t{\n\t\tlines *= 1.5;\n\t}\n\t\n \n  \tfloat s11 = dot(texture(iChannel0, uv + vec2(-1.0 / iResolution.x, -1.0 / iResolution.y)), lines);   // LEFT\n  \tfloat s12 = dot(texture(iChannel0, uv + vec2(0, -1.0 / iResolution.y)), lines);             // MIDDLE\n  \tfloat s13 = dot(texture(iChannel0, uv + vec2(1.0 / iResolution.x, -1.0 / iResolution.y)), lines);    // RIGHT\n \n\n  \tfloat s21 = dot(texture(iChannel0, uv + vec2(-1.0 / iResolution.x, 0.0)), lines);                // LEFT\n  \t// Omit center\n  \tfloat s23 = dot(texture(iChannel0, uv + vec2(-1.0 / iResolution.x, 0.0)), lines);                // RIGHT\n \n  \tfloat s31 = dot(texture(iChannel0, uv + vec2(-1.0 / iResolution.x, 1.0 / iResolution.y)), lines);    // LEFT\n  \tfloat s32 = dot(texture(iChannel0, uv + vec2(0, 1.0 / iResolution.y)), lines);              // MIDDLE\n  \tfloat s33 = dot(texture(iChannel0, uv + vec2(1.0 / iResolution.x, 1.0 / iResolution.y)), lines); // RIGHT\n \n  \tfloat t1 = s13 + s33 + (2.0 * s23) - s11 - (2.0 * s21) - s31;\n  \tfloat t2 = s31 + (2.0 * s32) + s33 - s11 - (2.0 * s12) - s13;\n \n  \tvec3 col;\n \n\tif (((t1 * t1) + (t2* t2)) > 0.04) \n\t{\n  \t\tcol = color;\n  \t}\n\telse\n\t{\n    \tcol = vec3(0.35,0.35,0.35);\n  \t}\n \n  \treturn col;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x /=3.;\n    uv.x-=.01;\n    uv.y = 1.-uv.y;\n\tvec3 color = normalize(texture(iChannel0,uv)).rgb*BASE;\n    if(uv.x < 0.15)\n    {\n\tcolor.rgb = Outline(uv, color);\n    }\n\tfragColor = vec4(color,1.);\n}","name":"","description":"","type":"image"}]}