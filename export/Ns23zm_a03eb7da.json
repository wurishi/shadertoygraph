{"ver":"0.1","info":{"id":"Ns23zm","date":"1617173211","viewed":69,"name":"Mandelbrot party","username":"adamjmurray","description":"Building on my previous Mandelbrot shaders to animate a bunch of parameters.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractals"],"hasliked":0,"parentid":"7s23zD","parentname":"Mandelbrot Set (smooth coloring)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float speed = 0.1;\n\nvec2 rotate(vec2 p, float angle) {\n\treturn vec2(\n\t\tp.x*cos(angle) - p.y*sin(angle), \n\t\tp.x*sin(angle) + p.y*cos(angle)\n\t);\n}\n\nvec2 complexMultiply(vec2 a, vec2 b) {\n\treturn vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\n}\n\nvec3 hsl2rgb(vec3 c) { // Â© 2014 Inigo Quilez, MIT license, see https://www.shadertoy.com/view/lsS3Wc\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 normCoord = fragCoord/iResolution.xy * 2.0 - 1.0;\n    normCoord.x *= iResolution.x/iResolution.y;\n\n    float time = speed*iTime;\n    \n    float zoom = 100.0*pow(1.4 - cos(time), 5.0);\n    float angle = 10.0*sin(time/11.07);\n    float hueShift = time/1.85;\n    float iterations = 180. + 100.*sin(2.03*time);\n    vec2 offset = vec2(\n        -0.4822 - sin(time/3.11)/4000., \n        0.6141 + cos(time/1.43)/5500.\n    );\n    \n    vec2 z = vec2(0,0);\n    vec2 c = rotate(normCoord/zoom, angle) + offset;\n    float i; \n    \n    for (i=0.; i < iterations && dot(z,z) < 16.0; i++) {\n        z = complexMultiply(z,z) + c;\n    }\n  \n    if (i >= iterations) {\n        fragColor = vec4(0,0,0,1);\n    } else {\n        float escapeThreshold = i - log2(log(dot(z,z)));\n        float hue = escapeThreshold / iterations;\n        hue = mod(\n            mod(-hue + hueShift, 1.1) + 0.5, // intentional \"break\" in the spectrum for interest\n            1.0\n        );\n        vec3 hsl = vec3(hue, 0.7, 0.45);\n        fragColor = vec4(hsl2rgb(hsl), 1);\n    }\n}","name":"Image","description":"","type":"image"}]}