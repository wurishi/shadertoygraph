{"ver":"0.1","info":{"id":"csdyDN","date":"1695074317","viewed":61,"name":"el mejor fractal del mundo","username":"chaoticgenious","description":"no le saben","likes":0,"published":1,"flags":8,"usePreview":0,"tags":["julio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normaliza coordenadas\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Fondo con efecto de fractal\n    vec2 p = uv * 2.0;\n    for(int i = 0; i < 5; i++)\n    {\n        p = abs(p) / dot(p, p) - vec2(0.9, 0.9);\n    }\n    vec3 col = vec3(0.5 + 0.5 * cos(iTime + p.xyx + vec3(0, 2.0, 4.0)));\n    \n    // Dibujar una cara\n    float face = smoothstep(0.2, 0.21, 0.2 - length(uv));\n    col = mix(col, vec3(1.0), face);\n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    vec2 fragColor = vec2(0.0, 0.0);\n    float freq = 0.0;\n    float tempo = 1.0;  // velocidad del ritmo\n    time = mod(time, 8.0 * tempo);  // 8 segundos de loop\n\n    // Definir una melodía con ritmo\n    if(time < 1.0 * tempo) freq = 440.0;       // A\n    else if(time < 1.5 * tempo) freq = 493.88; // B\n    else if(time < 2.0 * tempo) freq = 0.0;    // silencio\n    else if(time < 2.5 * tempo) freq = 523.25; // C\n    else if(time < 3.5 * tempo) freq = 587.33; // D\n    else if(time < 4.0 * tempo) freq = 0.0;    // silencio\n    else if(time < 4.5 * tempo) freq = 659.26; // E\n    else if(time < 5.0 * tempo) freq = 698.46; // F\n    else if(time < 6.0 * tempo) freq = 783.99; // G\n    else if(time < 7.0 * tempo) freq = 880.0;  // A más alta\n    else freq = 0.0;                           // silencio\n\n    // Generar una onda sinusoidal con la frecuencia elegida\n    float sineWave = (freq == 0.0) ? 0.0 : sin(freq * 2.0 * 3.14159 * time);\n\n    fragColor = vec2(sineWave, sineWave);\n\n    return fragColor;\n}\n","name":"Sound","description":"","type":"sound"}]}