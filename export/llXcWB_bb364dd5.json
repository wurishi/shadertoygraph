{"ver":"0.1","info":{"id":"llXcWB","date":"1510108822","viewed":256,"name":"Performance equalizer","username":"rory618","description":"Tune a parameter automatically so that fps can be constant between platforms. Mouse y sets target fps as a fraction of 60","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["performance","fps"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float load = (iFrame==0)?1.:texelFetch(iChannel0,ivec2(0),0).x;\n    float f = textureLod(iChannel0,vec2(1.-fragCoord.x/iResolution.x,0),0.).z;\n    float fl = textureLod(iChannel0,vec2(1.-(fragCoord.x-1.)/iResolution.x,0),0.).z;\n    float fr = textureLod(iChannel0,vec2(1.-(fragCoord.x+1.)/iResolution.x,0),0.).z;\n    float dx=(fr-fl)/2.;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4((sqrt(.1+dx*dx))-30.*abs(f/60.-uv.y));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"ivec2 hash(ivec2 i){\n    ivec2 c = i*ivec2(961748927,314606869)+ivec2(3947586,435789);\n    for(int h = 0; h < 2; h++){\n        i = ivec2(i.x*i.x-i.y*i.y,2*i.x*i.y)+c;\n    }\n    return i;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float load = (iFrame==0)?1.:texelFetch(iChannel0,ivec2(0),0).x;\n    float targetFPS = (iMouse.y==0.?.75:max(iMouse.y/iResolution.y,.25))*60.;\n    float fr = iFrameRate/targetFPS;\n    \n    load*= pow(fr,.05);\n    \n    ivec2 t = ivec2(0);\n    for(int i = 0; i < int(load); i++){\n        t=hash(t);\n    }\n    float f = fragCoord.x<1.?iFrameRate:texelFetch(iChannel0,ivec2(fragCoord)-ivec2(1,0),0).w;\n    \n    float v = texelFetch(iChannel0,ivec2(fragCoord),0).w;\n    float x = texelFetch(iChannel0,ivec2(fragCoord),0).z;\n    v+=(f-x)/40.;\n    v*=.95;\n    fragColor = fragCoord.x<1.?vec4(load,0,x+v/40.,v):texelFetch(iChannel0,ivec2(fragCoord)-ivec2(1,0),0);\n    fragColor.y += (float(t.x));\n}","name":"Buf A","description":"","type":"buffer"}]}