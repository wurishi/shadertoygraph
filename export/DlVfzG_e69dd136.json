{"ver":"0.1","info":{"id":"DlVfzG","date":"1702303401","viewed":23,"name":"Learning Shaders - SOT 2023.01","username":"Sot","description":"Learning Shaders","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t)\n{\n    vec3 a = vec3(0.498, 0.500, 0.500);\n    vec3 b = vec3(0.000, 0.500, -0.582);\n    vec3 c = vec3(-0.502, 0.948, 1.000);\n    vec3 d = vec3(-0.972, -0.532, -1.532);\n\treturn a + b * cos (6.28318 * c * d * t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv  = vec2(2.0 * fragCoord - iResolution.xy)/ iResolution.y;\n    \n    vec2 uv0 = uv;\n    vec3 color = palette(length(uv0));\n    \n    for (int i = 0; i < 2; ++i)\n    {\n        //uv = 2.0 * (fract(uv)-0.5);\n\n\n        float d = length(uv);\n        d = 0.5 * sin(iTime*.1);\n\n\n        d = abs(d);\n        d = smoothstep(0.0, 0.5, d);\n        d = 0.05/d;\n\n        d = pow(d,5.0* sin(length(uv0)));\n        color = color * (1.0+d);\n    }\n    \n    for (int i = 0; i < 3; ++i)\n    {\n        uv = 2.0 * (fract(uv)-0.5);\n\n\n        float d = length(uv);\n        d = sin(8.0*d + iTime*1.5)/4.0;\n\n\n        d = abs(d);\n        d = smoothstep(0.0, 0.5, d);\n        d = 0.05/d;\n\n        d = pow(d,0.3* sin(length(uv0)+0.6));\n        color = color * d;\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}