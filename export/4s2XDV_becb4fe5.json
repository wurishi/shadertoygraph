{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// \"contour camera\" by joates (Nov-2014)\n//\n// 22-Nov: added freq & amplitude\n\nfloat scale = 2.0;\nfloat freq = 0.2;\nfloat amp  = 4.4;\n\nfloat terrain( in vec2 pos ) {\n\tfloat h = (1.0/scale) * amp * cos(pos.x * freq) * amp * sin(pos.y * freq);\n\treturn h;\n}\n\nfloat map( in vec3 pos ) {\n    float h = terrain(pos.xz);\n    return pos.y - h;\n}\n\nvec3 calcNormal( in vec3 pos, in float dis ) {\n    float p = min( 0.5, 0.001 + 0.00005*dis*dis );\n    vec3 up =      vec3( 0.0, terrain( pos.xz ), 0.0 );\n    vec3 v2 = up - vec3(   p, terrain( pos.xz + vec2(   p, 0.0 )), 0.0 );\n    vec3 v3 = up - vec3( 0.0, terrain( pos.xz + vec2( 0.0,  -p )),  -p );\n    return normalize( cross(v2, v3) );\n}\n\nvec3 camPath( float time ) {\n    float r = 500.0 * (1.0/scale);\n    float t = time * 0.05;\n\treturn vec3( r*cos(t), 0.0, r*sin(t) );\n}\n\nfloat camPitch( in vec3 ro, in vec3 dv ) {\n    float t2 = terrain( (ro + normalize( dv )).xz );\n    float t1 = terrain( ro.xz );\n    float pd = 12.0 * (1.0/scale) * abs( t2 - t1 );\n    if ( t2 < t1 ) pd *= -1.0;\n\treturn pd;\n}\n\nfloat camRoll( in vec3 ro, in vec3 tp ) {\n\treturn 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = -1.0+2.0*(fragCoord.xy/iResolution.xy);\n    uv.x *= iResolution.x/iResolution.y;\n\n\tfloat time = iTime;\n\n\tfloat cr = 0.18*sin(-0.1*time);\n\n\tvec3  ro = camPath( time );\n\tvec3  tp = camPath( time + 1.0 );\n\n\tvec3 dv = tp - ro;\n\tfloat cPitch = camPitch( ro, dv );\n\t//float cRoll  = camRoll( ro, tp );\n\n    // camYaw\n    float m = -1.0+2.0 * (iMouse.x/iResolution.x);\n\tvec3 ta  = ro + vec3( dv.x * cos(m) - dv.z * sin(m), \n\t\t\t\t\t\t  cPitch,\n\t\t\t\t\t\t  dv.z * cos(m) + dv.x * sin(m) );\n\tro.y = terrain( ro.xz ) + 1.0;\n\n    // camera    \n\tvec3 cw = normalize( ta-ro );\n\tvec3 cp = vec3( sin(cr), cos(cr), 0.0 );\n\tvec3 cu = normalize( cross(cw, cp) );\n\tvec3 cv = normalize( cross(cu, cw) );\n\tvec3 rd = normalize( uv.x*cu + uv.y*cv + 1.5*cw );\n\n    vec3 col = vec3( 0.0 );\n\n    float tmax = 240.0;\n    float h = 1.0;\n    float t = 0.0;\n    for ( int i=0; i<120; i++ ) {\n\n        if ( h < 0.002 || t > tmax ) break;\n        h = map( ro + t*rd );\n        t += h;\n    }\n\n    // light\n    vec3 lit = vec3( 0.5773 );\n    \n    if ( t < tmax ) {\n        vec3 pos = ro + t*rd;\n        vec3 nor = calcNormal( pos, t );\n\n        col  = vec3( 1.0, 1.0, 1.0 );\n        col  = vec3( 1.0, 0.8, 0.5 ) * clamp( dot( nor, lit ), 0.0, 1.0 );\n        col += vec3( 0.2, 0.3, 0.4 ) * clamp( nor.y, 0.0, 1.0 );\n        col += 0.1;\n\n    \t// fog\n    \tcol *= exp( -0.05 * t );\n\n    }\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4s2XDV","date":"1416138624","viewed":193,"name":"contourCamera","username":"joates","description":"use mouse click+drag to look around, cam pitch adjusts for uphill & downhill, might make you feel a bit seasick !!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["example","camera","contour"],"hasliked":0,"parentid":"","parentname":""}}