{"ver":"0.1","info":{"id":"sdyBR3","date":"1658605755","viewed":78,"name":"Zoomzoom","username":"Cosmin","description":"Close view on a bunch of nice pixels","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["zoom","zoom","cowboybebop","archer","zoomzoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 vline( in vec4 fragColor, in vec2 uv , in float vpos , in float thick  )\n{\n vec4 pxls ;\n float ratio = iResolution.y / iResolution.x ;\n //float time_scaller = cos(iTime)/14.0 ;\n float time_scaller = 1.0 ;\n \n    \n vec4 col = vec4(0.5 + 0.5*tan(iTime+uv.xyx+vec3(0,2,4)),1.0);\n //vec4 col = vec4(1.0f);\n if ( iMouse.x/iResolution.x - uv.x <  float(vpos))\n        pxls = col;\n      \n if ( iMouse.x/iResolution.x - uv.x >  0.025*sin(iTime) + float(vpos + thick))\n        pxls = col;\n return pxls * fragColor ;\n}\n\n\n\nvec4 hline( in vec4 fragColor, in vec2 uv , in float hpos , in float thick  )\n{\n vec4 pxls ;\n //vec4 col = vec4(0.5 + 0.5*tan(iTime+uv.xyx+vec3(0,2,4)),1.0); \n vec4 col = vec4(1.0f);\n float time_scaller = 1.0 ;\n if (iMouse.y/iResolution.y  - uv.y < float(hpos))\n        \n        pxls = col ;\n if (iMouse.y/iResolution.y - uv.y > 0.025*cos(iTime) +float(hpos + thick))\n        pxls = col;\n  \n return pxls * fragColor ;\n   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0, 0, 0, 1);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float ratio = iResolution.y / iResolution.x ;\n    vec3 white = vec3(1.0); \n    vec4 pixls = vec4(white, 1.0);\n    \n    fragColor = pixls ;\n    float thick = 0.015;\n    float spacing ;\n    float time_scaller ;\n    float weird_number = 1.0 ;\n    \n    time_scaller = abs(1.0/(weird_number+cos(iTime/4.0))) + 0.05 ;\n    \n    for (int i = 0 ; i<40 ; i++) {\n    spacing = (float(i)/10.0 + 0.05) ;\n    \n        pixls *= hline(fragColor, uv , time_scaller * spacing, thick*time_scaller );\n        pixls *= vline(fragColor, uv , ratio * time_scaller * spacing, ratio * thick*time_scaller );\n        };\n        \n     for (int i = 0 ; i<40 ; i++) {\n    spacing = (float(i)/10.0 + 0.05) ;\n    \n        pixls *= hline(fragColor, uv , -time_scaller * spacing, thick*time_scaller );\n        pixls *= vline(fragColor, uv , -ratio * time_scaller * spacing, ratio * thick*time_scaller );\n        };\n          \n    fragColor = pixls ;\n}","name":"Image","description":"","type":"image"}]}