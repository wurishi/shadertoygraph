{"ver":"0.1","info":{"id":"Xcs3WB","date":"1703470861","viewed":29,"name":"translationtranslation","username":"Leabemo","description":"A simple test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 brickTile(vec2 _st, float _zoom){\n    _st *= _zoom;\n\n    // Here is where the offset is happening\n    _st.y += (mod(floor(_st.x), 2.0) + mod(floor(_st.x), 2.0) - 1.0) * iTime * step(mod(iTime - 1.0, 2.0), 1.0);\n\t_st.x += (mod(floor(_st.y), 2.0) + mod(floor(_st.y), 2.0) - 1.0) * iTime * step(mod(iTime, 2.0), 1.0);\n    return fract(_st);\n}\nfloat circle(vec2 st, float radius){\n    vec2 l = st - vec2(0.5);\n    return 1.0 - smoothstep(0.99 * radius, radius * 1.0, dot(l,l) * 4.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n\n    // Time varying pixel color\n    vec2 st = brickTile(uv,10.0);\n    \n    vec3 col = vec3(circle(st,0.5));\n    //vec3 col = vec3(st,0.0);\n    // Output to screen\n    fragColor = vec4((1.-col),1.0);\n}","name":"Image","description":"","type":"image"}]}