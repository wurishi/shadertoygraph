{"ver":"0.1","info":{"id":"4fGGzR","date":"1712303012","viewed":33,"name":"Impromptu Android Sobriety Test","username":"PG_TG","description":"Description","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["tag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*---------------------------------\n  IMPROMPTU ANDROID SOBRIETY TEST\n---------------------------------*/\n\n#define PI acos(-1.0)\n\n#define green vec3(154., 194., 50.)/255.\n#define white vec3(1.)\n#define black vec3(0.)\n\n#define green2 vec3(94., 144., 30.)/255.\n#define blue vec3(108., 128., 255.)/255.\n#define grey vec3(32., 32., 32.)/255.\n\n\n// RECTANGLE FUNCTION\nvec4 rectangle(vec2 uv, vec2 orig, vec2 size, vec3 col) { \n    return vec4(col, !(uv.x < orig.x || uv.y < orig.y || uv.x > (orig.x + size.x) || uv.y > (orig.y + size.y)));\n}\n\n// CIRCLE FUNCTION\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 col, float smt) {\n    float value = distance(pos, uv);\n\n    if (smt > 1.0) // Smooth edges mode\n        value = smoothstep(value, value + smt, rad);\n    else     // Hard edges mode\n        value = step(value, rad);\n    \n    return vec4(col, value);\n}\n\n// TRIANGLE FUNCTION\nvec4 triangle(vec2 uv, vec2 pos, float size, float rotation, vec3 col) {\n    uv -=pos;\n    float a = atan(uv.x, uv.y) + (PI * rotation);\n      float r = (3.14 * 2.0) / float(3);\n    float d = cos(floor(0.5 + a / r) * r - a) * length(uv);\n    return vec4(col, smoothstep(size,size - 0.01, d));\n}\n\n// LINE FUNCTION\nvec4 line(vec2 uv, vec2 A, vec2 B, vec3 col, float thic, float blur) {\n    \n    vec2 g = B - A;\n    vec2 h = uv - A;\n    float d;\n    \n    d = length(h - g * clamp(dot(g, h) / dot(g, g), 0.0, 1.0));\n    if(blur != 0.)\n        if((blur * thic) >= thic)\n            d = smoothstep(blur * thic, thic, d);\n        else\n            d = smoothstep(thic, blur * thic * length(0.05), d);\n    else\n        d = step(thic, d);\n    \n    return vec4(col, d);\n}\n\n// ROTATION FUNCTION\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle), -sin(_angle),\n                sin(_angle), cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Aspect Ratio Fix\n    uv = uv * 2. - 1.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // UV Scale\n    uv *= 1.5;\n    \n    // UV For Background\n    vec2 uv2 = uv;\n    \n    // UV Movement (Background)\n    uv2.x += cos(iTime * 3.)/25.;\n    uv2.y -= sin(iTime * 6.)/25.;\n    \n    // UV Movement (Foreground)\n    uv.x += sin(iTime * 3.)/10.;\n    uv.y -= cos(iTime * 6.)/10.;\n\n    // Squash n' Stretch\n    uv.x *= 1.0 + cos(iTime * 6.)/25.;\n    uv.y *= 1.0 + sin(iTime * 6.)/25.;\n    uv *= rotate2d(cos(iTime * 3.)/10.);\n   \n    vec4 background, foreground;\n\n    // BACKGROUND ------------------------------------------------------------------------------------------------------------------\n    background = vec4(green2, 1.0);\n    foreground = triangle(\n        vec2(uv2.x/3.25, uv2.y),\n        vec2(0., -2.5),\n        1.25,\n        1.,\n        black\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = triangle(\n        vec2(uv2.x/3., uv2.y),\n        vec2(0., -2.5),\n        1.25,\n        1.,\n        grey\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = triangle(\n        vec2(uv2.x * 3.5, uv2.y),\n        vec2(0., -2.5),\n        1.25,\n        1.,\n        black\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = triangle(\n        vec2(uv2.x * 5., uv2.y),\n        vec2(0., -2.5),\n        1.25,\n        1.,\n        white\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = rectangle(\n        uv2,\n        vec2(-5.0, -0.25),\n        vec2(10.0, 4.0),\n        black\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = rectangle(\n        uv2,\n        vec2(-5.0, -0.2),\n        vec2(10.0, 4.0),\n        blue\n    );\n    background = mix(background, foreground, foreground.a); \n    \n    // CLOUD 1\n    float cloudMovement1 = sin(iTime * 3.)/5.;\n    float cloudMovement2 = cos(iTime * 3.)/5.;\n    float cloudPos = 1.5;\n    foreground = circle(\n        uv2,\n        vec2(-cloudPos + cloudMovement1, 1.0 + cloudMovement2/5.),\n        0.38,\n        black,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(-cloudPos - 0.33 + cloudMovement1, 0.95 + cloudMovement2/5.),\n        0.3,\n        black,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(-cloudPos + 0.33 + cloudMovement1, 0.95 + cloudMovement2/5.),\n        0.3,\n        black,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = circle(\n        uv2,\n        vec2(-cloudPos + cloudMovement1, 1.0 + cloudMovement2/5.),\n        0.33,\n        white,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(-cloudPos - 0.33 + cloudMovement1, 0.95 + cloudMovement2/5.),\n        0.25,\n        white,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(-cloudPos + 0.33 + cloudMovement1, 0.95 + cloudMovement2/5.),\n        0.25,\n        white,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a);\n    \n    // CLOUD 2\n    foreground = circle(\n        uv2,\n        vec2(cloudPos - cloudMovement2, 0.6 + cloudMovement1/5.),\n        0.38,\n        black,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(cloudPos + 0.33 - cloudMovement2, 0.55 + cloudMovement1/5.),\n        0.3,\n        black,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(cloudPos - 0.33 - cloudMovement2, 0.55 + cloudMovement1/5.),\n        0.3,\n        black,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(cloudPos - cloudMovement2, 0.6 + cloudMovement1/5.),\n        0.33,\n        white,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(cloudPos + 0.33 - cloudMovement2, 0.55 + cloudMovement1/5.),\n        0.25,\n        white,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(cloudPos - 0.33 - cloudMovement2, 0.55 + cloudMovement1/5.),\n        0.25,\n        white,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(cloudPos - cloudMovement2, 0.6 + cloudMovement1/5.),\n        0.33,\n        white,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(cloudPos + 0.33 - cloudMovement2, 0.55 + cloudMovement1/5.),\n        0.25,\n        white,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv2,\n        vec2(cloudPos - 0.33 - cloudMovement2, 0.55 + cloudMovement1/5.),\n        0.25,\n        white,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    \n    // HEAD ------------------------------------------------------------------------------------------------------------------------\n    float headOffset = cos(iTime * 3.)/10.;\n    float eyesOffset = sin(iTime * 3.)/20.;\n    \n    // HEAD OUTLINE\n    float antennaeOffset = cos(iTime * 3.)/33.;\n    foreground = line(\n        uv,\n        vec2(0.0, 0.2 + headOffset),\n        vec2(-0.5 + antennaeOffset + eyesOffset, 0.85 + headOffset + antennaeOffset + eyesOffset),\n        black,\n        0.075,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = line(\n        uv,\n        vec2(0.0, 0.2 + headOffset),\n        vec2(0.5 - antennaeOffset - eyesOffset, 0.85 + headOffset + antennaeOffset - eyesOffset),\n        black,\n        0.075,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = circle(\n        uv,\n        vec2(0.0, 0.2 + headOffset),\n        0.65,\n        black,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    \n    // HEAD\n    foreground = line(\n        uv,\n        vec2(0.0, 0.2 + headOffset),\n        vec2(-0.5 + antennaeOffset + eyesOffset, 0.85 + headOffset + antennaeOffset + eyesOffset),\n        green,\n        0.025,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = line(\n        uv,\n        vec2(0.0, 0.2 + headOffset),\n        vec2(0.5 - antennaeOffset - eyesOffset, 0.85 + headOffset + antennaeOffset - eyesOffset),\n        green,\n        0.025,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = circle(\n        uv,\n        vec2(0.0, 0.2 + headOffset),\n        0.6,\n        green,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    \n    // EYES\n    foreground = circle(\n        uv,\n        vec2(0.3 + eyesOffset, 0.55 + headOffset),\n        0.05,\n        white,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = circle(\n        uv,\n        vec2(-0.3 + eyesOffset, 0.55 + headOffset),\n        0.05,\n        white,\n        1.0\n    );\n    background = mix(background, foreground, foreground.a); \n    \n    // EYELIDS\n    float blinkOffset = 0.025 + cos(iTime * 3.)/40.;\n    foreground = rectangle(\n        uv,\n        vec2(0.25 + eyesOffset, 0.55 + headOffset + blinkOffset),\n        vec2(0.1, 0.05),\n        green\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = rectangle(\n        uv,\n        vec2(-0.35 + eyesOffset, 0.55 + headOffset + blinkOffset),\n        vec2(0.1, 0.05),\n        green\n    );\n    background = mix(background, foreground, foreground.a); \n    \n    // LEGS ------------------------------------------------------------------------------------------------------------------------\n    foreground = line(\n        uv,\n        vec2(0.25, 0.),\n        vec2(0.25 + eyesOffset * 2., -1. + sin(iTime*3.)/10.),\n        black,\n        0.2,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = line(\n        uv,\n        vec2(-0.25, 0.),\n        vec2(-0.25 + eyesOffset * 2., -1. - sin(iTime*3.)/10.),\n        black,\n        0.2,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = line(\n        uv,\n        vec2(0.25, 0.),\n        vec2(0.25 + eyesOffset * 2., -1. + sin(iTime*3.)/10.),\n        green,\n        0.15,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = line(\n        uv,\n        vec2(-0.25, 0.),\n        vec2(-0.25 + eyesOffset * 2., -1. - sin(iTime*3.)/10.),\n        green,\n        0.15,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a);\n    \n    // ARMS ------------------------------------------------------------------------------------------------------------------------\n    float armOffset = sin(iTime * 3.)/15.;\n    foreground = line(\n        uv,\n        vec2(0.8 + armOffset/2., 0.15 - sin(iTime*3.)/10.),\n        vec2(0.8 + armOffset, -0.33 - sin(iTime*3.)/10.),\n        black,\n        0.20,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = line(\n        uv,\n        vec2(-0.8 + armOffset/2., 0.15 + sin(iTime*3.)/10.),\n        vec2(-0.8 + armOffset, -0.33 + sin(iTime*3.)/10.),\n        black,\n        0.2,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = line(\n        uv,\n        vec2(0.8 + armOffset/2., 0.15 - sin(iTime*3.)/10.),\n        vec2(0.8 + armOffset, -0.33 - sin(iTime*3.)/10.),\n        green,\n        0.15,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = line(\n        uv,\n        vec2(-0.8 + armOffset/2., 0.15 + sin(iTime*3.)/10.),\n        vec2(-0.8 + armOffset, -0.33 + sin(iTime*3.)/10.),\n        green,\n        0.15,\n        1.01\n    );\n    background = mix(background, foreground, foreground.a);\n    \n    // TORSO -----------------------------------------------------------------------------------------------------------------------\n    foreground = rectangle(\n        uv,\n        vec2(-0.65),\n        vec2(1.3, 1.0),\n        black\n    );\n    background = mix(background, foreground, foreground.a); \n    foreground = rectangle(\n        uv,\n        vec2(-0.6),\n        vec2(1.2, 0.9),\n        green\n    );\n    background = mix(background, foreground, foreground.a);\n\n    // Output to screen\n    fragColor = mix(background, foreground, foreground.a);\n}","name":"Image","description":"","type":"image"}]}