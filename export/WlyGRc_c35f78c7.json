{"ver":"0.1","info":{"id":"WlyGRc","date":"1579446057","viewed":191,"name":"Fast Hexagon  ","username":"mdv","description":"Simple way to quickly identify the hexagon grid index  (x,y)  containing a   'u,v'   coordinate. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["hexagon","hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float HEX_SCALE = 4.0;     \n \n//  hex.\n//        input =  2d coordinate\n//        output = 2d  'hex' index identifying which hex-tile contains the  input coordinate\n//\n//\n \nvec2  hex(vec2 uv )\n {\n    const vec3 hexProportions = vec3(1.0, 1.0 / sqrt(3.0), sqrt(3.0));   \n\tvec2 hexIndex = floor(uv * hexProportions.xz);\n\tvec2 r        = fract(hexIndex * 0.5) ;\n\tvec2 cmp      = vec2(r.y > r.x, r.x > r.y);  \n    vec4 useIndex = vec4(hexIndex + cmp, hexIndex + 1.0 - cmp );\n    vec4 delta    = uv.xyxy - useIndex  * hexProportions.xyxy;  \n\treturn mix(useIndex.zw, useIndex.xy,  ( dot(delta.xy, delta.xy) < dot(delta.zw, delta.zw) ) ? 1.0 : 0.0 ); \n } \n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    vec2 uv = fragCoord/iResolution.y;\n    \n    vec2 h = hex( uv * HEX_SCALE );   \n    \n    // quick and nasty to get a color, so we can see the difference between adjacent hex cells.\n    \n    float red = (sin(h.x * 12.0) + 1.0) * 0.50;\n    float grn = (sin(h.y * 15.0) + 1.0) * 0.50;\n    float blu = (sin(h.y * h.x * 15.0) + 1.0) * 0.50;  \n      \n    fragColor = vec4(red,grn,blu,1.0);\n}","name":"Image","description":"","type":"image"}]}