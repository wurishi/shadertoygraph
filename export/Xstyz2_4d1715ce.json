{"ver":"0.1","info":{"id":"Xstyz2","date":"1519581980","viewed":704,"name":"Triptych","username":"gbirbilis","description":"Display a 1:2:1 ratio Triptych sourcing from Channel 0 \nAssuming iChannelResolution is big enough - ideally should scale image preserving ratio and clipping\n\nalso see https://github.com/Zoomicon/Triptych/\n","likes":3,"published":3,"flags":2,"usePreview":0,"tags":["video","filters","image","flip","triptych"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const bool SHOW_LINES = true;\nconst float LINE_THICKNESS = .003;\nconst vec4 LINE_COLOR = vec4(0); //black\n\nconst bool FLIP_HORIZ = false;\n\nconst float FADE = .0; //try .1 or .2\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 p = fragCoord.xy/iResolution.xy;\n  float x2;\n  vec4 col;\n\n  //Left\n  if (p.x < .25)\n  {\n    x2 = p.x+.25; //horiz flip: .25-p.x;\n    if (FLIP_HORIZ) x2 = .5-x2;      \n    col = texture(iChannel0, vec2(x2, p.y)) + FADE; //do color effect\n  }\n\n  //Middle\n  else if (p.x < .75)\n  {\n    x2 = .75-p.x; //horiz flip: p.x-.25\n    if (FLIP_HORIZ) x2 = .5-x2;      \n    col = texture(iChannel0, vec2(x2, p.y)); //could do some color effect here too\n  }\n\n  //Right\n  else\n  {\n    x2 = p.x-.75; //horiz flip: 1.25-p.x\n    if (FLIP_HORIZ) x2 = .5-x2;\n    col = texture(iChannel0, vec2(x2, p.y)) + FADE; //do color effect\n  }\n\n  //Lines (optional)\n  if (SHOW_LINES && (abs(.25-p.x)<LINE_THICKNESS || abs(.75-p.x)<LINE_THICKNESS))\n    col = LINE_COLOR;\n\n  fragColor = col;\n}","name":"Image","description":"","type":"image"}]}