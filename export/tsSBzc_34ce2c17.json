{"ver":"0.1","info":{"id":"tsSBzc","date":"1590525018","viewed":184,"name":"wiggly bar","username":"ncot_tech","description":"A wiggly bar","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat Circle(vec2 uv, vec2 p, float r, float blur)\n{\n    float d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n}\n\nfloat Band(vec2 uv, float start, float end, float blur)\n{\n    float wiggle = sin(uv.y*30.+iTime) / 10.;\n    \n    float step1 = smoothstep(start-blur+wiggle, start+blur+wiggle, uv.x);\n    float step2 = smoothstep(end+blur+wiggle, end-blur+wiggle, uv.x);\n    \n    return step1 * step2;\n}\n\nfloat VLine(vec2 uv, float x, float w)\n{\n    float wiggle = sin(uv.y*50.+iTime) / 1.5;\n    if (uv.x >= x+wiggle-w && uv.x <= x+wiggle+w) return 1.;\n    return 0.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // move origin, fix aspect ratio\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // Set up colour\n    vec3 col = vec3(0.);\n\t// set up mask\n    float mask = 0.;\n    \n    // Create image\n    mask = Band(uv, -.2, .2, .01);\n    //mask = VLine(uv, 0., 0.05);\n    \n    // set colour\n    col = pal( uv.y, vec3(0.7,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.34,0.33,0.67) ) * mask;\n    //col = vec3(1.,1.,1.)* mask;\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}