{"ver":"0.1","info":{"id":"lfccD8","date":"1730565436","viewed":166,"name":"truchet-like pipes","username":"FabriceNeyret2","description":"place random ends at cell edges and connect.\nThere are 5 case to treat (after using rotational symmetry).\nCould another approach be more efficient ?","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["truchet","short","loopless"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define H(p)    fract( 1e4* sin( dot( p , R+57.) ))         // hash\n#define P(x,y)  m *= 2; H(I+vec2(x,y)) < .5 ? m++,          /* if place end here, set m[i], draw dot */ \\\n                           l = min(l, length(I+vec2(x,y) - U) ) : l\n#define r       F = vec2(-F.y,F)                            // rot cell\n\nvoid mainImage( out vec4 O,  vec2 u )\n{ \n    vec2 R = iResolution.xy,\n         U = 10.*( u+u - R ) / R.y + iTime,\n         I = floor(U), F = U-I-.5;                          // cell Id, centered cell coords\n    float d=1., l=d;\n    int m;                                                  // m = bits status of the 4 edges\n    P(.5,0); P(1,.5); P(.5,1); P(0,.5);                     //     choose end or no end in m[i]\n    switch(m) {\n  //  case 0:  case 1: case 2: case 4: case 8 : break;      // 0 or 1 end: no road\n      case 5:  r;                                           // 2 ends, 1 road: straight\n      case 10: d = abs(F.x);                    break;\n      case 12: r;                                           // 2 ends, 1 road: diag\n      case 6:  r;\n      case 3:  r;\n      case 9:  d = abs(length(F+.5)-.5);        break;\n      case 14: r;                                           // 3 ends, Y roads\n      case  7: r;                 \n      case 11: r;                 \n      case 13: d = // H(I) < .2 \n                   // ? min( abs(length(F+.5)-.5), abs(length(F+vec2(-.5,.5))-.5) ):\n                        min( abs(F.y), max(abs(F.x),F.y)); \n                                                break;\n      case 15: if ( H(I) < .5 ) F.x = -F.x;                 // 4 ends, 2 roads\n               d = // H(I+.2) < .2 \n                   // ? min( abs(F.x), abs(F.y) ) :\n                        min( abs(length(F+.5)-.5), abs(length(F-.5)-.5) );\n                                                break;\n    }\n    O = vec4( smoothstep(30./R.y, 0., min(l-.08,d-.04) ) ); // draw lines & dots\n    O.x += mod(I.x+I.y,2.)*.2;                              // draw checkers\n}","name":"Image","description":"","type":"image"}]}