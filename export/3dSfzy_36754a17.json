{"ver":"0.1","info":{"id":"3dSfzy","date":"1590252113","viewed":234,"name":"lr94/PressPlay","username":"lucasrumney94","description":"My VHS effect that emulates tracking errors and a screendoor effect. It's like if your TV had a bad capacitor. ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["vhs","screendoor","fuzzing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STATIC_ON true\n#define STATIC_FADE_PERIOD 0.7\n\n#define BAR_NOISE_ON true\n\n#define STATIC_NOISE_THRESHOLD 0.8\n#define BAR_NOISE_THRESHOLD 0.98\n#define MAX_BAND_WIDTH 50.\n\nfloat randomNoise(float inputValue)\n{\n\treturn ((sin(inputValue*344.3423+434.21222*inputValue)/8.)+.125)\n\t\t\t+ ((cos(inputValue*456.15+5543.53428*inputValue)/8.)+.125)\n        \t+ ((sin(inputValue*54.21111+455.24534*inputValue)/8.)+.125)\n        \t+ ((cos(inputValue*54.21111+951.23984*inputValue)/8.)+.125);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 XYStaticCol = vec3(1.);\n    vec3 YBarStaticCol = vec3(0.7);\n    vec3 vhsBlueCol = vec3(0.,0.,.8);\n\tvec3 finalCol = vec3(0.);\n    \n    // Useful Signals\n    float YBarNoise = randomNoise(fragCoord.y*iTime);\n    float XYStaticNoise = randomNoise(fragCoord.x*fragCoord.y*iTimeDelta);\n    float sinBackAndForth = (sin(iTime)/2.)+.5;\n    vec4 videoSignal = texture(\n        iChannel0,\n        vec2(\n            fract(uv.x+(fract(iTime)/(100.+iTime))),\n        \tfract(uv.y+(0.01*sin(iTime/YBarNoise)*fract(iTime/3.)))\n        )\n    );\n    \n    \n    \n    // Start with Blue\n   \tfinalCol = videoSignal.rgb;\n    \n    // Add basic Static\n    if(STATIC_ON)\n    {\n        if (XYStaticNoise > STATIC_NOISE_THRESHOLD)\n        {\n            finalCol = mix(XYStaticNoise*XYStaticCol*(.5*cos(iTime/STATIC_FADE_PERIOD)+1.), finalCol, 0.7);\n        } \n    }\n\t\n    if (BAR_NOISE_ON)\n    {\n        \n        if (fract(iTime)<.2)\n        {\n            for (float row = fragCoord.y-MAX_BAND_WIDTH; row<fragCoord.y+MAX_BAND_WIDTH; row++)\n            {\n                if (randomNoise(row*iTime)>BAR_NOISE_THRESHOLD)\n                {\n                    finalCol = YBarStaticCol*YBarNoise;\n                }\n            }\n        }\n    }\n    \n\tvec3 screenDoor = vec3(\n        .2*(5.*sin((fract(iTime/6.)+10.)*fragCoord.y)+1.),\n        .2*(5.*cos((fract(iTime/6.)+10.)*fragCoord.x)+1.), \n        1.); \n    \n   \tfinalCol = mix(screenDoor, finalCol, .8\n                  );  \n    \n    // Output Final color to screen\n    fragColor = vec4(finalCol,1.0);\n}","name":"Image","description":"","type":"image"}]}