{"ver":"0.1","info":{"id":"7l3cD2","date":"1660561895","viewed":172,"name":"triangle noise test","username":"JuanDeager","description":"Test to compare uniform noise and triangular noise for dithering.\n\nTry changing the parameter QUANTIZED to a low number like 2 or 4 to view the difference in quality between uniform noise and triangle noise.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","dithering"],"hasliked":0,"parentid":"stVXzG","parentname":"gamma 2.2 uv joe mama"},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// the number of colors in the image (min: 1, max: 255)\nconst float QUANTIZE = 16.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // high precision input\n    vec3 color = uv.xxx * QUANTIZE;\n\n    // sample the noise image\n    vec2 uvNoise = uv * (vec2(iResolution.xy) / vec2(textureSize(iChannel0, 0)));\n    vec3 noise = texture(iChannel0, uvNoise).rgb; // three noise samples in [0, 1]\n\n    // counter floor error\n    if (uv.y >= .25 && uv.y < .5)\n    {\n        color += .5;\n    }\n\n    // uniform noise\n    else if (uv.y >= .5 && uv.y < .75)\n    {\n        color += noise.r;\n    }\n    \n    // triangle noise\n    else if (uv.y >= .75)\n    {\n        color += noise.r + noise.g - 0.5;\n    }\n\n    color = floor(color) / QUANTIZE;\n    \n    // borders\n    if (abs(uv.y - .25) < .001 || \n        abs(uv.y - .50) < .001 ||\n        abs(uv.y - .75) < .001)\n    {\n        color = vec3(0);\n    }\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}