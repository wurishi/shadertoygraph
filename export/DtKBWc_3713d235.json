{"ver":"0.1","info":{"id":"DtKBWc","date":"1702568736","viewed":18,"name":"cosmos spiral","username":"nayk","description":"cosmos,spiral,rotate","likes":1,"published":1,"flags":1,"usePreview":0,"tags":["spiral","rotate","cosmos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* https://www.shadertoy.com/view/4tyfWy  https://www.shadertoy.com/view/lslyRn https://www.shadertoy.com/view/DtGfzV*/\n#define iterations 17\n#define formuparam 0.53\n\n#define volsteps 20\n#define stepsize 0.1\n\n#define zoom   0.800\n#define tile   0.850\n#define speed  0.000\n\n#define brightness 0.0015\n#define darkmatter 0.300\n#define distfading 0.730\n#define saturation 0.850\n\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define Tri(p,s,a) max(-dot(p,vec2(cos(-a),sin(-a))),max(dot(p,vec2(cos(a),sin(a))),max(abs(p).x-s.x,abs(p).y-s.y)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define Skew(a,b) mat2(1.0,tan(a),tan(b),1.0)\n#define SkewX(a) mat2(1.0,tan(a),0.0,1.0)\n#define SkewY(a) mat2(1.0,0.0,tan(a),1.0)\n#define SymdirX(p) mod(floor(p).x,2.)*2.-1.\n#define SymdirY(p) mod(floor(p).y,2.)*2.-1.\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(234.56,789.34));\n    p+=dot(p,p+34.56);\n    return fract(p.x+p.y);\n}\n\nfloat thunderIcon(vec2 p){\n    float dir = SymdirY(p);\n    p.x = abs(p.x)-0.17;\n    vec2 prevP2 = p;\n    p.y+=iTime*0.15*dir;\n    p.y = mod(p.y,0.1)-0.05;\n    vec2 prevP = p;\n   \n    vec2 size = vec2(0.01,0.04);\n    float a = radians(-25.);\n   \n    p.x+=0.008;\n    p.y-=0.035;\n    float d = B(p,size);\n    p.x-=0.01;\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n   \n    p = prevP;\n    p.x-=0.008;\n    p.y+=0.035;\n    a = radians(-25.);\n    float d2 = B(p,size);\n    p.x+=0.01;\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n   \n    d = min(d,d2);\n   \n    return abs(d)-0.0005;\n}\n\nfloat arrow(vec2 p){\n    float dir = SymdirY(p);\n    p.x = abs(p.x)-0.05;\n    vec2 prevP = p;\n   \n    p.y+=(0.1*-iTime)*dir;\n   \n    p.y=mod(p.y,0.07)-0.035;\n    p.y+=0.025;\n    if(dir == 1.){\n        p.y-=0.05;\n    }\n    p.y*=dir*-1.;\n    float a = radians(60.);\n    p.x = abs(p.x)-0.1;\n    float d = dot(p,vec2(cos(a),sin(a)));\n    p.y+=0.03;\n    float d2 = dot(p,vec2(cos(a),sin(a)));\n    d = max(-d2,d);\n    p = prevP;\n   \n    d = max(abs(p.x)-0.04,d);\n   \n    return abs(d)-0.0005;\n}\n\nfloat arrowItem (vec2 p){\n    vec2 prevP = p;\n    float dist = 0.16;\n    p.x = abs(p.x)-dist;\n    p*=SkewX(radians(45.));\n    float d = B(p,vec2(0.04,0.01));\n   \n    p = prevP;\n    p.x = abs(p.x)-dist;\n    p-=vec2(-0.04,0.07);\n    p*=SkewY(radians(45.));\n    float d2 = B(p,vec2(0.01,0.07));\n    d = abs(min(d,d2))-0.0005;\n   \n    p =  prevP;\n    p.y-=-iTime*0.23;\n    p.y = mod(p.y,0.3)-0.15;\n\n    p.x = abs(p.x)-dist;\n    p-=vec2(-0.04,0.0);\n    p*=SkewY(radians(45.));\n    d2 = B(p,vec2(0.01,0.1));\n    p = prevP;\n    d2 = max(-p.y+0.16,d2);\n   \n    p.x = abs(p.x);\n    float a = radians(45.);\n   \n    p.y-=0.3;\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n   \n    d = abs(min(d,d2))-0.0005;\n   \n    return d;\n}\n\nfloat arrows(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(45.));\n    float d = arrow(p);\n   \n    p = prevP;\n    p*=Rot(radians(-45.));\n    float d2 = arrow(p);\n   \n    d = min(d,d2);\n   \n    p = prevP;\n    p*=Rot(radians(45.));\n   \n    d2 = B(p,vec2(0.32));    \n    d = max(-d2,d);\n   \n    p = prevP;\n   \n    p*=Rot(radians(45.));\n    p.y=abs(p.y)-0.34;\n   \n    d2 = arrowItem(p);\n    d = min(d,d2);\n   \n    p = prevP;\n   \n    p*=Rot(radians(-45.));\n    p.y=abs(p.y)-0.34;\n   \n    d2 = arrowItem(p);\n    d = min(d,d2);    \n   \n\n    p = prevP;\n    p*=Rot(radians(-45.));\n    d2 = thunderIcon(p);\n   \n    p = prevP;\n    p*=Rot(radians(45.));\n    float d3 = thunderIcon(p);\n    d2 = min(d2,d3);\n   \n    p = prevP;\n    p*=Rot(radians(45.));\n   \n    float mask = B(p,vec2(0.38));    \n    d2 = max(-mask,d2);\n   \n   \n    d = min(d,d2);  \n   \n    return d;\n}\n\nfloat arrow2(vec2 p){\n    vec2 prevP = p;\n\n    float dir = SymdirY(p);\n    p.y-=0.03;\n    p.y+=(0.1*-iTime)*dir;\n    p.y=mod(p.y,0.08)-0.04;\n    p.x = abs(p.x)-0.04;\n    p*=SkewY(radians(45.*dir*-1.));\n    float d = abs(B(p,vec2(0.025,0.015)))-0.0005;\n\n    return d;\n}\n\nfloat arrowItem2 (vec2 p, float dist){\n    vec2 prevP = p;\n    p.x = abs(p.x)-dist;\n    float d = B(p,vec2(0.0119,0.057));\n   \n    p = prevP;\n    p.x = abs(p.x)-dist;\n    p-=vec2(0.025,0.075);\n    p*=Rot(radians(-45.));\n    float d2 = B(p,vec2(0.04,0.0125));\n    d = min(d,d2);\n   \n    p = prevP;\n    p.x = abs(p.x)-dist;\n    p-=vec2(0.0487,0.225);\n    d2 = B(p,vec2(0.0127,0.13));\n    d = min(d,d2);\n   \n    p = prevP;\n    p.x = abs(p.x);\n    float a = radians(45.);\n   \n    p.y-=0.49;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n       \n   \n    return abs(d)-0.0005;\n}\n\n\nfloat arrows2(vec2 p){\n    vec2 prevP = p;\n    float d = arrow2(p);\n   \n    p*=Rot(radians(90.));\n    float d2 = arrow2(p);\n   \n    d = min(d,d2);\n   \n    p = prevP;\n    p*=Rot(radians(45.));\n   \n    d2 = B(p,vec2(0.32));    \n    d = max(-d2,d);\n   \n    p = prevP;\n   \n    p.x = abs(p.x)-0.47;\n    p*=Rot(radians(90.));\n    d2 = arrowItem2(p,0.095);\n    d = min(d,d2);\n   \n    p = prevP;\n   \n    p.y = abs(p.y)-0.47;\n    d2 = arrowItem2(p,0.095);\n    d = min(d,d2);    \n   \n    p = prevP;\n    p.x = abs(p.x)-0.6;\n    p.x -= 0.05;\n    p.y = abs(p.y)-0.1;\n    p.x = mod(p.x,0.08)-0.04;\n    d2 = abs(length(p)-0.01)-0.001;\n    p = prevP;\n    d2 = max(-(abs(p.x)-0.58),d2);\n    d = min(d,d2);\n   \n    p = prevP;\n    p.x = abs(p.x)-0.46;\n    p.y = abs(p.y)-0.17;\n    d2 = abs(Tri(p,vec2(0.035),radians(45.)))-0.001;\n    d = min(d,d2);\n   \n    p = prevP;\n    p.x = abs(p.x)-0.17;\n    p.y = abs(p.y)-0.46;\n    p*=Rot(radians(90.));\n    d2 = abs(Tri(p,vec2(0.035),radians(45.)))-0.001;\n    d = min(d,d2);    \n   \n    p = prevP;\n    p.x = abs(p.x)-0.505;\n    p.y = abs(p.y)-0.18;\n    p*=Rot(radians(45.));\n    d2 = abs(B(p,vec2(0.03,0.01)))-0.001;\n    d = min(d,d2);\n       \n    p = prevP;\n    p.x = abs(p.x)-0.18;\n    p.y = abs(p.y)-0.505;\n    p*=Rot(radians(45.));\n    d2 = abs(B(p,vec2(0.03,0.01)))-0.001;\n    d = min(d,d2);\n   \n    return d;\n}\n\nfloat shapeBase(vec2 p, float s, int mode){\n    vec2 prevP = p;\n    p*=10.;\n\n    if(mode ==1){\n        p = abs(p);\n        p-=iTime*0.5;\n    } else {\n        p*=2.;\n        p.x-=0.2;\n        p.y+=-iTime*1.;\n    }\n   \n    vec2 id = floor(p);\n    vec2 gv = fract(p)-0.5;\n   \n    float n = Hash21(id);\n   \n    float w = 0.1;\n    if(n<0.5 || n>=0.8){\n        float dir = (n>=0.8)?1.0:-1.0;\n        gv*=Rot(radians(dir*45.0));\n        if(mode ==1){\n            gv.x = abs(gv.x);\n        }\n        gv.x-=0.355;\n    } else {\n        w = 0.135;\n    }\n   \n    w*=s;\n    float d = B(gv,vec2(w,1.));\n    return d;\n}\n\nfloat centerItem(vec2 p){\n    vec2 prevP = p;\n\n    float d = shapeBase(p,1.,1);\n   \n    p = prevP;\n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(0.2));\n    d = max(d2,d);\n   \n    d2 = abs(B(p,vec2(0.22)))-0.005;\n    p = prevP;\n    d2 = max(abs(p.x)-0.1,d2);\n    d = min(d,d2);\n   \n    p*=Rot(radians(45.));\n    d2 = abs(B(p,vec2(0.22)))-0.005;\n    p = prevP;\n    d2 = max(abs(p.y)-0.1,d2);\n    d = min(d,d2);\n   \n    p*=Rot(radians(45.));\n    d2 = abs(B(p,vec2(0.24)))-0.001;\n    d = min(d,d2);\n   \n    p = prevP;\n    p.x = abs(p.x)-0.2;\n    p.y-=0.2;\n    p*=Rot(radians(-225.));\n    d2 = shapeBase(p,1.,0);\n   \n    d2 = max(abs(p.x)-0.02,d2);\n    d2 = max(abs(p.y)-0.3,d2);\n    p = prevP;\n    d2 = max(-p.y,d2);\n   \n    d = min(d,d2);\n   \n    p = prevP;\n    p.x = abs(p.x)-0.2;\n    p.y+=0.2;\n    p*=Rot(radians(225.));\n    d2 = shapeBase(p,1.,0);\n   \n    d2 = max(abs(p.x)-0.02,d2);\n    d2 = max(abs(p.y)-0.3,d2);\n    p = prevP;\n    d2 = max(p.y,d2);\n    d = min(d,d2);    \n   \n   \n    return d;\n}\n\nfloat circleItem(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(-iTime*-30.));\n    p = DF(p,2.);\n    p -= vec2(0.06);\n    p*=Rot( radians(-45.+sin(-iTime*2.)*-10.));\n   \n    p.x*=2.;\n    float d = abs(Tri(p,vec2(0.025),radians(45.)))-0.002;\n    p = prevP;\n    float d2 = abs(length(p)-0.05)-0.002;\n    d = min(d,d2);\n    d2 = length(p)-0.02;\n    d = min(d,d2);\n    return d;\n}\n\nfloat circleItems(vec2 p){\n    vec2 prevP = p;\n   \n    p.x = abs(p.x)-0.77;\n    p.y = abs(p.y)-0.32;\n    float d = circleItem(p);\n   \n    p = prevP;\n    p.x = abs(p.x)-0.61;\n    p.y = abs(p.y)-0.21;\n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(0.07,0.04));\n    float a = radians(-45.);\n    p.y+=0.03;\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n   \n    d = min(d,abs(abs(d2)-0.01)-0.001);\n   \n   \n \n   \n    return d;\n}\nvoid mainVR( out vec4 fragColor, in vec2 fragCoord, in vec3 ro, in vec3 rd )\n{\n//get coords and direction\nvec3 dir=rd;\nvec3 from=ro;\n\n//volumetric rendering\nfloat s=0.1,fade=1.;\nvec3 v=vec3(0.);\nfor (int r=0; r<volsteps; r++) {\nvec3 p=from+s*dir*.5;\np = abs(vec3(tile)-mod(p,vec3(tile*2.))); // tiling fold\nfloat pa,a=pa=0.;\nfor (int i=0; i<iterations; i++) {\np=abs(p)/dot(p,p)-formuparam; // the magic formula\na+=abs(length(p)-pa); // absolute sum of average change\npa=length(p);\n}\nfloat dm=max(0.,darkmatter-a*a*.001); //dark matter\na*=a*a; // add contrast\nif (r>6) fade*=1.2-dm; // dark matter, don't render near\n//v+=vec3(dm,dm*.5,0.);\nv+=fade;\nv+=vec3(s,s*s,s*s*s*s)*a*brightness*fade; // coloring based on distance\nfade*=distfading; // distance fading\ns+=stepsize;\n}\nv=mix(vec3(length(v)),v,saturation); //color adjust\nfragColor = vec4(v*.03,1.);\n}\n/* originals from https://www.shadertoy.com/view/MdXSzS and https://www.shadertoy.com/view/tttXRB\n\n*/\n#define TAU radians(360.)\n\n\nconst float nbCircle = 13.;\n\nvec2 rotate(float angle, float radius)\n{\n    return vec2(cos(angle),-sin(angle)) * radius;\n}\n\nvec2 perp(vec2 v)\n{\n    return vec2(-v.y, v.x);\n}\n\nfloat udTriangle( vec2 p, vec2 a, vec2 b, vec2 c )\n{\n  vec2 ab = b - a; vec2 pa = a - p;\n  vec2 bc = c - b; vec2 pb = b - p;\n  vec2 ca = a - c; vec2 pc = c - p;\n   \n  float d0 = dot(perp(ab), pa);\n  float d1 = dot(perp(bc), pb);\n  float d2 = dot(perp(ca), pc);\n   \n  return min(min(d0, d1), d2);\n}\n\nfloat sdfTriangle(vec2 p)\n{\n    float radius = 1.2;\n    float angle = iTime * 0.8;\n    vec2 a = rotate( angle, radius);\n    vec2 b = rotate( TAU / 3. + angle, radius);\n    vec2 c = rotate( 2. * TAU / 3. + angle, radius);\n   \n    return udTriangle(p, a, b, c);\n}\n\nfloat radFilter(float v)\n{\n    return smoothstep(100. / iResolution.y, 0., abs(v-1.));\n}\n\nfloat distFilter(float v)\n{\n    return smoothstep(0., 0.5, v);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//get coords and direction\nvec2 uv=fragCoord.xy/iResolution.xy-.5;\nuv.y*=iResolution.y/iResolution.x;\nvec3 dir=vec3(uv*zoom,iTime*0.01);\nfloat time=iTime*speed+.25;\nfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 2.2;\nfloat si = sin(t);\nfloat co = cos(t);\nmat2 ma = mat2(co, si, -si, co);\n vec2 p = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 prevP = p;\n    vec3 col = vec3(0.);\n    p.xy*=ma;\np*=tan(iTime*0.1);\n    float d = centerItem(p);\n    col = mix(col,vec3(1.),S(d,0.0));\n    float v1, v2, v3;\nv1 = v2 = v3 = 0.0;\nvec2 p2 = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float angle = atan(p2.y, p2.x);\n    float l = length(p2) * nbCircle;\n    float circleId = floor(l);\n    #ifdef AUDIOREACT\n    float s = texture(iChannel0, vec2(0.5, 1. - circleId / nbCircle)).x;\n    #else\n    float s = 0.6;    \n    #endif\n    float modCircleId = mod(circleId, 2.);\n    float d2 = sdfTriangle(p2);\n    d2 = distFilter(d2);\n    d2 = arrows2(p);\n     float speed2 = mix(0.1, -0.1, modCircleId);\n    l+= sin((angle - iTime * speed2) * circleId * 5.) * 0.5 * d * s;\n    l = fract(l) * 2.;\n    float t2 = min(l, 2. - l);\n    t2 = radFilter(t2);\n    col = mix(col,vec3(0.5),S(d,0.0));\nvec3 from=vec3(1.,.5,0.5)+col+t2/d2;\nfrom+=vec3(time*2.,time,-2.);\n\n\nmainVR(fragColor, fragCoord, from, dir);\n}\n","name":"Image","description":"","type":"image"}]}