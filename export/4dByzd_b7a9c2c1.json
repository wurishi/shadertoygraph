{"ver":"0.1","info":{"id":"4dByzd","date":"1493242137","viewed":215,"name":"Tonemapping Effect","username":"sawass","description":"Tonemapping","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tonemapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SHOULDER_STRENGTH 0.22\n#define LINEAR_STRENGTH 0.30\n#define LINEAR_ANGLE 0.10\n#define TOE_STRENGTH 0.20\n#define TOE_NUMERATOR 0.01\n#define TOE_DENOMINATOR 0.30\n#define TOE_ANGLE TOE_NUMERATOR/TOE_DENOMINATOR\n\nvec4 tonemapping(vec4 x)\n{\n    return ((x*(SHOULDER_STRENGTH*x+LINEAR_ANGLE*LINEAR_STRENGTH)+TOE_STRENGTH*TOE_NUMERATOR)/\n            (x*(SHOULDER_STRENGTH*x+LINEAR_STRENGTH)+TOE_STRENGTH*TOE_DENOMINATOR)) - TOE_ANGLE;\n}\n\n/*vec4 tonemappingLUT(vec2 uv)\n{\n    vec3 ld = vec3(0.002);\n    float linReference = 0.18;\n    float logReference = 444.;\n    float logGamma = 0.45;\n    vec4 outColor = texture(iChannel0, uv);\n    outColor.rgb = (log(0.4*outColor.rgb/linReference)/ld*logGamma + logReference)/1023.;\n    outColor.rgb = clamp(outColor.rgb, 0., 1.);\n    float FilmLutWidth = 256.;\n    float Padding = .5/FilmLutWidth;\n    outColor.r = texture(iChannel0, vec2( mix(Padding,1.-Padding,outColor.r), .5)).r;\n    outColor.g = texture(iChannel0, vec2( mix(Padding,1.-Padding,outColor.g), .5)).r;\n    outColor.b = texture(iChannel0, vec2( mix(Padding,1.-Padding,outColor.b), .5)).r;\n    return outColor;\n}*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 linearWhite = vec4(11.2);\n    vec4 linearColor = texture(iChannel0, uv);\n    \n    vec4 film = tonemapping(linearColor) / tonemapping(linearWhite);\n    //film = tonemappingLUT(uv);\n    \n\tfragColor = linearColor*step(uv.x, 0.5) + film*step(0.5, uv.x);\n}","name":"Image","description":"","type":"image"}]}