{"ver":"0.1","info":{"id":"NdGGR1","date":"1631038141","viewed":87,"name":"Twisted Squares","username":"jin_x","description":"Just twisted squares :)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["squares","twist"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalize pixel coordinates (y = -0.5..0.5, x = -xres/yres/2..xres/yres/2)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.x/iResolution.y;\n    uv -= 0.5;\n    uv.x *= ar;\n\n    // Background\n    vec3 col = vec3(0., sin((atan(uv.y, uv.x)+iTime*.3)*20. + 10./length(uv)) * (sin(iTime*3.)*.15+.3), 0.);\n    \n    float size = .0025;\n    for (int i = 0; i < 100; ++i, size *= 1.05) {\n        // Rotate image\n        float a = iTime*(3.-float(i)*.035), sa = sin(a), ca = cos(a);\n        vec2 uvr = uv * mat2(ca, -sa, sa, ca);\n        // Calculate color\n        if (abs(uvr.x) < size && abs(uvr.y) < size) {\n            col = vec3(float((i+1) & 1)*float(i)*.05, float(100-i)*.05, i & 1);\n            break;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}