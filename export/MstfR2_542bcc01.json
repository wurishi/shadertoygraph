{"ver":"0.1","info":{"id":"MstfR2","date":"1526024882","viewed":192,"name":"Circle packing loop free","username":"akhgary","description":"move mouse to change radii.\n\nInstead of using loops to calculate center of each circle, the plane is translated to center of each circle.\n\ncircle packing for second layer would be nightmare, but ill work on that.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circle","plot","draw","circlepacking","loopfree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Hue taken from https://www.shadertoy.com/view/4tlBWB\n\n#define tau 6.28318\n//#define pi 3.14159\n\nvec3 hue( in vec3 c )\n{\n\treturn c.z*(1.-c.y*smoothstep(2.,1.,abs(mod(c.x*6.+vec3(0,4,2),6.) -3.)));\n}\n\nfloat circle(vec2 xy, vec2 c, float r, bool fill){\n    float dist = length(xy-c)-r;\n    return 1.-smoothstep(0.,3./iResolution.y,fill?dist:abs(dist));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n\tvec3 col = vec3(0);\n    \n    if(iMouse.xy == vec2(0)) mouse = vec2(.25); // preview icon\n        \n    float ep = 1e-2; \t\t\t\t\t// epsilon (fix edge cases)\n    vec2 C = vec2(0); \t\t\t\t\t// center\n    float R = mouse.x+ep;\t\t\t\t// central circle radius\n\tfloat r = mouse.y+ep;\t\t\t\t// surrounding circle radius\n\n\tfloat t = 2.*asin(r/(R+r)); \t\t// theta for each surrounding circle\n\tfloat ph = iTime/10.;               // time phase\n    \n    float div = abs(tau/t)+ep;\n\tint n = int(div); \t\t\t\t\t// number of surrounding circles\n    float pad = fract(div)*t/float(n);\t// circles padding                                       \n    \n    float rt = -t/2.-pad/2.+ph;\t\t\t// plane rotation\n    mat2 rm = mat2(cos(rt),-sin(rt),sin(rt),cos(rt));\n    vec2 zw = rm*(xy-C);\t\t\t\t// rotated plane\n    \n    float i = floor((atan(zw.y,zw.x))/(t+pad));                 // translate plane for surrounding circles\n    vec2 c = vec2(cos(i*(t+pad)+ph),sin(i*(t+pad)+ph))*(r+R)+C; // center of surrounding circles\n    \n    col+=circle(xy, C, R, false);\t\t// draw central circle\n    vec3 hsl = vec3(i/float(n),.75,1.); // color for each surrounding circle\n    col+=circle(xy,c,r,true)*hue(hsl);  // draw surrounding circles\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}