{"ver":"0.1","info":{"id":"7s3cWf","date":"1654150599","viewed":71,"name":"Mandlebrot 017","username":"SuvoJaso","description":"Mandlebrot Set","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandlebrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_ITER = 256;\n\nfloat mandlebrot(vec2 uv)\n{\n    vec2 c = 4.0 * uv - vec2(0.0, 0.0);\n    float t = iTime * 0.3;\n    c = c / pow(t, 1.0) - vec2(0.65, 0.45);\n    vec2 z = vec2(0.0);\n    \n    for (int i = 0; i < MAX_ITER; i++)\n    {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        if (dot(z, z) > 4.0) return float(i) / float(MAX_ITER);\n    }\n    \n    return 0.0;\n}\n\nvec3 hash13(float f)\n{\n    float x = fract(sin(f) * 5625.246);\n    float y = fract(sin(f + x) * 2216.486);\n    float z = fract(sin(x + y) * 8276.352);\n    return vec3(x, y, z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    vec3 col = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n    //vec3 col = vec3(0.0);\n    \n    float m = mandlebrot(uv);\n    col *= m;\n    col = pow(col, vec3(0.45));\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}