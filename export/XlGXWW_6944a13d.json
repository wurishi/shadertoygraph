{"ver":"0.1","info":{"id":"XlGXWW","date":"1484267885","viewed":334,"name":"Wallpaper 1","username":"Xor","description":"This is my first wallpaper shader for my desktop background. It generates a new wallpaper every 10 seconds.\n\n2021 Update: Cleaned up the code, added AA (supersampling), and fixed a flickering issue related to iDate.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","pixel","xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 2\n\nfloat n1(float x)\n{\n    return fract(cos(x*36.1)*924.);\n}\nfloat box_n1(vec2 x)\n{\n    vec2 c = ceil(x);\n \treturn fract(cos(c.x*36.1+c.y*47.9)*924.);   \n}\n\nvec3 n3(float n)\n{\n\treturn fract(cos(n*vec3(36.1,47.9,29.8))*924.);\n}\n\nvec3 color(vec2 c)\n{\n    vec2 cs = cos(iTime*.01 + vec2(0,1.57));\n\tvec2 coord = (c+c - iResolution.xy)/iResolution.y;\n    vec2 rot = coord*mat2(cs.x,-cs.y,cs.yx)*2.;\n    float box = box_n1(rot)*.5+box_n1(rot*=4.)*.3+box_n1(rot*=4.)*.1+box_n1(rot*=2.)*.1;\n    \n    float seed = floor(iDate.w/10.);\n    float grad = smoothstep(-3.,3.,coord.x+coord.y*(n1(seed++)-.5));\n    vec3 col = 1.-mix(n3(seed++),n3(seed++),grad)*(.8+.2*cos(box*8.+iTime));\n    float shade = .5+.5*smoothstep(-.8-1.2*n1(seed++),.8*n1(seed++),coord.y);\n    return col*col*col*col * shade;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 total = vec3(0);\n    \n    for(int a = 0;a<AA*AA;a++)\n    {\n        total += color(fragCoord + vec2(a%AA,a/AA)/float(AA));\n    }\n    total /= float(AA*AA);\n    \n\tfragColor = vec4(total,1);\n}","name":"Image","description":"","type":"image"}]}