{"ver":"0.1","info":{"id":"4llyD2","date":"1506477019","viewed":215,"name":"CSG SDF circle overlap","username":"petwoip","description":"Is it possible to avoid false intersections near the top right section?\n\nMouse to move circle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf","circle","csg","distance","field","overlap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distToSquare(vec2 pos, float scale, vec2 point)\n{\n    vec2 d = abs(point - pos) - (scale / 2.0);\n    float insideDistance = min(max(d.x, d.y), 0.0);\n    float outsideDistance = length(max(d, 0.0));\n    return insideDistance + outsideDistance;\n}\n\nfloat distToCircle(vec2 pos, float rad, vec2 point)\n{\n    return length(point - pos) - rad;   \n}\n\nfloat differenceSDF(float distA, float distB) \n{\n    return max(distA, -distB);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 aspect = vec2(iResolution.x / iResolution.y, 1.0);\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tuv = aspect * (uv * 2.0 - 1.0);\n    \n    // Set up shapes\n    vec2 cursorPos = aspect * (2.0 * (iMouse.xy / iResolution.xy) - 1.0);\n    float cursorRad = 0.1;\n    vec2 squareBigPos = vec2(0.0);\n    float squareBigSize = 1.5;\n    vec2 squareSmallPos = vec2(0.25);\n    float squareSmallSize = 1.0;\n    \n    // Draw CSG shape + distance\n    fragColor.xyz = vec3(0.0);\n    float distSquareBigUv = distToSquare(squareBigPos, squareBigSize, uv);\n    float distSquareSmallUv = distToSquare(squareSmallPos, squareSmallSize, uv);\n    float distFinalUv = differenceSDF(distSquareBigUv, distSquareSmallUv);\n    fragColor.rgb = distFinalUv < 0.0 ? vec3(1.0, 0.0, 0.0) : min(vec3(1.0), vec3(distFinalUv));\n    \n    // Draw cursor\n    if(distToCircle(cursorPos, cursorRad, uv) < 0.0)\n    {\n        float distSquareBigCursor = distToSquare(squareBigPos, squareBigSize, cursorPos);\n        float distSquareSmallCursor = distToSquare(squareSmallPos, squareSmallSize, cursorPos);\n        float distFinalCursor = differenceSDF(distSquareBigCursor, distSquareSmallCursor);\n        fragColor.rgb = distFinalCursor < cursorRad ? vec3(0.0, 1.0, 0.0) : vec3(1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}