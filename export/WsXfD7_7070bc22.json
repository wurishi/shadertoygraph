{"ver":"0.1","info":{"id":"WsXfD7","date":"1588346875","viewed":106,"name":"tv display","username":"gorgh","description":"experiments with traditional tv display","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","lines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash11(float a){\n a=sin(a*564.331)*cos(a*126.542);\n    return fract(a);\n}\nfloat disortion(vec2 uv, float h, float thickness,float sinus){\n    float res=0.;\n\tif(uv.y>h && uv.y <h+thickness)\n    res= sin(sinus*(uv.y-h));\n    if(res>.99)res=Hash11(iTime*346.221);\n    return res;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.);\n    float line1=fract(iTime*.38)*12.-4.;\n    float line2=fract(iTime*.21)*12.-4.;  \n    float line3=fract(iTime*.11)*12.-4.;      \n\n    float scale=8.;\n   \tvec2 uvv=uv*smoothstep(-1.5,2.,length(uv))*scale;\n   \n    uvv.x-=disortion(uvv,line1,.3,14.);\n    uvv.x-=disortion(uvv,line2,.4,8.);\n    uvv.x-=disortion(uvv,line3,.2,18.);    \n\tvec2 fv=fract(uvv);\n    vec2 gv=floor(uvv);\n\n    float color=Hash11(gv.x);\n    color+=uv.x*uv.y;\n \tif(mod(uvv.y*iResolution.y/16.,2.)<=0.3)color-=.05; \n    else color+=sin(iTime)*.08+.1;\n\n    col+=vec3(color*.3,color*.9,color*.4);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}