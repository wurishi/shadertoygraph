{"ver":"0.1","info":{"id":"dljcWt","date":"1692462411","viewed":15,"name":"Edge Detection_33","username":"HexPrism33","description":"Simple Edge Detection sampling 9 points using Sobel Algorithm","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["sobel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nuniform sampler2D NAME;\n\n#define E 2.7182818\n#define PI 3.141592565\nfloat Gauss(float x,float y,float _x)\n{\n   float s = (1.0);//Blur Power\n   return pow(E,-((x*x)+(y*y))/(2.0*s*s))/(2.0*PI*s*s);\n}\n\nvec4 SampleImage(vec2 uv,vec2 _sample)\n{\n    vec4 col = texture(iChannel0,clamp(fract(1.*uv) - _sample,vec2(0.),vec2(1.)));\n    col *= col;\n    float luminosity = 0.299 * col.r +  0.587 * col.g + 0.114 * col.b;\n    vec4 RGB = vec4(luminosity);\n    \n    vec4 sRGB = sqrt(RGB);\n    \n    return sRGB;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n   vec2 uv = fragCoord/iResolution.xy;\n   // uv.x *= iResolution.x/iResolution.y;\n   vec4 matVec;\n   vec4 col;\n   float tot;\n\n   float _x = 0.005;\n   \n  \n  \n\n   //row1 of col Mat\n   vec4 col11 = SampleImage(uv, vec2(-_x,_x));\n   vec4 col12 = SampleImage(uv, vec2(0.0,_x));\n   vec4 col13 = SampleImage(uv, vec2(_x,_x));\n\n\n   //row2 of col Mat\n   vec4 col21 = SampleImage(uv, vec2(-_x,0.0));\n   vec4 col22 = SampleImage(uv, vec2(0.0,0.0));\n   vec4 col23 = SampleImage(uv, vec2(_x,0.0));\n\n\n   //row3 of col Mat\n   vec4 col31 = SampleImage(uv, vec2(-_x,-_x));\n   vec4 col32 = SampleImage(uv, vec2(0.0,-_x));\n   vec4 col33 = SampleImage(uv, vec2( _x,-_x));\n    \n   matVec = vec4(2,0,4,0);\n   tot = matVec.r*4. + matVec.g + matVec.b*2. + matVec.a;\n\n   col += col11 * matVec.r;\n   col += col12 * matVec.g;\n   col += col13 * -matVec.r;\n\n\n   col += col21 * matVec.b;\n   col += col22 * matVec.a;\n   col += col23 * -matVec.b;\n\n\n\n   col += col31 * matVec.r;\n   col += col32 * matVec.g;\n   col += col33 * -matVec.r;\n   \n   \n   matVec = vec4(2,4,0,0);\n   \n   vec4 col_ = col11 * matVec.r;\n   col_ += col12 * matVec.g;\n   col_ += col13 * matVec.r;\n\n\n   col_ += col21 * matVec.b;\n   col_ += col22 * matVec.a;\n   col_ += col23 * -matVec.b;\n\n\n\n   col_ += col31 * -matVec.r;\n   col_ += col32 * -matVec.g;\n   col_ += col33 * -matVec.r;\n   \n   //col = clamp(col ,vec4(0.0),vec4(1.0));\n   //col = vec4(1.0) - col;\n   col *= col;\n   col_ *= col_;\n   col_/= tot; \n   col /= tot;\n   vec4 COlcol = texture(iChannel0,uv)*(1.0 - sqrt(col+col_)); \n   col *= vec4(.5,0.,0.0,1.0);\n   col_ *= vec4(.5,0.,0.0,1.0);\n   fragColor = sqrt(col+col_);\n   fragColor +=  COlcol;\n}\n","name":"Image","description":"","type":"image"}]}