{"ver":"0.1","info":{"id":"NlySRW","date":"1640359780","viewed":123,"name":"Raymarching Outlines.SV","username":"turtlelover891","description":"i attempt to create a 3d outline and smooth shading using raymarching","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define maxSteps 1000\n#define minDistance .00001\n#define maxDistance 1000.\n#define temp vec2(.01, 0)\nconst vec3 lightPos = vec3(0., 10., 5.);\n\nfloat sdist(vec3 p){\n    vec4 s1 = vec4(sin(iTime)*2., sin(iTime*2.), 6., 1.);\n    vec4 s2 = vec4(0., 0., 7., 2.);\n    vec4 s3 = vec4(sin(iTime*2.5)*2., -1., cos(iTime*2.5)*2.+6., 1.);\n    float s1dist = length(p - s1.xyz) - s1.w;\n    float s2dist = length(p - s2.xyz) - s2.w;\n    float s3dist = length(p - s3.xyz) - s3.w;\n    return min(s1dist, min(s2dist, s3dist));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord-R/2.;\n    vec3 col = vec3(0.);\n    \n    vec3 o = vec3(0.);\n    vec3 dir = normalize(vec3(uv.x, uv.y, R.y));\n    vec3 p = o;\n    \n    float minDist1 = maxDistance;\n    float hit = 0.;\n    for(int i=0; i<maxSteps; i++){\n        float dist = sdist(p);\n        if(dist < minDist1) minDist1 = dist;\n        p += dir * dist;\n        if(dist < minDistance){hit = 1.; break;}\n        if(dist > maxDistance) break;\n    }\n\n    vec3 n = normalize(sdist(p) - vec3(\n        sdist(p-temp.xyy),\n        sdist(p-temp.yxy),\n        sdist(p-temp.yyx)));\n    \n    vec3 ldir = normalize(lightPos-p);\n    float l = clamp((dot(n, ldir)+1.)/2., 0., 1.);\n    p += n*.002;\n    float minDist2 = maxDistance;\n    for(int i=0; i<maxSteps; i++){\n        float dist = sdist(p);\n        if(dist < minDist2) minDist2 = dist;\n        p += ldir * dist;\n        if(dist > maxDistance || dist < minDistance) break;\n    }l -= .25-minDist2*100.;\n\n    if(mod(iTime/5., 2.) < 1.)\n    col += l*hit;\n    col += (1.-minDist1*5.)*(1.-hit);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}