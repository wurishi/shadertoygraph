{"ver":"0.1","info":{"id":"MdtSD8","date":"1459153566","viewed":1456,"name":"Colorbeat","username":"Linusmartensson","description":"Wanted to try out the mic input functionality on shadertoy.","likes":18,"published":1,"flags":4,"usePreview":0,"tags":["audio","input","response","vjay"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - iResolution.xy/2.0) / iResolution.yy;\n    vec2 sp = fragCoord.xy / iResolution.xy;\n\n    float beat = texture(iChannel0, vec2(0.1,0.25)).x;\n    float time = iTime;\n    \n    vec2 rd = vec2(atan(uv.x,uv.y), length(uv));\n    \n    rd = vec2(rd.x+time*0.0, rd.y*(1.4-beat));\n    \n\n    float ljud = texture(iChannel0, vec2(rd.y*0.75, 0.25)).x;\n  \n    vec2 xygrid = 1.0-clamp(abs(sin(vec2(sin(rd.x),cos(rd.x))*rd.y*3.14159*10.0))*4.0, 0.0,1.0);\n    vec2 rdgrid = 1.0-clamp(abs(sin(rd*vec2(0.5,1.0)*16.0))*16.0*min(1.0,rd.y), 0.0,1.0);\n    \n\tfragColor.xyz = vec3(1.0-step(ljud, abs(cos(rd.x)*rd.y)))*ljud*ljud*8.0;\n    \n\n\n\tfragColor.x += rdgrid.x+rdgrid.y;\n    fragColor.y += xygrid.x+xygrid.y;\n    \n    \n    vec2 srd = vec2(ivec2(sin(rd.x*(1.0+float(int(mod(iTime*3.0,4.0)))))*3.14159*1.0+iTime*4.0));\n    fragColor.xyz += vec3(sin(srd.x),cos(srd.x),-sin(srd.x));\n    fragColor.a = 0.0;\n}","name":"Image","description":"","type":"image"}]}