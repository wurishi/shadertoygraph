{"ver":"0.1","info":{"id":"wll3Wr","date":"1556131482","viewed":97,"name":"Yet Another Fractal","username":"Kudesunik","description":"Mandelbrot set as it is.\n\nNot yet done...","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int mandelbrot(float re0, float im0, int iterationCount) {\n\tfloat re = re0;\n\tfloat im = im0;\n\tfor(int i = 0; i < iterationCount; i++) {\n\t\tfloat reSquared = re * re;\n\t\tfloat imSquared = im * im;\n\t\tfloat reIm = re * im;\n\t\tif((reSquared + imSquared) > 4.0) {\n\t\t\treturn i;\n\t\t}\n\t\tfloat re1 = (reSquared - imSquared) + re0;\n\t\tfloat im1 = (reIm + reIm) + im0;\n\t\tre = re1;\n\t\tim = im1;\n\t}\n\treturn iterationCount;\n}\n\nvoid mainImage(out vec4 fcol, in vec2 fcoord) {\n    float ar = iResolution.x / iResolution.y;\n    vec2 uv = map(fcoord, vec4(0.0, 0.0, iResolution.xy), vec4(-1.0 * ar, -1.0, 1.0 * ar, 1.0));\n    uv *= 1.25;\n    uv.x -= 0.25;\n    int m = mandelbrot(uv.x, uv.y, 1000);\n    vec3 col;\n    if((m != 1000) && (m > 16)) {\n        float r = float(m);\n        col = vec3(sin((r / 100.0) * (mod(iTime, 2.0) * 10.0)), sin(r / 100.0), sin(r / 50.0));\n    } else {\n        col = vec3(0.0, 0.0, 0.0);\n    }\n    fcol = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 map(vec2 val, vec4 source, vec4 target) {\n    return target.xy + (val - source.xy) * (target.zw - target.xy) / (source.zw - source.xy);\n}","name":"Common","description":"","type":"common"}]}