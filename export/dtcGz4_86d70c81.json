{"ver":"0.1","info":{"id":"dtcGz4","date":"1681998748","viewed":98,"name":"Globumorphic","username":"drliquidglitch","description":"working off IQ's tutorials","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(vec2 x){\nreturn fract(x.y)+fract(x.y);\n}\n\n\nfloat fbm( vec2 p ) {\n    float f = 0.;\n    f += 0.5 + noise(p);\n    f += 0.25 + noise(p);\n    f += 0.125 + noise(p);\n    f /= 0.875;\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float r = 0.2 + (0.1*cos(iTime*0.5))*cos(atan(uv.y, uv.x)*10.0*cos(iTime*0.5)+(iTime*0.25));\n    \n    col *= fbm(uv.xy)*smoothstep(r, r+0.2*abs(cos(iTime)), length( uv - vec2(0.5, 0.5)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}