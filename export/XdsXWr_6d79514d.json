{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// #define BLUE\n// #define RED\n\n#define FOV         \t1.0\n#define ITER_MAX    \t20\n#define ITER_DETAIL \t0.2\n#define SIZE_ATOM \t\t0.25\n#define SIZE_BOND \t\t0.01\n#define SMIN_RADI \t\t0.20\n\n// a few constants regarding the hexagonal grid\n#define PI    \t3.141592653589793\n#define MULT1 \t(1.0/tan(PI/3.0))\n#define MULT2 \t(1.0/sin(PI/3.0))\n#define PHI   \t((1.0+sqrt(5.0))/2.0)\n\nfloat sdSphere(in vec3 p, in vec3 a) {\n\treturn length(p-a)-SIZE_ATOM;\n}\n\nfloat sdCapsule(in vec3 p, in vec3 a, in vec3 b) {\n\tvec3 pa = p - a, ba = b - a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn length( pa - ba*h ) - SIZE_BOND;\n}\n\nfloat smin(float a, float b, float k) {\n\tfloat h = clamp(0.5+0.5*(b-a)/k, 0.0, 1.0);\n\treturn mix(b, a, h) - k*h*(1.0-h);\n}\n\nfloat sd2Atoms(in vec3 p, in vec3 a, in vec3 b) {\n    float atom = sdSphere(p, b);\n    float bond = sdCapsule(p, a, b);\n    return smin(atom, bond, SMIN_RADI);\n}\n\nfloat DE(in vec3 p) {\n\tfloat md = 10000.0;\n\n\t// 30 ATOMS\n/*\tmd = smin(md, sdSphere(p, vec3(-2.355, +1.155, -1.173)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-1.896, -0.052, -0.525)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-2.696, -1.058, -0.272)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-4.098, -1.040, -0.618)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-4.564, +0.058, -1.222)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-3.649, +1.212, -1.513)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-1.952, -2.085, +0.360)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-0.582, -1.616, +0.475)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-0.563, -0.389, -0.061)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-1.733, +1.915, -1.360)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-4.695, -1.817, -0.416)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-5.528, +0.112, -1.480)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-4.008, +2.029, -1.963)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+0.190, -2.109, +0.875)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+0.650, +0.486, -0.172)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+0.778, +0.764, -1.124)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+0.532, +1.298, +0.398)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+1.880, -0.312, +0.306)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+3.102, +0.498, +0.200)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+1.746, -0.579, +1.260)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+1.980, -1.131, -0.258)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+3.007, +1.672, +1.083)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+3.842, +2.217, +1.005)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+4.256, -0.318, +0.601)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+5.092, +0.226, +0.531)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+2.894, +1.370, +2.030)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+2.220, +2.228, +0.815)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+4.327, -1.113, -0.000)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(+4.137, -0.624, +1.545)), SMIN_RADI);\n\tmd = smin(md, sdSphere(p, vec3(-2.314, -2.997, +0.675)), SMIN_RADI);\n*/\n    \n\t// 31 BONDS\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-2.355, +1.155, -1.173), \n\t\tvec3(-1.896, -0.052, -0.525)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-1.896, -0.052, -0.525), \n\t\tvec3(-2.696, -1.058, -0.272)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-2.696, -1.058, -0.272), \n\t\tvec3(-4.098, -1.040, -0.618)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-4.098, -1.040, -0.618), \n\t\tvec3(-4.564, +0.058, -1.222)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-4.564, +0.058, -1.222), \n\t\tvec3(-3.649, +1.212, -1.513)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-3.649, +1.212, -1.513), \n\t\tvec3(-2.355, +1.155, -1.173)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-1.952, -2.085, +0.360), \n\t\tvec3(-2.696, -1.058, -0.272)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-0.582, -1.616, +0.475), \n\t\tvec3(-1.952, -2.085, +0.360)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-0.563, -0.389, -0.061), \n\t\tvec3(-0.582, -1.616, +0.475)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-1.896, -0.052, -0.525), \n\t\tvec3(-0.563, -0.389, -0.061)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-2.355, +1.155, -1.173), \n\t\tvec3(-1.733, +1.915, -1.360)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-4.098, -1.040, -0.618), \n\t\tvec3(-4.695, -1.817, -0.416)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-4.564, +0.058, -1.222), \n\t\tvec3(-5.528, +0.112, -1.480)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-3.649, +1.212, -1.513), \n\t\tvec3(-4.008, +2.029, -1.963)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-0.582, -1.616, +0.475), \n\t\tvec3(+0.190, -2.109, +0.875)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-0.563, -0.389, -0.061), \n\t\tvec3(+0.650, +0.486, -0.172)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+0.650, +0.486, -0.172), \n\t\tvec3(+0.778, +0.764, -1.124)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+0.650, +0.486, -0.172), \n\t\tvec3(+0.532, +1.298, +0.398)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+0.650, +0.486, -0.172), \n\t\tvec3(+1.880, -0.312, +0.306)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+1.880, -0.312, +0.306), \n\t\tvec3(+3.102, +0.498, +0.200)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+1.880, -0.312, +0.306), \n\t\tvec3(+1.746, -0.579, +1.260)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+1.880, -0.312, +0.306), \n\t\tvec3(+1.980, -1.131, -0.258)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+3.102, +0.498, +0.200), \n\t\tvec3(+3.007, +1.672, +1.083)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+3.007, +1.672, +1.083), \n\t\tvec3(+3.842, +2.217, +1.005)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+3.102, +0.498, +0.200), \n\t\tvec3(+4.256, -0.318, +0.601)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+4.256, -0.318, +0.601), \n\t\tvec3(+5.092, +0.226, +0.531)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+3.007, +1.672, +1.083), \n\t\tvec3(+2.894, +1.370, +2.030)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+3.007, +1.672, +1.083), \n\t\tvec3(+2.220, +2.228, +0.815)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+4.256, -0.318, +0.601), \n\t\tvec3(+4.327, -1.113, -0.000)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(+4.256, -0.318, +0.601), \n\t\tvec3(+4.137, -0.624, +1.545)), SMIN_RADI);\n\tmd = smin(md, sd2Atoms(p, \n\t\tvec3(-1.952, -2.085, +0.360), \n\t\tvec3(-2.314, -2.997, +0.675)), SMIN_RADI);\n\n\treturn md;\n}\n\nmat2 rot(in float a) {\n\treturn mat2(cos(a),sin(a),-sin(a),cos(a));\t\n}\n\nfloat hexDist(vec2 p) {\n\tfloat dx = abs(p.x);\n\tfloat dy = abs(p.y);\n\treturn max(dx+dy*MULT1, max(dx, dy*MULT2));\n}\n\nvec2 getHexCenter(vec2 p) {\n\tvec3 o = vec3(p.x, p.y/MULT2, 0);\n\to.z = -0.5*o.x-o.y;\n\to.y = -0.5*o.x+o.y;\n\tvec3 i = floor(o+0.5);\n\tfloat s = i.x+i.y+i.z;\n\tvec3 d = abs(i-o);\n\tif(d.x > d.y && d.x > d.z)\n\t\ti.x -= s;\n\telse if(d.y > d.x && d.y > d.z)\n\t\ti.y -= s;\n\telse\n\t\ti.z -= s;\n\treturn vec2(i.x, (i.y-i.z)*0.5*MULT2);\n}\n\nvec3 hexgrid(vec2 p) {\n\t\n\tvec2 c = getHexCenter(p);\n\tfloat hdist = hexDist(c-p)*1.5;\n\t\n\t// add a pulse depending on axis\n\tfloat cdist = length(c-p)*1.5;\n\tfloat pulse1 = smoothstep(-1.0, +1.0,\n\t\tsin(cdist+iTime*0.412-p.y*PI*0.11-p.x*PI*0.2));\n\tfloat pulse2 = smoothstep(-1.0, +1.0,\n\t\tsin(cdist+iTime*0.842-p.y*PI*0.42-p.x*PI*0.1));\n\tvec3 result = vec3(0.3, 0.8, 0.2);\n\tresult += vec3(0.062, 0.41, 0.03)*pulse1;\n\tresult += vec3(0.008, 0.23, 0.04)*pulse2;\n\t\n\t// add another pulse\n\tfloat pulse3 = (sin(iTime*3.0-p.y*0.2-p.x*PI*0.1)*.5+.5);\n\tresult += 1.0-smoothstep(0.0, pulse3, hdist);\n\t\n\t// and an antialiased black border\n\tresult -= smoothstep(0.6, 1.0, hdist);\n\t\n\treturn clamp(result, 0.0, 1.0);\n}\n\n// see http://www.math.utah.edu/~bresslof/publications/01-1.pdf\nvoid distort(inout vec2 p) {\n\tp+=p*length(p)*0.9;\n\tp = vec2(atan(p.x, p.y)/PI*3.0, log(length(p))+iTime*0.15);\n\tp.x += p.y/PHI + iTime*0.1;\n}\n\nvec3 getBackground(vec2 uv) {\n\tfloat luv = length(uv);\n\tdistort(uv);\n\tuv *= 10.0;\n\tvec3 result = hexgrid(uv);\n\treturn result - smoothstep(0.0, 1.0, 1.0-luv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n\tuv.y *= iResolution.y / iResolution.x;\n\t\n\tvec3 from = vec3(-10, 0, 0);\n\tvec3 dir = normalize(vec3(uv * FOV, 1.0));\n\tdir.xz *= rot(3.1415*.5);\n\t\n\tvec2 mouse=(iMouse.xy / iResolution.xy - 0.5) * 3.0;\n\t\n\tmat2 rotxz = rot(iTime*0.652+mouse.x);\n\tmat2 rotxy = rot(sin(iTime*0.814)*.3+mouse.y-1.5);\n\t\n\tfrom.xz *= rotxz;\n\tfrom.yz *= rotxy;\n\tdir.xz  *= rotxz;\n\tdir.yz  *= rotxy;\n\n\tfloat ao = 1.0;\n\tfloat haze = 1000.0;\n\t\n\tfloat totdist = 0.0;\n\tbool set = false;\n\t\n\tfor (int steps = 0 ; steps < ITER_MAX ; steps++) {\n\t\tvec3 p = from + totdist * dir;\n\t\tfloat dist = DE(p);\n\t\thaze = min(haze, dist);\n\t\ttotdist += dist;\n\t\tif (dist < ITER_DETAIL) {\n\t\t\tset = true;\n\t\t\tao = float(steps) / float(ITER_MAX);\n            break;\n\t\t}\n\t}\n\t\n\tvec3 color = getBackground(uv);\n\t\n\tif (set) {\n\t\tcolor = vec3(0.454, 1.0, 0.42)*(1.0-ao);\n\t\tcolor -= totdist*0.02;\n\t\tcolor += (haze*haze)*0.8;\n\t} else {\n\t\tif (haze < 0.4) color = vec3(0.0, 0.1, 0.0);\n\t\telse color -= (1.0 - clamp(haze, 0.0, 1.0))*.5;\n\t}\n\t\n\tfragColor = vec4(color, 1.0);\n\t\n\t#ifdef BLUE\n\tfragColor.rgb = fragColor.rbg;\n\t#endif\n\t\n\t#ifdef RED\n\tfragColor.rgb = fragColor.grb;\n\t#endif\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdsXWr","date":"1399417562","viewed":1582,"name":"Molecule Rendering","username":"Klems","description":"I wrote a simple script to parse a molfile and print the corresponding shader. Click and drag the mouse to rotate the molecule. Figuring out the molecule name is left as an exercice to the reader ;)","likes":36,"published":1,"flags":0,"usePreview":0,"tags":["3d","tunnel","raymarch","hexagon","molecule"],"hasliked":0,"parentid":"","parentname":""}}