{"ver":"0.1","info":{"id":"DtlyDX","date":"1691259723","viewed":51,"name":"Sh1tty Sunrise","username":"MMindbreak","description":"Some sunrise","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n      uv.x *= iResolution.x/iResolution.y;\n    \n    \n    float height = 0.25 * sin(uv.x * 3.14 * 2.0) + 0.5;\n    height = height + cos(uv.x * 3.14 * 3.0) / 6.0;\n    height = height / 2.0;\n    \n    // height = height + tan(uv.x * 6.28 * 12.0) / 1000.0;\n    \n    vec3 col = uv.y > height ? vec3(iTime / 6.0, iTime / 12.0, uv.y / 2.0 + 0.4) : vec3(smoothstep(0.3, 0.45, uv.y) * 0.95 + 0.3);\n    \n    \n\n        // Draw a circle in the center of the image\n    float radius = 0.2; // Radius of the circle\n    vec2 center = vec2(0.75, clamp(iTime / 12.0, 0.0, 1.0)); // Center of the circle\n    float dist = distance(uv, center); // Distance from the center\n\n    // If the pixel is within the circle, change its color\n    if(dist < radius && uv.y > height)\n    {\n        col = vec3(1.0, clamp((iTime / 6.0), 0.0, 200.0), 0.0); // Red color\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}