{"ver":"0.1","info":{"id":"ldffWs","date":"1498775994","viewed":670,"name":"Drone Mountains 2","username":"TekF","description":"Added a little perspective (still very fake 3D).","likes":12,"published":3,"flags":32,"usePreview":0,"tags":["fake3d","multifractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 tap( vec2 uv )\n{\n    return texture(iChannel0,uv+vec2(.5,-1.2));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - .5;\n    uv /= 3./(uv.y+3.);\n    uv.y += 1.9;\n\n   \tfloat h = 1.;\n    int layers = 200;\n    float d = 1./float(layers);\n\n    // perspective controls\n    float s = .8;\n    float ss = pow( .9/s, d );\n\n//    while ( h > .0 && texture(iChannel0,uv*s+.5).a < h )\n    for ( int i=0; i < layers; i++ )\n    {\n        if ( tap(uv*s).a >= h )\n            break;\n        s *= ss;//mix(s,1.,ss);\n        h -= d;\n    }\n    \n\tfragColor = tap(uv*s);\n    \n    // some fakey lighting\n    float l = fragColor.a - tap(uv*s+vec2(-1,.5)/iResolution.x).a;\n    l = smoothstep( -.003, .01, l );\n\n    // shadows\n    float shadow = fragColor.a - tap(uv*s+vec2(-.04,.02)).a;\n    shadow = smoothstep( -.1, .0, shadow );\n\n    fragColor.rgb *= mix( vec3(.1,.2,.3), vec3(1.1,1,.9), min(l, shadow) );\n    \n    // gamma correct\n    fragColor.rgb = pow( fragColor.rgb, vec3(1./2.2) );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int speed = int(ceil(iResolution.y/400.));\n    \n    if ( fragCoord.x > iResolution.x-float(speed) )\n    {\n        // generate new data\n        int offset = -speed*iFrame;\n        vec2 pos = vec2(offset,0);\n        \n        vec2 uv = (fragCoord-pos)/iResolution.x - .5;\n        uv.y *= 1.8;\n\n        float height = .0;\n        vec2 ouv = uv*.3;\n        float a = 1.;\n        for ( int i=0; i<8; i++ )\n        {\n        \theight += pow(1.-texture(iChannel1,ouv).x,4.) * a;\n            ouv = 4.*(ouv*.8+.6*ouv.yx*vec2(1,-1));\n            a /= 4.;\n        }\n\n        vec3 rock = texture(iChannel2,uv*5.).rgb;\n        vec3 col = rock*.7;\n        \n        float forestheight = texture(iChannel1,uv*11.+vec2(-3,3)*uv.yx).x\n            \t\t\t\t+ texture(iChannel1,uv*29.+vec2(3,-3)*uv.yx).x;\n        \n        float rockmask = height;//(height*.7-.2)*smoothstep( .08, .5, roadDF ) + .5*smoothstep( .3, .5, roadDF );\n        float forestheight2 = .04*forestheight + height*.9+.03*rock.z-.02;\n        rockmask = max( .0, rockmask-forestheight2 );\n        height = rockmask + forestheight2;\n\n        float snow = smoothstep(.2,1.,height*(1.-rock.z));\n        height += snow*.05;\n\n        vec3 grasscol = vec3(.1,.5,.15)*mix(rock,vec3(.5),.2);\n        grasscol *= mix( 1., forestheight, .5 );\n        col = mix( col, grasscol, smoothstep(.02,.0,rockmask) );\n        col = mix( col, vec3(1), smoothstep(.0,.2,snow) );\n\n        fragColor.rgb = col*height;\n        fragColor.a = height;\n        \n/*        // chop chunks out for lols\n        if ( uv.y > sin(uv.x*1.1)*.5-.0 ) fragColor = vec4(.5);\n        if ( uv.y < sin(uv.x*1.3)*.5-.5 ) fragColor = vec4(0);\n        if ( uv.y > sin(uv.x*1.1)*.5-.3 && uv.y < sin(uv.x*1.3)*.5-.2 ) fragColor = vec4(.25);\n*/\n    }\n    else\n    {\n\t    // scroll the buffer\n        fragColor = texelFetch(iChannel0,ivec2(int(fragCoord.x)+speed,int(fragCoord.y)),0);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}