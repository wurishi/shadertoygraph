{"ver":"0.1","info":{"id":"MtsBWj","date":"1515514393","viewed":562,"name":"simple noise reduction","username":"dharrys","description":"My first shader.\nBlurs the image using a sobel mask to preserve the edges. Drag mouse to compare blurred image with the final one.","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["sobel","blur","edgepreserve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    float offset = 1.0 / iResolution.x;\n\tvec3 o = vec3(-offset, 0.0, offset);\n\tvec4 gx = texture(iChannel0, uv + o.xz);\n\tvec4 gy = gx;\n\tvec4 t;\n\n    //Calculate sobel\n\tgx += 2.0*texture(iChannel0, uv + o.xy);\n\tt = texture(iChannel0, uv + o.xx);\n\tgx += t;\n\tgy -= t;\n\tgy += 2.0*texture(iChannel0, uv + o.yz);\n\tgy -= 2.0*texture(iChannel0, uv + o.yx);\n\tt = texture(iChannel0, uv + o.zz);\n\tgx -= t;\n\tgy += t;\n\tgx -= 2.0*texture(iChannel0, uv + o.zy);\n\tt = texture(iChannel0, uv + o.zx);\n\tgx -= t;\n\tgy -= t;\n    \n\tvec4 sobel = sqrt(gx*gx + gy*gy);\n    \n    vec4 blur_=texture( iChannel0, vec2(uv.x,uv.y), 1.5);\n    \n    if(iMouse.x<fragCoord.x){\n         fragColor = mix(blur_, texture(iChannel0, uv), sobel);\n    }\n    else{\n   \t\tfragColor = blur_;//texture(iChannel0, uv);\n    }\n}","name":"Image","description":"","type":"image"}]}