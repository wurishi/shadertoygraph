{"ver":"0.1","info":{"id":"csBfRG","date":"1690576295","viewed":82,"name":"#007","username":"jvincent","description":"A rainbow field of triangles that rotate with time and distance from the origin","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["triangle","spiral","rainbow","rotating"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265359\n#define tpi 6.28318530718\n#define color(offset) abs(sin(offset + vec3(3.0, 7.0, 11.0) * pi/6.0))\n\nfloat sdfTriangle(vec2 plane, vec2 pos, float radius, float thickness, float rotation)\n{\n    float angle = mod(atan(plane.x-pos.x,plane.y-pos.y)/(2.0*pi), 1.0);\n    float adAngle = 2.0*pi*mod(angle + rotation, 1.0/3.0);\n    \n    float TxDeflect = sin(adAngle) - 1.0/( 1.0/tan(adAngle) + sqrt(3.0));\n    float TyDeflect = cos(adAngle) - 1.0/( sqrt(3.0)*tan(adAngle) + 1.0);\n    float tDeflect = radius * sqrt( pow(TxDeflect, 2.0) + pow(TyDeflect, 2.0) );\n    \n    float triangle = thickness/abs(length(plane-pos)-radius + tDeflect);\n    return triangle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.0);\n    \n    float angle = mod(atan(uv.x,uv.y)/(2.0*pi), 1.0);\n    \n    for(float i = 0.0; i <= 40.0; i+=2.0)\n    {\n        float brightness = 0.05;\n        col += brightness*color(iTime  + pi*angle) * sdfTriangle(vec2(uv.x, uv.y), vec2(0.0, 0.0), 0.05*i, 0.01, 0.01*iTime*i);\n        col += brightness*color(iTime  + pi*angle) * sdfTriangle(vec2(-uv.x, uv.y), vec2(0.0, 0.0), 0.05*i, 0.01, 0.01*iTime*i);\n        col += brightness*color(iTime  + pi*angle) * sdfTriangle(vec2(-uv.x, -uv.y), vec2(0.0, 0.0), 0.05*i, 0.01, 0.01*iTime*i);\n        col += brightness*color(iTime  + pi*angle) * sdfTriangle(vec2(-uv.x, -uv.y), vec2(0.0, 0.0), 0.05*i, 0.01, 0.01*iTime*i);\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}