{"ver":"0.1","info":{"id":"wtGyW1","date":"1610927918","viewed":121,"name":"Calm pleasant nights","username":"kw","description":"Experimenting with shapes and colors.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//calm pleasant nights\n\nfloat Smooth(in float val,in float factor)\n{\n    return smoothstep(factor,-factor,val);//need to lookup true pixels\n}\n\nfloat Circle(in vec2 pos,in float radius)\n{\n    return length(pos) - radius;\n}\n\nfloat Box(in vec2 pos,in vec2 size)//Box - exact: https://www.youtube.com/watch?v=62-pRVZuS5c\n{\n    vec2 d = abs(pos) - size;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat CatTail(in vec2 pos,in vec2 sca,in vec2 scb,in float ra,in float rb)//Arc - exact: https://www.shadertoy.com/view/wl23RK\n{\n    pos *= mat2(sca.x,sca.y,-sca.y,sca.x);\n    pos.x = abs(pos.x);\n    float k = (scb.y * pos.x > scb.x * pos.y) ? dot(pos.xy,scb):length(pos);\n    return sqrt(dot(pos,pos) + ra * ra - 2.0 * ra * k) - rb;\n}\n\nvec4 Cat(in vec2 pos,in vec3 color,in float factor)\n{\n    float sd = 0.0;\n    float d = 0.0;\n    d = Circle(pos,0.20);\n    d += Circle(pos - vec2( 0.15,-0.15),0.2);\n    d += Circle(pos - vec2( -0.15,-0.15 - (0.3 * sin(iTime + pos.y) / 18.0)),0.2);\n    d = Smooth(d,factor);\n    sd = max(sd,d);\n    d = Circle(pos - vec2(-0.14,0.10),0.12);\n    d += Circle(pos - vec2(-0.14,0.0),0.1);\n    d += Circle(pos - vec2(0.04,0.0),0.1);\n    d = Smooth(d,factor);\n    sd = max(sd,d);\n    d = Circle(pos - vec2(0.14,0.10),0.12);\n    d += Circle(pos - vec2(0.14,0.0),0.1);\n    d += Circle(pos - vec2(-0.04,0.0),0.1);\n    d = Smooth(d,factor);\n    sd = max(sd,d);\n    d = Circle(pos - vec2(-0.1,-0.2),0.28);\n    d += Circle(pos - vec2(0.1,-0.4),0.28);\n    d += Circle(pos - vec2(0.0,-0.6 - (0.1 * sin(iTime + pos.x) / 16.0)),0.26);\n    d -= Circle(pos - vec2(0.1,-0.62),0.32);\n    d = Smooth(d,factor);\n    sd = max(sd,d);\n    float ta = 1.2;\n    float tb = 4.1;\n    float rb = 0.03;\n    d = CatTail(pos - vec2(-0.265,-0.45),vec2(sin(tb * 1.34),cos(tb * 1.1)),vec2(sin(ta),cos(ta)),0.2 + (0.1 * sin(iTime + pos.x) / 40.0),rb);\n    d = Smooth(d,factor / 3.0);\n    sd = max(sd,d);\n    return vec4(color,sd);\n}\n\nvec3 CatColor(in vec2 pos)\n{\n    vec3 color = vec3(0.9,0.3,0.3);\n    color.r += (pos.y + 1.2) + abs((pos.x - 0.3) / 10.0) + (pos.x * 4.0) / 2.0;\n    color.g += ((pos.y - pos.x * 0.2) / 2.0) - abs((pos.y * 2.2) / 4.0);\n    color += 0.2 + pos.y / 20.0;\n    return color;\n}\n\nvec4 CatReflection(in vec2 pos,in float size,in float factor)\n{\n    vec3 color = CatColor(pos) * abs(pos.x - 0.5);\n    float sd = Circle(pos,size);\n    sd = Smooth(sd,factor);\n    return vec4(color,sd);\n}\n\nvec4 Wall(in vec2 pos,in vec2 size,in vec3 color,in float factor)\n{\n    float sd = Box(pos,size);\n    sd = Smooth(sd,factor);\n    return vec4(color,sd);\n}\n\nvec4 Moon(in vec2 pos,in float factor)\n{   vec3 color = vec3(0.8,0.2,0.2);\n    float sd = Smooth(Circle(pos,0.4),factor);\n    color = vec3(1.6,0.45 - abs(((pos.y + pos.x) / 3.0) + 0.2),0.4);\n    return vec4(color,sd);\n}\n\nvec3 Sky(in vec2 uv)\n{\n    return vec3(mix(vec3(0.6,0.2,0.4),vec3(0.2,0.2,0.4),uv.y * 1.2));\n}\n\nvec3 Draw(in vec3 color,in vec4 obj)\n{\n    return mix(color,obj.rgb,obj.a);\n}\n\nvec2 Screen(in vec2 pix,in vec3 res)\n{\n    return vec2((2.0 * pix - res.xy) / res.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = Screen(fragCoord,iResolution);\n    vec3 color = Sky(uv);\n    vec4 moon = Moon(uv - vec2(0.6,0.4),0.002);\n    vec4 wall_a = Wall(uv - vec2(0.0,-0.6),vec2(2.0,0.16),vec3(0.8,0.4,0.2),0.4);\n    vec4 wall_b = Wall(uv - vec2(0.0,-0.6),vec2(2.0,0.16),CatColor(uv) * (abs(uv.x) / 2.0),0.002);\n    vec4 wall_c = Wall(uv - vec2(0.0,-0.8),vec2(2.0,0.06),CatColor(uv) * (abs(uv.y) / 6.0),0.002);\n    vec4 cat_fx = CatReflection(uv - vec2(-0.6,-0.548),0.06,0.14);\n    vec4 cat = Cat(uv - vec2(-0.7,-0.2),CatColor(uv),0.002);\n    color = Draw(color,moon);\n    color = Draw(color,wall_a);\n    color = Draw(color,wall_b);\n    color = Draw(color,wall_c);\n    //color = Draw(color,cat_fx);\n    color = Draw(color,cat);\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}