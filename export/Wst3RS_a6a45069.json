{"ver":"0.1","info":{"id":"Wst3RS","date":"1568791395","viewed":98,"name":"TransparentRaymarching(Subtract)","username":"Torumu106","description":"Same as title.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","transparent"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int arraysize = 3;\nconst float loaddist =50.0;\nstruct solid\n{\n\tvec4 color;\n    float dist;\n    float thick;\n};\nvoid Sort(inout solid first[arraysize]){\n    int size = arraysize;\n    for (int i=1; i<size; ++i){\n        int j = i; \n        while (j > 0){\n            if (first[(j-1)/2].dist < first[j].dist){\n                solid w = first[(j-1)/2];\n                first[(j-1)/2] = first[j];\n                first[j] = w;\n               j = (j-1)/2;\n            } else {\n               break;\n            } \n        }\n    }\n\n    for (int i=size-1; i>0; --i) {\n        solid w = first[0];\n        first[0] = first[i];\n        first[i] = w; \n        int j = 0;\n        int k = 0;\n        while(true){\n            int left = 2*j + 1;\n            int right = 2*j + 2;\n            if (left >= i) break;\n            if (first[left].dist > first[k].dist) k = left;\n            if ((right < i) && (first[right].dist > first[k].dist)) k = right;\n            if (k == j) break;\n            solid w = first[k];\n            first[k] = first[j];\n            first[j] = w;\n            j = k;\n        }\n    }\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\nfloat sdPlane( vec3 p, vec4 n )\n{\n  \n  return dot(p,n.xyz) + n.w;\n}\nfloat map(vec3 p, int num){\n    //float d = length(p-vec3(0.0,0.0,1.0)) - 0.25;\n    float d =  loaddist;\n    if(num == 0){\n        d = sdBox(p - vec3(0.0,0.0,0.2), vec3(0.3,0.3,0.3));\n    }\n    if(num == 1){\n        d = sdBox(p - vec3(0.2,0.05,-0.4), vec3(0.2,0.15,0.2));\n    }\n    if(num == 2){\n    \td = sdPlane(p - vec3(0.0, -2.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0));\n    }\n\treturn d;\n}\nfloat trace(vec3 o, vec3 r, int num){\n\tfloat t = 0.0;\n    for(int i = 0; i < 32; ++i){\n    \tvec3 p = o + r * t;\n        float d = map(p, num);\n        t += d * 0.5;\n    }\n    return t;\n}\nvec4 col = vec4(1.0,1.0,1.0,1.0);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 uv1 = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv, 1.0));\n    \n    float the = 0.4;\n    r.yz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    the = iTime * 0.25;\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    vec4 fc = vec4(1.0, 1.0, 1.0, 1.0);\n    solid solids[arraysize];\n    solids[0].color = vec4(1.0, 0.0, 1.0, 0.6);\n    solids[1].color = vec4(0.0, 1.0, 1.0, 0.5);\n    solids[2].color = vec4(0.5, 0.5, 0.5, 0.0);\n    \n    for(int i = 0; i < arraysize; i++){\n    \tvec3 o = vec3(-1.0* sin(-the), 0.5, -1.0 * cos(-the));\n    \tfloat t = trace(o, r, i);\n        solids[i].dist = t;\n    \tsolids[i].thick = trace(o+r*loaddist, -r, i);\n    \tsolids[i].thick = loaddist - t - solids[i].thick;\n        solids[i].thick=max(solids[i].thick,0.0);\n    }\n    Sort(solids);\n    for(int i = arraysize-1; i >=0; i--){\n    \tif(solids[i].thick!=0.0){\n    \t\tsolids[i].thick += 0.3;\n    \t\tcol = solids[i].color;\n        \tfloat fog = 1.0 - pow(col.w,solids[i].thick);\n            vec3 col3 = fc.rgb *(1.0 - fog) + col.rgb *  fog;\n    \t\tfc = vec4(col3, 1.0);\n            fc.rgb /= fc.w;\n    \t}\n    }\n    vec3 col3 = fc.rgb * fc.w + vec3(0.2) * (1.0 - fc.w);\n    fc = vec4(col3, 1.0);\n\tfragColor = vec4(fc);\n    \n    //solid test[arraysize];\n    //test[0].color = vec4(1.0, 0.0, 0.0, 1.0);\n    //test[1].color = vec4(0.0, 1.0, 0.0, 1.0);\n    //test[0].dist = 2.0;\n    //test[1].dist = 1.0;\n    //Sort(test);\n    //fragColor = test[0].color;\n}","name":"Image","description":"","type":"image"}]}