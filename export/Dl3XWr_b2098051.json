{"ver":"0.1","info":{"id":"Dl3XWr","date":"1685235805","viewed":70,"name":"psychedelic lights","username":"felipecsl","description":"Experimenting with colors and shapes :)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["learning","lights"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// As usual, thanks FabriceNeyret2 for feedback and simplifications :)\n// Forked from:\n// https://www.shadertoy.com/view/Dl3XDn\nfloat sdRoundedX( in vec2 p, in float w, in float r ) {\n    p = abs(p);\n    return abs(p.x-p.y)* sqrt(2.)/2. - r;\n}\n\nvec3 palette( float t ) {\n    vec3 a = vec3(.82, .33, 0.24);\n    vec3 b = vec3(.66, .48, 0.9 );\n    vec3 c = vec3(.61, .34, 0.3 );\n    vec3 d = vec3(2.82,3.03, -.27);\n    return a + b*cos( 6.28*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord*2. - iResolution.xy)/iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    uv = fract(uv * 1.4) - 0.5;\n    float d = sdRoundedX(uv, 4., 4.);\n    float v = mod(iTime, 12.);\n    d = tan(d*v)/v;\n    vec3 col = palette(length(uv0));\n    finalColor = col * d;\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}