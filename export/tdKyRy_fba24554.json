{"ver":"0.1","info":{"id":"tdKyRy","date":"1603170225","viewed":157,"name":"HexagonalTilingShader","username":"madoodia","description":"Hexagonal tiling\n\nsource: https://www.youtube.com/watch?v=VmrIDyYiJBA","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["glsl","hexagon","shader","tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float HexDist(vec2 p)\n{\n    \n    p = abs(p);\n\n    float c = dot(p, normalize(vec2(1., 1.73)));\n    c = max(c, p.x);\n    \n    return sin(c*10.+iTime);\n    //return c;\n}\n\nvec4 HexCoords(vec2 uv)\n{   \n    vec2 r = vec2(1., 1.73);\n    vec2 h = r*.5;\n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n    \n    vec2 gv;\n    if(length(a)<length(b)) gv = a; else gv = b;\n    \n    vec2 id = uv-gv;\n    float y = .5-HexDist(gv);\n    float x = 0.;\n    \n    return vec4(x, y, id.x, id.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 color = vec3(0.);\n\n       \n    // color += sin(HexDist(uv)*10.+iTime);\n    \n    uv *= 10.;\n    \n    // vec2 a = fract(uv)-.5;\n    // vec2 b = fract(uv-.5)-.5;\n    \n    \n    // color.rg = HexCoords(uv).xy;\n    \n    vec4 hc = HexCoords(uv);\n    // float c = 1.-smoothstep(0.05, .1, hc.y*.9);\n    // float c = 1.-smoothstep(0.05, .1, hc.y*sin(hc.z*hc.y+iTime));\n    float c = 1.-smoothstep(0.1, .2, hc.y*sin(hc.z*hc.w+iTime*.5));\n    // float c = 1.-smoothstep(0.05, .1, hc.y*sin(hc.z*hc.z+iTime));\n    // float c = 1.-smoothstep(0.05, .1, hc.y*sin(hc.w*hc.z+iTime));\n    color += c;;\n    \n    fragColor = vec4(color,1.0);    \n}\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}