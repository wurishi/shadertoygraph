{"ver":"0.1","info":{"id":"stfcRl","date":"1648517343","viewed":267,"name":"Sphere Base","username":"asalmon","description":"Basic sphere","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat ratio = iResolution.x / iResolution.y;\n    float time = iTime/10.0;\n\tvec2 uv = vec2(ratio, 1.) * (2. * fragCoord.xy / iResolution.xy - 1.);\n\t\n    //rotate the uv vector\n    float oldx = uv.x;\n    vec2 rotUV;\n    rotUV.x = uv.x * cos(iTime) - uv.y * sin(iTime);\n    rotUV.y = oldx * sin(iTime) + uv.y * cos(iTime);\n    \n    //Make the color gradiant on the sphere with the rotated uv\n    vec3 n = vec3(rotUV.x, rotUV.y, sqrt(1. - clamp(dot(uv, uv), 0., 1.)));\n    vec3 color = .5 + .5*n; \n    \n    float gradiantValue = color.g; \n    \n    //apply the gradient to channel 0\n    vec4 tex = texture(iChannel0, uv);\n    vec3 color2 = mix(vec3(0.5), vec3(gradiantValue)+tex.rgb, smoothstep(1.01, 1., dot(uv, uv)));\n\tfragColor = vec4(color2, 1.0);\n}","name":"Image","description":"","type":"image"}]}