{"ver":"0.1","info":{"id":"MfXXWj","date":"1705709675","viewed":72,"name":"crossness","username":"amusement","description":"wtf shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["idonotevenknowwhatisthis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Define the resolution of yer shader\n    vec2 resolution = iResolution.xy;\n\n    // Define the number of frames in yer sequence\n    const int numFrames = 10;\n\n    // Define the time variable for transitionin' between frames\n    float time = iTime;\n\n    // Calculate the index of the current frame\n    int currentFrame = int(mod(time, float(numFrames)));\n\n    // Calculate the index of the next frame\n    int nextFrame = int(mod(time + 100.1, float(numFrames)));\n\n    // Define the speed of horizontal and vertical moshin'\n    float horizontalSpeed = 5.0;\n    float verticalSpeed = 10.0;\n\n    // Fetch the color values for the current and next frame, with different offsets for horizontal and vertical moshin'\n    vec3 currentColor = texture(iChannel0, fragCoord / resolution + vec2(sin(time * horizontalSpeed), 0.0)).rgb;\n    vec3 nextColor = texture(iChannel0, fragCoord / resolution + vec2(0.0, cos(time * verticalSpeed))).rgb;\n\n    // Add an intermittent effect to display the original image without distortion\n    float intermittent1 = step(fract(time), 0.2) * step(fract(time), 0.5);\n\n    // Fetch the color value for the second image on the second channel\n    vec3 secondImageColor = texture(iChannel1, fragCoord / resolution).rgb;\n\n    // Add an intermittent effect to display the second image rapidly\n    float intermittent2 = step(fract(time * 15.0), 0.066);\n\n    // Blend the colors based on the current frame index and intermittent effects\n    vec3 finalColor = mix(currentColor, nextColor, fract(time)) * (1.0 - intermittent1) + secondImageColor * intermittent2;\n\n    // Apply a psychedelic composition mode\n    finalColor = vec3(\n        finalColor.r * finalColor.g,\n        finalColor.g * finalColor.b,\n        finalColor.b * finalColor.r\n    );\n\n    // Output the final color\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}