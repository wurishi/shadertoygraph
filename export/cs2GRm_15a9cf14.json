{"ver":"0.1","info":{"id":"cs2GRm","date":"1667427827","viewed":143,"name":"random blur","username":"jonasfrey","description":"random blur","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["blur","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f_n_random(\n    float n_input\n){\n    float n_mouse_x_normalized = iMouse.x / iResolution.x;\n    float n_mouse_y_normalized = iMouse.y / iResolution.y;\n    float n_amplitude_max = 2097593.0;//large prime number\n    float n_amplitude = n_amplitude_max * n_mouse_y_normalized;\n    float n = 1.0;\n \n    n = sin(n_input)*n_amplitude* n_mouse_x_normalized;\n    \n\n    \n    return mod(n, 1.0);\n}\nvec4 f_a_n_blurred(\n    float n_scale_x_kernel, \n    float n_scale_y_kernel, \n    float n_x_kernel, \n    float n_y_kernel\n){\n    \n    vec4 a_n_rgba_sum = vec4(0.0,0.0,0.0,0.0);\n    int n_x = 0; \n    int n_y = 0; \n    for(int n_y; n_y < int(n_scale_y_kernel); n_y+=1){\n        for(int n_x; n_x < int(n_scale_x_kernel); n_x+=1){\n            //int n_x_current = n_x - int(float(n_scale_x_kernel)/2.0);\n            //int n_x_current = n_y - int(float(n_scale_y_kernel)/2.0);\n            vec2 n_coords_normalized_kernel = vec2(\n                float(n_x) + n_x_kernel - float(n_scale_x_kernel)/2.0, \n                float(n_y) + n_y_kernel - float(n_scale_y_kernel)/2.0\n            )/iResolution.xy;\n            a_n_rgba_sum+=texture(\n                iChannel0,\n                n_coords_normalized_kernel \n                \n            );\n        }\n    }\n    return a_n_rgba_sum / (n_scale_x_kernel * n_scale_y_kernel);\n}\nvoid mainImage( out vec4 a_n_rgba_out, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 a_n_coords_normalized_mouse = iMouse.xy / iResolution.xy;\n    vec2 a_n_coords_normalized_pixel = fragCoord.xy / iResolution.xy; \n    \n\n    float n_max_kernel_size = 66.0;\n    float n_kernel_max_by_mouse = n_max_kernel_size * a_n_coords_normalized_mouse.x;\n    float n_random = f_n_random(a_n_coords_normalized_pixel.x*a_n_coords_normalized_pixel.y);\n\n    float n_kernel = n_kernel_max_by_mouse * n_random;\n    vec4 a_n_rgba_blurred = vec4(0.0,0.0,0.0,0.0);\n    \n        a_n_rgba_out = f_a_n_blurred(\n            n_kernel+1.0,\n            n_kernel+1.0,\n            fragCoord.x,\n            fragCoord.y\n       );\n\n    \n\n}","name":"Image","description":"","type":"image"}]}