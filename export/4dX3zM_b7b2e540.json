{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\n#define fNumPoints 30.0\n#define iNumPoints 30\n\nvec2 pointList[iNumPoints];\nvec4 result;\n\nfloat speedUp = 1.8;\n\nvoid populatePointList()\n{\n\t// Create a circle of points\n\tfloat fStep = 2.0 * 3.14159 / ((fNumPoints - 5.0) / 2.0) + 0.005 * cos(0.1 * iTime);\n\tfloat fOffset = 0.0;\n\t\n\tint n = 0;\n\tfor (int i = 0; i < (iNumPoints - 5) / 2; i++)\n\t{\n\t\tfOffset += fStep;\n\t\tpointList[i] = vec2(0.5 + 0.4 * sin(fOffset), 0.5 + 0.4 * cos(fOffset + 0.1 * sin(iTime)) + fOffset * 0.01 * sin(0.5 * iTime));\n\t\tpointList[i].x += (1.0 - 3.0 * mod(float(i), sin(iTime * 0.1) * 0.01 + 3.0)) * 0.01 * sin(iTime * speedUp) * fStep;\n\t\tpointList[i].y += 0.02 * cos(iTime * speedUp * 2.0 * fStep) * fStep;\n        n = i;\n\t}\n\t\n\tfor (int i = iNumPoints - 5 / 2; i < iNumPoints - 5; i++)\n\t{\n\t\tfOffset += fStep;\n\t\tpointList[i] = vec2(0.5 + 0.1 * cos(fOffset), 0.5 + 0.1 * sin(fOffset));\n\t\t\n\t\tpointList[i].x += (1.0 - 2.0 * mod(float(i), 2.0)) * 0.016 * sin(iTime * speedUp * 0.3) * fStep;\n\t\tpointList[i].y += 0.028 * cos(iTime * speedUp * 2.4 * fStep) * fStep;\n\t}\t\n\t\n\tpointList[25] = vec2(0.01 * cos(iTime * 2.0 * speedUp), 0.0);\n\tpointList[26] = vec2(1.0, 0.01 * sin(iTime * 2.0 * speedUp));\n\tpointList[27] = vec2(1.0, 1.0);\n\tpointList[28] = vec2(0.01 * cos(iTime * speedUp * 2.0), 1.0);\n\tpointList[29] = vec2(0.5 + 0.012 * cos(iTime * speedUp * 2.0), 0.5 + 0.008 * cos(iTime * speedUp));\n}\n\nvoid processPointList(vec2 fragCoord)\n{\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 mouse = iMouse.xy / iResolution.xy;\n\tvec2 highlight = vec2(0.5, 0.5) + 0.51 * vec2(sin(iTime) * 0.5 , cos(iTime) *  0.5);\n\tfloat mouseD = pow(1.0 - distance(highlight, uv), 18.0);\n\t\n\t// Find closest point to this pixel\n\tfloat d = 1.0, minD = 1.0, minD2 = 1.0;\n\t\n\tfor (int i = 0; i < iNumPoints; i++) minD = min(distance(pointList[i], fragCoord.xy / iResolution.xy), minD);\t\t\t\n\t\n\tresult.g = pow(minD * 4.0, 2.0) + 8000.0 * pow(max(0.0, (0.05 - minD)),4.0) / max(0.0, (0.05 - minD));\n\tresult.r = result.b = mouseD * 50.0 * pow(minD * 4.0, 8.0) + 15000.0 * pow(max(0.0, (0.05 - minD)),4.0) / max(0.0, (0.05 - minD));;\n\tresult.r = max(0.0, result.r);\n    result.b = max(0.0, result.b);\n    result.g = max(0.0, result.g);\n    result.r += pow(minD, 2.0) * 20.0;\n    result.b += pow(minD, 2.0) * 10.0 + result.g * 2.0;\n}\t\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n\t\n\tpopulatePointList();\n\n\tprocessPointList(fragCoord);\n\n\tfragColor = result;\n\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dX3zM","date":"1374860270","viewed":240,"name":"Cellular","username":"Tim","description":"A work in progress using voronoi-patterns","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoicells"],"hasliked":0,"parentid":"","parentname":""}}