{"ver":"0.1","info":{"id":"dslfDX","date":"1689345320","viewed":76,"name":"Neon Ripples","username":"Meyrter","description":"its a second project of mine, not too complex","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","circles","ripples","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ){\n    vec3 dc = vec3(0.688, 0.738, 1.188);\n    vec3 amp = vec3(0.168, 0.238, 0.350);\n    vec3 frq = vec3(0.500, 0.500, 0.500);\n    vec3 phs = vec3(3.490, 3.326, 0.280);\n\n    return dc + amp*cos( 6.28318*(frq*t*phs));\n    //gradient\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n\n    vec2 uv=(fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 uv0=uv;\n    \n    vec3 finalColor = vec3(1.);\n    \n    \n    for(float i=0.;i<8.;i++){\n    \n        uv=fract(uv)-0.5;\n        uv*=1.;\n\n\n        float d = length(uv) + exp(-length(uv0));\n        float pattern = (abs(sin(d*20.+cos(iTime)))+sin(d*10.+sin(iTime*1.5))+sin(iTime/4.));\n        pattern = 0.13/pattern;\n\n        vec3 color = palette(length(uv) + iTime/2.);\n        vec3 color2 = palette(length(uv) + iTime/4.);\n\n        vec3 water = color*pattern;\n        \n        \n        finalColor *= water*2.;\n        fragColor = vec4(finalColor,1.);\n\n    }\n    \n    \n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}