{"ver":"0.1","info":{"id":"ltGGRh","date":"1473006772","viewed":479,"name":"Retro CRT","username":"Matsilagi","description":"Just a test","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["test","example","retro","crt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//PORTED FROM https://the8bitpimp.wordpress.com/2014/07/17/retro-crt-shader/ AS A TEST\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    // per row offset\n    float f  = sin( uv.y * 320.0 * 3.14 );\n    // scale to per pixel\n    float o  = f * (0.35 / 320.0);\n    // scale for subtle effect\n    float s  = f * .03 + 0.97;\n    // scan line fading\n    float l  = sin( iTime * 32. )*.03 + 0.97;\n    // sample in 3 colour offset\n    float r = texture( iChannel0, vec2( uv.x+o, uv.y+o ) ).x;\n    float g = texture( iChannel0, vec2( uv.x-o, uv.y+o ) ).y;\n    float b = texture( iChannel0, vec2( uv.x  , uv.y-o ) ).z;\n    // combine as \n    fragColor = vec4( r*0.7, g, b*0.9, l)*l*s;\n}","name":"Image","description":"","type":"image"}]}