{"ver":"0.1","info":{"id":"tsjBDR","date":"1589868086","viewed":210,"name":"LEGA_KIFS","username":"legarcia","description":"Credits see this video\n\nhttps://www.youtube.com/watch?v=il_Qg9AqQkE","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["kifskaleidoscopic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N(float angle){\n\treturn vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n\n\tuv *=1.5;\n    vec3 col = vec3(0.);\n\n    \n    uv.x = abs(uv.x);\n    \n    //tan(a) = y / .5  -> y = tan(a)*.5;\n    \n    uv.y += tan((5./6.)*3.1415)*.5;\n    \n    \n    \n    vec2 n = N((5./6.)*3.1415);\n\tfloat d = dot(uv-vec2(.5, 0.), n);\n    uv -= n*max(0., d)*2.;\n    \n    \n    // col += smoothstep(.01, .0, abs(d));\n    \n\tn =N((2./3.)*3.1415);\n    float scale =1.;\n    uv.x += 0.5;  \n    for(int i=0; i<4; i++){\n        uv *= 3.;\n        scale *= 3.;\n        uv.x -= 1.5;  \n        \n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        uv -= n*min(0., dot(uv, n))*2.;\n  \n    }\n    \n\n\n    d = length(uv - vec2(clamp(uv.x, -1., 1.),0));\n    col +=smoothstep(1./iResolution.y, .0, d/scale);\n    \n    uv/= scale;\n    \n    col += texture(iChannel0, uv-iTime*.03).rgb;\n    \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}