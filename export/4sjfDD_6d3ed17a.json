{"ver":"0.1","info":{"id":"4sjfDD","date":"1500485644","viewed":274,"name":"Diffeomorphisms of the disk","username":"etale_cohomology","description":"Fork of Fabrice's https://www.shadertoy.com/view/ltdXR8","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","math","tutorial","topology","diffeomorphism","fabrice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of Fabrice's https://www.shadertoy.com/view/ltdXR8\n\n// I'm pretty sure this is a family of diffeomorphisms of the disk,\n// which reminds me a lot of Wikipedia's diffeomorphism of the square:\n// https://en.wikipedia.org/wiki/Diffeomorphism\n// https://en.wikipedia.org/wiki/File:Diffeomorphism_of_a_square.svg\n\n#define TWIST 4.\n#define STRIPES 70.\n#define STRIPE_THINNESS .7\n\nvoid mainImage(out vec4 fragColor, in vec2 uv){\n    uv = (2.*uv - iResolution.xy) / iResolution.y;\n\n    float radius = distance(uv, vec2(0));\n    float angle = atan(uv.y, uv.x);\n\n    float radius_complement = clamp(1. - radius, .0, 1.);  // This seems to have all the magic...\n    float twisting = sin(angle + TWIST * pow(radius_complement, 2.) * sin(iTime));  // This adds all the twisting!\n\tfloat rgb = radius * twisting;\n    rgb = STRIPE_THINNESS + sin(rgb * STRIPES);  // Try to comment this out!\n    rgb /= fwidth(rgb);  // Some AA!\n\n    fragColor.rgb = vec3(rgb);\n}\n","name":"Image","description":"","type":"image"}]}