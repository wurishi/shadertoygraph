{"ver":"0.1","info":{"id":"NtSczt","date":"1651046001","viewed":173,"name":"K. A. Jari","username":"iveks","description":"Something small for instanssi / revision 2022 25min shader demo.\nFirst time messing with audio channels.\nWould have wanted to shove in HSV conversions as well, but 25 mins is 25 mins ;)","likes":2,"published":1,"flags":4,"usePreview":0,"tags":["audio","symmetry","instanssi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define PI 3.1415926535\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = uv*2.0 - 1.0;\n    uv.y *= iResolution.y / iResolution.x;\n\n    // Time varying pixel color\n    float sound = texture(iChannel3, vec2(0.05, 0.5)).r;\n    \n    float r = 0.0;\n    float g = 0.0;\n    float b = 0.0;\n    \n    float d = length(uv);\n    \n    r = d * 0.5 + 0.5 * mod(d * 1.0, sound + cos(iTime));\n    g = d * 0.5 + 0.5 * mod(d * 2.0, sound + sin(iTime));\n    b = d * 0.5 + 0.5 * mod(d * 3.0, sound);\n    \n    // sound wave\n    \n    float d2 = length(uv);\n    \n    \n    float a = abs(mod(atan(uv.y, uv.x) * 4.0, PI * 2.0) - PI);\n    \n    float soundWave = texture(iChannel3, vec2(a * 0.01, 0.5)).r;\n    \n    // d = step(d, 0.1 + sound);\n    \n    float donitsi = smoothstep(d2, 0.1, 0.0 + soundWave) - smoothstep(d2, 0.1, 0.2 + soundWave);\n    \n    vec4 col = vec4(r, g, b, 1.0);\n    \n    // col = vec4(1.0) * donitsi;\n\n    col *= d;\n    col += vec4(r, g, b, 1.0) - donitsi;\n    \n    // col = vec4(1.0) * a;\n    \n    // Output to screen\n    fragColor = vec4(col.rgb * vec3(1.0, 0.7, 0.3),1.0);\n}","name":"Image","description":"","type":"image"}]}