{"ver":"0.1","info":{"id":"ftVSzh","date":"1672331580","viewed":71,"name":"Improvised Koch by Darko","username":"omegasbk","description":"Hacked up Koch fractal.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","koch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","previewfilepath":"/media/ap/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Made by Darko Supe (omegasbk)\n\nvec2 N(float angle)\n{\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float time = mod(iTime  * 2.2, 2.555);\n    \n    uv /= 1.25 + (time);\n    \n    vec2 mouse = iMouse.xy/iResolution.xy;\n    \n    vec3 col = vec3(0.);\n    \n    uv.x = abs(uv.x);\n    uv.y -= tan((5./6.) * 3.1415) * .5;\n    \n    vec2 n = N((5./6.) * 3.1415);\n    float d = dot(uv - vec2(.5, 0), n);\n    uv -= n*max(0., d)*2.;\n        \n    n = N(2. * 3.1415 / 3.);\n    \n    float scale = 2./(1.25 + time);\n    \n    uv.x += .5;\n    for (int i = 1; i < 10 + int(time); i++)\n    {\n        uv *= 3.;\n        scale *= 3.;\n        uv.x -= 1.5;\n        \n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        uv -= n*min(0., dot(uv, n))*2.;\n    }\n    \n    d = length(uv - vec2(clamp(uv.x, -1., 1.), 0));\n    col += smoothstep(1./iResolution.y, 0.0, d/scale);\n    col.rgb += texture(iChannel0, normalize(vec3(uv / scale / .86, (sin(iTime) - 1.5) / 4.) - vec3(0.))).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}