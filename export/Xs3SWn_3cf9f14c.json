{"ver":"0.1","info":{"id":"Xs3SWn","date":"1458563478","viewed":203,"name":"Rotating Sphere test","username":"Terah","description":"Faking a 3d sphere with maths ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sphere","fake3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    float r = 250.0;\n    vec2 C = iResolution.xy / 2.0;\n    vec3 H = vec3(fragCoord, 0.0);\n    \n    \n    \n    \n    float ry = -0.3*t;\n    mat3 my = mat3(cos(ry), 0.0, -sin(ry), 0.0, 1.0, 0.0, sin(ry), 0.0, cos(ry));\n    \n    float rz = -0.25 + cos(0.1*t)/5.0;\n    mat3 mz = mat3(cos(rz), sin(rz), 0.0, -sin(rz), cos(rz), 0.0, 0.0, 0.0, 1.0);\n    \n    float rx = 0.4 + sin(0.1*t)/5.0;\n    mat3 mx = mat3(1.0, 0.0, 0.0, 0.0, cos(rx), sin(rx), 0.0, -sin(rx), cos(rx));\n    \n    mat3 m = mx * mz * my;\n    \n    H.xy = H.xy - C.xy;\n    float d = length(H.xy);\n    H.z = sqrt((r*r) - (d*d));\n    float h = sqrt((r*r) - (d*d));\n    \n    H = H * m;\n    \n    if(d<r)\n    {\n        \n        float a = atan(H.x/H.z);\n        float ad = 180.0 + ((a / M_PI) * 180.0);\n        \n        float b = asin(H.y/r);\n        float bd = 180.0 + ((b / M_PI) * 180.0);\n\n        \n        if(mod(ad, 20.0) < 0.5)\n        \tif(mod(bd, 20.0) < 0.5)\n                fragColor = vec4(h/(r*0.5), 0.0, h/(r*0.5), 1.0);\n            else\n                fragColor = vec4(0.0, 0.0, h/(r*0.5), 1.0);\n        else\n            if(mod(bd, 20.0) < 0.5)\n                fragColor = vec4(h/(r*0.5), 0.0, 0.0, 1.0);\n            else\n                fragColor = vec4(0.15*h/r ,0.15*h/r, 0.15*h/r, 1.0);\n    }\n    else\n        fragColor = vec4(0.12,0.07,0.1,1.0);\n        \n}","name":"Image","description":"","type":"image"}]}