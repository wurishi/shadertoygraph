{"ver":"0.1","info":{"id":"lst3zH","date":"1448220220","viewed":108,"name":"Mandelbrot -- iterating","username":"Cobbleopolis","description":"A mandelbrot shader that shows it's various iterations","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const int iter = 100;\nconst float stepTime = 0.5;\nconst float scale = 0.5;\nconst vec2 center = vec2(0.5, 0.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 uv ) {\n\tuv /= iResolution.xy;\n\n    vec2 c = vec2(4, 3) * (uv-.5) / (scale * 3.0) - center, z=c;\n\n    int v = 0;\n    for(int i=0; i<iter; i++) {\n        float x = (z.x * z.x - z.y * z.y) + c.x;\n        float y = (z.y * z.x + z.x * z.y) + c.y;\n\n        if((x * x + y * y) > 4.0) break;\n        z = vec2(x, y);\n        v++;\n    }\n    \n    float val = 1.0 -  float(v) / min((iTime / stepTime), float(iter));\n    fragColor = vec4(val, val, val,1.0);\n}","name":"","description":"","type":"image"}]}