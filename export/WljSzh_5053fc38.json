{"ver":"0.1","info":{"id":"WljSzh","date":"1565033730","viewed":118,"name":"Pmod Practice 001","username":"Hirai_worthless","description":"aaa","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\nmat2 genRot(float v){\n\treturn mat2(cos(v),-sin(v),sin(v),cos(v));\n}\nvec3 pmod(vec3 p,float c){\n    float tmp = PI * 2. / c;\n\tfloat l = length(p.xy);\n    float theta = atan(p.y/p.x);\n    theta = mod(theta,PI * 2. / c);\n    return vec3(l * cos(theta), l * sin(theta),p.z);\n    \n}\nvec3 cellMod(vec3 p,vec3 c){\n    p.z = mod(p.z + c.z / 2.,c.z) - c.z/2.;\n\tp.x = mod(p.x + c.x / 2.,c.x) - c.x/2.;\n    p.y = mod(p.y + c.y / 2.,c.y) - c.y/2.;\n    return p;\n}\n\nfloat cube(vec3 p, vec3 o){\n\treturn max(\n    \tabs(p.x - o.x),\n        max(abs(p.y - o.y),\n            abs(p.z - o.z))\n    );\n}\n\nfloat map(vec3 p){\n    p.xy *= genRot(iTime);\n\tp = cellMod(p,vec3(2.0,2.0,0.5));\n    p.xy *= genRot(PI / 12.);\n\tp = pmod(p,12.);\n    p.xy *= genRot(-PI / 12.);\n\n    float cu = cube(p,vec3(1.,0.,0.)) - 0.2;\n    float sp = length(p - vec3(1.,0.,0.)) - 0.1;\n    sp = min(sp,length(p.xz - vec2(1.,0.)) - 0.05);\n    return mix(cu,sp,smoothstep(0.4,0.6,abs(fract(iTime/2.) - 0.5) * 2.0));\n\n}\n\nconst float EPS = 0.001;\nvec3 getNormal(vec3 p) {\n    return normalize(vec3(\n        map(p + vec3(EPS, 0.0, 0.0)) - map(p + vec3(-EPS,  0.0,  0.0)),\n        map(p + vec3(0.0, EPS, 0.0)) - map(p + vec3( 0.0, -EPS,  0.0)),\n        map(p + vec3(0.0, 0.0, EPS)) - map(p + vec3( 0.0,  0.0, -EPS))\n    ));\n}\n\nvec4 trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    vec3 p = vec3(0.0,0.0,0.0);\n    \n    for(int i = 0; i < 96; ++i){\n        p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return vec4(getNormal(p),t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 U )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec3 R = iResolution,\n    r = normalize(vec3((2.*U - R.xy )/  R.y,1.2)),\n    o = vec3(0,0,-1.5 + iTime * 2.);\n    r.yz *= genRot(iTime * PI / 8.);\n    vec4 data = trace(o,r);\n    vec3 n = vec3(data.xyz);\n    float t = data.w;\n    float fog = 1.0 / (1.0 + t * t * 0.05);\n    float tmp = sqrt(dot(n,r));\nvec3 fc = t > 10000.0 ? vec3(0.8) : mix((vec3(data.z) + 1.0)/1.5\n                                            ,vec3(0.0), - pow(dot(n,r),1.0));\n\tfc = mix(fc,vec3(1.),1. - fog);\n    //fc = vec3(fog);\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}