{"ver":"0.1","info":{"id":"4fjXDW","date":"1706473037","viewed":149,"name":"falling letters bw","username":"Diamondarms","description":"testing this effect\n\nbetter version: https://www.shadertoy.com/view/M3XGW7","likes":3,"published":1,"flags":0,"usePreview":1,"tags":["grid","fade","letters"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(float co) { return fract(sin(co*(91.3458)) * 47453.5453); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float waveSize = 10.,\n          whiteL = 1.,\n          fadedL = 7.,\n          x,y;\n\n    vec2 uv = fragCoord/iResolution.xy,\n         rFVel = vec2(12,20), //Velocity range of char fall \n         ref_size = vec2(16.), //Size of the reference image letters grid\n         ref_char = 1. / ref_size,\n         grid_ref = uv / ref_size,\n         tab_size = vec2(30.), //Size of the final letters grid\n         grid_tab = uv * tab_size,\n         uv_index_tab = floor(grid_tab),\n         char = vec2(1.);\n    \n    vec3 col = vec3(1.0);\n    \n    for(; x < tab_size.x; x++){\n        for(y = 0.; y < tab_size.y ; y++){\n            \n            float fallVel = (rand(x) * rFVel.x) + (rFVel.y-rFVel.x),\n                  fade = smoothstep(whiteL+fadedL,whiteL-1.,mod(y+(iTime*fallVel),waveSize));\n                  \n            //random vec2 beetwen 0 and ref vec2 size, used to pick a letter in ref image\n            float randX = floor(rand(x + y)*ref_size.x),\n                  randY = floor(rand(y - x)*ref_size.y);\n            vec2 randVec2 = vec2(randX,randY);\n            char = grid_ref + (ref_char * randVec2);\n\n            \n            vec3 charColor = vec3(step(0.4,texture(iChannel1,char * tab_size).r));\n            \n            //the vec2 of the final grid where char will be placed\n            col *= uv_index_tab == vec2(x,y) ? charColor * vec3(fade) : vec3(1.);\n        }\n    }\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}