{"ver":"0.1","info":{"id":"DtyXzh","date":"1685912797","viewed":32,"name":"Hexagramagon","username":"p0rtL","description":"A looping combination of hexagrams and hexagons","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["looping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdHexagram( in vec2 p, in float r )\n{\n    const vec4 k = vec4(-0.5,0.8660254038,0.5773502692,1.7320508076);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= 2.0*min(dot(k.yx,p),0.0)*k.yx;\n    p -= vec2(clamp(p.x,r*k.z,r*k.w),r);\n    return length(p)*sign(p.y);\n}\n\nfloat sdHexagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.688, 0.331, 0.241);\n    vec3 b = vec3(0.557, 0.373, 0.309);\n    vec3 c = vec3(1.389, 1.547, 1.038);\n    vec3 d = vec3(4.934, 1.548, 3.704);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 color = vec3(0.0, 0.0, 0.0);\n    \n    for (float i = 0.0; i < 1.0; i++) {\n        uv *= 3.0;\n        uv = fract(uv);\n        uv -=0.5;\n\n        float d = sdHexagram(uv, length(uv) * exp(-length(uv0)));\n\n        d = smoothstep(0.0, 0.1, abs(sin(d*2.0 + iTime / 2.0)/16.0));\n\n        d = 0.5/d;\n\n        float f = abs(sdHexagon(uv0, sin(d * 3.0)));\n\n        f = 0.1/f;\n        color = palette(exp(-f) + sin(iTime / 2.0));\n    }\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}