{"ver":"0.1","info":{"id":"XsdGRr","date":"1447772399","viewed":219,"name":"Modification of Nyancat fractal","username":"resjug","description":"Many thanks to iq for sharing his code.\nCode from https://www.shadertoy.com/view/4slGWH, https://www.shadertoy.com/view/4dfGRn, https://www.shadertoy.com/view/4df3Rn also the default new shader\n\nV 1.1:\nsome constants changed\n\nTodo: Better bg","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","julia","nyan","myfirstshaderhack"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"\n// Skills provided by others. Cut & paste provided by resjug.\n// Version 1.1\n\n// License (presumably) Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Code from https://www.shadertoy.com/view/4slGWH & https://www.shadertoy.com/view/4dfGRn also the default new shader\n\nvec4 getNyanCatColor( vec2 p )\n{\n\tp = clamp(p,0.0,1.0);\n\tp.x = p.x*40.0/256.0;\n\tp.y = 0.5 + 1.5*(0.5-p.y);\n\tp = clamp(p,0.0,1.0);\n\tfloat fr = floor( mod( 9.0*iTime, 6.0 ) ); //Ed: anim from 3.0 to 9.0 fps\n\tp.x += fr*40.0/256.0;\n\treturn texture( iChannel0, p );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = -1.0+2.0*fragCoord.xy / iResolution.xy;\n\tp.x *= iResolution.x/iResolution.y;\n\n    // zoom\t(Ed: Modded & re-added)\n\tp = vec2(0.0,0.0)  + p*1.75 * pow( 0.9, 2.00*(0.5+0.5*cos(0.25*iTime)) );\n    //p = vec2(0.,0.)  + p*1.75;\n\t\n    vec4 col = vec4(0.0);\n\tvec3 s = mix( vec3( 0.2,0.2, 1.0 ), vec3( 0.5,-0.2,0.5), 0.5+0.5*sin(0.5*iTime) );\n\t//vec3 s = vec3( 0.2,0.2, 1.0 );\n    \n    \n    // 'Magic' from https://www.shadertoy.com/view/4dfGRn\n    // Ed: 1.1 to 1.68\n    vec2 cc = 1.68*vec2( 0.5*cos(0.1*iTime) - 0.25*cos(0.2*iTime), \n\t                    0.5*sin(0.1*iTime) - 0.25*sin(0.2*iTime) );\n    \t\n\t//vec2 c = vec2(-0.76, 0.15);\n\tfloat f = 0.0;\n\tvec2 z = p;\n\tfor( int i=0; i<32; i++ )\n\t{\n\t\tif( (dot(z,z)>32.0) || (col.w>0.1) ) continue; // break;\n\n        // fc(z) = zÂ² + c\t\t\n\t\tz = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + cc;\n\t\t\n\t\tcol = getNyanCatColor( s.xy + s.z*z );\n\t\tf += 1.0;\n\t}\n\t\n\t//vec3 bgA = 1.5*vec3(1.0,0.5,0.5) * sqrt(f/8.0);\n    \n    //smoothing code here play with 1st (56th) lines numbers for pretty stepping 'glitches',\n    //2nd for color.\n    float sl = f - (log2(log2(dot(z,z))) * 1.0) + 17.0;\n    vec3 bgA = clamp(0.5 + 0.5*cos( 15.0 + sl*0.5 + vec3(0.1,0.0,0.99)),vec3(0.0005),vec3(1.0));\n    \n\t//vec3 bg = vec3(1.0);\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 bgB = vec3(uv,0.5+0.5*sin(iTime));\n    //vec3 bgB = vec3(1.0);\n    \n    \n    \n  \tvec3 bg = mix(bgA, bgB, vec3(0.5));\n    \n    \n    \n\tcol.xyz = mix( bg, col.xyz, col.w );\n\t\n\tfragColor = vec4( col.xyz,1.0);\n}","name":"","description":"","type":"image"}]}