{"ver":"0.1","info":{"id":"4ltyDM","date":"1532875612","viewed":1155,"name":"runes (simplified version)","username":"FabriceNeyret2","description":"simplified glypths from \"runes\" by otaviogood. [url]https://shadertoy.com/view/MsXSRn[/url]","likes":31,"published":3,"flags":0,"usePreview":0,"tags":["procedural","font","letters","runes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define S(d,r) smoothstep( r, 0., d)   // antialiased draw. r >= 1.5\n\nfloat line(vec2 p, vec2 a,vec2 b) { // from https://www.shadertoy.com/view/4dcfW8\n    p -= a, b -= a;\n\tfloat h = clamp(dot(p, b) / dot(b, b), 0., 1.);   // proj coord on line\n\treturn length(p - b * h);                         // dist to segment\n}\n\n// --- glyphs simplified from \"runes\" by otaviogood. https://shadertoy.com/view/MsXSRn\n\n// makes a rune in the 0..1 uv space. Seed is which rune to draw.\nfloat Rune(vec2 U, vec2 seed)\n{\n\tfloat d = 1e5;\n\tfor (int i = 0; i < 4; i++)\t// number of strokes\n\t{\n        vec4 pos = vec4( texture(iChannel1, (seed)    / iChannelResolution[1].xy).xy,\n\t\t                 texture(iChannel1, (seed+1.) / iChannelResolution[1].xy).xy \n                        );\n\t\tseed += 2.;\n\t\t// expand the range and mod it to get a nicely distributed random number - hopefully. :)\n\t\tpos = fract(pos * 128.);\n\n\t\t// each rune touches the edge of its box on all 4 sides\n\t\tif (i == 0) pos.y = .0;\n\t\tif (i == 1) pos.x = .999;\n\t\tif (i == 2) pos.x = .0;\n\t\tif (i == 3) pos.y = .999;\n\t\t// snap the random line endpoints to a grid 2x3\n\t\tvec4 snaps = vec4(2, 3, 2, 3);\n\t\tpos = ( floor(pos * snaps) + .5) / snaps;\t\n\n\t\td = min(d, line(U, pos.xy, pos.zw + .001) ); // closest line\n\t}\n\treturn S(d,40./360.); // 20./iResolution.y);\n}\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\tU /= iResolution.y;\n\tU.x += iTime * .03;\n   \n\tU += .003 * texture(iChannel0, U*3.).xy; // (optional) distortion\n\tU *= 16.; U.y *= .8;\n\n\tO -= O;\n\tif ( mod(U.y,2.) > 1. ) O += Rune( fract(U), floor(U) );\n}\n\n","name":"Image","description":"","type":"image"}]}