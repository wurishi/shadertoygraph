{"ver":"0.1","info":{"id":"DlBBzD","date":"1694991707","viewed":44,"name":"SDF Rounded Box (Human Readable)","username":"euclid","description":"playin around. making it human readable ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["asdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdfRoundedBox(in vec2 position, in vec2 boxDimensions, in vec4 cornerRadii )\n{\n    float minDim = min(boxDimensions.x, boxDimensions.y);\n    cornerRadii = min(cornerRadii, vec4(minDim));\n\n    cornerRadii.xy = (position.x > 0.0) ? cornerRadii.xy : cornerRadii.zw;\n    cornerRadii.x  = (position.y > 0.0) ? cornerRadii.x  : cornerRadii.y;\n\n    vec2 absoluteMargin = abs(position) - boxDimensions + cornerRadii.x;\n\n    return min(max(absoluteMargin.x, absoluteMargin.y), 0.0) + length(max(absoluteMargin, 0.0)) - cornerRadii.x;\n}\n\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 position = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    float scaleFactor = min(iResolution.x, iResolution.y);\n    \n    vec3 fillColor = vec3(0.2, 0.0, 0.2);\n    vec3 borderColor = vec3(0.0, 0.5, 0.7);\n    vec3 backgroundColor = vec3(0.1, 0.2, 0.2);\n    \n    float pixelSmoothness = 3.0 / scaleFactor;\n    \n    \n    // Fill     \n    vec4 cornerRadii = vec4(100.0, 15.0, 300.0, 50.0) / scaleFactor;\n    vec2 boxDimensions = vec2(256.0, 256.0) / scaleFactor;\n    \n    // Dimension Animation\n    boxDimensions += 0.2*cos(iTime+vec2(0,2));\n    \n    float boxDist = sdfRoundedBox(position, boxDimensions, cornerRadii);\n    \n    float fillFactor = smoothstep(0.0, pixelSmoothness, boxDist);\n    \n    // Border\n    float borderThickness = 25.0 / scaleFactor;\n    float borderDist = boxDist + borderThickness;\n    float borderFactor = smoothstep(0.0, pixelSmoothness, borderDist);\n    float borderMask = (1.0 - fillFactor) - (1.0 - borderFactor);\n    \n    // Composite\n    vec3 finalFillColor = mix(fillColor, borderColor, fillFactor);\n    vec3 finalBorderColor = mix(finalFillColor, borderColor, borderMask);\n    vec3 finalColor = mix(backgroundColor, finalBorderColor, 1.0 - fillFactor);\n    \n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}