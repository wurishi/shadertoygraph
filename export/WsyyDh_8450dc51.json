{"ver":"0.1","info":{"id":"WsyyDh","date":"1602663184","viewed":111,"name":"Example 33 - Game of Life","username":"jt","description":"Using render-to-texture to implement Conway's Game of Life.\n[url]https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life[/url]\nMore on cellular automata: [url]https://www.wolframscience.com[/url]\n(If screen remains black reset time)","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["example","gameoflife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    if(iTime < 0.1)\n        fragColor = texture(iChannel1, fragCoord/res);\n    else\n    {\n    \tint N = 0;\n    \tivec2 d;\n    \tfor(d.y = -1; d.y <= +1; d.y++)\n        \tfor(d.x = -1; d.x <= +1; d.x++)\n            \t//N += int(step(0.5, texelFetch(iChannel0, ivec2(fragCoord) + d, 0).r));\n                N += int(step(0.5, texelFetch(iChannel0, ivec2(mod(fragCoord + vec2(d), res)), 0).r));\n\n    \tif(texelFetch(iChannel0, ivec2(fragCoord), 0).r < 0.5)\n            // \"fragColor = if (Count == 3) then vec4(1.0) else vec4(0.0);\"\n            fragColor = (N == 3) ? vec4(1.0) : vec4(0.0);\n    \telse\n            // \"fragColor = if (Count >= 3 && Count <= 4) then vec4(1.0) else vec4(0.0);\"\n        \tfragColor = (N >= 3 && N <= 4) ? vec4(1.0) : vec4(0.0);\n    }\n}\n","name":"Buffer A","description":"","type":"buffer"}]}