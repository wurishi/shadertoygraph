{"ver":"0.1","info":{"id":"ssBcDw","date":"1643606683","viewed":76,"name":"Pondering the Mandelbrot set","username":"d20dude","description":"Explore the mandelbrot set up to single precision accuracy, use the mouse to move around","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Change these 4 variables to explore the mandelbrot set\nconst vec2 COORDS = vec2(-.7487377,.0116947);\nconst float ZOOM = 2.0;\nconst int SAMPLES = 2;\nconst float MAGN = 0.001;\n\nconst float PI = 3.14159265;\nconst float THETA = 2.0 * PI / float(SAMPLES);\n    \nfloat mandelbrot(vec2 c){\n    const float iter = 1000.0;\n    vec2 z = vec2(0.0);\n    for (float i = 0.0; i < iter; i++){\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        if(dot(z, z) > 123456.0) return i / iter;\n    }\n    return 0.0;\n}\nvec3 colorgen(float t){\n//Change these 4 variables to play with the colors, refer to this link to find out how\n//https://iquilezles.org/articles/palettes\n    vec3 a = vec3(0.50, 0.50, 0.50);\n    vec3 b = vec3(0.50, 0.50, 0.50);\n    vec3 c = vec3(1.00, 1.00, 1.00);\n    vec3 d = vec3(0.00, 0.10, 0.20);\n    return 1.0 - (a + b * cos(2.0 * PI * (c * t + d)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n    float iter = mandelbrot(COORDS + ((fragCoord - iMouse.xy) / iResolution.y) * ZOOM);\n    for(int i = 0; i < SAMPLES; i++){\n        //find roots of unity to sample around the point\n        vec2 shift = MAGN * vec2(cos(float(i) * THETA), sin(float(i) * THETA));\n        vec2 p = COORDS + ((fragCoord - iMouse.xy + shift) / iResolution.y) * ZOOM;\n        iter += mandelbrot(p);\n    }\n\tfragColor = vec4(colorgen(log(log(2.71828 / (iter / float(SAMPLES + 1))))), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}