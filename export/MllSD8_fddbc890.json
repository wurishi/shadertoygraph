{"ver":"0.1","info":{"id":"MllSD8","date":"1436545325","viewed":1581,"name":"tunnel monster","username":"Psycho","description":"solskogen 2015 compo winner.  Party hack that didn't quite turn out as intended, but let's support the compo...","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","raymaching","monster","solskogen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","previewfilepath":"/media/ap/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","type":"music","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec3 body=vec3(0,0.3,0);\nvec3 foot[6];\nvec3 knee[6];\nfloat speed = .6;\n\n\nvec3 solve( vec3 p, float l1, float l2, vec3 dir )\n{\n\tvec3 q = p*( 0.5 + 0.5*(l1*l1-l2*l2)/dot(p,p) );\n\tfloat s = l1*l1 - dot(q,q);\n\tq += sqrt(max(s,0.))*normalize(cross(p,dir));\n\treturn q;\n}\nvoid ik()\n{\n  vec3 by=vec3(0.);\n  for (int i=0;i<6;i++)\n  {\n    float phase = (i==1||i==2||i==5) ? .5 : 0.;\n    float t = fract(iTime*speed+phase+float(i)*.0);\n  \tfoot[i] = body+vec3(fract(float(i)*.5)*8.-2.,-3,2.-floor(float(i)*.8));\n    if (i>1 && i<4) foot[i].x*=1.4;\n    if (t<.5)\n      foot[i].y+=(1.-cos(t*12.56))*.8;\n    foot[i].z-= (-cos(t*6.28))*.8;\n    \n    knee[i] = foot[i]+solve(body-foot[i],3.,3.,vec3(0,0,sign(foot[i].x)));  \n    by+=knee[i].y;\n  }  \n  body.y = by.y*.05;\n}\n\nvec3 rotatey(vec3 r, float v)\n{ return vec3(r.x*cos(v)+r.z*sin(v),r.y,r.z*cos(v)-r.x*sin(v)); \n}\nfloat box( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\n\nfloat capsule( vec3 p, vec3 a, vec3 b, float r )\n{\n  vec3 pa = p - a, ba = b - a;\n  return length( pa - ba*clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 ) ) - r;\n}\n\nfloat cylinder( vec3 p, vec2 c )\n{\n  return max(abs(p.y)-c.x, length(p.xz)-c.y);\n}\nfloat torus34( vec3 p, vec2 r )\n{\n  vec2 q = vec2(length(p.xz)-r.x,p.y);\n  return max(max(p.x,-.5-p.z), length(q)-r.y);\n}\n\nvec2 u(vec2 a,vec2 b)\n{\n  return (a.x<b.x) ? a : b;\n}\nfloat smoothmin(float a, float b, float r)\n{\n  return a>r || b>r ? min(a,b) : min( min(a,b),r-length(vec2(a,b)-r));\t\n}\n\nvec2 eval(vec3 p) \n{\n  vec3 q = p+vec3(0,-1,-4.*iTime*speed);\n  q+= sin(q.yzx*.3)*2.+sin(q)*.4+sin(q.yzx*2.)*.1;\n  float tunnel =  5. - pow(dot(vec2(1.,1.),pow(q.xy,vec2(4.))),.25);\n  tunnel =smoothmin(tunnel, p.y+3., .3);\n    \n\n  q= p+sin(p.zxy*2.)*.2 + sin(p.yzx*9.)*.03;//+texture(iChannel2,p.xy*.1).xyz*.1;\n  float legs = 100.;\n  for (int i=0;i<6;i++)\n    legs= min(legs, min(\n        capsule(q,body,knee[i],.2),\n        capsule(q,knee[i],foot[i],.2)));\n  \n  q-= body;p-=body;\n    \n  p = rotatey( rotatey(p,sin(iTime*speed*2.)*.5).xzy, sin(iTime*speed*3.)*.3).xzy;\n  legs = smoothmin(legs,length(q+vec3(0,.1,0))-.7,.2);\n  legs = smoothmin(legs,length(q+sin((p.yzx+iTime)*2.)*.1+vec3(0,1,0))-.6,.1);\n  \n  \n  q = vec3(length(p.xz)-.7,p.y+.9,fract(atan(p.x,p.z)*4./6.28-.2)*1.6-.8);\n  float h1 = length(q)-.5, h2 = .3-length(q-vec3(.5,0,0));\n  float head = max(h1,h2);\n  p.y+=.5;\n  legs = smoothmin(legs,head,.3);\n    \n  vec3 pp = q+vec3(-.0,0,0);\n  float eye = length(pp)-.35;\n  \n    \n  vec2 r = u(u(u(\n        vec2(tunnel,1),\n        vec2(legs,2)),\n        vec2(head, 2.+smoothstep(h1-.1,h1,h2))),\n        vec2(eye,4.+smoothstep(-0.34,-.33,-pp.x/*+texture(iChannel1,q.xy)*.01*/)));\n\n  return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  ik();\n    \n  vec2 p = fragCoord.xy / iResolution.xy-.5,c;\n  float heading = sin(iTime)*.3, pitch= cos(iTime)*.2+.2;\n  vec3 vdir= normalize(\n               rotatey(rotatey(vec3(p.y,p.x*1.5,1),\n               pitch).yxz,heading)),\n       vpos= vec3(0,-.3,min(0.,3.*iTime-50.)+sin(iTime*.7)*2.-1.)-4.*normalize(rotatey(rotatey(vec3(0,0,1),pitch).yxz,heading));\n  \n  float t,stp,tmin=0.,r,m,d,tmax=100.;\n  vec3 e=vec3(.01,0,0),cx=e.yyy,n,bg=vec3(.6,.8,1)+.2*sin(vdir*8.),lightdir=vec3(1,1,heading);\n  \n  t=tmin;stp=1.;\n  for (int i=0;i<64;i++)\n  {\n\tt+=stp;\n\tif (t>tmax ||stp<0.005) break;\n\tstp = eval(vpos+vdir*t).x;\n  }\n  if (t<tmax) \n  { vpos+= vdir*t;\n    c= eval(vpos);\n    n= normalize(vec3(eval(vpos+e.xyy).x,eval(vpos+e.yxy).x,eval(vpos+e.yyx).x)-c.x);\n\n    n+= texture(iChannel1,vpos.xy).xyz*.3;\n   \n    r= clamp(eval(vpos+n*.3).x*.8+eval(vpos+n*.7).x+.5,.3,1.); //so\n\t\n    vdir=reflect(vdir,n);\n    d=clamp(dot(normalize(lightdir),n),.0,1.);\n    float af=.2;\n   \n    vec3 diff=vec3(1,0,0);\n    if (c.y>=1.) diff=texture(iChannel1,vec2(vpos.z-4.*speed*iTime,6.28*atan(vpos.y,vpos.x))*.05).xyz;\n    if (c.y>=2.) {diff=mix(vec3(texture(iChannel2,vpos.xy*.3)+.2),vec3(1.5),c.y-2.); af+=(c.y-2.)*.1;}\n   \tif (c.y>=4.) {diff=mix(vec3(0),vec3(1.,.1,.1),c.y-4.);af=1.;}\n\n\tn= mix(diff*d\n     +vec3(.5 * pow( clamp( dot( normalize(lightdir),vdir)\n        ,.0,1.) ,12.)),\n        diff, af); // n = col..\n\n    cx = mix(n*r, vec3(0), t/tmax);\n    tmin= .1;\n   }\n   else{\n     cx = vec3(0);\n   }\n   fragColor.xyz= cx;\n}","name":"","description":"","type":"image"}]}