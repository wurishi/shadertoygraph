{"ver":"0.1","info":{"id":"Nsyyzh","date":"1654360833","viewed":68,"name":"Eisenstein series ish","username":"branc116","description":"https://en.wikipedia.org/wiki/Eisenstein_series","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","math","eisenstein"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N 7\n#define K 7.0\n#define PI 3.1415\n#define cx_div(a, b) vec2(((a.x*b.x+a.y*b.y)/(b.x*b.x+b.y*b.y)),((a.y*b.x-a.x*b.y)/(b.x*b.x+b.y*b.y)))\n#define cx_one_over(b) vec2(b.x, -b.y) / (b.x*b.x+b.y*b.y)\n\n//exp(2*pi*i*a) = exp(2*pi*i*a.x-2*pi*a.y) = exp(2*pi*i*a.x) / exp(2*pi*a.y) = \n//vec2(cos(2*pi*a.x), sin(2*pi*a.x)) / exp(2*pi*a.y)\n\nvec2 cx_pow(vec2 a, float n) {\n    float angle = atan(a.y, a.x);\n    float r = length(a);\n    float real = pow(r, n) * cos(n*angle);\n    float im = pow(r, n) * sin(n*angle);\n    return vec2(real, im);\n}\nvec2 map_eisen(vec2 a, float k) {\n    vec2 sum = vec2(0.0);\n    for (int i = -N; i < N; ++i) {\n        for (int j = -N; j < N; ++j) {\n            if (i == j && i == 0)\n                continue;\n            vec2 prod = float(j)*a;\n            vec2 denom = cx_pow(vec2(float(i)+ prod.x, prod.y), k * 2.0);\n            sum += cx_one_over(denom);\n        }\n    }\n    //float f = mod((atan(sum.y, sum.x) + (2.0*PI)), 2.0*PI) / (2.0*PI);\n    return sum;\n}\nvec2 map_reiman(vec2 a) {\n   vec2 sum = vec2(0.0);\n   vec2 q = vec2(cos(2.0*PI*a.x), sin(2.0*PI*a.x)) / exp(2.0*PI*a.y);\n   for (int i = 1; i < N*N; ++i) {\n       vec2  den = cx_pow(q, float(i));\n       sum += cx_one_over(den);\n   }\n   return sum;\n}\nvec2 map(vec2 a) {\n    vec2 q = vec2(cos(2.0*PI*a.x), sin(2.0*PI*a.x)) / exp(2.0*PI*a.y);\n    vec2 o = map_eisen(q, pow(sin(iTime/10.0), 2.0)*8.0 + 2.0);\n    return log(log(log(o)));\n}\n\n#define AA 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 col = vec2(0.0);\n    vec2 uv = vec2(0.0);\n    for ( int i = -AA; i <= AA; ++i) {\n     for ( int j = -AA; j <= AA; ++j) {\n        vec2 d = vec2(float(i), float(j)) / (float(AA) + 1.0);\n        uv = 2.0*(fragCoord +  d)/iResolution.yy + vec2(-1.0 * iResolution.x / iResolution.y , -1.0);\n        uv = uv*0.4* (0.1 + pow(sin(iTime*0.09), 2.0)) + vec2(0.0, sin(iTime * 0.1) * 0.3 + 0.1);\n        uv.y = mod(uv.y, 0.36 * 2.0) - 0.36;\n        col += map(uv) * 0.09;\n     }   \n    }\n    fragColor = vec4(col, length(col), 1.0);\n}","name":"Image","description":"","type":"image"}]}