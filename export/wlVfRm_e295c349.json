{"ver":"0.1","info":{"id":"wlVfRm","date":"1614120180","viewed":288,"name":"logistic adherances","username":"Lordinator","description":"Represents the logistic serie adherance graph. Logistic series are related to mandelbrot, population growth & water drips. If you want to learn more about the logisitc series, https://www.youtube.com/watch?v=ovJcsL7vyrk","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["mathematics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define minX 0.1\n#define maxX 4.0\n\n#define minY -0.01\n#define maxY 1.0\n\n#define nbRep 1000\n\nfloat closeNumberOfNumberInLogistic(float r, float goal, float epsilon){\n    float res = 0.0;//cumulated closeness to the goal\n    float u = 0.5 + .25 * sin(iTime); //series calc\n    for (int i = 0; i < nbRep; i +=1){\n        u = r * u * (1.0-u); //next logistic term calculated\n        res += (epsilon - min(epsilon, (goal - u)*(goal - u)))/epsilon; //close to 1.0 if u is close to goal in epsilon range\n    }\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float r = minX + uv.x * (maxX - minX);\n    float goal = minY + uv.y * (maxY - minY);\n    \n    fragColor = vec4(log(1.0 + closeNumberOfNumberInLogistic(r,goal,1e-6)/log(100.0*float(nbRep))));\n    //log (1+x)/log(nbRep) heuristic order of repetition \n    //but this formula might --> to give all the adherance values when nbRep --> +inf\n}\n\n","name":"Image","description":"","type":"image"}]}