{"ver":"0.1","info":{"id":"43fGDX","date":"1707974548","viewed":92,"name":"conway's game of life [2]","username":"eliasmb","description":"yet another implementation of Conway's Game of Life...\n\nbruh ðŸ«¤","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["automata","conway","gameoflife"],"hasliked":0,"parentid":"MXX3Wr","parentname":"template shader (2)"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fcolor, in vec2 fcoord) {\n  fcolor = texelFetch(iChannel0, ivec2(fcoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int cell_state(vec2 coord) {\n  float a = texelFetch(iChannel0, ivec2(coord), 0).a;\n  return a >= .5 ? 1 : 0;\n}\n\nint get_neighbors(vec2 coord) {\n  int n = 0;\n  for(int k; k < 9; k += (k != 3) ? 1 : 2) n += cell_state(coord + vec2(k % 3 - 1, k / 3 - 1));\n  return n;\n}\n\nvoid mainImage(out vec4 fcolor, in vec2 fcoord) {\n  if(iFrame == 0) {\n    uint seed = uint(fcoord.x + fcoord.y * resolution.x);\n    float state = random(seed);\n    fcolor = vec4(state > .6 ? 1 : 0);\n    return;\n  }\n  \n  int old_state = cell_state(fcoord);\n  int neighbors = get_neighbors(fcoord);\n  \n  int result = (neighbors < 2 || neighbors > 3) ? 0 : (neighbors == 3 ? 1 : old_state);\n  fcolor = vec4(result);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define resolution iResolution.xy\n\n// https://www.reedbeta.com/blog/hash-functions-for-gpu-rendering/\nuint hash(uint seed) {\n  uint state = seed * 747796405u + 2891336453u;\n  uint word = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;\n  return (word >> 22u) ^ word;\n}\nfloat random(uint seed) {\n  return float(hash(seed)) / 4294967296.;\n}","name":"Common","description":"","type":"common"}]}