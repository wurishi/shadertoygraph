{"ver":"0.1","info":{"id":"lt3BRf","date":"1540426305","viewed":196,"name":"eye ball","username":"mastersun","description":"not finished yet","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["eyeball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2D Random\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n        (c - a)* u.y * (1.0 - u.x) +\n        (d - b) * u.x * u.y;\n}\nmat2 m = mat2(0.8, 0.6, -0.6, 0.8);\nfloat fbm(vec2 p) {\n\tfloat f = 0.0;\n    f += 0.5 * noise(p); p *= m * 2.0;\n    f += 0.25 * noise(p); p *= m * 2.0;\n    f += 0.125 * noise(p); p *= m * 2.0;\n    f += 0.0625 * noise(p); p *= m * 2.0;\n    f /= 0.9375;\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float e = 2./iResolution.y;\n\tvec2 uv = (fragCoord - 0.5 * iResolution.xy)*2.0 / iResolution.y;\n    float radius = 0.7;\n   \tfloat r = length(uv);\n    \n    float ss = 0.5 + 0.5 * sin(3.5 * iTime);\n    float anim = 1. + 0.2 * ss * clamp(1. - r, 0., 1.);\n    r *= anim;\n    \n    vec3 col = vec3(1., 1., 1.);\n    if (length(uv) < radius) {\n        col = vec3(0.31, 0.235, 0.043);\n        float angle = atan(uv.y / uv.x);\n        angle += 0.05 * fbm(20.0 * uv);\n        col = mix(col, vec3(0.682, 0.475, 0.113), fbm(vec2(r, angle * 0.3)));\n        \n        float white_fiber = smoothstep(0.3, 1.0, fbm(vec2(r * 6., angle * 20.)));\n        col = mix(col, vec3(1., 1., 1.), white_fiber);\n        \n        float black_fiber = smoothstep(0.3, 1.0, fbm(vec2(r * 7., angle * 15.)));\n        col = mix(col, vec3(0.3, 0.3, 0.3), black_fiber);\n        float outter_pupil = smoothstep(0.12, 0.35, r);\n        col = mix(vec3(0.9, 0.6, 0.2), col, outter_pupil);\n        float pupil = smoothstep(0.12 - 5. * e, 0.12 + 5. * e, r);\n        col = mix(vec3(0.094, 0.063, 0.0078), col, pupil);\n        \n        float f = smoothstep(radius - 0.3, radius, r);\n        col *= 1. - 0.5 * f;\n              \n        float border = smoothstep(radius - 0.1, radius, r);\n    \tcol = mix(col, vec3(1., 1., 1.), border);\n        \n        float high_light = smoothstep(0.35, 0., length(uv - vec2(0.15, 0.2)));\n        col = mix(col, vec3(0.9), high_light);\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}