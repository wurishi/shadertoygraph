{"ver":"0.1","info":{"id":"4tKSDV","date":"1485983411","viewed":191,"name":"Luma Grayscale","username":"pineapplemachine","description":"Baby's first shader. Applies grayscale to input using luminance instead of RGB average.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grayscale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord){\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 color = texture(iChannel0, uv);\n    float gray = color.g * 0.6 + color.r * 0.3 + color.b * 0.1;\n\tfragColor = vec4(gray, gray, gray, 1.0);\n}","name":"Image","description":"","type":"image"}]}