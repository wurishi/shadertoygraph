{"ver":"0.1","info":{"id":"7dcBDM","date":"1656568492","viewed":69,"name":"__Losharik__","username":"DimaVitruk12345","description":"DimaVitrukshader2","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["dimavitruk28062022"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(vec2 p) {\n    return fract(sin(p.x*2.32+p.y*6.2) * 23433.3432343);\n}\n\nvec3 hashColor(float f) {\n    vec3 part_col = 2.*vec3(\n        hash( vec2(0.-f, 0.*f)  ),\n            hash( vec2(0.+2.*f, f)  ),\n                hash( vec2(f, 1./(f+.1)) )\n    );\n    return part_col;\n}\n\nbool isInsideCircle(vec2 p, vec2 c, float r)\n{\n    float scaleY = iResolution.y / iResolution.x;\n    return (p.x - c.x) * (p.x - c.x) + (p.y   - c.y) * (p.y - c.y) * (scaleY * scaleY)  < r*r; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 dots[42];\n    \n    // Circle centers\n    dots[0]  = vec2(0.15\t,0.038095);\n    dots[1]  = vec2(0.20333\t,0.11429);\n    dots[2]  = vec2(0.24667\t,0.18810);\n    dots[3]  = vec2(0.28667\t,0.26905);\n    dots[4]  = vec2(0.32\t,0.34048);\n    dots[5]  = vec2(0.37\t,0.40238);\n    dots[6]  = vec2(0.43333\t,0.38810);\n    dots[7]  = vec2(0.43333\t,0.32381);\n    dots[8]  = vec2(0.45667\t,0.25238);\n    dots[9]  = vec2(0.49\t,0.17619);\n    dots[10] = vec2(0.55667\t,0.10476);\n    dots[11] = vec2(0.63333\t,0.035714);\n    dots[12] = vec2(0.87333\t,0.078571);\n    dots[13] = vec2(0.87\t,0.15714);\n    dots[14] = vec2(0.86667\t,0.23810);\n    dots[15] = vec2(0.85\t,0.31905);\n    dots[16] = vec2(0.82\t,0.39524);\n    dots[17] = vec2(0.79333\t,0.45714);\n    dots[18] = vec2(0.37333\t,0.50000);\n    dots[19] = vec2(0.34\t,0.56429);\n    dots[20] = vec2(0.31333\t,0.62857);\n    dots[21] = vec2(0.29333\t,0.68810);\n    \n    dots[22] = vec2(0.43667\t,0.85476);\n    dots[23] = vec2(0.30333\t,0.93571);\n    dots[24] = vec2(0.81\t,0.74286);\n    dots[25] = vec2(0.44333\t,0.45476);\n    dots[26] = vec2(0.59667\t,0.47143);\n    dots[27] = vec2(0.71667\t,0.49524);\n    dots[28] = vec2(0.75333\t,0.57857);\n    \n    dots[29] = vec2(0.77333\t,0.62619);\n    dots[30] = vec2(0.79\t,0.67143);\n    dots[31] = vec2(0.24667\t,0.83095);\n    dots[32] = vec2(0.26333\t,0.84286);\n    dots[33] = vec2(0.27667\t,0.84286);\n    dots[34] = vec2(0.28333\t,0.84286);\n    \n    dots[35] = vec2(0.10333\t,0.84762);\n    dots[36] = vec2(0.11\t,0.79286);\n    dots[37] = vec2(0.13333\t,0.79286);\n    dots[38] = vec2(0.12333\t,0.78333);\n    \n    dots[39] = vec2(0.21667, 0.91667);\n    dots[40] = vec2(0.24667, 0.92381);\n    dots[41] = vec2(0.27333, 0.92143);\n\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 crd = fragCoord/iResolution.xy;\n   \n    float x = crd.x;\n    float y = crd.y;\n    \n    // Body\n    for(int i = 25; i <= 27; ++i) {\n        if (i == 22)\n            continue;\n        if (isInsideCircle(vec2(x, y), vec2(dots[i].x, dots[i].y), 0.09))\n            fragColor = vec4(hashColor(float(i*4)), 1.0);\n    }\n    \n    // Legs\n    for(int i = 0; i <= 17; ++i) {\n        if (isInsideCircle(vec2(x, y), vec2(dots[i].x, dots[i].y), 0.03))\n            fragColor = vec4(hashColor(float(i)), 1.0);\n    }\n    \n    // Neck, bounded leg foot, ears\n    for(int i = 18; i <= 24; ++i) {\n        if (i == 22)\n            continue;\n        if (isInsideCircle(vec2(x, y), vec2(dots[i].x, dots[i].y), 0.04))\n            fragColor = vec4(hashColor(float(i)), 1.0);\n    }\n    \n    // Bounded leg\n    for(int i = 28; i <= 30; ++i) {\n        if (isInsideCircle(vec2(x, y), vec2(dots[i].x, dots[i].y), 0.02))\n            fragColor = vec4(hashColor(float(i*4)), 1.0);\n    }\n    \n    // Head\n    if (isInsideCircle(vec2(x, y), vec2(dots[31].x, dots[31].y), 0.1))\n        fragColor = vec4(hashColor(float(31*13)), 1.0);\n        \n    // Eye\n    if (isInsideCircle(vec2(x, y), vec2(dots[33].x, dots[33].y), 0.03))\n        fragColor = vec4(hashColor(float(33)), 1.0);\n    \n    if (isInsideCircle(vec2(x, y), vec2(dots[34].x, dots[34].y), 0.02))\n        fragColor = vec4(hashColor(float(3)), 1.0);\n         \n    // Second ear\n    if (isInsideCircle(vec2(x, y), vec2(-0.1 + dots[22].x, dots[22].y), 0.04))\n        fragColor = vec4(hashColor(float(22+1)), 1.0);\n    \n    // Nose\n    if (isInsideCircle(vec2(x, y), vec2(+0.05 + dots[35].x, dots[35].y - 0.03), 0.03))\n        fragColor = vec4(hashColor(float(224)), 1.0);\n    \n    // Lips\n    for(int i = 36; i <= 38; ++i) {\n        if (isInsideCircle(vec2(x, y), vec2(dots[i].x + 0.06, dots[i].y - 0.06), 0.0135))\n            fragColor = vec4(hashColor(float(i+10)), 1.0);\n    }\n    \n    // Hair\n    for(int i = 39; i <= 41; ++i) {\n        if (isInsideCircle(vec2(x, y), vec2(dots[i].x, dots[i].y + 0.046), 0.0185))\n            fragColor = vec4(hashColor(float(i*10)), 1.0);\n    }\n}\n    \n    ","name":"Image","description":"","type":"image"}]}