{"ver":"0.1","info":{"id":"dsfSRM","date":"1668622994","viewed":82,"name":"Reuleaux's ngon","username":"Peace","description":"Reuleaux's triangle and other polygons","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["ngon","reuleaux"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932\n\nfloat reuleaux(vec2 p, int n)\n{\n    float a = atan(p.y, p.x);\n    float ang = PI/float(n);\n    float cc = cos(a - 2.0 * ang * floor(0.5 * (a - PI) / ang + 0.5));\n    return length(p) - (cc + sqrt(1.0 + 2.0 * cos(ang) + cc * cc));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n    float rlp = reuleaux(uv, int(iTime * 2.0) % 4 + 3);\n    float rl = smoothstep(0.01, 0.0, rlp);\n    \n    fragColor = vec4(vec3(rl), 1.0);\n}","name":"Image","description":"","type":"image"}]}