{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define M_PI 3.141592653589793\n#define M_2PI 6.283185307179586\n\nvec3 c1a = vec3(0.0, 0.0, 0.0);\nvec3 c1b = vec3(0.9, 0.0, 0.4);\nvec3 c2a = vec3(0.0, 0.5, 0.9);\nvec3 c2b = vec3(0.0, 0.0, 0.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = 2.0*(0.5 * iResolution.xy - fragCoord.xy) / iResolution.xx;\n\tfloat angle = atan(p.y, p.x);\n\tfloat turn = (angle + M_PI) / M_2PI;\n\tfloat radius = sqrt(p.x*p.x + p.y*p.y);\n\t\n\tfloat sine_kf = 19.0;//9.0 * sin(0.1*iTime);\n\tfloat ka_wave_rate = 0.94;\n\tfloat ka_wave = sin(ka_wave_rate*iTime);\n\tfloat sine_ka = 0.35 * ka_wave;\n\tfloat sine2_ka = 0.47 * sin(0.87*iTime);\n\tfloat turn_t = turn + -0.0*iTime + sine_ka*sin(sine_kf*radius) + sine2_ka*sin(8.0 * angle);\n\tbool turn_bit = mod(10.0*turn_t, 2.0) < 1.0; \n\t\n\tfloat blend_k = pow((ka_wave + 1.0) * 0.5, 1.0);\n\tvec3 c;\n\tif(turn_bit) {\n\t\tc = blend_k * c1a + (1.0 -blend_k) * c1b;\n\t} else {\n\t\tc = blend_k * c2a + (1.0 -blend_k) * c2b;\n\t}\n\tc *= 1.0 + 1.0*radius;\n\t\n\tfragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mdf3zX","date":"1375470878","viewed":493,"name":"bubbly sines","username":"ahihi","description":"@_@","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}