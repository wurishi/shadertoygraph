{"ver":"0.1","info":{"id":"MXSGzz","date":"1708110019","viewed":311,"name":"3d Waveform","username":"Borusse29","description":" ","likes":22,"published":1,"flags":32,"usePreview":0,"tags":["3d","video"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 600\n#define STEP_SIZE .005\n#define BRIGHTNESS .04\n#define WIDTH .008\n#define Z_SCALE 1.4\n#define Z_OFFSET .6\n#define CAM_RADIUS 3.\n\n#define _tau 6.2831853071\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(2.*fragCoord.x/iResolution.x-1., (2.*fragCoord.y-iResolution.y)/iResolution.x);\n       \n    vec4 angles = texture(iChannel0, vec2(0.));\n    float a = (angles.x+.35)*_tau;\n    float b = (angles.y+.03)*_tau;\n    \n    vec3 ro = CAM_RADIUS * vec3(-cos(a)*cos(b),-sin(a)*cos(b),sin(b));\n    ro.z += Z_OFFSET;\n    mat3 cm = mat3(cos(-b)*cos(a),cos(-b)*sin(a),sin(-b),-sin(a),cos(a),0.,-sin(-b)*cos(a),-sin(-b)*sin(a),cos(-b));\n    vec3 rd = cm * normalize(vec3(1., uv));\n    ro += rd;\n    \n    vec3 col = vec3(0.);\n    \n    for (int i = 0; i < MAX_STEPS; i++) {\n        ro += STEP_SIZE * rd;\n        \n        if ((abs(ro.x)>=1. || abs(ro.y)>=1.) && dot(rd, ro)>=.2)\n            break;\n            \n        if (abs(ro.x)>=1. || abs(ro.y)>=1. || ro.z<=0.) \n            continue;\n            \n        vec3 image = texture(iChannel1, vec2(-.5*ro.x+.5, .5*ro.y+.5)).rgb;\n\n        if (abs(ro.z-image.r*Z_SCALE) <= WIDTH) {\n            col.r += BRIGHTNESS;\n        }\n        if (abs(ro.z-image.g*Z_SCALE) <= WIDTH) {\n            col.g += BRIGHTNESS;\n        }\n        if (abs(ro.z-image.b*Z_SCALE) <= WIDTH) {\n            col.b += BRIGHTNESS;\n        }\n        if (abs(ro.z-length(image)/3.*Z_SCALE) <= WIDTH) {\n            col += BRIGHTNESS;\n        }\n    }\n    \n    fragColor.rgb = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (fragCoord != vec2(0.5)) return;\n    vec4 last = texture(iChannel0, vec2(0.));\n\n    vec2 lastMouse = iMouse.z <= 0. || iMouse.xy == iMouse.zw ? iMouse.xy : last.zw;\n\n    float a = last.x + (iMouse.x-lastMouse.x)/iResolution.x;\n    float b = last.y + (lastMouse.y-iMouse.y)/iResolution.y;\n    \n    fragColor = vec4(a, b, iMouse.xy);\n}","name":"Buffer A","description":"","type":"buffer"}]}