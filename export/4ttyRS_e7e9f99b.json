{"ver":"0.1","info":{"id":"4ttyRS","date":"1533027547","viewed":313,"name":"particles simulator","username":"archibate","description":"very cool to watching particle moves, collisions togeter.\nclick mouse to generate particles.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["2d","particles","physics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    #if 1\n    O = D(U) * .5 + .5;\n    #else\n    O = vec4(0);\n    if (D(U).a >= .1)\n        O = vec4(1);\n    #endif\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 UNPID(float pid)\n{\n    return vec2(mod(pid, MAXX), pid / MAXX);\n}\n\nvec2 mkrandvel(inout vec2 co)\n{\n    float vel = MAXINITVEL * rand(co);\n    co.y = vel;\n    float vang = TAU * rand(co);\n    return vel * vec2(cos(vang), sin(vang));\n}\n\nvec2 mkrandpos(inout vec2 co)\n{\n    vec2 p;\n    p.x = iResolution.x * rand(co);\n    co.y = p.x;\n    p.y = iResolution.y * rand(co);\n    co.x = p.y;\n    return p;\n}\n\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    U /= WIDTH;\n    \n    if (U.x > MAXX || U.y > MAXY)\n        return;\n    \n    if (iFrame <= 5) {\n        vec2 co = U + 12.35;\n        O.xy = mkrandpos(co);\n        O.zw = mkrandvel(co);\n        return;\n    }\n    \n    if (iMouse.w >= .5 && abs(rand(iMouse.xy + iTime * 2.3) * MAXX * MAXY - PID(U)) < 1.) {\n        vec2 co = U;\n        co += sin(dot(iMouse.xy, vec2(12.345,540.321)) - (iMouse.x * iMouse.y + 73.12) * iTime) - iTime * 82.346;\n        co *= 3.18 + cos(iTime);\n        O.xy = iMouse.xy;\n        O.zw = mkrandvel(co);\n        return;\n    }\n    \n    O.zw = F(U).zw;\n    O.xy = F(U).xy + O.zw * iTimeDelta;\n    \n#if 0 // TODO: collision detect\n    float pid = D(O.xy).a;\n    if (pid != PID(U))\n    {\n        vec2 n = F(U).xy - F(UNPID(pid)).xy;\n        n = normalize(n);\n        O.zw = reflect(O.zw, n);\n    }\n#endif\n    \n    if (O.x < 0.)\n        O.z = abs(O.z);\n    else if (O.x >= iResolution.x)\n        O.z = -abs(O.z);\n    if (O.y < 0.)\n        O.w = abs(O.w);\n    else if (O.y >= iResolution.y)\n        O.w = -abs(O.w);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define F(U) texture(iChannel0, WIDTH*(U)/iResolution.xy)\n#define D(U) texture(iChannel3, (U)/iResolution.xy)\n\n#define WIDTH 1.\n#define MAXSC .015\n#define MAXX round(iResolution.x * MAXSC)\n#define MAXY round(iResolution.y * MAXSC)\n#define PID(U) (U.y * MAXX + U.x)\n\n#define DRAD 6.\n#define CLOUMB .8\n\n#define MAXINITVEL 150.\n\n#define TAU (atan(1.)*8.)\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy, vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 rand2(vec2 co)\n{\n    float x = rand(co);\n    co.x = x;\n    float y = rand(co);\n    return vec2(x, y);\n}\n\nvec4 rand4(vec2 co)\n{\n    vec2 xy = rand2(co);\n    vec2 zw = rand2(xy);\n    return vec4(xy, zw);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    vec2 u;\n    O = vec4(0);\n    if (D(U).r == 1.)\n        O.g = 1.;\n    if (D(U).g >= .1)\n        O.g = D(U).g * .5;\n    float had = -1.;\n    for (u.x = 0.; u.x < MAXX; u.x += 1.) {\n    \tfor (u.y = 0.; u.y < MAXY; u.y += 1.) {\n            float d = distance(F(u).xy, U);\n        \tif (d < DRAD) {\n                had = PID(u);\n                O += smoothstep(0., -1.5, d - DRAD);\n        \t}\n        }\n    }\n}","name":"Buf D","description":"","type":"buffer"}]}