{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\nfloat cube_width = 20.0;\nfloat wave_width = 2.5;\nfloat PI = 3.1415926;\nvec4 rainbow_color(int i)\n{\n    vec4 c;\n\t\n\tif (i == 0) c=vec4(0,0,0,0); else\n\tif (i == 1) c= vec4(255,43,14,255)/255.0; else\n\tif (i == 2) c= vec4(255,168,6,255)/255.0; else\n\tif (i == 3) c= vec4(255,244,0,255)/255.0; else\n\tif (i == 4) c= vec4(51,234,5,255)/255.0; else\n\tif (i == 5) c= vec4(8,163,255,255)/255.0; else\n\tif (i == 6) c= vec4(122,85,255,255)/255.0; else\n\t\tc=vec4(0,0,0,0);\n\treturn c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 1.0 - 2.0 * uv;\n   \n    //wave\n    vec4 wave_color = vec4(0.);\n    for(int i = 0;i<7;++i)\n    {\n    \tfloat y = 0.1 * sin(uv.x*PI + float(i)/3. + iTime*PI ) + uv.y+float(i)/10.0 - 0.5;\n    \tfloat wave = abs(1.0 / (y * iResolution.y /wave_width));\n    \twave_color += rainbow_color(i)*wave;\n    }\n    \n    //back ground\n    float c1 = mod(fragCoord.x,2.0 * cube_width);\n    c1 = smoothstep(cube_width*0.7,cube_width*1.3,c1);\n    float c2 = mod(fragCoord.y,2.0 * cube_width);\n    c2 = smoothstep(cube_width*0.7,cube_width*1.3,c2);\n    vec4 bcolor = mix(vec4(0.0,0.2,0.3,1.0),vec4(0.5,0.0,0.,1.0),c1*c2);\n\tfragColor = bcolor + wave_color;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdSSWy","date":"1415330971","viewed":373,"name":"rainbow wave","username":"neo","description":"using sin wave for rainbow color","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["rainbowsinwave"],"hasliked":0,"parentid":"","parentname":""}}