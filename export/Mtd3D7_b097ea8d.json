{"ver":"0.1","info":{"id":"Mtd3D7","date":"1469741768","viewed":363,"name":"Low-Rent Action Film","username":"CaliCoastReplay","description":"I'm cracking up over here.  More improvements to come on this concept.","likes":7,"published":1,"flags":64,"usePreview":0,"tags":["chroma","fire","screen","greenscreen","green","action","movie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdS3z1","filepath":"https://soundcloud.com/humanbeings/work-zone-feat-mr-frick","previewfilepath":"https://soundcloud.com/humanbeings/work-zone-feat-mr-frick","type":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat rand(vec2 n) {\n    return fract(sin(cos(dot(n, vec2(12.9898,12.1414)))) * 83758.5453);\n}\n\nfloat noise(vec2 n) {\n    const vec2 d = vec2(0.0, 1.0);\n    vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n    return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) {\n    float total = 0.0, amplitude = 1.0;\n    for (int i = 0; i <5; i++) {\n        total += noise(n) * amplitude;\n        n += n*1.3;\n        amplitude *= 0.47;\n    }\n    return total;\n}\n\n#define threshold 0.50\n\nvoid video_overlay( inout vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 greenScreen = vec4(0.,1.,0.,1.);\n    vec4 color = texture(iChannel0, uv);\n    \n    vec3 diff = color.xyz - greenScreen.xyz;\n    \n    if(dot(diff, diff) < threshold) {\n     \n        \n    }\n    else \n    {   color += 0.2;\n        fragColor = (fragColor + 19.0*color)/20.0;\n\t\tfragColor *= color;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    const vec3 c1 = vec3(0.5, 0.0, 0.1);\n    const vec3 c2 = vec3(0.9, 0.1, 0.0);\n    const vec3 c3 = vec3(0.2, 0.1, 0.7);\n    const vec3 c4 = vec3(1.0, 0.9, 0.1);\n    const vec3 c5 = vec3(0.1);\n    const vec3 c6 = vec3(0.9);\n\n    vec2 speed = vec2(.3, 0.1);\n    float shift = .927+sin(iTime*2.0)/2.4;\n    float alpha = 1.0;\n    \n    //change the constant term for all kinds of cool distance versions,\n    //make plus/minus to switch between \n    //ground fire and fire rain!\n\tfloat dist = 3.5-sin(iTime*0.4)/1.89;\n    \n    vec2 p = fragCoord.xy * dist / iResolution.xx;\n    p.x -= iTime/1.1;\n    float q = fbm(p - iTime * 0.01+1.0*sin(iTime)/10.0);\n    float qb = fbm(p - iTime * 0.002+0.1*cos(iTime)/5.0);\n    float q2 = fbm(p - iTime * 0.44 - 5.0*cos(iTime)/7.0) - 6.0;\n    float q3 = fbm(p - iTime * 0.9 - 10.0*cos(iTime)/30.0)-4.0;\n    float q4 = fbm(p - iTime * 2.0 - 20.0*sin(iTime)/20.0)+2.0;\n    q = (q + qb - .4 * q2 -2.0*q3  + .6*q4)/3.8;\n    vec2 r = vec2(fbm(p + q /2.0 + iTime * speed.x - p.x - p.y), fbm(p + q - iTime * speed.y));\n    vec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\n    vec3 color = vec3(c * cos(shift * fragCoord.y / iResolution.y));\n    color += .05;\n    color.r *= .8;\n    vec3 hsv = rgb2hsv(color);\n    hsv.y *= hsv.z  * 1.1;\n    hsv.z *= hsv.y * 1.13;\n    hsv.y = (2.2-hsv.z*.9)*1.20;\n    color = hsv2rgb(hsv);\n   fragColor = vec4(color.x, color.y, color.z, alpha);\n    video_overlay(fragColor, fragCoord);\n   // hsv = rgb2hsv(vec3(fragColor.x, fragColor.y, fragColor.z));\n   // hsv.z *= (hsv.z+.2)/0.95;\n  //  hsv.y += 0.03;\n   // fragColor =vec4( hsv2rgb(hsv), 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}