{"ver":"0.1","info":{"id":"WtGfzm","date":"1614063929","viewed":202,"name":"Sphere Grid Colors","username":"csgradle","description":"Looks really scary in full screen.\nStarted out by just trying to make a tile of circles (like the square tile i made in my last shader)\nadded chromatic aberration and distance distortion\ndo ya like it?","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["grid","grid","chromaticaberration","distortion","color"],"hasliked":0,"parentid":"ttKfzD","parentname":"Color Distortion & Brick"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\nfloat circle(vec2 st, vec2 position, float radius) {\n    return 1.-step(radius, length(position-st));\n}\nfloat circleTile(vec2 st, float tileSize, float radius) {\n    vec2 tilePos = vec2(fract(st.x/tileSize), fract(st.y/tileSize));\n    return circle(tilePos, vec2(0.5), radius);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // fix coordinate pixels\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv-0.5;\n    float screenRatio = iResolution.x/iResolution.y;\n    uv.x *= screenRatio;\n    \n    // rotate\n    uv *= rotate2d(iTime*0.3);\n    \n    // distort the space distance scaling\n    vec2 st = uv;\n    st *= scale(vec2(0.3-(.3*length(uv)))); // comment this line to see only the grid of circles\n   \n    // get circle tiles with chromatic aberration  \n    float zoom = .01*sin(iTime*1.)+.015;\n    float r = 0.3;\n    float red = circleTile(st, zoom, r);\n    float green = circleTile(st*scale(vec2(1.02)), zoom, r);\n    float blue = circleTile(st*scale(vec2(0.98)), zoom, r);\n    \n    // final color \n    vec3 col = vec3(red, green, blue);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}