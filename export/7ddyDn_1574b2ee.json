{"ver":"0.1","info":{"id":"7ddyDn","date":"1662216285","viewed":77,"name":"Pong for two","username":"peremoya2000","description":"Simple pong for two players. Use W, S, Arrow Up and Arrow Down.","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["interactive","videogame"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nint char_id = -1; vec2 char_pos, dfdx, dfdy; \nvec4 char(vec2 p, int c) {\n    vec2 dFdx = dFdx(p/16.), dFdy = dFdy(p/16.);\n    if ( p.x>.25&& p.x<.75 && p.y>.1&& p.y<.85 )\n        char_id = c, char_pos = p, dfdx = dFdx, dfdy = dFdy;\n    return vec4(0);\n}\nvec4 pInt(vec2 p, float n) { \n    vec4 v = vec4(0);\n    for (int i = int(n); i>0; i/=10, p.x += .5 )\n        v += char(p, 48+ i%10 );\n    return v;\n}\nfloat drawChar() {\n    int c = char_id; \n    vec2 p = char_pos;\n    return c < 0\n        ? 0.\n        : textureGrad( iChannel1, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                       dfdx, dfdy ).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Create UVs (from -1 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    // Draw paddles\n    vec3 col = vec3(step(-.9,uv.x)*step(uv.x,-.8)+\n    step(.8,uv.x)*step(uv.x,.9));\n    \n    vec4 data=texelFetch(iChannel0,ivec2(0,0),0);\n    float posl,posr;\n    posl=data.x;posr=data.y;\n    vec4 ball = texelFetch(iChannel0,ivec2(0,1),0);\n    \n    if(uv.x<.2){\n        col*=step(posl-.12,uv.y)*step(uv.y,posl+.12);\n    }else{\n        col*=step(posr-.12,uv.y)*step(uv.y,posr+.12);\n    }\n    \n    //Draw ball\n    col+=vec3(step(ball.x-.05,uv.x)*step(uv.x,ball.x+.05)\n    *step(ball.y-.05,uv.y)*step(uv.y,ball.y+.05));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n    uv = ( uv - vec2(.4,.4) ) ;\n    fragColor += pInt(uv* 12., data.w);        \n    fragColor += drawChar();\n    uv = ( uv + vec2(.8,0) );\n    fragColor += pInt(uv* 12., data.z);        \n    fragColor += drawChar();\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const ivec4 WSUD = ivec4(87,83,38,40);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    bool relevantThread = int(fragCoord.y)<3;\n    float yl,yr = 0.;\n    vec4 wsud = vec4(0.);\n    \n    wsud.x = texelFetch( iChannel1, ivec2(WSUD.x,0), 0 ).x;\n    wsud.y = texelFetch( iChannel1, ivec2(WSUD.y,0), 0 ).x;\n    wsud.z = texelFetch( iChannel1, ivec2(WSUD.z,0), 0 ).x;\n    wsud.w = texelFetch( iChannel1, ivec2(WSUD.w,0), 0 ).x;\n    \n    \n    if( wsud.x>0.) ++yl;\n    if( wsud.y>0.) --yl;\n    if( wsud.z>0.) ++yr;\n    if( wsud.w>0.) --yr;\n        \n    vec4 playersData = texelFetch(iChannel0, ivec2(0,0), 0);\n    float posl = playersData.x;\n    float posr = playersData.y;\n    posl+=yl*.01;\n    posr+=yr*.01;\n    posl=clamp(posl,-.38,.38);\n    posr=clamp(posr,-.38,.38);\n    \n    vec4 ball = texelFetch(iChannel0, ivec2(0,1), 0);\n    if(length(ball.zw)==0.)ball.zw=hash12(iTime)*.75;\n    ball.xy+=ball.zw;\n    if(ball.y>.45 || ball.y <-.45)ball.w*=-1.;\n    if(ball.x>1.){\n        ball=vec4(0);\n        ++playersData.z;\n    }else if(ball.x <-1.){\n        ball=vec4(0);\n        ++playersData.w;\n    }else if(relevantThread){\n        if(ball.x<=-.75 && abs(posl-ball.y)<=.12){    \n            if(ball.x-ball.z>-.758){\n                ball.z=abs(ball.z); \n            }else{\n                ball.w=abs(ball.w)*sign(ball.y-posl)*1.1;\n                ball.y+=ball.w*2.;\n                ball.y+=yl*.015;\n            }                       \n        }else if(ball.x>=.75 && abs(posr-ball.y)<=.12){\n            if(ball.x-ball.z<.758){\n                ball.z=-abs(ball.z);  \n            }else{\n                ball.w=abs(ball.w)*sign(ball.y-posr)*1.1;\n                ball.y+=ball.w*2.;\n                ball.y+=yr*.015;\n            } \n        }\n\n    }\n\n    vec4 col = vec4(0);\n    playersData=vec4(posl,posr,playersData.zw);\n   \n    if(floor(fragCoord.x) == 0.0 ){\n        switch(int(fragCoord.y)){\n            case 0:\n                col = playersData;\n                break;\n            case 1:\n                col = ball;\n                break;\n        }\n    }   \n    fragColor = vec4(col);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec2 hash12( float t ){\n    vec2 v = vec2(1.);\n    float s=sin(t*6949.);\n    float c=cos(t*6949.);\n    v=v*mat2(c,s,-s,c)*.01;\n    if(v.x<.01&&v.x>-.01)v.x-=.015;\n    return v;\n}","name":"Common","description":"","type":"common"}]}