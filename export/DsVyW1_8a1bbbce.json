{"ver":"0.1","info":{"id":"DsVyW1","date":"1696061390","viewed":24,"name":"divergence_test","username":"nice_one_bro","description":"test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 blur(vec2 uv) {\n  vec4 color = texture(iChannel0, uv);\n  vec2 radius = 30.0 / iResolution.xy;\n\n  color += texture(iChannel0, uv + vec2(0.5, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(1.0, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(0.353553, 0.353553) * radius);\n  color += texture(iChannel0, uv + vec2(0.707107, 0.707107) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 0.5) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 1.0) * radius);\n  color += texture(iChannel0, uv + vec2(-0.353553, 0.353553) * radius);\n  color += texture(iChannel0, uv + vec2(-0.707107, 0.707107) * radius);\n  color += texture(iChannel0, uv + vec2(0.5, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(1.0, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(0.353553, 0.353553) * radius);\n  color += texture(iChannel0, uv + vec2(0.707107, 0.707107) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 0.5) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 1.0) * radius);\n  color += texture(iChannel0, uv + vec2(-0.353553, 0.353553) * radius);\n color += texture(iChannel0, uv + vec2(0.5, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(1.0, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(0.353553, 0.353553) * radius);\n  color += texture(iChannel0, uv + vec2(0.707107, 0.707107) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 0.5) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 1.0) * radius);\n  color += texture(iChannel0, uv + vec2(-0.353553, 0.353553) * radius);\n  color += texture(iChannel0, uv + vec2(-0.707107, 0.707107) * radius);\n    color += texture(iChannel0, uv + vec2(0.0, 0.5) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 1.0) * radius);\n  color += texture(iChannel0, uv + vec2(-0.353553, 0.353553) * radius);\n color += texture(iChannel0, uv + vec2(0.5, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(1.0, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(0.353553, 0.353553) * radius);\n  color += texture(iChannel0, uv + vec2(0.707107, 0.707107) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 0.5) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 1.0) * radius);\n  color += texture(iChannel0, uv + vec2(-0.353553, 0.353553) * radius);\n  color += texture(iChannel0, uv + vec2(-0.707107, 0.707107) * radius);\n    color += texture(iChannel0, uv + vec2(0.0, 0.5) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 1.0) * radius);\n  color += texture(iChannel0, uv + vec2(-0.353553, 0.353553) * radius);\n color += texture(iChannel0, uv + vec2(0.5, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(1.0, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(0.353553, 0.353553) * radius);\n  color += texture(iChannel0, uv + vec2(0.707107, 0.707107) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 0.5) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 1.0) * radius);\n  color += texture(iChannel0, uv + vec2(-0.353553, 0.353553) * radius);\n  color += texture(iChannel0, uv + vec2(-0.707107, 0.707107) * radius);\n    color += texture(iChannel0, uv + vec2(0.0, 0.5) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 1.0) * radius);\n  color += texture(iChannel0, uv + vec2(-0.353553, 0.353553) * radius);\n color += texture(iChannel0, uv + vec2(0.5, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(1.0, 0.0) * radius);\n  color += texture(iChannel0, uv + vec2(0.353553, 0.353553) * radius);\n  color += texture(iChannel0, uv + vec2(0.707107, 0.707107) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 0.5) * radius);\n  color += texture(iChannel0, uv + vec2(0.0, 1.0) * radius);\n  color += texture(iChannel0, uv + vec2(-0.353553, 0.353553) * radius);\n  color += texture(iChannel0, uv + vec2(-0.707107, 0.707107) * radius);\n  \n  return color / 8.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    vec4 color;\n    // with if\n    if (uv.x < 0.5) {\n        color = blur(uv);\n    } else {\n        color = texture(iChannel0, uv);\n    }\n\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}