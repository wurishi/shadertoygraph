{"ver":"0.1","info":{"id":"NdVXRG","date":"1634841139","viewed":443,"name":"Water Shader demo","username":"aviii","description":"Water Shader","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["watershader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rand(vec2 co){ \n    return fract(vec2(sin(dot(co.xy ,vec2(12.9898,78.233))),sin(dot(co.xy ,vec2(13.9838,34.453)))));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float time=iTime+20.;\n    float minDistance=100.;\n    for(int i=0;i<30;i++)\n    {\n        vec2 random=rand(vec2(i));\n        vec2 move;\n        if(i%2==0)\n            move=0.5*sin(random*time*0.21)+0.5;\n        else\n            move=0.5*sin(-random*time*0.21)+0.5;\n        \n        float dist=length(uv-move);\n        if(dist<minDistance)\n        {\n            minDistance=dist;\n        }\n    }\n    vec3 col=vec3(minDistance);\n    normalize(col);\n    col.b+=0.588;\n    col.r+=0.043;\n    col.g+=0.49;\n    \n    vec4 refractColor = texture(iChannel0,uv);\n    //col=vec3(0.,0.,0.);\n    refractColor=vec4(0.,0.,0.,0.);\n    vec4 color = mix(vec4(col,1.0),refractColor,0.13);\n    fragColor = color;\n    //fragColor=vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}