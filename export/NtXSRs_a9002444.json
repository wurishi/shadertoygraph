{"ver":"0.1","info":{"id":"NtXSRs","date":"1626273945","viewed":71,"name":"Reconstruction","username":"frostbyte","description":"Just a test to reconstruct \"discarded\" pixels, used for half-res rendering.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["naivereconstruction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define USE_DISCARD 1\n#define RECONSTRUCT 1\n#define WIDER_AREA 0\n\nfloat checkerboard(in vec2 uv)\n{\n  return mod(floor(iResolution.x * uv.x) + floor(iResolution.y * uv.y), 2.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;    \n    \n    float c = checkerboard(uv * 0.5f);    \n\n    vec4 tex = texture(iChannel0, uv);\n    \n    float xx = 1.0f / 1024.f;\n    float yy = 1.0f / 1024.f;\n    \n    #if USE_DISCARD\n    tex.rgb = mix(tex.rgb, vec3(c,c,c), 1.f-c);\n    #if RECONSTRUCT\n    if (c < 1e-10)\n    {\n        vec3 vx0 = texture(iChannel1, uv - vec2(xx, 0.f)).rgb;\n        vec3 vx1 = texture(iChannel1, uv + vec2(xx, 0.f)).rgb;                \n        vec3 vy0 = texture(iChannel1, uv - vec2(0.f, yy)).rgb;\n        vec3 vy1 = texture(iChannel1, uv + vec2(0.f, yy)).rgb;\n        \n        #if WIDER_AREA\n        vec3 vx2 = texture(iChannel1, uv - vec2(xx * 2.f, 0.f)).rgb;\n        vec3 vx3 = texture(iChannel1, uv + vec2(xx * 2.f, 0.f)).rgb;\n        vec3 vy2 = texture(iChannel1, uv - vec2(0.f, yy * 2.f)).rgb;\n        vec3 vy3 = texture(iChannel1, uv + vec2(0.f, yy * 2.f)).rgb;\n        \n        vec3 horizontal = (vx0 + vx1 + vx2 + vx3) * 0.25f;\n        vec3 vertical = (vy0 + vy1 + vy2 + vy3) * 0.25f;\n        \n        tex.rgb = (horizontal + vertical) * 0.5f;\n        #else        \n        tex.rgb = (vx0 + vx1 + vy0 + vy1) * 0.25f;\n        #endif\n    }\n    #endif\n    #endif \n    \n    tex.a = 1.f;\n    \n    // Output to screen\n    fragColor = tex;\n}\n","name":"Image","description":"","type":"image"}]}