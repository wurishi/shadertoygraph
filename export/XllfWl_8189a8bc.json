{"ver":"0.1","info":{"id":"XllfWl","date":"1513936568","viewed":213,"name":"Disco Black Hole","username":"Ultraviolet","description":"A little line experiment.\nWIP","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["line","rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n#define PI \t3.1415972\n\nfloat line(vec2 u, vec2 a, vec2 b)  {         \n    b -= a, u -= a;\n    return length( u - b * dot(b, u) / dot(b, b));\n}\n\n//*\nvec4 trajectory(float t)\n{\n    vec2 pos = vec2(cos(t), sin(t))*.5;\n    vec2 dir = vec2(-sin(t), cos(t));\n    \n    return vec4(pos, dir);\n}\n/*/\n\n\nvec2 trajectory_pos(float t)\n{\n    return vec2(pow(abs(sin(t*1.)), 2.)-0.5, 0.2*sin(t*4.)+0.2);\n    //return vec2(cos(t), sin(t))*.5;\n}\n\nvec4 trajectory(float t)\n{\n    vec2 pos = trajectory_pos(t);\n    vec2 dir = normalize(trajectory_pos(t+0.01) - trajectory_pos(t-0.01));\n    \n    return vec4(pos, dir);\n}\n//*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 pos = 2.*(uv-.5)*vec2(iResolution.x/iResolution.y, 1.);\n        \n    vec4 traj = trajectory(iTime);\n    float valR = clamp(1.-.5*iResolution.y*line(pos, traj.xy, traj.xy+traj.zw) , 0., 1. );\n    \n    traj = trajectory(iTime+2.*PI/3.);\n    float valG = clamp(1.-.5*iResolution.y*line(pos, traj.xy, traj.xy+traj.zw) , 0., 1. );\n    \n    traj = trajectory(iTime+4.*PI/3.);\n    float valB = clamp(1.-.5*iResolution.y*line(pos, traj.xy, traj.xy+traj.zw) , 0., 1. );\n    \n    \n    \n\tfragColor = .95*texelFetch(iChannel0, ivec2(fragCoord), 0) + vec4(valR, valG, valB, 0.);\n}","name":"Buf A","description":"","type":"buffer"}]}