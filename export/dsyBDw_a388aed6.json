{"ver":"0.1","info":{"id":"dsyBDw","date":"1698306139","viewed":85,"name":"Rainbow Singularity","username":"NamdomNau","description":"Cool circles. I don't have any idea how i made that. Also try clicking, its move...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Cubeism 2\" by NamdomNau. https://shadertoy.com/view/ddGfWw\n// 2023-10-25 19:33:32\n\nvec3 palette(in float t) {\n    vec3 a = vec3(0.660, 0.560, 0.680);\n    vec3 b = vec3(0.718, 0.438, 0.720);\n    vec3 c = vec3(0.520, 0.800, 0.520);\n    vec3 d = vec3(-0.430, -0.397, -0.083);\n\n    // Color formula\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates\n    vec2 uv = (2.0 * fragCoord - 2.0 * iMouse.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    // Finalcolor Var\n    vec3 finalColor = vec3(0.0);\n\n    for(float i = 0.0; i < 35.; i++) {\n        // Pixelated Look\n        uv = fract(uv * 2.0) - 0.5;\n\n        // Circle calculations\n        float d = sign(length(uv * 2.0)) / cosh(length(uv0 * 4.0)) / 1.0;\n\n        // Time-based adjustments\n        float x = iTime * 2.;\n\n        // Color computation using the palette\n        vec3 col = palette(length((uv0)+x-uv));\n        d = abs(sin(d * 10.0 - x) / 10.0);\n\n        // Visual effects\n        vec3 col1 = col * (0.01 / d);\n        col *= d * cosh(d);\n\n        finalColor = col1 - col;\n    }\n\n    fragColor = vec4(finalColor, 1);\n}\n","name":"Image","description":"","type":"image"}]}