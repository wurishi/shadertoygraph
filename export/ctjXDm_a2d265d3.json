{"ver":"0.1","info":{"id":"ctjXDm","date":"1676205558","viewed":202,"name":"Hexagonal Bokeh","username":"googl4","description":"Implementation of https://colinbarrebrisebois.com/2017/04/18/hexagonal-bokeh-blur-revisited/","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["bokeh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float coc = calc_coc( uv );\n\n    vec3 col = (\n        blur( iChannel0, uv, vec2(cos(-PI/6.0), sin(-PI/6.0)) / iResolution.xy ) + // * coc +\n        blur( iChannel1, uv, vec2(cos(-5.0*PI/6.0), sin(-5.0*PI/6.0)) / iResolution.xy ) // * coc\n        ) / 2.0;\n\n    // Output to screen\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float coc = calc_coc( uv );\n\n    vec3 col = texture( iChannel0, uv ).rgb;\n    \n    col *= col * col;\n    col *= 4.0;\n\n    // Output to screen\n    fragColor = vec4(col, coc);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define PI 3.14159265\n\n#define NUM_SAMPLES 64\n\nfloat calc_coc( vec2 uv ) {\n    float coc = clamp( ( 0.5 - ( uv.x * 0.9 + uv.y * 0.4 ) ) * 1.5, -0.5, 0.5 ) + 0.5;\n    return max( coc, 1.0 / float(NUM_SAMPLES) ); // HACK\n}\n\n/*\n// Equal weights\nvec3 blur( sampler2D tex, vec2 uv, vec2 direction ) {\n    uv += direction * 0.5;\n    \n    vec3 c = vec3( 0 );\n    \n    for( int i = 0; i < NUM_SAMPLES; i++ ) {\n        c += texture( tex, uv + direction * vec2(i) ).rgb;\n    }\n    \n    return c / vec3(NUM_SAMPLES);\n}\n*/\n\n\n// CoC weighted\nvec3 blur( sampler2D tex, vec2 uv, vec2 direction ) {\n    uv += direction * 0.5;\n    \n    vec3 c = vec3( 0 );\n    float total = 0.0;\n    \n    for( int i = 0; i < NUM_SAMPLES; i++ ) {\n        vec4 p = texture( tex, uv + direction * vec2(i) );\n        //c += p.rgb * p.a;\n        //total += p.a;\n        if( p.a > 1.0 / float(NUM_SAMPLES) * float(i) ) {\n            c += p.rgb;\n            total += 1.0;\n        }\n    }\n    \n    return c / total;\n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float coc = calc_coc( uv );\n\n    vec3 col = blur(iChannel0, uv, vec2(cos(PI/2.0), sin(PI/2.0)) / iResolution.xy).rgb;// * coc;\n\n    // Output to screen\n    fragColor = vec4(col, coc);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float coc = calc_coc( uv );\n\n    vec3 col = (\n        blur( iChannel0, uv, vec2(cos(-PI/6.0), sin(-PI/6.0)) / iResolution.xy).rgb // * coc\n        + texture( iChannel1, uv ).rgb\n        );\n\n    // Output to screen\n    fragColor = vec4(col, coc);\n}","name":"Buffer C","description":"","type":"buffer"}]}