{"ver":"0.1","info":{"id":"st3yRS","date":"1660416602","viewed":105,"name":"autogen 66","username":"asynth","description":"Generated by a program written in Rust.\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tuv = repeat_4(uv, 0.7834);\n\treturn vec3(uv.y);\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = (mat2(-1.1942,1.1612,-1.4107,-0.8151)*(uv-vec2(-0.8474,0.3933)+vec2(-0.8474,0.3933)));\n\treturn bi(node_1(uv));\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.6870, 0.5176), vec3(uv.x).xy);\n\treturn sq(vec3(uv.y));\n}\n\nvec3 node_4(vec2 uv) {\n\tuv = repeat_2(uv, 0.6266);\n\tvec3 a1 = mix2(uv, vec3(0.8847, 0.2524, 0.0191), vec3(0.8226, 0.5807, 0.1784), vec3(0.2066, 0.0962, 0.6892), vec3(0.3271, 0.5902, 0.1026));\n\treturn a1;\n}\n\nvec3 node_5(vec2 uv) {\n\tuv = (mat2(-0.9955,0.9503,0.8147,1.0294)*(uv-vec2(-0.6208,0.6142)+vec2(-0.6208,0.6142)));\n\tvec3 a1 = noise(uv, vec2(0.18690081, 0.6712525), 0.849942);\n\tvec3 a2 = vec3(0.0355, 0.6123, 0.8713);\n\treturn mod(mix(node_4(uv), a1, a2), vec3(uv.x));\n}\n\nvec3 node_6(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.9144, -0.4306), vec3(uv.y).xy);\n\treturn node_5(uv);\n}\n\nvec3 node_7(vec2 uv) {\n\tuv = repeat_4(uv, 0.4983);\n\tvec3 a1 = vec3(0.1942, 0.1253, 0.4575);\n\tvec3 a2 = mix2(uv, vec3(0.6533, 0.6117, 0.7017), vec3(0.3055, 0.1871, 0.5352), vec3(0.9001, 0.1842, 0.3999), vec3(0.6014, 0.8574, 0.4320));\n\treturn (a1 - quant(a2, vec3(length(uv))));\n}\n\nvec3 node_8(vec2 uv) {\n\tvec3 a1 = vec3(0.1596, 0.6646, 0.0812);\n\tuv = xywarp(uv, vec2(-0.8173, 0.0958), sq((-(min(a1, (vec3(atan(uv.y, uv.x)) - vec3(length(uv)))) - vec3(uv.y)))).xy);\n\treturn node_7(uv);\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = repeat_2(uv, 0.6475);\n\treturn (vec3(length(uv)) * vec3(uv.y));\n}\n\nvec3 node_10(vec2 uv) {\n\tvec3 a1 = mix2(uv, vec3(0.8695, 0.6400, 0.1476), vec3(0.4774, 0.3294, 0.5569), vec3(0.5398, 0.0762, 0.7210), vec3(0.4236, 0.5526, 0.7465));\n\tvec3 a2 = sin(a1*3.5759 + 0.9315 + iTime*0.2913);\n\tvec3 a3 = noise(uv, vec2(1.618377, 0.2143892), 0.925929);\n\tvec3 a4 = well(a3*2.2101 + 0.3573 + iTime*0.3034);\n\tvec3 a5 = tri((a4 + node_3(uv))*3.4628 + 0.4509 + iTime*0.1855);\n\tuv = xywarp(uv, vec2(-0.8482, -0.5027), (node_2(uv) - (-mod(a2, a5))).xy);\n\tvec3 b1 = noise(uv, vec2(3.8469338, 1.0315455), 0.415729);\n\tvec3 b2 = tri(node_9(uv)*1.8376 + 0.2564 + iTime*0.2882);\n\treturn bi(sq(min(uni(abs(mix(vec3(atan(uv.y, uv.x)), node_6(uv), vec3(length(uv))))), (sq(b1) - ((-node_8(uv)) - b2)))));\n}\n\nvec3 node_11(vec2 uv) {\n\tvec3 a1 = mix2(uv, vec3(0.1436, 0.1908, 0.4188), vec3(0.4571, 0.5648, 0.2756), vec3(0.0849, 0.8007, 0.9086), vec3(0.5717, 0.7686, 0.2828));\n\tvec3 a2 = tri((-a1)*1.5610 + 0.1020 + iTime*0.2752);\n\tvec3 a3 = tri(a2*4.5265 + 0.3879 + iTime*0.2534);\n\tuv = xywarp(uv, vec2(-0.0918, -0.2736), a3.xy);\n\treturn uni(vec3(atan(uv.y, uv.x)));\n}\n\nvec3 node_12(vec2 uv) {\n\tuv = repeat_3(uv, 0.6092);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_13(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.9232, -0.3215), node_12(uv).xy);\n\tvec3 b1 = vec3(0.5434, 0.4443, 0.7979);\n\treturn b1;\n}\n\nvec3 node_14(vec2 uv) {\n\tuv = repeat_0(uv, 0.1725);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_15(vec2 uv) {\n\tuv = (mat2(1.0930,-1.0727,1.3762,0.8455)*(uv-vec2(-0.7134,-0.2567)+vec2(-0.7134,-0.2567)));\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_16(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.9449, 0.0134), vec3(uv.y).xy);\n\tvec3 b1 = vec3(0.3248, 0.4086, 0.0291);\n\treturn b1;\n}\n\nvec3 node_17(vec2 uv) {\n\tuv = reflect_4(uv);\n\tvec3 a1 = sin(node_16(uv)*5.1089 + 0.1833 + iTime*0.3076);\n\tvec3 a2 = mix2(uv, vec3(0.5977, 0.0780, 0.0214), vec3(0.1067, 0.2009, 0.9417), vec3(0.8585, 0.3420, 0.4548), vec3(0.5818, 0.0873, 0.1041));\n\treturn (a1 * uni((a2 * vec3(uv.x))));\n}\n\nvec3 node_18(vec2 uv) {\n\tvec3 a1 = noise(uv, vec2(2.9467866, 0.13663839), 0.601866);\n\tuv = xywarp(uv, vec2(0.3881, 0.1997), mod(node_14(uv), (a1 - node_15(uv))).xy);\n\treturn node_17(uv);\n}\n\nvec3 node_19(vec2 uv) {\n\tuv = repeat_2(uv, 0.5944);\n\treturn vec3(uv.y);\n}\n\nvec3 node_20(vec2 uv) {\n\tuv = reflect_4(uv);\n\tvec3 a1 = mix2(uv, vec3(0.9340, 0.9299, 0.2539), vec3(0.8525, 0.1403, 0.6885), vec3(0.2031, 0.7944, 0.4328), vec3(0.7963, 0.1049, 0.9116));\n\treturn a1;\n}\n\nvec3 node_21(vec2 uv) {\n\tvec3 a1 = vec3(0.3596, 0.5425, 0.5353);\n\tuv = xywarp(uv, vec2(-0.4336, 0.8140), (-a1).xy);\n\tvec3 b1 = mix2(uv, vec3(0.4257, 0.1981, 0.7869), vec3(0.8195, 0.4778, 0.8962), vec3(0.3340, 0.4765, 0.6364), vec3(0.5965, 0.9545, 0.2335));\n\treturn min(vec3(uv.x), b1);\n}\n\nvec3 node_22(vec2 uv) {\n\tuv = repeat_4(uv, 0.3680);\n\tvec3 a1 = sin(node_21(uv)*5.8599 + 0.1007 + iTime*0.2193);\n\treturn a1;\n}\n\nvec3 node_23(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = vec3(0.6447, 0.3678, 0.7873);\n\tvec3 a2 = noise(uv, vec2(3.5423412, 3.2135375), 0.810919);\n\tvec3 a3 = tri((vec3(length(uv)) - mod(a1, a2))*3.1656 + 0.3853 + iTime*0.1301);\n\tvec3 a4 = sin(abs(quant(uni(a3), pthresh(0.0243, bi(node_20(uv)), sq(vec3(length(uv))), node_22(uv))))*3.7719 + 0.6630 + iTime*0.3451);\n\treturn (pthresh(0.9982, node_19(uv), (-sq((bi(quant(vec3(atan(uv.y, uv.x)), vec3(uv.x))) + vec3(length(uv))))), vec3(atan(uv.y, uv.x))) + a4);\n}\n\nvec3 node_24(vec2 uv) {\n\tuv = repeat_4(uv, 0.2004);\n\tvec3 a1 = sin(node_13(uv)*3.1643 + 0.5051 + iTime*0.0550);\n\tvec3 a2 = noise(uv, vec2(3.4687293, 0.9897446), 0.125294);\n\tvec3 a3 = well(pthresh(0.5531, a1, node_18(uv), a2)*3.2123 + 0.7210 + iTime*0.2200);\n\tvec3 a4 = vec3(0.4469, 0.6400, 0.9591);\n\tvec3 a5 = vec3(0.8055, 0.2104, 0.8930);\n\tvec3 a6 = vec3(0.9406, 0.5680, 0.3414);\n\tvec3 a7 = tri(a6*5.8905 + 0.6776 + iTime*0.2582);\n\tvec3 a8 = mix2(uv, vec3(0.1185, 0.4544, 0.2683), vec3(0.7567, 0.2887, 0.5791), vec3(0.7132, 0.5307, 0.9550), vec3(0.4949, 0.7215, 0.4500));\n\tvec3 a9 = well((-a8)*2.9768 + 0.8908 + iTime*0.0996);\n\tvec3 a10 = sin(quant((-(a3 + (a4 + (uni(vec3(uv.x)) * a5)))), (-(-(node_23(uv) + (a7 - a9)))))*5.8864 + 0.3403 + iTime*0.0533);\n\treturn a10;\n}\n\nvec3 node_25(vec2 uv) {\n\tuv = reflect_4(uv);\n\tvec3 a1 = noise(uv, vec2(1.4608319, 0.18897507), 0.129726);\n\treturn a1;\n}\n\nvec3 node_26(vec2 uv) {\n\tuv = repeat_1(uv, 0.3196);\n\tvec3 a1 = noise(uv, vec2(0.2611083, 2.1256344), 0.576400);\n\treturn (vec3(uv.x) - a1);\n}\n\nvec3 node_27(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn vec3(uv.x);\n}\n\nvec3 node_28(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = tri(vec3(atan(uv.y, uv.x))*4.2869 + 0.0061 + iTime*0.2091);\n\treturn a1;\n}\n\nvec3 node_29(vec2 uv) {\n\tuv = (mat2(0.7371,-1.2877,1.1309,-1.2798)*(uv-vec2(0.7701,-0.7674)+vec2(0.7701,-0.7674)));\n\tvec3 a1 = mix2(uv, vec3(0.9892, 0.7474, 0.2195), vec3(0.8935, 0.6679, 0.8879), vec3(0.0983, 0.4459, 0.7996), vec3(0.9474, 0.8481, 0.3747));\n\tvec3 a2 = vec3(0.4848, 0.6772, 0.1865);\n\tvec3 a3 = tri(node_27(uv)*5.4935 + 0.5197 + iTime*0.0614);\n\tvec3 a4 = tri(abs(mod(pthresh(0.7710, vec3(atan(uv.y, uv.x)), vec3(length(uv)), vec3(length(uv))), a3))*2.8047 + 0.9388 + iTime*0.2200);\n\tvec3 a5 = noise(uv, vec2(1.4893435, 1.89981), 0.591689);\n\tvec3 a6 = tri(node_28(uv)*3.8835 + 0.3799 + iTime*0.3575);\n\tvec3 a7 = well((mix(mod(a1, pthresh(0.3555, a2, node_25(uv), vec3(length(uv)))), (sq(node_26(uv)) * vec3(uv.y)), uni(a4)) - mod(mod(((vec3(length(uv)) - vec3(uv.x)) - vec3(length(uv))), bi(a5)), a6))*1.2087 + 0.0232 + iTime*0.2455);\n\treturn a7;\n}\n\nvec3 node_30(vec2 uv) {\n\tuv = (mat2(-1.3904,1.0742,0.9483,-1.3087)*(uv-vec2(0.3533,-0.7001)+vec2(0.3533,-0.7001)));\n\treturn node_29(uv);\n}\n\nvec3 node_31(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.8469, -0.5607), vec3(atan(uv.y, uv.x)).xy);\n\treturn vec3(uv.x);\n}\n\nvec3 node_32(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.9887, -0.8138), vec3(uv.x).xy);\n\treturn mod(vec3(length(uv)), node_31(uv));\n}\n\nvec3 node_33(vec2 uv) {\n\tuv = repeat_2(uv, 0.5167);\n\tvec3 a1 = sin(node_32(uv)*2.0511 + 0.1264 + iTime*0.3031);\n\treturn a1;\n}\n\nvec3 node_34(vec2 uv) {\n\tuv = reflect_1(uv);\n\treturn quant(vec3(atan(uv.y, uv.x)), vec3(uv.y));\n}\n\nvec3 node_35(vec2 uv) {\n\tuv = repeat_3(uv, 0.1708);\n\treturn node_34(uv);\n}\n\nvec3 node_36(vec2 uv) {\n\tvec3 a1 = sin(node_10(uv)*2.5763 + 0.8106 + iTime*0.3843);\n\tuv = xywarp(uv, vec2(0.7397, 0.8222), a1.xy);\n\tvec3 b1 = noise(uv, vec2(2.5136907, 3.8186824), 0.515763);\n\treturn sq((sq(bi(abs(quant(node_11(uv), sq(node_24(uv)))))) * (quant(node_30(uv), b1) * ((-node_33(uv)) + node_35(uv)))));\n}\n\nvec3 top(vec2 uv) {\n\treturn node_36(uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}