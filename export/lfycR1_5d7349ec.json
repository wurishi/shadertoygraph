{"ver":"0.1","info":{"id":"lfycR1","date":"1731465505","viewed":73,"name":"Infinite Rose Spiral","username":"triggthediscovery","description":"Fun adaptation of my previous spiral shader.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"lf2fRy","parentname":"Zebra spiral"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Infinite Rose Spiral shader.\n//\n// Provided under CC0.\n\n// Controls density of the spirals.\nconst float density = 20.0;\nconst float density_2 = 15.0;\n\n// Controls how harsh the spiral angle is,\n// higher numbers spiral less tightly.\nconst int spiral_winding = 1;\nconst int spiral_winding_2 = 2;\n\n// Size of arm at the center of the spiral.\nconst float arm_size = 0.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord-(iResolution.xy/2.0);\n\n    uv /= iResolution.y;\n\n    vec3 col = vec3(0);\n    \n    float ang = atan(uv.y/uv.x);\n    if (uv.x<0.0) ang += 3.1416;\n    float ang2 = -ang;\n    \n    ang *= float(spiral_winding);\n    ang = mod(ang+iTime*6.0, 6.28);\n\n    float dist_m = log(length(uv))*density;\n    while (dist_m-ang < -3.1416) dist_m += 6.28;\n    while (dist_m-ang > 3.1416) dist_m -= 6.28;\n    \n    if (abs(dist_m-ang) > arm_size && abs(dist_m-ang) < (6.28-arm_size)) {\n        col = vec3(((dist_m-ang)/6.0) + 0.4);\n    }\n    \n    ang2 *= float(spiral_winding_2);\n    ang2 = mod(ang2+iTime*6.0, 6.28);\n\n    dist_m = log(length(uv))*density_2;\n    while (dist_m-ang2 < -3.1416) dist_m += 6.28;\n    while (dist_m-ang2 > 3.1416) dist_m -= 6.28;\n    \n    if (abs(dist_m-ang2) > arm_size && abs(dist_m-ang2) < (6.28-arm_size)) {\n        col += vec3(((dist_m-ang2)/6.0)+0.4);\n    }\n    \n    col /= vec3(1.3, 3.0, 3.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}