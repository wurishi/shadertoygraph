{"ver":"0.1","info":{"id":"Nd2BWy","date":"1646995158","viewed":90,"name":"Sunset water test","username":"wainggan","description":"Doesn't look too great atm","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["water","pain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float horizon = 0.4;\n\nfloat distToLine(vec2 pt1, vec2 pt2, vec2 testPt)\n{\n    vec2 lineDir = pt2 - pt1;\n    vec2 perpDir = vec2(lineDir.y, -lineDir.x);\n    vec2 dirToPt1 = pt1 - testPt;\n    return abs(dot(normalize(perpDir), dirToPt1));\n}\n\nvec3 water(vec2 uv, float shine) {\n    float scroll = iTime * 0.03;\n    vec2 scale = vec2(uv.x * 0.8, uv.y * 1.7);\n    float offset = 0.2;\n    \n    float col1 = texture(iChannel1, scale + vec2(scroll, 0.0)).r;\n    float col2 = texture(iChannel1, scale + vec2(-scroll + offset, offset)).r;\n    \n    float soup = col1 + col2;\n    if (soup <= shine) {\n        soup = clamp(soup, 0.0, 0.3);\n    }\n    return vec3(min(soup, 1.0));\n}\n\nvec3 scene(vec2 uv, bool w) {\n    vec3 col = vec3(0.0);\n    if (uv.y < horizon) col = max(col, vec3(0.8, 0.5, 0.5));\n    else { \n        col = max(col, vec3(0.8, 0.5, 0.5));\n        col = distance(uv, vec2(0.4)) < 0.3 ? vec3(1.0) : col;\n        if (distToLine(vec2(0.0, horizon), vec2(1.0, horizon), uv) <= 0.006 + abs(0.4 - uv.x)/24.0) col = vec3(1.0);\n        col = distance(uv, vec2(0.9, 0.46)) < 0.1 ? vec3(0.0) : col;\n        col = distance(uv, vec2(0.86, 0.6)) < 0.1 ? vec3(0.0) : col;\n        col = distance(uv, vec2(0.73, 0.46)) < 0.1 ? vec3(0.0) : col;\n        if (w) col -= water(uv * 1.2, 1.6 - uv.y) / (2.0 - uv.y);\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 puv = uv;\n    \n    \n    \n    if (uv.y < horizon) {\n        const float zoom = 1.7;\n        uv.y = horizon - (uv.y * zoom) + (horizon * zoom);\n        uv.x += sin(iTime * 0.2 + uv.y * 28.0) * 0.2 * (uv.y - horizon);\n        uv.y += cos(iTime * 0.4 + uv.x * 20.0) * 0.04 * (uv.y - horizon);\n    }\n    \n    //vec3 col = texture(iChannel0, uv).rgb;\n    vec3 col = scene(uv, puv.y < horizon);\n    \n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}