{"ver":"0.1","info":{"id":"slXBDS","date":"1651377273","viewed":105,"name":"Hash with only fract and dot","username":"Dubswitcher","description":"I saw someone else (possibly IQ) create a hash function that did not need the sin function so I figured I may as well do the same using the fract function. I don't know how reliable this is but so far, without extreme scales, it's incredibly stable.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","random","static","hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash (in vec2 uv) {\n    vec2 p = fract(uv/3000.)*5000.;\n    return fract(dot(vec2(dot(fract(p*121.),fract(p*143.)),\n                 fract(dot(p.xyx,vec3(356.,4578.,1686.))/35.)),\n                 fract(p.yx)*8642.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(hash(uv+iTime));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}