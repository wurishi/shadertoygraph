{"ver":"0.1","info":{"id":"WlSyDV","date":"1595342271","viewed":111,"name":"Cross-eye 3D Experiment","username":"izutionix","description":"cross your eyes until the two sides overlap\n(original: [url]https://shadertoy.com/view/wlGGRy[/url])","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d","grid","perspective","crosseye"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of my \"Simple Perspective Grid\". https://shadertoy.com/view/wlGGRy\n// 2020-07-21 14:04:44\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = (2.*fragCoord-R)/R.y;\n    \n    float side = -sign(uv.x)*0.2;\n    \n    uv.x = 2.*fract(uv.x*R.y/R.x)-1.;\n\n    float d = 1./abs(uv.y); //depth\n    vec2 pv = vec2(uv.x*d, d);\n    pv += vec2(side, iTime*2.);\n    pv *= 1.;\n    \n    // aa with help from iq\n    // https://iquilezles.org/articles/filterableprocedurals\n    pv += 0.5;\n    const float N = 64.0;\n    vec2 w = fwidth(pv) + 0.001;\n    vec2 a = pv + 0.5*w;\n    vec2 b = pv - 0.5*w;\n    vec2 i = (floor(a)+min(fract(a)*N,1.0)-floor(b)-min(fract(b)*N,1.0))/(N*w);\n    float g = i.x + i.y - i.x*i.y;\n    \n\tvec3 col = vec3(g);  \n\n    fragColor = vec4(col, 1);\n    //fragColor = vec4(uv, 0, 1);\n    //fragColor = vec4(side);\n}","name":"Image","description":"","type":"image"}]}