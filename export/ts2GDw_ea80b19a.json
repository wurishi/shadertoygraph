{"ver":"0.1","info":{"id":"ts2GDw","date":"1549206350","viewed":81,"name":"Samples Per Pixel 2","username":"valler","description":"Multiple samples per pixel.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["ray","pixel","distance","march","samples"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float tMax = 1.e2;\nconst float dMin = 1.e-4;\nconst int numObjects = 3;\nconst int spp = 16;\n\n// https://www.shadertoy.com/view/4lVcRm\nvec2 R2seq(int n)\n{\n\treturn fract(vec2(n) * vec2(0.754877666246692760049508896358532874940835564978799543103, 0.569840290998053265911399958119574964216147658520394151385));\n}\n\nvec3 A (vec4 uvwt)\n{\n    return vec3(1,0,0)*fract(uvwt.x);\n}\n\nvec3 B (vec4 uvwt)\n{\n    return abs(vec3(cos(iTime)) * uvwt.xyz);\n}\n\nfloat F (vec3 p, vec3[numObjects] c, int i)\n{\n\treturn distance(p,c[i]);\n}\n\nfloat D (vec3 ro, vec4 uvwt)\n{\n    vec3 p = ro+uvwt.xyz*uvwt.w;\n    vec3[numObjects] c;\n    c[0] = vec3(0,0,2);\n    c[1] = vec3(1,0,2);\n    c[2] = vec3(-1,0,2);\n    float d = tMax;\n    for (int i = 0; i < numObjects; ++i) d = min(d,F(p,c,i));\n\treturn d-.4;\n}\n\nvec4 T (vec2 uv, float s, int i)\n{\n    vec4 uvwt = vec4(normalize(vec3(uv+(R2seq(i))*s,.707)),0);\n    vec3 ro = vec3(0,0,-1.);\n    while (uvwt.w <= tMax)\n    {\n        float d = D(ro, uvwt);\n        if (d < dMin) break;\n        uvwt.w += d;\n    }\n    return uvwt;\n}\n\nvoid mainImage (out vec4 _, in vec2 a)\n{\n    float invMaxRes = 1./max(iResolution.x, iResolution.y);\n    vec2 uv = (a-.5*iResolution.xy)*invMaxRes;\n    vec3 col = vec3(0);\n    for (int i = 0; i < spp; ++i)\n    {\n        vec4 uvwt = T(uv, invMaxRes, i);\n    \tcol += (uvwt.w>tMax) ? A(uvwt) : B(uvwt);\n    }\n\t_ = vec4(sqrt(col/float(spp)),1);\n}","name":"Image","description":"","type":"image"}]}