{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define pi 3.141592653589793238462643383279\r\n\r\nfloat atan2(float y, float x){\r\n\tif(x>0.) return atan(y/x);\r\n\tif(y>=0. && x<0.) return atan(y/x) + pi; \r\n\tif(y<0. && x<0.) return atan(y/x) - pi; \r\n\tif(y>0. && x==0.) return pi/2.;\r\n\tif(y<0. && x==0.) return -pi/2.;\r\n\tif(y==0. && x==0.) return pi/2.; // undefined usually\r\n\treturn pi/2.;\r\n}\r\n\r\nvec2 uv_polar(vec2 uv, vec2 center){\r\n\tvec2 c = uv - center;\r\n\tfloat rad = length(c);\r\n\tfloat ang = atan2(c.x,c.y);\r\n\treturn vec2(ang, rad);\r\n}\r\n\r\nvec2 uv_lens_half_sphere(vec2 uv, vec2 position, float radius, float refractivity){\r\n\tvec2 polar = uv_polar(uv, position);\r\n\tfloat cone = clamp(1.-polar.y/radius, 0., 1.);\r\n\tfloat halfsphere = sqrt(1.-pow(cone-1.,2.));\r\n\tfloat w = atan2(1.-cone, halfsphere);\r\n\tfloat refrac_w = w-asin(sin(w)/refractivity);\r\n\tfloat refrac_d = 1.-cone - sin(refrac_w)*halfsphere/cos(refrac_w);\r\n\tvec2 refrac_uv = position + vec2(sin(polar.x),cos(polar.x))*refrac_d*radius;\r\n\treturn mix(uv, refrac_uv, float(length(uv-position)<radius));\r\n}\r\n\r\nvec2 wrap_flip(vec2 uv){\r\n\treturn vec2(1.)-abs(fract(uv*.5)*2.-1.);\r\n}\r\n \r\nfloat border(vec2 domain, float thickness){\r\n   vec2 uv = fract(domain-vec2(0.5));\r\n   uv = min(uv,1.-uv)*2.;\r\n   return clamp(max(uv.x,uv.y)-1.+thickness,0.,1.)/(thickness);\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\t// domain map\r\n\tvec2 uv = fragCoord.xy / iResolution.xy;\r\n\t\r\n\t// aspect-ratio correction\r\n\tvec2 aspect = vec2(1.,iResolution.y/iResolution.x);\r\n\tvec2 uv_correct = 0.5 + (uv -0.5)* aspect;\r\n\tvec2 mouse_correct = 0.5 + ( iMouse.xy / iResolution.xy - 0.5) * aspect;\r\n\r\n\tvec2 pos = vec2(0.5);\r\n\t//pos = mouse_correct;\r\n\t\r\n\tvec2 uv_lens_distorted = uv_lens_half_sphere(uv_correct, pos, 0.6, -0.25);\r\n\t\r\n\tuv_lens_distorted = 0.5 + (uv_lens_distorted - 0.5) / aspect;\r\n\t\r\n\tuv_lens_distorted = wrap_flip(uv_lens_distorted);\r\n\t\r\n\tfragColor = texture(iChannel0, uv_lens_distorted) * (1.-border(uv_lens_distorted, 0.01)*0.1);\r\n\r\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lssGz8","date":"1362863639","viewed":542,"name":"Metamaterial","username":"Flexi","description":"a refractive index of - 1/4 makes a nice \"metamaterial\", isn't it?","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["refraction","lens","halfsphere"],"hasliked":0,"parentid":"","parentname":""}}