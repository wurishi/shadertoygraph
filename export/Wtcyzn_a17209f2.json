{"ver":"0.1","info":{"id":"Wtcyzn","date":"1608476416","viewed":88,"name":"kid Merry Christmas","username":"yuehongliang","description":"learn mix function","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nreference https://www.shadertoy.com/view/tsVBzc\nlearning to overlaping kinds of shape\n*/\n#define BG_COLOR vec4(0.91, 0.28, 0.29, 1.0)\n#define BG_FADE_COLOR vec4(0.76, 0.20, 0.21, 1.0)\n#define SNOW_COLOR vec4(1.0, 1.0, 1.0, 1.0)\n#define SNOW_SHADE_COLOR vec4(0.9, 0.9, 0.9, 1.0)\n#define SNOWMAN_COLOR vec4(1.0, 1.0, 1.0, 1.0)\n#define SNOWMAN_HAT_COLOR vec4(0.3, 0.3, 0.3, 1.0)\n#define SNOWMAN_NOSE_COLOR vec4(0.93, 0.35, 0.17, 1.0)\n#define SNOWMAN_BUTTON_COLOR vec4(0.3, 0.6, 0.3, 1.0)\n#define TREE_COLOR vec4(0.3, 0.6, 0.3, 1.0)\n#define TREE_TRUNK_COLOR vec4(0.51, 0.28, 0.05, 1.0)\n#define TREE_DECO_COLOR1 vec4(0.31, 0.38, 0.72, 1.0)\n#define TREE_DECO_COLOR2 vec4(0.71, 0.38, 0.82, 1.0)\n#define TREE_DECO_COLOR3 vec4(0.97, 0.80, 0.18, 1.0)\n#define BOX_COLOR1 vec4(0.31, 0.38, 0.72, 1.0)\n#define BOX_COLOR2 vec4(0.91, 0.55, 0.18, 1.0)\n#define RIBBON_COLOR1 vec4(0.3, 0.6, 0.3, 1.0)\n#define RIBBON_COLOR2 vec4(0.71, 0.38, 0.82, 1.0)\n#define LIGHT_WIRE_COLOR vec4(0.31, 0.38, 0.72, 1.0)\n#define LIGHT_ON_COLOR vec4(0.98, 1.0, 0.24, 1.0)\n#define LIGHT_OFF_COLOR vec4(0.65, 0.65, 0.45, 0.9)\nvec4 FONT_COLOR =vec4(0.4,51./255.,102./255.,1.);\n\n#define BLUR 4.0 / iResolution.y\n\nfloat Hash21(vec2 uv)\n{                   \n    return fract(sin(dot(uv, vec2(825.123, 9475.832))) * 244.19);\n}\n\nvec2 Rotate(vec2 uv, float deg)\n{\n    float angle = radians(deg);\n    vec2 rot = uv * mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    return rot;\n}\n\nfloat Circle(vec2 uv, vec2 centre, float radius)\n{\n    float d = length(uv - centre);\n    float c = smoothstep(radius, radius - BLUR, d);\n    return c;\n}\n\nfloat MouseInPresent(){\n    vec2 mouse=(2.0 * iMouse.xy-iResolution.xy) / iResolution.y;\n    float dist=distance(mouse,vec2(0.3, -0.64));\n    return dist>.18?0.:1.;\n}\nfloat Rect(vec2 uv, vec2 leftBot, vec2 rightTop)\n{\n    vec2 lb = smoothstep(leftBot, leftBot - BLUR, uv);\n    vec2 rt = smoothstep(rightTop, rightTop - BLUR, uv);\n    vec2 dim = rt - lb;\n    \n    return (min(dim.x, dim.y));\n}\n\nfloat RectP(vec2 uv, vec2 leftBot, vec2 rightTop)\n{\n    float blur=BLUR;\n    float mi=MouseInPresent();\n    if(mi>0.) blur=abs(sin(iTime*2.))*(30./iResolution.y);\n    vec2 lb = smoothstep(leftBot, leftBot - blur, uv);\n    vec2 rt = smoothstep(rightTop, rightTop - blur, uv);\n    vec2 dim = rt - lb;\n    \n    return (min(dim.x, dim.y));\n}\n\nfloat TranslateRect(vec2 uv,vec2 center,vec2 wh,float angle,vec4 color){\n    float rad=radians(angle);\n    vec2 rot=mat2(cos(rad), sin(rad), -sin(rad), cos(rad))*(uv-center);\n    vec2 leftBot=vec2(-wh.x/2.,-wh.y/2.);\n    vec2 rightTop=vec2(wh.x/2.,wh.y/2.);\n    vec2 lb = smoothstep(leftBot, leftBot - BLUR, rot);\n    vec2 rt = smoothstep(rightTop, rightTop - BLUR, rot);\n    vec2 dim = rt - lb;\n    return min(dim.x, dim.y);\n}\n\nfloat TriangleIsosceles(vec2 uv, vec2 tip, vec2 size)\n{\n    tip = uv - tip;\n    tip.x = abs(tip.x);\n    \n    vec2 a = tip - (size * clamp(dot(tip, size) / dot(size, size), 0.0, 1.0));\n    vec2 b = tip - (size * vec2(clamp(tip.x / size.x, 0.0, 1.0), 1.0));\n    float s = -sign(size.y);\n    vec2 d = min(vec2(dot(a, a), s * ((tip.x * size.y) - (tip.y * size.x))), vec2(dot(b, b), s * (tip.y - size.y)));\n    float t = -sqrt(d.x) * sign(d.y);\n    \n    return smoothstep(0.0, 0.0 - BLUR, t);\n}\n\nfloat Quad(vec2 uv, vec2 p1, vec2 p2, vec2 p3, vec2 p4)\n{  \n    float top = uv.y + (uv.x * (p1.y - p2.y));\n    float bot = uv.y + (uv.x * (p3.y - p4.y));    \n    top = smoothstep(p1.y, p1.y - BLUR, top);\n    bot = smoothstep(p3.y, p3.y + BLUR, bot);\n    \n    float right = uv.x + (uv.y * (p4.x - p2.x));\n    float left = uv.x + (uv.y * (p3.x - p1.x));    \n    right = smoothstep(p2.x, p2.x - BLUR, right);\n    left = smoothstep(p1.x, p1.x + BLUR, left);\n    \n    float h = min(top, bot);\n    float w = min(left, right);\n    \n    float r = min(w, h);\n    return r;\n}\n\nvec4 DecorateBase(vec2 uv, vec2 centre, float radius, float thickness, vec4 color, float base)\n{\n    float deco1 = Circle(uv, centre, radius);\n    float deco2 = Circle(uv, centre - vec2(0.03, 0.02), radius - thickness);\n    \n    vec4 col = vec4(0.0);\n    col = mix(col, TREE_COLOR, base);\n    col = mix(col, color, min(base, deco1 - deco2));\n    \n    return col;\n}\n\nvec4 Snowfall(vec2 uv, float time, float speed, float radius)\n{\n    float ar = iResolution.x / iResolution.y;\n    uv.x += ar - mod(time * speed, ar * 2.0);\n    uv.y -= 1.0 - mod(time * speed, 2.0);\n    \n    uv += sin(time) * 0.1;\n    \n    float l = length(uv);\n    \n    return vec4(smoothstep(radius, radius - 3.0 / iResolution.y, l));   \n}\n\nvec4 Env(vec2 uv)\n{    \n    float snowLeft = Circle(uv, vec2(-0.9, -3.3), 2.8);\n  \tfloat snowRight = Circle(uv, vec2(1.0, -3.3), 2.5);\n    \n    float snowBall1 = Circle(uv, vec2(-1.4, -0.52), 0.07);\n    float snowBall2 = Circle(uv, vec2(-1.6, -0.52), 0.1);\n    \n    float snowLeftShade = Circle(uv, vec2(-0.9, -3.3), 2.75);\n    float snowRightShade = Circle(uv, vec2(1.0, -3.3), 2.45);\n    \n    float present11 = RectP(Rotate(uv, -20.0), vec2(0.3, -0.64), vec2(0.6, -0.44));\n    float present12 = RectP(Rotate(uv, -20.0), vec2(0.3, -0.59), vec2(0.6, -0.54));\n    float present13 = RectP(Rotate(uv, -20.0), vec2(0.45, -0.64), vec2(0.5, -0.44));\n    float present21 = Rect(Rotate(uv, 10.0), vec2(0.3, -0.95), vec2(0.48, -0.65));\n    float present22 = Rect(Rotate(uv, 10.0), vec2(0.37, -0.95), vec2(0.415, -0.65));\n    float present23 = Rect(Rotate(uv, 10.0), vec2(0.3, -0.9), vec2(0.48, -0.85));\n       \n    vec4 col = vec4(0.0);    \n    col = mix(col, SNOW_SHADE_COLOR, max(snowLeft, snowRight));\n    col = mix(col, SNOW_COLOR, max(snowBall1, snowBall2));\n    col = mix(col, SNOW_COLOR, max(snowLeftShade, snowRightShade));    \n    col = mix(col, BOX_COLOR1, present11);\n    col = mix(col, RIBBON_COLOR1, max(present12, present13));\n    col = mix(col, BOX_COLOR2, present21);\n    col = mix(col, RIBBON_COLOR2, max(present22, present23));\n              \n    return col;\n}\nvec2 mousepos(float w,float h){\n    float y=h*2./iResolution.y;\n    return vec2(w*iResolution.x/(iResolution.y*iResolution.y),y);\n}\nvec4 xiao(vec2 uv){\n    //小书圣诞快乐\n    float angle=sin(iTime*10.);\n    //uv=Rotate(uv,angle);\n    vec2 pos=vec2(-.2,.51);\n    vec2 wh=vec2(.03,.2);\n    float c1=TranslateRect(uv,pos,wh,-5.,FONT_COLOR);\n    pos=vec2(-.21,.41);\n    wh=vec2(.03,.06);\n    float c2=TranslateRect(uv,pos,wh,75.,FONT_COLOR);\n    pos=vec2(-.33,.48);\n    wh=vec2(.03,.08);\n    float c3=TranslateRect(uv,pos,wh,20.,FONT_COLOR);\n    pos=vec2(-.1,.5);\n    wh=vec2(.03,.08);\n    float c4=TranslateRect(uv,pos,wh,-20.,FONT_COLOR);\n\n    float c=max(c1,max(c2,max(c3,c4)));\n\n    return c*FONT_COLOR;\n}\n\nvec4 shu(vec2 uv){\n    vec2 pos=vec2(0.2,.56);\n    vec2 wh=vec2(.2,.03);\n    float c1=TranslateRect(uv,pos,wh,5.,FONT_COLOR);\n    pos=vec2(0.2,.48);\n    wh=vec2(.25,.03);\n    float c2=TranslateRect(uv,pos,wh,5.,FONT_COLOR);\n    pos=vec2(.185,.49);\n    wh=vec2(.03,.28);\n    float c3=TranslateRect(uv,pos,wh,3.,FONT_COLOR);\n    pos=vec2(.28,.51);\n    wh=vec2(.03,.08);\n    float c4=TranslateRect(uv,pos,wh,3.,FONT_COLOR);\n    pos=vec2(.31,.43);\n    wh=vec2(.03,.08);\n    float c5=TranslateRect(uv,pos,wh,3.,FONT_COLOR);\n    pos=vec2(.28,.405);\n    wh=vec2(.04,.03);\n    float c6=TranslateRect(uv,pos,wh,3.,FONT_COLOR);\n    pos=vec2(.32,.6);\n    wh=vec2(.06,.03);\n    float c7=TranslateRect(uv,pos,wh,30.,FONT_COLOR);\n\n    float c=max(c1,\n    max(c2,\n    max(c3,\n    max(c4,\n    max(c5,\n    max(c6,c7))))));\n\n    return c*FONT_COLOR;\n\n}\n\nvec4 sheng(vec2 uv){\n    float lw=.015;\n    vec2 pos=vec2(-0.2,.2);\n    vec2 wh=vec2(.13,lw);\n    float c1=TranslateRect(uv,pos,wh,5.,FONT_COLOR);\n    pos=vec2(-.23,.12);\n    wh=vec2(.22,lw);\n    float c2=TranslateRect(uv,pos,wh,-40.,FONT_COLOR);\n    pos=vec2(-.21,.12);\n    wh=vec2(.22,lw);\n    float c3=TranslateRect(uv,pos,wh,30.,FONT_COLOR);\n    pos=vec2(-.22,.05);\n    wh=vec2(0.08,lw);\n    float c4=TranslateRect(uv,pos,wh,3.,FONT_COLOR);\n    pos=vec2(-.22,0.043);\n    wh=vec2(lw,.08);\n    float c5=TranslateRect(uv,pos,wh,3.,FONT_COLOR);\n    pos=vec2(-.22,.0);\n    wh=vec2(.12,lw);\n    float c6=TranslateRect(uv,pos,wh,3.,FONT_COLOR);\n\n    float c=max(c1,\n    max(c2,\n    max(c3,\n    max(c4,\n    max(c5,c6)))));\n\n    return c*FONT_COLOR;\n}\n\nvec4 dan(vec2 uv){\n    float lw=.015;\n    vec2 pos=vec2(-0.06,.17);\n    vec2 wh=vec2(.04,lw);\n    float c1=TranslateRect(uv,pos,wh,15.,FONT_COLOR);\n    pos=vec2(-.06,.12);\n    wh=vec2(.05,lw);\n    float c2=TranslateRect(uv,pos,wh,0.,FONT_COLOR);\n    pos=vec2(-.04,.07);\n    wh=vec2(lw,.12);\n    float c3=TranslateRect(uv,pos,wh,3.,FONT_COLOR);\n    pos=vec2(-.03,.02);\n    wh=vec2(0.03,lw);\n    float c4=TranslateRect(uv,pos,wh,3.,FONT_COLOR);\n    pos=vec2(.01,.14);\n    wh=vec2(.04,lw);\n    float c5=TranslateRect(uv,pos,wh,8.,FONT_COLOR);\n    pos=vec2(.03,.11);\n    wh=vec2(lw,.08);\n    float c6=TranslateRect(uv,pos,wh,15.,FONT_COLOR);\n    pos=vec2(.025,.07);\n    wh=vec2(lw,.03);\n    float c7=TranslateRect(uv,pos,wh,-35.,FONT_COLOR);\n    pos=vec2(.03,.03);\n    wh=vec2(lw,.08);\n    float c8=TranslateRect(uv,pos,wh,15.,FONT_COLOR);\n    pos=vec2(.08,.013);\n    wh=vec2(0.15,lw);\n    float c9=TranslateRect(uv,pos,wh,15.,FONT_COLOR);\n    pos=vec2(.1,.18);\n    wh=vec2(0.06,lw);\n    float c10=TranslateRect(uv,pos,wh,-8.,FONT_COLOR);\n    pos=vec2(.12,.11);\n    wh=vec2(0.03,lw);\n    float c11=TranslateRect(uv,pos,wh,-5.,FONT_COLOR);\n    pos=vec2(.1,.05);\n    wh=vec2(0.06,lw);\n    float c12=TranslateRect(uv,pos,wh,0.,FONT_COLOR);\n    pos=vec2(.1,.1);\n    wh=vec2(lw,.12);\n    float c13=TranslateRect(uv,pos,wh,0.,FONT_COLOR);\n    pos=vec2(.07,.07);\n    wh=vec2(lw,0.06);\n    float c14=TranslateRect(uv,pos,wh,-5.,FONT_COLOR);\n\n    float c=max(c1,\n    max(c2,\n    max(c3,\n    max(c4,\n    max(c5,\n    max(c6,\n    max(c7,\n    max(c8,\n    max(c9,\n    max(c10,\n    max(c11,\n    max(c12,\n    max(c13,c14)))))))))))));\n\n    return c*FONT_COLOR;\n}\n\nvec4 kuai(vec2 uv){\n    float lw=.015;\n    vec2 pos=vec2(.2,.1);\n    vec2 wh=vec2(lw,.06);\n    float c1=TranslateRect(uv,pos,wh,-5.,FONT_COLOR);\n    pos=vec2(.23,.1);\n    wh=vec2(lw,.18);\n    float c2=TranslateRect(uv,pos,wh,0.,FONT_COLOR);\n    pos=vec2(.26,.1);\n    wh=vec2(.03,lw);\n    float c3=TranslateRect(uv,pos,wh,50.,FONT_COLOR);\n    pos=vec2(.33,.14);\n    wh=vec2(0.08,lw);\n    float c4=TranslateRect(uv,pos,wh,3.,FONT_COLOR);\n    pos=vec2(.34,.08);\n    wh=vec2(.12,lw);\n    float c5=TranslateRect(uv,pos,wh,-8.,FONT_COLOR);\n    pos=vec2(.365,.11);\n    wh=vec2(lw,.07);\n    float c6=TranslateRect(uv,pos,wh,-5.,FONT_COLOR);\n    pos=vec2(.315,.08);\n    wh=vec2(lw,.2);\n    float c7=TranslateRect(uv,pos,wh,10.,FONT_COLOR);\n    pos=vec2(.35,.03);\n    wh=vec2(lw,.04);\n    float c8=TranslateRect(uv,pos,wh,-35.,FONT_COLOR);\n\n    float c=max(c1,\n    max(c2,\n    max(c3,\n    max(c4,\n    max(c5,\n    max(c6,\n    max(c7,c8)))))));\n\n    return c*FONT_COLOR;\n}\n\nvec4 le(vec2 uv){\n    float lw=.015;\n    vec2 pos=vec2(.5,.16);\n    vec2 wh=vec2(.13,lw);\n    float c1=TranslateRect(uv,pos,wh,-5.,FONT_COLOR);\n    pos=vec2(.51,.08);\n    wh=vec2(.15,lw);\n    float c2=TranslateRect(uv,pos,wh,0.,FONT_COLOR);\n    pos=vec2(.51,.06);\n    wh=vec2(lw,.16);\n    float c3=TranslateRect(uv,pos,wh,-5.,FONT_COLOR);\n    pos=vec2(.44,.11);\n    wh=vec2(lw,0.06);\n    float c4=TranslateRect(uv,pos,wh,3.,FONT_COLOR);\n    pos=vec2(.562,0.023);\n    wh=vec2(lw,.04);\n    float c5=TranslateRect(uv,pos,wh,-20.,FONT_COLOR);\n    pos=vec2(.46,.023);\n    wh=vec2(lw,.06);\n    float c6=TranslateRect(uv,pos,wh,20.,FONT_COLOR);\n    pos=vec2(.505,-.013);\n    wh=vec2(.02,lw);\n    float c7=TranslateRect(uv,pos,wh,-5.,FONT_COLOR);\n\n    float c=max(c1,\n    max(c2,\n    max(c3,\n    max(c4,\n    max(c5,\n    max(c6,c7))))));\n\n    return c*FONT_COLOR;\n}\n\nvec4 Snowman(vec2 uv)\n{\n   \tuv -= vec2(-0.8, -0.4);\n    uv = Rotate(uv, sin(iTime) * 12.0);\n    uv += vec2(-0.8, -0.4);\n    \n    float head = Circle(uv, vec2(-0.8, 0.0), 0.2);\n    float body = Circle(uv, vec2(-0.8, -0.4), 0.3);\n    \n    float eyes = Circle(vec2(abs(uv.x + 0.8), uv.y), vec2(0.05, 0.06), 0.03);\n    float nose = TriangleIsosceles(uv, vec2(-0.8, -0.15), vec2(0.04, 0.15));\n    float buttons = Circle(vec2(uv.x, abs(uv.y + 0.35)), vec2(-0.8, 0.07), 0.04);\n    \n    float arms = Rect(Rotate(vec2(abs(uv.x + 0.8), uv.y), 30.0), vec2(0.05, -0.35), vec2(0.3, -0.32));\n    float finger1 = Rect(Rotate(vec2(abs(uv.x + 0.8) - 0.62, uv.y + 0.5), 160.0), vec2(0.3, -0.35), vec2(0.33, -0.25));\n    float finger2 = Rect(Rotate(vec2(abs(uv.x + 0.8) - 0.03, uv.y + 0.29), 60.0), vec2(0.3, -0.35), vec2(0.33, -0.25));\n    \n    float hatBase = Rect(uv, vec2(-1.0, 0.15), vec2(-0.6, 0.22));\n    float hatTop = Rect(uv, vec2(-0.95, 0.2), vec2(-0.65, 0.48));    \n    \n  \tvec4 col = vec4(0.0);    \n    col = mix(col, SNOWMAN_COLOR, max(head, body));\n    col = mix(col, SNOWMAN_HAT_COLOR, eyes);\n    col = mix(col, SNOWMAN_NOSE_COLOR, nose);\n    col = mix(col, SNOWMAN_BUTTON_COLOR, buttons);\n    col = mix(col, SNOWMAN_HAT_COLOR, max(hatBase, hatTop));\n    col = mix(col, SNOWMAN_HAT_COLOR, max(arms, max(finger1, finger2)));\n    \n    return col;\n}\n\nvec4 Tree(vec2 uv)\n{\n\tuv+= vec2(-0.2, 0.0);\n    \n    float trunk = Quad(uv, vec2(0.9, -0.6), vec2(0.9, -0.6), vec2(0.8, -0.9), vec2(1.0, -0.9));\n    float base1 = Quad(uv, vec2(0.8, -0.2), vec2(1.2, -0.35), vec2(0.3, -0.57), vec2(1.4, -0.6));\n    float base2 = Quad(uv, vec2(0.7, -0.1), vec2(1.2, -0.09), vec2(0.0, -0.2), vec2(1.75, -0.35));\n    float base3 = Quad(uv, vec2(0.55, 0.25), vec2(1.3, 0.15), vec2(0.1, -0.1), vec2(2.0, -0.09));\n    float base4 = Quad(uv, vec2(0.35, 0.32), vec2(1.45, 0.35), vec2(-0.5, 0.25), vec2(2.4, 0.15));\n    float base5 = Quad(uv, vec2(0.45, 0.55), vec2(1.3, 0.55), vec2(-0.1, 0.32), vec2(1.85, 0.35));\n    float base6 = TriangleIsosceles(uv, vec2(0.87, 0.9), vec2(0.1, -0.35));\n    \n    vec4 decoBase1 = DecorateBase(uv, vec2(1.0, 0.2), 0.7, 0.07, TREE_DECO_COLOR1, base1);\n    vec4 decoBase2 = DecorateBase(uv, vec2(0.9, 0.37), 0.63, 0.06, TREE_DECO_COLOR3, base2);\n    vec4 decoBase3 = DecorateBase(uv, vec2(0.95, 0.47), 0.5, 0.06, TREE_DECO_COLOR2, base3);\n    vec4 decoBase4 = DecorateBase(uv, vec2(0.95, 0.6), 0.4, 0.05, TREE_DECO_COLOR1, base4);\n    vec4 decoBase5 = DecorateBase(uv, vec2(0.9, 0.7), 0.25, 0.05, TREE_DECO_COLOR2, base5);\n    vec4 decoBase6 = DecorateBase(uv, vec2(0.95, 0.4), 0.33, 0.07, TREE_DECO_COLOR3, base6);\n    \n    vec4 col = vec4(0.0);\n    col = mix(col, TREE_TRUNK_COLOR, trunk);\n    col = mix(col, decoBase1, decoBase1.w);\n    col = mix(col, decoBase2, decoBase2.w);\n    col = mix(col, decoBase3, decoBase3.w);\n    col = mix(col, decoBase4, decoBase4.w);\n    col = mix(col, decoBase5, decoBase5.w);\n    col = mix(col, decoBase6, decoBase6.w);\n    \n    return col;\n}\n\nvec4 Lights(vec2 uv)\n{\n    float wire1 = Circle(uv, vec2(-0.5, 4.25), 3.5);\n    float wire2 = Circle(uv, vec2(-0.5, 4.25), 3.49);\n    \n    float bulb1 = Circle(uv, vec2(-1.5, 0.86), 0.05);\n    float bulb2 = Circle(uv, vec2(-1.1, 0.765), 0.05);\n    float bulb3 = Circle(uv, vec2(-0.7, 0.72), 0.05);\n    float bulb4 = Circle(uv, vec2(-0.3, 0.72), 0.05);\n    float bulb5 = Circle(uv, vec2(0.1, 0.765), 0.05);\n    float bulb6 = Circle(uv, vec2(0.5, 0.86), 0.05);\n    \n    vec4 lightSwitch1 = mix(LIGHT_OFF_COLOR, LIGHT_ON_COLOR, round((sin(iTime * 2.0) + 1.0) / 2.0));\n    vec4 lightSwitch2 = mix(LIGHT_ON_COLOR, LIGHT_OFF_COLOR, round((sin(iTime * 2.0) + 1.0) / 2.0));\n    \n    vec4 col = vec4(0.0);\n    col = mix(col, LIGHT_WIRE_COLOR, wire1 - wire2);\n    col = mix(col, lightSwitch1, max(max(bulb1, bulb3), bulb5));\n    col = mix(col, lightSwitch2, max(max(bulb2, bulb4), bulb6));\n    return col;\n}\n\nvec4 Snow(vec2 uv)\n{\n    vec4 col = vec4(0.0);\n    \n    col += Snowfall(uv, iTime + 0.0, 0.4, 0.02);\n    col += Snowfall(uv, iTime + 1.0, 0.3, 0.035);\n    col += Snowfall(uv, iTime + 2.0, 0.2, 0.02);\n    col += Snowfall(uv, iTime + 3.0, 0.2, 0.025);\n    col += Snowfall(uv, iTime + 4.0, 0.4, 0.03);\n    col += Snowfall(uv, iTime + 5.0, 0.2, 0.03);\n    col += Snowfall(uv, iTime + 6.0, 0.3, 0.02);\n    col += Snowfall(uv, iTime + 7.0, 0.2, 0.02);\n    col += Snowfall(uv, iTime + 8.0, 0.2, 0.035);\n    col += Snowfall(uv, iTime + 9.0, 0.4, 0.03);    \n    \n    return col;\n}\n\n\nvec4 Scene(vec2 uv)\n{\n    vec4 col = vec4(0.0);\n    \n    \n    vec4 env = Env(uv);\n    vec4 snowman = Snowman(uv);\n    vec4 tree = Tree(uv);\n    vec4 lights = Lights(uv);\n    vec4 snow = Snow(uv);\n    float mi= MouseInPresent();\n    vec4 xiao1=xiao(uv);\n    xiao1=mi*xiao1;\n    vec4 shu1=shu(uv);\n    shu1=mi*shu1;\n    vec4 sheng=sheng(uv);\n    vec4 dan=dan(uv);\n    vec4 kuai=kuai(uv);\n    vec4 le=le(uv);\n    \n    col = mix(col, env, env.w);\n    col = mix(col, snowman, snowman.w);\n    col = mix(col, tree, tree.w);\n    col = mix(col, lights, lights.w);\n    col = mix(col, snow, snow.w);\n    col=mix(col,xiao1,xiao1.w);\n    col=mix(col,shu1,shu1.w);\n    col=mix(col,sheng,sheng.w);\n    col=mix(col,dan,dan.w);\n    col=mix(col,kuai,kuai.w);\n    col=mix(col,le,le.w);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n    FONT_COLOR=sin(iTime*5.)>0.?\n    vec4(0.4,51./255.,102./255.,1.):\n    vec4(255./255.,241./255.,67./255.,1.);\n\n    vec4 scene = Scene(uv);\n\n    vec4 col = mix(BG_COLOR, BG_FADE_COLOR, uv.y); \n    col = mix(col, scene, scene.w);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}