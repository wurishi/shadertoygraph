{"ver":"0.1","info":{"id":"sdjfW1","date":"1646171253","viewed":104,"name":"Peace Now!","username":"pelleman","description":"Peace Now!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["peacenow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// PEACE IN UKRAINE NOW \n// The free world stands united with Ukraine against Russian invasion/war.\n// The cost of freedom and peace - https://videos.metro.co.uk/video/met/2022/02/28/7246820492299028969/640x360_MP4_7246820492299028969.mp4\n//                                 https://www.youtube.com/watch?v=IPVAdEjkibw\n//                                  \n// In a war, there are no winners, only losers.\n// This war must stop. Now.\n                                    \n// Thanks to Konstantin84UKR for the peace sign code from\n// https://www.shadertoy.com/view/WltSDB\n// and Oneshade for Ukrainian flag from\n// https://www.shadertoy.com/view/ssSfzm\n\nconst int[] quote = int[](P, e, a, c, e, SPACE, i, n, SPACE, U, k, r, a, i, n, e, SPACE,\nN, O, W);\n\n// Modified version of font loader from https://www.shadertoy.com/view/ltcXzs\nvoid drawChar(inout vec3 color, in vec3 charColor, in vec2 uv, in vec2 pos, in vec2 size, in int char, in float zoom) {\n    size *= 2.0;\n    pos.x *= zoom;\n    uv = (uv - pos) / size + .5;\n    vec2 charUv = uv / 16.0;\n    vec2 dfdx = dFdx(charUv);\n    vec2 dfdy = dFdy(charUv);\n    if (all(lessThan(abs(uv - 0.5), vec2(0.5)))) {\n        float val = textureGrad(iChannel0, charUv + fract(vec2(char, 15 - char / 16) / 16.0), dfdx, dfdy).r;\n        color = mix(color, charColor, val);\n    }\n}\n\nvec3 peace(in vec2 uv) {\n          \n    vec3 col_b  = vec3(0.0);\n    vec3 col_w  = vec3(1.0);\n          \n    // Output to screen\n    vec2 centr = vec2(0.0,0.0); \n    \n    float r = 0.35;\n    float d = distance(uv,centr);\n  \n    float x0 = step(r,d*1.15); \n    float x1 = step(r-0.1,d);  \n   \n    float c1  = distance(uv,centr);\n  \n    vec2 uvToCenter = uv - centr;\n    \n    float angle = (degrees(atan( uvToCenter.x , uvToCenter.y ) + 3.1415) ) / (360.0);\n    \n    float angle315 = 315.0/360.0;\n    float angle45  = 45.0/360.0;\n    float angle180 = 180.0/360.0;\n    float angle270 = 270.0/360.0;\n         \n    float col_ring = 1.0 - step(x1,x0);\n      \n    float rs = step(uv.x,0.03);\n    float ls = step(-0.03,uv.x);\n    float us = step(uv.y,r); \n    float ds = step(-r ,uv.y);\n     \n    float line = (rs * ls * us * ds) ;\n    \n    vec3 col  = vec3(0.0, 0.0, 0.0);\n    \n    col = col + vec3(line + col_ring); \n    float col_d = step(mod((angle315 + angle),1.0),angle270);\n  \n    angle = (degrees(atan( uvToCenter.x , uvToCenter.y - 0.08) + 3.1415) ) / (360.0);\n      \n    float col_h = step(angle270,mod((angle315 + angle),1.0) ); \n    \n    col +=  vec3(col_d * col_h);\n    float temp = step(x0,r);\n    col *= clamp(temp,0.0,1.0);\n            \n    vec3 fragColor = vec3(col);\n\n    return fragColor;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    float unit = 2.0 / iResolution.y;\n    \n    vec3 color = peace(uv); \n            \n    if (uv.y < 0.) color += vec3(0.9, 0.9, 0.0);\n    if (uv.y >= 0.) color += vec3(0.0, 0.0, 0.9);\n    \n    vec2 pos = vec2(-0.29, 0.395);\n    for (int char=0; char < quote.length(); char++) {\n        if (pos.x < -0.47 ? quote[char] != SPACE : true) {\n            drawChar(color, vec3(1.0), uv, pos, vec2(0.06), quote[char], -2.);\n            pos.x += 0.03;\n        }\n\n        if (pos.x > 0.5) {\n            int next = char + 1;\n            if (next < quote.length()) {\n                if (quote[char] != SPACE && quote[char] != COMMA && quote[char] != PERIOD && quote[char] != DOUBLE_QUOTE &&\n                    quote[next] != SPACE && quote[next] != COMMA && quote[next] != PERIOD && quote[next] != DOUBLE_QUOTE) {\n                    drawChar(color, vec3(1.0), uv, pos, vec2(0.06), HYPHEN, -2.);\n                }\n            }\n\n            pos.x = -0.5;\n            pos.y -= 0.1;\n        }\n    }\n    \n    drawChar(color, vec3(1.0), uv, vec2(-0.26 + 0.055, -0.4), vec2(0.06), S, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(-0.23 + 0.055, -0.4), vec2(0.06), l, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(-0.2  + 0.055, -0.4), vec2(0.06), a, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(-0.17 + 0.055, -0.4), vec2(0.06), v, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(-0.14 + 0.055, -0.4), vec2(0.06), a, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(-0.11 + 0.055, -0.4), vec2(0.06), SPACE, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(-0.05 + 0.055, -0.4), vec2(0.06), U, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(-0.02 + 0.055, -0.4), vec2(0.06), k, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(0.01  + 0.055, -0.4), vec2(0.06), r, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(0.04  + 0.055, -0.4), vec2(0.06), a, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(0.07  + 0.055, -0.4), vec2(0.06), i, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(0.1   + 0.055, -0.4), vec2(0.06), n, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(0.129 + 0.055, -0.4), vec2(0.06), i, 2.);\n    drawChar(color, vec3(1.0), uv, vec2(0.155 + 0.055, -0.4), vec2(0.06), Exclame, 2.);\n        \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// Generated with a python script I wrote to save me the trouble.\n// I had to change some of the names manually though.\nconst int SPACE = 32;\nconst int Exclame = 33;\nconst int DOUBLE_QUOTE = 34;\nconst int HASHTAG = 35;\nconst int DOLLAR = 36;\nconst int PERCENT = 37;\nconst int AMPERSAND = 38;\nconst int SINGLE_QUOTE = 39;\nconst int OPEN_PARENTHESIS = 40;\nconst int CLOSE_PARENTHESIS = 41;\nconst int ASTERISK = 42;\nconst int PLUS = 43;\nconst int COMMA = 44;\nconst int HYPHEN = 45;\nconst int PERIOD = 46;\nconst int SLASH = 47;\nconst int ZERO = 48;\nconst int ONE = 49;\nconst int TWO = 50;\nconst int THREE = 51;\nconst int FOUR = 52;\nconst int FIVE = 53;\nconst int SIX = 54;\nconst int SEVEN = 55;\nconst int EIGHT = 56;\nconst int NINE = 57;\nconst int COLON = 58;\nconst int SEMICOLON = 59;\nconst int LESS_THAN = 60;\nconst int EQUAL = 61;\nconst int GREATER_THAN = 62;\nconst int QUESTION = 63;\nconst int AT = 64;\nconst int A = 65;\nconst int B = 66;\nconst int C = 67;\nconst int D = 68;\nconst int E = 69;\nconst int F = 70;\nconst int G = 71;\nconst int H = 72;\nconst int I = 73;\nconst int J = 74;\nconst int K = 75;\nconst int L = 76;\nconst int M = 77;\nconst int N = 78;\nconst int O = 79;\nconst int P = 80;\nconst int Q = 81;\nconst int R = 82;\nconst int S = 83;\nconst int T = 84;\nconst int U = 85;\nconst int V = 86;\nconst int W = 87;\nconst int X = 88;\nconst int Y = 89;\nconst int Z = 90;\nconst int OPEN_BRACKET = 91;\nconst int BACKSLASH = 92;\nconst int CLOSE_BRACKET = 93;\nconst int CIRCUMFLEX = 94;\nconst int a = 97;\nconst int b = 98;\nconst int c = 99;\nconst int d = 100;\nconst int e = 101;\nconst int f = 102;\nconst int g = 103;\nconst int h = 104;\nconst int i = 105;\nconst int j = 106;\nconst int k = 107;\nconst int l = 108;\nconst int m = 109;\nconst int n = 110;\nconst int o = 111;\nconst int p = 112;\nconst int q = 113;\nconst int r = 114;\nconst int s = 115;\nconst int t = 116;\nconst int u = 117;\nconst int v = 118;\nconst int w = 119;\nconst int x = 120;\nconst int y = 121;\nconst int z = 122;\nconst int OPEN_BRACE = 123;\nconst int PIPE = 124;\nconst int CLOSE_BRACE = 125;\nconst int TILDE = 126;","name":"Common","description":"","type":"common"}]}