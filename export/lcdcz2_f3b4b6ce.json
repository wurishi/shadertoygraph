{"ver":"0.1","info":{"id":"lcdcz2","date":"1730920505","viewed":126,"name":"fractalic rotate gold","username":"nayk","description":"source https://www.shadertoy.com/view/wsGfWw","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["fractal","rotate","gold"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU atan(1.)*8.\n\nvoid lookAt(inout vec3 rd,vec3 ro,vec3 ta,vec3 up){\n    vec3 w=normalize(ta-ro),u=normalize(cross(w,up));\n    rd=rd.x*u+rd.y*cross(u,w)+rd.z*w;\n}\n\nvoid rot(inout vec3 p,vec3 a,float t){\na=normalize(a);\nvec3 u=cross(a,p),v=cross(a,u);\np=u*sin(t)+v*cos(t)+a*dot(a,p);  \n}\n\n#define hash(p)fract(sin(p*12345.5))\n\nvec3 randVec(float s)\n{\n    vec2 n=hash(vec2(s,s+215.3))*TAU;\n    return vec3(cos(n.y)*cos(n.x),sin(n.y),cos(n.y)*sin(n.x));\n}\n\n// https://shadertoy.com/view/ltf3W2\n#define sabs(p,k)sqrt((p)*(p)+k)\n\n// p-=2.*min(0.,dot(p,v))*v;\n// smooth type\nvoid sfold(inout vec2 p, vec2 v, float k)\n{\n    float g=dot(p,v);\n    p-=(g-sabs(g,k))*v;\n}\n\n// if(p.x<p.y)p.xy=p.yx;\n// smooth type\nvoid sfold45(inout vec2 p, float k)\n{\n    vec2 v=normalize(vec2(1,-1));\n    sfold(p,v,k);\n}\n\nfloat map(vec3 p){\n\nfloat k=.02;\nfloat itr=7.;\n    float t=iTime*.00118;\n    vec3 axis=randVec(hash(floor(t)*23.45+123.4));\n    rot(p,p.xzy, iTime);\n        rot(p,p.zxz, iTime);\nfor(float i=0.;i<itr;i++)\n{\n    p=abs(p)-1.;\n   \nrot(p,axis,(t));\np*=2.;\n  }\n  return length(p.xz)/exp2(itr)-.001;\n}\n\nvec3 calcNormal(vec3 p)\n{\n  vec3 n=vec3(0);\n  for(int i=0; i<5; i++){\n    vec3 e=.001*(vec3(9>>i&1, i>>1&1, i&1)*2.-1.);\n    n+=e*map(p+e);\n  }\n  return normalize(n);\n}\n\nfloat march(vec3 ro, vec3 rd, float near, float far)\n{\n    float t=near,d;\n    for(int i=0;i<70;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if (d<.001) return t;\n        if (t>=far) return far;\n    }\n    return far;\n}\n\nvec3 doColor(vec3 p)\n{\n    return cos(vec3(7,6,4)+p*.5)*.5+.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy*2.-iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(0,0,6);\n    vec3 rd = normalize(vec3(uv,2));\n    vec3 ta =vec3(0);\n    lookAt(rd,ro,ta,vec3(0,1,0));    \n    vec3 col= vec3(0,0,.15);\nconst float maxd=50.;\n    float t=march(ro,rd,0.,maxd);\n    if(t<maxd)\n    {\n        vec3 p=ro+rd*t;\n        col=doColor(p);\n        vec3 n=calcNormal(p);      \nvec3 lightPos=ro+vec3(2,5,2);\n    vec3 li=lightPos-p;\nfloat len=length(li);\nli/=len;\nfloat dif=clamp(dot(n,li),0.,1.);\n        col*=max(dif,.2);\n        float rimd=pow(clamp(1.-dot(reflect(-li,n),-rd),0.,1.),2.5);\nfloat frn=rimd+2.2*(1.-rimd);\n    col*=frn*.6;\n\n        col+=vec3(1800.8,70.6,1.2)*pow(clamp(dot(reflect(rd,n),li),0.,100.),10.);\n    }\n    col*=1.5*vec3(0.5,0.5,.0);\n    fragColor.xyz=col;\n}\n\n","name":"Image","description":"","type":"image"}]}