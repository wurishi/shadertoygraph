{"ver":"0.1","info":{"id":"MsffW4","date":"1496166492","viewed":463,"name":"A Sphere 球体","username":"chenwanwan13","description":"点击屏幕改变光源位置。","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float linearstep(float edge0, float edge1, float x) {\n    float t = (x - edge0)/(edge1 - edge0);\n    return clamp(t, 0.0, 1.0);\n}\n\nfloat smootherstep(float edge0, float edge1, float x) {\n    float t = (x - edge0)/(edge1 - edge0);\n    float t1 = t*t*t*(t*(t*6. - 15.) + 10.);\n    return clamp(t1, 0.0, 1.0);\n}\n\n\nstruct Ray {\n\tvec3 origin; \n\tvec3 direction; \n};\n    \nstruct Sphere {\n    vec3 center;  \n\tfloat radius; \n};\n \n//！！！\nvec4 diffuse(in vec3 surface, in vec3 center, in vec4 color, in vec3 litePos, in float spec) {\n\t// Surface normal\n\tvec3 n = normalize(surface - center)/1.;\n\t\n\t// Light direction from surface\n\tvec3 l = normalize(litePos - surface)/1.;\n\n    vec3 h = normalize(n + l)/1.;\n\n\t// The diffuse equation\n\treturn color * pow(max(0.0, dot(n, h)),spec);\n}\n    \nfloat intersectSphere(in Ray ray, in Sphere sphere) {\n\tvec3 co = ray.origin - sphere.center;\n\n\tfloat discriminant = dot(co, ray.direction) * dot(co, ray.direction)\n\t\t\t- (dot(co, co) - sphere.radius * sphere.radius);\n\n\tif (discriminant >= 0.0)\n\t\treturn -dot(co, ray.direction)-sqrt(discriminant);\n\telse\n\t\treturn -1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float x = fragCoord.x / iResolution.x; \n\tfloat y = fragCoord.y*.6 / iResolution.y; \n    vec4  m  = iMouse / iResolution.xyxy;\n    vec3  rpos = vec3(3.5, 0., 5.0);\n    float r = 1.0;\n    float k = r;\n    vec3 pixel;\n    vec4 pix;\n    vec4 pix2;\n    \n    vec3 amb = vec3(0.1,0.1,0.1);\n    vec3 diff = vec3(0.8,0.3,0.4);\n    \n    vec3 col1 = vec3(.9,0.,0.);\n    \n    x = x * 3.0 ;\n\ty = y * 3.0 - 1.;   \n    \n    vec3 pixelPos = vec3(x, y, 0);\n\n    vec3 eyePos = vec3(0, 0, -4); \n    \n\tvec3 rayDir = normalize(pixelPos - eyePos)*(1.);\n    \n    Sphere sphere = Sphere(rpos, r); \n\n\tfloat eyeToSphere = intersectSphere(Ray(eyePos, rayDir), sphere);\n    \n    vec3 bgcol = vec3(0.3, 0.3, 0.5);\n    fragColor = vec4(0.0, 0.0, 0.0, 1);\n   \n   \tif (eyeToSphere > 0.)\n\t{\n\t\t//漫射颜色\n        \n\t\tvec4 Colour =  vec4(0.4,0.4,0.4,1.);\n\n\t\t//周边颜色\n\t\t\n        vec4 ambientColour =  vec4(0.7,0.5,0.1,1.);\n\n        //光亮位置\n        vec3 litePos = vec3(m.x*10., m.y*10., 1.);\n        \n        float spec = 50.0;\n        \n        k =  smoothstep(k-0.005,k+0.005,length(r-rpos));\n        pixel = mix(amb,bgcol,k);\n        pix = vec4(pixel,1.); \n        pix2 = vec4(mix(diff,bgcol,k),1.);\n            \n        fragColor = ambientColour + diffuse(eyePos + eyeToSphere * rayDir, sphere.center, pix2, litePos,spec);\n\t\tfragColor = pix + diffuse(eyePos + eyeToSphere * rayDir, sphere.center, pix2, litePos,spec);\n        //fragColor = vec4(mix(vec3(fragColor.x,fragColor.y,fragColor.z),bgcol,k),1.);\n        \n    } \n    \n            \n} \n        \n   \n    \n   \n","name":"Image","description":"","type":"image"}]}