{"ver":"0.1","info":{"id":"ftKBzd","date":"1665076304","viewed":209,"name":"botw attaempt","username":"JoeyTheGreat","description":"my first attempt at a botw shader","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["botw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pixel(vec2 loc){\n    return texture(iChannel0, loc / iResolution.xy).xyz;\n}\n\nvec3 rgbToHsv(vec3 rgb){\n    vec3 hsv = vec3(0.);\n    float cmax = max(max(rgb.x, rgb.y), rgb.z);\n    float delta = cmax - min(min(rgb.x, rgb.y), rgb.z);\n    if(delta != 0.){\n        if(cmax == rgb.x)\n            hsv.x = mod((rgb.y - rgb.z) / delta , 6.);\n        if(cmax == rgb.y)\n            hsv.x = (rgb.z - rgb.x) / delta + 2.;\n        if(cmax == rgb.z)\n            hsv.x = (rgb.x - rgb.y) / delta + 4.;\n    }\n    hsv.x /= 6.;\n    if(cmax != 0.)\n        hsv.y = delta / cmax;\n    hsv.z = cmax;\n    return hsv;\n}\nvec3 hsvToRgb(vec3 hsv){\n    vec3 rgb = vec3(0.);\n    vec3 t = vec3(hsv.y * hsv.z, 0., 0.);\n    t.y = t.x * (1. - abs(mod(hsv.x * 6., 2.) - 1.));\n    switch (int(floor(hsv.x * 6.))){\n    case 0:\n        rgb = t;\n        break;\n    case 1:\n        rgb = t.yxz;\n        break;\n    case 2:\n        rgb = t.zxy;\n        break;\n    case 3:\n        rgb = t.zyx;\n        break;\n    case 4:\n        rgb = t.yzx;\n        break;\n    case 5:\n        rgb = t.xzy;\n    }\n    rgb += hsv.z - t.x;\n    return rgb;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float count = 10.;\n    \n    float range = 10.;\n    vec3 total = vec3(0.);\n    for(float i = fragCoord.x - range; i <= fragCoord.x + range; i++){\n        for(float j = fragCoord.y - range; j <= fragCoord.y + range; j++){\n            vec3 pix = round(pixel(vec2(i, j)).xyz * count) / count;\n            total += pix;\n        }\n    }\n    vec3 col = total / pow(range * 2. + 1., 2.);\n    col = round(col * count) / count;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}