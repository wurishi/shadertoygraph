{"ver":"0.1","info":{"id":"WdcSDf","date":"1572974516","viewed":100,"name":"growing box corners","username":"thisisthais","description":"made accidentally on day 10ish of learning shaders","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["blackandwhite","square","box"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\nvec2 tile(vec2 _st,float _zoom){\n  _st*=_zoom;\n  return fract(_st);\n}\n\nfloat frame(vec2 _st,vec2 _size){\n  vec2 bl=step(_size,_st);\n  vec2 tr=step(_size,1.-_st);\n  \n  return bl.x*bl.y*tr.x*tr.y;\n}\n\nfloat box(vec2 _st,vec2 _size,float _smoothEdges){\n  _size=vec2(.5)-_size*.5;\n  vec2 aa=vec2(_smoothEdges*.5);\n  vec2 uv=smoothstep(_size,_size+aa,_st);\n  uv*=smoothstep(_size,_size+aa,vec2(1.)-_st);\n  return uv.x*uv.y;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ){\n  vec2 myRes = iResolution.yy/2.;\n  vec2 st=fragCoord/myRes.xy;\n  vec3 color=vec3(0.,0.,0.);\n  \n  st=tile(st,5.);\n  \n  color=vec3(frame(st,vec2(.1)));\n\n  float rotate=mod(iTime,PI);\n  st=st-vec2(.5);\n  st*=rotate;\n  st=st+vec2(.5);\n\n  // 4 boxes in each corner\n  color*=vec3(1.-box(st-vec2(.5),vec2(.5),.01));\n  color*=vec3(1.-box(st+vec2(.5),vec2(.5),.01));\n  color*=vec3(1.-box(st+vec2(.5,-.5),vec2(.5),.01));\n  color*=vec3(1.-box(st+vec2(-.5,.5),vec2(.5),.01));\n  \n  fragColor=vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}