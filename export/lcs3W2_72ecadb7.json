{"ver":"0.1","info":{"id":"lcs3W2","date":"1703579598","viewed":24,"name":"PerlinGradientNoise","username":"Leabemo","description":"basic noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2dnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 radom2(in vec2 i){\n    \n    i = vec2(dot(i,vec2(127.1,311.7)),dot(i,vec2(269.5,183.3)));\n    \n    return fract(sin(i) * (43758.5453123+iTime*0.6))*2.-1.;\n\n}\n\nfloat noise (in vec2 uv){\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n    float a = dot(radom2(i),f);    \n    float b = dot(radom2(i + vec2(1.0,0.0)),f - vec2(1.0,0.0));\n    float c = dot(radom2(i + vec2(0.0,1.0)),f - vec2(0.0,1.0));\n    float d = dot(radom2(i + vec2(1.0,1.0)),f - vec2(1.0,1.0));\n    \n    // Smooth Interpolation\n    vec2 u = f*f*(3.-2.*f);\n    \n    float noise = mix(mix(a,b,u.x),mix(c,d,u.x),u.y);\n\n    return noise;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 pos = vec2(uv*2.0);\n    \n    // Use the noise function\n    vec3 color = vec3(0.0);\n    //float n = noise(pos)*0.5+0.5;\n    color = vec3(1.) * smoothstep(0.14,0.21,noise(pos)); \n    color += smoothstep(0.15,0.25,noise(pos*2.)); \n    color -= smoothstep(0.35,0.45,noise(pos*2.)); \n    // Output to screen\n    fragColor = vec4(1.-color, 1.0);\n}","name":"Image","description":"","type":"image"}]}