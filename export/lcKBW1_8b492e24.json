{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n\nconst float PI = 3.141592653589793;\nconst float INV_TAU = 1.0 / PI;\n\nconst float uniRotationSpeed = 2.0;\nconst float uniRotationSpread = 1.0;\nconst float uniZoomSpeed = 0.5;\nconst float uniRingsGrowthFactor = 0.50;\nconst float uniRingsThickness = 1.0 / .50;\nconst float uniShadowSpread = 0.2;\nconst float uniShadowIntensity = 0.5;\n\nvec2 getPolar(in vec2 fragCoord) {\n    float aspect = iResolution.y / iResolution.x;\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 xy = vec2(1.0, aspect) * 2.0 * (uv - vec2(0.5));\n    return vec2(length(xy), atan(xy.y, xy.x));\n}\n\n#define RND(X) fract(sin(dot(X, vec2(131.0, 1234.1))) * 2132.1)\n#define RT(X) mat2(cos(X), -sin(X), sin(X), cos(X))\n\nfloat s_noise(vec2 uv)\n{\nvec2 i = floor(uv);\nvec2 f = fract(uv);\nfloat a = RND(i + vec2(0, 0));\nfloat b = RND(i + vec2(1, 0));\nfloat c = RND(i + vec2(0, 1));\nfloat d = RND(i + vec2(1, 1));\n\nvec2 u = smoothstep(0.0, 1.0, f);\nreturn mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n\n\n}\n\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n      vec2 uv = (C - 0.5 * iResolution.xy) / iResolution.y;\n     vec2 polar = getPolar(C);\n    float r = polar.x;\n    float a = polar.y;\n    float light = uniRingsThickness * log(pow(r, uniRingsGrowthFactor))- iTime*1. -(uniZoomSpeed);\n    float n = floor(light);\n    float phase = n * 7.0;\n    a += (phase + uniRotationSpeed + iTime*1.) * uniRotationSpread;\n    float radial = fract(a * INV_TAU * 2.0);\n    float selection = fract(.5 * light);\n    vec3 col = selection < 0.5 ? vec3(1,0.667,0.0) : vec3(0, 0.333, 1.0);\n    float v = fract(light);\n    float u = radial;\n    col *= u;\n    col *= v;\n    col *= .6;\n    col += vec3(0.6);\n \n    float shade = smoothstep(0.0, uniShadowSpread, v) * uniShadowIntensity + (1.0 - uniShadowIntensity);\n    col *= shade;\n    vec3 r3 = normalize(vec3(uv, 1.1 - dot(uv, uv) * 15.002*cos(iTime)));\n    vec3 n1,p,q,r2=iResolution,\n    d=normalize(vec3((C*2.-r2.xy)/r2.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(0.5,0.5,1.),H(g*.1),.8)*2./e/8e3\n    )\n    {\n        p=g*d;\np.xz+=refract(p.xy,p.xy,0.251*cos(iTime));\n        a=30.;\n        p=mod(p-a,a*2.)-a;\n        s=2.;\n        for(int i=0;i++<8;){\n            p=.3-abs(p-r3);\n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n            s*=e=2.1+sin(iTime*.01)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.*3.,\n                    120,\n                    8.*5.\n                 )*col;\n         }\n         g+=e=length(p.yzzz)/s;\n    }\n}\n\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lcKBW1","date":"1734020968","viewed":90,"name":"color moving","username":"nayk","description":"fractal 62 and  https://www.shadertoy.com/view/lfyBzw","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["color","rotate"],"hasliked":0,"parentid":"","parentname":""}}