{"ver":"0.1","info":{"id":"4dtfW8","date":"1524904653","viewed":369,"name":"helix 1b","username":"FabriceNeyret2","description":".","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","sdf","spiral","helix","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/XsdBW8\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime, l,d;\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),    // ray direction\n          p = 30./q;                          // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 )\n        q = p,\n        q.xz *= R, q.yz *= R,                 // rotation\n        l = length(q.xy), d = atan(q.y,q.x) - q.z,\n        t = max(abs(l-3.5)-.5, abs(sin(d)) - .02 ), // double helix\n        p += t*D;                             // step forward = dist to obj\n    if (cos(d)<0.) O.gb *= .8; else O.rg *= .8;\n}\n","name":"Image","description":"","type":"image"}]}