{"ver":"0.1","info":{"id":"Dtf3RH","date":"1671251681","viewed":195,"name":"Dithered shading","username":"Rutvik_Tak","description":"Was playing around with my another dithering shader and ended up with this nice little shader which kinda gives a bold/dark shade to image","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["shading","dithering"],"hasliked":0,"parentid":"csfXDn","parentname":"GMTK Elden Ring Cards Inspired"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: Rutvik Tak\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv=fragCoord/iResolution.xy;\n    \n    // Output to screen\n   // uv+=dot(uv.x,uv.x);\n    \n    vec4 mycolor=vec4(uv.xyx,1.);\n        \n    vec2 res=iResolution.xy/3.;\n    vec2 pos=floor(uv*res)/res;\n    if(max(abs(pos.x-.5),abs(pos.y-.5))>.5){\n        fragColor=vec4(0.);\n    }\n    \n    //vec4 color = texture( iChannel0, uv.xy );\n    vec4 imagePixel=texture(iChannel0,uv.xy);\n    float ditheredR = sin(mycolor.x*1.)*1.;\n    float ditheredG = cos(mycolor.y*1.)*1.;\n    vec2 ditheredRG = vec2(ditheredR,ditheredG);\n    vec2 factorValue = step(1.,fract(ditheredRG));\n    vec4 bitRateColor = mix(vec4(ditheredRG * factorValue, 1., 1.), imagePixel, factorValue.x * factorValue.y);\n \n    vec4 imagetopixelcolor=vec4(bitRateColor.xy,imagePixel.x,imagePixel.x);\n    \n    float grayScaleValue=(imagetopixelcolor.x+imagetopixelcolor.y+imagetopixelcolor.z)/3.;\n    vec2 pixelColor = step(grayScaleValue+0.5,imagePixel.xy);\n\n    fragColor= vec4(pixelColor,imagePixel.b,1.);\n\n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}