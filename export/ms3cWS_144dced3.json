{"ver":"0.1","info":{"id":"ms3cWS","date":"1695396326","viewed":28,"name":"Phase Door ","username":"hydrolox","description":"A door","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["door"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat Band(float t, float start, float end, float blur) {\n  float step1 = smoothstep(start-blur, start+blur, t);\n  float step2= 1.-smoothstep(end-blur, end+blur, t);\n  \n  return step1*step2;\n}\n\nfloat Rect(vec2 uv, float left, float right, float bott, float top, float blur) {\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bott, top, blur);\n    \n    return band1*band2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 pallete = pal( uv.x, vec3(0.9,0.5,0.5),vec3(0.0,0.9,0.5),vec3(1.0,0.7,0.4),vec3(0.0,0.15,0.20)  );\n    \n\n    float x =uv.x;\n    float y = uv.y;\n    \n    x+=.5*pow(y, 2.);\n    y+=.002*x;\n  \n     float mask = Rect(vec2(x, y), -.2, .2, -.3,.3,.001+clamp(sin(0.8*iTime), 0., 1.))*sin(100.*cos(5.*y)+3.*iTime);\n\n    vec3 col = vec3(sin(iTime+3.), cos(iTime), 1.)*mask;\n    col = pallete * mask;\n    // Output to screen\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}