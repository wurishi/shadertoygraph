{"ver":"0.1","info":{"id":"tdXSWM","date":"1551377165","viewed":99,"name":"Blending Matrices","username":"ptrgags","description":"Out of curiosity, I decided to try interpolating matrices just to see what sort of non-linear transformation I get.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["interpolation","matrices"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\n\nmat2 rotate(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat2(c, s, -s, c);\n}\n\nmat2 scale(float sx, float sy) {\n    return mat2(sx, 0, 0, sy);\n}\n\n/**\n * I guess glsl doesn't have mix(mat2, mat2, float)?\n */\nmat2 mix_mat(mat2 a, mat2 b, float t) {\n    return (1.0 - t) * a + t * b;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    \n    // Four arbitrary transformations\n    mat2 bottom_left = rotate(-PI / 6.0 - iTime);\n    mat2 top_left = scale(0.5, 0.5);\n    mat2 top_right = scale(2.0, 5.0);\n    mat2 bottom_right = mat2(1.0, 1.0, -1.0, 2.0);\n    \n    mat2 blended_left = mix_mat(bottom_left, top_left, uv.y);\n    mat2 blended_right = mix_mat(bottom_right, top_right, uv.y);\n    mat2 blended = mix_mat(blended_left, blended_right, uv.x);\n    \n    \n    vec2 xformed = blended * uv;\n    \n\n    // Output to screen\n    fragColor = texture(iChannel0, xformed);\n}","name":"Image","description":"","type":"image"}]}