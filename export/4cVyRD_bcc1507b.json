{"ver":"0.1","info":{"id":"4cVyRD","date":"1731567088","viewed":66,"name":"baker vortex kinda","username":"tomviolin","description":"just sorta really","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["four","doctor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ras = 1.0;//pow(sin((fragCoord.y)*3.1415926535*4.0/3.0),2.);\n    // Output to screen\n    fragColor = ras*2.0*texture(iChannel1,uv);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = texture(iChannel0,uv.xy).bbba*vec4(0.24,0.25,0.36,1.)/0.36;\n    col = pow(col,vec4(0.6,0.6,0.5,1))*0.8;\n    //fragColor = pow(col,vec4(3.));\n    fragColor=col;\n    return;\n    //floarrral = mod(uv.x * 99998. + uv.y*43543.,1.01}\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // it is .yy here only, so vortex is round.\n    vec2 uv = fragCoord/iResolution.yy;\n    \n    // center of coordinate system\n    vec2 ctr = vec2(0.5*iResolution.x/iResolution.y,0.5);\n    // distance from center\n    float rc = length(uv-ctr);\n    // if we are looking down a tunnel, rc actually\n    // represents the angle from looking down the\n    // center axis:\n    //\n    // --------tunnel wall---------------------------\n    //\n    // <)- - - - - - - - straight down center\n    //\n    // --------tunnel wall---------------------------\n    //\n    // <)- - -         at an angle Θ\n    //         - - - \n    // ---------------*------------------------------\n    //\n    // So we have the following right triangle:\n    //\n    //\n    //   | - - -\n    // y |     Θ - - -    \n    //   +--------------*\n    //           x\n    //\n    // where y = x * sin(Θ)\n    // or    x = y / sin(Θ)\n    //\n    float xc = uv.x - ctr.x;\n    float yc = uv.y - ctr.y;\n    float x = 1.0 / sin(rc);\n    \n    float rota = atan(yc,xc);\n\n    // texture is wrapped around inside of tunnel\n    float brite = .20;//-pow(x,-0.35);\n    brite = 1.0/(1.0+pow(rc*8.,6.));\n    vec2 txp = vec2(\n        mod(0.5+rota/2.0/3.1415926535-0.003*sin(rc*29.)*x/9.,1.0),\n        mod(x/60.+iTime/9.,1.));\n    vec3 col=mix(pow(texture(\n        iChannel0, \n        txp).rgb,vec3(1.9,1.9,1.9)),vec3(0.3,0.3,0.4)*1.8,brite);\n    float circ = pow(sin(x*161.),2.)*rc;//+(1.-rc);\n    circ = mix(1.0,circ,rc*rc);\n    // Output to screen\n    fragColor = vec4(col*circ,0.0);\n}\n","name":"Buffer B","description":"","type":"buffer"}]}