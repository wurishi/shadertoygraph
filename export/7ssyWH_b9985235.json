{"ver":"0.1","info":{"id":"7ssyWH","date":"1642052341","viewed":81,"name":"Yin or Yang?","username":"PGRacer","description":"Inverting Yin and Yang using mirroring/rotation.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["yang","yin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\nmat2x2 Rotate2(float angle)\n{\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2x2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aaRatio = 3.0 / iResolution.y;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 color = texture(iChannel0, uv).rgb;\n    float sTime = sin(iTime);\n    \n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    color = mix(vec3(0.0), color, smoothstep(0.77, 0.77 + aaRatio, length(uv))); // Draw large outline\n    color = mix(vec3(ceil(uv.x)), color, smoothstep(0.75, 0.75 + aaRatio, length(uv))); // Draw large half circles\n    \n    uv.x /= sTime;\n    color = mix(vec3(sign(sTime * uv.y)), color, smoothstep(0.375, 0.375 + aaRatio, length(vec2(uv.x, abs(uv.y)) - vec2(0.0, 0.3755)))); // Draw medium half circles (inverting)\n    \n    uv.x *= sTime;\n    float angle = sin(-iTime) * 0.5 + 0.5;\n    mat2x2 rot = Rotate2(angle * PI); // we need the line to mirror the small circles across\n    vec2 uvRot = inverse(rot) * uv;\n    float s = -sign(uvRot.y); // capture color value\n    uvRot = abs(uvRot); // mirror\n    uvRot = rot * uvRot; // return\n    color = mix(vec3(s), color, smoothstep(0.125, 0.125 + aaRatio, length(uvRot - rot * vec2(0.0, 0.375)))); // Draw small circles (revolving)\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}