{"ver":"0.1","info":{"id":"XcSXDt","date":"1706935798","viewed":87,"name":"KaleidoscopeEffect","username":"hecker","description":"Generated by bardai","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["effect","kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec2 rot(vec2 uv, float a) {\n  return vec2(uv.x * cos(a) - uv.y * sin(a), uv.y * cos(a) + uv.x * sin(a));\n}\n\nfloat mod2(float a, float b) {\n  float result = mod(a, b);\n  if (result < 0.0) {\n    result += b;\n  }\n  return result;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  uv = uv * 2.0 - 1.0;\n\n  // Mirror effect\n  //uv.x = mod2(uv.x, 2.0);\n  //uv.y = mod2(uv.y, 2.0);\n\n  // Rotate based on time\n  uv = rot(uv, iTime * 0.1);\n\n  // Apply kaleidoscope effect\n  float angle = fract(atan(uv.y, uv.x) / PI * 6.0);\n  vec2 newUV = rot(uv, angle);\n\n  // Sample texture (replace with your own texture)\n  vec4 color = texture(iChannel0, newUV);\n\n  // Add some effects (optional)\n  color.r += sin(iTime * 0.5) * 0.2;\n  color.g += cos(iTime * 0.7) * 0.2;\n  color.b += sin(iTime * 0.9) * 0.2;\n\n  fragColor = color;\n}\n","name":"Image","description":"","type":"image"}]}