{"ver":"0.1","info":{"id":"WlGSD3","date":"1676011978","viewed":131,"name":"m_tartun_3","username":"mirumoreem","description":"temp","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["temp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(float x){\n    return fract(sin(x)*1e3);\n}\n\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n\nfloat noise(float st) {\n    float i = floor(st);\n    float f = fract(st);\n\n    float u = f*f*(3.0-2.0*f);\n\n    float n = mix(random(i), random(i +1.0), u );\n    \n    return n ;\n}\n\n\nfloat noise2(vec2 st) {\n    vec2 i = floor(st+iTime*0.5);\n    vec2 f = fract(st+iTime*0.5);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    float n = mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n    return n *0.1 +0.5 ;\n}\n\n\nvec3 box(vec2 st, float s){\n    st *= s;\n    vec2 uvf = fract(st);\n    vec2 uvi = floor(st);\n    \n    float l = step(0.1,uvf.x);\n    float l2 = step(0.1,uvf.y);\n    float l3 = step(0.1,1.0-uvf.x);\n    float l4 = step(0.1,1.0-uvf.y);\n    \n    float pct = l*l2*l4;\n    float pct1 = l2*l3*l4;\n    float pct2 =  l*l2*l3*l4;\n    return vec3(pct, pct1, pct2);\n}\n\n\nvec3 index(vec2 st, float s){\n    st *= s;\n    vec2 uvf = fract(st);\n    vec2 uvi = floor(st);\n    float index = uvi.x + (uvi.y * s) ;\n    vec2 uv = vec2(index) ;\n    return  vec3(uvi.x*1.0, uvi.y*1.0,index) ;\n}\n\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n\nvec2 line(vec2 uv, float a, float offset, float totalline){\n    float a1 = 1.0- step (a, mod(uv.y+offset, totalline));\n    float a2 = 1.0- step (a, mod(uv.x+offset, totalline));\n    return vec2(a1,a2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv *= 0.8;\n   \n\n    //uv += noise2(uv);\n    uv.y += sin( ((uv*rotate2d(0.5)).x-iTime*0.5)*3.14*1.5) *0.03 ;\n    uv *=rotate2d(0.3);\n    \n    vec3 color = vec3(0.1);\n    \n    \n\n    //tile;\n    float s = 64.0;\n    vec3 index = index(uv,s);\n    vec2 uv2 = index.xy;\n    \n    \n    \n   \n    vec3 colorD = vec3(230,0,18)/255.0;\n    vec3 colorE = vec3(25,223,215)/255.0;\n    vec3 colorB = vec3(25,223,192)/255.0;\n    vec3 colorC = vec3(223,223,120)/255.0;\n    vec3 g1 = vec3(0.1,0.1,0.1);\n    vec3 g2 = vec3(0.4,0.4,0.4);\n    vec3 g3 = vec3(0.9,0.9,0.9);\n    vec3 g4 = vec3(0.8,0.8,0.8);\n    vec3 b = vec3(0.518,0.756,0.930);\n    b = vec3(0.18,0.18,0.2730);\n    \n    float bace = step(1.0, mod(index.z, 3.0));\n    vec3 bgc = vec3(bace) ;\n    \n    \n    \n    \n    \n    float total = 64.;\n    \n    vec2 l1 = line(index.xy, 2.0, 8.0, total);\n    vec3 border = g4* l1.x*bace;\n    vec3 sto = g4*l1.y *(1.0-bace);\n    \n    vec2 l2 = line(index.xy, 2.0, 16.0, total);\n    border += colorC*l2.x*bace;\n    sto += colorC* l2.y *(1.0-bace);\n    \n     vec2 l3 = line(index.xy, 2.0, 24.0, total);\n    border += g4*l3.x*bace;\n    sto += g4* l3.y *(1.0-bace);\n    \n     vec2 l4 = line(index.xy, 32.0, 0.0, total);\n    border += colorD*l4.x*bace;\n    sto += colorD* l4.y *(1.0-bace);\n    \n    vec2 l5 = line(index.xy, 32.0, 32.0, total);\n    border += g1*l5.x*bace;\n    sto += g1* l5.y *(1.0-bace);\n    \n    vec2 l6 = line(index.xy, 2.0, 50.0, total);\n    border -= g3*l6.x*bace;\n    sto -= g3* l6.y *(1.0-bace);\n    \n    \n    \n    float pat = box(uv,s).x *step(2.0, mod(index.z-2.0, 3.0));\n    pat += box(uv,s).y *step(2.0, mod(index.z-0.0, 3.0));\n    pat += box(uv,s).z *step(2.0, mod(index.z-1.0, 3.0));\n    \n    \n    color = border+sto;\n    color *= vec3(pat);\n    \n    \n    \n    \n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}