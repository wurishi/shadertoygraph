{"ver":"0.1","info":{"id":"3ddyDj","date":"1601765140","viewed":115,"name":"blobsblobsblobs","username":"shortwavedave","description":"blobsblobsblobs","likes":1,"published":1,"flags":64,"usePreview":0,"tags":["blobs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4t23DV","filepath":"https://soundcloud.com/dj-el-topo-1/papa-dont-take-no-mess-som-livre-house-band?in=alexey-pisaev/sets/8888888888888888888888888888-1","previewfilepath":"https://soundcloud.com/dj-el-topo-1/papa-dont-take-no-mess-som-livre-house-band?in=alexey-pisaev/sets/8888888888888888888888888888-1","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise1d(float n){\n    return fract(cos(n*89.42)*343.42);\n}\n\nfloat f(vec2 uv, int n, vec3 bmt) {\n    float v = pow(bmt.x+bmt.z,7.);\n    while (n > 0) {\n        n--;\n        uv.x = cos(uv.x*4.+cos(iTime*.1)) - sin(uv.y*4.+cos(iTime*.12));\n        uv.y = cos(uv.x*3.+cos(iTime*.15)) + sin(uv.y*3.+cos(iTime*.14));\n    }\n    return pow(uv.x-uv.y, 2.);\n}\n\nvec3 get_bmt() {\n\tconst int sz = 512;\n    float stop1 = 0.2;// * .2*sin(iTime*1.);\n    float stop2 = 0.5;// * .2*cos(iTime*6.);\n    vec3 bmt;\n    bmt = vec3(0.0,0.0,0.0);\n    for (int i=0; i < sz; i++) {\n        float tex = texelFetch( iChannel0, ivec2(i,0), 0).x;\n        if (float(i) <= float(sz)*stop1) {\n            bmt.x += tex;\n        } else if (float(i) > float(sz)*stop1 && float(i) <= float(sz)*stop2) {\n            bmt.y += tex;\n        } else {\n            bmt.z += tex;\n        }\n    }\n    return bmt;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    int n = 2;\n\t\n    vec3 bmt = get_bmt();\n    \n    float m = (bmt.x + bmt.y + bmt.z);\n    float c = f(uv, n, bmt/m);//*(3.+ cos(iTime));\n    float cr = pow(c*bmt.x / m  ,1.);\n    float cg = pow(c*bmt.y / m ,1.);\n    float cb = pow(c*bmt.z / m ,1.);\n   \n    // Output to screen\n    fragColor = vec4(vec3(cr,cg,cb),1.0);\n}\n","name":"Image","description":"","type":"image"}]}