{"ver":"0.1","info":{"id":"lXXBzj","date":"1728686879","viewed":23,"name":"Symmetry - Shadetober24 #11","username":"franke333","description":"Day 11 of Shadetober","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shadetober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 mirroredUV(vec2 uv, int segments){\n     float angle = atan(-uv.y,uv.x);\n     float segmentAngle = 6.283 / float(segments);\n     angle = angle - floor(angle/segmentAngle)*segmentAngle;\n     if(mod(floor(atan(-uv.y,uv.x)/segmentAngle),2.) == 0.)\n         angle = segmentAngle - angle;\n     return vec2(cos(angle),sin(angle))*length(uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    //-----------------------\n    // Try different values like 16 or 24\n    //---------------------- V   V   V\n    int mirrors = 12; //  <---- here (compile by pressing alt+Enter or the triangle in left bottom corner)\n\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = uv.x *iResolution.x/iResolution.y - (iResolution.x - iResolution.y)/(2.*iResolution.y);\n    uv = uv - 0.5;\n\n    uv = mirroredUV(uv,mirrors);\n\n    float angle = atan(-uv.y,uv.x);\n    angle = mod(angle+0.33*iTime,6.28/float(mirrors));\n    angle = smoothstep(0.,2.,angle+cos(iTime*0.77)*0.5+.75);\n    angle = pow(angle,.5);\n    \n    float dist = length(uv) + sin(iTime*1.1)*0.5;\n    \n    float angleSide = clamp(sign(angle-.666),0.,1.);\n    vec3 col = angleSide * vec3(0.33,0.5,0.6) + (1.-angleSide) * vec3(0.77,0.2,0.3);\n    col = sign(angle-pow(dist+0.3,0.5))*col*sign(angle-dist);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}