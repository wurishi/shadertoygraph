{"ver":"0.1","info":{"id":"dd2fzG","date":"1689863047","viewed":53,"name":"wave attempt 2","username":"mishazawa","description":"based on this https://www.thanassis.space/wavePhysics.html#","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["ripples","wave","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define DEBUG\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 data = texture(iChannel0, uv);\n    \n    \n    uv.y -= .5;\n    uv *= 1000.;\n    \n    float Y = data.r;\n    vec3 col = vec3(plot(uv, Y));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n    #ifdef DEBUG\n        fragColor = data;\n    #endif\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define DAMPING .99\n#define STEP .01\n#define AMP 5.\nfloat plot(vec2 st, float y){\n  return smoothstep( 8., 0., y - st.y);\n}\n\nfloat cubicPulse( float c, float w, float x ){\n    x = abs(x - c);\n    if( x>w ) return 0.0;\n    x /= w;\n    return 1. - x*x*(3.0-2.0*x);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nvec2 onClick() {\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    if (iMouse.z > 0.) return mouse.xy;\n  \treturn vec2(.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 data = texture(iChannel0, uv);\n    vec4 datar = texture(iChannel0, uv + STEP);\n    vec4 datal = texture(iChannel0, uv - STEP);\n\n    float pos = data.x;\n    \n    vec2 click = onClick();\n    \n    if (click.x > 0.) {\n        data.x += cubicPulse(clamp(click.x, 0.1, 0.9), 0.1, uv.x) * (1. - click.y) * AMP;\n    \n    }\n    \n    pos = datal.x + datar.x - data.y;\n    \n    \n    fragColor = vec4(pos * DAMPING, data.x, 0., 1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}