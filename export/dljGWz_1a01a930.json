{"ver":"0.1","info":{"id":"dljGWz","date":"1673178489","viewed":332,"name":"chatGPT checker test","username":"BitsnBobs","description":"Asked chatGPT to generate a simple checker pattern","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["checker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y; // correct aspect ratio\n    int x = int( mod( uv.x * 4.0, 2.0 ) );\n    int y = int( mod( uv.y * 4.0, 2.0 ) );\n    if ( ( x + y ) % 2 == 0 )\n    {\n        fragColor = vec4( 1.0, 1.0, 1.0, 1.0 ); // white\n    }\n    else\n    {\n        fragColor = vec4( 0.0, 0.0, 0.0, 1.0 ); // black\n    }\n}\n\n\n\n/*\nwrite a shadertoy checker shader\nSure! Here is a basic checker shader that alternates between two colors in a checkerboard pattern:\n\nCopy code\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y; // correct aspect ratio\n    int x = int( mod( uv.x * 4.0, 2.0 ) );\n    int y = int( mod( uv.y * 4.0, 2.0 ) );\n    if ( ( x + y ) % 2 == 0 )\n    {\n        fragColor = vec4( 1.0, 1.0, 1.0, 1.0 ); // white\n    }\n    else\n    {\n        fragColor = vec4( 0.0, 0.0, 0.0, 1.0 ); // black\n    }\n}\nThis shader uses the mod function to determine the x and y indices of the current fragment in the checkerboard pattern, and then uses these indices to determine the color of the fragment. The checkerboard has 4x4 squares, so the uv coordinate is multiplied by 4 to ensure that the pattern repeats correctly.\n\nI hope this helps! Let me know if you have any questions or need further assistance.\n*/","name":"Image","description":"","type":"image"}]}