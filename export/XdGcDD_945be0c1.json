{"ver":"0.1","info":{"id":"XdGcDD","date":"1521972991","viewed":128,"name":"Swirls Julia","username":"rodolphito","description":"A swirly fractal that is very good.\nTry the mouse.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","swirls","exponent","complexpower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 2\n#define IT 100\nvec4 pi = vec4(0,2,4,8)*atan(1.0);\n\nfloat carg(vec2 z){return atan(z.y,z.x);}\nvec2 cmulj(vec2 z){return vec2(-z.y,z.x);}\nvec2 cmul (vec2 a,vec2 b){return mat2(a,-a.y,a.x)*b;}\nvec2 csqr (vec2 z){return vec2(z.x*z.x-z.y*z.y,2.0*z.y*z.x);}\nvec2 cinv (vec2 z){return vec2(z.x,-z.y)/dot(z,z);}\nvec2 cdiv (vec2 a,vec2 b){return vec2(dot(a,b),dot(cmulj(a),b))/dot(b,b);}\nvec2 cexp (vec2 z){return exp( z.x)*sin(z.y+pi.yx);}\nvec2 cexpj(vec2 z){return exp(-z.y)*sin(z.x+pi.yx);}\nvec2 cpow (float a,vec2 z){return pow(a, z.x)*sin(z.y+pi.yx);}\nvec2 cpowj(float a,vec2 z){return pow(a,-z.y)*sin(z.x+pi.yx);}\nvec2 cpow (vec2 z,float n){return pow(dot(z,z),n*0.5)*sin(carg(z)*n+pi.yx);}\nvec2 cpow (vec2 a,vec2 b){return cmul(cpow(dot(a,a),0.5*b),cexp(carg(a)*b));}\n\nvec3 hsv2rgb(in vec3 c)\n{\n\treturn c.z*mix(vec3(1),0.5+0.5*sin(c.x+pi.xzw/3.0),c.y);\n}\n\nvec3 getCol(vec3 n)\n{\n    if (n.z==float(IT))return vec3(0);\n    float arg = pi.w * n.z / float(IT);\n    vec3 col = hsv2rgb(vec3(arg*2.0,1,1));\n    return col*col;\n}\n\nvec3 julia(vec2 xy, int iterations)\n{\n    vec2 z = xy;\n    vec2 c = 2.0 * iMouse.xy / iResolution.xy - 1.0;\n    for(int n = 0; n < iterations; n++)\n    {\n        z = cpow(vec2(-0.00740,0.00666),z);\n        z += c * 0.01;\n        if(dot(z, z) > 16.0) return vec3(z, float(n));\n    }\n    return vec3(z, float(iterations));\n}\n\nvec3 render(vec2 pos, float time)\n{\n    vec2 uv = pos / iResolution.xy;\n    vec2 xy = 2.0 * uv - 1.0;\n    xy.x *= iResolution.x / iResolution.y;\n    vec3 col = getCol(julia(xy*1.17-vec2(-1.43,-0.0), IT));\n    //col.x = max(texture(iChannel0, uv).x, col.x);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.0);\n#if AA>1\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ )\n    {\n        vec2 px = fragCoord + vec2(m,n)/float(AA);\n    \tcol += render( px, iTime );\n    }\n    col /= float(AA*AA);\n#else\n    col = render( fragCoord, iTime );\n#endif\n\tfragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}