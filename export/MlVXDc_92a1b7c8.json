{"ver":"0.1","info":{"id":"MlVXDc","date":"1486321697","viewed":1252,"name":"Shader for Game Maker Studio","username":"Glim888","description":"A shockwave-shader for Game Maker Studio\n\nMy AppÂ´s:\nBluetooth Multiplayer: play.google.com/store/apps/details?id=com.gaming_apps.bluetooth_game_duel\nWater Physics Simulation: play.google.com/store/apps/details?id=com.gaming_apps.water_physics_simulation\n\n","likes":6,"published":1,"flags":0,"usePreview":1,"tags":["android","schockwave","gamemakerstudio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n *  Game Maker Studio Shaders:\n *\t\t\t\t -->  Shockwave Shader for Game Maker Studio by Glim888/Mool\n*/\n\n//CONST\nconst float SPEED \t\t\t\t\t= 1500.0;\nconst float MAX_TIME \t\t\t\t= 3.0;\nconst float WAVE_WIDTH\t\t\t\t= 10.0;\nconst float DISTORTION\t\t\t\t= 0.1;\nconst int   SHOCKWAVES\t\t\t\t= 4;\n\n//Center of Shockwaves\n//center0 = mouse.xy\nconst vec2  center1\t\t\t\t\t= vec2(0.2,0.2);\nconst vec2  center2\t\t\t\t\t= vec2(25.5,444.5);\nconst vec2  center3\t\t\t\t\t= vec2(555.8,770.8);\n\nvoid Shockwave(in vec2 fragCoord, out vec2 uv)\n{\n    for(int _i = 0; _i < SHOCKWAVES; _i++)\n    {\n        float _dist = 0.0;\n        if(_i == 0)\n        {\n            //Distance between mouse.xy and current pixel\n            _dist = distance(iMouse.xy, fragCoord.xy);   \n        }else if( _i == 1)            \n        {\n        \t//Distance between mouse.xy and current pixel\n            _dist = distance(center1.xy, fragCoord.xy);       \n        }else if( _i == 2)            \n        {\n            //Distance between mouse.xy and current pixel\n            _dist = distance(center2.xy, fragCoord.xy);   \n        }else if( _i == 3)            \n        {\n            //Distance between mouse.xy and current pixel\n            _dist = distance(center3.xy, fragCoord.xy);   \n        }else{\n            _dist = 100.0;\n        }\n        \n        \n        //currrent radius of the wave\n        float _currRad = mod(iTime, MAX_TIME) * SPEED;\n\n        //If the pixel is inside the Shockwave\n        if(_dist > _currRad - WAVE_WIDTH &&\n           _dist < _currRad + WAVE_WIDTH)\n        {\n            //The distortion (Verzerrung)\n\n            //Between (0 and 1)\n            float _diff = abs((_dist - _currRad) / WAVE_WIDTH);\n            //manipulate the coords\n            uv = vec2(uv.x + _diff * DISTORTION, uv.y + _diff * DISTORTION);\n        }\n    }\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Screen Coords between 0 and 1\n    vec2 uv = fragCoord.xy / iResolution.xy;\n      \n    Shockwave(fragCoord.xy, uv);\n\t\n    //Pixel Color Output\n\tfragColor = texture(iChannel0, uv);\n}\n       ","name":"Image","description":"","type":"image"}]}