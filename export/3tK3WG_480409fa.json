{"ver":"0.1","info":{"id":"3tK3WG","date":"1580105824","viewed":209,"name":"Universe within, Mon Ami","username":"sbrown2","description":"copy of the universe within by bigwings with one of my favorite songs attached.\nedit: attached default music ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","cells","levels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPLIT == 1\n/*\nIf it does not load when the page opens, click play\non the soundcloud link at the bottom\n*/\n\nvec2 tile(inout vec2 uv, float tile_factor,out vec2 tile_id){\n\ttile_id = floor(uv*tile_factor);\n    uv*=tile_factor;\n    return fract(uv);\n}\n\nfloat distline(vec2 p, vec2 a, vec2 b){\n\tvec2 pa = p-a;\n    vec2 ba = b-a;\n    \n    float h = clamp(dot(pa,ba)/dot(ba,ba),0.,1.);\n    return length(pa-ba*h);\n    \n}\n\nfloat line(vec2 p, vec2 a, vec2 b){\n\tfloat d = distline(p,a,b);\n    float m = smoothstep(.03,.01,d);\n    \n    //fade line when far by multiplying by some number that\n    //increases as length decreases\n    float d2 = length(b-a);\n    m*=smoothstep(1.4,.8,d2)+smoothstep(.05,.03,abs(d2-1.));\n    return m;\n}\n\nfloat N21(vec2 p){\n\n    p = fract(p*vec2(233.34,851.73));\n    p+= dot(p,p+23.45);\n    return fract(p.x*p.y);\n}\n\nvec2 N22(vec2 p){\n\tfloat n = N21(p);\n    return vec2(n,N21(p+n));\n}\n\nvec2 getPos(vec2 tile_id,vec2 offset){\n    vec2 noise = N22(tile_id+offset);\n    float  x = sin(iTime*noise.x);\n    float  y = cos(iTime*noise.y);\n    \n    return offset+vec2(x,y)*.35;\n\n}\n\nfloat Layer(vec2 uv){\n\n    float m = 0.;\n    /* tile screen */\n    float tile_factor = 5.;\n    vec2 tile_id;\n    vec2 tile_uv = tile(uv,tile_factor,tile_id);\n    tile_uv-=.5;\n    \n    /*add grid\n    if(tile_uv.x > .48 || tile_uv.x < -.48||\n       tile_uv.y > .48 || tile_uv.x < -.48){\n    col.r+=1.;\n    }\n\t*/\n\n    /*loop through neighbor cells and add to arra*/\n    vec2 neighbors[9];\n    int i = 0;\n    for(int y = -1; y <=1; y++){\n        for(int x = -1; x<=1;x++){\n        \tneighbors[i++] = getPos(tile_id,vec2(x,y));\n           \n        }\n    }\n        float fft = texelFetch(iChannel0,ivec2(.7,.0), 0).x;\n\n    \n    float t = iTime*.02;\n    for(int x = 0; x<9; x++){\n       m+= line(tile_uv,neighbors[4],neighbors[x]);\n       vec2 j = (neighbors[x]-tile_uv)*20.*(.5*fft);\n       float sparkle = 1./dot(j,j);\n        m+= sparkle*(.5*sin(t+fract(neighbors[x].y)*20.)+.5);\n    }\n       m+= line(tile_uv,neighbors[1],neighbors[3]);\n       m+= line(tile_uv,neighbors[1],neighbors[5]);\n       m+= line(tile_uv,neighbors[7],neighbors[3]);\n       m+= line(tile_uv,neighbors[7],neighbors[5]);\n\t   return m;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv-=.5;\n    uv.x*= iResolution.x/iResolution.y;\n    vec3 col = vec3(0.);\n    vec3 gold = vec3(.9,.8,.2);\n    vec3 soft = vec3(1.,.6,.7);\n    vec3 blue = vec3(.45,.56,.8);\n    vec3 green = vec3(.7,1.,.7);\n    float t = iTime*.1;\n    float fft = texelFetch(iChannel0,ivec2(.7,.0), 0).x;\n    \n    /*create a layer of the effect*/\n    float m = 0.;\n    float s = sin(t);\n    float c = cos(t);\n    mat2 rot = mat2(c,-s,s,c);\n    uv*=rot;\n    for(float i = 0.; i <1.; i+=1./4.){\n        float z = fract(i+t)+.1;\n        float size = mix(4.,.5,z);\n        float fade = smoothstep(.1,.9,z)*smoothstep(1.1,.9,z);\n    \tm+=Layer(uv*size+i*20.)*fade;\n    }\n\t\n    \n    col = vec3(m);\n    col*=mix(gold,soft,pow(fft,.8));\n\t\n    /* mostly implemented to see which colors looked best\n    col*=mix(gold,blue,fract(t))+step(uv.x,0.);\n\tcol*=mix(soft,blue,fft)+step(uv.y,0.);\n    col*=mix(blue,green,fract(t))+step(uv.y,0.);\n    */\n    \n\t// Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}