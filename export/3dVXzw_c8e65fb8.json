{"ver":"0.1","info":{"id":"3dVXzw","date":"1582819218","viewed":309,"name":"Multi-Filter Effects","username":"lewdoo","description":"Use the mouse to scroll between 3 different video filters - pixel - glitch - old-style\n\nHaven't done anything to try and optimise, just done for visuals","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["filters"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Random(vec2 uv){\n\tfloat r = 0.;\n    r = fract(sin(dot(uv, vec2(uv.x * 21.5 + 10.24, uv.y * 1.83 + 1.4235) * 72.204) * 1.532) * 412.241);\n    return r;\n}\n\nvec3 Pixelate(vec2 uv){\n    float pixCount = 5.;\n    vec2 pixUV = pixCount / iResolution.xy;\n    uv = vec2(pixUV*(floor(uv/pixUV) + 0.5));\n    \n    return texture( iChannel0, uv, -10.0 ).rgb;\n}\n\nvec3 OldStyle(vec2 uv){\n    vec2 st = uv;\n    //adding the video and greyscale\n    vec3 vid =  texture(iChannel0, uv, -10.).rgb;\n    vid = vec3(vid.r + vid.g + vid.b) * 0.3333;\n    \n    //vertical line\n    uv.x += fract(sin(iTime) * 2.42);\n    float vl = clamp(abs(uv.x - Random(vec2(uv.x, 0.5))) * 200., 0., 1.);\n    vid *= vl;\n    \n    //grain\n    uv.y += fract(iTime);\n    vid = vid * 0.8 + vec3(Random(uv)) * 0.2;\n    \n    //border\n    float borderX = clamp(pow(st.x, 20.), 0., 1.) +  clamp(pow(1. - st.x, 20.), 0., 1.);;\n    vid -= borderX;\n    \n    float borderY = clamp(pow(st.y, 20.), 0., 1.) + clamp(pow(1. - st.y, 20.), 0., 1.);\n\tvid -= borderY;\n    \n    return vid;\n}\n\nvec3 Glitch(vec2 uv){\n    //getting random offsets\n    float rand = Random(floor((uv + fract(iTime * 0.01)) * 12.)) - 0.5;\n    \n    //offset flash\n\tfloat offset = floor(fract(iTime * .5) * 0.6 + fract(iTime * 0.9) * 0.4 + 0.4);\n    \n    //the glisth effect is a mix of the offset and the flash\n    float glitch = offset * rand;\n    \n    \n    //creating regualr video\n    vec3 vid =  texture(iChannel0, uv, -10.).rgb;\n    \n    //overlaying the glitch footage\n    vec3 rVid = texture(iChannel0, uv + vec2(0.04, 0.) * glitch, -10.).rgb;\n    rVid.r = pow(rVid.r, 2.);\n    rVid.g = pow(rVid.g, 2.);\n    rVid.b = pow(rVid.b, 2.);\n    //rVid.b = (rVid.b - vid.b) * glitch;\n    rVid.r = (rVid.r - vid.r) * glitch;\n    \n    //vid = vec3(rand);\n    vid *= rVid;\n    \n    return vid;\n}\n\nvec3 FishEye(vec2 uv, vec2 st){\n    //curving the uvs\n    float str = 0.5;\n    uv.y *= sin(uv.x * 3.14) * (1. - str) + str;\n    \n    //adding video\n    vec3 vid =  texture(iChannel0, uv, -10.).rgb;\n    \n    //adding yellowish tint like 90's skater videos\n    vid.rg *= vec2(1.5, 1.3);\n   \t\n    //vid = vec3(abs(mod(uv.x - 0.5, uv.y - 0.5)));\n    vid *= vec3(1. - distance(st, vec2(0.)) * 1.4);\n    \n    return vid;\n}\n\nvec3 Swipe(vec2 uv){\n    float sqrCnt = 15.;\n    vec2 ipos = floor(uv * sqrCnt);\n \tvec3 col = vec3((1. -(ipos.x / sqrCnt)) * (ipos.y / sqrCnt));\n    col = col - 1. + (iMouse.x * 2.)/iResolution.x - 0.97;\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 st = (fragCoord - iResolution.xy * 0.5) / iResolution.y;\n\n    //standard\n    vec3 col = vec3(0.);\n    vec3 vid =  texture(iChannel0, uv, -10.).rgb;\n    col = vid;\n    \n    \n    //swiping the filters\n    col = vec3(floor(0.99 + Swipe(uv)));\n    if(col.r > 0.){\n    \tcol.gb = vec2(0.);\n    }\n    else if(col.g == 0.){\n    \tcol.rb = vec2(0.);\n        col.g = 1.;\n    }\n    else if(col.b < 0.){\n    \tcol.b = 1.;\n        col.rg = vec2(0.);\n    }\n    col = Pixelate(uv) * col.r + Glitch(uv) * col.g + OldStyle(uv) * col.b;\n    \n    col = Pixelate(uv) * Glitch(uv) * OldStyle(uv);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}