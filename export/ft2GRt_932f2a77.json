{"ver":"0.1","info":{"id":"ft2GRt","date":"1624500601","viewed":82,"name":"Infinitely happy.","username":"splinterofchaos","description":"A smiley face fractal.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["smile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 LEFT = vec2(.32, .6);\nconst vec2 RIGHT = vec2(1.0 - LEFT.x, LEFT.y);\nconst float RADIUS = .15;\n\nvec2 left(vec2 v) {\n  return (v - (LEFT - RADIUS)) * (1.0 / (RADIUS * 2.0));\n}\n\nvec2 right(vec2 v) {\n  return (v - (RIGHT - RADIUS)) / (RADIUS * 2.0);\n}\n\nvec2 deeper(vec2 uv, vec2 new_center) {\n  return (uv - (new_center - RADIUS)) / (RADIUS * 2.0);\n}\n\n\nfloat circle(vec2 uv, vec2 position, float radius){\n\tfloat d = length(uv - position);\n\tfloat c = smoothstep(radius, radius-0.01, d); \n    return c;\n}\n\nfloat sdf_smile(vec2 uv, vec2 position, float offset, float radius, float radius_off) {\n    return clamp(\n    circle(uv, position, radius) - \n    circle(uv, vec2(position.x, position.y + offset), radius + radius_off),\n    0.0, 1.0);\n}\n\nfloat sdf_rim(vec2 uv, vec2 position, float radius_offset, float radius) {\n    return clamp(\n        circle(uv, position, radius) -\n        circle(uv, position, radius - radius_offset),\n        0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    uv.x *= aspect;\n    uv.x -= .45;\n    \n    vec2 zoom_point = vec2(.3842109, .642857);\n    float zoom_factor = tanh(min(iTime, 60.0) / 10.0);\n    \n    vec2 off = zoom_point - uv;\n    uv += off * zoom_factor;\n    \n    float depth = 0.0;\n    for (; depth < 100.0; ++depth) {\n      if (distance(LEFT, uv) < RADIUS) {\n        uv = left(uv);\n      } else if (distance(RIGHT, uv) < RADIUS) {\n        uv = right(uv);\n      } else {\n        break;\n      }\n    }\n    \n    float smile = sdf_smile(uv, vec2(.5, .4), .08, .3, .025);\n    float rim = sdf_rim(uv, vec2(.5, .5), .06, .51);\n    float outline = smile + rim;\n    \n    float inside = circle(uv, vec2(.5, .5), .45);\n    \n    depth -= zoom_factor;\n    vec4 depth_color = vec4(abs(sin(depth*4.0)), abs(cos(depth*5.0)), abs(sin(depth*2.0)), 1);\n    \n    float intensity = dot(vec2(1.0 - uv.x, uv.y), vec2(0.9, 1.0));\n    vec4 in_circle_color = depth_color * intensity / (depth + 1.0);\n    \n    fragColor = outline * vec4(1, 1, 1, 0) + inside * in_circle_color;\n}","name":"Image","description":"","type":"image"}]}