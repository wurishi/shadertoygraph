{"ver":"0.1","info":{"id":"3sScDd","date":"1587492812","viewed":150,"name":"Grid and particles","username":"Vermifuge","description":"Beginner stuff","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["gridparticles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 one = vec2(1., 0.);\n\nuniform int pointerCount;\nuniform vec3 pointers[10];\nuniform vec3 orientation;\n\nfloat hash(vec2 x) {\n\treturn fract(cos(\n\t\tdot(x, vec2(672.529,198.3862))\n\t\t)*9857.733);\n}\n\nfloat noise(vec2 x) {\n\tvec2 ix =floor(x);\n\tvec2 fx = fract(x);\n\tfx=fx*fx*(3.-2.*fx);\n\n\tfloat bl = hash(ix);\n\tfloat br = hash(ix+one.xy);\n\tfloat tl = hash(ix+one.yx);\n\tfloat tr = hash(ix+one.xx);\n\n\treturn mix(\n\t\tmix(bl, br, fx.x),\n\t\tmix(tl, tr, fx.x),\n\t\tfx.y);\n}\n\nfloat fbm(vec2 p) {\n\treturn (\n\t\t.5* noise(p)\n\t\t+ .25* noise(p*2.1)\n\t\t+ .175* noise(p*3.9)\n\t\t+ .0875* noise(p*8.2)\n\t);\n}\n\nvec2 pat(vec2 uv) {\n\treturn vec2(\n\t\tnoise(floor(uv) + iTime),\n\t\tnoise(floor(uv) + iTime + 3.53));\n}\n\nfloat dist(vec2 d, vec2 x) {\n\tfloat c = dot(d, x) / dot(d, d);\n\tif (sign(c) < 0.) {\n\t\treturn 1000.;\n\t} else {\n\t\treturn length(x - c*d);\n\t}\n}\n\nfloat particles(vec2 uv) {\n\tvec2 p = pat(uv);\n\tvec2 pr = pat(uv+one)+one;\n\tvec2 pl = pat(uv-one)-one;\n\tvec2 pu = pat(uv+one.yx)+one.yx;\n\tvec2 pb = pat(uv-one.yx)-one.yx;\n\tvec2 pbr = pat(uv+one.xx)+one.xx;\n\tvec2 pul = pat(uv-one.xx)-one.xx;\n\n\tvec2 dhere = fract(uv)-p;\n\tvec2 ppl = pl-p;\n\tvec2 ppr = pr-p;\n\tvec2 ppu = pu-p;\n\tvec2 ppb = pb-p;\n\n\tfloat upl = dist(normalize(ppl), dhere);\n\tfloat upr = dist(normalize(ppr), dhere);\n\tfloat upu = dist(normalize(ppu), dhere);\n\tfloat upb = dist(normalize(ppb), dhere);\n\n\treturn 1.-smoothstep(.02, .2, length(dhere))\n\t\t+ .5/pow(length(ppl), 4.)*smoothstep(.03, .01, upl)\n\t\t+ .5/pow(length(ppr), 4.)*smoothstep(.03, .01, upr)\n\t\t+ .5/pow(length(ppu), 4.)*smoothstep(.03, .01, upu)\n\t\t+ .5/pow(length(ppb), 4.)*smoothstep(.03, .01, upb)\n\t\t+ .5/(length(ppb)+1.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tfloat mx = max(iResolution.x, iResolution.y);\n\tvec2 uv = fragCoord.xy/mx;\n\tvec3 color = vec3(.1,.4,.5);\n\tcolor = mix(color, vec3(.9), particles(uv*10.));\n\tfragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}