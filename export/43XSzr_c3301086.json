{"ver":"0.1","info":{"id":"43XSzr","date":"1709058399","viewed":99,"name":"Keycode Visualizer","username":"Bingle","description":"A little tool I made for myself to be able to see the X-coordinate of the keyboard texture associated with what key I'm pressing.","likes":3,"published":1,"flags":16,"usePreview":0,"tags":["keyboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float scale = 250.0;\n\nvoid char(inout vec3 col,vec2 uv,vec2 pos){\n    if (uv.x>0.0 && uv.x<1.0 && uv.y>0.0 && uv.y<1.0){\n        vec3 tex = texture(iChannel1,(uv+pos)/vec2(16,16)).rgb;\n        float val = clamp(tex.r-0.9*tex.b,0.0,1.0);\n        col = mix(col,vec3(val),tex.r);\n    }\n}\n\nvoid printInt(inout vec3 col,vec2 uv, int num){\n    int chars = 3;\n    uv.x-=float(chars)/2.0;\n    for (int i = 1; i<=chars;i++){\n        char(col,uv+vec2(float(i)/2.0,0),vec2(floor(mod(float(num),pow(10.0,float(i)))/pow(10.0,float(i-1))),12));\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    //Currently pressed key\n    int key = 0;\n    \n    for (int i=0;i<256;i++){\n        if (texelFetch(iChannel0,ivec2(i,0),0).r>0.5){\n            key = i;\n        }\n    }\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel2,uv).rgb;\n    \n    printInt(col,(fragCoord-iResolution.xy/2.0+vec2(scale,scale/2.0))/scale,int(key));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}