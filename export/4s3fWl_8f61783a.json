{"ver":"0.1","info":{"id":"4s3fWl","date":"1528272559","viewed":115,"name":"Worbley Noise","username":"SugarRushLux","description":"awdwad","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["awdawd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 pos = fragCoord/iResolution.xy;\n    vec2 uv = fragCoord/iResolution.xy;\n\tpos -= .5;\n    pos.x *= iResolution.x/iResolution.y;\n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float t = iTime;\n    float t2 = t*0.2;\n    \n    mat2 r1 = mat2(1.0, 2.0,\n                   0.1, 0.0);\n    mat2 r2 = mat2(2.0, 0.0,\n                   0.0, 2.0);\n    mat2 r3 = mat2(cos(t2), -sin(t2),\n                   sin(t2), cos(t2));\n    mat2 r4 = mat2(sin(t2), -cos(t2),\n                   cos(t2), sin(t2));\n    \n    pos.y *= 3.0;\n    pos.xy *= 1.5;\n    \n    // Time varying pixel color\n    \n    pos.xy = pos.xy * r3;\n    pos.xy += pos.xy * r2;\n    float f = cos(sin(pos.x * 0.5 + t) * pos.y * 0.5 + t);\n    \n    pos.xy += pos.xy * -r4;\n    pos.xy += pos.xy * r1;\n    float f1 = sin(cos(pos.x * 0.5 + t) * pos.y * 0.5 + t);\n   \n    \n    float rd = length(uv);\n    vec3 colr = vec3(f);\n    vec3 colb = vec3(f1);\n    vec3 col = vec3((f - f1) + f);\n    vec3 green = vec3(0.2, 1.0, 0.0);\n    vec3 green1 = vec3(length(uv), 0.0, 0.0);\n    vec3 green2 = green + green1;\n    vec3 col2 = col * green2;\n    vec3 bg = vec3(rd, 1.0, 0.0);\n    vec3 fg = vec3(rd - 0.6, 1.0 - rd, 0.0);\n    \n    vec3 col3 = mix(bg, fg, col);\n         \n    \n\n    // Output to screen\n    fragColor = vec4(col3, 1.0);\n}","name":"Image","description":"","type":"image"}]}