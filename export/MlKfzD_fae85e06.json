{"ver":"0.1","info":{"id":"MlKfzD","date":"1542085110","viewed":99,"name":"Snail squares 2d sdf","username":"theepicsnail","description":"Squares","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);\n}\n\nvec2 rot(vec2 v, float t) {\n    float s = sin(t);\n    float c = cos(t);\n    return mat2x2(c, -s, s, c) * v; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // background color\n\tvec3 fg = mix(\n        vec3( 0.1, 0.2, 0.3 ),\n        vec3( 0.7, 0.8, 0.9 ),\n \t\tfragCoord.y/iResolution.y);\n    vec3 bg = mix(\n        vec3(0.3, 0.1, 0.2 ),\n        vec3(0.9, 0.7, 0.8 ),\n \t\tfragCoord.y/iResolution.y);\n    vec3 frame = vec3(.0,0,.0);\n    \n    \n    // aspect correct uv mapping containing the box -1,-1 to 1,1 in the center.\n    vec2 uv = (2.0*fragCoord.xy-iResolution.xy)/min(iResolution.y,iResolution.x);\n    \n    // tile\n    float size = .25;\n\tvec2 id = floor(uv/size);\n    uv = mod(uv, size)/size*2.0-1.0;\n    \n    // per tile rotation\n    float t = iDate.w/2.0;\n    // add phase offset per tile\n    t += dot(rot(id, t), vec2(.05));\n    // map to 0-1 smoothly over 1 cycle.\n    t = smoothstep(0.0, 1.0, fract(t))\n    // map to 0-2 in 2 steps over 2 cycles.\n      + floor(fract(t/2.0)*2.0);\n   \t// map to 0-(pi/2) in 2 steps over 2 cycles.\n    t *= 3.1415/4.0;\n    \n    \n    uv = rot(uv, t);\n    \n    vec3 col = fg;\n    float dist = sdBox(uv,vec2(1));\n    col = mix(col,frame, 1.0-smoothstep(0.0, .1, abs(dist)));\n    col = mix(col,bg, smoothstep(0.0, 0.1, dist));\n    \n\tfragColor = vec4( col,1.0 );\n}","name":"Image","description":"","type":"image"}]}