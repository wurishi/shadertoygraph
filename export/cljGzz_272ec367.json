{"ver":"0.1","info":{"id":"cljGzz","date":"1672782409","viewed":119,"name":"SquareRotation","username":"Raistlin_fuego","description":"learningShaders","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["learningshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fill(float x, float size) {\n    return 1.-step(size, x);\n}\n\nfloat stroke(float x, float size, float w) {\n    float d = step(size, x+w*.5) - step(size, x-w*.5);\n    return d;\n}\nfloat rectSDF(vec2 st, vec2 s) {\n    //st = st*2.-1.;\n    return max( abs(st.x/s.x),\n                abs(st.y/s.y) );\n}\n\nvec2 rotation(vec2 st, float g)\n{\n    mat2 rot = mat2(cos(g), sin(g), -sin(g), cos(g));\n    st *= rot;\n    return st;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    st -= vec2(.5, 0.);\n\n    st = (st-.5)*1.1912+.5;\n    st = st*2.-1.;\n    vec3 colorA = vec3(pow(st.x, 0.700),0.581,0.985);\n    vec3 colorB = vec3(0.995,0.430,0.119);\n    vec3 color = mix(colorA, colorB, st.x*st.y);\n    vec2 stRotated = rotation(st, iTime/3.);\n    vec2 stRotatedRight = rotation(st, -iTime/3.);\n    \n    \n    float sdf = rectSDF(stRotatedRight, vec2(1.));\n    float sdfRotated = rectSDF(stRotated, vec2(1.));\n    \n    color += stroke(sdfRotated,abs(fract(iTime/4.)*3.),.125)*vec3(st.x);\n    color += stroke(sdfRotated,abs(fract(iTime/8.))*3.,.125)*vec3(st.y);\n    color += stroke(sdf,0.3,.125)*vec3(st.y);\n    color += fill(sdf,.1) * vec3(0.002,0.196,0.960);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}