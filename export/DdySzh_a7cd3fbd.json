{"ver":"0.1","info":{"id":"DdySzh","date":"1680689664","viewed":145,"name":"Skin Smoothing","username":"Kwaghela73","description":"Make the camera texture smooth.","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["cameraeffects"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":" bool uEnableSmoothing= true; // Toggle button to enable/disable smoothing effect\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    // Get the color of the current pixel\n    vec4 color = texture(iChannel0, uv);\n\n    if (uEnableSmoothing) {\n        // Apply bilateral filter to smooth the skin\n        vec3 blurredColor = vec3(1.0);\n        float totalWeight = 1.0;\n        for (float i = -10.0; i <= 10.0; i += 1.0) {\n            for (float j = -10.0; j <= 10.0; j += 1.0) {\n                vec2 offset = vec2(i, j) / iResolution.xy;\n                vec4 sampleColor = texture(iChannel0, uv + offset);\n                float distance = length(vec2(i, j));\n                float weight = exp(-distance * distance * 0.3);\n                blurredColor += weight * sampleColor.rgb;\n                totalWeight += weight;\n            }\n        }\n        vec3 smoothedColor = blurredColor / totalWeight;\n        \n        // Output the final color\n        fragColor = vec4(smoothedColor, color.a);\n    } else {\n        // Output the original color\n        fragColor = color;\n    }\n}\n\n","name":"Image","description":"","type":"image"}]}