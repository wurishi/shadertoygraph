{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define PI 3.14159265358979\n#define time iTime\nconst int type = 2;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = ( fragCoord.xy / iResolution.xy ) -0.5, pos = p;;\n   p.x *= iResolution.x / iResolution.y;    \n   float dist = 1.0;\n   float angle = PI;\n   float r = clamp(1.5 * sin(time ), 1., 2. );\n   vec3 color1 = vec3(1., 0.96, 0.05);\n   vec3 color2 = vec3(0.05);\n   float f2 = r - 1. + sin(time * 0.2 +atan(p.x, p.y) * 5.);\n   float f3 = r - 1. + cos(time *-0.3 + 5.*length(p)+atan(p.x, p.y) * 5.);\n  //----------------------\n\n    float par = 12. * sin(time * 0.1) ;\n    float t = clamp(par , -5.,5. );  \n    //  float t = clamp(1.5 * sin(time), -5., 5. ); // Ð¸Ð»Ð¸ Ñ‚Ð°Ðº    \n    float f = mix(f2, f3,  t);\n  pos = vec2(cos(angle),sin(angle))* r * cos(f + angle);\n  dist = ( 22. / sqrt(dot(pos, pos )));\n  if(type == 0)     \t  color1 *= color2*dist;\n  else if (type == 1)     color1 *= sqrt(color2*dist/2.);   \n  else if (type == 2)     color1 *= pow(color2 * vec3(dist), vec3(-1.5));   \n  else if (type == 3)     color1 += pow(color2 * dist, vec3(-1.5));   \n  else if (type == 4)     color1 += pow(dist, (-1.0));    \n      else\n  {\n    color1 = (1. - color1)*  dist;\n    color1 *= color2*dist;\n  //  color1 += pow(color2 * dist, vec3(-1.5));    \n  }\n   color1 = mix(1.-color1, color1,  dot(pos, pos ));\n//   color1 = mix(1.-color1, color1,  dot(p, pos ));\n\t\n    \n    fragColor = vec4(color1,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XlX3Ds","date":"1426052666","viewed":166,"name":"whirligig","username":"Lio","description":"I try different options :)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}