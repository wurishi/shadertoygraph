{"ver":"0.1","info":{"id":"WddcW7","date":"1601050189","viewed":473,"name":"sub- 2x2 block dFdx dFdy","username":"FabriceNeyret2","description":"scholarius suggests that hardware derivatives are evaluated differently on D3D vs OpenGL within 2x2 pixels blocks. this is a test of it, computing dFdxy(u%n) with n = 2,3,4 from bottom yo top\nOpenGL/nVidia result: see forum.\nIf you comment give system/gpu","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["glsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// warps are generally 4x8 pixels blocks. \n// But a more fundamental GPU organization is the 2x2 block, \n// used for various things, including hardware derivatives \n// ( used to estimate LOD, for instance ).\n// scholarius suggests that hardware derivatives are evaluated differently on D3D vs OpenGL\n// this is a test of it.\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2  R = iResolution.xy;\n    float i = 2.+floor(3.*U.y/R.y);  // bottom: %2 = sub-block alternance. then %3, %4\n    vec2 V = mod(U-.5,vec2(i));\n    O = .5+.5*vec4( U.x < R.x/2. ? dFdx(V) : dFdy(V) ,0,1) / (i-1.);\n}\n","name":"Image","description":"","type":"image"}]}