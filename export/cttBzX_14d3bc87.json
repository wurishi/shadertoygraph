{"ver":"0.1","info":{"id":"cttBzX","date":"1701441231","viewed":4,"name":"Simple Hearth - by izJoey","username":"izjoey","description":"Simple hearth for a complex girlfriend.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simplehearth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dot2( in vec2 v ) { return dot(v,v); }\n\nvec3 palette(float t) {\n    \n\n    vec3 a = vec3 (0.5, 0.5, 0.5);\n    vec3 b = vec3 (0.5, 0.5, 0.5);\n    vec3 c = vec3 (1.0, 1.0, 1.0);\n    vec3 d = vec3 (0.263, 0.416, 0.557);\n\n    return a +b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdHeart( in vec2 p )\n{\n    p.x = abs(p.x - 1.0);\n    \n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coordinates\n    vec2 p = (fragCoord*3.2-iResolution.xy)/iResolution.y;\n    vec2 uv0 = p;\n    vec3 finalColor = vec3(0.0);\n    \n\n    vec3 col = palette(length(uv0)  + iTime*0.4);\n\n     for (float i = 0.0; i < 2.5; i++) {\n        p = fract(p * 0.0) - 0.5;\n\n        float d = sdHeart(p) * exp(-sdHeart(uv0));\n\n        vec3 col = palette(length(uv0) + i*1.4 + iTime*0.8);\n\n        d = sin(d*6.0 + iTime )/8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n\n    }\n\n\n\n   // output\n\tfragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}