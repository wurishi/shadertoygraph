{"ver":"0.1","info":{"id":"4cSSRK","date":"1706519107","viewed":141,"name":"Weird Squares Shader","username":"underscore95","description":"Idk it is moving squares","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool validCoordinate(in int fragCoord, in int iResolution, in int threshold) {\n    return fragCoord > threshold \n    && fragCoord < iResolution - threshold\n    && (fragCoord + threshold / 2) % (iResolution / 10) <= threshold;\n}\n\nbool validCoordinate(in vec2 fragCoord, in vec2 iResolution, in int threshold, in vec2 fragOffset) {\n    return validCoordinate(int(fragCoord.x - fragOffset.x), int(iResolution.x), threshold) \n    && validCoordinate(int(fragCoord.y - fragOffset.y), int(iResolution.y), threshold);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = vec3(0,0,0);\n    \n    const float speed = 5.0;\n    const float colourSpeed = 0.25;\n    \n    vec2 offset = vec2(cos(iTime * speed + uv.x - 0.5), sin(iTime * speed + uv.y - 0.5)) * 20.0;\n    \n    const vec3 col1 = vec3(0,255, 100) / 255.0;\n    const vec3 col2 = vec3(0, 0, 255) / 255.0;\n    \n    if (validCoordinate(fragCoord, iResolution.xy, 10, offset)) {\n        float t = fract((iTime) * colourSpeed + (uv.x + uv.y) * 3.0);\n        if (t > 0.5) t = 0.5 - (t - 0.5);\n        col = mix(col1, col2, t); \n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}