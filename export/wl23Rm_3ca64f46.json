{"ver":"0.1","info":{"id":"wl23Rm","date":"1558973830","viewed":294,"name":"71337 Witer Mites ","username":"Radical_Ed","description":"Witer Mites ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["water","rebop","mites","radicaled"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This is a rework of https://www.shadertoy.com/view/3lSGz1, \n// created by sschmidtix, with sound, by Radical Ed\n// License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n\n\n#define PERIOD 2.\n#define REPETITIONS 2\n\nconst float PI = 3.1415926535;\n\nvec3 shadeBlob(vec2 p, float index, float value, float scale)\n{\n    float screenRatio = iResolution.x / iResolution.y;\n    vec2 pc = vec2(0.1 + (screenRatio - 0.2) * value, index);\n    \n    float d = length(pc - p) / 0.015*scale/0.3;\n    \n    return vec3(3. * vec3(0.2, 0.5, 0.7) / (max(d * d, 1.)));\n}\n\nfloat step_interp(float x) {\n    return step(0.5, x);\n}\n\nfloat linear_interp(float x) {\n    float c = clamp(x, 0., 1.);\n    \n    return c;\n}\n\nfloat cosine_interp(float x) {\n    float c = clamp(x, 0., 1.);\n    \n    return 0.5 * (1. - cos(PI * c));\n}\n\nfloat smoothstep_interp(float x) {\n//    return smoothstep(0., 1., x);\n\n    float c = clamp(x, 0., 1.);\n    \n    return c * c * (3. - 2. * c);\n}\n\nfloat quintic_interp(float x) {\n    float c = clamp(x, 0., 1.);\n    \n    return c * c * c * ((6. * c - 15.) * c + 10.);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.yy;\n    vec2 q = fragCoord.xy / iResolution.yy;\n    \n    int tx = int(p.x*128.0);\n    \n    // per lo Spectrum Audio\n    float wave = texelFetch( iChannel0, ivec2(tx,1), 0 ).x;\n    vec3 spec = vec3(wave/1.0);\n    \n    vec2 translate = vec2(cos(iTime),sin(iTime));\n    vec2 translate2 = vec2(sin(iTime),cos(iTime));\n    p += translate*0.35*sin(iTime);\n    q += translate2*1.35*sin(iTime);\n    \n    float t = abs(2. * fract(iTime / PERIOD) - 1.);\n   \n    // Background pattern\n    \n    vec3 col = vec3(0.0 + 0.000 * mod(floor(p.x * 10.0) + floor(p.y * 10.0), 2.0));\n    vec3 col2 = vec3(0.0 + 0.000 * mod(floor(q.y * 5.0) + floor(q.x * 5.0), 2.0));\n    \n    \n    col += shadeBlob(p, 0.1, smoothstep_interp(t)*spec.x+0.5, wave/3.0);\n    col2 += shadeBlob(q, 0.3+spec.z, linear_interp(t)*spec.y+0.5, wave/3.0);\n    col += shadeBlob(p, 0.5+spec.x, cosine_interp(t)*spec.z+0.7, wave/3.0);\n    col2 += shadeBlob(q, 0.7, smoothstep_interp(t)*spec.z+0.1, wave/3.0);\n    col += shadeBlob(p, 0.9-spec.y, quintic_interp(t)*spec.z+0.3, wave/3.0);\n    \n    \n    col = pow(col, vec3(0.45));\n    col2 = pow(col2, vec3(0.45));\n    \n    fragColor = vec4(col+col2, 1.0);\n}","name":"Image","description":"","type":"image"}]}