{"ver":"0.1","info":{"id":"XXjcWm","date":"1727318565","viewed":45,"name":"Burning Log","username":"Rugged","description":"Fire fluid sim. Yes I know logs burn from the bottom.\n\nChange BLURRED to blur the fire.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["fire","fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 delta = 1.0 / iResolution.xy;\n    \n    vec2 up = vec2(0., 1.);\n    vec2 right = vec2(1., 0.);\n    \n    vec2 upD = up * delta;\n    vec2 rightD = right * delta;\n    \n    \n    \n    vec4 col = vec4(0.);\n    \n    \n    vec2 red = vec2(1., 0.);\n    vec2 green = vec2(0., 1.);\n    vec2 blue = vec2(-.707, -.707);\n    \n    col = texture(iChannel0, uv);\n    \n    \n    \n    //blur\n    vec4 colU = vec4(0.);\n    vec4 colR = vec4(0.);\n    vec4 colD = vec4(0.);\n    vec4 colL = vec4(0.);\n    \n    float pavgnear = 0.;\n    \n    int n = 2;\n    \n    for(int i = 0; i < n; i++){\n        colU = texture(iChannel0, uv + upD);\n        colR = texture(iChannel0, uv + rightD);\n        colD = texture(iChannel0, uv - upD);\n        colL = texture(iChannel0, uv - rightD);\n        \n        pavgnear += (pow(abs(colU.y), 2.) + pow(abs(colD.y), 2.) + pow(abs(colL.y), 2.) + pow(abs(colR.y), 2.));\n        \n        upD += up * delta;\n        rightD += right * delta;\n        \n    }\n    \n    pavgnear /= (float(n) * 4.);\n    \n    \n    \n    vec4 ink = vec4(1. - col.x);\n    float pressure = pow(abs(col.y), 2.);\n    \n    \n    \n    \n    \n    bool BLURRED = false;\n    \n    \n    //choose blur or not\n    pressure = mix(pressure, pavgnear, float(BLURRED));\n    \n    \n    \n    //fire color * pressure\n    col = vec4(1., .4, .1, 0.) * (pressure / 100.);\n    \n    //col = ink;\n    \n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uvc = uv - .5;\n    uvc *= 2.;\n    \n    \n    vec2 delta = 1.0 / iResolution.xy;\n    //120 fps delta time is the time step regardless of frame rate\n    float dt = 0.0083333;\n    \n    \n    vec2 up = vec2(0., 1.);\n    vec2 right = vec2(1., 0.);\n    \n    vec2 upD = up * delta;\n    vec2 rightD = right * delta;\n    \n    \n    \n    \n    vec4 col = texture(iChannel0, uv);\n    vec4 colU = texture(iChannel0, uv + upD);\n    vec4 colR = texture(iChannel0, uv + rightD);\n    vec4 colD = texture(iChannel0, uv - upD);\n    vec4 colL = texture(iChannel0, uv - rightD);\n    \n    //get sample at opposite direction of this velocity bc it will be new value here ext frame\n    vec2 v = -(col.zw * dt * 10.1);\n    vec4 colV = texture(iChannel0, (fragCoord + v) / iResolution.xy);\n    \n    \n    //pressure\n    float p = -colR.z + colL.z - colU.w + colD.w;\n    \n    \n    vec2 gradP = vec2(0.);\n    gradP += up * (colU.y - colD.y);\n    gradP += right * (colR.y - colL.y);\n    \n    //yes i understand the simplification but i like bad performance\n    //deal w it\n    vec2 dvdt = (-gradP) * dt * (0.09 / dt);\n    //dvdt += dt * up;\n    \n    colV.zw += dvdt;\n    \n    col = colV;\n    \n    col.y = p;\n    \n    \n    //\n    //add velocity to ring\n    if(abs(length(uvc - vec2(0., -.5))) < 0.1){\n        //velocity is dependent on resolution to maintain similar visuals between different resolutions\n        col.zw = (sqrt(iResolution.y) * 1.1) * vec2(.05 * sin(iTime * 1.) + (.1 * uvc.x), 1.);// * (1. + (.5 * sin(iTime)));\n        \n        //make pressure of ring large to make it glow\n        col.y = 100.;\n        \n        col.x = 1.;\n        \n    }\n    \n    \n    \n    \n    \n    \n    if(iFrame == 0){\n        \n        uv -= 0.5;\n        \n        col = vec4(.0, 0., 0., 0.);\n        \n       \n\n        \n    }\n    \n    \n    \n    \n    \n    \n    \n    \n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"}]}