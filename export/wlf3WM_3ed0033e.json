{"ver":"0.1","info":{"id":"wlf3WM","date":"1556481028","viewed":399,"name":"Extinction Rebellion","username":"hamoid","description":"Shader XR\n\nClick to wave. Nothing too fancy, but maybe others can use the shape to do cool stuff :)","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["logo","xr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 green = vec3(0.137, 0.658, 0.247);\n\n// See shorter contributed versions in the comments :)\n\n// v0.2\nfloat xr(vec2 pos, float aa) {\n    float w = 0.077;\n    float h = 0.639;\n    float tilt = 1.152;\n    // xy symmetry\n    pos = abs(pos);\n    return 1.0 - min(\n        // circle\n        smoothstep(w-aa, w, abs(length(pos)-1.0+w)) - \n        // black sand clock\n        smoothstep(pos.y-aa, pos.y, h) * \n        smoothstep(pos.x-aa, pos.x, pos.y / tilt + .11) *\n        // green holes in sand clock\n        (1.0 - \n        smoothstep(pos.y-aa, pos.y, h-w*2.) * \n        smoothstep(pos.x+w*3.-aa, pos.x+w*3., pos.y / tilt + .12)\n         )\n    , 1.);    \n}\n\nvoid mainImage( out vec4 O, in vec2 p ) {\n    vec2 uv = 1.1 * ( 2. * p - iResolution.xy ) / iResolution.y;\n    \n    // wavy\n    if(iMouse.z > 0.0) {\n    \tuv += 0.03 * sin(uv.y * 3. + iTime * 1.) * \n                     sin(uv.x * 2. - iTime * 2.);\n    }\n    \n    // noisy\n    vec3 n = vec3(fract(sin(uv.y+iTime)*1984.0) > 0.9 ? 0.2 : 0.0);\n    \n    O = vec4(mix(green, n, xr(uv, 3./iResolution.y)), 1.0);\n}","name":"Image","description":"","type":"image"}]}