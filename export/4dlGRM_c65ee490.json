{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Simple Starburst\n\t// @author Tomek Augustyn 2010\n\t\n\t// Ported from my old PixelBender experiment\n\t// https://github.com/og2t/HiSlope/blob/master/src/hislope/pbk/generators/Starburst.pbk\n\t\n\t// Hold and drag horizontally to adjust the number of rays (period)\n\t// Hold and drag vertically to adjust the twist\n\t\n\t// Disclaimer: May cause seizures, watch out!\n\t\n\tfloat ratio = iResolution.y / iResolution.x;\n\tfloat period = floor(((iMouse.x / iResolution.x) - 0.5) * 20.0) + 0.0;\n\tfloat twist = float(iMouse.y / iResolution.y * 1000.0) - 500.0;\n\tfloat rotation = iTime * 4.0; \n\tvec2 center = vec2(0.5, 0.5 * ratio);\n\tvec3 background = vec3(0.4, 0.2, 0.1);\n\tvec3 foreground = vec3(0.2, 0.5, 0.8);\n\t\n\tfloat coordX = fragCoord.x / iResolution.x;\n\tfloat coordY = fragCoord.y / iResolution.x;\n\tvec2 coord = vec2(coordX, coordY);\n\t\n\tvec2 shift = coord - center;\n        \n    float offset = rotation + sqrt(shift.x * shift.x + shift.y * shift.y) * twist / 10.0;\n    float val = sin((offset + atan(shift.x, shift.y) * period));\n\n\tfragColor = vec4(\n    \tmix(background.r, foreground.r, val),\n        mix(background.g, foreground.g, val),\n        mix(background.b, foreground.b, val),\n        1.0\n    );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dlGRM","date":"1365880175","viewed":384,"name":"Starburst","username":"atomek","description":"A classic starburst shader. ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["simple","starburst"],"hasliked":0,"parentid":"","parentname":""}}