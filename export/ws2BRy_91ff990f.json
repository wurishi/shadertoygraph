{"ver":"0.1","info":{"id":"ws2BRy","date":"1590317477","viewed":57,"name":"Experiment all 01","username":"Stenator","description":"some experiment :)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 v_normal;\nvec2 v_texcoord;\n\n\n\nfloat random (in vec2 x){\nfloat rand = fract(sin(dot(x,vec2(12.558585,50.2525)))* 42478.555745) ;\nreturn rand;\n}\n\n\nfloat noise2d (in vec2 pos) {\n\n    vec2 ipos = floor(pos);\n    vec2 fpos = fract(pos);\n\nfloat a = random(ipos);\nfloat b = random(ipos+vec2(1.,0.));\nfloat c = random(ipos+vec2(0.,1.));\nfloat d = random(ipos+vec2(1.,1.));\n\nvec2 u= smoothstep(0.,1.,fpos); \nreturn mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n\n\n\nfloat Rectangle ( vec2 position, vec2 uv, vec2 taille,float blur) {\n\nuv *=   1. + position;\nvec2 rectanglehaut = smoothstep(taille * blur, taille,uv);\nvec2 rectanglebas = smoothstep(taille * blur, taille, 1.-uv);\n\nfloat rectangle= rectanglebas.y *rectanglebas.x * rectanglehaut.y * rectanglehaut.x;\nreturn rectangle;\n}\n\n\nfloat sharpRectangle (vec2 position, vec2 uv, vec2 taille) {\n\n\nfloat noise = noise2d((vec2(uv.x,uv.y+iTime))*50.);\nfloat noisemoins = noise2d(uv*(9.* (0.8*iTime)));\nfloat noiseplus = noise2d(uv*500.);\nfloat rectangle = Rectangle(position, uv, taille, float (1.0001));\nfloat blurRectangle = 1.- Rectangle(position, uv  , taille*0.86, float (1.4));\nrectangle = pow(noise*noiseplus,blurRectangle*(4.*noisemoins));\n\nreturn rectangle;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = gl_FragCoord.xy / iResolution.xy;\n    \n    vec2 pos = uv *100.;\n    \n    float noise= noise2d(pos);\n    \n    \n    vec3 color = vec3 (sharpRectangle(vec2 (0.), uv, vec2(0.65,0.89)));\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}