{"ver":"0.1","info":{"id":"ft2BRD","date":"1651867734","viewed":127,"name":"CubeSweep","username":"PsyPhi","description":"A transition  effect for meshes","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["transition","sweep"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(vec2 p)  // replace this by something better\n{\n    p  = 50.0*fract( p*0.3183099 + vec2(0.71,0.113));\n    return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 color = texture(iChannel0, uv);\n    float luma = (color.r+color.g+color.b)/3.;\n\n    float gridSize = 20.;\n    float bandWidth = 5.;\n    \n    vec2 gridPos = fract(uv*vec2(gridSize));\n    vec2 gridI = floor(uv*vec2(gridSize));\n    \n    float timeLoop = fract(iTime*0.125);//0 to 1 loop\n    timeLoop = (timeLoop-0.25)*2.;\n    \n    float gridSweep = step(gridPos.y, timeLoop);//sweep of gridPos.\n    float sweep = step(uv.y, timeLoop);\n    float indexSweep = step(gridI.y, floor(timeLoop*gridSize));\n    \n    float select = noise(gridI+timeLoop)*(indexSweep*gridSize);\n    \n    //select = indexSweep;\n    \n    float gridSel = smoothstep((gridI.y-timeLoop*gridSize), (gridI.y-(timeLoop-0.25)*gridSize)+luma*5., select);//the -0.25 on the time loop allows for the fade in\n    \n    float cusp = step(gridSel, 0.9)-smoothstep(gridSel+0.8,gridSel+0.9,0.9);\n    \n    float edge = step(0.95, gridPos.x);\n    edge += step(gridPos.x, 0.05);\n    edge += step(0.95, gridPos.y);\n    edge += step(gridPos.y, 0.05);\n    \n\n    // Time varying pixel color\n    vec3 col = mix(vec3(gridSel),vec3(0.1,0.5,1.0),cusp*edge);\n    \n    //col -= vec3(edge)*(1.-sweepAfter);\n    //col = vec3(cusp*edge);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}