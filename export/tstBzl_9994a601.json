{"ver":"0.1","info":{"id":"tstBzl","date":"1605958916","viewed":65,"name":"Mandelbrot test123","username":"PERFIL","description":"Mandelbrot ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int MAX_ITERATIONS = 1024;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float minScale =  0.00003;\n    float maxScale = 2.5;\n    float var01 = (1. + cos(iTime * 0.5))/2.;\n    float scale = minScale + pow(var01, 3.) * (maxScale - minScale);\n    // Normalized pixel coordinates (from 0 to 1)\n    //scale = 1.;\n    vec2 uv = (fragCoord/iResolution.xy);\n    uv-= vec2(0.5);\n    uv*=scale;\n    //uv.y +=0.640982;\n    //uv.x+=0.0000275;\n    //uv.y +=0.9013;\n    //uv.x-=0.060989;\n    //uv.y +=0.9013;\n    uv.x-=0.42002;\n    uv.y +=0.1;\n\tuv.x *= iResolution.x/iResolution.y;\n \n    vec3 n = vec3(0.);\n    int i = 0;\n    while((n.x*n.x + n.y*n.y) <= 4. && i < MAX_ITERATIONS)\n    {\n        float xtemp = n.x*n.x - n.y*n.y  + uv.x;\n        n.y = 2.*n.x*n.y + uv.y;\n        n.x = xtemp;\n        i++;\n    }\n    \n    vec3 col = vec3(150./255., 200./255., 1);\n    float colDiff = 1. - float(i)/float(MAX_ITERATIONS);\n    col *=colDiff;\n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}