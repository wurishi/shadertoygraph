{"ver":"0.1","info":{"id":"ltyBRG","date":"1542893881","viewed":220,"name":"Unity Shader Practice Task","username":"TomasKiniulis","description":"A shader practice task.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["logo","unity"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Band(float t, float start, float end, float blur){\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    \n    return step1*step2;\n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur){\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n    \n    return band1*band2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy / iResolution.xy);\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 col = vec3(0.);\n    \n    float mask = 0.;\n    uv = uv + vec2(0.035, -0.01);\n    uv = uv/0.6;\n    mask += Rect(uv, -.35, .07, -.045, .045, 0.003);\n    mask += Rect(uv, -.45+uv.y, -.33+uv.y, .0, .26, 0.003);\n    mask += Rect(uv, -.45-uv.y, -.33-uv.y, -.26, .0, 0.003);\n    mask += Rect(uv, .02+uv.y*0.56, .115+uv.y*0.56, -.045, .35, 0.003);\n    mask += Rect(uv, .02-uv.y*0.56, .115-uv.y*0.56, -.35, .0, 0.003);\n    mask += Rect(uv, .02-uv.y*0.56, .115-uv.y*0.56, -.35, .0, 0.003);\n    mask += Rect(uv, -.24+uv.y*0.6, .06+uv.y*.6, .27+uv.x*0.25, .365+uv.x*0.25, 0.003);\n    mask += Rect(uv, .36-uv.y*0.3, .46-uv.y*0.3, -.62+uv.x*1.7, -.104+uv.x*1.7, 0.003);\n    mask += Rect(uv, .35+uv.y*0.25, .44+uv.y*0.25, -.365-uv.x*0.27, 0.55-uv.x*1.5, 0.003);\n    mask += Rect(uv, -.21-uv.y*0.5, .1-uv.y*0.5, -.36-uv.x*0.29, -.27-uv.x*0.28, 0.003);        \n\n    col = vec3(1., 1., 1.)*mask;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}