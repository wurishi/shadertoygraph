{"ver":"0.1","info":{"id":"fllXW4","date":"1625869749","viewed":157,"name":"Brazilian flag","username":"Vinicius_Jesus","description":"Brazilian flag","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["flag","shapes","brazil","brazilian","brasil"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nfloat Star(vec2 uv, float size) {\n    float a = mod(atan(uv.x,uv.y)*5.,6.28 )/5.-3.14/5.;\n    float angle = PI*(.5+.2);\n    float d = length(uv) * sin(angle+abs(a));\n    float w = fwidth(d);\n    return smoothstep(size + w, size - w, d);\n}\n\nvec3 Frag(vec2 uv) {\n    float size = .3;\n    vec2 prop = vec2(size, size-.005);\n    \n    vec3 col = vec3(1, 120 , 64)/255.;\n    col *= smoothstep(.01, .0, abs(uv.x)-.8);\n    col *= smoothstep(.01, .0, abs(uv.y)-.5);\n    \n    vec3 gold = vec3(234, 203, 0)/255.;\n    col += gold*smoothstep(size, size-2./iResolution.y, abs(uv.x*.4)+abs(uv.y*.7));\n\n    float uvL = length(uv);\n    \n    vec3 blue = vec3(0, 32, 110)/255.;\n    prop += .01;\n    col = mix(col, blue, smoothstep(prop.x, prop.y, uvL));\n\n    if (uvL < size+.01) {\n        uv.y += cos(uv.x-.75)*vec2(sin(uv.x-.6), cos(uv.y)).x+.3;\n        col += smoothstep(.25, prop.y, abs(.01 / uv.y));\n        \n        vec2 gv = fract(uv*9.)-.5;\n        vec2 id = floor(uv*9.);\n        \n        float maxSize = .005;\n        col += Star(uv+vec2(-.1), .003);\n        col += Star(uv+vec2(.15, .1), .0025);\n        col += Star(uv+vec2(-.1, .2), .0018);\n        \n        col += Star(uv+vec2(-.1, .1), .0034);\n        col += Star(uv+vec2(-.13, .17), .002);\n        col += Star(uv+vec2(-.15, .2), .002);\n        col += Star(uv+vec2(-.11, .25), .001);\n        \n        col += Star(uv+vec2(.2, .3), .0034);\n        col += Star(uv+vec2(.1, .3), .0026);\n        col += Star(uv+vec2(.05, .2), .0034);\n        \n        col += Star(uv+vec2(.0, .3), .0034);\n        col += Star(uv+vec2(.2, .2), .0034);\n        col += Star(uv+vec2(.01, .06), .0034);\n \n    }\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv *= 1.2;\n    \n    float x = sin((uv.x+uv.y-iTime + sin(1.5*uv.x+4.5*uv.y)*PI*.4)*PI);\n    uv *= 1.+(.02*x);\n    \n    vec3 col = Frag(uv);\n    \n    col *= (3.-cos(x))/3.;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}