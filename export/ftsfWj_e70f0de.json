{"ver":"0.1","info":{"id":"ftsfWj","date":"1670932808","viewed":72,"name":"Deep Breath","username":"UncannyMachines","description":"My first public shader!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["experiment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Thank you to users elenzil and FabricNeyret2 for their advice to improve this!\nfloat radius;\nint circleCount = 5;\nfloat centre;\n\n\n                     \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    centre = 0.;\n    vec2 points[] = vec2[](vec2(centre),\n        vec2(centre, centre + 0.5),\n        vec2(centre + 0.5,centre),\n        vec2(centre,centre + -0.5),\n        vec2(centre -0.5,centre),\n        vec2(centre + 0.5,centre + 0.5),\n        vec2(centre + 0.5,centre + -0.5),\n        vec2(centre + -0.5,centre + 0.5),\n        vec2(centre + -0.5,centre + -0.5));\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord -.5* iResolution.xy ) / iResolution.y;\n    \n    fragColor = vec4(0,0,0,1);\n    for (int i = 0; i < 9; i++)\n    {\n        vec2 point = points[i];\n\n        for (int i = 0; i < circleCount; i++)\n        {\n            vec4 colour = vec4(sin(iTime),0.3,0.1,1);\n            float multiplier = float(i);\n            radius = sin(iTime / 2.) + float(i);\n    \n            float dist = distance(uv, point);\n\n            if (dist < radius + multiplier / 50. && dist > radius)\n            {\n                fragColor = vec4(colour) * multiplier;\n            }\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}