{"ver":"0.1","info":{"id":"3ssGWf","date":"1547671587","viewed":103,"name":"Snowman","username":"fbbdev","description":"SDF of a snowman figure and other amenities","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 color(vec2 uv) {\n    float value = texture(iChannel0, uv, 0.0).x;\n\n    return (value >= 0.0) ? vec3(1, 0.3, 0.001)*(value) : vec3(0, 0.05, 1)*(-value);\n}\n\nvec3 blackAndWhite(vec2 uv) {\n    float value = texture(iChannel0, uv, 0.0).x;\n\n    return vec3((value < 0.0) ? 1 : 0);\n}\n\nvec3 edge(vec2 uv) {\n    vec2 px = 0.5 / iResolution.xy;\n\n    float s0 = sign(texture(iChannel0, uv - px, 0.0).x);\n    float s1 = sign(texture(iChannel0, uv + vec2(px.x, -px.y), 0.0).x);\n    float s2 = sign(texture(iChannel0, uv + vec2(-px.x, px.y), 0.0).x);\n    float s3 = sign(texture(iChannel0, uv + px, 0.0).x);\n    \n    return vec3((s0 != s1 || s0 != s2 || s0 != s3) ? 1 : 0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    fragColor = vec4(color(uv), 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 transformCoord(vec2 coord) {\n    return (coord/iResolution.xy*2.0 - vec2(1, 1)) * vec2(10.0/iResolution.y*iResolution.x, 10);\n}\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(radians(a));\n\tfloat c = cos(radians(a));\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nfloat polyC1(vec2 coord) {\n    return distance(coord, transformCoord(iMouse.xy)) - 4.0;\n}\n\nfloat polyC2(vec2 coord) {\n    return distance(coord, vec2(0, 6)) - 2.0;\n}\n\nfloat polyC3(vec2 coord) {\n    return distance(coord, vec2(0, 3)) - 1.0;\n}\n\nfloat polyC4(vec2 coord) {\n    return distance(coord, vec2(0, 1)) - 1.0;\n}\n\nfloat square1(vec2 coord) {\n    // Dimensioni del quadrato: 4x4\n    // Centro: (0, -1)\n\n    coord = rotate(coord - vec2(0, -1), 20.0*iTime);\n\n    return max(abs(coord.x), abs(coord.y)) - 2.0;\n}\n\nfloat sdf(vec2 coord) {\n    return polyC1(coord)*polyC2(coord)*polyC3(coord)*polyC4(coord)*square1(coord);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = transformCoord(fragCoord);\n\n    fragColor = vec4(sdf(coord));\n}","name":"Buffer A","description":"","type":"buffer"}]}