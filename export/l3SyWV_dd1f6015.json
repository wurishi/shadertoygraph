{"ver":"0.1","info":{"id":"l3SyWV","date":"1727724774","viewed":34,"name":"вращение отнгсительное чего-то","username":"ArtemDvornikov","description":"вращение отнгсительное чего-то","likes":1,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 bg = vec3(0.0);\n\nvec2 direction;\n\nconst float circlePositionX = 0.5;\nconst float circlePositionY = 0.0;\nconst float circleRadius = 0.15;\n\nconst float rectanglePositionX = 0.297;\nconst float rectanglePositionY = 0.0;\nconst float rectangleWidth = 0.05;\nconst float rectangleHeight = 0.2;\n\nfloat createCircle(in vec2 uv, in float r) {\n    float lengthUV = length(uv);\n    if (lengthUV < r/2.0)\n        return -(lengthUV - r) - r/2.0;\n    return lengthUV - r;\n}\n\nvec2 rotate(vec2 uv, float angle) {\n    return uv * mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n}\n\nfloat createRectangle(in vec2 p, in vec2 b, in vec4 r) {\n    vec2 q = abs(p) - b + r.x;\n    return min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n}\n\nvoid drawScene(vec2 uv) {\n\n    direction = vec2(rectanglePositionX, rectanglePositionY) - vec2(circlePositionX, circlePositionY);\n\n    vec3 color = vec3(1.0); // цвет для отрисовки фигур\n\n    vec2 centerCircleCoords = vec2(circlePositionX, circlePositionY);\n    vec2 newCircleCoords = uv - centerCircleCoords;\n    float circle = createCircle(newCircleCoords, circleRadius);\n    float alphaCircle = step(0.0, -circle);\n    bg = mix(bg, color, alphaCircle);\n    bg = mix(bg, color, 1.0 - smoothstep(0.0, 0.01, circle));\n  \n  \n    direction = rotate(direction, iTime);  \n\n    vec2 centerRectangleCoords = centerCircleCoords + direction;\n    vec2 newRectangleCoords = uv - centerRectangleCoords;\n    \n    newRectangleCoords = rotate(newRectangleCoords, -iTime);\n\n    float rectangle = createRectangle(newRectangleCoords, vec2(rectangleWidth, rectangleHeight), vec4(0.01));\n    \n    float alphaRectangle = step(0.0, -rectangle);\n    bg = mix(bg, color, alphaRectangle);\n    bg = mix(bg, color, 1.0 - smoothstep(0.0, 0.01, rectangle));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n    drawScene(uv);\n\n    fragColor = vec4(bg, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}