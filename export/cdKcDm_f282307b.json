{"ver":"0.1","info":{"id":"cdKcDm","date":"1696215460","viewed":45,"name":"Twisting Down the Hall - T0SHIII","username":"xXx_T0SHIII_xXx","description":"Work in progress of some tests and things I wanted to try lol  Always open to criticisms and feedback! Mostly just having fun though :)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST 0.001\n\nmat2 Rotate(float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c,-s,s,c);\n}\n\nfloat TexFetch(vec3 p)\n{\n    return texture(iChannel0,p.xz).r;\n}\n\nfloat SphereSDF(vec3 pos, float rad)\n{\n    return length(pos)-rad;\n}\n\nfloat BoxSDF( vec3 p, vec3 b )\n{\n    vec3 d = abs(p) - b;\n    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat Map(vec3 p)\n{\n    p.yz *= Rotate(p.z/30.); // play with the swizzling to get different twisting effects ;P\n    p.xz *= Rotate(p.z/30.);\n//Room Box\n    vec3 boxPos = vec3(0.,3.,0.);\n    vec3 boxLength = vec3(3.,3.,100.);\n    vec3 bP = boxPos - p;\n    float box = BoxSDF(bP,boxLength);\n    box = abs(box)-.2;\n//Columns\n    vec3 boxPos2 = vec3(0,0.,0.);\n    vec3 boxLength2 = vec3(.5,6.,.5);\n    vec3 bP2 = boxPos2 - p;\n    bP2.z -= iTime * 3.;\n    bP2.z = mod(bP2.z,4.)-2.;\n    bP2.x = abs(bP2.x)-2.25;\n    float box2 = BoxSDF(bP2,boxLength2);\n//Window    \n    vec3 boxPos3 = vec3(0.,4.5,2.5);\n    vec3 boxLength3 = vec3(10.,.7,.8);\n    vec3 bP3 = boxPos3 - p;\n    bP3.z -= iTime * 3.;\n    bP3.z = mod(bP3.z,4.)-2.;\n    float box3 = BoxSDF(bP3,boxLength3);\n    \n    float map = min(box,box2);\n    map = max(map,-box3);\n    return map;\n}\n\nfloat Raymarch(vec3 ro, vec3 rd)\n{\n    float dO = 0.;\n    for(int i = 0; i< MAX_STEPS; i++)\n    {\n        vec3 p = ro+rd*dO;\n        float dS = Map(p);\n        \n        if(dS<SURF_DIST || dO>MAX_DIST) break;\n        dO += dS * 0.8;\n    }\n    \n    return dO;\n}\n\nvec3 GetNormals(vec3 p)\n{\n    vec2 e = vec2(0.1,0.);\n    float d = Map(p);\n    vec3 n = d - vec3(Map(p-e.xyy),Map(p-e.yxy),Map(p-e.yyx));\n    return normalize(n);\n}\n\nfloat Lighting(vec3 p, vec3 Lightpos)\n{\n    vec3 ligPos = Lightpos;\n    vec3 ligDir = vec3(-1.,.3,-.7);\n    vec3 n = GetNormals(p);\n    float dif = clamp(dot(ligDir,n),0.,1.);\n    \n    return dif;\n}\n\nfloat Shadow(vec3 ro, vec3 rd, float mint, float maxt, float k)\n{\n    float res = 1.0;\n    float t = mint;\n    for( int i=0; i<16 && t<maxt; i++ )\n    {\n        float h = Map(ro + rd*t);\n        if( h<0.001 )\n            return 0.0;\n        res = min( res, k*h/t );\n        t += h;\n    }\n    return res;\n}\n\nfloat calcAO( in vec3 pos, in vec3 nor )\n{\n\tfloat occ = 0.0;\n    float sca = 1.0;\n    for( int i=0; i<8; i++ )\n    {\n        float h = 0.001 + 0.15*float(i)/4.0;\n        float d = Map( pos + h*nor );\n        occ += (h-d)*sca;\n        sca *= .95;\n    }\n    return clamp( 1.0 - 1.5*occ, 0.0, 1.0 );    \n}\n\nvec3 SceneShading(vec3 p, float d)\n{\n    vec3 n = GetNormals(p);\n    float AO = calcAO(p,n);\n    float fog = d/20.;\n    vec3 fogCol = vec3(1.);\n    vec3 ligPos = vec3(sin(iTime),3.,cos(iTime));\n    vec3 ligDir = normalize(ligPos-p);\n    float Shadows = Shadow(p,ligDir,0.001,3.,16.);\n    float lig = Lighting(p,ligPos);\n    float shadow = Shadow(p,ligDir,0.01,3.,4.);\n    vec3 dif = vec3(lig*AO);\n    //dif *= pow(fog,1.5) * vec3(2.,.5,1.) *2.5;\n    \n    if(d > 70.)\n    {\n        dif = vec3(0.2,0.1,.4);\n    }\n    return dif;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(0.,2,-5);\n    vec3 rd = normalize(vec3(uv.x + cos(iTime) * .4,uv.y,1.));\n    rd.xy *= Rotate(sin(iTime * .6));\n    float d = Raymarch(ro,rd);\n    vec3 p = ro+rd*d;\n    vec3 dif = SceneShading(p,d);\n    vec3 col = vec3(dif);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}