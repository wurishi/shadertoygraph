{"ver":"0.1","info":{"id":"fsyGRw","date":"1631555779","viewed":31,"name":"Shapes NT1","username":"yogo503","description":"For Class","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["idk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec4 number1(vec2 fragCoord, float left, float right, float top, float bottom)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.y/iResolution.x;\n    uv.y *= aspect;\n\n    \n    if(uv.x>left && uv.x<right && uv.y>bottom && uv.y<top)\n        return vec4(0,0,1,1.0);\n    return vec4(0,1,0,1.0);\n}\n\nvec4 number2 (vec2 fragCoord)\n{\n   vec4 returnValue;\n   vec2 uv = fragCoord/iResolution.xy;\n   if(uv.x<.33)\n       returnValue = number1(fragCoord,.15,.25,.35,.25);\n   else if(uv.x<.67)\n   {\n       vec2 Location = vec2(0.5,0.3);\n       float Radius = 0.067;\n       float aspect = iResolution.y / iResolution.x;\n       uv.y *= aspect;\n       if(length(Location - uv) < Radius)\n           returnValue = vec4(0,0,1,1.0);\n       else \n           returnValue = vec4(0,1,0,1.0);\n   }\n   else \n       returnValue = number1(fragCoord,.75,.85,.35,.25);\n   return returnValue;\n}\nvec4 number3 (vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.y/iResolution.x;\n    vec3 bgColor = vec3(0,1,0);\n    vec3 circleCol = vec3(0,0,1);\n    \n    float radius =.1;\n    vec2 center = vec2(.5);\n    center.y *= aspect;\n    uv.y *= aspect;\n    \n    float dist = distance(center,uv);\n    float isOutOfCircle = step(radius,dist);\n    vec3 color = vec3 (isOutOfCircle);\n    \n    return vec4(color,1.0);\n}\n\nvec4 number4 (vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.y/iResolution.x;\n    vec3 bgColor = vec3(0,1,0);\n    vec3 circleCol = vec3(0,0,1);\n    \n    float radius =.1;\n    vec2 center = vec2(.5);\n    center.y *= aspect;\n    uv.y *= aspect;\n    \n    float dist = distance(center,uv);\n    float isOutOfCircle = smoothstep(radius-.002,radius+.002,dist);\n    vec3 color = vec3 (isOutOfCircle);\n    \n    return vec4(color,1.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    fragColor = number1(fragCoord,.45,.55,.55,.45);\n    //fragColor = number2(fragCoord);\n    //fragColor = number3(fragCoord);\n    //fragColor = number4(fragCoord);\n}","name":"Image","description":"","type":"image"}]}