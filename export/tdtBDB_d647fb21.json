{"ver":"0.1","info":{"id":"tdtBDB","date":"1605931287","viewed":59,"name":"My Smiling Face","username":"zhengzhehui","description":"rotating smiling face","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Circle(vec2 uv, vec2 p, float r, float blur) { //参考系，圆心相对位置，半径，边缘模糊范围\n    float circle = length(uv-p);\n    circle = smoothstep(r, r-blur, circle); //确定一个平滑区间，区间外的取值都为0或1\n    return circle;\n\n}\n\nfloat Mask(vec2 uv, vec2 p, float size){  //画笑脸：参考系，圆心相对位置，大小\n    uv -= p;  //移动参考系中心点\n    uv /= size;  //缩放参考系\n    \n    float mask = Circle(uv, vec2(0.0,0.0), .3, 0.01);  //脸\n    mask -= Circle(uv, vec2(-0.12,0.12), .07, 0.01); //左眼\n    mask -= Circle(uv, vec2(0.12,0.12), .07, 0.01);  //右眼\n    float mouth = Circle(uv, vec2(-0.0,-0.08), .15, 0.01);  //嘴\n    mouth -= Circle(uv, vec2(-0.0,-0.1), .15, 0.01);\n    mask += mouth;\n    if(mask > 1.0) mask = 1.0;\n    else if (mask < 0.0) mask = 0.0;  //确保mask的范围在0和1之间\n    return mask;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n\tfloat t = iTime;\n    float size = abs(sin(t)*0.3 + .5);  //大小随时间变化\n    vec2 pos = vec2(sin(t)*0.6, cos(t)*0.4); //做椭圆运动\n    \n\tfloat mask = Mask(uv, pos, size);  //脸\n    vec3 col = vec3(1.,.5,0.5)*mask;  //上色\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}