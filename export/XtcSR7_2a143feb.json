{"ver":"0.1","info":{"id":"XtcSR7","date":"1480088552","viewed":230,"name":"frame compare","username":"majman","description":"trying to compute frame differences","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["frames"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n   \n    vec4 texture = texture(iChannel0,uv);\n    fragColor = vec4(texture.rgb,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nfloat duration = 29.0;\nvec3 colors = vec3(0.0);\n\nvec3 blendExclusion(vec3 base, vec3 blend) {\n  return base+blend-2.0*base*blend;\n}\n\nvec3 blendDifference(vec3 base, vec3 blend) {\n  return abs(base-blend);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float time = iTime * 0.1;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uv0 = uv;\n    float grid = 2.0;\n    float ratio = 1.0/grid;\n    \n    vec2 uv2 = vec2(uv.x - ratio, uv.y);\n\n    if(uv.x < ratio) { \n      uv2 = vec2(uv.x + (grid - 1.0)/grid, uv.y - ratio);\n    }\n\n    if(uv.x < ratio && uv.y < ratio){\n      // draw original\n      uv = fract(uv * grid);\n      colors = texture(iChannel0, uv).rgb;\n    }else {\n      // draw copies\n      colors = texture(iChannel1, uv2).rgb;\n    }\n      \n\n    uv = fract(uv0 * grid);\n    vec3 colors0 = texture(iChannel0, uv).rgb;\n    vec3 colors1 = texture(iChannel1, uv2).rgb;\n    vec3 colorsDiff = blendDifference(colors0, colors1);\n\n    if(uv0.y > 0.5){\n      colors = vec3(0.0);\n      if(uv0.x < 0.5){\n        colors = colorsDiff;\n      }\n    }\n\n    fragColor = vec4(colors,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}