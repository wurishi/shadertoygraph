{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nconst float PI = 3.141592654;\nconst float N_ITERATIONS = 50.0;\n\nfloat usin(float t) {\n\treturn sin(t) * 0.5 + 0.5;\n}\n\nfloat orb(float x0, float freqMul, float amp, float aspect, vec3 pos, float glow, float ampFreq) {\n\tfloat c = 0.0;\n\tfloat s = sin(iTime*ampFreq);\n\tfor (float i = 0.0; i < N_ITERATIONS; i++) {\n\t\tfloat freq = freqMul*(i+1.0)/N_ITERATIONS;\n\t\tfloat x = x0+i/N_ITERATIONS;\n\t\tfloat y = 0.5 + s*sin(freq*iTime)*amp;\n\t\t\n\t\tvec3 circPos = vec3(x*aspect, y, 1.0);\n\t\tfloat f = 0.17;\n\t\n\t\tfloat sinTime = 1.0-usin(iTime)*0.3;\n\t\tfloat dx = pos.x - circPos.x;\n\t\tfloat dy = pos.y - circPos.y;\n\t\tfloat d = glow*(dx*dx + dy*dy);\t\t\n\t\tc += f/(d*50.*sinTime);\n\t}\n\t\n\treturn c;\n}\n\nvec4 bgColor(vec3 pos, vec2 fragCoord) {\n\tfloat f = fragCoord.y;\n\tf = float(mod(f/1.0, 3.0));\n\t\n\tfloat t = usin(iTime);\n\tvec4 c0 = vec4(1.0, 1.0, 1.0, 1.0);\n\tvec4 c1 = vec4(0.5, 0.5, 0.0, 1.0);\n\tvec4 c = mix(c0, c1, t);\n\t//c = vec4(1.0, 1.0, 1.0, 1.0);\n\treturn c*f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat aspect = iResolution.x / iResolution.y;\n\tvec3 pos = vec3(fragCoord.xy / iResolution.xy, 1.0);// * 2.0 - vec2(1.0);\n\tpos.x *= aspect;\n\t\n\tconst float amp = 0.3;\n\tconst float x0 = 0.5/N_ITERATIONS;\n\t\n\tfloat r = orb(x0, 0.3, amp, aspect, pos, 2.5, 0.5);\n\tfloat g = orb(x0, 0.6, amp, aspect, pos, 4.5, 0.75);\n\tfloat b = orb(x0, 0.9, amp, aspect, pos, 6.5, 0.5);\t\n\t\n\tfloat p = usin(iTime*1.2)*0.5+0.5;\n\tfloat q = 1.5 - p;\n\tvec4 color = vec4(r, q*g, p*b, 1.0);\n\tvec4 bg = bgColor(pos, fragCoord);\n\tcolor *= bg;\n\tcolor *= 1.0 - usin(2.0*iTime)*0.1;\n\t\n\tfragColor = color;\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldSGDm","date":"1389315236","viewed":683,"name":"Harmonic pixels","username":"rafacacique","description":"Very simple shader: interleaving waves of R, G and B \"orbs\", modulated by a scanline-like pattern.","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["2d","waves"],"hasliked":0,"parentid":"","parentname":""}}