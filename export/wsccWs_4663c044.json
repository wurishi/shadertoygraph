{"ver":"0.1","info":{"id":"wsccWs","date":"1601974819","viewed":411,"name":"Hacking - Matrix","username":"shadermonkey","description":"Matrix effect\nUsing the custom texture below will display number instead, remember to change the limit to .1 if use this texture.\nhttps://www.projection-components.co.uk/ekmps/shops/trxgirl1/images/race-numbers-white-black-or-blue--877-p.jpg","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["math","number","shader","green","matrix","hacking","coding","programming","hacker","whitehacker","blackhacker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hackGreen = vec3(0.,.3,0.);\nfloat limit = .5; // Change this value to .1 if use custom texture ( link below)\n//  https://www.projection-components.co.uk/ekmps/shops/trxgirl1/images/race-numbers-white-black-or-blue--877-p.jpg\nstruct Ray{\n    vec3 o;\n    vec3 d;\n};\nRay GetRay(vec2 uv, vec3 camPos, vec3 dir, float zoom){\n    Ray r;\n    r.o = camPos;\n    vec3 f = normalize(dir);\n    vec3 right = cross(vec3(.0,1.,.0), f);\n    vec3 u = cross(f,right);\n    \n    vec3 c = r.o + f*zoom;\n    vec3 i = c + uv.x *right + uv.y *u;\n    r.d = normalize(i -r.o);\n    return r;\n}\n\nvec4 GetPlane(vec3 n, vec3 p){\n    n = normalize(n);\n    float D = dot(n,p);\n    return vec4(n, D);\n}\n\nvec3 GetPointOnPlane(vec4 S, vec2 p){\n    return vec3(p.xy,(S.w-dot(S.xy,p))/S.z);\n}\n\nvec3 GetIntersectionPoint(Ray r, vec4 S){\n    float t = - (dot(r.o,S.xyz) + S.w)/(dot(r.d, S.xyz));\n    return r.o + t*r.d;\n}\n\nfloat SetNumber(Ray ray, int num, vec4 S, vec2 p,float size){\n    if(num < 0 || num > 9) return -1000000.;\n    //set Origin\n    float y;\n    float x;\n    if(num <= 4) {\n        y = .75;\n        x =  .1 + float(num) * .2;\n    } else {\n        y = .25;\n        x =  .1 + float(num - 5) * .2;\n    }\n    vec3 P = GetPointOnPlane(S,p);\n    vec3 c = vec3(x,y,P.z); // centre of the number\n    \n    //Cut boxes\n   \tvec3 ip = GetIntersectionPoint(ray, S);\n    vec3 d = ip - P;\n    d/= size;\n    if(abs(d.x) > .085) return 0.;\n    if(abs(d.y) > .235) return 0.;\n    \n    //Set color\n    vec3 st = c + d;\n   \tvec4 tex = texture(iChannel0, st.xy);\n    if(tex.x < limit && tex.y < limit && tex.z < limit){\n        return 1.;\n    } else return 0.;\n}\n\nfloat RandomFloat(float v){\n    return fract(cos(v*84.42)*343.42);\n}\nint RandomNumber(float v){ // 0 - 9\n    return int(RandomFloat(v)*10.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Init\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(.5);\n    vec3 col = vec3(0.,.05,0.);\n    Ray ray = GetRay(uv, vec3(0.,0.,-10), vec3(0.,0.,1.), 1.);\n    float t = iTime;\n    float X = 7.;\n    float Y = 7.;\n    \n    for(float i = -X; i <= X; i+= .25){\n        float v = float(RandomNumber(i))/2. + 2.;\n        vec4 Surface = GetPlane(vec3(.5,-.0,-1.), vec3(0.,0.,0.));\n        bool isFade = RandomFloat(sin(i)) > 0.5;\n        float minY = RandomFloat(cos(i)) * Y ;\n        if(RandomFloat(sin(i*i)) > .5) minY*= -1.;\n        for(float j = -Y; j < Y; j += .5){\n            float y =j-v*t;\n            if(y < -Y){\n                y = ceil(abs(y + Y)/(Y*2.))*(Y*2.) + y;\n            }\n            vec3 color;\n            float k = t * 2.;\n            bool isLight = RandomFloat(tan(i - j) + (k - fract(k))) > 0.95;\n            color = isLight ? vec3(0.,1.,0.) : hackGreen ;\n            color *= (y - minY)/Y + hackGreen;\n            col += SetNumber(ray, RandomNumber(sin(i + j) - cos(i - j)), Surface, vec2(i,y), 1.) * color;\n        }\n    }\n    \n    //col = texture(iChannel0, uv).xyz;\n    //vec2 pos = vec2(iMouse.x, iMouse.y)/iResolution.xy;\n    //if(length(pos-uv) <.01) col += vec3(1.,0.,0.);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}