{"ver":"0.1","info":{"id":"XtdyRr","date":"1531316337","viewed":863,"name":"Hello-Shadertoy","username":"eqs","description":"This is my first shader on Shadertoy.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float aspectRatio = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pt = uv - 0.5;\n    pt.x *= aspectRatio;\n\t\n    float a = atan(pt.y / pt.x);\n    \n    float r1 = length(pt) + 0.025 * sin(a * 10.0 + iTime * 2.0);\n    float f1 = pow(sin(r1 * 10.0 - iTime + 1.5 * sin(iTime * 0.1)), 6.0);\n    float r2 = length(pt) + 0.025 * sin(a * 12.0 - iTime * 6.0);\n    float f2 = pow(sin(r2 * 10.0 - iTime + 0.5 * sin(iTime)), 6.0);\n    float r3 = length(pt) + 0.025 * sin(a * 6.0 - iTime * 6.0);\n    float f3 = pow(sin(r3 * 10.0 - iTime + sin(iTime * 1.5)), 6.0);\n    \n    \n    vec3 col = vec3(f1, f2, f3);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}