{"ver":"0.1","info":{"id":"wllXWf","date":"1564844363","viewed":297,"name":"Barrel lens distortion PS#01","username":"stoleckipawel","description":"Lens distortion practise.\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["lensdistortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PIXELSIZE 15.0\n#define GRIDSIZE 5.0\n\nvec3 gridColor = vec3(0.0, 0.0, 0.0);\nvec3 color = vec3 ( 0.4, 0.4, 0.4);\nfloat barrelContrast = 1.0;\n\nvoid MakeGrid (vec2 uv)\n{\n    vec2 moduloXY = mod(uv.xy, PIXELSIZE);\n\n    //grid mask\n    if(moduloXY.x <GRIDSIZE || moduloXY.y<GRIDSIZE)\n    {\n    color.x= gridColor.x;\n    color.y= gridColor.y;\n    color.z= gridColor.z;\n    }\n}\n\nvec2 BarrelDistortion (vec2 uv)\n{\n    //angle \n    float theta = atan(uv.y, uv.x);\n    //ammount\n    float anim_effect_1 = ((sin (iTime + 0.3))*0.005);\n    float radius = length(uv) + anim_effect_1;\n    //contrast\n    radius = pow(radius, barrelContrast);\n    \n    uv.x = radius * cos(theta);\n    uv.y = radius * sin(theta);\n    color.r = 0.5 * (uv.y +1.0);\n    color.b = radius;\n    return 0.5 * (uv + 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n \t\n    //animation\n    barrelContrast += (((sin(iTime) + cos(cos(iTime)))/2.0)-0.5);\n    //screen coord\n    vec2 normalizedUV = (fragCoord.xy/(iResolution.xy/2.0)) -1.0;\n    vec2 distortedUV = BarrelDistortion(normalizedUV)* iResolution.xy;\n    MakeGrid(distortedUV.xy);\n    \n   \n    fragColor = vec4( color, 1.0);\n}","name":"Image","description":"","type":"image"}]}