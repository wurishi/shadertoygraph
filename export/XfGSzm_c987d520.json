{"ver":"0.1","info":{"id":"XfGSzm","date":"1715255701","viewed":40,"name":"sumOfSines_fbm","username":"sunohonmy","description":"sum of sines fbm","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fbm","sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, in vec2 I )\n{\n    // 1st try?    \n    \n    vec2 uv = (2.*I - iResolution.xy)/iResolution.y;\n    vec2 noise;// noised;\n    \n    float iA = 1.0 \n    ,dR = 0.82\n    ,iF = 1.0 \n    ,fM = 1.18, i, Nnoise;\n    \n    for(; i++ < 5.;)\n    {\n        noise += exp2(iA * sin( iF * uv * 10.  + iTime * iF));\n        //noised.x += dFdx(noise.x); noised.y = dFdy(noise.y);\n        iA *= dR;\n        iF *= fM;\n        uv *= m2;\n        Nnoise = smoothstep((noise.x + noise.y), 0.1, 3.);\n    }\n\n    \n    O = vec4(vec3(Nnoise), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const mat2 m2 = mat2( 0.80, -0.60, 0.60, 0.80 );\nvec2 N(vec2 p)\n{\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34, 345.65));\n    a+= dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nfloat R(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))*43758.5453123);\n}\n\n// Simplex 2D noise\n//\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nfloat map(float value, float inMin, float inMax, float outMin, float outMax) {\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\n}\n\n    //colours\n    //vec3 dSC = vec3(0.0, 0.2, 0.4);\n    //vec3 lSC = vec3(0.6, 0.8, 1.0);\n\n    // Normalize the result to [0,1] and output as a color\n    //float Nnoise = clamp((noise.x + noise.y) * 0.5 + 0.5, 0.0, 1.0);\n    //float Nnoise = map((noise.x + noise.y), 2., 10., 0.0, 1.0);\n    \n    //vec3 sC = mix(dSC, lSC, Nnoise);\n    \n    \n    // 2nd try?\n    /*\n    vec3 p = vec3(2.*I - iResolution.xy, iResolution)/iResolution.y, d = vec3(0.);\n    p.zy *= mat2(cos(.6), -sin(.6),\n                 sin(.6), cos(.6));\n    float i, s, iA = 1.0 \n    ,dR = 0.82\n    ,iF = 1.0 \n    ,fM = 1.18;\n    \n    for(;i++<10.;\n        d += exp(iF * sin(vec3(R(vec2(i*12.34, i*42.43)))* iF * p * 100.  + iTime * .5 * iF * (i+1.)))\n    );\n    */\n    \n    // 3rd try?\n    /*\n    vec2 uv = (2.*I - iResolution.xy)/iResolution.y;\n    vec3 p = vec3(uv, 0.), d;\n    float i, a = 1., dR = .82, f = 1., fM = 1.18, s = .5 * f;\n    \n    for(;i++<6.;\n        d += a * sin(vec3(R(vec2(i*12.35, i*25.67))) * p * 100. * f + iTime * s), \n        a *= dR, f *= fM\n    )\n    */","name":"Common","description":"","type":"common"}]}