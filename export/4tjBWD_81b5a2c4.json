{"ver":"0.1","info":{"id":"4tjBWD","date":"1515824041","viewed":165,"name":"2D Wave","username":"shemit","description":"2D waves","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 pixify(vec2 uv, vec2 res, float splits) {\n    float pix = ceil(uv.x * 1.0 * (res.x / res.y) * splits) / splits ;\n    float piy = ceil(uv.y * 1.0 * splits) / splits;\n    \n    return vec2(pix, piy);\n}\n\nfloat wavify(vec2 uv, vec2 res, float time, float amt) {\n    vec2 grid = iResolution.xy / amt;\n    float speed = 3.0;\n    \n    float splits = 10.0;\n    float threshold = 0.01;\n    float wav = (mod(uv.y * grid.y + (sin(uv.x * 30.0 + 3.0 * sin(time * speed))) + iTime * speed * 5.0, splits) + threshold) / splits;\n    \n    //return round(wav);\n    return wav;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n\tvec2 uv = fragCoord / res;\n    vec2 pixuv = pixify(uv, res, 35.0);\n    float wav = wavify(pixuv, res, iTime, 10.0);\n    \n    float wav2 = 0.5 + abs(sin(uv.x + iTime)) * wav;\n    float invwav = 1.0 - wav2;\n    \n    vec3 wavelite = vec3(169.0, 232.0, 220.0);\n    vec3 wavedark = vec3(2.0, 132.0, 168.0);\n    \n    fragColor = vec4((invwav * wavelite + wav * wavedark) / 255.0, 1.0);\n    //fragColor = vec4(pixuv, 0.0, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}