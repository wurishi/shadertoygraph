{"ver":"0.1","info":{"id":"fdy3zc","date":"1631838088","viewed":52,"name":"Spinning Flower ND","username":"ndevlin","description":"A spinning, morphing flower","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spinningflower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n// Make a vec3 color from rgb values [0, 255]\nvec3 rgb(float r, float g, float b)\n{\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Default Color\n    fragColor = vec4(rgb(255.0, 255.0, 210.0), 1.0);\n    \n    float aspectRatio = iResolution.x / iResolution.y;\n    \n    vec2 center = vec2(0.5, 0.5);\n    \n    uv.x *= aspectRatio; // Make circular\n    \n    uv.x -= 0.4; // Shift back to center\n    \n    vec2 uvCentered = uv - 0.5;\n    \n    \n    float theta = atan(uvCentered.x, uvCentered.y);\n    \n    float radiusAtPoint = 0.3;\n    \n    float modifiedTime = sin(iTime);\n    \n    \n    float radiusAtPoint1 = 0.2 + sin(fract(3.0 * (theta * modifiedTime + iTime) / (3.14159))) / 3.0;\n    \n    \n    float radiusAtPoint2 = 0.2 + sin(1.0 - fract(3.0 * (theta * modifiedTime + iTime) / (3.14159))) / 3.0;\n\n\n    \n    if(length(uv - center) < max(radiusAtPoint1, radiusAtPoint2))\n    {\n        fragColor.y = 0.0;\n        fragColor.z = 0.0;\n    }\n\n}\n\n","name":"Image","description":"","type":"image"}]}