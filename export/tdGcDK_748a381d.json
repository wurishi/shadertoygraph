{"ver":"0.1","info":{"id":"tdGcDK","date":"1603745232","viewed":79,"name":"Mandelbrot set 123123","username":"serjio123123","description":"Quick and dirty Mandelbrot set animation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float animatedTime = max(0.0,abs(sin(iTime/20.0))*13.0 - 2.0);\n    \n    float zoom    =       pow(3.0,animatedTime) * 0.7;\n    \n    vec2 position = vec2(  \n        \t\t\t\t\t\t-0.74364386269,\n                                0.13182590271\n                              );\n    \n    \n    float iterations =      20.0 + animatedTime*80.0;\n    \n    \n    \n    const float limit = 1e+6;\n    \n    vec2 uv = fragCoord/iResolution.y;\n    uv -= iResolution.xy/iResolution.y * 0.5;\n    uv*=2.0;\n    \n    //uv is now in [-1,1][-1,1]\n    \n    \n    \n    uv /= zoom;\n    uv += position;\n    \n    vec2 complex = uv;\n    int i = 0;    \n    for(;float(i)<iterations;i++){\n        \n        float temp = complex[1]*complex[0]*2.0;\n        complex[0] = complex[0]*complex[0]-complex[1]*complex[1];\n        \n        complex[1]=temp;\n        \n        complex+=uv;\n        \n        \n        if ((abs(complex[0])>limit)||(abs(complex[1])>limit))\n            break;\n    }\n    \n    float fractured_steps = 0.5 - 0.5*log(complex[0]*complex[0]+complex[1]*complex[1])/log(limit);\n    \n    float color = (float(i) + fractured_steps )/(float(iterations)+8.0);\n\n    fragColor = vec4(color,color,color,1.0);\n}","name":"Image","description":"","type":"image"}]}