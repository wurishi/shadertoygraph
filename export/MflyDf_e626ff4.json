{"ver":"0.1","info":{"id":"MflyDf","date":"1721722793","viewed":38,"name":"fog blanket ","username":"laside777","description":"optimized fog blanket ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fog"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float scale = 5.0;\n\nconst float strength = 1.99;\n\n\nfloat random(float x) {\n    return fract(sin(x) * 10000.0);\n}\n\nfloat noise(vec2 p) {\n    return random(p.x + p.y * 10000.0);\n}\n\nvec2 sw(vec2 p) { return vec2(floor(p.x), floor(p.y)); }\nvec2 se(vec2 p) { return vec2(ceil(p.x), floor(p.y)); }\nvec2 nw(vec2 p) { return vec2(floor(p.x), ceil(p.y)); }\nvec2 ne(vec2 p) { return vec2(ceil(p.x), ceil(p.y)); }\n\nfloat smoothNoise(vec2 p) {\n    vec2 interp = smoothstep(0.0, 1.0, fract(p));\n    float s = mix(noise(sw(p)), noise(se(p)), interp.x);\n    float n = mix(noise(nw(p)), noise(ne(p)), interp.x);\n    return mix(s, n, interp.y);\n}\n\nfloat fractalNoise(vec2 p) {\n    float n = 0.0;\n    n += smoothNoise(p);\n    n += smoothNoise(p * 2.0) / 2.0;\n    n += smoothNoise(p * 4.0) / 4.0;\n    n += smoothNoise(p * 8.0) / 8.0;\n    n += smoothNoise(p * 16.0) / 16.0;\n    n /= 1.0 + 1.0 / 2.0 + 1.0 / 4.0 + 1.0 / 8.0 + 1.0 / 16.0;\n    return n;\n}\n\nfloat smokeDensity(vec2 p, float scale, float time, float strength) {\n    float n = fractalNoise(p * scale + vec2(time * 2.1, time * 0.1));\n    // Aseguramos que la niebla cubra toda la pantalla\n    float density = max(0.0, exp(-length(p) * 1.5) * n * strength);\n    return density;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 text = fragCoord.xy / iResolution.xy;\n\n    // Ajustes del humo\n    float time = iTime;\n\n    // Generar el patr√≥n de niebla\n    vec2 p = uv * 2.0 - 1.0; // Normalizar las coordenadas\n    float density = smokeDensity(p, scale, time, strength);\n\n    // Ajustar color y opacidad\n    vec3 color = vec3(0.9, 0.9, 0.9) * density; // Color de la niebla\n    float blur = smoothstep(0.0, 0.0, density); // Difuminado ajustado\n    \n    fragColor = vec4(color, blur) + texture(iChannel0, text); // Color final\n}","name":"Image","description":"","type":"image"}]}