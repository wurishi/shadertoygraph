{"ver":"0.1","info":{"id":"lfccDs","date":"1731340835","viewed":23,"name":"projection WIP - HELP WANTED","username":"gabrieloc","description":"I'm trying to draw 3 circles on each plane, rotating around the up axis","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","projection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float orthoSize = 5.;\nfloat tilt = -30.;\n\nmat3 rotMat(vec3 a) {\n  float c = cos(a.x);\n  float s = sin(a.x);\n  float c2 = cos(a.y);\n  float s2 = sin(a.y);\n  float c3 = cos(a.z);\n  float s3 = sin(a.z);\n  return mat3(\n    c2*c3, -c2*s3, s2,\n    c*s3 + c3*s*s2, c*c3 - s*s2*s3, -c2*s,\n    s*s3 - c*c3*s2, c*s2*s3 + c3*s, c2*c\n  );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = fragCoord/iResolution.xy;\n  \n  // scaled UVs to orthographic size\n  vec2 screenPos = (uv - 0.5) * vec2(1, iResolution.y/iResolution.x) * orthoSize * 2.0;\n  \n  // isometric projection rotating around the up axis\n  mat3 inverseViewRotation = rotMat(radians(vec3(tilt, iTime*10., 0.0)));\n  \n  // i can't just do this can i?\n  vec3 positionWS = inverseViewRotation * vec3(screenPos, 0.0);\n\n  vec4 c = vec4(0.,0.,0.,1.);\n\n  // the grid for debug\n  c = max(c,vec4(abs(fract(positionWS)), 1.) * 0.2);\n  \n  // this should be 3 circles at world origin on each plane\n  // they distort and stretch instead of retaining a constant size\n  c = max(c, smoothstep(0.1, 0.0, abs(length(positionWS.xy) - 0.5)));\n  c = max(c, smoothstep(0.1, 0.0, abs(length(positionWS.xz) - 0.5)));\n  c = max(c, smoothstep(0.1, 0.0, abs(length(positionWS.zy) - 0.5)));\n  fragColor = c;\n}\n","name":"Image","description":"","type":"image"}]}