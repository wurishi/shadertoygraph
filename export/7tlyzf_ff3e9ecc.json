{"ver":"0.1","info":{"id":"7tlyzf","date":"1648491410","viewed":137,"name":"game of life 3d","username":"lwswl","description":"3d life","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["raymarch","life"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float vol(vec3 p){\n    if(p.y>32.0||p.x>32.0||p.z>32.0||p.x<0.0||p.z<0.0||p.y<0.0)return 0.;\n    int id=int(p.x+p.y*32.0+p.z*32.0*32.0);\n    return texelFetch(iChannel0,ivec2(id%200,id/200),0).r;\n}\n#define rot(x) mat2(cos(x),sin(x),-sin(x),cos(x))\nvoid mainImage( out vec4 col, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.x;\n    vec3 d=vec3(0,0,-1.);\n    d.xz*=rot(uv.x*3.);\n    d.yz*=rot(-uv.y*3.);\n    vec3 o=vec3(0,0,32);\n    o.yz*=rot(0.5);\n    d.yz*=rot(0.5);\n    \n    if(iMouse.z<0.01){\n        d.xz*=rot(iTime*0.1);\n        o.xz*=rot(iTime*0.1);\n    }\n    else{\n        d.xz*=rot(iMouse.x*0.01);\n        o.xz*=rot(iMouse.x*0.01);\n    }\n    col=texelFetch(iChannel0,ivec2(fragCoord),0);\n    col=vec4(0.3,0.7,0.8,1.0);\n    float t,x;\n    for(t=-0.5,x=0.1;t<64.;t+=0.1*clamp(t,0.01,1.0)){\n        if(vol(floor(o+d*t)+vec3(16,16,16))>0.0)break;\n    }\n    \n    if(t<64.){\n        o=o+d*t;\n        vec3 normal=normalize(mod(o-0.1*clamp(t,0.01,1.0),1.));\n        if(normal.x>normal.y&&normal.x>normal.z)normal=vec3(ceil(normal.x),0,0);\n        else if(normal.y>normal.z&&normal.y>normal.z)normal=vec3(0,ceil(normal.y),0);\n        else if(normal.z>normal.y||normal.z>normal.x)normal=vec3(0,0,ceil(normal.z));\n        normal*=sign(-d);\n        \n        col*=vec4(0.1,0.9,0.1,1);\n        col+=abs(dot(normal,vec3(0.5,0.2,0.1))*0.25)*vec4(1,1,1,1); \n        d=vec3(0.5,0.2,0.1);\n        for(t=1.0;t<40.;t+=0.5){\n            if(vol(floor(o+normal*t)+vec3(16,16,16))>0.0)break;\n        }\n        if(t<40.)col-=0.1/t;\n        \n        \n    }\n    col=sqrt(col);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float vol(ivec3 p){\n    //if(p.x>32||p.z>32||p.x<0||p.z<0||p.y>32||p.y<0)return 0.;\n    p=p%32;\n    int id=p.x+p.y*32+p.z*32*32;\n    return texelFetch(iChannel0,ivec2(id%200,id/200),0).r;\n}\n\nfloat hash(vec3 p){\n    return fract(sin(dot(p,vec3(23.4,32.6,86.2)*p.yxz+iDate.w))*2233.1223);\n\n}\nvoid mainImage( out vec4 col, in vec2 fragCoord )\n{\n\n    ivec2 co=ivec2(fragCoord);\n    int id=co.x+co.y*200;\n    if(co.x>=200)discard;\n    ivec3 p=ivec3(id%32,(id/32)%32,id/(32*32));\n    if(p.z>32)discard;\n    if(iFrame==0){\n        col=vec4(0);\n        col+=floor(hash(vec3(p))+0.2);\n        \n    }else if(iFrame%2!=0)col=vec4(vol(p));\n    else{\n        col=vec4(0);\n        col+=vol(p);\n        float detail=0.0;\n        for(int i=-1;i<=1;i++)\n        for(int j=-1;j<=1;j++)\n        for(int k=-1;k<=1;k++){\n            if(i==0&&j==0&&k==0)continue;\n            detail+=vol(p+ivec3(i,j,k));\n        \n        }\n        if(detail==3.0&&col==vec4(1.0))col=vec4(1);\n        else if(detail==5.0)col=vec4(1);\n        \n        else col=vec4(0);\n    \n    \n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}