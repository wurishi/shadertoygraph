{"ver":"0.1","info":{"id":"DsKcRy","date":"1696263582","viewed":137,"name":"CyberPunk","username":"butadiene","description":"raymarching","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nmat2 rot(float r){\n  return mat2(cos(r),sin(r),-sin(r),cos(r));\n}\n\nfloat cube(vec3 p, vec3 s){\n  vec3 q = abs(p);\n  vec3 m = max(s-q,0.0);\n  return length(max(q-s,0.0))-min(min(m.x,m.y),m.z);\n}\n\nvec2 pmod(vec2 p, float n){\n  float np = 2.0*3.141592/n;\n  float r = atan(p.x,p.y)-0.5*np;\n  r = mod(r,np)-0.5*np;\n  return length(p)*vec2(cos(r),sin(r));\n}\n\nvec4 dist(vec3 p){\n  float scale = 1.0;\n  p.yz *= rot(p.x*0.9-0.2*iTime);\n  \n  p.yz = pmod(p.yz,5.0);\n  p.x -= 0.4*iTime;\n  float ks = 2.8;\n  p = mod(p,ks)-0.5*ks;\n  \n  float d1 = cube(p, vec3(scale));\n  float d = d1;\n  vec3 col2 = vec3(0.);\n  for(int i = 0;i<5;i++){\n    float d2 = cube(p,vec3(10.0*scale,scale/3.0,scale/3.0));\n    float d3 = cube(p,vec3(scale/3.0,10.0*scale,scale/3.0));\n    float d4 = cube(p,vec3(scale/3.0,scale/3.0,10.0*scale));\n    float d234 = min(min(d2,d3),d4);\n    float k = 1.5*scale/1.5; \n    p = mod(p,k)-0.5*k;\n    scale /= 2.8;\n    d = max(d,-d234);\n    col2 += exp(-1.0*d)*vec3(0.04,0.01,0.04)*float(i);\n  }\n  vec3 col = vec3(0.01,0.04,0.04)*exp(-2.0*d) + 0.06*col2;\n  return vec4(col,d);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 r = iResolution.xy;\n    vec2 p=(fragCoord.xy*2.-r)/min(r.x,r.y);\n\n    vec3 tar = vec3(0.0,0.0,0.0);\n    float radius = 0.1;\n    float theta = iTime*0.;\n\n    vec3 cpos = vec3(radius*cos(theta),0.0,radius*sin(theta));\n\n    vec3 cdir = normalize(tar - cpos);\n    vec3 side = cross(cdir,vec3(0,1,0));\n    vec3 up = cross(side,cdir);\n    float fov = 0.2;\n\n    vec3 rd = normalize(p.x*side + p.y*up + fov * cdir);\n\n    float d = 0.0;//distance\n    float t = 0.0;//total distance\n    vec3 pos = cpos;\n    vec4 rsd = vec4(0.0);\n    vec3 ac = vec3(0.0);\n\n    for(int i = 0;i<50;i++){\n      rsd = dist(pos);\n      d = rsd.w;\n      t += d;\n      pos = cpos + rd*t;\n      ac += rsd.xyz;\n      if(d<0.000001)break;\n    }\n\n    vec3 col = ac*1.2*exp(-0.6*t);\n\n    col = clamp(col,0.0,1.0);\n    col = pow(col,vec3(1.4));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}