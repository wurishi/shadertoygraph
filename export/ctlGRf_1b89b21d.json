{"ver":"0.1","info":{"id":"ctlGRf","date":"1672160255","viewed":96,"name":"My Four Point Gradient (OpenToC)","username":"Arternum","description":"Control point A and B positions by Mouse.xy\nMouse.x - point A\nMouse.y - point B\n\n+ Remap function additional\n+ Sinus smoothstep additional","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gradient","palette","lerp","smoothstep","point"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sinstep(float c){return sin(c*3.1416-1.5708)*0.5+0.5;}//Really cool&cheap func\nfloat estep(float c, float x){return 1./(1.+exp(5.*x-10.*c*x));}\n\nfloat Remap(float val, vec2 orig, vec2 dest){\n                float t = (val - orig.x)/(orig.y - orig.x);\n                return mix(dest.x, dest.y, t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float c = mix(0., 1., uv.x); //IN value\n    \n    vec3 color;\n    vec3 c1 = vec3(0.27, 0.30, 0.36); //First Color\n    vec3 c2 = vec3(0.50, 0.60, 0.60); //Second Color\n    vec3 c3 = vec3(0.50, 0.40, 0.50); //Third Color\n    vec3 c4 = vec3(0.80, 0.68, 0.60); //Fourth Color\n    \n    float a=iMouse.x/iResolution.x, b=iMouse.y/iResolution.y;\n    \n    if(c<=a){\n        color = mix(c1, c2, sinstep(Remap(c, vec2(0., a), vec2(0., 1.))));\n    }\n    if(c>a && c<b){\n        color = mix(c2, c3, sinstep(Remap(c, vec2(a, b), vec2(0., 1.))));\n    }\n    if(c>=b){\n        color = mix(c3, c4, sinstep(Remap(c, vec2(b, 1.), vec2(0., 1.))));\n    }\n\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n    //fragColor = vec4(vec3(c),1.0);\n}","name":"Image","description":"","type":"image"}]}