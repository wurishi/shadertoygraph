{"ver":"0.1","info":{"id":"3scyDB","date":"1601592729","viewed":192,"name":"INKTtober - River","username":"Flopine","description":"First day of the Inktober challenge! For 2020 I'm using the Inkt-Tober list: https://twitter.com/Trish_Argh/status/1304878524797419525","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","raymarching","fish","isometric","twitch","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.07,fwidth(val-thre)))\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nstruct obj \n{\n    float d;\n    int mat_id;\n};\n\nobj obj_min (obj a, obj b)\n{\n    if (a.d < b.d) return a;\n    else return b;\n}\n\nfloat box (vec3 p, vec3 c)\n{\n    vec3 q = abs(p)-c;\n    return min(0.,max(q.x,max(q.y,q.z)))+length(max(q,0.));\n}\n\nobj ground (vec3 p)\n{\n    float gd = max(-box(p-vec3(0.,0.3,0.),vec3(1.,0.4,3.)),box(p, vec3(1.4,0.4,2.5)));\n    return obj(gd,1);\n}\n\nobj river (vec3 p)\n{\n    float b1 = box(p,vec3(1.,0.3,2.5));\n    p.y += texture(iChannel0, p.xz*vec2(0.2,0.02)+vec2(0.,iTime*0.1)).r*0.2;\n    float rd = max(b1,box(p,vec3(1.,0.3,1e10)));\n    float per = 0.12;\n    return obj(rd,2);\n}\n\nvec3 pp;\nobj SDF (vec3 p)\n{\n    p.yz *= rot(-atan(1./sqrt(2.)));\n    p.xz *= rot(PI/4.);\n    pp = p;\n    return obj_min(ground(p), river(p)); \n}\n\nvec3 getnorm (vec3 p)\n{\n    vec2 eps = vec2(0.001,0.);\n    return normalize(SDF(p).d-vec3(SDF(p-eps.xyy).d,SDF(p-eps.yxy).d,SDF(p-eps.yyx).d));\n}\n\nfloat equitri (vec2 p, float r)\n{\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/sqrt(3.);\n    if (p.x+sqrt(3.)*p.y>0.) p=vec2(p.x-sqrt(3.)*p.y,-sqrt(3.)*p.x-p.y)/2.;\n    p.x -= clamp( p.x, -2.*r, 0. );\n    return -length(p)*sign(p.y);\n}\n\nfloat fish (vec2 uv)\n{\n    vec2 uu = uv;\n    float s = 0.08;\n    uv.y = abs(uv.y)-(s/sqrt(3.));\n    float mask = AAstep(0.01,equitri(uv, s));\n\n    uv = uu;\n    uv.y += s*sqrt(8.);\n    mask *= AAstep(0.01,equitri(uv, s));\n\n    return mask;\n}\n\nfloat background (vec2 uv)\n{\n    vec2 per = vec2(0.8);\n\n    vec2 ga = mod(uv, per)-per*0.5;\n    vec2 gb = mod(uv-per*0.5,per)-per*0.5;\n    vec2 guv = (dot(ga,ga)<dot(gb,gb)) ? ga:gb;\n    vec2 gid = uv-guv;\n    float a = PI/2. + (sign(sin(iTime*PI)))*PI/6.;\n    guv = (mod((gid.y+0.01)*2.,2.) < 0.5) ? guv*rot(a) : guv*rot(-a);\n\n    return fish(guv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    vec3 ro = vec3(uv*2.,-30.),\n        rd = vec3(0.,0.,1.),\n        p = ro,\n        l = normalize(vec3(1.,2.,-2.)),\n        col = (background(uv*1.5)<0.5) ? vec3(1.,0.3,0.2) : vec3(0.8,0.7,0.1);\n\n    bool hit = false; obj O;\n    for (float i=0.; i<64.; i++)\n    {\n        O = SDF(p);\n        if (O.d<0.001)\n        {\n            hit = true;\n            break;\n        }\n        p += O.d*rd;\n    }\n\n    if (hit)\n    {\n        vec3 n = getnorm(p);\n        float light = max(dot(n,l),0.);\n        float secondlight = dot(n,l)*.5+0.5;\n        float red = (pp.y<0.) ? 0.8 : 0.1;\n        if (O.mat_id == 1) col = secondlight*vec3(clamp(red,0.,1.),0.8,0.2);\n        else if(O.mat_id == 2) col = light*vec3(0.1,0.8,1.);\n            }\n\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}