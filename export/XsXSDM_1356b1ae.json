{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"vec2 ellipse(vec2 point, vec4 object) {\n\tvec2 two = vec2(2,2);\n\treturn pow(point.xy - object.xy, two) / pow(object.zw, two);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 point = fragCoord.xy;\n\n\t\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n\n\t\n\tvec2 exp = vec2(iResolution.x,iResolution.y);\n\t\n\tvec2 center = iResolution.xy / 2.0;\n\tif ( length(point - center) > 150.0 ) {\n\t\tfragColor = vec4(0,0,0,1);\n\t}\n\t\n\t\n\tif (length(uv - vec2(0.25, 0.25)) < 0.09 + 0.05 * cos(iTime)) {\n\t\tfragColor = vec4(1,0,0,1);\n\t}\n\t\n\tvec4 ellipse = vec4(-150,100,10,20);\n\tellipse.xy += center.xy;\n\n/*\t\n\tfloat fEllipse = pow(point.x-ellipse.x,2.0) / pow(ellipse.z,2.0) + \n\t\t\t\t\t pow(point.y-ellipse.y,2.0) / pow(ellipse.w,2.0);\n*/\n\t\n\tfloat fEllipse = pow(((point.x-ellipse.x)*cos(iTime)+(point.y-ellipse.y)*sin(iTime)),2.0) / pow(ellipse.z,2.0) + \n\t\t\t \t\t pow(((point.x-ellipse.x)*sin(iTime)-(point.y-ellipse.y)*cos(iTime)),2.0) / pow(ellipse.w,2.0);\n\n\t\n\t\n\tvec2 two = vec2(2,2);\n\tvec2 poop = pow(point.xy - ellipse.xy, two) / pow(ellipse.zw, two);\n    float fDistance = abs(1.0-fEllipse);\n\tfloat fDumb = abs(1.0-(poop.x+poop.y));\n\tif (fDistance < 1.0 + abs(5.0*sin(iTime))) {\n\t\tfragColor = vec4(0,1,0,1);\n\t}\n\t\n\t//if (length(point - ellipse(\n\t\n\t/*\n\tif (length(point - (center + vec2(-150,100))) < 15.0) {\n\t\tfragColor = vec4(0,1,0,1);\n\t}\n\t*/\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsXSDM","date":"1401716375","viewed":164,"name":"pdex_third","username":"pdex","description":"CIRCLES! OVALS!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["n00b"],"hasliked":0,"parentid":"","parentname":""}}