{"ver":"0.1","info":{"id":"Mc2SRR","date":"1706366388","viewed":55,"name":"SandCells","username":"Mimka","description":"click to add sand","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["sand","cellularautomata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // sample texture and output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 SampleUv = fragCoord/iResolution.xy;\n    \n    ivec2 myIntPos = ivec2(int(fragCoord.x), int(fragCoord.y));\n    \n    float height = fetchData(iChannel1, ivec2(myIntPos.x, 200)).r;\n    \n    vec2 mouse = iMouse.xy/iResolution.xy*2.0f - 1.0f;\n    mouse.x*=(iResolution.x/iResolution.y);\n    \n    vec2 uv = fragCoord/iResolution.xy*2.0f - 1.0f;\n    uv.x*=(iResolution.x/iResolution.y);\n    \n    \n   \n    fragColor = texture(iChannel0, SampleUv);\n    \n    \n    vec3 colUpRight = fetchData(iChannel0, ivec2(myIntPos.x+1, myIntPos.y+1)).rgb;\n    vec3 colUpLeft = fetchData(iChannel0, ivec2(myIntPos.x-1, myIntPos.y+1)).rgb;\n    vec3 colDown = fetchData(iChannel0, ivec2(myIntPos.x, myIntPos.y-1)).rgb;\n    vec3 colUp = fetchData(iChannel0, ivec2(myIntPos.x, myIntPos.y+1)).rgb;\n    \n    \n    \n    float dist = distance(fragCoord, vec2(fragCoord.x, int(height*iResolution.y)));\n    if(int(fragColor.r)==0 && dist<2.0)\n    {\n        if (int(colUpRight.r)==1 )\n        {\n            fragColor = vec4(1.0,1.0,1.0,1.0);\n        }\n        if (int(colUpLeft.r)==1 )\n        {\n            fragColor = vec4(1.0,1.0,1.0,1.0);\n        }\n\n    }\n    \n    \n    \n    if (iMouse.z>0.0)\n    {\n        if(distance(uv, mouse)<0.1)\n        {\n            fragColor = vec4(1.0,1.0,1.0,1.0);\n        }\n    }\n    \n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // exact location\n    ivec2 myIntPos = ivec2(int(fragCoord.x), int(fragCoord.y));\n    \n    float height = fetchData(iChannel1, ivec2(myIntPos.x, 200)).r;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    vec3 col = fetchData(iChannel0, ivec2(myIntPos.x, myIntPos.y)).rgb;;\n    //vec3 colCurr = fetchData(iChannel0, ivec2(myIntPos.x, myIntPos.y)).rgb;\n    if(int(fragCoord.y)>0)\n    {\n        vec3 colUp = fetchData(iChannel0, ivec2(myIntPos.x, myIntPos.y+1)).rgb;\n        vec3 colDown = fetchData(iChannel0, ivec2(myIntPos.x, myIntPos.y-1)).rgb;\n        vec3 colUpRight = fetchData(iChannel0, ivec2(myIntPos.x+1, myIntPos.y+1)).rgb;\n        vec3 colUpLeft = fetchData(iChannel0, ivec2(myIntPos.x-1, myIntPos.y+1)).rgb;\n        \n        \n        if(int(col.r)==0 )\n        {\n            \n            if(int(colUp.r)==1 )\n            {\n                col = vec3(1.0,1.0,1.0);\n            }\n            \n            \n            \n\n        }\n        if(int(col.r)==1 && int(height*iResolution.y)<int(myIntPos.y))\n           {\n            \n            \n            \n            \n            vec3 lastWhiteCell  = fetchData(iChannel0, ivec2(myIntPos.x, int(height*iResolution.y)+1)).rgb;\n            if(int(colUp.r)==0)\n            {\n                col = vec3(0.0,0.0,0.0);\n            }\n        }\n       \n        \n    }\n  \n\n\n    // sample texture and output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define fetchData(buf, addr) texelFetch(buf, addr, 0)\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    ivec2 myIntPos = ivec2(int(fragCoord.x), int(fragCoord.y));\n    \n    if(myIntPos.x<int(iResolution.x) && myIntPos.y == 200)\n    {\n        int lastWhite = 0;\n        for(int i = 1; i<int(iResolution.y);i++)\n        {\n            vec2 coord = vec2(float(myIntPos.x), float(i))/iResolution.xy;\n\n            // sample texture and output to screen\n            \n            \n            vec3 sampleColl = fetchData(iChannel0, ivec2(myIntPos.x, i)).rgb;\n            if(int(sampleColl.r)==1)\n            {\n                lastWhite+=1;\n            }\n            \n            if(int(sampleColl.r)==0)\n            {\n                break;\n            }\n            \n\n\n        }\n        fragColor = vec4(float(lastWhite)/iResolution.y,0.0,0.0,1.0);\n    }\n    else\n    {\n        fragColor = vec4(0.0,0.0,0.0,1.0);\n    }\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    ivec2 myIntPos = ivec2(int(fragCoord.x), int(fragCoord.y));\n    \n    if(myIntPos.x<int(iResolution.x) && myIntPos.y == 200)\n    {\n        int lastWhite = 0;\n        for(int i = 1; i<int(iResolution.y);i++)\n        {\n            vec2 coord = vec2(float(myIntPos.x), float(i))/iResolution.xy;\n\n            // sample texture and output to screen\n            \n            \n            vec3 sampleColl = fetchData(iChannel0, ivec2(myIntPos.x, i)).rgb;\n            if(int(sampleColl.r)==1)\n            {\n                lastWhite+=1;\n            }\n            \n            if(int(sampleColl.r)==0)\n            {\n                break;\n            }\n            \n\n\n        }\n        fragColor = vec4(float(lastWhite)/iResolution.y,0.0,0.0,1.0);\n    }\n    else\n    {\n        fragColor = vec4(0.0,0.0,0.0,1.0);\n    }\n}","name":"Buffer C","description":"","type":"buffer"}]}