{"ver":"0.1","info":{"id":"mtsXW8","date":"1674703506","viewed":55,"name":"Stereographic Indian Flag","username":"napsternxg","description":"Stereographic Indian Flag. Color info taken from: https://en.wikipedia.org/wiki/Flag_of_India\nInspired from this shader: https://www.shadertoy.com/view/7tXXD2\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["animation","flag","india"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 WHITE = vec3(1);\nvec3 BLACK = vec3(0);\nvec3 SAFFRON = vec3(255,153,51)/255.;\nvec3 GREEN = vec3(19,136,8)/255.;\nvec3 BLUE = vec3(0,0,128)/255.;\nfloat PI = radians(180.);\n\nfloat get_band(float x, float width,  float smoothing_d){\n    return smoothstep(0., smoothing_d, x)*smoothstep(0., smoothing_d, -x + width);\n}\n\nvec3 Flag(vec2 uv, float ratio){\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float band = floor((uv.y + 0.5)*3.0);\n    col = BLACK;\n    float flag_region = get_band(band+1., 4., 0.001);\n    float top = flag_region*smoothstep(0., 0.01, band + 3.);\n    col = mix(col, GREEN, top);\n    top = top*smoothstep(0., 0.01, band);\n    col = mix(col, WHITE, top);\n    top = top*smoothstep(0., 0.01, band-1.);\n    col = mix(col, SAFFRON, top);\n    vec2 cuv = uv;\n    cuv.y = cuv.y*ratio;\n    float d = length(cuv);\n    float angle = atan(cuv.y, cuv.x)/PI;\n    angle = 12.*angle;\n    angle = fract(angle);\n    float circle_r = 0.09;\n    float circle_w = 0.01;    \n    float circle_rim = get_band(d-(circle_r - circle_w), circle_w, 0.001);\n    col = mix(col, BLUE, circle_rim);\n    col = mix(col, BLUE, smoothstep(0., 0.001, -d+0.01));\n    col = mix(col, BLUE, smoothstep(0., 0.001, -d+circle_r)*get_band(angle-0.8, 0.2, 0.01));\n    col = mix(BLACK, col, flag_region);    \n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{   \n    vec2 uv = fragCoord/iResolution.xy;    \n    uv = uv - vec2(0.5);\n    float scale = 50.0*abs(cos(0.3*iTime));\n    uv.x *= scale;\n    uv.y *= scale;\n    // Stereographic projection of flag on sphere\n    float r = (1.0 + pow(uv.x, 2.0) + pow(uv.y, 2.0));\n    uv.x = 1.0*uv.x / r;\n    uv.y = 1.0*uv.y / r;\n    float ratio = iResolution.y/iResolution.x;\n    vec3 col = Flag(uv, ratio);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}