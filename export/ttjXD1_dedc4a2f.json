{"ver":"0.1","info":{"id":"ttjXD1","date":"1565809323","viewed":144,"name":"karhusel","username":"foran","description":"karhusel","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["karhusel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"  float sigmoid(float x) {\n    return x + ( .51 + abs(x));\n  }\n  \n  vec2 sigmoidDistort(in vec2 uv, inout vec2 polar, inout float distortion) {\n    polar = vec2( atan(uv.y, uv.x), length(uv) );\n    float a = sin(polar.y * .8);\n    distortion = sigmoid(a * -.2);\n    polar.x += sigmoid(a * .2) * 1.;\n    polar.y += sigmoid(a * -.5) * 3.;\n    return vec2( cos(polar.x) * polar.y, sin(polar.x) * polar.y );\n  }\n  vec3 rgb2hsv(vec3 c)\n{\n  vec4 K=vec4(0.,-1./3.,2./3.,-1.);\n  vec4 p=mix(vec4(c.bg,K.wz),vec4(c.gb,K.xy),step(c.b,c.g));\n  vec4 q=mix(vec4(p.xyw,c.r),vec4(c.r,p.yzx),step(p.x,c.r));\n  \n  float d=q.x-min(q.w,q.y);\n  float e=1.e-10;\n  return vec3(abs(q.z+(q.w-q.y)/(6.*d+e)),d/(q.x+e),q.x);\n}\nvec3 hsv2rgb(vec3 c)\n{\n  vec4 K=vec4(1.,2./3.,1./3.,3.);\n  vec3 p=abs(fract(c.xxx+K.xyz)*6.-K.www);\n  return c.z*mix(K.xxx,clamp(p-K.xxx,0.,1.),c.y);\n}\n void mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n  vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x);\n  vec2 aspect=vec2(iResolution.x/iResolution.y,.7);\n  vec2 sPos=((fragCoord.xy/iResolution.xy)/.7+.001)*aspect;\n  vec4 b=texture(iChannel0,sPos).rgba;\n\n //---------------\n    vec2 subuv;\n    \n    uv *= 16.;\n    \n    vec2 polar = vec2(0.);\n    float distortion = 0.;\n    uv = sigmoidDistort(uv, polar, distortion);\n    \n    float t = iTime * .1;\n    uv *= mat2(\n      sin(t), -cos(t),\n      cos(t), sin(t)         \n    );\n    uv.x += iTime;\n    uv += .5;\n    \n    vec2 grid = floor(uv);\n    vec2 subgrid = fract(uv) - .5;\n    \n    float c = mod(grid.x + grid.y, 2.);\n     c = smoothstep(.44, .4, length(subgrid));\n    vec3 colour = vec3(c);\n    uv += distortion * .3;\n    grid = floor(uv);\n    subgrid = fract(uv) - .5;\n    colour.b = mod(grid.x + grid.y, 2.);\n     colour.g = smoothstep(.44, .4, length(subgrid));\n    uv += distortion * .3;\n    grid = floor(uv);\n    subgrid = fract(uv) - .5;\n    colour.b = mod(grid.x + grid.y, 2.);\n     colour.b = smoothstep(.44, .4, length(subgrid));\n uv+=distortion*.3;\n grid=floor(uv);\n subgrid=fract(uv)-.5;\n colour.r=mod(grid.x+grid.y,2.);\n colour.g=smoothstep(.44,.4,length(subgrid));\n                                  //colour=rgb2hsv(colour);\n                                  //colour=hsv2rgb(colour);\n                                  //colour=rgb2hsv(colour);\n                                  //colour=hsv2rgb(colour);\n  vec4 final=mix(vec4(colour.rgb,max(colour.xy,b.a)),b,.0712);\n fragColor=vec4(final);\n  }","name":"Image","description":"","type":"image"}]}