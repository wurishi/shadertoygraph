{"ver":"0.1","info":{"id":"msXfDn","date":"1688619418","viewed":93,"name":"Vanilla cherry coke blossom","username":"BakingBeans","description":"wait for it .. Vanilla Cherry Coke Blossoms","likes":0,"published":3,"flags":64,"usePreview":0,"tags":["flower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Ms3GDr","filepath":"https://soundcloud.com/catchingfliesmusic/change-of-hearts-1?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/catchingfliesmusic/change-of-hearts-1?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n  vec3 a = vec3(0.5, 0.5, 0.5);\n  vec3 b = vec3(0.75, 0.5, 0.5);\n  vec3 c = vec3(1.0, 0.55, 0.60);\n  vec3 d = vec3(0.8, 0.333, 0.667);\n\n  return a + b * cos(6.28318 * t + c - d);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  // Normalized pixel coordinates (from 0 to 1)\n  vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n  vec2 uv0 = uv * (iTime - 5.0) * uv.yx;\n  vec3 fCol = vec3(0.0);\n\n  for (float i = 0.0; i < 3.0; i++) {\n    float d = length(uv + (0.1 / iTime));\n\n    d = sin(d * 8.0 + iTime) / 8.0;\n    d *= cos(5.0 / iTime);\n    d *= sin(iTime * 0.02);\n    uv.y -= d + cos(iTime * 0.15); // Up/Down\n    uv.x /= iResolution.y + sin(iTime / d + uv.y); // Left/Right\n\n    d = abs(d) / 0.2;\n    // Time varying pixel color\n    vec3 col = palette(length(uv0) + iTime * 4.0);\n    d = 0.2 * d;\n\n    col *= d;\n    fCol -= sin(iTime * col) - d;\n  }\n\n  uv += (iTime * uv.x) + (iTime - uv.y);\n\n  // Apply audio data from channel 1\n  vec2 audioUV = vec2(iTime * 0.2, iTime * 0.3); // Adjust the scaling factor as needed\n  float audioData = texture(iChannel0, audioUV + (iTime + 0.2)).r;\n\n  fCol *= audioData + iTime * 0.5;\n\n  // Apply fractal coloring\n  fCol -= (0.5 * 0.25) * iTime + sin(fCol / (iTime - 2.0) + vec3(0.0, 3.0, 4.0));\n\n  // Output to screen\n  fragColor = vec4(fCol, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}