{"ver":"0.1","info":{"id":"lcBXzm","date":"1706151911","viewed":62,"name":"zcfan/pixelate video","username":"zcfan","description":"render video into pixel art style.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pixel"],"hasliked":0,"parentid":"ts2XDG","parentname":"8bit pixel camera"},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PIXEL_FACTOR = 100.; // Lower num - bigger pixels\nconst float COLOR_FACTOR = 10.; // Higher num - higher colors quality\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // uv 取值范围 [0,1]\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    if (fragCoord.x < iMouse.x) {\n        // 鼠标左边的像素，正常采样\n        vec3 col = texture(iChannel0, uv).xyz;\n        fragColor = vec4(col,1.);\n    } else {\n        // 将画面按 x 坐标划分为 PIXEL_FACTOR 指定数量的色块，y 坐标保持色块为正方形，也划分为相应的色块\n        // size 即为这样一个正方形色块的尺寸\n        vec2 size = PIXEL_FACTOR * iResolution.xy/iResolution.x;\n        // 将 uv 从平滑变动的数值，按 size 大小划分为若干区间\n        uv = floor( uv * size) / size;\n        \n        // 用色块左下角坐标对应的纹理颜色，代表整个色块的颜色\n        vec3 col = texture(iChannel0, uv).xyz;\n\n        // 限制颜色只能有固定数量，而非平滑变化\n        col = floor(col * COLOR_FACTOR) / COLOR_FACTOR;\n\n        fragColor = vec4(col + 0.2, 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}