{"ver":"0.1","info":{"id":"Xd3yW8","date":"1590279391","viewed":83,"name":"Shifting Star","username":"timeisbeautifulhere","description":"a","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wave","star","sine","rotating","polar","shifting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159\n#define WIDTH .1\n\n// Check if a point is within the width of a line\nbool checkLine(vec2 uv, float f_x, float width){\n    return abs(uv.y-f_x) < width;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //amplitude of sine wave\n    float a=sin(iTime)/8.0;\n    //a=abs(a);\n    \n    //rate it spins at\n    float rotRate=iTime;\n    \n    vec2 uv=(2.0*fragCoord)/iResolution.xy-1.0;\n    \n    //polar coordinates\n    vec2 pc=vec2(\n        atan(uv.y/uv.x),\n        length(uv)\n    );\n    \n    //multiply the sine wave\n    pc.x=pc.x+rotRate;\n    \n    float f_x=0.5+a*sin(8.0*pc.x);\n    \n    if(checkLine(pc,f_x,WIDTH))\n        fragColor=vec4(1);\n    else\n        fragColor=vec4(0,0,0,1);\n        \n}","name":"Image","description":"","type":"image"}]}