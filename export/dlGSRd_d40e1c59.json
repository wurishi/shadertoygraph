{"ver":"0.1","info":{"id":"dlGSRd","date":"1687679258","viewed":55,"name":"Lattice in trig","username":"Crystalize","description":"lit","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["lit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n#define TWOPI 6.283185\n#define iters 8\n\n#define R vec2(1.0,0.0)\n#define I vec2(0.0,1.0)\n\nvec2 cmul(vec2 z, vec2 c) {\n    return vec2(z.x * c.x - z.y * c.y, z.x * c.y + z.y * c.x);\n}\n\n\nvec2 cdiv(vec2 z, vec2 c) {\n    float r = dot(c, c);\n    return vec2(z.x * c.x + z.y * c.y, z.y * c.x - z.x * c.y) / r;\n}\n\n\nvec2 csinh(vec2 z) {\n    return vec2(sinh(z.x) * cos(z.y), cosh(z.x) * sin(z.y));\n}\n\n\nvec2 cpow(vec2 z, vec2 p) {\n    float a = atan(z.y, z.x);\n    float lnr = 0.5 * log(dot(z,z));\n    float m = exp(p.x * lnr - p.y * a);\n    float angle = p.x * a + p.y * lnr + TWOPI;\n    return vec2(cos(angle), sin(angle)) * m;\n}\n\nvec2 clog(vec2 z) {\n    return vec2(0.5 * log(dot(z,z)), atan(z.y,z.x));\n}\n\nvec2 ctanh(vec2 z) {\n    return vec2(sinh(z.x), sin(z.y)) / (cos(z.y) + cosh(z.x));\n}\n\n\nvec2 catanh(vec2 z) {\n    return clog(cdiv(z+vec2(1.0,0.0), -z+vec2(1.0,0.0)));\n}\n\nvec2 bubble(vec2 z) {\n    return z / (1. + sqrt(1. - z.x * z.x - z.y * z.y));\n}\n\nvec2 unbubble(vec2 z) {\n    return 2. * z / (1. + dot(z,z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * (fragCoord.xy - 0.5*iResolution.xy) / iResolution.y;\n    \n    uv *= 2.0;\n    uv += vec2(-1.,1.);\n    uv = dot(uv,uv) > 1. ? uv*0.75 + vec2(0.75,-0.5) : uv;\n    uv = dot(uv,uv) > 1. ? uv*0.5 + vec2(1.,-1.) : uv;\n    uv = dot(uv,uv) > 1. ? uv*0.4 + vec2(-1.,1.) : uv;\n    uv = bubble(uv);\n    uv.x += iTime * 0.25;\n    uv = cmul(uv,I);\n    for(int i = 0; i < iters; i++) {\n        uv.y += uv.y < 0. ? PI * 0.5 : -PI *0.5;\n        uv = ctanh(uv);\n        uv = cpow(uv,R*2.);\n        uv = catanh(uv);\n    }\n    uv = csinh(uv);\n    \n    \n    vec3 col = 1.-texture(iChannel0, uv * 2. + iTime * 0.01).rgb;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}