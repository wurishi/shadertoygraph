{"ver":"0.1","info":{"id":"XfjyzR","date":"1721847045","viewed":18,"name":"Highly Ethereal Balls","username":"Siev","description":"balls","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["balls"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphere(vec3 p, vec3 o, float r)\n{\n    return length(p - o) - r;\n}\n\n\nfloat periodic(float t, float a, float b)\n{\n    float raw = ((cos(t)+1.0)/2.0); // 0 to 1\n    return a + raw * (b - a);\n}\n\nstruct hit {\n    vec3 o;\n    float d;\n};\n\nhit dist(vec3 p)\n{\n    hit ret;\n    ret.d = 10000000.0;\n    \n    for (float i = -5.0; i <= 4.0; i += 1.0) {\n        for (float j = -3.0; j <= 3.0; j += 1.0) {\n            float r = periodic(iTime + i + fract(iTime) + j/3.0, 0.35, .45);\n            vec3 o = vec3(i + fract(iTime), j + cos(iTime*0.5), -3.0);\n            float v = sphere(p, o, r);\n            if (v < ret.d) {\n                ret.o = o;\n                ret.d = v;\n            }\n        }\n    }\n    \n    ret.d = max(0.0, ret.d);\n    return ret;\n}\n\nfloat walk(vec2 uv)  \n{\n    vec3 eye = vec3(0, 0, 1.0);\n    vec3 pnt = vec3(uv, 0);\n    vec3 dir = normalize(pnt - eye);\n    \n    hit ball;\n    \n    int i = 0;\n    for (i = 0; i < 16; i++) {\n        ball = dist(pnt);\n        pnt += 0.95 * ball.d * dir;\n    }\n\n    float ret = ball.d;\n    vec3 diff = pnt - ball.o;\n    ret = atan(.75*(0.4-diff.y)/length(vec2(diff.x, diff.z)));\n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n    uv *= 2.0;\n    uv -= vec2(1.0, iResolution.y/iResolution.x);\n\n    float c = walk(uv);\n    c = 1.0 - pow(c, 3.5);\n    \n    \n    fragColor = vec4(0.55*c, 0.05, 0.35*c, 1.0);\n}","name":"Image","description":"","type":"image"}]}