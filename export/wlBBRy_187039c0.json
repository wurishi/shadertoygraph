{"ver":"0.1","info":{"id":"wlBBRy","date":"1599199217","viewed":526,"name":"Basic Posterize One-Liner","username":"kowbell","description":"Basic posterization filter you can use in your own shaders. Public domain/CC0.","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["filter","color","posterize","oneliner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/** \n * Drag-n-drop posterize filter.\n * All you need is the one-liner function!\n *\n * You can credit kowbell, or not.\n * CC0, No Rights Reserved, Public Domain!\n */\nvec4 posterize(vec4 src, float steps) { return vec4(floor(src.rgb * steps) / steps, src.a); }\n\n\n\n\n/**\n * Basic demo of it use the second \"STEPS\" define line to \n * control posterization levels with the mouse\n */\n#define MOUSE (iMouse.xy/iResolution.xy)\n#define STEPS 8.0\n//#define STEPS (MOUSE.x * 8.0) /* Commented out so it works when you first open this shader :) */\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n    \n    fragColor = posterize(col, STEPS);  \n}","name":"Image","description":"","type":"image"}]}