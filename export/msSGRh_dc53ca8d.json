{"ver":"0.1","info":{"id":"msSGRh","date":"1667203460","viewed":89,"name":"1.03 - UVColoredSpotlightCursor","username":"retonym","description":"practice shader made while starting to go through thebookofshaders.com","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["thebookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord) \n{\n\tvec2 st = fragCoord.xy/iResolution.xy; \n\n    //1. SPOTLIGHT WITH POSITION-BASED COLOR\n    //let's make a spotlight that follows the mouse, and have it change color depending on where the mouse is.\n    \n    //normalize mouse position into a value from 0-1\n    vec2 mouseValue = iMouse.xy/iResolution.xy; \n    //get a value based on distance from the mouse position, to the pixel being rendered by this fragment.\n    float len = distance(st, mouseValue);    \n    //if you render the above values out, it looks like a black circle on a white bg\n    //i'm using 1 minus here to invert it to make it a white circle on a black bg.\n    vec4 spotlight = vec4(1.0-len, 1.0-len, 1.0-len, 1);\n    \n    //then, i can multiply the white circle by a color based on mouse position!\n    fragColor = spotlight * vec4(mouseValue.x, mouseValue.y, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}