{"ver":"0.1","info":{"id":"WlKXWV","date":"1583630173","viewed":56,"name":"TW EX I.V","username":"tonywony","description":"learning ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Cricle (vec2 uv, vec2 p, float r, float blur) //\"p\" is transforms  \n{\n    \n    float d = length (uv-p);\n    float c = smoothstep(r, r - blur, d);\n    \n    return c;\n}\n\nfloat smiley(vec2 uv, vec2 p,float size){ \n    uv -= p;     // transform\n    uv /= size;  // scale\n      \n    float mask = Cricle(uv, vec2(.0,.0), .4, .01);\n   \n    mask -= Cricle(uv, vec2(.2,0.15), .05, .01);\n    mask -= Cricle(uv, vec2(-.2,.15), .05, .01);\n    \n    float mouth = Cricle(uv, vec2(.0,.2), .1, .01);  //(mouth controll)\n    mouth -= Cricle(uv, vec2(.0,.1), .1, .01);\n    \n    mask += mouth;\n    \n    return mask;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    vec2 uv = fragCoord.xy / iResolution.xy ; // 0 <> 1\n    \n    uv -= .5; // -0.5 <> 0.5\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = vec3(1);\n    \n    float mask = smiley(uv,vec2(0.,-0.),1.); //smiley(vec2 uv, vec2 p,float size)\n    \n    col = vec3(1,1,0.)*mask; //rgb colour controll\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}