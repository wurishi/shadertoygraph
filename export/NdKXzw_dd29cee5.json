{"ver":"0.1","info":{"id":"NdKXzw","date":"1634420145","viewed":82,"name":"Art of code exercice","username":"Loubi","description":"A replication of smth seen in a video","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n#define MIN_DIAM .3\n#define MAX_DIAM .7\n\nfloat hash21(vec2 id) {\n    return fract(length(sin(id * 356.453)) * 34566.4325);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    float a = PI / 4.;\n    float c = cos(a);\n    float s = sin(a);\n    \n    uv *= mat2 (c, -s, s, c);\n    uv *= 10.0;\n    \n    vec2 gv = fract(uv);\n    vec2 id = floor(uv);\n    float m = 0.;\n    \n    float nd = 1.;\n    \n    for (float y = -nd; y <= nd; y++) {\n        for (float x = -nd; x <= nd; x++) {\n        \n            vec2 offset = vec2(x, y);\n            \n            float d = length(gv - offset);\n            float dist = length(id + offset);\n            \n            float truc = sin(dist - iTime * 2.) * .5 + .5;\n            \n            vec2 r = vec2(\n                mix(MIN_DIAM, MAX_DIAM, truc)\n            );\n            r.y -= .00009;\n            \n            m += smoothstep(r.x, r.y, d) * .3;\n        }\n    }\n    \n    vec3 col = vec3(m, m*.6, m*.5);\n    // col += mod(m, 2.);\n    // col.gb += id / 8.;\n    // col.r += length(uv);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}