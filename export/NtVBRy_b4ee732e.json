{"ver":"0.1","info":{"id":"NtVBRy","date":"1664752200","viewed":82,"name":"Ondulation image","username":"Hatokuro","description":"crée une ondulation sur une image.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ondulationimagedformation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NBR_WAVE 50.\n#define HEIGHT_WAVE 100.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    uv.y += (sin(uv.x*NBR_WAVE+iTime*20.0)/HEIGHT_WAVE);\n    uv.y+=0.01; //zoomer sur l'image afin de masquer la répétition\n    uv.y*=0.97;\n    \n    vec3 col = texture(iChannel0,uv).xyz;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}