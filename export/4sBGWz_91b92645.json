{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.1415926535897932384626433832795028841971693993751058\n\n#define SCALE 1\n\nfloat polar(float x, float mag, float scale) {\n\tfloat sum = 0.0;\n\tfor (int i = 0; i <= 23; i++) {\n\t\tx++;\n\t\tfloat rx = x / scale;\n\t\tfloat y = abs(tan(rx * PI));\n\t\t\n\t\tif (i > 0 && i < 23 || i == 23 && fract(rx) > 0.5 || i == 0 && fract(rx) < 0.5) {\n\t\t\tsum += float(abs(y - mag) < 0.1);\n\t\t}\n\t}\n\treturn sum / scale;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 position = (fragCoord.xy / iResolution.xy );\n\n\tposition -= vec2(0.5, 0.5);\n\t\n\tposition.x *= iResolution.x / iResolution.y;\n\t\n\tfloat mag = length(position) * 5.0;\n\tfloat x = (atan(position.y, position.x) / PI + 1.0 + iTime * 0.1) / 2.0;\n\t\n\tvec3 pink = vec3(227.0 / 255.0, 136.0 / 255.0, 89.0 / 255.0);\n\tfragColor = vec4(pink * (0.1 + 0.9 * polar(x, mag, (iTime * 0.006 + 1.0) * 1.0)), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sBGWz","date":"1385677459","viewed":683,"name":"Pitypang","username":"vahokif","description":"Messed around with an old shader I wrote for understanding the DFT.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","flower","fourier"],"hasliked":0,"parentid":"","parentname":""}}