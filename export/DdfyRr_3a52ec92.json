{"ver":"0.1","info":{"id":"DdfyRr","date":"1686501182","viewed":39,"name":"Juliaset","username":"Prof_redstone","description":"fractal, press up key to switch Mandelbrot fractal","likes":0,"published":1,"flags":16,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nconst int KEY_DOWN  = 40;\nconst float zoom = 1.5;\n\nfloat Julia(vec2 fracCoord){\n    float x = fracCoord.x*zoom;\n    float y = fracCoord.y*zoom;\n    float a = x;\n    float b = y;\n    float jx = (iMouse.x/ iResolution.x *2.0 -1.)*zoom;\n    float jy = (iMouse.y/ iResolution.y *2.0 -1.)*zoom;\n    \n    int maxit = 1000;\n\tint n = 0; //nombre d'iteration\n\tfloat newb;\n    \n    while(n < maxit && a * a + b * b < 4.){\n        newb = (2. * a * b); //code degueu mais opti pour faire z^2 + c\n\t\ta = (a * a - b * b) + jx;\n\t\tb = newb + jy;\n\n\t\tn++;\n    }\n    \n    \n    if (n == maxit) {\n\t\tn = maxit;\n\t}\n    \n    return float(n)/float(maxit)*4.;\n}\n\nfloat Mandelbrot(vec2 fracCoord){\n    float x = fracCoord.x*zoom;\n    float y = fracCoord.y*zoom;\n    float a = x;\n    float b = y;\n    float jx = (iMouse.x/ iResolution.x *2.0 -1.)*zoom;\n    float jy = (iMouse.y/ iResolution.y *2.0 -1.)*zoom;\n    \n    int maxit = 500;\n\tint n = 0; //nombre d'iteration\n\tfloat newb;\n    \n    while(n < maxit && a * a + b * b < 4.){\n        newb = (2. * a * b); //code degueu mais opti pour faire z^2 + c\n\t\ta = (a * a - b * b) + x;\n\t\tb = newb + y;\n\n\t\tn++;\n    }\n    \n    \n    if (n == maxit) {\n\t\tn = maxit;\n\t}\n    \n    return float(n)/float(maxit)*4.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 normalizedCoord = fragCoord/ iResolution.xy *2.0 -1.;\n    \n    float res = 0.0;\n    if( (0.3+0.7*texelFetch( iChannel0, ivec2(KEY_DOWN,0), 0 ).x) > 0.5){\n        res = Mandelbrot(normalizedCoord);\n    }else{\n        res = Julia(normalizedCoord);\n    }\n    fragColor = vec4(res, res, res, 1.0);\n    \n}\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}