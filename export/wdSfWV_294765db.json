{"ver":"0.1","info":{"id":"wdSfWV","date":"1590834689","viewed":88,"name":"Targets on a map","username":"mightee_cactus","description":"Practice of using smoothstep and trigonometry.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grid","dots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n\nvec2 getGrid(vec2 uv)\n{\n    float freq = 50.;\n    float shiftDown = - 0.9;\n    \n    // module by cos, then shift cos down to narrow the resulting \"line\"\n    vec2 tmp = (cos(uv * freq) + shiftDown);\n    // we'd need to clamp values if we are going to myltiply tmp by itself,\n    // but I just use some random constant to remove the blur\n    //tmp = clamp(tmp, vec2(0.), vec2(1.));\n    tmp *= 10.;\n\treturn S(0., 1., tmp);\n}\n\nvec3 getTargetDot(vec2 uv, float radius)\n{\n    vec2 tmp = sin(uv);\n    float d = clamp(length(tmp), 0., radius);\n    d /= radius;\n    d = S(1., 0., d);\n    \n    return mix(vec3(0.), vec3(0., 6., 0.), d);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // then move (0,0) to a center\n    // then account for window ratio\n    vec2 uv = fragCoord/iResolution.xy;\n    uv     -= .5;\n    uv.x   *= iResolution.x / iResolution.y;\n\n    vec2 mapSpeed = vec2(iTime * 0.15, iTime) * 0.15;\n    \n    // bg color\n    vec3 col  = vec3(0.066, 0.066, 0.094);\n    \n    // grid\n    vec3 gridColor = vec3(0.176, 0.176, 0.243);\n    vec2 grid = getGrid(uv + mapSpeed);\n    col = mix(col, gridColor, grid.x);\n    col = mix(col, gridColor, grid.y);\n    \n    // dots\n    col += getTargetDot(uv + vec2(0.4, 0.37)+ mapSpeed, 0.05);\n    col += getTargetDot(uv + vec2(0.2, -0.5) + mapSpeed, 0.05);\n    col += getTargetDot(uv + vec2(1.5, 1.) + mapSpeed, 0.05);\n    col += getTargetDot(uv + vec2(-0.5, 0.7) + mapSpeed, 0.05);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}