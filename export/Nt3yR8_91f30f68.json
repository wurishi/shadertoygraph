{"ver":"0.1","info":{"id":"Nt3yR8","date":"1659191244","viewed":144,"name":"UFOs Landscape","username":"magix","description":"Little landscape.\n\nReference here: https://www.pinterest.com/pin/650348002419949798/","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","landscape","ufo","ufos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat d2r(float a)\n{\n    return a*PI/180.;\n}\n\nmat2 rot(float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat remap01(float a, float b, float t)\n{\n    return (t-a) / (b-a);\n}\n\nfloat remap(float a, float b, float c, float d, float t)\n{\n    return remap01(a,b,t) * (d-c) + c;\n}\n\n// From iq: https://www.shadertoy.com/view/WsV3zz\nfloat hash( int n ) \n{\n\tn = (n << 13) ^ n;\n    n = n * (n * n * 15731 + 789221) + 1376312589;\n    return -1.0+2.0*float( n & ivec3(0x0fffffff))/float(0x0fffffff);\n}\n\n// gradient noise\n// From iq: https://www.shadertoy.com/view/WsV3zz\nfloat gnoise( in float p )\n{\n    int   i = int(floor(p));\n    float f = fract(p);\n    float u = f*f*(3.0-2.0*f);\n    return mix( hash(i+0)*(f-0.0), \n                hash(i+1)*(f-1.0), u);\n}\n\n// fbm\n// From iq: https://www.shadertoy.com/view/WsV3zz\nfloat fbm( in float x, in float G )\n{    \n    x += 26.06;\n    float n = 0.0;\n    float s = 1.0;\n    float a = 0.0;\n    float f = 1.0;    \n    for( int i=0; i<16; i++ )\n    {\n        n += s*gnoise(x*f);\n        a += s;\n        s *= G;\n        f *= 2.0;\n        x += 0.31;\n    }\n    return n;\n}\n\n// From iq: https://www.shadertoy.com/view/4llXD7\nfloat sdRoundedBox( in vec2 p, in vec2 b, in vec4 r )\n{\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\nfloat sdBox(vec2 p, vec2 b)\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nvoid sdUfo(vec2 p, inout vec3 col)\n{\n    float G = 0.3;\n    float x = remap(-0.206, 0.65, 0.01, 0.2, p.y);\n    float d = sdBox(p-vec2(0.,-0.206), vec2(0.05-x,0.155));\n    d += 0.5 * fbm(2. * p.x, G);\n    col = mix(col, vec3(0.1, 0.45, 0.08), 1.-smoothstep(0.,0.011,d));\n\n    \n    float p1 = sdCircle(p, 0.05);\n    float p2 = sdBox(p-vec2(0,0.05), vec2(0.05));\n    float p3 = sdBox(p-vec2(0, -0.025), vec2(0.05, -0.025)) - 0.05;\n    float plane = max(p1, p2);\n    plane = min(plane, p3);\n    col = mix(col, vec3(0.05, 0., 0.08), 1.-smoothstep(0., 0.003, plane));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 col = vec3(0.15,0.,0.3);\n    \n    vec2 p = uv;\n    \n    // Landscape ==============================================================\n    float sun = sdCircle(p - vec2(0,-0.5), 0.1);\n    col = mix(col, vec3(1., 0.5, 0.3), 1.-smoothstep(0.01, sqrt(1.5), sun));\n    \n    \n    float m1 = sdCircle(p-vec2(-0.6, 0.25), 0.15);\n    float m2 = sdCircle(p-vec2(-0.625, 0.275), 0.15);\n    float moon = max(m1, -m2); // Substraction operation\n    col = mix(col, vec3(0.95, 0.88, 0.7), 1.-smoothstep(0.0, 0.005, moon));\n\n\n    float x = remap(-0.15, 1.5, 0.01, 0.15, p.y);\n    float tower = sdBox(p-vec2(0.6, -0.25), vec2(0.01-x, 0.1));\n    col = mix(col, vec3(0.01, 0, 0.15), 1.-smoothstep(0.,0.005, abs(tower)));\n    \n    float platform = sdBox(p-vec2(0.6, -0.15), vec2(0.005, -0.04)) - 0.05;\n    col = mix(col, vec3(0.01, 0, 0.15), 1.-smoothstep(0.,0.005, platform));\n    \n    float lSupport = sdBox(p-vec2(0.6, -0.145), vec2(0., 0.025));\n    col = mix(col, vec3(0.01, 0, 0.15), 1.-smoothstep(0.,0.005, lSupport));\n\n    \n    float light = sdCircle(p-vec2(0.599, -0.12), 0.00);\n    float l = sin(iTime*3.)*0.5 + 1.5;\n    light *= l;\n    col = mix(col, vec3(0.9, 0.9, 0.1), 1.-smoothstep(0.001,0.02, light));\n\n    \n    float G = 0.3;\n    float mountains = 0.25 * fbm(2.*p.x, G ) - 0.3;\n    col = mix(col, vec3(0.01, 0, 0.15), 1.-smoothstep( 0.0, 0.004, p.y - mountains));\n    // Landscape ==============================================================\n    \n    \n    sdUfo(p-vec2(0.1,0), col);\n    vec2 q = p;\n    q *= rot(d2r(5.));\n    sdUfo(q-vec2(-0.4, -0.18), col);\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}