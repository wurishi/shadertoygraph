{"ver":"0.1","info":{"id":"fdtcR4","date":"1653076420","viewed":295,"name":"Wavy Blinds","username":"unoti","description":"Demonstration of underwater wave blur idea.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// iTime = frame seconds\n\n\n// Pi, the ratio of a circle's circumference to its diameter.\n// A float can't really hold this much precision, so don't be mislead.\nconst float PI = 3.14159265358979323846264338327950288;\nconst float TWO_PI = 6.283185307179586476925286766559;\n\n// Blinds\n// x and y range from 0-1.\nfloat blinds(float x, float y, float t) {\n    float bar_count = 5.0;\n    float a = x + y;\n    float n =  mod(a*bar_count, 1.0/a);\n    return n;\n}\n\n\nfloat bars(float x, float y, float t) {\n    const float cycles = 3.0;\n    float a = x * TWO_PI * cycles + t;\n    float c = sin(a);\n    c = c / 2.0 + 0.5;\n    return c;\n}\n\nfloat egg_carton(float x, float y, float t) {\n    const float cycles = 1.0;//3.0; // 1.0; // 1 to 3 look good.\n    float a = x * TWO_PI * cycles + t;\n    float b = y * TWO_PI * cycles + t;\n    float c = sin(a) * sin(b);\n    c = c / 2.0 + 0.5; // Move from range [-1,1] to [0,0.5]\n    return c;\n}\n\nfloat wavy_blinds(float x, float y, float t) {\n    const float strength = 0.08; // 0.4 for waves. Closer to 1 and higher gets insaneo.\n    float o = egg_carton(x, y, t) * strength;\n    return blinds(x+o, y+o, t); // The +o part changes the part of the image you're looking at, and provides distortion.\n}\n\n\nfloat level(float x, float y, float t) {\n    //return blinds(x, y, t); // Background image.\n    //return bars(x, y, 0.0); // Vertical bars. Zeroing out time.\n    //return bars(x, y, t); // Vertical bars. We're letting time through now.\n    //return egg_carton(x, y, 0.0); // We're zeroing out time, to get an idea of what egg carton is.\n    //return egg_carton(x, y, t); // No longer zeroing time. Moving egg carton.\n    // Show the blinds again.\n    //return wavy_blinds(x, y, 0.0); // Distortion via the egg carton. Distortion does not move.\n    return wavy_blinds(x, y, t); // Distortion via the egg carton. Distortion moves.\n    // Try wave blinds both with cycles=1.0 and 3.0.\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float color = level(uv.x, uv.y, iTime);\n    \n\n    // Output to screen\n    fragColor = vec4(color, color, color, 1.0);\n}","name":"Image","description":"","type":"image"}]}