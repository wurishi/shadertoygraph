{"ver":"0.1","info":{"id":"7dtcz2","date":"1653794604","viewed":115,"name":"Basic Supersampling","username":"MisterSirCode","description":"A variation of the 11 line mandelbrot that supports Supersampling. I also threw in the smooth iteration count for visual appeal.\n\nPart of my Simple Fractals playlist: [URL]https://www.shadertoy.com/playlist/NfSGW3[/URL]","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","supersampling"],"hasliked":0,"parentid":"fscyzB","parentname":"11 Line Mandelbrot"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float zoom = 900.0;\nfloat superSamples = 50.0;\n\n// Seed\nfloat cs = 1.0;\n\nvec2 hash22(float p) {\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nfloat sampler(vec2 p, float itr) {\n    vec2 z = vec2(0.0);\n    float l = 0.0;\n    for (l = 0.0; l < itr; l += 1.0) {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + p;\n        if(dot(z, z) > 65536.0) break;\n    }\n    return l - log2(log2(dot(z, z))) + 4.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float l = 0.0;\n    for (float ss = 0.0; ss < superSamples; ss += 1.0) {\n        vec2 uv = ((2.0 * (fragCoord + hash22(cs) / 2.0) - iResolution.xy) / iResolution.y) / zoom;\n        uv -= vec2(0.998, -0.30115);\n        l += sampler(uv, 1000.0);\n        cs += 1.0;\n    }\n    l /= superSamples;\n    fragColor = vec4(vec3((l > 99.0) ? 0.0 : sin(l / 10.0) + 1.0) / 2.0 * vec3(1.0, 0.4, 0.1) * 2.0, 1.0); // Samples - 1 check. Makes interior black\n}","name":"Image","description":"","type":"image"}]}