{"ver":"0.1","info":{"id":"ltXczH","date":"1503389526","viewed":89,"name":"4seasons","username":"pohar","description":"4k intro for Function 2017","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.1415926535897932384626433832795\n\n// https://iquilezles.org/articles/smin\t\n// polynomial smooth min (k = 0.1);\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\n// https://www.shadertoy.com/view/XsXSz4\n// signed distance to a 2D triangle\nfloat sdTriangle( in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p )\n{\n\tvec2 e0 = p1 - p0;\n\tvec2 e1 = p2 - p1;\n\tvec2 e2 = p0 - p2;\n\n\tvec2 v0 = p - p0;\n\tvec2 v1 = p - p1;\n\tvec2 v2 = p - p2;\n\n\tvec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n\tvec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n\tvec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    \n    float s = sign( e0.x*e2.y - e0.y*e2.x );\n    vec2 d = min( min( vec2( dot( pq0, pq0 ), s*(v0.x*e0.y-v0.y*e0.x) ),\n                       vec2( dot( pq1, pq1 ), s*(v1.x*e1.y-v1.y*e1.x) )),\n                       vec2( dot( pq2, pq2 ), s*(v2.x*e2.y-v2.y*e2.x) ));\n\n\treturn -sqrt(d.x)*sign(d.y);\n}\n\nfloat SmoothTri(in float x1, in float y1, in float x2, in float y2, in float x3, in float y3, in vec2 p, in float d)\n{\n    const float f = 0.07;\n    \n    float c = cos(0.15*p.x);\n    float s = sin(0.13*p.x);\n    mat2  m = mat2(c,-s,s,c);\n    vec2  q = vec2(m*p.xy);\n    \n    return smin(d,sdTriangle(vec2(x1,y1),vec2(x2,y2),vec2(x3,y3),q),f);\n}\n\nfloat snow(in vec2 c, in float r, in vec2 p)\n{\n    const float branches = 6.0;\n    float rr = length(p-c);\n    float a = atan(vec2(p-c).x,vec2(p-c).y)+3.14;\n    float b  = abs(mod(a*branches/PI,2.0)-1.0)*(r/4.0);\n    float m = 2.0*PI/branches;\n    a = abs(mod(a,m)-m/2.0);\n    if(rr>r*0.7)\n        a-=rr-r*0.66;\n    return ((a>0.4) || abs(rr-r/2.5-b)<0.01 || abs(rr-r/2.1+b)<0.007)?(rr-r):9.9;\n}\n\nfloat flower(in vec2 c, in float r, in vec2 p)\n{\n    const float branches = 8.0;\n    float rr = length(p-c);\n    float a = atan(vec2(p-c).x,vec2(p-c).y)+3.14;\n    float b  = abs(mod(a*branches/PI,2.0)-1.0)*(r/2.0);\n    return ( abs(rr-r/2.5-b)<0.02 || abs(rr-r/2.5+b)<0.03 )?(rr-r):9.9;\n}\n\nfloat sun(in vec2 c, in float r, in vec2 p)\n{\n    const float branches = 8.0;\n    float rr = length(p-c);\n    float a = atan(vec2(p-c).x,vec2(p-c).y)+3.14;\n    float b  = abs(mod(a*branches/PI,2.0)-1.0)*(r/2.0);\n    return ((abs(rr-r*0.8)>0.08) || abs(rr-r/1.05+b)<0.02)?(rr-r):9.9;\n}\n\nfloat leaf(in vec2 c, in float r, in vec2 p)\n{\n    const float branches = 5.0;\n    float rr = length(p-c);\n    float a = atan(vec2(p-c).x,vec2(p-c).y);\n    float b  = abs(mod((a+3.14)*branches/PI,2.0)-1.0)*(r/2.0);\n    bool l = abs(a)<1.0? (abs(rr-r/2.3-b)<0.02) : (abs(rr-r/1.15+b)<0.02);\n    float m = 2.0*PI/branches;\n    a = abs(mod(a,m)-m/2.0);\n    return (a>0.59 && (rr<r*0.85)) || l ?(rr-r):9.9;\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n    float d = 9.9;\n    float t = iTime;\n    vec3 col = vec3(0.0);\n\n    // the fa\n\td = SmoothTri( 0.05,-1.10, 0.20,-1.10, 0.15, 1.00, p, d);\n\td = SmoothTri( 0.15, 0.40, 0.16, 0.50, 0.60, 1.10, p, d);\n\td = SmoothTri( 0.35, 0.70, 0.37, 0.72, 0.70, 0.75, p, d); \n    d = SmoothTri( 0.07,-0.04, 0.08, 0.04,-0.95, 0.18, p, d);\n    d = SmoothTri(-0.90, 0.15,-0.86, 0.16,-1.30, 0.30, p, d*4.0);\n    d = SmoothTri(-0.83, 0.15,-0.86, 0.16,-1.00, 0.50, p, d*2.0);\n    d = SmoothTri( 0.18,-0.14, 0.16,-0.20, 1.40, 0.00, p, d/3.0);\n    d = SmoothTri( 0.13,-0.45, 0.15,-0.48, 0.83,-0.57, p, d);\n    \n    if(t<10.0) // winter\n    {\n    \td = min(d,snow(vec2(-0.9,-0.3),0.3,p));\n    \td = min(d,snow(vec2( 0.9, 0.3),0.12,p));\n    \tcol = (d>0.0)?vec3(0.1,0.1,0.66):vec3(1.0);\n    }\n    else if(t<20.0) // spring\n    {\n        d = min(d,flower(vec2(-0.9,-0.3),0.4,p));\n    \tcol = (d>0.0)?vec3(0.1,0.66,0.1):vec3(1.0);        \n    }\n    else if(t<30.0) // summer\n    {\n        d = min(d,sun(vec2( 1.0,0.7),0.3,p));\n    \tcol = (d>0.0)?vec3(1.0,0.5,0.0):vec3(1.0);        \n    }\n    else // autumn\n    {\n        d = min(d,leaf(vec2(-0.9,-0.3),0.5,p));\n    \tcol = (d>0.0)?vec3(0.6,0.0,0.0):vec3(1.0);        \n    }\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}