{"ver":"0.1","info":{"id":"4dBfWy","date":"1501850787","viewed":214,"name":"Fake 3D Sphere","username":"paulo69","description":"One of my first shaders","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","3d","sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.x;\n    vec3 lightcolor = vec3 (1.0,uv.x,uv.y);\n    float DiffIntensity = .5;\n    vec3 lightdirection = vec3 (uv.x*uv.y+.04);\n    float lightintensity = 2.0;\n    float diffusion = 2.0;\n    vec3 shading =vec3( lightdirection*lightdirection*diffusion*diffusion*DiffIntensity);\n    vec3 color = lightcolor * lightdirection;\n\tvec2 c =vec2 (.5,.3);\n    float dist = .2;\n    float x = (uv.x - c.x);\n    float y = (c.y - uv.y);\n    float cond = sqrt(pow(x,2.0) + pow (y,2.0));\n    if (  cond   < dist) {  \n    \tcolor =  shading*lightcolor*diffusion;\n    }  \n    color = color *lightintensity;\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}