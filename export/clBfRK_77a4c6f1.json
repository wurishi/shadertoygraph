{"ver":"0.1","info":{"id":"clBfRK","date":"1694208435","viewed":70,"name":"Sound of Silence-1","username":"jorge2017a2","description":"Sound of Silence","likes":6,"published":1,"flags":8,"usePreview":0,"tags":["soundofsilence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle( vec2 p, float r )\n{return length(p) - r; }\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b; return length(max(d,0.0)) + min(max(d.x,d.y),0.0); }\n\n\n\nfloat Noise21(vec2 p)\n{\n    p = fract (p * vec2 (234.34, 435.345));\n    p += dot(p,p +34.23);\n    \n    return fract(p.x * p.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 *iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    uv *= 10.0;\n    //uv += iTime * 1.0;\n    uv.y*=-1.0;\n    uv.y -= iTime * 1.0;\n    uv.x+=0.5*sin(iTime*5.0);\n    vec2 gv = fract(uv) - 0.5;\n    vec2 idBox = floor(uv);\n    float n = Noise21(idBox); \n    \n    float width = .05;    \n    if (n<.5) \n    { gv.x *=  -1.; }\n    \n    gv.x=abs(gv.x)-0.1;\n    float d=length(gv-vec2(0.5))-0.5;\n    float mask = smoothstep(.01,-.01,abs(d)- width);\n    \n    d=length(gv-vec2(-0.5))-0.5;\n    \n    mask+= smoothstep(.01,-.01,abs(d)- width);   \n    col += mask*vec3(1.0,3.0,4.0)/4.0;\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//Referencia de sonido IQ y Gaz\n//Modificado por Jorge2017a2---jorgefp\n//----8--sep-2023\n//https://www.youtube.com/watch?v=QiNHqbf_bCo&t=79s\n//Disturbed / Simon & Garfunkel - The Sound of Silence | EASY Piano Tutorial\n\n\n#define PI acos(-1.)\n#define PIH (PI*.5)\n#define TAU (PI*2.)\n#define TWO_PI 6.2831\n\n//const float PI = 3.1415926;\n\n#define DD(a,b) n=(s>=a)? vec2(a,b):n;\n#define D3(a,b,c) n3=(s>=a && s<c)? vec3(a,b,c):n3;\n\n\nconst float pi = 3.1415927;\nconst float tau = 6.283185;\nconst float ttotal=40.0;\n\n//gaz\n#define osc_sin(x)sin((x)*TAU)\n#define osc_saw(x)(1.-fract(x)*2.)\n#define osc_sqr(x)sign(0.5-fract(x))\n#define osc_tri(x)(asin(sin((x)*PI))/PIH)\n\nfloat pblep(in float t, in float dt)\n{\n    if( t<dt)           { t=t/dt;       return t+t-t*t-1.0; }\n    else if( t>1.0-dt ) { t=(t-1.0)/dt; return t*t+t+t+1.0; }\n    return 0.0;\n}\n\n\n// saw wave iq\nfloat sawRaw( in float p, in float dpdt )\n{   float x = mod(p,tau)/tau;\n    return 2.0*x-1.0;\n}\n\n// square wave iq\nfloat squareRaw( in float p, in float dpdt )\n{   float t = fract(p/tau);\n    return sign(0.5-t);\n}\n\n// band limited saw wave\nfloat sawLim( in float p, in float dpdt )\n{\n    float x = mod(p,tau)/tau;\n    return 2.0*x-1.0 - pblep(x,dpdt);\n}\n\n// band limited square wave\nfloat squareLim( in float p, in float dpdt )\n{\n    float t = fract(p/tau);\n    return sign(0.5-t) + pblep(t,dpdt) - pblep(fract(t+0.5),dpdt);\n}\n\nfloat combinar(float a, float b, float f1, float f2)\n{   float ra=mix(0.0,a,f1);\n    float rb=mix(0.0,b,f2);\n    return ra+rb;\n}\n\nfloat wave( float x, float dxdt, in vec2 v )\n{   //referencia Inigo Quilez 2019\n    float f2=squareLim( x, dxdt)+squareRaw(x, dxdt);\n    float fx=f2;\n    return fx;\n}\n\nfloat SoundIq(float time)\n{ ///referencia de notas musicales... iq \n  time = mod( time+1.0, ttotal);\n // tune\n  float tempo = 1.0;\n  float s = time*tempo;\n  vec2 n = vec2(0);\n vec3 n3=vec3(0.0);\n \n D3(0.,38.,0.25) D3(0.25,38.,0.5) D3(0.5,41.,0.75) D3(0.75,41.,1.) D3(1.,45.,1.25) D3(1.25,45.,1.5)\n D3(1.5,24.,3.5) D3(1.5,43.,3.5) D3(3.5,31.,5.5) D3(3.75,36.,4.) D3(4.,36.,4.25) D3(4.25,36.,4.5)\n D3(4.5,40.,4.75) D3(4.75,40.,5.) D3(5.,43.,5.25) D3(5.25,43.,5.5) D3(5.5,26.,7.5) D3(5.5,41.,7.5)\n D3(7.5,33.,8.5) D3(7.75,41.,8.) D3(8.,41.,8.25) D3(8.25,41.,8.5) D3(8.5,29.,9.) D3(8.5,45.,8.75)\n D3(8.75,45.,9.) D3(9.,33.,9.5) D3(9.,48.,9.25) D3(9.25,48.,9.5) D3(9.5,34.,10.5) D3(9.5,50.,10.5)\n D3(10.5,33.,12.5) D3(10.5,48.,11.5) D3(0.,38.,0.25) D3(0.25,38.,0.5) D3(0.5,41.,0.75) D3(0.75,41.,1.)\n D3(1.,45.,1.25) D3(1.25,45.,1.5) D3(1.5,24.,3.5) D3(1.5,43.,3.5) D3(3.5,31.,5.5) D3(3.75,36.,4.)\n D3(4.,36.,4.25) D3(4.25,36.,4.5) D3(4.5,40.,4.75) D3(4.75,40.,5.) D3(5.,43.,5.25) D3(5.25,43.,5.5)\n D3(5.5,26.,7.5) D3(5.5,41.,7.5) D3(7.5,33.,8.5) D3(7.75,41.,8.) D3(8.,41.,8.25) D3(8.25,41.,8.5)\n D3(8.5,29.,9.) D3(8.5,45.,8.75) D3(8.75,45.,9.) D3(9.,33.,9.5) D3(9.,48.,9.25) D3(9.25,48.,9.5)\n D3(9.5,34.,10.5) D3(9.5,50.,10.5) D3(10.5,33.,12.5) D3(10.5,48.,11.5) D3(12.,41.,12.25) D3(12.25,41.,12.5)\n D3(12.5,34.,14.5) D3(12.5,50.,12.75) D3(12.75,50.,14.) D3(14.,50.,14.25) D3(14.25,52.,14.5) D3(14.5,34.,16.5)\n D3(14.5,53.,14.75) D3(14.75,53.,15.5) D3(15.5,52.,15.75) D3(15.75,50.,16.5) D3(16.5,33.,18.5) D3(16.5,48.,18.)\n D3(18.,50.,18.25) D3(18.25,48.,18.5) D3(18.5,26.,20.5) D3(18.5,45.,20.5) D3(20.5,29.,21.5) D3(20.75,41.,21.)\n D3(21.,41.,21.25) D3(21.25,41.,21.5) D3(21.5,28.,23.5) D3(21.5,48.,23.) D3(23.25,40.,23.5) D3(23.5,26.,25.5)\n D3(23.5,41.,23.75) D3(23.75,38.,25.5) D3(25.5,26.,27.5) D3(25.75,38.,26.) D3(26.,38.,26.25) D3(26.25,38.,26.5)\n D3(26.5,41.,26.75) D3(26.75,41.,27.) D3(27.,45.,27.25) D3(27.25,45.,27.5) D3(27.5,24.,29.5) D3(27.5,43.,29.5)\n D3(29.5,24.,31.5) D3(30.,36.,30.25) D3(30.25,36.,30.5) D3(30.5,40.,30.75) D3(30.75,40.,31.) D3(31.,43.,31.25)\n D3(31.25,43.,31.5) D3(31.5,26.,33.5) D3(31.5,41.,33.5) D3(0.,38.,0.25) D3(0.25,38.,0.5) D3(0.5,41.,0.75)\n D3(0.75,41.,1.) D3(1.,45.,1.25) D3(1.25,45.,1.5) D3(1.5,24.,3.5) D3(1.5,43.,3.5) D3(3.5,31.,5.5)\n D3(3.75,36.,4.) D3(4.,36.,4.25) D3(4.25,36.,4.5) D3(4.5,40.,4.75) D3(4.75,40.,5.) D3(5.,43.,5.25)\n D3(5.25,43.,5.5) D3(5.5,26.,7.5) D3(5.5,41.,7.5) D3(7.5,33.,8.5) D3(7.75,41.,8.) D3(8.,41.,8.25)\n D3(8.25,41.,8.5) D3(8.5,29.,9.) D3(8.5,45.,8.75) D3(8.75,45.,9.) D3(9.,33.,9.5) D3(9.,48.,9.25)\n D3(9.25,48.,9.5) D3(9.5,34.,10.5) D3(9.5,50.,10.5) D3(10.5,33.,12.5) D3(10.5,48.,11.5) D3(0.,38.,0.25)\n D3(0.25,38.,0.5) D3(0.5,41.,0.75) D3(0.75,41.,1.) D3(1.,45.,1.25) D3(1.25,45.,1.5) D3(1.5,24.,3.5)\n D3(1.5,43.,3.5) D3(3.5,31.,5.5) D3(3.75,36.,4.) D3(4.,36.,4.25) D3(4.25,36.,4.5) D3(4.5,40.,4.75)\n D3(4.75,40.,5.) D3(5.,43.,5.25) D3(5.25,43.,5.5) D3(5.5,26.,7.5) D3(5.5,41.,7.5) D3(7.5,33.,8.5)\n D3(7.75,41.,8.) D3(8.,41.,8.25) D3(8.25,41.,8.5) D3(8.5,29.,9.) D3(8.5,45.,8.75) D3(8.75,45.,9.)\n D3(9.,33.,9.5) D3(9.,48.,9.25) D3(9.25,48.,9.5) D3(9.5,34.,10.5) D3(9.5,50.,10.5) D3(10.5,33.,12.5)\n D3(10.5,48.,11.5) D3(12.,41.,12.25) D3(12.25,41.,12.5) D3(12.5,34.,14.5) D3(12.5,50.,12.75) D3(12.75,50.,14.)\n D3(14.,50.,14.25) D3(14.25,52.,14.5) D3(14.5,34.,16.5) D3(14.5,53.,14.75) D3(14.75,53.,15.5) D3(15.5,52.,15.75)\n D3(15.75,50.,16.5) D3(16.5,33.,18.5) D3(16.5,48.,18.) D3(18.,50.,18.25) D3(18.25,48.,18.5) D3(18.5,26.,20.5)\n D3(18.5,45.,20.5) D3(20.5,29.,21.5) D3(20.75,41.,21.) D3(21.,41.,21.25) D3(21.25,41.,21.5) D3(21.5,28.,23.5)\n D3(21.5,48.,23.) D3(23.25,40.,23.5) D3(23.5,26.,25.5) D3(23.5,41.,23.75) D3(23.75,38.,25.5) D3(25.5,26.,27.5)\n D3(25.75,38.,26.) D3(26.,38.,26.25) D3(26.25,38.,26.5) D3(26.5,41.,26.75) D3(26.75,41.,27.) D3(27.,45.,27.25)\n D3(27.25,45.,27.5) D3(27.5,24.,29.5) D3(27.5,43.,29.5) D3(29.5,24.,31.5) D3(30.,36.,30.25) D3(30.25,36.,30.5)\n D3(30.5,40.,30.75) D3(30.75,40.,31.) D3(31.,43.,31.25) D3(31.25,43.,31.5) D3(31.5,26.,33.5) D3(31.5,41.,33.5)\n D3(34.,41.,34.25) D3(34.25,41.,34.5) D3(34.5,45.,34.75) D3(34.75,45.,35.) D3(35.,48.,35.25) D3(35.25,48.,35.5) \n  \n  // lower one octave\n  n.y -=12.; \n      \n  // compute note frequency and time  \n  float f = 440.0*pow( 2.0, float(n3.y-69.)/12.0 );\n  float t = time - float(n3.x)/tempo;\n  if( n3.x==0.0 ) return 0.0;\n\n  // prepare wave parameters\n  float w = tau*f;\n  float dwdt = w/iSampleRate; // derivative\n    \n  // mix between bandlimited and raw saw waves  \n  vec2 v = smoothstep(-0.2,0.2,sin(t*vec2(1.0,0.5)) );\n  // build instrument\n  float f1,f2,f3,f4,y;\n  \n    f1=wave(1.00*w*t,1.00*dwdt,v);\n    f2=wave(2.01*w*t,2.01*dwdt,v);\n    f3=wave(4.01*w*t,4.01*dwdt,v);\n    f4=wave(8.01*w*t,8.01*dwdt,v);\n    \n  y  = 0.4*f1*exp(-5.0*t);\n        y += 0.3*f2*exp(-7.0*t);\n        y += 0.2*f3*exp(-9.0*t);\n        y += 0.1*f4*exp(-11.0*t);\n\n  float wf  = 0.4*f1;\n        wf += 0.3*f2;\n        wf += 0.2*f2;\n        wf += 0.1*f2;\n  y+=(y+wf)/2.0;\n  //y+=wf;\n  \n  \n  \n   float offset=n3.x+n3.z;\n   y*=exp(-1.0/n3.z * (t -offset) )*0.25;\n  \nreturn y;\n}\n\n\nvec2 mainSound( in int samp, float time )\n{ float t1=mod(time, 38.0);\n    float y;\n    y= SoundIq(t1);\n  return 0.10*vec2(y);\n}   \n","name":"Sound","description":"","type":"sound"}]}