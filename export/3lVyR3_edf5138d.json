{"ver":"0.1","info":{"id":"3lVyR3","date":"1611585418","viewed":75,"name":"Quagmire","username":"robshill","description":"Testing it out","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["galacticassaultsquad"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sat(float f) {\n    return clamp(0., 1., f);\n}\nvec3 sat(vec3 v) {\n    return vec3(sat(v.x), sat(v.y), sat(v.z));\n}\n\nvec2 N22(vec2 p) {\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34, 345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nfloat Hash21(vec2 p) {\n    p = fract(p * vec2(432.12, 876.432));\n    p += dot(p, p + 432.98);\n    return fract(p.x * p.y);\n}\n\nvec4 Pool(vec2 id, vec2 uv) {\n    vec2 n = N22(id);\n\n    uv.x += cos(uv.y*5.2+iTime*.5*n.x)/50.0;\n    uv.y += sin(uv.x*5.1+iTime*.5*n.y)/50.0;\n\n    float d = length(uv);\n\n    float timeFactor = sin(234.43*n.x+.33*iTime);\n\n    float width = .45 + .13 * fract(id.x * 123.32 + id.y * 543.31)\n                      + .03 * timeFactor;\n\n    float outer = smoothstep(width+.1, width-.02, d);\n    \n    vec3 col = vec3(.26, .35, .10);\n    \n    return vec4(col, outer);\n}\n\nvec4 InnerPool(vec2 id, vec2 uv) {\n    vec2 n = N22(id);\n\n    uv.x += cos(uv.y*5.2+iTime*1.5*n.x)/20.0;\n    uv.y += sin(uv.x*5.1+iTime*1.5*n.y)/21.0;\n\n    float d = length(uv);\n\n    float width = .3 + .25 * fract(id.x * 123.32 + id.y * 543.31);\n\n    float inner = smoothstep(width+.20, width , d);\n    \n    vec3 col = vec3(.18, .29, .07);\n\n    // add randomness to color\n    col += vec3(.04*n.x, .03*n.y, .03*n.x);\n\n    // darken center\n    float fromCenter = d/(width+.1); \n    col += -.05+.05*fromCenter;\n        \n    return vec4(col, inner);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // move around\n    uv.x+= iTime*.02;\n\n    // distort whole screen over time\n\tuv.x += cos(uv.y*5.2+iTime*.5)/100.0;\n    uv.y += sin(uv.x*5.1+iTime*.5)/100.0;\n\n    // make cells\n    uv *= 15.;\n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    \n    vec4 pool = vec4(0.);\n    vec4 innerPool = vec4(0.);\n    \n    float minDist = 100.;\n    \n    for (int x = -1; x <= 1; x++) {\n        for (int y = -1; y <= 1; y++) {\n            vec2 offset = vec2(x, y);\n            vec2 n = N22(id+offset);\n\n            vec2 timeFactor = vec2(sin(234.43*n.x+.33*iTime),\n                                   cos(432.27*n.y+.23*iTime));\n        \n            float maxPush = .9;\n            vec2 push = n * (timeFactor * .2) * maxPush - maxPush/2.;\n            if (int((id+offset).x) % 2 == 0) {\n                push.y += .5;\n            }\n\n            vec4 thisPool = Pool(id + offset, gv-offset-push);\n            if (thisPool.a > 0.) {\n              float thisAlphaFrac = thisPool.a /(thisPool.a+pool.a);\n              pool.rgb = mix(pool.rgb, thisPool.rgb, thisAlphaFrac);\n              pool.a = max(pool.a, thisPool.a);\n            }\n\n\n            vec2 timeFactor2 = vec2(sin(543.43*n.x+.29*iTime),\n                                    cos(435.67*n.y+.11*iTime));\n            vec2 innerPush = N22(id+offset) * 0.15 * timeFactor2;\n            vec4 thisInner = InnerPool(id + offset, gv-offset-push-innerPush);\n            if (thisInner.a > 0.) {\n              float thisAlphaFrac = thisInner.a /(thisInner.a+innerPool.a);\n              innerPool.rgb = mix(innerPool.rgb, thisInner.rgb, thisAlphaFrac);\n              innerPool.a = max(innerPool.a, thisInner.a);\n            }\n            \n            float dist = length(gv-offset-push);\n            if (dist < minDist) {\n                minDist = dist;\n            }\n        }\n    }\n\n    vec3 col = vec3(.38, .49, .20);\t// light green in the gaps\n    col = mix(col, pool.rgb, sat(pool.a));\n    col = mix(col, innerPool.rgb, sat(innerPool.a));\n    //col = mix(col, vec3(minDist*1.8), .3);\n    //col = vec3(minDist*minDist)*.5;\n    //col += vec3(minDist*minDist);\n    \n    //if (gv.x > .48 || gv.y > .48) col = vec3(1., 0., 0.);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}