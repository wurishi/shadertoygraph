{"ver":"0.1","info":{"id":"XfVcz1","date":"1731498832","viewed":79,"name":"uv warping","username":"Tiberon","description":"a test on warping uvs","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["uv","warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ){\n     vec3 a = vec3(sin(iTime)*0.5+0.5,sin(iTime+1.)*0.5+0.5,sin(iTime+1.5)*0.5+0.5);\n     vec3 b = vec3(cos(iTime*0.3)*0.5+0.5,cos(iTime*0.7)*0.5+0.5,cos(iTime*1.2)*0.5+0.5);\n     vec3 c = vec3(1.,1.,1.);\n     vec3 d = vec3(0.263,0.416,0.557);\n     return a+b*cos( 6.28318*(c*t+d) );\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy *2.0 -1.0;\n    \n    uv.x*=iResolution.x/iResolution.y;\n    \n    vec2 uv0=uv;\n    \n    uv0.x+=sin(iTime)*0.5;\n    \n    uv0.y+=cos(iTime)*0.5;\n    \n    vec3 fcol=vec3(0.);\n    \n    for (float i =0.0; i<4.; i++){\n    \n        uv.y+=cos(uv.x*length(uv)+iTime);\n    \n        uv.x-=sin(uv.y*length(uv)+iTime);\n    \n        uv*=1.5;\n    \n        uv=fract(uv);\n    \n        uv-=0.5;\n    \n        float d =length(uv)*exp(-length(uv0));\n    \n        d=sin(d*8.+iTime)/8.;\n    \n        d=abs(d);\n    \n        d=pow(0.01/d,1.2);\n    \n        vec3 col = sin(palette(length(uv0) + i*0.4 + iTime*0.4));\n    \n        fcol+=col*d;\n    }\n    fragColor = vec4(fcol,1.0);\n}","name":"Image","description":"","type":"image"}]}