{"ver":"0.1","info":{"id":"mtXcDn","date":"1690582149","viewed":75,"name":"#008","username":"jvincent","description":"A field of rainbow triangles that rotate as you move inward and along with time","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid","triangle","rainbow","rotating","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265359\n#define tpi 6.28318530718\n#define color(offset) abs(sin(offset + vec3(3, 7, 11) * pi/6.0))\n\nfloat triangle(vec2 plane, vec2 pos, float radius, float thickness, float rotation)\n{\n    float angle = mod(atan(plane.x-pos.x,plane.y-pos.y)/(2.0*pi), 1.0);\n    float adAngle = 2.0*pi*mod(angle + rotation, 1.0/3.0);\n    \n    float TxDeflect = sin(adAngle) - 1.0/( 1.0/tan(adAngle) + sqrt(3.0));\n    float TyDeflect = cos(adAngle) - 1.0/( sqrt(3.0)*tan(adAngle) + 1.0);\n    float tDeflect = radius * sqrt( pow(TxDeflect, 2.0) + pow(TyDeflect, 2.0) );\n    \n    float triangle = thickness/abs(length(plane-pos)-radius + tDeflect);\n    return triangle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 1.0*(fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.0);\n    \n    float brightness = 1.0/3.0;\n    float count = sin(iTime + pi/2.0);\n    for(float i = -7.0/6.0; i < 7.0/6.0; i+= 7.0/24.0)\n    {\n        for(float j = 7.0/12.0; j > -7.0/12.0; j -= 1.0/6.0)\n        {\n            count++;\n            float t = triangle(uv, vec2(i, j), 1.0/6.0, 0.01, clamp(sin(iTime + abs(i) + abs(j)), 0.0, 1.0/6.0) + 0.5*mod(count, 4.0));\n            col += brightness * color(iTime + 2.0*(abs(i) + abs(j))) * t;\n        }\n\n    }\n   \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}