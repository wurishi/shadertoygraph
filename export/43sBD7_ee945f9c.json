{"ver":"0.1","info":{"id":"43sBD7","date":"1728481090","viewed":24,"name":"Hw","username":"satira","description":"hw","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["hw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0; \n    uv.y *= iResolution.y / iResolution.x; \n\n    float time = iTime;\n    vec3 color = vec3(0.0);\n\n    int numPatterns = 12; \n    float scale = 10.0;  \n\n    for (int i = 0; i < numPatterns; i++)\n    {\n        float angle = float(i) * (6.28318 / float(numPatterns)) + time * 0.3;\n        float r = length(uv) * scale;\n\n        float theta = atan(uv.y, uv.x) + angle;\n\n        float distortion = sin(theta * 5.0 + time) * 0.1;\n        float x = r * cos(theta + distortion);\n        float y = r * sin(theta + distortion);\n\n        float red = 0.5 + 0.5 * cos(5.0 * x + time);\n        float green = 0.5 + 0.5 * sin(7.0 * y + time);\n        float blue = 0.5 + 0.5 * cos(3.0 * (x + y) + time);\n\n        color += vec3(red, green, blue);\n    }\n\n    color /= float(numPatterns);\n\n    fragColor = vec4(color * vec3(0.0, 1.0, 0.0), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}