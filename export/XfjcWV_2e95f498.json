{"ver":"0.1","info":{"id":"XfjcWV","date":"1723013583","viewed":94,"name":"Drop 03 - march without loop!","username":"Elsio","description":"click bait! kkk","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["grid","raymarch","balls","loopless"],"hasliked":0,"parentid":"4fByDV","parentname":"Drop 01a explained"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 381, -6 ch by @Tempally, -5 fabrice, -6 elsio\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy, \n         d = vec2(3.14 / 16., .18); \n         \n    float l = length(u += u - r) / r.y,\n          c = floor((u.x = atan(u.y, u.x)) / d.x),\n          t = sin(c * 457.07);\n\n\n    u.y = log(l)\n          + sin(c + t * 3.) * .3 \n          //+ cos(c * 4.) * .3 \n          + (c = mod(t + iTime * .1, d.x));\n            \n    u.y > .0 \n        ? d.y *= 29., \n           u.y += 13. * c \n        : c;\n               \n    o = smoothstep(3. / r.y, .0, l * (length(d = mod(u, d) - d / 2.) - .09))\n        * fract(99. * cos(t + vec4(1, 2, 3, 0))) - length(d + .04) * 4.;\n}\n\n\n/* original @Elsio\n\n#define h11(a) fract(sin(a * 453.2734) * 994.3434)\n#define cor(a) (abs(fract(9123. * cos(a + vec4(0, 2, 4, 0)))))\n\nvec4 col;\nvec2 grid(vec2 p) {\n    float t, id,\n          l = length(p),\n          w = 3.14 / 16.,\n          h = 27.;  // ???\n          \n    float debug = .18;  // ???\n    \n    p.x = atan(p.y, p.x);\n    id  = floor(p.x / w); \n    \n    t   = h11(id) + iTime * .1;\n    \n    p.y = sin(id + t * 3.) * .3 + mod(t, w) + log(l);\n    \n    if(p.y > .0)\n        debug *= 29.,  // ???\n        p.y += ((h - 1.) / 2.) * mod(t, w);\n    \n    p.y = mod(p.y, debug) - debug / 2.;\n    \n\n    p.x = mod(p.x, 3.14/16.) - 3.14/32.;\n    col = cor(h11(id));\n    return p;    \n}\n\n\n\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy; \n         u = vec2(u + u - r) / r.y;\n    \n    vec2 p = grid(u);\n    o = smoothstep(3. / r.y, .0, \n            length(u) * (length(p) - .09)\n        )\n          * col - length(p + .04) * 4.;\n\n}\n\n\nEternamente grato ao @Hyeve\nque me possibilitou chegar nesse algoritmo\n\n    Crystal Ball Rainfall \n    https://www.shadertoy.com/view/NdV3Dw\n\n\n...eu sei, tá irreconhecível, mas\no algoritmo atual é uma refatoração dele\n\n\n*/","name":"Image","description":"","type":"image"}]}