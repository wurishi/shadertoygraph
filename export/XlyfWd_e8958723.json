{"ver":"0.1","info":{"id":"XlyfWd","date":"1544455541","viewed":414,"name":"Shannon-Nyquist limit on energy","username":"FabriceNeyret2","description":"windowed contrast computed on [url] https://www.shadertoy.com/view/MtKfD3 [/url]\n( see there for explanations )","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["nyquist","signal","shannon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// windowed contrast of  https://shadertoy.com/view/MtKfD3\n\n#define N          2.            // window size (pixels)\n#define filter(x)  gauss(x)      // filter type\n\n#define sinc(x)  ( x==0. ? 1. : sin(PI*x)/(PI*x) )\n#define gauss(x)   exp(-.5*(x)*(x)*4.)\n#define PI         3.14159265359\n\nfloat f(float x, float y) {\n    y = (x+iTime)*  (1.+y);\n    y =  sin( 3.1419/2.*y );\n  //return .5+.5*y;    // signal\n    return y*y;        // energy, i.e. variance, i.e. contrast^2\n}\nvoid mainImage( out vec4 O, vec2 U )\n{\n    float x = U.x < iResolution.x/2. ? U.x : U.x - .5,\n          y = ceil(U.y/iResolution.y*20.)/20., s = 0.;\n    O -= O;\n    for (float i = -100.; i <= 100.; i++)\n        s += filter(i/N),\n        O += f(x-i,y) * filter(i/N);\n    O /= s;\n    O = sqrt(O);\n}","name":"Image","description":"","type":"image"}]}