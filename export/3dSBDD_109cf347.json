{"ver":"0.1","info":{"id":"3dSBDD","date":"1590015858","viewed":757,"name":"Fast heavy blur","username":"darionco","description":"Fast heavy blur shader, configurable, not really gaussian though but close enough.\nMeant to be used in applications where a \"frosted glass\" effect is needed, although it can be used anywhere.\nBuilt for speed rather than accuracy.","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["blur","gaussianblur","heavy","gaussian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI2 6.2831853072 // PI * 2\n#define PI_O_2 1.5707963268 // PI / 2\n\nconst float passes = 64.0;\nconst float radius = 32.0;\nconst float lossiness = 2.0;\nconst float preserveOriginal = 0.0;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 pixel = 1.0 / iResolution.xy;\n    vec2 uv = fragCoord / iResolution.xy;\n\n    float count = 1.0 + preserveOriginal;\n    vec4 color = texture(iChannel0, uv) * count;\n    float directionStep = PI2 / passes;\n\n    vec2 off;\n    float c, s, dist, dist2, weight;\n    for(float d = 0.0; d < PI2; d += directionStep) {\n        c = cos(d);\n        s = sin(d);\n        dist = 1.0 / max(abs(c), abs(s));\n        dist2 = dist * (2.0 + lossiness);\n        off = vec2(c, s);\n        for(float i= dist * 1.5; i <= radius; i += dist2) {\n            weight = i / radius; // 1.0 - cos(i / radius * PI_O_2);\n            count += weight;\n            color += texture( iChannel0, uv + off * pixel * i) * weight;\n        }\n    }\n\n    fragColor =  color / count;\n}","name":"Image","description":"","type":"image"}]}