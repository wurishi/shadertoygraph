{"ver":"0.1","info":{"id":"fllBDl","date":"1651660366","viewed":63,"name":"sin comparison","username":"codeandwood","description":"comparison of sin algorithms.\n\nOn my PC, the top one sometimes jitters.  ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932\n\n\nfloat p2(float x, float y){  return x>0.?pow(x,y):pow(-x,y)*(mod(y,2.)!=0.?-1.:1.);}\n\nfloat fact(float x){\n  float r=1.;\n  for (float i=1. ; i<=x;i++){    r*=i;  }\n  return r;\n}\n\n#define MAX 15.\n\n\nfloat sin2(float x){\n  x=mod(x+PI,PI*2.)-PI;\n  float r=0.;\n  float s=1.;\n  float f=1.;\n  for (float k=0.;k<MAX;k++){\n    float l=k*2.+1.;\n     //  f=fact(l);\n      r+=s*p2(x,l)/f;\n      f*=(l+2.)*(l+1.);\n      s=-s;\n  }\n  return (r);\n  \n}\n\n\n\n/*\n\nBottom:  glsl built-in sin()\nMid:   taylor expansion\ntop: difference\n\n\n\n*/\n \nfloat rand(float c){return fract(sin(c*(91.3458))*47453.5453);}\nfloat rand2(float c){return fract(sin2(c*(91.3458))*47453.5453);}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n     float v=sin(uv.x*20.-10.);\n     float w=sin2(uv.x*20.-10.);\n     \n     if (uv.x>0.5){\n         v=rand(uv.x);\n         w=rand2(uv.x);\n     }\n     float r=0.;\n     if (uv.y<0.33) r=v;\n     if (uv.y>0.34 && uv.y<0.65) r=w;\n     if (uv.y>0.66) r=(v-w)*1000000.;          \n    fragColor.rg=vec2(max(r,0.),max(-r,0.));  \n}\n    \n    \n    ","name":"Image","description":"","type":"image"}]}