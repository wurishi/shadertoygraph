{"ver":"0.1","info":{"id":"wl2Gzt","date":"1560797271","viewed":150,"name":"Divine Spider","username":"anclin","description":"Divine Spider","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spider","divine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat SinLerp(float min, float max, float t) {\n \treturn mix(min, max, sin(t) * 0.5 + 0.5);   \n}\n\nfloat Sin01(float t) {\n \treturn SinLerp(0., 1., t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    // Time varying pixel color\n    vec3 col = vec3(uv,0);\n    \n    float t = iTime * .3;\n    \n    // polar\n    vec2 st = vec2(atan(uv.x, uv.y), length(uv));\n    st.x = st.x/6.28+0.5;\n\tcol = vec3(st.x);\n    \n    \n    //st.x += st.y * SinLerp(0., 2., iTime);\n    uv = st;\n    \n    \n    \n    // zig zag\n    float p = 1.; // petals\n    float x = uv.x * p;// + t * 0.5;\n    float y = uv.y * SinLerp(.2, 1., t);\n    \n    // RINGS\n    float r = y + sin( uv.y * 7. * SinLerp(1., 2., t) - t*3.5);\n    // FLOWER\n    float z = min(fract(x), fract(1.-x)); \n    \n    \n    col = vec3(z);\n    col = vec3(r + z);\n    float s = 20.;//SinLerp(4., 15., t); // split of the petal\n    //col = vec3(r + fract( z * s) );\n    col = vec3(fract(r + fract( z * s) ));\n    \n    // Output to screen\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}