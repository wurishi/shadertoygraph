{"ver":"0.1","info":{"id":"7lfBRB","date":"1651037705","viewed":160,"name":"Custom XMB","username":"oxters168","description":"A background inspired by the PSP xmb","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["background"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 lerp(vec3 color1, vec3 color2, float value)\n{\n\treturn value * (color2 - color1) + color1;\n}\nfloat wave(float x, float frequency, float speed, float midHeight, float maxHeight)\n{\n    return (sin(frequency * (x + speed * (((1. - (pow(cos(0.002 * (iTime + 400.)), 2.) + 1.) / 2.) + .1) * 2048.))) * (maxHeight - midHeight)) + midHeight;\n}\nfloat percentHigh(float currentY, float waveHeight, float maxHeight, float power)\n{\n    float percentWave = max(waveHeight - currentY, 0.0) / maxHeight;\n    return pow(1.0 - percentWave, power);\n}\nfloat waveColor(vec2 uv, float waveHeight, float maxHeight, float frequency, float power)\n{\n    float percentWave = percentHigh(uv.y, waveHeight, maxHeight, power);\n    return clamp(percentWave + 0.8, 0.0, 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Lerped background\n    vec3 blue = vec3(0, 0.4, 1);\n    vec3 blue2 = vec3(0, 0.7, 1);\n    float amount = (uv.x + uv.y) / 2.0;\n    vec3 bg = lerp(blue2, blue, amount);\n    \n    // Overlayed sine waves\n    float midHeight1 = 0.4;\n    float maxHeight1 = 0.5 + wave(0.0, 4.0, 0.02, 0.0, 0.02);\n    float power1 = 50.0; //Higher power means thinner line\n    float frequency1 = 2.0 + wave(0.0, 3.0, 0.03, 0.0, 0.02);\n    float speed1 = 0.4 + wave(0.0, 2.2, 0.04, 0.0, 0.01);\n    float waveHeight1 = wave(uv.x, frequency1, speed1, midHeight1, maxHeight1);\n    float waveCol1 = waveColor(uv, waveHeight1, maxHeight1, frequency1, power1);\n    \n    float midHeight2 = 0.42;\n    float maxHeight2 = 0.54 + wave(0.0, 3.0, 0.04, 0.0, 0.02);\n    float power2 = 50.0; //Higher power means thinner line\n    float frequency2 = 2.1 + wave(0.0, 4.0, 0.05, 0.0, 0.02);\n    float speed2 = 0.3 + wave(0.0, 2.0, 0.02, 0.0, 0.01);\n    float waveHeight2 = wave(uv.x, frequency2, speed2, midHeight2, maxHeight2);\n    float waveCol2 = waveColor(uv, waveHeight2, maxHeight2, frequency2, power2);\n    \n    vec3 col = bg;\n    if (uv.y < waveHeight1)\n        col = waveCol1 * col;\n    if (uv.y < waveHeight2)\n        col = waveCol2 * col;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}