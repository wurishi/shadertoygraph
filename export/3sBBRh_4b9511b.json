{"ver":"0.1","info":{"id":"3sBBRh","date":"1589422966","viewed":148,"name":"Tetration in the Complex plane","username":"enslow","description":"This fractal is generated in the complex plane by computing the N-th tetration at each point.\nI would love some advice on how to improve my code, especially the coloring so I can continue to improve :). Thank you for reading","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","tetration","3b1b"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//The argument function takes in parameters of a+bi\n//References:\n//\n//http://paulbourke.net/fractals/tetration/\n//3Blue1Brown: https://youtu.be/elQVZLLiod4?t=2558\t\n\n\n#define pi 3.14159\n#define CENTER vec2(0.5,.217708)\n//#define CENTER vec2(-1.296537,.0021708)\n#define LOOP 23.15\n\n//Thank you mla!\nint AA = 16;\n\n//Returns angle of p where p = p.x + p.y*i\nfloat arg(vec2 p)\n{\n    return atan(p.y,p.x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = exp(10.*pow(sin(pi/2.*iTime/LOOP),2.));\n    \n    \n    //resize window and number of iterations\n    int N = 40+int(log(t/2.0)*log(t/2.0));\n    \n    \n    //background gradient\n    vec3 col;\n    vec3 fcol;\n    for (int k=0;k<AA;k++)\n    {\n        for (int j=0;j<AA;j++)\n        {\n            //temporary variables\n            vec2 uv = 3.0 * (2.0 * fragCoord.xy + vec2(k,j)/float(AA)-iResolution.xy)/iResolution.y / t+CENTER;\n            vec2 p = uv;\n            col = vec3((uv.x+3.)/10.,0.4,0.5);\n            float c;\n            float m;\n            for (int i=0;i<N;i++)\n            {\n                //complex exponentiation\n                c = pow(length(uv),p.x)*exp(-p.y*arg(uv));\n                //m = p.y*log(length(uv))+p.x*arg(uv);\n                m = p.y*0.5*log(dot(uv,uv))+p.x*arg(uv);\n                p.x = cos(m);\n                p.y = sin(m);\n                p *= c;\n\n                //compute color based on magnitude\n                if (length(p) > 500.)\n                {\n                    float f = float(i)/20.;    \n                    fcol += abs(vec3((sin(f+1.57)),sin(f+0.4),sin(1.2*(f+0.5))))*0.85;          \n                    break;\n                }\n            }\n        }\n    }\n    fcol /= float(AA*AA);\n    \n    fragColor = vec4(mix(col,fcol,0.4),1.0);\n}","name":"Image","description":"","type":"image"}]}