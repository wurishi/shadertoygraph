{"ver":"0.1","info":{"id":"433XRj","date":"1719243728","viewed":57,"name":"2d landscape v2","username":"jorge2017a2","description":"2d landscape","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["2dlandscape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n//y gracias a la comunidad de shadertoy\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define S3(d,b) smoothstep(0.5/antialiasing(0.5),0. , d - (b) )\n\n\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,S2( distObj-0.05,0.0)); return colOut;}\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\n\nvec3 DrawFigDelgado(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj-0.001,0.0)); return colOut; }\n\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\n\nfloat sdTriangleIsosceles( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\n\nfloat GetHeight(float x) \n{  return sin(x*0.371)+sin(x)*0.274; }\n\n\nvec3 monte01(vec2 uv, vec3 colout, vec3 col2)\n{\n    float id = floor(uv.x);\n    float n = fract(sin(id*139.13)*5234.2)*2.-0.1;\n    float x = n*0.15;\n    float y = GetHeight(uv.x);\n    //ground , piso\n    y=uv.y+y;\n    colout= DFB(col2, colout, y );\n    \n    \n    return colout;\n}\n\n\nvec3 arbol(vec2 uv, vec3 colout, vec3 col2)\n{\n    float y = GetHeight(uv.x);\n    //ground , piso\n    y=uv.y+y;\n    //arbol\n    if( y<(-uv.y+0.5) &&  y>(-uv.y-1.5) )\n    {\n        float d4=abs(uv.x)-0.05;\n        colout= DrawFigSolo(vec3(1.0,0.5,0.1),colout,d4);\n    }\n    \n    float d2= sdTriangleIsosceles(vec2(uv.x, -uv.y-y+2.0),vec2(0.2,1.5) );\n    float d3= sdTriangleIsosceles(vec2(uv.x, -uv.y-y+3.0),vec2(0.2,1.5) );\n    \n    colout= DFB(col2,colout,d2);\n    colout= DFB(col2,colout,d3);\n    return colout;\n    \n}\n\nvec3 arboles(vec2 uv, vec3 colout, vec3 col2)\n{\n    //uv.x*=0.5;\n    float id = floor(uv.x);\n    float n = fract(sin(id*139.13)*4234.2)*2.-0.1;\n    float x = n*0.15;\n    float y = GetHeight(id+0.5+x);\n    uv.x = fract(uv.x)-0.5;\n    vec2 uvn=(uv-vec2(x,-y))*vec2(1,0.8+n*0.2);\n    colout=arbol(uvn, colout,col2); \n    \n    return colout;\n}\n\n\nvec3 grupo1(vec2 uv, vec3 col, vec3 col2, vec3 col3)\n{\n    col= monte01(uv,col, col2);\n    float x=floor(uv.x);\n    if(mod(x,3.0)==0.0 )\n    col=arboles(uv, col, col3);\n    \n    return col;\n}\n\n\nfloat Hash21(vec2 p) { // random number generator\n    p = fract(p*vec2(123.34, 456.21));//fract is between 0 en 1\n    p += dot(p, p + 45.32);\n    return fract(p.x * p.y);\n}\n\n\n//https://www.shadertoy.com/view/DllfR7  ... Pixel Stars\nvec3 estrellas(vec2 uv, vec3 col, vec3 col2)\n{\n    uv *= 17.56;\n    vec2 id = floor(uv);\n    //vec3 col = vec3(0.); \n         \n      uv = fract(uv) - .5;\n      \n      float size = 0.1;\n      //float t=5.0+3.0*sin(iTime);\n      float t=5.0;\n      \n      for(int y= -1 ; y <= 2; y++)\n      {\n        for(int x= -1; x <=  2; x++)\n        {\n         vec2 offs = vec2(x , y);\n         float n = Hash21(id + offs)+Hash21(id + offs*3.51234); \n         \n         float d= 20.;\n         d *= size + sin(t * size * .005);\n         d = .2 /d;\n         size = fract( n * 232.32);\n         d *= size + sin(t * size);\n         col= DFB(vec3(1.0),col,d);\n         \n         }\n       }\n\n     return col;\n     \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    uv-=vec2(0.0,-0.5);\n    uv.x+=iTime*0.25;\n    \n    float esc=6.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col=vec3(0.0);\n    \n    col= estrellas(uv, col, vec3(0.0,0.0,1.0));\n    col= estrellas(uv+vec2(2.0,1.0), col ,vec3(1.0,1.0,0.0));\n    \n    vec3 vd=vec3(0.0,1.0,0.0);\n    col= grupo1(uv-vec2(12.0,3.5),col, vec3(0.4), vd*0.2);\n    col= grupo1(uv-vec2(8.0,2.5),col, vec3(0.6),vd*0.4);\n    col= grupo1(uv,col, vec3(0.8) ,vd*0.6);\n    col= grupo1(uv+vec2(4.,1.5),col, vec3(1.0),vd*0.8);\n   \n    col=pow(col,  vec3(0.554545));\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}