{"ver":"0.1","info":{"id":"NslXWf","date":"1619447413","viewed":256,"name":"_Night Sky_","username":"bhpcv252","description":"**Night Sky**\n\nTry lowering NS value if you see white/black screen.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["stars","nightsky","twinkle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NS 1000.\n\nfloat L(vec2 uv, vec2 ofs, float b, float l) {\n    return smoothstep(0., 1000., b*max(0.1, l)/pow(max(0.0000000000001, length(uv-ofs)), 1./max(0.1, l)));\n}\n\nfloat rand(vec2 co, float s){\n    float PHI = 1.61803398874989484820459;\n    return fract(tan(distance(co*PHI, co)*s)*co.x);\n}\n\nvec2 H12(float s) {\n    float x = rand(vec2(243.234,63.834), s)-.5;\n    float y = rand(vec2(53.1434,13.1234), s)-.5;\n    return vec2(x, y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    \n    vec4 col = vec4(.0);\n    \n    vec4 b = vec4(0.01176470588, 0.05098039215, 0.14117647058, 1.);\n    vec4 p = vec4(0.13333333333, 0.07843137254, 0.13725490196, 1.);\n    vec4 lb = vec4(0.10196078431, 0.21568627451, 0.33333333333, 1.);\n    \n    vec4 blb = mix(b, lb, -uv.x*.2-(uv.y*.5));\n    \n    col += mix(blb, p, uv.x-(uv.y*1.5));\n    \n    for(float i=0.; i < NS; i++) {\n    \n        vec2 ofs = H12(i+1.);\n        ofs *= vec2(1.8, 1.1);\n        float r = (mod(i, 20.) == 0.)? 0.25+abs(sin(i/50.)): 0.25;\n        col += vec4(L(uv, ofs, r+(sin(fract(iTime)*.1*i)+1.)*0.02, 1.));\n    }\n\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}