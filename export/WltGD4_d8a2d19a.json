{"ver":"0.1","info":{"id":"WltGD4","date":"1576370982","viewed":189,"name":"Tiny Battles","username":"maz","description":"Game of life implementation\nLeft-click to color in cells\n\n","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["2d","simulation","automata","life","conway","gameoflife","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define CELLSIZE 4  // Change cell size to control pixel size\n\nfloat hash1(float n)\n{\n\treturn fract(sin(n)*138.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0,0,0,0);\n    int cellSize = CELLSIZE;\n    \n    if (iFrame == 0)\n    {\n        // random-ish initial state\n        // formula from: https://www.shadertoy.com/view/XstGRf\n\t    vec2 uv = floor(fragCoord.xy/float(cellSize))/iResolution.xy;\n    \tfloat c = step(0.5, hash1(uv.x*13.0 + hash1(uv.y*71.1))); \n        fragColor = vec4(c,0,0,1);\n    }\n    else\n    {\n\t    ivec2 p = ivec2(fragCoord.xy-mod(fragCoord.xy, float(cellSize)));\n        ivec2 size = ivec2(textureSize(iChannel1, 0));\n        \n        ivec2 nn = ivec2( 0, cellSize);\n        ivec2 ne = ivec2( cellSize, cellSize);\n        ivec2 nw = ivec2(-cellSize, cellSize);\n        \n        ivec2 ss = ivec2( 0,-cellSize);\n        ivec2 se = ivec2( cellSize,-cellSize);\n        ivec2 sw = ivec2(-cellSize,-cellSize);\n        \n        ivec2 ww = ivec2(-cellSize, 0);\n        ivec2 ee = ivec2( cellSize, 0);\n\n        int count = 0;\n        count += int(texelFetch(iChannel1, (p+nn+size)%size, 0).x);\n        count += int(texelFetch(iChannel1, (p+ne+size)%size, 0).x);\n        count += int(texelFetch(iChannel1, (p+nw+size)%size, 0).x);\n\n        count += int(texelFetch(iChannel1, (p+ee+size)%size, 0).x);\n        count += int(texelFetch(iChannel1, (p+ww+size)%size, 0).x);\n\n        count += int(texelFetch(iChannel1, (p+ss+size)%size, 0).x);\n        count += int(texelFetch(iChannel1, (p+se+size)%size, 0).x);\n        count += int(texelFetch(iChannel1, (p+sw+size)%size, 0).x);\n    \n        int current = int(texelFetch(iChannel1, p, 0).x);        \n       \tif (count < 2) fragColor = vec4(0,0,0,1); \n       \telse if (count == 2 && current > 0) fragColor = vec4(1,0.2,0.2,1); \n       \telse if (count == 3) fragColor = vec4(1,0.2,0,1); \n       \telse if (count > 3) fragColor = vec4(0,0,0,1);\n        \n   \t    if (iMouse.w > 0.0)\n    \t{\n\t       \tfloat c = 1.0-step(float(cellSize), length(iMouse.xy-fragCoord.xy));\n            fragColor = fragColor + c * vec4(1,0.2,0.2,1);\n    \t}\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // blend new image with previous\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec4 currentColor = texture(iChannel0, uv);\n    fragColor = currentColor + texture(iChannel1, uv)*0.9;\n}","name":"Buffer B","description":"","type":"buffer"}]}