{"ver":"0.1","info":{"id":"ltcSRj","date":"1480736165","viewed":108,"name":"Dynamic Graph","username":"micantre","description":"Change the definition of the function at the top of the code to change the visuals","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sinecosine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// change this to whatever function you want to graph (e.g. sin, tan, etc.)\n// also try using one of my specual functions I created\n#define FUNC mySpecialSin\n\n//change the thickness of the graph\n#define THICKNESS 0.2\n\n#define NUM_OF_LINES 5\n\n//SPECIAL FUNCTIONS\n\nfloat mySin(float x)\n{\n    return sin((x)*5. + iTime);\n}\n\nfloat myCos(float x)\n{\n    return cos((x)*5. + iTime);\n}\n\nfloat myParabola(float x)\n{\n    return pow(x,2.0) -1.0;\n}\n\nfloat mySqrt(float x)\n{\n    return pow(x,0.5) -1.0;\n}\n\n\nfloat mySpecialSin(float x)\n{\n    return sin(sin((x)*5. + iTime)*5. + iTime);\n}\n\nfloat myRain(float x)\n{\n    return sin(tan((x)*5. + iTime)*50. + iTime);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv*2.0 - 1.0; // between -1 and +1\n    uv.x *= iResolution.x / iResolution.y;\n    float xMax = iResolution.x / iResolution.y;\n    \n    vec3 pixel = vec3(0.);\n    \n    float thickness = THICKNESS;\n    \n    \n    if(uv.x > -1.5 && uv.x < 1.5)\n    {\n        pixel = vec3(0.);\n        \n        for(int i = 0; i < NUM_OF_LINES; i++)\n        {\n            // get the y value\n            float yVal = FUNC(uv.x + float(i)*2.0);\n\n            // color within a certain thickness of that y value\n            if(uv.y + thickness/2. > yVal && uv.y - thickness/2. < yVal)\n            {\n                pixel = vec3(sin(iTime + uv.x), cos(iTime+ uv.x), 1.);\n            }\n        }\n    }\n    fragColor = vec4(pixel,1.0);\n}","name":"Image","description":"","type":"image"}]}