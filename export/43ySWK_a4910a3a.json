{"ver":"0.1","info":{"id":"43ySWK","date":"1720469065","viewed":65,"name":"perlin flesh","username":"int_45h","description":"Tried to make a fleshy kind of effect with perlin noise","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["perlin","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\nfloat hash12(vec2 p)\n{\n\tuvec2 q = uvec2(ivec2(p)) * uvec2(1597334673U, 3812015801U);\n\tuint n = (q.x ^ q.y) * 1597334673U;\n\treturn float(n) * 2.328306437080797e-10;\n}\nfloat hash13(vec3 p)\n{\n\tuvec3 q = uvec3(ivec3(p)) * uvec3(1597334673U, 3812015801U, 2798796415U);\n\tuint n = (q.x ^ q.y ^ q.z) * 1597334673U;\n\treturn float(n) * 2.328306437080797e-10;\n}\n\nvec2 direction(float s)\n{\n    float t = 2.*PI*s;\n    return vec2(cos(t), sin(t));\n}\n\nfloat perlin2d(vec2 p)\n{\n    vec2 pg = floor(p), pc = p-pg;\n    vec2 n = vec2(0, 1);\n    \n    float p0 = dot(direction(hash12(pg+n.xx)), pc-n.xx);\n    float p1 = dot(direction(hash12(pg+n.yx)), pc-n.yx);\n    float p2 = dot(direction(hash12(pg+n.xy)), pc-n.xy);\n    float p3 = dot(direction(hash12(pg+n.yy)), pc-n.yy);\n    \n    pc = pc*pc*(3.-2.*pc);\n    \n    return mix(mix(p0, p1, pc.x), mix(p2, p3, pc.x), pc.y)*.5+.5;\n}\n\nvec3 get_normals(vec2 p)\n{\n    const vec2 e = vec2(0, .1);\n    return normalize(vec3(\n        perlin2d(p+e.yx)-perlin2d(p-e.yx),\n        perlin2d(p+e.xy)-perlin2d(p-e.xy),\n        1\n    ));\n}\n\nstruct light\n{\n    vec3 p, c;\n    float i;\n};\n\nvec3 get_lighting(vec2 p)\n{\n    light li = light(vec3(\n        cos(iTime)*4.,\n        sin(iTime)*4.,\n        6\n    ), vec3(1), 30.);\n    \n    vec3 n = get_normals(p);\n    vec3 l = li.p - vec3(p, 0);\n    float a = length(l);\n    a = li.i / (a*a);\n    l = normalize(l);\n    vec3 v = vec3(0,0,1);\n    vec3 h = normalize(l+v);\n\n    float sp = perlin2d(p);\n    float m = sin(sp*1.7*PI+(sin(iTime)*.5+.5)*.4)*.5+.5;\n    float s = 0.3;\n    float t = 0.7;\n    m = smoothstep(s,s+t,m);\n    vec3 base_col = mix(vec3(1,.4,.4), vec3(1,.36,.36),sin(perlin2d(p+.2*iTime)*5.*PI));\n    base_col = mix(vec3(.3,.2,.2),base_col,m);\n    \n    float rough = mix(200., 4000., m);\n    float NdotL = max(dot(n,l),0.);\n    float NdotH = max(dot(n,h),0.);\n    float spec = max(pow(NdotH, rough), 0.);\n    \n    return base_col*(.2+NdotL*a+spec);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = get_lighting(uv*8.);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}