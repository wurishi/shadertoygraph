{"ver":"0.1","info":{"id":"3sd3Dr","date":"1568482770","viewed":94,"name":"Crying Emoji ~ pbakshi","username":"pbakshi","description":"Inspired by the work of \"The Art of Code\" youtube channel!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["emoji"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, c) smoothstep(a, b, c)\n#define PI 3.14159\n\nfloat sdfLine(float pt, float cd, float blur) {\n\treturn S(cd-blur, cd, pt) - S(cd, cd+blur, pt);\n}\n\nfloat sdfBand(float pt, float l, float r, float blur) {\n\treturn S(l - blur, l, pt) - S(r, r + blur, pt);\n}\n\nfloat sdfCircle(vec2 uv, vec2 cd, float r, float blur) {\n    vec2 uc = uv-cd;\n\tfloat d = dot(uc, uc);\n    float r2 = r*r;\n    return smoothstep(r2 + blur, r2 - blur, d);\n}\n\nfloat sdfBox(vec2 uv, vec2 bl, vec2 tr, float blur) {\n\treturn sdfBand(uv.x, bl.x, tr.x, blur) * sdfBand(uv.y, bl.y, tr.y, blur);\n}\n\nfloat map01(float a, float b, float t) {\n\treturn clamp((t-a)/(b-a), 0.0, 1.0);\n}\n\n//Crying Emoji Parts\n\nvec4 Tears(vec2 uv, vec2 s1, vec2 s2, float blr) {\n\tuv.x = abs(uv.x);\n    vec4 bg = vec4(0.0);\n    vec4 tcbndri = vec4(0.111, 0.178, 1.0, 1.0);\n\tvec4 tc = vec4(0.411, 0.678, 0.917, 1.0);\n\n    vec4 col = bg;\n    uv.y += 0.155;\n    col.a = sdfBox(uv, vec2(s1.x, s1.y + (uv.x) * (uv.x) * (uv.x) * 0.86), vec2(s2.x, s2.y + 0.15), blr);\n    col.rgb = mix(col.rgb, tcbndri.rgb, col.a);\n    \n    uv*=1.15;\n    uv.x -= 0.088;\n    uv.y += 0.04;\n    col.rgb = mix(col.rgb, tc.rgb - (uv.y+0.4)*(uv.y+0.3), sdfBox(uv, vec2(s1.x, s1.y + (uv.x) * (uv.x) * (uv.x) * 0.86), vec2(s2.x, s2.y + 0.4), blr));\n    \n    return col;\n}\n\nvec4 Brows(vec2 uv, vec2 cd, float r, float blr){\n\tvec4 bg = vec4(0.0, 0.0, 0.0, 1.0);\n    vec4 ebc = vec4(0.543, 0.252, 0.011, 1.0);\n    vec4 ebbndri = vec4(0.343, 0.052, 0.011, 1.0);\n    vec4 bndri = vec4(0.98);\n    \n    vec4 col = bg;\n    \n    uv.x = abs(uv.x);\n    uv.x *= 0.8;\n  \tuv.y *= 5.0;\n    uv.y += uv.x*1.4;\n\tcol.a = sdfCircle(uv, vec2(cd.x, cd.y), r+0.01, blr);\n    col.rgb = mix(col.rgb, bndri.rgb + 0.6, col.a);\n    col.rgb = mix(col.rgb, ebbndri.rgb, sdfCircle(uv, vec2(cd.x, cd.y), r, blr));\n    col.rgb = mix(col.rgb, ebc.rgb - uv.x * uv.x, sdfCircle(uv, vec2(cd.x, cd.y), r-0.04, blr));\n   \n    return col;\n}\n\nvec4 Eye(vec2 uv, vec2 cd, float r, float blr) {\n    \n    uv.x = abs(uv.x);\n    uv.x*=0.5;\n    \n\tvec4 ec = vec4(0.543, 0.252, 0.011, 1.0);\n    vec4 ecbndri = vec4(0.343, 0.052, 0.011, 1.0);\n    vec4 bndri = vec4(1.0);\n    vec4 col = vec4(0.0);\n    \n   \tfloat m = (uv.x-cd.x+r+0.15)*(uv.x-cd.x-r+0.15);\n    float x = uv.x;\n    float y = uv.y;\n    y += m*4.0;\n   \ty *= 1.7;\n    x *= 0.9;\n    col.a = sdfCircle(vec2(x, y), vec2(cd.x-0.165, cd.y-0.01), r, blr - 0.002);\n    col.rgb = mix(col.rgb, bndri.rgb, col.a);\n  \tcol.rgb = mix(col.rgb, ecbndri.rgb, sdfCircle(vec2(x, y), vec2(cd.x-0.165, cd.y-0.01), r - 0.01, blr - 0.002));\n    y = uv.y;\n    x = uv.x;\n    y += m*4.0;\n   \ty *= 2.0;\n    x *= 1.0;\n    col.rgb = mix(col.rgb, ec.rgb - uv.y*uv.y*uv.y*20.0, sdfCircle(vec2(x, y), vec2(cd.x-0.14, cd.y + 0.015), r, blr));\n    \n    return col;\n}\n\nvec4 Mouth(vec2 uv, vec2 cd, float r, float blr) {\n\tvec4 bg = vec4(0.0, 0.0, 0.0, 1.0);\n    vec4 mc = vec4(0.543, 0.252, 0.011, 1.0);\n    vec4 mcbndri = vec4(0.343, 0.052, 0.011, 1.0);\n    vec4 bndri = vec4(0.98);\n    \n    vec4 col = bg;\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    y *= 1.2;\n    y += x*x*2.0;\n    \n    col.a = sdfCircle(vec2(x, y), vec2(cd.x, cd.y), r, blr);\n    col.rgb = mix(col.rgb, mc.rgb, sdfCircle(vec2(x, y), vec2(cd.x, cd.y), r-0.03, blr));\n    col.rgb = mix(col.rgb, bndri.rgb, sdfCircle(uv, vec2(cd.x, cd.y + 0.6), r + 0.3, blr));\n    col.rgb = mix(col.rgb, bndri.rgb + 1.0, col.a - sdfCircle(vec2(x, y), vec2(cd.x, cd.y), r-0.01, blr));\n    col.rgb = mix(col.rgb, mcbndri.rgb, sdfCircle(vec2(x, y), vec2(cd.x, cd.y), r-0.01, blr - 0.003) - sdfCircle(vec2(x, y), vec2(cd.x, cd.y), r-0.03, blr - 0.003));\n    \n    return col;\n}\n\nvec4 Head(vec2 uv, vec2 cd, float r, float blr) {\n\tvec4 bg = vec4(0.996, 0.580, 0.203, 1.0);\n    vec4 hilit = vec4(1.0, 0.792, 0.239, 1.0);\n    vec4 bndri = vec4(0.976, 0.462, 0.239, 1.0);\n    vec4 shine = vec4(1.0, 1.0, 1.0, 1.0);\n\t\n    vec4 col = vec4(0.0, 0.0, 0.0, 1.0);\n    col.a = sdfCircle(uv, cd, r, blr);\n    col.rgb = mix(col.rgb, bndri.rgb, col.a);\n    col.rgb = mix(col.rgb, bg.rgb, sdfCircle(uv, cd, r - 0.03, blr));\n    col.rgb = mix(col.rgb, hilit.rgb, sdfCircle(uv, cd, r - 0.08, 0.1));\n    \n    float y = uv.y;\n    float x = uv.x;\n    \n    float m = (x-0.5)*(x+0.5);\n    y += m*0.6;\n\ty*=2.5;\n    x*=1.05;\n    \n    col.rgb = mix(col.rgb, shine.rgb , sdfCircle(vec2(x, y), vec2(cd.x, cd.y + 0.8), r - 0.1, 0.01) * clamp(0.1, 1.0, uv.y * 1.3));\n    \n    \n    \n    return col;\n}\n\n\nvec4 Chin(vec2 uv, vec2 cd, float r, float blr) {\n\tvec4 bg = vec4(0.0, 0.0, 0.0, 1.0);\n    vec4 cc = vec4(0.543, 0.252, 0.011, 1.0);\n    vec4 ccbndri = vec4(0.343, 0.052, 0.011, 1.0);\n    vec4 bndri = vec4(0.98);\n    \n    vec4 col = bg;\n    \n    float m = (uv.x-0.1)*(uv.x+0.1);\n    uv.y += m*3.0;\n    uv.y *= 4.0;\n    \n    col.a = sdfCircle(vec2(uv.x, uv.y+2.8), cd, r, blr);\n    col.rgb = mix(col.rgb, bndri.rgb*4.0, col.a);\n    col.rgb = mix(col.rgb, ccbndri.rgb, sdfCircle(vec2(uv.x, uv.y+2.8), cd, r-0.005, blr));\n    col.rgb = mix(col.rgb, cc.rgb, sdfCircle(vec2(uv.x, uv.y+2.8), cd, r-0.04, blr));\n    \n    \n\treturn col;\n}\n\n\nvec4 CryingEmoji(vec2 uv, vec2 tr, vec2 sz) {\n    uv*=sz;\n    uv+=tr;\n\tvec4 bg = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    vec4 col = bg;\n\t\n    vec4 head = Head(uv, vec2(0.0), 0.9, 0.01);\n    vec4 eye = Eye(uv, vec2(0.35, 0.17), 0.15, 0.003);\n    vec4 tear = Tears(uv, vec2(0.4, -0.7), vec2(0.72, 0.1), 0.01);\n    vec4 mouth = Mouth(uv, vec2(0.0, -0.5), 0.2, 0.005);\n    vec4 ibrow = Brows(uv, vec2(0.39, 2.5), 0.2, 0.005);\n    vec4 chin = Chin(uv, vec2(0.0, 0.0), 0.1, 0.005);\n    \n    col.rgb = mix(col.rgb, head.rgb, head.a);\n    col.rgb = mix(col.rgb, tear.rgb, tear.a);\n    col.rgb = mix(col.rgb, eye.rgb, eye.a);\n    col.rgb = mix(col.rgb, mouth.rgb, mouth.a);\n    col.rgb = mix(col.rgb, ibrow.rgb, ibrow.a);\n    col.rgb = mix(col.rgb, chin.rgb, chin.a);\n\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    float ar = min(iResolution.x, iResolution.y);\n    vec2 uv = (2.0 * fragCoord - iResolution.xy)/ar;\n    \n    vec4 col = CryingEmoji(uv, vec2(0.0), vec2(1.0));\n   \n    // Output to screen\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}