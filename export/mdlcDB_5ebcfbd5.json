{"ver":"0.1","info":{"id":"mdlcDB","date":"1687217488","viewed":18,"name":"HelloToy","username":"Booter","description":"Adaptation from kishimisu's Youtube tutorial ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//https://iquilezles.org/articles/palettes/\nvec3 palette( in float t)\n{\n   vec3 a = vec3(0.7, 0.7, 0.7);\n   vec3 b = vec3(0.5, 0.5, 0.5);\n   vec3 c = vec3(2.0, 1.0, 0.0);\n   vec3 d = vec3(0.50, 0.20, 0.25);\n   return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    //convert screen space into -1 to 1\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 1.0; i < 4.0; i+= 1.0) {\n    \n        uv = fract(uv * i) - 0.5;\n        float d = length(uv);\n        vec3 col = palette(length(uv0/i) + iTime);\n\n        d = sin(d * 8. + iTime) /8.;\n        d = abs(d);\n        d = pow(.005/d,i+1.0);\n\n        finalColor += col * d;\n    }\n    \n        for (float i = 1.0; i < 4.0; i+= 1.0) {\n    \n        uv = fract(uv * i * (0.6 + abs(sin(iTime) / 2.))) - 0.5;\n        float d = length(uv);\n        vec3 col = palette(length(uv0/i) + iTime);\n\n        d = sin(d * 4. + iTime) /8.;\n        d = abs(d);\n        d = pow(.015/d,i+2.0);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4( sqrt((sqrt(finalColor))) / 1.5 , 1.0);\n}\n","name":"Image","description":"","type":"image"}]}