{"ver":"0.1","info":{"id":"MstczB","date":"1519460774","viewed":104,"name":"Hexagon Clock Test","username":"isak","description":"Hexagon clock","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["clock","hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat rand(vec2);\nvec2 hexagons(vec2);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n   \n    vec2 uv = (2.0*fragCoord - iResolution.xy) / iResolution.y;\n    \n    uv = hexagons(50.0*uv);\n    float sec = iDate.w;\n    \n    fragColor = (1.0 - mod(sec,0.5*length(uv)))*vec4(0.3, 1.0, 1.0,1.0);\n    fragColor += vec4(0.0, 0.3, 0.3, 1.0);\n    \n    \n}\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 hexagons(vec2 p) {\n    \n    vec2 sp = 0.5*vec2(p.x, 1.7320508075688773*p.y);   \n    \n    vec3  qf = floor( vec3( 2.0*sp.x, sp.x + sp.y, -sp.x + sp.y) ) ; \n    float v1 = floor( (qf.x + qf.y + 2.0)/3.0 );\n    float v2 = floor( (qf.y + qf.z + 2.0)/3.0 );\n   \n   \treturn vec2( 2.0*v1 - v2, 1.7320508075688773*v2);\n}\n","name":"Image","description":"","type":"image"}]}