{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"float saturate(in float x)\r\n{\r\n\treturn clamp(x, 0.0, 1.0);\r\n}\r\n\r\nfloat intersectRect(in vec3 ro, in vec3 rd,\r\n\tin vec3 po, in vec3 pn, in vec3 size,\r\n\tout vec3 pt, out float t)\r\n{\r\n\tfloat d = - dot(po, pn);\r\n\tt = - (dot(ro, pn) + d) / dot(rd, pn);\r\n\tpt = ro + t * rd;\r\n\r\n\tvec3 delta = abs(pt - po);\r\n\r\n\tvec3 vis = step(delta, size);\r\n\treturn vis.x * vis.y * vis.z;\r\n}\r\n\r\nfloat intersectBox(in vec3 ro, in vec3 rd,\r\n\tin vec3 center, in vec3 size,\r\n\tout vec3 pt, out vec3 pn)\r\n{\r\n\tfloat t;\r\n\tfloat alpha;\r\n\t\r\n\t// X-plane\r\n\tvec3 xo = center;\r\n\txo.x += rd.x > 0.0 ? -size.x : size.x;\r\n\tvec3 xn = vec3(0.0, 0.0, 0.0);\r\n\txn.x = rd.x > 0.0 ? -1.0 : 1.0;\r\n\r\n\talpha = intersectRect(ro, rd, xo, xn, vec3(100000.0, size.yz), pt, t);\r\n\tpn = xn;\r\n\t\r\n\t// Y-plane\r\n\tvec3 yo = center;\r\n\tyo.y += rd.y > 0.0 ? -size.y : size.y;\r\n\tvec3 yn = vec3(0.0, 0.0, 0.0);\r\n\tyn.y = rd.y > 0.0 ? -1.0 : 1.0;\r\n\t\r\n\tfloat a;\r\n\tvec3 tmpPt;\r\n\ta = intersectRect(ro, rd, yo, yn, vec3(size.x, 100000.0, size.z), tmpPt, t);\r\n\t\r\n\talpha += a;\r\n\tpn = mix(pn, yn, a);\r\n\tpt = mix(pt, tmpPt, a);\r\n\t\r\n\t// Z-plane\r\n\tvec3 zo = center;\r\n\tzo.z += rd.z > 0.0 ? -size.z : size.z;\r\n\tvec3 zn = vec3(0.0, 0.0, 0.0);\r\n\tzn.z = rd.z > 0.0 ? -1.0 : 1.0;\r\n\t\r\n\ta = intersectRect(ro, rd, zo, zn, vec3(size.xy, 100000.0), tmpPt, t);\r\n\t\r\n\talpha += a;\r\n\tpn = mix(pn, zn, a);\r\n\tpt = mix(pt, tmpPt, a);\r\n\t\r\n\treturn alpha;\r\n}\r\n\r\nvoid createRay(in vec2 uv, out vec3 ro, out vec3 rd)\r\n{\r\n\tfloat time = uv.y * 5.0 + iTime * 2.0;\r\n\tfloat s = sin(time);\r\n\tfloat c = cos(time);\r\n\t\r\n\tfloat dist = 4.0;\r\n\tro = vec3(s * dist, 2.0, c * dist);\r\n\t\r\n\trd = vec3(0.0, 0.0, 0.0);\r\n\trd = normalize(rd - ro);\r\n\tvec3 dx = cross(vec3(0.0, 1.0, 0.0), rd);\r\n\tvec3 dy = cross(rd, dx);\r\n\t\r\n\tvec2 delta = uv - 0.5;\r\n\trd += dx * delta.x + dy * delta.y;\r\n\t\r\n\trd = normalize(rd);\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\tvec2 uv = fragCoord.xy / iResolution.xy;\r\n\r\n\tfloat bkBlend = saturate(sin(uv.x * 300.0 + uv.y * 100.0 + iTime * 20.0) * 0.25);\r\n\tbkBlend = 1.0 - saturate(uv.y + uv.x * bkBlend + bkBlend);\r\n\tbkBlend *= (cos(iTime) + 1.75) * 0.5;\r\n\tvec3 color = mix(vec3(0.2, 0.2, 0.5), vec3(1.0, 0.7, 0.0), bkBlend);\r\n\t\r\n\tvec3 ro, rd;\r\n\tcreateRay(uv, ro, rd);\r\n\t\r\n\tvec3 pt;\r\n\tvec3 pn;\r\n\tfloat a = intersectBox(ro, rd, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), pt, pn);\r\n\t\r\n\tvec3 ld = normalize(vec3(1.0, 1.0, 1.0));\r\n\tfloat lighting = saturate(-dot(pn, rd));\r\n\t\r\n\tvec3 lpt = fract(pt / 4.0);\r\n\tlpt = floor(lpt * 20.0) * 0.2;\r\n\tfloat cc = saturate(lpt.x * lpt.y * lpt.z);\r\n\tvec3 boxColor = mix(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.3, 0.6), cc);\r\n\t\r\n\tvec3 reflection = texture(iChannel0, rd.xy / rd.z * 0.04).rgb;\r\n\tboxColor = boxColor + reflection * vec3(1.0, 0.6, 0.6) * lighting * 0.5;\r\n\t\r\n\tcolor = mix(color, lighting * boxColor, a);\r\n\r\n\tfragColor = vec4(color,1.0);\r\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdXGRH","date":"1362257145","viewed":349,"name":"Twisted!","username":"HrBoes","description":"Box intersection + funky patterns.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","patterns"],"hasliked":0,"parentid":"","parentname":""}}