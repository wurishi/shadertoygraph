{"ver":"0.1","info":{"id":"DsfBRr","date":"1688377814","viewed":55,"name":"Segments Blending Methods","username":"shadersandbox","description":"Goal is to blend multiple segments together, without adding brighter spots near the intersection.\nCould be used to add an unified glow to a path","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["segmentsblending"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Trying different ways to blend multiple segments together\n\nfloat drawSegment(vec2 P, vec2 A, vec2 B, float r) \n{\n    vec2 g = B - A;\n    vec2 h = P - A;\n    float d = length(h - g * clamp(dot(g, h) / dot(g,g), 0.0, 1.0));\n    return (1. - d) + r;\n}\n\n\nfloat smin( float a, float b, float k )\n{\n    float h = max( k-abs(a-b), 0.0 )/k;\n    return min( a, b ) - h*h*k*(1.0/4.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float RATIO = iResolution.x/iResolution.y;\n    uv -= 0.5;\n    uv.x *= RATIO;\n\n    // final render layer\n    vec3 col;\n\n\n    float segmentRadius = 0.04;\n    float smoothFeather = 0.06;\n    float sMinRoundness = 0.03;\n    \n    // Segments layer\n    float segments;\n    \n    // Segments coordinates\n    vec2[2] segment1;\n    vec2[2] segment2;\n\n    segment1[0] = vec2(0., -0.2);\n    segment1[1] = vec2(0., 0.2);\n\n    segment2[0] = vec2(-0.2, 0.);\n    segment2[1] = vec2(0.2, 0.);\n\n    float segment1Dist = drawSegment(uv, segment1[0], segment1[1], segmentRadius);\n    float segment2Dist = drawSegment(uv, segment2[0], segment2[1], segmentRadius);\n\n\n    // 1st try : Adding the 2 segment together makes brighter zones where feather cross\n    //\n    //segments = smoothstep(1. - smoothFeather, 1.0, segment1Dist) + smoothstep(1. - smoothFeather, 1.0, segment2Dist);\n    //\n\n    // 2nd try : Using the max value of the segments is creating a crest at the joints\n    //\n    //segments = max(segment1Dist, segment2Dist);\n    //segments = smoothstep(1. - smoothFeather, 1.0, segments);\n    //\n\n    // 3rd try : the blending is smooth\n    //\n    segments = 1.- smin(1.- segment1Dist, 1.- segment2Dist, sMinRoundness);\n    segments = smoothstep(1. - smoothFeather, 1.0, segments);\n    //\n\n    col = vec3(segments);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}