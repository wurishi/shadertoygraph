{"ver":"0.1","info":{"id":"4dGSWy","date":"1466179581","viewed":294,"name":"8 Bit demo","username":"gigatron","description":"8 Bit machine demo example, base code from here ;https://www.shadertoy.com/view/MsKSWw\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spiral","demo","8bit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// from Hud practice https://www.shadertoy.com/view/MsKSWw\n// .. it's look like 8 bit machines demo now ! Gigatron !\n\n#define tt iTime\n\nfloat spiralr(float a, float l){\n    float f = smoothstep(.0, -.2, cos(a*15.0 + iTime*5.0))*.341;\n\n \tfloat g = 1.0-smoothstep(0.0, 1.0, l*3.0);\n\n    f = f-g;\n    f = 1.0-smoothstep(f, f+0.008, l);\n    return f;\n}\nfloat spirall(float a, float l){\n    float f = smoothstep(.0, -.2, cos(a*15.0 - iTime*5.0))*.341;\n\n \tfloat g = 1.0-smoothstep(0.0, 1.0, l*3.0);\n\n    f = f-g;\n    f = 1.0-smoothstep(f, f+0.008, l);\n    return f;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = (2.*fragCoord.xy- iResolution.xy)/iResolution.y;\n \n    \n    float a = atan(uv.y,uv.x);\n    \n    float l = length(uv)+0.2*sin(tt*0.8);\n   \n    vec3 color = vec3(.4, 0.4, 0.4);\n   \n  \n    for(float i=0.0;i<8.0;i++){\n        \n    color = mix(color, vec3(sin(tt) ,i/2.0, i/4.0), spirall(a, l/(i*0.2)/i*2.0));\n        \n    }\n/*    color = mix(color, vec3(1. ,1., 1.), spiralr(a, l/0.5));\n        \n    color = mix(color, vec3(1. ,.0, 0.), spirall(a, l/0.7));\n    \n    color = mix(color, vec3(0. ,1., 1.), spiralr(a, l/0.9));\n    \n    color = mix(color, vec3(1. ,0., 1.), spirall(a, l/1.1));\n    color = mix(color, vec3(1. ,1., 1.), spiralr(a, l/1.4));\n    \n    color = mix(color, vec3(1. ,1., 0.), spirall(a, l/1.8));\n    color = mix(color, vec3(1. ,1., 1.), spiralr(a, l/2.2));\n    \n    color = mix(color, vec3(0. ,1.,0.), spirall(a, l/2.8));\n    color = mix(color, vec3(0. ,0., 1.), spiralr(a, l/3.6));\n*/    \n\t//fragColor = vec4(color*sin(300.*uv.x*iResolution.y),1.0);\n    fragColor =vec4(color/mod(fragCoord.y+fragCoord.x, 4.),1.0);\n    \n    // scanline is ok now !\n}","name":"Image","description":"","type":"image"}]}