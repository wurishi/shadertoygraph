{"ver":"0.1","info":{"id":"wtfSRf","date":"1563716010","viewed":308,"name":"RotateShape","username":"gcj2450","description":"the shape func is copied from https://iquilezles.org/articles/distance/distance.htm , thanks to iq for code.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rotate","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 rotateCW(vec2 p, float a)\n{\n    mat2 m = mat2(cos(a), -sin(a), sin(a), cos(a));\n    return m*p;\n}\n\nfloat shape(float x, float y)\n{\n    float r = sqrt(x*x + y*y);\n    return r - 1.0 + sin(3.0 * atan(y,x) + 2.0 * r*r) / 2.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    uv = uv*5.5+vec2(-2.5,-2.5);\n    vec2 shp = rotateCW(uv, 10.0*iTime);\n    // Output to screen\n    fragColor = vec4( shape(shp.x, shp.y), shape(shp.x, shp.y), shape(shp.x, shp.y),1.0);\n}","name":"Image","description":"","type":"image"}]}