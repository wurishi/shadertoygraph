{"ver":"0.1","info":{"id":"4dK3Rz","date":"1453045989","viewed":583,"name":"Zircon city - lyapunov fractal","username":"ale93111","description":"Lyapunov fractals are derived from an extension of the logistic map. A Lyapunov fractal is constructed by mapping the regions of stability and chaotic behaviour: yellow corresponds to stability and blue corresponds to chaos","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["fractal","lyapunov"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// increase max_iterations (up to 1000 or more) or AA (up to 5 or whatever) to improve quality\n// or decrease them to improve performance\n\nconst int Nperiodic = 12;\nconst int max_iterations = 100;\n\n#define  AA 2\n\nvec2 pos = vec2(0.0);\nvec3 totcol = vec3(0.0);\n    \nfloat izoom = 0.6;\nvec2 ioffset = vec2( 2.55, 3.4);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    for( int jj=0; jj<AA; jj++ )\n    for( int ii=0; ii<AA; ii++ )  \n\t{\n\t\tfloat X = 0.5;\n\t\n\t\tfloat templog = 0.0;\t\n\t\tfloat lambda  = 0.0;\n\t\n\t\tpos = (((fragCoord.xy + vec2(float(ii),float(jj))/float(AA)) / iResolution.y) * izoom) + ioffset;\n\t\t            \n\t\tfor (int i=0; i<max_iterations; i++ ) \t\n\t\t{\t\n\t\t\tfor(int j=0; j<6; j++) \n\t\t\t{\n\t\t\t\tX = pos.x*X*(1.0 - X); \n\t\t\t\ttemplog += log( abs( pos.x*(1.0 - 2.0*X)));\n\t\t\t}\n\t\t\tfor(int j=0; j<6; j++) \n\t\t\t{\n\t\t\t\tX = pos.y*X*(1.0 - X); \n\t\t\t\ttemplog += log( abs( pos.y*(1.0 - 2.0*X)));\n\t\t\t}\n\n\t\t} \t\n\t\t\n\t\tlambda = templog/float(max_iterations*Nperiodic);\n\t\n\t\tvec3 col = vec3 (0.0);\n\t\n\t\tif (lambda < 0.0) \n\t\t{\n\t\t\tlambda = abs(lambda);\n \n\t\t\tlambda = clamp( lambda, 0.0, 1.0); \t\n\t\t\tlambda = pow (lambda, 0.25);\t\n\t\t\tcol = vec3 (1.0, lambda, 0.0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlambda = abs(lambda);\n\t\t\n\t\t\tlambda = clamp( lambda, 0.0, 1.0); \t\n\t\t\tlambda = pow (lambda, 0.25);\t\n\t\t\tcol = vec3 (0.5, 0.5, lambda);\n\t\t}\n\t\ttotcol += col;\n\t}\n\ttotcol /= float(AA*AA);\n    \n\tfragColor = vec4 (totcol, 1.0);\n}","name":"Image","description":"","type":"image"}]}