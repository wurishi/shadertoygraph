{"ver":"0.1","info":{"id":"XXGGWw","date":"1717687449","viewed":36,"name":"Trippy moire","username":"noggin","description":"trig math creating interference patterns. Based on ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["moire","sinewave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// License: CC0\n\n#define PI (3.14159265358979)\n#define TWOPI (2.0*PI)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    float min_dimension = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord/min_dimension;\n    uv = uv - vec2(iResolution.x, iResolution.y)/min_dimension;\n    float r = length(uv);\n\tfloat theta = atan(uv.y, uv.x * 0.5);\n    float t = iTime;\n    float scale = 1.1;\n    float speed = 0.04;\n    \n    // animate with a sine wave\n    theta += (t * abs(sin(PI * (t * speed))));\n    \n    // interference\n    float moire = log(r * scale * t) * log(r)*3.*(theta * scale);\n    \n    \n    float red = abs(sin(moire * uv.x)-0.4);\n    float green = abs(cos(moire * uv.x)-0.1);\n    float blue = abs(sin(moire * uv.y)-0.3);\n\n    fragColor = vec4(vec3(red,green,blue),1.0);\n}\n","name":"Image","description":"","type":"image"}]}