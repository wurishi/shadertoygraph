{"ver":"0.1","info":{"id":"WsjBWy","date":"1590739886","viewed":87,"name":"antialias circle line","username":"oskycar","description":"change  antiWidth to see what happed","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["antialias"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//use distance to caculate alpha as antialias value\nvec4 circle(vec2 pos, vec2 center, float radius, vec4 color, float antialias) {\n \n    \n    float d = (length(pos - center) - radius);\n    float t = smoothstep(0.0, antialias, d);\n    return vec4(color.rgb, t);\n}\n\nvec4 line(vec2 pos, vec2 point1, vec2 point2, float width, vec3 color, float antialias) {\n    float k = (point1.y - point2.y)/(point1.x - point2.x);\n    float b = point1.y - k * point1.x;\n\n    float d = abs(k * pos.x - pos.y + b) / sqrt(k * k + 1.0);\n    float t = smoothstep(width/2.0, width/2.0 + antialias, d);\n    return vec4(color, 1.0 - t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tfloat r = iResolution.x/iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float antiWidth = 0.002;\n\tuv.y = uv.y/r;\n    vec4 layer1 = circle(uv,vec2(0.5,0.5/r),0.25,vec4(1.0,0.0,0.0,1.0),antiWidth);\n    vec4 layer2 = vec4(0.0,0.0,0.0,1.0);\n    fragColor = mix(layer1,layer2,layer1.a);\n    \n    vec2 p1 = vec2(0.0,0.0);\n    vec2 p2 = vec2(1.0,1.0/r);\n    antiWidth=0.001;\n    vec4 layer3 = line(uv,p1,p2,0.02,vec3(1.0,1.0,0.0),antiWidth);\n    fragColor = mix(fragColor,layer3,layer3.a);\n}","name":"Image","description":"","type":"image"}]}