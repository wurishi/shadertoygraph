{"ver":"0.1","info":{"id":"4ftXRl","date":"1714324368","viewed":38,"name":"Keyboard arrows buffer","username":"Chama_lo","description":"Some test for keyboard buffer mostly inspired by the work of https://www.shadertoy.com/user/darkfox\nCan used for many purpose, I will addapt it for 3D navigation of dynamic camera\nI don't understand everything so it's difficult to optimise","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["keyboardbuffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Example of using buffers to carry states between frames.\n\n// Buffer A - code for variable management\n// Image - main shader that outputs to the display\n\n\n//get the state of pixels storred in the buffer\nvec4 getState(vec2 i){\n    return texture(iChannel0, (i + vec2(0.5)) / 128.0);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{\n   float ratio = iResolution.x/iResolution.y;\n   vec2 screenPixel = vec2 (fragCoord.x / iResolution.x-0.5,(fragCoord.y / iResolution.y-0.5) );\n\n\n   //-- -- get coordinate x 0->1 y 0->1-- --\n   \n    \n   \n    \n   vec4 tex_x = getState(vec2(1., 0.));\n   vec4 tex_y = getState(vec2(2., 0.));\n    \n   float coordx = tex_x.x-0.5;\n   float coordy = tex_y.x-0.5;\n   \n   vec2 coord = vec2 (coordx, coordy);\n   \n   // end of coordinate\n   \n   \n   //printing the coordinate on square form\n   \n   if( (screenPixel.x - coord.x)<0.01 && \n   (coord.x - screenPixel.x)<0.01 && \n   (screenPixel.y - coord.y) <0.01*ratio  &&  \n   (coord.y - screenPixel.y)<0.01*ratio)\n   \n   {\n       fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n   }\n   else\n   {\n       fragColor = vec4(0.0, 0.0, 0.0, 0.0);\n   }\n   \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\n\nvec4 initialize(vec2 i, vec4 cur){\n    if(i.x == 0.0 && i.y == 0.0){\n        return vec4(vec3(0.0), 1.0);\n    }else if(i.x > 0.0 && i.x < 4.0 && i.y == 0.0){\n    \n        return vec4(0.5, 0.5, 0.001, 0.0);\n    }\n    return cur;\n}\n\nvec4 moveUp(vec4 cur){\n    vec2 pos = cur.xy;\n    if(pos.x < 1.0)\n    {\n        pos += cur.zw;\n    }\n    return vec4(pos, cur.zw);\n}\n\nvec4 moveDown(vec4 cur){\n    vec2 pos = cur.xy;\n    if( pos.x > 0.0)\n    {\n        pos -= cur.zw;\n    }\n    return vec4(pos, cur.zw);\n}\n\nvec4 getState(vec2 i){\n    return texture(iChannel0, (i + vec2(0.5)) / 128.0);\n}\n\nbool getKeyState(int keyCode, int stateType){\n    return bool(texelFetch(iChannel1, ivec2(keyCode, stateType), 0).x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n    vec2 i = floor(p * 128.0);\n    vec4 cur = getState(i);\n    \n    vec4 initFlag = getState(vec2(0.0));\n    if(initFlag.a == 0.0){\n        // initialize.\n        fragColor = initialize(i, cur);\n        return;\n    }\n    \n    \n    // move.\n    if(i.x == 1.0 && i.y == 0.0 && getKeyState(KEY_LEFT, 0)){\n        fragColor = moveDown(cur);\n        return;\n    }\n    if(i.x == 1.0 && i.y == 0.0 && getKeyState(KEY_RIGHT, 0)){\n        fragColor = moveUp(cur);\n        return;\n    }\n    \n    if(i.x == 2.0 && i.y == 0.0 && getKeyState(KEY_UP, 0)){\n        fragColor = moveUp(cur);\n        return;\n    }\n    if(i.x == 2.0 && i.y == 0.0 && getKeyState(KEY_DOWN, 0)){\n        fragColor = moveDown(cur);\n        return;\n    }\n    \n    fragColor = cur;\n}","name":"Buffer A","description":"","type":"buffer"}]}