{"ver":"0.1","info":{"id":"DdtGzf","date":"1677625436","viewed":80,"name":"#4 - Slope-intercept form","username":"knapeczadam","description":"https://en.wikipedia.org/wiki/Linear_equation#Slope%E2%80%93intercept_form_or_Gradient-intercept_form","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["line","straight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// VERSION 2\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    float zoom = 100.0;\n    float ratio = iResolution.x / iResolution.y;\n    uv.x *= ratio;\n    uv *= zoom;\n\n    // y = m x + b\n    float x, y, m, b, lhs, rhs, lineWidth;\n    x = uv.x;\n    y = uv.y;\n    lhs = y;\n    lineWidth = 0.8;\n    vec3 col = vec3(0.05, 0.1, 0.15);\n    for (float i = 0.0; i < 50.0; ++i)\n    {\n        m = 1.0 / tan(iTime + i);\n        b = i;\n        rhs =  m * x + b - y;\n        if (rhs > 0.0 && rhs < lineWidth)\n        {\n            col = vec3(1.0, 0.87, 0.33);\n            col *= (cos(iTime) + 1.0) * 0.25 + 0.25;\n        }\n    }\n    fragColor = vec4(col, 1.0);\n\n}\n\n\n// VERSION 1\n/*\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = gl_FragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    float zoom = 100.0;\n    float ratio = iResolution.x / iResolution.y;\n    uv.x *= ratio;\n    uv *= zoom;\n\n    // y = m x + b\n    float x, y, m, b, lhs, rhs, lineWidth;\n    x = uv.x;\n    y = uv.y;\n    lhs = y;\n    lineWidth = 0.8;\n    vec3 col = vec3(0.05, 0.1, 0.15);\n    for (int i = 0; i < 50; ++i)\n    {\n        m = 1.0 / tan(iTime + float(i));\n        b = float(i);\n        rhs =  m * x + b;\n        if (lhs < (rhs) && lhs > (rhs - lineWidth))\n        {\n            col = vec3(1.0, 0.87, 0.33);\n            col *= (cos(iTime) + 1.0) * 0.25 + 0.25;\n        }\n        fragColor = vec4(col, 1.0);\n    }\n}\n*/","name":"Image","description":"","type":"image"}]}