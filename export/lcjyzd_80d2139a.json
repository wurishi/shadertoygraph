{"ver":"0.1","info":{"id":"lcjyzd","date":"1722875763","viewed":22,"name":"Colores mezcla 3.1","username":"jpupper","description":"\n//3.1\n//Colores\n//Función MIX : \n \n\n//3.1\n//Colores\n//Función MIX : ","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["mix","tutorial","sin","color","cos","shaders","shaders","livecoding","functions","taller","tutoriales","osciladores"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//3.1\n//Colores\n//Función MIX : \n#define resolution iResolution\n#define time iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = gl_FragCoord.xy / resolution.xy; // De esta manera obtenemos las coordenadas cartesianas\n\n    vec3 color1 = vec3(1.0,0.0,0.0); // ROJO\n    vec3 color2 = vec3(0.0,0.0,1.0); //AZUL\n    \n    //Puedo utilizar la función mix para mezclar colores. \n    vec3 colfinal = mix(color1,color2,0.0); //Si el tercer parametro de la función mix es 0 obtengo solo color1\n         colfinal = mix(color1,color2,1.0); //Si el tercer parametro de la función mix es 1 obtengo solo color2\n         colfinal = mix(color1,color2,0.5); //Obtengo el color intermedio entre uno y otro.\n         colfinal = mix(color1,color2,sin(time)*0.5+0.5); //OSCILA ENTRE EL COLOR 1 Y EL COLOR 2.\n         \n    fragColor = vec4(colfinal,1.0); \n}","name":"Image","description":"","type":"image"}]}