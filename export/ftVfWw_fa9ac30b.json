{"ver":"0.1","info":{"id":"ftVfWw","date":"1664623678","viewed":47,"name":"Mandelbrot Multi Power","username":"Gabrie_Oreo","description":"Mandelbrot with diffrent powers to z","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"7lyfDm","parentname":"Mandelbrot Set Colored"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define POWER 5\n\n#define NR_ITER 30.\nvec2 Mul(vec2 i1,vec2 i2)\n{\n    return vec2(i1.x*i2.x-i1.y*i2.y,i1.x*i2.y+i1.y*i2.x);\n}\n\nvec2 Pow(vec2 v, int p)\n{\n    vec2 a = v;\n    vec2 res = vec2(1,0);\n    while(p!=0)\n    {\n        if((p&1)!=0)\n        {\n            res = Mul(res,a);\n        }\n        p >>= 1;\n        a = Mul(a,a);\n    }\n    return res;\n}\n\nfloat MandelBrot(vec2 p)\n{\n    float val = 0.;\n    int i = int(NR_ITER);\n    \n    vec2 nz = vec2(0,0);\n    while(i--!=0)\n    {\n        nz = Pow(nz,POWER) + p;\n    }\n    return length(nz);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = float(iMouse.z>0.);\n    vec2 normMouse = (vec2(iMouse) * 2. - vec2(iResolution))/iResolution.y;\n    vec2 uv = (fragCoord * 2. - vec2(iResolution))/iResolution.y;\n\n    float mandel = MandelBrot(uv*mix(1.,.1,zoom) + normMouse);\n    vec3 col = mix(vec3(0,0,1),vec3(1,.5,0),mandel);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}