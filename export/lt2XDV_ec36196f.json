{"ver":"0.1","info":{"id":"lt2XDV","date":"1446708259","viewed":494,"name":"knup_BasicRaymarchTest","username":"knup","description":"raymarching test i.e. how to copy code and change some parameters.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarchtest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//primitive functions\nfloat sdSphere( vec3 p )\n{\n  return length(p)-0.1;\n}\nfloat sdTorus( vec3 p )\n{\n  vec2 t = vec2 (0.45,0.04);\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n//--------------------------------------------------------\nfloat map(vec3 p) \n{\n    //Repetition\n    vec3 c = vec3 (1.0,1.0,1.0);\n    vec3 q = mod(p,c)-0.5*c; \n    return sdTorus (q);   \n}\n\nfloat trace(vec3 o, vec3 r) //raymarching function\n{ \n    float t = 0.0;\n    for (int i=0; i<32;i++)\n    {\n     vec3 p = o + r * t;\n        \n     float d = map(p);\n     \n     t += d*1.0;   \n    }\n    \n   return t;     \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //resolution/uv adjustments\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv = uv*2.0 -1.0;\n    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 r = normalize (vec3(uv,1.0));\n    \n    //camera\n    vec3 o = vec3 (0.0, iTime/5.0,+3.0- iMouse.x/50.0);\n    \n    float t = trace(o,r);\n    \n    float fog = 1.0 / (1.0 +t *t * 0.1);\n    \n    vec3 fc = vec3(fog);\n    \n\tfragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}