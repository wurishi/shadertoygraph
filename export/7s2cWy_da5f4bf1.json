{"ver":"0.1","info":{"id":"7s2cWy","date":"1644049978","viewed":115,"name":"Fork Architecture","username":"kastorp","description":"bigger version of Fabrice  [url=https://www.shadertoy.com/view/sdSyDG]Archtecture[/url]\n","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["simulation","particles","short","reproduction"],"hasliked":0,"parentid":"sdSyDG","parentname":"Architecture"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )\n\n\nvoid mainImage( out vec4 O, vec2 u )\n{ \n    vec2 U = ( 2.*u - R ) / R.y*.4;\n    O-=O;\n   \n    float a = 0.2*iTime;\n    mat2 m =mat2(cos(a),sin(a),-sin(a),cos(a));\n    U =(U)*SZ * m +SZ/2.; \n\n\n    for( float d = .125, z= .5; z <PA; z+=d, U-=vec2(0,d)*m ) if( T(U).w >= z ) // optional stacks\n      {\n        if ( min(U.x,U.y)> 0. && max(U.x,U.y) < SZ ) { // === draw terrain\n            O = hue( T(U).w/(PA+1.) ); \n                                                 // look = plain + shadowed\n            if ( fract(z-.5) > 0. ) O *= .5;\n\n        }\n        if ( fract(z-.5) < .1 && floor(z) == floor(T(U).w) ) // ( if stacks )\n          for( int i=0; i<int(PA); i++)                       // === draw partics\n            O -= smoothstep(45./R.y,0., length(U-T(vec2(i,SZ)).xy) - .2);\n      }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// === manage particles and terrain ==========================\n//  terrain (20x20) : O.w  = height ( i.e. id of partic field )\n//  partics ( 7x1 ) : O.xy = P, O.zw = V  \n\n#define hash(p)  fract(sin((p)* vec2(12.9898, 78.233) -iDate.w) * 43758.5453)\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O = T(u);                                          // previous state\n                           \n    if (u.y==SZ+.5 && u.x<PA) {                         // === particles\n       vec2 P = O.xy;                                  // prev location\n       O.xy = P + O.zw;                                // particle move\n       if ( T(O.xy).w != u.x || min(O.x,O.y)<0. || max(O.x,O.y)>SZ ) // goes out of level:\n           O.xy -= .5*O.zw,\n           floor(P.x+O.z)-floor(P.x) == 0. ? O.w = - O.w : O.z = -O.z,// bounce\n           O.xy += .5*O.zw;\n         \n       if (iFrame < 1) {                               // init partics\n           vec2 D = sign(hash(u.x)-.5); \n           O = vec4(u.xx-.25*D.yx,.4*D);\n       }\n    } \n    if( max(u.x,u.y) > SZ) return;                    // === terrain\n    for( float i=.5; i<PA; i++ ) {                     // if we are where partic gone out of field\n        vec4 P = T(vec2(i,SZ));\n        if ( O.w != i && floor(u) == floor(P.xy+P.zw) ) O.w = i; // then extend field\n    }   \n    if (iFrame < 1) u = abs(u-SZ*.5 ),                    // init terrain\n                    O.w = min(PA- .5, SZ*.5- max(u.x,u.y));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R    iResolution.xy\n#define T(U) texelFetch( iChannel0, ivec2(U), 0 )\n#define SZ 80.\n#define PA 30.\n","name":"Common","description":"","type":"common"}]}