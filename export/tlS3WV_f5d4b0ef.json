{"ver":"0.1","info":{"id":"tlS3WV","date":"1561125150","viewed":113,"name":"Sphere Slime","username":"ichigotake","description":"Slimes are dancing.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","slime"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926;\nconst float EPS = 0.002;\n\nmat2 rotate(float a)\n{\n    float s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat sphereSlime(vec3 p)\n{\n    float t = sin(iTime)*0.4;\n    p.xy *= rotate(t*PI*1.4);\n    return length(p) - abs(cos(p.x+iTime))*.2 - abs(sin(p.y+iTime))*.2;\n}\n\nfloat bgSphereSlimes(vec3 p)\n{\n    p = mod(p, 0.75)-0.2;\n    p.y -= 0.2;\n    p.x -= 0.2;\n    float t = cos(iTime)*0.3;\n    p.xy *= rotate((t+p.x/p.y)*PI*1.4);\n    return length(p) - 0.2 - abs(sin(p.x+iTime*1.2))*0.03 - abs(cos(p.y+iTime*1.2))*0.03;\n}\n\nfloat dist(vec3 p)\n{\n    return min(sphereSlime(p), bgSphereSlimes(p));\n}\n\nvec3 normal(vec3 p)\n{\n    return normalize(vec3(\n        dist(p + vec3(EPS, 0.0, 0.0) - vec3(EPS, 0.0, 0.0)),\n        dist(p + vec3(0.0, EPS, 0.0) - vec3(0.0, EPS, 0.0)),\n        dist(p + vec3(0.0, 0.0, EPS) - vec3(0.0, 0.0, EPS))\n    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.x;\n    vec3 color = vec3(0.0);\n    \n    vec3 ro = vec3(uv, 0.0);\n    vec3 rd = vec3(0.0, 0.0, 1.0);\n    \n    float d = 0.0;\n    for(int i=0; i<1; i++){\n        float fi = float(i);\n        vec3 p = ro + rd*fi;\n        d += dist(p);\n        if(d<0.01){\n            color = normal(p)*d;\n            color =  normalize(color + vec3(0.1, 0.2, 0.1));\n            break;\n        }\n    }\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}