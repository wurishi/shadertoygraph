{"ver":"0.1","info":{"id":"DtSXWG","date":"1676482091","viewed":207,"name":"Fork Psychedeli sleeplessm 879","username":"sleeplessmonk","description":"WIP","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["mattdamon"],"hasliked":0,"parentid":"MdlXWH","parentname":"Psychedelic Glass"},"renderpass":[{"inputs":[],"outputs":[],"code":"vec2 uv;\nvec2 pos;\n\nfloat hash1(float n) { return fract(sin(n)*43758.5453); }\nvec2 hash2(vec2 p) { return fract(sin(vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3))))*43758.5453); }\n\nvec2 rotate(vec2 p, float a) {\nfloat s = sin(a), c = cos(a);\nreturn mat2(c, s, -s, c) * p;\n}\n\nvec3 physhue2rgb(float h, float r) {\nreturn smoothstep(vec3(0.0), vec3(1.0), abs(mod(h + vec3(0.0, 1.0, 2.0) * (1.0/r), 1.0) * 2.0 - 1.0));\n}\n\nvec4 voronoi(vec2 x, float c, out vec2 rp) {\nvec2 n = floor(x), f = fract(x);\nvec3 m = vec3(8888.0);\nfloat m2 = 8.0;\nfor (int j = -3; j <= 2; j++)\nfor (int i = -3; i <= 2; i++) {\nvec2 g = vec2(float(i), float(j)), o = hash2(n + g);\nfloat cid = hash1(dot(n + g, vec2(8.0, 130.0)));\nif (cid < 0.1) o = 0.5 + 0.5 * abs(mod(c + o, 2.0) - 1.0);\nvec2 r = g - f + o;\nvec2 d = vec2(max(abs(r.x)*0.866025+r.y*0.5,-r.y), 1.0);\nif (d.x < m.x) {\nm2 = m.x, m.x = d.x, m.y = cid, m.z = d.y, rp = n + g;\n} else if (d.x < m2) {\nm2 = d.x;\n}\n}\nreturn vec4(m, m2 - m.x);\n}\n\nvec4 render_sheet(vec2 p, float fi, float a) {\n    float z = exp(mix(log(28.0), log(0.5), a));\n    p = rotate(abs(p), radians(60.0));\n    p.y = -p.y;\n    vec2 rp;\n    vec4 c = voronoi(z * p + fi * 128.0 - step(fi, 0.2) * a * 2.0, fi + a * 4.0, rp);\n    rp -= fi * 128.0 - step(fi, 0.2) * a * 2.0;\n    float pp = 0.6 - (max(abs(rp.x) * 0.866025 + rp.y * 0.5, -rp.y) / 4.0);\n    pp = clamp(pp, 0.0, 1.0);\n    float fadein = clamp(a * 2.0, 0.0, 1.0);\n    float rep = 1.0 - a - (pp - sin(c.w * 4.0) * 0.1) * fadein;\n    float alpha = clamp((rep - c.w) * 16.0, 0.0, 1.0);\n    if (alpha > 0.3) {\n        float hue = c.w * (1.0 + c.y * 30.0) + fi + a * 9.0 * c.y * mix(1.0, 20.0, step(fi, 0.1)) - abs(p.x);\n        vec3 w = physhue2rgb(hue, 3.3);\n        w.z = 0.5;\n        return vec4(w, alpha);\n    }\n    return vec4(0.0);\n}\n\nvec4 alpha(vec4 a, vec4 b) {\n    a = mix(b, a, a.w);\n    a.w = max(a.w, b.w);\n    return a;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 aspect = vec2(iResolution.x / iResolution.y, 1.0);    \n    vec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    vec4 col = vec4(0.2);\n    for (int i = 4; i >= -50; --i) {\n        float fi = float(i);\n        float s = 2.0 / 12.0;\n        float t = iTime * 0.5;\n        float a = fract(t) * s;\n        t -= fract(t);\n        col = alpha(col, render_sheet(vec2(abs(uv.x), uv.y), hash1(t - fi), a + fi * s));\n        if (col.w >= 1.0) break;\n    }\n    float blend = 1.2;\n    vec3 co = texture(iChannel0, -uv + col.xy * blend * 0.0).rgb;\n    col.rgb = mix(co, col.rgb, blend);\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}