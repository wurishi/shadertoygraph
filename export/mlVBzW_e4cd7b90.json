{"ver":"0.1","info":{"id":"mlVBzW","date":"1701897107","viewed":86,"name":"Sharingan eye","username":"jum","description":"A study of some shapes, animation, and coordinate systems.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["sharingan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n\nmat2 rotate2d(in float _angle) {\n    _angle = (_angle * PI/180.0);\n\n    return mat2(cos(_angle), -sin(_angle),\n                sin(_angle), cos(_angle));\n}\n\nmat2 scale(vec2 _scale) {\n    return mat2(_scale.x, 0.0,\n                0.0, _scale.y);\n}\n\nvec2 spilaryze(in vec2 st, in float intensity, in float offset) {\n    float distort = distance(vec2(0.0), st)*intensity;\n    float _angle = intensity + distort + offset;\n    mat2 rotate =  rotate2d(_angle);\n    st = rotate * st;\n\n    return st;\n}\n\nfloat createCircle(in vec2 st, in float radius, in float blur) {\n    float center = distance(vec2(0,0), st);\n    float circleShape = 1.0 - smoothstep(radius, radius + blur, center);\n   \n    return circleShape;\n}\n\n\nfloat createPyramidFromCenter(in vec2 st, in float _angle){\n    _angle = (_angle * PI/180.0)- PI;\n    float a = atan(st.x, st.y);\n    a = 1.0-step(_angle, a);\n\n    return a;\n}\n\nfloat createPolyShape(in vec2 st, in int sides, float size){\n    float a = atan(st.x, st.y) + PI;\n    float r = TWO_PI/float(sides);\n    float d = cos(floor(0.5 + a/r) * r-a)*length(st);\n\n    return 1.0 - smoothstep(size/2.0, size/2.0 + 0.005, d);\n}\n\nvec2 polarCoord(in vec2 st) {\n    float r = (length(vec2(st.xy)) - 0.5) * 2.0;\n    float a = atan(st.y, st.x) / PI;\n    // Create polar coordinate system\n    vec2 polar = vec2(r, a);\n\n    return polar;    \n}\n\nfloat createTrail(in vec2 st, in float length, in float size_start, float size_end) {\n    float color = 0.0;\n    float height = mix(size_end, size_start, smoothstep(0.0, 1.0,(st.x + length)/length));\n    float circle_start = createCircle(st, size_start, 0.001);\n    if (st.x < 0.0)\n        circle_start *= 0.0;\n\n    float circle_end = createCircle(st + vec2(length, 0.0), size_end*1.5, 0.01);\n\n    if (st.x > -length && st.x < 0.0 && st.y < height && st.y > -height)\n        color = 1.0;\n    color += circle_start + circle_end;\n    \n\n    return color;\n}\n\nfloat waveOffset(in vec2 polar, in float speed, in float offset) {\n\n    return (sin(polar.y*30.0+(iTime * speed+ offset)));\n}\n\nfloat createSingleTomoe(in vec2 st, in float size, in float anim) {  \n    vec2 transf= scale(vec2(1.0/size, 1.0/size)) *rotate2d(180.0) * st;\n    float circle = createCircle(transf, 0.5, 0.001);\n        \n    transf = scale(vec2(1.8, 1.4)) *spilaryze(transf, -110.0, 200.0);\n    transf += vec2((0.01 * anim), -0.57 * anim);\n    float pyramid = createPolyShape(transf, 3, 1.0 * anim);\n\n    return circle + pyramid;\n}\n\nfloat createTripleTomoe(in vec2 st, in float size, in float anim) {\n    anim = pow(anim, 2.5);\n    // Rotate all\n    st = rotate2d(-sin(anim)*560.0) * st;\n\n    vec2 tomoeATransf = rotate2d(00.0) * st + vec2(0.0, 0.05);\n    float tomoeA = createSingleTomoe(tomoeATransf, size, anim);\n    \n    vec2 tomoeBTransf = rotate2d(120.0) * st + vec2(0.0, 0.05);\n    float tomoeB = createSingleTomoe(tomoeBTransf, size, anim);\n\n    vec2 tomoeCTransf = rotate2d(240.0) * st + vec2(0.0, 0.05);\n    float tomoeC = createSingleTomoe(tomoeCTransf, size, anim);\n\n    // trails\n    float trailOffset = -45.0;\n    float trailScale = 10.0;\n    vec2 trailRotate = scale(vec2(trailScale))* rotate2d(trailOffset) * st;\n    vec2 polarTrail = polarCoord(trailRotate);\n    float trailA = createTrail(vec2(polarTrail.y*-1.0, polarTrail.x), 0.25*anim, 0.07, 0.001);\n\n    trailRotate = scale(vec2(trailScale))* rotate2d(120.0 +trailOffset) * st;\n    polarTrail = polarCoord(trailRotate);\n    float trailB = createTrail(vec2(polarTrail.y*-1.0, polarTrail.x), 0.25*anim, 0.07, 0.001);\n\n    trailRotate = scale(vec2(trailScale))* rotate2d(240.0 +trailOffset) * st;\n    polarTrail = polarCoord(trailRotate);\n    float trailC = createTrail(vec2(polarTrail.y*-1.0, polarTrail.x), 0.25*anim, 0.07, 0.001);\n\n    return (tomoeA + tomoeB + tomoeC + (trailA + trailB + trailC) * anim);\n    \n}\n\nfloat createIndra(in vec2 st, in float intensity, in float offset) {\n    st = spilaryze(st, intensity, offset);\n\n    vec2 rectTransformA = st - vec2(0.5, 0.9);\n    rectTransformA = scale(vec2(0.5, 0.50)) * rectTransformA;\n    float rectangleA = createPolyShape(rectTransformA, 4, 0.5);\n\n    vec2 rectTransformB = st - vec2(0.5, -0.65);\n    rectTransformB =  scale(vec2(0.5, 0.5)) * rectTransformB;\n    float rectangleB = createPolyShape(rectTransformB, 4, 0.5);\n    \n    return rectangleA+ rectangleB;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 color = vec3(0.0);\n    float angleRotate ;\n    float speed = 90.0;\n\n    // Center\n    vec2 spiralRotate = rotate2d(iTime*speed) * uv;\n    spiralRotate = spilaryze(spiralRotate, -2000.0, 0.0);\n    float square = createPolyShape(spiralRotate, 4, 0.2);\n    color += square;\n\n    // Trails\n    angleRotate = iTime*speed ;\n    \n    vec2 trailRotate = rotate2d(angleRotate) * uv * 2.5;\n    vec2 polar = polarCoord(trailRotate);\n    float trailA = createTrail(polar.yx + vec2(0.0, waveOffset(polar, speed*0.25, 0.1)*0.1), 0.78, 0.02, 0.01);\n    float trailB = createTrail(polar.yx + vec2(0.0, waveOffset(polar, speed*0.25, 3.1415)*0.1), 0.85, 0.05, 0.01);\n    \n    trailRotate = rotate2d(180.0) * trailRotate;\n    polar = polarCoord(trailRotate);    \n    float trailC = createTrail(polar.yx + vec2(0.0, waveOffset(polar, speed*0.25, 0.1)*0.1), 0.78, 0.02, 0.01);\n    float trailD = createTrail(polar.yx + vec2(0.0, waveOffset(polar, speed*0.25, 3.1415)*0.1), 0.85, 0.05, 0.01);\n    \n    vec2 circleRotate =  uv ;\n    circleRotate = rotate2d(angleRotate+105.0) * circleRotate;\n    vec2 circleRotateA = circleRotate + vec2(0.0, 0.20);\n    float circleTrailA = createCircle(circleRotateA, 0.02, 0.001);\n    vec2 circleRotateB = circleRotate - vec2(0.0, 0.20);\n    float circleTrailB = createCircle(circleRotateB, 0.02, 0.001);\n\n    color += (trailA+ trailB + trailC + trailD + circleTrailA + circleTrailB);\n\n    // Circle - contourA\n    float contourA1 = createCircle(uv, 0.245, 0.001);\n    float contourA2 = createCircle(uv, 0.24, 0.001);\n\n    color += (contourA1 - contourA2);\n\n    // flowers\n    vec2 flowerTransformA = scale(vec2(4.0, 1.3)) * rotate2d(0.0 - angleRotate) * uv;\n    float flowerA1 = createCircle(flowerTransformA, 0.5, 0.001);\n    float flowerA2 = createCircle(flowerTransformA, 0.47, 0.001);\n    float flowerMaskA2 = createCircle(flowerTransformA, 0.45, 0.001);\n\n    vec2 flowerTransformB = scale(vec2(4.0, 1.3)) * rotate2d(120.0- angleRotate) * uv;\n    float flowerB1 = createCircle(flowerTransformB, 0.5, 0.001);\n    float flowerB2 = createCircle(flowerTransformB, 0.47, 0.001);\n    float flowerMaskB2 = createCircle(flowerTransformB, 0.45, 0.001);\n\n    vec2 flowerTransformC = scale(vec2(4.0, 1.3)) * rotate2d(240.0 - angleRotate) * uv;\n    float flowerC1 = createCircle(flowerTransformC, 0.5, 0.001);\n    float flowerC2 = createCircle(flowerTransformC, 0.47, 0.001);\n    float flowerMaskC2 = createCircle(flowerTransformC, 0.45, 0.001);\n\n    float flowerMask = 1.0 - createCircle(uv, 0.26, 0.001);\n\n    color += ((flowerA1-flowerA2) + (flowerB1-flowerB2) + (flowerC1-flowerC2)) * flowerMask;\n\n    // Indra\n     float indra = createIndra(uv, -20000.0, iTime*-360.0*(speed*0.02));\n    color += indra * (flowerMaskA2 + flowerMaskB2 + flowerMaskC2) * flowerMask;\n\n    // Circle - contourB\n    float contourB1 = createCircle(uv, 0.28, 0.001);\n    float contourB2 = createCircle(uv, 0.26, 0.001);\n\n    color = mix(color, vec3(1.0), (contourB1 - contourB2) -(flowerA1 + flowerB1 + flowerC1));  \n\n    // Tomoes\n    float tomoe = 1.0-createTripleTomoe(uv, 0.05, abs(sin(iTime*(speed*0.01))));\n    \n    color *= vec3(tomoe);\n\n    // Final Contour\n    float finalContour1 = createCircle(uv, 0.4, 0.01);\n    float finalContour2 = createCircle(uv, 0.385, 0.02);\n\n    color += (finalContour1- finalContour2);\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}