{"ver":"0.1","info":{"id":"Xtc3zX","date":"1470422196","viewed":204,"name":"distortion noise texture","username":"KukaTails","description":"generate textures by distortion noise function","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["distortionnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash(vec2 p)\n{\n    float h = dot(p, vec2(17.1, 311.7));\n    return -1.0 + 2.0 * fract(sin(h) * 4358.5453);\n}\n\nfloat Noise(vec2 p)\n{\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    \n    return mix(mix(Hash(i + vec2(0.0, 0.0)),\n                   Hash(i + vec2(1.0, 0.0)), u.x),\n               mix(Hash(i + vec2(0.0, 1.0)),\n                   Hash(i + vec2(1.0, 1.0)), u.x), u.y);\n \n}\n\n\nvec2 VecNoise(vec2 point)\n{\n    vec2 res;\n    res.x = Noise(point);\n    res.y = Noise(point + vec2(iTime / 3.0));\n    return res;\n}\n\n\nfloat DistortionNoise(vec2 point, float distortion)\n{\n    vec2 offset = point + vec2(0.5);\n    offset = VecNoise(point);\n    offset *= distortion;\n    point += offset;\n    return Noise(point);\n}\n\nvec3 GetColor(float noise_value)\n{\n    vec3 a = vec3(0.0);\n    vec3 b = vec3(1.5);\n    return clamp(vec3(mix(a, b, noise_value)), vec3(0.0), vec3(1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.x;\n    float noise_value = DistortionNoise(uv * 30.0, 1.0);\n    \n    fragColor = vec4(GetColor(noise_value), 1.0);\n}","name":"Image","description":"","type":"image"}]}