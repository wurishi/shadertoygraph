{"ver":"0.1","info":{"id":"XcBGzG","date":"1704323722","viewed":31,"name":"bouncing voronoi balls","username":"soggymongoose","description":"balls","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash21(vec2 p) {\n    return fract(dot(p, vec2(352.23, 632.62))*sin(232.5223*p.x+12.4311*p.y));\n}\n\nvec2 Hash22(vec2 p) {\n    return vec2(fract(dot(p, vec2(8082.33, 736.29))*sin(3132.8323*p.x+352.5311*p.y)),fract(dot(p, vec2(3572.323, 832.62))*sin(2392.6422*p.x+62.4311*p.y)));\n}\n\nvec2 ball(vec2 tUV, vec2 tID, vec2 iRes) {\n    vec2 shootDir = vec2(cos(Hash21(tID)*6.2831),sin(Hash21(tID)*6.2831));\n    \n    vec2 p = vec2(shootDir.x*float(iTime)/5.-(Hash21(tID+43.42)*40.)*(iRes.x/iRes.y),shootDir.y*float(iTime)/5.-(Hash21(tID+43.42)*40.));\n\n    vec2 flag = vec2(floor(p.x),floor(p.y));\n    \n    vec2 pUV = (mod(p, 1.) - .5) * 2. * (mod(flag, 2.) * 2. - 1.);\n    \n    return pUV;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv *= 2.;\n    \n    //uv.x *= iResolution.x/iResolution.y;\n    \n    int[] ballID = int[] (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24);\n\n    float lu = 0.;\n    float mindist = 100.;\n    vec2 BallUV;\n    vec2 minBallUV;\n    for (int i = 1; i <= 22; i += 2) {\n        vec2 bUV = ball(uv, vec2(float(ballID[i]),float(ballID[i+1])),iResolution.xy);\n        \n        float dist = length(uv-bUV);\n        lu += 1./dist;\n        \n        if (dist < mindist) {\n            mindist = dist;\n            BallUV = Hash22(vec2(float(ballID[i]),float(ballID[i+1])));\n            minBallUV = bUV;\n        }\n    }\n    \n    vec2 tint = BallUV/1.;\n    tint = smoothstep(.2,1.,pow(BallUV, vec2(1.)));\n    float mixFactor = (BallUV.x+BallUV.y)/1.;\n    mixFactor = smoothstep(0.,1.,mixFactor);\n    \n    vec3 col = vec3(tint, .5);\n    \n    //if (length(minBallUV-uv) <.02) col = vec3(1.,1.,1.);\n    \n    col *= fract(mixFactor * vec3(minBallUV, .5));\n    \n    if (length(minBallUV-uv) <.02) col = vec3(1.,1.,1.);\n    \n    col = pow((normalize(col)*sqrt(3.)),vec3(.5,.5,.5));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}