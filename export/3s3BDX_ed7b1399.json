{"ver":"0.1","info":{"id":"3s3BDX","date":"1606231557","viewed":127,"name":"first person","username":"dnkorbut","description":"first person experiment. WASD to move and arrows to rotate and fly","likes":6,"published":1,"flags":48,"usePreview":0,"tags":["fp","first","person"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_MARCH 6400\n#define MAX_DST 10000.\n#define MIN_DST .00032\n\n\n\nvec3 p;\n\nvec3 light = normalize(vec3(-.25, -.25, 1.));\nvec3 cam = vec3(.0, .0, -5.);\n\nfloat angleZ = 1.;\n\nfloat map(vec3 p) {\n  vec3 q = cos(p);\n  return length(q) - 1.;\n}\n\nvec3 nor(vec3 p) {\n    const float eps = 0.0001; // or some other value\n    const vec2 h = vec2(eps,0);\n    return normalize( vec3(map(p+h.xyy) - map(p-h.xyy),\n                           map(p+h.yxy) - map(p-h.yxy),\n                           map(p+h.yyx) - map(p-h.yyx) ) );   \n}\n\nfloat march(vec3 start, vec3 dir) {\n    float ret = 0.;\n    int i;\n    float dst;\n    \n    for(i = 0; i < MAX_MARCH; i++) {\n        p = start + dir * ret;\n        dst = map(p);\n        ret += dst * 1.;\n        if(ret > MAX_DST || dst < MIN_DST) {\n           break; \n        }\n    }\n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    \n    cam.x = texture(iChannel1, vec2(.5,.5)/iResolution.xy).r * 100.;\n    cam.y = texture(iChannel1, vec2(.5,.5)/iResolution.xy).g * 100.;\n    cam.z = texture(iChannel1, vec2(.5,.5)/iResolution.xy).b * 100.;\n    \n    angleZ = texture(iChannel1, vec2(.5,.5)/iResolution.xy).a * 10.;\n    \n    vec3 dir = normalize(vec3(uv, 1.));\n    \n    //if(iMouse.z > 0.) {\n    //    vec2 mv = (iMouse.xy - .5 * iResolution.xy) / iResolution.y;\n    //    angleZ = mv.x * 6.5;\n    //}\n    \n    \n    float s = sin(angleZ);\n\tfloat c = cos(angleZ);\n\tdir.xz *= mat2(c, -s, s, c);\n    //dir.x = v.x;\n    //dir.z = v.y;\n    //v = vec2(light.x, light.z) * m;\n    //light.x = v.x;\n    //light.z = v.y;\n    \n    float dst = march(cam, dir);\n    \n    vec3 col = vec3(dot(nor(p), light) * -1.);\n    \n    //vec3 col = vec3(dst / -5. + 1.) * 5.;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define KEY_LEFT  37.5\n#define KEY_UP    38.5\n#define KEY_RIGHT 39.5\n#define KEY_DOWN  40.5\n\n#define KEY_W\t\t87.5\n#define KEY_S\t\t83.5\n#define KEY_A\t\t65.5\n#define KEY_D\t\t68.5\n\nbool isPressed(float keyCode) {\n    keyCode = keyCode / 256.0;\n    vec2 uv = vec2(keyCode, 0.25);\n    float key = texture(iChannel0, uv).r;\n\n    return key > 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n    \n    vec4 v;\n    float f;\n    vec3 dir;\n    vec3 left;\n    float angleZ;\n    \n    if(fragCoord.y < 1.) { // camera\n        if(fragCoord.x < 1.) { // x\n            v = texture(iChannel1, vec2(.5,.5)/iResolution.xy);\n            \n            if(isPressed(KEY_LEFT)) {\n                v.w += 0.001;\n            }\n            if(isPressed(KEY_RIGHT)) {\n                v.w -= 0.001;\n            }\n            angleZ = v.w * 10.;\n            \n            dir = vec3(0., 0., 1.);\n            float s = sin(angleZ);\n            float c = cos(angleZ);\n            dir.xz *= mat2(c, -s, s, c);\n            dir = normalize(dir);\n            left = vec3(dir.z, 0., -dir.x);\n            \n            if(isPressed(KEY_W)) {\n                v.xyz = v.xyz + dir * 0.001;\n            }\n            if(isPressed(KEY_UP)) {\n                v.y += 0.001;\n            }\n            if(isPressed(KEY_S)) {\n                v.xyz = v.xyz - dir * 0.001;\n            }\n            if(isPressed(KEY_DOWN)) {\n                v.y -= 0.001;\n            }\n            if(isPressed(KEY_A)) {\n                v.xyz = v.xyz - left * 0.001;\n            }\n            if(isPressed(KEY_D)) {\n                v.xyz = v.xyz + left * 0.001;\n            }\n            \n            \n            fragColor = v;\n        }        \n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}