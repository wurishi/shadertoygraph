{"ver":"0.1","info":{"id":"XljSDD","date":"1443786019","viewed":393,"name":"Projection: Panini","username":"hornet","description":"entirely stolen from https://github.com/shaunlebron/blinky","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["projection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//note: see also http://tksharpless.net/vedutismo/Pannini/panini.pdf\n// https://github.com/shaunlebron/blinky\n/////////////////////////////////////////////////////////////////////////\n\n//note: src https://github.com/shaunlebron/blinky/blob/410e2f80b4f37a8c606c28c44e444f2c6327958a/engine/NQ/fisheye.c\nvoid latlon_to_ray(in float lat, in float lon, out vec3 ray)\n{\n   float clat = cos(lat);\n   ray[0] = sin(lon)*clat;\n   ray[1] = sin(lat);\n   ray[2] = cos(lon)*clat;\n}\n\n//void ray_to_latlon(in vec3 ray, out float lat, out float lon)\n//{\n//   lon = atan(ray[0], ray[2]);\n//   lat = atan(ray[1], sqrt(ray[0]*ray[0]+ray[2]*ray[2]));\n//}\n\nvec2 rot2d( vec2 p, float a )\n{\n\tvec2 sc = vec2( sin(a),cos(a) );\n\tvec2 ret;\n\tret.x = dot( p, sc.yx * vec2(1.0,-1.0) );\n\tret.y = dot( p, sc.xy );\n\treturn ret;\n} \nvec3 rot3d( vec3 p, vec3 v, float a_rad )\n{\n    float c = cos( a_rad );\n    float s = sin( a_rad );\n    float t = 1.0 - c;\n\n    vec3 r0, r1, r2;\n    r0[0] = t*v[0]*v[0] + c;\n    r0[1] = t*v[0]*v[1] - s*v[2];\n    r0[2] = t*v[0]*v[2] + s*v[1];\n\n    r1[0] = t*v[0]*v[1] + s*v[2];\n    r1[1] = t*v[1]*v[1] + c;\n    r1[2] = t*v[1]*v[2] - s*v[0];\n\n    r2[0] = t*v[0]*v[2] - s*v[1];\n    r2[1] = t*v[1]*v[2] + s*v[0];\n    r2[2] = t*v[2]*v[2] + c;\n\n    return vec3( dot( r0, p),\n                 dot( r1, p),\n                 dot( r2, p) );\n}\n\n\n//note: src https://github.com/shaunlebron/blinky/blob/master/game/lua-scripts/lenses/panini.lua\nvec3 lens_inverse_panini(in float x, in float y)\n{\n    x = -5.0+10.0*x;\n    y = -4.0+8.0*y;\n    \n\tconst float d = 1.0; //TODO: wat...\n   \tfloat k = x*x/((d+1.0)*(d+1.0));\n   \tfloat dscr = k*k*d*d - (k+1.0)*(k*d*d-1.0);\n   \tfloat clon = (-k*d+sqrt(dscr))/(k+1.0);\n   \tfloat S = (d+1.0)/(d+clon);\n   \tfloat lon = atan(x,S*clon);\n   \tfloat lat = atan(y,S);\n\n   \tvec3 ray;\n   \tlatlon_to_ray(lat,lon, ray);\n   \treturn ray;\n}\n\n                   \nvec3 lens_inverse( in float x, in float y )\n{\n    return lens_inverse_panini( x, y );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 ray = lens_inverse( uv.x, uv.y );\n\n    \n    if ( mod( iTime, 15.0 ) < 5.0 )\n    {\n    \t//note: rotate sideways\n\t\t//ray.xz = rot2d( ray.xz, sin(iTime) );\n        ray = rot3d( ray, vec3(0,1,0), sin(iTime) );\n    }\n    else if ( mod( iTime, 15.0 ) < 10.0 )\n    {\n    \t//note: rotate up/down\n    \t//ray.yz = rot2d( ray.yz, 0.5 * sin(iTime) );\n        ray = rot3d( ray, vec3(1,0,0), 0.5*sin(iTime) );\n    }\n    else\n    {\n    \t//note: barrel roll\n        ray = rot3d( ray, vec3(0,0,1), 0.5*sin(iTime) );\n    }\n    \n    fragColor = texture( iChannel0, ray );\n}\n","name":"Image","description":"","type":"image"}]}