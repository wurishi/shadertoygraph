{"ver":"0.1","info":{"id":"DtjGWz","date":"1673139901","viewed":73,"name":"goopin around","username":"moldy","description":"noise, concentric cirlces","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 hash( vec2 p ) // replace this by something better\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n\tvec2  i = floor( p + (p.x+p.y)*K1 );\n    vec2  a = p - i + (i.x+i.y)*K2;\n    float m = step(a.y,a.x); \n    vec2  o = vec2(m,1.0-m);\n    vec2  b = a - o + K2;\n\tvec2  c = a - 1.0 + 2.0*K2;\n    vec3  h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\tvec3  n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    return dot( n, vec3(70.0) );\n}\n\nfloat fbm( in vec2 x, int numOctaves)\n{    \n    float G = 0.5;\n    float f = 1.0;\n    float a = 1.0;\n    float t = 0.0;\n    for( int i=0; i<numOctaves; i++ )\n    {\n        t += a*noise(f*x);\n        f *= 2.0;\n        a *= G;\n    }\n    return t;\n}\n\nfloat wave(vec2 o, vec2 p, float s){\n    return (sin(distance(o,p)/s + 3.14 * (iTime*.1)) + 1.) * 0.5;\n}\n\n\nfloat wave_ar(vec2 o, vec2 p, float s, float ar){\n    p = p * vec2(ar,1.);\n    return (sin(distance(o,p)*s) + 1.) * 0.5;\n}\n\nfloat wave_ridged(vec2 o, vec2 p, float s){\n    return abs(sin(distance(o,p)*s));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 centerPoint = vec2(0.5);\n    float ar = iResolution.x / iResolution.y;\n    vec2 cen = iResolution.xy / 2.;\n\n    // Time varying pixel color\n    float pert = wave(fragCoord , cen + vec2((0.1 * sin(iTime * 0.1)),(0.1 * sin(iTime * 0.3))), 20.);\n    pert = pert * .8 + wave(fragCoord , cen * sin(iTime*.5) * 1.2, 30. * (sin(iTime*0.3)) * 0.5);\n    pert = pert * .8 + wave(fragCoord , cen * cos(iTime*.2) * 0.2, 30.) * 0.5;\n    //vec3 col = vec3(abs(fbm(uv*2. + pert * 1. +iTime/10. ,8)));\n    vec3 col = vec3(abs(fbm(uv*2. + pert * 1. +iTime/10. ,8)), pert * 0.5, 0.2);\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}