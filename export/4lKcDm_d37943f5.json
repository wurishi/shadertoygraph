{"ver":"0.1","info":{"id":"4lKcDm","date":"1536605622","viewed":159,"name":"eudaimon ","username":"nabr","description":"i start to play around with a glslsandbox shader end up with this","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","complex","glslsandbox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/4lKcDm\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n\n\n// by FabriceNeyret2 / GregRostami\n#define mainImage(o,U)                                      \\\n    for (vec2 u = 2. * U/iResolution.y - 1., z = u;         \\\n         o.a++ < 9.;                                        \\\n         o.r = 4. - dot( z = 1.5 * dot(z,z) *               \\\n             sin(  4.3 * atan( z.x*1.6, z.y) + vec2(0,33) ) \\\n                            + u, z ) )\n\n\n/**/\n/*\n// by FabriceNeyret2\n#define mainImage(o,U)                                     \\\n    for (vec2 r = iResolution.xy, u = (U+U-r)/r.y, z = u;  \\\n         o.a++ < 9.;                                       \\\n         o.r = 4. - dot( z = 1.5 * dot(z,z) *              \\\n             sin(  4.3 * atan( z.x*1.6, z.y) +vec2(0,33) ) \\\n                            + u, z ) )\n*/\n/**/\n\n\n\n/* // original\nfloat map(vec2 p)\n{\n    vec2 z = p;\n\n    for (float i = 1.; i < 10.;i++)\n    {\n        float ang = -4.288 * (-sin(.4) + atan( z.x * cos(.63), z.y * sin(.53) ));\n        \n        float r = pow(length(z), 2.);\n\n        z =(1.5 * vec2(r * cos(ang), r * sin(ang))) + p;\n\n        if (length(z) > 2.) return i;\n    }\n\n    return -1.;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 p = (fragCoord.xy * 2. - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    fragColor = vec4(1. - map(p), 0, 0, 1);\n\n}//nabr\n*/","name":"Image","description":"","type":"image"}]}