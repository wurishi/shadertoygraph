{"ver":"0.1","info":{"id":"3sl3WX","date":"1547667502","viewed":735,"name":"Low pH","username":"Blokatt","description":"Don't put this in your hair.","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["glitch","corrosion","acid","buffers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    float cols = 1. + iTime * .25;\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv) * cols;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 tex(in vec2 uv){\n\treturn texture(iChannel0, uv);\n}\n\nvec4 getError(in vec2 uv){\n    float cols = 1. + iTime * .25;\n\tvec3 old = texture(iChannel0, uv).rgb;\n    vec3 new = (floor(tex(uv) * cols) / cols).rgb;\n    return vec4(old - new, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec4 pixel = vec4(1. / iResolution.xy, -(1. / iResolution.y), 0.);\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = tex(uv)\n        + getError(uv + pixel.xz) *  (7. / 16.)\n        + getError(uv - pixel.xz) *  (3. / 16.)\n        + getError(uv - pixel.zy) *  (5. / 16.)\n        + getError(uv + pixel.zy) *  (1. / 16.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec4 tex(in vec2 uv){\n\treturn texture(iChannel0, uv);\n}\n\nvec4 getError(in vec2 uv){\n    float cols = 1. + iTime * .25;\n\tvec3 old = texture(iChannel0, uv).rgb;\n    vec3 new = (floor(tex(uv) * cols) / cols).rgb;\n    return vec4(old - new, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec4 pixel = vec4(1. / iResolution.xy, -(1. / iResolution.y), 0.);\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = getError(uv + pixel.xz) *  (7. / 16.)\n        + getError(uv - pixel.xz) *  (3. / 16.)\n        + getError(uv - pixel.zy) *  (5. / 16.)\n        + getError(uv + pixel.zy) *  (1. / 16.);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"vec4 tex(in vec2 uv){\n\treturn texture(iChannel0, uv);\n}\n\nvec4 getError(in vec2 uv){\n    float cols = 1. + iTime * .25;\n\tvec3 old = texture(iChannel0, uv).rgb;\n    vec3 new = (floor(tex(uv) * cols) / cols).rgb;\n    return vec4(old - new, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec4 pixel = vec4(1. / iResolution.xy, -(1. / iResolution.y), 0.);\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = getError(uv + pixel.xz) *  (7. / 16.)\n        + getError(uv - pixel.xz) *  (3. / 16.)\n        + getError(uv - pixel.zy) *  (5. / 16.)\n        + getError(uv + pixel.zy) *  (1. / 16.);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"vec4 tex(in vec2 uv){\n\treturn texture(iChannel0, uv);\n}\n\nvec4 getError(in vec2 uv){\n    float cols = 1. + iTime * .25;\n\tvec3 old = texture(iChannel0, uv).rgb;\n    vec3 new = (floor(tex(uv) * cols) / cols).rgb;\n    return vec4(old - new, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec4 pixel = vec4(1. / iResolution.xy, -(1. / iResolution.y), 0.);\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = getError(uv + pixel.xz) *  (7. / 16.)\n        + getError(uv - pixel.xz) *  (3. / 16.)\n        + getError(uv - pixel.zy) *  (5. / 16.)\n        + getError(uv + pixel.zy) *  (1. / 16.);\n}","name":"Buffer D","description":"","type":"buffer"}]}