{"ver":"0.1","info":{"id":"mtKBRh","date":"1701850465","viewed":54,"name":"edge halftoning","username":"lalaoopybee","description":"motivation from the newest spider man movie.\ntry it out with other media(i.e. webcam!)\n\nmay cause photosensitive epilepsy.\nuse at your own risk!","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["sobel","halftone","edge","fx","gaussian","npr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Pi 3.1415927\n\n#define K 11\n#define Sigma 4.3\n\n#define Size 6.\n#define Fps 8.\n\nfloat gaussian(vec2 pos) {\n    float left=1./(2.*Pi*Sigma*Sigma);\n    float right=exp(-dot(pos, pos)/(2.*Sigma*Sigma));\n    return left*right;\n}\n\nvec3 colorWheel(float angle) {\n    return .5+.5*cos(angle-Pi*vec3(0, .667, 1.33));\n}\n\nvec2 rotVec(vec2 v, float f) {\n    float c=cos(f), s=sin(f);\n    return v*mat2(c, -s, s, c);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv=fragCoord/iResolution.xy;\n    \n    //gaussian sobel detection\n    vec3 sum=vec3(0);\n    for(int i=-K;i<=K;i++) {\n        for(int j=-K;j<=K;j++) {\n            vec2 offset=vec2(i, j);\n            float weight=gaussian(offset);\n            \n            vec2 offsetUV=offset/iResolution.xy;\n            vec4 col=texture(iChannel0, uv+offsetUV);\n            float lum=dot(col.rgb, vec3(.299, .587, .114));\n            sum+=weight*vec3(lum*sign(offset), 1);\n        }\n    }\n    float mag=smoothstep(0., .12, length(sum.xy));\n    float angle=iTime+atan(sum.y, sum.x);\n    \n    //partition time, subdivide space, make radial gradients\n    float time=round(iTime*Fps);\n    float dist=length(.5-fract(rotVec(fragCoord, time)/Size));\n    float ht=smoothstep(mag, mag-.2, 2.*dist);\n    \n    //final compositing.\n    vec4 base=texture(iChannel0, uv);\n    vec4 rainbow=vec4(colorWheel(angle), 1);\n    fragColor=mix(base, rainbow, ht);\n}","name":"Image","description":"","type":"image"}]}