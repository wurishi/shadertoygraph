{"ver":"0.1","info":{"id":"7dtGWB","date":"1631143401","viewed":68,"name":"RZ Basics of Fragment Shaders","username":"raymondzheng","description":"GRP-200 first assignment","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grp200"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Create a Gradient that moves vertically.\nvec3 questionOne(vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(.1, uv.y, .5);\n    return col;\n}\n// Create a split-screen of four quadrants. Choose any 4 colors.\nvec3 questionTwo(vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0,1,0);\n    if (uv.x > .5) {\n        col = vec3(1,0,0);\n    }\n    if (uv.y > .5) {\n        col = vec3(0,0,1);\n    }\n    if (uv.y > .5 && uv.x > .5) {\n        col = vec3(1,1,0);\n    }\n    return col;\n}\n\nfloat magnitudeCalc(vec3 color) {\n    return sqrt(pow(color.x, 2.0) + pow(color.y, 2.0) + pow(color.z, 2.0));\n}\n// Create a \"heat\" finder. Basically, if the magnitude/brightness of any color is greater than X then turn it red. \n// X should be a variable. By default, set it to 0.5.\nvec3 questionThree(vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(0, uv.x, uv.x);\n    float X = 0.5;\n    if (magnitudeCalc(color) >= X) {\n      color = vec3(1,0,0);\n    }\n    return color;\n}\n// Bonus: Create a striped pattern of any two colors. The colors should be variable.\nvec3 questionFour(vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    // Random color code from Shadertoy example.\n    vec3 randColOne = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 randColTwo = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(4,2,0));\n    vec3 col = randColOne;\n    if (int(uv.x * float(10)) % 2 == 1) {\n        col = randColTwo;\n    } else {\n        col = randColOne;\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec3 col = vec3(0,0,0);\n\n    // Output to screen\n\n    //col = questionOne(fragCoord);\n    //col = questionTwo(fragCoord);\n    //col = questionThree(fragCoord);\n    col = questionFour(fragCoord);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}