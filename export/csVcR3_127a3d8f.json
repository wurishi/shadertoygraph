{"ver":"0.1","info":{"id":"csVcR3","date":"1696392800","viewed":65,"name":"Stylized Bushes","username":"pugly","description":"Stylized bushes using layered noise.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["art","stylized","bush"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S smoothstep\n#define DARK vec3(0.075,0.165,0.075)\n#define MID vec3(0.31,0.467,0.176)\n#define LIGHT vec3(0.925,0.953,0.62)\n#define LSRC normalize(-vec2(sin(iTime)*3.,2.))\n\nfloat hash21(vec2 p) {\n    return fract(sin(dot(p,\n        vec2(12.12327, 77.4725))) *\n        79322.1543424);\n}\n\nfloat noise(vec2 p) {\n\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    \n    float a = hash21(i);\n    float b = hash21(i + vec2(1., 0.));\n    float c = hash21(i + vec2(0., 1.));\n    float d = hash21(i + vec2(1., 1.));\n    \n    vec2 u = smoothstep(0., 1., f);\n    \n    return mix(a, b, u.x) +\n        (c - a) * u.y * (1.0-u.x) +\n        (d - b) * u.x * u.y;\n\n}\n\n#define OCTAVES 4.\nfloat fbm(vec2 p) {\n    float n = 0.;\n    float a = .5;\n    for (float i = 1.; i > 0.; i -= 1./OCTAVES) {\n        mat2 r = mat2( 1.6,  1.2, -1.2,  1.6 );\n        n += a * noise(p);\n        a = a/2.;\n        p *= r;\n    }\n\n    return clamp(n,0.,1.);\n}\n\nvec4 bush(vec2 p, float size, float seed) {\n\n    p /= size;\n    float n = fbm(p*4.-seed*232.2323);\n    float dark = S(.001,-.001,length(p)-n*.5-.04/size);\n    float dmask = step(0.3, dark);\n    \n    p += LSRC*.1;\n    n = fbm(p*10.+LSRC.x-seed*322.18);\n    float mid = S(.001,-.001,length(p)-n*.4-.04/size);\n    float mmask = step(0.3,mid);\n    \n    p += LSRC*.1;\n    n = fbm(p*16.+LSRC.x-seed*1022.18);\n    float light = S(.001,-.001,length(p)-n*.2-.04/size)*dmask;\n    float lmask = step(0.3,mid);\n    \n    vec4 col = vec4(DARK*dark*(1.-mmask),1.);\n    col += vec4(MID*mid*dmask*lmask,1.);\n    col += vec4(LIGHT*light,1.);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec4 col = vec4(0);\n    \n    uv *= 2.;\n    uv.x += iTime * .3;\n    float id = floor(uv.x)*floor(uv.y-1.)/332.3;\n    uv = fract(uv)-.5;\n    col += bush(uv, 1., id);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}