{"ver":"0.1","info":{"id":"l3sGzs","date":"1707852861","viewed":78,"name":"wobbly-stuff_WIP","username":"saiomin","description":"Throwing different ideas together","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","texture","sinusoidal","1bit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define t iTime\n#define res iResolution\n\nconst float freq = 3.523;\n\nconst vec3 deepSea = vec3(0.18, 0.25, 0.25);\nconst vec3 sageClay = vec3(0.86, 0.89, 0.80);\nconst vec3 sand = vec3(0.86, 0.73, 0.56);\n\n// from https://www.shadertoy.com/view/WtsXW2\nfloat dither8x8(vec2 position, float brightness) {  \n  float limit = texture(iChannel0, position / iChannelResolution[0].xy).r;\n\n  return brightness < limit ? 0.0 : 1.0;\n}\n\n\n// 2D Random\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nfloat wave(in vec2 uv, in float mult) \n{\n    uv += noise(uv*PI*1.5 + t)*(mult/30.);\n    //uv *= sin(uv.x*PI);\n    float col = (fract(noise(vec2(uv.x*PI*freq*noise(vec2(mult))*.5+1.))));\n    return col;//float(ceil(col*mult*10.6)/(mult*10.6));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col;\n    \n    //col = mix(deepSea, vec3(0.87, 0.96, 0.95), wave(uv,  12.8));\n    //col = mix(sageClay, col, ceil(wave(uv, 16.2)*3.)/3.);\n    //col = mix(sand, col, ceil(wave(uv, 20.)*3.)/3.);\n    \n    ///col -= .1;\n    float pct = ((wave(uv, 20.)*3.));\n    pct -= 0.1;\n    col = vec3(dither8x8(fragCoord,pct))*vec3(0.929,0.91,0.871);\n\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}