{"ver":"0.1","info":{"id":"lXG3Rh","date":"1717265272","viewed":54,"name":"Candy Swirl","username":"synthc","description":"Flowy colorful feedback flow","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["flow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 xy = fragCoord/iResolution.xy;\n    \n    \n    xy = (xy*2.-1.); // center\n\n    xy*=.95;\n    xy = (xy+1.)*.5; // uncenter\n\n\n    vec4 B,C,D;\n\n    B = texture(iChannel1,xy);\n    C = texture(iChannel2,xy);\n    D = texture(iChannel3,xy);\n\n    vec4 cd = D-C;\n\n    O = max( max(B,C), cd);\n\n//    O=xy.x > .5 ? C : D;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// Smooth HSV to RGB conversion \nvec3 hsv( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec2 c2r(in vec2 xy) { return vec2(atan(xy.x,xy.y),length(xy)); }\n\nvec2 r2c(in vec2 rd) { return vec2(sin(rd.x)*rd.y,cos(rd.x)*rd.y); }\n\n\n\nvec2 ctr(in vec2 xy) { return xy*2.-1.; } \nvec2 uctr(in vec2 xy) { return (xy+1.)/2.; }\n\nfloat sqr(float x) { \nreturn x;\n} \n\n\n\n#define PI acos(-1.)\n\n\n// All components are in the range [0…1], including hue.\nvec4 rgb2hsv(vec4 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec4(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x, c.a);\n}\n\n// All components are in the range [0…1], including hue.\nvec4 hsv2rgb(vec4 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return vec4( c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y) , c.a);\n}\n\nfloat csin(float x) {\n    return sin(x)*.5+.5; \n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nfloat st =0.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n    float t = iTime;\n    vec2 xy = (fragCoord/iResolution.xy)*2.-1.;\n    \n    \n    vec2 off = r2c(vec2(t,0.7));\n    \n    \n    vec2 ad = c2r(xy) ;\n       float a=ad.x;\n    float  d1=ad.y;\n    \n    float d = max(abs(sqr(xy.x)),  abs(sqr(xy.y)));\n    //|| (d1 <.4 && d1 > .35)\n    float c = (d > 0.95 && d < 1.)  ? 1.0 : 0.0;\n    \n    st+= 1.;\n    \n       \n    float f = clamp( max(0.,sqr(sin(a*5.+t))) , 0. ,1.);\n    vec3 colors = vec3( \n        sin(a+t*10.)*0.2+.3,\n        1.-f*.3, //.4+f*.6,\n        f-pow(csin(t),6.)\n        );\n    vec3 rgb = hsv(colors);\n    \n    \n    \n    fragColor = vec4(rgb,c);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    \n    vec2 xy = (fragCoord/iResolution.xy);\n    \n    vec4 A = texture(iChannel0, xy);\n\n\n    vec2 flow1 =vec2(0,0);        \n    vec2 flow2 =vec2(0,0);        \n\n    vec2 flow = xy;\n    int n = 4;\n    float ni = 1./float(n);\n    float amp, oct,fi,ri;\n    \n    \n    flow = (flow*2.-1.); // center\n\n    \n    for( int i = 0 ; i < n ; i ++) { \n        fi = float(i),\n        ri = fi*ni;\n        amp = 1. - ri;\n        \n        oct = (1.+fi*2.),\n        //oct =4.;\n    \n        flow = flow + vec2( \n            sin(flow1.y*oct+t*7.*ri*.1+fi \n                + cos(-flow2.x-t*.5) ),\n            cos(flow1.x*oct+t*3.*ri*.1-fi \n                + cos(1.+flow2.y-t*.3) ) \n        )*.005*(1.-amp);\n        flow1 = flow;\n        flow2 = flow1;\n        \n        \n        flow = flow ;\n    }  \n\n    \n    flow /=.995;\n    flow = (flow+1.)*.5; // uncenter\n\n    vec4 PPREV = texture(iChannel1, flow2);\n\n    vec4 PREV = texture(iChannel1, flow);\n    fragColor = (A.a > .6 ? A : PREV-PPREV*0.01);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 xy = (fragCoord/iResolution.xy);\n    vec4 B = texture(iChannel0, xy);\n    vec4 S = texture(iChannel1 , xy);\n\n    fragColor = mix(S,B,.01);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n    vec2 xy = (fragCoord/iResolution.xy);\n    \n    \n    xy= ctr( xy);\n    xy*=.9;\n    xy= uctr( xy);\n    \n    vec4 B = texture(iChannel0, xy);\n    vec4 S = texture(iChannel1 , xy);\n\n    fragColor = mix(S,B,.90);\n}","name":"Buffer D","description":"","type":"buffer"}]}