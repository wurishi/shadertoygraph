{"ver":"0.1","info":{"id":"Mtj3WD","date":"1429223374","viewed":321,"name":"Anuszkiewicz Grid","username":"DavidBraun","description":"Attempt of Richard Anuszkiewicz's signature grid pattern. With a function that draws a line from point A to point B, you can call that function 40 or so times in a loop. I chose not to do that because it's computationally costly. What's better?","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["art","opart","opticalart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float fun(float v) {\n    // experiment with function choices here for convenience\n\treturn pow(v, .7);\t\n    \n   \t// return pow(v, 1.4);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    uv.x = clamp(uv.x, 0.0, 1.0); // not really important\n    \n    vec3 white = vec3(1., 1., 1.);\n    vec3 black = vec3(.0, .0, .0);\n    \n    vec2 m;\n    m.y = mix(fun(uv.y), 1.-fun(1.-uv.y), uv.x);\n\tm.x = mix(fun(uv.x), 1.-fun(1.-uv.x), uv.y);\n\t// compare with\n\t// m = uv;\n\n\tfloat lineCount = 20.;\n\tfloat thresh = -.98;\n\tvec3 c = mix(white, black, smoothstep(thresh, thresh+.09, sin(m.x*lineCount*2.*3.141592))*smoothstep(thresh, thresh+.09, sin(m.y*lineCount*2.*3.141592)));\n    \n\tfragColor = vec4(c,1.0);\n}","name":"","description":"","type":"image"}]}