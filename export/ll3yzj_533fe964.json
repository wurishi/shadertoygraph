{"ver":"0.1","info":{"id":"ll3yzj","date":"1533159463","viewed":865,"name":"Moire Eyebleed","username":"cacheflowe","description":"Basic rows, calculated by texture noise","likes":12,"published":3,"flags":0,"usePreview":0,"tags":["blackandwhite","moire","bw","stripes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI     3.14159265358\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv.y += 0.4 * sin(uv.x * sin(iTime) + iTime);\n    float scroll = iTime / 20.;\n    vec2 noisePos = vec2(scroll + uv.x * 0.015, 0.5 + 0.5 * sin(scroll * PI));\n    float numLines = 40. + 160. * sin(PI * texture(iChannel0, noisePos).r);\n    float col = 0.5 + 0.5 * sin(uv.y * numLines);\n    float aA = 1./(iResolution.y / numLines) ;\n\tfragColor = vec4(smoothstep(0.5 - aA, 0.5 + aA, col));\n}\n    \n","name":"Image","description":"","type":"image"}]}