{"ver":"0.1","info":{"id":"7lycDR","date":"1661246816","viewed":114,"name":"doublej - animated perlin noise","username":"boudartjj","description":"animated perlin noise\nfeel free to play with the parameters in the code (from line 31 to 39)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random(vec2 uv){\n    uv = vec2( dot(uv, vec2(127.1,311.7) ),\n               dot(uv, vec2(269.5,183.3) ) );\n    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);\n}\n\nfloat noise(vec2 uv, float seed_h, float seed_v) {\n\n    uv.x = uv.x + seed_h;\n    uv.y = uv.y + seed_v;\n    \n    vec2 uv_index = floor(uv);\n    vec2 uv_fract = fract(uv);\n\n    vec2 blur = smoothstep(0.0, 1.0, uv_fract);\n\n    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),\n                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),\n                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),\n                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) + 0.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.x;\n    \n    // animation parameters - feel free to play with them\n    float horizontal_speed = 0.0;\n    float vertical_speed = 0.0;\n    float horizontal_oscillation_factor = 1.0;\n    float vertical_oscillation_factor = 1.0;\n    float horizontal_oscillation_speed = 1.0;\n    float vertical_oscillation_speed = 1.0;\n    float horizontal_oscillation_frequency = 1.0;\n    float vertical_oscillation_frequency = 1.0;\n    float chaos_factor = 10.0;\n\n    // noise\n    uv = chaos_factor * uv;\n    uv.x = uv.x - iTime * horizontal_speed;\n    uv.y = uv.y + iTime * vertical_speed;\n    \n    float horizontal_seed = horizontal_oscillation_frequency * noise(uv, horizontal_oscillation_speed * iTime * horizontal_oscillation_factor, 0.0);\n    float vertical_seed = vertical_oscillation_frequency * noise(uv, 0.0, vertical_oscillation_speed * iTime * vertical_oscillation_factor);\n\n    float noise = noise(uv, horizontal_seed, vertical_seed);\n    vec3 col = vec3(noise, noise, noise);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}