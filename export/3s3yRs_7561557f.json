{"ver":"0.1","info":{"id":"3s3yRs","date":"1601475554","viewed":55,"name":"stones by ME-v3","username":"jorge2017a1","description":"stones by ME-v3","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["stonesbymev3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//@ME \n//Stones\n//TODO: colors, cover with moss, ...\n\nvec2 mouse;\n\n\nmat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat hash( float n )\n{\n\treturn fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec2 x )\n{\n\tvec2 p = floor(x);\n\tvec2 f = fract(x);\n    \tf = f*f*(3.0-2.0*f);\n    \tfloat n = p.x + p.y*57.0;\n    \tfloat res = mix(mix( hash(n+  0.0), hash(n+  1.0),f.x), mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n    \treturn res;\n}\n\nfloat fbm( vec2 p )\n{\n    \tfloat f = 0.0;\n    \tf += 0.50000*noise( p ); p = m*p*2.02;\n    \tf += 0.25000*noise( p ); p = m*p*2.03;\n    \tf += 0.12500*noise( p ); p = m*p*2.01;\n    \tf += 0.06250*noise( p ); p = m*p*2.04;\n    \tf += 0.03125*noise( p );\n    \treturn f/0.984375;\n}\n\nfloat thing(vec2 pos) \n{\n\tvec2 p = pos;\n\tvec2 offset = vec2(0.0, 1.0);\n\tfloat rowX = floor((pos.y)/1.0);\n\tif (mod(rowX, 2.0) < 1.0)\n\t\toffset.x = 0.5 + fbm(p*0.3);\n\t\n\tfloat rowY = floor((pos.y)/1.0);\n\tif (mod(rowY, 2.0) < 1.0) {\n\t\toffset.y = 2.0;\n\t\toffset.x = 0.75 * fbm(p*0.5);\n\t\trowX = floor((pos.y)/0.5);\n\t\tif (mod(rowX, 2.0) < 1.0)\n\t\t\toffset.x += 0.25 + fbm(p*0.3);\n\t}\n\t\n\tp.x += offset.x;\n\tfloat n1 = fbm(pos * 5.0);\n\tpos.x=fract(pos.x + offset.x * fbm(p*0.9) +.5)-0.5;\n\tpos.y=fract(pos.y * offset.y +.5)-0.5;\n\tpos = abs(pos);\n   \tfloat a = atan(pos.y, pos.x);\n\tfloat b = atan(pos.x, pos.y);\n\tfloat n2 = fbm(pos) * (a*b);\n\tfloat n3 = n1 * 0.15 / n2 * .75;\n\tfloat s = min(pos.x,pos.y) - n3;\n\treturn mix(s, 1.-n1, 0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 position = ( fragCoord.xy / iResolution.xy );\n\tvec2 world = position * 5.0;\n\tworld.x *= iResolution.x / iResolution.y;\n\tworld.x += iTime;\n\tfloat dist = thing(world)+0.5;\n\t\n\tvec2 pos = -1.0 + 2.0*fragCoord.xy / iResolution.xy;\n\tfloat energy = 0.01;\n\t   \n\tfor (float i=0.0; i<1.0; i+=1.0) {\n\t\tvec2 starPos = vec2( 0.5*sin(i + iTime), 0.5*cos(i*i + iTime) );\n\t\tenergy += pow( cos( distance ( pos, starPos ) ), 128.0 );\n\t}\n\t   \n\t//dist *= energy;\n\tfragColor = vec4( dist, dist, dist, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}