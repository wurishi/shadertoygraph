{"ver":"0.1","info":{"id":"4lySDc","date":"1486132397","viewed":637,"name":"Paint test","username":"sebbbi","description":"Paint with mouse\nshift = paint secondary color\nctrl = small brush","likes":16,"published":1,"flags":48,"usePreview":0,"tags":["paint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 lighting(vec2 uv)\n{\n    vec2 tx1 = 1.0 / iResolution.xy;\n    vec4 nx0 = texture(iChannel0, uv + vec2(-tx1.x, 0));\n    vec4 nx1 = texture(iChannel0, uv + vec2(tx1.x, 0));\n    vec4 ny0 = texture(iChannel0, uv + vec2(0, -tx1.y));\n    vec4 ny1 = texture(iChannel0, uv + vec2(0, tx1.y));\n    \n    float ax0 = nx0.y + nx0.w;\n    float ax1 = nx1.y + nx1.w;\n    float ay0 = ny0.y + ny0.w;\n    float ay1 = ny1.y + ny1.w;\n    \n    vec3 tx = vec3(0.5, 0.0, ax0 - ax1);\n    vec3 ty = vec3(0.0, 0.5, ay0 - ay1);\n    vec3 N = normalize(cross(tx, ty));\n    \n    vec3 L = normalize(vec3(1.0, 1.0, 2.0));\n    \n    float diff = max(dot(N, L) * 0.65 + 0.35, 0.0);\n    float spec = clamp(dot(reflect(L, N),vec3(0, 0, -1)), 0.0, 1.0);\n    spec = pow(spec, 12.0);\n    \n    return vec2(diff, spec);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 mat = texture(iChannel0, uv);\n    \n    vec3 color0 = vec3(1.0, 0.0, 1.0);\n    vec3 color1 = vec3(0.0, 1.0, 0.0);\n    \n    // normalize material density\n    float matTotal = mat.y + mat.w;\n    if (matTotal > 1.0)\n    \tmat.yw /= matTotal;\n    \n    vec3 matColor = color0 * mat.y + color1 * mat.w;\n    vec2 light = lighting(uv);\n    vec3 finalColor = matColor * light.x + light.y;\n    \n\tfragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define KEYCODE_SHIFT\t(16.5 / 255.0)\n#define KEYCODE_CTRL\t(17.5 / 255.0)\n\n#define PAINT_MODE 4\n#define MIX_MODE 2\n\nconst float mixPercent = 0.1;\nconst float brushRadius = 10.0;\n\n// IMPORTANT: mixPair must be symmetric: mixPair(a,b) + mixPair(b,a) == 0\n#if MIX_MODE == 1\nvec2 mixPair(vec2 a, vec2 b)\n{\n    return (b - a) * mixPercent;\n}\n#elif MIX_MODE == 2\nvec2 mixPair(vec2 a, vec2 b)\n{\n    vec2 sum = vec2(a.x + a.y, b.x + b.y);    \n    float amount = (sum.y - sum.x);\n    float totalBig = max(sum.x, sum.y);\n    if (totalBig == 0.0)\n        return vec2(0.0, 0.0);\n        \n    vec2 movement;\n    if (amount < 0.0)\n    {\n        movement = amount * a / totalBig; \n    }\n    else\n    {\n        movement = amount * b / totalBig; \n    }\n\n    return movement * mixPercent;\n}\n#endif\n\nvec2 mixNeighbors(vec2 uv, vec4 center)\n{\n    vec2 tx1 = 1.0 / iResolution.xy;\n    vec4 nx0 = texture(iChannel0, uv + vec2(-tx1.x, 0));\n    vec4 nx1 = texture(iChannel0, uv + vec2(tx1.x, 0));\n    vec4 ny0 = texture(iChannel0, uv + vec2(0, -tx1.y));\n    vec4 ny1 = texture(iChannel0, uv + vec2(0, tx1.y));\n    \n    vec2 result = center.yw;\n    result += mixPair(center.yw, nx0.yw);\n    result += mixPair(center.yw, nx1.yw);\n    result += mixPair(center.yw, ny0.yw);\n    result += mixPair(center.yw, ny1.yw);\n    return result;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 prev = texture(iChannel0, uv);\n\n    prev.yw = mixNeighbors(uv, prev);\n    \n    bool keyCtrl = texture(iChannel1, vec2(KEYCODE_CTRL, 0.0)).x > 0.0;\n\n    float brush = 0.0;\n    if (iMouse.z >= 0.0)\n    {\n    \tfloat d = distance(iMouse.xy, fragCoord.xy);\n        d /= brushRadius * (keyCtrl ? 1.5 : 3.0);\n        brush = clamp(1.0 - d * d * d * d, 0.0, 1.0);\n    }\n    \n    bool keyShift = texture(iChannel1, vec2(KEYCODE_SHIFT, 0.0)).x > 0.0;\n\tint material = keyShift ? 1 : 0;    \n    vec2 mmask = (material == 0) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    \n#if PAINT_MODE == 1\n    vec2 amt = prev.yw + mmask * brush;\n#elif PAINT_MODE == 2\n    vec2 amt = mix(prev.yw, mmask, brush);\n#elif PAINT_MODE == 3\n    vec2 amt = mix(prev.yw, prev.yw * mmask, brush) + mmask * brush;\n#elif PAINT_MODE == 4\n    float prevTotal = prev.y + prev.w;\n    vec2 newVal = (vec2(prevTotal, prevTotal) + brush) * mmask;\n    vec2 amt = mix(prev.yw, newVal, brush);\n#endif\n    \n    fragColor = vec4(0.0, amt.x, 1.0, amt.y);\n}\n\n","name":"Buf A","description":"","type":"buffer"}]}