{"ver":"0.1","info":{"id":"XfXcDM","date":"1721169279","viewed":31,"name":"[ARTS1308] N-body","username":"ARTS1308","description":"Simulation of n-body system.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["simulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sdPoint (vec2 p, vec2 c) {\n    return length(p - c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float col = 0.;\n    \n    for (int k = 0; k < N; k++) {\n        vec2 center = texelFetch(iChannel0, ivec2(k, 0), 0).xy;\n        col += (1. - smoothstep(0., 0.02, sdPoint(uv, center)));\n    }\n    \n    col = pow(col, 1./2.2);\n    fragColor = vec4(col, col, col, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.);\n    \n    int type = int(fragCoord.y);\n    int index = int(fragCoord.x);\n    \n    if (index <= N) {\n        if (iFrame < 5 && type <= 1) { // Initialize\n                int w = int(iChannelResolution[1].x);\n                vec2 rand = texelFetch(iChannel1, ivec2(index%w, index/w), 0).xy;\n                float r = sqrt(0.7 * rand.x + 0.3) * 0.4;\n                float t = 2. * PI * rand.y;\n                if (type == 0) fragColor.xy =  r * vec2(cos(t), sin(t)); // position\n                if (type == 1) fragColor.xy = v0 * vec2(-sin(t), cos(t)); // velocity\n        }\n        \n        if (type == 2) { // Compute force\n            vec2 force = vec2(0.);\n            vec2 mypos = texelFetch(iChannel0, ivec2(index, 0), 0).xy;\n            vec2 myvel = texelFetch(iChannel0, ivec2(index, 1), 0).xy;\n            for (int j = 0; j < N; j++)\n                if (j != index) {\n                    vec2 pos = texelFetch(iChannel0, ivec2(j, 0), 0).xy;\n                    vec2 diff = mypos - pos;\n                    float d = length(diff);\n                    d = max(2e-1, d);\n                    vec2 f = -G * diff / d / d / d;\n                    force += f;\n                }\n            fragColor.xy = force;// - DAMPING * myvel;\n            \n        }\n        \n        if (iFrame >= 5 && type <= 1) { // Update\n            vec2 force = texelFetch(iChannel0, ivec2(index, 2), 0).xy;\n            vec2 vel = texelFetch(iChannel0, ivec2(index, 1), 0).xy;\n            vec2 pos = texelFetch(iChannel0, ivec2(index, 0), 0).xy;\n\n            vel += force * dt;\n            pos += vel * dt + force * dt * dt / 2.;\n            if (type == 0) fragColor.xy = pos;\n            if (type == 1) fragColor.xy = vel;\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define G 1e6\n#define m 1.\n#define N 100\n#define PI 3.14159\n#define v0 1.2e3\n#define dt 1e-6\n#define ZERO min(float(iFrame), 0.)\n#define DAMPING 1e3","name":"Common","description":"","type":"common"}]}