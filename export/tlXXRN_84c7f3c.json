{"ver":"0.1","info":{"id":"tlXXRN","date":"1562234800","viewed":520,"name":"Hypnotyze","username":"Kapsy","description":"My fu***ng first shader!!!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["kapsy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//////MY FU***NG FIRST SHADER\n#define time iTime*0.1\n\nmat2 rot(float a){\n  return mat2(cos(a),sin(a),-sin(a),cos(a));\n  }\n  \nfloat smin(float a, float b, float h){\n   float k = clamp((a-b)/h*0.5+0.5,0.0,1.0);\n   return mix(a,b,k)-k*(1.0-k)*h;\n  }\n  \nvec3 smin(vec3 a, vec3 b, float h){\n   vec3 k = clamp((a-b)/h*0.5+0.5,0.0,1.0);\n   return mix(a,b,k)-k*(1.0-k)*h;\n  }\n  float  cyl(vec3 p, float b, float c){\n  return max(length(p.xy)-b, abs(p.z)-c);\n  }\n\n\nfloat box(vec3 p){\n  p = abs(p)-vec3(0.6);\n  return max(p.x,max(p.y,p.z));\n  }\n  \n  float SDF(vec3 p){\n  for(int i=0; i<5; ++i){\n  p-=0.1+0.1*float(i);\n  p.xz*=rot(time+float(i));\n  p.zy*=rot(time-float(i));\n  p = smin(p,-p, -0.4);\n  p-=mix(0.9,1.5,sin(time));\n  }\n  float circle =  length(p)-0.8;\n  return min(circle,box(p));\n   \n  }\n  \nvec3 get_norm(vec3 p){\n  vec2 eps =  vec2(0.001,0);\n  return normalize(SDF(p)-vec3(SDF(p-eps.xyy),SDF(p-eps.yxy),SDF(p-eps.yyx)));\n  }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv /= vec2(iResolution.y / iResolution.x, 1);\n  vec2 u3 = uv;\n  uv = fract(abs(uv));\n  vec2 u2 = uv;\n  \n  u2.x+=fract(time);\n  u2.y += mix(0.05,0.0,sin(fract(time*6.0)));\n  \n  ///////////////////////////////////////////////////////\n  vec3 ro = vec3(0,0,-10); vec3 p = ro;\n  vec3 ppp = p;\n  vec3 rd = normalize(vec3(-uv,1.));//mix(uv,-uv,sin(fract(time))),1.)); \n  vec3 col = vec3(0);\n  vec3 tex = vec3(texture(iChannel0,u2));\n  col+=tex-0.2;\n  \n  float shad = 0.0;\n  float dd =0.0;\n  for(int i=0; i<100; ++i){\n    float d = SDF(p);\n    if(d<0.001){ \n     shad = float(i)/100.0;      \n    break;\n    }\n    if(dd>100.0) { dd=100.0; break; }\n    p+=d*rd;\n    dd+=d;\n    }\n    vec3 n = get_norm(p);\n    vec3 l = normalize(-vec3(1,3,2));\n    vec3 h = normalize(l-rd);\n   float fog = 1.0-clamp(dd/100.0,0.0,1.0);\n    col+=(dot(n,l)*0.5+0.5)*fog * (vec3(6,0.3,0.2)* + vec3(5,0.7,9)*pow(max(0.0,dot(n,h)),4.0)+4.0*pow(max(0.0,dot(n,h)),50.0));\n    float back = clamp(SDF(p+rd),0.0,1.0);\n    col+=back*vec3(0.0,mix(1.0,2.0,sin(time)),0.0);\n     \n       float dv;\n        u3.y+=0.050;    \n        dv = 10.0;\n       col.gb-=mod(dv,uv.x/uv.y+tan(time))/4.0;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}