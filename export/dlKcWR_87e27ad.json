{"ver":"0.1","info":{"id":"dlKcWR","date":"1700480201","viewed":102,"name":"quad blur fx","username":"zyc","description":"quad blur fx","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define progress (fract(0.4*iTime))\n#define u_Strength 0.1\n\nfloat customStep(float edge0, float edge1, float value) {\n    return clamp((value - edge0) / (edge1 - edge0), 0.0, 1.0);\n}\n\nfloat getScale(float p) {\n    return customStep(1.0, 0.0, p);\n}\n\nvec4 dirBlur(sampler2D inputTexture, vec2 uv, vec2 dir, float p)\n{\n    float sigma = 7.0;\n    float weight = 1.0;\n    float u_Size = 0.41;\n    float u_Bright = 3.8;\n    \n    float u_SizeScale = getScale(p);\n    \n    vec4 resColor = texture(inputTexture, uv) * weight;\n    float sumWeight = weight;\n    vec4 maxColor = resColor;\n    float curWeight = 1.0;\n    float delay = 0.9;\n    float delayWight = curWeight;\n    for (int i = 1; i <= 16; ++i)\n    {\n        weight = 1.0;\n        delayWight = delay * delayWight;\n        vec2 tmpUV = uv + dir * float(i) * u_Size * u_SizeScale;\n        vec4 a = texture(inputTexture, tmpUV) * weight;\n        tmpUV = uv - dir * float(i) * u_Size * u_SizeScale;\n        vec4 b = texture(inputTexture, tmpUV);\n        resColor += a + b;\n        vec4 c = max(a, b);\n        maxColor = max(c, maxColor);\n        sumWeight += 2.0 * weight;\n    }\n    \n    resColor /= sumWeight;\n    vec4 color = mix(resColor, maxColor, clamp(resColor * u_Bright, 0.0, 1.0));\n    resColor.rgb = color.rgb;\n    return resColor;\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"#define PI 3.1415926\n#define GOLDEN_ANGLE 2.39996323\n\n#define u_Angle 45.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float theta = u_Angle * PI / 180.0;\n    vec2 rect = vec2(min(720.0, 720.0 * iResolution.x / iResolution.y), min(720.0, 720.0 * iResolution.y / iResolution.x));\n    vec2 dir = vec2(cos(theta), sin(theta)) / rect;\n    vec4 color = dirBlur(iChannel0, uv, dir, progress);\n    fragColor = color;\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"#define PI 3.1415926\n#define GOLDEN_ANGLE 2.39996323\n\n#define u_Angle -45.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float theta = u_Angle * PI / 180.0;\n    vec2 rect = vec2(min(720.0, 720.0 * iResolution.x / iResolution.y), min(720.0, 720.0 * iResolution.y / iResolution.x));\n    vec2 dir = vec2(cos(theta), sin(theta)) / rect;\n    vec4 color = dirBlur(iChannel0, uv, dir, progress);\n    fragColor = color;\n}","name":"Buffer D","description":"","type":"buffer"}]}