{"ver":"0.1","info":{"id":"ddl3RS","date":"1666377859","viewed":101,"name":"Mickey_Mouse","username":"Mortalsky","description":"Mickey in the house!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["texture","circle","translation","transformation","character","scale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//  Use of circle and ellipse to create mickey mouse just by translation and scale\n//  Use to priciple of addition and subtraction of shaders for eachother \n//  I know this is not a good way to do by want to try this ones :)\n//  Then added a 90's video as texture for good feel\n//  Enjoy the heavy thinking code :)\n    \n    \n   // Function for circle\n\nvec3 circle(vec2 uv,vec2 pos, float radius)\n{\n    uv.x += pos.x;\n    uv.y -= pos.y;\n    \n    float value = length(uv);\n    vec3 col = vec3(smoothstep(radius, radius - radius/10000.0,value));\n    \n    return col;\n}\n\n   // Fuction for ellipse    \n   // -1.5 < b < 1.5     \n\nvec3 ellipse(vec2 uv,vec2 pos, float major_r, float minor_r)\n{   \n    uv.x *= iResolution.y/(iResolution.x +  iResolution.y * minor_r);\n    float value = length((uv - pos));\n    vec3 col = vec3(smoothstep(major_r, major_r - major_r*0.00001, value));\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalization \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Adjusting Center\n    uv -= 0.5;\n    \n    // Adjusting Shape \n    uv.x *= iResolution.x/iResolution.y;\n    vec3 col = vec3(0.);\n    \n    // Main face\n    col = circle(uv, vec2(0.,0.), 0.3);\n    col += ellipse(uv, vec2(0.,-0.22), 0.11, -0.7);\n    \n    // Ears\n    col += circle(uv, vec2(0.27,0.27), 0.1) + circle(uv, vec2(-0.27,0.27), 0.1);\n  \n    // Mask\n    col -= ellipse(uv, vec2(0.1,0.08), 0.17, -1.) + ellipse(uv, vec2(-0.1,0.08), 0.17, -1.); \n    \n    // Eyes whites\n     col += ellipse(uv, vec2(0.1,0.08), 0.08, -1.2) + ellipse(uv, vec2(-0.1,0.08), 0.08, -1.2); \n     col += ellipse(uv, vec2(0.1,0.08), 0.08, -1.2) + ellipse(uv, vec2(-0.1,0.08), 0.08, -1.2); \n    \n    //Eyes Blacks\n     col -= ellipse(uv, vec2(0.1,0.075), 0.07, -1.2) + ellipse(uv, vec2(-0.1,0.075), 0.07, -1.2); \n     col -= ellipse(uv, vec2(0.1,0.075), 0.07, -1.2) + ellipse(uv, vec2(-0.1,0.075), 0.07, -1.2); \n     \n    //Pupiles\n    col += ellipse(uv, vec2(0.045,0.04), 0.02, -1.2) + ellipse(uv, vec2(-0.045,0.04), 0.02, -1.2); \n    col += ellipse(uv, vec2(0.045,0.04), 0.02, -1.2) + ellipse(uv, vec2(-0.045,0.04), 0.02, -1.2); \n    \n    // Under whites and blacks\n     col += ellipse(uv, vec2(0.,-0.015), 0.04, 1.0);\n     col += ellipse(uv, vec2(0.,-0.015), 0.04, 1.0);\n     col -= ellipse(uv, vec2(0.,-0.02), 0.04, 1.0);\n     col -= ellipse(uv, vec2(0.,-0.02), 0.04, 1.1);\n     col -= ellipse(uv, vec2(0.,-0.02), 0.04, 1.1);\n     col -= ellipse(uv, vec2(0.,-0.02), 0.04, 1.1);\n    \n    // Jaw\n     col -= ellipse(uv, vec2(-0.05,-0.08), 0.1, -0.1);\n     col -= ellipse(uv, vec2(0.05,-0.08), 0.1, -0.1);\n     col -= ellipse(uv, vec2(0.0,-0.1), 0.105, 0.5);\n    \n    // Nose\n    col += ellipse(uv, vec2(0.,-0.04), 0.04, 0.4);\n    col += ellipse(uv, vec2(0.,-0.04), 0.04, 0.4);\n    col += ellipse(uv, vec2(0.,-0.04), 0.04, 0.4);\n    col += ellipse(uv, vec2(0.,-0.04), 0.04, 0.4);\n    col += ellipse(uv, vec2(0.,-0.04), 0.04, 0.4);\n    col += ellipse(uv, vec2(0.,-0.04), 0.04, 0.4);\n    col += ellipse(uv, vec2(0.,-0.04), 0.04, 0.4);\n    col += ellipse(uv, vec2(0.,-0.04), 0.04, 0.4);\n    col += ellipse(uv, vec2(0.,-0.04), 0.04, 0.4);\n    col += ellipse(uv, vec2(0.,-0.04), 0.04, 0.4);\n  \n    // Mouth\n    col -= ellipse(uv, vec2(0.,-0.18), 0.11, -0.7);\n    col -= ellipse(uv, vec2(0.,-0.18), 0.11, -0.7);\n  \n    // Smile\n     col += ellipse(uv, vec2(0.,-0.16), 0.08, -0.9);\n     col += ellipse(uv, vec2(0.,-0.16), 0.08, -0.9);\n     col += ellipse(uv, vec2(0.,-0.16), 0.08, -0.9);\n     col += ellipse(uv, vec2(0.,-0.16), 0.08, -0.9);  \n     col -= ellipse(uv, vec2(0.,-0.1), 0.06, 0.6);\n     col -= ellipse(uv, vec2(0.,-0.1), 0.06, 0.6);\n     \n     // Adding texture\n     vec3 tex = texture(iChannel0, uv + 0.5).rgb;\n     \n     if( col.r >= 1. && col.g >= 1. && col.b >= 1. ) \n     col.r = tex.r,\n     col.g = tex.g,\n     col.b = tex.b;\n     \n     \n    // Output\n    fragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}