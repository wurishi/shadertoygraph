{"ver":"0.1","info":{"id":"Xdjczt","date":"1493360330","viewed":888,"name":"Shit just got real ","username":"db0x90","description":"REAL = (sqrt(-SHIT))^2","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["interference","audio","drug","polarcoordinate","hemp","cannabis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MtB3zw","filepath":"https://soundcloud.com/highfocusrecords/ocean-wisdom-walkin","previewfilepath":"https://soundcloud.com/highfocusrecords/ocean-wisdom-walkin","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Shit just got real\n\nfloat bassAmp;\nfloat bassDrum;\nfloat width;\n\nvec2 foo(vec2 uv, float a, float b) {\n    float f = sin(3. * iTime + uv.y * 9.0122);\n    f *=     sin(uv.y * 11.961) * 1.122;\n    f *=     sin(uv.y * 17.514) * 1.113;\n    f *=     sin(uv.y * 23.734) * 1.76252;\n    f *= b + sin(f + iTime * 122.) * .04123;\n    f *= bassDrum*a;\n    return vec2(uv.x + f, uv.y);\n}\n\nvec3 interference(vec2 fragCoord) {\n    float y;\n        \n    float cX = iResolution.x/2.0;\n    float cY = iResolution.y/2.0;\n    \n    float tr=iTime * 29.1;\n    float tg=iTime * 28.5;\n    float tb=iTime * 27.4;\n    \n    float fr=0.007  + (bassDrum*0.00004);\n    float fg=0.0066 + (bassDrum*0.00002);\n    float fb=0.008  + (bassDrum*0.00005);\n    \n    vec2 uvr=fragCoord.xy;\n    uvr = foo(uvr, 200., 50.);\n    uvr.x = uvr.x - cX + ( 1.2 * cos(tr*0.05)*cX )  + ( 1.1 * sin(tr*0.031)*cX );\n    uvr.y = uvr.y - cY + ( 1.7 * sin(tr*0.023)*cY ) - ( 1.3 * cos(tr*0.037)*cY );\n    y=length(floor(uvr));\n    float rr = 0.85 * abs( sin( fr *(y-tr) ) );\n   \n    vec2 uvg=fragCoord.xy;\n    uvg.x = uvg.x - cX + ( 2.2 * sin(tr*0.036)*cX ) - ( 1.4 * cos(tr*0.027)*cX );\n    uvg.y = uvg.y + cY - ( 3.9 * sin(tr*0.023)*cY ) - ( 1.2 * cos(tr*0.037)*cY );\n    y=length(floor(uvg));\n    float gg = 0.85 * abs( sin( (y-tg) * fg) );\n    \n    vec2 uvb=fragCoord.xy;\n    uvb = foo(uvb,225.,45.);\n    uvb.x = uvb.x - cX - ( 1.10*cos(tb+0.6)*cX );\n    uvb.y = uvb.y + cY - ( 0.92*sin(tb-0.6)*cY );\n    y=length(floor(uvg));\n    float bb = 0.85 * abs( sin( (y-tb) * fb) );\n    \n    float scanline = 1. + sin(fragCoord.y*.75) * bassDrum * 3.;\n    \n    return vec3(rr,gg,bb) * scanline;\n}\n\nfloat leafFX( float r, float t ) {\n    float bass = bassDrum*2.8 + bassAmp;\n    return \t(1.0+0.90 * cos(  8.* t) ) * \n        \t(1.0+0.10 * cos( 24.* t) ) *\n        \t( (0.7 + (bass*0.4) )+(bassAmp*0.16) * cos(110.* t) ) *\n            (0.9+sin(t))\n        \t - r;\n}\n\nfloat polar(vec2 fragCoord) {\n    float r = length( fragCoord );\n    float t = atan( fragCoord.y, fragCoord.x );\n    return abs( leafFX(r,t) );\n}\n\nfloat hempleaf( vec2 fragCoord) {\n    width = 1.0 / min( iResolution.x ,iResolution.x);\n    \n    vec2 uv;\n\tuv.x = fragCoord.x*width*7.;\n    uv.y = fragCoord.y*width*9.;\n    uv = foo(uv,3.,.3);\n    uv.y -= 0.65;\n    uv.x -= 3.5;\n\treturn 1.0 / max( polar(uv) / 0.22, 1.);\n}\n\nvoid sfft() {\n    float bp = clamp( width,0.1,0.8);\n\tbassAmp  = texture(iChannel0, vec2(bp, 0.02)).x;\n    \n    bp = clamp( width,0.25,0.42);\n    float xy = texture(iChannel0, vec2(bp, 0.1)).x;\n    bassDrum =  smoothstep( 0.55, 1., xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy/iResolution.xy*2.-1.;\n    \n    sfft();\n    \n    vec3 resultColor;\n    resultColor += interference( fragCoord );\n    resultColor *= vec3( ( 1.0 - hempleaf(fragCoord)));\n\tresultColor  = mix(vec3(0.),resultColor,pow(max(0.,1.5-length(uv*uv*uv*vec2(1.6,1.6))),.9));\n\n        \n    fragColor = vec4( resultColor, 0.);\n}","name":"Image","description":"","type":"image"}]}