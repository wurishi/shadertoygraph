{"ver":"0.1","info":{"id":"MtXSW4","date":"1436743419","viewed":468,"name":"Lukas age 16","username":"djmkultra","description":"Lukas grasped image processing immediately.  Rad first program.  Filtering out noise was his first priority.  ","likes":4,"published":1,"flags":2,"usePreview":0,"tags":["firstshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"const float dxsize = 1.;\nconst int blurSize = 4;\n// Size of a pixel.\n#define duv (vec2(1.) / iResolution.xy * dxsize)\n\n// Get blurred pixel color, less noise\nvec4 GetPixels(vec2 uv) {\n   vec4 color = vec4(0.);\n\t\n    for (int i = 0; i < blurSize; ++i) {\n        for (int j = 0; j < blurSize; ++j) {\n          color += texture(iChannel0, uv + duv * vec2(i, j));\n        }\n    }\n    return color / float(blurSize * blurSize);\n}\n\nvec4 GetDx(vec4 color, vec2 uv) {\n    vec4 colorx = GetPixels(uv + vec2(duv.x, 0.));\n    return color - colorx;\n}\n\nvec4 GetDy(vec4 color, vec2 uv) {\n    vec4 colorx = GetPixels(uv + vec2(0., duv.y));\n    return color - colorx;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;    \n    \n    vec4 baseColor = GetPixels(uv);\n\n    // Try to capture skin color\n    vec4 skinColor = vec4(.38, .28, .28, 1.);\n    float skind = length(skinColor - baseColor);\n    skind = smoothstep(.16, 0.09, skind);\n\n    // Derivatives and edges.\n    vec4 dx = GetDx(baseColor, uv);\n    vec4 dy = GetDy(baseColor, uv);\n    vec4 mag = abs(dx) + abs(dy);\n    vec4 cut = smoothstep(.03, .06, mag);  // edge cut\n    \n    // Replace face color with wacky blue waves.\n    vec4 waves = vec4(.3) + vec4(.3) * sin(uv.xxyy * vec4(201., 97., 55., 333.) + iTime * vec4(-2.1,4.,-1.,9.));\n    vec4 faceColor = vec4(0.3, 0.1, 1., 1.) * (waves.x + waves.y + waves.z + waves.w);\n    \n    // face color, original color, and edges.\n    fragColor = faceColor * skind + (1. - skind) * baseColor + cut;\n}","name":"Image","description":"","type":"image"}]}