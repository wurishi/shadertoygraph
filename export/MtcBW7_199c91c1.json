{"ver":"0.1","info":{"id":"MtcBW7","date":"1539809448","viewed":175,"name":"First shader attempt","username":"cras","description":"Not particularly interesting, but I'm still getting my head wrapped around the basic concepts. ","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(in vec2 _st, in float _radius){\n    vec2 l = _st-vec2(0.5);\n    return 1.-smoothstep(_radius-(_radius*0.2),\n                         _radius+(_radius*0.2),\n                         dot(l,l)*4.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //aspect ratio normalized coords\n    vec2 uv = (fragCoord.xy - iResolution.xy) / iResolution.y;\n    \n    //center point\n    vec2 c = normalize(-iResolution.xy / iResolution.y);\n    \n    //distance to center\n    float d = distance(uv, c);\n    \n    //vary size by time + sin wave\n    float size = sin(d * 5.0 + float(iFrame) * 0.05) + 1.1;\n    \n    //scale and gridifiy\n    uv *= 18.;\n    uv = fract(uv);\n\n    vec3 col = vec3(circle(uv, size));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}