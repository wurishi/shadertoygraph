{"ver":"0.1","info":{"id":"lXfSzX","date":"1709762615","viewed":46,"name":"Formed noise pattern","username":"Kinkajou81","description":"A simple noise shader that follows the input image.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 s = 1.0/iResolution.xy;\n    float p = (max(max(texture(iChannel0, uv).r, texture(iChannel0, uv).g), texture(iChannel0, uv).b) + min(min(texture(iChannel0, uv).r, texture(iChannel0, uv).g), texture(iChannel0, uv).b));\n    float h1 = (max(max(texture(iChannel0, uv + s * vec2(1.0,0.0)).r, texture(iChannel0, uv + s * vec2(1.0,0.0)).g), texture(iChannel0, uv + s * vec2(1.0,0.0)).b) + min(min(texture(iChannel0, uv + s * vec2(1.0,0.0)).r, texture(iChannel0, uv + s * vec2(1.0,0.0)).g), texture(iChannel0, uv + s * vec2(1.0,0.0)).b));\n    float v1 = (max(max(texture(iChannel0, uv + s * vec2(0.0,1.0)).r, texture(iChannel0, uv + s * vec2(0.0,1.0)).g), texture(iChannel0, uv + s * vec2(0.0,1.0)).b) + min(min(texture(iChannel0, uv + s * vec2(0.0,1.0)).r, texture(iChannel0, uv + s * vec2(0.0,1.0)).g), texture(iChannel0, uv + s * vec2(0.0,1.0)).b));\n    vec2 normal = (pow(p,2.0) - vec2(pow(h1,2.0), pow(v1,2.0)));\n\n    // Output to screen\n    fragColor = sqrt(vec4(normal.yyy/normal.xxx,1.0)+vec4(normal.xxx/normal.yyy,1.0))*p*h1*v1;\n}","name":"Image","description":"","type":"image"}]}