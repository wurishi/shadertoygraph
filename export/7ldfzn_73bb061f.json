{"ver":"0.1","info":{"id":"7ldfzn","date":"1662571641","viewed":62,"name":"Fork FragmentSh SFM15 266","username":"SFM15","description":"TestFragmentShader","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["gt"],"hasliked":0,"parentid":"sl3fzn","parentname":"FragmentShader"},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float vIsShadow;\nfloat vWeight;\nfloat vSmoothness;\nfloat vOutlineThickness;\nvec4 vOutlineColor;\nvec2 vUV;\nvec4 vColor;\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, vUV);\n    float medianfloat = median(fragColor.r, fragColor.g, fragColor.b);\n    float dist = clamp(medianfloat, 0.0, 1.0);\n    float alpha = smoothstep(vWeight - vSmoothness, vWeight + vSmoothness, dist);\n    vec4 col = vColor;\n    \n    if(vIsShadow < 0.5 && vOutlineThickness < 0.0 && alpha < 1.0){\n        col = mix(vOutlineColor, col, max(alpha, 0.0));\n        float outlineWeight = vWeight + vOutlineThickness;\n        alpha = smoothstep(outlineWeight - vSmoothness, outlineWeight + vSmoothness, dist);\n        }\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"uniform mat4 uCamera;\nuniform mat4 uWorld;\nuniform float uDistanceFactor;\n\nvec3 aPosition;\nvec4 aColor;\nfloat aIsShadow;\nfloat aWeight;\nfloat aSmoothness;\nfloat aOutlineThickness;\nvec4 aOutlineColor;\nvec2 aUV;\n\nvec4 vColor;\nfloat vIsShadow;\nfloat vWeight;\nfloat vSmoothness;\nfloat vOutlineThickness;\nvec4 vOutlineColor;\nvec4 vPos;\nvec2 vUV;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vColor = aColor;\n   vIsShadow = aIsShadow;\n   vWeight = 0.5 - aWeight;\n   vSmoothness = aSmoothness;\n   vOutlineThickness = -aOutlineThickness / uDistanceFactor;\n   vOutlineColor = aOutlineColor;\n   vUV = aUV;\n   vPos = uCamera * uWorld * vec4(aPosition, 1.0);\n   fragColor = vPos;\n}","name":"Buffer A","description":"","type":"buffer"}]}