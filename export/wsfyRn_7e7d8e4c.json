{"ver":"0.1","info":{"id":"wsfyRn","date":"1584044815","viewed":60,"name":"2dFaceSome","username":"antoinefortin","description":"allo","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2dexploreation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5 * iResolution.xy) /iResolution.y;\n    uv *= 5.;\n    uv.x = abs(uv.x);\n    uv.y = abs(uv.y * 1.001);\n\t//uv.x = abs(uv.x);\n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    float dist = length(uv);\n    \n    dist += 0.5 + abs(sin(uv.y + iTime)) * 1.0;\n    dist -= 1. + abs(cos(uv.x + iTime)) * 1.0;\n    \n    vec2 gv = fract(uv * 12.) - 0.5;\n \t\n    \n   \n\t//col.xy += gv.xy;\n    \n    //col += length(gv * 1.0);\n    dist *= sin(uv.y * uv.y) / 2.0;\n    \n    \n    \n    vec2 pos = uv;\n\n    \n    //pos.y = (pos.x * pos.x / (pos.y * pos.y) * dist);\n    \n    float dist2 = length(pos);\n\n   \t\n    float r = dist + pos.x;\n    float g = 0.5; \n    float b = 0.5;\n    col += vec3(r, g, b) * .75;\n    \n    // Process the background \n    vec3 colorBackground = vec3(0.0, 0.5, 0.75);\n    /*\n    if(gv.x < .15)\n    {\n    \t// col .rg *=  gv;\n\n        col += colorBackground ; \n        \n     }\n\t*/\n    //col = vec3(dist, dist, dist);\n   // col += m;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}