{"ver":"0.1","info":{"id":"ddf3Ds","date":"1667001233","viewed":350,"name":"Cosmic Clock 3","username":"ChunderFPV","description":"An update to Cosmic Clock 2.","likes":16,"published":1,"flags":32,"usePreview":0,"tags":["clock","spiral","screensaver","buffer","fractions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// clock modified from https://www.shadertoy.com/view/stlSzM\n#define bcd(i) (i/10*6+i)\n#define digit(uv,i) texture(iChannel1, (uv)/16.0+vec2(float(i)/16.0, 0.75)).x\n#define draw_digit(c,uv,i) if(abs(uv).x < 0.5 && abs(uv).y < 0.5) c += (1.0-c)*digit(uv+0.5, i)\n#define draw_bcd(c,uv,i,b) if (b) draw_digit(c, uv,(i&0xf0)>>4); draw_digit(c, uv-vec2(.5,0),(i&0xf))\n\nfloat draw_time(vec2 uv, vec2 xy, float s, float t)\n{\n    uv -= xy; // position\n    uv /= s; // size\n    float c = 0.0;\n    int hour = int(mod(t/3600.0, 12.0));\n    if (hour == 0) hour = 12;\n    int minute = int(mod(t/60.0, 60.0));\n    uv.x += 0.85;\n    draw_bcd(c, uv, bcd(hour), (hour > 9)); // 1st & 3rd digits\n    uv.x -= 0.85;\n    draw_digit(c, uv, 10); // colon\n    uv.x -= 0.35;\n    draw_bcd(c, uv, bcd(minute), true); // 2nd & 4th digits\n    return c;\n}\n\nvoid mainImage(out vec4 RGBA, in vec2 XY)\n{\n    vec2 sc = SC*SCALE*Z; // screen coords\n    float r = length(sc); // radius\n    float a = atan(sc.x, sc.y); // arc\n    float ring = min(r, 1.0/r);\n\tvec3 c = vec3(0.25, 0.2, 0.8)*ring*ring*0.4; // background\n    c += 0.5*cos(a*12.0)*pow(ring, 80.0); // 12 pt ring\n    c += 0.5*cos(a*60.0)*pow(ring, 80.0); // 60 pt ring\n    c += 0.25*cos(a*360.0)*pow(ring, 40.0); // 360 pt ring\n    c = max(c, 0.0); // clear negative color\n    \n    // clone buffer A\n\tfloat lim = 10.0;\n\tfor(float i = 0.0; i < 1.0; i += 1.0/lim)\n\t{\n\t\tvec3 h = vec3(i, 1.0-abs(i+i-1.0), 1.0-i); // Xor's chromatic\n\t\tc += texture(iChannel0, mix(XY/R, vec2(0.5), -sign(E)*0.1*i), AA).rgb*h*0.1;\n\t}\n    \n    // spiral end-points\n    float w = PX*1.0;\n    float b = 0.5; // brightness\n    c += ds(sc, E, CL.x, w, RO)*b; // hour\n    c += ds(sc, E, CL.y, w, RO)*b; // min\n    c += ds(sc, E, CL.z, w, RO)*b; // sec\n    \n    // moving points around circle\n    c += PT(sc-CS(CL.x*-TAU+RO), .02); // hour\n    c += PT(sc-CS(CL.y*-TAU+RO), .02); // min\n    c += PT(sc-CS(CL.z*-TAU+RO), .02); // sec\n    c += PT(sc-CS(CL.x*-TAU+RO), .09)*vec3(1.0, 0.4, 0.0)*0.8; // hour glow\n    c += PT(sc-CS(CL.y*-TAU+RO), .08)*vec3(0.0, 1.0, 0.4)*0.6; // min glow\n    c += PT(sc-CS(CL.z*-TAU+RO), .07)*vec3(0.4, 0.0, 1.0); // sec glow\n    \n    vec3 d = vec3(draw_time(SC, vec2(0.0, 0.45), 0.1, T))*0.5; // digital clock\n    d *= texture(iChannel2, XY/R.y+vec2(CL.z, 0.0), 3.0).rgb*1.25; // digit texture\n    c += d;\n    \n    c *= sqrt(c)*2.0; // contrast\n    \n    RGBA = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define T iDate.w\n#define M iMouse\n#define SCALE 2.7\n#define PI radians(180.0)\n#define TAU (PI*2.0)\n#define CS(a) vec2(cos(a), sin(a))\n#define SC ((XY-0.5*R)/R.y)\n#define MC ((M.xy-0.5*R)/R.y*2.0)\n#define Z ((M.z > 0.0) ? pow(1.0-abs(MC.y), 3.0*sign(MC.y)): 1.0)\n#define E ((M.z > 0.0) ? -MC.y: -0.25)\n#define PX length(fwidth(sc/1.414))\n#define CL mod(T/vec3(43200.0, 3600.0, 60.0), 1.0)\n#define RO (PI/2.0)\n#define PT(xy,r) max(0.0, 1.0-length(vec2(xy)/(r)))\n#define AA 0.0\n\n// denominator spiral (1/n) for numerator\n// screen coords, exponent, value, width, rotation\nfloat ds(vec2 sc, float e, float n, float w, float ro)\n{\n    float t = TAU*n;\n    float r = round(exp(log(length(sc))/e));\n    vec2 xy = sc-CS(ro-t*r)*pow(r, e);\n    return max(0.0, 1.0-length(xy/w));\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 RGBA, in vec2 XY)\n{\n    vec2 sc = SC*SCALE*Z; // screen coords\n    vec3 c = vec3(texture(iChannel0, mix(XY/R, vec2(0.5), -sign(E)*0.002), AA).rgb)*0.9; // subtle after-image\n    float w = max(PX*2.0, 0.01*Z); // point radius\n    c += ds(sc, E, CL.x, w, RO); // hour\n    c += ds(sc, E, CL.y, w, RO); // min\n    c += ds(sc, E, CL.z, w, RO); // sec\n    RGBA = vec4(c, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}