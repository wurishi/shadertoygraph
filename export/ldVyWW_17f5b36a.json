{"ver":"0.1","info":{"id":"ldVyWW","date":"1523223340","viewed":292,"name":"Basic : Wave Equation","username":"Gijs","description":"Verlet integration of the wave equation using a nine-point stencil to calculate the laplacian. Use your mouse.","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["2d","wave","numerical","equation","integration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tfragColor = texture(iChannel0,fragCoord.xy / iResolution.xy)*.5+.5;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//in which BufA is t-dt, BufB is t and BufA becomes t+dt\n\nvec4 getA(ivec2 p){\n    vec4 middle    = getX(iChannel1,p);   \t\n    vec4 up        = getX(iChannel1,p+ivec2( 0, 1));\n    vec4 down      = getX(iChannel1,p+ivec2( 0,-1));\n    vec4 right     = getX(iChannel1,p+ivec2( 1, 0));\n    vec4 left      = getX(iChannel1,p+ivec2(-1, 0));\n    vec4 upright   = getX(iChannel1,p+ivec2( 1, 1));\n    vec4 upleft    = getX(iChannel1,p+ivec2(-1, 1));\n    vec4 downright = getX(iChannel1,p+ivec2( 1,-1));\n    vec4 downleft  = getX(iChannel1,p+ivec2(-1,-1));\n        \n   \treturn (-8.*middle + up + left + right + down + upright + upleft + downright + downleft)/(3.*dx*dx);  \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n   \tivec2 p = ivec2(fragCoord);\n    fragColor = 2.*getX(iChannel1,p)-getX(iChannel0,p)+getA(p)*dt*dt;\n    if(iMouse.z>0. && distance(fragCoord,iMouse.xy)<10.) fragColor = vec4(1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//in which BufB is t-dt, BufA is t and BufA becomes t+dt\n\nvec4 getA(ivec2 p){\n    vec4 middle    = getX(iChannel1,p);   \t\n    vec4 up        = getX(iChannel1,p+ivec2( 0, 1));\n    vec4 down      = getX(iChannel1,p+ivec2( 0,-1));\n    vec4 right     = getX(iChannel1,p+ivec2( 1, 0));\n    vec4 left      = getX(iChannel1,p+ivec2(-1, 0));\n    vec4 upright   = getX(iChannel1,p+ivec2( 1, 1));\n    vec4 upleft    = getX(iChannel1,p+ivec2(-1, 1));\n    vec4 downright = getX(iChannel1,p+ivec2( 1,-1));\n    vec4 downleft  = getX(iChannel1,p+ivec2(-1,-1));\n        \n   \treturn (-8.*middle + up + left + right + down + upright + upleft + downright + downleft)/(3.*dx*dx);  \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n   \tivec2 p = ivec2(fragCoord);\n    fragColor = 2.*getX(iChannel1,p)-getX(iChannel0,p)+getA(p)*dt*dt;\n    if(iMouse.z>0. && distance(fragCoord,iMouse.xy)<10.) fragColor = vec4(1.);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float dx = 0.2;\nconst float dt = 0.08;\n\nvec4 getX(sampler2D g, ivec2 p){\n    return texelFetch(g,p,0);\n}\n","name":"Common","description":"","type":"common"}]}