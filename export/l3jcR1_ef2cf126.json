{"ver":"0.1","info":{"id":"l3jcR1","date":"1726994961","viewed":39,"name":"generalized Phong shading ","username":"HyperQuantum","description":"Barycentric Coordinates for Arbitrary Polygons in the Plane --  Kai Hormann\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["phong","barycentric","polygon","interpolation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 mainfunction(vec2 uv){\n\n    vec3 scattered[7] = vec3[7](\n        vec3(0.75,    0.5,     0),\n        vec3(0.5,     0.75,    0),\n        vec3(0.25,    0.5,     0),\n        vec3(0.25,    0.25,    0),\n        vec3(0.6,     0.15,    0),\n        vec3(0.75,    0.5,     0),\n        vec3(0.5,     0.75,    0)\n    );\n    \n\n    vec3 ourpoint = vec3(uv.x,uv.y,0);\n    vec3 si[7];\n    float ri[7];\n    for(int i=0;i<7;i++){\n        si[i] = scattered[i] - ourpoint;\n        ri[i] = length(si[i]);\n    }\n\n    float area[6];\n    float di[6];\n\n    for(int i=0;i<6;i++){\n        area[i] = length(cross(si[i],si[i+1]))/2.0f;\n        di[i] = dot(si[i],si[i+1]);\n        if(ri[i]<=0.0015f){\n            return scattered[i];\n        }\n        if(area[i]<=0.0003f && di[i]<=0.00001f){\n            return (ri[i+1]*scattered[i]+ri[i]*scattered[i+1]) / (ri[i+1] + ri[i]);\n        }\n    }\n                \n    vec3 F;\n    float W;\n    \n    for(int i=1;i<=5;i++){\n        float w;\n        if(area[i-1]!=0.0f){\n            w = w + (ri[i-1]-di[i-1]/ri[i])/area[i-1];\n        }\n        if(area[i]!=0.0f){\n            w = w + (ri[i+1]-di[i]/ri[i])/area[i];\n        }\n        F = F + w * scattered[i];\n        W = W + w;\n    }\n    return F/W;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec3 receive = mainfunction(fragCoord/iResolution.xy);\n\n    // Output to screen\n    fragColor = vec4(receive,1.0f);\n}","name":"Image","description":"","type":"image"}]}