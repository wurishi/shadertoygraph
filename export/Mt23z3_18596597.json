{"ver":"0.1","info":{"id":"Mt23z3","date":"1431101020","viewed":645,"name":"Rainbow Metroid Jellyfish","username":"ChristinaCoffin","description":"originally started messing with lightglows+lines, then decided to do subtractive lights and shapes and this was born.\nThe subconscious creative process has a mind of its own :)\nBest viewed in fullscreen to get all the filament details.","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","translucent","silhouette"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"//\n// Rainbow Metroid Jellyfish\n//\n// @christinacoffin\n// 2015-05-08 - rough sketch , maybe add more depth and bioluminesence inside it later!\n//\n//\n// used the blob glowcode here as a starting base: https://www.shadertoy.com/view/MtS3Wh\n//\nfloat glowstar(float x,float y,float sparkDur,float fy,float sparkDist,float xShakeWidth,float t,float offset)\n{\n    x = abs(x)+(t*0.25);\n    y += abs(x*y*t*0.1);\n\n    sparkDist *= 5.0;\n\n    float xx=x+sin(t*sparkDur*3.0)*xShakeWidth;\n    float yy=y+cos(t*sparkDur)*0.4*sparkDist;\n\n    yy = abs(yy);\n    xx += (xx*yy)-abs(yy);\n\n    float speed = 1.0;\n    float starFalloff;\n    float starLight = 0.0;\n    \n   \tstarFalloff = ((xx*xx)*(y*xx*cos(xx*x*y)+y+x*2.0))+(yy*yy);// \n    \n    float star_0 = starFalloff;\n    \n    starFalloff -= sqrt(xx*xx*xx*xx+yy*yy*yy*yy); //octstar\n   \n    float star_1 = starFalloff;\n    \n    starFalloff -= sqrt(xx*xx*xx*xx+yy*yy*yy*yy/t)*abs(y*y*y*y);\n    \n    float star_2 = starFalloff;\n    \n\tstarLight = sqrt(xx*xx+yy*yy);\n\n    starFalloff -= sqrt(xx*xx*xx*xx+yy*yy*yy*yy)*t*1.0;\n\n    float overTime = 0.9/(starFalloff*speed);\n\n    float final = abs(overTime*sin(t*sparkDur));\n    \n    final = pow(final,0.235);// smaller pow under 1.0, soft and dim stars\n    return final;//adding abs removes the 'darklights'\n}\n\n\n\n\n\nfloat makePoint(float x,float y,float sparkDur,float fy,float sparkDist,float xShakeWidth,float t,float offset)\n{\n    x = abs(x)+(t*0.25);\n    y += abs(x*y*t*0.1);\n    \n   sparkDist *= 5.0;//10.1;\n\n   float xx=x+sin(t*sparkDur*3.0)*xShakeWidth;\n   float yy=y+cos(t*sparkDur)*0.4*sparkDist;\n\n    yy = abs(yy);\n     xx += (xx*yy)-abs(yy);\n    \n    float speed = 1.0;\n    float starFalloff;\n    float starLight = 0.0;\n    \n   \tstarFalloff = ((xx*xx)*(y*xx*cos(xx*x*y)+y+x*2.0))+(yy*yy);// \n\n    float star_0 = starFalloff;\n    \n    starFalloff -= sqrt(xx*xx*xx*xx+yy*yy*yy*yy); //octstar\n   \n    float star_1 = starFalloff;\n    \n    starFalloff -= sqrt(xx*xx*xx*xx+yy*yy*yy*yy/t)*abs(y*y*y*y);\n    \n    float star_2 = starFalloff;\n    \n\tstarLight = sqrt(xx*xx+yy*yy);\n\n    starFalloff -= sqrt(xx*xx*xx*xx+yy*yy*yy*yy)*t*1.0;\n  \n\t//starFalloff /= 0.1*abs(cos(tan(xx*x*x*t*y*y*xx))/t*10.1);//add more lines inside, but additive\n \n     starFalloff *= starFalloff/0.52;//darken mandible tentacles\n\n    \n    float overTime = 0.61799/(starFalloff*speed);\n\n    float final = abs(overTime*sin(t*sparkDur));\n    \n    final = pow(final,0.235);\n\tstarLight -= pow(starLight, 0.412171);\n    final = starLight - abs(final);\n    \n    final -= fract(star_2*0.01/star_0);\n\n    return final;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    float periodTime = 1.9;//limit the animation cycle to the period that looks the most interesting and loop it.\n    float time=(sin(iTime*0.1)*sin(iTime*0.1))*periodTime;\n    time = abs(time)+0.9;\n    \n   vec2 p=(fragCoord.xy/iResolution.x)*2.0-vec2(1.0,iResolution.y/iResolution.x);\n\n   p=p*2.0;\n   \n   p = p * 1.3;//scale down another bit to zoom in\n   float x=0.0151+ p.x+sin(time*0.70);\n   float y=(p.y)+0.5+sin(time)-1.0;\n\n \t//skew and offset a bit in screenspace to frame the part i like\n   y -= abs(x+y)*0.1;\n   y -= 0.2;\n\n    \n   float a=\n       makePoint(x,y,3.0,2.9,0.8,1.15,time,0.1);\n   a=a+makePoint(x,y,1.9,2.0,0.8,0.2,time,0.4);\n   a=a+makePoint(x,y,0.8,0.7,0.4,0.17,time,0.7);\n   a=a+makePoint(x,y,2.3,0.1,0.6,0.3,time,2.5);\n   a=a+makePoint(x,y,0.8,1.7,0.5,0.24,time,1.6);\n   a=a+makePoint(x,y,0.3,1.0,0.4,0.33,time,0.8);\n   a=a+makePoint(x,y,1.4,1.7,0.4,0.08,time,1.3);\n   a=a+makePoint(x,y,1.3,2.1,0.6,0.14,time,2.3);\n   a=a+makePoint(x,y,1.8,1.7,0.5,0.14,time,2.8);   \n   \n    //more layers\n   float b=\n       makePoint(x,y,1.2,1.9,0.8,1.3,time,0.6);\n   b=b+makePoint(x,y,0.7,2.7,0.4,0.41,time,0.16);\n    \n   b=b+makePoint(x,y,1.4,0.6,0.4,0.52,time,0.26);\n   b=b+makePoint(x,y,2.6,0.4,0.6,0.33,time,0.36);\n   b=b+makePoint(x,y,0.7,1.4,0.5,0.44,time,0.46);\n   b=b+makePoint(x,y,0.7,1.7,0.4,0.45,time,0.56);\n   b=b+makePoint(x,y,0.8,0.5,0.4,0.56,time,0.66);\n   b=b+makePoint(x,y,1.4,0.9,0.6,0.37,time,0.76);\n   b=b+makePoint(x,y,0.7,1.3,0.5,0.48,time,0.86);\n  \n   vec3 d=vec3(a,a+a-y*32.0,a-y*50.0)/32.0;\n    \n   d += vec3(b,b+b-y*32.0,b-y*50.0)/32.0; \n    //add in electric glow\n   d.x += max( d.y, glowstar(x,y,3.0,2.9,0.8,1.15,time*time,0.1)*0.7 );\n    \n\tfragColor = vec4(d.x,d.y,d.z,1.0);\n    //flip colors\n    fragColor.xyz = fragColor.zyx;\n}","name":"","description":"","type":"image"}]}