{"ver":"0.1","info":{"id":"Mt2XWc","date":"1447067449","viewed":149,"name":"Die in vomit","username":"Vernou","description":"Prepare your eyes for utter destruction","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mathlessons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float distanceTo(float x, float y, float centerX, float centerY) {\n    float deltaX = x-centerX;\n    float deltaY = y-centerY;\n    return sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\n\nvoid mainImage( out vec4 pixColor, in vec2 pixCoord )\n{\n    float windSpeed = 15.0;//Vitesse\n    float tParam = -iTime * windSpeed; \n    float dEffect = 60.0;\n    \n    //Camera\n\tfloat cameraX = iResolution.x / 2.0;\n    float cameraY = iResolution.y / 2.0;\n    float x = pixCoord.x - cameraX;\n    float y = pixCoord.y - cameraY;\n    x /= 1.0;\t//Zoom X\n    y /= 1.0;\t//Zoom Y\n    vec2 uv = pixCoord.xy / iResolution.xy;\t//Get coordinates on a 0 to 1 scale\n    \n\n    float distance = distanceTo(x, y, 0.0, 0.0);\n    float tailleCercles = distance/30.0;\n    pixColor = vec4 (cos(tailleCercles+tParam), cos(tailleCercles*0.5+tParam*1.2), cos(tailleCercles*1.5+tParam), 1.0);\n\n}","name":"","description":"","type":"image"}]}