{"ver":"0.1","info":{"id":"4sGGRz","date":"1452873814","viewed":368,"name":"Pixelation test 2","username":"marcosbitetti","description":"Test a pixelate method to pixel art","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["saturation","pixelate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    \n    vec4 cor = texture(iChannel0,uv);\n    \n    \n    float PX = 6.0/iResolution.x;\n    vec2 pUv = vec2( PX*floor(uv.x/PX),PX*floor(uv.y/PX) );\n    vec4 fCor = texture(iChannel0,pUv);\n    \n    // algorith by http://alaingalvan.tumblr.com/post/79829067408/glsl-pixel-art-shaders\n    const float bitDepth = 6.0;\n    \n    vec4 oCor = vec4(\n        floor(fCor.r * bitDepth),\n        floor(fCor.g * bitDepth),\n        floor(fCor.b * bitDepth),\n        1) / bitDepth;\n    oCor.a = cor.a;\n    fragColor = oCor;\n    \n    \n    // test\n    if (uv.x>0.5)\n    {\n        fragColor = cor;\n    }\n}","name":"","description":"","type":"image"}]}