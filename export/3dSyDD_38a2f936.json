{"ver":"0.1","info":{"id":"3dSyDD","date":"1586619960","viewed":128,"name":"Individual Project","username":"JonathanAlderson","description":"Just to show how simple functions can be combined to achieve nice shader results","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["education"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Coordinate Scaling\n\tvec2 uv = (fragCoord - .5*iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    // polar coordinates\n    float theta = atan(uv.y / uv.x);\n    float r = length(uv) - .1*iTime;\n    \n    // repeats\n    float d = 0.1; \n    \n\t// get ID\n    float ringID = floor(r / d);\n    // Make every other ID negative\n    if(mod(ringID, 2.0) == 1.0){ ringID *= -1.; }\n    \n    // Colouring with polar coordinates\n    // and spinning from ring number\n    float l = mod(r, d) * sin(theta*20. + iTime*ringID);\n    \n    // Ring colouring\n   \tvec3 colour = vec3(1., cos(ringID), sin(ringID));   // red\n    float strength = l / d;                           // Will give 1 when l = d and 0 when l = 0\n    \n    // smooth step shadows\n    strength *= smoothstep(0.1, 0.3, length(uv)) * smoothstep(0.9, 0.5, length(uv));\n    \n    // final colour\n    fragColor.xyz = colour * strength;\n}\n\n\n","name":"Image","description":"","type":"image"}]}