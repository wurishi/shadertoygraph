{"ver":"0.1","info":{"id":"XfSGRw","date":"1703929456","viewed":30,"name":"my heart sdf","username":"user333","description":"a simple heart using 2 circles and a logistic function","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","sdf","heart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float heart(vec2 pos,float r, float dc, float dh, float dl) //the heart is made of 2 circles and a logistic function. r is the radius of the circles , dc is half the distance between them (must be <=r) ,dh  is the y of the circles and dl is the y of the bottom of the heart (must be smaller than dh)\n{\nfloat ax = abs(pos.x);\nif(pos.y>dh){return length(vec2(ax,pos.y) - vec2(dc,dh))-r;} //this creates 2 circles for the upper part\nelse\n{\nfloat q = (pos.y-dl)/(dh-dl); //this is our mapping of the space of dl->dh in the space of 0->1\nreturn ax-((dc+r)/(0.9932+exp(10.*(.5-q))));  //this is our sigmoid\n}\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 offset = vec2(-.5 * iResolution.x / iResolution.y, -.6);\n\n    float heartShape = heart(uv + offset, .2, .19, .1, -.5);\n\n    // Define the range for the smoothstep function\n    float edge0 = -0.001; // slightly less than zero\n    float edge1 = 0.001;  // slightly more than zero\n\n    float smoothValue = smoothstep(edge0, edge1, -heartShape);\n\n    vec3 col = vec3(1, 0, 0) * smoothValue;\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}