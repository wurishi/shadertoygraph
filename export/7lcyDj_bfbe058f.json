{"ver":"0.1","info":{"id":"7lcyDj","date":"1660552375","viewed":67,"name":"autogen 81","username":"asynth","description":"Generated by a program written in Rust.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.0942, 0.1714), vec3(uv.x).xy);\n\tvec3 b1 = noise(uv, vec2(0.8625207, 3.5884175), 0.419950);\n\tvec3 b2 = vec3(0.7854, 0.6646, 0.4441);\n\treturn mod(b1, b2);\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.7478, -0.6508), vec3(uv.y).xy);\n\treturn vec3(uv.y);\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = (mat2(-0.9536,0.7801,-1.3511,1.3364)*(uv-vec2(0.7000,-0.0408)));\n\tvec3 a1 = mix2(uv, vec3(0.9431, 0.3986, 0.6228), vec3(0.2025, 0.0401, 0.6798), vec3(0.2506, 0.9320, 0.7320), vec3(0.0535, 0.6617, 0.2995));\n\tvec3 a2 = tri((uni(mod(vec3(uv.y), vec3(uv.x))) - (sigmoid(a1) + vec3(uv.y)))*5.1749 + 0.9641 + iTime*0.2288);\n\tvec3 a3 = well(abs((-a2))*4.2237 + 0.4282 + iTime*0.1141);\n\tvec3 a4 = well(vec3(uv.y)*5.3793 + 0.8401 + iTime*0.2524);\n\tvec3 a5 = sin(sq(sigmoid(a4))*4.9296 + 0.2042 + iTime*0.1035);\n\tvec3 a6 = tri(a5*4.2873 + 0.1978 + iTime*0.1720);\n\tvec3 a7 = well((-a6)*2.3936 + 0.1407 + iTime*0.1545);\n\treturn (a3 - mix(bi(vec3(length(uv))), a7, vec3(uv.y)));\n}\n\nvec3 node_4(vec2 uv) {\n\tuv = reflect_3(uv);\n\tvec3 a1 = noise(uv, vec2(1.9951849, 1.6487385), 0.881760);\n\tvec3 a2 = tri(vec3(length(uv))*2.8227 + 0.5569 + iTime*0.2455);\n\tvec3 a3 = well(sq(node_2(uv))*2.9677 + 0.1003 + iTime*0.2260);\n\tvec3 a4 = tri(quant(sigmoid(node_1(uv)), bi(a3))*5.6785 + 0.0742 + iTime*0.1946);\n\tvec3 a5 = well((mod(a1, a2) - sigmoid(sigmoid(a4)))*1.9948 + 0.2642 + iTime*0.0525);\n\treturn uni(mod(sigmoid(a5), node_3(uv)));\n}\n\nvec3 node_5(vec2 uv) {\n\tvec3 a1 = vec3(0.2059, 0.4504, 0.6694);\n\tvec3 a2 = vec3(0.6382, 0.1550, 0.0554);\n\tuv = xywarp(uv, vec2(0.6418, 0.9168), mod(uni(pthresh(0.1438, vec3(uv.y), a1, vec3(length(uv)))), a2).xy);\n\tvec3 b1 = mix2(uv, vec3(0.3944, 0.3854, 0.8034), vec3(0.4333, 0.4635, 0.6904), vec3(0.3561, 0.9797, 0.6339), vec3(0.0845, 0.7918, 0.1074));\n\treturn (b1 + vec3(length(uv)));\n}\n\nvec3 node_6(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.8400, 0.4133), vec3(uv.x).xy);\n\tvec3 b1 = vec3(0.4222, 0.9918, 0.8204);\n\treturn (vec3(length(uv)) - b1);\n}\n\nvec3 node_7(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.8798, 0.3542), vec3(uv.y).xy);\n\tvec3 b1 = noise(uv, vec2(0.7427467, 0.11581453), 0.145351);\n\treturn b1;\n}\n\nvec3 node_8(vec2 uv) {\n\tuv = reflect_4(uv);\n\tvec3 a1 = vec3(0.0946, 0.1737, 0.6365);\n\treturn bi(a1);\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn node_8(uv);\n}\n\nvec3 node_10(vec2 uv) {\n\tuv = (mat2(-1.2024,1.3894,-0.8700,-0.7869)*(uv-vec2(0.6866,0.0031)));\n\tvec3 a1 = mix2(uv, vec3(0.6228, 0.6913, 0.0923), vec3(0.0772, 0.4137, 0.4147), vec3(0.8028, 0.0440, 0.9324), vec3(0.1016, 0.6217, 0.1160));\n\treturn (-(quant(a1, vec3(uv.x)) - node_9(uv)));\n}\n\nvec3 node_11(vec2 uv) {\n\tuv = reflect_2(uv);\n\treturn bi(node_10(uv));\n}\n\nvec3 node_12(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = mix2(uv, vec3(0.6060, 0.0538, 0.6091), vec3(0.7887, 0.5799, 0.1694), vec3(0.3812, 0.9959, 0.9991), vec3(0.1426, 0.0030, 0.8745));\n\tvec3 a2 = well(a1*1.1328 + 0.6357 + iTime*0.3889);\n\tvec3 a3 = sin(a2*2.6609 + 0.2185 + iTime*0.2541);\n\tvec3 a4 = vec3(0.5637, 0.3660, 0.1286);\n\tvec3 a5 = well((-node_6(uv))*1.8893 + 0.2718 + iTime*0.1706);\n\tvec3 a6 = vec3(0.6523, 0.3457, 0.8443);\n\tvec3 a7 = well((a5 + a6)*5.7040 + 0.9664 + iTime*0.1406);\n\tvec3 a8 = tri((a4 + abs((node_5(uv) - a7)))*4.1486 + 0.0788 + iTime*0.1422);\n\tvec3 a9 = sin(mod(node_7(uv), mod(vec3(length(uv)), vec3(uv.x)))*4.3284 + 0.4710 + iTime*0.0784);\n\tvec3 a10 = mix2(uv, vec3(0.0962, 0.2353, 0.2355), vec3(0.7018, 0.9959, 0.2032), vec3(0.3062, 0.9177, 0.7068), vec3(0.7258, 0.6940, 0.8747));\n\tvec3 a11 = sin(sigmoid(pthresh(0.7743, a9, uni((-a10)), bi(vec3(length(uv)))))*1.2167 + 0.1931 + iTime*0.3874);\n\tvec3 a12 = sin(uni((vec3(length(uv)) + quant(vec3(length(uv)), uni(vec3(length(uv))))))*3.6766 + 0.4773 + iTime*0.1215);\n\tvec3 a13 = tri(a12*1.1183 + 0.0763 + iTime*0.1421);\n\tvec3 a14 = tri(pthresh(0.9678, quant(a3, a8), quant(a11, node_11(uv)), a13)*5.8991 + 0.5763 + iTime*0.1343);\n\treturn a14;\n}\n\nvec3 node_13(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.1719, 0.7932), node_4(uv).xy);\n\treturn abs(node_12(uv));\n}\n\nvec3 node_14(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = tri(node_13(uv)*2.7191 + 0.4213 + iTime*0.3308);\n\treturn bi(a1);\n}\n\nvec3 node_15(vec2 uv) {\n\tuv = (mat2(-0.7178,1.0670,-0.7583,-1.0215)*(uv-vec2(0.8875,-0.2713)));\n\tvec3 a1 = noise(uv, vec2(1.9016684, 0.7157998), 0.448857);\n\treturn sq((vec3(uv.x) + a1));\n}\n\nvec3 node_16(vec2 uv) {\n\tuv = reflect_3(uv);\n\tvec3 a1 = mix2(uv, vec3(0.0505, 0.0587, 0.4765), vec3(0.1459, 0.7588, 0.0740), vec3(0.9378, 0.8863, 0.2277), vec3(0.9660, 0.0322, 0.5320));\n\treturn a1;\n}\n\nvec3 node_17(vec2 uv) {\n\tuv = reflect_1(uv);\n\treturn vec3(length(uv));\n}\n\nvec3 node_18(vec2 uv) {\n\tuv = (mat2(0.7641,1.2827,1.1231,-0.8015)*(uv-vec2(0.9712,0.2745)));\n\tvec3 a1 = noise(uv, vec2(2.676754, 3.479914), 0.178799);\n\tvec3 a2 = vec3(0.3289, 0.8109, 0.5742);\n\treturn quant(bi(mix(a1, node_17(uv), abs(abs((a2 - vec3(uv.x)))))), vec3(length(uv)));\n}\n\nvec3 node_19(vec2 uv) {\n\tuv = reflect_0(uv);\n\tvec3 a1 = noise(uv, vec2(2.5317523, 1.3423917), 0.930119);\n\treturn (-quant(node_18(uv), a1));\n}\n\nvec3 node_20(vec2 uv) {\n\tuv = (mat2(-1.0875,-0.9518,1.2567,-1.3847)*(uv-vec2(-0.8036,-0.8905)));\n\tvec3 a1 = well(node_15(uv)*1.6642 + 0.5943 + iTime*0.2054);\n\tvec3 a2 = tri(a1*3.0483 + 0.4860 + iTime*0.2543);\n\tvec3 a3 = noise(uv, vec2(0.7566889, 1.4629844), 0.208720);\n\tvec3 a4 = well(a3*4.6358 + 0.5690 + iTime*0.2068);\n\tvec3 a5 = tri(a4*2.7557 + 0.1726 + iTime*0.3939);\n\tvec3 a6 = well(node_16(uv)*4.8121 + 0.9138 + iTime*0.2925);\n\tvec3 a7 = well(sq(abs(pthresh(0.6734, a2, a5, a6)))*5.7275 + 0.6006 + iTime*0.2876);\n\tvec3 a8 = sin(vec3(uv.x)*5.7638 + 0.3671 + iTime*0.3168);\n\tvec3 a9 = sin(uni((uni(a8) + vec3(uv.y)))*3.3947 + 0.3236 + iTime*0.1159);\n\tvec3 a10 = sin(a9*4.5791 + 0.3574 + iTime*0.1875);\n\tvec3 a11 = tri(((a7 + a10) - node_19(uv))*4.0317 + 0.1494 + iTime*0.2407);\n\treturn a11;\n}\n\nvec3 top(vec2 uv) {\n\tvec3 a1 = sin(node_14(uv)*2.3700 + 0.7603 + iTime*0.2207);\n\tvec3 a2 = sin(node_20(uv)*5.7205 + 0.6849 + iTime*0.1243);\n\treturn quant(a1, a2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}