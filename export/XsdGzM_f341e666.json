{"ver":"0.1","info":{"id":"XsdGzM","date":"1448637191","viewed":699,"name":"Maze Explorer","username":"fizzer","description":"A procedural maze which happens to have a nice way to know if a given path is blocked. This was created to accompany [url=http://amietia.com/slashmaze.html]an article[/url].","likes":34,"published":1,"flags":0,"usePreview":0,"tags":["procedural","maze","stateless"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define TL  30.0\n#define TL2 33.0\n\nfloat hash(float n)\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise(vec2 p)\n{\n    return hash(p.x + p.y*57.0);\n}\n\nfloat smoothNoise(vec2 p)\n{\n    float n0=noise(floor(p)+vec2(0,0));\n    float n1=noise(floor(p)+vec2(1,0));\n    float n2=noise(floor(p)+vec2(0,1));\n    float n3=noise(floor(p)+vec2(1,1));\n    float u=fract(p.x),v=fract(p.y);\n    return mix(mix(n0,n1,u),mix(n2,n3,u),v);\n}\n\nbool blocked(vec2 p)\n{\n    float r=acos(-1.)*2./8.;\n    vec2 p2=(p-.5)*mat2(cos(r),sin(r),sin(r),-cos(r))*length(vec2(1));\n    vec2 c=floor(p2); \n    bool s=step(.5,noise(c))>.5;\n    bool hv=mod(c.x+c.y,2.)>.5;\n    return hv==s;\n}\n\nfloat mazeDist(vec3 p)\n{\n    vec3 cp=fract(p)-vec3(.5),acp=abs(cp);\n    float r=acos(-1.)*2./8.;\n    vec2 p2=(p.xz-.5)*mat2(cos(r),sin(r),sin(r),-cos(r))*length(vec2(1));\n    vec2 c=floor(p2),f=fract(p.xz);\n    float a=step(.5,noise(c));\n    float s=.1;\n    if(a>.5)\n        return acp.x-s;\n    return acp.z-s;\n}\n\nfloat f(vec3 p)\n{\n    return min(length(vec2(max(0.,mazeDist(p)),p.y-.04))-.08,p.y);\n}\n\nvec2 startPoint(float t)\n{\n    return vec2(floor(t)*7., floor(t)*3.);\n}\n\nvec2 startDirection(float t)\n{\n    return vec2(-1.+mod(t*2.,2.),0.);\n}\n\nfloat cubic(float x)\n{\n    return (3.*x-2.*x*x)*x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time=iTime;\n    vec2 c=vec2(fragCoord/iResolution.xy-.5)*2.;\n    c.x*=iResolution.x/iResolution.y;\n    float time2=time*.7;\n    float tsec=floor(time2/TL2);\n    vec2 bp=startPoint(tsec),pbp=bp;\n    vec2 bd=startDirection(tsec),pbd=bd;\n\n    float st=mod(time2,TL2);\n\n    for(int i=0;i<int(TL);++i)\n    {\n        if(i>int(floor(st)))\n            break;\n        vec2 od=bd.yx*vec2(1.,-1.)*(1.-2.*step(.5,hash(float(i))));\n        pbp=bp;\n        pbd=bd;\n        if(!blocked(bp+bd/2.))\n        {\n            bp+=bd;\n            if(!blocked(bp+od/2.))\n                bd=od;\n        }\n        else\n            bd=bd.yx*vec2(1,-1);\n    }\n\n    bp=mix(pbp,bp,fract(min(st,TL-1e-4)));\n    bd=normalize(mix(pbd,bd,fract(min(st,TL-1e-4))));\n    float ry=.5;\n\n    if(floor(st)>=TL)\n    {\n        float t=(st-TL)/(TL2-TL);\n        bp=mix(bp,startPoint(tsec+1.),cubic(t));\n        float ba=mix(atan(bd.y,bd.x),atan(startDirection(tsec+1.).y,startDirection(tsec+1.).x),cubic(t));\n        bd=vec2(cos(ba),sin(ba));\n        ry+=1.*sin(t*acos(-1.));\n    }\n\n    vec3 up=vec3(0,1,0);\n    float p=-.3;\n    vec2 yz=vec2(c.y,1.8)*mat2(cos(p),sin(p),-sin(p),cos(p));;\n        vec3 rd=normalize(yz.x*up+yz.y*vec3(bd.x,0,bd.y)-cross(up,vec3(bd.x,0,bd.y))*c.x);\n    vec3 ro=vec3(bp.x,ry,bp.y);\n\n    float t=0.,d=0.;\n    for(int i=0;i<120;++i)\n    {\n        d=f(ro+rd*t);\n        if(d<1e-3||t>18.)\n            break;\n        t+=d;\n    }\n\n    if(t>18.)\n    {\n        fragColor.rgb=mix(vec3(1),vec3(.6,.6,1),rd.y);\n        return;\n    }\n\n    vec3 rp=ro+rd*t;\n    float eps=1e-1;\n    float d2=clamp((f(rp+normalize(vec3(-1,1,1.5))*eps)-d)/eps,-1.,1.);\n\n    float eps2=1e-3;\n    float d22=clamp((f(rp+normalize(vec3(-1,1,1.5))*eps2)-d)/eps2,-1.,1.);\n\n    float eps3=2e-1;\n    float d23=clamp((f(rp+normalize(vec3(0,1,0))*eps3)-d)/eps3,-1.,1.);\n\n    float eps4=2e-1;\n    float d24=clamp((f(rp+normalize(rd)*eps4)-d)/eps4,-1.,1.);\n\n    vec3 irr=.5*vec3(1,1,.8)*(mix(.5,1.,1.-clamp(d22-d2,0.,1.)))*(.5+.5*d22);\n\n    irr+=.5*vec3(.8,.85,1.)*pow(.5+.5*d23,3.);\n\n    vec3 alb=mix(vec3(1.),vec3(.4,.35,.3)*1.4,step(rp.y,.1e-2))*mix(.7,1.,step(fract(rp.x*2.+.5*step(.5,fract(rp.z*2.))),.5));\n\n    vec3 spec=vec3(pow(clamp(.6+.25*d24,0.,1.)*1.4,16.))*14.*\n        (smoothNoise(rp.xz*256.)/2.+smoothNoise(rp.xz*512.)/3.);\n\n    fragColor.rgb=sqrt(mix(vec3(1),alb*irr+spec,exp2(-t/25.)));\n}\n","name":"Image","description":"","type":"image"}]}