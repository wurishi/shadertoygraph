{"ver":"0.1","info":{"id":"ssffzM","date":"1644600921","viewed":91,"name":"01 - Funky Stars ","username":"hayny","description":"my first shader ever, a grid of static stars with random colors assigned.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //grid\n    float gridSize = 7.0;\n    vec2 uv2 = fract(uv*gridSize);\n    vec2 uv3 = floor(uv*gridSize)/gridSize;\n    \n    //random color for every grid part\n    vec3 randColor = vec3(rand(uv3), rand(uv3+vec2(10.0)), rand(uv3+vec2(60.0)));\n    \n    //star\n    vec2 uv1 = abs(uv2 - 0.5);\n    float powFact = 0.5;\n    uv1 = vec2(pow(uv1.x, powFact), pow(uv1.y, powFact));\n    \n    //shape (channels merge)\n    float shape = uv1.x+uv1.y;\n    shape= (0.6 - shape) *10.0;\n    \n    \n    vec3 color = vec3(randColor * shape);\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}