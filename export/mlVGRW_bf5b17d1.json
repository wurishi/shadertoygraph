{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"//Created by CeruleanBoolean141 May 2023\n\n//read pixel color from image in iChannel0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor =  texelFetch(iChannel0, ivec2(fragCoord), 0);\n}\n\n\n","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"//This Buffer uses mouse position and click-status to change pixel color, an and store it in iChannel0\n\n#define BRUSHWIDTH 1.0\n\nvec3 rng(vec2 p){\n    vec3 a = fract(p.xyx*vec3(123.34, -234.45, 456.78));\n    a += dot(a, a + 55.43);\n    return fract(vec3(a.x*a.y , a.y*a.z, 0.5))+0.25;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 black = vec3(0.0);\n    vec3 c = texelFetch(iChannel0, ivec2(fragCoord), 0).xyz; //read in color from texture\n    if(c == black){       \n        float inc = 1.0;\n        vec3 colSouth = texelFetch(iChannel0, ivec2(fragCoord.x, fragCoord.y-inc), 0).xyz;//try to access neighbor in texture\n        vec3 colNorth = texelFetch(iChannel0, ivec2(fragCoord.x, fragCoord.y+inc), 0).xyz;\n        vec3 colEast = texelFetch(iChannel0, ivec2(fragCoord.x + inc, fragCoord.y), 0).xyz;\n        vec3 colWest = texelFetch(iChannel0, ivec2(fragCoord.x - inc, fragCoord.y), 0).xyz;\n        if(iMouse.z > 0.){ //mouse button down\n            if(distance(iMouse.xy, fragCoord) < BRUSHWIDTH){\n                c = rng(iMouse.xy);\n            }           \n        } \n        else if(colSouth != black){ \n            c = colSouth;\n        }\n        else if(colNorth != black){ \n            c = colNorth;\n        }\n        else if(colEast != black){ \n            c = colEast;\n        }\n        else if(colWest != black){ \n            c = colWest;\n        }\n        else if(colSouth != black|| colNorth != black || colEast != black || colWest != black){\n            c = (colWest + colSouth + colEast + colNorth)/4.;\n        }\n    }\n    fragColor = vec4(c,0.0); //store color in iChannel0   \n}","name":"Buffer A","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"mlVGRW","date":"1683668412","viewed":11,"name":"Draw and Fill","username":"CeruleanBoolean141","description":"Click to place color points, and release to watch them grow.  \n\nJust something I thought to make after playing \"territorio.io\".  I would love to pair this with a height map later to get \na procedural \"political map\" maker.  \n\n","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["draw","fill"],"hasliked":0,"parentid":"ctKGzD","parentname":"Draw and Fill 4"}}