{"ver":"0.1","info":{"id":"NsXcRl","date":"1642491699","viewed":69,"name":"capleTest","username":"lck898989","description":"capleTest","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["capletest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat circle(vec2 uv,float r,float blur) {\n    float d = length(uv);\n    float c = smoothstep(r,r - blur,d);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv.x *= cos((uv.x + iTime));\n    uv.y *= sin((uv.y + iTime));\n    \n    uv *= 5.;\n    \n    float c = circle(uv,0.45,0.05);\n    vec3 col = vec3(c);\n    float randomR = sin(uv.x + iTime) * 0.5 + 0.7;\n    float randomG = cos(uv.y + iTime) * 0.5 + 0.7;\n    vec3 mixColor = vec3(randomR,randomG,1.);\n    vec3 realCol = mix(col,mixColor,c);\n\n    // Output to screen\n    fragColor = vec4(realCol,1.0);\n}","name":"Image","description":"","type":"image"}]}