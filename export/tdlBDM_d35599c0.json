{"ver":"0.1","info":{"id":"tdlBDM","date":"1588411640","viewed":94,"name":"RollingBall","username":"wsx578301214","description":"Emmm.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592654\n\nfloat circ(vec2 pos, float rd,vec2 center){\n    pos -= center;\n\treturn length(pos)/rd;\n}\n\nvec2 rotate2D(vec2 pos,float angle){\n    pos -= vec2(.5);\n\tpos = mat2(cos(angle),sin(angle),-sin(angle),cos(angle)) * pos;\n    pos += vec2(.5);\n    return pos;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // x ( 0 to 9 )  y ( 0 to 9 )\n    vec2 p = fragCoord/iResolution.xy*9.;\n    // x ( 0 to 16 )  y ( 0 to 9 )\n\tp.x *= iResolution.x/iResolution.y;\n    vec2 p2 = p;\n    \n    float row = ceil(p.y);\n    float rowj = mod(row,2.0);\n    \n    float cul = ceil(p.x);\n    float culj = mod(cul,2.0);\n    \n    \n    \n    \n    p2.x = fract(p.x);\n    p2.y = fract(p.y);\n    \n    //p.x += (rowj + (rowj - 1.)) * sin(iTime)*(mod(iTime, PI) < PI/2.? 1. : 0.);\n    //p.y += (culj + (culj - 1.)) * cos(iTime)*(mod(iTime, PI) < PI/2.? 0. : 1.);\n    \n    \n    p.x = fract(p.x);\n    p.y = fract(p.y);\n    \n    p2 = rotate2D(p2,5.*iTime + cul + row);\n    \n    float f = circ(p,.8,vec2(.5));\n    f = 1. - smoothstep(0.5,.55,f);\n    \n    float f2 = circ(p2, .2, vec2(.5,.7));\n    f2 = 1. - smoothstep(0.4,.5,f2);\n    \n    f = f - f2;\n    \n    vec3 col = vec3(f);\n\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}