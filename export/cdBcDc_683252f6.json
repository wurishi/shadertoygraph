{"ver":"0.1","info":{"id":"cdBcDc","date":"1688240652","viewed":84,"name":"Fireflies in the warpfield","username":"eggot","description":"Dancing and stretching lights","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(v) mat2(cos(v), -sin(v), sin(v), cos(v))\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 20. - 10.;\n\n    vec3 col = vec3(0.);\n    \n    for (float i = 0.1; i < 25.; i = i * 1.5 + 0.1 + sin(iTime * 0.1) * 0.1) {\n        float x = uv.x + i * 3.;\n        float y = sin(i + x + iTime * sin(iTime + i * sin(iTime * 0.1)) * 0.1);\n        float dy = 5. * sin(i * iTime);\n        float dx = 5. * sin(i * iTime);\n        float angle = iTime + sin(iTime) * 3.;\n        float d = length(uv * rot(angle * 0.9) + vec2(dx, dy) - vec2(x, y) * rot(angle));\n\n        float r = 0.5 + sin(i * 9. + 3.) * 0.20;\n        float g = 0.5 + sin(i * 17. + 5.) * 0.20;\n        float b = 0.5 + sin(i * 33. + 7.) * 0.20;\n        col += vec3(pow(r/d, 1.5), pow(g/d, 1.6), pow(b/d, 1.7)) * 0.4;\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}