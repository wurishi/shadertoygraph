{"ver":"0.1","info":{"id":"cdGXzh","date":"1680690681","viewed":43,"name":"so apparently this is julia","username":"rucksack","description":"So I figured out what went wrong: I actually had to check for double the length of the constant value? Why?","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia"],"hasliked":0,"parentid":"mddXR4","parentname":"so apparently this isn't julia"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int iterations = 50;\n\n#define LINEAR\n//#define WEIRD\n\nvec2 next(vec2 z, vec2 c) {\n#ifdef WEIRD\n    // ok now this isn't complex numbers anymore\n    // but it looks weird so I kept it\n    float real = z.x * z.x * z.y - z.y * z.y + c.x;\n#else\n    // this is the proper stuff\n    float real = z.x * z.x - z.y * z.y + c.x;\n#endif\n    float imag = 2. * z.x * z.y + c.y;\n    return vec2(real, imag);\n}\n\nfloat color(vec2 z, vec2 c) {\n    int i = 0;\n    for (; i < iterations && length(z) < 2.*length(c); i++) {\n        z = next(z, c);\n    }\n#ifdef LINEAR\n    return float(i+20)/float(iterations);\n#else\n    return float(i) - log2(max(1., 100.*log2(length(z))));\n#endif\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    float r = 0.7885;\n    float a = iTime + 2.88;\n    vec2 c = r * vec2(cos(a), sin(a));\n    \n    uv *= 4.*r; \n    vec3 col = color(uv, c) * vec3(1);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}