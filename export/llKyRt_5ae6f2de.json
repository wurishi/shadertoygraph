{"ver":"0.1","info":{"id":"llKyRt","date":"1537383429","viewed":244,"name":"Color blind shader","username":"MoltenQwartz","description":"Ever wondered how colorblind people see the world?\nVary degrees of protanomaly and deuteranomaly","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["colorblind","protanomaly","deuteranomaly","colorscience"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\n// https://en.wikipedia.org/wiki/Color_blindness\n// * protanomaly:   deficient color vision in which an abnormally \n//                  large proportion of red is required to match the spectrum\n//\n// * deuteranomaly: exhibiting partial loss of green color vision so that an increased intensity of green \n//                  is required in a mixture of red and green to match a given yellow\n\nconst float protanomaly_degree = 75.0; // in %\nconst float deuteranomaly_degree = 75.0; // in %\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 RGB = texture(iChannel0,uv).rgb;\n    \n   \n    // https://arxiv.org/pdf/1711.10662.pdf\n    // https://en.wikipedia.org/wiki/LMS_color_space\n    // RGB to LMS\n    mat3 RGBtoLMS = mat3(17.8824, 3.45570, 0.0300,\n                         43.5161, 27.1554, 0.1843,\n                         4.11940,  3.8671, 1.4671);\n    \n    vec3 LMS = RGBtoLMS * RGB;\n    \n    float alpha_d = clamp(deuteranomaly_degree/100.0,0.0,1.0);\n    float alpha_p = clamp(protanomaly_degree/100.0,0.0,1.0);\n    mat3 hybrid = mat3((1.0-alpha_p),   0.4942*alpha_d, 0.0,\n                        2.0234*alpha_p, 1.0-alpha_d,    0.0,\n                       -2.5258*alpha_p, 1.2483*alpha_d, 1.0);\n    LMS = hybrid * LMS;\n    \n    // LMS to RGB\n    mat3 LMStoRGB = mat3(0.0809446, -0.0102483, -0.000367778,\n                        -0.1305040,  0.0540190, -0.004117350,\n                         0.1167140, -0.1136120,  0.693502000);\n    \n    \n    RGB = LMStoRGB * LMS;\n    \n    \n    // Output to screen\n    fragColor = vec4(RGB,1.0);\n}","name":"Image","description":"","type":"image"}]}