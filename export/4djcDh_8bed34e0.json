{"ver":"0.1","info":{"id":"4djcDh","date":"1492175707","viewed":152,"name":"Sketch_Dots1","username":"cexlearning","description":"Dots1ï¼Œ copy from https://github.com/keijiro/ShaderSketches","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["sketch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float swirl(vec2 coord)\n{\n    float l = length(coord) / iResolution.x;\n    float phi = atan(coord.y, coord.x + 1e-6);\n    return sin(l * 10.0 + phi - iTime * 4.0) * 0.5 + 0.5;\n}\n\nfloat halftone(vec2 coord)\n{\n    coord -= iResolution.xy * 0.5;\n    float size = iResolution.x / (60.0 + sin(iTime * 0.5) * 50.0);\n    vec2 uv = coord / size; \n    vec2 ip = floor(uv); // column, row\n    vec2 odd = vec2(0.5 * mod(ip.y, 2.0), 0); // odd line offset\n    vec2 cp = floor(uv - odd) + odd; // dot center\n    float d = length(uv - cp - 0.5) * size; // distance\n    float r = swirl(cp * size) * (size - 2.0) * 0.5; // dot radius\n    return clamp(d - r, 0.0, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t fragColor = vec4(vec3(1, 1, 0) * halftone(fragCoord.xy), 1);\n}","name":"Image","description":"","type":"image"}]}