{"ver":"0.1","info":{"id":"fd3GRH","date":"1629118814","viewed":94,"name":"Game Of Life by mendi","username":"mendi80","description":"Conway's Game of Life.\nFour different layers (rgb+white).\nAdded bw universe interaction.\nPlay with INITIAL_THRESHOLD, INTER_UNIVERSE_INTERACTION, and uncomment zoom.\n\n\n","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["gol"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Conway's Game of Life\n// https://en.wikipedia.org/wiki/Conway's_Game_of_Life\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 gridPos = fragCoord;\n   \n    //zoom: \n    if(iMouse.z>=0.0){ gridPos-=0.5*iResolution.xy; gridPos=gridPos/8.0+iMouse.xy; }\n    \n    ivec2 xy = ivec2(gridPos);\n    vec4 col = texelFetch(iChannel0, xy, 0); // each layer is different universe\n    fragColor = vec4(col.xyz + col.w, 1.0); // keep alpha channel 1.0 and make the fourth universe white\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Conway's Game of Life\n// https://en.wikipedia.org/wiki/Conway's_Game_of_Life\n\nconst float INITIAL_THRESHOLD = 0.23;\nconst bool INTER_UNIVERSE_INTERACTION = false;\n\nvec4 hash41(float p) //source: https://www.shadertoy.com/view/4djSRW\n{ \n\tvec4 p4 = fract(vec4(p) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nvec4 getval(ivec2 xy)\n{ \n    return texelFetch(iChannel0, xy,0);\n} \n\nvec4 sum_neighbours(ivec2 xy)\n{\n    vec4 s=vec4(0.0);\n    s+=getval(xy+ivec2(-1,-1)) + getval(xy+ivec2(-1,0)) + getval(xy+ivec2(-1,1));\n    s+=getval(xy+ivec2( 0,-1)) +0.*getval(xy+ivec2( 0,0)) + getval(xy+ivec2( 0,1));\n    s+=getval(xy+ivec2( 1,-1)) + getval(xy+ivec2( 1,0)) + getval(xy+ivec2( 1,1));\n    return s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame==0){ \n        fragColor=step( vec4(INITIAL_THRESHOLD), hash41(iDate.w+fragCoord.x*iResolution.y+fragCoord.y)); \n        return;\n    } \n    \n    ivec2 xy = ivec2(fragCoord);\n    vec4 cell = getval(xy); //current cell\n    vec4 neighb = sum_neighbours(xy); // count alive neighbours\n    cell = cell*step(vec4(1.90),neighb); // Any live cell with fewer than two live neighbours dies.\n    cell *= (1.0-step(vec4(3.10),neighb)); //Any live cell with more than three live neighbours dies.\n    cell += vec4(equal(neighb,vec4(3.0)))*vec4(equal(cell,vec4(0.0))); //Any dead cell with exactly three live neighbours becomes a live cell.\n    \n   if(INTER_UNIVERSE_INTERACTION){\n       float inter_universe_sum=cell.r+cell.g+cell.b+cell.a;\n       if(inter_universe_sum>1.0){\n           if(inter_universe_sum==2.0) cell=vec4(1.0);\n           if(inter_universe_sum==3.0) cell=vec4(1.0);\n           if(inter_universe_sum==4.0) cell=vec4(0.0); //kill if 4. otherwise it will not stop growing\n       }\n   }\n\n    fragColor =  cell;\n}","name":"Buffer A","description":"","type":"buffer"}]}