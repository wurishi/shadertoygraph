{"ver":"0.1","info":{"id":"ldGfWR","date":"1528238901","viewed":93,"name":"tile_engine_demo","username":"Lokathor","description":"demo of the fragment shader i'll need for the tile engine.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // should be 64x64 in this demo\n    vec2 tile_size = vec2(textureSize(iChannel0, 0) / 16);\n    \n    // start\n    vec2 frag_uv = fragCoord/iResolution.xy;\n    vec2 grid_count = iResolution.xy / tile_size;\n    vec2 grid_position = frag_uv * grid_count;\n    // lookup ID and Color\n    int tile_id = 21;\n    vec4 tile_color = vec4(1.0);\n    // end of fake lookup\n    int tile_texture_row = tile_id / 16;\n    int tile_texture_col = tile_id % 16;\n    vec2 tile_texture_base_pixel = vec2(tile_texture_row, tile_texture_col) * tile_size;\n    vec2 tile_texture_pixel_offset = (grid_position - floor(grid_position)) * tile_size;\n    vec2 tile_texture_pixel = tile_texture_base_pixel + tile_texture_pixel_offset;\n    vec2 tile_texture_uv = tile_texture_pixel / vec2(textureSize(iChannel0, 0));\n    \n    // Output to screen\n    fragColor = texture(iChannel0, tile_texture_uv);\n}\n","name":"Image","description":"","type":"image"}]}