{"ver":"0.1","info":{"id":"WlsGRl","date":"1557308017","viewed":78,"name":"[00002] sphere","username":"samel","description":"[00002] sphere","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","basic","shadow","diffuse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plane(vec3 p, float y)\n{\n return p.y-y;\n}\n\nfloat sphere(vec3 p,vec3 pos,float r)\n{\n return length(pos-p)-r;\n}\n\nfloat scene(vec3 p)\n{\n float sphere=sphere(p,vec3(0.0,1,6),1.0);\n float plane=plane(p,0.0);\n return min(sphere,plane);\n}\n\nfloat raymarch(vec3 origin,vec3 direction)\n{\n float traveled=0.0;\n float distance=0.0;\n for(int i=0;i<128;i++)\n {\n  vec3 p=origin+traveled*direction;\n  distance=scene(p);\n  if(distance<=0.001 || traveled>100.0)\n  {\n   break;\n  }\n  traveled+=distance;\n }\n return traveled;\n}\n\nvec3 normalAt(vec3 p)\n{\n vec2 epsilon=vec2(0.01,0);\n float distanceAtP=scene(p);\n return normalize(vec3(distanceAtP-scene(p-epsilon.xyy),\n                       distanceAtP-scene(p-epsilon.yxy),\n                       distanceAtP-scene(p-epsilon.yyx)));\n}\n\nfloat diffuse(vec3 p)\n{\n vec3 sunPos=vec3(sin(iTime),5,cos(iTime)+6.0);\n vec3 normal=normalAt(p);\n vec3 lightDir=normalize(sunPos-p);\n if(raymarch(p+lightDir*0.1,lightDir)<length(sunPos-p))\n {\n  return 0.0;\n }\n return clamp(dot(lightDir,normal),0.0,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x-0.5;\n    \n    vec3 color=vec3(0,0,0);\n    vec3 origin=vec3(0.0,2.0,0);\n    vec3 direction=normalize(vec3(uv,1));\n    float traveled=raymarch(origin,direction);\n    color=vec3(diffuse(origin+direction*traveled));\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}