{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#ifdef GL_ES\nprecision highp float;\n#endif\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = floor(abs(mod(iTime*0.25, 6.0)))*0.25 + 0.25;\n\t\n\tscale += sin(iTime*0.0001);\n\t\n    vec2 pos = fragCoord.xy - 0.5 * iResolution.xy;\n\t\n\tfloat dist = pos.x*pos.x+pos.y*pos.y;\n\t\n\tfloat red   = sin(dist*0.1*scale+iTime)*0.5 + 0.5;\n\tfloat green = sin(dist*0.2*scale+iTime)*0.5 + 0.5;\n\t\n\tfragColor = vec4(red, green, 0.4, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4ss3R4","date":"1363996009","viewed":342,"name":"More Aliasing please","username":"otacocato","description":"Generates high frequent patterns by calculating red and green channel like this:\nred   = sin(dist*dist*0.1*scale+iGlobalTime)*0.5 + 0.5;\ngreen = sin(dist*dist*0.2*scale+iGlobalTime)*0.5 + 0.5;\nwhere dist is the length() of the gl_FragCoord","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["rings","aliasing","patterns","sin","cos"],"hasliked":0,"parentid":"","parentname":""}}