{"ver":"0.1","info":{"id":"MfVSDh","date":"1715128852","viewed":37,"name":"AK FYP15: KIFS Fractal","username":"AKHC","description":"Kaleidoscopic Iterated Function System fractal.","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N(float a)\n{\n    return vec2(sin(a), cos(a));\n\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =(fragCoord -.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    uv*=1.3;\n    uv+=vec2(0, -0.3);\n    vec3 col = vec3(0);\n\n    //float angle = mouse.x * 3.1414;\n    \n    /*\n    float d = dot(uv, n);\n    \n    uv -= n * min(0., dot(uv, n)) * 2.; //bending code\n    col += smoothstep(0.03, 0.0, abs(d));\n    */\n    \n    uv.x = abs(uv.x);\n    \n    vec2 n = N(5./6. * 3.1414);\n    float d = dot(uv - vec2(.5, 0), n);\n    uv -= n * max(0.,d) * 2.;\n    \n    //d = dot(uv - vec2(-.5, 0), n);\n    //uv -= n * min(0.,d) * 2.;\n    \n\n    //col += smoothstep(0.01, .0, abs(d)); //shows reflecting line\n\n    n = N(2./3. * 3.1414);\n\n    float scale = 1.;\n    float eh = 3.;\n    uv.x +=0.5;\n\n    for(int i = 0; i < 4; i++)\n    {\n   \n        uv *= eh;\n        scale *= eh;\n        uv.x -=1.5;\n   \n        uv.x = abs(uv.x); //mirrors x\n        uv.x -= .5;\n        uv -= n * min(0., dot(uv, n)) * 2.; //'bending code'\n\n        \n    \n    }\n    \n    d = length(uv - vec2(clamp(uv.x, -1., 1.), 0));\n    col += smoothstep(1./iResolution.y * 2., 0.0, d / scale) / 2.;\n    uv /= scale * 2.;\n    col += texture(iChannel0, -uv + iTime*.04).rgb;\n    \n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}