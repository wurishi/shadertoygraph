{"ver":"0.1","info":{"id":"Mddcz8","date":"1518149231","viewed":106,"name":"Cut Cube - nmaga","username":"nmaga23","description":"Cut Cube for CIS566","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_STEPS = 300;\nconst float MIN_DIST = 0.0001;\nconst float MAX_DIST = 100.0;\nconst float EPSILON = 0.000001;\n\nbool balls = false;\nbool rings = false;\n\nfloat triangle_wave(float x, float freq, float amplitude) {\n    return abs(mod((x * freq) , amplitude - (0.5 * amplitude)));\n}\n\nfloat trapezoid_wave(float x) {\n    return clamp(triangle_wave(x, 0.2, 3.0) - .5, 0.0, 0.5);\n}\n \n\nmat3 rotateMatX(float angle) {\n\tfloat rad = radians(angle);\n\treturn mat3(\n\t\tvec3(1.0, 0.0, 0.0),\n\t\tvec3(0.0, cos(rad), -sin(rad)),\n\t\tvec3(0.0, sin(rad), cos(rad))\n\t);\n}\n\nmat3 rotateMatY(float angle) {\n\tfloat rad = radians(angle);\n\treturn mat3(\n\t\tvec3(cos(rad), 0.0, sin(rad)),\n\t\tvec3(0.0, 1.0, 0.0),\n\t\tvec3(-sin(rad), 0.0, cos(rad))\n\t);\n}\n\nmat3 rotateMatZ(float angle) {\n\tfloat rad = radians(angle);\n\treturn mat3(\n\t\tvec3(cos(rad), -sin(rad), 0.0),\n\t\tvec3(sin(rad), cos(rad), 0.0),\n\t\tvec3(0.0, 0.0, 1.0)\n\t);\n}\n\n\n\nfloat cubeSDF( vec3 p, float r) {\n\tvec3 d = abs(p) - vec3(r, r, r);   \n    float insideDistance = min(max(d.x, max(d.y, d.z)), 0.0);\n    float outsideDistance = length(max(d, 0.0));  \n    return insideDistance + outsideDistance;\n}\n\nfloat sdPlane( vec3 p, vec4 n )\n{\n  // n must be normalized\n  return dot(p,n.xyz) + n.w;\n}\n\nfloat sdBox( vec3 p, vec3 b)\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat planes1SDF(vec3 p) {\n    float plane11 = sdBox(vec3(0.0,0.0,(-.15 * 2.0)-abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(3.0+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    float plane12 = sdBox(vec3(0.0,0.0,(-.15 * 3.0)-abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.6+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    float plane13 = sdBox(vec3(0.0,0.0,(-.15 * 4.0)-abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.2+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    float plane14 = sdBox(vec3(0.0,0.0,(-.15 * 5.0)-abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.8+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    float plane15 = sdBox(vec3(0.0,0.0,(-.15 * 6.0)-abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.4+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    float plane16 = sdBox(vec3(0.0,0.0,(-.15 * 7.0)-abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.0+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    return min(min(min(min(min( plane11, plane12),plane13),plane14),plane15),plane16);\n}\nfloat planes2SDF(vec3 p) {  \n    float plane21 = sdBox(vec3(0.0,0.0,(.15 * 2.0)+abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(3.0+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    float plane22 = sdBox(vec3(0.0,0.0,(.15 * 3.0)+abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.6+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    float plane23 = sdBox(vec3(0.0,0.0,(.15 * 4.0)+abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.2+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    float plane24 = sdBox(vec3(0.0,0.0,(.15 * 5.0)+abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.8+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    float plane25 = sdBox(vec3(0.0,0.0,(.15 * 6.0)+abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.4+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    float plane26 = sdBox(vec3(0.0,0.0,(.15 * 7.0)+abs(.2*sin(iTime)))+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.0+iTime*2.0)*180.0), vec3(.18,.18,.00000018));\n    return min(min(min(min(min( plane21, plane22),plane23),plane24),plane25),plane26);\n}\nfloat planes3SDF(vec3 p) {\n    float plane31 = sdBox(vec3(0.0,(-.15 * 2.0)-abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(3.0+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    float plane32 = sdBox(vec3(0.0,(-.15 * 3.0)-abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.6+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    float plane33 = sdBox(vec3(0.0,(-.15 * 4.0)-abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.2+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    float plane34 = sdBox(vec3(0.0,(-.15 * 5.0)-abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.8+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    float plane35 = sdBox(vec3(0.0,(-.15 * 6.0)-abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.4+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    float plane36 = sdBox(vec3(0.0,(-.15 * 7.0)-abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.0+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    return min(min(min(min(min( plane31, plane32),plane33),plane34),plane35),plane36);\n}\nfloat planes4SDF(vec3 p) {\n    \n    float plane41 = sdBox(vec3(0.0,(.15 * 2.0)+abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(3.0+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    float plane42 = sdBox(vec3(0.0,(.15 * 3.0)+abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.6+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    float plane43 = sdBox(vec3(0.0,(.15 * 4.0)+abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.2+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    float plane44 = sdBox(vec3(0.0,(.15 * 5.0)+abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.8+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    float plane45 = sdBox(vec3(0.0,(.15 * 6.0)+abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.4+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    float plane46 = sdBox(vec3(0.0,(.15 * 7.0)+abs(.2*sin(iTime)),0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.0+iTime*2.0)*180.0), vec3(.18,.00000018,.18));\n    return min(min(min(min(min( plane41, plane42),plane43),plane44),plane45),plane46);\n}\nfloat planes5SDF(vec3 p) {\n    float plane51 = sdBox(vec3((-.15 * 2.0)-abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(3.0+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    float plane52 = sdBox(vec3((-.15 * 3.0)-abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.6+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    float plane53 = sdBox(vec3((-.15 * 4.0)-abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.2+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    float plane54 = sdBox(vec3((-.15 * 5.0)-abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.8+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    float plane55 = sdBox(vec3((-.15 * 6.0)-abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.4+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    float plane56 = sdBox(vec3((-.15 * 7.0)-abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.0+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    return min(min(min(min(min(plane51, plane52),plane53),plane54),plane55),plane56);\n}\nfloat planes6SDF(vec3 p) {\n    float plane61 = sdBox(vec3((.15 * 2.0)+abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(3.0+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    float plane62 = sdBox(vec3((.15 * 3.0)+abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.6+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    float plane63 = sdBox(vec3((.15 * 4.0)+abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(2.2+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    float plane64 = sdBox(vec3((.15 * 5.0)+abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.8+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    float plane65 = sdBox(vec3((.15 * 6.0)+abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.4+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    float plane66 = sdBox(vec3((.15 * 7.0)+abs(.2*sin(iTime)),0.0,0.0)+ (p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(1.0+iTime*2.0)*180.0), vec3(.00000018, .18,.18));\n    return min(min(min(min(min(plane61, plane62),plane63),plane64),plane65),plane66);\n}\n\nfloat planesSDF(vec3 p) {\n    \n    return min(min(min(min(min(planes1SDF(p),planes3SDF(p)),planes5SDF(p)),planes2SDF(p)),planes4SDF(p)),planes6SDF(p));\n}\n\nfloat sceneSDF(vec3 p) {\n    float cube = sdBox((p * rotateMatX(45.0) * rotateMatY(45.0)) * rotateMatY(trapezoid_wave(3.4+iTime*2.0)*180.0) , vec3(.18,.18,.18));\n    \n    float planes = planesSDF(p);\n    \n    return min(cube, planes);\n}\n\nfloat march(vec3 rayOrigin, vec3 direction) {\n\tfloat dist = MIN_DIST;\n\tfor(int i = 0; i < MAX_STEPS; i++) {\n\t\tvec3 pos = rayOrigin + dist * direction;\n\t\tfloat dt = sceneSDF(pos);\n\t\tif(dt < EPSILON) {\n\t\t\treturn dist;\n\t\t}\n\t\tdist += dt;\n\t\tif(dist >= MAX_DIST) {\n\t\t\treturn MAX_DIST;\n\t\t}\n\t}\n\treturn MAX_DIST;\n}\n\nvec3 normal(vec3 p) {\n\tfloat gradX = sceneSDF(vec3(p.x + EPSILON, p.y, p.z)) - sceneSDF(vec3(p.x - EPSILON, p.y, p.z));\n\tfloat gradY = sceneSDF(vec3(p.x, p.y + EPSILON, p.z)) - sceneSDF(vec3(p.x, p.y - EPSILON, p.z));\n\tfloat gradZ = sceneSDF(vec3(p.x, p.y, p.z + EPSILON)) - sceneSDF(vec3(p.x, p.y, p.z - EPSILON));\n\treturn normalize(vec3(gradX, gradY, gradZ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 xy = fragCoord - iResolution.xy / 2.0;\n    //float z = iResol tion.y / tan(radians(45.0) / 2.0);\n    \n    \n    //vec3 eye = vec3(0.0, 0.0, 5.0);\n\t//vec3 dir = normalize(vec3(xy, -z));\n    \n    vec3 eye = vec3(0.0,0.0,-1.0);\n    vec3 up = vec3(0.0,1.0,0.0);\n    vec3 right = vec3(1.0,0.0,0.0);\n    \n    float u = (fragCoord.x * 2.0 / iResolution.x - 1.0) * iResolution.x/iResolution.y;\n    float v = fragCoord.y * 2.0 / iResolution.y - 1.0;\n    vec3 origin = right * u + up * v;\n    origin = origin - vec3(0.0,0.0,5.0);\n    vec3 dir = normalize(cross(right, up));\n\t\n    \n    float distance = march(origin, dir);\n\n\tif(distance >= MAX_DIST - 2.0 * EPSILON) {\n        fragColor = vec4(24.0/255.0,24.0/255.0,25.0/255.0,0.0);\n        return;\n\t}\n    \n    vec3 norm = normal(vec3(fragCoord.xy,0.0));\n    \n    \n\n    \n    \n    fragColor = vec4(1.0,1.0,1.0,0.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}