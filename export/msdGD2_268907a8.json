{"ver":"0.1","info":{"id":"msdGD2","date":"1677875942","viewed":52,"name":"simple 2.5D clouds","username":"ianertson","description":"Some 2.5D clouds.\nUse the mouse to look around :) ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simple","clouds","25d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 noise(in vec2 p, in float seed, in float lod) { \n    return textureLod(iChannel3, (p + (seed*10.0029281835))/256., lod).xyz;\n}\n\nvec3 noise(in vec2 p, in float seed, in float lod, in float freq, in float warp, const in int levels) {\n    float div = 0.0;\n    float amp = 1.0;\n    vec3 n = vec3(0.0);\n    for (int i = 0; i < levels; i++) {\n        n += amp * noise(p*freq, seed, lod); div += amp; amp /= 2.0; freq *= 2.0; lod /= 2.;\n        p += (vec2(n.x, n.y)*2.0-1.0)*warp;\n        seed += n.z*warp;\n    }\n    return n / div;\n}\n\nvec3 snoise(in vec2 p, in float seed, in float lod) {\n    vec2 id = floor(p); vec2 lv = fract(p); lv = lv*lv*(3.0-2.0*lv);\n    return mix(\n        mix(noise(id, seed, lod), noise(id + vec2(1, 0), seed, lod), lv.x),\n        mix(noise(id + vec2(0, 1), seed, lod), noise(id + vec2(1, 1), seed, lod), lv.x),\n     lv.y);\n}\n\nvec3 snoise(in vec2 p, in float seed, in float lod, in float freq, in float warp, const in int levels) {\n    float div = 0.0;\n    float amp = 1.0;\n    vec3 n = vec3(0.0);\n    for (int i = 0; i < levels; i++) {\n        n += amp * snoise(p*freq, seed, lod); div += amp; amp /= 2.0; freq *= 2.0; lod /= 2.;\n        p += (vec2(n.x, n.y)*2.0-1.0)*warp;\n        seed += n.z*warp;\n    }\n    return n / div;\n}\n\nvec3 getSky(in vec3 rd) {\n    vec2 uv = rd.xz / rd.y;\n    float dotup = max(0.0, dot(rd, vec3(0, 1, 0)));\n    vec3 blue = vec3(0.29, 0.59, 0.9);\n    vec3 col = pow(blue, vec3(1.0 + dotup));\n    if (rd.y < 0.) return col;\n    float clouds = 0.0;\n    float time = T*0.1;\n    uv += vec2(sin(time*0.01), cos(time*0.01));\n    vec2 shift = vec2(cos(time), sin(time));\n    vec3 inv = snoise(uv + 2.0*(vec2(sin(2.0*(time+3.0298918715)), cos(2.0*(time-1.738381)))), 11.92312567, 0., 0.1, 0., 6);\n    time += inv.x + inv.y + inv.z;\n    vec3 lf0 = snoise(uv + (shift*2.), 1.23456789, 0., 1., 0., 6);\n    time += lf0.x*lf0.z*lf0.z*0.5;\n    vec3 hf0 = noise(uv - shift, 3.210123456, 0., 32.0, 0., 3);\n    vec3 lf1 = snoise(uv - (shift*2.), 7.77773123, 0., 1.5, 0., 6);\n    time -= lf1.x*lf1.y*lf1.z*0.5;\n    shift = vec2(cos(time*0.25), sin(time*0.25));\n    vec3 hf1 = noise(uv + shift, 9.2022891815, 0., 16.0, 0., 3);\n    time += (hf1.x+hf1.y+hf1.z)*0.23;\n    vec3 hf2 = snoise(uv - shift, 95.4928185, 0., 100.0, 0., 4);\n    time += (hf2.x+hf2.y+hf2.z)*0.23;\n    vec3 mixer0 = snoise(uv - (shift*2.), 16.22398921, 0., 2., 0., 3);\n    vec3 mixer1 = snoise(uv + (shift*2.), 32.00293812, 0., 2., 0., 3);\n    vec3 mixer2 = snoise(uv - (shift*2.), 48.93232471, 0., 2., 0., 3);\n    float low0 = mix(mix(lf0.x, lf0.y, mixer0.x), lf0.z, mixer0.y);\n    float high0 = mix(mix(hf0.x, hf0.y, mixer0.x), hf0.z, mixer0.y);\n    float low1 = mix(mix(lf1.x, lf1.y, mixer1.x), lf1.z, mixer1.y);\n    float high1 = mix(mix(hf1.x, hf1.y, mixer1.x), hf1.z, mixer1.y);\n    float clear = (1.0-smoothstep(0.3,0.5,mix(mix(inv.x, inv.y, mixer0.x), inv.z, mixer0.y)));\n    float low = pow(mix(low0, low1, mixer0.z), 2.);\n    float high = mix(high0, high1, mixer1.z);\n    clouds = mix(low, high, mixer2.x);\n    clouds = mix(clouds, mix(mix(mixer0.x, mixer0.y, mixer1.x), mixer0.z, mixer1.y), mixer2.x);\n    float stripesX = exp(cos(low0*(uv.x+sin(time))*(TAU+high0))-1.);\n    float stripesY = exp(cos(low1*(uv.y+cos(time))*(TAU+high1))-1.);\n    float stripes = mix(stripesX, stripesY, high0) * high1 * mixer0.y;\n    clouds = mix(clouds, stripes, clamp(max(0.0, stripes - (clouds*clouds))*2., 0.0, 1.0));\n    clouds = mix(clouds, 0.0, clamp(clear*3., 0.0, 1.0));\n    clouds = mix(clouds, mix(mix(hf2.x, hf2.y, mixer0.x), hf2.z, mixer0.y), hf2.z*max(0.0, 1.0-(clouds+(clear*0.5)))*hf2.y);\n    clouds = pow(clouds,2.);\n    clouds *= clamp(dotup*10., 0.0, 1.0);\n    return clamp((col * max(0.0, 1.0 - clouds)) + clouds, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 O, in vec2 fc )\n{\n    vec3 col = vec3(0.0);\n    vec2 uv = (fc-0.5*R.xy)/R.y;\n    vec4 m = vec4((iMouse.xy-0.5*R.xy)/R.y, iMouse.zw);\n    \n    vec3 rd = normalize(vec3(uv.xy, 1.0));\n    \n    if (m.z > 0.001) {\n        rd.yz *= rot(m.y*TAU);\n        rd.xz *= rot(m.x*TAU);\n    } else {\n        rd.yz *= rot(radians(mix(0.0, 40.0, (0.5+(0.5*cos(T*0.7))))));\n        rd.xz *= rot(radians(mix(-100., 100., (0.5+(0.5*sin(T*0.25))))));\n    }\n    \n    col += getSky(rd);\n    \n    O = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R (iResolution.xy)\n#define T (iTime+2.10)\n#define M_PI (3.14159265359)\n#define TAU (M_PI * 2.0)\n#define ZERO (min(0, int(iTime)))\n#define adot(a,b) (abs(dot(a, b)))\n#define cdot(a,b) (max(0.0, dot(a, b)))\n#define rgb(a,b,c) (vec3(a, b, c) / 255.0)\nfloat luma(vec3 color) { return dot(color, vec3(0.299, 0.587, 0.114)); }\nmat2 rot(in float a) { float c = cos(a); float s = sin(a); return mat2(c, s, -s, c); }","name":"Common","description":"","type":"common"}]}