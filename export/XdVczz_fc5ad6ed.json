{"ver":"0.1","info":{"id":"XdVczz","date":"1521473332","viewed":685,"name":"Bloom - DavidRecuencoDanielBruna","username":"Davidro","description":"Bloom shader applying a blur to a image which is above the luminance limit, then we sum both of the images.\n\nSource of the rgb to luminance formule: :https://stackoverflow.com/questions/596216/formula-to-determine-brightness-of-rgb-color","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["bloom","shaders","enti"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 color = texture(iChannel0, uv); \n    \n    fragColor = color + texture(iChannel1,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float luminanceLimit = 0.8;\n    \n    vec4 color = texture(iChannel0, uv); \n    \n    \n    // Using formule to calculate luminance from rgb\n    // 0.299 * R + 0.587 * G + 0.114 * B\n    float pixelLuminance = 0.299*color.x + 0.587*color.y + 0.114*color.z;\n    if(pixelLuminance < luminanceLimit){\n        color = vec4(0.0,0.0,0.0,0.0);\n    }\n    fragColor = color;\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord;\n    \n    vec3 blr = vec3(0.0);\n    blr += 0.129001*texture( iChannel0, (uv+vec2(-5.5, 0.0))/iResolution.xy ).xyz;\n    blr += 0.142521*texture( iChannel0, (uv+vec2(-3.5, 0.0))/iResolution.xy ).xyz;\n    blr += 0.151303*texture( iChannel0, (uv+vec2(-1.5, 0.0))/iResolution.xy ).xyz;\n    blr += 0.15435*texture(  iChannel0, (uv+vec2( 0.0, 0.0))/iResolution.xy ).xyz;\n    blr += 0.151303*texture( iChannel0, (uv+vec2( 1.5, 0.0))/iResolution.xy ).xyz;\n    blr += 0.142521*texture( iChannel0, (uv+vec2( 3.5, 0.0))/iResolution.xy ).xyz;\n    blr += 0.129001*texture( iChannel0, (uv+vec2( 5.5, 0.0))/iResolution.xy ).xyz;\n    \n    fragColor = vec4( blr, 1.0 );\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord;\n    \n    vec3 blr = vec3(0.0);\n    blr += 0.129001*texture( iChannel0, (uv+vec2(0.0, -5.5))/iResolution.xy ).xyz;\n    blr += 0.142521*texture( iChannel0, (uv+vec2(0.0, -3.5))/iResolution.xy ).xyz;\n    blr += 0.151303*texture( iChannel0, (uv+vec2(0.0, -1.5))/iResolution.xy ).xyz;\n    blr += 0.15435*texture(  iChannel0, (uv+vec2(0.0,  0.0))/iResolution.xy ).xyz;\n    blr += 0.151303*texture( iChannel0, (uv+vec2(0.0,  1.5))/iResolution.xy ).xyz;\n    blr += 0.142521*texture( iChannel0, (uv+vec2(0.0,  3.5))/iResolution.xy ).xyz;\n    blr += 0.129001*texture( iChannel0, (uv+vec2(0.0,  5.5))/iResolution.xy ).xyz;\n\n    fragColor = vec4( blr, 1.0 );\n}","name":"Buf C","description":"","type":"buffer"}]}