{"ver":"0.1","info":{"id":"stlSWX","date":"1626715565","viewed":66,"name":"Egg Alone reproduced","username":"pini","description":"eggalone.com as a shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["egg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: Pini Grigio\n// Title: Recreation (eggalone.com)\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n\n\n\n\n\nfloat egg(float radius, float a, float b, vec2 location) {\n    float smoothing = 0.001;\n    // Eggify\n    location.y *= sqrt((1.0 - a) - b*(location.x));\n    return smoothstep(\n            radius + smoothing, \n            radius, \n            distance(location, vec2(0.0))\n    \t);\n}\n\nfloat yolk(float size, vec2 location) {\n    float smoothing = 0.001;\n    return smoothstep(\n        \tsize + smoothing,\n        \tsize, \n        \tdistance(location, vec2(0.0))\n    \t);\n}\n\nmat2 rotate(float angle){\n    return mat2(\n        \t\tcos(angle), -sin(angle),\n                sin(angle),  cos(angle)\n    \t\t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\nvec2 u_resolution = iResolution.xy;\nfloat u_time = iTime;\n\n    // Normalize coordinates\n    vec2 st = fragCoord.xy / u_resolution.xy;\n\n    // Center \n    st -= 0.5;\n    \n    // Fix aspect ratio\n    if (u_resolution.y > u_resolution.x) {\n    \tst.y *= u_resolution.y/u_resolution.x;\n    } else {\n        st.x *= u_resolution.x/u_resolution.y;\n    }\n    \n    // Constants\n\tfloat margin = 0.03;\n    float rotation = mod(u_time/2.0, 180.0);\n    \n    float egg_radius = 0.5;\n    float egg_width = -1.172;\n    float off_center = 2.188;\n    \n    float yolk_radius = (\n                            egg_radius/3.0) * \n                            (1.0 + sin(u_time) \n                             / 100.0\n                        );\n    vec2 yolk_center_offset = vec2(\n                                    (egg_radius / off_center) - 0.340,\n                                    0.0\n    \t\t\t\t\t\t\t  );\n    vec2 yolk_independant_offset = vec2(-0.01,0.005) * rotate(rotation); // Counter rotation of yolk\n    \n    // Draw the egg\n\tvec3 egg_white = mix(\n                            vec3(0.0),\n                            vec3(1.0),\n                            egg(\n                                    egg_radius * (0.99 + sin(u_time)/50.0) - margin,\n                                    egg_width * (0.9 + sin(u_time)/5.0),\n                                    off_center * (0.9 + sin(u_time)/5.0), \n                                    st*rotate(rotation)\n                                )\n                   \t\t);\n    \n    // Invert yolk color to later AND it with the egg white\n    vec3 yolk_yellow = 1.0 - mix(\n                            vec3(0.0),\n                            1.0 - vec3(1.990,1.838,0.030),\n                            yolk(\n                                    yolk_radius,\n                                    (st+yolk_independant_offset) * rotate(rotation) + \n                                    yolk_center_offset\n                                )\n    \t\t\t\t\t);\n    \n    fragColor = vec4(egg_white * yolk_yellow, 1.0);\n}","name":"Image","description":"","type":"image"}]}