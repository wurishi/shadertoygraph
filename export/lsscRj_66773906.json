{"ver":"0.1","info":{"id":"lsscRj","date":"1489360169","viewed":204,"name":"Sound sandbox","username":"antonOTI","description":"little sandbox to try stuff on soundcloud\nI'm trying to extract interesting points in songs.\nI don't know much about sound and how it is implemented on shadertoy though","likes":4,"published":1,"flags":96,"usePreview":0,"tags":["sound","noob","sandbox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DEBUG_BUFF_A\n#define S 1.\n\nfloat adjust(float x)\n{\n    return .8 - x * .55;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float zoom = 1.;\n    if(iMouse.z > 0.)\n    {\n    \tzoom = 1. - iMouse.x / iResolution.x;\n    }\n\tuv.x *= zoom;\n    \n    #ifdef DEBUG_BUFF_A\n    float v =  texture(iChannel0,uv).x;\n    v*= step(.6,pow(v,.5));     \n    fragColor = vec4(1.) *v;\n    \n    fragColor = texture(iChannel0,uv) * zoom;\n    #else\n    /*vec4 accumulator = vec4(0.);\n    \n    for(float f = 0.; f < S; f += 1.)\n    {\n        accumulator += texture(iChannel0,vec2(uv.x,f *.01));\n    }\n    accumulator /= S;*/\n    \n    float now = texture(iChannel0,vec2(uv.x,0.)).b ;\n    /*\n    float past = texture(iChannel0,vec2(uv.x,.05)).x;\n        \n    \n    float value = (now-past)*.25 + .5;\n    \n    float dist = distance(value,uv.y);\n    */\n    \n    float dist = distance(now,uv.y);\n    \n    //float adj = adjust(uv.x);\n    \n    float r = step(dist,.025);\n    //float g = step(distance(adj,uv.y),.025);\n    \n    //float equalized = value - adj;\n    \n    //float b = step(distance(equalized + .5,uv.y),.025);\n    float a = r;\n    \n\tfragColor = vec4(r,r,r,a);\n    #endif\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XtlGzB","filepath":"https://soundcloud.com/wic-recordings/ludowic-katana-zero-1?in=wic-recordings/sets/katana-zero-original-soundtrack","previewfilepath":"https://soundcloud.com/wic-recordings/ludowic-katana-zero-1?in=wic-recordings/sets/katana-zero-original-soundtrack","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define DEFFIL .5\n\nfloat damp = .005;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord.xy / iResolution.xy);\n    \n    \n    float now = texture(iChannel0,vec2(uv.x, .0)).x;\n    \n    now -= .255;\n    now *= 2.;\n    \n   // fragColor = vec4(0.);\n\n    fragColor = vec4(now);\n    \n    if(fragCoord.y > DEFFIL)\n    {\n        float pastY = floor(fragCoord.y * DEFFIL) / DEFFIL - DEFFIL;\n        pastY /= iResolution.y;\n        vec4 past = texture(iChannel1,vec2(uv.x, pastY));\n        fragColor = past;\n        fragColor.b = max(past.b - damp,0.);\n    \t//fragColor.b = dFdx(fragColor.b) * step(0.,fragColor.r);\n    }\n    \n    \n}","name":"Buffer A","description":"","type":"buffer"}]}