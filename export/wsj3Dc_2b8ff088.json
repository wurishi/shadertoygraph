{"ver":"0.1","info":{"id":"wsj3Dc","date":"1550201236","viewed":159,"name":"HaHaHa","username":"winstonrenatan","description":"Solar System 2D","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sun","earth","solar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//PLANETS\n#define Sun vec3(1.0, 1.0, 0.0)\n#define Mercury vec3(0.96, 0.91, 0.72)\n#define Venus vec3(0.96, 0.82, 0.38)\n#define Earth vec3(0.62, 0.79, 0.37)\n#define Mars vec3(0.88, 0.82, 0.62)\n#define Jupiter vec3(0.84, 0.67, 0.53)\n#define Saturn vec3(0.89, 0.87, 0.64)\n#define Uranus vec3(0.01, 0.87, 0.96)\n#define Neptune vec3(0.0, 0.52, 0.89)\n\n//CIRCLE FUNCTION\nvoid drawCircle(vec2 uv, vec3 color, float radiusCircle, float blur, vec2 pos, inout vec3 image) {\n    float d = length(uv-pos);\n    if(d <= radiusCircle) {\n\t\timage.r = color.r*(1.0-smoothstep(radiusCircle-blur, radiusCircle, d));\n        image.g = color.g*(1.0-smoothstep(radiusCircle-blur, radiusCircle, d));\n        image.b = color.b*(1.0-smoothstep(radiusCircle-blur, radiusCircle, d));\n    }\n}\n\n//ROTATE FUNCTION\nvec2 Rotation(float distance, float multi) {\n    float x1 = distance*(cos(iTime*multi));\n    float y1 = distance*(sin(iTime*multi));\n    return vec2(x1,y1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = ( fragCoord.xy / iResolution.xy ) - 0.5;  // -0.5 <> 0.5\n    uv.x *= iResolution.x / iResolution.y;\n\tvec3 c = vec3(0.0, 0.0, 0.0);\n    \n    float blurRate = 0.005;\n    float d = 0.0007; \t\t\t//Diameter\n    float dist = 0.000625; \t\t//Distance\n    float vel = 0.030*2.0;   \t//Velocity of planet times two   \n    \n    drawCircle(uv, Sun, 70.0*d, blurRate, vec2(0.0, 0.0), c);\n    drawCircle(uv, Mercury, 12.0*d, blurRate, Rotation(dist*188.0, vel*40.0), c);\n    drawCircle(uv, Venus, 26.0*d, blurRate, Rotation(dist*242.0, vel*35.0), c);\n\tdrawCircle(uv, Earth, 28.0*d, blurRate, Rotation(dist*300.0, vel*29.0), c);\n    drawCircle(uv, Mars, 28.0*d, blurRate, Rotation(dist*360.0, vel*24.0), c);\n    drawCircle(uv, Jupiter, 56.0*d, blurRate, Rotation(dist*485.0, vel*13.0), c);\n    drawCircle(uv, Saturn, 46.0*d, blurRate, Rotation(dist*610.0, vel*10.0), c);\n    drawCircle(uv, Uranus, 29.0*d, blurRate, Rotation(dist*700.0, vel*8.0), c);\n    drawCircle(uv, Neptune, 31.0*d, blurRate, Rotation(dist*780.0, vel*6.0), c);\n    \n\tfragColor += vec4(c, 0.0);\n}","name":"Image","description":"","type":"image"}]}