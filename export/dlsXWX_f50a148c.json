{"ver":"0.1","info":{"id":"dlsXWX","date":"1675438639","viewed":94,"name":"Petit fantÃ´me (Sandy)","username":"dnozor","description":"Partiel Shaders GLSL #1\n\npar Sandy Koummarasy","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["cute"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat sdCircle( in vec2 p, in float r ) \n{\n    return length(p)-r;\n}\n\nfloat sdRoundedBox(in vec2 p, in vec2 b, in vec4 r){\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x = (p.y>0.0)?r.x : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\n\nfloat stroke(float x, float size, float w) {\n    float d = step(size, x+w*.5) - step(size, x-w*.5);\n    return clamp(d, 0., 1.);\n}\n\nfloat arc(vec2 uv, float r1, float r2, float angleMin , float angleMax, float feather) {\n    float angle = atan(uv.y, uv.x) + PI; \n\tfloat dist = length(uv);\n\n\tfloat dmin = angle - angleMin;\n\tdmin = mod(dmin + PI, 2.*PI) - PI;\n\t\n\tfloat dmax = angle - angleMax;\n\tdmax = mod(dmax + PI, 2.*PI) - PI;\n\t\n\treturn\n\t\tsmoothstep(r1-feather, r1, dist) * \n\t\tsmoothstep(r2+feather, r2, dist) * \n\t\tmax(\n\t\t\tsmoothstep(feather, 0., (dmin)*dist), \n\t\t\tsmoothstep(-feather, 0., (dmax)*dist) \n\t\t)\n\t;\n}\n\nfloat opIntersection(float d1, float d2)\n{\n    return max (d1, d2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0* fragCoord/iResolution.xy -1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // POS : \n    \n    vec2 eyes1_pos = uv + vec2(-0.25,0.);\n    vec2 eyes2_pos = uv + vec2(0.25,0.);\n    vec2 iris1_anim = uv + vec2(-0.25 + sin(iTime) * 0.1,0.);\n    vec2 iris2_anim = uv + vec2(0.25 + sin(iTime) * 0.1,0.);\n\n    // COMPONENTS : \n    \n    float background = sdCircle(uv,0.1 + sin(iTime)*.05);\n    \n    float ear1 = step(length(uv + vec2(-0.45,0.15)),0.15);\n    float ear2 = step(length(uv + vec2(0.45,0.15)),0.15);\n    float ears = opIntersection(ear1, ear2);\n    float head = step(length(uv + vec2(0.,0.)),0.5);\n    float head_combined = opIntersection(head, ears);\n    \n    float eye1 = step(length(eyes1_pos),0.15);\n    float eye2 = step(length(eyes2_pos),0.15);\n    float iris1 = step(length(iris1_anim),0.06);\n    float iris2 = step(length(iris2_anim),0.06);\n    float eyes = (eye1 + eye2);\n    float iris = (iris1 + iris2);\n    \n    float eyebrow1 = step(sdRoundedBox((uv + vec2(-0.25,-0.25)), vec2(.16,.06), vec4(0.05)),0.);\n    float eyebrow2 = step(sdRoundedBox((uv + vec2(0.25,-0.25)), vec2(.16,.06), vec4(0.05)),0.);\n    float eyebrows = (eyebrow1 + eyebrow2);\n    \n    float mouth = arc((uv + vec2(0.,0.10)), 0.07, 0.09, -10., 7., 0.01) ;\n    \n    // FINAL : \n    \n    vec3 col = vec3(0.0);\n    col += background;\n    col += vec3(0.729,0.035,0.031);\n    col += head_combined;\n    col -= eyes;\n    col += iris;\n    col -= eyebrows;\n    col -= mouth;\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}