{"ver":"0.1","info":{"id":"ldyBzV","date":"1529538372","viewed":127,"name":"My first donut","username":"Veggiebob","description":"I'm not really sure if there is a hole on the inside . . . \nmouse.y = look up and down\nmouse.x = rotate","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","distancefield","donut","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float groundHeight = -1.5;\nfloat circle (vec2 pos, float radius, vec2 p){\n    return length(p-pos)-radius;\n}\nfloat donut (vec2 pos, float radius, vec2 p){\n    float d = pow(max(abs(circle(pos, radius, p)),abs(circle(pos, radius*0.7, p))), 3.)*50.-0.15;\n    d = clamp(d, -1., 1.);\n    return d;\n}\nfloat donut3D (vec3 pos, float radius, vec3 p){\n    return donut(pos.xz, radius, p.xz)+pow(abs(pos.y-p.y)*1.3, 2.)*8.;\n}\nfloat ring (vec2 pos, float radius, vec2 p){\n    return max(abs(circle(pos, radius, p)),abs(circle(pos, radius*0.5, p)));\n}\nfloat ring3D (vec3 pos, float radius, vec3 p){\n    return ring(pos.xz, radius, p.xz)+abs(pos.y-p.y)*0.1;\n}\nvec3 contrast (vec3 col, float n){\n    return 0.5 + (col-0.5)*n;\n}\nfloat total (vec3 col){\n    return col.r+col.b+col.g;\n}\nvec3 brightena (vec3 col, float n){\n    if(total(col)<0.5){\n    \treturn vec3(max(col.r, n), max(col.g, n), max(col.b, n));\n    } else {\n        return col;\n    }\n}\nvec3 traceDonut (vec3 o, vec3 r, vec3 center, float radius, bool returnPos){\n    vec3 p = vec3(0.);\n    float t = 0.;\n    float d = 0.;\n    for(int i = 0; i<128; i++){//get on the thing\n        p = o+r*t;\n        d = donut3D(center, radius, p);\n        t+=d*0.2;\n    }\n    if(returnPos){\n        return p;\n    } else {\n    \treturn vec3(d, t, 0.);\n    }\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x*=iResolution.x/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy - 0.5;\n    if(iMouse.xy == vec2(0.))mouse = vec2(0.0, 0.0);\n    mouse.x*=6.5;\n    mouse.y*=-1.1;\n    \n    float angle = mouse.x;\n    float fov = 0.5;\n    float camDist = 2.0;\n    vec3 camera = vec3(cos(mouse.x)*camDist, max(mouse.y*camDist, groundHeight+0.5), sin(mouse.x)*camDist);\n    vec3 ray = vec3(-cos(mouse.x+uv.x*fov)*2., -mouse.y+uv.y, -sin(mouse.x+uv.x*fov)*2.);\n    //vec3 camera = vec3(cos(mouse.x)*camDist*cos(mouse.y), -sin(mouse.y)*camDist, cos(mouse.y)*sin(mouse.x)*camDist);\n    //vec3 ray = vec3(-cos(mouse.x+uv.x*fov)*2., sin(mouse.y+uv.y), -sin(mouse.x+uv.x*fov)*2.);\n    ray = normalize(ray);\n    \n    vec3 donutPos = vec3(0., 0.0, 0.);\n    float donutRadius = 0.2;\n    vec3 t = traceDonut(camera, ray, donutPos, donutRadius, false);\n    vec3 p = traceDonut(camera, ray, donutPos, donutRadius, true);\n    float fog = 1.0 / (1.0 + t.y*t.y*t.y*t.y*t.y*t.y*0.003);\n    vec3 col = vec3(0.);\n    if (t.x<0.3){\n        if(p.y>total(texture(iChannel0, p.xz+iTime*0.01).rgb)*0.05+donutPos.y){\n            col = fog*brightena(fog*contrast(texture(iChannel0, p.xz).rgb, 8.), 0.8);\n        } else {\n            vec3 breadNoise = texture(iChannel1, p.xz*0.6).rgb;\n            col = fog*vec3(0.5, 0.25, 0.)*(breadNoise*0.5+min(0.4/total(breadNoise), 1.));\n        }\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}