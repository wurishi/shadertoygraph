{"ver":"0.1","info":{"id":"DsSBRD","date":"1689461190","viewed":45,"name":"fractal demo 31","username":"ercantomac","description":"fractal demo","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.8, 0.5, 0.4);\n    vec3 b = vec3(0.2, 0.4, 0.2);\n    vec3 c = vec3(2.0, 1.0, 1.0);\n    vec3 d = vec3(0.00, 0.25, 0.25);\n\n    return a + b * cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float sinTime = sin(iTime);\n    float cosTime = cos(iTime);\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 2.0; i++){\n        uv = fract(uv * (2.0)) - (0.5);\n\n        float onePixel = (1.0 / iResolution.y);\n    \n        float d = length(uv);\n        vec3 col = palette(cos(length(uv0)) + iTime);\n    \n        float radius = 0.5;\n        d -= radius;\n        d += cosTime * 0.15;\n        d = abs(d);\n        //d = smoothstep(0.0, onePixel * 16.0, d);\n        d = step(onePixel * 16.0, d);\n    \n        //d = ((cos(sinTime) + 1.0) * 0.15) / d;\n        d = abs(sin(d * 8.0 + iTime) / (abs(cosTime) + abs(sinTime)));\n        col.xyz *= d;\n        finalColor += col;\n    }\n\n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}