{"ver":"0.1","info":{"id":"Mljczh","date":"1508720416","viewed":77,"name":"10/9/17 Polar Shapes ","username":"L1tang","description":"it's not a circle?","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["graprog"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 circle(float radius, float ratio, float edge, vec2 uv, vec3 color)\n{\n    uv.x *= ratio;\n    \n    vec2 shapePos = vec2(.5*ratio, .5);\n    \n    \n    float dist = distance(shapePos, uv);\n    \n    //offset to 0,0\n    uv -=shapePos;\n    /*eclipse replace if the second value is a constant it will fill the circle and the background\n\tsmoothstep(dist, aConstant, radius);*/\n    float angle = atan(uv.y, uv.x);\n    angle += iTime;\n    float yeah = radius;\n    //radius = cos(4.*(angle*2.))*.4 / sin(4.*angle)*.3;\n    radius += smoothstep(1., edge,cos(8.*angle))*.1;\n    \n    // gear radius += smoothstep(1., edge,cos(8.*angle))*.1;\n    // nice radius += smoothstep(1., edge,cos(12.*angle))*.2 + cos(4.*angle)*.3;\n    // sun radius += smoothstep(1., edge,cos(12.*angle))*.2 + cos(12.*angle)*.1;\n    // nice radius = smoothstep(1., edge,cos(9.*angle))*.2 + cos(6.*angle)*.1;\n    // no edge radius += step(1.,cos(9.*angle))*.2 + cos(6.*angle)*.1;\n    // lantern radius += step(.1,cos(2.*angle))*.2 + smoothstep(.01, edge,cos(2.*angle)*.1);\n    \n    //cos(4.*angle)*.3\n    \n    //nice radius = cos(100.*angle)*(sin(iTime+radius));\n    //nice 2 radius = cos(iTime*angle)*(sin(iTime*10.+radius));\n    //nice 3radius = cos(1000.*angle)*(sin(iTime*10.+radius));\n    float value = smoothstep(dist, dist + edge, radius);\n    vec3 finalColor = vec3(value);\n    finalColor = mix(finalColor, color, value);\n    /*vec3 yeyo = mix(finalColor, color, yeah);\n    finalColor += yeyo;*/\n    \n    \n    return finalColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    \n    \n    vec3 circulo = circle(.3, ratio, 0.01, uv, vec3(1,.8,0));\n\tfragColor = vec4(circulo,1.0);\n}","name":"Image","description":"","type":"image"}]}