{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define pi 3.14159265\n#define R(p, a) p=cos(a)*p+sin(a)*vec2(p.y, -p.x)\n#define hsv(h,s,v) mix(vec3(1.), clamp((abs(fract(h+vec3(1., 1., 3.)/3.)*6.-3.)-1.), 0., 1.), s)*v\n\nvec3 csb( vec3 f, float c, float s, float b) {\n\t\n\treturn mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), f*b)), f*b, s), c);\n\t\n}\n\nfloat sn(vec3 p) {\n\t\n\tconst vec4 v = vec4(17.*17.,34.,1.,7.);\n\tconst vec2 c = vec2(1./6.,1./3.);\n\tconst vec4 d = vec4(0.,.5,1.,2.);\n\tconst float n = 1./v.w;\n\t\n\tvec3 i = floor(p + dot(p, c.yyy));\n\tvec3 x0 = p - i + dot(i, c.xxx);\n\t\n\tvec3 l = step(x0.xyz, x0.yzx);\n\tvec3 g = 1.-l;\n\t\n\tvec3 i1 = g.xyz * l.zxy;\n\tvec3 i2 = max(g.xyz, l.zxy);\n\t\n\tvec4 r = i.z + vec4(0., i1.z, i2.z, 1.);\n\tr = mod((r*v.y+v.z)*r, v.x);\n\tr += i.y + vec4(0., i1.y, i2.y, 1.);\n\tr = mod((r*v.y+v.z)*r, v.x);\n\tr += i.x + vec4(0., i1.x, i2.x, 1.);\n\tr = mod((r*v.y+v.z)*r, v.x);\n\tr = floor(r);\n\t\n\tvec3 x1 = x0 - i1 + 1. * c.x;\n\tvec3 x2 = x0 - i2 + 2. * c.x;\n\tvec3 x3 = x0 - 1. + 3.  * c.x;\n\t\n\tvec3 ns = n * d.wyz - d.xzx;\n\tr -= v.w*v.w*floor(r*ns.z*ns.z);\n\tvec4 a = floor(r*ns.z);\n\tvec4 b = floor(r - v.w*a);\n\t\n\tvec4 x = a*ns.x + ns.y;\n\tvec4 y = b*ns.x + ns.y;\n\tvec4 h = 1. - abs(x) - abs(y);\n\t\n\tvec4 b0 = vec4(x.xy, y.xy);\n\tvec4 b1 = vec4(x.zw, y.zw);\n\t\n\tvec4 s0 = floor(b0)*2.+1.;\n\tvec4 s1 = floor(b1)*2.+1.;\n\tvec4 sh = floor(h);\n\t\n\tvec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw*sh.zzww;\n\tvec4 t = vec4(\n\t\tdot(vec3(a0.xy, h.x), x0),\n\t\tdot(vec3(a0.zw, h.y), x1),\n\t\tdot(vec3(a1.xy, h.z), x2),\n\t\tdot(vec3(a1.zw, h.w), x3)\n\t);\n\t\n\tvec4 s = vec4(\n\t\tdot(x0, x0),\n\t\tdot(x1, x1),\n\t\tdot(x2, x2),\n\t\tdot(x3, x3)\n\t);\n\t\n\ts = max(.6 - s, 0.);\n\ts *= s;\n\ts *= s;\n\t\n\treturn 48. * dot(s, t);\n\t\n}\n\nfloat fsn(vec3 p) {\n\t\n\treturn sn(p*.06125)*.5 + sn(p*.125)*.25 + sn(p*.25)*.125;\n\t\t\n}\n\nvec3 cellpos;\nvec3 signvec;\nvec3 subpos;\nfloat fsign;\n\nfloat cf(vec3 pos) {\n\t\n\tcellpos=pos-floor(pos);\n\t\n\tsignvec=2.0*step(0.5,cellpos)-1.0;\n\tfsign=signvec.x*signvec.y*signvec.z;\n\t\n\tsubpos=abs(abs(cellpos-0.5)-0.25);\n\t\n\treturn fsign*(max(max(subpos.x,subpos.y),subpos.z)-0.25);\n\t\n}\n\t\n\nfloat torus(vec3 p) {\n\t\t\n\treturn length(vec2(length(p.xz) -4.24, p.y)) -1.19;\n\t\t\n}\n\nfloat m;\nfloat f(vec3 p) {\n\n\tm = 0.;\n\tR(p.yz, pi/6.);\n\tvec3 q=p;\n\tR(p.xz, iTime);\n\tR(p.yz, .5* iTime);\n\n\tfloat d = torus(p) +fsn(p*100.0)*0.015;\n\tfloat md = mix( cf(p), d, .72 + sin(iTime) * .185 );\n\tfloat nd = dot(q+vec3(0.,2., 0.), vec3(0., 1.,0.));\n\tm = step(nd, md);\n\treturn min(md,nd);\n\t\n}\n\nvec3 g(vec3 p) {\n\tvec2 e = vec2(.0001, .0);\n\treturn normalize(vec3(f(p+e.xyy) - f(p-e.xyy),f(p+e.yxy) - f(p-e.yxy),f(p+e.yyx) - f(p-e.yyx)));\n}\n\n\nfloat ao(vec3 p, vec3 n, float d) {\n\n\tfloat s = sign(d);\n\tfloat o = s*.5+.5;\n\tfor (float i = 5.0; i > 0.; --i) {\n\t\to -= (i*d - f(p+n*i*d*s)) / exp2(i);\n\t}\n\treturn o;\n\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 wh = vec2( iResolution.x, iResolution.y );\n\tvec3 p = vec3(0.,2.,4.);\n\tvec3 d = vec3((fragCoord.xy/(0.5*wh)-1.)*vec2(wh.x/wh.y,1.0), 0.)-p;\n\td = normalize(d);\n\tp.z += 8.0 + sin(iTime) * 2.0;\n\tp.y += 2.0;\t\n\tfloat b=0.,r=0.,l=0.,a,s;\n\tint j;\n\t\n\tfor ( int i = 0; i <= 63; ++i) {\n\t\t \n\t\t  l = f(p)*0.9;\n\t\t  r += l;\n\t\t  p += l*d;\n\t\t  l = abs(l);\n\t\t  if (l<0.005*r) break;\n\t\t  j = i;\n\t\t\n\t}\n\t\n\tif (j == 63) {\n\t\t\n\t\tfragColor = vec4(1.0);\n\t\treturn;\n\t\t\n\t}\n\t\n\tfloat m = m;\n\n\tvec3 n = g(p);\n\tfloat e = 1.+dot(n,d);\n\t\t\n\tvec3 lp = normalize(vec3(sin(iTime)*10.0, 1.0+abs(sin(iTime*0.5))*20.0, 10.0*cos(iTime))-p);\n\tfloat x = pow(max(dot(reflect(lp, n), d), 0.0), 16.0);\n\t\n\td = refract(d, n, 0.6);\n\ta = ao(p, n, 0.51);\n\ts = ao(p, d, -0.435);\n\n\ts = 1.-clamp(s+0.0,0.,1.);\n\ts*=s;\n\tfloat c = s*a+0.4;\n\tvec3 cA = c*c*mix(hsv(0.15,0.25,.95), hsv(0.05,0.17,.95), e)*clamp(max(dot(n,lp),0.),0.9,1.0) +vec3(x*a);\n\tvec3 cB = vec3(a);\n\t\n\tfragColor.xyz = clamp(csb(mix(cA, cB, m), 1.2, 1.0, 1.0).xyz, 0., 1.);\n\tfragColor.w = 1.;\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mds3Rr","date":"1361949880","viewed":590,"name":"Frosted Torus","username":"_pwd_","description":"Frosted Torus","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","torus","refraction"],"hasliked":0,"parentid":"","parentname":""}}