{"ver":"0.1","info":{"id":"lldfR7","date":"1539130094","viewed":1819,"name":"FTLS","username":"shau","description":"Experiment with pseudo 3D backgrounds ","likes":14,"published":3,"flags":1,"usePreview":0,"tags":["3d","vr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T iTime * 8.\n#define PI2 6.28318\n#define R iResolution.xy\n\n//Dave Hoskins\n//https://www.shadertoy.com/view/4djSRW\nfloat H1(float p) {\n\tvec3 x  = fract(vec3(p) * .1031);\n    x += dot(x, x.yzx + 19.19);\n    return fract((x.x + x.y) * x.z);\n}\n\n//IQ cosine palattes\n//https://iquilezles.org/articles/palettes\nvec3 PT(float t) {return vec3(.5) + vec3(.5) * cos(6.28318 * (vec3(1) * t + vec3(0, .33, .67)));}\n\nvec3 render(vec3 rd) {\n    float a = (atan(rd.y, rd.x) / PI2) + .5, //polar  0-1\n          l = floor(a * 24.) / 24.; //split into 24 segemnts\n    vec3 c = PT(H1(l + T * .0001)) * step(.1, fract(a * 24.)); //segment colour and edge\n    float m = mod(abs(rd.y) + H1(l) * 4. - T * .01, .3); //split segments \n    return c * step(m, .16) * m * 16. * max(abs(rd.y), 0.); //split segments\n}\n\nvoid mainImage(out vec4 C, vec2 U) {\n    \n    //ray direction\n    vec2 uv = (U - R * .5) / R.y;\n    vec3 f = vec3(0, 0, 1),\n         r = vec3(f.z, 0, -f.x),\n         d = normalize(f + 1. * uv.x * r + 1. * uv.y * cross(f, r));\n        \n    C = vec4(render(d), 1.);\n}\n\nvoid mainVR(out vec4 C, vec2 U, vec3 ro, vec3 rd) {\n    C = vec4(render(rd), 1.);\n}","name":"Image","description":"","type":"image"}]}