{"ver":"0.1","info":{"id":"4dlfDM","date":"1496435495","viewed":253,"name":"AnotherTube","username":"dila","description":"Some tube zoom.","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x) {\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat udBox( vec3 p, vec3 b )\n{\n  return length(max(abs(p)-b,0.0));\n}\n\nvec4 dft(vec4 p) {\n    return vec4(p.x + p.y + p.z + p.w,\n                p.x - p.y + p.z - p.w,\n                p.x + p.y - p.z - p.w,\n                p.x - p.y - p.z + p.w);\n}\n\nfloat anim(float a, float b, float t) {\n    return mix(a, b, sin(t) * 0.5 + 0.5);\n}\n\nfloat mat = 0.0;\nfloat matf = 0.0;\nvec3 tuv = vec3(0.0);\n\nfloat map(vec3 p) {\n    p.x += sin(p.z * 0.25) * 1.5;\n    p.y += cos(p.z * 0.25) * 1.5;\n    vec4 f = vec4(p, 0.0);\n    \n    float zr = 1.0 / 4.0;\n    f.z = (fract(f.z * zr) - 0.5) / zr;\n    \n    float k = 3.0;\n    f.xy = vec2(atan(f.y, f.x) / 3.1415920, length(f.xy));\n    f.x = (fract(f.x * k) - 0.5) * k;\n    f.y -= anim(6.0, 9.0, p.z * 0.25);\n    \n    float d = 1000.0;\n    mat = 0.0;\n    \n    const int n = 3;\n    for (int i = 0; i < n; ++i) {\n        f = dft(f);\n        f = abs(f) - 1.0;\n        f = dft(f) * 0.25;\n        float g = udBox(f.xyz, vec3(0.25));\n        if (g < d) {\n            d = g;\n            mat = 1.0 + float(i);\n            matf = float(i) / float(n);\n            tuv = f.xyz;\n        }\n    }\n    \n    float c = length(p.xy) - 8.0;\n    d = min(d, -c);\n    \n    return d;\n}\n\nfloat trace(vec3 o, vec3 r) {\n    float t = 0.0;\n    for (int i = 0; i < 60; ++i) {\n        t += map(o + r * t) * 0.7;\n    }\n    return t;\n}\n\nvec3 normal(vec3 p)\n{\n\tvec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nvec3 texup(sampler2D channel, vec3 p) {\n    vec3 ta = texture(channel, p.yz).xyz;\n    vec3 tb = texture(channel, p.xz).xyz;\n    vec3 tc = texture(channel, p.xy).xyz;\n    return (ta*ta + tb*tb + tc*tc) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 0.7 - dot(uv,uv) * 0.1));\n    vec3 o = vec3(0.0, 0.0, iTime * 8.0);\n    \n    o.y -= cos(o.z * 0.25) * 1.5;\n    r.xy *= rot(iTime * 0.25);\n    r.xz *= rot(sin(iTime) * 0.5);\n    \n    float t = trace(o, r);\n    vec3 w = o + r * t;\n    vec3 sn = normal(w);\n    float fd = map(w);\n    float aoc = map(w + sn * 1.3);\n    \n    vec3 texa = texup(iChannel0, tuv);\n    texa *= vec3(0.5, 2.0, 0.5);\n    texa = texa.yxz;\n    vec3 texb = texup(iChannel1, tuv);\n    \n    vec3 fc = texa + texb * matf;\n\tfc *= aoc;\n    \n\tfloat fres = abs(dot(r, -sn));\n    vec3 ref = reflect(r, sn);\n    vec3 reft = texture(iChannel2, ref).xyz;\n    fc += mix(reft, vec3(0.0), fres) * matf;\n    \n    float f = 1.0 / (1.0 + t * t * 0.01);\n    fc *= f;\n    \n    fragColor = vec4(sqrt(fc), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}