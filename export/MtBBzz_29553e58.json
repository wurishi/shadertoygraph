{"ver":"0.1","info":{"id":"MtBBzz","date":"1514589002","viewed":242,"name":"Precomputed Physics","username":"TechEpic","description":"Pre-computes collisions for fast physics with any background.\n\nDoes computations for every pixel, so it's still a little buggy, but it works.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["physics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(texture(iChannel0, uv).z);\n    if(distance(fragCoord/iResolution.x, texture(iChannel1, vec2(0.)).xy) < 0.05) {\n    \tfragColor = vec4(1., 2., 0., 0.);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"bool check(vec2 pos) {\n    return sin(pos.x*20.) > pos.y*50. - 1.5 || abs(pos.x-0.5) > 0.45;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iTime < 1.) {\n        vec2 pos = fragCoord / iResolution.x;\n        float colli = 0.;\n        if(check(pos)) {\n        \tcolli = 1.;\n        }\n        vec2 colliPos = vec2(0.);\n        vec2 firstHit = vec2(0.);\n        vec2 lastHit = vec2(0.);\n        for(float i = 0.; i < 6.28318530; i += .01) {\n            if(check(pos + vec2(sin(i), cos(i))*.05)) {\n            \tcolliPos = pos + vec2(sin(i), cos(i))*.05;\n            }\n            if(firstHit == vec2(0.)) {\n            \tfirstHit = colliPos;\n            } else {\n            \tlastHit = colliPos;\n            }\n        }\n        if(lastHit != vec2(0.)) {\n        \tcolliPos = normalize((firstHit + lastHit)/2.-pos)*0.05+pos;\n        }\n        fragColor = vec4(colliPos, colli, 0);\n    } else {\n    \tfragColor = texture(iChannel0, fragCoord/iResolution.xy);\n    }\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iTime < 1.) {\n        fragColor = vec4(0.5, 0.5, 0., 0.);\n    } else {\n        vec4 pos = texture(iChannel1, fragCoord/iResolution.xy);\n        pos.xy += pos.zw;\n        pos.w -= 0.00005;\n        vec2 getData = vec2(pos.x, pos.y*iResolution.x/iResolution.y);\n        getData = round(getData*iResolution.xy)/iResolution.xy;\n        vec4 colliData = texture(iChannel0, getData);\n        if(colliData.xy != vec2(0.)) {\n            vec2 hitVec = pos.xy-colliData.xy;\n            if(abs(length(hitVec)-0.05) < 0.001) {\n            \tfloat mag = length(hitVec) - length(hitVec + pos.zw);\n            \thitVec = normalize(hitVec)*mag*2.;\n                pos.xy -= pos.zw;\n        \t\tpos.zw += hitVec;\n            }\n        }\n    \tfragColor = pos;\n    }\n}","name":"Buf B","description":"","type":"buffer"}]}