{"ver":"0.1","info":{"id":"lsGBRc","date":"1529753526","viewed":145,"name":"spirale for Strikoo","username":"Dermenslof","description":"sqare spirale","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["squarespirale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n        int startx = 0;\n        int startz = 0;\n        int starty = 80;\n        Location size = getLoc(30, 20, 30);\n        Location loc = getLoc(startx, starty, startz);\n        int nbParcelle = 3;\n        List<Cuboid> parcelles = new ArrayList<>();\n        int i = 0;\n        int j = 1;\n        char k = 0;\n        Vector dir;\n        while (i < nbParcelle) {\n            if (k % 4 == 0) dir = new Vector(-size.getX(), 0, 0);\n            else if (k % 4 == 1) dir = new Vector(0, 0, size.getZ());\n            else if (k % 4 == 2) dir = new Vector(size.getX(), 0, 0);\n            else dir = new Vector(0, 0, -size.getZ());\n            for (int l = 0; l < j && i < nbParcelle; ++l, ++i) {\n                Cuboid cuboid = new Cuboid(loc.clone(), size.clone());\n                parcelles.add(cuboid);\n                for(Block block : cuboid){\n                    if(l == 0) block.setType(Material.WOOD);\n                    if(l == 1) block.setType(Material.DIAMOND_BLOCK);\n                    if(l == 2) block.setType(Material.BEACON);\n                }\n                loc.add(dir);\n            }\n            if (++k % 2 == 0) ++j;\n        }\n*/\n\n#define T 81. * (sin(iTime / 5. - 1.4) + 1.) / 2.\n#define R iResolution.xy\n\nvoid mainImage(out vec4 C, in vec2 U)\n{   \n    vec2 uv = 400. * (U / R - .5);\n    uv.x *= R.x / R.y;\n    C.rgb = vec3(0);\n    \n    vec2 loc = vec2(0, 0);\n    float size = 10.;\n    float i = 1., j = 1., k = 0., l;\n    vec2 dir = vec2(0);\n    \n    if (distance(uv, loc + dir) < 8.)\n       C.rgb = vec3(1, 0, 0);\n \twhile (i < T)\n    {\n        float K = mod(k, 4.);\n        if (K  < 1.)\n            dir = vec2(-size * 2., 0);\n        else if (K < 2.)\n            dir = vec2(0, -size * 2.);\n        else if (K < 3.)\n            dir = vec2(size * 2., 0);\n        else\n            dir = vec2(0, size * 2.);\n        l = 0.;\n        while (l < j && i < T)\n        {\n            if (distance(uv, loc + dir) < 8.)\n            {\n                C.rgb = mod(j, 2.) < 1. ? vec3(0, 1, 0) : vec3(0, 0, 1);\n              \treturn;\n            }\n            loc += dir; ++i; ++l;\n        }\n    \tif (mod(++k, 2.) < 1.)\n            ++j;\n    }\n}","name":"Image","description":"","type":"image"}]}