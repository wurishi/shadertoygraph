{"ver":"0.1","info":{"id":"4ctSWH","date":"1713874221","viewed":48,"name":"Field FX nÂ°2","username":"Marex","description":"This Shader is 2d infinite square","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shaderjam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( in vec2 p, in vec2 b)\n{\n  vec2 q = abs(p) - b;\n  return min(max(q.x,q.y),0.0) + length(max(q,0.0));\n}\n\nfloat shape(vec2 p, in vec2 id)\n{\n  float a = 10.* iTime;\n  return sdBox(mat2x2(cos(a),-sin(a),sin(a),cos(a))*p, vec2(0.4,0.4) ) - sin(iTime*20.)/10.;\n}\n\nfloat map(in vec2 p)\n{\n  const float s = 1.5;\n  const vec2 rep = vec2(2,1);\n  \n  vec2 id = round(p/s);\n  vec2 r = p - s*id;\n  return shape( r*2., id );\n  \n}\n\nmat2 rotated2d(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n\tvec2 uv = vec2(gl_FragCoord.x / iResolution.x, gl_FragCoord.y / iResolution.y);\n\tuv -= 0.5;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n\n  vec2 rotatedUV=uv*rotated2d(iTime/2.);\n  \n  vec2 rotatedUV2=uv*rotated2d(-iTime/1.);\n  \n  vec2 p = 4.25*(sin(iTime)*20./iTime*iResolution.xy)/iResolution.xy;\n\n  float d = map(p/rotatedUV/2.);\n  \n  float d2 = map(p+rotatedUV2*1.5);\n  \n  float pattern = ceil(sin(iTime+uv.x*uv.y*10.));\n  \n  vec3 col = (d*d2>.0) ? vec3(0,0,0) : vec3(.5+.5*cos(iTime+uv.xyx+vec3(0,3,3)));\n  \n\tfragColor=vec4(col,0);\n}","name":"Image","description":"","type":"image"}]}