{"ver":"0.1","info":{"id":"lXfGD7","date":"1707535407","viewed":123,"name":"Weird POV effect","username":"Virg","description":"Weird POV effect","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["effect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://www.youtube.com/watch?v=TdTMeNXCnTs\n// i am not the video author, just try it on shaders\n\nconst float MATH_PI = float( 3.14159265359 );\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float correction = iResolution.x/iResolution.y;\n    uv.x = uv.x * correction;\n    \n    float res = clamp(rand(uv),0.,1.);\n    float res2 = clamp(rand(uv+vec2(1.,1.)),0.,1.);\n\n    vec2 a = vec2(sin(iTime)/2. + 0.5 * correction,cos(iTime)/2. + 0.5);\n    vec2 b = vec2(sin(iTime+MATH_PI)/2. + 0.5 * correction,cos(iTime+MATH_PI)/2. + 0.5);\n    \n    float ps = 0.001;\n    if(length(b-a)+ps>length(uv-a)+length(uv-b)){\n        fragColor = vec4(vec3(res2),1.0);\n        return;\n    }\n    \n    \n    fragColor = vec4(vec3(res),1.0);\n}","name":"Image","description":"","type":"image"}]}