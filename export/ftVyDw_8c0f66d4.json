{"ver":"0.1","info":{"id":"ftVyDw","date":"1661583798","viewed":139,"name":"HSV2RGB Plasma Effect","username":"kennethdmiller3","description":"A variation of jolle's demoscene-style plasma effect that uses a shader-friendly implementation of HSV to RGB conversion instead of a texture.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["2d","oldschool","plasma"],"hasliked":0,"parentid":"XsVSDz","parentname":"Converted old plasma"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 vp = vec2(320.0, 200.0);\n\nvec4 hsv2rgb(float h, float s, float v, float a)\n{\n\tvec3 c = clamp(vec3(2.0, 2.0, -1.0) + vec3(-1.0, -1.0, 1.0) * abs(fract(h) * 6.0 - vec3(4.0, 2.0, 3.0)), 0.0, 1.0);\n\treturn vec4(mix(vec3(1.0, 1.0, 1.0), c, s) * v, a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = iTime * 10.0 + iMouse.x;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p0 = (uv - 0.5) * vp;\n    vec2 hvp = vp * 0.5;\n\tvec2 p1d = vec2(cos( t / 98.0),  sin( t / 178.0)) * hvp - p0;\n\tvec2 p2d = vec2(sin(-t / 124.0), cos(-t / 104.0)) * hvp - p0;\n\tvec2 p3d = vec2(cos(-t / 165.0), cos( t / 45.0))  * hvp - p0;\n    float sum = 0.5 + 0.5 * (\n\t\tcos(length(p1d) / 30.0) +\n\t\tcos(length(p2d) / 20.0) +\n\t\tsin(length(p3d) / 25.0) * sin(p3d.x / 20.0) * sin(p3d.y / 15.0));\n    fragColor = hsv2rgb(sum,0.8,.8+.2*sin(sum*30.0),1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float pi = 3.1415926435;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float i = fragCoord.x / iResolution.x;\n    vec3 t = (iTime + iMouse.y) / vec3(63.0, 78.0, 45.0);\n    vec3 cs = cos(i * pi * 2.0 + vec3(0.0, 1.0, -0.5) * pi + t);\n    fragColor = vec4(0.5 + 0.5 * cs, 1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}