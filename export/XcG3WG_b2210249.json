{"ver":"0.1","info":{"id":"XcG3WG","date":"1713193575","viewed":77,"name":"Grey Eye","username":"Mew2k","description":"Random shader","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.141592654\n#define TAU (2.0*PI)\n\nvec2 toPolar(vec2 rectCoords)\n{\n    return vec2(length(rectCoords), atan(rectCoords.y, rectCoords.x));\n}\n\nvec2 toRect(vec2 polarCoords)\n{\n    return vec2(polarCoords.x*cos(polarCoords.y),polarCoords.x*sin(polarCoords.y));\n}\n\n//Mod Function\nvec2 pMod2(inout vec2 p, vec2 size) {\n    vec2 c = floor((p + size*0.5)/size);\n    p = mod(p + size*0.5,size) - size*0.5;\n    return c;\n}\n\n// Mirror Function\nvec2 pModMirror2(inout vec2 p, vec2 size) {\n    vec2 halfsize = size*0.5;\n    vec2 c = floor((p + halfsize)/size);\n    p = mod(p + halfsize, size) - halfsize;\n    p *= mod(c,vec2(2))*2. - vec2(1);\n    return c;\n}\n\n//Post processing Function\nvec3 postProcess(vec3 col, vec2 uv)\n{\n    col = clamp(col, 0., 1.);\n    return vec3 (pow (col,vec3(1.-pow(length(uv)-0.2,2.))));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy*2.0-1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 pos = uv;\n    \n    float rb = 1.- (dot(pow(pos,vec2(4)),pow(pos,vec2(4)))-0.5);\n    vec2 l = vec2(0.1, 0.6);\n    float b = abs(uv.x) * abs(uv.y)-l.x;\n    pos = toPolar(pos);\n    \n    pos.y += iTime*0.5;\n    \n    pos.y += sin(pos.x*10.);\n    \n    \n    //Cool stuff\n    //pos.x = 0.6/pos.x;\n    \n    pos.y = mod(pos.y, TAU/5.);\n    pModMirror2(pos, vec2 (1.0));\n    \n    \n    \n    pos = toRect(pos);\n    \n    //Two different kinds of MOD\n    //pMod2(pos, vec2 (0.5));\n    pMod2(pos, vec2 (0.1/(pos.x/pos.x*uv.y*0.7)));\n    \n    \n    float box = max(abs(pos.x) -l.x, abs(pos.y)- l.y);\n    \n    box = smoothstep(0.5,-0.3,box);\n    \n    \n    \n    vec3 col = vec3(box);\n    //col = mix(vec3(0.1,-0.2,0.1), vec3(1.,1.,0.7),col);\n    fragColor = vec4(postProcess(col,uv),1.0);\n    \n}","name":"Image","description":"","type":"image"}]}