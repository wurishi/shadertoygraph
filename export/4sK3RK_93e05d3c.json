{"ver":"0.1","info":{"id":"4sK3RK","date":"1455365867","viewed":159,"name":"Heart PGATR","username":"Jachu","description":"This is an ongoing project.\nIbÃ³n GuillÃ©n.\nAlfredo Cerezo.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["heart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nfloat atan2(in float x, in float y)\n{\n    if (x > 0.0) {\n        return atan(y/x);\n    } else if (x < 0.0) {\n        if (y >= 0.0) {\n            return PI + atan(y/x);\n        } else {\n            return PI - atan(y/x);\n        }\n    }\n    \n    return sign(y)*PI/2.0;\n}\n\nfloat computeHeartBeatFrequency(float t){   \n    float ss = pow(t, 0.2)*1.2;\n    ss = 1.0 + ss*sin(2.0*PI*t)*exp(-t*4.0);\n    \n    return ss;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // convert screen coordinates to -1:1\n    vec2 uv = fragCoord.xy / vec2(iResolution.xy);\n    uv = 2.0*uv + vec2(-1.0);\n    \n    float aspect = iResolution.x/iResolution.y;\n    \n    vec2 position = vec2(uv.x * aspect, uv.y);\n    \n    // correct point coordinates\n    float dx = 0.05;\n    float dy = -0.1;\n    \n    position.x -= dx;\n    position.y += dy;\n    \n    // time\n    float speedRedction = 1.;\n    float time = mod(iTime/speedRedction, 1.5)/1.5;\n    \n    float heartBeat = computeHeartBeatFrequency(time);\n    \n    // heart function\n    float theta = atan2(position.y, position.x + dx);\n    float xh = 11.0*pow(sin(theta), 5.0);\n    float yh = 10.9*cos(theta) - 4.83*cos(2.27*theta) - 3.33*cos(3.32*theta) - 1.1*cos(3.77*theta);\n    \n    xh = xh/(30.0 - 10.0*heartBeat);\n    yh = yh/(30.0 - 10.0*heartBeat);\n    \n    vec2 heartPoint = vec2(xh, yh);\n\n    // distances\n    float distHeart = distance(heartPoint, vec2(0,0));\n    float distPoint = distance(position, vec2(0,0));\n\n    // colors\n    vec3 color = vec3(1.0);\n    vec3 lcolor = vec3(0.2 + sin(abs(theta)), 0.0, 0.0)*1.5*heartBeat*heartBeat;\n    vec3 bcolor = vec3(0.1 - 0.01*position.y)*(1.0 - 0.25*length(position))*heartBeat*heartBeat;\n    \n    float thres = 0.1;\n    \n    if (distHeart > distPoint) {\n        color = mix(lcolor, bcolor, smoothstep(-thres*0.5, thres*0.9, (distHeart - distPoint)));\n    } else {\n        color = mix(bcolor, lcolor, smoothstep(-thres*0.5, thres*0.5, (distHeart - distPoint)));\n    }\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}