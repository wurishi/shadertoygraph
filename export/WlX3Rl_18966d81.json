{"ver":"0.1","info":{"id":"WlX3Rl","date":"1557221688","viewed":119,"name":"Tribute to vasarely 2","username":"flyingrub","description":"Tribute to vasarely 2","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid","vasarely"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318530718\n\nconst float grid = 9.;\n#define pixel_width 2./iResolution.y*grid\n#define slowt iTime/5.\n\nfloat easeInOut(float t) {\n    if ((t *= 2.0) < 1.0) {\n        return 0.5 * t * t;\n    } else {\n        return -0.5 * ((t - 1.0) * (t - 3.0) - 1.0);\n    }\n}\n\nfloat linearstep(float begin, float end, float t) {\n    return clamp((t - begin) / (end - begin), 0.0, 1.0);\n}\n\nvec2 rotate(vec2 _uv, float _angle){\n    _uv =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _uv;\n    return _uv;\n}\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy-iResolution.xy*.5)/iResolution.y;\n    uv *= grid;\n    uv.y += mod(grid,2.)* .5;\n    vec2 id = floor(uv);\n    vec2 gv = fract(uv);\n    \n    float a = floor(random(id*floor(slowt))*4.)/4.;\n    float next_a = floor(random(id*(floor(slowt)+1.))*4.)/4.;\n    float angle = mix(a,next_a,easeInOut(linearstep(.5,1.,fract(slowt))));\n    gv = rotate(gv,angle*TAU);\n    \n    float col = smoothstep(pixel_width,0.,.5-gv.x);\n    \n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}