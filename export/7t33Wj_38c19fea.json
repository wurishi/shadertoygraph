{"ver":"0.1","info":{"id":"7t33Wj","date":"1636716780","viewed":103,"name":"Fork Blur: Pois tekcor 466","username":"tekcor","description":" poisson-disc blur.\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","blur","post","poisson"],"hasliked":0,"parentid":"lsfGWn","parentname":"Blur: Poisson Disc"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat nrand( vec2 n ) {\n\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n\nvec2 rot2d( vec2 p, float a ) {\n\tvec2 sc = vec2(sin(a),cos(a));\n\treturn vec2( dot( p, vec2(sc.y, -sc.x) ), dot( p, sc.xy ) );\n}\n\nconst int NUM_TAPS = 27;\nconst float rcp_maxdist = 1.0 / 4.22244;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.y = 1.0-uv.y;\n   \n    float max_siz;\n    if ( iMouse.z > 0.5 )\n\t\tmax_siz = 32.0 * (1.0-iMouse.x / iResolution.x); // * (0.5+0.5*sin(iTime));\n    else\n        max_siz = 32.0 * (0.5+0.5*sin(2.0*uv.x + iTime));\n        \n    //fragColor = vec4( vec3(max_siz), 1.0 );\n    //return;\n\t\n    //note: for samples-positions see\n    //      https://github.com/GPUOpen-Effects/ShadowFX/blob/master/amd_shadowfx/src/Shaders/\n    \n\tvec2 fTaps_Poisson[NUM_TAPS];\n    fTaps_Poisson[0]  = rcp_maxdist * vec2(  -0.8835609, 2.523391 );\n    fTaps_Poisson[1]  = rcp_maxdist * vec2(  -1.387375, 1.056318 );\n    fTaps_Poisson[2]  = rcp_maxdist * vec2(  -2.854452, 1.313645 );\n    fTaps_Poisson[3]  = rcp_maxdist * vec2(  0.6326182, 1.14569 );\n    fTaps_Poisson[4]  = rcp_maxdist * vec2(  1.331515, 3.637297 );\n    fTaps_Poisson[5]  = rcp_maxdist * vec2(  -2.175307, 3.885795 );\n    fTaps_Poisson[6]  = rcp_maxdist * vec2(  -0.5396664, 4.1938 );\n    fTaps_Poisson[7]  = rcp_maxdist * vec2(  -0.6708734, -0.36875 );\n    fTaps_Poisson[8]  = rcp_maxdist * vec2(  -2.083908, -0.6921188 );\n    fTaps_Poisson[9]  = rcp_maxdist * vec2(  -3.219028, 2.85465 );\n    fTaps_Poisson[10] = rcp_maxdist * vec2(  -1.863933, -2.742254 );\n    fTaps_Poisson[11] = rcp_maxdist * vec2(  -4.125739, -1.283028 );\n    fTaps_Poisson[12] = rcp_maxdist * vec2(  -3.376766, -2.81844 );\n    fTaps_Poisson[13] = rcp_maxdist * vec2(  -3.974553, 0.5459405 );\n    fTaps_Poisson[14] = rcp_maxdist * vec2(  3.102514, 1.717692 );\n    fTaps_Poisson[15] = rcp_maxdist * vec2(  2.951887, 3.186624 );\n    fTaps_Poisson[16] = rcp_maxdist * vec2(  1.33941, -0.166395 );\n    fTaps_Poisson[17] = rcp_maxdist * vec2(  2.814727, -0.3216669 );\n    fTaps_Poisson[18] = rcp_maxdist * vec2(  0.7786853, -2.235639 );\n    fTaps_Poisson[19] = rcp_maxdist * vec2(  -0.7396695, -1.702466 );\n    fTaps_Poisson[20] = rcp_maxdist * vec2(  0.4621856, -3.62525 );\n    fTaps_Poisson[21] = rcp_maxdist * vec2(  4.181541, 0.5883132 );\n    fTaps_Poisson[22] = rcp_maxdist * vec2(  4.22244, -1.11029 );\n    fTaps_Poisson[23] = rcp_maxdist * vec2(  2.116917, -1.789436 );\n    fTaps_Poisson[24] = rcp_maxdist * vec2(  1.915774, -3.425885 );\n    fTaps_Poisson[25] = rcp_maxdist * vec2(  3.142686, -2.656329 );\n    fTaps_Poisson[26] = rcp_maxdist * vec2(  -1.108632, -4.023479 );\n\n\n    if ( uv.y > 1.0 )\n    {\n        fragColor = texture( iChannel0, uv, log2(max_siz) );\n    }\n    else\n    {\n        vec4 sum = vec4(0);\n        vec2 seed = uv;\n        #if defined( ANIMATE_NOISE )\n        seed += fract( iTime );\n        #endif\n        float rnd = 6.28 * nrand( seed );\n\n        vec4 basis = vec4( rot2d(vec2(1,0),rnd), rot2d(vec2(0,1),rnd) );\n        for (int i=0; i < NUM_TAPS; i++)\n        {\n            vec2 ofs = fTaps_Poisson[i]; ofs = vec2(dot(ofs,basis.xz),dot(ofs,basis.yw) );\n            //vec2 ofs = rot2d( fTaps_Poisson[i], rnd );\n            vec2 texcoord = uv + max_siz * ofs / iResolution.xy;\n            sum += texture(iChannel0, texcoord, -10.0);\n        }\n\n        fragColor = sum / vec4(NUM_TAPS);\n    }\n    \n}\n","name":"Image","description":"","type":"image"}]}