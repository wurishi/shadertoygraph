{"ver":"0.1","info":{"id":"lldBDS","date":"1540923639","viewed":444,"name":"Supersampled Sine","username":"dedmoros","description":"Just a sketch","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["wave","sine","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define supersampling 32.\n#define PI 3.1416\n#define pr 1./iResolution\n\nfloat nsin(float x) {\n\treturn sin(x)*.5+.5;\n}\n\nfloat line(vec2 u, float y, float thickness) {\n    float a = smoothstep(pr.y, -pr.y, u.y+y-pr.y*thickness);\n    float b = smoothstep(pr.y, -pr.y, u.y+y+pr.y*thickness);\n\treturn clamp(a-b, 0., 1.);\n}\n\nfloat fun(float x) {\n    float animation = sin(iTime*.25);\n    float amplitude = min(iTime*.5, .5);\n    return sin(x*PI*4.*10.*animation)*amplitude;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.);\n    for (uint i = 0U; i < uint(supersampling); i++) {\n    \tfloat o = (pr.x / supersampling) * (float(i) - supersampling/2.);\n        float x = uv.x + o;\n    \tfloat y = fun(x);\n        col += line(uv-.5, y, 1.);\n    }\n    col = clamp(col, 0., 1.);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}