{"ver":"0.1","info":{"id":"MsBBW1","date":"1500228888","viewed":190,"name":"first try CRT-effect scope","username":"castrwilliam","description":"I still can't figure out exactly how to interpret the FFT texture thing, but this doesn't look half bad","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","music","audio","crt","scope","rejoob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float WAVPWR = 16.;\t// Power to raise the raw distance-to-actual-value. \nconst float HEIGHT = .2;\t\nconst float PI = 3.14159;\nconst float LF_FREQ = .1;\nconst float HF_FREQ = .4;\nconst float LFF = .2;\t\t// LowFreq BG flash effect strength\nconst float HFF = 6.;\t\t// HighFreq blur effect mod strength.\n\nconst float LFF_INV = 1. - LFF;\n\n// iq's smooth hsv to rgb\nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // display coords\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    // Bottom Left, Top Right\n    float bltr = (uv.x + uv.y) / 2.;\n    \t\n    // Time domain data\n    float td = texture( iChannel0, vec2(uv.x,0.75) ).x;\n    \n    // Frequency domain data\n    float fd = texture( iChannel0, vec2(uv.x,0.25) ).x;\n    \n    // Low frequency (bass)\n    float low = texture(iChannel0, vec2(LF_FREQ,.25)).x;\n      \n   \t// High frequency (treble)\n    float high = texture(iChannel0, vec2(HF_FREQ,.25)).x;\n    \n    // Waveform image for scope\n    float wv = pow(1. - abs(td - uv.y), WAVPWR - HFF * high);\n    \n    // FFT image for bargraph\n    float ff = (fd < (uv.y / HEIGHT)) ? 0. : 1.;\n    \n    // final img\n    vec3 bg = hsv2rgb(vec3(sin(iTime / PI), .125 + low * .875, wv));\n    \n    // Add constant level of brightness depending on instantaneous LF strength read from the FFT\n    bg = LFF_INV * bg + vec3(LFF * low);\n        \n\tfragColor = vec4(bg ,.5);\n}","name":"Image","description":"","type":"image"}]}