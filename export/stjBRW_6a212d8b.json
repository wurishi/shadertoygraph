{"ver":"0.1","info":{"id":"stjBRW","date":"1651861551","viewed":117,"name":"pbs rotating","username":"Honkadaloonga","description":"pbs stands for perpendicular burning ship","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","burningship"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define cmul(a, b) vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x)\n#define csqr(a) vec2(a.x*a.x - a.y*a.y, 2.0*a.x*abs(a.y))\n#define il 1.442695\n\nconst float mag = 0.6;\nconst vec2 center = vec2(0.0, 0.0);\nconst int maxIter = 1024;\n\n// I love fourier transforms\nvec3 getCol(float v) {\n    float red = 0.537 + cos(v+0.834)*0.474 + cos(v*2.0-2.655)*0.104 + cos(v*3.0-0.187)*0.023;\n    float grn = 0.491 + cos(v+1.702)*0.489 + cos(v*2.0+2.034)*0.043;\n    float blu = 0.645 + cos(v+1.804)*0.361 + cos(v*2.0+1.535)*0.037;\n    return vec3(red, grn, blu);\n}\n\nvec2 rotate(vec2 v, float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return vec2(c*v.x - s*v.y, s*v.x + c*v.y);   \n}\n\nfloat rand(float v) {\n    return fract((sin(v * 12.9898) + 1.1) * 4758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 c = uv*2.0 - 1.0;\n    c /= mag;\n    c.x *= iResolution.x/iResolution.y;\n    c += center;\n    c.y = -c.y;\n    \n    vec2 z = vec2(0.0, 0.0);\n    \n    vec3 col = vec3(0.0, 0.0, 0.0);\n    float m = 0.0;\n    for (int i = 0; i < maxIter; i++) {\n        z = rotate(z, iTime/3.0);\n        z = csqr(z) + c;\n        m = dot(z, z);\n        if (m > 1024.0) {\n            col = getCol(0.2*(float(i) - log(log(m)*0.5)*il) + 0.05*rand(fract(uv.x*3.14159265 + uv.y*2.718281828)));\n            break;\n        }\n    }\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}