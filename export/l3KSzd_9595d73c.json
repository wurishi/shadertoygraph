{"ver":"0.1","info":{"id":"l3KSzd","date":"1720387200","viewed":24,"name":"Hyperbolic Mod Fastaro Fractal","username":"robfast","description":"time invariant Pythagorean ratios.  It's a modular form acting on a hyperbolic surface","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","riemann","pythagorean","fastaro"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec2 complexMul(vec2 a, vec2 b) {\n    return vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\n}\n\nvec2 complexDiv(vec2 a, vec2 b) {\n    float denom = b.x*b.x + b.y*b.y;\n    return vec2(\n        (a.x*b.x + a.y*b.y) / denom,\n        (a.y*b.x - a.x*b.y) / denom\n    );\n}\n\nvec2 complexExp(vec2 z) {\n    return exp(z.x) * vec2(cos(z.y), sin(z.y));\n}\n\nvec2 transform(vec2 z) {\n    float log3 = log(3.0);\n    vec2 numerator = vec2(1.0, 0.0) - complexExp(complexMul(vec2(1.0 - z.x, -z.y), vec2(log(cos(iTime*000.5)+21.0) / log3, 0.0)));\n    vec2 denominator = vec2(1.0, 0.0) - complexExp(complexMul(vec2(-z.x, -z.y), vec2(log(cos(iTime*000.5)+21.0) / log3, 0.0)));\n    return complexDiv(numerator, denominator);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / min(iResolution.x, iResolution.y);\n    uv *= 2.0; // Adjust scale\n    \n    // Create grid\n    vec2 gridSize = vec2(220.0, 220.0);\n    vec2 cell = fract(uv * gridSize) - 0.5;\n    vec2 cellIndex = floor(uv * gridSize);\n    \n    // Apply transformation\n    vec2 z = cellIndex / gridSize * vec2(1.0 * log(cos(iTime*000.5)+3.0) / log((77.0+sin(iTime))/2.0));\n    vec2 transformed = transform(z);\n    \n    // Draw grid lines\n    float lineWidth = 0.05;\n    float line = smoothstep(lineWidth, 0.0, abs(cell.x)) + smoothstep(lineWidth, 0.0, abs(cell.y));\n    \n    // Color based on transformed position\n    vec3 col = 0.5 + 0.5 * cos(transformed.xyx + vec3(0, 2, 4));\n    \n    // Combine grid and color\n    col = mix(col, vec3(1.0), line);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}