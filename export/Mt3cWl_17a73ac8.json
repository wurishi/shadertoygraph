{"ver":"0.1","info":{"id":"Mt3cWl","date":"1551632002","viewed":184,"name":"Normal Mapping Plain","username":"Bridgy","description":"Normal mapping, add albedo to iChannel0 and normal map to iChannel1","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["normalmapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //wall is 40x20\n    vec3 wallPos = vec3(((uv.x * 2.0) - 1.0) * 40.0, ((uv.y * 2.0) - 1.0) * 20.0, 0.0); \n    \n\n    vec3 pixelColor = texture(iChannel0, uv).rgb;\n    vec3 norm = texture(iChannel1, uv).rgb;\n    \n    norm = (norm * 2.0) - 1.0;\n    \n    //Light direction (directional)\n    vec3 lightPos = vec3(0.0,0.0,-10.0);\n    vec3 lightDirection = wallPos - lightPos;//vec3(0.0, 0.0, 1.0);\n    lightDirection = normalize(lightDirection);\n    //Light color\n    vec3 lightColor = vec3(1.0, 1.0, 1.0);\n    \n    //\n    //Rotate light vector over time around y axis\n    //\n    float angle = iTime * 0.5;    \n    lightDirection = vec3( lightDirection.z * sin(angle), 0.0, abs(lightDirection.z * cos(angle)));\n    \n    //wall normal\n    vec3 wallNormal = normalize(norm);//vec3(0.0, 0.0, 1.0);\n    \n    //ambient\n    vec3 ambient = pixelColor * 0.1;\n    \n    //diffuse\n    vec3 diffuse = max(dot(lightDirection, wallNormal),0.0) * (pixelColor * lightColor);\n    \n    //specular\n    vec3 eyePos = vec3(0.0,0.0,-10.0);\n    vec3 toEye = normalize(eyePos - wallPos);\n    vec3 reflectLight = normalize(reflect(lightDirection, wallNormal));\n    float specPower = 5.0;\n    vec3 specMaterial = vec3(0.85, 0.77, 0.4);\n    \n    vec3 specColor = pixelColor * specMaterial * pow(max(dot(toEye, reflectLight), 0.0), specPower);\n    specColor = min(specColor, 0.12);\n    \n    \n    // Output to screen\n    fragColor = vec4(ambient + diffuse + specColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}