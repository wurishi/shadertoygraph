{"ver":"0.1","info":{"id":"XctBRN","date":"1732784171","viewed":160,"name":"The universe within tutorial :)","username":"vanshika","description":"came across a cool looking tutorial on youtube and decided to make it.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","stars","constellation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// made with an Art Of Code tutorial https://youtu.be/KGJUl8Teipk?si=6ZQdL4RyjtZsiQlz\n\n# define S smoothstep\n\nfloat DistLine(vec2 p, vec2 a, vec2 b){\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float t = clamp(dot(pa, ba)/dot(ba, ba), 0., 1.);\n    return length(pa - ba*t);\n}\n\nfloat N21(vec2 p){\n    p = fract(p*vec2(244.123, 231.532));\n    p += dot(p, p+464.213);\n    return fract(p.x*p.y);\n}\n\nvec2 N22(vec2 p){\n    float n = N21(p+24.24);\n    return vec2(n, N21(p+n));\n    //return vec2(sin(p.x), cos(p.y));\n}\n\nvec2 GetPos(vec2 id, vec2 offs){\n    vec2 n = N22(id + offs)*iTime;\n    return offs + sin(n)*.4;\n}\n\nfloat Line(vec2 p, vec2 a, vec2 b){\n    float d = DistLine(p, a, b);\n    float m = S(.03, .01,  d);\n    float d2 = length(a-b);\n    m *= S(1.2, .5, d2);//*.5+S(.05, .03, abs(d2-.75));\n    return m;\n}\n\nfloat Layer(vec2 uv){\n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    float m = 0.;\n      \n    vec2 p[9];\n    int i = 0;\n    \n    for(float y=-1.; y <=1.; y++){\n        for(float x=-1.; x <=1.; x++){\n            p[i++] = GetPos(id, vec2(x, y));\n            \n        }\n    }\n    \n    float t = iTime*10.;\n    for(i = 0;i<9; i++){\n        m += Line(gv, p[4], p[i]);\n        vec2 j = (p[i] - gv)*20.;\n        float sparkle = 1./dot(j, j);\n        m += sparkle*(sin(t+fract(p[i]).x*10.)*.5+.5)*.8;   \n    }\n    \n    m += Line(gv, p[1], p[3]);\n    m += Line(gv, p[1], p[5]);\n    m += Line(gv, p[3], p[7]);\n    m += Line(gv, p[5], p[7]);\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float m = 0.;\n    float t = iTime*.1;\n    \n    float gradient = uv.y;\n    float s = sin(t);\n    float c = cos(t);\n    mat2 rot = mat2(c, -s, s, c);\n    uv *= rot;\n    \n    for(float i = 0.; i <=1.; i+=1./5.){\n        float z = fract(i+t);\n        float size = mix(10., .5, z);\n        float fade = S(0., .5, z)*S(1., .8, z);\n        m += Layer(uv*size+i*15.)*fade;\n    \n    }\n    \n    vec3 base = sin(t*5.*vec3(.234, .675, .862))*.4+.6;\n    \n    vec3 col = m*base;//*.1;\n    col -= gradient*base;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}