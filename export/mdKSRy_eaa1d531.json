{"ver":"0.1","info":{"id":"mdKSRy","date":"1681280379","viewed":79,"name":"simple-julia","username":"graygoose","description":"yum yum in the tum","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define MAX_ITERS 150\n\nvoid mainImage(out vec4 O, in vec2 U) {\n  vec2 z = ( 2.*U - iResolution.xy ) / iResolution.y;\n  \n  float t = iTime * .25;\n  \n  vec2 c = vec2(-cos(t)*cos(t), sin(t)*cos(t));\n  \n  O = vec4(0);\n  int i=0;\n  for (; i < MAX_ITERS && dot(z,z) < 4.; i++) \n    z = mat2(z,-z.y,z.x) * z + c;\n  \n  if (i < MAX_ITERS) {\n    float t = float(i)/float(MAX_ITERS);\n    vec3 color = vec3(t-z.x, cos(z.y-c.x)*sin(z.x-c.y), t+z.y);\n    color = 0.5 + 0.5*sin(PI*(color-t));\n    O = vec4(color, 1.0);\n  }\n}\n","name":"Image","description":"","type":"image"}]}