{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Created by inigo quilez - iq/2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n// My entry for the \"2 tweet\" challenge 2015, organized by nimitz: https://www.shadertoy.com/view/4tl3W8.\n//\n// Raymarched, textured, lit and colored stuff, in less than 280 characters.\n//\n// function m() at line 19 is the animated geometry modeling, line 29 is the camera setup, lines 31 amd 32 \n// are the raymarching/intersector and line 34 is the shading (texturing, lighting and colored fog).\n\n// Modified by S. Guillitte\n\n\n\n\nvec3 k = vec3(.32,.5,-.8);\n\nvec3 m( vec3 p )\n{\n    p -= iTime+9.*k;\n\tfor( int i=0; i<16; i++ ) \n        p = reflect( abs(p+k)-7., k );\n    return p;\n}\n\nvoid mainImage( out vec4 f, in vec2 w )\n{\n    vec3 d =  vec3(w,1.0)/iResolution, o = d;\n    \n    for( int i=0; i<99; i++ ) \n        o += d * m(o).x * .7;\n    \n    f = texture( iChannel0, m(o).yz*.1 ) * (.4 + 99.*m(o-k*.01).x) * exp(.04*o.zyyz);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MtX3D4","date":"1422009540","viewed":185,"name":"Atlantide","username":"guil","description":"A fork from IQ's [2TC 15] Flying : https://www.shadertoy.com/view/4ts3DH\nJust parameters tweaks","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","2tweets"],"hasliked":0,"parentid":"","parentname":""}}