{"ver":"0.1","info":{"id":"NlX3WH","date":"1621970309","viewed":165,"name":"Class I: Sampling V2","username":"xarmalarma","description":"sampling version 2:\nMultiple Samples per pixel","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sampling"],"hasliked":0,"parentid":"sls3Rn","parentname":"Class I: Sampling V1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float seed = 0.0;\n\nvec3 bgColor = vec3(0, 1, 1);\n\nfloat random() {\n    return fract(sin(seed++)*43758.5453123);\n}\n\nvec3 sample_function(in float x, in float y) {\n  \n    // Disk: x*x + y*y = r*r\n    /*\n    float s = abs(x*x + y*y);\n    if (s < 0.3) {\n        return vec3(0.8, 0.8, 0.8);\n    }\n    else return bgColor;\n    */\n    \n    // Sine wave: y = Amplitude* Sin(Frequency*x)\n    \n    float s = abs(y*2.0-sin(3.0*x));\n    if (s < 0.001) {\n        return vec3(0, 0, 0);\n    }\n    else return bgColor;\n    \n    \n    \n    // Heart\n    /*\n    x = x*2.5;\n    y = y*2.5;\n    float s = 1.25*y - sqrt(abs(x));\n    if ((x*x + s*s -1.0) < 0.001) {\n        return vec3(1.0, 0.0, 0.0);\n    }\n    else return bgColor;\n    */\n    \n    \n    // 2-d klein bottle\n    /* \n    x = x*5.0;\n    y = y*5.0;\n    \n    float s = (x*x + y*y + 2.0*y -1.0)*(x*x + y*y - 2.0*y -1.0)* (x*x + y*y - 2.0*y -1.0) + 16.0*x*((x*x + y*y - 2.0*y -1.0));\n    if (s < 0.001) {\n        return vec3(abs(x/5.0), abs(y/5.0), 0);\n    }\n    else return bgColor;   \n    */\n}\n\n\nint numSamples = 10;\n/* The main entry point:\n   * This is called for every pixel on the screen \n*/\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n   // fragCoord ranges from \n   //   in x: 0.5 to iResolution.x-0.5\n   //   in y: 0.5 to iResolution.y-0.5\n   // pixel (0,0) is at the bottom left corner\n   \n   float width = iResolution.x;\n   float height = iResolution.y; \n   \n   vec3 samp = vec3(0, 0, 0);\n   seed = 0.0;\n   for (int i=0; i<numSamples; i++) {\n       float x = fragCoord.x + random() - 0.5;\n       float y = fragCoord.y + random() - 0.5;\n   \n       // map (0.5, w-0.5) to (-1, 1)\n       // and (0.5, h-0.5) to (-1, 1)\n       x = (x/width)*2.0 - 1.0;\n       y = (y/height)*2.0 - 1.0;\n       \n       // account for the non-square window\n       float aspectRatio = width/height;\n       y = y/aspectRatio;\n       samp = samp + sample_function(x, y);\n   }\n \n   fragColor = vec4(samp/float(numSamples), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}