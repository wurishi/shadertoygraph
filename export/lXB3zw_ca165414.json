{"ver":"0.1","info":{"id":"lXB3zw","date":"1708301902","viewed":158,"name":"Bisexual Star Field (Cole)","username":"2024team39","description":"Cole's Shader for Game Engines Assignment 1\nIncludes Mouse Controls","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["stars","bi","poggers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Create Layers\n#define NUM_LAYERS 8.\n\n//Rotate Function\nmat2 Rotate(float a)\n{\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\n//Create amount of Stars\nfloat Stars(vec2 uv, float flare)\n{\n    float d = length(uv);\n    float m = .1/d;\n    \n    float rays = max(0., 1.-abs(uv.x*uv.y*1000.));\n    m += rays*flare;\n    uv *= Rotate(3.1415/4.);\n    rays = max(0., 1.-abs(uv.x*uv.y*1000.));\n    m += rays*.3*flare;\n    \n    m *= smoothstep(1., .2, d);\n    return m;\n}\n\n//Random Number Generator\nfloat H2a1(vec2 p)\n{\n    p = fract(p*vec2(144.44, 445.88));\n    p += dot(p, p+88.44);\n    return fract(p.x*p.y);\n}\n\n//Layering the Stars\nvec3 LayeredStars(vec2 uv)\n{\n    vec3 col = vec3(0); \n    \n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    for(int y=-1; y<=1; y++)\n    {\n        for(int x=-1; x<=1; x++)\n        {\n            vec2 offset = vec2(x, y);\n            \n            float n = H2a1(id+offset); //Random between 0 and 1 :)\n            float size = fract(n*484.84);\n            \n            float star = Stars(gv-offset-vec2(n, fract(n*48.))+.5, smoothstep(.84, .48, size));\n            \n            vec3 colour = sin(vec3(.2, .4, .8)*fract(n*4488.48)*4884.8448)*.5+.5;\n            colour = colour*vec3(.1+size,.01,.8);\n            \n            star *= sin(iTime*4.+n*8484.4848)*.5+.5;\n            col +=star*size*colour;\n        }\n     }\n     return col;\n}\n\n//Mash it all together and make it go weeeeeeeeeee\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    //Mouse Controls\n    vec2 M = (iMouse.xy-iResolution.xy*.5)/iResolution.y;\n    \n    float t = iTime*.048;\n    \n    uv += M*4.;\n    uv *= Rotate(t);\n    \n    vec3 col = vec3(0);\n    \n    for(float i=0.; i<1.; i+=1./NUM_LAYERS)\n    {\n        float depth = fract(i+t);\n        float scaling = mix(20., .5, depth);\n        float fadeback = depth*smoothstep(1., .8, depth);\n        col += LayeredStars(uv*scaling+i*484.4-M)*fadeback;\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}