{"ver":"0.1","info":{"id":"tdBGR3","date":"1551328267","viewed":120,"name":"MsPaint Thing","username":"theepicsnail","description":"draw","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["drawing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n    \n    //float d = 1.0-clamp(min(abs(fragCoord.x-iMouse.x), abs(fragCoord.y-iMouse.y)),0.,1.0);\n    //fragColor=abs(d-fragColor);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define theme_bg vec3(.9)\n#define theme_indent_light vec3(.8)\n#define theme_indent_dark  vec3(.5)\n#define theme_indent_depth -4.0\n\n#define pen_size 5.0\n\n#define palette_bar_height 48.0\n#define tool_bar_width 48.0\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\n\nvec2 PX;\nvec2 UV;\nvec3 COLOR;\n\nvec3 PAINT_COLOR;\nvec2 PAINT_COLOR_UV = vec2(palette_bar_height/2.0);\n\nvoid swatch(vec2 pos, vec2 size, vec3 color) {\n    vec2 delta = pos-iMouse.xy;\n    vec2 dist_from_edge = abs(delta)-size;\n    \n    bool selected = false;\n    if(max(dist_from_edge.x, dist_from_edge.y)<0.0){\n    \tPAINT_COLOR = color;\n        selected = true;\n    }\n    \n    \n    delta = PX-pos;\n    dist_from_edge = abs(delta)-size;\n    \n    float d = max(dist_from_edge.x, dist_from_edge.y);\n    if(d>0.0) return;\n    \n    if(d<theme_indent_depth) COLOR=color;\n    else\n        COLOR = (delta.x < delta.y)!=selected ? theme_indent_light : theme_indent_dark;\n}\nvoid palette() {\n    COLOR=theme_bg;\n    float h2 = palette_bar_height/2.0;\n    float h4 = palette_bar_height/4.0;\n    \n    float x = h4*5.0;\n    \n    for(int i = 0; i < 4; i++) {\n        vec3 c = vec3(i&1,(i&2)/2,0);\n        swatch(vec2(x,h4),     vec2(h4-2.0), c);\n    \tswatch(vec2(x,h4*3.0), vec2(h4-2.0), abs(vec3(1.0)-c));\n    \tx += h2;\n    }\n    \n\tswatch(vec2(h2), vec2(h2-2.0), PAINT_COLOR);   \n}\n\nvoid toolbar() {\n    COLOR=vec3(0,0,0);\n}\nvoid canvas() {\n    COLOR = texture(iChannel0, UV).rgb;\n    if(iMouse.y < palette_bar_height)\n        return;\n    if(length(iMouse.xy-PX)>pen_size)\n        return;\n    \n    \n    \n    //if(fract(iTime+noise(PX-iMouse.xy)*100.0) > .1)\n    //        return;\n        \n    COLOR=PAINT_COLOR;\n    \n \n}\n\nvoid paint() {\n    if(PX.y<palette_bar_height)\n        palette();\n    //else if(PX.x < tool_bar_width)\n    //    toolbar();\n    else\n        canvas();\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    PAINT_COLOR = texture(iChannel0, PAINT_COLOR_UV/iResolution.xy).rgb;\n    COLOR = theme_bg;\n\tPX=fragCoord;\n    UV=PX/iResolution.xy;\n    paint();\n    fragColor.rgb=clamp(COLOR,0.,1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}