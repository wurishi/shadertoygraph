{"ver":"0.1","info":{"id":"mddcRH","date":"1695000088","viewed":28,"name":"Value Noise Test 9/17/23","username":"Tyconic","description":"Value Noise","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","value"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 cubic(vec2 p) {\n  return p * p * (3.0 - 2.0 * p);\n}\n\nvec2 quintic(vec2 p) {\n  return p * p * p * (10.0 + p * (-15.0 + p * 6.0));\n}\n\nfloat whiteNoise(vec2 p){\n    float random = dot(p, vec2(12, 200));\n    random = sin(random);\n    random = random * 43758.89078;\n    random = fract(random);\n    return random;\n}\n\nfloat valueNoise(vec2 uv){\n    //Center Screen UVS and Tile\n    vec2 gridUV = fract(uv);\n    vec2 gridID = floor(uv);\n    \n    //Smoothstep griduvs\n    gridUV = quintic(gridUV);\n    \n    //Lerp between bottom two coordinates\n    float bottomLeft = whiteNoise(gridID);\n    float bottomRight = whiteNoise(gridID + vec2(1.0, 0.0));\n    float bottomLerp = mix(bottomLeft, bottomRight, gridUV.x);\n    \n    //Lerp between top two coordinates\n    float topLeft = whiteNoise(gridID + vec2(0.0, 1.0));\n    float topRight = whiteNoise(gridID + vec2(1.0, 1.0));\n    float topLerp = mix(topLeft, topRight, gridUV.x);\n    \n    //Lerp between top and bottom\n    float valueNoise = mix(bottomLerp, topLerp, gridUV.y);\n    return valueNoise;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Set up UV\n    vec2 uv = fragCoord/iResolution.y;\n\n    //Set color to black\n    vec3 color = vec3(0.0);\n    \n    //Octaves\n    float vn = 0.0;\n    float Scale = 16.0;\n    for(float i = 1.0; i < 8.0; i += 1.0){\n    vn += valueNoise(uv * (Scale * i)) * (1.0 / i);\n    }\n\n    vn /= 2.0;\n    color = vec3(vn);\n\n    //Display Color\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}