{"ver":"0.1","info":{"id":"ldtcDS","date":"1520106264","viewed":106,"name":"Traffic","username":"Pr0fed","description":"https://thebookofshaders.com/10/ tweaked and changed here and there.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in float x) {\n    return fract(sin(x)*1e5);\n}\n\nfloat random (in vec2 st) {\n    return fract(cos(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat pattern(vec2 st, vec2 v, float t) {\n    vec2 p = floor(st + v);\n    return step(t, random(100. + p *.0001) + random(p.y) * 0.5 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy / iResolution.xy;\n    st.x *= iResolution.x / iResolution.y;\n\n    vec2 grid = vec2(50.0, 25.);\n    st *= grid;\n\n    vec2 ipos = floor(st);\n    vec2 fpos = fract(st);\n\n    // Time.\n    vec2 vel = vec2(iTime * 0.1 * max(grid.y, grid.x)); \n    \n    // Direction.\n    vel *= vec2(0., -1.2) * random(1.0 + ipos.x);\n    \n    // Backward moving.\n    if(fpos.x * 0.5 < 0.25)\n    {\n       vel.y *= -1.;\n    }\n\n    // Assign a random value base on the integer coord.\n    vec2 offset = vec2(0.1, 0.1);\n\n    vec3 color = vec3(0.);\n    color.r = pattern(st + offset, vel, 0.3 + clamp(abs(sin(iTime* 0.4)), 0.2, 0.8));\n    color.g = pattern(st , vel, 0.3 + clamp(abs(sin(iTime * 0.4)), 0.2, 0.8));\n    color.b = pattern(st - offset, vel, 0.3 + clamp(abs(sin(iTime* 0.4)), 0.2, 0.8));\n\n    // Margins\n    color *= step(0.1, fpos.x);\n\n    fragColor = vec4(1.0 - color, 1.0);\n}","name":"Image","description":"","type":"image"}]}