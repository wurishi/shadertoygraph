{"ver":"0.1","info":{"id":"7dfyzB","date":"1642279307","viewed":298,"name":"Fireblender","username":"oneshade","description":"Inspired by @SnoopethDuckDuck's Fractal Rope series.","likes":32,"published":3,"flags":32,"usePreview":0,"tags":["fractal","fire","feedback","blender"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = 0.5 * texture(iChannel0, uv);\n    fragColor += 0.75 * texture(iChannel1, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define iTimeDelta 0.025\n#define iTime (float(iFrame) * iTimeDelta)\n\nmat2 Rotate2D(in float a) {\n    float co = cos(a), si = sin(a);\n    return mat2(co, -si, si, co);\n}\n\nfloat sdBox(in vec2 p, in vec2 b) {\n    p = abs(p) - b;\n    return length(max(p, 0.0)) + min(0.0, max(p.x, p.y));\n}\n\n#define drawSDF(dist, col) color = mix(color, col, smoothstep(unit, 0.0, dist))\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float unit = 2.0 / iResolution.y;\n\n    vec2 st = 0.99 * (fragCoord / iResolution.xy - 0.5) + 0.5;\n    vec3 color = texture(iChannel0, st).rgb * 0.98;\n\n    color.g *= 0.95;\n    color.b *= 0.1;\n\n    float scale = 1.0;\n    for (int i=0; i < 10; i++) {\n        uv *= Rotate2D(iTime);\n        drawSDF(sdBox(uv, vec2(0.05)) / scale, vec3(1.0));\n        vec2 flip = sign(uv);\n        uv = abs(uv) - 0.2;\n        uv *= 2.5 * flip;\n        scale *= 2.0;\n    }\n\n    fragColor = vec4(color, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define WIDTH 30.0\n#define HEIGHT 30.0\n#define BLUR 10.0\n\nfloat gaussian(in float x, in float sigma) {\n    x /= sigma;\n    return 0.398942280401 / (sigma * exp(0.5 * x * x)); // 0.398942280401 ~ 1/sqrt(2Ï€)\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(0.0);\n    float total = 0.0;\n    for (float x=-WIDTH; x < WIDTH; x++) {\n        float weight = gaussian(x, BLUR);\n        fragColor += vec4(texture(iChannel0, (fragCoord + vec2(x, 0.0)) / iResolution.xy).rgb * weight, weight);\n    }\n\n    fragColor.rgb /= fragColor.w;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(0.0);\n    float total = 0.0;\n    for (float y=-HEIGHT; y < HEIGHT; y++) {\n        float weight = gaussian(y, BLUR);\n        fragColor += vec4(texture(iChannel0, (fragCoord + vec2(0.0, y)) / iResolution.xy).rgb * weight, weight);\n    }\n\n    fragColor.rgb /= fragColor.w;\n}","name":"Buffer C","description":"","type":"buffer"}]}