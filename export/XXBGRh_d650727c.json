{"ver":"0.1","info":{"id":"XXBGRh","date":"1708160868","viewed":121,"name":"Gaussian Blur Zongzi","username":"zongzi","description":"Gaussian Blur with camera","likes":2,"published":1,"flags":34,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float offset = 1.0 / 500.0;\n    vec2 offsets[9] = vec2[9](\n    vec2(-offset,offset),vec2(0.0,offset),vec2(offset,offset),\n    vec2(-offset,0.0),vec2(0.0,0.0),vec2(offset,0.0),\n    vec2(-offset,-offset),vec2(0.0,-offset),vec2(offset,-offset)\n    );\n    \n    float kernel[9] = float[9](\n    (1.0/16.0),(2.0/16.0),(1.0/16.0),\n    (2.0/16.0),(4.0/16.0),(2.0/16.0),\n    (1.0/16.0),(2.0/16.0),(1.0/16.0)\n    );\n    \n    vec3 sampletTex[9];\n    \n    for(int i=0;i<9;i++)\n\t{\n\t\tsampletTex[i]=vec3(texture(iChannel0,uv+offsets[i]));\n\t}\n    vec3 color=vec3(0.0);\n\tfor(int i=0;i<9;i++)\n\t{\n\t\tcolor += sampletTex[i]*kernel[i];\n\t}\n    fragColor =vec4(color,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float offset = 1.0 / 100.0;\n    vec2 offsets[9] = vec2[9](\n    vec2(-offset,offset),vec2(0.0,offset),vec2(offset,offset),\n    vec2(-offset,0.0),vec2(0.0,0.0),vec2(offset,0.0),\n    vec2(-offset,-offset),vec2(0.0,-offset),vec2(offset,-offset)\n    );\n    \n    float kernel[9] = float[9](\n    (1.0/16.0),(2.0/16.0),(1.0/16.0),\n    (2.0/16.0),(4.0/16.0),(2.0/16.0),\n    (1.0/16.0),(2.0/16.0),(1.0/16.0)\n    );\n    \n    vec3 sampletTex[9];\n    \n    for(int i=0;i<9;i++)\n\t{\n\t\tsampletTex[i]=vec3(texture(iChannel0,uv+offsets[i]));\n\t}\n    vec3 color=vec3(0.0);\n\tfor(int i=0;i<9;i++)\n\t{\n\t\tcolor += sampletTex[i]*kernel[i];\n\t}\n    fragColor =vec4(color,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float offset = 1.0 / 200.0;\n    vec2 offsets[9] = vec2[9](\n    vec2(-offset,offset),vec2(0.0,offset),vec2(offset,offset),\n    vec2(-offset,0.0),vec2(0.0,0.0),vec2(offset,0.0),\n    vec2(-offset,-offset),vec2(0.0,-offset),vec2(offset,-offset)\n    );\n    \n    float kernel[9] = float[9](\n    (1.0/16.0),(2.0/16.0),(1.0/16.0),\n    (2.0/16.0),(4.0/16.0),(2.0/16.0),\n    (1.0/16.0),(2.0/16.0),(1.0/16.0)\n    );\n    \n    vec3 sampletTex[9];\n    \n    for(int i=0;i<9;i++)\n\t{\n\t\tsampletTex[i]=vec3(texture(iChannel0,uv+offsets[i]));\n\t}\n    vec3 color=vec3(0.0);\n\tfor(int i=0;i<9;i++)\n\t{\n\t\tcolor += sampletTex[i]*kernel[i];\n\t}\n    fragColor =vec4(color,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float offset = 1.0 / 300.0;\n    vec2 offsets[9] = vec2[9](\n    vec2(-offset,offset),vec2(0.0,offset),vec2(offset,offset),\n    vec2(-offset,0.0),vec2(0.0,0.0),vec2(offset,0.0),\n    vec2(-offset,-offset),vec2(0.0,-offset),vec2(offset,-offset)\n    );\n    \n    float kernel[9] = float[9](\n    (1.0/16.0),(2.0/16.0),(1.0/16.0),\n    (2.0/16.0),(4.0/16.0),(2.0/16.0),\n    (1.0/16.0),(2.0/16.0),(1.0/16.0)\n    );\n    \n    vec3 sampletTex[9];\n    \n    for(int i=0;i<9;i++)\n\t{\n\t\tsampletTex[i]=vec3(texture(iChannel0,uv+offsets[i]));\n\t}\n    vec3 color=vec3(0.0);\n\tfor(int i=0;i<9;i++)\n\t{\n\t\tcolor += sampletTex[i]*kernel[i];\n\t}\n    fragColor =vec4(color,1.0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float offset = 1.0 / 400.0;\n    vec2 offsets[9] = vec2[9](\n    vec2(-offset,offset),vec2(0.0,offset),vec2(offset,offset),\n    vec2(-offset,0.0),vec2(0.0,0.0),vec2(offset,0.0),\n    vec2(-offset,-offset),vec2(0.0,-offset),vec2(offset,-offset)\n    );\n    \n    float kernel[9] = float[9](\n    (1.0/16.0),(2.0/16.0),(1.0/16.0),\n    (2.0/16.0),(4.0/16.0),(2.0/16.0),\n    (1.0/16.0),(2.0/16.0),(1.0/16.0)\n    );\n    \n    vec3 sampletTex[9];\n    \n    for(int i=0;i<9;i++)\n\t{\n\t\tsampletTex[i]=vec3(texture(iChannel0,uv+offsets[i]));\n\t}\n    vec3 color=vec3(0.0);\n\tfor(int i=0;i<9;i++)\n\t{\n\t\tcolor += sampletTex[i]*kernel[i];\n\t}\n    fragColor =vec4(color,1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}