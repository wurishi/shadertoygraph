{"ver":"0.1","info":{"id":"tltcWn","date":"1608830040","viewed":97,"name":"Magic scepter","username":"Tarquin","description":"Magic scepter made of glowing sinuso√Ødes.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sin","glow","magic","scepter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Arthur Jacquin - 2020\n// https://www.linkedin.com/in/arthur-jacquin-631921153/\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define PI 3.14159265359\n\nfloat HLine(vec2 uv, float ypos, float s)\n{\n    float res = 1.0;\n    res *= smoothstep(ypos - s, ypos - s + 0.01, uv.y);\n    res *= smoothstep(ypos + s + 0.01, ypos + s, uv.y);\n\n    return res;\n}\n\nvec3 GlowingLine(vec2 fragCoord, vec3 color, float hoffset, float voffset, float hscale, float vscale, float timescale)\n{\n    float glowRadius = 0.03 * iResolution.x * (fragCoord.y / iResolution.y + 1.0) ;\n    float glowIntensity = 1.0 * fragCoord.y / iResolution.y;\n    float twopi = 2.0 * PI;\n    float thickness = 1.5;\n    float curve = thickness - abs(fragCoord.x - (sin(mod(fragCoord.y * hscale / 100.0 / iResolution.y * 1000.0  + hoffset, twopi)) * iResolution.x * 0.5 * vscale + voffset));\n    float i = clamp(curve, 0.0, 1.0);\n\n    i += clamp((glowRadius + curve) / glowRadius, 0.0, 1.0) * glowIntensity;\n    return i * color;\n}\n\nvec3 rainbowGradient(float t) {\n\tvec3 c = 1.0 - pow(abs(vec3(t) - vec3(0.65, 0.5, 0.2)) * vec3(3.0, 3.0, 5.0), vec3(1.5, 1.3, 1.7));\n\tc.r = max(0.15 - (abs(t - 0.04) * 5.0) * (abs(t - 0.04) * 5.0), c.r);\n\tc.g = (t < 0.5) ? smoothstep(0.04, 0.45, t) : c.g;\n\treturn clamp(c, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y; \n\n    vec3 color = vec3(0.0039, 0.0039, 0.1922);\n\n    color += GlowingLine(fragCoord.xy, rainbowGradient(0.22), 0.0 + 2.6, iResolution.x / 2.0, 1.0, 0.5 * abs(sin(iTime)) * uv.y, 5.0);\n    color += GlowingLine(fragCoord.xy, rainbowGradient(0.22), PI + 2.6, iResolution.x / 2.0, 1.0, 0.5 * abs(sin(iTime + PI)) * uv.y, 5.0);\n    color += GlowingLine(fragCoord.xy, rainbowGradient(0.22), PI + 2.66, iResolution.x / 2.0, 1.0, 0.5 * sin(iTime + PI * 0.5) * uv.y, 5.0);\n    color += GlowingLine(fragCoord.xy, rainbowGradient(0.22), PI + 2.6, iResolution.x / 2.0, 1.0, 0.5 * sin(iTime - PI * 0.5) * uv.y, 5.0);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}