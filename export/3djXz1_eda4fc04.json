{"ver":"0.1","info":{"id":"3djXz1","date":"1552947613","viewed":148,"name":"XOR the slow way","username":"matonga","description":"XOR texture with floating point operations","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["xorproceduraltexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = mod (fragCoord, 256.0);\n\n    // Time varying pixel color\n    float color = 0.0, m = 128.0;\n    for (int i=0; i<8; i++) {\n        if ((uv.x - m) * (uv.y - m) < 0.0) {\n            color += m;\n        }\n        uv = mod (uv, m);\n        m *= .5;\n    }\n\n    // Output to screen\n    fragColor = vec4(vec3(color/256.0),1.0);\n}","name":"Image","description":"","type":"image"}]}