{"ver":"0.1","info":{"id":"3dXfWH","date":"1588102278","viewed":242,"name":"Scatter Colors (simplified)","username":"izutionix","description":"basically [url=https://www.shadertoy.com/view/tdlfDr]this shader[/url] but without the hsv conversion functions\nmouse x controls input value\nmouse y controls input saturation","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["colors","scatter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 ScatterColors(float g, vec3 c) //gradient, color\n{\n    vec3 g3 = vec3(g);\n    vec3 G1 = pow(c, g3);\n    vec3 G2 = 1.-pow(vec3(1.)-c, 1.-g3);\n    \n    vec3 A = G1*(1.-G1);\n    vec3 B = G2*(1.-G2);\n    \n    return 4.5*mix(A, B, g3);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = vec3(0., 0.3, 1.);//vec3 col = vec3(.009, .288, .828);\n    vec3 hsv = vec3(.57, .9, .5);\n    if (iMouse.xy!=vec2(0))\n\t\thsv.zy += iMouse.xy/iResolution.xy-vec2(.5,.9);\n\tcol = mix(vec3(1.), col, hsv.yyy);\n\tcol *= hsv.z;\n    \n    col = ScatterColors(uv.x, col); //comment to see better what is going on\n    col = ScatterColors(uv.y, col);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}