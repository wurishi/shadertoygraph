{"ver":"0.1","info":{"id":"ltsXRs","date":"1439139947","viewed":276,"name":"[SIG15] city demo","username":"yasuo","description":"well... My first competition try out. It's simple 3d stuff.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","demo","sig15"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\t\t\n\n\t\t#define NEAR 0.1\n\t\t#define FAR 100.\n\t\t#define ITER 64\n\n\t\t#define PI\t3.14159265359\n\t\t#define PIH\t(PI/2.0)\n\t\t#define PI2\t(PI*2.0)\n\n\t\tfloat gt;\n\t\tfloat gtime;\n\n\t\tfloat c_0 = 31599.0;\n\t\tfloat c_1 = 9362.0;\n\t\tfloat c_2 = 29671.0;\n\t\tfloat c_3 = 29391.0;\n\t\tfloat c_4 = 23497.0;\n\t\tfloat c_5 = 31183.0;\n\t\tfloat c_6 = 31215.0;\n\t\tfloat c_7 = 29257.0;\n\t\tfloat c_8 = 31727.0;\n\t\tfloat c_9 = 31695.0;\n\n\n\t\t// from http://glslsandbox.com/e#26519.0 Thanks\n\t\tvec3 target;\n\t\tvec3 forward = vec3(0.0, -0.1, 0.0);\n\t\tvec4 quaternion(vec3 p, float a)\n\t\t{\n\t\t\treturn vec4(p*sin(a/2.0),cos(a/2.0));\n\t\t}\n\n\t\tvec3 qtransform(vec4 q, vec3 v)\n\t\t{\n\t\t\treturn v+2.0*cross(cross(v,q.xyz)-q.w*v,q.xyz);\n\t\t}\n\t\t// ========\n\n\t\tmat4 matRotateX(float rad)\n\t\t{\n\t\t\treturn mat4(1,       0,        0,0,\n\t\t\t\t\t\t0,cos(rad),-sin(rad),0,\n\t\t\t\t\t\t0,sin(rad), cos(rad),0,\n\t\t\t\t\t\t0,       0,        0,1);\n\t\t}\n\n\t\tmat4 matRotateY(float rad)\n\t\t{\n\t\t\treturn mat4( cos(rad),0,-sin(rad),0,\n\t\t\t\t\t\t 0,       1,        0,0,\n\t\t\t\t\t\t sin(rad),0, cos(rad),0,\n\t\t\t\t\t\t 0,       0,        0,1);\n\t\t}\n\n\t\tmat4 matRotateZ(float rad)\n\t\t{\n\t\t\treturn mat4(cos(rad),-sin(rad),0,0,\n\t\t\t\t\t\tsin(rad), cos(rad),0,0,\n\t\t\t\t\t\t       0,        0,1,0,\n\t\t\t\t\t\t\t   0,        0,0,1);\n\t\t}\n\n\t\t// this code from GLSL sandbox\n\t\t//returns 0/1 based on the state of the given bit in the given number\n\t\tfloat getBit(float num,float bit)\n\t\t{\n\t\t\tnum = floor(num);\n\t\t\tbit = floor(bit);\n\t\t\t\n\t\t\treturn float(mod(floor(num/pow(2.,bit)),2.) == 1.0);\n\t\t}\n\n\t\tfloat Sprite3x5(float sprite,vec2 p)\n\t\t{\n\t\t\tfloat bounds = float(all(lessThan(p,vec2(3,5))) && all(greaterThanEqual(p,vec2(0,0))));\n\t\t\t\n\t\t\treturn getBit(sprite,(2.0 - p.x) + 3.0 * p.y) * bounds;\n\t\t}\n\n\t\tfloat Digit(float num,vec2 p)\n\t\t{\n\t\t\tnum = mod(floor(num),10.0);\n\t\t\t\n\t\t\tif(num == 0.0) return Sprite3x5(c_0,p);\n\t\t\tif(num == 1.0) return Sprite3x5(c_1,p);\n\t\t\tif(num == 2.0) return Sprite3x5(c_2,p);\n\t\t\tif(num == 3.0) return Sprite3x5(c_3,p);\n\t\t\tif(num == 4.0) return Sprite3x5(c_4,p);\n\t\t\tif(num == 5.0) return Sprite3x5(c_5,p);\n\t\t\tif(num == 6.0) return Sprite3x5(c_6,p);\n\t\t\tif(num == 7.0) return Sprite3x5(c_7,p);\n\t\t\tif(num == 8.0) return Sprite3x5(c_8,p);\n\t\t\tif(num == 9.0) return Sprite3x5(c_9,p);\n\t\t\t\n\t\t\treturn 0.0;\n\t\t}\n\n\t\tvec3 digitTex(vec2 position)\n\t\t{\n\t\t\tposition = position*vec2(4,3);\n\n\t\t\tposition.x = mod(position.x, 8.0)-4.0;\n\t\t\tposition.y = mod(position.y, 14.0)-7.0;\n\n\t\t\tvec2 cpos = vec2(1.0);\n\t\t\tfloat dc = Digit(fract(iTime)*10.0,floor(position-cpos));\n\t\t\tvec3 cl2 = vec3(dc)*vec3(1,1,1);\t\n\t\t\treturn cl2;\n\t\t}\n\n\t\tvec3 lineTex(vec2 uv)\n\t\t{\n\t\t\treturn vec3(tan((uv.x+uv.y+(-iTime/10.0))*10.0)*10.0,tan((uv.x+uv.y+(-iTime/10.0))*10.0)*10.0,tan((uv.x+uv.y+(-iTime/10.0))*10.0)*10.0);\n\t\t}\n\n\t\t// Mr. iq's distance functions \n\t\tfloat udBox( vec3 p, vec3 b )\n\t\t{\n\t\t\treturn length(max(abs(p)-b,0.0));\n\t\t}\n\n\t\tfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n\t\t{\n\t\t\tvec3 pa = p-a, ba = b-a;\n\t\t\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\t\t\treturn length( max(abs(pa - ba*h), 0.0));\n\t\t}\n\n\t\tvec4 mapCube( vec3 pos, vec3 cl)\n\t\t{\n\t\t\tfloat dist = udBox(  pos , vec3(3.0,6.0,3.0));\n\t\t\treturn vec4( cl, dist );\n\t\t}\n\n\t\tvec4 combine(vec4 val1, vec4 val2 )\n\t\t{\n\t\t\tif ( val1.w < val2.w ) return val1;\n\t\t\treturn val2;\n\t\t}\n\n\t\tfloat ship(vec3 p)\n\t\t{\n\t\t\tp += target;\n\t\t\tvec4 q = quaternion(forward, iTime);\n\t\t\tp = qtransform(q, p);\n\t\t\tvec4 newP = vec4(p.xyz,1.0);\n\t\t\tfloat f1 = length(newP.xyz)-2.0;\n\n\t\t\treturn f1;\n\t\t}\n\n\t\tvec3 course(float a)\n\t\t{\n\t\t\treturn vec3(\n\t\t\t\tcos(a)*35.0,\n\t\t\t\t0.0,\n\t\t\t\tsin(2.0*a)*25.0\n\t\t\t);\n\t\t}\n\t\t\n\t\tfloat cubicInOut(float t) {\n\t\t  return t < 0.5\n\t\t    ? 4.0 * t * t * t\n\t\t    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\n\t\t}\n\n\t\tfloat ind = 0.0;\n\t\tvec4 map( vec3 pos, mat4 m, mat4 m2)\n\t\t{\n\t\t\tvec4 qf = vec4(pos+vec3(0,0,-50.0),1.0)*m;\n\t\t\tvec4 q = vec4(pos+vec3(0,0,-50.0),1.0)*m;\n\t\t\t\n\t\t\tqf.x = mod(qf.x, 16.0)-8.0;\n\t\t\tqf.z = mod(qf.z, 16.0)-8.0;\n\n\n\t\t\tvec3 lTex = lineTex(pos.xy);\n\n\t\t\tvec4 localCube = vec4(qf.xyz + vec3( 0, 10.0, 0 ),1.0)*m2;\n\t\t\tvec4 val1 = mapCube(localCube.xyz, vec3(0.03)+digitTex(pos.xy)*lTex );\n\t\t\tind++;\n\t\t\t\n\t\t\tint index = 0;\n\t\t\tfloat startA = (float(index))*PI2/float(10);\n\t\t\tvec3 startB = course(startA*3.0);\n\t\t\tindex++;\n\n\t\t\tfloat targetY = 1.5;\n\t\t\tfloat targetZ = 0.0;\n\t\t\tfloat s = 1.0;\n\t\t\tfloat a = (float(index))*PI2/float(10);\n\t\t\tvec3 b = course(a*s);\n\n\t\t\tvec4 val2 = vec4(lTex,sdCapsule(q.xyz + vec3( 0, targetY, targetZ ),startB,b,0.1));\n\t\t\t\n\t\t\tindex++;\n\t\t\tfloat a2 = (float(index))*PI2/float(10);\n\t\t\tvec3 b2 = course(a2*s);\n\n\t\t\tvec4 val3 = vec4(lTex,sdCapsule(q.xyz + vec3( 0, targetY, targetZ ),b,b2,0.1));\n\t\t\t\n\t\t\tindex++;\n\t\t\tfloat a3 = (float(index))*PI2/float(10);\n\t\t\tvec3 b3 = course(a3*s);\n\n\t\t\tvec4 val4 = vec4(lTex,sdCapsule(q.xyz + vec3( 0, targetY, targetZ ),b2,b3,0.1));\n\t\t\t\n\t\t\tindex++;\n\t\t\tfloat a4 = (float(index))*PI2/float(10);\n\t\t\tvec3 b4 = course(a4*s);\n\n\t\t\tvec4 val5 = vec4(lTex,sdCapsule(q.xyz + vec3( 0, targetY, targetZ ),b3,b4,0.1));\n\t\t\t\n\t\t\tindex++;\n\t\t\tfloat a5 = (float(index))*PI2/float(10);\n\t\t\tvec3 b5 = course(a5*s);\n\n\t\t\tvec4 val6 = vec4(lTex,sdCapsule(q.xyz + vec3( 0, targetY, targetZ ),b4,b5,0.1));\n\t\t\t\n\t\t\tindex++;\n\t\t\tfloat a6 = (float(index))*PI2/float(10);\n\t\t\tvec3 b6 = course(a6*s);\n\n\t\t\tvec4 val7 = vec4(lTex,sdCapsule(q.xyz + vec3( 0, targetY, targetZ ),b5,b6,0.1));\n\n\t\t\tindex++;\n\t\t\tfloat a7 = (float(index))*PI2/float(10);\n\t\t\tvec3 b7 = course(a7*s);\n\n\t\t\tvec4 val8 = vec4(lTex,sdCapsule(q.xyz + vec3( 0, targetY, targetZ ),b6,b7,0.1));\n\n\t\t\tindex++;\n\t\t\tfloat a8 = (float(index))*PI2/float(10);\n\t\t\tvec3 b8 = course(a8*s);\n\n\t\t\tvec4 val9 = vec4(lTex,sdCapsule(q.xyz + vec3( 0, targetY, targetZ ),b7,b8,0.1));\n\n\t\t\tindex++;\n\t\t\tfloat a9 = (float(index))*PI2/float(10);\n\t\t\tvec3 b9 = course(a9*s);\n\n\t\t\tvec4 val10 = vec4(lTex,sdCapsule(q.xyz + vec3( 0, targetY, targetZ ),b8,b9,0.1));\n\n\t\t\tindex++;\n\t\t\tfloat a10 = (float(index))*PI2/float(10);\n\t\t\tvec3 b10 = course(a10*s);\n\n\t\t\tvec4 val11 = vec4(lTex,sdCapsule(q.xyz + vec3( 0, targetY, targetZ ),b9,b10,0.1));\n\n\n\t\t\tvec2 cpos = vec2(1.0);\n\t\t\tfloat dc = Digit(0.0,vec2(0.2,0.1));\n\t\t\tvec3 cl2 = vec3(dc)*vec3(1,1,1);\n\t\t\tvec4 val12 = vec4( vec3(0.07)+digitTex(pos.xy)*lTex, ship(q.xyz+ vec3( 0, 1.0, 0 )));\n\n\t\t\tvec4 val13 = combine ( val1, val2 );\n\t\t\tvec4 val14 = combine ( val3, val4 );\n\t\t\tvec4 val15 = combine ( val5, val6 );\n\t\t\tvec4 val16 = combine ( val7, val8 );\n\t\t\tvec4 val17 = combine ( val9, val10 );\n\t\t\tvec4 val18 = combine ( val11, val12 );\n\t\t\tvec4 val19 = combine ( val13, val14 );\n\t\t\tvec4 val20 = combine ( val15, val16 );\n\t\t\tvec4 val21 = combine ( val17, val18 );\n\t\t\tvec4 val22 = combine ( val19, val20 );\n\t\t\tvec4 val23 = combine ( val21, val22 );\n\t\t\treturn val23;\n\t\t}\n\t\t\n\t\tvec2 rot(vec2 p, float a) {\n\t\t\treturn vec2(\n\t\t\t\tcos(a) * p.x - sin(a) * p.y,\n\t\t\t\tsin(a) * p.x + cos(a) * p.y);\n\t\t}\n\n\t\tvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n\t\t{\n\t\t\tgt = iTime*0.5;\n\t\t\tvec2 position = ( fragCoord.xy / iResolution.xy );\n\t\t\tposition -= .5;\n\n\t\t\t// post effect\n\t\t\tfloat effectActive = mod(iTime,18.0);\n\t\t\tif(effectActive>9.0 && effectActive<= 18.0)\n\t\t\t{\n\t\t\t\tposition.y += (sin((position.x + (iTime * 0.5)) * 6.0) * 0.1) + (sin((position.x + (iTime * 0.2)) * 22.0) * 0.01);\n\t\t\t}\n\n\t\t\tvec3 dir = vec3( position, 1.0 );\n\n         \tfloat aspect = iResolution.x / iResolution.y;\n         \tdir = normalize(vec3(position * vec2(aspect, 1.0), 1.0));\n\t\t \tdir.yz = rot(dir.yz, 0.1);\n\n\t\t\tvec3 ro = course(iTime*0.6);\n\t\t\tro.z += 0.15;\n\t\t\ttarget = course((iTime*0.6)-0.3);\n\t\t\ttarget.z += 0.1;\n\t\t \tvec3 pos = vec3(0.0, 0.0, 35.0)-target;\n\n\t\t\tvec3 diff = normalize(target-ro);\n\t\t\tvec3 axis = cross(forward, diff);\n\n\t\t\t// from http://glslsandbox.com/e#26519.0 Thanks\n\t\t\tfloat angle = acos(dot(forward, diff));\n\t\t\tvec4 q = quaternion(axis, angle);\n\t\t\tdir = qtransform(q, dir);\n\t\t\tforward = qtransform(q, forward);\n\t\t\tq = quaternion(forward, atan(axis.x, axis.y)-PIH);\n\t\t\tdir = qtransform(q, dir);\n\t\t\t// ====\n\n\t\t\tmat4 m = matRotateZ(0.0);\n\n\t\t\tfloat tt = floor(gt);\n\t\t    float ff = fract(gt);\n\t\t    tt += cubicInOut(2. - exp(-ff*5.));\n\t\t    gtime = tt;\n\n\t\t\tmat4 mm = matRotateY(iTime*1.9);\n\n\t\t\tvec4 result;\n\t\t\tfor (int i =0; i < ITER; i++)\n\t\t\t{\n\t\t\t\tresult = map(pos, m, mm);\n\t\t\t\tif (result.w < NEAR || result.w > FAR) break;\n\t\t\t\tpos += result.w * dir;\n\t\t\t}\n\n\t\t\tvec3 col = map(pos, m, mm).xyz;\n\t\t\tif ( pos.z> 100. )\n\t\t\t{\n\t\t\t    col = vec3(0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvec3 lightPos = vec3(20.0, 20.0, 20.0 );\n\t\t\t\tvec3 light2Pos = normalize( lightPos - pos);\n\t\t\t\tvec3 eps = vec3( .1, .01, .0 );\n\t\t\t\tvec3 n = vec3( result.w - map( pos - eps.xyy, m, mm ).w,\n\t\t\t\t\t       result.w - map( pos - eps.yxy, m, mm ).w,\n\t\t\t\t\t       result.w - map( pos - eps.yyx, m, mm ).w );\n\t\t\t\tn = normalize(n);\n\t\t\t\t\t\t\n\t\t\t\tfloat lambert = max(.0, dot( n, light2Pos));\n\t\t\t\tcol *= vec3(lambert);\n\n\t\t\t\tcol += vec3(result.xyz) ;\n\t\t\t}\n\n\t\t\tfragColor = vec4( col, 1.0);\n\t\t}","name":"Image","description":"","type":"image"}]}