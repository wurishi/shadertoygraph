{"ver":"0.1","info":{"id":"sssBR7","date":"1644660420","viewed":73,"name":"Square Grid","username":"proningtiger","description":"this is a simple coordinate manipulation to show how different coordinate systems can be implemented into the screen space.\nfuture work needs to happen for grid size control and animation","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grid","square","first"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 r = fragCoord.xy / iResolution.xy;\n\n    // color set up for color going to be drawn \n    vec3 backgroundColor = vec3(0.5);\n    vec3 sqr = vec3(0.59, 0.510, 0.847);\n    vec3 rgclr = vec3(0.2);\n    vec3 sgclr = vec3(0.587,0.853,0.300);\n    vec3 aclr = vec3(0.0,0.0,1.0);\n    vec3 cgclr = vec3(0.89, 0.35, .30);\n    \n    // set background color\n    vec3 pixel =backgroundColor;\n\n    // mark a square aspect ratio\n    float ar = iResolution.x / iResolution.y;\n    if(abs(r.x - (1.00 / ar))<0.003) pixel = sqr;\n\n    // draw a grid with an aspect ratio equal to the screen\n    const float tickWidth = 0.1;\n\tfor(float i=0.0; i<1.0; i+=tickWidth) {\n\t\t// \"i\" is the line coordinate.\n\t\tif(abs(r.x - i)<0.002) pixel = rgclr;\n\t\tif(abs(r.y - i)<0.002) pixel = rgclr;\n\t}\n\n    // draw a square grid\n    // increase the number of markings by the aspect ratio\n    // factor out the screen aspect ratio from the distances\n\tfor(float i=0.0; i<1.0 * ar; i+=tickWidth) {\n\t\tif(abs(r.x - i / ar)<0.002 / ar) pixel = sgclr;\n\t\tif(abs(r.y - i)<0.002) pixel = sgclr;\n\t}\n\n    // create the centered coordinate system\n    vec2 s = fragCoord.xy - 0.5*iResolution.xy;\n    s = 2.0 * s.xy / iResolution.xy;\n\n    // draw central axis\n    if( abs(s.x)<0.004 ) pixel = aclr;\n\tif( abs(s.y)<0.004 * ar) pixel = aclr;\n\n    // draw a centered square grid\n    // create the square grid but center it in the frame\n\tfor(float i=-2.0; i< ar; i+=tickWidth) {\n\t\tif(abs(s.x - i / ar)<0.002 / ar) pixel = cgclr;\n\t\tif(abs(s.y - i)<0.002) pixel = cgclr;\n\t}\n\n\n\n\n\n    // Output to screen\n    fragColor = vec4(pixel,1.0);\n}","name":"Image","description":"","type":"image"}]}