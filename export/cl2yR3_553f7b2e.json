{"ver":"0.1","info":{"id":"cl2yR3","date":"1692105605","viewed":22,"name":"kishimisu intro tutorial","username":"BTJanuary","description":"my first shader ðŸ‘‰ðŸ‘ˆ\nik it said kishimusi tut but idk what i made","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n        vec3 a = vec3(0.5, 0.3, 0.2);\n        vec3 b = vec3(0.9, 1.0, 0.5);\n        vec3 c = vec3(0.9, 0.9, 0.4);\n        vec3 d = vec3(0.256, 0.678, 0.247);\n        \n        return a+b*cos(5.3252*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    /*\n    shader  [-1,1]\n    normalized fragCoord to range from [-1,1] by dividing by the canvas resolution\n          \n        TL = (0,1)  TR = (1,1)\n            M = (0.5, 0.5)  \n        BL = (0,0)  BR = (1,0)\n        \n    */\n    //uv = (uv-0.5)*2.0;\n    //uv = uv * 2.0 - 1.0\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0; \n    vec2 uv0 = uv;\n    vec3 finMau = vec3(0.0);\n    //times x by the aspect ratio for the circle to not stretch/distortion\n    uv.x *= iResolution.x/iResolution.y;\n    \n    for (float i = 0.0; i< 1.2; i++) {\n        uv = fract(uv*1.3)-0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n        vec3 mau = palette(length(uv0)+ i*2.123+iTime);\n\n        //\n        d = sin(d*8. + iTime*0.2)/8.0;// * sin(uv.y*iTime)/0.9;\n        //WHAT THE HELL IS A STEP FUNCTION\n        d = abs(d);\n        //d = smoothstep(0.0, 0.12,d);\n        //OHHHH THATS A SMOOTHSTEP FUNCTION THATS WHAT IT DOES\n        d = 0.00599/d;\n\n        finMau += mau * d;\n    }\n    \n    //swizzling:\n    //-writing iRes = create new vec2()\n    //-create range and reorder easily\n    \n    //fragColor = vec4(uv.x, uv.y, 0.0, 1.0); \n    //simplified to just uv since uv hold two value\n    fragColor = vec4(finMau, 1.0);\n    \n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}