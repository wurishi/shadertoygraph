{"ver":"0.1","info":{"id":"lc2fWd","date":"1725674284","viewed":33,"name":"moving black hole","username":"ShadedSky","description":"black hole","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize coordinates to [-1, 1] and correct for aspect ratio\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - vec2(1.0);\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Calculate distance from the center and angle for the spiral\n    float dist = length(uv);\n    float angle = atan(uv.y, uv.x);\n    \n    // Create a recursive spiral pattern with increased complexity\n    float spiral = sin(30.0 * angle + dist * 20.0 - iTime * 3.0);\n    \n    // Add finer layers and interference patterns for complexity\n    float layers = sin(dist * 40.0 + iTime * 10.0) * 0.5 + 0.5;\n    \n    // Introduce radial modulations for additional geometric texture\n    float radial = sin(dist * 100.0 + iTime * 5.0) * 0.5 + 0.5;\n    \n    // Define a more intricate color pattern based on all patterns\n    vec3 color = 0.5 + 0.5 * cos(spiral * 12.0 + vec3(0.0, 2.0, 4.0) + layers * 8.0 + radial * 3.0);\n    \n    // Enhance intensity to make it appear like layered glow\n    float intensity = smoothstep(0.2, 0.9, dist) * radial * 1.5;\n    \n    // Apply the final color with intensity modulation\n    fragColor = vec4(color * intensity, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}