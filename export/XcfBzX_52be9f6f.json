{"ver":"0.1","info":{"id":"XcfBzX","date":"1724090164","viewed":26,"name":"the üçä line","username":"ShaderDizzle","description":"lets draw the brain","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["orange"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","previewfilepath":"/media/ap/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 resolution;\n\nvoid theLine( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy / resolution.xy;\n\n    // Get the sound data from channel 0\n    float sound = texture(iChannel1, vec2(uv.x, 0.5)).r;\n\n    // Create a sine wave and modulate it by the sound data\n    float freq = 10.0;\n    float amplitude = 0.02 + sound * 0.4; // Amplitude affected by sound\n    float wave = sin(uv.x * freq + time * 2.0) * amplitude;\n\n    // Calculate distance from the wave to determine the line thickness\n    float thickness = 0.01; // Thinner line for a clear division\n    float distToWave = abs(uv.y - (0.5 + wave));\n\n    // Create the fire-like color effect\n    vec3 fireColor = vec3(1.0, 0.5 + 0.5 * sound, 0.0); // Orange color influenced by sound\n\n    // Mix the fire color based on the distance to the wave\n    vec3 color = mix(vec3(0.0), fireColor, smoothstep(thickness, 0.0, distToWave));\n\n    // Set the final fragment color\n    fragColor = vec4(color, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Get the sound data from channel 1\n    float sound = texture(iChannel0, vec2(uv.x, 0.0)).r;\n\n    // Create a sine wave and modulate it by the sound data\n    float freq = 10.0;\n    float amplitude = 0.02 + sound * 0.2; // Amplitude affected by sound\n    float wave = sin(uv.x * freq + iTime * 2.0) * amplitude;\n\n    // Line position (y-axis) adjusted by the sound wave\n    float lineY = 0.5 + wave;\n\n    // Line thickness\n    float thickness = 0.02;\n\n    // Calculate the distance from the line\n    float distToLine = abs(uv.y - lineY);\n\n    // Set color of the line (orange)\n    vec3 lineColor = vec3(1.0, 0.5, 0.0);\n\n    // Set background color (black)\n    vec3 bgColor = vec3(0.0, 0.0, 0.0);\n\n    // Mix the colors based on distance to line\n    vec3 color = mix(bgColor, lineColor, smoothstep(thickness, 0.0, distToLine));\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}