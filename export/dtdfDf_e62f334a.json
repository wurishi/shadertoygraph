{"ver":"0.1","info":{"id":"dtdfDf","date":"1703001791","viewed":64,"name":"Superposed disapearing circle","username":"Saimon","description":"Animated reproductin of this image: https://geometrydaily.tumblr.com/post/19002626421/69-staring-into-the-sun-a-new-minimal-geometric by Tilman Zitzmann, check his other graphical work here: https://geometrydaily.tumblr.com/","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["color","circle","animated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \"Superposed disapearing circles\"\n * I wanted to practice GLSL and the primitives describe in https://thebookofshaders.com/07/\n * so I started looking for art images to try to reproduce.\n * This one is part of my practice serie, it is based on this image: \n * https://geometrydaily.tumblr.com/post/19002626421/69-staring-into-the-sun-a-new-minimal-geometric\n * It was made by Tilman Zitzmann, check his other graphical work here: https://geometrydaily.tumblr.com/\n * (November 2023)\n */\n\n// Source of code: https://thebookofshaders.com/07/\nvec3 circle(in vec2 center, in float radius, in vec2 st, in vec3 color){\n  vec2 dist = st - center;\n  return 1. - vec3(1. - smoothstep(radius-(radius*0.01),\n                   radius+(radius*0.01),\n                   dot(dist,dist)*4.0)) + color;\n}  \n\n\n\n// Clamp the color to make sure it's between [0;1]\nvec3 clampColor(vec3 color){\n    return vec3(clamp(color.x,0.,1.), clamp(color.y,0.,1.), clamp(color.z,0.,1.));\n}\n\n\nvec3 circleBorder(in vec2 center, in float radius, in vec2 st, in vec3 color, in float borderSize){\n     return circle(center, radius, st, color)+vec3(1.)-(circle(center, radius - borderSize,st,vec3(0.)));\n}\n\n\n// Source of code: https://thebookofshaders.com/edit.php?log=160909065147\n// and http://www.kynd.info\nfloat easeInOutExpo(float t) {\n  if (t == 0.0 || t == 1.0) {\n      return t;\n  }\n  if ((t *= 2.0) < 1.0) {\n      return 0.5 * pow(2.0, 10.0 * (t - 1.0));\n  } else {\n      return 0.5 * (-pow(2.0, -10.0 * (t - 1.0)) + 2.0);\n  }\n}\n\n\n// Source of code: https://www.febucci.com/2018/08/easing-functions/\nfloat Flip(in float t) {\n    return 1. - t;\n}\n\n\n// Source of code: https://www.febucci.com/2018/08/easing-functions/\nfloat tweenEaseInOutExpo(in float t) {\n  if (t <= .5)\n    return easeInOutExpo(t / .5);\n\n  return easeInOutExpo(Flip(t) / .5);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 st = fragCoord.xy/iResolution.xy;\n    float aspect_ratio = iResolution.x / iResolution.y;\n    st.x *= aspect_ratio;\n    float t = fract((iTime+2.)/3.);\n    \n    vec3 CYAN = vec3(0.267,0.667,0.729);\n    vec3 YELLOW = vec3(0.949,0.898,0.216);\n    vec3 MAGENTA = vec3(0.863,0.325,0.592);\n \n    vec2 offset = vec2((0.040)*aspect_ratio,0.036);\n    \n    vec3 c1 = circleBorder(vec2(0.47*aspect_ratio,0.5)+offset, 0.4, st, YELLOW,tweenEaseInOutExpo(t)/8.3);\n    t = fract((iTime+1.85)/3.);\n    vec3 c2 = circleBorder(vec2((0.442)*aspect_ratio,0.490)+offset, 0.4, st, CYAN,tweenEaseInOutExpo(t)/8.3);\n    t = fract((iTime+1.68)/3.);\n    vec3 c3 = circleBorder(vec2(0.5*aspect_ratio,0.430)+offset, 0.4, st, MAGENTA,tweenEaseInOutExpo(t)/8.3);\n    t = fract((iTime+1.55)/3.);\n    vec3 c4 = circleBorder(vec2(0.430*aspect_ratio,0.430)+offset, 0.4, st, MAGENTA,tweenEaseInOutExpo(t)/8.3);\n    t = fract((iTime+1.48)/3.);\n    vec3 c5 = circleBorder(vec2(0.430*aspect_ratio,0.450)+offset, 0.4, st, YELLOW,tweenEaseInOutExpo(t)/8.3);\n    t = fract((iTime+1.4)/3.);\n    vec3 c6 = circleBorder(vec2(0.47*aspect_ratio,0.430)+offset, 0.4, st, CYAN,tweenEaseInOutExpo(t)/8.3);\n\n    vec3 color = clampColor(c1) * clampColor(c2) * clampColor(c3) * clampColor(c5) * clampColor(c6)* clampColor(c4)  ;\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}