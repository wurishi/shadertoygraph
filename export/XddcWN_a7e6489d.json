{"ver":"0.1","info":{"id":"XddcWN","date":"1519061617","viewed":313,"name":"Bumpy Stonewall","username":"tholzer","description":"Create a pseudo 3d textured boulder stone wall.\nUse mouse to move around.\nChange iChannel1 texture.\n","likes":1,"published":1,"flags":64,"usePreview":0,"tags":["3d","texture","wall","occlusion","ambient","stone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"llSGzm","filepath":"https://soundcloud.com/zaramoth/pyre-original-soundtrack-the-blackwagon","previewfilepath":"https://soundcloud.com/zaramoth/pyre-original-soundtrack-the-blackwagon","type":"musicstream","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//-----------------------------------------------------------\n// Bumpy_Stonewall.glsl\n// \n// A pseudo 3d textured boulder stone wall ...\n//\n// original:  'mip based alchemy' by Jodie \n//            https://www.shadertoy.com/view/Ms3yWn\n// \n// Use mouse to move around.\n// Change iChannel1 texture.\n//\n//-----------------------------------------------------------\n\nfloat dotNorm(const vec3 v, const vec3 n) \n{\n  return dot(v, n) * inversesqrt(dot(v, v));\n}\n\nvec3 toViewSpace(const vec2 p)\n{\n  return vec3(p, texture(iChannel0, p).x * 0.2);\n}\n\nvec3 toViewSpaceLod(const vec2 p, const float lod)\n{\n  return vec3(p, texture(iChannel0, p, lod).x * 0.2);\n}\n\nfloat getHorizon(const vec2 uv, const float lod\n                ,const vec3 p, const vec3 N)\n{\n  return acos(clamp(dotNorm(toViewSpaceLod(uv, lod) - p, N), 0.0, 1.0));\n}\n\nfloat alchemy_ao(const float lod, const vec2 uv, const vec3 p, const vec3 N){\n\n  vec2 om = exp2(lod) / iResolution.xy * 0.25;\n    \n  float d1 = getHorizon(uv + vec2(-om.x,-om.y), lod, p, N);\n  float d3 = getHorizon(uv + vec2( om.x,-om.y), lod, p, N);\n  float d2 = getHorizon(uv + vec2(-om.x, om.y), lod, p, N);\n  float d0 = getHorizon(uv + vec2( om.x, om.y), lod, p, N);\n  return (d0 + d1 + d2 + d3) * 0.5;\n}\n\n#define min4(a,b,c,d) min(min(a,b),min(c,d))\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n  fragCoord.x += 4.0*iTime;\n  vec2 uv = (4.0*iMouse.xy + fragCoord) / iResolution.xy; // use mouse to scroll \n    \n  vec3 p  = toViewSpace(uv);\n  vec3 ox = toViewSpace(uv+vec2(1.0 / iResolution.x, 0.0));\n  vec3 oy = toViewSpace(uv+vec2(0.0, 1.0 /iResolution.y));\n  vec3 N = normalize(cross(p - ox, p - oy));\n\n  fragColor.rgb = vec3(1.2\n     - cos(min4(alchemy_ao(8., uv, p, N),  // large detail ao\n                alchemy_ao(5., uv, p, N),  // medium detail ao\n                alchemy_ao(4., uv, p, N),  // medium detail ao\n                alchemy_ao(3., uv, p, N)   // small detail ao\n               )*0.5));     //solid angle formula\n\n  vec4 txColor = texture(iChannel1, uv*vec2(0.4,0.3));\n  fragColor *= txColor;\n  fragColor = mix (fragColor, txColor, -0.4);\n}\n","name":"Image","description":"","type":"image"}]}