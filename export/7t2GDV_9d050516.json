{"ver":"0.1","info":{"id":"7t2GDV","date":"1624786801","viewed":97,"name":"Jungle Gym Adventure","username":"Kamoshika","description":"I also posted this on NEORT.\nhttps://neort.io/art/c3c4gpc3p9f8s59bf8p0","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://twitter.com/kamoshika_vrc/status/1389222800699789312\n// Tweet version is a bit simplified from the code below.\n\nconst float PI = acos(-1.);\n\nfloat hash( in float x )\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvec3 objColor( in vec3 rPos )\n{\n    float th = 0.001;\n    vec3 Q = fract(rPos) - .5;\n    if(length(Q.xy) - .07 < th){\n        return vec3(.2, .2, .7);\n    }\n    if(length(Q.yz) - .07 < th){\n        return vec3(.7, .2, .2);\n    }\n    if(length(Q.zx) - .07 < th){\n        return vec3(.2, .7, .2);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord * 2. - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 col = vec3(0);\n    \n    vec3 cPos = vec3(0, 0, fract(iTime) + .5);\n    vec3 ray = normalize(vec3(p, 1));\n    \n    float m = cos(iTime * PI) * .5 + .5;\n    if(hash(ceil(iTime)) < .5) {\n        m *= -1.;\n    }\n    \n    cPos.xy += hash(ceil(iTime) * 1.1) < .5 ? vec2(m, 0) : vec2(0, m);\n    \n    vec3 rPos = cPos;\n    float c = 0.;\n    \n    for(int i = 0;i < 99;i++){\n        vec3 Q = fract(rPos) - .5;\n        float d = length(Q.xy) - .07;\n        d = min(d, length(Q.yz) - .07);\n        d = min(d, length(Q.zx) - .07);\n        if(d < 1e-4){\n            break;\n        }\n        rPos += ray * d;\n        c++;\n    }\n    \n    float rLen = length(rPos - cPos);\n    col = 30. / c * objColor(rPos) * exp(-rLen * rLen * .008);\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}