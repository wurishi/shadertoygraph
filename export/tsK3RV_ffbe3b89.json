{"ver":"0.1","info":{"id":"tsK3RV","date":"1570592058","viewed":111,"name":"progress bar - with fill/empty","username":"bolloxim","description":"fills the shader with white noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["progressbar","ui","fill"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 0.6666666, 0.3333333, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float rate = 0.12;\n\tvec2 border = vec2(0.05, 0.1);\n    vec4 backCol = vec4(1,1,1,1);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // generate border mask\n\tvec2 mask2 = step(border, uv) * step(uv, 1.0-border);\n    float mask = mask2.x*mask2.y;\n    \n    float progress = mod(iTime*rate, 1.0);  \n    float blend = ((uv.x - progress) <= 0.0 ? 1.0 : 0.0) * mask;\n    vec4 foreCol = vec4(hsv2rgb(vec3(progress*0.33333 - 0.1, 1.0, 1.0)), 1.0);\n\n    float data = texture(iChannel1, uv*0.3+vec2(iTime*rate, 0.0)).r;\n    float pixel = data>0.5 ? mask*(clamp(1.0-uv.x,0.0,1.0))*data*(1.0-uv.x) : 0.0;\n    \n    blend = clamp(blend+pixel, 0.0, 1.0);\n    \n    fragColor = foreCol*blend + backCol*(1.0-blend);\n}","name":"Image","description":"","type":"image"}]}