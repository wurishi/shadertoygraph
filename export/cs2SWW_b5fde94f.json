{"ver":"0.1","info":{"id":"cs2SWW","date":"1670529546","viewed":45,"name":"Acrylic Dive","username":"Dem0g","description":"Simple blob like forms with rotating coloring","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simple","hypnotic","coloful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n#define tiling 8.\n#define ZOOM_SPEED 0.1\n#define VEL_MULTIPLIER 1.0\n#define DEPTH_MAG 0.1\n#define FORM_MAG 6.0\nfloat rand(float x){\n    return fract(sin(x)*57399.239-1.39434);\n}\n\nfloat rand(vec2 x){\n    return fract(sin(dot(x,vec2(23.2948,68.99)))*34999.9);\n}\n\nfloat fakelin(float x, float mag, float offset){\n    x /= PI;\n    x += 1.;\n    x *= mag;\n    float id = floor(x);\n    float t = fract(x);\n    float next = id + 1.;\n    if(id >= 2.*mag-1.) {\n        next = 0.;\n    }\n    return mix(\n        rand(id+offset),\n        rand(next+offset),\n        smoothstep(0.,1.,t)\n        );\n    \n}\n\nvec4 tile(vec2 uv, vec2 scale){\n    uv*=scale;\n    return vec4(fract(uv.x),fract(uv.y),floor(uv.x),floor(uv.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5,0.5);\n    uv.x *= ( iResolution.x / iResolution.y);\n    uv = vec2(atan(uv.x,uv.y),ZOOM_SPEED*iTime-distance(uv,vec2(0.0,0.0)));\n    float tile1 = tile(uv,vec2(0.0,tiling)).w;\n    uv.y += DEPTH_MAG*fakelin(uv.x,FORM_MAG,tile1);\n    tile1 = tile(uv,vec2(0.0,tiling)).w;\n    float velocity = 0.5-rand(tile1);\n    uv.x -= VEL_MULTIPLIER*velocity*iTime;\n    vec4 tile = tile(uv, vec2(velocity*15.,tiling));\n\n    // Time varying pixel color\n    vec3 col = vec3(rand(tile.z)*vec3(rand(tile.w+1.),rand(tile.w+2.),rand(tile.w+3.)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}