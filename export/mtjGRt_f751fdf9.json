{"ver":"0.1","info":{"id":"mtjGRt","date":"1673775073","viewed":102,"name":"Isoline Terrain","username":"MasterQ32","description":"Rendering of isolines on a terrain heightmap","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["isolinesterrainheightmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float a = iTime;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv00 = (fragCoord+vec2(0,0))/iResolution.xy;\n    vec2 uv10 = (fragCoord+vec2(1,0))/iResolution.xy;\n    vec2 uv01 = (fragCoord+vec2(0,1))/iResolution.xy;\n\n    \n    float height00 = texture(iChannel0, uv00).r;\n    float height10 = texture(iChannel0, uv10).r;\n    float height01 = texture(iChannel0, uv01).r;\n    \n    bool s = false;\n    \n    float steps = clamp(iMouse.x / 50.0, 0.0, 25.0);\n    for(float lim = 1.0 / (2.0 * steps); lim <= 1.0; lim += 1.0 / steps) {\n        bool c = ((height00 <  lim) && ((height10 >= lim) || (height01 >= lim)))\n              || ((height00 >= lim) && ((height10 <  lim) || (height01 <  lim)));\n        if(c) s = true;\n    };\n    \n    vec3 n = vec3(height00 - height10, height00 - height01, 0.05);\n    \n    n = normalize(n);\n    \n    vec3 l = normalize(vec3(sin(a), cos(a), 0.5));\n\n    fragColor.rgb = vec3(clamp(dot(n, l), 0.0, 1.0));\n    fragColor.a = 1.0;\n    \n    // fragColor.rgb = 0.5 + vec3(l);\n    \n    if(s) {\n        fragColor.rgb = vec3(1.0,0.0,0.0);\n    }\n}","name":"Image","description":"","type":"image"}]}