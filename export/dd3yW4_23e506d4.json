{"ver":"0.1","info":{"id":"dd3yW4","date":"1695058516","viewed":114,"name":"First fractal shader","username":"Illia","description":"First shader, based on the tutorial","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b * cos( 6.28318 * (c * t + d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    for (float i = 0.0; i < 3.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.5 + iTime);\n\n        d = sin(7. * d + iTime) / 7.;\n        d = abs(d);\n        d = .005 / d;\n\n        finalColor += col * d;\n    }\n    \n    fragColor = vec4(finalColor, 1);\n}","name":"Image","description":"","type":"image"}]}