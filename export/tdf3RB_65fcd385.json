{"ver":"0.1","info":{"id":"tdf3RB","date":"1546649745","viewed":74,"name":"Random truchet pattern","username":"caseymacneil","description":"truchet pattern","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["random","truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\nfloat rand(vec2 value)\n{\n\treturn fract(sin(dot(value, vec2(23.1245,87.2980))) * 5387.58135649);\n}\n\nvec2 truchet(vec2 p, float index)\n{\n\tindex = fract((index-.5)*2.0);\n    if(index > .75)\n        p = vec2(1.0) - p;\n    else if(index > .5)\n        p = vec2(1.0-p.x,p.y);\n    else if(index > .25)\n        p = vec2(p.x,1.0-p.y);\n    return p;\n}\n\nvec2 rotate(vec2 p, float a)\n{\n\treturn p * mat2(cos(a),-sin(a),sin(a),cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= iResolution.xy / 40.0;\n    \n    vec2 ipos = floor(uv);\n    vec2 fpos = fract(uv);\n    \n    vec2 tile = truchet(fpos,rand(ipos+10.));\n    \n    // animation\n    if(mod(uv.x*5., 10.) < 5.)\n    \ttile = rotate(tile,sin(iTime * .5) * PI);\n    else\n    \ttile = rotate(tile,cos(iTime * .5) * PI);\n    \n    float col = smoothstep(tile.x-0.3,tile.x,tile.y)- smoothstep(tile.x,tile.x+0.3,tile.y);\n    // make the lines pretty\n    col = floor(col+.3);\n    \n    if(mod(uv.x*5., 10.) < 5.)\n    \tfragColor = vec4(col,col * .3,col * .3,1.0);\n    else\n    \tfragColor = vec4(col * .3,col * .3,col,1.0);\n        \n}","name":"Image","description":"","type":"image"}]}