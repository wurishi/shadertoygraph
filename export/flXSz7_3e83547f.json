{"ver":"0.1","info":{"id":"flXSz7","date":"1625325712","viewed":332,"name":"Flood fill","username":"Daizuukee","description":"This is a shader to test filling something in a flood like pattern","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["flood","algorithm","fill"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define rand\n//#define point\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 col = texture(iChannel0,uv).rg;\n    #ifdef rand\n    fragColor = vec4(texture(iChannel2,col).r);\n    #else\n    #ifdef point\n    fragColor = vec4(texture(iChannel0,col).rg,1.,1.);\n    #else\n    fragColor = vec4(texture(iChannel1,col).rgb,1.);\n    #endif\n    #endif\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define stepSize s\n#define diff 0.1\n\n#define close\n\n#ifdef close\n#define check(a) texture(iChannel0,data.rg + a).rg\n#else\n#define check(a) data.rg + a\n#endif\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float s = 1./512.;\n    if(iFrame == 0) {\n        fragColor = vec4(fragCoord / iResolution.xy,1.0,1.0);\n    } else {\n        vec4 data = texture(iChannel0,fragCoord / iResolution.xy);\n        fragColor = vec4(data.rgb,1.0);\n        float self = dot(vec3(1),texture(iChannel1,data.rg).rgb);\n        if(data.b == 1.0) {\n            if(data.r < 1.-stepSize && abs(self - dot(vec3(1),texture(iChannel1,check(vec2(stepSize,0))).rgb)) < diff)\n                fragColor = vec4(texture(iChannel0,data.rg + vec2(stepSize,0)).rg,1.0,1.0);\n            else\n                fragColor = vec4(data.rg,0.75,1.0);\n        }\n        if(data.b == 0.75) {\n            if(data.g < 1.-stepSize&& abs(self - dot(vec3(1),texture(iChannel1,check(vec2(0,stepSize))).rgb)) < diff)\n                fragColor = vec4(texture(iChannel0,data.rg + vec2(0,stepSize)).rg,0.75,1.0);\n            else\n                fragColor = vec4(data.rg,0.5,1.0);\n        }\n        if(data.b == 0.5) {\n            if(data.r > stepSize && abs(self - dot(vec3(1),texture(iChannel1,check(vec2(-stepSize,0))).rgb)) < diff)\n                fragColor = vec4(texture(iChannel0,data.rg + vec2(-stepSize,0)).rg,0.5,1.0);\n            else\n                fragColor = vec4(data.rg,0.25,1.0);\n        }\n        if(data.b == 0.25) {\n            if(data.g > stepSize && abs(self - dot(vec3(1),texture(iChannel1,check(vec2(0,-stepSize))).rgb)) < diff)\n                fragColor = vec4(texture(iChannel0,data.rg + vec2(0,-stepSize)).rg,0.25,1.0);\n            else\n                fragColor = vec4(data.rg,1.0,1.0);\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}