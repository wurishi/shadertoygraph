{"ver":"0.1","info":{"id":"WdjGR1","date":"1548155875","viewed":172,"name":"simple spiral test","username":"Fab48","description":"my first shader here !\nbased on an other spiral :  https://www.shadertoy.com/view/XtsGDj","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPIRAL_COUNT 5.\n#define RADIUS 2.\n#define TWISTPOW 1.\n    \nvec4 color = vec4(1.0,0.0, 1.0,1.0);\nvec4 colorBackground = vec4(0.0,0.0, 0.0,1.0);\n\n//my first shader\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float t = iTime*0.5;\n    \n\tvec2 uv = (2.*fragCoord - iResolution.xy) / iResolution.y;\n    \n    float angle = atan(uv.y,uv.x) +t ;\n        \n    angle -= TWISTPOW *length(uv) ;\n\n    vec4 col = color * vec4(cos( SPIRAL_COUNT * angle));\n    \n    vec3 center = vec3(clamp(RADIUS-length(uv*2.2),0.,1.));\n        \n    \n    //gradient\n    col = ( mix(col,color , smoothstep(RADIUS,0., length(center)  )) ) ;\n    \n    //center black\n    col *= vec4( smoothstep(0.0,0.5*RADIUS, length(uv)*2. ));\n    \n    fragColor =  mix(color,colorBackground, length(col));\n}","name":"Image","description":"","type":"image"}]}