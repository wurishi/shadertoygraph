{"ver":"0.1","info":{"id":"43GXRG","date":"1720071585","viewed":32,"name":"Rooster'sHW4","username":"RoosterWho","description":"对称的","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["wallpapaer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(in vec2 _st, in float _radius){\n    vec2 l = _st - vec2(0.5);\n    return 1. - smoothstep(_radius - (_radius * 0.0),\n                           _radius + (_radius * 0.0),\n                           dot(l, l) * 4.0);\n}\nfloat box(vec2 _st, vec2 _size, float _smoothEdges){\n    _size = vec2(0.5)-_size*0.5;\n    vec2 aa = vec2(_smoothEdges*0.5);\n    vec2 uv = smoothstep(_size,_size+aa,_st);\n    uv *= smoothstep(_size,_size+aa,vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    float t = iTime;\n    //t = 1.6;\n    \n    vec4 noise = texture(iChannel1, uv);\n    \n    vec2 uv_1 = uv;\n    uv_1.x += (.5*(sin(t)+1.))*step(0.25, mod(uv_1.y, .5000));\n\n    \n    uv_1 *= 3.0 * (3.*sin(t) +2. + 0.1*noise.x);\n    uv_1 *= mat2(cos(t+ noise.x*(sin(t)-1.)), sin(t+ noise.x*(sin(t)-1.)), -sin(t+ noise.x*(sin(t)-1.)), cos(t+ noise.x*(sin(t)-1.)));\n\n    uv_1 = fract(uv_1);\n\n    \n    vec3 col_1 = vec3(uv_1, 0.0);\n    col_1 = vec3(circle(uv_1, 0.5),0.,0.);\n    \n    vec2 uv_2 = uv;\n    uv_2 *= 3.0 * (3. *sin(.5*t));\n    uv_2 *= mat2(cos(-t),sin(-t),-sin(-t),cos(-t));\n    uv_2 = fract(uv_2);\n    vec3 col_2 = vec3(0.0,box(uv_2, vec2(1.8,1.8)*0.5, .1)*0.2,0.0);\n\n    vec3 col = col_1 + col_2*(sin(t+3.14/2.));\n    \n    fragColor = vec4(col_1,1.);\n    \n    /*\n    \n    uv = mod(uv,.5);\n    uv = abs(uv);\n    uv = (uv.x<uv.y)? uv.xy:uv.yx; //第一象限转换\n\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0,uv).xyz;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    */\n}","name":"Image","description":"","type":"image"}]}