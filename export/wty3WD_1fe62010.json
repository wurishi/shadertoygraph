{"ver":"0.1","info":{"id":"wty3WD","date":"1579273895","viewed":197,"name":"Yagasuri","username":"coposuke","description":"Training. 矢絣","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["pattern","training","japanese"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define saturate(v) (clamp(v, 0.0, 1.0))\n#define PI 3.14159265357989\n\nmat2 rotate(float angle)\n{\n    float s = sin(angle), c = cos(angle);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    float dist = length(uv);\n    dist = length(uv);\n    uv = vec2(atan(uv.y, uv.x), dist);\n    uv = rotate(-PI * 0.51015) * uv;\n    uv.x = mix(5.0 / dist, pow(2.0 - dist, 3.0), dist);\n    uv = rotate(PI * 0.551) * uv;\n    \n    // zigzag\n    uv.y += (0.0 == mod(floor(uv.x * 10.0), 2.0) ?\n             (1.0 - fract(uv.x * 5.0)) :\n             (fract(uv.x * 5.0))) * 0.5;\n    \n    // animation\n    float time = iTime * 0.05;\n    float animStep = smoothstep(0.48, 0.5, fract(time)) * (1.0 - smoothstep(0.98, 1.0, fract(time)));\n    uv.x += animStep * 0.1;\n    uv.y += cos(time * PI * 2.0) * 5.0;\n    \n    vec2 uvScale = vec2(5.0, 3.0);\n    vec2 uvLocal = fract(uv * uvScale) - 0.5;\n    vec2 uvID = floor(uv * uvScale);\n    \n    // color\n    float type = mod(uvID.x + uvID.y, 2.0);\n    float colorBlend = saturate(uvLocal.x + 0.5) * 0.5;\n    float colorSmoothY = smoothstep(0.5, 0.48, abs(uvLocal.y));\n\tfloat line = smoothstep(0.0, 0.03, abs(uvLocal.x));\n    type = (type == 0.0) ? line : 1.0 - line;\n    \n    vec3 colorType0From = vec3(0.9, 0.4, 0.6);\n    vec3 colorType0To = vec3(1);\n    vec3 colorType1From = vec3(1);\n    vec3 colorType1To = vec3(0.95, 0.8, 1.0);\n    vec3 colorType0 = mix(colorType0From, colorType0To, colorBlend);\n    vec3 colorType1 = mix(colorType1From, colorType1To, colorBlend);\n    \n    float shadow = smoothstep(-0.5, 0.0, (uvLocal.y)) * smoothstep(-0.5, -0.4, (uvLocal.x));\n    float whiteHole = saturate(1.3 - dist);\n    \n    fragColor.rgb = mix(colorType0, colorType1, type);\n    fragColor.rgb = mix(fragColor.rgb, colorType0, 1.0 - colorSmoothY);\n    fragColor.rgb = mix(fragColor.rgb * shadow, vec3(1), whiteHole * whiteHole);\n}","name":"Image","description":"","type":"image"}]}