{"ver":"0.1","info":{"id":"wllGWs","date":"1580253433","viewed":247,"name":"Scroll + Motion blur test","username":"ma77os","description":"Scroll + Motion blur test","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["motionblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// The MIT License\n// Copyright © 2020 André Mattos\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n#define PI 3.141592653589793\n#define TWO_PI 6.283185307179586\n\nfloat random(vec3 scale,float seed){\n    return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);\n}\n\nvec4 boxBlur(sampler2D tex, vec2 uv, vec2 delta){\n    // https://github.com/spite/Wagner/blob/master/fragment-shaders/box-blur-fs.glsl\n    vec4 color=vec4(0.0);\n    float total=0.0;\n    float offset=random(vec3(12.9898,78.233,151.7182),0.0);\n\n    for(float t=-30.0;t<=30.0;t++){       \n        float percent=(t+offset-0.5)/30.0; \n        float weight=1.0-abs(percent); \n        vec4 bsample=texture(tex,uv+delta*percent); \n        bsample.rgb*=bsample.a; \n        color+=bsample*weight; \n        total+=weight;\n    }   \n\n    color=color/total;\n    color.rgb/=color.a+0.00001; \n    return color;  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float speed = 2.;\n    \n    //float factor = iMouse.x / iResolution.x;\n    float factor = sin(iTime * speed) * 0.5 + 0.5;\n    float factorMul = factor * 3.0;\n    \n    vec2 uvScroll = vec2(uv.x, uv.y - factorMul);\n    \n    float blurAmount = sin(factor * PI) * 0.1 * speed;\n    \n    vec2 blurDelta = vec2(0.0, 1.0) * blurAmount;\n   \n    vec4 col0 = boxBlur(iChannel0, uvScroll, blurDelta);\n    vec4 col1 = boxBlur(iChannel1, uvScroll, blurDelta);\n    vec4 col2 = boxBlur(iChannel2, uvScroll, blurDelta);\n    vec4 col3 = boxBlur(iChannel3, uvScroll, blurDelta);\n   \n   // vec4 col0 = texture(iChannel0, uvScroll);\n   // vec4 col1 = texture(iChannel1, uvScroll);\n   // vec4 col2 = texture(iChannel2, uvScroll);\n   // vec4 col3 = texture(iChannel3, uvScroll);\n    \n    vec4 col = col0;\n    if(factorMul > uv.y)\n        col = col1;\n    \n    if(factorMul > uv.y + 1.)\n        col = col2;\n    \n    \n    if(factorMul > uv.y + 2.)\n        col = col3;\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}