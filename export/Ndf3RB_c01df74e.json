{"ver":"0.1","info":{"id":"Ndf3RB","date":"1616112582","viewed":588,"name":"Simplest Mandelbrot Set","username":"adamjmurray","description":"The simplest implementation I could come up with to draw the Mandelbrot Set. (https://en.wikipedia.org/wiki/Mandelbrot_set)\n\n Note the aspect ratio is stretched to match the aspect ratio of the screen.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 complexMultiply(vec2 a, vec2 b) { \n    return vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {  \n    vec2 coord = (2.*fragCoord - iResolution.xy)/iResolution.y;\n    vec2 z = vec2(0,0);\n    vec2 c = coord - vec2(0.5,0);\n    bool inMandelbrotSet = true; \n    \n    for (int i=0; i<100; i++) {\n        z = complexMultiply(z,z) + c;\n        if (length(z) > 2.) {\n            inMandelbrotSet = false;\n            break;\n        }\n    }\n    if (inMandelbrotSet) {\n        fragColor = vec4(1,1,1,1);\n    } else {\n        fragColor = vec4(0,0,0,1);\n    }\n}","name":"Image","description":"","type":"image"}]}