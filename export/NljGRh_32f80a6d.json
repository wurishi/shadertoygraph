{"ver":"0.1","info":{"id":"NljGRh","date":"1623344417","viewed":65,"name":"Genuine Value noise 2D","username":"GenuineIntelligence","description":"A genuine implementation for a value noise","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise","value","genuine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Copyright © 2021 by Arthur Cavalier, Théo Jonchier, Thibault Tricard\nThis work is free. You can redistribute it and/or modify it under the\nterms of the Do What The Fuck You Want To Public License, Version 2,\nas published by Sam Hocevar. See the COPYING file or http://www.wtfpl.net/ \nfor more details.*/\n\n/** INPUT PARAMETERS */\n#define scale 0.1\n\n/** @brief Generates a random number */\nfloat random_2_1(vec2 x){\n    return fract( sin( dot(x ,vec2(24.12357, 36.789) ) ) * 12345.123);\n}\n\n/** @brief value noise */\nfloat valueNoise(vec2 pos){\n    \n    vec2 fr= fract(pos);\n    vec2 AA= floor(pos);\n    vec2 AB= floor(pos)  + vec2(1,0);\n    vec2 BA= floor(pos)  + vec2(0,1);\n    vec2 BB= floor(pos)  + vec2(1,1);\n    \n    // we sample random number on a regular grid\n    //\n    //  AA-----------AB\n    //   |           |\n    //   |           |\n    //   |    pos    |\n    //   |           |\n    //   |           |\n    //  BA-----------BB\n    float rAA = random_2_1(AA);\n    float rAB = random_2_1(AB);\n    float rBA = random_2_1(BA);\n    float rBB = random_2_1(BB);\n    \n    // bilinear interpolation of the value\n    float nAA_AB = mix(rAA , rAB, fr.x);\n    float nBA_BB = mix(rBA , rBB, fr.x);\n    return mix(nAA_AB , nBA_BB, fr.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float value = valueNoise(fragCoord * scale );\n    fragColor = vec4(value);\n}","name":"Image","description":"","type":"image"}]}