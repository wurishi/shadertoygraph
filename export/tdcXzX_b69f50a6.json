{"ver":"0.1","info":{"id":"tdcXzX","date":"1615838876","viewed":386,"name":"Basic Light Rays","username":"RynsArgent","description":"Inexpensive light ray shader code with fade out along the borders","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["ray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// coord: (texture coordinate: [0-1], [0-1])\n// frequency: rate at which ray appears\n// travel rate: direction the ray travels in the x directions\n// max strength: light intensity of the ray\nfloat rayValue(in vec2 coord, in float frequency, in float travelRate, in float maxStrength)\n{\n    // Fade out along borders of fragment\n    float nx = 2.0f * (coord.x - 0.5f);\n    float nx2 = min(1.0f, 3.5f - 3.5f * nx * nx);\n    float ny = 2.0f * (coord.y - 0.5f);\n    float ny2 = min(1.0f, 3.5f - 3.5f * ny * ny);\n    \n    float xModifier = 0.5f * (cos(iTime * travelRate + coord.x * frequency) + 1.0f);\n    float yModifier = sin(coord.y);\n    return maxStrength * xModifier * yModifier * nx2 * ny2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float ray1 = rayValue(uv, 28.0f, -0.7f, 0.3);\n    float ray2 = rayValue(uv, 34.0f, 0.1f, 0.4);\n    float ray3 = rayValue(uv, 16.0f, -0.05f, 0.4);\n    float ray4 = rayValue(uv, 72.0f, 0.9f, 0.1);\n    float total = ray1 + ray2 + ray3 + ray4;\n    \n    // Output to screen\n    fragColor = vec4(total, total, total, total);\n}","name":"Image","description":"","type":"image"}]}