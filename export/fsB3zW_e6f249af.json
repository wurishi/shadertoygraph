{"ver":"0.1","info":{"id":"fsB3zW","date":"1660312761","viewed":91,"name":"Gauge Physics","username":"romeosoft","description":"This is gauge physics' interpretation of centripetal force.\nWith a computer, anything can be calculated!\nhttps://github.com/panguojun/Coordinate-system-transformation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["physics","gauge","centripetalforce"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// *************************************************************\n// This is gauge physics for interpretation of centripetal force\n// *************************************************************\n// Gauge Physics - I try to divide physics into three parts:\n// P(physics) = C(gauge) * [A(formula/geometry/particle system) * D(dimension)]\n\n// ------------------------------------------\n// Coordinate system is a simplified version of gauge\n// \n// A coordinate system in three-dimensional space \n// consists of an origin plus three orientation axes \n// and three scaling components. \n// Corresponding to the three transformations of displacement, \n// rotation, and scaling, respectively.\n// ------------------------------------------\nstruct coord\n{\n    vec3 o;        // define the origin position\n    vec3 ux,uy,uz; // three axial unit vectors\n    vec3 scale;    // scale transformation\n};\n// Multiplication operation\n// C1*C2*C3* ... *Cloc * Vloc （transfrom)\nvec3 mul(coord c, vec3 v)\n{\n    return c.ux * v.x + c.uy * v.y + c.uz * v.z + c.o;\n}\ncoord mul (coord c1, coord c2)\n{\n    coord rc;\n    rc.ux = c1.ux * c2.ux.x + c1.uy * c2.ux.y + c1.uz * c2.ux.z;\n    rc.uy = c1.ux * c1.uy.x + c1.uy * c2.uy.y + c1.uz * c1.uy.z;\n    rc.ux = c1.ux * c2.uz.x + c1.uy * c2.uz.y + c1.uz * c2.uz.z;\n    rc.o = c1.o + c1.ux * c2.o.x + c1.uy * c2.o.y + c1.uz * c2.o.z;\n    return rc;\n}\n// Division operation\n// Vworld/C1/C2/C3/ ... /Cloc（projection)\nvec3 div(vec3 v, coord c)\n{\n\tvec3 dv = v - c.o;\n\treturn vec3(dot(dv,c.ux), dot(dv,c.uy), dot(dv,c.uz));\n}\ncoord div(coord c1,coord c2)\n{\n\tcoord rc;\n\trc.ux = vec3(dot(c1.ux,c2.ux), dot(c1.ux,c2.uy), dot(c1.ux,c2.uz));\n\trc.uy = vec3(dot(c1.uy,c2.ux), dot(c1.uy,c2.uy), dot(c1.uy,c2.uz));\n\trc.uz = vec3(dot(c1.uz,c2.ux), dot(c1.uz,c2.uy), dot(c1.uz,c2.uz));\n\trc.o = c1.o - c2.o;\n\treturn rc;\n}\n// Polar Jacobian Transform\nvoid polecoord(out coord c1, float x, float y)\n{\n\tc1.o.x = x;\n\tc1.o.y = y;\n\tc1.ux = vec3(cos(c1.o.y), sin(c1.o.y), 0);\n\tc1.uy = vec3(-c1.o.x * sin(c1.o.y), c1.o.x * cos(c1.o.y), 0);\n}\n\n// ------------------------------------------\n// Dimension or Const\n// ------------------------------------------\n#define PI 3.1415926535\n#define met 1.0\n#define sec 50.0\n\n// ------------------------------------------\n// Formula Coefficient\n// ------------------------------------------\n// Kinematics settings\n#define w    1.0     // angular velocity\n#define dt   0.001   // deta time\n#define dth  dt * w  // deta theta\n\n// ------------------------------------------\n// Phase View\n// ------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.yy-vec2(0.5);\n\tfloat r = length(uv) * met;\n\tfloat ang = atan(-uv.y,uv.x) + r*iTime * sec;\n    \n    //Observe a coordinate system C1 at point (r, ang) in global coordinates\n    coord c1;\n    polecoord(c1, r, ang * PI / 180.);\n    //Observe a coordinate system C2 at a point after dt next to C1\n    coord c2;\n    polecoord(c2, r, dth + ang * PI / 180.);\n    \n    //Velocity vector in polar coordinates (circular motion)\n    vec3 v = vec3(0.0, w, 0.0);\n    vec3 dv = (mul(c2,v) - mul(c1,v)) ; // Instead, observe the velocity vector in the global coordinate system and differentiate the velocity\n    vec3 a = dv / dt; // the time derivative of the vector, the acceleration\n\n    // Output to screen\n    fragColor = vec4(a,1.0);\n}","name":"Image","description":"","type":"image"}]}