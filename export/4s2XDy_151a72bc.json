{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"float time;\nfloat mov;\n\nfloat pi = 3.14159265359;\n\nfloat radian;\n\nmat3 ry;  \nmat3 rx;\n\nvec3 trans(vec3 p){\n return mod(p,8.0) - 4.0;   \n}\n\nfloat dFunc( vec3 p)\n{\n  p=trans(p);\n  vec2 t = vec2(.8+.5*sin(iTime)*1.0,.3+1.9*cos(iTime)*.1);\n  p.z*=sin(p.y*.4);\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  q.y*=-.05*sin(time*4.);\n  return length(q)-t.y;\n}\n\nvec3 getNormal (vec3 p)\n{\n  const  float  d = 0.0001;\n  return\n    normalize\n    (\n      vec3\n      (\n        dFunc (p + vec3 (d, 0.0,0.0)) - dFunc (p + vec3 (-d, 0.0,0.0)),\n        dFunc (p + vec3 (0.0, d, 0.0)) - dFunc (p + vec3 (0.0, -d, 0.0)),\n        dFunc (p + vec3 (0.0,0.0, d)) - dFunc (p + vec3 (0.0,0.0, -d))\n      )\n    );\n}\n\nvec3 light;\nvec3 light2;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n time = iTime;\n mov = -355.+355.*sin(time*.06);\n radian = (time*pi)/180.0; \n ry = mat3(cos(radian*12.), 0.0,-sin(radian*12.),\n\t\t\t   0.0, 1.0, 0.0, \n\t\t\t   sin(radian*12.), 0.0, cos(radian*12.)  );    \n rx = mat3(1.0, 0.0, 0.0,\n\t\t\t   0.0, cos(radian*13.), sin(radian*13.), \n\t\t\t   0.0,-sin(radian*13.), cos(radian*13.) );\n               \n light = normalize(vec3(-200.5, -18.0*sin(time), -84.2*-cos(time)));\n light2 = normalize(vec3(180., 18.2*sin(time), 94.2));\n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 pos = (fragCoord.xy*2.0 - iResolution.xy)/iResolution.y;\n    \n    vec3 camUp = vec3(0.0,1.0,0.0);\n    vec3 camDir = vec3(-sin(-99.),0.0,cos(-99.));\n    vec3 camPos = vec3(2800,0.0,-.5);\n    camPos.x-=mov;\n    camUp  *=rx*ry;//*ry;\n    camDir *=rx*ry;//*ry;\n    \n    vec3 camSide = cross(camDir,camUp);\n    float focus = .8;\n    \n    vec3 rayDir = normalize(camSide*pos.x + camUp*pos.y +camDir*focus);\n    float t =0.0, d;\n    vec3 posOnRay = camPos;\n    \n    for(int i =0; i<32; ++i){\n        d = dFunc(posOnRay);\n        t+=d;\n        posOnRay = camPos + t*rayDir;   \n    }\n    \n    vec4 tex = texture(iChannel0,posOnRay.zy*1.2);\n    vec3 normal=getNormal(posOnRay);\n    vec3 white = vec3(1.0);\n    tex*=1.01;\n    if(abs(d) < 0.001){\n        //https://www.shadertoy.com/view/4s2XRd\n        float diffuse = clamp( dot(normal, light), 0., 1.);\n        float specular = 1.5*pow(clamp(dot(reflect(rayDir, normal), light), 0., 1.), 580.);\n        float specular2 = 1.5*pow(clamp(dot(reflect(rayDir, normal), light2), 0., 1.), 200.);\n        vec3 brdf = 1.5*vec3(.10, .11, .11);\n        float fre = 0.1*pow(clamp(1. + dot(normal, rayDir), 0., 1.), 2.);\n        brdf += 1.30*diffuse*vec3(1., .9, .75);\n        fragColor = vec4(normal+tex.rgb*tex.rgb*tex.rgb+specular+specular2+brdf, 1.0);  \n      }\n    else{\n        fragColor = vec4(0.0);\n      }\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4s2XDy","date":"1415622968","viewed":159,"name":"Constructs","username":"Passion","description":"Try commenting out lines 23 and 25 :p References - http://www.demoscene.jp/?p=811 https://www.shadertoy.com/view/4s2XRd https://iquilezles.org/articles/distfunctions/distfunctions.htm","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","distance"],"hasliked":0,"parentid":"","parentname":""}}