{"ver":"0.1","info":{"id":"7sc3W2","date":"1630649470","viewed":99,"name":"RainDropOnWindow","username":"hugohuang","description":"rain drop on window","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat N11(float t) {\n\treturn fract(sin(t*10234.324)*123423.23512);\n}\nvec3 N31(float p) {\n    //  3 out, 1 in... DAVE HOSKINS\n   vec3 p3 = fract(vec3(p) * vec3(.1031,.11369,.13787));\n   p3 += dot(p3, p3.yzx + 19.19);\n   return fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\nfloat N12(vec2 p)\n{\t// Dave Hoskins - https://www.shadertoy.com/view/4djSRW\n\tvec3 p3  = fract(vec3(p.xyx) * vec3(443.897, 441.423, 437.195));\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n#define SPEED     0.1\n#define GRIDW    10.0\n#define GRIDH     2.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = vec3(0., 0., 0.);\n\n    vec2 gridsWH = vec2(GRIDW, GRIDH);\n    vec2 ratio = iResolution.xy/gridsWH;\n    ratio /= ratio.y;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.y = 1. - uv.y;\n    uv.y = fract(uv.y - iTime*SPEED);\n    \n    vec2 cellUV = fract(uv*gridsWH);\n    cellUV -= 0.5;\n\n    float v = uv.y*10.;\n    vec2 offset = vec2(sin(3.*v)*pow(sin(v), 6.)*.3,\n        -sin(iTime + sin(iTime + sin(iTime)*0.5)) * 0.4);\n    offset.x = 0.;\n    offset.y -= (cellUV.x - offset.x)*(cellUV.x - offset.x);\n    vec2 dropPos = (cellUV + offset)*ratio;\n\n    float drop = smoothstep(0.06, 0.04, length(dropPos));\n    vec2 trailUV = cellUV - vec2(offset.x, iTime*SPEED);\n    trailUV.y = fract(cellUV.y*8.);\n    trailUV.y -= 0.5;\n    trailUV *= ratio;\n    trailUV.y /= 8.0;\n    float trail = smoothstep(0.04, 0.02, length(trailUV));\n    trail *= smoothstep(0.01, -0.01, dropPos.y);\n    trail *= smoothstep(-0.5, offset.y, dropPos.y);\n\n    color += vec3(drop);\n    color += vec3(trail);\n/*\n    vec2 offset = vec2(0., 0.);\n    offset.x = sin(uv.y*30.)*pow(sin(uv.y*10.),6.) * .3;\n    offset.y = -sin(iTime + sin(iTime + sin(iTime)*0.5)) * .4;\n\n    vec2 cellUV = uv * gridsWH;\n    cellUV = fract(cellUV);\n    cellUV -= .5;\n    offset.y += (cellUV.x-offset.x) * (cellUV.x - offset.x);\n\n    vec2 dropPos = vec2((cellUV.x - offset.x)/ratio, cellUV.y);\n    dropPos += offset;\n    color.x += smoothstep(.1, .09, length(dropPos));\n    \n    vec2 trailPos = vec2((cellUV.x-offset.x)/ratio, cellUV.y);\n    trailPos += offset;\n    trailPos.y = (fract(trailPos.y*8.) - .5) / 8.;\n    float rTrail = smoothstep(.06, .04, length(trailPos));\n    rTrail *= smoothstep(0.05, -0.05, dropPos.y);\n    rTrail *= smoothstep(-0.5, offset.y, cellUV.y);\n    color.x += rTrail;\n*/\n\n    // Debug\n    if (cellUV.x > .49 || cellUV.y > .49) {\n        // color.x = 1.;\n    }\n    \n\n    fragColor = vec4(color,0.);\n}\n","name":"Image","description":"","type":"image"}]}