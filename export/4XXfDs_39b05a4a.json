{"ver":"0.1","info":{"id":"4XXfDs","date":"1729068608","viewed":27,"name":"Sphere2DObjectSpaceNormalMap","username":"zhusenlin","description":"Texture generate\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float radius = 1.0f;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float minResolution = min(iResolution.x,iResolution.y);\n    vec2 uv = fragCoord/vec2(minResolution,minResolution);\n    float isInvalid = step(uv.x,1.0) * step(uv.y,1.0);\n    uv.x = clamp(uv.x , 0.0 , 1.0);\n    uv.y = clamp(uv.y , 0.0 , 1.0);\n    vec2 centerUv = uv * 2.0 - 1.0;\n    float smallRadius = sqrt(1.0 - pow(centerUv.y , 2.0));\n    float depth = sqrt(pow(smallRadius,2.0) - pow(centerUv.x , 2.0));\n    vec3 pointInSphereSurface = vec3(centerUv,depth);\n    vec3 outputNormal = normalize(pointInSphereSurface);\n    outputNormal = (outputNormal + 1.0)/2.0;\n    \n    fragColor = vec4(outputNormal,1.0);\n}","name":"Image","description":"","type":"image"}]}