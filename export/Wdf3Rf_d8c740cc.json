{"ver":"0.1","info":{"id":"Wdf3Rf","date":"1547220411","viewed":674,"name":"sync with sound and camera move","username":"aadebdeb","description":"test for synchronization with sound and camera move","likes":13,"published":1,"flags":8,"usePreview":0,"tags":["raymarching","sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BPM 128.0\n\nfloat distRazers(vec3 p) {\n\tvec3 b = vec3(1.0, 1.0, 5.0);\n    p = mod(p, b) - b * 0.5;\n    p.xy = abs(p.xy) - 0.001;\n    return max(length(max(p.xy, 0.0)), max(0.0, abs(p.z) - 1.0));\n}\n\nvec3 raymarchRazers(vec3 ro, vec3 rd) {\n    vec3 c = vec3(0.0);\n   \tvec3 p = ro;\n    for (int i = 0; i < 32;i++) {\n    \tfloat d = distRazers(p);\n        p += 0.9 * d * rd;\n     \tc += 0.002 / max(d, 0.0001) * vec3(0.5, 0.4, 0.2);\n    }\n    return c;\n}\n\nfloat distParticles(vec3 p) {\n    p += 0.5;\n\tp = mod(p, 0.5) - 0.25;\n    return abs(length(p) - 0.01);\n}\n\nvec3 raymarchParticles(vec3 ro, vec3 rd) {\n\tvec3 c = vec3(0.0);\n    vec3 p = ro;\n    for (int i = 0; i < 32; i++) {\n    \tfloat d = distParticles(p);\n        p += 0.9 * d * rd;\n        c += 0.0005 / max(d, 0.0001) * vec3(0.8, 0.9, 1.0);\n    }\n    return c;\n}\n\nvec2 random2(float x) {\n    return fract(sin(x * vec2(12.9898, 51.431)) * vec2(43758.5453, 71932.1354));\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord) {\n\tvec2 st = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n   \tfloat bar = iTime / 60.0 * (BPM * 0.25);\n\t\n    vec2 p1 = (random2(floor(bar)) * 2.0 - 1.0) * 5.0;\n    vec2 p2 = (random2(floor(bar) + 1.0) * 2.0 - 1.0 ) * 5.0;\n    \n    vec2 p = mix(p1, p2, smoothstep(0.8, 1.0, fract(bar)));\n    \n    vec3 ro = vec3(p, -5.0 + iTime);\n    vec3 ta = vec3(0.0, 0.0, 0.0 + iTime);\n    vec3 front = normalize(ta - ro);\n    vec3 right = normalize(cross(front, vec3(0.0, 1.0, 0.0)));\n    vec3 up = normalize(cross(right, front));\n    vec3 rd = normalize(st.x * right + st.y * up + 1.5 * front);\n\n    vec3 c = vec3(0.0);\n    c += raymarchRazers(ro, rd);\n    c += raymarchParticles(ro, rd);\n\n    fragColor = vec4(c, 1.0);    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define TAU 6.28318530718\n#define BPM 128.0\n\nfloat random(float x){\n\treturn fract(sin(x * 349.9898) * 43758.5453) * 2.0 - 1.0;\n}\n\nfloat distort(float v, float s) {\n\treturn clamp(v * s, -1.0, 1.0);\n}\n\nfloat sine(float freq, float time) {\n\treturn sin(freq * TAU * time);\n}\n\nfloat square(float freq, float time) {\n\treturn fract(freq * time) < 0.5 ? -1.0 : 1.0;   \n}\n\nfloat triangle(float freq, float time) {\n\treturn 1.0 - 4.0 * abs(fract(freq * time) - 0.5);   \n}\n\nfloat saw(float freq, float time) {\n\treturn 2.0 * fract(freq * time) - 1.0;\n}\n\nvec2 kick(float time) {\n\treturn vec2(mix(\n        distort(sine(100.0 + 400.0 * exp(-30.0 * time), time) * exp(-10.0 * time), 1.2),\n        random(time) * exp(-150.0 * time),\n        0.2\n    ));\n}\n\nvec2 clap(float time) {    \n    float t = time - (time >= 0.02 ? 0.02 : time >= 0.015 ? 0.015 : time >= 0.01 ? 0.01 : time >= 0.005 ? 0.005 : 0.0);\n    return vec2(mix(\n    \tdistort(triangle(50.0 + 200.0 * exp(-20.0 * t), time) * exp(-10.0 * t), 1.2),\n        random(time) * exp(-12.0 * t),\n        0.6\n    ));  \n}\n\nvec2 hihat(float time) {\n\treturn vec2(vec2(random(time * 0.99), random(time * 1.01)) * exp(-20.0 * time));\n}\n\n/*\nvec2 snare(float time) {\n\treturn vec2(mix(\n    \tdistort(triangle(50.0 + 400.0 * exp(-40.0 * time), time) * exp(-50.0 * time), 1.2),\n        random(time) * exp(-16.0 * time),\n        0.5\n    ));\n}\n\nvec2 tom(float time) {\n\treturn vec2(mix(\n        mix(\n       \t\tsine(200.0 + 100.0 * exp(-20.0 * time), time) * exp(-20.0 * time),\n        \tsine(200.0 + 1000.0 * exp(-25.0 * time), time) * exp(-25.0 * time),\n            0.4\n        ),\n        random(time) * exp(-20.0 * time),\n        0.05\n\t));   \n}\n\nvec2 openhihat(float time) {\n\treturn vec2(mix(\n    \ttriangle(1000.0 + 2000.0 * exp(-100.0 * time), time) * exp(-100.0 * time),\n        random(time) * exp(-10.0 * time),\n        0.5\n    ));\n}\n\n\nvec2 cymbal(float time) {\n\treturn vec2(mix(\n    \ttriangle(7000.0, time) * exp(-20.0 * time),\n        random(time) * exp(-20.0 * time),\n        0.2\n    ));\n}\n*/\n\nfloat toBeat16Time(float note, float time) {\n    float t = time - note * (60.0 / (BPM * 4.0));\n    return t > 0.0 ? t : 10000.0;\n}\n\nvec2 mainSound( in int samp,float time) {\n\tfloat beat = time / 60.0 * BPM;\n    float bar2Time = mod(time, 60.0 / (BPM * 0.125));\n    vec2 res = vec2(0.0);    \n\n    res += 0.5 * kick(toBeat16Time(0.0, bar2Time));\n    res += 0.3 * clap(toBeat16Time(4.0, bar2Time));\n   \tres += 0.5 * kick(toBeat16Time(8.0, bar2Time));\n    res += 0.3 * clap(toBeat16Time(12.0, bar2Time));\n    res += 0.5 * kick(toBeat16Time(14.0, bar2Time));\n    res += 0.3 * clap(toBeat16Time(15.0, bar2Time));\n\n    res += 0.02 * hihat(toBeat16Time(0.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(1.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(3.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(4.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(5.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(6.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(7.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(8.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(9.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(11.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(13.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(15.0, bar2Time));\n\n\n    res += 0.5 * kick(toBeat16Time(16.0 + 0.0, bar2Time));\n    //res += 0.3 * clap(toBeat16Time(16.0 + 2.0, bar2Time));\n    //res += 0.5 * kick(toBeat16Time(16.0 + 4.0, bar2Time));\n    res += 0.3 * clap(toBeat16Time(16.0 + 4.0, bar2Time));\n   \tres += 0.5 * kick(toBeat16Time(16.0 + 8.0, bar2Time));\n    res += 0.3 * clap(toBeat16Time(16.0 + 12.0, bar2Time));\n    res += 0.3 * clap(toBeat16Time(16.0 + 14.0, bar2Time));\n\n    res += 0.02 * hihat(toBeat16Time(16.0 + 0.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(16.0 + 1.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(16.0 + 3.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(16.0 + 4.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(16.0 + 5.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(16.0 + 6.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(16.0 + 7.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(16.0 + 8.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(16.0 + 9.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(16.0 + 11.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(16.0 + 13.0, bar2Time));\n    res += 0.02 * hihat(toBeat16Time(16.0 + 15.0, bar2Time));\n    \n    return clamp(res, -1.0, 1.0);\n}","name":"Sound","description":"","type":"sound"}]}