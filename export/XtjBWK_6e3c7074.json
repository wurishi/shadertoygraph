{"ver":"0.1","info":{"id":"XtjBWK","date":"1517227045","viewed":276,"name":"Arrow with rounded corners","username":"mskr","description":"Just a 2d arrow shape","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Visualization functions from https://www.shadertoy.com/view/XsyGRW\nvec3 draw_line(float d, float thickness) {\n  const float aa = 1.0;\n  return vec3(smoothstep(0.0, aa / iResolution.y, max(0.0, abs(d) - thickness)));\n}\nvec3 draw_line(float d) {\n  return draw_line(d, 0.0001);\n}\nfloat draw_solid(float d) {\n  return smoothstep(0.0, 3.0 / iResolution.y, max(0.0, d));\n}\nvec3 draw_distance(float d, vec2 p) {\n  float t = clamp(d * 0.85, 0.0, 1.0);\n  vec3 grad = mix(vec3(1, 0.8, 0.5), vec3(0.3, 0.8, 1), t);\n\n  float d0 = abs(1.0 - draw_line(mod(d + 0.1, 0.2) - 0.1).x);\n  float d1 = abs(1.0 - draw_line(mod(d + 0.025, 0.05) - 0.025).x);\n  float d2 = abs(1.0 - draw_line(d).x);\n  vec3 rim = vec3(max(d2 * 0.85, max(d0 * 0.25, d1 * 0.06125)));\n\n  grad -= rim;\n  grad -= mix(vec3(0.05, 0.35, 0.35), vec3(0.0), draw_solid(d));\n\n  return grad;\n}\n\n// Polynomial smooth minimum by iq\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\n// My own \"smooth absolute\"\nfloat sabs(float d, float eps) {\n    float abs = abs(d);\n    if(d > -eps && d < eps) return mix(abs, eps, (eps - abs) / eps / 2.);\n    return abs;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float ROUNDNESS = .05;\n    \n    float d1 = uv.x - sabs(uv.y - .5, ROUNDNESS)/ 2.;\n    float d2 = 0.4 - uv.x + sabs(uv.y - .5, ROUNDNESS) / 2.;\n    float d3 = .4 - abs(uv.y - .5);\n    fragColor = vec4(draw_distance(smin(smin(d1,d2, ROUNDNESS),d3, ROUNDNESS), uv), 1.);\n}","name":"Image","description":"","type":"image"}]}