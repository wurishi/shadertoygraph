{"ver":"0.1","info":{"id":"XsGyRm","date":"1521383004","viewed":1112,"name":"layered animated figure","username":"FabriceNeyret2","description":"Reproducing [url]https://www.facebook.com/CosmosUpp/videos/1001518269996955/[/url]\n\nSome people consider it's a kind of optical illusion, but I really disagree: just layering.","likes":33,"published":3,"flags":0,"usePreview":0,"tags":["2d","lines","illusion","points","short","reproduction","animgif"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R       iResolution\n#define P(i)    vec2( cos(k*(i)+T/10.), sin(k*(i)+T/10.) )           // heptastar vertex i\n#define S(D,w)  smoothstep( 3., 0.,  length(D)*R.y - w )             // smooth draw\n#define F(t,dt) smoothstep(.2,-.2, abs(t+.5-mod(T/3.-2.,14.))-dt/2.) // fading\nfloat   T , k = 6.28*3./7.;                                // angle between heptastar vertices\n\nfloat line(vec2 p, vec2 a, vec2 b) {                       // draw a line\n    b -= a; p -= a;\n    return S( p - b * clamp(dot(b,p)/dot(b,b), 0., 1.) , 0. );\n}\n\nvec2 point(float n) {                                      // point(n,t) on heptastar \n    float t = mod(T/5.+ n*7./12.,7.), i = floor(t);\n    return mix( P(i), P(i+1.), .5-.5*cos(3.14*fract(t)) );\n}\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    U = ( U+U - R.xy ) / R.y;\n    T = iTime;\n    O -= O;\n    for (float i=0.; i<7.; i++)\n        O.rga += line( U, P(i), P(i+1.) ) * F(9.,7.);      // yellow lines\n\n    for (float n=0.; n<12.; n++) {  \n        vec2 P0 = point(n),\n             P1 = point(n+4.),\n             P2 = point(n+3.);\n            \n        O.a += S( P0-U, 8. ) ;                             // dots\n        O.ra += line( U, P0, P1 ) * (F(2.,1.)+F(9.,3.));   // triangles\n        O.ba += line( U, P0, P2 ) * (F(4.,1.)+F(9.,5.));   // squares\n    }\n    O += (1.-O.a) * .7;                                    // background\n}","name":"Image","description":"","type":"image"}]}