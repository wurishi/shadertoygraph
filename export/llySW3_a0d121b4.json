{"ver":"0.1","info":{"id":"llySW3","date":"1486125983","viewed":764,"name":"simple circles and gradients","username":"stebi","description":"a simple animation where circles and a gradient are added together.","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["circle","gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 ratio;\n    ratio.x = iResolution.x / iResolution.y;\n    ratio.y = 1.0;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5; // center coordinates\n    uv *= ratio;\n    \n    // calculate circles\n    float distance1 = sin(length(uv - vec2(-cos(iTime * 5.0) * 0.05, -sin(iTime * 5.0) * 0.05)) * (30.0 + abs(sin(iTime) * 100.0)));\n    float distance2 = sin(length(uv - vec2(+cos(iTime * 5.0) * 0.05, +sin(iTime * 5.0) * 0.05)) * 100.0);\n    \n    fragColor.rgb = vec3(distance1 * distance2);\n    fragColor.a = 1.0;\n    \n    // calculate rotating color grading\n    float angleRad = iTime;\n    vec2 sc;\n    sc.x = cos(angleRad);\n    sc.y = sin(angleRad);\n    mat2 m = mat2(sc.y, sc.x, -sc.x, sc.y); \n    \n    uv = m * uv;\n    vec4 color1 = vec4(1, 0.4, 0.0, 1);\n    vec4 color2 = vec4(0.1, 0.8, 0.9, 1);\n    fragColor += mix(color1, color2, uv.y);\n}","name":"Image","description":"","type":"image"}]}