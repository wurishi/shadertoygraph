{"ver":"0.1","info":{"id":"NddGRS","date":"1638974761","viewed":296,"name":"Interpolated Pixelization Blur","username":"stoman","description":"Blur the right side of your webcam!","likes":2,"published":3,"flags":2,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int blurSize = 50;\n    \n    if(fragCoord.x < iResolution.x/2.0) {\n        fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n    }\n    else {\n        vec3 col = vec3(0, 0, 0);\n        float totalDist = 0.0;\n        for(int x = 0; x <= 1; x++) {\n            for(int y = 0; y <= 1; y++) {\n                vec2 coordMod = fragCoord - mod(fragCoord, vec2(float(blurSize), float(blurSize)));\n                vec2 offset = vec2(float(x*blurSize), float(y*blurSize));\n                vec2 coord = coordMod + offset;\n                float dist = float(blurSize*blurSize) / abs(coord.x - fragCoord.x) / abs(coord.y - fragCoord.y);\n                totalDist += dist;\n                col += dist * texture(iChannel0, coord/iResolution.xy).xyz;\n            }\n        }\n\n        fragColor = vec4(col / totalDist, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}