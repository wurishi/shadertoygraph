{"ver":"0.1","info":{"id":"3sdSz4","date":"1583136267","viewed":180,"name":"Typhoon","username":"tono","description":"practice","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M(x,y) mod(x,y)  - y/2.\n\nfloat dBox(vec3 p,vec3 s)\n{\n\tp = abs(p) - s;\n\treturn max(max(p.x,p.y),p.z);\n}\nfloat sdSphere(vec3 p)\n{\n    return length(p) - 0.1;\n}\nfloat smin(float d1, float d2, float k){\n    float h = exp(-k * d1) + exp(-k * d2);\n    return -log(h) / k;\n}\n\nmat2 rot(float a)\n{\n\tfloat s = sin(a),c = cos(a);\n\treturn mat2(c,s,-s,c);\n}\nfloat map(vec3 p)\n{\n    vec3 p2 = p;\n\tp.z = M(p.z,10.);\n    p.xz *= rot(1.-iTime);\n    p.z =M(p.z,11.);\n\tfor(int i = 0; i < 3 ; i++)\n\t{\n\t\tp.x = abs(p.x)- 1.5;\n\t\tp.xy *= rot(1.5 * sin(iTime/2.));\n\t\tp.y = abs(p.y) - 0.3;\n        p.xy *= rot(30.);\n\t\tp.yz *= rot(1. - sin(iTime));\n\t\tp.z = abs(p.z) - 0.9;\n\t\tp.xz *= rot(1.* sin(iTime/2.));\n\t}\n\tfloat s = dBox(p,vec3((sin(iTime) + 1.1  )/8.));\n    \n    float s2 = 10. * sin(length(p));\n\treturn smin(s,s2,3.);\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = ( fragCoord.xy *2. - iResolution.xy )/min(iResolution.x,iResolution.y);\n\n\tvec3 color = vec3(0.);\n\t\n\tvec3 cp = vec3(0.,0.,-5.);\n\tvec3 cd = vec3(0.,0.,1.);\n\tvec3 cu = vec3(0.,1.,0.);\n\tvec3 cs = cross(cu , cd);\n\t\n\tfloat target = 2.5;\n\t\n\t//cp.xy *= rot(iTime);\n\tcp += cd * iTime;\n    \n\tvec3 rd = normalize(vec3(cd * target + cs * p.x + cu * p.y));\n\t\n\tfloat depth = 0.;\n\tfloat ac = 0.0;\n\t\n\tfor(int i = 0 ; i <99 ; i++)\n\t{\n\t\tvec3 rp = rd * depth + cp;\n\t\tfloat d = map(rp);\n\t\td = max(abs(d),0.001);\n\t\tac += exp(-d * 3.);\n\t\tdepth += d;\n\t}\n\tcolor = vec3(ac/100.);\n\tfragColor = vec4(color, 1.0 );;\n}","name":"Image","description":"","type":"image"}]}