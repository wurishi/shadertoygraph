{"ver":"0.1","info":{"id":"wtcXDs","date":"1674201238","viewed":35,"name":"mirumoeem_raymarch_temp","username":"mirumoreem","description":"raymarch temp","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["temp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 lightDir = normalize(vec3(0.0, 0.0, 1.0));\n\nfloat dist_func(vec3 pos, float size){\n    return length(pos) - size;\n}\n\nvec3 getNormal(vec3 pos, float size){\n    float ep = 0.0001;\n    return normalize(vec3(\n    dist_func(pos, size) - dist_func(vec3(pos.x - ep, pos.y, pos.z), size),\n        dist_func(pos, size) - dist_func(vec3(pos.x, pos.y - ep, pos.z), size),\n        dist_func(pos, size) - dist_func(vec3(pos.x, pos.y, pos.z - ep), size)\n    ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 pos = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    vec3 color = vec3(0.0);\n    \n    vec3 cameraPos = vec3(0.0, 0.0, 10.0);\n    \n    vec3 ray = normalize(vec3(pos, 0.0) - cameraPos);\n    \n    vec3 cur = cameraPos;\n    \n    vec2 mouseNorm = iMouse.xy * 2.0 - 1.0;\n    \n    float size = 0.7;\n    \n    for (int i = 0; i <64; i++){\n        float d = dist_func(cur, size);\n        if (d < 0.0001){\n            vec3 normal = getNormal(cur, size);\n            float diff = dot(normal, lightDir);\n            color = vec3(diff) + vec3(0.1);\n            break;\n        }\n        cur += ray * d;\n    }\n    \n    vec3 L = lightDir; //光源\n    vec3 N = getNormal(cur, 1.0); //法線\n    vec3 LColor = vec3 (1.0, 0.9, 0.9)*0.5; //光色\n    vec3 I = dot(N, L) * LColor; // 輝度\n    \n    vec3 L2 = normalize(vec3(-cos(iTime), 1.0, sin(iTime)));\n    vec3 L2Color = vec3(0.8, 0.6, 0.1);\n    vec3 I2 = dot(N, L2)*L2Color;\n    \n    vec3 L3 = normalize(vec3(cos(iTime), -1.0, 0.1*sin(iTime)));\n    vec3 L3Color = vec3(0.6, 0.2, 0.7);\n    vec3 I3 = dot(N, L3)*L3Color;\n    \n    color = mix(mix(I2,I3,0.5), I, 0.5);\n    color = I +I2 + I3  ;\n    \n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}