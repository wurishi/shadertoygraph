{"ver":"0.1","info":{"id":"mljBDR","date":"1693947683","viewed":99,"name":"Pulsating_edge_border","username":"troye","description":"A sobel edge detector used to create an automatic pulsating edge indicator. Could be used for a visual indicating importance.","likes":3,"published":1,"flags":0,"usePreview":1,"tags":["sobel","color","edgedetection","modifiable"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float avgCol(vec4 col){\n    return (col.x+col.y+col.z)/3.0;\n}\n\n//https://en.wikipedia.org/wiki/Sobel_operator\nfloat sobelOperation(vec2 uv,float offsetx,float offsety){\n    //center not actually needed for sobel operation\n    //float center=avgCol(texture(iChannel0, uv));\n    float centerLeft=avgCol(texture(iChannel0, uv+vec2(-offsetx,0.0)));\n    float centerRight=avgCol(texture(iChannel0, uv+vec2(offsetx,0.0)));\n    \n    float top=avgCol(texture(iChannel0, uv+vec2(0.0,offsety)));\n    float topLeft=avgCol(texture(iChannel0, uv+vec2(-offsetx,offsety)));\n    float topRight=avgCol(texture(iChannel0, uv+vec2(offsetx,offsety)));\n \n    float botom=avgCol(texture(iChannel0, uv+vec2(0.0,-offsety)));\n    float botomLeft=avgCol(texture(iChannel0, uv+vec2(-offsetx,-offsety)));\n    float botomRight=avgCol(texture(iChannel0, uv+vec2(offsetx,-offsety)));\n    \n    float op1=topLeft+2.0*centerLeft+botomLeft-topRight-2.0*centerRight-botomRight;\n    float op2=topLeft+2.0*top+topRight-botomLeft-2.0*botom-botomRight;\n    return sqrt(op1*op1 + op2*op2);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //change this color to change the color of the border\n    vec3 baseCol=vec3(1.0,1.0,0.0);\n    //Set this to something static if you dont want pulsing\n    float offset=abs(sin(iTime));\n    //0 means show everything, the higher the value the less will be shown, 1=nothing\n    float cuttoff=0.2;\n    \n    //This doesnt look great :/, but enable it if you want the simulation to pulsate, also uncomment the other line using this\n    //Also doesnt interact well with the cuttof\n    //float neonVal=0.01;\n    \n    \n    vec2 uv = fragCoord/iResolution.xy; \n    \n    vec3 normalCol=texture(iChannel0,uv).xyz;\n    \n    float sobelVal=sobelOperation(uv,offset/iResolution[0],offset/iResolution[0]);\n    if(sobelVal<cuttoff){\n         sobelVal=0.0;\n    }\n    \n    //sobelVal=neonVal/sobelVal;\n    vec3 sobelCol = vec3(sobelVal,sobelVal,sobelVal)*baseCol;\n    \n    \n    //Add sobelmask ontop of the texture, remove the normalcol to get only the border\n    vec3 col=normalCol+sobelCol;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}