{"ver":"0.1","info":{"id":"M3Xcz4","date":"1725902235","viewed":57,"name":"Lens dispertion","username":"bogdanmikh","description":"Lens dispertion effect","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["lens","dispertion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 resolution = iResolution.xy;\n    \n    // effect settings\n    int intensiveRect = 40;\n    float intensiveEffect = 0.03;\n    \n    // animation settings\n    bool enableAnimation = false;\n    float speedAnimation = 1.;\n    float powerAnimation = 0.01;\n\n    vec4 color = texture(iChannel0, uv);\n    for (int i = 0; i < intensiveRect; i++) {\n        float rectWidth = 0.1 + 0.2 * float(i) / float(intensiveRect);\n        float rectHeight = 0.1 + 0.1 * float(i % 5) / float(intensiveRect) + 0.01 * float(i % 3);\n         \n        float posX = float(i) / float(intensiveRect) * resolution.x * 0.9;\n        float posY = (sin(float(i))) * resolution.y * 0.9;\n        \n        if (enableAnimation) {\n            posX += sin(iTime) * speedAnimation + uv.x;\n            rectWidth += speedAnimation * powerAnimation;\n            rectHeight += abs(sin(iTime)) * 0.5 * speedAnimation * powerAnimation;\n        }\n        \n        if (fragCoord.x > posX && fragCoord.x < posX + rectWidth * resolution.x && \n            fragCoord.y > posY && fragCoord.y < posY + rectHeight * resolution.y) {\n            float uvAnimationX = sin(iTime) * float(enableAnimation) * speedAnimation * 0.3;\n           // float uvAnimationY = speedAnimation * float(enableAnimation) * abs(sin(iTime)) * speedAnimation * 2.;\n            if (i % 2 == 0) {\n                 color.r = texture( iChannel0, vec2(uv.x + uvAnimationX + intensiveEffect, uv.y) ).r;\n            } else {\n                color.b = texture( iChannel0, vec2(uv.x + uvAnimationX + intensiveEffect, uv.y) ).g;\n            }\n        }\n    }\n    fragColor = color;\n}\n","name":"Image","description":"","type":"image"}]}