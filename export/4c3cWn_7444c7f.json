{"ver":"0.1","info":{"id":"4c3cWn","date":"1730921873","viewed":26,"name":"Circulos neka","username":"brlch","description":"Circulos","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n\n    // Corrected time calculation\n    float time =mod(iTime, 4.*3.1415); // Loop time between 0 and 2\n     float sectionN = 15.;\n    \n \n    float sectionX = floor(uv.x*sectionN);\n    \n\n    float r,g,b;\n    r= g= b = 1.;\n    float nX = sectionX/sectionN+(0.5/sectionN);\n    float nY = (sin(time+2.*3.1415/sectionN*sectionX)/2.+0.5);\n    \n    if(sqrt(pow(nX-uv.x,2.)+pow((nY-uv.y)*607./1080.,2.))<0.5/sectionN)\n    {\n        r = sin(4.*uv.x+time*1.4);\n        b = sin(2.*uv.x+time*2.);\n        g = sin(2.*uv.x+time/2.);\n    }\n    \n    \n    \n    fragColor = vec4(\n        r, \n        g,\n        b,\n        1.0\n    ); \n}\n","name":"Image","description":"","type":"image"}]}