{"ver":"0.1","info":{"id":"DsSGWG","date":"1668081415","viewed":79,"name":"chinese character - heart","username":"Joanna","description":"chinese character - heart å¿ƒ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["text","heart","rendering","letter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash( float n ) { return fract(sin(n)*43758.5453); }\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0;\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n               mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n\n}\n\nfloat fbm( vec2 p, float sp)\n{\n    const mat2 m = mat2( 0.8, 0.6, -0.6, 0.8 );\n\n\tfloat f = 0.0;\n    f += 0.5000*noise( p ); p = m*p*2.02; p.y -= sp*iTime;\n    f += 0.2500*noise( p ); p = m*p*2.03; p.x -= sp*iTime;\n    f += 0.1250*noise( p ); p = m*p*2.01; p.x += sp*iTime;\n    f += 0.0625*noise( p );\n    return f/0.9375;\n}\n\n//-----------------------------------------------------------------------\n\nfloat box( in vec2 p, in float x, in float y, in float dirx, in float diry, in float radx, in float rady )\n{\n\tvec2  q = p - vec2(x,y);\n\tfloat u = dot( q, vec2(dirx,diry) );\n\tfloat v = dot( q, vec2(diry,dirx)*vec2(-1.0,1.0) );\n\tvec2  d = abs(vec2(u,v)) - vec2(radx,rady);\n\treturn max(d.x,d.y);\n}\n\nfloat det( vec2 a, vec2 b ) { return a.x*b.y-b.x*a.y; }\nvec3 sdBezier( vec2 b0, vec2 b1, vec2 b2, in vec2 p ) \n{\n  b0 -= p;\n  b1 -= p;\n  b2 -= p;\n\t\n  float a =     det(b0,b2);\n  float b = 2.0*det(b1,b0);\n  float d = 2.0*det(b2,b1);\n  float f = b*d - a*a;\n  vec2  d21 = b2-b1;\n  vec2  d10 = b1-b0;\n  vec2  d20 = b2-b0;\n  vec2  gf = 2.0*(b*d21+d*d10+a*d20); gf = vec2(gf.y,-gf.x);\n  vec2  pp = -f*gf/dot(gf,gf);\n  vec2  d0p = b0-pp;\n  float ap = det(d0p,d20);\n  float bp = 2.0*det(d10,d0p);\n  float t = clamp( (ap+bp)/(2.0*a+b+d), 0.0 ,1.0 );\n  return vec3( mix(mix(b0,b1,t), mix(b1,b2,t),t), t );\n}\n\nfloat sdTriangle( in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p )\n{\n\tvec2 e0 = p1 - p0;\n\tvec2 e1 = p2 - p1;\n\tvec2 e2 = p0 - p2;\n\n\tvec2 v0 = p - p0;\n\tvec2 v1 = p - p1;\n\tvec2 v2 = p - p2;\n\n\tvec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n\tvec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n\tvec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    \n    vec2 d = min( min( vec2( dot( pq0, pq0 ), v0.x*e0.y-v0.y*e0.x ),\n                       vec2( dot( pq1, pq1 ), v1.x*e1.y-v1.y*e1.x )),\n                       vec2( dot( pq2, pq2 ), v2.x*e2.y-v2.y*e2.x ));\n\n\treturn -sqrt(d.x)*sign(d.y);\n}\n\nvec2 sdSegment( vec2 a, vec2 b, vec2 p )\n{\n\tvec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\t\n\treturn vec2( length( pa - ba*h ), h );\n}\n//------------------------------------------------------\n\nfloat fillRectangle( in vec2 p, in float x, in float y, in float dirx, in float diry, in float radx, in float rady )\n{\n\tfloat d = box(p,x,y,dirx,diry,radx,rady);\n    float w = fwidth(d)*4.0;\n\treturn 1.0 - smoothstep(-w, w, d);\n}\n\nfloat fillTriangle( in vec2 p, float x1, float y1, float x2, float y2, float x3, float y3 )\n{ \n    float d = sdTriangle( vec2(x1,y1), vec2(x2,y2), vec2(x3,y3), p );\n\t\n    float w = fwidth(d)*4.0;\n\treturn 1.0 - smoothstep(0.0, w, d);\n}\n\nfloat fillQuad( in vec2 p, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4 )\n{ \n    float d1 = sdTriangle( vec2(x1,y1), vec2(x2,y2), vec2(x3,y3), p );\n    float d2 = sdTriangle( vec2(x1,y1), vec2(x3,y3), vec2(x4,y4), p );\n    float d = min( d1, d2 );\n    float w = fwidth(d)*4.0;\n\treturn 1.0 - smoothstep(0.0, w, d);\n}\n\nfloat fillBezier( in vec2 p, float x1, float y1, float x2, float y2, float x3, float y3, float th1, float th2 )\n{ \n\tvec3 be = sdBezier( vec2(x1,y1), vec2(x2,y2), vec2(x3,y3), p );\n    float d = length(be.xy) - mix(th1,th2,be.z);\n\t\n    float w = fwidth(d)*4.0;\n\treturn 1.0 - smoothstep(-w, w, d);\n}\n\nfloat fillLine( in vec2 p, float x1, float y1, float x2, float y2, float th1, float th2 )\n{ \n\tvec2 li = sdSegment( vec2(x1,y1), vec2(x2,y2), p );\n    float d = li.x - mix(th1,th2,li.y);\n\t\n    float w = fwidth(d)*4.0;\n\treturn 1.0 - smoothstep(-w, w, d);\n}\n//------------------------------------------------------\n\nvec3 fillHeart( in vec2 p, in vec3 bcol)\n{\n    // vec2 p = (2.0*fragCoord-iResolution.xy)/min(iResolution.y,iResolution.x);\n\tp.y = p.y + 0.05;\n    p.x = p.x - 0.02;\n    // background color\n    //vec3 bcol = vec3(1.0,0.8,0.7-0.07*p.y)*(1.0-0.25*length(p));\n    //bcol = vec3(1,1,1);\n    \n    // animate\n    float tt = mod(iTime,1.5)/1.5;\n    float ss = pow(tt,.2)*0.5 + 0.5;\n    ss = 1.0 + ss*0.5*sin(tt*6.2831*3.0 + p.y*0.5)*exp(-tt*4.0);\n    p *= vec2(0.5,1.5) + ss*vec2(0.5,-0.5);\n\n    // shape\n#if 0\n    //p *= 0.8;\n    //p.y = -0.1 - p.y*1.2 + abs(p.x)*(1.0-abs(p.x));\n    //float r = length(p);\n\t//float d = 0.5;\n#else\n\tp.y -= 0.25;\n    float a = atan(p.x,p.y)/3.141593;\n    float r = length(p);\n    float h = abs(a);\n    float d = (13.0*h - 22.0*h*h + 10.0*h*h*h)/(6.0-5.0*h);\n    d = d /5.0;\n#endif\n    \n\t// color\n\tfloat s = 0.75 + 0.75*p.x;\n\ts *= 1.0-0.4*r;\n\ts = 0.3 + 0.7*s;\n\ts *= 0.5+0.5*pow( 1.0-clamp(r/d, 0.0, 1.0 ), 0.1 );\n\t//vec3 hcol = vec3(1.0,0.4*r,0.3)*s;\n    //hcol = vec3(1.0,0.4*r,0.3);\n    vec3 hcol = vec3(0.25,0,0.7);\n\t\n    vec3 col = mix( bcol, hcol, smoothstep( -0.01, 0.01, d-r) );\n    return col;\n}\n\t\nfloat logo( vec2 q, float time)\n{\n\tvec2 p = q - vec2(0.1,0.0);\n\tfloat f = 0.0;\n\n\t//f = mix( f, 1.0, fillRectangle( p, -0.70, 0.00,  1.00, 0.000,  0.08, 0.40) );\n\t//f = mix( f, 1.0, fillRectangle( p, -0.30, 0.00,  1.00, 0.000,  0.08, 0.50) );\n\t//f = mix( f, 1.0, fillTriangle(  p, -0.84, 0.45, -0.56, 0.450, -0.70, 0.30) );\t\n\t//f = mix( f, 1.0, fillTriangle(  p, -0.56,-0.45, -0.84,-0.450, -0.70,-0.30) );\t\n\t//f = mix( f, 1.0, fillTriangle(  p, -0.44, 0.55, -0.16, 0.550, -0.30, 0.35) );\t\n\t//f = mix( f, 1.0, fillTriangle(  p, -0.16,-0.55, -0.44,-0.550, -0.30,-0.35) );\t\n\t//f = mix( f, 1.0, fillBezier(    p, -0.85,-0.01, -1.00, 0.080, -0.83, 0.10, 0.015, 0.002) );\t\n   // f = mix( f, 1.0, fillBezier(    p, -0.15, 0.04, -0.23, -0.15,  0.1,  -0.1, 0.015, 0.02) );\t\n    f = mix( f, 1.0, fillBezier( p, -0.35, 0.1, -0.43, -0.25,  0.2,  -0.13, 0.015, 0.04) );\t\n    f = mix (f, 1.0, fillLine( p, 0.2,  -0.1, 0.14, 0.039,  0.02, 0.01 ));\n    f = mix( f, 1.0, fillTriangle(  p, -0.45, -0.05,  -0.55,-0.07, -0.45, 0.15 ));\n    f = mix( f, 1.0, fillTriangle(  p, 0.4, -0.08,  0.3,-0.07, 0.26, 0.08 ));\n\t//f = mix( f, 1.0, fillQuad(      p, -0.05, 0.70,  0.20, 0.705,  0.24,-0.10, 0.050, 0.200) );\t\n\t//f = mix( f, 1.0, fillTriangle(  p, -0.07, 0.25,  0.15, 0.150,  0.24,-0.50) );\t\n\t//f = mix( f, 1.0, fillTriangle(  p,  0.00,-0.10,  0.18,-0.150,  0.17,-0.80) );\t\n\t//f = mix( f, 1.0, fillRectangle( p,  0.30, 0.60,  0.90, 0.440,  0.12, 0.03) );\n\t//f = mix( f, 1.0, fillQuad(      p,  0.40, 0.68,  0.60, 0.400,  0.58, 0.100, 0.40, 0.150) );\n\t//f = mix( f, 1.0, fillTriangle(    p,  0.58, 0.10,  0.35,-0.050,  0.40, 0.15) );\t\n\t//f = mix( f, 1.0, fillTriangle(    p,  0.37, 0.03,  0.35,-0.050,  0.15, 0.17) );\t\n\t\n\t//float d = (abs(sin(4.5*(p.x-1.15))*0.15+0.05-p.y) - 0.01 - 0.04*clamp(1.0-abs(p.x+0.45)/0.5,0.0,1.0));\n    float d = (abs(sin(3.5*(p.x - time))*0.08-0.35-p.y) - 0.005 - 0.02*clamp(1.0-abs(p.x+0.45)/0.5,0.0,1.0));\n\t//d = max( abs(p.x+0.4)-0.45, d );\n    d = max( abs(p.x+0.2)-1.15, d );\n    float w = fwidth(d)*3.0;//width\n\tf = mix( f, 1.0, 1.0 - smoothstep(0.0, w, d) );\n\t\n\treturn f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    float time = mod( iTime, 40.0 );\n\t\n\tvec2 q = fragCoord.xy / iResolution.xy;\n\tvec2 p = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.y;\n\n\t//p *= 1.5-1.45*smoothstep(0.0,36.0,time);\n\t\n\tfloat al = smoothstep( 3.0,12.0, time);\n\t\n    // logo\n\t//float f = 1.0 - al*0.4*logo( p );\n    float f = 1.0 - 0.3*logo( p, time );\n\n    // background color\n\tvec3 col = vec3(f*0.3,f*0.5,f*0.75);\n    \n    vec2 hp = (2.0*fragCoord-iResolution.xy)/min(iResolution.y,iResolution.x);\n    col += fillHeart( hp, vec3(0,0,0));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}