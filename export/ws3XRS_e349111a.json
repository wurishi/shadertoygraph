{"ver":"0.1","info":{"id":"ws3XRS","date":"1572260028","viewed":114,"name":"2019-10-28 Grid","username":"sinclav","description":"Visualizer for https://soundcloud.com/sin_clav/grid","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XlsGWf","filepath":"https://soundcloud.com/sin_clav/grid","previewfilepath":"https://soundcloud.com/sin_clav/grid","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float spectrum(float freq) {\n    return texture(iChannel0, vec2(freq)).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uv2 = (fragCoord - 0.5 * iResolution.xy) / iResolution.xy;\n    vec2 sp = vec2(spectrum(uv.x), spectrum(uv.y));\n    \n    vec3 col = vec3(0.0, 0.15, 0.28);\n    for (float i=-0.5; i<0.5; i+=1.0/5.0) {\n        for (float j=-0.5; j<0.5; j+=1.0/8.0) {\n            for (int n=0; n<8; n++) {\n                float x = uv2.x + pow(sp.x, 3.3) * 0.39398 * sin(102.0*float(n));\n                float y = uv2.y + pow(sp.y, 2.9) * 0.371238 * sin(130.0*float(n));\n                float xv = smoothstep(j-0.03*sp.x, j, x) * smoothstep(x, x+0.03*sp.x, j+1.5/iResolution.x);\n                float yv = smoothstep(i-0.02*sp.y, i, y) * smoothstep(y, y+0.02*sp.y, i+1.5/iResolution.y);\n           \t\tcol += 0.01 * vec3(xv, xv, xv);\n    \t\t\tcol += 0.012 * vec3(yv, yv, yv);\n            }    \t\t\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}