{"ver":"0.1","info":{"id":"XtcyWs","date":"1534549107","viewed":153,"name":"roll-off","username":"jt","description":"Attempting to achieve something roughly similar to brightness roll-off in film:\nin RGB very bright colors look awful due to being pushed to corners of the RGB cube by clamping.\nIt looks better to desaturate overly bright colors, push them towards white.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["highlights","rolloff","blownoutcolors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A simple brightness roll-off effect, 2018 by J.T.\n\n// Attempting to achieve something roughly similar to brightness roll-off in film:\n// in RGB very bright colors look awful due to being pushed to corners of the RGB cube by clamping.\n// It looks better to desaturate overly bright colors, push them towards white.\nvec3 rolloff(vec3 c)\n{\n    //return c + max(0.0, c.r - 1.0) + max(0.0, c.g - 1.0) + max(0.0, c.b - 1.0);\n    float g = (c.r + c.g + c.b) / 3.0;\n    return tanh(mix(vec3(g), c, exp(-pow(g, 2.0))));\n    //return mix(c, vec3(1), tanh(max(0.0, c.r - 1.0) + max(0.0, c.g - 1.0) + max(0.0, c.b - 1.0)));\n    //return mix(c, vec3(c.r+c.g+c.b)/3.0, (tanh(c.r) + tanh(c.g) + tanh(c.b)) / 3.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = mix(texture(iChannel0, uv * vec2(2, 2)).rgb, texture(iChannel1, uv * vec2(2, 2)).bgr, step(uv.y, 0.5));\n    \n    //float f = iMouse.x == 0.0 ? 100.0 * iMouse.x / iResolution.x : 10.0 * (0.5 - 0.5 * cos((iTime + 5.0) * 0.1));\n    float f = 10.0 * (0.5 - 0.5 * cos((iTime + 5.0) * 0.1));\n\n    fragColor = vec4(mix(col * f, rolloff(col * f), step(0.5, uv.x)),1.0);\n}\n","name":"Image","description":"","type":"image"}]}