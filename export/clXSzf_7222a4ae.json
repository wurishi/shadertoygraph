{"ver":"0.1","info":{"id":"clXSzf","date":"1675108026","viewed":134,"name":"Image Cellular Noise","username":"Rutvik_Tak","description":"Image Cellular Noise","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["cellularnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// http://iquilezles.org/www/articles/voronoise/voronoise.htm\nvec3 hash3( vec2 p ) {\n    vec3 q = vec3( dot(p,vec2(127.1,311.7)),\n                   dot(p,vec2(269.5,183.3)),\n                   dot(p,vec2(419.2,371.9)) );\n    return fract(sin(q)*43758.5453);\n}\n\nfloat iqnoise( in vec2 x, float u, float v ) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\n    float k = 1.0+63.0*pow(1.0-v,4.0);\n\n    float va = 0.0;\n    float wt = 0.0;\n    for (int j=-2; j<=2; j++) {\n        for (int i=-2; i<=2; i++) {\n            vec2 g = vec2(float(i),float(j));\n            vec3 o = hash3(p + g)*vec3(u,u,1.0);\n            vec2 r = g - f + o.xy;\n            float d = dot(r,r);\n            float ww = pow( 1.0-smoothstep(0.0,1.414,sqrt(d)), k );\n            va += o.z*ww;\n            wt += ww;\n        }\n    }\n\n    return va/wt;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // image pixelation\n    float pixelation = 10.;\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec2 res = iResolution.xy/pixelation;\n    uv = floor(uv*res)/res;\n    vec4 iPixel = texture(iChannel0,uv);\n    vec3 iColor = iPixel.rgb;\n    //\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    vec3 color = vec3(0.0);\n\n    st *= 20.;\n    float n = iqnoise(st, 1.0, 0.);\n    color = vec3(n);\n    color*=iColor;\n \n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}