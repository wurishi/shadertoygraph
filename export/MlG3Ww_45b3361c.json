{"ver":"0.1","info":{"id":"MlG3Ww","date":"1474912709","viewed":309,"name":"Stroked Circle","username":"TheGrego","description":"Colored (or transparent) circle with a stroke of variable width.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circle","stroke"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float uFill = 0.0;\nvec4 outerColor = vec4( 1, 0, 0, 1 );\nvec4 innerColor = vec4( 1, 1, 1, 1 );\nfloat strokeWidth = 100.0;\nfloat scale = 1.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    uv.x *= ratio;\n    \n    //scale = (sin(iTime) * 0.5) + 0.5;\n\t//strokeWidth = (sin( iTime ) * 0.5 + 0.5) * 20.0;\n    \n    float strokeRadius = strokeWidth / iResolution.y;\n    \n    \n    //float innerRadius = (1.0 - strokeRadius) * (1.0 - uFill );\n    float outerRadius = scale;\n    float innerRadius = outerRadius - strokeRadius;\n\t\n\tuv = uv * 2.0 - 1.0;\n\tfloat d = length( uv );\n\t\n\t// Perform adaptive anti-aliasing.\n\tfloat w = fwidth( d ) * 0.75;\n\tfloat outer = smoothstep( outerRadius + w, outerRadius - w, d );\n    float inner = smoothstep( innerRadius + w, innerRadius - w, d );\n    \n\tfragColor = mix( outerColor, innerColor, inner ) * outer;    \n}\n","name":"Image","description":"","type":"image"}]}