{"ver":"0.1","info":{"id":"wsfGzB","date":"1546670560","viewed":200,"name":"Audio Frequency Template","username":"iaian7","description":"Basic template to help find the right audio frequency UV sample point.\n\nGreen lines are drawn for increments of 0.1, 0.05, and 0.01.\nBlue position readout is from https://www.shadertoy.com/view/lt3GRj","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["music","audio","template","sample","frequency","note"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Audio Frequency Template by Iaian7\n\n// ---- 8< ---- GLSL Number Printing - @P_Malin ---- 8< ----\n// Creative Commons CC0 1.0 Universal (CC-0) \n// https://www.shadertoy.com/view/4sBSWW\n\nfloat DigitBin(const in int x)\n{\n    return x==0?480599.0:x==1?139810.0:x==2?476951.0:x==3?476999.0:x==4?350020.0:x==5?464711.0:x==6?464727.0:x==7?476228.0:x==8?481111.0:x==9?481095.0:0.0;\n}\n\n// Improved version by TimoKinnunen\n\nfloat PrintValue(vec2 fragCoord, vec2 pixelCoord, vec2 fontSize, float value,\n\t\tfloat digits, float decimals) {\n\tvec2 charCoord = (fragCoord - pixelCoord) / fontSize;\n\tif(charCoord.y < 0.0 || charCoord.y >= 1.0) return 0.0;\n\tfloat bits = 0.0;\n\tfloat digitIndex1 = digits - floor(charCoord.x)+ 1.0;\n\tif(- digitIndex1 <= decimals) {\n\t\tfloat pow1 = pow(10.0, digitIndex1);\n\t\tfloat absValue = abs(value);\n\t\tfloat pivot = max(absValue, 1.5) * 10.0;\n\t\tif(pivot < pow1) {\n\t\t\tif(value < 0.0 && pivot >= pow1 * 0.1) bits = 1792.0;\n\t\t} else if(digitIndex1 == 0.0) {\n\t\t\tif(decimals > 0.0) bits = 2.0;\n\t\t} else {\n\t\t\tvalue = digitIndex1 < 0.0 ? fract(absValue) : absValue * 10.0;\n\t\t\tbits = DigitBin(int (mod(value / pow1, 10.0)));\n\t\t}\n\t}\n\treturn floor(mod(bits / pow(2.0, floor(fract(charCoord.x) * 4.0) + floor(charCoord.y * 5.0) * 4.0), 2.0));\n}\n// ---- 8< -------- 8< -------- 8< -------- 8< ----\n\n// Multiples of 4x5 work best\nvec2 fontSize = vec2(4.0, 5.0) * 3.0;\n\nvec2 grid(int x, int y) { return fontSize.xx * vec2(1,ceil(fontSize.y/fontSize.x)) * vec2(x,y) + vec2(2); }\n\nvec2 limitTo(vec2 point, int x1, int y1, int x2, int y2, int startX, int startY) {\n    return clamp(point, grid(x1,y1), iResolution.xy - grid(x2,y2)) + grid(startX, startY);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = fragCoord/iResolution.xy;\n\n\t// Mouse\n\tvec2 mouse = iMouse.xy;\n\n\t// Audio spectrum sample\n\tvec3 col = texture(iChannel0, uv).rgb;\n\n\t// Measurement scale\n\tcol.g = clamp(abs(mod(uv.x*200.0, 2.0)-1.0)*2.0-1.5, 0.0, 1.0); // Increment of 0.01\n    col.g *= clamp(abs(mod(uv.y*4.0, 2.0)-1.0)*100.0-98.0, 0.0, 1.0);\n\tcol.g = max(clamp(abs(mod(uv.x*40.0, 2.0)-1.0)*20.0-19.0, 0.0, 1.0), col.g); // Increment of 0.05\n    col.g *= clamp(abs(mod(uv.y*4.0, 2.0)-1.0)*100.0-94.0, 0.0, 1.0);\n\tcol.g = max(clamp(abs(mod(uv.x*20.0, 2.0)-1.0)*30.0-29.0, 0.0, 1.0), col.g); // Increment of 0.1\n    col.g *= clamp(abs(mod(uv.y*4.0, 2.0)-1.0)*100.0-90.0, 0.0, 1.0);\n\n\t// Blue indicators\n\tcol.b = 0.25;\n\tcol.b += clamp(abs(mod(uv.x - mouse.x / iResolution.x, 2.0)-1.0)*200.0-199.0, 0.0, 1.0) * clamp(abs(mod(uv.y*4.0+1.0, 2.0)-1.0)*20.0-10.0, 0.0, 1.0);\n\n\tif(mouse.x >= 0.0)\n\t{\n\t\tvec2 vPixelCoord2 = limitTo(vec2(mouse.x-48.0, iResolution.y*0.4),0,0,8,1,0,0); // Follow lines\n\t\tfloat fValue2 = mouse.x / iResolution.x;\n\t\tfloat fDigits = 1.0;\n\t\tfloat fDecimalPlaces = 4.0;\n\t\tfloat fIsDigit2 = PrintValue(fragCoord, vPixelCoord2, fontSize, fValue2, fDigits, fDecimalPlaces);\n\t\tcol.b += fIsDigit2;\n\t}\n    \n\t// Output to screen\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}