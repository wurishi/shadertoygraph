{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//based on code from fragmentarium\n//http://syntopia.github.io/Fragmentarium/\n\nvec3 fractal(vec2 c, vec2 c2) {\t\n\tvec2 z = c;\n\tfloat ci = 0.0;\n\tfloat mean = 0.0;\n\tfor(int i = 0;i < 64; i++) {\n\t\tvec2 a = vec2(z.x,abs(z.y));\n\t\tfloat b = atan(a.y, a.x);\n\t\tif(b > 0.0) b -= 6.283185307179586;\n\t\tz = vec2(log(length(a)),b) + c2;\n\t\tif (i>1) mean+=length(z);\n\t}\n\tmean/=float(62);\n\tci =  1.0 - log2(.5*log2(mean/1.));\n\treturn vec3( .5+.5*cos(6.*ci+0.0),.5+.5*cos(6.*ci + 0.4),.5+.5*cos(6.*ci +0.7) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy - iResolution.xy*.5;\n\tuv /= iResolution.x;\n\tvec2 tuv = uv;\n\tfloat rot=sin(iTime*0.02)*2.7;\t\t\n\tuv.x = tuv.x*cos(rot)-tuv.y*sin(rot);\n\tuv.y = tuv.x*sin(rot)+tuv.y*cos(rot);\n\tfloat juliax = sin(iTime) * 0.01 + 0.2;\n\tfloat juliay = cos(iTime * 0.23) * 0.02 + 5.7;\n\tfragColor = vec4( fractal(uv, vec2(juliax, juliay)) ,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Msf3WS","date":"1378137442","viewed":1646,"name":"Grinning Fractal","username":"ndxbxrme","description":"Ready for Halloween, a fractal that grins like a pumpkin.  ","likes":43,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","julia","fragmentarium"],"hasliked":0,"parentid":"","parentname":""}}