{"ver":"0.1","info":{"id":"DdKcWV","date":"1696626599","viewed":38,"name":"serious seens2","username":"chenxianming","description":"the sdf algorithm from desmos 3d offical reference\nhttps://www.desmos.com/3d/f737ccd4d6","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["desmos3d"],"hasliked":0,"parentid":"csKcDK","parentname":"serious seens1"},"renderpass":[{"inputs":[{"id":"4dX3zn","filepath":"/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","previewfilepath":"/media/ap/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float d(float a) { return fract(iTime * a) * 3.141593 * 4.; }\nmat2 h(float a) {\n  float b = sin(a), c = cos(a);\n  return mat2(c, b, -b, c);\n}\n\nfloat plot( vec3 p ){\n    p.x = sqrt( p.x ) + sin( p.x );\n    p.y -= p.x;\n    \n    return max( length( p.yz ) - .1, ( p.x / 2. + .5) - 3. );\n}\n\nfloat f(vec3 p) {\n    // https://www.desmos.com/3d/f737ccd4d6\n    vec3 p2 = p;\n    \n    p.x = sqrt( p.x ) + sin( p.x );\n    \n    return min(\n        ( pow( p.y, 2. ) + pow( p.z, 2. ) ) - pow( p.x, 2. ),\n        plot( p2 )\n    );\n}\n\nvec3 k(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * f(b + a.xyy * 5e-4) + a.yyx * f(b + a.yyx * 5e-4) +\n                   a.yxy * f(b + a.yxy * 5e-4) + a.xxx * f(b + a.xxx * 5e-4));\n}\nvec3 l(vec3 q, vec3 a) {\n  float g = 0., i = 0.;\n  vec3 j = normalize(vec3(.57703));\n  j.xz *= h(d(.05));\n\n  vec3 m = normalize(j - a),\n       c = vec3(.7 + .3 * cos(d(.05) + a + vec3(1, 2, 4))), e = vec3(0);\n  for (int n = 0; n < 64; n++) {\n    e = q + a * g, i = f(e);\n    g += i * .11112;\n  }\n  if (i < 1.) {\n    vec3 b = k(e);\n    float o = dot(b, b), p = pow(clamp(dot(b, m), 0., 1.), 50.) * .6;\n    p *= o;\n    vec3 r = reflect(b, a);\n    if( f( e ) == plot( e ) ){\n        return vec3( 1. );\n    }\n    return p * .8 +\n           (.5 + .35 * cos(o + d(.05) * 3. + a.xyx * 2. + vec3(0, 2, 4))) * .2 +\n           texture(iChannel0, r).rgb * .5;\n  }\n  c = sqrt(c), c = sqrt(c), c *= .25;\n  return c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 a = fragCoord.xy / iResolution.xy;\n  a = (a - .5) * 2., a.x *= iResolution.x / iResolution.y;\n  vec3 b = vec3(0, 0, -5), c = vec3(a, 1), e = l(b, c);\n  fragColor = vec4(e, 1);\n}\n","name":"Image","description":"","type":"image"}]}