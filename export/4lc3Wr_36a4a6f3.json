{"ver":"0.1","info":{"id":"4lc3Wr","date":"1468612701","viewed":1131,"name":"Sand Tubes","username":"jameswilddev","description":"This was me debugging a raymarcher, but it came out so colourful I decided to make that the shader instead.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sand"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 lens = normalize(vec3((fragCoord.xy - iResolution.xy / 2.0) / iResolution.xy, 0.2));\n    vec3 location = vec3(iTime, 0.0, iTime);\n    float d;\n    for (int i = 0; i  < 16; i++) {\n        \n        vec3 origin1 = vec3(0.5, sin((floor(location.x) + floor(location.z)) * 0.1) - 1.0, 0.5);\n        vec3 origin2 = vec3(0.5, sin((floor(location.z - 0.5) + floor(location.x - 0.5)) * 0.1) - 1.0, 0.5);\n        vec2 local1 = fract(location.xz) - 0.5;\n        vec2 local2 = fract(location.xz - 0.5) - 0.5;\n        \n        float d1 = distance(vec3(local1.x, location.y, local1.y), vec3(0.0, max(location.y, origin1.y), 0.0)) - 0.6;\n        float d2 = distance(vec3(local2.x, location.y, local2.y), vec3(0.0, max(location.y, origin2.y), 0.0)) - 0.6;\n        d = min(d1, d2);\n        location -= lens * d;\n    }\n\tfragColor = vec4(sin(location + location.y), 1.0);\n}","name":"Image","description":"","type":"image"}]}