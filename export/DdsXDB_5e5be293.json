{"ver":"0.1","info":{"id":"DdsXDB","date":"1669502496","viewed":109,"name":"[myr] Well test","username":"myrmyxo","description":"Trying out some stuff to do tunnels I guess, happy with how this looks even tho it's not what I wanted lmao","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"DdlXDB","parentname":"[myr] Well test 1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float square(float speed,float d, float factor, float offset)\n{\n    return pow(max(0.0,(cos(d+offset-speed*iTime)+factor-1.0)/factor),10000.0);\n}\n\nfloat series(float speed, float d, float factor, float offset, float start, float stepo, float repeat)\n{\n    float gouga = 0.0;\n    for(float i = 0.0; i<repeat; i++)\n    {\n        gouga += square(speed, d+start+stepo*i, factor, offset);\n    }\n    return gouga;\n}\n\nfloat seriesCos(float speed, float d, float factor, float offset, float start, float stepo, float repeat, float cosFactor, float cosStep)\n{\n    float gouga = 0.0;\n    for(float i = 0.0; i<repeat; i++)\n    {\n        gouga += square(speed, d+start+stepo*i+cos(cosFactor*iTime+cosStep*i), factor, offset);\n    }\n    return gouga;\n}\n\nvec3 colorize(float r, float g, float b, float v)\n{\n    v = clamp(v,0.0,1.0);\n    return v*vec3(r,g,b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float factor = 450.0;\n    vec2 offset = vec2(cos(iTime*2.2)*0.1,sin(iTime)*0.2);//vec2(cos(iTime)*0.2,0.5*sin(iTime));\n    vec2 coords = offset+(2.0*fragCoord-iResolution.xy)/iResolution.x;\n    vec2 uv = factor*coords;\n\n    // Distance of the pixel\n    float d = sqrt(pow(pow(uv.x*uv.x,4.0)+pow(uv.y*uv.y,4.0),0.08));\n    \n    // Time varying pixel color\n    vec3 col = colorize(0.5,0.2,1.0,series(2.0,d,10.0,0.0,0.0,0.3,3.0)) + colorize(0.1,0.8,0.3,seriesCos(1.0,d,5.0,0.0,0.0,0.3,10.0,4.0,-0.16)) + colorize(0.4,0.1,0.2,seriesCos(0.0,d,5.0,0.0,0.0,0.1,14.0,4.0,-0.16)) +  colorize(0.4,0.1,0.2,seriesCos(0.0,d,5.0,  3.1418   ,0.0,0.1,14.0,4.0,-0.16));//vec3( pow(max(0.0,cos((d-2.0*iTime)+9.0)*0.1)*10.0,10000.0) + pow(max(0.0,cos(d-4.0*iTime)-0.8)*5.0,10000.0) );//uv.xyy);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}