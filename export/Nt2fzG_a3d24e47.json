{"ver":"0.1","info":{"id":"Nt2fzG","date":"1652377732","viewed":246,"name":"Fractal Experiment 33","username":"aiekick","description":"the same layering texhnique use here [url=https://www.shadertoy.com/view/7lXBz4]Voronoi Tracking Experiment 3(/url]","likes":9,"published":3,"flags":32,"usePreview":0,"tags":["fractal","experiment","12"],"hasliked":0,"parentid":"4s3XDH","parentname":"Fractal Experiment 12 : Morphing"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Stephane Cuillerdier - Aiekick/2022\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// Voronoi Tracking Experiment 1\n\n// based on the shader https://www.shadertoy.com/view/tlKGDh of michael0884\n\n// use mouse for add particles\n// use spacebar for clear the screen\n\n#define COUNT_STEPS 1000\n#define SCALE_STEP 0.001\n    \nfloat layer(vec2 p, float scale)\n{\n\tp -= iResolution.xy * 0.5;\n\tp *= scale;\n\tp += iResolution.xy * 0.5;\n\t\t\n\treturn texelFetch(iChannel0, ivec2(p), 0).w;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0,0,0,1);\n    vec3 color = vec3(1);\n    \n    // layering of same texture\n\tfloat fcount = float(max(COUNT_STEPS, 1));\n\tfloat scale = 1.0 + fcount * SCALE_STEP;\n\tfloat fog = 0.0;\n\tfloat fogStep = 1.0 / fcount;\n\tfor (int i = 0 ; i < COUNT_STEPS ; ++i)\n\t{\n\t\tscale -= SCALE_STEP;\n\t\tfog += fogStep;\n\t\tfloat k = layer(fragCoord, scale);\n\t\tif (k < 0.5) // smart merge for avoid overwrite\n\t\t\tfragColor.rgb = color * fog;\n\t}\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define ITERATIONS 8\n\nvoid mainImage( out vec4 f, vec2 z )\n{\n    f.xyz=iResolution;\n    z = (z+z-f.xy)/f.y * 1.4;\n    vec2 g = z*(.5+.5*sin(iTime * 0.5));\n    \n   \tz -= g;\n    \n    for (int i=0;i<ITERATIONS;i++)\n    {\tz = (f.w = dot(z,z)) < 4. \n        ? mat2(z,-z.y,z.x) * z +  g - vec2(1,.3) : z;}\n \n    float sdf = sqrt(f.w)*log(f.w)-0.1;\n    //sdf = step(0.1, abs(sdf) - 0.1);\n    sdf = step(0.5, sdf) + step(sdf, -0.5);\n    f = vec4(sdf);\n}","name":"Buffer A","description":"","type":"buffer"}]}