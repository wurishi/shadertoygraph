{"ver":"0.1","info":{"id":"l3c3zH","date":"1716119808","viewed":32,"name":"Iamres (Kirin Tor v.1)","username":"iamres","description":"Iamres (Kirin Tor)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["iamreskirintor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi acos(-1.0)\n#define st0(x) clamp((x) / fwidth(x) + 0.5, 0., 1.)\n#define side(a) dot(uv, vec2(sin(a), cos(a)))\n\nvec2 UVtoPolar(vec2 p)\n{\n    return vec2(atan(p.x, p.y), length(p));\n}\n\nvec2 PolarToUV(vec2 p)\n{\n    return vec2(sin(p.x), cos(p.x)) * p.y;\n}\n\nvec2 RotateUV(vec2 uv, float rotation) {\n    return vec2(cos(rotation) * uv.x + sin(rotation) * uv.y, cos(rotation) * uv.y - sin(rotation) * uv.x); }\n    \nfloat sdPie(vec2 p, vec2 c, float r ) {\n    float rotation1 = pi/2.;\n\tp = RotateUV(p, rotation1);\n    p.x = abs(p.x);\n    float l = length(p) - r;\n\tfloat m = length(p - c);\n    return max(l,m*sign(c.y*p.x-c.x*p.y)); }\n    \nfloat Line(vec2 p, vec2 a, vec2 b) {\n\tvec2 pa = p - a, ba = b - a;\n    float t = clamp(dot(pa, ba)/dot(ba, ba), 0.0, 1.0);\n    vec2 c = a+ba*t;\n    float d = length(c-p);\n    float l = 0.002, g = 0.002;\n\treturn min(1.0, 0.003/d); }\n    \nvec2 polarcords (float x, float p) {\n    float u = fract(sin(x))*2.0*pi;\n    return vec2(sin(u), cos(u)) * p; }   \n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat aaStep(float edge, float gradient)\n{\n    float halfPix = fwidth(gradient) / 2.0;\n    float low = edge - halfPix;\n    float hi  = edge + halfPix;\n    return clamp((gradient - low) / (hi - low), 0.0, 1.0);\n}\n\nfloat triangle(vec2 uv, float size) {\n    float rotation1 = pi;    \n\tuv = RotateUV(uv, rotation1);\n    uv.x = abs(uv.x);\n    float w = fwidth(uv.y);\n    float a = pi/3.;\n    float d1 = side(a);\n    a = pi*5./5.;\n    float d2 = side(a); \n    float d = max(d1, d2);\n    return smoothstep(w, -w, d-size); }\n    \n#define H(p) 2.*fract(sin((p)*mat2(127.1,311.7,269.5,183.3))*43758.54) -1.\n    \nfloat noise( in vec2 p ) {\n\tfloat K1 = .366,\n\t      K2 = .2113;\n\tvec2 i = floor( p + (p.x+p.y)*K1 ),\n\t     a = p - i + (i.x+i.y)*K2,\n\t     o = a.x>a.y ? vec2(1,0) : vec2(0,1),\n\t     b = a - o + K2,\n\t     c = a + 2.*K2-1.;\n\tvec3 h = max( .5 - vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.),\n\t     n = h*h*h*h* vec3(dot(a,H(i)), dot(b,H(i+o)), dot(c,H(i+1.)));\n\treturn dot(n, vec3(70)); }\n\nfloat fbm(vec2 uv) {\n\tfloat f,s=2.;\n\tmat2 m = mat2( 1.6,  -1.2, 1.2,  1.6 );\n    for (int i; ++i<5; s += s, uv *= m )\n\t    f += noise( uv )/s;\n\treturn  .5 + .5*f; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 p = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(1.0);\n    col = mix(col, vec3(0.0),smoothstep(1.0, 1.1, min(0.07/abs(length(p*4.+vec2(0.0, -1.0)) - 0.2), 2.0)));\n    float rotation = pi/2.;    \n    vec2 RotP = p;\n\tRotP = RotateUV(p, rotation);\n    float t = pi*(0.28*cos(3.20));\n    vec2 pp = RotP;\n    pp *= 1.3;\n    \n    float d = sdPie(pp+vec2(-0.195, 0.0), vec2(sin(t),cos(t)), 0.235);\n\tcol = mix(col, vec3(0.0),1.0-smoothstep(0.02,0.022,abs(d)));\n    \n    \n    \n    float rotation1 = pi/4.;    \n    vec2 RotP2 = p;\n\tRotP2 = RotateUV(p, rotation1);\n    float dt = -sdBox(RotP2+vec2(-0.105, -0.30), vec2(0.02,0.03));\n    col = mix(col, vec3(0.0),aaStep(0.0, dt));\n    \n    float rotation2 = pi/4.*3.;    \n    vec2 RotP3 = p;\n\tRotP3 = RotateUV(p, rotation2);\n    float dt1 = -sdBox(RotP3+vec2(-0.105, 0.30), vec2(0.02,0.03));\n    col = mix(col, vec3(0.0),aaStep(0.0, dt1));\n    float t1 = pi*(0.18*cos(3.20));\n    vec2 p2 = RotP;\n    p2 *= 1.7;\n    float d3 = sdPie(p2+vec2(-0.205, 0.0), vec2(sin(t1),cos(t1)), 0.43);\n\tcol = mix(col, vec3(0.0),1.0-smoothstep(0.02,0.022,abs(d3)));\n    \n    \n    float dt2 = -sdBox(p+vec2(-0.135, -0.355), vec2(0.02,0.03));\n    col += aaStep(0.0, dt2);\n    float dt3 = -sdBox(p+vec2(0.135, -0.355), vec2(0.02,0.03));\n    col += aaStep(0.0, dt3);\n    \n    \n    float rotation3 = pi*1.5;    \n    vec2 RotP4 = p;\n\tRotP4 = RotateUV(p, rotation3);\n    RotP4 *= 1.3;\n    float t2 = pi*(0.27*cos(pi));\n    float d4 = sdPie(RotP4+vec2(0.575, 0.0), vec2(sin(t2),cos(t2)), 0.35);\n\tcol = mix(col, vec3(0.0),1.0-smoothstep(0.02,0.022,abs(d4)));\n    \n    \n    float rotation4 = pi/1.1;    \n    vec2 RotP5 = p;\n\tRotP5 = RotateUV(p, rotation4);\n    float dt4 = -sdBox(RotP5+vec2(-0.13, 0.14), vec2(0.02,0.03));\n    col = mix(col, vec3(0.0),aaStep(0.0, dt4));\n    \n    float dt7 = -sdBox(RotP5+vec2(-0.13, 0.04), vec2(0.021,0.055));\n    col = mix(col, vec3(0.0),aaStep(0.0, dt7));\n    \n    float rotation5 = pi*1.1;    \n    vec2 RotP6 = p;\n\tRotP6 = RotateUV(p, rotation5);\n    float dt5 = -sdBox(RotP6+vec2(0.13, 0.138), vec2(0.02,0.03));\n    col = mix(col, vec3(0.0),aaStep(0.0, dt5));\n    float dt9 = -sdBox(RotP6+vec2(0.13, 0.04), vec2(0.021,0.055));\n    col = mix(col, vec3(0.0),aaStep(0.0, dt9));\n    \n    float rotation7 = pi*2.;    \n    vec2 RotP7 = p;\n    \n\tRotP7 = RotateUV(p, rotation7);\n    RotP7 *= 0.85;\n    float t7 = pi*(0.07*cos(pi));\n    float d7= sdPie(RotP7+vec2(0.135, 0.02), vec2(sin(t7),cos(t7)), 0.25);\n\tcol = mix(col, vec3(0.0),1.0-smoothstep(0.02,0.022,abs(d7)));\n    col = mix(col, vec3(1.0), smoothstep(1.0, 1.05, min(0.5/abs(length(p*4.+vec2(-0.16, 0.35))), 2.0)));\n    \n    float rotation8 = pi;  \n    vec2 RotP9 = p;\n    RotP6 = RotateUV(p, rotation8);\n    RotP6 *= 0.85;\n    float t8 = pi*(0.07*cos(pi));\n    float d8= sdPie(RotP6+vec2(0.135, -0.02), vec2(sin(t8),cos(t8)), 0.25);\n\tcol = mix(col, vec3(0.0),1.0-smoothstep(0.02,0.022,abs(d8)));\n    col = mix(col, vec3(1.0), smoothstep(1.0, 1.05, min(0.5/abs(length(p*4.+vec2(0.16, 0.35))), 2.0)));\n    \n    \n    float dt6 = -sdBox(p+vec2(0., -0.15), vec2(0.03,0.02));      \n    col = mix(col, vec3(0.0),aaStep(0.0, dt6));\n    float dt8 = -sdBox(p+vec2(0., -0.04), vec2(0.03,0.07));\n    col = mix(col, vec3(0.0),aaStep(0.0, dt8));\n    float dt10 = -sdBox(p+vec2(0., 0.05), vec2(0.04,0.04));\n    col = mix(col, vec3(0.0),aaStep(0.0, dt10));\n    \n    \n    col = mix(col, vec3(0.0),smoothstep(1.0, 1.2, min(0.05/abs(length(p*4.+vec2(0.562, -0.195))), 2.0)));\n    col = mix(col, vec3(0.0),smoothstep(1.0, 1.2, min(0.05/abs(length(p*4.+vec2(-0.562, -0.195))), 2.0)));\n    \n    col += smoothstep(1.0, 1.2, min(0.06/abs(length(p*4.+vec2(0.64, -0.09))), 2.0));\n    col += smoothstep(1.0, 1.2, min(0.06/abs(length(p*4.+vec2(-0.64, -0.09))), 2.0));\n    \n    col = mix(col, vec3(0.0),triangle(p+vec2(0.0, 0.113), 0.023)*1.);\n    \n    col += smoothstep(1.0, 1.2, min(0.07/abs(length(p*4.+vec2(0.16, 0.25))), 2.0));\n    col += smoothstep(1.0, 1.2, min(0.07/abs(length(p*4.+vec2(-0.16, 0.25))), 2.0));\n    \n    col = mix(col, vec3(0.0),smoothstep(1.0, 1.2, min(0.04/abs(length(p*4.+vec2(0.125, 0.03))), 2.0)));\n    col = mix(col, vec3(0.0),smoothstep(1.0, 1.2, min(0.04/abs(length(p*4.+vec2(-0.125, 0.03))), 2.0)));\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 q = uv;\n    q *= vec2(5., 2.);\n\tfloat strength = 1.2;\n    float width = 0.3;\n\tq -= vec2(2.5, 0.5);\n\tfloat n = fbm(strength*q - vec2(0, max(2.5, 1.25*strength)*iTime));\n\tfloat c = 1.0 - 16.0 * pow( max(0., length(q*vec2(width+q.y*1.5,0.75)) - n * max( 0., q.y+.25 ) ),1.2 );\n\tfloat x = n * c * (1.5-pow(1.2*uv.y, 4.));\n\tx = clamp(x, 0., 1.);\n    \n    col += vec3(1.1*x, 0.1*pow(x, 3.), 2.*pow(x, 5.));\n\tfloat l = clamp(uv.y, q.y, q.y+0.2);\n    \n\tfragColor = vec4(mix(vec3(0.),col,c/l*0.25), 1.0);\n    \n    \n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}