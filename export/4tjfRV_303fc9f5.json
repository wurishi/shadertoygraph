{"ver":"0.1","info":{"id":"4tjfRV","date":"1516534563","viewed":246,"name":"Devil Rorschach","username":"Flopine","description":"Still experimenting to find great effects :) ","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","twisting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind and Leon for teaching me!\n\n#define ITER 100\n#define PI 3.141592\n#define TAU 2.*PI\n\n\n// UTILITIES ////////////////////////\nmat2 rot (float angle)\n{\n    float c = cos(angle);\n    float s = sin(angle);\n    return mat2 (c,s,-s,c);\n}\n\nvec2 moda (vec2 p, float per)\n{\n\tfloat angle = atan(p.y,p.x);\n    float l = length(p);\n    angle = mod(angle-per/2.,per)-per/2.;\n    return vec2 (cos(angle),sin(angle))*l;\n}\n\nfloat smin(float a, float b, float k)\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\n// PRIMITIVES ////////////////////////\nfloat cylY (vec3 p, float r)\n{\n    return length(p.xz)-r;\n}\n\n\n// MAPS ////////////////////////\nfloat twist (vec3 p, float r)\n{\n    p.xz *= rot(iTime+p.y*1.7);\n    p.xz = moda(p.xz, TAU/3.);  \n    p.x -= 0.5;\n\n    return cylY(p,r);\n}\n\n\nfloat crossy (vec3 p)\n{\n    float t1 = twist(p, 0.1);\n    p.xy *= rot(PI/4.);\n    float t2 = twist(p,0.2);\n    p.xy *= rot(PI/4.);\n    float t3 = twist(p,0.1);\n    \n    return smin(smin(t1,t2, 0.3),t3, 0.3);\n}\n\nfloat sdf(vec3 p)\n{\n    p.xz = abs(p.xz);\n    p.xy *= rot (iTime);\n    p.xz *= rot (sin(iTime));\n    return crossy(p);\n}\n\n\n// MAIN ////////////////////////\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.*(fragCoord.xy / iResolution.xy)-1.;\n    uv.x *= iResolution.x/iResolution.y;\n        \n    vec3 p = vec3 (0.001, 0.001, -3.);\n    vec3 dir = normalize(vec3(uv,1.));\n    \n    float shad = 0.;\n    vec3 color = vec3 (0.);\n    \n    for (int i=0;i<ITER;i++)\n    {\n        float d = sdf(p);\n        if (d<0.001)\n        {\n            shad = float(i)/float(ITER);\n            break;\n        }\n        else shad = 1.;\n        p+=d*dir;\n    }\n    \n\tfragColor = vec4(vec3(shad),1.0);\n}","name":"Image","description":"","type":"image"}]}