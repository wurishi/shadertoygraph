{"ver":"0.1","info":{"id":"Mf2cR3","date":"1722936384","viewed":17,"name":"dullness line","username":"MonkeyZ","description":"dullness line","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shaderart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 1.0 - iResolution.xy) / iResolution.y;\n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime*0.5+uv.xyx+vec3(2,0,4));\n    vec3 col = vec3(.25, .5, .6) + sin(iTime*0.5)*.2;\n    \n    for(float i = .0; i < 2.; i++) {\n        uv = fract(uv*.2);\n     \n        col += i;\n        \n        // 距离中心的距离\n        float d = length(uv) * 25.;\n        // d = sin(d);\n        d = fract(d - iTime * .15);\n        d = abs(d - 0.5);\n        // d = step(.02, d);\n        d = smoothstep(0.0, 0.075, d);\n\n        col = col - (d * .75);\n    }\n\n        \n        // fragColor += vec4(col, 1.0);\n     \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}