{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define FOV 80.0\n#define Z_OFFSET 0.0\n#define SPEED 10.0\n\n// from https://www.shadertoy.com/view/XlXcW4\nconst uint k = 1103515245U;\n\nfloat hash13(uvec3 x)\n{\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    return float(x)/float(0xffffffffU);\n}\n\nvec2 rotate2d(vec2 v, float a) {\n\tfloat sinA = sin(a);\n\tfloat cosA = cos(a);\n\treturn vec2(v.x * cosA - v.y * sinA, v.y * cosA + v.x * sinA);\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 wc = fragCoord.xy - iResolution.xy * .5;\n    \n    vec3 pos = vec3(wc / iResolution.x, -Z_OFFSET);\n    vec3 dir = vec3(wc * sin(radians(FOV / 2.)), iResolution.x * .5 * cos(radians(FOV / 2.)));\n    dir = normalize(dir);\n    \n    {\n        vec2 m = (iMouse.xy - iResolution.xy * .5) / 80.;\n        m.y = -m.y;\n        m.y = clamp(3.14 / 2., -3.14 / 2., m.y);\n\n        float msinx = sin(m.x);\n        float mcosx = cos(m.x);\n        float msiny = sin(m.y);\n        float mcosy = cos(m.y);\n\n        mat3 mat = mat3(1, 0, 0,\n                        0, mcosy, -msiny,\n                        0, msiny, mcosy);\n        mat *= mat3( mcosx, 0, msinx,\n                     0,     1, 0, \n                    -msinx, 0, mcosx);\n\n        dir *= mat;\n        pos *= mat;\n        pos.xz -= iTime * SPEED;\n        pos += 5.5;\n    }\n\n    vec3 sgn_dir = sign(dir);\n    ivec3 isgn_dir = ivec3(sgn_dir);\n    uvec3 dir_is_neg = uvec3((-isgn_dir + 1) / 2);\n    uvec3 pos_is_neg = uvec3((-ivec3(sign(pos)) + 1) / 2);\n \n\tuvec3 uouter = uvec3(ivec3(pos) * isgn_dir) - (dir_is_neg ^ pos_is_neg);\n    vec3 inner = fract(pos * sgn_dir);\n    \n    uint steps = 200u;\n\n    for(uint s = 0u; s < steps; ++s) {\n        const uint pw = 2u;\n        const uint levels = 5u;\n        float hash_value;\n        ivec3 outer = ivec3(uouter + dir_is_neg) * isgn_dir;\n\n        for(uint level = 0u; level < levels; ++level) {\n            float hsh = hash13(\n                (uvec3(outer) >> (level * pw)) + 10000u * level\n            );\n            float mul = float(level) * 2.0 / 10.0;\n            hash_value = (max(0.0, hsh - mul)) / (1.0 - mul);\n        }\n\n        uint level = levels - 1u;\n        while(level > 0u) {\n            float hsh = hash13(\n                (uvec3(outer) >> (level * pw)) + 10000u * level\n            );\n            float m = float(level) * 2.0 / 10.0;\n            hash_value = (hsh - m) / (1.0 - m); // from 0 to 1 if hsh is positive\n            if(hash_value <= 0.0) {\n                break;\n            }\n            --level;\n        }\n        \n        vec3 abs_dir = abs(dir);\n\n        uint cell_size = 1u << (level * pw);\n        vec3 position_in_cell = vec3(uouter & (cell_size - 1u)) + inner;\n\n        vec3 dists_to_axis = float(cell_size) - position_in_cell;\n        vec3 diagonal_dists = dists_to_axis / abs_dir;\n\n        uint closest_dim = diagonal_dists.x < diagonal_dists.y ? (diagonal_dists.x < diagonal_dists.z ? 0u : 2u) : (diagonal_dists.y < diagonal_dists.z ? 1u : 2u);\n        float dist = diagonal_dists[closest_dim];\n        \n        vec3 advance = inner + abs_dir * dist;\n\n        uvec3 prev_uouter = uouter;\n        uouter += uvec3(advance);\n        inner = advance - vec3(uvec3(advance));\n        \n        inner[closest_dim] = 0.0;\n        uouter[closest_dim] = ((prev_uouter[closest_dim] >> (level * pw)) + 1u) << (level * pw);\n\n        if(level == 0u && hash_value > 0.0) {\n            fragColor = vec4(vec3(hash_value), 1.0) / exp(.0004*distance(pos, vec3(outer) + inner));\n            return;\n        }\n    }\n    fragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"mtyGzD","date":"1683642512","viewed":62,"name":"Hash world","username":"fewizz","description":"hash","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["hash"],"hasliked":0,"parentid":"","parentname":""}}