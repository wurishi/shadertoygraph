{"ver":"0.1","info":{"id":"dsBSWz","date":"1670195858","viewed":134,"name":"rainbow spin","username":"kStor2poche","description":"a (quickly done) rainbow that spins ?","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["spin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RATIO iResolution.y/iResolution.x\n#define PI 3.14159265359\n\n//conversion from hsv to rgb\nvec3 hsvrgb( vec3 hsv ) {\n\thsv.x = hsv.x * 360. ;\n\tvec3 rgbtmp;\n\tfloat c = hsv.z * hsv.y ;\n\tfloat x = c * ( 1. - abs(mod(hsv.x/60.,2.) - 1.));\n\tfloat m = hsv.z - c;\n    //it's ugly but it works...\n\tif ( 0.<= hsv.x && hsv.x<60.) {\n\t\trgbtmp = vec3(c,x,0.);\n\t} else if ( 60. <= hsv.x && hsv.x < 120.) {\n\t\trgbtmp = vec3(x,c,0.);\n\t} else if ( 120. <= hsv.x && hsv.x < 180.) {\n\t\trgbtmp = vec3(0.,c,x);\n\t} else if ( 180. <= hsv.x && hsv.x < 240.) {\n\t\trgbtmp = vec3(0.,x,c);\n\t} else if ( 240. <= hsv.x && hsv.x < 300.) {\n\t\trgbtmp = vec3(x,0.,c);\n\t} else if ( 300. <= hsv.x && hsv.x < 360.) {\n\t\trgbtmp = vec3(c,0.,x);\n\t}\n\treturn vec3(rgbtmp.r + m, rgbtmp.g +m, rgbtmp.b + m);\n}\n\nfloat cnorm(vec2 coords) {\n    //centered norm\n\treturn pow(pow(coords.x-.5,2.)+pow(RATIO*(coords.y-.5),2.),.5);\n}\nfloat carg (vec2 coords) {\n\t//centered argument\n\tcoords = coords-vec2(.5,.5);\n\tcoords.y = RATIO*coords.y;\n\tif(coords.x == 0. && coords.y > 0.){\n\t\treturn PI;\n\t} else if(coords.x == 0. && coords.y ==0.) {\n\t\treturn 0.;\n\t} else if(coords.x == 0. && coords.y <0.) {\n\t\treturn -PI;\n\t} else {\n\t\treturn atan(coords.y/coords.x);\n\t}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat hue = mod(.15*iTime+cnorm(uv),1.);\n    vec3 rgb = hsvrgb(vec3(hue,.65,1.))*cos(12.*carg(uv)+6.*(cnorm(uv)-iTime*.35));\n    fragColor = vec4(rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}