{"ver":"0.1","info":{"id":"tdlfDr","date":"1588087512","viewed":189,"name":"Scatter Colors","username":"izutionix","description":"mouse x controls input value\nmouse y controls input saturation\n[url=https://www.shadertoy.com/view/3dXfWH]version without hsv conversion functions[/url]","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["colors","scatter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//hsv conversion nicked from: https://www.ronja-tutorials.com/2019/04/16/hsv-colorspace.html\n\tvec3 hue2rgb(float hue) {\n        hue = fract(hue);\n        float r = abs(hue * 6. - 3.) - 1.;\n        float g = 2. - abs(hue * 6. - 2.);\n        float b = 2. - abs(hue * 6. - 4.);\n        vec3 rgb = vec3(r,g,b);\n        rgb = clamp(rgb, 0., 1.);\n        return rgb;\n    }\n\n    vec3 hsv2rgb(vec3 hsv) {\n        vec3 rgb = hue2rgb(hsv.x);\n        rgb = mix(vec3(1.), rgb, hsv.yyy);\n        rgb = rgb * hsv.z;\n        return rgb;\n    }\n\n    vec3 rgb2hsv(vec3 rgb) {\n        float maxComponent = max(rgb.r, max(rgb.g, rgb.b));\n        float minComponent = min(rgb.r, min(rgb.g, rgb.b));\n        float diff = maxComponent - minComponent;\n        float hue = 0.;\n        if(maxComponent == rgb.r) {\n            hue = 0.+(rgb.g-rgb.b)/diff;\n        } else if(maxComponent == rgb.g) {\n            hue = 2.+(rgb.b-rgb.r)/diff;\n        } else if(maxComponent == rgb.b) {\n            hue = 4.+(rgb.r-rgb.g)/diff;\n        }\n        hue = fract(hue / 6.);\n        float saturation = diff / maxComponent;\n        float value = maxComponent;\n        return vec3(hue, saturation, value);\n    }\n\n\nvec3 ScatterColors(float g, vec3 c) //gradient, color\n{\n    vec3 g3 = vec3(g);\n    vec3 G1 = pow(c, g3);\n    vec3 G2 = 1.-pow(1.-c, 1.-g3);\n    \n    vec3 A = G1*(1.-G1);\n    vec3 B = G2*(1.-G2);\n    \n    return 4.5*mix(A, B, g3);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = vec3(.009, .288, .828);\n    col = rgb2hsv(col);\n\tcol.zy = vec2(.5,.9);\n    if (iMouse.xy!=vec2(0))\n\t\tcol.zy += iMouse.xy/iResolution.xy-vec2(.5,.9);\n    //col.x = (sin(iTime/3.)+1.)/2.; //uncomment to animate hue\n    col = hsv2rgb(col);\n    \n    col = ScatterColors(uv.x, col); //comment to see better what is going on\n    col = ScatterColors(uv.y, col);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}