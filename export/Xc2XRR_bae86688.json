{"ver":"0.1","info":{"id":"Xc2XRR","date":"1705964007","viewed":130,"name":"hadamard matrix","username":"jonasfrey","description":"i asked myself why the very simple componentwise matrix multiplication not is shown in my math class","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["hadamardmatrix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 o_trn_nor = fragCoord.xy / iResolution.xy;\n\n    // Initialize color as black\n    vec3 o_col = vec3(1.0);\n\n    // Scale factor (should be a power of 3)\n    float n_scl_factor = 2.0;\n\n    int n_its = int((sin(iTime)*.5+.5)*10.)+1;\n    // Determine the fractal pattern\n    for (int i = 0; i < n_its; ++i) { // Increase iterations for more detail\n        vec2 o_trn = mod(o_trn_nor * n_scl_factor, 2.0);\n\n        if(floor(o_trn.x) == 1. && floor(o_trn.y) == 0.){\n            o_col *= -1.;\n\n        }\n\n        // Scale down for the next iteration (to check smaller scale patterns)\n        n_scl_factor *= 2.0;\n    }\n\n    // Output to screen\n    fragColor = vec4(o_col, 1.0);\n}","name":"Image","description":"","type":"image"}]}