{"ver":"0.1","info":{"id":"flK3R3","date":"1638082493","viewed":86,"name":"slitscan geometry","username":"jneen","description":"in which different points in 3d space are looking at different slices of time. also reflections for swag","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["slitscan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float time=0.;\n\nfloat box(vec3 p, vec3 a) {\n  vec3 q = abs(p)-a;\n  return length(max(q,0.)) + min(0., max(q.x,max(q.y,q.z)));\n}\n\nmat2 rot(float a){float s=sin(a),c=cos(a); return mat2(c,s,-s,c);}\n\nvec3 M=vec3(0);\nfloat G=0.;\nfloat w(vec3 p) {\n  vec3 planep = p;\n  planep.xz *= rot(time);\n  float plane = box(planep+vec3(0,10,0), vec3(8));\n  p.xz *= rot(time);\n  p.xy *= rot(.2*time);\n  float B= length(p.xz)-1.;//box(p, vec3(1,2,1));//length(p)-2.;\n  B = max(B, -(length(p.xz)-.8));\n  \n  float C=length(p.xy)-1.5;\n  float CC=length(p.yz)-1.5;\n  CC = max(CC, -C);\n  \n  float BB= max(B,-C);\n  M = p.y < 0. ? vec3(.9, .7, .3) : vec3(.2, .8, .5);\n\n\n  if (CC < BB) M = vec3(.4, .6, 1.);\n\n\n  BB = min(BB, CC);\n\n\n  \n  float O = mix(B,BB,.5+.5*sin(time));\n  \n  G += -min(O,0.);\n  \n  O = mix(length(p)-2.,O,sin(2.*time));\n  \n  if (plane < O) M = vec3(.9,.3,.1);\n  \n  return min(plane,O);\n}\n\nfloat ray(vec3 p, vec3 dir){\nfloat d=0.,c;\nfor(int i=0;i<100;i++){\n  c=w(p+dir*d);d+=c*.5;\n  if(c<.01||d>69.)break;\n}\n\nreturn d;\n  \n}\n\nvec3 normal(vec3 p) {\n mat3 k = mat3(p,p,p)-mat3(.01);\n return normalize(w(p)-vec3(w(k[0]),w(k[1]),w(k[2])));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n    uv.x*=iResolution.x/iResolution.y;\n\n    time = 2.*iTime;\n    \n    // COMMENT TO TURN OFF SLITSCAN EFFECT\n    time += sin(2.*uv.y) + length(uv);\n    \n    //uv *= rot(iTime);\n    vec3 col=vec3(0);\n    vec3 cam=vec3(0,0,-8);\n    vec3 dir=normalize(vec3(uv,1));\n    \n    float dist=ray(cam,dir);\n    vec3 mat = M;\n    float glow=G;\n    \n    if (dist<69.) {\n      vec3 hit = cam+dir*dist;\n      vec3 norm = normal(hit);\n      \n      \n      float diff = length(.5+.5*sin(1.+norm))/sqrt(3.);\n      col = mat*diff;\n      \n      vec3 refldir = reflect(dir,norm);\n      float refl = ray(hit+.1*refldir, refldir);\n      \n      if (refl<69.){\n        vec3 reflM = M;\n        vec3 rnorm = normal(hit+refldir*refl);\n        float rdiff = length(.5+.5*sin(1.+rnorm))/sqrt(3.);\n        col = mix(col, .1+reflM * rdiff, .5);\n      }\n\n\n    }\n    \n    //col += glow;\n    \n    // Output to screen\n    fragColor = vec4(col,1);\n\n\n}","name":"Image","description":"","type":"image"}]}