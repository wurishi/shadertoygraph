{"ver":"0.1","info":{"id":"NdVczz","date":"1654333868","viewed":160,"name":" .color dequantization v2","username":"xrx","description":"more @ https://www.shadertoy.com/view/sssBWX","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["color","dither","quantization","gamma","monitor"],"hasliked":0,"parentid":"sssBWX","parentname":".color dequantization"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//--------------------------------- imports \n// IQ \nint   seed = 1;\nint   hash(void) { seed = seed*0x343fd+0x269ec3; return (seed>>16)&32767; }\nfloat rand(void) { return float(hash())/32767.0; }\nvoid  randinit( ivec2 p, int frame ){\n    int n = frame;\n    n = (n<<13)^n; n=n*(n*n*15731+789221)+1376312589; // hash by Hugo Elias\n    n += p.y;\n    n = (n<<13)^n; n=n*(n*n*15731+789221)+1376312589;\n    n += p.x;\n    n = (n<<13)^n; n=n*(n*n*15731+789221)+1376312589;\n    seed = n;\n}\n\n\n//---------------------------------\n#define PI acos(-1.)\n#define PI2 (PI*2.)\n#define Color vec3\nfloat gamma = 2.25;        //compression (1:equal length), req same as monitor  \nint bits = 8;              //8+ depends on mon\n\nvoid dequantize(inout Color c, int b){ float l = exp2(float(b)); c = round(c*l+rand()-.5)/l; }\nfloat clamp01(float x) { return clamp(x,0.,1.); } \nfloat to01(float a){ return a*.5+.5;}\n\nfloat dec(vec2 p){ \n    p = floor(p);\n    float x = length(p)/iResolution.x;\n    return exp(-6.*pow(x,1./4.));\n}\n\nColor scene(ivec2 ip, vec2 r, inout int s){\n    vec2 p = vec2(ip);   \n    \n    //s = int((-sin(iTime*PI*2./30.)*.5+.5)*r.x); \n    s = int(r.x/2.);\n    if (iMouse.z>0.) s = int(iMouse.x);\n \n    float t = iTime; t+=iTimeDelta*rand();\n    \n    float f = 1./10.;\n    float a4 = to01(cos((.0+t*f*00.)*PI2));    \n    float a1 = to01(cos((.2+t*f*1.)*PI2));    \n    float a2 = to01(cos((.4+t*f*1.)*PI2));    \n    float a3 = to01(cos((.6+t*f*1.)*PI2));    \n    float h =  to01(-cos((.00+t*f*1.5)*PI2));   \n    \n    Color c = vec3(0);\n    c+= a3*Color(h,0,1)*dec(p-vec2(r.x*(.5+.4*sin(t*PI2/25.)),r.y*.8-50.));\n    c+= a1*Color(1,h,0)*dec(p-vec2(r.x*(.5+.4*sin(t*PI2/20.)),50));\n    c+= a2*Color(0,1,h)*dec(p-vec2(r.x-50.,r.y*.8*(.5+.4*sin(t*PI2/15.))));\n    \n    //c+= a4*Color(1)    *dec(p-vec2(50,r.y*.8*(.5+.4*sin(t*PI2/10.))));\n    float f2 = 1.;\n    c+= a4*Color(.25)*dec(p- (.5*r+.1*r.x*vec2(cos(t*PI2*f2),1.*-sin(t*PI2*f2) ) ));\n    \n    if (p.y>r.y*.8) c = Color(exp2(-4.))*pow(p.x/r.x,gamma*(1.+3.*to01(sin(t*PI2/10.)))); // even dist ramps\n    if (ip.x==s)    c = Color(0,.5,0)*to01(sin((p.y/r.y+t)*PI2));\n    return c;\n}\n\nvoid mainImage(out vec4 C, vec2 p){\n    vec2 r = iResolution.xy; ivec2 ir = ivec2(r);    ivec2 ip = ivec2(p);   \n\n    randinit(ip,iFrame%3600);\n    int s;\n    Color c = scene(ip,r,s);\n    c = pow(c,vec3(1./gamma));    \n    if(ip.x>s) dequantize(c,bits);\n    C = vec4(c,0);\n}","name":"Image","description":"","type":"image"}]}