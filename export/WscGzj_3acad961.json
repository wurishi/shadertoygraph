{"ver":"0.1","info":{"id":"WscGzj","date":"1568837767","viewed":312,"name":"QuadDamage","username":"dila","description":"\"Inspired\" by one of the maps in Quake3 Arena. You can see the reference screenshot here https://i.imgur.com/23JQqr1.png","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","quake"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x) {\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat box(vec3 p, vec3 d) {\n    vec3 q = abs(p) - d;\n    return max(q.x, max(q.y, q.z));\n}\n\nfloat top(vec3 p) {\n    p.y -= 2.0;\n    p.z = abs(p.z) - 0.2;\n    float b = box(p, vec3(3.0, 3.0, 0.1));\n    vec3 ap = vec3(abs(p.x) - 1.0, p.y, p.z);\n    b = max(b, dot(ap, normalize(vec3(1.0, -1.0, 0.0))) + 1.0);\n    b = max(b, dot(ap, normalize(vec3(0.0, -1.0, 0.0))) + 1.0);\n    b = min(b, length(p.xy - vec2(0.0, 2.0)) - 0.125);\n    return b;\n}\n\nfloat swing(vec3 p) {\n    p.x = abs(p.x) - 0.1;\n    float b = box(p, vec3(1.7, 3.5, 0.1));\n    p.y += 0.5;\n    float c = 1000.0;\n    c = min(c, dot(p, normalize(vec3(-0.15, -1.0, 0.0))) - 0.0);\n    c = min(c, dot(p, normalize(vec3(1.0, 0.15, 0.0))) - 0.2);\n    b = max(b, c);\n    b = max(b, dot(p, normalize(vec3(0.0, -1.0, 0.0))) - 1.4);\n    float e = 1000.0;\n    e = min(e, dot(p, normalize(vec3(-0.15, 1.0, 0.0))) - 0.6);\n    e = min(e, dot(p, normalize(vec3(1.0, -0.05, 0.0))) - 0.2);\n    b = max(b, e);\n    return b;\n}\n\nfloat wallbox(vec3 p, vec3 d) {\n    vec3 q = abs(p) - d;\n    return max(q.x, q.z);\n}\n\nfloat wall(vec3 p) {\n    float b = wallbox(p - vec3(3.0, 0.0, 0.0), vec3(4.0, 5.0, 1.3));\n    float c = 1000.0;\n    c = min(c, dot(p, normalize(vec3(-1.0, 0.4, 0.0))) + 1.2);\n    c = min(c, dot(p, normalize(vec3(-0.5, -0.5, 0.0))) + 1.0);\n    c = min(c, dot(p, normalize(vec3(0.0, -1.0, 0.0))) + 2.0);\n    c = min(c, dot(p, normalize(vec3(-1.0, 0.0, 0.0))) + 0.5);\n    b = max(b, c);\n    return b;\n}\n\nvec3 mapp = vec3(0.0);\nfloat mapmat = 0.0;\n\nfloat map(vec3 p) {\n    mapmat = 0.0;\n    mapp = p;\n    float nz = floor(p.z / 3.0 + 0.5);\n    float pz = (fract(p.z / 3.0) - 0.5) * 3.0;\n    float qz = (fract(p.z / 3.0 + 0.5) - 0.5) * 3.0;\n    float ww = max(abs(p.x) - 0.35, p.y + 2.0);\n\tfloat w = wall(vec3(abs(p.x) - 2.5, p.y, pz));\n    float d = w;\n    if (ww < d) {\n        d = ww;\n        mapmat = 3.0;\n    }\n    float t = top(vec3(p.x, p.y, qz));\n    if (t < d) {\n        mapmat = 2.0;\n        d = t;\n    }\n    for (int i = -1; i <= 1; ++i) {\n        float qzi = qz + float(i) * 3.0;\n        float nzi = nz - float(i);\n        vec3 rp = vec3(p.x, p.y, qzi);\n        p.y -= 3.5;\n        float st = 3.141592 * 0.75 + iTime * 3.141592 * 0.5;\n    \tp.xy *= rot(cos(st + nzi * 3.141592 / 4.0));\n    \tp.y += 3.5;\n    \tfloat s = swing(rp);\n        if (s < d) {\n            mapp = rp + vec3(0.0, 0.0, nzi);\n            d = s;\n            mapmat = 1.0;\n        }\n    }\n    return d;\n}\n\nvec3 normal(vec3 p) {\n\tvec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r) {\n  float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        t += map(o + r * t);\n    }\n    return t;\n}\n\nvec3 tex3(sampler2D channel, vec3 p) {\n    vec3 ta = texture(channel, p.yz).xyz;\n    vec3 tb = texture(channel, p.xz).xyz;\n    vec3 tc = texture(channel, p.xy).xyz;\n    return (ta + tb + tc) / 3.0;\n}\n\nvec4 surf(vec3 r, vec3 w, vec3 sn)\n{\n    vec3 from = vec3(0.8, 0.2, 0.1);\n    vec3 to = vec3(1.0, 1.0, 1.0);\n    float prod = max(dot(sn,-r), 0.0);\n    float off = 0.5 + 0.5 * sin(tex3(iChannel1, w).x*3.141592*5.0);\n    return vec4(mix(from, to, 1.0 - pow(off, 4.0)), off);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    vec2 fuv = uv;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 0.7));\n    vec3 o = vec3(0.5, -1.0, iTime * 2.0);\n    \n    r.yz *= rot(0.2);\n    r.xz *= rot(-0.3);\n    \n    float t = trace(o, r);\n    vec3 wuv = mapp;\n    float mat = mapmat;\n    vec3 w = o + r * t;\n    vec3 sn = normal(w);\n    \n    vec3 lpos = o + vec3(0.2, 1.0, -0.5);\n    vec3 ldel = w - lpos + sn * 0.01;\n    float len = length(ldel);\n    ldel /= len;\n    float lt = trace(lpos, ldel);\n    float lit = max(dot(ldel, -sn), 0.0);\n    if (lt < len) {\n        lit = 0.0;\n    }\n    \n    vec3 tex = tex3(iChannel0, wuv);\n    vec3 s = mix(tex, tex * surf(r, wuv * 0.05 - vec3(0.0, 0.125, 0.0), sn).xyz, 8.0);\n    \n    float wallmat = 1.0 - abs(sign(mat - 0.0));\n    float crossmat = 1.0 - abs(sign(mat - 1.0));\n    float topmat = 1.0 - abs(sign(mat - 2.0));\n    float walkmat = 1.0 - abs(sign(mat - 3.0));\n    \n    vec3 fc = mix(tex, s * vec3(0.75, 0.25, 0.25), crossmat);\n    fc = mix(fc, s, walkmat);\n    fc = mix(fc, s, topmat);\n    fc = mix(fc, s, wallmat);\n    \n    fc *= 1.0 / (1.0 + max(-1.0-wuv.y, 0.0) * 0.5);\n    fc *= 1.0 / (1.0 + max(-3.0+wuv.y, 0.0) * 2.0);\n    fc *= 1.0 / (1.0 + max(abs(wuv.x) - 3.0, 0.0) * 1.0);\n    \n    fc *= lit;\n    \n    float wuy = 1.0 / (1.0 + t * t * 0.01);\n    fc = mix(fc, vec3(1.0, 0.5, 0.25), 1.0 - wuy);\n    \n    fc *= pow(max(1.0 - max(abs(fuv.x), abs(fuv.y)), 0.0), 0.5);\n\n    fragColor = vec4(fc, 1.0);\n}","name":"Image","description":"","type":"image"}]}