{"ver":"0.1","info":{"id":"DdGBWd","date":"1698771132","viewed":32,"name":"inktober 2023 #31 - Fire","username":"Shalexder","description":"fire","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COL1 vec3(16,245,242)/255./*vec3(255, 247, 93)/255.*/\n#define COL2 vec3(7,30,165)/255./*vec3(254, 101, 13)/255.*/\n#define COL3 vec3(161, 1, 0)/255.\n\n\nfloat rand(float n){return fract(sin(n*37.382) * 43758.5453123);}\n\nfloat rand(vec2 p){\n    return fract(1290.326*sin(p.x*24.7865+p.y*8.5703));\n}\n\n\nfloat noise(float p){\n\tfloat fl = floor(p);\n    float fc = fract(p);\n\treturn mix(rand(fl), rand(fl + 1.0), fc);\n}\n\nfloat noise(vec2 n) {\n\tconst vec2 d = vec2(0.0, 1.0);\n  vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\n\nfloat fractalNoise(vec2 p){\n    float r = 0.;\n    float a = 1.;\n    float f = 1.;\n    float s = 0.;\n    for(float i = 0.; i < 3.9; i+=1.){\n        r += noise(p*f)*a;\n        s += a;\n        f *= 2.;\n        a *= .5;\n    }\n    r /= s;\n    return r;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n    \n    uv.y += .2;\n    uv *= 2.;\n    \n    vec3 col = vec3(0.);\n        \n    vec2 baseUv = uv;\n    \n    if(baseUv.y < .2){\n        col = COL2*.4;\n    } else {\n        /*if(rand(floor(uv*100.)) < .01){\n            col = vec3(1.);\n        }*/\n        \n        vec2 id = floor(uv*50.);\n        vec2 fr = fract(uv*50.);\n        if(rand(id) < .005){\n            float d = length(fr-vec2(.5))-rand(id+270.)*.3;\n            col = mix(vec3(2.), col, smoothstep(.1, .2, d));\n        }\n    }\n    \n    uv.y = abs(uv.y);\n    if(baseUv.y < 0.){\n        uv.y *= 1.8;\n        /*\n        vec2 id = floor(uv*50.);\n        vec2 fr = fract(uv*50.);\n        if(rand(id) < .005){\n            float d = length(fr-vec2(.5))-rand(id+270.)*.3;\n            col = mix(vec3(.8), col, smoothstep(.1, .2, d));\n        }*/\n        uv.x += sin(uv.y*40.)*.02;\n    }\n\n\n\n    \n    uv.y *= .5;\n    \n    float flameShape = length(uv-vec2(0., .2))-.1;//+uv.y-.1;\n    //flameShape = \n\n    float d = flameShape-1.*fractalNoise(uv*20.+vec2(0, -iTime*2.))*.1;\n    /*if(d < 0.){\n        col = vec3(1.);\n    }*/\n    col = mix(COL2*.9, col, smoothstep(0.05, .8, flameShape+noise(uv*5.+vec2(0, -iTime*2.))*.1))*.5;\n    col = mix(COL1, mix(COL2, col, smoothstep(0., 0.05, d)), smoothstep(-.15, 0., d));/*mix(COL1, \n    mix(COL2, col, smoothstep(-.1, 0., d))\n    , smoothstep(0., .05, d)); */\n    \n    \n    /*if(baseUv.y < 0.){\n        col *= abs(sin(uv.y*40.+3.1416/4.));\n    }*/\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}