{"ver":"0.1","info":{"id":"cldfz4","date":"1701023367","viewed":13,"name":"zig_zags","username":"graygoose","description":"bruh i don't even know sometimes","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 5\n\nvec3 getColor(vec3 c) {\n    float r = sin(c.x * 10.0 + iTime * 0.1) * 0.5 + 0.5;\n    float g = cos(c.y * 10.0 + iTime * 0.2) * 0.5 + 0.5;\n    float b = sin(c.z * 10.0 + iTime * 0.3) * 0.5 + 0.5;\n    return vec3(r, g, b);\n}\nvec2 rotate(vec2 p, float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\nvec3 fractalFlame(vec2 p, float time) {\n    vec2 c = vec2(sin(time), cos(time)) * 0.5;\n    float a = time * 0.1;\n    float scale = 20.0;\n    float weight = 0.5;\n    vec3 sum = vec3(0.0);\n    for (int i = 0; i < MAX_ITER; i++) {\n        p *= scale;\n        p = rotate(p, a);\n        p += c;\n        if (p.x < 0.0) p.x = -p.x;\n        if (p.y < 0.0) p.y = -p.y;\n        if (p.x > 1.0) p.x = 2.0 - p.x;\n        if (p.y > 1.0) p.y = 2.0 - p.y;\n        vec2 q = vec2(p.x - 0.5, p.y - 0.5);\n        float r = length(q);\n        float a = atan(q.y, q.x) + 2.0 * time;\n        vec2 s = vec2(cos(a), sin(a)) * r;\n        vec2 t = vec2(cos(a * 2.0), sin(a * 2.0)) * r * 0.5;\n        vec3 val = vec3(sin(s.x), cos(t.y), sin(s.y + t.x));\n        sum += weight * val;\n        weight *= 0.5;\n        scale *= 0.5;\n    }\n    return sum / float(MAX_ITER);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy / iResolution.xy) * .5 - .25;\n    float time = iTime * 0.1;\n    vec3 value = fractalFlame(uv, time);\n    fragColor = vec4(getColor(value), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}