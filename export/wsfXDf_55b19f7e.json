{"ver":"0.1","info":{"id":"wsfXDf","date":"1552368900","viewed":95,"name":"Ray Sphere","username":"kiyamada96","description":"ray","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raym"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 lightDir=vec3(-0.577,0.577,0.577);\nconst float PI=3.14;\nconst float angle=90.0;\nconst float fov=angle*0.5*PI/180.0;\n\nfloat distanceFunc(vec3 p)\n{\n    return length(p) - (1.0+sin((p.y+iTime) * 10.0) * 0.1);\n}\n\n\nvec3 getNormal(vec3 p)\n{\n\tfloat d=0.01;\n\treturn normalize(vec3(\n        distanceFunc(p+vec3(d,0.0,0.0))-distanceFunc(p+vec3(-d,0.0,0.0)),\n        distanceFunc(p+vec3(0.0,d,0.0))-distanceFunc(p+vec3(0.0,-d,0.0)),\n        distanceFunc(p+vec3(0.0,0.0,d))-distanceFunc(p+vec3(0,0.0,-d))\n    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p=(fragCoord.xy*2.0-iResolution.xy)/min(iResolution.x,iResolution.y);\n    \n    vec3 cPos=vec3(0.0,0.0,2.0);\n    vec3 cDir=vec3(0.0,0.0,-1.0);\n    vec3 cUp=vec3(0.0,1.0,0.0);   \n    vec3 cSide=cross(cDir,cUp);\n    float targetDepth=1.0;\n    \n    vec3 ray=normalize(vec3(sin(fov)*p.x,sin(fov)*p.y,-cos(fov)));\n    \n    float dist=0.0;\n    float rlen=0.0;\n   \tvec3 rPos=cPos;\n    \n    for(int i=0;i<64;i++)\n    {\n    \tdist=distanceFunc(rPos);\n        rlen+=dist;\n        rPos=cPos+ray*rlen;\n    }\n   \n    if(abs(dist)<0.001)\n    {\n   \t\tvec3 nor=getNormal(rPos);\n        float diff=clamp(dot(nor,lightDir),0.1,1.0);\n        fragColor=vec4(vec3(nor),1.0);\n    }\n    else\n    {\n    \tfragColor=vec4(vec3(0.),1.0);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}