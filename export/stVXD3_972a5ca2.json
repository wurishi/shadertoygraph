{"ver":"0.1","info":{"id":"stVXD3","date":"1641459852","viewed":278,"name":"Kawase Blur Jittered Improved","username":"soudfv","description":"Fork of \"Simple Kawase - Jittered\" by wsmind. https://shadertoy.com/view/ldcfR7\nMore quality than original, less passes than regular Kawase blur.\n3-pass with decreasing jittered offset, last pass jitter changing in time.","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["noise","blur","kawase"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Simple Kawase - Jittered\" by wsmind. https://shadertoy.com/view/ldcfR7\n// 2022-01-06 08:57:58\n\n// Kawase pass 3 with factor 1 and output gamma correction\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 jitter = hash22(fragCoord + iTime);\n    vec2 offset = jitter * AMP * 1.;\n\n    fragColor = pow(KAWASE_PASS(iChannel0, offset, uv), vec4(1./GAMMA_FACTOR));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Input gamma Correction\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = pow(texture(iChannel0, fragCoord/iResolution.xy), vec4(GAMMA_FACTOR));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Kawase pass 1 with factor 4\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 jitter = hash22(fragCoord);\n    vec2 offset = jitter * AMP * 4.;\n\n    fragColor = KAWASE_PASS(iChannel0, offset, uv);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"// Temporal change of blur strength\n#define AMP  (cos(iTime * .5) + 1.) * 0.035 * vec2(iResolution.y/iResolution.x,1.)\n\n// Spatial change of blur strength\n//#define AMP  (uv.x - .5) * 0.035 * vec2(iResolution.y/iResolution.x,1.)\n\n#define GAMMA_FACTOR  2.2\n\n///  2 out, 2 in... Noise by Dave_Hoskins\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nvec4 KAWASE_PASS(sampler2D tex, vec2 offset, vec2 uv)\n{\n    vec3 col = texture(tex, uv + offset * vec2(1.0, 1.0)).rgb;\n    col += texture(tex, uv + offset * vec2(-1.0, 1.0)).rgb;\n    col += texture(tex, uv + offset * vec2(-1.0, -1.0)).rgb;\n    col += texture(tex, uv + offset * vec2(1.0, -1.0)).rgb;\n    return vec4(col * .25, 1.);\n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// Kawase pass 2 with factor 2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 jitter = hash22(fragCoord);\n    vec2 offset = jitter * AMP * 2.;\n    \n    fragColor = KAWASE_PASS(iChannel0, offset, uv);\n}\n","name":"Buffer C","description":"","type":"buffer"}]}