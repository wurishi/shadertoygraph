{"ver":"0.1","info":{"id":"mtBXDW","date":"1676060411","viewed":140,"name":"Black and White Simple Ripples","username":"alexisupsidedown","description":"A shader that generates black and white ripples.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["waves","ripples","sound","interference","physics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n#define RIPPLE_AMOUNT 10.0\n\n#define ADD_SECOND_SOURCE\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.yy;\n    vec2 mouse_uv = iMouse.xy / iResolution.yy; // think of the mouse_uv as an offset from 0,0\n    vec3 color = vec3(0.0);\n    \n    {\n        float d = distance(uv, mouse_uv); // suggestion by @eo\n        float sine = sin((RIPPLE_AMOUNT * d - iTime) * PI);\n        color += vec3(sine); // suggestion by @eo\n    }\n    \n    #ifdef ADD_SECOND_SOURCE\n    {\n        float d = distance(uv, vec2(.5));\n        float sine = sin((RIPPLE_AMOUNT * d - iTime) * PI);\n        color += vec3(sine);\n    }\n    #endif\n    \n    // normalise - from -1..1 to 0..1\n    color = vec3(0.5 + 0.5 * color.r); // suggestion by @eo\n    \n    // thank you @eo for cleaning up my code :D\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}