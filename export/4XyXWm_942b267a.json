{"ver":"0.1","info":{"id":"4XyXWm","date":"1720001724","viewed":36,"name":"EMOJIi","username":"DGMKPixy","description":"An Emoji","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["emoji"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RED vec3(1,0,0)\n#define YELLOW vec3(0.9,0.65,0.1)\n#define BLACK vec3(0.001)\n\n#define sat(x) clamp(x, 0., 1.)\n\n// Si t es a, devuelve 0. SI es b, 1.\nfloat lerp(in float a, in float b, in float t)\n{\n    return sat((t-a)/(b-a));\n}\n\nfloat remap(in vec2 ab, in vec2 cd, in float t)\n{\n    return lerp(ab.x, ab.y, t) * (cd.y-cd.x) + cd.x;\n}\n\nvec2 within(vec2 uv, vec4 rect)\n{\n    return (uv - rect.xy) / (rect.zw - rect.xy);\n}\n\nvec4 Eye(vec2 uv)\n{\n    uv -= .5;\n    vec4 col = vec4(1.);\n    float d = length (uv);\n    col.a = smoothstep(1.,0.95,d);\n    return col;\n}\n\nvec4 Mouth(vec2 uv)\n{\n    return vec4(0.);\n}\n\nvec4 Head(vec2 uv)\n{\n    float size = 0.45;\n    // Head\n    vec4 col = vec4(YELLOW, 1.); //0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    // Como d será 0 en el centro, hay que invertir el smoothstep para crear la mascara del circulo\n    float d = length(uv);\n    col.a = smoothstep(size+0.01, size, d);\n    \n    // Falloff\n    float falloffDistance = 0.15;\n    float edgeShadow = lerp(size - falloffDistance, size, d);\n    edgeShadow *= edgeShadow;\n    col.rgb *= 1.-edgeShadow*.35;// + (RED*.15); //añadimos un poco de color.\n    \n    // Dibujamos la linea\n    float lineWidth = .02;\n    col.rgb = mix(col.rgb, vec3(.7,.3,.1), smoothstep(size - lineWidth, size, d));\n    \n    // HighLight\n    float top = size - 0.06;\n    float bottom = size -  0.08;\n    float highLight = smoothstep(top, bottom, d) * 0.75; // Este númerito nos permite hacer una especie de blend\n    highLight *= remap(vec2(top, -0.1), vec2(.75, 0.), uv.y);\n    col.rgb = mix(col.rgb, vec3(1.), highLight);\n    \n    // Cheecks\n    d = length(uv-vec2(.25,-.15));\n    float cheek = smoothstep(.2, .01, d) * .3;\n    col.rgb = mix(col.rgb, RED, cheek);\n\n    //col = vec4(vec3(highLight), 1.);\n    \n    return col;\n}\n\nvec4 Smiley(vec2 uv)\n{\n    vec4 col = vec4(0.);\n    //size = max(0., size);\n    //blur = (abs(blur)/2.) + 0.00001; // 0.00001 evita que sea 0 y no funcione el smoothstep\n    \n    uv.x = abs(uv.x); // Mirroreamos las uvs\n    \n    vec4 head = Head(uv);\n    vec4 eye = Eye(within(uv, vec4(.13,.06,.27,.22)));\n    vec4 mouth = Mouth(uv);\n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Output to screen\n    fragColor = Smiley(uv);\n}","name":"Image","description":"","type":"image"}]}