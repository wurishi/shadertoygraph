{"ver":"0.1","info":{"id":"7t2fRh","date":"1651795482","viewed":54,"name":"Magnetizm magic","username":"adimineman","description":"Shader to make c run instantly","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cool","coils"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define show_vec\n\n#define SEG 32\n\n#define R .8\n#define I .5\n#define n 100.\n\n#define PI 3.1415\n\nvec3 tuljava(vec3 pz) {\n    float dr = 2. * PI / float(SEG);\n    vec3 sum = vec3(0);\n    for (int i = 0; i < SEG; i++){\n        float theta = dr * float(i);\n        // jebi se, zakaj nezaš pisat šita linearno >:(\n        vec3 dl = vec3(0,cos(theta),-sin(theta))*dr*R;\n        vec3 r  = vec3(0,sin(theta),cos(theta))*R;\n        r+=pz;\n        sum+=cross(dl,r)/(length(r)*length(r)*length(r));\n    }\n    sum *= 1e-6;\n    return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy/2.)/min(iResolution.x,iResolution.y);\n    \n    vec3 poz = vec3(uv*2.,sin(iTime/10.)*R);\n    vec3 offset = vec3(R/2.,0,0);\n    \n    vec3 rez = tuljava(poz+offset)*n*I +\n               tuljava(poz-offset)*n*I;\n    rez *= 1000.;\n    #ifdef show_vec\n    fragColor = vec4(rez, 1);\n    #else\n    fragColor = vec4(vec3(length(rez)), 1);\n    #endif\n}","name":"Image","description":"","type":"image"}]}