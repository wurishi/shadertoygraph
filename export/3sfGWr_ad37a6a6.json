{"ver":"0.1","info":{"id":"3sfGWr","date":"1545613986","viewed":437,"name":"spideyman","username":"objelisks","description":"based on this tweet https://twitter.com/jbtuason/status/1076643008240648192","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["screenspace","spiderman"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 normal = normalize(vec3(dFdx(texture(iChannel0, uv)).x, dFdy(texture(iChannel0, uv)).x, 0.01));\n    \n    vec3 lightPos = normalize(vec3(sin(iTime), cos(iTime), 1.0));\n    vec3 color = vec3(1.0, 0.0, 0.0);\n    float diffuse = max(dot(normal, lightPos), 0.0);\n    float counterdiffuse = min(dot(normal, lightPos), 0.0);\n    float ambient = 0.05;\n    float dotsize = 0.5;\n    float halftone = max(0.0, sin(fragCoord.x/dotsize) * cos(fragCoord.y/dotsize));\n    float hatching = abs(2.0*sin(fragCoord.x + fragCoord.y));\n    vec3 result = color + smoothstep(0.8, 1.0, (diffuse)) * halftone + counterdiffuse * hatching;\n    fragColor = vec4(result, 3.0);\n}","name":"Image","description":"","type":"image"}]}