{"ver":"0.1","info":{"id":"ttcSRM","date":"1580603641","viewed":434,"name":"Coronavirus","username":"zovox","description":"Coronavirus","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["coronavirus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec4 b = texture(iChannel0, uv);\n    fragColor = vec4(b.rgb, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n#define PI 3.14159265359\n#define E 2.7182818284\n#define GR 1.61803398875\n#define MAX_DIM (max(iResolution.x,iResolution.y))\n\n#define time ((sin(float(__LINE__))/PI/GR+1.0)*iTime/PI/GR/E)\n#define flux(x) (vec3(cos(x),cos(4.0*PI/3.0+x),cos(2.0*PI/3.0+x))*.5+.5)\n#define rotatePoint(p,n,theta) (p*cos(theta)+cross(n,p)*sin(theta)+n*dot(p,n) *(1.0-cos(theta)))\n\nfloat saw(float x)\n{\n    x/= PI;\n    float f = mod(floor(abs(x)), 2.0);\n    float m = mod(abs(x), 1.0);\n    return f*(1.0-m)+(1.0-f)*m;\n}\nvec2 saw(vec2 x)\n{\n    return vec2(saw(x.x), saw(x.y));\n}\n\nvec3 saw(vec3 x)\n{\n    return vec3(saw(x.x), saw(x.y), saw(x.z));\n}\nvec4 saw(vec4 x)\n{\n    return vec4(saw(x.x), saw(x.y), saw(x.z), saw(x.w));\n}\n\n\n#define S(x,r) smoothstep( 2e2/R.y, 0., length(vec2(x-l*cos(a),l*sin(a))) -r )//\nfloat biohazard( in vec2 u )\n{\n    vec2  R = iResolution.xy,                                   \n          U = u+u - R;                                          \n    float l = length(U)*30./R.y,  /* .955 = 3/pi  1.05 = pi/3 */\n          a = ( mod( .955*atan(U.y,U.x)-.5, 2.) - 1. ) *1.05,   \n          c = S(15.5,10.5);   \n    return max( 0., S(12.,15.) - S(,3.) - c                      \n                   - max( 0., 1. - (abs(a)-.1)*R.y*.1 )         \n             ) + S(,14.) - S(,10.5)                             \n               + S(15.,9.) - c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.x/iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uv0 = uv;\n    uv = uv*2.0-1.0;\n    uv = (rotatePoint(vec3(uv, 0.)*vec3(aspect, 1., 0.), vec3(0., 0., 1.), -PI/2.).xy/vec2(aspect, 1.));\n    uv.x *= aspect;\n    \n    \n\tfloat sum = 0.;\n    float border = 1.;\n    \n    float bordered = smoothstep(0.4, 0.6, saw(time*E));\n    \n    const float min_outer_radials = 8.0;\n    const float max_outer_radials = 16.0;\n    \n    \n    float outer_count = min_outer_radials+(max_outer_radials-min_outer_radials)*saw(time);\n    \n    for(float i = 0.0; i < max_outer_radials; i+=1.0)\n    {\n        if(i > outer_count)\n            break;\n        float theta = float(i)/float(outer_count)*PI*2.0;\n        vec2 p1 = vec2(cos(theta), sin(theta))*(saw(time*PI*E)*.75+.25);\n    \n        const float min_inner_radials = 8.0;\n        const float max_inner_radials = 32.0;\n\n    \tfloat inner_count = min_inner_radials+(max_inner_radials-min_inner_radials)*saw(time);\n        \n        for(float j = 0.0; j < max_inner_radials; j+=1.0)\n        {\n            if(j > inner_count)\n                break;\n        \tfloat theta2 = float(j)/float(inner_count)*PI*2.0+time*PI*E;\n            vec2 p2 = p1+vec2(cos(theta2), sin(theta2));\n\n            float d = \n                    (p2.y-p1.y)*uv.x-\n                    (p2.x-p1.x)*uv.y+\n                    p2.x*p1.y-p2.y*p1.x/\n                    length(p2-p1);\n            float maxd = .01;\n            \n            float vd = abs(d);\n            \n            if(vd < maxd)\n            {\n                float value = ((length(p1-uv)));\n                sum += value;\n                border *= vd/maxd;\n            }\n        }\n    }\n   \tvec2 u = fragCoord.xy/iResolution.xy;\n    \n    //u = (rotatePoint(vec3(u*2.-1., 0.)*vec3(aspect, 1., 0.), vec3(0., 0., 1.), time).xy/vec2(aspect, 1.)*.5+.5);\n    \n    float bio = biohazard(u*iResolution.xy);\n    float bio_edge = clamp(bio, 0., 1.);\n    vec4 last = texture(iChannel0, uv0);\n    float b = clamp((1.-border),0., 1.);//*bio_edge;\n    float t = time*PI*E;\n    fragColor = vec4(pow(flux(sum*GR+t), vec3(2./3.)), 1.0)*(1.-bio_edge)*b\n        //+(1.-bio_edge)*vec4(pow(flux(bio+PI+t+sum), vec3(1.-saw(time)/GR)), 1.)\n        +last*(bio_edge)-1./64.;\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec4 a = texture(iChannel0, uv);\n    fragColor = a;\n}","name":"Buffer B","description":"","type":"buffer"}]}