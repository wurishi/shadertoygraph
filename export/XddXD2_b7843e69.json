{"ver":"0.1","info":{"id":"XddXD2","date":"1461615994","viewed":4273,"name":"Procedural Paintings","username":"Xor","description":"This is a different painting everyday.","likes":51,"published":1,"flags":32,"usePreview":0,"tags":["procedural","2d","voronoi","noise","perlin","paint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, vec2 fragCoord )\n{\n    vec2 UV = fragCoord/iResolution.xy;\n\tfragColor = texture(iChannel0,UV);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define Seed iDate.z\n#define Size 24.0\n#define Speed 2.0\n\n//White Noise\nfloat n1(float n)\n{\n \treturn fract(cos(n*85.62+Seed)*941.53);   \n}\nfloat n1(vec2 n)\n{\n \treturn n1(n1(n.x)*1436.6+n1(n.y)*346.2);   \n}\nvec2 n2(float n)\n{\n \treturn vec2(n1(n),n1(n*2.79-400.0));   \n}\nvec3 n3(float n)\n{\n \treturn vec3(n1(n),n1(n*2.79-400.0),n1(600.0-n*3.32));   \n}\nvec3 n3(vec2 n)\n{\n \treturn n3(n1(n.x)*0.74+n1(n.y)*0.91);   \n}\n//Perlin Noise\nfloat p1(vec2 n)\n{\n \tvec2 F = floor(n);\n    vec2 S = fract(n);\n    return mix(mix(n1(F),n1(F+vec2(1,0)),S.x),\n               mix(n1(F+vec2(0,1)),n1(F+vec2(1)),S.x),S.y);\n}\nvec2 p2(float n)\n{\n \tfloat F = floor(n);\n    float S = fract(n);\n    return mix(n2(F),n2(F+1.0),S);\n}\n//Voronoi Noise\nvec3 v3(vec2 n)\n{\n    vec2 F = floor(n);\n    float D = 1.0;\n    vec3 C = vec3(0);\n \tfor(int X = -1;X<=1;X++)\n    for(int Y = -1;Y<=1;Y++)\n    {\n        vec2 P = F+vec2(X,Y)+n2(n1(F+vec2(X,Y)));\n        if (length(n-P)<D)\n        {\n        \tD = length(n-P);\n            C = n3(P);\n        }\n    }\n    return C;\n}\nvec2 path(float n)\n{\n \treturn mix(p2(n),p2(n+0.5),abs(0.5-fract(n)));   \n}\nvec3 color(vec2 p)\n{\n \treturn sqrt(v3(p/128.0)*0.7+v3(p/64.0)*0.3); \n}\nvoid mainImage( out vec4 fragColor, vec2 fragCoord )\n{\n    vec4 C = vec4(0);\n    if (iFrame==0)\n    {\n\t\tC = vec4(vec3(p1(fragCoord/2.0)*0.05+0.95),1);\n    }\n    else\n    {\n        vec2 UV = fragCoord/iResolution.xy;\n        C = texture(iChannel0,UV);\n        \n        vec2 B = iResolution.xy*path(iTime*Speed);\n        float P = Size*(p1(fragCoord/4.0)*0.2+0.8)-length(fragCoord-B);\n        C = mix(C,vec4(color(B),1),smoothstep(0.0,Size,P));\n        \n    }\n    fragColor = C;\n}","name":"Buffer A","description":"","type":"buffer"}]}