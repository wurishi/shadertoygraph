{"ver":"0.1","info":{"id":"ltccRH","date":"1531490564","viewed":281,"name":"Mandelbrot Cathedral","username":"marsipan","description":"A simple distortion of the Mandelbrot formula, re-using part of the code from \"Mandelbrot - Smooth\" by Iniqo Quilez (https://www.shadertoy.com/view/4df3Rn). ","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","cathedral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Mandelbrot Cathedral\n// based on https://www.shadertoy.com/view/4df3Rn by Inigo Quilez\n// \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.0);\n    \n        vec2 p = (-iResolution.xy + 2.0*fragCoord.xy)/iResolution.y;\n        float time = iTime;\n        float zoo = 1.7 ;\n     \tfloat coa = cos(3.14/2.0); // cos of rotation angle\n        float sia = sin(3.14/2.0); // sin of rotation angle\n        vec2 xy = vec2( p.x*coa-p.y*sia, p.x*sia+p.y*coa);\n        vec2 c = vec2(-1.3,.0)+xy*zoo;\n\t\t\n        const float B = 256.0;\n        float l = 0.0;\n\t    vec2 z  = vec2(0.0);\n        for( int i=0; i<200; i++ )\n        {\n            // distorting \"z = z*z + c\" does the trick :-) \t\n    \t\tz = vec2( z.x*z.x + z.y*z.y, -4.0*z.x*z.y ) + c;\n\t\t\n    \t\tif( dot(z,z)>(B*B) ) break;\n\n    \t\tl += 1.0;\n        }\n\n    \t// ------------------------------------------------------\n        // smooth interation count\n    \tfloat sl = l - log(log(length(z))/log(B))/log(2.0);\n        float al = smoothstep( -0.1, 0.0, sin(0.5*6.2831*iTime ) );\n        l = mix( l, sl, 1.0 );\n\n        col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\n\n    fragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}