{"ver":"0.1","info":{"id":"dsVXRK","date":"1681331813","viewed":179,"name":"Painter-ify","username":"fishy","description":"repeated edge convolution (not sure if I did it right). Smooths areas of low contrast while retaining edges (mostly). Click to reset","likes":4,"published":3,"flags":32,"usePreview":1,"tags":["convolution","painter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 c, in vec2 p)\n{\n    c = texelFetch(iChannel0, ivec2(p), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define mag(x) dot(x.rgb, vec3(0.2126, 0.7152, 0.0722))\n\nvec2 edgeTangent(vec2 uv, sampler2D tex, float o)\n{\n    vec3 e = vec3(-o, 0, o);\n    float x = \n    mag(texture(tex, uv + e.xz /*-1, 01*/))*01. + mag(texture(tex, uv + e.zz /*01, 01*/))*-1. + \n    mag(texture(tex, uv + e.xy /*-1, 00*/))*02. + mag(texture(tex, uv + e.zy /*01, 00*/))*-2. + \n    mag(texture(tex, uv + e.xx /*-1, -1*/))*01. + mag(texture(tex, uv + e.zx /*01, -1*/))*-1.;\n    float y = \n    mag(texture(tex, uv + e.xz /*-1, 01*/))*01. + mag(texture(tex, uv + e.yz /*00, 01*/))*02. + mag(texture(tex, uv + e.zz /*01, 01*/))*01. +\n    mag(texture(tex, uv + e.xx /*-1, -1*/))*-1. + mag(texture(tex, uv + e.yx /*00, -1*/))*-2. + mag(texture(tex, uv + e.zx /*01, -1*/))*-1.;\n    \n    return vec2(-y, x);\n}\n\nvec4 edgeConvolution(in vec2 uv, sampler2D tex, float steps, float strength)\n{\n    vec4 res = vec4(0);\n    for(float i = 0.; i < steps; i++)\n    {\n        vec4 s = texture(tex, uv);\n        res += s;\n        vec2 edge = edgeTangent(uv, tex, 0.01);\n        uv += edge/steps*strength;\n    }\n    return res / steps;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float currentFrame = texture(iChannel0, uv).w;\n\n    vec3 col = edgeConvolution(uv, iChannel0, 50., 0.03/(currentFrame)).rgb;\n\n    fragColor = vec4(col, 1);\n\n    if(iFrame == 0 || iMouse.w >= 0.)\n    {\n        fragColor = texture(iChannel1, uv);\n        currentFrame = 0.;\n    }\n    fragColor.w = currentFrame + 1.;\n}","name":"Buffer A","description":"","type":"buffer"}]}