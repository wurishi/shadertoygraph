{"ver":"0.1","info":{"id":"7tcyW7","date":"1659911331","viewed":109,"name":"Vignette w/ parabolic cylinders","username":"CanadianWarship","description":"Effect obtained by multiplying by four vectors dependent on uv.\nThe significant part is between lines 11-14. I have split the function in its components for clarity.\nvec4( V3 , .5) can be substituted by vec4(sin(V3) , .5) for a different, darker effect.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["vignette"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\n    vec2 uv = fragCoord.xy / iResolution.xy; // [0. ~ 1.] x [0. ~ 1.]\n    \n    vec4 myImage = texture(iChannel0, uv); // import texture\n    \n    // vignette: obtained by multiplying for an equivalent function\n    // that has value 0. at all sides and 1. at center :\n    //  two parabolic cylinders of 0. at sides and 1. at center\n    //  it is not a paraboloid!\n    // alpha channel is multiplied by 1. every time\n    myImage *= 2.*vec4((uv.yyy), .5);\n    myImage *= 2.*vec4((vec3(1.)-uv.yyy), .5);\n    myImage *= 2.*vec4((vec3(1.)-uv.xxx), .5);\n    myImage *= 2.*vec4((uv.xxx), .5);\n\n    fragColor = vec4(myImage);\n}","name":"Image","description":"","type":"image"}]}