{"ver":"0.1","info":{"id":"wt2SWR","date":"1565627448","viewed":213,"name":"oil U-piter","username":"foran","description":"oil U-piter","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["oilupiter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    const int octaves = 3;\n    const float seed = 43758.5453123;\n    const float seed2 = 73156.8473192;\n  //-------------\n  \nvec3 hsv2rgb(vec3 c){\n  vec4 K=vec4(1.,2./3.,1./3.,3.);\n  vec3 p=abs(fract(c.xxx+K.xyz)*6.-K.www);\n  return c.z*mix(K.xxx,clamp(p-K.xxx,0.,1.),c.y);\n}\n/*\nvec3 rgb2hsv(vec3 c){\n  vec4 K=vec4(0.,-1./3.,2./3.,-1.);\n  vec4 p=mix(vec4(c.bg,K.wz),vec4(c.gb,K.xy),step(c.b,c.g));\n  vec4 q=mix(vec4(p.xyw,c.r),vec4(c.r,p.yzx),step(p.x,c.r));\n  float d=q.x-min(q.w,q.y);\n  float e=1.e-10;\n  return vec3(abs(q.z+(q.w-q.y)/(6.*d+e)),d/(q.x+e),q.x);\n}\n*/\n  //----------\n    vec2 random2(vec2 st, float seed){\n        st = vec2( dot(st,vec2(127.1,311.7)),\n                  dot(st,vec2(269.5,183.3)) );\n        return -1.0 + 2.0*fract(sin(st)*seed);\n    }\n  \n    // Value Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/lsf3WH\n    float noise(vec2 st, float seed) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        vec2 u = f*f*(3.0-2.0*f);\n\n        return mix( mix( dot( random2(i + vec2(0.0,0.0), seed ), f - vec2(0.0,0.0) ), \n                         dot( random2(i + vec2(1.0,0.0), seed ), f - vec2(1.0,0.0) ), u.x),\n                    mix( dot( random2(i + vec2(0.0,1.0), seed ), f - vec2(0.0,1.0) ), \n                         dot( random2(i + vec2(1.0,1.0), seed ), f - vec2(1.0,1.0) ), u.x), u.y);\n    }\n  \n    float fbm1(in vec2 _st, float seed) {\n      float v = 0.0;\n      float a = 0.5;\n      vec2 shift = vec2(100.0);\n      // Rotate to reduce axial bias\n      mat2 rot = mat2(cos(0.5), sin(0.5),\n                      -sin(0.5), cos(0.50));\n      for (int i = 0; i < octaves; ++i) {\n          v += a * noise(_st, seed);\n          _st = rot * _st * 2.0 + shift;\n          a *= 0.4;\n      }\n      return v;\n    }\n  \n    float pattern(vec2 uv, float seed, float time, inout vec2 q, inout vec2 r) {\n\n      q = vec2( fbm1( uv + vec2(0.0,0.0), seed ),\n                     fbm1( uv + vec2(5.2,1.3), seed ) );\n\n      r = vec2( fbm1( uv + 4.0*q + vec2(1.7 - time / 2.,9.2), seed ),\n                     fbm1( uv + 4.0*q + vec2(8.3 - time / 2.,2.8), seed ) );\n\n      vec2 s = vec2( fbm1( uv + 4.0*r + vec2(21.7 - time / 2.,90.2), seed ),\n                     fbm1( uv + 4.0*r + vec2(80.3 - time / 2.,20.8), seed ) );\n\n      vec2 t = vec2( fbm1( uv + 4.0*s + vec2(121.7 - time / 2.,90.2), seed ),\n                     fbm1( uv + 4.0*s + vec2(180.3 - time / 2.,20.8), seed ) );\n\n      float rtn = fbm1( uv + 4.0*t, seed );\n\n     rtn = clamp(rtn, -0.9, .95); \n\n      return rtn;\n    }\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n    {\n      vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n      uv *= 1. + dot(uv, uv)*.3;\n      float time = iTime / 20.;\n      mat2 rot = mat2(cos(time), sin(time),\n                      -sin(time), cos(time));\n      uv = rot * uv;\n      uv *= 1.4 + sin(time) * .3;\n      uv.x -= time;\n      vec2 q = vec2(0.,0.);\n      vec2 r = vec2(0.,0.);\n      vec3 colour = vec3(pattern(uv, seed, time, q, r));\n      colour += vec3( (q.x + q.y), 1., r.x * r.y  );\n      colour += .15;\n       colour.r -= dot(q, r) * 1.;\n       colour.g += r.y;\n       colour = mix(colour, vec3(pattern(uv, seed2, time, q, r), dot(q, r) * 1., 0.), .005);\n       colour -= q.x * 1.5;\n       colour.g += dot(q, r) * 15.;\n       colour = hsv2rgb(colour);\n       fragColor = vec4(abs(colour), 1.);\n      \n     fragColor = vec4(colour + (abs(colour) * .5), 1.);\n    }","name":"Image","description":"","type":"image"}]}