{"ver":"0.1","info":{"id":"MfBSWh","date":"1706942423","viewed":49,"name":"Midnight Sky","username":"PseudoSilence","description":"First Shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradientsandwaves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Position varying pixel color\n    vec4 c1 = vec4(0.0,1.0,0.5,0.5);\n    vec4 c2 = vec4(0.6,0.8,1.0,0.5);\n    vec4 c3 = vec4(0.4,0.2,0.6,0.5);\n    vec4 c4 = vec4(1.0,0.8,0.9,0.5);\n    \n    \n    float fracFactorX = 1.5 * sin(uv.y * 4.0 + iTime * 2.0) + 3.0;\n    float fracFactorY = 0.5 * sin(uv.x * 8.0 + iTime) + 3.0;\n    vec2 newuv = vec2(fract(uv.x* fracFactorX), fract(uv.y * fracFactorY));\n    \n    float newuvxS = 0.5 * sin(newuv.x + iTime) + 0.5;\n    float newuvyC = 0.5 * cos(newuv.y + iTime * 2.0) + 0.5;\n    \n    vec4 top = mix(c1,c2, newuvxS);\n    vec4 bottom = mix(c3,c4, newuvxS);\n    \n    vec4 grad1 = mix(top, bottom, newuvyC);\n        \n    vec4 topp = mix(c1,c2, uv.x * 0.25 + 0.75);\n    vec4 bottomm = mix(c3,c4, uv.x * 0.25 + 0.75);\n    \n    vec4 grad2 = mix(topp, bottomm, uv.y * 2.0 - 1.0);\n        \n    vec3 circle = vec3(0.5,0.5,0.3);\n    float r = length(uv.xy - circle.xy) - circle.z;\n    \n    vec4 mixGrad1 = fract(grad1 - grad2);\n    vec4 mixGrad2 = 1.0 - fract(grad1 / grad2);\n    vec4 finalGrad = fract(mixGrad1 * step(0.0, r) + mixGrad2 * step(0.0, -r));\n\n\n    // Output to screen\n    fragColor = finalGrad;\n}","name":"Image","description":"","type":"image"}]}