{"ver":"0.1","info":{"id":"tlSXDw","date":"1566052500","viewed":103,"name":"LiveCoding003(45min)","username":"Hirai_worthless","description":"fastTravel","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\nmat2 genRot(float t){\n\treturn mat2(cos(t),-sin(t),sin(t),cos(t));\n}\nvec2 pmod (vec2 p, float c){\n    p.xy *= genRot(PI/c);\n\tfloat at = atan(p.y/p.x);\n    at = mod(at, 2. * PI /c);\n    float r = length(p);\n    p = vec2(r * cos(at),r * sin(at));\n    p.xy *= genRot(-PI/c);\n    return p;\n    \n}\nfloat map(vec3 p){\n    float r = 1.0 + 0.5 * sin(p.z * PI / 4.);\n    vec3 c = vec3(6.,6.,2.);\n    p = (fract(p / c + 0.5) - 0.5) * c;\n    p.xy = pmod(p.xy , 6.);\n     p.y = abs(p.y);\n\tfloat sp = length(p - vec3(1.73,1.0,0.) * r) - 0.5;\n    sp = min(sp,length(p.xz - vec2(1.73,0.) * r) - 0.15);\n    sp = min(sp,length(p.xy - vec2(1.73,1.) * r) - 0.15);\n    return sp;\n}\n\nvec3 getNormal(vec3 p){\n\tvec3 x = dFdx(p);\n    vec3 y = dFdy(p);\n    return normalize(cross(x,y));\n}\n\nvec4 trace(vec3 o,vec3 r){\n\tvec4 data;\n    float t;\n    for(int i = 0; i < 64; i++){\n    \tvec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    vec3 p = o + r * t;\n    data.xyz = getNormal(p);\n    data.w = t;\n    return data;\n}\n\nvec3 cam(){\n\tvec3 c = vec3(3.,3.,-2.5 + iTime * 3.);\n    return c;\n}\n\nvec3 ray(vec2 uv,float z) {\n\tvec3 r = normalize(vec3(uv,z));\n    r.xy *= genRot(iTime);\n    return r;\n}\n\nvec3 getColor(vec3 p,vec3 r,vec4 d){\n\tfloat t = d.w;\n    vec3 n = d.xyz;\n    vec3 bc = vec3(1. - dot(n,r));\n    float fog = 1./(1. + t * t * 0.0125);\n    vec3 ccol;\n    float at = atan(r.y/r.x) * 2.;\n    ccol.x = sin(at + iTime);\n    ccol.y = sin(at + iTime + PI * 2. / 3.);\n    ccol.z = sin(at + iTime + PI * 4. / 3.);\n   \tccol  = ccol/2. + 0.5;\n    bc *= ccol;\n    bc = mix(bc,vec3(.0),1. - fog);\n    return vec3(bc);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy * 2. - iResolution.xy)/iResolution.y;\n\tvec3 o = cam();\n    vec3 r = ray(uv,1.5 * sin(iTime));\n    // Time varying pixel color\n    vec4 data = trace(o,r);\n    vec3 col = getColor(o,r,data);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}