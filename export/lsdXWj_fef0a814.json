{"ver":"0.1","info":{"id":"lsdXWj","date":"1461621021","viewed":275,"name":"Magic cristals","username":"stduhpf","description":"I tried to make stuff with worley noise.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","perlinnoise","worleynoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int n = 15;\n\nvec2 p[n];\nfloat seed=79.468; // seed used for the pseudo random number generator\n\nfloat interpol(float val){return smoothstep(0.,1.,val);}\n\n\nfloat rand01(vec2 co)\n{\n    return fract(seed+sin(seed+co.y*seed+co.x*dot(co,vec2(12.9898,78.233)))*43758.5453);\n}\n\nfloat rand55(vec2 co){return rand01(co)-.5;}\n\nvec3 getGrad(vec3 co){\n    return vec3(rand55(vec2(co.y*co.z,co.x)),rand55(vec2(co.y,co.x*co.z)),rand55(vec2(co.z,co.x*co.y)));}\n\n\nvec2 rvec2(int i){\n    return vec2(rand01(vec2(float(i)+.524654,6543456.65784562*float(i)+seed))\n                ,rand01(vec2(float(i)+648.4544,.69584612*float(i)+seed)));\n}\n\nfloat perlin3D(vec3 uv)\n{\n             vec3 relco = fract(uv);\n         vec3 chco = floor(uv);\n        \n        vec3 grad1 = getGrad(chco);\n        vec3 grad2 = getGrad(chco+vec3(1,0,0));\n        vec3 grad3 = getGrad(chco+vec3(1,1,0));\n        vec3 grad4 = getGrad(chco+vec3(0,1,0));\n     \t\n    \tvec3 grad1t = getGrad(chco+vec3(0,0,1));\n        vec3 grad2t = getGrad(chco+vec3(1,0,1));\n        vec3 grad3t = getGrad(chco+vec3(1,1,1));\n        vec3 grad4t = getGrad(chco+vec3(0,1,1));\n        \n    \tfloat a = dot(grad1,relco);\n        float b = dot(grad2,relco-vec3(1,0,0));\n        float c = dot(grad3,relco-vec3(1,1,0));\n        float d = dot(grad4,relco-vec3(0,1,0));\n    \n    \tfloat a2 = dot(grad1t,relco-vec3(0,0,1));\n        float b2 = dot(grad2t,relco-vec3(1,0,1));\n        float c2 = dot(grad3t,relco-1.);\n        float d2 = dot(grad4t,relco-vec3(0,1,1));\n    \n            float noisea = mix(a,b,interpol(relco.x));\n        float noiseb = mix(d,c,interpol(relco.x));\n    float noise1 = mix(noisea,noiseb,interpol(relco.y));\n     \t\tfloat noiseat = mix(a2,b2,interpol(relco.x));\n        float noisebt = mix(d2,c2,interpol(relco.x));\n    float noise2 = mix(noiseat,noisebt,interpol(relco.y));\n        return  mix(noise1,noise2,interpol(relco.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    \n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n\tfor (int i = 0;i<n;i++)\n\t{\n\tp[i]=rvec2(i);    \n\t}\n\tfloat fst = min(distance(uv,p[0]),distance(uv,p[1]));\n    float snd = max(distance(uv,p[0]),distance(uv,p[1]));\n    int col = 0;\n    if (fst == distance(uv,p[1])) col = 1;\n    \n    for (int i = 2;i<n;i++)\n\t{\n    if(fst>distance(uv,p[i]))\n       {\n           snd = fst;\n           fst = distance(uv,p[i]);\n           col = i;\n       }\n       else\n       {\n           snd = min(snd,distance(uv,p[i]));\n       }\n     }\n    \nfloat noise = perlin3D(vec3(10.*uv,iTime*1.2))/2.\n    +perlin3D(vec3(20.*uv,iTime))\n    +perlin3D(vec3(40.*uv,iTime*2.))/3.;\n        \n\n    \n   vec3 color;    \nif (col == 0)\n    color = vec3(1,0,0);\nif (col == 1)\n    color = vec3(0,1,0);\nif (col == 2)\n    color = vec3(1,1,0);\nif (col == 3)\n    color = vec3(0,0,1);\nif (col == 4)\n    color = vec3(1,0,1);\nif (col == 5)\n    color = vec3(1,1,1);\nif (col == 6)\n    color = vec3(1,.5,0);\nif (col == 7)\n    color = vec3(1,0,.5);\nif (col == 8)\n    color = vec3(1,.5,.5);\nif (col == 9)\n    color = vec3(.5,1,0);\nif (col == 10)\n    color = vec3(.5,1,0);\nif (col == 11)\n    color = vec3(.5,1,.5);\nif (col == 12)\n    color = vec3(.5,0,1);\nif (col == 13)\n    color = vec3(0,.5,1);\nif (col == 14)\n    color = vec3(.5,.5,1);\n    \n    vec3 nor = normalize(vec3(dFdx(snd),dFdy(snd),.01));\n\tvec3 lightd = normalize(vec3(iMouse.xy/iResolution.xy-vec2(.5),0.5));\n    float spec = 1./length(lightd-reflect(normalize(vec3(uv-.5,-1.5)),nor));\n    \n    \n    \n    float light = .5+snd+rand55(vec2(floor(2.*iTime+float(col)*mod(floor(10.*rand01(vec2(floor(.2*iTime)))),15.)/float(n)),col))/8.;\n    float diff = abs(dot(nor,lightd));\n    \n    //diff=1.;\n    //spec=.0;\n    \n\tfragColor.rgb = clamp(vec3(0.),vec3(1.),(3.*vec3(snd-fst)*color*(1.+noise/2.)*light*2.*(diff+spec)));\n    \t//fragColor.rgb =vec3(spec+diff)/10.;\n\n}","name":"Image","description":"","type":"image"}]}