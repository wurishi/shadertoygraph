{"ver":"0.1","info":{"id":"DlsczM","date":"1690534401","viewed":112,"name":"VoronoiseWithIntHash","username":"programmerwho","description":"VoronoiseWithIntHash","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float  GridMaxRandom = 0.9;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 XY = fragCoord/iResolution.xy;\n    XY=XY*20.;\n\n\n    vec2 GridPos = floor(XY);\n    vec2 GridOffset = fract(XY);\n    vec2 tempResult = vec2(0.0,0.0);\n    for(int i = -1;i <= 1; i ++)\n    {\n        for(int j = -1; j <= 1; j++)\n        {\n            vec2 currGridPos = GridPos + vec2(i, j);\n            \n            uvec2 p = uvec2(currGridPos);\n            uint n = p.x + 1920U*p.y;\n            \n            n = (n << 13U) ^ n;\n            n = n * (n * n * 15731U + 789221U) + 1376312589U;\n            uvec3 k = n * uvec3(n,n*16807U,n*48271U);\n            vec3 hashPos = vec3( k & uvec3(0x7fffffffU))/float(0x7fffffff);\n    \n            vec3 hashPointInfo = hashPos*vec3(GridMaxRandom,GridMaxRandom,1.0);\n            vec2 currPointLocation = hashPointInfo.xy + vec2(i, j);\n            float distanceRatio = pow(clamp(1.4-dot((GridOffset - currPointLocation),(GridOffset - currPointLocation)), 0.0, 1.4),64.0);\n            tempResult += vec2(hashPointInfo.z*distanceRatio,distanceRatio);\n        }\n    }\n\n    // Time varying pixel color\n    vec3 col = vec3(tempResult.x/tempResult.y,tempResult.x/tempResult.y,tempResult.x/tempResult.y);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}