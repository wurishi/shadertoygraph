{"ver":"0.1","info":{"id":"WldSR2","date":"1581366092","viewed":71,"name":"mandelbrot - test","username":"ciroluiro","description":"the mandelbrot set","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["math","mandelbrot","fractals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITERS 500\n#define MAX_RAD 2.\n\n\nvec2 mult( vec2 a, vec2 b) {\n \t\n    vec2 result;\n    result = vec2(a.x*b.x-a.y*b.y,a.y*b.x+a.x*b.y);\n    return result;\n    \n}\n\nfloat norm( vec2 num ){\n    \n    float norma = pow(num.x,2.) + pow(num.y,2.);\n    norma = sqrt(norma);\n    return norma;\n}\n\nvec2 mandelbrot( vec2 carry, vec2 num){\n    \n    vec2 next = mult(carry, carry) + num;\n    return next;\n}    \n\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //no se estaria usando\n    //float speed = 5.*(iMouse.y/iResolution.y)+1.0;//medio raro\n    float ratio = iResolution.x/iResolution.y;\n    //float scale = pow(2.,1.-mod(iTime,20.));\n    float scale = pow(2.,1.-mod(iTime,3.*5.465));\n    \n    vec2 center = vec2(-1.786448,0.);\n    vec2 leftCorner = vec2(center.x-ratio*scale,center.y+scale);\n    vec2 rightCorner = vec2(ratio*scale + center.x,center.y-scale);\n    \n    vec2 st = fragCoord/iResolution.xy*(rightCorner - leftCorner) + leftCorner;\n    \n    vec2 num = vec2(0.,0.);\n    \n    int i = 0;\n    while(i<ITERS && norm(num)<MAX_RAD) {\n        num = mandelbrot(num, st);\n        i++;\n    }\n    \n    vec3 color = hsb2rgb(vec3(mod(0.7+smoothstep(0.1,0.9,float(i)/float(ITERS)),1.)\n                              ,0.9\n                              ,smoothstep(-0.5,0.7,0.5+float(i)/float(ITERS))));\n    color = vec3(step(MAX_RAD, norm(num)))*color;\n    \n    fragColor = vec4(color,1.);\n}\n\n    ","name":"Image","description":"","type":"image"}]}