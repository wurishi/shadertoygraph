{"ver":"0.1","info":{"id":"sl3SDB","date":"1639684462","viewed":49,"name":"Sample - blended noise","username":"joalmei","description":"Uses a noise texture to blend 2 colors","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 1 - Implementation of \"smooth noise texture\"\n    vec2 uv = fragCoord/iResolution.xy; // Normalized pixel coordinates (from 0 to 1)\n    \n    float interpolation_parameter = texture(iChannel0, uv).r; // \"R\" channel of noise texture is used as\n                                                              // linear interpolation parameter (i.e. pseudo-random value)\n    float min_noise_color = 0.1; // gray-ish, darker\n    float max_noise_color = 0.2; // gray-ish, lighter\n    \n    // this blends the solid colors for the scrollbar randomly (using random interpolation_parameter).\n    float color = max_noise_color * interpolation_parameter + min_noise_color * (1.0 - interpolation_parameter);\n    \n    \n    \n    // 2 - Apply some gradient ON TOP (addition) (can be commented if you want to see only the effect of noise texture)\n    float gradient_ratio = uv.y;     // uses y position of pixel (vertical gradient)\n    float min_gradient_color = 0.05;\n    float max_gradient_color = 0.07;\n    color = color +  max_gradient_color * gradient_ratio + min_gradient_color * (1.0-gradient_ratio);\n\n    // sample texture and output to screen\n    vec4 backgroundColor = texture(iChannel1, uv);\n    // vec4 backgroundColor = vec4(1, 0, 0, 1);\n    if (uv.x > 0.9) {\n        fragColor = vec4(color, color, color, 1);\n    }\n    else if (uv.x > 0.5) {\n        fragColor = vec4(color, color, color, 1) * 0.95 + 0.05 * backgroundColor;\n    }\n    else {\n        fragColor = backgroundColor;\n    }\n        \n}","name":"Image","description":"","type":"image"}]}