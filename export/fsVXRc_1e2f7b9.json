{"ver":"0.1","info":{"id":"fsVXRc","date":"1635116335","viewed":299,"name":"Recursive Blur","username":"Remming_Senegal","description":"Instead of blurring everything in one frame, it blurs over the span of a given amount of frames:\nPROS:\n+Very efficient\n+High FPS\n+Good looking blur\n\nCONS:\n-No videos\n-Takes time to blur","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["2d","filter","buffer","repeat","void"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = texture(iChannel0,uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define BLUR 100\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float x = 3.0/iResolution.x;\n    float y = 3.0/iResolution.y;\n    \n    vec4 average;\n    // Weird glitch where loading the shader for the first time doesn't sample channels\n    // Should be fixed if I add some buffer frames though\n    if(iFrame <= 5) {\n        vec4 m = texture(iChannel0,uv);\n        vec4 N = texture(iChannel0,uv+vec2(0.0,y));\n        vec4 S = texture(iChannel0,uv+vec2(0.0,-y));\n        vec4 W = texture(iChannel0,uv+vec2(x,0.0));\n        vec4 E = texture(iChannel0,uv+vec2(-x,0.0));\n        \n        average = m + N + S + W + E;\n        average /= 5.0;\n\n    \n    } else if(iFrame < BLUR + 5) {\n        vec4 m = texture(iChannel1,uv);\n        vec4 N = texture(iChannel1,uv+vec2(0.0,y));\n        vec4 S = texture(iChannel1,uv+vec2(0.0,-y));\n        vec4 W = texture(iChannel1,uv+vec2(x,0.0));\n        vec4 E = texture(iChannel1,uv+vec2(-x,0.0));\n        \n        average = m + N + S + W + E;\n        average /= 5.0;\n\n    } else {\n        vec4 m = texture(iChannel1,uv);\n        average = m;\n    }\n    \n    \n    fragColor = average;\n}","name":"Buffer A","description":"","type":"buffer"}]}