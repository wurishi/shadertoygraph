{"ver":"0.1","info":{"id":"MssBRl","date":"1497621699","viewed":114,"name":"CUBE","username":"bqq","description":"THE FUN CANNOT BE HALTED","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nbool rtCube(mat4 trans, vec3 o, vec3 d, out float t, out vec3 n)\n{\n    mat4 inv = inverse(trans);\n    vec3 op = (inv * vec4(o, 1.0)).xyz;\n    vec3 od = (inv * vec4(d, 0.0)).xyz;\n    vec3 t0 = (vec3(1.0) - op) / od;\n    vec3 t1 = (vec3(-1.0) - op) / od;\n    \n    vec3 tmin = min(t0, t1);\n    vec3 tmax = max(t0, t1);\n    \n    float fmin = max(tmin.x, max(tmin.y, tmin.z));\n    float fmax = min(tmax.x, min(tmax.y, tmax.z));\n    \n    if (fmin == t0.x)      n = vec3(+1.0, 0.0, 0.0);\n    else if (fmin == t1.x) n = vec3(-1.0, 0.0, 0.0);\n    else if (fmin == t0.y) n = vec3(0.0, +1.0, 0.0);\n    else if (fmin == t1.y) n = vec3(0.0, -1.0, 0.0);\n    else if (fmin == t0.z) n = vec3(0.0, 0.0, +1.0);\n    else if (fmin == t1.z) n = vec3(0.0, 0.0, -1.0);\n    \n    n = (trans * vec4(n, 0.0)).xyz;\n        \n    t = fmin;\n    return fmax >= fmin;\n}\n\nbool rtFloor(vec3 o, vec3 d, out float t, out vec3 n)\n{\n    if (d.y < 0.0)\n    {\n    \tn = vec3(0.0, 1.0, 0.0);\n        t = -o.y / d.y;\n        return true;\n    }\n    else\n\t\treturn false;\n}\n\nmat4 mRotateY(float angle, float sc, vec3 t)\n{\n    float c = cos(angle) * sc;\n    float s = sin(angle) * sc;\n    \n    return mat4(\n        c,  0,  s,   0,\n        0,  sc, 0,   0,\n        -s, 0,  c,   0,\n        t.x,t.y,t.z, 1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.x / iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.yy;\n    vec3 ro = vec3(0.0, 4.0, -12.0);\n\tvec3 rd = normalize(vec3(uv - vec2(0.5 * aspect, 0.5), 1.0));\n    \n    vec3 light = normalize(vec3(1.0, 1.5, 1.0));\n    \n    mat4 m = mRotateY(iTime, 1.5, vec3(0.0, 1.5, 0.0));\n    float rt;\n    vec3 rn;\n    if (rtCube(m, ro, rd, rt, rn)) {\n        float col = max(dot(rn, light) * 0.5 + 0.5, 0.0);\n        fragColor = vec4(col, col, col, 1.0);\n    } else if (rtFloor(ro, rd, rt, rn)) {\n        vec3 p = ro + rd * rt;\n        float shadow = 1.0;\n        float st;\n        vec3 sn;\n        if (rtCube(m, p, light, st, sn)) {\n            shadow = 0.0;\n        }\n        \n        float col = mix(0.3, 0.8, shadow);\n        \n\t\tfragColor = vec4(col, 0.0, 0.0, 1.0);\n    } else {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}