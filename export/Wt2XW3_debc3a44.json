{"ver":"0.1","info":{"id":"Wt2XW3","date":"1567303701","viewed":450,"name":"Blessed Dream","username":"Hirai_worthless","description":"nightmareless","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","phantom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\nvec3 modC(vec3 p,vec3 c){\n    p = (fract(p / c + .5)-.5) * c;\n    return p;\n}\nmat2 genRot(float v){\n    return mat2(cos(v),-sin(v),sin(v),cos(v));\n}\nvec2 pMod(vec2 p,float c){\n    p *= genRot(PI / c);\n    float at = mod(atan(p.y/p.x),PI * 2./c);\n    float r = length(p);\n    p = vec2(r * cos(at),r * sin(at));\n    p *= genRot(-PI /c);\n    return p;\n}\n\nvec2 path(float t){\n    vec2 r;\n    r.x = sin(t) + 0.5 * cos(t * 2.);\n    r.y = cos(t) + 0.5 * sin(t * 2.);\n    return r;\n}\nfloat map(vec3 p){\n    p.xy += path(p.z + iTime);\n    vec3 r = p;\n    p.xy = pMod(p.xy,12.);\n    p = modC(p,vec3(4.,4.,1.5));\n    vec3 q = p;\n    q.x -= 1.5;\n    q = abs(q);\n    float cube = max(q.x,max(q.y / 4.,q.z)) - 0.25;\n    float sp = length(p) - 0.3;\n    float result = min(cube,sp);\n    result = max(result,-(length(r.xy) - 0.5));\n    return result;\n}\n\nfloat fog(float d){\n    return 1./(1. + d * d * 0.01);\n}\n\nvec3 getColor(vec3 p){\n    vec3 c = sin(p);\n    c = c * 0.5 + 0.5;\n    return vec3(c);\n}\n\nvec3 trace(vec3 o,vec3 r){\n    vec3 volume = vec3(0.);\n    float l = 0.05;\n    for(int i = 0; i < 512; i++){\n        vec3 p = o + r * float(i) * l;\n        float d = map(p);\n        vec3 c = getColor(p);\n        volume += clamp(l- d,0.,l) * c * fog(float(i) * l);\n    }\n    return volume;\n}\n\nvec3 cam(){\n\tvec3 c = vec3(0.,0.,-1.5);\n    c.z += iTime * 4.;\n    //c += vec3(2.5 * sin(iTime/2.),2.5 * cos(iTime/2.),iTime * 2.);\n\treturn c;\n}\nvec3 ray(vec2 uv,float z){\n\tvec3 r = normalize(vec3(uv,z));\n    //r.yz *= genRot(PI / 4.);\n    //r.xy *= genRot(PI/4.-iTime / 2.);\n\treturn r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n\tvec2 uv = ( fragCoord.xy * 2. - iResolution.xy) / iResolution.y ;\n\tvec3 c = cam();\n\tvec3 r = ray(uv,1.5);\n\tvec3 color = trace(c,r);\n\n\tfragColor = vec4( color, 1.0 );\n\n}","name":"Image","description":"","type":"image"}]}