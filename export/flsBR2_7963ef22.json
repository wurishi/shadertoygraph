{"ver":"0.1","info":{"id":"flsBR2","date":"1651142763","viewed":73,"name":"Test1000","username":"jasssssi","description":"coming back to shadertoy after a long while","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["learn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float remap01(float a, float b, float t)\n{\n    return (t-a)/(b-a);\n}\n\nfloat remap(float a, float b, float c, float d, float t)\n{\n    return remap01(a, b, t) * (d-c) + c;\n}\n\nfloat Band(float t, float start, float end, float blur)\n{\n    float step1 = smoothstep(start - blur, start + blur, t);\n    float step2 = smoothstep(end + blur, end - blur, t);\n    return step1 * step2;\n}\n\nfloat Rect(vec2 uv, float left, float right, float top,\n                                    float bottom, float blur)\n{\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n    return band1 * band2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = iTime;\n    \n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float x = uv.x;\n    \n    float y = uv.y - 0.3*sin(4.*x + t);\n    \n    float blur = remap(-.5, .5, 0.01, 0.25, x);\n    blur = pow(blur*4., 2.);\n    \n    float mask = Rect(vec2(x, y), -.5, .5, .1, -.1,  blur);\n\n    vec3 col = vec3(1., 1., 1.) * mask;\n    fragColor = vec4(col, 0.);\n}","name":"Image","description":"","type":"image"}]}