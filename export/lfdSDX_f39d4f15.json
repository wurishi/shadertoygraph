{"ver":"0.1","info":{"id":"lfdSDX","date":"1714561904","viewed":125,"name":"Simple Random Sin wave","username":"invar228","description":"Simple random sin wave shader","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["wave","sin","sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14\n\nvec3 bgColorDown = vec3(0.2, 0.1, 0.1);\nvec3 bgColorUp = vec3(0.1, 0.1, 0.2);\n\nvec3 P1ColorIn = vec3(1.0, 0.5, 0.0);\nvec3 P1ColorOut = vec3(1.0, 0.0, 0.0);\n\nvec3 P2ColorIn = vec3(0.0, 0.5, 1.0);  //vec3(1.0, 1.0, 1.0);\nvec3 P2ColorOut = vec3(0.0, 0.0, 1.0); //vec3(0.0, 0.5, 1.0);\nfloat surfaceSpeed = 0.5;\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n\tfloat bg = (cos(uv.x*3.14159*2.0) + sin((uv.y)*3.14159)) * 0.15;\n\t\n\tvec2 p = uv*2.0 - 1.0;\n\tp *= 15.0;\n\tvec2 sfunc = vec2(p.x, p.y + 5.0*sin(uv.x*10.0-iTime*2.0)+2.0*cos(uv.x*25.0+iTime*12.0));\n\tsfunc.y *= uv.x*2.0+0.05;\n\tsfunc.y *= 2.0 - uv.x*2.0+0.05;\n\tsfunc.y /= 0.1; // Thickness fix\n\t\n\tvec3 c = vec3(sfunc.y);\n\n\tfragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}