{"ver":"0.1","info":{"id":"lfKXR1","date":"1714833168","viewed":27,"name":"shapes experiments","username":"frusanov","description":"shapes (wip)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rectangle","shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 rect(\n    in vec2 uv,\n    in vec2 position,\n    in vec2 size\n)\n{   \n    vec2 bl = step(vec2(position.x, 1.0 - position.y - size.y), uv);\n    vec2 tr = step(vec2(1.0 - position.x - size.x, position.y), 1.0 - uv);\n    \n    vec3 color = vec3(0.0);\n    \n    color = vec3(bl.x * bl.y * tr.x * tr.y);\n    \n    return vec4(color, (color.x + color.y + color.z) / 3.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    //vec2 uv = fragCoord / iResolution.y;\n    \n    float t = iTime;\n    float x = uv.x;\n    float y = uv.y;\n    float d = length(uv);\n    \n    // d = d * 10.0 * sin(t / 10.0);\n    float sinT = sin(iTime);\n    float cosT = cos(iTime);\n    \n    // Output to screen\n    fragColor = rect(uv, vec2(1.0 * cosT, 1.0 - 0.5 * sinT), vec2(0.4 * d));\n}\n","name":"Image","description":"","type":"image"}]}