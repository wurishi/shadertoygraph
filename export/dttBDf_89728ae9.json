{"ver":"0.1","info":{"id":"dttBDf","date":"1701696507","viewed":60,"name":"expanding spirograph","username":"tekano","description":"expanding between min and max settings  some settings for time and increments, there is lots of variaty and different looks available, played with this quite a bit!  hard to decide where to leave the settings and publish.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["spirograph"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//chatGPT 4 assisted code to make an evolving expanding spirograph pattern\n// v01 testing new code added from elenzil for AA and smoothstep\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.0*uv - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Linearly increasing value with wrap-around for continuous cycle\n    float cycle = mod(iTime * 0.025, 15.0); // Adjust for speed\n\n    // Slower drawing speed\n    float t = iTime * 1.2;\n\n    // Varying radius over time with continuous cycle\n    float R = mix(0.2, 0.1, cycle);\n    float r = mix(0.25, 0.3, cycle);\n    float rho = mix(0.03, 0.3, cycle);\n\n    // Varying circle outline radius over time with continuous cycle\n    float minCircleRadius = 0.05;\n    float maxCircleRadius = 0.326;\n    float circleRadius = mix(minCircleRadius, maxCircleRadius, cycle);\n\n    // Initialize color\n    vec3 color = vec3(0.0);\n\n    // Drawing loop for the spirograph\n    for(float i = 0.0; i < t; i += 0.2)\n    {\n        float phase = mod(i * 0.6, 6.28);\n        vec3 fadeColor = vec3(sin(phase) * 0.5 + 0.5, sin(phase + 2.0944) * 0.5 + 0.5, sin(phase + 4.18879) * 0.5 + 0.5);\n\n        float x_c = (R - r) * cos(i);\n        float y_c = (R - r) * sin(i);\n        float t_prime = -(R - r) / r * i;\n        float x_prime = rho * cos(t_prime + i);\n        float y_prime = rho * sin(t_prime + i);\n        vec2 spiroPos = vec2(x_c + x_prime, y_c + y_prime);\n        \n    // aa and smootstep contribution by elenzil, much better line quality now thanks\n        float outlineWidth = 1.0 / iResolution.y;\n        float AAWidth      = 4.0 / iResolution.y;\n        float dist = length(spiroPos - uv);\n        // Apply color gradient to each trail individually\n        float mask = smoothstep(AAWidth, 0.0, abs(circleRadius - dist) - outlineWidth);\n        color = max(color, fadeColor * mask);\n    }\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}