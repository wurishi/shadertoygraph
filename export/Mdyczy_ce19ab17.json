{"ver":"0.1","info":{"id":"Mdyczy","date":"1522438580","viewed":160,"name":"scrollarrows-scale","username":"johh","description":"procedural downwards arrows","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["arrows"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define NUM_STRIPES 32.0\n#define STRIPE_WIDTH .9\n#define ANGLE_STRIPES PI * .25\n#define CLAMP_TOP .315\n#define CLAMP_BOTTOM .155\n#define SMOOTH_WIDTH .04\n\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat easeInExpo(float t) {\n\treturn t == 0.0 ? t : pow(2.0, 10.0 * (t - 1.0));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 vUv = fragCoord/iResolution.xy;\n    vec2 rotatedUv = vUv;\n  \t\n    // rotate context\n    rotatedUv -= vec2(0.5);\n    rotatedUv *= rotate2d( ANGLE_STRIPES * -sign(rotatedUv.x) );\n    rotatedUv += vec2(0.5);\n    \n    vec2 stripeUv = rotatedUv;\n    float gradient = 1.0 - fract( floor( ( rotatedUv.y ) * NUM_STRIPES ) / NUM_STRIPES + iTime );\n\n    \n    if ( stripeUv.y < CLAMP_BOTTOM || stripeUv.y > 1.0 - CLAMP_TOP ) discard;\n    stripeUv.y = 1.0 - fract( stripeUv.y * NUM_STRIPES );\n    // vUv.y = fract( vUv.y + iTime );\n\tfloat stripeWidth = STRIPE_WIDTH * gradient;\n    \n    float stripes = smoothstep( ( 1. - stripeWidth ) - SMOOTH_WIDTH, ( 1. - stripeWidth ) + SMOOTH_WIDTH, stripeUv.y);\n    stripes -= 1.0 - smoothstep( 1.0, 1.0 - SMOOTH_WIDTH * 2.0, stripeUv.y);\n    \n    \n    float col = stripes * gradient;\n\n\n    // Output to screen\n    fragColor = vec4( col );\n}","name":"Image","description":"","type":"image"}]}