{"ver":"0.1","info":{"id":"sdfcWj","date":"1642692357","viewed":78,"name":"HS_Adjust","username":"msul","description":"HS_Adjust","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["hsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 RGB_to_HSL( in vec3 RGB )\n{\n    const float Epsilon = 1e-10f;\n\n    vec4 P = ( RGB.g < RGB.b ) ? vec4( RGB.bg, -1.0f, 2.0f / 3.0f ) : vec4( RGB.gb, 0.0f, -1.0f / 3.0f );\n    vec4 Q = ( RGB.r < P.x ) ? vec4( P.xyw, RGB.r ) : vec4( RGB.r, P.yzx );\n    float C = Q.x - min( Q.w, Q.y );\n    float H = abs( ( Q.w - Q.y ) / ( 6.0f * C + Epsilon ) + Q.z );\n    vec3 HCV = vec3( H, C, Q.x );\n    float L = HCV.z - HCV.y * 0.5f;\n    float S = HCV.y / ( 1.0f - abs( L * 2.0f - 1.0f ) + Epsilon );\n    return vec3( HCV.x, S, L );\n}\n\nvec3 HSL_to_RGB( in vec3 HSL )\n{\n    float H = HSL.x;\n    float R = abs( H * 6.0f - 3.0f ) - 1.0f;\n    float G = 2.0f - abs( H * 6.0f - 2.0f );\n    float B = 2.0f - abs( H * 6.0f - 4.0f );\n    vec3 RGB = clamp( vec3( R, G, B ) , vec3(0,0,0) , vec3(1,1,1) );\n    float C = ( 1.0f - abs( 2.0f * HSL.z - 1.0f ) ) * HSL.y;\n    return ( RGB - 0.5f ) * C + HSL.z;\n}\n\nvec3 adjust_HST( vec3 incolor , float H , float S , float T , float TStrength )\n{\n    vec3 HSL = RGB_to_HSL(incolor);\n    HSL.x = mod( HSL.x + H , 1.f );\n    HSL.y = clamp( HSL.y + (HSL.y*S) , 0.f , 1.f );\n\n    // adjust tint\n    HSL.x = (HSL.x + (T - HSL.x) * TStrength);\n    \n    return HSL_to_RGB(HSL);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //float hue = (iMouse.x / iResolution.x) * 2.0 - 1.0; // -1 -> 1\n    //float saturation = (iMouse.y / iResolution.y) * 2.0 - 1.0; // -1 -> 1\n    float hue = 0.f;\n    float saturation = 0.f;\n    float tint = (iMouse.x / iResolution.x); // 0->1\n    float tint_strength = (iMouse.y / iResolution.y); // 0->1\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = adjust_HST( vec3(texture( iChannel0 , uv )) , hue , saturation , tint , tint_strength );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}