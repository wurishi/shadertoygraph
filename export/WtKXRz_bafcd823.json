{"ver":"0.1","info":{"id":"WtKXRz","date":"1582092924","viewed":432,"name":"Shaderplayer default shader","username":"ttg","description":"Default shader of [url=https://shaderplayer.com/]Shaderplayer[/url].  It's also meant as a very basic tutorial.  Is this a good compromise between having a somewhat interesting animation and still being short and understandable?","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["simple","demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragData, in vec2 fragCoord ) {\n\n  // Always initialize all variables\n  fragData = vec4(0.);\n\n  // Start all black\n  vec3 color = vec3(0.);\n\n  // A coordinate system for a 2D drawing, centered in frame, preserving aspect\n  vec2 uv = (2.*fragCoord - iResolution.xy) / iResolution.y;\n\n  // A soft circle\n  color = mix(color, vec3(.2), clamp( 4.-5.*length(uv), 0., 1.));\n\n  // Various sines\n  for (float i=0.; i<8.; i++) {\n    float h = i*.6;\n    float k = exp2(i/8.);\n    vec3 c = pow(.5+.5*cos(h-vec3(0,1,2)*2.094),vec3(2.));\n    color += .2*c*max( 0., 1.-2.*abs( sin(k*uv.x+iTime/k)*k - uv.y )/k );\n  }\n\n  // Convert to Gamma=2.2 and output to screen\n  fragData = vec4(pow(color, vec3(1./2.2)), 1.);\n}\n","name":"Image","description":"","type":"image"}]}