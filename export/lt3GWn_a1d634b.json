{"ver":"0.1","info":{"id":"lt3GWn","date":"1468690805","viewed":411,"name":"Colour Perlin","username":"akohdr","description":"Playing around with colour transforms on Perlin field.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Andrew Wild - akohdr/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define R iResolution\n#define T iTime\n\nvoid mainImage( out vec4 k, vec2 p )\n{\n\t#define rot(p,a) vec2 sc=sin(vec2(a,a+1.6)); p*=mat2(sc.y,-sc.x,sc);\n\n    #define A vec3(0,1,157)\n    #define B {vec2 m=fract(p),l=dot(p-m,A.yz)+A.xz,r=mix(fract(57.*sin(l++)),fract(57.*sin(l)),(m*=m*(3.-m-m)).x);k+=mix(r.x,r.y,m.y)/(s+=s);p*=mat2(1,1,1,-1);}\n\n\tp+= 2e2*sin(5.*(T/9.+vec2(.8,-.8)));\t\t\t\t\t// circular movement\n\tp = 5.*(p+2.*R.xy)/R.y;\t\t\t\t\t\t\t\t\t// scaling\n\trot(p,T/22.);\t\t\t\t\t\t\t\t\t\t\t// slow field rotation\n\n    float s = 1.; k = vec4(0);\t\t\t\t\t\t\t\t// init\n\t// Perlin noise (expansion of iteration #define B for readability)\n    // (based on refactoring of https://www.shadertoy.com/view/MlsXDr)\n\t{ vec2 m = fract(p),\n           l = dot(p-m, A.yz) + A.xz,\n           r = mix(fract(57.*sin(l++)), fract(57.*sin(l)), (m*= m*(3.-m-m)).x);\n           k+= mix(r.x, r.y, m.y) / (s+=s);\n           p*= mat2(1,1,1,-1); }\n\n    B B B // remaining unrolled loop iterations\n\n// cycles through plain noise then couple temporal colour transforms\nif(mod(T,12.)>8.)\n\tk = sin(2.*sin(k*22.+T*4.)+p.yxyy-p.yyxy*.5);\t\t\t// colour transform\nelse if(mod(T,12.)>4.)\n\tk = sin(length(p)/2.*sin(k*22.+T*4.)+p.yxyy-p.yyxy*.5);\t// colour rings on noise\n\n// options for recombining rgb\n//\tk = vec4(vec3(dot(k.rgb,vec3(1))),1);\t\t\t\t\t// B/W\n//\tk = vec4(dot(k,k/.9)/4.);\t\t\t\t\t\t\t\t// gray\n}\n","name":"Image","description":"","type":"image"}]}