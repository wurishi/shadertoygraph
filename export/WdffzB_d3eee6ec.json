{"ver":"0.1","info":{"id":"WdffzB","date":"1588465236","viewed":174,"name":"Archlinux","username":"Pac85","description":"Brw I use arch","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["linux"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool circle(vec2 o, float r, vec2 uv)\n{\n    return (uv.x-o.x)*(uv.x-o.x)+(uv.y-o.y)*(uv.y-o.y)< r*r;\n}\n\nvec2 scale_uv(vec2 uv, vec2 scale)\n{\n    return ((uv-vec2(0.5))*scale)+vec2(0.5);\n}\n\nbool cut(vec2 uv)\n{\n    return (circle(vec2(0.44, 0.08), 0.38, uv) ^^ circle(vec2(0.5, 0.05), 0.38, uv))&& uv.x>0.64;\n}\n\nbool arch(vec2 uv)\n{\n    return (1.05-uv.x)+0.3*uv.y<0.8 && (0.05+uv.x)+0.3*uv.y<0.8\n        \t&& !(circle(vec2(0.5, 0.2), 0.2, uv))\n        \t&& uv.y > 0.2\n        \t&& !(circle(vec2(0.5, 0.44), 0.1, scale_uv(uv, vec2(2.9, 1.0))))\n        \t&& !cut(uv+vec2(0.08, -0.05))\n            && !cut(vec2(1.0)-uv+vec2(0.14, 0.05));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = arch(uv)?vec3(0.4, 0.5, 0.8):vec3(1.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}