{"ver":"0.1","info":{"id":"ddlSRl","date":"1669406820","viewed":158,"name":"Video Pixel Sorting 2","username":"MysteryPancake","description":"Improved video sorting using my faster sorting algorithm (shadertoy.com/view/DslSRs)","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["fast","pixel","sort","sorting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(texture(iChannel0, fragCoord / iResolution.xy).rgb, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    if (iFrame < 1) {\n        // Initialize color to blue\n        fragColor = vec4(0.1, 0.1, 0.2, 0.0);\n    } else {\n        // Use video color when above color key threshold\n        vec4 vid = texture(iChannel1, fragCoord / iResolution.xy);\n        ivec2 pos = ivec2(fragCoord);\n        if (distance(vid.rgb, vec3(0.0, 1.0, 0.0)) > 0.8) {\n            fragColor = vid;\n        } else {\n            fragColor = texelFetch(iChannel0, pos, 0);\n        }\n        \n        // Compare pixels in pairs, sliding window along 1 pixel per frame\n        bool sampleTop = pos.y % 2 == iFrame % 2;\n        \n        // Faster sorting, see shadertoy.com/view/DslSRs\n        int jump = max(0, 16 + 2 * int(sin(iTime * 8.0) * 8.0)) + 1;\n        ivec2 offset = pos + ivec2(0, sampleTop ? jump : -jump);\n        \n        // Don't read out of bounds pixels\n        ivec2 dims = textureSize(iChannel0, 0);\n        if (offset.x < 0 || offset.x >= dims.x || offset.y < 0 || offset.y >= dims.y) {\n            return;\n        }\n        \n        // Compare red channel and alpha to know whether we need to swap\n        vec4 neighbour = texelFetch(iChannel0, offset, 0);\n        if (fragColor.a <= 0.0 || length(fragColor.rgb) > length(neighbour.rgb) == sampleTop) {\n            fragColor = neighbour;\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}