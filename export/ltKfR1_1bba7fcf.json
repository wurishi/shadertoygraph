{"ver":"0.1","info":{"id":"ltKfR1","date":"1541872618","viewed":3657,"name":"Fluid Warp","username":"wyatt","description":"Voronoi particle system advected through my trusty fluid algorithm :)\n\n(each pixel knows about the closest particle and asks its neighbors about new closest particles)\n\npretty fun with webcam","likes":28,"published":3,"flags":34,"usePreview":0,"tags":["fluid","physics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec4 P ( vec2 U ) {return texture(iChannel2,U/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    R = iResolution.xy;\n    C = P(U);\n    C = C*(0.5+0.5*cos(C.w*vec4(1,2,3,4)));\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nfloat X (vec2 U, vec2 u, inout vec4 Q, in vec2 r) {\n    vec2 v = T(U+r).xy;\n    float P = T (U+r-v).z;\n    Q.xy -= 0.25*r*(P-Q.z);\n    return (0.5*(length(r-v+u)-length(r+v-u))+P);\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 u = T(U).xy, e = vec2(1,0);\n \tfloat P = 0.; Q = T(U-u);\n \tQ.z = 0.25*(\n       X (U,u,Q, e)+\n \t   X (U,u,Q,-e)+\n \t   X (U,u,Q, e.yx)+\n \t   X (U,u,Q,-e.yx));\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy *= 0.;\n \tif ( iFrame%1000<50 && length(U-vec2(0.5,0.1)*R) < 0.04*R.y) {Q.xy= Q.xy*.99+.01*vec2(0,0.1*R.y);; Q.w = 1.;}\n \tif ( (iFrame+500)%1000<50 && length(U-vec2(0.5,0.9)*R) < 0.04*R.y) {Q.xy= Q.xy*.99+.01*vec2(0,-0.001*R.y);; Q.w = 1.;}\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nfloat X (vec2 U, vec2 u, inout vec4 Q, in vec2 r) {\n    vec2 v = T(U+r).xy;\n    float P = T (U+r-v).z;\n    Q.xy -= 0.25*r*(P-Q.z);\n    return (0.5*(length(r-v+u)-length(r+v-u))+P);\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 u = T(U).xy, e = vec2(1,0);\n \tfloat P = 0.; Q = T(U-u);\n \tQ.z = 0.25*(\n       X (U,u,Q, e)+\n \t   X (U,u,Q,-e)+\n \t   X (U,u,Q, e.yx)+\n \t   X (U,u,Q,-e.yx));\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy *= 0.;\n \tif ( iFrame%1000<50 && length(U-vec2(0.5,0.1)*R) < 0.04*R.y) {Q.xy= Q.xy*.99+.01*vec2(0,0.1*R.y);; Q.w = 1.;}\n \tif ( (iFrame+500)%1000<50 && length(U-vec2(0.5,0.9)*R) < 0.04*R.y) {Q.xy= Q.xy*.99+.01*vec2(0,-0.001*R.y);; Q.w = 1.;}\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// Voronoi based particle tracking\n// Change iChannel1 texture filtering to nearest to see\n//   the tracked particles\n//   With linear filtering, the particles can actually multiply\n//   this way the space is always filled\n\nvec2 R;float N;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec4 P ( vec2 U ) {return texture(iChannel1,U/R);}\nvoid swap (vec2 U, inout vec4 Q, vec2 u) {\n    vec4 p = P(U+u);\n    if (length(U-Q.xy) > length(U-p.xy)) Q = p;\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tU -= T(U).xy;\n \tU -= T(U).xy;\n \t\n \tQ = P(U);\n \tswap(U,Q,vec2(1,0));\n \tswap(U,Q,vec2(0,1));\n \tswap(U,Q,vec2(0,-1));\n \tswap(U,Q,vec2(-1,0));\n \n \tQ.xy = fract((Q.xy + T(Q.xy).xy)/R)*R;\n \tQ.xy = fract((Q.xy + T(Q.xy).xy)/R)*R;\n \tif (iFrame < 1) {\n        vec2 u = U;\n \t\tQ = vec4(u,u);\n \t}\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"//Render particles\nvec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec4 P ( vec2 U ) {return texture(iChannel1,U/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{\tR = iResolution.xy;\n    C = P(U);\n\tvec2 \n        n = P(U+vec2(0,1)).zw,\n        e = P(U+vec2(1,0)).zw,\n        s = P(U-vec2(0,1)).zw,\n        w = P(U-vec2(1,0)).zw;\n \t \n \tC = vec4(T(U).xyz*0.1+0.9*texture(iChannel2,C.zw/R).xyz*smoothstep(2.,1.,length(C.xy-U)),\n       (length(n-C.zw)-1.+\n        length(e-C.zw)-1.+\n        length(s-C.zw)-1.+\n        length(w-C.zw)-1.)/R.y*20. \n            );\n \tif(iFrame < 1) C = vec4(0);\n}\n","name":"Buffer D","description":"","type":"buffer"}]}