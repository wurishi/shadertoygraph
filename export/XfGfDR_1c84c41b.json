{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Simply display Buffer A\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"float hash12(vec2 p) {\n    const float HASHSCALE1 = 443.8975;\n    return fract(sin(dot(p, vec2(12.9898, 78.233))) * HASHSCALE1);\n}\nfloat rand(inout vec2 seed) {\n    float r = hash12(seed);\n    // Shift seed for next usage\n    seed += vec2(1.2345, 2.6789);\n    return r;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize pixel coordinates\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Get the previous frame from Buffer A\n    vec4 previousFrame = texture(iChannel0, uv);\n    // Get non-distorted coordinates\n    vec2 uv2=(fragCoord-vec2(0.5*(iResolution.x-iResolution.y),0))/iResolution.y;\n \n    float t=float(iTime);\n    // Ramdoms\n    vec2 seed=vec2(0.5*t,t);\n    vec2 seed2=vec2(0.7*t,0.1*t);\n    vec2 seed3=vec2(0.3*t,2.0*t);\n    vec2 center = vec2(0.5+0.1*rand(seed),0.5-0.1*rand(seed));\n    float radius = 0.35;  // radius of the circle path\n    float angle = iTime * 2.0;  // speed of rotation\n    \n    // Calculate dot position\n    vec2 dotPos = center + radius * vec2(cos(angle), sin(angle));\n    vec3 color=vec3(rand(seed),rand(seed2),rand(seed3));\n    // Draw the dot\n    float r=0.04;// radius of the dots\n    float dot = smoothstep(0.02+r, r, length(uv2 - dotPos));\n    vec4 currentFrame = vec4(vec3(dot)*color, 1.0);\n    \n    // Blend between previous and current frame\n    float blendFactor = 0.95; // Adjust this to control trail length\n    \n    fragColor = max( mix(currentFrame, previousFrame, blendFactor),currentFrame);\n    \n}","name":"Buffer A","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"XfGfDR","date":"1735199012","viewed":42,"name":"FrameBlendingTest","username":"BookSun","description":"learn frame blending","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["frameblending"],"hasliked":0,"parentid":"","parentname":""}}