{"ver":"0.1","info":{"id":"MflcWM","date":"1724755914","viewed":11,"name":"Highlights Adjustments","username":"mantoljak","description":"highlights","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["highlights"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Marko Antoljak\n// Highlight Adjustment Shader\n\nconst float HIGHLIGHTS = 0.0; \nconst vec3 HIGHLIGHTS_RGB = vec3(1.0, 1.0, 1.0);\n\nvec3 adjustHighlights(vec3 color, float highlightAdjust, vec3 highlightAdjustRGB) {\n    float luminance = dot(color, vec3(0.299, 0.587, 0.114));\n    float highlightFactor = smoothstep(0.5, 1.0, luminance);\n    vec3 adjustedColor = color * (1.0 + highlightAdjust);\n    adjustedColor *= highlightAdjustRGB;\n    return mix(color, adjustedColor, highlightFactor);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 color = texture(iChannel0, uv).rgb;\n    \n    color = adjustHighlights(color, HIGHLIGHTS, HIGHLIGHTS_RGB);\n    \n    color = clamp(color, 0.0, 1.0);\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}