{"ver":"0.1","info":{"id":"msy3W3","date":"1679096763","viewed":163,"name":"Voronoi blob creatures","username":"ianertson","description":"Use the mouse to look around :)","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R (iResolution.xy)\n#define T (iTime)\n#define M_PI (3.14159265359)\n#define TAU (M_PI * 2.0)\n#define AC(x) (x*(2.51*x + .03) / (x*(2.43*x + .59) + .14))\n\nfloat luma(vec3 color) { return dot(color, vec3(0.299, 0.587, 0.114)); }\n\nvec3 nn(in vec3 wn, in float z, in float mx, in float s) {\n    if (abs(z) <= 0.0000001) return wn;\n    vec2 dx = vec2(dFdx(z), 0.0);\n    vec2 dy = vec2(0.0, dFdy(z));\n    vec3 cp = cross(vec3(dx, s), vec3(dy, s));\n    if (length(cp) <= 0.0001) return wn;\n    cp = normalize(cp);   \n    return normalize(mix(wn, normalize(wn+cp), mx));\n}\n\nuint hash21u(in vec2 ip, in float seed) {\n    uvec2 p = uvec2(floatBitsToUint(ip.x), floatBitsToUint(ip.y)); uint s = floatBitsToUint(seed);\n    s ^= ~s >> 3U; p ^= (p << 17U); s ^= (~p.x); s ^= (~p.y);\n    p ^= (p >> 11U); p ^= (p << 5U); p ^= (s << 3U);\n    return ((p.x + p.y) ^ (p.x * s + p.y))*293U;\n}\n\nfloat hash21(in vec2 ip, in float seed) {return float(hash21u(ip, seed))/float(0xFFFFFFFFU);}\nvec3 hash23(in vec2 ip, in float seed) {\n    uint n = hash21u(ip, seed); n ^= (n >> 13U);\n    return vec3(float((n >> 16U) & 0xFFU), float((n >> 8U) & 0xFFU), float(n & 0xFFU)) / float(0xFFU);\n}\n\nvec3 blobs(in vec4 m, in vec2 uv) {\n    const float tile = 8.;\n    vec2 id = floor(uv*tile);\n    vec2 lv = fract(uv*tile);\n    float dmin = 1e20;\n    float r = dmin;\n    vec2 id2 = vec2(0.0);\n    vec2 p = vec2(0.0);\n    for(float j=-1.; j<=1.; j++){\n        for(float i=-1.; i<=1.; i++){\n            vec2 la = vec2(i, j);\n            vec2 offset = vec2(hash21(id+la, 0.9231234), hash21(id+la, 78.38381))*0.5;\n            vec2 diff = la + offset - lv;\n            float ang = hash21(offset, 4.445988);\n            diff *= mix(1.0, 3.2, fract(ang*10.8378185));\n            ang = radians(mix(0.0, 360.0,\n                ang*(0.5+sin((T*(ang*2.0-1.0))+ang+(offset.x-offset.y))*0.5)));\n            diff += vec2(cos(ang), sin(ang))*0.5;\n            r = min(r, dot(diff,diff)/0.57);\n            if(r < dmin){ p = la + offset; id2 = offset; dmin = r; }\n        }\n    }\n    float d = sqrt(dmin);\n    return (clamp((d  * (1.0-dmin / max(0.5, 1.0 + 1.0-dmin)))*2.2, 0.0, 1.0) * \n        hash23(id2,93.29124123)/M_PI)*mix(vec3(0.97,0.81,0.77),vec3(0.97,0.33,0.22),0.5+(sin(T*4.)*0.5)) *\n        max(0.0, dot(nn(vec3(0, 0, -1.), d, 1.0, 0.5), normalize(vec3(-1., -2., -3)))) * \n        (mix(4.0,10.0, 0.5+cos(T*2.)*0.5) / max(0.0001, pow(distance(vec3(uv, 0.),\n        m.z > 0.001 && iFrame > 1 ? (vec3(m.x, m.y, 0)*2.) : vec3(0.0)), 2.0)));\n}\n\nvoid mainImage( out vec4 O, in vec2 fc )\n{\n    vec2 uv = (fc-0.5*R.xy)/R.y;\n    vec2 m = ((iMouse.xy-0.5*R.xy)/R.y)*6.;\n    vec3 col = blobs(vec4(m.xy, iMouse.zw), uv * mix(0.7, 6., 0.5+0.5*sin(T*0.5)) + (iMouse.z > 0.001 ? m : vec2(cos(T*0.2), sin(T*0.2))));\n    col += col*luma(col);\n    col /= 1.0 + col;\n    col = pow(AC(col), vec3(1.0 / 2.2));\n    O = vec4(col, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}