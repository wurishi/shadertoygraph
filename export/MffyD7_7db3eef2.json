{"ver":"0.1","info":{"id":"MffyD7","date":"1722425913","viewed":18,"name":"IFS_Tree_","username":"Huihui_","description":"IFS\nHow to improve the performance, without recursion?","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["ifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DEPTH 9\n#define COMB (int(pow(2.,float(DEPTH))))\n#define PI 3.1416\n\nbool beInTree = false;\n\nfloat band(float value, float min, float max) {\n    return step(min,value) - step(max, value);\n}\n\nvec2 rot(vec2 uv, float deg) {\n    return uv * mat2(cos(deg),-sin(deg),sin(deg),cos(deg));\n}\n\nbool inTree(vec2 st, float width) {\n    if( band(st.x, -width/2., width/2.) > 0. \n     && band(st.y, 0., .2) > 0. ) {\n        return true;\n    }\n    return false;\n}\n\n/*\nvoid recursInTree(vec2 st, int dep) {\n    if(inTree(st)) beInTree = true;\n    if(beInTree || dep == DEPTH) return;\n    dep += 1;\n    // 左操作\n    vec2 Lst = rot(st, PI/4.);\n    recursInTree(Lst, dep);\n    // 右操作\n    recursInTree(st, dep);\n    return;\n\n}\n*/\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv.y += 0.6;\n    beInTree = false;\n    vec3 col = vec3(0.);\n    \n    for(int i = 0; i < COMB; i++) {\n        vec2 st = uv;\n        float width = 0.03;\n        for(int j = 0; j < DEPTH; j++) {\n            if(inTree(st, width / pow(1.2,float(j)))) {\n                beInTree = true;\n                break;\n            };\n\n            int operator = i & (1 << j);\n            \n            if (operator == 0) {\n                // 左操作\n                st = rot(st, -PI/6.);\n                st.x -= 0.1;\n                st.y -= 0.17;\n                //st.y -= 0.5;\n            } else {\n\n                st = rot(st, PI/6.);\n                st.x += 0.1;\n                st.y -= 0.17;            \n            }\n        \n        }\n        if(beInTree) break;\n    }\n    \n    \n    if(beInTree) col = vec3(1.);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}