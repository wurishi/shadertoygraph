{"ver":"0.1","info":{"id":"flV3WK","date":"1638353446","viewed":122,"name":"seaside smartphone","username":"snflwrfld","description":"just wanted to make a simple animation to try some scene building, looks cute imo :)","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["cute","flat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nfloat norm(vec2 st,float e){\n    return pow(pow(abs(st.x),e)+pow(abs(st.y),e),1./e);\n}\nmat2 rot(float a){\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\nfloat circle(vec2 st,vec2 center,float r){\n    return length(st-center)-r;\n}\nfloat square(vec2 st,vec2 center,float r){\n    st=st-center;\n    return max(abs(st.x),abs(st.y))-r;\n}\nfloat h11(float t){\n    return fract(sin(52.3654*t+23.58)*3522.58);\n}\nfloat noise(float t){\n    float i=floor(t),f=fract(t);\n    return mix(h11(i),h11(i+1.),smoothstep(.1,.9,f));\n}\n\nfloat wave(vec2 st,float t,float h,float w,float c){\n    float y=st.y+h*sin((st.x-c*t)/w);\n    return y;\n}\nfloat stick(vec2 st,vec2 p1,vec2 p2,float r){\n    vec2 dir=normalize(p2-p1);\n    vec2 proj=dir*dot(st,dir);\n    float dbaton=mix(1000.,length(st-dot(st,dir)*dir)-r,step(0.,dot(proj,dir))*step(dot(proj,dir),length(p1-p2)));\n    float dsph1=circle(st,p1,r);\n    float dsph2=circle(st,p2,r);\n    return min(dbaton,min(dsph1,dsph2));\n}\nfloat sun(vec2 st,vec2 center,float a,float n){\n    float d=circle(st,center,.3);\n    for(int i=0;i<int(n);i++){\n        vec2 p1=center+.285*rot(a+2.*PI*float(i)/n)*vec2(1.);\n        vec2 p2=.048*rot(a+2.*PI*float(i)/n)*vec2(1.);\n        d=min(d,stick(st-p1,vec2(0.),p2,.037));\n    }\n    return d;\n}\nfloat crescent(vec2 st,vec2 center,vec2 defo,float r1,float r2){\n    float d1=length(st-center)-r1,d2=length(st-center-defo)-r2;\n    return max(d1,-d2);\n}\nfloat rebound(float t,float eps){\n    return(1.-cos(PI*(t*(1.+2.*eps)-eps))/cos(PI*eps))/2.;\n}\n\nfloat z(vec2 st){\n    float d=1000.;\n    for(int i=-1;i<2;i++){\n        for(int j=-2;j<3;j++){\n            if(j==-2 ||j==2||(j==i)){\n                d=min(d,square(st,vec2(float(i),float(j)),.38));\n            }\n        }\n    }\n    return d;\n}\nfloat dots(vec2 st){\n    return square(st,vec2(0.,-2.),.38);\n}\nfloat sqwv(float t,float f){\n    t=fract(f*t);return step(.5,t);\n}\nfloat timingz(float t,float start,float fl){\n    t-=.9;\n    return t<start?0.:\n    t<start+fl?sqwv(t,100.):\n    t<.87-fl?1.:\n    t<.87?sqwv(t,150.):\n    0.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st=gl_FragCoord.xy/iResolution.xy;\n    st=(st*2.-1.)*1.8-vec2(0.,-.35);\n    st.x*=iResolution.x/iResolution.y;\n    float t=iTime;\n    \n    vec3 color;\n    \n    // Timing\n    float tt=mod(t*.07,2.);float trans=.3;\n    \n    float tcolor=tt<1.-trans?0.:\n    tt<1.?smoothstep(.2,.8,(tt-1.+trans)/trans):\n    tt<2.-trans?1.:\n    1.-smoothstep(.2,.8,(tt-2.+trans)/trans);//color change timing\n    \n    float tsm=tt<1.-trans?0.:\n    tt<1.?rebound((tt-1.+trans)/trans,.04):\n    tt<2.-trans?1.:\n    1.+rebound((tt-2.+trans)/trans,.04);// day-night cycle\n    \n    float fl=.02;\n    float tz1=timingz(tt,0.,fl);\n    float tz2=timingz(tt,.05,fl);\n    float tz3=timingz(tt,.1,fl);\n    float td1=timingz(tt,.25,fl);\n    float td2=timingz(tt,.35,fl);\n    float td3=timingz(tt,.45,fl);// zzz digital display\n    \n    // Frame\n    vec3 cframe=mix(vec3(.9804,.9373,.9098),vec3(.1529,.1412,.1255),tcolor);\n    float fframe=smoothstep(.995,1.,norm(st,4.5));\n    color+=cframe*fframe;\n    \n    // Waves\n    vec3 cwave=mix(vec3(.3255,.698,1.),vec3(.1608,.3412,.4941),tcolor);\n    float fwave=smoothstep(.01,0.,wave(st-vec2(0.,-.37),t,.17,.38,.38));\n    color+=cwave*fwave*(1.-fframe);\n    \n    // Sun\n    vec3 csun=vec3(1.,.9451,.1804);\n    vec2 centersun=vec2(1.4)-rot(PI*tsm)*vec2(1.);\n    float fsun=smoothstep(.01,0.,sun(st,centersun,t*.4,9.));\n    color+=csun*fsun*(1.-fwave)*(1.-fframe);\n    \n    // Moon\n    vec3 cmoon=vec3(.8392,.8392,.8392);\n    vec2 centermoon=vec2(1.4)+rot(PI*tsm)*vec2(1.);\n    float fmoon=smoothstep(.01,0.,crescent(st,centermoon,rot(-.2+.2*sin(1.3*t))*vec2(.145),.35,.25));\n    color+=cmoon*fmoon*(1.-fwave)*(1.-fframe);\n    \n    //Sky\n    vec3 csky=mix(vec3(.6235,.9137,1.),vec3(.2,.2196,.2392),tcolor);\n    color+=csky*(1.-fwave)*(1.-fframe)*(1.-fsun)*(1.-fmoon);\n    \n    // ZZZ\n    color+=(1.-step(0.,z(st*6.-vec2(-6.,9.5))))*tz1;\n    color+=(1.-step(0.,z(st*6.-vec2(-2.,9.5))))*tz2;\n    color+=(1.-step(0.,z(st*6.-vec2(2.,9.5))))*tz3;\n    color+=(step(dots(st*6.-vec2(5.,9.5)),0.))*td1;\n    color+=(step(dots(st*6.-vec2(6.,9.5)),0.))*td2;\n    color+=(step(dots(st*6.-vec2(7.,9.5)),0.))*td3;\n    \n    //Shades\n    float fshade=max(1.-norm(st,4.5),norm(st+vec2(.07+.015*noise(t),.045+.01*noise(-t)),4.5)-1.);\n    color*=clamp(0.,1.,smoothstep(0.,.008,fshade)+.3);\n    \n    //color = vec3(step(0.,fshade));\n    \n    fragColor=vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}