{"ver":"0.1","info":{"id":"sdfGz4","date":"1654357917","viewed":539,"name":"Audio Bars?","username":"mvinaround","description":"Forked from P_Malin. Adjusted to accept audio in (from mic or other resource)","likes":3,"published":1,"flags":37,"usePreview":0,"tags":["audio"],"hasliked":0,"parentid":"3tKyWd","parentname":"Audio Reactive Phoenix"},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Phoenix\" by P_Malin. https://shadertoy.com/view/4tKBRm\n// 2021-01-30 06:05:10\n\n// Phoenix - @P_Malin\n// https://www.shadertoy.com/view/4tKBRm\n// An audio channel thing\n// Just random messing with feedback. Warning, this might make you fall over.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 vUV = fragCoord / iResolution.xy;\n    \n    fragColor = vec4(0.0);\n\n    fragColor += textureLod( iChannel0, vUV, 0.0 ) * 1.0;    \n    fragColor += textureLod( iChannel0, vUV, 2.0 ) * 0.5;    \n    fragColor += textureLod( iChannel0, vUV, 4.0 ) * 0.25;    \n    fragColor += textureLod( iChannel0, vUV, 5.0 ) * 0.125;    \n    \n    fragColor.rgb = ( 1.0 - exp2( fragColor.rgb * -1000.0) );    \n}\n\n\nfloat SphereIntersect( vec3 vSphereOrigin, float fSphereRadius, vec3 vRayOrigin, vec3 vRayDir )\n{\n\tvec3 vToOrigin = vSphereOrigin - vRayOrigin;\n\tfloat fProjection = dot(vToOrigin, vRayDir);\n\tvec3 vClosest = vRayOrigin + vRayDir * fProjection;\n\t\n\tvec3 vClosestToOrigin = vClosest - vSphereOrigin;\n\tfloat fClosestDist2 = dot(vClosestToOrigin, vClosestToOrigin);\n\n\tfloat fSphereRadius2 = fSphereRadius * fSphereRadius;\n\t\n\tif(fClosestDist2 < fSphereRadius2)\n\t{\n\t\tfloat fHCL = sqrt(fSphereRadius2 - fClosestDist2);\n\t\n\t\tfloat t = fProjection + fHCL;\n\t\t\n        return t;\n\t}\n    \n    return -1.0;\n}\n\n\nvoid mainVR( out vec4 vFragColor, in vec2 vFragCoord, in vec3 fragRayOri, in vec3 fragRayDir )\n{\n\tfloat fSphereT = SphereIntersect( vec3(0,0,0.0), 4.0, fragRayOri, fragRayDir );\n\tvec3 vHit = fragRayOri + fragRayDir * fSphereT;  \n    \n    vHit *= 0.5;\n    \n    vec2 vUV = vHit.xy * 0.5 + 0.5;\n        \n    //vUV = clamp( vUV, vec2(0), vec2(1));\n    \n    mainImage( vFragColor, vUV * iResolution.xy );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Audio History Buffer\n\n#define iChannelAudio iChannel1\n#define iChannelAudioHistory iChannel0  \n    \nvec4 SampleAudioRaw( float f, float t )\n{   \n    vec4 r = vec4( 0.0 );\n    if ( t <= 0.0 )\n    {\n        //f = f * f;\n        /*\n        if ( f > 0.0 )\n        {\n\t\t\tf = sqrt( f );\n        }*/\n        \n        r = textureLod( iChannelAudio, vec2(f, 0.0), 0.0);\n        \n        \n        float a = r.r;\n        \n        float shade = a * (0.75 + f * 0.25);\n\n        shade = pow( shade, 12.0 ) * 22.0;\n\n        r.r = (shade * 3.0);        \n        r.g = f * 10.0 + iTime * 5.0;\n        r.a = a * a;               \n    }\n    else\n    {\n    \tr = textureLod( iChannelAudioHistory, vec2(f, t), 0.0);\n    }\n    \n    return r;\n}\n\nvec4 SampleAudio( float f, float t, float dt )\n{\n    vec4 sp = SampleAudioRaw( f, t );\n\n    float gradSampleDist = 0.1;\n    \n    float xofs = SampleAudioRaw( f - gradSampleDist, t ).a - SampleAudioRaw( f + gradSampleDist, t ).a;\n    \n    vec2 d = vec2( xofs * 3.0, -1.0 ) * dt;\n    \n    float speed = sp.a * 5.0 * (3.0 * f + 1.4);\n    d = normalize(d) * dt * speed;\n    f += d.x;\n    t += d.y;\n    \n    t -= dt * 7.2;\n    \n    //t += -dt * (0.2 + f * f * f * 2.0);\n    \n    vec4 result = SampleAudioRaw( f, t );\n    \n    \n    float fSpread = 0.1; //* (1.0 - sp.a* sp.a);\n    result *= 0.4;\n    result += SampleAudioRaw( f - fSpread, t ) * 0.2;\n    result += SampleAudioRaw( f + fSpread, t ) * 0.2;\n    \n    return result;\n}\n\nvoid mainImage( out vec4 vFragColor, in vec2 vFragCoord )\n{   \n    ivec2 vTexelCoord = ivec2(vFragCoord);\n    \n    float t = vFragCoord.y / iResolution.y;\n    \n    vFragColor = SampleAudio( vFragCoord.x / iResolution.x, t, iTimeDelta);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Phoenix - @P_Malin\n// https://www.shadertoy.com/view/4tKBRm\n// An audio channel thing\n// Just random messing with feedback. Warning, this might make you fall over.\n\nvec4 SampleCol( vec2 vUV )\n{\n    vec4 vSample = textureLod( iChannel0, vUV, 0.0 );\n    \n    vec3 vCol = normalize( 0.00 + 0.78 * -cos( vec3(0.8, 0.4, 0.2) * vSample.g + iTime * 20.0));\n    \n    float shade = vSample.r;\n    vSample.rgb = vCol * shade;\n    \n    return vSample;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 vUV = fragCoord / iResolution.xy;\n    \n    // comment out to remove symmetry\n    vUV.y = abs( vUV.y * 2.0 - 1.0);    \n    vUV.x = abs( vUV.x * 2.0 - 1.0);\n    \n    vUV.x = pow( vUV.x, 0.7 );\n    //vUV.y = pow( vUV.y, 0.5 );\n    \n     //vUV.xy =  vUV.yx;\n    \n    fragColor = SampleCol( vUV );\n    \n\t//fragColor -= SampleCol( vUV - vec2(0.0, 0.05) ) * 0.5;\n    \n    \n    //fragColor.rgb = pow( fragColor.rgb, vec3(1.0f / 1.8 ) );\n}","name":"Buffer B","description":"","type":"buffer"}]}