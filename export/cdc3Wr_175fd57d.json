{"ver":"0.1","info":{"id":"cdc3Wr","date":"1677167841","viewed":119,"name":"Mildly Interesting Audio Shader","username":"Oman395","description":"Mildly interesting audio shader, based on a wallpaper I really like.\nFor some reason you need to manually set the audio as the first input to Buffer A","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    // Get sample points\n    float samples[SECTION_COUNT];\n    for(int i = 0; i < SECTION_COUNT; i++) {\n        float p = float(i) / float(SECTION_COUNT - 1);\n        samples[i] = texture(iChannel0, vec2(p, 0)).r;\n    }\n    int start = int(floor(uv.x * float(SECTION_COUNT - 2)));\n    float percent = mod(uv.x, 1.0 / float(SECTION_COUNT - 2)) / (1.0 / float(SECTION_COUNT - 2));\n    float h = Hermite(percent, samples[start], samples[start + 1], samples[start + 2], samples[start + 3]);\n    h -= uv.y;\n    float w = length(vec2(dFdx(h), dFdy(h)));\n    float soft = h / w * 0.5;\n    vec4 tex = vec4(soft, soft, soft, h + uv.y);\n    float amnt = tex.r;\n    h = tex.a;\n    h = max(h, 0.00001); // Gets rid of what I assume is a weird division by zero\n    start = int(floor(uv.x * float(GRADIENT.length())));\n    float percentGrad = mod(uv.x * float(GRADIENT.length()), 1.0);\n    percent = 1.0 - (h - uv.y) / GRAD_HEIGHT;\n    if(percent > 1.0) percent = 0.0;\n    if(percent < 0.0) percent = 0.0;\n    vec4 col = lerp(percentGrad, GRADIENT[start], GRADIENT[start + 1]);\n    if(amnt > 1.0) amnt = 1.0;\n    fragColor = col * percent * amnt / 255.0;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const int SECTION_COUNT = 6; // Number of distinct points to use in bezier curves\nconst float SMOOTH_AMNT = 0.9; // 0-1, with 0 being no smoothing and 1 meaning literally no change\nconst float GRAD_HEIGHT = 0.5; // the gradient from height looks better at a fixed height\n\nconst vec4 GRADIENT[] = vec4[](\n    vec4(110,21,47,255),\n    vec4(143,46,94,255),\n    vec4(108,117,168,255),\n    vec4(107,133,187,255),\n    vec4(133, 142, 213, 255),\n    vec4(169,125,222,255)\n);\n\n// https://www.shadertoy.com/view/MsXGDj\n\nfloat Hermite(float x, float a, float b, float c, float d)\n{\n    float e = c-b;\n    float f = a-d;\n    return(b+.5*x*(e+b-a+x*(a-b+e+x*3.*(e*3.+f+x*5./3.*(-e*3.-f+x*.4*(e*3.+f))))));\n}\n\nvec4 lerp(float x, vec4 a, vec4 b) {\n    return (1.0 - x) * a + x * b;\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv) * (1.0 - SMOOTH_AMNT) + texture(iChannel1, uv) * SMOOTH_AMNT;\n}","name":"Buffer A","description":"","type":"buffer"}]}