{"ver":"0.1","info":{"id":"X3BBDt","date":"1730763578","viewed":41,"name":"Eggy Iteration #2","username":"daimaeon","description":"Eggy Animation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["eggy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 getBackgroundColor(vec2 uv) {\n    uv = uv * 0.5 + 0.5; // remap uv from <-0.5,0.5> to <0.25,0.75>\n    vec3 gradientStartColor = vec3(96./255.,68./255.,92./255.);\n    vec3 gradientEndColor = vec3(1., 1., 1.);\n    return mix(gradientStartColor, gradientEndColor, uv.y); // gradient goes from bottom to top\n}\n\nfloat sdEgg(vec2 uv, float size, vec2 offset, float scale) {\n// Credit: https://mathworld.wolfram.com/HeartCurve.html\n    float x = uv.x - offset.x;\n    float y = uv.y - offset.y;\n    x*=5.0;\n    y*=5.0;\n   \n    //\n   \n    //x*=sin(iTime);\n    //y*=sin(iTime)*sin(iTime);\n   \n    //x*=sin(iTime);\n    //y*=cos(iTime);\n   \n    //Time Heartbeat series\n    float pi=3.1415;\n    float s1=0.0200236;\n    float s2=0.0395075;\n    float s3=0.0579312;\n    float s4=0.0748129;\n    float s5=0.0897255;\n    float c1=0.158503;\n    float c2=0.153871;\n    float c3=0.146318;\n    float c4=0.136084;\n    float c5=0.123497;\n    float expression = 0.2;\n    //expression = expression+0.5*s1*sin(pi*iTime/1.0)*sin(pi*iTime/1.0)+0.5*c1*cos(pi*iTime/1.0)*cos(pi*iTime/1.0);\n    //expression +=s2*sin(pi*iTime/2.0)*sin(pi*iTime/2.0)+c2*cos(pi*iTime/2.0)*cos(pi*iTime/2.0);\n    expression*=scale;\n    x*=expression;\n    y*=expression;\n    float xx = x * x;\n    float yy = y * y;\n    float yyy = yy * y;\n    float group = pow(1.4,y)*1.6*x;\n   \n   \n    return yy+group*group+.0;\n}\n\n\n\nvec3 drawScene(vec2 uv) {\n    //vec3 col = getBackgroundColor(uv));\n    //float scale = 1./(sin(iTime)/2.+0.5+0.01);\n    float scale=1.9;\n    float Egg = sdEgg(uv, 1., vec2(0., 0.),scale);\n    float d = Egg;\n    d-=15.0;\n    d=sin(d*1.0-2.*iTime)/(.50+.5*sin(1.*iTime));\n    vec3 col = vec3(246./255., 173./255., 198./255.);\n    \n    col*=abs(d);\n   col = mix( col, vec3(1.0), .4-smoothstep(0.7,0.8,abs(d)) );\n   \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    \n\n    vec3 col = drawScene(uv);\n\n    fragColor = vec4(col,1.0); // Output to screen\n}\n","name":"Image","description":"","type":"image"}]}