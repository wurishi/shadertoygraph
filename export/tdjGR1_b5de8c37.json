{"ver":"0.1","info":{"id":"tdjGR1","date":"1548207113","viewed":291,"name":"Mirror Reflection","username":"valler","description":"mirror reflection","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["reflection","ray","distance","mirror","march"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f (vec3 p)\n{\n    return length(p)-1.;\n}\n\n// https://iquilezles.org/articles/normalsSDF\nvec3 calcNormal( vec3 p, float t )\n{\n    float e = 1.e-3*t;\n    vec2 h = vec2(1.0,-1.0)*0.5773;\n    return normalize( h.xyy*f( p + h.xyy*e ) + \n\t\t\t\t\t  h.yyx*f( p + h.yyx*e ) + \n\t\t\t\t\t  h.yxy*f( p + h.yxy*e ) + \n\t\t\t\t\t  h.xxx*f( p + h.xxx*e ));\n}\n\nvec3 bg (vec2 uv)\n{\n\treturn 10.*vec3(uv,0);\n}\n\nvoid mainImage( out vec4 _, in vec2 a )\n{\n    float ti = .5*iTime;\n    vec2 uv = (a-.5*iResolution.xy)/iResolution.x;\n    vec3 up = vec3(0,1,0);\n    vec3 ro = 3.*vec3(sin(ti),0,cos(ti));\n    vec3 ta = vec3(0);\n    vec3 w = normalize(ta-ro);\n    if (abs(dot(up,w)) > .999) up = up.xxy;\n    vec3 u = normalize(cross(w,up));\n\tvec3 rd = mat3(-u,cross(u,w),w) * normalize(vec3(uv,.5));\n    float t = 0.;\n    float dt = 0.;\n    float tmin = 1.e-4;\n    float tmax = 1.e6;\n    vec3 p = ro;\n    while (t < tmax)\n    {\n        dt = f(p);\n        if (dt < tmin) break;\n        t = min(tmax,t+dt);\n        p = ro+rd*t;\n    }\n    \n    float inv2PI = 0.15915494309189535;\n    vec3 n;\n    vec2 ruv;\n    float fresnel;\n    if (t < tmax)\n    {\n    \tn = calcNormal(p,t);\n        vec3 r = reflect(rd,n);\n        ruv = vec2(atan(r.z,r.x)*inv2PI,r.y*0.5)+0.5;\n        float f = 1.-dot(r,n);\n        fresnel = f*f*f*f*f*.96+.04; \n    }\n    else\n    {\n        n = -rd;\n        ruv = vec2(atan(rd.z,rd.x)*inv2PI,rd.y*0.5)+0.5;\n        fresnel = 1.;\n    }\n    vec3 c = bg(ruv)*fresnel;\n    _ = vec4(sqrt(c),1);\n}","name":"Image","description":"","type":"image"}]}