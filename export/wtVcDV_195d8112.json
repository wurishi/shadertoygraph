{"ver":"0.1","info":{"id":"wtVcDV","date":"1611840018","viewed":218,"name":"lines are too hard","username":"aliser","description":"-","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["whatever"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float calculateSlope(vec2 fromXY, vec2 toXY) {\n    return (toXY.y - fromXY.y) / (toXY.x - fromXY.x);\n}\n\nfloat calculateTheB(vec2 tipPnt, float slope) {\n    return tipPnt.y - slope * tipPnt.x;\n}\n\nfloat calculateYforX(float slope, float x, float b) {\n    return slope * x + b;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 lineSegmentFromXY = vec2(128.0, 256.0);\n    vec2 lineSegmentToXY = iMouse.xy;\n    float tolerance = 5.0;\n    \n    float slope = calculateSlope(lineSegmentFromXY, lineSegmentToXY);\n    float b = calculateTheB(lineSegmentFromXY, slope);\n    float targetY = calculateYforX(slope, fragCoord.x, b);\n    \n    bool withinLine = abs(targetY - fragCoord.y) <= tolerance;\n    bool withinHorizontalBound = fragCoord.x >= min(lineSegmentFromXY.x, lineSegmentToXY.x) && \n                                 fragCoord.x <= max(lineSegmentFromXY.x, lineSegmentToXY.x);\n    bool withinVerticalBound = fragCoord.y >= min(lineSegmentFromXY.y, lineSegmentToXY.y) && \n                               fragCoord.y <= max(lineSegmentFromXY.y, lineSegmentToXY.y);\n    bool shouldDraw = withinLine && withinHorizontalBound && withinVerticalBound;\n    vec3 col = vec3(1., 1., 1.);\n    if(shouldDraw) {\n        // Normalized pixel coordinates (from 0 to 1)\n        vec2 uv = fragCoord/iResolution.xy;\n\n        // Time varying pixel color\n        col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));   \n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}