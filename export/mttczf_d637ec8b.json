{"ver":"0.1","info":{"id":"mttczf","date":"1699519841","viewed":68,"name":"crazy cubes","username":"chenxianming","description":"wrote in 2022","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define I iResolution\n#define S .25\n#define cc 3.\n#define sp .3\n#define T(s) fract(iTime * s) * PI * 4.\n#define T2(s) fract(iTime * s) * 5.\n#define tl( s ) fract( iTime * s )\n#define PI 3.1415926\n#define TAU 6.2831852\n#define rot( r ) mat2(cos(r), sin(r), -sin(r), cos(r) )\n\nfloat rand( in float ri ){\n    return (fract(ri * 569.531 + 0.513 ) - 0.5) + cos( ri );\n}\n\nfloat smin (float a, float b, float r)\n{\n    float h = clamp(.5+.5*(b-a)/r,0.,1.);\n    return mix(b, a, h) - r*h*(1.-h);\n}\n\nfloat smax(float a, float b, float k) {\n    return -smin(-a, -b, k);\n}\n\nvoid updateCR( inout vec3 a, inout vec3 b, inout vec3 c, float i ){\n    a.xy *= rot( T( S ) );\n    a.x += ( sp * 2. ) * i - ( sp * ( cc - 1. ) );\n    b.x += ( sp * 2. ) * i - ( sp * ( cc - 1. ) );\n\n    c.xz *= rot( T( S ) );\n    c.x += ( sp * 2. ) * i - ( sp * ( cc - 1. ) );\n}\n\nvoid updateXY( inout vec3 a, inout vec3 b, float j ){\n    a.xy *= rot( T( S ) );\n    b.y += ( sp * 2. ) * j - ( sp * ( cc - 1. ) );\n    a.y += ( sp * 2. ) * j - ( sp * ( cc - 1. ) );\n}\n\nvoid updateR( inout vec3 a, inout vec3 b, float h ){\n    a.z += ( sp * 2. ) * h - ( sp * ( cc - 1. ) );\n    b.xz *= rot( T( S ) );\n    b.z += ( sp * 2. ) * h - ( sp * ( cc - 1. ) );\n}\n\nfloat df( vec3 p ){\n\n    p.xz *= rot( T( S * .8 ) );\n    p.zy *= rot( T( S * .8 ) );\n\n  \n    float d = .1, i, id, blob;\n        \n    for( ;i < cc; i++ ){\n    \n        vec3 p1 = p,\n             p1a = p,\n             p1b = p;\n        \n        updateCR( p1a, p1, p1b, i );\n    \n        for( float j = 0.;j <cc; j++ ){\n            vec3 p2 = p,\n                 p2a = p;\n            \n            updateXY( p2a, p2, j );\n\n            for( float h = 0.;h < cc; h++ ){\n                id++;\n                vec3 p3 = p,\n                     p3a = p;\n                \n                updateR( p3, p3a, h );\n                \n                \n                vec3 m3 = vec3( p1.x, p2.y, p3.z );\n                \n                if( h == 0. && ( tl( .125 ) < .75 && tl( .125 ) > .5 )  )\n                // if( h == 0. && tl( .5 ) < .5 )\n                    m3.x = p1a.x,\n                    m3.y = p2a.y;\n\n\n                if( j == 1. && ( tl( .125 ) > .75 && tl( .5 ) < 1. ) )\n                // if( j == 1. && tl( .5 ) > .5 )\n                    m3.x = p1b.x,\n                    m3.z = p3a.z;\n\n\n                if( tl(.125) < .375 && tl(.125) > .125 ){\n                  float line = 1. - ( .375 - tl(.125) ) / .25;\n\n                  line = line - .5;\n                  line *= 2.;\n                  line = abs( line );\n                  line -= 1.;\n                  line = abs( line );\n\n                  blob = line * .15;\n\n                  float m = clamp( rand(id * 2.), -.5, .5 );\n                  m3.x += line * m;\n                  m3.zx *= -rot( line * ( PI * 1. ) * m );\n                  m3.y += line * m;\n                  m3.z += line * m;\n                  m3.yz *= rot( line * ( PI * 1. ) * m );\n\n                }\n                \n                if( id != 14. )\n                  d = smin(\n                    d, \n                    smax(\n                        smax( abs( m3.x ) - .3, abs( m3.z ) - .3, .1 ),\n                        abs( m3.y ) - .3,\n                        .14\n                    ),\n                    blob\n                  );\n                    \n                    \n            }\n        }\n    }\n        \n    return d;\n}\n\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 u = ( V * 2. - I.xy ) / I.y;\n    \n    vec3 c = vec3( smoothstep( 0., .9, 1. - length( u * vec2( .5, 1. ) + vec2( 0., .0 ) ) - .01 ) ), p, o = vec3( 0., 0., -2.5 ), r = vec3( u, 1. );\n    float t, d, i, dp, e = sqrt( 1e-4 );\n\n    for( ; i < 40.; i++ )\n        p = o + r * t,\n        d = df( p ),\n        dp = ( 1. - abs( d ) / e ),\n        c -= ( dp > 0. ) ? .1 * ( i / 40. ) * dp / t : 0.,\n        t += max( abs( d ), e );\n        \n\n    i = 0.;\n    \n    for( ; i < 10.; i++ ){\n        p = o + r * t,\n        p = reflect( p, r );\n        p.xy *= 4.;\n        p.xy = mod( p.xy, 2.5 ) - 1.75;\n        d = df( p ),\n        dp = ( 1. - abs( d ) / e );\n        \n        if( dp > 0. ){\n            c = mix(\n                c,\n                vec3( .8 ),\n                sign( c ) * .1\n            );\n        }\n        \n        t += max( abs( d ), e  );\n    }\n\n\n    // Output to screen\n    U = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}