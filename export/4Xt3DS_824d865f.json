{"ver":"0.1","info":{"id":"4Xt3DS","date":"1716957629","viewed":102,"name":"isovalues sunset vibes","username":"spenceryonce","description":"little learning shader forked from the wonderful Fabrice. \n\nAs said in his original,\n\"Best seen in full screen.\"","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["noise","sunset","contour","jelly","short"],"hasliked":0,"parentid":"ldfczS","parentname":"isovalues 3"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O,  vec2 fc )\n{\n\tO = texture( iChannel0, fc / iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// --- noise from procedural pseudo-Perlin\n// ( adapted from IQ )\n#define hash3(p)  fract(sin(1e3*dot(p,vec3(1,57,-13.7)))*4375.5453)    \nfloat noise3( vec3 x ) {\n    vec3 p = floor(x),f = fract(x);\n    f = f*f*(3.-2.*f);\n    return mix( mix(mix( hash3(p+vec3(0,0,0)), hash3(p+vec3(1,0,0)),f.x),       // triilinear interp\n                    mix( hash3(p+vec3(0,1,0)), hash3(p+vec3(1,1,0)),f.x),f.y),\n                mix(mix( hash3(p+vec3(0,0,1)), hash3(p+vec3(1,0,1)),f.x),       \n                    mix( hash3(p+vec3(0,1,1)), hash3(p+vec3(1,1,1)),f.x),f.y), f.z);\n}\n\n#define noise(x) (noise3(x)+noise3(x+11.5)) / 2. // pseudoperlin improvement from foxes idea \n\nvoid mainImage( out vec4 O, vec2 fc )\n{ \n    vec2 R = iResolution.xy;\n    float n = noise(vec3(fc*10.0/R.y, 0.1*iTime));\n    float v = sin(5.88*7.777*n);\n    float t = iTime;\n    \n    v = smoothstep(1.0,0.0, 0.5*(v)/fwidth(v));\n    \n\tO = mix(exp(-50./R.y )*texture(iChannel0,(fc+vec2(-1.*cos(t*0.1),sin(t)))/R), // .97\n             0.5+.5*sin(20.*n+vec4(0.,5.1,-2.1,0.)),\n             v );\n \n}","name":"Buffer A","description":"","type":"buffer"}]}