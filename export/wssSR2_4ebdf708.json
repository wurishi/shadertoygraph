{"ver":"0.1","info":{"id":"wssSR2","date":"1551717339","viewed":61,"name":"Midterms_Co_Design9","username":"johannco98","description":"asd","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["asd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Spikes(float angle, float armSpeed, float armNum, float armWidth, float size)\n{\n    float spikes =  -(abs(cos(angle * 0.5 + (iTime * armSpeed)) \n                        * sin(angle * armNum )))\n        \t\t\t\t\t\t\t\t\t\t\t* armWidth +      size;\n    \n    return spikes;\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Colors in vec3\n    vec3 red = vec3(0.8 ,0.0 ,0.0);\n    vec3 white = vec3(1.0, 1.0, 1.0);\n    vec3 yellow = vec3(0.9, 0.9, 0.3);\n    vec3 blue = vec3(0.0, 0.2, 1.0);\n    vec3 black = vec3(0.0, 0.0, 0.0);\n    vec3 green = vec3(0.0, 1.0, 0.0);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    uv.y *= ratio;\n    uv *= 1.0;\n    uv = fract(sin(uv * 10.));\n    vec2 shapePos = vec2((0.5 * ratio) , 0.5);\n    float dist = distance(shapePos , uv) * 2.50;\n    \n    uv -= shapePos;\n    \n    float angle = atan(uv.y, uv.x);\n    float spikes = Spikes(angle, 1.0, 6.0, 10.0, 0.5 );\n     \n    \n    vec3 test = mix(white, green, spikes);\n    test = mix(test, red, Spikes(angle, 1.0, 6.0, 10.0, 0.5 ));\n    test = mix(red+ yellow, test, Spikes(angle, 2.0, 6.0, 10.0, 0.5 ));\n    test = mix(black, test, Spikes(angle, 3.0, 6.0, 10.0, 1.5 ));\n    \n    // Output to screen\n    fragColor = vec4(test , 1.0);\n}","name":"Image","description":"","type":"image"}]}