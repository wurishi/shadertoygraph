{"ver":"0.1","info":{"id":"dslfDl","date":"1689304132","viewed":66,"name":"GPT-3.5 experiment 0","username":"timeparticle","description":"This is the 1st piece of code generated for me by openai's Chat GPT-3.5\nThe prompt was:  Kindly write a short but interesting shadertoy, that is novel.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["timeparticle","openai","gpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n//\n//  This is the 1st piece of code generated for me by openai's Chat GPT-3.5\n//\n//  The prompt was:\n//\n//     Kindly write a short but interesting shadertoy, that is novel.\n//\n//\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized coordinates\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n    // Angle based on time\n    float angle = iTime;\n    \n    // Distance from center\n    float dist = length(uv);\n    \n    // Adjusted coordinates\n    vec2 coord = vec2(atan(uv.y, uv.x) / (2.0 * 3.14159), dist);\n    \n    // Apply distortion\n    float distortion = 0.2 * sin(10.0 * (coord.y - iTime));\n    coord.x += distortion;\n    \n    // Color based on distance and angle\n    vec3 color = vec3(0.5 + 0.5 * cos(dist * 3.0 + angle),\n                      0.5 + 0.5 * sin(dist * 5.0 + angle),\n                      0.5 + 0.5 * sin(dist * 7.0 + angle));\n    \n    // Render\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}