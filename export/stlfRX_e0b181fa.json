{"ver":"0.1","info":{"id":"stlfRX","date":"1651675786","viewed":89,"name":"Sifting Sky","username":"RedWool","description":"Voronoi Training Three, with some pseudo 3D","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Random Functions\nfloat random(float x)\n{\n    return sin(sin(x)*82.481);\n}\n\nfloat noise(float x)\n{\n    float v = floor(x);\n    return mix(random(v), random(v+1.), fract(x));\n}\n\nvec2 hash(in vec2 uv)\n{\n    return sin(vec2(random(uv.x),random(uv.y)*dot(uv, vec2(81.2,49.2))))*382.39;\n}\n\n//Function to help make hexagons\nvec2 hex(vec2 uv)\n{\n\n    return vec2(0, mod(uv,2.).x>.5 ? .5 : 0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.xy;\n    \n    //Fishball Effect\n    vec2 fish = vec2(mod(iTime*0.1, 3.)-1.5,0);\n    //Uncomment this if you want the fisheye ball to go to your cursor\n    //fish = iMouse.xy/iResolution.xy-vec2(0.5);\n    \n    uv *= clamp(pow(12., distance(uv, fish)),1.,6.);\n    \n    uv *= 3.;\n    uv.y *= 0.8;\n    \n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n    vec2 p;\n    float low = 5.;\n    \n    //Voronoi effect for hexagon\n    for(int x=-1;x<2;x++){\n    for(int y=-1;y<2;y++){\n        vec2 n = vec2(x,y);\n        vec2 c = n + i;\n        vec2 r = hex(c)+(sin(hash(c) + iTime)*.1+.2);\n        \n        float l = length(n+r-f);\n        if (l<low)\n        {\n            low = l;\n            p = c;\n        }\n    }}\n    \n    //Determine Color\n    float pct = noise(5.*mod(low-iTime*.3,.3)+p.x*.7+p.y*5.+iTime);\n    \n    //Yellow and light pink\n    vec3 col = vec3(.3,.4,1)*pct+vec3(1, .7,.7)*(1.-pct);\n\n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}