{"ver":"0.1","info":{"id":"MfKGRt","date":"1713171956","viewed":48,"name":"lokichen_raymatching","username":"lokichen","description":"raymatching","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymatching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdSphere(vec3 p , float radius)\n{\n    return length(p)-radius;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat smin(float a , float b , float k)\n{\n    float h = max(k - abs(a-b) , 0.0)/k;\n    return min(a,b) - h*h*h*k*(1.0/6.0);\n}\n\nvec3 rot3D(vec3 p , vec3 axis , float angle)\n{\n    return mix(dot(axis , p)*axis , p , cos(angle)) + \n            cross(axis,p)*sin(angle);\n}\n\nmat2 rot2D(float angle)\n{\n    float s = sin(angle);\n    float c = cos(angle);\n\n    return mat2(c,-s,s,c);\n}\n\nfloat map(vec3 p)\n{\n    vec3 spherePos = vec3(sin(iTime)*2.0 , 0,0);\n    float sphere = sdSphere(p-spherePos , 1.0);\n\n    vec3 p_temp = p;\n    p_temp.xy *= rot2D(iTime);\n\n    float scale = 1.0;\n    float box = sdBox(p_temp, vec3(0.75))/scale;\n\n    float ground = p.y + 0.75;\n\n    // return smin(sphere , box , 0.9);\n\n    return smin(ground , smin(sphere , box , 1.0) , 0.1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.0 - iResolution.xy)/iResolution.y;\n    vec2 ms = (iMouse.xy*2.0 - iResolution.xy)/iResolution.y;\n\n    vec3 ro = vec3(0,0,-6);\n    vec3 rd = normalize( vec3(uv,1) );\n\n    // 竖直旋转\n    ro.yz *= rot2D(-ms.y);\n    rd.yz *= rot2D(-ms.y);\n\n    // 水平旋转\n    ro.xz *= rot2D(-ms.x);\n    rd.xz *= rot2D(-ms.x);\n\n    \n\n    float d=0.0;\n\n    vec3 col = vec3(0.);\n    for(int i=0 ; i<40 ; ++i)\n    {\n        vec3 p = ro + rd * d;// 光线上的点\n        float dis = map(p);// 光线上的点与 球体sphere({0,0,0} , 1.0)的距离\n        \n        d += dis;\n\n        col = vec3(i)/40.0;\n\n        if( dis < 0.001 || d >100.0)              \n            break;        \n    }\n\n    col = vec3(d * 0.1);\n\n\n    \n\n    fragColor = vec4(col,1.0);    \n}\n\n\n\n\n","name":"Image","description":"","type":"image"}]}