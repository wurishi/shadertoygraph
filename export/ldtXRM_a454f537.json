{"ver":"0.1","info":{"id":"ldtXRM","date":"1458450952","viewed":353,"name":"Dots Illusion","username":"vamoss","description":"Circle illusion https://media.giphy.com/media/3o7WTN8FmMgK9hrZyU/giphy.gif","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["circle","illusion","tosi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nOriginal work:\nhttps://media.giphy.com/media/3o7WTN8FmMgK9hrZyU/giphy.gif\n*/\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nfloat circle(in vec2 uv, in float _radius){\n    return 1.-smoothstep(_radius-(_radius*0.01),\n                         _radius+(_radius*0.01),\n                         dot(uv,uv)*4.0);\n}\n\nfloat line(vec2 uv, vec2 origin, vec2 destiny, float radius){\n    destiny -= origin;\n\tfloat color = length( clamp( dot(uv-origin,destiny)/dot(destiny,destiny), 0.,1.) *destiny - uv+origin );\n    return smoothstep(color-0.005,color+0.005, radius);    \n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n//  Function from IÃ±igo Quiles \n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0, \n                     0.0, \n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//zero centered uv from -1 to 1 vertically\n    vec2 uv = fragCoord.xy / iResolution.xy*2.;\n    uv-=1.0;\n\tuv.x *= iResolution.x/iResolution.y;\n    \n    //bg circle\n    vec3 bg = 1.0-vec3(circle(uv,4.0));\n    vec3 color = bg;\n    \n    const float maxQtd = 16.;\n    float curMax = floor(fract(iTime/30.0)*(maxQtd-1.))+1.;\n    mat2 rot = rotate2d(-PI/curMax);\n    for(float i=0.; i<maxQtd; i++){\n        if(curMax<i) break;\n        float index = i/curMax;\n        float angle = index*PI;\n        if(i>0.) uv *= rot;\n        \n        //reverse rotation direction\n        //angle*=-1.;\n        \n        //line\n        if(distance(color,bg)<1.0) color = mix(color, vec3(1.0), line(uv, vec2(0, -1.0), vec2(0, 1.0), 0.003));\n        \n        //dot\n        color = mix(color, hsb2rgb(vec3(index,1.0,1.0)), circle(uv+vec2(0., cos(angle+iTime*3.0)), 0.008));\n    }\n    \n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}