{"ver":"0.1","info":{"id":"cl2Gzt","date":"1673740464","viewed":74,"name":"Inexact reuleaux SDF","username":"zenzicubic","description":"An inexact Releaux SDF, made using a Cartesian oval between the points of an equilateral triangle.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sdf","geometry","reuleaux"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SMOOTHNESS 3.5\n\nfloat reuleauxSDF(vec2 p) {\n    return distance(vec2(1.,0.), p) + distance(vec2(-0.5,0.866), p) + distance(vec2(-0.5,-0.866), p) - SMOOTHNESS;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 v = (4. * fragCoord - 2. * iResolution.xy) / iResolution.y;\n    float sd = reuleauxSDF(v);\n    \n    if (sd > 0.) {\n        fragColor = vec4(0.718,0.365,0.412,0.);\n    } else {\n        fragColor = vec4(0.216,0.145,0.286,1.);\n    }\n    fragColor.xyz *= sin(60.*sd);\n}","name":"Image","description":"","type":"image"}]}