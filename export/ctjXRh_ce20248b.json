{"ver":"0.1","info":{"id":"ctjXRh","date":"1675685349","viewed":115,"name":"raymarch-ball","username":"kokodayo","description":"raymarch为球建模。球在原点(0,0,0)，半径为1。并应用漫反射","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarchdiffuse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float angle){\n    float c= cos(angle);\n    float s = sin(angle);\n    return mat2(c,-s,s,c);\n}\n\nstruct material{\n    float d;\n    float id;\n    vec3 col;\n    //others\n};\nmaterial map(vec3 p){\n    material mat;\n    float sphere=  length(p)-1.0;\n    if(sphere<=0.001) {\n        mat.id = 1.0;\n        mat.col = vec3(0.2,0.7,1.0);\n    }\n    float plane = p.y+1.5;\n    if(plane<=0.001) {\n        mat.id = 2.0;\n        mat.col = mod(floor(p.x)+floor(p.z),2.0)*vec3(1.0);\n    };\n    mat.d = min(sphere,plane);\n    return mat;\n    \n}\n\nmaterial Raymarch(vec3 ro,vec3 rd){\n    float d;\n    material mat;\n    for(int i =0;i<255;i++){\n        vec3 p =ro+rd*d;\n        mat = map(p);\n        float d0 = mat.d;\n        if(d0<=0.001||d>=40.) break;\n        d+=d0;\n    }\n    mat.d = d;\n    return mat;\n}\nvec3 GetNormal(vec3 p){\n    float d = map(p).d;\n    vec2 e = vec2(0.001,0.0);\n    float dx = d-map(p-e.xyy).d;\n    float dy = d-map(p-e.yxy).d;\n    float dz = d-map(p-e.yyx).d;\n    return normalize(vec3(dx,dy,dz));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 uv = fragCoord/iResolution.xy;    \n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 col = vec3(0.0);\n    \n    vec3 ro = vec3(0.0, 0.0, -5);\n    vec3 rd  = normalize(vec3(uv, 1.0));\n    \n    material mat= Raymarch(ro,rd);\n    if(mat.d < 40.0){\n        vec3 p = ro+rd*mat.d;\n        vec3 n  = GetNormal(p);\n        vec3 lightPos = vec3(0,5, -5.0); \n        lightPos.xy *= rot(iTime);\n        vec3 lightdir = normalize(lightPos - p);\n        float diffuse = dot(n, lightdir);\n        diffuse = diffuse*.5 + .5;\n        col += diffuse * mat.col;\n    }\n   \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}