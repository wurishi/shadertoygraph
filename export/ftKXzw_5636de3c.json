{"ver":"0.1","info":{"id":"ftKXzw","date":"1640413964","viewed":67,"name":"Tutorial with a bit of improv","username":"LucasR","description":"This is my first shader, I'm learning :D","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["beginner","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 p, float r, float blur){\n    float d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    return c;\n}\n\nfloat blink(float t){ // thanks to IÃ±igo Quilez for this function. Taken from his \"Selfie girl\" video\n    float alpha = min(1., mod(t, 3.1));\n    return smoothstep(0., 0.1, alpha) - smoothstep(0.18, 0.4, alpha);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float t = iTime;\n    float bounceSpeed = 1.2;\n    float theta = 0.25*sin(bounceSpeed*t); // wanted something a bit more bouncy, similar to the last one\n    // ... but with less time spent on the middle\n    //float theta = 0.5*(abs(sin(t))-0.5);\n    //float theta = abs(mod(t, 2.0) * abs(mod(-t, 2.0)));\n    //float theta = pow(abs(abs(bounceSpeed*mod(t, 4./bounceSpeed))-2.)-1., 3.);\n    mat2 rot = mat2(cos(theta), sin(theta), -sin(theta), cos(theta)); // matrix defined column-first\n    vec2 rotOrig = vec2(0., -0.8);\n    \n    vec2 uv = fragCoord/iResolution.xy; // normalize coordinates\n    uv -= 0.5; // move origin to center of viewport\n    uv -= rotOrig;\n    uv.x *= iResolution.x/iResolution.y; // make viewport square\n    uv = rot * uv;\n    uv += rotOrig;\n    uv = vec2(abs(uv.x), uv.y); // make domain symmetric\n    \n    float blur = 0.005;\n    float eyeSize = 0.06;\n    float blinkSize = 0.06;\n    \n    float mask = circle(uv, vec2(0.), 0.3, blur);\n    mask -= circle(uv, vec2(.1, .1-blinkSize*blink(t)), eyeSize, blur)\n    *circle(uv, vec2(.1, .1+blinkSize*blink(t)), eyeSize, blur); // both eyes due to symmetry\n    \n    mask -= clamp(circle(uv, vec2(0.), 0.2, blur)\n    - circle(uv, vec2(0., 0.1-0.02*abs(sin(t))), 0.2, blur), 0., 1.); // mouth\n    \n    // Output to screen\n    fragColor = vec4(vec3(1., 0.95, 0)*mask+(1.-mask)*vec3(66., 179., 199.)/255., 1.0);\n}","name":"Image","description":"","type":"image"}]}