{"ver":"0.1","info":{"id":"ttVfz1","date":"1613924438","viewed":90,"name":"Animated voronoi","username":"morphix","description":"voronoi","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//original - http://glslsandbox.com/e#71176.0\n//This is only a remix\nconst float Radius = 1.; // cell radius\nconst float Bounds = 1.; // round number, adjust this to accomodate Radius\n\n// hash without sine\n// https://www.shadertoy.com/view/4djSRW\n#define MOD3 vec3(443.8975, 397.2973, 491.1871)\nfloat hash12(vec2 p) {\n\tvec3 p3  = fract(vec3(p.xyx) * MOD3);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\nvec3 hash33(vec3 p3) {\n\tp3 = fract(p3 * MOD3);\n    p3 += dot(p3, p3.yxz+23.47);\n    return fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\n\n// map offset and value\nvec3 mapOV(vec2 p, vec2 o, float z) {\n    return\n        mix(\n            hash33(vec3(floor(p)-o, floor(z)-1.)),\n            hash33(vec3(floor(p)-o, floor(z))),\n            smoothstep(0., 1., fract(z))\n        );\n}\n\nfloat map(vec2 p) {\n    float f = 0.;\n    for(float y=-Bounds; y<=Bounds; y++) {\n        for(float x=-Bounds; x<=Bounds; x++) {\n            float t = iTime + hash12(floor(p)-vec2(x, y));\n            vec3 ov = mapOV(p, vec2(x, y), t);\n            float cell = 1. - length(fract(p)-ov.xy+vec2(x, y)) / Radius;\n            f = max(f, cell * ov.z);\n        }\n    }\n    return f;\n}\n\nmat2 rotate(float a)\n{\n\tfloat c = cos(a);\n\tfloat s = sin(a);\n\treturn mat2(c, s, -s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 res = iResolution.xy;\n    vec2 p = 8.*(2.+sin(iTime/9.))*(fragCoord.xy-res/2.)/res.y;\n    p.x+=49.*sin(iTime/9.);\n    p.y+=39.*cos(iTime/7.);\n    p*=rotate(iTime/6.);\n    fragColor = vec4(mix(\n                        .7-vec3(.9), \n                        1.3-vec3(\n                            abs(cos(iTime/2.)), \n                            1.-abs(cos(iTime/3.)), \n                            abs(sin(iTime/4.))),\n                          map(p)), 1.);\n}","name":"Image","description":"","type":"image"}]}