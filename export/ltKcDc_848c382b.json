{"ver":"0.1","info":{"id":"ltKcDc","date":"1538050055","viewed":115,"name":"CircleCheck","username":"kanechan","description":" Based on the shader Cellular Noise from The Book of Shader (https://thebookofshaders.com/12/)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["check"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\nfloat randomCheck() {\n    return 0.2 + 0.8*abs(cos(iTime*0.1));\n}\n\nfloat randomRadius( vec2 p ) {\n    return 0.1 * cos(p.x) + 0.1 * sin(p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = 20.0 * fragCoord/iResolution.y;\n   \n    vec2 floor_st = floor(st);\n    vec2 frac_st = fract(st);\n    \n    float randCheck = randomCheck();\n    float randRadius = randomRadius( floor_st );\n    float sumRand = randCheck + randRadius;\n    \n    fragColor = vec4(0.9,0.4,0.,1.);\n    \n    for(int y = -1; y <= 1; y++){\n    \tfor(int x = -1; x <= 1; x++){\n            \n    \t\tvec2 neighbor = vec2(x,y);\n            vec2 idx = floor_st + neighbor;\n            vec2 pointInCell = random2(idx);\n            \n            vec2 movingPoint = 0.5 + 0.5*sin(iTime*0.1*log(iTime*iTime)+6.2831*pointInCell);\n            \n            vec2 vecDiff = movingPoint + neighbor - frac_st;\n            float dist = length(vecDiff);\n            \n            vec4 newColor = vec4(sumRand,sumRand*0.1,sumRand*0.3,1.);\n                \n            if(mod(idx.x, 4.) == 0.0 && mod(idx.y, 8.) == 0.){\n                    \n            \tnewColor = cos(iTime + idx.x + idx.y)+vec4(sumRand,sumRand*0.1,1.-sumRand*0.1,1.);\n            \n            } else if(mod(idx.x, 7.) == 0.0 && mod(idx.y, 3.) == 0.){\n                    \n              \tnewColor = cos(iTime+ idx.x + idx.y)+vec4(sumRand*0.7,sumRand*0.1,sumRand*0.5,1.);\n            }\t\n            \n             float mixAlpha = 0.0;\n            if(dist - sumRand < 1.0){\n                mixAlpha = dist - randCheck + 0.2;\n            }\n            else mixAlpha = dist - sumRand;\n            \n            \n            fragColor = mix( fragColor, newColor, smoothstep(20./iResolution.y,-20./iResolution.y,mixAlpha));\n         }\n    }\n}","name":"Image","description":"","type":"image"}]}