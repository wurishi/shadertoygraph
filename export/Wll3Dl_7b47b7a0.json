{"ver":"0.1","info":{"id":"Wll3Dl","date":"1564720828","viewed":323,"name":"3dPoint in space","username":"bhuwan0000","description":"just beginning with 3d on shaderToy","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["3d","point"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistToLine(vec3 Ro, vec3 Rd, vec3 p)\n{\n    return length(cross((p-Ro) , Rd))/length(Rd);\n}\n\nfloat DrawPoint(vec3 Ro, vec3 Rd, vec3 p)\n{\n    float d = DistToLine(Ro, Rd, p);\n    d = smoothstep(0.08, 0.07, d);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    //uv.y *= iResolution.x/iResolution.y;\n    \n    vec3 Ro = vec3(3.0*sin(t), 2.0, -3.0*cos(t));\n    vec3 lookat = vec3(0.0);\n    float zoom = 0.6;\n    vec3 f = normalize(lookat - Ro);\n    vec3 r = cross(vec3(0.0, 1.0, 0.0), f);\n    vec3 u = cross(f, r);\n    \n    vec3 c = Ro + f*zoom;\n    vec3 i = c + uv.x*r + uv.y*u;\n    \n    vec3 Rd = i-Ro;\n    \n    float d = 0.0;\n    \n    d += DrawPoint(Ro, Rd, vec3( 1.0,  -1.0,  1.0));\n    d += DrawPoint(Ro, Rd, vec3(-1.0,  -1.0,  1.0));\n    d += DrawPoint(Ro, Rd, vec3( 1.0,  -1.0, -1.0));\n    d += DrawPoint(Ro, Rd, vec3(-1.0,  -1.0, -1.0));\n    d += DrawPoint(Ro, Rd, vec3( 1.0,   1.0,  1.0));\n    d += DrawPoint(Ro, Rd, vec3(-1.0,   1.0,  1.0));\n    d += DrawPoint(Ro, Rd, vec3( 1.0,   1.0, -1.0));\n    d += DrawPoint(Ro, Rd, vec3(-1.0,   1.0, -1.0));\n   \n    float col;\n    col = d;\n  \n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}