{"ver":"0.1","info":{"id":"7lBGD1","date":"1623818290","viewed":356,"name":"threeBox","username":"ayaha401","description":"I was inspired this movie.\nhttps://t.co/H8MN5F2JhH?amp=1\n\nI divided integer part of position of squares by even and odd.\nAnd based this value decided box rotation.\nI can only write a little English, so this sentence may be wrong.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["box"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float n = 3.0;\nconst float PI = acos(-1.0);\n\n// function===============================================================\nvec2 rot(vec2 pos, float r)\n{\n    mat2 m = mat2(cos(r), sin(r), -sin(r), cos(r));\n    return m * pos + 0.5;\n}\n\n// primitive==============================================================\nfloat box(vec2 pos, vec2 size)\n{\n    vec2 leftbottom = vec2(0.5) - size;\n    vec2 uv = step(leftbottom, pos);\n    uv *= step(leftbottom, 1.0 - pos);\n    return uv.x* uv.y;\n}\n\nfloat makeThree(vec2 pos, float r)\n{\n    float d = 1e10;\n    float d1 = 0.0;\n    float d2 = 0.0;\n    float d3 = 0.0;\n    \n    vec2 rotate = rot(pos, r);\n    pos.xy = rotate;\n    d1 = box(vec2(pos.x + 0.3, pos.y), vec2(0.1, 0.55)) * (1.0 - box(vec2(pos.x + 0.3, pos.y), vec2(0.07, 0.47)));\n    d2 = box(vec2(pos.x, pos.y), vec2(0.1, 0.5)) * (1.0 - box(vec2(pos.x, pos.y), vec2(0.07, 0.47)));\n    d3 = box(vec2(pos.x - 0.3, pos.y), vec2(0.1, 0.55)) * (1.0 - box(vec2(pos.x - 0.3, pos.y), vec2(0.07, 0.47)));\n    \n    d = d1 + d2 + d3;\n    return d;\n}\n\nfloat wave(vec2 pos)\n{\n    float d = 0.0;\n    pos = vec2(pos.x + (iResolution.x)/2.0, pos.y - (iResolution.y)/2.0);\n    d = length((floor(pos * n) + 0.5) / n);\n    return 1.0 - (sin(d / 0.8 + iTime*1.5));\n}\n\n// map====================================================================\nfloat map(vec2 pos, float r)\n{\n    return makeThree(pos, r);\n}\n\nfloat map2(vec2 pos)\n{\n    return wave(pos);\n}\n\n//main====================================================================\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    float mask = float(map2(pos));\n    \n    pos += 0.5;\n    \n    vec2 mulPos = pos * n;\n    pos = fract(pos * n);\n    \n    float switchNum = mod(floor(mulPos.x) + floor(mulPos.y), 2.0) + 1.0;\n    \n    float three = float(map(pos - 0.5, PI / switchNum));\n    vec3 mainCol = vec3(1.0, 1.0, 0.22);\n    \n    \n    vec3 endCol = vec3(mask * three * mainCol);\n\n    fragColor = vec4(endCol,1.0);\n}","name":"Image","description":"","type":"image"}]}