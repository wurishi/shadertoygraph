{"ver":"0.1","info":{"id":"7dc3W4","date":"1629818151","viewed":212,"name":"Test triangle ray tracer","username":"Pac85","description":"Simple ray tracer","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raytracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nstruct Ray {\n    vec3 o, r;\n};\n\n\nstruct Plane {\n    vec3 o, n;\n};\n\n\nfloat ray_plane(Ray r, Plane p) {\n    float denom = dot(r.r, p.n);\n    if (denom < 1e-5) {\n        return -1.0;\n    }\n    float nom = dot(p.o - r.o, p.n);\n    \n    float t = nom / denom;\n    if (t < 0.0) {\n        return -1.0;\n    }\n    \n    return t;\n}\n\nstruct Triangle2D {\n    vec2 v[3];\n};\n\nTriangle2D triangle2d(vec2 v1, vec2 v2, vec2 v3) {\n    Triangle2D t;\n    t.v[0] = v1;\n    t.v[1] = v2;\n    t.v[2] = v3;\n    return t;\n}\n\nfloat triangle_double_area(Triangle2D t) {\n    vec3 v1 = vec3(t.v[1] - t.v[0], 0.0);\n    vec3 v2 = vec3(t.v[2] - t.v[0], 0.0);\n    return length(cross(v1, v2));\n}\n\nvec3 p_triangle2d(vec2 p, Triangle2D t) {\n   float a = triangle_double_area(t);\n   Triangle2D t1 = triangle2d(t.v[0], t.v[1], p);\n   float a1 = triangle_double_area(t1);\n   Triangle2D t2 = triangle2d(t.v[1], t.v[2], p);\n   float a2 = triangle_double_area(t2);\n   Triangle2D t3 = triangle2d(t.v[0], t.v[2], p);\n   float a3 = triangle_double_area(t3);\n   \n   if (a < a1 + a2 + a3 - 1e-6) {\n       return vec3(-1.0);\n   }\n   \n   return vec3(a1/a, a2/a, a3/a);\n   \n}\n\nstruct Triangle {\n    vec3 v[3];\n};\n\nTriangle triangle(vec3 v1, vec3 v2, vec3 v3) {\n    Triangle t;\n    t.v[0] = v1;\n    t.v[1] = v2;\n    t.v[2] = v3;\n    \n    return t;\n}\n\nfloat triangle3d_double_area(Triangle t) {\n    vec3 v1 = t.v[1] - t.v[0];\n    vec3 v2 = t.v[2] - t.v[0];\n    return length(cross(v1, v2));\n}\n\nvec3 p_triangle(vec3 p, Triangle t) {\n   float a = triangle3d_double_area(t);\n   Triangle t1 = triangle(t.v[0], t.v[1], p);\n   float a1 = triangle3d_double_area(t1);\n   Triangle t2 = triangle(t.v[1], t.v[2], p);\n   float a2 = triangle3d_double_area(t2);\n   Triangle t3 = triangle(t.v[0], t.v[2], p);\n   float a3 = triangle3d_double_area(t3);\n   \n   if (a < a1 + a2 + a3 - 1e-6) {\n       return vec3(-1.0);\n   }\n   \n   return vec3(a1/a, a2/a, a3/a);\n   \n}\n\nvec3 triangle_normal(Triangle t) {\n    vec3 v1 = t.v[1] - t.v[0];\n    vec3 v2 = t.v[2] - t.v[0];\n    \n    return normalize(cross(v1, v2));\n}\n\nTriangle2D project_triangle(Triangle t, mat3 m) {\n    Triangle2D r;\n    \n    r.v[0] = (t.v[0] * m).xy;\n    r.v[1] = (t.v[1] * m).xy;\n    r.v[2] = (t.v[2] * m).xy;\n    \n    return r;\n}\n\nvec4 r_triangle(Ray r, Triangle t) {\n    Plane p;\n    p.n = -triangle_normal(t);\n    p.o = t.v[0];\n    \n    float pt = ray_plane(r, p);\n    if (pt < 0.0) {\n        return vec4(-1.0);\n    }\n    \n    vec3 p3d = r.o + r.r * pt;\n    /*mat3 b;\n    b[0] = p.n;\n    b[1] = normalize(cross(r.r, b[0]));\n    b[2] = normalize(cross(b[0], b[1]));\n    b = transpose(b);\n    \n    vec2 p2d = (p3d * b).xy;\n    \n    Triangle2D t2 = project_triangle(t, b);\n    \n    return vec4(p_triangle2d(p2d, t2), pt);*/\n    return vec4(p_triangle(p3d, t), pt);\n}\n\nvec4 test_scene(Ray r) {\n    vec4 inted = vec4(1000);\n    Triangle tt;\n    vec4 res;\n    vec3 bar;\n    \n    \n                \n                tt.v[0] = vec3(0.378491, 0.393837,  1.418716);\n                tt.v[1] = vec3(0.114372, 0.320532,  1.400048);\n                tt.v[2] = vec3(0.242106, 0.633369,  1.642215);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.114315, -0.318941,  1.399226);\n                tt.v[1] = vec3(0.377848, -0.393098,  1.417728);\n                tt.v[2] = vec3(0.315928, -0.556448,  1.678552);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.114372, 0.320532,  1.400048);\n                tt.v[1] = vec3(0.378491, 0.393837,  1.418716);\n                tt.v[2] = vec3(0.159851, 0.103827,  1.56847);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.377848, -0.393098,  1.417728);\n                tt.v[1] = vec3(0.114315, -0.318941,  1.399226);\n                tt.v[2] = vec3(0.158959, -0.100956,  1.566819);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.377848, -0.393098,  1.417728);\n                tt.v[1] = vec3(0.158959, -0.100956,  1.566819);\n                tt.v[2] = vec3(0.462918, -0.278507,  1.610096);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.377848, -0.393098,  1.417728);\n                tt.v[1] = vec3(0.462918, -0.278507,  1.610096);\n                tt.v[2] = vec3(0.315928, -0.556448,  1.678552);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.242106, 0.633369,  1.642215);\n                tt.v[1] = vec3(0.371054, 0.400844,  1.693271);\n                tt.v[2] = vec3(0.378491, 0.393837,  1.418716);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.034569, -0.788297,  1.70454);\n                tt.v[1] = vec3(-0.273285, -0.249663,  1.783828);\n                tt.v[2] = vec3(-0.118257, -0.091305,  1.41636);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.392504, -0.004906,  1.475924);\n                tt.v[1] = vec3(0.560878, 0.246989,  1.418284);\n                tt.v[2] = vec3(0.772171, 0.250629,  1.507034);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.560878, 0.246989,  1.418284);\n                tt.v[1] = vec3(0.392504, -0.004906,  1.475924);\n                tt.v[2] = vec3(0.386538, 0.308409,  1.397968);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.387254, -0.262416,  1.430353);\n                tt.v[1] = vec3(0.392504, -0.004906,  1.475924);\n                tt.v[2] = vec3(0.754018, -0.249049,  1.445236);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.389995, -0.816663,  1.569332);\n                tt.v[1] = vec3(0.387254, -0.262416,  1.430353);\n                tt.v[2] = vec3(0.754018, -0.249049,  1.445236);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.239453, 0.889123,  1.721658);\n                tt.v[1] = vec3(0.560878, 0.246989,  1.418284);\n                tt.v[2] = vec3(0.249865, 0.560609,  1.531301);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.034569, -0.788297,  1.70454);\n                tt.v[1] = vec3(0.260929, -0.553093,  1.515131);\n                tt.v[2] = vec3(0.389995, -0.816663,  1.569332);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.174545, 0.115383,  1.428663);\n                tt.v[1] = vec3(-0.224852, 0.249936,  1.602082);\n                tt.v[2] = vec3(0.132351, 0.222894,  1.452129);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.132351, 0.222894,  1.452129);\n                tt.v[1] = vec3(0.131121, -0.219586,  1.454948);\n                tt.v[2] = vec3(-0.174545, 0.115383,  1.428663);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.984917, 0.369324,  1.698742);\n                tt.v[1] = vec3(-0.841543, -0.001748,  1.512551);\n                tt.v[2] = vec3(-0.978813, -0.377194,  1.736089);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.174545, 0.115383,  1.428663);\n                tt.v[1] = vec3(-0.841543, -0.001748,  1.512551);\n                tt.v[2] = vec3(-0.984917, 0.369324,  1.698742);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.841543, -0.001748,  1.512551);\n                tt.v[1] = vec3(-0.288732, -0.101798,  1.43864);\n                tt.v[2] = vec3(-0.978813, -0.377194,  1.736089);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.1875, 0.0,  1.411873);\n                tt.v[1] = vec3(-0.140625, 0.0,  1.466561);\n                tt.v[2] = vec3(-0.195312, 0.0,  1.458748);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.1875, 0.0,  1.411873);\n                tt.v[1] = vec3(-0.140625, 0.0,  1.466561);\n                tt.v[2] = vec3(-0.118257, -0.091305,  1.41636);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.140625, 0.0,  1.466561);\n                tt.v[1] = vec3(-0.174545, 0.115383,  1.428663);\n                tt.v[2] = vec3(0.131121, -0.219586,  1.454948);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.118257, -0.091305,  1.41636);\n                tt.v[1] = vec3(-0.140625, 0.0,  1.466561);\n                tt.v[2] = vec3(0.131121, -0.219586,  1.454948);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.224852, 0.249936,  1.602082);\n                tt.v[1] = vec3(0.249865, 0.560609,  1.531301);\n                tt.v[2] = vec3(0.06919, 0.414528,  1.511449);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.260929, -0.553093,  1.515131);\n                tt.v[1] = vec3(0.034569, -0.788297,  1.70454);\n                tt.v[2] = vec3(0.087832, -0.414005,  1.489828);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.387254, -0.262416,  1.430353);\n                tt.v[1] = vec3(0.260929, -0.553093,  1.515131);\n                tt.v[2] = vec3(0.388532, -0.412973,  1.456214);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.239453, 0.889123,  1.721658);\n                tt.v[1] = vec3(0.437234, 0.717688,  1.845992);\n                tt.v[2] = vec3(0.772171, 0.250629,  1.507034);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.447829, 0.169166,  1.914262);\n                tt.v[1] = vec3(-0.984917, 0.369324,  1.698742);\n                tt.v[2] = vec3(-0.978813, -0.377194,  1.736089);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.447829, 0.169166,  1.914262);\n                tt.v[1] = vec3(-0.978813, -0.377194,  1.736089);\n                tt.v[2] = vec3(-0.273285, -0.249663,  1.783828);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.526019, -0.844113,  2.644174);\n                tt.v[1] = vec3(0.964651, -0.345166,  2.024459);\n                tt.v[2] = vec3(0.679624, 0.296324,  2.986731);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.900982, 0.465608,  2.056529);\n                tt.v[1] = vec3(0.437234, 0.717688,  1.845992);\n                tt.v[2] = vec3(0.423212, 0.914063,  2.4557);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.431843, -0.720984,  1.847709);\n                tt.v[1] = vec3(0.964651, -0.345166,  2.024459);\n                tt.v[2] = vec3(0.526019, -0.844113,  2.644174);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.392504, -0.004906,  1.475924);\n                tt.v[1] = vec3(0.772171, 0.250629,  1.507034);\n                tt.v[2] = vec3(0.437234, 0.717688,  1.845992);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.754018, -0.249049,  1.445236);\n                tt.v[1] = vec3(0.392504, -0.004906,  1.475924);\n                tt.v[2] = vec3(0.431843, -0.720984,  1.847709);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.526019, -0.844113,  2.644174);\n                tt.v[1] = vec3(0.363598, -0.851212,  2.400627);\n                tt.v[2] = vec3(0.431843, -0.720984,  1.847709);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.282871, 0.073286,  2.888933);\n                tt.v[1] = vec3(0.005499, 0.761512,  2.456012);\n                tt.v[2] = vec3(-0.447829, 0.169166,  1.914262);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.061959, 0.696472,  2.583459);\n                tt.v[1] = vec3(0.679624, 0.296324,  2.986731);\n                tt.v[2] = vec3(0.423212, 0.914063,  2.4557);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.526019, -0.844113,  2.644174);\n                tt.v[1] = vec3(-0.282871, 0.073286,  2.888933);\n                tt.v[2] = vec3(-0.090076, -0.635407,  2.559018);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.364428, 1.149961,  2.634541);\n                tt.v[1] = vec3(0.021499, 1.188219,  2.669896);\n                tt.v[2] = vec3(0.466559, 1.291283,  2.676029);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.132351, 0.222894,  1.452129);\n                tt.v[1] = vec3(0.392504, -0.004906,  1.475924);\n                tt.v[2] = vec3(0.131121, -0.219586,  1.454948);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.364428, 1.149961,  2.634541);\n                tt.v[1] = vec3(0.466559, 1.291283,  2.676029);\n                tt.v[2] = vec3(0.423212, 0.914063,  2.4557);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.239453, 0.889123,  1.721658);\n                tt.v[1] = vec3(0.005499, 0.761512,  2.456012);\n                tt.v[2] = vec3(0.423212, 0.914063,  2.4557);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.363598, -0.851212,  2.400627);\n                tt.v[1] = vec3(0.445554, -1.213064,  2.638247);\n                tt.v[2] = vec3(0.010129, -0.785826,  2.461384);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.034569, -0.788297,  1.70454);\n                tt.v[1] = vec3(0.363598, -0.851212,  2.400627);\n                tt.v[2] = vec3(0.010129, -0.785826,  2.461384);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.005499, 0.761512,  2.456012);\n                tt.v[1] = vec3(0.364428, 1.149961,  2.634541);\n                tt.v[2] = vec3(0.423212, 0.914063,  2.4557);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.021499, 1.188219,  2.669896);\n                tt.v[1] = vec3(0.364428, 1.149961,  2.634541);\n                tt.v[2] = vec3(0.005499, 0.761512,  2.456012);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.301681, -0.983413,  2.563204);\n                tt.v[1] = vec3(0.031706, -1.188433,  2.653732);\n                tt.v[2] = vec3(0.010129, -0.785826,  2.461384);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.363598, -0.851212,  2.400627);\n                tt.v[1] = vec3(0.526019, -0.844113,  2.644174);\n                tt.v[2] = vec3(0.445554, -1.213064,  2.638247);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.031706, -1.188433,  2.653732);\n                tt.v[1] = vec3(0.445554, -1.213064,  2.638247);\n                tt.v[2] = vec3(-0.090076, -0.635407,  2.559018);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.242106, 0.633369,  1.642215);\n                tt.v[1] = vec3(0.114372, 0.320532,  1.400048);\n                tt.v[2] = vec3(0.020155, 0.484034,  1.631801);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.020155, -0.484034,  1.631801);\n                tt.v[1] = vec3(0.114315, -0.318941,  1.399226);\n                tt.v[2] = vec3(0.315928, -0.556448,  1.678552);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.020155, 0.484034,  1.631801);\n                tt.v[1] = vec3(0.114372, 0.320532,  1.400048);\n                tt.v[2] = vec3(0.159851, 0.103827,  1.56847);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.158959, -0.100956,  1.566819);\n                tt.v[1] = vec3(0.114315, -0.318941,  1.399226);\n                tt.v[2] = vec3(0.020155, -0.484034,  1.631801);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.378491, 0.393837,  1.418716);\n                tt.v[1] = vec3(0.371054, 0.400844,  1.693271);\n                tt.v[2] = vec3(0.159851, 0.103827,  1.56847);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.224852, 0.249936,  1.602082);\n                tt.v[1] = vec3(-0.174545, 0.115383,  1.428663);\n                tt.v[2] = vec3(-0.984917, 0.369324,  1.698742);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.978813, -0.377194,  1.736089);\n                tt.v[1] = vec3(-0.288732, -0.101798,  1.43864);\n                tt.v[2] = vec3(-0.273285, -0.249663,  1.783828);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.224852, 0.249936,  1.602082);\n                tt.v[1] = vec3(0.239453, 0.889123,  1.721658);\n                tt.v[2] = vec3(0.249865, 0.560609,  1.531301);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.772171, 0.250629,  1.507034);\n                tt.v[1] = vec3(0.560878, 0.246989,  1.418284);\n                tt.v[2] = vec3(0.239453, 0.889123,  1.721658);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.389995, -0.816663,  1.569332);\n                tt.v[1] = vec3(0.260929, -0.553093,  1.515131);\n                tt.v[2] = vec3(0.387254, -0.262416,  1.430353);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.118257, -0.091305,  1.41636);\n                tt.v[1] = vec3(0.131121, -0.219586,  1.454948);\n                tt.v[2] = vec3(0.034569, -0.788297,  1.70454);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.447829, 0.169166,  1.914262);\n                tt.v[1] = vec3(-0.090076, -0.635407,  2.559018);\n                tt.v[2] = vec3(-0.282871, 0.073286,  2.888933);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.131121, -0.219586,  1.454948);\n                tt.v[1] = vec3(0.392504, -0.004906,  1.475924);\n                tt.v[2] = vec3(0.387254, -0.262416,  1.430353);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.174545, 0.115383,  1.428663);\n                tt.v[1] = vec3(-0.288732, -0.101798,  1.43864);\n                tt.v[2] = vec3(-0.841543, -0.001748,  1.512551);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.1875, 0.0,  1.411873);\n                tt.v[1] = vec3(-0.174545, 0.115383,  1.428663);\n                tt.v[2] = vec3(-0.140625, 0.0,  1.466561);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.118257, -0.091305,  1.41636);\n                tt.v[1] = vec3(-0.174545, 0.115383,  1.428663);\n                tt.v[2] = vec3(-0.1875, 0.0,  1.411873);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.288732, -0.101798,  1.43864);\n                tt.v[1] = vec3(-0.174545, 0.115383,  1.428663);\n                tt.v[2] = vec3(-0.118257, -0.091305,  1.41636);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.288732, -0.101798,  1.43864);\n                tt.v[1] = vec3(-0.118257, -0.091305,  1.41636);\n                tt.v[2] = vec3(-0.273285, -0.249663,  1.783828);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.132351, 0.222894,  1.452129);\n                tt.v[1] = vec3(-0.224852, 0.249936,  1.602082);\n                tt.v[2] = vec3(0.06919, 0.414528,  1.511449);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.087832, -0.414005,  1.489828);\n                tt.v[1] = vec3(0.034569, -0.788297,  1.70454);\n                tt.v[2] = vec3(0.131121, -0.219586,  1.454948);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.560878, 0.246989,  1.418284);\n                tt.v[1] = vec3(0.386538, 0.308409,  1.397968);\n                tt.v[2] = vec3(0.249865, 0.560609,  1.531301);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.389995, -0.816663,  1.569332);\n                tt.v[1] = vec3(0.754018, -0.249049,  1.445236);\n                tt.v[2] = vec3(0.431843, -0.720984,  1.847709);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.034569, -0.788297,  1.70454);\n                tt.v[1] = vec3(0.389995, -0.816663,  1.569332);\n                tt.v[2] = vec3(0.431843, -0.720984,  1.847709);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.224852, 0.249936,  1.602082);\n                tt.v[1] = vec3(-0.984917, 0.369324,  1.698742);\n                tt.v[2] = vec3(-0.447829, 0.169166,  1.914262);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.392504, -0.004906,  1.475924);\n                tt.v[1] = vec3(0.900982, 0.465608,  2.056529);\n                tt.v[2] = vec3(0.964651, -0.345166,  2.024459);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.679624, 0.296324,  2.986731);\n                tt.v[1] = vec3(-0.061959, 0.696472,  2.583459);\n                tt.v[2] = vec3(-0.282871, 0.073286,  2.888933);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.526019, -0.844113,  2.644174);\n                tt.v[1] = vec3(0.679624, 0.296324,  2.986731);\n                tt.v[2] = vec3(-0.282871, 0.073286,  2.888933);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.964651, -0.345166,  2.024459);\n                tt.v[1] = vec3(0.900982, 0.465608,  2.056529);\n                tt.v[2] = vec3(0.679624, 0.296324,  2.986731);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.679624, 0.296324,  2.986731);\n                tt.v[1] = vec3(0.900982, 0.465608,  2.056529);\n                tt.v[2] = vec3(0.423212, 0.914063,  2.4557);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.010129, -0.785826,  2.461384);\n                tt.v[1] = vec3(-0.273285, -0.249663,  1.783828);\n                tt.v[2] = vec3(0.034569, -0.788297,  1.70454);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.431843, -0.720984,  1.847709);\n                tt.v[1] = vec3(0.392504, -0.004906,  1.475924);\n                tt.v[2] = vec3(0.964651, -0.345166,  2.024459);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.239453, 0.889123,  1.721658);\n                tt.v[1] = vec3(0.423212, 0.914063,  2.4557);\n                tt.v[2] = vec3(0.437234, 0.717688,  1.845992);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.431843, -0.720984,  1.847709);\n                tt.v[1] = vec3(0.363598, -0.851212,  2.400627);\n                tt.v[2] = vec3(0.034569, -0.788297,  1.70454);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.005499, 0.761512,  2.456012);\n                tt.v[1] = vec3(-0.224852, 0.249936,  1.602082);\n                tt.v[2] = vec3(-0.447829, 0.169166,  1.914262);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.423212, 0.914063,  2.4557);\n                tt.v[1] = vec3(0.021499, 1.188219,  2.669896);\n                tt.v[2] = vec3(-0.061959, 0.696472,  2.583459);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.282871, 0.073286,  2.888933);\n                tt.v[1] = vec3(-0.061959, 0.696472,  2.583459);\n                tt.v[2] = vec3(0.005499, 0.761512,  2.456012);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.010129, -0.785826,  2.461384);\n                tt.v[1] = vec3(0.445554, -1.213064,  2.638247);\n                tt.v[2] = vec3(0.301681, -0.983413,  2.563204);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.301681, -0.983413,  2.563204);\n                tt.v[1] = vec3(0.445554, -1.213064,  2.638247);\n                tt.v[2] = vec3(0.031706, -1.188433,  2.653732);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.021499, 1.188219,  2.669896);\n                tt.v[1] = vec3(0.005499, 0.761512,  2.456012);\n                tt.v[2] = vec3(-0.061959, 0.696472,  2.583459);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.090076, -0.635407,  2.559018);\n                tt.v[1] = vec3(0.010129, -0.785826,  2.461384);\n                tt.v[2] = vec3(0.031706, -1.188433,  2.653732);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.090076, -0.635407,  2.559018);\n                tt.v[1] = vec3(0.445554, -1.213064,  2.638247);\n                tt.v[2] = vec3(0.526019, -0.844113,  2.644174);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.132351, 0.222894,  1.452129);\n                tt.v[1] = vec3(0.386538, 0.308409,  1.397968);\n                tt.v[2] = vec3(0.392504, -0.004906,  1.475924);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(-0.447829, 0.169166,  1.914262);\n                tt.v[1] = vec3(-0.273285, -0.249663,  1.783828);\n                tt.v[2] = vec3(-0.090076, -0.635407,  2.559018);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.392504, -0.004906,  1.475924);\n                tt.v[1] = vec3(0.437234, 0.717688,  1.845992);\n                tt.v[2] = vec3(0.900982, 0.465608,  2.056529);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.010129, -0.785826,  2.461384);\n                tt.v[1] = vec3(-0.090076, -0.635407,  2.559018);\n                tt.v[2] = vec3(-0.273285, -0.249663,  1.783828);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.005499, 0.761512,  2.456012);\n                tt.v[1] = vec3(0.239453, 0.889123,  1.721658);\n                tt.v[2] = vec3(-0.224852, 0.249936,  1.602082);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n                tt.v[0] = vec3(0.423212, 0.914063,  2.4557);\n                tt.v[1] = vec3(0.466559, 1.291283,  2.676029);\n                tt.v[2] = vec3(0.021499, 1.188219,  2.669896);\n        \n                res = r_triangle(r, tt);\n                if (res.x > 0.0 && res.w < inted.w) {\n                    inted = res;\n                }\n        \n\n        \n\n    \n    return inted;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 suv = uv * 2.0 - vec2(1.0);\n    Ray r;\n    r.r = normalize(vec3(suv.yx * vec2(9.0/16.0, 1.0), 1.0));\n    r.o = vec3(0.0, 0.0, -1.0);\n\n    Plane testp;\n    testp.o = vec3(-0.1);\n    testp.n = vec3(0.0, -1.0, 0.0);\n    \n    \n    fragColor.xyz = test_scene(r).xyz;return;\n\n    if (ray_plane(r, testp) > 0.0) {\n        fragColor = vec4(1.0);\n    } else {\n        fragColor = vec4(0.0);\n    }\n}","name":"Image","description":"","type":"image"}]}