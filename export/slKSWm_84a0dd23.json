{"ver":"0.1","info":{"id":"slKSWm","date":"1640849768","viewed":143,"name":"Test Chaos","username":"kcchang","description":"Shader Test\nModified from \nhttps://there.oughta.be/an/led-cube","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["chaos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T1 40.0 //Do not omit the decimal point. This will be used in the OpenGL shader which will otherwise interpret it as a float literal\n#define T2 60.0\n#define T3 80.0\n\nfloat temperature =0.0;\nfloat cpuf = 1.;\nuniform float age;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord/iResolution.xy*5.0+5.- vec2(19.0);;\n    vec2 i = p;\n\n    float inten = 0.05;\n    vec2 coords = fragCoord.xy*0.5;\n    vec3 mcolor = vec3(0.1, 0.1, 1.9);\n    vec3 mcolorwarm = vec3(0.7, 0.7, 0.1);\n    vec3 mcolorhot = vec3(0.9, 0.2, 0.1);\n    vec3 ccolor = vec3(0.7, 1.0, 0.9);\n    vec3 ccolorwarm = vec3(1.0, 1.0, 0.6);\n    vec3 ccolorhot = vec3(1.0, 1.0, 1.0);\n    vec2 coord;\n    float c = 1.0;\n        \n    for (int n = 0; n < 8; n++) {\n        float t = iTime * (0.7 - (0.2 / float(n+1)));\n        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n        c += 1.0 / length(vec2(p.x / (2.0 * sin(i.x + t) / inten), p.y / (cos(i.y + t) / inten)));\n    }\n        \n    temperature = float(iFrame)*0.1;\n        \n    c /= 8.0;\n    c = 1.5 - sqrt(pow(c, 2.0));\n    mcolor.g = clamp(coords.x, 0.0, 1.0);\n    mcolor = smoothstep(T2, T1, temperature)*mcolor + smoothstep(T1, T2, temperature)*smoothstep(T3, T2, temperature)*mcolorwarm + smoothstep(T2, T3, temperature)*mcolorhot;\n \n    ccolor = smoothstep(50.0, 0.0, cpuf)*ccolor + smoothstep(0.0, 50.0, cpuf)*smoothstep(100.0, 50.0, cpuf)*ccolorwarm + smoothstep(50.0, 100.0, cpuf)*ccolorhot;\n    vec3 outcolor = mcolor * c + ccolor * c * c * c *c  ;\n    vec3 grayXfer = vec3(0.3, 0.59, 0.11);\n    vec3 gray = vec3(dot(grayXfer, outcolor));\n\n    fragColor = vec4(mix(outcolor, gray, smoothstep(1.0, 2.0, age)), 1.0);\n}","name":"Image","description":"","type":"image"}]}