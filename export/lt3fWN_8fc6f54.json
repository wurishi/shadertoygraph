{"ver":"0.1","info":{"id":"lt3fWN","date":"1539635715","viewed":205,"name":"Chanel Doodle #1","username":"Flopine","description":"15 minutes improvisation training for a performance at the Chanel Foundation gala","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","performance","15mins"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui and Coyhot for teaching me\n// Thanks LJ for giving me the love of shadercoding :3\n\n// Cookie Collective rulz\n\n#define ITER 64.\n#define PI 3.141592\n#define time iTime\n#define BPM 143./2.\n#define tempo BPM/60.\n\nvec3 palette (float t, vec3 a, vec3 b, vec3 c, vec3 d)\n{return a+b*cos(2.*PI*(c*t+d));}\n\nvec2 moda (vec2 p, float per)\n{\n  float a = atan(p.y, p.x);\n  float l = length(p);\n  a = mod(a-per/2., per)-per/2.;\n  return vec2(cos(a),sin(a))*l;\n}\n\nvec2 mo(vec2 p, vec2 d)\n{\n  p = abs(p)-d;\n  if (p.y > p.x) p.xy = p.yx;\n  return p;\n}\n\nfloat stmin(float a, float b, float k, float n)\n{\n  float st = k/n;\n  float u = b-k;\n  return min(min(a,b), 0.5 * (u+a+abs(mod(u-a+st,2.*st)-st)));\n}\n\nfloat smin( float a, float b, float k )\n{\n  float h = max( k-abs(a-b), 0.0 );\n  return min(a, b) - h*h*0.25/k;\n}\n\nfloat pulse (float s)\n{return exp(-fract(time * tempo) * s);}\n\nfloat tiktak(float period)\n{\n  float tik = floor(time*tempo)+pow(fract(time*tempo),3.);\n  tik *= 3.*period;\n  return tik;\n}\n\nmat2 rot(float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nfloat sphe (vec3 p, float r)\n{return length(p)-r;}\n\nfloat od (vec3 p, float d)\n{return dot(p, normalize(sign(p)))-d;}\n\nfloat cyl (vec2 p, float r)\n{return length(p)-r;}\n\nfloat box( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat prim1 (vec3 p)\n{\n\nfloat c = cyl(p.xz, 0.2);\n\nvec3 pp = p;\nfloat per = 3.;\np.y = mod(p.y-per/2., per)-per/2.;\nfloat s = sphe(p, .5);\n\nreturn smin(s, c , 0.5);\n}\n\nfloat prim2 (vec3 p)\n{\n\np.xz *= rot(p.y*0.1);\np.xz = moda(p.xz, 2.*PI/5.);\np.x -= 3.;\np.x += sin(p.y*0.5 + time);\nreturn prim1(p);\n}\n\n\nfloat g = 0.;\nfloat SDF(vec3 p)\n{\n  p.xz *= rot(time*tempo/2.);\n  p.xy = mo(p.xy, vec2(1.,2.));\n  p.xz = mo(p.xz, vec2(1.));\nfloat d = min(smin(sphe (p, 1. - pulse(1.)*0.5), od(p,.5), 0.8), prim2(p)); \n  g+=0.1/(0.1+d*d); \n  return d;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = 2.*(fragCoord/iResolution.xy)-1.;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  \n  vec3 ro = vec3(0.001,0.001,-7.); vec3 p = ro;\n  vec3 rd = normalize(vec3(uv,1.));\n\n  float shad = 0.;\n\n  for (float i=0.; i<ITER; i++)\n  {\n    float d = SDF(p);\n    if (d<0.001)\n    {\n      shad = i/ITER;\n      break;\n    }\n    p += d*rd*0.2;\n  }\n\n  float t = length(ro-p);\n\n  vec3 pal = palette\n  (length(uv) + time*tempo/2.,\n  vec3(0.5),\n  vec3(0.5),\n  vec3(1.),\n  vec3(0.,0.3,0.7));\n\n  vec3 c = vec3(1.-shad) * pal;\n  c = mix(c, vec3(0.,0.3,0.7), 1.-exp(-0.01*t*t));\n  c+=g*0.02;\n  fragColor = vec4(pow(c,vec3(0.45)),1.);\n}","name":"Image","description":"","type":"image"}]}