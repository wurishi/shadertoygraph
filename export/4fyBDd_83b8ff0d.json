{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalize coordinates with center at screen center\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    // Calculate polar coordinates\n    float r = length(uv);\n    float theta = atan(uv.y, uv.x);\n    \n    // Initialize color\n    vec3 color = vec3(0.0);\n    \n    // Parameters\n    float speed = 1.5;\n    float streakCount = 200.0;\n    float timeScale = iTime * speed;\n    \n    // Create layers of streaks\n    for(float i = 0.0; i < 2.0; i++) {\n        float z = fract(timeScale + i * 0.5);\n        \n        // Generate streaks\n        for(float j = 0.0; j < streakCount; j++) {\n            // Create random angle for each streak\n            float randAngle = fract(sin(j * 123.456) * 789.012) * 3.14159 * 2.0;\n            float randOffset = fract(sin(j * 456.789) * 123.456) * 0.1;\n            \n            // Calculate streak position\n            float streakTheta = randAngle;\n            float streakR = r;\n            \n            // Calculate distance from current point to streak line\n            float angleDiff = mod(abs(theta - streakTheta), 3.14159 * 2.0);\n            angleDiff = min(angleDiff, 3.14159 * 2.0 - angleDiff);\n            \n            // Create the streak\n            float streakWidth = 0.0003;\n            float streakLength = smoothstep(0.0, 1.5, r) * (1.0 - smoothstep(1.5, 2.5, r));\n            float streak = smoothstep(streakWidth, 0.0, angleDiff * r);\n            \n            // Fade based on distance and time\n            float fade = smoothstep(0.0, 0.2, z) * smoothstep(1.0, 0.8, z);\n            \n            // Elongate streaks based on radius\n            streak *= streakLength;\n            \n            // Add streak to final color\n            color += vec3(1.0) * streak * fade;\n        }\n    }\n    \n    // Add radial fade for tunnel effect\n    color *= smoothstep(2.0, 0.5, r);\n    \n    // Adjust brightness and contrast\n    color = pow(color, vec3(0.8));\n    \n    // Output final color\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4fyBDd","date":"1734561003","viewed":13,"name":"hyperspacejb","username":"jonahb4","description":"hyperspace","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["hyperspace"],"hasliked":0,"parentid":"","parentname":""}}