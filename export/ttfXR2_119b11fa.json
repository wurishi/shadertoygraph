{"ver":"0.1","info":{"id":"ttfXR2","date":"1563537275","viewed":621,"name":"DCT Visualization","username":"boysx","description":"Just a simple 2D DCT visualization","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["dct","jpeg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float pi = 3.1415927;\n\nfloat a(float x)\n{\n    if(x < .5)\n        return 1./sqrt(2.);\n    \n    return 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 blkpos = mod(fragCoord,float(BLOCK_SIZE))-.5;\n    vec3 sum;\n    \n    for(int y = 0; y < 8; y++)\n        for(int x = 0; x < 8; x++)\n            sum += texture(iChannel0,(fragCoord-blkpos+vec2(x,y))/iResolution.xy).rgb\n            \t* cos(pi*blkpos.x*(float(x)+0.5)/float(BLOCK_SIZE))\n            \t* cos(pi*blkpos.y*(float(y)+0.5)/float(BLOCK_SIZE));\n    \n#if ABS_VALUE == 0\n    fragColor = vec4(sum,1.0);\n#else\n    fragColor = vec4(abs(sum),1.0);\n#endif\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define BLOCK_SIZE 8\n#define ABS_VALUE 1 // Set this to one to see negative values, thanks to @pyBlob for remainding me","name":"Common","description":"","type":"common"}]}