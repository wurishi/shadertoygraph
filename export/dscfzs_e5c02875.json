{"ver":"0.1","info":{"id":"dscfzs","date":"1697534249","viewed":69,"name":"Gabor Circle","username":"altunenes","description":"drag with the mouse, kind of \"reverse phi effect\". :) \ntry the space button... \na variant of\nhttps://www.shadertoy.com/view/dsdfzS\n\n","likes":6,"published":1,"flags":16,"usePreview":0,"tags":["illusion","gabor","perception"],"hasliked":0,"parentid":"cs3BWM","parentname":"gabor patch"},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//note: my initial intention was different so there may be unnecessary things that need to be refactored... ;(\nconst float PI = 3.1415926535897932384626433832795;\nfloat toggleValue = 2.0; \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * (fragCoord/iResolution.xy) - 1.0;\n\n    vec4 spaceKey = texture(iChannel0, vec2(32.5/255.0, 0.5/255.0));\n    if(spaceKey.r > 0.5) {\n        toggleValue = 1.0;\n    } else {\n        toggleValue = 2.0;\n    }\n                      \n    float radii[7]; //at first my intention was different... ;=(\n    radii[0] = 0.08;  \n    radii[1] = 0.2;  \n    radii[2] = 0.3;\n    radii[3] = 0.4;  \n    radii[4] = 0.5;\n    radii[5] = 0.6;\n    radii[6] = 0.7;\n\n    int n = 20;  \n    float angleBetweenPatches = 4.0 * PI / float(n);\n\n    vec3 col = vec3(0.5);\n    float lambda = 0.06;\n    float sigma = 0.02;  \n    float gamma = 1.0;\n    \n    for(int c = 0; c < 7; ++c)\n    {\n        for(int i = 0; i < n; ++i)\n        {\n            float theta = float(i) * angleBetweenPatches;\n            float xOffset = radii[c] * cos(theta);\n            float yOffset = radii[c] * sin(theta);\n            \n            // Mouse control...\n            float adjustedTheta = (iMouse.x / iResolution.x + theta) * PI;\n            \n            if (i % int(toggleValue) == 1) { \n                adjustedTheta = -adjustedTheta;\n            }\n            \n            float psi = iTime *10.5 + float(i) * PI/5.0 + float(c) * PI/10.0;\n            \n            vec2 uvPatch = vec2(uv.x - xOffset, uv.y - yOffset);\n            \n            float xp = 2.0*uvPatch.x * cos(adjustedTheta) - uvPatch.y * sin(adjustedTheta);\n            float yp = 2.0*uvPatch.x * sin(adjustedTheta) + uvPatch.y * cos(adjustedTheta);\n            \n            float envelope = exp(-((xp*xp) + (gamma*gamma * yp*yp)) / (2.0 * sigma * sigma));\n            float carrier = cos(2.0 * PI * xp / lambda + psi);\n            \n            float gabor = envelope * carrier;\n            vec3 colorModulation = vec3(0.5) + vec3(1.5) * cos(0.9 * PI * xp / lambda + vec3(0, 2, 4));  \n            //I love rainbow colors but if you don't like remove colornodu in bellow :):)\n            col += 0.5 * gabor*colorModulation;\n        }\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}