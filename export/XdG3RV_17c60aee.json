{"ver":"0.1","info":{"id":"XdG3RV","date":"1455273361","viewed":200,"name":"Basic : Julia Set","username":"Gijs","description":"pedagocical uses. Use your mouse.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","julia","mandelbrot","set"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int iterations = 32;\n\nvec2 Scale(vec2 p){\n    return (p*2.-iResolution.xy)/iResolution.y*1.5;\n}\n\nfloat Julia(vec2 z,vec2 c){\n    float its = 0.;  \n    for(int i=0;i<iterations;i++){\n       if(dot(z,z)>4.) break;\n\t   z = vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y)+c;  \n       its++;\n    }   \n    return its;\n}\n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 sp = Scale(fragCoord.xy);\n    \n\tvec3 col = vec3(Julia(sp,iMouse.z>0.?Scale(iMouse.xy):vec2(.3))/float(iterations)); \n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}