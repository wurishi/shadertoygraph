{"ver":"0.1","info":{"id":"wt3GDf","date":"1577735452","viewed":143,"name":"aquaColor","username":"foran","description":"aquaColor","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["aquacolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nmat2 rot2d(float a )\n{\n  float c = cos(a);\n  float s = sin(a);\n  return mat2(c, -s, s, c);\n}\n\nfloat map(vec3  p)\n{\n  p.xy = p.xy * rot2d(p.z * 0.2);\n  return cos(p.x) + \n  sin(p.y + 1.0) + \n  cos(p.z) + \n  (.05 + 0.42 * \n  sin(iTime)) * \n  cos(p.y + \n  p.z * \n  2.0) + \n  0.1 * \n  cos(p.y);\n}\n\nvec3 grad(vec3 p)\n{\n  vec2 eps = vec2(0.001, 0.0);\n  return normalize(vec3(map(p + eps.xyy) - map(p - eps.xyy),\n                   map(p + eps.yxy) - map(p - eps.yxy),\n                   map(p + eps.yyx) - map(p - eps.yyx)));\n}\n\nvec3 rm(vec3 ro, vec3 rd, out float st)\n{\n    vec3 p = ro;\n  for (float i = 0.; i < 64.; ++i)\n  {\n    float d = map(p);\n    if (abs(d) < 0.001)\n    {\n      st = i;\n      break;\n    }\n    p += d * rd * 0.8;\n  }\nreturn p;\n}\n\nvec3 shade(vec3 p, vec3 ro, float st, vec3 n)\n{\n  vec3 color = exp(-distance(p, ro)* 0.1) * (n * 1.1 + 0.5) * pow((float(st) / 4.0), 0.5);\n  color = mix(vec3(0.1, 0.7, 1.0), color, exp(-distance(p, ro)* 0.1));\n  return color;\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n  vec2 uv=vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n  uv-=.5;\n  uv/=vec2(iResolution.y/iResolution.x,1);\n  vec3 ro = vec3(0.0, 0.0, (iTime*.1) * 8.0);\n  vec3 rd = normalize(vec3(uv, 0.7 - length(uv)));\n  rd.xy *= rot2d((iTime*.1));\n  float st = 0.0;\n  vec3 p = rm(ro, rd, st);\n  vec3 n = grad(p);\n  vec3 color = shade(p, ro, st, n);\n  vec3 rd2 = reflect(rd, n);\n  vec3 ro2 = p + 0.1 * rd2;\n  vec3 p2 = rm(ro2, rd2, st);\n  vec3 n2 =  grad(p2);\n  vec3 color2 =  shade(p2, ro, st, n2);\n  color = mix(color, color2, 0.65);\n  fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}