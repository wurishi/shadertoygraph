{"ver":"0.1","info":{"id":"DdBcRt","date":"1733380351","viewed":22,"name":"hyperbolic124","username":"nhuck","description":"hyperbolic","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["hyperbolic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Maps a vector from [0, x_resolution] \\times [0, y_resolution]\n// to [0, 1] \\times [0, 1].  The origin is the midpoint of the screen\n// and the unit circle is circular on the screen.\nvec2 screenToR2(vec2 fragCoord) {\n    vec2 normalizedUv = vec2(fragCoord.x / iResolution.y, fragCoord.y / iResolution.y);\n    vec2 shift = vec2(-0.5 * iResolution.x / iResolution.y, -0.5);\n    return normalizedUv + shift;\n}\n\nfloat radiusToDistance(float radius) {\n    return 1.0 / radius / 100.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = screenToR2(fragCoord);\n\n    // Time varying pixel color\n    //vec3 col = vec3(1.0, 0.0, 0.0);\n    \n    float radius = abs(length(uv));\n    float distance = clamp(0.0, radiusToDistance(radius), 1.0);\n    \n    float brightness = 0.003 / (distance * distance);\n    \n\n    \n    vec3 col = vec3(0.5 + sin(distance * 2000.0 + 50.0 * iTime), 0.0, 0.0);\n\n    // Output to screen\n    fragColor = vec4(col * brightness, 1.0);\n}","name":"Image","description":"","type":"image"}]}