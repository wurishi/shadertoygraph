{"ver":"0.1","info":{"id":"MfjBW1","date":"1724890064","viewed":43,"name":"Flashy Torus b","username":"codarobo","description":"test","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["demo"],"hasliked":0,"parentid":"MfjfDh","parentname":"Flashy Torus"},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getAmp(float frequency) { return texture(iChannel0, vec2(frequency / 512.0, 0)).x; }\n\nfloat getWeight(float f) {\n    return (+ getAmp(f-2.0) + getAmp(f-1.0) + getAmp(f+2.0) + getAmp(f+1.0) + getAmp(f)) / 5.0; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord -.5 * iResolution.xy) / iResolution.y;\n\n    float angle = sin(iTime/2.0)*0.4;\n    float distance = abs(-.2*sin(iTime/2.0)+1.5)/2.0+0.5;\n\n    // vec3 ro = vec3(0, sin(iTime)*.2, -1);\n    vec3 ro = vec3(0, angle, -1);\n    vec3 lookat = vec3(0, 0, 0);\n    float zoom = .5;\n    \n    float direction = -1.0*sin(iTime/4.0)+distance;\n    float viewpoint = 1.0;\n    float winding = 50.0;\n    float bandHardness = 0.02; // sin(iTime)*0.5;\n    float bandSize = (1.3-getWeight(0.3))*5.0;\n    // sin(iTime*.5)*3.0 + 5.0; // 4.0;\n    float speed = 1.0;\n    \n    vec3 f = viewpoint*normalize(lookat-ro);\n    vec3 r = direction*normalize(cross(vec3(0,1,0), f));\n    vec3 u = cross(f,r);\n    vec3 c = ro + f * zoom;\n    vec3 i = c += uv.x * r + uv.y * u;\n    vec3 rd = normalize(i-ro);\n    \n    float dS, d0;\n    vec3 p;\n    \n    for(int i=0; i<100; i++) {\n        p = ro + rd * d0;\n        dS = -(length(vec2(length(p.xz) - 1., p.y)) - .75);\n        if(dS<.001) break;\n        d0 += dS;\n    }\n\n    // vec3 col = vec3(uv.x+sin(iTime),uv.y+sin(iTime),0.000);\n    vec3 col = vec3(uv.x*0.1*sin(iTime) + 0.0,uv.y*0.1*cos(iTime) + 0.0, uv.y*0.5*sin(iTime) + 0.2);\n    \n    if(dS<.001) {\n        float x = atan(p.x+2.0, p.z)+iTime*speed;\n        float y = atan(length(p.xz) - 1., p.y);\n        float bands = sin(y*winding+10.0*x);\n        bands = smoothstep(bandHardness, bandSize, bands);\n        col +=  1.0*bands;\n        // col *=  bands;\n\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}