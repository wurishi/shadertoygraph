{"ver":"0.1","info":{"id":"7ddGR7","date":"1629452053","viewed":81,"name":"Sin wave glsl_basics_1","username":"arnav_007","description":"...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sinwave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 p, float r, float blur){\n    uv.x *= iResolution.x / iResolution.y;  \n    float d = length(uv - p);\n    vec3 col = vec3(d);   \n    \n    return smoothstep(r, r-blur, d);\n}\n\nfloat band(float t, float start, float end, float blur){\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    return step1 * step2;\n}\n\nfloat Rect(vec2 uv, vec2 start, vec2 end, float blur){\n    float band1 = band(uv.x, start.x, end.x, blur);\n    float band2 = band(uv.y, start.y, end.y, blur);\n    return band1 * band2;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    \n \n    uv.y /= 0.4;\n    \n    float x = uv.x;\n    float y = uv.y;\n    float m = sin(x*8. + iTime*2.)*.2;\n    //y += (2.*a + uv.x + 5.) * sin(iTime*1.); \n    y -= m;\n    \n    \n    float mask = 0.;\n    \n    float start = 5.0;\n    for(int i = 0; i < 15; i++){\n        mask += Rect(vec2(uv.x,uv.y-m*start*sin(iTime+uv.x)), vec2(-0.9,-0.002), vec2(0.5,0.002),  0.01);\n        start -= 0.5;\n    }\n                \n    uv += .5;\n    vec3 col = vec3(uv.x,uv.y, 1.)*mask;\n    \n    fragColor = vec4(col*3.,1.0);\n}","name":"Image","description":"","type":"image"}]}