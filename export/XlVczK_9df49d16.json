{"ver":"0.1","info":{"id":"XlVczK","date":"1536944502","viewed":342,"name":"DRAGON BALL RADAR","username":"tatsunoru","description":"DRAGON BALL RADAR","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["radar","ball","dragon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 rotate(vec2 v, float c, float s){\n\treturn v * mat2(c, -s, s, c);\n}\n\nvec2 rotate(vec2 v, float r){\n    return rotate(v, cos(r), sin(r));\n}\n\nfloat center(float v){\n    float x = smoothstep(0.3, 0.7, v);\n    x = 1.0 - abs((x - 0.5) * 2.0);\n    return x;\n}\n\nfloat modNormalize(float a, float b){\n    return mod(a, b) / b;\n}\n\nvec2 sphereUV(vec2 pos){\n  \tfloat r = dot(pos, pos) * 0.75;\n\tfloat f = (1.0 - sqrt(abs(1.0 - r))) / r;\n\treturn vec2(pos.x * f, pos.y * f);\n}\n\nvec2 toOrigin(vec2 uv){\n\treturn (uv - 0.5) * 2.0;\n}\n\nvec2 fromOrigin(vec2 uv){\n\treturn uv * vec2(0.5, -0.5) + 0.5;\n}\n\nvec4 textureOrigin(sampler2D tex, vec2 v){\n    return texture(tex, fromOrigin(v));\n}\n\nfloat circle(vec2 base, vec2 pos, float radius){\n    return length(pos - base) - radius;\n}\n\nvec2 hash2(vec2 p){\n    vec2 q = vec2(dot(p, vec2(127.14684, 311.76987)), dot(p, vec2(269.5143, 183.3168)));\n\treturn fract(q) - 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.yy * 2.0;   \n    float len = length(uv);\n    uv = sphereUV(uv);  \n\n    float alpha = mod(atan(uv.y, uv.x) / 3.1415 * 0.5 + iTime / 5.0, 1.0);\n    float alphaoffset = (1.0 + alpha * 0.3);\n\n    float field = max(center(modNormalize(uv.x + 0.025, 0.05 * alphaoffset)), center(modNormalize(uv.y + 0.025, 0.05 * alphaoffset)));\n\n    vec4 ret = vec4(0.0, 0.8, 0.3, 0.0) * (1.0 - alpha * 4.0);\n    \n\tret = clamp(ret, 0.0, 1.0) + vec4(0.0, 0.2, 0.0, 0.0);\n    ret += smoothstep(0.48, 0.52, textureOrigin(iChannel0, uv).r) * clamp((1.0 - alpha * 2.0), 0.0, 1.0);\n    \n    ret += field * vec4(0.0, 0.3, 0.1, 1.0);\n    ret += field * field * field * vec4(0.0, 0.3, 0.1, 1.0) * 5.0;\n    \n    for(int i=0; i < 7; ++i){\n        vec2 hash = hash2(vec2(floor(iTime * 0.001), i)) * 0.8;\n        \n        float object = circle(uv, hash, 0.01);\n\t    object = ((1.0 - alpha) - smoothstep(0.0, 0.05, object) - 0.3) * 8.0;\n\n    \tret = mix(ret, vec4(1.0, 0.5, 0.1, 1.0) * pow(object, 2.0), clamp(object, 0.0, 1.0));\n    }\n    \t\n    vec4 col = ret * (1.0 - smoothstep(0.6, 1.0, len));\n    \n    col = mix(col, vec4(0.5) * pow(len, 12.0), smoothstep(0.99, 1.0, len) * (1.0 - smoothstep(1.1, 1.11, len)));\n    col = mix(col, vec4(0.0), smoothstep(1.05, 1.06, len) * (1.0 - smoothstep(1.06, 1.07, len)));\n    \n\tfragColor = col;\n\n}\n\n","name":"Image","description":"","type":"image"}]}