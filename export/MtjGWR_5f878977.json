{"ver":"0.1","info":{"id":"MtjGWR","date":"1428247804","viewed":329,"name":"flame2D","username":"Eddh","description":"A flame in 2D created with some noise function.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","coherentnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// This code is a mess. Please ignore\n\n\n// noise function from iq\nfloat hash( vec2 p ) {\n\tfloat h = dot(p,vec2(127.1,311.7));\t\n    return fract(sin(h)*43758.5453123);\n}\nfloat noise( in vec2 p ) {\n    vec2 i = floor( p );\n    vec2 f = fract( p );\t\n\tvec2 u = f*f*(3.0-2.0*f);\n    return -1.0+2.0*mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\nfloat fbm(vec2 p, int octaves, float gain, float lacunarity){\n\tfloat val = noise(p+vec2(0.0, -10.0*iTime));\n\tfloat current;\n\tfloat f = lacunarity;\n\tfor(int i=0 ; i<5 ; i++){\n\t\tfloat b = 1.0;\n\t\tcurrent =  noise((p+vec2(0.0, -13.0*iTime*b))*f)*gain;\n\t\tval += current;\n\t\t\n\t\tf*= lacunarity;\n\t}\n\t\t\t//val*=val;\n\treturn val;\n}\n\nvec4 getPoint(float x, float y){\n\tvec2 center = vec2(iMouse.x/iResolution.x, iMouse.y/iResolution.y);\n\tfloat nX = x;\n\tfloat nY = y;\n\tfloat trueDistFromCenter = length(vec2(nX-center.x, nY-center.y))*0.2;\n\tfloat distFromCenter = length(vec2( (nX-center.x)/(nY-center.y),\n\t\t\t\t\t\t\t\t\t\t(nY-center.y)*0.5));\n\t//float val = fbm(vec2(x*100, y*100 - 30*inTime*(1-trueDistFromCenter*trueDistFromCenter)), 5, 0.6, 1.83);\n\tfloat val = fbm(vec2(x*iResolution.x*0.3, 5.0*iResolution.y*y*(trueDistFromCenter*trueDistFromCenter) ), 5, 0.8, 1.83);\n\tval = 0.1/(distFromCenter*distFromCenter*10.0) + 1.0*val/(distFromCenter*distFromCenter*150.0) -0.1;\n\tval = abs(val);\n\tif( nY-center.y < 0.0){\n\t\tval = 0.0;\n\t}\n\tfloat red = 3.0*val*val+ val+0.3;\n\tfloat green = val*val+val+0.2;\n\tfloat blue =val*val +0.2;\n\tif(val < 0.3){\n\t\tfloat val2 = 0.2 - distFromCenter*0.7 + val*0.5;\n\t\tred = val2;\n\t\tgreen = val2;\n\t\tblue = val2;\n\t}\n\treturn vec4(red, green, blue, 1.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec4 p1 = getPoint(gl_FragCoord.x/iResolution.x, gl_FragCoord.y/iResolution.y + 0.5/iResolution.y);\n\tvec4 p2 = getPoint(gl_FragCoord.x/iResolution.x - 0.3/iResolution.x, gl_FragCoord.y/iResolution.y - 0.3/iResolution.y);\n\tvec4 p3 = getPoint(gl_FragCoord.x/iResolution.x + 0.3/iResolution.x, gl_FragCoord.y/iResolution.y - 0.3/iResolution.y);\n\tvec4 i1 = mix(p2, p3, 0.5);\n\tvec4 i2 = mix(i1, p1, 0.5);\n\ti1 = mix(i1, i2, 0.5);\n\t\n\t\n\tfragColor = i1;\n\t//outColor = vec4(val, 0, 0, 1);\n}","name":"","description":"","type":"image"}]}