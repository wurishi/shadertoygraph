{"ver":"0.1","info":{"id":"XcV3Rt","date":"1713154164","viewed":94,"name":"The Fascinating Mandelbrot ","username":"walter023","description":"Adding imaginary powers to my karate library!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float threshold = 4.0;\nconst float maxIndex = 150.0;\n\n// Del maestro IQ üôèüèª\nvec3 palette(in float t) {\n  vec3 a = vec3(0.618, 0.658, 0.500);\n  vec3 b = vec3(-0.082, 0.500, -0.452);\n  vec3 c = vec3(1.000, 1.000, 1.000);\n  vec3 d = vec3(0.000, 0.333, 0.667);\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\nvec2 setCamera(vec2 uv) {\n  float rad = 2.1;\n  float s = sin(rad);\n  float c = cos(rad);\n  uv = mat2(c, -s, s, c) * uv;\n  uv += vec2(6.25, 30.0);\n  return uv * .021;\n}\n\n// Zn¬≤ + C\nvec2 Mandelbrot(vec2 uv, vec2 z) {\n  float zr = z.x * z.x - z.y * z.y;\n  float zi = 2.0 * z.x * z.y;\n  return vec2(zr, zi) + uv;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n   vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n  float d = (length(uv) - 0.005) * 0.08;\n  uv = setCamera(uv);\n  vec2 z = uv;\n  vec3 finalColor = palette(0.005 / d + iTime * 0.0002);\n  for(int i = 0; i < 150; i++) {\n    if(length(z) > maxIndex) {\n      finalColor = vec3(0.04);\n      break;\n    }\n    z = Mandelbrot(uv, z);\n  }\n  fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}