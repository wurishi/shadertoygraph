{"ver":"0.1","info":{"id":"lcVGzz","date":"1712346196","viewed":830,"name":"Cloud Diving","username":"leon","description":"alternative background of my shader from Revision24 showdown final","likes":59,"published":3,"flags":0,"usePreview":0,"tags":["short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// alternative background of my shader from Revision24 showdown final\n// original version:\n// https://livecode.demozoo.org/event/2024_03_29_shader_showdown_revision_2024.html\n\nfloat gyroid (vec3 p) { return dot(cos(p),sin(p.yzx)); }\n\nfloat fbm(vec3 p)\n{\n    float result = 0.;\n    float a = .5;\n    for (float i = 0.; i < 7.; ++i)\n    {\n        p += result*.1;\n        p.z += iTime*.1;\n        result += abs(gyroid(p/a)*a);\n        a /= 1.7;\n    }\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 ray = normalize(vec3(uv,.3));\n    \n    vec3 e = vec3(0.1*vec2(iResolution.x/iResolution.y), 0.);\n    \n    #define T(u) fbm(ray+u)\n    vec3 normal = normalize(T(0.)-vec3(T(e.xzz),T(e.zyz),1.));\n    vec3 color = 0.5 + 0.5 * cos(vec3(1,2,3)*5.4 - normal.x+.5);\n    color *= smoothstep(-1.,1.,-normal.z);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}