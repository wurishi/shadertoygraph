{"ver":"0.1","info":{"id":"WsfXRM","date":"1550792333","viewed":168,"name":"5-6-7-8-9-10 pointed star","username":"AdrianPi","description":"Generic star by sort of stenciling half spaces.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","texture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// PUBLIC DOMAIN\n\nconst float PI = 3.141592;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy * 2. - 1.;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0,2,4));\n\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    float acc = 0.;\n    \n    int points = 5 + (iFrame % 360) / 60;\n    float angle = PI*2./float(points);\n    \n    float a = angle;\n    \n    for(int i = 0; i < points; i++)\n    {\n        vec2 cs = vec2(sin(a), cos(a));\n    \tfloat test = dot(cs, uv - cs * 0.25);\n    \tacc += test > 0. ? 0.5 : 0.;\n        a += angle;\n    } \n    \n    //vec3 color = (acc < 1.) ? col : vec3(0.);\n    vec3 color = col * step(acc, 0.9999); // hat-tip: https://www.shadertoy.com/user/FabriceNeyret2 \n    //vec3 color = col * smoothstep(acc, 1.0/iResolution.y, 0.9999); // didn't do it\n    \n    fragColor = vec4(vec3(color), 1.);\n}\n\n","name":"Image","description":"","type":"image"}]}