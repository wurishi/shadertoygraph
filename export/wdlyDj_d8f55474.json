{"ver":"0.1","info":{"id":"wdlyDj","date":"1585634670","viewed":281,"name":"multiscale epidemia simulation 2","username":"FabriceNeyret2","description":"Play with parameters in #Common :\n- epidemia propagates locally at rate #Contag per step.\n- a proportion #Travel of people travel to the distant areas ( and might have a higher #ContagG )\n- Step: delay between time steps, to slow down simulation.","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["simulation","epidemia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/tdXcW2\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T(U);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    if (iFrame==0) { \n        O-=O; \n        if (floor(U) == floor(R/2.) )  O.x = 1.; // initial infection : 1\n      //if ( hash(U) < Init ) O.x = 1.;          // initial infection : random people\n        return; }\n    \n    O = T(U);                                    // recover previous state\n    \n    if ( iFrame % Step > 0 ) return;             // 1 step delay at a time\n    if ( O.x > 0. ) { O.x *= .95; return; }      // already contaminated \n    float n = 0.;                                // local propagation with probability #Contag\n\n    for ( int k=0; k<9; k++ ) \n        if( T(U+vec2(k%3,k/3)-1.).x > 0. ) n++;\n    if ( hash(U+iTime) < n*Contag ) O.x = 1., O.z = .3;  // contaminated\n    \n        // long distance propagation with probability #Contag\n    if ( hash(U-iTime) < Travel ) \n        if( T(R*(hash2(U+iTime))).x > 0. )\n            O.x = 1., O.y = 1.; // contaminated\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float Contag = .1,      // probability of local transmission per step\n           ContagG = .1,      // probability of transmission for long distance travelers\n              Init = .0004,   // initial infection\n            Travel = .0003;   // long distance travelers proportion\nconst int     Step = 7 ;      // time step\n     \n#define R          iResolution.xy\n#define T(U)       texelFetch(iChannel0,ivec2(mod(U,R)),0)\n#define hash(p)  ( 1. - fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453) )\n#define hash2(p) ( 1. - fract(sin((p)*mat2(127.1,311.7, 269.5,183.3)) *43758.5453123) )\n\n","name":"Common","description":"","type":"common"}]}