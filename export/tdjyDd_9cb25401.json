{"ver":"0.1","info":{"id":"tdjyDd","date":"1587568131","viewed":557,"name":"pulsar","username":"nabr","description":"scetch","likes":25,"published":1,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// -----------------------------------------------------\n// pulsar by nabr\n// https://www.shadertoy.com/view/tdjyDd\n// License Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)\n// https://creativecommons.org/licenses/by-nc/4.0/\n// -----------------------------------------------------\n\n\nvec3 cc(vec3,float,float,float);\nfloat pch(vec2);\n#define t iTime\n#define R iResolution.xy\nfloat f(vec3 p)\n{\n    float a = sin(.5*t)*.2+.2;\n    float f=0.,\n          z=p.z+.15*t,\n          v=1.-smoothstep(0.,1.+a,length(p));\n\n    for(float i=10.;i>0.;--i)\n        f+=min(v,.0125/abs(v*mod(1.6*v,.636)+p.y*sin(i/1.57+z)+p.x*cos(i/1.57+z)));\n\n    vec3 g = vec3(.5, 1, 1);\n    vec3 d = smoothstep(0.,f, vec3(.25, 3, .5));\n    d += g * inversesqrt(dot(d, d));\n\n    return(abs(p + normalize(mix(f - 2. * g, d, a)))).z;\n\n    //return(abs(p + normalize(f-vec3(1, 1.8, 2)))).z;\n\n}\nvoid scn(inout vec3 C, vec2 U)\n{\n    vec2 e =  vec2(1e-3, 0);\n    vec3 d = vec3((U - .5 * R)/ min(R.x, R.y), -1.256*exp(-.02*fract(t)));\n    vec3 c = vec3(.2, .6, 1);\n    vec3 p, N, L = normalize(vec3(2.+sin(t),3.+cos(t), 1));\n\n    // disk\n    vec3 dn = vec3(3,2.+sin(.6*t), 6),\n         dc = vec3(0.1,0,1),\n         D = dot(dn, dc) / dot(dn, d) * d - dc;\n\n    // raymarch\n    float h=0.;\n    for(int i=10;i>0;--i)\n        h += f(p = (D * h))*.5;\n\n    // normals\n    N = normalize(f(p) - vec3(f(p - e.xyy), f(p - e.yxy), f(p - e.yyx)));\n\n    // shade\n    c *= max(0., 1. - dot(reflect(L, N), -d)) * fract(.5 * t + .5* h);\n    c *= (.5 + .5 * N.z) *  exp(1. - f(p));\n    C += mix(c, vec3(1, 1, .25), exp(-1.*h));\n}\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    // dither https://www.shadertoy.com/view/3tj3DW\n    vec3 dthr = 2.*fract(sin(U.x*vec3(13,1,11)+U.y*vec3(1,7,5))*158.391832)/255.;\n    vec2 u = (U-.5*R)/min(R.x,R.y);\n    vec3 col = vec3(0),msg = vec3(.05,.45,.1)*pch((16.*vec2(u.x-.45,u.y+.45)));\n\n    // multipass/render only the eye\n    if(1.-dot(8.*u,vec2(u.x+.27,1.3*u.y))>.001)\n    {\n        scn(col, U + vec2(.25, .25));\n        scn(col, U + vec2(.25, -.25));\n        scn(col, U + vec2(-.25, -.25));\n        scn(col, U + vec2(-.25, .25));\n        O= vec4(cc((col * .25), 1., 0., .55), 1.);\n    }\n    else{\n        col = vec3(0);\n        scn(col, U);\n        O= vec4((1.65 * (dthr + col)) + msg, 1.);\n    }\n}\n// char by FabriceNeyret2\n#define char(_p,_C)(((_p.x<0.||_p.x>1.||_p.y<0.||_p.y>1.))?vec4(0,0,0,1e5):textureGrad(iChannel3,_p/16.+fract(vec2(_C,15-_C/16)/16.),dFdx(_p/16.),dFdy(_p/16.))).x\nfloat pch(vec2 u){\n    float p;\n    q(int(.5*t), d, r);\n    for(int i=12;i>=0;--i){\n        p+=char(vec2(u.x, u.y),(48+r[i]));\n        p+=char(vec2(u.x, u.y-.65),(48+d[i]));\n        u.x+=.5;};return p;\n}\n// https://mouaif.wordpress.com/2009/01/28/levels-control-shader/\n// input color,gamma,back,white\nvec3 cc(vec3 c, float g,float s, float w){\n    vec3 a = max(c - vec3(s), vec3(0)),\n         b = vec3(w) - vec3(s),\n         f = min(a / b, vec3(1));\n    return pow(f, vec3(1. / g));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// -----------------------------------------------------\n// pulsar by nabr\n// https://www.shadertoy.com/view/tdjyDd\n// License Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)\n// https://creativecommons.org/licenses/by-nc/4.0/\n// -----------------------------------------------------\n\n\n// synth\nfloat syn(float hz, float t, int ch)\n{   \n    float s,w,a,b;\n    s = sin(6.283185 * t * hz);\n    w = clamp(sin(s *  4. ), -.5, .5);\n    \n    if(!bool(ch))\n    {\n       a = (1.+sin(w))/(.5*cos(w));\n       b = cos(w)/(1.+sin(w));    \n    } \n    else\n    {\n       a = (.2+sin(w))/cos(w);\n       b = cos(w)/(1.+sin(w)); \n    }\n    \n    /*\n    a = (.2+sin(w))/cos(w);\n    b = cos(w)/(1.+sin(w));\n    return b * s - a * s;\n    */\n    \n    return b * s - a * s;\n}\n// sound group\nvoid sgr(in float t, out vec2 v, out vec2 vr)\n{\n    int it = int(t);\n    q(it, d, r);\n    float tr = (28. + t);\n    float ft = fract(t);\n    \n    // spring delay\n    int dyt = 6;\n    if(t>50.) dyt = 4;\n    float dy[]=float[](.0225,.0442,.0566,.0667,.0889,.113);\n    // attack/decay\n    float a=pow(min(sqrt(sqrt(1.-ft)), 10.*ft),2.);\n    \n    int sz = 13;\n    int px = int[](80, 100 )[it/2%2],\n        py = int[](60, 80)[it/2%2];\n    \n    //-------- outro\n    if(t>32.)\n    {\n        px=int[](80, 100, 120, 100, 160 )[it%4];\n        py=int[](60, 80, 50, 80)[it/2%4];\n    }\n    \n    for(int i=(sz*2);i>0;--i)\n    {\n        // -------- dry\n        int nd = abs(i-min(sz,(int(10.*ft)+i))) % sz;\n        v.x += syn(float(px * d[nd]), ft, 0);\n        v.y += syn(float(py * d[nd]), ft, 0);\n        // -------- rev\n        tr-=dy[(i+int(tr))%dyt];\n        tr = fract(-tr);\n        int nr = abs(i-min(sz,(i-int(10.*tr)))) % sz;\n        vr.x+=a*syn(float(py * r[nr]),tr, 1);\n        vr.y+=a*syn(float(px * r[nr]),tr, 1);\n    }\n}\n// drums\nfloat rnd(float _t){return fract(_t*fract(_t+_t));}\nvec2 drm(float t)\n{\n    t = mod(t, 12.);//float prec. error\n    // kick\n    float tt = t * 6.;\n    float ft = fract(tt);\n    float dr;\n    dr = .316 * sin(471. * ft * exp(-ft * 8.));\n    dr += .707 * sin(311. *  ft * exp(-ft * 2.));\n    dr *= float(int[](1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0)[int(tt) % 12]);\n    dr *= atan(1. - ft, 5. * ft);\n  \n    //snare\n    float s;\n    s = rnd((t*5623.12354));\n    s += .5 * sin(6.283185 * t * .5 * 680.) + sin(6.283185 * t * 600.) * exp(-10.*ft);\n    s *= float(int[](0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0)[int(tt) % 12]);\n    s *= atan(1. - ft, 40. * ft);\n    \n    // -------- out\n    return vec2(.63) * dr + .316 * vec2(s, .707 * s);\n}\n//main\nvec2 mainSound( in int samp,in float time)\n{\n    vec2 v, vr, zr, dr;\n    \n    float t = .5 * time;\n    sgr(t, v, vr);\n    \n    if(t>32.){\n        sgr((3.+t), zr, vr);\n        if(t>48.&&t<50.)v*=vr=vec2(0);\n        if(t>50.)vr*=vec2(.68);\n    }\n    if(t>42.)dr=.7*drm(t);\n\n    // -------- out\n    vec2 s = .038 * (.398 * v + .707 * vr);\n    return dr + (.69 * s\n                 + .398 * (s.x+s.y)); //better for mono devices.\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"// -----------------------------------------------------\n// pulsar by nabr\n// https://www.shadertoy.com/view/tdjyDd\n// License Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)\n// https://creativecommons.org/licenses/by-nc/4.0/\n// -----------------------------------------------------\n\n\n// sequenz\nint d[13], r[13];\nvoid q(int t,out int d[13],out int r[13])\n{\n//d=int[](0,0,0,0,0,0,0,0,0,0,0,0,0);r=int[](0,0,0,0,0,0,0,0,0,0,0,0,0);\n#define F else if\nif(2>t)d[4]=1;\nF(5>t)d[0]=d[4]=1;\nF(7>t)d[0]=d[4]=d[10]=1;\nF(9>t)d[0]=d[4]=d[6]=d[10]=1,r[3]=1;\nF(11>t)d[0]=d[4]=d[6]=1,d[10]=2,r[2]=1;\nF(13>t)d[0]=d[4]=d[6]=1,d[10]=2,r[2]=r[8]=r[10]=1;\nF(15>t)d[0]=d[4]=d[6]=1,d[8]=3,d[10]=2,r[2]=r[6]=r[8]=r[10]=1;\nF(17>t)d[0]=d[4]=d[6]=1,d[8]=3,d[10]=2,r[2]=r[6]=r[10]=r[12]=1,r[8]=3;\nF(21>t)d[0]=d[4]=d[6]=1,d[8]=3,d[10]=2,r[2]=r[6]=r[10]=1,r[12]=6,r[8]=3;\nF(24>t)d[0]=d[4]=1,d[6]=9,d[8]=3,d[10]=2,r[2]=r[10]=1,r[6]=3,r[8]=3,r[12]=6;\nF(50>t){d=int[](1,0,0,0,1,0,9,0,3,0,2,0,0);r=int[](0,0,1,0,0,0,9,0,3,0,1,0,6);}\nelse{//pseudo random\nfor(int e=12;e>=0;--e)if(e%2==0)\nr[e]=int[](0,1,2,6,9)[((1315313u%(uint(abs(t/2-e))+1u))%11u)%5u];}\n}","name":"Common","description":"","type":"common"}]}