{"ver":"0.1","info":{"id":"l3lBDl","date":"1729093014","viewed":17,"name":"Damaged VC seeda 555","username":"seeda","description":"Simulating a damaged VCR playing a video","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    float edge = fract(iTime * 1.5);\n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    \n    float width = 0.07;\n    float scale = step(edge - width, uv.y) * step(uv.y, edge + width);\n    \n    float warp = sin(fragCoord.y * 10.0);\n    \n    float extra = mix(0.0, 0.1, warp);\n    \n    vec2 warpedUv = mix(uv, uv - vec2(tan(uv.y - edge + width) + extra, 0.0), scale);\n    \n    vec2 offset1 = vec2(-0.01, -0.01);\n    vec2 offset2 = vec2(0.0, 0.01);\n    vec2 offset3 = vec2(0.01, -0.01);\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                          \n    vec3 col = vec3(r, g, b);\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}