{"ver":"0.1","info":{"id":"wdlSDH","date":"1551216276","viewed":384,"name":"Simple rainbow","username":"Chosen","description":"Disclaimer: Not a scientifically accurate representation of a real rainbow.","likes":7,"published":1,"flags":8,"usePreview":0,"tags":["rainbow","colours"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SS(d) smoothstep(edge, 0., d)\n#define BAND(i, bcol) col = mix(col, bcol, SS(r + i * band) * SS(-(r + (i + 1.) * band)) * SS(theta - (cycle - .15 -.02 * i)));\n\nvoid mainImage(out vec4 fragColour, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - vec2(.5, 0) * iResolution.xy) / min(iResolution.x, iResolution.y);\n    float edge = 1.5 / min(iResolution.x, iResolution.y);\n    float theta = atan(uv.x, uv.y) / 6.283185;\n    float cycle = fract(iTime * .2);\n    float band = .06 * cycle;\n    float r = length(uv) - 2. * cycle;\n    vec3 col = vec3(.2, .3, .6);\n\n    // ROYGBIV\n    BAND(0., vec3(1, 0, 0)); \n    BAND(1., vec3(1, .5, 0));\n    BAND(2., vec3(1, 1, 0));\n    BAND(3., vec3(0, 1, 0));\n    BAND(4., vec3(0, 0, 1));\n    BAND(5., vec3(.293, 0, .5));\n    BAND(6., vec3(.578, 0, .824));\n    fragColour = vec4(sqrt(col * cycle), 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define TONE(hz) wave += sin(6.283185 * hz * time); ++tones;\n\nvec2 mainSound( in int samp,float time)\n{\n    float wave = 0.;\n    int tones = 0;\n\n\tTONE(432.);\n    TONE(288.);\n    TONE(360.);\n    return vec2(wave * exp(-2. * (abs(time - .5))) * .2 / float(tones));\n}","name":"Sound","description":"","type":"sound"}]}