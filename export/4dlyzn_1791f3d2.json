{"ver":"0.1","info":{"id":"4dlyzn","date":"1486725860","viewed":150,"name":"Function examples","username":"pixartist","description":"Function examples","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["functionexamples"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//--- font data ---\n#define FONT_SIZE 0.04\n#define FONT_SPACE 0.45\n#define S(a) c+=char(float(a), tp); tp.x-=FONT_SPACE;\n\n#define _note  S(10);\n#define _star  S(28);\n#define _smily S(29);\n#define _    S(32);\n#define _exc S(33);\n#define _po S(40);\n#define _pc S(41);\n#define _mul S(42);\n#define _add S(43);\n#define _sub S(45);\n#define _dot S(46);\n#define _div S(47);\n\n#define _A S(65);\n#define _B S(66);\n#define _C S(67);\n#define _D S(68);\n#define _E S(69);\n#define _F S(70);\n#define _G S(71);\n#define _H S(72);\n#define _I S(73);\n#define _J S(74);\n#define _K S(75);\n#define _L S(76);\n#define _M S(77);\n#define _N S(78);\n#define _O S(79);\n#define _P S(80);\n#define _Q S(81);\n#define _R S(82);\n#define _S S(83);\n#define _T S(84);\n#define _U S(85);\n#define _V S(86);\n#define _W S(87);\n#define _X S(88);\n#define _Y S(89);\n#define _Z S(90);\n\n#define _a S(97);\n#define _b S(98);\n#define _c S(99);\n#define _d S(100);\n#define _e S(101);\n#define _f S(102);\n#define _g S(103);\n#define _h S(104);\n#define _i S(105);\n#define _j S(106);\n#define _k S(107);\n#define _l S(108);\n#define _m S(109);\n#define _n S(110);\n#define _o S(111);\n#define _p S(112);\n#define _q S(113);\n#define _r S(114);\n#define _s S(115);\n#define _t S(116);\n#define _u S(117);\n#define _v S(118);\n#define _w S(119);\n#define _x S(120);\n#define _y S(121);\n#define _z S(122);\n\n#define _0 S(48);\n#define _1 S(49);\n#define _2 S(50);\n#define _3 S(51);\n#define _4 S(52);\n#define _5 S(53);\n#define _6 S(54);\n#define _7 S(55);\n#define _8 S(56);\n#define _9 S(57);\n\n\n\n#define STR(xx, yy, code) { float c = 0.0; vec2 tp  = uv / FONT_SIZE; tp.x *= iResolution.x / iResolution.y; tp += vec2(-xx,-yy); code; fragColor.rgb = mix(fragColor.rgb, vec3(0.7, 0.5, 0.0), c); }\n\n// return character intensity of ch at position tp\nfloat char(float ch, vec2 tp)\n{\n  vec4 f = texture(iChannel0,clamp(tp,0.,1.)/16.+fract(floor(vec2(ch,15.999-float(ch)/16.))/16.) - vec2(0.002));\n  if (iMouse.z > 0.0) \n    return f.x;   // 2d \n  else\n    return f.x * (f.y+0.3)*(f.z+0.3)*2.0;   // 3d\n}\n\n\nfloat set(int k, float x)\n{\n\n    if(k == 0)\n        return x;\n    if(k == 1)\n        return smoothstep(0.0, 1.0, x);\n    if(k == 2)\n        return 1.0 / (1.0+x);\n    if(k == 3)\n        return sqrt(x);\n  \tif(k == 4)\n        return pow(x,2.0);\n    if(k == 5)\n        return exp(-x * 2.0);\n    return 0.0;\n    \t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float count = 6.0;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    float k = uv.y * count;\n\tfloat v = set(int(k), uv.x * 2.0);\n    \n\tfragColor = vec4(min(1.0, v));\n    fragColor.b = 1.0;\n    fragColor *=  smoothstep(0.0,15.0 / iResolution.x, abs(v - fract(k)));\n    \n    fragColor *=  smoothstep(0.0,1.0 / iResolution.x,abs(uv.x -0.5));\n    \n    fragColor *=  smoothstep(0.0,15.0 / iResolution.x,fract(k));\n    \n    STR(42.5,0,_x);\n    \n    STR(38.7,4.2,_s _m _o _o _t _h _s _t _e _p);\n    \n    STR(40.0,8.4, _1 _div _po _1 _add _x _pc);\n    \n    STR(41.2,12.6, _s _q _r _t);\n    \n    STR(41.6,16.8, _p _o _w);\n    \n    STR(39.3,21.0, _e _x _p _po _sub _x _mul _2 _pc);\n    \n    STR(22.0, 0.0, _1 _dot _0);\n    //fragColor = texture(iChannel0, uv);\n\n}","name":"Image","description":"","type":"image"}]}