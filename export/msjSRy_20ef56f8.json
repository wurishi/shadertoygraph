{"ver":"0.1","info":{"id":"msjSRy","date":"1670652836","viewed":119,"name":"ychen_grid_maze","username":"ychen","description":"https://youtu.be/2R7h76GoIJM\nmaze-like:\nHash21(): random function from 0-1, or gray.\nif(n<.5) gv.x*= -1.;//reverse direction\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash21(vec2 p){\n    p = fract(p*vec2(234.34,435.345));\n    p += dot(p, p+34.23);\n    return fract(p.x*p.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;//change starting point to center\n    uv += iTime*.2;//move with time\n    uv *= 10.;\n    vec3 col = vec3(0);\n    vec2 gv = fract(uv)-.5;//grid uv; fract(x)= x - floor(x);-.5 move to center\n    vec2 id = floor(uv);\n    //col.rg = gv;\n    \n    float n = Hash21(id);//random number between 0 and 1\n    \n    //float mask = smoothstep(-.001, .001, gv.x +gv.y);//diagonal gradient smoothstep(min,max,x)平滑过渡？锋利、模糊边界\n    //float mask = abs(gv.x +gv.y);\n    float width = .1;\n    if(n<.5) gv.x*= -1.;//reverse direction\n    float mask = smoothstep(.01, -.01, abs(gv.x +gv.y)-width);//-width,thickness\n    \n   col.gb += mask+iTime*.001;\n   \n   \n   // if(gv.x>.48||gv.y>.48) col = vec3(1,0,0);//draw grid\n    fragColor = vec4(col,1.0);\n   \n}","name":"Image","description":"","type":"image"}]}