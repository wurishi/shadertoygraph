{"ver":"0.1","info":{"id":"csBcR1","date":"1687410166","viewed":36,"name":"Halftone Pulse","username":"thedarkbunny","description":"Sine, cosine, and light.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28318530718\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    \n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy/2.)/max(iResolution.x,iResolution.y);\n    vec2 uvr = vec2(uv.x*0.8660254+uv.y*0.5,uv.y*0.8660254-uv.x*0.5);\n    float wave = sin(uvr.x*200.)*sin(uvr.y*200.)+1.75*sin(iTime*2.-length(uv)*3.);\n    float ww = clamp((wave+1.)/2.,0.,1.);\n\n    // Output to screen\n    float af = fract(atan(uv.x,uv.y)/TWO_PI-iTime/5.+length(uv));\n    \n    vec3 col = hsb2rgb(vec3(af,1.,ww*2.));\n    if(ww > 0.5){\n        col = hsb2rgb(vec3(af,(1.-ww)*2.,1.));\n    }\n    \n    \n    \n    \n    //fragColor = vec4(ww*ww,ww,sqrt(ww),1.0);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}