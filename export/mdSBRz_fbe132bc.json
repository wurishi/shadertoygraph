{"ver":"0.1","info":{"id":"mdSBRz","date":"1689339153","viewed":186,"name":"Screen curvature (only 14 lines)","username":"noClueBruh","description":"super easy shader that curves the screen like an old tv:)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fast","tv","curves","crt","old","lol","efficient","vhs","small"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//pretty simple isn't it?\n//you are free to and add more stuff like vignette, static etc\n//some credit would be much appreciated:) \nfloat curvature = 0.5;\nfloat powa = 2.5;\n\nvec2 curve(vec2 inp)\n{\n    inp.y += (inp.y - .5) * curvature * pow(abs(inp.x - .5), powa);\n    inp.x += (inp.x - .5) * curvature * pow(abs(inp.y - .5), powa);\n    return inp;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = curve(fragCoord/iResolution.xy);\n    fragColor = (abs(uv.x -.5) < .5 ? 1. : 0.) * (abs(uv.y -.5) < .5 ? 1. : 0.) * texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}