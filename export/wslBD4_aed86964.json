{"ver":"0.1","info":{"id":"wslBD4","date":"1588409997","viewed":112,"name":"Dynamic Decentralized Voronoi","username":"troelsbjerre","description":"Click anywhere to add points to the Voronoi diagram\nClick and drag to move a point. Dragging over any point also removes it.\n","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["voronoi","mouse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 ipos = ivec2(fragCoord.xy);\n    vec4 col = vec4(1);\n    vec4 cur = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    vec4 par = texelFetch(iChannel0, ivec2(cur.xy), 0);\n\tif (iMouse != vec4(0) && (par.w < 2. || distance(fragCoord, cur.xy) > distance(fragCoord, iMouse.xy + vec2(.5)))) {\n\t\tcur = vec4(iMouse.xy + vec2(.5), 0, 1);\n        if (iMouse.z < 0.) {\n\t\t\tpar = vec4(iMouse.xy + vec2(.5), 0, 2);\n        } else {\n\t\t\tpar = vec4(iMouse.xy + vec2(.5), 0, 3);\n        }            \n    }\n\tif (par.w >= 2.) {\n        float h = 5.08320369232 * cur.x + 1.61803398875 * cur.y;\n        if (par.w == 2.) {\n            col = vec4(clamp(0., 1., cos(h)), clamp(0., 1., cos(h+2.09439510239)), clamp(0., 1., cos(h+2.09439510239*2.)),1);\n        } else {\n            col = vec4(0,0,0,1);\n        }\n        float d = distance(fragCoord.xy, cur.xy)/2.;\n        col = mix(vec4(1), col, abs(cos(d)));\n        d = 1.;\n\t\tfor (int dx = -1 ; dx <= 1 ; ++dx) {\n        \tfor (int dy = -1 ; dy <= 1 ; ++dy) {\n                vec4 nei = texelFetch(iChannel0, ipos + ivec2(dx, dy), 0);\n               \tvec4 nar = texelFetch(iChannel0, ivec2(nei.xy), 0);\n                if (nar.w >= 2. && cur.xy != nei.xy) {\n                    float len = distance(length(nei.xy - cur.xy)/2., dot(fragCoord - cur.xy, nei.xy - cur.xy) / length(nei.xy - cur.xy));\n                    d = min(d, len);\n                }\n            }\n        }\n        col = mix(vec4(0,0,0,1), col, d);\n    }\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void relax(in vec2 fragCoord, inout vec4 cur, inout vec4 par, in ivec2 npos) {\n\tivec2 ipos = ivec2(fragCoord.xy);\n\tvec4 nei = texelFetch(iChannel0, npos, 0);\n\tvec4 nar = texelFetch(iChannel0, ivec2(nei.xy), 0);\n\tif (nar.w >= 2.) {\n\t\tif (par.w != 2. || distance(fragCoord, cur.xy) > distance(fragCoord, nei.xy)) {\n\t\t\tcur = vec4(nei.xy, 0, 1);\n\t\t\tpar = nar;\n\t\t}\n\t}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n\tivec2 ipos = ivec2(fragCoord.xy);\n\tvec4 cur = texelFetch(iChannel0, ipos, 0);\n\tvec4 par = texelFetch(iChannel0, ivec2(cur.xy), 0);\n    if (iMouse.z < 0.0) {\n        if (fragCoord.xy - vec2(.5) == iMouse.xy) par = cur = vec4(fragCoord, 0, 2);\n    } else {\n        if (distance(fragCoord.xy - vec2(.5), iMouse.xy) < 5.) par = cur = vec4(fragCoord, 0, 1);\n    }\n\tif (cur.w <= 1.) {\n    \tfor (int d = 1 ; d <= 128 ; d *= 2) {\n        \trelax(fragCoord, cur, par, ipos + ivec2(0, d));\n        \trelax(fragCoord, cur, par, ipos + ivec2(0, -d));\n    \t    relax(fragCoord, cur, par, ipos + ivec2(d, 0));\n\t        relax(fragCoord, cur, par, ipos + ivec2(-d, 0));\n        }\n\t}\n    relax(fragCoord, cur, par, ivec2(iMouse.xy));\n\tfragColor = cur;\n}","name":"Buffer A","description":"","type":"buffer"}]}