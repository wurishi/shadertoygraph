{"ver":"0.1","info":{"id":"ctdczB","date":"1699371775","viewed":43,"name":"worley noise2","username":"tomcat7479","description":"worley noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["worleynoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash2d2(vec2 uv) {\n    uv = vec2( dot(uv, vec2(127.1,311.7)),dot(uv,vec2(269.5,183.3)) );\n    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);\n}\n\n// from https://www.shadertoy.com/view/4l2GzW\nvec2 hash(vec2 P) {\n \treturn fract(cos(P * mat2(-64.2,71.3,81.4,-29.8)) * 8321.3); \n}\n\n\nfloat worley2d(vec2 uv, bool revert) {\n    float dist = 16.0;\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    const int range = 2;\n    for (int x = -range; x <= range; x++) {\n        for (int y = -range; y <= range; y++) {\n            vec2 curPos = hash(i + vec2(float(x), float(y))) + vec2(float(x), float(y));\n            float d = distance(curPos, f);\n            dist = min(dist, d);\n        }\n    }\n    if (revert) {\n        return 1.0 - 2.0 * dist;\n    } \n    return dist;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float c = worley2d(fragCoord / 64.0 + iTime, false);\n    fragColor = vec4(vec3(c), 1.0);\n}","name":"Image","description":"","type":"image"}]}