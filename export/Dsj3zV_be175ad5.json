{"ver":"0.1","info":{"id":"Dsj3zV","date":"1667907437","viewed":61,"name":"Cone Fractal dance","username":"seven_dc","description":"fractal\nfrom\nhttps://twitter.com/natchinoyuchi/status/1589262087913865217\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// original https://twitter.com/natchinoyuchi/status/1589262087913865217\n\nmat2 Rotate(float a) {\n  float s = sin(a);\n  float c = cos(a);\n  return mat2(c, -s, s, c);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec3 color;\n    float zoom, dark;\n    int effect = int(round(5. + sin(iTime/2.)*3.));\n\n    for(float i,e,g; i++<1e2; color+=(fwidth(g)*.3+5e-3)*exp(-1e5*e*e)){\n    \n        vec3 point = vec3((fragCoord.xy-iResolution.xy*.7)/iResolution.y*g+3.,g-17.)-i/1e3;\n        zoom = 4.;\n        dark = 3.;\n        point.xy *= Rotate(iTime*.5);\n        point.xz *= Rotate(iTime*.6);\n        point += zoom;\n        \n        for(int j; j++<effect; point*=e) \n            point = abs(point-zoom)-zoom,\n            zoom = zoom*(-sin(iTime*3.6)*.6+.71),\n            dark *= e = zoom*zoom*2./dot(point,point);\n            \n        g += e = min(.4,(point.y+length(point.xz))/dark);\n        color.b += dark/20000.;\n        color.r += (1. - dark/10.)/512.;\n        color.g += point.y/2020.;\n    }\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}