{"ver":"0.1","info":{"id":"4dlyRX","date":"1489138577","viewed":318,"name":"Flat night","username":"greenstonedt","description":"I saw the original image in Indie game page, it's very simple for a newbie like me to practice coding.\n\nOriginal image & the Inkscape tutorial: https://www.youtube.com/watch?v=bMjlLCiwJIc","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2dflatlandscape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//TODO: add height distain into mountain alpha \n\n#define DARKCOLOR vec4(0.07, 0.11, 0.19 ,1.0)\n#define LIGHTCOLOR vec4(0.8, 0.2, 0.39, 1.0)\n#define FLARECOLOR vec4(0.14, 0.21, 0.37, 1.0)\n#define SUNCOLOR vec4(0.99, 0.75, 0.64, 1.0)\n\nvec4 mountain(vec4 color, vec2 uv)\n{\n    vec4 returnedColor = color;\n    float depth = 0.2;\n    for (float i = 0.0; i <= depth; i+=0.1)\n    {\n        vec4 heightMap  = texture(iChannel0, vec2(uv.x * 0.02, 0.5 + i));\n        float heighValue = heightMap.r - i * 0.3 + depth - 0.15;\n   \t\tfloat mountain = 1.0 - smoothstep(heighValue, heighValue + 0.0001, uv.y); \n        \n        vec2 flarePos  = vec2(0.9, 0.55);\n        float flareDis = smoothstep (0.0, 0.4, distance(flarePos, uv));\n        \n        vec4 mountainColor = mix (LIGHTCOLOR, DARKCOLOR, i / depth);\n        float mountainApha = i/depth * 0.75 + 0.25;\n        \n        returnedColor = returnedColor * (1.0 - mountain) \n            + color * mountain * (1.0 - mountainApha) \n            + mountainColor * mountain * mountainApha\n        \t+ FLARECOLOR * clamp(1.0 - flareDis, 0.0, 1.0) * mountain * i/depth\n            ;\n    }\n    return returnedColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    float ratio = iResolution.x/iResolution.y;\n    \n    //SUN\n    vec2 sunPos  = vec2(0.9, 0.25);\n    vec2 eclipsePos = uv - sunPos;\n    eclipsePos.y *= 5.0; \n    float sunDis = smoothstep (0.0, 1.2, distance(eclipsePos, vec2(0.0, 0.0)));\n    \n    //MOON\n    vec2 moonPos = vec2 (0.9, 0.6);\n    float moonDis = smoothstep (0.3, 0.3, distance(moonPos, uv));\n    float moonAlpha = (1.0 - moonDis) * clamp(uv.y - 0.5, 0.0, 1.0);\n    \n    float moonDetail = smoothstep (0.5, 0.5001, texture(iChannel2, uv * 1.5 + vec2(0.01 * iTime, 0.005 * iTime)).r);\n    \n    //STAR\n    float starMap = smoothstep (0.92 - 0.05 * (sin(iTime) + 1.0) /2.0, 0.920001, texture(iChannel1, uv * 1.5).r);\n    float starAlpha = starMap * clamp(uv.y, 0.0, 1.0) * moonDis;\n    \n    \n    vec4 horizon = mix( LIGHTCOLOR, DARKCOLOR, clamp (uv.y * 1.5 - 0.5, 0.0, 1.0) );\n    horizon = horizon * sunDis + SUNCOLOR * (1.0 - sunDis);\n    horizon = horizon * (1.0 - moonAlpha) + moonAlpha + moonDetail * moonAlpha * 0.2;\n    horizon = horizon * (1.0 - starAlpha) + starMap * starAlpha;\n    \n    //fragColor = horizon;\n    fragColor = mountain(horizon, uv);\n}","name":"Image","description":"","type":"image"}]}