{"ver":"0.1","info":{"id":"mljGRw","date":"1673048841","viewed":133,"name":"particles test with mouse light","username":"tomviolin","description":"pressing mouse button turns on light that attracts the particles.","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["particles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 p = texture(iChannel0,uv);\n    // texture values:\n    //  p.x = x position\n    //  p.y = y position\n    //  p.z = x velocity\n    //  p.w = y velocity\n    if (iFrame < 3) {\n        p.x = 0.5;//0.1+fract(sin(uv.y*345.45435))*0.8;\n        p.y = 0.5+fract(sin(uv.y*3453.45435))*0.1;\n        float a = 6.28*uv.x;\n        p.z = sin(a*546.)-fract(sin(uv.y*6453.45435))+0.5;\n        p.w = cos(a*546.)-fract(sin(uv.y*2453.45435))*0.3+0.15;\n        p.zw *= 0.05;\n        \n    } else {\n        p.w -= 0.02;\n        vec2 mousevec=(p.xy*iResolution.xy-iMouse.xy);\n        if (iMouse.z > 0.0) {\n            float dist = length(mousevec);\n            float sdist = (dist+15.0);\n            \n            if (length(mousevec) > 0. &&\n                length(mousevec) < 600.)\n                p.zw -= mousevec / sdist/sdist*.30;\n            if (length(mousevec)>13. &&\n                     length(mousevec)<77.)\n                p.zw *= vec2(0.95,0.95);\n                0;\n        }\n        p.xy += p.zw*0.03;\n        if (p.x < 0.0) {\n            p.x = -p.x;\n            p.z = abs(p.z);\n        }\n        if (p.x >= 1.0) {\n            p.x = 2.0-p.x;\n            p.z = -abs(p.z);\n        }\n        if (p.y < 0.0) {\n            p.y = -p.y;\n            p.w = abs(p.w)+(-0.5+fract(cos((iTime+p.x)*56426.)*632.))*0.3;\n            p.z += (-0.5+fract(cos((iTime+p.x)*96426.)*432.))*0.1;\n            p.zw *= 0.96;\n        }\n        if (p.y >= 1.0) {\n            p.y = 2.0-p.y;\n            p.w = -abs(p.w);\n        }\n    }\n    //p.zw += vec2(fract(uv.x*87887.5545)-0.5,\n    //             fract(uv.x*55657.3343)-0.5)\n    //             *0.01;\n    p.zw=clamp(p.zw,-2.,2.);\n    fragColor = p;\n\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n\nvec3 hot(float t)\n{\n    return vec3(smoothstep(0.00,0.33,t),\n                smoothstep(0.33,0.66,t),\n                smoothstep(0.66,1.00,t));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 p = texture(iChannel0, uv);\n    fragColor = vec4(0);\n    for (int i = 0; i < int(iResolution.y/4.); ++i) {\n        vec2 pdataloc = vec2(float(i)/iResolution.y,float(i)/iResolution.y);\n        vec2 ploc = texture(iChannel0,pdataloc).xy;\n        vec2 dvec = -ploc*iResolution.xy + uv*iResolution.xy;\n        vec2 mvec = -ploc*iResolution.xy + iMouse.xy;\n        float d = length(dvec);\n        if (d<7.5) {\n            // find normal to surface\n            float nz = sqrt(7.5*7.5 - d*d);\n            float nx = dvec.x;\n            float ny = dvec.y;\n            vec3 normsph = normalize(vec3(nx,ny,nz));\n            vec3 lightsrc = vec3(-3.0,3.0 ,1.0);\n            vec3 cameraloc = vec3(0.,0.,1.);\n            vec3 cameranorm = normalize(cameraloc);\n            vec3 normlight = normalize(lightsrc);\n            float illum = 0.3*dot(normlight,normsph);\n            \n            vec3 mousesrc = vec3(mvec,1.0);\n            float mouselight = 1.0/(1.0+length(mousesrc)/50.);\n            vec3 normmouse = normalize(mousesrc);\n            float mouseillum = 0.9 * mouselight * dot(normmouse,normsph);\n            if (iMouse.z <= 0.)\n                mouseillum = 0.0;\n            float light = (illum+mouseillum) * dot(cameranorm,normsph);\n            \n            \n            float ambientlight = 0.15;\n            light = light + ambientlight;\n            float fi = float(i)/iResolution.y;\n            fragColor = vec4(hsb2rgb(vec3(fi+.1666,1.,1.))\n               *mat3(2.,0,0 ,0,0.6,0.5, 0,0,2.),\n                1.)*light;\n        }\n    }\n    if (iMouse.z > 0.0) {\n        float md = length(uv*iResolution.xy - iMouse.xy);\n        if (md < 10.0){\n            fragColor = vec4(1.,1.,0.5,1.0);\n        }\n    }\n}","name":"Buffer B","description":"","type":"buffer"}]}