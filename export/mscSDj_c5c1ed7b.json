{"ver":"0.1","info":{"id":"mscSDj","date":"1686645759","viewed":32,"name":"Bump Fade","username":"tsengkweiming","description":"Bump Fade","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["bumpfade"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI  3.14159265359\n\nmat2 RotationMatrix(float angle)\n{\n    angle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\n\nfloat BumpFade(vec2 uv){\n    float c = 1.0;\n    float a = 1.0 - uv.x * uv.x;\n    float t = pow(uv.y, a);\n    c = mix(1.0, 0.0, t);\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float maskWidth = 1.;\n    float maskHeight = 1.;\n    float maskOffsetY = 0.;\n    float angle = -0.;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 p = fragCoord/iResolution.xy;\n\n    p *= 2.0;\n    p -= 1.0;\n    //p = RotationMatrix(angle) * (p);// - vec2(0,0.5));\n    //p.y += 1.;\n    //p.y /= 2.;\n    //p.y += maskOffsetY;\n    //p.y /= maskHeight;\n    //p.x /= maskWidth;\n    \n    float y = BumpFade(p);\n    \n    float grayScale = y;\n    \n    vec4 color = vec4(grayScale, grayScale, grayScale, 1.0);\n    //vec4 color = vec4(p.x, p.y, 0.0, 1.0);\n\n\n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}