{"ver":"0.1","info":{"id":"MtsSzf","date":"1438695422","viewed":164,"name":"Plasma Tunnel","username":"MarkSkyzoid","description":"ray marching a tunnel","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarchintunnelplasma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"float g_time = iTime * 2.0;\nconst float g_s = 0.4; // ray march treshold\n\n\nfloat map(vec3 p)\n{\n    float d = 1.0;\n    \n\n    d *= distance(p, vec3( cos(g_time), cos(g_time * 0.2) - sin(g_time * 0.3), 1.)) * 2.2;\n    \n    d *= distance(p, vec3(-cos(g_time * 0.3), 0.3, 2.0 + sin(g_time * 0.5) * 0.5)) * 2.4;\n        \n   \td *= distance(p, vec3( -sin(g_time * 0.2) * 0.5, sin(g_time), 2.0 )) * 0.5;\n    \n\td *= cos(0.0001 * g_time * sin(2. * p.x * p.z )) * cos(p.y + .02 * cos( 5. * p.z + cos(g_time * 2.)) + .1 * sin(8. * p.x  + sin(g_time * 2.))) * 5. * (1.5 + 0.5 * cos(g_time));\n    \n    d *= cos(p.x + .02 * cos(10. * p.y) + 0.3 * sin(5. * p.z * cos(g_time * 0.00006))) * 0.1;\n       \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy/iResolution.xy;\n\tvec2 v = -1.0+2.0*q;\n\tv.x *= iResolution.x/iResolution.y*.5+.5;\n    \n    \n    vec2 mouse = iMouse.xy / iResolution.xy;\n    \n\tvec3 ro = vec3(v.x,v.y,0.0);\n    vec3 rd = normalize(vec3(1.1 * mouse.x + v.x + cos(g_time) * 0.3, 1.1 * mouse.y + v.y, 1));\n    vec3 color = vec3(0.0);\n    \n    \n    float t = 0.0;\n    for(int i = 0; i < 1000; ++i)\n    {\n        vec3 p = ro + rd * t;\n        if(map(p) < g_s)\n        {\n            float old_t = t;\n            t = g_time + t;\n            color.x = 1.0;\n            float mask = texture(iChannel0, vec2(p.x * p.y, g_time * 0.2 + old_t * rd.z) * 5. ).r;\n            \n           // t = smoothstep(-1.0, 1.0, cos(t));\n            color = vec3(t, 0.5 + 0.5 * cos(t), 1.0 - max(cos(t), 0.0));\n\t\t\tcolor *= max(0., dot(rd, normalize(max(vec3(0.), p))));\n            color -= vec3(1.0 - mask, mask, mask) * 0.1;\n            //color *= 0.0002 * vec3((0.5 + 0.5 * cos(t)), 1.0 - t, (t * t));\n            //color = min(vec3(1.0), color);\n            t= old_t;\n            break;\n        }\n        \n        t += 1.0 / 100.0;\n    }\n    \n\tfragColor = vec4(mix( vec3(1.0), color, 1.0 - smoothstep(0.0, 1.0, 0.09 * t)), 1.0);//vec4(uv,0.5+0.5*sin(g_time),1.0);\n}","name":"","description":"","type":"image"}]}