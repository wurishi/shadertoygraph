{"ver":"0.1","info":{"id":"M3BSDz","date":"1710631882","viewed":45,"name":"willi242_raycast_test","username":"willi242","description":"raycast test","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raycast"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n#define PI 3.1415\n#define TEXTURE iChannel0\n\n#define THRESHOLD 0.01\n#define SCALE 0.5\n#define OFFSET vec2(0.25, -0.2)\n\n#define RES 100.\nfloat line (vec2 uv, vec2 pos0, vec2 pos1 )  {\n \n    vec2 dir = normalize( uv - pos0 ) ;\n \n    int res = 500;  //how many steps it takes per 1.0 units in uv space\n  \n    //if(length(pos1-pos0) > 0.2) return 0.0;\n  \n    for( int i = 0; i < res; i++) {\n        float t = float(i) / float(res); //yeah\n\n        //t = floor(t * (RES) ) / (RES);\n        \n        vec2 p =  pos0 + dir * t ;\n         \n        float height = smoothstep(0.6, 0.6 , texture(TEXTURE, p ) ).r;\n  \n        float _length = length(p - uv);\n        \n        if ( _length > THRESHOLD && _length < THRESHOLD + 0.001) {\n            return clamp (0., 1.0, 1.-(t*t*2.) );//(1.-t*1.4) ;\n\n        }\n         \n        if(_length > THRESHOLD) {\n            \n             if( height>=0.500 ) { //chekc the height of the \"terrain\"\n                return 0.0;\n                break;\n                //return 0.0; \n            }  \n        }\n    }  \n    return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =  fragCoord;\n    \n     \n    uv /= vec2( iResolution.y, iResolution.y);\n    \n     \n    \n    \n    vec2 mouse = iMouse.xy;\n    mouse /= vec2( iResolution.y, iResolution.y);\n    mouse*=SCALE;\n    mouse-=OFFSET;\n     \n    \n    uv *= SCALE;\n    uv -= OFFSET;\n    \n    //uv = floor(uv * RES) / RES;\n    \n    //vec2 lightPos = 0.2*vec2(sin(iTime),0.7*cos(iTime) ); //move in circle\n    vec2 lightPos = mouse ;//move by mouse position : )\n    \n    vec3 tex = texture(TEXTURE, uv).rgb;\n    \n    float h = smoothstep(0.6, 0.6, tex).r; \n    \n    float L = line(uv,  lightPos,  uv);\n     \n    //float L = ray(lightPos, uv*SCALE - OFFSET);\n     \n    float aura = smoothstep(0.97, 1., (1.-distance( uv, lightPos )  ));\n    \n    vec3 col = vec3( tex.r+h*0.1,  tex.g+h*0.1,  tex.b+h*0.1)* L + aura  ;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}