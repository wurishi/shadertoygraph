{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Fork of \"Metal 3D\" by wyatt. https://shadertoy.com/view/4XtcRr\n// 2024-12-22 07:27:36\n\n// Fork of \"Metal 3D test\" by wyatt. https://shadertoy.com/view/X3dczn\n// 2024-12-20 00:33:41\n\nvoid mainImage(out vec4 Q, in vec2 U) {\n    R = iResolution.xy;\n    if (iFrame%2>0) discard;\n    vec3 p = vec3(.5*R3.xy,-2.*R3.x);\n    float z = 7.;\n    if (iMouse.z>0.) {\n       z = 50.*iMouse.y/R.y;\n    }\n    vec3 d = normalize(vec3(2.*(U-.5*R)/R.y,z));\n    p -= .5*R3;\n    p.y -= .0*R3.y;\n    p.yz *= ei(.5);\n    d.yz *= ei(.5);\n    if (iMouse.z>0.) {\n    p.yz *= ei(-iMouse.y/R.x);\n    d.yz *= ei(-iMouse.y/R.x);\n    p.xz *= ei(-iMouse.x/R.x*6.2);\n    d.xz *= ei(-iMouse.x/R.x*6.2);\n    } else {\n    p.xz *= ei(-.5+.2*sin(.2*iTime));\n    d.xz *= ei(-.5+.2*sin(.2*iTime));\n    }\n    p += .5*R3;\n    p += d*1.001*cube(p,d,vec3(0),R3);\n    \n    vec3 no = vec3(0);\n    vec3 nd = vec3(0);\n    Q = vec4(0,0,0,0);\n    float e = 1.;\n    for (float i = 0.; i < 220.; i++) {\n    \n        if (length(p-clamp(p,vec3(0),R3))>0.) break;\n        float k = 1e9;\n        vec3 col = vec3(0);\n        for (float x = -0.; x <= 1.; x++)\n        for (float y = -0.; y <= 1.; y++)\n        for (float z = -0.; z <= 1.; z++)\n        {\n            vec3 w = floor(p)+vec3(x,y,z);\n            if (length(w-clamp(w,vec3(0),R3))>1e-3) continue;\n            vec4 a = s3d(iChannel0,w);\n            float j = sphere(p-w-a.xyz,d,min(2.*a.w,.5)).x;\n            if (j > 0. && j < k) {\n                k = j;\n                vec3 no = normalize(p+d*j-w-a.xyz);\n                col = .2*e*(.7+.5*(vec3(1,2,3)));\n\n                nd = reflect(d,no);\n            }\n        }\n        if (k > 10.) {\n            float c = cube(fract(p),d,vec3(0),vec3(1));\n            c = clamp(c,.01,4.);\n            p += d*1.01*c;\n        } else {\n            Q.xyz += col;\n            p += d*k;\n            d = nd; \n            p += .1*d;\n            \n            e *= .8;\n             if (e < .1) break;\n            \n        }\n    }\n    Q = 1.-Q;\n   \n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"// 3D utilities \n#define N 5.\n#define K0 .1\n#define Z .5\nvec2 R;\nvec3 vel (vec3 v) {return v*inversesqrt(1.+dot(v,v));}\n//  [ [0,R/N]; [0,N*N]  ] < -- > [0,R]\n#define Main void mainImage (out vec4 Q, in vec2 _U) {R = iResolution.xy;vec3 U = d3(floor(_U));\n#define A(U) s3d(iChannel0,U)\n#define B(U) s3d(iChannel1,U)\n#define R3 vec3(R/N,N*N)\nvec4 hash(vec4 p4) {\n    p4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nvec2 d2 (vec3 U) {\n    //U = clamp(U,vec3(0),R3);\n\tU = mod(U,R3);\n    return U.xy+vec2(mod(U.z,N),floor(U.z/N))*R/N;\n}\nvec3 d3 (vec2 u) {\n    vec2 o = floor(u/R*N);\n\treturn vec3(mod(u,R/N),o.x+o.y*N);\n}\n\nvec4 s3d (sampler2D T,vec3 U) {\n    return texelFetch(T,ivec2(d2(U)),0);\n}\nvec4 LN (sampler2D tx, vec3 u) {\n                    vec3 f = floor(u);\n                    vec3 c = ceil(u);\n                    #define G(_) texelFetch(tx,ivec2(d2(_)),0)\n                    vec4 _000 = G(vec3(f));\n                    vec4 _001 = G(vec3(f.xy,c.z));\n                    vec4 _010 = G(vec3(f.x,c.y,f.z));\n                    vec4 _011 = G(vec3(f.x,c.yz));\n                    vec4 _100 = G(vec3(c.x,f.yz));\n                    vec4 _101 = G(vec3(c.x,f.y,c.z));\n                    vec4 _110 = G(vec3(c.xy,f.z));\n                    vec4 _111 = G(vec3(c));\n                    vec4 _00 = mix(_000,_001,fract(u.z));\n                    vec4 _01 = mix(_010,_011,fract(u.z));\n                    vec4 _10 = mix(_100,_101,fract(u.z));\n                    vec4 _11 = mix(_110,_111,fract(u.z));\n                    vec4 _0 = mix(_00,_01,fract(u.y));\n                    vec4 _1 = mix(_10,_11,fract(u.y));\n                    return mix(_0,_1,fract(u.x));\n                }\nfloat absmin(float a, float b) {\n    if (a<0.||(b>0.&&b<a)) return b;\n    else return a;\n}\nvec2 sphere (vec3 oc, vec3 direction, float sphereRadius) {\n    float a = dot(direction, direction);\n    float b = 2.0 * dot(oc, direction);\n    float c = dot(oc, oc) - sphereRadius * sphereRadius;\n    float discriminant = b * b - 4.0 * a * c;\n    if (discriminant < 0.0) return vec2(-1); \n    float t1 = (-b - sqrt(discriminant)) / (2.0 * a);\n    float t2 = (-b + sqrt(discriminant)) / (2.0 * a);\n    return vec2(t1, t2); \n}\n\nfloat cube(vec3 p, vec3 d, vec3 lo, vec3 hi) {\n    vec3 tLo = (lo - p) / d;\n    vec3 tHi = (hi - p) / d;\n    vec3 tMin = min(tLo, tHi);\n    vec3 tMax = max(tLo, tHi);\n    float tEntry = max(tMin.x, max(tMin.y, tMin.z));\n    float tExit = min(tMax.x, min(tMax.y, tMax.z));\n    if (tEntry > tExit || tExit < 0.0) return -1.0; \n    return tEntry > 0.0 ? tEntry : tExit;\n}","name":"Common","description":"","type":"common"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XdfGR8","filepath":"/media/previz/buffer03.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"\nMain \n    Q = s3d(iChannel0,U);\n    vec4 V = s3d(iChannel1,U);\n    if (iFrame < 1) {\n        Q = vec4(0);\n        if (iFrame < 1) {\n        Q = vec4(.5,.5,0,0);\n        V = vec4(0);\n        if (abs(U.x-.5*R3.x)<.1*R3.x&&abs(U.y-.5*R3.y)<.1*R3.y) Q.w = 2.;\n    }\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XdfGR8","filepath":"/media/previz/buffer03.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// force\nMain \n    Q = s3d(iChannel0,U);\n    vec4 V = s3d(iChannel1,U);\n    //if (Q.w>0.)\n    for (float x = -1.; x <= 1.; x++)\n    for (float y = -1.; y <= 1.; y++)\n    for (float z = -1.; z <= 1.; z++)\n    if (x!=0.||y!=0.||z!=0.)\n    {\n        vec3 u = vec3(x,y,z);\n        \n        if (length(U+u-clamp(U+u,vec3(1),R3-1.))>1e-3) {\n            V.xyz -= .1*u;\n            //continue;\n        }\n        \n        vec4 q = A(U+u);\n           V.xyz += .01*(q.w)*(1.-(q.w))*u/dot(u,u);\n    }\n    V.z += .0001;\n    if (iFrame < 1) {\n        Q = vec4(.5,.5,0,0);\n        V = vec4(0,0,0,0);\n    }\n    Q = V;\n    \n}","name":"Buffer B","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"4sXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// advect\nMain \n    Q = vec4(0);//s3d(iChannel0,U);\n    vec4 V = vec4(0);//s3d(iChannel1,U);\n    \n    for (float x = -1.; x <= 1.; x++)\n    for (float y = -1.; y <= 1.; y++)\n    for (float z = -1.; z <= 1.; z++)\n    {\n        vec3 u = vec3(x,y,z);\n        vec4 q = A(U+u);\n        vec4 v = B(U+u);\n        float k = 1.2;\n        vec3 ol = clamp(U+vel(v.xyz)+q.xyz+u.xyz-U+k*vec3(-.5),0.,1.);\n        vec3 oh = clamp(U+vel(v.xyz)+q.xyz+u.xyz-U+k*vec3(+.5),0.,1.);\n        float w = (oh.x-ol.x)*(oh.y-ol.y)*(oh.z-ol.z)/k/k/k;\n        \n        Q.xyz += 0.5*(ol+oh)*q.w*w;\n        V.xyz += v.xyz*q.w*w;\n        Q.w += q.w*w;\n        \n        /*vec4 _1 = q;\n        _1.xyz += u+vel(v.xyz);\n        vec4 _2 = _1;\n          vec3 h = normalize(hash(vec4(U+u,iTime)).xyz*2.-1.);\n          if (q.w>K0) {\n              vec3 v = Z*h;\n              _2.xyz -= v;\n              _1.xyz += v;\n          }\n          if (_1.x<1.&&_1.x>=0.&&\n              _1.y<1.&&_1.y>=0.&&\n              _1.z<1.&&_1.z>=0.){\n              Q.xyz += .5*q.w*_1.xyz;\n              V.xyz += .5*q.w*v.xyz;\n              Q.w += .5*q.w; \n          }\n          if (_2.x<1.&&_2.x>=0.&&\n              _2.y<1.&&_2.y>=0.&&\n              _2.z<1.&&_2.z>=0.){\n              Q.xyz += .5*q.w*_2.xyz;\n              V.xyz += .5*q.w*v.xyz;\n              Q.w += .5*q.w;\n          }*/\n    }\n    if (Q.w>0.) {\n        Q.xyz/=Q.w;\n        V.xyz/=Q.w;\n    }\n    //Q = V;\n}","name":"Buffer C","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XdfGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// advect\nMain \n    Q = vec4(0);//s3d(iChannel0,U);\n    vec4 V = vec4(0);//s3d(iChannel1,U);\n    \n    for (float x = -1.; x <= 1.; x++)\n    for (float y = -1.; y <= 1.; y++)\n    for (float z = -1.; z <= 1.; z++)\n    {\n        vec3 u = vec3(x,y,z);\n        vec4 q = A(U+u);\n        vec4 v = B(U+u);\n        float k = 1.2;\n        vec3 ol = clamp(U+vel(v.xyz)+q.xyz+u.xyz-U+k*vec3(-.5),0.,1.);\n        vec3 oh = clamp(U+vel(v.xyz)+q.xyz+u.xyz-U+k*vec3(+.5),0.,1.);\n        float w = (oh.x-ol.x)*(oh.y-ol.y)*(oh.z-ol.z)/k/k/k;\n        \n        Q.xyz += 0.5*(ol+oh)*q.w*w;\n        V.xyz += v.xyz*q.w*w;\n        Q.w += q.w*w;\n        /*\n        vec4 _1 = q;\n        _1.xyz += u+vel(v.xyz);\n        vec4 _2 = _1;\n          vec3 h = normalize(hash(vec4(U+u,iTime)).xyz*2.-1.);\n          if (q.w>K0) {\n              vec3 v = Z*h;\n              _2.xyz -= v;\n              _1.xyz += v;\n          }\n          if (_1.x<1.&&_1.x>=0.&&\n              _1.y<1.&&_1.y>=0.&&\n              _1.z<1.&&_1.z>=0.){\n              Q.xyz += .5*q.w*_1.xyz;\n              V.xyz += .5*q.w*v.xyz;\n              Q.w += .5*q.w; \n          }\n          if (_2.x<1.&&_2.x>=0.&&\n              _2.y<1.&&_2.y>=0.&&\n              _2.z<1.&&_2.z>=0.){\n              Q.xyz += .5*q.w*_2.xyz;\n              V.xyz += .5*q.w*v.xyz;\n              Q.w += .5*q.w;\n          }*/\n    }\n    if (Q.w>0.) {\n        Q.xyz/=Q.w;\n        V.xyz/=Q.w;\n    }\n    Q = V;\n}","name":"Buffer D","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"XX3cDM","date":"1735138879","viewed":301,"name":"Melting Chocolate","username":"wyatt","description":"3D fluid sim","likes":17,"published":3,"flags":32,"usePreview":0,"tags":["3d","fluid","physics","vorticity"],"hasliked":0,"parentid":"","parentname":""}}