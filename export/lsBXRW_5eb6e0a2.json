{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"vec2 cmul(vec2 z0, vec2 z1)\n{\n    return vec2(z0.x * z1.x - z0.y * z1.y, z0.x * z1.y + z0.y * z1.x);\n}\n\nvec2 cdiv(vec2 z0, vec2 z1)\n{\n    vec2 z1conj = vec2(z1.x, -z1.y);\n    return cmul(z0, z1conj) / cmul(z1, z1conj).x;\n}\n\nvec4 hermite(mat4 m, float t)\n{\n    float t2 = t * t, t3 = t2 * t;\n    return m * vec4(2.0 * t3 - 3.0 * t2 + 1.0, t3 - 2.0 * t2 + t, -2.0 * t3 + 3.0 * t2, t3 - t2);\n}\n\nvec3 catmullRom(mat4 m, float t)\n{\n    if(t > m[2].w)\n        m = mat4(m[1], m[2], m[3], m[3] * 2.0 - m[2]);\n    else if(t > m[1].w)\n        m = mat4(m[0], m[1], m[2], m[3]);\n    else\n        m = mat4(m[0] * 2.0 - m[1], m[0], m[1], m[2]);\n\n    t = (t - m[1].w) / (m[2].w - m[1].w);\n    m = m * mat4(0.0, 1.0, 0.0, 0.0, -0.5, 0.0, 0.5, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.5, 0.0, 0.5);\n    return hermite(m, t).xyz;\n}\n\nfloat pattern(vec2 p, int n, vec2 o)\n{\n    p *= 0.5;\n    vec2 t = vec2(cos(1.04719755), sin(1.04719755)) * 2.0;\n    float m = 1.0;\n    for(int i = 0; i < 8; i += 1)\n    {\n        if(i < n)\n        {\n            p = cdiv(vec2(1.0, 0.0), cmul(abs(fract(p) - vec2(0.5)), t));\n            m = max(m, length(p) / 2.0);\n        }\n    }\n    return 1.1 - exp(-distance(p, o) / m) * 1.6;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.y * 0.7;\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n    mat4 m = mat4( vec3(0.1, 0.1, 0.2), 0.2,  vec3(0.2, 0.3, 0.42), 0.7,   \n                vec3(1.0, 0.9, 0.5), 0.92, vec3(0.2, 0.3, 0.42), 1.0);\n\n    for(int i = 0; i < 8; i+=1)\n    {\n        vec2 c = uv + float(i) * 5e-5;\n        float p = pattern(c, 5, vec2(cos(iTime + c.y * 15.0) * 0.5, 0.0)) * 0.75 +\n            pattern(c.yx, 6, vec2(0.0, sin(iTime * 0.5) * 0.5)) * 0.25 +\n            pattern(c.yx * 2.0, 7, vec2(0.0, sin(iTime + c.x * 8.0))) * 0.2;\n        fragColor.rgb += catmullRom(m, clamp(p * 0.9, 0.0, 1.0));\n    }\n    fragColor.rgb /= 8.0;\n}\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsBXRW","date":"1409428539","viewed":1172,"name":"Pulsations","username":"fizzer","description":"Just playing around with a fractal. I used a Catmull-Rom spline to create the colours, and tried to keep the code compact.","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["fractal","spline","hermite"],"hasliked":0,"parentid":"","parentname":""}}