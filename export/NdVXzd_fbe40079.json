{"ver":"0.1","info":{"id":"NdVXzd","date":"1635143552","viewed":54,"name":"Clock_havocado","username":"havocado","description":"This is a clock.\n\nModify SPEEDUP to change the speed of the clock.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float TWO_PI = 6.28318530718;\nfloat SPEEDUP = 1.0;\n\nfloat ring(vec2 uv, vec2 center, float radius, float thickness, float smoothness) {\n    vec2 uv_scaled = vec2(uv.x, uv.y*iResolution.y/iResolution.x);\n    vec2 center_scaled = vec2(center.x, center.y*iResolution.y/iResolution.x);\n    float dist = length(uv_scaled-center_scaled);\n    if (smoothness == 0.0) return 1.-step(thickness, abs(dist-radius));\n    else return smoothstep(smoothness+thickness*0.5, thickness*0.5, abs(dist-radius));\n}\n\nfloat circle(vec2 uv, vec2 center, float radius) {\n    vec2 uv_scaled = vec2(uv.x, uv.y*iResolution.y/iResolution.x);\n    vec2 center_scaled = vec2(center.x, center.y*iResolution.y/iResolution.x);\n    float dist = length(uv_scaled-center_scaled);\n    return 1.-step(0., dist-radius);\n}\n\nfloat clock_bg_line(vec2 uv, vec2 center, float start_radius, float end_radius) {\n    float line_width = 0.003;\n\n    vec2 uv_scaled = vec2(uv.x, uv.y*iResolution.y/iResolution.x);\n    vec2 center_scaled = vec2(center.x, center.y*iResolution.y/iResolution.x);\n    vec2 to_center = uv_scaled-center_scaled;\n    \n    float dist = length(to_center);\n    float theta = atan(to_center.y, to_center.x)/TWO_PI*360.;\n    theta = mod((theta+360.), 360.);\n    \n    float is_within_length = step(start_radius, dist) * (1.-step(end_radius, dist));\n    float is_within_angle = (1.-step(line_width*360., mod(theta+line_width*0.5, 30.)));\n    \n    return is_within_length*is_within_angle;\n}\n\n// needle_angle: 0~360 degrees\nfloat clock_needle(vec2 uv, vec2 center, float needle_angle, float needle_length) {\n    float needle_width = 0.01;\n\n    vec2 uv_scaled = vec2(uv.x, uv.y*iResolution.y/iResolution.x);\n    vec2 center_scaled = vec2(center.x, center.y*iResolution.y/iResolution.x);\n    vec2 to_center = uv_scaled-center_scaled;\n    \n    float dist = length(to_center);\n    float theta = atan(to_center.y, to_center.x)/TWO_PI*360.;\n    theta = mod((theta+360.), 360.);\n    \n    float time_theta = 1.-(theta-90.);\n    \n    float is_within_length = (1.-step(needle_length, dist));\n    float is_within_angle = (1.-step(0.5*needle_width*360., mod(time_theta+360.-needle_angle, 360.)));\n    return is_within_length * is_within_angle;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Colors ======================================\n    vec3 temp_bg = vec3(255.,253.,208.)/255.*0.6;\n    vec3 gray = vec3(0.3);\n    vec3 white = vec3(1.0);\n    vec3 mint = vec3(152.,255.,152.)/255.;\n    vec3 black = vec3(0.);\n    vec3 clock_bg_color = vec3(0.3, 0.3, 0.5);\n    \n    // Shapes ======================================\n    // Ring frame\n    float black_frame = ring(uv, vec2(0.5), 0.2, 0.005, 0.0012);\n    float white_inner_frame = ring(uv, vec2(0.5), 0.2-0.006, 0.001, 0.0012);\n    \n    // Clock background\n    float clock_bg = circle(uv, vec2(0.5), 0.2);\n    float white_line = clock_bg_line(uv, vec2(0.5), 0.12, 0.17);\n    \n    // Clock needle\n    // get angle->div by 30->multiply 30\n    float hour_needle_pos = floor((iTime*6.*SPEEDUP/60./60.)/6.)*6.;\n    float min_needle_pos = floor((iTime*6.*SPEEDUP/60.)/6.)*6.;\n    float sec_needle_pos = floor((iTime*6.*SPEEDUP)/6.)*6.;\n    float hour_needle = clock_needle(uv, vec2(0.5), hour_needle_pos, 0.1);\n    float min_needle = clock_needle(uv, vec2(0.5), min_needle_pos, 0.18);\n    float sec_needle = clock_needle(uv, vec2(0.5), sec_needle_pos, 0.18);\n    \n    // Mix =========================================\n    vec3 color = white;\n    color = mix(color, clock_bg_color, clock_bg);\n    color = mix(color, white, white_line);\n    \n    color = mix(color, white, white_inner_frame);\n    color = mix(color, black, black_frame);\n    \n    color = mix(color, black, hour_needle);\n    color = mix(color, black, min_needle);\n    color = mix(color, mint, sec_needle);\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}