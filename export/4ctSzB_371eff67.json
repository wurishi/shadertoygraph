{"ver":"0.1","info":{"id":"4ctSzB","date":"1714081953","viewed":59,"name":"cyberroma","username":"jorunna","description":"followed a tutorial to try my own spin with SDF rhombus","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","sdf","repetition","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\n\nfloat sdRhombus( in vec2 p, in vec2 b ) \n{\n    p = abs(p);\n    float h = clamp( ndot(b-2.0*p,b)/dot(b,b), -1.0, 1.0 );\n    float d = length( p-0.5*b*vec2(1.0-h,1.0+h) );\n    \n    return d * sign( p.x*b.y + p.y*b.x - b.x*b.y );\n}\n\nvec3 palette(float t)\n{\n    vec3 a = vec3(0.3, 0.5, 0.5);\n    vec3 b = vec3(0.3, 0.5, 0.5);\n    vec3 c = vec3(0.4, 0.5, 0.33);\n    vec3 d = vec3(0., 0.5, 0.7);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 p = (-iResolution.xy + 2.0*fragCoord) / iResolution.y;\n    vec2 uv0 = p;\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 2.5; i++)\n    {\n        p = fract(p * 1.4) - 0.5;\n\n\n        vec2 ra = 0.4 + 0.3*cos( vec2(0.0,1.57) + 0.0 );\n\n        float d = sdRhombus(p, ra) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.5);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.015 / d, 1.2);\n\n        finalColor += col * d;\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}