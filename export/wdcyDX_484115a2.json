{"ver":"0.1","info":{"id":"wdcyDX","date":"1601845820","viewed":797,"name":"Sobel Edge Detection Algorithm","username":"Dogemaster09","description":"I just applied the Sobel Edge Detection algorithm to a base image, and it worked! I'm honestly shocked that I got the kernel right the first time for both vertical and horizontal. I am open to suggestions! Controllable with the mouse.","likes":2,"published":1,"flags":0,"usePreview":1,"tags":["sobel","edgedetection","kernel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float bw(sampler2D col, vec2 uv) {\n\treturn dot(texture(col, uv).xyz, vec3(1./3.));\n}\n\nvec2 nUv(vec2 uv) {\n\treturn uv/iResolution.xy;\n}\n\nfloat sobelHorizontal(vec2 pUv) {\n\tfloat k1 = bw(iChannel0, nUv(pUv-1.))*-1.;\n    float k2 = bw(iChannel0, nUv(pUv-vec2(1., -1.)))*-1.;\n    float k3 = bw(iChannel0, nUv(pUv-vec2(1., 0.)))*-2.;\n    float k4 = bw(iChannel0, nUv(pUv+1.));\n    float k5 = bw(iChannel0, nUv(pUv+vec2(1., -1.)));\n    float k6 = bw(iChannel0, nUv(pUv+vec2(1., 0.)))*2.;\n    return((k1+k2+k3+k4+k5+k6)/6.);\n}\nfloat sobelVertical(vec2 pUv) {\n\tfloat k1 = bw(iChannel0, nUv(pUv-1.))*-1.;\n    float k2 = bw(iChannel0, nUv(pUv-vec2(-1., 1.)))*-1.;\n    float k3 = bw(iChannel0, nUv(pUv-vec2(0., 1.)))*-2.;\n    float k4 = bw(iChannel0, nUv(pUv+1.));\n    float k5 = bw(iChannel0, nUv(pUv+vec2(-1., 1.)));\n    float k6 = bw(iChannel0, nUv(pUv+vec2(0., 1.)))*2.;\n    return((k1+k2+k3+k4+k5+k6)/6.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pUv = fragCoord;\n\tfloat horizontal = sobelHorizontal(fragCoord);\n    float vertical = sobelVertical(fragCoord);\n    float BW = horizontal+vertical;\n    float BWM = (horizontal*(iMouse.x/iResolution.x))+(vertical*(iMouse.y/iResolution.y));\n    if(iMouse.z>0.) {\n    \tfragColor = vec4(BWM);\n    }else {\n    \tfragColor = vec4(BW);\n    } \n}","name":"Image","description":"","type":"image"}]}