{"ver":"0.1","info":{"id":"3tscD8","date":"1592329995","viewed":93,"name":"dotty metaball","username":"imprity","description":"kewl\n(that dot is made with ico sphere points I generated with java do you have any better idea to create these points?)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["alsokewl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\nfloat GRatio = 1.618033988;\n\nint maxStep = 255;\nfloat minDist = 0.0;\nfloat maxDist = 200.0;\nfloat e = 0.0001;\n\nstruct Camera{\n    vec3 pos;\n    vec3 look;\n    vec3 up;\n    vec3 right;\n    float fov;\n};\n\nstruct Sphere{\n    vec3 pos;\n    float r;\n};\n\nvec3 rotateX(vec3 p, float ang) {\n  mat3 rmat = mat3(\n    1., 0., 0.,\n    0., cos(ang), -sin(ang),\n    0., sin(ang), cos(ang));\n  return rmat * p;\n}\nvec3 rotateY(vec3 p, float ang) {\n  mat3 rmat = mat3(\n    cos(ang), 0., sin(ang),\n    0., 1., 0.,\n    -sin(ang), 0., cos(ang));\n  return rmat * p;\n}\nvec3 rotateZ(vec3 p, float ang) {\n  mat3 rmat = mat3(\n    cos(ang), -sin(ang), 0.,\n    sin(ang), cos(ang), 0.,\n    0., 0., 1.);\n  return rmat * p;\n}\n\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nCamera getCamera(vec3 pos, vec3 look, vec3 up, float fov){\n    Camera c;\n    c.pos = pos;\n    c.look = normalize(look - pos);\n    c.right = normalize(cross(up, c.look));\n    c.up = cross(c.look, c.right);\n    c.fov = fov;\n    return c;\n}\n\nvec3 getRay(Camera c, vec2 coord){\n    vec3 ray;\n    \n    vec2 nc = coord/iResolution.xy;\n    nc -= 0.5;\n    nc.x *= iResolution.x/iResolution.y;\n    \n    ray += nc.x * c.right;\n    ray += nc.y * c.up;\n    ray += c.fov * c.look;\n    \n    return normalize(ray);\n}\n\nfloat sphereSdf(Sphere s, vec3 p){\n    p -= s.pos;\n    return length(p) - s.r;\n}\n\n\nfloat sdf(vec3 p){\n    Sphere s = Sphere(vec3(0.0,0.0,0.0), 0.6);\n    Sphere s2 = Sphere(vec3(0.1,0.1 + sin(iTime),0.0), 0.3);\n    Sphere s3 = Sphere(vec3(0.2,0.1 + cos(iTime ) * 1.3,0.0), 0.4);\n    \n    \n    float d;\n    \n    d = sphereSdf(s,p);\n    d = smin(d, sphereSdf(s2,p), 0.3);\n    d = smin(d, sphereSdf(s3,p), 0.3);\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    Camera cam = getCamera(rotateY(vec3(1.0,0.7, -1.0),iTime * 0.1), vec3(0.0,0.0,0.0), vec3(0.0,1.0,0.0), 0.3);\n    \n    \n    vec3 ray = getRay(cam, fragCoord);\n    \n    float d1 = 0.0;\n    float d2 = 0.0;\n    \n    float h;\n    \n    vec3 n;\n    \n    for(int i=0; i < maxStep; i++){\n        d1 = sdf(d2*ray + cam.pos);\n        if(d1 < e)\n        \tbreak;\n        d2 += d1;\n        if(d2 > maxDist)\n            break;\n        h++;\n    }\n    \n    d2 = min(d2, maxDist);\n    \n    vec3 p = d2 * ray + cam.pos; \n    \n    n = normalize(vec3(\n        sdf(vec3(p.x + e, p.y, p.z)) - sdf(vec3(p.x - e, p.y, p.z)),\n        sdf(vec3(p.x, p.y + e, p.z)) - sdf(vec3(p.x, p.y - e, p.z)),\n        sdf(vec3(p.x, p.y, p.z  + e)) - sdf(vec3(p.x, p.y, p.z - e))\n    ));\n    \n    float c = dot(n, rotateY(normalize(vec3(5.0,3.0, 5.0)), iTime * 0.3));\n    \n    if(d2 >= maxDist){\n        float spot;\n        \n        vec3 spvec = vec3(0.0,0.0,1.0);\n        \n        float spn = 30.0;\n        \n        for(float i=0.0; i<spn; i++){\n            for(float j=0.0; j<spn; j++){\n                spot = max(spot,dot(ray, spvec));\n                spvec = rotateZ(spvec, PI * 2.0 / spn);\n            }\n            spvec = rotateY(spvec, PI * 1.0 / spn);\n        }\n        if(spot < 0.9999)\n        \tfragColor = vec4(0.949, 0.0941, 0.28235, 1.0);\n        else\n            fragColor = vec4(1.0);\n    }\n    else{\n        float spot;\n        n = rotateX(n, iTime * 0.3);\n        n = rotateY(n, iTime * 0.3);\n        /*spot = max(spot, dot(n ,normalize( vec3(-1,  GRatio,  0) )));\n\t\tspot = max(spot, dot(n ,normalize( vec3( 1,  GRatio,  0) )));\n\t\tspot = max(spot, dot(n ,normalize( vec3(-1, -GRatio,  0) )));\n\t\tspot = max(spot, dot(n ,normalize( vec3( 1, -GRatio,  0) )));\n\t\tspot = max(spot, dot(n ,normalize( vec3( 0, -1,  GRatio) )));\n\t\tspot = max(spot, dot(n ,normalize( vec3( 0,  1,  GRatio) )));\n\t\tspot = max(spot, dot(n ,normalize( vec3( 0, -1, -GRatio) )));\n\t\tspot = max(spot, dot(n ,normalize( vec3( 0,  1, -GRatio) )));\n\t\tspot = max(spot, dot(n ,normalize( vec3( GRatio,  0, -1) )));\n\t\tspot = max(spot, dot(n ,normalize( vec3( GRatio,  0,  1) )));\n\t\tspot = max(spot, dot(n ,normalize( vec3(-GRatio,  0, -1) )));\n\t\tspot = max(spot, dot(n ,normalize( vec3(-GRatio,  0,  1) )));*/\n        // LOL\nspot = max(spot, dot(n ,normalize(vec3(-0.52573, 0.85065, 0.00000))));\nspot = max(spot, dot(n ,normalize(vec3(0.52573, 0.85065, 0.00000))));\nspot = max(spot, dot(n ,normalize(vec3(-0.52573, -0.85065, 0.00000))));\nspot = max(spot, dot(n ,normalize(vec3(0.52573, -0.85065, 0.00000))));\nspot = max(spot, dot(n ,normalize(vec3(0.00000, -0.52573, 0.85065))));\nspot = max(spot, dot(n ,normalize(vec3(0.00000, 0.52573, 0.85065))));\nspot = max(spot, dot(n ,normalize(vec3(0.00000, -0.52573, -0.85065))));\nspot = max(spot, dot(n ,normalize(vec3(0.00000, 0.52573, -0.85065))));\nspot = max(spot, dot(n ,normalize(vec3(0.85065, 0.00000, -0.52573))));\nspot = max(spot, dot(n ,normalize(vec3(0.85065, 0.00000, 0.52573))));\nspot = max(spot, dot(n ,normalize(vec3(-0.85065, 0.00000, -0.52573))));\nspot = max(spot, dot(n ,normalize(vec3(-0.85065, 0.00000, 0.52573))));\nspot = max(spot, dot(n ,normalize(vec3(-0.80902, 0.50000, 0.30902))));\nspot = max(spot, dot(n ,normalize(vec3(-0.50000, 0.30902, 0.80902))));\nspot = max(spot, dot(n ,normalize(vec3(-0.30902, 0.80902, 0.50000))));\nspot = max(spot, dot(n ,normalize(vec3(0.30123, 0.80413, 0.51248))));\nspot = max(spot, dot(n ,normalize(vec3(-0.01550, 0.99988, 0.00000))));\nspot = max(spot, dot(n ,normalize(vec3(-0.00000, 1.00000, 0.00000))));\nspot = max(spot, dot(n ,normalize(vec3(0.31673, 0.81371, -0.48740))));\nspot = max(spot, dot(n ,normalize(vec3(-0.31673, 0.81371, -0.48740))));\nspot = max(spot, dot(n ,normalize(vec3(-0.30902, 0.80902, -0.50000))));\nspot = max(spot, dot(n ,normalize(vec3(-0.48740, 0.31673, -0.81371))));\nspot = max(spot, dot(n ,normalize(vec3(-0.80413, 0.51248, -0.30123))));\nspot = max(spot, dot(n ,normalize(vec3(-0.80902, 0.50000, -0.30902))));\nspot = max(spot, dot(n ,normalize(vec3(-1.00000, 0.00000, 0.00000))));\nspot = max(spot, dot(n ,normalize(vec3(0.30902, 0.80902, 0.50000))));\nspot = max(spot, dot(n ,normalize(vec3(0.48740, 0.31673, 0.81371))));\nspot = max(spot, dot(n ,normalize(vec3(0.80413, 0.51248, 0.30123))));\nspot = max(spot, dot(n ,normalize(vec3(-0.51248, -0.30123, 0.80413))));\nspot = max(spot, dot(n ,normalize(vec3(0.00000, 0.01550, 0.99988))));\nspot = max(spot, dot(n ,normalize(vec3(-0.81371, -0.48740, -0.31673))));\nspot = max(spot, dot(n ,normalize(vec3(-0.81371, -0.48740, 0.31673))));\nspot = max(spot, dot(n ,normalize(vec3(-0.50000, 0.30902, -0.80902))));\nspot = max(spot, dot(n ,normalize(vec3(0.00000, 0.01550, -0.99988))));\nspot = max(spot, dot(n ,normalize(vec3(-0.51248, -0.30123, -0.80413))));\nspot = max(spot, dot(n ,normalize(vec3(0.30902, 0.80902, -0.50000))));\nspot = max(spot, dot(n ,normalize(vec3(0.80413, 0.51248, -0.30123))));\nspot = max(spot, dot(n ,normalize(vec3(0.48740, 0.31673, -0.81371))));\nspot = max(spot, dot(n ,normalize(vec3(0.81371, -0.48740, 0.31673))));\nspot = max(spot, dot(n ,normalize(vec3(0.50000, -0.30902, 0.80902))));\nspot = max(spot, dot(n ,normalize(vec3(0.30123, -0.80413, 0.51248))));\nspot = max(spot, dot(n ,normalize(vec3(0.30902, -0.80902, 0.50000))));\nspot = max(spot, dot(n ,normalize(vec3(-0.30902, -0.80902, 0.50000))));\nspot = max(spot, dot(n ,normalize(vec3(0.00000, -1.00000, 0.00000))));\nspot = max(spot, dot(n ,normalize(vec3(-0.30902, -0.80902, -0.50000))));\nspot = max(spot, dot(n ,normalize(vec3(0.30902, -0.80902, -0.50000))));\nspot = max(spot, dot(n ,normalize(vec3(0.50000, -0.30902, -0.80902))));\nspot = max(spot, dot(n ,normalize(vec3(0.80902, -0.50000, -0.30902))));\nspot = max(spot, dot(n ,normalize(vec3(1.00000, 0.00000, 0.00000))));\nspot = max(spot, dot(n ,normalize(vec3(0.80902, -0.50000, 0.30902))));\nspot = max(spot, dot(n ,normalize(vec3(0.50000, 0.30902, 0.80902))));\nspot = max(spot, dot(n ,normalize(vec3(0.00000, 0.00000, 1.00000))));\nspot = max(spot, dot(n ,normalize(vec3(-0.50000, -0.30902, 0.80902))));\nspot = max(spot, dot(n ,normalize(vec3(-0.80902, -0.50000, 0.30902))));\nspot = max(spot, dot(n ,normalize(vec3(-0.80902, -0.50000, -0.30902))));\nspot = max(spot, dot(n ,normalize(vec3(-0.50000, -0.30902, -0.80902))));\nspot = max(spot, dot(n ,normalize(vec3(0.00000, 0.00000, -1.00000))));\nspot = max(spot, dot(n ,normalize(vec3(0.50000, 0.30902, -0.80902))));\nspot = max(spot, dot(n ,normalize(vec3(0.80902, 0.50000, -0.30902))));\nspot = max(spot, dot(n ,normalize(vec3(0.80902, 0.50000, 0.30902))));\n        if(spot < 0.98)\n        \tfragColor = vec4(0.949, 0.0941, 0.28235, 1.0);\n        else\n            fragColor = vec4(1.0);\n    }\n}\n","name":"Image","description":"","type":"image"}]}