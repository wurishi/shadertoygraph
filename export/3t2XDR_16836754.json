{"ver":"0.1","info":{"id":"3t2XDR","date":"1568906663","viewed":201,"name":"Rivercolor","username":"104","description":"don't pollute","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","plasma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// { 2d cell id, distance to border, distnace to center )\nvec4 cell(vec2 p) {\n    float dxe = min(distance(p.x,floor(p.x)),distance(p.x,ceil(p.x)));\n    float dye = min(distance(p.y,floor(p.y)),distance(p.y,ceil(p.y)));\n    return vec4(floor(p), min(dxe,dye),length(fract(p)-.5));\n}\n\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nvoid mainImage( out vec4 o, vec2 C)\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = C/R.xy;\n    float t = iTime+1e2;\n    uv.x *= R.x/R.y;\n    uv *= 4.;\n    float s = 1.;\n\n    for (float i = 1.;i <= 8.; ++ i) {\n        vec4 hex = cell(uv);\n        vec4 h = hash42(hex.xy);\n        uv+= hex.z*h.xy+hex.w*fract(i+t*.1);// todo: find a way to make smooth transition to next cell\n        uv *= 1.02;\n        o = h * sqrt(hex.z * hex.w);\n    }\n    o = pow(1.-o,o-o+8.);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}