{"ver":"0.1","info":{"id":"ltcyDS","date":"1533833564","viewed":628,"name":"GoL trails","username":"yx","description":"Playing with an idea.","likes":13,"published":3,"flags":32,"usePreview":0,"tags":["life"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ^ look at Buf A for the actual implementation\n\nvec3 col(float p)\n{\n    vec3 a = vec3(0, .5, 0);\n    vec3 b = vec3(1., .5, .4);\n    vec3 c = vec3(.3, .6, 1.2);\n    vec3 d = vec3(-.25, -.6, -.25);\n    vec3 e = vec3(0,0,.7);\n    return a+b*cos(2.*acos(-1.)*(c*p+d))+e*p;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    /*fragColor = pow(\n        texture(iChannel0, fragCoord / iResolution.xy),\n        vec4(1.5,1.2,1,1)\n    );*/\n    fragColor.rgb = col(\n        texture(iChannel0, fragCoord / iResolution.xy).r*.97+.03\n    );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int SCALE = 1;\n\n// not really random but close enough\nfloat rand(vec2 n)\n{\n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 4358.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord -= mod(fragCoord, float(SCALE));\n    \n    if (iFrame == 0 || iMouse.z > .5)\n    {\n        fragColor = vec4(step(.5, rand(fragCoord.xy+iTime)));\n    }\n    else\n    {\n        vec2 o = float(SCALE) / iResolution.xy;\n        vec2 uv = (fragCoord / iResolution.xy) + (o * .5);\n        \n        float accum = 0.;\n        float self = 0.;\n        for (int i = -1; i <= 1; ++i)\n        {\n            for (int j = -1; j <= 1; ++j)\n            {\n\t\t\t\tfloat s = texture(iChannel0, uv + o * vec2(i, j)).a;\n                if (i == 0 && j == 0)\n                    self = s;\n                else\n                    accum += step(1.,s);\n            }\n        }\n        \n        fragColor = vec4(accum == 3. || (accum == 2. && self >= 1.));\n        if(fragColor.a < 1.)\n        \tfragColor += self*.996;\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}