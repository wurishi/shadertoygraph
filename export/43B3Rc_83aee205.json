{"ver":"0.1","info":{"id":"43B3Rc","date":"1708657360","viewed":35,"name":"mandelbrot zoom in gooble ","username":"Gooble","description":"fractal zoom","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float len(in float a, in float b)\n{\n    return (sqrt(pow(a,2.0) + pow(b,2.0)));\n}\n\nfloat isBrot(in vec2 uv, in float depth)\n{\n    float a, b;\n    float temp;\n    \n    a = 0.0;\n    b = 0.0;\n    while (len(a, b) <=  2.0 && depth >  0.0)\n    {\n        temp = a*a - b*b + uv.x;\n        b =  2.0*a*b + uv.y;\n        a = temp;\n        depth--;\n    }\n    return (depth);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    uv.x += 1.8;\n    float scale = pow(iTime, -1.1);\n    uv.x *= scale;\n    uv.y *= scale;\n    uv.x -= 1.8;\n    \n    \n    \n    float depth = 200.0 ;//+ iTime;\n    float brot = isBrot(uv, depth);\n    vec3 finalColor = vec3((1. - brot/depth) * 0.2, (1. - brot/depth) * .5, .8 * (1. - brot/depth));\n    \n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}