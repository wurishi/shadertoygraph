{"ver":"0.1","info":{"id":"4fScRR","date":"1721821137","viewed":26,"name":"Grid Notebook","username":"mall","description":"Grid Notebook","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["notebook"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define Dash\n\nvec4 paper(vec2 fragCoord)\n{\n    // Initial color (near white)\n    return vec4(1.0, 1.0, 0.95, 1.0);    \n}\n\nvec4 applyGrid(vec2 fragCoord, vec4 baseColor)\n{\n    // Normalize pixel coordinates (range from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    // Adjust aspect ratio\n    vec2 adjustedUV = vec2(uv.x * iResolution.x / iResolution.y, uv.y);\n\n    // Ink color with slight alpha\n    vec4 inkColor = vec4(0.6, 0.6, 0.6, 0.1);\n    inkColor.rgb += baseColor.rgb * 0.009;\n\n    // Calculate horizontal and vertical line intensities\n    float horizontalLineIntensity = 1.0 - clamp(64.0 + cos(adjustedUV.x * PI * 64.0) * 64.0, 0.0, 1.0);\n#ifdef Dash\n    float horizontalDashV = 256.;\n    float horizontalDashIntensity = clamp(cos(adjustedUV.y * PI * horizontalDashV), 0.0, 1.0);\n    horizontalLineIntensity = horizontalLineIntensity * horizontalDashIntensity;\n#endif\n\n    float verticalLineIntensity = 1.0 - clamp(64.0 + cos(adjustedUV.y * PI * 64.0) * 64.0, 0.0, 1.0);\n#ifdef Dash\n    float verticalDashV = 256.;\n    float verticalDashIntensity = clamp(cos(adjustedUV.x * PI * verticalDashV), 0.0, 1.0);\n    verticalLineIntensity = verticalLineIntensity * verticalDashIntensity;\n#endif\n\n    // Mix background color with ink color based on line intensities\n    vec3 backgroundColor = mix(baseColor.rgb, inkColor.rgb, max(horizontalLineIntensity, verticalLineIntensity));\n    \n    return vec4(backgroundColor, 1.0);\n}\n\nvec4 getRand(vec2 fragCoord)\n{\n    vec2 tres = vec2(textureSize(iChannel0, 0));\n    vec4 r = texture(iChannel0, fragCoord / tres / sqrt(iResolution.x / 600.0));\n    return r;\n}\n\nvec4 applyPaperishEffect(vec2 fragCoord, vec4 baseColor)\n{\n    vec4 r = getRand(fragCoord * 1.1) - getRand(fragCoord * 1.1 + vec2(1.0, -1.0));\n    vec4 c = baseColor * (0.95 + 0.06 * r.xxxx + 0.06 * r);\n    return c;\n}\n\nvec4 applyVignette(vec2 fragCoord, vec4 baseColor)\n{\n    vec2 sc = (fragCoord - 0.5 * iResolution.xy) / iResolution.x;\n    float vign = 1.0 - 0.5 * dot(sc, sc);\n    vign *= 1.0 - 0.7 * exp(-sin(fragCoord.x / iResolution.x * PI) * 20.0);\n    vign *= 1.0 - 0.7 * exp(-sin(fragCoord.y / iResolution.y * PI) * 10.0);\n    return baseColor * vign;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    fragColor = paper(fragCoord);\n    fragColor = applyPaperishEffect(fragCoord, fragColor);\n    fragColor = applyGrid(fragCoord, fragColor);\n    // fragColor = applyVignette(fragCoord, fragColor);\n    fragColor.w = 1.0;\n}\n","name":"Image","description":"","type":"image"}]}