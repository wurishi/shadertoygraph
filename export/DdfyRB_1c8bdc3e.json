{"ver":"0.1","info":{"id":"DdfyRB","date":"1686902348","viewed":119,"name":"Wavy CheckerBoard","username":"kanduvisla","description":"My first non-tutorial shader :-P","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["checkerboard"],"hasliked":0,"parentid":"cdfyRB","parentname":"Basic Checkerboard by KV"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\nfloat calculateColor( vec2 uv, float d, float offset )\n{\n    return\n        step(0.5, 0.5 + sin(\n            (sin(offset + iTime + (uv.y * 3. * d))) + (uv.x * 15. * pow(d, d)) +\n                // We add the similar step for the Y-axis, and\n                // multiply it with PI so it matches with the outer sin func\n                (step(0.5, 0.5 + cos(\n                    cos(offset + (iTime) + (uv.x * 3. * d)) + (uv.y * 15. * pow(d, d))\n                ) * 0.5) * PI)\n        ) * 0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n\n    // Checkerboard:\n    float uvy = sin(uv.y * 10.);\n    float d = length(uv);\n    \n    vec3 col = vec3(\n        calculateColor( uv, 0.5 + d * 0.5, 0.0 ),\n        calculateColor( uv, 0.5 + d * 0.49, 0.1 ),\n        calculateColor( uv, 0.5 + d * 0.51, 0.2 )\n    );\n    col /= pow(d, d);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}