{"ver":"0.1","info":{"id":"MsfyW8","date":"1487906395","viewed":107,"name":"Spinning Pattern","username":"mende","description":"Spinning Radial Design\n\nI know some of you will play \"code golf\" with this shader, it is not intended to be minified, just working.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","pattern","spin","design"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n#define PI2 6.283184\n#define SEGMENTS 4.0 / 2.0\n#define COLOR1 vec3(0.0,0.0,0.0)\n#define COLOR2 vec3(0.1,0.1,0.1)\n\nvoid mainImage2( out vec4 fragColor, in vec2 fragCoord ) {\n    float aspect = iResolution.y / iResolution.x;\n\tvec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n    //uv.x += 0.2;\n    uv.y *= aspect;\n    float theta = (atan(uv.y, uv.x) + PI) / PI2 - iTime * 0.09;\n    if(theta > 1.0) theta = mod(theta, 1.0);\n    if(theta < 0.0) theta = 1.0 - mod(abs(theta), 1.0);\n    vec3 value = length(uv) < 0.05 ? COLOR1 : floor(mod(theta * SEGMENTS, 1.0) * 2.0) == 0.0 ? COLOR1 : COLOR2;\n\tfragColor = vec4(value, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float aspect = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n\tuv.x *= aspect;\n    vec3 value = fract((uv.x * sin(iTime) + uv.y * cos(iTime)) * (SEGMENTS + (sin(iTime * 8.0) * 0.5 + 0.5) * 1.5)) < 0.5 ? COLOR1 : COLOR2;\n\tfragColor = vec4(value, 1.0);\n}","name":"Image","description":"","type":"image"}]}