{"ver":"0.1","info":{"id":"MdtXWH","date":"1459277425","viewed":209,"name":"DrumTest","username":"manoloide","description":"first test sound glsl ","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["test","sound","synth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    /*\n    float grid1 = 0.0;\n    float grid2 = 0.0;\n    float grid3 = 0.0;\n   \n    float vx = cos(iTime*0.001+1.)*0.2;\n    float vy = cos(iTime*0.0003+3.)*0.3;\n    float cc = sin(iTime*0.0001)*50.+50.;\n    grid1 = step(mod((uv.x+uv.y+iTime*vx)*cc, 2.0), 1.0);\n    grid1 -= step(mod((uv.x-uv.y+iTime*vy)*cc, 2.0), 1.0);\n    grid1 = abs(grid1);\n    \n    \n    vx = cos(iTime*0.003)*0.3;\n    vy = cos(iTime*0.007)*0.6+cos(iTime*0.003)*0.2;\n    cc = 1.0;\n    grid2 = step(mod((uv.x+uv.y+iTime*vx)*cc, 2.0), 1.0);\n    grid2 -= step(mod((uv.x-uv.y+iTime*vy)*cc, 2.0), 1.0);\n    grid2 = abs(grid2);\n\n    vx = cos(iTime*0.003+4.)*0.2;\n    vy = cos(iTime*0.007)*0.6+cos(iTime*0.0013)*0.2;\n    cc = 4.0;\n    grid3 = step(mod((uv.x+uv.y+iTime*vx)*cc, 2.0), 1.0);\n    grid3 -= step(mod((uv.x-uv.y+iTime*vy)*cc, 2.0), 1.0);\n    grid3 = abs(grid3);\n    \n    float col = abs(grid1-grid2);\n    col -= grid3;\n    col = abs(col);\n    */\n    float col = 0.0;\n    fragColor = vec4(vec3(col), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n\nfloat noise(float n){\n    return fract(sin(n)*43758.5453);\n}\n\nvec2 pan(float s, float p){\n    vec2 aux = vec2(s);\n    aux.x = s*clamp(p, 0.0, 1.0);\n    aux.y = s*clamp(1.-p, 0.0, 1.0);\n    return aux;\n}\n\nfloat mtf(float m){\n \treturn pow(2.0, (m-62.)/12.)*440.;   \n}\n\nfloat sine(float phase, float freq){\n \treturn sin(TWO_PI*freq*phase);\n}\nfloat pulse(float phase, float freq){\n \treturn ceil(mod(freq*phase,2.0))*2.0-3.;\n}\nfloat saw(float phase, float freq){\n \treturn mod(freq*phase*2.,2.0)-1.;\n}\nfloat tri(float phase, float freq){\n \treturn abs(mod(freq*phase*4., 4.)-2.)-1.;   \n}\n\nvec2 mainSound( in int samp,float time){\n    float tt;\n    vec2 master = vec2(0.0);\n    \n    float phase = mod(time, 2.0);\n    float stp = floor(time*4.);\n   \n    tt = mod(time, 0.25);\n    float bd = pow(sin(TWO_PI*420.0*tt)*exp(-20.0*tt), 3.2);\n    tt = mod(time+0.25, 0.5);\n    float sn = noise(time*100.)*exp(-20.0*tt);\n    tt = mod(time+0.125, 0.25);\n    float hh = noise(time*100.)*exp(-90.0*tt);\n\n    \n    /*\n    CHAMELEON\n\tfloat note = 67.+mod(stp, 8.0);\n    float d = step(mod(stp, 16.), 8.0)*5.;\n    if(note >= 71.){\n        if(int(note) == 72){\n            note = 80.0;\n            if(d > 0.) note = 77.0;\n        }\n        else if(int(note) == 74) {\n            note = 82.0;\n            if(d > 0.) note = 80.0;\n        }\n        else {\n        \tnote = 0.0;   \n        }\n    }\n    note += d;\n\t*/\n    float note = 67.0+mod(stp, 4.0);\n    float freq = mtf(note); \n    \n    float syn = (saw(phase, freq)*saw(phase, freq*2.)*0.8)*0.2;\n    \n    master += pan(bd, sin(time*PI*0.5)*0.5);\n    master += sn*0.6;\n    master += hh*0.4;\n    master += syn;//pan(syn, sin(time*PI*0.25)*0.4)*0.6;\n    \n    return master*0.4;\n\n\n}","name":"Sound","description":"","type":"sound"}]}