{"ver":"0.1","info":{"id":"Xl2Bz3","date":"1516719628","viewed":467,"name":"Cyan bubbles 2","username":"skaplun","description":"Continuation of https://www.shadertoy.com/view/ll2fzG\nImprovements: rewrote with polar coords. significantly decreased loops count; pattern now looks more like original\nThanks: @FabriceNeyret2, @Shane\nOriginal: https://dribbble.com/shots/1728616-Bubbles\n","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles","animation","bubbles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ROWS 9\n#define COLS 12.\n#define PI 3.14159265359\n#define TAU 6.28318530718\n#define es (4./iResolution.y)\n#define initialRad .175\n#define waveCenter .4325\n#define waveWidth .205\n#define colDelta PI/COLS\n#define rMat(x) mat2(cos(x), -sin(x), sin(x), cos(x))\n#define dotRad(x) TAU*x/float(COLS)*.25\n#define CLR vec3(.388, .843, .976)\n\nfloat rm(float value, float min, float max) {\n    return clamp((value - min) / (max - min), 0., 1.);\n}\n\nfloat calcRowRad(int rowNum){\n    float rad = initialRad;\n    //FIXME codeblock below could be replaced with non conditional expression,\n    //          but in some reason it don't work. Any ideas?\n    //rad += step(0., sin(iTime)) * step(0., cos(iTime)) * .066;\n    {\n        float s = sin(iTime * 4.);\n        float c = cos(iTime * 4.);\n        if(s > 0. && c > 0.)\n            rad += s * .066;\n    }\n    for(int i=0; i<rowNum; i++)\n        rad += dotRad(rad) * 1.33;\n    return rad;\n}\n\nfloat clr(float r, float a){\n    vec2 st = vec2(r * cos(a), r * sin(a));\n    float clr = 0.;\n    for(int j = 0; j < ROWS; j++){\n        float rowRad = calcRowRad(j);\n        vec2 dotCenter = vec2(rowRad, 0.) * rMat(colDelta * mod(float(j), 2.));\n        float dotRad = dotRad(rowRad);\n        float dotClr = smoothstep(dotRad, dotRad - es, length(st - dotCenter));\n        float thickness = pow(rm(abs(length(dotCenter) - waveCenter), 0., waveWidth), 1.25);\n        dotClr *= smoothstep(dotRad * thickness - es, dotRad * thickness, length(st - dotCenter));\n        dotClr *= step(es, 1. - thickness);\n        clr += dotClr;\n    }\n    \n    return clr;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = (fragCoord.xy * 2. - iResolution.xy)/iResolution.y;\n    float delta = PI/COLS*2.;\n    float l = length(st);\n    float a = mod(atan(st.y, st.x), delta) - delta/4.;\n    fragColor = vec4(clr(l, a) * CLR, 1.);\n}","name":"Image","description":"","type":"image"}]}