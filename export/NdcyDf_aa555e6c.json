{"ver":"0.1","info":{"id":"NdcyDf","date":"1654127880","viewed":62,"name":"Curve testing environment","username":"Dubswitcher","description":"Environment I started using for testing out curve types when needed. Figured I'd leave it public so that anyone who wishes to mess with it may do so.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test","grid","curve","graph","ease"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct gr {float a; vec3 c;};\n\nfloat triwave(float p)\n{\n    return abs(fract(p)-0.5)*4.-1.;\n}\n\ngr graphDraw (in float s, in float t, in vec2 uv, in vec3 col)\n{\n    vec2 o = vec2(0.);\n    o.x = smoothstep(0.84,0.86,triwave(uv.y*s));\n    o.x = max(o.x,smoothstep(0.84,0.86,triwave(uv.x*s)));\n    o.y = smoothstep(0.94,0.96,triwave(uv.y*s));\n    o.y = max(o.y,smoothstep(0.94,0.96,triwave(uv.x*s)));\n    return gr(o.x,o.y*col);\n}\n\nfloat segcurve(float p, float x, float y)\n{\n    float h = pow(y,abs(x)+1.);\n    if (x > 0.) return (pow(p*(1.-y)+y,x+1.)-h)/(1.-h);\n    else return 1.-(pow((1.-p)*(1.-y)+y,-x+1.)-h)/(1.-h);\n}\n\nfloat segcurve2(float p, float x, float y)\n{\n    float a = min(p*2.,1.); float b = max(p*2.,1.)-1.;\n    a = segcurve(a,x,y);\n    b = 1.-segcurve(1.-b,x,y);\n    return (a+b)/2.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y; uv+=0.5;\n    float cv = 0., a = uv.x;\n\n//------------------------------------------- variable testing space\n\na = triwave(a+fract(iTime/2.))/2.+0.5;\na = segcurve2(a, sin(iTime*2.)*20., 0.85);\n\n//------------------------------------------------------------------\n    \n    cv = step(uv.y,a);\n    \n    vec3 col = clamp(vec3(cv),0.,1.);\n#if 1 //change to 0 for 1/6 spacing grid\n    gr graph = graphDraw(8.,0.,uv,vec3(0.3,0.4,1.0));\n    col = mix(col,graph.c,graph.a/4.);\n#else\n    gr graph = graphDraw(6.,0.,uv,vec3(1.0,0.4,0.3));\n    col = mix(col,graph.c,graph.a/10.);\n#endif\n    \n    if (uv.x < 0. || uv.x > 1.) col = vec3(0.);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}