{"ver":"0.1","info":{"id":"NtjfWV","date":"1652766419","viewed":118,"name":"FORK:PaintWithSwirls","username":"mehow_one","description":"Trying to understand what's what by swapping some functions for other.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["swirl","distortion","vortex","uvmap","vorticity","divergencefree"],"hasliked":0,"parentid":"fdjyRV","parentname":"paint with swirls ( div free )"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// === applies the uv field to a texture =================\n\n//#define fwidth(v) length(vec2(dFdx(v),dFdy(v)))\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    u = T(u).xy;                    // distorted uv field\n    O = texture( iChannel0, u );    // apply map\n    \n    float v = length(u-.5);         // apply circle\n    O = mix( O, vec4(1,0,0,0), smoothstep( 1.5, 0.,  abs(v-.3)/fwidth(v) ) );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// === distort the uv field ====================\n\n#define ortho(D)   vec2( -(D).y, (D).x )              // vec ortho to D\n#define S(D)       ortho(D) / max( dot(D,D) , 1e-4 )  // irrotational swirl\n\n\n// using a second buffer to store the mouse pos and trying to figure how texelFetch works by replacing it\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O = T(u); // previous state\n    \n    vec2 U = u / R.y,\n         M = iMouse.xy / R.y,\n         d = .1* normalize( ortho( iMouse.xy/R - TB(0).zw +1e-5 )), // swirl pair axis\n         V = S(U-M+d) - S(U-M-d);                     // swirl pair irrotational field\n\n    if (iMouse.z > 0.)                                // if click, swirl\n        O = texture( iChannel0, ( U + .1*V/60. ) *R.y/R );\n    \n    if ( iFrame < 1 ) O = vec4(u/R,0,0);              // init uv field\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R      iResolution.xy\n#define T(U)   texture( iChannel0, vec2(U)/R)\n#define TB(U)   texture( iChannel1, vec2(U)/R)\n#define pixel_at(a,b) floor(u.x) == a && floor(u.y) == b","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 O, in vec2 u )\n{\n    O = T(u);\n    if ( pixel_at(0.,0.) )                               // previous mouse pos\n      { if ( TB(0).xy != iMouse.xy/R ) O = vec4(iMouse.xy/R,TB(0).xy); return; } \n    if ( iFrame < 1 ) O = vec4(u/R,0,0); \n    \n}","name":"Buffer B","description":"","type":"buffer"}]}