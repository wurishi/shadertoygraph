{"ver":"0.1","info":{"id":"DsjSzz","date":"1677608526","viewed":57,"name":"tan-automata","username":"StephenDedalus","description":"Cellular automata using tangens as the nonlinear special sauce function","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["2d","automata","life","cellular","gameoflife","cellularautomata","continuous"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float v = texture(iChannel0,uv).x;\n    vec4 draw = vec4(v, v*v, -v, 1.);\n    draw = clamp(draw, 0., 1.);\n    fragColor = sqrt(draw);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 click(vec2 p) {\n    if (iMouse.z > 0.0) {\n        float radius = 100.0;\n        float dist = length(iMouse.xy - p);\n        float activation = smoothstep(radius, 0.0, dist);\n        return vec4(0.01*activation);\n    } else {\n        return vec4(0);\n    }\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 vs[9];\n    for (int i = 0; i < 3; i++) {\n        float dx = float(i-1);\n        for (int j = 0; j < 3; j++) {\n            float dy = float(j-1);\n            vec2 p = fragCoord + vec2(dx, dy);\n            vs[i*3+j] = texture(iChannel0, p / iResolution.xy);\n        }\n    }\n\n    float c = vs[1*3+1].x;\n    float n = 0.25 * ((vs[0*3+1]+vs[2*3+1])+(vs[1*3+0]+vs[1*3+2])).x;\n    float nd = 0.25 * ((vs[0*3+0]+vs[0*3+2])+(vs[2*3+0]+vs[2*3+2])).x;\n\n    vec3 w = vec3(.2, .2, .6);\n    float v = w.x*c + w.y*n + w.z*nd;\n    v = tan(v);\n    \n    float m = 3.0 - c;\n    float dist = n+nd - m;\n    //v *= 2.0*exp(-dist*dist * 0.29);\n    \n    //if (fragCoord.x == 500.5){// && fragCoord.y == 300.5) {\n    //    v += 0.1;\n    //}\n    \n    if (isnan(v)) v = 0.;\n    fragColor = vec4(v) + click(fragCoord);// + click(fragCoord + vec2(0, 20));\n}\n\n\n","name":"Buffer A","description":"","type":"buffer"}]}