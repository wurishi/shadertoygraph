{"ver":"0.1","info":{"id":"lsXfRN","date":"1495136162","viewed":108,"name":"Mandelbrot_set","username":"gmb","description":"https://en.wikipedia.org/wiki/Mandelbrot_set","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","set"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float zoom = 150.0;\n\nvec2 cmplx_add(vec2 z1, vec2 z2)\n{\n \treturn vec2(z1.x + z2.x, z1.y + z2.y);  \n}\n\nvec2 cmplx_mult(vec2 z1, vec2 z2)\n{\n    float re, im;\n\n    re = (z1.x * z2.x) - (z1.y * z2.y);\n    im = (z1.x * z2.y) + (z1.y * z2.x);\n    \n \treturn vec2(re, im);  \n}\n\nfloat cmplx_norm(vec2 z)\n{\n\treturn z.x * z.x + z.y * z.y;   \n}\n\nvec4 mandel(vec2 z)\n{\n    vec2 c = z;\n    vec2 zi = z;\n    vec2 zi1;\n    \n    float i, n;\n    float max_iter = 1000.0f;\n    \n    for(i = 0.0f; i < max_iter; i += 1.0f){\n        zi1 = cmplx_add(cmplx_mult(zi, zi), c);\n\n        n = cmplx_norm(zi1);\n\n        if(n > 4.0f)\n            break;\n\n        zi = zi1;\n    }\n    \n    if(i < (max_iter - 1.0f)){\n        float col =  1.0f;\n        \n        return vec4(col, col, col, 1.0);\n    }\n    else\n        return vec4(0.0, 0.0, 0.0, 1.0); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy; \n    \n    xy.x = (xy.x - iResolution.x / 2.0f) / zoom;\n    xy.y = (xy.y - iResolution.y / 2.0f) / zoom;\n    \n    fragColor = mandel(xy);\n}","name":"Image","description":"","type":"image"}]}