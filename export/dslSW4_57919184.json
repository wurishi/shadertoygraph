{"ver":"0.1","info":{"id":"dslSW4","date":"1669232366","viewed":128,"name":"Square illusion1","username":"minghir","description":"Exercising. \nhttps://en.m.wikipedia.org/wiki/File:Optical-illusion-diamonds.svg","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","illusion","opticalillusion","bw","perception","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//FabriceNeyret2 \nvoid mainImage( out vec4 O, vec2 U )\n{\n   U = ( U + vec2(-U.y,U) ) * 5. / iResolution.y;\n    mod(U.y,2.) > 1. ? U.x++ : 0.;\n    vec2 V = ( U + vec2(-U.y,U) )*.7; \n    //O = vec4( .5 < fract(V.y*4.-iTime*2.) );\n    O = vec4( .25 < mod(V.y*2.-iTime, .5) );\n    mod(U.x,2.) < 1. ? O = 1.3 - O : O;\n}\n\n/*\nconst float PI = 3.1416;\nmat2 rotationMatrix(float angle){\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    uv *=rotationMatrix(45.);\n    uv *=7.;\n    uv.x += step(1., mod(uv.y,2.0));\n\n    bool c = (mod(uv.x,2.) < 1.);\n\n    uv *=rotationMatrix(45.);\n    uv = fract(uv)-(iTime/2.);\n\n    vec3 d;\n    if(c)\n       d = vec3(1.- step(0.5,fract(uv.y*4.)))+0.3;\n    else\n       d = vec3( step(0.5,fract(uv.y*4.)));\n\n    // Output to screen\n    fragColor = vec4(d,1.0);\n}\n*/","name":"Image","description":"","type":"image"}]}