{"ver":"0.1","info":{"id":"ttycDh","date":"1610909635","viewed":106,"name":"Trying Out Cubemaps","username":"oneshade","description":"Trying out cubemaps.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","test","cubemap","hacky"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AIR_TO_GLASS_RATIO 1.0003 / 1.5\n\nvec3 IntersectSphere(in vec3 ro, in vec3 rd, in float r) {\n    float a = dot(rd, rd);\n    float b = dot(2.0 * ro, rd);\n    float c = dot(ro, ro) - r * r;\n\n    vec3 intersect = vec3(0.0);\n    float discr = b * b - 4.0 * a * c;\n    if (discr > 0.0) {\n        float root = sqrt(discr);\n        float denom = 2.0 * a;\n        float t1 =  (root - b) / denom;\n        float t2 = -(root + b) / denom;\n        intersect = vec3(t1, t2, 1.0);\n    }\n\n    return intersect;\n}\n\nvec3 SphereNormal(in vec3 p, in float r) {\n    return p / r;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 mouse = (iMouse.xy - 0.5 * iResolution.xy) / iResolution.y * 6.28;\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n    vec3 ro = vec3(0.0, 0.0, 5.0);\n\n    // Mouse control\n    float cx = cos(mouse.y), sx = sin(mouse.y);\n    ro.yz *= mat2(cx, sx, -sx, cx);\n\n    float cy = cos(mouse.x), sy = sin(mouse.x);\n    ro.xz *= mat2(cy, sy, -sy, cy);\n\n    vec3 f = -normalize(ro);                  // Camera forward\n    vec3 r = normalize(vec3(-f.z, 0.0, f.x)); // Camera right\n    vec3 u = cross(r, f);                     // Camera up\n    vec3 rd = normalize(f + uv.x * r + uv.y * u);\n\n    vec3 l = normalize(vec3(-1.0, 1.0, 1.0));\n\n    vec3 intersect = IntersectSphere(ro, rd, 1.5);\n    if (intersect.z > 0.5) {\n        vec3 hitPos = ro + rd * min(intersect.x, intersect.y);\n        vec3 n = SphereNormal(hitPos, 1.5);\n        vec3 refr = refract(rd, n, AIR_TO_GLASS_RATIO);\n\n        intersect = IntersectSphere(hitPos, refr, 1.5);\n        hitPos += refr * min(intersect.x, intersect.y);\n        n = SphereNormal(hitPos, 1.5);\n        refr = refract(refr, n, AIR_TO_GLASS_RATIO);\n        vec3 refl = reflect(l, n);\n\n        fragColor += texture(iChannel0, refr);\n        if (dot(n, l) > 0.0) {\n            fragColor += pow(max(0.0, dot(refl, refr)), 16.0);\n        }\n    }\n\n    else {\n        fragColor += texture(iChannel0, rd);\n    }\n}","name":"Image","description":"","type":"image"}]}