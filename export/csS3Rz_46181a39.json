{"ver":"0.1","info":{"id":"csS3Rz","date":"1667110673","viewed":153,"name":"ExtrudeMix","username":"kastorp","description":"extrusion mixing SDF.\nNot sure if it is exact, but seems to work","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["mix","sdf","extrude"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//ExtrudeMix by Kastorp\n\n//you can also stack levels...\n#define STACK\nfloat extrudeMix( float y, float d1,float d2 ,float h,bool stacked)\n{\n    vec2 p=vec2(0,y-h);\n    vec2 a=vec2(d2,-h),b=vec2(d1,h);\n    float s= (y<h*2. && y>0. && (d2-d1)*y<d2*2.*h)?-1.:1.; \n    \n    vec2 eab=p- mix(a, b, clamp(dot(p - a, b - a) / dot(b - a,b - a), 0., 1.));\n    if(stacked) return length(eab)*s; \n    \n    vec2 ea =p- a +vec2(1,0)*  clamp(a.x - p.x, 0., 1e6);\n    vec2 eb =p- b +vec2(1,0)*  clamp(b.x - p.x, 0., 1e6);\n    float d= min(min(dot(eab,eab),dot(ea,ea)),dot(eb,eb));   \n    return sqrt(d)*s;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat map(vec3 p) {      \n    float d= p.y; \n    \n    // d1= upper SDF, d2= lower SDF\n    float d1= min( length(p.xz-vec2(.2,0))-.1,length(p.xz-vec2(-.2,0))-.1),\n          d2= length(p.xz)-.2;\n          \n          //capped square pyramid\n          d1= min(d1,sdBox(p.xz-vec2(0,1),vec2(.1)));\n          d2= min(d2,sdBox(p.xz-vec2(0,1),vec2(.3)));\n          \n          //circle to square\n          d1= min(d1,length(p.xz-vec2(1,0))-.2);\n          d2= min(d2,sdBox(p.xz-vec2(1,0),vec2(.3)));\n          \n          //rounded pyramid\n          d1= min(d1,length(p.xz-vec2(-1,0)));\n          d2= min(d2,sdBox(p.xz-vec2(-1,0),vec2(.3)));\n          \n          //cross circles\n          d1= min(d1, length(p.xz-vec2(-.12,-1))-.1);    \n          d1= min(d1, length(p.xz-vec2(.12,-1))-.1); \n          d2= min(d2, length(p.xz-vec2(0,-1.12))-.1);    \n          d2= min(d2, length(p.xz-vec2(0,-0.88))-.1);\n          \n          //anvil\n          d1= min(d1,sdBox(p.xz-vec2(1,1),vec2(.4,.1)));\n          d2= min(d2, sdBox(p.xz-vec2(1,1),vec2(.2,.3)));\n\n          //disk to circle \n          d1= min(d1,abs(length(p.xz-vec2(1,-1))-.15)-.01);\n          d2= min(d2,length(p.xz-vec2(1,-1))-.3);\n          \n          //frame to box\n          d1= min(d1,abs(sdBox(p.xz-vec2(-1,1),vec2(.15)))-.01);\n          d2= min(d2, sdBox(p.xz-vec2(-1,1),vec2(.3)));\n          \n          //two to one square\n          d1= min(d1, min(sdBox(p.xz-vec2(-1.2,-1),vec2(.1)),sdBox(p.xz-vec2(-.8,-1),vec2(.1))));\n          d2= min(d2, sdBox(p.xz-vec2(-1,-1),vec2(.2)));\n#ifndef STACK    \n    //remember to invert signs, otherwise you'll get holes!\n    d= min(d,extrudeMix(p.y, -d1,-d2,.3,false));\n#else\n     d= min(d,extrudeMix(p.y, d2,d2,.05,true));\n     d= min(d,extrudeMix(p.y-.1, -d1-.05,d2,.1,true));\n     d= min(d,extrudeMix(p.y-.3, -d2+.05,-d1-.05,.1,true));\n     d= min(d,extrudeMix(p.y-.5, -d2,-d2+.05,.05,true));\n     d= min(d,extrudeMix(p.y-.6, -d1,-d2,.1,false));\n#endif     \n    return d;\n}\n\n//-------------------------\n\n//Iq\nvec3 calcN(vec3 p, float t) {\n\tfloat h = .001 * t;\n\tvec3 n = vec3(0);\n\tfor (int i = min(iFrame, 0); i < 4; i++) {\n\t\tvec3 e = .5773 * (2. * vec3((((i + 3) >> 1) & 1), (i >> 1) & 1, i & 1) - 1.);\n\t\tn += e * map(p + e * h);\n\t}\n\treturn normalize(n);\n}\n\n//Iq\nfloat calcShadow(vec3 p, vec3 ld) {\n\tfloat s = 1., t = .03;\n\tfor (float i = 0.; i < 40.; i++)\n\t{\n\t\tfloat h = map(p + ld * t);\n\t\ts = min(s, 15. * h / t);\n\t\tt += h;\n\t\tif (s < .001) break;\n\t}\n\treturn clamp(s, 0., 1.);\n}\n\n//Iq\nvec3 vignette(vec3 c, vec2 fc) {\n\tvec2 q = fc.xy / iResolution.xy;\n\tc *=  .5 + .5 * pow(16. * q.x * q.y * (1. - q.x) * (1. - q.y), .4);\n\treturn c;\n}\n\nvec3 getRayDir(vec3 ro, vec3 lookAt, vec2 uv) {\n\tvec3 f = normalize(lookAt - ro),\n\t\t r = normalize(cross(vec3(0,1., 0), f));\n\treturn normalize(f + r * uv.x + cross(f, r) * uv.y);\n}\n\nvec3 lights(vec3 p, vec3 rd, float d) {\n    vec3 lightDir = normalize( vec3(15.,19.,6.) );\n\tvec3 ld = normalize(lightDir*6.5 - p), n = calcN(p, d) ;\n\n\tfloat ao = 1.,\n\tl1 = max(0., .2 + .8 * dot(ld, n)),\n\tl2 = 0.,\n\tspe = max(0., dot(rd, reflect(ld, n))) * .1,\n\n\tfre = smoothstep(.7, 1., 1. + dot(rd, n));\n\n\tl1 *= .1 + .9 * calcShadow(p+.001*n, ld);\n\tvec3 lig = ((l1 + l2) * ao + spe) * vec3(1.) *2.5;\n\treturn mix(.3, .4, fre) * lig;\n}\n\n// Shane\nvec3 tex3D( sampler2D tex, in vec3 p, in vec3 n ){ \n    n = max(abs(n), 0.001);\n    n /= (n.x + n.y + n.z ); \n\tp = (texture(tex, p.yz)*n.x + texture(tex, p.zx)*n.y + texture(tex, p.xy)*n.z).xyz;\n    return p*p;\n}\n\nvec3 march(vec3 ro, vec3 rd) {\n\tvec3 p;\n\tfloat d = .01;\n\tfor (float i = 0.; i < 100.; i++) {\n\t\tp = ro + rd * d;\n\t\tfloat h = map(p);\n\t\tif (abs(h) < .001  )break;\n        if(d >10.) return vec3(0,.3,.3);\n\t\td += h;\n\t}   \n\treturn (p.y>=0.01?  tex3D(iChannel0 ,p, calcN(p, d) ).rgb:tex3D(iChannel1 ,p, calcN(p, d) ).rgb)*lights(p, rd, d) * exp(-d * .085);\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fc)\n{\t\n    float t=-iTime*.5;\n\tvec3 ro = vec3(1.*cos(t),1.1 +4.*iMouse.y/iResolution.y, 1.*sin(t));\t\n\tvec2 uv = (fc - .5 * iResolution.xy) / iResolution.y;\n\tfragColor = vec4(vignette(pow(march(ro, getRayDir(ro, vec3(0,.4,0), uv)), vec3(.45)), fc), 0);\n}\n","name":"Image","description":"","type":"image"}]}