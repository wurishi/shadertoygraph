{"ver":"0.1","info":{"id":"ssGXzK","date":"1636127748","viewed":655,"name":"Page Flip","username":"xx3000","description":"Always wanted to try that page flip effect.\nClick + Move mouse for manual controls. \nI might save the picked corner to a readback buffer in the future so you could flip from multiple places.","likes":34,"published":1,"flags":0,"usePreview":0,"tags":["book","pageflip"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\n#define BOOK_BOUNDS vec4(0.15, 0.05, 0.85, 0.95)\n\n#define LIGHT_DIR vec3(5,3,1)\n#define SPECULAR_SHININESS 16.0\n#define SPECULAR_COLOR vec3(1.0,1.0,1.0)\n#define SPECULAR_POWER 10.0\n\nvec3 fakeSpine(vec3 col, float t, float darken)\n{\n    return mix(col * darken,col , min(1.0,pow(abs(t - 0.5) * 30.0, 0.5)));\n}\n\nvec3 fakeNormal(float t, float center)\n{\n    t -= center;\n    float interp =(1.0 - abs((t - 0.5) * 2.0)) * PI + PI * (3.0/4.0) ;\n        \n    vec3 normal = vec3(abs(sin(interp)) ,0,abs(cos(interp)));\n\n    return mix(normal, vec3(0,0,1), min(1.0,pow(abs(t - 0.5) * 5.0, 0.5)));\n}\n\nvec3 specular(vec3 viewDir, vec3 normal )\n{\n    vec3 lightDir = normalize(LIGHT_DIR);\n    float dist = length(lightDir);\n    vec3 halfV = normalize(lightDir + normalize(viewDir));\n\n    float NdotH = dot(normal, halfV);\n    float intensity = pow(max(NdotH, 0.0), SPECULAR_SHININESS);\n\n    return intensity * SPECULAR_COLOR * SPECULAR_POWER / dist; \n}\n\nbool pageFlip(vec2 uv, vec2 mouse, vec2 topRight, inout vec2 sampleUV, inout vec3 normal, out float toHalfEdge)\n{\n    vec2 toEdge = topRight - mouse;\n    vec2 toEdgeN = normalize(toEdge);\n    \n    vec2 toPixel = uv - mouse;\n    \n    vec2 diagonal = normalize(vec2(1.0));\n    float cosT = dot(toEdgeN, diagonal);\n    float cosT2 = 2.0 * cosT * cosT - 1.0;\n    vec2 toEdgePerp = vec2(toEdgeN.y, -toEdgeN.x);\n    \n    float dir = sign(dot(toEdgePerp,diagonal));\n    float sinT2 = dir * sqrt(1.0 - cosT2 * cosT2);\n    \n    vec2 nextPageUp = vec2(-sinT2, cosT2);\n    vec2 nextPageRight = vec2(nextPageUp.y, -nextPageUp.x);\n    \n    if(dot(toPixel, nextPageUp) >= 0.0 && dot(toPixel, nextPageRight) >= 0.0)\n    {\n        vec2 halfPoint = mouse + toEdge * 0.5;\n        vec2 toPixHP = uv - halfPoint;\n        \n        float proj = dot(toEdgePerp, (uv - halfPoint));\n        vec2 projPoint = halfPoint + toEdgePerp * proj;\n            \n        float distDiff = distance(projPoint, uv) / distance(mouse, halfPoint);\n        toHalfEdge = distDiff;\n        \n        if(dot(toPixHP, toEdge) < 0.0)\n        {\n            sampleUV = (sampleUV - mouse);\n            sampleUV = vec2(sampleUV.y, -sampleUV.x);\n            mat2 rot = mat2(cosT2, -sinT2, sinT2, cosT2); \n            sampleUV = rot * sampleUV;\n            sampleUV.y *= -1.0;\n            sampleUV.y = 1.0 - sampleUV.y;\n            \n\n            distDiff *= 0.5;\n            normal = fakeNormal(distDiff, -0.43);\n        }\n        else\n        {\n            \n            normal = fakeNormal(uv.x / topRight.x, 0.07);\n        }\n\n        return false;\n    }\n    \n    return true;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 bgCol = texture(iChannel0, uv).xyz;\n\n    vec3 outCol = bgCol;\n    \n    vec2 bookUV = uv - BOOK_BOUNDS.xy;\n    vec2 bookSize = vec2(BOOK_BOUNDS.zw - BOOK_BOUNDS.xy);\n    bookUV /= bookSize;\n\n    vec2 topRight = vec2(bookSize.y / bookSize.x, 1); \n    vec2 sUV = bookUV;\n    sUV.x *= topRight.x;\n\n    vec2 nMouse = iMouse.xy / iResolution.xy;\n    nMouse -= BOOK_BOUNDS.xy;\n    nMouse /= bookSize.xy;\n    nMouse = clamp(nMouse, vec2(0.0),vec2(1.0));\n\n    \n    if(iMouse.z <= 0.0 && iTime > 0.0)\n    {\n        nMouse = vec2((sin(iTime + 0.3) + 1.0) * 0.5,(cos(iTime * 0.5) + 1.0) * 0.5);\n\n    }\n        nMouse.x *= topRight.x;\n\n\n    float radius = topRight.x * 0.5;\n    vec2 spineTop = vec2(radius, 1.0);\n    vec2 spineMouse = nMouse - spineTop;\n    float len = length(spineMouse);\n    nMouse = spineTop + normalize(spineMouse) * min(len, radius);\n\n    vec2 sampleUV = sUV;\n\n    vec3 normal = vec3(0,0,1);\n    float halfEdgeDist = 1.0;\n    bool firstPage = pageFlip(sUV, nMouse, topRight, sampleUV, normal, halfEdgeDist);\n\n    sampleUV.x /= topRight.x;\n\n    vec3 page1 = texture(iChannel2, sampleUV).xyz;\n    vec3 page2 = texture(iChannel1, sampleUV).xyz;\n    page1 = fakeSpine(page1,bookUV.x, 0.2);\n    page2 = fakeSpine(page2,sampleUV.x, 0.2);\n    page2 = fakeSpine(page2,  (1.0 -halfEdgeDist) * 0.5, 0.4);\n\n    vec3 pageCol = firstPage ? page1 : page2;\n\n    vec3 normal2 =  fakeNormal(bookUV.x > 0.5 ? bookUV.x : 1.0 - bookUV.x, 0.07);\n\n    normal = firstPage ? normal2 : normal;\n\n    normalize(normal);\n    pageCol += min(vec3(1,1,1), specular(vec3(0,0,1), normal)) * 0.3;\n\n    if(sampleUV.x >= 0.0 && sampleUV.x <= 1.0 && sampleUV.y >= 0.0 && sampleUV.y <= 1.0)\n    {\n        outCol = pageCol;\n    }\n\n    fragColor = vec4(outCol,1.0);\n}","name":"Image","description":"","type":"image"}]}