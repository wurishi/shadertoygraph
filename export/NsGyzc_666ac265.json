{"ver":"0.1","info":{"id":"NsGyzc","date":"1655257822","viewed":143,"name":"Clock using complex function ","username":"fihade","description":"Clock using complex function ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","clock","complexfunction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#version 300 es\nprecision mediump float;\n\n//out vec4 fragColor;\n\n//uniform vec2 u_resolution;\n//uniform float u_time;\n\n#define PI 3.141592653589793\n\n#define cx_div(a, b) vec2(((a.x*b.x+a.y*b.y)/(b.x*b.x+b.y*b.y)),((a.y*b.x-a.x*b.y)/(b.x*b.x+b.y*b.y)))\n\nvec2 as_polar(vec2 z) {\n  return vec2(\n    length(z),\n    atan(z.y, z.x)\n  );\n}\n\nvec2 cx_log(vec2 a) {\n    vec2 polar = as_polar(a);\n    float rpart = polar.x;\n    float ipart = polar.y;\n    if (ipart > PI) ipart=ipart-(2.0*PI);\n    return vec2(log(rpart),ipart);\n}\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ) {\n    return a + b * sin( 0.38 * 2.*PI*(c*t + d) );\n}\n\nvec3 palette1( in float t, in float n,in vec3 a, in vec3 b, in vec3 c, in vec3 d ) {\n    return a - b * sin( 0.4 * 1. * PI*(c*t - d) ) * sin( 0.38 * 1.*PI*(c*n + d) );\n}\n\n//z*(z-1)/(z - mouse)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n  vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x);\n  vec2 z = uv;\n  \n  //float angle = sin(iTime/60.) * 2. * PI;\n  //float angle = 0.;\n  \n  float angle = mod(iTime, 10.)/10. * 2. * PI;\n  float length = .4;\n  float length1 = .25;\n  \n  float angle1 = mod(iTime, 60.)/60. * 2. * PI;\n\n  float c = cos(angle);\n  float s = sin(angle);\n  \n  float c1 = cos(angle1);\n  float s1 = sin(angle1);\n  \n  vec2 p = vec2( s*+length, c*+length );\n  vec2 q = vec2( 0., 0.);\n  vec2 w = vec2( s1*+length1, c1*+length1 );\n\n  vec2 division = cx_div((z - p), (z - q));\n  vec2 d = cx_div( (z - w), (z - q));\n\n  vec2 log_p_over_q = cx_log(division);\n  \n  vec2 log_w = cx_log(d);\n\n  float imaginary = log_p_over_q.y / PI;\n  \n  float imaginary1 = log_w.y / PI;\n\n  ///vec3 col = palette( imaginary, vec3(0.50,.52,0.53), vec3(.46,.32,.35), vec3(.82,.84,.65), vec3(0.53,0.23,0.22));\n  \n  vec3 co = palette1( imaginary, imaginary1, vec3(0.50,.52,0.53), vec3(.86,.32,.35), vec3(.82,.84,.65), vec3(0.2,0.23,0.22));\n\n  fragColor = vec4(co, 1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}