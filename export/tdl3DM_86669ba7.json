{"ver":"0.1","info":{"id":"tdl3DM","date":"1546555775","viewed":73,"name":"LH Cylinder flower by formula","username":"andrzej","description":"Based on\nhttps://realtimevfx.com/t/shannon-berke-lol-fx-knowledge-share/1133/201","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math","flower","coordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nvoid tex(out float col, in vec2 fragCoord)\n{\n    float x = mod(5.0 * fragCoord.x, 1.0) - 0.5;\n\tfloat y = 0.3*(1.9 / (abs(3.0*x)+1.0) + 0.7 * sin(abs(3.0*x)) - 0.2) - 0.3;\n    \n    col = 0.0;\n    if (fragCoord.y < y)\n    {\n        col = sin(10.0 * fragCoord.y);\n    }\n}\n\nvoid toCircleCoord(out vec2 circleCoord, in vec2 uv, in float scale)\n{              \n    vec2 center = vec2(0.5, 0.5);\n    vec2 direction = vec2(1.0, 0.0);\n    vec2 normalizedPointCoord = normalize(uv - center);\n    float pointAngle = acos(dot(direction, normalizedPointCoord)) / (2.0 * PI);\n    float dist = distance(center, uv);\n    vec4 color = vec4(0.0);\n    circleCoord = vec2(pointAngle, scale * dist);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float col = 0.0f;\n    vec2 cc = vec2(0.0);\n    \n    toCircleCoord(cc, uv, 1.5);\n    cc = vec2(cc.x, -0.3 + cc.y + ((1.0 + sin(iTime)) / 2.0) * 0.5 );\n    tex(col, vec2(cc.x, cc.y));\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}