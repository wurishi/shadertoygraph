{"ver":"0.1","info":{"id":"wstcz7","date":"1600706024","viewed":467,"name":"Fake \"3d\" Texture","username":"MilkyDeveloper","description":"Texture - Edge Detection = This :D","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["3d","texture","fake","bump","mapping","pom","parralax"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Meant to be used in a Minecraft Bedrock Shader.\n// This is CC0, but please consider basic human ethics :D\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 color = texture(iChannel0, fragCoord.xy / iResolution.xy).rgb;\n    \n    vec2 mouse = vec2(iMouse)/vec2(iResolution);\n    \n    // Edge Detection from https://www.shadertoy.com/view/3s3Gz8\n    // I find it accurate, fast, and simple.\n    float AMP = 1.5;\n    \n\tvec3 Lx = dFdx(color*AMP);\n\tvec3 Ly = dFdy(color*AMP);\n\tvec3 G = sqrt(Lx*Lx+Ly*Ly);\n\t\n    // Selected Texture ðŸ‘‡. Offset ðŸ‘‡-------ðŸ‘‡.ðŸ‘‡ -> Edge Detection Shadows\n\tfragColor = texture(iChannel0, uv-(0.005))-vec4(G.xyz, 1.0);\n}","name":"Image","description":"","type":"image"}]}