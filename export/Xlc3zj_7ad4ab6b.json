{"ver":"0.1","info":{"id":"Xlc3zj","date":"1474849753","viewed":409,"name":"haunted","username":"wombleman","description":"warping lvl1","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["warping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//-----constants-----//\nconst int PUDDLES = 0, PLAD = 1, HORIZONTAL_WAVES = 2, VERTICAL_WAVES = 3;\n\n//-----user paramaters-----//\nvec3 COLOR_A = vec3(0.3,0.3,0.3), COLOR_B = vec3(0.8,0.8, 0.8), COLOR_C = vec3(0.01,0.01,0.01);\nfloat SPEED_A = 0.05, SPEED_B = -0.05, REC_MULT = 2.2;\nint VARIANT = PUDDLES;\nvec3 FBM_Ws_FROM = vec3(1.0,2.0,4.0), FBM_Ws_TO = vec3(1.0);  float BLEND_T = 20.0, START_T=20.0;\nconst int RECURSIONS = 0, ROTATIONS = 10, DEGREE = 3;\nconst bool VIGNETTE = true, SHARPEN = true;\n\n//-----initialized varaibles-----//\nmat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat fbm_w(int i){\n    float t = smoothstep(START_T,START_T+BLEND_T,iTime);\n\tif (i==0) return mix(FBM_Ws_FROM.x, FBM_Ws_TO.x, t);\n    if (i==1) return mix(FBM_Ws_FROM.y, FBM_Ws_TO.y, t);\n    if (i==2) return mix(FBM_Ws_FROM.z, FBM_Ws_TO.z, t);\n}\n\nfloat hash( vec2 p )\n{    \n\tfloat h = dot(p,vec2(127.1,311.7));\n    return -1.0 + 2.0*fract(sin(h)*43758.5453123);\n}\n\n\nfloat bilinear( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n    vec2 f_pow = f;\n    for (int i = 0; i < DEGREE - 1; i++){\n        f_pow *= f;\n    }\n\tvec2 u = f_pow * (3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat fbm_helper( in vec2 p )\n{\n\tfloat f = 0.0;\n    float accum = 0.0;\n    for (int i = 0; i < ROTATIONS; i++){\n        float w = pow(0.5,float(i));\n        accum += w;\n        f += w * bilinear(p);\n        p = m * p * REC_MULT;\n        \n    }\n    return f / accum;\n}\n\nvec2 fbm( vec2 p )\n{\n    if (VARIANT == PUDDLES){\n    \treturn vec2(fbm_helper(p.xy), fbm_helper(p.yx));\n    }\n    else if (VARIANT == PLAD){\n    \treturn vec2(fbm_helper(p.xx), fbm_helper(p.yy));\n    }\n    else if (VARIANT == HORIZONTAL_WAVES){\n    \treturn vec2(fbm_helper(p.xy), fbm_helper(p.yy));\n    }\n    else if (VARIANT == VERTICAL_WAVES){\n    \treturn vec2(fbm_helper(p.xy), fbm_helper(p.xx));\n    }  \n}\n\nvec3 map(vec2 p)\n{   \n    //color(p) = fbm(p + fbm(p + fbm(p + time))) \n    float f = dot( fbm(fbm_w(0) * (SPEED_A*iTime + p + fbm(SPEED_B * iTime+fbm_w(1)*(p + fbm(fbm_w(2)*p))))), \n                  vec2(1.0,-1.0) );\n\n    float wA_B = smoothstep( -0.8, 0.8, f ), wAB_C = smoothstep( -1.0, 1.0, fbm_helper(p) );\n    return mix(mix(COLOR_A,COLOR_B, wA_B),COLOR_C,wAB_C);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //set up rotation M\n    float a = 2.0 * 3.141 / float(ROTATIONS);\n    float ca = cos(a), sa = sin(a);\n    m = mat2(ca,  sa, -sa,  ca);\n    \n    \n    vec2 p = (-iResolution.xy+2.0*fragCoord.xy)/iResolution.y;\n    vec3 col = map(p);\n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec4 tex = texture(iChannel0, uv);\n    float w = mix(0.1,0.5,dot(tex.xyz,vec3(0.333)));\n    vec3 mixer = vec3(uv,0.5+0.5*sin(iTime));\n    \n    if (SHARPEN){\n        float e = 0.0045;\n\n   \t    vec3 colc = map( p               ); float g = dot(colc,vec3(0.333));\n        vec3 cola = map( p + vec2(e,0.0) ); float dx = dot(cola,vec3(0.333));\n        vec3 colb = map( p + vec2(0.0,e) ); float dy = dot(colb,vec3(0.333));\n\n        col = colc;\n        float t = smoothstep(0.0,START_T,iTime);\n        col += t*mixer*3.0*abs(2.0*g-dx-dy);\n    }\n    \n    \n    if (VIGNETTE){\n        col *= pow(16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y),0.1); \n    }\n    \n    //col = mix(col,mixer,w);\n    fragColor = vec4(col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}