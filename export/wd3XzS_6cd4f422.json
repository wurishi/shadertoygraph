{"ver":"0.1","info":{"id":"wd3XzS","date":"1572254789","viewed":2095,"name":"Audio-Visualizer","username":"CoolerZ","description":"A simple shader to visualize audio.","likes":11,"published":1,"flags":64,"usePreview":0,"tags":["musicaudiovisualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"lts3Wf","filepath":"https://soundcloud.com/top_knot/feel-the-bass","previewfilepath":"https://soundcloud.com/top_knot/feel-the-bass","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sigmoid(float x)\n{\n    return 1. / (1. + exp(x));\n}\n\nvec3 sigmoid(vec3 xyz)\n{\n    return vec3(sigmoid(xyz.x), sigmoid(xyz.y), sigmoid(xyz.z));\n}\n\nfloat sample_at(float f)\n{\n    return texture(iChannel0, vec2(f / 16.0, 0.)).x;\n}\n\nfloat sample_multiple(float f)\n{\n    float delta = .1;\n    return 0.2 * (sample_at(f - 2. * delta) + sample_at(f - delta) + sample_at(f) + sample_at(f + delta) + sample_at(f + 2. * delta));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5) / iResolution.xy;\n    uv = 2. * uv - 1.;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec2 center = vec2(0.);// 0.5 * vec2(cos(iTime), sin(iTime));\n    float d = length(uv - center);\n\n    float amplitude = sample_multiple(d * d);\n    d -= amplitude;\n    float weird = sigmoid(abs(uv.x) * abs(uv.y));\n    float speed = 6. * amplitude * sin(iTime * weird * 0.005) * 0.001;\n    float dist_diagonal = abs(abs(uv.x) - abs(uv.y));\n    dist_diagonal += d * amplitude;\n    dist_diagonal *= dist_diagonal;\n    amplitude += .1 / (.1 + smoothstep(1., 0.1, dist_diagonal));\n    float brightness = 3. * amplitude * sigmoid(sin(d * d * 16. - speed * iTime + 2. * speed * amplitude));\n\n    vec3 col = sigmoid(vec3(uv, sin(iTime)));\n\n    fragColor = vec4(col * brightness,1.0);\n}","name":"Image","description":"","type":"image"}]}