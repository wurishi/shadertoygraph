{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"//#define fizzer\t\t// :D\n\n#define marchsteps 90\n\nfloat tnoise(vec3 p) {\n\tfloat nz=p.z*64.0;\n\tvec2 oz=vec2(0.321,0.123);\n\tvec2 uv1=p.xy+oz*floor(nz);\n\tvec2 uv2=uv1+oz;\n\treturn mix(texture(iChannel0, uv1.xy, -100.).x, texture(iChannel0, uv2.xy, -100.).x, fract(nz)-0.5);\n}\n\n\nvec2 opU(vec2 a, vec2 b) {\n\treturn mix(a, b, step(b.x, a.x));\n}\n\nfloat pyramid( vec3 p, float h) {\n\tvec3 q=abs(p);\n\treturn max(-p.y, (q.x+q.y+q.z-h)/3.0 );\n}\n\nfloat terrain(vec3 p) {\n\treturn p.y - 0.1 - p.z*p.z*0.001 + p.x*atan(p.x)*0.035 + sin(p.x)*sin(p.z)*0.15 ;\n}\n\nvec2 map(vec3 p) {\n\t\n\tvec2 ret=vec2(pyramid(p,1.0),1.0);\n\tret=opU(ret, vec2(pyramid(p-vec3(-2.0,0.0,1.0),1.0),1.0) );\n\tret=opU(ret, vec2(pyramid(p-vec3(-0.75,0.0,2.5),1.0),1.0) );\n\tret=opU(ret, vec2(pyramid(p-vec3(1.5,0.0,1.5),1.5),1.0) );\n\n\tret=opU(ret, vec2( terrain(p), 2.0));\n\t\n\treturn ret;\n}\n\nvec3 normal(vec3 p ) {\n\tvec3 e=vec3(0.01,-0.01,0.0);\n\treturn normalize( vec3(\te.xyy*map(p+e.xyy).x +\te.yyx*map(p+e.yyx).x +\te.yxy*map(p+e.yxy).x +\te.xxx*map(p+e.xxx).x));\n}\n\n// \t\t   ray ori\tray dir\t start    max dist steps  hit ori\nvec2 march(vec3 ro, vec3 rd, float s, float d, int e, out vec3 ho) {\n\tvec2 r=vec2(0.0);\n\tfor(int i=0; i<marchsteps; i++) {\n\t\tho=ro+rd*s;\n\t\tr=map(ho);\n\t        if((abs(r.x) < 0.01) || (r.x > d) || (i > e))  { break; }\n\t\ts+=r.x;\n\t}\n\tif (s >= d) { r.y=0.0; }\n\tr.x=s;\n\treturn r;\n}\n\nfloat cao(vec3 pos, vec3 nor ){\n\tfloat totao = 0.0;\n\tfloat sca = 1.0;\n\tfor (int i=0; i<10; i++) {\n        \tfloat hr = 0.01 + 0.05*float(i);\n        \tvec3 aopos =  nor * hr + pos;\n        \tfloat dd = map( aopos ).x;\n        \ttotao += -(dd-hr)*sca;\n        \tsca *= 0.75;\n    \t}\n    return clamp( 1.0 - 4.0*totao, 0.0, 1.0 );\n}\n\nfloat csh( in vec3 ro, in vec3 rd, in float mint, in float maxt, in float k ) {\n    float res = 1.0;\n    float dt = 0.02;\n    float t = mint;\n    for( int i=0; i<10; i++ ) {\n        float h = map( ro + rd*t ).x;\n        res = min( res, k*h/t );\n        t += max( 0.05, dt );\n    }\n    return clamp( res, 0.0, 1.0 );\n}\n\n\nvec3 shade(vec3 rgb, vec3 ro, vec3 rd, vec3 nor, vec3 lig, vec3 ho ) {\n\tfloat amb =0.2*nor.y;\t\t\n\tfloat dif =0.5*clamp(dot(nor, lig), 0.0,1.0);\n\tfloat bac =0.1*clamp(dot(nor,-lig), 0.0,1.0);\n\tfloat rim =0.3*pow(1.+dot(nor,rd), 5.0);\n#ifdef fizzer\n\tfloat spe =0.0;\n#else\t\n\tfloat spe =0.5*pow(clamp( dot( lig, reflect(rd,nor) ), 0.0, 1.0 ) ,16.0 );\n#endif\n\tfloat ao=cao(ho, nor);\n\tfloat sh=csh(ho, lig, 0.05, 4.0, 4.0);\n\t\n\tvec3 col  = (amb+dif+ao+bac+sh)*vec3(1.);\n\t\t col *= rgb;\n\t\t col += (rim+spe)*vec3(1.);\n\n    return col;\n}\n\nvec3 getmat(vec2 o, vec3 uvw) {\n\tvec3 col=vec3(0.0);\n\tif (o.y==1.0) { \n\t\t\tcol=vec3(0.6,0.37,0.18); \n\t\t\tcol=mix(col, texture(iChannel1, uvw.xy*4.0, -100.).xyz, 0.5 );\n\t\t\tcol=mix(col,vec3(1.0)*tnoise(uvw)*.6, 0.25 );\n\t}\n\tif (o.y==2.0) { \n\t\t\tcol=vec3(0.6,0.37,0.18); \n\t\t\tcol=mix(col,vec3(1.0)*tnoise(uvw), 0.25 );\n\t\t\t\n\t}\n//\tif (o.y==3.0) { col=vec3(0.0,0.0,1.0); }\n\treturn col;\t\n}\n\nvec3 fog(vec3 col, float d, vec3 p ) {\n\tfloat n=smoothstep(-0.15,0.4,terrain(p));\n\tfloat fog=exp(-0.05 * d*d);\n#ifdef fizzer\n\treturn mix(vec3(0.85,0.85,0.85)*0.2, col, n*fog);\n#else\n\treturn mix(vec3(0.85,0.85,0.85), col, n*fog);\n#endif\n}\n\n\n\nvec3 getbg(vec3 rd) {\n#ifdef fizzer\n\tfloat v=pow(1.0-max(rd.y,0.0),10.);\n\tvec3 sky=mix( vec3(0.6,0.8,0.9), vec3( 1.0, 1.0, 1.0), v)*0.5;\n#else\n\tfloat v=pow(1.0-max(rd.y,0.0),6.);\n\tvec3 sky=mix( vec3(0.6,0.8,0.9), vec3( 1.0, 1.0, 1.0), v);\n#endif\n\t//sun\n\t\n\t//this sun looks really crappy\n\n\tif(rd.z<0.0) {\n\t\tfloat a=atan(rd.x,rd.y);\n\t\tfloat r = length(rd.xy) *4.0;\n\t\t\n  \tfloat b = 0.9 * sin(.0 * r - 3.0*iTime - 6.0*a);\n  \tb = 0.4 / r + cos(10.0 * a + b ) / (350.0 * r);\n\tb = b * smoothstep(0.5, 1.2,b);\n\n#ifdef fizzer\n\tvec3 sun=vec3(1.0,1.0,0.7)*b;\n#else\t\t\n\tvec3 sun=vec3(0., 0., 2.2) - vec3(b,b,b);\n  \tsun.xy=1.-sun.xy;\n#endif\n\t\t\n\tsky=mix(sky,sun,b);\n\t\t\n\t}\n\n\t\n\treturn clamp(sky, 0.0, 1.0);\n}\n\nvec2 rot(vec2 k, float t) {\n    return vec2(cos(t)*k.x-sin(t)*k.y,sin(t)*k.x+cos(t)*k.y);\n}\n\n\nvoid animate(inout vec3 ta, inout vec3 ro, inout vec3 lig) {\n\tfloat t=iTime*0.25;\n\n\tta.x -= sin(t)*1.7;\n\tta.z += cos(t)*0.8;\n\n\tro.z += cos (t)*2.;\n\tro.xz=rot(ro.xz, t );\n\t\n\tro.y+=sin(t)*0.5;\n\t\n\tlig.z -= cos(t)*2.;\n\tlig.xz=rot(lig.xz, -t );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n\tvec2 q = fragCoord.xy / iResolution.xy;\n    vec2 p = -1.0 + 2.0 * q;\n    p.x *= iResolution.x/iResolution.y;\n\n\tvec3 ta = vec3(0.0, 0.0, 1.0);\n\tvec3 ro = vec3(0.0, 1.2, -3.5);\n\tvec3 lig=normalize(vec3(0.0, 1.2, 3.5));\n\tanimate(ta,ro,lig);\n\tvec3 ww = normalize( ta - ro );\n    vec3 uu = normalize( cross(ww,vec3(0.0,1.0,0.0) ) );\n    vec3 vv = normalize( cross(uu,ww));\n\tvec3 rd = normalize( p.x*uu + p.y*vv + 2.5*ww );\n\n\t\n\t\n\tvec3 ho;\n\tvec2 o=march(ro,rd,0.0,30.0,marchsteps, ho);\n\t\n\tvec3 col=vec3(1.0);\n\n\tif (o.y<0.5) {\n\t\tcol=getbg(rd);\n\t\to.x=(iResolution.y-fragCoord.y)*0.3;\n\t} else {\n\t\tvec3 nor=normal(ho);\t\n\t\tcol=getmat(o,ho);\n\t\tcol=shade(col, ro, rd, nor, lig, ho);\n\t\t\n\t\tcol=fog(col,o.x, ho);\n\t}\n\t\n\tcol*=exp(.01*o.x); col*=1.1;\n\n\tfragColor=vec4( col, 1.0);\n}\t\t ","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsBGzG","date":"1389929765","viewed":1024,"name":"pyramids","username":"avix","description":"playing with fog...\nand yes..i know...sun is bad","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["3d","fog","textures"],"hasliked":0,"parentid":"","parentname":""}}