{"ver":"0.1","info":{"id":"wtdfz8","date":"1612269891","viewed":277,"name":"Serpents ","username":"YitingLiu","description":"Creating the evil moving snake","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["noise","texture","evil","snake","truchet","flow","floor","mask","angle","fract","width"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// created by Yiting Liu 2021\n// www.yitingliu.com\n\nfloat Hash21(vec2 p){\n    p = fract(p*vec2(234.34,435.345));\n    p += dot(p, p+34.23);\n    return fract(p.x*p.y);\n\n\n\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 UV = fragCoord/iResolution.xy;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col =vec3(0);\n    \n    uv*=4.;\n    uv+=iTime*0.5;\n    vec2 gv = fract(uv)-0.5;\n    vec2 id = floor(uv);//checking each box \n    \n    float n = Hash21(id);// random number between 0 to 1 \n    \n    float width =0.3*UV.y;\n    \n    if(n<.5) gv.x*=-1.;//reverse tiling depending on the random num\n    float d = abs(abs(gv.x+gv.y));\n    vec2 cUv =gv-0.5*sign(gv.x+gv.y+0.001); // give -PI to PI \n    d = length(cUv);\n    // sign returns 1 when x is positive, -1 when x is negative, 0 when x is 0\n    \n    float mask = smoothstep(.01,-.01,abs(d-.5)-width);\n    float angle = atan(cUv.x, cUv.y);\n    float checker = mod(id.x+id.y,2.)*2.-1.;\n    float flow = sin( iTime+checker*angle*10.);\n    //col+=flow*mask;// checker allows it to flow consistently - works with quart truchet\n    //col+=n;\n    \n    float x = fract(checker*angle/1.57-iTime*0.5); //divide by half PI - get the range from 0 to 1 by using fract \n    float y = (d-(.5-width))/(2.*width);\n    y = abs(y-.5)*2.;\n    vec2 tUv = vec2(x,y);\n    col.rb+=1.-tUv/mask;\n    \n    // apply any texture\n    col *=texture(iChannel0,tUv).rgb*mask;\n\n    col +=texture(iChannel1,tUv).rgb-mask;\n    col +=1.-tUv.y;\n    //if(gv.x>.48||gv.y>.48) col=vec3(1,0,0);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}