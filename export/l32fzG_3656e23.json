{"ver":"0.1","info":{"id":"l32fzG","date":"1729627436","viewed":69,"name":"Blinn-Phong vs. Vanilla Phong","username":"chriszhang8390","description":"A sphere with optional vanilla phong or blinn-phong shading.\nFor display purposes, you can see the highlight difference between the two.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["phong","blinn"],"hasliked":0,"parentid":"XlXGDj","parentname":"Blinn Phong"},"renderpass":[{"inputs":[],"outputs":[],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvec3 ambientColor = vec3(0.05, 0.15, 0.2);\nvec3 diffuseColor = vec3(0.2, 0.6, 0.8);\nvec3 specularColor = vec3(1.0, 1.0, 1.0);\nvec3 lightDir = normalize(vec3(0.0, 4.0, 5.0));\nvec3 spherePos = vec3(0.0, 0.5, 0.0);\n\n#define VANILLA_PHONG 0\n#define BLINN_PHONG 1\nint shading_model = VANILLA_PHONG;\n\nfloat raytraceSphere(in vec3 ro, in vec3 rd, float tmin, float tmax, float r) {\n    vec3 ce = ro - spherePos;\n    float b = dot(rd, ce);\n    float c = dot(ce, ce) - r * r;\n    float t = b * b - c;\n    if (t > tmin) {\n        t = -b - sqrt(t);\n        if (t < tmax)\n            return t;\n        }\n    return -1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (-iResolution.xy + 2.0 * fragCoord.xy) / iResolution.y;\n    vec3 eye = vec3(0.0, 1.0, 2.0);\n    vec2 rot = 6.2831 * (vec2(0.1 + iTime * 0.25, 0.0) + vec2(1.0, 0.0) * (iMouse.xy - iResolution.xy * 0.25) / iResolution.x);\n    eye.yz = cos(rot.y) * eye.yz + sin(rot.y) * eye.zy * vec2(-1.0, 1.0);\n    eye.xz = cos(rot.x) * eye.xz + sin(rot.x) * eye.zx * vec2(1.0, -1.0);\n\n    vec3 ro = eye;\n    vec3 ta = vec3(0.0, 0.5, 0.0);\n\n    vec3 cw = normalize(ta - eye);\n    vec3 cu = normalize(cross(vec3(0.0, 1.0, 0.0), cw));\n    vec3 cv = normalize(cross(cw, cu));\n    mat3 cam = mat3(cu, cv, cw);\n\n    vec3 rd = cam * normalize(vec3(p.xy, 1.5));\n\n    vec3 color;\n\n    float tmin = 0.1;\n    float tmax = 50.0;\n    float t = raytraceSphere(ro, rd, tmin, tmax, 1.0);\n    if (t > tmin && t < tmax) {\n        vec3 pos = ro + rd * t;\n        vec3 norm = normalize(pos - spherePos);\n        float occ = 0.5 + 0.5 * norm.y;\n\n        float amb = clamp(0.5 + 0.5 * norm.y, 0.0, 1.0);\n        float dif = clamp(dot(lightDir, norm), 0.0, 1.0);\n\n        float spe = 0.;\n        vec3 v = -rd; // From shading point to eye\n        vec3 l = lightDir; // from shading point to light\n        if (shading_model == BLINN_PHONG) {\n            vec3 h = normalize(v + l);\n            spe = pow(clamp(dot(h, norm), 0.0, 1.0), 64.0);\n        } else if (shading_model == VANILLA_PHONG) {\n            vec3 r = reflect(-l, norm);\n            spe = pow(clamp(dot(r, v), 0.0, 1.0), 64.0);\n        }\n\n        color = amb * ambientColor * occ;\n        color += dif * diffuseColor * occ;\n        color += dif * spe * specularColor * occ;\n    }\n\n    vec3 gamma = vec3(1.0 / 2.2);\n    fragColor = vec4(pow(color, gamma), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}