{"ver":"0.1","info":{"id":"NtyfDm","date":"1664579062","viewed":123,"name":"Chladni patterns","username":"frecio231","description":"A simple Chladni pattern generator, based on the latest video from Steve Mould","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tiled","psychodelic","step","chladni"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: Fernando Recio\n// Title: Chladni patterns\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n\nconst float PI = 3.1415926535;\nconst float thickness = 0.09;\nconst float speed = 0.1;\n\n\nvec3 palette(float t){\n\n    vec3 a = vec3(0.668, 0.808 ,0.048);\n    vec3 b = vec3(-0.696, -0.260 ,-0.472);\n    vec3 c = vec3(0.848, 1.298, -0.132);\n    vec3 d = vec3(0.000, 0.738, -0.202);\n    \n    return a + b*cos(6.28318*(c*t + d));\n}\n\n\nfloat figura(vec2 uv, float n, float m){\n    //Regresa el valor que tiene \n    float s = (cos(n*PI*uv.x)*cos(m*PI*uv.y) - cos(m*PI*uv.x)*cos(n*PI*uv.y));\n    //return step( -thickness, s) - step(thickness, s) ;\n    return s;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Generating the UV coordinates\n    vec2 st = (fragCoord * 2.0 -iResolution.xy) / iResolution.y;\n    \n    vec2 uv = 2.0*st;\n    uv -= 0.50;\n     \n    float d = length(st);\n    d = sin(d*2.- iTime);\n    d = abs(d);\n    d = smoothstep(0.3, 1. ,d);\n    \n    \n    float c = figura(st, 3.0, 6.*sin(iTime));\n    vec3 col = palette(c - d*iTime);\n    \n    c = abs(c);\n    c = 0.02/c;\n    c = (pow(c, 1.5));\n    col*=c*d;\n    \n    //Generating the base color\n    //vec3 color = vec3(abs(st) * figura(st, 13.0+2.0*sin(speed*iTime), 1.0+cos(speed*iTime)), 0.5);\n    //Rendering the base color\n    fragColor = vec4(col,1);\n    \n    //Useful for checking good patterns\n    //float c = figura(st, 13.0, 1.0);\n    //fragColor = vec4(vec3(c * abs(st), 0.5), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}