{"ver":"0.1","info":{"id":"MtjBWc","date":"1517443616","viewed":240,"name":"fireflies","username":"ShadowX","description":"camera+raymarching","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define mf(a) min(fract(a),1.-fract(a))\n\nfloat map(vec3 p, float r)\n{\n    return length(2.*fract(p)-1.) - r;\n}\n\nfloat trace(vec3 ro, vec3 rd, vec3 o, float r)\n{\n    float t = 0.;\n    for(int i = 1; i<=32; i++)\n    {\n        vec3 p = ro + rd*t;\n        float d = map(p+o,r);\n        t += d*.5;\n    }\n   return 1./t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\tuv = uv * 2. - 1.;\n    uv.x *=iResolution.x/iResolution.y;\n    \n    float t = iTime/5.;\n    float z = 1.;\n    \n    vec3 cp = vec3(3.*sin(t),sin(t),-3.*cos(t));\n    vec3 ct = vec3(0.,cos(t),0.);\n    \n    \n    vec3 f = normalize(ct-cp);\n    vec3 r = cross(vec3(0.,1.,0.),f);\n    vec3 u = cross(f, r);\n    \n    vec3 c = cp + f * z; \n    vec3 i = c + uv.x*r + uv.y*u;\n    \n    vec3 rd = i-cp;   \n    \n    vec3 col = vec3(0.);\n    for(float i=1.; i<=4.; i++)\n    {   \n      col += vec3(trace(cp,rd, vec3(sin(t*i)/2.,cos(t*i)/2.,0.),.05+(.05*sin(iTime+i*45.))));\n    }\n    float tx = sin(t)/2.+.5;\n    col.r -= mf(col.r*1.*sin(2.*t)/2.+.5)/1.2;\n    col.g -= mf(col.g*1.*sin(3.*t+120.)/2.+.5);\n    col.b -= mf(col.b*1.*sin(5.*t+240.)/2.+.5)/1.4;\n//col = mf(col);\n    fragColor = vec4(col*3.,1.0);\n}","name":"Image","description":"","type":"image"}]}