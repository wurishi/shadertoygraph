{"ver":"0.1","info":{"id":"fssGz2","date":"1616279747","viewed":70,"name":"MCGL armor","username":"puux","description":"MCGL enchant armor","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["glint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash( vec2 p)\n{\n    vec3 p2 = vec3(p.xy,1.0);\n    return fract(sin(dot(p2,vec3(37.1,61.7, 12.4)))*758.5453123);\n}\n\nfloat noise(in vec2 p)\n{\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    f *= f * (3.0-2.0*f);\n\n    return mix(mix(Hash(i + vec2(0.,0.)), Hash(i + vec2(1.,0.)),f.x),\n               mix(Hash(i + vec2(0.,1.)), Hash(i + vec2(1.,1.)),f.x),\n               f.y);\n}\n\nfloat fbm(vec2 p)\n{\n     float v = 0.0;\n     v += noise(p*1.)*.100;\n     v += noise(p*2.)*.025; // .25\n     v += noise(p*4.)*.125;\n     v += noise(p*8.)*.0625;\n     return v;\n}\n\nmat2 rotation2dX(float angle) {\n\tfloat s = sin(angle);\n\tfloat c = cos(angle);\n\n\treturn mat2(\n\t\tc, s,\n\t\t-s, c\n\t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float angle = 10.;\n    vec2 uvR = uv * rotation2dX(angle);\n    \n    float res = 5.;\n    vec2 v = vec2(uvR.x * res + iTime);\n    float k = clamp(fbm(v), .1, 1.) - .1; \n    k = k * 3.;\n    vec3 col = vec3(k, k, k);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}