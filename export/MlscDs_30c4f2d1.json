{"ver":"0.1","info":{"id":"MlscDs","date":"1507053448","viewed":507,"name":"Basic : Heat Equation","username":"Gijs","description":"Solving heat equation using Euler Forward and Nine Point Stencil","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["simulation","heat","numerical","euler","forward"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tfragColor = texelFetch(iChannel0,ivec2(fragCoord),0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){  \n\n    if(distance(iMouse.xy,fragCoord)<10.){\n        fragColor = vec4(1.);\n\n    }else{\n        \n   \t\tvec4 T = texelFetch(iChannel0,ivec2(fragCoord),0);\n        vec4 L = getLaplacian(iChannel0,ivec2(fragCoord));\n\n        fragColor = T + L*dt;\n\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float dx = 0.2;\nconst float dt = dx*dx*.5;\n\nvec4 getLaplacian(sampler2D g, ivec2 p){\n    vec4 middle    = texelFetch(g,p,0);   \t\n    vec4 up        = texelFetch(g,p+ivec2( 0, 1),0);\n    vec4 down      = texelFetch(g,p+ivec2( 0,-1),0);\n    vec4 right     = texelFetch(g,p+ivec2( 1, 0),0);\n    vec4 left      = texelFetch(g,p+ivec2(-1, 0),0);\n    vec4 upright   = texelFetch(g,p+ivec2( 1, 1),0);\t\n    vec4 upleft    = texelFetch(g,p+ivec2(-1, 1),0);\n    vec4 downright = texelFetch(g,p+ivec2( 1,-1),0);\n    vec4 downleft  = texelFetch(g,p+ivec2(-1,-1),0);\n        \n   \treturn (-8.*middle + up + left + right + down + upright + upleft + downright + downleft)/(3.*dx*dx);  \n}","name":"Common","description":"","type":"common"}]}