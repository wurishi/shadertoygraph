{"ver":"0.1","info":{"id":"cldXzM","date":"1685187469","viewed":1459,"name":"Shader Art Intro Golf [227chars]","username":"kishimisu","description":"Based on my youtube tutorial: [url]https://youtu.be/f4s1h2YETNY[/url]","likes":37,"published":3,"flags":0,"usePreview":0,"tags":["fractal","sdf","tutorial","intro","repetition","code","code","youtube","tuto","short","golf","golfing","creative"],"hasliked":0,"parentid":"mtyGWy","parentname":"Shader Art Coding Introduction"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Golfed version of my previous shader https://www.shadertoy.com/view/mtyGWy\n   I also simplified 6.28318 (2*PI) to 6. which slightly offsets the colors.\n   \n[533 -> 227 chars] */\nvoid mainImage(out vec4 O, vec2 F) {\n    vec2  R = iResolution.xy,\n          u = (F+F-R) / R.y;\n    float i,  l = length(u);\n    \n    for (O *= i; i++ < 4.;\n         \n         O += pow(.04 / \n                 abs(\n                     sin(\n                         8. * ( length( u = fract(u * 1.5) - .5 ) / exp(l) ) \n                         + iTime\n                        ) // sin\n                    )  // abs\n              , 1.2) // pow\n              \n              * (1. + cos(6. * ( l + (i + iTime)*.4 + vec4(.26,.4,.56,0) )))\n    );\n}","name":"Image","description":"","type":"image"}]}