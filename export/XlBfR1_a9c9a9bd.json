{"ver":"0.1","info":{"id":"XlBfR1","date":"1514479662","viewed":686,"name":"Texture offset wrapping","username":"luluco250","description":"Should prevent precision problems...hopefully.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","time","uv","coordinates","wrap","offset","wrapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define wrap(x, _min, _max) (_min + mod(_max - _min + mod(x - _min, _max - _min), _max - _min))\n\nvoid mainImage(out vec4 color, vec2 coord) {\n    vec2 uv = coord / iResolution.xy;\n    uv += wrap(iTime * 0.5, 0.0, 1.0);\n    color = texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"}]}