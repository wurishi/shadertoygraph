{"ver":"0.1","info":{"id":"lft3D4","date":"1711729086","viewed":51,"name":"mendelbrot","username":"anisometropie","description":"mendelbrot set","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int DEPTH = 100;\n\nfloat map(float value, float start1, float stop1, float start2, float stop2) {\n    return start2 + (value - start1) * (stop2 - start2) / (stop1 - start1);\n}\n\nvec2 squareComplex(vec2 z) {\n    float x = z.x * z.x - z.y * z.y;\n    float y = 2.0 * z.x * z.y;\n    return vec2(x,y);\n}\n\nfloat modulusComplex(vec2 z) {\n    return sqrt(z.x * z.x + z.y * z.y);\n}\n\nint iterate(vec2 z) {\n    int n = 0;\n    vec2 cur = vec2(0,0);\n    while (modulusComplex(cur) < 2.0 && n <= DEPTH) {\n        cur = squareComplex(cur) + z;\n        n += 1;\n    }\n    return n;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv;\n    uv.x = map(fragCoord.x, 0.0, iResolution.x, -2.0, 1.0);\n    uv.y = map(fragCoord.y, 0.0, iResolution.y, -1.0, 1.0);\n    int n = iterate(uv);\n    if (n >= DEPTH) {\n        fragColor = vec4(0, 0, 0 ,1);\n    } else {\n        float intensity = map(float(n), 0.0, float(DEPTH), 0.0, 1.0);\n        fragColor = vec4(intensity, 0.0, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}