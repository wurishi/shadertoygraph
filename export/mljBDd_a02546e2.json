{"ver":"0.1","info":{"id":"mljBDd","date":"1694637746","viewed":34,"name":"t4_rounded_box","username":"_gamma_001","description":"rouned box with shadow, no offset","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shadow","roundedbox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define E 2.71828\n#define INSET 0x01000001\n#define OUTSET 0x01000002\n#define FULL 0x01000003\n\nfloat smax(float a, float b) {\n    float alpha = 10.0;\n    float x1 = pow(E, alpha * a);\n    float x2 = pow(E, alpha * b);\n    \n    return log(x1 + x2) / alpha;\n}\n\nfloat dropshadow(float a, float b, float x, int type) {\n    if (type == INSET) {\n        if (x > 0.0) x = smoothstep(0.005, 0.01, x);\n    }\n    else if (type == OUTSET) {\n        x -= 0.005;\n        if (x < 0.0) x = smoothstep(0.0, 0.01, abs(x));\n    }\n    \n    x = abs(x);\n    x = clamp((x - a) / (b - a), 0.0, 1.0);\n    \n    return 1.0 / (1.0 + pow(E, -10.0*x + 0.5));\n}\n\nfloat sdfBox(vec2 pos, float a, float b, float r) {\n    pos = abs(pos) - vec2(a, b) + r;\n    \n    return (\n        min(pos.x, pos.y) > 0.0 \n        ? length(pos) \n        : max(pos.x, pos.y)\n    ) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float fac = 0.5 * sin(iTime) + 0.5;\n    int offset = int(floor(iTime / 3.0)) % 3;\n\n    vec3 color = vec3(1.0);\n    float box = sdfBox(uv, 0.5, 0.25, 0.05 + 0.2 * fac);\n    float shadow = dropshadow(0.0, 0.2, box, INSET + offset + 1);\n    box = smoothstep(0.0, 0.01, box);\n\n    color = mix(vec3(0.9, 0.1, 0.2), color, box);\n    color = mix(vec3(0.3), color, shadow);\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}