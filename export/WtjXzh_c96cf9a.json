{"ver":"0.1","info":{"id":"WtjXzh","date":"1565036668","viewed":126,"name":"TerrainPractice001","username":"Hirai_worthless","description":"desert","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nvec3 path(float t){\n\treturn vec3(sin(t) * 3.0, 0.25 + (sin(t) + 2.) * 0.5,-1.5 + t * 3.0);\n}\nmat2 genRot(float v){\n\treturn mat2(cos(v),-sin(v),sin(v),cos(v));\n}\nfloat map(vec3 p){\n\n\tfloat a = (sin(p.x) + sin(p.z)) * 0.2;\n    a += (rand(vec2(floor(p.x + p.z/3.),floor(p.z - p.x /3.))) - 0.5) * 0.3\n        *(1. + abs(p.x) / 4.);\n   \tfloat terrain = p.y- a + 0.5;\n    float rings = 1000000.;\n    float baseTime = floor(iTime / 2.0) * 2.0;\n    for(float i = 0.0; i < 10.0; i += 0.5){\n    \trings = min(rings,\n                   max(abs(length(p.xy - path(baseTime + i).xy) - 0.2) - 0.01\n                       ,abs(p.z - path(baseTime + i).z) - 0.01)\n                   );\n    }\n    return min(terrain,rings);\n}\n\nconst float EPS = 0.001;\nvec3 getNormal(vec3 p) {\n    return normalize(vec3(\n        map(p + vec3(EPS, 0.0, 0.0)) - map(p + vec3(-EPS,  0.0,  0.0)),\n        map(p + vec3(0.0, EPS, 0.0)) - map(p + vec3( 0.0, -EPS,  0.0)),\n        map(p + vec3(0.0, 0.0, EPS)) - map(p + vec3( 0.0,  0.0, -EPS))\n    ));\n}\n\nvec4 trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    vec3 p = vec3(0.0,0.0,0.0);\n    \n    for(int i = 0; i < 96; ++i){\n        p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return vec4(getNormal(p),t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 U )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec3 R = iResolution,\n    r = normalize(vec3((2.*U - R.xy )/  R.y,1.2)),\n    o = path(iTime);\n    r.xy *= genRot(sin(iTime) * 0.2);\n    vec4 data = trace(o,r);\n    vec3 n = vec3(data.xyz);\n    float t = data.w;\n    float fog = 1.0 / (1.0 + t * t * 0.01);\n\tvec3 pos = o + r * t;\n    vec3 fc1 = texture(iChannel0,pos.xz).xyz;\n    vec3 fc2 = texture(iChannel1,pos.xz).xyz;\n    vec3 fc = mix(fc1,fc2,smoothstep(-0.7,-0.3,pos.y));\n    fc = (pos.y)> 0.5 ? vec3(1.,1.,0.) : fc;\n    fc = mix(fc,vec3(0.8,0.7,0.3),1. - fog);\n\t//fc = vec3(fog);\n    // Output to screen\n    fragColor =t > 30. ? vec4(vec3(0.8 - r.y,0.7- r.y,0.3),1.0): vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}