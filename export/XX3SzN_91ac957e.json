{"ver":"0.1","info":{"id":"XX3SzN","date":"1718667522","viewed":76,"name":"bae #021 ~ Bouquet","username":"BretHudson","description":"Hexagon grid","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI  3.141592\n#define TAU 6.2831853071\n\nfloat hash(vec2 p)\n{\n    p = fract(p * vec2(123.345, 734.6897));\n    p += dot(p, p + 45.32);\n    return fract(p.x * p.y);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat sdHex(vec2 p)\n{\n    p = abs(p);\n    \n    float d = dot(p, normalize(vec2(1., 1.73)));\n    d = max(d, p.x);\n    \n    return d;\n}\n\nmat2 rot2D(float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nvec4 hexMap(vec2 uv, float rot)\n{\n    vec2 r = vec2(1., 1.73);\n    vec2 h = r * .5;\n    \n    vec2 gv1 = mod(uv, r) - h;\n    vec2 gv2 = mod(uv - h, r) - h;\n    \n    vec2 gv;\n    if (length(gv1) < length(gv2))\n        gv = gv1;\n    else\n        gv = gv2;\n    \n    vec2 id = uv - gv;\n    gv *= rot2D(rot);\n    \n    float x = fract(atan(gv.x, gv.y) / TAU * 6.);\n    float y = sdHex(gv) * 2. + sign(rot) * (sin(rot) * .5 + .5) * .3;\n    \n    x = abs(x * - .5);\n    \n    return vec4(x, y, id);\n}\n\nvec2 drawTile(vec2 uv, float fudge)\n{\n    vec2 id = floor(uv);\n    id.y -= 3.;\n    vec2 gv = fract(uv) - .5;\n    gv.y *= -1.;\n    \n    vec2 cUv = gv - .5 * sign(gv.x + gv.y + .001);\n    float angle = atan(cUv.y, cUv.x);\n    \n    vec2 tUv = vec2(mod((angle + PI) / 1.57079, 1.), 0.);\n    tUv.x = abs(mod(id.x + id.y, 2.) - tUv.x);\n    \n    return tUv;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    \n    vec3 col = vec3(0);\n    \n    float t = iTime + .0001;\n    \n    uv -= vec2(.6, 0.);\n    uv *= rot2D(t * .15 + .07);\n    \n    vec4 hexMask = hexMap(uv, 0.);\n    float n = hash(hexMask.zw + 100.) * TAU;\n    vec4 hex = hexMap(uv, t + n);\n    \n    vec3 mask = drawTile(hex.xy * 2. - 1., 0.).rgr;\n    col += hsv2rgb(vec3(hex.z * .1 - hex.w, .7, 1.)) * vec3(hex.y, mask.r, mask.r) * mask.b;\n    col += smoothstep(.965, .985, hexMask.y) * .9;\n    \n    col = pow(col, vec3(.4545));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}