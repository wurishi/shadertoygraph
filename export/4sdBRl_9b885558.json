{"ver":"0.1","info":{"id":"4sdBRl","date":"1526461522","viewed":1444,"name":"Basic Gaussian Blur","username":"Neyco","description":"simple and fast Gaussian blur.\nupdated in 2020.","likes":3,"published":3,"flags":32,"usePreview":1,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float lod = ceil(4. * (iMouse.x > 0.0 ? iMouse.x / iResolution.x : 1.));\n\n    fragColor = gaussBlur(iChannel0, fragCoord/iResolution.xy,\n        vec2(0., exp2(lod)/iChannelResolution[0].y), lod);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float lod = ceil(4. * (iMouse.x > 0.0 ? iMouse.x / iResolution.x : 1.));\n    \n    fragColor = gaussBlur(iChannel0, fragCoord/iResolution.xy,\n        vec2(exp2(lod)/iChannelResolution[0].x, 0.), lod);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float sigma = 3.;\nconst float r = sigma * 2.;\nconst float invTwoSigmaSqr = 1. / (2. * sigma * sigma);\n\nvec4 gaussBlur( sampler2D tex, vec2 uv, vec2 d, float lod )\n{\n    vec4 c = textureLod(tex, uv, lod);\n    \n    for (float i = 1.; i < r; ++i) c += (\n        textureLod(tex, uv + d * i, lod) +\n        textureLod(tex, uv - d * i, lod)\n        ) * exp(- i * i * invTwoSigmaSqr);\n    \n    return c / c.a;\n}\n","name":"Common","description":"","type":"common"}]}