{"ver":"0.1","info":{"id":"llfXRl","date":"1438840022","viewed":402,"name":"Perlin Texture Blending","username":"jackdavenport","description":"Blending two textures together using perlin noise and fractals.\n\nBased on \"Just Some Fog\" by Josh1billion. Original: https://www.shadertoy.com/view/XtfSzs","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin","blending"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Perlin Texture Blending\n// Based on \"Just Some Fog\" by Josh1billion\n// Original: https://www.shadertoy.com/view/XtfSzs\nfloat random(float p)\n{\n    return fract(sin(p)*10000.0);\n}\n\nfloat noise(vec2 p) {\n    return random(p.x + p.y*10000.0);\n}\n\nfloat stepNoise(vec2 p) {\n    return noise(floor(p));\n}\n\nvec2 sw(vec2 p) { return vec2( floor(p.x), floor(p.y) ); }\nvec2 se(vec2 p) { return vec2( ceil(p.x), floor(p.y) ); }\nvec2 nw(vec2 p) { return vec2( floor(p.x), ceil(p.y) ); }\nvec2 ne(vec2 p) { return vec2( ceil(p.x), ceil(p.y) ); }\n\nfloat smoothNoise(vec2 p) {\n  vec2 inter = smoothstep(0., 1., fract(p));\n  float s = mix(noise(sw(p)), noise(se(p)), inter.x);\n  float n = mix(noise(nw(p)), noise(ne(p)), inter.x);\n  return mix(s, n, inter.y);\n  return noise(nw(p));\n}\n\nfloat fractalNoise(vec2 p) {\n  float total = 0.0;\n  total += smoothNoise(p);\n  total += smoothNoise(p*2.) / 2.;\n  total += smoothNoise(p*4.) / 4.;\n  total += smoothNoise(p*8.) / 8.;\n  total += smoothNoise(p*16.) / 16.;\n  total /= 1. + 1./2. + 1./4. + 1./8. + 1./16.;\n  return total;\n}\n\nfloat normalizedSin(float x) {\n    return abs(sin(x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 p = uv * 6.0;\n    float brightness = fractalNoise(p + iTime);\n    \n    fragColor = mix(texture(iChannel0, uv),texture(iChannel1,uv),brightness);\n}","name":"","description":"","type":"image"}]}