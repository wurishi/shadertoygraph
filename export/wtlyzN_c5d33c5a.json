{"ver":"0.1","info":{"id":"wtlyzN","date":"1591605268","viewed":330,"name":"antialiasing: the correlation pb","username":"FabriceNeyret2","description":"At max filtering each layer is assumed ~= 50% opaque unif color.\nPb: alpha-based blending (Middle) is correct only if no correlation in visibility, which is not the case here ( like all Moir√©s, but occurs in many other situations).\nRight: ground truth.","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["antialiasing","filtering","moir","correlation","short","visibility"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define strip(v) (   n!=1 ? mod(floor(v),2.)                                 \\\n                   :        smoothstep(-.8/s,.8/s, abs(mod(v+1.,2.)-1.)-.5 ) \\\n                 )                    \nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R  = iResolution.xy,\n         U  = u ;\n    float s = .2+floor(U.y/R.y*5.);              // strip width\n    int   n = int(u.x/R.x*3.);                   // subwindow index\n\n    O-=O;\n    if ( int(U)*3%int(R)<3 || int(U.y)*5%int(R.y)<5) return; // black separators\n    U /= s;                                      // scale strips\n\n    if (n<2) {\n        O.ra += strip(U.x);                      // red strip\n\n        U *= mat2(cos( .05 + vec4(0,11,33,0) )); // rotate second layer\n        O.ga += (1.-O.a) *strip(U.x);            // blend green strip behind red layer\n    } \n    else {                                       // --- same with numerical integration\n        float d=1./100., x,i,a;\n        for ( i=-.5;  i<.5; i+=d) {              // oversampling\n            x = U.x+i/s;\n            a = strip(x); O.ra += a;             // red strip\n         // O.ra += a = strip(x);                // no longer compiles\n            x = dot( vec2(x,U.y),  cos( .05 + vec2(0,11) )); // rotate\n            O.ga += (1.-a) *strip(x);            // subpixel-blend green strip behind red layer\n        }\n        O *= d;\n    }\n    \n    O = pow(O,vec4(1./2.2));                     // to sRGB\n}","name":"Image","description":"","type":"image"}]}