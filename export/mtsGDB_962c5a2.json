{"ver":"0.1","info":{"id":"mtsGDB","date":"1672375104","viewed":247,"name":"Expanding Loops","username":"Offline","description":"A grid of loops that join with each other nicely by checking their closest neighbor in the direction of their travel.\n","likes":17,"published":3,"flags":0,"usePreview":0,"tags":["procedural","noise","grid","sdf","branchless","hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(in vec2 p){\n    return fract(sin(dot(p, vec2(21.952, 38.783))) * 67845.8521);\n}\n\n// Modified 2D Value noise by iq: https://www.shadertoy.com/view/lsf3WH\nfloat noise(in vec2 p){ \n    p *= .35;\n    vec2 f = fract(p);\n    vec2 i = floor(p);\n    vec2 o = vec2(0.,1.);\n    \n    return mix( mix( hash(i + o.xx), \n                     hash(i + o.yx), f.x),\n                mix( hash(i + o.xy), \n                     hash(i + o.yy), f.x), f.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.x * 16.;\n    float screenScale = length(fwidth(uv));\n    \n    uv.y += iTime;\n    uv = vec2(uv.x - uv.y, uv.x + uv.y); // \"Rotate\" UV 45Â°\n    \n    vec2 cell = floor(uv);\n    float direction = round(noise(cell));\n    \n    // Offset only in current cell direction.\n    vec2 neighborOffset = sign(fract(uv) - .5) * vec2(1. - direction, direction); \n    float neighborDir = round(noise(cell + neighborOffset));\n\n    vec2 clampDir = vec2(max(direction, neighborDir), 1.-min(direction, neighborDir));\n    uv = (fract(uv) - .5) * clampDir;\n    \n    float loopMask = 1. - clamp((abs(length(uv) - .25 ) - .1) / screenScale, 0.,1.);\n    vec3 color = mix(vec3(.2,.9,.5), vec3(1.,.2,.6), direction) * loopMask;\n    fragColor = vec4(color, 0.);\n}","name":"Image","description":"","type":"image"}]}