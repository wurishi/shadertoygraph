{"ver":"0.1","info":{"id":"tdffW8","date":"1588114799","viewed":52,"name":"cubic fall","username":"katila4","description":"learning how to work with shader draw","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(in vec2 p, float a, in vec2 c)\n{\n    vec2 res = p;\n    \n    float sn = sin(a);\n    float cs = cos(a);\n    \n    res -= c;\n    \n    float x = res.x * cs - res.y * sn;\n    float y = res.x * sn + res.y * cs;\n    \n    res = vec2(x, y) + c;\n    \n    return res;\n}\n\nfloat cubic(in vec2 st, in vec2 pos, in vec2 size){\n    vec2 pos2 = pos + size;\n    vec2 center = pos + size / 2.0;\n\n    vec2 uv = (1.0 - step(pos2, st)) * step(pos, st);\n\treturn uv.x * uv.y;\n}\n\nfloat circle(in vec2 st, in vec2 c, in vec2 p, in float r){\n    float l = 1.0 - step(r, length(p - st));\n    return l;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.yy;\n\n    vec4 cubicColor = vec4(231.0 / 255.0, 111.0 / 255.0, 81.0 / 255.0, 1.0);\n    vec4 circleColor = vec4(233.0 / 255.0, 196.0 / 255.0, 106.0 / 255.0, 1.0);\n    \n    vec4 backColor1 = vec4(0.650, 0.985, 0.467, 1.0); \n    vec4 backColor2 = vec4(42.0 / 255.0, 157.0 / 255.0, 143.0 / 255.0, 1.0);\n    vec4 backColor3 = vec4(38.0 / 255.0, 70.0 / 255.0, 83.0 / 255.0, 1.0);\n    \n    vec4 color = mix(backColor1,\n                     backColor2,\n                     step(0.5 * st.x, st.y));\n    \n    color = mix(color,\n                backColor3,\n                step(0.5 * st.x + 0.5, st.y));\n    \n    float playTime = 1.084;\n    float t = 1.0 - mod(iTime, playTime) / playTime;\n    float waitTime = 0.272;\n    t = max(waitTime, t);\n    float normalizedTime = (t - waitTime) / (1.0 - waitTime);\n    normalizedTime = sin(normalizedTime * 3.14 / 2.0);\n    \n    vec2 center = vec2(0.500,0.5);\n    float scale = 0.606 * normalizedTime * 2.0 + 0.500;\n    float size = 0.5 * scale;\n    vec2 rectStartP = center - size / 2.0;\n    \n    float colMult = 1.0 - normalizedTime;\n    float a = normalizedTime * 4.128; \n    vec2 stRotated = rotate(st, a, center);\n    \n    float rec = cubic(stRotated, rectStartP, vec2(size));\n    \n    color = mix(color,\n               cubicColor,\n               rec * colMult);\n    \n    float radius = 0.07 * scale;\n    float addP = 0.274;\n    float rot = circle(stRotated, center, rectStartP + vec2(size) * addP, radius);\n    float rot2 = circle(stRotated, center, rectStartP + vec2(size) * (1.0 - addP), radius);\n    \n    color = mix(color,\n               circleColor,\n               rot * colMult);\n    \n    color = mix(color,\n               circleColor,\n               rot2 * colMult);\n    \n    color = mix(color,\n               vec4(0.0, 0.0, 0.0, 1.0),\n               step(1.0, st.x));\n\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}