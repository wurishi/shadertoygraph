{"ver":"0.1","info":{"id":"M3jyRh","date":"1726967874","viewed":39,"name":"Dynamic Colorful Lines","username":"harsh","description":"A 2D effect with straight lines and changing colors","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["lines","color","rainbow","motion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Dynamic Colorful Lines\n// A 2D effect with straight lines and changing colors\n\nfloat rand(vec2 n) { \n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvec3 getColor(float t) {\n    return 0.5 + 0.5 * cos(6.28318 * (vec3(1.0, 2.0, 3.0) / 3.0 + t));\n}\n\nfloat getLine(vec2 uv, float index, float time) {\n    float lineWidth = 0.03;\n    float y = fract(uv.y + index * 0.1 + sin(uv.x * 3.0 + time) * 0.1);\n    return smoothstep(0.5 - lineWidth, 0.5, y) - smoothstep(0.5, 0.5 + lineWidth, y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 color = vec3(0.0);\n    \n    for (int i = 0; i < 10; i++) {\n        float line = getLine(uv, float(i), iTime * 1.2);\n        vec3 lineColor = getColor(float(i) * 0.1 + iTime * 0.1);\n        color += line * lineColor;\n    }\n\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}