{"ver":"0.1","info":{"id":"cdBcDm","date":"1688088358","viewed":49,"name":"black and white variation","username":"globaldusk","description":"black and white variation","likes":0,"published":1,"flags":64,"usePreview":0,"tags":["black"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dcGDn","filepath":"https://soundcloud.com/reminiscience/chopin-nocturne-op-9-no-2?si=8e5e3a082cc149ba94175ddd67a5a718&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/reminiscience/chopin-nocturne-op-9-no-2?si=8e5e3a082cc149ba94175ddd67a5a718&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ){\n\n    \n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sample_at(float f)\n{\n    return texture(iChannel0, vec2(f / 40.0, 0.25)).x;\n}\n\nfloat sm(float f)\n{\n    float delta = .1;\n    return 0.3 * (sample_at(f - 2.5 * delta) + sample_at(f - delta) + sample_at(f) + sample_at(f + delta) + sample_at(f + 2.5 * delta));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    vec2 uv = (fragCoord *2.0 - iResolution.xy) / iResolution.y; //Centering and coord scaling\n    \n    vec2 uv0 = uv;//Temp storage\n    \n    vec3 finalColor = vec3(0.0, 0.0, 0.0);// backcolour\n    \n    for (float i = 0.0; i <2.0; i++){\n\n        uv = fract(uv *sm(1.0)) - 0.5;//amount of fractals\n\n        float d = length(uv) * sm(exp(-length(uv0))); //circle placement\n\n        vec3 col = vec3(1.0);//changing colour scheme\n\n        d = sin(d*8. +iTime)/4.;//circle movement direction and speed\n        d = abs(d); //ring brightness\n\n        d = pow(0.01/ d, 5.2); //colour glow\n          \n\n        finalColor += col * d;// Applying the colour to the algorithm\n    }\n\n    fragColor =  vec4(finalColor, 1.0);//setting the output\n    \n}\n//also try with this song for a differ ent experience: https://soundcloud.com/d-shaze/i-need-a-hero","name":"Image","description":"","type":"image"}]}