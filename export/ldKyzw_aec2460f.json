{"ver":"0.1","info":{"id":"ldKyzw","date":"1521501244","viewed":96,"name":"Nebulous Shape","username":"metabog","description":"Riffing on an older idea.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lorenzattractor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n\n     //float pr = min(cos(uv.y* iTime),   sin(uv.x* iTime)) ;\n     float pr = 0.02;\n\t float r = cos(0.2*iTime)*10.0+5.8;\n\t float b = -iTime;\n\t float xn =(uv.x - 0.5) *4.0;\n\t float yn =(uv.y-0.5)*4.0;\n\t float zn = uv.x;\n        \n    float intens = 0.0;\n    //iterate at this pixel for a while and solve lorenz-ish oscillator equations\n    for(int i = 0; i <220; i++)\n    {\n        float xnn = xn*yn - xn + (pr * (yn - zn));\n\t\tfloat ynn = yn*zn*xn + (-xn * zn - yn);\n\t\tfloat znn = zn*yn*xn + (xn * zn);\n\t\txn = xnn + r;\n\t\tyn = ynn;\n\t\tzn = znn;\n        if(length(vec3(xnn,ynn,znn))>220.0)\n        {\n            intens = float(i)/220.0;\n            break;\n        }\n    }\n    \n\tfragColor = vec4(hsv2rgb(vec3(intens*0.5 + 0.25,0.8,0.8)),1.0) * pow(intens,0.1);\n}","name":"Image","description":"","type":"image"}]}