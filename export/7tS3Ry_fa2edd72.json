{"ver":"0.1","info":{"id":"7tS3Ry","date":"1624114533","viewed":93,"name":"Blue Ball","username":"yuruyuruuu","description":"I'm currently learning to write shaders following BigWIngs's tutorials, and I did this one while studying his smiley shader, check out his great work and tutorial here!: https://www.shadertoy.com/view/lsXcWn\n\nbtw, feel free to drag its cheeks around!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","interactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float remap01(float a, float b, float val)\n{\n    return clamp((val-a)/(b-a), 0., 1.);\n}\n\nvec2 localCoord(vec2 uv, vec4 rect)\n{\n    return clamp((uv-rect.xy)/(rect.zw-rect.xy), vec2(0., 0.), vec2(1., 1.));\n}\n\nfloat circle(vec2 uv, vec2 pos, float rad, float blur)\n{\n    uv.x -= pos.x;\n    uv.y -= pos.y;\n    \n    float d = length(uv);\n    float circleMask = smoothstep(rad, rad-blur, d);\n    return circleMask;\n}\n\nfloat rectHelper(float uvDir, float start, float end, float blur)\n{\n    float result = smoothstep(start-blur, start+blur, uvDir);\n    result *= smoothstep(end+blur, end-blur, uvDir);\n    \n    return result;\n}\n\nfloat rect(vec2 uv, float left, float right, float top, float btm, float blur)\n{\n    float vertRect = rectHelper(uv.x, left, right, blur);\n    float horRect = rectHelper(uv.y, btm, top, blur);\n    \n    return vertRect * horRect;\n}\n\nvec4 Cheek(vec2 uv, vec4 mouse)\n{\n    uv -= 0.5;\n    \n    if (mouse.z > 0.0)\n    {\n        float dm = length(mouse.xy);\n        uv.x *= (1.-abs(mouse.x)*.3);\n        uv.y /= (1.-abs(mouse.x)*.8);\n        uv.y -= abs(mouse.x)*0.5+mouse.y * 0.2;\n    }\n    \n    vec4 col = vec4(vec3(0.89, 0.204, 0.294), 1.);    \n    \n    float cheekMask = circle(uv, vec2(0., 0.), 0.16, 0.02);    \n    \n    // outline\n    float d = length(uv);\n    vec3 outlineCol = vec3(0.682, 0.161, 0.231);\n    col.rgb = mix(col.rgb, outlineCol, smoothstep(0.08, 0.1, d));\n    \n    col.a = cheekMask;\n    \n    return col;\n}\n\nvec4 Mouth(vec2 uv, vec4 mouse)\n{\n    uv -= 0.5;\n    \n    if (mouse.z > 0.0)\n    {\n        float dm = length(mouse.xy);\n        uv.x *= max((1.-abs(mouse.x)*.3), 0.6);\n        uv.y /= (1.-abs(mouse.x)*.6);\n    }\n    \n    vec4 col = vec4(vec3(0.), 1.);\n    \n    float mouthMask = rect(uv, -0.25, 0.3, -0.3, -0.45, 0.002);\n    col = col * mouthMask;\n    \n    return col;\n}\n\nvec4 Eye(vec2 uv, float blink, vec4 mouse)\n{\n    uv -= 0.5; // center in local coordinate system\n    \n    if (mouse.z > 0.0)\n    {\n        float dm = length(mouse.xy);\n        uv.x *= (1.-abs(mouse.x)*.2);\n        uv.y /= (1.-abs(mouse.x)*.8);\n        uv.y -= mouse.y * 0.2;\n    }\n    \n    uv.y *= step(0.996, blink) * 8.0 + 1.0;\n    \n    float d = length(uv);\n    vec4 col = vec4(vec3(0.), 1.);\n    \n    float eyeMask = circle(uv, vec2(0.0, 0.), 0.35, 0.04);\n    float eyePupilMask = circle(uv, vec2(0.1, 0.1), 0.1, 0.03);\n    col.rgb = mix(col.rgb, vec3(0.9, 0.9, 0.9), eyePupilMask);\n    \n    vec2 eyeLashUV = uv;\n    float eyeLashMask = rect(eyeLashUV, (-0.18+eyeLashUV.y)*2.0, 0.02+eyeLashUV.y, 0.32, 0.2, 0.01);\n    \n    float finalMask = eyeMask + eyeLashMask;\n    col = col * finalMask;\n    \n    \n    return col;\n}\n\nvec4 Head(vec2 uv, vec4 mouse)\n{\n    if (mouse.z > 0.0)\n    {\n        float dm = length(mouse.xy);\n        uv.x *= ((1.-abs(mouse.x)*.3)-uv.y*mouse.y);\n        uv.y /= (1.-abs(mouse.x)*.15);\n    }\n\n    float d = length(uv);\n    vec4 col = vec4(0.259, 0.529, 0.96, 1.);\n    float headMask = circle(uv, vec2(0., 0.), 0.4, 0.004);\n    \n    // shade\n    float shadeMask = circle(uv, vec2(0.05, 0.05), 0.4, 0.002);\n    col.rgb = mix(col.rgb * 1.2, col.rgb, shadeMask);\n    \n    // outline\n    vec3 outlineCol = vec3(0.17, 0.369, 0.678);\n    col.rgb = mix(col.rgb, outlineCol, smoothstep(0.382, 0.385, d));\n    \n    vec4 finalColor = col * headMask;\n    return finalColor;\n}\n\nvec4 Smiley(vec2 uv, vec4 mouse, float blink, float stretch)\n{\n    vec4 col = vec4(0.980, 0.729, 1., 1.);  \n    \n    vec4 head = Head(uv, mouse);\n    vec4 eyeR = Eye(localCoord(uv, vec4(0.13, 0.1, 0.23, 0.2)), blink, mouse);\n    vec4 eyeL = Eye(localCoord(uv, vec4(-0.12, 0.1, -0.02, 0.2)), blink, mouse);\n    vec4 mouth = Mouth(localCoord(uv, vec4(-0.03, 0.08, 0.13, 0.18)), mouse);\n    vec4 cheekR = Cheek(localCoord(uv, vec4(0.16, 0.05, 0.26, 0.15)), mouse);\n    vec4 cheekL = Cheek(localCoord(uv, vec4(-0.15, 0.05, -0.05, 0.15)), mouse);\n    \n    col = mix(col, head, head.a);\n    col = mix(col, eyeR, eyeR.a);\n    col = mix(col, eyeL, eyeL.a);\n    col = mix(col, mouth, mouth.a);\n    col = mix(col, cheekR, cheekR.a);\n    col = mix(col, cheekL, cheekL.a);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec4 mouse = iMouse;\n    mouse.xy = mouse.xy/iResolution.xy;\n    mouse.xy -= 0.5;\n    mouse.x *= iResolution.x/iResolution.y;\n    \n    float blink = sin(iTime*2.0) * 0.5 + 0.5;\n    float stretch = mod(iTime, 10.0)/10.0;\n\n    // Output to screen\n    fragColor = Smiley(uv, mouse, blink, stretch);\n}","name":"Image","description":"","type":"image"}]}