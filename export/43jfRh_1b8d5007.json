{"ver":"0.1","info":{"id":"43jfRh","date":"1729190653","viewed":93,"name":"Georgian National Flag","username":"koiava","description":"Flag of Georgia (country)","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["flag","national","georgia","tbilisi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 boundsMin = vec2(0., 0.);\nconst vec2 boundsMax = vec2(300., 200.);\n\nbool inCross(vec2 p) {\n    if(length(p) > 30.) {\n        return false;\n    }\n    const float r0 = 54.;\n    const float r1 = 104.;\n    vec2 c0 = vec2(74, 0.);\n    vec2 c1 = vec2(109, 0.);\n    vec2 c2 = vec2(-109, 0.);\n    \n    for(int i=0; i<4; i++) {\n        if(length(p - c0) < r0) return false;\n        c0 = vec2(c0.y, -c0.x);\n    }\n    \n    for(int i=0; i<2; i++) {\n        if(length(p - c1) > r1 && length(p - c2) > r1) return true;\n        c1 = vec2(c1.y, -c1.x);\n        c2 = vec2(c2.y, -c2.x);\n    }\n    \n    return false;\n}\n\n// Function that returns the color of the Georgian flag for a given coordinate\n// Based on a wikipedia: https://en.wikipedia.org/wiki/Flag_of_Georgia_(country)#/media/File:Flag_of_Georgia_(construction_sheet).svg\nvec3 flagGeorgia(vec2 p) {\n    const vec3 red = vec3(1, 0, 0);\n    const vec3 white = vec3(1, 1, 1);\n    \n    // check bounds\n    if(any(lessThan(p, boundsMin)) || any(greaterThan(p, boundsMax))) {\n        return vec3(0., 0., 0.);\n    }\n    \n    // Big middle cross\n    if((p.x > 130. && p.x < 170.) || (p.y > 80. && p.y < 120.)) return red;\n    \n    // Draw 4 small cross\n    if(inCross(p - vec2(65., 40.))) return red;\n    if(inCross(p - vec2(65., 160.))) return red;\n    if(inCross(p - vec2(235., 40.))) return red;\n    if(inCross(p - vec2(235., 160.))) return red;\n    \n    return white;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 screenCenter = iResolution.xy * 0.5;\n    vec2 flagCenter = boundsMax * 0.5;\n    float screenRatio = iResolution.x / iResolution.y;\n    float flagRatio = boundsMax.x/boundsMax.y;\n    float scale = screenRatio < flagRatio? boundsMax.x/iResolution.x : boundsMax.y/iResolution.y;\n    scale += (sin(iTime) + 1.0)*0.5;\n    \n    fragColor = vec4(flagGeorgia((fragCoord*scale+flagCenter) - screenCenter*scale), 1.0);\n}","name":"Image","description":"","type":"image"}]}