{"ver":"0.1","info":{"id":"lcdfD4","date":"1733320551","viewed":55,"name":"...circles...","username":"imScope","description":"circles","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["loop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy*2.0-1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    // uv = fract(uv)*10.0;\n    vec2 uvb = uv;\n    \n    float wave = sin(1.0 + iTime) + cos(2.0 + iTime);\n    wave = smoothstep(1.0, 0.0, wave);\n    wave += 2.0;\n    \n    float dist = length(wave)/uv.y/length(uvb);\n    dist = cos(dist*0.4*uv.y + iTime)/0.5*length(uv);\n    // dist = abs(dist);\n    dist = 0.06/dist;\n    \n    float something = 0.5 + 0.5 * cos(sin(iTime / 24.0));\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 show = dist*wave/something*col*length(uvb);\n\n    // Output to screen\n    fragColor = vec4(show,1.0);\n}","name":"Image","description":"","type":"image"}]}