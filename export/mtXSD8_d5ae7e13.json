{"ver":"0.1","info":{"id":"mtXSD8","date":"1674657883","viewed":225,"name":"background w clock","username":"Zygal","description":"A simple background experiment","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["background","digitalclock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat circle(vec2 uv, vec2 dir, float r, float b, float ir, float ib) {\n    dir = (dir)*r;\n    return max(0., (smoothstep(0., ib, length(uv - dir)-ir) - smoothstep(0., b, length(uv)-r)));\n}\n\nfloat circ(vec2 uv, float r) {\n    return step(length(uv), r);\n}\n\nfloat line(vec2 uv, vec2 p1, vec2 p2, float w, float b) {\n    b = 0.;\n    vec2 ab = (p2 - p1);\n    p1 += ab * (length(ab));\n    p2 -= ab * (length(ab));\n    ab = (p2 - p1);\n    vec2 ac = uv - p1;\n    vec2 bc = p2 - uv;\n    float dist = length(ac - (dot(ac, ab)/pow(length(ab), 2.)) * ab);\n    float dot1 = dot(ac, ab);\n    float dot2 = dot(ab, ab);\n    float check = step(0., dot1) * step(dot1, dot2);\n    float angle = max(acos(dot(ac, ab) / (length(ac) * length(ab))), acos(dot(bc, ab) / (length(bc) * length(ab))));\n    if (angle > /*PI/4.*/ 0.78539816339744830961566084581988) {\n        return 0.;\n    }\n    return step(dist, w) * check * (1.-(distance(uv, p1 + ab/2.))/length(ab));\n}\n\nfloat sevenSegment(vec2 uv, vec2 pos, float length, float width, int nr){\n    float value = 0.;\n    if (nr < 0 || nr > 9)\n    return 0.;\n    if (nr != 1 && nr != 7 && nr != 0)\n    value += line(uv, pos - vec2(length/2., 0.), pos + vec2(length/2., 0.), width, 0.01);\n    if (nr != 5 && nr != 6)\n    value += line(uv, pos + vec2(length/2., 0.), pos + vec2(length/2., length), width, 0.01);\n    if (nr != 1 && nr != 4)\n    value += line(uv, pos + vec2(length/2., length), pos + vec2(-length/2., length), width, 0.01);\n    if (nr != 1 && nr != 2 && nr != 3 && nr != 7)\n    value += line(uv, pos + vec2(-length/2., length), pos + vec2(-length/2., 0.), width, 0.01);\n    if (nr == 2 || nr == 6 || nr == 8 || nr == 0)\n    value += line(uv, pos + vec2(-length/2., 0.), pos + vec2(-length/2., -length), width, 0.01);\n    if (nr != 1 && nr != 4 && nr != 7)\n    value += line(uv, pos + vec2(-length/2., -length), pos + vec2(length/2., -length), width, 0.01);\n    if (nr != 2)\n    value += line(uv, pos + vec2(length/2., -length), pos + vec2(length/2., 0.), width, 0.01);\n    return value;\n}\n\nivec4 calculateDate(float time){\nfloat min = floor(mod(time/60., 60.));\nfloat hour = floor(mod(time/3600., 24.));\n\nreturn ivec4(mod(hour/10., 10.), mod(hour, 10.), mod(min/10.,10.), mod(min, 10.));\n\n}\n\n    void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 midUV = (fragCoord/iResolution.xy) - .5;//coordinates relative to the middle\n    midUV.x = midUV.x / (iResolution.y / iResolution.x);//make screen square\n    midUV /= 1.5; //Zoom\n    midUV.y -= 0.125; //move middle\n\n    //vec2 dir = vec2(cos(iTime), sin(iTime));\n    vec2 dir = vec2(0, 1);\n    vec2 clock = vec2(0., 0.1); //position of the clock\n    vec3 col = vec3(smoothstep(0., 1., uv.x), 0., smoothstep(0., 1., uv.y/2.)*2.);\n    col = vec3((1.-pow(midUV.x, 2.)*5.)/2., 0, pow(midUV.x, 2.)*2.);\n    //vec3 bCol = vec3(1-pow(midUV.y, 2.), 0., /*smoothstep(1., 0., uv.y)*/ 0.);\n    vec3 bCol = vec3(smoothstep(1., 0., uv.y + 0.5), 0., 0.);\n    bCol = vec3(1., 0, 0);\n\n    vec4 color = vec4(bCol, 1.);\n    color = mix(vec4(0.), vec4(bCol, 1.), circle(midUV, vec2(0., .75), 1.5, 0., 1., 1.)*.75);\n    //                                               radius, blur, inner radius, inner blur\n    //color = mix(color, vec4(bCol, 1.), 1-circle(midUV, vec2(0.), 1.1, .0, .35, .1)/2.);//background\n    color = mix(color, vec4(col, 1.), circle(midUV, dir*3., .4, .01, 1., .4));//base circle\n    color += vec4(.34, .07, .16, 1.) *   circle(midUV, dir*.2, .4, .01, .4, .1)*2.;//color edge\n    color = mix(color, vec4(1.), circle(midUV, dir*.9, .4, .01, .7, .1));//light edge\n\n    ivec4 t = calculateDate(iDate.w);\n    vec4 clockC = vec4(0.);\n\n    clockC += vec4(1.) * sevenSegment(midUV, clock + vec2(.075 * 2.5, 0.), .075, .01, t.w);\n    clockC += vec4(1.) * sevenSegment(midUV, clock + vec2(.075, 0.), .075, .01, t.z);\n    clockC += vec4(1.) * sevenSegment(midUV, clock - vec2(.075, 0.), .075, .01, t.y);\n    clockC += vec4(1.) * sevenSegment(midUV, clock - vec2(.075 * 2.5, 0.), .075, .01, t.x);\n    if(int(iTime) % 4 == 0){\n        clockC += line(midUV, clock + vec2(0., .045), clock + vec2(0., .02), 1., .01);\n        clockC += line(midUV, clock - vec2(0., .045), clock - vec2(0., .02), 1., .01);\n    }\n    \n    if(length(clockC) > 0.) {\n        color = clockC;\n    }\n\n\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}