{"ver":"0.1","info":{"id":"XltXW8","date":"1479315194","viewed":125,"name":"Finn & Jake","username":"lara","description":"Work in progress. The quadratic curves reduce the fps quite a lot. :\\","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["adventuretime","finn","jake"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define P 0.001\n#define D 50.0\n#define K 16.0\n#define S 64\n#define PI 3.14159265359\n#define TAU PI*2.\n#define T iDate.w\n#define mirrorX(v) vec3(abs((v).x),(v).yz)\n\nconst vec3 COL_JAKE_SKIN      = vec3(230,200, 96)/255.0;\nconst vec3 COL_JAKE_BLACK     = vec3(  0,  0,  0)/255.0;\nconst vec3 COL_JAKE_EYES      = vec3(255,255,255)/255.0;\n\nconst vec3 COL_FINN_SKIN      = vec3(254,212,187)/255.0;\nconst vec3 COL_FINN_BLACK     = vec3(  0,  0,  0)/255.0;\nconst vec3 COL_FINN_WHITE     = vec3(255,255,255)/255.0;\nconst vec3 COL_FINN_SHIRT     = vec3( 34,176,243)/255.0;\nconst vec3 COL_FINN_SHORTS    = vec3( 35,119,243)/255.0;\nconst vec3 COL_FINN_BACKPACK1 = vec3( 93,191, 56)/255.0;\nconst vec3 COL_FINN_BACKPACK2 = vec3(155,244,118)/255.0;\n\nconst vec3 COL_GROUND         = vec3(120,200, 50)/255.0;\nconst vec3 COL_SKY            = vec3(  0,  0,  0)/255.0;\n\nstruct Ray\n{\n\tvec3 o;\n\tvec3 d;\n};\n\nstruct Hit\n{\n\tvec3 p;\n\tfloat t;\n\tfloat d;\n};\n\t\nstruct Camera\n{\n\tvec3 p;\n\tvec3 t;\n};\n\nfloat dist_finn_skin;\nfloat dist_finn_white;\nfloat dist_finn_black;\nfloat dist_finn_shirt;\nfloat dist_finn_shorts;\nfloat dist_finn_bagpack;\nfloat dist_ground;\n\nfloat dist_jake_skin;\nfloat dist_jake_black;\nfloat dist_jake_eyes;\n\nCamera cam = Camera(vec3(0,2.5,-3), vec3(0,1.5,0));\nvec3 sun = vec3(0.5,2,-2);\nvec3 pos_jake = vec3(0.5,1.5,0);\nvec3 pos_finn = vec3(-0.5,1.74,0);\n\nbool IN_SHADOW_MARCH = false;\n\n/* =================== */\n/* ====== UTILS ====== */\n/* =================== */\n\nmat3 rotX(float a){float c=cos(a);float s=sin(a);return mat3(1,0,0,0,c,-s,0,s,c);}\nmat3 rotY(float a){float c=cos(a);float s=sin(a);return mat3(c,0,-s,0,1,0,s,0,c);}\nmat3 rotZ(float a){float c=cos(a);float s=sin(a);return mat3(c,-s,0,s,c,0,0,0,1);}\n\n// https://en.wikipedia.org/wiki/Cubic_function#Cardano.27s_method\nvec3 cubicRoot(float a, float b, float c, float d)\n{\n\tfloat p = (9.*a*c-3.*b*b)/(9.*a*a);\n\tfloat q = (2.*b*b*b-9.*a*b*c+27.*a*a*d)/(27.*a*a*a);\n\tfloat p3 = p*p*p;\n\tfloat e = q*q+4.*p3/27.;\n\n\tif (e > 0.0)\n\t{\n\t\te = sqrt(e);\n\t\tfloat u = (-q+e)/2.;\n\t\tfloat v = (-q-e)/2.;\n\t\tu = (u>=0.) ? pow(u,1./3.) : -pow(-u,1./3.);\n\t\tv = (v>=0.) ? pow(v,1./3.) : -pow(-v,1./3.);\n\t\treturn vec3(u+v-b/(3.*a),1.0,1.0);\n\t}\n\n\tfloat u = 2.*sqrt(-p/3.), v = acos(-sqrt(-27./p3)*q/2.)/3.;\n\treturn vec3(u*cos(v),u*cos(v+2.*PI/3.),u*cos(v+4.*PI/3.))-b/(3.*a);\n}\n\n// https://iquilezles.org/articles/smin\nfloat smin( float a, float b, float k )\n{\n\tfloat h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\n/* ================================ */\n/* ====== DISTANCE FUNCTIONS ====== */\n/* ================================ */\n\nfloat sdSphere(vec3 p, float r){return length(p)-r;}\nfloat sdFloor(vec3 p, float h){return p.y-h;}\n\nfloat sdLine(vec3 p, vec3 a, vec3  b, float r)\n{\n    vec3 ab = b-a;\n    float t = clamp(dot(p-a,ab)/dot(ab,ab),0.,1.);\n    return length(p-a-ab*t)-r;\n}\n\n// q1 = a + ac*t\n// q2 = c + cb*t\n// q3 = a + 2(ac)*t + (a+b-2c)*tÂ²\n// (p-q3)(q2-q1)=0\nfloat sdQuadCurve(vec3 p, vec3 a, vec3 b, vec3 c, float r)\n{ \n\tvec3 ac = c-a;\n\tvec3 ap = p-a;\n\tvec3 abc = -2.*c+a+b;\n\n\tvec3 t = clamp(cubicRoot(\n\t\t-dot(abc,abc),\n\t\t-3.*dot(abc,ac),\n\t\t-2.*dot(ac,ac)+dot(ap,abc),\n\t\tdot(ap,ac)\n\t),0.,1.);\n\n\tvec3 q1 = (2.*ac+abc*t.x)*t.x;\n\tvec3 q2 = (2.*ac+abc*t.y)*t.y;\n\tvec3 q3 = (2.*ac+abc*t.z)*t.z;\n\t\n\treturn min(min(length(ap-q1),length(ap-q2)),length(ap-q3))-r;\n}\n\n// https://iquilezles.org/articles/distfunctions\nfloat sdEllipsoid(vec3 p,vec3 r){return (length(p/r)-1.)*min(min(r.x,r.y),r.z);}\nfloat sdTorus(vec3 p,vec2 t){return length(vec2(length(p.xz)-t.x,p.y))-t.y;}\n\n/* =================== */\n/* ====== SCENE ====== */\n/* =================== */\n\nfloat scene(vec3 p)\n{\n\tfloat d = 1.0;\n\t\n\t/* ================== */\n\t/* ====== JAKE ====== */\n\t/* ================== */\n\t\n\tvec3 q = p-pos_jake;\n\n\t// skin\n\t\n\t\t// body\n\t\td = min(d,sdQuadCurve(q,vec3(0,-0.25,0.),vec3(0,0.2,0), vec3(0,-0.2,-0.1),0.3));\n\n\t\t// ears\n\t\td = smin(d,sdQuadCurve(mirrorX(q),vec3(0.1,0.3,-0.1),vec3(0.28,0.2,-0.1),vec3(0.3,0.3,-0.05),0.03), 0.01);\n\n\t\t// mouth hole\n\t\td = max(d,-sdQuadCurve(q-vec3(0,0.1,-0.35),vec3(-0.07,0,0.1),vec3(0.07,0,0.1),vec3(0,-0.02,-0.07),0.04));\n\n\t\t// eyelids\n\t\td = smin(d,sdQuadCurve(mirrorX(q)-vec3(0.12,0.29,-0.26),vec3(-0.05,0,0),vec3(0.05,0,0.03),vec3(0,0.05,-0.02),0.02),0.02);\n\n\t\t// arms\n\t\td = smin(d,sdQuadCurve(q,vec3(0.12,0.1,-0.35),vec3(0.3,0.0,0),vec3(0.4,0,-0.4),0.03), 0.0);\n\t\td = smin(d,sdQuadCurve(q,vec3(-0.3,0.1,0),vec3(-1.27,0.55,0),vec3(-1.27,0.55,0.5),0.03), 0.0);\n\t\t//d = smin(d,sdQuadCurve(mirrorX(q),vec3(0.12,0.1,-0.35),vec3(0.3,0.0,0),vec3(0.4,0,-0.4),0.03), 0.0);\n\n\t\t// legs\n\t\td = smin(d,sdLine(mirrorX(q),vec3(0.15,-0.2,0),vec3(0.15,-1.0,0),0.03), 0.05);\n\t\t\n\t\t// nose\n\t\td = smin(d,sdQuadCurve(q-vec3(0,0.12,-0.32),vec3(-0.05,0,0),vec3(0.05,0,0),vec3(0,0.13,0.07),0.03),0.005);\n\t\t\n\t\tdist_jake_skin = d; d = 1.0;\n\t\n\t\n\t// eyes\n\t\n\t\td = min(d,sdSphere(mirrorX(q)-vec3(0.12,0.2,-0.244),0.07));\n\n\t\tdist_jake_eyes = d; d = 1.0;\n\t\n\n\t// black parts\n\t\n\t\t// eyes\n\t\td = min(d,sdSphere(mirrorX(q)-vec3(0.12,0.2,-0.245),0.07));\n\t\td = max(d,-sdSphere(mirrorX(q)-vec3(0.13,0.2,-0.36),0.07));\n\n\t\t// nose\n\t\td = min(d,sdSphere(q*vec3(1,1.2,1)-vec3(0,0.2,-0.32),0.02));\n\n\t\tdist_jake_black = d; d = 1.0;\n\t\n\n\t\n\t/* ================== */\n\t/* ====== FINN ====== */\n\t/* ================== */\n\n\tq = p-pos_finn;\n\n\t// shirt\n\t\n\t\td = min(d,sdLine(q*vec3(0.4,1,1),vec3(0,-0.3,0),vec3(0,0.3,0),0.1));\n\t\td = smin(d,sdLine(mirrorX(q)-vec3(0.21,0.14,0),vec3(0.05,0.02,0),vec3(0,0.1,0),0.05),0.02);\n\n\t\tdist_finn_shirt = d; d = 1.0;\n\t \n\n\t // white parts\n\t \n\t\t// hat\n\t\td = min(d,sdLine(q*vec3(0.4,1,1)-vec3(0,0.3,0),vec3(0,0,0),vec3(0,0.3,0),0.101));\n\t\td = smin(d,sdLine(mirrorX(q*vec3(1,1,1.3))-vec3(0.18,0.6,0),vec3(0,0.05,0),vec3(-0.02,0.1,0),0.05),0.04);\n\t\t\n\t\t// socks\n\t\td = min(d,sdTorus(mirrorX(q)-vec3(0.18,-0.93,0),vec2(0.05,0.015)));\n\t\t\n\t\tdist_finn_white = d; d = 1.0;\n\t\n\t\n\t// shorts\n\t\n\t\td = min(d,sdLine(q*vec3(0.4,1,1),vec3(0,-0.2,0),vec3(0,-0.42,0),0.098));\n\t\td = smin(d,sdLine(mirrorX(q)-vec3(0.18,-0.6,0),vec3(0,0.03,0),vec3(0,0.14,0),0.05),0.02);\n\n\t\tdist_finn_shorts = d; d = 1.0;\n\t\n\t\n\t// skin\n\t\n\t\t// face\n\t\td = min(d,sdEllipsoid(q-vec3(0,0.45,-0.07),vec3(1,0.8,0.3)*0.18));\n\n\t\t// arms\n\t\td = min(d,sdQuadCurve(mirrorX(q)-vec3(0.21,-0.25,0),vec3(0,0.01,0),vec3(0,0.53,0),vec3(0.2,0,0),0.04));\n\n\t\t// legs\n\t\td = min(d,sdLine(mirrorX(q)-vec3(0.18,-0.95,0),vec3(0,0,0),vec3(0,0.55,0),0.04));\n\n\t\tdist_finn_skin = d; d = 1.0;\n\t\n\n\t// black parts\n\t\n\t\t// eyes\n\t\td = min(d,sdSphere(mirrorX(q)-vec3(0.08,0.5,-0.11),0.015));\n\n\t\t// mouth\n\t\td = min(d,sdQuadCurve(q-vec3(0,0.45,-0.12),vec3(-0.1,0,0),vec3(0.1,0,0),vec3(0,-0.05,-0.03),0.005));\n\n\t\t// shoes\n\t\td = min(d,sdLine(mirrorX(q)-vec3(0.18,-1.3,0),vec3(0,0.38,0),vec3(0,0.3,0),0.04));\n\t\td = min(d,sdQuadCurve(mirrorX(q)-vec3(0.18,-1.3,0),vec3(0,0.3,-0.15),vec3(0,0.38,0),vec3(0,0.2,0.1),0.04));\n\n\t\tdist_finn_black = d; d = 1.0;\n\t\n\n\t/* ======================= */\n\t/* ====== LANDSCAPE ====== */\n\t/* ======================= */\n\n\tdist_ground = 1.0;\n\t\n\tif (IN_SHADOW_MARCH == false)\n\t{\n\t\tfloat s = texture(iChannel0,p.xz).r*0.1+texture(iChannel1,p.xz*0.01).r*0.7;\n\n\t\td = min(d,sdFloor(p-s,0.0));\n\t\t//d = smin(d,sdSphere(p-vec3(7,0,7),1.)-s,3.);\n\t\t//d = smin(d,sdSphere(p-vec3(-9,2,14),1.)-s,7.);\n\n\t\tdist_ground = d;\n\t}\n\n\td = min(d,dist_jake_black);\n\td = min(d,dist_jake_eyes);\n\td = min(d,dist_jake_skin);\n\t\n\td = min(d,dist_finn_black);\n\td = min(d,dist_finn_shirt);\n\td = min(d,dist_finn_shorts);\n\td = min(d,dist_finn_skin);\n\td = min(d,dist_finn_white);\n\t\n\td = min(d,dist_ground);\n\n\treturn d;\n}\n\n/* ================================ */\n/* ====== MARCHING UTILITIES ====== */\n/* ================================ */\n\nvec3 getNormal(vec3 p)\n{\n\tvec2 e = vec2(P,0);\n\n\treturn normalize(vec3(\n\t\tscene(p+e.xyy)-scene(p-e.xyy),\n\t\tscene(p+e.yxy)-scene(p-e.yxy),\n\t\tscene(p+e.yyx)-scene(p-e.yyx)\n\t));\n}\n\nRay lookAt(Camera cam, vec2 uv)\n{\n\tvec3 dir = normalize(cam.t-cam.p);\n\tvec3 right = normalize(cross(dir, vec3(0,1,0)));\n\tvec3 up = cross(right, dir);\n    \n    Ray r;\n    \n    r.o = cam.p;\n    r.d = normalize(right*uv.x + up*uv.y + dir);\n    \n    return r;\n}\n\nfloat getShadow(vec3 source, vec3 target)\n{\n\tIN_SHADOW_MARCH = true;\n\t\n\tfloat t = 0.01;\n\tfloat s = 1.0;\n\tfloat r = length(target-source);\n\tfloat d;\n\t\n\tvec3 dir = normalize(target-source);\n\t\n\tfor(int i = 0; i < S; i++)\n\t{\n\t\td = scene(source+dir*t);\n\t\tif (d<P) return 0.0;\n\t\tif(t>r){break;}\n\t\ts = min(s,K*d/clamp(t,0.,1.));\n\t\tt += d;\n\t}\n\t\n\treturn s;\n}\n\nHit march(Ray r)\n{\n\tfloat t=0.0, d;\n\t\n\tfor(int i=0;i<S;i++)\n\t{\n\t\td=scene(r.o+r.d*t);\n\t\tif(d<P||t>D){break;}\n\t\tt+=d;\n\t}\n    \n    Hit h;\n    \n    h.p = r.o+r.d*t;\n    h.t = t;\n    h.d = d;\n\n\treturn h;\n}\n\nvec3 getColor(Hit h)\n{\n\tif (h.d > P) { return COL_SKY; }\n\t\n\tvec3 c = vec3(0);\n\tvec3 n = getNormal(h.p);\n\n\tfloat diff = max(dot(n,normalize(sun)),0.0);\n\tfloat diffc = floor(diff+0.5);\n\t\n\t//float spec = pow(max(dot(reflect(normalize(h.p-sun),n),normalize(cam.p)),0.0),100.0);\n\t//spec = floor(spec+0.5)*0.3+spec*0.7;\n\n\tfloat d = 1.0;\n\n\tif (dist_jake_skin  < d) { d = dist_jake_skin;  c = COL_JAKE_SKIN;  }\n\tif (dist_jake_black < d) { d = dist_jake_black; c = COL_JAKE_BLACK; }\n\tif (dist_jake_eyes  < d) { d = dist_jake_eyes;  c = COL_JAKE_EYES;  }\n\t\n\tif (dist_finn_shirt  < d) { d = dist_finn_shirt;  c = COL_FINN_SHIRT;   }\n\tif (dist_finn_white  < d) { d = dist_finn_white;  c = COL_FINN_WHITE;   }\n\tif (dist_finn_skin   < d) { d = dist_finn_skin;   c = COL_FINN_SKIN;    }\n\tif (dist_finn_black  < d) { d = dist_finn_black;  c = COL_FINN_BLACK;   }\n\tif (dist_finn_shorts < d) { d = dist_finn_shorts; c = COL_FINN_SHORTS;  }\n\t\n\tif (dist_ground < d) { d = dist_ground; c = COL_GROUND; }\n\t\n\t//if (-(dot(n,normalize(h.p-cam.p)))<0.4 && isGround == false){ return vec3(0); }\n\t\n\tc += c*diffc*0.2;\n\tc -= (1.-diff)*0.5;\n\tc -= (1.-getShadow(h.p,sun))*0.5;\n\n\treturn mix(c,COL_SKY,max(1.-5./exp(log(length(h.p-sun))),0.));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{    \n\tvec2 uv = (2.0*fragCoord.xy-iResolution.xy)/iResolution.xx;\n\tvec2 uvMouse = (iMouse.xy/iResolution.xy-0.5)*2.0;\n    \n\tcam.p *= rotY(uvMouse.x*TAU+0.3);\n\n\tfragColor = vec4(getColor(march(lookAt(cam,uv))),1.0);\n}","name":"Image","description":"","type":"image"}]}