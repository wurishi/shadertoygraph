{"ver":"0.1","info":{"id":"sdB3DG","date":"1617875206","viewed":78,"name":"random function test","username":"lonelyGizmo","description":"original Hash function www.cs.ubc.ca/~rbridson/docs/schechter-sca08-turbulence.pdf\nported from https://github.com/SebLague/Slime-Simulation/blob/main/Assets/Scripts/Slime/SlimeSim.compute","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["random","hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint hash(in float st)\n{\n    uint state = uint(st*1000000.0);\n    state ^= 2747636419u;\n    state *= 2654435769u;\n    state ^= state >> 16;\n    state *= 2654435769u;\n    state ^= state >> 16;\n    state *= 2654435769u;\n    return state;\n}\n\nfloat scaleToRange(uint state)\n{\n    return float(state) / 4294967295.0;\n}\n\nfloat test( in uint ts)\n{\n    //tst=float(ts);\n    return float(ts);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float rnd=scaleToRange(hash(uv.x*uv.y*iTime));\n    vec3 col = vec3(rnd);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}