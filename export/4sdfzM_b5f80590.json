{"ver":"0.1","info":{"id":"4sdfzM","date":"1524519761","viewed":83,"name":"Easyp Rainbow","username":"easyp","description":"rainbow","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["basic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nconst float pi = 3.14159265359;\nconst float ph = (2. * pi) / 3.;\n\nconst float a = .2;\nconst float c = .5;\nconst float f = .5;\nconst float speed = .0;\n\n#define RAINBOW_SNAKE 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n#if RAINBOW_SNAKE\n    float xw = sin((iTime + uv.x)*f*2.*pi) * a + c;\n    float v = smoothstep(.3, 1., 1. - distance(uv.y, xw));\n#else\n    float v = 1.;\n#endif\n    \n    vec3 col = hsv2rgb(vec3(uv.x + (iTime * speed), 1., v));\n    \n    if (uv.y < 0.5) {\n    \tfloat x = -(uv.x * 2. * pi) + pi/2.;\n    \tcol = vec3(sin(x)+.5, sin(x + ph)+.5, sin(x + (2. * ph))+.5); \n        col *= v;\n    }\n\n    fragColor = vec4(col ,1.0);\n}","name":"Image","description":"","type":"image"}]}