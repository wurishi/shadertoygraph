{"ver":"0.1","info":{"id":"msf3Ds","date":"1666988924","viewed":240,"name":"Simple star distance field","username":"mrange","description":"CC0: Simple star distance field\nNothing fancy, just tinkered with distance fields\n","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["2d","distance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// CC0: Simple star distance field\n// Nothing fancy, just tinkered with distance fields\n\n#define RESOLUTION  iResolution\n\n// Replaced original star code with IQ's improved star.\nfloat star(vec2 p, float r) {\n    p = abs(p);\n    vec2 q = p-r;\n    return q.x<0.0 && q.y<0.0 ? \n              r-sqrt( q.x*q.x + q.y*q.y ) :  \n            sqrt(min( p.x*p.x + q.y*q.y ,    // top corner\n                      q.x*q.x + p.y*p.y ));  // right corner\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  float aa = 2.0/RESOLUTION.y;\n  float d = star(p, 0.75);\n  \n  vec3 col = vec3(0.0);\n  \n  col = mix(col, vec3(0.75), smoothstep(aa, -aa, d));\n  col += 0.5+vec3(0.95, 0.0, 0.0)*sin(100.0*d);  \n  col = sqrt(col);\n  \n  fragColor = vec4(col, 1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}