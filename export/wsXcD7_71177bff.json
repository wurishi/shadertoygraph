{"ver":"0.1","info":{"id":"wsXcD7","date":"1588962149","viewed":388,"name":"FBM clouds","username":"mrabbitz","description":"FBM clouds, raymarching","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// SKY AND OCEAN\n// the following reference is sparingly used:\n// https://www.shadertoy.com/view/4d2cDy\n\n// implemented into Titanic Bridge shader at https://www.shadertoy.com/view/WslyRj\n\n#define PI 3.14159265358\n\n// random1o2i\nfloat noise2D(vec2 p) {\n    return fract(sin(dot(p,vec2(127.1,311.7))) * 43758.5453);\n}\n\nfloat interpNoise2D(vec2 uv) {\n    float intX = floor(uv.x);\n    float fractX = fract(uv.x);\n    float intY = floor(uv.y);\n    float fractY = fract(uv.y);\n\n    float v1 = noise2D(vec2(intX, intY));\n    float v2 = noise2D(vec2(intX + 1.0, intY));\n    float v3 = noise2D(vec2(intX, intY + 1.0));\n    float v4 = noise2D(vec2(intX + 1.0, intY + 1.0));\n\n    float i1 = mix(v1, v2, fractX);\n    float i2 = mix(v3, v4, fractX);\n    \n    return mix(i1, i2, fractY);\n}\n\nfloat fbm2D(vec2 uv) {\n    float total = 0.0;\n    float persistence = 0.5;\n    int octaves = 8;\n\n    for(int i = 1; i <= octaves; i++) {\n        float freq = pow(2.f, float(i));\n        float amp = pow(persistence, float(i));\n\n        total += interpNoise2D(uv * freq) * amp;\n    }\n    return total;\n}\n\nvec3 rotateY(vec3 p, float a) {\n    return vec3(cos(a) * p.x + sin(a) * p.z, p.y, -sin(a) * p.x + cos(a) * p.z);\n}\n\nvoid RayCast(vec2 uv, out vec3 dir, out vec3 eye, out vec3 ref) {\n    //eye = vec3(0.0, 0.0, 5.0);\n    //ref = vec3(0.0, 0.0, 0.0);\n    //float len = tan(3.14159 * 0.125) * distance(eye, ref);\n    //vec3 F = ref - eye;\n   \n    float t = iTime * 3.14159 * 0.01;\n    //eye = 10.0 * vec3(cos(t), 0.0, sin(t));\n    //F = rotateY(vec3(0.0, 0.0, 1.0), -t);\n    //len = 1.0 * tan(3.14159 * 0.125);\n    //ref = eye + F;\n   \n    eye = vec3(0.0, 0.0, 4.0);\n    //eye = rotateY(vec3(-3.0, 0.0, 4.0), t);\n    ref = vec3(0.0, 0.0, 1.0);\n    float len = tan(3.14159 * 0.125) * distance(eye, ref);\n    vec3 F = ref - eye;\n   \n   \n    vec3 H = normalize(cross(F, vec3(0.0, 1.0, 0.0)));\n    vec3 V = normalize(cross(H, F));\n    V *= len;\n    H *= len * iResolution.x / iResolution.y;\n    vec3 p = ref + uv.x * H + uv.y * V;\n    dir = normalize(p - eye);\n}\n\nconst vec3 up = vec3(0.0, 1.0, 0.0);\n\n// https://www.color-hex.com/color/87cefa\nconst vec3 horizonColor = vec3(135.0/255.0, 206.0/255.0, 250.0/255.0);\n// https://www.color-hex.com/color/1874cd\nconst vec3 skyColor = vec3(24.0/255.0, 116.0/255.0, 205.0/255.0);\nconst vec3 cloudColor = vec3(1.0);\nconst float cloudPlaneHeight = 10.0;\n\nvoid Clouds(vec3 dir, out vec3 color) {\n    vec3 cloudPlane = dir*cloudPlaneHeight/dot(dir, up);\n    vec2 uv = cloudPlane.xz + iTime * .5;\n    float clouds = fbm2D(uv * .01);\n    clouds = clamp((clouds - 0.5) * 2.0, 0.0, 1.0);\n    color = mix(color, cloudColor, clouds);\n}\n\nconst float waterPlaneHeight = 1.0;\n// https://www.schemecolor.com/sample?getcolor=004281\nconst vec3 waterColor = vec3(0.0/255.0, 66.0/255.0, 129.0/255.0);\n\nconst vec3 sun = normalize(vec3(0.0, 0.1, 1.0));\n\nvoid Ocean(vec3 dir, out vec3 color) {\n    vec3 waterPlane = dir*waterPlaneHeight/dot(dir, up);\n    vec2 uv = waterPlane.xz + iTime * 2.0;\n    \n    color = waterColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // [-1, 1]\n    vec2 uv2 = 2.0 * uv - vec2(1.0);\n    uv2.y /= 3.0;\n   \n    vec3 dir, eye, ref;\n    RayCast(uv2, dir, eye, ref);\n    // sets color of sky\n    vec3 color = mix(horizonColor, skyColor, smoothstep(-.2, .3, dir.y));\n    \n    // clouds\n    if (uv2.y>0.02)\n    {\n        Clouds(dir, color);\n\t}\n    else if (uv2.y<0.00)\n    {\n        Ocean(dir, color);\n    }\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}