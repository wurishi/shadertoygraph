{"ver":"0.1","info":{"id":"clGGWR","date":"1683836447","viewed":131,"name":"Many lines","username":"Slals","description":"Wanted to create remanant lines, not satisfied by the result yet but the result feels ok","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["line","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float easeOutQuad(float x) {\n    return 1.0 - (1.0 - x) * (1.0 - x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec3 col = vec3(0);\n    \n    float f = 20.0;\n    uv.xy *= f;\n    vec2 ipos = ceil(uv);\n    uv = fract(uv);\n    \n    float t = iTime - ipos.x * 0.02;\n    float fx = sin(t * 2.0 - ipos.x) + 0.4;\n    float dx = 2.0 * cos(2.0 * t - ipos.x);\n    \n    float fadingF = 1.0;\n    if (dx < 1.5) {\n        fadingF = easeOutQuad(fx * 0.5);\n        col += (step(uv.x, min(fx, 1.0)) - step(uv.x + (f / iResolution.y), min(fx, 1.0))) * fadingF;\n    } else\n        col += (step(uv.x, fx) - step(uv.x + (f / iResolution.y), fx));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}