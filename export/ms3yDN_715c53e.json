{"ver":"0.1","info":{"id":"ms3yDN","date":"1695064638","viewed":52,"name":"playing with planar mapping ","username":"anass_RAZIK","description":"playing with planar mapping ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\nmat2 rot(float a){float c=cos(a),s=sin(a);return mat2(c,s,-s,c);}\n\nfloat sphere(in vec3 p){\n    float disp = 0.;//sin(time)*0.5+0.5;\n    p.yz *= rot(time);\n    p.xy *= rot(time);\n    p.xz *= rot(time);\n    return disp+(length(p)-0.5);\n}\n\nfloat box(vec3 p){\n    p.yz *= rot(time);\n    p.xy *= rot(time);\n    p.xz *= rot(time);\n    return length(max(abs(p)-0.5*0.5, 0.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy*2.0-1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 o = vec3(0,0,2.0), d = normalize(vec3(uv, -1.5));\n    float t = 0.;\n    for(int i = 0; i < 60; i++){\n        vec3 p = o + d*t;\n        float d = min(box(p),sphere(p-vec3(2.0,0,0)));\n        if(t > 20. || d < 0.001) break;\n        t+=d;\n    }\n    vec3 psdf = o+d*t;\n    float eps = 0.001;\n    \n    psdf.yz *= rot(time);\n    psdf.xy *= rot(time);\n    psdf.xz *= rot(time);\n    \n    vec3 normal = vec3(sphere(psdf + vec3(eps, 0, 0)) - sphere(psdf - vec3(eps, 0, 0)),\n                        sphere(psdf + vec3(0, eps, 0)) - sphere(psdf - vec3(0, eps, 0)),\n                        sphere(psdf + vec3(0, 0, eps)) - sphere(psdf - vec3(0, 0, eps)))/eps;\n    float theta = atan(psdf.y, psdf.x);\n    float phi = acos(psdf.z / length(psdf));\n    \n    vec3 diff = vec3(0.4, 0.5, 0)*texture(iChannel0, vec2(theta/(2.*3.141592), phi/3.141592)).xyz;\n    vec3 lightPos = vec3(0,0.,3.);\n    vec3 lightDir = normalize(lightPos - psdf);\n    vec3 reflight = reflect(lightPos, normal);\n    fragColor = vec4(diff*max(dot(lightDir,normal), 0.0), 1.);\n}","name":"Image","description":"","type":"image"}]}