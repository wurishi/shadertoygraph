{"ver":"0.1","info":{"id":"md3XD4","date":"1680224962","viewed":144,"name":"Mouse Trail Bump Map","username":"jellygatorade","description":"Fading mouse trails using Buffer A. Bump map applied in Image. Click and drag mouse on screen to test.\n\n","likes":4,"published":1,"flags":48,"usePreview":0,"tags":["test","texture","demo","buffer","frame","backbuffer","previous"],"hasliked":0,"parentid":"mtSGDy","parentname":"Test 11 - fading mouse trails"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Following:\n//\n// Old school bump mapping\n// https://www.shadertoy.com/view/NlKcR3\n//\n// Fading Mouse Trails\n// https://www.shadertoy.com/view/mtSGDy\n\n\n#define INTENSITY 5.0\n#define HEIGHT 0.25\n\n// For textures with sharper details (e.g. anything other than Pebbles),\n// values closer to 1 will look nicer:\n#define DISTANCE_MOD 1.007\n#define ARB_MOD .0035\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    float time = 0.5*iTime;\n    \n    // Rotating light\n    //vec2 arbPosition = vec2(2. * ARB_MOD * cos(time), 2. * ARB_MOD * sin(time));\n    //vec2 offsetUv = (uv - arbPosition);\n    //float a = texture(iChannel0, uv).x;\n    //float b = texture(iChannel0, offsetUv).x;\n    \n    // Fixed light\n    float a = texture(iChannel0, uv + ARB_MOD).x;\n    float b = texture(iChannel0, uv - ARB_MOD).x;\n    \n    float difference = (b - a) * INTENSITY;\n    \n    float lighting = difference * HEIGHT + 0.5;\n    fragColor = vec4(vec3(lighting), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define KEY_SPACE 32\n#define STROKE_SIZE 30.\n\n// Key events from \n// https://www.shadertoy.com/view/4dGyDm\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 draw = texture(iChannel0,uv);\n    vec3 col = draw.rgb;\n    \n    vec2 M = iMouse.xy;\n    \n    // if spacebar down, reset drawing\n    float isKeyDown = texelFetch( iChannel1, ivec2(KEY_SPACE, 0),0 ).x;\n    if (isKeyDown == 1.0) {\n        col = vec3(0.0);\n    }\n    \n    if (M == vec2(0)) { // demo mode\n        float d = 0.5 * iResolution.y - STROKE_SIZE;\n        float aspectdiff = 0.5 * (iResolution.x - iResolution.y) + STROKE_SIZE;\n        \n        M = vec2(cos(0.5*iTime) * d + d + aspectdiff, sin(0.5*iTime) * d + d + STROKE_SIZE);\n        \n        col = mix(col, vec3(1.), smoothstep(STROKE_SIZE,0., length(fragCoord-abs(M.xy))));\n    }\n    \n    \n    if ( iMouse.z > 0.0 ) { // mouse button is down\n        col = mix(col, vec3(1.), smoothstep(STROKE_SIZE,0., length(fragCoord-abs(M.xy))));\n    }\n    \n    \n    col = clamp(col, 0., 1.);\n    \n    fragColor = vec4(vec3(-.0025, -.0025, -.0025),1.0) + vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}