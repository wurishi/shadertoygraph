{"ver":"0.1","info":{"id":"4XBBRK","date":"1730045212","viewed":38,"name":"Slope SDF - 2D","username":"Ponjee","description":"Description here","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","raymarching","distancefield","sdf","lineslope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481;\n\nfloat sdSlope( in vec2 p, in vec2 r )\n{\n    return dot(p, r);\n}\n\n// Main function\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 p = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n    p *= 2.0;\n    m *= 2.0;\n    \n    vec2 pi = vec2(sin(iTime),sin(iTime));\n    vec2 r = vec2(cos(iTime/10.0),sin(iTime/10.0));\n    \n\tfloat d = sdSlope( p-pi, r );\n\n    vec3 col = (d>0.0) ? vec3(0.9,0.6,0.3) : vec3(0.65,0.85,1.0);\n\tcol *= 1.0 - exp(-4.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(60.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.02,abs(d)) );\n\n    if( iMouse.z>0.001 )\n    {\n    d = sdSlope( m-pi, r );\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.01, abs(length(p-m)-abs(d))-0.005));\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.01, length(p-m)-0.03));\n    }\n    \n\tfragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}