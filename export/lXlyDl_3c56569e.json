{"ver":"0.1","info":{"id":"lXlyDl","date":"1726799905","viewed":44,"name":"Aurora Over Ripples","username":"GarlicGraphix","description":"Yeah","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["aurora"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float noise(vec2 p) {\n    return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\nconst float SPACE_DENSITY = 0.9;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 tuv = uv;\n    uv = floor(uv*320.);\n    uv/=320.;\n    float r = noise(mod(uv + floor(iTime), 10.));\n    float r2 = noise(mod(uv + 1. + floor(iTime), 10.));\n    // Time varying pixel color\n    vec3 col = vec3((uv.x + sin(uv.y*14.) + r)*0.1, 0.0, sin(uv.y*sin(iTime)) + sin(iTime+uv.x*10.)*0.3);\n    col *= 0.;\n    vec3 star = vec3(0.0);\n    vec3 star2 = vec3(0.0);\n    if(r >= SPACE_DENSITY) {\n        star = vec3(r);\n    }\n    if (r2 >= SPACE_DENSITY) {\n        star2 = vec3(r2);\n    }\n    \n    float t = fract(iTime);\n    star = star * (1.-t) + star2 * (t);\n    star *= 0.4- uv.y*0.8;\n    float sway_x = tuv.x + uv.y*(5.+uv.y*8.)*sin(uv.x*1.8);\n    float sway_t = iTime*4.;\n    float sway = sin(sway_t+sway_x*5.)*0.001;// +sin(sway_t*1.1+sway_x*10.)*0.0005 + sin(sway_t*1.5+sway_x*15.)*0.00025;\n    float y_factor = uv.y*0.01;\n    sway *= 1.-uv.y;\n    if (uv.y < 0.5 - sway*20.) {\n        y_factor = 0.;\n    } else {\n        star *= 0.;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col + star,1.0) + texture(iChannel0, fract(fragCoord/iResolution.xy+vec2(0.0018+sway*0.5, sway+0.0005+y_factor)))*vec4(0.97-r*0.05, 0.95+y_factor, 0.98-r2*0.05, 1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}