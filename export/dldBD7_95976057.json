{"ver":"0.1","info":{"id":"dldBD7","date":"1701388484","viewed":13,"name":"Mobius Van Truchet","username":"rubenbaca","description":"Transformación de mobius aplicada a una teselación de Truchet.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mobius","truchet","claudevandamme"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash21(vec2 p) {\n    p = fract(p * vec2(675.28, 973.05));\n    p += dot(p, p + vec2(334.78));\n    return fract(p.x * p.y);\n}\nvec2 mobius(vec2 p, float a, float b, float c, float d) {\n    return (p * vec2(a, b) + vec2(c, d)) / (p.x * p.x + p.y * p.y);}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= 100.0;\n    //uv += iTime * 0.6;\n    uv=mobius(uv,iTime*.4,iTime*.4,iTime*.4,iTime*.4);\n\n    vec2 gv = fract(uv) - 0.5; // Local coordinates\n\n    vec2 id = floor(uv);\n    float n = hash21(id);\n\n    float d = smoothstep(0.1, 0.11, length(uv));\n\n    vec3 col = vec3(0); // Default color\n    \n     // Sample texture\n    vec3 skyColor = texture(iChannel0, uv).rgb;\n\n    // Combine with the original color\n    col = mix(col, skyColor, d);\n\n    //col.rg = gv;\n    if (n > 0.5) gv.x *= -1.0; // Random\n    float ancho = 0.1;\n    d = abs(abs(gv.y + gv.x) - 0.5); // Rectangular pattern\n\n    vec2 Cuv = gv - 0.5 * sign(gv.y + gv.x + 0.001);\n    d = length(Cuv) - 0.5;\n    float mask = smoothstep(0.01, -0.012, abs(d) - ancho);\n\n    // Tomar textura del canal 1\n    vec3 texColor = texture(iChannel1, uv).rgb;\n\n    // Combinar textura\n    col = mix(col, texColor, mask);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}