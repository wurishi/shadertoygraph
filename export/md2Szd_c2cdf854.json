{"ver":"0.1","info":{"id":"md2Szd","date":"1670766618","viewed":147,"name":"neon step","username":"jonasfrey","description":"neon\nhttps://www.desmos.com/calculator/mjeivvpxz5?lang=de","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f_n_inoutexp(float n, float n_sharpness){\n    n_sharpness = floor(n_sharpness) + mod(floor(n_sharpness),2.); // must be dividable by 2.\n    n = max(0.,min(1., n));\n    return min(pow(n, n_sharpness),pow( n-1., n_sharpness))*pow(2., n_sharpness);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 o_trpino = (fragCoord.xy - (iResolution.xy/2.)) / iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    float n_dist = length(o_trpino)/0.5;\n    n_dist = fract(n_dist+iTime);\n    float n_dist_modified = f_n_inoutexp(n_dist, 2.);\n    // Output to screen\n    fragColor = vec4(n_dist_modified);\n}","name":"Image","description":"","type":"image"}]}