{"ver":"0.1","info":{"id":"msSXRD","date":"1699477240","viewed":77,"name":"Bubbles chess","username":"minghir","description":"Two bubbles on chess board.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","chess"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n#define t iTime / 1.4\n#define lngth( x , y ) pow( 4.37 - length( x ) - length( y ) / 4. , .4 )\n\nvec4 bgr( vec2 I )\n{\n  I = I / R.y;\n  I.x += sin( t * 2. ) * cos( t ) / 2.;\n  return vec4( mod( ceil( I * 20. ).x - ceil( I * 20. ).y, 2. ) );\n}\n\nvec2 bubble( vec2 u, float s )\n{\n    u += vec2( sin( t * 2. ) * cos( t /2.5 ) , cos( 2. * sin( t ) ) ) * s;\n    u *=  dot( -u * 90. , u );\n    return  length( u / 3. ) < 1.4 ? u : vec2( 0 );\n}\n\nvoid mainImage( out vec4 O, vec2 I )\n{\n    vec2 u = (2.* I - R.xy ) / R.y ;\n    vec2 b1 = bubble( u / 1.2 , 1. );\n    vec2 b2 = bubble( u / 1.2 , -1.);\n    vec2 b3 = bubble( -b1 / 7., -1.) * 1.8 ;\n    vec2 b4 = bubble( -b2 / 7.,  1.) * 1.8;\n\n    vec2 bubbles =  2. * I - 19. * ( b1 + b2 + b3 + b4 );\n    O = bgr( bubbles ) * min( lngth( b1 , b3 ), lngth( b2 , b4 ) );\n    O *= O / 1.4;\n}","name":"Image","description":"","type":"image"}]}