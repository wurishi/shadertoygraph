{"ver":"0.1","info":{"id":"tsSyDD","date":"1586644577","viewed":243,"name":"crystal fbm","username":"nergethic","description":"fbm warping","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","fbm","galaxy","pattern","geometric","crystal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_OCTAVES 5\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nfloat fbm(vec2 x) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100);\n\t// Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n\tfor (int i = 0; i < NUM_OCTAVES; ++i) {\n\t\tv += a * noise(x);\n\t\tx = rot * x * 2.0 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\n// https://iquilezles.org/articles/warp\nfloat pattern( in vec2 p )\n{\n    vec2 q = vec2( fbm( p + vec2(0.0,0.0) ),\n                   fbm( p + vec2(5.2,1.3) ) );\n\n    return fbm( p + 4.0*q );\n}\n\nvec3 colour(float x) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.0, 0.0, 0.0);\n    \n    return a + b * cos(6.28318*(c*x+d));\n}\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 0.7*abs(2.0*(uv-0.5));\n    uv.y += uv.x / 10.0;\n\n    float noise = fbm(iTime*0.2+uv*10.0) / 4.0;\n    float noiseTex = pattern(rotate(uv*10.0*(1.0+(0.05*sin(iTime*0.5))), iTime*0.01)) * 0.5+cos(0.2*iTime+sin(iTime)*0.2);\n    \n    float inside = (sin((uv.x+uv.y))*10.0) + (uv.y*10.0+uv.x*10.0);\n    float mask = (uv.y*2.0 + sin(inside)) / 1.5;\n    \n    vec3 col = colour(noiseTex+mask);\n    col.rg += -abs(rotate(uv, 0.3*iTime+noise*10.0).xy);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}