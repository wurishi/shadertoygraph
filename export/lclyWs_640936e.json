{"ver":"0.1","info":{"id":"lclyWs","date":"1721811666","viewed":26,"name":"HW11_Neon","username":"EurekaChen","description":"neon claude van damme","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 col = texture(iChannel1, uv).rgb;\n    col = pow3(col + 0.3, 2.2);\n    \n    float sumX = 0.0;\n    float sumY = 0.0;\n    \n    vec2 sum = vec2(0.);\n    \n    for(int i = -1; i <= 1; i++)\n        for(int j = -1; j <= 1; j++)\n        {\n            vec2 xy = (fragCoord.xy + vec2(float(i), float(j))) / iResolution.xy;\t\n            sum += length(texture(iChannel0, xy).xyz) * vec2(sobelX[1+i][1+j], sobelY[1+i][1+j]);\n        }\n    \n    float g = abs(sum.x) + abs(sum.y);\n    col = vec3(smoothstep(0.0,0.8,0.2 + g*g*(0.7 + 0.3 * sin(iTime * 1.2 + 2. * uv.y))),0.1 + smoothstep(0.0,0.8,g*sin(iTime* 1.3 + 1.2)),0.2 + smoothstep(0.0,0.8,g*sin(iTime * 0.8 * 3.7)));\n    fragColor = vec4(pow3(col + 0.3, 3.2), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"mat3 sobelX = mat3(-1.0, -2.0, -1.0,\n                   0.0,  0.0, 0.0,\n                   1.0,  2.0,  1.0);\nmat3 sobelY = mat3(-1.0,  0.0,  1.0,\n                   -2.0,  0.0, 2.0,\n                   -1.0,  0.0,  1.0);  \n\nconst int mSize = 25;\nconst int kSize = (mSize-1)/2;\nconst float sigma = 4.0;\nfloat kernel[mSize];\n#define TWO_PASS_GAUSSIAN\n\n\nfloat normpdf(in float x, in float sigma)\n{\n\treturn 0.39894*exp(-0.5 * x * x / (sigma * sigma)) / sigma;\n}\n\nvec3 pow3(vec3 p, float m)\n{\n    return vec3(pow(p.x,m),pow(p.y,m),pow(p.z,m));\n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 res = vec3(0.0);\n\n    float Z = 0.0;\n    for (int j = 0; j <= kSize; ++j) {\n        kernel[kSize+j] = kernel[kSize-j] = normpdf(float(j), sigma);\n    }\n\n    for (int j = 0; j < mSize; ++j) {\n        Z += kernel[j];\n    }\n\n    for (int i=-kSize; i <= kSize; ++i) {\n        for (int j=-kSize; j <= kSize; ++j) {\n            res += kernel[kSize+j]*kernel[kSize+i]*texture(iChannel0, (fragCoord.xy+vec2(float(i),float(j))) / iResolution.xy).rgb;\n\n        }\n    }\n\n    fragColor = vec4(res / (Z * Z), 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}