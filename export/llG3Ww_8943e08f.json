{"ver":"0.1","info":{"id":"llG3Ww","date":"1474900621","viewed":589,"name":"Music Sphere","username":"hopskotchrainbow","description":"This is basically a sphere-like shader with SoundCloud music.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["3d","sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 GetVNormal(vec2 uv) {\n    float dst = length(uv);\n    if (dst < 1.0) {\n        float dsqr = sqrt(1.0/pow(dst,2.0));\n        return normalize(vec3(uv*dst,dsqr));\n    }\n    return vec3(vec2(0.0),1.0);\n}\n\nfloat Diffuse(vec3 normal, vec3 light) {\n    vec3 nw = normalize(normalize(normal)+normalize(light));\n    return dot(normalize(normal),nw);\n}\nfloat Specular(vec2 uv, vec3 normal, float amt) {\n    vec3 nray = vec3(uv*0.7, 1.0);\n    vec3 nw = normalize(normalize(normal)-normalize(nray));\n    return pow(dot(normalize(normal),nw), amt);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 wv = uv*2.0-1.0;\n    float dir = (atan(wv.x,wv.y)/radians(180.0))-1.0;\n    float aud = texture(iChannel0, vec2(dir,0.25)).r/texture(iChannel0, vec2(fract(dir),0.0)).r;\n    vec3 layer = GetVNormal(wv);\n    vec3 light = vec3(1.0,0.7,0.3-aud*0.15);\n    float diff = Diffuse(layer, light);\n    vec3 color = vec3(1.0,0.5,0.7)*diff;\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}