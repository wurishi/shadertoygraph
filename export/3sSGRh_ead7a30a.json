{"ver":"0.1","info":{"id":"3sSGRh","date":"1548058860","viewed":241,"name":"Rave heart","username":"theepicsnail","description":"Rainbow heart!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["heart","rainbow","led"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 cossin(float a) { return vec2(cos(a), sin(a)); }\nconst int[] beyond = int[](\n    0,\t4064,\t2336,\t2336,\t1728,\n    0,\t448,\t672,\t672,\t288,\n    0,\t448,\t32,\t\t36,\t\t504,\n    0,\t192,\t288,\t288,\t192,\n    0,\t480,\t256,\t256,\t224,\n    0,\t192,\t288,\t288,\t4080,\t16,\n    0\n);\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);\n}\n\nvec2 rotate(vec2 uv, float a) {\n    vec2 cs = cossin(a);\n    return uv * mat2x2(cs.x, -cs.y, cs.y, cs.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvec3 getColor(vec2 uv, int id) {\n    id = 0;\n    switch(id%6) {\n        case 0: break;\n        case 1: uv.x = abs(uv.x); break;\n        case 2: uv.y = abs(uv.y); break;\n        case 3: uv   = abs(uv);   break;\n        case 4: uv.x *= -1.0; break;\n        case 5: uv.y *= -1.0; break;\n    }\n    switch(id%5) {\n    \tcase 0: return hsv2rgb(vec3(uv.y*.1-iTime, 1, 1));\n    \tcase 1: return hsv2rgb(vec3(uv.x*.1-iTime, 1, 1));\n    \tcase 2: return hsv2rgb(vec3(length(uv)*.1-iTime, 1, 1));\n        case 3: return hsv2rgb(vec3(-iTime*.1616, 1, 1));\n        case 4: return hsv2rgb(vec3((abs(uv.x)+abs(uv.y))*.1 - iTime, 1, 1));\n    }\n    return vec3(1,0,1);\n}\n\nfloat heart(vec2 pixel_uv) {\n    pixel_uv.x = abs(pixel_uv.x); // left = right side.\n    pixel_uv.y += 2.0; // shift picture down leds\n    float arm_length = 5.0;\n    float heart_diameter=3.0;\n    float heart_thickness=1.0;\n    // rotate 45 degrees so that y-axis is pointed up/right /\n    pixel_uv = rotate(pixel_uv, 3.14159/4.0);\n    float rect_dist = sdBox(pixel_uv, vec2(0.0,arm_length));\n    float mask = abs(rect_dist-heart_diameter);\n    return mask < heart_thickness ? 1.0 : 0.0;    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float boolean_mask = 1.0;\n    vec3 color = vec3(1.0);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    uv*=20.0; // cells tall.\n    uv.x += .5;\n    \n    vec2 pixel_uv = floor(uv);\n    \n    \n\tboolean_mask = heart(pixel_uv);\n    \n    \n    pixel_uv = rotate(pixel_uv, -3.14159/4.0);\n    int id = int(iTime);\n    color = mix(\n        getColor(floor(uv), id),\n        getColor(floor(uv), id+1),\n        smoothstep(0.0,1.0, fract(iTime)));\n    \n    vec2 subpixel_uv = fract(uv);\n    float led = 1.0-length(subpixel_uv-.5)*2.0;\n    fragColor = vec4(1);\n    fragColor *= boolean_mask;\n    fragColor *= led*2.0;\n    fragColor.rgb *= color;\n}","name":"Image","description":"","type":"image"}]}