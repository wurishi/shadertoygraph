{"ver":"0.1","info":{"id":"X32cz1","date":"1727044578","viewed":58,"name":"Mug Moment","username":"GarlicGraphix","description":"Mug","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["soda","mug","rootbeer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float bubble_count = 10.;\nfloat bubble_density = 0.45;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.y;\n    vec2 tuv = uv;    \n    uv.x -= sin(uv.y*5.)*0.05;\n    uv.y -= sin(uv.x*50.)*0.005 + iTime*0.1;\n    \n    vec2 t = floor(uv*bubble_count);\n    uv = fract(uv*bubble_count);\n    \n    float b_size = clamp(sin(iTime*random(t)+random(t)*20.)*0.75+1.75, 1., 2.75);\n    \n    \n    \n    \n    float r = noise(t, bubble_count, iResolution.xy);\n    vec4 col = vec4(0.);\n    col = vec4(0.75, 0.39, 0.14, 1.0);\n    col = mix(col, vec4(0.89, 0.44, 0.14, 1.0), noise(tuv, 200., iResolution.xy)*0.5+tuv.y);\n    \n    if (r >= 1.-bubble_density) {\n        vec4 tex = texture(iChannel0, uv*b_size);\n        col = mix(col, tex, tex.a);\n        \n    }\n    //Foam\n    vec4 s_col = vec4(0.56, 0.26, 0.09, 1.);\n    vec4 lf_col = vec4(0.8, 0.62, 0.29, 1.);\n    float f = 0.7+fbm(tuv.x*7., iTime*0.3)*0.1;\n    float s_fact = 0.;\n    float lf_fact = 0.;\n    if (tuv.y < f) {\n        s_fact = 1.-smoothstep(f-tuv.y, 0.0, 0.02);\n    }\n    if (tuv.y > f) {\n        s_fact = 1.-smoothstep(abs(f-tuv.y), 0.0, 0.001);\n        lf_fact = 1.+f-tuv.y*2. + noise(tuv, 500., iResolution.xy)*0.4;\n        col = vec4(.97, .95, .89, 1.);\n    }\n    col = mix(col, s_col, s_fact);\n    col = mix(col, lf_col, lf_fact);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n\n    float l = sdCircle(uv, 0.25);\n    // Time varying pixel color\n    vec4 bg_col = vec4(0.76, 0.39, 0.12, 0.);\n    vec4 b_col = vec4(0.56, 0.26, 0.09, 1.);\n    vec4 l_col = vec4(0.98, 0.92, 0.87, 1.);\n    float bf = 0.;\n    float lf = 0.;\n    if (l > 0.) {\n        bf = 1.-smoothstep(l, 0.0, 0.02);\n    } else {\n        bf = 1.-smoothstep(abs(l), 0.0, 0.01);\n        lf = dot(normalize(uv), normalize(vec2(sqrt(2.), 2.)));\n        lf -= abs(0.15- length(uv))*15.;\n        lf = clamp(lf, 0., 1.);\n    }\n    \n    \n    \n    \n    \n    vec4 col = mix(bg_col, b_col, bf);\n    col = mix(col, l_col, lf);\n\n    // Output to screen\n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\nfloat random(vec2 p) {\n    return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 p, float g, vec2 R) {    \n    float s = R.y/g;\n    float v = 0.;\n    float tw = 0.;\n    \n    for (float x = -1.; x < 2.; x++) {\n        for (float y = -1.; y < 2.; y++) {\n            vec2 o_uv = p * g;\n            vec2 o = vec2(x, y);\n            vec2 t = floor(o_uv)+o;\n            t /= g;\n            float w = length(t-p);\n            v += random(t)*w;\n            tw += w;\n        }\n    }\n    return v/tw;\n}\n\nfloat fbm(float x, float t) {\n    float val;\n    float freq = 1.;\n    float mag = .75;\n    for (float i = 0.; i < 6.; i++) {\n        val += sin((x+t*freq)*freq)*mag;\n        freq *= 1.2;\n        mag *= 0.8;\n    }\n    return val;\n}","name":"Common","description":"","type":"common"}]}