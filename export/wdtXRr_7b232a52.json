{"ver":"0.1","info":{"id":"wdtXRr","date":"1571352685","viewed":96,"name":"Frequency and Phase table","username":"legarcia","description":"Studio of cartesian tabulation of frequency multipliers on X and Phase on Y: \nfrequency = floor(x)*0.1  ( -n .. -2, -1, 0, 1, 2 .. n )\nphase       = floor(y)*0.1\nAxis offset to freq = 0                ... squint a little","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["frequencyphase"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat freq_n_phase(float freq, float phase){\n    \n    phase = TWOPI*phase;  \n    freq = fract(iTime*freq)*TWOPI;\n    \n    return (freq + phase);\n}\n\n\n\nvec4 tiler(vec2 inp){\n    \n    vec3 o =vec3(1.);\n    vec2 grid = fract(inp);\n\n    grid -=.5;    \n\n    vec2 id;\n     // id = abs(floor(inp))-1. ;\n    id = floor(inp);\n    \n    \n    float z = cos(freq_n_phase(id.x*.1, id.y*0.1 ))*.25+.25;\n    \n    //z = length(id)/10.;\n    \n    \n    if (length(grid) < z) {\n       z = 1.;\n    } else z =0.;\n    \n   \n    vec3 outp = vec3(z);\n    \n    inp -=.5;\n    if (abs(inp.x)<.03 || abs(inp.y)<.03 ) {\n       outp = vec3(1.,0.,0.);\n    } \n    \n    \n    return vec4(outp, 1.0);\n\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)*33./iResolution.y;\n\n    //uv += 5.;\n    \n    vec4 col = tiler(uv);\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define TWOPI 3.141592*2.\n\n","name":"Common","description":"","type":"common"}]}