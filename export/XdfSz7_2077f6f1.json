{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":1,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define PI 3.14159265359\n#define REC_PI .3183098862\nfloat lenSq(vec2 c) {\n\treturn c.x*c.x + c.y*c.y;\n}\nvec2 get_polar(vec2 cart) {\n\tvec2 pol = vec2(atan(cart.y, cart.x), log(lenSq(cart)));\n\tpol.x = pol.x * REC_PI * .5 + .5;\n\treturn pol;\n}\nfloat roundTo(float x, float prec) {\n\treturn (floor(x*prec)+.5)/prec;\n}\nfloat get_beam(vec2 pol, float prec) {\n\treturn texture(iChannel1, vec2(roundTo(pol.x, prec), roundTo((pol.y+pol.x*.1)*.01-iTime*.1,prec)*.5)).r;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (fragCoord.xy / iResolution.xy) * 2. - 1.;\n\tvec2 pol = get_polar(uv);\n\tfloat prec = iChannelResolution[1].x;\n\tfloat beam = get_beam(pol, prec);\n\tbeam = clamp(beam * 1024. - 920., 0., .5);\n\tbeam *= sin((pol.x * prec - .25) * PI * 2.) * .5 + .5;\n\tfragColor = vec4(0.0, beam * .5, beam, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdfSz7","date":"1398111599","viewed":1239,"name":"Laser Tunnel","username":"Pitzik4","description":"Just a quick little shader I made when I was bored. I think it looks pretty good.","likes":27,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","abstract","moving","neon","dark"],"hasliked":0,"parentid":"","parentname":""}}