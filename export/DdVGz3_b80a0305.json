{"ver":"0.1","info":{"id":"DdVGz3","date":"1678884817","viewed":176,"name":"GPT-4 generated  this code","username":"shyuriken","description":"this code is generated by GPT-4 with inputting  following prompt.\n\"Write a GLSL code that can be copied and pasted into the Image pane of shadertoy.com to display a video of a red ball gradually changing into a green cube!\"","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["ai","gpt4"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize the coordinate system\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Center the coordinate system\n    vec2 centeredUV = uv * 2.0 - 1.0;\n    centeredUV.x *= iResolution.x / iResolution.y;\n\n    // Create a time variable that oscillates between 0 and 1\n    float t = sin(iTime) * 0.5 + 0.5;\n\n    // Interpolate between the sphere and the cube shapes\n    float sphereRadius = 0.4;\n    float cubeSize = 0.8;\n    float sphere = length(centeredUV) - sphereRadius;\n    float cube = max(abs(centeredUV.x), abs(centeredUV.y)) - cubeSize * 0.5;\n    float shape = mix(sphere, cube, t);\n\n    // Create a mask to separate the shape from the background\n    float mask = smoothstep(0.0, 0.02, shape);\n\n    // Interpolate between the red and green colors\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 green = vec3(0.0, 1.0, 0.0);\n    vec3 color = mix(red, green, t);\n\n    // Combine the shape mask and the color\n    vec3 finalColor = mix(vec3(0.0), color, mask);\n\n    // Output the final color\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}