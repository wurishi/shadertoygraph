{"ver":"0.1","info":{"id":"ddjcWG","date":"1688126380","viewed":331,"name":"Hell Texture [209 Chars]","username":"SnoopethDuckDuck","description":"any golf suggestions welcome :)\n\npartly inspired by Xor's shader: https://www.shadertoy.com/view/7lyBRR","likes":27,"published":3,"flags":0,"usePreview":0,"tags":["texture","tweet","onetweet","golf","furry","250chars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// -8 thanks to coyote  [213]\n// -4 thanks to Fabrice [209] :O\nvoid mainImage( out vec4 O, vec2 u )\n{ \n    float t = .05*iTime, i;\n    u = u/iResolution.y + t;\n    O *= 0.;\n    for( O.yz++; \n         i++ < 9.;\n         O = cos(  .4* cos( u.x - t ) \n                 + 1.04 * O\n                 + 1. / ( 1. + length( fract(  u = u *.8* mat2(-2,1,1,2)  \n                                                   + .4*O.x* cos( t - vec2(0,1) )\n                                            )   \n                                       -.5 )))\n       ) t += 5.*O.x;\n}\n\n// original\n/*\nvoid mainImage( out vec4 O, in vec2 u )\n{ \n    float t = .05*iTime;\n    u = u/iResolution.y + t;        \n    O = vec4(0, 1, 1, 0); // change O.x for more motion. could do O * t\n\n    // interesting values to change:\n    // .4*cos(...)         noisy\n    // .4*O.x*cos(...)     aligned\n    // 1.*length(fract(... dotty\n    // 1.04*O+...          saturate/inflate\n    // replace cos(u.x-...) with u.y, or length(u), a*u.x+b*u.y etc. \n    for (int i = 0; i++ < 9;) \n    O = cos(.4*cos(u.x-(t+=5.*O.x))+1.04*O+1.\n          /(1.+length(fract(\n            u=u*.8*mat2(-2,1,1,2)+.4*O.x*cos(t-vec2(0,1)))   \n            -.5)));\n}\n//*/","name":"Image","description":"","type":"image"}]}