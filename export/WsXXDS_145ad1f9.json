{"ver":"0.1","info":{"id":"WsXXDS","date":"1551968202","viewed":334,"name":"8-bit truecolor dither","username":"mensab","description":"More messing around with dithering.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","effect","dithering","8bit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dither_between(float f, float lo, float hi, vec2 fc) {\n    //  bayer matrix by default, different textures for iChannel0 dither differently\n    float d_edge = texture(iChannel0, fc / iChannelResolution[0].xy).r;\n    float f_scaled = (f - lo) / (hi - lo);\n    \n    //if (f_scaled < d_edge) return lo; else return hi; //  branching version\n    float show = max(sign(d_edge - f_scaled), 0.);\n    return show * lo + (1. - show) * hi;\n}\n\nvec3 dither_color(vec3 c, vec3 bpc, vec2 fc) {\n    //  reduce color depth\n    vec3 c_lo = floor(c * bpc) / bpc;\n    vec3 c_hi = ceil(c * bpc) / bpc;\n    \n    return vec3(dither_between(c.r, c_lo.r, c_hi.r, fc),\n                dither_between(c.g, c_lo.g, c_hi.g, fc),\n                dither_between(c.b, c_lo.b, c_hi.b, fc));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 c = texture(iChannel1, uv).rgb;\n    vec3 bpc = vec3(8., 8., 4.); //  8-bit truecolor bit depth (2^3, 2^3, 2^2)\n    //bpc = vec3(1.); //  1 bit per channel\n    //bpc = vec3(2.); //  2 bits per channel\n    //bpc = vec3(3.); //  etc.\n    fragColor = vec4(dither_color(c, bpc, fragCoord), 1.);\n}","name":"Image","description":"","type":"image"}]}