{"ver":"0.1","info":{"id":"wlKfDh","date":"1614274961","viewed":450,"name":"20210225_CLUB-CAVE-02","username":"FMS_Cat","description":"Originally written in Bonzomatic, in 45 minutes\n\nhttps://twitter.com/killu0_/status/1364144668850589696\n","likes":22,"published":1,"flags":32,"usePreview":1,"tags":["3d","raymarching","fractal","livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=fragCoord.xy/iResolution.xy;\n  fragColor=vec4(texture(iChannel0,uv).xyz,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159165\n#define saturate(i) clamp(i,0.,1.)\n#define lofi(i,j) ( floor( (i) / (j) ) * (j) )\n\nfloat time;\nfloat seed;\n\nmat2 r2d(float t){\n  return mat2(cos(t),sin(t),-sin(t),cos(t));\n}\n\nfloat fs(float s){\n  return fract(sin(s*114.514)*1919.810);\n}\n\nfloat random(){\n  seed=fs(seed);\n  return seed;\n}\n\nvec3 fssphere(float s){\n  float a=PI*2.*fs(s);\n  float b=acos(fs(s+.77)*2.-1.);\n  return vec3(cos(a)*sin(b),cos(b),sin(a)*sin(b));\n}\n\nvec3 randomsphere(){\n  float a=PI*2.*random();\n  float b=acos(random()*2.-1.);\n  return vec3(cos(a)*sin(b),cos(b),sin(a)*sin(b));\n}\n\nvec3 randomhemisphere(vec3 n){\n  vec3 d=randomsphere();\n  return dot(n,d)<.0?-d:d;\n}\n\nvec3 ifs(vec3 p,vec3 rot,vec3 shift)\n{\n  vec3 s=shift;\n  for(int i=0;i<6;i++){\n    p=abs(p)-abs(s);\n    s.yz=r2d(rot.x)*s.yz;\n    s.zx=r2d(rot.y)*s.zx;\n    s.xy=r2d(rot.z)*s.xy;\n    p.xy=p.x<p.y?p.yx:p.xy;\n    p.yz=p.y<p.z?p.zy:p.yz;\n  }\n  return p;\n}\n\nfloat sdbox(vec3 p,vec3 s)\n{\n  vec3 d=abs(p)-s;\n  return min(0.0,max(d.x,max(d.y,d.z))) + length(max(vec3(0),d));\n}\n\nfloat ease(float x,float k)\n{\n  return .5+.5*cos(PI*exp(-k*fract(x)));\n}\n\nvec4 map(vec3 p)\n{\n  vec3 pt=p;\n  pt.z-=time*5.;\n  float ph=lofi(pt.z+1.,2.);\n  pt.z-=ph;\n\n  float ohno=time*145./60.+floor(fs(ph)*99.)+ph*.04;\n  ohno=ease(ohno,5.)+floor(ohno);\n\n  pt.xy=r2d(.47*ohno)*pt.xy;\n  pt.xy=mod(pt.xy-2.5,5.)-2.5;\n\n  float kuri=sdbox(pt,vec3(1.,1.,1E9));\n  float lim=sdbox(pt,vec3(1E9,1E9,.5));\n  vec3 rot1=.2*fssphere(floor(ohno));\n  vec3 rot2=.2*fssphere(floor(ohno+1.));\n  vec3 rot=mix(rot1,rot2,fract(ohno));\n  vec3 sh1=1.+.2*fssphere(floor(ohno+2.));\n  vec3 sh2=1.+.2*fssphere(floor(ohno+3.));\n  vec3 sh=mix(sh1,sh2,fract(ohno));\n  pt=ifs(pt,rot,sh);\n  float d=sdbox(pt,vec3(.7));\n  d=max(d,lim);\n  d=max(d,-kuri);\n  return vec4(d,1,0,0);\n}\n\nvec3 nmap(vec3 p,vec2 d)\n{\n  return normalize(vec3(\n    map(p+d.yxx).x-map(p-d.yxx).x,\n    map(p+d.xyx).x-map(p-d.xyx).x,\n    map(p+d.xxy).x-map(p-d.xxy).x\n  ));\n}\n\nfloat aomap(vec3 p,vec3 n){\n  float accum=0.;\n  for(int i=0;i<32;i++){\n    vec3 delta=(.02+.02*float(i))*randomhemisphere(n);\n    vec3 pt=p+delta;\n    float d=map(pt).x;\n    accum+=smoothstep(.02,.0,d)/32.;\n  }\n  return 1.-sqrt(2.*accum);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=fragCoord.xy/iResolution.xy;\n  vec2 p=(fragCoord.xy*2.-iResolution.xy)/iResolution.y;\n  \n  time=iTime;\n  seed=texture(iChannel0,p).x+fract(time);\n  random();\n  random();\n  time+=.02*seed;\n  \n  float haha=lofi(p.y,.1)+iTime;\n  p.x+=.2*pow(fs(haha),40.)*sign(fs(haha+3.)-.5);\n  float haha2=lofi(p.y,.001)+iTime;\n  p.x+=.2*pow(fs(haha2),20.)*sign(fs(haha2+3.)-.5);\n  \n  vec3 ro=vec3(0,0,0);\n  vec3 rd=normalize(vec3(p,-1));\n  //rd.zx=r2d(-100.0*p.x)*rd.zx;\n  //rd.zx=r2d(-time)*rd.zx;\n\n  float g=0.;\n  vec3 col=vec3(0);\n  float rem=1.;\n  \n  for(int is=0;is<1;is++){\n    float rl=1E-2;\n    vec3 rp=ro+rd*rl;\n    vec4 isect;\n\n    for(int i=0;i<69;i++){//nice\n      isect=map(rp);\n      rl+=isect.x*.7;\n      rp=ro+rd*rl;\n    }\n  \n    float fog=exp(-.1*rl);\n    \n    if(isect.x<1E-2){\n      vec3 n=nmap(rp,vec2(0,1E-3));\n      float ao=aomap(rp,n);\n      g+=ao*fog*rem;\n      float f=1.-abs(dot(rd,n));\n      f=pow(f,5.);\n      rem*=.1+.5*f;\n      \n      ro=rp;\n      rd=reflect(rd,n);\n    }\n  }\n  \n  g=saturate(pow(g,.4545));\n  \n  for(int i=0;i<40;i++){\n    float ph=float(i)/40.;\n    float z=1.-.2*ph*pow(length(p),2.);\n    vec3 tri=saturate(2.-abs(ph*6.-vec3(1.,3.,5.)))/40.*3.;\n    //col=texture(texPreviousFrame,uv).w*tri/13.0;\n    float tex=texture(iChannel1,z*(uv-.5)+.5).w;\n    col+=vec3(saturate(tex-.5))*tri;\n    float flick=1.+.3*sin(100.0*time);\n    col+=9.*vec3(1.,.1,.1)*flick*vec3(saturate(.5-tex))*tri;\n  }\n\n  //col=vec3(texture(texPreviousFrame,uv).w);\n  col*=1.+.1*sin(p.y*500.0+vec3(1.,2.,3.));\n  col*=1.-.3*length(p);\n  col=vec3(\n    smoothstep(.1,.9,col.x),\n    smoothstep(.0,.9,col.y),\n    smoothstep(-.2,1.1,col.z)\n  );\n  \n  fragColor = vec4( col, g );\n}\n","name":"Buffer A","description":"","type":"buffer"}]}